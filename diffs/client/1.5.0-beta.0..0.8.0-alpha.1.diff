diff --git a/apolloschurchapp/.babelrc b/apolloschurchapp/.babelrc
new file mode 100644
index 0000000..25c8292
--- /dev/null
+++ b/apolloschurchapp/.babelrc
@@ -0,0 +1,9 @@
+{
+  "presets": ["module:metro-react-native-babel-preset", "module:react-native-dotenv"],
+  "plugins": [
+    ["@babel/plugin-proposal-decorators", {
+      "legacy": true
+    }],
+    ["@babel/plugin-proposal-export-default-from"]
+  ]
+}
\ No newline at end of file
diff --git a/apolloschurchapp/.env.production b/apolloschurchapp/.env.production
index 8f2e35f..4f37d9c 100644
--- a/apolloschurchapp/.env.production
+++ b/apolloschurchapp/.env.production
@@ -1,5 +1,3 @@
-APP_DATA_URL=https://apollos-church-api-herokuapp-com.global.ssl.fastly.net/
+APP_DATA_URL=https://apollos-church-api.herokuapp.com/
 ONE_SIGNAL_KEY=$ONE_SIGNAL_KEY
-GOOGLE_MAPS_API_KEY=$GOOGLE_MAPS_API_KEY
-STORYBOOK=$STORYBOOK
-SCHEMA_VERSION=$SCHEMA_VERSION
\ No newline at end of file
+ANDROID_URL=doesnotmatter
\ No newline at end of file
diff --git a/apolloschurchapp/.eslintrc.js b/apolloschurchapp/.eslintrc.js
deleted file mode 100644
index 32d9ac8..0000000
--- a/apolloschurchapp/.eslintrc.js
+++ /dev/null
@@ -1,5 +0,0 @@
-module.exports = {
-  extends: [
-    '@apollosproject/eslint-config/client',
-  ],
-}
\ No newline at end of file
diff --git a/apolloschurchapp/.flowconfig b/apolloschurchapp/.flowconfig
index 1319ea1..1043c82 100644
--- a/apolloschurchapp/.flowconfig
+++ b/apolloschurchapp/.flowconfig
@@ -11,26 +11,20 @@
 ; Ignore duplicate module providers
 ; For RN Apps installed via npm, "Libraries" folder is inside
 ; "node_modules/react-native" but in the source repo it is in the root
-node_modules/react-native/Libraries/react-native/React.js
+.*/Libraries/react-native/React.js
 
 ; Ignore polyfills
-node_modules/react-native/Libraries/polyfills/.*
+.*/Libraries/polyfills/.*
 
-; These should not be required directly
-; require from fbjs/lib instead: require('fbjs/lib/warning')
-node_modules/warning/.*
-
-; Flow doesn't support platforms
-.*/Libraries/Utilities/HMRLoadingView.js
-
-[untyped]
-.*/node_modules/@react-native-community/cli/.*/.*
+; Ignore metro
+.*/node_modules/metro/.*
 
 [include]
 
 [libs]
 node_modules/react-native/Libraries/react-native/react-native-interface.js
 node_modules/react-native/flow/
+node_modules/react-native/flow-github/
 
 [options]
 emoji=true
@@ -38,10 +32,6 @@ emoji=true
 esproposal.optional_chaining=enable
 esproposal.nullish_coalescing=enable
 
-module.file_ext=.js
-module.file_ext=.json
-module.file_ext=.ios.js
-
 module.system=haste
 module.system.haste.use_name_reducers=true
 # get basename
@@ -54,46 +44,27 @@ module.system.haste.name_reducers='^\(.*\)\.android$' -> '\1'
 module.system.haste.name_reducers='^\(.*\)\.native$' -> '\1'
 module.system.haste.paths.blacklist=.*/__tests__/.*
 module.system.haste.paths.blacklist=.*/__mocks__/.*
-module.system.haste.paths.whitelist=<PROJECT_ROOT>/node_modules/react-native/Libraries/.*
-module.system.haste.paths.whitelist=<PROJECT_ROOT>/node_modules/react-native/RNTester/.*
-module.system.haste.paths.whitelist=<PROJECT_ROOT>/node_modules/react-native/IntegrationTests/.*
-module.system.haste.paths.blacklist=<PROJECT_ROOT>/node_modules/react-native/Libraries/react-native/react-native-implementation.js
 module.system.haste.paths.blacklist=<PROJECT_ROOT>/node_modules/react-native/Libraries/Animated/src/polyfills/.*
+module.system.haste.paths.whitelist=<PROJECT_ROOT>/node_modules/react-native/Libraries/.*
 
 munge_underscores=true
 
 module.name_mapper='^[./a-zA-Z0-9$_-]+\.\(bmp\|gif\|jpg\|jpeg\|png\|psd\|svg\|webp\|m4v\|mov\|mp4\|mpeg\|mpg\|webm\|aac\|aiff\|caf\|m4a\|mp3\|wav\|html\|pdf\)$' -> 'RelativeImageStub'
 
+module.file_ext=.js
+module.file_ext=.jsx
+module.file_ext=.json
+module.file_ext=.native.js
+
 suppress_type=$FlowIssue
 suppress_type=$FlowFixMe
 suppress_type=$FlowFixMeProps
 suppress_type=$FlowFixMeState
 
-suppress_comment=\\(.\\|\n\\)*\\$FlowFixMe\\($\\|[^(]\\|(\\(<VERSION>\\)? *\\(site=[a-z,_]*react_native\\(_ios\\)?_\\(oss\\|fb\\)[a-z,_]*\\)?)\\)
-suppress_comment=\\(.\\|\n\\)*\\$FlowIssue\\((\\(<VERSION>\\)? *\\(site=[a-z,_]*react_native\\(_ios\\)?_\\(oss\\|fb\\)[a-z,_]*\\)?)\\)?:? #[0-9]+
+suppress_comment=\\(.\\|\n\\)*\\$FlowFixMe\\($\\|[^(]\\|(\\(<VERSION>\\)? *\\(site=[a-z,_]*react_native[a-z,_]*\\)?)\\)
+suppress_comment=\\(.\\|\n\\)*\\$FlowIssue\\((\\(<VERSION>\\)? *\\(site=[a-z,_]*react_native[a-z,_]*\\)?)\\)?:? #[0-9]+
+suppress_comment=\\(.\\|\n\\)*\\$FlowFixedInNextDeploy
 suppress_comment=\\(.\\|\n\\)*\\$FlowExpectedError
 
-[lints]
-sketchy-null-number=warn
-sketchy-null-mixed=warn
-sketchy-number=warn
-untyped-type-import=warn
-nonstrict-import=warn
-deprecated-type=warn
-unsafe-getters-setters=warn
-inexact-spread=warn
-unnecessary-invariant=warn
-signature-verification-failure=warn
-deprecated-utility=error
-
-[strict]
-deprecated-type
-nonstrict-import
-sketchy-null
-unclear-type
-unsafe-getters-setters
-untyped-import
-untyped-type-import
-
 [version]
-^0.98.0
+^0.78.0
diff --git a/apolloschurchapp/.gitignore b/apolloschurchapp/.gitignore
index 98e46cf..12c1116 100644
--- a/apolloschurchapp/.gitignore
+++ b/apolloschurchapp/.gitignore
@@ -1,100 +1,5 @@
 # See https://help.github.com/ignore-files/ for more about ignoring files.
 
-# Logs
-logs
-*.log
-npm-debug.log*
-yarn-debug.log*
-yarn-error.log*
-coverage*
-
-# operating system files
-.DS_Store
-.DS_Store?
-.Spotlight-V100
-.Trashes
-ehthumbs.db
-Thumbs.db
-*.swp
-
-# Runtime data
-pids
-*.pid
-*.seed
-*.pid.lock
-
-
-# Directory for instrumented libs generated by jscoverage/JSCover
-lib-cov
-
-# Coverage directory used by tools like istanbul
-coverage
-
-# nyc test coverage
-.nyc_output
-
-# node-waf configuration
-.lock-wscript
-
-# Compiled binary addons (https://nodejs.org/api/addons.html)
-build/Release
-
-# Dependency directories
-node_modules/
-jspm_packages/
-
-# TypeScript v1 declaration files
-typings/
-
-# Optional npm cache directory
-.npm
-
-# Optional terraform
-.terraform
-source-*.tar.gz
-terraform.tfstate
-terraform.tfstate.backup
-terraform.tfvars
-
-# Optional eslint cache
-.eslintcache
-
-# Optional REPL history
-.node_repl_history
-
-# Output of 'npm pack'
-*.tgz
-
-# Yarn Integrity file
-.yarn-integrity
-
-# dotenv environment variables file
-.env
-.env.storybook
-
-# next.js build output
-.next
-
-# xcode
-build/
-
-# storybook
-storyLoader.js
-*.xcworkspacedata
-
-# sublime text settings
-*.sublime-project
-*.sublime-workspace
-
-# compiled code
-
-**/lib
-
-.watchmanconfig
-
-# generated markdown docs
-packages/**/docs/generated/*
-
 # expo
 .expo/
 
@@ -140,6 +45,3 @@ project.xcworkspace
 .env.development.local
 .env.test.local
 .env.production.local
-
-# CocoaPods
-/ios/Pods/
\ No newline at end of file
diff --git a/apolloschurchapp/.graphqlconfig b/apolloschurchapp/.graphqlconfig
deleted file mode 100644
index bb5a722..0000000
--- a/apolloschurchapp/.graphqlconfig
+++ /dev/null
@@ -1,3 +0,0 @@
-{
-  "schemaPath": "../apollos-church-api/local.graphql"
-}
diff --git a/apolloschurchapp/.npmignore b/apolloschurchapp/.npmignore
new file mode 100644
index 0000000..93f3929
--- /dev/null
+++ b/apolloschurchapp/.npmignore
@@ -0,0 +1,2 @@
+*
+!lib/**
diff --git a/apolloschurchapp/.nvmrc b/apolloschurchapp/.nvmrc
deleted file mode 100644
index 5b7269c..0000000
--- a/apolloschurchapp/.nvmrc
+++ /dev/null
@@ -1 +0,0 @@
-10.19.0
diff --git a/apolloschurchapp/__mocks__/@react-native-community/async-storage/index.js b/apolloschurchapp/__mocks__/@react-native-community/async-storage/index.js
deleted file mode 100644
index a4bf3f4..0000000
--- a/apolloschurchapp/__mocks__/@react-native-community/async-storage/index.js
+++ /dev/null
@@ -1,23 +0,0 @@
-let cache = {};
-export default {
-  setItem: (key, value) =>
-    new Promise((resolve, reject) =>
-      typeof key !== 'string' || typeof value !== 'string'
-        ? reject(new Error('key and value must be string'))
-        : resolve((cache[key] = value))
-    ),
-  getItem: (key, value) =>
-    new Promise((resolve) =>
-      cache.hasOwnProperty(key) ? resolve(cache[key]) : resolve(null)
-    ),
-  removeItem: (key) =>
-    new Promise((resolve, reject) =>
-      cache.hasOwnProperty(key)
-        ? resolve(delete cache[key])
-        : reject('No such key!')
-    ),
-  clear: (key) => new Promise((resolve, reject) => resolve((cache = {}))),
-
-  getAllKeys: (key) =>
-    new Promise((resolve, reject) => resolve(Object.keys(cache))),
-};
diff --git a/apolloschurchapp/__mocks__/@react-native-community/geolocation/index.js b/apolloschurchapp/__mocks__/@react-native-community/geolocation/index.js
deleted file mode 100644
index 0e77776..0000000
--- a/apolloschurchapp/__mocks__/@react-native-community/geolocation/index.js
+++ /dev/null
@@ -1,3 +0,0 @@
-export default {
-  getCurrentPosition: async () => null,
-};
diff --git a/apolloschurchapp/__mocks__/react-native-permissions/index.js b/apolloschurchapp/__mocks__/react-native-permissions/index.js
deleted file mode 100644
index 4d543c8..0000000
--- a/apolloschurchapp/__mocks__/react-native-permissions/index.js
+++ /dev/null
@@ -1 +0,0 @@
-export * from 'react-native-permissions/mock.js';
diff --git a/apolloschurchapp/android/app/BUCK b/apolloschurchapp/android/app/BUCK
index de2c2e2..5392fca 100644
--- a/apolloschurchapp/android/app/BUCK
+++ b/apolloschurchapp/android/app/BUCK
@@ -8,13 +8,23 @@
 # - `buck install -r android/app` - compile, install and run application
 #
 
-load(":build_defs.bzl", "create_aar_targets", "create_jar_targets")
-
 lib_deps = []
 
-create_aar_targets(glob(["libs/*.aar"]))
+for jarfile in glob(['libs/*.jar']):
+  name = 'jars__' + jarfile[jarfile.rindex('/') + 1: jarfile.rindex('.jar')]
+  lib_deps.append(':' + name)
+  prebuilt_jar(
+    name = name,
+    binary_jar = jarfile,
+  )
 
-create_jar_targets(glob(["libs/*.jar"]))
+for aarfile in glob(['libs/*.aar']):
+  name = 'aars__' + aarfile[aarfile.rindex('/') + 1: aarfile.rindex('.aar')]
+  lib_deps.append(':' + name)
+  android_prebuilt_aar(
+    name = name,
+    aar = aarfile,
+  )
 
 android_library(
     name = "all-libs",
diff --git a/apolloschurchapp/android/app/build.gradle b/apolloschurchapp/android/app/build.gradle
index f6c8dbb..6be0c59 100644
--- a/apolloschurchapp/android/app/build.gradle
+++ b/apolloschurchapp/android/app/build.gradle
@@ -10,12 +10,6 @@ buildscript {
 apply plugin: 'com.onesignal.androidsdk.onesignal-gradle-plugin'
 apply plugin: "com.android.application"
 
-project.ext.envConfigFiles = [
-    release: ".env.production",
-]
-
-apply from: project(':react-native-config').projectDir.getPath() + "/dotenv.gradle"
-
 import com.android.build.OutputFile
 
 /**
@@ -59,9 +53,6 @@ import com.android.build.OutputFile
  *   // the root of your project, i.e. where "package.json" lives
  *   root: "../../",
  *
- *   // https://facebook.github.io/react-native/docs/performance#enable-the-ram-format
- *   bundleCommand: "ram-bundle",
- *
  *   // where to put the JS bundle asset in debug mode
  *   jsBundleDirDebug: "$buildDir/intermediates/assets/debug",
  *
@@ -92,8 +83,7 @@ import com.android.build.OutputFile
  */
 
 project.ext.react = [
-    entryFile: "index.js",
-    enableHermes: false,  // clean and rebuild if changing
+    entryFile: "index.js"
 ]
 
 apply from: "../../node_modules/react-native/react.gradle"
@@ -113,53 +103,26 @@ def enableSeparateBuildPerCPUArchitecture = false
  */
 def enableProguardInReleaseBuilds = false
 
-/**
- * The preferred build flavor of JavaScriptCore.
- *
- * For example, to use the international variant, you can use:
- * `def jscFlavor = 'org.webkit:android-jsc-intl:+'`
- *
- * The international variant includes ICU i18n library and necessary data
- * allowing to use e.g. `Date.toLocaleString` and `String.localeCompare` that
- * give correct results when using with locales other than en-US.  Note that
- * this variant is about 6MiB larger per architecture than default.
- */
-def jscFlavor = 'org.webkit:android-jsc:+'
-/**
- * Whether to enable the Hermes VM.
- *
- * This should be set on project.ext.react and mirrored here.  If it is not set
- * on project.ext.react, JavaScript will not be compiled to Hermes Bytecode
- * and the benefits of using Hermes will therefore be sharply reduced.
- */
-def enableHermes = project.ext.react.get("enableHermes", false);
-
 android {
     compileSdkVersion rootProject.ext.compileSdkVersion
-
-    compileOptions {
-        sourceCompatibility JavaVersion.VERSION_1_8
-        targetCompatibility JavaVersion.VERSION_1_8
-    }
+    buildToolsVersion rootProject.ext.buildToolsVersion
 
     defaultConfig {
         applicationId "com.apolloschurch.app"
         minSdkVersion rootProject.ext.minSdkVersion
         targetSdkVersion rootProject.ext.targetSdkVersion
-        versionCode 1
-        versionName "1.0.0"
+        versionCode 5
+        versionName "0.7.0"
         ndk {
-            abiFilters "armeabi-v7a", "x86", "arm64-v8a", "x86_64"
+            abiFilters "armeabi-v7a", "x86"
         }
-        resValue "string", "build_config_package", "com.apolloschurchapp"
-        multiDexEnabled true
     }
     splits {
         abi {
             reset()
             enable enableSeparateBuildPerCPUArchitecture
             universalApk false  // If true, also generate a universal APK
-            include "armeabi-v7a", "x86", "arm64-v8a", "x86_64"
+            include "armeabi-v7a", "x86"
         }
     }
     buildTypes {
@@ -173,7 +136,7 @@ android {
         variant.outputs.each { output ->
             // For each separate APK per architecture, set a unique version code as described here:
             // http://tools.android.com/tech-docs/new-build-system/user-guide/apk-splits
-            def versionCodes = ["armeabi-v7a":1, "x86":2, "arm64-v8a": 3, "x86_64": 4]
+            def versionCodes = ["armeabi-v7a":1, "x86":2]
             def abi = output.getFilter(OutputFile.ABI)
             if (abi != null) {  // null for the universal-debug, universal-release variants
                 output.versionCodeOverride =
@@ -181,28 +144,22 @@ android {
             }
         }
     }
-    packagingOptions {
-        pickFirst '**/armeabi-v7a/libc++_shared.so'
-        pickFirst '**/x86/libc++_shared.so'
-        pickFirst '**/arm64-v8a/libc++_shared.so'
-        pickFirst '**/x86_64/libc++_shared.so'
-        pickFirst '**/x86/libjsc.so'
-        pickFirst '**/armeabi-v7a/libjsc.so'
-    }
 }
 
 dependencies {
+    compile project(':react-native-screens')
+    compile project(':react-native-onesignal')
+    compile project(':react-native-image-picker')
+    compile project(':react-native-music-control')
+    compile project(':react-native-device-info')
+    compile project(':react-native-video')
+    compile project(':react-native-svg')
+    compile project(':react-native-splash-screen')
+    compile project(':react-native-linear-gradient')
+    compile project(':react-native-custom-tabs')
     implementation fileTree(dir: "libs", include: ["*.jar"])
+    implementation "com.android.support:appcompat-v7:${rootProject.ext.supportLibVersion}"
     implementation "com.facebook.react:react-native:+"  // From node_modules
-    implementation 'com.facebook.fresco:animated-gif:2.0.0'
-
-    if (enableHermes) {
-      def hermesPath = "../../node_modules/hermesvm/android/";
-      debugImplementation files(hermesPath + "hermes-debug.aar")
-      releaseImplementation files(hermesPath + "hermes-release.aar")
-    } else {
-      implementation jscFlavor
-    }
 }
 
 // Run this once to be able to run the application with BUCK
@@ -211,6 +168,3 @@ task copyDownloadableDepsToLibs(type: Copy) {
     from configurations.compile
     into 'libs'
 }
-
-
-apply from: file("../../node_modules/@react-native-community/cli-platform-android/native_modules.gradle"); applyNativeModulesAppBuildGradle(project)
diff --git a/apolloschurchapp/android/app/build_defs.bzl b/apolloschurchapp/android/app/build_defs.bzl
deleted file mode 100644
index fff270f..0000000
--- a/apolloschurchapp/android/app/build_defs.bzl
+++ /dev/null
@@ -1,19 +0,0 @@
-"""Helper definitions to glob .aar and .jar targets"""
-
-def create_aar_targets(aarfiles):
-    for aarfile in aarfiles:
-        name = "aars__" + aarfile[aarfile.rindex("/") + 1:aarfile.rindex(".aar")]
-        lib_deps.append(":" + name)
-        android_prebuilt_aar(
-            name = name,
-            aar = aarfile,
-        )
-
-def create_jar_targets(jarfiles):
-    for jarfile in jarfiles:
-        name = "jars__" + jarfile[jarfile.rindex("/") + 1:jarfile.rindex(".jar")]
-        lib_deps.append(":" + name)
-        prebuilt_jar(
-            name = name,
-            binary_jar = jarfile,
-        )
diff --git a/apolloschurchapp/android/app/debug.keystore b/apolloschurchapp/android/app/debug.keystore
deleted file mode 100644
index 364e105ed39fbfd62001429a68140672b06ec0de..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 2257
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
EA81kH<^TWy

diff --git a/apolloschurchapp/android/app/proguard-rules.pro b/apolloschurchapp/android/app/proguard-rules.pro
index 11b0257..a92fa17 100644
--- a/apolloschurchapp/android/app/proguard-rules.pro
+++ b/apolloschurchapp/android/app/proguard-rules.pro
@@ -8,3 +8,10 @@
 #   http://developer.android.com/guide/developing/tools/proguard.html
 
 # Add any project specific keep options here:
+
+# If your project uses WebView with JS, uncomment the following
+# and specify the fully qualified class name to the JavaScript interface
+# class:
+#-keepclassmembers class fqcn.of.javascript.interface.for.webview {
+#   public *;
+#}
diff --git a/apolloschurchapp/android/app/src/debug/AndroidManifest.xml b/apolloschurchapp/android/app/src/debug/AndroidManifest.xml
deleted file mode 100644
index fa26aa5..0000000
--- a/apolloschurchapp/android/app/src/debug/AndroidManifest.xml
+++ /dev/null
@@ -1,8 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<manifest xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:tools="http://schemas.android.com/tools">
-
-    <uses-permission android:name="android.permission.SYSTEM_ALERT_WINDOW"/>
-
-    <application android:usesCleartextTraffic="true" tools:targetApi="28" tools:ignore="GoogleAppIndexingWarning" />
-</manifest>
diff --git a/apolloschurchapp/android/app/src/main/AndroidManifest.xml b/apolloschurchapp/android/app/src/main/AndroidManifest.xml
index 4a73a90..988588b 100644
--- a/apolloschurchapp/android/app/src/main/AndroidManifest.xml
+++ b/apolloschurchapp/android/app/src/main/AndroidManifest.xml
@@ -2,10 +2,9 @@
     package="com.apolloschurchapp">
 
     <uses-permission android:name="android.permission.INTERNET" />
-    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
+    <uses-permission android:name="android.permission.SYSTEM_ALERT_WINDOW"/>
     <uses-permission android:name="android.permission.CAMERA" />
-    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION"/>
-    <uses-permission android:name="android.permission.FOREGROUND_SERVICE" />
+    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE"/>
 
     <application
       android:name=".MainApplication"
@@ -14,45 +13,29 @@
       android:roundIcon="@mipmap/ic_launcher_round"
       android:allowBackup="false"
       android:theme="@style/AppTheme">
-
-      <meta-data
-        android:name="com.google.android.geo.API_KEY"
-        android:value="@string/GOOGLE_MAPS_API_KEY"/>
-
-      <meta-data
-        android:name="com.google.android.gms.cast.framework.OPTIONS_PROVIDER_CLASS_NAME"
-        android:value="com.reactnative.googlecast.GoogleCastOptionsProvider" />
-
-      <activity
-        android:name=".MainActivity"
-        android:label="@string/app_name"
-        android:configChanges="keyboard|keyboardHidden|orientation|screenSize"
-        android:windowSoftInputMode="adjustPan"
-        android:exported="true"
-        android:launchMode="singleTask">
-      </activity>
-
       <activity
-        android:name="com.zoontek.rnbootsplash.RNBootSplashActivity"
-        android:theme="@style/BootTheme"
-        android:launchMode="singleTask">
+        android:name=".LaunchActivity"
+        android:theme="@style/LaunchTheme"
+        android:label="Apollos Church">
         <intent-filter>
             <action android:name="android.intent.action.MAIN" />
             <category android:name="android.intent.category.LAUNCHER" />
         </intent-filter>
-        <intent-filter android:autoVerify="true">
+        <intent-filter android:label="filter_react_native">
           <action android:name="android.intent.action.VIEW" />
           <category android:name="android.intent.category.DEFAULT" />
           <category android:name="android.intent.category.BROWSABLE" />
-
-          <!-- Handle urls starting with "http://www.example.com/products" -->
-          <data android:scheme="https"
-                android:host="apollos-church-api.herokuapp.com"
-                android:pathPrefix="/app-link" />
-          <data android:scheme="http" />
+          <data android:scheme="peopleapp" android:host="people" /> // A
         </intent-filter>
       </activity>
-
+      <activity
+        android:name=".MainActivity"
+        android:label="@string/app_name"
+        android:configChanges="keyboard|keyboardHidden|orientation|screenSize"
+        android:windowSoftInputMode="adjustPan"
+        android:launchMode="singleTask"
+      />
       <activity android:name="com.facebook.react.devsupport.DevSettingsActivity" />
     </application>
+
 </manifest>
diff --git a/apolloschurchapp/android/app/src/main/java/com/apolloschurchapp/LaunchActivity.java b/apolloschurchapp/android/app/src/main/java/com/apolloschurchapp/LaunchActivity.java
new file mode 100644
index 0000000..6c4d404
--- /dev/null
+++ b/apolloschurchapp/android/app/src/main/java/com/apolloschurchapp/LaunchActivity.java
@@ -0,0 +1,16 @@
+package com.apolloschurchapp;
+
+import android.content.Intent;
+import android.os.Bundle;
+import android.support.v7.app.AppCompatActivity;
+
+public class LaunchActivity extends AppCompatActivity {
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+
+        Intent intent = new Intent(this, MainActivity.class);
+        startActivity(intent);
+        finish();
+    }
+}
\ No newline at end of file
diff --git a/apolloschurchapp/android/app/src/main/java/com/apolloschurchapp/MainActivity.java b/apolloschurchapp/android/app/src/main/java/com/apolloschurchapp/MainActivity.java
index 4790556..0b9f1ce 100644
--- a/apolloschurchapp/android/app/src/main/java/com/apolloschurchapp/MainActivity.java
+++ b/apolloschurchapp/android/app/src/main/java/com/apolloschurchapp/MainActivity.java
@@ -1,13 +1,14 @@
 package com.apolloschurchapp;
 import android.os.Bundle;
 import com.facebook.react.ReactActivity;
-import com.facebook.react.ReactActivityDelegate;
-import com.facebook.react.ReactRootView;
-import com.swmansion.gesturehandler.react.RNGestureHandlerEnabledRootView;
-import com.zoontek.rnbootsplash.RNBootSplash;
-import com.facebook.react.GoogleCastActivity;
+import org.devio.rn.splashscreen.SplashScreen;
 
-public class MainActivity extends GoogleCastActivity {
+public class MainActivity extends ReactActivity {
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        SplashScreen.show(this, R.style.SplashScreenTheme);
+        super.onCreate(savedInstanceState);
+    }
     /**
      * Returns the name of the main component registered from JavaScript.
      * This is used to schedule rendering of the component.
@@ -16,20 +17,4 @@ public class MainActivity extends GoogleCastActivity {
     protected String getMainComponentName() {
         return "apolloschurchapp";
     }
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        RNBootSplash.init(R.drawable.bootsplash, com.apolloschurchapp.MainActivity.this);
-    }
-
-    @Override
-    protected ReactActivityDelegate createReactActivityDelegate() {
-      return new ReactActivityDelegate(this, getMainComponentName()) {
-        @Override
-        protected ReactRootView createRootView() {
-         return new RNGestureHandlerEnabledRootView(MainActivity.this);
-        }
-      };
-    }
 }
diff --git a/apolloschurchapp/android/app/src/main/java/com/apolloschurchapp/MainApplication.java b/apolloschurchapp/android/app/src/main/java/com/apolloschurchapp/MainApplication.java
index 0bdd47f..95e9084 100644
--- a/apolloschurchapp/android/app/src/main/java/com/apolloschurchapp/MainApplication.java
+++ b/apolloschurchapp/android/app/src/main/java/com/apolloschurchapp/MainApplication.java
@@ -1,12 +1,18 @@
 package com.apolloschurchapp;
 
 import android.app.Application;
-import android.util.Log;
 
-import com.facebook.react.PackageList;
-import com.facebook.hermes.reactexecutor.HermesExecutorFactory;
-import com.facebook.react.bridge.JavaScriptExecutorFactory;
 import com.facebook.react.ReactApplication;
+import com.swmansion.rnscreens.RNScreenPackage;
+import com.geektime.rnonesignalandroid.ReactNativeOneSignalPackage;
+import com.imagepicker.ImagePickerPackage;
+import com.tanguyantoine.react.MusicControl;
+import com.learnium.RNDeviceInfo.RNDeviceInfo;
+import com.brentvatne.react.ReactVideoPackage;
+import com.horcrux.svg.SvgPackage;
+import org.devio.rn.splashscreen.SplashScreenReactPackage;
+import com.BV.LinearGradient.LinearGradientPackage;
+import com.github.droibit.android.reactnative.customtabs.CustomTabsPackage;
 import com.facebook.react.ReactNativeHost;
 import com.facebook.react.ReactPackage;
 import com.facebook.react.shell.MainReactPackage;
@@ -25,11 +31,19 @@ public class MainApplication extends Application implements ReactApplication {
 
     @Override
     protected List<ReactPackage> getPackages() {
-      @SuppressWarnings("UnnecessaryLocalVariable")
-      List<ReactPackage> packages = new PackageList(this).getPackages();
-      // Packages that cannot be autolinked yet can be added manually here, for example:
-      // packages.add(new MyReactNativePackage());
-      return packages;
+      return Arrays.<ReactPackage>asList(
+          new MainReactPackage(),
+            new RNScreenPackage(),
+            new ReactNativeOneSignalPackage(),
+            new ImagePickerPackage(),
+            new MusicControl(),
+            new RNDeviceInfo(),
+            new ReactVideoPackage(),
+            new SvgPackage(),
+            new SplashScreenReactPackage(),
+            new LinearGradientPackage(),
+            new CustomTabsPackage()
+      );
     }
 
     @Override
diff --git a/apolloschurchapp/android/app/src/main/res/drawable/background_splash.xml b/apolloschurchapp/android/app/src/main/res/drawable/background_splash.xml
new file mode 100644
index 0000000..4f85728
--- /dev/null
+++ b/apolloschurchapp/android/app/src/main/res/drawable/background_splash.xml
@@ -0,0 +1,13 @@
+<?xml version="1.0" encoding="utf-8"?>
+<layer-list xmlns:android="http://schemas.android.com/apk/res/android">
+
+    <item
+        android:drawable="@color/deep_water"/>
+
+    <item
+        android:width="95.28dp"
+        android:height="100dp"
+        android:top="-24dp"
+        android:drawable="@mipmap/splash_icon"
+        android:gravity="center" />
+</layer-list>
diff --git a/apolloschurchapp/android/app/src/main/res/drawable/bootsplash.xml b/apolloschurchapp/android/app/src/main/res/drawable/bootsplash.xml
deleted file mode 100644
index 1bf5acb..0000000
--- a/apolloschurchapp/android/app/src/main/res/drawable/bootsplash.xml
+++ /dev/null
@@ -1,9 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-
-<layer-list xmlns:android="http://schemas.android.com/apk/res/android" android:opacity="opaque">
-    <item android:drawable="@color/bootsplash_background" />
-
-    <item>
-        <bitmap android:src="@mipmap/bootsplash_logo" android:gravity="center" />
-    </item>
-</layer-list>
diff --git a/apolloschurchapp/android/app/src/main/res/layout/launch_screen.xml b/apolloschurchapp/android/app/src/main/res/layout/launch_screen.xml
new file mode 100644
index 0000000..0009481
--- /dev/null
+++ b/apolloschurchapp/android/app/src/main/res/layout/launch_screen.xml
@@ -0,0 +1,13 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:orientation="vertical"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:background="@color/deep_water"
+    android:gravity="center">
+
+    <ImageView
+        android:layout_width="95.28dp"
+        android:layout_height="100dp"
+        android:src="@mipmap/splash_icon" />
+</LinearLayout>
diff --git a/apolloschurchapp/android/app/src/main/res/mipmap-hdpi/bootsplash_logo.png b/apolloschurchapp/android/app/src/main/res/mipmap-hdpi/bootsplash_logo.png
deleted file mode 100644
index 91aa886e1c9ba6989d0903283a0d769a7a2ae8ed..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 3638
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

diff --git a/apolloschurchapp/android/app/src/main/res/mipmap-hdpi/ic_launcher_round.webp b/apolloschurchapp/android/app/src/main/res/mipmap-hdpi/ic_launcher_round.webp
index f77fb4bc60914a3e469a4761dacc5b047738fcca..42aa619f04951d7e857d309cb6326bc2479fe766 100644
GIT binary patch
literal 1056
zcmV+*1mF8oNk&E(1ONb6MM6+kP&iBr1ONapFTe{BH|8jkWLc@do<1N6{}NF0{xZ{b
z!~(;%Z6opaANZ|pNRcEtl49iR1f=7S;!x<Gihx_&wrXXb`vup?C8Q6EAR?s!+94<U
zA!RU#+}$0Xd`|$xA5Z}SDj>iB2oNBFItY-!AgF>WsDlKCKn+w?<9xn)E(|U<E;cp}
zM*WX87X1$!qf|CIvPojoM@G-RBx11XGy2HJrN5EHBxgMLl7*!{B{HdZu}NZdKaWK9
zK4@~1C`bK|MECPBGU{J_h7Ch~BS$v%E^cFoO@c%$4vB1RToN(3Fi?6bK!7gDK&CSB
zIoUe$O_tz76tmrA>x0n=ji>;7*kVF}1lrTJ4Q4*7AFw2#Tn&V|>Z*S<5p__2OF4yO
zf3eS_9aY6~wL8Zbv%9+|+dkW_o42hvyc9p5>+x)YnPxjI%LBcNXSq_IP`%q<_Ly#2
zEl{l38h-wZ8)08$i*0SP|DOJxeh%79JyyE>oy1yIt=s>Xn*RFO{&?>}!nSQ^-im+T
zH^qnA);-&{ZF}pi`mJqiwr$(nA4~E+NsmSJe*)<Lc=u+*t($iTN@HC`X|YmD6_-}j
zHM(}YzDzO8>TkPoqqamjSW<h#DRI42Ib3>OIFeOeq#Q4*&T`;RrE<0M4(ngJa=H8;
zLslu*tE85wQOvxYoSd9ohN=-7;#whR7644(6kZc{?>ZIp@E{X*F;wR}8*xQ(*TQlM
zM_mzCe>+%{tw!Z=I{sS7tBSh^wp%#rsx$>%W-SFUb}E25tjj^Bw{4u<(Eyfh05JFn
zr|m5f$$N^s4FGl@9Rgq-N8OV|ftOhG0E}-}vjI$DT?!=fT;LoV3Sfm&8v$S+=YogG
zcZRbb0QM?%Vkm&+oHITme-CFmfQd>eH5b5`JVuY7D71xf0035*HUq$RMoTDBSQlfZ
zX}{^@Z~zM!U13C_{dxuC08Cbv^8pMyuGb$*6mn5-2LP<L+6n+0^e%=F`S0s3GG$wx
z9tmKE-hDrj_o>#Y5dfws+l2s-t@YGP6#P+Z69BAjx7}u1rS&nG$cX9FnQ7vVZ`bIH
zF^DMiiN--Vx>Msx7!i@@eWBeNXBOKPe(;!#xJP!AoEe#K^C-?R3IEp?tM)?<+q8W3
z3lka9&#c^j7HyEV_s7|RaQ26nY-QxPZuh#sMM^sgi2dB^R_o{30MZRgeAD7i%bUa?
z(iWbiFTHN`eo68OJrbUT@8_L6_dUTQh${l4f4}T@ru*gZ=s-aZ8sRCwo;UNFpZ`h;
zH^^BT9F_L-^}{BeriZV8rbPuya$I^NlQRB%diCP*g9nday!!MfBPr4=$yFKTi-=E7
aP0!3sPfd=G@C8X4fI>=X7*a|>P67a|pzpu{

literal 1876
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
O4L`T#9A8WR=9>eIC7pZ#

diff --git a/apolloschurchapp/android/app/src/main/res/mipmap-hdpi/splash_icon.png b/apolloschurchapp/android/app/src/main/res/mipmap-hdpi/splash_icon.png
new file mode 100644
index 0000000000000000000000000000000000000000..b1b851625355ccdf330cf3ed364ca0a5e691b213
GIT binary patch
literal 883
zcmeAS@N?(olHy`uVBq!ia0vp^dw}>D2Q!e2*ORgXQak}ZA+GKPK0kka1)?9{zjSR#
z-3=6HE(!7rX1JW1yZiW6AWzuS#WAGf*3(<jd3OQ?m@g(4|F1sB^yz@c(gnK&56wR&
z>MDD>!FK+1qyA5kQ(rDV^Yl|}=steq_V#?Sss7d1eYJONyt2h|%`)3H%jWLRx+N2K
zSuX7IxmeR&zSWuh{P)lGeJa1ZrF{AP|66MKR)1VR|Mb&fq1dx`UoO{}cy+^ztQzws
zsoTC@i&yP@oz^8B$lGsWbH3u~`&}=!FShM}t@bw7{O#SB&x?M3S=*6SaV+@o<ilA~
zfxPD{vMQ8TJ&atL)*u~wR{cQl8nyfPQd%GGzrb+k#Z&WLKX(ZhJm%kj!B<X%DKEv8
z|IQgJ(*wQh*>+sK%3!`tD&SuD=MTSkd-Kk?7xsBajo7N6HM@?TwV5HfW8-Q4lFtc8
zOY@%PSF!9Uya&?Nw&UZ~A9?$7K7Rhpo>v1DS;qzxNig3x>v>*Uqtt_AVa)G#OJ6B4
z-zW9%Soq`Jl3VWX$ZPWz{~F4#$9D(h#f67M3z)Akn9q`W;}&xGZbjCQzt@3uN7fE$
z-`)q$LQU`Vu4vmWc(uTM@v4t^_xv|ke%Krh(lANto!T;pshm6H3Kp+?_%wUf!#o#=
zhL2Z1=vu9ly6?O8lPOT|EU7xBa^nQGH)$-UP0~Lecd7i-18N4@2(rnu_r01AZ#giG
z%aaji2wwS-cj)@Vr^+h??*y3clU{eM+}L~B%Z;D@)NJT^m$s)|a=zVzjJs#&-M_zf
zfm_k%n6vv!K}IYF8c_pu#`?D1AAxqq^uBLf{qb%A(1d~|57_>k_AXFf(fHIo{P5i$
zSwFti^m06v1*%@&HvK)=*Sz~<KpwF%z2p0@QR+T#z~kKyfdR!F_TkQlPy3`lu-KZ{
zRNVJ<sJwf&IXKQIuFyDE{==U?JOPW<9nRi+S-i8xpJl~Ot6IJ3?<X>t*0HU)C~UAt
zKA>*#?0cREKK#D3Wbf-`(}fls;}6(;);C|(p?ALc)g5_Nx{O(7zVi=1UCv&->korz
x6;s>y=F`9Ps*D>C|ISm}?-O40SM&2v#$_E>r|&3JE(Ycn22WQ%mvv4FO#oE~!(ada

literal 0
HcmV?d00001

diff --git a/apolloschurchapp/android/app/src/main/res/mipmap-mdpi/bootsplash_logo.png b/apolloschurchapp/android/app/src/main/res/mipmap-mdpi/bootsplash_logo.png
deleted file mode 100644
index 7065a802c74262b1d4290fe4a98c7c025a95d435..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 2202
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
Lj$+){mU#OAxYp}m

diff --git a/apolloschurchapp/android/app/src/main/res/mipmap-mdpi/ic_launcher_round.webp b/apolloschurchapp/android/app/src/main/res/mipmap-mdpi/ic_launcher_round.webp
index 42aa619f04951d7e857d309cb6326bc2479fe766..f77fb4bc60914a3e469a4761dacc5b047738fcca 100644
GIT binary patch
literal 1876
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
O4L`T#9A8WR=9>eIC7pZ#

literal 1056
zcmV+*1mF8oNk&E(1ONb6MM6+kP&iBr1ONapFTe{BH|8jkWLc@do<1N6{}NF0{xZ{b
z!~(;%Z6opaANZ|pNRcEtl49iR1f=7S;!x<Gihx_&wrXXb`vup?C8Q6EAR?s!+94<U
zA!RU#+}$0Xd`|$xA5Z}SDj>iB2oNBFItY-!AgF>WsDlKCKn+w?<9xn)E(|U<E;cp}
zM*WX87X1$!qf|CIvPojoM@G-RBx11XGy2HJrN5EHBxgMLl7*!{B{HdZu}NZdKaWK9
zK4@~1C`bK|MECPBGU{J_h7Ch~BS$v%E^cFoO@c%$4vB1RToN(3Fi?6bK!7gDK&CSB
zIoUe$O_tz76tmrA>x0n=ji>;7*kVF}1lrTJ4Q4*7AFw2#Tn&V|>Z*S<5p__2OF4yO
zf3eS_9aY6~wL8Zbv%9+|+dkW_o42hvyc9p5>+x)YnPxjI%LBcNXSq_IP`%q<_Ly#2
zEl{l38h-wZ8)08$i*0SP|DOJxeh%79JyyE>oy1yIt=s>Xn*RFO{&?>}!nSQ^-im+T
zH^qnA);-&{ZF}pi`mJqiwr$(nA4~E+NsmSJe*)<Lc=u+*t($iTN@HC`X|YmD6_-}j
zHM(}YzDzO8>TkPoqqamjSW<h#DRI42Ib3>OIFeOeq#Q4*&T`;RrE<0M4(ngJa=H8;
zLslu*tE85wQOvxYoSd9ohN=-7;#whR7644(6kZc{?>ZIp@E{X*F;wR}8*xQ(*TQlM
zM_mzCe>+%{tw!Z=I{sS7tBSh^wp%#rsx$>%W-SFUb}E25tjj^Bw{4u<(Eyfh05JFn
zr|m5f$$N^s4FGl@9Rgq-N8OV|ftOhG0E}-}vjI$DT?!=fT;LoV3Sfm&8v$S+=YogG
zcZRbb0QM?%Vkm&+oHITme-CFmfQd>eH5b5`JVuY7D71xf0035*HUq$RMoTDBSQlfZ
zX}{^@Z~zM!U13C_{dxuC08Cbv^8pMyuGb$*6mn5-2LP<L+6n+0^e%=F`S0s3GG$wx
z9tmKE-hDrj_o>#Y5dfws+l2s-t@YGP6#P+Z69BAjx7}u1rS&nG$cX9FnQ7vVZ`bIH
zF^DMiiN--Vx>Msx7!i@@eWBeNXBOKPe(;!#xJP!AoEe#K^C-?R3IEp?tM)?<+q8W3
z3lka9&#c^j7HyEV_s7|RaQ26nY-QxPZuh#sMM^sgi2dB^R_o{30MZRgeAD7i%bUa?
z(iWbiFTHN`eo68OJrbUT@8_L6_dUTQh${l4f4}T@ru*gZ=s-aZ8sRCwo;UNFpZ`h;
zH^^BT9F_L-^}{BeriZV8rbPuya$I^NlQRB%diCP*g9nday!!MfBPr4=$yFKTi-=E7
aP0!3sPfd=G@C8X4fI>=X7*a|>P67a|pzpu{

diff --git a/apolloschurchapp/android/app/src/main/res/mipmap-mdpi/splash_icon.png b/apolloschurchapp/android/app/src/main/res/mipmap-mdpi/splash_icon.png
new file mode 100644
index 0000000000000000000000000000000000000000..78e8e3296b2d76a3c5ad8e3cf20fb611a442888b
GIT binary patch
literal 460
zcmV;-0W<!IP)<h;3K|Lk000e1NJLTq003S9003hG0{{R3Z&+WB0000CP)t-sM{rE}
z`Stnu_4xPnMjB-$00003bW%=J09vp7OV4=#00C@CL_t(|0j1PIj@2*>#__*{M|#WL
zfVlxjAV*-sj>Ggiu;K{45nUpP2;x!8Q^y@uZ@!iFe#&d?G!^#9SAbt%h<P{urDM@!
zA#Z?UMdhA$2Fn=`!T#fUhOkfrXawOZlmHS}Xarkvn;`br-VDv4J`BpqkroH~8T?K_
zF^~j)*bfo5)%Rym9hhOg!;-*erNeRt4Hy`NcX?Rrm!T)1|6u^gb=Uxhf=`5DTaUn!
z!U{xaci62auw^iqL3jx_hhor^>r6Lza=0Bpd>Cpl9Evw?K)V8#6$h)nV^EL487v%T
zqJCx==mGxZVCfE43<o*DPb>l8cnynvIXj-V1GXP~(z3&+2<*@dY$neyVGYAl5F%&-
zTZF+3I)Nn6BlHLb>IAeIMuaVaHbb3(HNZMUA%Ha@N7xL!@f75n!4p6+fX{>!Ds!Zr
z0Ix#JpgsU9WYI@JQxMAS1b9Evz=s?fA9Gj=dD>sCK)iIgo&2!?0000<MNUMnLSTaD
CX}$#j

literal 0
HcmV?d00001

diff --git a/apolloschurchapp/android/app/src/main/res/mipmap-xhdpi/bootsplash_logo.png b/apolloschurchapp/android/app/src/main/res/mipmap-xhdpi/bootsplash_logo.png
deleted file mode 100644
index 8abde463f8c0ef768813aaf2923d8bdd3397f1b3..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 5175
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
Ph@c1U4}7qPb@smj4)~Vv

diff --git a/apolloschurchapp/assets/bootsplash_logo_original.png b/apolloschurchapp/android/app/src/main/res/mipmap-xhdpi/splash_icon.png
similarity index 100%
rename from apolloschurchapp/assets/bootsplash_logo_original.png
rename to apolloschurchapp/android/app/src/main/res/mipmap-xhdpi/splash_icon.png
diff --git a/apolloschurchapp/android/app/src/main/res/mipmap-xxhdpi/bootsplash_logo.png b/apolloschurchapp/android/app/src/main/res/mipmap-xxhdpi/bootsplash_logo.png
deleted file mode 100644
index e15c3c505216e927314b583a1d36afb075fb307a..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 11284
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

diff --git a/apolloschurchapp/android/app/src/main/res/mipmap-xxhdpi/splash_icon.png b/apolloschurchapp/android/app/src/main/res/mipmap-xxhdpi/splash_icon.png
new file mode 100644
index 0000000000000000000000000000000000000000..74c040f7252c2d5230174c667841fd7e572a7f9f
GIT binary patch
literal 1281
zcmeAS@N?(olHy`uVBq!ia0y~yV3Y!4O%7(DNOiMpH<029@Ck8sFYx*K<0}yT`2MA9
zL+WmzICDvmUogYT)VtGc`4|{j7J9lkhE&{obK5Y_*^q}NaPqGIbD5XiKO}KDUha)T
z?H5fuMc=r$P2c7i|9GDIre?`hy|WL`p1wZke2D+Xwac$u3C?+~x%I2a>g6}C1!uj|
z4D;Xk_R^ANi#xvx_T^4jGp%h&{wi|2%FEaG=qt@_U#HBf>dLiUx@}$(STq+b8awMs
ziOEL0Ltvf#1#9LdMf<N@xje%5=(c%5!TuY;T9(aAy1n#e#=Z6Z1v$G-R=&&tnV{#J
z^~>ECr-s;BH_BiJZ-W^;u{vtE#)rzsVp|!G?sDbbS+QN?Q(<19w}(PtntzUo`&-T~
zqw1n=r|Ij&w*ENW7kVX$kJ+WtHZd^!>lf=qMLQKGcC2{(^@wYvZDHVIAYBQhqx@s0
zToV?53gl)2xpw|pf!!hzu7&=2fiJSREZU*Ibp_-1IquA57oK-^U#fbvIC8bR-m41R
zzvT|vpO%Q3K5+&qTC4Hy<>N(euRFUxRXtj?W!?^rPW8<zT(7SdJ!*SbpX*58b)Bq>
z;u)?V-6OQSsyB5#nkOfq`hf*(rS^v<vS&ZcJ%5%l)Ar-VH9*ItewbpdvR+;9)T_?!
zS=H0p<YQE_ZtjW(Iw~sg&g3wW?<r!YFPyeQ>^-T~RecF)Ajlc3HQssZzKUkQ=Nz?G
zUC--*=Jxxw9fhZDJb_wM9N*V>@V}_tt<tF8z2fJqNd8QaJAu}C0i6x>*`hr_E=U`~
z7c1s}RuMjGJJa>7a=Oim-_xH>;8uLAUt!c;^`fPE|BBSbhTT%nUas6K3DkB9sBIH4
zd_ZiV&E)~BfkDb?QyV_zps;x9X7$Y)6-K~d^3>tFH#1Bme%5i<wPhwTQw{{@ysPOD
zw-WE3CCyhF0E?C|{~8kz`|e9mp#MMt1`Xzu+FANhj}8k}be)Y|^dfN$(AOJRG+ti<
z4Cq+ZR~f)41lbFUN;m&M>;6RpV=D{OpDVO&DqY|90zKTg{7Rfc*SodAP<<k5`r$jb
zi|qr>vIyl5Q)V5$^}MeBgNi_D_wqZ9nl?{+-|e^lw>6)Axgc|(fXnyte~#7+!9Ok-
zbkAPJ!m_xoS+7bV>twKg)*<2iTk@YCo-Mt*W_jEdaoe|DtL9s4YrTz1cl|mq4T!^l
zxXd;7w;hP%2E=i)zBj{d&UU@BT?@p2#RDZju-Mwnx<2pM>18<wE;9#4&#Maj{>y)B
zXyD%Ev4LM*AST8BUJ(ft0AY{>jBOhDXTjf~GoK6B?>=<7s_M`pbsztTFD^$fCdl!M
z=_kID;eDps<LZCqCFf;fG26i95b3$|3~UoG3YS(LdX%xkLh8)ogNxKbO5J&}srk}!
z^kTsCiwSXuBA~{Fd}(>f**$N?W#MJZ?Oo>n)ti5w-(lDNH(C?cZUvTI44$rjF6*2U
FngCdzb!Pwo

literal 0
HcmV?d00001

diff --git a/apolloschurchapp/android/app/src/main/res/mipmap-xxxhdpi/bootsplash_logo.png b/apolloschurchapp/android/app/src/main/res/mipmap-xxxhdpi/bootsplash_logo.png
deleted file mode 100644
index d13b1b28b0fc319bfb459c4a9736406a025b0901..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 17960
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
V1KEJyB|-oI002ovPDHLkV1lI(&C~z@

diff --git a/apolloschurchapp/android/app/src/main/res/mipmap-xxxhdpi/splash_icon.png b/apolloschurchapp/android/app/src/main/res/mipmap-xxxhdpi/splash_icon.png
new file mode 100644
index 0000000000000000000000000000000000000000..720ea33a6018381e6d1bcb89a270230d188aae59
GIT binary patch
literal 1701
zcmZuy3rtg2818hbqUDja>gZI)t3D7Bd#jRR5vb5&ZwumsVzw&JUAw7aI;$|u)&K%_
zr4&<pL0Gg@lNIQ!&dCr&1xsCNxQ%yn5-^G|rwP!Cw4sBY-pVj@NpJq1|NiIuzW+bp
z$t_P6B>OI+FCvjhzC12xCyDf)6g+1Z&Ig&1ZM<3#D5?Bi+mny*UCs&cb56dhFy#IM
z^7D`G6r__(htkCl?vY63?L1EWF6kdH`_m3CkEU_buAQ7I{3#)e;Yu|nOAhT9d~qw4
zHsbU7WPnJsikYK6(eP{4C(Tni{NmcF&zghxAsJNO9W;rKb1(y=x|Ah{^yS(EaG0+I
z?KCph4h&WHSB#QJ+m?3K7BS=wlv2;?3$1^vjP6C?(s9U((Dztm1666`dISJLQXEo9
zRl<UZc2)O@NNu!>Pak0^OIb>Ycn^p|kPI954hj%BvV52+#W`I@9jNdC#Xf=AJxxvl
zedJnI_mHZ;q6J`v%6rN%sd<5y&+=GAU1CN5yn00!7%RD8Gr!Y~<<br#LrCxHh^LQC
z*cwHuRdUD43_AXSTfvv*Tl$`e643??*^0^(QoL&TV-=*2Vfae84l_{K%gwfHU7;$d
z_k|C_XZIN4HEiWDU5}9C`0SXbY`)ONK|9eTG<rQw!wfp<-Ii)%rU_^a5j}l@ytie~
zY(KJ$hB%Lz3Kv+>R_F7!=}4ja4k{gsP&-<!6GzAOJ&l1XRtXd_U19&)yRihSoQKz7
zZ3RCLZ}m1kH@%8ZYjg&cQoQ>%`YF2Cy(%-<V$QW+YCHgspB8(I%b`a=rO~?}4)|gI
z6<t+c*Ke_YDc->Y9#vjLC9A_O_1CW<$KBfxhx$r(BCj=!Q@|Xw!E^3QLC@RjtKL4i
zlgR7wtuyxk)!Zp&jY+=JyE+;J9mXb~y~pELV1_)EYS1Se4znyPJbtF18!$gUfa#oR
zcqYE9`2nkT%{v%i2^;!el+L5BuTevC)(+H!PMybIQasKe+==$1iFDkp^IC=`#c7Az
znS_0m*O){Dw88N}!op{DLGEx^<_?yd;-ci8BiJi^9fFn=L?IcDtAw{LuRyMDbfLS~
zpyU3oA;iBi@sqR1-@XBJ)(*qm4?0IZxZyC(CG-P(8PyEKa7kQC{N>h?0-j?6k3F)X
z;s0F?h8tt(Aq?(4130nsL%rx5h5iOP2zW1VEMm;Zer!lMQOCBAT+}}FwxSviU;Hc>
z&hbUoO1M-|=Woz8w`LJ{vlb<;>Cw#^a1~pO!_|x{rNro#?X!uy^F1{{y^8C=I)gCC
z6g3NBqGN3s+Ww-9mA3eONdhw9vc3rSP_X+^$1QO$%0>6?GiuBAH^4K?ZOizQ;5XAT
z4qoM9>U%shLt!!HEVE$ccd^KH4XahKQoP#V^RMD={q<5v$<iWA%{K{@Y|Hdi@L!LL
z@Bh31EO@Jr@e54`aK@y*q-<X#M8Zu6JpzG{OuRb<RJ;*zp~Oyfr(~($poYV_@;$xX
z=*5;upk=mFKJaW#;B1nZosBY0sP?duI|yB^w?iaXr<3q19YC-ooM^vU#xy3~KbA`f
zp^6-~ffeUB1#sd6+BU0C_4?gTicDOxXxqAr1AnWqT}^4|Wmbynx^AXS(!^`Oe{=GD
z!(?HmQ9ZP*II3flOtHmzis@2!Y>+8_&J0aQyK5L1AmtkP>ANv&Oc_}8ba@d631K=<
zCl}?U*v?^`8pg&(r0(5FVQ-Wju9GQN!#U)^EefZpMi<>!4p#r&MN|Q9rnCD-W@rjk
rgFyl$#1p;PeD6Xlbgc+_9c%Tcz1$<+5u@>Zen`CS0#0+n{%`*Q5P&AG

literal 0
HcmV?d00001

diff --git a/apolloschurchapp/android/app/src/main/res/values-v21/styles.xml b/apolloschurchapp/android/app/src/main/res/values-v21/styles.xml
index 9d05c85..5a4019d 100644
--- a/apolloschurchapp/android/app/src/main/res/values-v21/styles.xml
+++ b/apolloschurchapp/android/app/src/main/res/values-v21/styles.xml
@@ -5,9 +5,14 @@
         <!-- Customize your theme here. -->
     </style>
 
-    <style name="BootTheme" parent="Theme.AppCompat.Light.NoActionBar">
-        <item name="android:windowBackground">@drawable/bootsplash</item>
-        <item name="android:statusBarColor">@android:color/transparent</item>
+    <style name="LaunchTheme" parent="Theme.AppCompat.Light.NoActionBar">
+        <item name="android:windowBackground">@drawable/background_splash</item>
+        <item name="android:statusBarColor">@color/deep_water</item>
+    </style>
+
+    <style name="SplashScreenTheme" parent="SplashScreen_SplashTheme">
+        <item name="android:statusBarColor">@color/deep_water</item>
+        <item name="colorPrimaryDark">@color/deep_water</item>
     </style>
 
 </resources>
diff --git a/apolloschurchapp/android/app/src/main/res/values/colors.xml b/apolloschurchapp/android/app/src/main/res/values/colors.xml
index 32f27df..348fc25 100644
--- a/apolloschurchapp/android/app/src/main/res/values/colors.xml
+++ b/apolloschurchapp/android/app/src/main/res/values/colors.xml
@@ -1,5 +1,4 @@
 <?xml version="1.0" encoding="utf-8"?>
 <resources>
-    <color name="primary">#00676D</color>
-    <color name="bootsplash_background">#00676D</color>
-</resources>
+    <color name="deep_water">#00676D</color>
+</resources>
\ No newline at end of file
diff --git a/apolloschurchapp/android/app/src/main/res/values/styles.xml b/apolloschurchapp/android/app/src/main/res/values/styles.xml
index b6325b7..328c4be 100644
--- a/apolloschurchapp/android/app/src/main/res/values/styles.xml
+++ b/apolloschurchapp/android/app/src/main/res/values/styles.xml
@@ -5,8 +5,12 @@
         <!-- Customize your theme here. -->
     </style>
 
-    <style name="BootTheme" parent="Theme.AppCompat.Light.NoActionBar">
-        <item name="android:windowBackground">@drawable/bootsplash</item>
+    <style name="LaunchTheme" parent="Theme.AppCompat.Light.NoActionBar">
+        <item name="android:windowBackground">@drawable/background_splash</item>
+    </style>
+
+    <style name="SplashScreenTheme" parent="SplashScreen_SplashTheme">
+        <item name="android:windowIsTranslucent">true</item>
     </style>
 
 </resources>
diff --git a/apolloschurchapp/android/build.gradle b/apolloschurchapp/android/build.gradle
index 1881d9d..dea1a1c 100644
--- a/apolloschurchapp/android/build.gradle
+++ b/apolloschurchapp/android/build.gradle
@@ -2,18 +2,22 @@
 
 buildscript {
     ext {
-        buildToolsVersion = "28.0.3"
+        buildToolsVersion = "27.0.3"
         minSdkVersion = 16
-        compileSdkVersion = 28
-        targetSdkVersion = 28
-        supportLibVersion = "28.0.0"
+        compileSdkVersion = 27
+        targetSdkVersion = 26
+        supportLibVersion = "27.1.1"
     }
     repositories {
-        google()
         jcenter()
+        maven {
+            url 'https://maven.google.com/'
+            name 'Google'
+        }
+        google()
     }
     dependencies {
-        classpath("com.android.tools.build:gradle:3.4.1")
+        classpath 'com.android.tools.build:gradle:3.1.4'
 
         // NOTE: Do not place your application dependencies here; they belong
         // in the individual module build.gradle files
@@ -23,16 +27,40 @@ buildscript {
 allprojects {
     repositories {
         mavenLocal()
-        google()
-        jcenter()
         maven {
-            // All of React Native (JS, Obj-C sources, Android binaries) is installed from npm
-            url("$rootDir/../node_modules/react-native/android")
+            url 'https://maven.google.com/'
+            name 'Google'
         }
+        jcenter()
+        google()
         maven {
-            // Android JSC is installed from npm
-            url("$rootDir/../node_modules/jsc-android/dist")
+            // All of React Native (JS, Obj-C sources, Android binaries) is installed from npm
+            url "$rootDir/../node_modules/react-native/android"
         }
         maven { url "https://jitpack.io" }
     }
 }
+
+ext {
+    buildToolsVersion = "26.0.3"
+    minSdkVersion = 16
+    compileSdkVersion = 26
+    targetSdkVersion = 26
+    supportLibVersion = "26.1.0"
+}
+
+subprojects {
+    afterEvaluate { project ->
+        if (project.hasProperty("android")) {
+            android {
+                compileSdkVersion rootProject.ext.compileSdkVersion
+                buildToolsVersion rootProject.ext.buildToolsVersion
+            }
+        }
+    }
+}
+
+task wrapper(type: Wrapper) {
+    gradleVersion = '4.4'
+    distributionUrl = distributionUrl.replace("bin", "all")
+}
diff --git a/apolloschurchapp/android/gradle.properties b/apolloschurchapp/android/gradle.properties
index ccb748f..89e0d99 100644
--- a/apolloschurchapp/android/gradle.properties
+++ b/apolloschurchapp/android/gradle.properties
@@ -16,6 +16,3 @@
 # This option should only be used with decoupled projects. More details, visit
 # http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects
 # org.gradle.parallel=true
-
-android.useAndroidX=true
-android.enableJetifier=true
\ No newline at end of file
diff --git a/apolloschurchapp/android/gradle.properties.appcenter b/apolloschurchapp/android/gradle.properties.appcenter
index a50dbd7..f8c9d46 100644
--- a/apolloschurchapp/android/gradle.properties.appcenter
+++ b/apolloschurchapp/android/gradle.properties.appcenter
@@ -19,5 +19,3 @@
 
 android.useDeprecatedNdk=true
 android.enableAapt2=false
-android.useAndroidX=true
-android.enableJetifier=true
diff --git a/apolloschurchapp/android/gradle/wrapper/gradle-wrapper.properties b/apolloschurchapp/android/gradle/wrapper/gradle-wrapper.properties
index 3c7a7c8..b6517bb 100644
--- a/apolloschurchapp/android/gradle/wrapper/gradle-wrapper.properties
+++ b/apolloschurchapp/android/gradle/wrapper/gradle-wrapper.properties
@@ -2,4 +2,4 @@ distributionBase=GRADLE_USER_HOME
 distributionPath=wrapper/dists
 zipStoreBase=GRADLE_USER_HOME
 zipStorePath=wrapper/dists
-distributionUrl=https\://services.gradle.org/distributions/gradle-5.4.1-all.zip
\ No newline at end of file
+distributionUrl=https\://services.gradle.org/distributions/gradle-4.4-all.zip
diff --git a/apolloschurchapp/android/gradlew b/apolloschurchapp/android/gradlew
index 3e84efe..cccdd3d 100755
--- a/apolloschurchapp/android/gradlew
+++ b/apolloschurchapp/android/gradlew
@@ -28,7 +28,7 @@ APP_NAME="Gradle"
 APP_BASE_NAME=`basename "$0"`
 
 # Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
-DEFAULT_JVM_OPTS='"-Xmx64m" "-Xms64m"'
+DEFAULT_JVM_OPTS=""
 
 # Use the maximum available, or set MAX_FD != -1 to use that value.
 MAX_FD="maximum"
diff --git a/apolloschurchapp/android/gradlew.bat b/apolloschurchapp/android/gradlew.bat
index 1688408..e95643d 100644
--- a/apolloschurchapp/android/gradlew.bat
+++ b/apolloschurchapp/android/gradlew.bat
@@ -14,7 +14,7 @@ set APP_BASE_NAME=%~n0
 set APP_HOME=%DIRNAME%
 
 @rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
-set DEFAULT_JVM_OPTS="-Xmx64m" "-Xms64m"
+set DEFAULT_JVM_OPTS=
 
 @rem Find java.exe
 if defined JAVA_HOME goto findJavaFromJavaHome
diff --git a/apolloschurchapp/android/settings.gradle b/apolloschurchapp/android/settings.gradle
index 1ae2310..e1ecbb9 100644
--- a/apolloschurchapp/android/settings.gradle
+++ b/apolloschurchapp/android/settings.gradle
@@ -1,3 +1,23 @@
 rootProject.name = 'apolloschurchapp'
-apply from: file("../node_modules/@react-native-community/cli-platform-android/native_modules.gradle"); applyNativeModulesSettingsGradle(settings)
+include ':react-native-screens'
+project(':react-native-screens').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-screens/android')
+include ':react-native-onesignal'
+project(':react-native-onesignal').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-onesignal/android')
+include ':react-native-image-picker'
+project(':react-native-image-picker').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-image-picker/android')
+include ':react-native-music-control'
+project(':react-native-music-control').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-music-control/android')
+include ':react-native-device-info'
+project(':react-native-device-info').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-device-info/android')
+include ':react-native-video'
+project(':react-native-video').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-video/android-exoplayer')
+include ':react-native-svg'
+project(':react-native-svg').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-svg/android')
+include ':react-native-splash-screen'
+project(':react-native-splash-screen').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-splash-screen/android')
+include ':react-native-linear-gradient'
+project(':react-native-linear-gradient').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-linear-gradient/android')
+include ':react-native-custom-tabs'
+project(':react-native-custom-tabs').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-custom-tabs/android')
+
 include ':app'
diff --git a/apolloschurchapp/apollos.json b/apolloschurchapp/apollos.json
deleted file mode 100644
index 3219c60..0000000
--- a/apolloschurchapp/apollos.json
+++ /dev/null
@@ -1,4 +0,0 @@
-{
-    "version": "1.5.0-beta.0",
-    "environment": "client"
-}
\ No newline at end of file
diff --git a/apolloschurchapp/appcenter-post-clone.sh b/apolloschurchapp/appcenter-post-clone.sh
index 7256dc5..97b3e73 100755
--- a/apolloschurchapp/appcenter-post-clone.sh
+++ b/apolloschurchapp/appcenter-post-clone.sh
@@ -1,16 +1,13 @@
 #!/usr/bin/env bash
 set -ex
+brew uninstall node@6
+NODE_VERSION="8.11.3"
+curl "https://nodejs.org/dist/v${NODE_VERSION}/node-v${NODE_VERSION}.pkg" > "$HOME/Downloads/node-installer.pkg"
+sudo installer -store -pkg "$HOME/Downloads/node-installer.pkg" -target "/"
+
+# Appcenter needs a yarn.lock file to exist next to the package.json to detect yarn:
+cp $(pwd)/../../yarn.lock $(pwd)/yarn.lock
 
 # Swaps out all placeholder env variables w/ their real values
 # Placeholders look like "$ONE_SIGNAL_KEY"
-grep -o '\$.*' .env.production | sed 's/\$\(.*\)/\1/' | xargs -I {} sh -c "sed -i -e 's/\$"{}"/'$"{}"'/' .env.production"
-# Make sure ReactNativeConfig picks up values from prod env file.
-cp .env.production .env
-
-echo "Uninstalling all CocoaPods versions"
-sudo gem uninstall cocoapods --all --executables
-
-COCOAPODS_VER=`sed -n -e 's/^COCOAPODS: \([0-9.]*\)/\1/p' ios/Podfile.lock`
-
-echo "Installing CocoaPods version $COCOAPODS_VER"
-sudo gem install cocoapods -v $COCOAPODS_VER
\ No newline at end of file
+grep -o '\$.*' .env.production | sed 's/\$\(.*\)/\1/' | xargs -I {} sh -c "sed -i -e 's/\$"{}"/'$"{}"'/' .env.production"
\ No newline at end of file
diff --git a/apolloschurchapp/appcenter-pre-build.sh b/apolloschurchapp/appcenter-pre-build.sh
index ecc013e..c666ab2 100644
--- a/apolloschurchapp/appcenter-pre-build.sh
+++ b/apolloschurchapp/appcenter-pre-build.sh
@@ -4,17 +4,5 @@ droid_dir=$(pwd)/android
 
 cp $droid_dir/gradle.properties.appcenter $droid_dir/gradle.properties
 
-cd ios
-pod install
-cd ..
-
-# You can comment this out if your app doesn't have an existing build number.
-VERSION_CODE=$((VERSION_CODE_SHIFT + APPCENTER_BUILD_ID))
-
-echo Using "$VERSION_CODE" as build number
-
-echo $VERSION_CODE
-plutil -replace CFBundleVersion -string "$VERSION_CODE" $(pwd)/ios/apolloschurchapp/Info.plist
-sed -i "" 's/versionCode [^"]*/versionCode '$VERSION_CODE'/' $(pwd)/android/app/build.gradle
-
-yarn generate-stories
\ No newline at end of file
+cd ../../
+yarn
diff --git a/apolloschurchapp/assets/bootsplash_logo.png b/apolloschurchapp/assets/bootsplash_logo.png
deleted file mode 100644
index 7065a802c74262b1d4290fe4a98c7c025a95d435..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 2202
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
Lj$+){mU#OAxYp}m

diff --git a/apolloschurchapp/assets/bootsplash_logo@1,5x.png b/apolloschurchapp/assets/bootsplash_logo@1,5x.png
deleted file mode 100644
index 91aa886e1c9ba6989d0903283a0d769a7a2ae8ed..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 3638
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

diff --git a/apolloschurchapp/assets/bootsplash_logo@2x.png b/apolloschurchapp/assets/bootsplash_logo@2x.png
deleted file mode 100644
index 8abde463f8c0ef768813aaf2923d8bdd3397f1b3..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 5175
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
Ph@c1U4}7qPb@smj4)~Vv

diff --git a/apolloschurchapp/assets/bootsplash_logo@3x.png b/apolloschurchapp/assets/bootsplash_logo@3x.png
deleted file mode 100644
index e15c3c505216e927314b583a1d36afb075fb307a..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 11284
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

diff --git a/apolloschurchapp/assets/bootsplash_logo@4x.png b/apolloschurchapp/assets/bootsplash_logo@4x.png
deleted file mode 100644
index d13b1b28b0fc319bfb459c4a9736406a025b0901..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 17960
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
V1KEJyB|-oI002ovPDHLkV1lI(&C~z@

diff --git a/apolloschurchapp/babel.config.js b/apolloschurchapp/babel.config.js
deleted file mode 100644
index 6403cbe..0000000
--- a/apolloschurchapp/babel.config.js
+++ /dev/null
@@ -1,3 +0,0 @@
-module.exports = {
-  presets: ['module:metro-react-native-babel-preset']
-};
diff --git a/apolloschurchapp/index.js b/apolloschurchapp/index.js
index f929e67..d009549 100644
--- a/apolloschurchapp/index.js
+++ b/apolloschurchapp/index.js
@@ -1,16 +1,6 @@
-import './loadConfig';
 import { AppRegistry, YellowBox } from 'react-native';
-import ApollosConfig from '@apollosproject/config';
-import Storybook from './storybook';
 
-const useStorybook = ApollosConfig.STORYBOOK === 'true';
-
-const MainApp = require('./src').default;
-
-let App = MainApp;
-if (useStorybook) {
-  App = Storybook;
-}
+import App from './src';
 
 YellowBox.ignoreWarnings([
   'Warning: isMounted(...) is deprecated',
diff --git a/apolloschurchapp/ios/Gemfile b/apolloschurchapp/ios/Gemfile
deleted file mode 100644
index 8419108..0000000
--- a/apolloschurchapp/ios/Gemfile
+++ /dev/null
@@ -1,2 +0,0 @@
-source 'https://rubygems.org'
-gem 'cocoapods', '1.8.4'
\ No newline at end of file
diff --git a/apolloschurchapp/ios/Gemfile.lock b/apolloschurchapp/ios/Gemfile.lock
deleted file mode 100644
index 80a9446..0000000
--- a/apolloschurchapp/ios/Gemfile.lock
+++ /dev/null
@@ -1,83 +0,0 @@
-GEM
-  remote: https://rubygems.org/
-  specs:
-    CFPropertyList (3.0.2)
-    activesupport (4.2.11.1)
-      i18n (~> 0.7)
-      minitest (~> 5.1)
-      thread_safe (~> 0.3, >= 0.3.4)
-      tzinfo (~> 1.1)
-    algoliasearch (1.27.1)
-      httpclient (~> 2.8, >= 2.8.3)
-      json (>= 1.5.1)
-    atomos (0.1.3)
-    claide (1.0.3)
-    cocoapods (1.8.4)
-      activesupport (>= 4.0.2, < 5)
-      claide (>= 1.0.2, < 2.0)
-      cocoapods-core (= 1.8.4)
-      cocoapods-deintegrate (>= 1.0.3, < 2.0)
-      cocoapods-downloader (>= 1.2.2, < 2.0)
-      cocoapods-plugins (>= 1.0.0, < 2.0)
-      cocoapods-search (>= 1.0.0, < 2.0)
-      cocoapods-stats (>= 1.0.0, < 2.0)
-      cocoapods-trunk (>= 1.4.0, < 2.0)
-      cocoapods-try (>= 1.1.0, < 2.0)
-      colored2 (~> 3.1)
-      escape (~> 0.0.4)
-      fourflusher (>= 2.3.0, < 3.0)
-      gh_inspector (~> 1.0)
-      molinillo (~> 0.6.6)
-      nap (~> 1.0)
-      ruby-macho (~> 1.4)
-      xcodeproj (>= 1.11.1, < 2.0)
-    cocoapods-core (1.8.4)
-      activesupport (>= 4.0.2, < 6)
-      algoliasearch (~> 1.0)
-      concurrent-ruby (~> 1.1)
-      fuzzy_match (~> 2.0.4)
-      nap (~> 1.0)
-    cocoapods-deintegrate (1.0.4)
-    cocoapods-downloader (1.3.0)
-    cocoapods-plugins (1.0.0)
-      nap
-    cocoapods-search (1.0.0)
-    cocoapods-stats (1.1.0)
-    cocoapods-trunk (1.4.1)
-      nap (>= 0.8, < 2.0)
-      netrc (~> 0.11)
-    cocoapods-try (1.1.0)
-    colored2 (3.1.2)
-    concurrent-ruby (1.1.5)
-    escape (0.0.4)
-    fourflusher (2.3.1)
-    fuzzy_match (2.0.4)
-    gh_inspector (1.1.3)
-    httpclient (2.8.3)
-    i18n (0.9.5)
-      concurrent-ruby (~> 1.0)
-    json (2.3.0)
-    minitest (5.14.0)
-    molinillo (0.6.6)
-    nanaimo (0.2.6)
-    nap (1.1.0)
-    netrc (0.11.0)
-    ruby-macho (1.4.0)
-    thread_safe (0.3.6)
-    tzinfo (1.2.6)
-      thread_safe (~> 0.1)
-    xcodeproj (1.14.0)
-      CFPropertyList (>= 2.3.3, < 4.0)
-      atomos (~> 0.1.3)
-      claide (>= 1.0.2, < 2.0)
-      colored2 (~> 3.1)
-      nanaimo (~> 0.2.6)
-
-PLATFORMS
-  ruby
-
-DEPENDENCIES
-  cocoapods (= 1.8.4)
-
-BUNDLED WITH
-   2.0.2
diff --git a/apolloschurchapp/ios/Podfile b/apolloschurchapp/ios/Podfile
deleted file mode 100644
index ad5dbc0..0000000
--- a/apolloschurchapp/ios/Podfile
+++ /dev/null
@@ -1,66 +0,0 @@
-platform :ios, '9.0'
-require_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'
-
-target 'apolloschurchapp' do
-  permissions_path = '../node_modules/react-native-permissions/ios'
-
-  # Pods for apolloschurchapp
-  pod 'React', :path => '../node_modules/react-native/'
-  pod 'React-Core', :path => '../node_modules/react-native/React'
-  pod 'React-DevSupport', :path => '../node_modules/react-native/React'
-  pod 'React-RCTActionSheet', :path => '../node_modules/react-native/Libraries/ActionSheetIOS'
-  pod 'React-RCTAnimation', :path => '../node_modules/react-native/Libraries/NativeAnimation'
-  pod 'React-RCTBlob', :path => '../node_modules/react-native/Libraries/Blob'
-  pod 'React-RCTImage', :path => '../node_modules/react-native/Libraries/Image'
-  pod 'React-RCTLinking', :path => '../node_modules/react-native/Libraries/LinkingIOS'
-  pod 'React-RCTNetwork', :path => '../node_modules/react-native/Libraries/Network'
-  pod 'React-RCTSettings', :path => '../node_modules/react-native/Libraries/Settings'
-  pod 'React-RCTText', :path => '../node_modules/react-native/Libraries/Text'
-  pod 'React-RCTVibration', :path => '../node_modules/react-native/Libraries/Vibration'
-  pod 'React-RCTWebSocket', :path => '../node_modules/react-native/Libraries/WebSocket'
-
-  pod 'React-cxxreact', :path => '../node_modules/react-native/ReactCommon/cxxreact'
-  pod 'React-jsi', :path => '../node_modules/react-native/ReactCommon/jsi'
-  pod 'React-jsiexecutor', :path => '../node_modules/react-native/ReactCommon/jsiexecutor'
-  pod 'React-jsinspector', :path => '../node_modules/react-native/ReactCommon/jsinspector'
-  pod 'yoga', :path => '../node_modules/react-native/ReactCommon/yoga'
-
-  pod 'DoubleConversion', :podspec => '../node_modules/react-native/third-party-podspecs/DoubleConversion.podspec'
-  pod 'glog', :podspec => '../node_modules/react-native/third-party-podspecs/glog.podspec'
-  pod 'Folly', :podspec => '../node_modules/react-native/third-party-podspecs/Folly.podspec'
-  pod 'Permission-PhotoLibrary', :path => "#{permissions_path}/PhotoLibrary.podspec"
-  pod 'Permission-Notifications', :path => "#{permissions_path}/Notifications.podspec"
-  pod 'react-native-google-cast/NoBluetooth', path: '../node_modules/react-native-google-cast/ios/'
-
-  target 'apolloschurchappTests' do
-    inherit! :search_paths
-    # Pods for testing
-  end
-
-  use_native_modules!
-end
-
-target 'apolloschurchapp-tvOS' do
-  # Pods for apolloschurchapp-tvOS
-
-  target 'apolloschurchapp-tvOSTests' do
-    inherit! :search_paths
-    # Pods for testing
-  end
-
-end
-
-post_install do |installer|
- installer.pods_project.targets.each do |target|
-   if target.name == 'react-native-config'
-     phase = target.project.new(Xcodeproj::Project::Object::PBXShellScriptBuildPhase)
-     phase.shell_script = "cd ../../"\
-     " && RNC_ROOT=./node_modules/react-native-config/"\
-     " && export SYMROOT=$RNC_ROOT/ios/ReactNativeConfig"\
-     " && ruby $RNC_ROOT/ios/ReactNativeConfig/BuildDotenvConfig.ruby"
-
-     target.build_phases << phase
-     target.build_phases.move(phase,0)
-   end
- end
-end
diff --git a/apolloschurchapp/ios/Podfile.lock b/apolloschurchapp/ios/Podfile.lock
deleted file mode 100644
index bc84fdf..0000000
--- a/apolloschurchapp/ios/Podfile.lock
+++ /dev/null
@@ -1,358 +0,0 @@
-PODS:
-  - boost-for-react-native (1.63.0)
-  - BVLinearGradient (2.5.6):
-    - React
-  - DoubleConversion (1.1.6)
-  - Folly (2018.10.22.00):
-    - boost-for-react-native
-    - DoubleConversion
-    - Folly/Default (= 2018.10.22.00)
-    - glog
-  - Folly/Default (2018.10.22.00):
-    - boost-for-react-native
-    - DoubleConversion
-    - glog
-  - glog (0.3.5)
-  - google-cast-sdk-no-bluetooth (4.4.7):
-    - google-cast-sdk-no-bluetooth/Core (= 4.4.7)
-    - Protobuf (~> 3.0)
-  - google-cast-sdk-no-bluetooth/Core (4.4.7):
-    - Protobuf (~> 3.0)
-  - OneSignal (2.10.1)
-  - Permission-Notifications (2.0.10):
-    - RNPermissions
-  - Permission-PhotoLibrary (2.0.10):
-    - RNPermissions
-  - Protobuf (3.12.0)
-  - React (0.60.5):
-    - React-Core (= 0.60.5)
-    - React-DevSupport (= 0.60.5)
-    - React-RCTActionSheet (= 0.60.5)
-    - React-RCTAnimation (= 0.60.5)
-    - React-RCTBlob (= 0.60.5)
-    - React-RCTImage (= 0.60.5)
-    - React-RCTLinking (= 0.60.5)
-    - React-RCTNetwork (= 0.60.5)
-    - React-RCTSettings (= 0.60.5)
-    - React-RCTText (= 0.60.5)
-    - React-RCTVibration (= 0.60.5)
-    - React-RCTWebSocket (= 0.60.5)
-  - React-Core (0.60.5):
-    - Folly (= 2018.10.22.00)
-    - React-cxxreact (= 0.60.5)
-    - React-jsiexecutor (= 0.60.5)
-    - yoga (= 0.60.5.React)
-  - React-cxxreact (0.60.5):
-    - boost-for-react-native (= 1.63.0)
-    - DoubleConversion
-    - Folly (= 2018.10.22.00)
-    - glog
-    - React-jsinspector (= 0.60.5)
-  - React-DevSupport (0.60.5):
-    - React-Core (= 0.60.5)
-    - React-RCTWebSocket (= 0.60.5)
-  - React-jsi (0.60.5):
-    - boost-for-react-native (= 1.63.0)
-    - DoubleConversion
-    - Folly (= 2018.10.22.00)
-    - glog
-    - React-jsi/Default (= 0.60.5)
-  - React-jsi/Default (0.60.5):
-    - boost-for-react-native (= 1.63.0)
-    - DoubleConversion
-    - Folly (= 2018.10.22.00)
-    - glog
-  - React-jsiexecutor (0.60.5):
-    - DoubleConversion
-    - Folly (= 2018.10.22.00)
-    - glog
-    - React-cxxreact (= 0.60.5)
-    - React-jsi (= 0.60.5)
-  - React-jsinspector (0.60.5)
-  - react-native-config (0.11.7):
-    - React
-  - react-native-geolocation (2.0.2):
-    - React
-  - react-native-google-cast/NoBluetooth (3.3.0):
-    - google-cast-sdk-no-bluetooth
-    - React
-    - react-native-google-cast/RNGoogleCast
-  - react-native-google-cast/RNGoogleCast (3.3.0):
-    - React
-  - react-native-image-picker (0.28.0):
-    - React
-  - react-native-maps (0.26.1):
-    - React
-  - react-native-music-control (0.10.8):
-    - React
-  - react-native-onesignal (3.3.2):
-    - OneSignal (= 2.10.1)
-    - React (< 1.0.0, >= 0.13.0)
-  - react-native-passkit-wallet (0.1.4):
-    - React
-  - react-native-safari-view (1.0.0):
-    - React
-  - react-native-safe-area-context (0.3.6):
-    - React
-  - react-native-video (5.0.2):
-    - React
-    - react-native-video/Video (= 5.0.2)
-  - react-native-video/Video (5.0.2):
-    - React
-  - react-native-webview (7.6.0):
-    - React
-  - React-RCTActionSheet (0.60.5):
-    - React-Core (= 0.60.5)
-  - React-RCTAnimation (0.60.5):
-    - React-Core (= 0.60.5)
-  - React-RCTBlob (0.60.5):
-    - React-Core (= 0.60.5)
-    - React-RCTNetwork (= 0.60.5)
-    - React-RCTWebSocket (= 0.60.5)
-  - React-RCTImage (0.60.5):
-    - React-Core (= 0.60.5)
-    - React-RCTNetwork (= 0.60.5)
-  - React-RCTLinking (0.60.5):
-    - React-Core (= 0.60.5)
-  - React-RCTNetwork (0.60.5):
-    - React-Core (= 0.60.5)
-  - React-RCTSettings (0.60.5):
-    - React-Core (= 0.60.5)
-  - React-RCTText (0.60.5):
-    - React-Core (= 0.60.5)
-  - React-RCTVibration (0.60.5):
-    - React-Core (= 0.60.5)
-  - React-RCTWebSocket (0.60.5):
-    - React-Core (= 0.60.5)
-  - rn-fetch-blob (0.10.16):
-    - React-Core
-  - RNAirplay (1.0.0):
-    - React
-  - RNBootSplash (2.1.0):
-    - React
-  - RNCAsyncStorage (1.9.0):
-    - React
-  - RNDateTimePicker (2.4.0):
-    - React
-  - RNDeviceInfo (4.0.1):
-    - React
-  - RNGestureHandler (1.6.1):
-    - React
-  - RNInAppBrowser (3.4.0):
-    - React
-  - RNPermissions (2.0.10):
-    - React
-  - RNScreens (1.0.0-alpha.23):
-    - React
-  - RNSVG (9.13.6):
-    - React
-  - yoga (0.60.5.React)
-
-DEPENDENCIES:
-  - BVLinearGradient (from `../node_modules/react-native-linear-gradient`)
-  - DoubleConversion (from `../node_modules/react-native/third-party-podspecs/DoubleConversion.podspec`)
-  - Folly (from `../node_modules/react-native/third-party-podspecs/Folly.podspec`)
-  - glog (from `../node_modules/react-native/third-party-podspecs/glog.podspec`)
-  - Permission-Notifications (from `../node_modules/react-native-permissions/ios/Notifications.podspec`)
-  - Permission-PhotoLibrary (from `../node_modules/react-native-permissions/ios/PhotoLibrary.podspec`)
-  - React (from `../node_modules/react-native/`)
-  - React-Core (from `../node_modules/react-native/React`)
-  - React-cxxreact (from `../node_modules/react-native/ReactCommon/cxxreact`)
-  - React-DevSupport (from `../node_modules/react-native/React`)
-  - React-jsi (from `../node_modules/react-native/ReactCommon/jsi`)
-  - React-jsiexecutor (from `../node_modules/react-native/ReactCommon/jsiexecutor`)
-  - React-jsinspector (from `../node_modules/react-native/ReactCommon/jsinspector`)
-  - react-native-config (from `../node_modules/react-native-config`)
-  - "react-native-geolocation (from `../node_modules/@react-native-community/geolocation`)"
-  - react-native-google-cast/NoBluetooth (from `../node_modules/react-native-google-cast/ios/`)
-  - react-native-image-picker (from `../node_modules/react-native-image-picker`)
-  - react-native-maps (from `../node_modules/react-native-maps`)
-  - react-native-music-control (from `../node_modules/react-native-music-control`)
-  - react-native-onesignal (from `../node_modules/react-native-onesignal`)
-  - react-native-passkit-wallet (from `../node_modules/react-native-passkit-wallet`)
-  - react-native-safari-view (from `../node_modules/react-native-safari-view`)
-  - react-native-safe-area-context (from `../node_modules/react-native-safe-area-context`)
-  - react-native-video (from `../node_modules/react-native-video`)
-  - react-native-webview (from `../node_modules/react-native-webview`)
-  - React-RCTActionSheet (from `../node_modules/react-native/Libraries/ActionSheetIOS`)
-  - React-RCTAnimation (from `../node_modules/react-native/Libraries/NativeAnimation`)
-  - React-RCTBlob (from `../node_modules/react-native/Libraries/Blob`)
-  - React-RCTImage (from `../node_modules/react-native/Libraries/Image`)
-  - React-RCTLinking (from `../node_modules/react-native/Libraries/LinkingIOS`)
-  - React-RCTNetwork (from `../node_modules/react-native/Libraries/Network`)
-  - React-RCTSettings (from `../node_modules/react-native/Libraries/Settings`)
-  - React-RCTText (from `../node_modules/react-native/Libraries/Text`)
-  - React-RCTVibration (from `../node_modules/react-native/Libraries/Vibration`)
-  - React-RCTWebSocket (from `../node_modules/react-native/Libraries/WebSocket`)
-  - rn-fetch-blob (from `../node_modules/rn-fetch-blob`)
-  - "RNAirplay (from `../node_modules/@apollosproject/react-native-airplay-btn`)"
-  - RNBootSplash (from `../node_modules/react-native-bootsplash`)
-  - "RNCAsyncStorage (from `../node_modules/@react-native-community/async-storage`)"
-  - "RNDateTimePicker (from `../node_modules/@react-native-community/datetimepicker`)"
-  - RNDeviceInfo (from `../node_modules/react-native-device-info`)
-  - RNGestureHandler (from `../node_modules/react-native-gesture-handler`)
-  - RNInAppBrowser (from `../node_modules/react-native-inappbrowser-reborn`)
-  - RNPermissions (from `../node_modules/react-native-permissions`)
-  - RNScreens (from `../node_modules/react-native-screens`)
-  - RNSVG (from `../node_modules/react-native-svg`)
-  - yoga (from `../node_modules/react-native/ReactCommon/yoga`)
-
-SPEC REPOS:
-  trunk:
-    - boost-for-react-native
-    - google-cast-sdk-no-bluetooth
-    - OneSignal
-    - Protobuf
-
-EXTERNAL SOURCES:
-  BVLinearGradient:
-    :path: "../node_modules/react-native-linear-gradient"
-  DoubleConversion:
-    :podspec: "../node_modules/react-native/third-party-podspecs/DoubleConversion.podspec"
-  Folly:
-    :podspec: "../node_modules/react-native/third-party-podspecs/Folly.podspec"
-  glog:
-    :podspec: "../node_modules/react-native/third-party-podspecs/glog.podspec"
-  Permission-Notifications:
-    :path: "../node_modules/react-native-permissions/ios/Notifications.podspec"
-  Permission-PhotoLibrary:
-    :path: "../node_modules/react-native-permissions/ios/PhotoLibrary.podspec"
-  React:
-    :path: "../node_modules/react-native/"
-  React-Core:
-    :path: "../node_modules/react-native/React"
-  React-cxxreact:
-    :path: "../node_modules/react-native/ReactCommon/cxxreact"
-  React-DevSupport:
-    :path: "../node_modules/react-native/React"
-  React-jsi:
-    :path: "../node_modules/react-native/ReactCommon/jsi"
-  React-jsiexecutor:
-    :path: "../node_modules/react-native/ReactCommon/jsiexecutor"
-  React-jsinspector:
-    :path: "../node_modules/react-native/ReactCommon/jsinspector"
-  react-native-config:
-    :path: "../node_modules/react-native-config"
-  react-native-geolocation:
-    :path: "../node_modules/@react-native-community/geolocation"
-  react-native-google-cast:
-    :path: "../node_modules/react-native-google-cast/ios/"
-  react-native-image-picker:
-    :path: "../node_modules/react-native-image-picker"
-  react-native-maps:
-    :path: "../node_modules/react-native-maps"
-  react-native-music-control:
-    :path: "../node_modules/react-native-music-control"
-  react-native-onesignal:
-    :path: "../node_modules/react-native-onesignal"
-  react-native-passkit-wallet:
-    :path: "../node_modules/react-native-passkit-wallet"
-  react-native-safari-view:
-    :path: "../node_modules/react-native-safari-view"
-  react-native-safe-area-context:
-    :path: "../node_modules/react-native-safe-area-context"
-  react-native-video:
-    :path: "../node_modules/react-native-video"
-  react-native-webview:
-    :path: "../node_modules/react-native-webview"
-  React-RCTActionSheet:
-    :path: "../node_modules/react-native/Libraries/ActionSheetIOS"
-  React-RCTAnimation:
-    :path: "../node_modules/react-native/Libraries/NativeAnimation"
-  React-RCTBlob:
-    :path: "../node_modules/react-native/Libraries/Blob"
-  React-RCTImage:
-    :path: "../node_modules/react-native/Libraries/Image"
-  React-RCTLinking:
-    :path: "../node_modules/react-native/Libraries/LinkingIOS"
-  React-RCTNetwork:
-    :path: "../node_modules/react-native/Libraries/Network"
-  React-RCTSettings:
-    :path: "../node_modules/react-native/Libraries/Settings"
-  React-RCTText:
-    :path: "../node_modules/react-native/Libraries/Text"
-  React-RCTVibration:
-    :path: "../node_modules/react-native/Libraries/Vibration"
-  React-RCTWebSocket:
-    :path: "../node_modules/react-native/Libraries/WebSocket"
-  rn-fetch-blob:
-    :path: "../node_modules/rn-fetch-blob"
-  RNAirplay:
-    :path: "../node_modules/@apollosproject/react-native-airplay-btn"
-  RNBootSplash:
-    :path: "../node_modules/react-native-bootsplash"
-  RNCAsyncStorage:
-    :path: "../node_modules/@react-native-community/async-storage"
-  RNDateTimePicker:
-    :path: "../node_modules/@react-native-community/datetimepicker"
-  RNDeviceInfo:
-    :path: "../node_modules/react-native-device-info"
-  RNGestureHandler:
-    :path: "../node_modules/react-native-gesture-handler"
-  RNInAppBrowser:
-    :path: "../node_modules/react-native-inappbrowser-reborn"
-  RNPermissions:
-    :path: "../node_modules/react-native-permissions"
-  RNScreens:
-    :path: "../node_modules/react-native-screens"
-  RNSVG:
-    :path: "../node_modules/react-native-svg"
-  yoga:
-    :path: "../node_modules/react-native/ReactCommon/yoga"
-
-SPEC CHECKSUMS:
-  boost-for-react-native: 39c7adb57c4e60d6c5479dd8623128eb5b3f0f2c
-  BVLinearGradient: e3aad03778a456d77928f594a649e96995f1c872
-  DoubleConversion: 5805e889d232975c086db112ece9ed034df7a0b2
-  Folly: 30e7936e1c45c08d884aa59369ed951a8e68cf51
-  glog: 1f3da668190260b06b429bb211bfbee5cd790c28
-  google-cast-sdk-no-bluetooth: 197acace9d5a78380bdaef8d45439b2250fa050b
-  OneSignal: 8fb749fa07f88006403c9b659a570fb7fb74519a
-  Permission-Notifications: c9eb3a2da68dc0f37a8dc67d37bd28d150c5041d
-  Permission-PhotoLibrary: e59a7a687e002e8c8c46946c26520934ba85a688
-  Protobuf: 2793fcd0622a00b546c60e7cbbcc493e043e9bb9
-  React: 53c53c4d99097af47cf60594b8706b4e3321e722
-  React-Core: ba421f6b4f4cbe2fb17c0b6fc675f87622e78a64
-  React-cxxreact: 8384287780c4999351ad9b6e7a149d9ed10a2395
-  React-DevSupport: 197fb409737cff2c4f9986e77c220d7452cb9f9f
-  React-jsi: 4d8c9efb6312a9725b18d6fc818ffc103f60fec2
-  React-jsiexecutor: 90ad2f9db09513fc763bc757fdc3c4ff8bde2a30
-  React-jsinspector: e08662d1bf5b129a3d556eb9ea343a3f40353ae4
-  react-native-config: 55548054279d92e0e4566ea15a8b9b81028ec342
-  react-native-geolocation: c956aeb136625c23e0dce0467664af2c437888c9
-  react-native-google-cast: 410619ef162b8b91815ecf7271502224998dee8e
-  react-native-image-picker: e6e06d4315e3c85bad17e4b2002cd29f11d202c8
-  react-native-maps: 6e499eee4eabf422ba8b6f94e993cc768bf35153
-  react-native-music-control: dcfe5b61e56a15898c4618579cb8ce612c9d21a8
-  react-native-onesignal: 8958311abbd9125f26e600914e48833b57321cbf
-  react-native-passkit-wallet: 51e3babdaeec4c10b5736786ebd1bfb470fcaa36
-  react-native-safari-view: 955d7160d159241b8e9395d12d10ea0ef863dcdd
-  react-native-safe-area-context: e380a6f783ccaec848e2f3cc8eb205a62362950d
-  react-native-video: d01ed7ff1e38fa7dcc6c15c94cf505e661b7bfd0
-  react-native-webview: db4682f1698ab4b17a5e88f951031d203ff8aea8
-  React-RCTActionSheet: b0f1ea83f4bf75fb966eae9bfc47b78c8d3efd90
-  React-RCTAnimation: 359ba1b5690b1e87cc173558a78e82d35919333e
-  React-RCTBlob: 5e2b55f76e9a1c7ae52b826923502ddc3238df24
-  React-RCTImage: f5f1c50922164e89bdda67bcd0153952a5cfe719
-  React-RCTLinking: d0ecbd791e9ddddc41fa1f66b0255de90e8ee1e9
-  React-RCTNetwork: e26946300b0ab7bb6c4a6348090e93fa21f33a9d
-  React-RCTSettings: d0d37cb521b7470c998595a44f05847777cc3f42
-  React-RCTText: b074d89033583d4f2eb5faf7ea2db3a13c7553a2
-  React-RCTVibration: 2105b2e0e2b66a6408fc69a46c8a7fb5b2fdade0
-  React-RCTWebSocket: cd932a16b7214898b6b7f788c8bddb3637246ac4
-  rn-fetch-blob: 651b8d076b43d0d7aa294a3d9ec16c00aab8bef9
-  RNAirplay: 75777dd55dafbd3687703c3eb9c290ea6cc43248
-  RNBootSplash: fbf76a4bf1c03e9acd1dd08ce064847f26d6d8bf
-  RNCAsyncStorage: 453cd7c335ec9ba3b877e27d02238956b76f3268
-  RNDateTimePicker: c4285bfdd87430f1e575b81a4742b7586a09d53e
-  RNDeviceInfo: 687c1b2ab6d86ff1ca1208783320cd144138c7f2
-  RNGestureHandler: 8f09cd560f8d533eb36da5a6c5a843af9f056b38
-  RNInAppBrowser: c1a0dad2734458d79bcb6c8f4297ba8658a1da9f
-  RNPermissions: 1008d3511fee0e25739cf81c4af0d1b2248f1053
-  RNScreens: f28b48b8345f2f5f39ed6195518291515032a788
-  RNSVG: 8ba35cbeb385a52fd960fd28db9d7d18b4c2974f
-  yoga: 312528f5bbbba37b4dcea5ef00e8b4033fdd9411
-
-PODFILE CHECKSUM: 4565ebd278dbfcfe1075b51288219122c2ebd8fc
-
-COCOAPODS: 1.8.4
diff --git a/apolloschurchapp/ios/apolloschurchapp-tvOS/Info.plist b/apolloschurchapp/ios/apolloschurchapp-tvOS/Info.plist
index ca63d1e..aed24ed 100644
--- a/apolloschurchapp/ios/apolloschurchapp-tvOS/Info.plist
+++ b/apolloschurchapp/ios/apolloschurchapp-tvOS/Info.plist
@@ -15,11 +15,11 @@
 	<key>CFBundlePackageType</key>
 	<string>APPL</string>
 	<key>CFBundleShortVersionString</key>
-	<string>1.3.1</string>
+	<string>0.7.0</string>
 	<key>CFBundleSignature</key>
 	<string>????</string>
 	<key>CFBundleVersion</key>
-	<string>24</string>
+	<string>5</string>
 	<key>LSRequiresIPhoneOS</key>
 	<true />
 	<key>UILaunchStoryboardName</key>
diff --git a/apolloschurchapp/ios/apolloschurchapp-tvOSTests/Info.plist b/apolloschurchapp/ios/apolloschurchapp-tvOSTests/Info.plist
index a017b64..e358b6d 100644
--- a/apolloschurchapp/ios/apolloschurchapp-tvOSTests/Info.plist
+++ b/apolloschurchapp/ios/apolloschurchapp-tvOSTests/Info.plist
@@ -15,10 +15,10 @@
 	<key>CFBundlePackageType</key>
 	<string>BNDL</string>
 	<key>CFBundleShortVersionString</key>
-	<string>1.3.1</string>
+	<string>0.7.0</string>
 	<key>CFBundleSignature</key>
 	<string>????</string>
 	<key>CFBundleVersion</key>
-	<string>24</string>
+	<string>5</string>
 </dict>
 </plist>
diff --git a/apolloschurchapp/ios/apolloschurchapp.xcodeproj/project.pbxproj b/apolloschurchapp/ios/apolloschurchapp.xcodeproj/project.pbxproj
index b66aa8d..a1d174c 100644
--- a/apolloschurchapp/ios/apolloschurchapp.xcodeproj/project.pbxproj
+++ b/apolloschurchapp/ios/apolloschurchapp.xcodeproj/project.pbxproj
@@ -7,42 +7,101 @@
 	objects = {
 
 /* Begin PBXBuildFile section */
+		00C302E51ABCBA2D00DB3ED1 /* libRCTActionSheet.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 00C302AC1ABCB8CE00DB3ED1 /* libRCTActionSheet.a */; };
+		00C302E71ABCBA2D00DB3ED1 /* libRCTGeolocation.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 00C302BA1ABCB90400DB3ED1 /* libRCTGeolocation.a */; };
+		00C302E81ABCBA2D00DB3ED1 /* libRCTImage.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 00C302C01ABCB91800DB3ED1 /* libRCTImage.a */; };
+		00C302E91ABCBA2D00DB3ED1 /* libRCTNetwork.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 00C302DC1ABCB9D200DB3ED1 /* libRCTNetwork.a */; };
+		00C302EA1ABCBA2D00DB3ED1 /* libRCTVibration.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 00C302E41ABCB9EE00DB3ED1 /* libRCTVibration.a */; };
 		00E356F31AD99517003FC87E /* apolloschurchappTests.m in Sources */ = {isa = PBXBuildFile; fileRef = 00E356F21AD99517003FC87E /* apolloschurchappTests.m */; };
-		01F091B02048490A8F9EF4FE /* Inter-UI-Italic.otf in Resources */ = {isa = PBXBuildFile; fileRef = 63F6EE53A9B44B4388B5F1C2 /* Inter-UI-Italic.otf */; };
-		08CE105F17284254AD54AF84 /* DroidSerif-Bold.ttf in Resources */ = {isa = PBXBuildFile; fileRef = E3B8A0AC5A6B4FABB3BDF6CB /* DroidSerif-Bold.ttf */; };
+		0D4EDF6EBA274F9D93DDED76 /* Inter-UI-MediumItalic.otf in Resources */ = {isa = PBXBuildFile; fileRef = F79112193F3548D284406ABF /* Inter-UI-MediumItalic.otf */; };
+		133E29F31AD74F7200F7D852 /* libRCTLinking.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 78C398B91ACF4ADC00677621 /* libRCTLinking.a */; };
+		139105C61AF99C1200B5F7CC /* libRCTSettings.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 139105C11AF99BAD00B5F7CC /* libRCTSettings.a */; };
+		139FDEF61B0652A700C62182 /* libRCTWebSocket.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 139FDEF41B06529B00C62182 /* libRCTWebSocket.a */; };
 		13B07FBC1A68108700A75B9A /* AppDelegate.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB01A68108700A75B9A /* AppDelegate.m */; };
+		13B07FBD1A68108700A75B9A /* LaunchScreen.xib in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB11A68108700A75B9A /* LaunchScreen.xib */; };
 		13B07FBF1A68108700A75B9A /* Images.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB51A68108700A75B9A /* Images.xcassets */; };
 		13B07FC11A68108700A75B9A /* main.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB71A68108700A75B9A /* main.m */; };
-		1C48DCDE11AC47C48E918489 /* Inter-UI-Medium.otf in Resources */ = {isa = PBXBuildFile; fileRef = DC74A378C1CC40E4B6192D7F /* Inter-UI-Medium.otf */; };
-		25B9E67E3B46D33F45473A84 /* libPods-apolloschurchapp-tvOSTests.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 4F64CCA987A0419EB9C02236 /* libPods-apolloschurchapp-tvOSTests.a */; };
+		140ED2AC1D01E1AD002B40FF /* libReact.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 146834041AC3E56700842450 /* libReact.a */; };
+		146834051AC3E58100842450 /* libReact.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 146834041AC3E56700842450 /* libReact.a */; };
+		1680179655164C96985B5731 /* libMusicControl.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 643D51DCF8F14993B9AA6990 /* libMusicControl.a */; };
+		1C1FD8B313AB4A6583A0D31B /* libRNDeviceInfo.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 14D838A2FAE743C7B1DA5E31 /* libRNDeviceInfo.a */; };
 		2D02E4BC1E0B4A80006451C7 /* AppDelegate.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB01A68108700A75B9A /* AppDelegate.m */; };
 		2D02E4BD1E0B4A84006451C7 /* Images.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB51A68108700A75B9A /* Images.xcassets */; };
 		2D02E4BF1E0B4AB3006451C7 /* main.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB71A68108700A75B9A /* main.m */; };
+		2D02E4C21E0B4AEC006451C7 /* libRCTAnimation.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 5E9157351DD0AC6500FF2AA8 /* libRCTAnimation.a */; };
+		2D02E4C31E0B4AEC006451C7 /* libRCTImage-tvOS.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 3DAD3E841DF850E9000B6D8A /* libRCTImage-tvOS.a */; };
+		2D02E4C41E0B4AEC006451C7 /* libRCTLinking-tvOS.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 3DAD3E881DF850E9000B6D8A /* libRCTLinking-tvOS.a */; };
+		2D02E4C51E0B4AEC006451C7 /* libRCTNetwork-tvOS.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 3DAD3E8C1DF850E9000B6D8A /* libRCTNetwork-tvOS.a */; };
+		2D02E4C61E0B4AEC006451C7 /* libRCTSettings-tvOS.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 3DAD3E901DF850E9000B6D8A /* libRCTSettings-tvOS.a */; };
+		2D02E4C71E0B4AEC006451C7 /* libRCTText-tvOS.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 3DAD3E941DF850E9000B6D8A /* libRCTText-tvOS.a */; };
+		2D02E4C81E0B4AEC006451C7 /* libRCTWebSocket-tvOS.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 3DAD3E991DF850E9000B6D8A /* libRCTWebSocket-tvOS.a */; };
 		2D16E6881FA4F8E400B85C8A /* libReact.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 2D16E6891FA4F8E400B85C8A /* libReact.a */; };
 		2DCD954D1E0B4F2C00145EB5 /* apolloschurchappTests.m in Sources */ = {isa = PBXBuildFile; fileRef = 00E356F21AD99517003FC87E /* apolloschurchappTests.m */; };
-		578FFEC1D7D54C9B871A9E5B /* Inter-UI-BlackItalic.otf in Resources */ = {isa = PBXBuildFile; fileRef = 5A5A2BC2998547F4816B82E4 /* Inter-UI-BlackItalic.otf */; };
-		68D1351E80AA4A2C96288FD9 /* Inter-UI-Black.otf in Resources */ = {isa = PBXBuildFile; fileRef = EC21254B449443F99016EBFD /* Inter-UI-Black.otf */; };
-		7FBC6BC3CE8D48298F9850A9 /* Inter-UI-Bold.otf in Resources */ = {isa = PBXBuildFile; fileRef = D5157D807E164356ADE87867 /* Inter-UI-Bold.otf */; };
-		82AAE52E24187BB500D1EEC7 /* BootSplash.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = 82AAE52D24187BB500D1EEC7 /* BootSplash.storyboard */; };
-		82AAE52F24187BB500D1EEC7 /* BootSplash.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = 82AAE52D24187BB500D1EEC7 /* BootSplash.storyboard */; };
-		82AAE53024187BB500D1EEC7 /* BootSplash.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = 82AAE52D24187BB500D1EEC7 /* BootSplash.storyboard */; };
-		82AAE53124187BB500D1EEC7 /* BootSplash.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = 82AAE52D24187BB500D1EEC7 /* BootSplash.storyboard */; };
-		82AAE537241888D100D1EEC7 /* Images.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB51A68108700A75B9A /* Images.xcassets */; };
-		82AAE538241888D200D1EEC7 /* Images.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB51A68108700A75B9A /* Images.xcassets */; };
-		894732A70B4740678E85B593 /* Inter-UI-BoldItalic.otf in Resources */ = {isa = PBXBuildFile; fileRef = 2F5410F239E9477B9C2E86BD /* Inter-UI-BoldItalic.otf */; };
-		8EA9BDE542E09F685A47D9BE /* libPods-apolloschurchapp-tvOS.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 38B9762ACA099D28C28DBB31 /* libPods-apolloschurchapp-tvOS.a */; };
-		90743C40BF544F10A810C43C /* DroidSerif-Italic.ttf in Resources */ = {isa = PBXBuildFile; fileRef = ADC3D2DB245545ADB1CAB3FE /* DroidSerif-Italic.ttf */; };
-		93A2B0A9328A46A4B7DD5EFA /* DroidSerif-Regular.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 4E007B33EDD74B82AEF02C24 /* DroidSerif-Regular.ttf */; };
-		A415698B9815C7305EDB7AA7 /* libPods-apolloschurchappTests.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 560CBCD50AE7D282715D134E /* libPods-apolloschurchappTests.a */; };
-		AB3BD177B8A14193A5EEDDF8 /* Inter-UI-Regular.otf in Resources */ = {isa = PBXBuildFile; fileRef = A613256118404CB691DE2C8E /* Inter-UI-Regular.otf */; };
-		B02F194A3F6A4FE29AC799B4 /* DroidSerif-BoldItalic.ttf in Resources */ = {isa = PBXBuildFile; fileRef = A93F9D112A034626A9421759 /* DroidSerif-BoldItalic.ttf */; };
-		E875558F3FB8FA2024EF7DC2 /* libPods-apolloschurchapp.a in Frameworks */ = {isa = PBXBuildFile; fileRef = DDB6B5B7B6A0D1ECB68CF0DD /* libPods-apolloschurchapp.a */; };
-		ED297163215061F000B7C4FE /* JavaScriptCore.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = ED297162215061F000B7C4FE /* JavaScriptCore.framework */; };
-		ED2971652150620600B7C4FE /* JavaScriptCore.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = ED2971642150620600B7C4FE /* JavaScriptCore.framework */; };
-		FCB3069DB5DD4170B2CAEFC4 /* Inter-UI-MediumItalic.otf in Resources */ = {isa = PBXBuildFile; fileRef = A460FD7884FD4574A818005A /* Inter-UI-MediumItalic.otf */; };
+		2DF0FFEE2056DD460020B375 /* libReact.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 3DAD3EA31DF850E9000B6D8A /* libReact.a */; };
+		3CAA28FFFCCF46518672AC8F /* libDBCustomTabs.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 71E6499CCC9D4DB2ADD365D8 /* libDBCustomTabs.a */; };
+		417027FD83CA4902AB4DB2B4 /* Inter-UI-Black.otf in Resources */ = {isa = PBXBuildFile; fileRef = 8E13C8F9AE60487C9ED95C21 /* Inter-UI-Black.otf */; };
+		4B29B8AACC2A4FB7BA6A8EEB /* libSafariViewManager.a in Frameworks */ = {isa = PBXBuildFile; fileRef = BF5A2B416EB74A44923FED7B /* libSafariViewManager.a */; };
+		59D8DFA78CDF4642892CC142 /* DroidSerif-BoldItalic.ttf in Resources */ = {isa = PBXBuildFile; fileRef = D979B537509247C099CE3F24 /* DroidSerif-BoldItalic.ttf */; };
+		5C862E57737C4032A378868D /* libRNScreens.a in Frameworks */ = {isa = PBXBuildFile; fileRef = B16900D1DAC94F96B742B4EA /* libRNScreens.a */; };
+		5CA1D8E805684478B04ABB60 /* Inter-UI-Italic.otf in Resources */ = {isa = PBXBuildFile; fileRef = 8CA3C04F98954FB2895CD36D /* Inter-UI-Italic.otf */; };
+		5E9157361DD0AC6A00FF2AA8 /* libRCTAnimation.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 5E9157331DD0AC6500FF2AA8 /* libRCTAnimation.a */; };
+		6C6BE3C2189E4FBA9FB66BE5 /* libRCTOneSignal.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 828255630B3246AEA19CF24D /* libRCTOneSignal.a */; };
+		6E4442FB39BE4F898DE4C454 /* Inter-UI-BlackItalic.otf in Resources */ = {isa = PBXBuildFile; fileRef = 22246A6BC58E4CF09A22A4DF /* Inter-UI-BlackItalic.otf */; };
+		7D060CA312AB4E828CD60DDC /* Inter-UI-Regular.otf in Resources */ = {isa = PBXBuildFile; fileRef = 10F42B11F27E467A8C71C280 /* Inter-UI-Regular.otf */; };
+		832341BD1AAA6AB300B99B32 /* libRCTText.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 832341B51AAA6A8300B99B32 /* libRCTText.a */; };
+		86D0B47B5BF143E797822EF1 /* libRCTVideo.a in Frameworks */ = {isa = PBXBuildFile; fileRef = FC8FFB7C37BB4499AEB6FA37 /* libRCTVideo.a */; };
+		89331B8BDAF24EF5BE08A485 /* libRNSVG.a in Frameworks */ = {isa = PBXBuildFile; fileRef = CFAF46FBA8B44C7B8DCA7707 /* libRNSVG.a */; };
+		9388C44B949C4DBAAA7256D5 /* libBVLinearGradient.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 60E52391C9744A46B3925A78 /* libBVLinearGradient.a */; };
+		9ACBD642B18D41C9BB1E4D9E /* DroidSerif-Italic.ttf in Resources */ = {isa = PBXBuildFile; fileRef = F9CFD638A5414DFF961A8D11 /* DroidSerif-Italic.ttf */; };
+		A173C226549E48B991AC5D98 /* Inter-UI-Medium.otf in Resources */ = {isa = PBXBuildFile; fileRef = 9FD7D997F4F14C439AC699B3 /* Inter-UI-Medium.otf */; };
+		AB7B2136E56C4B40B64F9C87 /* libMusicControl-tvOS.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 67E66409EF8A4BC7A1B9E054 /* libMusicControl-tvOS.a */; };
+		AC4174D90AD644A28D0CA9D9 /* libRNDeviceInfo-tvOS.a in Frameworks */ = {isa = PBXBuildFile; fileRef = A574C961754742F688E43151 /* libRNDeviceInfo-tvOS.a */; };
+		ADBDB9381DFEBF1600ED6528 /* libRCTBlob.a in Frameworks */ = {isa = PBXBuildFile; fileRef = ADBDB9271DFEBF0700ED6528 /* libRCTBlob.a */; };
+		B5DE58C6CF1E4E7ABDD1B48D /* libRNImagePicker.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 3F58D699A37B432BA1C0F092 /* libRNImagePicker.a */; };
+		C87CA8735EEB43C4A55CB285 /* DroidSerif-Bold.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 4629759169AB4756B447B16A /* DroidSerif-Bold.ttf */; };
+		D5744BF3B41D4BC49F93CD68 /* DroidSerif-Regular.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 76E6AD5294554A5FA53DB415 /* DroidSerif-Regular.ttf */; };
+		DEF13113111A40DF8F4FEB13 /* libRNSVG-tvOS.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 84716CBFF56347BA880A16C6 /* libRNSVG-tvOS.a */; };
+		E374C61F2AAF41D3B615AB44 /* Inter-UI-BoldItalic.otf in Resources */ = {isa = PBXBuildFile; fileRef = 32A467E2C3364ABDBB7BD0D1 /* Inter-UI-BoldItalic.otf */; };
+		F3F4A3D13570438F9562746F /* libSplashScreen.a in Frameworks */ = {isa = PBXBuildFile; fileRef = F08D1EBF0C2A4E6798AA8F36 /* libSplashScreen.a */; };
+		F8FAD93CCE5641A8B87611EA /* Inter-UI-Bold.otf in Resources */ = {isa = PBXBuildFile; fileRef = FB25CB02F40D4CC39DDA3C74 /* Inter-UI-Bold.otf */; };
 /* End PBXBuildFile section */
 
 /* Begin PBXContainerItemProxy section */
+		00C302AB1ABCB8CE00DB3ED1 /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 00C302A71ABCB8CE00DB3ED1 /* RCTActionSheet.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 134814201AA4EA6300B7C361;
+			remoteInfo = RCTActionSheet;
+		};
+		00C302B91ABCB90400DB3ED1 /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 00C302B51ABCB90400DB3ED1 /* RCTGeolocation.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 134814201AA4EA6300B7C361;
+			remoteInfo = RCTGeolocation;
+		};
+		00C302BF1ABCB91800DB3ED1 /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 00C302BB1ABCB91800DB3ED1 /* RCTImage.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 58B5115D1A9E6B3D00147676;
+			remoteInfo = RCTImage;
+		};
+		00C302DB1ABCB9D200DB3ED1 /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 00C302D31ABCB9D200DB3ED1 /* RCTNetwork.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 58B511DB1A9E6C8500147676;
+			remoteInfo = RCTNetwork;
+		};
+		00C302E31ABCB9EE00DB3ED1 /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 00C302DF1ABCB9EE00DB3ED1 /* RCTVibration.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 832C81801AAF6DEF007FA2F7;
+			remoteInfo = RCTVibration;
+		};
 		00E356F41AD99517003FC87E /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
 			containerPortal = 83CBB9F71A601CBA00E9B192 /* Project object */;
@@ -50,6 +109,27 @@
 			remoteGlobalIDString = 13B07F861A680F5B00A75B9A;
 			remoteInfo = apolloschurchapp;
 		};
+		139105C01AF99BAD00B5F7CC /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 139105B61AF99BAD00B5F7CC /* RCTSettings.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 134814201AA4EA6300B7C361;
+			remoteInfo = RCTSettings;
+		};
+		139FDEF31B06529B00C62182 /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 139FDEE61B06529A00C62182 /* RCTWebSocket.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 3C86DF461ADF2C930047B81A;
+			remoteInfo = RCTWebSocket;
+		};
+		146834031AC3E56700842450 /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 83CBBA2E1A601D0E00E9B192;
+			remoteInfo = React;
+		};
 		2D02E4911E0B4A5D006451C7 /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
 			containerPortal = 83CBB9F71A601CBA00E9B192 /* Project object */;
@@ -57,51 +137,410 @@
 			remoteGlobalIDString = 2D02E47A1E0B4A5D006451C7;
 			remoteInfo = "apolloschurchapp-tvOS";
 		};
+		2D16E6711FA4F8DC00B85C8A /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = ADBDB91F1DFEBF0600ED6528 /* RCTBlob.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = ADD01A681E09402E00F6D226;
+			remoteInfo = "RCTBlob-tvOS";
+		};
+		2D16E6831FA4F8DC00B85C8A /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 139FDEE61B06529A00C62182 /* RCTWebSocket.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 3DBE0D001F3B181A0099AA32;
+			remoteInfo = fishhook;
+		};
+		2D16E6851FA4F8DC00B85C8A /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 139FDEE61B06529A00C62182 /* RCTWebSocket.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 3DBE0D0D1F3B181C0099AA32;
+			remoteInfo = "fishhook-tvOS";
+		};
+		2DF0FFDE2056DD460020B375 /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = EBF21BDC1FC498900052F4D5;
+			remoteInfo = jsinspector;
+		};
+		2DF0FFE02056DD460020B375 /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = EBF21BFA1FC4989A0052F4D5;
+			remoteInfo = "jsinspector-tvOS";
+		};
+		2DF0FFE22056DD460020B375 /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 139D7ECE1E25DB7D00323FB7;
+			remoteInfo = "third-party";
+		};
+		2DF0FFE42056DD460020B375 /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 3D383D3C1EBD27B6005632C8;
+			remoteInfo = "third-party-tvOS";
+		};
+		2DF0FFE62056DD460020B375 /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 139D7E881E25C6D100323FB7;
+			remoteInfo = "double-conversion";
+		};
+		2DF0FFE82056DD460020B375 /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 3D383D621EBD27B9005632C8;
+			remoteInfo = "double-conversion-tvOS";
+		};
+		2DF0FFEA2056DD460020B375 /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 9936F3131F5F2E4B0010BF04;
+			remoteInfo = privatedata;
+		};
+		2DF0FFEC2056DD460020B375 /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 9936F32F1F5F2E5B0010BF04;
+			remoteInfo = "privatedata-tvOS";
+		};
+		3DAD3E831DF850E9000B6D8A /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 00C302BB1ABCB91800DB3ED1 /* RCTImage.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 2D2A283A1D9B042B00D4039D;
+			remoteInfo = "RCTImage-tvOS";
+		};
+		3DAD3E871DF850E9000B6D8A /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 78C398B01ACF4ADC00677621 /* RCTLinking.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 2D2A28471D9B043800D4039D;
+			remoteInfo = "RCTLinking-tvOS";
+		};
+		3DAD3E8B1DF850E9000B6D8A /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 00C302D31ABCB9D200DB3ED1 /* RCTNetwork.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 2D2A28541D9B044C00D4039D;
+			remoteInfo = "RCTNetwork-tvOS";
+		};
+		3DAD3E8F1DF850E9000B6D8A /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 139105B61AF99BAD00B5F7CC /* RCTSettings.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 2D2A28611D9B046600D4039D;
+			remoteInfo = "RCTSettings-tvOS";
+		};
+		3DAD3E931DF850E9000B6D8A /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 832341B01AAA6A8300B99B32 /* RCTText.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 2D2A287B1D9B048500D4039D;
+			remoteInfo = "RCTText-tvOS";
+		};
+		3DAD3E981DF850E9000B6D8A /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 139FDEE61B06529A00C62182 /* RCTWebSocket.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 2D2A28881D9B049200D4039D;
+			remoteInfo = "RCTWebSocket-tvOS";
+		};
+		3DAD3EA21DF850E9000B6D8A /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 2D2A28131D9B038B00D4039D;
+			remoteInfo = "React-tvOS";
+		};
+		3DAD3EA41DF850E9000B6D8A /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 3D3C059A1DE3340900C268FA;
+			remoteInfo = yoga;
+		};
+		3DAD3EA61DF850E9000B6D8A /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 3D3C06751DE3340C00C268FA;
+			remoteInfo = "yoga-tvOS";
+		};
+		3DAD3EA81DF850E9000B6D8A /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 3D3CD9251DE5FBEC00167DC4;
+			remoteInfo = cxxreact;
+		};
+		3DAD3EAA1DF850E9000B6D8A /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 3D3CD9321DE5FBEE00167DC4;
+			remoteInfo = "cxxreact-tvOS";
+		};
+		3DAD3EAC1DF850E9000B6D8A /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 3D3CD90B1DE5FBD600167DC4;
+			remoteInfo = jschelpers;
+		};
+		3DAD3EAE1DF850E9000B6D8A /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 3D3CD9181DE5FBD800167DC4;
+			remoteInfo = "jschelpers-tvOS";
+		};
+		427787EC2149B96A0045AD7F /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 84B340CC6C3940A782834F00 /* RCTOneSignal.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 3245CDED1BFEE35C00EABF68;
+			remoteInfo = RCTOneSignal;
+		};
+		42B4B6CB219DD7CB00162F25 /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 59AF37DEFAA847DBAB3A0526 /* RNScreens.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 134814201AA4EA6300B7C361;
+			remoteInfo = RNScreens;
+		};
+		5E9157321DD0AC6500FF2AA8 /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 5E91572D1DD0AC6500FF2AA8 /* RCTAnimation.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 134814201AA4EA6300B7C361;
+			remoteInfo = RCTAnimation;
+		};
+		5E9157341DD0AC6500FF2AA8 /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 5E91572D1DD0AC6500FF2AA8 /* RCTAnimation.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 2D2A28201D9B03D100D4039D;
+			remoteInfo = "RCTAnimation-tvOS";
+		};
+		78C398B81ACF4ADC00677621 /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 78C398B01ACF4ADC00677621 /* RCTLinking.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 134814201AA4EA6300B7C361;
+			remoteInfo = RCTLinking;
+		};
+		791434762126017B006F13B7 /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 46704FC4FCEB45B6B9DD92BB /* BVLinearGradient.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 134814201AA4EA6300B7C361;
+			remoteInfo = BVLinearGradient;
+		};
+		791434782126017B006F13B7 /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 46704FC4FCEB45B6B9DD92BB /* BVLinearGradient.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 64AA15081EF7F30100718508;
+			remoteInfo = "BVLinearGradient-tvOS";
+		};
+		7914347C2126017B006F13B7 /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 2F8741F0746D4C8A89970C4D /* RCTVideo.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 134814201AA4EA6300B7C361;
+			remoteInfo = RCTVideo;
+		};
+		7914347E2126017B006F13B7 /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 2F8741F0746D4C8A89970C4D /* RCTVideo.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 641E28441F0EEC8500443AF6;
+			remoteInfo = "RCTVideo-tvOS";
+		};
+		791434812126017B006F13B7 /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 6BAAC994942548609D0EEECA /* ReactNativeCustomTabs.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = DA7118681CC9158A0087DF95;
+			remoteInfo = DBCustomTabs;
+		};
+		791434852126017B006F13B7 /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 01441BF099BE44EE8BA8E390 /* RNSVG.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 0CF68AC11AF0540F00FF9E5C;
+			remoteInfo = RNSVG;
+		};
+		791434872126017B006F13B7 /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 01441BF099BE44EE8BA8E390 /* RNSVG.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 94DDAC5C1F3D024300EED511;
+			remoteInfo = "RNSVG-tvOS";
+		};
+		7914348A2126017B006F13B7 /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 6B6E5A404A4B4A34B18D7D34 /* SafariViewManager.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 134814201AA4EA6300B7C361;
+			remoteInfo = SafariViewManager;
+		};
+		7914348D2126017B006F13B7 /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = A64D00F181AE4927A4632B6E /* SplashScreen.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 3D7682761D8E76B80014119E;
+			remoteInfo = SplashScreen;
+		};
+		794FE987219DF8880046142B /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 59AF37DEFAA847DBAB3A0526 /* RNScreens.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 134814201AA4EA6300B7C361;
+			remoteInfo = RNScreens;
+		};
+		796F2532212CAD5D00C6935E /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 239ECFF08FA841B99DB1CAFA /* RNDeviceInfo.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = DA5891D81BA9A9FC002B4DB2;
+			remoteInfo = RNDeviceInfo;
+		};
+		796F2534212CAD5D00C6935E /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 239ECFF08FA841B99DB1CAFA /* RNDeviceInfo.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = E72EC1401F7ABB5A0001BC90;
+			remoteInfo = "RNDeviceInfo-tvOS";
+		};
+		797304182146322D00F6E05B /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 4BD3C4E6742F4F6380640CA9 /* MusicControl.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 134814201AA4EA6300B7C361;
+			remoteInfo = MusicControl;
+		};
+		7973041A2146322D00F6E05B /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 4BD3C4E6742F4F6380640CA9 /* MusicControl.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = A3FC285E1EA7A8350097B6A9;
+			remoteInfo = "MusicControl-tvOS";
+		};
+		832341B41AAA6A8300B99B32 /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 832341B01AAA6A8300B99B32 /* RCTText.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 58B5119B1A9E6C1200147676;
+			remoteInfo = RCTText;
+		};
+		ADBDB9261DFEBF0700ED6528 /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = ADBDB91F1DFEBF0600ED6528 /* RCTBlob.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 358F4ED71D1E81A9004DF814;
+			remoteInfo = RCTBlob;
+		};
+		BF9931702138673B0077FD20 /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 3BD7DCDF7B194D7BB9BE3C6C /* RNImagePicker.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 014A3B5C1C6CF33500B6D375;
+			remoteInfo = RNImagePicker;
+		};
 /* End PBXContainerItemProxy section */
 
+/* Begin PBXCopyFilesBuildPhase section */
+		4217B141214ADBC00034808C /* Embed App Extensions */ = {
+			isa = PBXCopyFilesBuildPhase;
+			buildActionMask = 2147483647;
+			dstPath = "";
+			dstSubfolderSpec = 13;
+			files = (
+			);
+			name = "Embed App Extensions";
+			runOnlyForDeploymentPostprocessing = 0;
+		};
+/* End PBXCopyFilesBuildPhase section */
+
 /* Begin PBXFileReference section */
 		008F07F21AC5B25A0029DE68 /* main.jsbundle */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = main.jsbundle; sourceTree = "<group>"; };
+		00C302A71ABCB8CE00DB3ED1 /* RCTActionSheet.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = RCTActionSheet.xcodeproj; path = "../node_modules/react-native/Libraries/ActionSheetIOS/RCTActionSheet.xcodeproj"; sourceTree = "<group>"; };
+		00C302B51ABCB90400DB3ED1 /* RCTGeolocation.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = RCTGeolocation.xcodeproj; path = "../node_modules/react-native/Libraries/Geolocation/RCTGeolocation.xcodeproj"; sourceTree = "<group>"; };
+		00C302BB1ABCB91800DB3ED1 /* RCTImage.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = RCTImage.xcodeproj; path = "../node_modules/react-native/Libraries/Image/RCTImage.xcodeproj"; sourceTree = "<group>"; };
+		00C302D31ABCB9D200DB3ED1 /* RCTNetwork.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = RCTNetwork.xcodeproj; path = "../node_modules/react-native/Libraries/Network/RCTNetwork.xcodeproj"; sourceTree = "<group>"; };
+		00C302DF1ABCB9EE00DB3ED1 /* RCTVibration.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = RCTVibration.xcodeproj; path = "../node_modules/react-native/Libraries/Vibration/RCTVibration.xcodeproj"; sourceTree = "<group>"; };
 		00E356EE1AD99517003FC87E /* apolloschurchappTests.xctest */ = {isa = PBXFileReference; explicitFileType = wrapper.cfbundle; includeInIndex = 0; path = apolloschurchappTests.xctest; sourceTree = BUILT_PRODUCTS_DIR; };
 		00E356F11AD99517003FC87E /* Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; path = Info.plist; sourceTree = "<group>"; };
 		00E356F21AD99517003FC87E /* apolloschurchappTests.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; path = apolloschurchappTests.m; sourceTree = "<group>"; };
-		0D480D95FC7F4569B8B934E3 /* libRCTOneSignal.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libRCTOneSignal.a; sourceTree = "<group>"; };
+		01441BF099BE44EE8BA8E390 /* RNSVG.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = RNSVG.xcodeproj; path = "../node_modules/react-native-svg/ios/RNSVG.xcodeproj"; sourceTree = "<group>"; };
+		10F42B11F27E467A8C71C280 /* Inter-UI-Regular.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-Regular.otf"; path = "../assets/fonts/Inter-UI-Regular.otf"; sourceTree = "<group>"; };
+		139105B61AF99BAD00B5F7CC /* RCTSettings.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = RCTSettings.xcodeproj; path = "../node_modules/react-native/Libraries/Settings/RCTSettings.xcodeproj"; sourceTree = "<group>"; };
+		139FDEE61B06529A00C62182 /* RCTWebSocket.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = RCTWebSocket.xcodeproj; path = "../node_modules/react-native/Libraries/WebSocket/RCTWebSocket.xcodeproj"; sourceTree = "<group>"; };
 		13B07F961A680F5B00A75B9A /* apolloschurchapp.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = apolloschurchapp.app; sourceTree = BUILT_PRODUCTS_DIR; };
 		13B07FAF1A68108700A75B9A /* AppDelegate.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = AppDelegate.h; path = apolloschurchapp/AppDelegate.h; sourceTree = "<group>"; };
 		13B07FB01A68108700A75B9A /* AppDelegate.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; name = AppDelegate.m; path = apolloschurchapp/AppDelegate.m; sourceTree = "<group>"; };
+		13B07FB21A68108700A75B9A /* Base */ = {isa = PBXFileReference; lastKnownFileType = file.xib; name = Base; path = Base.lproj/LaunchScreen.xib; sourceTree = "<group>"; };
 		13B07FB51A68108700A75B9A /* Images.xcassets */ = {isa = PBXFileReference; lastKnownFileType = folder.assetcatalog; name = Images.xcassets; path = apolloschurchapp/Images.xcassets; sourceTree = "<group>"; };
 		13B07FB61A68108700A75B9A /* Info.plist */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.xml; name = Info.plist; path = apolloschurchapp/Info.plist; sourceTree = "<group>"; };
 		13B07FB71A68108700A75B9A /* main.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; name = main.m; path = apolloschurchapp/main.m; sourceTree = "<group>"; };
-		1F8F5BC4745C8F22C695573D /* Pods-apolloschurchapp.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-apolloschurchapp.release.xcconfig"; path = "Target Support Files/Pods-apolloschurchapp/Pods-apolloschurchapp.release.xcconfig"; sourceTree = "<group>"; };
+		146833FF1AC3E56700842450 /* React.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = React.xcodeproj; path = "../node_modules/react-native/React/React.xcodeproj"; sourceTree = "<group>"; };
+		14D838A2FAE743C7B1DA5E31 /* libRNDeviceInfo.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libRNDeviceInfo.a; sourceTree = "<group>"; };
+		22246A6BC58E4CF09A22A4DF /* Inter-UI-BlackItalic.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-BlackItalic.otf"; path = "../assets/fonts/Inter-UI-BlackItalic.otf"; sourceTree = "<group>"; };
+		239ECFF08FA841B99DB1CAFA /* RNDeviceInfo.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = RNDeviceInfo.xcodeproj; path = "../node_modules/react-native-device-info/ios/RNDeviceInfo.xcodeproj"; sourceTree = "<group>"; };
 		2D02E47B1E0B4A5D006451C7 /* apolloschurchapp-tvOS.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = "apolloschurchapp-tvOS.app"; sourceTree = BUILT_PRODUCTS_DIR; };
 		2D02E4901E0B4A5D006451C7 /* apolloschurchapp-tvOSTests.xctest */ = {isa = PBXFileReference; explicitFileType = wrapper.cfbundle; includeInIndex = 0; path = "apolloschurchapp-tvOSTests.xctest"; sourceTree = BUILT_PRODUCTS_DIR; };
 		2D16E6891FA4F8E400B85C8A /* libReact.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; path = libReact.a; sourceTree = BUILT_PRODUCTS_DIR; };
-		2F5410F239E9477B9C2E86BD /* Inter-UI-BoldItalic.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-BoldItalic.otf"; path = "../assets/fonts/Inter-UI-BoldItalic.otf"; sourceTree = "<group>"; };
-		38B9762ACA099D28C28DBB31 /* libPods-apolloschurchapp-tvOS.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-apolloschurchapp-tvOS.a"; sourceTree = BUILT_PRODUCTS_DIR; };
-		4E007B33EDD74B82AEF02C24 /* DroidSerif-Regular.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "DroidSerif-Regular.ttf"; path = "../assets/fonts/DroidSerif-Regular.ttf"; sourceTree = "<group>"; };
-		4F64CCA987A0419EB9C02236 /* libPods-apolloschurchapp-tvOSTests.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-apolloschurchapp-tvOSTests.a"; sourceTree = BUILT_PRODUCTS_DIR; };
-		54F271B8EB67A4997A2C7D96 /* Pods-apolloschurchapp.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-apolloschurchapp.debug.xcconfig"; path = "Target Support Files/Pods-apolloschurchapp/Pods-apolloschurchapp.debug.xcconfig"; sourceTree = "<group>"; };
-		560CBCD50AE7D282715D134E /* libPods-apolloschurchappTests.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-apolloschurchappTests.a"; sourceTree = BUILT_PRODUCTS_DIR; };
-		5A5A2BC2998547F4816B82E4 /* Inter-UI-BlackItalic.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-BlackItalic.otf"; path = "../assets/fonts/Inter-UI-BlackItalic.otf"; sourceTree = "<group>"; };
-		63F6EE53A9B44B4388B5F1C2 /* Inter-UI-Italic.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-Italic.otf"; path = "../assets/fonts/Inter-UI-Italic.otf"; sourceTree = "<group>"; };
-		745C835CA2F1E1EC2425152A /* Pods-apolloschurchapp-tvOS.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-apolloschurchapp-tvOS.debug.xcconfig"; path = "Target Support Files/Pods-apolloschurchapp-tvOS/Pods-apolloschurchapp-tvOS.debug.xcconfig"; sourceTree = "<group>"; };
-		82AAE52D24187BB500D1EEC7 /* BootSplash.storyboard */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = file.storyboard; name = BootSplash.storyboard; path = apolloschurchapp/BootSplash.storyboard; sourceTree = "<group>"; };
-		A460FD7884FD4574A818005A /* Inter-UI-MediumItalic.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-MediumItalic.otf"; path = "../assets/fonts/Inter-UI-MediumItalic.otf"; sourceTree = "<group>"; };
-		A613256118404CB691DE2C8E /* Inter-UI-Regular.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-Regular.otf"; path = "../assets/fonts/Inter-UI-Regular.otf"; sourceTree = "<group>"; };
-		A93F9D112A034626A9421759 /* DroidSerif-BoldItalic.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "DroidSerif-BoldItalic.ttf"; path = "../assets/fonts/DroidSerif-BoldItalic.ttf"; sourceTree = "<group>"; };
-		AB44FC16DED929081698EDFD /* Pods-apolloschurchappTests.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-apolloschurchappTests.debug.xcconfig"; path = "Target Support Files/Pods-apolloschurchappTests/Pods-apolloschurchappTests.debug.xcconfig"; sourceTree = "<group>"; };
-		ADC3D2DB245545ADB1CAB3FE /* DroidSerif-Italic.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "DroidSerif-Italic.ttf"; path = "../assets/fonts/DroidSerif-Italic.ttf"; sourceTree = "<group>"; };
-		AE85030F59F256E90D5A4C2B /* Pods-apolloschurchapp-tvOS.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-apolloschurchapp-tvOS.release.xcconfig"; path = "Target Support Files/Pods-apolloschurchapp-tvOS/Pods-apolloschurchapp-tvOS.release.xcconfig"; sourceTree = "<group>"; };
-		D394E3064D75710E81C51EB0 /* Pods-apolloschurchapp-tvOSTests.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-apolloschurchapp-tvOSTests.debug.xcconfig"; path = "Target Support Files/Pods-apolloschurchapp-tvOSTests/Pods-apolloschurchapp-tvOSTests.debug.xcconfig"; sourceTree = "<group>"; };
-		D5157D807E164356ADE87867 /* Inter-UI-Bold.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-Bold.otf"; path = "../assets/fonts/Inter-UI-Bold.otf"; sourceTree = "<group>"; };
-		DA9745795726553C6FA9E7A8 /* Pods-apolloschurchapp-tvOSTests.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-apolloschurchapp-tvOSTests.release.xcconfig"; path = "Target Support Files/Pods-apolloschurchapp-tvOSTests/Pods-apolloschurchapp-tvOSTests.release.xcconfig"; sourceTree = "<group>"; };
-		DC74A378C1CC40E4B6192D7F /* Inter-UI-Medium.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-Medium.otf"; path = "../assets/fonts/Inter-UI-Medium.otf"; sourceTree = "<group>"; };
-		DCB1270C2429347200079762 /* apolloschurchapp.entitlements */ = {isa = PBXFileReference; lastKnownFileType = text.plist.entitlements; name = apolloschurchapp.entitlements; path = apolloschurchapp/apolloschurchapp.entitlements; sourceTree = "<group>"; };
-		DDB6B5B7B6A0D1ECB68CF0DD /* libPods-apolloschurchapp.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-apolloschurchapp.a"; sourceTree = BUILT_PRODUCTS_DIR; };
-		E3B8A0AC5A6B4FABB3BDF6CB /* DroidSerif-Bold.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "DroidSerif-Bold.ttf"; path = "../assets/fonts/DroidSerif-Bold.ttf"; sourceTree = "<group>"; };
-		E98AC9782C338F13632EF710 /* Pods-apolloschurchappTests.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-apolloschurchappTests.release.xcconfig"; path = "Target Support Files/Pods-apolloschurchappTests/Pods-apolloschurchappTests.release.xcconfig"; sourceTree = "<group>"; };
-		EC21254B449443F99016EBFD /* Inter-UI-Black.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-Black.otf"; path = "../assets/fonts/Inter-UI-Black.otf"; sourceTree = "<group>"; };
-		ED297162215061F000B7C4FE /* JavaScriptCore.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = JavaScriptCore.framework; path = System/Library/Frameworks/JavaScriptCore.framework; sourceTree = SDKROOT; };
-		ED2971642150620600B7C4FE /* JavaScriptCore.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = JavaScriptCore.framework; path = Platforms/AppleTVOS.platform/Developer/SDKs/AppleTVOS12.0.sdk/System/Library/Frameworks/JavaScriptCore.framework; sourceTree = DEVELOPER_DIR; };
+		2F8741F0746D4C8A89970C4D /* RCTVideo.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = RCTVideo.xcodeproj; path = "../node_modules/react-native-video/ios/RCTVideo.xcodeproj"; sourceTree = "<group>"; };
+		32A467E2C3364ABDBB7BD0D1 /* Inter-UI-BoldItalic.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-BoldItalic.otf"; path = "../assets/fonts/Inter-UI-BoldItalic.otf"; sourceTree = "<group>"; };
+		3BD7DCDF7B194D7BB9BE3C6C /* RNImagePicker.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = RNImagePicker.xcodeproj; path = "../node_modules/react-native-image-picker/ios/RNImagePicker.xcodeproj"; sourceTree = "<group>"; };
+		3F58D699A37B432BA1C0F092 /* libRNImagePicker.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libRNImagePicker.a; sourceTree = "<group>"; };
+		4217B130214ADB740034808C /* apolloschurchapp.entitlements */ = {isa = PBXFileReference; lastKnownFileType = text.plist.entitlements; name = apolloschurchapp.entitlements; path = apolloschurchapp/apolloschurchapp.entitlements; sourceTree = "<group>"; };
+		4217B142214ADCD50034808C /* UIKit.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = UIKit.framework; path = System/Library/Frameworks/UIKit.framework; sourceTree = SDKROOT; };
+		4217B144214ADCE10034808C /* SystemConfiguration.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = SystemConfiguration.framework; path = System/Library/Frameworks/SystemConfiguration.framework; sourceTree = SDKROOT; };
+		4629759169AB4756B447B16A /* DroidSerif-Bold.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "DroidSerif-Bold.ttf"; path = "../assets/fonts/DroidSerif-Bold.ttf"; sourceTree = "<group>"; };
+		46704FC4FCEB45B6B9DD92BB /* BVLinearGradient.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = BVLinearGradient.xcodeproj; path = "../node_modules/react-native-linear-gradient/BVLinearGradient.xcodeproj"; sourceTree = "<group>"; };
+		4BD3C4E6742F4F6380640CA9 /* MusicControl.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = MusicControl.xcodeproj; path = "../node_modules/react-native-music-control/ios/MusicControl.xcodeproj"; sourceTree = "<group>"; };
+		59AF37DEFAA847DBAB3A0526 /* RNScreens.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = RNScreens.xcodeproj; path = "../node_modules/react-native-screens/ios/RNScreens.xcodeproj"; sourceTree = "<group>"; };
+		5E91572D1DD0AC6500FF2AA8 /* RCTAnimation.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = RCTAnimation.xcodeproj; path = "../node_modules/react-native/Libraries/NativeAnimation/RCTAnimation.xcodeproj"; sourceTree = "<group>"; };
+		60E52391C9744A46B3925A78 /* libBVLinearGradient.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libBVLinearGradient.a; sourceTree = "<group>"; };
+		643D51DCF8F14993B9AA6990 /* libMusicControl.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libMusicControl.a; sourceTree = "<group>"; };
+		67E66409EF8A4BC7A1B9E054 /* libMusicControl-tvOS.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = "libMusicControl-tvOS.a"; sourceTree = "<group>"; };
+		6B6E5A404A4B4A34B18D7D34 /* SafariViewManager.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = SafariViewManager.xcodeproj; path = "../node_modules/react-native-safari-view/SafariViewManager.xcodeproj"; sourceTree = "<group>"; };
+		6BAAC994942548609D0EEECA /* ReactNativeCustomTabs.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = ReactNativeCustomTabs.xcodeproj; path = "../node_modules/react-native-custom-tabs/ios/ReactNativeCustomTabs.xcodeproj"; sourceTree = "<group>"; };
+		71E6499CCC9D4DB2ADD365D8 /* libDBCustomTabs.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libDBCustomTabs.a; sourceTree = "<group>"; };
+		76E6AD5294554A5FA53DB415 /* DroidSerif-Regular.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "DroidSerif-Regular.ttf"; path = "../assets/fonts/DroidSerif-Regular.ttf"; sourceTree = "<group>"; };
+		78C398B01ACF4ADC00677621 /* RCTLinking.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = RCTLinking.xcodeproj; path = "../node_modules/react-native/Libraries/LinkingIOS/RCTLinking.xcodeproj"; sourceTree = "<group>"; };
+		828255630B3246AEA19CF24D /* libRCTOneSignal.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libRCTOneSignal.a; sourceTree = "<group>"; };
+		832341B01AAA6A8300B99B32 /* RCTText.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = RCTText.xcodeproj; path = "../node_modules/react-native/Libraries/Text/RCTText.xcodeproj"; sourceTree = "<group>"; };
+		84716CBFF56347BA880A16C6 /* libRNSVG-tvOS.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = "libRNSVG-tvOS.a"; sourceTree = "<group>"; };
+		84B340CC6C3940A782834F00 /* RCTOneSignal.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = RCTOneSignal.xcodeproj; path = "../node_modules/react-native-onesignal/ios/RCTOneSignal.xcodeproj"; sourceTree = "<group>"; };
+		8CA3C04F98954FB2895CD36D /* Inter-UI-Italic.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-Italic.otf"; path = "../assets/fonts/Inter-UI-Italic.otf"; sourceTree = "<group>"; };
+		8E13C8F9AE60487C9ED95C21 /* Inter-UI-Black.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-Black.otf"; path = "../assets/fonts/Inter-UI-Black.otf"; sourceTree = "<group>"; };
+		9FD7D997F4F14C439AC699B3 /* Inter-UI-Medium.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-Medium.otf"; path = "../assets/fonts/Inter-UI-Medium.otf"; sourceTree = "<group>"; };
+		A574C961754742F688E43151 /* libRNDeviceInfo-tvOS.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = "libRNDeviceInfo-tvOS.a"; sourceTree = "<group>"; };
+		A64D00F181AE4927A4632B6E /* SplashScreen.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = SplashScreen.xcodeproj; path = "../node_modules/react-native-splash-screen/ios/SplashScreen.xcodeproj"; sourceTree = "<group>"; };
+		ADBDB91F1DFEBF0600ED6528 /* RCTBlob.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = RCTBlob.xcodeproj; path = "../node_modules/react-native/Libraries/Blob/RCTBlob.xcodeproj"; sourceTree = "<group>"; };
+		B16900D1DAC94F96B742B4EA /* libRNScreens.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libRNScreens.a; sourceTree = "<group>"; };
+		BF5A2B416EB74A44923FED7B /* libSafariViewManager.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libSafariViewManager.a; sourceTree = "<group>"; };
+		CFAF46FBA8B44C7B8DCA7707 /* libRNSVG.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libRNSVG.a; sourceTree = "<group>"; };
+		D979B537509247C099CE3F24 /* DroidSerif-BoldItalic.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "DroidSerif-BoldItalic.ttf"; path = "../assets/fonts/DroidSerif-BoldItalic.ttf"; sourceTree = "<group>"; };
+		F08D1EBF0C2A4E6798AA8F36 /* libSplashScreen.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libSplashScreen.a; sourceTree = "<group>"; };
+		F79112193F3548D284406ABF /* Inter-UI-MediumItalic.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-MediumItalic.otf"; path = "../assets/fonts/Inter-UI-MediumItalic.otf"; sourceTree = "<group>"; };
+		F9CFD638A5414DFF961A8D11 /* DroidSerif-Italic.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "DroidSerif-Italic.ttf"; path = "../assets/fonts/DroidSerif-Italic.ttf"; sourceTree = "<group>"; };
+		FB25CB02F40D4CC39DDA3C74 /* Inter-UI-Bold.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-Bold.otf"; path = "../assets/fonts/Inter-UI-Bold.otf"; sourceTree = "<group>"; };
+		FC8FFB7C37BB4499AEB6FA37 /* libRCTVideo.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libRCTVideo.a; sourceTree = "<group>"; };
 /* End PBXFileReference section */
 
 /* Begin PBXFrameworksBuildPhase section */
@@ -109,7 +548,7 @@
 			isa = PBXFrameworksBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
-				A415698B9815C7305EDB7AA7 /* libPods-apolloschurchappTests.a in Frameworks */,
+				140ED2AC1D01E1AD002B40FF /* libReact.a in Frameworks */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
@@ -117,8 +556,30 @@
 			isa = PBXFrameworksBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
-				ED297163215061F000B7C4FE /* JavaScriptCore.framework in Frameworks */,
-				E875558F3FB8FA2024EF7DC2 /* libPods-apolloschurchapp.a in Frameworks */,
+				ADBDB9381DFEBF1600ED6528 /* libRCTBlob.a in Frameworks */,
+				5E9157361DD0AC6A00FF2AA8 /* libRCTAnimation.a in Frameworks */,
+				146834051AC3E58100842450 /* libReact.a in Frameworks */,
+				5E9157361DD0AC6A00FF2AA8 /* libRCTAnimation.a in Frameworks */,
+				00C302E51ABCBA2D00DB3ED1 /* libRCTActionSheet.a in Frameworks */,
+				00C302E71ABCBA2D00DB3ED1 /* libRCTGeolocation.a in Frameworks */,
+				00C302E81ABCBA2D00DB3ED1 /* libRCTImage.a in Frameworks */,
+				133E29F31AD74F7200F7D852 /* libRCTLinking.a in Frameworks */,
+				00C302E91ABCBA2D00DB3ED1 /* libRCTNetwork.a in Frameworks */,
+				139105C61AF99C1200B5F7CC /* libRCTSettings.a in Frameworks */,
+				832341BD1AAA6AB300B99B32 /* libRCTText.a in Frameworks */,
+				00C302EA1ABCBA2D00DB3ED1 /* libRCTVibration.a in Frameworks */,
+				139FDEF61B0652A700C62182 /* libRCTWebSocket.a in Frameworks */,
+				3CAA28FFFCCF46518672AC8F /* libDBCustomTabs.a in Frameworks */,
+				9388C44B949C4DBAAA7256D5 /* libBVLinearGradient.a in Frameworks */,
+				4B29B8AACC2A4FB7BA6A8EEB /* libSafariViewManager.a in Frameworks */,
+				F3F4A3D13570438F9562746F /* libSplashScreen.a in Frameworks */,
+				89331B8BDAF24EF5BE08A485 /* libRNSVG.a in Frameworks */,
+				86D0B47B5BF143E797822EF1 /* libRCTVideo.a in Frameworks */,
+				6C6BE3C2189E4FBA9FB66BE5 /* libRCTOneSignal.a in Frameworks */,
+				B5DE58C6CF1E4E7ABDD1B48D /* libRNImagePicker.a in Frameworks */,
+				1C1FD8B313AB4A6583A0D31B /* libRNDeviceInfo.a in Frameworks */,
+				1680179655164C96985B5731 /* libMusicControl.a in Frameworks */,
+				5C862E57737C4032A378868D /* libRNScreens.a in Frameworks */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
@@ -126,9 +587,17 @@
 			isa = PBXFrameworksBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
-				ED2971652150620600B7C4FE /* JavaScriptCore.framework in Frameworks */,
 				2D16E6881FA4F8E400B85C8A /* libReact.a in Frameworks */,
-				8EA9BDE542E09F685A47D9BE /* libPods-apolloschurchapp-tvOS.a in Frameworks */,
+				2D02E4C21E0B4AEC006451C7 /* libRCTAnimation.a in Frameworks */,
+				2D02E4C31E0B4AEC006451C7 /* libRCTImage-tvOS.a in Frameworks */,
+				2D02E4C41E0B4AEC006451C7 /* libRCTLinking-tvOS.a in Frameworks */,
+				2D02E4C51E0B4AEC006451C7 /* libRCTNetwork-tvOS.a in Frameworks */,
+				2D02E4C61E0B4AEC006451C7 /* libRCTSettings-tvOS.a in Frameworks */,
+				2D02E4C71E0B4AEC006451C7 /* libRCTText-tvOS.a in Frameworks */,
+				2D02E4C81E0B4AEC006451C7 /* libRCTWebSocket-tvOS.a in Frameworks */,
+				DEF13113111A40DF8F4FEB13 /* libRNSVG-tvOS.a in Frameworks */,
+				AC4174D90AD644A28D0CA9D9 /* libRNDeviceInfo-tvOS.a in Frameworks */,
+				AB7B2136E56C4B40B64F9C87 /* libMusicControl-tvOS.a in Frameworks */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
@@ -136,13 +605,55 @@
 			isa = PBXFrameworksBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
-				25B9E67E3B46D33F45473A84 /* libPods-apolloschurchapp-tvOSTests.a in Frameworks */,
+				2DF0FFEE2056DD460020B375 /* libReact.a in Frameworks */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
 /* End PBXFrameworksBuildPhase section */
 
 /* Begin PBXGroup section */
+		00C302A81ABCB8CE00DB3ED1 /* Products */ = {
+			isa = PBXGroup;
+			children = (
+				00C302AC1ABCB8CE00DB3ED1 /* libRCTActionSheet.a */,
+			);
+			name = Products;
+			sourceTree = "<group>";
+		};
+		00C302B61ABCB90400DB3ED1 /* Products */ = {
+			isa = PBXGroup;
+			children = (
+				00C302BA1ABCB90400DB3ED1 /* libRCTGeolocation.a */,
+			);
+			name = Products;
+			sourceTree = "<group>";
+		};
+		00C302BC1ABCB91800DB3ED1 /* Products */ = {
+			isa = PBXGroup;
+			children = (
+				00C302C01ABCB91800DB3ED1 /* libRCTImage.a */,
+				3DAD3E841DF850E9000B6D8A /* libRCTImage-tvOS.a */,
+			);
+			name = Products;
+			sourceTree = "<group>";
+		};
+		00C302D41ABCB9D200DB3ED1 /* Products */ = {
+			isa = PBXGroup;
+			children = (
+				00C302DC1ABCB9D200DB3ED1 /* libRCTNetwork.a */,
+				3DAD3E8C1DF850E9000B6D8A /* libRCTNetwork-tvOS.a */,
+			);
+			name = Products;
+			sourceTree = "<group>";
+		};
+		00C302E01ABCB9EE00DB3ED1 /* Products */ = {
+			isa = PBXGroup;
+			children = (
+				00C302E41ABCB9EE00DB3ED1 /* libRCTVibration.a */,
+			);
+			name = Products;
+			sourceTree = "<group>";
+		};
 		00E356EF1AD99517003FC87E /* apolloschurchappTests */ = {
 			isa = PBXGroup;
 			children = (
@@ -160,84 +671,264 @@
 			name = "Supporting Files";
 			sourceTree = "<group>";
 		};
+		139105B71AF99BAD00B5F7CC /* Products */ = {
+			isa = PBXGroup;
+			children = (
+				139105C11AF99BAD00B5F7CC /* libRCTSettings.a */,
+				3DAD3E901DF850E9000B6D8A /* libRCTSettings-tvOS.a */,
+			);
+			name = Products;
+			sourceTree = "<group>";
+		};
+		139FDEE71B06529A00C62182 /* Products */ = {
+			isa = PBXGroup;
+			children = (
+				139FDEF41B06529B00C62182 /* libRCTWebSocket.a */,
+				3DAD3E991DF850E9000B6D8A /* libRCTWebSocket-tvOS.a */,
+				2D16E6841FA4F8DC00B85C8A /* libfishhook.a */,
+				2D16E6861FA4F8DC00B85C8A /* libfishhook-tvOS.a */,
+			);
+			name = Products;
+			sourceTree = "<group>";
+		};
 		13B07FAE1A68108700A75B9A /* apolloschurchapp */ = {
 			isa = PBXGroup;
 			children = (
-				DCB1270C2429347200079762 /* apolloschurchapp.entitlements */,
+				4217B130214ADB740034808C /* apolloschurchapp.entitlements */,
 				008F07F21AC5B25A0029DE68 /* main.jsbundle */,
 				13B07FAF1A68108700A75B9A /* AppDelegate.h */,
 				13B07FB01A68108700A75B9A /* AppDelegate.m */,
 				13B07FB51A68108700A75B9A /* Images.xcassets */,
-				82AAE52D24187BB500D1EEC7 /* BootSplash.storyboard */,
 				13B07FB61A68108700A75B9A /* Info.plist */,
+				13B07FB11A68108700A75B9A /* LaunchScreen.xib */,
 				13B07FB71A68108700A75B9A /* main.m */,
 			);
 			name = apolloschurchapp;
 			sourceTree = "<group>";
 		};
+		146834001AC3E56700842450 /* Products */ = {
+			isa = PBXGroup;
+			children = (
+				146834041AC3E56700842450 /* libReact.a */,
+				3DAD3EA31DF850E9000B6D8A /* libReact.a */,
+				3DAD3EA51DF850E9000B6D8A /* libyoga.a */,
+				3DAD3EA71DF850E9000B6D8A /* libyoga.a */,
+				3DAD3EA91DF850E9000B6D8A /* libcxxreact.a */,
+				3DAD3EAB1DF850E9000B6D8A /* libcxxreact.a */,
+				3DAD3EAD1DF850E9000B6D8A /* libjschelpers.a */,
+				3DAD3EAF1DF850E9000B6D8A /* libjschelpers.a */,
+				2DF0FFDF2056DD460020B375 /* libjsinspector.a */,
+				2DF0FFE12056DD460020B375 /* libjsinspector-tvOS.a */,
+				2DF0FFE32056DD460020B375 /* libthird-party.a */,
+				2DF0FFE52056DD460020B375 /* libthird-party.a */,
+				2DF0FFE72056DD460020B375 /* libdouble-conversion.a */,
+				2DF0FFE92056DD460020B375 /* libdouble-conversion.a */,
+				2DF0FFEB2056DD460020B375 /* libprivatedata.a */,
+				2DF0FFED2056DD460020B375 /* libprivatedata-tvOS.a */,
+			);
+			name = Products;
+			sourceTree = "<group>";
+		};
 		2D16E6871FA4F8E400B85C8A /* Frameworks */ = {
 			isa = PBXGroup;
 			children = (
-				ED297162215061F000B7C4FE /* JavaScriptCore.framework */,
-				ED2971642150620600B7C4FE /* JavaScriptCore.framework */,
+				4217B144214ADCE10034808C /* SystemConfiguration.framework */,
+				4217B142214ADCD50034808C /* UIKit.framework */,
 				2D16E6891FA4F8E400B85C8A /* libReact.a */,
-				DDB6B5B7B6A0D1ECB68CF0DD /* libPods-apolloschurchapp.a */,
-				38B9762ACA099D28C28DBB31 /* libPods-apolloschurchapp-tvOS.a */,
-				4F64CCA987A0419EB9C02236 /* libPods-apolloschurchapp-tvOSTests.a */,
-				560CBCD50AE7D282715D134E /* libPods-apolloschurchappTests.a */,
 			);
 			name = Frameworks;
 			sourceTree = "<group>";
 		};
-		58D6A3E05A234CD89DC0BCE1 /* Resources */ = {
+		427787E92149B9690045AD7F /* Products */ = {
 			isa = PBXGroup;
 			children = (
-				E3B8A0AC5A6B4FABB3BDF6CB /* DroidSerif-Bold.ttf */,
-				A93F9D112A034626A9421759 /* DroidSerif-BoldItalic.ttf */,
-				ADC3D2DB245545ADB1CAB3FE /* DroidSerif-Italic.ttf */,
-				4E007B33EDD74B82AEF02C24 /* DroidSerif-Regular.ttf */,
-				EC21254B449443F99016EBFD /* Inter-UI-Black.otf */,
-				5A5A2BC2998547F4816B82E4 /* Inter-UI-BlackItalic.otf */,
-				D5157D807E164356ADE87867 /* Inter-UI-Bold.otf */,
-				2F5410F239E9477B9C2E86BD /* Inter-UI-BoldItalic.otf */,
-				63F6EE53A9B44B4388B5F1C2 /* Inter-UI-Italic.otf */,
-				DC74A378C1CC40E4B6192D7F /* Inter-UI-Medium.otf */,
-				A460FD7884FD4574A818005A /* Inter-UI-MediumItalic.otf */,
-				A613256118404CB691DE2C8E /* Inter-UI-Regular.otf */,
+				427787ED2149B96A0045AD7F /* libRCTOneSignal.a */,
+			);
+			name = Products;
+			sourceTree = "<group>";
+		};
+		42B4B698219DD7CA00162F25 /* Products */ = {
+			isa = PBXGroup;
+			children = (
+				42B4B6CC219DD7CB00162F25 /* libRNScreens.a */,
+			);
+			name = Products;
+			sourceTree = "<group>";
+		};
+		4446111C6E474E038489E599 /* Resources */ = {
+			isa = PBXGroup;
+			children = (
+				4629759169AB4756B447B16A /* DroidSerif-Bold.ttf */,
+				D979B537509247C099CE3F24 /* DroidSerif-BoldItalic.ttf */,
+				F9CFD638A5414DFF961A8D11 /* DroidSerif-Italic.ttf */,
+				76E6AD5294554A5FA53DB415 /* DroidSerif-Regular.ttf */,
+				8E13C8F9AE60487C9ED95C21 /* Inter-UI-Black.otf */,
+				22246A6BC58E4CF09A22A4DF /* Inter-UI-BlackItalic.otf */,
+				FB25CB02F40D4CC39DDA3C74 /* Inter-UI-Bold.otf */,
+				32A467E2C3364ABDBB7BD0D1 /* Inter-UI-BoldItalic.otf */,
+				8CA3C04F98954FB2895CD36D /* Inter-UI-Italic.otf */,
+				9FD7D997F4F14C439AC699B3 /* Inter-UI-Medium.otf */,
+				F79112193F3548D284406ABF /* Inter-UI-MediumItalic.otf */,
+				10F42B11F27E467A8C71C280 /* Inter-UI-Regular.otf */,
 			);
 			name = Resources;
 			sourceTree = "<group>";
 		};
-		76EC01CF690166B3232686FE /* Pods */ = {
+		5E91572E1DD0AC6500FF2AA8 /* Products */ = {
 			isa = PBXGroup;
 			children = (
-				54F271B8EB67A4997A2C7D96 /* Pods-apolloschurchapp.debug.xcconfig */,
-				1F8F5BC4745C8F22C695573D /* Pods-apolloschurchapp.release.xcconfig */,
-				745C835CA2F1E1EC2425152A /* Pods-apolloschurchapp-tvOS.debug.xcconfig */,
-				AE85030F59F256E90D5A4C2B /* Pods-apolloschurchapp-tvOS.release.xcconfig */,
-				D394E3064D75710E81C51EB0 /* Pods-apolloschurchapp-tvOSTests.debug.xcconfig */,
-				DA9745795726553C6FA9E7A8 /* Pods-apolloschurchapp-tvOSTests.release.xcconfig */,
-				AB44FC16DED929081698EDFD /* Pods-apolloschurchappTests.debug.xcconfig */,
-				E98AC9782C338F13632EF710 /* Pods-apolloschurchappTests.release.xcconfig */,
-			);
-			path = Pods;
+				5E9157331DD0AC6500FF2AA8 /* libRCTAnimation.a */,
+				5E9157351DD0AC6500FF2AA8 /* libRCTAnimation.a */,
+			);
+			name = Products;
+			sourceTree = "<group>";
+		};
+		78C398B11ACF4ADC00677621 /* Products */ = {
+			isa = PBXGroup;
+			children = (
+				78C398B91ACF4ADC00677621 /* libRCTLinking.a */,
+				3DAD3E881DF850E9000B6D8A /* libRCTLinking-tvOS.a */,
+			);
+			name = Products;
 			sourceTree = "<group>";
 		};
-		79CEBF9D223011FC00D8F685 /* Recovered References */ = {
+		7914344221260177006F13B7 /* Recovered References */ = {
 			isa = PBXGroup;
 			children = (
-				0D480D95FC7F4569B8B934E3 /* libRCTOneSignal.a */,
+				71E6499CCC9D4DB2ADD365D8 /* libDBCustomTabs.a */,
+				60E52391C9744A46B3925A78 /* libBVLinearGradient.a */,
+				BF5A2B416EB74A44923FED7B /* libSafariViewManager.a */,
+				F08D1EBF0C2A4E6798AA8F36 /* libSplashScreen.a */,
+				CFAF46FBA8B44C7B8DCA7707 /* libRNSVG.a */,
+				FC8FFB7C37BB4499AEB6FA37 /* libRCTVideo.a */,
+				84716CBFF56347BA880A16C6 /* libRNSVG-tvOS.a */,
+				828255630B3246AEA19CF24D /* libRCTOneSignal.a */,
+				3F58D699A37B432BA1C0F092 /* libRNImagePicker.a */,
+				14D838A2FAE743C7B1DA5E31 /* libRNDeviceInfo.a */,
+				A574C961754742F688E43151 /* libRNDeviceInfo-tvOS.a */,
+				643D51DCF8F14993B9AA6990 /* libMusicControl.a */,
+				67E66409EF8A4BC7A1B9E054 /* libMusicControl-tvOS.a */,
+				B16900D1DAC94F96B742B4EA /* libRNScreens.a */,
 			);
 			name = "Recovered References";
 			sourceTree = "<group>";
 		};
+		791434682126017A006F13B7 /* Products */ = {
+			isa = PBXGroup;
+			children = (
+				7914348B2126017B006F13B7 /* libSafariViewManager.a */,
+			);
+			name = Products;
+			sourceTree = "<group>";
+		};
+		7914346A2126017A006F13B7 /* Products */ = {
+			isa = PBXGroup;
+			children = (
+				791434822126017B006F13B7 /* libDBCustomTabs.a */,
+			);
+			name = Products;
+			sourceTree = "<group>";
+		};
+		7914346C2126017A006F13B7 /* Products */ = {
+			isa = PBXGroup;
+			children = (
+				7914348E2126017B006F13B7 /* libSplashScreen.a */,
+			);
+			name = Products;
+			sourceTree = "<group>";
+		};
+		7914346E2126017A006F13B7 /* Products */ = {
+			isa = PBXGroup;
+			children = (
+				791434772126017B006F13B7 /* libBVLinearGradient.a */,
+				791434792126017B006F13B7 /* libBVLinearGradient.a */,
+			);
+			name = Products;
+			sourceTree = "<group>";
+		};
+		791434702126017A006F13B7 /* Products */ = {
+			isa = PBXGroup;
+			children = (
+				791434862126017B006F13B7 /* libRNSVG.a */,
+				791434882126017B006F13B7 /* libRNSVG-tvOS.a */,
+			);
+			name = Products;
+			sourceTree = "<group>";
+		};
+		791434722126017A006F13B7 /* Products */ = {
+			isa = PBXGroup;
+			children = (
+				7914347D2126017B006F13B7 /* libRCTVideo.a */,
+				7914347F2126017B006F13B7 /* libRCTVideo.a */,
+			);
+			name = Products;
+			sourceTree = "<group>";
+		};
+		794FE954219DF8880046142B /* Products */ = {
+			isa = PBXGroup;
+			children = (
+				794FE988219DF8880046142B /* libRNScreens.a */,
+			);
+			name = Products;
+			sourceTree = "<group>";
+		};
+		796F252E212CAD5D00C6935E /* Products */ = {
+			isa = PBXGroup;
+			children = (
+				796F2533212CAD5D00C6935E /* libRNDeviceInfo.a */,
+				796F2535212CAD5D00C6935E /* libRNDeviceInfo-tvOS.a */,
+			);
+			name = Products;
+			sourceTree = "<group>";
+		};
+		797304142146322D00F6E05B /* Products */ = {
+			isa = PBXGroup;
+			children = (
+				797304192146322D00F6E05B /* libMusicControl.a */,
+				7973041B2146322D00F6E05B /* libMusicControl-tvOS.a */,
+			);
+			name = Products;
+			sourceTree = "<group>";
+		};
 		832341AE1AAA6A7D00B99B32 /* Libraries */ = {
 			isa = PBXGroup;
 			children = (
+				5E91572D1DD0AC6500FF2AA8 /* RCTAnimation.xcodeproj */,
+				146833FF1AC3E56700842450 /* React.xcodeproj */,
+				00C302A71ABCB8CE00DB3ED1 /* RCTActionSheet.xcodeproj */,
+				ADBDB91F1DFEBF0600ED6528 /* RCTBlob.xcodeproj */,
+				00C302B51ABCB90400DB3ED1 /* RCTGeolocation.xcodeproj */,
+				00C302BB1ABCB91800DB3ED1 /* RCTImage.xcodeproj */,
+				78C398B01ACF4ADC00677621 /* RCTLinking.xcodeproj */,
+				00C302D31ABCB9D200DB3ED1 /* RCTNetwork.xcodeproj */,
+				139105B61AF99BAD00B5F7CC /* RCTSettings.xcodeproj */,
+				832341B01AAA6A8300B99B32 /* RCTText.xcodeproj */,
+				00C302DF1ABCB9EE00DB3ED1 /* RCTVibration.xcodeproj */,
+				139FDEE61B06529A00C62182 /* RCTWebSocket.xcodeproj */,
+				6BAAC994942548609D0EEECA /* ReactNativeCustomTabs.xcodeproj */,
+				46704FC4FCEB45B6B9DD92BB /* BVLinearGradient.xcodeproj */,
+				6B6E5A404A4B4A34B18D7D34 /* SafariViewManager.xcodeproj */,
+				A64D00F181AE4927A4632B6E /* SplashScreen.xcodeproj */,
+				01441BF099BE44EE8BA8E390 /* RNSVG.xcodeproj */,
+				2F8741F0746D4C8A89970C4D /* RCTVideo.xcodeproj */,
+				84B340CC6C3940A782834F00 /* RCTOneSignal.xcodeproj */,
+				3BD7DCDF7B194D7BB9BE3C6C /* RNImagePicker.xcodeproj */,
+				239ECFF08FA841B99DB1CAFA /* RNDeviceInfo.xcodeproj */,
+				4BD3C4E6742F4F6380640CA9 /* MusicControl.xcodeproj */,
+				59AF37DEFAA847DBAB3A0526 /* RNScreens.xcodeproj */,
 			);
 			name = Libraries;
 			sourceTree = "<group>";
 		};
+		832341B11AAA6A8300B99B32 /* Products */ = {
+			isa = PBXGroup;
+			children = (
+				832341B51AAA6A8300B99B32 /* libRCTText.a */,
+				3DAD3E941DF850E9000B6D8A /* libRCTText-tvOS.a */,
+			);
+			name = Products;
+			sourceTree = "<group>";
+		};
 		83CBB9F61A601CBA00E9B192 = {
 			isa = PBXGroup;
 			children = (
@@ -246,9 +937,8 @@
 				00E356EF1AD99517003FC87E /* apolloschurchappTests */,
 				83CBBA001A601CBA00E9B192 /* Products */,
 				2D16E6871FA4F8E400B85C8A /* Frameworks */,
-				58D6A3E05A234CD89DC0BCE1 /* Resources */,
-				79CEBF9D223011FC00D8F685 /* Recovered References */,
-				76EC01CF690166B3232686FE /* Pods */,
+				4446111C6E474E038489E599 /* Resources */,
+				7914344221260177006F13B7 /* Recovered References */,
 			);
 			indentWidth = 2;
 			sourceTree = "<group>";
@@ -266,6 +956,23 @@
 			name = Products;
 			sourceTree = "<group>";
 		};
+		ADBDB9201DFEBF0600ED6528 /* Products */ = {
+			isa = PBXGroup;
+			children = (
+				ADBDB9271DFEBF0700ED6528 /* libRCTBlob.a */,
+				2D16E6721FA4F8DC00B85C8A /* libRCTBlob-tvOS.a */,
+			);
+			name = Products;
+			sourceTree = "<group>";
+		};
+		BF99316D2138673B0077FD20 /* Products */ = {
+			isa = PBXGroup;
+			children = (
+				BF9931712138673B0077FD20 /* libRNImagePicker.a */,
+			);
+			name = Products;
+			sourceTree = "<group>";
+		};
 /* End PBXGroup section */
 
 /* Begin PBXNativeTarget section */
@@ -273,7 +980,6 @@
 			isa = PBXNativeTarget;
 			buildConfigurationList = 00E357021AD99517003FC87E /* Build configuration list for PBXNativeTarget "apolloschurchappTests" */;
 			buildPhases = (
-				2C62ED438C51D0F43EC7017B /* [CP] Check Pods Manifest.lock */,
 				00E356EA1AD99517003FC87E /* Sources */,
 				00E356EB1AD99517003FC87E /* Frameworks */,
 				00E356EC1AD99517003FC87E /* Resources */,
@@ -292,12 +998,11 @@
 			isa = PBXNativeTarget;
 			buildConfigurationList = 13B07F931A680F5B00A75B9A /* Build configuration list for PBXNativeTarget "apolloschurchapp" */;
 			buildPhases = (
-				DEEF24CE4F76789E5E8C369D /* [CP] Check Pods Manifest.lock */,
 				13B07F871A680F5B00A75B9A /* Sources */,
 				13B07F8C1A680F5B00A75B9A /* Frameworks */,
 				13B07F8E1A680F5B00A75B9A /* Resources */,
 				00DD1BFF1BD5951E006B06BC /* Bundle React Native code and images */,
-				43D579D8398224D7B09F58F6 /* [CP] Copy Pods Resources */,
+				4217B141214ADBC00034808C /* Embed App Extensions */,
 			);
 			buildRules = (
 			);
@@ -312,7 +1017,6 @@
 			isa = PBXNativeTarget;
 			buildConfigurationList = 2D02E4BA1E0B4A5E006451C7 /* Build configuration list for PBXNativeTarget "apolloschurchapp-tvOS" */;
 			buildPhases = (
-				9C20354F160AAF86C8281F23 /* [CP] Check Pods Manifest.lock */,
 				2D02E4771E0B4A5D006451C7 /* Sources */,
 				2D02E4781E0B4A5D006451C7 /* Frameworks */,
 				2D02E4791E0B4A5D006451C7 /* Resources */,
@@ -331,7 +1035,6 @@
 			isa = PBXNativeTarget;
 			buildConfigurationList = 2D02E4BB1E0B4A5E006451C7 /* Build configuration list for PBXNativeTarget "apolloschurchapp-tvOSTests" */;
 			buildPhases = (
-				A85CD736CDC3356677735901 /* [CP] Check Pods Manifest.lock */,
 				2D02E48C1E0B4A5D006451C7 /* Sources */,
 				2D02E48D1E0B4A5D006451C7 /* Frameworks */,
 				2D02E48E1E0B4A5D006451C7 /* Resources */,
@@ -352,7 +1055,7 @@
 		83CBB9F71A601CBA00E9B192 /* Project object */ = {
 			isa = PBXProject;
 			attributes = {
-				LastUpgradeCheck = 940;
+				LastUpgradeCheck = 610;
 				ORGANIZATIONNAME = Facebook;
 				TargetAttributes = {
 					00E356ED1AD99517003FC87E = {
@@ -361,7 +1064,11 @@
 					};
 					13B07F861A680F5B00A75B9A = {
 						DevelopmentTeam = 7TM8C6252Z;
-						ProvisioningStyle = Automatic;
+						SystemCapabilities = {
+							com.apple.Push = {
+								enabled = 1;
+							};
+						};
 					};
 					2D02E47A1E0B4A5D006451C7 = {
 						CreatedOnToolsVersion = 8.2.1;
@@ -379,13 +1086,106 @@
 			developmentRegion = English;
 			hasScannedForEncodings = 0;
 			knownRegions = (
-				English,
 				en,
 				Base,
 			);
 			mainGroup = 83CBB9F61A601CBA00E9B192;
 			productRefGroup = 83CBBA001A601CBA00E9B192 /* Products */;
 			projectDirPath = "";
+			projectReferences = (
+				{
+					ProductGroup = 7914346E2126017A006F13B7 /* Products */;
+					ProjectRef = 46704FC4FCEB45B6B9DD92BB /* BVLinearGradient.xcodeproj */;
+				},
+				{
+					ProductGroup = 797304142146322D00F6E05B /* Products */;
+					ProjectRef = 4BD3C4E6742F4F6380640CA9 /* MusicControl.xcodeproj */;
+				},
+				{
+					ProductGroup = 00C302A81ABCB8CE00DB3ED1 /* Products */;
+					ProjectRef = 00C302A71ABCB8CE00DB3ED1 /* RCTActionSheet.xcodeproj */;
+				},
+				{
+					ProductGroup = 5E91572E1DD0AC6500FF2AA8 /* Products */;
+					ProjectRef = 5E91572D1DD0AC6500FF2AA8 /* RCTAnimation.xcodeproj */;
+				},
+				{
+					ProductGroup = ADBDB9201DFEBF0600ED6528 /* Products */;
+					ProjectRef = ADBDB91F1DFEBF0600ED6528 /* RCTBlob.xcodeproj */;
+				},
+				{
+					ProductGroup = 00C302B61ABCB90400DB3ED1 /* Products */;
+					ProjectRef = 00C302B51ABCB90400DB3ED1 /* RCTGeolocation.xcodeproj */;
+				},
+				{
+					ProductGroup = 00C302BC1ABCB91800DB3ED1 /* Products */;
+					ProjectRef = 00C302BB1ABCB91800DB3ED1 /* RCTImage.xcodeproj */;
+				},
+				{
+					ProductGroup = 78C398B11ACF4ADC00677621 /* Products */;
+					ProjectRef = 78C398B01ACF4ADC00677621 /* RCTLinking.xcodeproj */;
+				},
+				{
+					ProductGroup = 00C302D41ABCB9D200DB3ED1 /* Products */;
+					ProjectRef = 00C302D31ABCB9D200DB3ED1 /* RCTNetwork.xcodeproj */;
+				},
+				{
+					ProductGroup = 427787E92149B9690045AD7F /* Products */;
+					ProjectRef = 84B340CC6C3940A782834F00 /* RCTOneSignal.xcodeproj */;
+				},
+				{
+					ProductGroup = 139105B71AF99BAD00B5F7CC /* Products */;
+					ProjectRef = 139105B61AF99BAD00B5F7CC /* RCTSettings.xcodeproj */;
+				},
+				{
+					ProductGroup = 832341B11AAA6A8300B99B32 /* Products */;
+					ProjectRef = 832341B01AAA6A8300B99B32 /* RCTText.xcodeproj */;
+				},
+				{
+					ProductGroup = 00C302E01ABCB9EE00DB3ED1 /* Products */;
+					ProjectRef = 00C302DF1ABCB9EE00DB3ED1 /* RCTVibration.xcodeproj */;
+				},
+				{
+					ProductGroup = 791434722126017A006F13B7 /* Products */;
+					ProjectRef = 2F8741F0746D4C8A89970C4D /* RCTVideo.xcodeproj */;
+				},
+				{
+					ProductGroup = 139FDEE71B06529A00C62182 /* Products */;
+					ProjectRef = 139FDEE61B06529A00C62182 /* RCTWebSocket.xcodeproj */;
+				},
+				{
+					ProductGroup = 146834001AC3E56700842450 /* Products */;
+					ProjectRef = 146833FF1AC3E56700842450 /* React.xcodeproj */;
+				},
+				{
+					ProductGroup = 7914346A2126017A006F13B7 /* Products */;
+					ProjectRef = 6BAAC994942548609D0EEECA /* ReactNativeCustomTabs.xcodeproj */;
+				},
+				{
+					ProductGroup = 796F252E212CAD5D00C6935E /* Products */;
+					ProjectRef = 239ECFF08FA841B99DB1CAFA /* RNDeviceInfo.xcodeproj */;
+				},
+				{
+					ProductGroup = BF99316D2138673B0077FD20 /* Products */;
+					ProjectRef = 3BD7DCDF7B194D7BB9BE3C6C /* RNImagePicker.xcodeproj */;
+				},
+				{
+					ProductGroup = 42B4B698219DD7CA00162F25 /* Products */;
+					ProjectRef = 59AF37DEFAA847DBAB3A0526 /* RNScreens.xcodeproj */;
+				},
+				{
+					ProductGroup = 791434702126017A006F13B7 /* Products */;
+					ProjectRef = 01441BF099BE44EE8BA8E390 /* RNSVG.xcodeproj */;
+				},
+				{
+					ProductGroup = 791434682126017A006F13B7 /* Products */;
+					ProjectRef = 6B6E5A404A4B4A34B18D7D34 /* SafariViewManager.xcodeproj */;
+				},
+				{
+					ProductGroup = 7914346C2126017A006F13B7 /* Products */;
+					ProjectRef = A64D00F181AE4927A4632B6E /* SplashScreen.xcodeproj */;
+				},
+			);
 			projectRoot = "";
 			targets = (
 				13B07F861A680F5B00A75B9A /* apolloschurchapp */,
@@ -396,13 +1196,392 @@
 		};
 /* End PBXProject section */
 
+/* Begin PBXReferenceProxy section */
+		00C302AC1ABCB8CE00DB3ED1 /* libRCTActionSheet.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libRCTActionSheet.a;
+			remoteRef = 00C302AB1ABCB8CE00DB3ED1 /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		00C302BA1ABCB90400DB3ED1 /* libRCTGeolocation.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libRCTGeolocation.a;
+			remoteRef = 00C302B91ABCB90400DB3ED1 /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		00C302C01ABCB91800DB3ED1 /* libRCTImage.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libRCTImage.a;
+			remoteRef = 00C302BF1ABCB91800DB3ED1 /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		00C302DC1ABCB9D200DB3ED1 /* libRCTNetwork.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libRCTNetwork.a;
+			remoteRef = 00C302DB1ABCB9D200DB3ED1 /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		00C302E41ABCB9EE00DB3ED1 /* libRCTVibration.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libRCTVibration.a;
+			remoteRef = 00C302E31ABCB9EE00DB3ED1 /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		139105C11AF99BAD00B5F7CC /* libRCTSettings.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libRCTSettings.a;
+			remoteRef = 139105C01AF99BAD00B5F7CC /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		139FDEF41B06529B00C62182 /* libRCTWebSocket.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libRCTWebSocket.a;
+			remoteRef = 139FDEF31B06529B00C62182 /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		146834041AC3E56700842450 /* libReact.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libReact.a;
+			remoteRef = 146834031AC3E56700842450 /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		2D16E6721FA4F8DC00B85C8A /* libRCTBlob-tvOS.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = "libRCTBlob-tvOS.a";
+			remoteRef = 2D16E6711FA4F8DC00B85C8A /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		2D16E6841FA4F8DC00B85C8A /* libfishhook.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libfishhook.a;
+			remoteRef = 2D16E6831FA4F8DC00B85C8A /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		2D16E6861FA4F8DC00B85C8A /* libfishhook-tvOS.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = "libfishhook-tvOS.a";
+			remoteRef = 2D16E6851FA4F8DC00B85C8A /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		2DF0FFDF2056DD460020B375 /* libjsinspector.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libjsinspector.a;
+			remoteRef = 2DF0FFDE2056DD460020B375 /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		2DF0FFE12056DD460020B375 /* libjsinspector-tvOS.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = "libjsinspector-tvOS.a";
+			remoteRef = 2DF0FFE02056DD460020B375 /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		2DF0FFE32056DD460020B375 /* libthird-party.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = "libthird-party.a";
+			remoteRef = 2DF0FFE22056DD460020B375 /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		2DF0FFE52056DD460020B375 /* libthird-party.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = "libthird-party.a";
+			remoteRef = 2DF0FFE42056DD460020B375 /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		2DF0FFE72056DD460020B375 /* libdouble-conversion.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = "libdouble-conversion.a";
+			remoteRef = 2DF0FFE62056DD460020B375 /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		2DF0FFE92056DD460020B375 /* libdouble-conversion.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = "libdouble-conversion.a";
+			remoteRef = 2DF0FFE82056DD460020B375 /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		2DF0FFEB2056DD460020B375 /* libprivatedata.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libprivatedata.a;
+			remoteRef = 2DF0FFEA2056DD460020B375 /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		2DF0FFED2056DD460020B375 /* libprivatedata-tvOS.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = "libprivatedata-tvOS.a";
+			remoteRef = 2DF0FFEC2056DD460020B375 /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		3DAD3E841DF850E9000B6D8A /* libRCTImage-tvOS.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = "libRCTImage-tvOS.a";
+			remoteRef = 3DAD3E831DF850E9000B6D8A /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		3DAD3E881DF850E9000B6D8A /* libRCTLinking-tvOS.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = "libRCTLinking-tvOS.a";
+			remoteRef = 3DAD3E871DF850E9000B6D8A /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		3DAD3E8C1DF850E9000B6D8A /* libRCTNetwork-tvOS.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = "libRCTNetwork-tvOS.a";
+			remoteRef = 3DAD3E8B1DF850E9000B6D8A /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		3DAD3E901DF850E9000B6D8A /* libRCTSettings-tvOS.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = "libRCTSettings-tvOS.a";
+			remoteRef = 3DAD3E8F1DF850E9000B6D8A /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		3DAD3E941DF850E9000B6D8A /* libRCTText-tvOS.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = "libRCTText-tvOS.a";
+			remoteRef = 3DAD3E931DF850E9000B6D8A /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		3DAD3E991DF850E9000B6D8A /* libRCTWebSocket-tvOS.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = "libRCTWebSocket-tvOS.a";
+			remoteRef = 3DAD3E981DF850E9000B6D8A /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		3DAD3EA31DF850E9000B6D8A /* libReact.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libReact.a;
+			remoteRef = 3DAD3EA21DF850E9000B6D8A /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		3DAD3EA51DF850E9000B6D8A /* libyoga.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libyoga.a;
+			remoteRef = 3DAD3EA41DF850E9000B6D8A /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		3DAD3EA71DF850E9000B6D8A /* libyoga.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libyoga.a;
+			remoteRef = 3DAD3EA61DF850E9000B6D8A /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		3DAD3EA91DF850E9000B6D8A /* libcxxreact.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libcxxreact.a;
+			remoteRef = 3DAD3EA81DF850E9000B6D8A /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		3DAD3EAB1DF850E9000B6D8A /* libcxxreact.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libcxxreact.a;
+			remoteRef = 3DAD3EAA1DF850E9000B6D8A /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		3DAD3EAD1DF850E9000B6D8A /* libjschelpers.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libjschelpers.a;
+			remoteRef = 3DAD3EAC1DF850E9000B6D8A /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		3DAD3EAF1DF850E9000B6D8A /* libjschelpers.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libjschelpers.a;
+			remoteRef = 3DAD3EAE1DF850E9000B6D8A /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		427787ED2149B96A0045AD7F /* libRCTOneSignal.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libRCTOneSignal.a;
+			remoteRef = 427787EC2149B96A0045AD7F /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		42B4B6CC219DD7CB00162F25 /* libRNScreens.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libRNScreens.a;
+			remoteRef = 42B4B6CB219DD7CB00162F25 /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		5E9157331DD0AC6500FF2AA8 /* libRCTAnimation.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libRCTAnimation.a;
+			remoteRef = 5E9157321DD0AC6500FF2AA8 /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		5E9157351DD0AC6500FF2AA8 /* libRCTAnimation.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libRCTAnimation.a;
+			remoteRef = 5E9157341DD0AC6500FF2AA8 /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		78C398B91ACF4ADC00677621 /* libRCTLinking.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libRCTLinking.a;
+			remoteRef = 78C398B81ACF4ADC00677621 /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		791434772126017B006F13B7 /* libBVLinearGradient.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libBVLinearGradient.a;
+			remoteRef = 791434762126017B006F13B7 /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		791434792126017B006F13B7 /* libBVLinearGradient.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libBVLinearGradient.a;
+			remoteRef = 791434782126017B006F13B7 /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		7914347D2126017B006F13B7 /* libRCTVideo.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libRCTVideo.a;
+			remoteRef = 7914347C2126017B006F13B7 /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		7914347F2126017B006F13B7 /* libRCTVideo.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libRCTVideo.a;
+			remoteRef = 7914347E2126017B006F13B7 /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		791434822126017B006F13B7 /* libDBCustomTabs.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libDBCustomTabs.a;
+			remoteRef = 791434812126017B006F13B7 /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		791434862126017B006F13B7 /* libRNSVG.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libRNSVG.a;
+			remoteRef = 791434852126017B006F13B7 /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		791434882126017B006F13B7 /* libRNSVG-tvOS.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = "libRNSVG-tvOS.a";
+			remoteRef = 791434872126017B006F13B7 /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		7914348B2126017B006F13B7 /* libSafariViewManager.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libSafariViewManager.a;
+			remoteRef = 7914348A2126017B006F13B7 /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		7914348E2126017B006F13B7 /* libSplashScreen.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libSplashScreen.a;
+			remoteRef = 7914348D2126017B006F13B7 /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		794FE988219DF8880046142B /* libRNScreens.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libRNScreens.a;
+			remoteRef = 794FE987219DF8880046142B /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		796F2533212CAD5D00C6935E /* libRNDeviceInfo.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libRNDeviceInfo.a;
+			remoteRef = 796F2532212CAD5D00C6935E /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		796F2535212CAD5D00C6935E /* libRNDeviceInfo-tvOS.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = "libRNDeviceInfo-tvOS.a";
+			remoteRef = 796F2534212CAD5D00C6935E /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		797304192146322D00F6E05B /* libMusicControl.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libMusicControl.a;
+			remoteRef = 797304182146322D00F6E05B /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		7973041B2146322D00F6E05B /* libMusicControl-tvOS.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = "libMusicControl-tvOS.a";
+			remoteRef = 7973041A2146322D00F6E05B /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		832341B51AAA6A8300B99B32 /* libRCTText.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libRCTText.a;
+			remoteRef = 832341B41AAA6A8300B99B32 /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		ADBDB9271DFEBF0700ED6528 /* libRCTBlob.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libRCTBlob.a;
+			remoteRef = ADBDB9261DFEBF0700ED6528 /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		BF9931712138673B0077FD20 /* libRNImagePicker.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libRNImagePicker.a;
+			remoteRef = BF9931702138673B0077FD20 /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+/* End PBXReferenceProxy section */
+
 /* Begin PBXResourcesBuildPhase section */
 		00E356EC1AD99517003FC87E /* Resources */ = {
 			isa = PBXResourcesBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
-				82AAE537241888D100D1EEC7 /* Images.xcassets in Resources */,
-				82AAE52F24187BB500D1EEC7 /* BootSplash.storyboard in Resources */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
@@ -411,19 +1590,19 @@
 			buildActionMask = 2147483647;
 			files = (
 				13B07FBF1A68108700A75B9A /* Images.xcassets in Resources */,
-				08CE105F17284254AD54AF84 /* DroidSerif-Bold.ttf in Resources */,
-				B02F194A3F6A4FE29AC799B4 /* DroidSerif-BoldItalic.ttf in Resources */,
-				90743C40BF544F10A810C43C /* DroidSerif-Italic.ttf in Resources */,
-				93A2B0A9328A46A4B7DD5EFA /* DroidSerif-Regular.ttf in Resources */,
-				68D1351E80AA4A2C96288FD9 /* Inter-UI-Black.otf in Resources */,
-				578FFEC1D7D54C9B871A9E5B /* Inter-UI-BlackItalic.otf in Resources */,
-				7FBC6BC3CE8D48298F9850A9 /* Inter-UI-Bold.otf in Resources */,
-				894732A70B4740678E85B593 /* Inter-UI-BoldItalic.otf in Resources */,
-				01F091B02048490A8F9EF4FE /* Inter-UI-Italic.otf in Resources */,
-				1C48DCDE11AC47C48E918489 /* Inter-UI-Medium.otf in Resources */,
-				FCB3069DB5DD4170B2CAEFC4 /* Inter-UI-MediumItalic.otf in Resources */,
-				AB3BD177B8A14193A5EEDDF8 /* Inter-UI-Regular.otf in Resources */,
-				82AAE52E24187BB500D1EEC7 /* BootSplash.storyboard in Resources */,
+				13B07FBD1A68108700A75B9A /* LaunchScreen.xib in Resources */,
+				C87CA8735EEB43C4A55CB285 /* DroidSerif-Bold.ttf in Resources */,
+				59D8DFA78CDF4642892CC142 /* DroidSerif-BoldItalic.ttf in Resources */,
+				9ACBD642B18D41C9BB1E4D9E /* DroidSerif-Italic.ttf in Resources */,
+				D5744BF3B41D4BC49F93CD68 /* DroidSerif-Regular.ttf in Resources */,
+				417027FD83CA4902AB4DB2B4 /* Inter-UI-Black.otf in Resources */,
+				6E4442FB39BE4F898DE4C454 /* Inter-UI-BlackItalic.otf in Resources */,
+				F8FAD93CCE5641A8B87611EA /* Inter-UI-Bold.otf in Resources */,
+				E374C61F2AAF41D3B615AB44 /* Inter-UI-BoldItalic.otf in Resources */,
+				5CA1D8E805684478B04ABB60 /* Inter-UI-Italic.otf in Resources */,
+				A173C226549E48B991AC5D98 /* Inter-UI-Medium.otf in Resources */,
+				0D4EDF6EBA274F9D93DDED76 /* Inter-UI-MediumItalic.otf in Resources */,
+				7D060CA312AB4E828CD60DDC /* Inter-UI-Regular.otf in Resources */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
@@ -432,7 +1611,6 @@
 			buildActionMask = 2147483647;
 			files = (
 				2D02E4BD1E0B4A84006451C7 /* Images.xcassets in Resources */,
-				82AAE53024187BB500D1EEC7 /* BootSplash.storyboard in Resources */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
@@ -440,8 +1618,6 @@
 			isa = PBXResourcesBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
-				82AAE538241888D200D1EEC7 /* Images.xcassets in Resources */,
-				82AAE53124187BB500D1EEC7 /* BootSplash.storyboard in Resources */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
@@ -462,28 +1638,6 @@
 			shellPath = /bin/sh;
 			shellScript = "export NODE_BINARY=node\n../node_modules/react-native/scripts/react-native-xcode.sh";
 		};
-		2C62ED438C51D0F43EC7017B /* [CP] Check Pods Manifest.lock */ = {
-			isa = PBXShellScriptBuildPhase;
-			buildActionMask = 2147483647;
-			files = (
-			);
-			inputFileListPaths = (
-			);
-			inputPaths = (
-				"${PODS_PODFILE_DIR_PATH}/Podfile.lock",
-				"${PODS_ROOT}/Manifest.lock",
-			);
-			name = "[CP] Check Pods Manifest.lock";
-			outputFileListPaths = (
-			);
-			outputPaths = (
-				"$(DERIVED_FILE_DIR)/Pods-apolloschurchappTests-checkManifestLockResult.txt",
-			);
-			runOnlyForDeploymentPostprocessing = 0;
-			shellPath = /bin/sh;
-			shellScript = "diff \"${PODS_PODFILE_DIR_PATH}/Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null\nif [ $? != 0 ] ; then\n    # print error to STDERR\n    echo \"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\" >&2\n    exit 1\nfi\n# This output is used by Xcode 'outputs' to avoid re-running this script phase.\necho \"SUCCESS\" > \"${SCRIPT_OUTPUT_FILE_0}\"\n";
-			showEnvVarsInLog = 0;
-		};
 		2D02E4CB1E0B4B27006451C7 /* Bundle React Native Code And Images */ = {
 			isa = PBXShellScriptBuildPhase;
 			buildActionMask = 2147483647;
@@ -498,92 +1652,6 @@
 			shellPath = /bin/sh;
 			shellScript = "export NODE_BINARY=node\n../node_modules/react-native/scripts/react-native-xcode.sh";
 		};
-		43D579D8398224D7B09F58F6 /* [CP] Copy Pods Resources */ = {
-			isa = PBXShellScriptBuildPhase;
-			buildActionMask = 2147483647;
-			files = (
-			);
-			inputPaths = (
-				"${PODS_ROOT}/Target Support Files/Pods-apolloschurchapp/Pods-apolloschurchapp-resources.sh",
-				"${PODS_ROOT}/google-cast-sdk-no-bluetooth/GoogleCastSDK-ios-4.4.7_static/GoogleCast.framework/GoogleCastCoreResources.bundle",
-				"${PODS_ROOT}/google-cast-sdk-no-bluetooth/GoogleCastSDK-ios-4.4.7_static/GoogleCast.framework/GoogleCastUIResources.bundle",
-			);
-			name = "[CP] Copy Pods Resources";
-			outputPaths = (
-				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/GoogleCastCoreResources.bundle",
-				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/GoogleCastUIResources.bundle",
-			);
-			runOnlyForDeploymentPostprocessing = 0;
-			shellPath = /bin/sh;
-			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-apolloschurchapp/Pods-apolloschurchapp-resources.sh\"\n";
-			showEnvVarsInLog = 0;
-		};
-		9C20354F160AAF86C8281F23 /* [CP] Check Pods Manifest.lock */ = {
-			isa = PBXShellScriptBuildPhase;
-			buildActionMask = 2147483647;
-			files = (
-			);
-			inputFileListPaths = (
-			);
-			inputPaths = (
-				"${PODS_PODFILE_DIR_PATH}/Podfile.lock",
-				"${PODS_ROOT}/Manifest.lock",
-			);
-			name = "[CP] Check Pods Manifest.lock";
-			outputFileListPaths = (
-			);
-			outputPaths = (
-				"$(DERIVED_FILE_DIR)/Pods-apolloschurchapp-tvOS-checkManifestLockResult.txt",
-			);
-			runOnlyForDeploymentPostprocessing = 0;
-			shellPath = /bin/sh;
-			shellScript = "diff \"${PODS_PODFILE_DIR_PATH}/Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null\nif [ $? != 0 ] ; then\n    # print error to STDERR\n    echo \"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\" >&2\n    exit 1\nfi\n# This output is used by Xcode 'outputs' to avoid re-running this script phase.\necho \"SUCCESS\" > \"${SCRIPT_OUTPUT_FILE_0}\"\n";
-			showEnvVarsInLog = 0;
-		};
-		A85CD736CDC3356677735901 /* [CP] Check Pods Manifest.lock */ = {
-			isa = PBXShellScriptBuildPhase;
-			buildActionMask = 2147483647;
-			files = (
-			);
-			inputFileListPaths = (
-			);
-			inputPaths = (
-				"${PODS_PODFILE_DIR_PATH}/Podfile.lock",
-				"${PODS_ROOT}/Manifest.lock",
-			);
-			name = "[CP] Check Pods Manifest.lock";
-			outputFileListPaths = (
-			);
-			outputPaths = (
-				"$(DERIVED_FILE_DIR)/Pods-apolloschurchapp-tvOSTests-checkManifestLockResult.txt",
-			);
-			runOnlyForDeploymentPostprocessing = 0;
-			shellPath = /bin/sh;
-			shellScript = "diff \"${PODS_PODFILE_DIR_PATH}/Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null\nif [ $? != 0 ] ; then\n    # print error to STDERR\n    echo \"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\" >&2\n    exit 1\nfi\n# This output is used by Xcode 'outputs' to avoid re-running this script phase.\necho \"SUCCESS\" > \"${SCRIPT_OUTPUT_FILE_0}\"\n";
-			showEnvVarsInLog = 0;
-		};
-		DEEF24CE4F76789E5E8C369D /* [CP] Check Pods Manifest.lock */ = {
-			isa = PBXShellScriptBuildPhase;
-			buildActionMask = 2147483647;
-			files = (
-			);
-			inputFileListPaths = (
-			);
-			inputPaths = (
-				"${PODS_PODFILE_DIR_PATH}/Podfile.lock",
-				"${PODS_ROOT}/Manifest.lock",
-			);
-			name = "[CP] Check Pods Manifest.lock";
-			outputFileListPaths = (
-			);
-			outputPaths = (
-				"$(DERIVED_FILE_DIR)/Pods-apolloschurchapp-checkManifestLockResult.txt",
-			);
-			runOnlyForDeploymentPostprocessing = 0;
-			shellPath = /bin/sh;
-			shellScript = "diff \"${PODS_PODFILE_DIR_PATH}/Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null\nif [ $? != 0 ] ; then\n    # print error to STDERR\n    echo \"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\" >&2\n    exit 1\nfi\n# This output is used by Xcode 'outputs' to avoid re-running this script phase.\necho \"SUCCESS\" > \"${SCRIPT_OUTPUT_FILE_0}\"\n";
-			showEnvVarsInLog = 0;
-		};
 /* End PBXShellScriptBuildPhase section */
 
 /* Begin PBXSourcesBuildPhase section */
@@ -636,10 +1704,21 @@
 		};
 /* End PBXTargetDependency section */
 
+/* Begin PBXVariantGroup section */
+		13B07FB11A68108700A75B9A /* LaunchScreen.xib */ = {
+			isa = PBXVariantGroup;
+			children = (
+				13B07FB21A68108700A75B9A /* Base */,
+			);
+			name = LaunchScreen.xib;
+			path = apolloschurchapp;
+			sourceTree = "<group>";
+		};
+/* End PBXVariantGroup section */
+
 /* Begin XCBuildConfiguration section */
 		00E356F61AD99517003FC87E /* Debug */ = {
 			isa = XCBuildConfiguration;
-			baseConfigurationReference = AB44FC16DED929081698EDFD /* Pods-apolloschurchappTests.debug.xcconfig */;
 			buildSettings = {
 				BUNDLE_LOADER = "$(TEST_HOST)";
 				GCC_PREPROCESSOR_DEFINITIONS = (
@@ -648,17 +1727,29 @@
 				);
 				HEADER_SEARCH_PATHS = (
 					"$(inherited)",
+					"$(SRCROOT)/../node_modules/react-native-custom-tabs/ios/ReactNativeCustomTabs",
+					"$(SRCROOT)/../node_modules/react-native-linear-gradient/BVLinearGradient",
+					"$(SRCROOT)/../node_modules/react-native-safari-view",
+					"$(SRCROOT)/../node_modules/react-native-splash-screen/ios",
+					"$(SRCROOT)/../node_modules/react-native-svg/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-video/ios",
+					"$(SRCROOT)/../node_modules/react-native-onesignal/ios/**",
+					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
+					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
+					"$(SRCROOT)/../node_modules/react-native-music-control/ios",
+					"$(SRCROOT)/../node_modules/react-native-screens/ios",
 				);
 				INFOPLIST_FILE = apolloschurchappTests/Info.plist;
 				IPHONEOS_DEPLOYMENT_TARGET = 9.0;
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @loader_path/Frameworks";
-				LIBRARY_SEARCH_PATHS = "$(inherited)";
+				LIBRARY_SEARCH_PATHS = (
+					"$(inherited)",
+					"\"$(SRCROOT)/$(TARGET_NAME)\"",
+				);
 				OTHER_LDFLAGS = (
 					"-ObjC",
 					"-lc++",
 				);
-				PRODUCT_BUNDLE_IDENTIFIER = "org.reactjs.native.example.$(PRODUCT_NAME:rfc1034identifier)";
 				PRODUCT_NAME = "$(TARGET_NAME)";
 				TEST_HOST = "$(BUILT_PRODUCTS_DIR)/apolloschurchapp.app/apolloschurchapp";
 			};
@@ -666,23 +1757,34 @@
 		};
 		00E356F71AD99517003FC87E /* Release */ = {
 			isa = XCBuildConfiguration;
-			baseConfigurationReference = E98AC9782C338F13632EF710 /* Pods-apolloschurchappTests.release.xcconfig */;
 			buildSettings = {
 				BUNDLE_LOADER = "$(TEST_HOST)";
 				COPY_PHASE_STRIP = NO;
 				HEADER_SEARCH_PATHS = (
 					"$(inherited)",
+					"$(SRCROOT)/../node_modules/react-native-custom-tabs/ios/ReactNativeCustomTabs",
+					"$(SRCROOT)/../node_modules/react-native-linear-gradient/BVLinearGradient",
+					"$(SRCROOT)/../node_modules/react-native-safari-view",
+					"$(SRCROOT)/../node_modules/react-native-splash-screen/ios",
+					"$(SRCROOT)/../node_modules/react-native-svg/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-video/ios",
+					"$(SRCROOT)/../node_modules/react-native-onesignal/ios/**",
+					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
+					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
+					"$(SRCROOT)/../node_modules/react-native-music-control/ios",
+					"$(SRCROOT)/../node_modules/react-native-screens/ios",
 				);
 				INFOPLIST_FILE = apolloschurchappTests/Info.plist;
 				IPHONEOS_DEPLOYMENT_TARGET = 9.0;
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @loader_path/Frameworks";
-				LIBRARY_SEARCH_PATHS = "$(inherited)";
+				LIBRARY_SEARCH_PATHS = (
+					"$(inherited)",
+					"\"$(SRCROOT)/$(TARGET_NAME)\"",
+				);
 				OTHER_LDFLAGS = (
 					"-ObjC",
 					"-lc++",
 				);
-				PRODUCT_BUNDLE_IDENTIFIER = "org.reactjs.native.example.$(PRODUCT_NAME:rfc1034identifier)";
 				PRODUCT_NAME = "$(TARGET_NAME)";
 				TEST_HOST = "$(BUILT_PRODUCTS_DIR)/apolloschurchapp.app/apolloschurchapp";
 			};
@@ -690,18 +1792,26 @@
 		};
 		13B07F941A680F5B00A75B9A /* Debug */ = {
 			isa = XCBuildConfiguration;
-			baseConfigurationReference = 54F271B8EB67A4997A2C7D96 /* Pods-apolloschurchapp.debug.xcconfig */;
 			buildSettings = {
 				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
 				CODE_SIGN_ENTITLEMENTS = apolloschurchapp/apolloschurchapp.entitlements;
-				CODE_SIGN_IDENTITY = "Apple Development";
-				CODE_SIGN_STYLE = Automatic;
-				CURRENT_PROJECT_VERSION = 18;
+				CODE_SIGN_IDENTITY = "iPhone Developer";
+				CURRENT_PROJECT_VERSION = 5;
 				DEAD_CODE_STRIPPING = NO;
 				DEVELOPMENT_TEAM = 7TM8C6252Z;
 				HEADER_SEARCH_PATHS = (
 					"$(inherited)",
+					"$(SRCROOT)/../node_modules/react-native-custom-tabs/ios/ReactNativeCustomTabs",
+					"$(SRCROOT)/../node_modules/react-native-linear-gradient/BVLinearGradient",
+					"$(SRCROOT)/../node_modules/react-native-safari-view",
+					"$(SRCROOT)/../node_modules/react-native-splash-screen/ios",
+					"$(SRCROOT)/../node_modules/react-native-svg/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-video/ios",
+					"$(SRCROOT)/../node_modules/react-native-onesignal/ios/**",
+					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
+					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
+					"$(SRCROOT)/../node_modules/react-native-music-control/ios",
+					"$(SRCROOT)/../node_modules/react-native-screens/ios",
 				);
 				INFOPLIST_FILE = apolloschurchapp/Info.plist;
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
@@ -710,26 +1820,32 @@
 					"-ObjC",
 					"-lc++",
 				);
-				PRODUCT_BUNDLE_IDENTIFIER = org.reactjs.native.apolloschurchapp;
 				PRODUCT_NAME = apolloschurchapp;
-				PROVISIONING_PROFILE_SPECIFIER = "";
 				VERSIONING_SYSTEM = "apple-generic";
 			};
 			name = Debug;
 		};
 		13B07F951A680F5B00A75B9A /* Release */ = {
 			isa = XCBuildConfiguration;
-			baseConfigurationReference = 1F8F5BC4745C8F22C695573D /* Pods-apolloschurchapp.release.xcconfig */;
 			buildSettings = {
 				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
 				CODE_SIGN_ENTITLEMENTS = apolloschurchapp/apolloschurchapp.entitlements;
-				CODE_SIGN_IDENTITY = "Apple Development";
-				CODE_SIGN_STYLE = Automatic;
-				CURRENT_PROJECT_VERSION = 18;
+				CODE_SIGN_IDENTITY = "iPhone Developer";
+				CURRENT_PROJECT_VERSION = 5;
 				DEVELOPMENT_TEAM = 7TM8C6252Z;
 				HEADER_SEARCH_PATHS = (
 					"$(inherited)",
+					"$(SRCROOT)/../node_modules/react-native-custom-tabs/ios/ReactNativeCustomTabs",
+					"$(SRCROOT)/../node_modules/react-native-linear-gradient/BVLinearGradient",
+					"$(SRCROOT)/../node_modules/react-native-safari-view",
+					"$(SRCROOT)/../node_modules/react-native-splash-screen/ios",
+					"$(SRCROOT)/../node_modules/react-native-svg/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-video/ios",
+					"$(SRCROOT)/../node_modules/react-native-onesignal/ios/**",
+					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
+					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
+					"$(SRCROOT)/../node_modules/react-native-music-control/ios",
+					"$(SRCROOT)/../node_modules/react-native-screens/ios",
 				);
 				INFOPLIST_FILE = apolloschurchapp/Info.plist;
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
@@ -738,16 +1854,13 @@
 					"-ObjC",
 					"-lc++",
 				);
-				PRODUCT_BUNDLE_IDENTIFIER = org.reactjs.native.apolloschurchapp;
 				PRODUCT_NAME = apolloschurchapp;
-				PROVISIONING_PROFILE_SPECIFIER = "";
 				VERSIONING_SYSTEM = "apple-generic";
 			};
 			name = Release;
 		};
 		2D02E4971E0B4A5E006451C7 /* Debug */ = {
 			isa = XCBuildConfiguration;
-			baseConfigurationReference = 745C835CA2F1E1EC2425152A /* Pods-apolloschurchapp-tvOS.debug.xcconfig */;
 			buildSettings = {
 				ASSETCATALOG_COMPILER_APPICON_NAME = "App Icon & Top Shelf Image";
 				ASSETCATALOG_COMPILER_LAUNCHIMAGE_NAME = LaunchImage;
@@ -760,16 +1873,29 @@
 				GCC_NO_COMMON_BLOCKS = YES;
 				HEADER_SEARCH_PATHS = (
 					"$(inherited)",
+					"$(SRCROOT)/../node_modules/react-native-custom-tabs/ios/ReactNativeCustomTabs",
+					"$(SRCROOT)/../node_modules/react-native-linear-gradient/BVLinearGradient",
+					"$(SRCROOT)/../node_modules/react-native-safari-view",
+					"$(SRCROOT)/../node_modules/react-native-splash-screen/ios",
+					"$(SRCROOT)/../node_modules/react-native-svg/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-video/ios",
+					"$(SRCROOT)/../node_modules/react-native-onesignal/ios/**",
+					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
+					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
+					"$(SRCROOT)/../node_modules/react-native-music-control/ios",
+					"$(SRCROOT)/../node_modules/react-native-screens/ios",
 				);
 				INFOPLIST_FILE = "apolloschurchapp-tvOS/Info.plist";
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
-				LIBRARY_SEARCH_PATHS = "$(inherited)";
+				LIBRARY_SEARCH_PATHS = (
+					"$(inherited)",
+					"\"$(SRCROOT)/$(TARGET_NAME)\"",
+				);
 				OTHER_LDFLAGS = (
 					"-ObjC",
 					"-lc++",
 				);
-				PRODUCT_BUNDLE_IDENTIFIER = "com.facebook.REACT.apolloschurchapp-tvOS";
+				PRODUCT_BUNDLE_IDENTIFIER = "org.reactjs.native.apolloschurchapp-tvOS";
 				PRODUCT_NAME = "$(TARGET_NAME)";
 				SDKROOT = appletvos;
 				TARGETED_DEVICE_FAMILY = 3;
@@ -779,7 +1905,6 @@
 		};
 		2D02E4981E0B4A5E006451C7 /* Release */ = {
 			isa = XCBuildConfiguration;
-			baseConfigurationReference = AE85030F59F256E90D5A4C2B /* Pods-apolloschurchapp-tvOS.release.xcconfig */;
 			buildSettings = {
 				ASSETCATALOG_COMPILER_APPICON_NAME = "App Icon & Top Shelf Image";
 				ASSETCATALOG_COMPILER_LAUNCHIMAGE_NAME = LaunchImage;
@@ -792,16 +1917,29 @@
 				GCC_NO_COMMON_BLOCKS = YES;
 				HEADER_SEARCH_PATHS = (
 					"$(inherited)",
+					"$(SRCROOT)/../node_modules/react-native-custom-tabs/ios/ReactNativeCustomTabs",
+					"$(SRCROOT)/../node_modules/react-native-linear-gradient/BVLinearGradient",
+					"$(SRCROOT)/../node_modules/react-native-safari-view",
+					"$(SRCROOT)/../node_modules/react-native-splash-screen/ios",
+					"$(SRCROOT)/../node_modules/react-native-svg/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-video/ios",
+					"$(SRCROOT)/../node_modules/react-native-onesignal/ios/**",
+					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
+					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
+					"$(SRCROOT)/../node_modules/react-native-music-control/ios",
+					"$(SRCROOT)/../node_modules/react-native-screens/ios",
 				);
 				INFOPLIST_FILE = "apolloschurchapp-tvOS/Info.plist";
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
-				LIBRARY_SEARCH_PATHS = "$(inherited)";
+				LIBRARY_SEARCH_PATHS = (
+					"$(inherited)",
+					"\"$(SRCROOT)/$(TARGET_NAME)\"",
+				);
 				OTHER_LDFLAGS = (
 					"-ObjC",
 					"-lc++",
 				);
-				PRODUCT_BUNDLE_IDENTIFIER = "com.facebook.REACT.apolloschurchapp-tvOS";
+				PRODUCT_BUNDLE_IDENTIFIER = "org.reactjs.native.apolloschurchapp-tvOS";
 				PRODUCT_NAME = "$(TARGET_NAME)";
 				SDKROOT = appletvos;
 				TARGETED_DEVICE_FAMILY = 3;
@@ -811,7 +1949,6 @@
 		};
 		2D02E4991E0B4A5E006451C7 /* Debug */ = {
 			isa = XCBuildConfiguration;
-			baseConfigurationReference = D394E3064D75710E81C51EB0 /* Pods-apolloschurchapp-tvOSTests.debug.xcconfig */;
 			buildSettings = {
 				BUNDLE_LOADER = "$(TEST_HOST)";
 				CLANG_ANALYZER_NONNULL = YES;
@@ -823,16 +1960,29 @@
 				GCC_NO_COMMON_BLOCKS = YES;
 				HEADER_SEARCH_PATHS = (
 					"$(inherited)",
+					"$(SRCROOT)/../node_modules/react-native-custom-tabs/ios/ReactNativeCustomTabs",
+					"$(SRCROOT)/../node_modules/react-native-linear-gradient/BVLinearGradient",
+					"$(SRCROOT)/../node_modules/react-native-safari-view",
+					"$(SRCROOT)/../node_modules/react-native-splash-screen/ios",
+					"$(SRCROOT)/../node_modules/react-native-svg/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-video/ios",
+					"$(SRCROOT)/../node_modules/react-native-onesignal/ios/**",
+					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
+					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
+					"$(SRCROOT)/../node_modules/react-native-music-control/ios",
+					"$(SRCROOT)/../node_modules/react-native-screens/ios",
 				);
 				INFOPLIST_FILE = "apolloschurchapp-tvOSTests/Info.plist";
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @loader_path/Frameworks";
-				LIBRARY_SEARCH_PATHS = "$(inherited)";
+				LIBRARY_SEARCH_PATHS = (
+					"$(inherited)",
+					"\"$(SRCROOT)/$(TARGET_NAME)\"",
+				);
 				OTHER_LDFLAGS = (
 					"-ObjC",
 					"-lc++",
 				);
-				PRODUCT_BUNDLE_IDENTIFIER = "com.facebook.REACT.apolloschurchapp-tvOSTests";
+				PRODUCT_BUNDLE_IDENTIFIER = "org.reactjs.native.apolloschurchapp-tvOSTests";
 				PRODUCT_NAME = "$(TARGET_NAME)";
 				SDKROOT = appletvos;
 				TEST_HOST = "$(BUILT_PRODUCTS_DIR)/apolloschurchapp-tvOS.app/apolloschurchapp-tvOS";
@@ -842,7 +1992,6 @@
 		};
 		2D02E49A1E0B4A5E006451C7 /* Release */ = {
 			isa = XCBuildConfiguration;
-			baseConfigurationReference = DA9745795726553C6FA9E7A8 /* Pods-apolloschurchapp-tvOSTests.release.xcconfig */;
 			buildSettings = {
 				BUNDLE_LOADER = "$(TEST_HOST)";
 				CLANG_ANALYZER_NONNULL = YES;
@@ -854,16 +2003,29 @@
 				GCC_NO_COMMON_BLOCKS = YES;
 				HEADER_SEARCH_PATHS = (
 					"$(inherited)",
+					"$(SRCROOT)/../node_modules/react-native-custom-tabs/ios/ReactNativeCustomTabs",
+					"$(SRCROOT)/../node_modules/react-native-linear-gradient/BVLinearGradient",
+					"$(SRCROOT)/../node_modules/react-native-safari-view",
+					"$(SRCROOT)/../node_modules/react-native-splash-screen/ios",
+					"$(SRCROOT)/../node_modules/react-native-svg/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-video/ios",
+					"$(SRCROOT)/../node_modules/react-native-onesignal/ios/**",
+					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
+					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
+					"$(SRCROOT)/../node_modules/react-native-music-control/ios",
+					"$(SRCROOT)/../node_modules/react-native-screens/ios",
 				);
 				INFOPLIST_FILE = "apolloschurchapp-tvOSTests/Info.plist";
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @loader_path/Frameworks";
-				LIBRARY_SEARCH_PATHS = "$(inherited)";
+				LIBRARY_SEARCH_PATHS = (
+					"$(inherited)",
+					"\"$(SRCROOT)/$(TARGET_NAME)\"",
+				);
 				OTHER_LDFLAGS = (
 					"-ObjC",
 					"-lc++",
 				);
-				PRODUCT_BUNDLE_IDENTIFIER = "com.facebook.REACT.apolloschurchapp-tvOSTests";
+				PRODUCT_BUNDLE_IDENTIFIER = "org.reactjs.native.apolloschurchapp-tvOSTests";
 				PRODUCT_NAME = "$(TARGET_NAME)";
 				SDKROOT = appletvos;
 				TEST_HOST = "$(BUILT_PRODUCTS_DIR)/apolloschurchapp-tvOS.app/apolloschurchapp-tvOS";
@@ -879,32 +2041,20 @@
 				CLANG_CXX_LIBRARY = "libc++";
 				CLANG_ENABLE_MODULES = YES;
 				CLANG_ENABLE_OBJC_ARC = YES;
-				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
 				CLANG_WARN_BOOL_CONVERSION = YES;
-				CLANG_WARN_COMMA = YES;
 				CLANG_WARN_CONSTANT_CONVERSION = YES;
-				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
 				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
 				CLANG_WARN_EMPTY_BODY = YES;
 				CLANG_WARN_ENUM_CONVERSION = YES;
-				CLANG_WARN_INFINITE_RECURSION = YES;
 				CLANG_WARN_INT_CONVERSION = YES;
-				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
-				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
-				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
 				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
-				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
-				CLANG_WARN_STRICT_PROTOTYPES = YES;
-				CLANG_WARN_SUSPICIOUS_MOVE = YES;
 				CLANG_WARN_UNREACHABLE_CODE = YES;
 				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
 				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "iPhone Developer";
 				COPY_PHASE_STRIP = NO;
 				ENABLE_STRICT_OBJC_MSGSEND = YES;
-				ENABLE_TESTABILITY = YES;
 				GCC_C_LANGUAGE_STANDARD = gnu99;
 				GCC_DYNAMIC_NO_PIC = NO;
-				GCC_NO_COMMON_BLOCKS = YES;
 				GCC_OPTIMIZATION_LEVEL = 0;
 				GCC_PREPROCESSOR_DEFINITIONS = (
 					"DEBUG=1",
@@ -932,23 +2082,13 @@
 				CLANG_CXX_LIBRARY = "libc++";
 				CLANG_ENABLE_MODULES = YES;
 				CLANG_ENABLE_OBJC_ARC = YES;
-				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
 				CLANG_WARN_BOOL_CONVERSION = YES;
-				CLANG_WARN_COMMA = YES;
 				CLANG_WARN_CONSTANT_CONVERSION = YES;
-				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
 				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
 				CLANG_WARN_EMPTY_BODY = YES;
 				CLANG_WARN_ENUM_CONVERSION = YES;
-				CLANG_WARN_INFINITE_RECURSION = YES;
 				CLANG_WARN_INT_CONVERSION = YES;
-				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
-				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
-				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
 				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
-				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
-				CLANG_WARN_STRICT_PROTOTYPES = YES;
-				CLANG_WARN_SUSPICIOUS_MOVE = YES;
 				CLANG_WARN_UNREACHABLE_CODE = YES;
 				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
 				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "iPhone Developer";
@@ -956,7 +2096,6 @@
 				ENABLE_NS_ASSERTIONS = NO;
 				ENABLE_STRICT_OBJC_MSGSEND = YES;
 				GCC_C_LANGUAGE_STANDARD = gnu99;
-				GCC_NO_COMMON_BLOCKS = YES;
 				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
 				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
 				GCC_WARN_UNDECLARED_SELECTOR = YES;
diff --git a/apolloschurchapp/ios/apolloschurchapp.xcworkspace/xcshareddata/xcschemes/apolloschurchappprod.xcscheme b/apolloschurchapp/ios/apolloschurchapp.xcodeproj/xcshareddata/xcschemes/apolloschurchapp-tvOS.xcscheme
similarity index 72%
rename from apolloschurchapp/ios/apolloschurchapp.xcworkspace/xcshareddata/xcschemes/apolloschurchappprod.xcscheme
rename to apolloschurchapp/ios/apolloschurchapp.xcodeproj/xcshareddata/xcschemes/apolloschurchapp-tvOS.xcscheme
index cb89197..e872aa3 100644
--- a/apolloschurchapp/ios/apolloschurchapp.xcworkspace/xcshareddata/xcschemes/apolloschurchappprod.xcscheme
+++ b/apolloschurchapp/ios/apolloschurchapp.xcodeproj/xcshareddata/xcschemes/apolloschurchapp-tvOS.xcscheme
@@ -5,15 +5,6 @@
    <BuildAction
       parallelizeBuildables = "NO"
       buildImplicitDependencies = "YES">
-      <PreActions>
-         <ExecutionAction
-            ActionType = "Xcode.IDEStandardExecutionActionsCore.ExecutionActionType.ShellScriptAction">
-            <ActionContent
-               title = "Run Script"
-               scriptText = "echo &quot;.env.production&quot; &gt; /tmp/envfile&#10;">
-            </ActionContent>
-         </ExecutionAction>
-      </PreActions>
       <BuildActionEntries>
          <BuildActionEntry
             buildForTesting = "YES"
@@ -23,9 +14,9 @@
             buildForAnalyzing = "YES">
             <BuildableReference
                BuildableIdentifier = "primary"
-               BlueprintIdentifier = "83CBBA2D1A601D0E00E9B192"
+               BlueprintIdentifier = "2D2A28121D9B038B00D4039D"
                BuildableName = "libReact.a"
-               BlueprintName = "React"
+               BlueprintName = "React-tvOS"
                ReferencedContainer = "container:../node_modules/react-native/React/React.xcodeproj">
             </BuildableReference>
          </BuildActionEntry>
@@ -37,9 +28,9 @@
             buildForAnalyzing = "YES">
             <BuildableReference
                BuildableIdentifier = "primary"
-               BlueprintIdentifier = "13B07F861A680F5B00A75B9A"
-               BuildableName = "apolloschurchapp.app"
-               BlueprintName = "apolloschurchapp"
+               BlueprintIdentifier = "2D02E47A1E0B4A5D006451C7"
+               BuildableName = "apolloschurchapp-tvOS.app"
+               BlueprintName = "apolloschurchapp-tvOS"
                ReferencedContainer = "container:apolloschurchapp.xcodeproj">
             </BuildableReference>
          </BuildActionEntry>
@@ -51,9 +42,9 @@
             buildForAnalyzing = "YES">
             <BuildableReference
                BuildableIdentifier = "primary"
-               BlueprintIdentifier = "00E356ED1AD99517003FC87E"
-               BuildableName = "apolloschurchappTests.xctest"
-               BlueprintName = "apolloschurchappTests"
+               BlueprintIdentifier = "2D02E48F1E0B4A5D006451C7"
+               BuildableName = "apolloschurchapp-tvOSTests.xctest"
+               BlueprintName = "apolloschurchapp-tvOSTests"
                ReferencedContainer = "container:apolloschurchapp.xcodeproj">
             </BuildableReference>
          </BuildActionEntry>
@@ -69,9 +60,9 @@
             skipped = "NO">
             <BuildableReference
                BuildableIdentifier = "primary"
-               BlueprintIdentifier = "00E356ED1AD99517003FC87E"
-               BuildableName = "apolloschurchappTests.xctest"
-               BlueprintName = "apolloschurchappTests"
+               BlueprintIdentifier = "2D02E48F1E0B4A5D006451C7"
+               BuildableName = "apolloschurchapp-tvOSTests.xctest"
+               BlueprintName = "apolloschurchapp-tvOSTests"
                ReferencedContainer = "container:apolloschurchapp.xcodeproj">
             </BuildableReference>
          </TestableReference>
@@ -79,9 +70,9 @@
       <MacroExpansion>
          <BuildableReference
             BuildableIdentifier = "primary"
-            BlueprintIdentifier = "13B07F861A680F5B00A75B9A"
-            BuildableName = "apolloschurchapp.app"
-            BlueprintName = "apolloschurchapp"
+            BlueprintIdentifier = "2D02E47A1E0B4A5D006451C7"
+            BuildableName = "apolloschurchapp-tvOS.app"
+            BlueprintName = "apolloschurchapp-tvOS"
             ReferencedContainer = "container:apolloschurchapp.xcodeproj">
          </BuildableReference>
       </MacroExpansion>
@@ -89,7 +80,7 @@
       </AdditionalOptions>
    </TestAction>
    <LaunchAction
-      buildConfiguration = "Release"
+      buildConfiguration = "Debug"
       selectedDebuggerIdentifier = "Xcode.DebuggerFoundation.Debugger.LLDB"
       selectedLauncherIdentifier = "Xcode.DebuggerFoundation.Launcher.LLDB"
       launchStyle = "0"
@@ -102,9 +93,9 @@
          runnableDebuggingMode = "0">
          <BuildableReference
             BuildableIdentifier = "primary"
-            BlueprintIdentifier = "13B07F861A680F5B00A75B9A"
-            BuildableName = "apolloschurchapp.app"
-            BlueprintName = "apolloschurchapp"
+            BlueprintIdentifier = "2D02E47A1E0B4A5D006451C7"
+            BuildableName = "apolloschurchapp-tvOS.app"
+            BlueprintName = "apolloschurchapp-tvOS"
             ReferencedContainer = "container:apolloschurchapp.xcodeproj">
          </BuildableReference>
       </BuildableProductRunnable>
@@ -121,9 +112,9 @@
          runnableDebuggingMode = "0">
          <BuildableReference
             BuildableIdentifier = "primary"
-            BlueprintIdentifier = "13B07F861A680F5B00A75B9A"
-            BuildableName = "apolloschurchapp.app"
-            BlueprintName = "apolloschurchapp"
+            BlueprintIdentifier = "2D02E47A1E0B4A5D006451C7"
+            BuildableName = "apolloschurchapp-tvOS.app"
+            BlueprintName = "apolloschurchapp-tvOS"
             ReferencedContainer = "container:apolloschurchapp.xcodeproj">
          </BuildableReference>
       </BuildableProductRunnable>
diff --git a/apolloschurchapp/ios/apolloschurchapp.xcworkspace/xcshareddata/xcschemes/apolloschurchapp.xcscheme b/apolloschurchapp/ios/apolloschurchapp.xcodeproj/xcshareddata/xcschemes/apolloschurchapp.xcscheme
similarity index 100%
rename from apolloschurchapp/ios/apolloschurchapp.xcworkspace/xcshareddata/xcschemes/apolloschurchapp.xcscheme
rename to apolloschurchapp/ios/apolloschurchapp.xcodeproj/xcshareddata/xcschemes/apolloschurchapp.xcscheme
diff --git a/apolloschurchapp/ios/apolloschurchapp.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist b/apolloschurchapp/ios/apolloschurchapp.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist
deleted file mode 100644
index 18d9810..0000000
--- a/apolloschurchapp/ios/apolloschurchapp.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist
+++ /dev/null
@@ -1,8 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
-<plist version="1.0">
-<dict>
-	<key>IDEDidComputeMac32BitWarning</key>
-	<true/>
-</dict>
-</plist>
diff --git a/apolloschurchapp/ios/apolloschurchapp/AppDelegate.h b/apolloschurchapp/ios/apolloschurchapp/AppDelegate.h
index 2726d5e..d4f2580 100644
--- a/apolloschurchapp/ios/apolloschurchapp/AppDelegate.h
+++ b/apolloschurchapp/ios/apolloschurchapp/AppDelegate.h
@@ -1,14 +1,13 @@
 /**
- * Copyright (c) Facebook, Inc. and its affiliates.
+ * Copyright (c) 2015-present, Facebook, Inc.
  *
  * This source code is licensed under the MIT license found in the
  * LICENSE file in the root directory of this source tree.
  */
 
-#import <React/RCTBridgeDelegate.h>
 #import <UIKit/UIKit.h>
 
-@interface AppDelegate : UIResponder <UIApplicationDelegate, RCTBridgeDelegate>
+@interface AppDelegate : UIResponder <UIApplicationDelegate>
 
 @property (nonatomic, strong) UIWindow *window;
 
diff --git a/apolloschurchapp/ios/apolloschurchapp/AppDelegate.m b/apolloschurchapp/ios/apolloschurchapp/AppDelegate.m
index 2bf071d..9d889ed 100644
--- a/apolloschurchapp/ios/apolloschurchapp/AppDelegate.m
+++ b/apolloschurchapp/ios/apolloschurchapp/AppDelegate.m
@@ -1,5 +1,5 @@
 /**
- * Copyright (c) Facebook, Inc. and its affiliates.
+ * Copyright (c) 2015-present, Facebook, Inc.
  *
  * This source code is licensed under the MIT license found in the
  * LICENSE file in the root directory of this source tree.
@@ -7,13 +7,10 @@
 
 #import "AppDelegate.h"
 
-
-#import <React/RCTBridge.h>
 #import <React/RCTBundleURLProvider.h>
 #import <React/RCTRootView.h>
+#import "RNSplashScreen.h"
 #import <React/RCTLinkingManager.h>
-#import "RNBootSplash.h"
-#import <GoogleCast/GoogleCast.h>
 
 @implementation AppDelegate
 
@@ -27,50 +24,34 @@ - (BOOL)application:(UIApplication *)application
 }
 
 // Only if your app is using [Universal Links](https://developer.apple.com/library/prerelease/ios/documentation/General/Conceptual/AppSearch/UniversalLinks.html).
-- (BOOL)application:(UIApplication *)application continueUserActivity:(nonnull NSUserActivity *)userActivity
- restorationHandler:(nonnull void (^)(NSArray<id<UIUserActivityRestoring>> * _Nullable))restorationHandler
+- (BOOL)application:(UIApplication *)application continueUserActivity:(NSUserActivity *)userActivity
+ restorationHandler:(void (^)(NSArray * _Nullable))restorationHandler
 {
- return [RCTLinkingManager application:application
-                  continueUserActivity:userActivity
-                    restorationHandler:restorationHandler];
+  return [RCTLinkingManager application:application
+                   continueUserActivity:userActivity
+                     restorationHandler:restorationHandler];
 }
 
 - (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions
 {
+  NSURL *jsCodeLocation;
 
-  RCTBridge *bridge = [[RCTBridge alloc] initWithDelegate:self launchOptions:launchOptions];
-  RCTRootView *rootView = [[RCTRootView alloc] initWithBridge:bridge
-                                                   moduleName:@"apolloschurchapp"
-                                            initialProperties:nil];
-
-  // Initialize Google Cast
-  GCKDiscoveryCriteria *criteria = [[GCKDiscoveryCriteria alloc] initWithApplicationID:kGCKDefaultMediaReceiverApplicationID];
-  GCKCastOptions* options = [[GCKCastOptions alloc] initWithDiscoveryCriteria:criteria];
-  options.physicalVolumeButtonsWillControlDeviceVolume = YES;
-  [GCKCastContext setSharedInstanceWithOptions:options];
+  jsCodeLocation = [[RCTBundleURLProvider sharedSettings] jsBundleURLForBundleRoot:@"index" fallbackResource:nil];
 
+  RCTRootView *rootView = [[RCTRootView alloc] initWithBundleURL:jsCodeLocation
+                                                      moduleName:@"apolloschurchapp"
+                                               initialProperties:nil
+                                                   launchOptions:launchOptions];
   rootView.backgroundColor = [[UIColor alloc] initWithRed:1.0f green:1.0f blue:1.0f alpha:1];
 
   self.window = [[UIWindow alloc] initWithFrame:[UIScreen mainScreen].bounds];
   UIViewController *rootViewController = [UIViewController new];
   rootViewController.view = rootView;
-
-  [RNBootSplash initWithStoryboard:@"BootSplash" rootView:rootView];
-
   self.window.rootViewController = rootViewController;
   [self.window makeKeyAndVisible];
 
-  [RNBootSplash initialShow];
+  [RNSplashScreen show];
   return YES;
 }
 
-- (NSURL *)sourceURLForBridge:(RCTBridge *)bridge
-{
-#if DEBUG
-  return [[RCTBundleURLProvider sharedSettings] jsBundleURLForBundleRoot:@"index" fallbackResource:nil];
-#else
-  return [[NSBundle mainBundle] URLForResource:@"main" withExtension:@"jsbundle"];
-#endif
-}
-
 @end
diff --git a/apolloschurchapp/ios/apolloschurchapp/Base.lproj/LaunchScreen.xib b/apolloschurchapp/ios/apolloschurchapp/Base.lproj/LaunchScreen.xib
index 4ca705c..035b378 100644
--- a/apolloschurchapp/ios/apolloschurchapp/Base.lproj/LaunchScreen.xib
+++ b/apolloschurchapp/ios/apolloschurchapp/Base.lproj/LaunchScreen.xib
@@ -1,11 +1,11 @@
 <?xml version="1.0" encoding="UTF-8"?>
-<document type="com.apple.InterfaceBuilder3.CocoaTouch.XIB" version="3.0" toolsVersion="14490.70" targetRuntime="iOS.CocoaTouch" propertyAccessControl="none" useAutolayout="YES" launchScreen="YES" useTraitCollections="YES" colorMatched="YES">
+<document type="com.apple.InterfaceBuilder3.CocoaTouch.XIB" version="3.0" toolsVersion="14113" targetRuntime="iOS.CocoaTouch" propertyAccessControl="none" useAutolayout="YES" launchScreen="YES" useTraitCollections="YES" colorMatched="YES">
     <device id="retina5_5" orientation="portrait">
         <adaptation id="fullscreen"/>
     </device>
     <dependencies>
         <deployment identifier="iOS"/>
-        <plugIn identifier="com.apple.InterfaceBuilder.IBCocoaTouchPlugin" version="14490.49"/>
+        <plugIn identifier="com.apple.InterfaceBuilder.IBCocoaTouchPlugin" version="14088"/>
         <capability name="documents saved in the Xcode 8 format" minToolsVersion="8.0"/>
     </dependencies>
     <objects>
@@ -15,22 +15,18 @@
             <rect key="frame" x="0.0" y="0.0" width="414" height="736"/>
             <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
             <subviews>
-                <imageView clipsSubviews="YES" userInteractionEnabled="NO" contentMode="scaleToFill" horizontalHuggingPriority="251" verticalHuggingPriority="251" fixedFrame="YES" image="splash_bg" translatesAutoresizingMaskIntoConstraints="NO" id="iGM-E3-lqn">
-                    <rect key="frame" x="-12" y="-10" width="437" height="758"/>
-                    <autoresizingMask key="autoresizingMask" flexibleMinX="YES" widthSizable="YES" flexibleMaxX="YES" flexibleMinY="YES" heightSizable="YES" flexibleMaxY="YES"/>
-                </imageView>
                 <imageView userInteractionEnabled="NO" contentMode="scaleAspectFit" horizontalHuggingPriority="251" verticalHuggingPriority="251" fixedFrame="YES" image="splash-icon" translatesAutoresizingMaskIntoConstraints="NO" id="6Je-Yv-1Zj">
                     <rect key="frame" x="157" y="288" width="100" height="100"/>
                     <autoresizingMask key="autoresizingMask" flexibleMinX="YES" widthSizable="YES" flexibleMaxX="YES" flexibleMinY="YES" heightSizable="YES" flexibleMaxY="YES"/>
                 </imageView>
             </subviews>
+            <color key="backgroundColor" red="0.0" green="0.40392156862745099" blue="0.42745098039215684" alpha="1" colorSpace="custom" customColorSpace="sRGB"/>
             <nil key="simulatedStatusBarMetrics"/>
             <modalPageSheetSimulatedSizeMetrics key="simulatedDestinationMetrics"/>
-            <point key="canvasLocation" x="544.92753623188412" y="453.26086956521743"/>
+            <point key="canvasLocation" x="546" y="454"/>
         </view>
     </objects>
     <resources>
         <image name="splash-icon" width="94" height="99"/>
-        <image name="splash_bg" width="721" height="721"/>
     </resources>
-</document>
+</document>
\ No newline at end of file
diff --git a/apolloschurchapp/ios/apolloschurchapp/BootSplash.storyboard b/apolloschurchapp/ios/apolloschurchapp/BootSplash.storyboard
deleted file mode 100644
index 03385b3..0000000
--- a/apolloschurchapp/ios/apolloschurchapp/BootSplash.storyboard
+++ /dev/null
@@ -1,45 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<document type="com.apple.InterfaceBuilder3.CocoaTouch.Storyboard.XIB" version="3.0" toolsVersion="15505" targetRuntime="iOS.CocoaTouch" propertyAccessControl="none" useAutolayout="YES" launchScreen="YES" useTraitCollections="YES" useSafeAreas="YES" colorMatched="YES" initialViewController="Dtp-p8-LvN">
-    <device id="retina6_1" orientation="portrait" appearance="light"/>
-    <dependencies>
-        <deployment identifier="iOS"/>
-        <plugIn identifier="com.apple.InterfaceBuilder.IBCocoaTouchPlugin" version="15509"/>
-        <capability name="Safe area layout guides" minToolsVersion="9.0"/>
-        <capability name="documents saved in the Xcode 8 format" minToolsVersion="8.0"/>
-    </dependencies>
-    <scenes>
-        <!--View Controller-->
-        <scene sceneID="Fnd-62-7zz">
-            <objects>
-                <viewController id="Dtp-p8-LvN" sceneMemberID="viewController">
-                    <view key="view" autoresizesSubviews="NO" userInteractionEnabled="NO" contentMode="scaleToFill" id="guO-oA-Nhw">
-                        <rect key="frame" x="0.0" y="0.0" width="414" height="896"/>
-                        <autoresizingMask key="autoresizingMask"/>
-                        <subviews>
-                            <imageView autoresizesSubviews="NO" clipsSubviews="YES" userInteractionEnabled="NO" contentMode="scaleAspectFit" image="BootSplashLogo" translatesAutoresizingMaskIntoConstraints="NO" id="3lX-Ut-9ad">
-                                <rect key="frame" x="157" y="395" width="100" height="106"/>
-                                <accessibility key="accessibilityConfiguration">
-                                    <accessibilityTraits key="traits" image="YES" notEnabled="YES"/>
-                                </accessibility>
-                            </imageView>
-                        </subviews>
-                        <color key="backgroundColor" red="0.00000000000000" green="0.403921568627451" blue="0.427450980392157" alpha="1" colorSpace="calibratedRGB"/>
-                        <accessibility key="accessibilityConfiguration">
-                            <accessibilityTraits key="traits" notEnabled="YES"/>
-                        </accessibility>
-                        <constraints>
-                            <constraint firstItem="3lX-Ut-9ad" firstAttribute="centerX" secondItem="eg9-kz-Dhh" secondAttribute="centerX" id="Fh9-Fy-1nT"/>
-                            <constraint firstItem="3lX-Ut-9ad" firstAttribute="centerY" secondItem="guO-oA-Nhw" secondAttribute="centerY" id="nvB-Ic-PnI"/>
-                        </constraints>
-                        <viewLayoutGuide key="safeArea" id="eg9-kz-Dhh"/>
-                    </view>
-                </viewController>
-                <placeholder placeholderIdentifier="IBFirstResponder" id="Lvb-Jr-bCV" userLabel="First Responder" customClass="UIResponder" sceneMemberID="firstResponder"/>
-            </objects>
-            <point key="canvasLocation" x="0.0" y="0.0"/>
-        </scene>
-    </scenes>
-    <resources>
-        <image name="BootSplashLogo" width="100" height="106"/>
-    </resources>
-</document>
diff --git a/apolloschurchapp/ios/apolloschurchapp/Images.xcassets/BootSplashLogo.imageset/Contents.json b/apolloschurchapp/ios/apolloschurchapp/Images.xcassets/BootSplashLogo.imageset/Contents.json
deleted file mode 100644
index 570652d..0000000
--- a/apolloschurchapp/ios/apolloschurchapp/Images.xcassets/BootSplashLogo.imageset/Contents.json
+++ /dev/null
@@ -1,23 +0,0 @@
-{
-  "images": [
-    {
-      "idiom": "universal",
-      "filename": "bootsplash_logo.png",
-      "scale": "1x"
-    },
-    {
-      "idiom": "universal",
-      "filename": "bootsplash_logo@2x.png",
-      "scale": "2x"
-    },
-    {
-      "idiom": "universal",
-      "filename": "bootsplash_logo@3x.png",
-      "scale": "3x"
-    }
-  ],
-  "info": {
-    "version": 1,
-    "author": "xcode"
-  }
-}
diff --git a/apolloschurchapp/ios/apolloschurchapp/Images.xcassets/BootSplashLogo.imageset/bootsplash_logo.png b/apolloschurchapp/ios/apolloschurchapp/Images.xcassets/BootSplashLogo.imageset/bootsplash_logo.png
deleted file mode 100644
index 7065a802c74262b1d4290fe4a98c7c025a95d435..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 2202
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
Lj$+){mU#OAxYp}m

diff --git a/apolloschurchapp/ios/apolloschurchapp/Images.xcassets/BootSplashLogo.imageset/bootsplash_logo@2x.png b/apolloschurchapp/ios/apolloschurchapp/Images.xcassets/BootSplashLogo.imageset/bootsplash_logo@2x.png
deleted file mode 100644
index 8abde463f8c0ef768813aaf2923d8bdd3397f1b3..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 5175
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
Ph@c1U4}7qPb@smj4)~Vv

diff --git a/apolloschurchapp/ios/apolloschurchapp/Images.xcassets/BootSplashLogo.imageset/bootsplash_logo@3x.png b/apolloschurchapp/ios/apolloschurchapp/Images.xcassets/BootSplashLogo.imageset/bootsplash_logo@3x.png
deleted file mode 100644
index e15c3c505216e927314b583a1d36afb075fb307a..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 11284
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

diff --git a/apolloschurchapp/ios/apolloschurchapp/Images.xcassets/Contents.json b/apolloschurchapp/ios/apolloschurchapp/Images.xcassets/Contents.json
index da4a164..2d92bd5 100644
--- a/apolloschurchapp/ios/apolloschurchapp/Images.xcassets/Contents.json
+++ b/apolloschurchapp/ios/apolloschurchapp/Images.xcassets/Contents.json
@@ -3,4 +3,4 @@
     "version" : 1,
     "author" : "xcode"
   }
-}
\ No newline at end of file
+}
diff --git a/apolloschurchapp/ios/apolloschurchapp/Images.xcassets/splash-icon.imageset/Contents.json b/apolloschurchapp/ios/apolloschurchapp/Images.xcassets/splash-icon.imageset/Contents.json
new file mode 100644
index 0000000..1de4619
--- /dev/null
+++ b/apolloschurchapp/ios/apolloschurchapp/Images.xcassets/splash-icon.imageset/Contents.json
@@ -0,0 +1,23 @@
+{
+  "images" : [
+    {
+      "idiom" : "universal",
+      "filename" : "splash-icon.png",
+      "scale" : "1x"
+    },
+    {
+      "idiom" : "universal",
+      "filename" : "splash-icon@2x.png",
+      "scale" : "2x"
+    },
+    {
+      "idiom" : "universal",
+      "filename" : "splash-icon@3x.png",
+      "scale" : "3x"
+    }
+  ],
+  "info" : {
+    "version" : 1,
+    "author" : "xcode"
+  }
+}
\ No newline at end of file
diff --git a/apolloschurchapp/ios/apolloschurchapp/Images.xcassets/splash-icon.imageset/splash-icon.png b/apolloschurchapp/ios/apolloschurchapp/Images.xcassets/splash-icon.imageset/splash-icon.png
new file mode 100644
index 0000000000000000000000000000000000000000..78e8e3296b2d76a3c5ad8e3cf20fb611a442888b
GIT binary patch
literal 460
zcmV;-0W<!IP)<h;3K|Lk000e1NJLTq003S9003hG0{{R3Z&+WB0000CP)t-sM{rE}
z`Stnu_4xPnMjB-$00003bW%=J09vp7OV4=#00C@CL_t(|0j1PIj@2*>#__*{M|#WL
zfVlxjAV*-sj>Ggiu;K{45nUpP2;x!8Q^y@uZ@!iFe#&d?G!^#9SAbt%h<P{urDM@!
zA#Z?UMdhA$2Fn=`!T#fUhOkfrXawOZlmHS}Xarkvn;`br-VDv4J`BpqkroH~8T?K_
zF^~j)*bfo5)%Rym9hhOg!;-*erNeRt4Hy`NcX?Rrm!T)1|6u^gb=Uxhf=`5DTaUn!
z!U{xaci62auw^iqL3jx_hhor^>r6Lza=0Bpd>Cpl9Evw?K)V8#6$h)nV^EL487v%T
zqJCx==mGxZVCfE43<o*DPb>l8cnynvIXj-V1GXP~(z3&+2<*@dY$neyVGYAl5F%&-
zTZF+3I)Nn6BlHLb>IAeIMuaVaHbb3(HNZMUA%Ha@N7xL!@f75n!4p6+fX{>!Ds!Zr
z0Ix#JpgsU9WYI@JQxMAS1b9Evz=s?fA9Gj=dD>sCK)iIgo&2!?0000<MNUMnLSTaD
CX}$#j

literal 0
HcmV?d00001

diff --git a/apolloschurchapp/ios/apolloschurchapp/Images.xcassets/splash-icon.imageset/splash-icon@2x.png b/apolloschurchapp/ios/apolloschurchapp/Images.xcassets/splash-icon.imageset/splash-icon@2x.png
new file mode 100644
index 0000000000000000000000000000000000000000..b1b851625355ccdf330cf3ed364ca0a5e691b213
GIT binary patch
literal 883
zcmeAS@N?(olHy`uVBq!ia0vp^dw}>D2Q!e2*ORgXQak}ZA+GKPK0kka1)?9{zjSR#
z-3=6HE(!7rX1JW1yZiW6AWzuS#WAGf*3(<jd3OQ?m@g(4|F1sB^yz@c(gnK&56wR&
z>MDD>!FK+1qyA5kQ(rDV^Yl|}=steq_V#?Sss7d1eYJONyt2h|%`)3H%jWLRx+N2K
zSuX7IxmeR&zSWuh{P)lGeJa1ZrF{AP|66MKR)1VR|Mb&fq1dx`UoO{}cy+^ztQzws
zsoTC@i&yP@oz^8B$lGsWbH3u~`&}=!FShM}t@bw7{O#SB&x?M3S=*6SaV+@o<ilA~
zfxPD{vMQ8TJ&atL)*u~wR{cQl8nyfPQd%GGzrb+k#Z&WLKX(ZhJm%kj!B<X%DKEv8
z|IQgJ(*wQh*>+sK%3!`tD&SuD=MTSkd-Kk?7xsBajo7N6HM@?TwV5HfW8-Q4lFtc8
zOY@%PSF!9Uya&?Nw&UZ~A9?$7K7Rhpo>v1DS;qzxNig3x>v>*Uqtt_AVa)G#OJ6B4
z-zW9%Soq`Jl3VWX$ZPWz{~F4#$9D(h#f67M3z)Akn9q`W;}&xGZbjCQzt@3uN7fE$
z-`)q$LQU`Vu4vmWc(uTM@v4t^_xv|ke%Krh(lANto!T;pshm6H3Kp+?_%wUf!#o#=
zhL2Z1=vu9ly6?O8lPOT|EU7xBa^nQGH)$-UP0~Lecd7i-18N4@2(rnu_r01AZ#giG
z%aaji2wwS-cj)@Vr^+h??*y3clU{eM+}L~B%Z;D@)NJT^m$s)|a=zVzjJs#&-M_zf
zfm_k%n6vv!K}IYF8c_pu#`?D1AAxqq^uBLf{qb%A(1d~|57_>k_AXFf(fHIo{P5i$
zSwFti^m06v1*%@&HvK)=*Sz~<KpwF%z2p0@QR+T#z~kKyfdR!F_TkQlPy3`lu-KZ{
zRNVJ<sJwf&IXKQIuFyDE{==U?JOPW<9nRi+S-i8xpJl~Ot6IJ3?<X>t*0HU)C~UAt
zKA>*#?0cREKK#D3Wbf-`(}fls;}6(;);C|(p?ALc)g5_Nx{O(7zVi=1UCv&->korz
x6;s>y=F`9Ps*D>C|ISm}?-O40SM&2v#$_E>r|&3JE(Ycn22WQ%mvv4FO#oE~!(ada

literal 0
HcmV?d00001

diff --git a/apolloschurchapp/ios/apolloschurchapp/Images.xcassets/splash-icon.imageset/splash-icon@3x.png b/apolloschurchapp/ios/apolloschurchapp/Images.xcassets/splash-icon.imageset/splash-icon@3x.png
new file mode 100644
index 0000000000000000000000000000000000000000..74c040f7252c2d5230174c667841fd7e572a7f9f
GIT binary patch
literal 1281
zcmeAS@N?(olHy`uVBq!ia0y~yV3Y!4O%7(DNOiMpH<029@Ck8sFYx*K<0}yT`2MA9
zL+WmzICDvmUogYT)VtGc`4|{j7J9lkhE&{obK5Y_*^q}NaPqGIbD5XiKO}KDUha)T
z?H5fuMc=r$P2c7i|9GDIre?`hy|WL`p1wZke2D+Xwac$u3C?+~x%I2a>g6}C1!uj|
z4D;Xk_R^ANi#xvx_T^4jGp%h&{wi|2%FEaG=qt@_U#HBf>dLiUx@}$(STq+b8awMs
ziOEL0Ltvf#1#9LdMf<N@xje%5=(c%5!TuY;T9(aAy1n#e#=Z6Z1v$G-R=&&tnV{#J
z^~>ECr-s;BH_BiJZ-W^;u{vtE#)rzsVp|!G?sDbbS+QN?Q(<19w}(PtntzUo`&-T~
zqw1n=r|Ij&w*ENW7kVX$kJ+WtHZd^!>lf=qMLQKGcC2{(^@wYvZDHVIAYBQhqx@s0
zToV?53gl)2xpw|pf!!hzu7&=2fiJSREZU*Ibp_-1IquA57oK-^U#fbvIC8bR-m41R
zzvT|vpO%Q3K5+&qTC4Hy<>N(euRFUxRXtj?W!?^rPW8<zT(7SdJ!*SbpX*58b)Bq>
z;u)?V-6OQSsyB5#nkOfq`hf*(rS^v<vS&ZcJ%5%l)Ar-VH9*ItewbpdvR+;9)T_?!
zS=H0p<YQE_ZtjW(Iw~sg&g3wW?<r!YFPyeQ>^-T~RecF)Ajlc3HQssZzKUkQ=Nz?G
zUC--*=Jxxw9fhZDJb_wM9N*V>@V}_tt<tF8z2fJqNd8QaJAu}C0i6x>*`hr_E=U`~
z7c1s}RuMjGJJa>7a=Oim-_xH>;8uLAUt!c;^`fPE|BBSbhTT%nUas6K3DkB9sBIH4
zd_ZiV&E)~BfkDb?QyV_zps;x9X7$Y)6-K~d^3>tFH#1Bme%5i<wPhwTQw{{@ysPOD
zw-WE3CCyhF0E?C|{~8kz`|e9mp#MMt1`Xzu+FANhj}8k}be)Y|^dfN$(AOJRG+ti<
z4Cq+ZR~f)41lbFUN;m&M>;6RpV=D{OpDVO&DqY|90zKTg{7Rfc*SodAP<<k5`r$jb
zi|qr>vIyl5Q)V5$^}MeBgNi_D_wqZ9nl?{+-|e^lw>6)Axgc|(fXnyte~#7+!9Ok-
zbkAPJ!m_xoS+7bV>twKg)*<2iTk@YCo-Mt*W_jEdaoe|DtL9s4YrTz1cl|mq4T!^l
zxXd;7w;hP%2E=i)zBj{d&UU@BT?@p2#RDZju-Mwnx<2pM>18<wE;9#4&#Maj{>y)B
zXyD%Ev4LM*AST8BUJ(ft0AY{>jBOhDXTjf~GoK6B?>=<7s_M`pbsztTFD^$fCdl!M
z=_kID;eDps<LZCqCFf;fG26i95b3$|3~UoG3YS(LdX%xkLh8)ogNxKbO5J&}srk}!
z^kTsCiwSXuBA~{Fd}(>f**$N?W#MJZ?Oo>n)ti5w-(lDNH(C?cZUvTI44$rjF6*2U
FngCdzb!Pwo

literal 0
HcmV?d00001

diff --git a/apolloschurchapp/ios/apolloschurchapp/Info.plist b/apolloschurchapp/ios/apolloschurchapp/Info.plist
index 6c2828a..0d5c926 100644
--- a/apolloschurchapp/ios/apolloschurchapp/Info.plist
+++ b/apolloschurchapp/ios/apolloschurchapp/Info.plist
@@ -2,6 +2,15 @@
 <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
 <plist version="1.0">
 <dict>
+	<key>CFBundleURLTypes</key>
+	<array>
+		<dict>
+			<key>CFBundleURLSchemes</key>
+			<array>
+				<string>apolloschurchapp</string>
+			</array>
+		</dict>
+	</array>
 	<key>CFBundleDevelopmentRegion</key>
 	<string>en</string>
 	<key>CFBundleDisplayName</key>
@@ -9,7 +18,7 @@
 	<key>CFBundleExecutable</key>
 	<string>$(EXECUTABLE_NAME)</string>
 	<key>CFBundleIdentifier</key>
-	<string>$(PRODUCT_BUNDLE_IDENTIFIER)</string>
+	<string>org.reactjs.native.$(PRODUCT_NAME:rfc1034identifier)</string>
 	<key>CFBundleInfoDictionaryVersion</key>
 	<string>6.0</string>
 	<key>CFBundleName</key>
@@ -17,56 +26,33 @@
 	<key>CFBundlePackageType</key>
 	<string>APPL</string>
 	<key>CFBundleShortVersionString</key>
-	<string>1.0.0</string>
+	<string>0.7.0</string>
 	<key>CFBundleSignature</key>
 	<string>????</string>
-	<key>CFBundleURLTypes</key>
-	<array>
-		<dict>
-			<key>CFBundleURLSchemes</key>
-			<array>
-				<string>apolloschurchapp</string>
-			</array>
-		</dict>
-	</array>
 	<key>CFBundleVersion</key>
-	<string>1</string>
+	<string>5</string>
 	<key>ITSAppUsesNonExemptEncryption</key>
-	<false/>
+	<false />
 	<key>LSRequiresIPhoneOS</key>
-	<true/>
+	<true />
 	<key>NSAppTransportSecurity</key>
 	<dict>
-		<key>NSAllowsArbitraryLoads</key>
-		<true/>
 		<key>NSExceptionDomains</key>
 		<dict>
 			<key>embed.wistia.com</key>
 			<dict>
 				<key>NSExceptionAllowsInsecureHTTPLoads</key>
-				<true/>
+				<true />
 			</dict>
 			<key>localhost</key>
 			<dict>
 				<key>NSExceptionAllowsInsecureHTTPLoads</key>
-				<true/>
+				<true />
 			</dict>
 		</dict>
 	</dict>
-	<key>NSBluetoothAlwaysUsageDescription</key>
-	<string>$(PRODUCT_NAME) would like access to bluetooth (for playing audio)</string>
-	<key>NSCameraUsageDescription</key>
-	<string>$(PRODUCT_NAME) would like to use your camera (for uploading profile pictures)</string>
-	<key>NSLocationAlwaysUsageDescription</key>
-	<string>$(PRODUCT_NAME) would like to use your location for determining your closest campus</string>
 	<key>NSLocationWhenInUseUsageDescription</key>
-	<string>$(PRODUCT_NAME) would like to use your location for determining your closest campus</string>
-	<key>NSMicrophoneUsageDescription</key>
-	<string>$(PRODUCT_NAME) would like to your microphone (for videos)</string>
-	<key>NSPhotoLibraryAddUsageDescription</key>
-	<string>$(PRODUCT_NAME) would like to save photos to your photo gallery (for uploading profile pictures)</string>
-	<key>NSPhotoLibraryUsageDescription</key>
-	<string>$(PRODUCT_NAME) would like access to your photo gallery (for uploading profile pictures)</string>
+	<string />
 	<key>UIAppFonts</key>
 	<array>
 		<string>DroidSerif-Bold.ttf</string>
@@ -82,8 +68,13 @@
 		<string>Inter-UI-MediumItalic.otf</string>
 		<string>Inter-UI-Regular.otf</string>
 	</array>
+	<key>UIBackgroundModes</key>
+	<array>
+		<string>audio</string>
+		<string>remote-notification</string>
+	</array>
 	<key>UILaunchStoryboardName</key>
-	<string>BootSplash</string>
+	<string>LaunchScreen</string>
 	<key>UIRequiredDeviceCapabilities</key>
 	<array>
 		<string>armv7</string>
@@ -97,6 +88,14 @@
 		<string>UIInterfaceOrientationLandscapeRight</string>
 	</array>
 	<key>UIViewControllerBasedStatusBarAppearance</key>
-	<false/>
+	<false />
+	<key>NSPhotoLibraryUsageDescription</key>
+	<string>$(PRODUCT_NAME) would like access to your photo gallery (for uploading profile pictures)</string>
+	<key>NSCameraUsageDescription</key>
+	<string>$(PRODUCT_NAME) would like to use your camera (for uploading profile pictures)</string>
+	<key>NSPhotoLibraryAddUsageDescription</key>
+	<string>$(PRODUCT_NAME) would like to save photos to your photo gallery (for uploading profile pictures)</string>
+	<key>NSMicrophoneUsageDescription</key>
+	<string>$(PRODUCT_NAME) would like to your microphone (for videos)</string>
 </dict>
 </plist>
diff --git a/apolloschurchapp/ios/apolloschurchapp/apolloschurchapp.entitlements b/apolloschurchapp/ios/apolloschurchapp/apolloschurchapp.entitlements
index 984fdb2..903def2 100644
--- a/apolloschurchapp/ios/apolloschurchapp/apolloschurchapp.entitlements
+++ b/apolloschurchapp/ios/apolloschurchapp/apolloschurchapp.entitlements
@@ -4,11 +4,5 @@
 <dict>
 	<key>aps-environment</key>
 	<string>development</string>
-	<key>com.apple.developer.networking.wifi-info</key>
-	<true/>
-	<key>com.apple.developer.associated-domains</key>
-	<array>
-		<string>applink:apollos-church-api.herokuapp.com</string>
-	</array>
 </dict>
 </plist>
diff --git a/apolloschurchapp/ios/apolloschurchapp/main.m b/apolloschurchapp/ios/apolloschurchapp/main.m
index d9c4112..c73e006 100644
--- a/apolloschurchapp/ios/apolloschurchapp/main.m
+++ b/apolloschurchapp/ios/apolloschurchapp/main.m
@@ -1,5 +1,5 @@
 /**
- * Copyright (c) Facebook, Inc. and its affiliates.
+ * Copyright (c) 2015-present, Facebook, Inc.
  *
  * This source code is licensed under the MIT license found in the
  * LICENSE file in the root directory of this source tree.
@@ -14,4 +14,3 @@ int main(int argc, char * argv[]) {
     return UIApplicationMain(argc, argv, nil, NSStringFromClass([AppDelegate class]));
   }
 }
-          
diff --git a/apolloschurchapp/ios/apolloschurchappTests/Info.plist b/apolloschurchapp/ios/apolloschurchappTests/Info.plist
index 3b1d51c..e358b6d 100644
--- a/apolloschurchapp/ios/apolloschurchappTests/Info.plist
+++ b/apolloschurchapp/ios/apolloschurchappTests/Info.plist
@@ -7,7 +7,7 @@
 	<key>CFBundleExecutable</key>
 	<string>$(EXECUTABLE_NAME)</string>
 	<key>CFBundleIdentifier</key>
-	<string>$(PRODUCT_BUNDLE_IDENTIFIER)</string>
+	<string>org.reactjs.native.example.$(PRODUCT_NAME:rfc1034identifier)</string>
 	<key>CFBundleInfoDictionaryVersion</key>
 	<string>6.0</string>
 	<key>CFBundleName</key>
@@ -15,10 +15,10 @@
 	<key>CFBundlePackageType</key>
 	<string>BNDL</string>
 	<key>CFBundleShortVersionString</key>
-	<string>1.3.1</string>
+	<string>0.7.0</string>
 	<key>CFBundleSignature</key>
 	<string>????</string>
 	<key>CFBundleVersion</key>
-	<string>24</string>
+	<string>5</string>
 </dict>
 </plist>
diff --git a/apolloschurchapp/ios/apolloschurchappTests/apolloschurchappTests.m b/apolloschurchapp/ios/apolloschurchappTests/apolloschurchappTests.m
index 8b9d30b..5b96cea 100644
--- a/apolloschurchapp/ios/apolloschurchappTests/apolloschurchappTests.m
+++ b/apolloschurchapp/ios/apolloschurchappTests/apolloschurchappTests.m
@@ -1,5 +1,5 @@
 /**
- * Copyright (c) Facebook, Inc. and its affiliates.
+ * Copyright (c) 2015-present, Facebook, Inc.
  *
  * This source code is licensed under the MIT license found in the
  * LICENSE file in the root directory of this source tree.
diff --git a/apolloschurchapp/jest.setup.js b/apolloschurchapp/jest.setup.js
index 2472b29..03cd103 100644
--- a/apolloschurchapp/jest.setup.js
+++ b/apolloschurchapp/jest.setup.js
@@ -1,132 +1,32 @@
-import React from 'react';
-import { NativeModules } from 'react-native';
-import ApollosConfig from '@apollosproject/config';
-import FRAGMENTS from '@apollosproject/ui-fragments';
-
-ApollosConfig.loadJs({ FRAGMENTS });
-
-// We ran into an issue where SafeAreaView would break jest tests.
-jest.mock('react-native-safe-area-context', () => ({
-  SafeAreaConsumer: ({ children }) =>
-    children({ top: 0, bottom: 0, left: 0, right: 0 }),
-  SafeAreaProvider: ({ children }) => children,
+jest.mock('./src/client/index');
+jest.mock('./src/config', () => ({
+  ONE_SIGNAL_KEY: 'doesntmatter',
+}));
+jest.mock('react-native-custom-tabs', () => ({
+  CustomTabs: {
+    openURL: jest.fn(),
+  },
 }));
 
-jest.mock('@react-native-community/datetimepicker', () => 'DateTimePicker');
-
-jest.mock('react-navigation', () => {
-  const ActualNavigation = require.requireActual('react-navigation');
-  return {
-    ...ActualNavigation,
-    SafeAreaView: require.requireActual('SafeAreaView'),
-  };
-});
-
-jest.mock('@react-navigation/native', () => {
-  const ActualNavigation = require.requireActual('@react-navigation/native');
-  return {
-    ...ActualNavigation,
-    SafeAreaView: require.requireActual('SafeAreaView'),
-  };
-});
+jest.mock('react-native-safari-view', () => ({
+  isAvailable: jest.fn().mockImplementation(() => Promise.resolve(true)),
+  show: jest.fn(),
+}));
 
+jest.mock('react-native-onesignal');
 jest.mock('react-native-music-control', () => ({
   enableBackgroundMode: jest.fn(),
   enableControl: jest.fn(),
   on: jest.fn(),
   setNowPlaying: jest.fn(),
-  STATE_PLAYING: false,
-  STATE_PAUSED: true,
-}));
-
-ApollosConfig.loadJs({
-  ONE_SIGNAL_KEY: 'doesntmatter',
-});
-
-jest.mock('Animated', () => {
-  const ActualAnimated = require.requireActual('Animated');
-  return {
-    ...ActualAnimated,
-    timing: (value, config) => ({
-      start: (callback) => {
-        value.setValue(config.toValue);
-        callback && callback();
-      },
-      stop: () => ({}),
-    }),
-    spring: (value, config) => ({
-      start: (callback) => {
-        value.setValue(config.toValue);
-        callback && callback();
-      },
-      stop: () => ({}),
-    }),
-  };
-});
-
-jest.mock('NativeAnimatedHelper');
-
-jest.mock('react-native-safari-view', () => ({
-  isAvailable: jest.fn().mockImplementation(() => Promise.resolve(true)),
-  show: jest.fn(),
 }));
 
 jest.mock('react-native-device-info', () => ({
-  getUniqueId: () => 'id-123',
+  getUniqueID: () => 'id-123',
   getSystemVersion: () => 'sys-version-123',
   getModel: () => 'ios',
   getVersion: () => 'version-123',
   getBuildNumber: () => 0,
 }));
 
-jest.mock('rn-fetch-blob', () => 'Fetch');
-
-jest.mock('@apollosproject/ui-analytics', () => ({
-  track: () => '',
-  AnalyticsConsumer: ({ children }) => children({ test: jest.fn() }),
-  AnalyticsProvider: ({ children }) => children,
-  CoreNavigationAnalytics: ({ children }) =>
-    children({ onNavigationStateChange: jest.fn() }),
-  TrackEventWhenLoaded: () => null,
-  withTrackOnPress: (Component) => (props) => <Component {...props} />,
-}));
-
-jest.mock('@apollosproject/ui-kit', () => ({
-  ...require.requireActual('@apollosproject/ui-kit'),
-  NavigationService: {
-    navigate: jest.fn(),
-    setTopLevelNavigator: jest.fn(),
-  },
-}));
-
-jest.mock('@apollosproject/ui-notifications', () => ({
-  NotificationsProvider: ({ children }) => children,
-}));
-
-jest.mock('@apollosproject/ui-mapview', () => ({
-  MapViewConnected: 'MapViewConnected',
-}));
-
-jest.mock('@apollosproject/ui-media-player', () => ({
-  MediaPlayerSpacer: ({ children }) => children,
-  MediaPlayer: () => 'MediaPlayer',
-  MediaPlayerProvider: ({ children }) => children,
-  playVideoMutation: 'mutation { playVideo }',
-  withTabBarMediaSpacer: () => ({ children }) => children,
-}));
-
 jest.mock('react-native-video', () => 'Video');
-
-jest.mock('NativeEventEmitter');
-
-jest.mock('DatePickerIOS', () => 'DatePicker');
-jest.mock('./src/client/index');
-
-NativeModules.RNGestureHandlerModule = {
-  attachGestureHandler: jest.fn(),
-  createGestureHandler: jest.fn(),
-  dropGestureHandler: jest.fn(),
-  updateGestureHandler: jest.fn(),
-  State: {},
-  Directions: {},
-};
diff --git a/apolloschurchapp/loadConfig.js b/apolloschurchapp/loadConfig.js
deleted file mode 100644
index 922e5d0..0000000
--- a/apolloschurchapp/loadConfig.js
+++ /dev/null
@@ -1,4 +0,0 @@
-import ApollosConfig from '@apollosproject/config';
-import FRAGMENTS from '@apollosproject/ui-fragments';
-
-ApollosConfig.loadJs({ FRAGMENTS });
diff --git a/apolloschurchapp/package.json b/apolloschurchapp/package.json
index d6a2385..597948a 100644
--- a/apolloschurchapp/package.json
+++ b/apolloschurchapp/package.json
@@ -1,7 +1,25 @@
 {
   "name": "apolloschurchapp",
-  "version": "1.3.1",
+  "version": "0.8.0-alpha.1",
   "private": true,
+  "devDependencies": {
+    "@storybook/addon-actions": "4.0.7",
+    "@storybook/addon-links": "4.0.7",
+    "@storybook/addons": "4.0.7",
+    "@storybook/react-native": "4.0.7",
+    "codecov": "3.0.2",
+    "get-dev-paths": "^0.1.0",
+    "jest": "23.6.0",
+    "jest-react-native": "18.0.0",
+    "nodemon": "1.17.5",
+    "prop-types": "15.6.1",
+    "react-dom": "16.6.3",
+    "react-native-dotenv": "0.2.0",
+    "react-native-storybook-loader": "1.8.0",
+    "react-native-version": "2.6.2",
+    "react-test-renderer": "16.6.1",
+    "waait": "1.0.2"
+  },
   "engines": {
     "node": ">=8.11.x"
   },
@@ -9,30 +27,23 @@
     "src"
   ],
   "scripts": {
-    "android": "SIM=\"$($HOME/Library/Android/sdk/emulator/emulator -list-avds | sed -n 1p)\" && $HOME/Library/Android/sdk/emulator/emulator -avd \"${SIM}\" & react-native run-android --appId com.apolloschurch.app",
+    "android": "react-native run-android",
     "codecov": "cat ./coverage/lcov.info | codecov",
     "fixlint": "eslint ./src --fix",
-    "ios": "react-native run-ios --simulator=\"iPhone 11\"",
-    "link-packages": "yarn --check-files --ignore-scripts && node ./scripts/link-packages",
-    "unlink-packages": "rm -rf ./node_modules/@apollosproject/* && ../node_modules/.bin/wml rm all",
-    "storybook:enable": "sed -i '' 's/STORYBOOK=false/STORYBOOK=true/g' .env",
-    "storybook:disable": "sed -i '' 's/STORYBOOK=true/STORYBOOK=false/g' .env",
-    "generate-stories": "rnstl --searchDir ./src --pattern **/*.stories.js",
+    "ios": "react-native run-ios --simulator=\"iPhone X\"",
     "lint": "eslint ./src --ext .js",
-    "version": "node ../../scripts/update-apollos-version.js && git add apollos.json",
-    "postversion": "react-native-version --never-amend --never-increment-build --android android/app/build.gradle --ios ios/",
-    "prestart": "yarn generate-stories & node ./scripts/get-introspection-data.js",
-    "postinstall": "jetify && yarn pods",
-    "pods": "(cd ios && bundle install && bundle exec pod install)",
+    "postversion": "react-native-version --never-amend --android android/app/build.gradle --ios ios/",
+    "prestart": "babel-node ./scripts/get-introspection-data.js",
     "start": "react-native start",
-    "test": "TZ=UTC jest",
-    "upgrade": "npx @apollosproject/upgrade-tools upgrade"
+    "storybook": "rnstl --searchDir ./storybook ./src --pattern \"**/*.stories.js\" && storybook start -p 7007 --root ../../",
+    "test": "jest",
+    "release": "standard-version --release-as minor"
   },
   "jest": {
     "preset": "react-native",
     "collectCoverage": true,
     "transformIgnorePatterns": [
-      "node_modules/(?!((jest-)?react-native|rn-*|react-clone-referenced-element|react-navigation|@react-navigation|@apollosproject))"
+      "node_modules/(?!((jest-)?react-native|rn-*|react-clone-referenced-element|react-navigation|@apollosproject))"
     ],
     "testMatch": [
       "<rootDir>/src/**/?(*.)(test|tests).{js,jsx,mjs}"
@@ -45,112 +56,62 @@
     ],
     "setupFiles": [
       "./jest.setup.js"
-    ]
+    ],
+    "transform": {
+      ".+\\.js$": "<rootDir>/node_modules/react-native/jest/preprocessor.js"
+    }
   },
   "dependencies": {
-    "@apollo/react-hooks": "^3.1.3",
-    "@apollosproject/config": "1.5.0-beta.0",
-    "@apollosproject/react-native-airplay-btn": "0.2.0",
-    "@apollosproject/ui-analytics": "1.5.0-beta.0",
-    "@apollosproject/ui-auth": "1.5.0-beta.0",
-    "@apollosproject/ui-connected": "1.5.0-beta.0",
-    "@apollosproject/ui-fragments": "1.5.0-beta.0",
-    "@apollosproject/ui-htmlview": "1.5.0-beta.0",
-    "@apollosproject/ui-kit": "1.5.0-beta.0",
-    "@apollosproject/ui-mapview": "1.5.0-beta.0",
-    "@apollosproject/ui-media-player": "1.5.0-beta.0",
-    "@apollosproject/ui-notifications": "1.5.0-beta.0",
-    "@apollosproject/ui-onboarding": "1.5.0-beta.0",
-    "@apollosproject/ui-passes": "1.5.0-beta.0",
-    "@apollosproject/ui-prayer": "1.5.0-beta.0",
-    "@apollosproject/ui-scripture": "1.5.0-beta.0",
-    "@apollosproject/ui-storybook": "1.5.0-beta.0",
-    "@react-native-community/async-storage": "^1.5.1",
-    "@react-native-community/datetimepicker": "^2.4.0",
-    "@react-native-community/geolocation": "^2.0.2",
-    "apollo-cache-inmemory": "1.5.1",
+    "@apollosproject/ui-kit": "^0.8.0-alpha.1",
+    "apollo-cache-inmemory": "1.3.5",
     "apollo-cache-persist": "0.1.1",
-    "apollo-client": "2.6.8",
-    "apollo-link": "1.2.8",
-    "apollo-link-http": "1.5.11",
-    "apollo-link-schema": "1.1.6",
+    "apollo-client": "2.4.2",
+    "apollo-link": "1.2.3",
+    "apollo-link-context": "1.0.9",
+    "apollo-link-http": "1.5.5",
+    "apollo-link-schema": "1.1.1",
+    "apollo-link-state": "0.4.2",
     "apollo-upload-client": "9.0.0",
-    "buffer": "^5.4.3",
+    "buffer": "^5.2.1",
     "color": "3.0.0",
-    "dotenv": "^6.2.0",
+    "entities": "1.1.1",
     "events": "^3.0.0",
-    "formik": "^1.5.2",
+    "formik": "0.11.11",
     "graphql": "0.13.2",
     "graphql-tag": "2.9.2",
     "graphql-tools": "3.1.1",
+    "htmlparser2": "3.9.2",
     "lodash": "^4.17.11",
     "memoize-one": "4.0.0",
     "moment": "2.22.2",
     "node-fetch": "2.2.0",
-    "react": "16.8.6",
-    "react-apollo": "2.5.5",
-    "react-native": "0.60.5",
-    "react-native-bootsplash": "^2.0.5",
-    "react-native-config": "^0.11.7",
-    "react-native-device-info": "^4.0.1",
-    "react-native-geolocation-service": "^3.0.0",
-    "react-native-gesture-handler": "^1.3.1",
-    "react-native-google-cast": "^3.3.0",
-    "react-native-image-picker": "0.28.0",
-    "react-native-inappbrowser-reborn": "^3.0.0",
-    "react-native-linear-gradient": "^2.5.4",
-    "react-native-maps": "0.26.1",
-    "react-native-modal-datetime-picker": "8.7.1",
-    "react-native-music-control": "0.10.8",
-    "react-native-onesignal": "3.3.2",
-    "react-native-passkit-wallet": "^0.1.4",
-    "react-native-permissions": "^2.0.5",
+    "numeral": "^2.0.6",
+    "prettier": "1.14.2",
+    "querystring": "^0.2.0",
+    "react": "16.6.1",
+    "react-apollo": "2.2.4",
+    "react-native": "0.57.5",
+    "react-native-custom-tabs": "0.1.7",
+    "react-native-device-info": "0.22.5",
+    "react-native-image-picker": "0.26.10",
+    "react-native-keyboard-aware-scroll-view": "0.7.0",
+    "react-native-linear-gradient": "2.4.0",
+    "react-native-music-control": "0.7.3",
+    "react-native-onesignal": "3.2.7",
     "react-native-safari-view": "2.1.0",
-    "react-native-safe-area-context": "^0.3.6",
-    "react-native-safe-area-view": "0.13.1",
-    "react-native-screens": "^1.0.0-alpha.23",
-    "react-native-svg": "^9.4.0",
-    "react-native-video": "^5.0.0",
+    "react-native-safe-area-view": "0.11.0",
+    "react-native-screens": "1.0.0-alpha.12",
+    "react-native-splash-screen": "^3.1.1",
+    "react-native-svg": "6.5.2",
+    "react-native-video": "3.2.0",
     "react-native-video-controls": "2.2.3",
-    "react-native-webview": "^7.0.0",
-    "react-navigation": "^3.11.0",
+    "react-navigation": "2.11.2",
     "recompose": "^0.30.0",
-    "rn-fetch-blob": "^0.10.16",
-    "stream": "^0.0.2",
-    "wml": "^0.0.83",
+    "rn-placeholder": "1.2.0",
+    "stream": "0.0.2",
+    "url": "^0.11.0",
     "yup": "0.26.6"
   },
-  "devDependencies": {
-    "@apollosproject/eslint-config": "1.5.0-beta.0",
-    "babel-eslint": "10.0.1",
-    "codecov": "3.7.2",
-    "eslint": "^4.19.1",
-    "eslint-config-airbnb": "^17.0.0",
-    "eslint-config-prettier": "^2.9.0",
-    "eslint-import-resolver-babel-module": "^5.0.0-beta.0",
-    "eslint-plugin-babel": "^5.1.0",
-    "eslint-plugin-graphql": "^3.0.3",
-    "eslint-plugin-import": "^2.12.0",
-    "eslint-plugin-jest": "^21.15.2",
-    "eslint-plugin-jsx-a11y": "^6.0.3",
-    "eslint-plugin-prettier": "^2.6.0",
-    "eslint-plugin-react": "^7.10.0",
-    "eslint-plugin-react-hooks": "^4.0.2",
-    "eslint-plugin-react-native": "^3.2.1",
-    "get-dev-paths": "^0.1.0",
-    "graphql-import": "^0.7.1",
-    "jest": "^25.1.0",
-    "jetifier": "^1.6.4",
-    "metro-react-native-babel-preset": "^0.56.0",
-    "nodemon": "1.18.7",
-    "prettier": "1.14.2",
-    "prop-types": "15.6.1",
-    "react-dom": "16.6.3",
-    "react-native-storybook-loader": "1.8.0",
-    "react-native-version": "2.6.2",
-    "react-test-renderer": "16.8.6",
-    "waait": "1.0.2"
-  },
   "rnpm": {
     "assets": [
       "assets/fonts"
diff --git a/apolloschurchapp/rn-cli.config.js b/apolloschurchapp/rn-cli.config.js
new file mode 100644
index 0000000..4235fa0
--- /dev/null
+++ b/apolloschurchapp/rn-cli.config.js
@@ -0,0 +1,35 @@
+const path = require('path');
+const blacklist = require('metro-config/src/defaults/blacklist');
+
+const localDeps = [path.resolve('..', 'apollos-ui-kit')];
+
+module.exports = {
+  resolver: {
+    extraNodeModules: {
+      'react-native': path.resolve('.', 'node_modules/react-native'),
+      'react-native-linear-gradient': path.resolve(
+        '.',
+        'node_modules/react-native-linear-gradient'
+      ),
+    },
+    blacklistRE: blacklist([
+      ...localDeps.map(
+        (depPath) => new RegExp(`${depPath}/node_modules/react-native/.*`)
+      ),
+      ...localDeps.map(
+        (depPath) =>
+          new RegExp(`${depPath}/node_modules/react-native-linear-gradient/.*`)
+      ),
+      new RegExp(
+        `${path.resolve('..', '..', 'node_modules', 'react-native')}/.*`
+      ),
+      new RegExp(
+        `${path.resolve('..', '..', 'node_modules')}/.*/react-native/.*`
+      ),
+      new RegExp(
+        `${path.resolve('../../node_modules/react-native-linear-gradient')}/.*`
+      ),
+    ]),
+  },
+  watchFolders: [...localDeps, path.resolve('..', '..', 'node_modules')],
+};
diff --git a/apolloschurchapp/scripts/get-introspection-data.js b/apolloschurchapp/scripts/get-introspection-data.js
index 80ae562..f2c7e28 100755
--- a/apolloschurchapp/scripts/get-introspection-data.js
+++ b/apolloschurchapp/scripts/get-introspection-data.js
@@ -1,7 +1,7 @@
-const fs = require('fs');
-const Path = require('path');
-require('dotenv/config');
-const fetch = require('node-fetch');
+import fs from 'fs';
+import Path from 'path';
+import { APP_DATA_URL } from 'react-native-dotenv';
+import fetch from 'node-fetch';
 
 const attempts = 0;
 const maxAttempts = 3;
@@ -9,7 +9,7 @@ const timeBetweenAttempts = 5 * 1000;
 
 const getIntrospectionData = async () => {
   try {
-    const query = await fetch(process.env.APP_DATA_URL, {
+    const query = await fetch(APP_DATA_URL, {
       method: 'POST',
       headers: { 'Content-Type': 'application/json' },
       body: JSON.stringify({
diff --git a/apolloschurchapp/scripts/link-packages.js b/apolloschurchapp/scripts/link-packages.js
deleted file mode 100644
index 3b20a24..0000000
--- a/apolloschurchapp/scripts/link-packages.js
+++ /dev/null
@@ -1,51 +0,0 @@
-const fs = require('fs');
-const { execSync } = require('child_process');
-const chalk = require('chalk');
-
-let apollosAppsLocation = null;
-const apollosAppsLocationFromEnv = fs
-  .readFileSync(`${__dirname}/../.env`, 'utf8')
-  .match(/APOLLOS_APPS_LOCATION=(.*)/);
-
-if (apollosAppsLocationFromEnv && apollosAppsLocationFromEnv.length >= 2) {
-  apollosAppsLocation = apollosAppsLocationFromEnv[1];
-}
-
-if (!apollosAppsLocation) {
-  console.error(
-    chalk.red(
-      'In order to link the Apollos React Native packages to your local dev environment'
-    )
-  );
-  console.error(
-    chalk.red(
-      'you must configure the APOLLOS_APPS_LOCATION variable in your .env '
-    )
-  );
-  console.error(
-    chalk.red('to point at your local copy of the apollos-apps repo')
-  );
-  process.exit(1);
-}
-
-const packageJson = JSON.parse(fs.readFileSync(`${__dirname}/../package.json`));
-const dependencies = [
-  ...Object.keys(packageJson.dependencies),
-  ...Object.keys(packageJson.devDependencies),
-].filter((d) => d.includes('@apollosproject'));
-
-dependencies.forEach((dep) => {
-  const folderName = dep.split('@apollosproject/')[1];
-
-  if (
-    fs.existsSync(
-      `${apollosAppsLocation}/packages/apollos-${folderName}/package.json`
-    )
-  ) {
-    const output = execSync(
-      `printf 'y\n' | yarn wml add ${apollosAppsLocation}/packages/apollos-${folderName} ${__dirname}/../node_modules/${dep}`,
-      { encoding: 'utf8' }
-    );
-    console.log(output);
-  }
-});
diff --git a/apolloschurchapp/src/LandingScreen.js b/apolloschurchapp/src/LandingScreen.js
deleted file mode 100644
index 89e10ad..0000000
--- a/apolloschurchapp/src/LandingScreen.js
+++ /dev/null
@@ -1,27 +0,0 @@
-import React from 'react';
-import { StyleSheet } from 'react-native';
-import { styled, ConnectedImage } from '@apollosproject/ui-kit';
-
-import ApollosLandingScreen from './ui/LandingScreen';
-
-const FullScreenImage = styled({
-  resizeMode: 'cover',
-  ...StyleSheet.absoluteFill,
-})(ConnectedImage);
-
-const LandingScreen = ({ navigation }) => (
-  <ApollosLandingScreen
-    onPressPrimary={() => navigation.push('Auth')}
-    textColor={'white'}
-    BackgroundComponent={
-      <FullScreenImage source={'https://picsum.photos/375/812/?random'} />
-    }
-    primaryNavText={"Let's go!"}
-  />
-);
-
-LandingScreen.navigationOptions = {
-  header: null,
-};
-
-export default LandingScreen;
diff --git a/apolloschurchapp/src/NavigationService.js b/apolloschurchapp/src/NavigationService.js
new file mode 100644
index 0000000..a5d758b
--- /dev/null
+++ b/apolloschurchapp/src/NavigationService.js
@@ -0,0 +1,23 @@
+import { NavigationActions } from 'react-navigation';
+
+let _navigator;
+
+function setTopLevelNavigator(navigatorRef) {
+  _navigator = navigatorRef;
+}
+
+function navigate(routeName, params) {
+  _navigator.dispatch(
+    NavigationActions.navigate({
+      routeName,
+      params,
+    })
+  );
+}
+
+// add other navigation functions that you need and export them
+
+export default {
+  navigate,
+  setTopLevelNavigator,
+};
diff --git a/apolloschurchapp/src/Notifications.js b/apolloschurchapp/src/Notifications.js
new file mode 100644
index 0000000..d37e22f
--- /dev/null
+++ b/apolloschurchapp/src/Notifications.js
@@ -0,0 +1,69 @@
+import querystring from 'querystring';
+import URL from 'url';
+import { Component } from 'react';
+import { Linking } from 'react-native';
+import OneSignal from 'react-native-onesignal';
+import NavigationService from './NavigationService';
+import { ONE_SIGNAL_KEY } from './config';
+
+export default class NotificationsInit extends Component {
+  static navigationOptions = {};
+
+  componentWillMount() {
+    OneSignal.init(ONE_SIGNAL_KEY, {
+      kOSSettingsKeyAutoPrompt: true,
+    });
+    OneSignal.addEventListener('received', this.onReceived);
+    OneSignal.addEventListener('opened', this.onOpened);
+    OneSignal.addEventListener('ids', this.onIds);
+  }
+
+  componentDidMount() {
+    Linking.getInitialURL().then((url) => {
+      this.navigate(url);
+    });
+    Linking.addEventListener('url', ({ url }) => this.navigate(url));
+  }
+
+  componentWillUnmount() {
+    Linking.removeEventListener('url');
+    OneSignal.removeEventListener('received');
+    OneSignal.removeEventListener('opened');
+    OneSignal.removeEventListener('ids');
+  }
+
+  navigate = (rawUrl) => {
+    if (!rawUrl) return;
+    const url = URL.parse(rawUrl);
+    const route = url.pathname.substring(1);
+    const args = querystring.parse(url.query);
+    NavigationService.navigate(route, args);
+  };
+
+  onReceived = (notification) => {
+    console.log('Notification received: ', notification);
+  };
+
+  onOpened = (openResult) => {
+    console.log('Message: ', openResult.notification.payload.body);
+    console.log('Data: ', openResult.notification.payload.additionalData);
+    console.log('isActive: ', openResult.notification.isAppInFocus);
+    console.log('openResult: ', openResult);
+    // URL looks like this
+    // apolloschurchapp://AppStackNavigator/Connect
+    // apolloschurchapp://SomethingElse/Connect
+    // apolloschurchapp://SomethingElse/ContentSingle?itemId=SomeItemId:blablalba
+    const { url } = openResult.notification.payload.additionalData;
+    if (url) {
+      this.navigate(url);
+    }
+  };
+
+  onIds = (device) => {
+    console.log('Device info: ', device);
+  };
+
+  render() {
+    return null;
+  }
+}
diff --git a/apolloschurchapp/src/Providers.js b/apolloschurchapp/src/Providers.js
index 67b6f44..da98513 100644
--- a/apolloschurchapp/src/Providers.js
+++ b/apolloschurchapp/src/Providers.js
@@ -1,46 +1,5 @@
-import React from 'react';
-import ApollosConfig from '@apollosproject/config';
-import { Providers, NavigationService } from '@apollosproject/ui-kit';
-import { AuthProvider } from '@apollosproject/ui-auth';
-import { AnalyticsProvider } from '@apollosproject/ui-analytics';
-import { MediaPlayerProvider } from '@apollosproject/ui-media-player';
-import { NotificationsProvider } from '@apollosproject/ui-notifications';
-import { LiveProvider } from '@apollosproject/ui-connected';
-import { checkOnboardingStatusAndNavigate } from '@apollosproject/ui-onboarding';
+import { nest } from 'recompose';
+import { Providers } from '@apollosproject/ui-kit';
+import ClientProvider from './client';
 
-import ClientProvider, { client } from './client';
-import customTheme, { customIcons } from './theme';
-
-const AppProviders = (props) => (
-  <ClientProvider {...props}>
-    <NotificationsProvider
-      oneSignalKey={ApollosConfig.ONE_SIGNAL_KEY}
-      navigate={NavigationService.navigate}
-    >
-      <AuthProvider
-        navigateToAuth={() => NavigationService.navigate('Auth')}
-        navigate={NavigationService.navigate}
-        closeAuth={() =>
-          checkOnboardingStatusAndNavigate({
-            client,
-            navigation: NavigationService,
-          })
-        }
-      >
-        <MediaPlayerProvider>
-          <AnalyticsProvider>
-            <LiveProvider>
-              <Providers
-                themeInput={customTheme}
-                iconInput={customIcons}
-                {...props}
-              />
-            </LiveProvider>
-          </AnalyticsProvider>
-        </MediaPlayerProvider>
-      </AuthProvider>
-    </NotificationsProvider>
-  </ClientProvider>
-);
-
-export default AppProviders;
+export default nest(ClientProvider, Providers);
diff --git a/apolloschurchapp/src/__mocks__/config.js b/apolloschurchapp/src/__mocks__/config.js
new file mode 100644
index 0000000..b1162fc
--- /dev/null
+++ b/apolloschurchapp/src/__mocks__/config.js
@@ -0,0 +1,2 @@
+/* eslint-disable import/prefer-default-export */
+export const ONE_SIGNAL_KEY = 'doesntmatter';
diff --git a/apolloschurchapp/src/analytics/TrackEventWhenLoaded.js b/apolloschurchapp/src/analytics/TrackEventWhenLoaded.js
new file mode 100644
index 0000000..eb7ed61
--- /dev/null
+++ b/apolloschurchapp/src/analytics/TrackEventWhenLoaded.js
@@ -0,0 +1,38 @@
+import { PureComponent } from 'react';
+import PropTypes from 'prop-types';
+import { track } from './index';
+
+export default class TrackEventWhenLoaded extends PureComponent {
+  componentDidMount() {
+    if (this.props.loaded) {
+      this.track();
+    }
+  }
+
+  componentDidUpdate(prevProps) {
+    if (!prevProps.loaded && this.props.loaded) {
+      this.track();
+    }
+  }
+
+  get trackClient() {
+    return this.props.track || track;
+  }
+
+  track() {
+    const { eventName, properties } = this.props;
+    return this.trackClient({ eventName, properties });
+  }
+
+  render() {
+    return null;
+  }
+}
+
+TrackEventWhenLoaded.propTypes = {
+  loaded: PropTypes.bool.isRequired,
+  eventName: PropTypes.string.isRequired,
+  // eslint-disable-next-line react/forbid-prop-types
+  properties: PropTypes.any,
+  track: PropTypes.func,
+};
diff --git a/apolloschurchapp/src/analytics/TrackEventWhenLoaded.tests.js b/apolloschurchapp/src/analytics/TrackEventWhenLoaded.tests.js
new file mode 100644
index 0000000..fcf66ed
--- /dev/null
+++ b/apolloschurchapp/src/analytics/TrackEventWhenLoaded.tests.js
@@ -0,0 +1,46 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import TrackEventWhenLoaded from './TrackEventWhenLoaded';
+
+const trackMock = jest.fn();
+
+describe('The TrackEventWhenLoaded component', () => {
+  afterEach(() => {
+    trackMock.mockClear();
+  });
+  it('should track an event if mounted with loaded=true', () => {
+    renderer.create(
+      <TrackEventWhenLoaded
+        loaded
+        eventName="Track Something"
+        properties={{ ThingId: '1234' }}
+        track={trackMock}
+      />
+    );
+    expect(trackMock.mock.calls).toMatchSnapshot();
+  });
+
+  it('should track an event if mounted with loaded=false and then switching to true', () => {
+    const tree = renderer.create(
+      <TrackEventWhenLoaded
+        loaded={false}
+        eventName="Track Something"
+        properties={{ ThingId: '1234' }}
+        track={trackMock}
+        key="tracker"
+      />
+    );
+    expect(trackMock.mock.calls).toMatchSnapshot();
+    tree.update(
+      <TrackEventWhenLoaded
+        loaded
+        eventName="Track Something"
+        properties={{ ThingId: '1234' }}
+        track={trackMock}
+        key="tracker"
+      />
+    );
+    expect(trackMock.mock.calls).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/analytics/index.js b/apolloschurchapp/src/analytics/index.js
new file mode 100644
index 0000000..cd7dbba
--- /dev/null
+++ b/apolloschurchapp/src/analytics/index.js
@@ -0,0 +1,79 @@
+import gql from 'graphql-tag';
+import DeviceInfo from 'react-native-device-info';
+import { Platform } from 'react-native';
+
+import { client } from '../client';
+
+const anonymousId = DeviceInfo.getUniqueID();
+
+const deviceInfo = {
+  platform: Platform.OS === 'ios' ? 'iOS' : 'Android',
+  deviceId: anonymousId,
+  deviceModel: DeviceInfo.getModel(),
+  osVersion: DeviceInfo.getSystemVersion(),
+  appVersion: DeviceInfo.getVersion(),
+};
+
+const trackMutation = gql`
+  mutation track($input: AnalyticsTrackInput!) {
+    trackEvent(input: $input) {
+      success
+    }
+  }
+`;
+
+const identifyMutation = gql`
+  mutation identify($input: AnalyticsIdentifyInput!) {
+    identifySelf(input: $input) {
+      success
+    }
+  }
+`;
+
+const propertiesToGqlInput = (props = []) =>
+  Object.keys(props).map((key) => ({
+    field: key,
+    value: props[key],
+  }));
+
+export const track = ({ eventName, properties }) =>
+  client.mutate({
+    mutation: trackMutation,
+    variables: {
+      input: {
+        anonymousId,
+        deviceInfo,
+        eventName,
+        properties: propertiesToGqlInput(properties),
+      },
+    },
+  });
+
+export const identify = () =>
+  client.mutate({
+    mutation: identifyMutation,
+    variables: {
+      input: {
+        anonymousId,
+        deviceInfo,
+      },
+    },
+  });
+
+export const events = {
+  LikeContent: 'Like Content',
+  UnlikeContent: 'Unlike Content',
+  ViewContent: 'View Content',
+  ShareContent: 'Share Content',
+  UserLogin: 'User Login',
+  UserSignup: 'User Signup',
+  UserLogout: 'UserLogout',
+  UserForgotPassword: 'User Forgot Password',
+  UserPlayedMedia: 'User Played Media',
+};
+
+export default {
+  track,
+  identify,
+  events,
+};
diff --git a/apolloschurchapp/src/auth/LoginButton/LoginButton.tests.js b/apolloschurchapp/src/auth/LoginButton/LoginButton.tests.js
new file mode 100644
index 0000000..64f2b62
--- /dev/null
+++ b/apolloschurchapp/src/auth/LoginButton/LoginButton.tests.js
@@ -0,0 +1,71 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+import wait from 'waait';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import getLoginState from '../getLoginState';
+
+import LoginButton from '.';
+
+describe('LoginButton component', () => {
+  it('renders nothing when logged in', async () => {
+    const mock = {
+      request: {
+        query: getLoginState,
+      },
+      result: {
+        data: { isLoggedIn: true },
+      },
+    };
+
+    const navigation = { navigate: jest.fn() };
+    const tree = renderer.create(
+      <Providers mocks={[mock]}>
+        <LoginButton navigation={navigation} />
+      </Providers>
+    );
+    await wait(0); // wait for response from graphql
+    expect(tree).toMatchSnapshot();
+  });
+
+  it('renders a LoginButton when logged out', async () => {
+    const mock = {
+      request: {
+        query: getLoginState,
+      },
+      result: {
+        data: { isLoggedIn: null },
+      },
+    };
+
+    const navigation = { navigate: jest.fn() };
+    const tree = renderer.create(
+      <Providers mocks={[mock]}>
+        <LoginButton navigation={navigation} />
+      </Providers>
+    );
+    await wait(0); // wait for response from graphql
+    expect(tree).toMatchSnapshot();
+  });
+
+  it('renders a LoginButton that is loading', async () => {
+    const mock = {
+      request: {
+        query: getLoginState,
+      },
+      result: {
+        data: { isLoggedIn: null },
+      },
+    };
+
+    const navigation = { navigate: jest.fn() };
+    const tree = renderer.create(
+      <Providers mocks={[mock]}>
+        <LoginButton navigation={navigation} loading />
+      </Providers>
+    );
+    await wait(0); // wait for response from graphql
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/auth/LoginButton/index.js b/apolloschurchapp/src/auth/LoginButton/index.js
new file mode 100644
index 0000000..66c7753
--- /dev/null
+++ b/apolloschurchapp/src/auth/LoginButton/index.js
@@ -0,0 +1,40 @@
+import React, { PureComponent } from 'react';
+import { withNavigation } from 'react-navigation';
+import { Query } from 'react-apollo';
+import PropTypes from 'prop-types';
+
+import { Button } from '@apollosproject/ui-kit';
+
+import getLoginState from '../getLoginState';
+
+class LoginButton extends PureComponent {
+  static propTypes = {
+    navigation: PropTypes.shape({
+      push: PropTypes.func,
+    }),
+  };
+
+  handleLoginPress = () => this.props.navigation.push('Auth');
+
+  render() {
+    const { navigation, ...otherProps } = this.props;
+    return (
+      <Query query={getLoginState}>
+        {({ data }) => {
+          const { isLoggedIn, loading } = data;
+          if (isLoggedIn) return null;
+          return (
+            <Button
+              onPress={this.handleLoginPress}
+              title="Get Connected"
+              loading={loading}
+              {...otherProps}
+            />
+          );
+        }}
+      </Query>
+    );
+  }
+}
+
+export default withNavigation(LoginButton);
diff --git a/apolloschurchapp/src/auth/ProtectedAction.js b/apolloschurchapp/src/auth/ProtectedAction.js
new file mode 100644
index 0000000..5cec0fd
--- /dev/null
+++ b/apolloschurchapp/src/auth/ProtectedAction.js
@@ -0,0 +1,67 @@
+import React, { PureComponent } from 'react';
+import { Query } from 'react-apollo';
+import PropTypes from 'prop-types';
+import { withNavigation } from 'react-navigation';
+
+import getLoginState from './getLoginState';
+
+class ProtectedAction extends PureComponent {
+  queuedActionsToTriggerOnLogin = [];
+
+  static propTypes = {
+    children: PropTypes.func,
+    navigation: PropTypes.shape({
+      push: PropTypes.func,
+    }),
+    loading: PropTypes.bool,
+    isLoggedIn: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),
+    action: PropTypes.func.isRequired,
+  };
+
+  componentDidUpdate(oldProps) {
+    if (!oldProps.isLoggedIn && this.props.isLoggedIn) {
+      this.handleLogin();
+    }
+
+    if (
+      oldProps.loading &&
+      !this.props.loading &&
+      !this.props.isLoggedIn &&
+      this.queuedActionsToTriggerOnLogin.length
+    ) {
+      this.triggerLogin();
+    }
+  }
+
+  handleLogin = () => {
+    this.queuedActionsToTriggerOnLogin.forEach((action) => action());
+    this.queuedActionsToTriggerOnLogin = [];
+  };
+
+  triggerLogin = () => this.props.navigation.push('Auth');
+
+  protectedActionHandler = (action) => (...args) => {
+    if (this.props.isLoggedIn) {
+      action(...args);
+    } else {
+      this.queuedActionsToTriggerOnLogin.push(action.bind(this, ...args));
+      if (!this.props.loading) this.triggerLogin();
+    }
+  };
+
+  render() {
+    return typeof this.props.children === 'function'
+      ? this.props.children(this.protectedActionHandler(this.props.action))
+      : this.props.children;
+  }
+}
+
+const ProtectedActionWithQuery = (props) => (
+  <Query query={getLoginState}>
+    {({ data: { isLoggedIn = false } = {}, loading }) => (
+      <ProtectedAction isLoggedIn={isLoggedIn} loading={loading} {...props} />
+    )}
+  </Query>
+);
+
+export default withNavigation(ProtectedActionWithQuery);
diff --git a/apolloschurchapp/src/auth/ProtectedTouchable.js b/apolloschurchapp/src/auth/ProtectedTouchable.js
new file mode 100644
index 0000000..82bb73b
--- /dev/null
+++ b/apolloschurchapp/src/auth/ProtectedTouchable.js
@@ -0,0 +1,24 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import { Touchable } from '@apollosproject/ui-kit';
+import ProtectedAction from './ProtectedAction';
+
+const ProtectedTouchable = ({
+  onPress,
+  children,
+  TouchableComponent = Touchable,
+}) => (
+  <ProtectedAction action={onPress}>
+    {(action) => (
+      <TouchableComponent onPress={action}>{children}</TouchableComponent>
+    )}
+  </ProtectedAction>
+);
+
+ProtectedTouchable.propTypes = {
+  onPress: PropTypes.func.isRequired,
+  children: PropTypes.node.isRequired,
+  TouchableComponent: PropTypes.func,
+};
+
+export default ProtectedTouchable;
diff --git a/apolloschurchapp/src/client/getCacheLoaded.js b/apolloschurchapp/src/auth/getLoginState.js
similarity index 74%
rename from apolloschurchapp/src/client/getCacheLoaded.js
rename to apolloschurchapp/src/auth/getLoginState.js
index d50b351..97d3e8d 100644
--- a/apolloschurchapp/src/client/getCacheLoaded.js
+++ b/apolloschurchapp/src/auth/getLoginState.js
@@ -2,6 +2,6 @@ import gql from 'graphql-tag';
 
 export default gql`
   query {
-    cacheLoaded @client
+    isLoggedIn @client
   }
 `;
diff --git a/apolloschurchapp/src/auth/handleLogin.js b/apolloschurchapp/src/auth/handleLogin.js
new file mode 100644
index 0000000..417dde0
--- /dev/null
+++ b/apolloschurchapp/src/auth/handleLogin.js
@@ -0,0 +1,7 @@
+import gql from 'graphql-tag';
+
+export default gql`
+  mutation handleLogin($authToken: String!) {
+    handleLogin(authToken: $authToken) @client
+  }
+`;
diff --git a/apolloschurchapp/src/auth/index.js b/apolloschurchapp/src/auth/index.js
new file mode 100644
index 0000000..b8f16a3
--- /dev/null
+++ b/apolloschurchapp/src/auth/index.js
@@ -0,0 +1,98 @@
+import React, { PureComponent } from 'react';
+import PropTypes from 'prop-types';
+import { View, SafeAreaView } from 'react-native';
+
+import {
+  FlexedView,
+  TabView,
+  TabSceneMap as SceneMap,
+  H1,
+  H5,
+  styled,
+  Icon,
+  ButtonLink,
+  withTheme,
+} from '@apollosproject/ui-kit';
+
+import { track } from 'apolloschurchapp/src/analytics';
+
+import LoginForm from './login';
+import SignUpForm from './signup';
+
+export LoginButton from './LoginButton';
+export ProtectedAction from './ProtectedAction';
+
+const Title = styled(({ theme }) => ({ color: theme.colors.primary }))(H1);
+
+const BrandIcon = withTheme(({ theme }) => ({
+  name: 'brand-icon',
+  size: theme.sizing.baseUnit * 2.25,
+  marginVertical: theme.sizing.baseUnit,
+  fill: theme.colors.primary,
+}))(Icon);
+
+const HeaderContainer = styled(({ theme }) => ({
+  backgroundColor: theme.colors.background.paper,
+}))(SafeAreaView);
+
+const Header = styled(({ theme }) => ({
+  padding: theme.sizing.baseUnit,
+  paddingBottom: theme.sizing.baseUnit * 1.5,
+}))(View);
+
+const CancelButton = styled(({ theme }) => ({
+  alignSelf: 'flex-end',
+  paddingTop: theme.sizing.baseUnit * 0.75,
+  paddingRight: theme.sizing.baseUnit,
+}))(ButtonLink);
+
+class Auth extends PureComponent {
+  static navigationOptions = {
+    header: null,
+  };
+
+  tabRoutes = [
+    { title: 'Sign In', key: 'login' },
+    { title: 'Register', key: 'signup' },
+  ];
+
+  static propTypes = {
+    navigation: PropTypes.shape({
+      goBack: PropTypes.func,
+    }),
+  };
+
+  handleFinish = () => {
+    // trigger the auth modal to close
+    track({ eventName: 'UserLogin' });
+    this.props.navigation.goBack();
+  };
+
+  renderLogin = () => <LoginForm onLogin={this.handleFinish} />;
+
+  renderSignup = () => <SignUpForm onSignup={this.handleFinish} />;
+
+  render() {
+    return (
+      <FlexedView>
+        <HeaderContainer>
+          <CancelButton onPress={this.handleFinish}>Cancel</CancelButton>
+          <Header>
+            <BrandIcon />
+            <Title>Welcome!</Title>
+            <H5>Please sign in to continue</H5>
+          </Header>
+        </HeaderContainer>
+        <TabView
+          routes={this.tabRoutes}
+          renderScene={SceneMap({
+            login: this.renderLogin,
+            signup: this.renderSignup,
+          })}
+        />
+      </FlexedView>
+    );
+  }
+}
+
+export default Auth;
diff --git a/apolloschurchapp/src/auth/login/Form.js b/apolloschurchapp/src/auth/login/Form.js
new file mode 100644
index 0000000..7551d9e
--- /dev/null
+++ b/apolloschurchapp/src/auth/login/Form.js
@@ -0,0 +1,107 @@
+import React, { PureComponent } from 'react';
+import { View, SafeAreaView } from 'react-native';
+import PropTypes from 'prop-types';
+import { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';
+
+import { track, events } from 'apolloschurchapp/src/analytics';
+import { WebBrowserConsumer } from 'apolloschurchapp/src/ui/WebBrowser';
+import {
+  FlexedView,
+  PaddedView,
+  TextInput,
+  Button,
+  ButtonLink,
+  styled,
+} from '@apollosproject/ui-kit';
+
+const BottomSafeAreaView = styled({
+  position: 'absolute',
+  bottom: 0,
+  left: 0,
+  right: 0,
+})(SafeAreaView);
+
+class Form extends PureComponent {
+  static propTypes = {
+    setFieldValue: PropTypes.func,
+    touched: PropTypes.shape({}),
+    errors: PropTypes.shape({}),
+    values: PropTypes.shape({}),
+    handleSubmit: PropTypes.func,
+    isSubmitting: PropTypes.bool,
+    isValid: PropTypes.bool,
+  };
+
+  render() {
+    const {
+      values,
+      touched,
+      errors,
+      handleSubmit,
+      setFieldValue,
+      isValid,
+      isSubmitting,
+    } = this.props;
+    return (
+      <FlexedView>
+        <KeyboardAwareScrollView>
+          <PaddedView>
+            <View>
+              <TextInput
+                label="Email"
+                type="email"
+                value={values.email}
+                error={touched.email && errors.email}
+                onChangeText={(text) => setFieldValue('email', text)}
+                onSubmitEditing={() => this.passwordInput.focus()}
+                returnKeyType="next"
+                textContentType="username"
+                enablesReturnKeyAutomatically
+              />
+              <TextInput
+                label="Password"
+                type="password"
+                value={values.password}
+                error={touched.password && errors.password}
+                onChangeText={(text) => setFieldValue('password', text)}
+                onSubmitEditing={handleSubmit}
+                returnKeyType="go"
+                textContentType="password"
+                enablesReturnKeyAutomatically
+                inputRef={(r) => {
+                  this.passwordInput = r;
+                }}
+              />
+              <WebBrowserConsumer>
+                {(openUrl) => (
+                  <ButtonLink
+                    onPress={() => {
+                      track({ eventName: events.UserForgotPassword });
+                      return openUrl(
+                        'https://apollosrock.newspring.cc/page/56/'
+                      );
+                    }}
+                  >
+                    Forgot your password?
+                  </ButtonLink>
+                )}
+              </WebBrowserConsumer>
+            </View>
+          </PaddedView>
+        </KeyboardAwareScrollView>
+        <BottomSafeAreaView>
+          <PaddedView vertical={false}>
+            <Button
+              onPress={handleSubmit}
+              title="Sign in"
+              disabled={!isValid}
+              loading={isSubmitting}
+            />
+          </PaddedView>
+        </BottomSafeAreaView>
+      </FlexedView>
+    );
+  }
+}
+
+export default Form;
diff --git a/apolloschurchapp/src/auth/login/Form.stories.js b/apolloschurchapp/src/auth/login/Form.stories.js
new file mode 100644
index 0000000..54cc3f8
--- /dev/null
+++ b/apolloschurchapp/src/auth/login/Form.stories.js
@@ -0,0 +1,12 @@
+import React from 'react';
+import { storiesOf } from '@storybook/react-native';
+
+import LoginForm from './Form';
+
+storiesOf('Auth/LoginForm', module).add('Example', () => (
+  <LoginForm
+    values={{ email: '', password: '' }}
+    touched={{ email: false, password: false }}
+    errors={{ email: null, password: null }}
+  />
+));
diff --git a/apolloschurchapp/src/auth/login/Form.tests.js b/apolloschurchapp/src/auth/login/Form.tests.js
new file mode 100644
index 0000000..0e352e3
--- /dev/null
+++ b/apolloschurchapp/src/auth/login/Form.tests.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import LoginForm from './Form';
+
+describe('The LoginForm component', () => {
+  it('should render', () => {
+    const tree = renderer.create(
+      <Providers>
+        <LoginForm
+          values={{ email: '', password: '' }}
+          touched={{ email: false, password: false }}
+          errors={{ email: null, password: null }}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/auth/login/authenticate.js b/apolloschurchapp/src/auth/login/authenticate.js
new file mode 100644
index 0000000..94d4e74
--- /dev/null
+++ b/apolloschurchapp/src/auth/login/authenticate.js
@@ -0,0 +1,9 @@
+import gql from 'graphql-tag';
+
+export default gql`
+  mutation authenticate($email: String!, $password: String!) {
+    authenticate(identity: $email, password: $password) {
+      token
+    }
+  }
+`;
diff --git a/apolloschurchapp/src/auth/login/index.js b/apolloschurchapp/src/auth/login/index.js
new file mode 100644
index 0000000..1546d60
--- /dev/null
+++ b/apolloschurchapp/src/auth/login/index.js
@@ -0,0 +1,66 @@
+import React from 'react';
+import { Mutation } from 'react-apollo';
+import { Formik } from 'formik';
+import * as Yup from 'yup';
+import PropTypes from 'prop-types';
+
+import handleLogin from '../handleLogin';
+import { client } from '../../client'; //eslint-disable-line
+import authenticateMutation from './authenticate';
+import LoginForm from './Form';
+
+const Login = ({ onLogin }) => (
+  <Mutation
+    mutation={authenticateMutation}
+    update={(cache, { data: { authenticate } }) => {
+      client.mutate({
+        mutation: handleLogin,
+        variables: {
+          authToken: authenticate.token,
+        },
+      });
+    }}
+  >
+    {(authenticate) => (
+      <Formik
+        validationSchema={Yup.object().shape({
+          email: Yup.string()
+            .email('Invalid email address')
+            .required('Email is required!'),
+          password: Yup.string().required('Password is required!'),
+        })}
+        onSubmit={async (variables, { setSubmitting, setFieldError }) => {
+          try {
+            await authenticate({ variables });
+            if (onLogin) onLogin();
+          } catch (e) {
+            const { graphQLErrors } = e;
+            if (
+              graphQLErrors.length &&
+              graphQLErrors.find(
+                ({ extensions }) => extensions.code === 'UNAUTHENTICATED'
+              )
+            ) {
+              setFieldError('email', true);
+              setFieldError('password', 'Your email or password is incorrect.');
+            } else {
+              setFieldError(
+                'password',
+                'Unknown error. Please try again later.'
+              );
+            }
+          }
+          setSubmitting(false);
+        }}
+      >
+        {(formikBag) => <LoginForm {...formikBag} />}
+      </Formik>
+    )}
+  </Mutation>
+);
+
+Login.propTypes = {
+  onLogin: PropTypes.func,
+};
+
+export default Login;
diff --git a/apolloschurchapp/src/client/markCacheLoaded.js b/apolloschurchapp/src/auth/logout.js
similarity index 50%
rename from apolloschurchapp/src/client/markCacheLoaded.js
rename to apolloschurchapp/src/auth/logout.js
index 773a809..8dbff04 100644
--- a/apolloschurchapp/src/client/markCacheLoaded.js
+++ b/apolloschurchapp/src/auth/logout.js
@@ -1,7 +1,7 @@
 import gql from 'graphql-tag';
 
 export default gql`
-  mutation markCacheLoaded {
-    cacheMarkLoaded @client
+  mutation {
+    logout @client
   }
 `;
diff --git a/apolloschurchapp/src/auth/signup/Form.js b/apolloschurchapp/src/auth/signup/Form.js
new file mode 100644
index 0000000..640342e
--- /dev/null
+++ b/apolloschurchapp/src/auth/signup/Form.js
@@ -0,0 +1,90 @@
+import React, { PureComponent } from 'react';
+import { View, SafeAreaView } from 'react-native';
+import PropTypes from 'prop-types';
+import { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';
+
+import {
+  FlexedView,
+  PaddedView,
+  TextInput,
+  Button,
+  styled,
+} from '@apollosproject/ui-kit';
+
+const BottomSafeAreaView = styled({
+  position: 'absolute',
+  bottom: 0,
+  left: 0,
+  right: 0,
+})(SafeAreaView);
+
+class Form extends PureComponent {
+  static propTypes = {
+    setFieldValue: PropTypes.func,
+    touched: PropTypes.shape({}),
+    errors: PropTypes.shape({}),
+    values: PropTypes.shape({}),
+    handleSubmit: PropTypes.func,
+    isSubmitting: PropTypes.bool,
+    isValid: PropTypes.bool,
+  };
+
+  render() {
+    const {
+      values,
+      touched,
+      errors,
+      handleSubmit,
+      setFieldValue,
+      isValid,
+      isSubmitting,
+    } = this.props;
+    return (
+      <FlexedView>
+        <KeyboardAwareScrollView>
+          <PaddedView>
+            <View>
+              <TextInput
+                label="Email"
+                type="email"
+                value={values.email}
+                error={touched.email && errors.email}
+                onChangeText={(text) => setFieldValue('email', text)}
+                onSubmitEditing={() => this.passwordInput.focus()}
+                returnKeyType="next"
+                textContentType="username"
+                enablesReturnKeyAutomatically
+              />
+              <TextInput
+                label="Password"
+                type="password"
+                value={values.password}
+                error={touched.password && errors.password}
+                onChangeText={(text) => setFieldValue('password', text)}
+                onSubmitEditing={handleSubmit}
+                returnKeyType="go"
+                textContentType="password"
+                enablesReturnKeyAutomatically
+                inputRef={(r) => {
+                  this.passwordInput = r;
+                }}
+              />
+            </View>
+          </PaddedView>
+        </KeyboardAwareScrollView>
+        <BottomSafeAreaView>
+          <PaddedView vertical={false}>
+            <Button
+              onPress={handleSubmit}
+              title="Register"
+              disabled={!isValid}
+              loading={isSubmitting}
+            />
+          </PaddedView>
+        </BottomSafeAreaView>
+      </FlexedView>
+    );
+  }
+}
+
+export default Form;
diff --git a/apolloschurchapp/src/auth/signup/Form.stories.js b/apolloschurchapp/src/auth/signup/Form.stories.js
new file mode 100644
index 0000000..da0e764
--- /dev/null
+++ b/apolloschurchapp/src/auth/signup/Form.stories.js
@@ -0,0 +1,12 @@
+import React from 'react';
+import { storiesOf } from '@storybook/react-native';
+
+import LoginForm from './Form';
+
+storiesOf('Auth/SignupForm', module).add('Example', () => (
+  <LoginForm
+    values={{ email: '', password: '' }}
+    touched={{ email: false, password: false }}
+    errors={{ email: null, password: null }}
+  />
+));
diff --git a/apolloschurchapp/src/auth/signup/Form.tests.js b/apolloschurchapp/src/auth/signup/Form.tests.js
new file mode 100644
index 0000000..5d9601f
--- /dev/null
+++ b/apolloschurchapp/src/auth/signup/Form.tests.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import LoginForm from './Form';
+
+describe('The SignupForm component', () => {
+  it('should render', () => {
+    const tree = renderer.create(
+      <Providers>
+        <LoginForm
+          values={{ email: '', password: '' }}
+          touched={{ email: false, password: false }}
+          errors={{ email: null, password: null }}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/auth/signup/index.js b/apolloschurchapp/src/auth/signup/index.js
new file mode 100644
index 0000000..81e64a7
--- /dev/null
+++ b/apolloschurchapp/src/auth/signup/index.js
@@ -0,0 +1,67 @@
+import React from 'react';
+import { Mutation } from 'react-apollo';
+import { Formik } from 'formik';
+import * as Yup from 'yup';
+import PropTypes from 'prop-types';
+
+import { track, events } from 'apolloschurchapp/src/analytics';
+
+import handleLogin from '../handleLogin';
+import { client } from '../../client'; //eslint-disable-line
+import registerPersonMutation from './registerPerson';
+import SignupForm from './Form';
+
+const Signup = ({ onSignup }) => (
+  <Mutation
+    mutation={registerPersonMutation}
+    update={(cache, { data: { registerPerson } }) => {
+      client.mutate({
+        mutation: handleLogin,
+        variables: {
+          authToken: registerPerson.token,
+        },
+      });
+    }}
+  >
+    {(authenticate) => (
+      <Formik
+        validationSchema={Yup.object().shape({
+          email: Yup.string()
+            .email('Invalid email address')
+            .required('Email is required!'),
+          password: Yup.string().required('Password is required!'),
+        })}
+        onSubmit={async (variables, { setSubmitting, setFieldError }) => {
+          try {
+            await authenticate({ variables });
+            track({ eventName: events.UserSignup }); // TODO: Move signup logic to store/index and move tracking logic there also.
+            if (onSignup) onSignup();
+          } catch ({ graphQLErrors = [], ...e }) {
+            if (
+              graphQLErrors.length &&
+              graphQLErrors.find(({ message }) =>
+                message.includes('User already exists')
+              )
+            ) {
+              setFieldError('email', 'There is already a user with this email');
+            } else {
+              setFieldError(
+                'password',
+                'Unknown error. Please try again later.'
+              );
+            }
+          }
+          setSubmitting(false);
+        }}
+      >
+        {(formikBag) => <SignupForm {...formikBag} />}
+      </Formik>
+    )}
+  </Mutation>
+);
+
+Signup.propTypes = {
+  onSignup: PropTypes.func,
+};
+
+export default Signup;
diff --git a/apolloschurchapp/src/auth/signup/registerPerson.js b/apolloschurchapp/src/auth/signup/registerPerson.js
new file mode 100644
index 0000000..77fc892
--- /dev/null
+++ b/apolloschurchapp/src/auth/signup/registerPerson.js
@@ -0,0 +1,9 @@
+import gql from 'graphql-tag';
+
+export default gql`
+  mutation registerPerson($email: String!, $password: String!) {
+    registerPerson(email: $email, password: $password) {
+      token
+    }
+  }
+`;
diff --git a/apolloschurchapp/src/client/__mocks__/cache.js b/apolloschurchapp/src/client/__mocks__/cache.js
deleted file mode 100644
index 29756d2..0000000
--- a/apolloschurchapp/src/client/__mocks__/cache.js
+++ /dev/null
@@ -1,21 +0,0 @@
-import {
-  InMemoryCache,
-  IntrospectionFragmentMatcher,
-} from 'apollo-cache-inmemory';
-import introspectionQueryResultData from '../fragmentTypes.json';
-
-const nodeCacheRedirect = (_, { id }, { getCacheKey }) =>
-  id ? getCacheKey({ __typename: id.split(':')[0], id }) : null;
-
-const cache = new InMemoryCache({
-  fragmentMatcher: new IntrospectionFragmentMatcher({
-    introspectionQueryResultData,
-  }),
-  cacheRedirects: {
-    Query: {
-      node: nodeCacheRedirect,
-    },
-  },
-});
-
-export default cache;
diff --git a/apolloschurchapp/src/client/__mocks__/index.js b/apolloschurchapp/src/client/__mocks__/index.js
index 462244b..7d3347c 100644
--- a/apolloschurchapp/src/client/__mocks__/index.js
+++ b/apolloschurchapp/src/client/__mocks__/index.js
@@ -1,40 +1,29 @@
-import React from 'react';
 import { MockedProvider } from 'react-apollo/test-utils';
 import ApolloClient from 'apollo-client';
 import { makeExecutableSchema, addMockFunctionsToSchema } from 'graphql-tools';
 import { SchemaLink } from 'apollo-link-schema';
-import { importSchema } from 'graphql-import';
+import { ApolloLink } from 'apollo-link';
+import { testSchema as typeDefs } from 'apollos-church-api';
 
-import { resolvers, schema, defaults } from '../../store';
-import cache from './cache';
+import cache from '../cache';
+import clientStateLink from '../clientStateLink';
 
-// eslint-disable-next-line
-export default (props) => {
-  let finalProps = props;
-  // eslint-disable-next-line
-  if (!props.mocks) {
-    // eslint-disable-next-line
-    finalProps = { ...props, resolvers };
-  }
-  return <MockedProvider cache={cache} {...finalProps} />;
-};
+export default MockedProvider;
 
-const serverSchema = makeExecutableSchema({
-  typeDefs: importSchema(
-    `${process.cwd()}/../apollos-church-api/local.graphql`
-  ),
+const schema = makeExecutableSchema({
+  typeDefs,
   resolverValidationOptions: {
     requireResolversForResolveType: false,
   },
 });
-addMockFunctionsToSchema({ schema: serverSchema });
+addMockFunctionsToSchema({ schema });
 
-const link = new SchemaLink({ schema: serverSchema });
-cache.writeData({ data: defaults });
+let link = new SchemaLink({ schema });
+if (clientStateLink) {
+  link = ApolloLink.from([clientStateLink, link]);
+}
 
 export const client = new ApolloClient({
-  link,
   cache,
-  resolvers,
-  typeDefs: schema,
+  link,
 });
diff --git a/apolloschurchapp/src/client/authLink.js b/apolloschurchapp/src/client/authLink.js
new file mode 100644
index 0000000..407934b
--- /dev/null
+++ b/apolloschurchapp/src/client/authLink.js
@@ -0,0 +1,35 @@
+import { setContext } from 'apollo-link-context';
+import gql from 'graphql-tag';
+
+import { ensureCacheHydration } from './cache';
+
+import { client } from './'; // eslint-disable-line
+
+export default setContext(async (request, { headers }) => {
+  try {
+    await ensureCacheHydration;
+
+    const {
+      data: { authToken },
+    } = await client.query({
+      query: gql`
+        query {
+          authToken @client
+        }
+      `,
+    });
+    if (!authToken) return {};
+
+    // return the headers to the context so httpLink can read them
+    return {
+      headers: {
+        ...headers,
+        authorization: authToken,
+      },
+    };
+  } catch (err) {
+    // eslint-disable-next-line
+    console.warn('Authorization Failed', err);
+    return {};
+  }
+});
diff --git a/apolloschurchapp/src/client/cache.js b/apolloschurchapp/src/client/cache.js
index 80ba332..3979a8a 100644
--- a/apolloschurchapp/src/client/cache.js
+++ b/apolloschurchapp/src/client/cache.js
@@ -2,16 +2,16 @@ import {
   InMemoryCache,
   IntrospectionFragmentMatcher,
 } from 'apollo-cache-inmemory';
-import AsyncStorage from '@react-native-community/async-storage';
+import { AsyncStorage } from 'react-native';
+import DeviceInfo from 'react-native-device-info';
 import { CachePersistor } from 'apollo-cache-persist';
-import ApollosConfig from '@apollosproject/config';
 
 import introspectionQueryResultData from './fragmentTypes.json';
 
-// We reset our apollo cache based an env value and static number.
-// In the future, we should also look at resetting the app when an error occurs related to Apollo.
-// You can also increment this number to force a manual reset of the cache.
-const SCHEMA_VERSION = `${ApollosConfig.SCHEMA_VERSION}-1`; // Must be a string.
+// We reset our apollo cache on every build:
+// TODO: this could be optimized by only reseting cache when our schema or client-side schema changes,
+// however there is risk for missing changes and breaking things in production, so this is safer.
+const SCHEMA_VERSION = `${DeviceInfo.getVersion()}${DeviceInfo.getBuildNumber()}`; // Must be a string.
 const SCHEMA_VERSION_KEY = 'apollo-schema-version';
 
 const nodeCacheRedirect = (_, { id }, { getCacheKey }) =>
@@ -33,26 +33,13 @@ const persistor = new CachePersistor({
   storage: AsyncStorage,
 });
 
-// 1. If we are on the same schema version, restore the cache.
-// 2. If that fails, purge the cache and update the stored version so we don't try and restore agian
-// 3. If we are on a new schema version, purge the cache.
-// 4. If purging or setting AsyncStorage keys fails (or anything else) we capture the error and log it.
-
 export const ensureCacheHydration = (async () => {
-  // We wrap everything in try/catch because crashing on a cache restore is bad
-  // 😬
   try {
     const currentVersion = await AsyncStorage.getItem(SCHEMA_VERSION_KEY);
     if (currentVersion === SCHEMA_VERSION) {
       // If the current version matches the latest version,
       // we're good to go and can restore the cache.
-      try {
-        await persistor.restore();
-      } catch (restoreError) {
-        // If the restore fails, we want to do our best to purge the cache.
-        await persistor.purge();
-        console.error('Error restoring cache, purging the cache', restoreError);
-      }
+      await persistor.restore();
     } else {
       // Otherwise, we'll want to purge the outdated persisted cache
       // and mark ourselves as having updated to the latest version.
@@ -60,7 +47,7 @@ export const ensureCacheHydration = (async () => {
       await AsyncStorage.setItem(SCHEMA_VERSION_KEY, SCHEMA_VERSION);
     }
   } catch (error) {
-    console.error('Error restoring or purging Apollo cache', error);
+    console.error('Error restoring Apollo cache', error);
   }
 })();
 
diff --git a/apolloschurchapp/src/client/clientStateLink.js b/apolloschurchapp/src/client/clientStateLink.js
new file mode 100644
index 0000000..0c45da8
--- /dev/null
+++ b/apolloschurchapp/src/client/clientStateLink.js
@@ -0,0 +1,11 @@
+import { withClientState } from 'apollo-link-state';
+
+import { resolvers, defaults, schema } from '../store';
+import cache from './cache';
+
+export default withClientState({
+  resolvers,
+  defaults,
+  cache,
+  typeDefs: schema,
+});
diff --git a/apolloschurchapp/src/client/fragmentTypes.json b/apolloschurchapp/src/client/fragmentTypes.json
index f5a2e19..8d96fc0 100644
--- a/apolloschurchapp/src/client/fragmentTypes.json
+++ b/apolloschurchapp/src/client/fragmentTypes.json
@@ -1 +1 @@
-{"__schema":{"types":[{"kind":"INTERFACE","name":"Node","possibleTypes":[{"name":"ContentChannel"},{"name":"Person"},{"name":"Device"},{"name":"Campus"},{"name":"Event"},{"name":"Group"},{"name":"Scripture"},{"name":"Pass"},{"name":"PrayerRequest"},{"name":"UniversalContentItem"},{"name":"DevotionalContentItem"},{"name":"MediaContentItem"},{"name":"ContentSeriesContentItem"},{"name":"WeekendContentItem"},{"name":"Url"},{"name":"ActionListFeature"},{"name":"HeroListFeature"},{"name":"VerticalCardListFeature"},{"name":"HorizontalCardListFeature"},{"name":"TextFeature"},{"name":"ScriptureFeature"},{"name":"WebviewFeature"},{"name":"PrayerListFeature"}]},{"kind":"INTERFACE","name":"ContentItem","possibleTypes":[{"name":"UniversalContentItem"},{"name":"DevotionalContentItem"},{"name":"MediaContentItem"},{"name":"ContentSeriesContentItem"},{"name":"WeekendContentItem"}]},{"kind":"INTERFACE","name":"Media","possibleTypes":[{"name":"ImageMedia"},{"name":"VideoMedia"},{"name":"AudioMedia"}]},{"kind":"INTERFACE","name":"MediaSource","possibleTypes":[{"name":"ImageMediaSource"},{"name":"VideoMediaSource"},{"name":"AudioMediaSource"}]},{"kind":"INTERFACE","name":"Sharable","possibleTypes":[{"name":"SharableContentItem"},{"name":"SharableFeature"}]},{"kind":"INTERFACE","name":"Feature","possibleTypes":[{"name":"ActionListFeature"},{"name":"HeroListFeature"},{"name":"VerticalCardListFeature"},{"name":"HorizontalCardListFeature"},{"name":"TextFeature"},{"name":"ScriptureFeature"},{"name":"WebviewFeature"},{"name":"PrayerListFeature"}]}]}}
\ No newline at end of file
+{"__schema":{"types":[{"kind":"INTERFACE","name":"Node","possibleTypes":[{"name":"ContentChannel"},{"name":"Person"},{"name":"Interaction"},{"name":"UniversalContentItem"},{"name":"DevotionalContentItem"},{"name":"MediaContentItem"},{"name":"ContentSeriesContentItem"}]},{"kind":"INTERFACE","name":"ContentItem","possibleTypes":[{"name":"UniversalContentItem"},{"name":"DevotionalContentItem"},{"name":"MediaContentItem"},{"name":"ContentSeriesContentItem"}]},{"kind":"INTERFACE","name":"Media","possibleTypes":[{"name":"ImageMedia"},{"name":"VideoMedia"},{"name":"AudioMedia"}]},{"kind":"INTERFACE","name":"MediaSource","possibleTypes":[{"name":"ImageMediaSource"},{"name":"VideoMediaSource"},{"name":"AudioMediaSource"}]},{"kind":"INTERFACE","name":"Sharable","possibleTypes":[{"name":"SharableContentItem"}]}]}}
\ No newline at end of file
diff --git a/apolloschurchapp/src/client/httpLink.js b/apolloschurchapp/src/client/httpLink.js
index 805851d..157fb8e 100644
--- a/apolloschurchapp/src/client/httpLink.js
+++ b/apolloschurchapp/src/client/httpLink.js
@@ -1,24 +1,11 @@
 import { Platform } from 'react-native';
 import { createUploadLink } from 'apollo-upload-client';
-import ApollosConfig from '@apollosproject/config';
-import { split } from 'apollo-link';
-import { createHttpLink } from 'apollo-link-http';
-import { getMainDefinition } from 'apollo-utilities';
+import { APP_DATA_URL, ANDROID_URL } from 'react-native-dotenv';
 
-let uri = ApollosConfig.APP_DATA_URL;
-const androidUri = ApollosConfig.ANDROID_URL || '10.0.2.2';
+let uri = APP_DATA_URL;
+const androidUri = ANDROID_URL || '10.0.2.2';
 
 // Android's emulator requires localhost network traffic to go through 10.0.2.2
 if (Platform.OS === 'android') uri = uri.replace('localhost', androidUri);
 
-export default split(
-  ({ query }) => {
-    const { kind, operation } = getMainDefinition(query);
-    return kind === 'OperationDefinition' && operation === 'mutation';
-  },
-  createUploadLink({ uri }),
-  createHttpLink({
-    uri,
-    useGETForQueries: true,
-  })
-);
+export default createUploadLink({ uri });
diff --git a/apolloschurchapp/src/client/index.js b/apolloschurchapp/src/client/index.js
index 302fc47..76cff4a 100644
--- a/apolloschurchapp/src/client/index.js
+++ b/apolloschurchapp/src/client/index.js
@@ -1,67 +1,29 @@
 import React, { PureComponent } from 'react';
 import PropTypes from 'prop-types';
 import { ApolloProvider } from 'react-apollo';
-import { ApolloProvider as ApolloHookProvider } from '@apollo/react-hooks';
 import { ApolloClient } from 'apollo-client';
 import { ApolloLink } from 'apollo-link';
-import { getVersion, getApplicationName } from 'react-native-device-info';
-
-import { authLink, buildErrorLink } from '@apollosproject/ui-auth';
-
-import { NavigationService } from '@apollosproject/ui-kit';
-import { resolvers, schema, defaults } from '../store';
+import SplashScreen from 'react-native-splash-screen';
 
 import httpLink from './httpLink';
+import clientStateLink from './clientStateLink';
+import authLink from './authLink'; // eslint-disable-line
 import cache, { ensureCacheHydration } from './cache';
-import MARK_CACHE_LOADED from './markCacheLoaded';
-
-const goToAuth = () => NavigationService.resetToAuth();
-const wipeData = () => cache.writeData({ data: defaults });
-
-let clearStore;
-let storeIsResetting = false;
-const onAuthError = async () => {
-  if (!storeIsResetting) {
-    storeIsResetting = true;
-    await clearStore();
-  }
-  storeIsResetting = false;
-  goToAuth();
-};
-
-const errorLink = buildErrorLink(onAuthError);
 
-const link = ApolloLink.from([authLink, errorLink, httpLink]);
+const link = clientStateLink.concat(ApolloLink.from([authLink, httpLink]));
 
 export const client = new ApolloClient({
   link,
   cache,
-  queryDeduplication: false,
+  queryDeduplication: true,
   shouldBatch: true,
-  resolvers,
-  typeDefs: schema,
-  name: getApplicationName(),
-  version: getVersion(),
 });
 
-// Hack to give auth link access to method on client;
-// eslint-disable-next-line prefer-destructuring
-clearStore = client.clearStore;
-
-wipeData();
-// Ensure that media player still works after logout.
-client.onClearStore(() => wipeData());
-
 class ClientProvider extends PureComponent {
   static propTypes = {
     client: PropTypes.shape({
       cache: PropTypes.shape({}),
     }),
-    children: PropTypes.oneOfType([
-      PropTypes.arrayOf(PropTypes.node),
-      PropTypes.node,
-      PropTypes.object, // covers Fragments
-    ]).isRequired,
   };
 
   static defaultProps = {
@@ -74,19 +36,12 @@ class ClientProvider extends PureComponent {
     } catch (e) {
       throw e;
     } finally {
-      client.mutate({ mutation: MARK_CACHE_LOADED });
+      if (SplashScreen && SplashScreen.hide) SplashScreen.hide();
     }
   }
 
   render() {
-    const { children, ...otherProps } = this.props;
-    return (
-      <ApolloProvider {...otherProps} client={client}>
-        <ApolloHookProvider {...otherProps} client={client}>
-          {children}
-        </ApolloHookProvider>
-      </ApolloProvider>
-    );
+    return <ApolloProvider {...this.props} client={client} />;
   }
 }
 
diff --git a/apolloschurchapp/src/config.js b/apolloschurchapp/src/config.js
new file mode 100644
index 0000000..248183d
--- /dev/null
+++ b/apolloschurchapp/src/config.js
@@ -0,0 +1,6 @@
+/* eslint-disable import/prefer-default-export */
+import { ONE_SIGNAL_KEY as oneSignalKey } from 'react-native-dotenv';
+
+const ONE_SIGNAL_KEY = oneSignalKey;
+
+export { ONE_SIGNAL_KEY };
diff --git a/apolloschurchapp/src/content-feed/content-feed.tests.js b/apolloschurchapp/src/content-feed/content-feed.tests.js
index 345ff12..544d818 100644
--- a/apolloschurchapp/src/content-feed/content-feed.tests.js
+++ b/apolloschurchapp/src/content-feed/content-feed.tests.js
@@ -1,32 +1,24 @@
 import React from 'react';
+import renderer from 'react-test-renderer';
 
-import Providers from '../Providers';
+import Providers from 'apolloschurchapp/src/Providers';
 
-import { renderWithApolloData } from '../utils/testUtils';
-import GET_CONTENT_FEED from './getContentFeed';
+import getContentFeed from './getContentFeed';
 
 import ContentFeed from './index';
 
 describe('content feed query component', () => {
-  it('renders a feedview after successful query', async () => {
+  it('renders a feedview after successful query', () => {
     const mock = {
       request: {
-        query: GET_CONTENT_FEED,
-        variables: { itemId: 'ContentChannel:123' },
+        query: getContentFeed,
       },
       result: {
         data: {
           node: {
-            __typename: 'ContentChannel',
             childContentItemsConnection: {
-              pageInfo: {
-                endCursor: 'blablalba',
-                __typename: 'PaginationInfo',
-              },
-              __typename: 'ContentItemsConnection',
               edges: [
                 {
-                  __typename: 'ContentItemsConnectionEdge',
                   node: {
                     __typename: 'UniversalContentItem',
                     id: 'UniversalContentItem:d57994350b9d213866b24dea3a97433d',
@@ -35,20 +27,11 @@ describe('content feed query component', () => {
                       id: 'ContentChannel:4f68015ba18662a7409d1219a4ce013e',
                       name: 'Editorial',
                       iconName: 'text',
-                      __typename: 'ContentChannel',
                     },
                     title: 'Mea Animal Aperiam Ornatus Eu',
-                    hyphenatedTitle: 'Mea Animal Aperiam Ornatus Eu',
-                    summary: 'Bla bla bla',
-                    theme: null,
-                    isLiked: false,
-                    likedCount: 0,
-                    videos: [],
-                    audios: [],
                   },
                 },
                 {
-                  __typename: 'ContentItemsConnectionEdge',
                   node: {
                     __typename: 'UniversalContentItem',
                     id: 'UniversalContentItem:b36e55d803443431e96bb4b5068147ec',
@@ -57,17 +40,8 @@ describe('content feed query component', () => {
                       id: 'ContentChannel:4f68015ba18662a7409d1219a4ce013e',
                       name: 'Editorial',
                       iconName: 'text',
-                      __typename: 'ContentChannel',
                     },
                     title: 'Probo Senserit Id Mea, Ut Sed Malis Postea,',
-                    hyphenatedTitle:
-                      'Probo Senserit Id Mea, Ut Sed Malis Postea,',
-                    summary: 'Bla bla bla',
-                    theme: null,
-                    isLiked: false,
-                    likedCount: 0,
-                    videos: [],
-                    audios: [],
                   },
                 },
               ],
@@ -78,10 +52,10 @@ describe('content feed query component', () => {
     };
 
     const navigation = {
-      getParam: () => 'ContentChannel:123',
+      getParam: jest.fn(),
       navigate: jest.fn(),
     };
-    const tree = await renderWithApolloData(
+    const tree = renderer.create(
       <Providers mocks={[mock]}>
         <ContentFeed navigation={navigation} />
       </Providers>
diff --git a/apolloschurchapp/src/content-feed/getContentFeed.js b/apolloschurchapp/src/content-feed/getContentFeed.js
index 38ed31f..2e47d19 100644
--- a/apolloschurchapp/src/content-feed/getContentFeed.js
+++ b/apolloschurchapp/src/content-feed/getContentFeed.js
@@ -1,22 +1,23 @@
 import gql from 'graphql-tag';
-import ApollosConfig from '@apollosproject/config';
+
+import { largeCardFragment } from 'apolloschurchapp/src/ui/ContentCardConnected';
+import { contentItemFragment } from '../content-single/getContentItem';
 
 export default gql`
-  query getContentFeed($itemId: ID!, $after: String, $first: Int) {
+  query getContentFeed($itemId: ID!) {
     node(id: $itemId) {
       ... on ContentChannel {
-        childContentItemsConnection(after: $after, first: $first) {
-          pageInfo {
-            endCursor
-          }
+        childContentItemsConnection {
           edges {
             node {
-              ...contentCardFragment
+              ...contentItemFragment
+              ...largeCardFragment
             }
           }
         }
       }
     }
   }
-  ${ApollosConfig.FRAGMENTS.CONTENT_CARD_FRAGMENT}
+  ${contentItemFragment}
+  ${largeCardFragment}
 `;
diff --git a/apolloschurchapp/src/content-feed/index.js b/apolloschurchapp/src/content-feed/index.js
index 9e6ff30..8662d8a 100644
--- a/apolloschurchapp/src/content-feed/index.js
+++ b/apolloschurchapp/src/content-feed/index.js
@@ -3,29 +3,21 @@ import { Query } from 'react-apollo';
 import { get } from 'lodash';
 import PropTypes from 'prop-types';
 
-import {
-  ContentCardConnected,
-  fetchMoreResolver,
-} from '@apollosproject/ui-connected';
-
 import { BackgroundView, FeedView } from '@apollosproject/ui-kit';
 
-import GET_CONTENT_FEED from './getContentFeed';
+import ContentCardConnected from 'apolloschurchapp/src/ui/ContentCardConnected';
+
+import getContentFeed from './getContentFeed';
 /**
  * This is where the component description lives
  * A FeedView wrapped in a query to pull content data.
  */
 class ContentFeed extends PureComponent {
   /** Function for React Navigation to set information in the header. */
-  static navigationOptions = ({ navigation, screenProps }) => {
+  static navigationOptions = ({ navigation }) => {
     const itemTitle = navigation.getParam('itemTitle', 'Content Channel');
     return {
       title: itemTitle,
-      headerStyle: {
-        backgroundColor: screenProps.headerBackgroundColor,
-        borderBottomWidth: 0,
-        elevation: 0,
-      },
     };
   };
 
@@ -54,11 +46,11 @@ class ContentFeed extends PureComponent {
     return (
       <BackgroundView>
         <Query
-          query={GET_CONTENT_FEED}
+          query={getContentFeed}
           variables={{ itemId }}
           fetchPolicy="cache-and-network"
         >
-          {({ loading, error, data, refetch, fetchMore, variables }) => (
+          {({ loading, error, data, refetch }) => (
             <FeedView
               ListItemComponent={ContentCardConnected}
               content={get(
@@ -66,12 +58,6 @@ class ContentFeed extends PureComponent {
                 'node.childContentItemsConnection.edges',
                 []
               ).map((edge) => edge.node)}
-              fetchMore={fetchMoreResolver({
-                collectionName: 'node.childContentItemsConnection',
-                fetchMore,
-                variables,
-                data,
-              })}
               isLoading={loading}
               error={error}
               refetch={refetch}
diff --git a/apolloschurchapp/src/content-single/ActionContainer/ActionContainer.tests.js b/apolloschurchapp/src/content-single/ActionContainer/ActionContainer.tests.js
index 2222b55..4d5e84a 100644
--- a/apolloschurchapp/src/content-single/ActionContainer/ActionContainer.tests.js
+++ b/apolloschurchapp/src/content-single/ActionContainer/ActionContainer.tests.js
@@ -1,7 +1,7 @@
 // import React from 'react';
 // import renderer from 'react-test-renderer';
 
-// import Providers from '../Providers';
+// import Providers from 'apolloschurchapp/src/Providers';
 
 // import ActionContainer from './ActionContainer';
 
diff --git a/apolloschurchapp/src/content-single/ActionContainer/getShareContent.js b/apolloschurchapp/src/content-single/ActionContainer/getShareContent.js
new file mode 100644
index 0000000..44718b3
--- /dev/null
+++ b/apolloschurchapp/src/content-single/ActionContainer/getShareContent.js
@@ -0,0 +1,16 @@
+import gql from 'graphql-tag';
+
+export default gql`
+  query getShareContent($itemId: ID!) {
+    node(id: $itemId) {
+      ... on ContentItem {
+        id
+        sharing {
+          url
+          message
+          title
+        }
+      }
+    }
+  }
+`;
diff --git a/apolloschurchapp/src/content-single/ActionContainer/index.js b/apolloschurchapp/src/content-single/ActionContainer/index.js
index 9bd8c97..2df4bae 100644
--- a/apolloschurchapp/src/content-single/ActionContainer/index.js
+++ b/apolloschurchapp/src/content-single/ActionContainer/index.js
@@ -1,12 +1,16 @@
 import React from 'react';
 import { Platform, View } from 'react-native';
 import PropTypes from 'prop-types';
+import { Query } from 'react-apollo';
+import { get } from 'lodash';
+
+import Share from 'apolloschurchapp/src/ui/Share';
+
 import { SideBySideView, styled } from '@apollosproject/ui-kit';
-import { MediaPlayerSpacer } from '@apollosproject/ui-media-player';
-import {
-  LikeButtonConnected,
-  ShareButtonConnected,
-} from '@apollosproject/ui-connected';
+import LikeButton from 'apolloschurchapp/src/ui/LikeButton';
+import { MediaPlayerSpacer } from 'apolloschurchapp/src/ui/MediaPlayer';
+
+import getShareContent from './getShareContent';
 
 const PositioningView = styled(({ theme }) => ({
   justifyContent: 'space-around',
@@ -15,7 +19,7 @@ const PositioningView = styled(({ theme }) => ({
 }))(SideBySideView);
 
 const Container = styled(({ theme }) => ({
-  backgroundColor: theme.colors.background.paper,
+  backgroundColor: theme.colors.paper,
   ...Platform.select(theme.shadows.default),
 }))(View);
 
@@ -23,8 +27,15 @@ const ActionContainer = ({ itemId }) => (
   <Container>
     <MediaPlayerSpacer>
       <PositioningView>
-        <LikeButtonConnected itemId={itemId} />
-        <ShareButtonConnected itemId={itemId} />
+        <LikeButton itemId={itemId} />
+        <Query query={getShareContent} variables={{ itemId }}>
+          {({ data: { node } = {}, error, loading }) => {
+            const sharing = get(node, 'sharing');
+            return loading || error || !sharing ? null : (
+              <Share content={sharing} />
+            );
+          }}
+        </Query>
       </PositioningView>
     </MediaPlayerSpacer>
   </Container>
diff --git a/apolloschurchapp/src/content-single/ContentSingle.js b/apolloschurchapp/src/content-single/ContentSingle.js
index 7617019..f5b2709 100644
--- a/apolloschurchapp/src/content-single/ContentSingle.js
+++ b/apolloschurchapp/src/content-single/ContentSingle.js
@@ -5,15 +5,14 @@ import PropTypes from 'prop-types';
 
 import { ErrorCard, ThemeMixin } from '@apollosproject/ui-kit';
 
-import { TrackEventWhenLoaded } from '@apollosproject/ui-analytics';
-import { InteractWhenLoadedConnected } from '@apollosproject/ui-connected';
+import TrackEventWhenLoaded from 'apolloschurchapp/src/analytics/TrackEventWhenLoaded';
+import { events } from 'apolloschurchapp/src/analytics';
 
 import ActionContainer from './ActionContainer';
-import GET_CONTENT_ITEM from './getContentItem';
+import getContentItem from './getContentItem';
 
 import DevotionalContentItem from './DevotionalContentItem';
 import UniversalContentItem from './UniversalContentItem';
-import WeekendContentItem from './WeekendContentItem';
 
 import NavigationHeader from './NavigationHeader';
 
@@ -25,6 +24,10 @@ class ContentSingle extends PureComponent {
     }),
   };
 
+  static navigationOptions = {
+    header: NavigationHeader,
+  };
+
   get itemId() {
     return this.props.navigation.getParam('itemId', []);
   }
@@ -33,18 +36,11 @@ class ContentSingle extends PureComponent {
     return { itemId: this.itemId };
   }
 
-  static navigationOptions = {
-    header: NavigationHeader,
-    headerTransparent: true,
-    headerMode: 'float',
-  };
-
   renderContent = ({ content, loading, error }) => {
     let { __typename } = content;
     if (!__typename && this.itemId) {
       [__typename] = this.itemId.split(':');
     }
-
     switch (__typename) {
       case 'DevotionalContentItem':
         return (
@@ -55,15 +51,6 @@ class ContentSingle extends PureComponent {
             error={error}
           />
         );
-      case 'WeekendContentItem':
-        return (
-          <WeekendContentItem
-            id={this.itemId}
-            content={content}
-            loading={loading}
-            error={error}
-          />
-        );
       case 'UniversalContentItem':
       default:
         return (
@@ -87,18 +74,13 @@ class ContentSingle extends PureComponent {
     return (
       <ThemeMixin
         mixin={{
-          type: get(theme, 'type'),
+          type: get(theme, 'type', 'light').toLowerCase(),
           colors: get(theme, 'colors'),
         }}
       >
-        <InteractWhenLoadedConnected
-          isLoading={loading}
-          nodeId={this.itemId}
-          action={'COMPLETE'}
-        />
         <TrackEventWhenLoaded
-          isLoading={loading}
-          eventName={'View Content'}
+          loaded={!!(!loading && content.title)}
+          eventName={events.ViewContent}
           properties={{
             title: content.title,
             itemId: this.itemId,
@@ -112,7 +94,7 @@ class ContentSingle extends PureComponent {
 
   render() {
     return (
-      <Query query={GET_CONTENT_ITEM} variables={this.queryVariables}>
+      <Query query={getContentItem} variables={this.queryVariables}>
         {this.renderWithData}
       </Query>
     );
diff --git a/apolloschurchapp/src/content-single/DevotionalContentItem/ContentTab.js b/apolloschurchapp/src/content-single/DevotionalContentItem/ContentTab.js
index e1f6ae5..9a4b521 100644
--- a/apolloschurchapp/src/content-single/DevotionalContentItem/ContentTab.js
+++ b/apolloschurchapp/src/content-single/DevotionalContentItem/ContentTab.js
@@ -1,16 +1,12 @@
 import React from 'react';
 import { ScrollView } from 'react-native';
 import PropTypes from 'prop-types';
-import {
-  ContentHTMLViewConnected,
-  HorizontalContentSeriesFeedConnected,
-} from '@apollosproject/ui-connected';
-import { PaddedView, H2, styled, withIsLoading } from '@apollosproject/ui-kit';
-import { ScriptureList } from '@apollosproject/ui-scripture';
+import { PaddedView, H2, styled } from '@apollosproject/ui-kit';
+import { ScriptureList } from 'apolloschurchapp/src/ui/Scripture';
+import HorizontalContentFeed from '../HorizontalContentFeed';
+import HTMLContent from '../HTMLContent';
 
-const ContentContainer = withIsLoading(
-  styled({ paddingVertical: 0 })(PaddedView)
-);
+const ContentContainer = styled({ paddingVertical: 0 })(PaddedView);
 
 /**
  * This is the Content side of the Devotional tabbed component.
@@ -26,8 +22,10 @@ const ContentTab = ({
   navigation,
 }) => (
   <ScrollView>
-    <ContentContainer isLoading={isLoading}>
-      <H2 padded>{title}</H2>
+    <ContentContainer>
+      <H2 padded isLoading={!title && isLoading}>
+        {title}
+      </H2>
       {references && references.length ? (
         <ScriptureList
           references={references}
@@ -35,12 +33,9 @@ const ContentTab = ({
           tabDestination={'scripture'}
         />
       ) : null}
-      <ContentHTMLViewConnected contentId={id} />
+      <HTMLContent contentId={id} />
     </ContentContainer>
-    <HorizontalContentSeriesFeedConnected
-      contentId={id}
-      navigation={navigation}
-    />
+    <HorizontalContentFeed contentId={id} navigation={navigation} />
   </ScrollView>
 );
 
@@ -54,14 +49,11 @@ ContentTab.propTypes = {
    * for the ScriptureList component to be able to jump to the ScriptureTab when the scripture
    * reference link is tapped.
    */
-  navigationState: PropTypes.shape({
-    route: PropTypes.shape({ jumpTo: PropTypes.func }),
-  }),
+  navigationState: PropTypes.shape({ routes: PropTypes.array }),
   /** An array of human readable references (i.e. '1 Corinthians 15:57') */
   references: PropTypes.arrayOf(PropTypes.string),
   /** The devotional title */
   title: PropTypes.string,
-  navigation: PropTypes.shape({ navigate: PropTypes.func }).isRequired,
 };
 
 export default ContentTab;
diff --git a/apolloschurchapp/src/content-single/DevotionalContentItem/Devotional.stories.js b/apolloschurchapp/src/content-single/DevotionalContentItem/Devotional.stories.js
index 8bf3ffd..109a669 100644
--- a/apolloschurchapp/src/content-single/DevotionalContentItem/Devotional.stories.js
+++ b/apolloschurchapp/src/content-single/DevotionalContentItem/Devotional.stories.js
@@ -1,62 +1,60 @@
-// TODO: fix story
-
-// import React from 'react';
-// import { storiesOf } from '@apollosproject/ui-storybook';
-
-// import Devotional from '.';
-
-// const scripture = [
-//   {
-//     id: '1CO.15.57',
-//     reference: '1 Corinthians 15:57',
-//     html:
-//       '<p class="p"><span data-number="57" class="v">57</span>But thanks be to God, who gives us the victory through our Lord Jesus Christ. </p>',
-//   },
-//   {
-//     id: 'EXO.17.8-EXO.17.15',
-//     reference: 'Exodus 17:8-15',
-//     html:
-//       '<p class="p"><span data-number="8" class="v">8</span>Then Amalek came and fought with Israel in Rephidim. <span data-number="9" class="v">9</span>Moses said to Joshua, “Choose men for us, and go out to fight with Amalek. Tomorrow I will stand on the top of the hill with God’s rod in my hand.” <span data-number="10" class="v">10</span>So Joshua did as Moses had told him, and fought with Amalek; and Moses, Aaron, and Hur went up to the top of the hill. <span data-number="11" class="v">11</span>When Moses held up his hand, Israel prevailed. When he let down his hand, Amalek prevailed. <span data-number="12" class="v">12</span>But Moses’ hands were heavy; so they took a stone, and put it under him, and he sat on it. Aaron and Hur held up his hands, the one on the one side, and the other on the other side. His hands were steady until sunset. <span data-number="13" class="v">13</span>Joshua defeated Amalek and his people with the edge of the sword. <span data-number="14" class="v">14</span>Yahweh said to Moses, “Write this for a memorial in a book, and rehearse it in the ears of Joshua: that I will utterly blot out the memory of Amalek from under the sky.” <span data-number="15" class="v">15</span>Moses built an altar, and called its name “Yahweh our Banner”.</p>',
-//   },
-// ];
-
-// const content = {
-//   body:
-//     '<p>Sometimes God&rsquo;s promises to us involve a fight. We have to fight to keep our focus on Him, fight to move towards the promise we know God has laid on our hearts. We have a real enemy that would love nothing more than to get us sidetracked and doubt God&rsquo;s promises. So we fight saying that we are going to believe God will do what He says He will do, and we keep fighting until we see that promise come to life.</p><p>In Exodus 17:8-15 the nation of Israel, freed from great oppression in Egypt was traveling to the land God promised them. Yet, Israel was fighting, again.&nbsp;<br />&nbsp;<br />As the Israelites were fighting in the valley,&nbsp;Moses was on the hill top lifting his hands in prayer for these great fighters. Israel fought hard, and with the prayers of Moses and the help of his companions, Aaron and Hur, the Amalekites were defeated. Moses knew that it was solely because of the Lord&rsquo;s hand of protection and blessing on the Israelites that they won the battle. &ldquo;Moses built an altar and called it The Lord is my banner&rdquo; (Exodus 17:15).</p><p>In battle opposing nations would fly their own flag on a pole at each of their respective front lines. This was to give their soldiers a feeling of hope and a focal point. This is what God is to us: a banner of encouragement to give us hope and a focal point.</p><blockquote><p>The Lord protects us, covers us with love, and&nbsp;blesses us continually.</p></blockquote><p>The Lord is our banner. He protects us; He covers us with love; He blesses us continually. The Lord gives us hope and a place to focus during the tough fights when the enemy is trying to make us doubt God&rsquo;s promises.&nbsp;</p><p>When was the last time you sat and thanked Jesus for all the ways he is a banner in your life?&nbsp;</p><p>Reflect:</p><ul><li>What is one way the Lord has been your banner?</li><li>How can you focus more today on the Lord and all the things He does for you throughout the day?</li></ul>',
-//   route: { jumpTo: () => {} },
-//   title: 'God is Our Banner',
-// };
-
-// const renderItem = () => {};
-
-// const loadingStateObject = {
-//   node: {
-//     id: 'fakeId0',
-//     title: '',
-//     isLoading: true,
-//   },
-// };
-
-// const stories = storiesOf('Devotional', module);
-
-// stories.add('Example', () => (
-//   <Devotional
-//     body={content.body}
-//     title={content.title}
-//     isLoading={false}
-//     scripture={scripture}
-//     renderItem={renderItem}
-//     loadingStateObject={loadingStateObject}
-//   />
-// ));
-
-// stories.add('isLoading', () => (
-//   <Devotional
-//     body={content.body}
-//     title={content.title}
-//     isLoading
-//     scripture={scripture}
-//     renderItem={renderItem}
-//     loadingStateObject={loadingStateObject}
-//   />
-// ));
+import React from 'react';
+import { storiesOf } from '@storybook/react-native';
+
+import Devotional from '.';
+
+const scripture = [
+  {
+    id: '1CO.15.57',
+    reference: '1 Corinthians 15:57',
+    html:
+      '<p class="p"><span data-number="57" class="v">57</span>But thanks be to God, who gives us the victory through our Lord Jesus Christ. </p>',
+  },
+  {
+    id: 'EXO.17.8-EXO.17.15',
+    reference: 'Exodus 17:8-15',
+    html:
+      '<p class="p"><span data-number="8" class="v">8</span>Then Amalek came and fought with Israel in Rephidim. <span data-number="9" class="v">9</span>Moses said to Joshua, “Choose men for us, and go out to fight with Amalek. Tomorrow I will stand on the top of the hill with God’s rod in my hand.” <span data-number="10" class="v">10</span>So Joshua did as Moses had told him, and fought with Amalek; and Moses, Aaron, and Hur went up to the top of the hill. <span data-number="11" class="v">11</span>When Moses held up his hand, Israel prevailed. When he let down his hand, Amalek prevailed. <span data-number="12" class="v">12</span>But Moses’ hands were heavy; so they took a stone, and put it under him, and he sat on it. Aaron and Hur held up his hands, the one on the one side, and the other on the other side. His hands were steady until sunset. <span data-number="13" class="v">13</span>Joshua defeated Amalek and his people with the edge of the sword. <span data-number="14" class="v">14</span>Yahweh said to Moses, “Write this for a memorial in a book, and rehearse it in the ears of Joshua: that I will utterly blot out the memory of Amalek from under the sky.” <span data-number="15" class="v">15</span>Moses built an altar, and called its name “Yahweh our Banner”.</p>',
+  },
+];
+
+const content = {
+  body:
+    '<p>Sometimes God&rsquo;s promises to us involve a fight. We have to fight to keep our focus on Him, fight to move towards the promise we know God has laid on our hearts. We have a real enemy that would love nothing more than to get us sidetracked and doubt God&rsquo;s promises. So we fight saying that we are going to believe God will do what He says He will do, and we keep fighting until we see that promise come to life.</p><p>In Exodus 17:8-15 the nation of Israel, freed from great oppression in Egypt was traveling to the land God promised them. Yet, Israel was fighting, again.&nbsp;<br />&nbsp;<br />As the Israelites were fighting in the valley,&nbsp;Moses was on the hill top lifting his hands in prayer for these great fighters. Israel fought hard, and with the prayers of Moses and the help of his companions, Aaron and Hur, the Amalekites were defeated. Moses knew that it was solely because of the Lord&rsquo;s hand of protection and blessing on the Israelites that they won the battle. &ldquo;Moses built an altar and called it The Lord is my banner&rdquo; (Exodus 17:15).</p><p>In battle opposing nations would fly their own flag on a pole at each of their respective front lines. This was to give their soldiers a feeling of hope and a focal point. This is what God is to us: a banner of encouragement to give us hope and a focal point.</p><blockquote><p>The Lord protects us, covers us with love, and&nbsp;blesses us continually.</p></blockquote><p>The Lord is our banner. He protects us; He covers us with love; He blesses us continually. The Lord gives us hope and a place to focus during the tough fights when the enemy is trying to make us doubt God&rsquo;s promises.&nbsp;</p><p>When was the last time you sat and thanked Jesus for all the ways he is a banner in your life?&nbsp;</p><p>Reflect:</p><ul><li>What is one way the Lord has been your banner?</li><li>How can you focus more today on the Lord and all the things He does for you throughout the day?</li></ul>',
+  route: { jumpTo: () => {} },
+  title: 'God is Our Banner',
+};
+
+const renderItem = () => {};
+
+const loadingStateObject = {
+  node: {
+    id: 'fakeId0',
+    title: '',
+    isLoading: true,
+  },
+};
+
+const stories = storiesOf('Devotional', module);
+
+stories.add('Example', () => (
+  <Devotional
+    body={content.body}
+    title={content.title}
+    isLoading={false}
+    scripture={scripture}
+    renderItem={renderItem}
+    loadingStateObject={loadingStateObject}
+  />
+));
+
+stories.add('isLoading', () => (
+  <Devotional
+    body={content.body}
+    title={content.title}
+    isLoading
+    scripture={scripture}
+    renderItem={renderItem}
+    loadingStateObject={loadingStateObject}
+  />
+));
diff --git a/apolloschurchapp/src/content-single/DevotionalContentItem/Devotional.tests.js b/apolloschurchapp/src/content-single/DevotionalContentItem/Devotional.tests.js
index 4b7de0a..59ed7e1 100644
--- a/apolloschurchapp/src/content-single/DevotionalContentItem/Devotional.tests.js
+++ b/apolloschurchapp/src/content-single/DevotionalContentItem/Devotional.tests.js
@@ -1,79 +1,100 @@
 import React from 'react';
-import { createStackNavigator, createAppContainer } from 'react-navigation';
-import { GET_CONTENT_ITEM_CONTENT } from '@apollosproject/ui-connected';
-
-import Providers from '../../Providers';
-import { renderWithApolloData } from '../../utils/testUtils';
-import GET_SCRIPTURE from './getScripture';
+import renderer from 'react-test-renderer';
+import wait from 'waait';
+import Providers from 'apolloschurchapp/src/Providers';
+import getContentItemContent from '../HTMLContent/getContentItemContent';
+import getScripture from './getScripture';
 import Devotional from '.';
 
-const contentScriptureMock = {
+const content = {
+  body:
+    '<p>Sometimes God&rsquo;s promises to us involve a fight. We have to fight to keep our focus on Him, fight to move towards the promise we know God has laid on our hearts. We have a real enemy that would love nothing more than to get us sidetracked and doubt God&rsquo;s promises. So we fight saying that we are going to believe God will do what He says He will do, and we keep fighting until we see that promise come to life.</p><p>In Exodus 17:8-15 the nation of Israel, freed from great oppression in Egypt was traveling to the land God promised them. Yet, Israel was fighting, again.&nbsp;<br />&nbsp;<br />As the Israelites were fighting in the valley,&nbsp;Moses was on the hill top lifting his hands in prayer for these great fighters. Israel fought hard, and with the prayers of Moses and the help of his companions, Aaron and Hur, the Amalekites were defeated. Moses knew that it was solely because of the Lord&rsquo;s hand of protection and blessing on the Israelites that they won the battle. &ldquo;Moses built an altar and called it The Lord is my banner&rdquo; (Exodus 17:15).</p><p>In battle opposing nations would fly their own flag on a pole at each of their respective front lines. This was to give their soldiers a feeling of hope and a focal point. This is what God is to us: a banner of encouragement to give us hope and a focal point.</p><blockquote><p>The Lord protects us, covers us with love, and&nbsp;blesses us continually.</p></blockquote><p>The Lord is our banner. He protects us; He covers us with love; He blesses us continually. The Lord gives us hope and a place to focus during the tough fights when the enemy is trying to make us doubt God&rsquo;s promises.&nbsp;</p><p>When was the last time you sat and thanked Jesus for all the ways he is a banner in your life?&nbsp;</p><p>Reflect:</p><ul><li>What is one way the Lord has been your banner?</li><li>How can you focus more today on the Lord and all the things He does for you throughout the day?</li></ul>',
+  route: { jumpTo: jest.fn() },
+  title: 'God is Our Banner',
+};
+
+const scriptures = [
+  {
+    __typename: 'Scripture',
+    id: '1CO.15.57',
+    reference: '1 Corinthians 15:57',
+    html:
+      '<p class="p"><span data-number="57" class="v">57</span>But thanks be to God, who gives us the victory through our Lord Jesus Christ. </p>',
+  },
+  {
+    __typename: 'Scripture',
+    id: 'EXO.17.8-EXO.17.15',
+    reference: 'Exodus 17:8-15',
+    html:
+      '<p class="p"><span data-number="8" class="v">8</span>Then Amalek came and fought with Israel in Rephidim. <span data-number="9" class="v">9</span>Moses said to Joshua, “Choose men for us, and go out to fight with Amalek. Tomorrow I will stand on the top of the hill with God’s rod in my hand.” <span data-number="10" class="v">10</span>So Joshua did as Moses had told him, and fought with Amalek; and Moses, Aaron, and Hur went up to the top of the hill. <span data-number="11" class="v">11</span>When Moses held up his hand, Israel prevailed. When he let down his hand, Amalek prevailed. <span data-number="12" class="v">12</span>But Moses’ hands were heavy; so they took a stone, and put it under him, and he sat on it. Aaron and Hur held up his hands, the one on the one side, and the other on the other side. His hands were steady until sunset. <span data-number="13" class="v">13</span>Joshua defeated Amalek and his people with the edge of the sword. <span data-number="14" class="v">14</span>Yahweh said to Moses, “Write this for a memorial in a book, and rehearse it in the ears of Joshua: that I will utterly blot out the memory of Amalek from under the sky.” <span data-number="15" class="v">15</span>Moses built an altar, and called its name “Yahweh our Banner”.</p>',
+  },
+];
+
+const scriptureMock = {
   request: {
-    query: GET_SCRIPTURE,
+    query: getScripture,
     variables: { itemId: '1' },
   },
   result: {
     data: {
-      node: {
-        __typename: 'DevotionalContentItem',
-        id: '1',
-        scriptures: [
-          {
-            __typename: 'Scripture',
-            id: '1CO.15.57',
-            reference: '1 Corinthians 15:57',
-            html:
-              '<p class="p"><span data-number="57" class="v">57</span>But thanks be to God, who gives us the victory through our Lord Jesus Christ. </p>',
-            copyright: 'PUBLIC DOMAIN',
-            version: 'WEB',
-          },
-          {
-            __typename: 'Scripture',
-            id: 'EXO.17.8-EXO.17.15',
-            reference: 'Exodus 17:8-15',
-            html:
-              '<p class="p"><span data-number="8" class="v">8</span>Then Amalek came and fought with Israel in Rephidim. <span data-number="9" class="v">9</span>Moses said to Joshua, “Choose men for us, and go out to fight with Amalek. Tomorrow I will stand on the top of the hill with God’s rod in my hand.” <span data-number="10" class="v">10</span>So Joshua did as Moses had told him, and fought with Amalek; and Moses, Aaron, and Hur went up to the top of the hill. <span data-number="11" class="v">11</span>When Moses held up his hand, Israel prevailed. When he let down his hand, Amalek prevailed. <span data-number="12" class="v">12</span>But Moses’ hands were heavy; so they took a stone, and put it under him, and he sat on it. Aaron and Hur held up his hands, the one on the one side, and the other on the other side. His hands were steady until sunset. <span data-number="13" class="v">13</span>Joshua defeated Amalek and his people with the edge of the sword. <span data-number="14" class="v">14</span>Yahweh said to Moses, “Write this for a memorial in a book, and rehearse it in the ears of Joshua: that I will utterly blot out the memory of Amalek from under the sky.” <span data-number="15" class="v">15</span>Moses built an altar, and called its name “Yahweh our Banner”.</p>',
-            copyright: 'PUBLIC DOMAIN',
-            version: 'WEB',
-          },
-        ],
-      },
+      node: { scriptures, id: '1', __typename: 'DevotionalContentItem' },
     },
   },
 };
 
-const contentHTMLMock = {
+const contentItemHTMLMock = {
   request: {
-    query: GET_CONTENT_ITEM_CONTENT,
+    query: getContentItemContent,
     variables: { contentId: '1' },
   },
   result: {
     data: {
       node: {
-        __typename: 'DevotionalContentItem',
         id: '1',
         htmlContent: '<b>Some content!</b>',
+        __typename: 'DevotionalContentItem',
       },
     },
   },
 };
 
-const mocks = [contentScriptureMock, contentHTMLMock];
+const mocks = [scriptureMock, contentItemHTMLMock];
+
+const navigation = {
+  push: jest.fn(),
+};
 
 describe('the Devotional component', () => {
   it('renders a devotional', async () => {
-    const DevotionalStack = createStackNavigator({
-      // eslint-disable-next-line
-      Devotional: (props) => (
-        <Devotional id={'1'} content={{ title: 'Title' }} {...props} />
-      ),
-    });
-    const DevotionalWithNavigation = createAppContainer(DevotionalStack);
-    const tree = await renderWithApolloData(
+    const tree = renderer.create(
+      <Providers mocks={mocks}>
+        <Devotional
+          id="1"
+          content={content}
+          loading={false}
+          navigation={navigation}
+        />
+      </Providers>
+    );
+    await wait(0); // wait for response
+    expect(tree).toMatchSnapshot();
+  });
+  it('renders even with empty scripture array', async () => {
+    const tree = renderer.create(
+      <Providers mocks={mocks}>
+        <Devotional id="1" content={content} loading navigation={navigation} />
+      </Providers>
+    );
+    await wait(0); // wait for response
+    expect(tree).toMatchSnapshot();
+  });
+  it('renders a loading state', async () => {
+    const tree = renderer.create(
       <Providers mocks={mocks}>
-        <DevotionalWithNavigation />
+        <Devotional id="1" content={content} loading navigation={navigation} />
       </Providers>
     );
+    await wait(0); // wait for response
     expect(tree).toMatchSnapshot();
   });
 });
diff --git a/apolloschurchapp/src/content-single/DevotionalContentItem/ScriptureTab.js b/apolloschurchapp/src/content-single/DevotionalContentItem/ScriptureTab.js
index 98fb169..9458010 100644
--- a/apolloschurchapp/src/content-single/DevotionalContentItem/ScriptureTab.js
+++ b/apolloschurchapp/src/content-single/DevotionalContentItem/ScriptureTab.js
@@ -2,8 +2,8 @@ import React from 'react';
 import { ScrollView } from 'react-native';
 import PropTypes from 'prop-types';
 import { PaddedView } from '@apollosproject/ui-kit';
-import ScriptureItem from '@apollosproject/ui-scripture';
-import { HorizontalContentSeriesFeedConnected } from '@apollosproject/ui-connected';
+import ScriptureItem from 'apolloschurchapp/src/ui/Scripture';
+import HorizontalContentFeed from '../HorizontalContentFeed';
 
 /**
  * This is the Scripture side of the Devotional tabbed component.
@@ -13,24 +13,16 @@ import { HorizontalContentSeriesFeedConnected } from '@apollosproject/ui-connect
 const ScriptureTab = ({ id, scripture, isLoading, navigation }) => (
   <ScrollView>
     <PaddedView>
-      {scripture.map((ref, i) => (
+      {scripture.map((ref) => (
         <ScriptureItem
           key={ref.id}
           reference={ref.reference}
           html={ref.html}
           isLoading={isLoading}
-          copyright={
-            // only show last copyright
-            scripture.length - 1 === i ? ref.copyright : null
-          }
-          version={ref.version}
         />
       ))}
     </PaddedView>
-    <HorizontalContentSeriesFeedConnected
-      contentId={id}
-      navigation={navigation}
-    />
+    <HorizontalContentFeed contentId={id} navigation={navigation} />
   </ScrollView>
 );
 
@@ -48,10 +40,6 @@ ScriptureTab.propTypes = {
       reference: PropTypes.string,
       /** The scripture source to render */
       html: PropTypes.string,
-      /** The copyright of the Bible version */
-      copyright: PropTypes.string,
-      /** The Bible version abbreviation */
-      version: PropTypes.string,
     })
   ),
 };
diff --git a/apolloschurchapp/src/content-single/DevotionalContentItem/getScripture.js b/apolloschurchapp/src/content-single/DevotionalContentItem/getScripture.js
index f641711..1f0fb59 100644
--- a/apolloschurchapp/src/content-single/DevotionalContentItem/getScripture.js
+++ b/apolloschurchapp/src/content-single/DevotionalContentItem/getScripture.js
@@ -1,5 +1,4 @@
 import gql from 'graphql-tag';
-import ApollosConfig from '@apollosproject/config';
 
 export default gql`
   query getScripture($itemId: ID!) {
@@ -8,10 +7,11 @@ export default gql`
       id
       ... on DevotionalContentItem {
         scriptures {
-          ...ScriptureFragment
+          id
+          html
+          reference
         }
       }
     }
   }
-  ${ApollosConfig.FRAGMENTS.SCRIPTURE_FRAGMENT}
 `;
diff --git a/apolloschurchapp/src/content-single/DevotionalContentItem/index.js b/apolloschurchapp/src/content-single/DevotionalContentItem/index.js
index 9d39893..8544eba 100644
--- a/apolloschurchapp/src/content-single/DevotionalContentItem/index.js
+++ b/apolloschurchapp/src/content-single/DevotionalContentItem/index.js
@@ -1,8 +1,7 @@
 import React, { PureComponent } from 'react';
+import { SafeAreaView } from 'react-native';
 import PropTypes from 'prop-types';
-import { SafeAreaView } from 'react-navigation';
 import { Query } from 'react-apollo';
-import { get } from 'lodash';
 
 import {
   ErrorCard,
@@ -14,7 +13,7 @@ import {
 import ContentTab from './ContentTab';
 import ScriptureTab from './ScriptureTab';
 
-import GET_SCRIPTURE from './getScripture';
+import getScripture from './getScripture';
 
 const FlexedSafeAreaView = styled({ flex: 1 })(SafeAreaView);
 
@@ -81,46 +80,37 @@ class DevotionalContentItem extends PureComponent {
     />
   );
 
-  renderLoading = () => (
-    <ContentTab title={''} isLoading navigation={this.props.navigation} />
-  );
-
-  renderTabs = ({ data, error, loading }) => {
+  renderTabs = ({
+    data: { node: { scriptures = [] } = {} } = {},
+    error,
+    loading,
+  }) => {
     if (error) return <ErrorCard error={error} />;
-
-    const scriptures = get(data, 'node.scriptures', []);
-
     // only include scriptures where the references are not null
-    const validScriptures = scriptures
-      ? scriptures.filter((scripture) => scripture.reference != null)
-      : [];
+    const validScriptures = scriptures.filter(
+      (scripture) => scripture.reference != null
+    );
 
     const hasScripture = loading || validScriptures.length;
     const tabRoutes = [{ title: 'Devotional', key: 'content' }];
-    const map = {
-      content: this.contentRoute({ scriptures, loading }),
-    };
-    if (hasScripture) {
-      tabRoutes.push({ title: 'Scripture', key: 'scripture' });
-      map.scripture = this.scriptureRoute({ scriptures, loading });
-    }
-    return tabRoutes.length < 2 ? (
-      map[tabRoutes[0].key]()
-    ) : (
-      <TabView routes={tabRoutes} renderScene={SceneMap(map)} />
+    if (hasScripture) tabRoutes.push({ title: 'Scripture', key: 'scripture' });
+    return (
+      <TabView
+        routes={tabRoutes}
+        renderScene={SceneMap({
+          content: this.contentRoute({ scriptures, loading }),
+          scripture: this.scriptureRoute({ scriptures, loading }),
+        })}
+      />
     );
   };
 
   render() {
     return (
       <BackgroundView>
-        <FlexedSafeAreaView forceInset={{ top: 'always' }}>
-          <Query query={GET_SCRIPTURE} variables={{ itemId: this.props.id }}>
-            {({ data, loading, error }) =>
-              loading
-                ? this.renderLoading()
-                : this.renderTabs({ data, loading, error })
-            }
+        <FlexedSafeAreaView>
+          <Query query={getScripture} variables={{ itemId: this.props.id }}>
+            {this.renderTabs}
           </Query>
         </FlexedSafeAreaView>
       </BackgroundView>
diff --git a/apolloschurchapp/src/content-single/HTMLContent/getContentItemContent.js b/apolloschurchapp/src/content-single/HTMLContent/getContentItemContent.js
new file mode 100644
index 0000000..207df6d
--- /dev/null
+++ b/apolloschurchapp/src/content-single/HTMLContent/getContentItemContent.js
@@ -0,0 +1,12 @@
+import gql from 'graphql-tag';
+
+export default gql`
+  query getContentItemHTML($contentId: ID!) {
+    node(id: $contentId) {
+      ... on ContentItem {
+        id
+        htmlContent
+      }
+    }
+  }
+`;
diff --git a/apolloschurchapp/src/content-single/HTMLContent/index.js b/apolloschurchapp/src/content-single/HTMLContent/index.js
new file mode 100644
index 0000000..4d4f384
--- /dev/null
+++ b/apolloschurchapp/src/content-single/HTMLContent/index.js
@@ -0,0 +1,29 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import { Query } from 'react-apollo';
+
+import HTMLView from 'apolloschurchapp/src/ui/HTMLView';
+import { ErrorCard } from '@apollosproject/ui-kit';
+
+import getContentItemContent from './getContentItemContent';
+
+const HTMLContent = ({ contentId }) => {
+  if (!contentId) return <HTMLView isLoading />;
+
+  return (
+    <Query query={getContentItemContent} variables={{ contentId }}>
+      {({ data: { node: { htmlContent } = {} } = {}, loading, error }) => {
+        if (error) return <ErrorCard error={error} />;
+        return (
+          <HTMLView isLoading={!htmlContent && loading}>{htmlContent}</HTMLView>
+        );
+      }}
+    </Query>
+  );
+};
+
+HTMLContent.propTypes = {
+  contentId: PropTypes.string,
+};
+
+export default HTMLContent;
diff --git a/apolloschurchapp/src/content-single/HorizontalContentFeed/getHorizontalContent.js b/apolloschurchapp/src/content-single/HorizontalContentFeed/getHorizontalContent.js
new file mode 100644
index 0000000..b0b77bc
--- /dev/null
+++ b/apolloschurchapp/src/content-single/HorizontalContentFeed/getHorizontalContent.js
@@ -0,0 +1,59 @@
+import gql from 'graphql-tag';
+
+export default gql`
+  query getHorizontalContent($itemId: ID!) {
+    node(id: $itemId) {
+      ... on ContentItem {
+        id
+        childContentItemsConnection {
+          edges {
+            node {
+              id
+              coverImage {
+                name
+                sources {
+                  uri
+                }
+              }
+              parentChannel {
+                id
+                name
+                iconName
+              }
+              title
+              sharing {
+                url
+                message
+                title
+              }
+            }
+          }
+        }
+        siblingContentItemsConnection {
+          edges {
+            node {
+              id
+              coverImage {
+                name
+                sources {
+                  uri
+                }
+              }
+              parentChannel {
+                id
+                name
+                iconName
+              }
+              title
+              sharing {
+                url
+                message
+                title
+              }
+            }
+          }
+        }
+      }
+    }
+  }
+`;
diff --git a/apolloschurchapp/src/content-single/HorizontalContentFeed/index.js b/apolloschurchapp/src/content-single/HorizontalContentFeed/index.js
new file mode 100644
index 0000000..c0a236f
--- /dev/null
+++ b/apolloschurchapp/src/content-single/HorizontalContentFeed/index.js
@@ -0,0 +1,93 @@
+import React, { Component } from 'react';
+import { get } from 'lodash';
+import PropTypes from 'prop-types';
+import { withNavigation } from 'react-navigation';
+import { Query } from 'react-apollo';
+
+import {
+  CardTile,
+  HorizontalTileFeed,
+  TouchableScale,
+} from '@apollosproject/ui-kit';
+
+import getHorizontalContent from './getHorizontalContent';
+
+const loadingStateObject = {
+  node: {
+    id: 'fakeId0',
+    title: '',
+    isLoading: true,
+  },
+};
+
+class HorizontalContentFeed extends Component {
+  static propTypes = {
+    contentId: PropTypes.string,
+    navigation: PropTypes.shape({
+      push: PropTypes.func,
+    }),
+  };
+
+  handleOnPressItem = (item) => {
+    this.props.navigation.push('ContentSingle', {
+      itemId: item.id,
+    });
+  };
+
+  renderItem = ({ item, index }) => (
+    <TouchableScale onPress={() => this.handleOnPressItem(item)}>
+      <CardTile
+        number={index + 1}
+        title={get(item, 'title', '')}
+        /*
+         * These are props that are not yet being passed in the data.
+         * We will need to make sure they get added back when that data is available.
+         * byLine={item.content.speaker}
+         * date={item.meta.date}
+         */
+      />
+    </TouchableScale>
+  );
+
+  renderFeed = ({ data, loading, error }) => {
+    if (error) return null;
+
+    const childContent = get(
+      data,
+      'node.childContentItemsConnection.edges',
+      []
+    ).map((edge) => edge.node);
+
+    const siblingContent = get(
+      data,
+      'node.siblingContentItemsConnection.edges',
+      []
+    ).map((edge) => edge.node);
+
+    const content = siblingContent.length ? siblingContent : childContent;
+
+    return (content && content.length) || loading ? (
+      <HorizontalTileFeed
+        content={content}
+        isLoading={loading}
+        loadingStateObject={loadingStateObject}
+        renderItem={this.renderItem}
+      />
+    ) : null;
+  };
+
+  render() {
+    if (!this.props.contentId) return this.renderFeed({ loading: true });
+
+    return (
+      <Query
+        query={getHorizontalContent}
+        variables={{ itemId: this.props.contentId }}
+      >
+        {this.renderFeed}
+      </Query>
+    );
+  }
+}
+
+export default withNavigation(HorizontalContentFeed);
diff --git a/apolloschurchapp/src/content-single/MediaControls/getContentMedia.js b/apolloschurchapp/src/content-single/MediaControls/getContentMedia.js
new file mode 100644
index 0000000..8ab3d1a
--- /dev/null
+++ b/apolloschurchapp/src/content-single/MediaControls/getContentMedia.js
@@ -0,0 +1,26 @@
+import gql from 'graphql-tag';
+
+export default gql`
+  query getContentMedia($contentId: ID!) {
+    node(id: $contentId) {
+      ... on ContentItem {
+        id
+        title
+        parentChannel {
+          id
+          name
+        }
+        coverImage {
+          sources {
+            uri
+          }
+        }
+        videos {
+          sources {
+            uri
+          }
+        }
+      }
+    }
+  }
+`;
diff --git a/apolloschurchapp/src/content-single/MediaControls/index.js b/apolloschurchapp/src/content-single/MediaControls/index.js
new file mode 100644
index 0000000..994e4b0
--- /dev/null
+++ b/apolloschurchapp/src/content-single/MediaControls/index.js
@@ -0,0 +1,104 @@
+import React, { PureComponent } from 'react';
+import PropTypes from 'prop-types';
+import { Query, Mutation } from 'react-apollo';
+import { View } from 'react-native';
+import { get } from 'lodash';
+
+import { playVideoMutation } from 'apolloschurchapp/src/ui/MediaPlayer/mutations';
+import { Icon, styled, Button } from '@apollosproject/ui-kit';
+import getContentMedia from './getContentMedia';
+
+const buttonSizeDifferential = 4;
+
+const MediaIcon = Icon; // todo: add back styles
+const MediaButton = styled(({ theme }) => ({
+  width: theme.sizing.baseUnit * buttonSizeDifferential,
+  height: theme.sizing.baseUnit * buttonSizeDifferential,
+  borderRadius: theme.sizing.baseUnit * (buttonSizeDifferential / 2),
+  backgroundColor: theme.colors.secondary,
+  justifyContent: 'center',
+  alignItems: 'center',
+  borderWidth: 0, // remove default button border
+}))(Button);
+
+/** MediaButtton "border styles" live in a seperate component so that Android places it's elevation
+ * shadow in the right place. */
+const MediaButtonBorder = styled(({ theme }) => ({
+  borderRadius:
+    theme.sizing.baseUnit * (buttonSizeDifferential / 2) +
+    buttonSizeDifferential, // this is eqivalent to the MediaButton size above + the padding below
+  padding: buttonSizeDifferential, // padding + backgroundColor = MediaButton + "borderStyles"
+  backgroundColor: theme.colors.paper,
+}))(View);
+
+const Container = styled(({ theme }) => ({
+  flexDirection: 'row',
+  alignItems: 'center',
+  justifyContent: 'center',
+  marginTop:
+    -theme.sizing.baseUnit * (buttonSizeDifferential / 2) -
+    buttonSizeDifferential, // MediaButton size / 2 + border
+}))(View);
+
+class MediaControls extends PureComponent {
+  static propTypes = {
+    contentId: PropTypes.string,
+  };
+
+  renderControls = ({
+    loading,
+    error,
+    data: {
+      node: { videos, title, parentChannel = {}, coverImage = {} } = {},
+    } = {},
+  }) => {
+    if (loading || error) return null;
+
+    const videoSource = get(videos, '[0].sources[0]', null);
+    const coverImageSources = (coverImage && coverImage.sources) || [];
+
+    return (
+      <Mutation mutation={playVideoMutation}>
+        {(play) => (
+          <Container>
+            {videoSource ? (
+              <MediaButtonBorder>
+                <MediaButton
+                  type="primary"
+                  onPress={() =>
+                    play({
+                      variables: {
+                        mediaSource: videoSource,
+                        posterSources: coverImageSources,
+                        title,
+                        isVideo: true,
+                        artist: parentChannel.name,
+                      },
+                    })
+                  }
+                  useForeground
+                >
+                  <MediaIcon name="play" />
+                </MediaButton>
+              </MediaButtonBorder>
+            ) : null}
+          </Container>
+        )}
+      </Mutation>
+    );
+  };
+
+  render() {
+    if (!this.props.contentId) return null;
+    return (
+      <Query
+        query={getContentMedia}
+        variables={{ contentId: this.props.contentId }}
+      >
+        {this.renderControls}
+      </Query>
+    );
+  }
+}
+
+export default MediaControls;
diff --git a/apolloschurchapp/src/content-single/NavigationHeader.js b/apolloschurchapp/src/content-single/NavigationHeader.js
index 15b9d7b..50a10ff 100644
--- a/apolloschurchapp/src/content-single/NavigationHeader.js
+++ b/apolloschurchapp/src/content-single/NavigationHeader.js
@@ -5,11 +5,22 @@ import { ModalViewHeader } from '@apollosproject/ui-kit';
 const NavigationHeader = ({ scene, navigation }) => {
   let onBack = null;
   if (scene.index > 0) onBack = () => navigation.pop();
+
   const onClose = () => {
-    navigation.goBack();
+    // Since we're dealing with nested navigators, we have to trigger two actions:
+    // One action that pops us to the top of the modal's navigation history
+    // Another action that pops us one more level, which triggers the modal to close.
+    //
+    // FWIW, calling something like `.pop(scenes.length + 1)` or something does not work,
+    // as that results in the same thing as `.popToTop()`. React-Navigation must have some special-case
+    // handling for calling `.pop()` at the top of a nested navigators stack.
+    //
+    // Because react (or redux?) chains renders, this still results in only one clean animation!
+    navigation.popToTop();
+    navigation.pop();
   };
 
-  return <ModalViewHeader onClose={onClose} onBack={onBack} navigationHeader />;
+  return <ModalViewHeader onClose={onClose} onBack={onBack} />;
 };
 
 NavigationHeader.propTypes = {
diff --git a/apolloschurchapp/src/content-single/UniversalContentItem/index.js b/apolloschurchapp/src/content-single/UniversalContentItem/index.js
index c2e2029..f34789c 100644
--- a/apolloschurchapp/src/content-single/UniversalContentItem/index.js
+++ b/apolloschurchapp/src/content-single/UniversalContentItem/index.js
@@ -1,59 +1,41 @@
 import React from 'react';
-import { Animated } from 'react-native';
+import { ScrollView } from 'react-native';
 import { get } from 'lodash';
 import PropTypes from 'prop-types';
-import {
-  ContentHTMLViewConnected,
-  HorizontalContentSeriesFeedConnected,
-  MediaControlsConnected,
-  ContentSingleFeaturesConnected,
-  UpNextButtonConnected,
-} from '@apollosproject/ui-connected';
 import {
   styled,
   GradientOverlayImage,
   BackgroundView,
   PaddedView,
   H2,
-  StretchyView,
 } from '@apollosproject/ui-kit';
+import MediaControls from '../MediaControls';
+import HTMLContent from '../HTMLContent';
+import HorizontalContentFeed from '../HorizontalContentFeed';
 
-const FlexedScrollView = styled({ flex: 1 })(Animated.ScrollView);
-
-const StyledMediaControlsConnected = styled(({ theme }) => ({
-  marginTop: -(theme.sizing.baseUnit * 2.5),
-}))(MediaControlsConnected);
+const FlexedScrollView = styled({ flex: 1 })(ScrollView);
 
 const UniversalContentItem = ({ content, loading }) => {
   const coverImageSources = get(content, 'coverImage.sources', []);
   return (
-    <BackgroundView>
-      <StretchyView>
-        {({ Stretchy, ...scrollViewProps }) => (
-          <FlexedScrollView {...scrollViewProps}>
-            {coverImageSources.length || loading ? (
-              <Stretchy>
-                <GradientOverlayImage
-                  isLoading={!coverImageSources.length && loading}
-                  source={coverImageSources}
-                />
-              </Stretchy>
-            ) : null}
-            <StyledMediaControlsConnected contentId={content.id} />
-            {/* fixes text/navigation spacing by adding vertical padding if we dont have an image */}
-            <PaddedView vertical={!coverImageSources.length}>
-              <H2 padded isLoading={!content.title && loading}>
-                {content.title}
-              </H2>
-              <ContentHTMLViewConnected contentId={content.id} />
-            </PaddedView>
-            <ContentSingleFeaturesConnected contentId={content.id} />
-            <UpNextButtonConnected contentId={content.id} />
-            <HorizontalContentSeriesFeedConnected contentId={content.id} />
-          </FlexedScrollView>
-        )}
-      </StretchyView>
-    </BackgroundView>
+    <FlexedScrollView>
+      {coverImageSources.length || loading ? (
+        <GradientOverlayImage
+          isLoading={!coverImageSources.length && loading}
+          source={coverImageSources}
+        />
+      ) : null}
+      <BackgroundView>
+        <MediaControls contentId={content.id} />
+        <PaddedView>
+          <H2 padded isLoading={!content.title && loading}>
+            {content.title}
+          </H2>
+          <HTMLContent contentId={content.id} />
+        </PaddedView>
+        <HorizontalContentFeed contentId={content.id} />
+      </BackgroundView>
+    </FlexedScrollView>
   );
 };
 
diff --git a/apolloschurchapp/src/content-single/WeekendContentItem/index.js b/apolloschurchapp/src/content-single/WeekendContentItem/index.js
deleted file mode 100644
index 85ca33f..0000000
--- a/apolloschurchapp/src/content-single/WeekendContentItem/index.js
+++ /dev/null
@@ -1,120 +0,0 @@
-import React from 'react';
-import { Animated, Dimensions } from 'react-native';
-import { get } from 'lodash';
-import PropTypes from 'prop-types';
-import {
-  ContentHTMLViewConnected,
-  HorizontalContentSeriesFeedConnected,
-  LiveConsumer,
-  MediaControlsConnected,
-  ContentSingleFeaturesConnected,
-} from '@apollosproject/ui-connected';
-import {
-  styled,
-  GradientOverlayImage,
-  BackgroundView,
-  PaddedView,
-  H2,
-  StretchyView,
-  ThemeMixin,
-  ThemeConsumer,
-  CardLabel,
-  withTheme,
-} from '@apollosproject/ui-kit';
-
-const FlexedScrollView = styled({ flex: 1 })(Animated.ScrollView);
-
-const Header = styled(({ hasMedia, theme }) => ({
-  paddingTop: Dimensions.get('window').width * 0.5, // for some reason % based padding still is buggy
-  alignItems: 'flex-start',
-  paddingBottom: hasMedia ? theme.sizing.baseUnit : theme.sizing.baseUnit * 2,
-  // backgroundColor: theme.colors.primary,
-}))(PaddedView);
-
-const StyledMediaControlsConnected = styled(({ theme }) => ({
-  marginTop: -(theme.sizing.baseUnit * 2.5),
-}))(MediaControlsConnected);
-
-const LiveAwareLabel = withTheme(({ isLive, title, theme }) => ({
-  ...(isLive
-    ? {
-        title: 'Live',
-        type: 'secondary',
-        icon: 'live-dot',
-        iconSize: theme.helpers.rem(0.4375), // using our typographic size unit based on fontSize so that the icon scales correctly with font size changes.
-      }
-    : {
-        title,
-      }),
-}))(CardLabel);
-
-const WeekendContentItem = ({ content, loading }) => {
-  const coverImageSources = get(content, 'coverImage.sources', []);
-  return (
-    <ThemeConsumer>
-      {(theme) => (
-        <BackgroundView>
-          <StretchyView>
-            {({ Stretchy, ...scrollViewProps }) => (
-              <FlexedScrollView {...scrollViewProps}>
-                <Header hasMedia={content.videos && content.videos.sources}>
-                  <ThemeMixin mixin={{ type: 'dark' }}>
-                    {coverImageSources.length || loading ? (
-                      <Stretchy
-                        background
-                        style={{ backgroundColor: theme.colors.primary }}
-                      >
-                        <GradientOverlayImage
-                          isLoading={!coverImageSources.length && loading}
-                          overlayColor={theme.colors.primary}
-                          overlayType="featured"
-                          source={coverImageSources}
-                        />
-                      </Stretchy>
-                    ) : null}
-                    <LiveConsumer contentId={content.id}>
-                      {(liveStream) => (
-                        <LiveAwareLabel
-                          isLive={!!liveStream}
-                          title={
-                            content.parentChannel && content.parentChannel.name
-                          }
-                        />
-                      )}
-                    </LiveConsumer>
-                    <H2 padded isLoading={!content.title && loading}>
-                      {content.title}
-                    </H2>
-                    <ContentHTMLViewConnected contentId={content.id} />
-                  </ThemeMixin>
-                </Header>
-                <StyledMediaControlsConnected contentId={content.id} />
-                <ContentSingleFeaturesConnected contentId={content.id} />
-                <HorizontalContentSeriesFeedConnected contentId={content.id} />
-              </FlexedScrollView>
-            )}
-          </StretchyView>
-        </BackgroundView>
-      )}
-    </ThemeConsumer>
-  );
-};
-
-WeekendContentItem.propTypes = {
-  content: PropTypes.shape({
-    __typename: PropTypes.string,
-    parentChannel: PropTypes.shape({
-      name: PropTypes.string,
-    }),
-    id: PropTypes.string,
-    title: PropTypes.string,
-    videos: PropTypes.arrayOf(
-      PropTypes.shape({
-        sources: PropTypes.arrayOf(PropTypes.shape({ uri: PropTypes.string })),
-      })
-    ),
-  }),
-  loading: PropTypes.bool,
-};
-
-export default WeekendContentItem;
diff --git a/apolloschurchapp/src/content-single/getContentItem.js b/apolloschurchapp/src/content-single/getContentItem.js
index 40de3cb..40b8221 100644
--- a/apolloschurchapp/src/content-single/getContentItem.js
+++ b/apolloschurchapp/src/content-single/getContentItem.js
@@ -1,14 +1,50 @@
 import gql from 'graphql-tag';
-import ApollosConfig from '@apollosproject/config';
+
+export const contentItemFragment = gql`
+  fragment contentItemFragment on ContentItem {
+    id
+    title
+    isLiked
+    coverImage {
+      name
+      sources {
+        uri
+      }
+    }
+    theme {
+      type
+      colors {
+        primary
+        secondary
+        screen
+        paper
+      }
+    }
+    parentChannel {
+      id
+      name
+    }
+    videos {
+      sources {
+        uri
+      }
+    }
+    audios {
+      sources {
+        uri
+      }
+    }
+  }
+`;
 
 export default gql`
   query getContentItem($itemId: ID!) {
     node(id: $itemId) {
       __typename
       ... on ContentItem {
-        ...contentCardFragment
+        ...contentItemFragment
       }
     }
   }
-  ${ApollosConfig.FRAGMENTS.CONTENT_CARD_FRAGMENT}
+  ${contentItemFragment}
 `;
diff --git a/apolloschurchapp/src/content-single/index.js b/apolloschurchapp/src/content-single/index.js
index 1e5b838..f5b2709 100644
--- a/apolloschurchapp/src/content-single/index.js
+++ b/apolloschurchapp/src/content-single/index.js
@@ -1,17 +1,104 @@
-import { createStackNavigator } from 'react-navigation';
-
-import ContentSingle from './ContentSingle';
-
-const ContentSingleNavigator = createStackNavigator(
-  {
-    ContentSingle,
-  },
-  {
-    initialRouteName: 'ContentSingle',
-    headerMode: 'float',
-    headerTransitionPreset: 'fade-in-place',
-    navigationOptions: { header: null },
+import React, { PureComponent } from 'react';
+import { Query } from 'react-apollo';
+import { get } from 'lodash';
+import PropTypes from 'prop-types';
+
+import { ErrorCard, ThemeMixin } from '@apollosproject/ui-kit';
+
+import TrackEventWhenLoaded from 'apolloschurchapp/src/analytics/TrackEventWhenLoaded';
+import { events } from 'apolloschurchapp/src/analytics';
+
+import ActionContainer from './ActionContainer';
+import getContentItem from './getContentItem';
+
+import DevotionalContentItem from './DevotionalContentItem';
+import UniversalContentItem from './UniversalContentItem';
+
+import NavigationHeader from './NavigationHeader';
+
+class ContentSingle extends PureComponent {
+  static propTypes = {
+    navigation: PropTypes.shape({
+      getParam: PropTypes.func,
+      push: PropTypes.func,
+    }),
+  };
+
+  static navigationOptions = {
+    header: NavigationHeader,
+  };
+
+  get itemId() {
+    return this.props.navigation.getParam('itemId', []);
+  }
+
+  get queryVariables() {
+    return { itemId: this.itemId };
+  }
+
+  renderContent = ({ content, loading, error }) => {
+    let { __typename } = content;
+    if (!__typename && this.itemId) {
+      [__typename] = this.itemId.split(':');
+    }
+    switch (__typename) {
+      case 'DevotionalContentItem':
+        return (
+          <DevotionalContentItem
+            id={this.itemId}
+            content={content}
+            loading={loading}
+            error={error}
+          />
+        );
+      case 'UniversalContentItem':
+      default:
+        return (
+          <UniversalContentItem
+            id={this.itemId}
+            content={content}
+            loading={loading}
+            error={error}
+          />
+        );
+    }
+  };
+
+  renderWithData = ({ loading, error, data }) => {
+    if (error) return <ErrorCard error={error} />;
+
+    const content = data.node || {};
+
+    const { theme = {}, id } = content;
+
+    return (
+      <ThemeMixin
+        mixin={{
+          type: get(theme, 'type', 'light').toLowerCase(),
+          colors: get(theme, 'colors'),
+        }}
+      >
+        <TrackEventWhenLoaded
+          loaded={!!(!loading && content.title)}
+          eventName={events.ViewContent}
+          properties={{
+            title: content.title,
+            itemId: this.itemId,
+          }}
+        />
+        {this.renderContent({ content, loading, error })}
+        <ActionContainer itemId={id} />
+      </ThemeMixin>
+    );
+  };
+
+  render() {
+    return (
+      <Query query={getContentItem} variables={this.queryVariables}>
+        {this.renderWithData}
+      </Query>
+    );
   }
-);
+}
 
-export default ContentSingleNavigator;
+export default ContentSingle;
diff --git a/apolloschurchapp/src/event/Event.js b/apolloschurchapp/src/event/Event.js
deleted file mode 100644
index be51790..0000000
--- a/apolloschurchapp/src/event/Event.js
+++ /dev/null
@@ -1,75 +0,0 @@
-import React from 'react';
-import { get } from 'lodash';
-import PropTypes from 'prop-types';
-import moment from 'moment';
-import InAppBrowser from 'react-native-inappbrowser-reborn';
-import {
-  GradientOverlayImage,
-  BackgroundView,
-  PaddedView,
-  H2,
-  Paragraph,
-  StretchyView,
-} from '@apollosproject/ui-kit';
-import HTMLView from '@apollosproject/ui-htmlview';
-
-import { FlexedScrollView, EventInfoItem } from './components';
-
-const handlePressAnchor = (url) => {
-  InAppBrowser.open(url);
-};
-
-const Event = ({ event, loading }) => {
-  const coverImageSources = get(event, 'image.sources', []);
-  return (
-    <BackgroundView>
-      <StretchyView>
-        {({ Stretchy, ...scrollViewProps }) => (
-          <FlexedScrollView {...scrollViewProps}>
-            {coverImageSources.length || loading ? (
-              <Stretchy>
-                <GradientOverlayImage
-                  isLoading={!coverImageSources.length && loading}
-                  source={coverImageSources}
-                />
-              </Stretchy>
-            ) : null}
-            <PaddedView vertical={false}>
-              <H2 padded isLoading={!event.name && loading}>
-                {event.name}
-              </H2>
-              <Paragraph>
-                <EventInfoItem
-                  icon={'time'}
-                  title={moment(event.start).format('ddd, MMMM Do, YYYY')}
-                  subtitle={`${moment(event.start).format('LT')} — ${moment(
-                    event.end
-                  ).format('LT')}`}
-                />
-                <EventInfoItem icon={'pin'} title={event.location} />
-              </Paragraph>
-              <HTMLView isLoading={loading} onPressAnchor={handlePressAnchor}>
-                {event.description}
-              </HTMLView>
-            </PaddedView>
-          </FlexedScrollView>
-        )}
-      </StretchyView>
-    </BackgroundView>
-  );
-};
-
-Event.propTypes = {
-  event: PropTypes.shape({
-    __typename: PropTypes.string,
-    id: PropTypes.string,
-    name: PropTypes.string,
-    description: PropTypes.string,
-    start: PropTypes.string,
-    end: PropTypes.string,
-    location: PropTypes.string,
-  }),
-  loading: PropTypes.bool,
-};
-
-export default Event;
diff --git a/apolloschurchapp/src/event/Event.tests.js b/apolloschurchapp/src/event/Event.tests.js
deleted file mode 100644
index 03e543f..0000000
--- a/apolloschurchapp/src/event/Event.tests.js
+++ /dev/null
@@ -1,31 +0,0 @@
-import React from 'react';
-import renderer from 'react-test-renderer';
-import moment from 'moment';
-
-import Providers from '../Providers';
-
-import Event from './Event';
-
-describe('The Event component', () => {
-  it('should render', () => {
-    const tree = renderer.create(
-      <Providers>
-        <Event
-          event={{
-            __typename: 'Event',
-            id: 'Event:123',
-            start: moment('2019-09-26T15:10:51.200Z')
-              .utc()
-              .toJSON(),
-            end: moment('2019-09-26T17:10:51.200Z')
-              .utc()
-              .toJSON(),
-            location: 'Willow Creek, Chicago',
-            image: { sources: [{ url: 'https://url.com/image.jpg' }] },
-          }}
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/event/EventConnected.js b/apolloschurchapp/src/event/EventConnected.js
deleted file mode 100644
index ea33975..0000000
--- a/apolloschurchapp/src/event/EventConnected.js
+++ /dev/null
@@ -1,81 +0,0 @@
-import React, { PureComponent } from 'react';
-import { Query } from 'react-apollo';
-import { get } from 'lodash';
-import PropTypes from 'prop-types';
-
-import { ErrorCard, ThemeMixin } from '@apollosproject/ui-kit';
-
-import { TrackEventWhenLoaded } from '@apollosproject/ui-analytics';
-
-import NavigationHeader from '../content-single/NavigationHeader';
-import Event from './Event';
-import GET_EVENT from './getEvent';
-
-class EventConnected extends PureComponent {
-  static propTypes = {
-    navigation: PropTypes.shape({
-      getParam: PropTypes.func,
-      push: PropTypes.func,
-    }),
-  };
-
-  get eventId() {
-    return this.props.navigation.getParam('eventId', []);
-  }
-
-  get queryVariables() {
-    return { eventId: this.eventId };
-  }
-
-  static navigationOptions = {
-    header: NavigationHeader,
-    headerTransparent: true,
-    headerMode: 'float',
-  };
-
-  renderWithData = ({ loading, error, data }) => {
-    if (error) return <ErrorCard error={error} />;
-
-    const event = data.node || {};
-
-    const { theme = {} } = event;
-
-    return (
-      <ThemeMixin
-        mixin={{
-          type: get(theme, 'type', 'light').toLowerCase(),
-          colors: get(theme, 'colors'),
-        }}
-      >
-        <TrackEventWhenLoaded
-          loaded={!!(!loading && event.name)}
-          eventName={'View Event'}
-          properties={{
-            title: event.name,
-            eventId: this.eventId,
-          }}
-        />
-        <Event
-          id={this.eventId}
-          event={event}
-          loading={loading}
-          error={error}
-        />
-      </ThemeMixin>
-    );
-  };
-
-  render() {
-    return (
-      <Query
-        query={GET_EVENT}
-        fetchPolicy="network-only"
-        variables={this.queryVariables}
-      >
-        {this.renderWithData}
-      </Query>
-    );
-  }
-}
-
-export default EventConnected;
diff --git a/apolloschurchapp/src/event/EventConnected.tests.js b/apolloschurchapp/src/event/EventConnected.tests.js
deleted file mode 100644
index c32b77e..0000000
--- a/apolloschurchapp/src/event/EventConnected.tests.js
+++ /dev/null
@@ -1,53 +0,0 @@
-import React from 'react';
-
-import moment from 'moment';
-import Providers from '../Providers';
-
-import { renderWithApolloData } from '../utils/testUtils';
-import getEvent from './getEvent';
-import EventConnected from './EventConnected';
-
-const mocks = {
-  request: {
-    query: getEvent,
-    variables: { eventId: 'Event:123' },
-  },
-  result: {
-    data: {
-      node: {
-        __typename: 'Event',
-        id: 'Event:123',
-        start: moment('2019-09-26T15:10:51.200Z')
-          .utc()
-          .toJSON(),
-        end: moment('2019-09-26T17:10:51.200Z')
-          .utc()
-          .toJSON(),
-        location: 'Willow Creek, Chicago',
-        name: 'Cookout',
-        description: 'Some detailed description',
-        image: {
-          __typename: 'ImageMedia',
-          sources: [
-            {
-              uri: 'https://url.com/image.jpg',
-              __typename: 'ImageMediaSource',
-            },
-          ],
-        },
-      },
-    },
-  },
-};
-
-describe('EventConnected component', () => {
-  it('renders without errors', async () => {
-    const tree = await renderWithApolloData(
-      <Providers mocks={[mocks]}>
-        <EventConnected navigation={{ getParam: () => 'Event:123' }} />
-      </Providers>
-    );
-
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/event/components.js b/apolloschurchapp/src/event/components.js
deleted file mode 100644
index f227415..0000000
--- a/apolloschurchapp/src/event/components.js
+++ /dev/null
@@ -1,44 +0,0 @@
-import React from 'react';
-import { Animated, View } from 'react-native';
-import PropTypes from 'prop-types';
-import { styled, withTheme, H6, H4, Icon } from '@apollosproject/ui-kit';
-
-const FlexedScrollView = styled({ flex: 1 })(Animated.ScrollView);
-
-const StyledIcon = withTheme(({ theme: { colors, sizing } }) => ({
-  fill: colors.text.tertiary,
-  size: sizing.baseUnit * 1.5,
-  style: {
-    marginRight: 8,
-  },
-}))(Icon);
-
-const StyledH6 = styled(({ theme: { colors, sizing } }) => ({
-  color: colors.text.tertiary,
-  fontSize: sizing.baseUnit * 0.875,
-  marginTop: sizing.baseUnit / 4,
-}))(H6);
-
-const EventInfoContainer = styled({ marginBottom: 24, flexDirection: 'row' })(
-  View
-);
-
-const TextContainer = styled({ flexDirection: 'column' })(View);
-
-const EventInfoItem = ({ icon, title, subtitle }) => (
-  <EventInfoContainer>
-    <StyledIcon name={icon} />
-    <TextContainer>
-      <H4 bold>{title}</H4>
-      <StyledH6>{subtitle}</StyledH6>
-    </TextContainer>
-  </EventInfoContainer>
-);
-
-EventInfoItem.propTypes = {
-  icon: PropTypes.string.isRequired,
-  title: PropTypes.string,
-  subtitle: PropTypes.string,
-};
-
-export { FlexedScrollView, EventInfoItem };
diff --git a/apolloschurchapp/src/event/getEvent.js b/apolloschurchapp/src/event/getEvent.js
deleted file mode 100644
index 059cb9f..0000000
--- a/apolloschurchapp/src/event/getEvent.js
+++ /dev/null
@@ -1,29 +0,0 @@
-import gql from 'graphql-tag';
-
-export const EVENT_FRAGMENT = gql`
-  fragment eventFragment on Event {
-    id
-    name
-    location
-    start
-    end
-    description
-    image {
-      sources {
-        uri
-      }
-    }
-  }
-`;
-
-export default gql`
-  query getEvent($eventId: ID!) {
-    node(id: $eventId) {
-      __typename
-      ... on Event {
-        ...eventFragment
-      }
-    }
-  }
-  ${EVENT_FRAGMENT}
-`;
diff --git a/apolloschurchapp/src/event/index.js b/apolloschurchapp/src/event/index.js
deleted file mode 100644
index b065c4c..0000000
--- a/apolloschurchapp/src/event/index.js
+++ /dev/null
@@ -1,17 +0,0 @@
-import { createStackNavigator } from 'react-navigation';
-
-import Event from './EventConnected';
-
-const EventNavigator = createStackNavigator(
-  {
-    Event,
-  },
-  {
-    initialRouteName: 'Event',
-    headerMode: 'float',
-    headerTransitionPreset: 'fade-in-place',
-    navigationOptions: { header: null },
-  }
-);
-
-export default EventNavigator;
diff --git a/apolloschurchapp/src/index.js b/apolloschurchapp/src/index.js
index c667d48..7fe89f1 100644
--- a/apolloschurchapp/src/index.js
+++ b/apolloschurchapp/src/index.js
@@ -1,86 +1,53 @@
-import hoistNonReactStatic from 'hoist-non-react-statics';
 import React from 'react';
 import { StatusBar } from 'react-native';
-import { createStackNavigator, createAppContainer } from 'react-navigation';
-import RNBootSplash from 'react-native-bootsplash';
-
-import {
-  BackgroundView,
-  withTheme,
-  NavigationService,
-} from '@apollosproject/ui-kit';
-import Passes from '@apollosproject/ui-passes';
-import { CoreNavigationAnalytics } from '@apollosproject/ui-analytics';
-import { MapViewConnected as Location } from '@apollosproject/ui-mapview';
-import { MediaPlayer } from '@apollosproject/ui-media-player';
-import Auth, { ProtectedRoute } from '@apollosproject/ui-auth';
+import { createStackNavigator } from 'react-navigation';
+// import { Sentry } from 'react-native-sentry';
 
+import { BackgroundView, withTheme } from '@apollosproject/ui-kit';
+import MediaPlayer from 'apolloschurchapp/src/ui/MediaPlayer';
 import Providers from './Providers';
+import NotificationsInit from './Notifications';
+import NavigationService from './NavigationService';
 import ContentSingle from './content-single';
-import Event from './event';
 import Tabs from './tabs';
+import Auth from './auth';
 import PersonalDetails from './user-settings/PersonalDetails';
 import ChangePassword from './user-settings/ChangePassword';
-import LandingScreen from './LandingScreen';
-import UserWebBrowser from './user-web-browser';
-import Onboarding from './ui/Onboarding';
 
-console.log(CoreNavigationAnalytics);
+// Sentry.config(
+//   'https://5908fa19ed37447f86b2717423cadec5:45dd3b58792b413cb67109c5e63a0bb7@sentry.io/1241658'
+// ).install();
 
 const AppStatusBar = withTheme(({ theme }) => ({
-  barStyle: theme.barStyle,
-  backgroundColor: theme.colors.background.paper,
+  barStyle: 'dark-content',
+  backgroundColor: theme.colors.paper,
 }))(StatusBar);
 
-const ProtectedRouteWithSplashScreen = (props) => {
-  const handleOnRouteChange = () => RNBootSplash.hide({ duration: 250 });
-
-  return <ProtectedRoute {...props} onRouteChange={handleOnRouteChange} />;
-};
-
-// Hack to avoid needing to pass emailRequired through the navigator.navigate
-const EnhancedAuth = (props) => <Auth {...props} emailRequired />;
-// 😑
-hoistNonReactStatic(EnhancedAuth, Auth);
-
 const AppNavigator = createStackNavigator(
   {
-    ProtectedRoute: ProtectedRouteWithSplashScreen,
     Tabs,
     ContentSingle,
-    Event,
-    Auth: EnhancedAuth,
+    Auth,
     PersonalDetails,
     ChangePassword,
-    Location,
-    Passes,
-    UserWebBrowser,
-    Onboarding,
-    LandingScreen,
   },
   {
-    initialRouteName: 'ProtectedRoute',
+    initialRouteName: 'Tabs',
     mode: 'modal',
     headerMode: 'screen',
   }
 );
 
-const AppContainer = createAppContainer(AppNavigator);
-
 const App = () => (
   <Providers>
     <BackgroundView>
-      <AppStatusBar />
-      <CoreNavigationAnalytics>
-        {(props) => (
-          <AppContainer
-            ref={(navigatorRef) => {
-              NavigationService.setTopLevelNavigator(navigatorRef);
-            }}
-            {...props}
-          />
-        )}
-      </CoreNavigationAnalytics>
+      <AppStatusBar barStyle="dark-content" />
+      <AppNavigator
+        ref={(navigatorRef) => {
+          NavigationService.setTopLevelNavigator(navigatorRef);
+        }}
+      />
+      <NotificationsInit />
       <MediaPlayer />
     </BackgroundView>
   </Providers>
diff --git a/apolloschurchapp/src/__tests__/index.test.js b/apolloschurchapp/src/index.test.js
similarity index 87%
rename from apolloschurchapp/src/__tests__/index.test.js
rename to apolloschurchapp/src/index.test.js
index 92aedcb..dcea081 100644
--- a/apolloschurchapp/src/__tests__/index.test.js
+++ b/apolloschurchapp/src/index.test.js
@@ -1,7 +1,7 @@
 import renderer from 'react-test-renderer';
 import React from 'react';
 
-import App from '../index';
+import App from '.';
 
 it('renders without crashing', () => {
   const rendered = renderer.create(<App />).toJSON();
diff --git a/apolloschurchapp/src/live/LiveButton.js b/apolloschurchapp/src/live/LiveButton.js
new file mode 100644
index 0000000..c5760e3
--- /dev/null
+++ b/apolloschurchapp/src/live/LiveButton.js
@@ -0,0 +1,57 @@
+import React from 'react';
+import { Query } from 'react-apollo';
+import { get } from 'lodash';
+
+import {
+  Card,
+  CardContent,
+  TouchableScale,
+  styled,
+  ChannelLabel,
+  UIText,
+} from '@apollosproject/ui-kit';
+import { WebBrowserConsumer } from 'apolloschurchapp/src/ui/WebBrowser';
+
+import getLiveStream from './getLiveStream';
+
+const LiveCard = styled(({ theme }) => ({
+  backgroundColor: theme.colors.lightSecondary,
+}))(Card);
+
+const LiveNowButton = () => (
+  <Query
+    query={getLiveStream}
+    fetchPolicy="cache-and-network"
+    pollInterval={60000}
+  >
+    {({ loading, data }) => {
+      const isLive = get(data, 'liveStream.isLive', false);
+
+      return isLive ? (
+        <WebBrowserConsumer>
+          {(openUrl) => (
+            <TouchableScale
+              onPress={() => openUrl('https://apollos.churchonline.org/')}
+            >
+              <LiveCard isLoading={loading}>
+                <CardContent>
+                  <ChannelLabel
+                    icon="video"
+                    label={
+                      <UIText>
+                        <UIText bold>{`We're live.`} </UIText>
+                        Watch now!
+                      </UIText>
+                    }
+                  />
+                </CardContent>
+              </LiveCard>
+            </TouchableScale>
+          )}
+        </WebBrowserConsumer>
+      ) : null;
+    }}
+  </Query>
+);
+
+export default LiveNowButton;
diff --git a/apolloschurchapp/src/live/LiveButton.tests.js b/apolloschurchapp/src/live/LiveButton.tests.js
new file mode 100644
index 0000000..0ac2b75
--- /dev/null
+++ b/apolloschurchapp/src/live/LiveButton.tests.js
@@ -0,0 +1,32 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import LiveNowButton from './LiveButton';
+import getLiveStream from './getLiveStream';
+
+const mocks = [
+  {
+    request: {
+      query: getLiveStream,
+      variables: {
+        isLive: true,
+      },
+    },
+    result: {
+      data: {
+        liveStream: { isLive: true },
+      },
+    },
+  },
+];
+
+it('renders without error', () => {
+  const tree = renderer.create(
+    <Providers mocks={mocks} addTypename={false}>
+      <LiveNowButton isLive />
+    </Providers>
+  );
+  expect(tree).toMatchSnapshot();
+});
diff --git a/apolloschurchapp/src/live/getLiveStream.js b/apolloschurchapp/src/live/getLiveStream.js
new file mode 100644
index 0000000..55ae4e5
--- /dev/null
+++ b/apolloschurchapp/src/live/getLiveStream.js
@@ -0,0 +1,9 @@
+import gql from 'graphql-tag';
+
+export default gql`
+  query getLiveStream {
+    liveStream {
+      isLive
+    }
+  }
+`;
diff --git a/apolloschurchapp/src/live/index.js b/apolloschurchapp/src/live/index.js
new file mode 100644
index 0000000..1612958
--- /dev/null
+++ b/apolloschurchapp/src/live/index.js
@@ -0,0 +1 @@
+export LiveButton from './LiveButton';
diff --git a/apolloschurchapp/src/scripture/ScriptureConnected.tests.js b/apolloschurchapp/src/scripture/ScriptureConnected.tests.js
new file mode 100644
index 0000000..04b5361
--- /dev/null
+++ b/apolloschurchapp/src/scripture/ScriptureConnected.tests.js
@@ -0,0 +1,38 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+import wait from 'waait';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import getScripture from './getScripture';
+import ScriptureConnected from '.';
+
+const mocks = {
+  request: {
+    query: getScripture,
+    variables: { query: 'Genesis 1:1' },
+  },
+  result: {
+    data: {
+      scripture: {
+        id: 'GEN.1.1',
+        reference: 'Genesis 1:1',
+        copyright: 'PUBLIC DOMAIN',
+        html:
+          '<p class="p"><span data-number="1" class="v">1</span>In the beginning, God created the heavens and the earth. </p>',
+      },
+    },
+  },
+};
+
+describe('ScriptureConnected component', () => {
+  it('renders without errors', async () => {
+    const tree = renderer.create(
+      <Providers mocks={[mocks]} addTypename={false}>
+        <ScriptureConnected references={['Genesis 1:1']} />
+      </Providers>
+    );
+    await wait(0); // wait for response from graphql
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/scripture/getScripture.js b/apolloschurchapp/src/scripture/getScripture.js
new file mode 100644
index 0000000..db1ef40
--- /dev/null
+++ b/apolloschurchapp/src/scripture/getScripture.js
@@ -0,0 +1,11 @@
+import gql from 'graphql-tag';
+
+export default gql`
+  query GetScripture($query: String!) {
+    scripture(query: $query) {
+      reference
+      html
+      copyright
+    }
+  }
+`;
diff --git a/apolloschurchapp/src/scripture/index.js b/apolloschurchapp/src/scripture/index.js
new file mode 100644
index 0000000..5c7e682
--- /dev/null
+++ b/apolloschurchapp/src/scripture/index.js
@@ -0,0 +1,41 @@
+import React from 'react';
+import { Query } from 'react-apollo';
+import { get } from 'lodash';
+import PropTypes from 'prop-types';
+import ScriptureItem from 'apolloschurchapp/src/ui/Scripture/ScriptureItem';
+import getScripture from './getScripture';
+
+/**
+ * This is the data-bound "connected" scripture component.
+ * Maps over the array of references, does a query to the API for each reference,
+ * then passes that returned data to the ScriptureComponent for rendering.
+ */
+const ScriptureConnected = ({
+  ScriptureComponent = ScriptureItem,
+  references,
+}) =>
+  references.map((query) => (
+    <Query query={getScripture} variables={{ query }} key={query}>
+      {({ loading, data }) => (
+        <ScriptureComponent
+          reference={get(data, 'scripture.reference', '')}
+          html={get(data, 'scripture.html', '')}
+          copyright={get(data, 'scripture.copyright', '')}
+          isLoading={loading}
+        />
+      )}
+    </Query>
+  ));
+
+/**
+ * Props passed to this connected component:
+ * ScriptureComponent: An optional component that would allow you to display
+ * scripture your way. Defaults to ScriptureItem.
+ * references: An array of strings of Bible verses (i.e. ['Genesis 1:1'])
+ */
+ScriptureConnected.propTypes = {
+  ScriptureComponent: PropTypes.element,
+  references: PropTypes.arrayOf(PropTypes.string),
+};
+
+export default ScriptureConnected;
diff --git a/apolloschurchapp/src/store/Auth.tests.js b/apolloschurchapp/src/store/Auth.tests.js
new file mode 100644
index 0000000..da6b401
--- /dev/null
+++ b/apolloschurchapp/src/store/Auth.tests.js
@@ -0,0 +1,11 @@
+import { client } from 'apolloschurchapp/src/client';
+
+import { resolvers } from '.';
+
+describe('Auth Store', () => {
+  it('logs a user out', async () => {
+    client.cache.writeData({ data: { authToken: 'some-auth-token' } });
+    resolvers.Mutation.logout({}, {}, { cache: client.cache });
+    expect(client.cache).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/store/MediaPlayer.tests.js b/apolloschurchapp/src/store/MediaPlayer.tests.js
new file mode 100644
index 0000000..68724b9
--- /dev/null
+++ b/apolloschurchapp/src/store/MediaPlayer.tests.js
@@ -0,0 +1,58 @@
+import { client } from 'apolloschurchapp/src/client';
+import gql from 'graphql-tag';
+
+import { resolvers, defaults } from '.';
+
+const query = gql`
+  query {
+    mediaPlayer @client {
+      currentTrack {
+        mediaSourceUri
+        posterSourceUri
+        title
+        artist
+      }
+      isPlaying
+      isFullscreen
+      isVisible
+    }
+  }
+`;
+
+const testTrack = {
+  parentId: 'parentId',
+  mediaSourceUri: 'mediaSourceUri',
+  posterSourceUri: 'posterSourceUri',
+  title: 'title',
+  artist: 'artist',
+};
+
+describe('MediaPlayer Store', () => {
+  beforeEach(() => {
+    client.writeData({ data: defaults });
+  });
+
+  it('plays a track', async () => {
+    resolvers.Mutation.mediaPlayerPlayNow({}, testTrack, {
+      cache: client.cache,
+    });
+    expect(client.query({ query })).resolves.toMatchSnapshot();
+  });
+  it('updates player state', async () => {
+    resolvers.Mutation.mediaPlayerPlayNow({}, testTrack, {
+      cache: client.cache,
+    });
+    expect(client.query({ query })).resolves.toMatchSnapshot();
+    resolvers.Mutation.mediaPlayerUpdateState(
+      {},
+      { isPlaying: false },
+      { cache: client.cache }
+    );
+    expect(client.query({ query })).resolves.toMatchSnapshot();
+    resolvers.Mutation.mediaPlayerUpdateState(
+      {},
+      { isPlaying: true },
+      { cache: client.cache }
+    );
+  });
+});
diff --git a/apolloschurchapp/src/store/index.js b/apolloschurchapp/src/store/index.js
index 153b2ea..2873934 100644
--- a/apolloschurchapp/src/store/index.js
+++ b/apolloschurchapp/src/store/index.js
@@ -1,62 +1,242 @@
+import { merge, get } from 'lodash';
 import gql from 'graphql-tag';
-
-import { schema as mediaPlayerSchema } from '@apollosproject/ui-media-player';
-import { updatePushId } from '@apollosproject/ui-notifications';
-import CACHE_LOADED from '../client/getCacheLoaded'; // eslint-disable-line
-
+import getLoginState from 'apolloschurchapp/src/auth/getLoginState';
+import { track, events } from 'apolloschurchapp/src/analytics';
+import { client } from '../client'; // eslint-disable-line
+import getAuthToken from './getAuthToken';
 // TODO: this will require more organization...ie...not keeping everything in one file.
 // But this is simple while our needs our small.
 
 export const schema = `
   type Query {
-    devicePushId: String
-    cacheLoaded: Boolean
-    notificationsEnabled: Boolean
+    authToken: String
+    mediaPlayer: MediaPlayerState
+    isLoggedIn: Boolean
   }
 
   type Mutation {
-    cacheMarkLoaded
-    updateDevicePushId(pushId: String!)
-    updatePushPermissions(enabled: Boolean!)
+    logout
+    mediaPlayerUpdateState(isPlaying: Boolean, isFullscreen: Boolean, isVisible: Boolean): Boolean
+    mediaPlayerSetPlayhead(currentTime: Float): Boolean
+    mediaPlayerPlayNow(
+      parentId: ID,
+      mediaSource: VideoMediaSource!,
+      posterSources: [ImageMediaSource],
+      title: String,
+      artist: String,
+      isVideo: Boolean,
+    ): Boolean
+
+    handleLogin(authToken: String!)
+  }
+
+  type MediaPlayerState {
+    currentTrack: MediaPlayerTrack
+    isPlaying: Boolean
+    isFullscreen: Boolean
+    isVisible: Boolean
+    currentTime: Float
+  }
+
+  type MediaPlayerProgress {
+    currentTime: Float
+    playableDuration: Float
+    seekableDuration: Float
+    duration: Float
+  }
+
+  type MediaPlayerTrack {
+    id: ID!
+    parentId: ID
+    mediaSource: VideoMediaSource!
+    posterSources: [ImageMediaSource]
+    title: String
+    artist: String
+    isVideo: Boolean
   }
-${mediaPlayerSchema}
 `;
 
 export const defaults = {
   __typename: 'Query',
-  cacheLoaded: false,
+  authToken: null,
+  mediaPlayer: {
+    __typename: 'MediaPlayerState',
+    currentTrack: null,
+    isPlaying: false,
+    isFullscreen: false,
+    isVisible: false,
+    currentTime: 0,
+    showVideo: true,
+    muted: false,
+  },
 };
 
-const GET_LOGGED_IN = gql`
-  query {
-    isLoggedIn @client
-  }
-`;
+let trackId = 0;
 
 export const resolvers = {
+  Query: {
+    isLoggedIn: () => {
+      // When logging out, this query returns an error.
+      // Rescue the error, and return false.
+      try {
+        const { authToken } = client.readQuery({ query: getAuthToken });
+        return !!authToken;
+      } catch (e) {
+        return false;
+      }
+    },
+  },
   Mutation: {
-    cacheMarkLoaded: async (root, args, { cache, client }) => {
-      cache.writeQuery({
-        query: CACHE_LOADED,
+    logout: (root, variables, { cache }) => {
+      client.resetStore();
+      cache.writeData({
+        data: defaults,
+      });
+      track({ eventName: events.UserLogout });
+      return null;
+    },
+
+    handleLogin: async (root, { authToken }, { cache }) => {
+      try {
+        await cache.writeQuery({
+          query: getAuthToken,
+          data: { authToken },
+        });
+        await cache.writeQuery({
+          query: getLoginState,
+          data: { isLoggedIn: true },
+        });
+        await cache.writeData({
+          data: { authToken },
+        });
+
+        track({ eventName: events.UserLogin });
+      } catch (e) {
+        throw e.message;
+      }
+
+      return null;
+    },
+
+    mediaPlayerPlayNow: (root, trackInfo, { cache }) => {
+      const query = gql`
+        query {
+          mediaPlayer {
+            isFullscreen
+          }
+        }
+      `;
+      const mediaTrack = merge(
+        {
+          __typename: 'MediaPlayerTrack',
+          parentId: null,
+          mediaSource: null,
+          posterSources: null,
+          title: null,
+          artist: null,
+          isVideo: false,
+        },
+        trackInfo
+      );
+
+      const { mediaPlayer } = cache.readQuery({ query });
+
+      const newMediaPlayerState = {
+        __typename: 'MediaPlayerState',
+        isPlaying: true,
+        isVisible: true,
+        isFullscreen: mediaTrack.isVideo
+          ? true
+          : (mediaPlayer && mediaPlayer.isFullscreen) || false,
+        currentTrack: mediaTrack,
+        currentTime: 0,
+        showVideo: mediaTrack.isVideo,
+        muted: false,
+      };
+
+      if (
+        // if same track
+        mediaPlayer &&
+        mediaPlayer.currentTrack &&
+        mediaPlayer.currentTrack.mediaSource.uri === mediaTrack.mediaSource.uri
+      ) {
+        // use the same Id
+        newMediaPlayerState.currentTrack.id = mediaPlayer.currentTrack.id;
+      } else {
+        // otherwise reset progress and use new Id
+        newMediaPlayerState.currentTrack.id = trackId;
+        newMediaPlayerState.progress = null;
+        trackId += 1;
+      }
+
+      cache.writeData({
+        query,
         data: {
-          cacheLoaded: true,
+          mediaPlayer: newMediaPlayerState,
         },
       });
-      const { data: { isLoggedIn } = {} } = await client.query({
-        query: GET_LOGGED_IN,
-      });
 
-      const { pushId } = cache.readQuery({
-        query: gql`
-          query {
-            pushId @client
+      track({
+        eventName: events.UserPlayedMedia,
+        properties: {
+          uri: mediaTrack.uri,
+          title: mediaTrack.title,
+          type: mediaTrack.isVideo ? 'Video' : 'Audio',
+        },
+      });
+      return null;
+    },
+    mediaPlayerUpdateState: (
+      root,
+      { isPlaying, isFullscreen, isVisible, showVideo, muted },
+      { cache }
+    ) => {
+      const query = gql`
+        query {
+          mediaPlayer @client {
+            isPlaying
+            isFullscreen
+            isVisible
+            showVideo
+            muted
           }
-        `,
+        }
+      `;
+      const { mediaPlayer } = cache.readQuery({ query });
+      cache.writeQuery({
+        query,
+        data: {
+          mediaPlayer: merge(mediaPlayer, {
+            isPlaying,
+            isFullscreen,
+            isVisible,
+            showVideo,
+            muted,
+            __typename: 'MediaPlayerState',
+          }),
+        },
+      });
+      return null;
+    },
+    mediaPlayerSetPlayhead: (root, { currentTime }, { cache }) => {
+      const query = gql`
+        query {
+          mediaPlayer @client {
+            currentTime
+          }
+        }
+      `;
+      const { mediaPlayer } = cache.readQuery({ query });
+      cache.writeQuery({
+        query,
+        data: {
+          mediaPlayer: {
+            __typename: 'MediaPlayerState',
+            currentTime:
+              currentTime || get(mediaPlayer.progress, 'currentTime') || 0,
+          },
+        },
       });
-
-      if (isLoggedIn && pushId) {
-        updatePushId({ pushId, client });
-      }
       return null;
     },
   },
diff --git a/apolloschurchapp/src/tabs/connect/ActionBar.js b/apolloschurchapp/src/tabs/connect/ActionBar.js
deleted file mode 100644
index 12f4564..0000000
--- a/apolloschurchapp/src/tabs/connect/ActionBar.js
+++ /dev/null
@@ -1,37 +0,0 @@
-import React from 'react';
-import { ActionBar, ActionBarItem } from '@apollosproject/ui-kit';
-import { withNavigation } from 'react-navigation';
-import PropTypes from 'prop-types';
-import { RockAuthedWebBrowser } from '@apollosproject/ui-connected';
-
-const Toolbar = ({ navigation }) => (
-  <RockAuthedWebBrowser>
-    {(openUrl) => (
-      <ActionBar>
-        <ActionBarItem
-          onPress={() => navigation.navigate('Passes')}
-          icon="check"
-          label="Check-in"
-        />
-        <ActionBarItem
-          onPress={() => openUrl('https://apollosrock.newspring.cc/page/186')}
-          icon="download"
-          label="Give"
-        />
-        <ActionBarItem
-          onPress={() => navigation.navigate('TestingControlPanel')}
-          icon="information"
-          label="Test"
-        />
-      </ActionBar>
-    )}
-  </RockAuthedWebBrowser>
-);
-
-Toolbar.propTypes = {
-  navigation: PropTypes.shape({
-    navigate: PropTypes.func.isRequired,
-  }).isRequired,
-};
-
-export default withNavigation(Toolbar);
diff --git a/apolloschurchapp/src/tabs/connect/ActionTable/index.js b/apolloschurchapp/src/tabs/connect/ActionTable/index.js
index 329fc23..c68be5c 100644
--- a/apolloschurchapp/src/tabs/connect/ActionTable/index.js
+++ b/apolloschurchapp/src/tabs/connect/ActionTable/index.js
@@ -11,9 +11,9 @@ import {
   styled,
   PaddedView,
   H4,
-  NavigationService,
 } from '@apollosproject/ui-kit';
-import { RockAuthedWebBrowser } from '@apollosproject/ui-connected';
+import { WebBrowserConsumer } from 'apolloschurchapp/src/ui/WebBrowser';
+import NavigationActions from 'apolloschurchapp/src/NavigationService';
 
 const RowHeader = styled(({ theme }) => ({
   flexDirection: 'row',
@@ -27,7 +27,7 @@ const Name = styled({
 })(View);
 
 const ActionTable = () => (
-  <RockAuthedWebBrowser>
+  <WebBrowserConsumer>
     {(openUrl) => (
       <View>
         <RowHeader>
@@ -40,8 +40,8 @@ const ActionTable = () => (
             onPress={() => openUrl('https://apollosrock.newspring.cc/page/235')}
           >
             <Cell>
+              <CellIcon name="check" />
               <CellText>Find a serving opportunity</CellText>
-              <CellIcon name="arrow-next" />
             </Cell>
           </Touchable>
           <Divider />
@@ -49,8 +49,8 @@ const ActionTable = () => (
             onPress={() => openUrl('https://apollosrock.newspring.cc/page/236')}
           >
             <Cell>
+              <CellIcon name="groups" />
               <CellText>Join a small group</CellText>
-              <CellIcon name="arrow-next" />
             </Cell>
           </Touchable>
           <Divider />
@@ -58,25 +58,33 @@ const ActionTable = () => (
             onPress={() => openUrl('https://apollosrock.newspring.cc/page/233')}
           >
             <Cell>
+              <CellIcon name="share" />
               <CellText>I need prayer</CellText>
-              <CellIcon name="arrow-next" />
+            </Cell>
+          </Touchable>
+          <Divider />
+          <Touchable
+            onPress={() => openUrl('https://apollosrock.newspring.cc/page/186')}
+          >
+            <Cell>
+              <CellIcon name="download" />
+              <CellText>I would like to give</CellText>
             </Cell>
           </Touchable>
         </TableView>
         <TableView>
           <Touchable
-            onPress={() => NavigationService.navigate('TestingControlPanel')}
+            onPress={() => NavigationActions.navigate('TestingControlPanel')}
           >
             <Cell>
               <CellIcon name="settings" />
               <CellText>Open Testing Panel</CellText>
-              <CellIcon name="arrow-next" />
             </Cell>
           </Touchable>
         </TableView>
       </View>
     )}
-  </RockAuthedWebBrowser>
+  </WebBrowserConsumer>
 );
 
 const StyledActionTable = styled(({ theme }) => ({
diff --git a/apolloschurchapp/src/tabs/connect/Connect.js b/apolloschurchapp/src/tabs/connect/Connect.js
index 461e03e..8de06b1 100644
--- a/apolloschurchapp/src/tabs/connect/Connect.js
+++ b/apolloschurchapp/src/tabs/connect/Connect.js
@@ -1,14 +1,46 @@
 import React, { PureComponent } from 'react';
-import { ScrollView } from 'react-native';
-import { SafeAreaView } from 'react-navigation';
+import { ScrollView, SafeAreaView } from 'react-native';
+import { Query } from 'react-apollo';
+import { get } from 'lodash';
 import PropTypes from 'prop-types';
 
-import { HorizontalLikedContentFeedConnected } from '@apollosproject/ui-connected';
-import { BackgroundView } from '@apollosproject/ui-kit';
-
+import { LoginButton } from 'apolloschurchapp/src/auth';
+import {
+  H1,
+  BodyText,
+  Paragraph,
+  BackgroundView,
+  withTheme,
+  styled,
+  Icon,
+  PaddedView,
+} from '@apollosproject/ui-kit';
 import ActionTable from './ActionTable';
-import ActionBar from './ActionBar';
-import UserAvatarHeader from './UserAvatarHeader';
+import { UserAvatarHeaderConnected } from './UserAvatarHeader';
+import { RecentlyLikedTileFeedConnected } from './RecentlyLikedTileFeed';
+import getLoginState from './getLoginState';
+
+const Title = styled(({ theme }) => ({
+  color: theme.colors.primary,
+  paddingBottom: theme.helpers.verticalRhythm(1.5),
+}))(H1);
+
+const BrandIcon = withTheme(({ theme }) => ({
+  name: 'brand-icon',
+  size: theme.sizing.baseUnit * 2.25,
+  marginBottom: theme.sizing.baseUnit,
+  fill: theme.colors.primary,
+}))(Icon);
+
+const Header = styled(({ theme }) => ({
+  paddingBottom: theme.sizing.baseUnit * 1.5,
+  backgroundColor: theme.colors.background.paper,
+  paddingTop: theme.sizing.baseUnit * 4,
+}))(PaddedView);
+
+const StyledLoginButton = styled(({ theme }) => ({
+  marginVertical: theme.sizing.baseUnit,
+}))(LoginButton);
 
 class Connect extends PureComponent {
   static navigationOptions = () => ({
@@ -26,14 +58,45 @@ class Connect extends PureComponent {
   render() {
     return (
       <BackgroundView>
-        <SafeAreaView>
-          <ScrollView>
-            <UserAvatarHeader />
-            <ActionBar />
-            <HorizontalLikedContentFeedConnected />
-            <ActionTable />
-          </ScrollView>
-        </SafeAreaView>
+        <Query query={getLoginState}>
+          {({ data }) => {
+            if (get(data, 'isLoggedIn', false))
+              return (
+                <SafeAreaView>
+                  <ScrollView>
+                    <UserAvatarHeaderConnected key="UserAvatarHeaderConnected" />
+                    <RecentlyLikedTileFeedConnected key="RecentlyLikedTileFeedConnected" />
+                    <ActionTable />
+                  </ScrollView>
+                </SafeAreaView>
+              );
+            return (
+              <SafeAreaView>
+                <ScrollView>
+                  <Header>
+                    <BrandIcon />
+                    <Title>Connect!</Title>
+                    <Paragraph>
+                      <BodyText>
+                        Our mission is to help you connect to others as well as
+                        help you in your walk with Christ.
+                      </BodyText>
+                    </Paragraph>
+                    <Paragraph>
+                      <BodyText>
+                        By joining this community, you will unlock amazing
+                        features like; curated content and devotionals, simple
+                        event registration, and easy online giving!
+                      </BodyText>
+                    </Paragraph>
+                    <StyledLoginButton />
+                  </Header>
+                  <ActionTable />
+                </ScrollView>
+              </SafeAreaView>
+            );
+          }}
+        </Query>
       </BackgroundView>
     );
   }
diff --git a/apolloschurchapp/src/tabs/connect/LikedContentList/LikedContentList.tests.js b/apolloschurchapp/src/tabs/connect/LikedContentList/LikedContentList.tests.js
new file mode 100644
index 0000000..f6fadb7
--- /dev/null
+++ b/apolloschurchapp/src/tabs/connect/LikedContentList/LikedContentList.tests.js
@@ -0,0 +1,68 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+import wait from 'waait';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import getLikedContent from '../getLikedContent';
+import LikedContentList from '.';
+
+describe('LikedContentList component', () => {
+  it('renders LikedContentList', async () => {
+    const mock = {
+      request: {
+        query: getLikedContent,
+      },
+      result: {
+        data: {
+          getAllLikedContent: [
+            {
+              __typename: 'UniversalContentItem',
+              id: 'UniversalContentItem:4148aeb9482181025e9cad42826e676a',
+              title: 'Making Prayer a Spiritual Habit',
+              coverImage: {
+                sources: [
+                  {
+                    uri:
+                      'https://apollosrock.newspring.cc/GetImage.ashx?guid=55be1fd5-d8eb-43a6-aa70-f8e27bb63d31',
+                  },
+                ],
+              },
+              sharing: {
+                title: 'Making Prayer a Spiritual Habit',
+                message: '',
+                url: 'https://apollosrock.newspring.cc/',
+              },
+            },
+            {
+              __typename: 'UniversalContentItem',
+              id: 'UniversalContentItem:9dbdc4e565dcaa3c9b17eb5ae42de96e',
+              title: 'Vacations and Your Budget',
+              coverImage: {
+                sources: [
+                  {
+                    uri:
+                      'https://apollosrock.newspring.cc/GetImage.ashx?guid=993efb47-47ec-4dec-a3d3-47bcacfbd58e',
+                  },
+                ],
+              },
+              sharing: {
+                title: 'Vacations and Your Budget',
+                message: '',
+                url: 'https://apollosrock.newspring.cc/',
+              },
+            },
+          ],
+        },
+      },
+    };
+    const navigation = { navigate: jest.fn(), getParam: jest.fn() };
+    const tree = renderer.create(
+      <Providers mocks={[mock]}>
+        <LikedContentList navigation={navigation} />
+      </Providers>
+    );
+    await wait(0); // wait for response from graphql
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/tabs/connect/LikedContentList/index.js b/apolloschurchapp/src/tabs/connect/LikedContentList/index.js
new file mode 100644
index 0000000..2fd7fda
--- /dev/null
+++ b/apolloschurchapp/src/tabs/connect/LikedContentList/index.js
@@ -0,0 +1,56 @@
+import React, { PureComponent } from 'react';
+import PropTypes from 'prop-types';
+import { Query } from 'react-apollo';
+
+import { BackgroundView, FeedView } from '@apollosproject/ui-kit';
+import ContentCardConnected from '../../../ui/ContentCardConnected';
+
+import getLikedContent from '../getLikedContent';
+/** A FeedView wrapped in a query to pull content data. */
+class LikedContentList extends PureComponent {
+  /** Function for React Navigation to set information in the header. */
+  static navigationOptions = () => ({
+    title: 'Your Likes',
+  });
+
+  static propTypes = {
+    /** Functions passed down from React Navigation to use in navigating to/from
+     * items in the feed.
+     */
+    navigation: PropTypes.shape({
+      getParam: PropTypes.func,
+      navigate: PropTypes.func,
+    }),
+  };
+
+  /** Function that is called when a card in the feed is pressed.
+   * Takes the user to the ContentSingle
+   */
+  handleOnPress = (item) =>
+    this.props.navigation.navigate('ContentSingle', {
+      itemId: item.id,
+      sharing: item.sharing,
+    });
+
+  render() {
+    return (
+      <BackgroundView>
+        <Query query={getLikedContent} fetchPolicy="cache-and-network">
+          {({ loading, error, data: { getAllLikedContent = [] }, refetch }) => (
+            <FeedView
+              ListItemComponent={ContentCardConnected}
+              initialNumToRender={5}
+              content={getAllLikedContent}
+              isLoading={loading}
+              error={error}
+              refetch={refetch}
+              onPressItem={this.handleOnPress}
+            />
+          )}
+        </Query>
+      </BackgroundView>
+    );
+  }
+}
+
+export default LikedContentList;
diff --git a/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeed.js b/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeed.js
new file mode 100644
index 0000000..8b4437d
--- /dev/null
+++ b/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeed.js
@@ -0,0 +1,102 @@
+import React, { Component } from 'react';
+import { View } from 'react-native';
+import { withNavigation } from 'react-navigation';
+import PropTypes from 'prop-types';
+
+import {
+  PaddedView,
+  H4,
+  UIText,
+  HorizontalTileFeed,
+  styled,
+  ButtonLink,
+  withIsLoading,
+  TouchableScale,
+} from '@apollosproject/ui-kit';
+
+import ContentCard from 'apolloschurchapp/src/ui/ContentCardConnected';
+
+const RowHeader = styled({
+  flexDirection: 'row',
+  justifyContent: 'space-between',
+  alignItems: 'center',
+  paddingVertical: 0,
+})(PaddedView);
+
+const Name = styled({
+  flexGrow: 1,
+})(View);
+
+const LikedContentLink = styled({
+  flexDirection: 'row-reverse',
+})(View);
+
+class RecentlyLikedTileFeed extends Component {
+  static propTypes = {
+    navigation: PropTypes.shape({
+      navigate: PropTypes.func,
+    }),
+    isLoading: PropTypes.bool,
+    name: PropTypes.string,
+    content: PropTypes.arrayOf(
+      PropTypes.any // this component doesn't care about the shape of `node`, just that it exists
+    ),
+  };
+
+  loadingStateObject = {
+    id: 'fake_id',
+    title: '',
+    coverImage: [],
+  };
+
+  titleImageItem = ({ item }) => (
+    <TouchableScale
+      onPress={() => {
+        this.props.navigation.push('ContentSingle', {
+          itemId: item.id,
+        });
+      }}
+    >
+      <ContentCard
+        isLoading={item.isLoading}
+        tile
+        contentId={item.id}
+        inHorizontalList
+      />
+    </TouchableScale>
+  );
+
+  render() {
+    const { isLoading, name, navigation, content = [] } = this.props;
+
+    return (
+      <PaddedView horizontal={false}>
+        <RowHeader>
+          <Name>
+            <H4 isLoading={isLoading}>{name}</H4>
+          </Name>
+          <LikedContentLink>
+            <UIText isLoading={isLoading}>
+              <ButtonLink
+                onPress={() => {
+                  navigation.navigate('LikedContentList');
+                }}
+              >
+                View All
+              </ButtonLink>
+            </UIText>
+          </LikedContentLink>
+        </RowHeader>
+        <HorizontalTileFeed
+          initialNumToRender={5}
+          content={content}
+          renderItem={this.titleImageItem}
+          loadingStateObject={this.loadingStateObject}
+          isLoading={isLoading}
+        />
+      </PaddedView>
+    );
+  }
+}
+
+export default withNavigation(withIsLoading(RecentlyLikedTileFeed));
diff --git a/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeed.tests.js b/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeed.tests.js
new file mode 100644
index 0000000..e57b4c6
--- /dev/null
+++ b/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeed.tests.js
@@ -0,0 +1,111 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+import RecentlyLikedTileFeed from './RecentlyLikedTileFeed';
+
+describe('RecentlyLikedTileFeed', () => {
+  it('renders a RecentlyLikedTileFeed', () => {
+    const props = {
+      content: [
+        {
+          id: 'UniversalContentItem:4148aeb9482181025e9cad42826e676a',
+          title: 'Making Prayer a Spiritual Habit',
+          __typename: 'UniversalContentItem',
+          coverImage: {
+            sources: [
+              {
+                uri:
+                  'https://apollosrock.newspring.cc/GetImage.ashx?guid=55be1fd5-d8eb-43a6-aa70-f8e27bb63d31',
+              },
+            ],
+          },
+          sharing: {
+            title: 'Making Prayer a Spiritual Habit',
+            message: '',
+            url: 'https://apollosrock.newspring.cc/',
+          },
+        },
+        {
+          id: 'UniversalContentItem:9dbdc4e565dcaa3c9b17eb5ae42de96e',
+          title: 'Vacations and Your Budget',
+          __typename: 'UniversalContentItem',
+          coverImage: {
+            sources: [
+              {
+                uri:
+                  'https://apollosrock.newspring.cc/GetImage.ashx?guid=993efb47-47ec-4dec-a3d3-47bcacfbd58e',
+              },
+            ],
+          },
+          sharing: {
+            title: 'Vacations and Your Budget',
+            message: '',
+            url: 'https://apollosrock.newspring.cc/',
+          },
+        },
+      ],
+      name: 'Liked Content',
+      navigation: jest.fn(),
+      isLoading: false,
+    };
+
+    const tree = renderer.create(
+      <Providers>
+        <RecentlyLikedTileFeed {...props} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+
+  it('renders a loading state', () => {
+    const props = {
+      content: [
+        {
+          id: 'UniversalContentItem:4148aeb9482181025e9cad42826e676a',
+          title: 'Making Prayer a Spiritual Habit',
+          coverImage: {
+            sources: [
+              {
+                uri:
+                  'https://apollosrock.newspring.cc/GetImage.ashx?guid=55be1fd5-d8eb-43a6-aa70-f8e27bb63d31',
+              },
+            ],
+          },
+          sharing: {
+            title: 'Making Prayer a Spiritual Habit',
+            message: '',
+            url: 'https://apollosrock.newspring.cc/',
+          },
+        },
+        {
+          id: 'UniversalContentItem:9dbdc4e565dcaa3c9b17eb5ae42de96e',
+          title: 'Vacations and Your Budget',
+          coverImage: {
+            sources: [
+              {
+                uri:
+                  'https://apollosrock.newspring.cc/GetImage.ashx?guid=993efb47-47ec-4dec-a3d3-47bcacfbd58e',
+              },
+            ],
+          },
+          sharing: {
+            title: 'Vacations and Your Budget',
+            message: '',
+            url: 'https://apollosrock.newspring.cc/',
+          },
+        },
+      ],
+      name: 'Liked Content',
+      navigation: jest.fn(),
+      isLoading: true,
+    };
+
+    const tree = renderer.create(
+      <Providers>
+        <RecentlyLikedTileFeed {...props} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeedConnected.js b/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeedConnected.js
new file mode 100644
index 0000000..a86843d
--- /dev/null
+++ b/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeedConnected.js
@@ -0,0 +1,36 @@
+import React from 'react';
+import { Query } from 'react-apollo';
+import PropTypes from 'prop-types';
+
+import getLikedContent from '../getLikedContent';
+import RecentlyLikedTileFeed from './RecentlyLikedTileFeed';
+
+const RecentlyLikedTileFeedConnected = ({ navigation }) => (
+  <Query query={getLikedContent} fetchPolicy="cache-and-network">
+    {({ loading, data: { getAllLikedContent = [] } = {} }) => {
+      if (!getAllLikedContent.length) return null;
+      return (
+        <RecentlyLikedTileFeed
+          id={'liked'}
+          name={'Recently Liked'}
+          content={getAllLikedContent}
+          isLoading={loading}
+          navigation={navigation}
+          loadingStateObject={{
+            title: 'Recently Liked',
+            isLoading: true,
+          }}
+        />
+      );
+    }}
+  </Query>
+);
+
+RecentlyLikedTileFeedConnected.propTypes = {
+  navigation: PropTypes.shape({
+    getParam: PropTypes.func,
+    navigate: PropTypes.func,
+  }),
+};
+
+export default RecentlyLikedTileFeedConnected;
diff --git a/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeedConnected.tests.js b/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeedConnected.tests.js
new file mode 100644
index 0000000..20e6417
--- /dev/null
+++ b/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeedConnected.tests.js
@@ -0,0 +1,107 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+import wait from 'waait';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import getLikedContent from '../getLikedContent';
+import RecentlyLikedTileFeedConnected from './RecentlyLikedTileFeedConnected';
+
+describe('RecentlyLikedTileFeedConnected', () => {
+  it('renders a RecentlyLikedTileFeedConnected', async () => {
+    const mock = {
+      request: {
+        query: getLikedContent,
+      },
+      result: {
+        data: {
+          getAllLikedContent: [
+            {
+              id: 'UniversalContentItem:296373ecb53580855cadffa0375ebe18',
+              __typename: 'UniversalContentItem',
+              title: 'Guys Night!',
+              coverImage: {
+                sources: [
+                  {
+                    uri:
+                      'https://apollosrock.newspring.cc/GetImage.ashx?guid=58c037fa-cc7f-4d72-9571-a0cc0558e346',
+                  },
+                ],
+              },
+              sharing: {
+                title: 'Guys Night!',
+                message: '',
+                url: 'https://apollosrock.newspring.cc/',
+              },
+            },
+            {
+              id: 'UniversalContentItem:39193b5ad28717ebfeab4d226664d8e7',
+              __typename: 'UniversalContentItem',
+              title: 'This August at NewSpring',
+              coverImage: {
+                sources: [
+                  {
+                    uri:
+                      'https://apollosrock.newspring.cc/GetImage.ashx?guid=f54b0db0-95f5-44ad-b8f2-8bcd1b23cfdb',
+                  },
+                ],
+              },
+              sharing: {
+                title: 'This August at NewSpring',
+                message: '',
+                url: 'https://apollosrock.newspring.cc/',
+              },
+            },
+            {
+              id: 'UniversalContentItem:ae8ec75906ba7437c49ad2534b5024db',
+              __typename: 'UniversalContentItem',
+              title: 'A Place to Worship Free of Fear',
+              coverImage: {
+                sources: [
+                  {
+                    uri:
+                      'https://apollosrock.newspring.cc/GetImage.ashx?guid=a65bc45d-f961-4b7e-a899-63eb1f9b8da9',
+                  },
+                ],
+              },
+              sharing: {
+                title: 'A Place to Worship Free of Fear',
+                message: '',
+                url: 'https://apollosrock.newspring.cc/',
+              },
+            },
+          ],
+        },
+      },
+    };
+    const navigation = { navigate: jest.fn(), getParam: jest.fn() };
+    const tree = renderer.create(
+      <Providers mocks={[mock]}>
+        <RecentlyLikedTileFeedConnected navigation={navigation} />
+      </Providers>
+    );
+    await wait(0); // wait for response from graphql
+    expect(tree).toMatchSnapshot();
+  });
+
+  it('renders nothing if no liked content', async () => {
+    const mock = {
+      request: {
+        query: getLikedContent,
+      },
+      result: {
+        data: {
+          getAllLikedContent: [],
+        },
+      },
+    };
+    const navigation = { navigate: jest.fn(), getParam: jest.fn() };
+    const tree = renderer.create(
+      <Providers mocks={[mock]}>
+        <RecentlyLikedTileFeedConnected navigation={navigation} />
+      </Providers>
+    );
+    await wait(0); // wait for response from graphql
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/index.js b/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/index.js
new file mode 100644
index 0000000..f67e890
--- /dev/null
+++ b/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/index.js
@@ -0,0 +1,2 @@
+export RecentlyLikedTileFeed from './RecentlyLikedTileFeed';
+export RecentlyLikedTileFeedConnected from './RecentlyLikedTileFeedConnected';
diff --git a/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeader.js b/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeader.js
index 5c5e2fa..1484a66 100644
--- a/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeader.js
+++ b/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeader.js
@@ -1,74 +1,77 @@
 import React from 'react';
-import { Query } from 'react-apollo';
 import PropTypes from 'prop-types';
+import { compose } from 'recompose';
 import { withNavigation } from 'react-navigation';
-import { get } from 'lodash';
 
-import { H3, styled, PaddedView } from '@apollosproject/ui-kit';
-import { UserAvatarConnected } from '@apollosproject/ui-connected';
-import GET_USER_PROFILE from './getUserProfile';
+import UserAvatarView from 'apolloschurchapp/src/ui/UserAvatarView';
 
-const GetUserProfile = ({ children }) => (
-  <Query query={GET_USER_PROFILE}>
-    {({ data: { currentUser = {} } = {} }) => {
-      const firstName = get(currentUser, 'profile.firstName');
-      return children({ firstName });
-    }}
-  </Query>
-);
-
-GetUserProfile.propTypes = {
-  children: PropTypes.func.isRequired,
-};
+import {
+  withIsLoading,
+  Touchable,
+  ConnectedImage,
+  Icon,
+  withTheme,
+  styled,
+  PaddedView,
+  FlexedView,
+} from '@apollosproject/ui-kit';
 
-const Container = styled({
+const Container = styled(({ theme }) => ({
   alignItems: 'center',
-  justifyContent: 'center',
-})(PaddedView);
+  flexDirection: 'row',
+  paddingTop: theme.sizing.baseUnit * 2,
+  paddingBottom: 0,
+}))(PaddedView);
+
+const SettingsIcon = compose(
+  withTheme(({ theme }) => ({
+    name: 'settings',
+    fill: theme.colors.text.tertiary,
+  }))
+)(Icon);
 
 const UserAvatarHeader = ({
-  buttonIcon,
-  message,
+  firstName,
+  lastName,
+  location,
+  photo,
+  refetch,
   navigation,
-  onPressIcon,
-  size,
-  ...props
+  disabled,
+  isLoading,
 }) => (
   <Container>
-    <PaddedView horizontal={false}>
-      <UserAvatarConnected
-        size={size}
-        buttonIcon={buttonIcon}
-        onPressIcon={() => navigation.navigate('UserSettings')}
-        {...props}
+    <FlexedView>
+      <UserAvatarView
+        firstName={firstName}
+        lastName={lastName}
+        location={location}
+        photo={photo}
+        refetch={refetch}
+        disabled={disabled}
+        isLoading={isLoading}
       />
-    </PaddedView>
-    <GetUserProfile>
-      {({ firstName }) => (
-        <H3>
-          {message}
-          {firstName ? ` ${firstName}` : ''}!
-        </H3>
-      )}
-    </GetUserProfile>
+    </FlexedView>
+    <Touchable
+      onPress={() => navigation.navigate('UserSettings', { photo, refetch })}
+    >
+      <SettingsIcon />
+    </Touchable>
   </Container>
 );
 
 UserAvatarHeader.propTypes = {
-  buttonIcon: PropTypes.string,
-  message: PropTypes.string,
+  firstName: PropTypes.string,
+  lastName: PropTypes.string,
+  location: PropTypes.string,
+  photo: ConnectedImage.propTypes.source,
+  refetch: PropTypes.func,
   navigation: PropTypes.shape({
     getParam: PropTypes.func,
     navigate: PropTypes.func,
-  }).isRequired,
-  onPressIcon: PropTypes.func,
-  size: PropTypes.string,
-};
-
-UserAvatarHeader.defaultProps = {
-  buttonIcon: 'settings',
-  message: 'Hello',
-  size: 'large',
+  }),
+  disabled: PropTypes.bool,
+  isLoading: PropTypes.bool,
 };
 
-export default withNavigation(UserAvatarHeader);
+export default withNavigation(withIsLoading(UserAvatarHeader));
diff --git a/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeader.test.js b/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeader.test.js
new file mode 100644
index 0000000..314dfa6
--- /dev/null
+++ b/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeader.test.js
@@ -0,0 +1,65 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+import UserAvatarHeader from './UserAvatarHeader';
+
+describe('user avatar header', () => {
+  it('renders user avatar header if logged in', () => {
+    const props = {
+      theme: {
+        colors: {
+          text: {
+            tertiary: 'red',
+          },
+        },
+      },
+      firstName: 'Isaac',
+      lastName: 'Hardy',
+      location: 'Anderson, SC',
+      photo: {
+        uri: 'google.com',
+      },
+      refetch: jest.fn(),
+      navigation: jest.fn(),
+      disabled: true,
+      isLoading: false,
+    };
+
+    const tree = renderer.create(
+      <Providers>
+        <UserAvatarHeader {...props} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+
+  it('renders placeholder when loading', () => {
+    const props = {
+      theme: {
+        colors: {
+          text: {
+            tertiary: 'red',
+          },
+        },
+      },
+      firstName: 'Isaac',
+      lastName: 'Hardy',
+      location: 'Anderson, SC',
+      photo: {
+        uri: 'google.com',
+      },
+      refetch: jest.fn(),
+      navigation: jest.fn(),
+      disabled: true,
+      isLoading: true,
+    };
+
+    const tree = renderer.create(
+      <Providers>
+        <UserAvatarHeader {...props} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeaderConnected.js b/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeaderConnected.js
new file mode 100644
index 0000000..599f719
--- /dev/null
+++ b/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeaderConnected.js
@@ -0,0 +1,38 @@
+import React from 'react';
+import { Query } from 'react-apollo';
+import PropTypes from 'prop-types';
+
+import getUserProfile from '../getUserProfile';
+import UserAvatarHeader from './UserAvatarHeader';
+
+const UserAvatarHeaderConnected = ({ navigation }) => (
+  <Query query={getUserProfile} fetchPolicy="cache-and-network">
+    {({
+      data: {
+        currentUser: {
+          profile: { photo, firstName, lastName, location } = {},
+        } = {},
+      } = {},
+      refetch,
+    }) => (
+      <UserAvatarHeader
+        firstName={firstName}
+        lastName={lastName}
+        location={location}
+        photo={photo}
+        refetch={refetch}
+        navigation={navigation}
+        disabled
+      />
+    )}
+  </Query>
+);
+
+UserAvatarHeaderConnected.propTypes = {
+  navigation: PropTypes.shape({
+    getParam: PropTypes.func,
+    navigate: PropTypes.func,
+  }),
+};
+
+export default UserAvatarHeaderConnected;
diff --git a/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeaderConnected.tests.js b/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeaderConnected.tests.js
new file mode 100644
index 0000000..e0a8488
--- /dev/null
+++ b/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeaderConnected.tests.js
@@ -0,0 +1,44 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+import wait from 'waait';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import getUserProfile from '../getUserProfile';
+import UserAvatarHeaderConnected from './UserAvatarHeaderConnected';
+
+describe('user avatar header connect', () => {
+  it('renders user avatar header if logged in', async () => {
+    const mock = {
+      request: {
+        query: getUserProfile,
+      },
+      result: {
+        data: {
+          currentUser: {
+            id: 'AuthenticatedUser:057b0758543270d1cb21784cac4d3f5c',
+            profile: {
+              firstName: 'Isaac',
+              lastName: 'Hardy',
+              location: 'Anderson, SC',
+              email: 'isaac.hardy@newspring.cc',
+              nickName: 'Ike',
+              photo: {
+                uri:
+                  'https://apollosrock.newspring.cc:443/GetImage.ashx?guid=60fd5f35-3167-4c26-9a30-d44937287b87',
+              },
+            },
+          },
+        },
+      },
+    };
+    const navigation = { navigate: jest.fn(), getParam: jest.fn() };
+    const tree = renderer.create(
+      <Providers mocks={[mock]}>
+        <UserAvatarHeaderConnected navigation={navigation} />
+      </Providers>
+    );
+    await wait(0); // wait for response from graphql
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/tabs/connect/UserAvatarHeader/getUserProfile.js b/apolloschurchapp/src/tabs/connect/UserAvatarHeader/getUserProfile.js
deleted file mode 100644
index e5aa7e0..0000000
--- a/apolloschurchapp/src/tabs/connect/UserAvatarHeader/getUserProfile.js
+++ /dev/null
@@ -1,18 +0,0 @@
-import gql from 'graphql-tag';
-import ApollosConfig from '@apollosproject/config';
-
-export default gql`
-  query CurrentUserProfile {
-    currentUser {
-      id
-      profile {
-        ...UserProfileParts
-        campus {
-          ...CampusParts
-        }
-      }
-    }
-  }
-  ${ApollosConfig.FRAGMENTS.CAMPUS_PARTS_FRAGMENT}
-  ${ApollosConfig.FRAGMENTS.USER_PROFILE_PARTS_FRAGMENT}
-`;
diff --git a/apolloschurchapp/src/tabs/connect/UserAvatarHeader/index.js b/apolloschurchapp/src/tabs/connect/UserAvatarHeader/index.js
index 01d8628..a8b66ec 100644
--- a/apolloschurchapp/src/tabs/connect/UserAvatarHeader/index.js
+++ b/apolloschurchapp/src/tabs/connect/UserAvatarHeader/index.js
@@ -1,5 +1,2 @@
-import UserAvatarHeader from './UserAvatarHeader';
-
-export GET_USER_PROFILE from './getUserProfile';
-
-export default UserAvatarHeader;
+export UserAvatarHeader from './UserAvatarHeader';
+export UserAvatarHeaderConnected from './UserAvatarHeaderConnected';
diff --git a/apolloschurchapp/src/tabs/connect/getLikedContent.js b/apolloschurchapp/src/tabs/connect/getLikedContent.js
new file mode 100644
index 0000000..0252dd1
--- /dev/null
+++ b/apolloschurchapp/src/tabs/connect/getLikedContent.js
@@ -0,0 +1,17 @@
+import gql from 'graphql-tag';
+
+import { largeCardFragment } from 'apolloschurchapp/src/ui/ContentCardConnected';
+import { contentItemFragment } from 'apolloschurchapp/src/content-single/getContentItem';
+
+export default gql`
+  query getAllLikedContent {
+    getAllLikedContent {
+      ... on ContentItem {
+        ...contentItemFragment
+        ...largeCardFragment
+      }
+    }
+  }
+  ${contentItemFragment}
+  ${largeCardFragment}
+`;
diff --git a/apolloschurchapp/src/tabs/connect/getLoginState.js b/apolloschurchapp/src/tabs/connect/getLoginState.js
new file mode 100644
index 0000000..97d3e8d
--- /dev/null
+++ b/apolloschurchapp/src/tabs/connect/getLoginState.js
@@ -0,0 +1,7 @@
+import gql from 'graphql-tag';
+
+export default gql`
+  query {
+    isLoggedIn @client
+  }
+`;
diff --git a/apolloschurchapp/src/tabs/connect/getUserProfile.js b/apolloschurchapp/src/tabs/connect/getUserProfile.js
new file mode 100644
index 0000000..b591a5b
--- /dev/null
+++ b/apolloschurchapp/src/tabs/connect/getUserProfile.js
@@ -0,0 +1,19 @@
+import gql from 'graphql-tag';
+
+export default gql`
+  query {
+    currentUser {
+      id
+      profile {
+        firstName
+        lastName
+        location
+        email
+        nickName
+        photo {
+          uri
+        }
+      }
+    }
+  }
+`;
diff --git a/apolloschurchapp/src/tabs/connect/index.js b/apolloschurchapp/src/tabs/connect/index.js
index 8e98a1e..7091870 100644
--- a/apolloschurchapp/src/tabs/connect/index.js
+++ b/apolloschurchapp/src/tabs/connect/index.js
@@ -1,40 +1,27 @@
 import { createStackNavigator } from 'react-navigation';
-import { withTheme } from '@apollosproject/ui-kit';
-import { LikedContentFeedConnected } from '@apollosproject/ui-connected';
 
-import UserSettings from '../../user-settings';
-import TestingControlPanel from '../../testing-control-panel';
+import UserSettings from 'apolloschurchapp/src/user-settings';
 
+import TestingControlPanel from '../../testing-control-panel';
 import tabBarIcon from '../tabBarIcon';
 import Connect from './Connect';
+import LikedContentList from './LikedContentList';
 
 const ConnectNavigator = createStackNavigator(
   {
     Connect,
     TestingControlPanel,
     UserSettings,
-    LikedContentFeedConnected,
+    LikedContentList,
   },
   {
     initialRouteName: 'Connect',
     headerMode: 'screen',
-    defaultNavigationOptions: ({ screenProps }) => ({
-      headerTintColor: screenProps.headerTintColor,
-      headerTitleStyle: screenProps.headerTitleStyle,
-    }),
-    navigationOptions: { tabBarIcon: tabBarIcon('profile') },
   }
 );
 
-const EnhancedConnect = withTheme(({ theme, ...props }) => ({
-  ...props,
-  screenProps: {
-    headerTintColor: theme.colors.action.secondary,
-    headerTitleStyle: {
-      color: theme.colors.text.primary,
-    },
-    headerBackgroundColor: theme.colors.background.paper,
-  },
-}))(ConnectNavigator);
+ConnectNavigator.navigationOptions = {
+  tabBarIcon: tabBarIcon('profile'),
+};
 
-export default EnhancedConnect;
+export default ConnectNavigator;
diff --git a/apolloschurchapp/src/tabs/discover/Discover.js b/apolloschurchapp/src/tabs/discover/Discover.js
index 39a865f..76d8b24 100644
--- a/apolloschurchapp/src/tabs/discover/Discover.js
+++ b/apolloschurchapp/src/tabs/discover/Discover.js
@@ -1,57 +1,62 @@
 import React, { PureComponent } from 'react';
-import { throttle } from 'lodash';
+import { Query } from 'react-apollo';
+import { get } from 'lodash';
 
-import { BackgroundView } from '@apollosproject/ui-kit';
+import { FeedView, BackgroundView } from '@apollosproject/ui-kit';
 
-import SearchInputHeader, {
-  ReactNavigationStyleReset,
-} from '../../ui/SearchInputHeader';
+import TileContentFeed from './TileContentFeed';
+import getContentChannels from './getContentChannels';
 
-import SearchFeed from './SearchFeed';
-import DiscoverFeed from './DiscoverFeed';
+const childContentItemLoadingState = {
+  title: '',
+  isLoading: true,
+};
+
+const feedItemLoadingState = {
+  name: '',
+  isLoading: true,
+};
 
 class Discover extends PureComponent {
-  state = {
-    searchText: '',
-    isFocused: false,
-  };
-
-  handleOnChangeText = throttle(
-    (value) =>
-      this.setState({
-        searchText: value,
-      }),
-    300
+  renderItem = ({ item }) => (
+    <TileContentFeed
+      id={item.id}
+      name={item.name}
+      content={get(item, 'childContentItemsConnection.edges', []).map(
+        (edge) => edge.node
+      )}
+      isLoading={item.isLoading}
+      loadingStateObject={childContentItemLoadingState}
+    />
   );
 
-  handleOnFocus = (inputState) => {
-    this.setState({
-      isFocused: inputState,
-    });
-  };
-
   render() {
     return (
       <BackgroundView>
-        <SearchInputHeader
-          onChangeText={this.handleOnChangeText}
-          onFocus={this.handleOnFocus}
-        />
-        {this.state.isFocused || this.state.searchText ? (
-          <SearchFeed searchText={this.state.searchText} />
-        ) : (
-          <DiscoverFeed />
-        )}
+        <Query query={getContentChannels} fetchPolicy="cache-and-network">
+          {({
+            error,
+            loading,
+            data: { contentChannels = [] } = {},
+            refetch,
+          }) => (
+            <FeedView
+              error={error}
+              content={contentChannels}
+              isLoading={loading}
+              refetch={refetch}
+              renderItem={this.renderItem}
+              loadingStateObject={feedItemLoadingState}
+            />
+          )}
+        </Query>
       </BackgroundView>
     );
   }
 }
 
-Discover.navigationOptions = (props) => ({
+Discover.navigationOptions = {
   title: 'Discover',
-  headerStyle: [
-    ReactNavigationStyleReset.header,
-    { backgroundColor: props.screenProps.headerBackgroundColor },
-  ],
-});
+};
+
 export default Discover;
diff --git a/apolloschurchapp/src/tabs/discover/DiscoverFeed/DiscoverFeed.tests.js b/apolloschurchapp/src/tabs/discover/DiscoverFeed/DiscoverFeed.tests.js
deleted file mode 100644
index 61156fe..0000000
--- a/apolloschurchapp/src/tabs/discover/DiscoverFeed/DiscoverFeed.tests.js
+++ /dev/null
@@ -1,584 +0,0 @@
-import React from 'react';
-import { flatMap } from 'lodash';
-import { createStackNavigator, createAppContainer } from 'react-navigation';
-import renderer from 'react-test-renderer';
-
-import { GET_CONTENT_CARD } from '@apollosproject/ui-connected';
-import Providers from '../../../Providers';
-import { renderWithApolloData } from '../../../utils/testUtils';
-
-import GET_CONTENT_CHANNELS from './getContentChannels';
-import DiscoverFeed from '.';
-
-describe('The DiscoverFeed component', () => {
-  it('should render', async () => {
-    const mockFeedData = {
-      request: {
-        query: GET_CONTENT_CHANNELS,
-      },
-      result: {
-        data: {
-          contentChannels: [
-            {
-              id: 'ContentChannel:965b6e6d7046a885bea4e300b5c0400d',
-              name: 'News',
-              childContentItemsConnection: {
-                edges: [
-                  {
-                    node: {
-                      id:
-                        'UniversalContentItem:00bb7b364911281c97fc50f2a0d17b11',
-                      title: 'Anderson Family Cookout!',
-                      hyphenatedTitle: 'Anderson Family Cookout!',
-                      isLiked: false,
-                      likedCount: 0,
-                      summary: 'Come join us!',
-                      coverImage: {
-                        name: 'Landscape Image',
-                        sources: [
-                          {
-                            uri:
-                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D62e0e2ba-2dac-468b-a852-7e8cf2533efc',
-                            __typename: 'ImageMediaSource',
-                          },
-                        ],
-                        __typename: 'ImageMedia',
-                      },
-                      theme: null,
-                      parentChannel: {
-                        id: 'ContentChannel:965b6e6d7046a885bea4e300b5c0400d',
-                        name: 'News',
-                        __typename: 'ContentChannel',
-                      },
-                      videos: [],
-                      audios: [],
-                      __typename: 'UniversalContentItem',
-                    },
-                    __typename: 'ContentItemsConnectionEdge',
-                  },
-                  {
-                    node: {
-                      id:
-                        'UniversalContentItem:7db601b238aa4345a818654300f83dd2',
-                      title: 'Robert Madu is Coming to Christ Fellowship',
-                      hyphenatedTitle:
-                        'Robert Madu is Coming to Christ Fellowship',
-                      isLiked: false,
-                      likedCount: 5,
-                      summary:
-                        "Don't miss a powerful message from preacher and speaker, Robert Madu.",
-                      coverImage: {
-                        name: 'Square Image',
-                        sources: [
-                          {
-                            uri:
-                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3Df3ba0936-8aab-46c1-8245-0e5aef637ae3',
-                            __typename: 'ImageMediaSource',
-                          },
-                        ],
-                        __typename: 'ImageMedia',
-                      },
-                      theme: null,
-                      parentChannel: {
-                        id: 'ContentChannel:965b6e6d7046a885bea4e300b5c0400d',
-                        name: 'News',
-                        __typename: 'ContentChannel',
-                      },
-                      videos: [],
-                      audios: [],
-                      __typename: 'UniversalContentItem',
-                    },
-                    __typename: 'ContentItemsConnectionEdge',
-                  },
-                  {
-                    node: {
-                      id:
-                        'UniversalContentItem:296373ecb53580855cadffa0375ebe18',
-                      title: 'Guys Night!',
-                      hyphenatedTitle: 'Guys Night!',
-                      isLiked: false,
-                      likedCount: 0,
-                      summary:
-                        'A time to connect with other guys who live nearby.',
-                      coverImage: {
-                        name: 'Square Image',
-                        sources: [
-                          {
-                            uri:
-                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D58c037fa-cc7f-4d72-9571-a0cc0558e346',
-                            __typename: 'ImageMediaSource',
-                          },
-                        ],
-                        __typename: 'ImageMedia',
-                      },
-                      theme: null,
-                      parentChannel: {
-                        id: 'ContentChannel:965b6e6d7046a885bea4e300b5c0400d',
-                        name: 'News',
-                        __typename: 'ContentChannel',
-                      },
-                      videos: [],
-                      audios: [],
-                      __typename: 'UniversalContentItem',
-                    },
-                    __typename: 'ContentItemsConnectionEdge',
-                  },
-                ],
-                __typename: 'ContentItemsConnection',
-              },
-              __typename: 'ContentChannel',
-            },
-            {
-              id: 'ContentChannel:4f68015ba18662a7409d1219a4ce013e',
-              name: 'Articles',
-              childContentItemsConnection: {
-                edges: [
-                  {
-                    node: {
-                      id:
-                        'UniversalContentItem:604a4a763a5fc0edfe386684ca6b3515',
-                      title: 'Test Article',
-                      hyphenatedTitle: 'Test Article',
-                      isLiked: false,
-                      likedCount: 0,
-                      summary: 'Test article...',
-                      coverImage: null,
-                      theme: null,
-                      parentChannel: {
-                        id: 'ContentChannel:4f68015ba18662a7409d1219a4ce013e',
-                        name: 'Articles',
-                        __typename: 'ContentChannel',
-                      },
-                      videos: [],
-                      audios: [],
-                      __typename: 'UniversalContentItem',
-                    },
-                    __typename: 'ContentItemsConnectionEdge',
-                  },
-                  {
-                    node: {
-                      id:
-                        'UniversalContentItem:c495ff18cd998ed516a798b6218907cd',
-                      title: '10 ways to refresh your spirit every day',
-                      hyphenatedTitle:
-                        '10 ways to refresh your spirit every day',
-                      isLiked: false,
-                      likedCount: 2,
-                      summary:
-                        '1. Be slow What would it look like to live your life at half-speed?',
-                      coverImage: null,
-                      theme: null,
-                      parentChannel: {
-                        id: 'ContentChannel:4f68015ba18662a7409d1219a4ce013e',
-                        name: 'Articles',
-                        __typename: 'ContentChannel',
-                      },
-                      videos: [],
-                      audios: [],
-                      __typename: 'UniversalContentItem',
-                    },
-                    __typename: 'ContentItemsConnectionEdge',
-                  },
-                  {
-                    node: {
-                      id:
-                        'UniversalContentItem:95ff79f60a028b1b506aaeedf8b4c6ae',
-                      title: 'Live for Freedom Toolkit',
-                      hyphenatedTitle: 'Live for Freedom Toolkit',
-                      isLiked: false,
-                      likedCount: 1,
-                      summary:
-                        "Get in the Groove\nCelebrate your freedom in Christ — in the car, shower, cubicle or wherever you go — with this playlist of NewSpring Worship's favorite songs of the summer.",
-                      coverImage: null,
-                      theme: null,
-                      parentChannel: {
-                        id: 'ContentChannel:4f68015ba18662a7409d1219a4ce013e',
-                        name: 'Articles',
-                        __typename: 'ContentChannel',
-                      },
-                      videos: [],
-                      audios: [],
-                      __typename: 'UniversalContentItem',
-                    },
-                    __typename: 'ContentItemsConnectionEdge',
-                  },
-                ],
-                __typename: 'ContentItemsConnection',
-              },
-              __typename: 'ContentChannel',
-            },
-            {
-              id: 'ContentChannel:a0f64573eabf00a607bec911794d50fb',
-              name: 'Sermon Series',
-              childContentItemsConnection: {
-                edges: [
-                  {
-                    node: {
-                      id:
-                        'ContentSeriesContentItem:6d8dc8e4bad017f815ae0cac8bf692bb',
-                      title: 'The New Weekend Experience',
-                      hyphenatedTitle: 'The New Weekend Experience',
-                      isLiked: false,
-                      likedCount: 1,
-                      summary:
-                        'Have you come into relationship with Jesus Christ?',
-                      coverImage: {
-                        name: 'Series Image',
-                        sources: [
-                          {
-                            uri:
-                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D98be229f-dfed-4344-86ab-0d11666fc781',
-                            __typename: 'ImageMediaSource',
-                          },
-                        ],
-                        __typename: 'ImageMedia',
-                      },
-                      theme: null,
-                      parentChannel: {
-                        id: 'ContentChannel:a0f64573eabf00a607bec911794d50fb',
-                        name: 'Sermon Series',
-                        __typename: 'ContentChannel',
-                      },
-                      videos: [
-                        { sources: [], __typename: 'VideoMedia' },
-                        { sources: [], __typename: 'VideoMedia' },
-                      ],
-                      audios: [],
-                      __typename: 'ContentSeriesContentItem',
-                    },
-                    __typename: 'ContentItemsConnectionEdge',
-                  },
-                  {
-                    node: {
-                      id:
-                        'ContentSeriesContentItem:08449058d438ebeaffe9adb7a8e633cc',
-                      title: 'Gathering',
-                      hyphenatedTitle: 'Gathering',
-                      isLiked: false,
-                      likedCount: 0,
-                      summary: '',
-                      coverImage: {
-                        name: 'Square Image',
-                        sources: [
-                          {
-                            uri:
-                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D50f4e3e3-2842-4991-9f64-8fc6fbb3067c',
-                            __typename: 'ImageMediaSource',
-                          },
-                        ],
-                        __typename: 'ImageMedia',
-                      },
-                      theme: null,
-                      parentChannel: {
-                        id: 'ContentChannel:a0f64573eabf00a607bec911794d50fb',
-                        name: 'Sermon Series',
-                        __typename: 'ContentChannel',
-                      },
-                      videos: [
-                        { sources: [], __typename: 'VideoMedia' },
-                        { sources: [], __typename: 'VideoMedia' },
-                      ],
-                      audios: [],
-                      __typename: 'ContentSeriesContentItem',
-                    },
-                    __typename: 'ContentItemsConnectionEdge',
-                  },
-                  {
-                    node: {
-                      id:
-                        'ContentSeriesContentItem:b74c2d295a0cf1340232ffa8be856c00',
-                      title: 'Gauntlet 2018',
-                      hyphenatedTitle: 'Gauntlet 2018',
-                      isLiked: false,
-                      likedCount: 0,
-                      summary: '',
-                      coverImage: {
-                        name: 'Square Image',
-                        sources: [
-                          {
-                            uri:
-                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D3e3e38d2-d804-45db-b45a-3b7a82c415d1',
-                            __typename: 'ImageMediaSource',
-                          },
-                        ],
-                        __typename: 'ImageMedia',
-                      },
-                      theme: null,
-                      parentChannel: {
-                        id: 'ContentChannel:a0f64573eabf00a607bec911794d50fb',
-                        name: 'Sermon Series',
-                        __typename: 'ContentChannel',
-                      },
-                      videos: [
-                        { sources: [], __typename: 'VideoMedia' },
-                        { sources: [], __typename: 'VideoMedia' },
-                      ],
-                      audios: [],
-                      __typename: 'ContentSeriesContentItem',
-                    },
-                    __typename: 'ContentItemsConnectionEdge',
-                  },
-                ],
-                __typename: 'ContentItemsConnection',
-              },
-              __typename: 'ContentChannel',
-            },
-            {
-              id: 'ContentChannel:7fba1b1ee253e0fd5f0795b4b8b1175e',
-              name: 'Devotion Series',
-              childContentItemsConnection: {
-                edges: [
-                  {
-                    node: {
-                      id:
-                        'ContentSeriesContentItem:b085ec27d53006e9e6b95f3ac57da581',
-                      title: 'Jeremiah: A 33-Day Devotional',
-                      hyphenatedTitle: 'Jeremiah: A 33-Day Devotional',
-                      isLiked: true,
-                      likedCount: 6,
-                      summary: 'Have you ever had to deliver difficult news?',
-                      coverImage: {
-                        name: 'Square Image',
-                        sources: [
-                          {
-                            uri:
-                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D31af1a61-360c-4b1e-8e62-45517c06a9a2',
-                            __typename: 'ImageMediaSource',
-                          },
-                        ],
-                        __typename: 'ImageMedia',
-                      },
-                      theme: null,
-                      parentChannel: {
-                        id: 'ContentChannel:7fba1b1ee253e0fd5f0795b4b8b1175e',
-                        name: 'Devotion Series',
-                        __typename: 'ContentChannel',
-                      },
-                      videos: [{ sources: [], __typename: 'VideoMedia' }],
-                      audios: [],
-                      __typename: 'ContentSeriesContentItem',
-                    },
-                    __typename: 'ContentItemsConnectionEdge',
-                  },
-                  {
-                    node: {
-                      id:
-                        'ContentSeriesContentItem:71bfdac0b98ea1b72a63ff4ea64e3c5a',
-                      title: 'How To Be A Better Leader: A 7-Day Devotional',
-                      hyphenatedTitle:
-                        'How To Be A Better Leader: A 7-Day Devotional',
-                      isLiked: false,
-                      likedCount: 0,
-                      summary: '',
-                      coverImage: {
-                        name: 'Square Image',
-                        sources: [
-                          {
-                            uri:
-                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3Dd3a96243-2558-4c04-bf41-3aadcf41771f',
-                            __typename: 'ImageMediaSource',
-                          },
-                        ],
-                        __typename: 'ImageMedia',
-                      },
-                      theme: null,
-                      parentChannel: {
-                        id: 'ContentChannel:7fba1b1ee253e0fd5f0795b4b8b1175e',
-                        name: 'Devotion Series',
-                        __typename: 'ContentChannel',
-                      },
-                      videos: [{ sources: [], __typename: 'VideoMedia' }],
-                      audios: [],
-                      __typename: 'ContentSeriesContentItem',
-                    },
-                    __typename: 'ContentItemsConnectionEdge',
-                  },
-                  {
-                    node: {
-                      id:
-                        'ContentSeriesContentItem:44fd3b82373ea8f197bd1e1e77c4bed0',
-                      title: '2 Thessalonians: A 5-Day Devotional',
-                      hyphenatedTitle: '2 Thessalonians: A 5-Day Devotional',
-                      isLiked: false,
-                      likedCount: 0,
-                      summary: '',
-                      coverImage: {
-                        name: 'Square Image',
-                        sources: [
-                          {
-                            uri:
-                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D70b0b57c-5a15-4f46-8e6a-c759231685bf',
-                            __typename: 'ImageMediaSource',
-                          },
-                        ],
-                        __typename: 'ImageMedia',
-                      },
-                      theme: null,
-                      parentChannel: {
-                        id: 'ContentChannel:7fba1b1ee253e0fd5f0795b4b8b1175e',
-                        name: 'Devotion Series',
-                        __typename: 'ContentChannel',
-                      },
-                      videos: [{ sources: [], __typename: 'VideoMedia' }],
-                      audios: [],
-                      __typename: 'ContentSeriesContentItem',
-                    },
-                    __typename: 'ContentItemsConnectionEdge',
-                  },
-                ],
-                __typename: 'ContentItemsConnection',
-              },
-              __typename: 'ContentChannel',
-            },
-            {
-              id: 'ContentChannel:be7381e9c2fea9f41504cd98d4b14321',
-              name: 'Stories',
-              childContentItemsConnection: {
-                edges: [
-                  {
-                    node: {
-                      id:
-                        'UniversalContentItem:cf8fa657f23af88a2d63f7e4a2237db8',
-                      title:
-                        'The surprising journey that changed me and my dad',
-                      hyphenatedTitle:
-                        'The surprising journey that changed me and my dad',
-                      isLiked: false,
-                      likedCount: 6,
-                      summary:
-                        'My father, Darwin, has always been involved in my life.',
-                      coverImage: {
-                        name: 'Square Image',
-                        sources: [
-                          {
-                            uri:
-                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D2a65e561-cd6e-4590-bb37-029a21c554e8',
-                            __typename: 'ImageMediaSource',
-                          },
-                        ],
-                        __typename: 'ImageMedia',
-                      },
-                      theme: null,
-                      parentChannel: {
-                        id: 'ContentChannel:be7381e9c2fea9f41504cd98d4b14321',
-                        name: 'Stories',
-                        __typename: 'ContentChannel',
-                      },
-                      videos: [],
-                      audios: [],
-                      __typename: 'UniversalContentItem',
-                    },
-                    __typename: 'ContentItemsConnectionEdge',
-                  },
-                  {
-                    node: {
-                      id:
-                        'UniversalContentItem:2e17f5a66407d114ab9f2392b03ebccd',
-                      title: 'When I lost hope, my church family had my back',
-                      hyphenatedTitle:
-                        'When I lost hope, my church family had my back',
-                      isLiked: true,
-                      likedCount: 5,
-                      summary:
-                        'Brian Kalwat was just trying to knock something off his honey-do list.',
-                      coverImage: {
-                        name: 'Square Image',
-                        sources: [
-                          {
-                            uri:
-                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D0305285f-1155-4405-ba38-a61b9c8558be',
-                            __typename: 'ImageMediaSource',
-                          },
-                        ],
-                        __typename: 'ImageMedia',
-                      },
-                      theme: null,
-                      parentChannel: {
-                        id: 'ContentChannel:be7381e9c2fea9f41504cd98d4b14321',
-                        name: 'Stories',
-                        __typename: 'ContentChannel',
-                      },
-                      videos: [],
-                      audios: [],
-                      __typename: 'UniversalContentItem',
-                    },
-                    __typename: 'ContentItemsConnectionEdge',
-                  },
-                  {
-                    node: {
-                      id:
-                        'UniversalContentItem:ae8ec75906ba7437c49ad2534b5024db',
-                      title: 'A Place to Worship Free of Fear',
-                      hyphenatedTitle: 'A Place to Worship Free of Fear',
-                      isLiked: false,
-                      likedCount: 1,
-                      summary:
-                        'Cornelius &amp; Stephanie Mack, proud parents of a Special Friends adult, share about their experience\nOur son Cameron began attending Willow Creek Special Friends in 2015.',
-                      coverImage: {
-                        name: 'Portrait Image',
-                        sources: [
-                          {
-                            uri:
-                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3Da65bc45d-f961-4b7e-a899-63eb1f9b8da9',
-                            __typename: 'ImageMediaSource',
-                          },
-                        ],
-                        __typename: 'ImageMedia',
-                      },
-                      theme: null,
-                      parentChannel: {
-                        id: 'ContentChannel:be7381e9c2fea9f41504cd98d4b14321',
-                        name: 'Stories',
-                        __typename: 'ContentChannel',
-                      },
-                      videos: [],
-                      audios: [],
-                      __typename: 'UniversalContentItem',
-                    },
-                    __typename: 'ContentItemsConnectionEdge',
-                  },
-                ],
-                __typename: 'ContentItemsConnection',
-              },
-              __typename: 'ContentChannel',
-            },
-          ],
-        },
-      },
-    };
-    const mockChannelCardData = flatMap(
-      mockFeedData.result.data.contentChannels,
-      (contentChannel) =>
-        contentChannel.childContentItemsConnection.edges.map((edge) => ({
-          request: {
-            query: GET_CONTENT_CARD,
-            variables: { contentId: edge.node.id },
-          },
-          result: {
-            data: {
-              node: edge.node,
-            },
-          },
-        }))
-    );
-
-    const DiscoverStack = createStackNavigator({ DiscoverFeed });
-    const DiscoverFeedWithNavigation = createAppContainer(DiscoverStack);
-    const tree = await renderWithApolloData(
-      <Providers mocks={[mockFeedData, ...mockChannelCardData]}>
-        <DiscoverFeedWithNavigation />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render a loading state', () => {
-    const DiscoverStack = createStackNavigator({ DiscoverFeed });
-    const DiscoverFeedWithNavigation = createAppContainer(DiscoverStack);
-    const tree = renderer.create(
-      <Providers cache={null}>
-        <DiscoverFeedWithNavigation />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/tabs/discover/DiscoverFeed/TileContentFeed.js b/apolloschurchapp/src/tabs/discover/DiscoverFeed/TileContentFeed.js
deleted file mode 100644
index fcea58e..0000000
--- a/apolloschurchapp/src/tabs/discover/DiscoverFeed/TileContentFeed.js
+++ /dev/null
@@ -1,113 +0,0 @@
-import React from 'react';
-import { View } from 'react-native';
-import { withNavigation } from 'react-navigation';
-import isEmpty from 'lodash/isEmpty';
-import PropTypes from 'prop-types';
-
-import {
-  styled,
-  withTheme,
-  H5,
-  H6,
-  HorizontalTileFeed,
-  ButtonLink,
-  TouchableScale,
-  Touchable,
-  withIsLoading,
-} from '@apollosproject/ui-kit';
-
-import { HorizontalContentCardConnected } from '@apollosproject/ui-connected';
-
-const RowHeader = styled(({ theme }) => ({
-  flexDirection: 'row',
-  justifyContent: 'space-between',
-  alignItems: 'center',
-  zIndex: 2, // UX hack to improve tapability. Positions RowHeader above StyledHorizontalTileFeed
-  paddingLeft: theme.sizing.baseUnit,
-}))(View);
-
-const Name = styled({
-  flexGrow: 2,
-})(View);
-
-const AndroidTouchableFix = withTheme(({ theme }) => ({
-  borderRadius: theme.sizing.baseBorderRadius / 2,
-}))(Touchable);
-
-const ButtonLinkSpacing = styled(({ theme }) => ({
-  flexDirection: 'row', // correctly positions the loading state
-  justifyContent: 'flex-end', // correctly positions the loading state
-  padding: theme.sizing.baseUnit, // UX hack to improve tapability.
-}))(View);
-
-const StyledHorizontalTileFeed = styled(({ theme }) => ({
-  /* UX hack to improve tapability. The magic number below happens to be the number of pixels that
-   * aligns everything in the same place as if none of the UX hacks were there. */
-  marginTop: theme.sizing.baseUnit * -1.25,
-  paddingBottom: theme.sizing.baseUnit,
-  zIndex: 1,
-}))(HorizontalTileFeed);
-
-const loadingStateObject = {
-  id: 'fake_id',
-  title: '',
-  coverImage: [],
-};
-
-const TileContentFeed = ({ isLoading, id, name, navigation, content = [] }) =>
-  (isLoading || !isEmpty(content)) && (
-    <>
-      <RowHeader>
-        <Name>
-          <H5>{name}</H5>
-        </Name>
-        <AndroidTouchableFix
-          onPress={() => {
-            navigation.navigate('ContentFeed', {
-              itemId: id,
-              itemTitle: name,
-            });
-          }}
-        >
-          <ButtonLinkSpacing>
-            <H6>
-              <ButtonLink>View All</ButtonLink>
-            </H6>
-          </ButtonLinkSpacing>
-        </AndroidTouchableFix>
-      </RowHeader>
-      <StyledHorizontalTileFeed
-        content={content}
-        renderItem={({ item }) => (
-          <TouchableScale
-            onPress={() => {
-              navigation.push('ContentSingle', {
-                itemId: item.id,
-              });
-            }}
-          >
-            <HorizontalContentCardConnected
-              contentId={item.id}
-              isLoading={isLoading}
-            />
-          </TouchableScale>
-        )}
-        loadingStateObject={loadingStateObject}
-        isLoading={isLoading}
-      />
-    </>
-  );
-
-TileContentFeed.propTypes = {
-  navigation: PropTypes.shape({
-    navigate: PropTypes.func,
-  }),
-  isLoading: PropTypes.bool,
-  id: PropTypes.string,
-  name: PropTypes.string,
-  content: PropTypes.arrayOf(
-    PropTypes.any // this component doesn't care about the shape of `node`, just that it exists
-  ),
-};
-
-export default withNavigation(withIsLoading(TileContentFeed));
diff --git a/apolloschurchapp/src/tabs/discover/DiscoverFeed/getContentChannels.js b/apolloschurchapp/src/tabs/discover/DiscoverFeed/getContentChannels.js
deleted file mode 100644
index 8168eb9..0000000
--- a/apolloschurchapp/src/tabs/discover/DiscoverFeed/getContentChannels.js
+++ /dev/null
@@ -1,20 +0,0 @@
-import gql from 'graphql-tag';
-import ApollosConfig from '@apollosproject/config';
-
-export default gql`
-  query getContentChannels {
-    contentChannels {
-      id
-      name
-      childContentItemsConnection(first: 3) {
-        edges {
-          node {
-            id
-            ...contentCardFragment
-          }
-        }
-      }
-    }
-  }
-  ${ApollosConfig.FRAGMENTS.CONTENT_CARD_FRAGMENT}
-`;
diff --git a/apolloschurchapp/src/tabs/discover/DiscoverFeed/index.js b/apolloschurchapp/src/tabs/discover/DiscoverFeed/index.js
deleted file mode 100644
index b680505..0000000
--- a/apolloschurchapp/src/tabs/discover/DiscoverFeed/index.js
+++ /dev/null
@@ -1,61 +0,0 @@
-import React, { memo } from 'react';
-import { Query } from 'react-apollo';
-import { get } from 'lodash';
-import PropTypes from 'prop-types';
-
-import { FeedView } from '@apollosproject/ui-kit';
-
-import TileContentFeed from './TileContentFeed';
-import GET_CONTENT_CHANNELS from './getContentChannels';
-
-const childContentItemLoadingState = {
-  title: '',
-  isLoading: true,
-};
-
-const feedItemLoadingState = {
-  name: '',
-  isLoading: true,
-};
-
-const renderItem = (
-  { item } // eslint-disable-line react/prop-types
-) => (
-  <TileContentFeed
-    id={item.id}
-    name={item.name}
-    content={get(item, 'childContentItemsConnection.edges', []).map(
-      (edge) => edge.node
-    )}
-    isLoading={item.isLoading}
-    loadingStateObject={childContentItemLoadingState}
-  />
-);
-
-renderItem.propTypes = {
-  item: PropTypes.shape({
-    id: PropTypes.string,
-    name: PropTypes.string,
-    isLoading: PropTypes.bool,
-  }),
-};
-
-const DiscoverFeed = memo(() => (
-  <Query query={GET_CONTENT_CHANNELS} fetchPolicy="cache-and-network">
-    {({ error, loading, data: { contentChannels = [] } = {}, refetch }) => (
-      <FeedView
-        error={error}
-        content={contentChannels}
-        isLoading={loading && !contentChannels.length}
-        refetch={refetch}
-        renderItem={renderItem}
-        loadingStateObject={feedItemLoadingState}
-        numColumns={1}
-      />
-    )}
-  </Query>
-));
-
-DiscoverFeed.displayName = 'DiscoverFeed';
-
-export default DiscoverFeed;
diff --git a/apolloschurchapp/src/tabs/discover/SearchFeed/NoResults.js b/apolloschurchapp/src/tabs/discover/SearchFeed/NoResults.js
deleted file mode 100644
index 7cc7a56..0000000
--- a/apolloschurchapp/src/tabs/discover/SearchFeed/NoResults.js
+++ /dev/null
@@ -1,57 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-
-import {
-  styled,
-  withTheme,
-  CenteredView,
-  PaddedView,
-  Icon,
-  H4,
-  BodySmall,
-} from '@apollosproject/ui-kit';
-
-const StyledIcon = withTheme(({ theme }) => ({
-  fill: theme.colors.text.tertiary,
-  style: {
-    marginRight: theme.sizing.baseUnit / 2,
-  },
-}))(Icon);
-
-const Title = styled({
-  flexDirection: 'row',
-  alignItems: 'center',
-})(PaddedView);
-
-const NoResultsText = styled(
-  ({ theme }) => ({
-    color: theme.colors.text.tertiary,
-    textAlign: 'center',
-  }),
-  'Discover.SearchFeed.NoResultsText'
-);
-
-const StyledH4 = NoResultsText(H4);
-const StyledBodySmall = NoResultsText(BodySmall);
-
-const NoResults = ({ searchText }) => (
-  <CenteredView>
-    <Title vertical={false}>
-      <StyledIcon name={'umbrella'} />
-      <StyledH4 padded>Uh Oh!</StyledH4>
-    </Title>
-    <PaddedView vertical={false}>
-      <StyledBodySmall>
-        {"Looks like we couldn't find anything for "}
-        <StyledBodySmall bold>{`"${searchText}."`}</StyledBodySmall>
-        {' Try searching for something else!'}
-      </StyledBodySmall>
-    </PaddedView>
-  </CenteredView>
-);
-
-NoResults.propTypes = {
-  searchText: PropTypes.string,
-};
-
-export default NoResults;
diff --git a/apolloschurchapp/src/tabs/discover/SearchFeed/SearchFeed.tests.js b/apolloschurchapp/src/tabs/discover/SearchFeed/SearchFeed.tests.js
deleted file mode 100644
index d8e0544..0000000
--- a/apolloschurchapp/src/tabs/discover/SearchFeed/SearchFeed.tests.js
+++ /dev/null
@@ -1,353 +0,0 @@
-import React from 'react';
-import { flatMap } from 'lodash';
-import { createStackNavigator, createAppContainer } from 'react-navigation';
-import renderer from 'react-test-renderer';
-
-import { GET_CONTENT_CARD } from '@apollosproject/ui-connected';
-import Providers from '../../../Providers';
-import { renderWithApolloData } from '../../../utils/testUtils';
-
-import GET_SEARCH_RESULTS from './getSearchResults';
-import SearchFeed from '.';
-
-describe('The SearchFeed component', () => {
-  it('should render', async () => {
-    const mockFeedData = {
-      request: {
-        query: GET_SEARCH_RESULTS,
-        variables: { searchText: 'Love' },
-      },
-      result: {
-        data: {
-          search: {
-            edges: [
-              {
-                title: 'How to lead people to Jesus',
-                summary:
-                  'Love compels a mother to lose all dignity in public as she screams the name of her lost child.',
-                coverImage: {
-                  name: null,
-                  sources: [
-                    {
-                      uri:
-                        'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3Dd3a96243-2558-4c04-bf41-3aadcf41771f',
-                      __typename: 'ImageMediaSource',
-                    },
-                  ],
-                  __typename: 'ImageMedia',
-                },
-                cursor: 'b487224762b030f470967f45d7205823',
-                node: {
-                  id: 'DevotionalContentItem:561dfb7dbd8a5c093fd8385c7edaadbc',
-                  title: 'How to lead people to Jesus',
-                  hyphenatedTitle: '-',
-                  isLiked: false,
-                  likedCount: 0,
-                  summary:
-                    'Love compels a mother to lose all dignity in public as she screams the name of her lost child.',
-                  coverImage: {
-                    name: 'Square Image',
-                    sources: [
-                      {
-                        uri:
-                          'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3Dd3a96243-2558-4c04-bf41-3aadcf41771f',
-                        __typename: 'ImageMediaSource',
-                      },
-                    ],
-                    __typename: 'ImageMedia',
-                  },
-                  theme: null,
-                  parentChannel: {
-                    id: 'ContentChannel:559b23fd0aa90e81b1c023e72e230fa1',
-                    name: 'Devotional',
-                    __typename: 'ContentChannel',
-                  },
-                  videos: [{ sources: [], __typename: 'VideoMedia' }],
-                  audios: [],
-                  __typename: 'DevotionalContentItem',
-                },
-                __typename: 'SearchResult',
-              },
-              {
-                title: 'Live for Freedom Toolkit',
-                summary:
-                  "Get in the Groove\nCelebrate your freedom in Christ — in the car, shower, cubicle or wherever you go — with this playlist of NewSpring Worship's favorite songs of the summer.",
-                coverImage: null,
-                cursor: '4affc1122ad80d4edcf6c5bc9d88ae99',
-                node: {
-                  id: 'UniversalContentItem:95ff79f60a028b1b506aaeedf8b4c6ae',
-                  title: 'Live for Freedom Toolkit',
-                  hyphenatedTitle: '-',
-                  isLiked: false,
-                  likedCount: 1,
-                  summary:
-                    "Get in the Groove\nCelebrate your freedom in Christ — in the car, shower, cubicle or wherever you go — with this playlist of NewSpring Worship's favorite songs of the summer.",
-                  coverImage: null,
-                  theme: null,
-                  parentChannel: {
-                    id: 'ContentChannel:4f68015ba18662a7409d1219a4ce013e',
-                    name: 'Articles',
-                    __typename: 'ContentChannel',
-                  },
-                  videos: [],
-                  audios: [],
-                  __typename: 'UniversalContentItem',
-                },
-                __typename: 'SearchResult',
-              },
-              {
-                title: 'Should your 20-something live at home?',
-                summary:
-                  'Daughter: “Mom, can I bring some friends from college over for dinner Sunday?',
-                coverImage: {
-                  name: null,
-                  sources: [
-                    {
-                      uri:
-                        'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3Db08e4d69-0acf-40ff-920a-4517de086175',
-                      __typename: 'ImageMediaSource',
-                    },
-                  ],
-                  __typename: 'ImageMedia',
-                },
-                cursor: '659a26257a49fb2bf1446bb747bf7dd3',
-                node: {
-                  id: 'UniversalContentItem:895738f70482712adb3ab45a08c30456',
-                  title: 'Should your 20-something live at home?',
-                  hyphenatedTitle: '-',
-                  isLiked: false,
-                  likedCount: 0,
-                  summary:
-                    'Daughter: “Mom, can I bring some friends from college over for dinner Sunday?',
-                  coverImage: {
-                    name: 'Landscape Image',
-                    sources: [
-                      {
-                        uri:
-                          'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3Db08e4d69-0acf-40ff-920a-4517de086175',
-                        __typename: 'ImageMediaSource',
-                      },
-                    ],
-                    __typename: 'ImageMedia',
-                  },
-                  theme: null,
-                  parentChannel: {
-                    id: 'ContentChannel:4f68015ba18662a7409d1219a4ce013e',
-                    name: 'Articles',
-                    __typename: 'ContentChannel',
-                  },
-                  videos: [],
-                  audios: [],
-                  __typename: 'UniversalContentItem',
-                },
-                __typename: 'SearchResult',
-              },
-              {
-                title: 'Guys Night!',
-                summary: 'A time to connect with other guys who live nearby.',
-                coverImage: {
-                  name: null,
-                  sources: [
-                    {
-                      uri:
-                        'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D58c037fa-cc7f-4d72-9571-a0cc0558e346',
-                      __typename: 'ImageMediaSource',
-                    },
-                  ],
-                  __typename: 'ImageMedia',
-                },
-                cursor: 'c8d2fe738629909c33010432432f21c8',
-                node: {
-                  id: 'UniversalContentItem:296373ecb53580855cadffa0375ebe18',
-                  title: 'Guys Night!',
-                  hyphenatedTitle: '-',
-                  isLiked: false,
-                  likedCount: 0,
-                  summary: 'A time to connect with other guys who live nearby.',
-                  coverImage: {
-                    name: 'Square Image',
-                    sources: [
-                      {
-                        uri:
-                          'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D58c037fa-cc7f-4d72-9571-a0cc0558e346',
-                        __typename: 'ImageMediaSource',
-                      },
-                    ],
-                    __typename: 'ImageMedia',
-                  },
-                  theme: null,
-                  parentChannel: {
-                    id: 'ContentChannel:965b6e6d7046a885bea4e300b5c0400d',
-                    name: 'News',
-                    __typename: 'ContentChannel',
-                  },
-                  videos: [],
-                  audios: [],
-                  __typename: 'UniversalContentItem',
-                },
-                __typename: 'SearchResult',
-              },
-              {
-                title: '10 ways to refresh your spirit every day',
-                summary:
-                  '1. Be slow What would it look like to live your life at half-speed?',
-                coverImage: null,
-                cursor: 'ba47485fbc61945a38a4147fe7ff3703',
-                node: {
-                  id: 'UniversalContentItem:c495ff18cd998ed516a798b6218907cd',
-                  title: '10 ways to refresh your spirit every day',
-                  hyphenatedTitle: '-',
-                  isLiked: false,
-                  likedCount: 2,
-                  summary:
-                    '1. Be slow What would it look like to live your life at half-speed?',
-                  coverImage: null,
-                  theme: null,
-                  parentChannel: {
-                    id: 'ContentChannel:4f68015ba18662a7409d1219a4ce013e',
-                    name: 'Articles',
-                    __typename: 'ContentChannel',
-                  },
-                  videos: [],
-                  audios: [],
-                  __typename: 'UniversalContentItem',
-                },
-                __typename: 'SearchResult',
-              },
-              {
-                title: 'Why leadership isn’t all about the title',
-                summary:
-                  'We all like to know that our boss or the authority over us is pleased, and it means even more when they take the time to share that in front of other people.',
-                coverImage: {
-                  name: null,
-                  sources: [
-                    {
-                      uri:
-                        'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3Dd3a96243-2558-4c04-bf41-3aadcf41771f',
-                      __typename: 'ImageMediaSource',
-                    },
-                  ],
-                  __typename: 'ImageMedia',
-                },
-                cursor: '9456eef87e314dcf19f013384a29fd22',
-                node: {
-                  id: 'DevotionalContentItem:4dd74ceca9e09b5276e93cbf53821bd6',
-                  title: 'Why leadership isn’t all about the title',
-                  hyphenatedTitle: '-',
-                  isLiked: false,
-                  likedCount: 0,
-                  summary:
-                    'We all like to know that our boss or the authority over us is pleased, and it means even more when they take the time to share that in front of other people.',
-                  coverImage: {
-                    name: 'Square Image',
-                    sources: [
-                      {
-                        uri:
-                          'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3Dd3a96243-2558-4c04-bf41-3aadcf41771f',
-                        __typename: 'ImageMediaSource',
-                      },
-                    ],
-                    __typename: 'ImageMedia',
-                  },
-                  theme: null,
-                  parentChannel: {
-                    id: 'ContentChannel:559b23fd0aa90e81b1c023e72e230fa1',
-                    name: 'Devotional',
-                    __typename: 'ContentChannel',
-                  },
-                  videos: [{ sources: [], __typename: 'VideoMedia' }],
-                  audios: [],
-                  __typename: 'DevotionalContentItem',
-                },
-                __typename: 'SearchResult',
-              },
-            ],
-            __typename: 'SearchResultsConnection',
-          },
-        },
-      },
-    };
-
-    const mockSearchResultsCardData = flatMap(
-      mockFeedData.result.data.search.edges,
-      (node) => ({
-        request: {
-          query: GET_CONTENT_CARD,
-          variables: { contentId: node.id },
-        },
-        result: {
-          data: {
-            node,
-          },
-        },
-      })
-    );
-
-    const SearchStack = createStackNavigator({
-      SearchFeed: (props) => <SearchFeed searchText={'Love'} {...props} />, // eslint-disable-line react/display-name
-    });
-    const SearchFeedWithNavigation = createAppContainer(SearchStack);
-    const tree = await renderWithApolloData(
-      <Providers mocks={[mockFeedData, ...mockSearchResultsCardData]}>
-        <SearchFeedWithNavigation searchText={'Love'} />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render an empty state', async () => {
-    const mockEmptyFeedData = {
-      request: {
-        query: GET_SEARCH_RESULTS,
-        variables: { searchText: 'No results here' },
-      },
-      result: {
-        data: {
-          search: {
-            edges: [],
-            __typename: 'SearchResultsConnection',
-          },
-        },
-      },
-    };
-
-    const mockEmptySearchResultsCardData = [
-      {
-        request: {
-          query: GET_CONTENT_CARD,
-          variables: { contentId: 'fake-id' },
-        },
-        result: {
-          data: {},
-        },
-      },
-    ];
-
-    const SearchStack = createStackNavigator({
-      // eslint-disable-next-line react/display-name
-      SearchFeed: (props) => (
-        <SearchFeed searchText={'No results here'} {...props} />
-      ),
-    });
-
-    const SearchFeedWithNavigation = createAppContainer(SearchStack);
-    const tree = await renderWithApolloData(
-      <Providers
-        mocks={[mockEmptyFeedData, ...mockEmptySearchResultsCardData]}
-        cache={null}
-      >
-        <SearchFeedWithNavigation searchText={'No results here'} />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render a loading state', () => {
-    const SearchStack = createStackNavigator({ SearchFeed });
-    const SearchFeedWithNavigation = createAppContainer(SearchStack);
-    const tree = renderer.create(
-      <Providers cache={null}>
-        <SearchFeedWithNavigation searchText={'Love'} />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/tabs/discover/SearchFeed/getSearchResults.js b/apolloschurchapp/src/tabs/discover/SearchFeed/getSearchResults.js
deleted file mode 100644
index 9f7dbe8..0000000
--- a/apolloschurchapp/src/tabs/discover/SearchFeed/getSearchResults.js
+++ /dev/null
@@ -1,25 +0,0 @@
-import gql from 'graphql-tag';
-
-export default gql`
-  query searchResults($searchText: String!) {
-    search(query: $searchText) {
-      edges {
-        title
-        summary
-        coverImage {
-          name
-          sources {
-            uri
-          }
-        }
-        cursor
-        node {
-          ... on ContentItem {
-            id
-            __typename
-          }
-        }
-      }
-    }
-  }
-`;
diff --git a/apolloschurchapp/src/tabs/discover/SearchFeed/index.js b/apolloschurchapp/src/tabs/discover/SearchFeed/index.js
deleted file mode 100644
index 3aa9ff2..0000000
--- a/apolloschurchapp/src/tabs/discover/SearchFeed/index.js
+++ /dev/null
@@ -1,57 +0,0 @@
-import React from 'react';
-import { withProps } from 'recompose';
-import { withNavigation } from 'react-navigation';
-import { Query } from 'react-apollo';
-import { get } from 'lodash';
-import PropTypes from 'prop-types';
-
-import { FeedView } from '@apollosproject/ui-kit';
-import { SearchCardConnected } from '@apollosproject/ui-connected';
-
-import GET_SEARCH_RESULTS from './getSearchResults';
-import NoResults from './NoResults';
-
-// this could be refactored into a custom effect hook 💥
-const StyledFeedView = withProps(({ hasContent }) => ({
-  contentContainerStyle: {
-    ...(hasContent ? {} : { flex: 1 }),
-  },
-}))(FeedView);
-
-const handleOnPress = ({ navigation, item }) => {
-  const id = get(item, 'node.id', null);
-  return navigation.navigate('ContentSingle', {
-    itemId: id,
-    transitionKey: item.transitionKey,
-  });
-};
-
-const keyExtractor = (item) => item && get(item, 'node.id', null);
-
-const SearchFeed = withNavigation(({ navigation, searchText }) => (
-  <Query
-    query={GET_SEARCH_RESULTS}
-    variables={{ searchText }}
-    fetchPolicy="cache-and-network"
-  >
-    {({ loading, error, data, refetch }) => (
-      <StyledFeedView
-        ListItemComponent={SearchCardConnected}
-        content={get(data, 'search.edges', [])}
-        ListEmptyComponent={() => <NoResults searchText={searchText} />}
-        hasContent={get(data, 'search.edges', []).length}
-        isLoading={loading}
-        error={error}
-        refetch={refetch}
-        onPressItem={(item) => handleOnPress({ navigation, item })}
-        keyExtractor={keyExtractor}
-      />
-    )}
-  </Query>
-));
-
-SearchFeed.propTypes = {
-  searchText: PropTypes.string,
-};
-
-export default SearchFeed;
diff --git a/apolloschurchapp/src/tabs/discover/TileContentFeed.js b/apolloschurchapp/src/tabs/discover/TileContentFeed.js
new file mode 100644
index 0000000..4470a03
--- /dev/null
+++ b/apolloschurchapp/src/tabs/discover/TileContentFeed.js
@@ -0,0 +1,82 @@
+import React from 'react';
+import { withNavigation } from 'react-navigation';
+import PropTypes from 'prop-types';
+
+import {
+  PaddedView,
+  H4,
+  HorizontalTileFeed,
+  styled,
+  ButtonLink,
+  TouchableScale,
+} from '@apollosproject/ui-kit';
+
+import ContentCardConnected from '../../ui/ContentCardConnected';
+
+const RowHeader = styled({
+  flexDirection: 'row',
+  justifyContent: 'space-between',
+  alignItems: 'center',
+  paddingBottom: 0,
+})(PaddedView);
+
+const loadingStateObject = {
+  id: 'fake_id',
+  title: '',
+  coverImage: [],
+};
+
+const TileContentFeed = ({ isLoading, id, name, navigation, content = [] }) => (
+  <PaddedView horizontal={false}>
+    <RowHeader>
+      <H4 isLoading={isLoading}>{name}</H4>
+      {!isLoading ? (
+        <ButtonLink
+          onPress={() => {
+            navigation.navigate('ContentFeed', {
+              itemId: id,
+              itemTitle: name,
+            });
+          }}
+        >
+          View All
+        </ButtonLink>
+      ) : null}
+    </RowHeader>
+    <HorizontalTileFeed
+      content={content}
+      renderItem={({ item }) => (
+        <TouchableScale
+          onPress={() => {
+            navigation.push('ContentSingle', {
+              itemId: item.id,
+            });
+          }}
+        >
+          <ContentCardConnected
+            contentId={item.id}
+            isLoading={isLoading}
+            tile
+            inHorizontalList
+          />
+        </TouchableScale>
+      )}
+      loadingStateObject={loadingStateObject}
+      isLoading={isLoading}
+    />
+  </PaddedView>
+);
+
+TileContentFeed.propTypes = {
+  navigation: PropTypes.shape({
+    navigate: PropTypes.func,
+  }),
+  isLoading: PropTypes.bool,
+  id: PropTypes.string,
+  name: PropTypes.string,
+  content: PropTypes.arrayOf(
+    PropTypes.any // this component doesn't care about the shape of `node`, just that it exists
+  ),
+};
+
+export default withNavigation(TileContentFeed);
diff --git a/apolloschurchapp/src/tabs/discover/discover.tests.js b/apolloschurchapp/src/tabs/discover/discover.tests.js
index a0cff65..96f2fde 100644
--- a/apolloschurchapp/src/tabs/discover/discover.tests.js
+++ b/apolloschurchapp/src/tabs/discover/discover.tests.js
@@ -1,211 +1,52 @@
 import React from 'react';
-import { flatMap } from 'lodash';
-import { createStackNavigator, createAppContainer } from 'react-navigation';
+import renderer from 'react-test-renderer';
+import { createStackNavigator } from 'react-navigation';
 
-import { GET_CONTENT_CARD } from '@apollosproject/ui-connected';
-import Providers from '../../Providers';
-
-import { renderWithApolloData } from '../../utils/testUtils';
+import Providers from 'apolloschurchapp/src/Providers';
 
 import Discover from './Discover';
-import GET_CONTENT_CHANNELS from './DiscoverFeed/getContentChannels';
+import getContentChannels from './getContentChannels';
 
-describe('The Discover tab component', () => {
-  it('Should retrieve the Content Channel Feeds', async () => {
-    const mockFeedData = {
+describe('Test the Discover Component Query', () => {
+  it('Should retrieve the Content Channel Feeds', () => {
+    const mock = {
       request: {
-        query: GET_CONTENT_CHANNELS,
+        query: getContentChannels,
       },
       result: {
         data: {
           contentChannels: [
-            {
-              id: 'ContentChannel:965b6e6d7046a885bea4e300b5c0400d',
-              name: 'News',
-              childContentItemsConnection: {
-                edges: [
-                  {
-                    node: {
-                      id:
-                        'UniversalContentItem:00bb7b364911281c97fc50f2a0d17b11',
-                      title: 'Anderson Family Cookout!',
-                      hyphenatedTitle: 'Anderson Family Cookout!',
-                      isLiked: false,
-                      likedCount: 0,
-                      summary: 'Come join us!',
-                      coverImage: {
-                        name: 'Landscape Image',
-                        sources: [
-                          {
-                            uri:
-                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D62e0e2ba-2dac-468b-a852-7e8cf2533efc',
-                            __typename: 'ImageMediaSource',
-                          },
-                        ],
-                        __typename: 'ImageMedia',
-                      },
-                      theme: null,
-                      parentChannel: {
-                        id: 'ContentChannel:965b6e6d7046a885bea4e300b5c0400d',
-                        name: 'News',
-                        __typename: 'ContentChannel',
-                      },
-                      videos: [],
-                      audios: [],
-                      __typename: 'UniversalContentItem',
-                    },
-                    __typename: 'ContentItemsConnectionEdge',
-                  },
-                  {
-                    node: {
-                      id:
-                        'UniversalContentItem:7db601b238aa4345a818654300f83dd2',
-                      title: 'Robert Madu is Coming to Christ Fellowship',
-                      hyphenatedTitle:
-                        'Robert Madu is Coming to Christ Fellowship',
-                      isLiked: false,
-                      likedCount: 5,
-                      summary:
-                        "Don't miss a powerful message from preacher and speaker, Robert Madu.",
-                      coverImage: {
-                        name: 'Square Image',
-                        sources: [
-                          {
-                            uri:
-                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3Df3ba0936-8aab-46c1-8245-0e5aef637ae3',
-                            __typename: 'ImageMediaSource',
-                          },
-                        ],
-                        __typename: 'ImageMedia',
-                      },
-                      theme: null,
-                      parentChannel: {
-                        id: 'ContentChannel:965b6e6d7046a885bea4e300b5c0400d',
-                        name: 'News',
-                        __typename: 'ContentChannel',
-                      },
-                      videos: [],
-                      audios: [],
-                      __typename: 'UniversalContentItem',
-                    },
-                    __typename: 'ContentItemsConnectionEdge',
-                  },
-                  {
-                    node: {
-                      id:
-                        'UniversalContentItem:296373ecb53580855cadffa0375ebe18',
-                      title: 'Guys Night!',
-                      hyphenatedTitle: 'Guys Night!',
-                      isLiked: false,
-                      likedCount: 0,
-                      summary:
-                        'A time to connect with other guys who live nearby.',
-                      coverImage: {
-                        name: 'Square Image',
-                        sources: [
-                          {
-                            uri:
-                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D58c037fa-cc7f-4d72-9571-a0cc0558e346',
-                            __typename: 'ImageMediaSource',
-                          },
-                        ],
-                        __typename: 'ImageMedia',
-                      },
-                      theme: null,
-                      parentChannel: {
-                        id: 'ContentChannel:965b6e6d7046a885bea4e300b5c0400d',
-                        name: 'News',
-                        __typename: 'ContentChannel',
-                      },
-                      videos: [],
-                      audios: [],
-                      __typename: 'UniversalContentItem',
-                    },
-                    __typename: 'ContentItemsConnectionEdge',
-                  },
-                ],
-                __typename: 'ContentItemsConnection',
-              },
-              __typename: 'ContentChannel',
-            },
             {
               id: 'ContentChannel:4f68015ba18662a7409d1219a4ce013e',
-              name: 'Articles',
+              name: 'Editorial',
               childContentItemsConnection: {
                 edges: [
                   {
                     node: {
                       id:
-                        'UniversalContentItem:604a4a763a5fc0edfe386684ca6b3515',
-                      title: 'Test Article',
-                      hyphenatedTitle: 'Test Article',
-                      isLiked: false,
-                      likedCount: 0,
-                      summary: 'Test article...',
+                        'UniversalContentItem:d57994350b9d213866b24dea3a97433d',
+                      title: 'Mea Animal Aperiam Ornatus Eu',
                       coverImage: null,
-                      theme: null,
-                      parentChannel: {
-                        id: 'ContentChannel:4f68015ba18662a7409d1219a4ce013e',
-                        name: 'Articles',
-                        __typename: 'ContentChannel',
-                      },
-                      videos: [],
-                      audios: [],
-                      __typename: 'UniversalContentItem',
                     },
-                    __typename: 'ContentItemsConnectionEdge',
                   },
                   {
                     node: {
                       id:
-                        'UniversalContentItem:c495ff18cd998ed516a798b6218907cd',
-                      title: '10 ways to refresh your spirit every day',
-                      hyphenatedTitle:
-                        '10 ways to refresh your spirit every day',
-                      isLiked: false,
-                      likedCount: 2,
-                      summary:
-                        '1. Be slow What would it look like to live your life at half-speed?',
+                        'UniversalContentItem:b36e55d803443431e96bb4b5068147ec',
+                      title: 'Probo Senserit Id Mea, Ut Sed Malis Postea,',
                       coverImage: null,
-                      theme: null,
-                      parentChannel: {
-                        id: 'ContentChannel:4f68015ba18662a7409d1219a4ce013e',
-                        name: 'Articles',
-                        __typename: 'ContentChannel',
-                      },
-                      videos: [],
-                      audios: [],
-                      __typename: 'UniversalContentItem',
                     },
-                    __typename: 'ContentItemsConnectionEdge',
                   },
                   {
                     node: {
                       id:
-                        'UniversalContentItem:95ff79f60a028b1b506aaeedf8b4c6ae',
-                      title: 'Live for Freedom Toolkit',
-                      hyphenatedTitle: 'Live for Freedom Toolkit',
-                      isLiked: false,
-                      likedCount: 1,
-                      summary:
-                        "Get in the Groove\nCelebrate your freedom in Christ — in the car, shower, cubicle or wherever you go — with this playlist of NewSpring Worship's favorite songs of the summer.",
+                        'UniversalContentItem:57c465ee3cd69524d729569b338607de',
+                      title: 'Ea Harum Albucius Mel',
                       coverImage: null,
-                      theme: null,
-                      parentChannel: {
-                        id: 'ContentChannel:4f68015ba18662a7409d1219a4ce013e',
-                        name: 'Articles',
-                        __typename: 'ContentChannel',
-                      },
-                      videos: [],
-                      audios: [],
-                      __typename: 'UniversalContentItem',
                     },
-                    __typename: 'ContentItemsConnectionEdge',
                   },
                 ],
-                __typename: 'ContentItemsConnection',
               },
-              __typename: 'ContentChannel',
             },
             {
               id: 'ContentChannel:a0f64573eabf00a607bec911794d50fb',
@@ -215,113 +56,50 @@ describe('The Discover tab component', () => {
                   {
                     node: {
                       id:
-                        'ContentSeriesContentItem:6d8dc8e4bad017f815ae0cac8bf692bb',
-                      title: 'The New Weekend Experience',
-                      hyphenatedTitle: 'The New Weekend Experience',
-                      isLiked: false,
-                      likedCount: 1,
-                      summary:
-                        'Have you come into relationship with Jesus Christ?',
+                        'UniversalContentItem:1c627c20911791321f819125a65c3c9d',
+                      title: 'Money Wise',
                       coverImage: {
-                        name: 'Series Image',
                         sources: [
                           {
                             uri:
-                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D98be229f-dfed-4344-86ab-0d11666fc781',
-                            __typename: 'ImageMediaSource',
+                              'https://apollosrock.newspring.cc/GetImage.ashx?guid=33e4c568-a456-4250-a8dc-6a4ceb548455',
                           },
                         ],
-                        __typename: 'ImageMedia',
-                      },
-                      theme: null,
-                      parentChannel: {
-                        id: 'ContentChannel:a0f64573eabf00a607bec911794d50fb',
-                        name: 'Sermon Series',
-                        __typename: 'ContentChannel',
                       },
-                      videos: [
-                        { sources: [], __typename: 'VideoMedia' },
-                        { sources: [], __typename: 'VideoMedia' },
-                      ],
-                      audios: [],
-                      __typename: 'ContentSeriesContentItem',
                     },
-                    __typename: 'ContentItemsConnectionEdge',
                   },
                   {
                     node: {
                       id:
-                        'ContentSeriesContentItem:08449058d438ebeaffe9adb7a8e633cc',
-                      title: 'Gathering',
-                      hyphenatedTitle: 'Gathering',
-                      isLiked: false,
-                      likedCount: 0,
-                      summary: '',
+                        'UniversalContentItem:66a4d75b02b447556e4e3806430a9946',
+                      title: 'Momentum',
                       coverImage: {
-                        name: 'Square Image',
                         sources: [
                           {
                             uri:
-                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D50f4e3e3-2842-4991-9f64-8fc6fbb3067c',
-                            __typename: 'ImageMediaSource',
+                              'https://apollosrock.newspring.cc/GetImage.ashx?guid=F3F2E438-2AE8-4EF4-980B-709463691296',
                           },
                         ],
-                        __typename: 'ImageMedia',
-                      },
-                      theme: null,
-                      parentChannel: {
-                        id: 'ContentChannel:a0f64573eabf00a607bec911794d50fb',
-                        name: 'Sermon Series',
-                        __typename: 'ContentChannel',
                       },
-                      videos: [
-                        { sources: [], __typename: 'VideoMedia' },
-                        { sources: [], __typename: 'VideoMedia' },
-                      ],
-                      audios: [],
-                      __typename: 'ContentSeriesContentItem',
                     },
-                    __typename: 'ContentItemsConnectionEdge',
                   },
                   {
                     node: {
                       id:
-                        'ContentSeriesContentItem:b74c2d295a0cf1340232ffa8be856c00',
-                      title: 'Gauntlet 2018',
-                      hyphenatedTitle: 'Gauntlet 2018',
-                      isLiked: false,
-                      likedCount: 0,
-                      summary: '',
+                        'UniversalContentItem:22c861a5d54d09634018f7eb132c452e',
+                      title: 'Miracles in Luke',
                       coverImage: {
-                        name: 'Square Image',
                         sources: [
                           {
                             uri:
-                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D3e3e38d2-d804-45db-b45a-3b7a82c415d1',
-                            __typename: 'ImageMediaSource',
+                              'https://apollosrock.newspring.cc/GetImage.ashx?guid=EDFDBD47-BBE8-4BE9-8D3F-CC0059BD4CCC',
                           },
                         ],
-                        __typename: 'ImageMedia',
                       },
-                      theme: null,
-                      parentChannel: {
-                        id: 'ContentChannel:a0f64573eabf00a607bec911794d50fb',
-                        name: 'Sermon Series',
-                        __typename: 'ContentChannel',
-                      },
-                      videos: [
-                        { sources: [], __typename: 'VideoMedia' },
-                        { sources: [], __typename: 'VideoMedia' },
-                      ],
-                      audios: [],
-                      __typename: 'ContentSeriesContentItem',
                     },
-                    __typename: 'ContentItemsConnectionEdge',
                   },
                 ],
-                __typename: 'ContentItemsConnection',
               },
-              __typename: 'ContentChannel',
             },
             {
               id: 'ContentChannel:7fba1b1ee253e0fd5f0795b4b8b1175e',
@@ -331,241 +109,59 @@ describe('The Discover tab component', () => {
                   {
                     node: {
                       id:
-                        'ContentSeriesContentItem:b085ec27d53006e9e6b95f3ac57da581',
-                      title: 'Jeremiah: A 33-Day Devotional',
-                      hyphenatedTitle: 'Jeremiah: A 33-Day Devotional',
-                      isLiked: true,
-                      likedCount: 6,
-                      summary: 'Have you ever had to deliver difficult news?',
+                        'UniversalContentItem:678b4a38968fc6004dd8b23e586c923e',
+                      title: 'Psalms: A 28-Day Devotional',
                       coverImage: {
-                        name: 'Square Image',
                         sources: [
                           {
                             uri:
-                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D31af1a61-360c-4b1e-8e62-45517c06a9a2',
-                            __typename: 'ImageMediaSource',
+                              'https://apollosrock.newspring.cc/GetImage.ashx?guid=ed857076-2623-4fdc-8476-50b3a60e0b68',
                           },
                         ],
-                        __typename: 'ImageMedia',
-                      },
-                      theme: null,
-                      parentChannel: {
-                        id: 'ContentChannel:7fba1b1ee253e0fd5f0795b4b8b1175e',
-                        name: 'Devotion Series',
-                        __typename: 'ContentChannel',
                       },
-                      videos: [{ sources: [], __typename: 'VideoMedia' }],
-                      audios: [],
-                      __typename: 'ContentSeriesContentItem',
                     },
-                    __typename: 'ContentItemsConnectionEdge',
                   },
                   {
                     node: {
                       id:
-                        'ContentSeriesContentItem:71bfdac0b98ea1b72a63ff4ea64e3c5a',
-                      title: 'How To Be A Better Leader: A 7-Day Devotional',
-                      hyphenatedTitle:
-                        'How To Be A Better Leader: A 7-Day Devotional',
-                      isLiked: false,
-                      likedCount: 0,
-                      summary: '',
+                        'UniversalContentItem:0f361c619b7e5dd511da181069498250',
+                      title: '2 Samuel: A 5-Week Devotional',
                       coverImage: {
-                        name: 'Square Image',
                         sources: [
                           {
                             uri:
-                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3Dd3a96243-2558-4c04-bf41-3aadcf41771f',
-                            __typename: 'ImageMediaSource',
+                              'https://apollosrock.newspring.cc/GetImage.ashx?guid=aa68b674-9cf4-4f8a-8702-9564a4a9fa7b',
                           },
                         ],
-                        __typename: 'ImageMedia',
                       },
-                      theme: null,
-                      parentChannel: {
-                        id: 'ContentChannel:7fba1b1ee253e0fd5f0795b4b8b1175e',
-                        name: 'Devotion Series',
-                        __typename: 'ContentChannel',
-                      },
-                      videos: [{ sources: [], __typename: 'VideoMedia' }],
-                      audios: [],
-                      __typename: 'ContentSeriesContentItem',
                     },
-                    __typename: 'ContentItemsConnectionEdge',
                   },
                   {
                     node: {
                       id:
-                        'ContentSeriesContentItem:44fd3b82373ea8f197bd1e1e77c4bed0',
-                      title: '2 Thessalonians: A 5-Day Devotional',
-                      hyphenatedTitle: '2 Thessalonians: A 5-Day Devotional',
-                      isLiked: false,
-                      likedCount: 0,
-                      summary: '',
+                        'UniversalContentItem:bc1002007d482c412962ad6b1f24901a',
+                      title: '#MomLife: An 8-Day Devotional',
                       coverImage: {
-                        name: 'Square Image',
                         sources: [
                           {
                             uri:
-                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D70b0b57c-5a15-4f46-8e6a-c759231685bf',
-                            __typename: 'ImageMediaSource',
+                              'https://apollosrock.newspring.cc/GetImage.ashx?guid=65dfddf1-c146-4599-bdb7-a8f53bf8fed2',
                           },
                         ],
-                        __typename: 'ImageMedia',
-                      },
-                      theme: null,
-                      parentChannel: {
-                        id: 'ContentChannel:7fba1b1ee253e0fd5f0795b4b8b1175e',
-                        name: 'Devotion Series',
-                        __typename: 'ContentChannel',
                       },
-                      videos: [{ sources: [], __typename: 'VideoMedia' }],
-                      audios: [],
-                      __typename: 'ContentSeriesContentItem',
                     },
-                    __typename: 'ContentItemsConnectionEdge',
                   },
                 ],
-                __typename: 'ContentItemsConnection',
               },
-              __typename: 'ContentChannel',
-            },
-            {
-              id: 'ContentChannel:be7381e9c2fea9f41504cd98d4b14321',
-              name: 'Stories',
-              childContentItemsConnection: {
-                edges: [
-                  {
-                    node: {
-                      id:
-                        'UniversalContentItem:cf8fa657f23af88a2d63f7e4a2237db8',
-                      title:
-                        'The surprising journey that changed me and my dad',
-                      hyphenatedTitle:
-                        'The surprising journey that changed me and my dad',
-                      isLiked: false,
-                      likedCount: 6,
-                      summary:
-                        'My father, Darwin, has always been involved in my life.',
-                      coverImage: {
-                        name: 'Square Image',
-                        sources: [
-                          {
-                            uri:
-                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D2a65e561-cd6e-4590-bb37-029a21c554e8',
-                            __typename: 'ImageMediaSource',
-                          },
-                        ],
-                        __typename: 'ImageMedia',
-                      },
-                      theme: null,
-                      parentChannel: {
-                        id: 'ContentChannel:be7381e9c2fea9f41504cd98d4b14321',
-                        name: 'Stories',
-                        __typename: 'ContentChannel',
-                      },
-                      videos: [],
-                      audios: [],
-                      __typename: 'UniversalContentItem',
-                    },
-                    __typename: 'ContentItemsConnectionEdge',
-                  },
-                  {
-                    node: {
-                      id:
-                        'UniversalContentItem:2e17f5a66407d114ab9f2392b03ebccd',
-                      title: 'When I lost hope, my church family had my back',
-                      hyphenatedTitle:
-                        'When I lost hope, my church family had my back',
-                      isLiked: true,
-                      likedCount: 5,
-                      summary:
-                        'Brian Kalwat was just trying to knock something off his honey-do list.',
-                      coverImage: {
-                        name: 'Square Image',
-                        sources: [
-                          {
-                            uri:
-                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D0305285f-1155-4405-ba38-a61b9c8558be',
-                            __typename: 'ImageMediaSource',
-                          },
-                        ],
-                        __typename: 'ImageMedia',
-                      },
-                      theme: null,
-                      parentChannel: {
-                        id: 'ContentChannel:be7381e9c2fea9f41504cd98d4b14321',
-                        name: 'Stories',
-                        __typename: 'ContentChannel',
-                      },
-                      videos: [],
-                      audios: [],
-                      __typename: 'UniversalContentItem',
-                    },
-                    __typename: 'ContentItemsConnectionEdge',
-                  },
-                  {
-                    node: {
-                      id:
-                        'UniversalContentItem:ae8ec75906ba7437c49ad2534b5024db',
-                      title: 'A Place to Worship Free of Fear',
-                      hyphenatedTitle: 'A Place to Worship Free of Fear',
-                      isLiked: false,
-                      likedCount: 1,
-                      summary:
-                        'Cornelius &amp; Stephanie Mack, proud parents of a Special Friends adult, share about their experience\nOur son Cameron began attending Willow Creek Special Friends in 2015.',
-                      coverImage: {
-                        name: 'Portrait Image',
-                        sources: [
-                          {
-                            uri:
-                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3Da65bc45d-f961-4b7e-a899-63eb1f9b8da9',
-                            __typename: 'ImageMediaSource',
-                          },
-                        ],
-                        __typename: 'ImageMedia',
-                      },
-                      theme: null,
-                      parentChannel: {
-                        id: 'ContentChannel:be7381e9c2fea9f41504cd98d4b14321',
-                        name: 'Stories',
-                        __typename: 'ContentChannel',
-                      },
-                      videos: [],
-                      audios: [],
-                      __typename: 'UniversalContentItem',
-                    },
-                    __typename: 'ContentItemsConnectionEdge',
-                  },
-                ],
-                __typename: 'ContentItemsConnection',
-              },
-              __typename: 'ContentChannel',
             },
           ],
         },
       },
     };
-    const mockChannelCardData = flatMap(
-      mockFeedData.result.data.contentChannels,
-      (contentChannel) =>
-        contentChannel.childContentItemsConnection.edges.map((edge) => ({
-          request: {
-            query: GET_CONTENT_CARD,
-            variables: { contentId: edge.node.id },
-          },
-          result: {
-            data: {
-              node: edge.node,
-            },
-          },
-        }))
-    );
 
-    const DiscoverStack = createStackNavigator({ Discover });
-    const DiscoverWithNavigation = createAppContainer(DiscoverStack);
-    const tree = await renderWithApolloData(
-      <Providers mocks={[mockFeedData, ...mockChannelCardData]}>
+    const DiscoverWithNavigation = createStackNavigator({ Discover });
+    const tree = renderer.create(
+      <Providers mocks={[mock]}>
         <DiscoverWithNavigation />
       </Providers>
     );
diff --git a/apolloschurchapp/src/tabs/discover/getContentChannels.js b/apolloschurchapp/src/tabs/discover/getContentChannels.js
new file mode 100644
index 0000000..bc9c243
--- /dev/null
+++ b/apolloschurchapp/src/tabs/discover/getContentChannels.js
@@ -0,0 +1,24 @@
+import gql from 'graphql-tag';
+
+import { contentItemFragment } from 'apolloschurchapp/src/content-single/getContentItem';
+import { tileCardFragment } from 'apolloschurchapp/src/ui/ContentCardConnected';
+
+export default gql`
+  query getContentChannels {
+    contentChannels {
+      id
+      name
+      childContentItemsConnection(first: 3) {
+        edges {
+          node {
+            id
+            ...contentItemFragment
+            ...tileCardFragment
+          }
+        }
+      }
+    }
+  }
+  ${contentItemFragment}
+  ${tileCardFragment}
+`;
diff --git a/apolloschurchapp/src/tabs/discover/index.js b/apolloschurchapp/src/tabs/discover/index.js
index ef97b0a..bcfae50 100644
--- a/apolloschurchapp/src/tabs/discover/index.js
+++ b/apolloschurchapp/src/tabs/discover/index.js
@@ -1,36 +1,23 @@
 import { createStackNavigator } from 'react-navigation';
-import { withTheme } from '@apollosproject/ui-kit';
 
-import ContentFeed from '../../content-feed';
+import ContentFeed from 'apolloschurchapp/src/content-feed';
 
 import tabBarIcon from '../tabBarIcon';
 
 import Discover from './Discover';
 
-const DiscoverNavigator = createStackNavigator(
+export const DiscoverNavigator = createStackNavigator(
   {
     Discover,
     ContentFeed,
   },
   {
     initialRouteName: 'Discover',
-    defaultNavigationOptions: ({ screenProps }) => ({
-      headerTintColor: screenProps.headerTintColor,
-      headerTitleStyle: screenProps.headerTitleStyle,
-    }),
-    navigationOptions: { tabBarIcon: tabBarIcon('sections') },
   }
 );
 
-const EnhancedDiscover = withTheme(({ theme, ...props }) => ({
-  ...props,
-  screenProps: {
-    headerTintColor: theme.colors.action.secondary,
-    headerTitleStyle: {
-      color: theme.colors.text.primary,
-    },
-    headerBackgroundColor: theme.colors.background.paper,
-  },
-}))(DiscoverNavigator);
+DiscoverNavigator.navigationOptions = {
+  tabBarIcon: tabBarIcon('sections'),
+};
 
-export default EnhancedDiscover;
+export default DiscoverNavigator;
diff --git a/apolloschurchapp/src/tabs/home/Home.js b/apolloschurchapp/src/tabs/home/Home.js
index c91a2f9..bb09a97 100644
--- a/apolloschurchapp/src/tabs/home/Home.js
+++ b/apolloschurchapp/src/tabs/home/Home.js
@@ -1,13 +1,16 @@
 import React, { PureComponent } from 'react';
+import { Query } from 'react-apollo';
 import { Image } from 'react-native';
 import SafeAreaView from 'react-native-safe-area-view';
+import { get } from 'lodash';
 import PropTypes from 'prop-types';
 
-import { styled, BackgroundView } from '@apollosproject/ui-kit';
-import {
-  FeaturesFeedConnected,
-  RockAuthedWebBrowser,
-} from '@apollosproject/ui-connected';
+import { styled, FeedView, BackgroundView } from '@apollosproject/ui-kit';
+import ContentCardConnected from '../../ui/ContentCardConnected';
+
+import { LiveButton } from '../../live';
+
+import getUserFeed from './getUserFeed';
 
 const LogoTitle = styled(({ theme }) => ({
   height: theme.sizing.baseUnit,
@@ -29,40 +32,38 @@ class Home extends PureComponent {
     }),
   };
 
-  handleOnPress = ({ openUrl }) => ({ action, relatedNode }) => {
-    if (action === 'READ_CONTENT') {
-      this.props.navigation.navigate('ContentSingle', {
-        itemId: relatedNode.id,
-        transitionKey: 2,
-      });
-    }
-    if (action === 'READ_EVENT') {
-      this.props.navigation.navigate('Event', {
-        eventId: relatedNode.id,
-        transitionKey: 2,
-      });
-    }
-    if (action === 'OPEN_URL') {
-      openUrl(relatedNode.url);
-    }
-  };
+  handleOnPress = (item) =>
+    this.props.navigation.navigate('ContentSingle', {
+      itemId: item.id,
+      transitionKey: item.transitionKey,
+    });
 
   render() {
     return (
-      <RockAuthedWebBrowser>
-        {(openUrl) => (
-          <BackgroundView>
-            <SafeAreaView>
-              <FeaturesFeedConnected
-                onPressActionItem={this.handleOnPress({ openUrl })}
+      <BackgroundView>
+        <SafeAreaView>
+          <Query query={getUserFeed} fetchPolicy="cache-and-network">
+            {({ loading, error, data, refetch }) => (
+              <FeedView
+                ListItemComponent={ContentCardConnected}
+                content={get(data, 'userFeed.edges', []).map(
+                  (edge) => edge.node
+                )}
+                isLoading={loading}
+                error={error}
+                refetch={refetch}
                 ListHeaderComponent={
-                  <LogoTitle source={require('./wordmark.png')} />
+                  <>
+                    <LogoTitle source={require('./wordmark.png')} />
+                    <LiveButton />
+                  </>
                 }
+                onPressItem={this.handleOnPress}
               />
-            </SafeAreaView>
-          </BackgroundView>
-        )}
-      </RockAuthedWebBrowser>
+            )}
+          </Query>
+        </SafeAreaView>
+      </BackgroundView>
     );
   }
 }
diff --git a/apolloschurchapp/src/tabs/home/getCampaignContentItem.js b/apolloschurchapp/src/tabs/home/getCampaignContentItem.js
deleted file mode 100644
index ab5ea09..0000000
--- a/apolloschurchapp/src/tabs/home/getCampaignContentItem.js
+++ /dev/null
@@ -1,22 +0,0 @@
-import gql from 'graphql-tag';
-
-import ApollosConfig from '@apollosproject/config';
-
-export default gql`
-  query campaigns {
-    campaigns {
-      edges {
-        node {
-          childContentItemsConnection {
-            edges {
-              node {
-                ...contentCardFragment
-              }
-            }
-          }
-        }
-      }
-    }
-  }
-  ${ApollosConfig.FRAGMENTS.CONTENT_CARD_FRAGMENT}
-`;
diff --git a/apolloschurchapp/src/tabs/home/getUserFeed.js b/apolloschurchapp/src/tabs/home/getUserFeed.js
index b19d647..2d7cb9a 100644
--- a/apolloschurchapp/src/tabs/home/getUserFeed.js
+++ b/apolloschurchapp/src/tabs/home/getUserFeed.js
@@ -1,18 +1,19 @@
 import gql from 'graphql-tag';
-import ApollosConfig from '@apollosproject/config';
+
+import { contentItemFragment } from 'apolloschurchapp/src/content-single/getContentItem';
+import { largeCardFragment } from 'apolloschurchapp/src/ui/ContentCardConnected';
 
 export default gql`
-  query getUserFeed($first: Int, $after: String) {
-    userFeed(first: $first, after: $after) {
-      pageInfo {
-        endCursor
-      }
+  query getUserFeed {
+    userFeed {
       edges {
         node {
-          ...contentCardFragment
+          ...largeCardFragment
+          ...contentItemFragment
         }
       }
     }
   }
-  ${ApollosConfig.FRAGMENTS.CONTENT_CARD_FRAGMENT}
+  ${contentItemFragment}
+  ${largeCardFragment}
 `;
diff --git a/apolloschurchapp/src/tabs/home/home.tests.js b/apolloschurchapp/src/tabs/home/home.tests.js
index 213e947..e9f98c5 100644
--- a/apolloschurchapp/src/tabs/home/home.tests.js
+++ b/apolloschurchapp/src/tabs/home/home.tests.js
@@ -1,16 +1,16 @@
 import React from 'react';
 import renderer from 'react-test-renderer';
 
-import Providers from '../../Providers';
+import Providers from 'apolloschurchapp/src/Providers';
 
 import Home from './Home';
-import GET_USER_FEED from './getUserFeed';
+import getUserFeed from './getUserFeed';
 
 describe('User Home Feed Query', () => {
   it('should return correct query results', () => {
     const mock = {
       request: {
-        query: GET_USER_FEED,
+        query: getUserFeed,
       },
       result: {
         data: {
diff --git a/apolloschurchapp/src/tabs/index.js b/apolloschurchapp/src/tabs/index.js
index ff11787..0b9ea17 100644
--- a/apolloschurchapp/src/tabs/index.js
+++ b/apolloschurchapp/src/tabs/index.js
@@ -16,8 +16,11 @@ const TabNavigator = createBottomTabNavigator(
     tabBarComponent: TabBar,
     lazy: true,
     removeClippedSubviews: true,
-    navigationOptions: { header: null },
   }
 );
 
+TabNavigator.navigationOptions = {
+  header: null,
+};
+
 export default TabNavigator;
diff --git a/apolloschurchapp/src/tabs/tabBar.js b/apolloschurchapp/src/tabs/tabBar.js
index 636293d..e806ab4 100644
--- a/apolloschurchapp/src/tabs/tabBar.js
+++ b/apolloschurchapp/src/tabs/tabBar.js
@@ -1,22 +1,54 @@
+import React from 'react';
 import { compose } from 'recompose';
-import { BottomTabBar } from 'react-navigation';
+import { Platform, View } from 'react-native';
+import { BottomTabBar } from 'react-navigation-tabs';
+import { Query } from 'react-apollo';
+import gql from 'graphql-tag';
+import { get } from 'lodash';
 
-import { withTabBarMediaSpacer } from '@apollosproject/ui-media-player';
+import { MediaPlayerSpacer } from 'apolloschurchapp/src/ui/MediaPlayer';
 import { styled, withTheme } from '@apollosproject/ui-kit';
 
+const mediaPlayerIsVisibleQuery = gql`
+  query {
+    mediaPlayer @client {
+      isVisible
+    }
+  }
+`;
+
+const TabBarWrapper = styled(({ theme, mediaPlayerIsVisible }) => ({
+  backgroundColor: mediaPlayerIsVisible
+    ? theme.colors.screen
+    : theme.colors.paper,
+  ...Platform.select(theme.shadows.default),
+}))(View);
+
 const ThemedBottomTabBar = compose(
   withTheme(({ theme }) => ({
-    showLabel: true,
+    showLabel: false,
     activeTintColor: theme.colors.secondary,
     inactiveTintColor: theme.colors.text.tertiary,
-    safeAreaInset: { bottom: 0 },
   })),
   styled(({ theme }) => ({
     borderTopWidth: 0,
-    backgroundColor: theme.colors.background.paper,
-    marginTop: theme.sizing.baseUnit * 0.3125,
-  })),
-  withTabBarMediaSpacer
+    backgroundColor: theme.colors.transparent,
+  }))
 )(BottomTabBar);
 
-export default ThemedBottomTabBar;
+const TabBar = (props) => (
+  <Query query={mediaPlayerIsVisibleQuery}>
+    {({ data = {} }) => (
+      <TabBarWrapper mediaPlayerIsVisible={get(data, 'mediaPlayer.isVisible')}>
+        <MediaPlayerSpacer>
+          <ThemedBottomTabBar
+            {...props}
+            safeAreaInset={{ bottom: 'never', top: 'never' }}
+          />
+        </MediaPlayerSpacer>
+      </TabBarWrapper>
+    )}
+  </Query>
+);
+
+export default TabBar;
diff --git a/apolloschurchapp/src/testing-control-panel/ChangeLivestream.js b/apolloschurchapp/src/testing-control-panel/ChangeLivestream.js
new file mode 100644
index 0000000..6723f30
--- /dev/null
+++ b/apolloschurchapp/src/testing-control-panel/ChangeLivestream.js
@@ -0,0 +1,36 @@
+import React from 'react';
+
+import { Query } from 'react-apollo';
+import { get } from 'lodash';
+
+import { client } from 'apolloschurchapp/src/client';
+import getLiveStream from 'apolloschurchapp/src/live/getLiveStream';
+import TouchableCell from './TouchableCell';
+
+const changeLivestream = ({ isLive }) =>
+  client.writeQuery({
+    query: getLiveStream,
+    data: {
+      liveStream: {
+        __typename: 'LiveStream',
+        isLive,
+      },
+    },
+  });
+
+const ChangeLivestream = () => (
+  <Query query={getLiveStream}>
+    {({ data }) => {
+      const isLive = get(data, 'liveStream.isLive', false);
+      return (
+        <TouchableCell
+          handlePress={() => changeLivestream({ isLive: !isLive })}
+          iconName={isLive ? 'pause' : 'play'}
+          cellText={`${isLive ? 'End' : 'Start'} The Livestream`}
+        />
+      );
+    }}
+  </Query>
+);
+
+export default ChangeLivestream;
diff --git a/apolloschurchapp/src/testing-control-panel/TouchableCell.tests.js b/apolloschurchapp/src/testing-control-panel/TouchableCell.tests.js
index e187cb0..5fd039f 100644
--- a/apolloschurchapp/src/testing-control-panel/TouchableCell.tests.js
+++ b/apolloschurchapp/src/testing-control-panel/TouchableCell.tests.js
@@ -1,7 +1,7 @@
 import React from 'react';
 import renderer from 'react-test-renderer';
 
-import Providers from '../Providers';
+import Providers from 'apolloschurchapp/src/Providers';
 
 import TouchableCell from './TouchableCell';
 
diff --git a/apolloschurchapp/src/testing-control-panel/index.js b/apolloschurchapp/src/testing-control-panel/index.js
index cecfc1e..121e804 100644
--- a/apolloschurchapp/src/testing-control-panel/index.js
+++ b/apolloschurchapp/src/testing-control-panel/index.js
@@ -1,74 +1,17 @@
 import React, { PureComponent } from 'react';
-import { TableView } from '@apollosproject/ui-kit';
-import { RockAuthedWebBrowser } from '@apollosproject/ui-connected';
-import { UserWebBrowserConsumer } from '../user-web-browser';
-import TouchableCell from './TouchableCell';
+import { TableView, Divider } from '@apollosproject/ui-kit';
+import ChangeLivestream from './ChangeLivestream';
 
 export default class TestingControlPanel extends PureComponent {
-  static navigationOptions = ({ screenProps }) => ({
+  static navigationOptions = () => ({
     title: 'Testing Control Panel',
-    headerStyle: {
-      backgroundColor: screenProps.headerBackgroundColor,
-      borderBottomWidth: 0,
-      elevation: 0,
-    },
   });
 
   render() {
     return (
       <TableView>
-        <UserWebBrowserConsumer>
-          {(openUserWebView) => (
-            <TouchableCell
-              handlePress={() =>
-                openUserWebView({
-                  url:
-                    'https://www.whatismybrowser.com/detect/what-http-headers-is-my-browser-sending',
-                })
-              }
-              iconName="share"
-              cellText={`Open Web Browser With User Cookie`}
-            />
-          )}
-        </UserWebBrowserConsumer>
-        <RockAuthedWebBrowser>
-          {(openUrl) => (
-            <>
-              <TouchableCell
-                handlePress={() =>
-                  openUrl(
-                    'https://apollosrock.newspring.cc',
-                    {},
-                    { useRockToken: true }
-                  )
-                }
-                iconName="share"
-                cellText={`Open InAppBrowser With Rock Token`}
-              />
-              <TouchableCell
-                handlePress={() =>
-                  openUrl(
-                    'https://apollosrock.newspring.cc',
-                    { externalBrowser: true },
-                    { useRockToken: true }
-                  )
-                }
-                iconName="share"
-                cellText={`Open Safari With Rock Token`}
-              />
-              <TouchableCell
-                handlePress={() => openUrl('mailto:fake@apollosproject.com')}
-                iconName="share"
-                cellText={`Open Email link`}
-              />
-            </>
-          )}
-        </RockAuthedWebBrowser>
-        <TouchableCell
-          handlePress={() => this.props.navigation.navigate('Onboarding')}
-          iconName="Avatar"
-          cellText={`Launch Onboarding`}
-        />
+        <ChangeLivestream />
+        <Divider />
       </TableView>
     );
   }
diff --git a/apolloschurchapp/src/theme/icons/index.js b/apolloschurchapp/src/theme/icons/index.js
deleted file mode 100644
index 79e948a..0000000
--- a/apolloschurchapp/src/theme/icons/index.js
+++ /dev/null
@@ -1,2 +0,0 @@
-/* Export your custom icon components here. */
-export {};
diff --git a/apolloschurchapp/src/theme/index.js b/apolloschurchapp/src/theme/index.js
deleted file mode 100644
index 9ccfc4a..0000000
--- a/apolloschurchapp/src/theme/index.js
+++ /dev/null
@@ -1,4 +0,0 @@
-import theme from './theme';
-import * as customIcons from './icons';
-
-export { theme as default, customIcons };
diff --git a/apolloschurchapp/src/theme/propOverrides.js b/apolloschurchapp/src/theme/propOverrides.js
deleted file mode 100644
index 6d46cc8..0000000
--- a/apolloschurchapp/src/theme/propOverrides.js
+++ /dev/null
@@ -1,2 +0,0 @@
-/* Export your custom prop overrides here. */
-export {};
diff --git a/apolloschurchapp/src/theme/styleOverrides.js b/apolloschurchapp/src/theme/styleOverrides.js
deleted file mode 100644
index 3599e30..0000000
--- a/apolloschurchapp/src/theme/styleOverrides.js
+++ /dev/null
@@ -1,2 +0,0 @@
-/* Export your custom style overrides here. */
-export {};
diff --git a/apolloschurchapp/src/theme/theme.js b/apolloschurchapp/src/theme/theme.js
deleted file mode 100644
index b2aeb3c..0000000
--- a/apolloschurchapp/src/theme/theme.js
+++ /dev/null
@@ -1,59 +0,0 @@
-// import styleOverrides from './styleOverrides';
-// import propOverrides from './propOverrides';
-
-/* Add your custom theme definitions below. Anything that is supported in UI-Kit Theme can be
- overridden and/or customized here! */
-
-/* Base colors.
- * These get used by theme types (see /types directory) to color
- * specific parts of the interface. For more control on how certain
- * elements are colored, go there. The next level of control comes
- * on a per-component basis with "overrides"
- */
-// const colors = {};
-
-/* Base Typography sizing and fonts.
- * To control speicfic styles used on different type components (like H1, H2, etc), see "overrides"
- */
-// const typography = {};
-
-/* Responsive breakpoints */
-// export const breakpoints = {};
-
-/* Base sizing units. These are used to scale
- * space, and size components relatively to one another.
- */
-// export const sizing = {};
-
-/* Base alpha values. These are used to keep transparent values across the app consistant */
-// export const alpha = {};
-
-/* Base overlays. These are used as configuration for LinearGradients across the app */
-// export const overlays = () => ({});
-
-/* Overrides allow you to override the styles of any component styled using the `styled` HOC. You
- * can also override the props of any component using the `withTheme` HOC. See examples below:
- * ```const StyledComponent = styled({ margin: 10, padding: 20 }, 'StyledComponent');
- *    const PropsComponent = withTheme(({ theme }) => ({ fill: theme.colors.primary }), 'PropsComponent');
- * ```
- * These componnents can have their styles/props overriden by including the following overrides:
- * ```{
- *   overides: {
- *     StyledComponent: {
- *       margin: 5,
- *       padding: 15,
- *     },
- *     // #protip: you even have access 👇to component props! This applies to style overrides too 💥
- *     PropsComponent: () => ({ theme, isActive }) => ({
- *       fill: isActive ? theme.colors.secondary : theme.colors.primary,
- *     }),
- *   },
- * }
- * ```
- */
-// const overrides = {
-//   ...styleOverrides,
-//   ...propOverrides,
-// };
-
-export default {};
diff --git a/apolloschurchapp/src/ui/ContentCardConnected/index.js b/apolloschurchapp/src/ui/ContentCardConnected/index.js
new file mode 100644
index 0000000..b64bdc6
--- /dev/null
+++ b/apolloschurchapp/src/ui/ContentCardConnected/index.js
@@ -0,0 +1,55 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import { Query } from 'react-apollo';
+import { get } from 'lodash';
+
+import { ContentCard, ErrorCard } from '@apollosproject/ui-kit';
+import getContentCard from './query';
+
+export { tileCardFragment, largeCardFragment } from './query';
+
+const ContentCardConnected = ({
+  contentId,
+  isLoading,
+  tile,
+  ...otherProps
+}) => {
+  if (!contentId || isLoading)
+    return <ContentCard {...otherProps} isLoading tile={tile} />;
+
+  return (
+    <Query query={getContentCard} variables={{ contentId, tile: !!tile }}>
+      {({ data: { node = {} } = {}, loading, error }) => {
+        if (error) return <ErrorCard error={error} />;
+
+        const metrics = [
+          {
+            icon: node.isLiked ? 'like-solid' : 'like',
+            value: node.likedCount,
+          },
+        ];
+
+        const coverImage = get(node, 'coverImage.sources', undefined);
+
+        return (
+          <ContentCard
+            {...node}
+            {...otherProps}
+            coverImage={coverImage}
+            metrics={metrics}
+            tile={tile}
+            isLoading={loading}
+          />
+        );
+      }}
+    </Query>
+  );
+};
+
+ContentCardConnected.propTypes = {
+  isLoading: PropTypes.bool,
+  contentId: PropTypes.string,
+  tile: PropTypes.bool,
+};
+
+export default ContentCardConnected;
diff --git a/apolloschurchapp/src/ui/ContentCardConnected/query.js b/apolloschurchapp/src/ui/ContentCardConnected/query.js
new file mode 100644
index 0000000..abefc12
--- /dev/null
+++ b/apolloschurchapp/src/ui/ContentCardConnected/query.js
@@ -0,0 +1,93 @@
+import gql from 'graphql-tag';
+
+export const coverImageFragment = gql`
+  fragment coverImageFragment on ContentItem {
+    coverImage {
+      sources {
+        uri
+      }
+    }
+  }
+`;
+
+export const themeFragment = gql`
+  fragment themeFragment on ContentItem {
+    theme {
+      type
+      colors {
+        primary
+        secondary
+        screen
+        paper
+      }
+    }
+  }
+`;
+
+export const contentCardMetricsFragment = gql`
+  fragment contentCardMetricsFragment on ContentItem {
+    isLiked
+    likedCount
+  }
+`;
+
+export const baseCardFragment = gql`
+  fragment baseCardFragment on ContentItem {
+    id
+    __typename
+    ...contentCardMetricsFragment
+    ...coverImageFragment
+    ...themeFragment
+    title
+    summary
+  }
+  ${contentCardMetricsFragment}
+  ${coverImageFragment}
+  ${themeFragment}
+`;
+
+export const tileCardFragment = gql`
+  fragment tileCardFragment on ContentItem {
+    ... on ContentSeriesContentItem {
+      id
+      ...themeFragment
+      ...coverImageFragment
+      ...contentCardMetricsFragment
+    }
+    ... on UniversalContentItem {
+      ...baseCardFragment
+    }
+    ... on DevotionalContentItem {
+      ...baseCardFragment
+    }
+    ... on MediaContentItem {
+      ...baseCardFragment
+    }
+  }
+  ${baseCardFragment}
+  ${themeFragment}
+  ${coverImageFragment}
+  ${contentCardMetricsFragment}
+`;
+
+export const largeCardFragment = gql`
+  fragment largeCardFragment on ContentItem {
+    ...baseCardFragment
+  }
+  ${baseCardFragment}
+`;
+
+const getContentCard = gql`
+  query getContentCard($contentId: ID!, $tile: Boolean!) {
+    node(id: $contentId) {
+      id
+      __typename
+      ...tileCardFragment @include(if: $tile)
+      ...largeCardFragment @skip(if: $tile)
+    }
+  }
+  ${tileCardFragment}
+  ${largeCardFragment}
+`;
+
+export default getContentCard;
diff --git a/apolloschurchapp/src/ui/HTMLView/HTMLView.stories.js b/apolloschurchapp/src/ui/HTMLView/HTMLView.stories.js
new file mode 100644
index 0000000..0d69e14
--- /dev/null
+++ b/apolloschurchapp/src/ui/HTMLView/HTMLView.stories.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import { ScrollView } from 'react-native';
+import { storiesOf } from '@storybook/react-native';
+
+import HTMLView from '.';
+
+storiesOf('HTMLView', module)
+  .add('Example', () => (
+    <ScrollView>
+      <HTMLView>
+        {
+          "<p>I sat on my couch next to my high school <a href='https://newspringfuse.com/groups' target='_blank'>Fuse Group</a>, silently fuming at their inability to put their phones down during Bible study. Finally, I spoke up, teasing one of the girls in a tone that clearly said, &ldquo;I&rsquo;m not actually kidding.&rdquo;&nbsp;</p>\n\n<p>A few days later, I was in the car with my sister, and as I sat in the passenger seat responding to emails, I heard her laugh and say, &ldquo;You always mumble when you are typing. Stop doing that.&rdquo;&nbsp;</p>\n\n<p>&ldquo;Sorry,&rdquo; I responded. &ldquo;I just don&rsquo;t want people to think I&rsquo;m ignoring them when I&rsquo;m typing.&rdquo;</p>\n\n<p>But the truth is, I am ignoring them! In my head, this behavior is totally acceptable. I tell myself I&rsquo;m tending to my priorities in order, and in doing so, I send a message to the person in front of me that she is of lesser importance.</p>\n\n<blockquote>\n<p>My phone is the primary outlet that distracts me from people who need my attention.</p>\n</blockquote>\n\n<p>I quickly get frustrated when I am the one on the outside, but how often to I shut others out during my own social media binges or email frenzies? Just like my girls, I&rsquo;m learning that my phone is the primary outlet that distracts me from people who need my attention.</p>\n\n<h3>Why Being Present Matters</h3>\n\n<p>There is nothing wrong with using our phones &mdash; as long as we remember that the best investment we can make is to invest in our relationships with Jesus and each other. We were created for <a href='http://newspring.cc/community' target='_blank'>community</a> by God, who exists in community as Father, Son, and Holy Spirit (John 1:1-2, Genesis 2:18).&nbsp;</p>\n\n<p>Our phones help us stay connected, but they are not the foundation of all connection. If we&rsquo;re honest, our phones are much quicker to distract and disengage us from the people right in front of us.&nbsp;</p>\n\n<p>Jesus said loving God and loving others is greatest of all God&rsquo;s commandments (Matthew 22:38-40). And, after trying everything the world had to offer, King Solomon reminded his people that their relationships with God and others are the only things that really matter (Ecclesiastes 2:24-26, Ecclesiastes 3:9).&nbsp;</p>\n\n<blockquote>\n<p>Greater love has no one than this: to lay down one&rsquo;s phone for one&rsquo;s loved ones.</p>\n</blockquote>\n\n<p>So the next time we feel like we have to text back immediately or tweet before someone else does, consider:&nbsp;</p>\n\n<ul>\n\t<li>Am I putting others before myself right now?</li>\n\t<li>How can I love the people around me if I&rsquo;m not even paying attention to them?</li>\n\t<li>What if Jesus wants to speak through me, but I&rsquo;ve got my nose stuck in my phone?&nbsp;</li>\n</ul>\n\n<p>The world won&rsquo;t implode if we don&rsquo;t reply to every text or email immediately. And that Instagram picture doesn&rsquo;t need to go up ASAP. If it&rsquo;s already been a week between posts, what&rsquo;s a few more hours? We love everyone better &mdash; our friends to our coworkers to our social media followers &mdash; when we give them the gift of our full attention.&nbsp;</p>\n\n<p>I can almost hear Jesus saying, &ldquo;Greater love has no one than this: to lay down one&rsquo;s phone for one&rsquo;s loved ones&rdquo;&nbsp; (John 15:13).&nbsp;</p>\n\n<h3>Four Ways To Stay Away From Your Phone And Be Intentionally Present</h3>\n\n<p><a href='http://newspring.cc/christmas' target='_blank'>This holiday season</a>, we will have more opportunities to be around friends and family than usual. So let&rsquo;s make the most of each minute. The following are some tips can help us all be a little more present.&nbsp;&nbsp;</p>\n\n<ol>\n\t<li>Turn your phone off, leave it in the car, or put it in airplane mode. Habitual notification checks can take a break.</li>\n\t<li>Talk about something other than yourself. Ask someone else about their life (job, school, kids).</li>\n\t<li>Look for opportunities to encourage someone. Ask the Holy Spirit to speak through you and help you love people.</li>\n\t<li>Ask Jesus to keep your heart interested and engaged in what really matters. He wants to help!</li>\n</ol>\n\n<p>Intentionally taking advantage of time with loved ones sometimes does require sacrificing our own immediate desires or comforts, but that&rsquo;s what we are commanded to do (Philippians 2:3).&nbsp;</p>\n\n<p>Take pictures, but don&rsquo;t let the only memory be a digital one. The positive outcome of interactions should be more than Instagram likes. Unplug from social media, choose to be present, and you will be surprised at the good it does for your heart and the hearts of those around you.&nbsp;</p>"
+        }
+      </HTMLView>
+    </ScrollView>
+  ))
+  .add('isLoading', () => (
+    <ScrollView>
+      <HTMLView isLoading />
+    </ScrollView>
+  ));
diff --git a/apolloschurchapp/src/ui/HTMLView/HTMLView.tests.js b/apolloschurchapp/src/ui/HTMLView/HTMLView.tests.js
new file mode 100644
index 0000000..a0eb6ec
--- /dev/null
+++ b/apolloschurchapp/src/ui/HTMLView/HTMLView.tests.js
@@ -0,0 +1,191 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import HTMLView from '.';
+
+describe('the HTMLView component', () => {
+  it('should render an H1', () => {
+    const tree = renderer.create(
+      <Providers>
+        <HTMLView>{'<h1>Testings</h1>'}</HTMLView>
+      </Providers>
+    );
+
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render an H2', () => {
+    const tree = renderer.create(
+      <Providers>
+        <HTMLView>{'<h2>Testings</h2>'}</HTMLView>
+      </Providers>
+    );
+
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render an H3', () => {
+    const tree = renderer.create(
+      <Providers>
+        <HTMLView>{'<h3>Testings</h3>'}</HTMLView>
+      </Providers>
+    );
+
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render an H4', () => {
+    const tree = renderer.create(
+      <Providers>
+        <HTMLView>{'<h4>Testings</h4>'}</HTMLView>
+      </Providers>
+    );
+
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render an H5', () => {
+    const tree = renderer.create(
+      <Providers>
+        <HTMLView>{'<h5>Testings</h5>'}</HTMLView>
+      </Providers>
+    );
+
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render an H6', () => {
+    const tree = renderer.create(
+      <Providers>
+        <HTMLView>{'<h6>Testings</h6>'}</HTMLView>
+      </Providers>
+    );
+
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a paragraph', () => {
+    const tree = renderer.create(
+      <Providers>
+        <HTMLView>{'<p>Testings</p>'}</HTMLView>
+      </Providers>
+    );
+
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render italic text', () => {
+    const tree = renderer.create(
+      <Providers>
+        <HTMLView>{'<p><em>Testings</em></p>'}</HTMLView>
+      </Providers>
+    );
+
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render bold text', () => {
+    const tree = renderer.create(
+      <Providers>
+        <HTMLView>{'<p><strong>Testings</strong></p>'}</HTMLView>
+      </Providers>
+    );
+
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a block quote', () => {
+    const tree = renderer.create(
+      <Providers>
+        <HTMLView>
+          {'<p>Testings</p><blockquote>Testings</blockquote>'}
+        </HTMLView>
+      </Providers>
+    );
+
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a list', () => {
+    const tree = renderer.create(
+      <Providers>
+        <HTMLView>{'<ul><li>Testings</li><li>Testings</li></ul>'}</HTMLView>
+      </Providers>
+    );
+
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a link', () => {
+    const tree = renderer.create(
+      <Providers>
+        <HTMLView>
+          {'<p>Testings <a href="http://wwww.google.com">Google</a></p>'}
+        </HTMLView>
+      </Providers>
+    );
+
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render handle relative links', () => {
+    const tree = renderer.create(
+      <Providers>
+        <HTMLView>
+          {'<p>Testings <a href="//google.com">Google</a></p>'}
+        </HTMLView>
+      </Providers>
+    );
+
+    expect(tree).toMatchSnapshot();
+  });
+  it('strips out badly formatted links', () => {
+    const tree = renderer.create(
+      <Providers>
+        <HTMLView>{"<p><a href='{page_536525}'>Bad link</a></p>"}</HTMLView>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render an image', () => {
+    const tree = renderer.create(
+      <Providers>
+        <HTMLView>
+          {'<img src="https://placeholdit.co/i/150x150?bg=eeeeee&fc=577084" />'}
+        </HTMLView>
+      </Providers>
+    );
+
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a line break (br)', () => {
+    const tree = renderer.create(
+      <Providers>
+        <HTMLView>{'<p>Testings</p><br>'}</HTMLView>
+      </Providers>
+    );
+
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a loading state', () => {
+    const tree = renderer.create(
+      <Providers>
+        <HTMLView isLoading />
+      </Providers>
+    );
+
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render example HTML', () => {
+    const tree = renderer.create(
+      <Providers>
+        <HTMLView>
+          {
+            "<p>I sat on my couch next to my high school <a href='https://newspringfuse.com/groups' target='_blank'>Fuse Group</a>, silently fuming at their inability to put their phones down during Bible study. Finally, I spoke up, teasing one of the girls in a tone that clearly said, &ldquo;I&rsquo;m not actually kidding.&rdquo;&nbsp;</p>\n\n<p>A few days later, I was in the car with my sister, and as I sat in the passenger seat responding to emails, I heard her laugh and say, &ldquo;You always mumble when you are typing. Stop doing that.&rdquo;&nbsp;</p>\n\n<p>&ldquo;Sorry,&rdquo; I responded. &ldquo;I just don&rsquo;t want people to think I&rsquo;m ignoring them when I&rsquo;m typing.&rdquo;</p>\n\n<p>But the truth is, I am ignoring them! In my head, this behavior is totally acceptable. I tell myself I&rsquo;m tending to my priorities in order, and in doing so, I send a message to the person in front of me that she is of lesser importance.</p>\n\n<blockquote>\n<p>My phone is the primary outlet that distracts me from people who need my attention.</p>\n</blockquote>\n\n<p>I quickly get frustrated when I am the one on the outside, but how often to I shut others out during my own social media binges or email frenzies? Just like my girls, I&rsquo;m learning that my phone is the primary outlet that distracts me from people who need my attention.</p>\n\n<h3>Why Being Present Matters</h3>\n\n<p>There is nothing wrong with using our phones &mdash; as long as we remember that the best investment we can make is to invest in our relationships with Jesus and each other. We were created for <a href='http://newspring.cc/community' target='_blank'>community</a> by God, who exists in community as Father, Son, and Holy Spirit (John 1:1-2, Genesis 2:18).&nbsp;</p>\n\n<p>Our phones help us stay connected, but they are not the foundation of all connection. If we&rsquo;re honest, our phones are much quicker to distract and disengage us from the people right in front of us.&nbsp;</p>\n\n<p>Jesus said loving God and loving others is greatest of all God&rsquo;s commandments (Matthew 22:38-40). And, after trying everything the world had to offer, King Solomon reminded his people that their relationships with God and others are the only things that really matter (Ecclesiastes 2:24-26, Ecclesiastes 3:9).&nbsp;</p>\n\n<blockquote>\n<p>Greater love has no one than this: to lay down one&rsquo;s phone for one&rsquo;s loved ones.</p>\n</blockquote>\n\n<p>So the next time we feel like we have to text back immediately or tweet before someone else does, consider:&nbsp;</p>\n\n<ul>\n\t<li>Am I putting others before myself right now?</li>\n\t<li>How can I love the people around me if I&rsquo;m not even paying attention to them?</li>\n\t<li>What if Jesus wants to speak through me, but I&rsquo;ve got my nose stuck in my phone?&nbsp;</li>\n</ul>\n\n<p>The world won&rsquo;t implode if we don&rsquo;t reply to every text or email immediately. And that Instagram picture doesn&rsquo;t need to go up ASAP. If it&rsquo;s already been a week between posts, what&rsquo;s a few more hours? We love everyone better &mdash; our friends to our coworkers to our social media followers &mdash; when we give them the gift of our full attention.&nbsp;</p>\n\n<p>I can almost hear Jesus saying, &ldquo;Greater love has no one than this: to lay down one&rsquo;s phone for one&rsquo;s loved ones&rdquo;&nbsp; (John 15:13).&nbsp;</p>\n\n<h3>Four Ways To Stay Away From Your Phone And Be Intentionally Present</h3>\n\n<p><a href='http://newspring.cc/christmas' target='_blank'>This holiday season</a>, we will have more opportunities to be around friends and family than usual. So let&rsquo;s make the most of each minute. The following are some tips can help us all be a little more present.&nbsp;&nbsp;</p>\n\n<ol>\n\t<li>Turn your phone off, leave it in the car, or put it in airplane mode. Habitual notification checks can take a break.</li>\n\t<li>Talk about something other than yourself. Ask someone else about their life (job, school, kids).</li>\n\t<li>Look for opportunities to encourage someone. Ask the Holy Spirit to speak through you and help you love people.</li>\n\t<li>Ask Jesus to keep your heart interested and engaged in what really matters. He wants to help!</li>\n</ol>\n\n<p>Intentionally taking advantage of time with loved ones sometimes does require sacrificing our own immediate desires or comforts, but that&rsquo;s what we are commanded to do (Philippians 2:3).&nbsp;</p>\n\n<p>Take pictures, but don&rsquo;t let the only memory be a digital one. The positive outcome of interactions should be more than Instagram likes. Unplug from social media, choose to be present, and you will be surprised at the good it does for your heart and the hearts of those around you.</p>"
+          }
+        </HTMLView>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should accept an alternative render', () => {
+    const testRenderer = jest.fn();
+    renderer.create(
+      <Providers>
+        <HTMLView renderer={testRenderer}>{'<p>Testings</p>'}</HTMLView>
+      </Providers>
+    );
+
+    expect(testRenderer).toBeCalled();
+  });
+});
diff --git a/apolloschurchapp/src/ui/HTMLView/defaultRenderer.js b/apolloschurchapp/src/ui/HTMLView/defaultRenderer.js
new file mode 100644
index 0000000..b8af60c
--- /dev/null
+++ b/apolloschurchapp/src/ui/HTMLView/defaultRenderer.js
@@ -0,0 +1,128 @@
+import React, { Children } from 'react';
+import { Text, Linking } from 'react-native';
+import { decodeHTML } from 'entities';
+
+import {
+  BodyText,
+  H1,
+  H2,
+  H3,
+  H4,
+  H5,
+  H6,
+  Paragraph,
+  BlockQuote,
+  BulletListItem,
+  ButtonLink,
+  ConnectedImage,
+} from '@apollosproject/ui-kit';
+
+const LINE_BREAK = '\n';
+const TEXT_TYPES_THAT_SHOULD_WRAP = [Text, BodyText, ButtonLink];
+
+export const wrapTextChildren = (children, Component = BodyText) => {
+  const newChildren = [];
+  let currentTextChildren = [];
+  Children.toArray(children).forEach((child, i) => {
+    if (TEXT_TYPES_THAT_SHOULD_WRAP.includes(child.type)) {
+      currentTextChildren.push(child);
+    } else {
+      if (currentTextChildren.length) {
+        newChildren.push(
+          // eslint-disable-next-line
+          <Component key={`composed-children-${i}`}>
+            {currentTextChildren}
+          </Component>
+        );
+        currentTextChildren = [];
+      }
+      newChildren.push(child);
+    }
+  });
+  if (currentTextChildren.length) {
+    newChildren.push(
+      <Component key="composed-children">{currentTextChildren}</Component>
+    );
+  }
+  return newChildren;
+};
+
+const defaultRenderer = (node, { children }) => {
+  if (node.type === 'text' && node.data && node.data.trim()) {
+    const text = decodeHTML(node.data);
+    if (!node.parent) {
+      return (
+        <Paragraph>
+          <BodyText>{text}</BodyText>
+        </Paragraph>
+      );
+    }
+    return <Text>{text}</Text>;
+  }
+
+  switch (node.name) {
+    case 'p':
+      return <Paragraph>{wrapTextChildren(children)}</Paragraph>;
+    case 'strong':
+      return <BodyText bold>{children}</BodyText>;
+    case 'em':
+      return <BodyText italic>{children}</BodyText>;
+    case 'blockquote':
+      return <BlockQuote>{wrapTextChildren(children, Text)}</BlockQuote>;
+    case 'h1':
+      return <H1 padded>{wrapTextChildren(children, Text)}</H1>;
+    case 'h2':
+      return <H2 padded>{wrapTextChildren(children, Text)}</H2>;
+    case 'h3':
+      return <H3 padded>{wrapTextChildren(children, Text)}</H3>;
+    case 'h4':
+      return <H4 padded>{wrapTextChildren(children, Text)}</H4>;
+    case 'h5':
+      return <H5 padded>{wrapTextChildren(children, Text)}</H5>;
+    case 'h6':
+      return <H6 padded>{wrapTextChildren(children, Text)}</H6>;
+    case 'ul':
+      return <Paragraph>{children}</Paragraph>;
+    case 'li':
+      return <BulletListItem>{wrapTextChildren(children)}</BulletListItem>;
+    case 'a': {
+      let url = node.attribs && node.attribs.href;
+      url = decodeHTML(url);
+
+      if (url && url.startsWith('//')) {
+        url = `http:${url}`;
+      }
+      if (!url.startsWith('http')) {
+        // we can't currently handle non web-links, so just return regular text instead:
+        return children;
+      }
+      const onPress = () => Linking.openURL(url);
+      if (url) {
+        return <ButtonLink onPress={onPress}>{children}</ButtonLink>;
+      }
+    }
+    /* ignoring fallthrough on the next line because of the conditional return above,
+     * so we handle the edge-case of an <a> tag used w/o a href
+     */
+    case 'img': {
+      const source = {
+        url: node.attribs.src,
+      };
+
+      const imgStyles = {
+        resizeMode: 'contain',
+        width: '100%',
+      };
+
+      return (
+        <ConnectedImage maintainAspectRatio source={source} style={imgStyles} />
+      );
+    }
+    case 'br':
+      return <BodyText>{LINE_BREAK}</BodyText>;
+    default:
+      return children;
+  }
+};
+
+export default defaultRenderer;
diff --git a/apolloschurchapp/src/ui/HTMLView/index.js b/apolloschurchapp/src/ui/HTMLView/index.js
new file mode 100644
index 0000000..5873b74
--- /dev/null
+++ b/apolloschurchapp/src/ui/HTMLView/index.js
@@ -0,0 +1,75 @@
+import React, { PureComponent, cloneElement } from 'react';
+import PropTypes from 'prop-types';
+import { View } from 'react-native';
+import { Parser, DomHandler } from 'htmlparser2';
+
+import { Paragraph as ParagraphPlaceholder } from '@apollosproject/ui-kit';
+
+import defaultRenderer from './defaultRenderer';
+
+class HTMLView extends PureComponent {
+  static propTypes = {
+    children: PropTypes.string,
+    renderer: PropTypes.func,
+    isLoading: PropTypes.bool,
+  };
+
+  static defaultProps = {
+    renderer: defaultRenderer,
+  };
+
+  constructor(...args) {
+    super(...args);
+    this.parser = new Parser(
+      new DomHandler(
+        (err, dom) => {
+          this.parsed = this.renderDom(dom);
+        },
+        { normalizeWhitespace: true }
+      )
+    );
+    if (this.props.children) this.parse(this.props.children);
+  }
+
+  componentWillUpdate(props) {
+    this.parse(props.children);
+  }
+
+  parse(html = '') {
+    this.parser.write(html);
+    this.parser.done();
+  }
+
+  renderDom(dom) {
+    return dom
+      .map((node, index) => {
+        let children = [];
+        if (node.children) children = this.renderDom(node.children);
+
+        let renderedNode = this.props.renderer(node, { children });
+        if (
+          !renderedNode &&
+          renderedNode !== null &&
+          this.props.renderer !== defaultRenderer
+        ) {
+          renderedNode = defaultRenderer(node, { children });
+        }
+
+        if (renderedNode && !Array.isArray(renderedNode)) {
+          renderedNode = cloneElement(renderedNode, { key: index });
+        }
+        return renderedNode;
+      })
+      .filter((e) => e !== undefined);
+  }
+
+  render() {
+    return (
+      <ParagraphPlaceholder lineNumber={8} onReady={!this.props.isLoading}>
+        <View>{this.parsed}</View>
+      </ParagraphPlaceholder>
+    );
+  }
+}
+
+export default HTMLView;
diff --git a/apolloschurchapp/src/ui/LandingScreen/LandingScreen.stories.js b/apolloschurchapp/src/ui/LandingScreen/LandingScreen.stories.js
deleted file mode 100644
index d9ebd3c..0000000
--- a/apolloschurchapp/src/ui/LandingScreen/LandingScreen.stories.js
+++ /dev/null
@@ -1,23 +0,0 @@
-import React from 'react';
-import { storiesOf } from '@apollosproject/ui-storybook';
-import { GradientOverlayImage } from '@apollosproject/ui-kit';
-
-import LandingScreen from '.';
-
-storiesOf('LandingScreen', module)
-  .add('default', () => <LandingScreen />)
-  .add('slideTitle', () => <LandingScreen slideTitle={'Custom title text'} />)
-  .add('description', () => (
-    <LandingScreen description={'Custom description text'} />
-  ))
-  .add('textColor', () => <LandingScreen textColor={'salmon'} />)
-  .add('ImageComponent', () => (
-    <LandingScreen
-      BackgroundComponent={
-        <GradientOverlayImage
-          source={'https://picsum.photos/375/812/?random'}
-        />
-      }
-    />
-  ))
-  .add('Slide props', () => <LandingScreen onPressPrimary={() => {}} />);
diff --git a/apolloschurchapp/src/ui/LandingScreen/LandingScreen.tests.js b/apolloschurchapp/src/ui/LandingScreen/LandingScreen.tests.js
deleted file mode 100644
index c60a3b9..0000000
--- a/apolloschurchapp/src/ui/LandingScreen/LandingScreen.tests.js
+++ /dev/null
@@ -1,64 +0,0 @@
-import React from 'react';
-import renderer from 'react-test-renderer';
-import { GradientOverlayImage } from '@apollosproject/ui-kit';
-
-import Providers from '../../Providers';
-
-import LandingScreen from '.';
-
-describe('The Onboarding LandingScreen component', () => {
-  it('should render', () => {
-    const tree = renderer.create(
-      <Providers>
-        <LandingScreen />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render a custom title', () => {
-    const tree = renderer.create(
-      <Providers>
-        <LandingScreen slideTitle={'Custom title text'} />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render a custom description', () => {
-    const tree = renderer.create(
-      <Providers>
-        <LandingScreen description={'Custom description text'} />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render with a custom text color', () => {
-    const tree = renderer.create(
-      <Providers>
-        <LandingScreen textColor={'salmon'} />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render with an ImageComponent', () => {
-    const tree = renderer.create(
-      <Providers>
-        <LandingScreen
-          BackgroundComponent={
-            <GradientOverlayImage
-              source={'https://picsum.photos/375/812/?random'}
-            />
-          }
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should pass additional props to Slide', () => {
-    const tree = renderer.create(
-      <Providers>
-        <LandingScreen onPressPrimary={jest.fn()} />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/ui/LandingScreen/index.js b/apolloschurchapp/src/ui/LandingScreen/index.js
deleted file mode 100644
index d803a8d..0000000
--- a/apolloschurchapp/src/ui/LandingScreen/index.js
+++ /dev/null
@@ -1,86 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-
-import {
-  styled,
-  withTheme,
-  Icon,
-  H1,
-  H4,
-  PaddedView,
-  BackgroundView,
-} from '@apollosproject/ui-kit';
-
-import { Slide } from '@apollosproject/ui-onboarding';
-
-const Content = styled({
-  flex: 1,
-  justifyContent: 'center',
-})(PaddedView);
-
-const BrandIcon = withTheme(({ theme, color }) => ({
-  name: 'brand-icon',
-  size: theme.sizing.baseUnit * 3,
-  ...(color ? { fill: color } : {}),
-  style: {
-    marginBottom: theme.sizing.baseUnit,
-  },
-}))(Icon);
-
-const Title = styled(({ theme, color }) => ({
-  marginBottom: theme.sizing.baseUnit,
-  ...(color ? { color } : {}),
-}))(H1);
-
-const StyledH4 = styled(({ color }) => ({
-  ...(color ? { color } : {}),
-}))(H4);
-
-const LandingScreen = ({
-  slideTitle,
-  description,
-  textColor,
-  BackgroundComponent,
-  ...props
-}) => (
-  <BackgroundView>
-    <Slide {...props} scrollEnabled={false}>
-      {BackgroundComponent}
-      <Content>
-        <BrandIcon color={textColor} />
-        <Title color={textColor}>{slideTitle}</Title>
-        <StyledH4 color={textColor}>{description}</StyledH4>
-      </Content>
-    </Slide>
-  </BackgroundView>
-);
-
-LandingScreen.propTypes = {
-  /* The `Swiper` component used in `<onBoarding>` looks for and hijacks the title prop of it's
-   * children. Thus we have to use more unique name.
-   */
-  slideTitle: PropTypes.string,
-  description: PropTypes.string,
-  textColor: PropTypes.string, // Use for custom text and `BrandIcon` color when overlaying text on an image or video needs more clarity. Defaults to theme driven colors.
-  /* Recommended usage:
-   * - `Image` (react-native)
-   * - `GradientOverlayImage` (@apollosproject/ui-kit) for increased readability
-   * - `Video` (react-native-video) because moving pictures!
-   */
-  BackgroundComponent: PropTypes.oneOfType([
-    PropTypes.arrayOf(PropTypes.node),
-    PropTypes.node,
-  ]),
-};
-
-LandingScreen.defaultProps = {
-  slideTitle: "We're glad you're here.",
-  description:
-    "We're not just a building you go to, but a family to belong to.",
-};
-
-LandingScreen.navigationOptions = {
-  header: null,
-};
-
-export default LandingScreen;
diff --git a/apolloschurchapp/src/ui/Like/Like.tests.js b/apolloschurchapp/src/ui/Like/Like.tests.js
new file mode 100644
index 0000000..f7d40c2
--- /dev/null
+++ b/apolloschurchapp/src/ui/Like/Like.tests.js
@@ -0,0 +1,26 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import { LikeIcon } from '.';
+
+describe('the Like component', () => {
+  it('should render a Like', () => {
+    const tree = renderer.create(
+      <Providers>
+        <LikeIcon itemId={'abc'} isLiked={false} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+
+  it('should render a UnLike', () => {
+    const tree = renderer.create(
+      <Providers>
+        <LikeIcon itemId={'abc'} isLiked />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/Like/index.js b/apolloschurchapp/src/ui/Like/index.js
new file mode 100644
index 0000000..48e19ee
--- /dev/null
+++ b/apolloschurchapp/src/ui/Like/index.js
@@ -0,0 +1,34 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+
+import { Icon, withTheme } from '@apollosproject/ui-kit';
+import ProtectedTouchable from '../../auth/ProtectedTouchable';
+
+const LikeIcon = withTheme(
+  ({ theme: { colors: { secondary } = {} } = {}, isLiked } = {}) => ({
+    name: isLiked ? 'like-solid' : 'like',
+    fill: secondary,
+  })
+)(Icon);
+
+LikeIcon.propTypes = {
+  isLiked: PropTypes.bool,
+};
+
+const Like = ({ isLiked, toggleLike, itemId }) => (
+  <ProtectedTouchable
+    onPress={() =>
+      toggleLike({ itemId, operation: isLiked ? 'Unlike' : 'Like' })
+    }
+  >
+    <LikeIcon isLiked={isLiked} />
+  </ProtectedTouchable>
+);
+
+Like.propTypes = {
+  itemId: PropTypes.string,
+  isLiked: PropTypes.bool,
+  toggleLike: PropTypes.func,
+};
+
+export { Like as default, LikeIcon };
diff --git a/apolloschurchapp/src/ui/LikeButton/LikeButton.tests.js b/apolloschurchapp/src/ui/LikeButton/LikeButton.tests.js
new file mode 100644
index 0000000..d3bf42f
--- /dev/null
+++ b/apolloschurchapp/src/ui/LikeButton/LikeButton.tests.js
@@ -0,0 +1,64 @@
+// import React from 'react';
+// import renderer from 'react-test-renderer';
+
+// import Providers from 'apolloschurchapp/src/Providers';
+// import gql from 'graphql-tag';
+
+// import LikeButton from '.';
+
+describe('the LikeButton component', () => {
+  it('should render', () => {
+    //     const updateLikeEntity = {
+    //       request: {
+    //         query: gql`
+    //           mutation updateLikeEntity($itemId: ID!, $operation: LIKE_OPERATION!) {
+    //             updateLikeEntity(
+    //               input: { nodeId: $itemId, operation: $operation }
+    //             ) {
+    //               id
+    //               operation
+    //               interactionDateTime
+    //             }
+    //           }
+    //         `,
+    //         variables: {
+    //           itemId: 'asdf',
+    //           operation: 'Like',
+    //         },
+    //       },
+    //       result: {
+    //         data: {
+    //           node: { isLiked: true },
+    //         },
+    //       },
+    //     };
+    //     const getLikedContentItem = {
+    //       request: {
+    //         query: gql`
+    //           query getLikedContentItem($itemId: ID!) {
+    //             node(id: $itemId) {
+    //               ... on ContentItem {
+    //                 id
+    //                 isLiked
+    //               }
+    //             }
+    //           }
+    //         `,
+    //         variables: {
+    //           itemId: 'asdf',
+    //         },
+    //       },
+    //       result: {
+    //         data: {
+    //           updateLikeEntity: { operation: 'Like' },
+    //         },
+    //       },
+    //     };
+    //     const tree = renderer.create(
+    //       <Providers mocks={[updateLikeEntity, getLikedContentItem]}>
+    //         <LikeButton itemId={'asdf'} />
+    //       </Providers>
+    //     );
+    //     expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/LikeButton/getLikedContentItem.js b/apolloschurchapp/src/ui/LikeButton/getLikedContentItem.js
new file mode 100644
index 0000000..1ddaa3a
--- /dev/null
+++ b/apolloschurchapp/src/ui/LikeButton/getLikedContentItem.js
@@ -0,0 +1,12 @@
+import gql from 'graphql-tag';
+
+export default gql`
+  query getLikedContentItem($itemId: ID!) {
+    node(id: $itemId) {
+      ... on ContentItem {
+        id
+        isLiked
+      }
+    }
+  }
+`;
diff --git a/apolloschurchapp/src/ui/LikeButton/index.js b/apolloschurchapp/src/ui/LikeButton/index.js
new file mode 100644
index 0000000..fee9f8b
--- /dev/null
+++ b/apolloschurchapp/src/ui/LikeButton/index.js
@@ -0,0 +1,116 @@
+import React from 'react';
+
+import PropTypes from 'prop-types';
+import { get } from 'lodash';
+import { Query, Mutation } from 'react-apollo';
+
+import Like from 'apolloschurchapp/src/ui/Like';
+import { track, events } from 'apolloschurchapp/src/analytics';
+
+import updateLikeEntity from './updateLikeEntity';
+import getLikedContentItem from './getLikedContentItem';
+import updateLikedContent from './updateLikedContent';
+
+const GetLikeData = ({ itemId, children }) => (
+  <Query query={getLikedContentItem} variables={{ itemId }}>
+    {({ data: { node = {} } = {}, loading }) => {
+      const isLiked = loading ? false : get(node, 'isLiked') || false;
+      return children({ isLiked, item: node });
+    }}
+  </Query>
+);
+
+GetLikeData.propTypes = {
+  itemId: PropTypes.string,
+  children: PropTypes.func.isRequired,
+};
+
+const UpdateLikeStatus = ({ itemId, item, isLiked, children }) => (
+  <Mutation
+    mutation={updateLikeEntity}
+    optimisticResponse={{
+      updateLikeEntity: {
+        operation: isLiked ? 'Unlike' : 'Like',
+        id: null, // unknown at this time
+        interactionDateTime: new Date().toJSON(),
+        __typename: 'Interaction',
+      },
+    }}
+    update={(
+      cache,
+      {
+        data: {
+          updateLikeEntity: { operation },
+        },
+      }
+    ) => {
+      updateLikedContent({ liked: operation === 'Like', cache, item });
+      cache.writeQuery({
+        query: getLikedContentItem,
+        data: {
+          node: {
+            ...item,
+            isLiked: operation === 'Like',
+          },
+        },
+      });
+    }}
+  >
+    {(createNewInteraction) =>
+      itemId
+        ? children({
+            itemId,
+            isLiked,
+            toggleLike: async (variables) => {
+              try {
+                await createNewInteraction({ variables });
+                track({
+                  eventName: isLiked
+                    ? events.UnlikeContent
+                    : events.LikeContent,
+                  properties: {
+                    id: itemId,
+                  },
+                });
+              } catch (e) {
+                throw e.message;
+              }
+            },
+          })
+        : null
+    }
+  </Mutation>
+);
+
+UpdateLikeStatus.propTypes = {
+  itemId: PropTypes.string,
+  children: PropTypes.func.isRequired,
+  isLiked: PropTypes.bool.isRequired,
+  item: PropTypes.shape({
+    id: PropTypes.string,
+    __typename: PropTypes.string,
+    isLiked: PropTypes.bool,
+  }),
+};
+
+const LikeButton = ({ itemId }) => (
+  <GetLikeData itemId={itemId}>
+    {({ isLiked, item }) => (
+      <UpdateLikeStatus itemId={itemId} item={item} isLiked={isLiked}>
+        {({ toggleLike, isLiked: newLikeValue }) => (
+          <Like
+            itemId={itemId}
+            isLiked={newLikeValue}
+            toggleLike={toggleLike}
+          />
+        )}
+      </UpdateLikeStatus>
+    )}
+  </GetLikeData>
+);
+
+LikeButton.propTypes = {
+  itemId: PropTypes.string,
+};
+
+export default LikeButton;
diff --git a/apolloschurchapp/src/ui/LikeButton/updateLikeEntity.js b/apolloschurchapp/src/ui/LikeButton/updateLikeEntity.js
new file mode 100644
index 0000000..892fd76
--- /dev/null
+++ b/apolloschurchapp/src/ui/LikeButton/updateLikeEntity.js
@@ -0,0 +1,11 @@
+import gql from 'graphql-tag';
+
+export default gql`
+  mutation updateLikeEntity($itemId: ID!, $operation: LIKE_OPERATION!) {
+    updateLikeEntity(input: { nodeId: $itemId, operation: $operation }) {
+      id
+      operation
+      interactionDateTime
+    }
+  }
+`;
diff --git a/apolloschurchapp/src/ui/LikeButton/updateLikedContent.js b/apolloschurchapp/src/ui/LikeButton/updateLikedContent.js
new file mode 100644
index 0000000..50b612a
--- /dev/null
+++ b/apolloschurchapp/src/ui/LikeButton/updateLikedContent.js
@@ -0,0 +1,52 @@
+import getAllLikedContent from 'apolloschurchapp/src/tabs/connect/getLikedContent';
+import { contentItemFragment } from 'apolloschurchapp/src/content-single/getContentItem';
+
+const addItemToLikedContentList = ({ cache, item }) => {
+  try {
+    const data = cache.readQuery({ query: getAllLikedContent });
+    const fullItem = cache.readFragment({
+      id: `${item.__typename}:${item.id}`,
+      fragment: contentItemFragment,
+    });
+    cache.writeQuery({
+      query: getAllLikedContent,
+      data: {
+        ...data,
+        getAllLikedContent: [fullItem, ...data.getAllLikedContent],
+      },
+    });
+  } catch (e) {
+    console.log(e);
+    // Most likely we haven't ran the `getAllLikedContent` query yet.
+    // We can safely exit.
+  }
+};
+
+const removeItemFromLikedContentList = ({ cache, item }) => {
+  try {
+    const data = cache.readQuery({ query: getAllLikedContent });
+    cache.writeQuery({
+      query: getAllLikedContent,
+      data: {
+        ...data,
+        getAllLikedContent: data.getAllLikedContent.filter(
+          (content) => content.id !== item.id
+        ),
+      },
+    });
+  } catch (e) {
+    console.log(e);
+    // Most likely we haven't ran the `getAllLikedContent` query yet.
+    // We can safely exit.
+  }
+};
+
+const updateLikedContent = ({ liked, cache, item }) => {
+  if (liked) {
+    addItemToLikedContentList({ cache, item });
+  } else {
+    removeItemFromLikedContentList({ cache, item });
+  }
+};
+
+export default updateLikedContent;
diff --git a/apolloschurchapp/src/ui/MediaPlayer/FullscreenControls.js b/apolloschurchapp/src/ui/MediaPlayer/FullscreenControls.js
new file mode 100644
index 0000000..7256ae4
--- /dev/null
+++ b/apolloschurchapp/src/ui/MediaPlayer/FullscreenControls.js
@@ -0,0 +1,291 @@
+import React, { PureComponent } from 'react';
+import PropTypes from 'prop-types';
+import {
+  BackHandler,
+  StyleSheet,
+  Animated,
+  TouchableWithoutFeedback,
+} from 'react-native';
+import { Query, withApollo } from 'react-apollo';
+import LinearGradient from 'react-native-linear-gradient';
+import SafeAreaView from 'react-native-safe-area-view';
+import { get } from 'lodash';
+import { compose } from 'recompose';
+
+import {
+  PaddedView,
+  withTheme,
+  withThemeMixin,
+  styled,
+  H4,
+  H6,
+  ButtonIcon,
+} from '@apollosproject/ui-kit';
+
+import Seeker from './Seeker';
+import { getControlState } from './queries';
+import {
+  play,
+  pause,
+  exitFullscreen,
+  showVideo,
+  hideVideo,
+  mute,
+  unmute,
+} from './mutations';
+
+import { ControlsConsumer } from './PlayheadState';
+
+const Background = withTheme(({ theme }) => ({
+  style: StyleSheet.absoluteFill,
+  colors: [
+    theme.colors.darkPrimary,
+    theme.colors.transparent,
+    theme.colors.darkPrimary,
+  ],
+  locations: [0, 0.4, 0.95],
+}))(LinearGradient);
+
+const UpperControl = styled({
+  flexDirection: 'row',
+  justifyContent: 'space-between',
+  alignItems: 'center',
+})(PaddedView);
+
+const LowerControl = styled({
+  position: 'absolute',
+  bottom: 0,
+  left: 0,
+  right: 0,
+})(PaddedView);
+
+const PlayControls = styled(({ theme }) => ({
+  flexDirection: 'row',
+  justifyContent: 'space-around',
+  alignItems: 'center',
+  paddingBottom: theme.sizing.baseUnit * 1.5,
+}))(PaddedView);
+
+const PlayHead = styled({ paddingVertical: 0 })(PaddedView);
+
+const Titles = styled({
+  alignItems: 'center',
+  paddingVertical: 0,
+})(PaddedView);
+
+const Title = styled({ textAlign: 'center' })(H4);
+const Artist = styled({ textAlign: 'center' })(H6);
+
+const IconSm = withTheme(({ theme }) => ({
+  size: theme.sizing.baseUnit * 1.25,
+  iconPadding: theme.sizing.baseUnit * 1.25,
+}))(ButtonIcon);
+
+const IconMd = withTheme(({ theme }) => ({
+  size: theme.sizing.baseUnit * 1.875,
+  iconPadding: theme.sizing.baseUnit * 0.9375,
+}))(ButtonIcon);
+
+const IconLg = withTheme(({ theme }) => ({
+  size: theme.sizing.baseUnit * 3.125,
+  iconPadding: theme.sizing.baseUnit * 0.3125,
+}))(ButtonIcon);
+
+/**
+ * FullscreenControls displays fading player controls
+ */
+class FullscreenControls extends PureComponent {
+  static propTypes = {
+    client: PropTypes.shape({
+      mutate: PropTypes.func,
+    }),
+  };
+
+  state = {};
+
+  fader = new Animated.Value(1);
+
+  controlsVisible = true;
+
+  wasFullscreen = false;
+
+  open = Animated.spring(this.fader, {
+    toValue: 1,
+    useNativeDriver: true,
+  });
+
+  close = Animated.spring(this.fader, {
+    toValue: 0,
+    useNativeDriver: true,
+  });
+
+  constructor(...args) {
+    super(...args);
+    this.fader.addListener(({ value }) => {
+      this.controlsVisible = value > 0.05;
+    });
+  }
+
+  componentDidMount() {
+    this.backHandler = BackHandler.addEventListener('hardwareBackPress', () => {
+      if (this.wasFullscreen) {
+        this.handleClose();
+        return true;
+      }
+      return false;
+    });
+  }
+
+  componentWillUnmount() {
+    this.backHandler.remove();
+    if (this.closeTimeout) clearTimeout(this.closeTimeout);
+  }
+
+  handleOnScrubbing = ({ isScrubbing }) => {
+    this.setState({ isScrubbing });
+  };
+
+  handleClose = () => {
+    this.props.client.mutate({ mutation: exitFullscreen });
+  };
+
+  handlePlay = () => {
+    this.props.client.mutate({ mutation: play });
+  };
+
+  handlePause = () => {
+    this.props.client.mutate({ mutation: pause });
+  };
+
+  handleShowVideo = () => {
+    this.props.client.mutate({ mutation: showVideo });
+  };
+
+  handleHideVideo = () => {
+    this.props.client.mutate({ mutation: hideVideo });
+  };
+
+  handleMute = () => {
+    this.props.client.mutate({ mutation: mute });
+  };
+
+  handleUnMute = () => {
+    this.props.client.mutate({ mutation: unmute });
+  };
+
+  handleControlVisibility = () => {
+    if (this.closeTimeout) clearTimeout(this.closeTimeout);
+    this.open.stop();
+    this.close.stop();
+
+    if (
+      !this.state.isScrubbing &&
+      this.isVideo &&
+      this.isPlaying &&
+      this.wasFullscreen &&
+      (!this.animatingClosed && this.controlsVisible)
+    ) {
+      this.animatingClosed = true;
+      this.close.start(() => {
+        this.animatingClosed = false;
+      });
+    } else {
+      this.open.start(() => {
+        if (this.isVideo && this.isPlaying) this.queueClose();
+      });
+    }
+  };
+
+  queueClose = () => {
+    this.closeTimeout = setTimeout(this.handleControlVisibility, 5000);
+  };
+
+  renderPlayerControls = ({ isLoading, skip }) => (
+    <PlayControls>
+      <IconSm
+        onPress={this.isMuted ? this.handleUnMute : this.handleMute}
+        name={this.isMuted ? 'mute' : 'volume'}
+        disabled={isLoading}
+      />
+      <IconMd
+        onPress={() => skip(-30)}
+        name={'skip-back-thirty'}
+        disabled={isLoading}
+      />
+      <IconLg
+        onPress={this.isPlaying ? this.handlePause : this.handlePlay}
+        name={this.isPlaying ? 'pause' : 'play'}
+        disabled={isLoading}
+      />
+      <IconMd
+        onPress={() => skip(30)}
+        name={'skip-forward-thirty'}
+        disabled={isLoading}
+      />
+      <IconSm
+        onPress={this.isVideo ? this.handleHideVideo : this.handleShowVideo}
+        name={this.isVideo ? 'video' : 'video-off'}
+        disabled={isLoading}
+      />
+    </PlayControls>
+  );
+
+  renderFullscreenControls = ({ data: { mediaPlayer = {} } = {} }) => {
+    this.isVideo = get(mediaPlayer, 'showVideo');
+    this.isPlaying = mediaPlayer.isPlaying;
+    this.isMuted = mediaPlayer.muted;
+
+    if (
+      (mediaPlayer.isFullscreen && !this.wasFullscreen) ||
+      !this.isVideo ||
+      (!this.isPlaying || (this.isPlaying && !this.wasPlaying))
+    )
+      this.handleControlVisibility();
+
+    this.wasFullscreen = mediaPlayer.isFullscreen;
+    this.wasPlaying = mediaPlayer.isPlaying;
+
+    return (
+      <TouchableWithoutFeedback onPress={this.handleControlVisibility}>
+        <Animated.View
+          style={[StyleSheet.absoluteFill, { opacity: this.fader }]}
+        >
+          <Background>
+            <SafeAreaView
+              style={StyleSheet.absoluteFill}
+              forceInset={{ top: 'always', bottom: 'always' }}
+            >
+              <TouchableWithoutFeedback onPress={this.handleClose}>
+                <UpperControl>
+                  <IconSm name="arrow-down" onPress={this.handleClose} />
+                  <Titles>
+                    <Title>{get(mediaPlayer, 'currentTrack.title')}</Title>
+                    <Artist>{get(mediaPlayer, 'currentTrack.artist')}</Artist>
+                  </Titles>
+                  <IconSm name="empty" disabled />
+                </UpperControl>
+              </TouchableWithoutFeedback>
+              <LowerControl>
+                <PlayHead>
+                  <Seeker onScrubbing={this.handleOnScrubbing} />
+                </PlayHead>
+                <ControlsConsumer>{this.renderPlayerControls}</ControlsConsumer>
+              </LowerControl>
+            </SafeAreaView>
+          </Background>
+        </Animated.View>
+      </TouchableWithoutFeedback>
+    );
+  };
+
+  render() {
+    return (
+      <Query query={getControlState}>{this.renderFullscreenControls}</Query>
+    );
+  }
+}
+
+export default compose(
+  withApollo,
+  withThemeMixin({ type: 'dark' })
+)(FullscreenControls);
diff --git a/apolloschurchapp/src/ui/MediaPlayer/FullscreenPlayer.js b/apolloschurchapp/src/ui/MediaPlayer/FullscreenPlayer.js
new file mode 100644
index 0000000..ecc64e7
--- /dev/null
+++ b/apolloschurchapp/src/ui/MediaPlayer/FullscreenPlayer.js
@@ -0,0 +1,236 @@
+import React, { PureComponent } from 'react';
+import {
+  Animated,
+  View,
+  StyleSheet,
+  Dimensions,
+  PanResponder,
+  Platform,
+  StatusBar,
+} from 'react-native';
+import PropTypes from 'prop-types';
+import { Query, withApollo } from 'react-apollo';
+import { get } from 'lodash';
+
+import { styled } from '@apollosproject/ui-kit';
+
+import MiniControls, { MINI_PLAYER_HEIGHT } from './MiniControls';
+import FullscreenControls from './FullscreenControls';
+import VideoWindow from './VideoWindow';
+import MusicControls from './MusicControls';
+import { getFullVisibilityState } from './queries';
+import { exitFullscreen, goFullscreen } from './mutations';
+import { Provider, ControlsConsumer } from './PlayheadState';
+import MediaPlayerSafeLayout from './MediaPlayerSafeLayout';
+
+const VideoSizer = styled(({ isFullscreen, isVideo, theme }) =>
+  isFullscreen
+    ? StyleSheet.absoluteFill
+    : {
+        height: MINI_PLAYER_HEIGHT,
+        borderTopLeftRadius: theme.sizing.baseUnit / 2,
+        borderBottomLeftRadius: theme.sizing.baseUnit / 2,
+        overflow: 'hidden',
+        aspectRatio: isVideo ? 16 / 9 : 1,
+      }
+)(View);
+
+const FullscreenMediaPlayerSafeLayout = styled(({ isFullscreen, theme }) => ({
+  ...StyleSheet.absoluteFillObject,
+  margin: isFullscreen ? 0 : theme.sizing.baseUnit,
+}))(MediaPlayerSafeLayout);
+
+/**
+ * FullscreenPlayer is a animating media player that transitions between
+ * a mini state and a full screen state.
+ * It is capable of playing any type of media that react-native-video supports.
+ * It reads from local graphql state, and so you must use graphql mutations to play tracks.
+ */
+class FullscreenPlayer extends PureComponent {
+  static propTypes = {
+    client: PropTypes.shape({ mutate: PropTypes.func }),
+  };
+
+  // Tracks the fullscreen animation
+  fullscreen = new Animated.Value(0);
+
+  // Tracks the measured height of the minicontrols. Used in other derived styles
+  miniControlHeight = new Animated.Value(MINI_PLAYER_HEIGHT);
+
+  // Tracks the measured height of the fullscreen cover. Used in other derived styles
+  coverHeight = new Animated.Value(Dimensions.get('window').height);
+
+  // Tracks the amount you drag the window
+  dragOffset = new Animated.Value(0);
+
+  fullScreenWithOffset = Animated.add(this.fullscreen, this.dragOffset);
+
+  // Self-invoking function because we end up with just one massic derived animated value that can be stored
+  coverTranslateY = (() => {
+    const translateYWhenCollapsed = Animated.subtract(
+      this.coverHeight,
+      this.miniControlHeight
+    );
+
+    const translateYSlope = Animated.multiply(
+      translateYWhenCollapsed,
+      Animated.multiply(this.fullScreenWithOffset, -1)
+    );
+
+    const translateY = Animated.add(translateYSlope, translateYWhenCollapsed);
+    return translateY;
+  })();
+
+  miniControlsTranslateY = (() => {
+    const translateYWhenExpanded = Animated.subtract(
+      this.coverHeight,
+      this.miniControlHeight
+    );
+    const translateYSlope = Animated.multiply(
+      translateYWhenExpanded,
+      Animated.multiply(this.fullScreenWithOffset, -1)
+    );
+    return translateYSlope;
+  })();
+
+  coverStyle = [
+    StyleSheet.absoluteFill,
+    {
+      transform: [{ translateY: this.coverTranslateY }],
+    },
+  ];
+
+  miniControlsAnimation = {
+    opacity: this.fullScreenWithOffset.interpolate({
+      inputRange: [0, 0.1],
+      outputRange: [1, 0],
+    }),
+  };
+
+  fullscreenControlsAnimation = [
+    StyleSheet.absoluteFill,
+    {
+      opacity: this.fullScreenWithOffset.interpolate({
+        inputRange: [0, 0.1],
+        outputRange: [0, 1],
+      }),
+    },
+  ];
+
+  panResponder = PanResponder.create({
+    onMoveShouldSetPanResponder: (event, { dx, dy }) =>
+      Math.abs(dy) > Math.abs(dx) && Math.abs(dy) > 10, // set pan responder only when we move enough in the Y-axis
+
+    onPanResponderMove: (event, { dy }) => {
+      // Calculate the amount you've offsetted the cover
+      const dragOffset = Math.min(0, -dy / Dimensions.get('window').height);
+      this.dragOffset.setValue(dragOffset);
+    },
+
+    onPanResponderRelease: (event, { dy, vy }) => {
+      const { height } = Dimensions.get('window');
+      const gestureVelocity = vy;
+      const gestureDistance = Math.abs(dy);
+
+      // Determine whether to continue the animation and exit fullscreen,
+      // or stay full screen and reset back up
+      let mutation = goFullscreen;
+      if (Math.abs(gestureVelocity > 0.5)) {
+        if (gestureVelocity > 0) {
+          mutation = exitFullscreen;
+        }
+      } else if (gestureDistance >= height / 2) {
+        mutation = exitFullscreen;
+      }
+
+      const dragOffset = Math.min(0, -dy / Dimensions.get('window').height);
+
+      if (mutation === goFullscreen) {
+        Animated.spring(this.dragOffset, {
+          toValue: 0,
+          useNativeDriver: true,
+        }).start();
+      } else {
+        this.dragOffset.setValue(0);
+        this.fullscreen.setValue(dragOffset);
+      }
+
+      this.props.client.mutate({ mutation });
+    },
+  });
+
+  handleCoverLayout = Animated.event([
+    { nativeEvent: { layout: { height: this.coverHeight } } },
+  ]);
+
+  handleMiniControlLayout = Animated.event([
+    { nativeEvent: { layout: { height: this.miniControlHeight } } },
+  ]);
+
+  renderCover = ({ data: { mediaPlayer = {} } = {} }) => {
+    const { isFullscreen = false } = mediaPlayer;
+
+    Animated.spring(this.fullscreen, {
+      toValue: isFullscreen ? 1 : 0,
+      useNativeDriver: true,
+      bounciness: 4,
+    }).start();
+
+    const coverFlow = [
+      <Animated.View
+        key="cover"
+        onLayout={this.handleCoverLayout}
+        style={StyleSheet.absoluteFill}
+        {...(Platform.OS !== 'android' && isFullscreen
+          ? this.panResponder.panHandlers
+          : {})}
+      >
+        <VideoSizer
+          isFullscreen={isFullscreen}
+          isVideo={get(mediaPlayer, 'currentTrack.isVideo')}
+        >
+          <ControlsConsumer>
+            {(controlHandlers) => <VideoWindow {...controlHandlers} />}
+          </ControlsConsumer>
+        </VideoSizer>
+        <Animated.View style={this.fullscreenControlsAnimation}>
+          <FullscreenControls />
+        </Animated.View>
+      </Animated.View>,
+      <MusicControls key="music-controls" />,
+    ];
+
+    if (!isFullscreen) {
+      coverFlow.push(
+        <Animated.View
+          key="mini-controls"
+          style={this.miniControlsAnimation}
+          onLayout={this.handleMiniControlLayout}
+        >
+          <MiniControls />
+        </Animated.View>
+      );
+    }
+
+    return (
+      <Animated.View style={this.coverStyle}>
+        <FullscreenMediaPlayerSafeLayout isFullscreen={isFullscreen}>
+          {isFullscreen ? <StatusBar hidden /> : null}
+          {coverFlow}
+        </FullscreenMediaPlayerSafeLayout>
+      </Animated.View>
+    );
+  };
+
+  render() {
+    return (
+      <Provider>
+        <Query query={getFullVisibilityState}>{this.renderCover}</Query>
+      </Provider>
+    );
+  }
+}
+
+const FullscreenPlayerWithData = withApollo(FullscreenPlayer);
+
+export { FullscreenPlayerWithData as default };
diff --git a/apolloschurchapp/src/ui/MediaPlayer/FullscreenPlayer.stories.js b/apolloschurchapp/src/ui/MediaPlayer/FullscreenPlayer.stories.js
new file mode 100644
index 0000000..6c889cc
--- /dev/null
+++ b/apolloschurchapp/src/ui/MediaPlayer/FullscreenPlayer.stories.js
@@ -0,0 +1,81 @@
+import React from 'react';
+import { storiesOf } from '@storybook/react-native';
+import { Mutation } from 'react-apollo';
+
+import {
+  ButtonLink,
+  CenteredView,
+  BackgroundView,
+  FlexedView,
+} from '@apollosproject/ui-kit';
+
+import { playVideoMutation } from './mutations';
+import MediaPlayer from '.';
+
+storiesOf('MediaPlayer', module).add('simple', () => (
+  <BackgroundView>
+    <FlexedView>
+      <CenteredView>
+        <Mutation mutation={playVideoMutation}>
+          {(play) => (
+            <ButtonLink
+              onPress={() =>
+                play({
+                  variables: {
+                    mediaSource: {
+                      uri:
+                        'http://embed.wistia.com/deliveries/0e364f7e6f6604384ece8a35905a53a864386e9f.bin',
+                      __typename: 'VideoMediaSource',
+                    },
+                    posterSources: [
+                      {
+                        uri:
+                          'https://apollosrock.newspring.cc/GetImage.ashx?guid=28ea9e81-09b4-411f-8ad5-741054837823',
+                        __typename: 'ImageMediaSource',
+                      },
+                    ],
+                    title: 'Holy Spirit',
+                    artist: 'Fuse Promos',
+                    isVideo: true,
+                  },
+                })
+              }
+            >
+              Play video
+            </ButtonLink>
+          )}
+        </Mutation>
+        <Mutation mutation={playVideoMutation}>
+          {(play) => (
+            <ButtonLink
+              onPress={() =>
+                play({
+                  variables: {
+                    mediaSource: {
+                      uri:
+                        'https://s3.amazonaws.com/ns.downloads/newspring/audio/newspring_sermons/2017/180513_HolySpirit_06-Message-AUDIO.mp3',
+                      __typename: 'AudioMediaSource',
+                    },
+                    posterSources: [
+                      {
+                        uri:
+                          'https://apollosrock.newspring.cc/GetImage.ashx?guid=28ea9e81-09b4-411f-8ad5-741054837823',
+                        __typename: 'ImageMediaSource',
+                      },
+                    ],
+                    title: 'The Greatest Evangelist',
+                    artist: 'Sermon',
+                    isVideo: false,
+                  },
+                })
+              }
+            >
+              Play audio
+            </ButtonLink>
+          )}
+        </Mutation>
+      </CenteredView>
+    </FlexedView>
+    <MediaPlayer />
+  </BackgroundView>
+));
diff --git a/apolloschurchapp/src/ui/MediaPlayer/FullscreenPlayer.tests.js b/apolloschurchapp/src/ui/MediaPlayer/FullscreenPlayer.tests.js
new file mode 100644
index 0000000..6fb0aa5
--- /dev/null
+++ b/apolloschurchapp/src/ui/MediaPlayer/FullscreenPlayer.tests.js
@@ -0,0 +1,108 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import { client } from 'apolloschurchapp/src/client';
+import Providers from 'apolloschurchapp/src/Providers';
+
+import FullscreenPlayer from './FullscreenPlayer';
+
+describe('the FullscreenPlayer component', () => {
+  it('should render miniplayer with video', async () => {
+    client.cache.writeData({
+      data: {
+        mediaPlayer: {
+          __typename: 'MediaPlayerState',
+          currentTrack: {
+            __typename: 'MediaPlayerTrack',
+            id: 1,
+            mediaSource: { uri: 'some-source' },
+            posterSources: [{ uri: 'some-poster-source' }],
+            title: 'Some Title',
+            artist: 'some artist',
+            isVideo: true,
+          },
+          isVisible: true,
+          isFullscreen: false,
+          isPlaying: true,
+          progress: {
+            __typename: 'MediaPlayerProgress',
+            currentTime: 12,
+            duration: 56,
+          },
+        },
+      },
+    });
+    const tree = renderer.create(
+      <Providers>
+        <FullscreenPlayer />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+
+  it('should render miniplayer with audio', async () => {
+    client.cache.writeData({
+      data: {
+        mediaPlayer: {
+          __typename: 'MediaPlayerState',
+          currentTrack: {
+            __typename: 'MediaPlayerTrack',
+            id: 1,
+            mediaSource: { uri: 'some-source' },
+            posterSources: [{ uri: 'some-poster-source' }],
+            title: 'Some Title',
+            artist: 'some artist',
+            isVideo: false,
+          },
+          isVisible: true,
+          isFullscreen: false,
+          isPlaying: true,
+          progress: {
+            __typename: 'MediaPlayerProgress',
+            currentTime: 12,
+            duration: 56,
+          },
+        },
+      },
+    });
+    const tree = renderer.create(
+      <Providers>
+        <FullscreenPlayer />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+
+  it('should render fullscreen', async () => {
+    client.cache.writeData({
+      data: {
+        mediaPlayer: {
+          __typename: 'MediaPlayerState',
+          currentTrack: {
+            __typename: 'MediaPlayerTrack',
+            id: 1,
+            mediaSource: { uri: 'some-source' },
+            posterSources: [{ uri: 'some-poster-source' }],
+            title: 'Some Title',
+            artist: 'some artist',
+            isVideo: false,
+          },
+          isVisible: true,
+          isFullscreen: true,
+          isPlaying: true,
+          progress: {
+            __typename: 'MediaPlayerProgress',
+            currentTime: 12,
+            duration: 56,
+          },
+        },
+      },
+    });
+    const tree = renderer.create(
+      <Providers>
+        <FullscreenPlayer />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/MediaPlayer/MediaPlayerSafeLayout.js b/apolloschurchapp/src/ui/MediaPlayer/MediaPlayerSafeLayout.js
new file mode 100644
index 0000000..57368b8
--- /dev/null
+++ b/apolloschurchapp/src/ui/MediaPlayer/MediaPlayerSafeLayout.js
@@ -0,0 +1,20 @@
+import React from 'react';
+import { View } from 'react-native';
+
+import { styled, LayoutConsumer } from '@apollosproject/ui-kit';
+
+const InnerView = styled(({ safeAreaInsets, isFullscreen = false, theme }) => ({
+  marginBottom: isFullscreen
+    ? 0
+    : Math.max(theme.sizing.baseUnit, safeAreaInsets.bottom * 0.75),
+}))(View);
+
+const MediaPlayerSafeLayout = (props) => (
+  <LayoutConsumer>
+    {({ safeAreaInsets }) => (
+      <InnerView safeAreaInsets={safeAreaInsets} {...props} />
+    )}
+  </LayoutConsumer>
+);
+
+export default MediaPlayerSafeLayout;
diff --git a/apolloschurchapp/src/ui/MediaPlayer/MediaPlayerSpacer.js b/apolloschurchapp/src/ui/MediaPlayer/MediaPlayerSpacer.js
new file mode 100644
index 0000000..e88b769
--- /dev/null
+++ b/apolloschurchapp/src/ui/MediaPlayer/MediaPlayerSpacer.js
@@ -0,0 +1,36 @@
+import React from 'react';
+import { SafeAreaView } from 'react-native';
+import { Query } from 'react-apollo';
+import gql from 'graphql-tag';
+import { get } from 'lodash';
+
+import { styled } from '@apollosproject/ui-kit';
+import { MINI_PLAYER_HEIGHT } from 'apolloschurchapp/src/ui/MediaPlayer';
+
+import MediaPlayerSafeLayout from './MediaPlayerSafeLayout';
+
+const mediaPlayerIsVisibleQuery = gql`
+  query {
+    mediaPlayer @client {
+      isVisible
+    }
+  }
+`;
+
+const MediaPlayerSafeLayoutWithSpacing = styled({
+  paddingBottom: MINI_PLAYER_HEIGHT,
+})(MediaPlayerSafeLayout);
+
+const MediaPlayerSpacer = (props) => (
+  <Query query={mediaPlayerIsVisibleQuery}>
+    {({ data = {} }) =>
+      get(data, 'mediaPlayer.isVisible') ? (
+        <MediaPlayerSafeLayoutWithSpacing {...props} />
+      ) : (
+        <SafeAreaView {...props} />
+      )
+    }
+  </Query>
+);
+
+export default MediaPlayerSpacer;
diff --git a/apolloschurchapp/src/ui/MediaPlayer/MiniControls.js b/apolloschurchapp/src/ui/MediaPlayer/MiniControls.js
new file mode 100644
index 0000000..80bc783
--- /dev/null
+++ b/apolloschurchapp/src/ui/MediaPlayer/MiniControls.js
@@ -0,0 +1,197 @@
+import React, { Component } from 'react';
+import { Platform, View, Animated, StyleSheet } from 'react-native';
+import { Mutation, Query } from 'react-apollo';
+
+import {
+  withTheme,
+  Icon,
+  styled,
+  Touchable,
+  H5,
+  H6,
+  ButtonIcon,
+} from '@apollosproject/ui-kit';
+
+import Seeker from './Seeker';
+
+import { getControlState } from './queries';
+
+import {
+  goFullscreen as goFullscreenMutation,
+  dismiss as dismissMutation,
+  play as playMutation,
+  pause as pauseMutation,
+} from './mutations';
+
+const MINI_PLAYER_HEIGHT = 50;
+
+const DismissBackground = styled(({ theme }) => ({
+  ...StyleSheet.absoluteFillObject,
+  alignItems: 'center',
+  justifyContent: 'center',
+  backgroundColor: theme.colors.white,
+}))(View);
+
+const TrackInfoTouchable = styled({
+  flex: 1,
+})(Touchable);
+
+const TrackInfoTouchableBackground = styled(({ theme }) => ({
+  backgroundColor: theme.colors.white,
+  flex: 1,
+}))(View);
+
+const TrackInfo = styled(({ theme }) => ({
+  paddingHorizontal: theme.sizing.baseUnit / 2,
+  height: '100%',
+  justifyContent: 'center',
+  width: '100%',
+}))(View);
+
+const TrackName = styled(({ theme }) => ({
+  height: theme.sizing.baseUnit,
+  overflow: 'hidden',
+}))(H5);
+
+const TrackArtist = styled(({ theme }) => ({
+  height: theme.sizing.baseUnit,
+  marginTop: theme.helpers.rem(-0.15625),
+  color: theme.colors.text.tertiary,
+  // overflow: 'hidden',
+}))(H6);
+
+const Container = styled(({ theme }) => ({
+  height: MINI_PLAYER_HEIGHT,
+  flexDirection: 'row',
+  justifyContent: 'flex-start',
+  overflow: 'hidden',
+  borderRadius: theme.sizing.baseUnit / 2,
+}))(View);
+
+const Shadow = styled(({ theme }) => ({
+  borderRadius: theme.sizing.baseUnit / 2,
+  ...Platform.select(theme.shadows.default),
+}))(View);
+
+// ThumbnailSpacer is used to offset the text in MiniPlayer to make room for the video/music
+// thumbnail in a way that is dynamic to the MINI_PLAYER_HEIGHT
+const ThumbnailSpacer = styled(({ isVideo }) => ({
+  height: MINI_PLAYER_HEIGHT,
+  aspectRatio: isVideo ? 16 / 9 : 1,
+}))(View);
+
+const Controls = styled(({ theme }) => ({
+  position: 'absolute',
+  right: 0,
+  bottom: 0,
+  top: -1,
+  paddingHorizontal: theme.sizing.baseUnit / 2,
+  flexDirection: 'row',
+  justifyContent: 'flex-end',
+  alignItems: 'center',
+}))(View);
+
+const MiniSeeker = styled({
+  position: 'absolute',
+  left: 0,
+  right: 0,
+  bottom: 0,
+})(Seeker);
+
+const IconStyles = withTheme(({ theme }) => ({
+  fill: theme.colors.darkTertiary,
+  size: theme.sizing.baseUnit * 1.25,
+}));
+
+const StyledIcon = IconStyles(Icon);
+const StyledButtonIcon = IconStyles(ButtonIcon);
+
+/**
+ * The MiniControls renders basic track info and a play/pause button.
+ * Also displays a close button to close the player when the track is paused.
+ */
+class MiniControls extends Component {
+  dismissAnimator = new Animated.Value(0);
+
+  shouldComponentUpdate() {
+    return false;
+  }
+
+  renderMiniControls = ({
+    data: {
+      mediaPlayer: {
+        currentTrack: { title, artist, isVideo } = {},
+        isPlaying = false,
+      } = {},
+    } = {},
+  }) => {
+    Animated.spring(this.dismissAnimator, {
+      toValue: isPlaying ? 0 : 0.8,
+      overshootClamping: true,
+      useNativeDriver: true,
+    }).start();
+    return (
+      <Mutation mutation={goFullscreenMutation}>
+        {(goFullscreen) => (
+          <Shadow>
+            <Container>
+              <Mutation mutation={dismissMutation}>
+                {(dismiss) => (
+                  <Touchable
+                    onPress={() => (isPlaying ? goFullscreen() : dismiss())}
+                  >
+                    <ThumbnailSpacer isVideo={isVideo}>
+                      <Animated.View
+                        style={[
+                          StyleSheet.absoluteFill,
+                          { opacity: this.dismissAnimator },
+                        ]}
+                      >
+                        <DismissBackground>
+                          <StyledIcon name="close" />
+                        </DismissBackground>
+                      </Animated.View>
+                    </ThumbnailSpacer>
+                  </Touchable>
+                )}
+              </Mutation>
+              <TrackInfoTouchableBackground>
+                <TrackInfoTouchable onPress={() => goFullscreen()}>
+                  <TrackInfo>
+                    <TrackName>{title}</TrackName>
+                    <TrackArtist>{artist}</TrackArtist>
+                  </TrackInfo>
+                </TrackInfoTouchable>
+              </TrackInfoTouchableBackground>
+              <Controls>
+                {isPlaying ? (
+                  <Mutation mutation={pauseMutation}>
+                    {(pause) => (
+                      <StyledButtonIcon
+                        name={'pause'}
+                        onPress={() => pause()}
+                      />
+                    )}
+                  </Mutation>
+                ) : (
+                  <Mutation mutation={playMutation}>
+                    {(play) => (
+                      <StyledButtonIcon name={'play'} onPress={() => play()} />
+                    )}
+                  </Mutation>
+                )}
+              </Controls>
+              <MiniSeeker minimal />
+            </Container>
+          </Shadow>
+        )}
+      </Mutation>
+    );
+  };
+
+  render() {
+    return <Query query={getControlState}>{this.renderMiniControls}</Query>;
+  }
+}
+
+export { MiniControls as default, MINI_PLAYER_HEIGHT };
diff --git a/apolloschurchapp/src/ui/MediaPlayer/MusicControls.js b/apolloschurchapp/src/ui/MediaPlayer/MusicControls.js
new file mode 100644
index 0000000..0bf66c6
--- /dev/null
+++ b/apolloschurchapp/src/ui/MediaPlayer/MusicControls.js
@@ -0,0 +1,177 @@
+import PropTypes from 'prop-types';
+import React, { Component } from 'react';
+import { Animated, Platform } from 'react-native';
+import MusicControl from 'react-native-music-control';
+import { withApollo, Query } from 'react-apollo';
+import { throttle, get } from 'lodash';
+
+import { PlayheadConsumer, ControlsConsumer } from './PlayheadState';
+import { getMusicControlState } from './queries';
+import { play, pause, updatePlayhead } from './mutations';
+
+class MusicControls extends Component {
+  static propTypes = {
+    currentTrack: PropTypes.shape({}),
+    currentTime: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
+    currentTimeAnimated: PropTypes.instanceOf(Animated.Value),
+    isPlaying: PropTypes.bool,
+    duration: PropTypes.number,
+    skip: PropTypes.func,
+    client: PropTypes.shape({ mutate: PropTypes.func }),
+  };
+
+  constructor(...args) {
+    super(...args);
+    // iOS is the only platform that displays currentTime and Android is notorious bad at handling
+    // the JS thread.
+    if (Platform.OS === 'ios') this.currentTimeSubscription();
+  }
+
+  componentDidUpdate(oldProps) {
+    if (this.props.duration > 1 && oldProps.duration !== this.props.duration) {
+      this.configureMusicControl();
+    }
+    if (this.props.currentTimeAnimated !== oldProps.currentTimeAnimated) {
+      if (this.listener) {
+        oldProps.currentTimeAnimated.removeListener(this.listener);
+      }
+      if (Platform.OS === 'ios') this.currentTimeSubscription();
+    }
+
+    if (
+      oldProps.currentTime !== this.props.currentTime ||
+      oldProps.isPlaying !== this.props.isPlaying
+    ) {
+      this.updatePlayback();
+    }
+  }
+
+  componentWillUnmount() {
+    MusicControl.enableBackgroundMode(false);
+    MusicControl.stopControl();
+    if (this.listener)
+      this.props.currentTimeAnimated.removeListener(this.listener);
+  }
+
+  currentTimeSubscription = () => {
+    this.listener = this.props.currentTimeAnimated.addListener(
+      throttle(({ value }) => {
+        MusicControl.updatePlayback({
+          state: this.props.isPlaying
+            ? MusicControl.STATE_PLAYING
+            : MusicControl.STATE_PAUSED,
+          elapsedTime: value,
+        });
+      }, 1000)
+    );
+  };
+
+  configureMusicControl = () => {
+    // Initialize MusicControl settings
+    MusicControl.enableBackgroundMode(true);
+
+    // Play
+    MusicControl.enableControl('play', true);
+    MusicControl.on('play', this.handleOnPlay);
+
+    // Pause/Stop
+    MusicControl.enableControl('pause', true);
+    MusicControl.enableControl('stop', false);
+    MusicControl.on('pause', this.handleOnPause);
+    MusicControl.on('stop', this.handleOnPause);
+
+    // Skip
+    MusicControl.enableControl('previousTrack', false);
+    MusicControl.enableControl('nextTrack', false);
+
+    // Seeking
+    if (this.props.skip) {
+      MusicControl.enableControl('skipForward', true);
+      MusicControl.enableControl('skipBackward', true);
+      MusicControl.on('skipForward', this.handleOnFastForward);
+      MusicControl.on('skipBackward', this.handleOnRewind);
+    }
+
+    // Scrubber
+    MusicControl.enableControl('seek', true); // Android
+    MusicControl.enableControl('changePlaybackPosition', true); // iOS
+    MusicControl.on('seek', this.handleOnSeek);
+    MusicControl.on('changePlaybackPosition', this.handleOnSeek);
+
+    // Remote (headphones) play/pause
+    MusicControl.enableControl('togglePlayPause', true);
+    MusicControl.on('togglePlayPause', () =>
+      this.props.isPlaying ? this.handleOnPause() : this.handleOnPlay()
+    );
+
+    // Remote (headphones) fast forward/rewind (iOS only) (disabled)
+    MusicControl.enableControl('seekForward', false);
+    MusicControl.enableControl('seekBackward', false);
+
+    // Swipe to dismiss native control (Android only)
+    MusicControl.enableControl('closeNotification', true, { when: 'paused' });
+
+    // Configure the visuals
+    const { currentTrack = {} } = this.props;
+    MusicControl.setNowPlaying({
+      title: currentTrack.title,
+      artist: currentTrack.artist,
+      artwork: get(currentTrack, 'posterSources[0].uri'),
+      elapsedTime: this.props.currentTime,
+      duration: this.props.duration,
+    });
+  };
+
+  updatePlayback = () => {
+    MusicControl.updatePlayback({
+      state: this.props.isPlaying
+        ? MusicControl.STATE_PLAYING
+        : MusicControl.STATE_PAUSED,
+      elapsedTime: this.props.currentTime,
+    });
+  };
+
+  handleOnPlay = () => this.props.client.mutate({ mutation: play });
+
+  handleOnPause = () => this.props.client.mutate({ mutation: pause });
+
+  handleOnFastForward = () => this.props.skip(15);
+
+  handleOnRewind = () => this.props.skip(-15);
+
+  handleOnSeek = (seekTo) =>
+    this.props.client.mutate({
+      mutation: updatePlayhead,
+      variables: {
+        currentTime: seekTo,
+      },
+    });
+
+  render() {
+    return null;
+  }
+}
+
+const MusicControlsState = (props) => (
+  <Query query={getMusicControlState}>
+    {({ data: { mediaPlayer = {} } = {} }) => (
+      <PlayheadConsumer>
+        {({ duration, currentTime }) => (
+          <ControlsConsumer>
+            {({ skip }) => (
+              <MusicControls
+                {...props}
+                currentTimeAnimated={currentTime}
+                duration={duration}
+                skip={skip}
+                {...mediaPlayer}
+              />
+            )}
+          </ControlsConsumer>
+        )}
+      </PlayheadConsumer>
+    )}
+  </Query>
+);
+
+export default withApollo(MusicControlsState);
diff --git a/apolloschurchapp/src/ui/MediaPlayer/PlayheadState.js b/apolloschurchapp/src/ui/MediaPlayer/PlayheadState.js
new file mode 100644
index 0000000..ed10ed7
--- /dev/null
+++ b/apolloschurchapp/src/ui/MediaPlayer/PlayheadState.js
@@ -0,0 +1,124 @@
+import React, { createContext, Component } from 'react';
+import { Animated } from 'react-native';
+import { Query, withApollo } from 'react-apollo';
+import PropTypes from 'prop-types';
+
+import { getMediaPlayerIsPlaying } from './queries';
+import { updatePlayhead } from './mutations';
+
+const defaultState = {
+  duration: 1,
+  currentTime: new Animated.Value(0),
+  playableDuration: new Animated.Value(1),
+  seekableDuration: new Animated.Value(1),
+  isLoading: true,
+};
+
+const controlState = () => {};
+
+const PlayheadContext = createContext(defaultState);
+
+const PlayheadControls = createContext(controlState);
+
+class ProviderWithoutApollo extends Component {
+  static propTypes = {
+    client: PropTypes.shape({
+      mutate: PropTypes.func,
+    }),
+  };
+
+  state = defaultState;
+
+  get controlState() {
+    return {
+      onLoad: this.handleOnLoad,
+      onLoadStart: this.handleOnLoadStart,
+      // onBuffer: this.handleOnBuffer,
+      onProgress: this.handleOnProgress,
+      skip: this.skip,
+      isLoading: this.state.isLoading,
+      // isBuffering: this.state.isBuffering,
+    };
+  }
+
+  handleOnLoad = ({ duration }) => {
+    this.setState({ duration, isLoading: false });
+    this.state.currentTime.setValue(0);
+    this.state.playableDuration.setValue(0);
+    this.state.seekableDuration.setValue(0);
+  };
+
+  handleOnLoadStart = () => {
+    this.setState({ isLoading: true });
+  };
+
+  // handleOnBuffer = ({ isBuffering }) => {
+  //   this.setState({ isBuffering }); // bool value https://github.com/react-native-community/react-native-video/blob/2c391f580702f9579a0ebd01c6e97415feda928b/ios/Video/RCTVideo.m#L636-L643
+  // };
+
+  handleOnProgress = ({ currentTime, playableDuration, seekableDuration }) => {
+    if (!this.seekingTo || Math.abs(this.seekingTo - currentTime) < 1) {
+      // when seeking, only update `currentTime` after the seek has finished
+      this.seekingTo = null;
+      this.lastCurrentTime = currentTime;
+      this.state.currentTime.setValue(currentTime);
+    }
+    this.state.playableDuration.setValue(playableDuration);
+    this.state.seekableDuration.setValue(seekableDuration);
+  };
+
+  handlePause = () => {
+    this.props.client.mutate({
+      mutation: updatePlayhead,
+      variables: {
+        currentTime: this.lastCurrentTime,
+      },
+    });
+  };
+
+  skip = async (secondsToSkip) => {
+    if (this.lastCurrentTime === undefined) return;
+    const currentTime = Math.min(
+      Math.max(this.lastCurrentTime + secondsToSkip, 0),
+      this.state.duration
+    );
+
+    await this.props.client.mutate({
+      mutation: updatePlayhead,
+      variables: {
+        currentTime,
+      },
+    });
+
+    this.seekingTo = currentTime;
+    this.state.currentTime.setValue(currentTime); // immediately set the playhead value so progress bar doesn't jump around
+  };
+
+  renderProviders = ({
+    data: { mediaPlayer: { isPlaying = false } = {} } = {},
+  }) => {
+    if (!isPlaying && this.wasPlaying) {
+      this.handlePause();
+    }
+    this.wasPlaying = isPlaying;
+
+    return (
+      <PlayheadControls.Provider value={this.controlState}>
+        <PlayheadContext.Provider value={this.state} {...this.props} />
+      </PlayheadControls.Provider>
+    );
+  };
+
+  render() {
+    return (
+      <Query query={getMediaPlayerIsPlaying}>{this.renderProviders}</Query>
+    );
+  }
+}
+
+const Provider = withApollo(ProviderWithoutApollo);
+
+const { Consumer: PlayheadConsumer } = PlayheadContext;
+const { Consumer: ControlsConsumer } = PlayheadControls;
+
+export { Provider, PlayheadConsumer, ControlsConsumer };
diff --git a/apolloschurchapp/src/ui/MediaPlayer/Seeker/Timestamp.js b/apolloschurchapp/src/ui/MediaPlayer/Seeker/Timestamp.js
new file mode 100644
index 0000000..ab33167
--- /dev/null
+++ b/apolloschurchapp/src/ui/MediaPlayer/Seeker/Timestamp.js
@@ -0,0 +1,95 @@
+import React, { PureComponent } from 'react';
+import { Animated } from 'react-native';
+import PropTypes from 'prop-types';
+
+import { H6, styled } from '@apollosproject/ui-kit';
+
+const TimeText = styled({
+  width: 50,
+  textAlign: 'center',
+  alignItems: 'center',
+})(H6);
+
+/**
+ * Displays a MM:SS formatted timestamp from either a number or Animate.Value in seconds
+ */
+class Timestamp extends PureComponent {
+  static propTypes = {
+    time: PropTypes.oneOfType([
+      PropTypes.number,
+      PropTypes.instanceOf(Animated.Value),
+    ]),
+    offset: PropTypes.instanceOf(Animated.Value),
+  };
+
+  state = {
+    time: 0,
+    offset: 0,
+  };
+
+  constructor(props) {
+    super(props);
+    if (typeof props.time === 'number') {
+      this.state.time = props.time;
+    } else {
+      this.listen(props);
+    }
+  }
+
+  componentWillUpdate(newProps) {
+    if (
+      newProps.time !== this.props.time ||
+      newProps.offset !== this.props.offset
+    ) {
+      this.listen(newProps);
+    }
+  }
+
+  listen = ({ time = 0, offset = 0 }) => {
+    if (this.listener) this.props.time.removeListener(this.listener);
+    if (this.offsetListener) {
+      this.props.offset.removeListener(this.offsetListener);
+    }
+
+    if (!time.addListener) {
+      this.setState({ time });
+    } else {
+      this.listener = time.addListener(({ value }) =>
+        this.setState({ time: value })
+      );
+    }
+
+    if (!offset.addListener) {
+      this.setState({ offset });
+    } else if (offset) {
+      this.offsetListener = offset.addListener(({ value }) =>
+        this.setState({ offset: value })
+      );
+    }
+  };
+
+  timestamp = (time) => {
+    // Hours, minutes and seconds
+    const hrs = Math.floor(time / 3600);
+    const mins = Math.floor((time % 3600) / 60);
+    const secs = time % 60;
+
+    let timestamp = '';
+
+    if (hrs > 0) {
+      timestamp += `${hrs}:${mins < 10 ? '0' : ''}`;
+    }
+
+    timestamp += `${mins}:${secs < 10 ? '0' : ''}`;
+    timestamp += `${Math.round(secs)}`;
+    return timestamp;
+  };
+
+  render() {
+    return (
+      <TimeText>{this.timestamp(this.state.time + this.state.offset)}</TimeText>
+    );
+  }
+}
+
+export default Timestamp;
diff --git a/apolloschurchapp/src/ui/MediaPlayer/Seeker/index.js b/apolloschurchapp/src/ui/MediaPlayer/Seeker/index.js
new file mode 100644
index 0000000..d071a72
--- /dev/null
+++ b/apolloschurchapp/src/ui/MediaPlayer/Seeker/index.js
@@ -0,0 +1,215 @@
+import React, { PureComponent } from 'react';
+import { PanResponder, Animated, View, StyleSheet } from 'react-native';
+import PropTypes from 'prop-types';
+
+import { styled, withTheme } from '@apollosproject/ui-kit';
+
+import { PlayheadConsumer, ControlsConsumer } from '../PlayheadState';
+import Timestamp from './Timestamp';
+
+const Container = styled({
+  width: '100%',
+  flexDirection: 'row',
+  justifyContent: 'space-between',
+  alignItems: 'center',
+})(View);
+
+const TrackContainer = styled(({ minimal, knobSize }) => ({
+  height: knobSize / 2,
+  flexGrow: 1,
+  justifyContent: 'center',
+  paddingTop: minimal ? 20 : knobSize / 2,
+  paddingBottom: minimal ? 0 : knobSize / 2,
+}))(View);
+
+const Track = styled(({ theme, minimal, knobSize }) => ({
+  height: knobSize / 2,
+  overflow: 'hidden',
+  borderRadius: minimal ? 0 : knobSize / 2,
+  backgroundColor: minimal
+    ? theme.colors.transparent
+    : theme.colors.darkSecondary,
+}))(View);
+
+const ProgressBar = styled(({ theme }) => ({
+  height: theme.sizing.baseUnit,
+  backgroundColor: theme.colors.secondary,
+}))(View);
+
+const Knob = styled(({ theme, knobSize }) => ({
+  height: knobSize,
+  width: knobSize,
+  position: 'absolute',
+  right: 0,
+  elevation: 2,
+  borderRadius: knobSize,
+  backgroundColor: theme.colors.text.primary,
+}))(View);
+
+/**
+ * Animated Seeker component.
+ * Depends on `PlayheadState`, so you don't pass it any props directly,
+ * but must be rendered within a `<MediaPlayer/>` component
+ */
+class Seeker extends PureComponent {
+  static propTypes = {
+    minimal: PropTypes.bool, // The only prop you need to pass - switches to a minimal version (line instead of bar)
+    currentTime: PropTypes.any, // eslint-disable-line
+    duration: PropTypes.any, // eslint-disable-line
+    style: PropTypes.any, // eslint-disable-line
+    onScrubbing: PropTypes.func,
+    knobSize: PropTypes.number, // defaults to theme.sizing.baseUnit / 1.5  (12px)
+  };
+
+  isSeeking = false;
+
+  timeAtSeekingStart = 0;
+
+  state = {
+    width: 0, // the width of the seeker bar
+  };
+
+  offsetDriver = new Animated.Value(0); // Used to track pixel offset when seeking
+
+  offsetTimeDriver = new Animated.Value(0); // Used to track time offset when seeking
+
+  panResponder = PanResponder.create({
+    onStartShouldSetPanResponder: () => true,
+    onPanResponderGrant: () => {
+      // Using `stopAnimation` only to get the currentTime value
+      this.props.currentTime.stopAnimation((value) => {
+        this.isSeeking = true;
+        this.timeAtSeekingStart = value;
+      });
+    },
+    onPanResponderMove: (e, { dx }) => {
+      // Calculate the pixel offset and apply it to the offsetDriver
+      let offset = dx;
+      const progressAtStart = this.timeAtSeekingStart / this.props.duration;
+      const positionAtStart = progressAtStart * this.state.width;
+      offset = Math.min(this.state.width - positionAtStart, offset);
+      offset = Math.max(-positionAtStart, offset);
+      this.offsetDriver.setValue(offset);
+
+      // Calculate the time offset and apply it to the offsetTimeDriver
+      const moveAmount = offset / this.state.width;
+      const moveAmountInTime = moveAmount * this.props.duration;
+      this.offsetTimeDriver.setValue(moveAmountInTime);
+
+      if (this.props.onScrubbing) this.props.onScrubbing({ isScrubbing: true });
+    },
+    onPanResponderRelease: async (e, { dx }) => {
+      // Calculate the amount in time we've moved, and skip that duration
+      const moveAmount = dx / this.state.width;
+      const moveAmountInTime = moveAmount * this.props.duration;
+      await this.props.skip(moveAmountInTime);
+
+      // Reset state
+      this.offsetDriver.setValue(0);
+      this.offsetTimeDriver.setValue(0);
+      this.isSeeking = false;
+      this.timeAtSeekingStart = 0;
+
+      if (this.props.onScrubbing)
+        this.props.onScrubbing({ isScrubbing: false });
+    },
+  });
+
+  // Calculate the real offset position of the colored track bar
+  // To be able to useNativeDriver, the trackbar is always the full-width, and we animate its X position
+  get trackBarOffset() {
+    const progress = Animated.divide(
+      this.isSeeking ? this.timeAtSeekingStart : this.props.currentTime,
+      this.props.duration
+    );
+
+    const progressInvert = Animated.subtract(1, progress);
+    const widthInvert = Animated.multiply(-1, this.state.width);
+    const position = Animated.multiply(progressInvert, widthInvert);
+    return Animated.add(position, this.offsetDriver);
+  }
+
+  // the "knob" is on top of the trackbar, the piece of UI you can grab and move around
+  get knobStyles() {
+    return [
+      StyleSheet.absoluteFill,
+      {
+        transform: [{ translateX: this.trackBarOffset }],
+      },
+    ];
+  }
+
+  handleOnLayout = ({
+    nativeEvent: {
+      layout: { width },
+    },
+  }) =>
+    this.setState({
+      /*
+       * Adjust offset width to adjust for knobSize so Knob always appears on the track. Knob is
+       * hidden when in a minimal state (miniplayer) we only make this adjustment when necessary.
+       */
+      width: this.props.minimal ? width : width - this.props.knobSize,
+    });
+
+  renderProgress = () => (
+    <Animated.View
+      style={[
+        StyleSheet.absoluteFill,
+        {
+          transform: [{ translateX: this.trackBarOffset }],
+        },
+      ]}
+    >
+      <ProgressBar />
+    </Animated.View>
+  );
+
+  render() {
+    return (
+      <Container style={this.props.style}>
+        {!this.props.minimal ? (
+          <Timestamp
+            time={this.props.currentTime}
+            offset={this.offsetTimeDriver}
+          />
+        ) : null}
+        <TrackContainer
+          minimal={this.props.minimal}
+          knobSize={this.props.knobSize}
+        >
+          <Track
+            onLayout={this.handleOnLayout}
+            minimal={this.props.minimal}
+            knobSize={this.props.knobSize}
+          >
+            {this.renderProgress()}
+          </Track>
+          <Animated.View style={this.knobStyles}>
+            {!this.props.minimal ? (
+              <Knob
+                knobSize={this.props.knobSize}
+                {...this.panResponder.panHandlers}
+              />
+            ) : null}
+          </Animated.View>
+        </TrackContainer>
+        {!this.props.minimal ? <Timestamp time={this.props.duration} /> : null}
+      </Container>
+    );
+  }
+}
+
+const SeekerWithState = withTheme(({ theme: { sizing: { baseUnit } } }) => ({
+  knobSize: Math.floor(baseUnit / 1.33),
+}))((props) => (
+  <ControlsConsumer>
+    {(controls) => (
+      <PlayheadConsumer>
+        {(playhead) => <Seeker {...props} {...playhead} {...controls} />}
+      </PlayheadConsumer>
+    )}
+  </ControlsConsumer>
+));
+
+export default SeekerWithState;
diff --git a/apolloschurchapp/src/ui/MediaPlayer/VideoWindow.js b/apolloschurchapp/src/ui/MediaPlayer/VideoWindow.js
new file mode 100644
index 0000000..4b07c38
--- /dev/null
+++ b/apolloschurchapp/src/ui/MediaPlayer/VideoWindow.js
@@ -0,0 +1,152 @@
+import React, { PureComponent } from 'react';
+import PropTypes from 'prop-types';
+import { Query, withApollo } from 'react-apollo';
+import { get } from 'lodash';
+import Video from 'react-native-video';
+import { Animated, View, StyleSheet } from 'react-native';
+
+import { styled, ActivityIndicator } from '@apollosproject/ui-kit';
+
+import { getVideoState } from './queries';
+import { pause as pauseMutation, pauseAndRestart } from './mutations';
+
+const styles = StyleSheet.create({
+  animatedPosterImage: {
+    ...StyleSheet.absoluteFillObject,
+    resizeMode: 'cover',
+  },
+});
+
+const Background = styled(({ theme }) => ({
+  ...StyleSheet.absoluteFillObject,
+  backgroundColor: theme.colors.black,
+}))(View);
+
+/**
+ * The VideoWindow displays the actual react-native-video component.
+ * It's responsible for loading the video, and updating progress + duration in state.
+ */
+class VideoWindow extends PureComponent {
+  static propTypes = {
+    client: PropTypes.shape({
+      mutate: PropTypes.func,
+    }),
+    onProgress: PropTypes.func,
+    onLoad: PropTypes.func,
+    onLoadStart: PropTypes.func,
+    // onBuffer: PropTypes.func,
+  };
+
+  loadingOverlay = new Animated.Value(1);
+
+  loadingStyle = [StyleSheet.absoluteFill, { opacity: this.loadingOverlay }];
+
+  handleOnEnd = async () => {
+    this.props.client.mutate({ mutation: pauseAndRestart });
+  };
+
+  handlePause = () => {
+    this.props.client.mutate({ mutation: pauseMutation });
+  };
+
+  handleOnProgress = (progress) => {
+    if (this.props.onProgress) this.props.onProgress(progress);
+  };
+
+  handleOnError = () => {
+    this.handlePause();
+  };
+
+  handleOnLoad = ({ duration }) => {
+    this.showLoadingIndicator(false);
+
+    if (this.props.onLoad) this.props.onLoad({ duration });
+  };
+
+  handleOnLoadStart = () => {
+    if (this.props.onLoadStart) this.props.onLoadStart();
+    this.showLoadingIndicator(true);
+  };
+
+  handleOnBuffer = ({ isBuffering }) => {
+    // if (this.props.onBuffer) this.props.onBuffer({ isBuffering });
+    this.showLoadingIndicator(!isBuffering);
+  };
+
+  setVideoRef = (element) => {
+    this.video = element;
+  };
+
+  showLoadingIndicator(isLoading) {
+    if (isLoading) {
+      Animated.spring(this.loadingOverlay, {
+        toValue: 1,
+        useNativeDriver: true,
+      });
+    } else {
+      Animated.spring(this.loadingOverlay, {
+        toValue: 0,
+        useNativeDriver: true,
+      }).start();
+    }
+  }
+
+  renderVideo = ({ data: { mediaPlayer = {} } = {} }) => {
+    if (!get(mediaPlayer, 'currentTrack.mediaSource')) return null;
+
+    const { currentTime } = mediaPlayer;
+    if (currentTime && currentTime !== this.lastCurrentTime && this.video) {
+      this.video.seek(currentTime);
+    }
+
+    this.lastCurrentTime = currentTime;
+
+    return [
+      <Video
+        ref={this.setVideoRef}
+        source={mediaPlayer.currentTrack.mediaSource}
+        paused={!mediaPlayer.isPlaying}
+        audioOnly={!mediaPlayer.showVideo}
+        ignoreSilentSwitch={'ignore'}
+        allowsExternalPlayback
+        playInBackground
+        playWhenInactive
+        onAudioBecomingNoisy={this.handlePause}
+        onEnd={this.handleOnEnd}
+        onError={this.handleOnError}
+        resizeMode={'contain'}
+        onLoadStart={this.handleOnLoadStart}
+        onLoad={this.handleOnLoad}
+        // onBuffer={this.handleOnBuffer}
+        onProgress={this.handleOnProgress}
+        style={StyleSheet.absoluteFill}
+        volume={mediaPlayer.muted ? 0 : 1}
+        repeat
+        key="video"
+      />,
+      // there's currently a bug on android where react-native-video's poster doesn't ever go away
+      // So we use our own image copmonent...which is nicer cuz we can show a nice fading animation too!
+      <Animated.Image
+        key="poster"
+        style={[
+          styles.animatedPosterImage,
+          mediaPlayer.showVideo ? this.loadingStyle : {},
+        ]}
+        source={mediaPlayer.currentTrack.posterSources}
+      />,
+    ];
+  };
+
+  render() {
+    return (
+      <Background>
+        <Query query={getVideoState}>{this.renderVideo}</Query>
+        <Animated.View style={this.loadingStyle}>
+          <ActivityIndicator size={'large'} />
+        </Animated.View>
+      </Background>
+    );
+  }
+}
+
+export default withApollo(VideoWindow);
diff --git a/apolloschurchapp/src/ui/MediaPlayer/index.js b/apolloschurchapp/src/ui/MediaPlayer/index.js
new file mode 100644
index 0000000..2264866
--- /dev/null
+++ b/apolloschurchapp/src/ui/MediaPlayer/index.js
@@ -0,0 +1,29 @@
+import React, { Component } from 'react';
+import { Query } from 'react-apollo';
+
+import FullscreenPlayer from './FullscreenPlayer';
+
+import { getMediaPlayerVisibility } from './queries';
+
+export { MINI_PLAYER_HEIGHT } from './MiniControls';
+export MediaPlayerSpacer from './MediaPlayerSpacer';
+
+/**
+ * Selectively renders FullscreenPlayer component is MediaPlayer is visible
+ */
+class MediaPlayer extends Component {
+  shouldComponentUpdate() {
+    return false; // 🚀
+  }
+
+  renderPlayer = ({ data = {} }) => {
+    if (!data.mediaPlayer || !data.mediaPlayer.isVisible) return null;
+    return <FullscreenPlayer />;
+  };
+
+  render() {
+    return <Query query={getMediaPlayerVisibility}>{this.renderPlayer}</Query>;
+  }
+}
+
+export default MediaPlayer;
diff --git a/apolloschurchapp/src/ui/MediaPlayer/mutations.js b/apolloschurchapp/src/ui/MediaPlayer/mutations.js
new file mode 100644
index 0000000..3eb3b2d
--- /dev/null
+++ b/apolloschurchapp/src/ui/MediaPlayer/mutations.js
@@ -0,0 +1,101 @@
+import gql from 'graphql-tag';
+
+const playVideoMutation = gql`
+  mutation playVideo(
+    $mediaSource: String!
+    $posterSources: String
+    $title: String
+    $artist: String
+    $isVideo: Boolean
+  ) {
+    mediaPlayerPlayNow(
+      mediaSource: $mediaSource
+      posterSources: $posterSources
+      title: $title
+      artist: $artist
+      isVideo: $isVideo
+    ) @client
+  }
+`;
+
+const goFullscreen = gql`
+  mutation {
+    mediaPlayerUpdateState(isFullscreen: true) @client
+  }
+`;
+
+const play = gql`
+  mutation {
+    mediaPlayerUpdateState(isPlaying: true) @client
+  }
+`;
+
+const pause = gql`
+  mutation {
+    mediaPlayerUpdateState(isPlaying: false) @client
+  }
+`;
+
+const dismiss = gql`
+  mutation {
+    mediaPlayerUpdateState(isPlaying: false, isVisible: false) @client
+  }
+`;
+
+const pauseAndRestart = gql`
+  mutation pause {
+    mediaPlayerUpdateState(isPlaying: false) @client
+    mediaPlayerSetPlayhead(currentTime: 0) @client
+  }
+`;
+
+const exitFullscreen = gql`
+  mutation {
+    mediaPlayerUpdateState(isFullscreen: false) @client
+  }
+`;
+
+const mute = gql`
+  mutation {
+    mediaPlayerUpdateState(muted: true) @client
+  }
+`;
+
+const unmute = gql`
+  mutation {
+    mediaPlayerUpdateState(muted: false) @client
+  }
+`;
+
+const showVideo = gql`
+  mutation {
+    mediaPlayerUpdateState(showVideo: true) @client
+  }
+`;
+
+const hideVideo = gql`
+  mutation {
+    mediaPlayerUpdateState(showVideo: false) @client
+  }
+`;
+
+const updatePlayhead = gql`
+  mutation mediaPlayerSetPlayhead($currentTime: Float) {
+    mediaPlayerSetPlayhead(currentTime: $currentTime) @client
+  }
+`;
+
+export {
+  pauseAndRestart,
+  playVideoMutation,
+  goFullscreen,
+  play,
+  pause,
+  dismiss,
+  exitFullscreen,
+  updatePlayhead,
+  mute,
+  unmute,
+  showVideo,
+  hideVideo,
+};
diff --git a/apolloschurchapp/src/ui/MediaPlayer/queries.js b/apolloschurchapp/src/ui/MediaPlayer/queries.js
new file mode 100644
index 0000000..b56957a
--- /dev/null
+++ b/apolloschurchapp/src/ui/MediaPlayer/queries.js
@@ -0,0 +1,126 @@
+import gql from 'graphql-tag';
+
+const getMediaPlayerVisibility = gql`
+  query mediaPlayerVisibility {
+    mediaPlayer @client {
+      isVisible
+    }
+  }
+`;
+
+const getMediaPlayerIsPlaying = gql`
+  query mediaPlayerVisibility {
+    mediaPlayer @client {
+      isPlaying
+    }
+  }
+`;
+
+const getFullVisibilityState = gql`
+  query fullVisibilityState {
+    mediaPlayer @client {
+      currentTrack {
+        isVideo
+      }
+      isVisible
+      isFullscreen
+    }
+  }
+`;
+
+const getControlState = gql`
+  query {
+    mediaPlayer @client {
+      isFullscreen
+      isPlaying
+      currentTrack {
+        id
+        title
+        artist
+        isVideo
+      }
+      showVideo
+      muted
+    }
+  }
+`;
+
+const getVideoState = gql`
+  query mediaPlayer {
+    mediaPlayer @client {
+      currentTrack {
+        mediaSource {
+          uri
+        }
+        posterSources {
+          uri
+        }
+        id
+        isVideo
+      }
+      currentTime
+      isPlaying
+      showVideo
+      muted
+    }
+  }
+`;
+
+const getMusicControlState = gql`
+  query musicControlState {
+    mediaPlayer @client {
+      currentTrack {
+        posterSources {
+          uri
+        }
+        title
+        artist
+      }
+      currentTime
+      isPlaying
+    }
+  }
+`;
+
+const getElapsedTime = gql`
+  query {
+    mediaPlayer @client {
+      progress {
+        currentTime
+      }
+    }
+  }
+`;
+
+const getProgress = gql`
+  query {
+    mediaPlayer @client {
+      progress {
+        currentTime
+        duration
+      }
+    }
+  }
+`;
+
+const getTotalTime = gql`
+  query {
+    mediaPlayer @client {
+      progress {
+        duration
+      }
+    }
+  }
+`;
+
+export {
+  getMediaPlayerIsPlaying,
+  getMediaPlayerVisibility,
+  getMusicControlState,
+  getFullVisibilityState,
+  getControlState,
+  getVideoState,
+  getElapsedTime,
+  getProgress,
+  getTotalTime,
+};
diff --git a/apolloschurchapp/src/ui/Onboarding/Onboarding.stories.js b/apolloschurchapp/src/ui/Onboarding/Onboarding.stories.js
deleted file mode 100644
index bf81552..0000000
--- a/apolloschurchapp/src/ui/Onboarding/Onboarding.stories.js
+++ /dev/null
@@ -1,5 +0,0 @@
-import React from 'react';
-import { storiesOf } from '@apollosproject/ui-storybook';
-import Onboarding from '.';
-
-storiesOf('Onboarding', module).add('full', () => <Onboarding />);
diff --git a/apolloschurchapp/src/ui/Onboarding/Onboarding.tests.js b/apolloschurchapp/src/ui/Onboarding/Onboarding.tests.js
deleted file mode 100644
index abe9746..0000000
--- a/apolloschurchapp/src/ui/Onboarding/Onboarding.tests.js
+++ /dev/null
@@ -1,17 +0,0 @@
-import React from 'react';
-import renderer from 'react-test-renderer';
-
-import Providers from '../../Providers';
-
-import Onboarding from '.';
-
-describe('the Onboarding component', () => {
-  it('should render Onboarding', () => {
-    const tree = renderer.create(
-      <Providers>
-        <Onboarding />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/ui/Onboarding/index.js b/apolloschurchapp/src/ui/Onboarding/index.js
deleted file mode 100644
index 7ba75e6..0000000
--- a/apolloschurchapp/src/ui/Onboarding/index.js
+++ /dev/null
@@ -1,120 +0,0 @@
-import React from 'react';
-import { Query } from 'react-apollo';
-import {
-  checkNotifications,
-  openSettings,
-  requestNotifications,
-  RESULTS,
-} from 'react-native-permissions';
-import {
-  GradientOverlayImage,
-  styled,
-  BackgroundView,
-  NavigationService,
-} from '@apollosproject/ui-kit';
-import {
-  AskNotificationsConnected,
-  AskNameConnected,
-  FeaturesConnected,
-  AboutYouConnected,
-  LocationFinderConnected,
-  OnboardingSwiper,
-  onboardingComplete,
-  WITH_USER_ID,
-} from '@apollosproject/ui-onboarding';
-
-const FullscreenBackgroundView = styled({
-  position: 'absolute',
-  width: '100%',
-  height: '100%',
-})(BackgroundView);
-
-const StyledGradient = styled({
-  maxHeight: '40%',
-})(GradientOverlayImage);
-
-function Onboarding({ navigation }) {
-  return (
-    <>
-      <FullscreenBackgroundView />
-      <OnboardingSwiper>
-        {({ swipeForward }) => (
-          <>
-            <AskNameConnected onPressPrimary={swipeForward} />
-            <FeaturesConnected
-              onPressPrimary={swipeForward}
-              BackgroundComponent={
-                <StyledGradient
-                  source={'https://picsum.photos/640/640/?random'}
-                />
-              }
-            />
-            <AboutYouConnected
-              onPressPrimary={swipeForward}
-              BackgroundComponent={
-                <StyledGradient
-                  source={'https://picsum.photos/640/640/?random'}
-                />
-              }
-            />
-            <LocationFinderConnected
-              onPressPrimary={swipeForward}
-              onNavigate={() => {
-                navigation.navigate('Location');
-              }}
-              BackgroundComponent={
-                <StyledGradient
-                  source={'https://picsum.photos/640/640/?random'}
-                />
-              }
-            />
-            <Query query={WITH_USER_ID} fetchPolicy="network-only">
-              {({
-                data: { currentUser: { id } = { currentUser: { id: null } } },
-              }) => (
-                <AskNotificationsConnected
-                  onPressPrimary={() => {
-                    onboardingComplete({ userId: id });
-                    navigation.dispatch(
-                      NavigationService.resetAction({
-                        navigatorName: 'Tabs',
-                        routeName: 'Home',
-                      })
-                    );
-                  }}
-                  onRequestPushPermissions={(update) => {
-                    checkNotifications().then((checkRes) => {
-                      if (checkRes.status === RESULTS.DENIED) {
-                        requestNotifications(['alert', 'badge', 'sound']).then(
-                          () => {
-                            update();
-                          }
-                        );
-                      } else {
-                        openSettings();
-                      }
-                    });
-                  }}
-                  primaryNavText={'Finish'}
-                  BackgroundComponent={
-                    <StyledGradient
-                      source={'http://picsum.photos/640/640/?random'}
-                    />
-                  }
-                />
-              )}
-            </Query>
-          </>
-        )}
-      </OnboardingSwiper>
-    </>
-  );
-}
-
-Onboarding.navigationOptions = {
-  title: 'Onboarding',
-  header: null,
-  gesturesEnabled: false,
-};
-
-export default Onboarding;
diff --git a/apolloschurchapp/src/ui/Scripture/ScriptureHTMLView.js b/apolloschurchapp/src/ui/Scripture/ScriptureHTMLView.js
new file mode 100644
index 0000000..fb6a93d
--- /dev/null
+++ b/apolloschurchapp/src/ui/Scripture/ScriptureHTMLView.js
@@ -0,0 +1,138 @@
+import React from 'react';
+import { withProps } from 'recompose';
+import { Platform } from 'react-native';
+
+import { Paragraph, H4 } from '@apollosproject/ui-kit';
+import HTMLView from 'apolloschurchapp/src/ui/HTMLView';
+import defaultRenderer, {
+  wrapTextChildren,
+} from 'apolloschurchapp/src/ui/HTMLView/defaultRenderer';
+
+import {
+  ScriptureText,
+  VerseNumber,
+  RedLetters,
+  PoeticPause,
+} from './typography';
+
+const renderer = (node, { children, ...other }) => {
+  // the defaultRenderer support several basic elements out of the box,
+  // this function only needs to handle the cases that are unique to scripture.
+  const className = (node && node.attribs && node.attribs.class) || '';
+
+  /* Verse numbers
+   * https://github.com/americanbible/api-bible-assets/blob/master/scss/eb-scripture-style/modules/_chapters-verses.scss#L33
+   */
+  if (className.includes('v')) {
+    /* TODO: a single space before and importantly a non-breaking space (`\u00A0`) after wraps the number to
+     * temporarily space verse numbers when they are not at the beginning of a sentence or
+     * paragraph. It affects all instences (albeit less noticably in some cases) so a more procise
+     * fix in the future is prefered.
+     */
+    return (
+      <VerseNumber>
+        {' '}
+        {children}
+        {`\u00A0`}
+      </VerseNumber>
+    );
+  }
+
+  /* Speaker identification and descriptive titles ("Hebrew subtitle")
+   * https://github.com/americanbible/api-bible-assets/blob/master/scss/eb-scripture-style/modules/_titles-headings.scss#L109-L126
+   */
+  if (className.includes('sp') || className.includes('d')) {
+    return <H4 padded>{children}</H4>;
+  }
+
+  /* Indented poetic line These are sometimes seen as a quote of the OT in the NT as well.
+   * This uses spaces as a less ideal fix because we are bound by the limits of rendering HTML.
+   * https://github.com/americanbible/api-bible-assets/blob/master/scss/eb-scripture-style/modules/_poetry.scss#L2
+   */
+  if (className.includes('q1')) {
+    return (
+      <ScriptureText>
+        {'     '}
+        {children}
+      </ScriptureText>
+    );
+  }
+
+  /* Double indented poetic lines. These are sometimes seen as a quote of the OT in the NT as well.
+   * This uses spaces as a less ideal fix because we are bound by the limits of rendering HTML.
+   * https://github.com/americanbible/api-bible-assets/blob/master/scss/eb-scripture-style/modules/_poetry.scss#L7
+   */
+  if (className.includes('q2')) {
+    return (
+      <ScriptureText>
+        {'          '}
+        {children}
+      </ScriptureText>
+    );
+  }
+
+  /* Triple indented poetic lines. These are sometimes seen as a quote of the OT in the NT as well.
+   * This uses spaces as a less ideal fix because we are bound by the limits of rendering HTML.
+   * https://github.com/americanbible/api-bible-assets/blob/master/scss/eb-scripture-style/modules/_poetry.scss#L8
+   */
+  if (className.includes('q3')) {
+    return (
+      <ScriptureText>
+        {'               '}
+        {children}
+      </ScriptureText>
+    );
+  }
+
+  /* Quadruple indented poetic lines. These are sometimes seen as a quote of the OT in the NT as well.
+   * This uses spaces as a less ideal fix because we are bound by the limits of rendering HTML.
+   * https://github.com/americanbible/api-bible-assets/blob/master/scss/eb-scripture-style/modules/_poetry.scss#L9
+   */
+  if (className.includes('q4')) {
+    return (
+      <ScriptureText>
+        {'                    '}
+        {children}
+      </ScriptureText>
+    );
+  }
+
+  if (className.includes('wj')) {
+    return <RedLetters>{children}</RedLetters>;
+  }
+
+  /* Poetic pause ("Selah"). Highly conditional rendering due to Android not supporting nested text
+   * alignment (https://github.com/facebook/react-native/issues/18790) and needing to keep it
+   * somewhat attractive. TODO: revisit conditional code when issue is resolved or if we refactor
+   * the parser
+   *
+   * https://github.com/americanbible/api-bible-assets/blob/master/scss/eb-scripture-style/modules/_poetry.scss#L22
+   */
+  if (className.includes('qs')) {
+    return (
+      <PoeticPause>
+        {Platform.OS === 'ios' ? `\n` : null}
+        {children}
+        {Platform.OS === 'ios' ? `\n` : `\n\n`}
+      </PoeticPause>
+    );
+  }
+
+  if (node.name === 'p') {
+    return (
+      <Paragraph>
+        <ScriptureText>
+          {wrapTextChildren(children, ScriptureText)}
+        </ScriptureText>
+      </Paragraph>
+    );
+  }
+
+  return defaultRenderer(node, { children, ...other });
+};
+
+const ScriptureHTMLView = withProps({
+  renderer,
+})(HTMLView);
+
+export default ScriptureHTMLView;
diff --git a/apolloschurchapp/src/ui/Scripture/ScriptureItem.js b/apolloschurchapp/src/ui/Scripture/ScriptureItem.js
new file mode 100644
index 0000000..b78993f
--- /dev/null
+++ b/apolloschurchapp/src/ui/Scripture/ScriptureItem.js
@@ -0,0 +1,34 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import { View } from 'react-native';
+
+import { Placeholder, H4, H6 } from '@apollosproject/ui-kit';
+
+import { LegalText } from './typography';
+import ScriptureHTMLView from './ScriptureHTMLView';
+
+const ScriptureItem = ({ reference, html, copyright, isLoading }) => (
+  <Placeholder.Paragraph
+    lineNumber={5}
+    onReady={!isLoading}
+    lastLineWidth="60%"
+    firstLineWidth="40%"
+  >
+    <View>
+      <H4>
+        <H4>{reference}</H4> <H6>WEB</H6>
+      </H4>
+      <ScriptureHTMLView>{html}</ScriptureHTMLView>
+      <LegalText>{copyright === 'PUBLIC DOMAIN' ? '' : copyright}</LegalText>
+    </View>
+  </Placeholder.Paragraph>
+);
+
+ScriptureItem.propTypes = {
+  reference: PropTypes.string,
+  html: PropTypes.string,
+  copyright: PropTypes.string,
+  isLoading: PropTypes.bool,
+};
+
+export default ScriptureItem;
diff --git a/apolloschurchapp/src/ui/Scripture/ScriptureItem.stories.js b/apolloschurchapp/src/ui/Scripture/ScriptureItem.stories.js
new file mode 100644
index 0000000..c51b7ed
--- /dev/null
+++ b/apolloschurchapp/src/ui/Scripture/ScriptureItem.stories.js
@@ -0,0 +1,210 @@
+import React from 'react';
+import { ScrollView } from 'react-native';
+import { storiesOf } from '@storybook/react-native';
+import { PaddedView } from '@apollosproject/ui-kit';
+
+import ScriptureItem from './ScriptureItem';
+
+const genesis1 = {
+  scripture: {
+    reference: 'Genesis 1:1-5',
+    html:
+      '<p class="p"><span data-number="1" class="v">1</span>In the beginning, God created the heavens and the earth. <span data-number="2" class="v">2</span>The earth was formless and empty. Darkness was on the surface of the deep and God’s Spirit was hovering over the surface of the waters.</p><p class="p"><span data-number="3" class="v">3</span>God said, “Let there be light,” and there was light. <span data-number="4" class="v">4</span>God saw the light, and saw that it was good. God divided the light from the darkness. <span data-number="5" class="v">5</span>God called the light “day”, and the darkness he called “night”. There was evening and there was morning, the first day.</p>',
+    isLoading: false,
+    copyright: 'PUBLIC DOMAIN',
+  },
+};
+
+const john1 = {
+  scripture: {
+    reference: 'John 1:1',
+    html:
+      '<p class="p"><span data-number="1" class="v">1</span>In the beginning was the Word, and the Word was with God, and the Word was God. </p>',
+    isLoading: false,
+    copyright:
+      'PUBLIC DOMAIN except in the United Kingdom, where a Crown Copyright applies to printing the KJV. See http://www.cambridge.org/about-us/who-we-are/queens-printers-patent',
+  },
+};
+
+const psalm23 = {
+  scripture: {
+    reference: 'Psalm 23',
+    html:
+      '<p class="d">A Psalm by David.</p><p class="q1"><span data-number="1" class="v">1</span>Yahweh is my shepherd:</p><p class="q2">I shall lack nothing.</p><p class="q1"><span data-number="2" class="v">2</span>He makes me lie down in green pastures.</p><p class="q2">He leads me beside still waters.</p><p class="q1"><span data-number="3" class="v">3</span>He restores my soul.</p><p class="q2">He guides me in the paths of righteousness for his name’s sake.</p><p class="q1"><span data-number="4" class="v">4</span>Even though I walk through the valley of the shadow of death,</p><p class="q2">I will fear no evil, for you are with me.</p><p class="q1">Your rod and your staff,</p><p class="q2">they comfort me.</p><p class="q1"><span data-number="5" class="v">5</span>You prepare a table before me</p><p class="q2">in the presence of my enemies.</p><p class="q1">You anoint my head with oil.</p><p class="q2">My cup runs over.</p><p class="q1"><span data-number="6" class="v">6</span>Surely goodness and loving kindness shall follow me all the days of my life,</p><p class="q2">and I will dwell in Yahweh’s house forever.</p>',
+    isLoading: false,
+  },
+};
+
+const psalm32 = {
+  scripture: {
+    reference: 'Psalm 32',
+    html:
+      '<p class="d">By David. A contemplative psalm.</p><p class="q1"><span data-number="1" class="v">1</span>Blessed is he whose disobedience is forgiven,</p><p class="q2">whose sin is covered.</p><p class="q1"><span data-number="2" class="v">2</span>Blessed is the man to whom Yahweh doesn’t impute iniquity,</p><p class="q2">in whose spirit there is no deceit.</p><p class="q1"><span data-number="3" class="v">3</span>When I kept silence, my bones wasted away through my groaning all day long.</p><p class="q1"><span data-number="4" class="v">4</span>For day and night your hand was heavy on me.</p><p class="q2">My strength was sapped in the heat of summer. <span class="qs">Selah.</span></p><p class="q1"><span data-number="5" class="v">5</span>I acknowledged my sin to you.</p><p class="q2">I didn’t hide my iniquity.</p><p class="q1">I said, I will confess my transgressions to Yahweh,</p><p class="q2">and you forgave the iniquity of my sin. <span class="qs">Selah.</span></p><p class="q1"><span data-number="6" class="v">6</span>For this, let everyone who is godly pray to you in a time when you may be found.</p><p class="q2">Surely when the great waters overflow, they shall not reach to him.</p><p class="q1"><span data-number="7" class="v">7</span>You are my hiding place.</p><p class="q2">You will preserve me from trouble.</p><p class="q2">You will surround me with songs of deliverance. <span class="qs">Selah.</span></p><p class="q1"><span data-number="8" class="v">8</span>I will instruct you and teach you in the way which you shall go.</p><p class="q2">I will counsel you with my eye on you.</p><p class="q1"><span data-number="9" class="v">9</span>Don’t be like the horse, or like the mule, which have no understanding,</p><p class="q2">who are controlled by bit and bridle, or else they will not come near to you.</p><p class="q1"><span data-number="10" class="v">10</span>Many sorrows come to the wicked,</p><p class="q2">but loving kindness shall surround him who trusts in Yahweh.</p><p class="q1"><span data-number="11" class="v">11</span>Be glad in Yahweh, and rejoice, you righteous!</p><p class="q2">Shout for joy, all you who are upright in heart!</p>',
+  },
+};
+
+const psalm119 = {
+  scripture: {
+    reference: 'Psalm 119:129 - 144',
+    html:
+      '<p class="d">PEY</p><p class="q1"><span data-number="129" class="v">129</span>Your testimonies are wonderful,</p><p class="q2">therefore my soul keeps them.</p><p class="q1"><span data-number="130" class="v">130</span>The entrance of your words gives light.</p><p class="q2">It gives understanding to the simple.</p><p class="q1"><span data-number="131" class="v">131</span>I opened my mouth wide and panted,</p><p class="q2">for I longed for your commandments.</p><p class="q1"><span data-number="132" class="v">132</span>Turn to me, and have mercy on me,</p><p class="q2">as you always do to those who love your name.</p><p class="q1"><span data-number="133" class="v">133</span>Establish my footsteps in your word.</p><p class="q2">Don’t let any iniquity have dominion over me.</p><p class="q1"><span data-number="134" class="v">134</span>Redeem me from the oppression of man,</p><p class="q2">so I will observe your precepts.</p><p class="q1"><span data-number="135" class="v">135</span>Make your face shine on your servant.</p><p class="q2">Teach me your statutes.</p><p class="q1"><span data-number="136" class="v">136</span>Streams of tears run down my eyes,</p><p class="q2">because they don’t observe your law.</p><p class="d">TZADI</p><p class="q1"><span data-number="137" class="v">137</span>You are righteous, Yahweh.</p><p class="q2">Your judgments are upright.</p><p class="q1"><span data-number="138" class="v">138</span>You have commanded your statutes in righteousness.</p><p class="q2">They are fully trustworthy.</p><p class="q1"><span data-number="139" class="v">139</span>My zeal wears me out,</p><p class="q2">because my enemies ignore your words.</p><p class="q1"><span data-number="140" class="v">140</span>Your promises have been thoroughly tested,</p><p class="q2">and your servant loves them.</p><p class="q1"><span data-number="141" class="v">141</span>I am small and despised.</p><p class="q2">I don’t forget your precepts.</p><p class="q1"><span data-number="142" class="v">142</span>Your righteousness is an everlasting righteousness.</p><p class="q2">Your law is truth.</p><p class="q1"><span data-number="143" class="v">143</span>Trouble and anguish have taken hold of me.</p><p class="q2">Your commandments are my delight.</p><p class="q1"><span data-number="144" class="v">144</span>Your testimonies are righteous forever.</p><p class="q2">Give me understanding, that I may live.</p>',
+  },
+};
+
+const songOfSolomon1 = {
+  scripture: {
+    reference: 'Song of Solomon 1:1-4',
+    html:
+      '<p class="p"><span data-number="1" class="v">1</span>The Song of songs, which is Solomon’s.</p><p class="sp">Beloved</p><p class="q1"><span data-number="2" class="v">2</span>Let him kiss me with the kisses of his mouth;</p><p class="q2">for your love is better than wine.</p><p class="q1"><span data-number="3" class="v">3</span>Your oils have a pleasing fragrance.</p><p class="q2">Your name is oil poured out,</p><p class="q2">therefore the virgins love you.</p><p class="q1"><span data-number="4" class="v">4</span>Take me away with you.</p><p class="q2">Let’s hurry.</p><p class="q2">The king has brought me into his rooms.</p><p class="sp">Friends</p><p class="q1">We will be glad and rejoice in you.</p><p class="q2">We will praise your love more than wine!</p><p class="sp">Beloved</p><p class="q1">They are right to love you.</p>',
+    isLoading: false,
+  },
+};
+
+const mark1 = {
+  scripture: {
+    reference: 'Mark 1: 1-4',
+    html:
+      '<p class="p"><span data-number="1" class="v">1</span>The beginning of the Good News of Jesus Christ, the Son of God.</p><p class="p"><span data-number="2" class="v">2</span>As it is written in the prophets,</p><p class="q1">“Behold, I send my messenger before your face,</p><p class="q2">who will prepare your way before you:</p><p class="q1"><span data-number="3" class="v">3</span>the voice of one crying in the wilderness,</p><p class="q2">‘Make ready the way of the Lord!</p><p class="q2">Make his paths straight!’”</p><p class="p"><span data-number="4" class="v">4</span>John came baptizing in the wilderness and preaching the baptism of repentance for forgiveness of sins.',
+  },
+};
+
+const john3 = {
+  scripture: {
+    reference: 'John 3:16-17',
+    html:
+      '<p class="p"><span data-number="16" class="v">16</span><span class="wj">For God so loved the world, that he gave his one and only Son, that whoever believes in him should not perish, but have eternal life. </span><span data-number="17" class="v">17</span><span class="wj">For God didn’t send his Son into the world to judge the world, but that the world should be saved through him. </span></p>',
+    isLoading: false,
+  },
+};
+
+const revelation22 = {
+  scripture: {
+    reference: 'Revelation 22:20-21',
+    html:
+      '<p class="p"><span data-number="20" class="v">20</span>He who testifies these things says, <span class="wj">“Yes, I come quickly.” </span></p><p class="p">Amen! Yes, come, Lord Jesus.</p><p class="p"><span data-number="21" class="v">21</span>The grace of the Lord Jesus Christ be with all the saints. Amen.</p>',
+    isLoading: false,
+  },
+};
+
+const revelation22Loading = {
+  scripture: {
+    reference: 'Revelation 22:20-21',
+    html:
+      '<p class="p"><span data-number="20" class="v">20</span>He who testifies these things says, <span class="wj">“Yes, I come quickly.” </span></p><p class="p">Amen! Yes, come, Lord Jesus.</p><p class="p"><span data-number="21" class="v">21</span>The grace of the Lord Jesus Christ be with all the saints. Amen.</p>',
+    isLoading: true,
+  },
+};
+
+storiesOf('Scripture', module)
+  .add('Genesis 1:1-5', () => (
+    <ScrollView>
+      <PaddedView>
+        <ScriptureItem
+          reference={genesis1.scripture.reference}
+          html={genesis1.scripture.html}
+          isLoading={genesis1.scripture.isLoading}
+          copyright={genesis1.scripture.copyright}
+        />
+      </PaddedView>
+    </ScrollView>
+  ))
+  .add('John 1:1', () => (
+    <ScrollView>
+      <PaddedView>
+        <ScriptureItem
+          reference={john1.scripture.reference}
+          html={john1.scripture.html}
+          isLoading={john1.scripture.isLoading}
+          copyright={john1.scripture.copyright}
+        />
+      </PaddedView>
+    </ScrollView>
+  ))
+  .add('Psalm 23', () => (
+    <ScrollView>
+      <PaddedView>
+        <ScriptureItem
+          reference={psalm23.scripture.reference}
+          html={psalm23.scripture.html}
+          isLoading={psalm23.scripture.isLoading}
+        />
+      </PaddedView>
+    </ScrollView>
+  ))
+  .add('Psalm 32', () => (
+    <ScrollView>
+      <PaddedView>
+        <ScriptureItem
+          reference={psalm32.scripture.reference}
+          html={psalm32.scripture.html}
+          isLoading={psalm32.scripture.isLoading}
+        />
+      </PaddedView>
+    </ScrollView>
+  ))
+  .add('Psalm 119:129 - 144', () => (
+    <ScrollView>
+      <PaddedView>
+        <ScriptureItem
+          reference={psalm119.scripture.reference}
+          html={psalm119.scripture.html}
+          isLoading={psalm119.scripture.isLoading}
+        />
+      </PaddedView>
+    </ScrollView>
+  ))
+  .add('Song of Solomon 1:1-4', () => (
+    <ScrollView>
+      <PaddedView>
+        <ScriptureItem
+          reference={songOfSolomon1.scripture.reference}
+          html={songOfSolomon1.scripture.html}
+          isLoading={songOfSolomon1.scripture.isLoading}
+        />
+      </PaddedView>
+    </ScrollView>
+  ))
+  .add('Mark 1: 1-4', () => (
+    <ScrollView>
+      <PaddedView>
+        <ScriptureItem
+          reference={mark1.scripture.reference}
+          html={mark1.scripture.html}
+          isLoading={mark1.scripture.isLoading}
+        />
+      </PaddedView>
+    </ScrollView>
+  ))
+  .add('John 3:16-17', () => (
+    <ScrollView>
+      <PaddedView>
+        <ScriptureItem
+          reference={john3.scripture.reference}
+          html={john3.scripture.html}
+          isLoading={john3.scripture.isLoading}
+        />
+      </PaddedView>
+    </ScrollView>
+  ))
+  .add('Revelation 22:20-21', () => (
+    <ScrollView>
+      <PaddedView>
+        <ScriptureItem
+          reference={revelation22.scripture.reference}
+          html={revelation22.scripture.html}
+          isLoading={revelation22.scripture.isLoading}
+        />
+      </PaddedView>
+    </ScrollView>
+  ))
+  .add('Loading State', () => (
+    <ScrollView>
+      <PaddedView>
+        <ScriptureItem
+          reference={revelation22Loading.scripture.reference}
+          html={revelation22Loading.scripture.html}
+          isLoading={revelation22Loading.scripture.isLoading}
+        />
+      </PaddedView>
+    </ScrollView>
+  ));
diff --git a/apolloschurchapp/src/ui/Scripture/ScriptureItem.tests.js b/apolloschurchapp/src/ui/Scripture/ScriptureItem.tests.js
new file mode 100644
index 0000000..b43256b
--- /dev/null
+++ b/apolloschurchapp/src/ui/Scripture/ScriptureItem.tests.js
@@ -0,0 +1,198 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import ScriptureItem from './ScriptureItem';
+
+const genesis1 = {
+  scripture: {
+    reference: 'Genesis 1:1-5',
+    html:
+      '<p class="p"><span data-number="1" class="v">1</span>In the beginning, God created the heavens and the earth. <span data-number="2" class="v">2</span>The earth was formless and empty. Darkness was on the surface of the deep and God’s Spirit was hovering over the surface of the waters.</p><p class="p"><span data-number="3" class="v">3</span>God said, “Let there be light,” and there was light. <span data-number="4" class="v">4</span>God saw the light, and saw that it was good. God divided the light from the darkness. <span data-number="5" class="v">5</span>God called the light “day”, and the darkness he called “night”. There was evening and there was morning, the first day.</p>',
+    copyright: 'PUBLIC DOMAIN',
+  },
+};
+
+const psalm23 = {
+  scripture: {
+    reference: 'Psalm 23',
+    html:
+      '<p class="d">A Psalm by David.</p><p class="q1"><span data-number="1" class="v">1</span>Yahweh is my shepherd:</p><p class="q2">I shall lack nothing.</p><p class="q1"><span data-number="2" class="v">2</span>He makes me lie down in green pastures.</p><p class="q2">He leads me beside still waters.</p><p class="q1"><span data-number="3" class="v">3</span>He restores my soul.</p><p class="q2">He guides me in the paths of righteousness for his name’s sake.</p><p class="q1"><span data-number="4" class="v">4</span>Even though I walk through the valley of the shadow of death,</p><p class="q2">I will fear no evil, for you are with me.</p><p class="q1">Your rod and your staff,</p><p class="q2">they comfort me.</p><p class="q1"><span data-number="5" class="v">5</span>You prepare a table before me</p><p class="q2">in the presence of my enemies.</p><p class="q1">You anoint my head with oil.</p><p class="q2">My cup runs over.</p><p class="q1"><span data-number="6" class="v">6</span>Surely goodness and loving kindness shall follow me all the days of my life,</p><p class="q2">and I will dwell in Yahweh’s house forever.</p>',
+
+    copyright:
+      'PUBLIC DOMAIN except in the United Kingdom, where a Crown Copyright applies to printing the KJV. See http://www.cambridge.org/about-us/who-we-are/queens-printers-patent',
+  },
+};
+
+const psalm32 = {
+  scripture: {
+    reference: 'Psalm 32',
+    html:
+      '<p class="d">By David. A contemplative psalm.</p><p class="q1"><span data-number="1" class="v">1</span>Blessed is he whose disobedience is forgiven,</p><p class="q2">whose sin is covered.</p><p class="q1"><span data-number="2" class="v">2</span>Blessed is the man to whom Yahweh doesn’t impute iniquity,</p><p class="q2">in whose spirit there is no deceit.</p><p class="q1"><span data-number="3" class="v">3</span>When I kept silence, my bones wasted away through my groaning all day long.</p><p class="q1"><span data-number="4" class="v">4</span>For day and night your hand was heavy on me.</p><p class="q2">My strength was sapped in the heat of summer. <span class="qs">Selah.</span></p><p class="q1"><span data-number="5" class="v">5</span>I acknowledged my sin to you.</p><p class="q2">I didn’t hide my iniquity.</p><p class="q1">I said, I will confess my transgressions to Yahweh,</p><p class="q2">and you forgave the iniquity of my sin. <span class="qs">Selah.</span></p><p class="q1"><span data-number="6" class="v">6</span>For this, let everyone who is godly pray to you in a time when you may be found.</p><p class="q2">Surely when the great waters overflow, they shall not reach to him.</p><p class="q1"><span data-number="7" class="v">7</span>You are my hiding place.</p><p class="q2">You will preserve me from trouble.</p><p class="q2">You will surround me with songs of deliverance. <span class="qs">Selah.</span></p><p class="q1"><span data-number="8" class="v">8</span>I will instruct you and teach you in the way which you shall go.</p><p class="q2">I will counsel you with my eye on you.</p><p class="q1"><span data-number="9" class="v">9</span>Don’t be like the horse, or like the mule, which have no understanding,</p><p class="q2">who are controlled by bit and bridle, or else they will not come near to you.</p><p class="q1"><span data-number="10" class="v">10</span>Many sorrows come to the wicked,</p><p class="q2">but loving kindness shall surround him who trusts in Yahweh.</p><p class="q1"><span data-number="11" class="v">11</span>Be glad in Yahweh, and rejoice, you righteous!</p><p class="q2">Shout for joy, all you who are upright in heart!</p>',
+  },
+};
+
+const psalm119 = {
+  scripture: {
+    reference: 'Psalm 119:129 - 144',
+    html:
+      '<p class="d">PEY</p><p class="q1"><span data-number="129" class="v">129</span>Your testimonies are wonderful,</p><p class="q2">therefore my soul keeps them.</p><p class="q1"><span data-number="130" class="v">130</span>The entrance of your words gives light.</p><p class="q2">It gives understanding to the simple.</p><p class="q1"><span data-number="131" class="v">131</span>I opened my mouth wide and panted,</p><p class="q2">for I longed for your commandments.</p><p class="q1"><span data-number="132" class="v">132</span>Turn to me, and have mercy on me,</p><p class="q2">as you always do to those who love your name.</p><p class="q1"><span data-number="133" class="v">133</span>Establish my footsteps in your word.</p><p class="q2">Don’t let any iniquity have dominion over me.</p><p class="q1"><span data-number="134" class="v">134</span>Redeem me from the oppression of man,</p><p class="q2">so I will observe your precepts.</p><p class="q1"><span data-number="135" class="v">135</span>Make your face shine on your servant.</p><p class="q2">Teach me your statutes.</p><p class="q1"><span data-number="136" class="v">136</span>Streams of tears run down my eyes,</p><p class="q2">because they don’t observe your law.</p><p class="d">TZADI</p><p class="q1"><span data-number="137" class="v">137</span>You are righteous, Yahweh.</p><p class="q2">Your judgments are upright.</p><p class="q1"><span data-number="138" class="v">138</span>You have commanded your statutes in righteousness.</p><p class="q2">They are fully trustworthy.</p><p class="q1"><span data-number="139" class="v">139</span>My zeal wears me out,</p><p class="q2">because my enemies ignore your words.</p><p class="q1"><span data-number="140" class="v">140</span>Your promises have been thoroughly tested,</p><p class="q2">and your servant loves them.</p><p class="q1"><span data-number="141" class="v">141</span>I am small and despised.</p><p class="q2">I don’t forget your precepts.</p><p class="q1"><span data-number="142" class="v">142</span>Your righteousness is an everlasting righteousness.</p><p class="q2">Your law is truth.</p><p class="q1"><span data-number="143" class="v">143</span>Trouble and anguish have taken hold of me.</p><p class="q2">Your commandments are my delight.</p><p class="q1"><span data-number="144" class="v">144</span>Your testimonies are righteous forever.</p><p class="q2">Give me understanding, that I may live.</p>',
+  },
+};
+
+const songOfSolomon1 = {
+  scripture: {
+    reference: 'Song of Solomon 1:1-4',
+    html:
+      '<p class="p"><span data-number="1" class="v">1</span>The Song of songs, which is Solomon’s.</p><p class="sp">Beloved</p><p class="q1"><span data-number="2" class="v">2</span>Let him kiss me with the kisses of his mouth;</p><p class="q2">for your love is better than wine.</p><p class="q1"><span data-number="3" class="v">3</span>Your oils have a pleasing fragrance.</p><p class="q2">Your name is oil poured out,</p><p class="q2">therefore the virgins love you.</p><p class="q1"><span data-number="4" class="v">4</span>Take me away with you.</p><p class="q2">Let’s hurry.</p><p class="q2">The king has brought me into his rooms.</p><p class="sp">Friends</p><p class="q1">We will be glad and rejoice in you.</p><p class="q2">We will praise your love more than wine!</p><p class="sp">Beloved</p><p class="q1">They are right to love you.</p>',
+    isLoading: false,
+  },
+};
+
+const mark1 = {
+  scripture: {
+    reference: 'Mark 1:1-4',
+    html:
+      '<p class="p"><span data-number="1" class="v">1</span>The beginning of the Good News of Jesus Christ, the Son of God.</p><p class="p"><span data-number="2" class="v">2</span>As it is written in the prophets,</p><p class="q1">“Behold, I send my messenger before your face,</p><p class="q2">who will prepare your way before you:</p><p class="q1"><span data-number="3" class="v">3</span>the voice of one crying in the wilderness,</p><p class="q2">‘Make ready the way of the Lord!</p><p class="q2">Make his paths straight!’”</p><p class="p"><span data-number="4" class="v">4</span>John came baptizing in the wilderness and preaching the baptism of repentance for forgiveness of sins.',
+  },
+};
+
+const john3 = {
+  scripture: {
+    reference: 'John 3:16-17',
+    html:
+      '<p class="p"><span data-number="16" class="v">16</span><span class="wj">For God so loved the world, that he gave his one and only Son, that whoever believes in him should not perish, but have eternal life. </span><span data-number="17" class="v">17</span><span class="wj">For God didn’t send his Son into the world to judge the world, but that the world should be saved through him. </span></p>',
+    isLoading: false,
+  },
+};
+
+const revelation22 = {
+  scripture: {
+    reference: 'Revelation 22:20-21',
+    html:
+      '<p class="p"><span data-number="20" class="v">20</span>He who testifies these things says, <span class="wj">“Yes, I come quickly.” </span></p><p class="p">Amen! Yes, come, Lord Jesus.</p><p class="p"><span data-number="21" class="v">21</span>The grace of the Lord Jesus Christ be with all the saints. Amen.</p>',
+  },
+};
+
+const john3Loading = {
+  scripture: {
+    reference: 'John 3:16-17',
+    html:
+      '<p class="p"><span data-number="16" class="v">16</span><span class="wj">For God so loved the world, that he gave his one and only Son, that whoever believes in him should not perish, but have eternal life. </span><span data-number="17" class="v">17</span><span class="wj">For God didn’t send his Son into the world to judge the world, but that the world should be saved through him. </span></p>',
+    isLoading: true,
+  },
+};
+
+describe('the ScriptureItem component', () => {
+  it('renders Genesis 1:1-5', () => {
+    const tree = renderer.create(
+      <Providers>
+        <ScriptureItem
+          reference={genesis1.scripture.reference}
+          html={genesis1.scripture.html}
+          copyright={genesis1.scripture.copyright}
+          isLoading={false}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('renders Psalm 23', () => {
+    const tree = renderer.create(
+      <Providers>
+        <ScriptureItem
+          reference={psalm23.scripture.reference}
+          html={psalm23.scripture.html}
+          copyright={psalm23.scripture.copyright}
+          isLoading={false}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('renders Psalm 32', () => {
+    const tree = renderer.create(
+      <Providers>
+        <ScriptureItem
+          reference={psalm32.scripture.reference}
+          html={psalm32.scripture.html}
+          isLoading={false}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('renders Psalm 119:129 - 144', () => {
+    const tree = renderer.create(
+      <Providers>
+        <ScriptureItem
+          reference={psalm119.scripture.reference}
+          html={psalm119.scripture.html}
+          isLoading={false}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('renders Song of Solomon 1:1-4', () => {
+    const tree = renderer.create(
+      <Providers>
+        <ScriptureItem
+          reference={songOfSolomon1.scripture.reference}
+          html={songOfSolomon1.scripture.html}
+          isLoading={songOfSolomon1.scripture.isLoading}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('renders Mark 1:1-4', () => {
+    const tree = renderer.create(
+      <Providers>
+        <ScriptureItem
+          reference={mark1.scripture.reference}
+          html={mark1.scripture.html}
+          isLoading={false}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('renders John 3:16-17', () => {
+    const tree = renderer.create(
+      <Providers>
+        <ScriptureItem
+          reference={john3.scripture.reference}
+          html={john3.scripture.html}
+          isLoading={john3.scripture.isLoading}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('renders Revelation 22:20-21', () => {
+    const tree = renderer.create(
+      <Providers>
+        <ScriptureItem
+          reference={revelation22.scripture.reference}
+          html={revelation22.scripture.html}
+          isLoading={false}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('renders a loading state', () => {
+    const tree = renderer.create(
+      <Providers>
+        <ScriptureItem
+          reference={john3Loading.scripture.reference}
+          html={john3Loading.scripture.html}
+          isLoading={john3Loading.scripture.isLoading}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/Scripture/ScriptureList.js b/apolloschurchapp/src/ui/Scripture/ScriptureList.js
new file mode 100644
index 0000000..f6d3015
--- /dev/null
+++ b/apolloschurchapp/src/ui/Scripture/ScriptureList.js
@@ -0,0 +1,49 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import { H4, styled, ButtonLink } from '@apollosproject/ui-kit';
+
+const StyledH4 = styled(({ theme }) => ({
+  color: theme.colors.primary,
+  textAlign: 'center',
+  textDecorationLine: 'underline',
+  paddingBottom: theme.sizing.baseUnit * 1.5,
+}))(H4);
+
+const ScriptureList = ({
+  references,
+  onPress,
+  tabDestination,
+  commas = true,
+}) => {
+  if (!references && commas) return '';
+  if (!references) return [];
+
+  let combo = references.map((reference) => `${reference}`);
+
+  if (commas) {
+    combo = combo.join(', ');
+  }
+
+  const handleOnPress = () => onPress(tabDestination);
+
+  return (
+    <StyledH4>
+      <ButtonLink padded onPress={handleOnPress}>
+        {combo}
+      </ButtonLink>
+    </StyledH4>
+  );
+};
+
+ScriptureList.propTypes = {
+  /** Toggles comma formating */
+  commas: PropTypes.bool,
+  /** The ButtonLink handler */
+  onPress: PropTypes.func,
+  /** An array of human readable references (i.e. '1 Corinthians 15:57') */
+  references: PropTypes.arrayOf(PropTypes.string),
+  /** The tab to go to onPress */
+  tabDestination: PropTypes.string,
+};
+
+export default ScriptureList;
diff --git a/apolloschurchapp/src/ui/Scripture/ScriptureList.tests.js b/apolloschurchapp/src/ui/Scripture/ScriptureList.tests.js
new file mode 100644
index 0000000..d95c212
--- /dev/null
+++ b/apolloschurchapp/src/ui/Scripture/ScriptureList.tests.js
@@ -0,0 +1,19 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import ScriptureList from './ScriptureList';
+
+const scriptureReferences = ['1 Corinthians 15:57', 'Exodus 17:8-15'];
+
+describe('the ScriptureList component', () => {
+  it('renders a scripture List', () => {
+    const tree = renderer.create(
+      <Providers>
+        <ScriptureList onPress={jest.fn()} references={scriptureReferences} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/Scripture/index.js b/apolloschurchapp/src/ui/Scripture/index.js
new file mode 100644
index 0000000..6458f99
--- /dev/null
+++ b/apolloschurchapp/src/ui/Scripture/index.js
@@ -0,0 +1,2 @@
+export { default } from './ScriptureItem';
+export ScriptureList from './ScriptureList';
diff --git a/apolloschurchapp/src/ui/Scripture/typography/ScriptureText/ScriptureText.stories.js b/apolloschurchapp/src/ui/Scripture/typography/ScriptureText/ScriptureText.stories.js
new file mode 100644
index 0000000..33ea0d2
--- /dev/null
+++ b/apolloschurchapp/src/ui/Scripture/typography/ScriptureText/ScriptureText.stories.js
@@ -0,0 +1,44 @@
+import React from 'react';
+import { View } from 'react-native';
+import { storiesOf } from '@storybook/react-native';
+
+import ScriptureText from '.';
+
+storiesOf('Scripture/typography/ScriptureText', module)
+  .add('Regular', () => (
+    <ScriptureText>
+      {`"God's commands are designed to guide you to life's very best. You will not obey Him, if you do not believe Him and trust Him. You cannot believe Him if you do not love Him. You cannot love Him unless you know Him." ― Henry Blackaby`}
+    </ScriptureText>
+  ))
+  .add('Bold', () => (
+    <ScriptureText bold>
+      {`"God's commands are designed to guide you to life's very best. You will not obey Him, if you do not believe Him and trust Him. You cannot believe Him if you do not love Him. You cannot love Him unless you know Him." ― Henry Blackaby`}
+    </ScriptureText>
+  ))
+  .add('Italic', () => (
+    <ScriptureText italic>
+      {`"God's commands are designed to guide you to life's very best. You will not obey Him, if you do not believe Him and trust Him. You cannot believe Him if you do not love Him. You cannot love Him unless you know Him." ― Henry Blackaby`}
+    </ScriptureText>
+  ))
+  .add('Bold Italic', () => (
+    <ScriptureText bold italic>
+      {`"God's commands are designed to guide you to life's very best. You will not obey Him, if you do not believe Him and trust Him. You cannot believe Him if you do not love Him. You cannot love Him unless you know Him." ― Henry Blackaby`}
+    </ScriptureText>
+  ))
+  .add('isLoading', () => (
+    <ScriptureText isLoading>
+      {`"God's commands are designed to guide you to life's very best. You will not obey Him, if you do not believe Him and trust Him. You cannot believe Him if you do not love Him. You cannot love Him unless you know Him." ― Henry Blackaby`}
+    </ScriptureText>
+  ))
+  .add('Border Box – platform testing', () => {
+    const border = { borderWidth: 1, borderStyle: 'solid' };
+
+    return (
+      <View>
+        <ScriptureText style={border}>Body Text</ScriptureText>
+        <ScriptureText style={border}>
+          {`"God's commands are designed to guide you to life's very best. You will not obey Him, if you do not believe Him and trust Him. You cannot believe Him if you do not love Him. You cannot love Him unless you know Him." ― Henry Blackaby`}
+        </ScriptureText>
+      </View>
+    );
+  });
diff --git a/apolloschurchapp/src/ui/Scripture/typography/ScriptureText/ScriptureText.tests.js b/apolloschurchapp/src/ui/Scripture/typography/ScriptureText/ScriptureText.tests.js
new file mode 100644
index 0000000..f1c7012
--- /dev/null
+++ b/apolloschurchapp/src/ui/Scripture/typography/ScriptureText/ScriptureText.tests.js
@@ -0,0 +1,72 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import ScriptureText from '.';
+
+describe('the ScriptureText component', () => {
+  it('should render correctly', () => {
+    const tree = renderer.create(
+      <Providers>
+        <ScriptureText>Default ScriptureText text</ScriptureText>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render as bold', () => {
+    const tree = renderer.create(
+      <Providers>
+        <ScriptureText bold>Bold ScriptureText text</ScriptureText>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render as italic', () => {
+    const tree = renderer.create(
+      <Providers>
+        <ScriptureText italic>Italic ScriptureText text</ScriptureText>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render as bold italic', () => {
+    const tree = renderer.create(
+      <Providers>
+        <ScriptureText bold italic>
+          Bold italic ScriptureText text
+        </ScriptureText>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should accept and render passed in styles', () => {
+    const salmon = { color: 'salmon' };
+    const tree = renderer.create(
+      <Providers>
+        <ScriptureText style={salmon}>Salmon text</ScriptureText>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a loading state', () => {
+    const tree = renderer.create(
+      <Providers>
+        <ScriptureText isLoading>Default ScriptureText text</ScriptureText>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should accept additional props', () => {
+    const tree = renderer.create(
+      <Providers>
+        <ScriptureText accessible={false}>
+          {
+            '"True faith means holding nothing back. It means putting every hope in God\'s fidelity to His Promises." ― Francis Chan'
+          }
+        </ScriptureText>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/Scripture/typography/ScriptureText/index.js b/apolloschurchapp/src/ui/Scripture/typography/ScriptureText/index.js
new file mode 100644
index 0000000..6f216c7
--- /dev/null
+++ b/apolloschurchapp/src/ui/Scripture/typography/ScriptureText/index.js
@@ -0,0 +1,47 @@
+import { Text } from 'react-native';
+import PropTypes from 'prop-types';
+import { compose, pure, setDisplayName } from 'recompose';
+
+import { styled, withPlaceholder, Placeholder } from '@apollosproject/ui-kit';
+
+const { Typography } = Placeholder;
+
+const styles = styled(({ theme, bold, italic }) => {
+  let fontStack = theme.typography.serif.regular.default;
+
+  if (bold && italic) {
+    fontStack = theme.typography.serif.bold.italic;
+  } else if (bold) {
+    fontStack = theme.typography.serif.bold.default;
+  } else if (italic) {
+    fontStack = theme.typography.serif.regular.italic;
+  }
+
+  return {
+    fontSize: theme.helpers.rem(1),
+    lineHeight: theme.helpers.verticalRhythm(1, 1.625),
+    fontFamily: fontStack,
+    color: theme.colors.text.primary,
+  };
+}, 'ScriptureText');
+
+const ScriptureText = compose(
+  setDisplayName('ScriptureText'),
+  styles,
+  withPlaceholder(Typography),
+  pure
+)(Text);
+
+ScriptureText.propTypes = {
+  bold: PropTypes.bool,
+  italic: PropTypes.bool,
+  isLoading: PropTypes.bool, // display loading placeholder
+  ...Text.propTypes,
+};
+
+ScriptureText.defaultProps = {
+  bold: false,
+  italic: false,
+};
+
+export default ScriptureText;
diff --git a/apolloschurchapp/src/ui/Scripture/typography/index.js b/apolloschurchapp/src/ui/Scripture/typography/index.js
new file mode 100644
index 0000000..b9ec8c2
--- /dev/null
+++ b/apolloschurchapp/src/ui/Scripture/typography/index.js
@@ -0,0 +1,27 @@
+import { Text } from 'react-native';
+
+import { styled } from '@apollosproject/ui-kit';
+
+import ScriptureText from './ScriptureText';
+
+const VerseNumber = styled(({ theme }) => ({
+  fontSize: theme.helpers.rem(0.6),
+  color: theme.colors.text.secondary,
+}))(ScriptureText);
+
+const RedLetters = styled(({ theme }) => ({
+  color: theme.colors.wordOfChrist,
+}))(Text);
+
+const PoeticPause = styled({
+  textAlign: 'right',
+})(ScriptureText);
+
+const LegalText = styled(({ theme }) => ({
+  fontSize: theme.helpers.rem(0.6),
+  lineHeight: theme.helpers.verticalRhythm(0.45),
+  fontFamily: theme.typography.sans.regular.default,
+  color: theme.colors.text.secondary,
+}))(ScriptureText);
+
+export { ScriptureText, VerseNumber, RedLetters, PoeticPause, LegalText };
diff --git a/apolloschurchapp/src/ui/SearchInputHeader/SearchInputHeader.tests.js b/apolloschurchapp/src/ui/SearchInputHeader/SearchInputHeader.tests.js
deleted file mode 100644
index cdaeb17..0000000
--- a/apolloschurchapp/src/ui/SearchInputHeader/SearchInputHeader.tests.js
+++ /dev/null
@@ -1,34 +0,0 @@
-import React from 'react';
-import renderer from 'react-test-renderer';
-
-import Providers from '../../Providers';
-
-import SearchInputHeader from '.';
-
-describe('The Onboarding LandingScreen component', () => {
-  it('should render', () => {
-    const tree = renderer.create(
-      <Providers>
-        <SearchInputHeader />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should be stylable', () => {
-    const style = { backgroundColor: 'salmon' };
-    const tree = renderer.create(
-      <Providers>
-        <SearchInputHeader style={style} />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render pass props to SearchInput', () => {
-    const tree = renderer.create(
-      <Providers>
-        <SearchInputHeader cancelButtonText={'Boom'} />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/ui/SearchInputHeader/index.js b/apolloschurchapp/src/ui/SearchInputHeader/index.js
deleted file mode 100644
index b3265b8..0000000
--- a/apolloschurchapp/src/ui/SearchInputHeader/index.js
+++ /dev/null
@@ -1,65 +0,0 @@
-/* eslint-disable react-native/no-unused-styles */
-import React from 'react';
-import { Platform, StyleSheet, View } from 'react-native';
-
-import { styled, PaddedView, SearchInput } from '@apollosproject/ui-kit';
-
-const HeaderBorder = styled(
-  ({ theme }) => ({
-    paddingBottom: theme.sizing.baseUnit / 2,
-    /* It's unclear why this is necessary but without it the layout breaks on both platforms. Limited
-     * research suggest that without a background color the shadows don't know what to blend with so
-     * the view collapses. */
-    backgroundColor: theme.colors.background.paper,
-    // Renders the same shadows that React Navigation does.
-    ...Platform.select({
-      ios: {
-        shadowColor: 'rgba(0, 0, 0, 0.3)',
-        shadowOpacity: 0.85,
-        shadowRadius: 0,
-        shadowOffset: {
-          width: 0,
-          height: StyleSheet.hairlineWidth,
-        },
-      },
-      android: {
-        elevation: 4,
-      },
-    }),
-  }),
-  'SearchInputHeader.HeaderBorder'
-)(PaddedView);
-
-// This element is used to clip the Android shadow in every directection except the bottom.
-const AndroidClipElevationFix = styled(
-  {
-    ...Platform.select({
-      android: {
-        paddingBottom: 4,
-        overflow: 'hidden',
-      },
-    }),
-  },
-  'SearchInputHeader.AndroidClipElevationFix'
-)(View);
-
-const ReactNavigationStyleReset = StyleSheet.create({
-  header: {
-    borderBottomWidth: 0,
-    elevation: 0,
-  },
-});
-
-const SearchInputHeader = ({ style, ...props }) => (
-  <AndroidClipElevationFix style={style}>
-    <HeaderBorder vertical={false}>
-      <SearchInput {...props} />
-    </HeaderBorder>
-  </AndroidClipElevationFix>
-);
-
-SearchInputHeader.propTypes = {
-  ...SearchInput.propTypes,
-};
-
-export { SearchInputHeader as default, ReactNavigationStyleReset };
diff --git a/apolloschurchapp/src/ui/Share/Share.tests.js b/apolloschurchapp/src/ui/Share/Share.tests.js
new file mode 100644
index 0000000..1a059da
--- /dev/null
+++ b/apolloschurchapp/src/ui/Share/Share.tests.js
@@ -0,0 +1,22 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import { Providers } from '@apollosproject/ui-kit';
+
+import Share from '.';
+
+describe('the Share component', () => {
+  it('should render', () => {
+    const shareObject = {
+      title: 'Shared Object Title',
+      url: 'https://github.com/ApollosProject/apollos-prototype',
+      message: 'Share this with all your friends and family',
+    };
+    const tree = renderer.create(
+      <Providers>
+        <Share content={shareObject} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/Share/index.js b/apolloschurchapp/src/ui/Share/index.js
new file mode 100644
index 0000000..667f1e6
--- /dev/null
+++ b/apolloschurchapp/src/ui/Share/index.js
@@ -0,0 +1,26 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import { compose, pure } from 'recompose';
+import share from 'apolloschurchapp/src/utils/content/share';
+import { Touchable, Icon, withTheme } from '@apollosproject/ui-kit';
+
+const enhance = compose(
+  pure,
+  withTheme()
+);
+
+const Share = enhance(({ content, theme }) => (
+  <Touchable onPress={() => share(content)}>
+    <Icon name={'share'} fill={theme.colors.secondary} />
+  </Touchable>
+));
+
+Share.propTypes = {
+  content: PropTypes.shape({
+    message: PropTypes.string,
+    title: PropTypes.string,
+    url: PropTypes.string,
+  }),
+};
+
+export default Share;
diff --git a/apolloschurchapp/src/ui/UserAvatarView/AvatarForm.js b/apolloschurchapp/src/ui/UserAvatarView/AvatarForm.js
new file mode 100644
index 0000000..70dabc9
--- /dev/null
+++ b/apolloschurchapp/src/ui/UserAvatarView/AvatarForm.js
@@ -0,0 +1,106 @@
+import React, { PureComponent } from 'react';
+import { View } from 'react-native';
+import PropTypes from 'prop-types';
+import { get } from 'lodash';
+import { Query } from 'react-apollo';
+
+import {
+  Touchable,
+  ButtonLink,
+  Avatar,
+  withTheme,
+  H5,
+  styled,
+} from '@apollosproject/ui-kit';
+import getUserProfile from '../../tabs/connect/getUserProfile';
+import uploadPhoto from './uploadPhoto';
+
+const GetPhotoData = ({ children }) => (
+  <Query query={getUserProfile}>
+    {({ data: { currentUser = {} } = {} }) => {
+      const photo = get(currentUser, 'profile.photo');
+      return children({ photo });
+    }}
+  </Query>
+);
+
+GetPhotoData.propTypes = {
+  children: PropTypes.func.isRequired,
+};
+
+const StyledAvatar = withTheme(({ theme }) => ({
+  containerStyle: {
+    marginRight: 0,
+    marginBottom: theme.sizing.baseUnit / 2,
+  },
+}))(Avatar);
+
+const RoundTouchable = withTheme(({ theme, size }) => ({
+  borderRadius: get(theme.sizing.avatar, size, theme.sizing.avatar.small),
+}))(Touchable);
+
+const Wrapper = styled({
+  justifyContent: 'center',
+  alignItems: 'center',
+})(View);
+
+export default class AvatarForm extends PureComponent {
+  state = {
+    isUploadingFile: false,
+  };
+
+  componentWillUnmount() {
+    this.setState({ isUploadingFile: false });
+  }
+
+  handleUploadPhoto = async () => {
+    try {
+      await uploadPhoto({
+        onUpload: () => this.setState({ isUploadingFile: true }),
+      });
+      await this.props.refetch();
+      await this.setState({ isUploadingFile: false });
+    } catch (e) {
+      this.setState({ isUploadingFile: false });
+    }
+  };
+
+  render() {
+    const { isUploadingFile } = this.state;
+
+    return (
+      <Wrapper>
+        <RoundTouchable
+          disabled={this.props.disabled}
+          onPress={this.handleUploadPhoto}
+          size="medium"
+        >
+          <GetPhotoData>
+            {({ photo }) => (
+              <View>
+                <StyledAvatar
+                  source={photo}
+                  size="medium"
+                  isLoading={isUploadingFile}
+                />
+              </View>
+            )}
+          </GetPhotoData>
+        </RoundTouchable>
+        {this.props.text ? (
+          <H5>
+            <ButtonLink onPress={this.handleUploadPhoto}>
+              Change Photo
+            </ButtonLink>
+          </H5>
+        ) : null}
+      </Wrapper>
+    );
+  }
+}
+
+AvatarForm.propTypes = {
+  refetch: PropTypes.func.isRequired,
+  disabled: PropTypes.bool,
+  text: PropTypes.bool,
+};
diff --git a/apolloschurchapp/src/ui/UserAvatarView/UserAvatarView.stories.js b/apolloschurchapp/src/ui/UserAvatarView/UserAvatarView.stories.js
new file mode 100644
index 0000000..76cf42a
--- /dev/null
+++ b/apolloschurchapp/src/ui/UserAvatarView/UserAvatarView.stories.js
@@ -0,0 +1,23 @@
+import React from 'react';
+import { storiesOf } from '@storybook/react-native';
+
+import UserAvatarView from '.';
+
+storiesOf('UserAvatarView', module)
+  .add('example', () => (
+    <UserAvatarView
+      photo={'https://picsum.photos/400/400/?random'}
+      firstName={'Marty'}
+      lastName={'McFly'}
+      location={'Hill Valley'}
+    />
+  ))
+  .add('isLoading', () => (
+    <UserAvatarView
+      photo={'https://picsum.photos/400/400/?random'}
+      firstName={'Marty'}
+      lastName={'McFly'}
+      location={'Hill Valley'}
+      isLoading
+    />
+  ));
diff --git a/apolloschurchapp/src/ui/UserAvatarView/index.js b/apolloschurchapp/src/ui/UserAvatarView/index.js
new file mode 100644
index 0000000..4228878
--- /dev/null
+++ b/apolloschurchapp/src/ui/UserAvatarView/index.js
@@ -0,0 +1,74 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import { View } from 'react-native';
+
+import {
+  H3,
+  PaddedView,
+  ConnectedImage,
+  styled,
+  ChannelLabel,
+  withIsLoading,
+} from '@apollosproject/ui-kit';
+
+import AvatarForm from './AvatarForm';
+
+const Container = styled(({ theme }) => ({
+  backgroundColor: theme.colors.background.paper,
+  flexDirection: 'row',
+}))(View);
+
+const Content = styled(({ theme }) => ({
+  flex: 1,
+  justifyContent: 'center',
+  paddingVertical: theme.sizing.baseUnit * 0.5,
+}))(PaddedView);
+
+const UserAvatarView = withIsLoading(
+  ({
+    theme,
+    photo,
+    firstName,
+    lastName,
+    location,
+    isLoading,
+    refetch,
+    onPhotoPress,
+    setIsUploadingFile,
+    isUploadingFile,
+    disabled,
+    ...viewProps
+  }) => (
+    // todo: handle file select stuff
+    <Container {...viewProps}>
+      <AvatarForm
+        isLoading={isLoading}
+        text={false}
+        disabled={disabled}
+        photo={photo}
+        refetch={refetch}
+      />
+      <Content>
+        <H3>
+          {firstName} {lastName}
+        </H3>
+        <ChannelLabel icon="pin" label={location || ''} isLoading={isLoading} />
+      </Content>
+    </Container>
+  )
+);
+
+UserAvatarView.propTypes = {
+  photo: ConnectedImage.propTypes.source,
+  firstName: PropTypes.string,
+  lastName: PropTypes.string,
+  location: PropTypes.string,
+  isLoading: PropTypes.bool,
+  refetch: PropTypes.func,
+  onPhotoPress: PropTypes.func,
+  blurIntensity: PropTypes.number,
+  allowProfileImageChange: PropTypes.bool,
+  ...View.propTypes,
+};
+
+export default UserAvatarView;
diff --git a/apolloschurchapp/src/ui/UserAvatarView/uploadPhoto.js b/apolloschurchapp/src/ui/UserAvatarView/uploadPhoto.js
new file mode 100644
index 0000000..f56408b
--- /dev/null
+++ b/apolloschurchapp/src/ui/UserAvatarView/uploadPhoto.js
@@ -0,0 +1,80 @@
+import gql from 'graphql-tag';
+import ImagePicker from 'react-native-image-picker';
+import { client } from 'apolloschurchapp/src/client';
+import { ReactNativeFile } from 'apollo-upload-client';
+import getUserProfile from '../../tabs/connect/getUserProfile';
+
+const options = {
+  title: 'Select Profile Image',
+  quality: 0,
+  storageOptions: {
+    skipBackup: true,
+    path: 'images',
+  },
+};
+
+function showImagePicker() {
+  return new Promise((resolve, reject) => {
+    ImagePicker.showImagePicker(options, (response) => {
+      if (response.didCancel) {
+        reject(response.didCancel);
+      } else if (response.error) {
+        reject(response.error);
+      } else {
+        resolve(response);
+      }
+    });
+  });
+}
+
+export default async ({ onUpload = () => ({}) }) => {
+  try {
+    const image = await showImagePicker();
+    const file = new ReactNativeFile({
+      uri: image.uri,
+      name: image.fileName,
+      type: 'image/jpeg',
+    });
+    onUpload();
+    return client.mutate({
+      mutation: gql`
+        mutation uploadProfileImage($file: Upload!, $size: Int!) {
+          uploadProfileImage(file: $file, size: $size) {
+            id
+            firstName
+            lastName
+            photo {
+              uri
+            }
+          }
+        }
+      `,
+      variables: { file, size: image.fileSize },
+      update: (
+        cache,
+        {
+          data: {
+            uploadProfileImage: { photo },
+          },
+        }
+      ) => {
+        const data = cache.readQuery({ query: getUserProfile });
+
+        cache.writeQuery({
+          query: getUserProfile,
+          data: {
+            currentUser: {
+              ...data.currentUser,
+              profile: {
+                ...data.currentUser.profile,
+                photo,
+              },
+            },
+          },
+        });
+      },
+    });
+  } catch (e) {
+    return null;
+  }
+};
diff --git a/apolloschurchapp/src/ui/WebBrowser/Browser.android.js b/apolloschurchapp/src/ui/WebBrowser/Browser.android.js
new file mode 100644
index 0000000..49dc211
--- /dev/null
+++ b/apolloschurchapp/src/ui/WebBrowser/Browser.android.js
@@ -0,0 +1,15 @@
+import { Linking } from 'react-native';
+import { CustomTabs } from 'react-native-custom-tabs';
+
+const Browser = {
+  openURL: async (url, options = {}) => {
+    try {
+      await CustomTabs.openURL(url, options);
+    } catch (e) {
+      if (!Linking.canOpenURL()) throw new Error('URL not supported');
+      Linking.openURL(url);
+    }
+  },
+};
+
+export default Browser;
diff --git a/apolloschurchapp/src/ui/WebBrowser/Browser.ios.js b/apolloschurchapp/src/ui/WebBrowser/Browser.ios.js
new file mode 100644
index 0000000..7de160f
--- /dev/null
+++ b/apolloschurchapp/src/ui/WebBrowser/Browser.ios.js
@@ -0,0 +1,19 @@
+import { Linking } from 'react-native';
+import SafariView from 'react-native-safari-view';
+
+const Browser = {
+  openURL: async (url, options) => {
+    try {
+      await SafariView.isAvailable();
+      SafariView.show({
+        url,
+        ...options,
+      });
+    } catch (e) {
+      if (!Linking.canOpenURL()) throw new Error('URL not supported');
+      Linking.openURL(url);
+    }
+  },
+};
+
+export default Browser;
diff --git a/apolloschurchapp/src/ui/WebBrowser/index.js b/apolloschurchapp/src/ui/WebBrowser/index.js
new file mode 100644
index 0000000..bc93c02
--- /dev/null
+++ b/apolloschurchapp/src/ui/WebBrowser/index.js
@@ -0,0 +1,29 @@
+// Provider API for WebBrowser that injects theme values and defaults to the web browser:
+import { Platform } from 'react-native';
+import { createContext } from 'react';
+
+import { withTheme } from '@apollosproject/ui-kit';
+
+import Browser from './Browser';
+
+const { Provider: BaseProvider, Consumer } = createContext(Browser.openURL);
+
+const Provider = withTheme(({ theme }) => ({
+  value: (url, options = {}) =>
+    Browser.openURL(url, {
+      ...Platform.select({
+        ios: {
+          tintColor: theme.colors.primary,
+          barTintColor: theme.colors.background.paper,
+        },
+        android: {
+          toolbarColor: theme.colors.background.paper,
+          enableDefaultShare: true,
+        },
+      }),
+      ...options,
+    }),
+}))(BaseProvider);
+
+export default Browser;
+export { Provider as WebBrowserProvider, Consumer as WebBrowserConsumer };
diff --git a/apolloschurchapp/src/ui/WebBrowser/index.tests.js b/apolloschurchapp/src/ui/WebBrowser/index.tests.js
new file mode 100644
index 0000000..aa74598
--- /dev/null
+++ b/apolloschurchapp/src/ui/WebBrowser/index.tests.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+// TODO: how to include test for Android?
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import { WebBrowserConsumer } from '.';
+
+describe(`WebBrowser Provider and Consumer`, () => {
+  it('passes a function', async () => {
+    renderer.create(
+      <Providers>
+        <WebBrowserConsumer>
+          {(openUrl) => {
+            expect(typeof openUrl).toBe('function');
+          }}
+        </WebBrowserConsumer>
+      </Providers>
+    );
+  });
+});
diff --git a/apolloschurchapp/src/user-settings/ChangePassword.js b/apolloschurchapp/src/user-settings/ChangePassword.js
index 2623a2f..4b5bdf3 100644
--- a/apolloschurchapp/src/user-settings/ChangePassword.js
+++ b/apolloschurchapp/src/user-settings/ChangePassword.js
@@ -1,37 +1,22 @@
 import React, { PureComponent } from 'react';
 import PropTypes from 'prop-types';
-import {
-  Platform,
-  KeyboardAvoidingView,
-  StyleSheet,
-  StatusBar,
-} from 'react-native';
+import { SafeAreaView } from 'react-native';
 import { Mutation } from 'react-apollo';
-import { SafeAreaView, Header } from 'react-navigation';
 import { Formik } from 'formik';
 import * as Yup from 'yup';
 
+import { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';
 import {
   Button,
   ButtonLink,
   TextInput,
+  BackgroundView,
   PaddedView,
   FlexedView,
-  styled,
 } from '@apollosproject/ui-kit';
 
-import GET_AUTH_TOKEN from '../store/getAuthToken';
-import CHANGE_PASSWORD from './passwordChange';
-
-const Footer = styled({
-  flex: 1,
-  justifyContent: 'flex-end',
-})(SafeAreaView);
-
-const StyledKeyboardAvoidingView = styled(({ theme }) => ({
-  ...StyleSheet.absoluteFill,
-  backgroundColor: theme.colors.background.paper,
-}))(KeyboardAvoidingView);
+import getAuthToken from '../store/getAuthToken';
+import changePassword from './passwordChange';
 
 class ChangePassword extends PureComponent {
   static navigationOptions = ({ navigation }) => ({
@@ -42,12 +27,6 @@ class ChangePassword extends PureComponent {
         <ButtonLink onPress={() => navigation.goBack()}>Cancel</ButtonLink>
       </PaddedView>
     ),
-    headerStyle: {
-      backgroundColor: navigation.getParam('backgroundColor', []),
-    },
-    headerTitleStyle: {
-      color: navigation.getParam('headerTitleColor', []),
-    },
   });
 
   static propTypes = {
@@ -59,55 +38,52 @@ class ChangePassword extends PureComponent {
   };
 
   renderForm = (props) => (
-    <StyledKeyboardAvoidingView
-      behavior={'padding'}
-      keyboardVerticalOffset={
-        Header.HEIGHT +
-        (Platform.OS === 'android' ? StatusBar.currentHeight : 0)
-      }
-    >
-      <FlexedView>
-        <PaddedView>
-          <TextInput
-            label="New Password"
-            type="password"
-            value={props.values.password}
-            error={props.touched.password && props.errors.password}
-            onChangeText={(text) => props.setFieldValue('password', text)}
-          />
-          <TextInput
-            label="Confirm Password"
-            type="password"
-            value={props.values.confirmPassword}
-            error={
-              props.touched.confirmPassword && props.errors.confirmPassword
-            }
-            onChangeText={(text) =>
-              props.setFieldValue('confirmPassword', text)
-            }
-          />
-        </PaddedView>
-        <Footer>
+    <FlexedView>
+      <KeyboardAwareScrollView>
+        <BackgroundView>
           <PaddedView>
-            <Button
-              disabled={props.isSubmitting}
-              onPress={props.handleSubmit}
-              title="Save"
-              loading={props.isSubmitting}
+            <TextInput
+              label="New Password"
+              type="password"
+              value={props.values.password}
+              error={props.touched.password && props.errors.password}
+              onChangeText={(text) => props.setFieldValue('password', text)}
+            />
+            <TextInput
+              label="Confirm Password"
+              type="password"
+              value={props.values.confirmPassword}
+              error={
+                props.touched.confirmPassword && props.errors.confirmPassword
+              }
+              onChangeText={(text) =>
+                props.setFieldValue('confirmPassword', text)
+              }
             />
           </PaddedView>
-        </Footer>
-      </FlexedView>
-    </StyledKeyboardAvoidingView>
+        </BackgroundView>
+      </KeyboardAwareScrollView>
+
+      <SafeAreaView>
+        <PaddedView>
+          <Button
+            disabled={!props.isValid || props.isSubmitting}
+            onPress={props.handleSubmit}
+            title="Save"
+            loading={props.isSubmitting}
+          />
+        </PaddedView>
+      </SafeAreaView>
+    </FlexedView>
   );
 
   render() {
     return (
       <Mutation
-        mutation={CHANGE_PASSWORD}
+        mutation={changePassword}
         update={async (cache, { data: { token } }) => {
           await cache.writeQuery({
-            query: GET_AUTH_TOKEN,
+            query: getAuthToken,
             data: { authToken: token },
           });
 
diff --git a/apolloschurchapp/src/user-settings/ChangePassword.tests.js b/apolloschurchapp/src/user-settings/ChangePassword.tests.js
index 85ff133..3718845 100644
--- a/apolloschurchapp/src/user-settings/ChangePassword.tests.js
+++ b/apolloschurchapp/src/user-settings/ChangePassword.tests.js
@@ -2,7 +2,7 @@ import React from 'react';
 import renderer from 'react-test-renderer';
 import wait from 'waait';
 
-import Providers from '../Providers';
+import Providers from 'apolloschurchapp/src/Providers';
 
 import ChangePassword from './ChangePassword';
 
diff --git a/apolloschurchapp/src/user-settings/PersonDetails.tests.js b/apolloschurchapp/src/user-settings/PersonDetails.tests.js
index e1f814d..b55f57e 100644
--- a/apolloschurchapp/src/user-settings/PersonDetails.tests.js
+++ b/apolloschurchapp/src/user-settings/PersonDetails.tests.js
@@ -1,33 +1,26 @@
 import React from 'react';
-import { GET_USER_PROFILE } from '../tabs/connect/UserAvatarHeader';
+import renderer from 'react-test-renderer';
+import wait from 'waait';
 
-import Providers from '../Providers';
+import Providers from 'apolloschurchapp/src/Providers';
 
-import { renderWithApolloData } from '../utils/testUtils';
+import getUserProfile from '../tabs/connect/getUserProfile';
 import PersonalDetails from './PersonalDetails';
 
 describe('PersonalDetails component', () => {
   it('renders PersonalDetails when logged in', async () => {
     const mock = {
       request: {
-        query: GET_USER_PROFILE,
+        query: getUserProfile,
       },
       result: {
         data: {
           currentUser: {
-            __typename: 'AuthenticatedUser',
-            id: 'AuthenticatedUser:123',
             profile: {
-              __typename: 'Person',
-              id: 'Profile:123',
               firstName: 'Isaac',
               lastName: 'Hardy',
               nickName: 'Ike',
               email: 'isaac.hardy@newspring.cc',
-              birthDate: '2019-09-12T21:01:06.026Z',
-              gender: 'Male',
-              campus: null,
-              photo: null,
             },
           },
         },
@@ -38,12 +31,12 @@ describe('PersonalDetails component', () => {
       getParam: jest.fn(),
       goBack: jest.fn(),
     };
-    const tree = await renderWithApolloData(
+    const tree = renderer.create(
       <Providers mocks={[mock]}>
         <PersonalDetails navigation={navigation} />
       </Providers>
     );
-
+    await wait(0); // wait for response from graphql
     expect(tree).toMatchSnapshot();
   });
 });
diff --git a/apolloschurchapp/src/user-settings/PersonalDetails.js b/apolloschurchapp/src/user-settings/PersonalDetails.js
index 605efb9..71d7631 100644
--- a/apolloschurchapp/src/user-settings/PersonalDetails.js
+++ b/apolloschurchapp/src/user-settings/PersonalDetails.js
@@ -1,15 +1,10 @@
 import React, { PureComponent } from 'react';
 import PropTypes from 'prop-types';
-import {
-  KeyboardAvoidingView,
-  StyleSheet,
-  StatusBar,
-  Platform,
-} from 'react-native';
-import { SafeAreaView, Header } from 'react-navigation';
+import { SafeAreaView } from 'react-native';
 import { Query, Mutation } from 'react-apollo';
 import { Formik } from 'formik';
 import * as Yup from 'yup';
+import { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';
 
 import {
   TextInput,
@@ -17,21 +12,11 @@ import {
   FlexedView,
   Button,
   ButtonLink,
-  styled,
+  TableView,
 } from '@apollosproject/ui-kit';
 
-import { GET_USER_PROFILE } from '../tabs/connect/UserAvatarHeader';
-import UPDATE_CURRENT_USER from './updateCurrentUser';
-
-const Footer = styled({
-  flex: 1,
-  justifyContent: 'flex-end',
-})(SafeAreaView);
-
-const StyledKeyboardAvoidingView = styled(({ theme }) => ({
-  ...StyleSheet.absoluteFill,
-  backgroundColor: theme.colors.background.paper,
-}))(KeyboardAvoidingView);
+import getUserProfile from '../tabs/connect/getUserProfile';
+import updateCurrentUser from './updateCurrentUser';
 
 class PersonalDetails extends PureComponent {
   static navigationOptions = ({ navigation }) => ({
@@ -42,12 +27,6 @@ class PersonalDetails extends PureComponent {
         <ButtonLink onPress={() => navigation.goBack()}>Cancel</ButtonLink>
       </PaddedView>
     ),
-    headerStyle: {
-      backgroundColor: navigation.getParam('backgroundColor', []),
-    },
-    headerTitleStyle: {
-      color: navigation.getParam('headerTitleColor', []),
-    },
   });
 
   static propTypes = {
@@ -59,64 +38,63 @@ class PersonalDetails extends PureComponent {
   };
 
   renderForm = (props) => (
-    // have to add the offset to account for react-navigation header
-    <StyledKeyboardAvoidingView
-      behavior={'padding'}
-      keyboardVerticalOffset={
-        Header.HEIGHT +
-        (Platform.OS === 'android' ? StatusBar.currentHeight : 0)
-      }
-    >
-      <FlexedView>
-        <PaddedView>
-          <TextInput
-            label="First Name"
-            type="text"
-            value={props.values.firstName}
-            error={props.touched.firstName && props.errors.firstName}
-            onChangeText={(text) => props.setFieldValue('firstName', text)}
-          />
-          <TextInput
-            label="Last Name"
-            type="text"
-            value={props.values.lastName}
-            error={props.touched.lastName && props.errors.lastName}
-            onChangeText={(text) => props.setFieldValue('lastName', text)}
-          />
-          <TextInput
-            label="Email"
-            type="email"
-            value={props.values.email}
-            error={props.touched.email && props.errors.email}
-            onChangeText={(text) => props.setFieldValue('email', text)}
-          />
-        </PaddedView>
-        <Footer>
+    <FlexedView>
+      <KeyboardAwareScrollView>
+        <TableView>
           <PaddedView>
-            <Button
-              disabled={!props.isValid || props.isSubmitting}
-              onPress={props.handleSubmit}
-              title="Save"
-              loading={props.isSubmitting}
+            <TextInput
+              label="First Name"
+              type="text"
+              value={props.values.firstName}
+              error={props.touched.firstName && props.errors.firstName}
+              onChangeText={(text) => props.setFieldValue('firstName', text)}
+            />
+            <TextInput
+              label="Last Name"
+              type="text"
+              value={props.values.lastName}
+              error={props.touched.lastName && props.errors.lastName}
+              onChangeText={(text) => props.setFieldValue('lastName', text)}
+            />
+          </PaddedView>
+        </TableView>
+        <TableView>
+          <PaddedView>
+            <TextInput
+              label="Email"
+              type="email"
+              value={props.values.email}
+              error={props.touched.email && props.errors.email}
+              onChangeText={(text) => props.setFieldValue('email', text)}
             />
           </PaddedView>
-        </Footer>
-      </FlexedView>
-    </StyledKeyboardAvoidingView>
+        </TableView>
+      </KeyboardAwareScrollView>
+      <SafeAreaView>
+        <PaddedView>
+          <Button
+            disabled={!props.isValid || props.isSubmitting}
+            onPress={props.handleSubmit}
+            title="Save"
+            loading={props.isSubmitting}
+          />
+        </PaddedView>
+      </SafeAreaView>
+    </FlexedView>
   );
 
   render() {
     return (
-      <Query query={GET_USER_PROFILE} fetchPolicy="cache-and-network">
+      <Query query={getUserProfile} fetchPolicy="cache-and-network">
         {({ data: { currentUser = { profile: {} } } = {} }) => {
           const { firstName, lastName, email } = currentUser.profile;
 
           return (
             <Mutation
-              mutation={UPDATE_CURRENT_USER}
+              mutation={updateCurrentUser}
               update={async (cache, { data: { updateProfileFields } }) => {
                 await cache.writeQuery({
-                  query: GET_USER_PROFILE,
+                  query: getUserProfile,
                   data: {
                     currentUser: {
                       ...currentUser,
diff --git a/apolloschurchapp/src/user-settings/UserSettings.tests.js b/apolloschurchapp/src/user-settings/UserSettings.tests.js
index d57af4f..5cb5377 100644
--- a/apolloschurchapp/src/user-settings/UserSettings.tests.js
+++ b/apolloschurchapp/src/user-settings/UserSettings.tests.js
@@ -2,16 +2,16 @@ import React from 'react';
 import renderer from 'react-test-renderer';
 import wait from 'waait';
 
-import { GET_LOGIN_STATE } from '@apollosproject/ui-auth';
-import Providers from '../Providers';
+import Providers from 'apolloschurchapp/src/Providers';
 
+import getLoginState from '../tabs/connect/getLoginState';
 import UserSettings from '.';
 
 describe('UserSettings component', () => {
   it('renders UserSettings when logged in', async () => {
     const mock = {
       request: {
-        query: GET_LOGIN_STATE,
+        query: getLoginState,
       },
       result: {
         data: { isLoggedIn: true },
diff --git a/apolloschurchapp/src/user-settings/index.js b/apolloschurchapp/src/user-settings/index.js
index 38ab901..6d26048 100644
--- a/apolloschurchapp/src/user-settings/index.js
+++ b/apolloschurchapp/src/user-settings/index.js
@@ -1,31 +1,38 @@
 import React, { PureComponent } from 'react';
-import { ScrollView } from 'react-native';
+
 import PropTypes from 'prop-types';
 import { Query, Mutation } from 'react-apollo';
-import { getVersion, getBuildNumber } from 'react-native-device-info';
 
 import {
   BackgroundView,
+  PaddedView,
   TableView,
   Cell,
   CellIcon,
   CellText,
   Divider,
   Touchable,
+  styled,
   ActivityIndicator,
-  NavigationService,
 } from '@apollosproject/ui-kit';
+import { WebBrowserConsumer } from 'apolloschurchapp/src/ui/WebBrowser';
+import AvatarForm from 'apolloschurchapp/src/ui/UserAvatarView/AvatarForm';
 
-import { GET_LOGIN_STATE, LOGOUT } from '@apollosproject/ui-auth';
-import {
-  RockAuthedWebBrowser,
-  UserAvatarUpdate,
-} from '@apollosproject/ui-connected';
+import getLoginState from '../auth/getLoginState';
+import logout from '../auth/logout';
+
+const AvatarView = styled({
+  alignItems: 'center',
+  justifyContent: 'center',
+})(PaddedView);
+
+const BackgroundContainer = styled(({ theme }) => ({
+  paddingTop: theme.sizing.baseUnit * 1.75,
+}))(BackgroundView);
 
 class UserSettings extends PureComponent {
-  static navigationOptions = (props) => ({
+  static navigationOptions = () => ({
     title: 'Settings',
-    headerStyle: { backgroundColor: props.screenProps.headerBackgroundColor },
   });
 
   static propTypes = {
@@ -33,149 +40,108 @@ class UserSettings extends PureComponent {
       getParam: PropTypes.func,
       navigate: PropTypes.func,
     }),
-    screenProps: PropTypes.shape({
-      headerBackgroundColor: PropTypes.string,
-      headerTitleStyle: PropTypes.shape({
-        color: PropTypes.string,
-      }),
-    }),
   };
 
   render() {
     return (
-      <Query query={GET_LOGIN_STATE} fetchPolicy="cache-and-network">
+      <Query query={getLoginState} fetchPolicy="cache-and-network">
         {({ data: { isLoggedIn = false, loading } }) => {
           if (loading) return <ActivityIndicator />;
           if (!isLoggedIn) return null;
           return (
-            <BackgroundView>
-              <ScrollView>
-                <UserAvatarUpdate />
-
-                <RockAuthedWebBrowser>
-                  {(openUrl) => (
-                    <>
-                      <TableView>
-                        <Touchable
-                          onPress={async () => {
-                            await this.props.navigation.navigate(
-                              'PersonalDetails',
-                              {
-                                backgroundColor: this.props.screenProps
-                                  .headerBackgroundColor,
-                                headerTitleColor: this.props.screenProps
-                                  .headerTitleStyle.color,
-                              }
-                            );
-                          }}
-                        >
-                          <Cell>
-                            <CellText>Personal Details</CellText>
-                            <CellIcon name="arrow-next" />
-                          </Cell>
-                        </Touchable>
-                        <Divider />
-                        <Touchable
-                          onPress={async () => {
-                            await this.props.navigation.navigate('Location', {
-                              backgroundColor: this.props.screenProps
-                                .headerBackgroundColor,
-                              headerTitleColor: this.props.screenProps
-                                .headerTitleStyle.color,
-                            });
-                          }}
-                        >
-                          <Cell>
-                            <CellText>Location</CellText>
-                            <CellIcon name="arrow-next" />
-                          </Cell>
-                        </Touchable>
-                        <Divider />
-                        <Touchable
-                          onPress={async () => {
-                            await this.props.navigation.navigate(
-                              'ChangePassword',
-                              {
-                                backgroundColor: this.props.screenProps
-                                  .headerBackgroundColor,
-                                headerTitleColor: this.props.screenProps
-                                  .headerTitleStyle.color,
-                              }
-                            );
-                          }}
-                        >
-                          <Cell>
-                            <CellText>Change Password</CellText>
-                            <CellIcon name="arrow-next" />
-                          </Cell>
-                        </Touchable>
-                      </TableView>
-                      <TableView>
-                        <Touchable
-                          onPress={() =>
-                            openUrl('https://apollosrock.newspring.cc/')
-                          }
-                        >
-                          <Cell>
-                            <CellText>Give Feedback</CellText>
-                            <CellIcon name="arrow-next" />
-                          </Cell>
-                        </Touchable>
-                      </TableView>
-                      <TableView>
-                        <Touchable
-                          onPress={() =>
-                            openUrl('https://apollosrock.newspring.cc/')
-                          }
-                        >
-                          <Cell>
-                            <CellText>Privacy Policy</CellText>
-                            <CellIcon name="arrow-next" />
-                          </Cell>
-                        </Touchable>
-                        <Divider />
-                        <Touchable
-                          onPress={() =>
-                            openUrl('https://apollosrock.newspring.cc/')
-                          }
-                        >
-                          <Cell>
-                            <CellText>Terms of Use</CellText>
-                            <CellIcon name="arrow-next" />
-                          </Cell>
-                        </Touchable>
-                      </TableView>
-                      <TableView>
-                        <Mutation mutation={LOGOUT}>
-                          {(handleLogout) => (
-                            <Touchable
-                              onPress={async () => {
-                                await handleLogout();
-                                // This resets the navigation stack, and the navigates to the first auth screen.
-                                // This ensures that user isn't navigated to a subscreen of Auth, like the pin entry screen.
-                                await NavigationService.resetToAuth();
-                              }}
-                            >
-                              <Cell>
-                                <CellText>Logout</CellText>
-                                <CellIcon name="arrow-next" />
-                              </Cell>
-                            </Touchable>
-                          )}
-                        </Mutation>
-                      </TableView>
-                      <TableView>
+            <BackgroundContainer>
+              <AvatarView>
+                <AvatarForm
+                  text
+                  refetch={this.props.navigation.getParam('refetch', {})}
+                />
+              </AvatarView>
+              <WebBrowserConsumer>
+                {(openUrl) => (
+                  <BackgroundView>
+                    <TableView>
+                      <Touchable
+                        onPress={async () => {
+                          await this.props.navigation.navigate(
+                            'PersonalDetails'
+                          );
+                        }}
+                      >
+                        <Cell>
+                          <CellText>Personal Details</CellText>
+                          <CellIcon name="arrow-next" />
+                        </Cell>
+                      </Touchable>
+                      <Divider />
+                      <Touchable
+                        onPress={async () => {
+                          await this.props.navigation.navigate(
+                            'ChangePassword'
+                          );
+                        }}
+                      >
+                        <Cell>
+                          <CellText>Change Password</CellText>
+                          <CellIcon name="arrow-next" />
+                        </Cell>
+                      </Touchable>
+                    </TableView>
+                    <TableView>
+                      <Touchable
+                        onPress={() =>
+                          openUrl('https://apollosrock.newspring.cc/')
+                        }
+                      >
+                        <Cell>
+                          <CellText>Give Feedback</CellText>
+                          <CellIcon name="arrow-next" />
+                        </Cell>
+                      </Touchable>
+                    </TableView>
+                    <TableView>
+                      <Touchable
+                        onPress={() =>
+                          openUrl('https://apollosrock.newspring.cc/')
+                        }
+                      >
+                        <Cell>
+                          <CellText>Privacy Policy</CellText>
+                          <CellIcon name="arrow-next" />
+                        </Cell>
+                      </Touchable>
+                      <Divider />
+                      <Touchable
+                        onPress={() =>
+                          openUrl('https://apollosrock.newspring.cc/')
+                        }
+                      >
                         <Cell>
-                          <CellText>
-                            {`App Version: ${getVersion()}.${getBuildNumber()}`}
-                          </CellText>
+                          <CellText>Terms of Use</CellText>
+                          <CellIcon name="arrow-next" />
                         </Cell>
-                      </TableView>
-                    </>
-                  )}
-                </RockAuthedWebBrowser>
-              </ScrollView>
-            </BackgroundView>
+                      </Touchable>
+                    </TableView>
+                    <TableView>
+                      <Mutation mutation={logout}>
+                        {(handleLogout) => (
+                          <Touchable
+                            onPress={async () => {
+                              await handleLogout();
+                              await this.props.navigation.navigate('Connect');
+                            }}
+                          >
+                            <Cell>
+                              <CellText>Logout</CellText>
+                              <CellIcon name="arrow-next" />
+                            </Cell>
+                          </Touchable>
+                        )}
+                      </Mutation>
+                    </TableView>
+                  </BackgroundView>
+                )}
+              </WebBrowserConsumer>
+            </BackgroundContainer>
           );
         }}
       </Query>
diff --git a/apolloschurchapp/src/user-web-browser/Provider.js b/apolloschurchapp/src/user-web-browser/Provider.js
deleted file mode 100644
index 91280a7..0000000
--- a/apolloschurchapp/src/user-web-browser/Provider.js
+++ /dev/null
@@ -1,12 +0,0 @@
-import { createContext } from 'react';
-import { NavigationService } from '@apollosproject/ui-kit';
-
-// Can can either call the OpenUserWebView function directly, or call it using
-// the Consumer. Your choice.
-export const OpenUserWebView = ({ url }) =>
-  NavigationService.navigate('UserWebBrowser', { url });
-
-const { Provider, Consumer } = createContext(OpenUserWebView);
-
-export { Provider as UserWebBrowserProvider };
-export { Consumer as UserWebBrowserConsumer };
diff --git a/apolloschurchapp/src/user-web-browser/__tests__/BrowserWithUserCookie.tests.js b/apolloschurchapp/src/user-web-browser/__tests__/BrowserWithUserCookie.tests.js
deleted file mode 100644
index 1c32e08..0000000
--- a/apolloschurchapp/src/user-web-browser/__tests__/BrowserWithUserCookie.tests.js
+++ /dev/null
@@ -1,50 +0,0 @@
-import React from 'react';
-import { NavigationService } from '@apollosproject/ui-kit';
-import { renderWithApolloData } from '../../utils/testUtils';
-import Providers from '../../Providers';
-import BrowserWithUserCookie, { WITH_USER_COOKIE } from '../index';
-import { OpenUserWebView } from '../Provider';
-
-const mocks = [
-  {
-    request: { query: WITH_USER_COOKIE },
-    result: {
-      data: {
-        __typename: 'AuthenticatedUser',
-        currentUser: {
-          __typename: 'Person',
-          id: 'Person:123',
-          rockToken: 'ABC',
-        },
-      },
-    },
-  },
-];
-const navigation = { navigate: jest.fn(), getParam: jest.fn() };
-
-describe('the BrowserWithUserCookie component', () => {
-  it('renders with a user', async () => {
-    const tree = await renderWithApolloData(
-      <Providers mocks={mocks}>
-        <BrowserWithUserCookie navigation={navigation} />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('renders with modal false', async () => {
-    const tree = await renderWithApolloData(
-      <Providers mocks={mocks}>
-        <BrowserWithUserCookie modal={false} navigation={navigation} />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
-describe('the OpenUserWebView', () => {
-  it('navigtes', () => {
-    OpenUserWebView({ url: 'fake.com' });
-    expect(NavigationService.navigate).toBeCalledWith('UserWebBrowser', {
-      url: 'fake.com',
-    });
-  });
-});
diff --git a/apolloschurchapp/src/user-web-browser/index.js b/apolloschurchapp/src/user-web-browser/index.js
deleted file mode 100644
index 5a41635..0000000
--- a/apolloschurchapp/src/user-web-browser/index.js
+++ /dev/null
@@ -1,66 +0,0 @@
-// Provider API for WebBrowser that injects theme values and defaults to the web browser:
-// import { Platform } from 'react-native';
-import React from 'react';
-import gql from 'graphql-tag';
-import { Query } from 'react-apollo';
-import { ModalView } from '@apollosproject/ui-kit';
-import { WebView } from 'react-native-webview';
-import PropTypes from 'prop-types';
-import { get } from 'lodash';
-
-const Browser = ({ url, cookie, modal, navigation }) => {
-  if (modal) {
-    return (
-      <ModalView navigation={navigation}>
-        <WebView source={{ uri: url, headers: { Cookie: cookie } }} />
-      </ModalView>
-    );
-  }
-  return <WebView source={{ uri: url, headers: { Cookie: cookie } }} />;
-};
-
-Browser.propTypes = {
-  url: PropTypes.string.isRequired,
-  cookie: PropTypes.string,
-  modal: PropTypes.bool.isRequired,
-};
-
-export const WITH_USER_COOKIE = gql`
-  query currentUserCookie {
-    currentUser {
-      id
-      rockToken
-    }
-  }
-`;
-
-const BrowserWithUserCookie = ({ url, navigation, modal = true }) => {
-  // get the url from the navigation param or default to the url prop;
-  const uri = navigation.getParam('url', url);
-  return (
-    <Query query={WITH_USER_COOKIE}>
-      {({ data, loading }) => {
-        if (loading) {
-          return null;
-        }
-        const cookie = get(data, 'currentUser.rockToken', '');
-        return (
-          <Browser
-            cookie={cookie}
-            url={uri}
-            modal={modal}
-            navigation={navigation}
-          />
-        );
-      }}
-    </Query>
-  );
-};
-
-BrowserWithUserCookie.propTypes = {
-  url: PropTypes.string,
-  modal: PropTypes.bool,
-};
-
-export default BrowserWithUserCookie;
-export { UserWebBrowserProvider, UserWebBrowserConsumer } from './Provider';
diff --git a/apolloschurchapp/src/utils/__tests__/utils.tests.js b/apolloschurchapp/src/utils/__tests__/utils.tests.js
deleted file mode 100644
index 0ea7b89..0000000
--- a/apolloschurchapp/src/utils/__tests__/utils.tests.js
+++ /dev/null
@@ -1,70 +0,0 @@
-import React from 'react';
-import { Text } from 'react-native';
-
-import { fetchMoreResolver } from '@apollosproject/ui-connected';
-
-import { renderWithApolloData } from '../testUtils';
-
-describe('the fetchMoreResolver function', () => {
-  const args = {
-    collectionName: 'userFeed',
-    variables: { first: 10, after: null },
-    fetchMore: jest.fn(),
-    data: {
-      userFeed: {
-        edges: [
-          {
-            node: { id: 'foo' },
-          },
-          {
-            node: { id: 'bar' },
-          },
-        ],
-        pageInfo: { endCursor: 'abc123' },
-      },
-    },
-  };
-  test('no endCursor', () => {
-    expect(
-      fetchMoreResolver({
-        ...args,
-        data: { userFeed: { edges: [], pageInfo: {} } },
-      })()
-    ).toBeUndefined();
-  });
-  test('combines data', () => {
-    fetchMoreResolver({ ...args })();
-    const previousResult = args.data;
-    const fetchMoreResult = {
-      userFeed: {
-        edges: [{ node: { id: 'baz' } }],
-        pageInfo: { endCursor: 'def456' },
-      },
-    };
-    expect(
-      args.fetchMore.mock.calls[0][0].updateQuery(previousResult, {
-        fetchMoreResult,
-      })
-    ).toEqual({
-      userFeed: {
-        edges: [
-          {
-            node: { id: 'foo' },
-          },
-          {
-            node: { id: 'bar' },
-          },
-          {
-            node: { id: 'baz' },
-          },
-        ],
-        pageInfo: { endCursor: 'def456' },
-      },
-    });
-  });
-});
-
-test('renderWithApolloData renders the component', async () => {
-  const tree = await renderWithApolloData(<Text>hello, world!</Text>);
-  expect(tree).toMatchSnapshot();
-});
diff --git a/apolloschurchapp/src/utils/content/share.js b/apolloschurchapp/src/utils/content/share.js
new file mode 100644
index 0000000..e04063d
--- /dev/null
+++ b/apolloschurchapp/src/utils/content/share.js
@@ -0,0 +1,19 @@
+import { Platform, Share } from 'react-native';
+// import { get } from 'lodash';
+import { track, events } from 'apolloschurchapp/src/analytics';
+// import getSiteLink from './getSiteLink';
+
+const share = ({ title, url, id = '' }) => {
+  Share.share({
+    title,
+    message: Platform.OS === 'android' ? `${title}\n${url}` : title,
+    url,
+  });
+
+  track({
+    eventName: events.ShareContent,
+    properties: { title, id },
+  });
+};
+
+export default share;
diff --git a/apolloschurchapp/src/utils/testUtils.js b/apolloschurchapp/src/utils/testUtils.js
deleted file mode 100644
index 38d20f7..0000000
--- a/apolloschurchapp/src/utils/testUtils.js
+++ /dev/null
@@ -1,10 +0,0 @@
-/* eslint-disable import/prefer-default-export */
-import renderer from 'react-test-renderer';
-import wait from 'waait';
-
-export const renderWithApolloData = async (component) => {
-  const tree = renderer.create(component);
-  await wait(1);
-  tree.update(component);
-  return tree;
-};
diff --git a/apolloschurchapp/storybook/Welcome/Intro.js b/apolloschurchapp/storybook/Welcome/Intro.js
deleted file mode 100644
index 2e8b8d7..0000000
--- a/apolloschurchapp/storybook/Welcome/Intro.js
+++ /dev/null
@@ -1,43 +0,0 @@
-import React from 'react';
-import { Paragraph, BodyText } from '@apollosproject/ui-kit';
-
-import { Slide, SlideContent } from '@apollosproject/ui-onboarding';
-
-const Intro = () => (
-  <Slide>
-    <SlideContent title={`Welcome to ${'\n'}Apollos Storybook!`} icon>
-      <Paragraph>
-        <BodyText>
-          Storybook is the component workshop for the Apollos app platform.
-        </BodyText>
-      </Paragraph>
-      <Paragraph>
-        <BodyText>
-          A story is a single state of one or more UI components. You can have
-          as many stories as you want.
-        </BodyText>
-      </Paragraph>
-      <Paragraph>
-        <BodyText>
-          We use Storybook to help document UI and to serve as visual test cases
-          for different states.
-        </BodyText>
-      </Paragraph>
-      <Paragraph>
-        <BodyText>
-          Open the navigator using the navigation bar at the bottom of the
-          screen to navigate the available stories.
-        </BodyText>
-      </Paragraph>
-      <Paragraph>
-        <BodyText>
-          The stories defined inside of your app will be listed first, with
-          Apollos UI stories below them. If you setup a theme, all of the
-          stories will reflect your theme.
-        </BodyText>
-      </Paragraph>
-    </SlideContent>
-  </Slide>
-);
-
-export default Intro;
diff --git a/apolloschurchapp/storybook/Welcome/Welcome.stories.js b/apolloschurchapp/storybook/Welcome/Welcome.stories.js
new file mode 100644
index 0000000..f1c9a65
--- /dev/null
+++ b/apolloschurchapp/storybook/Welcome/Welcome.stories.js
@@ -0,0 +1,9 @@
+import React from 'react';
+import { storiesOf } from '@storybook/react-native';
+import { linkTo } from '@storybook/addon-links';
+
+import Welcome from '.';
+
+storiesOf('Welcome', module).add('to Storybook', () => (
+  <Welcome showApp={linkTo('Button')} />
+));
diff --git a/apolloschurchapp/storybook/Welcome/index.js b/apolloschurchapp/storybook/Welcome/index.js
index 6c1e852..78f7086 100644
--- a/apolloschurchapp/storybook/Welcome/index.js
+++ b/apolloschurchapp/storybook/Welcome/index.js
@@ -1,9 +1,57 @@
 import React from 'react';
-import { storiesOf } from '@apollosproject/ui-storybook';
+import PropTypes from 'prop-types';
+import { View, Text } from 'react-native';
 
-import App from '../../src';
-import Intro from './Intro';
+export default class Welcome extends React.Component {
+  styles = {
+    wrapper: {
+      flex: 1,
+      padding: 24,
+      justifyContent: 'center',
+    },
+    header: {
+      fontSize: 18,
+      marginBottom: 18,
+    },
+    content: {
+      fontSize: 12,
+      marginBottom: 10,
+      lineHeight: 18,
+    },
+  };
 
-storiesOf('Storybook', module)
-  .add('Welcome', () => <Intro />)
-  .add('App', () => <App />);
+  showApp(event) {
+    event.preventDefault();
+    if (this.props.showApp) this.props.showApp();
+  }
+
+  render() {
+    return (
+      <View style={this.styles.wrapper}>
+        <Text style={this.styles.header}>
+          Welcome to React Native Storybook
+        </Text>
+        <Text style={this.styles.content}>
+          This is a UI Component development environment for your React Native
+          app. Here you can display and interact with your UI components as
+          stories. A story is a single state of one or more UI components. You
+          can have as many stories as you want. In other words a story is like a
+          visual test case.
+        </Text>
+        <Text style={this.styles.content}>
+          We have added some stories inside the &quot;storybook/stories&quot;
+          directory for examples. Try editing the
+          &quot;storybook/stories/Welcome.js&quot; file to edit this message.
+        </Text>
+      </View>
+    );
+  }
+}
+
+Welcome.defaultProps = {
+  showApp: null,
+};
+
+Welcome.propTypes = {
+  showApp: PropTypes.func,
+};
diff --git a/apolloschurchapp/storybook/addons.js b/apolloschurchapp/storybook/addons.js
new file mode 100644
index 0000000..6aed412
--- /dev/null
+++ b/apolloschurchapp/storybook/addons.js
@@ -0,0 +1,2 @@
+import '@storybook/addon-actions/register';
+import '@storybook/addon-links/register';
diff --git a/apolloschurchapp/storybook/index.android.js b/apolloschurchapp/storybook/index.android.js
new file mode 100644
index 0000000..f0513c5
--- /dev/null
+++ b/apolloschurchapp/storybook/index.android.js
@@ -0,0 +1,3 @@
+import StorybookUI from './storybook';
+
+export default StorybookUI;
diff --git a/apolloschurchapp/storybook/index.ios.js b/apolloschurchapp/storybook/index.ios.js
new file mode 100644
index 0000000..f0513c5
--- /dev/null
+++ b/apolloschurchapp/storybook/index.ios.js
@@ -0,0 +1,3 @@
+import StorybookUI from './storybook';
+
+export default StorybookUI;
diff --git a/apolloschurchapp/storybook/index.js b/apolloschurchapp/storybook/index.js
index ba240dd..f0513c5 100644
--- a/apolloschurchapp/storybook/index.js
+++ b/apolloschurchapp/storybook/index.js
@@ -1,21 +1,3 @@
-import StorybookUI, {
-  loadApollosStories,
-  addApollosProviderDecorator,
-  configure,
-} from '@apollosproject/ui-storybook';
-import RNBootSplash from 'react-native-bootsplash';
-import Providers from '../src/Providers';
-
-import { loadStories } from './storyLoader';
-
-addApollosProviderDecorator(Providers);
-
-configure(() => {
-  require('./Welcome');
-  loadStories();
-  loadApollosStories();
-
-  RNBootSplash.hide({ duration: 250 });
-}, module);
+import StorybookUI from './storybook';
 
 export default StorybookUI;
diff --git a/apolloschurchapp/storybook/storybook.js b/apolloschurchapp/storybook/storybook.js
new file mode 100644
index 0000000..19be073
--- /dev/null
+++ b/apolloschurchapp/storybook/storybook.js
@@ -0,0 +1,35 @@
+import React, { Component } from 'react';
+import { AppRegistry } from 'react-native';
+import {
+  getStorybookUI,
+  configure,
+  addDecorator,
+} from '@storybook/react-native';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+// storyLoader.js is generated on storybook start. next line disabled for CI test.
+import { loadStories } from './storyLoader'; // eslint-disable-line
+
+addDecorator((renderStorybook) => <Providers>{renderStorybook()}</Providers>);
+
+// import stories
+configure(() => {
+  loadStories();
+}, module);
+
+// This assumes that storybook is running on the same host as your RN packager,
+// to set manually use, e.g. host: 'localhost' option
+const StorybookUIRoot = getStorybookUI({ port: 7007, onDeviceUI: true });
+
+// react-native hot module loader must take in a Class - https://github.com/facebook/react-native/issues/10991
+// https://github.com/storybooks/storybook/issues/2081
+// eslint-disable-next-line react/prefer-stateless-function
+class StorybookUIHMRRoot extends Component {
+  render() {
+    return <StorybookUIRoot />;
+  }
+}
+
+AppRegistry.registerComponent('apolloschurchapp', () => StorybookUIHMRRoot);
+export default StorybookUIHMRRoot;
