diff --git a/apolloschurchapp/.env.production b/apolloschurchapp/.env.production
deleted file mode 100644
index b3e62a5f..00000000
--- a/apolloschurchapp/.env.production
+++ /dev/null
@@ -1,5 +0,0 @@
-APP_DATA_URL=https://apollos-church-api.herokuapp.com/
-ONE_SIGNAL_KEY=$ONE_SIGNAL_KEY
-GOOGLE_MAPS_API_KEY=$GOOGLE_MAPS_API_KEY
-STORYBOOK=$STORYBOOK
-SCHEMA_VERSION=$SCHEMA_VERSION
diff --git a/apolloschurchapp/.env.shared.enc b/apolloschurchapp/.env.shared.enc
index 70433a614fb9b190c1ecff496f8d672ca87521ec..96c36f9c525a5de3589b79678a0f77b69d42e7fd 100644
GIT binary patch
literal 880
zcmV-$1CRVuVQh3|WM5xU6sf6H-B9vL#T~x$tZk%IB35iLI^>LmVYRT6aqyVavD`V{
zPc_DrzRXODm79dnBJZ9vWM|67Nl3dGHyeJu)L9vIJP*d)i6^kNPUg7!s9|g1w{}3t
zl4~FZBC5QFB;m`2lD-Cgr;8u}8elsu261IuCk3*rqYX5%;4KuS0Pxla=8kWp>ykQ(
zK;{|-wmYav62sakkw;CFLz*R(Yd0<koOK<&m-=27fTjwVFOZ6WvfOkmcGBJ2T&47H
z78yxd*Qir28c<YS9n2S+zYnn>q67DSUQB3Kd7S|GcR~5TgqnmGj8*jA<SfkAGW79H
zc(5h)^H`|FE@2IVXfg<bO6$)6eU+Tm#sYP^c?O7j6|*L=hV-s10jW1YHQ2V02sS^G
z?(URc(cl<leVyOLDGF+f8}AxM$DqyoQ(_hwcx>WDlce@eTH1L!OZj$rFcic1ViMSq
zcQU_&5DD&4jWCxv%>TIY$e1FqUV^<e0y7Es{&_QNBfhw<5w<-A^wGuNXk~<s-Tx4N
zBs>YD3W6_;d!rTqNt^`t0n>uHZ*yDt@luocWD{mVbF@aNMa$ygH!(0sG}U5d+1uLq
zwle%rnO8~n2e~+3k6VR_fVIP~(_X34v!sp$t~aQLrzFT!PfU6AW*P#EEbggriaBob
zV!#1{_=BOP=P*~3^yn(N95!CZPOPUuEB0N(6fGGPJ_X}HTEMg?(rdsPtpMK)rAz;z
zi$bZ#IEG=Sn7_cJiVT>9Ad*B|!i0}^Mh$77xIec(NzF}w#f~yYj&W9Z22t~SGW&s@
zE|zi-P+K5h3#Xdc#Jk9@yhU1!qQfzpEuB3q4p&vEppk}@<nVW>ODgbHK$>DaUXHwN
zw8lf%Z087IlNn8|l3^p#%-ZQns>XLIn9EV=-_65mQSR0Ko`Wtl;zvl!xI|W#$Lw4j
zxQYgWUjW2776DNa3$+bRM%U(>0_^y{1<^A@_31D{8D2XXxf*dBLkMEe7+Ky2z5jjA
zwm)kCB}ucXFbDd=iJ#zz9Pi2`(a0l2PX-^luOU*VaPbE;jvirn#wSApQZ_frQb1&N
zm`Qka;NZSH7&G^U_){w_61b_FA2!Ojp0^*p4C(FSFjWG|L9h}94S0%oU~5jlL|1sB
GuRtx4c&6Y0

literal 368
zcmV-$0gwJuVQh3|WM5zKk+hJ)^3abTVpsiDM%$jM0e!1RM0WsC^b8a-%JV<NnHxj}
zY{>nCD%^Q2)C7`fZ_aUA#Eu14t?wcXlOA>5<?S(lBz;e(NHex2zuj`cWE9+t^?|$v
z@V(`h=U0E#zwv{z5eXmo`3llL(moGzuWKSrcGQ1xjpX2xK3Kb>W$MterNaw7Oz6@q
z&z@|TZC?LoxV16c({74<-vc8^^##Oq=rm6|=l03mSAKUz#KJaS;NV#%ig=6-Kbt>7
z9U=BYQ>me8#;qw%A;lJ%5l1nkp<{*OETrVbAuUBh$FW;!Cu#TJL*EdI9<8`SjQUt5
zdZyG4Dxd?JtZ!RO(TjFmO0B1x*UlqnqF@O)9G+}<1-I+8^8OVu+vP*O%qB(&g)c_S
zWMeU&{3&6%3Yy6nkmg2WtdXSiNde{Dh>hqsdmv|lW)^@&*J-?&SoDC}!5ah4i1@YO
OpX+d79h}P>8vGdGDYzd1

diff --git a/apolloschurchapp/.gitignore b/apolloschurchapp/.gitignore
index 1d221808..caf99aad 100644
--- a/apolloschurchapp/.gitignore
+++ b/apolloschurchapp/.gitignore
@@ -147,7 +147,10 @@ DerivedData
 fastlane/report.xml
 
 # symbols
-apolloschurchapp.app.dSYM.zip
+*.app.dSYM.zip
+
+# iOS keys
+*.p8
 
 # Google Play authentication key
 key.json
@@ -155,3 +158,6 @@ key.json
 
 # shared secrets
 .env.shared
+
+# GraphQL info
+fragmentTypes.json
diff --git a/apolloschurchapp/Gemfile b/apolloschurchapp/Gemfile
index 9947ac13..0eeccaa5 100644
--- a/apolloschurchapp/Gemfile
+++ b/apolloschurchapp/Gemfile
@@ -1,3 +1,4 @@
 source 'https://rubygems.org'
-gem 'cocoapods', '1.8.4'
-gem 'fastlane', '2.160.0'
+gem 'cocoapods', '1.10.1'
+gem 'fastlane', '2.179.0'
+gem 'xcodeproj'
diff --git a/apolloschurchapp/Gemfile.lock b/apolloschurchapp/Gemfile.lock
index bc2021d7..92818e11 100644
--- a/apolloschurchapp/Gemfile.lock
+++ b/apolloschurchapp/Gemfile.lock
@@ -1,45 +1,45 @@
 GEM
   remote: https://rubygems.org/
   specs:
-    CFPropertyList (3.0.2)
-    activesupport (4.2.11.3)
-      i18n (~> 0.7)
+    CFPropertyList (3.0.3)
+    activesupport (5.2.5)
+      concurrent-ruby (~> 1.0, >= 1.0.2)
+      i18n (>= 0.7, < 2)
       minitest (~> 5.1)
-      thread_safe (~> 0.3, >= 0.3.4)
       tzinfo (~> 1.1)
-    addressable (2.7.0)
+    addressable (2.8.0)
       public_suffix (>= 2.0.2, < 5.0)
-    algoliasearch (1.27.3)
+    algoliasearch (1.27.5)
       httpclient (~> 2.8, >= 2.8.3)
       json (>= 1.5.1)
+    artifactory (3.0.15)
     atomos (0.1.3)
-    aws-eventstream (1.1.0)
-    aws-partitions (1.371.0)
-    aws-sdk-core (3.107.0)
+    aws-eventstream (1.1.1)
+    aws-partitions (1.449.0)
+    aws-sdk-core (3.114.0)
       aws-eventstream (~> 1, >= 1.0.2)
       aws-partitions (~> 1, >= 1.239.0)
       aws-sigv4 (~> 1.1)
       jmespath (~> 1.0)
-    aws-sdk-kms (1.38.0)
-      aws-sdk-core (~> 3, >= 3.99.0)
+    aws-sdk-kms (1.43.0)
+      aws-sdk-core (~> 3, >= 3.112.0)
       aws-sigv4 (~> 1.1)
-    aws-sdk-s3 (1.81.0)
-      aws-sdk-core (~> 3, >= 3.104.3)
+    aws-sdk-s3 (1.94.0)
+      aws-sdk-core (~> 3, >= 3.112.0)
       aws-sdk-kms (~> 1)
       aws-sigv4 (~> 1.1)
-    aws-sigv4 (1.2.2)
+    aws-sigv4 (1.2.3)
       aws-eventstream (~> 1, >= 1.0.2)
-    babosa (1.0.3)
+    babosa (1.0.4)
     claide (1.0.3)
-    cocoapods (1.8.4)
-      activesupport (>= 4.0.2, < 5)
+    cocoapods (1.10.1)
+      addressable (~> 2.6)
       claide (>= 1.0.2, < 2.0)
-      cocoapods-core (= 1.8.4)
+      cocoapods-core (= 1.10.1)
       cocoapods-deintegrate (>= 1.0.3, < 2.0)
-      cocoapods-downloader (>= 1.2.2, < 2.0)
+      cocoapods-downloader (>= 1.4.0, < 2.0)
       cocoapods-plugins (>= 1.0.0, < 2.0)
       cocoapods-search (>= 1.0.0, < 2.0)
-      cocoapods-stats (>= 1.0.0, < 2.0)
       cocoapods-trunk (>= 1.4.0, < 2.0)
       cocoapods-try (>= 1.1.0, < 2.0)
       colored2 (~> 3.1)
@@ -49,19 +49,22 @@ GEM
       molinillo (~> 0.6.6)
       nap (~> 1.0)
       ruby-macho (~> 1.4)
-      xcodeproj (>= 1.11.1, < 2.0)
-    cocoapods-core (1.8.4)
-      activesupport (>= 4.0.2, < 6)
+      xcodeproj (>= 1.19.0, < 2.0)
+    cocoapods-core (1.10.1)
+      activesupport (> 5.0, < 6)
+      addressable (~> 2.6)
       algoliasearch (~> 1.0)
       concurrent-ruby (~> 1.1)
       fuzzy_match (~> 2.0.4)
       nap (~> 1.0)
+      netrc (~> 0.11)
+      public_suffix
+      typhoeus (~> 1.0)
     cocoapods-deintegrate (1.0.4)
     cocoapods-downloader (1.4.0)
     cocoapods-plugins (1.0.0)
       nap
     cocoapods-search (1.0.0)
-    cocoapods-stats (1.1.0)
     cocoapods-trunk (1.5.0)
       nap (>= 0.8, < 2.0)
       netrc (~> 0.11)
@@ -70,28 +73,37 @@ GEM
     colored2 (3.1.2)
     commander-fastlane (4.4.6)
       highline (~> 1.7.2)
-    concurrent-ruby (1.1.7)
+    concurrent-ruby (1.1.8)
     declarative (0.0.20)
-    declarative-option (0.1.0)
-    digest-crc (0.6.1)
-      rake (~> 13.0)
+    digest-crc (0.6.3)
+      rake (>= 12.0.0, < 14.0.0)
     domain_name (0.5.20190701)
       unf (>= 0.0.5, < 1.0.0)
     dotenv (2.7.6)
-    emoji_regex (3.0.0)
+    emoji_regex (3.2.2)
     escape (0.0.4)
-    excon (0.76.0)
-    faraday (1.0.1)
+    ethon (0.14.0)
+      ffi (>= 1.15.0)
+    excon (0.81.0)
+    faraday (1.4.1)
+      faraday-excon (~> 1.1)
+      faraday-net_http (~> 1.0)
+      faraday-net_http_persistent (~> 1.1)
       multipart-post (>= 1.2, < 3)
+      ruby2_keywords (>= 0.0.4)
     faraday-cookie_jar (0.0.7)
       faraday (>= 0.8.0)
       http-cookie (~> 1.0.0)
+    faraday-excon (1.1.0)
+    faraday-net_http (1.0.1)
+    faraday-net_http_persistent (1.1.0)
     faraday_middleware (1.0.0)
       faraday (~> 1.0)
-    fastimage (2.2.0)
-    fastlane (2.160.0)
+    fastimage (2.2.3)
+    fastlane (2.179.0)
       CFPropertyList (>= 2.3, < 4.0.0)
       addressable (>= 2.3, < 3.0.0)
+      artifactory (~> 3.0)
       aws-sdk-s3 (~> 1.0)
       babosa (>= 1.0.3, < 2.0.0)
       bundler (>= 1.12.0, < 3.0.0)
@@ -112,6 +124,7 @@ GEM
       jwt (>= 2.1.0, < 3)
       mini_magick (>= 4.9.4, < 5.0.0)
       multipart-post (~> 2.0.0)
+      naturally (~> 2.2)
       plist (>= 3.1.0, < 4.0.0)
       rubyzip (>= 2.0.0, < 3.0.0)
       security (= 0.1.3)
@@ -125,6 +138,7 @@ GEM
       xcodeproj (>= 1.13.0, < 2.0.0)
       xcpretty (~> 0.3.0)
       xcpretty-travis-formatter (>= 0.0.3)
+    ffi (1.15.0)
     fourflusher (2.3.1)
     fuzzy_match (2.0.4)
     gh_inspector (1.1.3)
@@ -136,20 +150,35 @@ GEM
       representable (~> 3.0)
       retriable (>= 2.0, < 4.0)
       signet (~> 0.12)
-    google-cloud-core (1.5.0)
+    google-apis-core (0.3.0)
+      addressable (~> 2.5, >= 2.5.1)
+      googleauth (~> 0.14)
+      httpclient (>= 2.8.1, < 3.0)
+      mini_mime (~> 1.0)
+      representable (~> 3.0)
+      retriable (>= 2.0, < 4.0)
+      rexml
+      signet (~> 0.14)
+      webrick
+    google-apis-iamcredentials_v1 (0.3.0)
+      google-apis-core (~> 0.1)
+    google-apis-storage_v1 (0.3.0)
+      google-apis-core (~> 0.1)
+    google-cloud-core (1.6.0)
       google-cloud-env (~> 1.0)
       google-cloud-errors (~> 1.0)
-    google-cloud-env (1.3.3)
+    google-cloud-env (1.5.0)
       faraday (>= 0.17.3, < 2.0)
-    google-cloud-errors (1.0.1)
-    google-cloud-storage (1.28.0)
+    google-cloud-errors (1.1.0)
+    google-cloud-storage (1.31.0)
       addressable (~> 2.5)
       digest-crc (~> 0.4)
-      google-api-client (~> 0.33)
+      google-apis-iamcredentials_v1 (~> 0.1)
+      google-apis-storage_v1 (~> 0.1)
       google-cloud-core (~> 1.2)
       googleauth (~> 0.9)
       mini_mime (~> 1.0)
-    googleauth (0.13.1)
+    googleauth (0.16.2)
       faraday (>= 0.17.3, < 2.0)
       jwt (>= 1.4, < 3.0)
       memoist (~> 0.16)
@@ -160,36 +189,38 @@ GEM
     http-cookie (1.0.3)
       domain_name (~> 0.5)
     httpclient (2.8.3)
-    i18n (0.9.5)
+    i18n (1.8.10)
       concurrent-ruby (~> 1.0)
     jmespath (1.4.0)
-    json (2.3.1)
-    jwt (2.2.2)
+    json (2.5.1)
+    jwt (2.2.3)
     memoist (0.16.2)
-    mini_magick (4.10.1)
-    mini_mime (1.0.2)
-    minitest (5.14.1)
+    mini_magick (4.11.0)
+    mini_mime (1.1.0)
+    minitest (5.14.4)
     molinillo (0.6.6)
     multi_json (1.15.0)
     multipart-post (2.0.0)
     nanaimo (0.3.0)
     nap (1.1.0)
-    naturally (2.2.0)
+    naturally (2.2.1)
     netrc (0.11.0)
     os (1.1.1)
-    plist (3.5.0)
+    plist (3.6.0)
     public_suffix (4.0.6)
-    rake (13.0.1)
-    representable (3.0.4)
+    rake (13.0.3)
+    representable (3.1.1)
       declarative (< 0.1.0)
-      declarative-option (< 0.2.0)
+      trailblazer-option (>= 0.1.1, < 0.2.0)
       uber (< 0.2.0)
     retriable (3.1.2)
+    rexml (3.2.5)
     rouge (2.0.7)
     ruby-macho (1.4.0)
+    ruby2_keywords (0.0.4)
     rubyzip (2.3.0)
     security (0.1.3)
-    signet (0.14.0)
+    signet (0.15.0)
       addressable (~> 2.3)
       faraday (>= 0.17.3, < 2.0)
       jwt (>= 1.5, < 3.0)
@@ -202,19 +233,23 @@ GEM
     terminal-table (1.8.0)
       unicode-display_width (~> 1.1, >= 1.1.1)
     thread_safe (0.3.6)
+    trailblazer-option (0.1.1)
     tty-cursor (0.7.1)
     tty-screen (0.8.1)
     tty-spinner (0.9.3)
       tty-cursor (~> 0.7)
-    tzinfo (1.2.7)
+    typhoeus (1.4.0)
+      ethon (>= 0.9.0)
+    tzinfo (1.2.9)
       thread_safe (~> 0.1)
     uber (0.1.0)
     unf (0.1.4)
       unf_ext
     unf_ext (0.0.7.7)
     unicode-display_width (1.7.0)
+    webrick (1.7.0)
     word_wrap (1.0.0)
-    xcodeproj (1.18.0)
+    xcodeproj (1.19.0)
       CFPropertyList (>= 2.3.3, < 4.0)
       atomos (~> 0.1.3)
       claide (>= 1.0.2, < 2.0)
@@ -222,15 +257,16 @@ GEM
       nanaimo (~> 0.3.0)
     xcpretty (0.3.0)
       rouge (~> 2.0.7)
-    xcpretty-travis-formatter (1.0.0)
+    xcpretty-travis-formatter (1.0.1)
       xcpretty (~> 0.2, >= 0.0.7)
 
 PLATFORMS
   ruby
 
 DEPENDENCIES
-  cocoapods (= 1.8.4)
-  fastlane (= 2.160.0)
+  cocoapods (= 1.10.1)
+  fastlane (= 2.179.0)
+  xcodeproj
 
 BUNDLED WITH
-   2.1.4
+   2.2.4
diff --git a/apolloschurchapp/__mocks__/@apollosproject/ui-analytics.js b/apolloschurchapp/__mocks__/@apollosproject/ui-analytics.js
new file mode 100644
index 00000000..0df18be4
--- /dev/null
+++ b/apolloschurchapp/__mocks__/@apollosproject/ui-analytics.js
@@ -0,0 +1,11 @@
+import React from 'react';
+
+module.exports = {
+  track: () => '',
+  AnalyticsConsumer: ({ children }) => children({ test: jest.fn() }),
+  AnalyticsProvider: ({ children }) => children,
+  CoreNavigationAnalytics: ({ children }) =>
+    children({ onNavigationStateChange: jest.fn() }),
+  TrackEventWhenLoaded: () => null,
+  withTrackOnPress: (Component) => (props) => <Component {...props} />,
+};
diff --git a/apolloschurchapp/__mocks__/@apollosproject/ui-kit.js b/apolloschurchapp/__mocks__/@apollosproject/ui-kit.js
new file mode 100644
index 00000000..fcbc8f01
--- /dev/null
+++ b/apolloschurchapp/__mocks__/@apollosproject/ui-kit.js
@@ -0,0 +1,7 @@
+module.exports = {
+  ...jest.requireActual('@apollosproject/ui-kit'),
+  NavigationService: {
+    navigate: jest.fn(),
+    setTopLevelNavigator: jest.fn(),
+  },
+};
diff --git a/apolloschurchapp/__mocks__/@apollosproject/ui-mapview.js b/apolloschurchapp/__mocks__/@apollosproject/ui-mapview.js
new file mode 100644
index 00000000..b3290d22
--- /dev/null
+++ b/apolloschurchapp/__mocks__/@apollosproject/ui-mapview.js
@@ -0,0 +1,3 @@
+module.exports = {
+  MapViewConnected: 'MapViewConnected',
+};
diff --git a/apolloschurchapp/__mocks__/@apollosproject/ui-media-player.js b/apolloschurchapp/__mocks__/@apollosproject/ui-media-player.js
new file mode 100644
index 00000000..1d439c2e
--- /dev/null
+++ b/apolloschurchapp/__mocks__/@apollosproject/ui-media-player.js
@@ -0,0 +1,7 @@
+module.exports = {
+  MediaPlayerSpacer: ({ children }) => children,
+  MediaPlayer: () => 'MediaPlayer',
+  MediaPlayerProvider: ({ children }) => children,
+  playVideoMutation: 'mutation { playVideo }',
+  withTabBarMediaSpacer: () => ({ children }) => children,
+};
diff --git a/apolloschurchapp/__mocks__/@apollosproject/ui-notifications.js b/apolloschurchapp/__mocks__/@apollosproject/ui-notifications.js
new file mode 100644
index 00000000..67ae4672
--- /dev/null
+++ b/apolloschurchapp/__mocks__/@apollosproject/ui-notifications.js
@@ -0,0 +1 @@
+module.exports = { NotificationsProvider: ({ children }) => children };
diff --git a/apolloschurchapp/__mocks__/@react-native-community/async-storage/index.js b/apolloschurchapp/__mocks__/@react-native-community/async-storage.js
similarity index 100%
rename from apolloschurchapp/__mocks__/@react-native-community/async-storage/index.js
rename to apolloschurchapp/__mocks__/@react-native-community/async-storage.js
diff --git a/apolloschurchapp/__mocks__/@react-native-community/datetimepicker.js b/apolloschurchapp/__mocks__/@react-native-community/datetimepicker.js
new file mode 100644
index 00000000..86e50600
--- /dev/null
+++ b/apolloschurchapp/__mocks__/@react-native-community/datetimepicker.js
@@ -0,0 +1 @@
+export default () => 'DateTimePicker';
diff --git a/apolloschurchapp/__mocks__/@react-native-community/geolocation/index.js b/apolloschurchapp/__mocks__/@react-native-community/geolocation.js
similarity index 100%
rename from apolloschurchapp/__mocks__/@react-native-community/geolocation/index.js
rename to apolloschurchapp/__mocks__/@react-native-community/geolocation.js
diff --git a/apolloschurchapp/__mocks__/react-native-device-info.js b/apolloschurchapp/__mocks__/react-native-device-info.js
new file mode 100644
index 00000000..a838bf87
--- /dev/null
+++ b/apolloschurchapp/__mocks__/react-native-device-info.js
@@ -0,0 +1,7 @@
+module.exports = {
+  getUniqueId: () => 'id-123',
+  getSystemVersion: () => 'sys-version-123',
+  getModel: () => 'ios',
+  getVersion: () => 'version-123',
+  getBuildNumber: () => 0,
+};
diff --git a/apolloschurchapp/__mocks__/react-native-permissions/index.js b/apolloschurchapp/__mocks__/react-native-permissions.js
similarity index 100%
rename from apolloschurchapp/__mocks__/react-native-permissions/index.js
rename to apolloschurchapp/__mocks__/react-native-permissions.js
diff --git a/apolloschurchapp/__mocks__/react-native-safari-view.js b/apolloschurchapp/__mocks__/react-native-safari-view.js
new file mode 100644
index 00000000..867a6802
--- /dev/null
+++ b/apolloschurchapp/__mocks__/react-native-safari-view.js
@@ -0,0 +1,5 @@
+module.exports = {
+  isAvailable: jest.fn().mockImplementation(() => Promise.resolve(true)),
+  show: jest.fn(),
+  default: require.requireActual('react-native').SafeAreaView,
+};
diff --git a/apolloschurchapp/__mocks__/react-native-safe-area-context.js b/apolloschurchapp/__mocks__/react-native-safe-area-context.js
index 02dc10be..2d7ec53d 100644
--- a/apolloschurchapp/__mocks__/react-native-safe-area-context.js
+++ b/apolloschurchapp/__mocks__/react-native-safe-area-context.js
@@ -2,4 +2,6 @@ module.exports = {
   SafeAreaConsumer: ({ children }) =>
     children({ top: 0, bottom: 0, left: 0, right: 0 }),
   SafeAreaProvider: ({ children }) => children,
+  SafeAreaView: jest.requireActual('react-native').SafeAreaView,
+  useSafeAreaInsets: () => ({ top: 3 }),
 };
diff --git a/apolloschurchapp/__mocks__/react-native-video.js b/apolloschurchapp/__mocks__/react-native-video.js
new file mode 100644
index 00000000..6b2ed22f
--- /dev/null
+++ b/apolloschurchapp/__mocks__/react-native-video.js
@@ -0,0 +1 @@
+export default () => 'Video';
diff --git a/apolloschurchapp/__mocks__/rn-fetch-blob.js b/apolloschurchapp/__mocks__/rn-fetch-blob.js
new file mode 100644
index 00000000..17042190
--- /dev/null
+++ b/apolloschurchapp/__mocks__/rn-fetch-blob.js
@@ -0,0 +1 @@
+export default () => 'Fetch';
diff --git a/apolloschurchapp/android/app/apollos.keystore.enc b/apolloschurchapp/android/app/apollos.keystore.enc
index 1792515ed25445a79a7725643f7647d5c7d90907..84d919dad1f07b2792148548e1ed909adfe1e36e 100644
GIT binary patch
literal 2272
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

literal 2272
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

diff --git a/apolloschurchapp/android/app/build.gradle b/apolloschurchapp/android/app/build.gradle
index 29ca5454..01b6829f 100644
--- a/apolloschurchapp/android/app/build.gradle
+++ b/apolloschurchapp/android/app/build.gradle
@@ -10,10 +10,6 @@ buildscript {
 apply plugin: 'com.onesignal.androidsdk.onesignal-gradle-plugin'
 apply plugin: "com.android.application"
 
-project.ext.envConfigFiles = [
-    release: ".env.production",
-]
-
 apply from: project(':react-native-config').projectDir.getPath() + "/dotenv.gradle"
 
 import com.android.build.OutputFile
@@ -93,7 +89,7 @@ import com.android.build.OutputFile
 
 project.ext.react = [
     entryFile: "index.js",
-    enableHermes: false,  // clean and rebuild if changing
+    enableHermes: true,  // clean and rebuild if changing
 ]
 
 apply from: "../../node_modules/react-native/react.gradle"
@@ -132,7 +128,17 @@ def jscFlavor = 'org.webkit:android-jsc:+'
  * on project.ext.react, JavaScript will not be compiled to Hermes Bytecode
  * and the benefits of using Hermes will therefore be sharply reduced.
  */
-def enableHermes = project.ext.react.get("enableHermes", false);
+def enableHermes = project.ext.react.get("enableHermes", true);
+
+/**
+ * Trying to fix Hermes:
+ * https://github.com/facebook/react-native/issues/26400#issuecomment-539395814
+ */
+configurations.all {
+  resolutionStrategy {
+    force "com.facebook.soloader:soloader:0.8.2"
+  }
+}
 
 android {
     compileSdkVersion rootProject.ext.compileSdkVersion
@@ -146,7 +152,7 @@ android {
         applicationId "com.differential.apollos"
         minSdkVersion rootProject.ext.minSdkVersion
         targetSdkVersion rootProject.ext.targetSdkVersion
-        versionCode 331
+        versionCode 1
         versionName "1.0.0"
         ndk {
             abiFilters "armeabi-v7a", "x86", "arm64-v8a", "x86_64"
diff --git a/apolloschurchapp/android/app/proguard-rules.pro b/apolloschurchapp/android/app/proguard-rules.pro
index 11b02572..c9523bda 100644
--- a/apolloschurchapp/android/app/proguard-rules.pro
+++ b/apolloschurchapp/android/app/proguard-rules.pro
@@ -8,3 +8,6 @@
 #   http://developer.android.com/guide/developing/tools/proguard.html
 
 # Add any project specific keep options here:
+-keep class com.facebook.react.turbomodule.** { *; }
+-keep class com.facebook.hermes.unicode.** { *; }
+-keep class com.facebook.jni.** { *; }
\ No newline at end of file
diff --git a/apolloschurchapp/android/app/src/main/java/com/differential/apollos/ReactNativeFlipper.java b/apolloschurchapp/android/app/src/debug/java/com/differential/apollos/ReactNativeFlipper.java
similarity index 100%
rename from apolloschurchapp/android/app/src/main/java/com/differential/apollos/ReactNativeFlipper.java
rename to apolloschurchapp/android/app/src/debug/java/com/differential/apollos/ReactNativeFlipper.java
diff --git a/apolloschurchapp/android/app/src/main/AndroidManifest.xml b/apolloschurchapp/android/app/src/main/AndroidManifest.xml
index a75e9193..9b213950 100644
--- a/apolloschurchapp/android/app/src/main/AndroidManifest.xml
+++ b/apolloschurchapp/android/app/src/main/AndroidManifest.xml
@@ -18,10 +18,6 @@
         android:name="com.google.android.geo.API_KEY"
         android:value="@string/GOOGLE_MAPS_API_KEY"/>
 
-      <meta-data
-        android:name="com.google.android.gms.cast.framework.OPTIONS_PROVIDER_CLASS_NAME"
-        android:value="com.reactnative.googlecast.GoogleCastOptionsProvider" />
-
       <activity
         android:name=".MainActivity"
         android:label="@string/app_name"
@@ -40,7 +36,7 @@
 
           <!-- Handle urls starting with "http://www.example.com/products" -->
           <data android:scheme="https"
-                android:host="apollos-church-api.herokuapp.com"
+                android:host="@string/APP_DATA_URL"
                 android:pathPrefix="/app-link" />
           <data android:scheme="http" />
         </intent-filter>
diff --git a/apolloschurchapp/android/app/src/main/java/com/differential/apollos/MainActivity.java b/apolloschurchapp/android/app/src/main/java/com/differential/apollos/MainActivity.java
index db0a876b..89affa60 100644
--- a/apolloschurchapp/android/app/src/main/java/com/differential/apollos/MainActivity.java
+++ b/apolloschurchapp/android/app/src/main/java/com/differential/apollos/MainActivity.java
@@ -5,9 +5,8 @@ import com.facebook.react.ReactActivity;
 import com.facebook.react.ReactActivityDelegate;
 import com.facebook.react.ReactRootView;
 import com.swmansion.gesturehandler.react.RNGestureHandlerEnabledRootView;
-import com.facebook.react.GoogleCastActivity;
 
-public class MainActivity extends GoogleCastActivity {
+public class MainActivity extends ReactActivity {
     /**
      * Returns the name of the main component registered from JavaScript.
      * This is used to schedule rendering of the component.
diff --git a/apolloschurchapp/android/app/src/main/java/com/differential/apollos/MainApplication.java b/apolloschurchapp/android/app/src/main/java/com/differential/apollos/MainApplication.java
index 641c3368..655987f3 100644
--- a/apolloschurchapp/android/app/src/main/java/com/differential/apollos/MainApplication.java
+++ b/apolloschurchapp/android/app/src/main/java/com/differential/apollos/MainApplication.java
@@ -12,6 +12,9 @@ import com.facebook.react.ReactPackage;
 import com.facebook.react.shell.MainReactPackage;
 import com.facebook.soloader.SoLoader;
 
+import com.facebook.react.bridge.JSIModulePackage;
+import com.swmansion.reanimated.ReanimatedJSIModulePackage;
+
 import java.util.Arrays;
 import java.util.List;
 
@@ -36,6 +39,11 @@ public class MainApplication extends Application implements ReactApplication {
     protected String getJSMainModuleName() {
       return "index";
     }
+
+    @Override
+    protected JSIModulePackage getJSIModulePackage() {
+      return new ReanimatedJSIModulePackage();
+    }
   };
 
   @Override
diff --git a/apolloschurchapp/android/build.gradle b/apolloschurchapp/android/build.gradle
index c50120a9..4200b873 100644
--- a/apolloschurchapp/android/build.gradle
+++ b/apolloschurchapp/android/build.gradle
@@ -3,7 +3,7 @@
 buildscript {
     ext {
         buildToolsVersion = "29.0.2"
-        minSdkVersion = 16
+        minSdkVersion = 21
         compileSdkVersion = 29
         targetSdkVersion = 29
     }
diff --git a/apolloschurchapp/android/key.json.enc b/apolloschurchapp/android/key.json.enc
index 2f384e868f55131f70a190fbac905a5af5ce23b2..874dbdeb21a17deaca4461e1bf7a1a534ac33cda 100644
GIT binary patch
literal 2384
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
CZ<VzG

literal 2384
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
CgQfid

diff --git a/apolloschurchapp/android/sentry.properties b/apolloschurchapp/android/sentry.properties
deleted file mode 100644
index 7e557aff..00000000
--- a/apolloschurchapp/android/sentry.properties
+++ /dev/null
@@ -1,5 +0,0 @@
-defaults.url=https://sentry.io/
-defaults.org=newspring-church
-defaults.project=apollos-project
-auth.token=8a667d6194c84c60bd116b199f9573e6c4c1df104a8d4f0c8375acdec1305277
-cli.executable=node_modules/@sentry/cli/bin/sentry-cli
diff --git a/apolloschurchapp/apollos.json b/apolloschurchapp/apollos.json
index 3952f7d9..8580b826 100644
--- a/apolloschurchapp/apollos.json
+++ b/apolloschurchapp/apollos.json
@@ -1,4 +1,4 @@
 {
-    "version": "2.0.0-beta.0",
+    "version": "2.29.3",
     "environment": "client"
 }
diff --git a/apolloschurchapp/app.json b/apolloschurchapp/app.json
new file mode 100644
index 00000000..909a41fc
--- /dev/null
+++ b/apolloschurchapp/app.json
@@ -0,0 +1,4 @@
+{
+  "name": "apolloschurchapp",
+  "displayName": "Apollos Church"
+}
diff --git a/apolloschurchapp/babel.config.js b/apolloschurchapp/babel.config.js
index f842b77f..983e075d 100644
--- a/apolloschurchapp/babel.config.js
+++ b/apolloschurchapp/babel.config.js
@@ -1,3 +1,4 @@
 module.exports = {
   presets: ['module:metro-react-native-babel-preset'],
+  plugins: ['react-native-reanimated/plugin'],
 };
diff --git a/apolloschurchapp/fastlane/Appfile b/apolloschurchapp/fastlane/Appfile
deleted file mode 100644
index b647b9f0..00000000
--- a/apolloschurchapp/fastlane/Appfile
+++ /dev/null
@@ -1,10 +0,0 @@
-# iOS
-app_identifier("com.differential.apollos") # The bundle identifier of your app
-apple_id("fastlane@differential.com") # Your Apple email address
-
-itc_team_id("121565707") # App Store Connect Team ID
-team_id("7KS82J74VW") # Developer Portal Team ID
-
-# Android
-json_key_file("android/key.json") # Path to the json secret file - Follow https://docs.fastlane.tools/actions/supply/#setup to get one
-package_name("com.differential.apollos") # e.g. com.krausefx.app
diff --git a/apolloschurchapp/fastlane/Fastfile b/apolloschurchapp/fastlane/Fastfile
index 45aacb63..2e5ba5f1 100644
--- a/apolloschurchapp/fastlane/Fastfile
+++ b/apolloschurchapp/fastlane/Fastfile
@@ -1,3 +1,4 @@
+require 'xcodeproj'
 # This file contains the fastlane.tools configuration
 # You can find the documentation at https://docs.fastlane.tools
 #
@@ -13,51 +14,72 @@
 # Uncomment the line if you want fastlane to automatically update itself
 #update_fastlane
 
+def product_bundle_id(path:)
+  project = Xcodeproj::Project.open(path)
+  scheme = project.native_targets.first
+  build_configuration = scheme.build_configurations.first
+  build_configuration.build_settings['PRODUCT_BUNDLE_IDENTIFIER']
+end
+
+def bump_version_code()
+    s = File.read("../android/app/build.gradle")
+    versionCode = number_of_commits
+    s[/versionCode\s+(\d+)/, 1] = (versionCode).to_s
+    f = File.new('../android/app/build.gradle', 'w')
+    f.write(s)
+    f.close
+end
+
 before_all do
   ensure_git_branch
   ensure_git_status_clean
   git_pull
 end
 
+
 platform :ios do
-  desc 'Fetch certificates and provisioning profiles'
-  lane :certificates do
-    match(app_identifier: 'com.differential.apollos', type: 'development', readonly: true)
-    match(app_identifier: 'com.differential.apollos', type: 'appstore', readonly: true)
-  end
 
-  desc "Push a new beta build to TestFlight"
+  desc "Push a new internal build to TestFlight"
   lane :deploy do
+
+    # get project name
+    proj = Dir.glob("../ios/*.xcworkspace")[0][7..-13]
+
+    identifier = product_bundle_id(path: "../ios/" << proj << ".xcodeproj")
+
+    app_store_connect_api_key(key_filepath: "ios/apollos.p8", in_house: false)
     setup_ci
-    certificates
-    increment_build_number(build_number: number_of_commits, xcodeproj: "ios/apolloschurchapp.xcodeproj")
-    build_app(workspace: "ios/apolloschurchapp.xcworkspace", scheme: "apolloschurchappprod")
-    upload_to_testflight
+    match(type: 'appstore', app_identifier: [identifier, "#{identifier}.OneSignalNotificationServiceExtension"], readonly: true)
+    increment_build_number(build_number: number_of_commits, xcodeproj: "ios/" << proj << ".xcodeproj")
+    build_app(workspace: "ios/" << proj << ".xcworkspace", scheme: proj)
+    changelog_from_git_commits
+    testflight
   end
 end
 
 platform :android do
 
-  # necessary because setting gradle properties doesn't seem to be working
-  desc "Bumps Android versionCode"
-  lane :bump_version_code do
-    path = '../android/app/build.gradle'
-    re = /versionCode\s+(\d+)/
-
-    s = File.read(path)
-    versionCode = number_of_commits
-    s[re, 1] = (versionCode).to_s
-
-    f = File.new(path, 'w')
-    f.write(s)
-    f.close
-  end
-
   desc "Deploy a new version to the Google Play"
   lane :deploy do
     bump_version_code
     gradle(task: 'clean', project_dir: 'android')
     gradle(task: 'bundle', build_type: 'Release', project_dir: 'android')
-    upload_to_play_store(track: "internal")
+    changelog_from_git_commits
+
+    s = File.read("../android/app/build.gradle")
+    package_name = s[/applicationId\s+"([\w+\.]*)"/, 1]
+
+    upload_to_play_store(
+      track: "internal",
+      skip_upload_apk: true,
+      json_key: "android/key.json",
+      package_name: package_name
+    )
   end
 end
+
+error do |lane, exception|
+  s = File.read("../app.json")
+  app_name = s[/"name": "(.*)",/, 1]
+  slack(message: app_name << " - " << exception.to_s, success: false)
+end
diff --git a/apolloschurchapp/fastlane/Matchfile b/apolloschurchapp/fastlane/Matchfile
deleted file mode 100644
index 238d86b6..00000000
--- a/apolloschurchapp/fastlane/Matchfile
+++ /dev/null
@@ -1,6 +0,0 @@
-git_url("https://github.com/ApollosProject/certificates")
-
-storage_mode("git")
-
-app_identifier(["com.differential.apollos"])
-username("apps@apollos.app")
diff --git a/apolloschurchapp/fastlane/README.md b/apolloschurchapp/fastlane/README.md
index 026e1080..fbb662dc 100644
--- a/apolloschurchapp/fastlane/README.md
+++ b/apolloschurchapp/fastlane/README.md
@@ -16,11 +16,6 @@ or alternatively using `brew install fastlane`
 
 # Available Actions
 ## iOS
-### ios certificates
-```
-fastlane ios certificates
-```
-Fetch certificates and provisioning profiles
 ### ios deploy
 ```
 fastlane ios deploy
diff --git a/apolloschurchapp/ios/OneSignalNotificationServiceExtension/Info.plist b/apolloschurchapp/ios/OneSignalNotificationServiceExtension/Info.plist
new file mode 100644
index 00000000..4c1c3834
--- /dev/null
+++ b/apolloschurchapp/ios/OneSignalNotificationServiceExtension/Info.plist
@@ -0,0 +1,31 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
+<plist version="1.0">
+<dict>
+	<key>CFBundleDevelopmentRegion</key>
+	<string>$(DEVELOPMENT_LANGUAGE)</string>
+	<key>CFBundleDisplayName</key>
+	<string>OneSignalNotificationServiceExtension</string>
+	<key>CFBundleExecutable</key>
+	<string>$(EXECUTABLE_NAME)</string>
+	<key>CFBundleIdentifier</key>
+	<string>$(PRODUCT_BUNDLE_IDENTIFIER)</string>
+	<key>CFBundleInfoDictionaryVersion</key>
+	<string>6.0</string>
+	<key>CFBundleName</key>
+	<string>$(PRODUCT_NAME)</string>
+	<key>CFBundlePackageType</key>
+	<string>$(PRODUCT_BUNDLE_PACKAGE_TYPE)</string>
+	<key>CFBundleShortVersionString</key>
+	<string>1.0.0</string>
+	<key>CFBundleVersion</key>
+	<string>670</string>
+	<key>NSExtension</key>
+	<dict>
+		<key>NSExtensionPointIdentifier</key>
+		<string>com.apple.usernotifications.service</string>
+		<key>NSExtensionPrincipalClass</key>
+		<string>$(PRODUCT_MODULE_NAME).NotificationService</string>
+	</dict>
+</dict>
+</plist>
diff --git a/apolloschurchapp/ios/OneSignalNotificationServiceExtension/NotificationService.swift b/apolloschurchapp/ios/OneSignalNotificationServiceExtension/NotificationService.swift
new file mode 100644
index 00000000..a8907580
--- /dev/null
+++ b/apolloschurchapp/ios/OneSignalNotificationServiceExtension/NotificationService.swift
@@ -0,0 +1,31 @@
+import UserNotifications
+
+import OneSignal
+
+class NotificationService: UNNotificationServiceExtension {
+    
+    var contentHandler: ((UNNotificationContent) -> Void)?
+    var receivedRequest: UNNotificationRequest!
+    var bestAttemptContent: UNMutableNotificationContent?
+    
+    override func didReceive(_ request: UNNotificationRequest, withContentHandler contentHandler: @escaping (UNNotificationContent) -> Void) {
+        self.receivedRequest = request;
+        self.contentHandler = contentHandler
+        bestAttemptContent = (request.content.mutableCopy() as? UNMutableNotificationContent)
+        
+        if let bestAttemptContent = bestAttemptContent {
+            OneSignal.didReceiveNotificationExtensionRequest(self.receivedRequest, with: self.bestAttemptContent)
+            contentHandler(bestAttemptContent)
+        }
+    }
+    
+    override func serviceExtensionTimeWillExpire() {
+        // Called just before the extension will be terminated by the system.
+        // Use this as an opportunity to deliver your "best attempt" at modified content, otherwise the original push payload will be used.
+        if let contentHandler = contentHandler, let bestAttemptContent =  bestAttemptContent {
+            OneSignal.serviceExtensionTimeWillExpireRequest(self.receivedRequest, with: self.bestAttemptContent)
+            contentHandler(bestAttemptContent)
+        }
+    }
+    
+}
diff --git a/apolloschurchapp/ios/OneSignalNotificationServiceExtension/OneSignalNotificationServiceExtension.entitlements b/apolloschurchapp/ios/OneSignalNotificationServiceExtension/OneSignalNotificationServiceExtension.entitlements
new file mode 100644
index 00000000..379cbb9c
--- /dev/null
+++ b/apolloschurchapp/ios/OneSignalNotificationServiceExtension/OneSignalNotificationServiceExtension.entitlements
@@ -0,0 +1,10 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
+<plist version="1.0">
+<dict>
+	<key>com.apple.security.application-groups</key>
+	<array>
+		<string>group.com.differential.apollos.onesignal</string>
+	</array>
+</dict>
+</plist>
diff --git a/apolloschurchapp/ios/Podfile b/apolloschurchapp/ios/Podfile
index 26b192b8..cdcd2131 100644
--- a/apolloschurchapp/ios/Podfile
+++ b/apolloschurchapp/ios/Podfile
@@ -11,7 +11,6 @@ target 'apolloschurchapp' do
 
   pod 'Permission-PhotoLibrary', :path => "#{permissions_path}/PhotoLibrary.podspec"
   pod 'Permission-Notifications', :path => "#{permissions_path}/Notifications.podspec"
-  # pod 'react-native-google-cast/NoBluetooth', path: '../node_modules/react-native-google-cast/ios/'
 
   target 'apolloschurchappTests' do
     inherit! :complete
@@ -22,7 +21,7 @@ target 'apolloschurchapp' do
   #
   # Note that if you have use_frameworks! enabled, Flipper will not work and
   # you should disable these next few lines.
-  use_flipper!
+  use_flipper!('Flipper' => '0.75.1', 'Flipper-Folly' => '2.5.3', 'Flipper-RSocket' => '1.3.1')
   post_install do |installer|
     flipper_post_install(installer)
       installer.pods_project.targets.each do |target|
@@ -36,7 +35,7 @@ target 'apolloschurchapp' do
          target.build_phases << phase
          target.build_phases.move(phase,0)
        end
-      end    
+      end
   end
 end
 
@@ -49,3 +48,7 @@ target 'apolloschurchapp-tvOS' do
   end
 
 end
+
+target 'OneSignalNotificationServiceExtension' do
+  pod 'OneSignal', '>= 3.0', '< 4.0'
+end
\ No newline at end of file
diff --git a/apolloschurchapp/ios/Podfile.lock b/apolloschurchapp/ios/Podfile.lock
index c66575da..8a986d6d 100644
--- a/apolloschurchapp/ios/Podfile.lock
+++ b/apolloschurchapp/ios/Podfile.lock
@@ -3,61 +3,60 @@ PODS:
   - boost-for-react-native (1.63.0)
   - BVLinearGradient (2.5.6):
     - React
-  - CocoaAsyncSocket (7.6.4)
-  - CocoaLibEvent (1.0.0)
+  - CocoaAsyncSocket (7.6.5)
   - DoubleConversion (1.1.6)
-  - FBLazyVector (0.63.2)
-  - FBReactNativeSpec (0.63.2):
+  - FBLazyVector (0.63.4)
+  - FBReactNativeSpec (0.63.4):
     - Folly (= 2020.01.13.00)
-    - RCTRequired (= 0.63.2)
-    - RCTTypeSafety (= 0.63.2)
-    - React-Core (= 0.63.2)
-    - React-jsi (= 0.63.2)
-    - ReactCommon/turbomodule/core (= 0.63.2)
-  - Flipper (0.41.5):
-    - Flipper-Folly (~> 2.2)
-    - Flipper-RSocket (~> 1.1)
+    - RCTRequired (= 0.63.4)
+    - RCTTypeSafety (= 0.63.4)
+    - React-Core (= 0.63.4)
+    - React-jsi (= 0.63.4)
+    - ReactCommon/turbomodule/core (= 0.63.4)
+  - Flipper (0.75.1):
+    - Flipper-Folly (~> 2.5)
+    - Flipper-RSocket (~> 1.3)
   - Flipper-DoubleConversion (1.1.7)
-  - Flipper-Folly (2.3.0):
+  - Flipper-Folly (2.5.3):
     - boost-for-react-native
-    - CocoaLibEvent (~> 1.0)
     - Flipper-DoubleConversion
     - Flipper-Glog
-    - OpenSSL-Universal (= 1.0.2.20)
+    - libevent (~> 2.1.12)
+    - OpenSSL-Universal (= 1.1.180)
   - Flipper-Glog (0.3.6)
   - Flipper-PeerTalk (0.0.4)
-  - Flipper-RSocket (1.1.0):
-    - Flipper-Folly (~> 2.2)
-  - FlipperKit (0.41.5):
-    - FlipperKit/Core (= 0.41.5)
-  - FlipperKit/Core (0.41.5):
-    - Flipper (~> 0.41.5)
+  - Flipper-RSocket (1.3.1):
+    - Flipper-Folly (~> 2.5)
+  - FlipperKit (0.75.1):
+    - FlipperKit/Core (= 0.75.1)
+  - FlipperKit/Core (0.75.1):
+    - Flipper (~> 0.75.1)
     - FlipperKit/CppBridge
     - FlipperKit/FBCxxFollyDynamicConvert
     - FlipperKit/FBDefines
     - FlipperKit/FKPortForwarding
-  - FlipperKit/CppBridge (0.41.5):
-    - Flipper (~> 0.41.5)
-  - FlipperKit/FBCxxFollyDynamicConvert (0.41.5):
-    - Flipper-Folly (~> 2.2)
-  - FlipperKit/FBDefines (0.41.5)
-  - FlipperKit/FKPortForwarding (0.41.5):
+  - FlipperKit/CppBridge (0.75.1):
+    - Flipper (~> 0.75.1)
+  - FlipperKit/FBCxxFollyDynamicConvert (0.75.1):
+    - Flipper-Folly (~> 2.5)
+  - FlipperKit/FBDefines (0.75.1)
+  - FlipperKit/FKPortForwarding (0.75.1):
     - CocoaAsyncSocket (~> 7.6)
     - Flipper-PeerTalk (~> 0.0.4)
-  - FlipperKit/FlipperKitHighlightOverlay (0.41.5)
-  - FlipperKit/FlipperKitLayoutPlugin (0.41.5):
+  - FlipperKit/FlipperKitHighlightOverlay (0.75.1)
+  - FlipperKit/FlipperKitLayoutPlugin (0.75.1):
     - FlipperKit/Core
     - FlipperKit/FlipperKitHighlightOverlay
     - FlipperKit/FlipperKitLayoutTextSearchable
     - YogaKit (~> 1.18)
-  - FlipperKit/FlipperKitLayoutTextSearchable (0.41.5)
-  - FlipperKit/FlipperKitNetworkPlugin (0.41.5):
+  - FlipperKit/FlipperKitLayoutTextSearchable (0.75.1)
+  - FlipperKit/FlipperKitNetworkPlugin (0.75.1):
     - FlipperKit/Core
-  - FlipperKit/FlipperKitReactPlugin (0.41.5):
+  - FlipperKit/FlipperKitReactPlugin (0.75.1):
     - FlipperKit/Core
-  - FlipperKit/FlipperKitUserDefaultsPlugin (0.41.5):
+  - FlipperKit/FlipperKitUserDefaultsPlugin (0.75.1):
     - FlipperKit/Core
-  - FlipperKit/SKIOSNetworkPlugin (0.41.5):
+  - FlipperKit/SKIOSNetworkPlugin (0.75.1):
     - FlipperKit/Core
     - FlipperKit/FlipperKitNetworkPlugin
   - Folly (2020.01.13.00):
@@ -70,206 +69,195 @@ PODS:
     - DoubleConversion
     - glog
   - glog (0.3.5)
-  - google-cast-sdk (4.3.0):
-    - google-cast-sdk/Core (= 4.3.0)
-  - google-cast-sdk/Core (4.3.0)
-  - OneSignal (2.15.2)
-  - OpenSSL-Universal (1.0.2.20):
-    - OpenSSL-Universal/Static (= 1.0.2.20)
-  - OpenSSL-Universal/Static (1.0.2.20)
+  - libevent (2.1.12)
+  - OneSignal (3.4.3)
+  - OpenSSL-Universal (1.1.180)
   - Permission-Notifications (2.2.2):
     - RNPermissions
   - Permission-PhotoLibrary (2.2.2):
     - RNPermissions
-  - RCTRequired (0.63.2)
-  - RCTTypeSafety (0.63.2):
-    - FBLazyVector (= 0.63.2)
+  - RCTRequired (0.63.4)
+  - RCTTypeSafety (0.63.4):
+    - FBLazyVector (= 0.63.4)
     - Folly (= 2020.01.13.00)
-    - RCTRequired (= 0.63.2)
-    - React-Core (= 0.63.2)
-  - React (0.63.2):
-    - React-Core (= 0.63.2)
-    - React-Core/DevSupport (= 0.63.2)
-    - React-Core/RCTWebSocket (= 0.63.2)
-    - React-RCTActionSheet (= 0.63.2)
-    - React-RCTAnimation (= 0.63.2)
-    - React-RCTBlob (= 0.63.2)
-    - React-RCTImage (= 0.63.2)
-    - React-RCTLinking (= 0.63.2)
-    - React-RCTNetwork (= 0.63.2)
-    - React-RCTSettings (= 0.63.2)
-    - React-RCTText (= 0.63.2)
-    - React-RCTVibration (= 0.63.2)
-  - React-callinvoker (0.63.2)
-  - React-Core (0.63.2):
+    - RCTRequired (= 0.63.4)
+    - React-Core (= 0.63.4)
+  - React (0.63.4):
+    - React-Core (= 0.63.4)
+    - React-Core/DevSupport (= 0.63.4)
+    - React-Core/RCTWebSocket (= 0.63.4)
+    - React-RCTActionSheet (= 0.63.4)
+    - React-RCTAnimation (= 0.63.4)
+    - React-RCTBlob (= 0.63.4)
+    - React-RCTImage (= 0.63.4)
+    - React-RCTLinking (= 0.63.4)
+    - React-RCTNetwork (= 0.63.4)
+    - React-RCTSettings (= 0.63.4)
+    - React-RCTText (= 0.63.4)
+    - React-RCTVibration (= 0.63.4)
+  - React-callinvoker (0.63.4)
+  - React-Core (0.63.4):
     - Folly (= 2020.01.13.00)
     - glog
-    - React-Core/Default (= 0.63.2)
-    - React-cxxreact (= 0.63.2)
-    - React-jsi (= 0.63.2)
-    - React-jsiexecutor (= 0.63.2)
+    - React-Core/Default (= 0.63.4)
+    - React-cxxreact (= 0.63.4)
+    - React-jsi (= 0.63.4)
+    - React-jsiexecutor (= 0.63.4)
     - Yoga
-  - React-Core/CoreModulesHeaders (0.63.2):
+  - React-Core/CoreModulesHeaders (0.63.4):
     - Folly (= 2020.01.13.00)
     - glog
     - React-Core/Default
-    - React-cxxreact (= 0.63.2)
-    - React-jsi (= 0.63.2)
-    - React-jsiexecutor (= 0.63.2)
+    - React-cxxreact (= 0.63.4)
+    - React-jsi (= 0.63.4)
+    - React-jsiexecutor (= 0.63.4)
     - Yoga
-  - React-Core/Default (0.63.2):
+  - React-Core/Default (0.63.4):
     - Folly (= 2020.01.13.00)
     - glog
-    - React-cxxreact (= 0.63.2)
-    - React-jsi (= 0.63.2)
-    - React-jsiexecutor (= 0.63.2)
+    - React-cxxreact (= 0.63.4)
+    - React-jsi (= 0.63.4)
+    - React-jsiexecutor (= 0.63.4)
     - Yoga
-  - React-Core/DevSupport (0.63.2):
+  - React-Core/DevSupport (0.63.4):
     - Folly (= 2020.01.13.00)
     - glog
-    - React-Core/Default (= 0.63.2)
-    - React-Core/RCTWebSocket (= 0.63.2)
-    - React-cxxreact (= 0.63.2)
-    - React-jsi (= 0.63.2)
-    - React-jsiexecutor (= 0.63.2)
-    - React-jsinspector (= 0.63.2)
+    - React-Core/Default (= 0.63.4)
+    - React-Core/RCTWebSocket (= 0.63.4)
+    - React-cxxreact (= 0.63.4)
+    - React-jsi (= 0.63.4)
+    - React-jsiexecutor (= 0.63.4)
+    - React-jsinspector (= 0.63.4)
     - Yoga
-  - React-Core/RCTActionSheetHeaders (0.63.2):
+  - React-Core/RCTActionSheetHeaders (0.63.4):
     - Folly (= 2020.01.13.00)
     - glog
     - React-Core/Default
-    - React-cxxreact (= 0.63.2)
-    - React-jsi (= 0.63.2)
-    - React-jsiexecutor (= 0.63.2)
+    - React-cxxreact (= 0.63.4)
+    - React-jsi (= 0.63.4)
+    - React-jsiexecutor (= 0.63.4)
     - Yoga
-  - React-Core/RCTAnimationHeaders (0.63.2):
+  - React-Core/RCTAnimationHeaders (0.63.4):
     - Folly (= 2020.01.13.00)
     - glog
     - React-Core/Default
-    - React-cxxreact (= 0.63.2)
-    - React-jsi (= 0.63.2)
-    - React-jsiexecutor (= 0.63.2)
+    - React-cxxreact (= 0.63.4)
+    - React-jsi (= 0.63.4)
+    - React-jsiexecutor (= 0.63.4)
     - Yoga
-  - React-Core/RCTBlobHeaders (0.63.2):
+  - React-Core/RCTBlobHeaders (0.63.4):
     - Folly (= 2020.01.13.00)
     - glog
     - React-Core/Default
-    - React-cxxreact (= 0.63.2)
-    - React-jsi (= 0.63.2)
-    - React-jsiexecutor (= 0.63.2)
+    - React-cxxreact (= 0.63.4)
+    - React-jsi (= 0.63.4)
+    - React-jsiexecutor (= 0.63.4)
     - Yoga
-  - React-Core/RCTImageHeaders (0.63.2):
+  - React-Core/RCTImageHeaders (0.63.4):
     - Folly (= 2020.01.13.00)
     - glog
     - React-Core/Default
-    - React-cxxreact (= 0.63.2)
-    - React-jsi (= 0.63.2)
-    - React-jsiexecutor (= 0.63.2)
+    - React-cxxreact (= 0.63.4)
+    - React-jsi (= 0.63.4)
+    - React-jsiexecutor (= 0.63.4)
     - Yoga
-  - React-Core/RCTLinkingHeaders (0.63.2):
+  - React-Core/RCTLinkingHeaders (0.63.4):
     - Folly (= 2020.01.13.00)
     - glog
     - React-Core/Default
-    - React-cxxreact (= 0.63.2)
-    - React-jsi (= 0.63.2)
-    - React-jsiexecutor (= 0.63.2)
+    - React-cxxreact (= 0.63.4)
+    - React-jsi (= 0.63.4)
+    - React-jsiexecutor (= 0.63.4)
     - Yoga
-  - React-Core/RCTNetworkHeaders (0.63.2):
+  - React-Core/RCTNetworkHeaders (0.63.4):
     - Folly (= 2020.01.13.00)
     - glog
     - React-Core/Default
-    - React-cxxreact (= 0.63.2)
-    - React-jsi (= 0.63.2)
-    - React-jsiexecutor (= 0.63.2)
+    - React-cxxreact (= 0.63.4)
+    - React-jsi (= 0.63.4)
+    - React-jsiexecutor (= 0.63.4)
     - Yoga
-  - React-Core/RCTSettingsHeaders (0.63.2):
+  - React-Core/RCTSettingsHeaders (0.63.4):
     - Folly (= 2020.01.13.00)
     - glog
     - React-Core/Default
-    - React-cxxreact (= 0.63.2)
-    - React-jsi (= 0.63.2)
-    - React-jsiexecutor (= 0.63.2)
+    - React-cxxreact (= 0.63.4)
+    - React-jsi (= 0.63.4)
+    - React-jsiexecutor (= 0.63.4)
     - Yoga
-  - React-Core/RCTTextHeaders (0.63.2):
+  - React-Core/RCTTextHeaders (0.63.4):
     - Folly (= 2020.01.13.00)
     - glog
     - React-Core/Default
-    - React-cxxreact (= 0.63.2)
-    - React-jsi (= 0.63.2)
-    - React-jsiexecutor (= 0.63.2)
+    - React-cxxreact (= 0.63.4)
+    - React-jsi (= 0.63.4)
+    - React-jsiexecutor (= 0.63.4)
     - Yoga
-  - React-Core/RCTVibrationHeaders (0.63.2):
+  - React-Core/RCTVibrationHeaders (0.63.4):
     - Folly (= 2020.01.13.00)
     - glog
     - React-Core/Default
-    - React-cxxreact (= 0.63.2)
-    - React-jsi (= 0.63.2)
-    - React-jsiexecutor (= 0.63.2)
+    - React-cxxreact (= 0.63.4)
+    - React-jsi (= 0.63.4)
+    - React-jsiexecutor (= 0.63.4)
     - Yoga
-  - React-Core/RCTWebSocket (0.63.2):
+  - React-Core/RCTWebSocket (0.63.4):
     - Folly (= 2020.01.13.00)
     - glog
-    - React-Core/Default (= 0.63.2)
-    - React-cxxreact (= 0.63.2)
-    - React-jsi (= 0.63.2)
-    - React-jsiexecutor (= 0.63.2)
+    - React-Core/Default (= 0.63.4)
+    - React-cxxreact (= 0.63.4)
+    - React-jsi (= 0.63.4)
+    - React-jsiexecutor (= 0.63.4)
     - Yoga
-  - React-CoreModules (0.63.2):
-    - FBReactNativeSpec (= 0.63.2)
+  - React-CoreModules (0.63.4):
+    - FBReactNativeSpec (= 0.63.4)
     - Folly (= 2020.01.13.00)
-    - RCTTypeSafety (= 0.63.2)
-    - React-Core/CoreModulesHeaders (= 0.63.2)
-    - React-jsi (= 0.63.2)
-    - React-RCTImage (= 0.63.2)
-    - ReactCommon/turbomodule/core (= 0.63.2)
-  - React-cxxreact (0.63.2):
+    - RCTTypeSafety (= 0.63.4)
+    - React-Core/CoreModulesHeaders (= 0.63.4)
+    - React-jsi (= 0.63.4)
+    - React-RCTImage (= 0.63.4)
+    - ReactCommon/turbomodule/core (= 0.63.4)
+  - React-cxxreact (0.63.4):
     - boost-for-react-native (= 1.63.0)
     - DoubleConversion
     - Folly (= 2020.01.13.00)
     - glog
-    - React-callinvoker (= 0.63.2)
-    - React-jsinspector (= 0.63.2)
-  - React-jsi (0.63.2):
+    - React-callinvoker (= 0.63.4)
+    - React-jsinspector (= 0.63.4)
+  - React-jsi (0.63.4):
     - boost-for-react-native (= 1.63.0)
     - DoubleConversion
     - Folly (= 2020.01.13.00)
     - glog
-    - React-jsi/Default (= 0.63.2)
-  - React-jsi/Default (0.63.2):
+    - React-jsi/Default (= 0.63.4)
+  - React-jsi/Default (0.63.4):
     - boost-for-react-native (= 1.63.0)
     - DoubleConversion
     - Folly (= 2020.01.13.00)
     - glog
-  - React-jsiexecutor (0.63.2):
+  - React-jsiexecutor (0.63.4):
     - DoubleConversion
     - Folly (= 2020.01.13.00)
     - glog
-    - React-cxxreact (= 0.63.2)
-    - React-jsi (= 0.63.2)
-  - React-jsinspector (0.63.2)
-  - "react-native-apollos-player (2.0.0-alpha.15+9ef8d244)":
+    - React-cxxreact (= 0.63.4)
+    - React-jsi (= 0.63.4)
+  - React-jsinspector (0.63.4)
+  - react-native-apollos-player (2.29.3):
     - React
   - react-native-config (0.11.7):
     - React
   - react-native-geolocation (2.0.2):
     - React
-  - react-native-google-cast (3.3.0):
+  - react-native-geolocation-service (5.1.1):
     - React
-    - react-native-google-cast/Default (= 3.3.0)
-  - react-native-google-cast/Default (3.3.0):
-    - google-cast-sdk (<= 4.3.0)
-    - React
-    - react-native-google-cast/RNGoogleCast
-  - react-native-google-cast/RNGoogleCast (3.3.0):
-    - React
-  - react-native-image-picker (0.28.0):
-    - React
-  - react-native-maps (0.26.1):
-    - React
-  - react-native-music-control (0.10.8):
+  - react-native-image-picker (3.1.4):
+    - React-Core
+  - react-native-maps (0.27.1):
     - React
-  - react-native-onesignal (3.9.1):
-    - OneSignal (= 2.15.2)
+  - react-native-music-control (1.4.0):
+    - React-Core
+  - react-native-onesignal (4.0.8):
+    - OneSignal (= 3.4.3)
     - React (< 1.0.0, >= 0.13.0)
   - react-native-passkit-wallet (0.1.4):
     - React
@@ -284,68 +272,68 @@ PODS:
     - react-native-video/Video (= 5.0.2)
   - react-native-video/Video (5.0.2):
     - React
-  - react-native-webview (7.6.0):
-    - React
-  - React-RCTActionSheet (0.63.2):
-    - React-Core/RCTActionSheetHeaders (= 0.63.2)
-  - React-RCTAnimation (0.63.2):
-    - FBReactNativeSpec (= 0.63.2)
+  - react-native-webview (11.4.1):
+    - React-Core
+  - React-RCTActionSheet (0.63.4):
+    - React-Core/RCTActionSheetHeaders (= 0.63.4)
+  - React-RCTAnimation (0.63.4):
+    - FBReactNativeSpec (= 0.63.4)
     - Folly (= 2020.01.13.00)
-    - RCTTypeSafety (= 0.63.2)
-    - React-Core/RCTAnimationHeaders (= 0.63.2)
-    - React-jsi (= 0.63.2)
-    - ReactCommon/turbomodule/core (= 0.63.2)
-  - React-RCTBlob (0.63.2):
-    - FBReactNativeSpec (= 0.63.2)
+    - RCTTypeSafety (= 0.63.4)
+    - React-Core/RCTAnimationHeaders (= 0.63.4)
+    - React-jsi (= 0.63.4)
+    - ReactCommon/turbomodule/core (= 0.63.4)
+  - React-RCTBlob (0.63.4):
+    - FBReactNativeSpec (= 0.63.4)
     - Folly (= 2020.01.13.00)
-    - React-Core/RCTBlobHeaders (= 0.63.2)
-    - React-Core/RCTWebSocket (= 0.63.2)
-    - React-jsi (= 0.63.2)
-    - React-RCTNetwork (= 0.63.2)
-    - ReactCommon/turbomodule/core (= 0.63.2)
-  - React-RCTImage (0.63.2):
-    - FBReactNativeSpec (= 0.63.2)
+    - React-Core/RCTBlobHeaders (= 0.63.4)
+    - React-Core/RCTWebSocket (= 0.63.4)
+    - React-jsi (= 0.63.4)
+    - React-RCTNetwork (= 0.63.4)
+    - ReactCommon/turbomodule/core (= 0.63.4)
+  - React-RCTImage (0.63.4):
+    - FBReactNativeSpec (= 0.63.4)
     - Folly (= 2020.01.13.00)
-    - RCTTypeSafety (= 0.63.2)
-    - React-Core/RCTImageHeaders (= 0.63.2)
-    - React-jsi (= 0.63.2)
-    - React-RCTNetwork (= 0.63.2)
-    - ReactCommon/turbomodule/core (= 0.63.2)
-  - React-RCTLinking (0.63.2):
-    - FBReactNativeSpec (= 0.63.2)
-    - React-Core/RCTLinkingHeaders (= 0.63.2)
-    - React-jsi (= 0.63.2)
-    - ReactCommon/turbomodule/core (= 0.63.2)
-  - React-RCTNetwork (0.63.2):
-    - FBReactNativeSpec (= 0.63.2)
+    - RCTTypeSafety (= 0.63.4)
+    - React-Core/RCTImageHeaders (= 0.63.4)
+    - React-jsi (= 0.63.4)
+    - React-RCTNetwork (= 0.63.4)
+    - ReactCommon/turbomodule/core (= 0.63.4)
+  - React-RCTLinking (0.63.4):
+    - FBReactNativeSpec (= 0.63.4)
+    - React-Core/RCTLinkingHeaders (= 0.63.4)
+    - React-jsi (= 0.63.4)
+    - ReactCommon/turbomodule/core (= 0.63.4)
+  - React-RCTNetwork (0.63.4):
+    - FBReactNativeSpec (= 0.63.4)
     - Folly (= 2020.01.13.00)
-    - RCTTypeSafety (= 0.63.2)
-    - React-Core/RCTNetworkHeaders (= 0.63.2)
-    - React-jsi (= 0.63.2)
-    - ReactCommon/turbomodule/core (= 0.63.2)
-  - React-RCTSettings (0.63.2):
-    - FBReactNativeSpec (= 0.63.2)
+    - RCTTypeSafety (= 0.63.4)
+    - React-Core/RCTNetworkHeaders (= 0.63.4)
+    - React-jsi (= 0.63.4)
+    - ReactCommon/turbomodule/core (= 0.63.4)
+  - React-RCTSettings (0.63.4):
+    - FBReactNativeSpec (= 0.63.4)
     - Folly (= 2020.01.13.00)
-    - RCTTypeSafety (= 0.63.2)
-    - React-Core/RCTSettingsHeaders (= 0.63.2)
-    - React-jsi (= 0.63.2)
-    - ReactCommon/turbomodule/core (= 0.63.2)
-  - React-RCTText (0.63.2):
-    - React-Core/RCTTextHeaders (= 0.63.2)
-  - React-RCTVibration (0.63.2):
-    - FBReactNativeSpec (= 0.63.2)
+    - RCTTypeSafety (= 0.63.4)
+    - React-Core/RCTSettingsHeaders (= 0.63.4)
+    - React-jsi (= 0.63.4)
+    - ReactCommon/turbomodule/core (= 0.63.4)
+  - React-RCTText (0.63.4):
+    - React-Core/RCTTextHeaders (= 0.63.4)
+  - React-RCTVibration (0.63.4):
+    - FBReactNativeSpec (= 0.63.4)
     - Folly (= 2020.01.13.00)
-    - React-Core/RCTVibrationHeaders (= 0.63.2)
-    - React-jsi (= 0.63.2)
-    - ReactCommon/turbomodule/core (= 0.63.2)
-  - ReactCommon/turbomodule/core (0.63.2):
+    - React-Core/RCTVibrationHeaders (= 0.63.4)
+    - React-jsi (= 0.63.4)
+    - ReactCommon/turbomodule/core (= 0.63.4)
+  - ReactCommon/turbomodule/core (0.63.4):
     - DoubleConversion
     - Folly (= 2020.01.13.00)
     - glog
-    - React-callinvoker (= 0.63.2)
-    - React-Core (= 0.63.2)
-    - React-cxxreact (= 0.63.2)
-    - React-jsi (= 0.63.2)
+    - React-callinvoker (= 0.63.4)
+    - React-Core (= 0.63.4)
+    - React-cxxreact (= 0.63.4)
+    - React-jsi (= 0.63.4)
   - rn-fetch-blob (0.10.16):
     - React-Core
   - RNAirplay (1.0.0):
@@ -363,16 +351,43 @@ PODS:
     - React-Core
   - RNDeviceInfo (4.0.1):
     - React
-  - RNGestureHandler (1.6.1):
-    - React
+  - RNGestureHandler (1.10.3):
+    - React-Core
   - RNInAppBrowser (3.5.1):
     - React-Core
   - RNPermissions (2.2.2):
     - React-Core
-  - RNReanimated (1.9.0):
-    - React
-  - RNScreens (2.9.0):
+  - RNReanimated (2.0.0):
+    - DoubleConversion
+    - FBLazyVector
+    - FBReactNativeSpec
+    - Folly
+    - glog
+    - RCTRequired
+    - RCTTypeSafety
     - React
+    - React-callinvoker
+    - React-Core
+    - React-Core/DevSupport
+    - React-Core/RCTWebSocket
+    - React-CoreModules
+    - React-cxxreact
+    - React-jsi
+    - React-jsiexecutor
+    - React-jsinspector
+    - React-RCTActionSheet
+    - React-RCTAnimation
+    - React-RCTBlob
+    - React-RCTImage
+    - React-RCTLinking
+    - React-RCTNetwork
+    - React-RCTSettings
+    - React-RCTText
+    - React-RCTVibration
+    - ReactCommon/turbomodule/core
+    - Yoga
+  - RNScreens (3.2.0):
+    - React-Core
   - RNSVG (9.13.6):
     - React
   - Yoga (1.14.0)
@@ -384,27 +399,28 @@ DEPENDENCIES:
   - DoubleConversion (from `../node_modules/react-native/third-party-podspecs/DoubleConversion.podspec`)
   - FBLazyVector (from `../node_modules/react-native/Libraries/FBLazyVector`)
   - FBReactNativeSpec (from `../node_modules/react-native/Libraries/FBReactNativeSpec`)
-  - Flipper (~> 0.41.1)
+  - Flipper (= 0.75.1)
   - Flipper-DoubleConversion (= 1.1.7)
-  - Flipper-Folly (~> 2.2)
+  - Flipper-Folly (= 2.5.3)
   - Flipper-Glog (= 0.3.6)
   - Flipper-PeerTalk (~> 0.0.4)
-  - Flipper-RSocket (~> 1.1)
-  - FlipperKit (~> 0.41.1)
-  - FlipperKit/Core (~> 0.41.1)
-  - FlipperKit/CppBridge (~> 0.41.1)
-  - FlipperKit/FBCxxFollyDynamicConvert (~> 0.41.1)
-  - FlipperKit/FBDefines (~> 0.41.1)
-  - FlipperKit/FKPortForwarding (~> 0.41.1)
-  - FlipperKit/FlipperKitHighlightOverlay (~> 0.41.1)
-  - FlipperKit/FlipperKitLayoutPlugin (~> 0.41.1)
-  - FlipperKit/FlipperKitLayoutTextSearchable (~> 0.41.1)
-  - FlipperKit/FlipperKitNetworkPlugin (~> 0.41.1)
-  - FlipperKit/FlipperKitReactPlugin (~> 0.41.1)
-  - FlipperKit/FlipperKitUserDefaultsPlugin (~> 0.41.1)
-  - FlipperKit/SKIOSNetworkPlugin (~> 0.41.1)
+  - Flipper-RSocket (= 1.3.1)
+  - FlipperKit (= 0.75.1)
+  - FlipperKit/Core (= 0.75.1)
+  - FlipperKit/CppBridge (= 0.75.1)
+  - FlipperKit/FBCxxFollyDynamicConvert (= 0.75.1)
+  - FlipperKit/FBDefines (= 0.75.1)
+  - FlipperKit/FKPortForwarding (= 0.75.1)
+  - FlipperKit/FlipperKitHighlightOverlay (= 0.75.1)
+  - FlipperKit/FlipperKitLayoutPlugin (= 0.75.1)
+  - FlipperKit/FlipperKitLayoutTextSearchable (= 0.75.1)
+  - FlipperKit/FlipperKitNetworkPlugin (= 0.75.1)
+  - FlipperKit/FlipperKitReactPlugin (= 0.75.1)
+  - FlipperKit/FlipperKitUserDefaultsPlugin (= 0.75.1)
+  - FlipperKit/SKIOSNetworkPlugin (= 0.75.1)
   - Folly (from `../node_modules/react-native/third-party-podspecs/Folly.podspec`)
   - glog (from `../node_modules/react-native/third-party-podspecs/glog.podspec`)
+  - OneSignal (< 4.0, >= 3.0)
   - Permission-Notifications (from `../node_modules/react-native-permissions/ios/Notifications.podspec`)
   - Permission-PhotoLibrary (from `../node_modules/react-native-permissions/ios/PhotoLibrary.podspec`)
   - RCTRequired (from `../node_modules/react-native/Libraries/RCTRequired`)
@@ -422,7 +438,7 @@ DEPENDENCIES:
   - "react-native-apollos-player (from `../node_modules/@apollosproject/ui-media-player`)"
   - react-native-config (from `../node_modules/react-native-config`)
   - "react-native-geolocation (from `../node_modules/@react-native-community/geolocation`)"
-  - react-native-google-cast (from `../node_modules/react-native-google-cast/ios`)
+  - react-native-geolocation-service (from `../node_modules/react-native-geolocation-service`)
   - react-native-image-picker (from `../node_modules/react-native-image-picker`)
   - react-native-maps (from `../node_modules/react-native-maps`)
   - react-native-music-control (from `../node_modules/react-native-music-control`)
@@ -464,7 +480,6 @@ SPEC REPOS:
     - AstronomerAnalytics
     - boost-for-react-native
     - CocoaAsyncSocket
-    - CocoaLibEvent
     - Flipper
     - Flipper-DoubleConversion
     - Flipper-Folly
@@ -472,7 +487,7 @@ SPEC REPOS:
     - Flipper-PeerTalk
     - Flipper-RSocket
     - FlipperKit
-    - google-cast-sdk
+    - libevent
     - OneSignal
     - OpenSSL-Universal
     - YogaKit
@@ -520,8 +535,8 @@ EXTERNAL SOURCES:
     :path: "../node_modules/react-native-config"
   react-native-geolocation:
     :path: "../node_modules/@react-native-community/geolocation"
-  react-native-google-cast:
-    :path: "../node_modules/react-native-google-cast/ios"
+  react-native-geolocation-service:
+    :path: "../node_modules/react-native-geolocation-service"
   react-native-image-picker:
     :path: "../node_modules/react-native-image-picker"
   react-native-maps:
@@ -597,59 +612,58 @@ SPEC CHECKSUMS:
   AstronomerAnalytics: 36f48678a387e41481650edd6247c6c95d994131
   boost-for-react-native: 39c7adb57c4e60d6c5479dd8623128eb5b3f0f2c
   BVLinearGradient: e3aad03778a456d77928f594a649e96995f1c872
-  CocoaAsyncSocket: 694058e7c0ed05a9e217d1b3c7ded962f4180845
-  CocoaLibEvent: 2fab71b8bd46dd33ddb959f7928ec5909f838e3f
+  CocoaAsyncSocket: 065fd1e645c7abab64f7a6a2007a48038fdc6a99
   DoubleConversion: cde416483dac037923206447da6e1454df403714
-  FBLazyVector: 3ef4a7f62e7db01092f9d517d2ebc0d0677c4a37
-  FBReactNativeSpec: dc7fa9088f0f2a998503a352b0554d69a4391c5a
-  Flipper: 33585e2d9810fe5528346be33bcf71b37bb7ae13
+  FBLazyVector: 3bb422f41b18121b71783a905c10e58606f7dc3e
+  FBReactNativeSpec: f2c97f2529dd79c083355182cc158c9f98f4bd6e
+  Flipper: d3da1aa199aad94455ae725e9f3aa43f3ec17021
   Flipper-DoubleConversion: 38631e41ef4f9b12861c67d17cb5518d06badc41
-  Flipper-Folly: e4493b013c02d9347d5e0cb4d128680239f6c78a
+  Flipper-Folly: 755929a4f851b2fb2c347d533a23f191b008554c
   Flipper-Glog: 1dfd6abf1e922806c52ceb8701a3599a79a200a6
   Flipper-PeerTalk: 116d8f857dc6ef55c7a5a75ea3ceaafe878aadc9
-  Flipper-RSocket: 64e7431a55835eb953b0bf984ef3b90ae9fdddd7
-  FlipperKit: bc68102cd4952a258a23c9c1b316c7bec1fecf83
+  Flipper-RSocket: 127954abe8b162fcaf68d2134d34dc2bd7076154
+  FlipperKit: 8a20b5c5fcf9436cac58551dc049867247f64b00
   Folly: b73c3869541e86821df3c387eb0af5f65addfab4
   glog: 40a13f7840415b9a77023fbcae0f1e6f43192af3
-  google-cast-sdk: 57cd67b4a0966802b2738fcbbc103125c98cc8a1
-  OneSignal: 9531e385388565f4d31797ddadbe0fcc786430ec
-  OpenSSL-Universal: ff34003318d5e1163e9529b08470708e389ffcdd
+  libevent: 4049cae6c81cdb3654a443be001fb9bdceff7913
+  OneSignal: e4dfb1912410f302dc9661ce98fc829f6c18ff6a
+  OpenSSL-Universal: 1aa4f6a6ee7256b83db99ec1ccdaa80d10f9af9b
   Permission-Notifications: 9c6b5cc4f0e6599e9fc3395b77cebddc48f1be41
   Permission-PhotoLibrary: 8227a6ed9f6a971537afe63742d54f5f23a38fe2
-  RCTRequired: f13f25e7b12f925f1f6a6a8c69d929a03c0129fe
-  RCTTypeSafety: 44982c5c8e43ff4141eb519a8ddc88059acd1f3a
-  React: e1c65dd41cb9db13b99f24608e47dd595f28ca9a
-  React-callinvoker: 552a6a6bc8b3bb794cf108ad59e5a9e2e3b4fc98
-  React-Core: 9d341e725dc9cd2f49e4c49ad1fc4e8776aa2639
-  React-CoreModules: 5335e168165da7f7083ce7147768d36d3e292318
-  React-cxxreact: d3261ec5f7d11743fbf21e263a34ea51d1f13ebc
-  React-jsi: 54245e1d5f4b690dec614a73a3795964eeef13a8
-  React-jsiexecutor: 8ca588cc921e70590820ce72b8789b02c67cce38
-  React-jsinspector: b14e62ebe7a66e9231e9581279909f2fc3db6606
-  react-native-apollos-player: 1d8cc7d9d36a87c91e8c9bf0e33c701a4160b1cc
+  RCTRequired: 082f10cd3f905d6c124597fd1c14f6f2655ff65e
+  RCTTypeSafety: 8c9c544ecbf20337d069e4ae7fd9a377aadf504b
+  React: b0a957a2c44da4113b0c4c9853d8387f8e64e615
+  React-callinvoker: c3f44dd3cb195b6aa46621fff95ded79d59043fe
+  React-Core: d3b2a1ac9a2c13c3bcde712d9281fc1c8a5b315b
+  React-CoreModules: 0581ff36cb797da0943d424f69e7098e43e9be60
+  React-cxxreact: c1480d4fda5720086c90df537ee7d285d4c57ac3
+  React-jsi: a0418934cf48f25b485631deb27c64dc40fb4c31
+  React-jsiexecutor: 93bd528844ad21dc07aab1c67cb10abae6df6949
+  React-jsinspector: 58aef7155bc9a9683f5b60b35eccea8722a4f53a
+  react-native-apollos-player: 13045c1bfd5f7065cd952a0217ad9821af2f6abc
   react-native-config: 55548054279d92e0e4566ea15a8b9b81028ec342
   react-native-geolocation: c956aeb136625c23e0dce0467664af2c437888c9
-  react-native-google-cast: 410619ef162b8b91815ecf7271502224998dee8e
-  react-native-image-picker: e6e06d4315e3c85bad17e4b2002cd29f11d202c8
-  react-native-maps: 6e499eee4eabf422ba8b6f94e993cc768bf35153
-  react-native-music-control: dcfe5b61e56a15898c4618579cb8ce612c9d21a8
-  react-native-onesignal: ad2eaab1517951e50d19fa3eccd16d3048167181
+  react-native-geolocation-service: f33626f1ae12381ca2ae60f98b2f5edd676bf95a
+  react-native-image-picker: 28d8d1f5a643119876b8b2c7d4d1dcfb2b232dd4
+  react-native-maps: f4b89da81626ad7f151a8bfcb79733295d31ce5c
+  react-native-music-control: 93b521377efdf2e49b46ccade8457f9503359b38
+  react-native-onesignal: 50b047c674b79ba700218338fdefb45220da4db5
   react-native-passkit-wallet: 51e3babdaeec4c10b5736786ebd1bfb470fcaa36
   react-native-safari-view: 955d7160d159241b8e9395d12d10ea0ef863dcdd
   react-native-safe-area-context: ef6f16c66b0797ecae1bf86c103dfb3dc16fc33d
   react-native-splash-screen: 200d11d188e2e78cea3ad319964f6142b6384865
   react-native-video: d01ed7ff1e38fa7dcc6c15c94cf505e661b7bfd0
-  react-native-webview: db4682f1698ab4b17a5e88f951031d203ff8aea8
-  React-RCTActionSheet: 910163b6b09685a35c4ebbc52b66d1bfbbe39fc5
-  React-RCTAnimation: 9a883bbe1e9d2e158d4fb53765ed64c8dc2200c6
-  React-RCTBlob: 39cf0ece1927996c4466510e25d2105f67010e13
-  React-RCTImage: de355d738727b09ad3692f2a979affbd54b5f378
-  React-RCTLinking: 8122f221d395a63364b2c0078ce284214bd04575
-  React-RCTNetwork: 8f96c7b49ea6a0f28f98258f347b6ad218bc0830
-  React-RCTSettings: 8a49622aff9c1925f5455fa340b6fe4853d64ab6
-  React-RCTText: 1b6773e776e4b33f90468c20fe3b16ca3e224bb8
-  React-RCTVibration: 4d2e726957f4087449739b595f107c0d4b6c2d2d
-  ReactCommon: a0a1edbebcac5e91338371b72ffc66aa822792ce
+  react-native-webview: 4024b67e9c91810450a5960dff60ae708fd5acd1
+  React-RCTActionSheet: 89a0ca9f4a06c1f93c26067af074ccdce0f40336
+  React-RCTAnimation: 1bde3ecc0c104c55df246eda516e0deb03c4e49b
+  React-RCTBlob: a97d378b527740cc667e03ebfa183a75231ab0f0
+  React-RCTImage: c1b1f2d3f43a4a528c8946d6092384b5c880d2f0
+  React-RCTLinking: 35ae4ab9dc0410d1fcbdce4d7623194a27214fb2
+  React-RCTNetwork: 29ec2696f8d8cfff7331fac83d3e893c95ef43ae
+  React-RCTSettings: 60f0691bba2074ef394f95d4c2265ec284e0a46a
+  React-RCTText: 5c51df3f08cb9dedc6e790161195d12bac06101c
+  React-RCTVibration: ae4f914cfe8de7d4de95ae1ea6cc8f6315d73d9d
+  ReactCommon: 73d79c7039f473b76db6ff7c6b159c478acbbb3b
   rn-fetch-blob: 651b8d076b43d0d7aa294a3d9ec16c00aab8bef9
   RNAirplay: 75777dd55dafbd3687703c3eb9c290ea6cc43248
   RNAnalytics: 360b0680753d0e1d37152a25d47aa34a015cab72
@@ -658,15 +672,15 @@ SPEC CHECKSUMS:
   RNCPicker: 2c31098349f499e7ab4da6c1ce26f7537d271062
   RNDateTimePicker: 3d1931e387248cb8f1d1d33740d4a1a82dfe622a
   RNDeviceInfo: 687c1b2ab6d86ff1ca1208783320cd144138c7f2
-  RNGestureHandler: 8f09cd560f8d533eb36da5a6c5a843af9f056b38
+  RNGestureHandler: a479ebd5ed4221a810967000735517df0d2db211
   RNInAppBrowser: 48b95ba7a4eaff5cc223bca338d3e319561dbd1b
   RNPermissions: 5df468064df661a4c8c017e2791ce90d7695eea5
-  RNReanimated: b5ccb50650ba06f6e749c7c329a1bc3ae0c88b43
-  RNScreens: c526239bbe0e957b988dacc8d75ac94ec9cb19da
+  RNReanimated: 5231286440b796e09df3bfa5c1b12b02bfe07664
+  RNScreens: c277bfc4b5bb7c2fe977d19635df6f974f95dfd6
   RNSVG: 8ba35cbeb385a52fd960fd28db9d7d18b4c2974f
-  Yoga: 7740b94929bbacbddda59bf115b5317e9a161598
+  Yoga: 4bd86afe9883422a7c4028c00e34790f560923d6
   YogaKit: f782866e155069a2cca2517aafea43200b01fd5a
 
-PODFILE CHECKSUM: ff0b6ccfe0571b896a44f129ac11790a8b809329
+PODFILE CHECKSUM: 018672643cc187bdb580850b8d0871ad9b670d36
 
-COCOAPODS: 1.8.4
+COCOAPODS: 1.10.1
diff --git a/apolloschurchapp/ios/Swift.swift b/apolloschurchapp/ios/Swift.swift
new file mode 100644
index 00000000..00a17ca7
--- /dev/null
+++ b/apolloschurchapp/ios/Swift.swift
@@ -0,0 +1,9 @@
+//
+//  Swift.swift
+//  apolloschurchapp
+//
+//  Created by Vincent Wilson on 12/16/20.
+//  Copyright © 2020 Facebook. All rights reserved.
+//
+
+import Foundation
diff --git a/apolloschurchapp/ios/apollos.p8.enc b/apolloschurchapp/ios/apollos.p8.enc
new file mode 100644
index 0000000000000000000000000000000000000000..5947bea7fec93d5d37b440d73672edab9c52142f
GIT binary patch
literal 288
zcmV+*0pI>pVQh3|WM5wyX%jgx@mTLxE<@PQRiL_b=E~B@pxV>a5AXLtucBa_d<??^
z!!?vOBqK9lmA}$c6bJxfO|&)}SQ53b!NI$dhNd0V&wfV*gV(O0xlG&-wSqynWywL>
z43&`zI5BhZ1M@76V)E<(TesS)g<c413<s|)kT5T?SnO&2+4O(nR&1X|OcH?nbVDk&
z)nUt3SKY`lqV7vnNLpV(+c^CICP9J4q1zRzk?H@s>*T0*ZxA>Y?s@x5?r6n%?+B@g
zFeOe)%pjV@Rbh8+X^CWC@#RK)fr-3SP?0K8z@<N%6;CxTe>_r$YT*K(Plo*V{OM4P
mbUX=AX)QI_vi{0DiUrTzVViYl;j$%ACsIyVnzZOrX+vd3L5$h}

literal 0
HcmV?d00001

diff --git a/apolloschurchapp/ios/apolloschurchapp-tvOS-Bridging-Header.h b/apolloschurchapp/ios/apolloschurchapp-tvOS-Bridging-Header.h
new file mode 100644
index 00000000..1b2cb5d6
--- /dev/null
+++ b/apolloschurchapp/ios/apolloschurchapp-tvOS-Bridging-Header.h
@@ -0,0 +1,4 @@
+//
+//  Use this file to import your target's public headers that you would like to expose to Swift.
+//
+
diff --git a/apolloschurchapp/ios/apolloschurchapp-tvOS/Info.plist b/apolloschurchapp/ios/apolloschurchapp-tvOS/Info.plist
index facf0210..99636519 100644
--- a/apolloschurchapp/ios/apolloschurchapp-tvOS/Info.plist
+++ b/apolloschurchapp/ios/apolloschurchapp-tvOS/Info.plist
@@ -19,7 +19,7 @@
 	<key>CFBundleSignature</key>
 	<string>????</string>
 	<key>CFBundleVersion</key>
-	<string>274</string>
+	<string>670</string>
 	<key>LSRequiresIPhoneOS</key>
 	<true />
 	<key>UILaunchStoryboardName</key>
diff --git a/apolloschurchapp/ios/apolloschurchapp-tvOSTests/Info.plist b/apolloschurchapp/ios/apolloschurchapp-tvOSTests/Info.plist
index 9433cce0..b3f0aac9 100644
--- a/apolloschurchapp/ios/apolloschurchapp-tvOSTests/Info.plist
+++ b/apolloschurchapp/ios/apolloschurchapp-tvOSTests/Info.plist
@@ -19,6 +19,6 @@
 	<key>CFBundleSignature</key>
 	<string>????</string>
 	<key>CFBundleVersion</key>
-	<string>274</string>
+	<string>670</string>
 </dict>
 </plist>
diff --git a/apolloschurchapp/ios/apolloschurchapp.xcodeproj/project.pbxproj b/apolloschurchapp/ios/apolloschurchapp.xcodeproj/project.pbxproj
index 5f462427..7922c128 100644
--- a/apolloschurchapp/ios/apolloschurchapp.xcodeproj/project.pbxproj
+++ b/apolloschurchapp/ios/apolloschurchapp.xcodeproj/project.pbxproj
@@ -10,11 +10,12 @@
 		00E356F31AD99517003FC87E /* apolloschurchappTests.m in Sources */ = {isa = PBXBuildFile; fileRef = 00E356F21AD99517003FC87E /* apolloschurchappTests.m */; };
 		01F091B02048490A8F9EF4FE /* Inter-UI-Italic.otf in Resources */ = {isa = PBXBuildFile; fileRef = 63F6EE53A9B44B4388B5F1C2 /* Inter-UI-Italic.otf */; };
 		08CE105F17284254AD54AF84 /* DroidSerif-Bold.ttf in Resources */ = {isa = PBXBuildFile; fileRef = E3B8A0AC5A6B4FABB3BDF6CB /* DroidSerif-Bold.ttf */; };
+		0FAB39D70A1174DFF70E38DA /* libPods-OneSignalNotificationServiceExtension.a in Frameworks */ = {isa = PBXBuildFile; fileRef = CB0031860411B96BE5F3DCD0 /* libPods-OneSignalNotificationServiceExtension.a */; };
 		13B07FBC1A68108700A75B9A /* AppDelegate.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB01A68108700A75B9A /* AppDelegate.m */; };
 		13B07FBF1A68108700A75B9A /* Images.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB51A68108700A75B9A /* Images.xcassets */; };
 		13B07FC11A68108700A75B9A /* main.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB71A68108700A75B9A /* main.m */; };
 		1C48DCDE11AC47C48E918489 /* Inter-UI-Medium.otf in Resources */ = {isa = PBXBuildFile; fileRef = DC74A378C1CC40E4B6192D7F /* Inter-UI-Medium.otf */; };
-		2AE17F608689DAE577F28E4D /* BuildFile in Frameworks */ = {isa = PBXBuildFile; };
+		2AE17F608689DAE577F28E4D /* (null) in Frameworks */ = {isa = PBXBuildFile; };
 		2D02E4BC1E0B4A80006451C7 /* AppDelegate.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB01A68108700A75B9A /* AppDelegate.m */; };
 		2D02E4BD1E0B4A84006451C7 /* Images.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB51A68108700A75B9A /* Images.xcassets */; };
 		2D02E4BF1E0B4AB3006451C7 /* main.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB71A68108700A75B9A /* main.m */; };
@@ -34,6 +35,8 @@
 		93A2B0A9328A46A4B7DD5EFA /* DroidSerif-Regular.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 4E007B33EDD74B82AEF02C24 /* DroidSerif-Regular.ttf */; };
 		AB3BD177B8A14193A5EEDDF8 /* Inter-UI-Regular.otf in Resources */ = {isa = PBXBuildFile; fileRef = A613256118404CB691DE2C8E /* Inter-UI-Regular.otf */; };
 		B02F194A3F6A4FE29AC799B4 /* DroidSerif-BoldItalic.ttf in Resources */ = {isa = PBXBuildFile; fileRef = A93F9D112A034626A9421759 /* DroidSerif-BoldItalic.ttf */; };
+		BF49AE872649A852001C7B78 /* NotificationService.swift in Sources */ = {isa = PBXBuildFile; fileRef = BF49AE862649A852001C7B78 /* NotificationService.swift */; };
+		BF49AE8B2649A852001C7B78 /* OneSignalNotificationServiceExtension.appex in Embed App Extensions */ = {isa = PBXBuildFile; fileRef = BF49AE842649A852001C7B78 /* OneSignalNotificationServiceExtension.appex */; settings = {ATTRIBUTES = (RemoveHeadersOnCopy, ); }; };
 		BFC9F08425757C2D00FF49D7 /* File.swift in Sources */ = {isa = PBXBuildFile; fileRef = BFC9F08325757C2D00FF49D7 /* File.swift */; };
 		E875558F3FB8FA2024EF7DC2 /* libPods-apolloschurchapp.a in Frameworks */ = {isa = PBXBuildFile; fileRef = DDB6B5B7B6A0D1ECB68CF0DD /* libPods-apolloschurchapp.a */; };
 		ED297163215061F000B7C4FE /* JavaScriptCore.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = ED297162215061F000B7C4FE /* JavaScriptCore.framework */; };
@@ -57,8 +60,29 @@
 			remoteGlobalIDString = 2D02E47A1E0B4A5D006451C7;
 			remoteInfo = "apolloschurchapp-tvOS";
 		};
+		BF49AE892649A852001C7B78 /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 83CBB9F71A601CBA00E9B192 /* Project object */;
+			proxyType = 1;
+			remoteGlobalIDString = BF49AE832649A852001C7B78;
+			remoteInfo = OneSignalNotificationServiceExtension;
+		};
 /* End PBXContainerItemProxy section */
 
+/* Begin PBXCopyFilesBuildPhase section */
+		BF49AE8C2649A852001C7B78 /* Embed App Extensions */ = {
+			isa = PBXCopyFilesBuildPhase;
+			buildActionMask = 2147483647;
+			dstPath = "";
+			dstSubfolderSpec = 13;
+			files = (
+				BF49AE8B2649A852001C7B78 /* OneSignalNotificationServiceExtension.appex in Embed App Extensions */,
+			);
+			name = "Embed App Extensions";
+			runOnlyForDeploymentPostprocessing = 0;
+		};
+/* End PBXCopyFilesBuildPhase section */
+
 /* Begin PBXFileReference section */
 		008F07F21AC5B25A0029DE68 /* main.jsbundle */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = main.jsbundle; sourceTree = "<group>"; };
 		00E356EE1AD99517003FC87E /* apolloschurchappTests.xctest */ = {isa = PBXFileReference; explicitFileType = wrapper.cfbundle; includeInIndex = 0; path = apolloschurchappTests.xctest; sourceTree = BUILT_PRODUCTS_DIR; };
@@ -84,6 +108,7 @@
 		4E007B33EDD74B82AEF02C24 /* DroidSerif-Regular.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "DroidSerif-Regular.ttf"; path = "../assets/fonts/DroidSerif-Regular.ttf"; sourceTree = "<group>"; };
 		54F271B8EB67A4997A2C7D96 /* Pods-apolloschurchapp.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-apolloschurchapp.debug.xcconfig"; path = "Target Support Files/Pods-apolloschurchapp/Pods-apolloschurchapp.debug.xcconfig"; sourceTree = "<group>"; };
 		59218083CDDF8EF2ABA9BCD1 /* Pods-apolloschurchapp-apolloschurchappTests.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-apolloschurchapp-apolloschurchappTests.debug.xcconfig"; path = "Target Support Files/Pods-apolloschurchapp-apolloschurchappTests/Pods-apolloschurchapp-apolloschurchappTests.debug.xcconfig"; sourceTree = "<group>"; };
+		59B7EF0894518FA2172F644D /* Pods-OneSignalNotificationServiceExtension.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-OneSignalNotificationServiceExtension.debug.xcconfig"; path = "Target Support Files/Pods-OneSignalNotificationServiceExtension/Pods-OneSignalNotificationServiceExtension.debug.xcconfig"; sourceTree = "<group>"; };
 		5A5A2BC2998547F4816B82E4 /* Inter-UI-BlackItalic.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-BlackItalic.otf"; path = "../assets/fonts/Inter-UI-BlackItalic.otf"; sourceTree = "<group>"; };
 		63F6EE53A9B44B4388B5F1C2 /* Inter-UI-Italic.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-Italic.otf"; path = "../assets/fonts/Inter-UI-Italic.otf"; sourceTree = "<group>"; };
 		745C835CA2F1E1EC2425152A /* Pods-apolloschurchapp-tvOS.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-apolloschurchapp-tvOS.debug.xcconfig"; path = "Target Support Files/Pods-apolloschurchapp-tvOS/Pods-apolloschurchapp-tvOS.debug.xcconfig"; sourceTree = "<group>"; };
@@ -94,11 +119,17 @@
 		AC02408E578A898123910157 /* libPods-apolloschurchapp-tvOS-apolloschurchapp-tvOSTests.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-apolloschurchapp-tvOS-apolloschurchapp-tvOSTests.a"; sourceTree = BUILT_PRODUCTS_DIR; };
 		ADC3D2DB245545ADB1CAB3FE /* DroidSerif-Italic.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "DroidSerif-Italic.ttf"; path = "../assets/fonts/DroidSerif-Italic.ttf"; sourceTree = "<group>"; };
 		AE85030F59F256E90D5A4C2B /* Pods-apolloschurchapp-tvOS.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-apolloschurchapp-tvOS.release.xcconfig"; path = "Target Support Files/Pods-apolloschurchapp-tvOS/Pods-apolloschurchapp-tvOS.release.xcconfig"; sourceTree = "<group>"; };
+		BF49AE842649A852001C7B78 /* OneSignalNotificationServiceExtension.appex */ = {isa = PBXFileReference; explicitFileType = "wrapper.app-extension"; includeInIndex = 0; path = OneSignalNotificationServiceExtension.appex; sourceTree = BUILT_PRODUCTS_DIR; };
+		BF49AE862649A852001C7B78 /* NotificationService.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = NotificationService.swift; sourceTree = "<group>"; };
+		BF49AE882649A852001C7B78 /* Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; path = Info.plist; sourceTree = "<group>"; };
+		BFC57C392649ADC400EC15D9 /* OneSignalNotificationServiceExtension.entitlements */ = {isa = PBXFileReference; lastKnownFileType = text.plist.entitlements; path = OneSignalNotificationServiceExtension.entitlements; sourceTree = "<group>"; };
 		BFC9F08225757C2D00FF49D7 /* apolloschurchapp-Bridging-Header.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = "apolloschurchapp-Bridging-Header.h"; sourceTree = "<group>"; };
 		BFC9F08325757C2D00FF49D7 /* File.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = File.swift; sourceTree = "<group>"; };
 		C6895BD78D40E00368BEB025 /* Pods-apolloschurchapp-apolloschurchappTests.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-apolloschurchapp-apolloschurchappTests.release.xcconfig"; path = "Target Support Files/Pods-apolloschurchapp-apolloschurchappTests/Pods-apolloschurchapp-apolloschurchappTests.release.xcconfig"; sourceTree = "<group>"; };
+		CB0031860411B96BE5F3DCD0 /* libPods-OneSignalNotificationServiceExtension.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-OneSignalNotificationServiceExtension.a"; sourceTree = BUILT_PRODUCTS_DIR; };
 		D394E3064D75710E81C51EB0 /* Pods-apolloschurchapp-tvOSTests.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-apolloschurchapp-tvOSTests.debug.xcconfig"; path = "Target Support Files/Pods-apolloschurchapp-tvOSTests/Pods-apolloschurchapp-tvOSTests.debug.xcconfig"; sourceTree = "<group>"; };
 		D5157D807E164356ADE87867 /* Inter-UI-Bold.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-Bold.otf"; path = "../assets/fonts/Inter-UI-Bold.otf"; sourceTree = "<group>"; };
+		D73A12BF0099DED435E951E7 /* Pods-OneSignalNotificationServiceExtension.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-OneSignalNotificationServiceExtension.release.xcconfig"; path = "Target Support Files/Pods-OneSignalNotificationServiceExtension/Pods-OneSignalNotificationServiceExtension.release.xcconfig"; sourceTree = "<group>"; };
 		DA9745795726553C6FA9E7A8 /* Pods-apolloschurchapp-tvOSTests.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-apolloschurchapp-tvOSTests.release.xcconfig"; path = "Target Support Files/Pods-apolloschurchapp-tvOSTests/Pods-apolloschurchapp-tvOSTests.release.xcconfig"; sourceTree = "<group>"; };
 		DC74A378C1CC40E4B6192D7F /* Inter-UI-Medium.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-Medium.otf"; path = "../assets/fonts/Inter-UI-Medium.otf"; sourceTree = "<group>"; };
 		DCB1270C2429347200079762 /* apolloschurchapp.entitlements */ = {isa = PBXFileReference; lastKnownFileType = text.plist.entitlements; name = apolloschurchapp.entitlements; path = apolloschurchapp/apolloschurchapp.entitlements; sourceTree = "<group>"; };
@@ -115,7 +146,7 @@
 			isa = PBXFrameworksBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
-				2AE17F608689DAE577F28E4D /* BuildFile in Frameworks */,
+				2AE17F608689DAE577F28E4D /* (null) in Frameworks */,
 				EF3A30A2E55D4F8352E116D3 /* libPods-apolloschurchapp-apolloschurchappTests.a in Frameworks */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
@@ -147,6 +178,14 @@
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
+		BF49AE812649A852001C7B78 /* Frameworks */ = {
+			isa = PBXFrameworksBuildPhase;
+			buildActionMask = 2147483647;
+			files = (
+				0FAB39D70A1174DFF70E38DA /* libPods-OneSignalNotificationServiceExtension.a in Frameworks */,
+			);
+			runOnlyForDeploymentPostprocessing = 0;
+		};
 /* End PBXFrameworksBuildPhase section */
 
 /* Begin PBXGroup section */
@@ -194,6 +233,7 @@
 				38B9762ACA099D28C28DBB31 /* libPods-apolloschurchapp-tvOS.a */,
 				AC02408E578A898123910157 /* libPods-apolloschurchapp-tvOS-apolloschurchapp-tvOSTests.a */,
 				12D0F1F316A88242D1FD60FB /* libPods-apolloschurchapp-apolloschurchappTests.a */,
+				CB0031860411B96BE5F3DCD0 /* libPods-OneSignalNotificationServiceExtension.a */,
 			);
 			name = Frameworks;
 			sourceTree = "<group>";
@@ -232,6 +272,8 @@
 				C6895BD78D40E00368BEB025 /* Pods-apolloschurchapp-apolloschurchappTests.release.xcconfig */,
 				1ECA88A0369BB1DDE56EE65D /* Pods-apolloschurchapp-tvOS-apolloschurchapp-tvOSTests.debug.xcconfig */,
 				4D3B523797B74698347A5317 /* Pods-apolloschurchapp-tvOS-apolloschurchapp-tvOSTests.release.xcconfig */,
+				59B7EF0894518FA2172F644D /* Pods-OneSignalNotificationServiceExtension.debug.xcconfig */,
+				D73A12BF0099DED435E951E7 /* Pods-OneSignalNotificationServiceExtension.release.xcconfig */,
 			);
 			path = Pods;
 			sourceTree = "<group>";
@@ -257,6 +299,7 @@
 				13B07FAE1A68108700A75B9A /* apolloschurchapp */,
 				832341AE1AAA6A7D00B99B32 /* Libraries */,
 				00E356EF1AD99517003FC87E /* apolloschurchappTests */,
+				BF49AE852649A852001C7B78 /* OneSignalNotificationServiceExtension */,
 				83CBBA001A601CBA00E9B192 /* Products */,
 				2D16E6871FA4F8E400B85C8A /* Frameworks */,
 				58D6A3E05A234CD89DC0BCE1 /* Resources */,
@@ -275,10 +318,21 @@
 				00E356EE1AD99517003FC87E /* apolloschurchappTests.xctest */,
 				2D02E47B1E0B4A5D006451C7 /* apolloschurchapp-tvOS.app */,
 				2D02E4901E0B4A5D006451C7 /* apolloschurchapp-tvOSTests.xctest */,
+				BF49AE842649A852001C7B78 /* OneSignalNotificationServiceExtension.appex */,
 			);
 			name = Products;
 			sourceTree = "<group>";
 		};
+		BF49AE852649A852001C7B78 /* OneSignalNotificationServiceExtension */ = {
+			isa = PBXGroup;
+			children = (
+				BFC57C392649ADC400EC15D9 /* OneSignalNotificationServiceExtension.entitlements */,
+				BF49AE862649A852001C7B78 /* NotificationService.swift */,
+				BF49AE882649A852001C7B78 /* Info.plist */,
+			);
+			path = OneSignalNotificationServiceExtension;
+			sourceTree = "<group>";
+		};
 /* End PBXGroup section */
 
 /* Begin PBXNativeTarget section */
@@ -290,8 +344,8 @@
 				00E356EA1AD99517003FC87E /* Sources */,
 				00E356EB1AD99517003FC87E /* Frameworks */,
 				00E356EC1AD99517003FC87E /* Resources */,
-				C7A5ADB714711CE3B4CC0EAA /* [CP] Embed Pods Frameworks */,
 				892ED59C47CEB9B13B75EC71 /* [CP] Copy Pods Resources */,
+				07E1EAA0838946D1A5AB5FCD /* [CP] Embed Pods Frameworks */,
 			);
 			buildRules = (
 			);
@@ -308,16 +362,19 @@
 			buildConfigurationList = 13B07F931A680F5B00A75B9A /* Build configuration list for PBXNativeTarget "apolloschurchapp" */;
 			buildPhases = (
 				DEEF24CE4F76789E5E8C369D /* [CP] Check Pods Manifest.lock */,
+				4C006E292656868900EE9158 /* Start Packager */,
 				13B07F871A680F5B00A75B9A /* Sources */,
 				13B07F8C1A680F5B00A75B9A /* Frameworks */,
 				13B07F8E1A680F5B00A75B9A /* Resources */,
 				00DD1BFF1BD5951E006B06BC /* Bundle React Native code and images */,
 				43D579D8398224D7B09F58F6 /* [CP] Copy Pods Resources */,
-				3C01FFABD3A7274D34564996 /* [CP] Embed Pods Frameworks */,
+				BF49AE8C2649A852001C7B78 /* Embed App Extensions */,
+				C777F5323DB998E21CEC6765 /* [CP] Embed Pods Frameworks */,
 			);
 			buildRules = (
 			);
 			dependencies = (
+				BF49AE8A2649A852001C7B78 /* PBXTargetDependency */,
 			);
 			name = apolloschurchapp;
 			productName = "Hello World";
@@ -362,12 +419,31 @@
 			productReference = 2D02E4901E0B4A5D006451C7 /* apolloschurchapp-tvOSTests.xctest */;
 			productType = "com.apple.product-type.bundle.unit-test";
 		};
+		BF49AE832649A852001C7B78 /* OneSignalNotificationServiceExtension */ = {
+			isa = PBXNativeTarget;
+			buildConfigurationList = BF49AE8F2649A852001C7B78 /* Build configuration list for PBXNativeTarget "OneSignalNotificationServiceExtension" */;
+			buildPhases = (
+				1C5838107635CD85541B244F /* [CP] Check Pods Manifest.lock */,
+				BF49AE802649A852001C7B78 /* Sources */,
+				BF49AE812649A852001C7B78 /* Frameworks */,
+				BF49AE822649A852001C7B78 /* Resources */,
+			);
+			buildRules = (
+			);
+			dependencies = (
+			);
+			name = OneSignalNotificationServiceExtension;
+			productName = OneSignalNotificationServiceExtension;
+			productReference = BF49AE842649A852001C7B78 /* OneSignalNotificationServiceExtension.appex */;
+			productType = "com.apple.product-type.app-extension";
+		};
 /* End PBXNativeTarget section */
 
 /* Begin PBXProject section */
 		83CBB9F71A601CBA00E9B192 /* Project object */ = {
 			isa = PBXProject;
 			attributes = {
+				LastSwiftUpdateCheck = 1250;
 				LastUpgradeCheck = 1170;
 				ORGANIZATIONNAME = Apollos;
 				TargetAttributes = {
@@ -382,6 +458,7 @@
 					};
 					2D02E47A1E0B4A5D006451C7 = {
 						CreatedOnToolsVersion = 8.2.1;
+						LastSwiftMigration = 1230;
 						ProvisioningStyle = Automatic;
 					};
 					2D02E48F1E0B4A5D006451C7 = {
@@ -389,6 +466,11 @@
 						ProvisioningStyle = Automatic;
 						TestTargetID = 2D02E47A1E0B4A5D006451C7;
 					};
+					BF49AE832649A852001C7B78 = {
+						CreatedOnToolsVersion = 12.5;
+						DevelopmentTeam = 7KS82J74VW;
+						ProvisioningStyle = Manual;
+					};
 				};
 			};
 			buildConfigurationList = 83CBB9FA1A601CBA00E9B192 /* Build configuration list for PBXProject "apolloschurchapp" */;
@@ -409,6 +491,7 @@
 				00E356ED1AD99517003FC87E /* apolloschurchappTests */,
 				2D02E47A1E0B4A5D006451C7 /* apolloschurchapp-tvOS */,
 				2D02E48F1E0B4A5D006451C7 /* apolloschurchapp-tvOSTests */,
+				BF49AE832649A852001C7B78 /* OneSignalNotificationServiceExtension */,
 			);
 		};
 /* End PBXProject section */
@@ -460,6 +543,13 @@
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
+		BF49AE822649A852001C7B78 /* Resources */ = {
+			isa = PBXResourcesBuildPhase;
+			buildActionMask = 2147483647;
+			files = (
+			);
+			runOnlyForDeploymentPostprocessing = 0;
+		};
 /* End PBXResourcesBuildPhase section */
 
 /* Begin PBXShellScriptBuildPhase section */
@@ -477,7 +567,25 @@
 			shellPath = /bin/sh;
 			shellScript = "export NODE_BINARY=node\n../node_modules/react-native/scripts/react-native-xcode.sh";
 		};
-		2C62ED438C51D0F43EC7017B /* [CP] Check Pods Manifest.lock */ = {
+		07E1EAA0838946D1A5AB5FCD /* [CP] Embed Pods Frameworks */ = {
+			isa = PBXShellScriptBuildPhase;
+			buildActionMask = 2147483647;
+			files = (
+			);
+			inputPaths = (
+				"${PODS_ROOT}/Target Support Files/Pods-apolloschurchapp-apolloschurchappTests/Pods-apolloschurchapp-apolloschurchappTests-frameworks.sh",
+				"${PODS_XCFRAMEWORKS_BUILD_DIR}/OpenSSL/OpenSSL.framework/OpenSSL",
+			);
+			name = "[CP] Embed Pods Frameworks";
+			outputPaths = (
+				"${TARGET_BUILD_DIR}/${FRAMEWORKS_FOLDER_PATH}/OpenSSL.framework",
+			);
+			runOnlyForDeploymentPostprocessing = 0;
+			shellPath = /bin/sh;
+			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-apolloschurchapp-apolloschurchappTests/Pods-apolloschurchapp-apolloschurchappTests-frameworks.sh\"\n";
+			showEnvVarsInLog = 0;
+		};
+		1C5838107635CD85541B244F /* [CP] Check Pods Manifest.lock */ = {
 			isa = PBXShellScriptBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
@@ -492,44 +600,48 @@
 			outputFileListPaths = (
 			);
 			outputPaths = (
-				"$(DERIVED_FILE_DIR)/Pods-apolloschurchapp-apolloschurchappTests-checkManifestLockResult.txt",
+				"$(DERIVED_FILE_DIR)/Pods-OneSignalNotificationServiceExtension-checkManifestLockResult.txt",
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 			shellPath = /bin/sh;
 			shellScript = "diff \"${PODS_PODFILE_DIR_PATH}/Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null\nif [ $? != 0 ] ; then\n    # print error to STDERR\n    echo \"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\" >&2\n    exit 1\nfi\n# This output is used by Xcode 'outputs' to avoid re-running this script phase.\necho \"SUCCESS\" > \"${SCRIPT_OUTPUT_FILE_0}\"\n";
 			showEnvVarsInLog = 0;
 		};
-		2D02E4CB1E0B4B27006451C7 /* Bundle React Native Code And Images */ = {
+		2C62ED438C51D0F43EC7017B /* [CP] Check Pods Manifest.lock */ = {
 			isa = PBXShellScriptBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
 			);
+			inputFileListPaths = (
+			);
 			inputPaths = (
+				"${PODS_PODFILE_DIR_PATH}/Podfile.lock",
+				"${PODS_ROOT}/Manifest.lock",
+			);
+			name = "[CP] Check Pods Manifest.lock";
+			outputFileListPaths = (
 			);
-			name = "Bundle React Native Code And Images";
 			outputPaths = (
+				"$(DERIVED_FILE_DIR)/Pods-apolloschurchapp-apolloschurchappTests-checkManifestLockResult.txt",
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 			shellPath = /bin/sh;
-			shellScript = "export NODE_BINARY=node\n../node_modules/react-native/scripts/react-native-xcode.sh";
+			shellScript = "diff \"${PODS_PODFILE_DIR_PATH}/Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null\nif [ $? != 0 ] ; then\n    # print error to STDERR\n    echo \"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\" >&2\n    exit 1\nfi\n# This output is used by Xcode 'outputs' to avoid re-running this script phase.\necho \"SUCCESS\" > \"${SCRIPT_OUTPUT_FILE_0}\"\n";
+			showEnvVarsInLog = 0;
 		};
-		3C01FFABD3A7274D34564996 /* [CP] Embed Pods Frameworks */ = {
+		2D02E4CB1E0B4B27006451C7 /* Bundle React Native Code And Images */ = {
 			isa = PBXShellScriptBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
 			);
 			inputPaths = (
-				"${PODS_ROOT}/Target Support Files/Pods-apolloschurchapp/Pods-apolloschurchapp-frameworks.sh",
-				"${PODS_ROOT}/google-cast-sdk/GoogleCastSDK-ios-4.3.0/GoogleCast.framework",
 			);
-			name = "[CP] Embed Pods Frameworks";
+			name = "Bundle React Native Code And Images";
 			outputPaths = (
-				"${TARGET_BUILD_DIR}/${FRAMEWORKS_FOLDER_PATH}/GoogleCast.framework",
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 			shellPath = /bin/sh;
-			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-apolloschurchapp/Pods-apolloschurchapp-frameworks.sh\"\n";
-			showEnvVarsInLog = 0;
+			shellScript = "export NODE_BINARY=node\n../node_modules/react-native/scripts/react-native-xcode.sh";
 		};
 		43D579D8398224D7B09F58F6 /* [CP] Copy Pods Resources */ = {
 			isa = PBXShellScriptBuildPhase;
@@ -549,6 +661,25 @@
 			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-apolloschurchapp/Pods-apolloschurchapp-resources.sh\"\n";
 			showEnvVarsInLog = 0;
 		};
+		4C006E292656868900EE9158 /* Start Packager */ = {
+			isa = PBXShellScriptBuildPhase;
+			buildActionMask = 2147483647;
+			files = (
+			);
+			inputFileListPaths = (
+			);
+			inputPaths = (
+			);
+			name = "Start Packager";
+			outputFileListPaths = (
+			);
+			outputPaths = (
+			);
+			runOnlyForDeploymentPostprocessing = 0;
+			shellPath = /bin/sh;
+			shellScript = "export RCT_METRO_PORT=\"${RCT_METRO_PORT:=8081}\"\necho \"export RCT_METRO_PORT=${RCT_METRO_PORT}\" > \"${SRCROOT}/../node_modules/react-native/scripts/.packager.env\"\nif [ -z \"${RCT_NO_LAUNCH_PACKAGER+xxx}\" ] ; then\n  if nc -w 5 -z localhost ${RCT_METRO_PORT} ; then\n    if ! curl -s \"http://localhost:${RCT_METRO_PORT}/status\" | grep -q \"packager-status:running\" ; then\n      echo \"Port ${RCT_METRO_PORT} already in use, packager is either not running or not running correctly\"\n      exit 2\n    fi\n  else\n    open \"$SRCROOT/../node_modules/react-native/scripts/launchPackager.command\" || echo \"Can't start packager automatically\"\n  fi\nfi\n";
+			showEnvVarsInLog = 0;
+		};
 		892ED59C47CEB9B13B75EC71 /* [CP] Copy Pods Resources */ = {
 			isa = PBXShellScriptBuildPhase;
 			buildActionMask = 2147483647;
@@ -611,22 +742,22 @@
 			shellScript = "diff \"${PODS_PODFILE_DIR_PATH}/Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null\nif [ $? != 0 ] ; then\n    # print error to STDERR\n    echo \"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\" >&2\n    exit 1\nfi\n# This output is used by Xcode 'outputs' to avoid re-running this script phase.\necho \"SUCCESS\" > \"${SCRIPT_OUTPUT_FILE_0}\"\n";
 			showEnvVarsInLog = 0;
 		};
-		C7A5ADB714711CE3B4CC0EAA /* [CP] Embed Pods Frameworks */ = {
+		C777F5323DB998E21CEC6765 /* [CP] Embed Pods Frameworks */ = {
 			isa = PBXShellScriptBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
 			);
 			inputPaths = (
-				"${PODS_ROOT}/Target Support Files/Pods-apolloschurchapp-apolloschurchappTests/Pods-apolloschurchapp-apolloschurchappTests-frameworks.sh",
-				"${PODS_ROOT}/google-cast-sdk/GoogleCastSDK-ios-4.3.0/GoogleCast.framework",
+				"${PODS_ROOT}/Target Support Files/Pods-apolloschurchapp/Pods-apolloschurchapp-frameworks.sh",
+				"${PODS_XCFRAMEWORKS_BUILD_DIR}/OpenSSL/OpenSSL.framework/OpenSSL",
 			);
 			name = "[CP] Embed Pods Frameworks";
 			outputPaths = (
-				"${TARGET_BUILD_DIR}/${FRAMEWORKS_FOLDER_PATH}/GoogleCast.framework",
+				"${TARGET_BUILD_DIR}/${FRAMEWORKS_FOLDER_PATH}/OpenSSL.framework",
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 			shellPath = /bin/sh;
-			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-apolloschurchapp-apolloschurchappTests/Pods-apolloschurchapp-apolloschurchappTests-frameworks.sh\"\n";
+			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-apolloschurchapp/Pods-apolloschurchapp-frameworks.sh\"\n";
 			showEnvVarsInLog = 0;
 		};
 		DEEF24CE4F76789E5E8C369D /* [CP] Check Pods Manifest.lock */ = {
@@ -689,6 +820,14 @@
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
+		BF49AE802649A852001C7B78 /* Sources */ = {
+			isa = PBXSourcesBuildPhase;
+			buildActionMask = 2147483647;
+			files = (
+				BF49AE872649A852001C7B78 /* NotificationService.swift in Sources */,
+			);
+			runOnlyForDeploymentPostprocessing = 0;
+		};
 /* End PBXSourcesBuildPhase section */
 
 /* Begin PBXTargetDependency section */
@@ -702,6 +841,11 @@
 			target = 2D02E47A1E0B4A5D006451C7 /* apolloschurchapp-tvOS */;
 			targetProxy = 2D02E4911E0B4A5D006451C7 /* PBXContainerItemProxy */;
 		};
+		BF49AE8A2649A852001C7B78 /* PBXTargetDependency */ = {
+			isa = PBXTargetDependency;
+			target = BF49AE832649A852001C7B78 /* OneSignalNotificationServiceExtension */;
+			targetProxy = BF49AE892649A852001C7B78 /* PBXContainerItemProxy */;
+		};
 /* End PBXTargetDependency section */
 
 /* Begin XCBuildConfiguration section */
@@ -766,9 +910,9 @@
 				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
 				CLANG_ENABLE_MODULES = YES;
 				CODE_SIGN_ENTITLEMENTS = apolloschurchapp/apolloschurchapp.entitlements;
-				CODE_SIGN_IDENTITY = "Apple Development: Apollos Apps (58685TNK9H)";
+				CODE_SIGN_IDENTITY = "iPhone Developer";
 				CODE_SIGN_STYLE = Manual;
-				CURRENT_PROJECT_VERSION = 21;
+				CURRENT_PROJECT_VERSION = 670;
 				DEAD_CODE_STRIPPING = YES;
 				DEVELOPMENT_TEAM = 7KS82J74VW;
 				HEADER_SEARCH_PATHS = (
@@ -802,7 +946,7 @@
 				CODE_SIGN_ENTITLEMENTS = apolloschurchapp/apolloschurchapp.entitlements;
 				CODE_SIGN_IDENTITY = "Apple Distribution: Differential Dev Shop, LLC (7KS82J74VW)";
 				CODE_SIGN_STYLE = Manual;
-				CURRENT_PROJECT_VERSION = 21;
+				CURRENT_PROJECT_VERSION = 670;
 				DEVELOPMENT_TEAM = 7KS82J74VW;
 				HEADER_SEARCH_PATHS = (
 					"$(inherited)",
@@ -831,6 +975,7 @@
 				ASSETCATALOG_COMPILER_APPICON_NAME = "App Icon & Top Shelf Image";
 				ASSETCATALOG_COMPILER_LAUNCHIMAGE_NAME = LaunchImage;
 				CLANG_ANALYZER_NONNULL = YES;
+				CLANG_ENABLE_MODULES = YES;
 				CLANG_WARN_DOCUMENTATION_COMMENTS = YES;
 				CLANG_WARN_INFINITE_RECURSION = YES;
 				CLANG_WARN_SUSPICIOUS_MOVE = YES;
@@ -851,6 +996,9 @@
 				PRODUCT_BUNDLE_IDENTIFIER = "com.facebook.REACT.apolloschurchapp-tvOS";
 				PRODUCT_NAME = "$(TARGET_NAME)";
 				SDKROOT = appletvos;
+				SWIFT_OBJC_BRIDGING_HEADER = "apolloschurchapp-tvOS-Bridging-Header.h";
+				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
+				SWIFT_VERSION = 5.0;
 				TARGETED_DEVICE_FAMILY = 3;
 				TVOS_DEPLOYMENT_TARGET = 9.2;
 			};
@@ -863,6 +1011,7 @@
 				ASSETCATALOG_COMPILER_APPICON_NAME = "App Icon & Top Shelf Image";
 				ASSETCATALOG_COMPILER_LAUNCHIMAGE_NAME = LaunchImage;
 				CLANG_ANALYZER_NONNULL = YES;
+				CLANG_ENABLE_MODULES = YES;
 				CLANG_WARN_DOCUMENTATION_COMMENTS = YES;
 				CLANG_WARN_INFINITE_RECURSION = YES;
 				CLANG_WARN_SUSPICIOUS_MOVE = YES;
@@ -883,6 +1032,8 @@
 				PRODUCT_BUNDLE_IDENTIFIER = "com.facebook.REACT.apolloschurchapp-tvOS";
 				PRODUCT_NAME = "$(TARGET_NAME)";
 				SDKROOT = appletvos;
+				SWIFT_OBJC_BRIDGING_HEADER = "apolloschurchapp-tvOS-Bridging-Header.h";
+				SWIFT_VERSION = 5.0;
 				TARGETED_DEVICE_FAMILY = 3;
 				TVOS_DEPLOYMENT_TARGET = 9.2;
 			};
@@ -892,6 +1043,7 @@
 			isa = XCBuildConfiguration;
 			baseConfigurationReference = 1ECA88A0369BB1DDE56EE65D /* Pods-apolloschurchapp-tvOS-apolloschurchapp-tvOSTests.debug.xcconfig */;
 			buildSettings = {
+				ALWAYS_EMBED_SWIFT_STANDARD_LIBRARIES = YES;
 				BUNDLE_LOADER = "$(TEST_HOST)";
 				CLANG_ANALYZER_NONNULL = YES;
 				CLANG_WARN_DOCUMENTATION_COMMENTS = YES;
@@ -923,6 +1075,7 @@
 			isa = XCBuildConfiguration;
 			baseConfigurationReference = 4D3B523797B74698347A5317 /* Pods-apolloschurchapp-tvOS-apolloschurchapp-tvOSTests.release.xcconfig */;
 			buildSettings = {
+				ALWAYS_EMBED_SWIFT_STANDARD_LIBRARIES = YES;
 				BUNDLE_LOADER = "$(TEST_HOST)";
 				CLANG_ANALYZER_NONNULL = YES;
 				CLANG_WARN_DOCUMENTATION_COMMENTS = YES;
@@ -1065,6 +1218,71 @@
 			};
 			name = Release;
 		};
+		BF49AE8D2649A852001C7B78 /* Debug */ = {
+			isa = XCBuildConfiguration;
+			baseConfigurationReference = 59B7EF0894518FA2172F644D /* Pods-OneSignalNotificationServiceExtension.debug.xcconfig */;
+			buildSettings = {
+				CLANG_ANALYZER_NONNULL = YES;
+				CLANG_ANALYZER_NUMBER_OBJECT_CONVERSION = YES_AGGRESSIVE;
+				CLANG_CXX_LANGUAGE_STANDARD = "gnu++14";
+				CLANG_ENABLE_OBJC_WEAK = YES;
+				CLANG_WARN_DOCUMENTATION_COMMENTS = YES;
+				CLANG_WARN_QUOTED_INCLUDE_IN_FRAMEWORK_HEADER = YES;
+				CLANG_WARN_UNGUARDED_AVAILABILITY = YES_AGGRESSIVE;
+				CODE_SIGN_ENTITLEMENTS = OneSignalNotificationServiceExtension/OneSignalNotificationServiceExtension.entitlements;
+				CODE_SIGN_IDENTITY = "iPhone Developer";
+				CODE_SIGN_STYLE = Manual;
+				DEBUG_INFORMATION_FORMAT = dwarf;
+				DEVELOPMENT_TEAM = 7KS82J74VW;
+				GCC_C_LANGUAGE_STANDARD = gnu11;
+				INFOPLIST_FILE = OneSignalNotificationServiceExtension/Info.plist;
+				IPHONEOS_DEPLOYMENT_TARGET = 10.0;
+				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @executable_path/../../Frameworks";
+				MTL_ENABLE_DEBUG_INFO = INCLUDE_SOURCE;
+				MTL_FAST_MATH = YES;
+				PRODUCT_BUNDLE_IDENTIFIER = com.differential.apollos.OneSignalNotificationServiceExtension;
+				PRODUCT_NAME = "$(TARGET_NAME)";
+				PROVISIONING_PROFILE_SPECIFIER = "match Development com.differential.apollos.OneSignalNotificationServiceExtension";
+				SKIP_INSTALL = YES;
+				SWIFT_ACTIVE_COMPILATION_CONDITIONS = DEBUG;
+				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
+				SWIFT_VERSION = 5.0;
+				TARGETED_DEVICE_FAMILY = "1,2";
+			};
+			name = Debug;
+		};
+		BF49AE8E2649A852001C7B78 /* Release */ = {
+			isa = XCBuildConfiguration;
+			baseConfigurationReference = D73A12BF0099DED435E951E7 /* Pods-OneSignalNotificationServiceExtension.release.xcconfig */;
+			buildSettings = {
+				CLANG_ANALYZER_NONNULL = YES;
+				CLANG_ANALYZER_NUMBER_OBJECT_CONVERSION = YES_AGGRESSIVE;
+				CLANG_CXX_LANGUAGE_STANDARD = "gnu++14";
+				CLANG_ENABLE_OBJC_WEAK = YES;
+				CLANG_WARN_DOCUMENTATION_COMMENTS = YES;
+				CLANG_WARN_QUOTED_INCLUDE_IN_FRAMEWORK_HEADER = YES;
+				CLANG_WARN_UNGUARDED_AVAILABILITY = YES_AGGRESSIVE;
+				CODE_SIGN_ENTITLEMENTS = OneSignalNotificationServiceExtension/OneSignalNotificationServiceExtension.entitlements;
+				CODE_SIGN_IDENTITY = "Apple Distribution: Differential Dev Shop, LLC (7KS82J74VW)";
+				CODE_SIGN_STYLE = Manual;
+				COPY_PHASE_STRIP = NO;
+				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
+				DEVELOPMENT_TEAM = 7KS82J74VW;
+				GCC_C_LANGUAGE_STANDARD = gnu11;
+				INFOPLIST_FILE = OneSignalNotificationServiceExtension/Info.plist;
+				IPHONEOS_DEPLOYMENT_TARGET = 10.0;
+				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @executable_path/../../Frameworks";
+				MTL_FAST_MATH = YES;
+				PRODUCT_BUNDLE_IDENTIFIER = com.differential.apollos.OneSignalNotificationServiceExtension;
+				PRODUCT_NAME = "$(TARGET_NAME)";
+				PROVISIONING_PROFILE_SPECIFIER = "match AppStore com.differential.apollos.OneSignalNotificationServiceExtension";
+				SKIP_INSTALL = YES;
+				SWIFT_OPTIMIZATION_LEVEL = "-Owholemodule";
+				SWIFT_VERSION = 5.0;
+				TARGETED_DEVICE_FAMILY = "1,2";
+			};
+			name = Release;
+		};
 /* End XCBuildConfiguration section */
 
 /* Begin XCConfigurationList section */
@@ -1113,6 +1331,15 @@
 			defaultConfigurationIsVisible = 0;
 			defaultConfigurationName = Release;
 		};
+		BF49AE8F2649A852001C7B78 /* Build configuration list for PBXNativeTarget "OneSignalNotificationServiceExtension" */ = {
+			isa = XCConfigurationList;
+			buildConfigurations = (
+				BF49AE8D2649A852001C7B78 /* Debug */,
+				BF49AE8E2649A852001C7B78 /* Release */,
+			);
+			defaultConfigurationIsVisible = 0;
+			defaultConfigurationName = Release;
+		};
 /* End XCConfigurationList section */
 	};
 	rootObject = 83CBB9F71A601CBA00E9B192 /* Project object */;
diff --git a/apolloschurchapp/ios/apolloschurchapp.xcworkspace/xcshareddata/xcschemes/apolloschurchapp-tvOS.xcscheme b/apolloschurchapp/ios/apolloschurchapp.xcworkspace/xcshareddata/xcschemes/apolloschurchapp-tvOS.xcscheme
new file mode 100644
index 00000000..a24d4f12
--- /dev/null
+++ b/apolloschurchapp/ios/apolloschurchapp.xcworkspace/xcshareddata/xcschemes/apolloschurchapp-tvOS.xcscheme
@@ -0,0 +1,88 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<Scheme
+   LastUpgradeVersion = "1250"
+   version = "1.3">
+   <BuildAction
+      parallelizeBuildables = "YES"
+      buildImplicitDependencies = "YES">
+      <BuildActionEntries>
+         <BuildActionEntry
+            buildForTesting = "YES"
+            buildForRunning = "YES"
+            buildForProfiling = "YES"
+            buildForArchiving = "YES"
+            buildForAnalyzing = "YES">
+            <BuildableReference
+               BuildableIdentifier = "primary"
+               BlueprintIdentifier = "2D02E47A1E0B4A5D006451C7"
+               BuildableName = "apolloschurchapp-tvOS.app"
+               BlueprintName = "apolloschurchapp-tvOS"
+               ReferencedContainer = "container:apolloschurchapp.xcodeproj">
+            </BuildableReference>
+         </BuildActionEntry>
+      </BuildActionEntries>
+   </BuildAction>
+   <TestAction
+      buildConfiguration = "Debug"
+      selectedDebuggerIdentifier = "Xcode.DebuggerFoundation.Debugger.LLDB"
+      selectedLauncherIdentifier = "Xcode.DebuggerFoundation.Launcher.LLDB"
+      shouldUseLaunchSchemeArgsEnv = "YES">
+      <Testables>
+         <TestableReference
+            skipped = "NO">
+            <BuildableReference
+               BuildableIdentifier = "primary"
+               BlueprintIdentifier = "2D02E48F1E0B4A5D006451C7"
+               BuildableName = "apolloschurchapp-tvOSTests.xctest"
+               BlueprintName = "apolloschurchapp-tvOSTests"
+               ReferencedContainer = "container:apolloschurchapp.xcodeproj">
+            </BuildableReference>
+         </TestableReference>
+      </Testables>
+   </TestAction>
+   <LaunchAction
+      buildConfiguration = "Debug"
+      selectedDebuggerIdentifier = "Xcode.DebuggerFoundation.Debugger.LLDB"
+      selectedLauncherIdentifier = "Xcode.DebuggerFoundation.Launcher.LLDB"
+      launchStyle = "0"
+      useCustomWorkingDirectory = "NO"
+      ignoresPersistentStateOnLaunch = "NO"
+      debugDocumentVersioning = "YES"
+      debugServiceExtension = "internal"
+      allowLocationSimulation = "YES">
+      <BuildableProductRunnable
+         runnableDebuggingMode = "0">
+         <BuildableReference
+            BuildableIdentifier = "primary"
+            BlueprintIdentifier = "2D02E47A1E0B4A5D006451C7"
+            BuildableName = "apolloschurchapp-tvOS.app"
+            BlueprintName = "apolloschurchapp-tvOS"
+            ReferencedContainer = "container:apolloschurchapp.xcodeproj">
+         </BuildableReference>
+      </BuildableProductRunnable>
+   </LaunchAction>
+   <ProfileAction
+      buildConfiguration = "Release"
+      shouldUseLaunchSchemeArgsEnv = "YES"
+      savedToolIdentifier = ""
+      useCustomWorkingDirectory = "NO"
+      debugDocumentVersioning = "YES">
+      <BuildableProductRunnable
+         runnableDebuggingMode = "0">
+         <BuildableReference
+            BuildableIdentifier = "primary"
+            BlueprintIdentifier = "2D02E47A1E0B4A5D006451C7"
+            BuildableName = "apolloschurchapp-tvOS.app"
+            BlueprintName = "apolloschurchapp-tvOS"
+            ReferencedContainer = "container:apolloschurchapp.xcodeproj">
+         </BuildableReference>
+      </BuildableProductRunnable>
+   </ProfileAction>
+   <AnalyzeAction
+      buildConfiguration = "Debug">
+   </AnalyzeAction>
+   <ArchiveAction
+      buildConfiguration = "Release"
+      revealArchiveInOrganizer = "YES">
+   </ArchiveAction>
+</Scheme>
diff --git a/apolloschurchapp/ios/apolloschurchapp.xcworkspace/xcshareddata/xcschemes/apolloschurchappprod.xcscheme b/apolloschurchapp/ios/apolloschurchapp.xcworkspace/xcshareddata/xcschemes/apolloschurchappprod.xcscheme
deleted file mode 100644
index 572c21d6..00000000
--- a/apolloschurchapp/ios/apolloschurchapp.xcworkspace/xcshareddata/xcschemes/apolloschurchappprod.xcscheme
+++ /dev/null
@@ -1,134 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<Scheme
-   LastUpgradeVersion = "1170"
-   version = "1.3">
-   <BuildAction
-      parallelizeBuildables = "NO"
-      buildImplicitDependencies = "YES">
-      <PreActions>
-         <ExecutionAction
-            ActionType = "Xcode.IDEStandardExecutionActionsCore.ExecutionActionType.ShellScriptAction">
-            <ActionContent
-               title = "Run Script"
-               scriptText = "echo &quot;.env.production&quot; &gt; /tmp/envfile&#10;">
-            </ActionContent>
-         </ExecutionAction>
-      </PreActions>
-      <BuildActionEntries>
-         <BuildActionEntry
-            buildForTesting = "YES"
-            buildForRunning = "YES"
-            buildForProfiling = "YES"
-            buildForArchiving = "YES"
-            buildForAnalyzing = "YES">
-            <BuildableReference
-               BuildableIdentifier = "primary"
-               BlueprintIdentifier = "83CBBA2D1A601D0E00E9B192"
-               BuildableName = "libReact.a"
-               BlueprintName = "React"
-               ReferencedContainer = "container:../node_modules/react-native/React/React.xcodeproj">
-            </BuildableReference>
-         </BuildActionEntry>
-         <BuildActionEntry
-            buildForTesting = "YES"
-            buildForRunning = "YES"
-            buildForProfiling = "YES"
-            buildForArchiving = "YES"
-            buildForAnalyzing = "YES">
-            <BuildableReference
-               BuildableIdentifier = "primary"
-               BlueprintIdentifier = "13B07F861A680F5B00A75B9A"
-               BuildableName = "apolloschurchapp.app"
-               BlueprintName = "apolloschurchapp"
-               ReferencedContainer = "container:apolloschurchapp.xcodeproj">
-            </BuildableReference>
-         </BuildActionEntry>
-         <BuildActionEntry
-            buildForTesting = "YES"
-            buildForRunning = "YES"
-            buildForProfiling = "NO"
-            buildForArchiving = "NO"
-            buildForAnalyzing = "YES">
-            <BuildableReference
-               BuildableIdentifier = "primary"
-               BlueprintIdentifier = "00E356ED1AD99517003FC87E"
-               BuildableName = "apolloschurchappTests.xctest"
-               BlueprintName = "apolloschurchappTests"
-               ReferencedContainer = "container:apolloschurchapp.xcodeproj">
-            </BuildableReference>
-         </BuildActionEntry>
-      </BuildActionEntries>
-   </BuildAction>
-   <TestAction
-      buildConfiguration = "Debug"
-      selectedDebuggerIdentifier = "Xcode.DebuggerFoundation.Debugger.LLDB"
-      selectedLauncherIdentifier = "Xcode.DebuggerFoundation.Launcher.LLDB"
-      shouldUseLaunchSchemeArgsEnv = "YES">
-      <MacroExpansion>
-         <BuildableReference
-            BuildableIdentifier = "primary"
-            BlueprintIdentifier = "13B07F861A680F5B00A75B9A"
-            BuildableName = "apolloschurchapp.app"
-            BlueprintName = "apolloschurchapp"
-            ReferencedContainer = "container:apolloschurchapp.xcodeproj">
-         </BuildableReference>
-      </MacroExpansion>
-      <Testables>
-         <TestableReference
-            skipped = "NO">
-            <BuildableReference
-               BuildableIdentifier = "primary"
-               BlueprintIdentifier = "00E356ED1AD99517003FC87E"
-               BuildableName = "apolloschurchappTests.xctest"
-               BlueprintName = "apolloschurchappTests"
-               ReferencedContainer = "container:apolloschurchapp.xcodeproj">
-            </BuildableReference>
-         </TestableReference>
-      </Testables>
-   </TestAction>
-   <LaunchAction
-      buildConfiguration = "Release"
-      selectedDebuggerIdentifier = "Xcode.DebuggerFoundation.Debugger.LLDB"
-      selectedLauncherIdentifier = "Xcode.DebuggerFoundation.Launcher.LLDB"
-      launchStyle = "0"
-      useCustomWorkingDirectory = "NO"
-      ignoresPersistentStateOnLaunch = "NO"
-      debugDocumentVersioning = "YES"
-      debugServiceExtension = "internal"
-      allowLocationSimulation = "YES">
-      <BuildableProductRunnable
-         runnableDebuggingMode = "0">
-         <BuildableReference
-            BuildableIdentifier = "primary"
-            BlueprintIdentifier = "13B07F861A680F5B00A75B9A"
-            BuildableName = "apolloschurchapp.app"
-            BlueprintName = "apolloschurchapp"
-            ReferencedContainer = "container:apolloschurchapp.xcodeproj">
-         </BuildableReference>
-      </BuildableProductRunnable>
-   </LaunchAction>
-   <ProfileAction
-      buildConfiguration = "Release"
-      shouldUseLaunchSchemeArgsEnv = "YES"
-      savedToolIdentifier = ""
-      useCustomWorkingDirectory = "NO"
-      debugDocumentVersioning = "YES">
-      <BuildableProductRunnable
-         runnableDebuggingMode = "0">
-         <BuildableReference
-            BuildableIdentifier = "primary"
-            BlueprintIdentifier = "13B07F861A680F5B00A75B9A"
-            BuildableName = "apolloschurchapp.app"
-            BlueprintName = "apolloschurchapp"
-            ReferencedContainer = "container:apolloschurchapp.xcodeproj">
-         </BuildableReference>
-      </BuildableProductRunnable>
-   </ProfileAction>
-   <AnalyzeAction
-      buildConfiguration = "Debug">
-   </AnalyzeAction>
-   <ArchiveAction
-      buildConfiguration = "Release"
-      revealArchiveInOrganizer = "YES">
-   </ArchiveAction>
-</Scheme>
diff --git a/apolloschurchapp/ios/apolloschurchapp/AppDelegate.m b/apolloschurchapp/ios/apolloschurchapp/AppDelegate.m
index f246ea29..9267aa24 100644
--- a/apolloschurchapp/ios/apolloschurchapp/AppDelegate.m
+++ b/apolloschurchapp/ios/apolloschurchapp/AppDelegate.m
@@ -12,7 +12,6 @@
 #import <React/RCTBundleURLProvider.h>
 #import <React/RCTRootView.h>
 #import <React/RCTLinkingManager.h>
-#import <GoogleCast/GoogleCast.h>
 #import "RNSplashScreen.h"
 
 #ifdef FB_SONARKIT_ENABLED
@@ -64,12 +63,6 @@ static void InitializeFlipper(UIApplication *application) {
                                                    moduleName:@"apolloschurchapp"
                                             initialProperties:nil];
 
-  // Initialize Google Cast
-  GCKDiscoveryCriteria *criteria = [[GCKDiscoveryCriteria alloc] initWithApplicationID:kGCKDefaultMediaReceiverApplicationID];
-  GCKCastOptions* options = [[GCKCastOptions alloc] initWithDiscoveryCriteria:criteria];
-  options.physicalVolumeButtonsWillControlDeviceVolume = YES;
-  [GCKCastContext setSharedInstanceWithOptions:options];
-
   rootView.backgroundColor = [[UIColor alloc] initWithRed:1.0f green:1.0f blue:1.0f alpha:1];
 
   self.window = [[UIWindow alloc] initWithFrame:[UIScreen mainScreen].bounds];
diff --git a/apolloschurchapp/ios/apolloschurchapp/Info.plist b/apolloschurchapp/ios/apolloschurchapp/Info.plist
index 46004132..8e204430 100644
--- a/apolloschurchapp/ios/apolloschurchapp/Info.plist
+++ b/apolloschurchapp/ios/apolloschurchapp/Info.plist
@@ -29,8 +29,12 @@
 			</array>
 		</dict>
 	</array>
+	<key>LSApplicationQueriesSchemes</key>
+	<array>
+		<string>mailto</string>
+	</array>
 	<key>CFBundleVersion</key>
-	<string>274</string>
+	<string>670</string>
 	<key>ITSAppUsesNonExemptEncryption</key>
 	<false/>
 	<key>LSRequiresIPhoneOS</key>
@@ -53,20 +57,14 @@
 			</dict>
 		</dict>
 	</dict>
-	<key>NSBluetoothAlwaysUsageDescription</key>
-	<string>$(PRODUCT_NAME) would like access to bluetooth (for playing audio)</string>
-	<key>NSCameraUsageDescription</key>
-	<string>$(PRODUCT_NAME) would like to use your camera (for uploading profile pictures)</string>
 	<key>NSLocationAlwaysUsageDescription</key>
 	<string>$(PRODUCT_NAME) would like to use your location for determining your closest campus</string>
+	<key>NSLocationAlwaysAndWhenInUseUsageDescription</key>
+	<string>$(PRODUCT_NAME) would like to use your location for determining your closest campus</string>
 	<key>NSLocationWhenInUseUsageDescription</key>
 	<string>$(PRODUCT_NAME) would like to use your location for determining your closest campus</string>
-	<key>NSMicrophoneUsageDescription</key>
-	<string>$(PRODUCT_NAME) would like to your microphone (for videos)</string>
-	<key>NSPhotoLibraryAddUsageDescription</key>
-	<string>$(PRODUCT_NAME) would like to save photos to your photo gallery (for uploading profile pictures)</string>
 	<key>NSPhotoLibraryUsageDescription</key>
-	<string>$(PRODUCT_NAME) would like access to your photo gallery (for uploading profile pictures)</string>
+	<string>$(PRODUCT_NAME) would like to access your photos</string>
 	<key>UIAppFonts</key>
 	<array>
 		<string>DroidSerif-Bold.ttf</string>
@@ -82,6 +80,10 @@
 		<string>Inter-UI-MediumItalic.otf</string>
 		<string>Inter-UI-Regular.otf</string>
 	</array>
+	<key>UIBackgroundModes</key>
+	<array>
+		<string>audio</string>
+	</array>
 	<key>UILaunchStoryboardName</key>
 	<string>SplashScreen</string>
 	<key>UIRequiredDeviceCapabilities</key>
diff --git a/apolloschurchapp/ios/apolloschurchapp/apolloschurchapp.entitlements b/apolloschurchapp/ios/apolloschurchapp/apolloschurchapp.entitlements
index 984fdb21..5274d253 100644
--- a/apolloschurchapp/ios/apolloschurchapp/apolloschurchapp.entitlements
+++ b/apolloschurchapp/ios/apolloschurchapp/apolloschurchapp.entitlements
@@ -4,11 +4,13 @@
 <dict>
 	<key>aps-environment</key>
 	<string>development</string>
-	<key>com.apple.developer.networking.wifi-info</key>
-	<true/>
 	<key>com.apple.developer.associated-domains</key>
 	<array>
-		<string>applink:apollos-church-api.herokuapp.com</string>
+		<string>applink:$(APP_DATA_URL)</string>
+	</array>
+	<key>com.apple.security.application-groups</key>
+	<array>
+		<string>group.com.differential.apollos.onesignal</string>
 	</array>
 </dict>
 </plist>
diff --git a/apolloschurchapp/ios/apolloschurchappTests/Info.plist b/apolloschurchapp/ios/apolloschurchappTests/Info.plist
index bb87423b..3d76805a 100644
--- a/apolloschurchapp/ios/apolloschurchappTests/Info.plist
+++ b/apolloschurchapp/ios/apolloschurchappTests/Info.plist
@@ -19,6 +19,6 @@
 	<key>CFBundleSignature</key>
 	<string>????</string>
 	<key>CFBundleVersion</key>
-	<string>274</string>
+	<string>670</string>
 </dict>
 </plist>
diff --git a/apolloschurchapp/jest.setup.js b/apolloschurchapp/jest.setup.js
index 68cbef02..e824de8a 100644
--- a/apolloschurchapp/jest.setup.js
+++ b/apolloschurchapp/jest.setup.js
@@ -1,14 +1,10 @@
-import React from 'react';
 import { Animated } from 'react-native';
 import ApollosConfig from '@apollosproject/config';
 import FRAGMENTS from '@apollosproject/ui-fragments';
 import 'react-native/Libraries/Animated/src/bezier';
 
-ApollosConfig.loadJs({ FRAGMENTS });
-
-jest.mock('@react-native-community/datetimepicker', () => 'DateTimePicker');
-
 ApollosConfig.loadJs({
+  FRAGMENTS,
   ONE_SIGNAL_KEY: 'doesntmatter',
 });
 
@@ -26,71 +22,24 @@ Animated.spring = (value, config) => ({
   },
   stop: () => ({}),
 });
-// jest.mock('NativeAnimatedHelper');
-
-jest.mock('react-native-safari-view', () => ({
-  isAvailable: jest.fn().mockImplementation(() => Promise.resolve(true)),
-  show: jest.fn(),
-  default: require.requireActual('react-native').SafeAreaView,
-}));
-
-jest.mock('react-native-safe-area-context', () => ({
-  SafeAreaConsumer: ({ children }) =>
-    children({ top: 0, bottom: 0, left: 0, right: 0 }),
-  SafeAreaProvider: ({ children }) => children,
-  SafeAreaView: jest.requireActual('react-native').SafeAreaView,
-}));
-
-jest.mock('react-native-device-info', () => ({
-  getUniqueId: () => 'id-123',
-  getSystemVersion: () => 'sys-version-123',
-  getModel: () => 'ios',
-  getVersion: () => 'version-123',
-  getBuildNumber: () => 0,
-}));
-
-jest.mock('rn-fetch-blob', () => 'Fetch');
 
-jest.mock('@apollosproject/ui-analytics', () => ({
-  track: () => '',
-  AnalyticsConsumer: ({ children }) => children({ test: jest.fn() }),
-  AnalyticsProvider: ({ children }) => children,
-  CoreNavigationAnalytics: ({ children }) =>
-    children({ onNavigationStateChange: jest.fn() }),
-  TrackEventWhenLoaded: () => null,
-  withTrackOnPress: (Component) => (props) => <Component {...props} />,
-}));
-
-jest.mock('@apollosproject/ui-kit', () => ({
-  ...require.requireActual('@apollosproject/ui-kit'),
-  NavigationService: {
-    navigate: jest.fn(),
-    setTopLevelNavigator: jest.fn(),
-  },
-}));
-
-jest.mock('@apollosproject/ui-notifications', () => ({
-  NotificationsProvider: ({ children }) => children,
-}));
+jest.mock('./src/client/index');
 
-jest.mock('@apollosproject/ui-mapview', () => ({
-  MapViewConnected: 'MapViewConnected',
-}));
+jest.mock('react-native-reanimated', () => {
+  const Reanimated = require('react-native-reanimated/mock');
 
-jest.mock('@apollosproject/ui-media-player', () => ({
-  MediaPlayerSpacer: ({ children }) => children,
-  MediaPlayer: () => 'MediaPlayer',
-  MediaPlayerProvider: ({ children }) => children,
-  playVideoMutation: 'mutation { playVideo }',
-  withTabBarMediaSpacer: () => ({ children }) => children,
-}));
+  const Easing = {
+    exp: jest.fn(),
+    out: jest.fn(),
+  };
 
-jest.mock('react-native-video', () => 'Video');
+  // The mock for `call` immediately calls the callback which is incorrect
+  // So we override it with a no-op
+  Reanimated.default.call = () => {};
+  Reanimated.Easing = Easing;
+  Reanimated.EasingNode = Easing;
 
-jest.mock('react-native/Libraries/EventEmitter/NativeEventEmitter');
+  return Reanimated;
+});
 
-jest.mock(
-  'react-native/Libraries/Components/DatePicker/DatePickerIOS',
-  () => 'DatePicker'
-);
-jest.mock('./src/client/index');
+global.__reanimatedWorkletInit = jest.fn();
diff --git a/apolloschurchapp/loadConfig.js b/apolloschurchapp/loadConfig.js
index 922e5d01..8eb6c287 100644
--- a/apolloschurchapp/loadConfig.js
+++ b/apolloschurchapp/loadConfig.js
@@ -1,4 +1,19 @@
 import ApollosConfig from '@apollosproject/config';
 import FRAGMENTS from '@apollosproject/ui-fragments';
+import fragmentTypes from './src/client/fragmentTypes.json';
 
-ApollosConfig.loadJs({ FRAGMENTS });
+// Create a map all the interfaces each type implements.
+// If UniversalContentItem implements Node, Card, and ContentNode,
+// our typemap would be { UniversalContentItem: ['Node', 'Card', 'ContentNode'] }
+const TYPEMAP = fragmentTypes.__schema.types.reduce((acc, curr) => {
+  const { name } = curr;
+  const types = Object.fromEntries(
+    curr.possibleTypes.map((type) => [type.name, name])
+  );
+  Object.keys(types).forEach((key) => {
+    acc[key] = acc[key] ? [...acc[key], types[key]] : [types[key]];
+  });
+  return acc;
+}, {});
+
+ApollosConfig.loadJs({ FRAGMENTS, TYPEMAP });
diff --git a/apolloschurchapp/package.json b/apolloschurchapp/package.json
index 7e1ecf79..ce0e5cc9 100644
--- a/apolloschurchapp/package.json
+++ b/apolloschurchapp/package.json
@@ -3,30 +3,23 @@
   "version": "1.0.0",
   "private": true,
   "engines": {
-    "node": ">=10.x.x"
+    "node": ">=14"
   },
   "files": [
     "src"
   ],
   "scripts": {
     "setup": "./scripts/init.sh",
-    "android": "SIM=\"$($HOME/Library/Android/sdk/emulator/emulator -list-avds | sed -n 1p)\" && $HOME/Library/Android/sdk/emulator/emulator -avd \"${SIM}\" & react-native run-android --appId com.differential.apollos",
+    "ios": "react-native run-ios",
+    "android": "SIM=\"$($HOME/Library/Android/sdk/emulator/emulator -list-avds | sed -n 1p)\" && $HOME/Library/Android/sdk/emulator/emulator -avd \"${SIM}\" & react-native run-android",
     "codecov": "cat ./coverage/lcov.info | codecov",
-    "ios": "react-native run-ios --simulator=\"iPhone 11\"",
-    "link-packages": "node ./scripts/link-packages && yarn yalc update",
-    "unlink-packages": "node ./scripts/link-packages remove",
     "generate-stories": "rnstl --searchDir ./src --pattern **/*.stories.js",
     "lint": "eslint ./src --ext .js",
-    "get-schema": "eval $(grep ^APP_DATA_URL .env) && sleep 5 && get-graphql-schema $APP_DATA_URL > schema.graphql",
     "postinstall": "jetify && yarn pods",
     "pods": "(bundle install && cd ios && bundle exec pod install --repo-update)",
     "start": "yarn start:dev",
-    "start:dev": "yarn generate-stories & yarn get-schema && node ./scripts/get-introspection-data.js && react-native start",
+    "start:dev": "yarn generate-stories && node ./scripts/get-introspection-data.js && react-native start",
     "test": "TZ=UTC jest",
-    "upgrade": "npx @apollosproject/upgrade-tools upgrade",
-    "latest": "./scripts/add-packages.sh latest",
-    "beta": "./scripts/add-packages.sh beta",
-    "canary": "./scripts/add-packages.sh canary",
     "icons": "react-native set-icon --path",
     "splash": "react-native set-splash --path"
   },
@@ -50,33 +43,34 @@
   "dependencies": {
     "@apollo/client": "3.3.0-rc.2",
     "@apollo/react-hooks": "^3.1.3",
-    "@apollosproject/config": "^2.0.0-beta.0",
+    "@apollosproject/config": "^2.29.3",
     "@apollosproject/react-native-airplay-btn": "^0.2.0",
-    "@apollosproject/ui-analytics": "^2.0.0-beta.0",
-    "@apollosproject/ui-auth": "^2.0.0-beta.0",
-    "@apollosproject/ui-connected": "^2.0.0-beta.0",
-    "@apollosproject/ui-fragments": "^2.0.0-beta.0",
-    "@apollosproject/ui-htmlview": "^2.0.0-beta.0",
-    "@apollosproject/ui-kit": "^2.0.0-beta.0",
-    "@apollosproject/ui-mapview": "^2.0.0-beta.0",
-    "@apollosproject/ui-media-player": "^2.0.0-beta.0",
-    "@apollosproject/ui-notifications": "^2.0.0-beta.0",
-    "@apollosproject/ui-onboarding": "^2.0.0-beta.0",
-    "@apollosproject/ui-passes": "^2.0.0-beta.0",
-    "@apollosproject/ui-prayer": "^2.0.0-beta.0",
-    "@apollosproject/ui-scripture": "^2.0.0-beta.0",
-    "@apollosproject/ui-storybook": "^2.0.0-beta.0",
+    "@apollosproject/ui-analytics": "^2.29.3",
+    "@apollosproject/ui-auth": "^2.29.3",
+    "@apollosproject/ui-connected": "^2.29.3",
+    "@apollosproject/ui-fragments": "^2.29.3",
+    "@apollosproject/ui-htmlview": "^2.29.3",
+    "@apollosproject/ui-kit": "^2.29.3",
+    "@apollosproject/ui-mapview": "^2.29.3",
+    "@apollosproject/ui-media-player": "^2.29.3",
+    "@apollosproject/ui-notifications": "^2.29.3",
+    "@apollosproject/ui-onboarding": "^2.29.3",
+    "@apollosproject/ui-passes": "^2.29.3",
+    "@apollosproject/ui-prayer": "^2.29.3",
+    "@apollosproject/ui-scripture": "^2.29.3",
+    "@apollosproject/ui-storybook": "^2.29.3",
+    "@apollosproject/ui-test-utils": "^2.29.3",
+    "@gorhom/bottom-sheet": "3.4.1",
     "@metarouter/analytics-react-native": "^1.1.5",
     "@react-native-community/async-storage": "^1.5.1",
     "@react-native-community/datetimepicker": "^3.0.0",
     "@react-native-community/geolocation": "^2.0.2",
     "@react-native-community/masked-view": "^0.1.10",
     "@react-native-picker/picker": "^1.9.4",
-    "@react-navigation/bottom-tabs": "^5.6.1",
+    "@react-navigation/bottom-tabs": "^5.11.8",
     "@react-navigation/compat": "^5.1.28",
-    "@react-navigation/drawer": "^5.8.4",
-    "@react-navigation/native": "^5.6.1",
-    "@react-navigation/stack": "^5.6.2",
+    "@react-navigation/native": "^5.9.3",
+    "@react-navigation/stack": "^5.14.3",
     "apollo-storybook-react-native": "0.2.12",
     "apollo-upload-client": "14.1.3",
     "apollo3-cache-persist": "^0.8.0",
@@ -94,41 +88,38 @@
     "moment": "2.22.2",
     "node-fetch": "2.6.1",
     "react": "16.13.1",
-    "react-native": "0.63.2",
+    "react-native": "0.63.4",
     "react-native-config": "^0.11.7",
     "react-native-device-info": "^4.0.1",
-    "react-native-geolocation-service": "^3.0.0",
-    "react-native-gesture-handler": "^1.6.1",
-    "react-native-google-cast": "^3.3.0",
-    "react-native-image-picker": "0.28.0",
+    "react-native-geolocation-service": "^5.1.1",
+    "react-native-gesture-handler": "^1.10.3",
+    "react-native-image-picker": "^3.1.4",
     "react-native-inappbrowser-reborn": "^3.0.0",
     "react-native-linear-gradient": "^2.5.4",
-    "react-native-maps": "0.26.1",
-    "react-native-modal-datetime-picker": "9.0.0",
-    "react-native-music-control": "0.10.8",
-    "react-native-onesignal": "3.9.1",
+    "react-native-maps": "^0.27.1",
+    "react-native-music-control": "^1.3.0",
+    "react-native-onesignal": "4.0.8",
     "react-native-passkit-wallet": "^0.1.4",
     "react-native-permissions": "^2.0.5",
-    "react-native-reanimated": "^1.9.0",
+    "react-native-reanimated": "^2.0.0",
     "react-native-safari-view": "2.1.0",
     "react-native-safe-area-context": "^3.0.7",
-    "react-native-screens": "^2.9.0",
+    "react-native-screens": "3.2.0",
     "react-native-splash-screen": "^3.2.0",
     "react-native-svg": "^9.4.0",
     "react-native-video": "^5.0.0",
     "react-native-video-controls": "2.2.3",
-    "react-native-webview": "^7.0.0",
+    "react-native-webview": "^11.0.0",
     "recompose": "^0.30.0",
     "rn-fetch-blob": "^0.10.16",
     "stream": "^0.0.2",
     "yup": "0.26.6"
   },
   "devDependencies": {
-    "@apollosproject/eslint-config": "^2.0.0-beta.0",
-    "@apollosproject/ui-test-utils": "^2.0.0-beta.0",
+    "@apollosproject/eslint-config": "^2.29.3",
     "@babel/core": "^7.8.4",
     "@babel/runtime": "^7.8.4",
-    "@bam.tech/react-native-make": "^3.0.0",
+    "@bam.tech/react-native-make": "^3.0.3",
     "@carimus/metro-symlinked-deps": "^1.1.0",
     "@react-native-community/eslint-config": "^2.0.0",
     "@react-native-community/eslint-plugin": "^1.1.0",
@@ -149,7 +140,6 @@
     "eslint-plugin-react-hooks": "^4.0.2",
     "eslint-plugin-react-native": "^3.2.1",
     "get-dev-paths": "^0.1.0",
-    "get-graphql-schema": "^2.1.2",
     "graphql-import": "^0.7.1",
     "jest": "^25.1.0",
     "jetifier": "^1.6.4",
@@ -160,8 +150,7 @@
     "react-dom": "16.6.3",
     "react-native-storybook-loader": "1.8.0",
     "react-test-renderer": "16.13.1",
-    "waait": "1.0.2",
-    "yalc": "^1.0.0-pre.47"
+    "waait": "1.0.2"
   },
   "rnpm": {
     "assets": [
diff --git a/apolloschurchapp/schema.graphql b/apolloschurchapp/schema.graphql
deleted file mode 100644
index 318f98cd..00000000
--- a/apolloschurchapp/schema.graphql
+++ /dev/null
@@ -1,748 +0,0 @@
-directive @cacheControl(maxAge: Int, scope: CacheControlScope) on FIELD_DEFINITION | OBJECT | INTERFACE
-
-enum ACTION_FEATURE_ACTION {
-  READ_CONTENT
-  READ_EVENT
-  OPEN_URL
-  OPEN_NODE
-  OPEN_CHANNEL
-}
-
-type ActionBarAction {
-  id: ID!
-  icon: String
-  title: String
-  action: ACTION_FEATURE_ACTION
-  relatedNode: Node
-}
-
-type ActionBarFeature implements Feature & Node {
-  id: ID!
-  order: Int
-  title: String
-  actions: [ActionBarAction]
-}
-
-type ActionListAction {
-  id: ID!
-  title: String
-  subtitle: String
-  image: ImageMedia
-  relatedNode: Node
-  action: ACTION_FEATURE_ACTION
-}
-
-type ActionListFeature implements Feature & Node {
-  id: ID!
-  order: Int
-  title: String
-  subtitle: String
-  actions: [ActionListAction]
-  primaryAction: FeatureAction
-}
-
-input AnalyticsDeviceInfo {
-  platform: AnalyticsPlatform
-  deviceId: String
-  deviceModel: String
-  osVersion: String
-  appVersion: String
-}
-
-input AnalyticsIdentifyInput {
-  traits: [AnalyticsMetaField]
-  anonymousId: String!
-  deviceInfo: AnalyticsDeviceInfo
-}
-
-input AnalyticsMetaField {
-  field: String!
-  value: AnalyticsValue
-}
-
-enum AnalyticsPlatform {
-  iOS
-  Android
-}
-
-type AnalyticsResult {
-  success: Boolean
-}
-
-input AnalyticsTrackInput {
-  eventName: String!
-  properties: [AnalyticsMetaField]
-  anonymousId: String
-  deviceInfo: AnalyticsDeviceInfo
-}
-
-scalar AnalyticsValue
-
-type AudioMedia implements Media {
-  name: String
-  key: String
-  sources: [AudioMediaSource]
-}
-
-type AudioMediaSource implements MediaSource {
-  uri: String
-}
-
-interface AudioNode {
-  audios: [AudioMedia]
-}
-
-type AuthenticatedUser {
-  id: ID!
-  profile: Person
-  rock: RockPersonDetails
-  rockToken: String @deprecated(reason: "Use rock.authCookie instead")
-}
-
-type Authentication {
-  user: AuthenticatedUser
-  token: String
-}
-
-enum CacheControlScope {
-  PUBLIC
-  PRIVATE
-}
-
-type Campus implements Node {
-  id: ID!
-  name: String
-  street1: String
-  street2: String
-  city: String
-  state: String
-  postalCode: String
-  latitude: Float
-  longitude: Float
-  image: ImageMediaSource
-  distanceFromLocation(location: CampusLocationInput): Float
-  events: [Event]
-}
-
-input CampusLocationInput {
-  latitude: Float
-  longitude: Float
-}
-
-interface Card {
-  title(hyphenated: Boolean): String
-  coverImage: ImageMedia
-  summary: String
-}
-
-type CardListItem {
-  id: ID!
-  hasAction: Boolean
-  actionIcon: String
-  labelText: String
-  summary: String
-  coverImage: ImageMedia
-  title(hyphenated: Boolean): String
-  relatedNode: Node
-  action: ACTION_FEATURE_ACTION
-}
-
-"""A rgb color string"""
-scalar Color
-
-type ContentChannel implements Node {
-  id: ID!
-  name: String
-  description: String
-  childContentChannels: [ContentChannel]
-  childContentItemsConnection(first: Int, after: String): ContentItemsConnection
-  iconName: String
-}
-
-interface ContentChildNode {
-  parentChannel: ContentChannel
-  siblingContentItemsConnection(first: Int, after: String): ContentItemsConnection
-}
-
-interface ContentItem {
-  id: ID!
-  title(hyphenated: Boolean): String
-  publishDate: String
-  coverImage: ImageMedia
-  images: [ImageMedia]
-  videos: [VideoMedia]
-  audios: [AudioMedia]
-  htmlContent: String
-  summary: String
-  childContentItemsConnection(first: Int, after: String): ContentItemsConnection
-  siblingContentItemsConnection(first: Int, after: String): ContentItemsConnection
-  parentChannel: ContentChannel
-  theme: Theme
-  isLiked: Boolean
-  likedCount: Int
-  sharing: SharableContentItem
-}
-
-type ContentItemsConnection {
-  edges: [ContentItemsConnectionEdge]
-  totalCount: Int
-  pageInfo: PaginationInfo
-}
-
-type ContentItemsConnectionEdge {
-  node: ContentItem
-  cursor: String
-}
-
-input ContentItemsConnectionInput {
-  first: Int
-  after: String
-}
-
-interface ContentNode {
-  title(hyphenated: Boolean): String
-  coverImage: ImageMedia
-  htmlContent: String
-}
-
-interface ContentParentNode {
-  childContentItemsConnection(first: Int, after: String): ContentItemsConnection
-}
-
-type ContentSeriesContentItem implements ContentItem & Node & ContentNode & Card & VideoNode & AudioNode & ContentChildNode & ContentParentNode & ThemedNode & ProgressNode & LikableNode & ShareableNode & FeaturesNode {
-  id: ID!
-  title(hyphenated: Boolean): String
-  publishDate: String
-  coverImage: ImageMedia
-  images: [ImageMedia]
-  videos: [VideoMedia]
-  audios: [AudioMedia]
-  htmlContent: String
-  summary: String
-  childContentItemsConnection(first: Int, after: String): ContentItemsConnection
-  siblingContentItemsConnection(first: Int, after: String): ContentItemsConnection
-  parentChannel: ContentChannel
-  theme: Theme
-  percentComplete: Float
-  upNext: ContentItem
-  scriptures: [Scripture]
-  isLiked: Boolean
-  likedCount: Int
-  sharing: SharableContentItem
-  features: [Feature] @deprecated(reason: "Use featureFeed")
-  featureFeed: FeatureFeed
-}
-
-type Device implements Node {
-  id: ID!
-  pushId: String!
-  notificationsEnabled: Boolean!
-}
-
-type DevotionalContentItem implements ContentItem & Node & ContentNode & Card & VideoNode & AudioNode & ContentChildNode & ContentParentNode & ThemedNode & ScriptureNode & LikableNode & ShareableNode {
-  id: ID!
-  title(hyphenated: Boolean): String
-  publishDate: String
-  coverImage: ImageMedia
-  images: [ImageMedia]
-  videos: [VideoMedia]
-  audios: [AudioMedia]
-  htmlContent: String
-  summary: String
-  childContentItemsConnection(first: Int, after: String): ContentItemsConnection
-  siblingContentItemsConnection(first: Int, after: String): ContentItemsConnection
-  parentChannel: ContentChannel
-  theme: Theme
-  scriptures: [Scripture]
-  isLiked: Boolean
-  likedCount: Int
-  sharing: SharableContentItem
-}
-
-type Event implements Node {
-  id: ID!
-  name: String
-  description: String
-  location: String
-  start: String
-  end: String
-  image: ImageMedia
-}
-
-interface Feature {
-  id: ID!
-  order: Int
-}
-
-type FeatureAction {
-  relatedNode: Node
-  action: ACTION_FEATURE_ACTION
-  title: String
-}
-
-type FeatureFeed implements Node {
-  id: ID!
-  features: [Feature]
-}
-
-interface FeaturesNode {
-  features: [Feature] @deprecated(reason: "Use featureFeed")
-  featureFeed: FeatureFeed
-}
-
-enum GENDER {
-  Male
-  Female
-  Unknown
-}
-
-type Group implements Node {
-  id: ID!
-  name: String
-  leader: Person @deprecated(reason: "No longer used, use 'leaders' instead")
-  leaders: [Person]
-  members: [Person]
-}
-
-enum GROUP_TYPE {
-  Serving
-  Community
-  Family
-}
-
-type HeroListFeature implements Feature & Node {
-  id: ID!
-  order: Int
-  title: String
-  subtitle: String
-  actions: [ActionListAction]
-  heroCard: CardListItem
-  primaryAction: FeatureAction
-}
-
-type HorizontalCardListFeature implements Feature & Node {
-  id: ID!
-  order: Int
-  title: String
-  subtitle: String
-  cards: [CardListItem]
-  primaryAction: FeatureAction
-}
-
-type ImageMedia implements Media {
-  name: String
-  key: String
-  sources: [ImageMediaSource]
-}
-
-type ImageMediaSource implements MediaSource {
-  uri: String
-}
-
-enum InteractionAction {
-  VIEW
-  COMPLETE
-  PRAY
-}
-
-input InteractionDataField {
-  field: String!
-  value: InteractionValue
-}
-
-type InteractionResult {
-  success: Boolean
-  node: Node
-}
-
-scalar InteractionValue
-
-interface LikableNode {
-  isLiked: Boolean
-  likedCount: Int
-}
-
-enum LIKE_OPERATION {
-  Like
-  Unlike
-}
-
-input LikeEntityInput {
-  nodeId: ID!
-  operation: LIKE_OPERATION!
-}
-
-interface LiveNode {
-  liveStream: LiveStream
-}
-
-type LiveStream {
-  isLive: Boolean
-  eventStartTime: String
-  media: VideoMedia
-  webViewUrl: String
-  contentItem: ContentItem
-}
-
-interface Media {
-  name: String
-  key: String
-  sources: [MediaSource]
-}
-
-type MediaContentItem implements ContentItem & Node & ContentNode & Card & VideoNode & AudioNode & ContentChildNode & ContentParentNode & ThemedNode & ScriptureNode & LikableNode & ShareableNode {
-  id: ID!
-  title(hyphenated: Boolean): String
-  publishDate: String
-  coverImage: ImageMedia
-  images: [ImageMedia]
-  videos: [VideoMedia]
-  audios: [AudioMedia]
-  htmlContent: String
-  summary: String
-  childContentItemsConnection(first: Int, after: String): ContentItemsConnection
-  siblingContentItemsConnection(first: Int, after: String): ContentItemsConnection
-  parentChannel: ContentChannel
-  theme: Theme
-  scriptures: [Scripture]
-  isLiked: Boolean
-  likedCount: Int
-  sharing: SharableContentItem
-}
-
-enum MediaInputType {
-  IMAGE
-  VIDEO
-  AUDIO
-}
-
-interface MediaSource {
-  uri: String
-}
-
-type Mutation {
-  _placeholder: Boolean
-  updateLikeEntity(input: LikeEntityInput!): ContentItem @deprecated(reason: "Use the more general updateLikeNode instead")
-  updateLikeNode(input: LikeEntityInput!): Node
-  updateProfileField(input: UpdateProfileInput!): Person
-  updateProfileFields(input: [UpdateProfileInput]!): Person
-  uploadProfileImage(file: Upload!, size: Int!): Person
-  authenticate(identity: String!, password: String!): Authentication
-  changePassword(password: String!): Authentication
-  registerPerson(email: String!, password: String!, userProfile: [UpdateProfileInput]): Authentication
-  requestSmsLoginPin(phoneNumber: String!): SmsPinResult
-  authenticateWithSms(phoneNumber: String!, pin: String!): Authentication
-  registerWithSms(phoneNumber: String!, pin: String!, userProfile: [UpdateProfileInput]): Authentication
-  interactWithNode(action: InteractionAction!, nodeId: ID!, data: [InteractionDataField]): InteractionResult
-  identifySelf(input: AnalyticsIdentifyInput!): AnalyticsResult
-  trackEvent(input: AnalyticsTrackInput!): AnalyticsResult
-  updateUserPushSettings(input: PushSettingsInput!): Person
-  updateUserCampus(campusId: String!): Person
-  addPrayer(text: String!, isAnonymous: Boolean): PrayerRequest
-}
-
-interface Node {
-  id: ID!
-}
-
-type PaginationInfo {
-  startCursor: String
-  endCursor: String
-}
-
-type Pass implements Node {
-  id: ID!
-  type: PassType
-  description: String
-  logo: ImageMediaSource
-  thumbnail: ImageMediaSource
-  barcode: ImageMediaSource
-  primaryFields: [PassField]
-  secondaryFields: [PassField]
-  backgroundColor: Color
-  foregroundColor: Color
-  labelColor: Color
-  logoText: String
-  passkitFileUrl: String
-}
-
-type PassField {
-  key: String!
-  label: String
-  value: String!
-  textAlignment: PassFieldTextAlignment
-}
-
-enum PassFieldTextAlignment {
-  LEFT
-  CENTER
-  RIGHT
-  NATURAL
-}
-
-enum PassType {
-  GENERIC
-}
-
-type Person implements Node {
-  id: ID!
-  firstName: String
-  lastName: String
-  nickName: String
-  email: String
-  gender: GENDER
-  birthDate: String
-  photo: ImageMediaSource
-  devices: [Device]
-  campus: Campus
-  groups(type: GROUP_TYPE, asLeader: Boolean): [Group]
-}
-
-type PrayerListFeature implements Feature & Node {
-  id: ID!
-  order: Int
-  isCard: Boolean
-  title: String
-  subtitle: String
-  prayers: [PrayerRequest]
-}
-
-type PrayerRequest implements Node {
-  id: ID!
-  text: String!
-  requestor: Person
-  isAnonymous: Boolean
-  isPrayed: Boolean
-}
-
-interface ProgressNode {
-  percentComplete: Float
-  upNext: ContentItem
-}
-
-input PushSettingsInput {
-  enabled: Boolean
-  pushProviderUserId: String
-}
-
-type Query {
-  _placeholder: Boolean
-  node(id: ID!): Node
-  likedContent(first: Int, after: String): ContentItemsConnection
-  contentChannels: [ContentChannel]
-  campaigns: ContentItemsConnection
-  userFeed(first: Int, after: String): ContentItemsConnection
-  personaFeed(first: Int, after: String): ContentItemsConnection
-  currentUser: AuthenticatedUser
-  userExists(identity: String): USER_AUTH_STATUS
-  liveStream: LiveStream @deprecated(reason: "Use liveStreams, there may be multiple.")
-  liveStreams: [LiveStream]
-  scripture(query: String!, version: VERSION): Scripture @deprecated(reason: "Use 'scriptures' instead.")
-  scriptures(query: String!, version: VERSION): [Scripture]
-  userPass: Pass
-  search(query: String!, first: Int, after: String): SearchResultsConnection
-  campuses(location: CampusLocationInput): [Campus]
-  userFeedFeatures: [Feature] @deprecated(reason: "Use homeFeedFeatures or discoverFeedFeatures")
-  homeFeedFeatures(campusId: ID): FeatureFeed
-  discoverFeedFeatures: FeatureFeed
-}
-
-type RockPersonDetails {
-  authToken: String
-  authCookie: String
-}
-
-type Scripture implements Node {
-  id: ID!
-  html: String
-  reference: String
-  copyright: String
-  version: String
-}
-
-type ScriptureFeature implements Feature & Node {
-  id: ID!
-  order: Int
-  scriptures: [Scripture]
-  sharing: SharableFeature
-}
-
-interface ScriptureNode {
-  scriptures: [Scripture]
-}
-
-type SearchResult {
-  cursor: String
-  title: String
-  summary: String
-  coverImage: ImageMedia
-  node: Node
-}
-
-type SearchResultsConnection {
-  edges: [SearchResult]
-  pageInfo: PaginationInfo
-}
-
-interface Sharable {
-  message: String
-  title: String
-  url: String @deprecated(reason: "Not supported on the interface")
-}
-
-type SharableContentItem implements Sharable {
-  message: String
-  title: String
-  url: String
-}
-
-type SharableFeature implements Sharable {
-  message: String
-  title: String
-  url: String @deprecated(reason: "Not supported on a feature")
-}
-
-interface ShareableNode {
-  sharing: SharableContentItem
-}
-
-type SmsPinResult {
-  success: Boolean
-  userAuthStatus: USER_AUTH_STATUS
-}
-
-type TextFeature implements Feature & Node {
-  id: ID!
-  order: Int
-  body: String
-  sharing: SharableFeature
-}
-
-type Theme {
-  type: ThemeType
-  colors: ThemeColors
-}
-
-type ThemeColors {
-  primary: Color
-  secondary: Color
-  screen: Color
-  paper: Color
-  alert: Color
-}
-
-interface ThemedNode {
-  theme: Theme
-}
-
-enum ThemeType {
-  LIGHT
-  DARK
-}
-
-type UniversalContentItem implements ContentItem & Node & ContentNode & Card & VideoNode & AudioNode & ContentChildNode & ContentParentNode & ThemedNode & LikableNode & ShareableNode {
-  id: ID!
-  title(hyphenated: Boolean): String
-  publishDate: String
-  coverImage: ImageMedia
-  images: [ImageMedia]
-  videos: [VideoMedia]
-  audios: [AudioMedia]
-  htmlContent: String
-  summary: String
-  childContentItemsConnection(first: Int, after: String): ContentItemsConnection
-  siblingContentItemsConnection(first: Int, after: String): ContentItemsConnection
-  parentChannel: ContentChannel
-  theme: Theme
-  isLiked: Boolean
-  likedCount: Int
-  sharing: SharableContentItem
-}
-
-enum UPDATEABLE_PROFILE_FIELDS {
-  FirstName
-  LastName
-  Email
-  NickName
-  Gender
-  BirthDate
-}
-
-input UpdateProfileInput {
-  field: UPDATEABLE_PROFILE_FIELDS!
-  value: String!
-}
-
-"""The `Upload` scalar type represents a file upload."""
-scalar Upload
-
-type Url implements Node {
-  url: String
-  id: ID!
-}
-
-enum USER_AUTH_STATUS {
-  NONE
-  NEW_APP_USER
-  EXISTING_APP_USER
-}
-
-enum VERSION {
-  WEB
-  KJV
-}
-
-type VerticalCardListFeature implements Feature & Node {
-  id: ID!
-  order: Int
-  title: String
-  subtitle: String
-  isFeatured: Boolean
-  cards: [CardListItem]
-}
-
-type VideoMedia implements Media {
-  name: String
-  key: String
-  sources: [VideoMediaSource]
-  embedHtml: String
-}
-
-type VideoMediaSource implements MediaSource {
-  uri: String
-}
-
-interface VideoNode {
-  videos: [VideoMedia]
-}
-
-type WebviewFeature implements Feature & Node {
-  id: ID!
-  order: Int
-  linkText: String
-  title: String
-  url: String
-}
-
-type WeekendContentItem implements ContentItem & Node & ContentNode & Card & VideoNode & AudioNode & ContentChildNode & ContentParentNode & ThemedNode & LikableNode & LiveNode & ShareableNode & FeaturesNode {
-  id: ID!
-  title(hyphenated: Boolean): String
-  publishDate: String
-  coverImage: ImageMedia
-  images: [ImageMedia]
-  videos: [VideoMedia]
-  audios: [AudioMedia]
-  htmlContent: String
-  summary: String
-  childContentItemsConnection(first: Int, after: String): ContentItemsConnection
-  siblingContentItemsConnection(first: Int, after: String): ContentItemsConnection
-  parentChannel: ContentChannel
-  theme: Theme
-  isLiked: Boolean
-  likedCount: Int
-  liveStream: LiveStream
-  sharing: SharableContentItem
-  features: [Feature] @deprecated(reason: "Use featureFeed")
-  featureFeed: FeatureFeed
-}
-
diff --git a/apolloschurchapp/scripts/init.sh b/apolloschurchapp/scripts/init.sh
index 9d87ad1a..5a8c884a 100755
--- a/apolloschurchapp/scripts/init.sh
+++ b/apolloschurchapp/scripts/init.sh
@@ -3,4 +3,34 @@ if test -f .env; then
 	echo ".env file already exists!"
 	exit 1
 fi
-echo "APP_DATA_URL=http://localhost:4000" > .env
+
+echo "You will need the following before beginning:
+Google Maps API Key
+
+Are you ready to proceed? [y/n]: "
+read -r ANSWER
+if $ANSWER != "y"; then
+	exit 1
+fi
+
+# config variables
+echo "Google Maps API Key: "
+read -r GOOGLE
+
+echo "APP_DATA_URL=http://localhost:4000
+GOOGLE_MAPS_API_KEY=$GOOGLE" >.env
+
+# remove template encrypted files
+rm .env.shared.enc
+rm android/key.json.enc
+rm android/app/apollos.keystore.enc
+rm ios/apollos.p8.enc
+
+# app name
+echo "App name: "
+read -r APP
+CLEAN_APP=$(echo "$APP" | tr -d '[:space:]')
+npx react-native-rename "$CLEAN_APP"
+
+sed -i "" -E "s/Apollos Church/$APP/g" apolloschurchapp/ios/Info.plist
+sed -i "" -E "s/Apollos Church/$APP/g" apolloschurchapp/android/app/src/main/res/values/strings.xml
diff --git a/apolloschurchapp/scripts/link-packages.js b/apolloschurchapp/scripts/link-packages.js
deleted file mode 100644
index 7778c0a4..00000000
--- a/apolloschurchapp/scripts/link-packages.js
+++ /dev/null
@@ -1,16 +0,0 @@
-const fs = require('fs');
-const { execSync } = require('child_process');
-
-const direction = process.argv[2] || 'link';
-
-const packageJson = JSON.parse(fs.readFileSync(`${__dirname}/../package.json`));
-
-const dependencies = [
-  ...Object.keys(packageJson.dependencies),
-  ...Object.keys(packageJson.devDependencies),
-].filter((d) => d.includes('@apollosproject'));
-
-dependencies.forEach((dep) => {
-  const output = execSync(`yalc ${direction} ${dep}`, { encoding: 'utf8' });
-  console.log(output);
-});
diff --git a/apolloschurchapp/src/Providers.js b/apolloschurchapp/src/Providers.js
index 35a2705d..bd897e33 100644
--- a/apolloschurchapp/src/Providers.js
+++ b/apolloschurchapp/src/Providers.js
@@ -1,20 +1,43 @@
 import React from 'react';
+import PropTypes from 'prop-types';
 import ApollosConfig from '@apollosproject/config';
-import { Providers, NavigationService } from '@apollosproject/ui-kit';
+import { NavigationService } from '@apollosproject/ui-kit';
 import { AuthProvider } from '@apollosproject/ui-auth';
 import { AnalyticsProvider } from '@apollosproject/ui-analytics';
 import { NotificationsProvider } from '@apollosproject/ui-notifications';
-import { LiveProvider } from '@apollosproject/ui-connected';
+import {
+  LiveProvider,
+  ACCEPT_FOLLOW_REQUEST,
+} from '@apollosproject/ui-connected';
 import { checkOnboardingStatusAndNavigate } from '@apollosproject/ui-onboarding';
 
 import ClientProvider, { client } from './client';
-import customTheme, { customIcons } from './theme';
 
 const AppProviders = (props) => (
   <ClientProvider {...props}>
     <NotificationsProvider
       oneSignalKey={ApollosConfig.ONE_SIGNAL_KEY}
+      // TODO deprecated prop
       navigate={NavigationService.navigate}
+      handleExternalLink={(url) => {
+        const path = url.split('app-link/')[1];
+        const [route, location] = path.split('/');
+        if (route === 'content')
+          NavigationService.navigate('ContentSingle', { itemId: location });
+        if (route === 'nav')
+          NavigationService.navigate(
+            // turns "home" into "Home"
+            location[0].toUpperCase() + location.substring(1)
+          );
+      }}
+      actionMap={{
+        // accept a follow request when someone taps "accept" in a follow request push notification
+        acceptFollowRequest: ({ requestPersonId }) =>
+          client.mutate({
+            mutation: ACCEPT_FOLLOW_REQUEST,
+            variables: { personId: requestPersonId },
+          }),
+      }}
     >
       <AuthProvider
         navigateToAuth={() => NavigationService.navigate('Auth')}
@@ -27,17 +50,15 @@ const AppProviders = (props) => (
         }
       >
         <AnalyticsProvider>
-          <LiveProvider>
-            <Providers
-              themeInput={customTheme}
-              iconInput={customIcons}
-              {...props}
-            />
-          </LiveProvider>
+          <LiveProvider>{props.children}</LiveProvider>
         </AnalyticsProvider>
       </AuthProvider>
     </NotificationsProvider>
   </ClientProvider>
 );
 
+AppProviders.propTypes = {
+  children: PropTypes.shape({}),
+};
+
 export default AppProviders;
diff --git a/apolloschurchapp/src/client/cache.js b/apolloschurchapp/src/client/cache.js
index 7a35f859..abd9b8f9 100644
--- a/apolloschurchapp/src/client/cache.js
+++ b/apolloschurchapp/src/client/cache.js
@@ -3,7 +3,9 @@ import AsyncStorage from '@react-native-community/async-storage';
 import { CachePersistor } from 'apollo3-cache-persist';
 import ApollosConfig from '@apollosproject/config';
 
-import introspectionQueryResultData from './fragmentTypes.json';
+// NOTE: this file is generated at runtime
+// eslint-disable-next-line
+import introspectionQueryResultData from "./fragmentTypes.json";
 
 const finalPossibleTypes = {};
 introspectionQueryResultData.__schema.types.forEach((supertype) => {
diff --git a/apolloschurchapp/src/client/fragmentTypes.json b/apolloschurchapp/src/client/fragmentTypes.json
deleted file mode 100644
index 6d2775fc..00000000
--- a/apolloschurchapp/src/client/fragmentTypes.json
+++ /dev/null
@@ -1 +0,0 @@
-{"__schema":{"types":[{"kind":"INTERFACE","name":"Node","possibleTypes":[{"name":"ContentChannel"},{"name":"Person"},{"name":"Device"},{"name":"Campus"},{"name":"Event"},{"name":"Group"},{"name":"Scripture"},{"name":"Pass"},{"name":"FeatureFeed"},{"name":"PrayerRequest"},{"name":"UniversalContentItem"},{"name":"DevotionalContentItem"},{"name":"MediaContentItem"},{"name":"ContentSeriesContentItem"},{"name":"WeekendContentItem"},{"name":"Url"},{"name":"ActionListFeature"},{"name":"ActionBarFeature"},{"name":"HeroListFeature"},{"name":"VerticalCardListFeature"},{"name":"HorizontalCardListFeature"},{"name":"TextFeature"},{"name":"ScriptureFeature"},{"name":"WebviewFeature"},{"name":"PrayerListFeature"}]},{"kind":"INTERFACE","name":"ContentItem","possibleTypes":[{"name":"UniversalContentItem"},{"name":"DevotionalContentItem"},{"name":"MediaContentItem"},{"name":"ContentSeriesContentItem"},{"name":"WeekendContentItem"}]},{"kind":"INTERFACE","name":"Media","possibleTypes":[{"name":"ImageMedia"},{"name":"VideoMedia"},{"name":"AudioMedia"}]},{"kind":"INTERFACE","name":"MediaSource","possibleTypes":[{"name":"ImageMediaSource"},{"name":"VideoMediaSource"},{"name":"AudioMediaSource"}]},{"kind":"INTERFACE","name":"Sharable","possibleTypes":[{"name":"SharableContentItem"},{"name":"SharableFeature"}]},{"kind":"INTERFACE","name":"Feature","possibleTypes":[{"name":"ActionListFeature"},{"name":"ActionBarFeature"},{"name":"HeroListFeature"},{"name":"VerticalCardListFeature"},{"name":"HorizontalCardListFeature"},{"name":"TextFeature"},{"name":"ScriptureFeature"},{"name":"WebviewFeature"},{"name":"PrayerListFeature"}]},{"kind":"INTERFACE","name":"ContentNode","possibleTypes":[{"name":"UniversalContentItem"},{"name":"DevotionalContentItem"},{"name":"MediaContentItem"},{"name":"ContentSeriesContentItem"},{"name":"WeekendContentItem"}]},{"kind":"INTERFACE","name":"Card","possibleTypes":[{"name":"UniversalContentItem"},{"name":"DevotionalContentItem"},{"name":"MediaContentItem"},{"name":"ContentSeriesContentItem"},{"name":"WeekendContentItem"}]},{"kind":"INTERFACE","name":"VideoNode","possibleTypes":[{"name":"UniversalContentItem"},{"name":"DevotionalContentItem"},{"name":"MediaContentItem"},{"name":"ContentSeriesContentItem"},{"name":"WeekendContentItem"}]},{"kind":"INTERFACE","name":"AudioNode","possibleTypes":[{"name":"UniversalContentItem"},{"name":"DevotionalContentItem"},{"name":"MediaContentItem"},{"name":"ContentSeriesContentItem"},{"name":"WeekendContentItem"}]},{"kind":"INTERFACE","name":"ContentParentNode","possibleTypes":[{"name":"UniversalContentItem"},{"name":"DevotionalContentItem"},{"name":"MediaContentItem"},{"name":"ContentSeriesContentItem"},{"name":"WeekendContentItem"}]},{"kind":"INTERFACE","name":"ContentChildNode","possibleTypes":[{"name":"UniversalContentItem"},{"name":"DevotionalContentItem"},{"name":"MediaContentItem"},{"name":"ContentSeriesContentItem"},{"name":"WeekendContentItem"}]},{"kind":"INTERFACE","name":"ThemedNode","possibleTypes":[{"name":"UniversalContentItem"},{"name":"DevotionalContentItem"},{"name":"MediaContentItem"},{"name":"ContentSeriesContentItem"},{"name":"WeekendContentItem"}]},{"kind":"INTERFACE","name":"ProgressNode","possibleTypes":[{"name":"ContentSeriesContentItem"}]},{"kind":"INTERFACE","name":"ScriptureNode","possibleTypes":[{"name":"DevotionalContentItem"},{"name":"MediaContentItem"}]},{"kind":"INTERFACE","name":"LikableNode","possibleTypes":[{"name":"UniversalContentItem"},{"name":"DevotionalContentItem"},{"name":"MediaContentItem"},{"name":"ContentSeriesContentItem"},{"name":"WeekendContentItem"}]},{"kind":"INTERFACE","name":"ShareableNode","possibleTypes":[{"name":"UniversalContentItem"},{"name":"DevotionalContentItem"},{"name":"MediaContentItem"},{"name":"ContentSeriesContentItem"},{"name":"WeekendContentItem"}]},{"kind":"INTERFACE","name":"FeaturesNode","possibleTypes":[{"name":"ContentSeriesContentItem"},{"name":"WeekendContentItem"}]},{"kind":"INTERFACE","name":"LiveNode","possibleTypes":[{"name":"WeekendContentItem"}]}]}}
\ No newline at end of file
diff --git a/apolloschurchapp/src/client/index.js b/apolloschurchapp/src/client/index.js
index 058129c7..71333478 100644
--- a/apolloschurchapp/src/client/index.js
+++ b/apolloschurchapp/src/client/index.js
@@ -40,6 +40,21 @@ export const client = new ApolloClient({
   typeDefs: schema,
   name: getApplicationName(),
   version: getVersion(),
+  // NOTE: this is because we have some very taxing queries that we want to avoid running twice
+  // see if it's still an issue after we're operating mostly on Postgres and have less loading states
+  defaultOptions: {
+    watchQuery: {
+      nextFetchPolicy(lastFetchPolicy) {
+        if (
+          lastFetchPolicy === 'cache-and-network' ||
+          lastFetchPolicy === 'network-only'
+        ) {
+          return 'cache-first';
+        }
+        return lastFetchPolicy;
+      },
+    },
+  },
 });
 
 // Hack to give auth link access to method on client;
diff --git a/apolloschurchapp/src/content-feed/content-feed.tests.js b/apolloschurchapp/src/content-feed/content-feed.tests.js
deleted file mode 100644
index 18905ace..00000000
--- a/apolloschurchapp/src/content-feed/content-feed.tests.js
+++ /dev/null
@@ -1,110 +0,0 @@
-import React from 'react';
-
-import { renderWithApolloData, Providers } from '@apollosproject/ui-test-utils';
-import { MockedProvider } from '@apollo/client/testing';
-import { GET_CONTENT_CARD } from '@apollosproject/ui-connected';
-import GET_CONTENT_FEED from './getContentFeed';
-
-import ContentFeed from './index';
-
-describe('content feed query component', () => {
-  it('renders a feedview after successful query', async () => {
-    const mock = {
-      request: {
-        query: GET_CONTENT_FEED,
-        variables: { itemId: 'ContentChannel:123' },
-      },
-      result: {
-        data: {
-          node: {
-            __typename: 'ContentChannel',
-            childContentItemsConnection: {
-              pageInfo: {
-                endCursor: 'blablalba',
-                __typename: 'PaginationInfo',
-              },
-              __typename: 'ContentItemsConnection',
-              edges: [
-                {
-                  __typename: 'ContentItemsConnectionEdge',
-                  node: {
-                    __typename: 'UniversalContentItem',
-                    id: 'UniversalContentItem:d57994350b9d213866b24dea3a97433d',
-                    coverImage: null,
-                    parentChannel: {
-                      id: 'ContentChannel:4f68015ba18662a7409d1219a4ce013e',
-                      name: 'Editorial',
-                      iconName: 'text',
-                      __typename: 'ContentChannel',
-                    },
-                    title: 'Mea Animal Aperiam Ornatus Eu',
-                    hyphenatedTitle: 'Mea Animal Aperiam Ornatus Eu',
-                    summary: 'Bla bla bla',
-                    theme: null,
-                    isLiked: false,
-                    likedCount: 0,
-                    videos: [],
-                    audios: [],
-                  },
-                },
-                {
-                  __typename: 'ContentItemsConnectionEdge',
-                  node: {
-                    __typename: 'UniversalContentItem',
-                    id: 'UniversalContentItem:b36e55d803443431e96bb4b5068147ec',
-                    coverImage: null,
-                    parentChannel: {
-                      id: 'ContentChannel:4f68015ba18662a7409d1219a4ce013e',
-                      name: 'Editorial',
-                      iconName: 'text',
-                      __typename: 'ContentChannel',
-                    },
-                    title: 'Probo Senserit Id Mea, Ut Sed Malis Postea,',
-                    hyphenatedTitle:
-                      'Probo Senserit Id Mea, Ut Sed Malis Postea,',
-                    summary: 'Bla bla bla',
-                    theme: null,
-                    isLiked: false,
-                    likedCount: 0,
-                    videos: [],
-                    audios: [],
-                  },
-                },
-              ],
-            },
-          },
-        },
-      },
-    };
-
-    const additionalMocks = mock.result.data.node.childContentItemsConnection.edges.map(
-      ({ node }) => ({
-        request: {
-          query: GET_CONTENT_CARD,
-          variables: { contentId: node.id },
-        },
-        result: {
-          data: {
-            node: {
-              ...node,
-              coverImage: {
-                name: 'Boom',
-                ...node.coverImage,
-              },
-            },
-          },
-        },
-      })
-    );
-
-    const tree = await renderWithApolloData(
-      <Providers
-        MockedProvider={MockedProvider}
-        mocks={[mock, ...additionalMocks]}
-      >
-        <ContentFeed route={{ params: { itemId: 'ContentChannel:123' } }} />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/content-feed/getContentFeed.js b/apolloschurchapp/src/content-feed/getContentFeed.js
deleted file mode 100644
index 38ed31fb..00000000
--- a/apolloschurchapp/src/content-feed/getContentFeed.js
+++ /dev/null
@@ -1,22 +0,0 @@
-import gql from 'graphql-tag';
-import ApollosConfig from '@apollosproject/config';
-
-export default gql`
-  query getContentFeed($itemId: ID!, $after: String, $first: Int) {
-    node(id: $itemId) {
-      ... on ContentChannel {
-        childContentItemsConnection(after: $after, first: $first) {
-          pageInfo {
-            endCursor
-          }
-          edges {
-            node {
-              ...contentCardFragment
-            }
-          }
-        }
-      }
-    }
-  }
-  ${ApollosConfig.FRAGMENTS.CONTENT_CARD_FRAGMENT}
-`;
diff --git a/apolloschurchapp/src/content-feed/index.js b/apolloschurchapp/src/content-feed/index.js
deleted file mode 100644
index ea033d8d..00000000
--- a/apolloschurchapp/src/content-feed/index.js
+++ /dev/null
@@ -1,78 +0,0 @@
-import React, { PureComponent } from 'react';
-import { Query } from '@apollo/client/react/components';
-import { get } from 'lodash';
-import PropTypes from 'prop-types';
-
-import {
-  ContentCardConnected,
-  fetchMoreResolver,
-} from '@apollosproject/ui-connected';
-
-import { BackgroundView, FeedView } from '@apollosproject/ui-kit';
-
-import GET_CONTENT_FEED from './getContentFeed';
-/**
- * This is where the component description lives
- * A FeedView wrapped in a query to pull content data.
- */
-class ContentFeed extends PureComponent {
-  static propTypes = {
-    /** Functions passed down from React Navigation to use in navigating to/from
-     * items in the feed.
-     */
-    navigation: PropTypes.shape({
-      navigate: PropTypes.func,
-    }),
-    route: PropTypes.shape({
-      params: PropTypes.shape({
-        itemId: PropTypes.string,
-      }),
-    }),
-  };
-
-  /** Function that is called when a card in the feed is pressed.
-   * Takes the user to the ContentSingle
-   */
-  handleOnPress = (item) =>
-    this.props.navigation.navigate('ContentSingle', {
-      itemId: item.id,
-      sharing: item.sharing,
-    });
-
-  render() {
-    const { route } = this.props;
-    const { itemId } = route.params;
-    return (
-      <BackgroundView>
-        <Query
-          query={GET_CONTENT_FEED}
-          variables={{ itemId }}
-          fetchPolicy="cache-and-network"
-        >
-          {({ loading, error, data, refetch, fetchMore, variables }) => (
-            <FeedView
-              ListItemComponent={ContentCardConnected}
-              content={get(
-                data,
-                'node.childContentItemsConnection.edges',
-                []
-              ).map((edge) => edge.node)}
-              fetchMore={fetchMoreResolver({
-                collectionName: 'node.childContentItemsConnection',
-                fetchMore,
-                variables,
-                data,
-              })}
-              isLoading={loading}
-              error={error}
-              refetch={refetch}
-              onPressItem={this.handleOnPress}
-            />
-          )}
-        </Query>
-      </BackgroundView>
-    );
-  }
-}
-
-export default ContentFeed;
diff --git a/apolloschurchapp/src/content-single/ActionContainer/index.js b/apolloschurchapp/src/content-single/ActionContainer/index.js
deleted file mode 100644
index 059c2e02..00000000
--- a/apolloschurchapp/src/content-single/ActionContainer/index.js
+++ /dev/null
@@ -1,43 +0,0 @@
-import React from 'react';
-import { Platform, View } from 'react-native';
-import { useSafeAreaInsets } from 'react-native-safe-area-context';
-import PropTypes from 'prop-types';
-import { SideBySideView, styled } from '@apollosproject/ui-kit';
-import {
-  LikeButtonConnected,
-  ShareButtonConnected,
-} from '@apollosproject/ui-connected';
-
-const PositioningView = styled(({ theme }) => ({
-  justifyContent: 'space-around',
-  paddingVertical: theme.sizing.baseUnit / 2,
-  paddingHorizontal: theme.sizing.baseUnit,
-}))(SideBySideView);
-
-const Container = styled(({ theme, safeAreaMargin }) => ({
-  backgroundColor: theme.colors.background.paper,
-  position: 'absolute',
-  width: '100%',
-  bottom: 0,
-  paddingBottom: safeAreaMargin,
-  ...Platform.select(theme.shadows.default),
-}))(View);
-
-const ActionContainer = ({ itemId }) => {
-  const { bottom } = useSafeAreaInsets();
-  return (
-    <Container safeAreaMargin={bottom}>
-      <PositioningView>
-        <LikeButtonConnected itemId={itemId} />
-        <ShareButtonConnected itemId={itemId} />
-      </PositioningView>
-    </Container>
-  );
-};
-
-ActionContainer.propTypes = {
-  content: PropTypes.shape({}),
-  itemId: PropTypes.string,
-};
-
-export default ActionContainer;
diff --git a/apolloschurchapp/src/content-single/ContentSingle.js b/apolloschurchapp/src/content-single/ContentSingle.js
index 01158cee..d60e5f5a 100644
--- a/apolloschurchapp/src/content-single/ContentSingle.js
+++ b/apolloschurchapp/src/content-single/ContentSingle.js
@@ -9,16 +9,20 @@ import {
   ThemeMixinConnected,
 } from '@apollosproject/ui-connected';
 
-import ActionContainer from './ActionContainer';
+import { styled } from '@apollosproject/ui-kit';
+
+const PaddedNodeSingleConnected = styled(({ theme: { sizing } }) => ({
+  paddingBottom: sizing.baseUnit * 5,
+}))(NodeSingleConnected);
 
 const ContentSingle = (props) => {
   const nodeId = props.route?.params?.itemId;
   const { data, loading } = useQuery(
     gql`
-      query getContentNodeTitle($nodeId: ID) {
+      query getContentNodeTitle($nodeId: ID!) {
         node(id: $nodeId) {
+          id
           ... on ContentNode {
-            id
             title
           }
         }
@@ -41,9 +45,7 @@ const ContentSingle = (props) => {
           itemId: nodeId,
         }}
       />
-      <NodeSingleConnected nodeId={nodeId}>
-        <ActionContainer itemId={nodeId} />
-      </NodeSingleConnected>
+      <PaddedNodeSingleConnected nodeId={nodeId} />
     </ThemeMixinConnected>
   );
 };
diff --git a/apolloschurchapp/src/content-single/index.js b/apolloschurchapp/src/content-single/index.js
index a9a268a5..b75aa4f7 100644
--- a/apolloschurchapp/src/content-single/index.js
+++ b/apolloschurchapp/src/content-single/index.js
@@ -18,6 +18,7 @@ const ContentSingleNavigator = ({ route, navigation, ...props }) => (
       headerRight: ModalCloseButton,
       headerLeft: ModalBackButton,
       headerTitle: '',
+      headerTopInsetEnabled: false,
     }}
   >
     <Screen
diff --git a/apolloschurchapp/src/event/Event.tests.js b/apolloschurchapp/src/event/Event.tests.js
index 8164746c..5717420c 100644
--- a/apolloschurchapp/src/event/Event.tests.js
+++ b/apolloschurchapp/src/event/Event.tests.js
@@ -1,14 +1,13 @@
 import React from 'react';
-import renderer from 'react-test-renderer';
 import moment from 'moment';
 
-import { Providers } from '@apollosproject/ui-test-utils';
+import { Providers, renderWithApolloData } from '@apollosproject/ui-test-utils';
 
 import Event from './Event';
 
 describe('The Event component', () => {
-  it('should render', () => {
-    const tree = renderer.create(
+  it('should render', async () => {
+    const tree = await renderWithApolloData(
       <Providers>
         <Event
           event={{
diff --git a/apolloschurchapp/src/index.js b/apolloschurchapp/src/index.js
index 66796db1..877f0bcd 100644
--- a/apolloschurchapp/src/index.js
+++ b/apolloschurchapp/src/index.js
@@ -1,7 +1,13 @@
-import hoistNonReactStatic from 'hoist-non-react-statics';
+/* eslint-disable react/jsx-handler-names */
+
 import React from 'react';
-import { StatusBar, Platform } from 'react-native';
-import { NavigationContainer } from '@react-navigation/native';
+import { StatusBar } from 'react-native';
+import {
+  NavigationContainer,
+  useNavigation,
+  DarkTheme,
+  DefaultTheme,
+} from '@react-navigation/native';
 import { createNativeStackNavigator } from 'react-native-screens/native-stack';
 import SplashScreen from 'react-native-splash-screen';
 import 'react-native-gesture-handler'; // required for react-navigation
@@ -11,18 +17,22 @@ import {
   BackgroundView,
   withTheme,
   NavigationService,
+  Providers as ThemeProvider,
 } from '@apollosproject/ui-kit';
 import Passes from '@apollosproject/ui-passes';
 import { MapViewConnected as Location } from '@apollosproject/ui-mapview';
 import Auth, { ProtectedRoute } from '@apollosproject/ui-auth';
+import { Landing, Onboarding } from '@apollosproject/ui-onboarding';
 
+import {
+  ContentFeedConnected,
+  SearchScreenConnected,
+} from '@apollosproject/ui-connected';
 import Providers from './Providers';
 import ContentSingle from './content-single';
-import NodeSingle from './node-single';
 import Event from './event';
 import Tabs from './tabs';
-import LandingScreen from './ui/LandingScreen';
-import Onboarding from './ui/Onboarding';
+import customTheme, { customIcons } from './theme';
 
 enableScreens(); // improves performance for react-navigation
 
@@ -31,93 +41,108 @@ const AppStatusBar = withTheme(({ theme }) => ({
   backgroundColor: theme.colors.background.paper,
 }))(StatusBar);
 
-const ProtectedRouteWithSplashScreen = (props) => {
+const ProtectedRouteWithSplashScreen = () => {
   const handleOnRouteChange = () => SplashScreen.hide();
-
-  return <ProtectedRoute {...props} onRouteChange={handleOnRouteChange} />;
+  const navigation = useNavigation();
+  return (
+    <ProtectedRoute
+      onRouteChange={handleOnRouteChange}
+      navigation={navigation}
+    />
+  );
 };
 
-// Hack to avoid needing to pass emailRequired through the navigator.navigate
-const EnhancedAuth = (props) => <Auth {...props} emailRequired />;
-// 😑
-hoistNonReactStatic(EnhancedAuth, Auth);
-
-const { Navigator, Screen } = createNativeStackNavigator();
-const ThemedNavigator = withTheme(({ theme, ...props }) => ({
-  ...props,
-  screenOptions: {
-    headerTintColor: theme.colors.action.secondary,
-    headerTitleStyle: {
-      color: theme.colors.text.primary,
+const ThemedNavigationContainer = withTheme(({ theme, ...props }) => ({
+  theme: {
+    ...(theme.type === 'dark' ? DarkTheme : DefaultTheme),
+    dark: theme.type === 'dark',
+    colors: {
+      ...(theme.type === 'dark' ? DarkTheme.colors : DefaultTheme.colors),
+      primary: theme.colors.secondary,
+      background: theme.colors.background.screen,
+      card: theme.colors.background.paper,
+      text: theme.colors.text.primary,
     },
-    headerStyle: {
-      backgroundColor: theme.colors.background.paper,
-      ...Platform.select(theme.shadows.default),
-    },
-    headerShown: false,
-    stackPresentation: 'modal',
   },
-}))(Navigator);
+  ...props,
+}))(({ containerRef, ...props }) => (
+  <NavigationContainer ref={containerRef} {...props} />
+));
+
+const LandingToAuth = () => {
+  const navigation = useNavigation();
+  return <Landing onPressPrimary={() => navigation.navigate('Auth')} />;
+};
+
+const { Navigator, Screen } = createNativeStackNavigator();
 
-const App = (props) => (
-  <Providers>
+const App = () => (
+  <ThemeProvider themeInput={customTheme} iconInput={customIcons}>
     <BackgroundView>
       <AppStatusBar />
-      <NavigationContainer ref={NavigationService.setTopLevelNavigator}>
-        <ThemedNavigator initialRouteName="ProtectedRoute" {...props}>
-          <Screen
-            name="ProtectedRoute"
-            component={ProtectedRouteWithSplashScreen}
-          />
-          <Screen name="Tabs" component={Tabs} options={{ title: 'Home' }} />
-          <Screen
-            name="ContentSingle"
-            component={ContentSingle}
-            options={{ title: 'Content' }}
-          />
-          <Screen
-            name="NodeSingle"
-            component={NodeSingle}
-            options={{ title: 'Node' }}
-          />
-          <Screen name="Event" component={Event} options={{ title: 'Event' }} />
-          <Screen
-            name="Auth"
-            component={EnhancedAuth}
-            options={{
-              title: 'Login',
-              gestureEnabled: false,
-              stackPresentation: 'push',
-            }}
-          />
-          <Screen
-            name="Location"
-            component={Location}
-            options={{ headerShown: true }}
-          />
-          <Screen
-            name="Passes"
-            component={Passes}
-            options={{ title: 'Check-In Pass' }}
-          />
-          <Screen
-            name="Onboarding"
-            component={Onboarding}
-            options={{
-              title: 'Onboarding',
-              gestureEnabled: false,
-              stackPresentation: 'push',
-            }}
-          />
-          <Screen
-            name="LandingScreen"
-            component={LandingScreen}
-            options={{ headerShown: false }}
-          />
-        </ThemedNavigator>
-      </NavigationContainer>
+      <ThemedNavigationContainer
+        containerRef={NavigationService.setTopLevelNavigator}
+        onReady={NavigationService.setIsReady}
+      >
+        <Providers>
+          <Navigator
+            screenOptions={{ headerShown: false, stackPresentation: 'modal' }}
+          >
+            <Screen
+              name="ProtectedRoute"
+              component={ProtectedRouteWithSplashScreen}
+            />
+            <Screen name="Tabs" component={Tabs} />
+            <Screen
+              name="ContentSingle"
+              component={ContentSingle}
+              options={{
+                title: 'Content',
+                stackPresentation: 'push',
+              }}
+            />
+            <Screen
+              component={ContentFeedConnected}
+              name="ContentFeed"
+              options={({ route }) => ({
+                title: route.params.itemTitle || 'Content Feed',
+                stackPresentation: 'push',
+              })}
+            />
+            <Screen
+              name="Event"
+              component={Event}
+              options={{ title: 'Event' }}
+            />
+            <Screen
+              name="Auth"
+              component={Auth}
+              options={{
+                gestureEnabled: false,
+                stackPresentation: 'push',
+              }}
+            />
+            <Screen name="Location" component={Location} />
+            <Screen
+              name="Passes"
+              component={Passes}
+              options={{ title: 'Check-In Pass' }}
+            />
+            <Screen
+              name="Onboarding"
+              component={Onboarding}
+              options={{
+                gestureEnabled: false,
+                stackPresentation: 'push',
+              }}
+            />
+            <Screen name="LandingScreen" component={LandingToAuth} />
+            <Screen name="Search" component={SearchScreenConnected} />
+          </Navigator>
+        </Providers>
+      </ThemedNavigationContainer>
     </BackgroundView>
-  </Providers>
+  </ThemeProvider>
 );
 
 export default App;
diff --git a/apolloschurchapp/src/node-single/NodeSingle.js b/apolloschurchapp/src/node-single/NodeSingle.js
deleted file mode 100644
index 230826bd..00000000
--- a/apolloschurchapp/src/node-single/NodeSingle.js
+++ /dev/null
@@ -1,49 +0,0 @@
-import React, { PureComponent } from 'react';
-import { get } from 'lodash';
-import PropTypes from 'prop-types';
-
-import { ThemeMixin } from '@apollosproject/ui-kit';
-
-import {
-  InteractWhenLoadedConnected,
-  NodeSingleConnected,
-} from '@apollosproject/ui-connected';
-
-import NavigationHeader from '../ui/NavigationHeader';
-
-class NodeSingle extends PureComponent {
-  static propTypes = {
-    route: PropTypes.shape({
-      params: PropTypes.shape({ nodeId: PropTypes.string }),
-    }),
-    navigation: PropTypes.shape({
-      push: PropTypes.func,
-    }),
-  };
-
-  get nodeId() {
-    return this.props.route?.params?.nodeId;
-  }
-
-  static navigationOptions = {
-    header: NavigationHeader,
-    headerTransparent: true,
-    headerMode: 'float',
-  };
-
-  render() {
-    return (
-      <ThemeMixin
-        mixin={{
-          type: get(this.props, 'theme.type'),
-          colors: get(this.props, 'theme.colors'),
-        }}
-      >
-        <InteractWhenLoadedConnected nodeId={this.nodeId} action={'COMPLETE'} />
-        <NodeSingleConnected nodeId={this.nodeId} />
-      </ThemeMixin>
-    );
-  }
-}
-
-export default NodeSingle;
diff --git a/apolloschurchapp/src/node-single/index.js b/apolloschurchapp/src/node-single/index.js
deleted file mode 100644
index e208efc0..00000000
--- a/apolloschurchapp/src/node-single/index.js
+++ /dev/null
@@ -1,37 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-import { createNativeStackNavigator } from 'react-native-screens/native-stack';
-
-import { ModalCloseButton, ModalBackButton } from '@apollosproject/ui-kit';
-import NodeSingle from './NodeSingle';
-
-const { Screen, Navigator } = createNativeStackNavigator();
-
-const NodeSingleNavigator = ({ route, navigation, ...props }) => (
-  <Navigator
-    {...props}
-    headerMode="float"
-    screenOptions={{
-      headerTranslucent: true,
-      headerStyle: { backgroundColor: 'transparent' },
-      headerHideShadow: true,
-      headerRight: ModalCloseButton,
-      headerLeft: ModalBackButton,
-      headerTitle: '',
-    }}
-  >
-    <Screen
-      name="NodeSingle"
-      component={NodeSingle}
-      initialParams={route.params}
-    />
-  </Navigator>
-);
-
-NodeSingleNavigator.propTypes = {
-  route: PropTypes.shape({
-    params: PropTypes.shape({}),
-  }),
-};
-
-export default NodeSingleNavigator;
diff --git a/apolloschurchapp/src/tabs/connect/ActionBar.js b/apolloschurchapp/src/tabs/connect/ActionBar.js
index da1aafa3..900f129f 100644
--- a/apolloschurchapp/src/tabs/connect/ActionBar.js
+++ b/apolloschurchapp/src/tabs/connect/ActionBar.js
@@ -19,11 +19,6 @@ const Toolbar = () => {
             icon="download"
             label="Give"
           />
-          <ActionBarItem
-            onPress={() => navigation.navigate('TestingControlPanel')}
-            icon="information"
-            label="Test"
-          />
         </ActionBar>
       )}
     </RockAuthedWebBrowser>
diff --git a/apolloschurchapp/src/tabs/connect/ActionTable/index.js b/apolloschurchapp/src/tabs/connect/ActionTable/index.js
index 12e9374f..df57ba0e 100644
--- a/apolloschurchapp/src/tabs/connect/ActionTable/index.js
+++ b/apolloschurchapp/src/tabs/connect/ActionTable/index.js
@@ -1,6 +1,5 @@
 import React from 'react';
 import { View } from 'react-native';
-import { useNavigation } from '@react-navigation/native';
 
 import {
   TableView,
@@ -26,67 +25,47 @@ const Name = styled({
   flexGrow: 1,
 })(View);
 
-const ActionTable = () => {
-  const navigation = useNavigation();
-  return (
-    <RockAuthedWebBrowser>
-      {(openUrl) => (
-        <View>
-          <RowHeader>
-            <Name>
-              <H4>{'Connect with Apollos'}</H4>
-            </Name>
-          </RowHeader>
-          <TableView>
-            <Touchable
-              onPress={() =>
-                openUrl('https://apollosrock.newspring.cc/page/235')
-              }
-            >
-              <Cell>
-                <CellText>Find a serving opportunity</CellText>
-                <CellIcon name="arrow-next" />
-              </Cell>
-            </Touchable>
-            <Divider />
-            <Touchable
-              onPress={() =>
-                openUrl('https://apollosrock.newspring.cc/page/236')
-              }
-            >
-              <Cell>
-                <CellText>Join a small group</CellText>
-                <CellIcon name="arrow-next" />
-              </Cell>
-            </Touchable>
-            <Divider />
-            <Touchable
-              onPress={() =>
-                openUrl('https://apollosrock.newspring.cc/page/233')
-              }
-            >
-              <Cell>
-                <CellText>I need prayer</CellText>
-                <CellIcon name="arrow-next" />
-              </Cell>
-            </Touchable>
-          </TableView>
-          <TableView>
-            <Touchable
-              onPress={() => navigation.navigate('TestingControlPanel')}
-            >
-              <Cell>
-                <CellIcon name="settings" />
-                <CellText>Open Testing Panel</CellText>
-                <CellIcon name="arrow-next" />
-              </Cell>
-            </Touchable>
-          </TableView>
-        </View>
-      )}
-    </RockAuthedWebBrowser>
-  );
-};
+const ActionTable = () => (
+  <RockAuthedWebBrowser>
+    {(openUrl) => (
+      <View>
+        <RowHeader>
+          <Name>
+            <H4>{'Connect with Apollos'}</H4>
+          </Name>
+        </RowHeader>
+        <TableView>
+          <Touchable
+            onPress={() => openUrl('https://apollosrock.newspring.cc/page/235')}
+          >
+            <Cell>
+              <CellText>Find a serving opportunity</CellText>
+              <CellIcon name="arrow-next" />
+            </Cell>
+          </Touchable>
+          <Divider />
+          <Touchable
+            onPress={() => openUrl('https://apollosrock.newspring.cc/page/236')}
+          >
+            <Cell>
+              <CellText>Join a small group</CellText>
+              <CellIcon name="arrow-next" />
+            </Cell>
+          </Touchable>
+          <Divider />
+          <Touchable
+            onPress={() => openUrl('https://apollosrock.newspring.cc/page/233')}
+          >
+            <Cell>
+              <CellText>I need prayer</CellText>
+              <CellIcon name="arrow-next" />
+            </Cell>
+          </Touchable>
+        </TableView>
+      </View>
+    )}
+  </RockAuthedWebBrowser>
+);
 
 const StyledActionTable = styled(({ theme }) => ({
   paddingBottom: theme.sizing.baseUnit * 100,
diff --git a/apolloschurchapp/src/tabs/connect/Connect.js b/apolloschurchapp/src/tabs/connect/Connect.js
index 335056e4..e69060ec 100644
--- a/apolloschurchapp/src/tabs/connect/Connect.js
+++ b/apolloschurchapp/src/tabs/connect/Connect.js
@@ -1,14 +1,10 @@
 import React, { PureComponent } from 'react';
-import { ScrollView } from 'react-native';
 import PropTypes from 'prop-types';
-import { SafeAreaView } from 'react-native-safe-area-context';
 
-import { HorizontalLikedContentFeedConnected } from '@apollosproject/ui-connected';
-import { BackgroundView } from '@apollosproject/ui-kit';
+import { ConnectScreenConnected } from '@apollosproject/ui-connected';
 
 import ActionTable from './ActionTable';
 import ActionBar from './ActionBar';
-import UserAvatarHeader from './UserAvatarHeader';
 
 class Connect extends PureComponent {
   static propTypes = {
@@ -19,16 +15,7 @@ class Connect extends PureComponent {
 
   render() {
     return (
-      <BackgroundView>
-        <SafeAreaView edges={['top', 'left', 'right']}>
-          <ScrollView>
-            <UserAvatarHeader />
-            <ActionBar />
-            <HorizontalLikedContentFeedConnected />
-            <ActionTable />
-          </ScrollView>
-        </SafeAreaView>
-      </BackgroundView>
+      <ConnectScreenConnected ActionTable={ActionTable} ActionBar={ActionBar} />
     );
   }
 }
diff --git a/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeader.js b/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeader.js
deleted file mode 100644
index bb08307a..00000000
--- a/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeader.js
+++ /dev/null
@@ -1,72 +0,0 @@
-import React from 'react';
-import { Query } from '@apollo/client/react/components';
-import PropTypes from 'prop-types';
-import { useNavigation } from '@react-navigation/native';
-import { get } from 'lodash';
-
-import { H3, styled, PaddedView } from '@apollosproject/ui-kit';
-import { UserAvatarConnected } from '@apollosproject/ui-connected';
-import GET_USER_PROFILE from './getUserProfile';
-
-const GetUserProfile = ({ children }) => (
-  <Query query={GET_USER_PROFILE}>
-    {({ data: { currentUser = {} } = {} }) => {
-      const firstName = get(currentUser, 'profile.firstName');
-      return children({ firstName });
-    }}
-  </Query>
-);
-
-GetUserProfile.propTypes = {
-  children: PropTypes.func.isRequired,
-};
-
-const Container = styled({
-  alignItems: 'center',
-  justifyContent: 'center',
-})(PaddedView);
-
-const UserAvatarHeader = ({
-  buttonIcon,
-  message,
-  onPressIcon,
-  size,
-  ...props
-}) => {
-  const navigation = useNavigation();
-  return (
-    <Container>
-      <PaddedView horizontal={false}>
-        <UserAvatarConnected
-          size={size}
-          buttonIcon={buttonIcon}
-          onPressIcon={() => navigation.navigate('UserSettings')}
-          {...props}
-        />
-      </PaddedView>
-      <GetUserProfile>
-        {({ firstName }) => (
-          <H3>
-            {message}
-            {firstName ? ` ${firstName}` : ''}!
-          </H3>
-        )}
-      </GetUserProfile>
-    </Container>
-  );
-};
-
-UserAvatarHeader.propTypes = {
-  buttonIcon: PropTypes.string,
-  message: PropTypes.string,
-  onPressIcon: PropTypes.func,
-  size: PropTypes.string,
-};
-
-UserAvatarHeader.defaultProps = {
-  buttonIcon: 'settings',
-  message: 'Hello',
-  size: 'large',
-};
-
-export default UserAvatarHeader;
diff --git a/apolloschurchapp/src/tabs/connect/UserAvatarHeader/getUserProfile.js b/apolloschurchapp/src/tabs/connect/UserAvatarHeader/getUserProfile.js
deleted file mode 100644
index e5aa7e04..00000000
--- a/apolloschurchapp/src/tabs/connect/UserAvatarHeader/getUserProfile.js
+++ /dev/null
@@ -1,18 +0,0 @@
-import gql from 'graphql-tag';
-import ApollosConfig from '@apollosproject/config';
-
-export default gql`
-  query CurrentUserProfile {
-    currentUser {
-      id
-      profile {
-        ...UserProfileParts
-        campus {
-          ...CampusParts
-        }
-      }
-    }
-  }
-  ${ApollosConfig.FRAGMENTS.CAMPUS_PARTS_FRAGMENT}
-  ${ApollosConfig.FRAGMENTS.USER_PROFILE_PARTS_FRAGMENT}
-`;
diff --git a/apolloschurchapp/src/tabs/connect/UserAvatarHeader/index.js b/apolloschurchapp/src/tabs/connect/UserAvatarHeader/index.js
deleted file mode 100644
index 01d86280..00000000
--- a/apolloschurchapp/src/tabs/connect/UserAvatarHeader/index.js
+++ /dev/null
@@ -1,5 +0,0 @@
-import UserAvatarHeader from './UserAvatarHeader';
-
-export GET_USER_PROFILE from './getUserProfile';
-
-export default UserAvatarHeader;
diff --git a/apolloschurchapp/src/tabs/connect/index.js b/apolloschurchapp/src/tabs/connect/index.js
index d75c8a08..8659793d 100644
--- a/apolloschurchapp/src/tabs/connect/index.js
+++ b/apolloschurchapp/src/tabs/connect/index.js
@@ -2,11 +2,11 @@ import React from 'react';
 import { createNativeStackNavigator } from 'react-native-screens/native-stack';
 import { withTheme } from '@apollosproject/ui-kit';
 import { LikedContentFeedConnected } from '@apollosproject/ui-connected';
+import { NotificationSettingsConnected } from '@apollosproject/ui-notifications';
 
 import UserSettings from '../../user-settings';
 import PersonalDetails from '../../user-settings/PersonalDetails';
 import ChangePassword from '../../user-settings/ChangePassword';
-import TestingControlPanel from '../../testing-control-panel';
 
 import Connect from './Connect';
 
@@ -20,16 +20,15 @@ const ConnectNavigator = (props) => (
       options={{ headerShown: false }}
     />
     <Screen
-      component={TestingControlPanel}
-      name="TestingControlPanel"
-      options={{ headerTitle: 'Testing' }}
+      component={NotificationSettingsConnected}
+      name="Notifications"
+      options={{ headerTitle: 'Notifications' }}
     />
     <Screen
       component={UserSettings}
       name="UserSettings"
       options={{ headerTitle: 'Settings' }}
     />
-
     <Screen
       name="PersonalDetails"
       component={PersonalDetails}
diff --git a/apolloschurchapp/src/tabs/discover/Discover.js b/apolloschurchapp/src/tabs/discover/Discover.js
deleted file mode 100644
index 12b7f5d5..00000000
--- a/apolloschurchapp/src/tabs/discover/Discover.js
+++ /dev/null
@@ -1,72 +0,0 @@
-import React, { useState } from 'react';
-
-import { SafeAreaView } from 'react-native-safe-area-context';
-import gql from 'graphql-tag';
-import { Query } from '@apollo/client/react/components';
-
-import { throttle } from 'lodash';
-
-import { BackgroundView } from '@apollosproject/ui-kit';
-import {
-  FeaturesFeedConnected,
-  FEATURE_FEED_ACTION_MAP,
-  RockAuthedWebBrowser,
-  SearchInputHeader,
-  SearchFeedConnected,
-} from '@apollosproject/ui-connected';
-
-function handleOnPress({ action, ...props }) {
-  if (FEATURE_FEED_ACTION_MAP[action]) {
-    FEATURE_FEED_ACTION_MAP[action]({ action, ...props });
-  }
-  // If you add additional actions, you can handle them here.
-  // Or add them to the FEATURE_FEED_ACTION_MAP, with the syntax
-  // { [ActionName]: function({ relatedNode, action, ...FeatureFeedConnectedProps}) }
-}
-
-// getHomeFeed uses the HOME_FEATURES in the config.yml
-// You can also hardcode an ID if you are confident it will never change
-// Or use some other strategy to get a FeatureFeed.id
-export const GET_DISCOVER_FEED = gql`
-  query getDiscoverFeatureFeed {
-    discoverFeedFeatures {
-      id
-    }
-  }
-`;
-
-function Discover({ navigation }) {
-  const [searchText, setSearchText] = useState('');
-  const [isFocused, setIsFocused] = useState(false);
-
-  return (
-    <RockAuthedWebBrowser>
-      {(openUrl) => (
-        <BackgroundView>
-          <SafeAreaView>
-            <SearchInputHeader
-              onChangeText={throttle(setSearchText, 300)}
-              onFocus={setIsFocused}
-            />
-            {isFocused || searchText ? (
-              <SearchFeedConnected searchText={searchText} />
-            ) : (
-              <Query query={GET_DISCOVER_FEED}>
-                {({ data }) => (
-                  <FeaturesFeedConnected
-                    openUrl={openUrl}
-                    navigation={navigation}
-                    featureFeedId={data?.discoverFeedFeatures?.id}
-                    onPressActionItem={handleOnPress}
-                  />
-                )}
-              </Query>
-            )}
-          </SafeAreaView>
-        </BackgroundView>
-      )}
-    </RockAuthedWebBrowser>
-  );
-}
-
-export default Discover;
diff --git a/apolloschurchapp/src/tabs/discover/index.js b/apolloschurchapp/src/tabs/discover/index.js
deleted file mode 100644
index f612b1ad..00000000
--- a/apolloschurchapp/src/tabs/discover/index.js
+++ /dev/null
@@ -1,44 +0,0 @@
-import React from 'react';
-import { Platform } from 'react-native';
-import { createNativeStackNavigator } from 'react-native-screens/native-stack';
-import { withTheme } from '@apollosproject/ui-kit';
-
-import ContentFeed from '../../content-feed';
-
-import Discover from './Discover';
-
-const { Navigator, Screen } = createNativeStackNavigator();
-
-const DiscoverNavigator = (props) => (
-  <Navigator initialRouteName="Discover" {...props}>
-    <Screen
-      component={Discover}
-      name="Discover"
-      options={{ headerShown: false }}
-    />
-    <Screen
-      component={ContentFeed}
-      name="ContentFeed"
-      /** Function for React Navigation to set information in the header. */
-      options={({ route }) => ({
-        title: route.params.itemTitle || 'Content Feed',
-      })}
-    />
-  </Navigator>
-);
-const EnhancedDiscover = withTheme(({ theme, ...props }) => ({
-  ...props,
-  screenOptions: {
-    headerTintColor: theme.colors.action.secondary,
-    headerTitleStyle: {
-      color: theme.colors.text.primary,
-    },
-    headerStyle: {
-      backgroundColor: theme.colors.background.paper,
-      ...Platform.select(theme.shadows.default),
-    },
-    headerLargeTitle: true,
-  },
-}))(DiscoverNavigator);
-
-export default EnhancedDiscover;
diff --git a/apolloschurchapp/src/tabs/home/Home.js b/apolloschurchapp/src/tabs/home/Home.js
deleted file mode 100644
index 434be78d..00000000
--- a/apolloschurchapp/src/tabs/home/Home.js
+++ /dev/null
@@ -1,77 +0,0 @@
-import React, { PureComponent } from 'react';
-import { Image } from 'react-native';
-import PropTypes from 'prop-types';
-import { SafeAreaView } from 'react-native-safe-area-context';
-import gql from 'graphql-tag';
-import { Query } from '@apollo/client/react/components';
-
-import { styled, BackgroundView } from '@apollosproject/ui-kit';
-import {
-  FeaturesFeedConnected,
-  FEATURE_FEED_ACTION_MAP,
-  RockAuthedWebBrowser,
-} from '@apollosproject/ui-connected';
-
-const LogoTitle = styled(({ theme }) => ({
-  height: theme.sizing.baseUnit,
-  margin: theme.sizing.baseUnit,
-  alignSelf: 'center',
-  resizeMode: 'contain',
-}))(Image);
-
-function handleOnPress({ action, ...props }) {
-  if (FEATURE_FEED_ACTION_MAP[action]) {
-    FEATURE_FEED_ACTION_MAP[action]({ action, ...props });
-  }
-  // If you add additional actions, you can handle them here.
-  // Or add them to the FEATURE_FEED_ACTION_MAP, with the syntax
-  // { [ActionName]: function({ relatedNode, action, ...FeatureFeedConnectedProps}) }
-}
-
-// getHomeFeed uses the HOME_FEATURES in the config.yml
-// You can also hardcode an ID if you are confident it will never change
-// Or use some other strategy to get a FeatureFeed.id
-export const GET_HOME_FEED = gql`
-  query getHomeFeatureFeed {
-    homeFeedFeatures {
-      id
-    }
-  }
-`;
-
-class Home extends PureComponent {
-  static propTypes = {
-    navigation: PropTypes.shape({
-      setParams: PropTypes.func,
-      navigate: PropTypes.func,
-    }),
-  };
-
-  render() {
-    return (
-      <RockAuthedWebBrowser>
-        {(openUrl) => (
-          <BackgroundView>
-            <SafeAreaView edges={['top', 'left', 'right']}>
-              <Query query={GET_HOME_FEED} fetchPolicy="cache-and-network">
-                {({ data }) => (
-                  <FeaturesFeedConnected
-                    openUrl={openUrl}
-                    navigation={this.props.navigation}
-                    featureFeedId={data?.homeFeedFeatures?.id}
-                    onPressActionItem={handleOnPress}
-                    ListHeaderComponent={
-                      <LogoTitle source={require('./wordmark.png')} />
-                    }
-                  />
-                )}
-              </Query>
-            </SafeAreaView>
-          </BackgroundView>
-        )}
-      </RockAuthedWebBrowser>
-    );
-  }
-}
-
-export default Home;
diff --git a/apolloschurchapp/src/tabs/home/index.js b/apolloschurchapp/src/tabs/home/index.js
deleted file mode 100644
index fbe3fed6..00000000
--- a/apolloschurchapp/src/tabs/home/index.js
+++ /dev/null
@@ -1,3 +0,0 @@
-import Home from './Home';
-
-export default Home;
diff --git a/apolloschurchapp/src/tabs/index.js b/apolloschurchapp/src/tabs/index.js
index 3e2a5b8c..22dc9ab9 100644
--- a/apolloschurchapp/src/tabs/index.js
+++ b/apolloschurchapp/src/tabs/index.js
@@ -1,45 +1,127 @@
-import React from 'react';
-import { Platform } from 'react-native';
+import React, { useEffect } from 'react';
+import PropTypes from 'prop-types';
+import { Image } from 'react-native';
+import { useNavigation } from '@react-navigation/native';
 import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';
-import { withTheme } from '@apollosproject/ui-kit';
-
+import {
+  NavigationService,
+  withTheme,
+  Icon,
+  Touchable,
+} from '@apollosproject/ui-kit';
+import { useApolloClient } from '@apollo/client';
+import { createFeatureFeedTab } from '@apollosproject/ui-connected';
+import { checkOnboardingStatusAndNavigate } from '@apollosproject/ui-onboarding';
 import Connect from './connect';
-import Home from './home';
-import Discover from './discover';
 import tabBarIcon from './tabBarIcon';
 
-const { Navigator, Screen } = createBottomTabNavigator();
+const HeaderLogo = withTheme(({ theme }) => ({
+  style: {
+    height: theme.sizing.baseUnit * 2.5,
+    width: '70%',
+    resizeMode: 'contain',
+  },
+  source:
+    theme.type === 'light'
+      ? require('./wordmark.png')
+      : require('./wordmark.dark.png'),
+}))(Image);
+
+const SearchIcon = withTheme(({ theme: { colors, sizing: { baseUnit } } }) => ({
+  name: 'search',
+  size: baseUnit * 2,
+  fill: colors.primary,
+}))(Icon);
 
-const TabNavigator = (props) => (
-  <Navigator {...props} lazy>
-    <Screen
-      name="Home"
-      component={Home}
-      options={{ tabBarIcon: tabBarIcon('home') }}
-    />
-    <Screen
-      name="Discover"
-      component={Discover}
-      options={{ tabBarIcon: tabBarIcon('sections') }}
-    />
-    <Screen
-      name="Connect"
-      component={Connect}
-      options={{ tabBarIcon: tabBarIcon('profile') }}
-    />
-  </Navigator>
+const SearchButton = ({ onPress }) => (
+  <Touchable onPress={onPress}>
+    <SearchIcon />
+  </Touchable>
 );
 
-const ThemedTabNavigator = withTheme(({ theme }) => ({
-  tabBarOptions: {
-    activeTintColor: theme?.colors?.secondary,
-    inactiveTintColor: theme?.colors?.text?.tertiary,
-    style: {
-      backgroundColor: theme?.colors?.background?.paper,
-      borderTopColor: theme?.colors?.shadows.default,
-      ...Platform.select(theme?.shadows.default),
-    },
+SearchButton.propTypes = {
+  onPress: PropTypes.func,
+};
+
+const HeaderCenter = () => <HeaderLogo source={require('./wordmark.png')} />;
+const HeaderRight = () => {
+  const navigation = useNavigation();
+  return <SearchButton onPress={() => navigation.navigate('Search')} />;
+};
+
+// we nest stack inside of tabs so we can use all the fancy native header features
+const HomeTab = createFeatureFeedTab({
+  screenOptions: {
+    headerHideShadow: true,
+    headerCenter: HeaderCenter,
+    headerRight: HeaderRight,
+    headerLargeTitle: false,
   },
-}))(TabNavigator);
+  tabName: 'Home',
+  feedName: 'HOME',
+});
+
+const ReadTab = createFeatureFeedTab({
+  tabName: 'Read',
+  feedName: 'READ',
+});
+
+const WatchTab = createFeatureFeedTab({
+  tabName: 'Watch',
+  feedName: 'WATCH',
+});
+
+const PrayTab = createFeatureFeedTab({
+  tabName: 'Pray',
+  feedName: 'PRAY',
+});
+
+const { Navigator, Screen } = createBottomTabNavigator();
+
+const TabNavigator = () => {
+  const client = useApolloClient();
+  // this is only used by the tab loaded first
+  // if there is a new version of the onboarding flow,
+  // we'll navigate there first to show new screens
+  useEffect(
+    () => {
+      checkOnboardingStatusAndNavigate({
+        client,
+        navigation: NavigationService,
+        navigateHome: false,
+      });
+    },
+    [client]
+  );
+  return (
+    <Navigator lazy>
+      <Screen
+        name="Home"
+        component={HomeTab}
+        options={{ tabBarIcon: tabBarIcon('home') }}
+      />
+      <Screen
+        name="Read"
+        component={ReadTab}
+        options={{ tabBarIcon: tabBarIcon('sections') }}
+      />
+      <Screen
+        name="Watch"
+        component={WatchTab}
+        options={{ tabBarIcon: tabBarIcon('video') }}
+      />
+      <Screen
+        name="Pray"
+        component={PrayTab}
+        options={{ tabBarIcon: tabBarIcon('like') }}
+      />
+      <Screen
+        name="Connect"
+        component={Connect}
+        options={{ tabBarIcon: tabBarIcon('profile') }}
+      />
+    </Navigator>
+  );
+};
 
-export default ThemedTabNavigator;
+export default TabNavigator;
diff --git a/apolloschurchapp/src/tabs/home/wordmark.png b/apolloschurchapp/src/tabs/wordmark.dark.png
similarity index 100%
rename from apolloschurchapp/src/tabs/home/wordmark.png
rename to apolloschurchapp/src/tabs/wordmark.dark.png
diff --git a/apolloschurchapp/src/tabs/wordmark.png b/apolloschurchapp/src/tabs/wordmark.png
new file mode 100644
index 0000000000000000000000000000000000000000..93229c35ef61c3842a7bf0acb5c9ed910093adb0
GIT binary patch
literal 8241
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

literal 0
HcmV?d00001

diff --git a/apolloschurchapp/src/testing-control-panel/TouchableCell.js b/apolloschurchapp/src/testing-control-panel/TouchableCell.js
deleted file mode 100644
index bfe51df3..00000000
--- a/apolloschurchapp/src/testing-control-panel/TouchableCell.js
+++ /dev/null
@@ -1,20 +0,0 @@
-import React from 'react';
-import PropType from 'prop-types';
-import { Touchable, Cell, CellIcon, CellText } from '@apollosproject/ui-kit';
-
-const TouchableCell = ({ iconName, cellText, handlePress }) => (
-  <Touchable onPress={handlePress}>
-    <Cell>
-      <CellIcon name={iconName} />
-      <CellText>{cellText}</CellText>
-    </Cell>
-  </Touchable>
-);
-
-TouchableCell.propTypes = {
-  iconName: PropType.string.isRequired,
-  cellText: PropType.string.isRequired,
-  handlePress: PropType.func.isRequired,
-};
-
-export default TouchableCell;
diff --git a/apolloschurchapp/src/testing-control-panel/TouchableCell.tests.js b/apolloschurchapp/src/testing-control-panel/TouchableCell.tests.js
deleted file mode 100644
index 75bc5b07..00000000
--- a/apolloschurchapp/src/testing-control-panel/TouchableCell.tests.js
+++ /dev/null
@@ -1,21 +0,0 @@
-import React from 'react';
-import renderer from 'react-test-renderer';
-
-import { Providers } from '@apollosproject/ui-test-utils';
-
-import TouchableCell from './TouchableCell';
-
-describe('touchable cell', () => {
-  it('renders the cell, icon, and text', () => {
-    const tree = renderer.create(
-      <Providers>
-        <TouchableCell
-          cellText="This is a cell"
-          iconName="play"
-          handlePress={() => ({})}
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/testing-control-panel/index.js b/apolloschurchapp/src/testing-control-panel/index.js
deleted file mode 100644
index 9a27a8fb..00000000
--- a/apolloschurchapp/src/testing-control-panel/index.js
+++ /dev/null
@@ -1,19 +0,0 @@
-import React, { PureComponent } from 'react';
-import { TableView, BackgroundView } from '@apollosproject/ui-kit';
-import TouchableCell from './TouchableCell';
-
-export default class TestingControlPanel extends PureComponent {
-  render() {
-    return (
-      <BackgroundView>
-        <TableView>
-          <TouchableCell
-            handlePress={() => this.props.navigation.navigate('Onboarding')}
-            iconName="Avatar"
-            cellText={`Launch Onboarding`}
-          />
-        </TableView>
-      </BackgroundView>
-    );
-  }
-}
diff --git a/apolloschurchapp/src/theme/propOverrides.js b/apolloschurchapp/src/theme/propOverrides.js
deleted file mode 100644
index 6d46cc8b..00000000
--- a/apolloschurchapp/src/theme/propOverrides.js
+++ /dev/null
@@ -1,2 +0,0 @@
-/* Export your custom prop overrides here. */
-export {};
diff --git a/apolloschurchapp/src/theme/styleOverrides.js b/apolloschurchapp/src/theme/styleOverrides.js
deleted file mode 100644
index 3599e309..00000000
--- a/apolloschurchapp/src/theme/styleOverrides.js
+++ /dev/null
@@ -1,2 +0,0 @@
-/* Export your custom style overrides here. */
-export {};
diff --git a/apolloschurchapp/src/theme/theme.js b/apolloschurchapp/src/theme/theme.js
index b2aeb3cb..fe1c84f1 100644
--- a/apolloschurchapp/src/theme/theme.js
+++ b/apolloschurchapp/src/theme/theme.js
@@ -1,6 +1,3 @@
-// import styleOverrides from './styleOverrides';
-// import propOverrides from './propOverrides';
-
 /* Add your custom theme definitions below. Anything that is supported in UI-Kit Theme can be
  overridden and/or customized here! */
 
@@ -51,9 +48,6 @@
  * }
  * ```
  */
-// const overrides = {
-//   ...styleOverrides,
-//   ...propOverrides,
-// };
+// const overrides = {};
 
 export default {};
diff --git a/apolloschurchapp/src/ui/LandingScreen/LandingScreen.js b/apolloschurchapp/src/ui/LandingScreen/LandingScreen.js
deleted file mode 100644
index d803a8d5..00000000
--- a/apolloschurchapp/src/ui/LandingScreen/LandingScreen.js
+++ /dev/null
@@ -1,86 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-
-import {
-  styled,
-  withTheme,
-  Icon,
-  H1,
-  H4,
-  PaddedView,
-  BackgroundView,
-} from '@apollosproject/ui-kit';
-
-import { Slide } from '@apollosproject/ui-onboarding';
-
-const Content = styled({
-  flex: 1,
-  justifyContent: 'center',
-})(PaddedView);
-
-const BrandIcon = withTheme(({ theme, color }) => ({
-  name: 'brand-icon',
-  size: theme.sizing.baseUnit * 3,
-  ...(color ? { fill: color } : {}),
-  style: {
-    marginBottom: theme.sizing.baseUnit,
-  },
-}))(Icon);
-
-const Title = styled(({ theme, color }) => ({
-  marginBottom: theme.sizing.baseUnit,
-  ...(color ? { color } : {}),
-}))(H1);
-
-const StyledH4 = styled(({ color }) => ({
-  ...(color ? { color } : {}),
-}))(H4);
-
-const LandingScreen = ({
-  slideTitle,
-  description,
-  textColor,
-  BackgroundComponent,
-  ...props
-}) => (
-  <BackgroundView>
-    <Slide {...props} scrollEnabled={false}>
-      {BackgroundComponent}
-      <Content>
-        <BrandIcon color={textColor} />
-        <Title color={textColor}>{slideTitle}</Title>
-        <StyledH4 color={textColor}>{description}</StyledH4>
-      </Content>
-    </Slide>
-  </BackgroundView>
-);
-
-LandingScreen.propTypes = {
-  /* The `Swiper` component used in `<onBoarding>` looks for and hijacks the title prop of it's
-   * children. Thus we have to use more unique name.
-   */
-  slideTitle: PropTypes.string,
-  description: PropTypes.string,
-  textColor: PropTypes.string, // Use for custom text and `BrandIcon` color when overlaying text on an image or video needs more clarity. Defaults to theme driven colors.
-  /* Recommended usage:
-   * - `Image` (react-native)
-   * - `GradientOverlayImage` (@apollosproject/ui-kit) for increased readability
-   * - `Video` (react-native-video) because moving pictures!
-   */
-  BackgroundComponent: PropTypes.oneOfType([
-    PropTypes.arrayOf(PropTypes.node),
-    PropTypes.node,
-  ]),
-};
-
-LandingScreen.defaultProps = {
-  slideTitle: "We're glad you're here.",
-  description:
-    "We're not just a building you go to, but a family to belong to.",
-};
-
-LandingScreen.navigationOptions = {
-  header: null,
-};
-
-export default LandingScreen;
diff --git a/apolloschurchapp/src/ui/LandingScreen/LandingScreen.stories.js b/apolloschurchapp/src/ui/LandingScreen/LandingScreen.stories.js
deleted file mode 100644
index b6c5638a..00000000
--- a/apolloschurchapp/src/ui/LandingScreen/LandingScreen.stories.js
+++ /dev/null
@@ -1,23 +0,0 @@
-import React from 'react';
-import { storiesOf } from '@apollosproject/ui-storybook';
-import { GradientOverlayImage } from '@apollosproject/ui-kit';
-
-import LandingScreen from './LandingScreen';
-
-storiesOf('LandingScreen', module)
-  .add('default', () => <LandingScreen />)
-  .add('slideTitle', () => <LandingScreen slideTitle={'Custom title text'} />)
-  .add('description', () => (
-    <LandingScreen description={'Custom description text'} />
-  ))
-  .add('textColor', () => <LandingScreen textColor={'salmon'} />)
-  .add('ImageComponent', () => (
-    <LandingScreen
-      BackgroundComponent={
-        <GradientOverlayImage
-          source={'https://picsum.photos/375/812/?random'}
-        />
-      }
-    />
-  ))
-  .add('Slide props', () => <LandingScreen onPressPrimary={() => {}} />);
diff --git a/apolloschurchapp/src/ui/LandingScreen/LandingScreen.tests.js b/apolloschurchapp/src/ui/LandingScreen/LandingScreen.tests.js
deleted file mode 100644
index 28c962e4..00000000
--- a/apolloschurchapp/src/ui/LandingScreen/LandingScreen.tests.js
+++ /dev/null
@@ -1,63 +0,0 @@
-import React from 'react';
-import renderer from 'react-test-renderer';
-import { GradientOverlayImage } from '@apollosproject/ui-kit';
-import { Providers } from '@apollosproject/ui-test-utils';
-
-import LandingScreen from './LandingScreen';
-
-describe('The Onboarding LandingScreen component', () => {
-  it('should render', () => {
-    const tree = renderer.create(
-      <Providers>
-        <LandingScreen />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render a custom title', () => {
-    const tree = renderer.create(
-      <Providers>
-        <LandingScreen slideTitle={'Custom title text'} />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render a custom description', () => {
-    const tree = renderer.create(
-      <Providers>
-        <LandingScreen description={'Custom description text'} />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render with a custom text color', () => {
-    const tree = renderer.create(
-      <Providers>
-        <LandingScreen textColor={'salmon'} />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render with an ImageComponent', () => {
-    const tree = renderer.create(
-      <Providers>
-        <LandingScreen
-          BackgroundComponent={
-            <GradientOverlayImage
-              source={'https://picsum.photos/375/812/?random'}
-            />
-          }
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should pass additional props to Slide', () => {
-    const tree = renderer.create(
-      <Providers>
-        <LandingScreen onPressPrimary={jest.fn()} />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/ui/LandingScreen/index.js b/apolloschurchapp/src/ui/LandingScreen/index.js
deleted file mode 100644
index fe23f34d..00000000
--- a/apolloschurchapp/src/ui/LandingScreen/index.js
+++ /dev/null
@@ -1,23 +0,0 @@
-import React from 'react';
-import { StyleSheet } from 'react-native';
-import { styled, ConnectedImage } from '@apollosproject/ui-kit';
-
-import LandingScreen from './LandingScreen';
-
-const FullScreenImage = styled({
-  resizeMode: 'cover',
-  ...StyleSheet.absoluteFill,
-})(ConnectedImage);
-
-const LandingScreenSlide = ({ navigation }) => (
-  <LandingScreen
-    onPressPrimary={() => navigation.push('Auth')}
-    textColor={'white'}
-    BackgroundComponent={
-      <FullScreenImage source={'https://picsum.photos/375/812/?random'} />
-    }
-    primaryNavText={"Let's go!"}
-  />
-);
-
-export default LandingScreenSlide;
diff --git a/apolloschurchapp/src/ui/Onboarding/Onboarding.stories.js b/apolloschurchapp/src/ui/Onboarding/Onboarding.stories.js
deleted file mode 100644
index bf815529..00000000
--- a/apolloschurchapp/src/ui/Onboarding/Onboarding.stories.js
+++ /dev/null
@@ -1,5 +0,0 @@
-import React from 'react';
-import { storiesOf } from '@apollosproject/ui-storybook';
-import Onboarding from '.';
-
-storiesOf('Onboarding', module).add('full', () => <Onboarding />);
diff --git a/apolloschurchapp/src/ui/Onboarding/Onboarding.tests.js b/apolloschurchapp/src/ui/Onboarding/Onboarding.tests.js
deleted file mode 100644
index 22cb7bca..00000000
--- a/apolloschurchapp/src/ui/Onboarding/Onboarding.tests.js
+++ /dev/null
@@ -1,16 +0,0 @@
-import React from 'react';
-import { Providers, renderWithApolloData } from '@apollosproject/ui-test-utils';
-import { MockedProvider } from '@apollo/client/testing';
-
-import Onboarding from '.';
-
-describe('the Onboarding component', () => {
-  it('should render Onboarding', async () => {
-    const tree = await renderWithApolloData(
-      <Providers MockedProvider={MockedProvider}>
-        <Onboarding />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/ui/Onboarding/index.js b/apolloschurchapp/src/ui/Onboarding/index.js
deleted file mode 100644
index 3e5474c8..00000000
--- a/apolloschurchapp/src/ui/Onboarding/index.js
+++ /dev/null
@@ -1,112 +0,0 @@
-import React from 'react';
-import { Query } from '@apollo/client/react/components';
-import {
-  checkNotifications,
-  openSettings,
-  requestNotifications,
-  RESULTS,
-} from 'react-native-permissions';
-import {
-  GradientOverlayImage,
-  styled,
-  BackgroundView,
-  NavigationService,
-} from '@apollosproject/ui-kit';
-import {
-  AskNotificationsConnected,
-  AskNameConnected,
-  FeaturesConnected,
-  AboutYouConnected,
-  LocationFinderConnected,
-  OnboardingSwiper,
-  onboardingComplete,
-  WITH_USER_ID,
-} from '@apollosproject/ui-onboarding';
-
-const FullscreenBackgroundView = styled({
-  position: 'absolute',
-  width: '100%',
-  height: '100%',
-})(BackgroundView);
-
-const StyledGradient = styled({
-  maxHeight: '40%',
-})(GradientOverlayImage);
-
-function Onboarding({ navigation }) {
-  return (
-    <>
-      <FullscreenBackgroundView />
-      <OnboardingSwiper>
-        {({ swipeForward }) => (
-          <>
-            <AskNameConnected onPressPrimary={swipeForward} />
-            <FeaturesConnected
-              onPressPrimary={swipeForward}
-              BackgroundComponent={
-                <StyledGradient
-                  source={'https://picsum.photos/640/640/?random'}
-                />
-              }
-            />
-            <AboutYouConnected
-              onPressPrimary={swipeForward}
-              BackgroundComponent={
-                <StyledGradient
-                  source={'https://picsum.photos/640/640/?random'}
-                />
-              }
-            />
-            <LocationFinderConnected
-              onPressPrimary={swipeForward}
-              onNavigate={() => {
-                navigation.navigate('Location');
-              }}
-              BackgroundComponent={
-                <StyledGradient
-                  source={'https://picsum.photos/640/640/?random'}
-                />
-              }
-            />
-            <Query query={WITH_USER_ID} fetchPolicy="network-only">
-              {({ data }) => (
-                <AskNotificationsConnected
-                  onPressPrimary={() => {
-                    onboardingComplete({ userId: data?.currentUser?.id });
-                    navigation.dispatch(
-                      NavigationService.resetAction({
-                        navigatorName: 'Tabs',
-                        routeName: 'Home',
-                      })
-                    );
-                  }}
-                  onRequestPushPermissions={(update) => {
-                    checkNotifications().then((checkRes) => {
-                      if (checkRes.status === RESULTS.DENIED) {
-                        requestNotifications(['alert', 'badge', 'sound']).then(
-                          () => {
-                            update();
-                          }
-                        );
-                      } else {
-                        openSettings();
-                      }
-                    });
-                  }}
-                  primaryNavText={'Finish'}
-                  BackgroundComponent={
-                    <StyledGradient
-                      source={'http://picsum.photos/640/640/?random'}
-                    />
-                  }
-                />
-              )}
-            </Query>
-          </>
-        )}
-      </OnboardingSwiper>
-    </>
-  );
-}
-
-export default Onboarding;
diff --git a/apolloschurchapp/src/user-settings/PersonDetails.tests.js b/apolloschurchapp/src/user-settings/PersonDetails.tests.js
index aa28713d..478c45b7 100644
--- a/apolloschurchapp/src/user-settings/PersonDetails.tests.js
+++ b/apolloschurchapp/src/user-settings/PersonDetails.tests.js
@@ -1,7 +1,7 @@
 import React from 'react';
 import { MockedProvider } from '@apollo/client/testing';
 import { Providers, renderWithApolloData } from '@apollosproject/ui-test-utils';
-import { GET_USER_PROFILE } from '../tabs/connect/UserAvatarHeader';
+import { GET_USER_PROFILE } from '@apollosproject/ui-connected';
 
 import PersonalDetails from './PersonalDetails';
 
diff --git a/apolloschurchapp/src/user-settings/PersonalDetails.js b/apolloschurchapp/src/user-settings/PersonalDetails.js
index 4bc940fd..d23157df 100644
--- a/apolloschurchapp/src/user-settings/PersonalDetails.js
+++ b/apolloschurchapp/src/user-settings/PersonalDetails.js
@@ -1,12 +1,10 @@
 import React, { PureComponent } from 'react';
 import PropTypes from 'prop-types';
+import { KeyboardAvoidingView, Platform } from 'react-native';
 import {
-  KeyboardAvoidingView,
-  StyleSheet,
-  StatusBar,
-  Platform,
-} from 'react-native';
-import { Header } from '@react-navigation/stack';
+  useSafeAreaInsets,
+  SafeAreaView,
+} from 'react-native-safe-area-context';
 import { Query, Mutation } from '@apollo/client/react/components';
 import { Formik } from 'formik';
 import * as Yup from 'yup';
@@ -19,8 +17,7 @@ import {
   styled,
 } from '@apollosproject/ui-kit';
 
-import { SafeAreaView } from 'react-native-safe-area-context';
-import { GET_USER_PROFILE } from '../tabs/connect/UserAvatarHeader';
+import { GET_USER_PROFILE } from '@apollosproject/ui-connected';
 import UPDATE_CURRENT_USER from './updateCurrentUser';
 
 const Footer = styled({
@@ -29,10 +26,23 @@ const Footer = styled({
 })(SafeAreaView);
 
 const StyledKeyboardAvoidingView = styled(({ theme }) => ({
-  ...StyleSheet.absoluteFill,
+  flex: 1,
   backgroundColor: theme.colors.background.paper,
 }))(KeyboardAvoidingView);
 
+const KeyboardAvoidingViewWithHeaderHeight = (props) => {
+  const statusBarInset = useSafeAreaInsets().top; // inset of the status bar
+  // https://github.com/software-mansion/react-native-screens/tree/master/native-stack#measuring-headers-height-on-ios
+  const largeHeaderInset = statusBarInset + 96; // inset to use for a large header since it's frame is equal to 96 + the frame of status bar
+  return (
+    <StyledKeyboardAvoidingView
+      behavior="padding"
+      keyboardVerticalOffset={Platform.OS === 'android' ? 0 : largeHeaderInset}
+      {...props}
+    />
+  );
+};
+
 class PersonalDetails extends PureComponent {
   static propTypes = {
     navigation: PropTypes.shape({
@@ -43,13 +53,7 @@ class PersonalDetails extends PureComponent {
 
   renderForm = (props) => (
     // have to add the offset to account for @react-navigation/native header
-    <StyledKeyboardAvoidingView
-      behavior={'padding'}
-      keyboardVerticalOffset={
-        Header.HEIGHT +
-        (Platform.OS === 'android' ? StatusBar.currentHeight : 0)
-      }
-    >
+    <KeyboardAvoidingViewWithHeaderHeight behavior={'padding'}>
       <FlexedView>
         <PaddedView>
           <TextInput
@@ -85,7 +89,7 @@ class PersonalDetails extends PureComponent {
           </PaddedView>
         </Footer>
       </FlexedView>
-    </StyledKeyboardAvoidingView>
+    </KeyboardAvoidingViewWithHeaderHeight>
   );
 
   render() {
diff --git a/apolloschurchapp/src/user-settings/UserSettings.tests.js b/apolloschurchapp/src/user-settings/UserSettings.tests.js
index 5753d4ae..48966e2a 100644
--- a/apolloschurchapp/src/user-settings/UserSettings.tests.js
+++ b/apolloschurchapp/src/user-settings/UserSettings.tests.js
@@ -1,12 +1,36 @@
 import React from 'react';
 
 import { GET_LOGIN_STATE } from '@apollosproject/ui-auth';
-import { renderWithApolloData, Providers } from '@apollosproject/ui-test-utils';
+import {
+  renderWithApolloData,
+  Providers,
+  WithReactNavigator,
+} from '@apollosproject/ui-test-utils';
+import { gql } from '@apollo/client';
 import { MockedProvider } from '@apollo/client/testing';
 import { InMemoryCache } from '@apollo/client/cache';
 
 import UserSettings from '.';
 
+const mock = {
+  request: {
+    query: gql`
+      query currentUserId {
+        currentUser {
+          id
+        }
+      }
+    `,
+  },
+  result: {
+    data: {
+      currentUser: {
+        id: 1,
+      },
+    },
+  },
+};
+
 describe('UserSettings component', () => {
   it('renders UserSettings when logged in', async () => {
     const cache = new InMemoryCache();
@@ -14,11 +38,12 @@ describe('UserSettings component', () => {
       query: GET_LOGIN_STATE,
       data: { isLoggedIn: true },
     });
-    const navigation = { navigate: jest.fn() };
     const tree = await renderWithApolloData(
-      <Providers cache={cache} MockedProvider={MockedProvider}>
-        <UserSettings navigation={navigation} />
-      </Providers>
+      WithReactNavigator(
+        <Providers cache={cache} MockedProvider={MockedProvider} mocks={[mock]}>
+          <UserSettings />
+        </Providers>
+      )
     );
     expect(tree).toMatchSnapshot();
   });
diff --git a/apolloschurchapp/src/user-settings/index.js b/apolloschurchapp/src/user-settings/index.js
index 2e70ea6c..9a0a8aed 100644
--- a/apolloschurchapp/src/user-settings/index.js
+++ b/apolloschurchapp/src/user-settings/index.js
@@ -1,7 +1,7 @@
-import React, { PureComponent } from 'react';
+import React from 'react';
 import { ScrollView } from 'react-native';
-import PropTypes from 'prop-types';
-import { Query, Mutation } from '@apollo/client/react/components';
+import { useQuery, useMutation, useApolloClient, gql } from '@apollo/client';
+import { useNavigation } from '@react-navigation/native';
 import { getVersion, getBuildNumber } from 'react-native-device-info';
 
 import {
@@ -14,140 +14,198 @@ import {
   Touchable,
   ActivityIndicator,
   NavigationService,
+  H4,
+  PaddedView,
 } from '@apollosproject/ui-kit';
-
+import {
+  checkOnboardingStatusAndNavigate,
+  onboardingComplete,
+} from '@apollosproject/ui-onboarding';
 import { GET_LOGIN_STATE, LOGOUT } from '@apollosproject/ui-auth';
 import {
   RockAuthedWebBrowser,
   UserAvatarUpdate,
 } from '@apollosproject/ui-connected';
 
-class UserSettings extends PureComponent {
-  static propTypes = {
-    navigation: PropTypes.shape({
-      navigate: PropTypes.func,
-    }),
-  };
+const UserSettings = () => {
+  const navigation = useNavigation();
+  const {
+    data: { isLoggedIn = false },
+    loading,
+  } = useQuery(GET_LOGIN_STATE, { fetchPolicy: 'cache-and-network' });
+  const [logout] = useMutation(LOGOUT);
+  const client = useApolloClient();
+  const { data } = useQuery(gql`
+    query currentUserId {
+      currentUser {
+        id
+      }
+    }
+  `);
+
+  if (loading) return <ActivityIndicator />;
+  if (!isLoggedIn) return null;
+  return (
+    <BackgroundView>
+      <ScrollView>
+        <UserAvatarUpdate />
 
-  render() {
-    return (
-      <Query query={GET_LOGIN_STATE} fetchPolicy="cache-and-network">
-        {({ data: { isLoggedIn = false }, loading }) => {
-          if (loading) return <ActivityIndicator />;
-          if (!isLoggedIn) return null;
-          return (
-            <BackgroundView>
-              <ScrollView>
-                <UserAvatarUpdate />
+        <RockAuthedWebBrowser>
+          {(openUrl) => (
+            <>
+              <TableView>
+                <Touchable
+                  onPress={() => {
+                    navigation.navigate('PersonalDetails');
+                  }}
+                >
+                  <Cell>
+                    <CellText>Personal Details</CellText>
+                    <CellIcon name="arrow-next" />
+                  </Cell>
+                </Touchable>
+                <Divider />
+                <Touchable
+                  onPress={() => {
+                    navigation.navigate('Location');
+                  }}
+                >
+                  <Cell>
+                    <CellText>Location</CellText>
+                    <CellIcon name="arrow-next" />
+                  </Cell>
+                </Touchable>
+                <Divider />
+                <Touchable
+                  onPress={() => {
+                    navigation.navigate('ChangePassword');
+                  }}
+                >
+                  <Cell>
+                    <CellText>Change Password</CellText>
+                    <CellIcon name="arrow-next" />
+                  </Cell>
+                </Touchable>
+                <Touchable
+                  onPress={() => {
+                    navigation.navigate('Notifications');
+                  }}
+                >
+                  <Cell>
+                    <CellText>Notification Settings</CellText>
+                    <CellIcon name="arrow-next" />
+                  </Cell>
+                </Touchable>
+              </TableView>
+              <TableView>
+                <Touchable
+                  onPress={() => {
+                    openUrl('mailto:support@apollos.app');
+                  }}
+                >
+                  <Cell>
+                    <CellText>Give Feedback</CellText>
+                    <CellIcon name="arrow-next" />
+                  </Cell>
+                </Touchable>
+              </TableView>
+              <TableView>
+                <Touchable
+                  onPress={() => openUrl('https://apollosrock.newspring.cc/')}
+                >
+                  <Cell>
+                    <CellText>Privacy Policy</CellText>
+                    <CellIcon name="arrow-next" />
+                  </Cell>
+                </Touchable>
+                <Divider />
+                <Touchable
+                  onPress={() => openUrl('https://apollosrock.newspring.cc/')}
+                >
+                  <Cell>
+                    <CellText>Terms of Use</CellText>
+                    <CellIcon name="arrow-next" />
+                  </Cell>
+                </Touchable>
+              </TableView>
+              <TableView>
+                <Touchable
+                  onPress={async () => {
+                    await logout();
+                    // This resets the navigation stack, and the navigates to the first auth screen.
+                    // This ensures that user isn't navigated to a subscreen of Auth, like the pin entry screen.
+                    NavigationService.resetToAuth();
+                  }}
+                >
+                  <Cell>
+                    <CellText>Logout</CellText>
+                    <CellIcon name="arrow-next" />
+                  </Cell>
+                </Touchable>
+              </TableView>
+              <TableView>
+                <Cell>
+                  <CellText>
+                    {`App Version: ${getVersion()}.${getBuildNumber()}`}
+                  </CellText>
+                </Cell>
+              </TableView>
 
-                <RockAuthedWebBrowser>
-                  {(openUrl) => (
-                    <>
-                      <TableView>
-                        <Touchable
-                          onPress={() => {
-                            this.props.navigation.navigate('PersonalDetails');
-                          }}
-                        >
-                          <Cell>
-                            <CellText>Personal Details</CellText>
-                            <CellIcon name="arrow-next" />
-                          </Cell>
-                        </Touchable>
-                        <Divider />
-                        <Touchable
-                          onPress={() => {
-                            this.props.navigation.navigate('Location');
-                          }}
-                        >
-                          <Cell>
-                            <CellText>Location</CellText>
-                            <CellIcon name="arrow-next" />
-                          </Cell>
-                        </Touchable>
-                        <Divider />
-                        <Touchable
-                          onPress={() => {
-                            this.props.navigation.navigate('ChangePassword');
-                          }}
-                        >
-                          <Cell>
-                            <CellText>Change Password</CellText>
-                            <CellIcon name="arrow-next" />
-                          </Cell>
-                        </Touchable>
-                      </TableView>
-                      <TableView>
-                        <Touchable
-                          onPress={() =>
-                            openUrl('https://apollosrock.newspring.cc/')
-                          }
-                        >
-                          <Cell>
-                            <CellText>Give Feedback</CellText>
-                            <CellIcon name="arrow-next" />
-                          </Cell>
-                        </Touchable>
-                      </TableView>
-                      <TableView>
-                        <Touchable
-                          onPress={() =>
-                            openUrl('https://apollosrock.newspring.cc/')
-                          }
-                        >
-                          <Cell>
-                            <CellText>Privacy Policy</CellText>
-                            <CellIcon name="arrow-next" />
-                          </Cell>
-                        </Touchable>
-                        <Divider />
-                        <Touchable
-                          onPress={() =>
-                            openUrl('https://apollosrock.newspring.cc/')
-                          }
-                        >
-                          <Cell>
-                            <CellText>Terms of Use</CellText>
-                            <CellIcon name="arrow-next" />
-                          </Cell>
-                        </Touchable>
-                      </TableView>
-                      <TableView>
-                        <Mutation mutation={LOGOUT}>
-                          {(handleLogout) => (
-                            <Touchable
-                              onPress={async () => {
-                                await handleLogout();
-                                // This resets the navigation stack, and the navigates to the first auth screen.
-                                // This ensures that user isn't navigated to a subscreen of Auth, like the pin entry screen.
-                                await NavigationService.resetToAuth();
-                              }}
-                            >
-                              <Cell>
-                                <CellText>Logout</CellText>
-                                <CellIcon name="arrow-next" />
-                              </Cell>
-                            </Touchable>
-                          )}
-                        </Mutation>
-                      </TableView>
-                      <TableView>
-                        <Cell>
-                          <CellText>
-                            {`App Version: ${getVersion()}.${getBuildNumber()}`}
-                          </CellText>
-                        </Cell>
-                      </TableView>
-                    </>
-                  )}
-                </RockAuthedWebBrowser>
-              </ScrollView>
-            </BackgroundView>
-          );
-        }}
-      </Query>
-    );
-  }
-}
+              {/* testing panel */}
+              {process.env.NODE_ENV !== 'production' ? (
+                <>
+                  <PaddedView>
+                    <H4>For development only</H4>
+                  </PaddedView>
+                  <TableView>
+                    <Touchable
+                      onPress={() =>
+                        checkOnboardingStatusAndNavigate({
+                          latestOnboardingVersion: 2,
+                          navigation: NavigationService,
+                          client,
+                        })
+                      }
+                    >
+                      <Cell>
+                        <CellText>Launch Onboarding</CellText>
+                      </Cell>
+                    </Touchable>
+                    <Divider />
+                    <Touchable
+                      onPress={() =>
+                        onboardingComplete({
+                          version: 0,
+                          userId: data?.currentUser?.id,
+                        })
+                      }
+                    >
+                      <Cell>
+                        <CellText>Reset Onboarding to Unseen</CellText>
+                      </Cell>
+                    </Touchable>
+                    <Divider />
+                    <Touchable
+                      onPress={() =>
+                        onboardingComplete({
+                          version: 1,
+                          userId: data?.currentUser?.id,
+                        })
+                      }
+                    >
+                      <Cell>
+                        <CellText>Reset Onboarding to Seen v1</CellText>
+                      </Cell>
+                    </Touchable>
+                  </TableView>
+                </>
+              ) : null}
+            </>
+          )}
+        </RockAuthedWebBrowser>
+      </ScrollView>
+    </BackgroundView>
+  );
+};
 
 export default UserSettings;
