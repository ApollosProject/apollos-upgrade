diff --git a/apolloschurchapp/.env.production b/apolloschurchapp/.env.production
new file mode 100644
index 00000000..8c5018ee
--- /dev/null
+++ b/apolloschurchapp/.env.production
@@ -0,0 +1,4 @@
+APP_DATA_URL=$APP_DATA_URL
+ONE_SIGNAL_APP_ID=$ONE_SIGNAL_APP_ID
+GOOGLE_MAPS_API_KEY=$GOOGLE_MAPS_API_KEY
+SCHEMA_VERSION=$SCHEMA_VERSION
diff --git a/apolloschurchapp/.env.shared.enc b/apolloschurchapp/.env.shared.enc
index 96c36f9c525a5de3589b79678a0f77b69d42e7fd..f0049d29581a696bde01f696a66a741244e424a1 100644
GIT binary patch
literal 368
zcmV-$0gwJuVQh3|WM5xI%lGmZ@U@8)lAC`<r6B4!*Xb4*Bz23+ITn6$O6rw)!PZS0
zf=T2`(CPwxHm^RidHloio}v*>)`3>S1ja&it7Z7DkOp0wx7s{1E{t2RV~uZfi|MON
zu9KtVa;zBG&r=#BiFcldRX$}`T}u)~e!ql&(%)>H^$8)|2PG`$x=u7Ib~;Wh$k|Kz
zSKQ2TI{(x0s$Jj7+ilc95coCD_H^Stw_SQSS$kRY85XJ{2%WUxxc+`e4ue0`puG%K
z{imv559%aP;@VMwIHME1jtfD*bg>im#zM<Q^UB8}&f#SL<wE2T`d881i;;(_jy9O^
z4(VL;I7ui_9%uNwcwB+4xj_g_Al0)Z;~-y=SGic6Z+N(sm@f{Lz#xy(<@uxP4Z^t-
zC-AH$0d(W{ZEx|v&+@0~EdZu&#xg^~2Gu^;Poy4D4|b@tvh1N{8i?;q5bawKRVSkv
OqL5~BW(#mlA#XH&F1eck

literal 880
zcmV-$1CRVuVQh3|WM5xU6sf6H-B9vL#T~x$tZk%IB35iLI^>LmVYRT6aqyVavD`V{
zPc_DrzRXODm79dnBJZ9vWM|67Nl3dGHyeJu)L9vIJP*d)i6^kNPUg7!s9|g1w{}3t
zl4~FZBC5QFB;m`2lD-Cgr;8u}8elsu261IuCk3*rqYX5%;4KuS0Pxla=8kWp>ykQ(
zK;{|-wmYav62sakkw;CFLz*R(Yd0<koOK<&m-=27fTjwVFOZ6WvfOkmcGBJ2T&47H
z78yxd*Qir28c<YS9n2S+zYnn>q67DSUQB3Kd7S|GcR~5TgqnmGj8*jA<SfkAGW79H
zc(5h)^H`|FE@2IVXfg<bO6$)6eU+Tm#sYP^c?O7j6|*L=hV-s10jW1YHQ2V02sS^G
z?(URc(cl<leVyOLDGF+f8}AxM$DqyoQ(_hwcx>WDlce@eTH1L!OZj$rFcic1ViMSq
zcQU_&5DD&4jWCxv%>TIY$e1FqUV^<e0y7Es{&_QNBfhw<5w<-A^wGuNXk~<s-Tx4N
zBs>YD3W6_;d!rTqNt^`t0n>uHZ*yDt@luocWD{mVbF@aNMa$ygH!(0sG}U5d+1uLq
zwle%rnO8~n2e~+3k6VR_fVIP~(_X34v!sp$t~aQLrzFT!PfU6AW*P#EEbggriaBob
zV!#1{_=BOP=P*~3^yn(N95!CZPOPUuEB0N(6fGGPJ_X}HTEMg?(rdsPtpMK)rAz;z
zi$bZ#IEG=Sn7_cJiVT>9Ad*B|!i0}^Mh$77xIec(NzF}w#f~yYj&W9Z22t~SGW&s@
zE|zi-P+K5h3#Xdc#Jk9@yhU1!qQfzpEuB3q4p&vEppk}@<nVW>ODgbHK$>DaUXHwN
zw8lf%Z087IlNn8|l3^p#%-ZQns>XLIn9EV=-_65mQSR0Ko`Wtl;zvl!xI|W#$Lw4j
zxQYgWUjW2776DNa3$+bRM%U(>0_^y{1<^A@_31D{8D2XXxf*dBLkMEe7+Ky2z5jjA
zwm)kCB}ucXFbDd=iJ#zz9Pi2`(a0l2PX-^luOU*VaPbE;jvirn#wSApQZ_frQb1&N
zm`Qka;NZSH7&G^U_){w_61b_FA2!Ojp0^*p4C(FSFjWG|L9h}94S0%oU~5jlL|1sB
GuRtx4c&6Y0

diff --git a/apolloschurchapp/.gitignore b/apolloschurchapp/.gitignore
index caf99aad..7bd49399 100644
--- a/apolloschurchapp/.gitignore
+++ b/apolloschurchapp/.gitignore
@@ -147,7 +147,7 @@ DerivedData
 fastlane/report.xml
 
 # symbols
-*.app.dSYM.zip
+apolloschurchapp.app.dSYM.zip
 
 # iOS keys
 *.p8
@@ -160,4 +160,5 @@ key.json
 .env.shared
 
 # GraphQL info
+schema.graphql
 fragmentTypes.json
diff --git a/apolloschurchapp/Gemfile b/apolloschurchapp/Gemfile
index 77041843..9947ac13 100644
--- a/apolloschurchapp/Gemfile
+++ b/apolloschurchapp/Gemfile
@@ -1,3 +1,3 @@
 source 'https://rubygems.org'
-gem 'cocoapods', '1.10.1'
-gem 'fastlane', '2.179.0'
+gem 'cocoapods', '1.8.4'
+gem 'fastlane', '2.160.0'
diff --git a/apolloschurchapp/Gemfile.lock b/apolloschurchapp/Gemfile.lock
index a0fa52db..bc2021d7 100644
--- a/apolloschurchapp/Gemfile.lock
+++ b/apolloschurchapp/Gemfile.lock
@@ -1,45 +1,45 @@
 GEM
   remote: https://rubygems.org/
   specs:
-    CFPropertyList (3.0.3)
-    activesupport (5.2.5)
-      concurrent-ruby (~> 1.0, >= 1.0.2)
-      i18n (>= 0.7, < 2)
+    CFPropertyList (3.0.2)
+    activesupport (4.2.11.3)
+      i18n (~> 0.7)
       minitest (~> 5.1)
+      thread_safe (~> 0.3, >= 0.3.4)
       tzinfo (~> 1.1)
     addressable (2.7.0)
       public_suffix (>= 2.0.2, < 5.0)
-    algoliasearch (1.27.5)
+    algoliasearch (1.27.3)
       httpclient (~> 2.8, >= 2.8.3)
       json (>= 1.5.1)
-    artifactory (3.0.15)
     atomos (0.1.3)
-    aws-eventstream (1.1.1)
-    aws-partitions (1.449.0)
-    aws-sdk-core (3.114.0)
+    aws-eventstream (1.1.0)
+    aws-partitions (1.371.0)
+    aws-sdk-core (3.107.0)
       aws-eventstream (~> 1, >= 1.0.2)
       aws-partitions (~> 1, >= 1.239.0)
       aws-sigv4 (~> 1.1)
       jmespath (~> 1.0)
-    aws-sdk-kms (1.43.0)
-      aws-sdk-core (~> 3, >= 3.112.0)
+    aws-sdk-kms (1.38.0)
+      aws-sdk-core (~> 3, >= 3.99.0)
       aws-sigv4 (~> 1.1)
-    aws-sdk-s3 (1.94.0)
-      aws-sdk-core (~> 3, >= 3.112.0)
+    aws-sdk-s3 (1.81.0)
+      aws-sdk-core (~> 3, >= 3.104.3)
       aws-sdk-kms (~> 1)
       aws-sigv4 (~> 1.1)
-    aws-sigv4 (1.2.3)
+    aws-sigv4 (1.2.2)
       aws-eventstream (~> 1, >= 1.0.2)
-    babosa (1.0.4)
+    babosa (1.0.3)
     claide (1.0.3)
-    cocoapods (1.10.1)
-      addressable (~> 2.6)
+    cocoapods (1.8.4)
+      activesupport (>= 4.0.2, < 5)
       claide (>= 1.0.2, < 2.0)
-      cocoapods-core (= 1.10.1)
+      cocoapods-core (= 1.8.4)
       cocoapods-deintegrate (>= 1.0.3, < 2.0)
-      cocoapods-downloader (>= 1.4.0, < 2.0)
+      cocoapods-downloader (>= 1.2.2, < 2.0)
       cocoapods-plugins (>= 1.0.0, < 2.0)
       cocoapods-search (>= 1.0.0, < 2.0)
+      cocoapods-stats (>= 1.0.0, < 2.0)
       cocoapods-trunk (>= 1.4.0, < 2.0)
       cocoapods-try (>= 1.1.0, < 2.0)
       colored2 (~> 3.1)
@@ -49,22 +49,19 @@ GEM
       molinillo (~> 0.6.6)
       nap (~> 1.0)
       ruby-macho (~> 1.4)
-      xcodeproj (>= 1.19.0, < 2.0)
-    cocoapods-core (1.10.1)
-      activesupport (> 5.0, < 6)
-      addressable (~> 2.6)
+      xcodeproj (>= 1.11.1, < 2.0)
+    cocoapods-core (1.8.4)
+      activesupport (>= 4.0.2, < 6)
       algoliasearch (~> 1.0)
       concurrent-ruby (~> 1.1)
       fuzzy_match (~> 2.0.4)
       nap (~> 1.0)
-      netrc (~> 0.11)
-      public_suffix
-      typhoeus (~> 1.0)
     cocoapods-deintegrate (1.0.4)
     cocoapods-downloader (1.4.0)
     cocoapods-plugins (1.0.0)
       nap
     cocoapods-search (1.0.0)
+    cocoapods-stats (1.1.0)
     cocoapods-trunk (1.5.0)
       nap (>= 0.8, < 2.0)
       netrc (~> 0.11)
@@ -73,37 +70,28 @@ GEM
     colored2 (3.1.2)
     commander-fastlane (4.4.6)
       highline (~> 1.7.2)
-    concurrent-ruby (1.1.8)
+    concurrent-ruby (1.1.7)
     declarative (0.0.20)
-    digest-crc (0.6.3)
-      rake (>= 12.0.0, < 14.0.0)
+    declarative-option (0.1.0)
+    digest-crc (0.6.1)
+      rake (~> 13.0)
     domain_name (0.5.20190701)
       unf (>= 0.0.5, < 1.0.0)
     dotenv (2.7.6)
-    emoji_regex (3.2.2)
+    emoji_regex (3.0.0)
     escape (0.0.4)
-    ethon (0.14.0)
-      ffi (>= 1.15.0)
-    excon (0.81.0)
-    faraday (1.4.1)
-      faraday-excon (~> 1.1)
-      faraday-net_http (~> 1.0)
-      faraday-net_http_persistent (~> 1.1)
+    excon (0.76.0)
+    faraday (1.0.1)
       multipart-post (>= 1.2, < 3)
-      ruby2_keywords (>= 0.0.4)
     faraday-cookie_jar (0.0.7)
       faraday (>= 0.8.0)
       http-cookie (~> 1.0.0)
-    faraday-excon (1.1.0)
-    faraday-net_http (1.0.1)
-    faraday-net_http_persistent (1.1.0)
     faraday_middleware (1.0.0)
       faraday (~> 1.0)
-    fastimage (2.2.3)
-    fastlane (2.179.0)
+    fastimage (2.2.0)
+    fastlane (2.160.0)
       CFPropertyList (>= 2.3, < 4.0.0)
       addressable (>= 2.3, < 3.0.0)
-      artifactory (~> 3.0)
       aws-sdk-s3 (~> 1.0)
       babosa (>= 1.0.3, < 2.0.0)
       bundler (>= 1.12.0, < 3.0.0)
@@ -124,7 +112,6 @@ GEM
       jwt (>= 2.1.0, < 3)
       mini_magick (>= 4.9.4, < 5.0.0)
       multipart-post (~> 2.0.0)
-      naturally (~> 2.2)
       plist (>= 3.1.0, < 4.0.0)
       rubyzip (>= 2.0.0, < 3.0.0)
       security (= 0.1.3)
@@ -138,7 +125,6 @@ GEM
       xcodeproj (>= 1.13.0, < 2.0.0)
       xcpretty (~> 0.3.0)
       xcpretty-travis-formatter (>= 0.0.3)
-    ffi (1.15.0)
     fourflusher (2.3.1)
     fuzzy_match (2.0.4)
     gh_inspector (1.1.3)
@@ -150,35 +136,20 @@ GEM
       representable (~> 3.0)
       retriable (>= 2.0, < 4.0)
       signet (~> 0.12)
-    google-apis-core (0.3.0)
-      addressable (~> 2.5, >= 2.5.1)
-      googleauth (~> 0.14)
-      httpclient (>= 2.8.1, < 3.0)
-      mini_mime (~> 1.0)
-      representable (~> 3.0)
-      retriable (>= 2.0, < 4.0)
-      rexml
-      signet (~> 0.14)
-      webrick
-    google-apis-iamcredentials_v1 (0.3.0)
-      google-apis-core (~> 0.1)
-    google-apis-storage_v1 (0.3.0)
-      google-apis-core (~> 0.1)
-    google-cloud-core (1.6.0)
+    google-cloud-core (1.5.0)
       google-cloud-env (~> 1.0)
       google-cloud-errors (~> 1.0)
-    google-cloud-env (1.5.0)
+    google-cloud-env (1.3.3)
       faraday (>= 0.17.3, < 2.0)
-    google-cloud-errors (1.1.0)
-    google-cloud-storage (1.31.0)
+    google-cloud-errors (1.0.1)
+    google-cloud-storage (1.28.0)
       addressable (~> 2.5)
       digest-crc (~> 0.4)
-      google-apis-iamcredentials_v1 (~> 0.1)
-      google-apis-storage_v1 (~> 0.1)
+      google-api-client (~> 0.33)
       google-cloud-core (~> 1.2)
       googleauth (~> 0.9)
       mini_mime (~> 1.0)
-    googleauth (0.16.2)
+    googleauth (0.13.1)
       faraday (>= 0.17.3, < 2.0)
       jwt (>= 1.4, < 3.0)
       memoist (~> 0.16)
@@ -189,38 +160,36 @@ GEM
     http-cookie (1.0.3)
       domain_name (~> 0.5)
     httpclient (2.8.3)
-    i18n (1.8.10)
+    i18n (0.9.5)
       concurrent-ruby (~> 1.0)
     jmespath (1.4.0)
-    json (2.5.1)
-    jwt (2.2.3)
+    json (2.3.1)
+    jwt (2.2.2)
     memoist (0.16.2)
-    mini_magick (4.11.0)
-    mini_mime (1.1.0)
-    minitest (5.14.4)
+    mini_magick (4.10.1)
+    mini_mime (1.0.2)
+    minitest (5.14.1)
     molinillo (0.6.6)
     multi_json (1.15.0)
     multipart-post (2.0.0)
     nanaimo (0.3.0)
     nap (1.1.0)
-    naturally (2.2.1)
+    naturally (2.2.0)
     netrc (0.11.0)
     os (1.1.1)
-    plist (3.6.0)
+    plist (3.5.0)
     public_suffix (4.0.6)
-    rake (13.0.3)
-    representable (3.1.1)
+    rake (13.0.1)
+    representable (3.0.4)
       declarative (< 0.1.0)
-      trailblazer-option (>= 0.1.1, < 0.2.0)
+      declarative-option (< 0.2.0)
       uber (< 0.2.0)
     retriable (3.1.2)
-    rexml (3.2.5)
     rouge (2.0.7)
     ruby-macho (1.4.0)
-    ruby2_keywords (0.0.4)
     rubyzip (2.3.0)
     security (0.1.3)
-    signet (0.15.0)
+    signet (0.14.0)
       addressable (~> 2.3)
       faraday (>= 0.17.3, < 2.0)
       jwt (>= 1.5, < 3.0)
@@ -233,23 +202,19 @@ GEM
     terminal-table (1.8.0)
       unicode-display_width (~> 1.1, >= 1.1.1)
     thread_safe (0.3.6)
-    trailblazer-option (0.1.1)
     tty-cursor (0.7.1)
     tty-screen (0.8.1)
     tty-spinner (0.9.3)
       tty-cursor (~> 0.7)
-    typhoeus (1.4.0)
-      ethon (>= 0.9.0)
-    tzinfo (1.2.9)
+    tzinfo (1.2.7)
       thread_safe (~> 0.1)
     uber (0.1.0)
     unf (0.1.4)
       unf_ext
     unf_ext (0.0.7.7)
     unicode-display_width (1.7.0)
-    webrick (1.7.0)
     word_wrap (1.0.0)
-    xcodeproj (1.19.0)
+    xcodeproj (1.18.0)
       CFPropertyList (>= 2.3.3, < 4.0)
       atomos (~> 0.1.3)
       claide (>= 1.0.2, < 2.0)
@@ -257,15 +222,15 @@ GEM
       nanaimo (~> 0.3.0)
     xcpretty (0.3.0)
       rouge (~> 2.0.7)
-    xcpretty-travis-formatter (1.0.1)
+    xcpretty-travis-formatter (1.0.0)
       xcpretty (~> 0.2, >= 0.0.7)
 
 PLATFORMS
   ruby
 
 DEPENDENCIES
-  cocoapods (= 1.10.1)
-  fastlane (= 2.179.0)
+  cocoapods (= 1.8.4)
+  fastlane (= 2.160.0)
 
 BUNDLED WITH
-   2.2.4
+   2.1.4
diff --git a/apolloschurchapp/android/app/apollos.keystore.enc b/apolloschurchapp/android/app/apollos.keystore.enc
index 84d919dad1f07b2792148548e1ed909adfe1e36e..70939332fd22bd988de92684eae45c89899a710a 100644
GIT binary patch
literal 2272
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

literal 2272
zcmV<62p{)TVQh3|WM5xCei4@W)6~H-#ic2p70lv_y+J&$6(y(m<1`jXKWdpG+HY-L
z7mwUFhnK8M-H%~N?P`f7=!YeQB?-R`boYF_{g&Ut_a(|ce*Rs5CGZl=MA>A2%|EN}
zwEBthPrcv$);cH-q$AkyRxB&9CdP7hNiRO&mSX{}A@yASf)qYu=<E)dte0DOkCYtv
zl-(<&n?3$<=<)2gc-de2N}ABq@zNmqu#lV~8q5ePF68qnB_sOW43%-^wh50YP|ih;
zU{nKpI+ixt%lt(Ieh#lHyL!5~TGn-iV$9Su(d}5q|F~X@a7DMB{_hZc^>_(W_`rbU
z_~GvRuP)%&_kmC>-ioYS+S`|vu`}pgwfpfxu<RYVH?n9H1u0_D69o*w0x4HOS-E)M
zEoXkRst3@l1OLp^Q3&*W+s?Di12S-151T7zohR8Lgt2DkO?D_m6QkZ5aOxjg>3{Jz
zpjDaM25AT*^3+S`5`cP7n{oD`m7fPiox3h+7h=4s_sCqXz1^ILj?)7#NtzPK{{0Gc
zJ5WhnNQ00^S|n#oZ^X1f`1F<MKo_+@F!i!+jWegBIeZX}Rb(^=o^Hf6Z$}`}M<?St
z)TqkN6Y8U#LlC-Zcq0)Sdm>~LDSbH@2ELtdwBb~(q{y)OZMi+~gp=0q%_|G>17u2z
zjmtdEuK;#uGRy>UTm`*Io|)Bh5pDUdH=}ux1`|XevavasuxW!6N^<x0p%j1th=hyT
z3=Ns;z_x=zF)ZRWR2i9TM3Q%Jt)QGoC{%4_JQP~b2GTV~3)H+{l9kDJ_w<sf-TLV^
z&5B@j>NNy!PhA$_BLS5?v4@CNAq6jKc35-{z-C4X0m!W!B>x}gst%ON8|eOrT=m9`
zyvr(2q@pN<4OXCd`_X|=8>-}%%j9y7a*2N6a`+iDyu_b2{VeGtwgO(>u#pwi6qXJP
z({gJw{~TthP;7X<=5y)gHHQ0to{_(g-y2*puGFxAR8ib%JKGcp<9cAvb_xC)rN@tJ
z!<UYXZN!!-y@{N}uu17;FK^!t#pi_%@YVdX<{3Pj=P7bBqo5zsOYDe$qwK)%eMVl~
z3zccrMtl=R^>IXv<%ri#`zrb$s?XdB70RC<^%ikJcs2v!v8f(1gQtDJZcgJ1deZLs
zFtaL+-QVch&eQiEukE@Ag5$6Ec{WnfjX=07MY%*Kc-i#w!|bZj0{PMgoR!k*hy^!$
z&WUzLGGCm1xQ^R8n-^q7Sr)=#EyncktH!v{L$(&-b4Wsd{C%@DJ4~M@l_knZRU5f3
zXRPL+*l`gyuImgH#ie8yfYKDLx)TSYLp(OA%GzRm-?#tTkQl1>l98-(sAKNPp3S}y
zk<700)NN|V|INZOqNxGHH7cC>B5A%<HW`ydrJgP7P&P9&J}wg9mBUUeF>2XB4`8cK
z4=fym2SnE(vbA5E0wtY^jqE9l{G89%a@#U`43rxA%rbyC+J>k1SugG!6iII2BZk2*
zT`Tf7c8@Z&PK#3m)liQ6V^XN6!h*WCh@CCnwH)NOdM|>@7%_rBVFuhj?+~@&2gn}+
z(BL*7?n5MLX-zgGQ80b5UyBJwP%aG=VeXKN6&gt(i*z!vHw0lELS?9FEXlTD_m1uz
zyrXFQKm(Xy`UeZy7Sl3MGX2=<;u1>P!0U|paDwwl{W|wnY$EL~j!$*Htq4006qN^M
zg<FYzl^0uc1+|_rKfJpE(Mh}*O(eT)r}61f{mr2U4hEw|Iq0;<Y80J)y!r_Z)~~Sl
zy`wZq9n>d86|x1A0TeM5gd?UTf@-zs@A;TAt8|z37kTC?>3+k=Ne`9k8xn`LBT`3S
z4()yeBT?RP7dbez@0j_uPoi3h*R_+Yr2haJbD<N>_}KILYQLrnYO#NCV*XFkXXdUM
zGxlzJGD5jCy_dj_7qr(pWQ=Bi7j+alv|qcp#w#HInqvKf?0Qhmoks|S_L~h^+yyqJ
z%FvV@qP!at;J@mv-8A)c+ZGSkh`s=*i{rRs#H1}btxkr-7n}-(aIE6O)8=Ty;K{Le
zxNYM<;f%3C)0p?FJuA*Inef02*1x_(e=IUqj5@%k#r9d4^FeI@2Df+$tvy>AP|pFN
z7Ch!sV;KaAJ~eY&yhWbr`C}{w!cX(;&32xJTo@L?-dMa6btJP8H@eS34NxDvqY)uD
zPyPEjq}rKzu61h?BkYZG;|UI9ia5nzk)fT@s=$K~uOj+17P^osa^wj{#)_n`MwFg+
z%hens3XBrs)?6Q3%-{heI>b%P+-XJzbqK!&4H#g-s8ulnC9oZaAdIiF`1~43Ev0&T
zEEjOcM3HhaY2cC0Mh{7HBu%oE5gGD~hk?AsdN6T|ht9-4Mq>_`ItF04@>dsSVqh4D
zy9NbWk(NxYjzjiNd+ReK9ya~uyB5%|^$eKk+Pp<52=04V|65dsV>)gYR|qZhWG}bs
zxPypoc)x)FIAgtByA;nV_I}009?<C$)^j~I{YvZ!U<7$}kGBppjcn8lIT6*eK#4}i
zdqr&)JJ!$PA0@ixe$5HpORW7M4s=42r{tt$?pAUE`%7H}fkuZ<FL?$9Cuj4T?3X{r
z=L>-M!!_6MMgWhs&dehODX}1r^s<=8cFOW`p|ILCCK1bG25YDJf`WG5(=8UZo&_aQ
z=t60<IUaO1#p~|_KNK7uIOeY45On{HZx8}s@hE}$YtQ=N0<fl5LSF8mV5i`+WU1D>
z(#`eV54~6k=sQ`A5YY!bpG;X?aPw;kr_<Ij5Gj(8;3<~i5<={Yk0Q?95xu_!{V*YT
z<3~M~rdt(a6+?qxo8p9IOnh%#U@j}_Des6&LVOQ?Yhv?F)d+(1tx9phDwGYYUeo{H
zlSDgJ>=Hp!`M<xUHz`NY49;-d^3~UI)p|}wwbR;3hgJa$z_zHXIh&=-VYMV4;pRn$
uPGkbJREOc&_E^s^b<g`H^+Gq;J@Ncz{+=`3y!|tFt>{3CKiveF!lF4yo@RRh

diff --git a/apolloschurchapp/android/app/src/main/AndroidManifest.xml b/apolloschurchapp/android/app/src/main/AndroidManifest.xml
index 9b213950..887cc9cf 100644
--- a/apolloschurchapp/android/app/src/main/AndroidManifest.xml
+++ b/apolloschurchapp/android/app/src/main/AndroidManifest.xml
@@ -18,6 +18,10 @@
         android:name="com.google.android.geo.API_KEY"
         android:value="@string/GOOGLE_MAPS_API_KEY"/>
 
+      <meta-data
+        android:name="com.google.android.gms.cast.framework.OPTIONS_PROVIDER_CLASS_NAME"
+        android:value="com.reactnative.googlecast.GoogleCastOptionsProvider" />
+
       <activity
         android:name=".MainActivity"
         android:label="@string/app_name"
diff --git a/apolloschurchapp/android/app/src/main/java/com/differential/apollos/MainActivity.java b/apolloschurchapp/android/app/src/main/java/com/differential/apollos/MainActivity.java
index 89affa60..db0a876b 100644
--- a/apolloschurchapp/android/app/src/main/java/com/differential/apollos/MainActivity.java
+++ b/apolloschurchapp/android/app/src/main/java/com/differential/apollos/MainActivity.java
@@ -5,8 +5,9 @@ import com.facebook.react.ReactActivity;
 import com.facebook.react.ReactActivityDelegate;
 import com.facebook.react.ReactRootView;
 import com.swmansion.gesturehandler.react.RNGestureHandlerEnabledRootView;
+import com.facebook.react.GoogleCastActivity;
 
-public class MainActivity extends ReactActivity {
+public class MainActivity extends GoogleCastActivity {
     /**
      * Returns the name of the main component registered from JavaScript.
      * This is used to schedule rendering of the component.
diff --git a/apolloschurchapp/android/key.json.enc b/apolloschurchapp/android/key.json.enc
index 874dbdeb21a17deaca4461e1bf7a1a534ac33cda..c1b16731f8dca5d356338085bdcae7eddf976255 100644
GIT binary patch
literal 2384
zcmV-W39t53VQh3|WM5x!e*dD7F?Lm{4mwVVhktmY>GN$skWsH$IJ(_dEk9EsY(Y7o
z<oF&YC=7yxE#2VknU?YrG@*H|EJs0y%jRi_9;esj?bCd;(JoEeV!62x&zWhUmCpJp
zTB)|qXb>*S9QLU8XFHCY8e#$xCs~X0&<~Z?fQ?VQ6e!-ESY)EyL+`Nf(ks}|Q^ZlX
z+`}jdEcjg&h>8pSN(t}{blnf-Xd1irg%Cyl7f!c!;bDX$A9qM}E_dC%{O5rH@Nq)*
zREgVfq=1tUrg*I}^twe<_^h`hPqo^iIadGHK`#PhFibGE=#Pe-+oXdlE=XU*(}13>
z>_DAAQIo<bszqB^2%(TQk1&AR?A-u8=BNoHFeP?9OVlL$f?x}8lH@+sbf!%!qibp!
z<XPtMRg)QXzp}uK2njhD5EHiCQ*f249p#sMe_7Co_ee(m0~12>c36hkc+hQ<1^=Y|
zie(MW>~N$TII;Z2aGvrfL*!P!ea^lp3yz_FZec2fUQR9R_ebZJp0-El`zG~dzxoFv
z)CEXb$P<Es7a@e$nbO;9`eob{znqKa7DQ<8?h&u?!4;WTPy9s}9@mn@z70AfQ-5az
z;Hb(9$~gy|O!YflJ-st6uL@}vFhv(6C3Z(5tO7&KAf}N9Jgc(t$7qZ6EzCQ^njiz#
zBXnK>z7AxK@tCX9I5kOg^l^sB=*aOa>&gm)u)d!^#h{i)#E|0=X^l_OK8ai$wFr)T
z=Hb%^P2g(rSpUa2<>#|3%_w3QfzdNQ4zz71>7irMV{tVAZGyLL*=**O=hio$1Et%g
z=LKeAmcQ>IT=NgEcu^k8vq$WA;G`n1)5S0dFqs`>z~a(Agojrr?++MMUG9=fJ)ATy
zAVpie43KUoS{l%i%9utZOlZO=N)X=p!Vv-|Wo{Z74xs%_BMG@~A94LZ6yk#dENO;s
zG6%Gfk<-=*K0O<$PyHgOj|Ga;khWxXwDtw6=1W5#G+timrW?nui6ZGaj(IQR<izkZ
z;5clLeAm{o&3N@QvVWksPNUd@h=5!3!uz3`=*yqSGc0BSQqSGX5a7V^cb~!w#;(D}
zs`uAc_bKC^XLkKoyusqtXiHg^j~16iw-;Y>9|dvbr!+{=unk5PaT>I@9{snm(qLH#
zarYW5r*b&~dbD~QRM0_%QX(Ubrz~GA`lbOL3gfAhb1`ZM5`X<TSPca$gm*dZ|Bi9W
zeS*jg!HtF}r@Grax?9npH#xzi+VS^bZ`!gD5L*iQ$Qw+c56LsCUnAkC)SCc*0ueO#
zG1I{eR(-?2Gc2aVH9~UWJr_e?^h$3}FezPhJw9$Im?>S~ye`_2aCE+hLWBsR>yr=5
zs?7fc5UL+sK8mmNSyED~KfJOuPX!A-<;sv`13s#&xa~#JZel<*e=O0W8TmL{VIRhU
zRx-ey0ux+LGQH!DfKWE@M8eflbE<TBg1@%bqcd`VB82AedgSkfT&cs|q)Q)2H09<$
zx*gwsD}36E(#y4+uLXz_QLq!uZy5bewUx2>V(_UsSiT$F$bAuW@^k$3M|z5h2w>{c
zX2ZWWjJKnK>y=EJ6!+{hlwO>d$gbK1t)yPecsp_R#z7CwB7rS|+T3{2jcK&1mJ`wM
zFA}imsTtfi=+-eKhI&jWBiz4cs9i@r#0?;6{=r)puJ1i?#3*NO4ko|Nwy`$O_}Tuo
z+LEM>OO5k<m1UBz*?TT`g%Z)V<svJ8A#6EZJ&m7@Hx7q|aFi@~+yFOVMq{5_b~mNl
zRjD&f(-w&1O;+6rXII-w%mnzNfr&fa(j)RHm_&tJMF&@xCy)d{g2zG$_?IL{p7x)T
zkKsSB)e0&xJwg=rmBlN>LJ@oH?qIYjb&~4RWVbj!EU{HF!DVgcPT0u}319a71L}!+
z{$o?S->|wfEBA#Ei9#*MiCc@!fa`(3ibuOcCWVk^7rr0YsG9P4=o}YR`}&q8)U(sn
z2X%jw8J<>UjJV=p0)=P|W|4*RQ)CTaeQjF02#xv0wCGVAOCqpRFm6#$xR8{N0+y*j
zjJg0vKA|EBaMZYT=<ERN9)wU_GnzBWkhur`QI+FgCb-=d2bb6B1={vm(-F{O&)Z^9
zCN$zu*{{XKtsIRF#6H^?b-2-ajVwTPra{s-?g>-n1I)gg7CUgkh3WPbtJmnzC96Fa
zqkrO-Ulx#I&}b6)N$VPZJyAyM%i0m+^wy54-QF))f8hLCoEk_f(?99+ay|v@z=y@$
z7<&Oaxk6^fCH&wU8A|F%5hDd7qc|=``)-oKXg5?Y+I6pl(?NW!1{3K5u#jw5hZ5OM
z-IHVtp7wBGSV!hn(qI`8eQ;<|T}6NGuFjnCyo0cTBU!=bq}!l+9+o_<_xm`^(j{2L
zWr#e6Dj5hV3&#}LpmRZ+P0x0xY82aWtFyFx*m!`I4#C*(RqCcP9VB`lkF^OuVg9Mz
ziMJZJCl|@I@)=2Gsk}R8LjEH+(L!`FcCXhnEP{^;?%8~Bp-bN;=87{a`d~+5YL+2u
zzm;7;HzThc0h+QGmu;2<A$7L}=qziSYH=_l1TfkZq5I?<63>4P^oP#_@HG@hjdBdp
z<fv7@+4A_AKJ-5G<}koQ_@E}{Ui-pfuDFZ>V!<cLuEPz$4S;n0Gh97g<pUp7cV|oM
z_mGNFH~VVpqFc-hd03{(#nGRDCb#5s!=?*ijIb#vGKMcQF^Ju;X!Tyu4t6=8+)QPy
z5#h=#;oZNC!M!X5j(pj7a=%{d)G6pCQ8I(w44Yd@kVJRBTa+n5h)K~&=$mt=%Rr*R
zHE|j`h5_p?DiHSOT0+&63GZ9q5p^)tk)`d|4A{1%JGyX{JaJ;LGDXp`iRr~v;-H!*
ztteUNe7`cF<;wffef+QiJ^#G&#yojeAB3oCB+f1WS#FXu{EJE&{~+kM5q|$UpY0;F
zySNh1Mp&-UvaXMjtmHcLI5vI~wUp3N!2>^o)LB`3SOTk+`NvJ|7$c;y`e^Y`Vf@9Z
zI5mW{aFx(3O;(MdL0H2fh)1aI4=_%+t2waiDER%%FxphPt&7o)v6}&)9yZN_`E^&<
zO=DH&4eqmV@1l!<<q!@0;g8ZlS+Ju;S*7&em{(YvyVdG|q>y2d5@-oTI2lgH`bwVv
C;-hi^

literal 2384
zcmV-W39t53VQh3|WM5zVPhNtR82D>a6V7D09|JqSvez;E3IlrEJXs_2JaABLDEAc%
z5DhhYK_hR?s4U?bIE9l+6~pClnU2REw(O1sUJLP!$dT1xu%$$;rifwE5HZny=x+N~
zT;z;AZK4LScflcOp`yoyl;@Z#>hKMhZBhoDms3~MxA_d;x5_1q4@0+rr&3=qJ4oT5
zBw0?qQ0tUvuz$p$W*9g2=yY3fv0%(0m&Vngq$5l$U@?!G4z67|Kyz^h7KvC$<t4Eb
zy6k~d!590BrfSc>1nh4<BwIG8V+i@m8(34-Pg5~yc#RA9|4X3gFPMSiShzcuR@jeI
z`^Oh7@OI{%_6L!62@}i1FH203JOKO4)z&^}1&q32k8>d@5JUghe8n|k6nQWO@^V|`
zJcKRg)?YI&DiMv5^yCfraV%2BePuWc>43rNcM3dP?KHqcQx`Z7%&CnRqjUwpJD}Rr
z@is0)A$`XxuuIlx>nqO6X0)&Q1-0zWV`V!Jmz7rticvP+SoWyvaK|S%@fv<jh;=r>
z_4r|XH%LWSDc%w*rl`M8@Rh^o>l@f=lpo_{c6#DD!n2G*$vT;$KVzvTIHqnoj68=i
z<NRK}AFHy39dQK3P0k-3UcKpm2f6ko1nlD}fMe-Hhr;=NkzHbFEu#!WbP1g59cJ5a
zf*<)hiv}{U!7ZLTg+I4?*PYGXa@hg8m4fHHO1nR?_#olpKO}&hV)7@Ddtf&77qhZz
z6S(iYhQz&&S?SsSMacExbBuXuUP1eLoF!l}nzRgcHi9T1)=yqbGX`lUar;L>024Pu
z_IZg9DrLdijLNNwck?ln*5b300$*C>R{0D$CADHzzg<bQs=nAot09MiiEp>VW9TF9
z!X%3o8St$-Ws3jY(5SINA^qHN>C2EC7;?bpd0t}d4=fNWZ`7)OL=)z~`y>xE;f6)t
ziLe<gpC1#nO}%=0Tn`*0sq;^r=q4FYHbE2Ul<x@di4YR)(~{SbpMK&x=oryP2~82k
zU9^GOaNb4oD0t!z2O}vMln&kbzEOYswE0k{rK<{xyi!us-AA<~YC6iJ|F<JC++c_S
zwY{xG9S1u)`5m~?`*Ucq-gqi{!}&^M%9L+8>OfcQyNrrLOB7oMP;aUZ0*lChbFr$F
zY%@MAE0cSHeX)&TQF`4!C4Y89Ho-pJ1_{8=ZJVv>y9nWZwZ-sGLs}QR4fI#AYU>x>
z-;<>S++)n0^vY>Mg3|8soGw>`b7533n`(tKG!d9CM6Cn{gEkAYHve{FCyqY+k|SKA
zdsxnLhhii*&Kzl)zi)iM7c7aQu>$Jlhb3))2{iSE{%6~Rpk`tSF+p;qPH6_}Xe))f
zR0+p0YgFUUjX`?C*U06GW$Tlbc;+`8XtbxyTu00LC9P^pdR(}DtcoD&6}wJ@G3Xlq
z*d4FM4j>7n!E2<Dv-$YyO^FOlJxRT7O&zjzU{NAw<ObG4VGc{@D&$y6FCG*7NGVLY
zESg?Dvz7q5^fT7&GZ_4s#_)|w(bgxA>M|T<p=)169Jq2AEkaOiBQNkkXE*Yt%MOCz
zS~BP0=9uypRu?Qe&P6y_6X#@YFxQ+tQ-X^R9Lh;Pa)V2YQvUtz=DSc*CK<VT<HrwU
zN;A!lBg|1xqPyyYGZ?Z#WdRQ5YeV3=PpnM|t8)*+Y^VS^1r^ysaQfXKKCa8^N3v0D
z#jqiJ62iW@`7nu?Eb9Y6tjrROEXGR8QH=n3fJI5g@buk)vp=XM*ClVEQG(Wy7$3%Z
z6pd^YiH<O)72|iUtK7Z)%Q$Q2WM2V?P3f3~++iIKq^YLWmQVyFdVhDTK6`1q<p)hV
zT}VdtU!(A2P+5v*KZO);Ga^fO1W7$LwL{wG?KPqBV?jOILbhU$Ho&nSoT9qLzc!OZ
zNVNn{*kqaAEkRqc?<Pz55pJGlE?wuz*Y$D#hq@Al!j2^NS=IWbQ;SW_N=g1i<|MN0
z%NnM7&jG=k#gm!YizT*aLsv&mEi9)IZd;!C?B=|Gl66J+K_Hcvz>u+jMFbH{rOtg#
zf>nXA6ZOLZ43z$SX6hZWT?pI*<F!P>{vqU0vQ_p9W6Zc7f3uRzhLLl_ZUX?e`tMlD
z)5K7ZyJ}=C*@IxQ(AeMs!^BN~F=FK;ercym3ok5#smgi?G*9vf>zWj|{}NYOT6G63
zoN}L=z0Ra;rXh%urjsrq16AbS6-P(>4_NK^fDHv8<W*#lP6cKwX+Fx4rEQVy5tq^}
zqeYFBpLS^1I)aoUr!MK|O;LPthzZkFF=fo?S_@h_lE9_dkH*TEvyW+Y`jaUO#-Z7h
z6^nRw^ck<AgE`OjG$;Vm;ew~rqM5GvZvVl}+zrgOqG_-Kkd^vPPr_f3{Hok>_bHPx
z=ATePoAmV{6jEBg5$@MPLbMd9!X71du%)u0^V+3<0j2>-jk*l|t3Im_XOms}bOQ&9
z3D<T0Fz~yw9NonO%=A^y?=XPRq~XYju+rg651h4Mo?R$IKg)W{9Aq?VyIhwXyRfZ;
z&M{Wi{j0*b3{qE%3;RfuPHfn4R_r_~*`u?b%7<o#?#5G%4Tcw^S2&*bCV_#BwvWFK
zgrHac&39~@8hyvI%Zdg>y=|nL@@~Yb))Qx_VJeTHU~LWqcMzENfbL#11%&KQH87yF
zxjMVYfSdbNI&!(qE*^1B&k49G?JZDWnGw5ZmP>vvI1V0LVlI!-ZngzTo<GU7-qE{z
zd8E_4?F19NE%>l!)(h<L6K*9E__#^Dxla_Z7w`zZyD&e8Pk=VtKNo}Z+cm}+<V68R
zh~!F68s^cSTmFBk&)DXL4lv!25<dF}{zw@1A7X)x8&Zw6;C>S}VYI!rNX@jAe6hLu
z!_M*ury39!>|`H)duZ)rDY%t$XBH(!k!kl}q2P;Q)XIvdP^q<h$6-n|wwnmc8K&%K
zC9f?rzmPi=<LC~6LAWDwTX)t$gcUr9OJO@18~GX!hQaR(d@3o@0}VzmzUq|ZiA~h0
z92a`o9J1)1fV5Kf`l=Wba9k(KQpu#7-q^FHzN9Q3ZSGd&DJY#G|6^?A;MjT(k12zV
zSxWAekDt5jkM2Vd9~C-AO*-(4xLjb$H=d(bB2P9R;4wnmx8e9hBlGFq&>_Q-_m!wn
CZ<VzG

diff --git a/apolloschurchapp/apollos.json b/apolloschurchapp/apollos.json
index e799cf14..6ff78f82 100644
--- a/apolloschurchapp/apollos.json
+++ b/apolloschurchapp/apollos.json
@@ -1,4 +1,4 @@
 {
-    "version": "2.20.0",
+    "version": "2.6.0",
     "environment": "client"
 }
diff --git a/apolloschurchapp/fastlane/Appfile b/apolloschurchapp/fastlane/Appfile
new file mode 100644
index 00000000..fb2e46e3
--- /dev/null
+++ b/apolloschurchapp/fastlane/Appfile
@@ -0,0 +1,8 @@
+# iOS
+app_identifier("com.differential.apollos") # The bundle identifier of your app
+itc_team_id("121565707") # App Store Connect Team ID
+team_id("7KS82J74VW") # Developer Portal Team ID
+
+# Android
+json_key_file("android/key.json") # Path to the json secret file - Follow https://docs.fastlane.tools/actions/supply/#setup to get one
+package_name("com.differential.apollos") # e.g. com.krausefx.app
diff --git a/apolloschurchapp/fastlane/Fastfile b/apolloschurchapp/fastlane/Fastfile
index 0c820572..70abf33a 100644
--- a/apolloschurchapp/fastlane/Fastfile
+++ b/apolloschurchapp/fastlane/Fastfile
@@ -21,30 +21,31 @@ end
 
 platform :ios do
 
-  desc "Push a new internal build to TestFlight"
+  desc "Push a new beta build to TestFlight"
   lane :deploy do
-
-    # get project name
-    proj = Dir.glob("../ios/*.xcworkspace")[0][7..-13]
-
-    app_store_connect_api_key(key_filepath: "ios/apollos.p8")
+    app_store_connect_api_key(
+      key_id: "LV9F3XX57B",
+      issuer_id: "7943c4a3-c0cf-442e-93bd-b3c289bddec3",
+      key_filepath: "ios/apollos.p8",
+    )
     setup_ci
     match(type: 'appstore', readonly: true)
-    increment_build_number(build_number: number_of_commits, xcodeproj: "ios/" << proj << ".xcodeproj")
-    build_app(workspace: "ios/" << proj << ".xcworkspace", scheme: proj)
+    increment_build_number(build_number: number_of_commits, xcodeproj: "ios/apolloschurchapp.xcodeproj")
+    build_app(workspace: "ios/apolloschurchapp.xcworkspace", scheme: "apolloschurchappprod")
     changelog_from_git_commits
-    testflight
+    upload_to_testflight
   end
 end
 
 platform :android do
 
+  # necessary because setting gradle properties doesn't seem to be working
   desc "Bumps Android versionCode"
   lane :bump_version_code do
     path = '../android/app/build.gradle'
     re = /versionCode\s+(\d+)/
 
-    s = File.read("../android/app/build.gradle")
+    s = File.read(path)
     versionCode = number_of_commits
     s[re, 1] = (versionCode).to_s
 
@@ -59,21 +60,6 @@ platform :android do
     gradle(task: 'clean', project_dir: 'android')
     gradle(task: 'bundle', build_type: 'Release', project_dir: 'android')
     changelog_from_git_commits
-
-    path = '../android/app/build.gradle'
-    re = /applicationId\s+"([\w+\.]*)"/
-    s = File.read("../android/app/build.gradle")
-    package_name = s[re, 1]
-
-    upload_to_play_store(
-      track: "internal",
-      skip_upload_apk: true,
-      json_key: "android/key.json",
-      package_name: package_name
-    )
+    upload_to_play_store(track: "internal", skip_upload_apk: true)
   end
 end
-
-error do |lane, exception|
-   slack(message: exception.to_s, success: false)
-end
diff --git a/apolloschurchapp/fastlane/Matchfile b/apolloschurchapp/fastlane/Matchfile
new file mode 100644
index 00000000..d01001cc
--- /dev/null
+++ b/apolloschurchapp/fastlane/Matchfile
@@ -0,0 +1,2 @@
+git_url("https://github.com/ApollosProject/certificates")
+app_identifier("com.differential.apollos")
diff --git a/apolloschurchapp/ios/Podfile b/apolloschurchapp/ios/Podfile
index 40454274..26b192b8 100644
--- a/apolloschurchapp/ios/Podfile
+++ b/apolloschurchapp/ios/Podfile
@@ -11,6 +11,7 @@ target 'apolloschurchapp' do
 
   pod 'Permission-PhotoLibrary', :path => "#{permissions_path}/PhotoLibrary.podspec"
   pod 'Permission-Notifications', :path => "#{permissions_path}/Notifications.podspec"
+  # pod 'react-native-google-cast/NoBluetooth', path: '../node_modules/react-native-google-cast/ios/'
 
   target 'apolloschurchappTests' do
     inherit! :complete
@@ -21,7 +22,7 @@ target 'apolloschurchapp' do
   #
   # Note that if you have use_frameworks! enabled, Flipper will not work and
   # you should disable these next few lines.
-  use_flipper!('Flipper' => '0.75.1', 'Flipper-Folly' => '2.5.3', 'Flipper-RSocket' => '1.3.1')
+  use_flipper!
   post_install do |installer|
     flipper_post_install(installer)
       installer.pods_project.targets.each do |target|
@@ -35,7 +36,7 @@ target 'apolloschurchapp' do
          target.build_phases << phase
          target.build_phases.move(phase,0)
        end
-      end
+      end    
   end
 end
 
diff --git a/apolloschurchapp/ios/Podfile.lock b/apolloschurchapp/ios/Podfile.lock
index 2bcb2846..c6f02dbe 100644
--- a/apolloschurchapp/ios/Podfile.lock
+++ b/apolloschurchapp/ios/Podfile.lock
@@ -4,6 +4,7 @@ PODS:
   - BVLinearGradient (2.5.6):
     - React
   - CocoaAsyncSocket (7.6.5)
+  - CocoaLibEvent (1.0.0)
   - DoubleConversion (1.1.6)
   - FBLazyVector (0.63.4)
   - FBReactNativeSpec (0.63.4):
@@ -13,50 +14,50 @@ PODS:
     - React-Core (= 0.63.4)
     - React-jsi (= 0.63.4)
     - ReactCommon/turbomodule/core (= 0.63.4)
-  - Flipper (0.75.1):
-    - Flipper-Folly (~> 2.5)
-    - Flipper-RSocket (~> 1.3)
+  - Flipper (0.54.0):
+    - Flipper-Folly (~> 2.2)
+    - Flipper-RSocket (~> 1.1)
   - Flipper-DoubleConversion (1.1.7)
-  - Flipper-Folly (2.5.3):
+  - Flipper-Folly (2.3.0):
     - boost-for-react-native
+    - CocoaLibEvent (~> 1.0)
     - Flipper-DoubleConversion
     - Flipper-Glog
-    - libevent (~> 2.1.12)
-    - OpenSSL-Universal (= 1.1.180)
+    - OpenSSL-Universal (= 1.0.2.20)
   - Flipper-Glog (0.3.6)
   - Flipper-PeerTalk (0.0.4)
-  - Flipper-RSocket (1.3.1):
-    - Flipper-Folly (~> 2.5)
-  - FlipperKit (0.75.1):
-    - FlipperKit/Core (= 0.75.1)
-  - FlipperKit/Core (0.75.1):
-    - Flipper (~> 0.75.1)
+  - Flipper-RSocket (1.1.0):
+    - Flipper-Folly (~> 2.2)
+  - FlipperKit (0.54.0):
+    - FlipperKit/Core (= 0.54.0)
+  - FlipperKit/Core (0.54.0):
+    - Flipper (~> 0.54.0)
     - FlipperKit/CppBridge
     - FlipperKit/FBCxxFollyDynamicConvert
     - FlipperKit/FBDefines
     - FlipperKit/FKPortForwarding
-  - FlipperKit/CppBridge (0.75.1):
-    - Flipper (~> 0.75.1)
-  - FlipperKit/FBCxxFollyDynamicConvert (0.75.1):
-    - Flipper-Folly (~> 2.5)
-  - FlipperKit/FBDefines (0.75.1)
-  - FlipperKit/FKPortForwarding (0.75.1):
+  - FlipperKit/CppBridge (0.54.0):
+    - Flipper (~> 0.54.0)
+  - FlipperKit/FBCxxFollyDynamicConvert (0.54.0):
+    - Flipper-Folly (~> 2.2)
+  - FlipperKit/FBDefines (0.54.0)
+  - FlipperKit/FKPortForwarding (0.54.0):
     - CocoaAsyncSocket (~> 7.6)
     - Flipper-PeerTalk (~> 0.0.4)
-  - FlipperKit/FlipperKitHighlightOverlay (0.75.1)
-  - FlipperKit/FlipperKitLayoutPlugin (0.75.1):
+  - FlipperKit/FlipperKitHighlightOverlay (0.54.0)
+  - FlipperKit/FlipperKitLayoutPlugin (0.54.0):
     - FlipperKit/Core
     - FlipperKit/FlipperKitHighlightOverlay
     - FlipperKit/FlipperKitLayoutTextSearchable
     - YogaKit (~> 1.18)
-  - FlipperKit/FlipperKitLayoutTextSearchable (0.75.1)
-  - FlipperKit/FlipperKitNetworkPlugin (0.75.1):
+  - FlipperKit/FlipperKitLayoutTextSearchable (0.54.0)
+  - FlipperKit/FlipperKitNetworkPlugin (0.54.0):
     - FlipperKit/Core
-  - FlipperKit/FlipperKitReactPlugin (0.75.1):
+  - FlipperKit/FlipperKitReactPlugin (0.54.0):
     - FlipperKit/Core
-  - FlipperKit/FlipperKitUserDefaultsPlugin (0.75.1):
+  - FlipperKit/FlipperKitUserDefaultsPlugin (0.54.0):
     - FlipperKit/Core
-  - FlipperKit/SKIOSNetworkPlugin (0.75.1):
+  - FlipperKit/SKIOSNetworkPlugin (0.54.0):
     - FlipperKit/Core
     - FlipperKit/FlipperKitNetworkPlugin
   - Folly (2020.01.13.00):
@@ -69,9 +70,13 @@ PODS:
     - DoubleConversion
     - glog
   - glog (0.3.5)
-  - libevent (2.1.12)
+  - google-cast-sdk (4.3.0):
+    - google-cast-sdk/Core (= 4.3.0)
+  - google-cast-sdk/Core (4.3.0)
   - OneSignal (2.15.2)
-  - OpenSSL-Universal (1.1.180)
+  - OpenSSL-Universal (1.0.2.20):
+    - OpenSSL-Universal/Static (= 1.0.2.20)
+  - OpenSSL-Universal/Static (1.0.2.20)
   - Permission-Notifications (2.2.2):
     - RNPermissions
   - Permission-PhotoLibrary (2.2.2):
@@ -242,7 +247,7 @@ PODS:
     - React-cxxreact (= 0.63.4)
     - React-jsi (= 0.63.4)
   - React-jsinspector (0.63.4)
-  - react-native-apollos-player (2.20.0):
+  - react-native-apollos-player (2.6.0):
     - React
   - react-native-config (0.11.7):
     - React
@@ -250,6 +255,15 @@ PODS:
     - React
   - react-native-geolocation-service (5.1.1):
     - React
+  - react-native-google-cast (3.3.0):
+    - React
+    - react-native-google-cast/Default (= 3.3.0)
+  - react-native-google-cast/Default (3.3.0):
+    - google-cast-sdk (<= 4.3.0)
+    - React
+    - react-native-google-cast/RNGoogleCast
+  - react-native-google-cast/RNGoogleCast (3.3.0):
+    - React
   - react-native-image-picker (3.1.4):
     - React-Core
   - react-native-maps (0.27.1):
@@ -272,8 +286,8 @@ PODS:
     - react-native-video/Video (= 5.0.2)
   - react-native-video/Video (5.0.2):
     - React
-  - react-native-webview (11.4.1):
-    - React-Core
+  - react-native-webview (7.6.0):
+    - React
   - React-RCTActionSheet (0.63.4):
     - React-Core/RCTActionSheetHeaders (= 0.63.4)
   - React-RCTAnimation (0.63.4):
@@ -386,8 +400,8 @@ PODS:
     - React-RCTVibration
     - ReactCommon/turbomodule/core
     - Yoga
-  - RNScreens (3.2.0):
-    - React-Core
+  - RNScreens (2.9.0):
+    - React
   - RNSVG (9.13.6):
     - React
   - Yoga (1.14.0)
@@ -399,25 +413,25 @@ DEPENDENCIES:
   - DoubleConversion (from `../node_modules/react-native/third-party-podspecs/DoubleConversion.podspec`)
   - FBLazyVector (from `../node_modules/react-native/Libraries/FBLazyVector`)
   - FBReactNativeSpec (from `../node_modules/react-native/Libraries/FBReactNativeSpec`)
-  - Flipper (= 0.75.1)
+  - Flipper (~> 0.54.0)
   - Flipper-DoubleConversion (= 1.1.7)
-  - Flipper-Folly (= 2.5.3)
+  - Flipper-Folly (~> 2.2)
   - Flipper-Glog (= 0.3.6)
   - Flipper-PeerTalk (~> 0.0.4)
-  - Flipper-RSocket (= 1.3.1)
-  - FlipperKit (= 0.75.1)
-  - FlipperKit/Core (= 0.75.1)
-  - FlipperKit/CppBridge (= 0.75.1)
-  - FlipperKit/FBCxxFollyDynamicConvert (= 0.75.1)
-  - FlipperKit/FBDefines (= 0.75.1)
-  - FlipperKit/FKPortForwarding (= 0.75.1)
-  - FlipperKit/FlipperKitHighlightOverlay (= 0.75.1)
-  - FlipperKit/FlipperKitLayoutPlugin (= 0.75.1)
-  - FlipperKit/FlipperKitLayoutTextSearchable (= 0.75.1)
-  - FlipperKit/FlipperKitNetworkPlugin (= 0.75.1)
-  - FlipperKit/FlipperKitReactPlugin (= 0.75.1)
-  - FlipperKit/FlipperKitUserDefaultsPlugin (= 0.75.1)
-  - FlipperKit/SKIOSNetworkPlugin (= 0.75.1)
+  - Flipper-RSocket (~> 1.1)
+  - FlipperKit (~> 0.54.0)
+  - FlipperKit/Core (~> 0.54.0)
+  - FlipperKit/CppBridge (~> 0.54.0)
+  - FlipperKit/FBCxxFollyDynamicConvert (~> 0.54.0)
+  - FlipperKit/FBDefines (~> 0.54.0)
+  - FlipperKit/FKPortForwarding (~> 0.54.0)
+  - FlipperKit/FlipperKitHighlightOverlay (~> 0.54.0)
+  - FlipperKit/FlipperKitLayoutPlugin (~> 0.54.0)
+  - FlipperKit/FlipperKitLayoutTextSearchable (~> 0.54.0)
+  - FlipperKit/FlipperKitNetworkPlugin (~> 0.54.0)
+  - FlipperKit/FlipperKitReactPlugin (~> 0.54.0)
+  - FlipperKit/FlipperKitUserDefaultsPlugin (~> 0.54.0)
+  - FlipperKit/SKIOSNetworkPlugin (~> 0.54.0)
   - Folly (from `../node_modules/react-native/third-party-podspecs/Folly.podspec`)
   - glog (from `../node_modules/react-native/third-party-podspecs/glog.podspec`)
   - Permission-Notifications (from `../node_modules/react-native-permissions/ios/Notifications.podspec`)
@@ -438,6 +452,7 @@ DEPENDENCIES:
   - react-native-config (from `../node_modules/react-native-config`)
   - "react-native-geolocation (from `../node_modules/@react-native-community/geolocation`)"
   - react-native-geolocation-service (from `../node_modules/react-native-geolocation-service`)
+  - react-native-google-cast (from `../node_modules/react-native-google-cast/ios`)
   - react-native-image-picker (from `../node_modules/react-native-image-picker`)
   - react-native-maps (from `../node_modules/react-native-maps`)
   - react-native-music-control (from `../node_modules/react-native-music-control`)
@@ -479,6 +494,7 @@ SPEC REPOS:
     - AstronomerAnalytics
     - boost-for-react-native
     - CocoaAsyncSocket
+    - CocoaLibEvent
     - Flipper
     - Flipper-DoubleConversion
     - Flipper-Folly
@@ -486,7 +502,7 @@ SPEC REPOS:
     - Flipper-PeerTalk
     - Flipper-RSocket
     - FlipperKit
-    - libevent
+    - google-cast-sdk
     - OneSignal
     - OpenSSL-Universal
     - YogaKit
@@ -536,6 +552,8 @@ EXTERNAL SOURCES:
     :path: "../node_modules/@react-native-community/geolocation"
   react-native-geolocation-service:
     :path: "../node_modules/react-native-geolocation-service"
+  react-native-google-cast:
+    :path: "../node_modules/react-native-google-cast/ios"
   react-native-image-picker:
     :path: "../node_modules/react-native-image-picker"
   react-native-maps:
@@ -612,21 +630,22 @@ SPEC CHECKSUMS:
   boost-for-react-native: 39c7adb57c4e60d6c5479dd8623128eb5b3f0f2c
   BVLinearGradient: e3aad03778a456d77928f594a649e96995f1c872
   CocoaAsyncSocket: 065fd1e645c7abab64f7a6a2007a48038fdc6a99
+  CocoaLibEvent: 2fab71b8bd46dd33ddb959f7928ec5909f838e3f
   DoubleConversion: cde416483dac037923206447da6e1454df403714
   FBLazyVector: 3bb422f41b18121b71783a905c10e58606f7dc3e
   FBReactNativeSpec: f2c97f2529dd79c083355182cc158c9f98f4bd6e
-  Flipper: d3da1aa199aad94455ae725e9f3aa43f3ec17021
+  Flipper: be611d4b742d8c87fbae2ca5f44603a02539e365
   Flipper-DoubleConversion: 38631e41ef4f9b12861c67d17cb5518d06badc41
-  Flipper-Folly: 755929a4f851b2fb2c347d533a23f191b008554c
+  Flipper-Folly: e4493b013c02d9347d5e0cb4d128680239f6c78a
   Flipper-Glog: 1dfd6abf1e922806c52ceb8701a3599a79a200a6
   Flipper-PeerTalk: 116d8f857dc6ef55c7a5a75ea3ceaafe878aadc9
-  Flipper-RSocket: 127954abe8b162fcaf68d2134d34dc2bd7076154
-  FlipperKit: 8a20b5c5fcf9436cac58551dc049867247f64b00
+  Flipper-RSocket: 64e7431a55835eb953b0bf984ef3b90ae9fdddd7
+  FlipperKit: ab353d41aea8aae2ea6daaf813e67496642f3d7d
   Folly: b73c3869541e86821df3c387eb0af5f65addfab4
   glog: 40a13f7840415b9a77023fbcae0f1e6f43192af3
-  libevent: 4049cae6c81cdb3654a443be001fb9bdceff7913
+  google-cast-sdk: 57cd67b4a0966802b2738fcbbc103125c98cc8a1
   OneSignal: 9531e385388565f4d31797ddadbe0fcc786430ec
-  OpenSSL-Universal: 1aa4f6a6ee7256b83db99ec1ccdaa80d10f9af9b
+  OpenSSL-Universal: ff34003318d5e1163e9529b08470708e389ffcdd
   Permission-Notifications: 9c6b5cc4f0e6599e9fc3395b77cebddc48f1be41
   Permission-PhotoLibrary: 8227a6ed9f6a971537afe63742d54f5f23a38fe2
   RCTRequired: 082f10cd3f905d6c124597fd1c14f6f2655ff65e
@@ -639,10 +658,11 @@ SPEC CHECKSUMS:
   React-jsi: a0418934cf48f25b485631deb27c64dc40fb4c31
   React-jsiexecutor: 93bd528844ad21dc07aab1c67cb10abae6df6949
   React-jsinspector: 58aef7155bc9a9683f5b60b35eccea8722a4f53a
-  react-native-apollos-player: 63ffc04b8d50a39ffa7b895f3e15272bd1db105d
+  react-native-apollos-player: 4af3a3f9f143f14af41abd55f5e561f7df96c5c2
   react-native-config: 55548054279d92e0e4566ea15a8b9b81028ec342
   react-native-geolocation: c956aeb136625c23e0dce0467664af2c437888c9
   react-native-geolocation-service: f33626f1ae12381ca2ae60f98b2f5edd676bf95a
+  react-native-google-cast: 410619ef162b8b91815ecf7271502224998dee8e
   react-native-image-picker: 28d8d1f5a643119876b8b2c7d4d1dcfb2b232dd4
   react-native-maps: f4b89da81626ad7f151a8bfcb79733295d31ce5c
   react-native-music-control: dcfe5b61e56a15898c4618579cb8ce612c9d21a8
@@ -652,7 +672,7 @@ SPEC CHECKSUMS:
   react-native-safe-area-context: ef6f16c66b0797ecae1bf86c103dfb3dc16fc33d
   react-native-splash-screen: 200d11d188e2e78cea3ad319964f6142b6384865
   react-native-video: d01ed7ff1e38fa7dcc6c15c94cf505e661b7bfd0
-  react-native-webview: 4024b67e9c91810450a5960dff60ae708fd5acd1
+  react-native-webview: db4682f1698ab4b17a5e88f951031d203ff8aea8
   React-RCTActionSheet: 89a0ca9f4a06c1f93c26067af074ccdce0f40336
   React-RCTAnimation: 1bde3ecc0c104c55df246eda516e0deb03c4e49b
   React-RCTBlob: a97d378b527740cc667e03ebfa183a75231ab0f0
@@ -675,11 +695,11 @@ SPEC CHECKSUMS:
   RNInAppBrowser: 48b95ba7a4eaff5cc223bca338d3e319561dbd1b
   RNPermissions: 5df468064df661a4c8c017e2791ce90d7695eea5
   RNReanimated: 5231286440b796e09df3bfa5c1b12b02bfe07664
-  RNScreens: c277bfc4b5bb7c2fe977d19635df6f974f95dfd6
+  RNScreens: c526239bbe0e957b988dacc8d75ac94ec9cb19da
   RNSVG: 8ba35cbeb385a52fd960fd28db9d7d18b4c2974f
   Yoga: 4bd86afe9883422a7c4028c00e34790f560923d6
   YogaKit: f782866e155069a2cca2517aafea43200b01fd5a
 
-PODFILE CHECKSUM: 6de27767413bc4f48feeecbc37bbce2b733bfe20
+PODFILE CHECKSUM: ff0b6ccfe0571b896a44f129ac11790a8b809329
 
-COCOAPODS: 1.10.1
+COCOAPODS: 1.8.4
diff --git a/apolloschurchapp/ios/apollos.p8.enc b/apolloschurchapp/ios/apollos.p8.enc
index 5947bea7fec93d5d37b440d73672edab9c52142f..1770af9b501caeb22e611bb865209586d6b9bf3e 100644
GIT binary patch
literal 288
zcmV+*0pI>pVQh3|WM5yjEET~l;Wvl94TCB^>_}xMtxWvMQO(&vMAXk~Y-23p4x~u@
zHgoO~vSpla6%)B=eb<|YDq;a;m2&C@gnt5QU~B@@B~c_{s*ZB-<wB&Z(bxgZ^$9qB
z=Nbz1E?K*z=YPJZp~J{R%suq|SU8+^_{RzW;P*awqyOFHjvd$=i3J=Io_i6VodpOS
z8Q#Var29Nb1A$l^o!4_}e=jJ39Pss9Mmor2g>+EP8N)@tYk_)w{xqR1d}Fj?OBGBI
z=Xp{7ygsVoS6hM=8iCrZ|6@FdWb**vwlTPuS!U3^8cfzM$RQM7NDHW|)1Qt>MB9`y
mk)bMH8k5~*|ITGDKdtFfZPnifx_A9HJyWQ=O6gmR$V=2VVT&99

literal 288
zcmV+*0pI>pVQh3|WM5wyX%jgx@mTLxE<@PQRiL_b=E~B@pxV>a5AXLtucBa_d<??^
z!!?vOBqK9lmA}$c6bJxfO|&)}SQ53b!NI$dhNd0V&wfV*gV(O0xlG&-wSqynWywL>
z43&`zI5BhZ1M@76V)E<(TesS)g<c413<s|)kT5T?SnO&2+4O(nR&1X|OcH?nbVDk&
z)nUt3SKY`lqV7vnNLpV(+c^CICP9J4q1zRzk?H@s>*T0*ZxA>Y?s@x5?r6n%?+B@g
zFeOe)%pjV@Rbh8+X^CWC@#RK)fr-3SP?0K8z@<N%6;CxTe>_r$YT*K(Plo*V{OM4P
mbUX=AX)QI_vi{0DiUrTzVViYl;j$%ACsIyVnzZOrX+vd3L5$h}

diff --git a/apolloschurchapp/ios/apolloschurchapp.xcodeproj/project.pbxproj b/apolloschurchapp/ios/apolloschurchapp.xcodeproj/project.pbxproj
index c429baab..00180682 100644
--- a/apolloschurchapp/ios/apolloschurchapp.xcodeproj/project.pbxproj
+++ b/apolloschurchapp/ios/apolloschurchapp.xcodeproj/project.pbxproj
@@ -290,8 +290,8 @@
 				00E356EA1AD99517003FC87E /* Sources */,
 				00E356EB1AD99517003FC87E /* Frameworks */,
 				00E356EC1AD99517003FC87E /* Resources */,
+				C7A5ADB714711CE3B4CC0EAA /* [CP] Embed Pods Frameworks */,
 				892ED59C47CEB9B13B75EC71 /* [CP] Copy Pods Resources */,
-				3E2635F41ADA8FBB628BB92D /* [CP] Embed Pods Frameworks */,
 			);
 			buildRules = (
 			);
@@ -308,13 +308,12 @@
 			buildConfigurationList = 13B07F931A680F5B00A75B9A /* Build configuration list for PBXNativeTarget "apolloschurchapp" */;
 			buildPhases = (
 				DEEF24CE4F76789E5E8C369D /* [CP] Check Pods Manifest.lock */,
-				4C006E292656868900EE9158 /* Start Packager */,
 				13B07F871A680F5B00A75B9A /* Sources */,
 				13B07F8C1A680F5B00A75B9A /* Frameworks */,
 				13B07F8E1A680F5B00A75B9A /* Resources */,
 				00DD1BFF1BD5951E006B06BC /* Bundle React Native code and images */,
 				43D579D8398224D7B09F58F6 /* [CP] Copy Pods Resources */,
-				84E19E444A56C704431362B6 /* [CP] Embed Pods Frameworks */,
+				3C01FFABD3A7274D34564996 /* [CP] Embed Pods Frameworks */,
 			);
 			buildRules = (
 			);
@@ -515,22 +514,22 @@
 			shellPath = /bin/sh;
 			shellScript = "export NODE_BINARY=node\n../node_modules/react-native/scripts/react-native-xcode.sh";
 		};
-		3E2635F41ADA8FBB628BB92D /* [CP] Embed Pods Frameworks */ = {
+		3C01FFABD3A7274D34564996 /* [CP] Embed Pods Frameworks */ = {
 			isa = PBXShellScriptBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
 			);
 			inputPaths = (
-				"${PODS_ROOT}/Target Support Files/Pods-apolloschurchapp-apolloschurchappTests/Pods-apolloschurchapp-apolloschurchappTests-frameworks.sh",
-				"${PODS_XCFRAMEWORKS_BUILD_DIR}/OpenSSL/OpenSSL.framework/OpenSSL",
+				"${PODS_ROOT}/Target Support Files/Pods-apolloschurchapp/Pods-apolloschurchapp-frameworks.sh",
+				"${PODS_ROOT}/google-cast-sdk/GoogleCastSDK-ios-4.3.0/GoogleCast.framework",
 			);
 			name = "[CP] Embed Pods Frameworks";
 			outputPaths = (
-				"${TARGET_BUILD_DIR}/${FRAMEWORKS_FOLDER_PATH}/OpenSSL.framework",
+				"${TARGET_BUILD_DIR}/${FRAMEWORKS_FOLDER_PATH}/GoogleCast.framework",
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 			shellPath = /bin/sh;
-			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-apolloschurchapp-apolloschurchappTests/Pods-apolloschurchapp-apolloschurchappTests-frameworks.sh\"\n";
+			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-apolloschurchapp/Pods-apolloschurchapp-frameworks.sh\"\n";
 			showEnvVarsInLog = 0;
 		};
 		43D579D8398224D7B09F58F6 /* [CP] Copy Pods Resources */ = {
@@ -551,43 +550,6 @@
 			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-apolloschurchapp/Pods-apolloschurchapp-resources.sh\"\n";
 			showEnvVarsInLog = 0;
 		};
-		4C006E292656868900EE9158 /* Start Packager */ = {
-			isa = PBXShellScriptBuildPhase;
-			buildActionMask = 2147483647;
-			files = (
-			);
-			inputFileListPaths = (
-			);
-			inputPaths = (
-			);
-			name = "Start Packager";
-			outputFileListPaths = (
-			);
-			outputPaths = (
-			);
-			runOnlyForDeploymentPostprocessing = 0;
-			shellPath = /bin/sh;
-			shellScript = "export RCT_METRO_PORT=\"${RCT_METRO_PORT:=8081}\"\necho \"export RCT_METRO_PORT=${RCT_METRO_PORT}\" > \"${SRCROOT}/../node_modules/react-native/scripts/.packager.env\"\nif [ -z \"${RCT_NO_LAUNCH_PACKAGER+xxx}\" ] ; then\n  if nc -w 5 -z localhost ${RCT_METRO_PORT} ; then\n    if ! curl -s \"http://localhost:${RCT_METRO_PORT}/status\" | grep -q \"packager-status:running\" ; then\n      echo \"Port ${RCT_METRO_PORT} already in use, packager is either not running or not running correctly\"\n      exit 2\n    fi\n  else\n    open \"$SRCROOT/../node_modules/react-native/scripts/launchPackager.command\" || echo \"Can't start packager automatically\"\n  fi\nfi\n";
-			showEnvVarsInLog = 0;
-		};
-		84E19E444A56C704431362B6 /* [CP] Embed Pods Frameworks */ = {
-			isa = PBXShellScriptBuildPhase;
-			buildActionMask = 2147483647;
-			files = (
-			);
-			inputPaths = (
-				"${PODS_ROOT}/Target Support Files/Pods-apolloschurchapp/Pods-apolloschurchapp-frameworks.sh",
-				"${PODS_XCFRAMEWORKS_BUILD_DIR}/OpenSSL/OpenSSL.framework/OpenSSL",
-			);
-			name = "[CP] Embed Pods Frameworks";
-			outputPaths = (
-				"${TARGET_BUILD_DIR}/${FRAMEWORKS_FOLDER_PATH}/OpenSSL.framework",
-			);
-			runOnlyForDeploymentPostprocessing = 0;
-			shellPath = /bin/sh;
-			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-apolloschurchapp/Pods-apolloschurchapp-frameworks.sh\"\n";
-			showEnvVarsInLog = 0;
-		};
 		892ED59C47CEB9B13B75EC71 /* [CP] Copy Pods Resources */ = {
 			isa = PBXShellScriptBuildPhase;
 			buildActionMask = 2147483647;
@@ -650,6 +612,24 @@
 			shellScript = "diff \"${PODS_PODFILE_DIR_PATH}/Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null\nif [ $? != 0 ] ; then\n    # print error to STDERR\n    echo \"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\" >&2\n    exit 1\nfi\n# This output is used by Xcode 'outputs' to avoid re-running this script phase.\necho \"SUCCESS\" > \"${SCRIPT_OUTPUT_FILE_0}\"\n";
 			showEnvVarsInLog = 0;
 		};
+		C7A5ADB714711CE3B4CC0EAA /* [CP] Embed Pods Frameworks */ = {
+			isa = PBXShellScriptBuildPhase;
+			buildActionMask = 2147483647;
+			files = (
+			);
+			inputPaths = (
+				"${PODS_ROOT}/Target Support Files/Pods-apolloschurchapp-apolloschurchappTests/Pods-apolloschurchapp-apolloschurchappTests-frameworks.sh",
+				"${PODS_ROOT}/google-cast-sdk/GoogleCastSDK-ios-4.3.0/GoogleCast.framework",
+			);
+			name = "[CP] Embed Pods Frameworks";
+			outputPaths = (
+				"${TARGET_BUILD_DIR}/${FRAMEWORKS_FOLDER_PATH}/GoogleCast.framework",
+			);
+			runOnlyForDeploymentPostprocessing = 0;
+			shellPath = /bin/sh;
+			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-apolloschurchapp-apolloschurchappTests/Pods-apolloschurchapp-apolloschurchappTests-frameworks.sh\"\n";
+			showEnvVarsInLog = 0;
+		};
 		DEEF24CE4F76789E5E8C369D /* [CP] Check Pods Manifest.lock */ = {
 			isa = PBXShellScriptBuildPhase;
 			buildActionMask = 2147483647;
@@ -787,7 +767,7 @@
 				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
 				CLANG_ENABLE_MODULES = YES;
 				CODE_SIGN_ENTITLEMENTS = apolloschurchapp/apolloschurchapp.entitlements;
-				CODE_SIGN_IDENTITY = "iPhone Developer";
+				CODE_SIGN_IDENTITY = "Apple Development: Apollos Apps (58685TNK9H)";
 				CODE_SIGN_STYLE = Manual;
 				CURRENT_PROJECT_VERSION = 507;
 				DEAD_CODE_STRIPPING = YES;
diff --git a/apolloschurchapp/ios/apolloschurchapp.xcworkspace/xcshareddata/xcschemes/apolloschurchapp-tvOS.xcscheme b/apolloschurchapp/ios/apolloschurchapp.xcworkspace/xcshareddata/xcschemes/apolloschurchapp-tvOS.xcscheme
deleted file mode 100644
index a24d4f12..00000000
--- a/apolloschurchapp/ios/apolloschurchapp.xcworkspace/xcshareddata/xcschemes/apolloschurchapp-tvOS.xcscheme
+++ /dev/null
@@ -1,88 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<Scheme
-   LastUpgradeVersion = "1250"
-   version = "1.3">
-   <BuildAction
-      parallelizeBuildables = "YES"
-      buildImplicitDependencies = "YES">
-      <BuildActionEntries>
-         <BuildActionEntry
-            buildForTesting = "YES"
-            buildForRunning = "YES"
-            buildForProfiling = "YES"
-            buildForArchiving = "YES"
-            buildForAnalyzing = "YES">
-            <BuildableReference
-               BuildableIdentifier = "primary"
-               BlueprintIdentifier = "2D02E47A1E0B4A5D006451C7"
-               BuildableName = "apolloschurchapp-tvOS.app"
-               BlueprintName = "apolloschurchapp-tvOS"
-               ReferencedContainer = "container:apolloschurchapp.xcodeproj">
-            </BuildableReference>
-         </BuildActionEntry>
-      </BuildActionEntries>
-   </BuildAction>
-   <TestAction
-      buildConfiguration = "Debug"
-      selectedDebuggerIdentifier = "Xcode.DebuggerFoundation.Debugger.LLDB"
-      selectedLauncherIdentifier = "Xcode.DebuggerFoundation.Launcher.LLDB"
-      shouldUseLaunchSchemeArgsEnv = "YES">
-      <Testables>
-         <TestableReference
-            skipped = "NO">
-            <BuildableReference
-               BuildableIdentifier = "primary"
-               BlueprintIdentifier = "2D02E48F1E0B4A5D006451C7"
-               BuildableName = "apolloschurchapp-tvOSTests.xctest"
-               BlueprintName = "apolloschurchapp-tvOSTests"
-               ReferencedContainer = "container:apolloschurchapp.xcodeproj">
-            </BuildableReference>
-         </TestableReference>
-      </Testables>
-   </TestAction>
-   <LaunchAction
-      buildConfiguration = "Debug"
-      selectedDebuggerIdentifier = "Xcode.DebuggerFoundation.Debugger.LLDB"
-      selectedLauncherIdentifier = "Xcode.DebuggerFoundation.Launcher.LLDB"
-      launchStyle = "0"
-      useCustomWorkingDirectory = "NO"
-      ignoresPersistentStateOnLaunch = "NO"
-      debugDocumentVersioning = "YES"
-      debugServiceExtension = "internal"
-      allowLocationSimulation = "YES">
-      <BuildableProductRunnable
-         runnableDebuggingMode = "0">
-         <BuildableReference
-            BuildableIdentifier = "primary"
-            BlueprintIdentifier = "2D02E47A1E0B4A5D006451C7"
-            BuildableName = "apolloschurchapp-tvOS.app"
-            BlueprintName = "apolloschurchapp-tvOS"
-            ReferencedContainer = "container:apolloschurchapp.xcodeproj">
-         </BuildableReference>
-      </BuildableProductRunnable>
-   </LaunchAction>
-   <ProfileAction
-      buildConfiguration = "Release"
-      shouldUseLaunchSchemeArgsEnv = "YES"
-      savedToolIdentifier = ""
-      useCustomWorkingDirectory = "NO"
-      debugDocumentVersioning = "YES">
-      <BuildableProductRunnable
-         runnableDebuggingMode = "0">
-         <BuildableReference
-            BuildableIdentifier = "primary"
-            BlueprintIdentifier = "2D02E47A1E0B4A5D006451C7"
-            BuildableName = "apolloschurchapp-tvOS.app"
-            BlueprintName = "apolloschurchapp-tvOS"
-            ReferencedContainer = "container:apolloschurchapp.xcodeproj">
-         </BuildableReference>
-      </BuildableProductRunnable>
-   </ProfileAction>
-   <AnalyzeAction
-      buildConfiguration = "Debug">
-   </AnalyzeAction>
-   <ArchiveAction
-      buildConfiguration = "Release"
-      revealArchiveInOrganizer = "YES">
-   </ArchiveAction>
-</Scheme>
diff --git a/apolloschurchapp/ios/apolloschurchapp.xcworkspace/xcshareddata/xcschemes/apolloschurchappprod.xcscheme b/apolloschurchapp/ios/apolloschurchapp.xcworkspace/xcshareddata/xcschemes/apolloschurchappprod.xcscheme
new file mode 100644
index 00000000..572c21d6
--- /dev/null
+++ b/apolloschurchapp/ios/apolloschurchapp.xcworkspace/xcshareddata/xcschemes/apolloschurchappprod.xcscheme
@@ -0,0 +1,134 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<Scheme
+   LastUpgradeVersion = "1170"
+   version = "1.3">
+   <BuildAction
+      parallelizeBuildables = "NO"
+      buildImplicitDependencies = "YES">
+      <PreActions>
+         <ExecutionAction
+            ActionType = "Xcode.IDEStandardExecutionActionsCore.ExecutionActionType.ShellScriptAction">
+            <ActionContent
+               title = "Run Script"
+               scriptText = "echo &quot;.env.production&quot; &gt; /tmp/envfile&#10;">
+            </ActionContent>
+         </ExecutionAction>
+      </PreActions>
+      <BuildActionEntries>
+         <BuildActionEntry
+            buildForTesting = "YES"
+            buildForRunning = "YES"
+            buildForProfiling = "YES"
+            buildForArchiving = "YES"
+            buildForAnalyzing = "YES">
+            <BuildableReference
+               BuildableIdentifier = "primary"
+               BlueprintIdentifier = "83CBBA2D1A601D0E00E9B192"
+               BuildableName = "libReact.a"
+               BlueprintName = "React"
+               ReferencedContainer = "container:../node_modules/react-native/React/React.xcodeproj">
+            </BuildableReference>
+         </BuildActionEntry>
+         <BuildActionEntry
+            buildForTesting = "YES"
+            buildForRunning = "YES"
+            buildForProfiling = "YES"
+            buildForArchiving = "YES"
+            buildForAnalyzing = "YES">
+            <BuildableReference
+               BuildableIdentifier = "primary"
+               BlueprintIdentifier = "13B07F861A680F5B00A75B9A"
+               BuildableName = "apolloschurchapp.app"
+               BlueprintName = "apolloschurchapp"
+               ReferencedContainer = "container:apolloschurchapp.xcodeproj">
+            </BuildableReference>
+         </BuildActionEntry>
+         <BuildActionEntry
+            buildForTesting = "YES"
+            buildForRunning = "YES"
+            buildForProfiling = "NO"
+            buildForArchiving = "NO"
+            buildForAnalyzing = "YES">
+            <BuildableReference
+               BuildableIdentifier = "primary"
+               BlueprintIdentifier = "00E356ED1AD99517003FC87E"
+               BuildableName = "apolloschurchappTests.xctest"
+               BlueprintName = "apolloschurchappTests"
+               ReferencedContainer = "container:apolloschurchapp.xcodeproj">
+            </BuildableReference>
+         </BuildActionEntry>
+      </BuildActionEntries>
+   </BuildAction>
+   <TestAction
+      buildConfiguration = "Debug"
+      selectedDebuggerIdentifier = "Xcode.DebuggerFoundation.Debugger.LLDB"
+      selectedLauncherIdentifier = "Xcode.DebuggerFoundation.Launcher.LLDB"
+      shouldUseLaunchSchemeArgsEnv = "YES">
+      <MacroExpansion>
+         <BuildableReference
+            BuildableIdentifier = "primary"
+            BlueprintIdentifier = "13B07F861A680F5B00A75B9A"
+            BuildableName = "apolloschurchapp.app"
+            BlueprintName = "apolloschurchapp"
+            ReferencedContainer = "container:apolloschurchapp.xcodeproj">
+         </BuildableReference>
+      </MacroExpansion>
+      <Testables>
+         <TestableReference
+            skipped = "NO">
+            <BuildableReference
+               BuildableIdentifier = "primary"
+               BlueprintIdentifier = "00E356ED1AD99517003FC87E"
+               BuildableName = "apolloschurchappTests.xctest"
+               BlueprintName = "apolloschurchappTests"
+               ReferencedContainer = "container:apolloschurchapp.xcodeproj">
+            </BuildableReference>
+         </TestableReference>
+      </Testables>
+   </TestAction>
+   <LaunchAction
+      buildConfiguration = "Release"
+      selectedDebuggerIdentifier = "Xcode.DebuggerFoundation.Debugger.LLDB"
+      selectedLauncherIdentifier = "Xcode.DebuggerFoundation.Launcher.LLDB"
+      launchStyle = "0"
+      useCustomWorkingDirectory = "NO"
+      ignoresPersistentStateOnLaunch = "NO"
+      debugDocumentVersioning = "YES"
+      debugServiceExtension = "internal"
+      allowLocationSimulation = "YES">
+      <BuildableProductRunnable
+         runnableDebuggingMode = "0">
+         <BuildableReference
+            BuildableIdentifier = "primary"
+            BlueprintIdentifier = "13B07F861A680F5B00A75B9A"
+            BuildableName = "apolloschurchapp.app"
+            BlueprintName = "apolloschurchapp"
+            ReferencedContainer = "container:apolloschurchapp.xcodeproj">
+         </BuildableReference>
+      </BuildableProductRunnable>
+   </LaunchAction>
+   <ProfileAction
+      buildConfiguration = "Release"
+      shouldUseLaunchSchemeArgsEnv = "YES"
+      savedToolIdentifier = ""
+      useCustomWorkingDirectory = "NO"
+      debugDocumentVersioning = "YES">
+      <BuildableProductRunnable
+         runnableDebuggingMode = "0">
+         <BuildableReference
+            BuildableIdentifier = "primary"
+            BlueprintIdentifier = "13B07F861A680F5B00A75B9A"
+            BuildableName = "apolloschurchapp.app"
+            BlueprintName = "apolloschurchapp"
+            ReferencedContainer = "container:apolloschurchapp.xcodeproj">
+         </BuildableReference>
+      </BuildableProductRunnable>
+   </ProfileAction>
+   <AnalyzeAction
+      buildConfiguration = "Debug">
+   </AnalyzeAction>
+   <ArchiveAction
+      buildConfiguration = "Release"
+      revealArchiveInOrganizer = "YES">
+   </ArchiveAction>
+</Scheme>
diff --git a/apolloschurchapp/ios/apolloschurchapp/AppDelegate.m b/apolloschurchapp/ios/apolloschurchapp/AppDelegate.m
index 9267aa24..f246ea29 100644
--- a/apolloschurchapp/ios/apolloschurchapp/AppDelegate.m
+++ b/apolloschurchapp/ios/apolloschurchapp/AppDelegate.m
@@ -12,6 +12,7 @@
 #import <React/RCTBundleURLProvider.h>
 #import <React/RCTRootView.h>
 #import <React/RCTLinkingManager.h>
+#import <GoogleCast/GoogleCast.h>
 #import "RNSplashScreen.h"
 
 #ifdef FB_SONARKIT_ENABLED
@@ -63,6 +64,12 @@ static void InitializeFlipper(UIApplication *application) {
                                                    moduleName:@"apolloschurchapp"
                                             initialProperties:nil];
 
+  // Initialize Google Cast
+  GCKDiscoveryCriteria *criteria = [[GCKDiscoveryCriteria alloc] initWithApplicationID:kGCKDefaultMediaReceiverApplicationID];
+  GCKCastOptions* options = [[GCKCastOptions alloc] initWithDiscoveryCriteria:criteria];
+  options.physicalVolumeButtonsWillControlDeviceVolume = YES;
+  [GCKCastContext setSharedInstanceWithOptions:options];
+
   rootView.backgroundColor = [[UIColor alloc] initWithRed:1.0f green:1.0f blue:1.0f alpha:1];
 
   self.window = [[UIWindow alloc] initWithFrame:[UIScreen mainScreen].bounds];
diff --git a/apolloschurchapp/ios/apolloschurchapp/Info.plist b/apolloschurchapp/ios/apolloschurchapp/Info.plist
index 41c62da6..c0b7f9ee 100644
--- a/apolloschurchapp/ios/apolloschurchapp/Info.plist
+++ b/apolloschurchapp/ios/apolloschurchapp/Info.plist
@@ -29,10 +29,6 @@
 			</array>
 		</dict>
 	</array>
-	<key>LSApplicationQueriesSchemes</key>
-	<array>
-		<string>mailto</string>
-	</array>
 	<key>CFBundleVersion</key>
 	<string>0</string>
 	<key>ITSAppUsesNonExemptEncryption</key>
@@ -57,12 +53,18 @@
 			</dict>
 		</dict>
 	</dict>
+	<key>NSBluetoothAlwaysUsageDescription</key>
+	<string>$(PRODUCT_NAME) would like access to bluetooth (for playing audio)</string>
+	<key>NSBluetoothPeripheralUsageDescription</key>
+	<string>$(PRODUCT_NAME) would like access to bluetooth (for playing audio)</string>
 	<key>NSLocationAlwaysUsageDescription</key>
 	<string>$(PRODUCT_NAME) would like to use your location for determining your closest campus</string>
 	<key>NSLocationAlwaysAndWhenInUseUsageDescription</key>
 	<string>$(PRODUCT_NAME) would like to use your location for determining your closest campus</string>
 	<key>NSLocationWhenInUseUsageDescription</key>
 	<string>$(PRODUCT_NAME) would like to use your location for determining your closest campus</string>
+	<key>NSMicrophoneUsageDescription</key>
+	<string>$(PRODUCT_NAME) would like to access your microphone (for videos)</string>
 	<key>NSPhotoLibraryUsageDescription</key>
 	<string>$(PRODUCT_NAME) would like to access your photos</string>
 	<key>UIAppFonts</key>
diff --git a/apolloschurchapp/ios/apolloschurchapp/apolloschurchapp.entitlements b/apolloschurchapp/ios/apolloschurchapp/apolloschurchapp.entitlements
index 676be42e..6c79704c 100644
--- a/apolloschurchapp/ios/apolloschurchapp/apolloschurchapp.entitlements
+++ b/apolloschurchapp/ios/apolloschurchapp/apolloschurchapp.entitlements
@@ -4,6 +4,8 @@
 <dict>
 	<key>aps-environment</key>
 	<string>development</string>
+	<key>com.apple.developer.networking.wifi-info</key>
+	<true/>
 	<key>com.apple.developer.associated-domains</key>
 	<array>
 		<string>applink:$(APP_DATA_URL)</string>
diff --git a/apolloschurchapp/package.json b/apolloschurchapp/package.json
index 7d82bd8d..5c41d59e 100644
--- a/apolloschurchapp/package.json
+++ b/apolloschurchapp/package.json
@@ -13,12 +13,15 @@
     "ios": "react-native run-ios",
     "android": "SIM=\"$($HOME/Library/Android/sdk/emulator/emulator -list-avds | sed -n 1p)\" && $HOME/Library/Android/sdk/emulator/emulator -avd \"${SIM}\" & react-native run-android",
     "codecov": "cat ./coverage/lcov.info | codecov",
+    "link-packages": "node ./scripts/link-packages && yarn yalc update",
+    "unlink-packages": "node ./scripts/link-packages remove && rm -rf ./node_modules",
     "generate-stories": "rnstl --searchDir ./src --pattern **/*.stories.js",
     "lint": "eslint ./src --ext .js",
+    "get-schema": "eval $(grep ^APP_DATA_URL .env) && sleep 10 && get-graphql-schema $APP_DATA_URL > schema.graphql",
     "postinstall": "jetify && yarn pods",
     "pods": "(bundle install && cd ios && bundle exec pod install --repo-update)",
     "start": "yarn start:dev",
-    "start:dev": "yarn generate-stories && node ./scripts/get-introspection-data.js && react-native start",
+    "start:dev": "yarn generate-stories & yarn get-schema && node ./scripts/get-introspection-data.js && react-native start",
     "test": "TZ=UTC jest",
     "icons": "react-native set-icon --path",
     "splash": "react-native set-splash --path"
@@ -43,23 +46,23 @@
   "dependencies": {
     "@apollo/client": "3.3.0-rc.2",
     "@apollo/react-hooks": "^3.1.3",
-    "@apollosproject/config": "^2.20.0",
+    "@apollosproject/config": "^2.6.0",
     "@apollosproject/react-native-airplay-btn": "^0.2.0",
-    "@apollosproject/ui-analytics": "^2.20.0",
-    "@apollosproject/ui-auth": "^2.20.0",
-    "@apollosproject/ui-connected": "^2.20.0",
-    "@apollosproject/ui-fragments": "^2.20.0",
-    "@apollosproject/ui-htmlview": "^2.20.0",
-    "@apollosproject/ui-kit": "^2.20.0",
-    "@apollosproject/ui-mapview": "^2.20.0",
-    "@apollosproject/ui-media-player": "^2.20.0",
-    "@apollosproject/ui-notifications": "^2.20.0",
-    "@apollosproject/ui-onboarding": "^2.20.0",
-    "@apollosproject/ui-passes": "^2.20.0",
-    "@apollosproject/ui-prayer": "^2.20.0",
-    "@apollosproject/ui-scripture": "^2.20.0",
-    "@apollosproject/ui-storybook": "^2.20.0",
-    "@apollosproject/ui-test-utils": "^2.20.0",
+    "@apollosproject/ui-analytics": "^2.6.0",
+    "@apollosproject/ui-auth": "^2.6.0",
+    "@apollosproject/ui-connected": "^2.6.0",
+    "@apollosproject/ui-fragments": "^2.6.0",
+    "@apollosproject/ui-htmlview": "^2.6.0",
+    "@apollosproject/ui-kit": "^2.6.0",
+    "@apollosproject/ui-mapview": "^2.6.0",
+    "@apollosproject/ui-media-player": "^2.6.0",
+    "@apollosproject/ui-notifications": "^2.6.0",
+    "@apollosproject/ui-onboarding": "^2.6.0",
+    "@apollosproject/ui-passes": "^2.6.0",
+    "@apollosproject/ui-prayer": "^2.6.0",
+    "@apollosproject/ui-scripture": "^2.6.0",
+    "@apollosproject/ui-storybook": "^2.6.0",
+    "@apollosproject/ui-test-utils": "^2.6.0",
     "@gorhom/bottom-sheet": "3.4.1",
     "@metarouter/analytics-react-native": "^1.1.5",
     "@react-native-community/async-storage": "^1.5.1",
@@ -67,10 +70,11 @@
     "@react-native-community/geolocation": "^2.0.2",
     "@react-native-community/masked-view": "^0.1.10",
     "@react-native-picker/picker": "^1.9.4",
-    "@react-navigation/bottom-tabs": "^5.11.8",
+    "@react-navigation/bottom-tabs": "^5.6.1",
     "@react-navigation/compat": "^5.1.28",
-    "@react-navigation/native": "^5.9.3",
-    "@react-navigation/stack": "^5.14.3",
+    "@react-navigation/drawer": "^5.8.4",
+    "@react-navigation/native": "^5.6.1",
+    "@react-navigation/stack": "^5.6.2",
     "apollo-storybook-react-native": "0.2.12",
     "apollo-upload-client": "14.1.3",
     "apollo3-cache-persist": "^0.8.0",
@@ -93,10 +97,12 @@
     "react-native-device-info": "^4.0.1",
     "react-native-geolocation-service": "^5.1.1",
     "react-native-gesture-handler": "^1.10.3",
+    "react-native-google-cast": "^3.3.0",
     "react-native-image-picker": "^3.1.4",
     "react-native-inappbrowser-reborn": "^3.0.0",
     "react-native-linear-gradient": "^2.5.4",
     "react-native-maps": "^0.27.1",
+    "react-native-modal-datetime-picker": "9.0.0",
     "react-native-music-control": "0.10.8",
     "react-native-onesignal": "3.9.1",
     "react-native-passkit-wallet": "^0.1.4",
@@ -104,19 +110,19 @@
     "react-native-reanimated": "^2.0.0",
     "react-native-safari-view": "2.1.0",
     "react-native-safe-area-context": "^3.0.7",
-    "react-native-screens": "3.2.0",
+    "react-native-screens": "^2.9.0",
     "react-native-splash-screen": "^3.2.0",
     "react-native-svg": "^9.4.0",
     "react-native-video": "^5.0.0",
     "react-native-video-controls": "2.2.3",
-    "react-native-webview": "^11.0.0",
+    "react-native-webview": "^7.0.0",
     "recompose": "^0.30.0",
     "rn-fetch-blob": "^0.10.16",
     "stream": "^0.0.2",
     "yup": "0.26.6"
   },
   "devDependencies": {
-    "@apollosproject/eslint-config": "^2.20.0",
+    "@apollosproject/eslint-config": "^2.6.0",
     "@babel/core": "^7.8.4",
     "@babel/runtime": "^7.8.4",
     "@bam.tech/react-native-make": "^3.0.0",
@@ -140,6 +146,7 @@
     "eslint-plugin-react-hooks": "^4.0.2",
     "eslint-plugin-react-native": "^3.2.1",
     "get-dev-paths": "^0.1.0",
+    "get-graphql-schema": "^2.1.2",
     "graphql-import": "^0.7.1",
     "jest": "^25.1.0",
     "jetifier": "^1.6.4",
@@ -150,7 +157,8 @@
     "react-dom": "16.6.3",
     "react-native-storybook-loader": "1.8.0",
     "react-test-renderer": "16.13.1",
-    "waait": "1.0.2"
+    "waait": "1.0.2",
+    "yalc": "^1.0.0-pre.47"
   },
   "rnpm": {
     "assets": [
diff --git a/apolloschurchapp/scripts/init.sh b/apolloschurchapp/scripts/init.sh
index 5a8c884a..6e73f7c9 100755
--- a/apolloschurchapp/scripts/init.sh
+++ b/apolloschurchapp/scripts/init.sh
@@ -3,34 +3,5 @@ if test -f .env; then
 	echo ".env file already exists!"
 	exit 1
 fi
-
-echo "You will need the following before beginning:
-Google Maps API Key
-
-Are you ready to proceed? [y/n]: "
-read -r ANSWER
-if $ANSWER != "y"; then
-	exit 1
-fi
-
-# config variables
-echo "Google Maps API Key: "
-read -r GOOGLE
-
 echo "APP_DATA_URL=http://localhost:4000
-GOOGLE_MAPS_API_KEY=$GOOGLE" >.env
-
-# remove template encrypted files
-rm .env.shared.enc
-rm android/key.json.enc
-rm android/app/apollos.keystore.enc
-rm ios/apollos.p8.enc
-
-# app name
-echo "App name: "
-read -r APP
-CLEAN_APP=$(echo "$APP" | tr -d '[:space:]')
-npx react-native-rename "$CLEAN_APP"
-
-sed -i "" -E "s/Apollos Church/$APP/g" apolloschurchapp/ios/Info.plist
-sed -i "" -E "s/Apollos Church/$APP/g" apolloschurchapp/android/app/src/main/res/values/strings.xml
+GOOGLE_MAPS_API_KEY=" >.env
diff --git a/apolloschurchapp/scripts/link-packages.js b/apolloschurchapp/scripts/link-packages.js
new file mode 100644
index 00000000..7778c0a4
--- /dev/null
+++ b/apolloschurchapp/scripts/link-packages.js
@@ -0,0 +1,16 @@
+const fs = require('fs');
+const { execSync } = require('child_process');
+
+const direction = process.argv[2] || 'link';
+
+const packageJson = JSON.parse(fs.readFileSync(`${__dirname}/../package.json`));
+
+const dependencies = [
+  ...Object.keys(packageJson.dependencies),
+  ...Object.keys(packageJson.devDependencies),
+].filter((d) => d.includes('@apollosproject'));
+
+dependencies.forEach((dep) => {
+  const output = execSync(`yalc ${direction} ${dep}`, { encoding: 'utf8' });
+  console.log(output);
+});
diff --git a/apolloschurchapp/src/Providers.js b/apolloschurchapp/src/Providers.js
index bd1f2b26..38982089 100644
--- a/apolloschurchapp/src/Providers.js
+++ b/apolloschurchapp/src/Providers.js
@@ -18,19 +18,7 @@ const AppProviders = (props) => (
   <ClientProvider {...props}>
     <NotificationsProvider
       oneSignalKey={ApollosConfig.ONE_SIGNAL_KEY}
-      // TODO deprecated prop
       navigate={NavigationService.navigate}
-      handleExternalLink={(url) => {
-        const path = url.split('app-link/')[1];
-        const [route, location] = path.split('/');
-        if (route === 'content')
-          NavigationService.navigate('ContentSingle', { itemId: location });
-        if (route === 'nav')
-          NavigationService.navigate(
-            // turns "home" into "Home"
-            location[0].toUpperCase() + location.substring(1)
-          );
-      }}
       actionMap={{
         // accept a follow request when someone taps "accept" in a follow request push notification
         acceptFollowRequest: ({ requestPersonId }) =>
diff --git a/apolloschurchapp/src/content-feed/content-feed.tests.js b/apolloschurchapp/src/content-feed/content-feed.tests.js
new file mode 100644
index 00000000..3c967931
--- /dev/null
+++ b/apolloschurchapp/src/content-feed/content-feed.tests.js
@@ -0,0 +1,119 @@
+import React from 'react';
+
+import { renderWithApolloData, Providers } from '@apollosproject/ui-test-utils';
+import { MockedProvider } from '@apollo/client/testing';
+import { GET_CONTENT_CARD } from '@apollosproject/ui-connected';
+import GET_CONTENT_FEED from './getContentFeed';
+
+import ContentFeed from './index';
+
+describe('content feed query component', () => {
+  it('renders a feedview after successful query', async () => {
+    const mock = {
+      request: {
+        query: GET_CONTENT_FEED,
+        variables: { itemId: 'ContentChannel:123' },
+      },
+      result: {
+        data: {
+          node: {
+            __typename: 'ContentChannel',
+            childContentItemsConnection: {
+              pageInfo: {
+                endCursor: 'blablalba',
+                __typename: 'PaginationInfo',
+              },
+              __typename: 'ContentItemsConnection',
+              edges: [
+                {
+                  __typename: 'ContentItemsConnectionEdge',
+                  node: {
+                    __typename: 'UniversalContentItem',
+                    id: 'UniversalContentItem:d57994350b9d213866b24dea3a97433d',
+                    coverImage: null,
+                    parentChannel: {
+                      id: 'ContentChannel:4f68015ba18662a7409d1219a4ce013e',
+                      name: 'Editorial',
+                      iconName: 'text',
+                      __typename: 'ContentChannel',
+                    },
+                    title: 'Mea Animal Aperiam Ornatus Eu',
+                    hyphenatedTitle: 'Mea Animal Aperiam Ornatus Eu',
+                    summary: 'Bla bla bla',
+                    theme: null,
+                    isLiked: false,
+                    likedCount: 0,
+                    videos: [],
+                    audios: [],
+                  },
+                },
+                {
+                  __typename: 'ContentItemsConnectionEdge',
+                  node: {
+                    __typename: 'UniversalContentItem',
+                    id: 'UniversalContentItem:b36e55d803443431e96bb4b5068147ec',
+                    coverImage: null,
+                    parentChannel: {
+                      id: 'ContentChannel:4f68015ba18662a7409d1219a4ce013e',
+                      name: 'Editorial',
+                      iconName: 'text',
+                      __typename: 'ContentChannel',
+                    },
+                    title: 'Probo Senserit Id Mea, Ut Sed Malis Postea,',
+                    hyphenatedTitle:
+                      'Probo Senserit Id Mea, Ut Sed Malis Postea,',
+                    summary: 'Bla bla bla',
+                    theme: null,
+                    isLiked: false,
+                    likedCount: 0,
+                    videos: [],
+                    audios: [],
+                  },
+                },
+              ],
+            },
+          },
+        },
+      },
+    };
+
+    const additionalMocks = mock.result.data.node.childContentItemsConnection.edges.map(
+      ({ node }) => ({
+        request: {
+          query: GET_CONTENT_CARD,
+          variables: { contentId: node.id },
+        },
+        result: {
+          data: {
+            node: {
+              ...node,
+              coverImage: {
+                name: 'Boom',
+                ...node.coverImage,
+              },
+            },
+          },
+        },
+      })
+    );
+
+    const initialTree = await renderWithApolloData(
+      <Providers
+        MockedProvider={MockedProvider}
+        mocks={[mock, ...additionalMocks]}
+      >
+        <ContentFeed route={{ params: { itemId: 'ContentChannel:123' } }} />
+      </Providers>
+    );
+    const tree = await renderWithApolloData(
+      <Providers
+        MockedProvider={MockedProvider}
+        mocks={[mock, ...additionalMocks]}
+      >
+        <ContentFeed route={{ params: { itemId: 'ContentChannel:123' } }} />
+      </Providers>,
+      initialTree
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/content-feed/getContentFeed.js b/apolloschurchapp/src/content-feed/getContentFeed.js
new file mode 100644
index 00000000..38ed31fb
--- /dev/null
+++ b/apolloschurchapp/src/content-feed/getContentFeed.js
@@ -0,0 +1,22 @@
+import gql from 'graphql-tag';
+import ApollosConfig from '@apollosproject/config';
+
+export default gql`
+  query getContentFeed($itemId: ID!, $after: String, $first: Int) {
+    node(id: $itemId) {
+      ... on ContentChannel {
+        childContentItemsConnection(after: $after, first: $first) {
+          pageInfo {
+            endCursor
+          }
+          edges {
+            node {
+              ...contentCardFragment
+            }
+          }
+        }
+      }
+    }
+  }
+  ${ApollosConfig.FRAGMENTS.CONTENT_CARD_FRAGMENT}
+`;
diff --git a/apolloschurchapp/src/content-feed/index.js b/apolloschurchapp/src/content-feed/index.js
new file mode 100644
index 00000000..ea033d8d
--- /dev/null
+++ b/apolloschurchapp/src/content-feed/index.js
@@ -0,0 +1,78 @@
+import React, { PureComponent } from 'react';
+import { Query } from '@apollo/client/react/components';
+import { get } from 'lodash';
+import PropTypes from 'prop-types';
+
+import {
+  ContentCardConnected,
+  fetchMoreResolver,
+} from '@apollosproject/ui-connected';
+
+import { BackgroundView, FeedView } from '@apollosproject/ui-kit';
+
+import GET_CONTENT_FEED from './getContentFeed';
+/**
+ * This is where the component description lives
+ * A FeedView wrapped in a query to pull content data.
+ */
+class ContentFeed extends PureComponent {
+  static propTypes = {
+    /** Functions passed down from React Navigation to use in navigating to/from
+     * items in the feed.
+     */
+    navigation: PropTypes.shape({
+      navigate: PropTypes.func,
+    }),
+    route: PropTypes.shape({
+      params: PropTypes.shape({
+        itemId: PropTypes.string,
+      }),
+    }),
+  };
+
+  /** Function that is called when a card in the feed is pressed.
+   * Takes the user to the ContentSingle
+   */
+  handleOnPress = (item) =>
+    this.props.navigation.navigate('ContentSingle', {
+      itemId: item.id,
+      sharing: item.sharing,
+    });
+
+  render() {
+    const { route } = this.props;
+    const { itemId } = route.params;
+    return (
+      <BackgroundView>
+        <Query
+          query={GET_CONTENT_FEED}
+          variables={{ itemId }}
+          fetchPolicy="cache-and-network"
+        >
+          {({ loading, error, data, refetch, fetchMore, variables }) => (
+            <FeedView
+              ListItemComponent={ContentCardConnected}
+              content={get(
+                data,
+                'node.childContentItemsConnection.edges',
+                []
+              ).map((edge) => edge.node)}
+              fetchMore={fetchMoreResolver({
+                collectionName: 'node.childContentItemsConnection',
+                fetchMore,
+                variables,
+                data,
+              })}
+              isLoading={loading}
+              error={error}
+              refetch={refetch}
+              onPressItem={this.handleOnPress}
+            />
+          )}
+        </Query>
+      </BackgroundView>
+    );
+  }
+}
+
+export default ContentFeed;
diff --git a/apolloschurchapp/src/event/Event.tests.js b/apolloschurchapp/src/event/Event.tests.js
index 5717420c..8164746c 100644
--- a/apolloschurchapp/src/event/Event.tests.js
+++ b/apolloschurchapp/src/event/Event.tests.js
@@ -1,13 +1,14 @@
 import React from 'react';
+import renderer from 'react-test-renderer';
 import moment from 'moment';
 
-import { Providers, renderWithApolloData } from '@apollosproject/ui-test-utils';
+import { Providers } from '@apollosproject/ui-test-utils';
 
 import Event from './Event';
 
 describe('The Event component', () => {
-  it('should render', async () => {
-    const tree = await renderWithApolloData(
+  it('should render', () => {
+    const tree = renderer.create(
       <Providers>
         <Event
           event={{
diff --git a/apolloschurchapp/src/index.js b/apolloschurchapp/src/index.js
index 17568050..14c77d7e 100644
--- a/apolloschurchapp/src/index.js
+++ b/apolloschurchapp/src/index.js
@@ -1,13 +1,9 @@
 /* eslint-disable react/jsx-handler-names */
 
+import hoistNonReactStatic from 'hoist-non-react-statics';
 import React from 'react';
-import { StatusBar } from 'react-native';
-import {
-  NavigationContainer,
-  useNavigation,
-  DarkTheme,
-  DefaultTheme,
-} from '@react-navigation/native';
+import { StatusBar, Platform } from 'react-native';
+import { NavigationContainer } from '@react-navigation/native';
 import { createNativeStackNavigator } from 'react-native-screens/native-stack';
 import SplashScreen from 'react-native-splash-screen';
 import 'react-native-gesture-handler'; // required for react-navigation
@@ -22,16 +18,14 @@ import Passes from '@apollosproject/ui-passes';
 import { MapViewConnected as Location } from '@apollosproject/ui-mapview';
 import Auth, { ProtectedRoute } from '@apollosproject/ui-auth';
 
-import {
-  ContentFeedConnected,
-  SearchScreenConnected,
-} from '@apollosproject/ui-connected';
 import Providers from './Providers';
 import ContentSingle from './content-single';
+import NodeSingle from './node-single';
 import Event from './event';
 import Tabs from './tabs';
 import LandingScreen from './ui/LandingScreen';
 import Onboarding from './ui/Onboarding';
+import Search from './ui/Search';
 
 enableScreens(); // improves performance for react-navigation
 
@@ -40,52 +34,48 @@ const AppStatusBar = withTheme(({ theme }) => ({
   backgroundColor: theme.colors.background.paper,
 }))(StatusBar);
 
-const ProtectedRouteWithSplashScreen = () => {
+const ProtectedRouteWithSplashScreen = (props) => {
   const handleOnRouteChange = () => SplashScreen.hide();
-  const navigation = useNavigation();
-  return (
-    <ProtectedRoute
-      onRouteChange={handleOnRouteChange}
-      navigation={navigation}
-    />
-  );
+
+  return <ProtectedRoute {...props} onRouteChange={handleOnRouteChange} />;
 };
 
-const ThemedNavigationContainer = withTheme(({ theme, ...props }) => ({
-  theme: {
-    ...(theme.type === 'dark' ? DarkTheme : DefaultTheme),
-    dark: theme.type === 'dark',
-    colors: {
-      ...(theme.type === 'dark' ? DarkTheme.colors : DefaultTheme.colors),
-      primary: theme.colors.secondary,
-      background: theme.colors.background.screen,
-      card: theme.colors.background.paper,
-      text: theme.colors.text.primary,
-    },
-  },
-  ...props,
-}))(({ containerRef, ...props }) => (
-  <NavigationContainer ref={containerRef} {...props} />
-));
+// Hack to avoid needing to pass emailRequired through the navigator.navigate
+const EnhancedAuth = (props) => <Auth {...props} emailRequired />;
+// 😑
+hoistNonReactStatic(EnhancedAuth, Auth);
 
 const { Navigator, Screen } = createNativeStackNavigator();
+const ThemedNavigator = withTheme(({ theme, ...props }) => ({
+  ...props,
+  screenOptions: {
+    headerTintColor: theme.colors.action.secondary,
+    headerTitleStyle: {
+      color: theme.colors.text.primary,
+    },
+    headerStyle: {
+      backgroundColor: theme.colors.background.paper,
+      ...Platform.select(theme.shadows.default),
+    },
+    headerShown: false,
+    stackPresentation: 'modal',
+  },
+}))(Navigator);
 
-const App = () => (
+const App = (props) => (
   <Providers>
     <BackgroundView>
       <AppStatusBar />
-      <ThemedNavigationContainer
-        containerRef={NavigationService.setTopLevelNavigator}
+      <NavigationContainer
+        ref={NavigationService.setTopLevelNavigator}
         onReady={NavigationService.setIsReady}
       >
-        <Navigator
-          screenOptions={{ headerShown: false, stackPresentation: 'modal' }}
-        >
+        <ThemedNavigator initialRouteName="ProtectedRoute" {...props}>
           <Screen
             name="ProtectedRoute"
             component={ProtectedRouteWithSplashScreen}
           />
-          <Screen name="Tabs" component={Tabs} />
+          <Screen name="Tabs" component={Tabs} options={{ title: 'Home' }} />
           <Screen
             name="ContentSingle"
             component={ContentSingle}
@@ -95,24 +85,25 @@ const App = () => (
             }}
           />
           <Screen
-            component={ContentFeedConnected}
-            name="ContentFeed"
-            options={({ route }) => ({
-              title: route.params.itemTitle || 'Content Feed',
-              stackPresentation: 'push',
-            })}
+            name="NodeSingle"
+            component={NodeSingle}
+            options={{ title: 'Node' }}
           />
-
           <Screen name="Event" component={Event} options={{ title: 'Event' }} />
           <Screen
             name="Auth"
-            component={Auth}
+            component={EnhancedAuth}
             options={{
+              title: 'Login',
               gestureEnabled: false,
               stackPresentation: 'push',
             }}
           />
-          <Screen name="Location" component={Location} />
+          <Screen
+            name="Location"
+            component={Location}
+            options={{ headerShown: true }}
+          />
           <Screen
             name="Passes"
             component={Passes}
@@ -122,14 +113,19 @@ const App = () => (
             name="Onboarding"
             component={Onboarding}
             options={{
+              title: 'Onboarding',
               gestureEnabled: false,
               stackPresentation: 'push',
             }}
           />
-          <Screen name="LandingScreen" component={LandingScreen} />
-          <Screen name="Search" component={SearchScreenConnected} />
-        </Navigator>
-      </ThemedNavigationContainer>
+          <Screen
+            name="LandingScreen"
+            component={LandingScreen}
+            options={{ headerShown: false }}
+          />
+          <Screen component={Search} name="Search" />
+        </ThemedNavigator>
+      </NavigationContainer>
     </BackgroundView>
   </Providers>
 );
diff --git a/apolloschurchapp/src/node-single/NodeSingle.js b/apolloschurchapp/src/node-single/NodeSingle.js
new file mode 100644
index 00000000..230826bd
--- /dev/null
+++ b/apolloschurchapp/src/node-single/NodeSingle.js
@@ -0,0 +1,49 @@
+import React, { PureComponent } from 'react';
+import { get } from 'lodash';
+import PropTypes from 'prop-types';
+
+import { ThemeMixin } from '@apollosproject/ui-kit';
+
+import {
+  InteractWhenLoadedConnected,
+  NodeSingleConnected,
+} from '@apollosproject/ui-connected';
+
+import NavigationHeader from '../ui/NavigationHeader';
+
+class NodeSingle extends PureComponent {
+  static propTypes = {
+    route: PropTypes.shape({
+      params: PropTypes.shape({ nodeId: PropTypes.string }),
+    }),
+    navigation: PropTypes.shape({
+      push: PropTypes.func,
+    }),
+  };
+
+  get nodeId() {
+    return this.props.route?.params?.nodeId;
+  }
+
+  static navigationOptions = {
+    header: NavigationHeader,
+    headerTransparent: true,
+    headerMode: 'float',
+  };
+
+  render() {
+    return (
+      <ThemeMixin
+        mixin={{
+          type: get(this.props, 'theme.type'),
+          colors: get(this.props, 'theme.colors'),
+        }}
+      >
+        <InteractWhenLoadedConnected nodeId={this.nodeId} action={'COMPLETE'} />
+        <NodeSingleConnected nodeId={this.nodeId} />
+      </ThemeMixin>
+    );
+  }
+}
+
+export default NodeSingle;
diff --git a/apolloschurchapp/src/node-single/index.js b/apolloschurchapp/src/node-single/index.js
new file mode 100644
index 00000000..e208efc0
--- /dev/null
+++ b/apolloschurchapp/src/node-single/index.js
@@ -0,0 +1,37 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import { createNativeStackNavigator } from 'react-native-screens/native-stack';
+
+import { ModalCloseButton, ModalBackButton } from '@apollosproject/ui-kit';
+import NodeSingle from './NodeSingle';
+
+const { Screen, Navigator } = createNativeStackNavigator();
+
+const NodeSingleNavigator = ({ route, navigation, ...props }) => (
+  <Navigator
+    {...props}
+    headerMode="float"
+    screenOptions={{
+      headerTranslucent: true,
+      headerStyle: { backgroundColor: 'transparent' },
+      headerHideShadow: true,
+      headerRight: ModalCloseButton,
+      headerLeft: ModalBackButton,
+      headerTitle: '',
+    }}
+  >
+    <Screen
+      name="NodeSingle"
+      component={NodeSingle}
+      initialParams={route.params}
+    />
+  </Navigator>
+);
+
+NodeSingleNavigator.propTypes = {
+  route: PropTypes.shape({
+    params: PropTypes.shape({}),
+  }),
+};
+
+export default NodeSingleNavigator;
diff --git a/apolloschurchapp/src/tabs/connect/index.js b/apolloschurchapp/src/tabs/connect/index.js
index da182421..d75c8a08 100644
--- a/apolloschurchapp/src/tabs/connect/index.js
+++ b/apolloschurchapp/src/tabs/connect/index.js
@@ -2,7 +2,6 @@ import React from 'react';
 import { createNativeStackNavigator } from 'react-native-screens/native-stack';
 import { withTheme } from '@apollosproject/ui-kit';
 import { LikedContentFeedConnected } from '@apollosproject/ui-connected';
-import { NotificationSettingsConnected } from '@apollosproject/ui-notifications';
 
 import UserSettings from '../../user-settings';
 import PersonalDetails from '../../user-settings/PersonalDetails';
@@ -25,11 +24,6 @@ const ConnectNavigator = (props) => (
       name="TestingControlPanel"
       options={{ headerTitle: 'Testing' }}
     />
-    <Screen
-      component={NotificationSettingsConnected}
-      name="Notifications"
-      options={{ headerTitle: 'Notifications' }}
-    />
     <Screen
       component={UserSettings}
       name="UserSettings"
diff --git a/apolloschurchapp/src/tabs/discover/Discover.js b/apolloschurchapp/src/tabs/discover/Discover.js
new file mode 100644
index 00000000..5153afba
--- /dev/null
+++ b/apolloschurchapp/src/tabs/discover/Discover.js
@@ -0,0 +1,59 @@
+import React from 'react';
+
+import { SafeAreaView } from 'react-native-safe-area-context';
+import gql from 'graphql-tag';
+import { Query } from '@apollo/client/react/components';
+import { useNavigation } from '@react-navigation/native';
+
+import { BackgroundView } from '@apollosproject/ui-kit';
+import {
+  FeaturesFeedConnected,
+  FEATURE_FEED_ACTION_MAP,
+  RockAuthedWebBrowser,
+} from '@apollosproject/ui-connected';
+
+function handleOnPress({ action, ...props }) {
+  if (FEATURE_FEED_ACTION_MAP[action]) {
+    FEATURE_FEED_ACTION_MAP[action]({ action, ...props });
+  }
+  // If you add additional actions, you can handle them here.
+  // Or add them to the FEATURE_FEED_ACTION_MAP, with the syntax
+  // { [ActionName]: function({ relatedNode, action, ...FeatureFeedConnectedProps}) }
+}
+
+// getHomeFeed uses the HOME_FEATURES in the config.yml
+// You can also hardcode an ID if you are confident it will never change
+// Or use some other strategy to get a FeatureFeed.id
+export const GET_DISCOVER_FEED = gql`
+  query getDiscoverFeatureFeed {
+    discoverFeedFeatures {
+      id
+    }
+  }
+`;
+
+const Discover = () => {
+  const navigation = useNavigation();
+  return (
+    <RockAuthedWebBrowser>
+      {(openUrl) => (
+        <BackgroundView>
+          <SafeAreaView edges={['right', 'top', 'left']}>
+            <Query query={GET_DISCOVER_FEED}>
+              {({ data }) => (
+                <FeaturesFeedConnected
+                  openUrl={openUrl}
+                  navigation={navigation}
+                  featureFeedId={data?.discoverFeedFeatures?.id}
+                  onPressActionItem={handleOnPress}
+                />
+              )}
+            </Query>
+          </SafeAreaView>
+        </BackgroundView>
+      )}
+    </RockAuthedWebBrowser>
+  );
+};
+
+export default Discover;
diff --git a/apolloschurchapp/src/tabs/discover/index.js b/apolloschurchapp/src/tabs/discover/index.js
new file mode 100644
index 00000000..f612b1ad
--- /dev/null
+++ b/apolloschurchapp/src/tabs/discover/index.js
@@ -0,0 +1,44 @@
+import React from 'react';
+import { Platform } from 'react-native';
+import { createNativeStackNavigator } from 'react-native-screens/native-stack';
+import { withTheme } from '@apollosproject/ui-kit';
+
+import ContentFeed from '../../content-feed';
+
+import Discover from './Discover';
+
+const { Navigator, Screen } = createNativeStackNavigator();
+
+const DiscoverNavigator = (props) => (
+  <Navigator initialRouteName="Discover" {...props}>
+    <Screen
+      component={Discover}
+      name="Discover"
+      options={{ headerShown: false }}
+    />
+    <Screen
+      component={ContentFeed}
+      name="ContentFeed"
+      /** Function for React Navigation to set information in the header. */
+      options={({ route }) => ({
+        title: route.params.itemTitle || 'Content Feed',
+      })}
+    />
+  </Navigator>
+);
+const EnhancedDiscover = withTheme(({ theme, ...props }) => ({
+  ...props,
+  screenOptions: {
+    headerTintColor: theme.colors.action.secondary,
+    headerTitleStyle: {
+      color: theme.colors.text.primary,
+    },
+    headerStyle: {
+      backgroundColor: theme.colors.background.paper,
+      ...Platform.select(theme.shadows.default),
+    },
+    headerLargeTitle: true,
+  },
+}))(DiscoverNavigator);
+
+export default EnhancedDiscover;
diff --git a/apolloschurchapp/src/tabs/home/index.js b/apolloschurchapp/src/tabs/home/index.js
new file mode 100644
index 00000000..91f9323c
--- /dev/null
+++ b/apolloschurchapp/src/tabs/home/index.js
@@ -0,0 +1,94 @@
+import React, { useEffect } from 'react';
+import { Image } from 'react-native';
+import { SafeAreaView } from 'react-native-safe-area-context';
+import { Query } from '@apollo/client/react/components';
+import { gql, useApolloClient } from '@apollo/client';
+import { useNavigation } from '@react-navigation/native';
+
+import {
+  styled,
+  BackgroundView,
+  NavigationService,
+} from '@apollosproject/ui-kit';
+import {
+  FeaturesFeedConnected,
+  FEATURE_FEED_ACTION_MAP,
+  RockAuthedWebBrowser,
+} from '@apollosproject/ui-connected';
+
+import { checkOnboardingStatusAndNavigate } from '@apollosproject/ui-onboarding';
+
+import { SearchButton } from '../../ui/Search';
+import { ONBOARDING_VERSION } from '../../ui/Onboarding';
+
+const LogoTitle = styled(({ theme }) => ({
+  height: theme.sizing.baseUnit,
+  margin: theme.sizing.baseUnit,
+  alignSelf: 'center',
+  resizeMode: 'contain',
+}))(Image);
+
+function handleOnPress({ action, ...props }) {
+  if (FEATURE_FEED_ACTION_MAP[action]) {
+    FEATURE_FEED_ACTION_MAP[action]({ action, ...props });
+  }
+  // If you add additional actions, you can handle them here.
+  // Or add them to the FEATURE_FEED_ACTION_MAP, with the syntax
+  // { [ActionName]: function({ relatedNode, action, ...FeatureFeedConnectedProps}) }
+}
+
+// getHomeFeed uses the HOME_FEATURES in the config.yml
+// You can also hardcode an ID if you are confident it will never change
+// Or use some other strategy to get a FeatureFeed.id
+export const GET_HOME_FEED = gql`
+  query getHomeFeatureFeed {
+    homeFeedFeatures {
+      id
+    }
+  }
+`;
+
+const Home = () => {
+  const navigation = useNavigation();
+  const client = useApolloClient();
+
+  useEffect(() => {
+    checkOnboardingStatusAndNavigate({
+      client,
+      navigation: NavigationService,
+      latestOnboardingVersion: ONBOARDING_VERSION,
+      navigateHome: false,
+    });
+  }, []);
+
+  return (
+    <RockAuthedWebBrowser>
+      {(openUrl) => (
+        <BackgroundView>
+          <SafeAreaView edges={['top', 'left', 'right']}>
+            <Query query={GET_HOME_FEED} fetchPolicy="cache-and-network">
+              {({ data }) => (
+                <FeaturesFeedConnected
+                  openUrl={openUrl}
+                  navigation={navigation}
+                  featureFeedId={data?.homeFeedFeatures?.id}
+                  onPressActionItem={handleOnPress}
+                  ListHeaderComponent={
+                    <>
+                      <LogoTitle source={require('./wordmark.png')} />
+                      <SearchButton
+                        onPress={() => navigation.navigate('Search')}
+                      />
+                    </>
+                  }
+                />
+              )}
+            </Query>
+          </SafeAreaView>
+        </BackgroundView>
+      )}
+    </RockAuthedWebBrowser>
+  );
+};
+
+export default Home;
diff --git a/apolloschurchapp/src/tabs/wordmark.png b/apolloschurchapp/src/tabs/home/wordmark.png
similarity index 100%
rename from apolloschurchapp/src/tabs/wordmark.png
rename to apolloschurchapp/src/tabs/home/wordmark.png
diff --git a/apolloschurchapp/src/tabs/index.js b/apolloschurchapp/src/tabs/index.js
index db5610a4..3e2a5b8c 100644
--- a/apolloschurchapp/src/tabs/index.js
+++ b/apolloschurchapp/src/tabs/index.js
@@ -1,129 +1,45 @@
-import React, { useEffect } from 'react';
-import PropTypes from 'prop-types';
-import { Image } from 'react-native';
-import { useNavigation } from '@react-navigation/native';
+import React from 'react';
+import { Platform } from 'react-native';
 import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';
-import {
-  NavigationService,
-  withTheme,
-  Icon,
-  Touchable,
-} from '@apollosproject/ui-kit';
-import { useApolloClient } from '@apollo/client';
-import { createFeatureFeedTab } from '@apollosproject/ui-connected';
-import { checkOnboardingStatusAndNavigate } from '@apollosproject/ui-onboarding';
-import { ONBOARDING_VERSION } from '../ui/Onboarding';
+import { withTheme } from '@apollosproject/ui-kit';
+
 import Connect from './connect';
+import Home from './home';
+import Discover from './discover';
 import tabBarIcon from './tabBarIcon';
 
-const HeaderLogo = withTheme(({ theme }) => ({
-  style: {
-    height: theme.sizing.baseUnit * 2.5,
-    width: '70%',
-    resizeMode: 'contain',
-  },
-  source:
-    theme.type === 'light'
-      ? require('./wordmark.png')
-      : require('./wordmark.dark.png'),
-}))(Image);
-
-const SearchIcon = withTheme(({ theme: { colors, sizing: { baseUnit } } }) => ({
-  name: 'search',
-  size: baseUnit * 2,
-  fill: colors.primary,
-}))(Icon);
+const { Navigator, Screen } = createBottomTabNavigator();
 
-const SearchButton = ({ onPress }) => (
-  <Touchable onPress={onPress}>
-    <SearchIcon />
-  </Touchable>
+const TabNavigator = (props) => (
+  <Navigator {...props} lazy>
+    <Screen
+      name="Home"
+      component={Home}
+      options={{ tabBarIcon: tabBarIcon('home') }}
+    />
+    <Screen
+      name="Discover"
+      component={Discover}
+      options={{ tabBarIcon: tabBarIcon('sections') }}
+    />
+    <Screen
+      name="Connect"
+      component={Connect}
+      options={{ tabBarIcon: tabBarIcon('profile') }}
+    />
+  </Navigator>
 );
 
-SearchButton.propTypes = {
-  onPress: PropTypes.func,
-};
-
-const HeaderCenter = () => <HeaderLogo source={require('./wordmark.png')} />;
-const HeaderRight = () => {
-  const navigation = useNavigation();
-  return <SearchButton onPress={() => navigation.navigate('Search')} />;
-};
-
-// we nest stack inside of tabs so we can use all the fancy native header features
-const HomeTab = createFeatureFeedTab({
-  screenOptions: {
-    headerHideShadow: true,
-    headerCenter: HeaderCenter,
-    headerRight: HeaderRight,
-    headerLargeTitle: false,
-  },
-  tabName: 'Home',
-  feedName: 'HOME',
-});
-
-const ReadTab = createFeatureFeedTab({
-  tabName: 'Read',
-  feedName: 'READ',
-});
-
-const WatchTab = createFeatureFeedTab({
-  tabName: 'Watch',
-  feedName: 'WATCH',
-});
-
-const PrayTab = createFeatureFeedTab({
-  tabName: 'Pray',
-  feedName: 'PRAY',
-});
-
-const { Navigator, Screen } = createBottomTabNavigator();
-
-const TabNavigator = () => {
-  const client = useApolloClient();
-  // this is only used by the tab loaded first
-  // if there is a new version of the onboarding flow,
-  // we'll navigate there first to show new screens
-  useEffect(
-    () => {
-      checkOnboardingStatusAndNavigate({
-        client,
-        navigation: NavigationService,
-        latestOnboardingVersion: ONBOARDING_VERSION,
-        navigateHome: false,
-      });
+const ThemedTabNavigator = withTheme(({ theme }) => ({
+  tabBarOptions: {
+    activeTintColor: theme?.colors?.secondary,
+    inactiveTintColor: theme?.colors?.text?.tertiary,
+    style: {
+      backgroundColor: theme?.colors?.background?.paper,
+      borderTopColor: theme?.colors?.shadows.default,
+      ...Platform.select(theme?.shadows.default),
     },
-    [client]
-  );
-  return (
-    <Navigator lazy>
-      <Screen
-        name="Home"
-        component={HomeTab}
-        options={{ tabBarIcon: tabBarIcon('home') }}
-      />
-      <Screen
-        name="Read"
-        component={ReadTab}
-        options={{ tabBarIcon: tabBarIcon('sections') }}
-      />
-      <Screen
-        name="Watch"
-        component={WatchTab}
-        options={{ tabBarIcon: tabBarIcon('video') }}
-      />
-      <Screen
-        name="Pray"
-        component={PrayTab}
-        options={{ tabBarIcon: tabBarIcon('like') }}
-      />
-      <Screen
-        name="Connect"
-        component={Connect}
-        options={{ tabBarIcon: tabBarIcon('profile') }}
-      />
-    </Navigator>
-  );
-};
+  },
+}))(TabNavigator);
 
-export default TabNavigator;
+export default ThemedTabNavigator;
diff --git a/apolloschurchapp/src/tabs/wordmark.dark.png b/apolloschurchapp/src/tabs/wordmark.dark.png
deleted file mode 100644
index 93229c35ef61c3842a7bf0acb5c9ed910093adb0..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 8241
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

diff --git a/apolloschurchapp/src/theme/propOverrides.js b/apolloschurchapp/src/theme/propOverrides.js
new file mode 100644
index 00000000..6d46cc8b
--- /dev/null
+++ b/apolloschurchapp/src/theme/propOverrides.js
@@ -0,0 +1,2 @@
+/* Export your custom prop overrides here. */
+export {};
diff --git a/apolloschurchapp/src/theme/styleOverrides.js b/apolloschurchapp/src/theme/styleOverrides.js
new file mode 100644
index 00000000..3599e309
--- /dev/null
+++ b/apolloschurchapp/src/theme/styleOverrides.js
@@ -0,0 +1,2 @@
+/* Export your custom style overrides here. */
+export {};
diff --git a/apolloschurchapp/src/theme/theme.js b/apolloschurchapp/src/theme/theme.js
index fe1c84f1..b2aeb3cb 100644
--- a/apolloschurchapp/src/theme/theme.js
+++ b/apolloschurchapp/src/theme/theme.js
@@ -1,3 +1,6 @@
+// import styleOverrides from './styleOverrides';
+// import propOverrides from './propOverrides';
+
 /* Add your custom theme definitions below. Anything that is supported in UI-Kit Theme can be
  overridden and/or customized here! */
 
@@ -48,6 +51,9 @@
  * }
  * ```
  */
-// const overrides = {};
+// const overrides = {
+//   ...styleOverrides,
+//   ...propOverrides,
+// };
 
 export default {};
diff --git a/apolloschurchapp/src/ui/Onboarding/index.js b/apolloschurchapp/src/ui/Onboarding/index.js
index ff46d7a2..842305a1 100644
--- a/apolloschurchapp/src/ui/Onboarding/index.js
+++ b/apolloschurchapp/src/ui/Onboarding/index.js
@@ -2,7 +2,12 @@ import React from 'react';
 import { View, Image } from 'react-native';
 import { Query } from '@apollo/client/react/components';
 import PropTypes from 'prop-types';
-import { requestPermissions } from '@apollosproject/ui-notifications';
+import {
+  checkNotifications,
+  openSettings,
+  requestNotifications,
+  RESULTS,
+} from 'react-native-permissions';
 import {
   styled,
   BackgroundView,
@@ -85,7 +90,19 @@ function Onboarding({ navigation, route }) {
                 />
                 <AskNotificationsConnected
                   onPressPrimary={swipeForward}
-                  onRequestPushPermissions={requestPermissions}
+                  onRequestPushPermissions={(update) => {
+                    checkNotifications().then((checkRes) => {
+                      if (checkRes.status === RESULTS.DENIED) {
+                        requestNotifications(['alert', 'badge', 'sound']).then(
+                          () => {
+                            update();
+                          }
+                        );
+                      } else {
+                        openSettings();
+                      }
+                    });
+                  }}
                   BackgroundComponent={
                     <ImageContainer>
                       <StyledImage
diff --git a/apolloschurchapp/src/ui/Search/Search.js b/apolloschurchapp/src/ui/Search/Search.js
new file mode 100644
index 00000000..0f9c4b95
--- /dev/null
+++ b/apolloschurchapp/src/ui/Search/Search.js
@@ -0,0 +1,62 @@
+import React, { useState, useEffect, useRef } from 'react';
+import { View } from 'react-native';
+import { SafeAreaView } from 'react-native-safe-area-context';
+import PropTypes from 'prop-types';
+import { throttle } from 'lodash';
+
+import { styled, BackgroundView } from '@apollosproject/ui-kit';
+import {
+  SearchFeedConnected,
+  SearchInputHeader,
+} from '@apollosproject/ui-connected';
+
+const HeaderContainer = styled({
+  paddingTop: 8,
+})(View);
+
+function Search(props) {
+  const [searchText, setSearchText] = useState('');
+  const [isFocused, setIsFocused] = useState(true);
+
+  const searchRef = useRef(null);
+
+  useEffect(() => {
+    searchRef.current.focus();
+  }, []);
+
+  useEffect(
+    () => {
+      if (!isFocused && searchText === '') {
+        props.navigation.pop();
+      }
+    },
+    [isFocused]
+  );
+
+  return (
+    <BackgroundView>
+      <SafeAreaView edges={['right', 'top', 'left']}>
+        <HeaderContainer>
+          <SearchInputHeader
+            onChangeText={throttle(setSearchText, 300)}
+            onFocus={setIsFocused}
+            inputRef={searchRef}
+          />
+        </HeaderContainer>
+        <View>
+          <SearchFeedConnected searchText={searchText} />
+        </View>
+      </SafeAreaView>
+    </BackgroundView>
+  );
+}
+
+Search.propTypes = {
+  navigation: PropTypes.shape({
+    getParam: PropTypes.func,
+    setParams: PropTypes.func,
+    navigate: PropTypes.func,
+  }),
+};
+
+export default Search;
diff --git a/apolloschurchapp/src/ui/Search/SearchButton.js b/apolloschurchapp/src/ui/Search/SearchButton.js
new file mode 100644
index 00000000..9dd742f6
--- /dev/null
+++ b/apolloschurchapp/src/ui/Search/SearchButton.js
@@ -0,0 +1,31 @@
+import React from 'react';
+import { Animated } from 'react-native';
+import PropTypes from 'prop-types';
+
+import { styled, withTheme, Touchable, Icon } from '@apollosproject/ui-kit';
+
+const SearchIcon = withTheme(({ theme: { colors, sizing: { baseUnit } } }) => ({
+  name: 'search',
+  size: baseUnit * 2,
+  fill: colors.primary,
+}))(Icon);
+
+const SearchButtonContainer = styled(({ theme: { sizing: { baseUnit } } }) => ({
+  position: 'absolute',
+  right: baseUnit,
+  top: baseUnit / 2,
+}))(Animated.View);
+
+const HomeSearchButton = ({ onPress }) => (
+  <SearchButtonContainer>
+    <Touchable onPress={onPress}>
+      <SearchIcon />
+    </Touchable>
+  </SearchButtonContainer>
+);
+
+HomeSearchButton.propTypes = {
+  onPress: PropTypes.func,
+};
+
+export default HomeSearchButton;
diff --git a/apolloschurchapp/src/ui/Search/index.js b/apolloschurchapp/src/ui/Search/index.js
new file mode 100644
index 00000000..99ed1d41
--- /dev/null
+++ b/apolloschurchapp/src/ui/Search/index.js
@@ -0,0 +1,5 @@
+import Search from './Search';
+import SearchButton from './SearchButton';
+
+export { SearchButton };
+export default Search;
diff --git a/apolloschurchapp/src/user-settings/index.js b/apolloschurchapp/src/user-settings/index.js
index 1db143da..2e70ea6c 100644
--- a/apolloschurchapp/src/user-settings/index.js
+++ b/apolloschurchapp/src/user-settings/index.js
@@ -76,22 +76,12 @@ class UserSettings extends PureComponent {
                             <CellIcon name="arrow-next" />
                           </Cell>
                         </Touchable>
-                        <Touchable
-                          onPress={() => {
-                            this.props.navigation.navigate('Notifications');
-                          }}
-                        >
-                          <Cell>
-                            <CellText>Notification Settings</CellText>
-                            <CellIcon name="arrow-next" />
-                          </Cell>
-                        </Touchable>
                       </TableView>
                       <TableView>
                         <Touchable
-                          onPress={() => {
-                            openUrl('mailto:support@apollos.app');
-                          }}
+                          onPress={() =>
+                            openUrl('https://apollosrock.newspring.cc/')
+                          }
                         >
                           <Cell>
                             <CellText>Give Feedback</CellText>
