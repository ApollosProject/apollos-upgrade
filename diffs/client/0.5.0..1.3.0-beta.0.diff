diff --git a/apolloschurchapp/.babelrc b/apolloschurchapp/.babelrc
deleted file mode 100644
index 5df9466..0000000
--- a/apolloschurchapp/.babelrc
+++ /dev/null
@@ -1,9 +0,0 @@
-{
-  "presets": ["react-native", "module:react-native-dotenv"],
-  "plugins": [
-    ["@babel/plugin-proposal-decorators", {
-      "legacy": true
-    }],
-    ["@babel/plugin-proposal-export-default-from"]
-  ]
-}
\ No newline at end of file
diff --git a/apolloschurchapp/.env.production b/apolloschurchapp/.env.production
index 16fc8f8..8f2e35f 100644
--- a/apolloschurchapp/.env.production
+++ b/apolloschurchapp/.env.production
@@ -1 +1,5 @@
-APP_DATA_URL=https://apollos-church-api.now.sh
+APP_DATA_URL=https://apollos-church-api-herokuapp-com.global.ssl.fastly.net/
+ONE_SIGNAL_KEY=$ONE_SIGNAL_KEY
+GOOGLE_MAPS_API_KEY=$GOOGLE_MAPS_API_KEY
+STORYBOOK=$STORYBOOK
+SCHEMA_VERSION=$SCHEMA_VERSION
\ No newline at end of file
diff --git a/apolloschurchapp/.flowconfig b/apolloschurchapp/.flowconfig
index 3c0adb5..1319ea1 100644
--- a/apolloschurchapp/.flowconfig
+++ b/apolloschurchapp/.flowconfig
@@ -11,24 +11,37 @@
 ; Ignore duplicate module providers
 ; For RN Apps installed via npm, "Libraries" folder is inside
 ; "node_modules/react-native" but in the source repo it is in the root
-.*/Libraries/react-native/React.js
+node_modules/react-native/Libraries/react-native/React.js
 
 ; Ignore polyfills
-.*/Libraries/polyfills/.*
+node_modules/react-native/Libraries/polyfills/.*
 
-; Ignore metro
-.*/node_modules/metro/.*
+; These should not be required directly
+; require from fbjs/lib instead: require('fbjs/lib/warning')
+node_modules/warning/.*
+
+; Flow doesn't support platforms
+.*/Libraries/Utilities/HMRLoadingView.js
+
+[untyped]
+.*/node_modules/@react-native-community/cli/.*/.*
 
 [include]
 
 [libs]
 node_modules/react-native/Libraries/react-native/react-native-interface.js
 node_modules/react-native/flow/
-node_modules/react-native/flow-github/
 
 [options]
 emoji=true
 
+esproposal.optional_chaining=enable
+esproposal.nullish_coalescing=enable
+
+module.file_ext=.js
+module.file_ext=.json
+module.file_ext=.ios.js
+
 module.system=haste
 module.system.haste.use_name_reducers=true
 # get basename
@@ -41,27 +54,46 @@ module.system.haste.name_reducers='^\(.*\)\.android$' -> '\1'
 module.system.haste.name_reducers='^\(.*\)\.native$' -> '\1'
 module.system.haste.paths.blacklist=.*/__tests__/.*
 module.system.haste.paths.blacklist=.*/__mocks__/.*
-module.system.haste.paths.blacklist=<PROJECT_ROOT>/node_modules/react-native/Libraries/Animated/src/polyfills/.*
 module.system.haste.paths.whitelist=<PROJECT_ROOT>/node_modules/react-native/Libraries/.*
+module.system.haste.paths.whitelist=<PROJECT_ROOT>/node_modules/react-native/RNTester/.*
+module.system.haste.paths.whitelist=<PROJECT_ROOT>/node_modules/react-native/IntegrationTests/.*
+module.system.haste.paths.blacklist=<PROJECT_ROOT>/node_modules/react-native/Libraries/react-native/react-native-implementation.js
+module.system.haste.paths.blacklist=<PROJECT_ROOT>/node_modules/react-native/Libraries/Animated/src/polyfills/.*
 
 munge_underscores=true
 
 module.name_mapper='^[./a-zA-Z0-9$_-]+\.\(bmp\|gif\|jpg\|jpeg\|png\|psd\|svg\|webp\|m4v\|mov\|mp4\|mpeg\|mpg\|webm\|aac\|aiff\|caf\|m4a\|mp3\|wav\|html\|pdf\)$' -> 'RelativeImageStub'
 
-module.file_ext=.js
-module.file_ext=.jsx
-module.file_ext=.json
-module.file_ext=.native.js
-
 suppress_type=$FlowIssue
 suppress_type=$FlowFixMe
 suppress_type=$FlowFixMeProps
 suppress_type=$FlowFixMeState
 
-suppress_comment=\\(.\\|\n\\)*\\$FlowFixMe\\($\\|[^(]\\|(\\(<VERSION>\\)? *\\(site=[a-z,_]*react_native[a-z,_]*\\)?)\\)
-suppress_comment=\\(.\\|\n\\)*\\$FlowIssue\\((\\(<VERSION>\\)? *\\(site=[a-z,_]*react_native[a-z,_]*\\)?)\\)?:? #[0-9]+
-suppress_comment=\\(.\\|\n\\)*\\$FlowFixedInNextDeploy
+suppress_comment=\\(.\\|\n\\)*\\$FlowFixMe\\($\\|[^(]\\|(\\(<VERSION>\\)? *\\(site=[a-z,_]*react_native\\(_ios\\)?_\\(oss\\|fb\\)[a-z,_]*\\)?)\\)
+suppress_comment=\\(.\\|\n\\)*\\$FlowIssue\\((\\(<VERSION>\\)? *\\(site=[a-z,_]*react_native\\(_ios\\)?_\\(oss\\|fb\\)[a-z,_]*\\)?)\\)?:? #[0-9]+
 suppress_comment=\\(.\\|\n\\)*\\$FlowExpectedError
 
+[lints]
+sketchy-null-number=warn
+sketchy-null-mixed=warn
+sketchy-number=warn
+untyped-type-import=warn
+nonstrict-import=warn
+deprecated-type=warn
+unsafe-getters-setters=warn
+inexact-spread=warn
+unnecessary-invariant=warn
+signature-verification-failure=warn
+deprecated-utility=error
+
+[strict]
+deprecated-type
+nonstrict-import
+sketchy-null
+unclear-type
+unsafe-getters-setters
+untyped-import
+untyped-type-import
+
 [version]
-^0.75.0
+^0.98.0
diff --git a/apolloschurchapp/.gitignore b/apolloschurchapp/.gitignore
index 12c1116..1401c87 100644
--- a/apolloschurchapp/.gitignore
+++ b/apolloschurchapp/.gitignore
@@ -45,3 +45,6 @@ project.xcworkspace
 .env.development.local
 .env.test.local
 .env.production.local
+
+# CocoaPods
+/ios/Pods/
\ No newline at end of file
diff --git a/apolloschurchapp/__mocks__/@react-native-community/async-storage/index.js b/apolloschurchapp/__mocks__/@react-native-community/async-storage/index.js
new file mode 100644
index 0000000..a4bf3f4
--- /dev/null
+++ b/apolloschurchapp/__mocks__/@react-native-community/async-storage/index.js
@@ -0,0 +1,23 @@
+let cache = {};
+export default {
+  setItem: (key, value) =>
+    new Promise((resolve, reject) =>
+      typeof key !== 'string' || typeof value !== 'string'
+        ? reject(new Error('key and value must be string'))
+        : resolve((cache[key] = value))
+    ),
+  getItem: (key, value) =>
+    new Promise((resolve) =>
+      cache.hasOwnProperty(key) ? resolve(cache[key]) : resolve(null)
+    ),
+  removeItem: (key) =>
+    new Promise((resolve, reject) =>
+      cache.hasOwnProperty(key)
+        ? resolve(delete cache[key])
+        : reject('No such key!')
+    ),
+  clear: (key) => new Promise((resolve, reject) => resolve((cache = {}))),
+
+  getAllKeys: (key) =>
+    new Promise((resolve, reject) => resolve(Object.keys(cache))),
+};
diff --git a/apolloschurchapp/__mocks__/@react-native-community/geolocation/index.js b/apolloschurchapp/__mocks__/@react-native-community/geolocation/index.js
new file mode 100644
index 0000000..0e77776
--- /dev/null
+++ b/apolloschurchapp/__mocks__/@react-native-community/geolocation/index.js
@@ -0,0 +1,3 @@
+export default {
+  getCurrentPosition: async () => null,
+};
diff --git a/apolloschurchapp/__mocks__/react-native-permissions/index.js b/apolloschurchapp/__mocks__/react-native-permissions/index.js
new file mode 100644
index 0000000..4d543c8
--- /dev/null
+++ b/apolloschurchapp/__mocks__/react-native-permissions/index.js
@@ -0,0 +1 @@
+export * from 'react-native-permissions/mock.js';
diff --git a/apolloschurchapp/android/app/BUCK b/apolloschurchapp/android/app/BUCK
index 5392fca..de2c2e2 100644
--- a/apolloschurchapp/android/app/BUCK
+++ b/apolloschurchapp/android/app/BUCK
@@ -8,23 +8,13 @@
 # - `buck install -r android/app` - compile, install and run application
 #
 
+load(":build_defs.bzl", "create_aar_targets", "create_jar_targets")
+
 lib_deps = []
 
-for jarfile in glob(['libs/*.jar']):
-  name = 'jars__' + jarfile[jarfile.rindex('/') + 1: jarfile.rindex('.jar')]
-  lib_deps.append(':' + name)
-  prebuilt_jar(
-    name = name,
-    binary_jar = jarfile,
-  )
+create_aar_targets(glob(["libs/*.aar"]))
 
-for aarfile in glob(['libs/*.aar']):
-  name = 'aars__' + aarfile[aarfile.rindex('/') + 1: aarfile.rindex('.aar')]
-  lib_deps.append(':' + name)
-  android_prebuilt_aar(
-    name = name,
-    aar = aarfile,
-  )
+create_jar_targets(glob(["libs/*.jar"]))
 
 android_library(
     name = "all-libs",
diff --git a/apolloschurchapp/android/app/build.gradle b/apolloschurchapp/android/app/build.gradle
index 70dcb10..c17f0d4 100644
--- a/apolloschurchapp/android/app/build.gradle
+++ b/apolloschurchapp/android/app/build.gradle
@@ -1,5 +1,21 @@
+buildscript {
+    repositories {
+        maven { url 'https://plugins.gradle.org/m2/' } // Gradle Plugin Portal
+    }
+    dependencies {
+        classpath 'gradle.plugin.com.onesignal:onesignal-gradle-plugin:[0.10.0, 0.99.99]'
+    }
+}
+
+apply plugin: 'com.onesignal.androidsdk.onesignal-gradle-plugin'
 apply plugin: "com.android.application"
 
+project.ext.envConfigFiles = [
+    release: ".env.production",
+]
+
+apply from: project(':react-native-config').projectDir.getPath() + "/dotenv.gradle"
+
 import com.android.build.OutputFile
 
 /**
@@ -43,6 +59,9 @@ import com.android.build.OutputFile
  *   // the root of your project, i.e. where "package.json" lives
  *   root: "../../",
  *
+ *   // https://facebook.github.io/react-native/docs/performance#enable-the-ram-format
+ *   bundleCommand: "ram-bundle",
+ *
  *   // where to put the JS bundle asset in debug mode
  *   jsBundleDirDebug: "$buildDir/intermediates/assets/debug",
  *
@@ -73,7 +92,8 @@ import com.android.build.OutputFile
  */
 
 project.ext.react = [
-    entryFile: "index.js"
+    entryFile: "index.js",
+    enableHermes: false,  // clean and rebuild if changing
 ]
 
 apply from: "../../node_modules/react-native/react.gradle"
@@ -93,26 +113,52 @@ def enableSeparateBuildPerCPUArchitecture = false
  */
 def enableProguardInReleaseBuilds = false
 
+/**
+ * The preferred build flavor of JavaScriptCore.
+ *
+ * For example, to use the international variant, you can use:
+ * `def jscFlavor = 'org.webkit:android-jsc-intl:+'`
+ *
+ * The international variant includes ICU i18n library and necessary data
+ * allowing to use e.g. `Date.toLocaleString` and `String.localeCompare` that
+ * give correct results when using with locales other than en-US.  Note that
+ * this variant is about 6MiB larger per architecture than default.
+ */
+def jscFlavor = 'org.webkit:android-jsc:+'
+/**
+ * Whether to enable the Hermes VM.
+ *
+ * This should be set on project.ext.react and mirrored here.  If it is not set
+ * on project.ext.react, JavaScript will not be compiled to Hermes Bytecode
+ * and the benefits of using Hermes will therefore be sharply reduced.
+ */
+def enableHermes = project.ext.react.get("enableHermes", false);
+
 android {
     compileSdkVersion rootProject.ext.compileSdkVersion
-    buildToolsVersion rootProject.ext.buildToolsVersion
+
+    compileOptions {
+        sourceCompatibility JavaVersion.VERSION_1_8
+        targetCompatibility JavaVersion.VERSION_1_8
+    }
 
     defaultConfig {
-        applicationId "com.apolloschurchapp"
+        applicationId "com.apolloschurch.app"
         minSdkVersion rootProject.ext.minSdkVersion
         targetSdkVersion rootProject.ext.targetSdkVersion
-        versionCode 1
-        versionName "0.4.0"
+        versionCode 24
+        versionName "1.3.0"
         ndk {
-            abiFilters "armeabi-v7a", "x86"
+            abiFilters "armeabi-v7a", "x86", "arm64-v8a", "x86_64"
         }
+        resValue "string", "build_config_package", "com.apolloschurchapp"
     }
     splits {
         abi {
             reset()
             enable enableSeparateBuildPerCPUArchitecture
             universalApk false  // If true, also generate a universal APK
-            include "armeabi-v7a", "x86"
+            include "armeabi-v7a", "x86", "arm64-v8a", "x86_64"
         }
     }
     buildTypes {
@@ -126,7 +172,7 @@ android {
         variant.outputs.each { output ->
             // For each separate APK per architecture, set a unique version code as described here:
             // http://tools.android.com/tech-docs/new-build-system/user-guide/apk-splits
-            def versionCodes = ["armeabi-v7a":1, "x86":2]
+            def versionCodes = ["armeabi-v7a":1, "x86":2, "arm64-v8a": 3, "x86_64": 4]
             def abi = output.getFilter(OutputFile.ABI)
             if (abi != null) {  // null for the universal-debug, universal-release variants
                 output.versionCodeOverride =
@@ -134,20 +180,28 @@ android {
             }
         }
     }
+    packagingOptions {
+        pickFirst '**/armeabi-v7a/libc++_shared.so'
+        pickFirst '**/x86/libc++_shared.so'
+        pickFirst '**/arm64-v8a/libc++_shared.so'
+        pickFirst '**/x86_64/libc++_shared.so'
+        pickFirst '**/x86/libjsc.so'
+        pickFirst '**/armeabi-v7a/libjsc.so'
+    }
 }
 
 dependencies {
-    compile project(':react-native-image-picker')
-    compile project(':react-native-music-control')
-    compile project(':react-native-device-info')
-    compile project(':react-native-video')
-    compile project(':react-native-svg')
-    compile project(':react-native-splash-screen')
-    compile project(':react-native-linear-gradient')
-    compile project(':react-native-custom-tabs')
-    compile fileTree(dir: "libs", include: ["*.jar"])
-    compile "com.android.support:appcompat-v7:${rootProject.ext.supportLibVersion}"
-    compile "com.facebook.react:react-native:+"  // From node_modules
+    implementation fileTree(dir: "libs", include: ["*.jar"])
+    implementation "com.facebook.react:react-native:+"  // From node_modules
+    implementation 'com.facebook.fresco:animated-gif:2.0.0'
+
+    if (enableHermes) {
+      def hermesPath = "../../node_modules/hermesvm/android/";
+      debugImplementation files(hermesPath + "hermes-debug.aar")
+      releaseImplementation files(hermesPath + "hermes-release.aar")
+    } else {
+      implementation jscFlavor
+    }
 }
 
 // Run this once to be able to run the application with BUCK
@@ -156,3 +210,6 @@ task copyDownloadableDepsToLibs(type: Copy) {
     from configurations.compile
     into 'libs'
 }
+
+
+apply from: file("../../node_modules/@react-native-community/cli-platform-android/native_modules.gradle"); applyNativeModulesAppBuildGradle(project)
diff --git a/apolloschurchapp/android/app/build_defs.bzl b/apolloschurchapp/android/app/build_defs.bzl
new file mode 100644
index 0000000..fff270f
--- /dev/null
+++ b/apolloschurchapp/android/app/build_defs.bzl
@@ -0,0 +1,19 @@
+"""Helper definitions to glob .aar and .jar targets"""
+
+def create_aar_targets(aarfiles):
+    for aarfile in aarfiles:
+        name = "aars__" + aarfile[aarfile.rindex("/") + 1:aarfile.rindex(".aar")]
+        lib_deps.append(":" + name)
+        android_prebuilt_aar(
+            name = name,
+            aar = aarfile,
+        )
+
+def create_jar_targets(jarfiles):
+    for jarfile in jarfiles:
+        name = "jars__" + jarfile[jarfile.rindex("/") + 1:jarfile.rindex(".jar")]
+        lib_deps.append(":" + name)
+        prebuilt_jar(
+            name = name,
+            binary_jar = jarfile,
+        )
diff --git a/apolloschurchapp/android/app/debug.keystore b/apolloschurchapp/android/app/debug.keystore
new file mode 100644
index 0000000000000000000000000000000000000000..364e105ed39fbfd62001429a68140672b06ec0de
GIT binary patch
literal 2257
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
EA81kH<^TWy

literal 0
HcmV?d00001

diff --git a/apolloschurchapp/android/app/proguard-rules.pro b/apolloschurchapp/android/app/proguard-rules.pro
index a92fa17..11b0257 100644
--- a/apolloschurchapp/android/app/proguard-rules.pro
+++ b/apolloschurchapp/android/app/proguard-rules.pro
@@ -8,10 +8,3 @@
 #   http://developer.android.com/guide/developing/tools/proguard.html
 
 # Add any project specific keep options here:
-
-# If your project uses WebView with JS, uncomment the following
-# and specify the fully qualified class name to the JavaScript interface
-# class:
-#-keepclassmembers class fqcn.of.javascript.interface.for.webview {
-#   public *;
-#}
diff --git a/apolloschurchapp/android/app/src/debug/AndroidManifest.xml b/apolloschurchapp/android/app/src/debug/AndroidManifest.xml
new file mode 100644
index 0000000..fa26aa5
--- /dev/null
+++ b/apolloschurchapp/android/app/src/debug/AndroidManifest.xml
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="utf-8"?>
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools">
+
+    <uses-permission android:name="android.permission.SYSTEM_ALERT_WINDOW"/>
+
+    <application android:usesCleartextTraffic="true" tools:targetApi="28" tools:ignore="GoogleAppIndexingWarning" />
+</manifest>
diff --git a/apolloschurchapp/android/app/src/main/AndroidManifest.xml b/apolloschurchapp/android/app/src/main/AndroidManifest.xml
index a1ed157..4d1e19d 100644
--- a/apolloschurchapp/android/app/src/main/AndroidManifest.xml
+++ b/apolloschurchapp/android/app/src/main/AndroidManifest.xml
@@ -2,32 +2,32 @@
     package="com.apolloschurchapp">
 
     <uses-permission android:name="android.permission.INTERNET" />
-    <uses-permission android:name="android.permission.SYSTEM_ALERT_WINDOW"/>
+    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
     <uses-permission android:name="android.permission.CAMERA" />
-    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE"/>
+    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION"/>
+    <uses-permission android:name="android.permission.FOREGROUND_SERVICE" />
 
     <application
       android:name=".MainApplication"
       android:label="@string/app_name"
       android:icon="@mipmap/ic_launcher"
+      android:roundIcon="@mipmap/ic_launcher_round"
       android:allowBackup="false"
       android:theme="@style/AppTheme">
+      <meta-data
+        android:name="com.google.android.geo.API_KEY"
+        android:value="@string/GOOGLE_MAPS_API_KEY"/>
       <activity
-        android:name=".LaunchActivity"
-        android:theme="@style/LaunchTheme"
-        android:label="Apollos Church">
+        android:name=".MainActivity"
+        android:label="@string/app_name"
+        android:configChanges="keyboard|keyboardHidden|orientation|screenSize"
+        android:windowSoftInputMode="adjustPan"
+        android:launchMode="singleTask">
         <intent-filter>
             <action android:name="android.intent.action.MAIN" />
             <category android:name="android.intent.category.LAUNCHER" />
         </intent-filter>
       </activity>
-      <activity
-        android:name=".MainActivity"
-        android:label="@string/app_name"
-        android:configChanges="keyboard|keyboardHidden|orientation|screenSize"
-        android:windowSoftInputMode="adjustResize"
-        android:launchMode="singleTask"
-      />
       <activity android:name="com.facebook.react.devsupport.DevSettingsActivity" />
     </application>
 
diff --git a/apolloschurchapp/android/app/src/main/java/com/apolloschurchapp/LaunchActivity.java b/apolloschurchapp/android/app/src/main/java/com/apolloschurchapp/LaunchActivity.java
deleted file mode 100644
index 6c4d404..0000000
--- a/apolloschurchapp/android/app/src/main/java/com/apolloschurchapp/LaunchActivity.java
+++ /dev/null
@@ -1,16 +0,0 @@
-package com.apolloschurchapp;
-
-import android.content.Intent;
-import android.os.Bundle;
-import android.support.v7.app.AppCompatActivity;
-
-public class LaunchActivity extends AppCompatActivity {
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-
-        Intent intent = new Intent(this, MainActivity.class);
-        startActivity(intent);
-        finish();
-    }
-}
\ No newline at end of file
diff --git a/apolloschurchapp/android/app/src/main/java/com/apolloschurchapp/MainActivity.java b/apolloschurchapp/android/app/src/main/java/com/apolloschurchapp/MainActivity.java
index 3824a3a..27565e6 100644
--- a/apolloschurchapp/android/app/src/main/java/com/apolloschurchapp/MainActivity.java
+++ b/apolloschurchapp/android/app/src/main/java/com/apolloschurchapp/MainActivity.java
@@ -1,13 +1,15 @@
 package com.apolloschurchapp;
-
 import android.os.Bundle;
 import com.facebook.react.ReactActivity;
+import com.facebook.react.ReactActivityDelegate;
+import com.facebook.react.ReactRootView;
+import com.swmansion.gesturehandler.react.RNGestureHandlerEnabledRootView;
 import org.devio.rn.splashscreen.SplashScreen;
 
 public class MainActivity extends ReactActivity {
     @Override
     protected void onCreate(Bundle savedInstanceState) {
-        SplashScreen.show(this, R.style.SplashScreenTheme);
+        SplashScreen.show(this);
         super.onCreate(savedInstanceState);
     }
     /**
@@ -18,4 +20,14 @@ public class MainActivity extends ReactActivity {
     protected String getMainComponentName() {
         return "apolloschurchapp";
     }
+
+    @Override
+    protected ReactActivityDelegate createReactActivityDelegate() {
+      return new ReactActivityDelegate(this, getMainComponentName()) {
+        @Override
+        protected ReactRootView createRootView() {
+         return new RNGestureHandlerEnabledRootView(MainActivity.this);
+        }
+      };
+    }
 }
diff --git a/apolloschurchapp/android/app/src/main/java/com/apolloschurchapp/MainApplication.java b/apolloschurchapp/android/app/src/main/java/com/apolloschurchapp/MainApplication.java
index 636bf2d..0bdd47f 100644
--- a/apolloschurchapp/android/app/src/main/java/com/apolloschurchapp/MainApplication.java
+++ b/apolloschurchapp/android/app/src/main/java/com/apolloschurchapp/MainApplication.java
@@ -1,16 +1,12 @@
 package com.apolloschurchapp;
 
 import android.app.Application;
+import android.util.Log;
 
+import com.facebook.react.PackageList;
+import com.facebook.hermes.reactexecutor.HermesExecutorFactory;
+import com.facebook.react.bridge.JavaScriptExecutorFactory;
 import com.facebook.react.ReactApplication;
-import com.imagepicker.ImagePickerPackage;
-import com.tanguyantoine.react.MusicControl;
-import com.learnium.RNDeviceInfo.RNDeviceInfo;
-import com.brentvatne.react.ReactVideoPackage;
-import com.horcrux.svg.SvgPackage;
-import org.devio.rn.splashscreen.SplashScreenReactPackage;
-import com.BV.LinearGradient.LinearGradientPackage;
-import com.github.droibit.android.reactnative.customtabs.CustomTabsPackage;
 import com.facebook.react.ReactNativeHost;
 import com.facebook.react.ReactPackage;
 import com.facebook.react.shell.MainReactPackage;
@@ -29,17 +25,11 @@ public class MainApplication extends Application implements ReactApplication {
 
     @Override
     protected List<ReactPackage> getPackages() {
-      return Arrays.<ReactPackage>asList(
-          new MainReactPackage(),
-            new ImagePickerPackage(),
-            new MusicControl(),
-            new RNDeviceInfo(),
-            new ReactVideoPackage(),
-            new SvgPackage(),
-            new SplashScreenReactPackage(),
-            new LinearGradientPackage(),
-            new CustomTabsPackage()
-      );
+      @SuppressWarnings("UnnecessaryLocalVariable")
+      List<ReactPackage> packages = new PackageList(this).getPackages();
+      // Packages that cannot be autolinked yet can be added manually here, for example:
+      // packages.add(new MyReactNativePackage());
+      return packages;
     }
 
     @Override
diff --git a/apolloschurchapp/android/app/src/main/res/drawable-hdpi/ic_stat_onesignal_default.webp b/apolloschurchapp/android/app/src/main/res/drawable-hdpi/ic_stat_onesignal_default.webp
new file mode 100644
index 0000000000000000000000000000000000000000..b240272929702062ffea691abc6a09dce8973322
GIT binary patch
literal 334
zcmV-U0kQs4Nk&FS0RRA3MM6+kP&iCE0RR9mBftm{ucDxB8^-)ew>u!_fBqe|Z6nFK
zm8E^}>VP8y000<<VR!(*00tp02q3@^L<m9LxDdi00qhd|_PGEb0ubSY5WwRgKoCNR
zo{SS>7)}5HfGkP2P1~B+wr$(C&FX(+#=>0p-uJ#E`ac2oFR!ktsi~<h)Jbr#%yMY6
zNX32VrMAQn(XkR+vHb#dud$Ctzj1))JAi4w1KC)R3%BM^8R!r?y=DO(D(qaAy)I?V
zY)<Yge7ezov-WR*A)i&bGc!ArEtkqiS&<oet@9X0`=sp~VBBLzZY_8!hYs~`vJ{$<
z&*r=dv?tW^1u&a;BsUg4k;|;sFIkLD3f(#LXjiQ1Q&w}X<k}LC<*_oY7u_38+!lt@
g)&q_^NmWl?Z}ll7xKE_)`W+=yy!(AM#QrY<02vCIEdT%j

literal 0
HcmV?d00001

diff --git a/apolloschurchapp/android/app/src/main/res/drawable-mdpi/ic_stat_onesignal_default.webp b/apolloschurchapp/android/app/src/main/res/drawable-mdpi/ic_stat_onesignal_default.webp
new file mode 100644
index 0000000000000000000000000000000000000000..aedbdbaf632c4d2195d0d160965bcfe99022b791
GIT binary patch
literal 254
zcmV<a00I9}Nk&HY00012MM6+kP&iEK0000l7r+G&Co=!@KmQ8bwrx|D+`R(j0003h
zgb)D`fdJy7V&EePDi(kcqM;(F2!es&K!}cy0U<y|LjZyR1Yn_}<6>e$01*HH0L0q1
zO*=cbtsfgdc0OnSRXvT71|s?|AW4kQ<o_C3Tv}QhZDJF4nz(^>gQq*to3D2O9M^l{
zz0F7M%R`R#u~O%h!NPQx^EzL=CJ%g%R=<YBWEbnzuISGvQys1=AOGPwN$&Zbtg?kx
zl5AtI${oGAB$@o<vErF7PbqXuf1#{}i?u>$I4OHm(`V_~VI8YQ8@0PE8k?wXJpWJt
E0LON3uK)l5

literal 0
HcmV?d00001

diff --git a/apolloschurchapp/android/app/src/main/res/drawable-xhdpi/ic_stat_onesignal_default.webp b/apolloschurchapp/android/app/src/main/res/drawable-xhdpi/ic_stat_onesignal_default.webp
new file mode 100644
index 0000000000000000000000000000000000000000..617b9bce20254332c96d4dfe0c0a766879a38a9c
GIT binary patch
literal 416
zcmV;R0bl-7Nk&GP0RRA3MM6+kP&iDC0RR9mFTe{BucM%C8_E1h-;<5Q{LeqbwrwM)
zD#`b%ZQF)fQ|UKw&Hw-a+;s>bfOrsq0AUD22%rIolLg=f7=ReUA1D>>2UxaYMHp`E
zJBor3EX@dlJHbcnO8}5<+cq7Y7-h#S+qRXmZ7Vqc-^hOV-IG!`qW=>>|5A%#!IXS3
zt|^pmHXJIHEu-@Ssm>X3q%a0qai%a%RUVv$5N74(LYPupD*(s6TDnZGkzr~YaG%@?
z>WrctvC=Q_S!}rlTqo7TaFu8hjYw^ycA_x4vdGjjeD@Mrt^vnnhS4$+(Kwowxj?OX
zA@uB$h%$Wh<k2PIHi;RuL~snH1e}kk2?bH6LSGBR7Z;*4!2SBx(IOd+pgnEnY1Cj8
zK<wAm$MDH%L?>uW*DhKh#bI<~)#GDaui{6X&@+l294d5-=CxR^&>SfbqF0ZOIOC+6
z4{?W%IdpGVqeHZz!TpR5dQEPkY?Zlo79KE{k~%U~nUUgvnSK_ZFtaarXH)ZX0VdUo
Kx(YC=_MZk;NW9|!

literal 0
HcmV?d00001

diff --git a/apolloschurchapp/android/app/src/main/res/drawable-xxhdpi/ic_stat_onesignal_default.webp b/apolloschurchapp/android/app/src/main/res/drawable-xxhdpi/ic_stat_onesignal_default.webp
new file mode 100644
index 0000000000000000000000000000000000000000..0668394cd69f44ae8416cc2c81c753387c4b397a
GIT binary patch
literal 582
zcmV-M0=fNCNk&FK0ssJ4MM6+kP&iC60ssInN5ByfzoejT8_E1hZ@WD@2=hPx1d_J+
z+pfrM+a~Ljw0s8^17<=9;rO5@LI6Ps5J31OwdXm8;Sq-kg4%ngehJ4f%pgB)@8PA`
zw#RIF@8LL(8uXMkhw38%WZSlF+R=(_+qRvQZCA{)E4FQ|56-=Fuf6tLo+A1`0d!3<
zw-hY)bt#GADwiH%LoUr>M`7;dvtfrj?@j(X6S!$|ndnL#8$WPm%xu<?s8ch}apNWn
zzI9_<Vm-ix6c(*<;fc(M13vS>;6vazLSG?+l?j*LxJzF*uoX!EfdA@(w}Bp_TL33(
zYhbXPDE<O?r0p}X;ZH<=fH`F`XTV1yq8k9`>$=Tg>6O@X;DfFSV9oCe{Q@?FG^H{4
zjy!e(T&L+7QsgQ63>Z`7y9liMdZHh|X_TH42H%j^c7Si{=|c*<MV<oVYC?8_Wgl<!
z72p&tO$@#!uoZct<r|WRgr5KlK04ygfkhvLJ^@^)<1T|Q32sKZbxb1JSlBVJ6RaVF
z!Fe(q1-L=O3*@;;Bl1Oo?=q5Q5_$-n#n>xjaE^?J0ls6eA9-q4k4#t#-A6LbLiPbp
zv(>`j3<(Y*&uslf9!u0BOTKmzE|7GI;9Y=A?A&8;nnVYXK08y$Lz!x1FT_R`qp31M
z+W<G&c!eDI3a=pFE%>h@8qee8Dp>hlxj}7{Vqu5cI76z9)xVVbt#8FoCh<}qm&@E|
U2m57aTsR1o2xKQ)B(7}&01H|SRR910

literal 0
HcmV?d00001

diff --git a/apolloschurchapp/android/app/src/main/res/drawable-xxxhdpi/ic_stat_onesignal_default.webp b/apolloschurchapp/android/app/src/main/res/drawable-xxxhdpi/ic_stat_onesignal_default.webp
new file mode 100644
index 0000000000000000000000000000000000000000..fc1df4c85f09f462e869ef0e65b488cc3493dc49
GIT binary patch
literal 828
zcmV-C1H=4MNk&FA0{{S5MM6+kP&iB{0{{RoU%(d-FQ%Yv8!7xr?`wMpVgBb|A%FlV
zXcV?>+a%qScL25EBO!a~2rAeQX67HL2UZh2fR)GxL8>A!I2{tD${6dhp#30l{iVf<
z*HanR{v`;>wr!iXGoNk6c{XFb*tTukwr$(CjrnO=Ypa$@ME@PRZRAMi&fS|j{s8|C
zMXC^*h=)}C&O>0@QZ)&IS*PbJ!V>pR4=WIq-UbhsA}D)J@+=Ag$^K~)c0oYK8a>>K
zfLt`omt+K^h=v9t7z<2uESxdvv1$G^Lm=AI*i-~!qj_#33<)32!)gSfFD)!b5DwVn
zMKl7C``adLL;xmGwqY1$+Yx{(l-0*8zp`(s@UB#Oo<v|XWkcZIVtq1er0k^s<<L{g
zYJu4I6#Z=h&pIj3Ba>ldI{Z?<<wXF{m9jhVE9o<3RR9q4R{g5H>QC7N007ogwh~?)
zrffa{039iN9RrV={4ra~MZcn~J3N|9*<Ji&HDx>D(RIq^m`<eM)8S1e6{Yw`)C<an
z!<%K4-GX2xWoO_^)N{&aTI@pd;e|dxuvi=opHVgoo@}G+8br$}yAMB7zS<0+4OBG1
zi$PlVLS-rWgt9g8;y7iO?S9g4<KRK_zm!eUTGdj~6CO;{nzx4L5oNpK!7a)zK(&an
zpP6v3#(EoHt@RoO=T>OFO_mQ2C_4|=qF+*W&cSA?5RP@zT91c;3a!~(IJSez>dI^f
zc28R}MZl@FZ<L*ekvUYfgHuDb&SPMtOzXBDPMy*=sHTTlw<-G&4~JT5W6}v2nngt)
zI5b0RJQ9XVw08U8&^_&pFW1qs=2s4!snb4?qcApI>o*S0tkU`pgRw%b-zB&b`$qe`
zvtaJB_9}rRJ+!umU}37(a3LJorL`Rl3;EP`osLeEGk$1OR))(1wGMD%gw}OGtW456
zZh{kMou0n6)H;4jgaZZC+`nN*JrwEZBD3k$L01<59{tX<PaAqR(LQVG*;O|e0DhI*
zrWd_iVw*km?pc(B3jp6b+hsHZu*EJH=$QNKf+7ZCfKBEx2uE!4n2x!>E{JFvh$Q?+
G1^@t4ZiHz7

literal 0
HcmV?d00001

diff --git a/apolloschurchapp/android/app/src/main/res/drawable/background_splash.xml b/apolloschurchapp/android/app/src/main/res/drawable/background_splash.xml
index cee9de4..19383f0 100644
--- a/apolloschurchapp/android/app/src/main/res/drawable/background_splash.xml
+++ b/apolloschurchapp/android/app/src/main/res/drawable/background_splash.xml
@@ -2,12 +2,12 @@
 <layer-list xmlns:android="http://schemas.android.com/apk/res/android">
 
     <item
-        android:drawable="@color/deep_water"/>
+        android:drawable="@color/primary"/>
 
     <item
         android:width="95.28dp"
         android:height="100dp"
+        android:top="-24dp"
         android:drawable="@mipmap/splash_icon"
         android:gravity="center" />
-
 </layer-list>
diff --git a/apolloschurchapp/android/app/src/main/res/layout/launch_screen.xml b/apolloschurchapp/android/app/src/main/res/layout/launch_screen.xml
index 852bd17..6e78d8b 100644
--- a/apolloschurchapp/android/app/src/main/res/layout/launch_screen.xml
+++ b/apolloschurchapp/android/app/src/main/res/layout/launch_screen.xml
@@ -3,13 +3,11 @@
     android:orientation="vertical"
     android:layout_width="match_parent"
     android:layout_height="match_parent"
-    android:background="@color/deep_water"
+    android:background="@color/primary"
     android:gravity="center">
-    <ImageView
 
+    <ImageView
         android:layout_width="95.28dp"
         android:layout_height="100dp"
-        android:layout_marginTop="-24dp"
-        android:src="@mipmap/splash_icon"
-    />
+        android:src="@mipmap/splash_icon" />
 </LinearLayout>
diff --git a/apolloschurchapp/android/app/src/main/res/mipmap-hdpi/ic_launcher_round.png b/apolloschurchapp/android/app/src/main/res/mipmap-hdpi/ic_launcher_round.png
deleted file mode 100644
index 1b523998081149a985cef0cdf89045b9ed29964a..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 5024
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

diff --git a/apolloschurchapp/android/app/src/main/res/mipmap-hdpi/ic_launcher_round.webp b/apolloschurchapp/android/app/src/main/res/mipmap-hdpi/ic_launcher_round.webp
new file mode 100644
index 0000000000000000000000000000000000000000..f77fb4bc60914a3e469a4761dacc5b047738fcca
GIT binary patch
literal 1876
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
O4L`T#9A8WR=9>eIC7pZ#

literal 0
HcmV?d00001

diff --git a/apolloschurchapp/android/app/src/main/res/mipmap-mdpi/ic_launcher_round.png b/apolloschurchapp/android/app/src/main/res/mipmap-mdpi/ic_launcher_round.png
deleted file mode 100644
index 115a4c768a20c9e13185c17043f4c4d12dd4632a..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 2858
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
IM6N<$f{l1_%m4rY

diff --git a/apolloschurchapp/android/app/src/main/res/mipmap-mdpi/ic_launcher_round.webp b/apolloschurchapp/android/app/src/main/res/mipmap-mdpi/ic_launcher_round.webp
new file mode 100644
index 0000000000000000000000000000000000000000..42aa619f04951d7e857d309cb6326bc2479fe766
GIT binary patch
literal 1056
zcmV+*1mF8oNk&E(1ONb6MM6+kP&iBr1ONapFTe{BH|8jkWLc@do<1N6{}NF0{xZ{b
z!~(;%Z6opaANZ|pNRcEtl49iR1f=7S;!x<Gihx_&wrXXb`vup?C8Q6EAR?s!+94<U
zA!RU#+}$0Xd`|$xA5Z}SDj>iB2oNBFItY-!AgF>WsDlKCKn+w?<9xn)E(|U<E;cp}
zM*WX87X1$!qf|CIvPojoM@G-RBx11XGy2HJrN5EHBxgMLl7*!{B{HdZu}NZdKaWK9
zK4@~1C`bK|MECPBGU{J_h7Ch~BS$v%E^cFoO@c%$4vB1RToN(3Fi?6bK!7gDK&CSB
zIoUe$O_tz76tmrA>x0n=ji>;7*kVF}1lrTJ4Q4*7AFw2#Tn&V|>Z*S<5p__2OF4yO
zf3eS_9aY6~wL8Zbv%9+|+dkW_o42hvyc9p5>+x)YnPxjI%LBcNXSq_IP`%q<_Ly#2
zEl{l38h-wZ8)08$i*0SP|DOJxeh%79JyyE>oy1yIt=s>Xn*RFO{&?>}!nSQ^-im+T
zH^qnA);-&{ZF}pi`mJqiwr$(nA4~E+NsmSJe*)<Lc=u+*t($iTN@HC`X|YmD6_-}j
zHM(}YzDzO8>TkPoqqamjSW<h#DRI42Ib3>OIFeOeq#Q4*&T`;RrE<0M4(ngJa=H8;
zLslu*tE85wQOvxYoSd9ohN=-7;#whR7644(6kZc{?>ZIp@E{X*F;wR}8*xQ(*TQlM
zM_mzCe>+%{tw!Z=I{sS7tBSh^wp%#rsx$>%W-SFUb}E25tjj^Bw{4u<(Eyfh05JFn
zr|m5f$$N^s4FGl@9Rgq-N8OV|ftOhG0E}-}vjI$DT?!=fT;LoV3Sfm&8v$S+=YogG
zcZRbb0QM?%Vkm&+oHITme-CFmfQd>eH5b5`JVuY7D71xf0035*HUq$RMoTDBSQlfZ
zX}{^@Z~zM!U13C_{dxuC08Cbv^8pMyuGb$*6mn5-2LP<L+6n+0^e%=F`S0s3GG$wx
z9tmKE-hDrj_o>#Y5dfws+l2s-t@YGP6#P+Z69BAjx7}u1rS&nG$cX9FnQ7vVZ`bIH
zF^DMiiN--Vx>Msx7!i@@eWBeNXBOKPe(;!#xJP!AoEe#K^C-?R3IEp?tM)?<+q8W3
z3lka9&#c^j7HyEV_s7|RaQ26nY-QxPZuh#sMM^sgi2dB^R_o{30MZRgeAD7i%bUa?
z(iWbiFTHN`eo68OJrbUT@8_L6_dUTQh${l4f4}T@ru*gZ=s-aZ8sRCwo;UNFpZ`h;
zH^^BT9F_L-^}{BeriZV8rbPuya$I^NlQRB%diCP*g9nday!!MfBPr4=$yFKTi-=E7
aP0!3sPfd=G@C8X4fI>=X7*a|>P67a|pzpu{

literal 0
HcmV?d00001

diff --git a/apolloschurchapp/android/app/src/main/res/mipmap-xhdpi/ic_launcher_round.png b/apolloschurchapp/android/app/src/main/res/mipmap-xhdpi/ic_launcher_round.png
deleted file mode 100644
index 459ca609d3ae0d3943ab44cdc27feef9256dc6d7..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 7098
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

diff --git a/apolloschurchapp/android/app/src/main/res/mipmap-xhdpi/ic_launcher_round.webp b/apolloschurchapp/android/app/src/main/res/mipmap-xhdpi/ic_launcher_round.webp
new file mode 100644
index 0000000000000000000000000000000000000000..7a797f0543d54597689b0cc60bdbe0991041fd5d
GIT binary patch
literal 2506
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
Uz23=piwDP1nn~^NeJ_6+1efmf_y7O^

literal 0
HcmV?d00001

diff --git a/apolloschurchapp/android/app/src/main/res/mipmap-xxhdpi/ic_launcher_round.png b/apolloschurchapp/android/app/src/main/res/mipmap-xxhdpi/ic_launcher_round.png
deleted file mode 100644
index 8e19b410a1b15ff180f3dacac19395fe3046cdec..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 10676
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
a9sdtN6eHRrdyqB&0000<MNUMnLSTYHIB(_v

diff --git a/apolloschurchapp/android/app/src/main/res/mipmap-xxhdpi/ic_launcher_round.webp b/apolloschurchapp/android/app/src/main/res/mipmap-xxhdpi/ic_launcher_round.webp
new file mode 100644
index 0000000000000000000000000000000000000000..11057db4ed3eaf8b8d688659f3f54e90a3dfa04d
GIT binary patch
literal 4034
zcmV;z4?XZwNk&Gx4*&pHMM6+kP&iDj4*&o!kH8}k-eAx+lB1YE?5ke@M8pL2aXG<R
zotQ4HT1|yL2z!+Viw3mRa^tV9ZQJ%Zjq_}J@4ffld+)t>dKHp3-*e<A<!k;_{=)tN
zU`8{~yp#3`ElaRy!U54<dBwsZFIcn@!o!MvDK5gnf`F8jhrD>`yR<`Y!e!hPMUvF?
z5iCTFNWdpX;4jP8w&QtrZQHhO+l=-3OY(kidfbkvhaFRg@Q*+O0Dxs9*|u%lwr$(C
zZQHhO+qQl8_Ma69k|einZU~YB4yRQzVFW%vuD1W@zZ|Y@+g7%1+qP}nwd?)<d|uyU
z$nGe5=dsOAUH>WfTGQU-3l0DP1d}=2wr$(CZQHhO+qP}nw(U*`0RRwe63@16+qP}n
zHg6+9{~fk%BS~Qc+V^JXI;i?59{?l(#TWohDF9OmN@=+aQ^j?u1;Bp8Q-nMzQ>m$@
z&D7Io7G^U`E;G-!o7dQd4!dUbiHmEu)?00+o(rch85UJtRkOnPw?>qurWQ8yG`rC4
z6c3yh&rT6YVD#`-gV9pqYN{v4$krt)QW}>D#SYCOm&u8T-PJ~UhAMJ?txsh$3vq~>
zPVs}IaOdm=FX<U3wSMdaW{JwiE{s2D@y-!B_e_V^qQsss3c%$_c*}%Zr^Ovd=l`Rp
zb;`($t>;Tb?LzMzt_XKdCUo*bGpZLz<sHHpSCHO8!W>MhXB+W2glVoYcFoi?IyK3u
zWqrdZoHDbl2Q6N?;?y7Qu?VTeC;(p|H+6`&oCqG@^HD}ZuJJQ18oMyciQ$B0D4uCj
zU%pJ+A^zk9LA^eOLoxv7!!Dqdm}Zp!Z6S#}hqo-IsN2u9=<UK1CywhrgPF>?<wz8q
znqQniYK|)9Wl{hkPh#X0pE!}6J;+c~kpv(X%H5sf8z+>h6A1-2(@GSpVmZMKBrFp>
z0Z1jL1)OMhHOs_KCF*2OIF02SZjC~jFDIUaMor9=ZESUp6VJIT<-zct^>>CEPK#%*
z0!DA5Jt_13)OTK|#XqhJj@|SzoTPuuWjwpE$5q1C<2pl$4xkpRYd9()K!6I{JQzm^
zZc;7B*q-Ck!_{-*|6j3n_X3XIMhMO_-}jNvA>JXsl(maHZLC~Gh>afkzK?tW0+a3Z
z76-BH!WQleVGbkRR1@;c;OxB#oyl|pQ1T_A9GT$>DSZw+zDK}Az};8VmMJgq%bqbi
z#D5%@P%v=k*^@rjT2BuSzqTbS%QOJ=5_JbhrdCd74i<Ec(B&sRhAAiFFSNBeHq)z{
zE_3|%F9{!mPVbNrkm+x*7uPPFaAaao5r^NuT*i8NdeQB4NN3XPWEp#LY&u$5&B?mu
z9Xx(gauw!#iH&%6^K*{PveCKQSOEtM9d8%T+I&pv1?tzj&K#RG3Zgk0nUaC$Z%Vve
zG2csU#4R&F<k$=diMY=0tLHEX2%VqOeN0;UueGf>IzL>;>Xnr6{;QITnGe9RnXRMC
zFBcY=vzhg6qTSw*asZ$K<ZpW;$<cY`K1V*kW6_aBi+HK)#{e9Fl`kzs7asu+dEq|R
z+0H?<3qjrGLzZ}v^+aXDXLRwu%)^SwCDEFnOfXkw0cbz**_flVpmS)VB|}r~m7GaK
zfgeL($a493qe$M4F8#~#-#-(zGc|>RfV<A0<cvWPF`{j6xOzynw>m^Uf-b$6hu1_$
zzkY7<tlY8f@cxisBO%R&v*r1bucjQG%O;xB(j!awc_yn67ZYv4V~IcZ0l3*lh3LWy
z*jf7G@8R~NyBsp9xJtB<X`d-tTLXwoO*gTHYq!PW_pfMV7|CIADY@j}^G75ilweIa
zG||d5{#GYgrm%JY-+lRHq8YU<k}Tk0nXIjm5xzHO#Hnce7{L6ouXaTHY_jGW8j|Fe
zor|2ZsCP`XiI`!El>m6TCYA8)8Feia9enwWM1Ybc2ZhJvmg9eaDMUDe-2m`>BE~d;
zq*%RzuD*52L{rLZr^n<nF-+FS$4{^;DUFGh091DK@964Iwsw=%D=N;Y*|2_)V;&H!
ztx>E1fB`Vx?g$r0TQRvb(f)_Ga2WWEn*M<y<?Ix3a|m{1#}XO<3t)fEGd*n08PsHx
zO)My%nUhIFQF6wl=RyDgu-0lr%=2fy2V!d;6cIC7wTx8gS+lT}bN1f6gh4^X8WeG4
z8GtCuuozkL!)*sQ6YaTvmX_(gy?n~~X{M$o*6Gd+6V?Ps^JRm`k}Jf;%HfX7Do8<T
z<U}QCc2k#FCnK7`D1ZV`7RncpB~L1<nyf-pq&;8aVj~_4MW`ah{7{+-+kgN~v2qJn
z@y~<LA11mH3Id8r-CaD&8S3ijBvjp8NKn!80Q4p56I{h@42?ctoymmQ<9~m0((2g_
zp)%VZq3r;SHnUH-iWl{cm3gByEghaIO<8nQBHirS5f}g)1DNc>Z&bl4M7X<NE6~n%
z4rPYMB#0Dn#|(i1SO7EbfL|XUzsZKhrL?F-T#T}s-*NJA5Bm4uYEZ-gR-{&!@apKf
ziL$U~q*PT)OQ9<-zlc@)?V3AGy^l<`W#^)2b+E7~SyRet1p1f1TEqahGPCcPdPk?_
zlmi_U9@DepFp$T-f90%0ub(Fu&@czLMJ(tqHN8TV8wLgKy?Ie4mx<vJHm`l4bUi1|
zQ~scc0W8I;14Oxvsw$IhSUdQ?6_*T7iL*E<VzJdi#X6$g*-c&LFmJnrMWeuve0(cq
zsiXwL6e`wNV*&$UVgO^FbPi8#946}M*N<|PnbZ`gv{?-urL12-kTA<VF_G&6z>sCw
zg{Stt$zHpqwba%rX`8ptgqc3GBXZpY=zi*ZE}q&|Gi#Ie_VPLY%ztzE9mCkE^$3i{
z0qU=N;fE&nzA2&-#Z9YfI4sLBzV4atK7dMvU4#Jn`<>TC6FVe2f!XeAR8c8$`|jT&
z;2;FK0+4&Duul#kevXxb4)GaDYbXe~<K)3)V^Y;MX&Z<wG_}O=gl{C6u-y(206ZnC
z3nZ~sQW8@>egC-r0Lk(u6<3wKxov%7nBkQS6X}!#*mI1hk;G0Zt0@P#i8cCl?B_QD
z2SbP)lPQ3`qH9j1;q@b5a&fdqBg4L-c5nahy?xbhCxrb<%`TCK`$t`|#L?Q$)TI5v
zCg=SgpIg%3jtC!h#j;YfU8Eu)YBT?hqIJo@#AKJ{2&|M4oBCr9@cEHSHHD4<A;6n$
zG=-rxm6TwLf6My)E4ySiEIvhmY@?~>Xoi)W(9!=r@3Jto_VW*#?4h>={?LAd-`8J2
z4r4R(rhJNpf`Rns@mKC?7P(Tr&pA_$z+Veajhu}B-s6l(rK^-^0U%POJeM!EgpX$d
znpV}Iw~6Dz65(HBfcr;2mC4uo!~*m<1{FbHf#gbtiJ55x-EVTpK=%JOP46v89W1Th
z-!%K~po`&u3ZMcMfLN}{x?HW_El^8G=Ja%RbFreE+10~udX*|y>)h6!1uLDBL_cZa
zW6_@PGcUDC#V*{-lREm)UjqHg^5^pp&`WCgjIh^RtTI3b2>(*6Tb|ZG?Z2R3Vg7Re
z1A1wlZShjq!^i+0!2V{3%^aE+Nm}JCNo6S$63~MYUk><~>tXf~Kn+O#N@rM_R%wr2
zVJ762=wasGen`SVI|C4-$#*(t>(IQ((E76<AH?}lzL8{9IBYBK3}Dm((!bT8l+lxW
zqhEPi>FVk1`b6!HVY;>|n&=F_$7yHje~T0Gu|@#%JBRM?;OcN^f(nz1z_k-U*Xoxn
zHX03HD=#B}8d;h1o|rLFTRF0XgVq^-rENwwv)^2GoOg#iHNjCrF+h9otDa_a)seo}
zCsHn<cm?19RP!XeTxBE=##hA3CH(CJD38C#84suU%2mbs-ti&Pzj;#T`T$IT{EvKU
z;;P~YJ~fTGH{{HAHmMgN0eGKng=UWN4p$M6Z8fL7vZnGfV`pyj_4e4ES5d_M&AA;z
z-o#m!0dQ9Vxlgze=M>+$N_f<LVRc&W#A4I(b^=@nKk%`QtAtYrhn-&8Gr^e=S_A~2
zZG}#j;Tl&3ZTIUIL*jXo0|xs5@fTQYnkPBpDqx^@rZ4DYD2qM<023hda$9T)71x}2
z>dh{90B7lkX?a%wwz1dS?^de*&IzZZVeIybsFO?|0OiIwp!5z${cL9cIMF;EUmCxW
zu5d!y0Mrz~4XC`+$)Hm8PfjpTJ=&B^#VZolriWU>2XA!1t4R5Y6U);1gK$eoFHeY@
z=SsNgm9{zMNl!VUq;{LaS3Ibx%4E8yB?&0K$a>o>!!1rE&HGEq7LU%%D&#E$kOG{5
z!gH-M`-!h3PVs{i#~t4zt!<G|rG&l3ZvgCoEMW9$cXG?j?>J%1w?A=n`9{1VDX<7P
z9bE+^0Npp)@1HL@<3uqtyw<%MO)In%ml@u`HXsD3Ki4YjANw+Vhak6xi~YOX0k6Rn
zTQ!{ku!q8}fbmCMPA-z)azglDPkU>4s5+tG%4w4V@E(A~-wkL#*DBj@d);Oi9ytND
ztatTx`%@m5E6WuK0pRxm{7da`u-E@LdTUM*C{D*4?DcP7n(w<S8bdj+Si}#A0~&zE
z$6U?GH92vLKvAatd-=$WKN3q=jD&kgqyqqT5|CK~tUv5hTDH+1SByw&{aROYKakd`
zNycp?GM>&e^J9Qs{d=8B{H^}h9Yuc3PfpiQjm@9w^kiJ!NJ80=S`Z+00|H}ffYn<Z
z4*P+R1I6ke*k?1>^ue{U0e2**87|J0ujH+c0F3iD0WH7`u>Y{j89(=9-Yz`g<wSbc
zYDUlAoCg>I(rT|xP2z6T;ti&@lif{#K4AHLYg|9;Zt+ijpD9v&!N|FPs%2y0SW|a$
zI~DZmB;H?#QC*8g0V@B%1fT{OEY!T#uAnb^SoL$Q`4ZK48DHW%>FLE=H4A{j`H2C4
zV>G6T-N=Tx6C)7^a8iBCb$}G0+}l0~IK0q0&v!eM_<0X1zwg7quXWe*W!E<IJJF7h
z^-(?jpTWA}Ex@Y17f`+k2rl=fHsT3G#u*vEaR5&90Jy3B)#U8NFrYcr4w%>108W6*
z^R01zrELLkaxmguP9}WVrSz+t-K_!hv6}j$?Nd(=Ps}D)_fyjzO|Sf0Cj4GVJ}nfy
z3y{sZ#{s@sK;q`o!I86o4xl@A?AX-W!)K2iEZyv$y)^EgYq=W?X+DdZD!HSVWn{de
z*mN{9)Ymh4d;Bm7@LsyqoID)AJ=xPY6p2p9Lf(vFF=ndl&R%*(15iRc!RieF@9s)8
ox^g!#T^-yBrL~N1Sd^J+z4sZVmSq^auIq*&xD}gO_4h1Q02>V4b^rhX

literal 0
HcmV?d00001

diff --git a/apolloschurchapp/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.png b/apolloschurchapp/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.png
deleted file mode 100644
index 4c19a13c239cb67b8a2134ddd5f325db1d2d5bee..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 15523
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
BIP(Ai

diff --git a/apolloschurchapp/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.webp b/apolloschurchapp/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.webp
new file mode 100644
index 0000000000000000000000000000000000000000..68d16b3bccc675e0cfb4171dc0bf1f5d5a0714eb
GIT binary patch
literal 5496
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

literal 0
HcmV?d00001

diff --git a/apolloschurchapp/android/app/src/main/res/values-v21/styles.xml b/apolloschurchapp/android/app/src/main/res/values-v21/styles.xml
deleted file mode 100644
index fa5365c..0000000
--- a/apolloschurchapp/android/app/src/main/res/values-v21/styles.xml
+++ /dev/null
@@ -1,19 +0,0 @@
-<resources>
-
-    <!-- Base application theme. -->
-    <style name="AppTheme" parent="Theme.AppCompat.Light.NoActionBar">
-        <!-- Customize your theme here. -->
-        <item name="android:statusBarColor">@color/deep_water</item>
-    </style>
-
-    <style name="LaunchTheme" parent="Theme.AppCompat.Light.NoActionBar">
-        <item name="android:windowBackground">@drawable/background_splash</item>
-        <item name="android:statusBarColor">@color/deep_water</item>
-    </style>
-
-    <style name="SplashScreenTheme" parent="SplashScreen_SplashTheme">
-        <item name="android:statusBarColor">@color/deep_water</item>
-        <item name="colorPrimaryDark">@color/deep_water</item>
-    </style>
-
-</resources>
diff --git a/apolloschurchapp/android/app/src/main/res/values/colors.xml b/apolloschurchapp/android/app/src/main/res/values/colors.xml
index 348fc25..62a0e92 100644
--- a/apolloschurchapp/android/app/src/main/res/values/colors.xml
+++ b/apolloschurchapp/android/app/src/main/res/values/colors.xml
@@ -1,4 +1,4 @@
 <?xml version="1.0" encoding="utf-8"?>
 <resources>
-    <color name="deep_water">#00676D</color>
-</resources>
\ No newline at end of file
+    <color name="primary">#00676D</color>
+</resources>
diff --git a/apolloschurchapp/android/app/src/main/res/values/styles.xml b/apolloschurchapp/android/app/src/main/res/values/styles.xml
index 328c4be..de75bed 100644
--- a/apolloschurchapp/android/app/src/main/res/values/styles.xml
+++ b/apolloschurchapp/android/app/src/main/res/values/styles.xml
@@ -9,8 +9,4 @@
         <item name="android:windowBackground">@drawable/background_splash</item>
     </style>
 
-    <style name="SplashScreenTheme" parent="SplashScreen_SplashTheme">
-        <item name="android:windowIsTranslucent">true</item>
-    </style>
-
 </resources>
diff --git a/apolloschurchapp/android/build.gradle b/apolloschurchapp/android/build.gradle
index 00525dc..1881d9d 100644
--- a/apolloschurchapp/android/build.gradle
+++ b/apolloschurchapp/android/build.gradle
@@ -1,15 +1,19 @@
 // Top-level build file where you can add configuration options common to all sub-projects/modules.
 
 buildscript {
+    ext {
+        buildToolsVersion = "28.0.3"
+        minSdkVersion = 16
+        compileSdkVersion = 28
+        targetSdkVersion = 28
+        supportLibVersion = "28.0.0"
+    }
     repositories {
+        google()
         jcenter()
-        maven {
-            url 'https://maven.google.com/'
-            name 'Google'
-        }
     }
     dependencies {
-        classpath 'com.android.tools.build:gradle:2.3.3'
+        classpath("com.android.tools.build:gradle:3.4.1")
 
         // NOTE: Do not place your application dependencies here; they belong
         // in the individual module build.gradle files
@@ -19,34 +23,16 @@ buildscript {
 allprojects {
     repositories {
         mavenLocal()
+        google()
         jcenter()
         maven {
             // All of React Native (JS, Obj-C sources, Android binaries) is installed from npm
-            url "$rootDir/../node_modules/react-native/android"
+            url("$rootDir/../node_modules/react-native/android")
         }
         maven {
-            url 'https://maven.google.com/'
-            name 'Google'
+            // Android JSC is installed from npm
+            url("$rootDir/../node_modules/jsc-android/dist")
         }
         maven { url "https://jitpack.io" }
     }
 }
-
-ext {
-    buildToolsVersion = "26.0.3"
-    minSdkVersion = 16
-    compileSdkVersion = 26
-    targetSdkVersion = 26
-    supportLibVersion = "26.1.0"
-}
-
-subprojects {
-    afterEvaluate {project ->
-        if (project.hasProperty("android")) {
-            android {
-                compileSdkVersion rootProject.ext.compileSdkVersion
-                buildToolsVersion rootProject.ext.buildToolsVersion
-            }
-        }
-    }
-}
diff --git a/apolloschurchapp/android/gradle.properties b/apolloschurchapp/android/gradle.properties
index 1fd964e..ccb748f 100644
--- a/apolloschurchapp/android/gradle.properties
+++ b/apolloschurchapp/android/gradle.properties
@@ -17,4 +17,5 @@
 # http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects
 # org.gradle.parallel=true
 
-android.useDeprecatedNdk=true
+android.useAndroidX=true
+android.enableJetifier=true
\ No newline at end of file
diff --git a/apolloschurchapp/android/gradle.properties.appcenter b/apolloschurchapp/android/gradle.properties.appcenter
index f8c9d46..a50dbd7 100644
--- a/apolloschurchapp/android/gradle.properties.appcenter
+++ b/apolloschurchapp/android/gradle.properties.appcenter
@@ -19,3 +19,5 @@
 
 android.useDeprecatedNdk=true
 android.enableAapt2=false
+android.useAndroidX=true
+android.enableJetifier=true
diff --git a/apolloschurchapp/android/gradle/wrapper/gradle-wrapper.jar b/apolloschurchapp/android/gradle/wrapper/gradle-wrapper.jar
index b5166dad4d90021f6a0b45268c0755719f1d5cd4..01b8bf6b1f99cad9213fc495b33ad5bbab8efd20 100644
GIT binary patch
delta 42314
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
Bz<B@w

delta 40346
zcmZ6yV{j%+&^8*|wsFU{Z5tcgc5=tr*tTukwzIKqW0O74SLal{=l!~BW~ys?`d3%a
z)#|JOugU;NQkDaUfCB-6fdMg6DV0n_B1ZZj&V_F6Adyd#5AP!L-sQms6y$$|fBh#6
z@*jcypY1<__-{G7STceCUowd^q;UVQ!vFIk@r~yH$0eIVZDRk=<>+qM8peP6oc_}#
zp6m=ojH2f4>Sk`Q?BeKT?&4-`?wY(ef&(m7vv))jK?%SDM2s&URvOi&Zm#*LpF}w>
z8sWjlM#8cvR4K>{*&Bmf)_IyaCO+0bN87VMK))BqGz+JafTG_G&t3CB&G7Seza5>e
z-+@ed*^tEs!@@&?+tO@vHpazbaH?sq-4defb=Z<2jSsX1`65hW8|+v93hz+kHv>wq
z43!yaSNR5cEer5qJu(Qr(wM9dL%kt)K0gOw$XB#sv(ykjlT#|bns1=0dXtgewHV%1
zwZWvU@6)CrtX+|yG@U*H&_=v<kj<y<Wp<y#wvv0q)IFK5Ap<6|v!CEKankfeZ`3*s
z0NJJ)*iZ=gij6-(z+(rJ6h47U6X3oexO5+znp|fQG&<joF<?f<j2U^T&hEEX9+A>1
z7_Bu87OQp%o~s!PeOu~f3h(E{9T_Pie}i(coaa4s$G(l(xbUALG5#e&B7Co*hA-f-
z`NX#-4`|I?4v3hC@U!=VON2kp(q~@y&L@JNqCdTa43m{c6fgoOPeJCd6wt<lRgz3y
z+tyVlH7WUbs2YD2%W-)Nch$v}L8h~O&7z@&2+(=txps+Mw<uRG%>V<dZ64)IUJ*e@
zH#vl4++4TT7|c$eJX;v)1GQ6DCHADB^k-Kw$8=C}bBssT(CGr<v^>(qq((nLJ8l5M
zA!bT|8Xw=<c)9gB9G0A6lS*%J7S!H70SK=(xp`cwGJ=`Wp@{Woh3S9WW-=Ya{{PR^
zn$w7L!7%>E)(8%NZH+>LfPBIwKj82I<($yX3I5q<QCWA{lM0h6+ku3&C<g<umV?ta
zOssSZ5KAF3+b21Hb?wAvE6Dki2wr}<-=F6evywAtLyzG~NsWi_9tAxNjp8!p;V==6
z?6qg7^${X{5dAy5`}fHy^z*ff2!ec+Owv}^42D`VvUDQliDE$Tb|j7>=oU2%lySa<
zEzr8Q7U7{x>myMt-ir?cnS)Rv|INXTKf>n4DXlgS>5Mf0RS3Zhz+eM43(LY2X9%ZF
z9Ckv%o6|CZ=prr-zzN7eTPum9=ACz^P`f$vQF3>q_@WF|JxgVwETfZTT(i~7O0-Q>
zPGyb_uEp`lFT&P<#cboO%97{?R+EUx%2v!}cjd9$t>US<i9EO3gj*1&DHADB;eS$i
zp<ARyanQ^vcSje8RHbS{xof<$u|@5cYiD(&|2FW|E>6{+YH?}IDK&HF;B=t*=&>2y
zWHNg;5y4mEWB+A8ZMGs>D94hLV}n|u<P3whS>!;Fg^TXOa9e9->qBn}#LFx)uM8)Y
z19UO+x3SMef4=W~bC@n?<df=oWY6Nnqb568NK&kHCP5)uhGPyZzXTrz8OQvVuY5XS
zVS_jRy^sPnyYdg21QzsQo}+0@HKvB=66z|6bN<hb&ItN|+{EcNy-2nbQ%dcxjDL}T
z?GTCd35{)ecU&?)Mb^Y-fm?X^q5g~2CkUgAx+`}!3ghV(FZcedqwY%s8bg~Z<|fJt
z=N2LYIxFgW`6TbYYXsqXa&6i1-10#t!~8I=($=+PY;;V<JFJp8+Vwgutfj1L_1o^g
zVNEfBM^>UCMcnQNwP1cBSzM-pqz2~)GeR00AI(-X45Mj)Nz6?nP-{MB0tY)3z&MdH
z5FOA%ab(^@X1pvbk-pzJX0AU{9iX4|fM<}NIG`5LLwckj-(-0EaZ7_|;&;|WTF816
z=Q=_V1w-KI{7jZsWfs0_XQsbsXA+B$scBZ%Nq(CnVaLWQ{^nfOdm|b!9`9-16Y=)_
zE<6@7@%4}x6Q5`a%uA;U3oZM~az+|H%u7<n!sMu*s(gi&cviBuDME~nm{&@4Fi)9z
zSqwiR;?2KzG>fF|O6gTERu^WeZM#UKxYlkP#l}G+<mF9TtqBJInF+4&p@wVYoeF1C
z2mvUjmtAGi&6EQsn9-Wa`|LTBG{XI^s=#KV?G;LL&TfK$n6;@y9p1vr!`G;%RXqjO
zv{zTLMCggD63Nx(RpI+vQ1E32Evx8J0yDV37}x!qE3|y@&*PEP`#Mrw>)%dOhm8i(
zs;Xs!B-a=-{h^Nek^X8+y@OAojCovx?1}I4!;n!><(?(rcu0wwTyZ(sAKM4Ans3|U
zm6LKfbiyeCO?Na>emSRj^4S>FZFM+EK_Y4`-xH~l)!}6|U^^)e#UAH`k|WQvTo+^P
zcwN31rh`thf!__>(xl7}a4{na#Rt)-hX(7HDf1w9c1Ld0sOP2~8qgR7Ag;~|(h$Kw
z_enuBwf2oM9b~Etek07XRp45|)n<-uc5q$iiUJIPL}iz}QlGc;#<cawzMaaYc8_?R
z`h9%l*X*+e9t992Es1$ylQed4Vct|lv&}|r+uN>$?r4XY#zotgI22UlR0lh*D0S~-
zMEV9)UTg+DN)3-xY#%&j&e54&VSBm$!~sKuXFu)D={%YJzkTYuGu{BM8w2uOs!g!a
z84n>q{?d1@TH>z{$4gX%MBd=>1Sz(?k&up1P5DC<f!0MWFvDWPy#nyPLqNd5^7DG6
zq16GFcl+d5NRQCuS9A~G@wZrBg$puRi(g3IYjZF(i<n`2(wOX=W?nh?Gd)ka#gy0Y
zcTOVe+8EY;(m1TK9^`(sWzv)*=G0@J4{CtLKMEQH)yqiD=N;5GhJKh*EP?5rqn2~e
z3Y(rdXbSysF844qCdlfF(>5E1Sa52Y8_M4J9QLi&J=l^o*46DT+={IdDO_3>l8X-h
zSK|Nu6PVTqbs7B!D^Q@43y5)(6(;e3u}NDF%fcw(mdV_Tgj{ol3=C(&g>ib9P#qvD
z8Y!FvCBiDAdXd>vGBH=Q8;Li8BWgk7p(BvU17f5W>x$X*_>u7QGjnr7Pu|yiz<?jH
zKwf@j;UHb47@mxf7XmwFV0@N>jl4~pS;e$de&D9-Fu;j#c;ZC>EbKJ%Ws(&rz{iTL
zSD%LhP}~)27R?sssk_k2Gi`gAbA9h>*L0H={y9W4fs8%W_t<*bwu%tettUjCxc(66
zS<kAo?8gnb-WcSoUbbZWTem9I1eTtcY(~ZFE(X?GM$BD?uHD;bAAnRdIDj;Bv~l;b
z3%!mDg*7TnKigRRUCBj%$?*duY)xRIy;$Z*X&q{fGPF0|cJLugRaWn*_@_r_LwFZ;
zhiZvg<1b`TgQiGym|a4j!{734ywIB8?G{Z}q+zehh&iP^h}dg&bIXNK9dRRhb$l{-
z6%O~LOu{U*%kjNZ2#1HE4p3DqqC%z(YW??@o%_TD9Xgk-8(#$TpByCcpAoET3$7#$
zZ-zI+!{|tQ#yoi8gcbI^Ta0(`Pu2tYZxzK@68jW3@&xT1^Txlilh})l2PDGAP~?z|
z##iPsn)jdtb9lxcxB|BbjMQTC&(DgiePXv)-p%xK2DvD5XNPnd@uPg&xkamEpD-@i
z0J!O0afMWO?WpP`B=#v_a~(ut9lY=o|3nqaF;pB%V2L*hAxA4N$#clUpa$vhkq|o=
z5r;?-3L-Ojju%`KT`(6tn4}XCA~+GvQ4$@ZV^kZWc@P>Z63<W)R^%oIh)z1FMDK+1
zia)uas<Ogs8Iu3t|F;pU_!C;6{D*6C|AQdR$;Rp&z$;gD4UB*G*=EBY)5XfNvSBb_
z)}OxvG40@J7i3G3DU|7hyA&Lg!_2tsI9o6=^WP=EhY;e1wFG%WhH(bwCOrQEUOc%9
zXQMYQd~SQs+~+@XUFWa&{{8*H4*Y)C8D@;B@DdY4mt@Zwsfgm@c&B_yfx<L>WM=e4
zr=`-!0ct*^g=@w@I7`;S%FM~SD2BvUlFZq9;V&;;i^A^?j$-K#btm;uGx1TE-q|uU
zlgp?M(}$|(*^0nfW0plt!-0vFnRiKHvP*T9W4y<0HH!|0vn->bhh4`w&Ec`(x@?YJ
zmn3Gg5~$@(%jaivKEe5n+fif6@r>C?j+_#b1JltJ=^HaVC0<)hpZ2rJfJ+Skk3%@l
z@=!fGjRrPWk3St2Bl3KlCKlp7-EQ<97F3)L$5z<vwV_uq<kckVrF=Fga1Ju!9AQDN
zOw&@-5!gv&XIX6$I!~C50M~~S++o>KD+^tksFj)ns^uXakK3K=-znPr-+9twM%<O6
zKuv9j*7V8DX|fB|U9-LdBe}2;6)o;?Te+>5&J#ED6*G0qnu5}r#)(jKR2$R<7tBEW
zT9kSa8n#JXM#ok>bC)iPD7mMqV8+utEcb%X%|f4sOCG5Ur(Z+zI^lXw=cZmSCUt+x
z(;DCvRa5paeI(^x<kSeeMb5cuw_TSefaTulQFOelM$2~Aq3OYKmMuxoRu>J4%g!2~
zyW0ij7;beC0cA#=7MkiXd^XLzn#^p?O_LtTd~r9SXUjuymUgCTP4}|y!>%zWzmcH5
zW%LOl^^-wo={7P9!w*b=B|@9ECL-fxf(y=s#8vOo<KrELhv<a)!8(57^X>!#Ky2E+
z6=yY<zM*y6zQqTIzU2pj0A**n@%VQc5w{!U%%GLmez0CNIV9}n?F#}%Z0(%Qx&&}3
zs(PcXsES7pIYc0<=~*coZk)tUpR|9o+j`@a^tkQwG?P2WcY$rXwq2%lFBwM>B3Z?L
zjso9nkDt83U&48>5Wfl;zU-%apblkecs$ntPZ~;HXp3qrJ)B-Oj*CN@B?_^Bs?VsM
zP4yXTUrS;>3cTAvb5AK=+)1Hl1MBCJ^{~wEYDi;Bi4X!!NozvJBPHkt$GH^u*K&gH
z0iF#aTzl=X*jE0-Bvj2Q1z$ui*{r0GyYKu@rZW}L9In9ZKfmFSxR?!-fnxmgdyEtP
zQ~(#j#M=X!F^z-Ec)`%eZt7h*y!(u;#&~rm8j@g#x+@e3<W{R1{y=1r#~*Fc<!3SW
zc!}uyZ!qBeH|6^zObnAqZrRzsxT7KJ)qDL;h~Rm0cEa7HKqz%uff7?;>gLrJCq`o;
zBPZtK+8auCev7?#=xgLIkgQEmG9p;SaN-ST3uAi_wi7<_<PQEL`kdb6%ZLO6P;`a#
z8Vc4&mWQt{W`oLiThvQk@+w=KtL_)$#5TA0^`<iK&yJqxe{Ko(?X{>U#vLlsqD&@|
zA<B1wRMvrxk1|Ge8S#6YQT7crjtFdN{sqOy8dD-C=jm9VtZMxN_&_Dp=HR@&GbXY<
zD%YVj3(b8U#0&jlyrMWQxQiu)ePgn{BT3Eh_OyIOB|ubQ9@qzEB`|<i;ta>M9IX_r
zs8sKSc*wO&WSJ=Xjw!}Hbf|y$wx-e}3#?Ct*Ix3;?KU+?jCb`M+CuyX{l9%-sW)?%
zW^;mcC>Z+x1Y~nAS5cVIARrFOEDFp(Q+zGdpS3ki?_};M*NxT?6Y5y{KUgwq02%cA
zRq@*TPg=#z4qIDtN7}ot?&^_n7j(dzKLl9H7ZkQG%}5Jqz;QfS-=AN4ZM4g;(7jxD
z*1I!YY<t=5|9<Abxj=Kq`VYCIhKO=TRSBRRMre9T#8kph0P=s@%o@=~qn$^9DhY&o
z6x2{!r>X=h+bK7CtTmF2SmPpo6mjuWK+6YJ1mft!BWFLb{FnnZXFt6B#8FF$F2d0>
zvmZZ#@%ttO!{3L|Dt<KKOyi4T^&|HhDnD5WhS=GAC>Pl*esZUd<M+8ZefZ;V_x^*<
z)ZxS<_hLNW)KT4VNHN;cy3P|oC;csLKxeo)t+H!b<yMHqth1ZcV4_^|w;1{G6Pwy_
z@>BY_RK!_%8MUivItGQLgB4e+oeCTL9~wMn_%qCF!WQ}QRe4WMx->V)FDk0>d;+4J
zUEbDuBioN6!K3q6b6XvDKeq5x{~^F7JF53KGvZrO@R<5rP4GfNYWXJc2X%O5Ty`41
zOQ4nk!~KD2-;!f1!My?3B^{yYmZ0%kbj>rh*W8wlt}8cpVY@UyvQ=IoI}WMDqYKON
z3%;wHjrgh3r!DWnQqp$^kYcCcHt*SAyN>QC({XI)+>Ht8KD**xLDE*h^O->v8FOO2
zhMjFUZGzL*A2mg+54i-yG?f_ix~yIG#dcn+^lLH0X0n|_qdZ+mC#pLty*=oi?mDu9
z^q&Bn$5j^$Yq>m+CfRq`{#m>MstNTpoWk+p*C7FvagGY@H6ygJUs6egP{&;dhc-W(
z+|`H;+})QSmIzpTuK_dRNv3nbQ(rt+2npF;*}0iBH)u^Iu46z(heR*6>@h8E4@hS`
zLZh&rYtP%fSlTZ!Rb`@_CfU~_#%!}sB&3%~SWIjul~HegqS1JDgrjlVykQPZS1;XB
zHJl@fT?d^}rTeHTNcu<F^&%Vq?r4ug^?T*{Uj!jb$tKzW(rWnk(kR2oXWO2l{h4md
zj*WK(jD8K4pmLy2SF++Oh1|Nn1WTWjn4w$odv4U;5pvIau~@w1gA^ukC|{%INCOi%
zXo%V3C6#u;$Y+G%QdW%(@nT!#1X>S&*c2S%o>5Rx+r_8D`pZ;j@740FK!f%)x$J~0
zU3$C3xGrV8L@8IW@t3hAV0(B^eS17Ss$Wj>HoE(C6AD;)h}a|J0+Ab!-8^Ekp3Zd*
zAgXwez&Ho{k#T@yo1>KJEjgf&JB2TEk2XqjOgDin-#t*E>{9n+;6Pq$=>Uy)VyNuG
zsMpB5w<1K<vM><2<LlZ7?JxP&xu)(!+HKS2NGR6)18Fk+$N~jVEC$@^>uDZee`@I6
zs@_s-4gn@*1IX7IvP0GGgLo4S2rEyVz6Bo^{#jcD98G%1pOTsK_xehD-h{JUum*@B
zly;R;O3KoC&z5#NU0w!?<4r>El2zvPy8=?H;W>ZZnOEG(GyPd(@V4!R;Cx^U+JE}I
ze0OKjf#!Sa8mD2fdp#Jg)c5ayw1K!@GNiYbC<l)1S_Ic$*DPlpT}}s}QQJjhIIVkt
zvPK{M-Q}Hf?3Qdf{Pseqq18g1aPoK9>Pi>#(41nqZCrHuOQIF;q{$tzj0vdssUkka
zIYV$G8M$i?kgci@1x0Yd0v8JkqOPFna%M@G>xm1mO7#zgq_95Wel1vTcH3A-qK~9#
zfB=p#+kbHWlT%WeYhTV}#iN6XE%T*?i7)kK!xWzj<3!0#?l-}_{v+&H7fe;R!um?}
z>THGR3@`;k&YlfrcR_ocQ+b^Gs4BfEn}I{0E!7^ZNkcMR=^eC?4zY|XcQq1Q6BwsK
zFNSDXXo+@ThwQ@La56f_>krCJG-4t0y93dcRBeuRl9e`1<!4D=q%wk;Z>~oHr7#>H
z+mMqTgFw-o_|nLR#uzb70wOsA*#4km*VxR;PUX85ftI@Ulv{Q=k1?^-S0%?n-cwR#
zewlj?Wwsz^WQ~v>%b>k(eroD3H2b&v1wite;M%gD<TzB^Y}oG;0ZfW)r4(mBf1n%q
zFV{%)n#D=zyptn(kF&U%7gqvdbQbnx-duVQ>}iJgIo3XyO_oTSJS!86G8QrVUn!Ok
zG1v-wSf7G^8)ADThLE63wkudgt!8M*>CTs;U%x`xt}@47SyfkiD0-~&OkyRiyi+=f
z-u_a5H|r7UI*mS|l#XfeUoB?mlLCX7vNui2V?WM`ZctBix;8{21g-=K3(uydwFHPP
z%#75HB}-V#EXI;aerz;0+j`oJiRPE3a3Tu4^;Nw6NBY&n_PB%orF$!~vZlzOh|Cj?
zEY%kp3nZVvXwHhhiSG%R(Rtl<rBLqs9kO5KqSodAIsPC=wn-3_D-)EeU+2>f@y;QM
zy9^`T6y*)|QwH7P0}|dnX^%&ww)$aA{rkUi?1k+DI@rh{AoipnASC}K&asl^IZ%NZ
z>)!taZ&<2VNsL6Kqj|6rgxg2#;c@k_Ezo6*LI>cX_?O~J2CH*lu4^cbsXfrpwww<s
z*ae(6soam2s2uRo$TKH0o?Vuo<&$?Eme(S;$`pXTcj15gGj~>HbrBxp^LKrpcHjEG
zy!IYj?|>g1WSeu?!5HOSX78@JKcc{J$5fMdIouyv!GFBc#y)C=j=sP9KT=6jmpqTJ
z8E}87q=9lk?2@~sJ?IPAPiWk}@&zF%8u5P=1^;Rm`coGBm-=a*??6A1!+zML-JcCb
zs!IN)egA`9_&4<z2=@(4;9SZUsVcaeb^-@SpUW78Oo!MY=Q9ZNhx-Drf#3#`;FpS2
zofIILi)eah4xNbDlyZUh5U|ywWTZC1L3(4>Yj%hpaDeIHmhg4bO8fHE+;5V!!awx-
zNd>MSgse}asCtPd@Ol>yC6c&5je$7A-JgOu!n$y*r#x!zLIrhj4!E<f!?!}=;$b?#
zEg3tc6_&>6d3Pi5VeI0Th)@A>Jz)18!rlNqT+-AKoMWC-Vcp`#Z6tR`9v^ndk2^hv
zf_I4;-9vAzVcot+ZV0bL0?UMi+&&bWJYMWR75`=q;)<a&MSCq<rCQTM(+KQw8yLuW
zy5g;M(lh0^be9CnC|P|1`7-{(y1J>iXWX81)Gnr}$VF2>r@_j}mAV0|OV@cuW`(zN
zq^aZ?=2{AIj9U178P!#@1lAH2ua3lE2YWg<!iK|`J6bgJ2^7ti#)>~d$qPLZkgqP>
z^3zrbc6FnS&pR(53!d8XWrla>-MU`wk9~Y)9A-UsSg0J+ao01`-tc64h1dj3^rScl
zq9A9C8Jy*t5kBS|d~Sd&<g+bx0P{u#GSJ(Q;k3FxKJAHZnYXmGgU+7eB2qDnF{OXP
zGq<(Q@OGH>#Hmf94u)LIy0#=CBM(U&am8>yh+5F(PZ&Q-9NH0xBEiheMa8cf1Jydv
zw|e2*GgquwVew!Qr$WFyc2ql8qZ0xP$oSpyHS^MWR5T*e(ItVheTAYO5qU|r)?wWl
znz5H2q)p^yusdyQb5hORR#=rSP09>AK0X_)s&&72JB&qIFmDlasC9inqxo!4yNA?i
z&yW%!8*ZK|Z_+2^I>^9X%|P4TqiMXQ2rhcF%r%BXsj*$|6wYM`oKh-B28!GUa1?Aj
z#+I<@Oi4e<W;B4M?%kHE#B&>D^Ts=PTuauAJUK?BZKk4V&>A1#b2Aga9WEZoyRbZq
zIqk=15w2BLgg*nVV{O}RK)ld@v+m0vlA2=RTs4@>{`Ito35||aWBxD!;aPk-9~6C7
z-c@=%nLXJ4O(n84RbnS#0E6b{|60I<#6P_q&*<u>FGmLCsOm7*^(P5shd9BzIFdxm
zL|65-xl$AsX4|QsoL%b3Tc8}OCCdUUNSfouMf`ghjrcxzj}zML#=TjUJet%^%{bwg
zdCUVo<Vb({Cv5EgLS`##YHN6rqppo4)aO{-1a3^)+%93E)!F%oAW01JOLUX;BK9h&
z9%Il}IzbDFWppcJG4|r;pfY!I*y6(SQd7-H%&DffXa@Ry%99EA`i6Nn_0oRKZ%Tc}
za^sZ+oNyK$$P+((q!8~HnO*dEx3#5Hb6kARo?ewxB&JNRWwlE;9w(^05v}qnn@^<8
z>VAUcjj)O!u`%Q=8Uo83ZhczoaL7z>>F|K9D=P)=^Rjq)x9jh=n~7og_#&<5Q9hBT
zL(jx;)N~V7TO4FT%9lnz_sD8l>6Ye~8!BIzK0Bupm4(Ve<!W45`$(2bb>Oq7KZhpD
z3D9Pys9NVJYa&<p5fiI((>`^p2XMVrZIAbQ$!+VW*mU5+Rt2OYKN#N|0J4VOs{KL*
z<JEz@XYEp~GFv$7Pc-otg<k~Qi9=o3e>9VKu_Cj5c$3&~U<`2EEGWozUEqw;1nshu
zK(ojNl4<<TAAZ|QN+!UOf0l6CQJ0ZzJvph(0y15nkr8u8+or(%)NzQ_KX8aGdEM2h
znp&1gj3vkRaG`0123U?)dG2l+=<Q|owNHTP&)%s@k0G@ANvqa^#Y<=6wu7YPnHoI}
zpD3yqv$RY6s5>ix5d8d{4n;OzueZCkO=Dug=GrIR!|dd=@lpG!@OLLHl2C5=OUF@;
z6dYRq<m6?mSSsEzh^g~nEJ8D4aMbEVmTpA0QP@W87!s_dzGW^+3I|M-!{kqHsZ78H
zTD_Q|>spz0iqYT;f{nkT)lCdW_`7{;tgD`xnc~~d4bKeX61V(03$5$~BQX=`di<mz
zFd0!e<cTzF=$XRn<bnyHF#=^$O+V~7VP7;BT|ALZHBOQzQr@BmGO6Y7IaBcuN8EW%
z(H&EF2X9q>A%rR)zeYf5qtX}w(yG8Aj)49lV&#t>?pf#$F`ibYs%BatN-Q5;<~lvA
zOtB|8Ck^9wETTx2JXCyt?NY-cL(O-cRH30AIH3B;*}Ew%Fh?kex!=2NK#!`OoD^#M
zM*9<7z|vv73^IIVOKKOtb+KY*%b^)^5Z-7on@~kvue|{}ayv??j7{#MU>B%jh^9MG
z`BXQ}#;5fi5;)xsSoG9iIK2{1xm<6WAB`)z6CA%tpow6^GDz@{!v;uGoX~oRTtcRw
zJXLd(4M@Mml-u!ReUmFT@HwVR#OEeQC$3`pR%&8&UbQS)ALZP3z;B`>t5X&%7SVsc
z$gC^Kl?tHA<fauns0^!FlmNS3y@{k-z5GDG35vZO>^j}KU>LOm8yOj_sSw|TI-r&>
zH;Y{ADj6P?Jw-vO+6XS-?q**AblCQ?SW5`_m6~>lQi&eLl^I0X_Ol!kXi9`))@+H5
z?&%MK_NP@U?`8FJ-dNdzfbkdayN4+-==^_eb+kXK*nhNU3C+I*{{Rv9`FF3_J#XY5
zYa|$oLbdzA>1w*vto5Lm&AB5~N%P*H*0xj+`Ut4Fs3<_Cv3a=@{^i#03+K#n`p&{0
zW2u+$;Ds?uSOY59K936%v&E%XE`ZB*dl>eh-ws-^rfXPLmH~GfD$gLhEM=u%@^W`F
z=SLH$PMu99g4UKo*g#%yK{U+s<s0koBjoP>z|b@Ko(f7^8uhUrk0*=1mM$DdZvjgA
z#oH>f_5#2IbtMlqpM+x{>@-R*;6062JR6{BO!jEJVjY?x`Jf?cijfq-w?^tc%Ez|5
zHy1O`eTo_AA4(r%?I!?>U@)`#!iG_iU%I3X=t%106*Je82G%-ui2i(z(H&Pic8N|i
z@?qG;*iObfqdPd1thV6t+Z7_J$2Nwua#wmfFBP+k9M^<WduR@6L^h-K@o(go&|JfC
z<rfBqcxw%_r@pQB%TG6G@9wcH&~5hMXtjMbREGOEV??b+_!~POA=GA-tr`|aF&%g6
zfoJ}<VOdk-0dfQmOFC^|JGJeN=AYSN=N69-gv9HfJNqCrrz~swF!d7W)Rw{c2hNG5
zwZ6ZJ)c8G<Za;wi&<GcCP1!tXs1iheUEy0yZ0)(Ft})|PSLsy6gjMyd0|=hjk$OaJ
zEzjewxPL)|19^RW0uCC_Xzc-oHR5?-{(JEcFbw6Oz;g$bM}lHTp90~%Z|}-a!oEK`
z{y4iT!P(FkI-fB2{wXD;hu3qi8#IY!OtwMwrkc#2GfQI|2oj%0feP5x)Mc~Z3iUS+
zKCkbzewe%1fF<>Vt;JL1uX5{Y303^zpKA4AqT};l?@O_c9CIxFgCg%F^1g60`QgTM
z%5(zaKu=?T<ZW#TZkP;RU7384tpGq@5aR;!K>((GvC<N<SPvh`bG#8{+06v}W+Em#
zh#i@Mi~+yr8PE0KiX$AMaG{p2y1{ouWt!0+J*Tg%=;K~~In2iJg*DvGwejy}b^Is8
z;;sy8bs?0ea6BlJzA<YXf{em4PR9*Cg<1PPV1r|pZeBTqlk`9OR#BZTF}^ZuY7kH3
ztg@ZumNPWMjMCmloh~-2d(T<rErc7};V=*Vj&23imz(%jNQ3gJ2DGm6moO(IqpVwj
zfQzyA;VJh2KyVQU;~z%)>1}f*;PREamh|5N(L)!UF68Lxgx+9-lKfId%O5m%OR*Dn
zpoR%S$Sb1NwXts4evPp9t$34_Sl79D6;ALN705S5%MZO~zGO$Av=Ydc={Y%ZIg`;h
zW#}Ac=q!Cf-SXEtBE*8H5pJV>)Ra?orl5onQms%V#sm6ua=|-$Ep#2~!cL^yGwvsi
zb|)f#kFXFT9T2G@ACi#ie(KVa02@dLbo^*PPcr?`ct&(`*-gB^dUhS4MvDF6#LuF>
zr@XMRKi{Xr_$KSM&D!1BLb=Q>>r0wXn*T~VEA=~s;bG4s`}kvu7~Bo_Xps|oXf&~;
znMh{fqUsR&*DR^@iL3)-Z+mNhM2xNMM{xe<CAPj-IQx?D%|^c;{D(s<Phb}gc=vSt
z)Z?~G-UzlJ<|=O&E((KMNkXLoF=7)ciWpo-6twXBj?n2aCb`pZL+c#d7=%f?s%#nt
z8Tr<(lxc`$=yA8F>vd^5u1of~oQP}f15`PQq=Q*5!c<!Stvk<M{Bb?-m<c?(I7XfQ
zyz8qmTAe0|eQMl!f>i-|K(3z!D96(A9=XxejLXX-hTQgXHEi&Q7xQ&~!P@zaE!`^f
z>fLf^>P3!AkVc$1X*RGK4!X`TT)bSFh2F_hgpPF@I3swHafWN@(drH&6S6NU(lHCy
zA%hcM5pK&qL~|R?w+*kB8=N>NDo4d`W*k89={>YKj%nnB%bPn#U1(zlT*38$>=Fpu
z^hoWyHrs{w7BC2m?#_GxYwGLRf$R9>@IlN%9<r|!)7$k+Js;uO{A1_fkL7zv#zEKn
zY*Ww=3aJo%^AHd<g`drjiQ<306ni&_8;&|^iG{UQjbj+rux>>tEgsm0_uDlNq{JJ`
z_FU^+i}1f=og|RrU+goG_nTLnUaAMUI$7?Gr3G=$b#AM}bPE~--K@G7I8`;Xs@@;s
zR4c}O7`)(U0ZaR=r;`hK-cq#>eDpl`YzF8tPiLw-0G&gt;P=T!PWHqonEI}}d#C&3
zL-!3Fro;R8DyK#ry9;mTrw={NLGv7!h%tuM5*Qtj=ZTky&2MCc3_B^)qse@HPojn~
zb#LP@l%iNBN1gXVWv+iJ!T(uKY$rj=p%Cp!lu3H-4=f`8UqSWGfPCc0e-*n_*#Ea|
z3`z*p+tNf47;1v7LL0DSfp7xD$R1Txlf^G!hYf4MNis^~Es1Vmk`zy?phrJXW3>Ll
z|J+RP<75i2_fy#WV)|SGE_&3Ng>XHtBL4?~_*~~^dQHDS<{g<pdxD6~-<`E2nJg%J
zn2a?g=}yhIhkIiFOB@=@ghR97PHP_wfBOLW_md)Cv{O;inJJ1<ZPC`u?TplhpkJh&
zxZ>X%MkB^w-j&Cs-nECQUz9&w^dzy9&{V<v)UpcyEQ9eE-iL!YkIA!u#<I*B(RI#n
zHm|MN=TiJ+WU9X)t}eazkzm~XVxS`-V5@awx38qhmB`n<{1I#}@>E!!+icO%<RAw+
zRHx0>$bjzB8^WC<+mF7kfOAw;OY-8iGt5dWb)n71%vtkhyWLl4W|6h5Fk_K)lb+2Y
z7<c~H$R!+7{Y#xeG@l(Yn{bn@D{FR4o?}!R$4LoiCa$i2OjiA`Q@Ao88R#r!BOxmC
z?924bE(c9SE+rJ!)}qc*To-SX9g`Apdoh5;yEfIKJiM&)?9VX8Ry)V?gzSFl#$t@R
z{4DO|FAE+sA5l#2Dl^7gD@Awp=}T&8Jq@2++!7Qlh!yLWgd>YN*(RPd^#aWUvh9#y
zk~$hM=ynJ<{RCc6*-FVlq$M;DOskFLd-0&S7_bmzkqop~Og}g|5iB=qpL0B*#CDa$
zGuY9DfaQE6VB#Qf;b{fEHtL$jD@qJh;q35h%U2y1RtipV_)NkqjC~<&z12SM5FXO-
zkPdSGp5wt~I38;_UNW2r-CJ&m3$Aa}Q~ml0q?%`VjrF?52+YEACMORLuZ(b|@|qKV
zvzz{06$Z;63j3}GilZ2yXq^JIx91xdfPjW>3PFXOe-Max4GA3l_tA15n*&ZKa@;!m
zqCxAX2GIA}!KRv~YgKND(a;&2XsRV!AJuIy%On(<+N4+eX^0}CRpPEs`h%<<jjMj=
z)Ci41{>v$fD>$jE?nYO>)Y6kCv$>=Au&<TAhVEp)c_y#&;V++9J<K|=V7cr52U>J>
zwmixxNVk!4yUy97`cnQ~Blc)Yg4bp<%h^b<kk7B0J;rx$dI&@Oz$P)UFN#w&q$C-p
zD^GtO-x#33Dn~)qTl5H}pZC*DwWCf`%!a#K79mWuWmEc!in`6hz*<G3O&-qylP6Jk
z;Rn8c{%;NW=Sg^<A$AOS)e^l#zi>^+8-5>*<$hkgcm~6_pj3Q_X9QBeEFX_f+H@H4
zkBTqybha?jbfq?DC>aG9k#Qe$dN4bTEfka@_057uHG)0?$`Zd0R%AGNv=qv<|6)jW
zH5OV9sqny`MePTgFN_8pVw3+$o5e=bMJgYMMK5s5ZMhp_t}_85>^#pdh!KPIBF%VX
z%YsrFhOrzA?@@fA244@0#VkdA5r~C$M6<sgK>4S7O=_V#94a*7(It4eJ0?2hP>{*&
zQZYR%DNpRMNIWn0xJ9jvH1yx#+<3du$M@vC#zfnjyv?5zTBAF<RC((^KtG=Uh3yM`
zTR$thpY8|d7SWj>^y^ai1>c%J|8>?3@_>VfLoe9@p!SGdIZp|c^C}pJKzIgEcsXZY
z{+Ac!U6()JqpXb(46Hj6(2XS6)saoh5x)=K^Ell8K>ptaxj_k%DY5@bajjS&Ab?~M
z9m3@LNhDyZwx<#PD(=5ra;YX4=ihdg2Z1o4d`;$Ta?+w!{9t7U+KQ?XZ5KLS8`x&K
z+_|jh(t1|f4E8eE3y_2t4pxzf9l~;33roFkj61#y3LpNSmKP=ZOZO3b-EX^Gz&$Ue
zfa^(UA~2^qG`OQRW&_N@>f(w)+o2AIC|!aW(LtcC`I)<Mk6<uY=))MmVVqE9<zNng
zwQq#u7-fQrw3hfd%i1Fm-ad8DdC(^p-W_&)gW4l@>Nz#neSD=1ahLWXz}mwV{5JVF
z09O!Y5Ze4F0U=_zgE|;FdM+O3u2;qF@V7PxgCX0ayCK9|^eA#D3mrT1#ANQ{%OW#T
z%puT^AZDL5lQ?eQ6xEMESc>dj93nqvU#-cXJw~c{17Mb)_QA$V@GEfqUMKOflUa~h
zf~k*0whw1C{ob7AhEBx~(=ht*>Rl3IPrae1oQZ>XX}#6F#nH-XJT38uaF|?dxR<=x
z6wc(kyJbh$Qgd3tt;}wELZL>hp<!zV(+<dB>A2b?@oO*&4)j;HYOf%yT>Bg1opdZx
z?6YRRdK01}UN3(}?IlH4`%I6+pKt@^hLP5KEBrrm2TOwXHB4&uoK5UayQS<iiaOEQ
zzU*{T5#doDeOBq>JarCJXD|Aa_?|Fl<+Iz0rlNyc0n1tEISnoHns?i#))Y;=?VUi^
zb}_XU_AO>tGn)--U3RPVyf$Bi=wj;|H75z%Qp`bGrIK>b`aDKe9F5SfSp-78702V}
z!NZjfhgi67h*^2tKebur6PsHY8~nBy^u_LZ0|&G@r;f}n;k_z@ltFEp<o*Q6ZM4dO
znn};?Zm!xh0XNatlEL#@K_02}V+No=y^c@3iV<8Kw!{S1w6c@z6`q!eVmn`Z%(F}b
zoW-JS`q3}J$TS2%=mW#p-coA}`O>zDd1f5u6;ZD2a#pQnn>B(yA!zoJonE`FB9F9P
z-d0&~m%NU)|Jn-caG$t64-GqH`|m{4(u+-X8FcSYml+jLUw@oEixq0Ot#}~x;J%^+
z7Oj=7KQ9gb8sS9bjz+B(q28NF(q{>>S#yx(uQKapK?b3MNU1DJKx7E%Y!(R_A}Fs_
z=s}eFf*)BJ9NswiF>$#hxPq}{hgo{I+Os$4!4uh_SN@Jqjk9g=wMMUCv!gOPjV<`Q
zqNb|kUL|I;t3s<sJ0BOzn*wl}h#3xYDU~6nEJxfkx~;LwidVcZSmR%RPsMtEI-G9x
z`HuOLo=3`7RTO)l*s4e*z2#miY4M@&yI^$n^}RHUCBB+ZB_3vrFX!m=&=H@te9uXZ
zs2snkOD5Y*M_>BK?w~l+G#*}h8rB%H`d<_wv@juy%3QOl>W#Q+^%$T@bX4s|+2J1?
zHRIxnp#errp+Tie`Xjm~#@d4FcU&T^2bb-N!?U8gU=!_TYK_05fB>3^%T`H2i46Dj
z7cH0jt0?gFBQBSFJsvBV^Ni4nEqV(!B!nfMLtikI<{293Mx?<5Pg;5B!#A>b<oDtz
zp~?09#^_#hwMFUX!&zWZr}#ZySyWE~W3A#!T~Xq!bYWPurbnoI=^@iQUAMm_CYpl)
zK*r~IZ?{Sha=e)GXXmzN?0MJv_r5Z8p~?dnzaX@vdAY{@1ng5-d+RJK(+FEB7SXz^
zx<nP${CV1|mt1S(s&8H?gEK>VB|nYc))Fdl?h3q*Uwq>1*f{W|qf{xgyRyM3t26H1
zNz-!UXf)U|>zUJlmC*8p!Z07^=q`9yNPU~^o#_R;sQy5X`(Ndu;kzf!Ka~f=${PO-
z%&}zJpK)P8RMiUL3BwML{YY`WfalfhuZ@3xbz8#vvWY`D6okbbfd_q^+P6%?rWD}q
zbE%=wjTrI6V;;!=Q*BXq(0DU%o9f)BHVSFk*;|zMOI5W)t2Q_q+^6#2oKv(=M<yra
zi({3cdPN^6cDtq^Mrc*xrAz9edATj3`l>PvSsfOsc>sNFH$LT!2l*YVB>Yd9?_naQ
zU-U>MQ`Vx)^tPH$)T)X+tw5!m1Y?SCTzqBD&Fj|^eiiU9s{?If`Sy%Vau8@`s{+{w
zjP;zHlE`C;gG{}-veO9XSy9h{HRM}HyQb+vv)Uj}K;=$yR_anc&1GkcfwAW3Re-a`
zBQF!iMWY{OJ5*nP4gxGUiSR`Yjj^8d-*oul464Q(ev4cJp+C@@EXHtMXTb)%E!9SR
zp!$UGb=5!@V$1vTBe0)=x?vXtql9YGI-7)JpN)2dv6s}omka&)_qAF5a=$B$-;?Ik
zcNyF5b2D`7ncnEG2GY6ngRYYg{B=+)`T7G<Isnt=3S7C7(^(Ss=*>pl8OLmq_XcuL
z=<$zZP~CgKI5~Yrt2m?&G=>_mm~=CI7(VsM5q2P%r_mq!%Q2J1g%E9KPNu{z<VyrB
zL3$tbpvy~^cvJkamgQNb{LPZHEWb`0(s>fC+NLyu*6mI{mJpvP1M$Ujg26-aFVqn<
zd#Qy4X(AC*{MatSudU5HF||VjqIsi9_B7u7MsrpL(+>nq`6G4D`ae5*7uUI`x4E~s
zqq)Fdw(VYx+uh8$-Agem18f(5p{<u51%5-KERpHqw}r#z<J95BmrnTd3E(f3AshN3
zZ>y0HgnLMCMC_zfGKz*YL+oPYE0`xA{Sd_C{uDIE!P$-9-3^n27hq&gY-yt7ic@4*
z83QFD8#_oIQBRbSsz-jXQBUu)T)0xO2H`+Im$s~qmRIx|j(C&KWRkZcV?5YfX8l6z
z7Gejwar#rMtHM`<ijJ6zjkD-2oB1f+vWL})r6`&@(HvKPF1fCHw^tAmE-X34;v)do
zd{OdbX3iiF8}}P?EpI)q22`cX?@aE)3iV&8d9wXQelm;bGu8+E1<&(`ey5X=ksH9U
z73NsW5yr!W-?cBA*nHLQnAI=4HsBG~`l6`#G>1z;uN!Q(I~3IFm5s{unOS3H_WB%c
zO2t<JZtF%{r1UsW+ZTVR@>(O+TI!*&qDtMkvtJ;fYQjM;%~z3_&vA7f8mFR4HfBG4
zQPm9pDlGJax)=;E<K>0s?!#Y0^CJLloCM$$>jA~6sqGyRV*w_l2YNiwyDVTm-UYF*
z24nrx$fUdg*CZZ2vEs``@gb_Q)=G>}ObB#!jdA)aOFz>XC-gImDs=E8q!l{3*6yWA
zA#2=Nc2DHenatL7pr4<&{W1R>+SG47E&o--%6)jx5m$}DR<EG(y^Du+I3SSYsa5cF
z6YU8;vMO38O;V06vbB4&UK?AsjlptL=qj)3+LxtqJATwlrV^x-;B<;{?CCo$4Tr|y
za)dHG{ebsT()#rUf>Iq!_;5ZSJ`emVcL`!Bk~2)9bTjPA4-<=#2H^;bdWAy~=nM%v
zhGt}K#e(HDZuAJSNsid!X#)}~GDG`L4edDX4%}}~@EuXL73(boYB86zr#;3N$-*hU
zU`(wm{7qtyY=lMRUE5QAwAkpz%*rj>FudXzZA?&O*sWDQIkXqV&X&W=7KnwbMf=ne
zg#6#oGZe3+y6HdYDT)IELi_)XkXgDIo7tHs2SC9l8<F7wy)ecxf1njNmu)n-VM~Tn
zz~NUC<^p3I2T*j-ND@#AEQ0KNa<DG$FEqDrR1VWj$~PjHr5lsE1r!f4a=5AgL@8Wj
zP%C=++|6F}@_kr(y7TTZh#K}G&))QSfA@OdAu0(z-4}zbMaR;%9WY|z-?Mi1=rh(U
z-^*e`qUi?$wP?7H#;d=*Vz+z$^Jz})#Bc8pK9G*eDpZYA_mbXT^-)|0vv9jbMN6Rl
z8ly-(3Xgu>`n#m*o>d*lcdGXekarJ90kA&xQ72yc!Ee>tVaOHQ;mvSF$|~fY+Y!jL
z?+L`nRTZNV8YL{G{ZuE93Hn5@rc?3p757J|oj`TqAP*+-s3|Sc__(?sLB8^X41eLi
z8k}IQ30t1}1Fqj%{Jc!o{MQ2{q+v?FVN!(B<S>(*q|(O&=Hz*GfS<zPdMShF<OzPj
zHY2eAV!U154}VYP{+Cc6b!312A@qBpen83L_<Lkj{-GsYKwS}XKT5@>cR_1!^^p_M
zaXbh(-0joFhxB%Rb#?uR4&|J;EPr8`ML-bkwiRvheF7^eiIXj_<++2SU|cm^7!cpn
zTU_7TTwN?MTs|c6XK(M%VtNo`HsmZh?KWPlRINQ2{M98igrEH>b7`u(#L?L9$_6U=
zVmWanuBr@M(Kytzxccp{f_c1HD#$gD%*aIGy|gHC9PU9ftiRv3bg1X%mWbtgt<(|w
z6xWzx5T$#>qe5HhRV3<T^*uM1@~^q>mr&u#5LAv~z9N>8^3o&N<Ot0bY1!X_Nz4k>
z0<zmf&H{<-?~S~A^V0Nq4s7FN&+iTF9{I6ik`kzF0l_g8gXWzOz2(ViENx8Ww9z8K
zEp}XQz-b4j`CoqVO_%WI^WO$}Gsbe*Jg=oSR`mSf=^ng2pOx2)t}z~1V>5}UmDdsm
zD(6keGFqpiyo$JqDduSXWAH#H&NMgQ@yg#U_KIPG{5e<PL8<P|#Vo$m;MKe)1hHDj
z1?y*HE{W9&Z848s{OlqI(}YIb4MX2RXkK5XafWYoN#nzJQ+d6QTp3(!jjkn3HY188
zPRWy&n4D^_ArYrra19w88Mf5lIJGi|IG-5<hcOPh4-Y9PfihKuG7_f4&@sPJ3ENq%
zIKS)|xK@5~D?HBZ2{ILRx`^Ji&N|&rC-uN@(L>sFK&{*03^L$3j49y79Z+cki{XD!
zAoh<eyJ^(%;d1<>@|7sim~h6j(y;%9>({);N9-TH`|YY<u<u1{vtWt;FP^UA;O#vm
zT<A~<?x*J9KdhE)b1HhXlw7>?*%97<aEJHbG^365ArfNwgB>E)t@=F^;=eH<M4C@W
zz1rG|b`191QNs>DZhYn^vu&U&&_#9l$vOM^kga)#Q=w6*T~aSu#xw?#gY@BNI*d`c
z7Wz@6##$yCA2;7Xu00l0l-{Vyyc~Mg9guA~Rb<w!j4G&r@mo{@5L0ol#-S3rr7c-!
z+=0#kHu{G`6mv95(X=x|DOO87l1f%0lWdBkQ5ph6r7%*qQ5#i`U4^m=c+tXhOZP31
z%ml6KOvh_shE$3tB0;}8BB5%yr;=3}X>QUv(8ei1#8tb{AmSOrf-0JrktZLw++0{}
zL3Uh)Z*m4hsE}b=2$Q{yDqtOIvrb`~ZCPqPpJ*yMvNQtMs49zKZIX(Cjj+YlNpqlo
zq9drwz-VFhmPLwBd0Z3<EUSjlkRFYoDP5{Au`QCUSsc+-p=*fb-_}Ks+8U)wA>blg
zELJh)#)!?205+3dva7_~>f{Mb!IQ6Blu2`Ki7g8{pK!>T;$tjUM7kG6uB#;2Yon*{
zb4t{tza3%m9`uZgt2!p!kYceZy^cHne!_c}=Zekh`ut$u6<uBhzPZdl7$IQ^EW5kK
zHLV=6G7+sN*G49;WT3V)mgt7p=fK8EN~yvc)Npv4bM4{$d4#*JH0@jSii6ZK^H?;c
z!(*wruG1FSX?%o+9L+U_sLPTno;Vzu>L?YoWQwRrS*5KuC}6}+AFJ!T2Z)$^V?(?0
zb*t5S_$s2bUDS>M<B_Mmm%Fo1l<1ppW-oj`8t;iDuuqU^LVs~lo7QWx>>%+gS!x96
z1)6MVE|5m_G>xf+F30lE_jH9ZoE<)O^G!n{64ASM-!W1t%Ogo(&dk6og@1UPTejrw
z+q<zA0-DnqRvKO}UCdU{#=PXyi)G0sLuTEd;ELCowfKa9s#%7d;P%NkBaMk`I(8^E
z@Hb^oSvms#(8)2s$ZT?v&JLBYqdHj#geKb4*^(aqq>a0uru?m%_Z)+hQv8)!$;HOS
z$Ixy&{amttt5ZRrT+5BDrZ}<sXYLYTA%i;Cmzz0TrX0O(ccQ|$UpnT9MnDqCFh}Ky
zca`=TB5p(q#9782r{fQHo(LJEONbV*y5TdUPT;r<y%OH7Fu0TO%zM~5i*Z?X&pT7q
zeUKLsoQ=5u@SfM~8ww#NM~%#EGH0L3Ep7%++<JPn;R_kg<J$ShzcZF$_oDtS+QUZZ
za`Tt@gQR$P``^+%o|EUC&yGjtDPpDbSmCYFH;AS&5WEfap7i&By^G>~S>2F;!vKJ7
zy$g`p)^O;%u*RQ;Ce&}usW&cx`M3iSgI!*j->8`2RM!ezYu~3XD+Gj4>Rm4sCOlHY
z#5w#h3f9*T4ZaJHy0IZU+VKtpE}Tkv;}HIHNf|1nFIZ}ySQiIyN%#o4vdbQ|ykIdv
ziKb5r91KwdkehqUi8Kf=F~WV~Ey1*4C>9k-z|w|dDHbLHqL;OkBsCJKR~dc^`mNDK
zI(0TxTNt(3BcpX!3O1R;%*6(aXz0)Iv{@ok(P0#fSCtopf>zNxyx=&FTd87O+0yPL
z1F!ISeHiR(ONTF2!l3A-$Qeg@uSMBjm+iHHrUJdqs8EIF4Y2JdYz|WJ2En!5A#@Ko
zy7qUmd_-isDtvzNk32lG@mL3>;vbY^k0iut#oE$5Z%0rgzgvmNS;Dz{0|a^<lH^Ev
z^yRF;;LKZ{0fb@sOPmjjX=LqeD_0PTtYqbOJYYM2Ppjt;-9me??%UJ)azt;G#R?pN
zU@yr9A=UcIrdU>Eq^0TzR#K3>=ShTZDslvx9f`67KfD(BrBm2VboZ=W%~6weiyxkx
z)cw58kJTHm@Dqop2+^9@^;4SMvF?9u;n<;vto2!gUOKP4nm07eHy&PYo4V8Ml6~&#
z2Ey4n%bcz8(n}ky=luZ}Swp9VW3c)_=QvhfFukP>ALJ@ZW~b6SR6Bg#jRn5Q8+5NV
z9<9tZSbg`kG!4Z){ac%+VAeo`At;y|G0M+O-VphsYHuL2MUU2G!cNp#LSK%|lRkgE
zQ@<ZWcbDKS3f8@6U>DTplGWbwJ%p^CKQ95L2eZ4U2Zw6%uh^hDb`Q_`?6D0XIm_D3
ziHg?pA1v>PuHZgb-|Obyo^ye-34hAAg~6ps`&Xuh+{wM!yPem1(|M>*^uM%4r<C-d
z8uBHn@}qcVuH^psW$E=sEA7noo@~Z%%sQp9{|{I19GqFucKyb-jfrjBP9_s`V%xrB
zW0E_zZQHhO+Y@JU^1R=7>OAlHvup3FUA3#L`|7n;|1QMDS!p@@lB;^zrhP~c(mgs@
zUsRwbN<%7<M;&1S`L)B<ws{HT=PC-dtgi9SR;f!uQpTqx!5_gK@f-QWtjk7f(vTwg
zuQUWr!{7L0Tm4y#&r^)g^E8j~mar7^xk6lVc9Z+R&Ye&@t<WxtzQF%?(Ys&mV1f(<
z0`iCeBxa-msGn(|YhZi{u#&Sx<2lk{B&n~58o)%Z!&yiO7fGt3{H&-FV-1}%q|A~R
zw!Jd4w#M$TU-fOuVDOS1^oqS|$zG`OyZk)|$i3=HgOCn?oXrHjZ+BeWY<cf^KaA}3
zY(msxX`JL?y{A30o*B>Ih@n99bDsv`hw*!?LNg%&ZugmIVm<C);^J6OsL?~lK!Byl
zTj8F0_xm_Z`}zp=&Bp_dnFg`?p`<vK2KTJWp(6%Kq_7z><57lYaUPEIQ7ZfbR|5wG
zRrpG^OSr^_KJ!5({2uE;<`5qPk@^K0$`V3_6wTJ{w6!Eoy1457>A1(P4Z^q=gN=n-
z)mmVHC}%o3eCf4x%SY|E!uY)Pz3pp7R;P_1?fPPoTv{XTJBQ6*M(ub+b&2AlP5oJt
z^Xe{Hf3?}g8d_jnpv+VzM^tT+;Pp1BNSe}E*2nt8%}Vvk@<5l?YY=X?$H_XE1c&B5
zvP@+W)Ih+TN(@WYGpfmfw2tc2fu&{)0V$&ZT-$BpQijR286sJEvqj8<!6XX~FgXGV
z*-WDAMm4!Qg{Y-4jEi6^p7RGpwHS(xDO548q*Q-y@lhK#ROK+WEGyyBkA+R~Qmp79
zRs|gct$#>L6iywLjLeo}VVxn$E}7Bgu+^6HK@AX`ElheW`+EZ5BTLj$=_>_8h(n41
zt-~hQ;{HZ%<%RHKdO40u2Yl1W01WsI<KoKFa~u8X<Cg5D(qKYKRW4vU>Q2>qklAFA
zxha2`Giz3lE9)`|c|o=e4k9bw9lvKPk?=75Dt)aFoGCI#HR?|C{9~%s7<U}DX=iXs
zne5+VSlpW1c2sPW&d3#$&gnzM<E{um3xw<idZg)uN5<OCu3ltv1v*canbM8tZFjV?
zZsHxN;NvbCF7W|6Zq7a%Zq5Nba(Ch#X7|%>LbUzrOiTD|ot1{`k{Q(^eWK(7uf%ot
zz;j}b{y}51bZzvwu5AYS3uubKi}J7%4$v{AtMOK_!pvIJDx=>BwlcLzJJ=d9Zc@(&
zL2FMOb}PxCR=4D4#TuX>5$D>&)|@uX!jPS>BCMZbPVhs+ANk><)#^qKCwYOCNZXx8
z%*qhJ8*)S!;*0O%AR3UipN6%jP9j!g%S#`y6ky~opG_91UQDs!yfofh1Uz3(K$;E-
zZg3^BJg3pws#pz5#G$}b1G)g{IA^<X(jI&@Oz>6OoJLv!i)AF%JkocUCxMGt=#rBj
z{J@ybOVgPro3)D8DmK{|yI;Rjuqvc>Fb-W2+Dxzi@Hv~;zH(9-oHPC%rYxxddqtM=
zlf+F)Nsq;|?V+hH%_VM~=UI*ULhR`EIKJv4$q}n-y1Wq9@XBp|sZa(80_8@Gf6BO(
zQH_O|n1m8c{zYJ8$4*^%Y7L0V_<Ba4T1zZ3_a1*3<{8-M>uWP=Uqm&_OYgP{eDqrp
zxqp9E2C=A|iG5@@k@R9Y?U<7IlB}e<LS(m=f|a$bL|BdygII|!AjiQAqthgf5rfkg
zJHt#!HXu{xTJ!JRR#F9g>t=T#>3zSET;3C~Jn7G<0Cq-M9iY#ByED`>1J2;vK`YEN
zTCelebSV*qEMIuO+^8!_!~M#YrE&v8k*0$vlP(ZZls^TJHQ$)}$@Bsb*L67}4;tQn
z^Plz5B@QR}J@Et-X${?*l2axp4m-`u9w15S_jS&?s<xvzWo`l1a>UpI${EqBP%IK?
z3okTjPUANw8`Qvh`nFWHQ3}$HR1@c+2&mUcFpJPzE57E1dax{Zu1IJdA15^U<TUbl
zD!47Iii;wi9FdF4WX8q+P&zOb-FN?kv!qvXVALm0Mza<6UpGMK5DkuWO_lXbl=aBw
z#-0tHP@T+B9p3@mk=Pm1{S&RA9^q6D;jDwZG9u<3RK7&vbc<v=#W1g<TlhBqV*Ijg
zntu+ojh4qAlUfA{m31}eW1_W)HLHQ`!!*aM?$(w{=oEw6@6qzs5;ER*!thDc8k#qc
z5ol4p`i66(Il8^-z#0!)a#`8MTMo?|;04rac{Q=a8_ZK9&TZj-GG2~Fd)G0MT}UER
zfZxWeGqCmmK>zo)Q9vXI_FuT11Y=ozTo@1#x$opZ>38a%2q-)R1qjiI0AQHo`k6I!
zu<;@AV4-PJ|0zbax&8r{(6~tc$8CeXj~-U<r(-?e8vWL!jky`Ds%=;KU%MtEwL*PN
zow(#?8|vA8HC2A?Ds`O?><{e4lZ>rPRP{-w*VyOx?E~+e6YrCWBtQ-Tve)fH#nd>Y
z7My2plL=49^nlty4RGivKb#K-Iii-?3r;H-j2v}LW;7E-OVlrA>LWiqqQ-uJPMdx!
zgNb~gV)VKIN2L5MVW_j`sN8w_hzw!hQOxn<<zJ0p_-GAj+_py7(7vQcPQ7@6Y|n^y
z1lpH+fbFQ>F=VRNs>pXUL}#KUsK8~b-V#FYsND)c?r7YC10a>gUh*OrUgD!mO!>(U
zM$kw^qSA^D<IG$~SO{PV@6cnd=`UNVG7UR$2lh^1BKA7@>{IP1%Q})7@*KYw4+&M?
z_wUFG+!d8J8AKvwGzF~EVk<JPqqC>*5r4?SR!A0)3_mFlMvNd`6<Fvr1RE^NmLO`c
zaoeq(1vFNb0P2T(^Q%ry9St^h2oh!oJ=M7<HIIY44Wwb>h?nBdz_qsIkq7nojEmbC
zben94YYE+49Ib~ZTfNDn#cK`@w4GOE+s(*dq^dBsxMIxZjeqnoTdzVtu2o|HNm^`R
zYtKS`NSM8uHcuT<_)Bopgf&%JRD$!2C^L~cQTWhY2Vm{nhQ-V8Z%Ck}kzPe(fHKFs
z?tN6P#IPF1!<jHaWRllXDzX{KyBS`u5+^m~wi~8jv#VT6%Dv{xW_L20i@!sMotm&S
zF1B7R&Nk)u<m>3a<>tVDh&4nmi9tJ^{IKz}Q}n;!<M017`O%+9+HXI;rmii{Wpxyy
z{Og!e8_;xL9o+215A@_paZmFS`<?45<UHuHvf@E8Ax}mVc!cyj^rFi2GgYgKh?0BE
zN8LT<?1-A8GRAGGAYRsg{84!*6n8)#wz`H^QC5y2sR(X^zC?QV&ygy8*wrC_%urQl
z7Q1-4r&KcTEYqdMYLp{l%Ygu1C`-PfD!aRJCLkiqeM=Xh_)`pm>7WG9FVvjkvJI)q
z?%$WYMyrqFFfQWE0VFPy6?ar%C`IN1a||pllO=Z?{Nag{q7=Vyj4B7`U}3uGl3ahE
z#9Sx+0VZO~turFc?P)o;R8Cl6^lyt73csSg6%VyxQ^cM=d(#ia0n88m0b+4x;$Gsk
zcR=)RWY$cZr0j4GduQkhMJ3IEfEHzS@Te2kI<{*`mu%f{aWRgv-@`c^ACUH=FBRW{
zhyo&D<O1&>DcW`4CZH0cT|GUi*M?RRn-*=&=}iIIC8+?f?z*qLZUOhyWxXJ4`p@%*
z8pk1G#ZL#PC+ai$0|rF<16s@)aAw1@1^`|Ky?r|oUo%t5^n*@Pd$~m<f)Ve0sLuWz
zEUZp}E3I*t^`dgiw)&4-I5nMD-kO)n(%8Lgj^jt4WNcSswZ4kAleO9M*AZ`u{w3RM
zn(2%bd(Wa#NbGAlQ=1XGs<33lMA^b%f9twtRT_0GUAf0~ZTyJk8m**R*|*Lyc|g7v
zjW!x*rGv7{?D~04Z7K_w%J8Qr);%2K#`*5AFZ|_E2sJe+*o$&jRUOWiMbrkY4Shmn
zapX9cAuDQUgYMQw-n14-u!)CtS)IiBkMn5s3f<}R^RAq^W!M5)`7a)p0(AjNID>yD
zC)o%nDnLg2GIgS?m8(|i$~1N>X@J1x6&A6pWJ5F2CW86gbn9WpWaFUG4}Yj`J8C5}
zhLO@PE&V^yM$`4!E<}dzS!4u6zqN4Ax7apEpAX!+x3(idI1RX<c!>5pX2W!NdaA6t
zp$+eR_qgc=S@ea@|AJnxMfuu{a67lH%=q~}qZM9fH{7~DXG@5=?`XZyzyUJvD!2OF
zzyoc#9G}gCYawGSM(`vXkqBFXbXyX9;d_iXRqfjkOrB(@0W<g!IC$L0Bh?svI44Fc
z>khXBhZ7c^AQYqwq%KHSL*8WWpjkdn_C+hDC(3l^N&K>{(CC{CHj2(It2>K2z2#ty
zL0bY{a++Q9y5E^8r_GZzYXDPuBJ%8a#O+y^eXlDu-z?Kuhyt2BTi=cHGm1uUDyd>V
zm>uVoCfAYK15_ab-a>KKdIGH<J>CG+8cITP1!)`=(8}=xdlu^syVj0*w!Z2$pS3jD
ztt?(xoW{V{$b9sfoN|WrS8piQ>>EF4s6Dm80;G*%a0`9j=dX-)Jb;(xPEm82wc~;4
z>79zjl^<&Ntpenx&n!A#$6|N*{45@A?!zM>`$@e8tCj(+6@dbcnq=J_cgq*jC2LqA
zNc+=Ot5T{_&fH@WMDacZ<e%Q-o6!$q68u4cydW!^zq=u(n-Q5?Jo*i#Y)2dG=p0I$
z1AhF@K=5`fgl8TQ9q=5Fh}8B%vi1U_@=9&UEn~(nVaG4Vo<jk`^z(q<wC0yvNc{@6
zcTjx`Y$ynWR9wX^j+w)skLZM%=lM8!rkj!+F$j;$4rI1Sl%ud)!ErTEb=>0$)6|+|
zgQq<PL9y6BNQ54+#3q$~*;fjaKgPP#A$)cdHR+{uYgf{wzW^Ss8LHh>n*(k?HYeO>
ziLcT1NH&?;4LpQhoL-X6j!bQo*nd`#X5T&!q6bKmWWz`X-USoHAHWuIWm_OU)sfon
zpWMctjF;Wq5=_tDb;*l>G4OAD5xK%6w<V2S9*~Mh7DomoArb7J6R7kl3Aiq757`)k
z9d||1RNIG=2?<w4?^1t(HFAiTN~UfLVr5sR=o4dga?6V{$VSD@-hiZIzO9S&E`5Rh
z@7f}vYfD|}+ka64Qkv2NRHmntXr^S;q-7K)CMW2}CT9+QA<-zP-6~Y7GBc|&v)6+C
zP?3W)U)e>0Bm);ysSeEls9ZcuFxq&`A56?t-8#&aug;(EOqkqM)nWXvV5RIg1CVAK
zdUNvoQ@EfYAm6SJh>@$MjR}L3sj;c0gA1d>H|!7ae`tRkN-TB*%m|yWNk0O~`5f6T
z#?*61=ku*aR2mC<6A)xL-#*qAL>1jfI>6tDl&;%@vm0V)SReWBj=)nQ4V$&g3pStW
zW9)VgIfZE;e(z)nB;*xSF~DM;HHe<emnhk?Q7<dv@>sCiiaE#?Ng~(~*2qTVZVmo8
zGDP)xjpk0#DR=8FW8QQevY#F*u}C@%{)or>)pmW1Oq{ZV*!d`FL5f^*&Fpk|345G*
zEx#lPN3!t1q6v5M^-s2yPy_OU>>x0t3hN492oe9`zYqxj`3FEBQ;Ppfr~A*ap~5r(
z?7zmqRoDIhTj~Ah@h?$W!qRVo(et-vzz>{rBL`+j5d!p-77Q>(zGgVvt1e7(NxE6F
z6T3)^!~Oj!1DRM9+4~FvHIOUQIJQ*gv38g`?}qU|N%W=j$?p1*cf(k}gXzxra>L1#
zS3FAJ<d~I4z`uWQh`GU-m@J2CgUaDRc8aA6TC~(;a|xO$aTfd`4yd7ZS425+mJ#O1
zRbY<824L<AF{Ohy=t&r6OP{Un;1p><cdfo+sC<g9SbvixW<Oo6!cmz9U-bEtGFCX5
zW;~J<;TdZ{w3%4g4oF&WrbeA3V%gfQv9Wwr;<Hf*+^cUIm{PFA|AmZ1b`2jiPv~jF
z9ZOm+c;BptSgw7UEg_{uOQCjP-{LxNvjUJ(2Gk#=d|)!A>#9cKS1Z^}v@wJ-w^Xq9
zkTKyVBwL8sxC*=YKdpQQQ!Fz$;?T~q?kp*`xg#&&k(fqM0z2|Wo6Mavly%KP1|GUY
zx3@|T86;1qqC1mtC}R)$bL}*}pJM%H{zS2Q4Vq~`i4Bnay63DB8G=QG$62Ti$H$xA
z19XN`L`#WOzW#d(H!M%VVw-&077mqvc4L+&GUoOxFb;KY6)Weu)l*3^G^-b2iau{L
zswsv~A>Eq7wS4m*BGs_eR16}AB;_IH#r<(5Xi4ftd4CC#=d(xE|6Uk6N?<}nIpdCF
zaFbV$%q?SH(9NS5522KxDY;@94LMr`0w_O(cNOpE@PIq~1+dwtMvM()<GygTkOP|*
zi&VlTN&5<LAOsI7<4wG=ZB-&-yu#;n7z3fANGe1b!)7M(w}*lqrbu;)ZWa^bI>NCR
zK8PV$XvN6I;ujEBj-C0}qLg%f32$^+5w_qXMw|ksVEDs-lXRkXrxv{Sv)M$SOH^%j
zvvxxNpvVOhs4t;4!zRT6jw^1#O<{rhicV(;agVLuFEP*dC{FwIUvb0#Oy|x@1=jfQ
z=^O+!NK*i`n;P2Y-4_@%1#0L0G@&8+w(1HaVCzuP5hAvWuZj`0+{UhxUut^CGN8Th
zz#=Gz8vu!SQ*KqF)>hmu+ZoT@o;Mrz+m9nNOgkVLcayy+$A~yqb9K4KbN-<eO{u)e
zYUwu0BayLcp#cnMqXrqI$vHv>v*UJKMmS~CBVK?d{%Y-QeB~w@R&7V?enFIM)pzPr
z$gp{H>6<KwdDka!CEl2NZ=WChsI5d|Mk|i=H8$`&Eif%wj$NT^x8hsPlj#f!{Y3C3
z)#+VW+4i1o+exwrUJRSc3vE6}(wT4zSc(HSWO7^auX?-(p-YjGzSy}yeNxm9u@!ij
zk!`@|cBQU$qlQ4el}H(1KHlB)god{`PZDX-3Jyy0#rx|}LVNJ$7YJ_Xlj#7eh)P8L
zU#9XY;q_x;ik9|})#6{n-5ZZq%kX7(99v6vGK8`u0VZHdb=Af}d!D~zP4{#<V(odl
z5f00i1c(-VQOXYrASnNsN$Z_V)jAGXw*LZDGGGmOFg4*2J@vq*<7_zL^%=f|THu+z
zW%aQNhz3dSV+m*>>cYx(7_O(8SZbsEZiV=gM;d{t0;e5Sk&e%?0C&JY_~|ThFCHdD
zD(PrY;t-Jf1ls<Ds%_(aceB-=ED*$!mqj+Mv*vu1O<LX5E$ThNh{}ZGmAho=lk*QC
z)+@y_Ir8V|AoU1+^g#yW6+_*VlDu)*4iEL$HhHmV0$-~b5tUQL=q}^j#E&rVL(4M4
zAK5YCJ%#eoHcolBgl|7S8JSnlU;nb%8kA@yP%DN_B_w93Gjnh#?<v&tCjkE@vu#1S
zzzvrf#NM;;Bi%Km!rKxVo3LRJi-H#59}18}Es|^*fGYiY{jYGs|18TJHqoH}7aIDX
zu@JV!*T^@cCJY^Dm_`M(nkE2jX<B<=9AWzPm;kjX!9znp0@O>=|Cl%<gGS9ZlI9nN
z3ggR1H?AAH%R_OoZKSP1Tn@?VTy5#ka;kgR!K`})$fAjMF6!6j|6R^k`g-zw<M(~r
z$*B@BH*;&q*s6^XdOyi{$hz6=c7C6}9{S1#fC}?%C)Gi^SLafY7N7%+(d2PSHKS$j
z?>+Tx^a=EJi<M+>kc~zAQE^vxOA#R5Ssp`}yEOxt_9o<ATIBb8`Zv7Eebk1%d<3Gs
zO>G8zS-S)5@5fq9zEc5){Wqa^0>hiX18xqWJ3oH*$GyC86AO_X;1DI=8soaw_P@Xa
zs60KXqjT<`4RPak&E)~_4{#q~&vGvm6`rd7HRPEnKPwBZHIMzR@sGoUfx&AjA$hhn
zmgjCtqRs?cs1{cZm+{M}I^UPnmo@t>uIh$|+1a+uQ{Vii+*~>+GXP=2Z8ajh=M%MW
z{Nj438B$mVcdCO8I1xpYjvN{(4w0?C=ukMMv%fZ%>Ag5zb>#qsFUd*1VNH%z97lK&
z%Yp-rXEsCrEJjv#<CJ|I@UiZ1@4;rVjZn|mMvm8|dy9>F|BkyM<+~P`5nJSTMSUIb
zO(pYMPons|Jg04NFkt>_I^Hj1%FpNE@fB`BH;Tdbi@#N-CgUvH1U-YY4sN4qx&tj0
zQoGf@B@g{g|9(K_q0Sm>$JMtRYS#|dasDu{RJ*APYmMs}@8bwovHF~T^>iVn`-@>#
zy~l>ILej-O?s!s1Uwg-)!X0;Cp3>z>HZ7$dj6yP|cfGRn($!VRnPIvTZh~;>%2x!J
zR)(qZ%vQhtNJ4NF1vU;|cz5Ru`AjRbeM@dHfy}nE@c}U3H-V+k>$x`WYXECRZ2+!5
z9(%@xlX-k`Z=ua?0r!-v(TCU?pGO6;JQ-HM(cDz9Y5sD$0_T<|)u(Qw;Xvp{y&4fm
zb1K>rD1rdX&S<B?3v?rnI1_nkff$*B<<<C9uUcN>b+y`@CtPaOU0S+cRGU&=z}*r3
zbQC;zCIs+Sj*Qmt?8<Q7&_F63;09!E6_>|RY!%>gx{5k47TU((I|@{98?IT|pe`|>
zDbjHV?a;PDa?yEUiNQ@9N%trAHs>?$SaTzpCgt$B9OVL3F$Wu_7RZ}+-bg}eQ~P*e
z8{npm75kh$B>NxW^n0V={6_jt*E3{Wp_Z&9+W`fNr_J3auS|Q-X#a9|<1T}Q_C#ZE
zKJS%pSvx*wJS6%gI%#YDNQbHu<HIjF|E_`;w3qL4e1xQ|Kynr?;l|>v0Go-(at4>o
zet3b`NPDRC>Ck`JeyH{DKr9+1mG7c$qqaVQKUoFDQZ&aB6fZ$KOii4NfGJE^k~|h;
zGXZ=9+V{IyE!Y>=Eg4E|a284z?3r#Q2`_atT_0^QJ-o`{y6oxs^D@Y;OG_$J^iwu*
zLua-5yZ!m9LiMv?1SGd2f;r+n<4)_65zM);Uro^mdP;ixD7eYK?)1yS=^8cV-80jl
zra7(F1mu>Ja6#Zaoc4<D^$GFd$1KlE9s$i@u}uFOk76LB1bS7wV;!;2Happ&SYwSi
zaiSaJ-$Fm~+>9wp&jgb&H)~O&Q64Rhn9XCb;(h2%hf0rcH^rbbw#{vQ#r%Fbj_%*R
z?iEMcv<X^>n0)>*%h1<5W;HhgMm(#>K0i?)Pz2x%SZyh>Zjxr)j0CkL%b!yg`2n2!
z`W)iT+KoX!^D%jph~27O8nje;F`RT0++m64M{&8<)oFQ59EPf=@4oz}w{_BjNU(H>
z8;05HYPvF|=F7NXlKc|f=9RXc#61d0sQXnyo{ReW-{)=id@ZkYUvInu<!U?X6T&d#
z8iLKSd0)w|h{S0O{fjLQFl6(Mpa4a4Ji(#nKRHA0Efz2eEgmrX=gwy_)Ws`c>2mJK
zx5Y1#{#Xq1gKF_d(%#{4Mgm)9GexUB2x9hOA5j&k#x(_>jEHwdY}_ND>yC<u2Ajk9
z!>hhU*rx*(TzrbSZXw>7$go;Vq;Urm(^Jn%JjR&p5OxP7jmg~mp<&BPMF6qXeH<*K
zedbU)8bW+-Qwdwk>L?M4k_eg-@NY?-R;Eab2Ugd9rF)QT_tPZe+npuCA6qbJ2WNu=
z6fLC#PAeHXk8cm6)XcX*lZrVa$yrlqa(c^wSK}{jceg?L!_Oh-Y~CSkj8b%d3Mg4#
z{-Ruq7uoE|Q5y4351J^UOu$|bg>9jSKY@%Qmg(iF%%Z8*sdrU-?uz>DKLXA-ZLYts
zHpKaJu6V>x{xczph4y}?ykHubvAy(L=-wG-cc|(*61_`-W;NDt_!%Y2&gY+iS0gK?
z+@Rb9=T-hNUfGd1=>hh9dRx4hcuHb3(ZFJnPKJNou2{BOaGZshjezF|h4AWw#rH4r
zpV`R$t{70^@S0@$#g$#sbpXtks1;^X{Sn7ID9WJ>56#XH;J&RcTFPy<2lN-}%`f_Y
z*F2q3n}AFwx77N4jAsLMyCIQ;Pa?=YHvQ1AAljjk_=ligmpPmltxYIp*m5Zbm^y`e
zawMb1y0SK2RXt8{M}V0~D)C+8_1zh(R@pAfQp;_w=1)VoeUT8F*&sL-hcFF8gcyUx
z3+T|2J!Zjk3N4=IJ)G*0=(vSvbkcwLmpG=ruy!R(v;&$-J2e4cmVBWjqWAxe*ZI%3
zPhgEzH}zewZhRlVxV{gp|H0h<pNt|CaK{Y`_$QtSV7D@-%!^~MatkSrfNyW=PlAA&
zX@rH%oJM+Qj5|etrakXAn6rnx7xlYW+UVsn?nm|pr*p0Bo|yNHzzNSx+jD0lpxW;f
z>Su3kH2bm1<Glv*w}(B7Qb%nJJAtMzs~I1^|Bj(Aqj_-a3M&DNkEYM&VvCc!XUj_N
z^y&)*s52oxNASfQn0L>J0pEJ9Bup*DEnVf9+FT(Bx)Ccn_2tkFo!qW7UsWHoBe0G=
zUPB7{)l9!dla_vQ9;{ius;F1Rx1Lv4!LjfYc4M|ujOZA6+}h6O2`m^TS^6M^eEZW8
zLUKz#Om=U&-{{-c%Zz$68^|=ThY$6PS4v<Bph~y0QrD~UiZxt{3Wy<5Y2!TD?u*xd
zh|I$CgWKEacP*bCW`KlMMS5|m)1t%hT%x=IGdZosbCr8Y=PyY5B5XRtEq<#(z`xU4
zC%0;|;>t?zHok2hbqmfpS%hOf)wqSyL2JfUzga~SN#4ky!?)f2P(j<KrQRcSJ(>~)
zu-FWR(py&RH|uUWA<l5m@fpVrkzhpc3JiGYE_2%@<~iK7wYt^iIw6QD7ZqT|*~8Q7
z={*OMu$O+e`RL%Qx^5@5Y*H8);@HL6r@IvUGl~R>Sk9>BU(O+FOiINJHO;}DRI31)
zj03vuyV&`CA6+p>Z<7nQK(17^Evx?kG6lnKgCIbI9<TRh-9ktcl0f_o`5|(IX_Zeu
zvPKgct0yx_9YOEl`K0ct+8If&rrk=Hhu{ley1nhh`Gb7cBbTEfuvw^QvmpB7+6kD$
zl-nL*;y!_uyRb5w4?NjM(LN=oMhD~(X|}vu4Yw}DW1^kXN;A6o=E>P?)Ftt{8U)Dx
zRR)&wC_E2EG6}&5FE}BC){St6)0!^R^`N;DspS0xYv`lzFP4)p7xYB4yds|RDm3+p
zYuJrHfInhnh3b{xM9MUWPJjP@y3l{-{-Mzl6)-A081`#-c%?rEpR2tAC#T^5CF%d?
zjUQfP+6mtz{WL`2OdbjF-5wd>yr7QqFA-;=P67>KaF2+@-xz%p3oNnlCrpd5w11(D
zSgu5!nv`n1uGaDVd)Fs?=VR4T5pttSf8nId+n|{F8`YcGx}TJ~$y&W!F)(5}dntR%
z-n~cQo*3};hVP$pXG_4xOkvC$%PH?_z_)$ci(nS=SnM%L;Q;;syEzD8xbu)3-hkZ<
zr8O3j6pWodFAMy`PTECQnD0S9oIBzmMZFW#hf+@AxQu};Cn+=Rjb>7Dc$%!0Jj>xH
z)m3p!8*6u1%x<nJI+Cc*u2y1XjrO$MLs({qxI}+kOrXORH9+Mls(fW+D#Mm_22DY<
zj#7)qvFMaWnStj@hU*AmRh}L9)N${VmJZ!g(VCTQPSyw+tF+2klnuWy>#i5hT9xL4
zX}8cxny<X3m*w7sS+9?3%df&hU`XM5+$?QsEKCn^+*+jE8nr{4`=+#H0nvV)fkd-N
zH7r4j;S;6Cqu@5drBmZ7DXJ!8v3qNGqW4yHT1}QVGd^XrT6qF2o6bJ{Ky`mstBlm+
za_rNeU-oBX8&}rk#mR{(`8qWBg3r>&VG&MNuc<GR>Mv%Fse#!_BL`DA)+n$1urX3*
z$a!idGo&W`G2N?u?!@n+_{Um7>V3hQRRxSY&57zk2%r4Ac**CY48N(#X~@7#N7Q~s
z)ukX87RqJbJ*xpwa8_HxktdI~Y&lSS4O!P*0?kdN^QoZ$Bh7@X-AmrhYp5;KZ^qSf
zJ4mzmyL4*xXX}7<dc8?|0DYj6)WX+5irgSgh0#gVLwl~b(&+i0+wxr!oB2kpy?kwb
z6AVbcIyp(LfS@k8r*J7r3tG7A{p{#>I3ff2zV{blQFmj2l8I00E}73H(z0&cg=sV2
zQvL?qlVMMw(rsBFxab=~PSh3lBg=1V(H#R~rY0S@c^rei6Ki)u*WX5}eHt&?eOy1>
zcA{w2!hD?eVw2r<e@#~IyZxTj<n<;_%kJ=s6@dE<iDuO9Zdo_$+J&rZHddRQgLm&O
z+A&j#x}bLs2rGh%2wPcE_QzQY%r)k<p@Sh*lcSg_>@!%fv=p#Y7GsMF?5pfc4Zb>?
z`>K!SQCFk*fdxlEisbyKsvy}A1(;h1Ke3!#*@5Tw@X!&o^G2NzXlhW<YF*H+fHJl7
z{E(CBa0I?RUhS*^$N1)^<u^=$=K1HI)XGna?}siEz%*NQoL_8XQ>9Tzg#3YRSwN(*
zIKF`{T&C5@0g@1n$Ou2Ab?_k~Vv;Ewp<38-;IaVl?=50`J^sKM*~sU*@C&1THj3!D
zK0`A!;)uV9MY~fx3V|Use)lHrlRxb^L&G8UB^*wQ8KQMwk$~dfI1#g2ZOT!oMuR3R
zH^oXFz;hiu#S3~>XZ^=HiaPOqGgpo3q7y`oifpkf6qpUP)`f)O0b(Y3T%KUMFM;!C
zI_mvZo${%yUrEDL&pUgr%XS**oGyWJj>a=wh+hjIw90K3&K2X&hBvsr1(V_4S{!>b
zQ$*@`N$24SQl1&h(eGbpbE!YmJE+uucBa+>)G-<l(61ai7dA|+z7X!OU3Z(>q)$<D
zMY;D=pTUh0&2auj>56IYsvcu)UIfV|q3BZ|UL9n-_F4<mqo4J2Gx~!|WSCupdaU(N
zZ<t4y%JbMEzDJY^a=gY9cE};h?L-$Wa|Dv9Nu^KUEv%faPhYY5v?!H!@AAj1wyRq|
zfX<D}Ioe6FJB+|HSo%E<Q9J`~v16m=x#-w$wS`#wCC&Ey#OdKMA@A@wZF351jPN!=
z?p+@5UU)2R6unS%+HN5Yub1rIW7wAnvV>`k+gBTS242lhsMmH^yY1vcwdrj#@0{<6
zDFaK@+1h+>g=S<1xk0^LU8-2!i^fDu4_vAPQ<HsN{k1)$gKwTU_IBWtG|!>Y{_nqf
zr2J>;&a}~;0eU7nLVOkU6gFHZdi}T9q2pnfn)oetjG%t6>zKfw^Vkh*4XM!orBXKp
zbdQ7nmrTuSqtPt;T_-_&?*@|pBU3+3QGB=S(fe-KgCW4?L%(Yj-~6IA6q(G_QS@d+
z5+iFQN^T{(@C*u-X|`tTmhz3|1?&!`q`w&WJW1i+(BsR)L!pbMdY??UolFb3Kb_Rr
z?|`!3@`Hmbu}Ys&1PF8`BC5KyTIJg9mIe5Rn#l3cavOyw(NQ7XHS;AR;OiZYx&szu
zetV7N+pCc8xI*^}qGr#(Q{x~D(&p@m=)BY)yv*OJ<xZP2-6pcxbpYA+B6|ORBMA<q
zYi!|nQW9_5FT9McFC+38ssgI$`xS%P7S)7cW>WMm5lw-8IKh1F!}@LBw9_G`@a8sC
z@l!|AMPfYHTDiI<dGA_a^s&g_hHM^Q436dr-23~#G6IOHqj0m693)0`Df72N!(Jm{
z>6YeKNtK!WM<(G=7o`|NRQV>fsvbR8JnD@%vftKi?_~MokDFy&f9w;9><r5`yA@gE
z`#8{{EmFB5Xwo`lO^wiXpt4yyKXzDt8|82f);5)sg>L<|VzH5oJ6^qtCIqYi+XV-n
zBB2YR)Ae(4BQH*6(1HZH#`BSxk*Zzuvt;<9=n;t{&NXhC4joJ^70yYN_IY2A3H%Wc
z^KxKia46zn2&pn^mY7iZ)?cFsr{&-8)&gm2Q29g1mB<FznA>pc)lbq;E1sH_Vd#z=
zf&7Z@%#QFas1sfJ>F)XI_GYLB#DA)m{YaEcz917ClCYVk1ESEhHix=u#j*Gf?+BzL
zjKn_z>EjX&Dw3!tLE-x$Pz4JgaNNW`$Pz{0ak%;gxySUyVz2#j=$*=T{&#f}Qq+iT
zjs^lUO#3}Y83FJfs!L7!bPwD>AUJtEND%)I<T2v}5K;eIR&mut2xgejFb`?Pgn%*m
z)HD#~()>l*zseQ)2EH0)Rq7Hl;mVa&H%7J<zFUGeH&=hRbvC^1y*Iq9b<TR8($Xg7
zktm-I4lV_}Yr2-#FYa!d+_yho+R(+>qm+*4k=_8W9{>qK;<1w&yibOde~QExhj}Wz
zR|fNC5n2ZXSuU1(yttRkYXkae%j{2<nHeLzCugd?p^C5kq6hK3n0KZ8(<g!ajE8K8
zY}yAuvXE|Zh~t(l`QsK=YZl0fZVuRvo*`c4F(PGn^#*{xy7Xk`W9E_3@_+BXZLtMk
zpXOmU7XTb{)FE1ooNKw!lVe)r(LL;FB;2biToCOZpNe3ExKfjy8&S@H^Px)aoo*JE
zbJOsHi}v^fhkmYOjN*hxo?=s{bU2oEr+CT35S*NA`%g2hhc>*GbC)`1-QjPhAeB0g
zl3DV*MTs=eZ$a!+AJUpX+Y)%cGo>y(isCLf>;QkRX;ItON36wf<a{=%dseJ`$`mzV
z4qSCfy8iA*`ago<{XRaRTw8(4()KKP<b3sL&^&R<YPrSa&FEYjnaYR#n9FY%suHvV
zj=9AI$q$-T!h}^>=#54XRpKn9s%707kZ<C|K@Hft#>XnMSq+mZ$F#60RI?c`M><Tx
zjQ|4gb`|L|!fAH&v%2m07Fy*7HU{GL485J2aAUOQhFfu4*pWo`hf2~e3}_v2kk~Mn
zpp99=o6W5YY^~tD%WPwGl)c%D9fK_!@py!AVutWLnni1n*fznSCMuVu7sv5dTG>qf
z*Y(U6$Nxm}k51t9`o*|dvt-p-{awebzymb1FD^6f)VI4`tskYZGrwxsvAL(K>D?KW
z(poiXbyTQlI9g!pkFwJm(REbvjTx)rxpu9=rf&`#=&VM&OVkY<r8Pud=8&>&s++QD
zwz8txR#-))Gmuu4^I%lUUfP;6+pLW<>VjoMno(n{sS$75Hjz&b4dT~=b7b!^O#(2Q
zHM5i})>OOwF{qL8*Xx7gX*n7N@dlYSb66BaY08tcv7^&;#IWeE^)L{i59CsHDT*#q
zH(leg<T&A*@Y;Eswda~dVU+2}rpzp|a1qCE26OqgiGuM|1P$$*&Bc9WWNU(De=rGo
z{~24LkxM;JvLUb;nzvDo1jwZeI{-$liC$p)kZeG*CfvDn#{36~j#CPitNbbJ2lgV^
z68m8REK|7icneUb$gLh#4)Cl{*ZKjok>m#&^f$TP{=sJGQ~m4GqRkT+NIZR(qqU9U
zs_!DpO!A24cIb{PX<aPPExfk+8t~|z`aF-zY+M4AY~}5I!1$v>#IVAIM1U5L&AOqd
z^Sv+>SO8i)Mg=1B;Xz}9NOUHczDBe<X_rnI{-mPKrWre&d%KuAj)I6Yr;U%(8$~V!
zCOsHlkmexkT-98paUV|_SyX7)Z?6)A=^~Z}M8(Gv@8aeLbX2?VE9X1mCM1ui(v3rr
zl)zCU%q9@~s&UM*_z(6bbpVucewlU065{HrWoSFeqH)N9@@v<oT@-7)XF6W8T6}dY
zL~cRosBoqj;W_uHiKCwr4m%lJVyII#N@c+ElHs*kdb+L1Hyb{=DR1EqgUfp80?R?G
z*Y)fO@PPNZSsDekxs=@2SC1T{K0Rq9OLQHylAoJ$aO_OF+3JFm8GyQ}0<24<t2gb%
zWT8_V^=NTxYK~MIMnr3rp9*hPry*vYc?J!Q8aFYP%W@|N4s0%#OrNUKo|`#0U`8oq
z@Hta1JSOCc<YGVyPhY2j)16F=JBKzn{hUiMsT0;br0|>kRZfp1I3O|<Vvl-yB`Rtk
z?IMw(JOCRThdY@63xI>;g1u!sE7HD@%QR~XwI$-t8l!Ztzl3>n897j#yk;0R%WXG{
z+&Ymv(1}j$^;7T}1O=MYBM;Ylgwk=J@01$e-Li9I*RFd$H|&h1ct0;TNaQkp81J{~
zEzvd|f)H6wMOt|n{}aK5ww7<q@H;|xa?OHAPhZZ_1>!$~9RNt?L@Yy){ULaGP$XQC
z&<q!g8UhV_*EyCJ*8xsx>8i);{?rlFPCqn4cT$hRt?h?Iko^fChy{h5aS?3fP?9Os
z&KPvaDPz#hu^5Og2h#$pT-czcXGC4(RFbLm1Ut8add5V-ob=-EK>p)upB6qsll1o`
z5m#iu*sk}hARy=lTa3Tg9p{5Y$mDjwXLOfoK>$jqKhDZ$aJL4g#ReK_oHK~{poS9s
z2YL^MUw78tZj<svU{IPFVuL?^t73#}4`t2>qF-Q7_NF=5;=o2#vZ}*0KIOxuTxOrr
zy$Y^QS&ZbA9S<wJA6@_|HRox{BVABjBxuf_IildO62NlPcvh)xW%od9LZu|U&lk<{
z`mFA3FS@sZWqtSL1uE$M)e|PIy7LhXj7D9T9v(rE)RKD`H-^Jc`LrkC2St@6_<D01
zDMp7LA$O%p2)7lJ_r(xf@rW4)wDFJ`49x7j-e%wr5}PK~NGzs^v>wab7IJ*6^GOG8
zG$u|RZ9pWMrL{sOB9&CSZMx=W^l+3r<iXVt8?Bito(ud|`P~FmPk)WoN4m-2UwQnn
zu{v%vBv))MseVT`oY4HND>Iyp2&jyxjE%iIvtUhxJDPgc22;r+DyYgUpP1iVFNn$}
zqGQEH-kh%bYWQF~UHB?pkqj9VvWR{_)J~PqXaI#S(llX$#pp>8q*y)omR!HX{?=<&
zfaOz3j}#(wq|$>Vi@S#d@9CIP>uctxLm$QqdrHyXuJ3Vy)a%(9;V-7o&a>E|s#p<Z
z*eAzMhuq2;-cmI!A+K2mKv4U!c^=ldKn*VXWdfYV!ESr4i$j{w5AgP0Va$(R_Ugh%
z7eG<L7kfy>Df{y4a9rBe0CjL^w=9w`c6L!ACekw4UsYyDQ|LxB8>TDT-`pM;t($hk
zc$Hg@e{+M{=Lpq>BvTT3F?U`G&7RfUx}*-qHcXTw#I!m@wyE4)((*L1MCSEKG+9Qi
zzB(1yGv}tR_BS^*SC%z@<VVS>b0_bUkpoT_nrr(E;lC!YHtw>_Ohi+0w7OO%35K18
zmm9*c5Lz@lj`VtC7^+Z+YaF)It4U-j=oVP1R(!PAJR{iX-0C*dyNcT%!So0`bBeWr
zfkH$wTU&AjYQ$@1L&|><N^3SSRYuX+A3`e~bUO7yXb}Ej!*YrD%RnE~jURF*M*;k*
zIm;%e-691_dKJOp)#lqAvdL1{^W&?h|BA%xq#_~SACfw98J|uniCbXRlh4R<oP^Y_
z|2#$Cg+9wS7Ap%23XCRbAvTaS`;luq`%tOr%%19Vb&*IF{ffkiTb$InQDtYE9S;ut
zTdX-k1`6BrvS=Nde<$+6`yMkCRSh5%e4-ocg%|OHK>)otW1>ONWc4Ol<*&-C#%aX6
zGEpEX9Ejc;eD4iZDzY~F$(K*2TU~L^Y8IxheV23R9)eLV@ol^LD-+TVOYT-++BLJ<
zm@w6}U^BSv>gF7B(Z*zaOu?ki8w~|2S5UYjqeGnb2QNoEsI@#ONqdF$L;_~D8iUfq
zN97KRJS3T<>~01hC6;;!zZ~Pg`LE>+iQa<B|G3-e_Mg84*6Xo1DYw=vZF2(_T0)-b
zu?a0Hjr#WjRXCebHL=MSG%<zFXM&Fi8JX85(BT*r(CC$%K&d%J`immn+Jy`+nj4(9
zS&sDatuFR`oI8*MQE5u;P{0jXZAAgBOEwzwuvr2MNms`yY51xX@<IxWxph`Ssnf)G
z+`=dk-e1+oDvh%i+88yvNHs<Q(Kw@jFmLr&HM?H}k2r0?WfvrmGvN5{LPuPGRYX+Q
z8V=73M2q!#3sNLko>i1pwEVp-<;6USV}_PSuH2vJxQoSnetG#7+XH4_@RUM!7R1bn
z_NhLy`(Xvx?@*4O7YZr0c-!`1cB1z7iFhwiVxWt5!1rkc*qeqgo}XsfQ7%FITqJ&;
zJs&b%=QUJxahjr1o555auY9~5b&FOp^yS0XmZ~!F%FVS4!2YWJ>)lDyJ|<Om$&4A$
zPOun8Q<DRBt2z{=2?of=tFhU*xhfbZ5TC@^J5rEVU7zcK-R4NoUqnlMr+q7fi#EfW
zKF?bd<?jfaj(4+)nYp>h;|VLBy^*uSE}sR(&ED88n`Rit1gZ&%Kh)8EB=}C1&ar8o
z!zO!09&LtxYsH6)6H*p5E@LtpTr7a#V&tL}l(TWu2fSDxen3Nh*fBJDwk~aU>@Sd=
z81`7sIn_ZA20caWIV^2CjXx294NE##6*fHu1{ZWK={j|BEqnpFt4B1*vyR3XKdAC&
zYH{LU&{_G+ak<~k9u%{s`C3!+b!8p1rSvwX`8>(4_H7rZvRo)`iYi_}uJ)uXnS^3@
zMl6VhlveI48UZ;w#rQAa?ePF5t_R{X^?!6*!^8_$JPH5M-UXy<?MwzV&a7XyWq@an
zUSM5Pe{5KbMc4+iLl`-;pe$8RFCNLy2*jp^LNMEAtt!(0irCrZYsl6tEaWca26Zim
zWqpD!d!hAMzw&rN2_Ppu@YN2o$owU6XGNa#hIrds?gjKn*bz!4D<1t;CKiCsc&1{J
zR2ImIui_l+^8W|x#S*~l%<==bCaI0I*aif~X15(*mOvJqkpWT{I!o&i!N`$GbMvIv
zh&bVsA_KA`uPwArArQZ-F}J%jZ(qD=L+y&@9;1y|R2IwAY{dh7Y_oi<&kg%{_U)5s
z@P-M@w-FFtme&u3j;9mfn=ll}96+S)bh!9#3eLg<xlBothTNP6(J?8mgUD1FK)gIK
zgTKo)=Z^lt0qbbsEg?k?_zoKP-lM%?S!}8bFYM(|)edmvdZg+1tr`hezf2Z!lh-+;
zca_&JgpC3aw`XKL$B8_}aPJh}nr%^6Xm7#O?*TfWjg4iUDbtWX%V6p$9H5XFUT2-5
zkr>@ib55!GIn!ZhjHQkm)Ygk2187g&G+n_Wotzo)AyaU*%F^M{J=9}|M$B3flgl=Y
zZT~hQQe5Zdgc})2eqH(b7r*!_;w(u0HE;{2M3z^=;rBgP?y0HW<E{$CD6Q3A?Uwb7
zd<GcK!>t(fUd{Zy@O6ohJ2n47a+qt8C=lhQ4+~YaMSe!nxDd%7sI)X<Y1;(7M=Hli
z*jdQdWRj(s7q?t-B>R#U&_A)s^iu^0X0g~FBhZM7uZ<#oZI0gj3u1Od*Q2eAMhVIj
z$k#Wg?{Q8Uyq8>}Lh3;QCMQgZ4SOjCmjV#&Sd-pef`Lc3#FtFJ7EPB;-a@WYBzgP?
z3Hsz5JogThvO^jyC_3vSPo-7T0ur&a=i`-eGVA`T`$n`f_uLk<y{GrcxFaicsBt>-
z!TTAk6ex$bjg)W1O=BRj0+LE$;!OI^;sxKyA>EVJEoM)~zf)of(m}=Y&KLajya<R~
zn*B@Nza__EB9;hUj|l09r}WFx5n*-}s`X2-E2@rTw{)1i6lfW+jeHsg^Q!BY<|i&B
ziT3iU^#;rCFlW;Zy}m7JcX<i<Rwm0Plg?vdD*#BIe>eeA(^+O>Hhb_O8#)juEMjDu
zh<H0mvB-ngTU65MO*8BAmU*@QCYI?o)K|te7h_Yh3n-^9dQcJ-Z-PvJ9RCI7xzsK^
z0jvLj$!>z`E&4UD{un^{!<oDgYqkcI=nE;=lUVp6hZ^z=K54_=g2y+vvkqb%;-}pw
z-6#Ijv6K+#8#gT=#<kGvW}q1id*W26mkfF{WG3q@x8@WOv>f_|3{o$3)&hY2V;g2_
zvO+a}0Zx_NTD~Q59f3SoEgbLd79&MkL8Tn^@?O?dR?83%l0AH|xGg85%AIhyk?^q5
za1!@RntowUY;OQIU7B;sj|=2|*iU<tyvUr%br~AtrSRanFjAGaBT4^S7!7nA9)W;q
zi5+Z5XwKq|jpS1-T?r6iD+tJ+IJKw#@lVm4*_|QU37$=0nww=+V&<S!M)chx5l3o?
zB_jv{#bQPTP!s5eed$va=*EQ<j7nR*#f?}}l=~?Tx2{B<`-%0U;q-%QCrtkJX7Efi
zM4g`u%S|X-&0M1-D~jli*f4zPORmRV^KzVVJ`4M+PuXeumi&wOa}Hq0f-J^*`L|@T
zs#JRlB}OR7?eQmu=Cz=x-3ptkIu4)WojLVmV>u~QWU$rYDF5TXN^;-uN~~xC3BA^u
z2qWzLtr$KXu64ROMlo;9bpea#z!CFV{i=`Fpr<z1cC0H`oSa}cq4k;kE}{ns3!$(l
zs79`K=TngNnV^4^ja-C5c7(H!g!b1$|G&iZZ)Cyw0-(N^7C_ktW=tI2C8CqX-I{Qz
zn!{b<j_gIxhcrSqKZ3Xy*_6MfqM$xLkVV03hUa;6hv#J5c_XK%`xE5na3mDw0$zRU
z8I_C%O9g3+Cn6=5YN8rF>*2Xy!<azDz6a-k#}GDR18M8gy4jZNB$aNXjkW8Jc?hZV
z#9iht=fI&$J>XqFiL~on2ZBj@;LWYUEUKjQIKi}af2B?5s6XDzL>^j4F^Uv$VrmdI
zVh=X*T-bi>*{td6Sz!vaB8n!6!lfjo+`pi?Faq|}tl@)Vi)@TCv+8*c?KmwQ=?`qe
z1Rrpyn{nd)(q%Vs(gPxZcVml{w)QhGCT}QPvgYD(0=)lt56Uv;M=?C_#NE%lZnxij
zmQg-yK)HJ_B@-|a$qcDMF;^1qr2@x}YB3YDAYW<O<Oxh+gPQm3quM`v<EvQKkJy-^
zCdtA&ee@;@h|?n}LXX7X*lwCmdLFzow^t2SSchFPx$ZTG6++vL|B?(`IyUDR-o0#z
zaB+KT0C0=j6(4IKXenM<d`_1xzVZzBt6pl(+=hzqCmAmODUx_3b!<G55(m)AJ`PQa
zHh<M#(j>g)jtY`ZfLJ2Ss8~#%*&s*S`G{Dhs6qxk5{XBuFVBvg&!&cetx0ZNQ}08d
z$f8Z0@<hbLw2K!!{`y7CSBY>)u^Gvdh$Kcj0Vw;!654=zfLfJ%O6?={)|Lm5lr>v@
zJ_D)61(UN~L8?UoEpmw^4>^2j#mT#o<giY#@{y3-DY0@2g*DNlOD<m~wYGIq#u6mD
zyN-{G&Y6o5sNDj`?G86hJ#%1f#jwjrq-4f5bK%kDk)VP+by1{6K!{(l#G5HRLZ0n~
zq{fqD&rdA^<Oc9q^!(TD!vB~7QgddP3E%2{=C^v!_CM<VpLi%>Y#J1>CK(B^fZUwe
zq&J>IogS#R&R|NjPZd6lhfW5HjsW$Ac%_+a<DRiKbXxEN@h?f7WNr}pHZR(}m`-#9
z;>G!7o6q@L;ADF8Mo7pHv~+)sq&hc|(zrNYL@U&pMs+?ltjLfQ5z*ALe4f78K_gpl
z-r@HEcqsRC20~ktz`uAMB=-!!vf1f|opYLDuXR}SNkW5Bhg<77v(BZ!N(PNB3%QlP
z7_-TWjYj27i(Bwl@(s7B+x_|G+I}~~0d*RT`<1`Q&QC->Q)-{1_Wl|kei(==ZR_lv
z#&kh@?*4MVX0-=xhHFlfD6UQ9;NRRaRG?|aFuzwtHuiE>Jfq&CvE)9#D?QPg18a{_
zkkA$Ec~8Nd@2=^W3xVuvmRPuO*nKPrcV2oBB6;nN!nfLY3Fq%{3ie*_etMmaN3$c|
zw3Bk-v4%LjPB`($@v-y>M*3wI9+k$pbO`8MML9PciefLk*#>GOi1IA8k+B!4^S6n4
zPBiBT!{25%pLaeH>trTCh|Oz4g2%2PgYXPV^g67Mk8jfy=fb(I==pKnvx8w1YVOKC
zmkQIexa@f5Ae8^J72$IkM<H=oMqg1eZMkqfW;O%A$RZ=3yGrW;$FadDJebEF#w|D3
z7%n;YnI{-xfn~Imdcq*{{uK!Uy%maDso8KG7-Mv}U@LAbSc(JCWa%M`mm@OVg)jCK
z-4K+N4Gl^(ZzLf7!~}kEhECh~@a?gaSl1a2iQO#5crd?W<Y!}5IWbuhiQGWN<$zJ~
z8HhzrN$nygNcHEX9km$`BDL?P2WDiE{XdOec|4Tg_m}L(zK)&j`@Snn_9kTCCX^u|
zTe3DL*+OWt%UWc~I@t+hL?LUoO31!NLW;f*pBAIvAHV1In%6V)n)5#A+;h*p_qq4E
z=UhIiK5^C_Rdh@mV#_@zq&A_=?cJii)^vU9HK!Cv@qk3PpmqCWzWN7@@7GjpG@0bC
zg(d7AJ6!kBb^Um!P3(YF-AtrNRc9daKa(l#0XgV`Wa`|V92wqcx*$4SvS-!TM5Ofw
zhwQpE3!|<H`Gydu(!xAok>`Jgu9waRUS1}3v(Y!t+Gjl=znO*LxLW?i5;)Rwd(3J5
z2K;+Q@a|06WjLV+{y81_hzYJFo(v4@hZ3FIXak-SuAYLdjeZqkaEY$P%MMCe_{KNN
zX4NFQ9m3B~@F=PY%2n=q24VP=8vQw@IVXSWw2yFkfes$$U*Dz<m17xmpiGL*eI@>&
z-{)qNSy%B~FwbRPU5+cX4>yw>T!KDOlWb?gBy8R=!UUj_i4K;r46m$|6Kh<J1xC~J
zjZ7id#?Kt{E*Wic$u+nx5OSOJ;K9)rx+-Rh@1BmQ<w(UuoJkFyRgFrfYodKKo}Ztr
zbF=M9fcA5`XC?ID{D2ZmeB<kuEW(U?rDjE`cnY*<iK|bK=Q~*4ji#9@Q@j#BHnNPY
z?)UmCxXLRzKu-!GVRUckljn_QZJ>rox>TFpFB2F(|EWDg(p-k0SQw%kkPGaE5|~Y^
zzf_i1<fssj+cdi6?A`7YQ7FxGzJiP`W)#%1L>0@-8fxO^l**ogT<G;>&p<D2Ox3-8
zmga-@(NC&<kr<%n#znh9<|tR3=!5aC{653{WvpPLQ=qkUo2+xJE@9G~)R$|T-ssg*
zvcLBerM%VIX}E10)LhKJ$b$vGU8U6{{PdPgW}7pdAs8|7U_+LdQOjUFaYHoUvD?n7
z{R((pgDN4}NY$uA__9%jP;R^V_IYQ??Tz#2Ew%9Li8Qq6CSQrSmbHk0WnDn=o+0a3
zhdeve*TKC$7@;$F{1p)eg4VR#%;KwW*ZTBQpI8Cw2HR1vl-st?bG(@0w-<UZKF$KR
ztIoU}HveE;a>e5OqD`$B8jUJ0{v;aylP|J#xh;O>W%c#T6KKqVbYXd4@wAEYG$-X+
z2@bet+T6X?x=lR$c@ckNQz;qiu*}D#OI<t%Z-?twmC+On_QQ{KcZ^4ymvZwNhW9!|
zHOd+2t{rd>Ie(8W54@Fyfy4TWHZ&mHe*B9*Z}=1#*LWCU3qLUmpW}!+Zm2w8?-RbL
z@*c7~mle9Newu=}@T*cAM}Eutv%HWmwKzn$Vq_Q34K6wP8z`>ZmpY>K#-U4MTEQ<`
zt7abEXi0xh^^~TPZ1=4L+3tvgG#xYJ=)uT!9NgzfJfC~b^Hf}MEUj>#K`R=B6iI(v
z!UrPLZ1GiCqhCDz&H<nQj&WAB*9$U`EC;K7r2YN?)z$E<a`jLtkl0k6zy%`26oD3f
zu-fDs#^`>ZEut$>*K-)|o<_CHrxC=Q3p8wUpUti>t}|3PeQI6KZdQGGXOxJFhP1sc
zqFv+O=T*u|?Yq(1<>w>e^psC-#Po%E&?P&I+JScX@sl6zdadqyZQb~CI^rvfWrN;^
z?e%$tKE1BjqYhkM_m5{HUZm#<Y$j$?&D$jkd!-KqNpDlnkl|&0?RG<27Oq;VSI%0t
ziKxF{d^xzeC2`hsZ|EHMi%8_7M!H5|@Z<mn&#H)q&$tvoPD3IhoWtI!x~1GZ1?h2L
z559Vl#)wj-#<qUdw}LL`_D4bos(M-yna%<dY6)(#v?1wMc+IL6Lrufn+S@qo4dNd&
z6p-_=+-E~595bwwtOn9Fr?Yx{yHmaMZ_TY8{P?<07~)^T7vD}srdYXoO+7CworzcC
z2`8Zj21P&zEW65Zix)URH4`{3z0)CULva11E0QtEHvRn4cx4l?9GG?3OB+8}@D~bL
zBIn$>n#L6yb{~dPTYm0<9xvgaqG)uXhhJ?_X<N2y{Y@8Hp3_RtV8gTqe#7~lhF#A*
z8`{En_Boz*`hq3npnFNnu8nhChC<)p6*M-l%IA-w>gH4LT9dCzPGm(LT(9q%G=oDn
z@4_SP8B+yUH_RLDybFx@zqffY71tGjj6|6#r!u)?+i&{X%tvzgmyCViUuaW0`yt=V
z*E$#GZn^0vsj^^Mn0+P;b-&7@Pa;xE(fx`ECigy%aIr;y#XXtuFvHncr)Gg_;i+%4
zW->ZbpdC{E=Sm<cz8Pg@cBYgMt9o$q@#h%h-gwTRVortAY^ND{(dJ4@lhF6Iv#eyk
z!mcA=0{^CikFjEYVG|->#9o^$K3Os<Nd02fv(>oL#$x*}ipEB>?y=ax>qM2sG1r}^
zk20?-vlPViGhZsW<%Ea!!XSLCL{&6%4V~k{oh#=%g{ZjnWZf>Thk{pxxU_D=+4~LD
zM4l#X3RA@PaA05(>J^~br{OD_+56lwT<!kEd8fXRe50n5%73Byt#2w?t<<z4n(ysY
z)RbhYVdj)z2X3Yc2xX)>Bb9qzMl~r|V}(_c(D2q1KB*!9A1ap!byf&Uw=41rbqT5?
z<*k<nM0|as5$<>+6EZWks&6@F1-OGR_X<%dzGf*E*c3u)WKt4W;!ihe(l74bz;@><
zPj|E9J3BP`>F1VC<KP65{tiHd2aCW*bwX94L~6yVl%!Pg)KP8^Wk+iu7K6iAN5))>
z;5p}Vezx_ZLX!%&t)2Fs{LDL-JLrAu3K4I4t7rb@wbymP#@D(xnSt8}U)OJl;XL-d
z++o@MC>I9RV)SMKgQ@8qg+E&1=-2jcM5PFOmk^DTfhElp-V&7edKz~SoK2K~M?&sr
z#86htZ?e>Y_g2@x2Ka>A3p-gQnqV&7Dz+-J88)`8GBb{SpW*IYV_IBl304<d3U?Qi
zC@}~?U)GkNdoODPb4gcwmDa$72HTIi4C$ra)D|)AqJEX?_`Lp^Reg$F?1Svrl+gaQ
z^rY&1>zfUI{4&9k{LJAwmSaU$@UrW8>0h|Pt4om=nfTdN8zKk&>BH3q`A3T!=h?^V
zuXzOZihsKQ-U8)}EPK@T?(|ne8B^0(y&^m7dZR8MtNg~oTf4mEw}*>}78QT=*GRD{
zM|~oHho3e_0WoeOa93b+K?+XBc-qL;rGT^%r$7{wdV>B{7nK(00wvF+q2SIiaBkDe
zm3UGZTF^Kxl7(fh<pOCPT?RVxj(y{6&j?O`E-+@Ufuwo^|79}Cy;1u}Ki#Jv*_s_v
zc4B-+{G3zbVnw_B)}Hd<Gl=tA1iz*{r`S?ydTmG=4Gq5ZHZAKwebDi7Dt(vW6qkFi
zCU3_w%^;{X^hb9xo3ms3j1nAQP>;(Yb*gASK{igl&tnIFDtQT=C|69_MCqj=dd^H_
zRXit;9%gX6brI@cuv`%}bB9qjP*A-IDrhN^{5(KKQBEUy`4YvB|Et*H@~<vSNqai9
zZ!`!5uhR9vYDX^)_B=EXoPZF5=I}!|po}XX@tFvXrGrsOVvS+I_;t8XSsKA*Cw01v
zOI7&~gumGOeNciHnms4KH6}E@|AoMDbY|q^KE>{fc1T9M5Z6{V$)HjUerRsvU?)Y^
z)9tODfH;`kwY36h6b2q9MsKjv`ctYW*e`2*&>_}VgWXy^#P%iORpxw|wkr>V&|stI
zJj`hA+R?2&If6dzrfLd!A)`UL%9b1EHewyTNAspNc=z;a(t*e=zJbzjLk2(+G|`T0
zOp#Pj|N6LAhXvG@QZMa(SDO^xj`)@rdrt0X0!spvbJBl2H;^r30T#7H7E@^&Qz64W
zswn9i`XO2&;=nQ4BDy)8_yV<?L|SeF#i<pJa6H!Fho5vEm@ZMmxh?DcYn7kr40&sd
z_-32E@Icc)5|>~YAVEv$FG)H1boJ}Uh|XM@547<NvcW_QmBsryEh+?M3L7oG<k_%+
zs%Ahj0!vgZA%3DxoNQ>)TFqMVuUWchgCP5I4}P#?cL_)wrPLrGV*3X$$|)Reg0FIF
zsX5+Bh|oFTAq4(y0G`Apk0y}z8EhOa?@Xj=<XFUImx81iA>3&x@ovO0ioga{bp1nX
z?+FoPRt7ixr54kKtmJ5KuFDMAS9nN7nkdygb1Qe`u1S-py0}tnA5V#|$|4&y=6mTL
z|K8a^z4vw;KWK84-3&5dK67Dr-&Gjq6bB?kj;8+Pcv7s`Or()aVf|h;HY0&rWAY|J
z^SsZU4U5j4()drN1p^az+bn_>8(a$)7K}gPKPZQ;!!x7xr*_rvXFwk-E4avAB(@Z5
zB+(_784z}wCK5tqs8^Ni^YiYJeJJq0*DcUc`v~kh7f<@ho};X@`O(Om0dJB|CY?$O
zs6Orx!(y>;MdxKV=BzB5qMtO7^1#+GrrLFtrrp@olq7e43R25Erf?eBZEFZ=p#Msq
zbB^YyH9TKsZEZ5-{@(l=2UnxT?ajN-Fg@@2lUzds8Ka#&^2IzHsqR=#y%0LRZy~-#
z<VSpK)XQR1EB?d&sTpP=0@ni=3i+zDBGUlZq7;``N=<@5u;PO1c!s0%0!-j5>)eR7
zc)CQl7WIRc_Hm{)1fvHlg~P`PevQlbwMSOcDte68-C#<_-TVk)=guD8Y5k;*$Intf
zZPI3K$z(}qW>Xia#Lm=sBs+oy&KBBZPzrhB--X$$&U1ce!1fWXYN8z#V3>GC49vsm
zkmcRNaE#gVr9nf=gNxQgk5B30w<|d~W{aTksmlEXOhqs8TWI!Q&S_`jCq@!%&;{X4
zo_6vvO!fRR9}_pNA-|?eLaU$NCO(r@73jMY<aDd5LE*(g(06i<a80V7Na+D;y8b(n
zI+bc-;U4-e<slO`QiAF&DIrR@9h!cg26rRB<HFg9bi{|!Zw#q(yy|;25NpHj)LHD$
z^Ps0V;c;^X=k;O%Q)Bw8dD)Dfm2BoR!;LS+hnHOs%EEY{A{Eg)A`*TN_KMp2+VH<v
zGYj3@FoAX<+p`9$yl(5tnly`%sJyccuWr9?EWvA<X9ue`yB7}{h{+ewk`!YgA+d~=
z-(!T!lSfQ%!6-!HbRquSAV__Zgd_UGjkKatVjW4;cw;b~0HiHoEZqt@`6{8YWR?p&
zX!zWw(Pm(N#UCvD?PF3bi-8T8Em+}wC0~J_x;}&BaC4Iz4a4X7Q=nz1&8bJ|XiLmg
z0K=?)j94fLVbv=U2@ZbUDTov-OSvzZehQw+MtnO1`B9@dM4Osdg2&FP4a6qpqu>~7
z-`$_!G+v*7<NC{os!lwKclB$#S<~~zZ#LRh;|6K-Xu@M<97jMmjTe&|WZoo8qdymp
z7bT^vFw;y_=CH&TK5+Q_DOi1W%|_ESx<xiu5m{yV#E>XPt57e(#X06|gH+808TM2-
zQtsQ3JXbb(uK=%x!D75lS&4w9_fOYCofh2KqBA*7=iD1J)RdBXQ?1f(Rp%R-3yrTE
zgEE)spgoQ9Uk}We+W6Eo8TMzb7gSn;&Ytay^hRUmnR}LH$036sASNW?XVG+^uv=3H
zI)M!1*WBh5t0NV+@t{d+gk6d{+S~H*xabf}|5Yw9ny$V_Yd?g*FOv68*2g_ugI%E|
zn_a}-w}Y(D>uMI{3Hh9zzWudTgr2DrtE~+zBuJg5Npsm%mfGq0kQD{1F;Y~OBi^Xc
z>qpta{Rkyu8*RC|);i|)I{pQI+*;zAxV$ZT+Y83dKOWm*y2-DU&PR-?6W4lJ;fQ9(
zeN4gNKYOacpg#J_<wcl82<dq~{?k2M(@Wf4rnw`^Tmg}7BdUB3jHlo(7)rjT<OSQ$
z+EySMHU?N!zVh^mfDAIJPX(Gl|Er0VXyg5VCF(e%@qZ-hu*OQyaSE6A^nVi;J7B^B
zaK{1q@uQ3Q*Bu9k5@%KI@CQWGL`_8Zq86~1_!Jxq=Oy%Z>Ks5}0(@u>Nq=3B5dy%s
zKRAfmMO`gTV-rz`7Qo^U2ip^pfl=hwMTxVomIi!3jJv`{-~yR6;Ar}@hZN1fD1Jp|
zVH08(ism<Gpiuj2i-#ws3!kKSzH=3p2ha@zpEG~xad1!wmQ%>qb~a=@0pUL&%!jbI
zw1DY60OikPfpBmSL6pY+-ad|QhCq&!|5BVFC)-*1ewqHz0P`yr-bDa#0{C!YG4RC$
z7|<avictI`6|XShy$vAM2#_j*1+v3G0@-m9AYZW4{sUy0ww=HLGuAzz?xnDRgha@G
zjN)<4u9P9_?EoQ^KoA_Z5LWUdA&@Ti<Mc+stk-4%g}?xBaV*}Qlt=XIom|K1pZJT{
zn*scB0Dai8=)cn)(U<Cg{wYAO*YZ6&V2`>xISvjl7U(|X5h%Trk@uK+b81v98Gv+o
zZk)hW9gBV*DbYcXydXpNkBq<P0G=$kve<tGKgIM92<t>GEJ6Cx|AD#)fkU=vj$7d5
zQ3$_bD8$g&Ba9sv!#{%lrjkABFul4*AibBg$A!3XxWuDQ;oz77!?gTw3BVnNU^P6V
z*N2cHFX}V?BM2+oAQq7C5&&cck`Iy|7xX8g5I~FFe&AL}Ax9o80f);ZC({D`mVrW0
zSR;vtSjhi&6^G<Vwpa8Ths~GD1}h@-it9D3PU4U@zH=){8SpJ*z_%oR^9AlGgsKg)
z&QS^(KZsBI%T11Wi*z&Mp%Aa3NVU6XkgnaJ-vvAT6Dt`H7PFemNA#J|%*fBZ_{TAS
zGM)ems9<609F8#my=tLHw!Fc@Eu10S)COuxA5b1!@h6S|js<D`n&r5hzX>W%%29Fx
z=+7Zv^keZq8QJ<<H59`3#xK48(djTEa0<}J9cXulz5VYCg@Ah<VQMqkPRjWkBY3i%
zHr+fb$M+l9jr-8hhtVkoK;iTMaaCmCFXaf3B@d}i3i}(la#C1)FtVbGpYnKDe^lN5
z1Bcb^9EOZ*RzCEF<0i!lYWZDO;EqBlM;vLf-6MFM{%=UaN$E>b06iCyY=D&Vn6Lf!
zZg``c2GAfe<A|eB55sYeSTE+VG>FRjV~79V(-HjBs{Xzj!NF0&0=woS-@Z~mF6j6o
zrZ5&QPXS;!E+Dq^-&#6a-2~jB2pAWzU0bN=k9L}Gn2!tM!_xsBX8&>maEFfuzb_Pm
z?HPb!K{hs19M%KHF*_YDK_QKLXaO_bE<Iul4`%+SxF=_+e>t~RB25QXk86Q7U;Rx8
z+<|&P9SKnDr$0{rcXo5qlq=Oo^k03k2ZBT2`t!I3FvcF%?$je22hY&r19m%X+!8pH
MR6yud!{M+00Sm=Wj{pDw

diff --git a/apolloschurchapp/android/gradle/wrapper/gradle-wrapper.properties b/apolloschurchapp/android/gradle/wrapper/gradle-wrapper.properties
index 81a86e2..3c7a7c8 100644
--- a/apolloschurchapp/android/gradle/wrapper/gradle-wrapper.properties
+++ b/apolloschurchapp/android/gradle/wrapper/gradle-wrapper.properties
@@ -2,4 +2,4 @@ distributionBase=GRADLE_USER_HOME
 distributionPath=wrapper/dists
 zipStoreBase=GRADLE_USER_HOME
 zipStorePath=wrapper/dists
-distributionUrl=https\://services.gradle.org/distributions/gradle-3.5.1-all.zip
+distributionUrl=https\://services.gradle.org/distributions/gradle-5.4.1-all.zip
\ No newline at end of file
diff --git a/apolloschurchapp/android/gradlew b/apolloschurchapp/android/gradlew
index 91a7e26..3e84efe 100755
--- a/apolloschurchapp/android/gradlew
+++ b/apolloschurchapp/android/gradlew
@@ -1,4 +1,4 @@
-#!/usr/bin/env bash
+#!/usr/bin/env sh
 
 ##############################################################################
 ##
@@ -6,20 +6,38 @@
 ##
 ##############################################################################
 
-# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
-DEFAULT_JVM_OPTS=""
+# Attempt to set APP_HOME
+# Resolve links: $0 may be a link
+PRG="$0"
+# Need this for relative symlinks.
+while [ -h "$PRG" ] ; do
+    ls=`ls -ld "$PRG"`
+    link=`expr "$ls" : '.*-> \(.*\)$'`
+    if expr "$link" : '/.*' > /dev/null; then
+        PRG="$link"
+    else
+        PRG=`dirname "$PRG"`"/$link"
+    fi
+done
+SAVED="`pwd`"
+cd "`dirname \"$PRG\"`/" >/dev/null
+APP_HOME="`pwd -P`"
+cd "$SAVED" >/dev/null
 
 APP_NAME="Gradle"
 APP_BASE_NAME=`basename "$0"`
 
+# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
+DEFAULT_JVM_OPTS='"-Xmx64m" "-Xms64m"'
+
 # Use the maximum available, or set MAX_FD != -1 to use that value.
 MAX_FD="maximum"
 
-warn ( ) {
+warn () {
     echo "$*"
 }
 
-die ( ) {
+die () {
     echo
     echo "$*"
     echo
@@ -30,6 +48,7 @@ die ( ) {
 cygwin=false
 msys=false
 darwin=false
+nonstop=false
 case "`uname`" in
   CYGWIN* )
     cygwin=true
@@ -40,31 +59,11 @@ case "`uname`" in
   MINGW* )
     msys=true
     ;;
+  NONSTOP* )
+    nonstop=true
+    ;;
 esac
 
-# For Cygwin, ensure paths are in UNIX format before anything is touched.
-if $cygwin ; then
-    [ -n "$JAVA_HOME" ] && JAVA_HOME=`cygpath --unix "$JAVA_HOME"`
-fi
-
-# Attempt to set APP_HOME
-# Resolve links: $0 may be a link
-PRG="$0"
-# Need this for relative symlinks.
-while [ -h "$PRG" ] ; do
-    ls=`ls -ld "$PRG"`
-    link=`expr "$ls" : '.*-> \(.*\)$'`
-    if expr "$link" : '/.*' > /dev/null; then
-        PRG="$link"
-    else
-        PRG=`dirname "$PRG"`"/$link"
-    fi
-done
-SAVED="`pwd`"
-cd "`dirname \"$PRG\"`/" >&-
-APP_HOME="`pwd -P`"
-cd "$SAVED" >&-
-
 CLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar
 
 # Determine the Java command to use to start the JVM.
@@ -90,7 +89,7 @@ location of your Java installation."
 fi
 
 # Increase the maximum file descriptors if we can.
-if [ "$cygwin" = "false" -a "$darwin" = "false" ] ; then
+if [ "$cygwin" = "false" -a "$darwin" = "false" -a "$nonstop" = "false" ] ; then
     MAX_FD_LIMIT=`ulimit -H -n`
     if [ $? -eq 0 ] ; then
         if [ "$MAX_FD" = "maximum" -o "$MAX_FD" = "max" ] ; then
@@ -114,6 +113,7 @@ fi
 if $cygwin ; then
     APP_HOME=`cygpath --path --mixed "$APP_HOME"`
     CLASSPATH=`cygpath --path --mixed "$CLASSPATH"`
+    JAVACMD=`cygpath --unix "$JAVACMD"`
 
     # We build the pattern for arguments to be converted via cygpath
     ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`
@@ -154,11 +154,19 @@ if $cygwin ; then
     esac
 fi
 
-# Split up the JVM_OPTS And GRADLE_OPTS values into an array, following the shell quoting and substitution rules
-function splitJvmOpts() {
-    JVM_OPTS=("$@")
+# Escape application args
+save () {
+    for i do printf %s\\n "$i" | sed "s/'/'\\\\''/g;1s/^/'/;\$s/\$/' \\\\/" ; done
+    echo " "
 }
-eval splitJvmOpts $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS
-JVM_OPTS[${#JVM_OPTS[*]}]="-Dorg.gradle.appname=$APP_BASE_NAME"
+APP_ARGS=$(save "$@")
+
+# Collect all arguments for the java command, following the shell quoting and substitution rules
+eval set -- $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS "\"-Dorg.gradle.appname=$APP_BASE_NAME\"" -classpath "\"$CLASSPATH\"" org.gradle.wrapper.GradleWrapperMain "$APP_ARGS"
+
+# by default we should be in the correct project dir, but when run from Finder on Mac, the cwd is wrong
+if [ "$(uname)" = "Darwin" ] && [ "$HOME" = "$PWD" ]; then
+  cd "$(dirname "$0")"
+fi
 
-exec "$JAVACMD" "${JVM_OPTS[@]}" -classpath "$CLASSPATH" org.gradle.wrapper.GradleWrapperMain "$@"
+exec "$JAVACMD" "$@"
diff --git a/apolloschurchapp/android/gradlew.bat b/apolloschurchapp/android/gradlew.bat
index aec9973..1688408 100644
--- a/apolloschurchapp/android/gradlew.bat
+++ b/apolloschurchapp/android/gradlew.bat
@@ -8,14 +8,14 @@
 @rem Set local scope for the variables with windows NT shell
 if "%OS%"=="Windows_NT" setlocal
 
-@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
-set DEFAULT_JVM_OPTS=
-
 set DIRNAME=%~dp0
 if "%DIRNAME%" == "" set DIRNAME=.
 set APP_BASE_NAME=%~n0
 set APP_HOME=%DIRNAME%
 
+@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
+set DEFAULT_JVM_OPTS="-Xmx64m" "-Xms64m"
+
 @rem Find java.exe
 if defined JAVA_HOME goto findJavaFromJavaHome
 
@@ -46,10 +46,9 @@ echo location of your Java installation.
 goto fail
 
 :init
-@rem Get command-line arguments, handling Windowz variants
+@rem Get command-line arguments, handling Windows variants
 
 if not "%OS%" == "Windows_NT" goto win9xME_args
-if "%@eval[2+2]" == "4" goto 4NT_args
 
 :win9xME_args
 @rem Slurp the command line arguments.
@@ -60,11 +59,6 @@ set _SKIP=2
 if "x%~1" == "x" goto execute
 
 set CMD_LINE_ARGS=%*
-goto execute
-
-:4NT_args
-@rem Get arguments from the 4NT Shell from JP Software
-set CMD_LINE_ARGS=%$
 
 :execute
 @rem Setup the command line
diff --git a/apolloschurchapp/android/settings.gradle b/apolloschurchapp/android/settings.gradle
index 50bbf55..1ae2310 100644
--- a/apolloschurchapp/android/settings.gradle
+++ b/apolloschurchapp/android/settings.gradle
@@ -1,19 +1,3 @@
 rootProject.name = 'apolloschurchapp'
-include ':react-native-image-picker'
-project(':react-native-image-picker').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-image-picker/android')
-include ':react-native-music-control'
-project(':react-native-music-control').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-music-control/android')
-include ':react-native-device-info'
-project(':react-native-device-info').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-device-info/android')
-include ':react-native-video'
-project(':react-native-video').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-video/android-exoplayer')
-include ':react-native-svg'
-project(':react-native-svg').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-svg/android')
-include ':react-native-splash-screen'
-project(':react-native-splash-screen').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-splash-screen/android')
-include ':react-native-linear-gradient'
-project(':react-native-linear-gradient').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-linear-gradient/android')
-include ':react-native-custom-tabs'
-project(':react-native-custom-tabs').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-custom-tabs/android')
-
+apply from: file("../node_modules/@react-native-community/cli-platform-android/native_modules.gradle"); applyNativeModulesSettingsGradle(settings)
 include ':app'
diff --git a/apolloschurchapp/apollos.json b/apolloschurchapp/apollos.json
new file mode 100644
index 0000000..ef6aa26
--- /dev/null
+++ b/apolloschurchapp/apollos.json
@@ -0,0 +1,4 @@
+{
+    "version": "1.3.0-beta.0",
+    "environment": "client"
+}
\ No newline at end of file
diff --git a/apolloschurchapp/appcenter-post-clone.sh b/apolloschurchapp/appcenter-post-clone.sh
index 29439c1..83862e2 100755
--- a/apolloschurchapp/appcenter-post-clone.sh
+++ b/apolloschurchapp/appcenter-post-clone.sh
@@ -6,4 +6,18 @@ curl "https://nodejs.org/dist/v${NODE_VERSION}/node-v${NODE_VERSION}.pkg" > "$HO
 sudo installer -store -pkg "$HOME/Downloads/node-installer.pkg" -target "/"
 
 # Appcenter needs a yarn.lock file to exist next to the package.json to detect yarn:
-cp $(pwd)/../../yarn.lock $(pwd)/yarn.lock
\ No newline at end of file
+cp $(pwd)/../../yarn.lock $(pwd)/yarn.lock
+
+# Swaps out all placeholder env variables w/ their real values
+# Placeholders look like "$ONE_SIGNAL_KEY"
+grep -o '\$.*' .env.production | sed 's/\$\(.*\)/\1/' | xargs -I {} sh -c "sed -i -e 's/\$"{}"/'$"{}"'/' .env.production"
+# Make sure ReactNativeConfig picks up values from prod env file.
+cp .env.production .env
+
+echo "Uninstalling all CocoaPods versions"
+sudo gem uninstall cocoapods --all --executables
+
+COCOAPODS_VER=`sed -n -e 's/^COCOAPODS: \([0-9.]*\)/\1/p' ios/Podfile.lock`
+
+echo "Installing CocoaPods version $COCOAPODS_VER"
+sudo gem install cocoapods -v $COCOAPODS_VER
\ No newline at end of file
diff --git a/apolloschurchapp/appcenter-pre-build.sh b/apolloschurchapp/appcenter-pre-build.sh
index 492aef8..93e20b9 100644
--- a/apolloschurchapp/appcenter-pre-build.sh
+++ b/apolloschurchapp/appcenter-pre-build.sh
@@ -3,3 +3,10 @@
 droid_dir=$(pwd)/android
 
 cp $droid_dir/gradle.properties.appcenter $droid_dir/gradle.properties
+
+cd ios
+pod install
+
+cd ../../..
+yarn
+yarn lerna run generate-stories
diff --git a/apolloschurchapp/babel.config.js b/apolloschurchapp/babel.config.js
new file mode 100644
index 0000000..bd83dde
--- /dev/null
+++ b/apolloschurchapp/babel.config.js
@@ -0,0 +1,12 @@
+module.exports = {
+  presets: ['module:metro-react-native-babel-preset'],
+  plugins: [
+    [
+      '@babel/plugin-proposal-decorators',
+      {
+        legacy: true,
+      },
+    ],
+    ['@babel/plugin-proposal-export-default-from'],
+  ],
+};
diff --git a/apolloschurchapp/index.js b/apolloschurchapp/index.js
index d009549..f4cd897 100644
--- a/apolloschurchapp/index.js
+++ b/apolloschurchapp/index.js
@@ -1,6 +1,24 @@
+import './polyfill'; // this can be removed when we upgrade to react-native 59
+import './loadConfig';
 import { AppRegistry, YellowBox } from 'react-native';
+import SplashScreen from 'react-native-splash-screen';
+import ApollosConfig from '@apollosproject/config';
+import Storybook from './storybook';
 
-import App from './src';
+const useStorybook = ApollosConfig.STORYBOOK === 'true';
+
+const MainApp = require('./src');
+
+let App = MainApp;
+if (useStorybook) {
+  App = Storybook;
+}
+
+// If there's an error before the splash screen goes away, you never see that error.
+// This tries to hide the splash screen so you can see the error.
+// Shouldnt't do anything in Prod.
+// Depending on the error, splash screen might not go away ;)
+global.ErrorUtils.setGlobalHandler(() => SplashScreen.hide());
 
 YellowBox.ignoreWarnings([
   'Warning: isMounted(...) is deprecated',
diff --git a/apolloschurchapp/ios/Gemfile b/apolloschurchapp/ios/Gemfile
new file mode 100644
index 0000000..8419108
--- /dev/null
+++ b/apolloschurchapp/ios/Gemfile
@@ -0,0 +1,2 @@
+source 'https://rubygems.org'
+gem 'cocoapods', '1.8.4'
\ No newline at end of file
diff --git a/apolloschurchapp/ios/Gemfile.lock b/apolloschurchapp/ios/Gemfile.lock
new file mode 100644
index 0000000..80a9446
--- /dev/null
+++ b/apolloschurchapp/ios/Gemfile.lock
@@ -0,0 +1,83 @@
+GEM
+  remote: https://rubygems.org/
+  specs:
+    CFPropertyList (3.0.2)
+    activesupport (4.2.11.1)
+      i18n (~> 0.7)
+      minitest (~> 5.1)
+      thread_safe (~> 0.3, >= 0.3.4)
+      tzinfo (~> 1.1)
+    algoliasearch (1.27.1)
+      httpclient (~> 2.8, >= 2.8.3)
+      json (>= 1.5.1)
+    atomos (0.1.3)
+    claide (1.0.3)
+    cocoapods (1.8.4)
+      activesupport (>= 4.0.2, < 5)
+      claide (>= 1.0.2, < 2.0)
+      cocoapods-core (= 1.8.4)
+      cocoapods-deintegrate (>= 1.0.3, < 2.0)
+      cocoapods-downloader (>= 1.2.2, < 2.0)
+      cocoapods-plugins (>= 1.0.0, < 2.0)
+      cocoapods-search (>= 1.0.0, < 2.0)
+      cocoapods-stats (>= 1.0.0, < 2.0)
+      cocoapods-trunk (>= 1.4.0, < 2.0)
+      cocoapods-try (>= 1.1.0, < 2.0)
+      colored2 (~> 3.1)
+      escape (~> 0.0.4)
+      fourflusher (>= 2.3.0, < 3.0)
+      gh_inspector (~> 1.0)
+      molinillo (~> 0.6.6)
+      nap (~> 1.0)
+      ruby-macho (~> 1.4)
+      xcodeproj (>= 1.11.1, < 2.0)
+    cocoapods-core (1.8.4)
+      activesupport (>= 4.0.2, < 6)
+      algoliasearch (~> 1.0)
+      concurrent-ruby (~> 1.1)
+      fuzzy_match (~> 2.0.4)
+      nap (~> 1.0)
+    cocoapods-deintegrate (1.0.4)
+    cocoapods-downloader (1.3.0)
+    cocoapods-plugins (1.0.0)
+      nap
+    cocoapods-search (1.0.0)
+    cocoapods-stats (1.1.0)
+    cocoapods-trunk (1.4.1)
+      nap (>= 0.8, < 2.0)
+      netrc (~> 0.11)
+    cocoapods-try (1.1.0)
+    colored2 (3.1.2)
+    concurrent-ruby (1.1.5)
+    escape (0.0.4)
+    fourflusher (2.3.1)
+    fuzzy_match (2.0.4)
+    gh_inspector (1.1.3)
+    httpclient (2.8.3)
+    i18n (0.9.5)
+      concurrent-ruby (~> 1.0)
+    json (2.3.0)
+    minitest (5.14.0)
+    molinillo (0.6.6)
+    nanaimo (0.2.6)
+    nap (1.1.0)
+    netrc (0.11.0)
+    ruby-macho (1.4.0)
+    thread_safe (0.3.6)
+    tzinfo (1.2.6)
+      thread_safe (~> 0.1)
+    xcodeproj (1.14.0)
+      CFPropertyList (>= 2.3.3, < 4.0)
+      atomos (~> 0.1.3)
+      claide (>= 1.0.2, < 2.0)
+      colored2 (~> 3.1)
+      nanaimo (~> 0.2.6)
+
+PLATFORMS
+  ruby
+
+DEPENDENCIES
+  cocoapods (= 1.8.4)
+
+BUNDLED WITH
+   2.0.2
diff --git a/apolloschurchapp/ios/Podfile b/apolloschurchapp/ios/Podfile
new file mode 100644
index 0000000..a623104
--- /dev/null
+++ b/apolloschurchapp/ios/Podfile
@@ -0,0 +1,65 @@
+platform :ios, '9.0'
+require_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'
+
+target 'apolloschurchapp' do
+  permissions_path = '../node_modules/react-native-permissions/ios'
+
+  # Pods for apolloschurchapp
+  pod 'React', :path => '../node_modules/react-native/'
+  pod 'React-Core', :path => '../node_modules/react-native/React'
+  pod 'React-DevSupport', :path => '../node_modules/react-native/React'
+  pod 'React-RCTActionSheet', :path => '../node_modules/react-native/Libraries/ActionSheetIOS'
+  pod 'React-RCTAnimation', :path => '../node_modules/react-native/Libraries/NativeAnimation'
+  pod 'React-RCTBlob', :path => '../node_modules/react-native/Libraries/Blob'
+  pod 'React-RCTImage', :path => '../node_modules/react-native/Libraries/Image'
+  pod 'React-RCTLinking', :path => '../node_modules/react-native/Libraries/LinkingIOS'
+  pod 'React-RCTNetwork', :path => '../node_modules/react-native/Libraries/Network'
+  pod 'React-RCTSettings', :path => '../node_modules/react-native/Libraries/Settings'
+  pod 'React-RCTText', :path => '../node_modules/react-native/Libraries/Text'
+  pod 'React-RCTVibration', :path => '../node_modules/react-native/Libraries/Vibration'
+  pod 'React-RCTWebSocket', :path => '../node_modules/react-native/Libraries/WebSocket'
+
+  pod 'React-cxxreact', :path => '../node_modules/react-native/ReactCommon/cxxreact'
+  pod 'React-jsi', :path => '../node_modules/react-native/ReactCommon/jsi'
+  pod 'React-jsiexecutor', :path => '../node_modules/react-native/ReactCommon/jsiexecutor'
+  pod 'React-jsinspector', :path => '../node_modules/react-native/ReactCommon/jsinspector'
+  pod 'yoga', :path => '../node_modules/react-native/ReactCommon/yoga'
+
+  pod 'DoubleConversion', :podspec => '../node_modules/react-native/third-party-podspecs/DoubleConversion.podspec'
+  pod 'glog', :podspec => '../node_modules/react-native/third-party-podspecs/glog.podspec'
+  pod 'Folly', :podspec => '../node_modules/react-native/third-party-podspecs/Folly.podspec'
+  pod 'Permission-PhotoLibrary', :path => "#{permissions_path}/PhotoLibrary.podspec"
+  pod 'Permission-Notifications', :path => "#{permissions_path}/Notifications.podspec"
+
+  target 'apolloschurchappTests' do
+    inherit! :search_paths
+    # Pods for testing
+  end
+
+  use_native_modules!
+end
+
+target 'apolloschurchapp-tvOS' do
+  # Pods for apolloschurchapp-tvOS
+
+  target 'apolloschurchapp-tvOSTests' do
+    inherit! :search_paths
+    # Pods for testing
+  end
+
+end
+
+post_install do |installer|
+ installer.pods_project.targets.each do |target|
+   if target.name == 'react-native-config'
+     phase = target.project.new(Xcodeproj::Project::Object::PBXShellScriptBuildPhase)
+     phase.shell_script = "cd ../../"\
+     " && RNC_ROOT=./node_modules/react-native-config/"\
+     " && export SYMROOT=$RNC_ROOT/ios/ReactNativeConfig"\
+     " && ruby $RNC_ROOT/ios/ReactNativeConfig/BuildDotenvConfig.ruby"
+
+     target.build_phases << phase
+     target.build_phases.move(phase,0)
+   end
+ end
+end
diff --git a/apolloschurchapp/ios/Podfile.lock b/apolloschurchapp/ios/Podfile.lock
new file mode 100644
index 0000000..eb9753b
--- /dev/null
+++ b/apolloschurchapp/ios/Podfile.lock
@@ -0,0 +1,332 @@
+PODS:
+  - boost-for-react-native (1.63.0)
+  - BVLinearGradient (2.5.4):
+    - React
+  - DoubleConversion (1.1.6)
+  - Folly (2018.10.22.00):
+    - boost-for-react-native
+    - DoubleConversion
+    - Folly/Default (= 2018.10.22.00)
+    - glog
+  - Folly/Default (2018.10.22.00):
+    - boost-for-react-native
+    - DoubleConversion
+    - glog
+  - glog (0.3.5)
+  - OneSignal (2.10.1)
+  - Permission-Notifications (2.0.5):
+    - RNPermissions
+  - Permission-PhotoLibrary (2.0.5):
+    - RNPermissions
+  - React (0.60.5):
+    - React-Core (= 0.60.5)
+    - React-DevSupport (= 0.60.5)
+    - React-RCTActionSheet (= 0.60.5)
+    - React-RCTAnimation (= 0.60.5)
+    - React-RCTBlob (= 0.60.5)
+    - React-RCTImage (= 0.60.5)
+    - React-RCTLinking (= 0.60.5)
+    - React-RCTNetwork (= 0.60.5)
+    - React-RCTSettings (= 0.60.5)
+    - React-RCTText (= 0.60.5)
+    - React-RCTVibration (= 0.60.5)
+    - React-RCTWebSocket (= 0.60.5)
+  - React-Core (0.60.5):
+    - Folly (= 2018.10.22.00)
+    - React-cxxreact (= 0.60.5)
+    - React-jsiexecutor (= 0.60.5)
+    - yoga (= 0.60.5.React)
+  - React-cxxreact (0.60.5):
+    - boost-for-react-native (= 1.63.0)
+    - DoubleConversion
+    - Folly (= 2018.10.22.00)
+    - glog
+    - React-jsinspector (= 0.60.5)
+  - React-DevSupport (0.60.5):
+    - React-Core (= 0.60.5)
+    - React-RCTWebSocket (= 0.60.5)
+  - React-jsi (0.60.5):
+    - boost-for-react-native (= 1.63.0)
+    - DoubleConversion
+    - Folly (= 2018.10.22.00)
+    - glog
+    - React-jsi/Default (= 0.60.5)
+  - React-jsi/Default (0.60.5):
+    - boost-for-react-native (= 1.63.0)
+    - DoubleConversion
+    - Folly (= 2018.10.22.00)
+    - glog
+  - React-jsiexecutor (0.60.5):
+    - DoubleConversion
+    - Folly (= 2018.10.22.00)
+    - glog
+    - React-cxxreact (= 0.60.5)
+    - React-jsi (= 0.60.5)
+  - React-jsinspector (0.60.5)
+  - react-native-config (0.11.7):
+    - React
+  - react-native-geolocation (2.0.2):
+    - React
+  - react-native-image-picker (0.28.0):
+    - React
+  - react-native-maps (0.26.1):
+    - React
+  - react-native-music-control (0.10.5):
+    - React
+  - react-native-onesignal (3.3.2):
+    - OneSignal (= 2.10.1)
+    - React (< 1.0.0, >= 0.13.0)
+  - react-native-passkit-wallet (0.1.4):
+    - React
+  - react-native-safari-view (1.0.0):
+    - React
+  - react-native-safe-area-context (0.3.6):
+    - React
+  - react-native-splash-screen (3.2.0):
+    - React
+  - react-native-video (5.0.0):
+    - React
+    - react-native-video/Video (= 5.0.0)
+  - react-native-video/Video (5.0.0):
+    - React
+  - react-native-webview (5.10.0):
+    - React
+  - React-RCTActionSheet (0.60.5):
+    - React-Core (= 0.60.5)
+  - React-RCTAnimation (0.60.5):
+    - React-Core (= 0.60.5)
+  - React-RCTBlob (0.60.5):
+    - React-Core (= 0.60.5)
+    - React-RCTNetwork (= 0.60.5)
+    - React-RCTWebSocket (= 0.60.5)
+  - React-RCTImage (0.60.5):
+    - React-Core (= 0.60.5)
+    - React-RCTNetwork (= 0.60.5)
+  - React-RCTLinking (0.60.5):
+    - React-Core (= 0.60.5)
+  - React-RCTNetwork (0.60.5):
+    - React-Core (= 0.60.5)
+  - React-RCTSettings (0.60.5):
+    - React-Core (= 0.60.5)
+  - React-RCTText (0.60.5):
+    - React-Core (= 0.60.5)
+  - React-RCTVibration (0.60.5):
+    - React-Core (= 0.60.5)
+  - React-RCTWebSocket (0.60.5):
+    - React-Core (= 0.60.5)
+  - rn-fetch-blob (0.10.16):
+    - React-Core
+  - RNAirplay (1.0.0):
+    - React
+  - RNCAsyncStorage (1.5.1):
+    - React
+  - RNDeviceInfo (4.0.1):
+    - React
+  - RNGestureHandler (1.3.0):
+    - React
+  - RNInAppBrowser (3.1.0):
+    - React
+  - RNPermissions (2.0.5):
+    - React
+  - RNScreens (1.0.0-alpha.23):
+    - React
+  - RNSVG (9.4.0):
+    - React
+  - yoga (0.60.5.React)
+
+DEPENDENCIES:
+  - BVLinearGradient (from `../node_modules/react-native-linear-gradient`)
+  - DoubleConversion (from `../node_modules/react-native/third-party-podspecs/DoubleConversion.podspec`)
+  - Folly (from `../node_modules/react-native/third-party-podspecs/Folly.podspec`)
+  - glog (from `../node_modules/react-native/third-party-podspecs/glog.podspec`)
+  - Permission-Notifications (from `../node_modules/react-native-permissions/ios/Notifications.podspec`)
+  - Permission-PhotoLibrary (from `../node_modules/react-native-permissions/ios/PhotoLibrary.podspec`)
+  - React (from `../node_modules/react-native/`)
+  - React-Core (from `../node_modules/react-native/React`)
+  - React-cxxreact (from `../node_modules/react-native/ReactCommon/cxxreact`)
+  - React-DevSupport (from `../node_modules/react-native/React`)
+  - React-jsi (from `../node_modules/react-native/ReactCommon/jsi`)
+  - React-jsiexecutor (from `../node_modules/react-native/ReactCommon/jsiexecutor`)
+  - React-jsinspector (from `../node_modules/react-native/ReactCommon/jsinspector`)
+  - react-native-config (from `../node_modules/react-native-config`)
+  - "react-native-geolocation (from `../node_modules/@react-native-community/geolocation`)"
+  - react-native-image-picker (from `../node_modules/react-native-image-picker`)
+  - react-native-maps (from `../node_modules/react-native-maps`)
+  - react-native-music-control (from `../node_modules/react-native-music-control`)
+  - react-native-onesignal (from `../node_modules/react-native-onesignal`)
+  - react-native-passkit-wallet (from `../node_modules/react-native-passkit-wallet`)
+  - react-native-safari-view (from `../node_modules/react-native-safari-view`)
+  - react-native-safe-area-context (from `../node_modules/react-native-safe-area-context`)
+  - react-native-splash-screen (from `../node_modules/react-native-splash-screen`)
+  - react-native-video (from `../node_modules/react-native-video`)
+  - react-native-webview (from `../node_modules/react-native-webview`)
+  - React-RCTActionSheet (from `../node_modules/react-native/Libraries/ActionSheetIOS`)
+  - React-RCTAnimation (from `../node_modules/react-native/Libraries/NativeAnimation`)
+  - React-RCTBlob (from `../node_modules/react-native/Libraries/Blob`)
+  - React-RCTImage (from `../node_modules/react-native/Libraries/Image`)
+  - React-RCTLinking (from `../node_modules/react-native/Libraries/LinkingIOS`)
+  - React-RCTNetwork (from `../node_modules/react-native/Libraries/Network`)
+  - React-RCTSettings (from `../node_modules/react-native/Libraries/Settings`)
+  - React-RCTText (from `../node_modules/react-native/Libraries/Text`)
+  - React-RCTVibration (from `../node_modules/react-native/Libraries/Vibration`)
+  - React-RCTWebSocket (from `../node_modules/react-native/Libraries/WebSocket`)
+  - rn-fetch-blob (from `../node_modules/rn-fetch-blob`)
+  - "RNAirplay (from `../node_modules/@apollosproject/react-native-airplay-btn`)"
+  - "RNCAsyncStorage (from `../node_modules/@react-native-community/async-storage`)"
+  - RNDeviceInfo (from `../node_modules/react-native-device-info`)
+  - RNGestureHandler (from `../node_modules/react-native-gesture-handler`)
+  - RNInAppBrowser (from `../node_modules/react-native-inappbrowser-reborn`)
+  - RNPermissions (from `../node_modules/react-native-permissions`)
+  - RNScreens (from `../node_modules/react-native-screens`)
+  - RNSVG (from `../node_modules/react-native-svg`)
+  - yoga (from `../node_modules/react-native/ReactCommon/yoga`)
+
+SPEC REPOS:
+  trunk:
+    - boost-for-react-native
+    - OneSignal
+
+EXTERNAL SOURCES:
+  BVLinearGradient:
+    :path: "../node_modules/react-native-linear-gradient"
+  DoubleConversion:
+    :podspec: "../node_modules/react-native/third-party-podspecs/DoubleConversion.podspec"
+  Folly:
+    :podspec: "../node_modules/react-native/third-party-podspecs/Folly.podspec"
+  glog:
+    :podspec: "../node_modules/react-native/third-party-podspecs/glog.podspec"
+  Permission-Notifications:
+    :path: "../node_modules/react-native-permissions/ios/Notifications.podspec"
+  Permission-PhotoLibrary:
+    :path: "../node_modules/react-native-permissions/ios/PhotoLibrary.podspec"
+  React:
+    :path: "../node_modules/react-native/"
+  React-Core:
+    :path: "../node_modules/react-native/React"
+  React-cxxreact:
+    :path: "../node_modules/react-native/ReactCommon/cxxreact"
+  React-DevSupport:
+    :path: "../node_modules/react-native/React"
+  React-jsi:
+    :path: "../node_modules/react-native/ReactCommon/jsi"
+  React-jsiexecutor:
+    :path: "../node_modules/react-native/ReactCommon/jsiexecutor"
+  React-jsinspector:
+    :path: "../node_modules/react-native/ReactCommon/jsinspector"
+  react-native-config:
+    :path: "../node_modules/react-native-config"
+  react-native-geolocation:
+    :path: "../node_modules/@react-native-community/geolocation"
+  react-native-image-picker:
+    :path: "../node_modules/react-native-image-picker"
+  react-native-maps:
+    :path: "../node_modules/react-native-maps"
+  react-native-music-control:
+    :path: "../node_modules/react-native-music-control"
+  react-native-onesignal:
+    :path: "../node_modules/react-native-onesignal"
+  react-native-passkit-wallet:
+    :path: "../node_modules/react-native-passkit-wallet"
+  react-native-safari-view:
+    :path: "../node_modules/react-native-safari-view"
+  react-native-safe-area-context:
+    :path: "../node_modules/react-native-safe-area-context"
+  react-native-splash-screen:
+    :path: "../node_modules/react-native-splash-screen"
+  react-native-video:
+    :path: "../node_modules/react-native-video"
+  react-native-webview:
+    :path: "../node_modules/react-native-webview"
+  React-RCTActionSheet:
+    :path: "../node_modules/react-native/Libraries/ActionSheetIOS"
+  React-RCTAnimation:
+    :path: "../node_modules/react-native/Libraries/NativeAnimation"
+  React-RCTBlob:
+    :path: "../node_modules/react-native/Libraries/Blob"
+  React-RCTImage:
+    :path: "../node_modules/react-native/Libraries/Image"
+  React-RCTLinking:
+    :path: "../node_modules/react-native/Libraries/LinkingIOS"
+  React-RCTNetwork:
+    :path: "../node_modules/react-native/Libraries/Network"
+  React-RCTSettings:
+    :path: "../node_modules/react-native/Libraries/Settings"
+  React-RCTText:
+    :path: "../node_modules/react-native/Libraries/Text"
+  React-RCTVibration:
+    :path: "../node_modules/react-native/Libraries/Vibration"
+  React-RCTWebSocket:
+    :path: "../node_modules/react-native/Libraries/WebSocket"
+  rn-fetch-blob:
+    :path: "../node_modules/rn-fetch-blob"
+  RNAirplay:
+    :path: "../node_modules/@apollosproject/react-native-airplay-btn"
+  RNCAsyncStorage:
+    :path: "../node_modules/@react-native-community/async-storage"
+  RNDeviceInfo:
+    :path: "../node_modules/react-native-device-info"
+  RNGestureHandler:
+    :path: "../node_modules/react-native-gesture-handler"
+  RNInAppBrowser:
+    :path: "../node_modules/react-native-inappbrowser-reborn"
+  RNPermissions:
+    :path: "../node_modules/react-native-permissions"
+  RNScreens:
+    :path: "../node_modules/react-native-screens"
+  RNSVG:
+    :path: "../node_modules/react-native-svg"
+  yoga:
+    :path: "../node_modules/react-native/ReactCommon/yoga"
+
+SPEC CHECKSUMS:
+  boost-for-react-native: 39c7adb57c4e60d6c5479dd8623128eb5b3f0f2c
+  BVLinearGradient: 8cbc5155c978f2e43098818c91d206d07aae6d30
+  DoubleConversion: 5805e889d232975c086db112ece9ed034df7a0b2
+  Folly: 30e7936e1c45c08d884aa59369ed951a8e68cf51
+  glog: 1f3da668190260b06b429bb211bfbee5cd790c28
+  OneSignal: 8fb749fa07f88006403c9b659a570fb7fb74519a
+  Permission-Notifications: 172e3ac9b8a915f0797af17891c93fe5caea6b40
+  Permission-PhotoLibrary: d6d09cca5d0de1fda1958175106234773a566893
+  React: 53c53c4d99097af47cf60594b8706b4e3321e722
+  React-Core: ba421f6b4f4cbe2fb17c0b6fc675f87622e78a64
+  React-cxxreact: 8384287780c4999351ad9b6e7a149d9ed10a2395
+  React-DevSupport: 197fb409737cff2c4f9986e77c220d7452cb9f9f
+  React-jsi: 4d8c9efb6312a9725b18d6fc818ffc103f60fec2
+  React-jsiexecutor: 90ad2f9db09513fc763bc757fdc3c4ff8bde2a30
+  React-jsinspector: e08662d1bf5b129a3d556eb9ea343a3f40353ae4
+  react-native-config: 55548054279d92e0e4566ea15a8b9b81028ec342
+  react-native-geolocation: c956aeb136625c23e0dce0467664af2c437888c9
+  react-native-image-picker: e6e06d4315e3c85bad17e4b2002cd29f11d202c8
+  react-native-maps: 6e499eee4eabf422ba8b6f94e993cc768bf35153
+  react-native-music-control: 700e53dc9b2ec7342f69705243609c1cd644fa44
+  react-native-onesignal: 8958311abbd9125f26e600914e48833b57321cbf
+  react-native-passkit-wallet: 51e3babdaeec4c10b5736786ebd1bfb470fcaa36
+  react-native-safari-view: 955d7160d159241b8e9395d12d10ea0ef863dcdd
+  react-native-safe-area-context: e380a6f783ccaec848e2f3cc8eb205a62362950d
+  react-native-splash-screen: 200d11d188e2e78cea3ad319964f6142b6384865
+  react-native-video: 6555881252c8ca039760e1cd6df28ac28ffb2baf
+  react-native-webview: 3c79685b61a68d1fe99136f98f2f34b04dce2e02
+  React-RCTActionSheet: b0f1ea83f4bf75fb966eae9bfc47b78c8d3efd90
+  React-RCTAnimation: 359ba1b5690b1e87cc173558a78e82d35919333e
+  React-RCTBlob: 5e2b55f76e9a1c7ae52b826923502ddc3238df24
+  React-RCTImage: f5f1c50922164e89bdda67bcd0153952a5cfe719
+  React-RCTLinking: d0ecbd791e9ddddc41fa1f66b0255de90e8ee1e9
+  React-RCTNetwork: e26946300b0ab7bb6c4a6348090e93fa21f33a9d
+  React-RCTSettings: d0d37cb521b7470c998595a44f05847777cc3f42
+  React-RCTText: b074d89033583d4f2eb5faf7ea2db3a13c7553a2
+  React-RCTVibration: 2105b2e0e2b66a6408fc69a46c8a7fb5b2fdade0
+  React-RCTWebSocket: cd932a16b7214898b6b7f788c8bddb3637246ac4
+  rn-fetch-blob: 651b8d076b43d0d7aa294a3d9ec16c00aab8bef9
+  RNAirplay: 75777dd55dafbd3687703c3eb9c290ea6cc43248
+  RNCAsyncStorage: b63d6e83fc629b01df6b624688f17944cea5637f
+  RNDeviceInfo: 687c1b2ab6d86ff1ca1208783320cd144138c7f2
+  RNGestureHandler: 5329a942fce3d41c68b84c2c2276ce06a696d8b0
+  RNInAppBrowser: 9d1ffb9db0d0cbdf03f528f1f0624b2c533b93fd
+  RNPermissions: c40561e25ae1d4ca4ad987bde1026f9294a89f74
+  RNScreens: f28b48b8345f2f5f39ed6195518291515032a788
+  RNSVG: 9cb6e958c4b6a1f58185ac72a350b148947d6fed
+  yoga: 312528f5bbbba37b4dcea5ef00e8b4033fdd9411
+
+PODFILE CHECKSUM: 4d39aaf28e44d03e5013c41ba0483da61d45219d
+
+COCOAPODS: 1.8.4
diff --git a/apolloschurchapp/ios/apolloschurchapp-tvOS/Info.plist b/apolloschurchapp/ios/apolloschurchapp-tvOS/Info.plist
index 4ea56fe..2670e42 100644
--- a/apolloschurchapp/ios/apolloschurchapp-tvOS/Info.plist
+++ b/apolloschurchapp/ios/apolloschurchapp-tvOS/Info.plist
@@ -15,13 +15,13 @@
 	<key>CFBundlePackageType</key>
 	<string>APPL</string>
 	<key>CFBundleShortVersionString</key>
-	<string>0.4.0</string>
+	<string>1.3.0</string>
 	<key>CFBundleSignature</key>
 	<string>????</string>
 	<key>CFBundleVersion</key>
-	<string>1</string>
+	<string>24</string>
 	<key>LSRequiresIPhoneOS</key>
-	<true/>
+	<true />
 	<key>UILaunchStoryboardName</key>
 	<string>LaunchScreen</string>
 	<key>UIRequiredDeviceCapabilities</key>
@@ -35,18 +35,17 @@
 		<string>UIInterfaceOrientationLandscapeRight</string>
 	</array>
 	<key>UIViewControllerBasedStatusBarAppearance</key>
-	<false/>
+	<false />
 	<key>NSLocationWhenInUseUsageDescription</key>
-	<string></string>
+	<string />
 	<key>NSAppTransportSecurity</key>
-	<!--See http://ste.vn/2015/06/10/configuring-app-transport-security-ios-9-osx-10-11/ -->
 	<dict>
 		<key>NSExceptionDomains</key>
 		<dict>
 			<key>localhost</key>
 			<dict>
 				<key>NSExceptionAllowsInsecureHTTPLoads</key>
-				<true/>
+				<true />
 			</dict>
 		</dict>
 	</dict>
diff --git a/apolloschurchapp/ios/apolloschurchapp-tvOSTests/Info.plist b/apolloschurchapp/ios/apolloschurchapp-tvOSTests/Info.plist
index 3bbe4e6..6ec4b61 100644
--- a/apolloschurchapp/ios/apolloschurchapp-tvOSTests/Info.plist
+++ b/apolloschurchapp/ios/apolloschurchapp-tvOSTests/Info.plist
@@ -15,10 +15,10 @@
 	<key>CFBundlePackageType</key>
 	<string>BNDL</string>
 	<key>CFBundleShortVersionString</key>
-	<string>0.4.0</string>
+	<string>1.3.0</string>
 	<key>CFBundleSignature</key>
 	<string>????</string>
 	<key>CFBundleVersion</key>
-	<string>1</string>
+	<string>24</string>
 </dict>
 </plist>
diff --git a/apolloschurchapp/ios/apolloschurchapp.xcodeproj/project.pbxproj b/apolloschurchapp/ios/apolloschurchapp.xcodeproj/project.pbxproj
index e30d511..a24c843 100644
--- a/apolloschurchapp/ios/apolloschurchapp.xcodeproj/project.pbxproj
+++ b/apolloschurchapp/ios/apolloschurchapp.xcodeproj/project.pbxproj
@@ -7,101 +7,37 @@
 	objects = {
 
 /* Begin PBXBuildFile section */
-		00C302E51ABCBA2D00DB3ED1 /* libRCTActionSheet.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 00C302AC1ABCB8CE00DB3ED1 /* libRCTActionSheet.a */; };
-		00C302E71ABCBA2D00DB3ED1 /* libRCTGeolocation.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 00C302BA1ABCB90400DB3ED1 /* libRCTGeolocation.a */; };
-		00C302E81ABCBA2D00DB3ED1 /* libRCTImage.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 00C302C01ABCB91800DB3ED1 /* libRCTImage.a */; };
-		00C302E91ABCBA2D00DB3ED1 /* libRCTNetwork.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 00C302DC1ABCB9D200DB3ED1 /* libRCTNetwork.a */; };
-		00C302EA1ABCBA2D00DB3ED1 /* libRCTVibration.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 00C302E41ABCB9EE00DB3ED1 /* libRCTVibration.a */; };
 		00E356F31AD99517003FC87E /* apolloschurchappTests.m in Sources */ = {isa = PBXBuildFile; fileRef = 00E356F21AD99517003FC87E /* apolloschurchappTests.m */; };
-		0D4EDF6EBA274F9D93DDED76 /* Inter-UI-MediumItalic.otf in Resources */ = {isa = PBXBuildFile; fileRef = F79112193F3548D284406ABF /* Inter-UI-MediumItalic.otf */; };
-		133E29F31AD74F7200F7D852 /* libRCTLinking.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 78C398B91ACF4ADC00677621 /* libRCTLinking.a */; };
-		139105C61AF99C1200B5F7CC /* libRCTSettings.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 139105C11AF99BAD00B5F7CC /* libRCTSettings.a */; };
-		139FDEF61B0652A700C62182 /* libRCTWebSocket.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 139FDEF41B06529B00C62182 /* libRCTWebSocket.a */; };
+		01F091B02048490A8F9EF4FE /* Inter-UI-Italic.otf in Resources */ = {isa = PBXBuildFile; fileRef = 63F6EE53A9B44B4388B5F1C2 /* Inter-UI-Italic.otf */; };
+		08CE105F17284254AD54AF84 /* DroidSerif-Bold.ttf in Resources */ = {isa = PBXBuildFile; fileRef = E3B8A0AC5A6B4FABB3BDF6CB /* DroidSerif-Bold.ttf */; };
 		13B07FBC1A68108700A75B9A /* AppDelegate.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB01A68108700A75B9A /* AppDelegate.m */; };
 		13B07FBD1A68108700A75B9A /* LaunchScreen.xib in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB11A68108700A75B9A /* LaunchScreen.xib */; };
 		13B07FBF1A68108700A75B9A /* Images.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB51A68108700A75B9A /* Images.xcassets */; };
 		13B07FC11A68108700A75B9A /* main.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB71A68108700A75B9A /* main.m */; };
-		140ED2AC1D01E1AD002B40FF /* libReact.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 146834041AC3E56700842450 /* libReact.a */; };
-		146834051AC3E58100842450 /* libReact.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 146834041AC3E56700842450 /* libReact.a */; };
-		1680179655164C96985B5731 /* libMusicControl.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 643D51DCF8F14993B9AA6990 /* libMusicControl.a */; };
-		1C1FD8B313AB4A6583A0D31B /* libRNDeviceInfo.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 14D838A2FAE743C7B1DA5E31 /* libRNDeviceInfo.a */; };
+		1C48DCDE11AC47C48E918489 /* Inter-UI-Medium.otf in Resources */ = {isa = PBXBuildFile; fileRef = DC74A378C1CC40E4B6192D7F /* Inter-UI-Medium.otf */; };
+		25B9E67E3B46D33F45473A84 /* libPods-apolloschurchapp-tvOSTests.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 4F64CCA987A0419EB9C02236 /* libPods-apolloschurchapp-tvOSTests.a */; };
 		2D02E4BC1E0B4A80006451C7 /* AppDelegate.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB01A68108700A75B9A /* AppDelegate.m */; };
 		2D02E4BD1E0B4A84006451C7 /* Images.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB51A68108700A75B9A /* Images.xcassets */; };
 		2D02E4BF1E0B4AB3006451C7 /* main.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB71A68108700A75B9A /* main.m */; };
-		2D02E4C21E0B4AEC006451C7 /* libRCTAnimation.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 5E9157351DD0AC6500FF2AA8 /* libRCTAnimation.a */; };
-		2D02E4C31E0B4AEC006451C7 /* libRCTImage-tvOS.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 3DAD3E841DF850E9000B6D8A /* libRCTImage-tvOS.a */; };
-		2D02E4C41E0B4AEC006451C7 /* libRCTLinking-tvOS.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 3DAD3E881DF850E9000B6D8A /* libRCTLinking-tvOS.a */; };
-		2D02E4C51E0B4AEC006451C7 /* libRCTNetwork-tvOS.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 3DAD3E8C1DF850E9000B6D8A /* libRCTNetwork-tvOS.a */; };
-		2D02E4C61E0B4AEC006451C7 /* libRCTSettings-tvOS.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 3DAD3E901DF850E9000B6D8A /* libRCTSettings-tvOS.a */; };
-		2D02E4C71E0B4AEC006451C7 /* libRCTText-tvOS.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 3DAD3E941DF850E9000B6D8A /* libRCTText-tvOS.a */; };
-		2D02E4C81E0B4AEC006451C7 /* libRCTWebSocket-tvOS.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 3DAD3E991DF850E9000B6D8A /* libRCTWebSocket-tvOS.a */; };
 		2D16E6881FA4F8E400B85C8A /* libReact.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 2D16E6891FA4F8E400B85C8A /* libReact.a */; };
 		2DCD954D1E0B4F2C00145EB5 /* apolloschurchappTests.m in Sources */ = {isa = PBXBuildFile; fileRef = 00E356F21AD99517003FC87E /* apolloschurchappTests.m */; };
-		2DF0FFEE2056DD460020B375 /* libReact.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 3DAD3EA31DF850E9000B6D8A /* libReact.a */; };
-		3CAA28FFFCCF46518672AC8F /* libDBCustomTabs.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 71E6499CCC9D4DB2ADD365D8 /* libDBCustomTabs.a */; };
-		417027FD83CA4902AB4DB2B4 /* Inter-UI-Black.otf in Resources */ = {isa = PBXBuildFile; fileRef = 8E13C8F9AE60487C9ED95C21 /* Inter-UI-Black.otf */; };
-		4B29B8AACC2A4FB7BA6A8EEB /* libSafariViewManager.a in Frameworks */ = {isa = PBXBuildFile; fileRef = BF5A2B416EB74A44923FED7B /* libSafariViewManager.a */; };
-		59D8DFA78CDF4642892CC142 /* DroidSerif-BoldItalic.ttf in Resources */ = {isa = PBXBuildFile; fileRef = D979B537509247C099CE3F24 /* DroidSerif-BoldItalic.ttf */; };
-		5CA1D8E805684478B04ABB60 /* Inter-UI-Italic.otf in Resources */ = {isa = PBXBuildFile; fileRef = 8CA3C04F98954FB2895CD36D /* Inter-UI-Italic.otf */; };
-		5E9157361DD0AC6A00FF2AA8 /* libRCTAnimation.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 5E9157331DD0AC6500FF2AA8 /* libRCTAnimation.a */; };
-		6E4442FB39BE4F898DE4C454 /* Inter-UI-BlackItalic.otf in Resources */ = {isa = PBXBuildFile; fileRef = 22246A6BC58E4CF09A22A4DF /* Inter-UI-BlackItalic.otf */; };
-		7D060CA312AB4E828CD60DDC /* Inter-UI-Regular.otf in Resources */ = {isa = PBXBuildFile; fileRef = 10F42B11F27E467A8C71C280 /* Inter-UI-Regular.otf */; };
-		832341BD1AAA6AB300B99B32 /* libRCTText.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 832341B51AAA6A8300B99B32 /* libRCTText.a */; };
-		86D0B47B5BF143E797822EF1 /* libRCTVideo.a in Frameworks */ = {isa = PBXBuildFile; fileRef = FC8FFB7C37BB4499AEB6FA37 /* libRCTVideo.a */; };
-		89331B8BDAF24EF5BE08A485 /* libRNSVG.a in Frameworks */ = {isa = PBXBuildFile; fileRef = CFAF46FBA8B44C7B8DCA7707 /* libRNSVG.a */; };
-		9388C44B949C4DBAAA7256D5 /* libBVLinearGradient.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 60E52391C9744A46B3925A78 /* libBVLinearGradient.a */; };
-		9ACBD642B18D41C9BB1E4D9E /* DroidSerif-Italic.ttf in Resources */ = {isa = PBXBuildFile; fileRef = F9CFD638A5414DFF961A8D11 /* DroidSerif-Italic.ttf */; };
-		A173C226549E48B991AC5D98 /* Inter-UI-Medium.otf in Resources */ = {isa = PBXBuildFile; fileRef = 9FD7D997F4F14C439AC699B3 /* Inter-UI-Medium.otf */; };
-		AB7B2136E56C4B40B64F9C87 /* libMusicControl-tvOS.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 67E66409EF8A4BC7A1B9E054 /* libMusicControl-tvOS.a */; };
-		AC4174D90AD644A28D0CA9D9 /* libRNDeviceInfo-tvOS.a in Frameworks */ = {isa = PBXBuildFile; fileRef = A574C961754742F688E43151 /* libRNDeviceInfo-tvOS.a */; };
-		ADBDB9381DFEBF1600ED6528 /* libRCTBlob.a in Frameworks */ = {isa = PBXBuildFile; fileRef = ADBDB9271DFEBF0700ED6528 /* libRCTBlob.a */; };
-		B5DE58C6CF1E4E7ABDD1B48D /* libRNImagePicker.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 3F58D699A37B432BA1C0F092 /* libRNImagePicker.a */; };
-		C87CA8735EEB43C4A55CB285 /* DroidSerif-Bold.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 4629759169AB4756B447B16A /* DroidSerif-Bold.ttf */; };
-		D5744BF3B41D4BC49F93CD68 /* DroidSerif-Regular.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 76E6AD5294554A5FA53DB415 /* DroidSerif-Regular.ttf */; };
-		DEF13113111A40DF8F4FEB13 /* libRNSVG-tvOS.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 84716CBFF56347BA880A16C6 /* libRNSVG-tvOS.a */; };
-		E374C61F2AAF41D3B615AB44 /* Inter-UI-BoldItalic.otf in Resources */ = {isa = PBXBuildFile; fileRef = 32A467E2C3364ABDBB7BD0D1 /* Inter-UI-BoldItalic.otf */; };
-		F3F4A3D13570438F9562746F /* libSplashScreen.a in Frameworks */ = {isa = PBXBuildFile; fileRef = F08D1EBF0C2A4E6798AA8F36 /* libSplashScreen.a */; };
-		F8FAD93CCE5641A8B87611EA /* Inter-UI-Bold.otf in Resources */ = {isa = PBXBuildFile; fileRef = FB25CB02F40D4CC39DDA3C74 /* Inter-UI-Bold.otf */; };
-		13FE6F3652044DDCABABA38C /* libRNDeviceInfo.a in Frameworks */ = {isa = PBXBuildFile; fileRef = DFDDD075C3884791ABF84D1F /* libRNDeviceInfo.a */; };
-		5C09A4CCB793479496045758 /* libRNDeviceInfo-tvOS.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 57A2A2F0E39F43CEA828D603 /* libRNDeviceInfo-tvOS.a */; };
+		578FFEC1D7D54C9B871A9E5B /* Inter-UI-BlackItalic.otf in Resources */ = {isa = PBXBuildFile; fileRef = 5A5A2BC2998547F4816B82E4 /* Inter-UI-BlackItalic.otf */; };
+		68D1351E80AA4A2C96288FD9 /* Inter-UI-Black.otf in Resources */ = {isa = PBXBuildFile; fileRef = EC21254B449443F99016EBFD /* Inter-UI-Black.otf */; };
+		7FBC6BC3CE8D48298F9850A9 /* Inter-UI-Bold.otf in Resources */ = {isa = PBXBuildFile; fileRef = D5157D807E164356ADE87867 /* Inter-UI-Bold.otf */; };
+		894732A70B4740678E85B593 /* Inter-UI-BoldItalic.otf in Resources */ = {isa = PBXBuildFile; fileRef = 2F5410F239E9477B9C2E86BD /* Inter-UI-BoldItalic.otf */; };
+		8EA9BDE542E09F685A47D9BE /* libPods-apolloschurchapp-tvOS.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 38B9762ACA099D28C28DBB31 /* libPods-apolloschurchapp-tvOS.a */; };
+		90743C40BF544F10A810C43C /* DroidSerif-Italic.ttf in Resources */ = {isa = PBXBuildFile; fileRef = ADC3D2DB245545ADB1CAB3FE /* DroidSerif-Italic.ttf */; };
+		93A2B0A9328A46A4B7DD5EFA /* DroidSerif-Regular.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 4E007B33EDD74B82AEF02C24 /* DroidSerif-Regular.ttf */; };
+		A415698B9815C7305EDB7AA7 /* libPods-apolloschurchappTests.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 560CBCD50AE7D282715D134E /* libPods-apolloschurchappTests.a */; };
+		AB3BD177B8A14193A5EEDDF8 /* Inter-UI-Regular.otf in Resources */ = {isa = PBXBuildFile; fileRef = A613256118404CB691DE2C8E /* Inter-UI-Regular.otf */; };
+		B02F194A3F6A4FE29AC799B4 /* DroidSerif-BoldItalic.ttf in Resources */ = {isa = PBXBuildFile; fileRef = A93F9D112A034626A9421759 /* DroidSerif-BoldItalic.ttf */; };
+		E875558F3FB8FA2024EF7DC2 /* libPods-apolloschurchapp.a in Frameworks */ = {isa = PBXBuildFile; fileRef = DDB6B5B7B6A0D1ECB68CF0DD /* libPods-apolloschurchapp.a */; };
+		ED297163215061F000B7C4FE /* JavaScriptCore.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = ED297162215061F000B7C4FE /* JavaScriptCore.framework */; };
+		ED2971652150620600B7C4FE /* JavaScriptCore.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = ED2971642150620600B7C4FE /* JavaScriptCore.framework */; };
+		FCB3069DB5DD4170B2CAEFC4 /* Inter-UI-MediumItalic.otf in Resources */ = {isa = PBXBuildFile; fileRef = A460FD7884FD4574A818005A /* Inter-UI-MediumItalic.otf */; };
 /* End PBXBuildFile section */
 
 /* Begin PBXContainerItemProxy section */
-		00C302AB1ABCB8CE00DB3ED1 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 00C302A71ABCB8CE00DB3ED1 /* RCTActionSheet.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 134814201AA4EA6300B7C361;
-			remoteInfo = RCTActionSheet;
-		};
-		00C302B91ABCB90400DB3ED1 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 00C302B51ABCB90400DB3ED1 /* RCTGeolocation.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 134814201AA4EA6300B7C361;
-			remoteInfo = RCTGeolocation;
-		};
-		00C302BF1ABCB91800DB3ED1 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 00C302BB1ABCB91800DB3ED1 /* RCTImage.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 58B5115D1A9E6B3D00147676;
-			remoteInfo = RCTImage;
-		};
-		00C302DB1ABCB9D200DB3ED1 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 00C302D31ABCB9D200DB3ED1 /* RCTNetwork.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 58B511DB1A9E6C8500147676;
-			remoteInfo = RCTNetwork;
-		};
-		00C302E31ABCB9EE00DB3ED1 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 00C302DF1ABCB9EE00DB3ED1 /* RCTVibration.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 832C81801AAF6DEF007FA2F7;
-			remoteInfo = RCTVibration;
-		};
 		00E356F41AD99517003FC87E /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
 			containerPortal = 83CBB9F71A601CBA00E9B192 /* Project object */;
@@ -109,27 +45,6 @@
 			remoteGlobalIDString = 13B07F861A680F5B00A75B9A;
 			remoteInfo = apolloschurchapp;
 		};
-		139105C01AF99BAD00B5F7CC /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 139105B61AF99BAD00B5F7CC /* RCTSettings.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 134814201AA4EA6300B7C361;
-			remoteInfo = RCTSettings;
-		};
-		139FDEF31B06529B00C62182 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 139FDEE61B06529A00C62182 /* RCTWebSocket.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 3C86DF461ADF2C930047B81A;
-			remoteInfo = RCTWebSocket;
-		};
-		146834031AC3E56700842450 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 83CBBA2E1A601D0E00E9B192;
-			remoteInfo = React;
-		};
 		2D02E4911E0B4A5D006451C7 /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
 			containerPortal = 83CBB9F71A601CBA00E9B192 /* Project object */;
@@ -137,323 +52,14 @@
 			remoteGlobalIDString = 2D02E47A1E0B4A5D006451C7;
 			remoteInfo = "apolloschurchapp-tvOS";
 		};
-		2D16E6711FA4F8DC00B85C8A /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = ADBDB91F1DFEBF0600ED6528 /* RCTBlob.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = ADD01A681E09402E00F6D226;
-			remoteInfo = "RCTBlob-tvOS";
-		};
-		2D16E6831FA4F8DC00B85C8A /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 139FDEE61B06529A00C62182 /* RCTWebSocket.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 3DBE0D001F3B181A0099AA32;
-			remoteInfo = fishhook;
-		};
-		2D16E6851FA4F8DC00B85C8A /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 139FDEE61B06529A00C62182 /* RCTWebSocket.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 3DBE0D0D1F3B181C0099AA32;
-			remoteInfo = "fishhook-tvOS";
-		};
-		2DF0FFDE2056DD460020B375 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = EBF21BDC1FC498900052F4D5;
-			remoteInfo = jsinspector;
-		};
-		2DF0FFE02056DD460020B375 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = EBF21BFA1FC4989A0052F4D5;
-			remoteInfo = "jsinspector-tvOS";
-		};
-		2DF0FFE22056DD460020B375 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 139D7ECE1E25DB7D00323FB7;
-			remoteInfo = "third-party";
-		};
-		2DF0FFE42056DD460020B375 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 3D383D3C1EBD27B6005632C8;
-			remoteInfo = "third-party-tvOS";
-		};
-		2DF0FFE62056DD460020B375 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 139D7E881E25C6D100323FB7;
-			remoteInfo = "double-conversion";
-		};
-		2DF0FFE82056DD460020B375 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 3D383D621EBD27B9005632C8;
-			remoteInfo = "double-conversion-tvOS";
-		};
-		2DF0FFEA2056DD460020B375 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 9936F3131F5F2E4B0010BF04;
-			remoteInfo = privatedata;
-		};
-		2DF0FFEC2056DD460020B375 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 9936F32F1F5F2E5B0010BF04;
-			remoteInfo = "privatedata-tvOS";
-		};
-		3DAD3E831DF850E9000B6D8A /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 00C302BB1ABCB91800DB3ED1 /* RCTImage.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 2D2A283A1D9B042B00D4039D;
-			remoteInfo = "RCTImage-tvOS";
-		};
-		3DAD3E871DF850E9000B6D8A /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 78C398B01ACF4ADC00677621 /* RCTLinking.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 2D2A28471D9B043800D4039D;
-			remoteInfo = "RCTLinking-tvOS";
-		};
-		3DAD3E8B1DF850E9000B6D8A /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 00C302D31ABCB9D200DB3ED1 /* RCTNetwork.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 2D2A28541D9B044C00D4039D;
-			remoteInfo = "RCTNetwork-tvOS";
-		};
-		3DAD3E8F1DF850E9000B6D8A /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 139105B61AF99BAD00B5F7CC /* RCTSettings.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 2D2A28611D9B046600D4039D;
-			remoteInfo = "RCTSettings-tvOS";
-		};
-		3DAD3E931DF850E9000B6D8A /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 832341B01AAA6A8300B99B32 /* RCTText.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 2D2A287B1D9B048500D4039D;
-			remoteInfo = "RCTText-tvOS";
-		};
-		3DAD3E981DF850E9000B6D8A /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 139FDEE61B06529A00C62182 /* RCTWebSocket.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 2D2A28881D9B049200D4039D;
-			remoteInfo = "RCTWebSocket-tvOS";
-		};
-		3DAD3EA21DF850E9000B6D8A /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 2D2A28131D9B038B00D4039D;
-			remoteInfo = "React-tvOS";
-		};
-		3DAD3EA41DF850E9000B6D8A /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 3D3C059A1DE3340900C268FA;
-			remoteInfo = yoga;
-		};
-		3DAD3EA61DF850E9000B6D8A /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 3D3C06751DE3340C00C268FA;
-			remoteInfo = "yoga-tvOS";
-		};
-		3DAD3EA81DF850E9000B6D8A /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 3D3CD9251DE5FBEC00167DC4;
-			remoteInfo = cxxreact;
-		};
-		3DAD3EAA1DF850E9000B6D8A /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 3D3CD9321DE5FBEE00167DC4;
-			remoteInfo = "cxxreact-tvOS";
-		};
-		3DAD3EAC1DF850E9000B6D8A /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 3D3CD90B1DE5FBD600167DC4;
-			remoteInfo = jschelpers;
-		};
-		3DAD3EAE1DF850E9000B6D8A /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 3D3CD9181DE5FBD800167DC4;
-			remoteInfo = "jschelpers-tvOS";
-		};
-		5E9157321DD0AC6500FF2AA8 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 5E91572D1DD0AC6500FF2AA8 /* RCTAnimation.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 134814201AA4EA6300B7C361;
-			remoteInfo = RCTAnimation;
-		};
-		5E9157341DD0AC6500FF2AA8 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 5E91572D1DD0AC6500FF2AA8 /* RCTAnimation.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 2D2A28201D9B03D100D4039D;
-			remoteInfo = "RCTAnimation-tvOS";
-		};
-		78C398B81ACF4ADC00677621 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 78C398B01ACF4ADC00677621 /* RCTLinking.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 134814201AA4EA6300B7C361;
-			remoteInfo = RCTLinking;
-		};
-		791434762126017B006F13B7 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 46704FC4FCEB45B6B9DD92BB /* BVLinearGradient.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 134814201AA4EA6300B7C361;
-			remoteInfo = BVLinearGradient;
-		};
-		791434782126017B006F13B7 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 46704FC4FCEB45B6B9DD92BB /* BVLinearGradient.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 64AA15081EF7F30100718508;
-			remoteInfo = "BVLinearGradient-tvOS";
-		};
-		7914347C2126017B006F13B7 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 2F8741F0746D4C8A89970C4D /* RCTVideo.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 134814201AA4EA6300B7C361;
-			remoteInfo = RCTVideo;
-		};
-		7914347E2126017B006F13B7 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 2F8741F0746D4C8A89970C4D /* RCTVideo.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 641E28441F0EEC8500443AF6;
-			remoteInfo = "RCTVideo-tvOS";
-		};
-		791434812126017B006F13B7 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 6BAAC994942548609D0EEECA /* ReactNativeCustomTabs.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = DA7118681CC9158A0087DF95;
-			remoteInfo = DBCustomTabs;
-		};
-		791434852126017B006F13B7 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 01441BF099BE44EE8BA8E390 /* RNSVG.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 0CF68AC11AF0540F00FF9E5C;
-			remoteInfo = RNSVG;
-		};
-		791434872126017B006F13B7 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 01441BF099BE44EE8BA8E390 /* RNSVG.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 94DDAC5C1F3D024300EED511;
-			remoteInfo = "RNSVG-tvOS";
-		};
-		7914348A2126017B006F13B7 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 6B6E5A404A4B4A34B18D7D34 /* SafariViewManager.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 134814201AA4EA6300B7C361;
-			remoteInfo = SafariViewManager;
-		};
-		7914348D2126017B006F13B7 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = A64D00F181AE4927A4632B6E /* SplashScreen.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 3D7682761D8E76B80014119E;
-			remoteInfo = SplashScreen;
-		};
-		796F2532212CAD5D00C6935E /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 239ECFF08FA841B99DB1CAFA /* RNDeviceInfo.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = DA5891D81BA9A9FC002B4DB2;
-			remoteInfo = RNDeviceInfo;
-		};
-		796F2534212CAD5D00C6935E /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 239ECFF08FA841B99DB1CAFA /* RNDeviceInfo.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = E72EC1401F7ABB5A0001BC90;
-			remoteInfo = "RNDeviceInfo-tvOS";
-		};
-		797304182146322D00F6E05B /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 4BD3C4E6742F4F6380640CA9 /* MusicControl.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 134814201AA4EA6300B7C361;
-			remoteInfo = MusicControl;
-		};
-		7973041A2146322D00F6E05B /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 4BD3C4E6742F4F6380640CA9 /* MusicControl.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = A3FC285E1EA7A8350097B6A9;
-			remoteInfo = "MusicControl-tvOS";
-		};
-		832341B41AAA6A8300B99B32 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 832341B01AAA6A8300B99B32 /* RCTText.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 58B5119B1A9E6C1200147676;
-			remoteInfo = RCTText;
-		};
-		ADBDB9261DFEBF0700ED6528 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = ADBDB91F1DFEBF0600ED6528 /* RCTBlob.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 358F4ED71D1E81A9004DF814;
-			remoteInfo = RCTBlob;
-		};
-		BF9931702138673B0077FD20 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 3BD7DCDF7B194D7BB9BE3C6C /* RNImagePicker.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 014A3B5C1C6CF33500B6D375;
-			remoteInfo = RNImagePicker;
-		};
 /* End PBXContainerItemProxy section */
 
 /* Begin PBXFileReference section */
 		008F07F21AC5B25A0029DE68 /* main.jsbundle */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = main.jsbundle; sourceTree = "<group>"; };
-		00C302A71ABCB8CE00DB3ED1 /* RCTActionSheet.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = RCTActionSheet.xcodeproj; path = "../node_modules/react-native/Libraries/ActionSheetIOS/RCTActionSheet.xcodeproj"; sourceTree = "<group>"; };
-		00C302B51ABCB90400DB3ED1 /* RCTGeolocation.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = RCTGeolocation.xcodeproj; path = "../node_modules/react-native/Libraries/Geolocation/RCTGeolocation.xcodeproj"; sourceTree = "<group>"; };
-		00C302BB1ABCB91800DB3ED1 /* RCTImage.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = RCTImage.xcodeproj; path = "../node_modules/react-native/Libraries/Image/RCTImage.xcodeproj"; sourceTree = "<group>"; };
-		00C302D31ABCB9D200DB3ED1 /* RCTNetwork.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = RCTNetwork.xcodeproj; path = "../node_modules/react-native/Libraries/Network/RCTNetwork.xcodeproj"; sourceTree = "<group>"; };
-		00C302DF1ABCB9EE00DB3ED1 /* RCTVibration.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = RCTVibration.xcodeproj; path = "../node_modules/react-native/Libraries/Vibration/RCTVibration.xcodeproj"; sourceTree = "<group>"; };
 		00E356EE1AD99517003FC87E /* apolloschurchappTests.xctest */ = {isa = PBXFileReference; explicitFileType = wrapper.cfbundle; includeInIndex = 0; path = apolloschurchappTests.xctest; sourceTree = BUILT_PRODUCTS_DIR; };
 		00E356F11AD99517003FC87E /* Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; path = Info.plist; sourceTree = "<group>"; };
 		00E356F21AD99517003FC87E /* apolloschurchappTests.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; path = apolloschurchappTests.m; sourceTree = "<group>"; };
-		01441BF099BE44EE8BA8E390 /* RNSVG.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = RNSVG.xcodeproj; path = "../node_modules/react-native-svg/ios/RNSVG.xcodeproj"; sourceTree = "<group>"; };
-		10F42B11F27E467A8C71C280 /* Inter-UI-Regular.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-Regular.otf"; path = "../assets/fonts/Inter-UI-Regular.otf"; sourceTree = "<group>"; };
-		139105B61AF99BAD00B5F7CC /* RCTSettings.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = RCTSettings.xcodeproj; path = "../node_modules/react-native/Libraries/Settings/RCTSettings.xcodeproj"; sourceTree = "<group>"; };
-		139FDEE61B06529A00C62182 /* RCTWebSocket.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = RCTWebSocket.xcodeproj; path = "../node_modules/react-native/Libraries/WebSocket/RCTWebSocket.xcodeproj"; sourceTree = "<group>"; };
+		0D480D95FC7F4569B8B934E3 /* libRCTOneSignal.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libRCTOneSignal.a; sourceTree = "<group>"; };
 		13B07F961A680F5B00A75B9A /* apolloschurchapp.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = apolloschurchapp.app; sourceTree = BUILT_PRODUCTS_DIR; };
 		13B07FAF1A68108700A75B9A /* AppDelegate.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = AppDelegate.h; path = apolloschurchapp/AppDelegate.h; sourceTree = "<group>"; };
 		13B07FB01A68108700A75B9A /* AppDelegate.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; name = AppDelegate.m; path = apolloschurchapp/AppDelegate.m; sourceTree = "<group>"; };
@@ -461,48 +67,35 @@
 		13B07FB51A68108700A75B9A /* Images.xcassets */ = {isa = PBXFileReference; lastKnownFileType = folder.assetcatalog; name = Images.xcassets; path = apolloschurchapp/Images.xcassets; sourceTree = "<group>"; };
 		13B07FB61A68108700A75B9A /* Info.plist */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.xml; name = Info.plist; path = apolloschurchapp/Info.plist; sourceTree = "<group>"; };
 		13B07FB71A68108700A75B9A /* main.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; name = main.m; path = apolloschurchapp/main.m; sourceTree = "<group>"; };
-		146833FF1AC3E56700842450 /* React.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = React.xcodeproj; path = "../node_modules/react-native/React/React.xcodeproj"; sourceTree = "<group>"; };
-		14D838A2FAE743C7B1DA5E31 /* libRNDeviceInfo.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libRNDeviceInfo.a; sourceTree = "<group>"; };
-		22246A6BC58E4CF09A22A4DF /* Inter-UI-BlackItalic.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-BlackItalic.otf"; path = "../assets/fonts/Inter-UI-BlackItalic.otf"; sourceTree = "<group>"; };
-		239ECFF08FA841B99DB1CAFA /* RNDeviceInfo.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = RNDeviceInfo.xcodeproj; path = "../node_modules/react-native-device-info/ios/RNDeviceInfo.xcodeproj"; sourceTree = "<group>"; };
+		1F8F5BC4745C8F22C695573D /* Pods-apolloschurchapp.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-apolloschurchapp.release.xcconfig"; path = "Target Support Files/Pods-apolloschurchapp/Pods-apolloschurchapp.release.xcconfig"; sourceTree = "<group>"; };
 		2D02E47B1E0B4A5D006451C7 /* apolloschurchapp-tvOS.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = "apolloschurchapp-tvOS.app"; sourceTree = BUILT_PRODUCTS_DIR; };
 		2D02E4901E0B4A5D006451C7 /* apolloschurchapp-tvOSTests.xctest */ = {isa = PBXFileReference; explicitFileType = wrapper.cfbundle; includeInIndex = 0; path = "apolloschurchapp-tvOSTests.xctest"; sourceTree = BUILT_PRODUCTS_DIR; };
 		2D16E6891FA4F8E400B85C8A /* libReact.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; path = libReact.a; sourceTree = BUILT_PRODUCTS_DIR; };
-		2F8741F0746D4C8A89970C4D /* RCTVideo.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = RCTVideo.xcodeproj; path = "../node_modules/react-native-video/ios/RCTVideo.xcodeproj"; sourceTree = "<group>"; };
-		32A467E2C3364ABDBB7BD0D1 /* Inter-UI-BoldItalic.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-BoldItalic.otf"; path = "../assets/fonts/Inter-UI-BoldItalic.otf"; sourceTree = "<group>"; };
-		3BD7DCDF7B194D7BB9BE3C6C /* RNImagePicker.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = RNImagePicker.xcodeproj; path = "../node_modules/react-native-image-picker/ios/RNImagePicker.xcodeproj"; sourceTree = "<group>"; };
-		3F58D699A37B432BA1C0F092 /* libRNImagePicker.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libRNImagePicker.a; sourceTree = "<group>"; };
-		4629759169AB4756B447B16A /* DroidSerif-Bold.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "DroidSerif-Bold.ttf"; path = "../assets/fonts/DroidSerif-Bold.ttf"; sourceTree = "<group>"; };
-		46704FC4FCEB45B6B9DD92BB /* BVLinearGradient.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = BVLinearGradient.xcodeproj; path = "../node_modules/react-native-linear-gradient/BVLinearGradient.xcodeproj"; sourceTree = "<group>"; };
-		4BD3C4E6742F4F6380640CA9 /* MusicControl.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = MusicControl.xcodeproj; path = "../node_modules/react-native-music-control/ios/MusicControl.xcodeproj"; sourceTree = "<group>"; };
-		5E91572D1DD0AC6500FF2AA8 /* RCTAnimation.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = RCTAnimation.xcodeproj; path = "../node_modules/react-native/Libraries/NativeAnimation/RCTAnimation.xcodeproj"; sourceTree = "<group>"; };
-		60E52391C9744A46B3925A78 /* libBVLinearGradient.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libBVLinearGradient.a; sourceTree = "<group>"; };
-		643D51DCF8F14993B9AA6990 /* libMusicControl.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libMusicControl.a; sourceTree = "<group>"; };
-		67E66409EF8A4BC7A1B9E054 /* libMusicControl-tvOS.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = "libMusicControl-tvOS.a"; sourceTree = "<group>"; };
-		6B6E5A404A4B4A34B18D7D34 /* SafariViewManager.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = SafariViewManager.xcodeproj; path = "../node_modules/react-native-safari-view/SafariViewManager.xcodeproj"; sourceTree = "<group>"; };
-		6BAAC994942548609D0EEECA /* ReactNativeCustomTabs.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = ReactNativeCustomTabs.xcodeproj; path = "../node_modules/react-native-custom-tabs/ios/ReactNativeCustomTabs.xcodeproj"; sourceTree = "<group>"; };
-		71E6499CCC9D4DB2ADD365D8 /* libDBCustomTabs.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libDBCustomTabs.a; sourceTree = "<group>"; };
-		76E6AD5294554A5FA53DB415 /* DroidSerif-Regular.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "DroidSerif-Regular.ttf"; path = "../assets/fonts/DroidSerif-Regular.ttf"; sourceTree = "<group>"; };
-		78C398B01ACF4ADC00677621 /* RCTLinking.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = RCTLinking.xcodeproj; path = "../node_modules/react-native/Libraries/LinkingIOS/RCTLinking.xcodeproj"; sourceTree = "<group>"; };
-		832341B01AAA6A8300B99B32 /* RCTText.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = RCTText.xcodeproj; path = "../node_modules/react-native/Libraries/Text/RCTText.xcodeproj"; sourceTree = "<group>"; };
-		84716CBFF56347BA880A16C6 /* libRNSVG-tvOS.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = "libRNSVG-tvOS.a"; sourceTree = "<group>"; };
-		8CA3C04F98954FB2895CD36D /* Inter-UI-Italic.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-Italic.otf"; path = "../assets/fonts/Inter-UI-Italic.otf"; sourceTree = "<group>"; };
-		8E13C8F9AE60487C9ED95C21 /* Inter-UI-Black.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-Black.otf"; path = "../assets/fonts/Inter-UI-Black.otf"; sourceTree = "<group>"; };
-		9FD7D997F4F14C439AC699B3 /* Inter-UI-Medium.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-Medium.otf"; path = "../assets/fonts/Inter-UI-Medium.otf"; sourceTree = "<group>"; };
-		A574C961754742F688E43151 /* libRNDeviceInfo-tvOS.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = "libRNDeviceInfo-tvOS.a"; sourceTree = "<group>"; };
-		A64D00F181AE4927A4632B6E /* SplashScreen.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = SplashScreen.xcodeproj; path = "../node_modules/react-native-splash-screen/ios/SplashScreen.xcodeproj"; sourceTree = "<group>"; };
-		ADBDB91F1DFEBF0600ED6528 /* RCTBlob.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = RCTBlob.xcodeproj; path = "../node_modules/react-native/Libraries/Blob/RCTBlob.xcodeproj"; sourceTree = "<group>"; };
-		BF5A2B416EB74A44923FED7B /* libSafariViewManager.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libSafariViewManager.a; sourceTree = "<group>"; };
-		CFAF46FBA8B44C7B8DCA7707 /* libRNSVG.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libRNSVG.a; sourceTree = "<group>"; };
-		D979B537509247C099CE3F24 /* DroidSerif-BoldItalic.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "DroidSerif-BoldItalic.ttf"; path = "../assets/fonts/DroidSerif-BoldItalic.ttf"; sourceTree = "<group>"; };
-		F08D1EBF0C2A4E6798AA8F36 /* libSplashScreen.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libSplashScreen.a; sourceTree = "<group>"; };
-		F79112193F3548D284406ABF /* Inter-UI-MediumItalic.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-MediumItalic.otf"; path = "../assets/fonts/Inter-UI-MediumItalic.otf"; sourceTree = "<group>"; };
-		F9CFD638A5414DFF961A8D11 /* DroidSerif-Italic.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "DroidSerif-Italic.ttf"; path = "../assets/fonts/DroidSerif-Italic.ttf"; sourceTree = "<group>"; };
-		FB25CB02F40D4CC39DDA3C74 /* Inter-UI-Bold.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-Bold.otf"; path = "../assets/fonts/Inter-UI-Bold.otf"; sourceTree = "<group>"; };
-		FC8FFB7C37BB4499AEB6FA37 /* libRCTVideo.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libRCTVideo.a; sourceTree = "<group>"; };
-		95B9E71966CF436CA52F0026 /* RNDeviceInfo.xcodeproj */ = {isa = PBXFileReference; name = "RNDeviceInfo.xcodeproj"; path = "../node_modules/react-native-device-info/ios/RNDeviceInfo.xcodeproj"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = wrapper.pb-project; explicitFileType = undefined; includeInIndex = 0; };
-		DFDDD075C3884791ABF84D1F /* libRNDeviceInfo.a */ = {isa = PBXFileReference; name = "libRNDeviceInfo.a"; path = "libRNDeviceInfo.a"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = archive.ar; explicitFileType = undefined; includeInIndex = 0; };
-		57A2A2F0E39F43CEA828D603 /* libRNDeviceInfo-tvOS.a */ = {isa = PBXFileReference; name = "libRNDeviceInfo-tvOS.a"; path = "libRNDeviceInfo-tvOS.a"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = archive.ar; explicitFileType = undefined; includeInIndex = 0; };
+		2F5410F239E9477B9C2E86BD /* Inter-UI-BoldItalic.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-BoldItalic.otf"; path = "../assets/fonts/Inter-UI-BoldItalic.otf"; sourceTree = "<group>"; };
+		38B9762ACA099D28C28DBB31 /* libPods-apolloschurchapp-tvOS.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-apolloschurchapp-tvOS.a"; sourceTree = BUILT_PRODUCTS_DIR; };
+		4E007B33EDD74B82AEF02C24 /* DroidSerif-Regular.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "DroidSerif-Regular.ttf"; path = "../assets/fonts/DroidSerif-Regular.ttf"; sourceTree = "<group>"; };
+		4F64CCA987A0419EB9C02236 /* libPods-apolloschurchapp-tvOSTests.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-apolloschurchapp-tvOSTests.a"; sourceTree = BUILT_PRODUCTS_DIR; };
+		54F271B8EB67A4997A2C7D96 /* Pods-apolloschurchapp.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-apolloschurchapp.debug.xcconfig"; path = "Target Support Files/Pods-apolloschurchapp/Pods-apolloschurchapp.debug.xcconfig"; sourceTree = "<group>"; };
+		560CBCD50AE7D282715D134E /* libPods-apolloschurchappTests.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-apolloschurchappTests.a"; sourceTree = BUILT_PRODUCTS_DIR; };
+		5A5A2BC2998547F4816B82E4 /* Inter-UI-BlackItalic.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-BlackItalic.otf"; path = "../assets/fonts/Inter-UI-BlackItalic.otf"; sourceTree = "<group>"; };
+		63F6EE53A9B44B4388B5F1C2 /* Inter-UI-Italic.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-Italic.otf"; path = "../assets/fonts/Inter-UI-Italic.otf"; sourceTree = "<group>"; };
+		745C835CA2F1E1EC2425152A /* Pods-apolloschurchapp-tvOS.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-apolloschurchapp-tvOS.debug.xcconfig"; path = "Target Support Files/Pods-apolloschurchapp-tvOS/Pods-apolloschurchapp-tvOS.debug.xcconfig"; sourceTree = "<group>"; };
+		A460FD7884FD4574A818005A /* Inter-UI-MediumItalic.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-MediumItalic.otf"; path = "../assets/fonts/Inter-UI-MediumItalic.otf"; sourceTree = "<group>"; };
+		A613256118404CB691DE2C8E /* Inter-UI-Regular.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-Regular.otf"; path = "../assets/fonts/Inter-UI-Regular.otf"; sourceTree = "<group>"; };
+		A93F9D112A034626A9421759 /* DroidSerif-BoldItalic.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "DroidSerif-BoldItalic.ttf"; path = "../assets/fonts/DroidSerif-BoldItalic.ttf"; sourceTree = "<group>"; };
+		AB44FC16DED929081698EDFD /* Pods-apolloschurchappTests.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-apolloschurchappTests.debug.xcconfig"; path = "Target Support Files/Pods-apolloschurchappTests/Pods-apolloschurchappTests.debug.xcconfig"; sourceTree = "<group>"; };
+		ADC3D2DB245545ADB1CAB3FE /* DroidSerif-Italic.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "DroidSerif-Italic.ttf"; path = "../assets/fonts/DroidSerif-Italic.ttf"; sourceTree = "<group>"; };
+		AE85030F59F256E90D5A4C2B /* Pods-apolloschurchapp-tvOS.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-apolloschurchapp-tvOS.release.xcconfig"; path = "Target Support Files/Pods-apolloschurchapp-tvOS/Pods-apolloschurchapp-tvOS.release.xcconfig"; sourceTree = "<group>"; };
+		D394E3064D75710E81C51EB0 /* Pods-apolloschurchapp-tvOSTests.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-apolloschurchapp-tvOSTests.debug.xcconfig"; path = "Target Support Files/Pods-apolloschurchapp-tvOSTests/Pods-apolloschurchapp-tvOSTests.debug.xcconfig"; sourceTree = "<group>"; };
+		D5157D807E164356ADE87867 /* Inter-UI-Bold.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-Bold.otf"; path = "../assets/fonts/Inter-UI-Bold.otf"; sourceTree = "<group>"; };
+		DA9745795726553C6FA9E7A8 /* Pods-apolloschurchapp-tvOSTests.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-apolloschurchapp-tvOSTests.release.xcconfig"; path = "Target Support Files/Pods-apolloschurchapp-tvOSTests/Pods-apolloschurchapp-tvOSTests.release.xcconfig"; sourceTree = "<group>"; };
+		DC74A378C1CC40E4B6192D7F /* Inter-UI-Medium.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-Medium.otf"; path = "../assets/fonts/Inter-UI-Medium.otf"; sourceTree = "<group>"; };
+		DDB6B5B7B6A0D1ECB68CF0DD /* libPods-apolloschurchapp.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-apolloschurchapp.a"; sourceTree = BUILT_PRODUCTS_DIR; };
+		E3B8A0AC5A6B4FABB3BDF6CB /* DroidSerif-Bold.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "DroidSerif-Bold.ttf"; path = "../assets/fonts/DroidSerif-Bold.ttf"; sourceTree = "<group>"; };
+		E98AC9782C338F13632EF710 /* Pods-apolloschurchappTests.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-apolloschurchappTests.release.xcconfig"; path = "Target Support Files/Pods-apolloschurchappTests/Pods-apolloschurchappTests.release.xcconfig"; sourceTree = "<group>"; };
+		EC21254B449443F99016EBFD /* Inter-UI-Black.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-Black.otf"; path = "../assets/fonts/Inter-UI-Black.otf"; sourceTree = "<group>"; };
+		ED297162215061F000B7C4FE /* JavaScriptCore.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = JavaScriptCore.framework; path = System/Library/Frameworks/JavaScriptCore.framework; sourceTree = SDKROOT; };
+		ED2971642150620600B7C4FE /* JavaScriptCore.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = JavaScriptCore.framework; path = Platforms/AppleTVOS.platform/Developer/SDKs/AppleTVOS12.0.sdk/System/Library/Frameworks/JavaScriptCore.framework; sourceTree = DEVELOPER_DIR; };
 /* End PBXFileReference section */
 
 /* Begin PBXFrameworksBuildPhase section */
@@ -510,7 +103,7 @@
 			isa = PBXFrameworksBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
-				140ED2AC1D01E1AD002B40FF /* libReact.a in Frameworks */,
+				A415698B9815C7305EDB7AA7 /* libPods-apolloschurchappTests.a in Frameworks */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
@@ -518,28 +111,8 @@
 			isa = PBXFrameworksBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
-				ADBDB9381DFEBF1600ED6528 /* libRCTBlob.a in Frameworks */,
-				5E9157361DD0AC6A00FF2AA8 /* libRCTAnimation.a in Frameworks */,
-				146834051AC3E58100842450 /* libReact.a in Frameworks */,
-				5E9157361DD0AC6A00FF2AA8 /* libRCTAnimation.a in Frameworks */,
-				00C302E51ABCBA2D00DB3ED1 /* libRCTActionSheet.a in Frameworks */,
-				00C302E71ABCBA2D00DB3ED1 /* libRCTGeolocation.a in Frameworks */,
-				00C302E81ABCBA2D00DB3ED1 /* libRCTImage.a in Frameworks */,
-				133E29F31AD74F7200F7D852 /* libRCTLinking.a in Frameworks */,
-				00C302E91ABCBA2D00DB3ED1 /* libRCTNetwork.a in Frameworks */,
-				139105C61AF99C1200B5F7CC /* libRCTSettings.a in Frameworks */,
-				832341BD1AAA6AB300B99B32 /* libRCTText.a in Frameworks */,
-				00C302EA1ABCBA2D00DB3ED1 /* libRCTVibration.a in Frameworks */,
-				139FDEF61B0652A700C62182 /* libRCTWebSocket.a in Frameworks */,
-				3CAA28FFFCCF46518672AC8F /* libDBCustomTabs.a in Frameworks */,
-				9388C44B949C4DBAAA7256D5 /* libBVLinearGradient.a in Frameworks */,
-				4B29B8AACC2A4FB7BA6A8EEB /* libSafariViewManager.a in Frameworks */,
-				F3F4A3D13570438F9562746F /* libSplashScreen.a in Frameworks */,
-				89331B8BDAF24EF5BE08A485 /* libRNSVG.a in Frameworks */,
-				86D0B47B5BF143E797822EF1 /* libRCTVideo.a in Frameworks */,
-				B5DE58C6CF1E4E7ABDD1B48D /* libRNImagePicker.a in Frameworks */,
-				1C1FD8B313AB4A6583A0D31B /* libRNDeviceInfo.a in Frameworks */,
-				1680179655164C96985B5731 /* libMusicControl.a in Frameworks */,
+				ED297163215061F000B7C4FE /* JavaScriptCore.framework in Frameworks */,
+				E875558F3FB8FA2024EF7DC2 /* libPods-apolloschurchapp.a in Frameworks */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
@@ -547,17 +120,9 @@
 			isa = PBXFrameworksBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
+				ED2971652150620600B7C4FE /* JavaScriptCore.framework in Frameworks */,
 				2D16E6881FA4F8E400B85C8A /* libReact.a in Frameworks */,
-				2D02E4C21E0B4AEC006451C7 /* libRCTAnimation.a in Frameworks */,
-				2D02E4C31E0B4AEC006451C7 /* libRCTImage-tvOS.a in Frameworks */,
-				2D02E4C41E0B4AEC006451C7 /* libRCTLinking-tvOS.a in Frameworks */,
-				2D02E4C51E0B4AEC006451C7 /* libRCTNetwork-tvOS.a in Frameworks */,
-				2D02E4C61E0B4AEC006451C7 /* libRCTSettings-tvOS.a in Frameworks */,
-				2D02E4C71E0B4AEC006451C7 /* libRCTText-tvOS.a in Frameworks */,
-				2D02E4C81E0B4AEC006451C7 /* libRCTWebSocket-tvOS.a in Frameworks */,
-				DEF13113111A40DF8F4FEB13 /* libRNSVG-tvOS.a in Frameworks */,
-				AC4174D90AD644A28D0CA9D9 /* libRNDeviceInfo-tvOS.a in Frameworks */,
-				AB7B2136E56C4B40B64F9C87 /* libMusicControl-tvOS.a in Frameworks */,
+				8EA9BDE542E09F685A47D9BE /* libPods-apolloschurchapp-tvOS.a in Frameworks */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
@@ -565,55 +130,13 @@
 			isa = PBXFrameworksBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
-				2DF0FFEE2056DD460020B375 /* libReact.a in Frameworks */,
+				25B9E67E3B46D33F45473A84 /* libPods-apolloschurchapp-tvOSTests.a in Frameworks */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
 /* End PBXFrameworksBuildPhase section */
 
 /* Begin PBXGroup section */
-		00C302A81ABCB8CE00DB3ED1 /* Products */ = {
-			isa = PBXGroup;
-			children = (
-				00C302AC1ABCB8CE00DB3ED1 /* libRCTActionSheet.a */,
-			);
-			name = Products;
-			sourceTree = "<group>";
-		};
-		00C302B61ABCB90400DB3ED1 /* Products */ = {
-			isa = PBXGroup;
-			children = (
-				00C302BA1ABCB90400DB3ED1 /* libRCTGeolocation.a */,
-			);
-			name = Products;
-			sourceTree = "<group>";
-		};
-		00C302BC1ABCB91800DB3ED1 /* Products */ = {
-			isa = PBXGroup;
-			children = (
-				00C302C01ABCB91800DB3ED1 /* libRCTImage.a */,
-				3DAD3E841DF850E9000B6D8A /* libRCTImage-tvOS.a */,
-			);
-			name = Products;
-			sourceTree = "<group>";
-		};
-		00C302D41ABCB9D200DB3ED1 /* Products */ = {
-			isa = PBXGroup;
-			children = (
-				00C302DC1ABCB9D200DB3ED1 /* libRCTNetwork.a */,
-				3DAD3E8C1DF850E9000B6D8A /* libRCTNetwork-tvOS.a */,
-			);
-			name = Products;
-			sourceTree = "<group>";
-		};
-		00C302E01ABCB9EE00DB3ED1 /* Products */ = {
-			isa = PBXGroup;
-			children = (
-				00C302E41ABCB9EE00DB3ED1 /* libRCTVibration.a */,
-			);
-			name = Products;
-			sourceTree = "<group>";
-		};
 		00E356EF1AD99517003FC87E /* apolloschurchappTests */ = {
 			isa = PBXGroup;
 			children = (
@@ -631,26 +154,6 @@
 			name = "Supporting Files";
 			sourceTree = "<group>";
 		};
-		139105B71AF99BAD00B5F7CC /* Products */ = {
-			isa = PBXGroup;
-			children = (
-				139105C11AF99BAD00B5F7CC /* libRCTSettings.a */,
-				3DAD3E901DF850E9000B6D8A /* libRCTSettings-tvOS.a */,
-			);
-			name = Products;
-			sourceTree = "<group>";
-		};
-		139FDEE71B06529A00C62182 /* Products */ = {
-			isa = PBXGroup;
-			children = (
-				139FDEF41B06529B00C62182 /* libRCTWebSocket.a */,
-				3DAD3E991DF850E9000B6D8A /* libRCTWebSocket-tvOS.a */,
-				2D16E6841FA4F8DC00B85C8A /* libfishhook.a */,
-				2D16E6861FA4F8DC00B85C8A /* libfishhook-tvOS.a */,
-			);
-			name = Products;
-			sourceTree = "<group>";
-		};
 		13B07FAE1A68108700A75B9A /* apolloschurchapp */ = {
 			isa = PBXGroup;
 			children = (
@@ -665,199 +168,69 @@
 			name = apolloschurchapp;
 			sourceTree = "<group>";
 		};
-		146834001AC3E56700842450 /* Products */ = {
-			isa = PBXGroup;
-			children = (
-				146834041AC3E56700842450 /* libReact.a */,
-				3DAD3EA31DF850E9000B6D8A /* libReact.a */,
-				3DAD3EA51DF850E9000B6D8A /* libyoga.a */,
-				3DAD3EA71DF850E9000B6D8A /* libyoga.a */,
-				3DAD3EA91DF850E9000B6D8A /* libcxxreact.a */,
-				3DAD3EAB1DF850E9000B6D8A /* libcxxreact.a */,
-				3DAD3EAD1DF850E9000B6D8A /* libjschelpers.a */,
-				3DAD3EAF1DF850E9000B6D8A /* libjschelpers.a */,
-				2DF0FFDF2056DD460020B375 /* libjsinspector.a */,
-				2DF0FFE12056DD460020B375 /* libjsinspector-tvOS.a */,
-				2DF0FFE32056DD460020B375 /* libthird-party.a */,
-				2DF0FFE52056DD460020B375 /* libthird-party.a */,
-				2DF0FFE72056DD460020B375 /* libdouble-conversion.a */,
-				2DF0FFE92056DD460020B375 /* libdouble-conversion.a */,
-				2DF0FFEB2056DD460020B375 /* libprivatedata.a */,
-				2DF0FFED2056DD460020B375 /* libprivatedata-tvOS.a */,
-			);
-			name = Products;
-			sourceTree = "<group>";
-		};
 		2D16E6871FA4F8E400B85C8A /* Frameworks */ = {
 			isa = PBXGroup;
 			children = (
+				ED297162215061F000B7C4FE /* JavaScriptCore.framework */,
+				ED2971642150620600B7C4FE /* JavaScriptCore.framework */,
 				2D16E6891FA4F8E400B85C8A /* libReact.a */,
+				DDB6B5B7B6A0D1ECB68CF0DD /* libPods-apolloschurchapp.a */,
+				38B9762ACA099D28C28DBB31 /* libPods-apolloschurchapp-tvOS.a */,
+				4F64CCA987A0419EB9C02236 /* libPods-apolloschurchapp-tvOSTests.a */,
+				560CBCD50AE7D282715D134E /* libPods-apolloschurchappTests.a */,
 			);
 			name = Frameworks;
 			sourceTree = "<group>";
 		};
-		4446111C6E474E038489E599 /* Resources */ = {
+		58D6A3E05A234CD89DC0BCE1 /* Resources */ = {
 			isa = PBXGroup;
 			children = (
-				4629759169AB4756B447B16A /* DroidSerif-Bold.ttf */,
-				D979B537509247C099CE3F24 /* DroidSerif-BoldItalic.ttf */,
-				F9CFD638A5414DFF961A8D11 /* DroidSerif-Italic.ttf */,
-				76E6AD5294554A5FA53DB415 /* DroidSerif-Regular.ttf */,
-				8E13C8F9AE60487C9ED95C21 /* Inter-UI-Black.otf */,
-				22246A6BC58E4CF09A22A4DF /* Inter-UI-BlackItalic.otf */,
-				FB25CB02F40D4CC39DDA3C74 /* Inter-UI-Bold.otf */,
-				32A467E2C3364ABDBB7BD0D1 /* Inter-UI-BoldItalic.otf */,
-				8CA3C04F98954FB2895CD36D /* Inter-UI-Italic.otf */,
-				9FD7D997F4F14C439AC699B3 /* Inter-UI-Medium.otf */,
-				F79112193F3548D284406ABF /* Inter-UI-MediumItalic.otf */,
-				10F42B11F27E467A8C71C280 /* Inter-UI-Regular.otf */,
+				E3B8A0AC5A6B4FABB3BDF6CB /* DroidSerif-Bold.ttf */,
+				A93F9D112A034626A9421759 /* DroidSerif-BoldItalic.ttf */,
+				ADC3D2DB245545ADB1CAB3FE /* DroidSerif-Italic.ttf */,
+				4E007B33EDD74B82AEF02C24 /* DroidSerif-Regular.ttf */,
+				EC21254B449443F99016EBFD /* Inter-UI-Black.otf */,
+				5A5A2BC2998547F4816B82E4 /* Inter-UI-BlackItalic.otf */,
+				D5157D807E164356ADE87867 /* Inter-UI-Bold.otf */,
+				2F5410F239E9477B9C2E86BD /* Inter-UI-BoldItalic.otf */,
+				63F6EE53A9B44B4388B5F1C2 /* Inter-UI-Italic.otf */,
+				DC74A378C1CC40E4B6192D7F /* Inter-UI-Medium.otf */,
+				A460FD7884FD4574A818005A /* Inter-UI-MediumItalic.otf */,
+				A613256118404CB691DE2C8E /* Inter-UI-Regular.otf */,
 			);
 			name = Resources;
 			sourceTree = "<group>";
 		};
-		5E91572E1DD0AC6500FF2AA8 /* Products */ = {
+		76EC01CF690166B3232686FE /* Pods */ = {
 			isa = PBXGroup;
 			children = (
-				5E9157331DD0AC6500FF2AA8 /* libRCTAnimation.a */,
-				5E9157351DD0AC6500FF2AA8 /* libRCTAnimation.a */,
-			);
-			name = Products;
+				54F271B8EB67A4997A2C7D96 /* Pods-apolloschurchapp.debug.xcconfig */,
+				1F8F5BC4745C8F22C695573D /* Pods-apolloschurchapp.release.xcconfig */,
+				745C835CA2F1E1EC2425152A /* Pods-apolloschurchapp-tvOS.debug.xcconfig */,
+				AE85030F59F256E90D5A4C2B /* Pods-apolloschurchapp-tvOS.release.xcconfig */,
+				D394E3064D75710E81C51EB0 /* Pods-apolloschurchapp-tvOSTests.debug.xcconfig */,
+				DA9745795726553C6FA9E7A8 /* Pods-apolloschurchapp-tvOSTests.release.xcconfig */,
+				AB44FC16DED929081698EDFD /* Pods-apolloschurchappTests.debug.xcconfig */,
+				E98AC9782C338F13632EF710 /* Pods-apolloschurchappTests.release.xcconfig */,
+			);
+			path = Pods;
 			sourceTree = "<group>";
 		};
-		78C398B11ACF4ADC00677621 /* Products */ = {
+		79CEBF9D223011FC00D8F685 /* Recovered References */ = {
 			isa = PBXGroup;
 			children = (
-				78C398B91ACF4ADC00677621 /* libRCTLinking.a */,
-				3DAD3E881DF850E9000B6D8A /* libRCTLinking-tvOS.a */,
-			);
-			name = Products;
-			sourceTree = "<group>";
-		};
-		7914344221260177006F13B7 /* Recovered References */ = {
-			isa = PBXGroup;
-			children = (
-				71E6499CCC9D4DB2ADD365D8 /* libDBCustomTabs.a */,
-				60E52391C9744A46B3925A78 /* libBVLinearGradient.a */,
-				BF5A2B416EB74A44923FED7B /* libSafariViewManager.a */,
-				F08D1EBF0C2A4E6798AA8F36 /* libSplashScreen.a */,
-				CFAF46FBA8B44C7B8DCA7707 /* libRNSVG.a */,
-				FC8FFB7C37BB4499AEB6FA37 /* libRCTVideo.a */,
-				84716CBFF56347BA880A16C6 /* libRNSVG-tvOS.a */,
-				3F58D699A37B432BA1C0F092 /* libRNImagePicker.a */,
-				14D838A2FAE743C7B1DA5E31 /* libRNDeviceInfo.a */,
-				A574C961754742F688E43151 /* libRNDeviceInfo-tvOS.a */,
-				643D51DCF8F14993B9AA6990 /* libMusicControl.a */,
-				67E66409EF8A4BC7A1B9E054 /* libMusicControl-tvOS.a */,
+				0D480D95FC7F4569B8B934E3 /* libRCTOneSignal.a */,
 			);
 			name = "Recovered References";
 			sourceTree = "<group>";
 		};
-		791434682126017A006F13B7 /* Products */ = {
-			isa = PBXGroup;
-			children = (
-				7914348B2126017B006F13B7 /* libSafariViewManager.a */,
-			);
-			name = Products;
-			sourceTree = "<group>";
-		};
-		7914346A2126017A006F13B7 /* Products */ = {
-			isa = PBXGroup;
-			children = (
-				791434822126017B006F13B7 /* libDBCustomTabs.a */,
-			);
-			name = Products;
-			sourceTree = "<group>";
-		};
-		7914346C2126017A006F13B7 /* Products */ = {
-			isa = PBXGroup;
-			children = (
-				7914348E2126017B006F13B7 /* libSplashScreen.a */,
-			);
-			name = Products;
-			sourceTree = "<group>";
-		};
-		7914346E2126017A006F13B7 /* Products */ = {
-			isa = PBXGroup;
-			children = (
-				791434772126017B006F13B7 /* libBVLinearGradient.a */,
-				791434792126017B006F13B7 /* libBVLinearGradient.a */,
-			);
-			name = Products;
-			sourceTree = "<group>";
-		};
-		791434702126017A006F13B7 /* Products */ = {
-			isa = PBXGroup;
-			children = (
-				791434862126017B006F13B7 /* libRNSVG.a */,
-				791434882126017B006F13B7 /* libRNSVG-tvOS.a */,
-			);
-			name = Products;
-			sourceTree = "<group>";
-		};
-		791434722126017A006F13B7 /* Products */ = {
-			isa = PBXGroup;
-			children = (
-				7914347D2126017B006F13B7 /* libRCTVideo.a */,
-				7914347F2126017B006F13B7 /* libRCTVideo.a */,
-			);
-			name = Products;
-			sourceTree = "<group>";
-		};
-		796F252E212CAD5D00C6935E /* Products */ = {
-			isa = PBXGroup;
-			children = (
-				796F2533212CAD5D00C6935E /* libRNDeviceInfo.a */,
-				796F2535212CAD5D00C6935E /* libRNDeviceInfo-tvOS.a */,
-			);
-			name = Products;
-			sourceTree = "<group>";
-		};
-		797304142146322D00F6E05B /* Products */ = {
-			isa = PBXGroup;
-			children = (
-				797304192146322D00F6E05B /* libMusicControl.a */,
-				7973041B2146322D00F6E05B /* libMusicControl-tvOS.a */,
-			);
-			name = Products;
-			sourceTree = "<group>";
-		};
 		832341AE1AAA6A7D00B99B32 /* Libraries */ = {
 			isa = PBXGroup;
 			children = (
-				5E91572D1DD0AC6500FF2AA8 /* RCTAnimation.xcodeproj */,
-				146833FF1AC3E56700842450 /* React.xcodeproj */,
-				00C302A71ABCB8CE00DB3ED1 /* RCTActionSheet.xcodeproj */,
-				ADBDB91F1DFEBF0600ED6528 /* RCTBlob.xcodeproj */,
-				00C302B51ABCB90400DB3ED1 /* RCTGeolocation.xcodeproj */,
-				00C302BB1ABCB91800DB3ED1 /* RCTImage.xcodeproj */,
-				78C398B01ACF4ADC00677621 /* RCTLinking.xcodeproj */,
-				00C302D31ABCB9D200DB3ED1 /* RCTNetwork.xcodeproj */,
-				139105B61AF99BAD00B5F7CC /* RCTSettings.xcodeproj */,
-				832341B01AAA6A8300B99B32 /* RCTText.xcodeproj */,
-				00C302DF1ABCB9EE00DB3ED1 /* RCTVibration.xcodeproj */,
-				139FDEE61B06529A00C62182 /* RCTWebSocket.xcodeproj */,
-				6BAAC994942548609D0EEECA /* ReactNativeCustomTabs.xcodeproj */,
-				46704FC4FCEB45B6B9DD92BB /* BVLinearGradient.xcodeproj */,
-				6B6E5A404A4B4A34B18D7D34 /* SafariViewManager.xcodeproj */,
-				A64D00F181AE4927A4632B6E /* SplashScreen.xcodeproj */,
-				01441BF099BE44EE8BA8E390 /* RNSVG.xcodeproj */,
-				2F8741F0746D4C8A89970C4D /* RCTVideo.xcodeproj */,
-				3BD7DCDF7B194D7BB9BE3C6C /* RNImagePicker.xcodeproj */,
-				239ECFF08FA841B99DB1CAFA /* RNDeviceInfo.xcodeproj */,
-				4BD3C4E6742F4F6380640CA9 /* MusicControl.xcodeproj */,
 			);
 			name = Libraries;
 			sourceTree = "<group>";
 		};
-		832341B11AAA6A8300B99B32 /* Products */ = {
-			isa = PBXGroup;
-			children = (
-				832341B51AAA6A8300B99B32 /* libRCTText.a */,
-				3DAD3E941DF850E9000B6D8A /* libRCTText-tvOS.a */,
-			);
-			name = Products;
-			sourceTree = "<group>";
-		};
 		83CBB9F61A601CBA00E9B192 = {
 			isa = PBXGroup;
 			children = (
@@ -866,8 +239,9 @@
 				00E356EF1AD99517003FC87E /* apolloschurchappTests */,
 				83CBBA001A601CBA00E9B192 /* Products */,
 				2D16E6871FA4F8E400B85C8A /* Frameworks */,
-				4446111C6E474E038489E599 /* Resources */,
-				7914344221260177006F13B7 /* Recovered References */,
+				58D6A3E05A234CD89DC0BCE1 /* Resources */,
+				79CEBF9D223011FC00D8F685 /* Recovered References */,
+				76EC01CF690166B3232686FE /* Pods */,
 			);
 			indentWidth = 2;
 			sourceTree = "<group>";
@@ -885,23 +259,6 @@
 			name = Products;
 			sourceTree = "<group>";
 		};
-		ADBDB9201DFEBF0600ED6528 /* Products */ = {
-			isa = PBXGroup;
-			children = (
-				ADBDB9271DFEBF0700ED6528 /* libRCTBlob.a */,
-				2D16E6721FA4F8DC00B85C8A /* libRCTBlob-tvOS.a */,
-			);
-			name = Products;
-			sourceTree = "<group>";
-		};
-		BF99316D2138673B0077FD20 /* Products */ = {
-			isa = PBXGroup;
-			children = (
-				BF9931712138673B0077FD20 /* libRNImagePicker.a */,
-			);
-			name = Products;
-			sourceTree = "<group>";
-		};
 /* End PBXGroup section */
 
 /* Begin PBXNativeTarget section */
@@ -909,6 +266,7 @@
 			isa = PBXNativeTarget;
 			buildConfigurationList = 00E357021AD99517003FC87E /* Build configuration list for PBXNativeTarget "apolloschurchappTests" */;
 			buildPhases = (
+				2C62ED438C51D0F43EC7017B /* [CP] Check Pods Manifest.lock */,
 				00E356EA1AD99517003FC87E /* Sources */,
 				00E356EB1AD99517003FC87E /* Frameworks */,
 				00E356EC1AD99517003FC87E /* Resources */,
@@ -927,6 +285,7 @@
 			isa = PBXNativeTarget;
 			buildConfigurationList = 13B07F931A680F5B00A75B9A /* Build configuration list for PBXNativeTarget "apolloschurchapp" */;
 			buildPhases = (
+				DEEF24CE4F76789E5E8C369D /* [CP] Check Pods Manifest.lock */,
 				13B07F871A680F5B00A75B9A /* Sources */,
 				13B07F8C1A680F5B00A75B9A /* Frameworks */,
 				13B07F8E1A680F5B00A75B9A /* Resources */,
@@ -945,6 +304,7 @@
 			isa = PBXNativeTarget;
 			buildConfigurationList = 2D02E4BA1E0B4A5E006451C7 /* Build configuration list for PBXNativeTarget "apolloschurchapp-tvOS" */;
 			buildPhases = (
+				9C20354F160AAF86C8281F23 /* [CP] Check Pods Manifest.lock */,
 				2D02E4771E0B4A5D006451C7 /* Sources */,
 				2D02E4781E0B4A5D006451C7 /* Frameworks */,
 				2D02E4791E0B4A5D006451C7 /* Resources */,
@@ -963,6 +323,7 @@
 			isa = PBXNativeTarget;
 			buildConfigurationList = 2D02E4BB1E0B4A5E006451C7 /* Build configuration list for PBXNativeTarget "apolloschurchapp-tvOSTests" */;
 			buildPhases = (
+				A85CD736CDC3356677735901 /* [CP] Check Pods Manifest.lock */,
 				2D02E48C1E0B4A5D006451C7 /* Sources */,
 				2D02E48D1E0B4A5D006451C7 /* Frameworks */,
 				2D02E48E1E0B4A5D006451C7 /* Resources */,
@@ -983,7 +344,7 @@
 		83CBB9F71A601CBA00E9B192 /* Project object */ = {
 			isa = PBXProject;
 			attributes = {
-				LastUpgradeCheck = 610;
+				LastUpgradeCheck = 940;
 				ORGANIZATIONNAME = Facebook;
 				TargetAttributes = {
 					00E356ED1AD99517003FC87E = {
@@ -992,6 +353,7 @@
 					};
 					13B07F861A680F5B00A75B9A = {
 						DevelopmentTeam = 7TM8C6252Z;
+						ProvisioningStyle = Automatic;
 					};
 					2D02E47A1E0B4A5D006451C7 = {
 						CreatedOnToolsVersion = 8.2.1;
@@ -1009,98 +371,13 @@
 			developmentRegion = English;
 			hasScannedForEncodings = 0;
 			knownRegions = (
+				English,
 				en,
 				Base,
 			);
 			mainGroup = 83CBB9F61A601CBA00E9B192;
 			productRefGroup = 83CBBA001A601CBA00E9B192 /* Products */;
 			projectDirPath = "";
-			projectReferences = (
-				{
-					ProductGroup = 7914346E2126017A006F13B7 /* Products */;
-					ProjectRef = 46704FC4FCEB45B6B9DD92BB /* BVLinearGradient.xcodeproj */;
-				},
-				{
-					ProductGroup = 797304142146322D00F6E05B /* Products */;
-					ProjectRef = 4BD3C4E6742F4F6380640CA9 /* MusicControl.xcodeproj */;
-				},
-				{
-					ProductGroup = 00C302A81ABCB8CE00DB3ED1 /* Products */;
-					ProjectRef = 00C302A71ABCB8CE00DB3ED1 /* RCTActionSheet.xcodeproj */;
-				},
-				{
-					ProductGroup = 5E91572E1DD0AC6500FF2AA8 /* Products */;
-					ProjectRef = 5E91572D1DD0AC6500FF2AA8 /* RCTAnimation.xcodeproj */;
-				},
-				{
-					ProductGroup = ADBDB9201DFEBF0600ED6528 /* Products */;
-					ProjectRef = ADBDB91F1DFEBF0600ED6528 /* RCTBlob.xcodeproj */;
-				},
-				{
-					ProductGroup = 00C302B61ABCB90400DB3ED1 /* Products */;
-					ProjectRef = 00C302B51ABCB90400DB3ED1 /* RCTGeolocation.xcodeproj */;
-				},
-				{
-					ProductGroup = 00C302BC1ABCB91800DB3ED1 /* Products */;
-					ProjectRef = 00C302BB1ABCB91800DB3ED1 /* RCTImage.xcodeproj */;
-				},
-				{
-					ProductGroup = 78C398B11ACF4ADC00677621 /* Products */;
-					ProjectRef = 78C398B01ACF4ADC00677621 /* RCTLinking.xcodeproj */;
-				},
-				{
-					ProductGroup = 00C302D41ABCB9D200DB3ED1 /* Products */;
-					ProjectRef = 00C302D31ABCB9D200DB3ED1 /* RCTNetwork.xcodeproj */;
-				},
-				{
-					ProductGroup = 139105B71AF99BAD00B5F7CC /* Products */;
-					ProjectRef = 139105B61AF99BAD00B5F7CC /* RCTSettings.xcodeproj */;
-				},
-				{
-					ProductGroup = 832341B11AAA6A8300B99B32 /* Products */;
-					ProjectRef = 832341B01AAA6A8300B99B32 /* RCTText.xcodeproj */;
-				},
-				{
-					ProductGroup = 00C302E01ABCB9EE00DB3ED1 /* Products */;
-					ProjectRef = 00C302DF1ABCB9EE00DB3ED1 /* RCTVibration.xcodeproj */;
-				},
-				{
-					ProductGroup = 791434722126017A006F13B7 /* Products */;
-					ProjectRef = 2F8741F0746D4C8A89970C4D /* RCTVideo.xcodeproj */;
-				},
-				{
-					ProductGroup = 139FDEE71B06529A00C62182 /* Products */;
-					ProjectRef = 139FDEE61B06529A00C62182 /* RCTWebSocket.xcodeproj */;
-				},
-				{
-					ProductGroup = 146834001AC3E56700842450 /* Products */;
-					ProjectRef = 146833FF1AC3E56700842450 /* React.xcodeproj */;
-				},
-				{
-					ProductGroup = 7914346A2126017A006F13B7 /* Products */;
-					ProjectRef = 6BAAC994942548609D0EEECA /* ReactNativeCustomTabs.xcodeproj */;
-				},
-				{
-					ProductGroup = BF99316D2138673B0077FD20 /* Products */;
-					ProjectRef = 3BD7DCDF7B194D7BB9BE3C6C /* RNImagePicker.xcodeproj */;
-        },
-        {
-					ProductGroup = 796F252E212CAD5D00C6935E /* Products */;
-					ProjectRef = 239ECFF08FA841B99DB1CAFA /* RNDeviceInfo.xcodeproj */;
-				},
-				{
-					ProductGroup = 791434702126017A006F13B7 /* Products */;
-					ProjectRef = 01441BF099BE44EE8BA8E390 /* RNSVG.xcodeproj */;
-				},
-				{
-					ProductGroup = 791434682126017A006F13B7 /* Products */;
-					ProjectRef = 6B6E5A404A4B4A34B18D7D34 /* SafariViewManager.xcodeproj */;
-				},
-				{
-					ProductGroup = 7914346C2126017A006F13B7 /* Products */;
-					ProjectRef = A64D00F181AE4927A4632B6E /* SplashScreen.xcodeproj */;
-				},
-			);
 			projectRoot = "";
 			targets = (
 				13B07F861A680F5B00A75B9A /* apolloschurchapp */,
@@ -1111,366 +388,6 @@
 		};
 /* End PBXProject section */
 
-/* Begin PBXReferenceProxy section */
-		00C302AC1ABCB8CE00DB3ED1 /* libRCTActionSheet.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libRCTActionSheet.a;
-			remoteRef = 00C302AB1ABCB8CE00DB3ED1 /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		00C302BA1ABCB90400DB3ED1 /* libRCTGeolocation.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libRCTGeolocation.a;
-			remoteRef = 00C302B91ABCB90400DB3ED1 /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		00C302C01ABCB91800DB3ED1 /* libRCTImage.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libRCTImage.a;
-			remoteRef = 00C302BF1ABCB91800DB3ED1 /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		00C302DC1ABCB9D200DB3ED1 /* libRCTNetwork.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libRCTNetwork.a;
-			remoteRef = 00C302DB1ABCB9D200DB3ED1 /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		00C302E41ABCB9EE00DB3ED1 /* libRCTVibration.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libRCTVibration.a;
-			remoteRef = 00C302E31ABCB9EE00DB3ED1 /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		139105C11AF99BAD00B5F7CC /* libRCTSettings.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libRCTSettings.a;
-			remoteRef = 139105C01AF99BAD00B5F7CC /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		139FDEF41B06529B00C62182 /* libRCTWebSocket.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libRCTWebSocket.a;
-			remoteRef = 139FDEF31B06529B00C62182 /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		146834041AC3E56700842450 /* libReact.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libReact.a;
-			remoteRef = 146834031AC3E56700842450 /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		2D16E6721FA4F8DC00B85C8A /* libRCTBlob-tvOS.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = "libRCTBlob-tvOS.a";
-			remoteRef = 2D16E6711FA4F8DC00B85C8A /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		2D16E6841FA4F8DC00B85C8A /* libfishhook.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libfishhook.a;
-			remoteRef = 2D16E6831FA4F8DC00B85C8A /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		2D16E6861FA4F8DC00B85C8A /* libfishhook-tvOS.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = "libfishhook-tvOS.a";
-			remoteRef = 2D16E6851FA4F8DC00B85C8A /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		2DF0FFDF2056DD460020B375 /* libjsinspector.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libjsinspector.a;
-			remoteRef = 2DF0FFDE2056DD460020B375 /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		2DF0FFE12056DD460020B375 /* libjsinspector-tvOS.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = "libjsinspector-tvOS.a";
-			remoteRef = 2DF0FFE02056DD460020B375 /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		2DF0FFE32056DD460020B375 /* libthird-party.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = "libthird-party.a";
-			remoteRef = 2DF0FFE22056DD460020B375 /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		2DF0FFE52056DD460020B375 /* libthird-party.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = "libthird-party.a";
-			remoteRef = 2DF0FFE42056DD460020B375 /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		2DF0FFE72056DD460020B375 /* libdouble-conversion.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = "libdouble-conversion.a";
-			remoteRef = 2DF0FFE62056DD460020B375 /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		2DF0FFE92056DD460020B375 /* libdouble-conversion.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = "libdouble-conversion.a";
-			remoteRef = 2DF0FFE82056DD460020B375 /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		2DF0FFEB2056DD460020B375 /* libprivatedata.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libprivatedata.a;
-			remoteRef = 2DF0FFEA2056DD460020B375 /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		2DF0FFED2056DD460020B375 /* libprivatedata-tvOS.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = "libprivatedata-tvOS.a";
-			remoteRef = 2DF0FFEC2056DD460020B375 /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		3DAD3E841DF850E9000B6D8A /* libRCTImage-tvOS.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = "libRCTImage-tvOS.a";
-			remoteRef = 3DAD3E831DF850E9000B6D8A /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		3DAD3E881DF850E9000B6D8A /* libRCTLinking-tvOS.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = "libRCTLinking-tvOS.a";
-			remoteRef = 3DAD3E871DF850E9000B6D8A /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		3DAD3E8C1DF850E9000B6D8A /* libRCTNetwork-tvOS.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = "libRCTNetwork-tvOS.a";
-			remoteRef = 3DAD3E8B1DF850E9000B6D8A /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		3DAD3E901DF850E9000B6D8A /* libRCTSettings-tvOS.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = "libRCTSettings-tvOS.a";
-			remoteRef = 3DAD3E8F1DF850E9000B6D8A /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		3DAD3E941DF850E9000B6D8A /* libRCTText-tvOS.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = "libRCTText-tvOS.a";
-			remoteRef = 3DAD3E931DF850E9000B6D8A /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		3DAD3E991DF850E9000B6D8A /* libRCTWebSocket-tvOS.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = "libRCTWebSocket-tvOS.a";
-			remoteRef = 3DAD3E981DF850E9000B6D8A /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		3DAD3EA31DF850E9000B6D8A /* libReact.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libReact.a;
-			remoteRef = 3DAD3EA21DF850E9000B6D8A /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		3DAD3EA51DF850E9000B6D8A /* libyoga.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libyoga.a;
-			remoteRef = 3DAD3EA41DF850E9000B6D8A /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		3DAD3EA71DF850E9000B6D8A /* libyoga.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libyoga.a;
-			remoteRef = 3DAD3EA61DF850E9000B6D8A /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		3DAD3EA91DF850E9000B6D8A /* libcxxreact.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libcxxreact.a;
-			remoteRef = 3DAD3EA81DF850E9000B6D8A /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		3DAD3EAB1DF850E9000B6D8A /* libcxxreact.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libcxxreact.a;
-			remoteRef = 3DAD3EAA1DF850E9000B6D8A /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		3DAD3EAD1DF850E9000B6D8A /* libjschelpers.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libjschelpers.a;
-			remoteRef = 3DAD3EAC1DF850E9000B6D8A /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		3DAD3EAF1DF850E9000B6D8A /* libjschelpers.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libjschelpers.a;
-			remoteRef = 3DAD3EAE1DF850E9000B6D8A /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		5E9157331DD0AC6500FF2AA8 /* libRCTAnimation.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libRCTAnimation.a;
-			remoteRef = 5E9157321DD0AC6500FF2AA8 /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		5E9157351DD0AC6500FF2AA8 /* libRCTAnimation.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libRCTAnimation.a;
-			remoteRef = 5E9157341DD0AC6500FF2AA8 /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		78C398B91ACF4ADC00677621 /* libRCTLinking.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libRCTLinking.a;
-			remoteRef = 78C398B81ACF4ADC00677621 /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		791434772126017B006F13B7 /* libBVLinearGradient.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libBVLinearGradient.a;
-			remoteRef = 791434762126017B006F13B7 /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		791434792126017B006F13B7 /* libBVLinearGradient.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libBVLinearGradient.a;
-			remoteRef = 791434782126017B006F13B7 /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		7914347D2126017B006F13B7 /* libRCTVideo.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libRCTVideo.a;
-			remoteRef = 7914347C2126017B006F13B7 /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		7914347F2126017B006F13B7 /* libRCTVideo.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libRCTVideo.a;
-			remoteRef = 7914347E2126017B006F13B7 /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		791434822126017B006F13B7 /* libDBCustomTabs.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libDBCustomTabs.a;
-			remoteRef = 791434812126017B006F13B7 /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		791434862126017B006F13B7 /* libRNSVG.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libRNSVG.a;
-			remoteRef = 791434852126017B006F13B7 /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		791434882126017B006F13B7 /* libRNSVG-tvOS.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = "libRNSVG-tvOS.a";
-			remoteRef = 791434872126017B006F13B7 /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		7914348B2126017B006F13B7 /* libSafariViewManager.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libSafariViewManager.a;
-			remoteRef = 7914348A2126017B006F13B7 /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		7914348E2126017B006F13B7 /* libSplashScreen.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libSplashScreen.a;
-			remoteRef = 7914348D2126017B006F13B7 /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		796F2533212CAD5D00C6935E /* libRNDeviceInfo.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libRNDeviceInfo.a;
-			remoteRef = 796F2532212CAD5D00C6935E /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		796F2535212CAD5D00C6935E /* libRNDeviceInfo-tvOS.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = "libRNDeviceInfo-tvOS.a";
-			remoteRef = 796F2534212CAD5D00C6935E /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		797304192146322D00F6E05B /* libMusicControl.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libMusicControl.a;
-			remoteRef = 797304182146322D00F6E05B /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		7973041B2146322D00F6E05B /* libMusicControl-tvOS.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = "libMusicControl-tvOS.a";
-			remoteRef = 7973041A2146322D00F6E05B /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		832341B51AAA6A8300B99B32 /* libRCTText.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libRCTText.a;
-			remoteRef = 832341B41AAA6A8300B99B32 /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		ADBDB9271DFEBF0700ED6528 /* libRCTBlob.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libRCTBlob.a;
-			remoteRef = ADBDB9261DFEBF0700ED6528 /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		BF9931712138673B0077FD20 /* libRNImagePicker.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libRNImagePicker.a;
-			remoteRef = BF9931702138673B0077FD20 /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-/* End PBXReferenceProxy section */
-
 /* Begin PBXResourcesBuildPhase section */
 		00E356EC1AD99517003FC87E /* Resources */ = {
 			isa = PBXResourcesBuildPhase;
@@ -1485,18 +402,18 @@
 			files = (
 				13B07FBF1A68108700A75B9A /* Images.xcassets in Resources */,
 				13B07FBD1A68108700A75B9A /* LaunchScreen.xib in Resources */,
-				C87CA8735EEB43C4A55CB285 /* DroidSerif-Bold.ttf in Resources */,
-				59D8DFA78CDF4642892CC142 /* DroidSerif-BoldItalic.ttf in Resources */,
-				9ACBD642B18D41C9BB1E4D9E /* DroidSerif-Italic.ttf in Resources */,
-				D5744BF3B41D4BC49F93CD68 /* DroidSerif-Regular.ttf in Resources */,
-				417027FD83CA4902AB4DB2B4 /* Inter-UI-Black.otf in Resources */,
-				6E4442FB39BE4F898DE4C454 /* Inter-UI-BlackItalic.otf in Resources */,
-				F8FAD93CCE5641A8B87611EA /* Inter-UI-Bold.otf in Resources */,
-				E374C61F2AAF41D3B615AB44 /* Inter-UI-BoldItalic.otf in Resources */,
-				5CA1D8E805684478B04ABB60 /* Inter-UI-Italic.otf in Resources */,
-				A173C226549E48B991AC5D98 /* Inter-UI-Medium.otf in Resources */,
-				0D4EDF6EBA274F9D93DDED76 /* Inter-UI-MediumItalic.otf in Resources */,
-				7D060CA312AB4E828CD60DDC /* Inter-UI-Regular.otf in Resources */,
+				08CE105F17284254AD54AF84 /* DroidSerif-Bold.ttf in Resources */,
+				B02F194A3F6A4FE29AC799B4 /* DroidSerif-BoldItalic.ttf in Resources */,
+				90743C40BF544F10A810C43C /* DroidSerif-Italic.ttf in Resources */,
+				93A2B0A9328A46A4B7DD5EFA /* DroidSerif-Regular.ttf in Resources */,
+				68D1351E80AA4A2C96288FD9 /* Inter-UI-Black.otf in Resources */,
+				578FFEC1D7D54C9B871A9E5B /* Inter-UI-BlackItalic.otf in Resources */,
+				7FBC6BC3CE8D48298F9850A9 /* Inter-UI-Bold.otf in Resources */,
+				894732A70B4740678E85B593 /* Inter-UI-BoldItalic.otf in Resources */,
+				01F091B02048490A8F9EF4FE /* Inter-UI-Italic.otf in Resources */,
+				1C48DCDE11AC47C48E918489 /* Inter-UI-Medium.otf in Resources */,
+				FCB3069DB5DD4170B2CAEFC4 /* Inter-UI-MediumItalic.otf in Resources */,
+				AB3BD177B8A14193A5EEDDF8 /* Inter-UI-Regular.otf in Resources */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
@@ -1532,6 +449,28 @@
 			shellPath = /bin/sh;
 			shellScript = "export NODE_BINARY=node\n../node_modules/react-native/scripts/react-native-xcode.sh";
 		};
+		2C62ED438C51D0F43EC7017B /* [CP] Check Pods Manifest.lock */ = {
+			isa = PBXShellScriptBuildPhase;
+			buildActionMask = 2147483647;
+			files = (
+			);
+			inputFileListPaths = (
+			);
+			inputPaths = (
+				"${PODS_PODFILE_DIR_PATH}/Podfile.lock",
+				"${PODS_ROOT}/Manifest.lock",
+			);
+			name = "[CP] Check Pods Manifest.lock";
+			outputFileListPaths = (
+			);
+			outputPaths = (
+				"$(DERIVED_FILE_DIR)/Pods-apolloschurchappTests-checkManifestLockResult.txt",
+			);
+			runOnlyForDeploymentPostprocessing = 0;
+			shellPath = /bin/sh;
+			shellScript = "diff \"${PODS_PODFILE_DIR_PATH}/Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null\nif [ $? != 0 ] ; then\n    # print error to STDERR\n    echo \"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\" >&2\n    exit 1\nfi\n# This output is used by Xcode 'outputs' to avoid re-running this script phase.\necho \"SUCCESS\" > \"${SCRIPT_OUTPUT_FILE_0}\"\n";
+			showEnvVarsInLog = 0;
+		};
 		2D02E4CB1E0B4B27006451C7 /* Bundle React Native Code And Images */ = {
 			isa = PBXShellScriptBuildPhase;
 			buildActionMask = 2147483647;
@@ -1546,6 +485,72 @@
 			shellPath = /bin/sh;
 			shellScript = "export NODE_BINARY=node\n../node_modules/react-native/scripts/react-native-xcode.sh";
 		};
+		9C20354F160AAF86C8281F23 /* [CP] Check Pods Manifest.lock */ = {
+			isa = PBXShellScriptBuildPhase;
+			buildActionMask = 2147483647;
+			files = (
+			);
+			inputFileListPaths = (
+			);
+			inputPaths = (
+				"${PODS_PODFILE_DIR_PATH}/Podfile.lock",
+				"${PODS_ROOT}/Manifest.lock",
+			);
+			name = "[CP] Check Pods Manifest.lock";
+			outputFileListPaths = (
+			);
+			outputPaths = (
+				"$(DERIVED_FILE_DIR)/Pods-apolloschurchapp-tvOS-checkManifestLockResult.txt",
+			);
+			runOnlyForDeploymentPostprocessing = 0;
+			shellPath = /bin/sh;
+			shellScript = "diff \"${PODS_PODFILE_DIR_PATH}/Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null\nif [ $? != 0 ] ; then\n    # print error to STDERR\n    echo \"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\" >&2\n    exit 1\nfi\n# This output is used by Xcode 'outputs' to avoid re-running this script phase.\necho \"SUCCESS\" > \"${SCRIPT_OUTPUT_FILE_0}\"\n";
+			showEnvVarsInLog = 0;
+		};
+		A85CD736CDC3356677735901 /* [CP] Check Pods Manifest.lock */ = {
+			isa = PBXShellScriptBuildPhase;
+			buildActionMask = 2147483647;
+			files = (
+			);
+			inputFileListPaths = (
+			);
+			inputPaths = (
+				"${PODS_PODFILE_DIR_PATH}/Podfile.lock",
+				"${PODS_ROOT}/Manifest.lock",
+			);
+			name = "[CP] Check Pods Manifest.lock";
+			outputFileListPaths = (
+			);
+			outputPaths = (
+				"$(DERIVED_FILE_DIR)/Pods-apolloschurchapp-tvOSTests-checkManifestLockResult.txt",
+			);
+			runOnlyForDeploymentPostprocessing = 0;
+			shellPath = /bin/sh;
+			shellScript = "diff \"${PODS_PODFILE_DIR_PATH}/Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null\nif [ $? != 0 ] ; then\n    # print error to STDERR\n    echo \"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\" >&2\n    exit 1\nfi\n# This output is used by Xcode 'outputs' to avoid re-running this script phase.\necho \"SUCCESS\" > \"${SCRIPT_OUTPUT_FILE_0}\"\n";
+			showEnvVarsInLog = 0;
+		};
+		DEEF24CE4F76789E5E8C369D /* [CP] Check Pods Manifest.lock */ = {
+			isa = PBXShellScriptBuildPhase;
+			buildActionMask = 2147483647;
+			files = (
+			);
+			inputFileListPaths = (
+			);
+			inputPaths = (
+				"${PODS_PODFILE_DIR_PATH}/Podfile.lock",
+				"${PODS_ROOT}/Manifest.lock",
+			);
+			name = "[CP] Check Pods Manifest.lock";
+			outputFileListPaths = (
+			);
+			outputPaths = (
+				"$(DERIVED_FILE_DIR)/Pods-apolloschurchapp-checkManifestLockResult.txt",
+			);
+			runOnlyForDeploymentPostprocessing = 0;
+			shellPath = /bin/sh;
+			shellScript = "diff \"${PODS_PODFILE_DIR_PATH}/Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null\nif [ $? != 0 ] ; then\n    # print error to STDERR\n    echo \"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\" >&2\n    exit 1\nfi\n# This output is used by Xcode 'outputs' to avoid re-running this script phase.\necho \"SUCCESS\" > \"${SCRIPT_OUTPUT_FILE_0}\"\n";
+			showEnvVarsInLog = 0;
+		};
 /* End PBXShellScriptBuildPhase section */
 
 /* Begin PBXSourcesBuildPhase section */
@@ -1613,6 +618,7 @@
 /* Begin XCBuildConfiguration section */
 		00E356F61AD99517003FC87E /* Debug */ = {
 			isa = XCBuildConfiguration;
+			baseConfigurationReference = AB44FC16DED929081698EDFD /* Pods-apolloschurchappTests.debug.xcconfig */;
 			buildSettings = {
 				BUNDLE_LOADER = "$(TEST_HOST)";
 				GCC_PREPROCESSOR_DEFINITIONS = (
@@ -1621,37 +627,17 @@
 				);
 				HEADER_SEARCH_PATHS = (
 					"$(inherited)",
-					"$(SRCROOT)/../node_modules/react-native-custom-tabs/ios/ReactNativeCustomTabs",
-					"$(SRCROOT)/../node_modules/react-native-linear-gradient/BVLinearGradient",
-					"$(SRCROOT)/../node_modules/react-native-safari-view",
-					"$(SRCROOT)/../node_modules/react-native-splash-screen/ios",
-					"$(SRCROOT)/../node_modules/react-native-svg/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-video/ios",
-					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
-					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
-					"$(SRCROOT)/../node_modules/react-native-music-control/ios",
 				);
 				INFOPLIST_FILE = apolloschurchappTests/Info.plist;
 				IPHONEOS_DEPLOYMENT_TARGET = 9.0;
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @loader_path/Frameworks";
-				LIBRARY_SEARCH_PATHS = (
-					"$(inherited)",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-				);
+				LIBRARY_SEARCH_PATHS = "$(inherited)";
 				OTHER_LDFLAGS = (
 					"-ObjC",
 					"-lc++",
 				);
+				PRODUCT_BUNDLE_IDENTIFIER = "org.reactjs.native.example.$(PRODUCT_NAME:rfc1034identifier)";
 				PRODUCT_NAME = "$(TARGET_NAME)";
 				TEST_HOST = "$(BUILT_PRODUCTS_DIR)/apolloschurchapp.app/apolloschurchapp";
 			};
@@ -1659,42 +645,23 @@
 		};
 		00E356F71AD99517003FC87E /* Release */ = {
 			isa = XCBuildConfiguration;
+			baseConfigurationReference = E98AC9782C338F13632EF710 /* Pods-apolloschurchappTests.release.xcconfig */;
 			buildSettings = {
 				BUNDLE_LOADER = "$(TEST_HOST)";
 				COPY_PHASE_STRIP = NO;
 				HEADER_SEARCH_PATHS = (
 					"$(inherited)",
-					"$(SRCROOT)/../node_modules/react-native-custom-tabs/ios/ReactNativeCustomTabs",
-					"$(SRCROOT)/../node_modules/react-native-linear-gradient/BVLinearGradient",
-					"$(SRCROOT)/../node_modules/react-native-safari-view",
-					"$(SRCROOT)/../node_modules/react-native-splash-screen/ios",
-					"$(SRCROOT)/../node_modules/react-native-svg/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-video/ios",
-					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
-					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
-					"$(SRCROOT)/../node_modules/react-native-music-control/ios",
 				);
 				INFOPLIST_FILE = apolloschurchappTests/Info.plist;
 				IPHONEOS_DEPLOYMENT_TARGET = 9.0;
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @loader_path/Frameworks";
-				LIBRARY_SEARCH_PATHS = (
-					"$(inherited)",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-				);
+				LIBRARY_SEARCH_PATHS = "$(inherited)";
 				OTHER_LDFLAGS = (
 					"-ObjC",
 					"-lc++",
 				);
+				PRODUCT_BUNDLE_IDENTIFIER = "org.reactjs.native.example.$(PRODUCT_NAME:rfc1034identifier)";
 				PRODUCT_NAME = "$(TARGET_NAME)";
 				TEST_HOST = "$(BUILT_PRODUCTS_DIR)/apolloschurchapp.app/apolloschurchapp";
 			};
@@ -1702,22 +669,15 @@
 		};
 		13B07F941A680F5B00A75B9A /* Debug */ = {
 			isa = XCBuildConfiguration;
+			baseConfigurationReference = 54F271B8EB67A4997A2C7D96 /* Pods-apolloschurchapp.debug.xcconfig */;
 			buildSettings = {
 				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
-				CURRENT_PROJECT_VERSION = 1;
+				CURRENT_PROJECT_VERSION = 18;
 				DEAD_CODE_STRIPPING = NO;
 				DEVELOPMENT_TEAM = 7TM8C6252Z;
 				HEADER_SEARCH_PATHS = (
 					"$(inherited)",
-					"$(SRCROOT)/../node_modules/react-native-custom-tabs/ios/ReactNativeCustomTabs",
-					"$(SRCROOT)/../node_modules/react-native-linear-gradient/BVLinearGradient",
-					"$(SRCROOT)/../node_modules/react-native-safari-view",
-					"$(SRCROOT)/../node_modules/react-native-splash-screen/ios",
-					"$(SRCROOT)/../node_modules/react-native-svg/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-video/ios",
-					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
-					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
-					"$(SRCROOT)/../node_modules/react-native-music-control/ios",
 				);
 				INFOPLIST_FILE = apolloschurchapp/Info.plist;
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
@@ -1726,28 +686,22 @@
 					"-ObjC",
 					"-lc++",
 				);
+				PRODUCT_BUNDLE_IDENTIFIER = "org.reactjs.native.example.$(PRODUCT_NAME:rfc1034identifier)";
 				PRODUCT_NAME = apolloschurchapp;
+				PROVISIONING_PROFILE_SPECIFIER = "";
 				VERSIONING_SYSTEM = "apple-generic";
 			};
 			name = Debug;
 		};
 		13B07F951A680F5B00A75B9A /* Release */ = {
 			isa = XCBuildConfiguration;
+			baseConfigurationReference = 1F8F5BC4745C8F22C695573D /* Pods-apolloschurchapp.release.xcconfig */;
 			buildSettings = {
 				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
-				CURRENT_PROJECT_VERSION = 1;
-				DEVELOPMENT_TEAM = 7TM8C6252Z;
+				CURRENT_PROJECT_VERSION = 18;
 				HEADER_SEARCH_PATHS = (
 					"$(inherited)",
-					"$(SRCROOT)/../node_modules/react-native-custom-tabs/ios/ReactNativeCustomTabs",
-					"$(SRCROOT)/../node_modules/react-native-linear-gradient/BVLinearGradient",
-					"$(SRCROOT)/../node_modules/react-native-safari-view",
-					"$(SRCROOT)/../node_modules/react-native-splash-screen/ios",
-					"$(SRCROOT)/../node_modules/react-native-svg/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-video/ios",
-					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
-					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
-					"$(SRCROOT)/../node_modules/react-native-music-control/ios",
 				);
 				INFOPLIST_FILE = apolloschurchapp/Info.plist;
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
@@ -1756,13 +710,16 @@
 					"-ObjC",
 					"-lc++",
 				);
+				PRODUCT_BUNDLE_IDENTIFIER = "org.reactjs.native.example.$(PRODUCT_NAME:rfc1034identifier)";
 				PRODUCT_NAME = apolloschurchapp;
+				PROVISIONING_PROFILE_SPECIFIER = "";
 				VERSIONING_SYSTEM = "apple-generic";
 			};
 			name = Release;
 		};
 		2D02E4971E0B4A5E006451C7 /* Debug */ = {
 			isa = XCBuildConfiguration;
+			baseConfigurationReference = 745C835CA2F1E1EC2425152A /* Pods-apolloschurchapp-tvOS.debug.xcconfig */;
 			buildSettings = {
 				ASSETCATALOG_COMPILER_APPICON_NAME = "App Icon & Top Shelf Image";
 				ASSETCATALOG_COMPILER_LAUNCHIMAGE_NAME = LaunchImage;
@@ -1775,37 +732,16 @@
 				GCC_NO_COMMON_BLOCKS = YES;
 				HEADER_SEARCH_PATHS = (
 					"$(inherited)",
-					"$(SRCROOT)/../node_modules/react-native-custom-tabs/ios/ReactNativeCustomTabs",
-					"$(SRCROOT)/../node_modules/react-native-linear-gradient/BVLinearGradient",
-					"$(SRCROOT)/../node_modules/react-native-safari-view",
-					"$(SRCROOT)/../node_modules/react-native-splash-screen/ios",
-					"$(SRCROOT)/../node_modules/react-native-svg/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-video/ios",
-					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
-					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
-					"$(SRCROOT)/../node_modules/react-native-music-control/ios",
 				);
 				INFOPLIST_FILE = "apolloschurchapp-tvOS/Info.plist";
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
-				LIBRARY_SEARCH_PATHS = (
-					"$(inherited)",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-				);
+				LIBRARY_SEARCH_PATHS = "$(inherited)";
 				OTHER_LDFLAGS = (
 					"-ObjC",
 					"-lc++",
 				);
-				PRODUCT_BUNDLE_IDENTIFIER = "org.reactjs.native.apolloschurchapp-tvOS";
+				PRODUCT_BUNDLE_IDENTIFIER = "com.facebook.REACT.apolloschurchapp-tvOS";
 				PRODUCT_NAME = "$(TARGET_NAME)";
 				SDKROOT = appletvos;
 				TARGETED_DEVICE_FAMILY = 3;
@@ -1815,6 +751,7 @@
 		};
 		2D02E4981E0B4A5E006451C7 /* Release */ = {
 			isa = XCBuildConfiguration;
+			baseConfigurationReference = AE85030F59F256E90D5A4C2B /* Pods-apolloschurchapp-tvOS.release.xcconfig */;
 			buildSettings = {
 				ASSETCATALOG_COMPILER_APPICON_NAME = "App Icon & Top Shelf Image";
 				ASSETCATALOG_COMPILER_LAUNCHIMAGE_NAME = LaunchImage;
@@ -1827,37 +764,16 @@
 				GCC_NO_COMMON_BLOCKS = YES;
 				HEADER_SEARCH_PATHS = (
 					"$(inherited)",
-					"$(SRCROOT)/../node_modules/react-native-custom-tabs/ios/ReactNativeCustomTabs",
-					"$(SRCROOT)/../node_modules/react-native-linear-gradient/BVLinearGradient",
-					"$(SRCROOT)/../node_modules/react-native-safari-view",
-					"$(SRCROOT)/../node_modules/react-native-splash-screen/ios",
-					"$(SRCROOT)/../node_modules/react-native-svg/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-video/ios",
-					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
-					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
-					"$(SRCROOT)/../node_modules/react-native-music-control/ios",
 				);
 				INFOPLIST_FILE = "apolloschurchapp-tvOS/Info.plist";
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
-				LIBRARY_SEARCH_PATHS = (
-					"$(inherited)",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-				);
+				LIBRARY_SEARCH_PATHS = "$(inherited)";
 				OTHER_LDFLAGS = (
 					"-ObjC",
 					"-lc++",
 				);
-				PRODUCT_BUNDLE_IDENTIFIER = "org.reactjs.native.apolloschurchapp-tvOS";
+				PRODUCT_BUNDLE_IDENTIFIER = "com.facebook.REACT.apolloschurchapp-tvOS";
 				PRODUCT_NAME = "$(TARGET_NAME)";
 				SDKROOT = appletvos;
 				TARGETED_DEVICE_FAMILY = 3;
@@ -1867,6 +783,7 @@
 		};
 		2D02E4991E0B4A5E006451C7 /* Debug */ = {
 			isa = XCBuildConfiguration;
+			baseConfigurationReference = D394E3064D75710E81C51EB0 /* Pods-apolloschurchapp-tvOSTests.debug.xcconfig */;
 			buildSettings = {
 				BUNDLE_LOADER = "$(TEST_HOST)";
 				CLANG_ANALYZER_NONNULL = YES;
@@ -1878,37 +795,16 @@
 				GCC_NO_COMMON_BLOCKS = YES;
 				HEADER_SEARCH_PATHS = (
 					"$(inherited)",
-					"$(SRCROOT)/../node_modules/react-native-custom-tabs/ios/ReactNativeCustomTabs",
-					"$(SRCROOT)/../node_modules/react-native-linear-gradient/BVLinearGradient",
-					"$(SRCROOT)/../node_modules/react-native-safari-view",
-					"$(SRCROOT)/../node_modules/react-native-splash-screen/ios",
-					"$(SRCROOT)/../node_modules/react-native-svg/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-video/ios",
-					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
-					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
-					"$(SRCROOT)/../node_modules/react-native-music-control/ios",
 				);
 				INFOPLIST_FILE = "apolloschurchapp-tvOSTests/Info.plist";
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @loader_path/Frameworks";
-				LIBRARY_SEARCH_PATHS = (
-					"$(inherited)",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-				);
+				LIBRARY_SEARCH_PATHS = "$(inherited)";
 				OTHER_LDFLAGS = (
 					"-ObjC",
 					"-lc++",
 				);
-				PRODUCT_BUNDLE_IDENTIFIER = "org.reactjs.native.apolloschurchapp-tvOSTests";
+				PRODUCT_BUNDLE_IDENTIFIER = "com.facebook.REACT.apolloschurchapp-tvOSTests";
 				PRODUCT_NAME = "$(TARGET_NAME)";
 				SDKROOT = appletvos;
 				TEST_HOST = "$(BUILT_PRODUCTS_DIR)/apolloschurchapp-tvOS.app/apolloschurchapp-tvOS";
@@ -1918,6 +814,7 @@
 		};
 		2D02E49A1E0B4A5E006451C7 /* Release */ = {
 			isa = XCBuildConfiguration;
+			baseConfigurationReference = DA9745795726553C6FA9E7A8 /* Pods-apolloschurchapp-tvOSTests.release.xcconfig */;
 			buildSettings = {
 				BUNDLE_LOADER = "$(TEST_HOST)";
 				CLANG_ANALYZER_NONNULL = YES;
@@ -1929,37 +826,16 @@
 				GCC_NO_COMMON_BLOCKS = YES;
 				HEADER_SEARCH_PATHS = (
 					"$(inherited)",
-					"$(SRCROOT)/../node_modules/react-native-custom-tabs/ios/ReactNativeCustomTabs",
-					"$(SRCROOT)/../node_modules/react-native-linear-gradient/BVLinearGradient",
-					"$(SRCROOT)/../node_modules/react-native-safari-view",
-					"$(SRCROOT)/../node_modules/react-native-splash-screen/ios",
-					"$(SRCROOT)/../node_modules/react-native-svg/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-video/ios",
-					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
-					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
-					"$(SRCROOT)/../node_modules/react-native-music-control/ios",
 				);
 				INFOPLIST_FILE = "apolloschurchapp-tvOSTests/Info.plist";
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @loader_path/Frameworks";
-				LIBRARY_SEARCH_PATHS = (
-					"$(inherited)",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-				);
+				LIBRARY_SEARCH_PATHS = "$(inherited)";
 				OTHER_LDFLAGS = (
 					"-ObjC",
 					"-lc++",
 				);
-				PRODUCT_BUNDLE_IDENTIFIER = "org.reactjs.native.apolloschurchapp-tvOSTests";
+				PRODUCT_BUNDLE_IDENTIFIER = "com.facebook.REACT.apolloschurchapp-tvOSTests";
 				PRODUCT_NAME = "$(TARGET_NAME)";
 				SDKROOT = appletvos;
 				TEST_HOST = "$(BUILT_PRODUCTS_DIR)/apolloschurchapp-tvOS.app/apolloschurchapp-tvOS";
@@ -1975,20 +851,32 @@
 				CLANG_CXX_LIBRARY = "libc++";
 				CLANG_ENABLE_MODULES = YES;
 				CLANG_ENABLE_OBJC_ARC = YES;
+				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
 				CLANG_WARN_BOOL_CONVERSION = YES;
+				CLANG_WARN_COMMA = YES;
 				CLANG_WARN_CONSTANT_CONVERSION = YES;
+				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
 				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
 				CLANG_WARN_EMPTY_BODY = YES;
 				CLANG_WARN_ENUM_CONVERSION = YES;
+				CLANG_WARN_INFINITE_RECURSION = YES;
 				CLANG_WARN_INT_CONVERSION = YES;
+				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
+				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
+				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
 				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
+				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
+				CLANG_WARN_STRICT_PROTOTYPES = YES;
+				CLANG_WARN_SUSPICIOUS_MOVE = YES;
 				CLANG_WARN_UNREACHABLE_CODE = YES;
 				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
 				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "iPhone Developer";
 				COPY_PHASE_STRIP = NO;
 				ENABLE_STRICT_OBJC_MSGSEND = YES;
+				ENABLE_TESTABILITY = YES;
 				GCC_C_LANGUAGE_STANDARD = gnu99;
 				GCC_DYNAMIC_NO_PIC = NO;
+				GCC_NO_COMMON_BLOCKS = YES;
 				GCC_OPTIMIZATION_LEVEL = 0;
 				GCC_PREPROCESSOR_DEFINITIONS = (
 					"DEBUG=1",
@@ -2016,13 +904,23 @@
 				CLANG_CXX_LIBRARY = "libc++";
 				CLANG_ENABLE_MODULES = YES;
 				CLANG_ENABLE_OBJC_ARC = YES;
+				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
 				CLANG_WARN_BOOL_CONVERSION = YES;
+				CLANG_WARN_COMMA = YES;
 				CLANG_WARN_CONSTANT_CONVERSION = YES;
+				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
 				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
 				CLANG_WARN_EMPTY_BODY = YES;
 				CLANG_WARN_ENUM_CONVERSION = YES;
+				CLANG_WARN_INFINITE_RECURSION = YES;
 				CLANG_WARN_INT_CONVERSION = YES;
+				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
+				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
+				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
 				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
+				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
+				CLANG_WARN_STRICT_PROTOTYPES = YES;
+				CLANG_WARN_SUSPICIOUS_MOVE = YES;
 				CLANG_WARN_UNREACHABLE_CODE = YES;
 				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
 				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "iPhone Developer";
@@ -2030,6 +928,7 @@
 				ENABLE_NS_ASSERTIONS = NO;
 				ENABLE_STRICT_OBJC_MSGSEND = YES;
 				GCC_C_LANGUAGE_STANDARD = gnu99;
+				GCC_NO_COMMON_BLOCKS = YES;
 				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
 				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
 				GCC_WARN_UNDECLARED_SELECTOR = YES;
diff --git a/apolloschurchapp/ios/apolloschurchapp.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist b/apolloschurchapp/ios/apolloschurchapp.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist
new file mode 100644
index 0000000..18d9810
--- /dev/null
+++ b/apolloschurchapp/ios/apolloschurchapp.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
+<plist version="1.0">
+<dict>
+	<key>IDEDidComputeMac32BitWarning</key>
+	<true/>
+</dict>
+</plist>
diff --git a/apolloschurchapp/ios/apolloschurchapp.xcodeproj/xcshareddata/xcschemes/apolloschurchapp.xcscheme b/apolloschurchapp/ios/apolloschurchapp.xcworkspace/xcshareddata/xcschemes/apolloschurchapp.xcscheme
similarity index 99%
rename from apolloschurchapp/ios/apolloschurchapp.xcodeproj/xcshareddata/xcschemes/apolloschurchapp.xcscheme
rename to apolloschurchapp/ios/apolloschurchapp.xcworkspace/xcshareddata/xcschemes/apolloschurchapp.xcscheme
index 37bdc76..8fd35ce 100644
--- a/apolloschurchapp/ios/apolloschurchapp.xcodeproj/xcshareddata/xcschemes/apolloschurchapp.xcscheme
+++ b/apolloschurchapp/ios/apolloschurchapp.xcworkspace/xcshareddata/xcschemes/apolloschurchapp.xcscheme
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <Scheme
-   LastUpgradeVersion = "0620"
+   LastUpgradeVersion = "0940"
    version = "1.3">
    <BuildAction
       parallelizeBuildables = "NO"
diff --git a/apolloschurchapp/ios/apolloschurchapp.xcodeproj/xcshareddata/xcschemes/apolloschurchapp-tvOS.xcscheme b/apolloschurchapp/ios/apolloschurchapp.xcworkspace/xcshareddata/xcschemes/apolloschurchappprod.xcscheme
similarity index 71%
rename from apolloschurchapp/ios/apolloschurchapp.xcodeproj/xcshareddata/xcschemes/apolloschurchapp-tvOS.xcscheme
rename to apolloschurchapp/ios/apolloschurchapp.xcworkspace/xcshareddata/xcschemes/apolloschurchappprod.xcscheme
index d6df8e6..cb89197 100644
--- a/apolloschurchapp/ios/apolloschurchapp.xcodeproj/xcshareddata/xcschemes/apolloschurchapp-tvOS.xcscheme
+++ b/apolloschurchapp/ios/apolloschurchapp.xcworkspace/xcshareddata/xcschemes/apolloschurchappprod.xcscheme
@@ -1,10 +1,19 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <Scheme
-   LastUpgradeVersion = "0820"
+   LastUpgradeVersion = "0940"
    version = "1.3">
    <BuildAction
       parallelizeBuildables = "NO"
       buildImplicitDependencies = "YES">
+      <PreActions>
+         <ExecutionAction
+            ActionType = "Xcode.IDEStandardExecutionActionsCore.ExecutionActionType.ShellScriptAction">
+            <ActionContent
+               title = "Run Script"
+               scriptText = "echo &quot;.env.production&quot; &gt; /tmp/envfile&#10;">
+            </ActionContent>
+         </ExecutionAction>
+      </PreActions>
       <BuildActionEntries>
          <BuildActionEntry
             buildForTesting = "YES"
@@ -14,9 +23,9 @@
             buildForAnalyzing = "YES">
             <BuildableReference
                BuildableIdentifier = "primary"
-               BlueprintIdentifier = "2D2A28121D9B038B00D4039D"
+               BlueprintIdentifier = "83CBBA2D1A601D0E00E9B192"
                BuildableName = "libReact.a"
-               BlueprintName = "React-tvOS"
+               BlueprintName = "React"
                ReferencedContainer = "container:../node_modules/react-native/React/React.xcodeproj">
             </BuildableReference>
          </BuildActionEntry>
@@ -28,9 +37,9 @@
             buildForAnalyzing = "YES">
             <BuildableReference
                BuildableIdentifier = "primary"
-               BlueprintIdentifier = "2D02E47A1E0B4A5D006451C7"
-               BuildableName = "apolloschurchapp-tvOS.app"
-               BlueprintName = "apolloschurchapp-tvOS"
+               BlueprintIdentifier = "13B07F861A680F5B00A75B9A"
+               BuildableName = "apolloschurchapp.app"
+               BlueprintName = "apolloschurchapp"
                ReferencedContainer = "container:apolloschurchapp.xcodeproj">
             </BuildableReference>
          </BuildActionEntry>
@@ -42,9 +51,9 @@
             buildForAnalyzing = "YES">
             <BuildableReference
                BuildableIdentifier = "primary"
-               BlueprintIdentifier = "2D02E48F1E0B4A5D006451C7"
-               BuildableName = "apolloschurchapp-tvOSTests.xctest"
-               BlueprintName = "apolloschurchapp-tvOSTests"
+               BlueprintIdentifier = "00E356ED1AD99517003FC87E"
+               BuildableName = "apolloschurchappTests.xctest"
+               BlueprintName = "apolloschurchappTests"
                ReferencedContainer = "container:apolloschurchapp.xcodeproj">
             </BuildableReference>
          </BuildActionEntry>
@@ -60,9 +69,9 @@
             skipped = "NO">
             <BuildableReference
                BuildableIdentifier = "primary"
-               BlueprintIdentifier = "2D02E48F1E0B4A5D006451C7"
-               BuildableName = "apolloschurchapp-tvOSTests.xctest"
-               BlueprintName = "apolloschurchapp-tvOSTests"
+               BlueprintIdentifier = "00E356ED1AD99517003FC87E"
+               BuildableName = "apolloschurchappTests.xctest"
+               BlueprintName = "apolloschurchappTests"
                ReferencedContainer = "container:apolloschurchapp.xcodeproj">
             </BuildableReference>
          </TestableReference>
@@ -70,9 +79,9 @@
       <MacroExpansion>
          <BuildableReference
             BuildableIdentifier = "primary"
-            BlueprintIdentifier = "2D02E47A1E0B4A5D006451C7"
-            BuildableName = "apolloschurchapp-tvOS.app"
-            BlueprintName = "apolloschurchapp-tvOS"
+            BlueprintIdentifier = "13B07F861A680F5B00A75B9A"
+            BuildableName = "apolloschurchapp.app"
+            BlueprintName = "apolloschurchapp"
             ReferencedContainer = "container:apolloschurchapp.xcodeproj">
          </BuildableReference>
       </MacroExpansion>
@@ -80,7 +89,7 @@
       </AdditionalOptions>
    </TestAction>
    <LaunchAction
-      buildConfiguration = "Debug"
+      buildConfiguration = "Release"
       selectedDebuggerIdentifier = "Xcode.DebuggerFoundation.Debugger.LLDB"
       selectedLauncherIdentifier = "Xcode.DebuggerFoundation.Launcher.LLDB"
       launchStyle = "0"
@@ -93,9 +102,9 @@
          runnableDebuggingMode = "0">
          <BuildableReference
             BuildableIdentifier = "primary"
-            BlueprintIdentifier = "2D02E47A1E0B4A5D006451C7"
-            BuildableName = "apolloschurchapp-tvOS.app"
-            BlueprintName = "apolloschurchapp-tvOS"
+            BlueprintIdentifier = "13B07F861A680F5B00A75B9A"
+            BuildableName = "apolloschurchapp.app"
+            BlueprintName = "apolloschurchapp"
             ReferencedContainer = "container:apolloschurchapp.xcodeproj">
          </BuildableReference>
       </BuildableProductRunnable>
@@ -112,9 +121,9 @@
          runnableDebuggingMode = "0">
          <BuildableReference
             BuildableIdentifier = "primary"
-            BlueprintIdentifier = "2D02E47A1E0B4A5D006451C7"
-            BuildableName = "apolloschurchapp-tvOS.app"
-            BlueprintName = "apolloschurchapp-tvOS"
+            BlueprintIdentifier = "13B07F861A680F5B00A75B9A"
+            BuildableName = "apolloschurchapp.app"
+            BlueprintName = "apolloschurchapp"
             ReferencedContainer = "container:apolloschurchapp.xcodeproj">
          </BuildableReference>
       </BuildableProductRunnable>
diff --git a/apolloschurchapp/ios/apolloschurchapp/AppDelegate.h b/apolloschurchapp/ios/apolloschurchapp/AppDelegate.h
index d4f2580..2726d5e 100644
--- a/apolloschurchapp/ios/apolloschurchapp/AppDelegate.h
+++ b/apolloschurchapp/ios/apolloschurchapp/AppDelegate.h
@@ -1,13 +1,14 @@
 /**
- * Copyright (c) 2015-present, Facebook, Inc.
+ * Copyright (c) Facebook, Inc. and its affiliates.
  *
  * This source code is licensed under the MIT license found in the
  * LICENSE file in the root directory of this source tree.
  */
 
+#import <React/RCTBridgeDelegate.h>
 #import <UIKit/UIKit.h>
 
-@interface AppDelegate : UIResponder <UIApplicationDelegate>
+@interface AppDelegate : UIResponder <UIApplicationDelegate, RCTBridgeDelegate>
 
 @property (nonatomic, strong) UIWindow *window;
 
diff --git a/apolloschurchapp/ios/apolloschurchapp/AppDelegate.m b/apolloschurchapp/ios/apolloschurchapp/AppDelegate.m
index 9df5510..b9f7b95 100644
--- a/apolloschurchapp/ios/apolloschurchapp/AppDelegate.m
+++ b/apolloschurchapp/ios/apolloschurchapp/AppDelegate.m
@@ -1,5 +1,5 @@
 /**
- * Copyright (c) 2015-present, Facebook, Inc.
+ * Copyright (c) Facebook, Inc. and its affiliates.
  *
  * This source code is licensed under the MIT license found in the
  * LICENSE file in the root directory of this source tree.
@@ -7,22 +7,41 @@
 
 #import "AppDelegate.h"
 
+
+#import <React/RCTBridge.h>
 #import <React/RCTBundleURLProvider.h>
 #import <React/RCTRootView.h>
 #import "RNSplashScreen.h"
+#import <React/RCTLinkingManager.h>
 
 @implementation AppDelegate
 
+#import <React/RCTLinkingManager.h>
+
+- (BOOL)application:(UIApplication *)application
+   openURL:(NSURL *)url
+   options:(NSDictionary<UIApplicationOpenURLOptionsKey,id> *)options
+{
+  return [RCTLinkingManager application:application openURL:url options:options];
+}
+
+// Only if your app is using [Universal Links](https://developer.apple.com/library/prerelease/ios/documentation/General/Conceptual/AppSearch/UniversalLinks.html).
+- (BOOL)application:(UIApplication *)application continueUserActivity:(NSUserActivity *)userActivity
+ restorationHandler:(void (^)(NSArray * _Nullable))restorationHandler
+{
+  return [RCTLinkingManager application:application
+                   continueUserActivity:userActivity
+                     restorationHandler:restorationHandler];
+}
+
 - (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions
 {
-  NSURL *jsCodeLocation;
 
-  jsCodeLocation = [[RCTBundleURLProvider sharedSettings] jsBundleURLForBundleRoot:@"index" fallbackResource:nil];
+  RCTBridge *bridge = [[RCTBridge alloc] initWithDelegate:self launchOptions:launchOptions];
+  RCTRootView *rootView = [[RCTRootView alloc] initWithBridge:bridge
+                                                   moduleName:@"apolloschurchapp"
+                                            initialProperties:nil];
 
-  RCTRootView *rootView = [[RCTRootView alloc] initWithBundleURL:jsCodeLocation
-                                                      moduleName:@"apolloschurchapp"
-                                               initialProperties:nil
-                                                   launchOptions:launchOptions];
   rootView.backgroundColor = [[UIColor alloc] initWithRed:1.0f green:1.0f blue:1.0f alpha:1];
 
   self.window = [[UIWindow alloc] initWithFrame:[UIScreen mainScreen].bounds];
@@ -35,4 +54,13 @@ - (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(
   return YES;
 }
 
+- (NSURL *)sourceURLForBridge:(RCTBridge *)bridge
+{
+#if DEBUG
+  return [[RCTBundleURLProvider sharedSettings] jsBundleURLForBundleRoot:@"index" fallbackResource:nil];
+#else
+  return [[NSBundle mainBundle] URLForResource:@"main" withExtension:@"jsbundle"];
+#endif
+}
+
 @end
diff --git a/apolloschurchapp/ios/apolloschurchapp/Base.lproj/LaunchScreen.xib b/apolloschurchapp/ios/apolloschurchapp/Base.lproj/LaunchScreen.xib
index ce50ff1..4ca705c 100644
--- a/apolloschurchapp/ios/apolloschurchapp/Base.lproj/LaunchScreen.xib
+++ b/apolloschurchapp/ios/apolloschurchapp/Base.lproj/LaunchScreen.xib
@@ -1,11 +1,11 @@
 <?xml version="1.0" encoding="UTF-8"?>
-<document type="com.apple.InterfaceBuilder3.CocoaTouch.XIB" version="3.0" toolsVersion="14113" targetRuntime="iOS.CocoaTouch" propertyAccessControl="none" useAutolayout="YES" launchScreen="YES" useTraitCollections="YES" colorMatched="YES">
+<document type="com.apple.InterfaceBuilder3.CocoaTouch.XIB" version="3.0" toolsVersion="14490.70" targetRuntime="iOS.CocoaTouch" propertyAccessControl="none" useAutolayout="YES" launchScreen="YES" useTraitCollections="YES" colorMatched="YES">
     <device id="retina5_5" orientation="portrait">
         <adaptation id="fullscreen"/>
     </device>
     <dependencies>
         <deployment identifier="iOS"/>
-        <plugIn identifier="com.apple.InterfaceBuilder.IBCocoaTouchPlugin" version="14088"/>
+        <plugIn identifier="com.apple.InterfaceBuilder.IBCocoaTouchPlugin" version="14490.49"/>
         <capability name="documents saved in the Xcode 8 format" minToolsVersion="8.0"/>
     </dependencies>
     <objects>
@@ -15,18 +15,22 @@
             <rect key="frame" x="0.0" y="0.0" width="414" height="736"/>
             <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
             <subviews>
+                <imageView clipsSubviews="YES" userInteractionEnabled="NO" contentMode="scaleToFill" horizontalHuggingPriority="251" verticalHuggingPriority="251" fixedFrame="YES" image="splash_bg" translatesAutoresizingMaskIntoConstraints="NO" id="iGM-E3-lqn">
+                    <rect key="frame" x="-12" y="-10" width="437" height="758"/>
+                    <autoresizingMask key="autoresizingMask" flexibleMinX="YES" widthSizable="YES" flexibleMaxX="YES" flexibleMinY="YES" heightSizable="YES" flexibleMaxY="YES"/>
+                </imageView>
                 <imageView userInteractionEnabled="NO" contentMode="scaleAspectFit" horizontalHuggingPriority="251" verticalHuggingPriority="251" fixedFrame="YES" image="splash-icon" translatesAutoresizingMaskIntoConstraints="NO" id="6Je-Yv-1Zj">
                     <rect key="frame" x="157" y="288" width="100" height="100"/>
                     <autoresizingMask key="autoresizingMask" flexibleMinX="YES" widthSizable="YES" flexibleMaxX="YES" flexibleMinY="YES" heightSizable="YES" flexibleMaxY="YES"/>
                 </imageView>
             </subviews>
-            <color key="backgroundColor" red="0.0" green="0.40392156862745099" blue="0.42745098039215684" alpha="1" colorSpace="custom" customColorSpace="sRGB"/>
             <nil key="simulatedStatusBarMetrics"/>
             <modalPageSheetSimulatedSizeMetrics key="simulatedDestinationMetrics"/>
-            <point key="canvasLocation" x="546" y="454"/>
+            <point key="canvasLocation" x="544.92753623188412" y="453.26086956521743"/>
         </view>
     </objects>
     <resources>
         <image name="splash-icon" width="94" height="99"/>
+        <image name="splash_bg" width="721" height="721"/>
     </resources>
 </document>
diff --git a/apolloschurchapp/ios/apolloschurchapp/Images.xcassets/splash_bg.imageset/Contents.json b/apolloschurchapp/ios/apolloschurchapp/Images.xcassets/splash_bg.imageset/Contents.json
new file mode 100644
index 0000000..8939b14
--- /dev/null
+++ b/apolloschurchapp/ios/apolloschurchapp/Images.xcassets/splash_bg.imageset/Contents.json
@@ -0,0 +1,21 @@
+{
+  "images" : [
+    {
+      "idiom" : "universal",
+      "filename" : "splash_bg.png",
+      "scale" : "1x"
+    },
+    {
+      "idiom" : "universal",
+      "scale" : "2x"
+    },
+    {
+      "idiom" : "universal",
+      "scale" : "3x"
+    }
+  ],
+  "info" : {
+    "version" : 1,
+    "author" : "xcode"
+  }
+}
\ No newline at end of file
diff --git a/apolloschurchapp/ios/apolloschurchapp/Images.xcassets/splash_bg.imageset/splash_bg.png b/apolloschurchapp/ios/apolloschurchapp/Images.xcassets/splash_bg.imageset/splash_bg.png
new file mode 100644
index 0000000000000000000000000000000000000000..315d8e09ac4fd5f51176da24982baad2115fa027
GIT binary patch
literal 11471
zcmeAS@N?(olHy`uVBq!ia0y~yV7dsx9Be?5xhMa#GcYJHc)B=-RK&f#rYOYZDB^tZ
z=H*2eyj_=_M49$pT<`AhvTNUo(sMs$`WYCRSU3a}92yuJZ!=xbcd?(ho!L$Z#0N`w
zaPNsf-r*PD@CmAlk!f>-pzUN%uojS#E37>)ezCsrhiXtT;Fh>(JQHrLL+pW$b@2`V
zMzsTjWHjhTlg((B87(fLrQ>K(Ia*BsYueE&a<q8>Zf}h?4@R2@qs@cS=D}$5V6+!G
z+Jgqw1*1))(WcR8(`a<S4K^M*I@mZm&<Yw!9vwLu9XT0o9*j<`KxVE+Css!1<G|(N
zX!BsSc`({MK+L~8to{|vz`)Z5S_?2*U5-|lqt)eTQ(?5JFxpfYU9vU0Ty1m|WptS$
xWKrhmB+KX|3r!|j{weR`TWF71VC?vS+x%;O<pqA37~n!>22WQ%mvv4FO#m9H?QQ@7

literal 0
HcmV?d00001

diff --git a/apolloschurchapp/ios/apolloschurchapp/Info.plist b/apolloschurchapp/ios/apolloschurchapp/Info.plist
index 6d5e74e..6b04c55 100644
--- a/apolloschurchapp/ios/apolloschurchapp/Info.plist
+++ b/apolloschurchapp/ios/apolloschurchapp/Info.plist
@@ -9,7 +9,7 @@
 	<key>CFBundleExecutable</key>
 	<string>$(EXECUTABLE_NAME)</string>
 	<key>CFBundleIdentifier</key>
-	<string>org.reactjs.native.$(PRODUCT_NAME:rfc1034identifier)</string>
+	<string>$(PRODUCT_BUNDLE_IDENTIFIER)</string>
 	<key>CFBundleInfoDictionaryVersion</key>
 	<string>6.0</string>
 	<key>CFBundleName</key>
@@ -17,33 +17,54 @@
 	<key>CFBundlePackageType</key>
 	<string>APPL</string>
 	<key>CFBundleShortVersionString</key>
-	<string>0.4.0</string>
+	<string>1.3.0</string>
 	<key>CFBundleSignature</key>
 	<string>????</string>
+	<key>CFBundleURLTypes</key>
+	<array>
+		<dict>
+			<key>CFBundleURLSchemes</key>
+			<array>
+				<string>apolloschurchapp</string>
+			</array>
+		</dict>
+	</array>
 	<key>CFBundleVersion</key>
-	<string>1</string>
+	<string>25</string>
 	<key>ITSAppUsesNonExemptEncryption</key>
-	<false/>
+	<false />
 	<key>LSRequiresIPhoneOS</key>
-	<true/>
+	<true />
 	<key>NSAppTransportSecurity</key>
 	<dict>
+		<key>NSAllowsArbitraryLoads</key>
+		<true />
 		<key>NSExceptionDomains</key>
 		<dict>
 			<key>embed.wistia.com</key>
 			<dict>
 				<key>NSExceptionAllowsInsecureHTTPLoads</key>
-				<true/>
+				<true />
 			</dict>
 			<key>localhost</key>
 			<dict>
 				<key>NSExceptionAllowsInsecureHTTPLoads</key>
-				<true/>
+				<true />
 			</dict>
 		</dict>
 	</dict>
+	<key>NSCameraUsageDescription</key>
+	<string>$(PRODUCT_NAME) would like to use your camera (for uploading profile pictures)</string>
+	<key>NSLocationAlwaysUsageDescription</key>
+	<string>$(PRODUCT_NAME) would like to use your location for determining your closest campus</string>
 	<key>NSLocationWhenInUseUsageDescription</key>
-	<string/>
+	<string>$(PRODUCT_NAME) would like to use your location for determining your closest campus</string>
+	<key>NSMicrophoneUsageDescription</key>
+	<string>$(PRODUCT_NAME) would like to your microphone (for videos)</string>
+	<key>NSPhotoLibraryAddUsageDescription</key>
+	<string>$(PRODUCT_NAME) would like to save photos to your photo gallery (for uploading profile pictures)</string>
+	<key>NSPhotoLibraryUsageDescription</key>
+	<string>$(PRODUCT_NAME) would like access to your photo gallery (for uploading profile pictures)</string>
 	<key>UIAppFonts</key>
 	<array>
 		<string>DroidSerif-Bold.ttf</string>
@@ -59,10 +80,6 @@
 		<string>Inter-UI-MediumItalic.otf</string>
 		<string>Inter-UI-Regular.otf</string>
 	</array>
-	<key>UIBackgroundModes</key>
-	<array>
-		<string>audio</string>
-	</array>
 	<key>UILaunchStoryboardName</key>
 	<string>LaunchScreen</string>
 	<key>UIRequiredDeviceCapabilities</key>
@@ -78,14 +95,6 @@
 		<string>UIInterfaceOrientationLandscapeRight</string>
 	</array>
 	<key>UIViewControllerBasedStatusBarAppearance</key>
-	<false/>
-  <key>NSPhotoLibraryUsageDescription</key>
-  <string>$(PRODUCT_NAME) would like access to your photo gallery (for uploading profile pictures)</string>
-  <key>NSCameraUsageDescription</key>
-  <string>$(PRODUCT_NAME) would like to use your camera (for uploading profile pictures)</string>
-  <key>NSPhotoLibraryAddUsageDescription</key>
-  <string>$(PRODUCT_NAME) would like to save photos to your photo gallery (for uploading profile pictures)</string>
-  <key>NSMicrophoneUsageDescription</key>
-  <string>$(PRODUCT_NAME) would like to your microphone (for videos)</string>
+	<false />
 </dict>
 </plist>
diff --git a/apolloschurchapp/ios/apolloschurchapp/apolloschurchapp.entitlements b/apolloschurchapp/ios/apolloschurchapp/apolloschurchapp.entitlements
new file mode 100644
index 0000000..903def2
--- /dev/null
+++ b/apolloschurchapp/ios/apolloschurchapp/apolloschurchapp.entitlements
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
+<plist version="1.0">
+<dict>
+	<key>aps-environment</key>
+	<string>development</string>
+</dict>
+</plist>
diff --git a/apolloschurchapp/ios/apolloschurchapp/main.m b/apolloschurchapp/ios/apolloschurchapp/main.m
index c73e006..d9c4112 100644
--- a/apolloschurchapp/ios/apolloschurchapp/main.m
+++ b/apolloschurchapp/ios/apolloschurchapp/main.m
@@ -1,5 +1,5 @@
 /**
- * Copyright (c) 2015-present, Facebook, Inc.
+ * Copyright (c) Facebook, Inc. and its affiliates.
  *
  * This source code is licensed under the MIT license found in the
  * LICENSE file in the root directory of this source tree.
@@ -14,3 +14,4 @@ int main(int argc, char * argv[]) {
     return UIApplicationMain(argc, argv, nil, NSStringFromClass([AppDelegate class]));
   }
 }
+          
diff --git a/apolloschurchapp/ios/apolloschurchappTests/Info.plist b/apolloschurchapp/ios/apolloschurchappTests/Info.plist
index 3bbe4e6..32c67ad 100644
--- a/apolloschurchapp/ios/apolloschurchappTests/Info.plist
+++ b/apolloschurchapp/ios/apolloschurchappTests/Info.plist
@@ -7,7 +7,7 @@
 	<key>CFBundleExecutable</key>
 	<string>$(EXECUTABLE_NAME)</string>
 	<key>CFBundleIdentifier</key>
-	<string>org.reactjs.native.example.$(PRODUCT_NAME:rfc1034identifier)</string>
+	<string>$(PRODUCT_BUNDLE_IDENTIFIER)</string>
 	<key>CFBundleInfoDictionaryVersion</key>
 	<string>6.0</string>
 	<key>CFBundleName</key>
@@ -15,10 +15,10 @@
 	<key>CFBundlePackageType</key>
 	<string>BNDL</string>
 	<key>CFBundleShortVersionString</key>
-	<string>0.4.0</string>
+	<string>1.3.0</string>
 	<key>CFBundleSignature</key>
 	<string>????</string>
 	<key>CFBundleVersion</key>
-	<string>1</string>
+	<string>24</string>
 </dict>
 </plist>
diff --git a/apolloschurchapp/ios/apolloschurchappTests/apolloschurchappTests.m b/apolloschurchapp/ios/apolloschurchappTests/apolloschurchappTests.m
index 5b96cea..8b9d30b 100644
--- a/apolloschurchapp/ios/apolloschurchappTests/apolloschurchappTests.m
+++ b/apolloschurchapp/ios/apolloschurchappTests/apolloschurchappTests.m
@@ -1,5 +1,5 @@
 /**
- * Copyright (c) 2015-present, Facebook, Inc.
+ * Copyright (c) Facebook, Inc. and its affiliates.
  *
  * This source code is licensed under the MIT license found in the
  * LICENSE file in the root directory of this source tree.
diff --git a/apolloschurchapp/jest.setup.js b/apolloschurchapp/jest.setup.js
index 71e1e93..45d8211 100644
--- a/apolloschurchapp/jest.setup.js
+++ b/apolloschurchapp/jest.setup.js
@@ -1,28 +1,115 @@
-jest.mock('./src/client/index');
-jest.mock('react-native-custom-tabs', () => ({
-  CustomTabs: {
-    openURL: jest.fn(),
-  },
-}));
+import React from 'react';
+import { NativeModules } from 'react-native';
+import ApollosConfig from '@apollosproject/config';
+import FRAGMENTS from '@apollosproject/ui-fragments';
 
-jest.mock('react-native-safari-view', () => ({
-  isAvailable: jest.fn().mockImplementation(() => Promise.resolve(true)),
-  show: jest.fn(),
-}));
+ApollosConfig.loadJs({ FRAGMENTS });
+
+// We ran into an issue where SafeAreaView would break jest tests.
+jest.mock(
+  '../apollos-ui-kit/node_modules/react-native-safe-area-context/',
+  () => ({
+    SafeAreaConsumer: ({ children }) =>
+      children({ top: 0, bottom: 0, left: 0, right: 0 }),
+    SafeAreaProvider: ({ children }) => children,
+  })
+);
+
+jest.mock('react-navigation', () => {
+  const ActualNavigation = require.requireActual('react-navigation');
+  return {
+    ...ActualNavigation,
+    SafeAreaView: require.requireActual('SafeAreaView'),
+  };
+});
 
 jest.mock('react-native-music-control', () => ({
   enableBackgroundMode: jest.fn(),
   enableControl: jest.fn(),
   on: jest.fn(),
   setNowPlaying: jest.fn(),
+  STATE_PLAYING: false,
+  STATE_PAUSED: true,
+}));
+
+ApollosConfig.loadJs({
+  ONE_SIGNAL_KEY: 'doesntmatter',
+});
+
+jest.mock('Animated', () => {
+  const ActualAnimated = require.requireActual('Animated');
+  return {
+    ...ActualAnimated,
+    timing: (value, config) => ({
+      start: (callback) => {
+        value.setValue(config.toValue);
+        callback && callback();
+      },
+      stop: () => ({}),
+    }),
+    spring: (value, config) => ({
+      start: (callback) => {
+        value.setValue(config.toValue);
+        callback && callback();
+      },
+      stop: () => ({}),
+    }),
+  };
+});
+
+jest.mock('react-native-safari-view', () => ({
+  isAvailable: jest.fn().mockImplementation(() => Promise.resolve(true)),
+  show: jest.fn(),
 }));
 
 jest.mock('react-native-device-info', () => ({
-  getUniqueID: () => 'id-123',
+  getUniqueId: () => 'id-123',
   getSystemVersion: () => 'sys-version-123',
   getModel: () => 'ios',
   getVersion: () => 'version-123',
   getBuildNumber: () => 0,
 }));
 
+jest.mock('rn-fetch-blob', () => 'Fetch');
+jest.mock(
+  '@apollosproject/ui-passes/node_modules/rn-fetch-blob',
+  () => 'Fetch'
+);
+
+jest.mock('@apollosproject/ui-analytics', () => ({
+  track: () => '',
+  AnalyticsConsumer: ({ children }) => children({ test: jest.fn() }),
+  AnalyticsProvider: ({ children }) => children,
+  TrackEventWhenLoaded: () => null,
+  withTrackOnPress: (Component) => (props) => <Component {...props} />,
+}));
+
+jest.mock('@apollosproject/ui-notifications', () => ({
+  NotificationsProvider: ({ children }) => children,
+}));
+
+jest.mock('@apollosproject/ui-mapview', () => 'MapView');
+
+jest.mock('@apollosproject/ui-media-player', () => ({
+  MediaPlayerSpacer: ({ children }) => children,
+  MediaPlayer: () => 'MediaPlayer',
+  MediaPlayerProvider: ({ children }) => children,
+  playVideoMutation: 'mutation { playVideo }',
+  withTabBarMediaSpacer: () => ({ children }) => children,
+}));
+
 jest.mock('react-native-video', () => 'Video');
+
+jest.mock('NativeEventEmitter');
+
+jest.mock('DatePickerIOS', () => 'DatePicker');
+jest.mock('./src/client/index');
+
+NativeModules.RNGestureHandlerModule = {
+  attachGestureHandler: jest.fn(),
+  createGestureHandler: jest.fn(),
+  dropGestureHandler: jest.fn(),
+  updateGestureHandler: jest.fn(),
+  State: {},
+  Directions: {},
+};
diff --git a/apolloschurchapp/loadConfig.js b/apolloschurchapp/loadConfig.js
new file mode 100644
index 0000000..922e5d0
--- /dev/null
+++ b/apolloschurchapp/loadConfig.js
@@ -0,0 +1,4 @@
+import ApollosConfig from '@apollosproject/config';
+import FRAGMENTS from '@apollosproject/ui-fragments';
+
+ApollosConfig.loadJs({ FRAGMENTS });
diff --git a/apolloschurchapp/metro.config.js b/apolloschurchapp/metro.config.js
new file mode 100644
index 0000000..c0a0c95
--- /dev/null
+++ b/apolloschurchapp/metro.config.js
@@ -0,0 +1,107 @@
+/**
+ * Metro configuration for React Native
+ * https://github.com/facebook/react-native
+ *
+ * @format
+ */
+
+const path = require('path');
+const blacklist = require('metro-config/src/defaults/blacklist');
+
+const flatten = (array) =>
+  array.reduce((accum, curr) => curr.concat(accum), []);
+
+const localDeps = [
+  path.resolve('..', 'apollos-ui-connected'),
+  path.resolve('..', 'apollos-ui-kit'),
+  path.resolve('..', 'apollos-ui-passes'),
+  path.resolve('..', 'apollos-ui-auth'),
+  path.resolve('..', 'apollos-ui-htmlview'),
+  path.resolve('..', 'apollos-ui-mapview'),
+  path.resolve('..', 'apollos-ui-analytics'),
+  path.resolve('..', 'apollos-ui-storybook'),
+  path.resolve('..', 'apollos-ui-onboarding'),
+  path.resolve('..', 'apollos-ui-media-player'),
+  path.resolve('..', 'apollos-ui-scripture'),
+  path.resolve('..', 'apollos-ui-notifications'),
+  path.resolve('..', 'apollos-ui-fragments'),
+  path.resolve('..', 'apollos-config'),
+];
+
+const sharedNativeModules = [
+  'react-native-linear-gradient',
+  'react-native-safe-area-context',
+  'react-native-svg',
+  'react-native-onesignal',
+  'react-native-music-control',
+  'react-native-gesture-handler',
+  'react-native-video',
+  'react-native-video-controls',
+  'react-native-maps',
+  'react-native-config',
+  'react-native-modal-datetime-picker',
+  '@apollosproject/react-native-airplay-btn',
+  'react-navigation',
+];
+
+module.exports = {
+  resolver: {
+    extraNodeModules: {
+      'react-native': path.resolve('.', 'node_modules/react-native'),
+      ...sharedNativeModules.reduce(
+        (accum, curr) => ({
+          ...accum,
+          [curr]: path.resolve('.', `node_modules/${curr}`),
+        }),
+        {}
+      ),
+      'react-native-svg': path.resolve('.', 'node_modules/react-native-svg'),
+    },
+    blacklistRE: blacklist([
+      ...localDeps.map(
+        (depPath) => new RegExp(`${depPath}/node_modules/react-native/.*`)
+      ),
+      ...flatten(
+        localDeps.map((depPath) =>
+          sharedNativeModules.map(
+            (moduleName) =>
+              new RegExp(`${depPath}/node_modules/${moduleName}/.*`)
+          )
+        )
+      ),
+      ...sharedNativeModules.map(
+        (moduleName) =>
+          new RegExp(`${path.resolve(`../../node_modules/${moduleName}`)}/.*`)
+      ),
+      ...localDeps.map(
+        (depPath) => new RegExp(`${depPath}/node_modules/react-native-svg/.*`)
+      ),
+      ...localDeps.map(
+        (depPath) =>
+          new RegExp(`${depPath}/node_modules/.*/node_modules/react-native/.*`)
+      ),
+      new RegExp(
+        `${path.resolve('.', 'node_modules')}/.*/node_modules/react-native/.*`
+      ),
+      new RegExp(
+        `${path.resolve('..', '..', 'node_modules', 'react-native')}/.*`
+      ),
+      new RegExp(
+        `${path.resolve(
+          '..',
+          '..',
+          'node_modules'
+        )}/.*/node_modules/react-native/.*`
+      ),
+    ]),
+  },
+  watchFolders: [...localDeps, path.resolve('..', '..', 'node_modules')],
+  transformer: {
+    getTransformOptions: async () => ({
+      transform: {
+        experimentalImportSupport: false,
+        inlineRequires: false,
+      },
+    }),
+  },
+};
diff --git a/apolloschurchapp/package.json b/apolloschurchapp/package.json
index 8805fc0..1890d95 100644
--- a/apolloschurchapp/package.json
+++ b/apolloschurchapp/package.json
@@ -1,30 +1,22 @@
 {
   "name": "apolloschurchapp",
-  "version": "0.5.0",
+  "version": "1.3.0-beta.0",
   "private": true,
-  "workspaces": {
-    "nohoist": [
-      "*"
-    ]
-  },
   "devDependencies": {
-    "@storybook/addon-actions": "4.0.0-alpha.2",
-    "@storybook/addon-links": "4.0.0-alpha.2",
-    "@storybook/addons": "4.0.0-alpha.2",
-    "@storybook/react-native": "4.0.0-alpha.2",
-    "apollos-church-api": "link:../apollos-church-api",
-    "babel-preset-apollos": "link:../babel-preset-apollos",
-    "babel-preset-react-native": "5",
     "codecov": "3.0.2",
-    "get-yarn-workspaces": "1.0.2",
+    "get-dev-paths": "^0.1.0",
+    "graphql-import": "^0.7.1",
+    "jest": "^24.8.0",
     "jest-react-native": "18.0.0",
-    "nodemon": "1.17.5",
+    "jetifier": "^1.6.4",
+    "metro-react-native-babel-preset": "^0.56.0",
+    "nodemon": "1.18.7",
+    "prettier": "1.14.2",
     "prop-types": "15.6.1",
-    "react-dom": "16.3.1",
-    "react-native-dotenv": "0.2.0",
+    "react-dom": "16.6.3",
     "react-native-storybook-loader": "1.8.0",
     "react-native-version": "2.6.2",
-    "react-test-renderer": "16.4.1",
+    "react-test-renderer": "16.8.6",
     "waait": "1.0.2"
   },
   "engines": {
@@ -34,23 +26,27 @@
     "src"
   ],
   "scripts": {
-    "android": "react-native run-android",
+    "android": "SIM=\"$($HOME/Library/Android/sdk/emulator/emulator -list-avds | sed -n 1p)\" && $HOME/Library/Android/sdk/emulator/emulator -avd \"${SIM}\" & react-native run-android --appId com.apolloschurch.app",
     "codecov": "cat ./coverage/lcov.info | codecov",
     "fixlint": "eslint ./src --fix",
-    "ios": "react-native run-ios --simulator=\"iPhone X\"",
+    "ios": "react-native run-ios --simulator=\"iPhone 11\"",
+    "storybook:enable": "sed -i '' 's/STORYBOOK=false/STORYBOOK=true/g' .env",
+    "storybook:disable": "sed -i '' 's/STORYBOOK=true/STORYBOOK=false/g' .env",
+    "generate-stories": "rnstl --searchDir ./src --pattern **/*.stories.js",
     "lint": "eslint ./src --ext .js",
-    "postversion": "react-native-version --never-amend --android android/app/build.gradle --ios ios/",
-    "prestart": "node ./scripts/get-introspection-data.js",
+    "version": "node ../../scripts/update-apollos-version.js && git add apollos.json",
+    "postversion": "react-native-version --never-amend --never-increment-build --android android/app/build.gradle --ios ios/",
+    "prestart": "lerna run generate-stories & node ./scripts/get-introspection-data.js",
+    "postinstall": "jetify",
+    "pods": "(cd ios && bundle install && bundle exec pod install)",
     "start": "react-native start",
-    "storybook": "rnstl --searchDir ./storybook ./src --pattern \"**/*.stories.js\" && storybook start -p 7007 --root ../../",
-    "test": "jest",
-    "release": "standard-version --release-as minor"
+    "test": "TZ=UTC jest"
   },
   "jest": {
     "preset": "react-native",
     "collectCoverage": true,
     "transformIgnorePatterns": [
-      "node_modules/(?!((jest-)?react-native|rn-*|react-clone-referenced-element|react-navigation))"
+      "node_modules/(?!((jest-)?react-native|rn-*|react-clone-referenced-element|react-navigation|@react-navigation|@apollosproject))"
     ],
     "testMatch": [
       "<rootDir>/src/**/?(*.)(test|tests).{js,jsx,mjs}"
@@ -58,57 +54,78 @@
     "modulePaths": [
       "<rootDir>/src/"
     ],
+    "modulePathIgnorePatterns": [
+      "node_modules/.*/node_modules/react-native"
+    ],
     "setupFiles": [
       "./jest.setup.js"
-    ],
-    "transform": {
-      ".+\\.js$": "<rootDir>/node_modules/react-native/jest/preprocessor.js"
-    }
+    ]
   },
   "dependencies": {
-    "apollo-cache-inmemory": "1.2.2",
+    "@apollosproject/config": "^1.3.0-beta.0",
+    "@apollosproject/react-native-airplay-btn": "0.2.0",
+    "@apollosproject/ui-analytics": "^1.3.0-beta.0",
+    "@apollosproject/ui-auth": "^1.3.0-beta.0",
+    "@apollosproject/ui-fragments": "^1.3.0-beta.0",
+    "@apollosproject/ui-htmlview": "^1.3.0-beta.0",
+    "@apollosproject/ui-kit": "^1.3.0-beta.0",
+    "@apollosproject/ui-mapview": "^1.3.0-beta.0",
+    "@apollosproject/ui-media-player": "^1.3.0-beta.0",
+    "@apollosproject/ui-notifications": "^1.3.0-beta.0",
+    "@apollosproject/ui-onboarding": "^1.3.0-beta.0",
+    "@apollosproject/ui-passes": "^1.3.0-beta.0",
+    "@apollosproject/ui-scripture": "^1.3.0-beta.0",
+    "@apollosproject/ui-storybook": "^1.3.0-beta.0",
+    "@react-native-community/async-storage": "^1.5.1",
+    "@react-native-community/geolocation": "^2.0.2",
+    "apollo-cache-inmemory": "1.5.1",
     "apollo-cache-persist": "0.1.1",
-    "apollo-client": "2.3.2",
-    "apollo-link": "1.2.2",
-    "apollo-link-context": "1.0.8",
-    "apollo-link-http": "1.5.4",
-    "apollo-link-schema": "1.1.0",
-    "apollo-link-state": "0.4.1",
-    "apollo-upload-client": "^8.1.0",
+    "apollo-client": "2.5.1",
+    "apollo-link": "1.2.8",
+    "apollo-link-http": "1.5.11",
+    "apollo-link-schema": "1.1.6",
+    "apollo-upload-client": "9.0.0",
     "color": "3.0.0",
-    "entities": "1.1.1",
-    "formik": "0.11.11",
+    "dotenv": "^6.2.0",
+    "events": "^3.0.0",
+    "formik": "^1.5.2",
     "graphql": "0.13.2",
     "graphql-tag": "2.9.2",
     "graphql-tools": "3.1.1",
-    "htmlparser2": "3.9.2",
-    "lodash": "4.17.10",
-    "memoize-one": "^4.0.0",
+    "lodash": "^4.17.11",
+    "memoize-one": "4.0.0",
     "moment": "2.22.2",
-    "node-fetch": "^2.2.0",
-    "prettier": "^1.14.2",
-    "react": "16.4.1",
-    "react-apollo": "2.1.11",
-    "react-native": "0.56.0",
-    "react-native-custom-tabs": "0.1.7",
-    "react-native-device-info": "0.22.5",
-    "react-native-image-picker": "^0.26.10",
-    "react-native-keyboard-aware-scroll-view": "0.7.0",
-    "react-native-linear-gradient": "2.4.0",
-    "react-native-modal-datetime-picker": "6.0.0",
-    "react-native-music-control": "^0.7.3",
+    "node-fetch": "2.2.0",
+    "react": "16.8.6",
+    "react-apollo": "2.5.5",
+    "react-native": "0.60.5",
+    "react-native-config": "^0.11.7",
+    "react-native-device-info": "^4.0.1",
+    "react-native-geolocation-service": "^3.0.0",
+    "react-native-gesture-handler": "^1.3.0",
+    "react-native-image-picker": "0.28.0",
+    "react-native-inappbrowser-reborn": "^3.0.0",
+    "react-native-linear-gradient": "^2.5.4",
+    "react-native-maps": "0.26.1",
+    "react-native-modal-datetime-picker": "7.6.0",
+    "react-native-music-control": "0.10.5",
+    "react-native-onesignal": "3.3.2",
+    "react-native-passkit-wallet": "^0.1.4",
+    "react-native-permissions": "^2.0.5",
     "react-native-safari-view": "2.1.0",
-    "react-native-safe-area-view": "^0.9.0",
-    "react-native-splash-screen": "3.1.1",
-    "react-native-svg": "6.5.2",
-    "react-native-tab-view": "1.0.2",
-    "react-native-video": "3.2.0",
+    "react-native-safe-area-context": "^0.3.6",
+    "react-native-safe-area-view": "0.13.1",
+    "react-native-screens": "^1.0.0-alpha.23",
+    "react-native-splash-screen": "3.2.0",
+    "react-native-svg": "^9.4.0",
+    "react-native-video": "^5.0.0",
     "react-native-video-controls": "2.2.3",
-    "react-navigation": "2.11.2",
-    "recompose": "0.27.1",
-    "rn-placeholder": "1.2.0",
-    "stream": "0.0.2",
-    "yup": "0.26.2"
+    "react-native-webview": "^5.2.0",
+    "react-navigation": "^3.11.0",
+    "recompose": "^0.30.0",
+    "rn-fetch-blob": "^0.10.16",
+    "stream": "^0.0.2",
+    "yup": "0.26.6"
   },
   "rnpm": {
     "assets": [
diff --git a/apolloschurchapp/polyfill.js b/apolloschurchapp/polyfill.js
new file mode 100644
index 0000000..e2e1ede
--- /dev/null
+++ b/apolloschurchapp/polyfill.js
@@ -0,0 +1,10 @@
+// this can be removed when we upgrade to react-native 59
+
+// symbol polyfills
+global.Symbol = require('core-js/es6/symbol');
+require('core-js/fn/symbol/iterator');
+
+// collection fn polyfills
+require('core-js/fn/map');
+require('core-js/fn/set');
+require('core-js/fn/array/find');
diff --git a/apolloschurchapp/rn-cli.config.js b/apolloschurchapp/rn-cli.config.js
deleted file mode 100644
index 40501d8..0000000
--- a/apolloschurchapp/rn-cli.config.js
+++ /dev/null
@@ -1,77 +0,0 @@
-/**
- * This file is mainly copy-pasta scattered throughout the interwebs.
- * I'll try and leave comments to make it easier to understand what's going on,
- * but essentially this file is currently required to get react-native to play nice
- * with yarn workspaces.
- */
-const path = require('path');
-const fs = require('fs');
-const blacklist = require('metro/src/blacklist');
-const getWorkspaces = require('get-yarn-workspaces');
-
-/**
- * used to resolve node_modules that might be symlinked by yarn
- */
-function getNodeModulesForDirectory(rootPath) {
-  const nodeModulePath = path.join(rootPath, 'node_modules');
-  const folders = fs.readdirSync(nodeModulePath);
-  return folders.reduce((modules, folderName) => {
-    const folderPath = path.join(nodeModulePath, folderName);
-    if (folderName.startsWith('@')) {
-      const scopedModuleFolders = fs.readdirSync(folderPath);
-      const scopedModules = scopedModuleFolders.reduce(
-        (scopedModules, scopedFolderName) => {
-          scopedModules[
-            `${folderName}/${scopedFolderName}`
-          ] = maybeResolveSymlink(path.join(folderPath, scopedFolderName));
-          return scopedModules;
-        },
-        {}
-      );
-      return Object.assign({}, modules, scopedModules);
-    }
-    modules[folderName] = maybeResolveSymlink(folderPath);
-    return modules;
-  }, {});
-}
-
-function maybeResolveSymlink(maybeSymlinkPath) {
-  if (fs.lstatSync(maybeSymlinkPath).isSymbolicLink()) {
-    const resolved = path.resolve(
-      path.dirname(maybeSymlinkPath),
-      fs.readlinkSync(maybeSymlinkPath)
-    );
-    return resolved;
-  }
-  return maybeSymlinkPath;
-}
-
-const workspaces = getWorkspaces(path.resolve('.'));
-
-/**
- * Options used by Metro builder
- */
-module.exports = {
-  extraNodeModules: getNodeModulesForDirectory(path.resolve('.')),
-  getBlacklistRE() {
-    return blacklist(
-      workspaces.map(
-        (workspacePath) =>
-          `/${workspacePath.replace(
-            /\//g,
-            '[/\\\\]'
-          )}[/\\\\]node_modules[/\\\\]react-native[/\\\\].*/`
-      )
-    );
-  },
-  // I think this is the most important bit here - without this, a lot of modules aren't resolving
-  getProjectRoots() {
-    return [
-      // Keep your project directory.
-      path.resolve(path.resolve('.')),
-
-      // Include your forked package as a new root.
-      path.resolve('..', '..', 'node_modules'),
-    ].concat(workspaces);
-  },
-};
diff --git a/apolloschurchapp/scripts/get-introspection-data.js b/apolloschurchapp/scripts/get-introspection-data.js
index 8acfcf3..80ae562 100755
--- a/apolloschurchapp/scripts/get-introspection-data.js
+++ b/apolloschurchapp/scripts/get-introspection-data.js
@@ -1,11 +1,15 @@
 const fs = require('fs');
 const Path = require('path');
-
+require('dotenv/config');
 const fetch = require('node-fetch');
 
-(async () => {
+const attempts = 0;
+const maxAttempts = 3;
+const timeBetweenAttempts = 5 * 1000;
+
+const getIntrospectionData = async () => {
   try {
-    const query = await fetch(`https://apollos-church-api.now.sh/graphql`, {
+    const query = await fetch(process.env.APP_DATA_URL, {
       method: 'POST',
       headers: { 'Content-Type': 'application/json' },
       body: JSON.stringify({
@@ -36,7 +40,20 @@ const fetch = require('node-fetch');
       Path.resolve(__dirname, '../src/client/fragmentTypes.json'),
       JSON.stringify(data)
     );
+
+    console.log('Successfully wrote fragmentTypes!');
   } catch (e) {
-    throw new Error('Error writing fragmentTypes file', e);
+    if (attempts < maxAttempts) {
+      console.log(
+        `Error writing fragmentTypes (-api probably hasn't started yet). Trying again after wait. Attempt: ${attempts +
+          1} of ${maxAttempts}`
+      );
+      await new Promise((resolve) => setTimeout(resolve, timeBetweenAttempts)); // try again after waiting
+      getIntrospectionData();
+    } else {
+      // throw new Error('Error writing fragmentTypes file', e);
+    }
   }
-})();
+};
+
+getIntrospectionData();
diff --git a/apolloschurchapp/src/LandingScreen.js b/apolloschurchapp/src/LandingScreen.js
new file mode 100644
index 0000000..fa430a1
--- /dev/null
+++ b/apolloschurchapp/src/LandingScreen.js
@@ -0,0 +1,26 @@
+import React from 'react';
+import { styled, GradientOverlayImage } from '@apollosproject/ui-kit';
+
+import ApollosLandingScreen from './ui/LandingScreen';
+
+const FullScreenImage = styled({
+  resizeMode: 'cover',
+  position: 'absolute',
+})(GradientOverlayImage);
+
+const LandingScreen = ({ navigation }) => (
+  <ApollosLandingScreen
+    onPressPrimary={() => navigation.push('Auth')}
+    textColor={'white'}
+    BackgroundComponent={
+      <FullScreenImage source={'https://picsum.photos/375/812/?random'} />
+    }
+    primaryNavText={"Let's go!"}
+  />
+);
+
+LandingScreen.navigationOptions = {
+  header: null,
+};
+
+export default LandingScreen;
diff --git a/apolloschurchapp/src/NavigationService.js b/apolloschurchapp/src/NavigationService.js
new file mode 100644
index 0000000..bfc7d2b
--- /dev/null
+++ b/apolloschurchapp/src/NavigationService.js
@@ -0,0 +1,49 @@
+import { StackActions, NavigationActions } from 'react-navigation';
+
+let _navigator;
+
+const setTopLevelNavigator = (navigatorRef) => {
+  _navigator = navigatorRef;
+};
+
+const navigate = (routeName, params) => {
+  _navigator.dispatch(
+    NavigationActions.navigate({
+      routeName,
+      params,
+    })
+  );
+};
+
+const resetToAuth = () => {
+  _navigator.dispatch(
+    StackActions.reset({
+      index: 0,
+      key: null,
+      actions: [
+        NavigationActions.navigate({
+          routeName: 'Auth',
+          action: NavigationActions.navigate({
+            routeName: 'AuthSMSPhoneEntryConnected',
+          }),
+        }),
+      ],
+    })
+  );
+};
+
+const goBack = (from) => {
+  let key;
+  if (from) {
+    const route = _navigator.state.nav.routes.find((r) => r.routeName === from);
+    if (route) ({ key } = route);
+  }
+  _navigator.dispatch(NavigationActions.back({ key }));
+};
+
+export default {
+  setTopLevelNavigator,
+  navigate,
+  goBack,
+  resetToAuth,
+};
diff --git a/apolloschurchapp/src/Providers.js b/apolloschurchapp/src/Providers.js
index cf42144..b0056a4 100644
--- a/apolloschurchapp/src/Providers.js
+++ b/apolloschurchapp/src/Providers.js
@@ -1,7 +1,41 @@
-import { nest } from 'recompose';
+import React from 'react';
+import ApollosConfig from '@apollosproject/config';
+import { Providers } from '@apollosproject/ui-kit';
+import { AuthProvider } from '@apollosproject/ui-auth';
+import { AnalyticsProvider } from '@apollosproject/ui-analytics';
+import { MediaPlayerProvider } from '@apollosproject/ui-media-player';
+import { NotificationsProvider } from '@apollosproject/ui-notifications';
+import { LiveProvider } from '@apollosproject/ui-connected';
 
-import ClientProvider from 'apolloschurchapp/src/client';
-import { ThemeProvider } from 'apolloschurchapp/src/ui/theme';
-import { WebBrowserProvider } from 'apolloschurchapp/src/ui/WebBrowser';
+import NavigationService from './NavigationService';
+import ClientProvider from './client';
+import customTheme, { customIcons } from './theme';
 
-export default nest(ClientProvider, ThemeProvider, WebBrowserProvider);
+const AppProviders = (props) => (
+  <ClientProvider {...props}>
+    <NotificationsProvider
+      oneSignalKey={ApollosConfig.ONE_SIGNAL_KEY}
+      navigate={NavigationService.navigate}
+    >
+      <AuthProvider
+        navigateToAuth={() => NavigationService.navigate('Auth')}
+        navigate={NavigationService.navigate}
+        closeAuth={() => NavigationService.navigate('Onboarding')}
+      >
+        <MediaPlayerProvider>
+          <AnalyticsProvider>
+            <LiveProvider>
+              <Providers
+                themeInput={customTheme}
+                iconInput={customIcons}
+                {...props}
+              />
+            </LiveProvider>
+          </AnalyticsProvider>
+        </MediaPlayerProvider>
+      </AuthProvider>
+    </NotificationsProvider>
+  </ClientProvider>
+);
+
+export default AppProviders;
diff --git a/apolloschurchapp/src/index.test.js b/apolloschurchapp/src/__tests__/index.test.js
similarity index 87%
rename from apolloschurchapp/src/index.test.js
rename to apolloschurchapp/src/__tests__/index.test.js
index dcea081..92aedcb 100644
--- a/apolloschurchapp/src/index.test.js
+++ b/apolloschurchapp/src/__tests__/index.test.js
@@ -1,7 +1,7 @@
 import renderer from 'react-test-renderer';
 import React from 'react';
 
-import App from '.';
+import App from '../index';
 
 it('renders without crashing', () => {
   const rendered = renderer.create(<App />).toJSON();
diff --git a/apolloschurchapp/src/analytics/index.js b/apolloschurchapp/src/analytics/index.js
deleted file mode 100644
index 6b410b2..0000000
--- a/apolloschurchapp/src/analytics/index.js
+++ /dev/null
@@ -1,61 +0,0 @@
-import gql from 'graphql-tag';
-import DeviceInfo from 'react-native-device-info';
-import { Platform } from 'react-native';
-
-import { client } from '../client';
-
-const anonymousId = DeviceInfo.getUniqueID();
-
-const deviceInfo = {
-  platform: Platform.OS === 'ios' ? 'iOS' : 'Android',
-  deviceId: anonymousId,
-  deviceModel: DeviceInfo.getModel(),
-  osVersion: DeviceInfo.getSystemVersion(),
-  appVersion: DeviceInfo.getVersion(),
-};
-
-const trackMutation = gql`
-  mutation track($input: AnalyticsTrackInput!) {
-    trackEvent(input: $input) {
-      success
-    }
-  }
-`;
-
-const identifyMutation = gql`
-  mutation identify($input: AnalyticsIdentifyInput!) {
-    identifySelf(input: $input) {
-      success
-    }
-  }
-`;
-
-const propertiesToGqlInput = (props = []) =>
-  Object.keys(props).map((key) => ({
-    field: key,
-    value: props[key],
-  }));
-
-export const track = ({ eventName, properties }) =>
-  client.mutate({
-    mutation: trackMutation,
-    variables: {
-      input: {
-        anonymousId,
-        deviceInfo,
-        eventName,
-        properties: propertiesToGqlInput(properties),
-      },
-    },
-  });
-
-export const identify = () =>
-  client.mutate({
-    mutation: identifyMutation,
-    variables: {
-      input: {
-        anonymousId,
-        deviceInfo,
-      },
-    },
-  });
diff --git a/apolloschurchapp/src/auth/LoginButton.js b/apolloschurchapp/src/auth/LoginButton.js
deleted file mode 100644
index 30e8acb..0000000
--- a/apolloschurchapp/src/auth/LoginButton.js
+++ /dev/null
@@ -1,45 +0,0 @@
-import React, { PureComponent } from 'react';
-import { withNavigation } from 'react-navigation';
-import { Query, Mutation } from 'react-apollo';
-import PropTypes from 'prop-types';
-
-import { ButtonLink } from 'apolloschurchapp/src/ui/Button';
-import styled from 'apolloschurchapp/src/ui/styled';
-import ActivityIndicator from 'apolloschurchapp/src/ui/ActivityIndicator';
-
-import logout from './logout';
-import getLoginState from './getLoginState';
-
-const Button = styled(({ theme }) => ({
-  paddingHorizontal: theme.sizing.baseUnit,
-}))(ButtonLink);
-
-class LoginButton extends PureComponent {
-  static propTypes = {
-    navigation: PropTypes.shape({
-      push: PropTypes.func,
-    }),
-  };
-
-  handleLoginPress = () => this.props.navigation.push('Auth');
-
-  renderLogoutButton = () => (
-    <Mutation mutation={logout}>
-      {(handleLogout) => <Button onPress={() => handleLogout()}>Logout</Button>}
-    </Mutation>
-  );
-
-  render() {
-    return (
-      <Query query={getLoginState}>
-        {({ data: { isLoggedIn = false, loading } }) => {
-          if (loading) return <ActivityIndicator />;
-          if (isLoggedIn) return this.renderLogoutButton();
-          return <Button onPress={this.handleLoginPress}>Login</Button>;
-        }}
-      </Query>
-    );
-  }
-}
-
-export default withNavigation(LoginButton);
diff --git a/apolloschurchapp/src/auth/LoginButton.tests.js b/apolloschurchapp/src/auth/LoginButton.tests.js
deleted file mode 100644
index 364379e..0000000
--- a/apolloschurchapp/src/auth/LoginButton.tests.js
+++ /dev/null
@@ -1,49 +0,0 @@
-import React from 'react';
-import renderer from 'react-test-renderer';
-import wait from 'waait';
-
-import Providers from 'apolloschurchapp/src/Providers';
-
-import LoginButton from './LoginButton';
-import getLoginState from './getLoginState';
-
-describe('LoginButton component', () => {
-  it('renders a LoginButton when logged out', async () => {
-    const mock = {
-      request: {
-        query: getLoginState,
-      },
-      result: {
-        data: { isLoggedIn: null },
-      },
-    };
-
-    const navigation = { navigate: jest.fn() };
-    const tree = renderer.create(
-      <Providers mocks={[mock]}>
-        <LoginButton navigation={navigation} />
-      </Providers>
-    );
-    await wait(0); // wait for response from graphql
-    expect(tree).toMatchSnapshot();
-  });
-
-  it('renders a LogoutButton when logged in', async () => {
-    const mock = {
-      request: {
-        query: getLoginState,
-      },
-      result: {
-        data: { isLoggedIn: 'some-auth-token' },
-      },
-    };
-    const navigation = { navigate: jest.fn() };
-    const tree = renderer.create(
-      <Providers mocks={[mock]}>
-        <LoginButton navigation={navigation} />
-      </Providers>
-    );
-    await wait(0); // wait for response from graphql
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/auth/ProtectedAction.js b/apolloschurchapp/src/auth/ProtectedAction.js
deleted file mode 100644
index f38ae15..0000000
--- a/apolloschurchapp/src/auth/ProtectedAction.js
+++ /dev/null
@@ -1,66 +0,0 @@
-import React, { PureComponent } from 'react';
-import { Query } from 'react-apollo';
-import PropTypes from 'prop-types';
-import { withNavigation } from 'react-navigation';
-
-import getLoginState from './getLoginState';
-
-class ProtectedAction extends PureComponent {
-  queuedActionsToTriggerOnLogin = [];
-
-  static propTypes = {
-    children: PropTypes.func,
-    navigation: PropTypes.shape({
-      push: PropTypes.func,
-    }),
-    loading: PropTypes.bool,
-    isLoggedIn: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),
-  };
-
-  componentDidUpdate(oldProps) {
-    if (!oldProps.isLoggedIn && this.props.isLoggedIn) {
-      this.handleLogin();
-    }
-
-    if (
-      oldProps.loading &&
-      !this.props.loading &&
-      !this.props.isLoggedIn &&
-      this.queuedActionsToTriggerOnLogin.length
-    ) {
-      this.triggerLogin();
-    }
-  }
-
-  handleLogin = () => {
-    this.queuedActionsToTriggerOnLogin.forEach((action) => action());
-    this.queuedActionsToTriggerOnLogin = [];
-  };
-
-  triggerLogin = () => this.props.navigation.push('Auth');
-
-  protectedActionHandler = (action) => (...args) => {
-    if (this.props.isLoggedIn) {
-      action(...args);
-    } else {
-      this.queuedActionsToTriggerOnLogin.push(action.bind(this, ...args));
-      if (!this.props.loading) this.triggerLogin();
-    }
-  };
-
-  render() {
-    return typeof this.props.children === 'function'
-      ? this.props.children(this.protectedActionHandler)
-      : this.props.children;
-  }
-}
-
-const ProtectedActionWithQuery = (props) => (
-  <Query query={getLoginState}>
-    {({ data: { isLoggedIn = false } = {}, loading }) => (
-      <ProtectedAction isLoggedIn={isLoggedIn} loading={loading} {...props} />
-    )}
-  </Query>
-);
-
-export default withNavigation(ProtectedActionWithQuery);
diff --git a/apolloschurchapp/src/auth/getLoginState.js b/apolloschurchapp/src/auth/getLoginState.js
deleted file mode 100644
index da75449..0000000
--- a/apolloschurchapp/src/auth/getLoginState.js
+++ /dev/null
@@ -1,7 +0,0 @@
-import gql from 'graphql-tag';
-
-export default gql`
-  query {
-    isLoggedIn: authToken @client
-  }
-`;
diff --git a/apolloschurchapp/src/auth/handleLogin.js b/apolloschurchapp/src/auth/handleLogin.js
deleted file mode 100644
index 417dde0..0000000
--- a/apolloschurchapp/src/auth/handleLogin.js
+++ /dev/null
@@ -1,7 +0,0 @@
-import gql from 'graphql-tag';
-
-export default gql`
-  mutation handleLogin($authToken: String!) {
-    handleLogin(authToken: $authToken) @client
-  }
-`;
diff --git a/apolloschurchapp/src/auth/index.js b/apolloschurchapp/src/auth/index.js
deleted file mode 100644
index 55c6e08..0000000
--- a/apolloschurchapp/src/auth/index.js
+++ /dev/null
@@ -1,93 +0,0 @@
-import React, { PureComponent } from 'react';
-import PropTypes from 'prop-types';
-import { View, SafeAreaView } from 'react-native';
-
-import { withTheme } from 'apolloschurchapp/src/ui/theme';
-import FlexedView from 'apolloschurchapp/src/ui/FlexedView';
-import TabView, { SceneMap } from 'apolloschurchapp/src/ui/TabView';
-import { H1, H5 } from 'apolloschurchapp/src/ui/typography';
-import styled from 'apolloschurchapp/src/ui/styled';
-import Icon from 'apolloschurchapp/src/ui/Icon';
-import { ButtonLink } from 'apolloschurchapp/src/ui/Button';
-import { track } from 'apolloschurchapp/src/analytics';
-
-import LoginForm from './login';
-import SignUpForm from './signup';
-
-export LoginButton from './LoginButton';
-export ProtectedAction from './ProtectedAction';
-
-const Title = styled(({ theme }) => ({ color: theme.colors.primary }))(H1);
-
-const BrandIcon = withTheme(({ theme }) => ({
-  name: 'brand-icon',
-  size: theme.sizing.baseUnit * 2.25,
-  marginVertical: theme.sizing.baseUnit,
-  fill: theme.colors.primary,
-}))(Icon);
-
-const HeaderContainer = styled(({ theme }) => ({
-  backgroundColor: theme.colors.background.paper,
-}))(SafeAreaView);
-
-const Header = styled(({ theme }) => ({
-  paddingHorizontal: theme.sizing.baseUnit,
-  paddingBottom: theme.sizing.baseUnit * 1.5,
-}))(View);
-
-const CancelButton = styled(({ theme }) => ({
-  alignSelf: 'flex-end',
-  marginTop: theme.sizing.baseUnit * 0.75,
-  marginRight: theme.sizing.baseUnit,
-}))(ButtonLink);
-
-class Auth extends PureComponent {
-  static navigationOptions = {
-    title: 'Login',
-  };
-
-  tabRoutes = [
-    { title: 'Sign In', key: 'login' },
-    { title: 'Register', key: 'signup' },
-  ];
-
-  static propTypes = {
-    navigation: PropTypes.shape({
-      goBack: PropTypes.func,
-    }),
-  };
-
-  handleFinish = () => {
-    // trigger the auth modal to close
-    track({ eventName: 'UserLogin' });
-    this.props.navigation.goBack();
-  };
-
-  renderLogin = () => <LoginForm onLogin={this.handleFinish} />;
-
-  renderSignup = () => <SignUpForm onSignup={this.handleFinish} />;
-
-  render() {
-    return (
-      <FlexedView>
-        <HeaderContainer>
-          <CancelButton onPress={this.handleFinish}>Cancel</CancelButton>
-          <Header>
-            <BrandIcon />
-            <Title>Welcome!</Title>
-            <H5>Please sign in to continue</H5>
-          </Header>
-        </HeaderContainer>
-        <TabView
-          routes={this.tabRoutes}
-          renderScene={SceneMap({
-            login: this.renderLogin,
-            signup: this.renderSignup,
-          })}
-        />
-      </FlexedView>
-    );
-  }
-}
-
-export default Auth;
diff --git a/apolloschurchapp/src/auth/login/Form.js b/apolloschurchapp/src/auth/login/Form.js
deleted file mode 100644
index aa0ed89..0000000
--- a/apolloschurchapp/src/auth/login/Form.js
+++ /dev/null
@@ -1,100 +0,0 @@
-import React, { PureComponent } from 'react';
-import { View, SafeAreaView } from 'react-native';
-import PropTypes from 'prop-types';
-import { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';
-
-import { WebBrowserConsumer } from 'apolloschurchapp/src/ui/WebBrowser';
-import FlexedView from 'apolloschurchapp/src/ui/FlexedView';
-import PaddedView from 'apolloschurchapp/src/ui/PaddedView';
-import { Text as TextInput } from 'apolloschurchapp/src/ui/inputs';
-import Button, { ButtonLink } from 'apolloschurchapp/src/ui/Button';
-import styled from 'apolloschurchapp/src/ui/styled';
-
-const BottomSafeAreaView = styled({
-  position: 'absolute',
-  bottom: 0,
-  left: 0,
-  right: 0,
-})(SafeAreaView);
-
-class Form extends PureComponent {
-  static propTypes = {
-    setFieldValue: PropTypes.func,
-    touched: PropTypes.shape({}),
-    errors: PropTypes.shape({}),
-    values: PropTypes.shape({}),
-    handleSubmit: PropTypes.func,
-    isSubmitting: PropTypes.bool,
-    isValid: PropTypes.bool,
-  };
-
-  render() {
-    const {
-      values,
-      touched,
-      errors,
-      handleSubmit,
-      setFieldValue,
-      isValid,
-      isSubmitting,
-    } = this.props;
-    return (
-      <FlexedView>
-        <KeyboardAwareScrollView>
-          <PaddedView>
-            <View>
-              <TextInput
-                label="Email"
-                type="email"
-                value={values.email}
-                error={touched.email && errors.email}
-                onChangeText={(text) => setFieldValue('email', text)}
-                onSubmitEditing={() => this.passwordInput.focus()}
-                returnKeyType="next"
-                textContentType="username"
-                enablesReturnKeyAutomatically
-              />
-              <TextInput
-                label="Password"
-                type="password"
-                value={values.password}
-                error={touched.password && errors.password}
-                onChangeText={(text) => setFieldValue('password', text)}
-                onSubmitEditing={handleSubmit}
-                returnKeyType="go"
-                textContentType="password"
-                enablesReturnKeyAutomatically
-                inputRef={(r) => {
-                  this.passwordInput = r;
-                }}
-              />
-              <WebBrowserConsumer>
-                {(openUrl) => (
-                  <ButtonLink
-                    onPress={() =>
-                      openUrl('https://apollosrock.newspring.cc/page/56/')
-                    }
-                  >
-                    Forgot your password?
-                  </ButtonLink>
-                )}
-              </WebBrowserConsumer>
-            </View>
-          </PaddedView>
-        </KeyboardAwareScrollView>
-        <BottomSafeAreaView>
-          <PaddedView vertical={false}>
-            <Button
-              onPress={handleSubmit}
-              title="Sign in"
-              disabled={!isValid}
-              loading={isSubmitting}
-            />
-          </PaddedView>
-        </BottomSafeAreaView>
-      </FlexedView>
-    );
-  }
-}
-
-export default Form;
diff --git a/apolloschurchapp/src/auth/login/Form.stories.js b/apolloschurchapp/src/auth/login/Form.stories.js
deleted file mode 100644
index 54cc3f8..0000000
--- a/apolloschurchapp/src/auth/login/Form.stories.js
+++ /dev/null
@@ -1,12 +0,0 @@
-import React from 'react';
-import { storiesOf } from '@storybook/react-native';
-
-import LoginForm from './Form';
-
-storiesOf('Auth/LoginForm', module).add('Example', () => (
-  <LoginForm
-    values={{ email: '', password: '' }}
-    touched={{ email: false, password: false }}
-    errors={{ email: null, password: null }}
-  />
-));
diff --git a/apolloschurchapp/src/auth/login/Form.tests.js b/apolloschurchapp/src/auth/login/Form.tests.js
deleted file mode 100644
index 0e352e3..0000000
--- a/apolloschurchapp/src/auth/login/Form.tests.js
+++ /dev/null
@@ -1,21 +0,0 @@
-import React from 'react';
-import renderer from 'react-test-renderer';
-
-import Providers from 'apolloschurchapp/src/Providers';
-
-import LoginForm from './Form';
-
-describe('The LoginForm component', () => {
-  it('should render', () => {
-    const tree = renderer.create(
-      <Providers>
-        <LoginForm
-          values={{ email: '', password: '' }}
-          touched={{ email: false, password: false }}
-          errors={{ email: null, password: null }}
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/auth/login/authenticate.js b/apolloschurchapp/src/auth/login/authenticate.js
deleted file mode 100644
index 94d4e74..0000000
--- a/apolloschurchapp/src/auth/login/authenticate.js
+++ /dev/null
@@ -1,9 +0,0 @@
-import gql from 'graphql-tag';
-
-export default gql`
-  mutation authenticate($email: String!, $password: String!) {
-    authenticate(identity: $email, password: $password) {
-      token
-    }
-  }
-`;
diff --git a/apolloschurchapp/src/auth/login/index.js b/apolloschurchapp/src/auth/login/index.js
deleted file mode 100644
index 45bcb63..0000000
--- a/apolloschurchapp/src/auth/login/index.js
+++ /dev/null
@@ -1,67 +0,0 @@
-import React from 'react';
-import { Mutation } from 'react-apollo';
-import { Formik } from 'formik';
-import * as Yup from 'yup';
-import PropTypes from 'prop-types';
-
-import handleLogin from '../handleLogin';
-import { client } from '../../client'; //eslint-disable-line
-import authenticateMutation from './authenticate';
-import LoginForm from './Form';
-
-const Login = ({ onLogin }) => (
-  <Mutation
-    mutation={authenticateMutation}
-    update={(cache, { data: { authenticate } }) => {
-      client.mutate({
-        mutation: handleLogin,
-        variables: {
-          authToken: authenticate.token,
-        },
-      });
-    }}
-  >
-    {(authenticate) => (
-      <Formik
-        validationSchema={Yup.object().shape({
-          email: Yup.string()
-            .email('Invalid email address')
-            .required('Email is required!'),
-          password: Yup.string().required('Password is required!'),
-        })}
-        onSubmit={async (variables, { setSubmitting, setFieldError }) => {
-          try {
-            await authenticate({ variables });
-            if (onLogin) onLogin();
-          } catch (e) {
-            console.log(e);
-            const graphQLErrors = [];
-            if (
-              graphQLErrors.length &&
-              graphQLErrors.find(
-                ({ extensions }) => extensions.code === 'UNAUTHENTICATED'
-              )
-            ) {
-              setFieldError('email', true);
-              setFieldError('password', 'Your email or password is incorrect.');
-            } else {
-              setFieldError(
-                'password',
-                'Unknown error. Please try again later.'
-              );
-            }
-          }
-          setSubmitting(false);
-        }}
-      >
-        {(formikBag) => <LoginForm {...formikBag} />}
-      </Formik>
-    )}
-  </Mutation>
-);
-
-Login.propTypes = {
-  onLogin: PropTypes.func,
-};
-
-export default Login;
diff --git a/apolloschurchapp/src/auth/logout.js b/apolloschurchapp/src/auth/logout.js
deleted file mode 100644
index 8dbff04..0000000
--- a/apolloschurchapp/src/auth/logout.js
+++ /dev/null
@@ -1,7 +0,0 @@
-import gql from 'graphql-tag';
-
-export default gql`
-  mutation {
-    logout @client
-  }
-`;
diff --git a/apolloschurchapp/src/auth/signup/Form.js b/apolloschurchapp/src/auth/signup/Form.js
deleted file mode 100644
index 6f219d8..0000000
--- a/apolloschurchapp/src/auth/signup/Form.js
+++ /dev/null
@@ -1,88 +0,0 @@
-import React, { PureComponent } from 'react';
-import { View, SafeAreaView } from 'react-native';
-import PropTypes from 'prop-types';
-import { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';
-
-import FlexedView from 'apolloschurchapp/src/ui/FlexedView';
-import PaddedView from 'apolloschurchapp/src/ui/PaddedView';
-import { Text as TextInput } from 'apolloschurchapp/src/ui/inputs';
-import Button from 'apolloschurchapp/src/ui/Button';
-import styled from 'apolloschurchapp/src/ui/styled';
-
-const BottomSafeAreaView = styled({
-  position: 'absolute',
-  bottom: 0,
-  left: 0,
-  right: 0,
-})(SafeAreaView);
-
-class Form extends PureComponent {
-  static propTypes = {
-    setFieldValue: PropTypes.func,
-    touched: PropTypes.shape({}),
-    errors: PropTypes.shape({}),
-    values: PropTypes.shape({}),
-    handleSubmit: PropTypes.func,
-    isSubmitting: PropTypes.bool,
-    isValid: PropTypes.bool,
-  };
-
-  render() {
-    const {
-      values,
-      touched,
-      errors,
-      handleSubmit,
-      setFieldValue,
-      isValid,
-      isSubmitting,
-    } = this.props;
-    return (
-      <FlexedView>
-        <KeyboardAwareScrollView>
-          <PaddedView>
-            <View>
-              <TextInput
-                label="Email"
-                type="email"
-                value={values.email}
-                error={touched.email && errors.email}
-                onChangeText={(text) => setFieldValue('email', text)}
-                onSubmitEditing={() => this.passwordInput.focus()}
-                returnKeyType="next"
-                textContentType="username"
-                enablesReturnKeyAutomatically
-              />
-              <TextInput
-                label="Password"
-                type="password"
-                value={values.password}
-                error={touched.password && errors.password}
-                onChangeText={(text) => setFieldValue('password', text)}
-                onSubmitEditing={handleSubmit}
-                returnKeyType="go"
-                textContentType="password"
-                enablesReturnKeyAutomatically
-                inputRef={(r) => {
-                  this.passwordInput = r;
-                }}
-              />
-            </View>
-          </PaddedView>
-        </KeyboardAwareScrollView>
-        <BottomSafeAreaView>
-          <PaddedView vertical={false}>
-            <Button
-              onPress={handleSubmit}
-              title="Register"
-              disabled={!isValid}
-              loading={isSubmitting}
-            />
-          </PaddedView>
-        </BottomSafeAreaView>
-      </FlexedView>
-    );
-  }
-}
-
-export default Form;
diff --git a/apolloschurchapp/src/auth/signup/Form.stories.js b/apolloschurchapp/src/auth/signup/Form.stories.js
deleted file mode 100644
index da0e764..0000000
--- a/apolloschurchapp/src/auth/signup/Form.stories.js
+++ /dev/null
@@ -1,12 +0,0 @@
-import React from 'react';
-import { storiesOf } from '@storybook/react-native';
-
-import LoginForm from './Form';
-
-storiesOf('Auth/SignupForm', module).add('Example', () => (
-  <LoginForm
-    values={{ email: '', password: '' }}
-    touched={{ email: false, password: false }}
-    errors={{ email: null, password: null }}
-  />
-));
diff --git a/apolloschurchapp/src/auth/signup/Form.tests.js b/apolloschurchapp/src/auth/signup/Form.tests.js
deleted file mode 100644
index 5d9601f..0000000
--- a/apolloschurchapp/src/auth/signup/Form.tests.js
+++ /dev/null
@@ -1,21 +0,0 @@
-import React from 'react';
-import renderer from 'react-test-renderer';
-
-import Providers from 'apolloschurchapp/src/Providers';
-
-import LoginForm from './Form';
-
-describe('The SignupForm component', () => {
-  it('should render', () => {
-    const tree = renderer.create(
-      <Providers>
-        <LoginForm
-          values={{ email: '', password: '' }}
-          touched={{ email: false, password: false }}
-          errors={{ email: null, password: null }}
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/auth/signup/index.js b/apolloschurchapp/src/auth/signup/index.js
deleted file mode 100644
index 63d8ebd..0000000
--- a/apolloschurchapp/src/auth/signup/index.js
+++ /dev/null
@@ -1,64 +0,0 @@
-import React from 'react';
-import { Mutation } from 'react-apollo';
-import { Formik } from 'formik';
-import * as Yup from 'yup';
-import PropTypes from 'prop-types';
-
-import handleLogin from '../handleLogin';
-import { client } from '../../client'; //eslint-disable-line
-import registerPersonMutation from './registerPerson';
-import SignupForm from './Form';
-
-const Signup = ({ onSignup }) => (
-  <Mutation
-    mutation={registerPersonMutation}
-    update={(cache, { data: { registerPerson } }) => {
-      client.mutate({
-        mutation: handleLogin,
-        variables: {
-          authToken: registerPerson.token,
-        },
-      });
-    }}
-  >
-    {(authenticate) => (
-      <Formik
-        validationSchema={Yup.object().shape({
-          email: Yup.string()
-            .email('Invalid email address')
-            .required('Email is required!'),
-          password: Yup.string().required('Password is required!'),
-        })}
-        onSubmit={async (variables, { setSubmitting, setFieldError }) => {
-          try {
-            await authenticate({ variables });
-            if (onSignup) onSignup();
-          } catch ({ graphQLErrors = [], ...e }) {
-            if (
-              graphQLErrors.length &&
-              graphQLErrors.find(({ message }) =>
-                message.includes('User already exists')
-              )
-            ) {
-              setFieldError('email', 'There is already a user with this email');
-            } else {
-              setFieldError(
-                'password',
-                'Unknown error. Please try again later.'
-              );
-            }
-          }
-          setSubmitting(false);
-        }}
-      >
-        {(formikBag) => <SignupForm {...formikBag} />}
-      </Formik>
-    )}
-  </Mutation>
-);
-
-Signup.propTypes = {
-  onSignup: PropTypes.func,
-};
-
-export default Signup;
diff --git a/apolloschurchapp/src/auth/signup/registerPerson.js b/apolloschurchapp/src/auth/signup/registerPerson.js
deleted file mode 100644
index 77fc892..0000000
--- a/apolloschurchapp/src/auth/signup/registerPerson.js
+++ /dev/null
@@ -1,9 +0,0 @@
-import gql from 'graphql-tag';
-
-export default gql`
-  mutation registerPerson($email: String!, $password: String!) {
-    registerPerson(email: $email, password: $password) {
-      token
-    }
-  }
-`;
diff --git a/apolloschurchapp/src/client/__mocks__/index.js b/apolloschurchapp/src/client/__mocks__/index.js
index ca96910..cf59c84 100644
--- a/apolloschurchapp/src/client/__mocks__/index.js
+++ b/apolloschurchapp/src/client/__mocks__/index.js
@@ -1,24 +1,40 @@
+import React from 'react';
 import { MockedProvider } from 'react-apollo/test-utils';
 import ApolloClient from 'apollo-client';
 import { makeExecutableSchema, addMockFunctionsToSchema } from 'graphql-tools';
 import { SchemaLink } from 'apollo-link-schema';
-import { ApolloLink } from 'apollo-link';
-import { testSchema as typeDefs } from 'apollos-church-api';
+import { importSchema } from 'graphql-import';
 
 import cache from '../cache';
-import clientStateLink from '../clientStateLink';
+import { resolvers, schema, defaults } from '../../store';
 
-export default MockedProvider;
+// eslint-disable-next-line
+export default (props) => {
+  let finalProps = props;
+  // eslint-disable-next-line
+  if (!props.mocks) {
+    // eslint-disable-next-line
+    finalProps = { ...props, resolvers };
+  }
+  return <MockedProvider cache={cache} {...finalProps} />;
+};
 
-const schema = makeExecutableSchema({ typeDefs });
-addMockFunctionsToSchema({ schema });
+const serverSchema = makeExecutableSchema({
+  typeDefs: importSchema(
+    `${process.cwd()}/../apollos-church-api/local.graphql`
+  ),
+  resolverValidationOptions: {
+    requireResolversForResolveType: false,
+  },
+});
+addMockFunctionsToSchema({ schema: serverSchema });
 
-let link = new SchemaLink({ schema });
-if (clientStateLink) {
-  link = ApolloLink.from([clientStateLink, link]);
-}
+const link = new SchemaLink({ schema: serverSchema });
+cache.writeData({ data: defaults });
 
 export const client = new ApolloClient({
-  cache,
   link,
+  cache,
+  resolvers,
+  typeDefs: schema,
 });
diff --git a/apolloschurchapp/src/client/authLink.js b/apolloschurchapp/src/client/authLink.js
deleted file mode 100644
index 407934b..0000000
--- a/apolloschurchapp/src/client/authLink.js
+++ /dev/null
@@ -1,35 +0,0 @@
-import { setContext } from 'apollo-link-context';
-import gql from 'graphql-tag';
-
-import { ensureCacheHydration } from './cache';
-
-import { client } from './'; // eslint-disable-line
-
-export default setContext(async (request, { headers }) => {
-  try {
-    await ensureCacheHydration;
-
-    const {
-      data: { authToken },
-    } = await client.query({
-      query: gql`
-        query {
-          authToken @client
-        }
-      `,
-    });
-    if (!authToken) return {};
-
-    // return the headers to the context so httpLink can read them
-    return {
-      headers: {
-        ...headers,
-        authorization: authToken,
-      },
-    };
-  } catch (err) {
-    // eslint-disable-next-line
-    console.warn('Authorization Failed', err);
-    return {};
-  }
-});
diff --git a/apolloschurchapp/src/client/cache.js b/apolloschurchapp/src/client/cache.js
index 84f792e..d2ebc30 100644
--- a/apolloschurchapp/src/client/cache.js
+++ b/apolloschurchapp/src/client/cache.js
@@ -2,26 +2,40 @@ import {
   InMemoryCache,
   IntrospectionFragmentMatcher,
 } from 'apollo-cache-inmemory';
-import { AsyncStorage } from 'react-native';
-import DeviceInfo from 'react-native-device-info';
+import AsyncStorage from '@react-native-community/async-storage';
 import { CachePersistor } from 'apollo-cache-persist';
-
+import gql from 'graphql-tag';
+import ApollosConfig from '@apollosproject/config';
 import introspectionQueryResultData from './fragmentTypes.json';
 
-// We reset our apollo cache on every build:
-// TODO: this could be optimized by only reseting cache when our schema or client-side schema changes,
-// however there is risk for missing changes and breaking things in production, so this is safer.
-const SCHEMA_VERSION = `${DeviceInfo.getVersion()}${DeviceInfo.getBuildNumber()}`; // Must be a string.
+export const CACHE_LOADED = gql`
+  query {
+    cacheLoaded @client
+  }
+`;
+
+export const MARK_CACHE_LOADED = gql`
+  mutation markCacheLoaded {
+    cacheMarkLoaded @client
+  }
+`;
+
+// We reset our apollo cache based an env value and static number.
+// In the future, we should also look at resetting the app when an error occurs related to Apollo.
+// You can also increment this number to force a manual reset of the cache.
+const SCHEMA_VERSION = `${ApollosConfig.SCHEMA_VERSION}-1`; // Must be a string.
 const SCHEMA_VERSION_KEY = 'apollo-schema-version';
 
+const nodeCacheRedirect = (_, { id }, { getCacheKey }) =>
+  id ? getCacheKey({ __typename: id.split(':')[0], id }) : null;
+
 const cache = new InMemoryCache({
   fragmentMatcher: new IntrospectionFragmentMatcher({
     introspectionQueryResultData,
   }),
   cacheRedirects: {
     Query: {
-      node: (_, { id }, { getCacheKey }) =>
-        getCacheKey({ __typename: id.split(':')[0], id }),
+      node: nodeCacheRedirect,
     },
   },
 });
@@ -31,14 +45,26 @@ const persistor = new CachePersistor({
   storage: AsyncStorage,
 });
 
+// 1. If we are on the same schema version, restore the cache.
+// 2. If that fails, purge the cache and update the stored version so we don't try and restore agian
+// 3. If we are on a new schema version, purge the cache.
+// 4. If purging or setting AsyncStorage keys fails (or anything else) we capture the error and log it.
+
 export const ensureCacheHydration = (async () => {
+  // We wrap everything in try/catch because crashing on a cache restore is bad
+  // 😬
   try {
     const currentVersion = await AsyncStorage.getItem(SCHEMA_VERSION_KEY);
     if (currentVersion === SCHEMA_VERSION) {
       // If the current version matches the latest version,
       // we're good to go and can restore the cache.
-      console.log('Restoring cache...');
-      await persistor.restore();
+      try {
+        await persistor.restore();
+      } catch (restoreError) {
+        // If the restore fails, we want to do our best to purge the cache.
+        await persistor.purge();
+        console.error('Error restoring cache, purging the cache', restoreError);
+      }
     } else {
       // Otherwise, we'll want to purge the outdated persisted cache
       // and mark ourselves as having updated to the latest version.
@@ -46,7 +72,7 @@ export const ensureCacheHydration = (async () => {
       await AsyncStorage.setItem(SCHEMA_VERSION_KEY, SCHEMA_VERSION);
     }
   } catch (error) {
-    console.error('Error restoring Apollo cache', error);
+    console.error('Error restoring or purging Apollo cache', error);
   }
 })();
 
diff --git a/apolloschurchapp/src/client/clientStateLink.js b/apolloschurchapp/src/client/clientStateLink.js
deleted file mode 100644
index 0c45da8..0000000
--- a/apolloschurchapp/src/client/clientStateLink.js
+++ /dev/null
@@ -1,11 +0,0 @@
-import { withClientState } from 'apollo-link-state';
-
-import { resolvers, defaults, schema } from '../store';
-import cache from './cache';
-
-export default withClientState({
-  resolvers,
-  defaults,
-  cache,
-  typeDefs: schema,
-});
diff --git a/apolloschurchapp/src/client/fragmentTypes.json b/apolloschurchapp/src/client/fragmentTypes.json
index c78600d..9dcddbd 100644
--- a/apolloschurchapp/src/client/fragmentTypes.json
+++ b/apolloschurchapp/src/client/fragmentTypes.json
@@ -1 +1 @@
-{"__schema":{"types":[{"kind":"INTERFACE","name":"Node","possibleTypes":[{"name":"Person"},{"name":"ContentChannel"},{"name":"Interaction"},{"name":"Session"},{"name":"UniversalContentItem"},{"name":"DevotionalContentItem"}]},{"kind":"INTERFACE","name":"MediaSource","possibleTypes":[{"name":"ImageMediaSource"},{"name":"VideoMediaSource"},{"name":"AudioMediaSource"}]},{"kind":"INTERFACE","name":"ContentItem","possibleTypes":[{"name":"UniversalContentItem"},{"name":"DevotionalContentItem"}]},{"kind":"INTERFACE","name":"Media","possibleTypes":[{"name":"ImageMedia"},{"name":"VideoMedia"},{"name":"AudioMedia"}]},{"kind":"INTERFACE","name":"Sharable","possibleTypes":[{"name":"SharableContentItem"}]}]}}
\ No newline at end of file
+{"__schema":{"types":[{"kind":"INTERFACE","name":"Node","possibleTypes":[{"name":"ContentChannel"},{"name":"Person"},{"name":"Campus"},{"name":"Event"},{"name":"Group"},{"name":"Scripture"},{"name":"Pass"},{"name":"UniversalContentItem"},{"name":"DevotionalContentItem"},{"name":"MediaContentItem"},{"name":"ContentSeriesContentItem"},{"name":"WeekendContentItem"},{"name":"ActionListFeature"},{"name":"TextFeature"},{"name":"ScriptureFeature"}]},{"kind":"INTERFACE","name":"ContentItem","possibleTypes":[{"name":"UniversalContentItem"},{"name":"DevotionalContentItem"},{"name":"MediaContentItem"},{"name":"ContentSeriesContentItem"},{"name":"WeekendContentItem"}]},{"kind":"INTERFACE","name":"Media","possibleTypes":[{"name":"ImageMedia"},{"name":"VideoMedia"},{"name":"AudioMedia"}]},{"kind":"INTERFACE","name":"MediaSource","possibleTypes":[{"name":"ImageMediaSource"},{"name":"VideoMediaSource"},{"name":"AudioMediaSource"}]},{"kind":"INTERFACE","name":"Sharable","possibleTypes":[{"name":"SharableContentItem"},{"name":"SharableFeature"}]},{"kind":"INTERFACE","name":"Feature","possibleTypes":[{"name":"ActionListFeature"},{"name":"TextFeature"},{"name":"ScriptureFeature"}]}]}}
\ No newline at end of file
diff --git a/apolloschurchapp/src/client/httpLink.js b/apolloschurchapp/src/client/httpLink.js
index 39a48f0..805851d 100644
--- a/apolloschurchapp/src/client/httpLink.js
+++ b/apolloschurchapp/src/client/httpLink.js
@@ -1,10 +1,24 @@
 import { Platform } from 'react-native';
 import { createUploadLink } from 'apollo-upload-client';
-import { APP_DATA_URL } from 'react-native-dotenv';
+import ApollosConfig from '@apollosproject/config';
+import { split } from 'apollo-link';
+import { createHttpLink } from 'apollo-link-http';
+import { getMainDefinition } from 'apollo-utilities';
 
-let uri = APP_DATA_URL;
+let uri = ApollosConfig.APP_DATA_URL;
+const androidUri = ApollosConfig.ANDROID_URL || '10.0.2.2';
 
 // Android's emulator requires localhost network traffic to go through 10.0.2.2
-if (Platform.OS === 'android') uri = uri.replace('localhost', '10.0.2.2');
+if (Platform.OS === 'android') uri = uri.replace('localhost', androidUri);
 
-export default createUploadLink({ uri });
+export default split(
+  ({ query }) => {
+    const { kind, operation } = getMainDefinition(query);
+    return kind === 'OperationDefinition' && operation === 'mutation';
+  },
+  createUploadLink({ uri }),
+  createHttpLink({
+    uri,
+    useGETForQueries: true,
+  })
+);
diff --git a/apolloschurchapp/src/client/index.js b/apolloschurchapp/src/client/index.js
index 913f977..f4e6c55 100644
--- a/apolloschurchapp/src/client/index.js
+++ b/apolloschurchapp/src/client/index.js
@@ -3,21 +3,51 @@ import PropTypes from 'prop-types';
 import { ApolloProvider } from 'react-apollo';
 import { ApolloClient } from 'apollo-client';
 import { ApolloLink } from 'apollo-link';
-import SplashScreen from 'react-native-splash-screen';
+import { getVersion, getApplicationName } from 'react-native-device-info';
 
+import { authLink, buildErrorLink } from '@apollosproject/ui-auth';
+import { resolvers, schema, defaults } from '../store';
+import NavigationService from '../NavigationService';
 import httpLink from './httpLink';
-import clientStateLink from './clientStateLink';
-import authLink from './authLink'; // eslint-disable-line
-import cache, { ensureCacheHydration } from './cache';
+import cache, { ensureCacheHydration, MARK_CACHE_LOADED } from './cache';
 
-const link = clientStateLink.concat(ApolloLink.from([authLink, httpLink]));
+const goToAuth = () => NavigationService.resetToAuth();
+const wipeData = () => cache.writeData({ data: defaults });
+
+let resetStore;
+let storeIsResetting = false;
+const onAuthError = async () => {
+  if (!storeIsResetting) {
+    storeIsResetting = true;
+    await resetStore();
+  }
+  storeIsResetting = false;
+  goToAuth();
+};
+
+const errorLink = buildErrorLink(onAuthError);
+
+const link = ApolloLink.from([authLink, errorLink, httpLink]);
 
 export const client = new ApolloClient({
   link,
   cache,
-  queryDeduplication: true,
+  queryDeduplication: false,
+  shouldBatch: true,
+  resolvers,
+  typeDefs: schema,
+  name: getApplicationName(),
+  version: getVersion(),
 });
 
+// Hack to give auth link access to method on client;
+// eslint-disable-next-line prefer-destructuring
+resetStore = client.resetStore;
+
+wipeData();
+// Ensure that media player still works after logout.
+client.onResetStore(() => wipeData());
+
 class ClientProvider extends PureComponent {
   static propTypes = {
     client: PropTypes.shape({
@@ -35,7 +65,7 @@ class ClientProvider extends PureComponent {
     } catch (e) {
       throw e;
     } finally {
-      if (SplashScreen && SplashScreen.hide) SplashScreen.hide();
+      client.mutate({ mutation: MARK_CACHE_LOADED });
     }
   }
 
diff --git a/apolloschurchapp/src/content-feed/content-feed.tests.js b/apolloschurchapp/src/content-feed/content-feed.tests.js
index 544d818..345ff12 100644
--- a/apolloschurchapp/src/content-feed/content-feed.tests.js
+++ b/apolloschurchapp/src/content-feed/content-feed.tests.js
@@ -1,24 +1,32 @@
 import React from 'react';
-import renderer from 'react-test-renderer';
 
-import Providers from 'apolloschurchapp/src/Providers';
+import Providers from '../Providers';
 
-import getContentFeed from './getContentFeed';
+import { renderWithApolloData } from '../utils/testUtils';
+import GET_CONTENT_FEED from './getContentFeed';
 
 import ContentFeed from './index';
 
 describe('content feed query component', () => {
-  it('renders a feedview after successful query', () => {
+  it('renders a feedview after successful query', async () => {
     const mock = {
       request: {
-        query: getContentFeed,
+        query: GET_CONTENT_FEED,
+        variables: { itemId: 'ContentChannel:123' },
       },
       result: {
         data: {
           node: {
+            __typename: 'ContentChannel',
             childContentItemsConnection: {
+              pageInfo: {
+                endCursor: 'blablalba',
+                __typename: 'PaginationInfo',
+              },
+              __typename: 'ContentItemsConnection',
               edges: [
                 {
+                  __typename: 'ContentItemsConnectionEdge',
                   node: {
                     __typename: 'UniversalContentItem',
                     id: 'UniversalContentItem:d57994350b9d213866b24dea3a97433d',
@@ -27,11 +35,20 @@ describe('content feed query component', () => {
                       id: 'ContentChannel:4f68015ba18662a7409d1219a4ce013e',
                       name: 'Editorial',
                       iconName: 'text',
+                      __typename: 'ContentChannel',
                     },
                     title: 'Mea Animal Aperiam Ornatus Eu',
+                    hyphenatedTitle: 'Mea Animal Aperiam Ornatus Eu',
+                    summary: 'Bla bla bla',
+                    theme: null,
+                    isLiked: false,
+                    likedCount: 0,
+                    videos: [],
+                    audios: [],
                   },
                 },
                 {
+                  __typename: 'ContentItemsConnectionEdge',
                   node: {
                     __typename: 'UniversalContentItem',
                     id: 'UniversalContentItem:b36e55d803443431e96bb4b5068147ec',
@@ -40,8 +57,17 @@ describe('content feed query component', () => {
                       id: 'ContentChannel:4f68015ba18662a7409d1219a4ce013e',
                       name: 'Editorial',
                       iconName: 'text',
+                      __typename: 'ContentChannel',
                     },
                     title: 'Probo Senserit Id Mea, Ut Sed Malis Postea,',
+                    hyphenatedTitle:
+                      'Probo Senserit Id Mea, Ut Sed Malis Postea,',
+                    summary: 'Bla bla bla',
+                    theme: null,
+                    isLiked: false,
+                    likedCount: 0,
+                    videos: [],
+                    audios: [],
                   },
                 },
               ],
@@ -52,10 +78,10 @@ describe('content feed query component', () => {
     };
 
     const navigation = {
-      getParam: jest.fn(),
+      getParam: () => 'ContentChannel:123',
       navigate: jest.fn(),
     };
-    const tree = renderer.create(
+    const tree = await renderWithApolloData(
       <Providers mocks={[mock]}>
         <ContentFeed navigation={navigation} />
       </Providers>
diff --git a/apolloschurchapp/src/content-feed/getContentFeed.js b/apolloschurchapp/src/content-feed/getContentFeed.js
index d6082c2..38ed31f 100644
--- a/apolloschurchapp/src/content-feed/getContentFeed.js
+++ b/apolloschurchapp/src/content-feed/getContentFeed.js
@@ -1,36 +1,22 @@
 import gql from 'graphql-tag';
+import ApollosConfig from '@apollosproject/config';
 
 export default gql`
-  query getContentFeed($itemId: ID!) {
+  query getContentFeed($itemId: ID!, $after: String, $first: Int) {
     node(id: $itemId) {
       ... on ContentChannel {
-        childContentItemsConnection {
+        childContentItemsConnection(after: $after, first: $first) {
+          pageInfo {
+            endCursor
+          }
           edges {
             node {
-              __typename
-              id
-              coverImage {
-                name
-                sources {
-                  uri
-                }
-              }
-              isLiked
-              parentChannel {
-                id
-                name
-                iconName
-              }
-              sharing {
-                title
-                message
-                url
-              }
-              title
+              ...contentCardFragment
             }
           }
         }
       }
     }
   }
+  ${ApollosConfig.FRAGMENTS.CONTENT_CARD_FRAGMENT}
 `;
diff --git a/apolloschurchapp/src/content-feed/index.js b/apolloschurchapp/src/content-feed/index.js
index 2546f1a..33d86ab 100644
--- a/apolloschurchapp/src/content-feed/index.js
+++ b/apolloschurchapp/src/content-feed/index.js
@@ -3,11 +3,12 @@ import { Query } from 'react-apollo';
 import { get } from 'lodash';
 import PropTypes from 'prop-types';
 
-import BackgroundView from 'apolloschurchapp/src/ui/BackgroundView';
-import FeedView from 'apolloschurchapp/src/ui/FeedView';
+import { BackgroundView, FeedView } from '@apollosproject/ui-kit';
 
-import getContentFeed from './getContentFeed';
+import ContentCardConnected from '../ui/ContentCardConnected';
+import fetchMoreResolver from '../utils/fetchMoreResolver';
 
+import GET_CONTENT_FEED from './getContentFeed';
 /**
  * This is where the component description lives
  * A FeedView wrapped in a query to pull content data.
@@ -46,17 +47,24 @@ class ContentFeed extends PureComponent {
     return (
       <BackgroundView>
         <Query
-          query={getContentFeed}
+          query={GET_CONTENT_FEED}
           variables={{ itemId }}
           fetchPolicy="cache-and-network"
         >
-          {({ loading, error, data, refetch }) => (
+          {({ loading, error, data, refetch, fetchMore, variables }) => (
             <FeedView
+              ListItemComponent={ContentCardConnected}
               content={get(
                 data,
                 'node.childContentItemsConnection.edges',
                 []
               ).map((edge) => edge.node)}
+              fetchMore={fetchMoreResolver({
+                collectionName: 'node.childContentItemsConnection',
+                fetchMore,
+                variables,
+                data,
+              })}
               isLoading={loading}
               error={error}
               refetch={refetch}
diff --git a/apolloschurchapp/src/content-single/ActionContainer.js b/apolloschurchapp/src/content-single/ActionContainer.js
deleted file mode 100644
index c73ec22..0000000
--- a/apolloschurchapp/src/content-single/ActionContainer.js
+++ /dev/null
@@ -1,86 +0,0 @@
-import React from 'react';
-import { Query, Mutation } from 'react-apollo';
-
-import PropTypes from 'prop-types';
-
-import Share from 'apolloschurchapp/src/ui/Share';
-import Like from 'apolloschurchapp/src/ui/Like';
-import getSessionId from 'apolloschurchapp/src/store/getSessionId';
-import SideBySideView from 'apolloschurchapp/src/ui/SideBySideView';
-
-import updateLikeEntity from './updateLikeEntity';
-import getLikedContentItem from './getLikedContentItem';
-
-const ActionContainer = ({ content, itemId }) => (
-  <SideBySideView>
-    <Query query={getSessionId} fetchPolicy="cache-only">
-      {({ data: { sessionId } }) =>
-        sessionId ? (
-          <Query query={getLikedContentItem} variables={{ itemId }}>
-            {({
-              data: {
-                node: { isLiked, ...node },
-              },
-              refetch,
-            }) => (
-              <Mutation
-                mutation={updateLikeEntity}
-                optimisticResponse={{
-                  updateLikeEntity: {
-                    operation: isLiked ? 'Unlike' : 'Like',
-                    id: null, // unknown at this time
-                    interactionDateTime: new Date().toJSON(),
-                    __typename: 'Interaction',
-                  },
-                }}
-                update={(
-                  cache,
-                  {
-                    data: {
-                      updateLikeEntity: { operation },
-                    },
-                  }
-                ) => {
-                  cache.writeQuery({
-                    query: getLikedContentItem,
-                    data: {
-                      node: {
-                        ...node,
-                        isLiked: operation === 'Like',
-                      },
-                    },
-                  });
-                }}
-              >
-                {(createNewInteraction) => (
-                  <Like
-                    itemId={itemId}
-                    sessionId={sessionId}
-                    isLiked={isLiked}
-                    operation={isLiked ? 'Unlike' : 'Like'}
-                    toggleLike={async (variables) => {
-                      try {
-                        await createNewInteraction({ variables });
-                        await refetch();
-                      } catch (e) {
-                        console.log(e);
-                      }
-                    }}
-                  />
-                )}
-              </Mutation>
-            )}
-          </Query>
-        ) : null
-      }
-    </Query>
-    <Share content={content} />
-  </SideBySideView>
-);
-
-ActionContainer.propTypes = {
-  content: PropTypes.shape({}),
-  itemId: PropTypes.string,
-};
-
-export default ActionContainer;
diff --git a/apolloschurchapp/src/content-single/ActionContainer.tests.js b/apolloschurchapp/src/content-single/ActionContainer.tests.js
deleted file mode 100644
index bbb6af0..0000000
--- a/apolloschurchapp/src/content-single/ActionContainer.tests.js
+++ /dev/null
@@ -1,23 +0,0 @@
-import React from 'react';
-import renderer from 'react-test-renderer';
-
-import Providers from 'apolloschurchapp/src/Providers';
-
-import ActionContainer from './ActionContainer';
-
-describe('action container', () => {
-  it('renders the like and share buttons on successful load', () => {
-    const shareObject = {
-      message: '',
-      title: 'The surprising journey that changed me and my dad',
-      url: 'https://apollosrock.newspring.cc/',
-    };
-
-    const tree = renderer.create(
-      <Providers>
-        <ActionContainer content={shareObject} itemId={'fakeid'} />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/content-single/ActionContainer/ActionContainer.tests.js b/apolloschurchapp/src/content-single/ActionContainer/ActionContainer.tests.js
new file mode 100644
index 0000000..2222b55
--- /dev/null
+++ b/apolloschurchapp/src/content-single/ActionContainer/ActionContainer.tests.js
@@ -0,0 +1,22 @@
+// import React from 'react';
+// import renderer from 'react-test-renderer';
+
+// import Providers from '../Providers';
+
+// import ActionContainer from './ActionContainer';
+
+describe('action container', () => {
+  it('renders the like and share buttons on successful load', () => {
+    //     const shareObject = {
+    //       message: '',
+    //       title: 'The surprising journey that changed me and my dad',
+    //       url: 'https://apollosrock.newspring.cc/',
+    //     };
+    //     const tree = renderer.create(
+    //       <Providers>
+    //         <ActionContainer content={shareObject} itemId={'fakeid'} />
+    //       </Providers>
+    //     );
+    //     expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/content-single/ActionContainer/index.js b/apolloschurchapp/src/content-single/ActionContainer/index.js
new file mode 100644
index 0000000..6ad5233
--- /dev/null
+++ b/apolloschurchapp/src/content-single/ActionContainer/index.js
@@ -0,0 +1,37 @@
+import React from 'react';
+import { Platform, View } from 'react-native';
+import PropTypes from 'prop-types';
+import { SideBySideView, styled } from '@apollosproject/ui-kit';
+import { MediaPlayerSpacer } from '@apollosproject/ui-media-player';
+import ShareContentButtonConnected from '../../ui/ShareContentButtonConnected';
+
+import LikeContentButtonConnected from '../../ui/LikeContentButtonConnected';
+
+const PositioningView = styled(({ theme }) => ({
+  justifyContent: 'space-around',
+  paddingVertical: theme.sizing.baseUnit / 2,
+  paddingHorizontal: theme.sizing.baseUnit,
+}))(SideBySideView);
+
+const Container = styled(({ theme }) => ({
+  backgroundColor: theme.colors.paper,
+  ...Platform.select(theme.shadows.default),
+}))(View);
+
+const ActionContainer = ({ itemId }) => (
+  <Container>
+    <MediaPlayerSpacer>
+      <PositioningView>
+        <LikeContentButtonConnected itemId={itemId} />
+        <ShareContentButtonConnected itemId={itemId} />
+      </PositioningView>
+    </MediaPlayerSpacer>
+  </Container>
+);
+
+ActionContainer.propTypes = {
+  content: PropTypes.shape({}),
+  itemId: PropTypes.string,
+};
+
+export default ActionContainer;
diff --git a/apolloschurchapp/src/content-single/ContentSingle.js b/apolloschurchapp/src/content-single/ContentSingle.js
new file mode 100644
index 0000000..817af65
--- /dev/null
+++ b/apolloschurchapp/src/content-single/ContentSingle.js
@@ -0,0 +1,116 @@
+import React, { PureComponent } from 'react';
+import { Query } from 'react-apollo';
+import { get } from 'lodash';
+import PropTypes from 'prop-types';
+
+import { ErrorCard, ThemeMixin } from '@apollosproject/ui-kit';
+
+import { TrackEventWhenLoaded } from '@apollosproject/ui-analytics';
+
+import ActionContainer from './ActionContainer';
+import GET_CONTENT_ITEM from './getContentItem';
+
+import DevotionalContentItem from './DevotionalContentItem';
+import UniversalContentItem from './UniversalContentItem';
+import WeekendContentItem from './WeekendContentItem';
+
+import NavigationHeader from './NavigationHeader';
+
+class ContentSingle extends PureComponent {
+  static propTypes = {
+    navigation: PropTypes.shape({
+      getParam: PropTypes.func,
+      push: PropTypes.func,
+    }),
+  };
+
+  static navigationOptions = {
+    header: NavigationHeader,
+    headerTransparent: true,
+    headerMode: 'float',
+  };
+
+  get itemId() {
+    return this.props.navigation.getParam('itemId', []);
+  }
+
+  get queryVariables() {
+    return { itemId: this.itemId };
+  }
+
+  renderContent = ({ content, loading, error }) => {
+    let { __typename } = content;
+    if (!__typename && this.itemId) {
+      [__typename] = this.itemId.split(':');
+    }
+
+    switch (__typename) {
+      case 'DevotionalContentItem':
+        return (
+          <DevotionalContentItem
+            id={this.itemId}
+            content={content}
+            loading={loading}
+            error={error}
+          />
+        );
+      case 'WeekendContentItem':
+        return (
+          <WeekendContentItem
+            id={this.itemId}
+            content={content}
+            loading={loading}
+            error={error}
+          />
+        );
+      case 'UniversalContentItem':
+      default:
+        return (
+          <UniversalContentItem
+            id={this.itemId}
+            content={content}
+            loading={loading}
+            error={error}
+          />
+        );
+    }
+  };
+
+  renderWithData = ({ loading, error, data }) => {
+    if (error) return <ErrorCard error={error} />;
+
+    const content = data.node || {};
+
+    const { theme = {}, id } = content;
+
+    return (
+      <ThemeMixin
+        mixin={{
+          type: get(theme, 'type', 'light').toLowerCase(),
+          colors: get(theme, 'colors'),
+        }}
+      >
+        <TrackEventWhenLoaded
+          loaded={!!(!loading && content.title)}
+          eventName={'View Contentx'}
+          properties={{
+            title: content.title,
+            itemId: this.itemId,
+          }}
+        />
+        {this.renderContent({ content, loading, error })}
+        <ActionContainer itemId={id} />
+      </ThemeMixin>
+    );
+  };
+
+  render() {
+    return (
+      <Query query={GET_CONTENT_ITEM} variables={this.queryVariables}>
+        {this.renderWithData}
+      </Query>
+    );
+  }
+}
+
+export default ContentSingle;
diff --git a/apolloschurchapp/src/content-single/DevotionalContentItem/ContentTab.js b/apolloschurchapp/src/content-single/DevotionalContentItem/ContentTab.js
new file mode 100644
index 0000000..cb74911
--- /dev/null
+++ b/apolloschurchapp/src/content-single/DevotionalContentItem/ContentTab.js
@@ -0,0 +1,59 @@
+import React from 'react';
+import { ScrollView } from 'react-native';
+import PropTypes from 'prop-types';
+import { PaddedView, H2, styled, withIsLoading } from '@apollosproject/ui-kit';
+import { ScriptureList } from '@apollosproject/ui-scripture';
+import HorizontalContentFeed from '../HorizontalContentFeed';
+import HTMLContent from '../HTMLContent';
+
+const ContentContainer = withIsLoading(
+  styled({ paddingVertical: 0 })(PaddedView)
+);
+
+/**
+ * This is the Content side of the Devotional tabbed component.
+ * Displays a header, scripture list (using the ScriptureList component),
+ * and the body text of the devo.
+ */
+const ContentTab = ({
+  id,
+  title,
+  references,
+  isLoading,
+  navigationState,
+  navigation,
+}) => (
+  <ScrollView>
+    <ContentContainer isLoading={isLoading}>
+      <H2 padded>{title}</H2>
+      {references && references.length ? (
+        <ScriptureList
+          references={references}
+          onPress={navigationState.route.jumpTo} // eslint-disable-line react/jsx-handler-names
+          tabDestination={'scripture'}
+        />
+      ) : null}
+      <HTMLContent contentId={id} />
+    </ContentContainer>
+    <HorizontalContentFeed contentId={id} navigation={navigation} />
+  </ScrollView>
+);
+
+ContentTab.propTypes = {
+  /** The id of the devotional item */
+  id: PropTypes.string,
+  /** Toggles placeholders */
+  isLoading: PropTypes.bool,
+  /**
+   * The state of the TabView component (of which the ContentTab is one child component). Mostly used
+   * for the ScriptureList component to be able to jump to the ScriptureTab when the scripture
+   * reference link is tapped.
+   */
+  navigationState: PropTypes.shape({ routes: PropTypes.array }),
+  /** An array of human readable references (i.e. '1 Corinthians 15:57') */
+  references: PropTypes.arrayOf(PropTypes.string),
+  /** The devotional title */
+  title: PropTypes.string,
+};
+
+export default ContentTab;
diff --git a/apolloschurchapp/src/content-single/DevotionalContentItem/Devotional.stories.js b/apolloschurchapp/src/content-single/DevotionalContentItem/Devotional.stories.js
new file mode 100644
index 0000000..8bf3ffd
--- /dev/null
+++ b/apolloschurchapp/src/content-single/DevotionalContentItem/Devotional.stories.js
@@ -0,0 +1,62 @@
+// TODO: fix story
+
+// import React from 'react';
+// import { storiesOf } from '@apollosproject/ui-storybook';
+
+// import Devotional from '.';
+
+// const scripture = [
+//   {
+//     id: '1CO.15.57',
+//     reference: '1 Corinthians 15:57',
+//     html:
+//       '<p class="p"><span data-number="57" class="v">57</span>But thanks be to God, who gives us the victory through our Lord Jesus Christ. </p>',
+//   },
+//   {
+//     id: 'EXO.17.8-EXO.17.15',
+//     reference: 'Exodus 17:8-15',
+//     html:
+//       '<p class="p"><span data-number="8" class="v">8</span>Then Amalek came and fought with Israel in Rephidim. <span data-number="9" class="v">9</span>Moses said to Joshua, “Choose men for us, and go out to fight with Amalek. Tomorrow I will stand on the top of the hill with God’s rod in my hand.” <span data-number="10" class="v">10</span>So Joshua did as Moses had told him, and fought with Amalek; and Moses, Aaron, and Hur went up to the top of the hill. <span data-number="11" class="v">11</span>When Moses held up his hand, Israel prevailed. When he let down his hand, Amalek prevailed. <span data-number="12" class="v">12</span>But Moses’ hands were heavy; so they took a stone, and put it under him, and he sat on it. Aaron and Hur held up his hands, the one on the one side, and the other on the other side. His hands were steady until sunset. <span data-number="13" class="v">13</span>Joshua defeated Amalek and his people with the edge of the sword. <span data-number="14" class="v">14</span>Yahweh said to Moses, “Write this for a memorial in a book, and rehearse it in the ears of Joshua: that I will utterly blot out the memory of Amalek from under the sky.” <span data-number="15" class="v">15</span>Moses built an altar, and called its name “Yahweh our Banner”.</p>',
+//   },
+// ];
+
+// const content = {
+//   body:
+//     '<p>Sometimes God&rsquo;s promises to us involve a fight. We have to fight to keep our focus on Him, fight to move towards the promise we know God has laid on our hearts. We have a real enemy that would love nothing more than to get us sidetracked and doubt God&rsquo;s promises. So we fight saying that we are going to believe God will do what He says He will do, and we keep fighting until we see that promise come to life.</p><p>In Exodus 17:8-15 the nation of Israel, freed from great oppression in Egypt was traveling to the land God promised them. Yet, Israel was fighting, again.&nbsp;<br />&nbsp;<br />As the Israelites were fighting in the valley,&nbsp;Moses was on the hill top lifting his hands in prayer for these great fighters. Israel fought hard, and with the prayers of Moses and the help of his companions, Aaron and Hur, the Amalekites were defeated. Moses knew that it was solely because of the Lord&rsquo;s hand of protection and blessing on the Israelites that they won the battle. &ldquo;Moses built an altar and called it The Lord is my banner&rdquo; (Exodus 17:15).</p><p>In battle opposing nations would fly their own flag on a pole at each of their respective front lines. This was to give their soldiers a feeling of hope and a focal point. This is what God is to us: a banner of encouragement to give us hope and a focal point.</p><blockquote><p>The Lord protects us, covers us with love, and&nbsp;blesses us continually.</p></blockquote><p>The Lord is our banner. He protects us; He covers us with love; He blesses us continually. The Lord gives us hope and a place to focus during the tough fights when the enemy is trying to make us doubt God&rsquo;s promises.&nbsp;</p><p>When was the last time you sat and thanked Jesus for all the ways he is a banner in your life?&nbsp;</p><p>Reflect:</p><ul><li>What is one way the Lord has been your banner?</li><li>How can you focus more today on the Lord and all the things He does for you throughout the day?</li></ul>',
+//   route: { jumpTo: () => {} },
+//   title: 'God is Our Banner',
+// };
+
+// const renderItem = () => {};
+
+// const loadingStateObject = {
+//   node: {
+//     id: 'fakeId0',
+//     title: '',
+//     isLoading: true,
+//   },
+// };
+
+// const stories = storiesOf('Devotional', module);
+
+// stories.add('Example', () => (
+//   <Devotional
+//     body={content.body}
+//     title={content.title}
+//     isLoading={false}
+//     scripture={scripture}
+//     renderItem={renderItem}
+//     loadingStateObject={loadingStateObject}
+//   />
+// ));
+
+// stories.add('isLoading', () => (
+//   <Devotional
+//     body={content.body}
+//     title={content.title}
+//     isLoading
+//     scripture={scripture}
+//     renderItem={renderItem}
+//     loadingStateObject={loadingStateObject}
+//   />
+// ));
diff --git a/apolloschurchapp/src/content-single/DevotionalContentItem/Devotional.tests.js b/apolloschurchapp/src/content-single/DevotionalContentItem/Devotional.tests.js
new file mode 100644
index 0000000..192ec83
--- /dev/null
+++ b/apolloschurchapp/src/content-single/DevotionalContentItem/Devotional.tests.js
@@ -0,0 +1,75 @@
+import React from 'react';
+import { createStackNavigator, createAppContainer } from 'react-navigation';
+import Providers from '../../Providers';
+import { renderWithApolloData } from '../../utils/testUtils';
+import GET_CONTENT_ITEM_CONTENT from '../HTMLContent/getContentItemContent';
+import GET_SCRIPTURE from './getScripture';
+import Devotional from '.';
+
+const contentScriptureMock = {
+  request: {
+    query: GET_SCRIPTURE,
+    variables: { itemId: '1' },
+  },
+  result: {
+    data: {
+      node: {
+        __typename: 'DevotionalContentItem',
+        id: '1',
+        scriptures: [
+          {
+            __typename: 'Scripture',
+            id: '1CO.15.57',
+            reference: '1 Corinthians 15:57',
+            html:
+              '<p class="p"><span data-number="57" class="v">57</span>But thanks be to God, who gives us the victory through our Lord Jesus Christ. </p>',
+            copyright: 'PUBLIC DOMAIN',
+            version: 'WEB',
+          },
+          {
+            __typename: 'Scripture',
+            id: 'EXO.17.8-EXO.17.15',
+            reference: 'Exodus 17:8-15',
+            html:
+              '<p class="p"><span data-number="8" class="v">8</span>Then Amalek came and fought with Israel in Rephidim. <span data-number="9" class="v">9</span>Moses said to Joshua, “Choose men for us, and go out to fight with Amalek. Tomorrow I will stand on the top of the hill with God’s rod in my hand.” <span data-number="10" class="v">10</span>So Joshua did as Moses had told him, and fought with Amalek; and Moses, Aaron, and Hur went up to the top of the hill. <span data-number="11" class="v">11</span>When Moses held up his hand, Israel prevailed. When he let down his hand, Amalek prevailed. <span data-number="12" class="v">12</span>But Moses’ hands were heavy; so they took a stone, and put it under him, and he sat on it. Aaron and Hur held up his hands, the one on the one side, and the other on the other side. His hands were steady until sunset. <span data-number="13" class="v">13</span>Joshua defeated Amalek and his people with the edge of the sword. <span data-number="14" class="v">14</span>Yahweh said to Moses, “Write this for a memorial in a book, and rehearse it in the ears of Joshua: that I will utterly blot out the memory of Amalek from under the sky.” <span data-number="15" class="v">15</span>Moses built an altar, and called its name “Yahweh our Banner”.</p>',
+            copyright: 'PUBLIC DOMAIN',
+            version: 'WEB',
+          },
+        ],
+      },
+    },
+  },
+};
+
+const contentHTMLMock = {
+  request: {
+    query: GET_CONTENT_ITEM_CONTENT,
+    variables: { contentId: '1' },
+  },
+  result: {
+    data: {
+      node: {
+        __typename: 'DevotionalContentItem',
+        id: '1',
+        htmlContent: '<b>Some content!</b>',
+      },
+    },
+  },
+};
+
+const mocks = [contentScriptureMock, contentHTMLMock];
+
+describe('the Devotional component', () => {
+  it('renders a devotional', async () => {
+    const DevotionalStack = createStackNavigator({
+      Devotional: () => <Devotional id="1" content={{ title: 'Title' }} />, //eslint-disable-line
+    });
+    const DevotionalWithNavigation = createAppContainer(DevotionalStack);
+    const tree = await renderWithApolloData(
+      <Providers mocks={mocks}>
+        <DevotionalWithNavigation />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/content-single/DevotionalContentItem/ScriptureTab.js b/apolloschurchapp/src/content-single/DevotionalContentItem/ScriptureTab.js
new file mode 100644
index 0000000..c03f364
--- /dev/null
+++ b/apolloschurchapp/src/content-single/DevotionalContentItem/ScriptureTab.js
@@ -0,0 +1,56 @@
+import React from 'react';
+import { ScrollView } from 'react-native';
+import PropTypes from 'prop-types';
+import { PaddedView } from '@apollosproject/ui-kit';
+import ScriptureItem from '@apollosproject/ui-scripture';
+import HorizontalContentFeed from '../HorizontalContentFeed';
+
+/**
+ * This is the Scripture side of the Devotional tabbed component.
+ * Maps over an array of scripture references and renders them
+ * using the ScriptureItem component.
+ */
+const ScriptureTab = ({ id, scripture, isLoading, navigation }) => (
+  <ScrollView>
+    <PaddedView>
+      {scripture.map((ref, i) => (
+        <ScriptureItem
+          key={ref.id}
+          reference={ref.reference}
+          html={ref.html}
+          isLoading={isLoading}
+          copyright={
+            // only show last copyright
+            scripture.length - 1 === i ? ref.copyright : null
+          }
+          version={ref.version}
+        />
+      ))}
+    </PaddedView>
+    <HorizontalContentFeed contentId={id} navigation={navigation} />
+  </ScrollView>
+);
+
+ScriptureTab.propTypes = {
+  /** The id of the devotional content item */
+  id: PropTypes.string,
+  /** Toggles placeholders */
+  isLoading: PropTypes.bool,
+  /** An array of scripture objects */
+  scripture: PropTypes.arrayOf(
+    PropTypes.shape({
+      /** The ID of the verse (i.e. '1CO.15.57') */
+      id: PropTypes.string,
+      /** A human readable reference (i.e. '1 Corinthians 15:57') */
+      reference: PropTypes.string,
+      /** The scripture source to render */
+      html: PropTypes.string,
+      /** The copyright of the Bible version */
+      copyright: PropTypes.string,
+      /** The Bible version abbreviation */
+      version: PropTypes.string,
+    })
+  ),
+};
+
+export default ScriptureTab;
diff --git a/apolloschurchapp/src/content-single/DevotionalContentItem/getScripture.js b/apolloschurchapp/src/content-single/DevotionalContentItem/getScripture.js
new file mode 100644
index 0000000..f641711
--- /dev/null
+++ b/apolloschurchapp/src/content-single/DevotionalContentItem/getScripture.js
@@ -0,0 +1,17 @@
+import gql from 'graphql-tag';
+import ApollosConfig from '@apollosproject/config';
+
+export default gql`
+  query getScripture($itemId: ID!) {
+    node(id: $itemId) {
+      __typename
+      id
+      ... on DevotionalContentItem {
+        scriptures {
+          ...ScriptureFragment
+        }
+      }
+    }
+  }
+  ${ApollosConfig.FRAGMENTS.SCRIPTURE_FRAGMENT}
+`;
diff --git a/apolloschurchapp/src/content-single/DevotionalContentItem/index.js b/apolloschurchapp/src/content-single/DevotionalContentItem/index.js
new file mode 100644
index 0000000..2ddacec
--- /dev/null
+++ b/apolloschurchapp/src/content-single/DevotionalContentItem/index.js
@@ -0,0 +1,129 @@
+import React, { PureComponent } from 'react';
+import PropTypes from 'prop-types';
+import { SafeAreaView } from 'react-navigation';
+import { Query } from 'react-apollo';
+import { get } from 'lodash';
+
+import {
+  ErrorCard,
+  TabView,
+  TabSceneMap as SceneMap,
+  BackgroundView,
+  styled,
+} from '@apollosproject/ui-kit';
+import ContentTab from './ContentTab';
+import ScriptureTab from './ScriptureTab';
+
+import GET_SCRIPTURE from './getScripture';
+
+const FlexedSafeAreaView = styled({ flex: 1 })(SafeAreaView);
+
+/**
+ * The devotional component.
+ * Displays a TabView with two tabs: ContentTab and ScriptureTab.
+ */
+class DevotionalContentItem extends PureComponent {
+  static propTypes = {
+    /** The id of the devotional item */
+    id: PropTypes.string.isRequired,
+    content: PropTypes.shape({
+      /** The devotional title */
+      title: PropTypes.string,
+    }),
+    /** Toggles placeholders */
+    loading: PropTypes.bool,
+    navigation: PropTypes.shape({}),
+  };
+
+  /**
+   * Function to get the scripture references from the larger scripture object.
+   * Props: full scripture array of objects
+   * Returns: an array of scripture references.
+   */
+  getScriptureReferences = (scripture) => {
+    let arrayOfRefrences = null;
+
+    if (scripture) {
+      arrayOfRefrences = scripture.map(
+        (ref) =>
+          // only add refs to the array if they exist
+          ref.reference || ''
+      );
+    }
+
+    return arrayOfRefrences;
+  };
+
+  /**
+   * The route that TabView uses to render the ContentTab.
+   * Note: navigationState gets passed down automatically from the TabView.
+   */
+  contentRoute = ({ scriptures, loading }) => (navigationState) => (
+    <ContentTab
+      id={this.props.id}
+      references={this.getScriptureReferences(scriptures)}
+      title={this.props.content.title}
+      navigationState={navigationState}
+      navigation={this.props.navigation}
+      isLoading={this.props.loading || loading}
+    />
+  );
+
+  /**
+   * The route that TabView uses to render the ScriptureTab
+   */
+  scriptureRoute = ({ scriptures, loading }) => () => (
+    <ScriptureTab
+      id={this.props.id}
+      scripture={scriptures}
+      navigation={this.props.navigation}
+      isLoading={this.props.loading || loading}
+    />
+  );
+
+  renderLoading = () => <ContentTab title={''} isLoading />;
+
+  renderTabs = ({ data, error, loading }) => {
+    if (error) return <ErrorCard error={error} />;
+
+    const scriptures = get(data, 'node.scriptures', []);
+
+    // only include scriptures where the references are not null
+    const validScriptures = scriptures
+      ? scriptures.filter((scripture) => scripture.reference != null)
+      : [];
+
+    const hasScripture = loading || validScriptures.length;
+    const tabRoutes = [{ title: 'Devotional', key: 'content' }];
+    const map = {
+      content: this.contentRoute({ scriptures, loading }),
+    };
+    if (hasScripture) {
+      tabRoutes.push({ title: 'Scripture', key: 'scripture' });
+      map.scripture = this.scriptureRoute({ scriptures, loading });
+    }
+    return tabRoutes.length < 2 ? (
+      map[tabRoutes[0].key]()
+    ) : (
+      <TabView routes={tabRoutes} renderScene={SceneMap(map)} />
+    );
+  };
+
+  render() {
+    return (
+      <BackgroundView>
+        <FlexedSafeAreaView forceInset={{ top: 'always' }}>
+          <Query query={GET_SCRIPTURE} variables={{ itemId: this.props.id }}>
+            {({ data, loading, error }) =>
+              loading
+                ? this.renderLoading()
+                : this.renderTabs({ data, loading, error })
+            }
+          </Query>
+        </FlexedSafeAreaView>
+      </BackgroundView>
+    );
+  }
+}
+
+export default DevotionalContentItem;
diff --git a/apolloschurchapp/src/content-single/Features/ScriptureFeature.js b/apolloschurchapp/src/content-single/Features/ScriptureFeature.js
new file mode 100644
index 0000000..e5ebbd0
--- /dev/null
+++ b/apolloschurchapp/src/content-single/Features/ScriptureFeature.js
@@ -0,0 +1,48 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+
+import { ActionCard } from '@apollosproject/ui-kit';
+import { ScriptureItem } from '@apollosproject/ui-scripture';
+import ShareContentButtonConnected from '../../ui/ShareContentButtonConnected';
+
+const ScriptureFeature = ({
+  scriptures,
+  sharing: { message } = {},
+  isLoading,
+  contentId,
+}) => (
+  <ActionCard
+    icon={'text'}
+    action={
+      <ShareContentButtonConnected message={message} itemId={contentId} />
+    }
+  >
+    {scriptures.map(({ copyright, reference, html, id, version }) => (
+      <ScriptureItem
+        key={id}
+        reference={reference}
+        html={html}
+        isLoading={isLoading}
+        copyright={copyright}
+        version={version}
+      />
+    ))}
+  </ActionCard>
+);
+
+ScriptureFeature.propTypes = {
+  isLoading: PropTypes.bool.isRequired,
+  scriptures: PropTypes.arrayOf(
+    PropTypes.shape({
+      html: PropTypes.string.isRequired,
+      reference: PropTypes.string.isRequired,
+      id: PropTypes.string.isRequired,
+      copyright: PropTypes.string,
+      version: PropTypes.string,
+    })
+  ),
+  sharing: PropTypes.shape({ message: PropTypes.string }),
+  contentId: PropTypes.string.isRequired,
+};
+
+export default ScriptureFeature;
diff --git a/apolloschurchapp/src/content-single/Features/TextFeature.js b/apolloschurchapp/src/content-single/Features/TextFeature.js
new file mode 100644
index 0000000..9faf4d0
--- /dev/null
+++ b/apolloschurchapp/src/content-single/Features/TextFeature.js
@@ -0,0 +1,23 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+
+import { ActionCard, BodyText } from '@apollosproject/ui-kit';
+import ShareContentButtonConnected from '../../ui/ShareContentButtonConnected';
+
+const TextFeature = ({ body, sharing: { message } = {}, contentId }) => (
+  <ActionCard
+    action={
+      <ShareContentButtonConnected message={message} itemId={contentId} />
+    }
+  >
+    <BodyText>{body}</BodyText>
+  </ActionCard>
+);
+
+TextFeature.propTypes = {
+  body: PropTypes.string.isRequired,
+  sharing: PropTypes.shape({ message: PropTypes.string }),
+  contentId: PropTypes.string.isRequired,
+};
+
+export default TextFeature;
diff --git a/apolloschurchapp/src/content-single/Features/getContentItemFeatures.js b/apolloschurchapp/src/content-single/Features/getContentItemFeatures.js
new file mode 100644
index 0000000..9d3cac5
--- /dev/null
+++ b/apolloschurchapp/src/content-single/Features/getContentItemFeatures.js
@@ -0,0 +1,36 @@
+import gql from 'graphql-tag';
+import ApollosConfig from '@apollosproject/config';
+
+const {
+  TEXT_FEATURE_FRAGMENT,
+  SCRIPTURE_FEATURE_FRAGMENT,
+} = ApollosConfig.FRAGMENTS;
+
+const FEATURES_FRAGMENT = gql`
+  fragment FeaturesFragment on Feature {
+    id
+    ...TextFeatureFragment
+    ...ScriptureFeatureFragment
+  }
+  ${TEXT_FEATURE_FRAGMENT}
+  ${SCRIPTURE_FEATURE_FRAGMENT}
+`;
+
+export default gql`
+  query contentItemFeatures($contentId: ID!) {
+    node(id: $contentId) {
+      id
+      ... on ContentSeriesContentItem {
+        features {
+          ...FeaturesFragment
+        }
+      }
+      ... on WeekendContentItem {
+        features {
+          ...FeaturesFragment
+        }
+      }
+    }
+  }
+  ${FEATURES_FRAGMENT}
+`;
diff --git a/apolloschurchapp/src/content-single/Features/index.js b/apolloschurchapp/src/content-single/Features/index.js
new file mode 100644
index 0000000..e345e37
--- /dev/null
+++ b/apolloschurchapp/src/content-single/Features/index.js
@@ -0,0 +1,55 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import { Query } from 'react-apollo';
+import { ErrorCard, H3, PaddedView } from '@apollosproject/ui-kit';
+import { get } from 'lodash';
+import TextFeature from './TextFeature';
+import ScriptureFeature from './ScriptureFeature';
+
+import GET_CONTENT_ITEM_FEATURES from './getContentItemFeatures';
+
+const FEATURE_MAP = {
+  TextFeature,
+  ScriptureFeature,
+};
+
+const Features = ({ contentId }) => {
+  if (!contentId) return null;
+
+  return (
+    <Query
+      query={GET_CONTENT_ITEM_FEATURES}
+      fetchPolicy="cache-and-network"
+      variables={{ contentId }}
+    >
+      {({ data: { node } = {}, loading, error }) => {
+        if (error) return <ErrorCard error={error} />;
+        if (loading) return null;
+
+        const features = get(node, 'features', []);
+        if (!features || !features.length) return null;
+
+        return (
+          <PaddedView horizontal={false}>
+            <PaddedView vertical={false}>
+              <H3 padded>Engage</H3>
+            </PaddedView>
+            {features.map(({ __typename, ...feature }) => {
+              const Feature = FEATURE_MAP[__typename];
+              if (!Feature) return null;
+              return (
+                <Feature key={feature.id} {...feature} contentId={contentId} />
+              );
+            })}
+          </PaddedView>
+        );
+      }}
+    </Query>
+  );
+};
+
+Features.propTypes = {
+  contentId: PropTypes.string,
+};
+
+export default Features;
diff --git a/apolloschurchapp/src/content-single/HTMLContent/getContentItemContent.js b/apolloschurchapp/src/content-single/HTMLContent/getContentItemContent.js
new file mode 100644
index 0000000..207df6d
--- /dev/null
+++ b/apolloschurchapp/src/content-single/HTMLContent/getContentItemContent.js
@@ -0,0 +1,12 @@
+import gql from 'graphql-tag';
+
+export default gql`
+  query getContentItemHTML($contentId: ID!) {
+    node(id: $contentId) {
+      ... on ContentItem {
+        id
+        htmlContent
+      }
+    }
+  }
+`;
diff --git a/apolloschurchapp/src/content-single/HTMLContent/index.js b/apolloschurchapp/src/content-single/HTMLContent/index.js
new file mode 100644
index 0000000..b830a1d
--- /dev/null
+++ b/apolloschurchapp/src/content-single/HTMLContent/index.js
@@ -0,0 +1,43 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import { Query } from 'react-apollo';
+import InAppBrowser from 'react-native-inappbrowser-reborn';
+
+import HTMLView from '@apollosproject/ui-htmlview';
+import { ErrorCard } from '@apollosproject/ui-kit';
+
+import GET_CONTENT_ITEM_CONTENT from './getContentItemContent';
+
+function handlePressAnchor(url) {
+  return InAppBrowser.open(url);
+}
+
+const HTMLContent = ({ contentId }) => {
+  if (!contentId) return <HTMLView isLoading />;
+
+  return (
+    <Query
+      query={GET_CONTENT_ITEM_CONTENT}
+      variables={{ contentId }}
+      fetchPolicy={'cache-and-network'}
+    >
+      {({ data: { node: { htmlContent } = {} } = {}, loading, error }) => {
+        if (!htmlContent && error) return <ErrorCard error={error} />;
+        return (
+          <HTMLView
+            isLoading={!htmlContent && loading}
+            onPressAnchor={handlePressAnchor}
+          >
+            {htmlContent}
+          </HTMLView>
+        );
+      }}
+    </Query>
+  );
+};
+
+HTMLContent.propTypes = {
+  contentId: PropTypes.string,
+};
+
+export default HTMLContent;
diff --git a/apolloschurchapp/src/content-single/HorizontalContentFeed/HorizontalContentFeed.tests.js b/apolloschurchapp/src/content-single/HorizontalContentFeed/HorizontalContentFeed.tests.js
new file mode 100644
index 0000000..14c4701
--- /dev/null
+++ b/apolloschurchapp/src/content-single/HorizontalContentFeed/HorizontalContentFeed.tests.js
@@ -0,0 +1,206 @@
+import React from 'react';
+import Providers from '../../Providers';
+import { renderWithApolloData } from '../../utils/testUtils';
+import GET_CONTENT_CARD from '../../ui/ContentCardConnected/query';
+import GET_HORIZONTAL_CONTENT from './getHorizontalContent';
+import HorizontalContentFeed from '.';
+
+const mock = {
+  request: {
+    query: GET_HORIZONTAL_CONTENT,
+    variables: { itemId: 'ContentSeriesContentItem:123' },
+  },
+  result: {
+    data: {
+      node: {
+        id: 'ContentSeriesContentItem:123',
+        childContentItemsConnection: {
+          edges: [
+            {
+              cursor: 'b487224762b030f470967f45d7205823',
+              node: {
+                id: 'DevotionalContentItem:d395278cd4b68e074ca4e595c8feab6d',
+                coverImage: {
+                  name: 'Square Image',
+                  sources: [
+                    {
+                      uri:
+                        'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D31af1a61-360c-4b1e-8e62-45517c06a9a2',
+                      __typename: 'ImageMediaSource',
+                    },
+                  ],
+                  __typename: 'ImageMedia',
+                },
+                parentChannel: {
+                  id: 'ContentChannel:559b23fd0aa90e81b1c023e72e230fa1',
+                  name: 'Devotional',
+                  iconName: 'text',
+                  __typename: 'ContentChannel',
+                },
+                title: 'God sees who you can be not who you are',
+                sharing: {
+                  url:
+                    'https://apollosrock.newspring.cc/devotional/god-sees-who-you-can-be-not-who-you-are',
+                  message:
+                    'God sees who you can be not who you are - Life is challenging enough.',
+                  title: 'Share via ...',
+                  __typename: 'SharableContentItem',
+                },
+                __typename: 'DevotionalContentItem',
+              },
+              __typename: 'ContentItemsConnectionEdge',
+            },
+            {
+              cursor: '4affc1122ad80d4edcf6c5bc9d88ae99',
+              node: {
+                id: 'DevotionalContentItem:fbea6914a3e8877516cbd333d919075d',
+                coverImage: {
+                  name: 'Square Image',
+                  sources: [
+                    {
+                      uri:
+                        'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D31af1a61-360c-4b1e-8e62-45517c06a9a2',
+                      __typename: 'ImageMediaSource',
+                    },
+                  ],
+                  __typename: 'ImageMedia',
+                },
+                parentChannel: {
+                  id: 'ContentChannel:559b23fd0aa90e81b1c023e72e230fa1',
+                  name: 'Devotional',
+                  iconName: 'text',
+                  __typename: 'ContentChannel',
+                },
+                title: 'Thank God for the friends who will tell it like it is',
+                sharing: {
+                  url:
+                    'https://apollosrock.newspring.cc/devotional/thank-god-for-the-friends-who-will-tell-it-like-it-is',
+                  message:
+                    'Thank God for the friends who will tell it like it is - Some of us grew up in a sanitized church.',
+                  title: 'Share via ...',
+                  __typename: 'SharableContentItem',
+                },
+                __typename: 'DevotionalContentItem',
+              },
+              __typename: 'ContentItemsConnectionEdge',
+            },
+            {
+              cursor: '659a26257a49fb2bf1446bb747bf7dd3',
+              node: {
+                id: 'DevotionalContentItem:5e18250f586ab8de4d3d6292c919dcc4',
+                coverImage: {
+                  name: 'Square Image',
+                  sources: [
+                    {
+                      uri:
+                        'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D31af1a61-360c-4b1e-8e62-45517c06a9a2',
+                      __typename: 'ImageMediaSource',
+                    },
+                  ],
+                  __typename: 'ImageMedia',
+                },
+                parentChannel: {
+                  id: 'ContentChannel:559b23fd0aa90e81b1c023e72e230fa1',
+                  name: 'Devotional',
+                  iconName: 'text',
+                  __typename: 'ContentChannel',
+                },
+                title: 'No sin is too bad',
+                sharing: {
+                  url:
+                    'https://apollosrock.newspring.cc/devotional/no-sin-is-too-bad',
+                  message:
+                    'No sin is too bad - In Jeremiah 3, God’s people had really messed up.',
+                  title: 'Share via ...',
+                  __typename: 'SharableContentItem',
+                },
+                __typename: 'DevotionalContentItem',
+              },
+              __typename: 'ContentItemsConnectionEdge',
+            },
+            {
+              cursor: 'c8d2fe738629909c33010432432f21c8',
+              node: {
+                id: 'DevotionalContentItem:bdc2c29b85949e4ca8232b373a07953d',
+                coverImage: {
+                  name: 'Square Image',
+                  sources: [
+                    {
+                      uri:
+                        'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D31af1a61-360c-4b1e-8e62-45517c06a9a2',
+                      __typename: 'ImageMediaSource',
+                    },
+                  ],
+                  __typename: 'ImageMedia',
+                },
+                parentChannel: {
+                  id: 'ContentChannel:559b23fd0aa90e81b1c023e72e230fa1',
+                  name: 'Devotional',
+                  iconName: 'text',
+                  __typename: 'ContentChannel',
+                },
+                title: 'Change starts with a choice',
+                sharing: {
+                  url:
+                    'https://apollosrock.newspring.cc/devotional/change-starts-with-a-choice',
+                  message:
+                    'Change starts with a choice - Have you ever restored an old piece of furniture?',
+                  title: 'Share via ...',
+                  __typename: 'SharableContentItem',
+                },
+                __typename: 'DevotionalContentItem',
+              },
+              __typename: 'ContentItemsConnectionEdge',
+            },
+          ],
+          __typename: 'ContentItemsConnection',
+        },
+        siblingContentItemsConnection: {
+          edges: [],
+          __typename: 'ContentItemsConnection',
+        },
+        __typename: 'ContentSeriesContentItem',
+      },
+    },
+  },
+};
+
+const navigation = {
+  push: jest.fn(),
+};
+
+const additionalMocks = mock.result.data.node.childContentItemsConnection.edges.map(
+  ({ node }) => ({
+    request: {
+      query: GET_CONTENT_CARD,
+      variables: { contentId: node.id },
+    },
+    result: {
+      data: {
+        node: {
+          ...node,
+          summary: 'bla bla bla',
+          isLiked: false,
+          theme: null,
+          coverImage: null,
+        },
+      },
+    },
+  })
+);
+
+console.log(additionalMocks);
+
+describe('the HorizontalContentFeed component', () => {
+  it('renders a horizontal content feed', async () => {
+    const tree = await renderWithApolloData(
+      <Providers mocks={[mock, ...additionalMocks]}>
+        <HorizontalContentFeed
+          contentId={'ContentSeriesContentItem:123'}
+          navigation={navigation}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/content-single/HorizontalContentFeed/getHorizontalContent.js b/apolloschurchapp/src/content-single/HorizontalContentFeed/getHorizontalContent.js
new file mode 100644
index 0000000..0aa6057
--- /dev/null
+++ b/apolloschurchapp/src/content-single/HorizontalContentFeed/getHorizontalContent.js
@@ -0,0 +1,29 @@
+import gql from 'graphql-tag';
+import ApollosConfig from '@apollosproject/config';
+
+export default gql`
+  query getHorizontalContent($itemId: ID!, $cursor: String) {
+    node(id: $itemId) {
+      ... on ContentItem {
+        id
+        childContentItemsConnection(after: $cursor) {
+          edges {
+            cursor
+            node {
+              ...contentCardFragment
+            }
+          }
+        }
+        siblingContentItemsConnection(after: $cursor) {
+          edges {
+            cursor
+            node {
+              ...contentCardFragment
+            }
+          }
+        }
+      }
+    }
+  }
+  ${ApollosConfig.FRAGMENTS.CONTENT_CARD_FRAGMENT}
+`;
diff --git a/apolloschurchapp/src/content-single/HorizontalContentFeed/index.js b/apolloschurchapp/src/content-single/HorizontalContentFeed/index.js
new file mode 100644
index 0000000..f5f356f
--- /dev/null
+++ b/apolloschurchapp/src/content-single/HorizontalContentFeed/index.js
@@ -0,0 +1,119 @@
+import React, { Component } from 'react';
+import { get } from 'lodash';
+import PropTypes from 'prop-types';
+import { withNavigation } from 'react-navigation';
+import { Query } from 'react-apollo';
+
+import { HorizontalTileFeed, TouchableScale } from '@apollosproject/ui-kit';
+
+import HorizontalContentCardConnected from '../../ui/HorizontalContentCardConnected';
+
+import GET_HORIZONTAL_CONTENT from './getHorizontalContent';
+
+const loadingStateObject = {
+  node: {
+    id: 'fakeId0',
+    title: '',
+    isLoading: true,
+  },
+};
+
+class HorizontalContentFeed extends Component {
+  static propTypes = {
+    contentId: PropTypes.string,
+    navigation: PropTypes.shape({
+      push: PropTypes.func,
+    }),
+  };
+
+  renderItem = ({ item }) => {
+    const itemId = get(item, 'id', '');
+    const disabled = get(item, 'id', '') === this.props.contentId;
+    return (
+      <TouchableScale
+        onPress={() => this.handleOnPressItem(item)}
+        disabled={disabled}
+      >
+        <HorizontalContentCardConnected
+          contentId={itemId}
+          disabled={disabled}
+        />
+      </TouchableScale>
+    );
+  };
+
+  handleOnPressItem = (item) => {
+    this.props.navigation.push('ContentSingle', {
+      itemId: item.id,
+    });
+  };
+
+  renderFeed = ({ data, loading, error, fetchMore }) => {
+    if (error) return null;
+    if (loading) return null;
+
+    const children = get(data, 'node.childContentItemsConnection.edges', []);
+    const siblings = get(data, 'node.siblingContentItemsConnection.edges', []);
+    const isParent = children.length > 0;
+
+    const edges = isParent ? children : siblings;
+    const content = edges.map((edge) => edge.node);
+    const { cursor } = edges.length && edges[edges.length - 1];
+    const currentIndex = content.findIndex(
+      ({ id }) => id === this.props.contentId
+    );
+    const initialScrollIndex = currentIndex === -1 ? 0 : currentIndex;
+
+    return content && content.length ? (
+      <HorizontalTileFeed
+        content={content}
+        loadingStateObject={loadingStateObject}
+        renderItem={this.renderItem}
+        initialScrollIndex={initialScrollIndex}
+        getItemLayout={(itemData, index) => ({
+          // We need to pass this function so that initialScrollIndex will work.
+          length: 240,
+          offset: 240 * index,
+          index,
+        })}
+        onEndReached={() =>
+          fetchMore({
+            query: GET_HORIZONTAL_CONTENT,
+            variables: { cursor, itemId: this.props.contentId },
+            updateQuery: (previousResult, { fetchMoreResult }) => {
+              const connection = isParent
+                ? 'childContentItemsConnection'
+                : 'siblingContentItemsConnection';
+              const newEdges = get(fetchMoreResult.node, connection, []).edges;
+
+              return {
+                node: {
+                  ...previousResult.node,
+                  [connection]: {
+                    ...previousResult.node[connection],
+                    edges: [...edges, ...newEdges],
+                  },
+                },
+              };
+            },
+          })
+        }
+      />
+    ) : null;
+  };
+
+  render() {
+    if (!this.props.contentId) return this.renderFeed({ loading: true });
+
+    return (
+      <Query
+        query={GET_HORIZONTAL_CONTENT}
+        variables={{ itemId: this.props.contentId }}
+      >
+        {this.renderFeed}
+      </Query>
+    );
+  }
+}
+
+export default withNavigation(HorizontalContentFeed);
diff --git a/apolloschurchapp/src/content-single/MediaControls/getContentMedia.js b/apolloschurchapp/src/content-single/MediaControls/getContentMedia.js
new file mode 100644
index 0000000..6e84f27
--- /dev/null
+++ b/apolloschurchapp/src/content-single/MediaControls/getContentMedia.js
@@ -0,0 +1,13 @@
+import gql from 'graphql-tag';
+import ApollosConfig from '@apollosproject/config';
+
+export default gql`
+  query getContentMedia($contentId: ID!) {
+    node(id: $contentId) {
+      ... on ContentItem {
+        ...contentMediaFragment
+      }
+    }
+  }
+  ${ApollosConfig.FRAGMENTS.CONTENT_MEDIA_FRAGMENT}
+`;
diff --git a/apolloschurchapp/src/content-single/MediaControls/index.js b/apolloschurchapp/src/content-single/MediaControls/index.js
new file mode 100644
index 0000000..63af268
--- /dev/null
+++ b/apolloschurchapp/src/content-single/MediaControls/index.js
@@ -0,0 +1,156 @@
+import React, { PureComponent } from 'react';
+import PropTypes from 'prop-types';
+import { Query, Mutation } from 'react-apollo';
+import { View } from 'react-native';
+import { get } from 'lodash';
+
+import { PLAY_VIDEO } from '@apollosproject/ui-media-player';
+import {
+  styled,
+  TouchableScale,
+  MediaThumbnail,
+  MediaThumbnailIcon,
+  MediaThumbnailItem,
+  H6,
+} from '@apollosproject/ui-kit';
+import { LiveConsumer } from '@apollosproject/ui-connected';
+
+import { WebBrowserConsumer } from '../../ui/WebBrowser';
+
+import GET_CONTENT_MEDIA from './getContentMedia';
+
+const Container = styled(({ theme }) => ({
+  flexDirection: 'row',
+  alignItems: 'flex-start',
+  justifyContent: 'flex-start',
+  marginTop: -(theme.sizing.baseUnit * 2.5),
+}))(View);
+
+const StyledMediaThumbnail = styled({ marginVertical: 0 })(MediaThumbnail);
+
+class MediaControls extends PureComponent {
+  static propTypes = {
+    contentId: PropTypes.string,
+  };
+
+  renderPlayButton = ({ action, coverImageSources }) => (
+    <Container>
+      <TouchableScale onPress={action}>
+        <StyledMediaThumbnail image={coverImageSources}>
+          <MediaThumbnailItem centered>
+            <MediaThumbnailIcon name="play" />
+          </MediaThumbnailItem>
+          <MediaThumbnailItem centered bottom>
+            <H6 padded>Play</H6>
+          </MediaThumbnailItem>
+        </StyledMediaThumbnail>
+      </TouchableScale>
+    </Container>
+  );
+
+  renderMedia = ({
+    videoSource,
+    coverImageSources,
+    title,
+    parentChannelName,
+  }) => (
+    <Mutation mutation={PLAY_VIDEO}>
+      {(play) =>
+        this.renderPlayButton({
+          action: () =>
+            play({
+              variables: {
+                mediaSource: videoSource,
+                posterSources: coverImageSources,
+                title,
+                isVideo: true,
+                artist: parentChannelName,
+              },
+            }),
+          coverImageSources,
+        })
+      }
+    </Mutation>
+  );
+
+  renderWebView = ({ webViewUrl, coverImageSources }) => (
+    <WebBrowserConsumer>
+      {(openUrl) =>
+        this.renderPlayButton({
+          action: () => openUrl(webViewUrl),
+          coverImageSources,
+        })
+      }
+    </WebBrowserConsumer>
+  );
+
+  renderControls = ({
+    liveStream,
+    loading,
+    error,
+    data: {
+      node: { videos, title, parentChannel = {}, coverImage = {} } = {},
+    } = {},
+  }) => {
+    if (loading || error) return null;
+    const isLive = !!liveStream;
+    const hasLiveStreamContent = !!(
+      get(liveStream, 'webViewUrl') || get(liveStream, 'media.sources[0]')
+    );
+
+    const videoSource = get(videos, '[0].sources[0]', null);
+    const shouldRender = (isLive && hasLiveStreamContent) || videoSource;
+
+    if (!shouldRender) return null;
+
+    const coverImageSources = (coverImage && coverImage.sources) || [];
+
+    // Content is live, and we have a livestream media
+    if (isLive && get(liveStream, 'media.sources[0].uri')) {
+      return this.renderMedia({
+        coverImageSources,
+        videoSource: liveStream.media.sources[0],
+        parentChannelName: parentChannel.name,
+        title,
+      });
+    }
+
+    // Content is live, and we don't have a livestream media
+    // but we do have a webview url
+    if (isLive && get(liveStream, 'webViewUrl')) {
+      return this.renderWebView({
+        webViewUrl: liveStream.webViewUrl,
+        coverImageSources,
+      });
+    }
+
+    // Default case, normal media.
+    return this.renderMedia({
+      coverImageSources,
+      videoSource,
+      parentChannelName: parentChannel.name,
+      title,
+    });
+  };
+
+  render() {
+    if (!this.props.contentId) return null;
+    return (
+      <LiveConsumer contentId={this.props.contentId}>
+        {(liveStream) => (
+          <Query
+            query={GET_CONTENT_MEDIA}
+            fetchPolicy="cache-and-network"
+            variables={{ contentId: this.props.contentId }}
+          >
+            {({ data, loading, error }) =>
+              this.renderControls({ data, loading, error, liveStream })
+            }
+          </Query>
+        )}
+      </LiveConsumer>
+    );
+  }
+}
+
+export default MediaControls;
diff --git a/apolloschurchapp/src/content-single/NavigationHeader.js b/apolloschurchapp/src/content-single/NavigationHeader.js
new file mode 100644
index 0000000..15b9d7b
--- /dev/null
+++ b/apolloschurchapp/src/content-single/NavigationHeader.js
@@ -0,0 +1,25 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import { ModalViewHeader } from '@apollosproject/ui-kit';
+
+const NavigationHeader = ({ scene, navigation }) => {
+  let onBack = null;
+  if (scene.index > 0) onBack = () => navigation.pop();
+  const onClose = () => {
+    navigation.goBack();
+  };
+
+  return <ModalViewHeader onClose={onClose} onBack={onBack} navigationHeader />;
+};
+
+NavigationHeader.propTypes = {
+  scene: PropTypes.shape({
+    index: PropTypes.number,
+  }),
+  navigation: PropTypes.shape({
+    pop: PropTypes.func,
+    popToTop: PropTypes.func,
+  }),
+};
+
+export default NavigationHeader;
diff --git a/apolloschurchapp/src/content-single/UniversalContentItem/index.js b/apolloschurchapp/src/content-single/UniversalContentItem/index.js
new file mode 100644
index 0000000..f02d6a9
--- /dev/null
+++ b/apolloschurchapp/src/content-single/UniversalContentItem/index.js
@@ -0,0 +1,75 @@
+import React from 'react';
+import { Animated } from 'react-native';
+import { get } from 'lodash';
+import PropTypes from 'prop-types';
+import {
+  styled,
+  GradientOverlayImage,
+  BackgroundView,
+  PaddedView,
+  H2,
+  StretchyView,
+} from '@apollosproject/ui-kit';
+import MediaControls from '../MediaControls';
+import HTMLContent from '../HTMLContent';
+import HorizontalContentFeed from '../HorizontalContentFeed';
+import Features from '../Features';
+
+const FlexedScrollView = styled({ flex: 1 })(Animated.ScrollView);
+
+const UniversalContentItem = ({ content, loading }) => {
+  const coverImageSources = get(content, 'coverImage.sources', []);
+  return (
+    <BackgroundView>
+      <StretchyView>
+        {({ Stretchy, ...scrollViewProps }) => (
+          <FlexedScrollView {...scrollViewProps}>
+            {coverImageSources.length || loading ? (
+              <Stretchy>
+                <GradientOverlayImage
+                  isLoading={!coverImageSources.length && loading}
+                  source={coverImageSources}
+                />
+              </Stretchy>
+            ) : null}
+            <MediaControls contentId={content.id} />
+            {/* fixes text/navigation spacing by adding vertical padding if we dont have an image */}
+            <PaddedView vertical={!coverImageSources.length}>
+              <H2 padded isLoading={!content.title && loading}>
+                {content.title}
+              </H2>
+              <HTMLContent contentId={content.id} />
+            </PaddedView>
+            <Features contentId={content.id} />
+            <HorizontalContentFeed contentId={content.id} />
+          </FlexedScrollView>
+        )}
+      </StretchyView>
+    </BackgroundView>
+  );
+};
+
+UniversalContentItem.propTypes = {
+  content: PropTypes.shape({
+    __typename: PropTypes.string,
+    parentChannel: PropTypes.shape({
+      name: PropTypes.string,
+    }),
+    id: PropTypes.string,
+    htmlContent: PropTypes.string,
+    title: PropTypes.string,
+    scriptures: PropTypes.arrayOf(
+      PropTypes.shape({
+        /** The ID of the verse (i.e. '1CO.15.57') */
+        id: PropTypes.string,
+        /** A human readable reference (i.e. '1 Corinthians 15:57') */
+        reference: PropTypes.string,
+        /** The scripture source to render */
+        html: PropTypes.string,
+      })
+    ),
+  }),
+  loading: PropTypes.bool,
+};
+
+export default UniversalContentItem;
diff --git a/apolloschurchapp/src/content-single/WeekendContentItem/index.js b/apolloschurchapp/src/content-single/WeekendContentItem/index.js
new file mode 100644
index 0000000..fc35716
--- /dev/null
+++ b/apolloschurchapp/src/content-single/WeekendContentItem/index.js
@@ -0,0 +1,113 @@
+import React from 'react';
+import { Animated, Dimensions } from 'react-native';
+import { get } from 'lodash';
+import PropTypes from 'prop-types';
+import {
+  styled,
+  GradientOverlayImage,
+  BackgroundView,
+  PaddedView,
+  H2,
+  StretchyView,
+  ThemeMixin,
+  ThemeConsumer,
+  CardLabel,
+  withTheme,
+} from '@apollosproject/ui-kit';
+import { LiveConsumer } from '@apollosproject/ui-connected';
+
+import MediaControls from '../MediaControls';
+import HTMLContent from '../HTMLContent';
+import HorizontalContentFeed from '../HorizontalContentFeed';
+import Features from '../Features';
+
+const FlexedScrollView = styled({ flex: 1 })(Animated.ScrollView);
+
+const Header = styled(({ hasMedia, theme }) => ({
+  paddingTop: Dimensions.get('window').width * 0.5, // for some reason % based padding still is buggy
+  alignItems: 'flex-start',
+  paddingBottom: hasMedia ? theme.sizing.baseUnit : theme.sizing.baseUnit * 2,
+  // backgroundColor: theme.colors.primary,
+}))(PaddedView);
+
+const LiveAwareLabel = withTheme(({ isLive, title, theme }) => ({
+  ...(isLive
+    ? {
+        title: 'Live',
+        type: 'secondary',
+        icon: 'live-dot',
+        iconSize: theme.helpers.rem(0.4375), // using our typographic size unit based on fontSize so that the icon scales correctly with font size changes.
+      }
+    : {
+        title,
+      }),
+}))(CardLabel);
+
+const WeekendContentItem = ({ content, loading }) => {
+  const coverImageSources = get(content, 'coverImage.sources', []);
+  return (
+    <ThemeMixin mixin={content.theme || {}}>
+      <ThemeConsumer>
+        {(theme) => (
+          <BackgroundView>
+            <StretchyView>
+              {({ Stretchy, ...scrollViewProps }) => (
+                <FlexedScrollView {...scrollViewProps}>
+                  <Header hasMedia={content.videos && content.videos.sources}>
+                    <ThemeMixin mixin={{ type: 'dark' }}>
+                      {coverImageSources.length || loading ? (
+                        <Stretchy
+                          background
+                          style={{ backgroundColor: theme.colors.primary }}
+                        >
+                          <GradientOverlayImage
+                            isLoading={!coverImageSources.length && loading}
+                            overlayColor={theme.colors.primary}
+                            overlayType="featured"
+                            source={coverImageSources}
+                          />
+                        </Stretchy>
+                      ) : null}
+                      <LiveConsumer contentId={content.id}>
+                        {(liveStream) => (
+                          <LiveAwareLabel
+                            isLive={!!liveStream}
+                            title={
+                              content.parentChannel &&
+                              content.parentChannel.name
+                            }
+                          />
+                        )}
+                      </LiveConsumer>
+                      <H2 padded isLoading={!content.title && loading}>
+                        {content.title}
+                      </H2>
+                      <HTMLContent contentId={content.id} />
+                    </ThemeMixin>
+                  </Header>
+                  <MediaControls contentId={content.id} />
+                  <Features contentId={content.id} />
+                  <HorizontalContentFeed contentId={content.id} />
+                </FlexedScrollView>
+              )}
+            </StretchyView>
+          </BackgroundView>
+        )}
+      </ThemeConsumer>
+    </ThemeMixin>
+  );
+};
+
+WeekendContentItem.propTypes = {
+  content: PropTypes.shape({
+    __typename: PropTypes.string,
+    parentChannel: PropTypes.shape({
+      name: PropTypes.string,
+    }),
+    id: PropTypes.string,
+    title: PropTypes.string,
+  }),
+  loading: PropTypes.bool,
+};
+
+export default WeekendContentItem;
diff --git a/apolloschurchapp/src/content-single/getContentItem.js b/apolloschurchapp/src/content-single/getContentItem.js
index 1106dc0..95695dd 100644
--- a/apolloschurchapp/src/content-single/getContentItem.js
+++ b/apolloschurchapp/src/content-single/getContentItem.js
@@ -1,96 +1,14 @@
 import gql from 'graphql-tag';
+import ApollosConfig from '@apollosproject/config';
 
 export default gql`
   query getContentItem($itemId: ID!) {
     node(id: $itemId) {
+      __typename
       ... on ContentItem {
-        id
-        title
-        isLiked
-        htmlContent
-        coverImage {
-          name
-          sources {
-            uri
-          }
-        }
-        theme {
-          type
-          colors {
-            primary
-            secondary
-            screen
-            paper
-          }
-        }
-        videos {
-          sources {
-            uri
-          }
-        }
-        audios {
-          sources {
-            uri
-          }
-        }
-        parentChannel {
-          id
-          name
-        }
-        sharing {
-          url
-          message
-          title
-        }
-        childContentItemsConnection {
-          edges {
-            node {
-              id
-              coverImage {
-                name
-                sources {
-                  uri
-                }
-              }
-              parentChannel {
-                id
-                name
-                iconName
-              }
-              title
-              sharing {
-                url
-                message
-                title
-              }
-            }
-          }
-        }
-        siblingContentItemsConnection {
-          edges {
-            node {
-              id
-              coverImage {
-                name
-                sources {
-                  uri
-                }
-              }
-              parentChannel {
-                id
-                name
-                iconName
-              }
-              title
-              sharing {
-                url
-                message
-                title
-              }
-            }
-          }
-        }
+        ...contentItemFragment
       }
     }
   }
+  ${ApollosConfig.FRAGMENTS.CONTENT_ITEM_FRAGMENT}
 `;
diff --git a/apolloschurchapp/src/content-single/getContentItemMinimalState.js b/apolloschurchapp/src/content-single/getContentItemMinimalState.js
deleted file mode 100644
index 762a3ff..0000000
--- a/apolloschurchapp/src/content-single/getContentItemMinimalState.js
+++ /dev/null
@@ -1,19 +0,0 @@
-import gql from 'graphql-tag';
-
-export default gql`
-  # This query is likely to get a cache hit, making it sooner to render content
-  query getContentItemMinimalState($itemId: ID!) {
-    node(id: $itemId) {
-      ... on ContentItem {
-        id
-        title
-        coverImage {
-          name
-          sources {
-            uri
-          }
-        }
-      }
-    }
-  }
-`;
diff --git a/apolloschurchapp/src/content-single/index.js b/apolloschurchapp/src/content-single/index.js
index cc55cf4..1e5b838 100644
--- a/apolloschurchapp/src/content-single/index.js
+++ b/apolloschurchapp/src/content-single/index.js
@@ -1,240 +1,17 @@
-import React, { PureComponent } from 'react';
-import { Query, Mutation } from 'react-apollo';
-import {
-  StyleSheet,
-  View,
-  ScrollView,
-  TouchableWithoutFeedback,
-} from 'react-native';
-import { get } from 'lodash';
-import PropTypes from 'prop-types';
-
-import { ErrorCard } from 'apolloschurchapp/src/ui/Card';
-import CardTile from 'apolloschurchapp/src/ui/CardTile';
-import GradientOverlayImage from 'apolloschurchapp/src/ui/GradientOverlayImage';
-import HorizontalTileFeed from 'apolloschurchapp/src/ui/HorizontalTileFeed';
-import HTMLView from 'apolloschurchapp/src/ui/HTMLView';
-import PaddedView from 'apolloschurchapp/src/ui/PaddedView';
-import { H2 } from 'apolloschurchapp/src/ui/typography';
-import BackgroundView from 'apolloschurchapp/src/ui/BackgroundView';
-import styled from 'apolloschurchapp/src/ui/styled';
-import { ThemeMixin, withTheme } from 'apolloschurchapp/src/ui/theme';
-import Icon from 'apolloschurchapp/src/ui/Icon';
-import Touchable from 'apolloschurchapp/src/ui/Touchable';
-
-import { playVideoMutation } from 'apolloschurchapp/src/ui/MediaPlayer/mutations';
-
-import getContentItem from './getContentItem';
-import getContentItemMinimalState from './getContentItemMinimalState';
-import ActionContainer from './ActionContainer';
-
-const FeedContainer = styled({
-  paddingHorizontal: 0,
-})(PaddedView);
-
-const MediaButtonsContainer = styled({
-  ...StyleSheet.absoluteFillObject,
-  justifyContent: 'center',
-  alignItems: 'center',
-  flexDirection: 'row',
-})(PaddedView);
-
-const MediaIcon = withTheme(
-  ({ theme: { colors: { lightPrimary } = {} } = {} }) => ({
-    size: 50, // TODO: should this be set in a typographic unit?
-    fill: lightPrimary, // TODO: should this reference a text color?
-  })
-)(Icon);
-
-const MediaHeader = styled({ width: '100%' })(View);
-
-const ContentContainer = styled({ paddingVertical: 0 })(PaddedView);
-
-class ContentSingle extends PureComponent {
-  static navigationOptions = ({ navigation }) => {
-    const shareObject = navigation.getParam('sharing', 'Content');
-    const itemId = navigation.getParam('itemId', []);
-    return {
-      title: shareObject.title,
-      headerRight: <ActionContainer itemId={itemId} content={shareObject} />,
-    };
-  };
-
-  static propTypes = {
-    navigation: PropTypes.shape({
-      getParam: PropTypes.func,
-      push: PropTypes.func,
-    }),
-  };
-
-  constructor(props) {
-    super(props);
-
-    this.itemId = { itemId: props.navigation.getParam('itemId', []) };
-    this.loadingStateObject = {
-      node: {
-        id: 'fakeId0',
-        title: '',
-        isLoading: true,
-      },
-    };
-  }
-
-  handleOnPressItem(item) {
-    this.props.navigation.push('ContentSingle', {
-      itemId: item.id,
-      sharing: item.sharing,
-    });
-  }
-
-  renderItem = ({ item, index }) => (
-    <TouchableWithoutFeedback onPress={() => this.handleOnPressItem(item)}>
-      <CardTile
-        number={index + 1}
-        title={get(item, 'title', '')}
-        /*
-          * These are props that are not yet being passed in the data.
-          * We will need to make sure they get added back when that data is available.
-          * byLine={item.content.speaker}
-          * date={item.meta.date}
-          */
-        isLoading={item.isLoading}
-      />
-    </TouchableWithoutFeedback>
-  );
-
-  render() {
-    return (
-      <Query
-        query={getContentItemMinimalState}
-        variables={this.itemId}
-        fetchPolicy="cache-only"
-      >
-        {({ data: cachedData }) => (
-          <Query
-            query={getContentItem}
-            variables={this.itemId}
-            fetchPolicy="cache-and-network"
-          >
-            {({ loading, error, data }) => {
-              if (error) return <ErrorCard error={error} />;
-
-              const content = {
-                ...((cachedData && cachedData.node) || {}),
-                ...((data && data.node) || {}),
-              };
-
-              const childContent = get(
-                data,
-                'node.childContentItemsConnection.edges',
-                []
-              ).map((edge) => edge.node);
-
-              const siblingContent = get(
-                data,
-                'node.siblingContentItemsConnection.edges',
-                []
-              ).map((edge) => edge.node);
-
-              const horizontalContent = siblingContent.length
-                ? siblingContent
-                : childContent;
-
-              const videoSource = get(content, 'videos[0].sources[0]', null);
-              const audioSource = get(content, 'audios[0].sources[0]', null);
-              const coverImageSources = get(content, 'coverImage.sources', []);
-
-              return (
-                <ThemeMixin
-                  mixin={{
-                    type: get(content, 'theme.type', 'light').toLowerCase(),
-                    colors: get(content, 'theme.colors'),
-                  }}
-                >
-                  <ScrollView>
-                    <MediaHeader>
-                      <GradientOverlayImage
-                        source={coverImageSources}
-                        overlayColor={get(content, 'theme.colors.paper')}
-                      />
-
-                      <Mutation mutation={playVideoMutation}>
-                        {(play) => (
-                          <MediaButtonsContainer>
-                            {videoSource ? (
-                              <Touchable
-                                onPress={() =>
-                                  play({
-                                    variables: {
-                                      mediaSource: videoSource,
-                                      posterSources: coverImageSources,
-                                      title: content.title,
-                                      isVideo: true,
-                                      artist: get(
-                                        content,
-                                        'parentChannel.name'
-                                      ),
-                                    },
-                                  })
-                                }
-                              >
-                                <MediaIcon name="video" />
-                              </Touchable>
-                            ) : null}
-                            {audioSource ? (
-                              <Touchable
-                                onPress={() =>
-                                  play({
-                                    variables: {
-                                      mediaSource: audioSource,
-                                      posterSources: coverImageSources,
-                                      title: content.title,
-                                      isVideo: false,
-                                      artist: get(
-                                        content,
-                                        'parentChannel.name'
-                                      ),
-                                    },
-                                  })
-                                }
-                              >
-                                <MediaIcon name="audio" />
-                              </Touchable>
-                            ) : null}
-                          </MediaButtonsContainer>
-                        )}
-                      </Mutation>
-                    </MediaHeader>
-                    <BackgroundView>
-                      <ContentContainer>
-                        <H2 padded isLoading={!content.title && loading}>
-                          {content.title}
-                        </H2>
-                        <HTMLView isLoading={!content.htmlContent && loading}>
-                          {content.htmlContent}
-                        </HTMLView>
-                      </ContentContainer>
-                    </BackgroundView>
-                    {(horizontalContent && horizontalContent.length) ||
-                    loading ? (
-                      <FeedContainer>
-                        <HorizontalTileFeed
-                          content={horizontalContent}
-                          isLoading={loading}
-                          loadingStateObject={this.loadingStateObject}
-                          renderItem={this.renderItem}
-                        />
-                      </FeedContainer>
-                    ) : null}
-                  </ScrollView>
-                </ThemeMixin>
-              );
-            }}
-          </Query>
-        )}
-      </Query>
-    );
+import { createStackNavigator } from 'react-navigation';
+
+import ContentSingle from './ContentSingle';
+
+const ContentSingleNavigator = createStackNavigator(
+  {
+    ContentSingle,
+  },
+  {
+    initialRouteName: 'ContentSingle',
+    headerMode: 'float',
+    headerTransitionPreset: 'fade-in-place',
+    navigationOptions: { header: null },
   }
-}
+);
 
-export default ContentSingle;
+export default ContentSingleNavigator;
diff --git a/apolloschurchapp/src/content-single/updateLikeEntity.js b/apolloschurchapp/src/content-single/updateLikeEntity.js
deleted file mode 100644
index 155511a..0000000
--- a/apolloschurchapp/src/content-single/updateLikeEntity.js
+++ /dev/null
@@ -1,17 +0,0 @@
-import gql from 'graphql-tag';
-
-export default gql`
-  mutation updateLikeEntity(
-    $itemId: ID!
-    $sessionId: ID!
-    $operation: LIKE_OPERATION!
-  ) {
-    updateLikeEntity(
-      input: { nodeId: $itemId, sessionId: $sessionId, operation: $operation }
-    ) {
-      id
-      operation
-      interactionDateTime
-    }
-  }
-`;
diff --git a/apolloschurchapp/src/event/Event.js b/apolloschurchapp/src/event/Event.js
new file mode 100644
index 0000000..be51790
--- /dev/null
+++ b/apolloschurchapp/src/event/Event.js
@@ -0,0 +1,75 @@
+import React from 'react';
+import { get } from 'lodash';
+import PropTypes from 'prop-types';
+import moment from 'moment';
+import InAppBrowser from 'react-native-inappbrowser-reborn';
+import {
+  GradientOverlayImage,
+  BackgroundView,
+  PaddedView,
+  H2,
+  Paragraph,
+  StretchyView,
+} from '@apollosproject/ui-kit';
+import HTMLView from '@apollosproject/ui-htmlview';
+
+import { FlexedScrollView, EventInfoItem } from './components';
+
+const handlePressAnchor = (url) => {
+  InAppBrowser.open(url);
+};
+
+const Event = ({ event, loading }) => {
+  const coverImageSources = get(event, 'image.sources', []);
+  return (
+    <BackgroundView>
+      <StretchyView>
+        {({ Stretchy, ...scrollViewProps }) => (
+          <FlexedScrollView {...scrollViewProps}>
+            {coverImageSources.length || loading ? (
+              <Stretchy>
+                <GradientOverlayImage
+                  isLoading={!coverImageSources.length && loading}
+                  source={coverImageSources}
+                />
+              </Stretchy>
+            ) : null}
+            <PaddedView vertical={false}>
+              <H2 padded isLoading={!event.name && loading}>
+                {event.name}
+              </H2>
+              <Paragraph>
+                <EventInfoItem
+                  icon={'time'}
+                  title={moment(event.start).format('ddd, MMMM Do, YYYY')}
+                  subtitle={`${moment(event.start).format('LT')} — ${moment(
+                    event.end
+                  ).format('LT')}`}
+                />
+                <EventInfoItem icon={'pin'} title={event.location} />
+              </Paragraph>
+              <HTMLView isLoading={loading} onPressAnchor={handlePressAnchor}>
+                {event.description}
+              </HTMLView>
+            </PaddedView>
+          </FlexedScrollView>
+        )}
+      </StretchyView>
+    </BackgroundView>
+  );
+};
+
+Event.propTypes = {
+  event: PropTypes.shape({
+    __typename: PropTypes.string,
+    id: PropTypes.string,
+    name: PropTypes.string,
+    description: PropTypes.string,
+    start: PropTypes.string,
+    end: PropTypes.string,
+    location: PropTypes.string,
+  }),
+  loading: PropTypes.bool,
+};
+
+export default Event;
diff --git a/apolloschurchapp/src/event/Event.tests.js b/apolloschurchapp/src/event/Event.tests.js
new file mode 100644
index 0000000..03e543f
--- /dev/null
+++ b/apolloschurchapp/src/event/Event.tests.js
@@ -0,0 +1,31 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+import moment from 'moment';
+
+import Providers from '../Providers';
+
+import Event from './Event';
+
+describe('The Event component', () => {
+  it('should render', () => {
+    const tree = renderer.create(
+      <Providers>
+        <Event
+          event={{
+            __typename: 'Event',
+            id: 'Event:123',
+            start: moment('2019-09-26T15:10:51.200Z')
+              .utc()
+              .toJSON(),
+            end: moment('2019-09-26T17:10:51.200Z')
+              .utc()
+              .toJSON(),
+            location: 'Willow Creek, Chicago',
+            image: { sources: [{ url: 'https://url.com/image.jpg' }] },
+          }}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/event/EventConnected.js b/apolloschurchapp/src/event/EventConnected.js
new file mode 100644
index 0000000..71f0a3b
--- /dev/null
+++ b/apolloschurchapp/src/event/EventConnected.js
@@ -0,0 +1,81 @@
+import React, { PureComponent } from 'react';
+import { Query } from 'react-apollo';
+import { get } from 'lodash';
+import PropTypes from 'prop-types';
+
+import { ErrorCard, ThemeMixin } from '@apollosproject/ui-kit';
+
+import { TrackEventWhenLoaded } from '@apollosproject/ui-analytics';
+
+import NavigationHeader from '../content-single/NavigationHeader';
+import Event from './Event';
+import GET_EVENT from './getEvent';
+
+class EventConnected extends PureComponent {
+  static propTypes = {
+    navigation: PropTypes.shape({
+      getParam: PropTypes.func,
+      push: PropTypes.func,
+    }),
+  };
+
+  static navigationOptions = {
+    header: NavigationHeader,
+    headerTransparent: true,
+    headerMode: 'float',
+  };
+
+  get eventId() {
+    return this.props.navigation.getParam('eventId', []);
+  }
+
+  get queryVariables() {
+    return { eventId: this.eventId };
+  }
+
+  renderWithData = ({ loading, error, data }) => {
+    if (error) return <ErrorCard error={error} />;
+
+    const event = data.node || {};
+
+    const { theme = {} } = event;
+
+    return (
+      <ThemeMixin
+        mixin={{
+          type: get(theme, 'type', 'light').toLowerCase(),
+          colors: get(theme, 'colors'),
+        }}
+      >
+        <TrackEventWhenLoaded
+          loaded={!!(!loading && event.name)}
+          eventName={'View Event'}
+          properties={{
+            title: event.name,
+            eventId: this.eventId,
+          }}
+        />
+        <Event
+          id={this.eventId}
+          event={event}
+          loading={loading}
+          error={error}
+        />
+      </ThemeMixin>
+    );
+  };
+
+  render() {
+    return (
+      <Query
+        query={GET_EVENT}
+        fetchPolicy="network-only"
+        variables={this.queryVariables}
+      >
+        {this.renderWithData}
+      </Query>
+    );
+  }
+}
+
+export default EventConnected;
diff --git a/apolloschurchapp/src/event/EventConnected.tests.js b/apolloschurchapp/src/event/EventConnected.tests.js
new file mode 100644
index 0000000..c32b77e
--- /dev/null
+++ b/apolloschurchapp/src/event/EventConnected.tests.js
@@ -0,0 +1,53 @@
+import React from 'react';
+
+import moment from 'moment';
+import Providers from '../Providers';
+
+import { renderWithApolloData } from '../utils/testUtils';
+import getEvent from './getEvent';
+import EventConnected from './EventConnected';
+
+const mocks = {
+  request: {
+    query: getEvent,
+    variables: { eventId: 'Event:123' },
+  },
+  result: {
+    data: {
+      node: {
+        __typename: 'Event',
+        id: 'Event:123',
+        start: moment('2019-09-26T15:10:51.200Z')
+          .utc()
+          .toJSON(),
+        end: moment('2019-09-26T17:10:51.200Z')
+          .utc()
+          .toJSON(),
+        location: 'Willow Creek, Chicago',
+        name: 'Cookout',
+        description: 'Some detailed description',
+        image: {
+          __typename: 'ImageMedia',
+          sources: [
+            {
+              uri: 'https://url.com/image.jpg',
+              __typename: 'ImageMediaSource',
+            },
+          ],
+        },
+      },
+    },
+  },
+};
+
+describe('EventConnected component', () => {
+  it('renders without errors', async () => {
+    const tree = await renderWithApolloData(
+      <Providers mocks={[mocks]}>
+        <EventConnected navigation={{ getParam: () => 'Event:123' }} />
+      </Providers>
+    );
+
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/event/components.js b/apolloschurchapp/src/event/components.js
new file mode 100644
index 0000000..f227415
--- /dev/null
+++ b/apolloschurchapp/src/event/components.js
@@ -0,0 +1,44 @@
+import React from 'react';
+import { Animated, View } from 'react-native';
+import PropTypes from 'prop-types';
+import { styled, withTheme, H6, H4, Icon } from '@apollosproject/ui-kit';
+
+const FlexedScrollView = styled({ flex: 1 })(Animated.ScrollView);
+
+const StyledIcon = withTheme(({ theme: { colors, sizing } }) => ({
+  fill: colors.text.tertiary,
+  size: sizing.baseUnit * 1.5,
+  style: {
+    marginRight: 8,
+  },
+}))(Icon);
+
+const StyledH6 = styled(({ theme: { colors, sizing } }) => ({
+  color: colors.text.tertiary,
+  fontSize: sizing.baseUnit * 0.875,
+  marginTop: sizing.baseUnit / 4,
+}))(H6);
+
+const EventInfoContainer = styled({ marginBottom: 24, flexDirection: 'row' })(
+  View
+);
+
+const TextContainer = styled({ flexDirection: 'column' })(View);
+
+const EventInfoItem = ({ icon, title, subtitle }) => (
+  <EventInfoContainer>
+    <StyledIcon name={icon} />
+    <TextContainer>
+      <H4 bold>{title}</H4>
+      <StyledH6>{subtitle}</StyledH6>
+    </TextContainer>
+  </EventInfoContainer>
+);
+
+EventInfoItem.propTypes = {
+  icon: PropTypes.string.isRequired,
+  title: PropTypes.string,
+  subtitle: PropTypes.string,
+};
+
+export { FlexedScrollView, EventInfoItem };
diff --git a/apolloschurchapp/src/event/getEvent.js b/apolloschurchapp/src/event/getEvent.js
new file mode 100644
index 0000000..059cb9f
--- /dev/null
+++ b/apolloschurchapp/src/event/getEvent.js
@@ -0,0 +1,29 @@
+import gql from 'graphql-tag';
+
+export const EVENT_FRAGMENT = gql`
+  fragment eventFragment on Event {
+    id
+    name
+    location
+    start
+    end
+    description
+    image {
+      sources {
+        uri
+      }
+    }
+  }
+`;
+
+export default gql`
+  query getEvent($eventId: ID!) {
+    node(id: $eventId) {
+      __typename
+      ... on Event {
+        ...eventFragment
+      }
+    }
+  }
+  ${EVENT_FRAGMENT}
+`;
diff --git a/apolloschurchapp/src/event/index.js b/apolloschurchapp/src/event/index.js
new file mode 100644
index 0000000..b065c4c
--- /dev/null
+++ b/apolloschurchapp/src/event/index.js
@@ -0,0 +1,17 @@
+import { createStackNavigator } from 'react-navigation';
+
+import Event from './EventConnected';
+
+const EventNavigator = createStackNavigator(
+  {
+    Event,
+  },
+  {
+    initialRouteName: 'Event',
+    headerMode: 'float',
+    headerTransitionPreset: 'fade-in-place',
+    navigationOptions: { header: null },
+  }
+);
+
+export default EventNavigator;
diff --git a/apolloschurchapp/src/index.js b/apolloschurchapp/src/index.js
index 2bab565..114240e 100644
--- a/apolloschurchapp/src/index.js
+++ b/apolloschurchapp/src/index.js
@@ -1,45 +1,75 @@
+import hoistNonReactStatic from 'hoist-non-react-statics';
 import React from 'react';
-import { createStackNavigator } from 'react-navigation';
-// import { Sentry } from 'react-native-sentry';
+import { StatusBar } from 'react-native';
+import { createStackNavigator, createAppContainer } from 'react-navigation';
+import SplashScreen from 'react-native-splash-screen';
 
-import BackgroundView from 'apolloschurchapp/src/ui/BackgroundView';
-import MediaPlayer from 'apolloschurchapp/src/ui/MediaPlayer';
+import { BackgroundView, withTheme } from '@apollosproject/ui-kit';
+import Passes from '@apollosproject/ui-passes';
+import { MediaPlayer } from '@apollosproject/ui-media-player';
+import Auth, { ProtectedRoute } from '@apollosproject/ui-auth';
 
 import Providers from './Providers';
+import NavigationService from './NavigationService';
 import ContentSingle from './content-single';
+import Event from './event';
 import Tabs from './tabs';
-import Auth from './auth';
+import PersonalDetails from './user-settings/PersonalDetails';
+import ChangePassword from './user-settings/ChangePassword';
+import Location from './user-settings/Locations';
+import LandingScreen from './LandingScreen';
+import UserWebBrowser from './user-web-browser';
+import Onboarding from './ui/Onboarding';
 
-// Sentry.config(
-//   'https://5908fa19ed37447f86b2717423cadec5:45dd3b58792b413cb67109c5e63a0bb7@sentry.io/1241658'
-// ).install();
+const AppStatusBar = withTheme(({ theme }) => ({
+  barStyle: 'dark-content',
+  backgroundColor: theme.colors.paper,
+}))(StatusBar);
 
-const AppStackNavigator = createStackNavigator(
+const ProtectedRouteWithSplashScreen = (props) => {
+  const handleOnRouteChange = () => SplashScreen.hide();
+
+  return <ProtectedRoute {...props} onRouteChange={handleOnRouteChange} />;
+};
+
+// Hack to avoid needing to pass emailRequired through the navigator.navigate
+const EnhancedAuth = (props) => <Auth {...props} emailRequired />;
+// 😑
+hoistNonReactStatic(EnhancedAuth, Auth);
+
+const AppNavigator = createStackNavigator(
   {
+    ProtectedRoute: ProtectedRouteWithSplashScreen,
     Tabs,
     ContentSingle,
+    Event,
+    Auth: EnhancedAuth,
+    PersonalDetails,
+    ChangePassword,
+    Location,
+    Passes,
+    UserWebBrowser,
+    Onboarding,
+    LandingScreen,
   },
   {
-    initialRouteName: 'Tabs',
-  }
-);
-
-const AppModalNavigator = createStackNavigator(
-  {
-    AppStackNavigator,
-    Auth,
-  },
-  {
-    initialRouteName: 'AppStackNavigator',
+    initialRouteName: 'ProtectedRoute',
     mode: 'modal',
-    headerMode: 'none',
+    headerMode: 'screen',
   }
 );
 
+const AppContainer = createAppContainer(AppNavigator);
+
 const App = () => (
   <Providers>
     <BackgroundView>
-      <AppModalNavigator />
+      <AppStatusBar barStyle="dark-content" />
+      <AppContainer
+        ref={(navigatorRef) => {
+          NavigationService.setTopLevelNavigator(navigatorRef);
+        }}
+      />
       <MediaPlayer />
     </BackgroundView>
   </Providers>
diff --git a/apolloschurchapp/src/live/LiveButton.js b/apolloschurchapp/src/live/LiveButton.js
deleted file mode 100644
index 5604424..0000000
--- a/apolloschurchapp/src/live/LiveButton.js
+++ /dev/null
@@ -1,54 +0,0 @@
-import React from 'react';
-import { Query } from 'react-apollo';
-import { get } from 'lodash';
-
-import { UIText } from 'apolloschurchapp/src/ui/typography';
-import Card, { CardContent } from 'apolloschurchapp/src/ui/Card';
-import Touchable from 'apolloschurchapp/src/ui/Touchable';
-import styled from 'apolloschurchapp/src/ui/styled';
-import ChannelLabel from 'apolloschurchapp/src/ui/ChannelLabel';
-import { WebBrowserConsumer } from 'apolloschurchapp/src/ui/WebBrowser';
-
-import getLiveStream from './getLiveStream';
-
-const LiveCard = styled(({ theme }) => ({
-  backgroundColor: theme.colors.lightSecondary,
-}))(Card);
-
-const LiveNowButton = () => (
-  <Query
-    query={getLiveStream}
-    fetchPolicy="cache-and-network"
-    pollInterval={60000}
-  >
-    {({ loading, data }) => {
-      const isLive = get(data, 'liveStream.isLive', false);
-
-      return isLive ? (
-        <WebBrowserConsumer>
-          {(openUrl) => (
-            <Touchable
-              onPress={() => openUrl('https://apollos.churchonline.org/')}
-            >
-              <LiveCard isLoading={loading}>
-                <CardContent>
-                  <ChannelLabel
-                    icon="video"
-                    label={
-                      <UIText>
-                        <UIText bold>{`We're live.`} </UIText>
-                        Watch now!
-                      </UIText>
-                    }
-                  />
-                </CardContent>
-              </LiveCard>
-            </Touchable>
-          )}
-        </WebBrowserConsumer>
-      ) : null;
-    }}
-  </Query>
-);
-
-export default LiveNowButton;
diff --git a/apolloschurchapp/src/live/LiveButton.tests.js b/apolloschurchapp/src/live/LiveButton.tests.js
deleted file mode 100644
index 0ac2b75..0000000
--- a/apolloschurchapp/src/live/LiveButton.tests.js
+++ /dev/null
@@ -1,32 +0,0 @@
-import React from 'react';
-import renderer from 'react-test-renderer';
-
-import Providers from 'apolloschurchapp/src/Providers';
-
-import LiveNowButton from './LiveButton';
-import getLiveStream from './getLiveStream';
-
-const mocks = [
-  {
-    request: {
-      query: getLiveStream,
-      variables: {
-        isLive: true,
-      },
-    },
-    result: {
-      data: {
-        liveStream: { isLive: true },
-      },
-    },
-  },
-];
-
-it('renders without error', () => {
-  const tree = renderer.create(
-    <Providers mocks={mocks} addTypename={false}>
-      <LiveNowButton isLive />
-    </Providers>
-  );
-  expect(tree).toMatchSnapshot();
-});
diff --git a/apolloschurchapp/src/live/getLiveStream.js b/apolloschurchapp/src/live/getLiveStream.js
deleted file mode 100644
index 55ae4e5..0000000
--- a/apolloschurchapp/src/live/getLiveStream.js
+++ /dev/null
@@ -1,9 +0,0 @@
-import gql from 'graphql-tag';
-
-export default gql`
-  query getLiveStream {
-    liveStream {
-      isLive
-    }
-  }
-`;
diff --git a/apolloschurchapp/src/live/index.js b/apolloschurchapp/src/live/index.js
deleted file mode 100644
index 1612958..0000000
--- a/apolloschurchapp/src/live/index.js
+++ /dev/null
@@ -1 +0,0 @@
-export LiveButton from './LiveButton';
diff --git a/apolloschurchapp/src/scripture/ScriptureConnected.tests.js b/apolloschurchapp/src/scripture/ScriptureConnected.tests.js
new file mode 100644
index 0000000..9ee5618
--- /dev/null
+++ b/apolloschurchapp/src/scripture/ScriptureConnected.tests.js
@@ -0,0 +1,39 @@
+import React from 'react';
+
+import Providers from '../Providers';
+
+import { renderWithApolloData } from '../utils/testUtils';
+import getScripture from './getScripture';
+import ScriptureConnected from '.';
+
+const mocks = {
+  request: {
+    query: getScripture,
+    variables: { query: 'Genesis 1:1' },
+  },
+  result: {
+    data: {
+      scripture: {
+        __typename: 'Scripture',
+        id: 'GEN.1.1',
+        reference: 'Genesis 1:1',
+        copyright: 'PUBLIC DOMAIN',
+        version: 'WEB',
+        html:
+          '<p class="p"><span data-number="1" class="v">1</span>In the beginning, God created the heavens and the earth. </p>',
+      },
+    },
+  },
+};
+
+describe('ScriptureConnected component', () => {
+  it('renders without errors', async () => {
+    const tree = await renderWithApolloData(
+      <Providers mocks={[mocks]}>
+        <ScriptureConnected references={['Genesis 1:1']} />
+      </Providers>
+    );
+
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/Scripture/getScripture.js b/apolloschurchapp/src/scripture/getScripture.js
similarity index 51%
rename from apolloschurchapp/src/ui/Scripture/getScripture.js
rename to apolloschurchapp/src/scripture/getScripture.js
index 871ef03..2988861 100644
--- a/apolloschurchapp/src/ui/Scripture/getScripture.js
+++ b/apolloschurchapp/src/scripture/getScripture.js
@@ -1,10 +1,11 @@
 import gql from 'graphql-tag';
+import ApollosConfig from '@apollosproject/config';
 
 export default gql`
   query GetScripture($query: String!) {
     scripture(query: $query) {
-      reference
-      html
+      ...ScriptureFragment
     }
   }
+  ${ApollosConfig.FRAGMENTS.SCRIPTURE_FRAGMENT}
 `;
diff --git a/apolloschurchapp/src/scripture/index.js b/apolloschurchapp/src/scripture/index.js
new file mode 100644
index 0000000..e6c6295
--- /dev/null
+++ b/apolloschurchapp/src/scripture/index.js
@@ -0,0 +1,42 @@
+import React from 'react';
+import { Query } from 'react-apollo';
+import { get } from 'lodash';
+import PropTypes from 'prop-types';
+import { ScriptureItem } from '@apollosproject/ui-scripture';
+import GET_SCRIPTURE from './getScripture';
+
+/**
+ * This is the data-bound "connected" scripture component.
+ * Maps over the array of references, does a query to the API for each reference,
+ * then passes that returned data to the ScriptureComponent for rendering.
+ */
+const ScriptureConnected = ({
+  ScriptureComponent = ScriptureItem,
+  references,
+}) =>
+  references.map((query) => (
+    <Query query={GET_SCRIPTURE} variables={{ query }} key={query}>
+      {({ loading, data }) => (
+        <ScriptureComponent
+          reference={get(data, 'scripture.reference', '')}
+          html={get(data, 'scripture.html', '')}
+          copyright={get(data, 'scripture.copyright', '')}
+          version={get(data, 'scripture.version', '')}
+          isLoading={loading}
+        />
+      )}
+    </Query>
+  ));
+
+/**
+ * Props passed to this connected component:
+ * ScriptureComponent: An optional component that would allow you to display
+ * scripture your way. Defaults to ScriptureItem.
+ * references: An array of strings of Bible verses (i.e. ['Genesis 1:1'])
+ */
+ScriptureConnected.propTypes = {
+  ScriptureComponent: PropTypes.element,
+  references: PropTypes.arrayOf(PropTypes.string),
+};
+
+export default ScriptureConnected;
diff --git a/apolloschurchapp/src/store/Auth.tests.js b/apolloschurchapp/src/store/Auth.tests.js
deleted file mode 100644
index da6b401..0000000
--- a/apolloschurchapp/src/store/Auth.tests.js
+++ /dev/null
@@ -1,11 +0,0 @@
-import { client } from 'apolloschurchapp/src/client';
-
-import { resolvers } from '.';
-
-describe('Auth Store', () => {
-  it('logs a user out', async () => {
-    client.cache.writeData({ data: { authToken: 'some-auth-token' } });
-    resolvers.Mutation.logout({}, {}, { cache: client.cache });
-    expect(client.cache).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/store/MediaPlayer.tests.js b/apolloschurchapp/src/store/MediaPlayer.tests.js
deleted file mode 100644
index 68724b9..0000000
--- a/apolloschurchapp/src/store/MediaPlayer.tests.js
+++ /dev/null
@@ -1,58 +0,0 @@
-import { client } from 'apolloschurchapp/src/client';
-import gql from 'graphql-tag';
-
-import { resolvers, defaults } from '.';
-
-const query = gql`
-  query {
-    mediaPlayer @client {
-      currentTrack {
-        mediaSourceUri
-        posterSourceUri
-        title
-        artist
-      }
-      isPlaying
-      isFullscreen
-      isVisible
-    }
-  }
-`;
-
-const testTrack = {
-  parentId: 'parentId',
-  mediaSourceUri: 'mediaSourceUri',
-  posterSourceUri: 'posterSourceUri',
-  title: 'title',
-  artist: 'artist',
-};
-
-describe('MediaPlayer Store', () => {
-  beforeEach(() => {
-    client.writeData({ data: defaults });
-  });
-
-  it('plays a track', async () => {
-    resolvers.Mutation.mediaPlayerPlayNow({}, testTrack, {
-      cache: client.cache,
-    });
-    expect(client.query({ query })).resolves.toMatchSnapshot();
-  });
-  it('updates player state', async () => {
-    resolvers.Mutation.mediaPlayerPlayNow({}, testTrack, {
-      cache: client.cache,
-    });
-    expect(client.query({ query })).resolves.toMatchSnapshot();
-    resolvers.Mutation.mediaPlayerUpdateState(
-      {},
-      { isPlaying: false },
-      { cache: client.cache }
-    );
-    expect(client.query({ query })).resolves.toMatchSnapshot();
-    resolvers.Mutation.mediaPlayerUpdateState(
-      {},
-      { isPlaying: true },
-      { cache: client.cache }
-    );
-  });
-});
diff --git a/apolloschurchapp/src/store/getSessionId.js b/apolloschurchapp/src/store/getSessionId.js
deleted file mode 100644
index 4e31262..0000000
--- a/apolloschurchapp/src/store/getSessionId.js
+++ /dev/null
@@ -1,7 +0,0 @@
-import gql from 'graphql-tag';
-
-export default gql`
-  query sessionId {
-    sessionId @client
-  }
-`;
diff --git a/apolloschurchapp/src/store/index.js b/apolloschurchapp/src/store/index.js
index fcf775f..66fdccb 100644
--- a/apolloschurchapp/src/store/index.js
+++ b/apolloschurchapp/src/store/index.js
@@ -1,216 +1,62 @@
-import { merge, get } from 'lodash';
 import gql from 'graphql-tag';
-import { client } from '../client'; // eslint-disable-line
-import getAuthToken from './getAuthToken';
-import getSessionId from './getSessionId';
+
+import { schema as mediaPlayerSchema } from '@apollosproject/ui-media-player';
+import { updatePushId } from '@apollosproject/ui-notifications';
+import { CACHE_LOADED } from '../client/cache'; // eslint-disable-line
+
 // TODO: this will require more organization...ie...not keeping everything in one file.
 // But this is simple while our needs our small.
 
 export const schema = `
   type Query {
-    authToken: String
-    sessionId: String
-    mediaPlayer: MediaPlayerState
+    devicePushId: String
+    cacheLoaded: Boolean
+    notificationsEnabled: Boolean
   }
 
   type Mutation {
-    logout
-    mediaPlayerUpdateState(isPlaying: Boolean, isFullscreen: Boolean, isVisible: Boolean): Boolean
-    mediaPlayerSetPlayhead(currentTime: Float): Boolean
-    mediaPlayerPlayNow(
-      parentId: ID,
-      mediaSource: VideoMediaSource!,
-      posterSources: [ImageMediaSource],
-      title: String,
-      artist: String,
-      isVideo: Boolean,
-    ): Boolean
-
-    handleLogin(authToken: String!)
-  }
-
-  type MediaPlayerState {
-    currentTrack: MediaPlayerTrack
-    isPlaying: Boolean
-    isFullscreen: Boolean
-    isVisible: Boolean
-    currentTime: Float
-  }
-
-  type MediaPlayerProgress {
-    currentTime: Float
-    playableDuration: Float
-    seekableDuration: Float
-    duration: Float
-  }
-
-  type MediaPlayerTrack {
-    id: ID!
-    parentId: ID
-    mediaSource: VideoMediaSource!
-    posterSources: [ImageMediaSource]
-    title: String
-    artist: String
-    isVideo: Boolean
+    cacheMarkLoaded
+    updateDevicePushId(pushId: String!)
+    updatePushPermissions(enabled: Boolean!)
   }
+${mediaPlayerSchema}
 `;
 
 export const defaults = {
-  authToken: null,
-  sessionId: null,
-  mediaPlayer: {
-    __typename: 'MediaPlayerState',
-    currentTrack: null,
-    isPlaying: false,
-    isFullscreen: false,
-    isVisible: false,
-    currentTime: 0,
-  },
+  __typename: 'Query',
+  cacheLoaded: false,
 };
 
-let trackId = 0;
+const GET_LOGGED_IN = gql`
+  query {
+    isLoggedIn @client
+  }
+`;
 
 export const resolvers = {
   Mutation: {
-    logout: (root, variables, { cache }) => {
-      client.resetStore();
-      cache.writeData({ data: { authToken: null, sessionId: null } });
-      return null;
-    },
-
-    handleLogin: async (root, { authToken }, { cache }) => {
-      const createSessionMutation = gql`
-        mutation {
-          createSession {
-            id
-          }
-        }
-      `;
-
-      try {
-        await cache.writeQuery({
-          query: getAuthToken,
-          data: { authToken },
-        });
-
-        const {
-          data: { createSession },
-        } = await client.mutate({
-          mutation: createSessionMutation,
-        });
-
-        await cache.writeQuery({
-          query: getSessionId,
-          data: { sessionId: createSession.id },
-        });
-      } catch (e) {
-        console.log(e);
-      }
-    },
-    mediaPlayerPlayNow: (root, trackInfo, { cache }) => {
-      const query = gql`
-        query {
-          mediaPlayer {
-            isFullscreen
-          }
-        }
-      `;
-      const track = merge(
-        {
-          __typename: 'MediaPlayerTrack',
-          parentId: null,
-          mediaSource: null,
-          posterSources: null,
-          title: null,
-          artist: null,
-          isVideo: false,
-        },
-        trackInfo
-      );
-
-      const { mediaPlayer } = cache.readQuery({ query });
-
-      const newMediaPlayerState = {
-        __typename: 'MediaPlayerState',
-        isPlaying: true,
-        isVisible: true,
-        isFullscreen: track.isVideo
-          ? true
-          : (mediaPlayer && mediaPlayer.isFullscreen) || false,
-        currentTrack: track,
-        currentTime: 0,
-      };
-
-      if (
-        // if same track
-        mediaPlayer &&
-        mediaPlayer.currentTrack &&
-        mediaPlayer.currentTrack.mediaSource.uri === track.mediaSource.uri
-      ) {
-        // use the same Id
-        newMediaPlayerState.currentTrack.id = mediaPlayer.currentTrack.id;
-      } else {
-        // otherwise reset progress and use new Id
-        newMediaPlayerState.currentTrack.id = trackId;
-        newMediaPlayerState.progress = null;
-        trackId += 1;
-      }
-
-      cache.writeData({
-        query,
-        data: {
-          mediaPlayer: newMediaPlayerState,
-        },
-      });
-      return null;
-    },
-    mediaPlayerUpdateState: (
-      root,
-      { isPlaying, isFullscreen, isVisible },
-      { cache }
-    ) => {
-      const query = gql`
-        query {
-          mediaPlayer @client {
-            isPlaying
-            isFullscreen
-            isVisible
-          }
-        }
-      `;
-      const { mediaPlayer } = cache.readQuery({ query });
+    cacheMarkLoaded: async (root, args, { cache, client }) => {
       cache.writeQuery({
-        query,
+        query: CACHE_LOADED,
         data: {
-          mediaPlayer: merge(mediaPlayer, {
-            isPlaying,
-            isFullscreen,
-            isVisible,
-            __typename: 'MediaPlayerState',
-          }),
+          cacheLoaded: true,
         },
       });
-      return null;
-    },
-    mediaPlayerSetPlayhead: (root, { currentTime }, { cache }) => {
-      const query = gql`
-        query {
-          mediaPlayer @client {
-            currentTime
+      const { data: { isLoggedIn } = {} } = await client.query({
+        query: GET_LOGGED_IN,
+      });
+
+      const { pushId } = cache.readQuery({
+        query: gql`
+          query {
+            pushId @client
           }
-        }
-      `;
-      const { mediaPlayer } = cache.readQuery({ query });
-      cache.writeQuery({
-        query,
-        data: {
-          mediaPlayer: {
-            __typename: 'MediaPlayerState',
-            currentTime:
-              currentTime || get(mediaPlayer.progress, 'currentTime') || 0,
-          },
-        },
+        `,
       });
+
+      if (isLoggedIn && pushId) {
+        updatePushId({ pushId, client });
+      }
       return null;
     },
   },
diff --git a/apolloschurchapp/src/tabs/connect/ActionBar.js b/apolloschurchapp/src/tabs/connect/ActionBar.js
new file mode 100644
index 0000000..2c3e5cd
--- /dev/null
+++ b/apolloschurchapp/src/tabs/connect/ActionBar.js
@@ -0,0 +1,37 @@
+import React from 'react';
+import { ActionBar, ActionBarItem } from '@apollosproject/ui-kit';
+import { withNavigation } from 'react-navigation';
+import PropTypes from 'prop-types';
+import { WebBrowserConsumer } from '../../ui/WebBrowser';
+
+const Toolbar = ({ navigation }) => (
+  <WebBrowserConsumer>
+    {(openUrl) => (
+      <ActionBar>
+        <ActionBarItem
+          onPress={() => navigation.navigate('Passes')}
+          icon="check"
+          label="Check-in"
+        />
+        <ActionBarItem
+          onPress={() => openUrl('https://apollosrock.newspring.cc/page/186')}
+          icon="download"
+          label="Give"
+        />
+        <ActionBarItem
+          onPress={() => navigation.navigate('TestingControlPanel')}
+          icon="information"
+          label="Test"
+        />
+      </ActionBar>
+    )}
+  </WebBrowserConsumer>
+);
+
+Toolbar.propTypes = {
+  navigation: PropTypes.shape({
+    navigate: PropTypes.func.isRequired,
+  }).isRequired,
+};
+
+export default withNavigation(Toolbar);
diff --git a/apolloschurchapp/src/tabs/connect/ActionTable/index.js b/apolloschurchapp/src/tabs/connect/ActionTable/index.js
new file mode 100644
index 0000000..d267f72
--- /dev/null
+++ b/apolloschurchapp/src/tabs/connect/ActionTable/index.js
@@ -0,0 +1,86 @@
+import React from 'react';
+import { View } from 'react-native';
+
+import {
+  TableView,
+  Cell,
+  CellIcon,
+  CellText,
+  Divider,
+  Touchable,
+  styled,
+  PaddedView,
+  H4,
+} from '@apollosproject/ui-kit';
+import { WebBrowserConsumer } from '../../../ui/WebBrowser';
+import NavigationActions from '../../../NavigationService';
+
+const RowHeader = styled(({ theme }) => ({
+  flexDirection: 'row',
+  justifyContent: 'space-between',
+  alignItems: 'center',
+  paddingVertical: theme.sizing.baseUnit,
+}))(PaddedView);
+
+const Name = styled({
+  flexGrow: 1,
+})(View);
+
+const ActionTable = () => (
+  <WebBrowserConsumer>
+    {(openUrl) => (
+      <View>
+        <RowHeader>
+          <Name>
+            <H4>{'Connect with Apollos'}</H4>
+          </Name>
+        </RowHeader>
+        <TableView>
+          <Touchable
+            onPress={() => openUrl('https://apollosrock.newspring.cc/page/235')}
+          >
+            <Cell>
+              <CellText>Find a serving opportunity</CellText>
+              <CellIcon name="arrow-next" />
+            </Cell>
+          </Touchable>
+          <Divider />
+          <Touchable
+            onPress={() => openUrl('https://apollosrock.newspring.cc/page/236')}
+          >
+            <Cell>
+              <CellText>Join a small group</CellText>
+              <CellIcon name="arrow-next" />
+            </Cell>
+          </Touchable>
+          <Divider />
+          <Touchable
+            onPress={() => openUrl('https://apollosrock.newspring.cc/page/233')}
+          >
+            <Cell>
+              <CellText>I need prayer</CellText>
+              <CellIcon name="arrow-next" />
+            </Cell>
+          </Touchable>
+        </TableView>
+        <TableView>
+          <Touchable
+            onPress={() => NavigationActions.navigate('TestingControlPanel')}
+          >
+            <Cell>
+              <CellIcon name="settings" />
+              <CellText>Open Testing Panel</CellText>
+              <CellIcon name="arrow-next" />
+            </Cell>
+          </Touchable>
+        </TableView>
+      </View>
+    )}
+  </WebBrowserConsumer>
+);
+
+const StyledActionTable = styled(({ theme }) => ({
+  paddingBottom: theme.sizing.baseUnit * 100,
+}))(ActionTable);
+
+export default StyledActionTable;
diff --git a/apolloschurchapp/src/tabs/connect/Connect.js b/apolloschurchapp/src/tabs/connect/Connect.js
index 5c41b95..4ba12d4 100644
--- a/apolloschurchapp/src/tabs/connect/Connect.js
+++ b/apolloschurchapp/src/tabs/connect/Connect.js
@@ -1,112 +1,38 @@
 import React, { PureComponent } from 'react';
 import { ScrollView } from 'react-native';
-import { Query } from 'react-apollo';
+import { SafeAreaView } from 'react-navigation';
+import PropTypes from 'prop-types';
 
-import { LoginButton } from 'apolloschurchapp/src/auth';
-import BackgroundView from 'apolloschurchapp/src/ui/BackgroundView';
-import TableView, {
-  Cell,
-  CellIcon,
-  CellText,
-  Divider,
-} from 'apolloschurchapp/src/ui/TableView';
-import { WebBrowserConsumer } from 'apolloschurchapp/src/ui/WebBrowser';
-import Touchable from 'apolloschurchapp/src/ui/Touchable';
-import UserAvatarView from 'apolloschurchapp/src/ui/UserAvatarView';
-
-import getLoginState from './getLoginState';
-import getUserProfile from './getUserProfile';
+import { BackgroundView } from '@apollosproject/ui-kit';
+import ActionTable from './ActionTable';
+import ActionBar from './ActionBar';
+import UserAvatarHeader from './UserAvatarHeader';
+import { RecentlyLikedTileFeedConnected } from './RecentlyLikedTileFeed';
 
 class Connect extends PureComponent {
   static navigationOptions = () => ({
     title: 'Connect',
-    headerRight: <LoginButton />,
+    header: null,
   });
 
+  static propTypes = {
+    navigation: PropTypes.shape({
+      getParam: PropTypes.func,
+      navigate: PropTypes.func,
+    }),
+  };
+
   render() {
     return (
       <BackgroundView>
-        <WebBrowserConsumer>
-          {(openUrl) => (
-            <BackgroundView>
-              <ScrollView>
-                <Query query={getLoginState}>
-                  {({ data: { isLoggedIn = null } }) => {
-                    if (isLoggedIn)
-                      return (
-                        <Query
-                          query={getUserProfile}
-                          fetchPolicy="cache-and-network"
-                        >
-                          {({
-                            data: {
-                              currentUser: {
-                                profile: { photo, firstName, lastName } = {},
-                              } = {},
-                            } = {},
-                            refetch,
-                          }) => (
-                            <UserAvatarView
-                              firstName={firstName}
-                              lastName={lastName}
-                              photo={photo}
-                              refetch={refetch}
-                            />
-                          )}
-                        </Query>
-                      );
-                    return null;
-                  }}
-                </Query>
-                <TableView>
-                  <Touchable
-                    onPress={() =>
-                      openUrl('https://apollosrock.newspring.cc/page/235')
-                    }
-                  >
-                    <Cell>
-                      <CellIcon name="check" />
-                      <CellText>Find a serving opportunity</CellText>
-                    </Cell>
-                  </Touchable>
-                  <Divider />
-                  <Touchable
-                    onPress={() =>
-                      openUrl('https://apollosrock.newspring.cc/page/236')
-                    }
-                  >
-                    <Cell>
-                      <CellIcon name="groups" />
-                      <CellText>Join a small group</CellText>
-                    </Cell>
-                  </Touchable>
-                  <Divider />
-                  <Touchable
-                    onPress={() =>
-                      openUrl('https://apollosrock.newspring.cc/page/233')
-                    }
-                  >
-                    <Cell>
-                      <CellIcon name="share" />
-                      <CellText>I need prayer</CellText>
-                    </Cell>
-                  </Touchable>
-                  <Divider />
-                  <Touchable
-                    onPress={() =>
-                      openUrl('https://apollosrock.newspring.cc/page/186')
-                    }
-                  >
-                    <Cell>
-                      <CellIcon name="download" />
-                      <CellText>I would like to give</CellText>
-                    </Cell>
-                  </Touchable>
-                </TableView>
-              </ScrollView>
-            </BackgroundView>
-          )}
-        </WebBrowserConsumer>
+        <SafeAreaView>
+          <ScrollView>
+            <UserAvatarHeader />
+            <ActionBar />
+            <RecentlyLikedTileFeedConnected />
+            <ActionTable />
+          </ScrollView>
+        </SafeAreaView>
       </BackgroundView>
     );
   }
diff --git a/apolloschurchapp/src/tabs/connect/LikedContentList/LikedContentList.tests.js b/apolloschurchapp/src/tabs/connect/LikedContentList/LikedContentList.tests.js
new file mode 100644
index 0000000..da4eb24
--- /dev/null
+++ b/apolloschurchapp/src/tabs/connect/LikedContentList/LikedContentList.tests.js
@@ -0,0 +1,68 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+import wait from 'waait';
+
+import Providers from '../../../Providers';
+
+import GET_LIKED_CONTENT from '../getLikedContent';
+import LikedContentList from '.';
+
+describe('LikedContentList component', () => {
+  it('renders LikedContentList', async () => {
+    const mock = {
+      request: {
+        query: GET_LIKED_CONTENT,
+      },
+      result: {
+        data: {
+          likedContent: [
+            {
+              __typename: 'UniversalContentItem',
+              id: 'UniversalContentItem:4148aeb9482181025e9cad42826e676a',
+              title: 'Making Prayer a Spiritual Habit',
+              coverImage: {
+                sources: [
+                  {
+                    uri:
+                      'https://apollosrock.newspring.cc/GetImage.ashx?guid=55be1fd5-d8eb-43a6-aa70-f8e27bb63d31',
+                  },
+                ],
+              },
+              sharing: {
+                title: 'Making Prayer a Spiritual Habit',
+                message: '',
+                url: 'https://apollosrock.newspring.cc/',
+              },
+            },
+            {
+              __typename: 'UniversalContentItem',
+              id: 'UniversalContentItem:9dbdc4e565dcaa3c9b17eb5ae42de96e',
+              title: 'Vacations and Your Budget',
+              coverImage: {
+                sources: [
+                  {
+                    uri:
+                      'https://apollosrock.newspring.cc/GetImage.ashx?guid=993efb47-47ec-4dec-a3d3-47bcacfbd58e',
+                  },
+                ],
+              },
+              sharing: {
+                title: 'Vacations and Your Budget',
+                message: '',
+                url: 'https://apollosrock.newspring.cc/',
+              },
+            },
+          ],
+        },
+      },
+    };
+    const navigation = { navigate: jest.fn(), getParam: jest.fn() };
+    const tree = renderer.create(
+      <Providers mocks={[mock]}>
+        <LikedContentList navigation={navigation} />
+      </Providers>
+    );
+    await wait(0); // wait for response from graphql
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/tabs/connect/LikedContentList/index.js b/apolloschurchapp/src/tabs/connect/LikedContentList/index.js
new file mode 100644
index 0000000..c923b53
--- /dev/null
+++ b/apolloschurchapp/src/tabs/connect/LikedContentList/index.js
@@ -0,0 +1,69 @@
+import React, { PureComponent } from 'react';
+import PropTypes from 'prop-types';
+import { Query } from 'react-apollo';
+import { get } from 'lodash';
+
+import { BackgroundView, FeedView } from '@apollosproject/ui-kit';
+import fetchMoreResolver from '../../../utils/fetchMoreResolver';
+import ContentCardConnected from '../../../ui/ContentCardConnected';
+
+import GET_LIKED_CONTENT from '../getLikedContent';
+/** A FeedView wrapped in a query to pull content data. */
+class LikedContentList extends PureComponent {
+  /** Function for React Navigation to set information in the header. */
+  static navigationOptions = () => ({
+    title: 'Your Likes',
+  });
+
+  static propTypes = {
+    /** Functions passed down from React Navigation to use in navigating to/from
+     * items in the feed.
+     */
+    navigation: PropTypes.shape({
+      getParam: PropTypes.func,
+      navigate: PropTypes.func,
+    }),
+  };
+
+  /** Function that is called when a card in the feed is pressed.
+   * Takes the user to the ContentSingle
+   */
+  handleOnPress = (item) =>
+    this.props.navigation.navigate('ContentSingle', {
+      itemId: item.id,
+      sharing: item.sharing,
+    });
+
+  render() {
+    return (
+      <BackgroundView>
+        <Query
+          query={GET_LIKED_CONTENT}
+          fetchPolicy="cache-and-network"
+          variables={{ first: 20 }}
+        >
+          {({ loading, error, data, refetch, fetchMore, variables }) => (
+            <FeedView
+              ListItemComponent={ContentCardConnected}
+              content={get(data, 'likedContent.edges', []).map(
+                (edge) => edge.node
+              )}
+              isLoading={loading}
+              error={error}
+              refetch={refetch}
+              onPressItem={this.handleOnPress}
+              fetchMore={fetchMoreResolver({
+                collectionName: 'likedContent',
+                fetchMore,
+                variables,
+                data,
+              })}
+            />
+          )}
+        </Query>
+      </BackgroundView>
+    );
+  }
+}
+
+export default LikedContentList;
diff --git a/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeed.js b/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeed.js
new file mode 100644
index 0000000..fe20d03
--- /dev/null
+++ b/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeed.js
@@ -0,0 +1,118 @@
+import React, { Component } from 'react';
+import { View } from 'react-native';
+import { withNavigation } from 'react-navigation';
+import PropTypes from 'prop-types';
+
+import {
+  styled,
+  withTheme,
+  PaddedView,
+  H5,
+  H6,
+  HorizontalTileFeed,
+  ButtonLink,
+  TouchableScale,
+  Touchable,
+  withIsLoading,
+} from '@apollosproject/ui-kit';
+
+import HorizontalContentCardConnected from '../../../ui/HorizontalContentCardConnected';
+
+const RowHeader = styled(({ theme }) => ({
+  flexDirection: 'row',
+  justifyContent: 'space-between',
+  alignItems: 'center',
+  zIndex: 2, // UX hack to improve tapability. Positions RowHeader above StyledHorizontalTileFeed
+  paddingTop: theme.sizing.baseUnit * 0.5,
+  paddingLeft: theme.sizing.baseUnit,
+}))(View);
+
+const Name = styled({
+  flexGrow: 2,
+})(View);
+
+const ButtonLinkSpacing = styled(({ theme }) => ({
+  flexDirection: 'row', // correctly positions the loading state
+  justifyContent: 'flex-end', // correctly positions the loading state
+  padding: theme.sizing.baseUnit, // UX hack to improve tapability.
+}))(View);
+
+const AndroidTouchableFix = withTheme(({ theme }) => ({
+  borderRadius: theme.sizing.baseBorderRadius / 2,
+}))(Touchable);
+
+const StyledHorizontalTileFeed = styled(({ theme }) => ({
+  /* UX hack to improve tapability. The magic number below happens to be the number of pixels that
+   * aligns everything in the same place as if none of the UX hacks were there. */
+  marginTop: theme.sizing.baseUnit * -1.25,
+  zIndex: 1,
+}))(HorizontalTileFeed);
+
+class RecentlyLikedTileFeed extends Component {
+  static propTypes = {
+    navigation: PropTypes.shape({
+      navigate: PropTypes.func,
+    }),
+    isLoading: PropTypes.bool,
+    name: PropTypes.string,
+    content: PropTypes.arrayOf(
+      PropTypes.any // this component doesn't care about the shape of `node`, just that it exists
+    ),
+  };
+
+  loadingStateObject = {
+    id: 'fake_id',
+    title: '',
+    coverImage: [],
+  };
+
+  titleImageItem = ({ item }) => (
+    <TouchableScale
+      onPress={() => {
+        this.props.navigation.push('ContentSingle', {
+          itemId: item.id,
+        });
+      }}
+    >
+      <HorizontalContentCardConnected
+        isLoading={item.isLoading}
+        contentId={item.id}
+      />
+    </TouchableScale>
+  );
+
+  render() {
+    const { isLoading, name, navigation, content = [] } = this.props;
+
+    return (
+      <PaddedView horizontal={false}>
+        <RowHeader>
+          <Name>
+            <H5>{name}</H5>
+          </Name>
+
+          <AndroidTouchableFix
+            onPress={() => {
+              navigation.navigate('LikedContentList');
+            }}
+          >
+            <ButtonLinkSpacing>
+              <H6>
+                {/* we have to wrap "View All" in a ButtonLink twice to inherit styles and color correctly. */}
+                <ButtonLink>View All</ButtonLink>
+              </H6>
+            </ButtonLinkSpacing>
+          </AndroidTouchableFix>
+        </RowHeader>
+        <StyledHorizontalTileFeed
+          content={content}
+          renderItem={this.titleImageItem}
+          loadingStateObject={this.loadingStateObject}
+          isLoading={isLoading}
+        />
+      </PaddedView>
+    );
+  }
+}
+
+export default withNavigation(withIsLoading(RecentlyLikedTileFeed));
diff --git a/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeed.tests.js b/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeed.tests.js
new file mode 100644
index 0000000..01671e2
--- /dev/null
+++ b/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeed.tests.js
@@ -0,0 +1,111 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from '../../../Providers';
+import RecentlyLikedTileFeed from './RecentlyLikedTileFeed';
+
+describe('RecentlyLikedTileFeed', () => {
+  it('renders a RecentlyLikedTileFeed', () => {
+    const props = {
+      content: [
+        {
+          id: 'UniversalContentItem:4148aeb9482181025e9cad42826e676a',
+          title: 'Making Prayer a Spiritual Habit',
+          __typename: 'UniversalContentItem',
+          coverImage: {
+            sources: [
+              {
+                uri:
+                  'https://apollosrock.newspring.cc/GetImage.ashx?guid=55be1fd5-d8eb-43a6-aa70-f8e27bb63d31',
+              },
+            ],
+          },
+          sharing: {
+            title: 'Making Prayer a Spiritual Habit',
+            message: '',
+            url: 'https://apollosrock.newspring.cc/',
+          },
+        },
+        {
+          id: 'UniversalContentItem:9dbdc4e565dcaa3c9b17eb5ae42de96e',
+          title: 'Vacations and Your Budget',
+          __typename: 'UniversalContentItem',
+          coverImage: {
+            sources: [
+              {
+                uri:
+                  'https://apollosrock.newspring.cc/GetImage.ashx?guid=993efb47-47ec-4dec-a3d3-47bcacfbd58e',
+              },
+            ],
+          },
+          sharing: {
+            title: 'Vacations and Your Budget',
+            message: '',
+            url: 'https://apollosrock.newspring.cc/',
+          },
+        },
+      ],
+      name: 'Liked Content',
+      navigation: jest.fn(),
+      isLoading: false,
+    };
+
+    const tree = renderer.create(
+      <Providers>
+        <RecentlyLikedTileFeed {...props} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+
+  it('renders a loading state', () => {
+    const props = {
+      content: [
+        {
+          id: 'UniversalContentItem:4148aeb9482181025e9cad42826e676a',
+          title: 'Making Prayer a Spiritual Habit',
+          coverImage: {
+            sources: [
+              {
+                uri:
+                  'https://apollosrock.newspring.cc/GetImage.ashx?guid=55be1fd5-d8eb-43a6-aa70-f8e27bb63d31',
+              },
+            ],
+          },
+          sharing: {
+            title: 'Making Prayer a Spiritual Habit',
+            message: '',
+            url: 'https://apollosrock.newspring.cc/',
+          },
+        },
+        {
+          id: 'UniversalContentItem:9dbdc4e565dcaa3c9b17eb5ae42de96e',
+          title: 'Vacations and Your Budget',
+          coverImage: {
+            sources: [
+              {
+                uri:
+                  'https://apollosrock.newspring.cc/GetImage.ashx?guid=993efb47-47ec-4dec-a3d3-47bcacfbd58e',
+              },
+            ],
+          },
+          sharing: {
+            title: 'Vacations and Your Budget',
+            message: '',
+            url: 'https://apollosrock.newspring.cc/',
+          },
+        },
+      ],
+      name: 'Liked Content',
+      navigation: jest.fn(),
+      isLoading: true,
+    };
+
+    const tree = renderer.create(
+      <Providers>
+        <RecentlyLikedTileFeed {...props} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeedConnected.js b/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeedConnected.js
new file mode 100644
index 0000000..bfccbe1
--- /dev/null
+++ b/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeedConnected.js
@@ -0,0 +1,43 @@
+import React from 'react';
+import { Query } from 'react-apollo';
+import PropTypes from 'prop-types';
+
+import GET_LIKED_CONTENT from '../getLikedContent';
+import RecentlyLikedTileFeed from './RecentlyLikedTileFeed';
+
+const RecentlyLikedTileFeedConnected = ({ navigation }) => (
+  <Query
+    query={GET_LIKED_CONTENT}
+    fetchPolicy="cache-and-network"
+    variables={{ first: 3 }}
+  >
+    {({
+      loading,
+      data: { likedContent: { edges = [] } = { edges: [] } } = {},
+    }) => {
+      if (!edges.length) return null;
+      return (
+        <RecentlyLikedTileFeed
+          id={'liked'}
+          name={'Recently Liked'}
+          content={edges.map((e) => e.node)}
+          isLoading={loading}
+          navigation={navigation}
+          loadingStateObject={{
+            title: 'Recently Liked',
+            isLoading: true,
+          }}
+        />
+      );
+    }}
+  </Query>
+);
+
+RecentlyLikedTileFeedConnected.propTypes = {
+  navigation: PropTypes.shape({
+    getParam: PropTypes.func,
+    navigate: PropTypes.func,
+  }),
+};
+
+export default RecentlyLikedTileFeedConnected;
diff --git a/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeedConnected.tests.js b/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeedConnected.tests.js
new file mode 100644
index 0000000..415e557
--- /dev/null
+++ b/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeedConnected.tests.js
@@ -0,0 +1,111 @@
+import React from 'react';
+
+import Providers from '../../../Providers';
+
+import { renderWithApolloData } from '../../../utils/testUtils';
+
+import GET_LIKED_CONTENT from '../getLikedContent';
+import RecentlyLikedTileFeedConnected from './RecentlyLikedTileFeedConnected';
+
+describe('RecentlyLikedTileFeedConnected', () => {
+  it('renders a RecentlyLikedTileFeedConnected', async () => {
+    const mock = {
+      request: {
+        query: GET_LIKED_CONTENT,
+        variables: { first: 3 },
+      },
+      result: {
+        data: {
+          likedContent: {
+            __typename: 'ContentItemsConnection',
+            pageInfo: {
+              __typename: 'PaginationInfo',
+              endCursor: '123',
+            },
+            edges: [
+              {
+                __typename: 'ContentItemsConnectionEdge',
+                node: {
+                  __typename: 'UniversalContentItem',
+                  id: 'UniversalContentItem:d57994350b9d213866b24dea3a97433d',
+                  coverImage: null,
+                  parentChannel: {
+                    id: 'ContentChannel:4f68015ba18662a7409d1219a4ce013e',
+                    name: 'Editorial',
+                    iconName: 'text',
+                    __typename: 'ContentChannel',
+                  },
+                  title: 'Mea Animal Aperiam Ornatus Eu',
+                  hyphenatedTitle: 'Mea Animal Aperiam Ornatus Eu',
+                  summary: 'Bla bla bla',
+                  theme: null,
+                  isLiked: false,
+                  likedCount: 0,
+                  videos: [],
+                  audios: [],
+                },
+              },
+              {
+                __typename: 'ContentItemsConnectionEdge',
+                node: {
+                  __typename: 'UniversalContentItem',
+                  id: 'UniversalContentItem:b36e55d803443431e96bb4b5068147ec',
+                  coverImage: null,
+                  parentChannel: {
+                    id: 'ContentChannel:4f68015ba18662a7409d1219a4ce013e',
+                    name: 'Editorial',
+                    iconName: 'text',
+                    __typename: 'ContentChannel',
+                  },
+                  title: 'Probo Senserit Id Mea, Ut Sed Malis Postea,',
+                  hyphenatedTitle:
+                    'Probo Senserit Id Mea, Ut Sed Malis Postea,',
+                  summary: 'Bla bla bla',
+                  theme: null,
+                  isLiked: false,
+                  likedCount: 0,
+                  videos: [],
+                  audios: [],
+                },
+              },
+            ],
+          },
+        },
+      },
+    };
+    const navigation = { navigate: jest.fn(), getParam: jest.fn() };
+    const tree = await renderWithApolloData(
+      <Providers mocks={[mock]}>
+        <RecentlyLikedTileFeedConnected navigation={navigation} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+
+  it('renders nothing if no liked content', async () => {
+    const mock = {
+      request: {
+        query: GET_LIKED_CONTENT,
+      },
+      result: {
+        data: {
+          likedContent: {
+            __typename: 'ContentItemsConnection',
+            pageInfo: {
+              __typename: 'PaginationInfo',
+              endCursor: null,
+            },
+            edges: [],
+          },
+        },
+      },
+    };
+    const navigation = { navigate: jest.fn(), getParam: jest.fn() };
+    const tree = await renderWithApolloData(
+      <Providers mocks={[mock]}>
+        <RecentlyLikedTileFeedConnected navigation={navigation} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/index.js b/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/index.js
new file mode 100644
index 0000000..f67e890
--- /dev/null
+++ b/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/index.js
@@ -0,0 +1,2 @@
+export RecentlyLikedTileFeed from './RecentlyLikedTileFeed';
+export RecentlyLikedTileFeedConnected from './RecentlyLikedTileFeedConnected';
diff --git a/apolloschurchapp/src/tabs/connect/UserAvatarHeader.js b/apolloschurchapp/src/tabs/connect/UserAvatarHeader.js
new file mode 100644
index 0000000..9f1b65a
--- /dev/null
+++ b/apolloschurchapp/src/tabs/connect/UserAvatarHeader.js
@@ -0,0 +1,44 @@
+import React from 'react';
+import { Query } from 'react-apollo';
+import PropTypes from 'prop-types';
+import { withNavigation } from 'react-navigation';
+
+import { Avatar, H3, styled, PaddedView } from '@apollosproject/ui-kit';
+import GET_USER_PROFILE from './getUserProfile';
+
+const Container = styled({
+  alignItems: 'center',
+  justifyContent: 'center',
+})(PaddedView);
+
+const UserAvatarHeader = ({ navigation }) => (
+  <Query query={GET_USER_PROFILE} fetchPolicy="cache-and-network">
+    {({
+      data: { currentUser: { profile: { photo, firstName } = {} } = {} } = {},
+    }) => (
+      <Container>
+        <PaddedView horizontal={false}>
+          <Avatar
+            source={photo}
+            size="large"
+            buttonIcon="settings"
+            onPressIcon={() => navigation.navigate('UserSettings')}
+          />
+        </PaddedView>
+        <H3>
+          Hello
+          {firstName ? ` ${firstName}` : ''}!
+        </H3>
+      </Container>
+    )}
+  </Query>
+);
+
+UserAvatarHeader.propTypes = {
+  navigation: PropTypes.shape({
+    getParam: PropTypes.func,
+    navigate: PropTypes.func,
+  }),
+};
+
+export default withNavigation(UserAvatarHeader);
diff --git a/apolloschurchapp/src/tabs/connect/getLikedContent.js b/apolloschurchapp/src/tabs/connect/getLikedContent.js
new file mode 100644
index 0000000..2ed6520
--- /dev/null
+++ b/apolloschurchapp/src/tabs/connect/getLikedContent.js
@@ -0,0 +1,21 @@
+import gql from 'graphql-tag';
+import ApollosConfig from '@apollosproject/config';
+
+export default gql`
+  query getAllLikedContent($first: Int, $after: String) {
+    likedContent(first: $first, after: $after) {
+      pageInfo {
+        endCursor
+      }
+      edges {
+        node {
+          ... on ContentItem {
+            isLiked
+            ...contentCardFragment
+          }
+        }
+      }
+    }
+  }
+  ${ApollosConfig.FRAGMENTS.CONTENT_CARD_FRAGMENT}
+`;
diff --git a/apolloschurchapp/src/tabs/connect/getLoginState.js b/apolloschurchapp/src/tabs/connect/getLoginState.js
deleted file mode 100644
index da75449..0000000
--- a/apolloschurchapp/src/tabs/connect/getLoginState.js
+++ /dev/null
@@ -1,7 +0,0 @@
-import gql from 'graphql-tag';
-
-export default gql`
-  query {
-    isLoggedIn: authToken @client
-  }
-`;
diff --git a/apolloschurchapp/src/tabs/connect/getUserProfile.js b/apolloschurchapp/src/tabs/connect/getUserProfile.js
index fb9facf..e5aa7e0 100644
--- a/apolloschurchapp/src/tabs/connect/getUserProfile.js
+++ b/apolloschurchapp/src/tabs/connect/getUserProfile.js
@@ -1,17 +1,18 @@
 import gql from 'graphql-tag';
+import ApollosConfig from '@apollosproject/config';
 
 export default gql`
-  query {
+  query CurrentUserProfile {
     currentUser {
       id
       profile {
-        firstName
-        lastName
-        email
-        photo {
-          uri
+        ...UserProfileParts
+        campus {
+          ...CampusParts
         }
       }
     }
   }
+  ${ApollosConfig.FRAGMENTS.CAMPUS_PARTS_FRAGMENT}
+  ${ApollosConfig.FRAGMENTS.USER_PROFILE_PARTS_FRAGMENT}
 `;
diff --git a/apolloschurchapp/src/tabs/connect/index.js b/apolloschurchapp/src/tabs/connect/index.js
index 6837cb4..8512ed9 100644
--- a/apolloschurchapp/src/tabs/connect/index.js
+++ b/apolloschurchapp/src/tabs/connect/index.js
@@ -1,20 +1,39 @@
 import { createStackNavigator } from 'react-navigation';
+import { withTheme } from '@apollosproject/ui-kit';
 
-import tabBarIcon from '../tabBarIcon';
+import UserSettings from '../../user-settings';
 
+import TestingControlPanel from '../../testing-control-panel';
+import tabBarIcon from '../tabBarIcon';
 import Connect from './Connect';
+import LikedContentList from './LikedContentList';
 
 const ConnectNavigator = createStackNavigator(
   {
     Connect,
+    TestingControlPanel,
+    UserSettings,
+    LikedContentList,
   },
   {
     initialRouteName: 'Connect',
+    headerMode: 'screen',
+    defaultNavigationOptions: ({ screenProps }) => ({
+      headerTintColor: screenProps.headerTintColor,
+      headerTitleStyle: screenProps.headerTitleStyle,
+    }),
+    navigationOptions: { tabBarIcon: tabBarIcon('profile') },
   }
 );
 
-ConnectNavigator.navigationOptions = {
-  tabBarIcon: tabBarIcon('profile'),
-};
+const EnhancedConnect = withTheme(({ theme, ...props }) => ({
+  ...props,
+  screenProps: {
+    headerTintColor: theme.colors.action.secondary,
+    headerTitleStyle: {
+      color: theme.colors.text.primary,
+    },
+  },
+}))(ConnectNavigator);
 
-export default ConnectNavigator;
+export default EnhancedConnect;
diff --git a/apolloschurchapp/src/tabs/discover/Discover.js b/apolloschurchapp/src/tabs/discover/Discover.js
index 6bb4545..b53b8f7 100644
--- a/apolloschurchapp/src/tabs/discover/Discover.js
+++ b/apolloschurchapp/src/tabs/discover/Discover.js
@@ -1,56 +1,47 @@
 import React, { PureComponent } from 'react';
-import { Query } from 'react-apollo';
-import { get } from 'lodash';
+import { throttle } from 'lodash';
 
-import FeedView from 'apolloschurchapp/src/ui/FeedView';
-import BackgroundView from 'apolloschurchapp/src/ui/BackgroundView';
+import { BackgroundView } from '@apollosproject/ui-kit';
 
-import TileContentFeed from './TileContentFeed';
-import getContentChannels from './getContentChannels';
+import SearchInputHeader, {
+  ReactNavigationStyleReset,
+} from '../../ui/SearchInputHeader';
 
-const childContentItemLoadingState = {
-  title: '',
-  isLoading: true,
-};
-
-const feedItemLoadingState = {
-  name: '',
-  isLoading: true,
-};
+import SearchFeed from './SearchFeed';
+import DiscoverFeed from './DiscoverFeed';
 
 class Discover extends PureComponent {
-  renderItem = ({ item }) => (
-    <TileContentFeed
-      id={item.id}
-      name={item.name}
-      content={get(item, 'childContentItemsConnection.edges', []).map(
-        (edge) => edge.node
-      )}
-      isLoading={item.isLoading}
-      loadingStateObject={childContentItemLoadingState}
-    />
+  state = {
+    searchText: '',
+    isFocused: false,
+  };
+
+  handleOnChangeText = throttle(
+    (value) =>
+      this.setState({
+        searchText: value,
+      }),
+    300
   );
 
+  handleOnFocus = (inputState) => {
+    this.setState({
+      isFocused: inputState,
+    });
+  };
+
   render() {
     return (
       <BackgroundView>
-        <Query query={getContentChannels} fetchPolicy="cache-and-network">
-          {({
-            error,
-            loading,
-            data: { contentChannels = [] } = {},
-            refetch,
-          }) => (
-            <FeedView
-              error={error}
-              content={contentChannels}
-              isLoading={loading}
-              refetch={refetch}
-              renderItem={this.renderItem}
-              loadingStateObject={feedItemLoadingState}
-            />
-          )}
-        </Query>
+        <SearchInputHeader
+          onChangeText={this.handleOnChangeText}
+          onFocus={this.handleOnFocus}
+        />
+        {this.state.isFocused || this.state.searchText ? (
+          <SearchFeed searchText={this.state.searchText} />
+        ) : (
+          <DiscoverFeed />
+        )}
       </BackgroundView>
     );
   }
@@ -58,6 +49,7 @@ class Discover extends PureComponent {
 
 Discover.navigationOptions = {
   title: 'Discover',
+  headerStyle: ReactNavigationStyleReset.header,
 };
 
 export default Discover;
diff --git a/apolloschurchapp/src/tabs/discover/DiscoverFeed/DiscoverFeed.tests.js b/apolloschurchapp/src/tabs/discover/DiscoverFeed/DiscoverFeed.tests.js
new file mode 100644
index 0000000..568ee71
--- /dev/null
+++ b/apolloschurchapp/src/tabs/discover/DiscoverFeed/DiscoverFeed.tests.js
@@ -0,0 +1,584 @@
+import React from 'react';
+import { flatMap } from 'lodash';
+import { createStackNavigator, createAppContainer } from 'react-navigation';
+import renderer from 'react-test-renderer';
+
+import Providers from '../../../Providers';
+import { renderWithApolloData } from '../../../utils/testUtils';
+import GET_CONTENT_CARD from '../../../ui/ContentCardConnected/query';
+
+import GET_CONTENT_CHANNELS from './getContentChannels';
+import DiscoverFeed from '.';
+
+describe('The DiscoverFeed component', () => {
+  it('should render', async () => {
+    const mockFeedData = {
+      request: {
+        query: GET_CONTENT_CHANNELS,
+      },
+      result: {
+        data: {
+          contentChannels: [
+            {
+              id: 'ContentChannel:965b6e6d7046a885bea4e300b5c0400d',
+              name: 'News',
+              childContentItemsConnection: {
+                edges: [
+                  {
+                    node: {
+                      id:
+                        'UniversalContentItem:00bb7b364911281c97fc50f2a0d17b11',
+                      title: 'Anderson Family Cookout!',
+                      hyphenatedTitle: 'Anderson Family Cookout!',
+                      isLiked: false,
+                      likedCount: 0,
+                      summary: 'Come join us!',
+                      coverImage: {
+                        name: 'Landscape Image',
+                        sources: [
+                          {
+                            uri:
+                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D62e0e2ba-2dac-468b-a852-7e8cf2533efc',
+                            __typename: 'ImageMediaSource',
+                          },
+                        ],
+                        __typename: 'ImageMedia',
+                      },
+                      theme: null,
+                      parentChannel: {
+                        id: 'ContentChannel:965b6e6d7046a885bea4e300b5c0400d',
+                        name: 'News',
+                        __typename: 'ContentChannel',
+                      },
+                      videos: [],
+                      audios: [],
+                      __typename: 'UniversalContentItem',
+                    },
+                    __typename: 'ContentItemsConnectionEdge',
+                  },
+                  {
+                    node: {
+                      id:
+                        'UniversalContentItem:7db601b238aa4345a818654300f83dd2',
+                      title: 'Robert Madu is Coming to Christ Fellowship',
+                      hyphenatedTitle:
+                        'Robert Madu is Coming to Christ Fellowship',
+                      isLiked: false,
+                      likedCount: 5,
+                      summary:
+                        "Don't miss a powerful message from preacher and speaker, Robert Madu.",
+                      coverImage: {
+                        name: 'Square Image',
+                        sources: [
+                          {
+                            uri:
+                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3Df3ba0936-8aab-46c1-8245-0e5aef637ae3',
+                            __typename: 'ImageMediaSource',
+                          },
+                        ],
+                        __typename: 'ImageMedia',
+                      },
+                      theme: null,
+                      parentChannel: {
+                        id: 'ContentChannel:965b6e6d7046a885bea4e300b5c0400d',
+                        name: 'News',
+                        __typename: 'ContentChannel',
+                      },
+                      videos: [],
+                      audios: [],
+                      __typename: 'UniversalContentItem',
+                    },
+                    __typename: 'ContentItemsConnectionEdge',
+                  },
+                  {
+                    node: {
+                      id:
+                        'UniversalContentItem:296373ecb53580855cadffa0375ebe18',
+                      title: 'Guys Night!',
+                      hyphenatedTitle: 'Guys Night!',
+                      isLiked: false,
+                      likedCount: 0,
+                      summary:
+                        'A time to connect with other guys who live nearby.',
+                      coverImage: {
+                        name: 'Square Image',
+                        sources: [
+                          {
+                            uri:
+                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D58c037fa-cc7f-4d72-9571-a0cc0558e346',
+                            __typename: 'ImageMediaSource',
+                          },
+                        ],
+                        __typename: 'ImageMedia',
+                      },
+                      theme: null,
+                      parentChannel: {
+                        id: 'ContentChannel:965b6e6d7046a885bea4e300b5c0400d',
+                        name: 'News',
+                        __typename: 'ContentChannel',
+                      },
+                      videos: [],
+                      audios: [],
+                      __typename: 'UniversalContentItem',
+                    },
+                    __typename: 'ContentItemsConnectionEdge',
+                  },
+                ],
+                __typename: 'ContentItemsConnection',
+              },
+              __typename: 'ContentChannel',
+            },
+            {
+              id: 'ContentChannel:4f68015ba18662a7409d1219a4ce013e',
+              name: 'Articles',
+              childContentItemsConnection: {
+                edges: [
+                  {
+                    node: {
+                      id:
+                        'UniversalContentItem:604a4a763a5fc0edfe386684ca6b3515',
+                      title: 'Test Article',
+                      hyphenatedTitle: 'Test Article',
+                      isLiked: false,
+                      likedCount: 0,
+                      summary: 'Test article...',
+                      coverImage: null,
+                      theme: null,
+                      parentChannel: {
+                        id: 'ContentChannel:4f68015ba18662a7409d1219a4ce013e',
+                        name: 'Articles',
+                        __typename: 'ContentChannel',
+                      },
+                      videos: [],
+                      audios: [],
+                      __typename: 'UniversalContentItem',
+                    },
+                    __typename: 'ContentItemsConnectionEdge',
+                  },
+                  {
+                    node: {
+                      id:
+                        'UniversalContentItem:c495ff18cd998ed516a798b6218907cd',
+                      title: '10 ways to refresh your spirit every day',
+                      hyphenatedTitle:
+                        '10 ways to refresh your spirit every day',
+                      isLiked: false,
+                      likedCount: 2,
+                      summary:
+                        '1. Be slow What would it look like to live your life at half-speed?',
+                      coverImage: null,
+                      theme: null,
+                      parentChannel: {
+                        id: 'ContentChannel:4f68015ba18662a7409d1219a4ce013e',
+                        name: 'Articles',
+                        __typename: 'ContentChannel',
+                      },
+                      videos: [],
+                      audios: [],
+                      __typename: 'UniversalContentItem',
+                    },
+                    __typename: 'ContentItemsConnectionEdge',
+                  },
+                  {
+                    node: {
+                      id:
+                        'UniversalContentItem:95ff79f60a028b1b506aaeedf8b4c6ae',
+                      title: 'Live for Freedom Toolkit',
+                      hyphenatedTitle: 'Live for Freedom Toolkit',
+                      isLiked: false,
+                      likedCount: 1,
+                      summary:
+                        "Get in the Groove\nCelebrate your freedom in Christ — in the car, shower, cubicle or wherever you go — with this playlist of NewSpring Worship's favorite songs of the summer.",
+                      coverImage: null,
+                      theme: null,
+                      parentChannel: {
+                        id: 'ContentChannel:4f68015ba18662a7409d1219a4ce013e',
+                        name: 'Articles',
+                        __typename: 'ContentChannel',
+                      },
+                      videos: [],
+                      audios: [],
+                      __typename: 'UniversalContentItem',
+                    },
+                    __typename: 'ContentItemsConnectionEdge',
+                  },
+                ],
+                __typename: 'ContentItemsConnection',
+              },
+              __typename: 'ContentChannel',
+            },
+            {
+              id: 'ContentChannel:a0f64573eabf00a607bec911794d50fb',
+              name: 'Sermon Series',
+              childContentItemsConnection: {
+                edges: [
+                  {
+                    node: {
+                      id:
+                        'ContentSeriesContentItem:6d8dc8e4bad017f815ae0cac8bf692bb',
+                      title: 'The New Weekend Experience',
+                      hyphenatedTitle: 'The New Weekend Experience',
+                      isLiked: false,
+                      likedCount: 1,
+                      summary:
+                        'Have you come into relationship with Jesus Christ?',
+                      coverImage: {
+                        name: 'Series Image',
+                        sources: [
+                          {
+                            uri:
+                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D98be229f-dfed-4344-86ab-0d11666fc781',
+                            __typename: 'ImageMediaSource',
+                          },
+                        ],
+                        __typename: 'ImageMedia',
+                      },
+                      theme: null,
+                      parentChannel: {
+                        id: 'ContentChannel:a0f64573eabf00a607bec911794d50fb',
+                        name: 'Sermon Series',
+                        __typename: 'ContentChannel',
+                      },
+                      videos: [
+                        { sources: [], __typename: 'VideoMedia' },
+                        { sources: [], __typename: 'VideoMedia' },
+                      ],
+                      audios: [],
+                      __typename: 'ContentSeriesContentItem',
+                    },
+                    __typename: 'ContentItemsConnectionEdge',
+                  },
+                  {
+                    node: {
+                      id:
+                        'ContentSeriesContentItem:08449058d438ebeaffe9adb7a8e633cc',
+                      title: 'Gathering',
+                      hyphenatedTitle: 'Gathering',
+                      isLiked: false,
+                      likedCount: 0,
+                      summary: '',
+                      coverImage: {
+                        name: 'Square Image',
+                        sources: [
+                          {
+                            uri:
+                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D50f4e3e3-2842-4991-9f64-8fc6fbb3067c',
+                            __typename: 'ImageMediaSource',
+                          },
+                        ],
+                        __typename: 'ImageMedia',
+                      },
+                      theme: null,
+                      parentChannel: {
+                        id: 'ContentChannel:a0f64573eabf00a607bec911794d50fb',
+                        name: 'Sermon Series',
+                        __typename: 'ContentChannel',
+                      },
+                      videos: [
+                        { sources: [], __typename: 'VideoMedia' },
+                        { sources: [], __typename: 'VideoMedia' },
+                      ],
+                      audios: [],
+                      __typename: 'ContentSeriesContentItem',
+                    },
+                    __typename: 'ContentItemsConnectionEdge',
+                  },
+                  {
+                    node: {
+                      id:
+                        'ContentSeriesContentItem:b74c2d295a0cf1340232ffa8be856c00',
+                      title: 'Gauntlet 2018',
+                      hyphenatedTitle: 'Gauntlet 2018',
+                      isLiked: false,
+                      likedCount: 0,
+                      summary: '',
+                      coverImage: {
+                        name: 'Square Image',
+                        sources: [
+                          {
+                            uri:
+                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D3e3e38d2-d804-45db-b45a-3b7a82c415d1',
+                            __typename: 'ImageMediaSource',
+                          },
+                        ],
+                        __typename: 'ImageMedia',
+                      },
+                      theme: null,
+                      parentChannel: {
+                        id: 'ContentChannel:a0f64573eabf00a607bec911794d50fb',
+                        name: 'Sermon Series',
+                        __typename: 'ContentChannel',
+                      },
+                      videos: [
+                        { sources: [], __typename: 'VideoMedia' },
+                        { sources: [], __typename: 'VideoMedia' },
+                      ],
+                      audios: [],
+                      __typename: 'ContentSeriesContentItem',
+                    },
+                    __typename: 'ContentItemsConnectionEdge',
+                  },
+                ],
+                __typename: 'ContentItemsConnection',
+              },
+              __typename: 'ContentChannel',
+            },
+            {
+              id: 'ContentChannel:7fba1b1ee253e0fd5f0795b4b8b1175e',
+              name: 'Devotion Series',
+              childContentItemsConnection: {
+                edges: [
+                  {
+                    node: {
+                      id:
+                        'ContentSeriesContentItem:b085ec27d53006e9e6b95f3ac57da581',
+                      title: 'Jeremiah: A 33-Day Devotional',
+                      hyphenatedTitle: 'Jeremiah: A 33-Day Devotional',
+                      isLiked: true,
+                      likedCount: 6,
+                      summary: 'Have you ever had to deliver difficult news?',
+                      coverImage: {
+                        name: 'Square Image',
+                        sources: [
+                          {
+                            uri:
+                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D31af1a61-360c-4b1e-8e62-45517c06a9a2',
+                            __typename: 'ImageMediaSource',
+                          },
+                        ],
+                        __typename: 'ImageMedia',
+                      },
+                      theme: null,
+                      parentChannel: {
+                        id: 'ContentChannel:7fba1b1ee253e0fd5f0795b4b8b1175e',
+                        name: 'Devotion Series',
+                        __typename: 'ContentChannel',
+                      },
+                      videos: [{ sources: [], __typename: 'VideoMedia' }],
+                      audios: [],
+                      __typename: 'ContentSeriesContentItem',
+                    },
+                    __typename: 'ContentItemsConnectionEdge',
+                  },
+                  {
+                    node: {
+                      id:
+                        'ContentSeriesContentItem:71bfdac0b98ea1b72a63ff4ea64e3c5a',
+                      title: 'How To Be A Better Leader: A 7-Day Devotional',
+                      hyphenatedTitle:
+                        'How To Be A Better Leader: A 7-Day Devotional',
+                      isLiked: false,
+                      likedCount: 0,
+                      summary: '',
+                      coverImage: {
+                        name: 'Square Image',
+                        sources: [
+                          {
+                            uri:
+                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3Dd3a96243-2558-4c04-bf41-3aadcf41771f',
+                            __typename: 'ImageMediaSource',
+                          },
+                        ],
+                        __typename: 'ImageMedia',
+                      },
+                      theme: null,
+                      parentChannel: {
+                        id: 'ContentChannel:7fba1b1ee253e0fd5f0795b4b8b1175e',
+                        name: 'Devotion Series',
+                        __typename: 'ContentChannel',
+                      },
+                      videos: [{ sources: [], __typename: 'VideoMedia' }],
+                      audios: [],
+                      __typename: 'ContentSeriesContentItem',
+                    },
+                    __typename: 'ContentItemsConnectionEdge',
+                  },
+                  {
+                    node: {
+                      id:
+                        'ContentSeriesContentItem:44fd3b82373ea8f197bd1e1e77c4bed0',
+                      title: '2 Thessalonians: A 5-Day Devotional',
+                      hyphenatedTitle: '2 Thessalonians: A 5-Day Devotional',
+                      isLiked: false,
+                      likedCount: 0,
+                      summary: '',
+                      coverImage: {
+                        name: 'Square Image',
+                        sources: [
+                          {
+                            uri:
+                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D70b0b57c-5a15-4f46-8e6a-c759231685bf',
+                            __typename: 'ImageMediaSource',
+                          },
+                        ],
+                        __typename: 'ImageMedia',
+                      },
+                      theme: null,
+                      parentChannel: {
+                        id: 'ContentChannel:7fba1b1ee253e0fd5f0795b4b8b1175e',
+                        name: 'Devotion Series',
+                        __typename: 'ContentChannel',
+                      },
+                      videos: [{ sources: [], __typename: 'VideoMedia' }],
+                      audios: [],
+                      __typename: 'ContentSeriesContentItem',
+                    },
+                    __typename: 'ContentItemsConnectionEdge',
+                  },
+                ],
+                __typename: 'ContentItemsConnection',
+              },
+              __typename: 'ContentChannel',
+            },
+            {
+              id: 'ContentChannel:be7381e9c2fea9f41504cd98d4b14321',
+              name: 'Stories',
+              childContentItemsConnection: {
+                edges: [
+                  {
+                    node: {
+                      id:
+                        'UniversalContentItem:cf8fa657f23af88a2d63f7e4a2237db8',
+                      title:
+                        'The surprising journey that changed me and my dad',
+                      hyphenatedTitle:
+                        'The surprising journey that changed me and my dad',
+                      isLiked: false,
+                      likedCount: 6,
+                      summary:
+                        'My father, Darwin, has always been involved in my life.',
+                      coverImage: {
+                        name: 'Square Image',
+                        sources: [
+                          {
+                            uri:
+                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D2a65e561-cd6e-4590-bb37-029a21c554e8',
+                            __typename: 'ImageMediaSource',
+                          },
+                        ],
+                        __typename: 'ImageMedia',
+                      },
+                      theme: null,
+                      parentChannel: {
+                        id: 'ContentChannel:be7381e9c2fea9f41504cd98d4b14321',
+                        name: 'Stories',
+                        __typename: 'ContentChannel',
+                      },
+                      videos: [],
+                      audios: [],
+                      __typename: 'UniversalContentItem',
+                    },
+                    __typename: 'ContentItemsConnectionEdge',
+                  },
+                  {
+                    node: {
+                      id:
+                        'UniversalContentItem:2e17f5a66407d114ab9f2392b03ebccd',
+                      title: 'When I lost hope, my church family had my back',
+                      hyphenatedTitle:
+                        'When I lost hope, my church family had my back',
+                      isLiked: true,
+                      likedCount: 5,
+                      summary:
+                        'Brian Kalwat was just trying to knock something off his honey-do list.',
+                      coverImage: {
+                        name: 'Square Image',
+                        sources: [
+                          {
+                            uri:
+                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D0305285f-1155-4405-ba38-a61b9c8558be',
+                            __typename: 'ImageMediaSource',
+                          },
+                        ],
+                        __typename: 'ImageMedia',
+                      },
+                      theme: null,
+                      parentChannel: {
+                        id: 'ContentChannel:be7381e9c2fea9f41504cd98d4b14321',
+                        name: 'Stories',
+                        __typename: 'ContentChannel',
+                      },
+                      videos: [],
+                      audios: [],
+                      __typename: 'UniversalContentItem',
+                    },
+                    __typename: 'ContentItemsConnectionEdge',
+                  },
+                  {
+                    node: {
+                      id:
+                        'UniversalContentItem:ae8ec75906ba7437c49ad2534b5024db',
+                      title: 'A Place to Worship Free of Fear',
+                      hyphenatedTitle: 'A Place to Worship Free of Fear',
+                      isLiked: false,
+                      likedCount: 1,
+                      summary:
+                        'Cornelius &amp; Stephanie Mack, proud parents of a Special Friends adult, share about their experience\nOur son Cameron began attending Willow Creek Special Friends in 2015.',
+                      coverImage: {
+                        name: 'Portrait Image',
+                        sources: [
+                          {
+                            uri:
+                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3Da65bc45d-f961-4b7e-a899-63eb1f9b8da9',
+                            __typename: 'ImageMediaSource',
+                          },
+                        ],
+                        __typename: 'ImageMedia',
+                      },
+                      theme: null,
+                      parentChannel: {
+                        id: 'ContentChannel:be7381e9c2fea9f41504cd98d4b14321',
+                        name: 'Stories',
+                        __typename: 'ContentChannel',
+                      },
+                      videos: [],
+                      audios: [],
+                      __typename: 'UniversalContentItem',
+                    },
+                    __typename: 'ContentItemsConnectionEdge',
+                  },
+                ],
+                __typename: 'ContentItemsConnection',
+              },
+              __typename: 'ContentChannel',
+            },
+          ],
+        },
+      },
+    };
+    const mockChannelCardData = flatMap(
+      mockFeedData.result.data.contentChannels,
+      (contentChannel) =>
+        contentChannel.childContentItemsConnection.edges.map((edge) => ({
+          request: {
+            query: GET_CONTENT_CARD,
+            variables: { contentId: edge.node.id },
+          },
+          result: {
+            data: {
+              node: edge.node,
+            },
+          },
+        }))
+    );
+
+    const DiscoverStack = createStackNavigator({ DiscoverFeed });
+    const DiscoverFeedWithNavigation = createAppContainer(DiscoverStack);
+    const tree = await renderWithApolloData(
+      <Providers mocks={[mockFeedData, ...mockChannelCardData]}>
+        <DiscoverFeedWithNavigation />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a loading state', () => {
+    const DiscoverStack = createStackNavigator({ DiscoverFeed });
+    const DiscoverFeedWithNavigation = createAppContainer(DiscoverStack);
+    const tree = renderer.create(
+      <Providers cache={null}>
+        <DiscoverFeedWithNavigation />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/tabs/discover/DiscoverFeed/TileContentFeed.js b/apolloschurchapp/src/tabs/discover/DiscoverFeed/TileContentFeed.js
new file mode 100644
index 0000000..62c31bb
--- /dev/null
+++ b/apolloschurchapp/src/tabs/discover/DiscoverFeed/TileContentFeed.js
@@ -0,0 +1,113 @@
+import React from 'react';
+import { View } from 'react-native';
+import { withNavigation } from 'react-navigation';
+import isEmpty from 'lodash/isEmpty';
+import PropTypes from 'prop-types';
+
+import {
+  styled,
+  withTheme,
+  H5,
+  H6,
+  HorizontalTileFeed,
+  ButtonLink,
+  TouchableScale,
+  Touchable,
+  withIsLoading,
+} from '@apollosproject/ui-kit';
+
+import HorizontalContentCardConnected from '../../../ui/HorizontalContentCardConnected';
+
+const RowHeader = styled(({ theme }) => ({
+  flexDirection: 'row',
+  justifyContent: 'space-between',
+  alignItems: 'center',
+  zIndex: 2, // UX hack to improve tapability. Positions RowHeader above StyledHorizontalTileFeed
+  paddingLeft: theme.sizing.baseUnit,
+}))(View);
+
+const Name = styled({
+  flexGrow: 2,
+})(View);
+
+const AndroidTouchableFix = withTheme(({ theme }) => ({
+  borderRadius: theme.sizing.baseBorderRadius / 2,
+}))(Touchable);
+
+const ButtonLinkSpacing = styled(({ theme }) => ({
+  flexDirection: 'row', // correctly positions the loading state
+  justifyContent: 'flex-end', // correctly positions the loading state
+  padding: theme.sizing.baseUnit, // UX hack to improve tapability.
+}))(View);
+
+const StyledHorizontalTileFeed = styled(({ theme }) => ({
+  /* UX hack to improve tapability. The magic number below happens to be the number of pixels that
+   * aligns everything in the same place as if none of the UX hacks were there. */
+  marginTop: theme.sizing.baseUnit * -1.25,
+  paddingBottom: theme.sizing.baseUnit,
+  zIndex: 1,
+}))(HorizontalTileFeed);
+
+const loadingStateObject = {
+  id: 'fake_id',
+  title: '',
+  coverImage: [],
+};
+
+const TileContentFeed = ({ isLoading, id, name, navigation, content = [] }) =>
+  (isLoading || !isEmpty(content)) && (
+    <>
+      <RowHeader>
+        <Name>
+          <H5>{name}</H5>
+        </Name>
+        <AndroidTouchableFix
+          onPress={() => {
+            navigation.navigate('ContentFeed', {
+              itemId: id,
+              itemTitle: name,
+            });
+          }}
+        >
+          <ButtonLinkSpacing>
+            <H6>
+              <ButtonLink>View All</ButtonLink>
+            </H6>
+          </ButtonLinkSpacing>
+        </AndroidTouchableFix>
+      </RowHeader>
+      <StyledHorizontalTileFeed
+        content={content}
+        renderItem={({ item }) => (
+          <TouchableScale
+            onPress={() => {
+              navigation.push('ContentSingle', {
+                itemId: item.id,
+              });
+            }}
+          >
+            <HorizontalContentCardConnected
+              contentId={item.id}
+              isLoading={isLoading}
+            />
+          </TouchableScale>
+        )}
+        loadingStateObject={loadingStateObject}
+        isLoading={isLoading}
+      />
+    </>
+  );
+
+TileContentFeed.propTypes = {
+  navigation: PropTypes.shape({
+    navigate: PropTypes.func,
+  }),
+  isLoading: PropTypes.bool,
+  id: PropTypes.string,
+  name: PropTypes.string,
+  content: PropTypes.arrayOf(
+    PropTypes.any // this component doesn't care about the shape of `node`, just that it exists
+  ),
+};
+
+export default withNavigation(withIsLoading(TileContentFeed));
diff --git a/apolloschurchapp/src/tabs/discover/getContentChannels.js b/apolloschurchapp/src/tabs/discover/DiscoverFeed/getContentChannels.js
similarity index 54%
rename from apolloschurchapp/src/tabs/discover/getContentChannels.js
rename to apolloschurchapp/src/tabs/discover/DiscoverFeed/getContentChannels.js
index c5d2793..8168eb9 100644
--- a/apolloschurchapp/src/tabs/discover/getContentChannels.js
+++ b/apolloschurchapp/src/tabs/discover/DiscoverFeed/getContentChannels.js
@@ -1,4 +1,5 @@
 import gql from 'graphql-tag';
+import ApollosConfig from '@apollosproject/config';
 
 export default gql`
   query getContentChannels {
@@ -9,20 +10,11 @@ export default gql`
         edges {
           node {
             id
-            title
-            coverImage {
-              sources {
-                uri
-              }
-            }
-            sharing {
-              title
-              message
-              url
-            }
+            ...contentCardFragment
           }
         }
       }
     }
   }
+  ${ApollosConfig.FRAGMENTS.CONTENT_CARD_FRAGMENT}
 `;
diff --git a/apolloschurchapp/src/tabs/discover/DiscoverFeed/index.js b/apolloschurchapp/src/tabs/discover/DiscoverFeed/index.js
new file mode 100644
index 0000000..9e4006b
--- /dev/null
+++ b/apolloschurchapp/src/tabs/discover/DiscoverFeed/index.js
@@ -0,0 +1,52 @@
+import React, { memo } from 'react';
+import { Query } from 'react-apollo';
+import { get } from 'lodash';
+
+import { FeedView } from '@apollosproject/ui-kit';
+
+import TileContentFeed from './TileContentFeed';
+import GET_CONTENT_CHANNELS from './getContentChannels';
+
+const childContentItemLoadingState = {
+  title: '',
+  isLoading: true,
+};
+
+const feedItemLoadingState = {
+  name: '',
+  isLoading: true,
+};
+
+const renderItem = (
+  { item } // eslint-disable-line react/prop-types
+) => (
+  <TileContentFeed
+    id={item.id}
+    name={item.name}
+    content={get(item, 'childContentItemsConnection.edges', []).map(
+      (edge) => edge.node
+    )}
+    isLoading={item.isLoading}
+    loadingStateObject={childContentItemLoadingState}
+  />
+);
+
+const DiscoverFeed = memo(() => (
+  <Query query={GET_CONTENT_CHANNELS} fetchPolicy="cache-and-network">
+    {({ error, loading, data: { contentChannels = [] } = {}, refetch }) => (
+      <FeedView
+        error={error}
+        content={contentChannels}
+        isLoading={loading && !contentChannels.length}
+        refetch={refetch}
+        renderItem={renderItem}
+        loadingStateObject={feedItemLoadingState}
+        numColumns={1}
+      />
+    )}
+  </Query>
+));
+
+DiscoverFeed.displayName = 'DiscoverFeed';
+
+export default DiscoverFeed;
diff --git a/apolloschurchapp/src/tabs/discover/SearchFeed/NoResults.js b/apolloschurchapp/src/tabs/discover/SearchFeed/NoResults.js
new file mode 100644
index 0000000..7cc7a56
--- /dev/null
+++ b/apolloschurchapp/src/tabs/discover/SearchFeed/NoResults.js
@@ -0,0 +1,57 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+
+import {
+  styled,
+  withTheme,
+  CenteredView,
+  PaddedView,
+  Icon,
+  H4,
+  BodySmall,
+} from '@apollosproject/ui-kit';
+
+const StyledIcon = withTheme(({ theme }) => ({
+  fill: theme.colors.text.tertiary,
+  style: {
+    marginRight: theme.sizing.baseUnit / 2,
+  },
+}))(Icon);
+
+const Title = styled({
+  flexDirection: 'row',
+  alignItems: 'center',
+})(PaddedView);
+
+const NoResultsText = styled(
+  ({ theme }) => ({
+    color: theme.colors.text.tertiary,
+    textAlign: 'center',
+  }),
+  'Discover.SearchFeed.NoResultsText'
+);
+
+const StyledH4 = NoResultsText(H4);
+const StyledBodySmall = NoResultsText(BodySmall);
+
+const NoResults = ({ searchText }) => (
+  <CenteredView>
+    <Title vertical={false}>
+      <StyledIcon name={'umbrella'} />
+      <StyledH4 padded>Uh Oh!</StyledH4>
+    </Title>
+    <PaddedView vertical={false}>
+      <StyledBodySmall>
+        {"Looks like we couldn't find anything for "}
+        <StyledBodySmall bold>{`"${searchText}."`}</StyledBodySmall>
+        {' Try searching for something else!'}
+      </StyledBodySmall>
+    </PaddedView>
+  </CenteredView>
+);
+
+NoResults.propTypes = {
+  searchText: PropTypes.string,
+};
+
+export default NoResults;
diff --git a/apolloschurchapp/src/tabs/discover/SearchFeed/SearchFeed.tests.js b/apolloschurchapp/src/tabs/discover/SearchFeed/SearchFeed.tests.js
new file mode 100644
index 0000000..aed2839
--- /dev/null
+++ b/apolloschurchapp/src/tabs/discover/SearchFeed/SearchFeed.tests.js
@@ -0,0 +1,353 @@
+import React from 'react';
+import { flatMap } from 'lodash';
+import { createStackNavigator, createAppContainer } from 'react-navigation';
+import renderer from 'react-test-renderer';
+
+import Providers from '../../../Providers';
+import { renderWithApolloData } from '../../../utils/testUtils';
+import GET_CONTENT_CARD from '../../../ui/ContentCardConnected/query';
+
+import GET_SEARCH_RESULTS from './getSearchResults';
+import SearchFeed from '.';
+
+describe('The SearchFeed component', () => {
+  it('should render', async () => {
+    const mockFeedData = {
+      request: {
+        query: GET_SEARCH_RESULTS,
+        variables: { searchText: 'Love' },
+      },
+      result: {
+        data: {
+          search: {
+            edges: [
+              {
+                title: 'How to lead people to Jesus',
+                summary:
+                  'Love compels a mother to lose all dignity in public as she screams the name of her lost child.',
+                coverImage: {
+                  name: null,
+                  sources: [
+                    {
+                      uri:
+                        'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3Dd3a96243-2558-4c04-bf41-3aadcf41771f',
+                      __typename: 'ImageMediaSource',
+                    },
+                  ],
+                  __typename: 'ImageMedia',
+                },
+                cursor: 'b487224762b030f470967f45d7205823',
+                node: {
+                  id: 'DevotionalContentItem:561dfb7dbd8a5c093fd8385c7edaadbc',
+                  title: 'How to lead people to Jesus',
+                  hyphenatedTitle: '-',
+                  isLiked: false,
+                  likedCount: 0,
+                  summary:
+                    'Love compels a mother to lose all dignity in public as she screams the name of her lost child.',
+                  coverImage: {
+                    name: 'Square Image',
+                    sources: [
+                      {
+                        uri:
+                          'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3Dd3a96243-2558-4c04-bf41-3aadcf41771f',
+                        __typename: 'ImageMediaSource',
+                      },
+                    ],
+                    __typename: 'ImageMedia',
+                  },
+                  theme: null,
+                  parentChannel: {
+                    id: 'ContentChannel:559b23fd0aa90e81b1c023e72e230fa1',
+                    name: 'Devotional',
+                    __typename: 'ContentChannel',
+                  },
+                  videos: [{ sources: [], __typename: 'VideoMedia' }],
+                  audios: [],
+                  __typename: 'DevotionalContentItem',
+                },
+                __typename: 'SearchResult',
+              },
+              {
+                title: 'Live for Freedom Toolkit',
+                summary:
+                  "Get in the Groove\nCelebrate your freedom in Christ — in the car, shower, cubicle or wherever you go — with this playlist of NewSpring Worship's favorite songs of the summer.",
+                coverImage: null,
+                cursor: '4affc1122ad80d4edcf6c5bc9d88ae99',
+                node: {
+                  id: 'UniversalContentItem:95ff79f60a028b1b506aaeedf8b4c6ae',
+                  title: 'Live for Freedom Toolkit',
+                  hyphenatedTitle: '-',
+                  isLiked: false,
+                  likedCount: 1,
+                  summary:
+                    "Get in the Groove\nCelebrate your freedom in Christ — in the car, shower, cubicle or wherever you go — with this playlist of NewSpring Worship's favorite songs of the summer.",
+                  coverImage: null,
+                  theme: null,
+                  parentChannel: {
+                    id: 'ContentChannel:4f68015ba18662a7409d1219a4ce013e',
+                    name: 'Articles',
+                    __typename: 'ContentChannel',
+                  },
+                  videos: [],
+                  audios: [],
+                  __typename: 'UniversalContentItem',
+                },
+                __typename: 'SearchResult',
+              },
+              {
+                title: 'Should your 20-something live at home?',
+                summary:
+                  'Daughter: “Mom, can I bring some friends from college over for dinner Sunday?',
+                coverImage: {
+                  name: null,
+                  sources: [
+                    {
+                      uri:
+                        'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3Db08e4d69-0acf-40ff-920a-4517de086175',
+                      __typename: 'ImageMediaSource',
+                    },
+                  ],
+                  __typename: 'ImageMedia',
+                },
+                cursor: '659a26257a49fb2bf1446bb747bf7dd3',
+                node: {
+                  id: 'UniversalContentItem:895738f70482712adb3ab45a08c30456',
+                  title: 'Should your 20-something live at home?',
+                  hyphenatedTitle: '-',
+                  isLiked: false,
+                  likedCount: 0,
+                  summary:
+                    'Daughter: “Mom, can I bring some friends from college over for dinner Sunday?',
+                  coverImage: {
+                    name: 'Landscape Image',
+                    sources: [
+                      {
+                        uri:
+                          'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3Db08e4d69-0acf-40ff-920a-4517de086175',
+                        __typename: 'ImageMediaSource',
+                      },
+                    ],
+                    __typename: 'ImageMedia',
+                  },
+                  theme: null,
+                  parentChannel: {
+                    id: 'ContentChannel:4f68015ba18662a7409d1219a4ce013e',
+                    name: 'Articles',
+                    __typename: 'ContentChannel',
+                  },
+                  videos: [],
+                  audios: [],
+                  __typename: 'UniversalContentItem',
+                },
+                __typename: 'SearchResult',
+              },
+              {
+                title: 'Guys Night!',
+                summary: 'A time to connect with other guys who live nearby.',
+                coverImage: {
+                  name: null,
+                  sources: [
+                    {
+                      uri:
+                        'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D58c037fa-cc7f-4d72-9571-a0cc0558e346',
+                      __typename: 'ImageMediaSource',
+                    },
+                  ],
+                  __typename: 'ImageMedia',
+                },
+                cursor: 'c8d2fe738629909c33010432432f21c8',
+                node: {
+                  id: 'UniversalContentItem:296373ecb53580855cadffa0375ebe18',
+                  title: 'Guys Night!',
+                  hyphenatedTitle: '-',
+                  isLiked: false,
+                  likedCount: 0,
+                  summary: 'A time to connect with other guys who live nearby.',
+                  coverImage: {
+                    name: 'Square Image',
+                    sources: [
+                      {
+                        uri:
+                          'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D58c037fa-cc7f-4d72-9571-a0cc0558e346',
+                        __typename: 'ImageMediaSource',
+                      },
+                    ],
+                    __typename: 'ImageMedia',
+                  },
+                  theme: null,
+                  parentChannel: {
+                    id: 'ContentChannel:965b6e6d7046a885bea4e300b5c0400d',
+                    name: 'News',
+                    __typename: 'ContentChannel',
+                  },
+                  videos: [],
+                  audios: [],
+                  __typename: 'UniversalContentItem',
+                },
+                __typename: 'SearchResult',
+              },
+              {
+                title: '10 ways to refresh your spirit every day',
+                summary:
+                  '1. Be slow What would it look like to live your life at half-speed?',
+                coverImage: null,
+                cursor: 'ba47485fbc61945a38a4147fe7ff3703',
+                node: {
+                  id: 'UniversalContentItem:c495ff18cd998ed516a798b6218907cd',
+                  title: '10 ways to refresh your spirit every day',
+                  hyphenatedTitle: '-',
+                  isLiked: false,
+                  likedCount: 2,
+                  summary:
+                    '1. Be slow What would it look like to live your life at half-speed?',
+                  coverImage: null,
+                  theme: null,
+                  parentChannel: {
+                    id: 'ContentChannel:4f68015ba18662a7409d1219a4ce013e',
+                    name: 'Articles',
+                    __typename: 'ContentChannel',
+                  },
+                  videos: [],
+                  audios: [],
+                  __typename: 'UniversalContentItem',
+                },
+                __typename: 'SearchResult',
+              },
+              {
+                title: 'Why leadership isn’t all about the title',
+                summary:
+                  'We all like to know that our boss or the authority over us is pleased, and it means even more when they take the time to share that in front of other people.',
+                coverImage: {
+                  name: null,
+                  sources: [
+                    {
+                      uri:
+                        'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3Dd3a96243-2558-4c04-bf41-3aadcf41771f',
+                      __typename: 'ImageMediaSource',
+                    },
+                  ],
+                  __typename: 'ImageMedia',
+                },
+                cursor: '9456eef87e314dcf19f013384a29fd22',
+                node: {
+                  id: 'DevotionalContentItem:4dd74ceca9e09b5276e93cbf53821bd6',
+                  title: 'Why leadership isn’t all about the title',
+                  hyphenatedTitle: '-',
+                  isLiked: false,
+                  likedCount: 0,
+                  summary:
+                    'We all like to know that our boss or the authority over us is pleased, and it means even more when they take the time to share that in front of other people.',
+                  coverImage: {
+                    name: 'Square Image',
+                    sources: [
+                      {
+                        uri:
+                          'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3Dd3a96243-2558-4c04-bf41-3aadcf41771f',
+                        __typename: 'ImageMediaSource',
+                      },
+                    ],
+                    __typename: 'ImageMedia',
+                  },
+                  theme: null,
+                  parentChannel: {
+                    id: 'ContentChannel:559b23fd0aa90e81b1c023e72e230fa1',
+                    name: 'Devotional',
+                    __typename: 'ContentChannel',
+                  },
+                  videos: [{ sources: [], __typename: 'VideoMedia' }],
+                  audios: [],
+                  __typename: 'DevotionalContentItem',
+                },
+                __typename: 'SearchResult',
+              },
+            ],
+            __typename: 'SearchResultsConnection',
+          },
+        },
+      },
+    };
+
+    const mockSearchResultsCardData = flatMap(
+      mockFeedData.result.data.search.edges,
+      (node) => ({
+        request: {
+          query: GET_CONTENT_CARD,
+          variables: { contentId: node.id },
+        },
+        result: {
+          data: {
+            node,
+          },
+        },
+      })
+    );
+
+    const SearchStack = createStackNavigator({
+      SearchFeed: (props) => <SearchFeed searchText={'Love'} {...props} />, // eslint-disable-line react/display-name
+    });
+    const SearchFeedWithNavigation = createAppContainer(SearchStack);
+    const tree = await renderWithApolloData(
+      <Providers mocks={[mockFeedData, ...mockSearchResultsCardData]}>
+        <SearchFeedWithNavigation searchText={'Love'} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render an empty state', async () => {
+    const mockEmptyFeedData = {
+      request: {
+        query: GET_SEARCH_RESULTS,
+        variables: { searchText: 'No results here' },
+      },
+      result: {
+        data: {
+          search: {
+            edges: [],
+            __typename: 'SearchResultsConnection',
+          },
+        },
+      },
+    };
+
+    const mockEmptySearchResultsCardData = [
+      {
+        request: {
+          query: GET_CONTENT_CARD,
+          variables: { contentId: 'fake-id' },
+        },
+        result: {
+          data: {},
+        },
+      },
+    ];
+
+    const SearchStack = createStackNavigator({
+      // eslint-disable-next-line react/display-name
+      SearchFeed: (props) => (
+        <SearchFeed searchText={'No results here'} {...props} />
+      ),
+    });
+
+    const SearchFeedWithNavigation = createAppContainer(SearchStack);
+    const tree = await renderWithApolloData(
+      <Providers
+        mocks={[mockEmptyFeedData, ...mockEmptySearchResultsCardData]}
+        cache={null}
+      >
+        <SearchFeedWithNavigation searchText={'No results here'} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a loading state', () => {
+    const SearchStack = createStackNavigator({ SearchFeed });
+    const SearchFeedWithNavigation = createAppContainer(SearchStack);
+    const tree = renderer.create(
+      <Providers cache={null}>
+        <SearchFeedWithNavigation searchText={'Love'} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/tabs/discover/SearchFeed/getSearchResults.js b/apolloschurchapp/src/tabs/discover/SearchFeed/getSearchResults.js
new file mode 100644
index 0000000..9f7dbe8
--- /dev/null
+++ b/apolloschurchapp/src/tabs/discover/SearchFeed/getSearchResults.js
@@ -0,0 +1,25 @@
+import gql from 'graphql-tag';
+
+export default gql`
+  query searchResults($searchText: String!) {
+    search(query: $searchText) {
+      edges {
+        title
+        summary
+        coverImage {
+          name
+          sources {
+            uri
+          }
+        }
+        cursor
+        node {
+          ... on ContentItem {
+            id
+            __typename
+          }
+        }
+      }
+    }
+  }
+`;
diff --git a/apolloschurchapp/src/tabs/discover/SearchFeed/index.js b/apolloschurchapp/src/tabs/discover/SearchFeed/index.js
new file mode 100644
index 0000000..2e6c5ec
--- /dev/null
+++ b/apolloschurchapp/src/tabs/discover/SearchFeed/index.js
@@ -0,0 +1,58 @@
+import React from 'react';
+import { withProps } from 'recompose';
+import { withNavigation } from 'react-navigation';
+import { Query } from 'react-apollo';
+import { get } from 'lodash';
+import PropTypes from 'prop-types';
+
+import { FeedView } from '@apollosproject/ui-kit';
+
+import SearchCard from '../../../ui/SearchCard';
+
+import GET_SEARCH_RESULTS from './getSearchResults';
+import NoResults from './NoResults';
+
+// this could be refactored into a custom effect hook 💥
+const StyledFeedView = withProps(({ hasContent }) => ({
+  contentContainerStyle: {
+    ...(hasContent ? {} : { flex: 1 }),
+  },
+}))(FeedView);
+
+const handleOnPress = ({ navigation, item }) => {
+  const id = get(item, 'node.id', null);
+  return navigation.navigate('ContentSingle', {
+    itemId: id,
+    transitionKey: item.transitionKey,
+  });
+};
+
+const keyExtractor = (item) => item && get(item, 'node.id', null);
+
+const SearchFeed = withNavigation(({ navigation, searchText }) => (
+  <Query
+    query={GET_SEARCH_RESULTS}
+    variables={{ searchText }}
+    fetchPolicy="cache-and-network"
+  >
+    {({ loading, error, data, refetch }) => (
+      <StyledFeedView
+        ListItemComponent={SearchCard}
+        content={get(data, 'search.edges', [])}
+        ListEmptyComponent={() => <NoResults searchText={searchText} />}
+        hasContent={get(data, 'search.edges', []).length}
+        isLoading={loading}
+        error={error}
+        refetch={refetch}
+        onPressItem={(item) => handleOnPress({ navigation, item })}
+        keyExtractor={keyExtractor}
+      />
+    )}
+  </Query>
+));
+
+SearchFeed.propTypes = {
+  searchText: PropTypes.string,
+};
+
+export default SearchFeed;
diff --git a/apolloschurchapp/src/tabs/discover/TileContentFeed.js b/apolloschurchapp/src/tabs/discover/TileContentFeed.js
deleted file mode 100644
index 973eef1..0000000
--- a/apolloschurchapp/src/tabs/discover/TileContentFeed.js
+++ /dev/null
@@ -1,68 +0,0 @@
-import React from 'react';
-import { withNavigation } from 'react-navigation';
-import PropTypes from 'prop-types';
-
-import PaddedView from 'apolloschurchapp/src/ui/PaddedView';
-import { H4 } from 'apolloschurchapp/src/ui/typography';
-import HorizontalTileFeed from 'apolloschurchapp/src/ui/HorizontalTileFeed';
-import styled from 'apolloschurchapp/src/ui/styled';
-import { ButtonLink } from 'apolloschurchapp/src/ui/Button';
-
-import TileImageItem from './TileImageItem';
-
-const RowHeader = styled({
-  flexDirection: 'row',
-  justifyContent: 'space-between',
-  alignItems: 'center',
-  paddingVertical: 0,
-})(PaddedView);
-
-const TileContentFeed = ({ isLoading, id, name, navigation, content = [] }) => (
-  <PaddedView horizontal={false}>
-    <RowHeader>
-      <H4 isLoading={isLoading}>{name}</H4>
-      {!isLoading ? (
-        <ButtonLink
-          onPress={() => {
-            navigation.navigate('ContentFeed', {
-              itemId: id,
-              itemTitle: name,
-            });
-          }}
-        >
-          View All
-        </ButtonLink>
-      ) : null}
-    </RowHeader>
-    <HorizontalTileFeed
-      content={content}
-      renderItem={({ item }) => (
-        <TileImageItem
-          item={item}
-          isLoading={isLoading}
-          navigation={navigation}
-        />
-      )}
-      loadingStateObject={{
-        id: 'fake_id',
-        title: '',
-        coverImage: [],
-      }}
-      isLoading={isLoading}
-    />
-  </PaddedView>
-);
-
-TileContentFeed.propTypes = {
-  navigation: PropTypes.shape({
-    navigate: PropTypes.func,
-  }),
-  isLoading: PropTypes.bool,
-  id: PropTypes.string,
-  name: PropTypes.string,
-  content: PropTypes.arrayOf(
-    PropTypes.any // this component doesn't care about the shape of `node`, just that it exists
-  ),
-};
-
-export default withNavigation(TileContentFeed);
diff --git a/apolloschurchapp/src/tabs/discover/TileImageItem.js b/apolloschurchapp/src/tabs/discover/TileImageItem.js
index 6cb2af2..da8c732 100644
--- a/apolloschurchapp/src/tabs/discover/TileImageItem.js
+++ b/apolloschurchapp/src/tabs/discover/TileImageItem.js
@@ -2,16 +2,17 @@ import React from 'react';
 import { View } from 'react-native';
 import PropTypes from 'prop-types';
 
-import TileImage from 'apolloschurchapp/src/ui/TileImage';
-import styled from 'apolloschurchapp/src/ui/styled';
+import { TileImage, styled } from '@apollosproject/ui-kit';
 
 const Container = styled(({ theme }) => ({
   flex: 1,
   padding: theme.sizing.baseUnit / 2,
+  paddingLeft: theme.sizing.baseUnit,
+  paddingRight: 0,
 }))(View);
 
 const TileImageItem = ({
-  item: { id, title, coverImage = {}, sharing } = {},
+  item: { id, title, coverImage = {} } = {},
   isLoading,
   navigation,
 }) => (
@@ -20,7 +21,6 @@ const TileImageItem = ({
       onPressItem={() =>
         navigation.navigate('ContentSingle', {
           itemId: id,
-          sharing,
         })
       }
       isLoading={isLoading}
diff --git a/apolloschurchapp/src/tabs/discover/discover.tests.js b/apolloschurchapp/src/tabs/discover/discover.tests.js
index 96f2fde..ecedffb 100644
--- a/apolloschurchapp/src/tabs/discover/discover.tests.js
+++ b/apolloschurchapp/src/tabs/discover/discover.tests.js
@@ -1,52 +1,211 @@
 import React from 'react';
-import renderer from 'react-test-renderer';
-import { createStackNavigator } from 'react-navigation';
+import { flatMap } from 'lodash';
+import { createStackNavigator, createAppContainer } from 'react-navigation';
 
-import Providers from 'apolloschurchapp/src/Providers';
+import Providers from '../../Providers';
+
+import { renderWithApolloData } from '../../utils/testUtils';
+import GET_CONTENT_CARD from '../../ui/ContentCardConnected/query';
 
 import Discover from './Discover';
-import getContentChannels from './getContentChannels';
+import GET_CONTENT_CHANNELS from './DiscoverFeed/getContentChannels';
 
-describe('Test the Discover Component Query', () => {
-  it('Should retrieve the Content Channel Feeds', () => {
-    const mock = {
+describe('The Discover tab component', () => {
+  it('Should retrieve the Content Channel Feeds', async () => {
+    const mockFeedData = {
       request: {
-        query: getContentChannels,
+        query: GET_CONTENT_CHANNELS,
       },
       result: {
         data: {
           contentChannels: [
+            {
+              id: 'ContentChannel:965b6e6d7046a885bea4e300b5c0400d',
+              name: 'News',
+              childContentItemsConnection: {
+                edges: [
+                  {
+                    node: {
+                      id:
+                        'UniversalContentItem:00bb7b364911281c97fc50f2a0d17b11',
+                      title: 'Anderson Family Cookout!',
+                      hyphenatedTitle: 'Anderson Family Cookout!',
+                      isLiked: false,
+                      likedCount: 0,
+                      summary: 'Come join us!',
+                      coverImage: {
+                        name: 'Landscape Image',
+                        sources: [
+                          {
+                            uri:
+                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D62e0e2ba-2dac-468b-a852-7e8cf2533efc',
+                            __typename: 'ImageMediaSource',
+                          },
+                        ],
+                        __typename: 'ImageMedia',
+                      },
+                      theme: null,
+                      parentChannel: {
+                        id: 'ContentChannel:965b6e6d7046a885bea4e300b5c0400d',
+                        name: 'News',
+                        __typename: 'ContentChannel',
+                      },
+                      videos: [],
+                      audios: [],
+                      __typename: 'UniversalContentItem',
+                    },
+                    __typename: 'ContentItemsConnectionEdge',
+                  },
+                  {
+                    node: {
+                      id:
+                        'UniversalContentItem:7db601b238aa4345a818654300f83dd2',
+                      title: 'Robert Madu is Coming to Christ Fellowship',
+                      hyphenatedTitle:
+                        'Robert Madu is Coming to Christ Fellowship',
+                      isLiked: false,
+                      likedCount: 5,
+                      summary:
+                        "Don't miss a powerful message from preacher and speaker, Robert Madu.",
+                      coverImage: {
+                        name: 'Square Image',
+                        sources: [
+                          {
+                            uri:
+                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3Df3ba0936-8aab-46c1-8245-0e5aef637ae3',
+                            __typename: 'ImageMediaSource',
+                          },
+                        ],
+                        __typename: 'ImageMedia',
+                      },
+                      theme: null,
+                      parentChannel: {
+                        id: 'ContentChannel:965b6e6d7046a885bea4e300b5c0400d',
+                        name: 'News',
+                        __typename: 'ContentChannel',
+                      },
+                      videos: [],
+                      audios: [],
+                      __typename: 'UniversalContentItem',
+                    },
+                    __typename: 'ContentItemsConnectionEdge',
+                  },
+                  {
+                    node: {
+                      id:
+                        'UniversalContentItem:296373ecb53580855cadffa0375ebe18',
+                      title: 'Guys Night!',
+                      hyphenatedTitle: 'Guys Night!',
+                      isLiked: false,
+                      likedCount: 0,
+                      summary:
+                        'A time to connect with other guys who live nearby.',
+                      coverImage: {
+                        name: 'Square Image',
+                        sources: [
+                          {
+                            uri:
+                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D58c037fa-cc7f-4d72-9571-a0cc0558e346',
+                            __typename: 'ImageMediaSource',
+                          },
+                        ],
+                        __typename: 'ImageMedia',
+                      },
+                      theme: null,
+                      parentChannel: {
+                        id: 'ContentChannel:965b6e6d7046a885bea4e300b5c0400d',
+                        name: 'News',
+                        __typename: 'ContentChannel',
+                      },
+                      videos: [],
+                      audios: [],
+                      __typename: 'UniversalContentItem',
+                    },
+                    __typename: 'ContentItemsConnectionEdge',
+                  },
+                ],
+                __typename: 'ContentItemsConnection',
+              },
+              __typename: 'ContentChannel',
+            },
             {
               id: 'ContentChannel:4f68015ba18662a7409d1219a4ce013e',
-              name: 'Editorial',
+              name: 'Articles',
               childContentItemsConnection: {
                 edges: [
                   {
                     node: {
                       id:
-                        'UniversalContentItem:d57994350b9d213866b24dea3a97433d',
-                      title: 'Mea Animal Aperiam Ornatus Eu',
+                        'UniversalContentItem:604a4a763a5fc0edfe386684ca6b3515',
+                      title: 'Test Article',
+                      hyphenatedTitle: 'Test Article',
+                      isLiked: false,
+                      likedCount: 0,
+                      summary: 'Test article...',
                       coverImage: null,
+                      theme: null,
+                      parentChannel: {
+                        id: 'ContentChannel:4f68015ba18662a7409d1219a4ce013e',
+                        name: 'Articles',
+                        __typename: 'ContentChannel',
+                      },
+                      videos: [],
+                      audios: [],
+                      __typename: 'UniversalContentItem',
                     },
+                    __typename: 'ContentItemsConnectionEdge',
                   },
                   {
                     node: {
                       id:
-                        'UniversalContentItem:b36e55d803443431e96bb4b5068147ec',
-                      title: 'Probo Senserit Id Mea, Ut Sed Malis Postea,',
+                        'UniversalContentItem:c495ff18cd998ed516a798b6218907cd',
+                      title: '10 ways to refresh your spirit every day',
+                      hyphenatedTitle:
+                        '10 ways to refresh your spirit every day',
+                      isLiked: false,
+                      likedCount: 2,
+                      summary:
+                        '1. Be slow What would it look like to live your life at half-speed?',
                       coverImage: null,
+                      theme: null,
+                      parentChannel: {
+                        id: 'ContentChannel:4f68015ba18662a7409d1219a4ce013e',
+                        name: 'Articles',
+                        __typename: 'ContentChannel',
+                      },
+                      videos: [],
+                      audios: [],
+                      __typename: 'UniversalContentItem',
                     },
+                    __typename: 'ContentItemsConnectionEdge',
                   },
                   {
                     node: {
                       id:
-                        'UniversalContentItem:57c465ee3cd69524d729569b338607de',
-                      title: 'Ea Harum Albucius Mel',
+                        'UniversalContentItem:95ff79f60a028b1b506aaeedf8b4c6ae',
+                      title: 'Live for Freedom Toolkit',
+                      hyphenatedTitle: 'Live for Freedom Toolkit',
+                      isLiked: false,
+                      likedCount: 1,
+                      summary:
+                        "Get in the Groove\nCelebrate your freedom in Christ — in the car, shower, cubicle or wherever you go — with this playlist of NewSpring Worship's favorite songs of the summer.",
                       coverImage: null,
+                      theme: null,
+                      parentChannel: {
+                        id: 'ContentChannel:4f68015ba18662a7409d1219a4ce013e',
+                        name: 'Articles',
+                        __typename: 'ContentChannel',
+                      },
+                      videos: [],
+                      audios: [],
+                      __typename: 'UniversalContentItem',
                     },
+                    __typename: 'ContentItemsConnectionEdge',
                   },
                 ],
+                __typename: 'ContentItemsConnection',
               },
+              __typename: 'ContentChannel',
             },
             {
               id: 'ContentChannel:a0f64573eabf00a607bec911794d50fb',
@@ -56,50 +215,113 @@ describe('Test the Discover Component Query', () => {
                   {
                     node: {
                       id:
-                        'UniversalContentItem:1c627c20911791321f819125a65c3c9d',
-                      title: 'Money Wise',
+                        'ContentSeriesContentItem:6d8dc8e4bad017f815ae0cac8bf692bb',
+                      title: 'The New Weekend Experience',
+                      hyphenatedTitle: 'The New Weekend Experience',
+                      isLiked: false,
+                      likedCount: 1,
+                      summary:
+                        'Have you come into relationship with Jesus Christ?',
                       coverImage: {
+                        name: 'Series Image',
                         sources: [
                           {
                             uri:
-                              'https://apollosrock.newspring.cc/GetImage.ashx?guid=33e4c568-a456-4250-a8dc-6a4ceb548455',
+                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D98be229f-dfed-4344-86ab-0d11666fc781',
+                            __typename: 'ImageMediaSource',
                           },
                         ],
+                        __typename: 'ImageMedia',
+                      },
+                      theme: null,
+                      parentChannel: {
+                        id: 'ContentChannel:a0f64573eabf00a607bec911794d50fb',
+                        name: 'Sermon Series',
+                        __typename: 'ContentChannel',
                       },
+                      videos: [
+                        { sources: [], __typename: 'VideoMedia' },
+                        { sources: [], __typename: 'VideoMedia' },
+                      ],
+                      audios: [],
+                      __typename: 'ContentSeriesContentItem',
                     },
+                    __typename: 'ContentItemsConnectionEdge',
                   },
                   {
                     node: {
                       id:
-                        'UniversalContentItem:66a4d75b02b447556e4e3806430a9946',
-                      title: 'Momentum',
+                        'ContentSeriesContentItem:08449058d438ebeaffe9adb7a8e633cc',
+                      title: 'Gathering',
+                      hyphenatedTitle: 'Gathering',
+                      isLiked: false,
+                      likedCount: 0,
+                      summary: '',
                       coverImage: {
+                        name: 'Square Image',
                         sources: [
                           {
                             uri:
-                              'https://apollosrock.newspring.cc/GetImage.ashx?guid=F3F2E438-2AE8-4EF4-980B-709463691296',
+                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D50f4e3e3-2842-4991-9f64-8fc6fbb3067c',
+                            __typename: 'ImageMediaSource',
                           },
                         ],
+                        __typename: 'ImageMedia',
+                      },
+                      theme: null,
+                      parentChannel: {
+                        id: 'ContentChannel:a0f64573eabf00a607bec911794d50fb',
+                        name: 'Sermon Series',
+                        __typename: 'ContentChannel',
                       },
+                      videos: [
+                        { sources: [], __typename: 'VideoMedia' },
+                        { sources: [], __typename: 'VideoMedia' },
+                      ],
+                      audios: [],
+                      __typename: 'ContentSeriesContentItem',
                     },
+                    __typename: 'ContentItemsConnectionEdge',
                   },
                   {
                     node: {
                       id:
-                        'UniversalContentItem:22c861a5d54d09634018f7eb132c452e',
-                      title: 'Miracles in Luke',
+                        'ContentSeriesContentItem:b74c2d295a0cf1340232ffa8be856c00',
+                      title: 'Gauntlet 2018',
+                      hyphenatedTitle: 'Gauntlet 2018',
+                      isLiked: false,
+                      likedCount: 0,
+                      summary: '',
                       coverImage: {
+                        name: 'Square Image',
                         sources: [
                           {
                             uri:
-                              'https://apollosrock.newspring.cc/GetImage.ashx?guid=EDFDBD47-BBE8-4BE9-8D3F-CC0059BD4CCC',
+                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D3e3e38d2-d804-45db-b45a-3b7a82c415d1',
+                            __typename: 'ImageMediaSource',
                           },
                         ],
+                        __typename: 'ImageMedia',
                       },
+                      theme: null,
+                      parentChannel: {
+                        id: 'ContentChannel:a0f64573eabf00a607bec911794d50fb',
+                        name: 'Sermon Series',
+                        __typename: 'ContentChannel',
+                      },
+                      videos: [
+                        { sources: [], __typename: 'VideoMedia' },
+                        { sources: [], __typename: 'VideoMedia' },
+                      ],
+                      audios: [],
+                      __typename: 'ContentSeriesContentItem',
                     },
+                    __typename: 'ContentItemsConnectionEdge',
                   },
                 ],
+                __typename: 'ContentItemsConnection',
               },
+              __typename: 'ContentChannel',
             },
             {
               id: 'ContentChannel:7fba1b1ee253e0fd5f0795b4b8b1175e',
@@ -109,59 +331,241 @@ describe('Test the Discover Component Query', () => {
                   {
                     node: {
                       id:
-                        'UniversalContentItem:678b4a38968fc6004dd8b23e586c923e',
-                      title: 'Psalms: A 28-Day Devotional',
+                        'ContentSeriesContentItem:b085ec27d53006e9e6b95f3ac57da581',
+                      title: 'Jeremiah: A 33-Day Devotional',
+                      hyphenatedTitle: 'Jeremiah: A 33-Day Devotional',
+                      isLiked: true,
+                      likedCount: 6,
+                      summary: 'Have you ever had to deliver difficult news?',
                       coverImage: {
+                        name: 'Square Image',
                         sources: [
                           {
                             uri:
-                              'https://apollosrock.newspring.cc/GetImage.ashx?guid=ed857076-2623-4fdc-8476-50b3a60e0b68',
+                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D31af1a61-360c-4b1e-8e62-45517c06a9a2',
+                            __typename: 'ImageMediaSource',
                           },
                         ],
+                        __typename: 'ImageMedia',
+                      },
+                      theme: null,
+                      parentChannel: {
+                        id: 'ContentChannel:7fba1b1ee253e0fd5f0795b4b8b1175e',
+                        name: 'Devotion Series',
+                        __typename: 'ContentChannel',
                       },
+                      videos: [{ sources: [], __typename: 'VideoMedia' }],
+                      audios: [],
+                      __typename: 'ContentSeriesContentItem',
                     },
+                    __typename: 'ContentItemsConnectionEdge',
                   },
                   {
                     node: {
                       id:
-                        'UniversalContentItem:0f361c619b7e5dd511da181069498250',
-                      title: '2 Samuel: A 5-Week Devotional',
+                        'ContentSeriesContentItem:71bfdac0b98ea1b72a63ff4ea64e3c5a',
+                      title: 'How To Be A Better Leader: A 7-Day Devotional',
+                      hyphenatedTitle:
+                        'How To Be A Better Leader: A 7-Day Devotional',
+                      isLiked: false,
+                      likedCount: 0,
+                      summary: '',
                       coverImage: {
+                        name: 'Square Image',
                         sources: [
                           {
                             uri:
-                              'https://apollosrock.newspring.cc/GetImage.ashx?guid=aa68b674-9cf4-4f8a-8702-9564a4a9fa7b',
+                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3Dd3a96243-2558-4c04-bf41-3aadcf41771f',
+                            __typename: 'ImageMediaSource',
                           },
                         ],
+                        __typename: 'ImageMedia',
                       },
+                      theme: null,
+                      parentChannel: {
+                        id: 'ContentChannel:7fba1b1ee253e0fd5f0795b4b8b1175e',
+                        name: 'Devotion Series',
+                        __typename: 'ContentChannel',
+                      },
+                      videos: [{ sources: [], __typename: 'VideoMedia' }],
+                      audios: [],
+                      __typename: 'ContentSeriesContentItem',
                     },
+                    __typename: 'ContentItemsConnectionEdge',
                   },
                   {
                     node: {
                       id:
-                        'UniversalContentItem:bc1002007d482c412962ad6b1f24901a',
-                      title: '#MomLife: An 8-Day Devotional',
+                        'ContentSeriesContentItem:44fd3b82373ea8f197bd1e1e77c4bed0',
+                      title: '2 Thessalonians: A 5-Day Devotional',
+                      hyphenatedTitle: '2 Thessalonians: A 5-Day Devotional',
+                      isLiked: false,
+                      likedCount: 0,
+                      summary: '',
                       coverImage: {
+                        name: 'Square Image',
                         sources: [
                           {
                             uri:
-                              'https://apollosrock.newspring.cc/GetImage.ashx?guid=65dfddf1-c146-4599-bdb7-a8f53bf8fed2',
+                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D70b0b57c-5a15-4f46-8e6a-c759231685bf',
+                            __typename: 'ImageMediaSource',
                           },
                         ],
+                        __typename: 'ImageMedia',
+                      },
+                      theme: null,
+                      parentChannel: {
+                        id: 'ContentChannel:7fba1b1ee253e0fd5f0795b4b8b1175e',
+                        name: 'Devotion Series',
+                        __typename: 'ContentChannel',
                       },
+                      videos: [{ sources: [], __typename: 'VideoMedia' }],
+                      audios: [],
+                      __typename: 'ContentSeriesContentItem',
                     },
+                    __typename: 'ContentItemsConnectionEdge',
                   },
                 ],
+                __typename: 'ContentItemsConnection',
               },
+              __typename: 'ContentChannel',
+            },
+            {
+              id: 'ContentChannel:be7381e9c2fea9f41504cd98d4b14321',
+              name: 'Stories',
+              childContentItemsConnection: {
+                edges: [
+                  {
+                    node: {
+                      id:
+                        'UniversalContentItem:cf8fa657f23af88a2d63f7e4a2237db8',
+                      title:
+                        'The surprising journey that changed me and my dad',
+                      hyphenatedTitle:
+                        'The surprising journey that changed me and my dad',
+                      isLiked: false,
+                      likedCount: 6,
+                      summary:
+                        'My father, Darwin, has always been involved in my life.',
+                      coverImage: {
+                        name: 'Square Image',
+                        sources: [
+                          {
+                            uri:
+                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D2a65e561-cd6e-4590-bb37-029a21c554e8',
+                            __typename: 'ImageMediaSource',
+                          },
+                        ],
+                        __typename: 'ImageMedia',
+                      },
+                      theme: null,
+                      parentChannel: {
+                        id: 'ContentChannel:be7381e9c2fea9f41504cd98d4b14321',
+                        name: 'Stories',
+                        __typename: 'ContentChannel',
+                      },
+                      videos: [],
+                      audios: [],
+                      __typename: 'UniversalContentItem',
+                    },
+                    __typename: 'ContentItemsConnectionEdge',
+                  },
+                  {
+                    node: {
+                      id:
+                        'UniversalContentItem:2e17f5a66407d114ab9f2392b03ebccd',
+                      title: 'When I lost hope, my church family had my back',
+                      hyphenatedTitle:
+                        'When I lost hope, my church family had my back',
+                      isLiked: true,
+                      likedCount: 5,
+                      summary:
+                        'Brian Kalwat was just trying to knock something off his honey-do list.',
+                      coverImage: {
+                        name: 'Square Image',
+                        sources: [
+                          {
+                            uri:
+                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D0305285f-1155-4405-ba38-a61b9c8558be',
+                            __typename: 'ImageMediaSource',
+                          },
+                        ],
+                        __typename: 'ImageMedia',
+                      },
+                      theme: null,
+                      parentChannel: {
+                        id: 'ContentChannel:be7381e9c2fea9f41504cd98d4b14321',
+                        name: 'Stories',
+                        __typename: 'ContentChannel',
+                      },
+                      videos: [],
+                      audios: [],
+                      __typename: 'UniversalContentItem',
+                    },
+                    __typename: 'ContentItemsConnectionEdge',
+                  },
+                  {
+                    node: {
+                      id:
+                        'UniversalContentItem:ae8ec75906ba7437c49ad2534b5024db',
+                      title: 'A Place to Worship Free of Fear',
+                      hyphenatedTitle: 'A Place to Worship Free of Fear',
+                      isLiked: false,
+                      likedCount: 1,
+                      summary:
+                        'Cornelius &amp; Stephanie Mack, proud parents of a Special Friends adult, share about their experience\nOur son Cameron began attending Willow Creek Special Friends in 2015.',
+                      coverImage: {
+                        name: 'Portrait Image',
+                        sources: [
+                          {
+                            uri:
+                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3Da65bc45d-f961-4b7e-a899-63eb1f9b8da9',
+                            __typename: 'ImageMediaSource',
+                          },
+                        ],
+                        __typename: 'ImageMedia',
+                      },
+                      theme: null,
+                      parentChannel: {
+                        id: 'ContentChannel:be7381e9c2fea9f41504cd98d4b14321',
+                        name: 'Stories',
+                        __typename: 'ContentChannel',
+                      },
+                      videos: [],
+                      audios: [],
+                      __typename: 'UniversalContentItem',
+                    },
+                    __typename: 'ContentItemsConnectionEdge',
+                  },
+                ],
+                __typename: 'ContentItemsConnection',
+              },
+              __typename: 'ContentChannel',
             },
           ],
         },
       },
     };
+    const mockChannelCardData = flatMap(
+      mockFeedData.result.data.contentChannels,
+      (contentChannel) =>
+        contentChannel.childContentItemsConnection.edges.map((edge) => ({
+          request: {
+            query: GET_CONTENT_CARD,
+            variables: { contentId: edge.node.id },
+          },
+          result: {
+            data: {
+              node: edge.node,
+            },
+          },
+        }))
+    );
 
-    const DiscoverWithNavigation = createStackNavigator({ Discover });
-    const tree = renderer.create(
-      <Providers mocks={[mock]}>
+    const DiscoverStack = createStackNavigator({ Discover });
+    const DiscoverWithNavigation = createAppContainer(DiscoverStack);
+    const tree = await renderWithApolloData(
+      <Providers mocks={[mockFeedData, ...mockChannelCardData]}>
         <DiscoverWithNavigation />
       </Providers>
     );
diff --git a/apolloschurchapp/src/tabs/discover/index.js b/apolloschurchapp/src/tabs/discover/index.js
index bcfae50..6b1821c 100644
--- a/apolloschurchapp/src/tabs/discover/index.js
+++ b/apolloschurchapp/src/tabs/discover/index.js
@@ -1,23 +1,35 @@
 import { createStackNavigator } from 'react-navigation';
+import { withTheme } from '@apollosproject/ui-kit';
 
-import ContentFeed from 'apolloschurchapp/src/content-feed';
+import ContentFeed from '../../content-feed';
 
 import tabBarIcon from '../tabBarIcon';
 
 import Discover from './Discover';
 
-export const DiscoverNavigator = createStackNavigator(
+const DiscoverNavigator = createStackNavigator(
   {
     Discover,
     ContentFeed,
   },
   {
     initialRouteName: 'Discover',
+    defaultNavigationOptions: ({ screenProps }) => ({
+      headerTintColor: screenProps.headerTintColor,
+      headerTitleStyle: screenProps.headerTitleStyle,
+    }),
+    navigationOptions: { tabBarIcon: tabBarIcon('sections') },
   }
 );
 
-DiscoverNavigator.navigationOptions = {
-  tabBarIcon: tabBarIcon('sections'),
-};
+const EnhancedDiscover = withTheme(({ theme, ...props }) => ({
+  ...props,
+  screenProps: {
+    headerTintColor: theme.colors.action.secondary,
+    headerTitleStyle: {
+      color: theme.colors.text.primary,
+    },
+  },
+}))(DiscoverNavigator);
 
-export default DiscoverNavigator;
+export default EnhancedDiscover;
diff --git a/apolloschurchapp/src/tabs/home/Features/getFeedFeatures.js b/apolloschurchapp/src/tabs/home/Features/getFeedFeatures.js
new file mode 100644
index 0000000..caffc10
--- /dev/null
+++ b/apolloschurchapp/src/tabs/home/Features/getFeedFeatures.js
@@ -0,0 +1,27 @@
+import gql from 'graphql-tag';
+
+export default gql`
+  query getFeedFeatures {
+    userFeedFeatures {
+      ... on ActionListFeature {
+        id
+        title
+        subtitle
+        actions {
+          id
+          title
+          subtitle
+          action
+          image {
+            sources {
+              uri
+            }
+          }
+          relatedNode {
+            id
+          }
+        }
+      }
+    }
+  }
+`;
diff --git a/apolloschurchapp/src/tabs/home/Features/index.js b/apolloschurchapp/src/tabs/home/Features/index.js
new file mode 100644
index 0000000..80aebcb
--- /dev/null
+++ b/apolloschurchapp/src/tabs/home/Features/index.js
@@ -0,0 +1,135 @@
+import React, { memo } from 'react';
+import { Query } from 'react-apollo';
+import { get } from 'lodash';
+// import PropTypes from 'prop-types';
+
+import { styled, ActionListCard, H3, H6 } from '@apollosproject/ui-kit';
+
+import GET_FEED_FEATURES from './getFeedFeatures';
+
+const StyledH6 = styled(({ theme }) => ({
+  color: theme.colors.text.tertiary,
+}))(H6);
+
+// const handleOnPressActionItem = (id) =>
+//   this.props.navigation.navigate('ContentSingle', {
+//     itemId: id,
+//     transitionKey: 2,
+//   });
+
+const Features = memo(({ navigation }) => (
+  <Query query={GET_FEED_FEATURES} fetchPolicy="cache-and-network">
+    {({ data: features, loading }) =>
+      loading ? (
+        <ActionListCard
+          isLoading
+          header={
+            <>
+              <StyledH6 isLoading />
+              <H3 isLoading />
+            </>
+          }
+          actions={[
+            {
+              id: 'fakeId1',
+              title: '',
+              subtitle: '',
+              parentChannel: {
+                id: '',
+                name: '',
+              },
+              coverImage: {
+                sources: {
+                  uri: '',
+                },
+              },
+            },
+            {
+              id: 'fakeId2',
+              title: '',
+              subtitle: '',
+              parentChannel: {
+                id: '',
+                name: '',
+              },
+              coverImage: {
+                sources: {
+                  uri: '',
+                },
+              },
+            },
+            {
+              id: 'fakeId3',
+              title: '',
+              subtitle: '',
+              parentChannel: {
+                id: '',
+                name: '',
+              },
+              coverImage: {
+                sources: {
+                  uri: '',
+                },
+              },
+            },
+            {
+              id: 'fakeId4',
+              title: '',
+              subtitle: '',
+              parentChannel: {
+                id: '',
+                name: '',
+              },
+              coverImage: {
+                sources: {
+                  uri: '',
+                },
+              },
+            },
+          ]}
+        />
+      ) : (
+        get(features, 'userFeedFeatures', []).map(
+          ({ title, subtitle, actions, id }) =>
+            actions.length ? (
+              <ActionListCard
+                isLoading={loading}
+                key={id}
+                header={
+                  <>
+                    <StyledH6 numberOfLines={1}>{title}</StyledH6>
+                    <H3 numberOfLines={3}>{subtitle}</H3>
+                  </>
+                }
+                actions={actions}
+                onPressActionItem={({ action, relatedNode }) => {
+                  if (action === 'READ_CONTENT') {
+                    navigation.navigate('ContentSingle', {
+                      itemId: relatedNode.id,
+                      transitionKey: 2,
+                    });
+                  }
+                  if (action === 'READ_EVENT') {
+                    navigation.navigate('Event', {
+                      eventId: relatedNode.id,
+                      transitionKey: 2,
+                    });
+                  }
+                }}
+                onPressCardActionButton={() =>
+                  navigation.navigate('ContentFeed', {
+                    itemId: id,
+                    itemTitle: title,
+                  })
+                }
+              />
+            ) : null
+        )
+      )
+    }
+  </Query>
+));
+
+Features.displayName = 'Features';
+
+export default Features;
diff --git a/apolloschurchapp/src/tabs/home/Home.js b/apolloschurchapp/src/tabs/home/Home.js
index 4794458..bae53bc 100644
--- a/apolloschurchapp/src/tabs/home/Home.js
+++ b/apolloschurchapp/src/tabs/home/Home.js
@@ -1,23 +1,35 @@
 import React, { PureComponent } from 'react';
 import { Query } from 'react-apollo';
+import { Image } from 'react-native';
+import SafeAreaView from 'react-native-safe-area-view';
 import { get } from 'lodash';
 import PropTypes from 'prop-types';
 
-import { withTheme } from 'apolloschurchapp/src/ui/theme';
-import FeedView from 'apolloschurchapp/src/ui/FeedView';
-import BackgroundView from 'apolloschurchapp/src/ui/BackgroundView';
+import {
+  styled,
+  FeedView,
+  BackgroundView,
+  TouchableScale,
+  FeaturedCard,
+} from '@apollosproject/ui-kit';
 
-import { LiveButton } from '../../live';
+import fetchMoreResolver from '../../utils/fetchMoreResolver';
+import ContentCardConnected from '../../ui/ContentCardConnected';
 
-import getUserFeed from './getUserFeed';
+import Features from './Features';
+import GET_USER_FEED from './getUserFeed';
+import GET_CAMPAIGN_CONTENT_ITEM from './getCampaignContentItem';
+
+const LogoTitle = styled(({ theme }) => ({
+  height: theme.sizing.baseUnit,
+  margin: theme.sizing.baseUnit,
+  alignSelf: 'center',
+  resizeMode: 'contain',
+}))(Image);
 
 class Home extends PureComponent {
-  static navigationOptions = ({ navigation }) => ({
-    title: 'Apollos Church',
-    headerStyle: {
-      backgroundColor: navigation.getParam('backgroundColor'),
-    },
-    headerTintColor: navigation.getParam('tintColor'),
+  static navigationOptions = () => ({
+    header: null,
   });
 
   static propTypes = {
@@ -26,47 +38,87 @@ class Home extends PureComponent {
       setParams: PropTypes.func,
       navigate: PropTypes.func,
     }),
-    headerBackgroundColor: PropTypes.string,
-    headerTintColor: PropTypes.string,
   };
 
-  constructor(props) {
-    super(props);
-
-    props.navigation.setParams({
-      backgroundColor: props.headerBackgroundColor,
-      tintColor: props.headerTintColor,
-    });
-  }
-
   handleOnPress = (item) =>
     this.props.navigation.navigate('ContentSingle', {
       itemId: item.id,
-      sharing: item.sharing,
+      transitionKey: item.transitionKey,
     });
 
   render() {
     return (
       <BackgroundView>
-        <Query query={getUserFeed} fetchPolicy="cache-and-network">
-          {({ loading, error, data, refetch }) => (
-            <FeedView
-              content={get(data, 'userFeed.edges', []).map((edge) => edge.node)}
-              isLoading={loading}
-              error={error}
-              refetch={refetch}
-              ListHeaderComponent={LiveButton}
-              onPressItem={this.handleOnPress}
-            />
-          )}
-        </Query>
+        <SafeAreaView>
+          <Query
+            query={GET_USER_FEED}
+            variables={{
+              first: 10,
+              after: null,
+            }}
+            fetchPolicy="cache-and-network"
+          >
+            {({ loading, error, data, refetch, fetchMore, variables }) => (
+              <FeedView
+                ListItemComponent={ContentCardConnected}
+                content={get(data, 'userFeed.edges', []).map(
+                  (edge) => edge.node
+                )}
+                fetchMore={fetchMoreResolver({
+                  collectionName: 'userFeed',
+                  fetchMore,
+                  variables,
+                  data,
+                })}
+                isLoading={loading}
+                error={error}
+                refetch={refetch}
+                ListHeaderComponent={
+                  <>
+                    <LogoTitle source={require('./wordmark.png')} />
+                    <Query
+                      query={GET_CAMPAIGN_CONTENT_ITEM}
+                      fetchPolicy="cache-and-network"
+                    >
+                      {({ data: featuredData, loading: isFeaturedLoading }) => {
+                        const featuredContent = get(
+                          featuredData,
+                          'campaigns.edges',
+                          []
+                        ).map((edge) => edge.node);
+
+                        const featuredItem = get(
+                          featuredContent[0],
+                          'childContentItemsConnection.edges[0].node',
+                          {}
+                        );
+
+                        return (
+                          <TouchableScale
+                            onPress={() =>
+                              this.handleOnPress({ id: featuredItem.id })
+                            }
+                          >
+                            <ContentCardConnected
+                              Component={FeaturedCard}
+                              contentId={featuredItem.id}
+                              isLoading={isFeaturedLoading}
+                            />
+                          </TouchableScale>
+                        );
+                      }}
+                    </Query>
+                    <Features navigation={this.props.navigation} />
+                  </>
+                }
+                onPressItem={this.handleOnPress}
+              />
+            )}
+          </Query>
+        </SafeAreaView>
       </BackgroundView>
     );
   }
 }
 
-export default withTheme(({ theme, ...otherProps }) => ({
-  headerBackgroundColor: theme.colors.primary,
-  headerTintColor: theme.colors.background.paper,
-  ...otherProps,
-}))(Home);
+export default Home;
diff --git a/apolloschurchapp/src/tabs/home/getCampaignContentItem.js b/apolloschurchapp/src/tabs/home/getCampaignContentItem.js
new file mode 100644
index 0000000..ab5ea09
--- /dev/null
+++ b/apolloschurchapp/src/tabs/home/getCampaignContentItem.js
@@ -0,0 +1,22 @@
+import gql from 'graphql-tag';
+
+import ApollosConfig from '@apollosproject/config';
+
+export default gql`
+  query campaigns {
+    campaigns {
+      edges {
+        node {
+          childContentItemsConnection {
+            edges {
+              node {
+                ...contentCardFragment
+              }
+            }
+          }
+        }
+      }
+    }
+  }
+  ${ApollosConfig.FRAGMENTS.CONTENT_CARD_FRAGMENT}
+`;
diff --git a/apolloschurchapp/src/tabs/home/getFeedFeatures.js b/apolloschurchapp/src/tabs/home/getFeedFeatures.js
new file mode 100644
index 0000000..caffc10
--- /dev/null
+++ b/apolloschurchapp/src/tabs/home/getFeedFeatures.js
@@ -0,0 +1,27 @@
+import gql from 'graphql-tag';
+
+export default gql`
+  query getFeedFeatures {
+    userFeedFeatures {
+      ... on ActionListFeature {
+        id
+        title
+        subtitle
+        actions {
+          id
+          title
+          subtitle
+          action
+          image {
+            sources {
+              uri
+            }
+          }
+          relatedNode {
+            id
+          }
+        }
+      }
+    }
+  }
+`;
diff --git a/apolloschurchapp/src/tabs/home/getUserFeed.js b/apolloschurchapp/src/tabs/home/getUserFeed.js
index 4c70a22..b19d647 100644
--- a/apolloschurchapp/src/tabs/home/getUserFeed.js
+++ b/apolloschurchapp/src/tabs/home/getUserFeed.js
@@ -1,32 +1,18 @@
 import gql from 'graphql-tag';
+import ApollosConfig from '@apollosproject/config';
 
 export default gql`
-  query getUserFeed {
-    userFeed {
+  query getUserFeed($first: Int, $after: String) {
+    userFeed(first: $first, after: $after) {
+      pageInfo {
+        endCursor
+      }
       edges {
         node {
-          __typename
-          id
-          coverImage {
-            name
-            sources {
-              uri
-            }
-          }
-          parentChannel {
-            id
-            name
-            iconName
-          }
-          sharing {
-            title
-            message
-            url
-          }
-          isLiked
-          title
+          ...contentCardFragment
         }
       }
     }
   }
+  ${ApollosConfig.FRAGMENTS.CONTENT_CARD_FRAGMENT}
 `;
diff --git a/apolloschurchapp/src/tabs/home/home.tests.js b/apolloschurchapp/src/tabs/home/home.tests.js
index e9f98c5..213e947 100644
--- a/apolloschurchapp/src/tabs/home/home.tests.js
+++ b/apolloschurchapp/src/tabs/home/home.tests.js
@@ -1,16 +1,16 @@
 import React from 'react';
 import renderer from 'react-test-renderer';
 
-import Providers from 'apolloschurchapp/src/Providers';
+import Providers from '../../Providers';
 
 import Home from './Home';
-import getUserFeed from './getUserFeed';
+import GET_USER_FEED from './getUserFeed';
 
 describe('User Home Feed Query', () => {
   it('should return correct query results', () => {
     const mock = {
       request: {
-        query: getUserFeed,
+        query: GET_USER_FEED,
       },
       result: {
         data: {
diff --git a/apolloschurchapp/src/tabs/home/wordmark.png b/apolloschurchapp/src/tabs/home/wordmark.png
new file mode 100644
index 0000000000000000000000000000000000000000..93229c35ef61c3842a7bf0acb5c9ed910093adb0
GIT binary patch
literal 8241
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

literal 0
HcmV?d00001

diff --git a/apolloschurchapp/src/tabs/index.js b/apolloschurchapp/src/tabs/index.js
index 61d8673..ff11787 100644
--- a/apolloschurchapp/src/tabs/index.js
+++ b/apolloschurchapp/src/tabs/index.js
@@ -14,11 +14,10 @@ const TabNavigator = createBottomTabNavigator(
   },
   {
     tabBarComponent: TabBar,
+    lazy: true,
+    removeClippedSubviews: true,
+    navigationOptions: { header: null },
   }
 );
 
-TabNavigator.navigationOptions = {
-  header: null,
-};
-
 export default TabNavigator;
diff --git a/apolloschurchapp/src/tabs/tabBar.js b/apolloschurchapp/src/tabs/tabBar.js
index effdefc..6b2b849 100644
--- a/apolloschurchapp/src/tabs/tabBar.js
+++ b/apolloschurchapp/src/tabs/tabBar.js
@@ -1,57 +1,21 @@
-import React from 'react';
 import { compose } from 'recompose';
-import { Platform, View } from 'react-native';
-import { BottomTabBar } from 'react-navigation-tabs';
-import { Query } from 'react-apollo';
-import gql from 'graphql-tag';
-import { get } from 'lodash';
-import DeviceInfo from 'react-native-device-info';
+import { BottomTabBar } from 'react-navigation';
 
-import { MINI_PLAYER_HEIGHT } from 'apolloschurchapp/src/ui/MediaPlayer';
-import styled from 'apolloschurchapp/src/ui/styled';
-import { withTheme } from 'apolloschurchapp/src/ui/theme';
-
-const mediaPlayerIsVisibleQuery = gql`
-  query {
-    mediaPlayer @client {
-      isVisible
-    }
-  }
-`;
-
-const isPhoneX = DeviceInfo.getModel() === 'iPhone X';
-
-// Some devices need more "spacing" at the bottom of the screen. This helps account for that
-const DEVICE_OFFSET = isPhoneX ? 10 : 0;
-
-const TabBarWrapper = styled(({ theme, mediaPlayerIsVisible }) => ({
-  paddingBottom: mediaPlayerIsVisible ? MINI_PLAYER_HEIGHT - DEVICE_OFFSET : 0,
-  backgroundColor: mediaPlayerIsVisible
-    ? theme.colors.screen
-    : theme.colors.paper,
-  ...Platform.select(theme.shadows.default),
-}))(View);
+import { withTabBarMediaSpacer } from '@apollosproject/ui-media-player';
+import { styled, withTheme } from '@apollosproject/ui-kit';
 
 const ThemedBottomTabBar = compose(
   withTheme(({ theme }) => ({
     showLabel: false,
     activeTintColor: theme.colors.secondary,
     inactiveTintColor: theme.colors.text.tertiary,
+    safeAreaInset: { bottom: 0 },
   })),
   styled(({ theme }) => ({
     borderTopWidth: 0,
     backgroundColor: theme.colors.transparent,
-  }))
+  })),
+  withTabBarMediaSpacer
 )(BottomTabBar);
 
-const TabBar = (props) => (
-  <Query query={mediaPlayerIsVisibleQuery}>
-    {({ data = {} }) => (
-      <TabBarWrapper mediaPlayerIsVisible={get(data, 'mediaPlayer.isVisible')}>
-        <ThemedBottomTabBar {...props} />
-      </TabBarWrapper>
-    )}
-  </Query>
-);
-
-export default TabBar;
+export default ThemedBottomTabBar;
diff --git a/apolloschurchapp/src/tabs/tabBarIcon.js b/apolloschurchapp/src/tabs/tabBarIcon.js
index 411c446..0d6e4ca 100644
--- a/apolloschurchapp/src/tabs/tabBarIcon.js
+++ b/apolloschurchapp/src/tabs/tabBarIcon.js
@@ -1,7 +1,7 @@
 import React from 'react';
 import PropTypes from 'prop-types';
 
-import Icon from 'apolloschurchapp/src/ui/Icon';
+import { Icon } from '@apollosproject/ui-kit';
 
 const tabBarIcon = (name) => {
   function TabBarIcon({ tintColor }) {
diff --git a/apolloschurchapp/src/testing-control-panel/TouchableCell.js b/apolloschurchapp/src/testing-control-panel/TouchableCell.js
new file mode 100644
index 0000000..bfe51df
--- /dev/null
+++ b/apolloschurchapp/src/testing-control-panel/TouchableCell.js
@@ -0,0 +1,20 @@
+import React from 'react';
+import PropType from 'prop-types';
+import { Touchable, Cell, CellIcon, CellText } from '@apollosproject/ui-kit';
+
+const TouchableCell = ({ iconName, cellText, handlePress }) => (
+  <Touchable onPress={handlePress}>
+    <Cell>
+      <CellIcon name={iconName} />
+      <CellText>{cellText}</CellText>
+    </Cell>
+  </Touchable>
+);
+
+TouchableCell.propTypes = {
+  iconName: PropType.string.isRequired,
+  cellText: PropType.string.isRequired,
+  handlePress: PropType.func.isRequired,
+};
+
+export default TouchableCell;
diff --git a/apolloschurchapp/src/testing-control-panel/TouchableCell.tests.js b/apolloschurchapp/src/testing-control-panel/TouchableCell.tests.js
new file mode 100644
index 0000000..e187cb0
--- /dev/null
+++ b/apolloschurchapp/src/testing-control-panel/TouchableCell.tests.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from '../Providers';
+
+import TouchableCell from './TouchableCell';
+
+describe('touchable cell', () => {
+  it('renders the cell, icon, and text', () => {
+    const tree = renderer.create(
+      <Providers>
+        <TouchableCell
+          cellText="This is a cell"
+          iconName="play"
+          handlePress={() => ({})}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/testing-control-panel/index.js b/apolloschurchapp/src/testing-control-panel/index.js
new file mode 100644
index 0000000..77ed57c
--- /dev/null
+++ b/apolloschurchapp/src/testing-control-panel/index.js
@@ -0,0 +1,52 @@
+import React, { PureComponent } from 'react';
+import { TableView } from '@apollosproject/ui-kit';
+import { UserWebBrowserConsumer } from '../user-web-browser';
+import { WebBrowserConsumer } from '../ui/WebBrowser';
+import TouchableCell from './TouchableCell';
+
+export default class TestingControlPanel extends PureComponent {
+  static navigationOptions = () => ({
+    title: 'Testing Control Panel',
+  });
+
+  render() {
+    return (
+      <TableView>
+        <UserWebBrowserConsumer>
+          {(openUserWebView) => (
+            <TouchableCell
+              handlePress={() =>
+                openUserWebView({
+                  url:
+                    'https://www.whatismybrowser.com/detect/what-http-headers-is-my-browser-sending',
+                })
+              }
+              iconName="share"
+              cellText={`Open Web Browser With User Cookie`}
+            />
+          )}
+        </UserWebBrowserConsumer>
+        <WebBrowserConsumer>
+          {(openUrl) => (
+            <TouchableCell
+              handlePress={() =>
+                openUrl(
+                  'https://apollosrock.newspring.cc',
+                  {},
+                  { useRockToken: true }
+                )
+              }
+              iconName="share"
+              cellText={`Open InAppBrowser With Rock Token`}
+            />
+          )}
+        </WebBrowserConsumer>
+        <TouchableCell
+          handlePress={() => this.props.navigation.navigate('Onboarding')}
+          iconName="Avatar"
+          cellText={`Launch Onboarding`}
+        />
+      </TableView>
+    );
+  }
+}
diff --git a/apolloschurchapp/src/theme/icons/index.js b/apolloschurchapp/src/theme/icons/index.js
new file mode 100644
index 0000000..79e948a
--- /dev/null
+++ b/apolloschurchapp/src/theme/icons/index.js
@@ -0,0 +1,2 @@
+/* Export your custom icon components here. */
+export {};
diff --git a/apolloschurchapp/src/theme/index.js b/apolloschurchapp/src/theme/index.js
new file mode 100644
index 0000000..9ccfc4a
--- /dev/null
+++ b/apolloschurchapp/src/theme/index.js
@@ -0,0 +1,4 @@
+import theme from './theme';
+import * as customIcons from './icons';
+
+export { theme as default, customIcons };
diff --git a/apolloschurchapp/src/theme/theme.js b/apolloschurchapp/src/theme/theme.js
new file mode 100644
index 0000000..532be93
--- /dev/null
+++ b/apolloschurchapp/src/theme/theme.js
@@ -0,0 +1,46 @@
+/* Add your custom theme definitions below. Anything that is supported in UI-Kit Theme can be
+ overridden and/or customized here! */
+
+/* Base colors.
+ * These get used by theme types (see /types directory) to color
+ * specific parts of the interface. For more control on how certain
+ * elements are colored, go there. The next level of control comes
+ * on a per-component basis with "overrides"
+ */
+// const colors = {};
+
+/* Base Typography sizing and fonts.
+ * To control speicfic styles used on different type components (like H1, H2, etc), see "overrides"
+ */
+// const typography = {};
+
+/* Responsive breakpoints */
+// export const breakpoints = {};
+
+/* Base sizing units. These are used to scale
+ * space, and size components relatively to one another.
+ */
+// export const sizing = {};
+
+/* Base alpha values. These are used to keep transparent values across the app consistant */
+// export const alpha = {};
+
+/* Base overlays. These are used as configuration for LinearGradients across the app */
+// export const overlays = () => ({});
+
+/* Overrides allow you to override the styles of any component styled using the `styled` HOC.
+ * For example, this component:
+ * const SomeComponent = styled({ margin: 10, padding: 20 }, 'SomeComponent');
+ * can have its styles overriden by including in overrides:
+ * {
+ *   overides: {
+ *     SomeComponent: {
+ *       margin: 5,
+ *       padding: 15,
+ *     },
+ *   },
+ * }
+ */
+// const overrides = {};
+
+export default {};
diff --git a/apolloschurchapp/src/ui/ActivityIndicator/index.js b/apolloschurchapp/src/ui/ActivityIndicator/index.js
deleted file mode 100644
index 434201d..0000000
--- a/apolloschurchapp/src/ui/ActivityIndicator/index.js
+++ /dev/null
@@ -1,20 +0,0 @@
-import {
-  ActivityIndicator as NativeActivityIndicator,
-  StyleSheet,
-} from 'react-native';
-
-import styled from 'apolloschurchapp/src/ui/styled';
-
-const ActivityIndicator = styled(
-  {
-    flex: 1,
-    ...StyleSheet.absoluteFillObject,
-    alignSelf: 'center',
-  },
-  'ActivityIndicator'
-)(NativeActivityIndicator);
-
-export {
-  ActivityIndicator as default,
-  NativeActivityIndicator as InlineActivityIndicator,
-};
diff --git a/apolloschurchapp/src/ui/Avatar/Avatar.stories.js b/apolloschurchapp/src/ui/Avatar/Avatar.stories.js
deleted file mode 100644
index 7d7f7bb..0000000
--- a/apolloschurchapp/src/ui/Avatar/Avatar.stories.js
+++ /dev/null
@@ -1,19 +0,0 @@
-import React from 'react';
-import { storiesOf } from '@storybook/react-native';
-
-import FlexedView from 'apolloschurchapp/src/ui/FlexedView';
-
-import Avatar from '.';
-
-const source = {
-  uri:
-    'https://dg0ddngxdz549.cloudfront.net/images/cached/images/remote/http_s3.amazonaws.com/ns.images/all/member_images/members.nophoto_1000_1000_90_c1.jpg',
-};
-/* eslint-disable react-native/no-inline-styles */
-storiesOf('Avatar', module).add('default', () => (
-  <FlexedView style={{ flexWrap: 'wrap', flexDirection: 'row' }}>
-    <Avatar source={source} size="small" />
-    <Avatar source={source} size="medium" />
-    <Avatar source={source} size="large" />
-  </FlexedView>
-));
diff --git a/apolloschurchapp/src/ui/Avatar/Avatar.tests.js b/apolloschurchapp/src/ui/Avatar/Avatar.tests.js
deleted file mode 100644
index da1bd21..0000000
--- a/apolloschurchapp/src/ui/Avatar/Avatar.tests.js
+++ /dev/null
@@ -1,38 +0,0 @@
-import React from 'react';
-import renderer from 'react-test-renderer';
-
-import { ThemeProvider } from 'apolloschurchapp/src/ui/theme';
-
-import Avatar from '.';
-
-const source = {
-  uri:
-    'https://dg0ddngxdz549.cloudfront.net/images/cached/images/remote/http_s3.amazonaws.com/ns.images/all/member_images/members.nophoto_1000_1000_90_c1.jpg',
-};
-
-describe('The Avatar component', () => {
-  it('should render small', () => {
-    const tree = renderer.create(
-      <ThemeProvider>
-        <Avatar source={source} size="small" />
-      </ThemeProvider>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render medium', () => {
-    const tree = renderer.create(
-      <ThemeProvider>
-        <Avatar source={source} size="medium" />
-      </ThemeProvider>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render large', () => {
-    const tree = renderer.create(
-      <ThemeProvider>
-        <Avatar source={source} size="large" />
-      </ThemeProvider>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/ui/Avatar/List.js b/apolloschurchapp/src/ui/Avatar/List.js
deleted file mode 100644
index ef6596e..0000000
--- a/apolloschurchapp/src/ui/Avatar/List.js
+++ /dev/null
@@ -1,14 +0,0 @@
-import { View } from 'react-native';
-
-import styled from 'apolloschurchapp/src/ui/styled';
-
-const AvatarList = styled(
-  {
-    flexDirection: 'row',
-    flexWrap: 'wrap',
-    maxWidth: '100%',
-  },
-  'Avatar.List'
-)(View);
-
-export default AvatarList;
diff --git a/apolloschurchapp/src/ui/Avatar/index.js b/apolloschurchapp/src/ui/Avatar/index.js
deleted file mode 100644
index 3cb204a..0000000
--- a/apolloschurchapp/src/ui/Avatar/index.js
+++ /dev/null
@@ -1,74 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-import { View } from 'react-native';
-import { get } from 'lodash';
-import { compose, pure } from 'recompose';
-
-import ConnectedImage from 'apolloschurchapp/src/ui/ConnectedImage';
-import styled from 'apolloschurchapp/src/ui/styled';
-import { withTheme } from 'apolloschurchapp/src/ui/theme';
-import ActivityIndicator from 'apolloschurchapp/src/ui/ActivityIndicator';
-
-export { default as AvatarList } from './List';
-
-const enhance = compose(
-  pure,
-  withTheme(({ theme, size }) => ({
-    themeSize: get(theme.sizing.avatar, size, theme.sizing.avatar.small),
-  }))
-);
-
-const Container = styled(
-  ({ theme, themeSize }) => ({
-    width: themeSize,
-    height: themeSize,
-    backgroundColor: theme.colors.background.inactive,
-    borderRadius: themeSize / 2,
-    marginRight: themeSize / 4,
-    marginBottom: themeSize / 4,
-    overflow: 'hidden',
-  }),
-  'Avatar'
-)(View);
-
-const LoadingIcon = compose(
-  withTheme(({ theme: { colors } = {} }) => ({ color: colors.white })),
-  styled({
-    zIndex: 1,
-  })
-)(ActivityIndicator);
-
-const Image = styled(({ themeSize }) => ({
-  width: '100%',
-  height: '100%',
-  position: 'absolute',
-  top: 0,
-  left: 0,
-  right: 0,
-  bottom: 0,
-  borderRadius: themeSize / 2,
-}))(ConnectedImage);
-
-const Avatar = enhance(
-  ({ themeSize, containerStyle, source, isLoading, ...imageProps }) => (
-    <Container style={containerStyle} themeSize={themeSize}>
-      {isLoading ? <LoadingIcon /> : null}
-      {source && source.uri ? (
-        <Image
-          source={source}
-          {...imageProps}
-          themeSize={themeSize}
-          isLoading={isLoading}
-        />
-      ) : null}
-    </Container>
-  )
-);
-
-Avatar.propTypes = {
-  size: PropTypes.oneOf(['small', 'medium', 'large']),
-  containerStyle: PropTypes.any, // eslint-disable-line
-  ...ConnectedImage.propTypes,
-};
-
-export default Avatar;
diff --git a/apolloschurchapp/src/ui/BackgroundView/BackgroundView.tests.js b/apolloschurchapp/src/ui/BackgroundView/BackgroundView.tests.js
deleted file mode 100644
index 01632b9..0000000
--- a/apolloschurchapp/src/ui/BackgroundView/BackgroundView.tests.js
+++ /dev/null
@@ -1,17 +0,0 @@
-import React from 'react';
-import renderer from 'react-test-renderer';
-
-import Providers from 'apolloschurchapp/src/Providers';
-
-import BackgroundView from '.';
-
-describe('The BackgroundView component', () => {
-  it('should render', () => {
-    const tree = renderer.create(
-      <Providers>
-        <BackgroundView />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/ui/BackgroundView/index.js b/apolloschurchapp/src/ui/BackgroundView/index.js
deleted file mode 100644
index cfc47da..0000000
--- a/apolloschurchapp/src/ui/BackgroundView/index.js
+++ /dev/null
@@ -1,14 +0,0 @@
-import LinearGradient from 'react-native-linear-gradient';
-import { compose } from 'recompose';
-
-import styled from 'apolloschurchapp/src/ui/styled';
-import { withTheme } from 'apolloschurchapp/src/ui/theme';
-
-const BackgroundView = compose(
-  withTheme(({ theme }) => ({
-    colors: [theme.colors.background.paper, theme.colors.background.screen],
-  })),
-  styled({ flex: 1 })
-)(LinearGradient);
-
-export default BackgroundView;
diff --git a/apolloschurchapp/src/ui/Button/Button.js b/apolloschurchapp/src/ui/Button/Button.js
deleted file mode 100644
index 8419a69..0000000
--- a/apolloschurchapp/src/ui/Button/Button.js
+++ /dev/null
@@ -1,154 +0,0 @@
-import React from 'react';
-import { View } from 'react-native';
-import PropTypes from 'prop-types';
-import { compose } from 'recompose';
-import { get } from 'lodash';
-
-import { withTheme, withThemeMixin } from 'apolloschurchapp/src/ui/theme';
-import styled from 'apolloschurchapp/src/ui/styled';
-import Touchable from 'apolloschurchapp/src/ui/Touchable';
-import { H4 } from 'apolloschurchapp/src/ui/typography';
-import { InlineActivityIndicator } from 'apolloschurchapp/src/ui/ActivityIndicator';
-import { withPlaceholder, Line } from 'apolloschurchapp/src/ui/Placeholder';
-
-const ButtonStyles = styled(
-  ({ theme, disabled, bordered, pill }) => ({
-    paddingHorizontal: theme.sizing.baseUnit,
-    overflow: 'hidden',
-    borderRadius: pill ? theme.sizing.baseUnit * 3 : theme.sizing.borderRadius,
-    flexDirection: 'row',
-    height: theme.sizing.baseUnit * 3,
-    alignItems: 'center',
-    justifyContent: 'center',
-    opacity: disabled ? 0.5 : 1,
-    borderWidth: 2,
-    ...(bordered
-      ? {
-          backgroundColor: theme.colors.transparent,
-          borderColor: theme.colors.primary,
-        }
-      : {
-          backgroundColor: theme.colors.background.screen,
-          borderColor: theme.colors.background.screen,
-          elevation: 2,
-        }),
-  }),
-  'Button'
-)(View);
-
-const ButtonPlaceholder = styled(
-  ({ theme }) => ({
-    width: theme.sizing.baseUnit * 4,
-    height: theme.sizing.baseUnit + theme.helpers.rem(1),
-  }),
-  'Button.Placeholder'
-)(Line);
-
-export const withButtonPlaceholder = withPlaceholder(ButtonPlaceholder);
-
-const enhance = compose(
-  withButtonPlaceholder,
-  withTheme(({ theme, type = 'default' }) => ({
-    fill: get(theme, `buttons.${type}.fill`, theme.colors.action.default),
-    accent: get(theme, `buttons.${type}.accent`, theme.colors.text.primary),
-  })),
-  // makes non-text children inherit button styles by default :-D
-  withThemeMixin(({ fill, accent, bordered }) => {
-    const textColor = bordered ? fill : accent;
-    return {
-      colors: {
-        primary: bordered ? fill : accent,
-        text: {
-          primary: textColor,
-          secondary: textColor,
-          tertiary: textColor,
-        },
-        screen: fill,
-      },
-    };
-  }),
-  withTheme()
-);
-
-// API-Compatible to React-Native's base <Button> component,
-// except it supports the rendering of children, which will take precedence over the title prop,
-// so you can handle non text children.
-const Button = enhance(
-  ({
-    children,
-    disabled,
-    title,
-    to,
-    onPress,
-    style,
-    bordered,
-    loading,
-    accent,
-    pill,
-    TouchableComponent = Touchable,
-    theme,
-    ...touchableProps
-  }) => {
-    const accessibilityTraits = ['button'];
-    if (disabled || loading) accessibilityTraits.push('disabled');
-
-    const buttonContent = (
-      <ButtonStyles
-        style={style}
-        disabled={disabled}
-        bordered={bordered}
-        pill={pill}
-      >
-        {loading ? (
-          <InlineActivityIndicator color={accent} />
-        ) : (
-          children || <H4>{title}</H4>
-        )}
-      </ButtonStyles>
-    );
-
-    if (onPress) {
-      return (
-        <TouchableComponent
-          onPress={onPress}
-          disabled={disabled || loading}
-          accessibilityTraits={accessibilityTraits}
-          {...touchableProps}
-        >
-          {buttonContent}
-        </TouchableComponent>
-      );
-    }
-
-    return buttonContent;
-  }
-);
-
-Button.defaultProps = {
-  disabled: false,
-  bordered: false,
-  pill: true,
-  title: '',
-  accessibilityComponentType: 'button',
-  type: 'primary',
-};
-
-Button.propTypes = {
-  disabled: PropTypes.bool,
-  children: PropTypes.node,
-  title: PropTypes.string,
-  bordered: PropTypes.bool,
-  pill: PropTypes.bool,
-  to: PropTypes.string,
-  type: PropTypes.oneOf([
-    'default',
-    'primary',
-    'secondary',
-    'tertiary',
-    'ghost',
-    'alert',
-  ]), // keys in theme.colors.action
-  ...Touchable.propTypes,
-};
-
-export default Button;
diff --git a/apolloschurchapp/src/ui/Button/Button.stories.js b/apolloschurchapp/src/ui/Button/Button.stories.js
deleted file mode 100644
index 14548a6..0000000
--- a/apolloschurchapp/src/ui/Button/Button.stories.js
+++ /dev/null
@@ -1,169 +0,0 @@
-import React from 'react';
-import { View } from 'react-native';
-import { nest } from 'recompose';
-import { storiesOf } from '@storybook/react-native';
-
-import FlexedView from 'apolloschurchapp/src/ui/FlexedView';
-import { H4 } from 'apolloschurchapp/src/ui/typography';
-import Icon from 'apolloschurchapp/src/ui/Icon';
-import styled from 'apolloschurchapp/src/ui/styled';
-
-import Button from '.';
-
-const ViewWithMargin = styled({ margin: 10 })(View);
-const ButtonWithMargin = nest(ViewWithMargin, Button);
-
-storiesOf('Buttons/Pill (default)', module)
-  .add('default', () => (
-    <FlexedView>
-      <ButtonWithMargin onPress={() => {}} title="Just a plain 'ole Button" />
-    </FlexedView>
-  ))
-  .add('Types', () => (
-    <FlexedView>
-      <ButtonWithMargin onPress={() => {}} title="Default" type="default" />
-      <ButtonWithMargin
-        onPress={() => {}}
-        title="Primary Action"
-        type="primary"
-      />
-      <ButtonWithMargin
-        onPress={() => {}}
-        title="Secondary Action"
-        type="secondary"
-      />
-      <ButtonWithMargin
-        onPress={() => {}}
-        title="Tertiary Action"
-        type="tertiary"
-      />
-    </FlexedView>
-  ))
-  .add('Disabled', () => (
-    <FlexedView>
-      <ButtonWithMargin
-        onPress={() => {}}
-        title="Disabled Button 😭"
-        disabled
-      />
-    </FlexedView>
-  ))
-  .add('Bordered', () => (
-    <FlexedView>
-      <ButtonWithMargin onPress={() => {}} title="Bordered Button" bordered />
-    </FlexedView>
-  ))
-  .add('Ghost', () => (
-    <FlexedView>
-      <ButtonWithMargin
-        onPress={() => {}}
-        title="Ghost Pill"
-        type={'ghost'}
-        bordered
-      />
-    </FlexedView>
-  ))
-  .add('With Children', () => (
-    <FlexedView>
-      <ButtonWithMargin onPress={() => {}} type="primary">
-        <H4>Non-Text Children</H4>
-        <Icon name="like" />
-      </ButtonWithMargin>
-    </FlexedView>
-  ))
-  .add('loading', () => (
-    <FlexedView>
-      <ButtonWithMargin
-        onPress={() => {}}
-        title="Just a plain 'ole Button"
-        loading
-      />
-    </FlexedView>
-  ));
-storiesOf('Buttons/Square', module)
-  .add('default', () => (
-    <FlexedView>
-      <ButtonWithMargin
-        onPress={() => {}}
-        title="Just a plain 'ole Square Button"
-        pill={false}
-      />
-    </FlexedView>
-  ))
-  .add('Types', () => (
-    <FlexedView>
-      <ButtonWithMargin
-        onPress={() => {}}
-        title="Default"
-        type="default"
-        pill={false}
-      />
-      <ButtonWithMargin
-        onPress={() => {}}
-        title="Primary Action"
-        type="primary"
-        pill={false}
-      />
-      <ButtonWithMargin
-        onPress={() => {}}
-        title="Secondary Action"
-        type="secondary"
-        pill={false}
-      />
-      <ButtonWithMargin
-        onPress={() => {}}
-        title="Tertiary Action"
-        type="tertiary"
-        pill={false}
-      />
-    </FlexedView>
-  ))
-  .add('Disabled', () => (
-    <FlexedView>
-      <ButtonWithMargin
-        onPress={() => {}}
-        title="Disabled Button 😭"
-        disabled
-        pill={false}
-      />
-    </FlexedView>
-  ))
-  .add('Bordered', () => (
-    <FlexedView>
-      <ButtonWithMargin
-        onPress={() => {}}
-        title="Bordered Button"
-        bordered
-        pill={false}
-      />
-    </FlexedView>
-  ))
-  .add('Ghost', () => (
-    <FlexedView>
-      <ButtonWithMargin
-        onPress={() => {}}
-        title="Ghost Square"
-        type={'ghost'}
-        bordered
-        pill={false}
-      />
-    </FlexedView>
-  ))
-  .add('With Children', () => (
-    <FlexedView>
-      <ButtonWithMargin onPress={() => {}} type="primary" pill={false}>
-        <H4>Non-Text Children</H4>
-        <Icon name="like" />
-      </ButtonWithMargin>
-    </FlexedView>
-  ))
-  .add('loading', () => (
-    <FlexedView>
-      <ButtonWithMargin
-        onPress={() => {}}
-        title="Just a plain 'ole Square Button"
-        pill={false}
-        loading
-      />
-    </FlexedView>
-  ));
diff --git a/apolloschurchapp/src/ui/Button/Button.tests.js b/apolloschurchapp/src/ui/Button/Button.tests.js
deleted file mode 100644
index 209796d..0000000
--- a/apolloschurchapp/src/ui/Button/Button.tests.js
+++ /dev/null
@@ -1,119 +0,0 @@
-import React from 'react';
-import { View } from 'react-native';
-import renderer from 'react-test-renderer';
-
-import Providers from 'apolloschurchapp/src/Providers';
-
-import Button from '.';
-
-describe('The Button component', () => {
-  it('should render', () => {
-    const tree = renderer.create(
-      <Providers>
-        <Button title="My Button!" onPress={() => {}} />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render as default type', () => {
-    const tree = renderer.create(
-      <Providers>
-        <Button title="My Button!" type="default" onPress={() => {}} />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render a primary button', () => {
-    const tree = renderer.create(
-      <Providers>
-        <Button onPress={() => {}} title="Primary Action" type="primary" />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render a secondary button', () => {
-    const tree = renderer.create(
-      <Providers>
-        <Button onPress={() => {}} title="Secondary Action" type="secondary" />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render a Tertiary button', () => {
-    const tree = renderer.create(
-      <Providers>
-        <Button onPress={() => {}} title="Tertiary Action" type="tertiary" />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render a disabled button', () => {
-    const tree = renderer.create(
-      <Providers>
-        <Button onPress={() => {}} title="Disabled Button 😭" disabled />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render a bordered button', () => {
-    const tree = renderer.create(
-      <Providers>
-        <Button onPress={() => {}} title="Ghost Button" bordered />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render a pill button', () => {
-    const tree = renderer.create(
-      <Providers>
-        <Button onPress={() => {}} title="Pill Button" pill />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render a ghost button', () => {
-    const tree = renderer.create(
-      <Providers>
-        <Button
-          onPress={() => {}}
-          title="Ghost Button"
-          type={'ghost'}
-          bordered
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render a ghost pill button', () => {
-    const tree = renderer.create(
-      <Providers>
-        <Button
-          onPress={() => {}}
-          title="Ghost Button"
-          type={'ghost'}
-          bordered
-          pill
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render with children', () => {
-    const tree = renderer.create(
-      <Providers>
-        <Button>
-          <View />
-        </Button>
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render a loading state', () => {
-    const tree = renderer.create(
-      <Providers>
-        <Button title="My Button!" onPress={() => {}} loading />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/ui/Button/ButtonLink.js b/apolloschurchapp/src/ui/Button/ButtonLink.js
deleted file mode 100644
index ea36124..0000000
--- a/apolloschurchapp/src/ui/Button/ButtonLink.js
+++ /dev/null
@@ -1,12 +0,0 @@
-import { Text } from 'react-native';
-
-import styled from 'apolloschurchapp/src/ui/styled';
-
-const ButtonLink = styled(
-  ({ theme }) => ({
-    color: theme.colors.text.link,
-  }),
-  'Button.Link'
-)(Text);
-
-export default ButtonLink;
diff --git a/apolloschurchapp/src/ui/Button/ButtonLink.stories.js b/apolloschurchapp/src/ui/Button/ButtonLink.stories.js
deleted file mode 100644
index b641336..0000000
--- a/apolloschurchapp/src/ui/Button/ButtonLink.stories.js
+++ /dev/null
@@ -1,14 +0,0 @@
-import React from 'react';
-import { storiesOf } from '@storybook/react-native';
-
-import { BodyText } from 'apolloschurchapp/src/ui/typography';
-
-import ButtonLink from './ButtonLink';
-
-storiesOf('Buttons/Link', module)
-  .add('default', () => <ButtonLink onPress={() => {}}>Boom</ButtonLink>)
-  .add('Inherits typographic styles', () => (
-    <BodyText>
-      <ButtonLink onPress={() => {}}>Boom</ButtonLink>
-    </BodyText>
-  ));
diff --git a/apolloschurchapp/src/ui/Button/ButtonLink.tests.js b/apolloschurchapp/src/ui/Button/ButtonLink.tests.js
deleted file mode 100644
index cb40e32..0000000
--- a/apolloschurchapp/src/ui/Button/ButtonLink.tests.js
+++ /dev/null
@@ -1,28 +0,0 @@
-import React from 'react';
-import renderer from 'react-test-renderer';
-
-import Providers from 'apolloschurchapp/src/Providers';
-import { BodyText } from 'apolloschurchapp/src/ui/typography';
-
-import ButtonLink from './ButtonLink';
-
-describe('The Button component', () => {
-  it('should render', () => {
-    const tree = renderer.create(
-      <Providers>
-        <ButtonLink onPress={() => {}}>Boom</ButtonLink>
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render inherit typographic styles', () => {
-    const tree = renderer.create(
-      <Providers>
-        <BodyText>
-          <ButtonLink onPress={() => {}}>Boom</ButtonLink>
-        </BodyText>
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/ui/Button/index.js b/apolloschurchapp/src/ui/Button/index.js
deleted file mode 100644
index cda1fc4..0000000
--- a/apolloschurchapp/src/ui/Button/index.js
+++ /dev/null
@@ -1,2 +0,0 @@
-export default from './Button';
-export ButtonLink from './ButtonLink';
diff --git a/apolloschurchapp/src/ui/Card/Actions.js b/apolloschurchapp/src/ui/Card/Actions.js
deleted file mode 100644
index 28df7cb..0000000
--- a/apolloschurchapp/src/ui/Card/Actions.js
+++ /dev/null
@@ -1,15 +0,0 @@
-import PaddedView from 'apolloschurchapp/src/ui/PaddedView';
-import styled from 'apolloschurchapp/src/ui/styled';
-
-const Actions = styled(
-  ({ theme }) => ({
-    flexWrap: 'wrap',
-    flexDirection: 'row',
-    alignItems: 'center',
-    justifyContent: 'space-between',
-    paddingTop: theme.sizing.baseUnit / 4,
-  }),
-  'Card.Actions'
-)(PaddedView);
-
-export default Actions;
diff --git a/apolloschurchapp/src/ui/Card/Card.stories.js b/apolloschurchapp/src/ui/Card/Card.stories.js
deleted file mode 100644
index 3b64033..0000000
--- a/apolloschurchapp/src/ui/Card/Card.stories.js
+++ /dev/null
@@ -1,50 +0,0 @@
-import React from 'react';
-import { storiesOf } from '@storybook/react-native';
-
-import {
-  H3,
-  H6,
-  BodyText,
-  Paragraph,
-} from 'apolloschurchapp/src/ui/typography';
-import Button, { ButtonLink } from 'apolloschurchapp/src/ui/Button';
-
-import Card, { CardActions, CardContent, CardImage } from '.';
-
-storiesOf('Card', module)
-  .add('simple', () => (
-    <Card>
-      <CardImage source={'https://picsum.photos/600/400/?image=63'} />
-      <CardContent>
-        <H3>Coffee</H3>
-        <H6 padded>noun</H6>
-        <Paragraph>
-          <BodyText>
-            {
-              'A dark substance that turns "leave me alone" into "good morning!"'
-            }
-          </BodyText>
-        </Paragraph>
-      </CardContent>
-      <CardActions>
-        <Button title="Learn More" pill={false} />
-        <ButtonLink>Share</ButtonLink>
-      </CardActions>
-    </Card>
-  ))
-  .add('loading', () => (
-    <Card isLoading>
-      <CardImage />
-      <CardContent>
-        <H3 />
-        <H6 padded />
-        <Paragraph>
-          <BodyText />
-        </Paragraph>
-      </CardContent>
-      <CardActions>
-        <Button pill={false} />
-        <ButtonLink />
-      </CardActions>
-    </Card>
-  ));
diff --git a/apolloschurchapp/src/ui/Card/Card.tests.js b/apolloschurchapp/src/ui/Card/Card.tests.js
deleted file mode 100644
index 90fc0da..0000000
--- a/apolloschurchapp/src/ui/Card/Card.tests.js
+++ /dev/null
@@ -1,61 +0,0 @@
-import React from 'react';
-import renderer from 'react-test-renderer';
-
-import Providers from 'apolloschurchapp/src/Providers';
-import {
-  H3,
-  H6,
-  BodyText,
-  Paragraph,
-} from 'apolloschurchapp/src/ui/typography';
-import Button, { ButtonLink } from 'apolloschurchapp/src/ui/Button';
-
-import Card, { CardImage, CardContent, CardActions } from '.';
-
-describe('the Card component', () => {
-  it('should render', () => {
-    const tree = renderer.create(
-      <Providers>
-        <Card>
-          <CardImage source={'https://picsum.photos/600/400/?image=63'} />
-          <CardContent>
-            <H3>Coffee</H3>
-            <H6 padded>noun</H6>
-            <Paragraph>
-              <BodyText>
-                {
-                  'A dark substance that turns "leave me alone" into "good morning!"'
-                }
-              </BodyText>
-            </Paragraph>
-          </CardContent>
-          <CardActions>
-            <Button title="Learn More" pill={false} />
-            <ButtonLink>Share</ButtonLink>
-          </CardActions>
-        </Card>
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('it should render a placeholder', () => {
-    const tree = renderer.create(
-      <Providers>
-        <Card isLoading>
-          <CardContent>
-            <H3 />
-            <H6 padded />
-            <Paragraph>
-              <BodyText />
-            </Paragraph>
-          </CardContent>
-          <CardActions>
-            <Button pill={false} />
-            <ButtonLink />
-          </CardActions>
-        </Card>
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/ui/Card/CardWrapper/CardWrapper.stories.js b/apolloschurchapp/src/ui/Card/CardWrapper/CardWrapper.stories.js
deleted file mode 100644
index 71f9ea0..0000000
--- a/apolloschurchapp/src/ui/Card/CardWrapper/CardWrapper.stories.js
+++ /dev/null
@@ -1,49 +0,0 @@
-import React from 'react';
-import { View, Text } from 'react-native';
-import { storiesOf } from '@storybook/react-native';
-
-import CardWrapper from '.';
-
-storiesOf('Card/CardWrapper', module)
-  .add('Default', () => {
-    const centered = {
-      justifyContent: 'center',
-      alignItems: 'center',
-      flex: 1,
-      backgroundColor: '#f7f7f7',
-    };
-
-    const cardDimensions = {
-      height: 400,
-      width: '92%',
-    };
-
-    return (
-      <View style={centered}>
-        <CardWrapper style={cardDimensions}>
-          <Text>Boom!</Text>
-        </CardWrapper>
-      </View>
-    );
-  })
-  .add('With backgroundColor', () => {
-    const centered = {
-      justifyContent: 'center',
-      alignItems: 'center',
-      flex: 1,
-      backgroundColor: '#f7f7f7',
-    };
-
-    const cardDimensions = {
-      height: 400,
-      width: '92%',
-    };
-
-    return (
-      <View style={centered}>
-        <CardWrapper style={cardDimensions} cardColor={'salmon'}>
-          <Text>Boom!</Text>
-        </CardWrapper>
-      </View>
-    );
-  });
diff --git a/apolloschurchapp/src/ui/Card/CardWrapper/CardWrapper.tests.js b/apolloschurchapp/src/ui/Card/CardWrapper/CardWrapper.tests.js
deleted file mode 100644
index efcd5ee..0000000
--- a/apolloschurchapp/src/ui/Card/CardWrapper/CardWrapper.tests.js
+++ /dev/null
@@ -1,59 +0,0 @@
-import React from 'react';
-import { Text } from 'react-native';
-import renderer from 'react-test-renderer';
-
-import Providers from 'apolloschurchapp/src/Providers';
-
-import CardWrapper from '.';
-
-describe('the CardWrapper component', () => {
-  it('should render', () => {
-    const tree = renderer.create(
-      <Providers>
-        <CardWrapper />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render children', () => {
-    const tree = renderer.create(
-      <Providers>
-        <CardWrapper>
-          <Text>Boom!</Text>
-        </CardWrapper>
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should accept a backgroundColor', () => {
-    const tree = renderer.create(
-      <Providers>
-        <CardWrapper backgroundColor={'salmon'}>
-          <Text>Boom!</Text>
-        </CardWrapper>
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should accept and render passed in styles', () => {
-    const cardDimensions = {
-      height: 400,
-      width: '92%',
-    };
-
-    const tree = renderer.create(
-      <Providers>
-        <CardWrapper style={cardDimensions} />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should accept additional props', () => {
-    const tree = renderer.create(
-      <Providers>
-        <CardWrapper accessible={false} />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/ui/Card/CardWrapper/index.js b/apolloschurchapp/src/ui/Card/CardWrapper/index.js
deleted file mode 100644
index 9dc11b0..0000000
--- a/apolloschurchapp/src/ui/Card/CardWrapper/index.js
+++ /dev/null
@@ -1,55 +0,0 @@
-import { compose, pure } from 'recompose';
-import React from 'react';
-import { Platform, View } from 'react-native';
-import PropTypes from 'prop-types';
-
-import { withIsLoading } from 'apolloschurchapp/src/ui/isLoading';
-import styled from 'apolloschurchapp/src/ui/styled';
-import { enhancer as mediaQuery } from 'apolloschurchapp/src/ui/MediaQuery';
-
-const StyledCard = compose(
-  withIsLoading,
-  styled(({ theme, cardColor }) => ({
-    // card styles
-    backgroundColor: cardColor || theme.colors.background.paper,
-    borderRadius: theme.sizing.borderRadius,
-    ...Platform.select(theme.shadows.default),
-  })),
-  mediaQuery(
-    // responsive styles
-    ({ md }) => ({ maxWidth: md }),
-    styled(({ theme }) => ({
-      // mobile
-      marginHorizontal: theme.sizing.baseUnit / 2,
-      marginVertical: theme.sizing.baseUnit / 4,
-    })),
-    styled(({ theme }) => ({
-      // tablet
-      marginHorizontal: theme.sizing.baseUnit,
-      marginVertical: theme.sizing.baseUnit / 4,
-    }))
-  )
-)(View);
-
-/*
- * Overflow on iOS, when declared on the same element as a shadow, clips the shadow so overflow must
- * live on a child wrapper. https://github.com/facebook/react-native/issues/449
- */
-const OverflowFix = styled(({ theme }) => ({
-  borderRadius: theme.sizing.borderRadius,
-  overflow: 'hidden',
-}))(View);
-
-const Card = pure(({ children, isLoading, ...otherProps }) => (
-  <StyledCard {...otherProps}>
-    <OverflowFix>{children}</OverflowFix>
-  </StyledCard>
-));
-
-Card.propTypes = {
-  backgroundColor: PropTypes.string,
-  children: PropTypes.node,
-  style: PropTypes.any, // eslint-disable-line
-};
-
-export default Card;
diff --git a/apolloschurchapp/src/ui/Card/Content.js b/apolloschurchapp/src/ui/Card/Content.js
deleted file mode 100644
index 92584c5..0000000
--- a/apolloschurchapp/src/ui/Card/Content.js
+++ /dev/null
@@ -1,11 +0,0 @@
-import PaddedView from 'apolloschurchapp/src/ui/PaddedView';
-import styled from 'apolloschurchapp/src/ui/styled';
-
-const Content = styled(
-  ({ theme }) => ({
-    paddingVertical: theme.sizing.baseUnit * 0.75,
-  }),
-  'Card.Content'
-)(PaddedView);
-
-export default Content;
diff --git a/apolloschurchapp/src/ui/Card/ErrorCard/ErrorCard.stories.js b/apolloschurchapp/src/ui/Card/ErrorCard/ErrorCard.stories.js
deleted file mode 100644
index b0eb03d..0000000
--- a/apolloschurchapp/src/ui/Card/ErrorCard/ErrorCard.stories.js
+++ /dev/null
@@ -1,8 +0,0 @@
-import React from 'react';
-import { storiesOf } from '@storybook/react-native';
-
-import ErrorCard from '.';
-
-storiesOf('Card/ErrorCard', module).add('Example', () => (
-  <ErrorCard message={'Boom!'} error={'What?'} />
-));
diff --git a/apolloschurchapp/src/ui/Card/ErrorCard/ErrorCard.tests.js b/apolloschurchapp/src/ui/Card/ErrorCard/ErrorCard.tests.js
deleted file mode 100644
index 1293044..0000000
--- a/apolloschurchapp/src/ui/Card/ErrorCard/ErrorCard.tests.js
+++ /dev/null
@@ -1,42 +0,0 @@
-import React from 'react';
-import renderer from 'react-test-renderer';
-
-import Providers from 'apolloschurchapp/src/Providers';
-
-import ErrorCard from '.';
-
-describe('the Card component', () => {
-  it('should render', () => {
-    const tree = renderer.create(
-      <Providers>
-        <ErrorCard message={'Boom!'} error={'What?'} />
-      </Providers>
-    );
-
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render with an error message inside an object', () => {
-    const errorObject = {
-      message: 'You have discovered an error message. Do you open it?',
-    };
-    const tree = renderer.create(
-      <Providers>
-        <ErrorCard error={errorObject} />
-      </Providers>
-    );
-
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render with an error inside an object', () => {
-    const errorObject = {
-      error: 'Errors, errors, and more errors',
-    };
-    const tree = renderer.create(
-      <Providers>
-        <ErrorCard error={errorObject} />
-      </Providers>
-    );
-
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/ui/Card/ErrorCard/index.js b/apolloschurchapp/src/ui/Card/ErrorCard/index.js
deleted file mode 100644
index ee0167b..0000000
--- a/apolloschurchapp/src/ui/Card/ErrorCard/index.js
+++ /dev/null
@@ -1,40 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-
-import styled from 'apolloschurchapp/src/ui/styled';
-import { H4, H6 } from 'apolloschurchapp/src/ui/typography';
-import Card, { CardContent } from 'apolloschurchapp/src/ui/Card';
-
-const Header = styled({ textAlign: 'center' }, 'Error.Header')(H4);
-const ErrorText = styled({ textAlign: 'center' }, 'Error.Text')(H6);
-
-const Err = ({ message = 'Uh oh!', error }) => {
-  let errorMessage;
-  if (typeof error !== 'string') {
-    if (error && error.message) {
-      errorMessage = error.message;
-    } else if (error && error.error && typeof error.error === 'string') {
-      errorMessage = error.error;
-    } else {
-      errorMessage = 'An unexpected error occured';
-    }
-  } else {
-    errorMessage = error;
-  }
-
-  return (
-    <Card>
-      <CardContent>
-        <Header>{message}</Header>
-        <ErrorText>{errorMessage}</ErrorText>
-      </CardContent>
-    </Card>
-  );
-};
-
-Err.propTypes = {
-  message: PropTypes.string,
-  error: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),
-};
-
-export default Err;
diff --git a/apolloschurchapp/src/ui/Card/Image.js b/apolloschurchapp/src/ui/Card/Image.js
deleted file mode 100644
index 5c26499..0000000
--- a/apolloschurchapp/src/ui/Card/Image.js
+++ /dev/null
@@ -1,28 +0,0 @@
-import { Platform } from 'react-native';
-import { compose } from 'recompose';
-
-import styled from 'apolloschurchapp/src/ui/styled';
-import ProgressiveImage from 'apolloschurchapp/src/ui/ProgressiveImage';
-import { getIsLoading } from 'apolloschurchapp/src/ui/isLoading';
-
-const Image = compose(
-  getIsLoading,
-  styled(
-    ({ theme }) => ({
-      aspectRatio: 1,
-      width: '100%',
-      ...Platform.select({
-        android: {
-          // fixes android borderRadius overflow display issue
-          borderTopRightRadius: theme.sizing.borderRadius,
-          borderTopLeftRadius: theme.sizing.borderRadius,
-        },
-      }),
-    }),
-    'Card.Image'
-  )
-)(ProgressiveImage);
-
-Image.propTypes = ProgressiveImage.propTypes;
-
-export default Image;
diff --git a/apolloschurchapp/src/ui/Card/index.js b/apolloschurchapp/src/ui/Card/index.js
deleted file mode 100644
index 9efd6dc..0000000
--- a/apolloschurchapp/src/ui/Card/index.js
+++ /dev/null
@@ -1,5 +0,0 @@
-export { default } from './CardWrapper';
-export CardImage from './Image';
-export CardContent from './Content';
-export CardActions from './Actions';
-export ErrorCard from './ErrorCard';
diff --git a/apolloschurchapp/src/ui/CardTile/CardTile.stories.js b/apolloschurchapp/src/ui/CardTile/CardTile.stories.js
deleted file mode 100644
index 8699605..0000000
--- a/apolloschurchapp/src/ui/CardTile/CardTile.stories.js
+++ /dev/null
@@ -1,61 +0,0 @@
-import React from 'react';
-import { View, Text } from 'react-native';
-import { storiesOf } from '@storybook/react-native';
-
-import CardTile from '.';
-
-const containerStyles = {
-  height: 300,
-  justifyContent: 'center',
-  alignItems: 'center',
-  backgroundColor: '#f7f7f7',
-};
-
-storiesOf('CardTile', module)
-  .add('Default', () => (
-    <View style={containerStyles}>
-      <CardTile title={'Why Jesus is Timeless'} />
-    </View>
-  ))
-  .add('Skeleton', () => (
-    <View style={containerStyles}>
-      <CardTile
-        number={7}
-        title={'Why Jesus is Timeless'}
-        byLine={'Marty McFly'}
-        date={'Sat Oct 26 1985 01:24:00 GMT+0008 (UTC)'}
-        isLoading
-      />
-    </View>
-  ))
-  .add('With Number Box', () => (
-    <View style={containerStyles}>
-      <CardTile number={7} title={'Why Jesus is Timeless'} />
-    </View>
-  ))
-  .add('With byLine', () => (
-    <View style={containerStyles}>
-      <CardTile
-        number={7}
-        title={'Why Jesus is Timeless'}
-        byLine={'Marty McFly'}
-      />
-    </View>
-  ))
-  .add('With date', () => (
-    <View style={containerStyles}>
-      <CardTile
-        number={7}
-        title={'Why Jesus is Timeless'}
-        byLine={'Marty McFly'}
-        date={'Sat Oct 26 1985 01:24:00 GMT+0008 (UTC)'} // this snapshot will expire in a year
-      />
-    </View>
-  ))
-  .add('With Children', () => (
-    <View style={containerStyles}>
-      <CardTile>
-        <Text>Biff Tannen was here</Text>
-      </CardTile>
-    </View>
-  ));
diff --git a/apolloschurchapp/src/ui/CardTile/CardTile.tests.js b/apolloschurchapp/src/ui/CardTile/CardTile.tests.js
deleted file mode 100644
index 28b9c14..0000000
--- a/apolloschurchapp/src/ui/CardTile/CardTile.tests.js
+++ /dev/null
@@ -1,94 +0,0 @@
-import React from 'react';
-import { Text } from 'react-native';
-import renderer from 'react-test-renderer';
-
-import Providers from 'apolloschurchapp/src/Providers';
-
-import CardTile from '.';
-
-describe('the CardTile component', () => {
-  it('should render', () => {
-    const tree = renderer.create(
-      <Providers>
-        <CardTile title={'Why Jesus is Timeless'} />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render a loading skeleton', () => {
-    const tree = renderer.create(
-      <Providers>
-        <CardTile title={'Why Jesus is Timeless'} isLoading />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render a number box', () => {
-    const tree = renderer.create(
-      <Providers>
-        <CardTile number={7} title={'Why Jesus is Timeless'} />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('number box should grow elegantly with larger numbers', () => {
-    const tree = renderer.create(
-      <Providers>
-        <CardTile number={7777} title={'Why Jesus is Timeless'} />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render card details', () => {
-    const tree = renderer.create(
-      <Providers>
-        <CardTile
-          number={7}
-          title={'Why Jesus is Timeless'}
-          showDetails
-          byLine={'Marty McFly'}
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render card details with date', () => {
-    const tree = renderer.create(
-      <Providers>
-        <CardTile
-          number={7}
-          title={'Why Jesus is Timeless'}
-          showDetails
-          byLine={'Marty McFly'}
-          date={'Sat Oct 26 1985 01:24:00 GMT+0008 (UTC)'} // this snapshot will expire in a year
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render children', () => {
-    const tree = renderer.create(
-      <Providers>
-        <CardTile>
-          <Text>Biff Tannen was here</Text>
-        </CardTile>
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render a loading skeleton for all available props', () => {
-    const tree = renderer.create(
-      <Providers>
-        <CardTile
-          number={7}
-          title={'Why Jesus is Timeless'}
-          showDetails
-          byLine={'Marty McFly'}
-          date={'Sat Oct 26 1985 01:24:00 GMT+0008 (UTC)'}
-          isLoading
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/ui/CardTile/index.js b/apolloschurchapp/src/ui/CardTile/index.js
deleted file mode 100644
index c0710f8..0000000
--- a/apolloschurchapp/src/ui/CardTile/index.js
+++ /dev/null
@@ -1,154 +0,0 @@
-import React from 'react';
-import { View, StyleSheet } from 'react-native';
-import PropTypes from 'prop-types';
-import { compose, pure } from 'recompose';
-import moment from 'moment';
-
-import Placeholder from 'apolloschurchapp/src/ui/Placeholder';
-import { withIsLoading } from 'apolloschurchapp/src/ui/isLoading';
-import { withTheme, withThemeMixin } from 'apolloschurchapp/src/ui/theme';
-import styled from 'apolloschurchapp/src/ui/styled';
-import { H3, H5, H6 } from 'apolloschurchapp/src/ui/typography';
-import { CardContent, CardActions } from 'apolloschurchapp/src/ui/Card';
-import ChannelLabel from 'apolloschurchapp/src/ui/ChannelLabel';
-
-const enhance = compose(
-  withIsLoading,
-  withThemeMixin(({ theme }) => ({
-    type: 'light',
-    colors: {
-      background: {
-        inactive: theme.colors.lightSecondary,
-      },
-    },
-  })),
-  withTheme(),
-  pure
-);
-
-const TileSpacer = styled(({ theme }) => ({
-  padding: theme.sizing.baseUnit / 2,
-}))(View);
-
-const Tile = styled(({ theme }) => ({
-  height: '100%',
-  aspectRatio: 1,
-  borderRadius: theme.sizing.borderRadius,
-  backgroundColor: theme.colors.lightTertiary,
-}))(View);
-
-const PlaceholderOverflowFix = styled(({ theme }) => ({
-  ...StyleSheet.absoluteFillObject,
-  justifyContent: 'center',
-  borderRadius: theme.sizing.borderRadius,
-  overflow: 'hidden',
-}))(View);
-
-const TileNumber = styled(({ theme, size }) => ({
-  position: 'absolute',
-  top: 0,
-  left: 0,
-  width: theme.helpers.rem(1 * (size < 2 ? 2 : size)),
-  height: theme.helpers.rem(1 * (size < 2 ? 2 : size)),
-  justifyContent: 'center',
-  alignItems: 'center',
-  borderTopLeftRadius: theme.sizing.borderRadius,
-  borderBottomRightRadius: theme.sizing.borderRadius,
-  backgroundColor: theme.colors.white,
-}))(View);
-
-const relativeTime = (date) => {
-  if (moment.updateLocale) {
-    moment.updateLocale('en', {
-      relativeTime: {
-        future: 'in %s',
-        past: '%s ago',
-        s: 's',
-        m: 'm',
-        mm: '%dm',
-        h: '1h',
-        hh: '%dh',
-        d: '1d',
-        dd: '%dd',
-        M: '1mo',
-        MM: '%dmo',
-        y: '1y',
-        yy: '%dy',
-      },
-    });
-  }
-
-  const time = moment(new Date(date));
-  return time.fromNow(true); // true omits 'ago'
-};
-
-export const CardTile = enhance(
-  ({
-    number,
-    title,
-    byLine,
-    date,
-    style: styleProp = {},
-    isLoading,
-    theme,
-    children,
-    ...otherProps
-  }) => (
-    <TileSpacer collapsable={false}>
-      <Tile style={styleProp} {...otherProps}>
-        <PlaceholderOverflowFix>
-          {typeof number === 'undefined' ? null : (
-            <TileNumber size={number.toString().length}>
-              <Placeholder.Media
-                size={theme.helpers.rem(
-                  1.25 *
-                    (number.toString().length < 2
-                      ? 2
-                      : number.toString().length)
-                )}
-                onReady={!isLoading}
-              >
-                <View>
-                  <H5>{number}</H5>
-                </View>
-              </Placeholder.Media>
-            </TileNumber>
-          )}
-
-          {typeof title === 'undefined' ? null : (
-            <CardContent>
-              <H3>{title}</H3>
-            </CardContent>
-          )}
-
-          {byLine ? (
-            <CardActions>
-              <ChannelLabel
-                label={byLine}
-                icon={'video'}
-                isLoading={isLoading}
-                withFlex
-              />
-              {typeof date === 'undefined' ? null : (
-                <H6>{relativeTime(date)}</H6>
-              )}
-            </CardActions>
-          ) : null}
-
-          {children}
-        </PlaceholderOverflowFix>
-      </Tile>
-    </TileSpacer>
-  )
-);
-
-CardTile.propTypes = {
-  title: PropTypes.string,
-  number: PropTypes.number,
-  byLine: PropTypes.string,
-  date: PropTypes.string,
-  style: PropTypes.any, // eslint-disable-line
-  isLoading: PropTypes.bool,
-};
-
-export default CardTile;
diff --git a/apolloschurchapp/src/ui/CenteredView/CenteredView.stories.js b/apolloschurchapp/src/ui/CenteredView/CenteredView.stories.js
deleted file mode 100644
index a100ccb..0000000
--- a/apolloschurchapp/src/ui/CenteredView/CenteredView.stories.js
+++ /dev/null
@@ -1,12 +0,0 @@
-import React from 'react';
-import { storiesOf } from '@storybook/react-native';
-
-import { H1 } from 'apolloschurchapp/src/ui/typography';
-
-import CenteredView from '.';
-
-storiesOf('CenteredView', module).add('Example', () => (
-  <CenteredView>
-    <H1>This text is in a CenteredView</H1>
-  </CenteredView>
-));
diff --git a/apolloschurchapp/src/ui/CenteredView/CenteredView.tests.js b/apolloschurchapp/src/ui/CenteredView/CenteredView.tests.js
deleted file mode 100644
index 083f568..0000000
--- a/apolloschurchapp/src/ui/CenteredView/CenteredView.tests.js
+++ /dev/null
@@ -1,17 +0,0 @@
-import React from 'react';
-import renderer from 'react-test-renderer';
-
-import Providers from 'apolloschurchapp/src/Providers';
-
-import CenteredView from '.';
-
-describe('the CenteredView component', () => {
-  it('should render', () => {
-    const tree = renderer.create(
-      <Providers>
-        <CenteredView />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/ui/CenteredView/index.js b/apolloschurchapp/src/ui/CenteredView/index.js
deleted file mode 100644
index 385da74..0000000
--- a/apolloschurchapp/src/ui/CenteredView/index.js
+++ /dev/null
@@ -1,21 +0,0 @@
-import PropTypes from 'prop-types';
-import { View } from 'react-native';
-
-import styled from 'apolloschurchapp/src/ui/styled';
-
-const CenteredView = styled(({ theme }) => ({
-  flex: 1,
-  justifyContent: 'center',
-  alignItems: 'center',
-  backgroundColor: theme.colors.background.screen,
-}))(View);
-
-CenteredView.defaultProps = {
-  children: null,
-};
-
-CenteredView.propTypes = {
-  children: PropTypes.node,
-};
-
-export default CenteredView;
diff --git a/apolloschurchapp/src/ui/ChannelLabel/ChannelLabel.stories.js b/apolloschurchapp/src/ui/ChannelLabel/ChannelLabel.stories.js
deleted file mode 100644
index 6bc2106..0000000
--- a/apolloschurchapp/src/ui/ChannelLabel/ChannelLabel.stories.js
+++ /dev/null
@@ -1,35 +0,0 @@
-import React from 'react';
-import { View } from 'react-native';
-import { storiesOf } from '@storybook/react-native';
-
-import CenteredView from 'apolloschurchapp/src/ui/CenteredView';
-import styled from 'apolloschurchapp/src/ui/styled';
-
-import ChannelLabel from '.';
-
-storiesOf('ChannelLabel', module)
-  .addDecorator((getStory) => <CenteredView>{getStory()}</CenteredView>)
-  .add('Default', () => <ChannelLabel label={'Default'} />)
-  .add('isLoading', () => <ChannelLabel label={'Default'} isLoading />)
-  .add('With Icon', () => <ChannelLabel label={'Albums'} icon={'like-solid'} />)
-  .add('isLoading With Icon', () => (
-    <ChannelLabel label={'Albums'} icon={'like-solid'} isLoading />
-  ))
-  .add('withFlex', () => {
-    const Wrapper = styled({
-      flex: 1,
-      width: '100%',
-    })(View);
-
-    const Box = styled({
-      flex: 3,
-      backgroundColor: 'salmon',
-    })(View);
-
-    return (
-      <Wrapper>
-        <ChannelLabel label={'Albums'} icon={'arrow-back'} withFlex />
-        <Box />
-      </Wrapper>
-    );
-  });
diff --git a/apolloschurchapp/src/ui/ChannelLabel/ChannelLabel.tests.js b/apolloschurchapp/src/ui/ChannelLabel/ChannelLabel.tests.js
deleted file mode 100644
index 1bb50f2..0000000
--- a/apolloschurchapp/src/ui/ChannelLabel/ChannelLabel.tests.js
+++ /dev/null
@@ -1,49 +0,0 @@
-import React from 'react';
-import renderer from 'react-test-renderer';
-
-import Providers from 'apolloschurchapp/src/Providers';
-
-import ChannelLabel from '.';
-
-describe('the ChannelLabel component', () => {
-  it('should render', () => {
-    const tree = renderer.create(
-      <Providers>
-        <ChannelLabel label={'Default'} />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render a skeleton view', () => {
-    const tree = renderer.create(
-      <Providers>
-        <ChannelLabel label={'Default'} isLoading />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render with an icon', () => {
-    const tree = renderer.create(
-      <Providers>
-        <ChannelLabel label={'Default'} icon={'like'} />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render a skeleton view that supports an icon', () => {
-    const tree = renderer.create(
-      <Providers>
-        <ChannelLabel label={'Default'} icon={'like'} isLoading />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render flexed', () => {
-    const tree = renderer.create(
-      <Providers>
-        <ChannelLabel label={'Default'} withFlex />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/ui/ChannelLabel/index.js b/apolloschurchapp/src/ui/ChannelLabel/index.js
deleted file mode 100644
index aa70c08..0000000
--- a/apolloschurchapp/src/ui/ChannelLabel/index.js
+++ /dev/null
@@ -1,64 +0,0 @@
-import React from 'react';
-import { View } from 'react-native';
-import PropTypes from 'prop-types';
-import { compose, pure } from 'recompose';
-import { kebabCase } from 'lodash';
-
-import { withIsLoading } from 'apolloschurchapp/src/ui/isLoading';
-import { withTheme } from 'apolloschurchapp/src/ui/theme';
-import styled from 'apolloschurchapp/src/ui/styled';
-import { H6 } from 'apolloschurchapp/src/ui/typography';
-import Icon from 'apolloschurchapp/src/ui/Icon';
-import * as Icons from 'apolloschurchapp/src/ui/Icon/icons';
-
-const enhance = compose(
-  withIsLoading,
-  pure,
-  withTheme()
-);
-
-const Wrapper = styled(({ flexed }) => ({
-  flex: flexed ? 1 : null,
-  flexDirection: 'row',
-  alignItems: 'center',
-}))(View);
-
-const PlaceholderWrapper = styled(({ theme, withIcon }) => ({
-  flex: 1,
-  ...(withIcon
-    ? { paddingHorizontal: theme.sizing.baseUnit / 2 }
-    : { paddingRight: theme.sizing.baseUnit / 2 }),
-}))(View);
-
-const StyledH6 = styled(({ theme }) => ({
-  color: theme.colors.text.secondary,
-}))(H6);
-
-const ChannelLabel = enhance(({ label, icon, withFlex, isLoading, theme }) => (
-  <Wrapper flexed={withFlex}>
-    {icon ? (
-      <Icon
-        name={icon}
-        size={theme.helpers.rem(1.2)}
-        fill={theme.colors.text.secondary}
-        isLoading={isLoading}
-      />
-    ) : null}
-    <PlaceholderWrapper withIcon={icon}>
-      <StyledH6>{label}</StyledH6>
-    </PlaceholderWrapper>
-  </Wrapper>
-));
-
-ChannelLabel.propTypes = {
-  label: PropTypes.oneOfType([PropTypes.string, PropTypes.element]).isRequired,
-  icon: PropTypes.oneOf(Object.keys(Icons).map(kebabCase)),
-  isLoading: PropTypes.bool,
-  withFlex: PropTypes.bool,
-};
-
-ChannelLabel.defaultProps = {
-  withFlex: false,
-};
-
-export default ChannelLabel;
diff --git a/apolloschurchapp/src/ui/Chip/Chip.stories.js b/apolloschurchapp/src/ui/Chip/Chip.stories.js
deleted file mode 100644
index d730e1d..0000000
--- a/apolloschurchapp/src/ui/Chip/Chip.stories.js
+++ /dev/null
@@ -1,32 +0,0 @@
-import React from 'react';
-import { storiesOf } from '@storybook/react-native';
-
-import ChipList from './List';
-
-import Chip from '.';
-
-storiesOf('Chip', module)
-  .add('default', () => (
-    <Chip onPress={() => {}} title="I'm just a poor chip" />
-  ))
-  .add('With Icon', () => (
-    <Chip onPress={() => {}} icon="close" title="I need no sympathy" />
-  ))
-  .add('Selected', () => <Chip onPress={() => {}} selected title="Easy come" />)
-  .add('List', () => (
-    <ChipList>
-      <Chip onPress={() => {}} title="I'm just a poor chip" />
-      <Chip onPress={() => {}} icon="close" title="I need no sympathy" />
-      <Chip onPress={() => {}} selected title="Easy come" />
-      <Chip onPress={() => {}} icon="close" selected title="Easy go" />
-      <Chip onPress={() => {}} icon="arrow-up" title="Litte high" />
-      <Chip
-        onPress={() => {}}
-        type="secondary"
-        icon="arrow-down"
-        title="Litte low"
-      />
-      <Chip title="📍💨?" />
-      <Chip selected title="¯\_(ツ)_/¯" />
-    </ChipList>
-  ));
diff --git a/apolloschurchapp/src/ui/Chip/Chip.tests.js b/apolloschurchapp/src/ui/Chip/Chip.tests.js
deleted file mode 100644
index 50d2a08..0000000
--- a/apolloschurchapp/src/ui/Chip/Chip.tests.js
+++ /dev/null
@@ -1,33 +0,0 @@
-import React from 'react';
-import renderer from 'react-test-renderer';
-
-import Providers from 'apolloschurchapp/src/Providers';
-
-import Chip from '.';
-
-describe('The Chip component', () => {
-  it('should render correctly', () => {
-    const tree = renderer.create(
-      <Providers>
-        <Chip title="My Button!" onPress={() => {}} />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render an icon', () => {
-    const tree = renderer.create(
-      <Providers>
-        <Chip icon="like" title="Heart!!!" />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should be selected', () => {
-    const tree = renderer.create(
-      <Providers>
-        <Chip title="My Button!" selected />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/ui/Chip/List.js b/apolloschurchapp/src/ui/Chip/List.js
deleted file mode 100644
index 98f9118..0000000
--- a/apolloschurchapp/src/ui/Chip/List.js
+++ /dev/null
@@ -1,14 +0,0 @@
-import { View } from 'react-native';
-
-import styled from 'apolloschurchapp/src/ui/styled';
-
-const ChipList = styled(
-  {
-    flexDirection: 'row',
-    alignItems: 'center',
-    flexWrap: 'wrap',
-  },
-  'Chip.List'
-)(View);
-
-export default ChipList;
diff --git a/apolloschurchapp/src/ui/Chip/index.js b/apolloschurchapp/src/ui/Chip/index.js
deleted file mode 100644
index cb8eb77..0000000
--- a/apolloschurchapp/src/ui/Chip/index.js
+++ /dev/null
@@ -1,80 +0,0 @@
-import React from 'react';
-import { compose, mapProps } from 'recompose';
-import PropTypes from 'prop-types';
-/* touchable native feedback currently is having flex layout issues on react-native android, so we
- * fall back to TouchableOpacity
- */
-import { TouchableOpacity } from 'react-native';
-
-import { H6 } from 'apolloschurchapp/src/ui/typography';
-import Button from 'apolloschurchapp/src/ui/Button';
-import Icon from 'apolloschurchapp/src/ui/Icon';
-import { withTheme } from 'apolloschurchapp/src/ui/theme';
-import styled from 'apolloschurchapp/src/ui/styled';
-
-export { default as ChipList } from './List';
-
-const enhance = compose(
-  withTheme(),
-  mapProps(({ theme, selected, ...otherProps }) => ({
-    type: selected ? 'primary' : 'default',
-    iconSize: theme.sizing.baseUnit,
-    ...otherProps,
-  }))
-);
-
-const TitleText = styled(({ withIcon = false }) => ({
-  ...(withIcon ? { flexGrow: 1 } : {}),
-  textAlign: 'center',
-  alignItems: 'center',
-  justifyContent: 'center',
-  paddingHorizontal: 6,
-}))(H6);
-
-const StyledButton = styled(
-  ({ theme, withIcon = false }) => ({
-    justifyContent: withIcon ? 'flex-end' : 'center',
-    paddingHorizontal: theme.sizing.baseUnit / 4,
-    paddingVertical: theme.sizing.baseUnit / 4,
-    height: theme.sizing.baseUnit * 2,
-    /* these margins are only used when a chip is in a list.
-     * TODO: consider removing or making conditional for use outside of lists
-     */
-    marginRight: theme.sizing.baseUnit / 2,
-    marginBottom: theme.sizing.baseUnit / 2,
-  }),
-  'Chip'
-)(Button);
-
-const Chip = enhance(
-  ({
-    icon,
-    iconStyles = {},
-    iconSize,
-    selected,
-    title,
-    pill = false,
-    ...buttonProps
-  }) => (
-    <StyledButton
-      withIcon={icon}
-      TouchableComponent={TouchableOpacity}
-      pill={pill}
-      {...buttonProps}
-    >
-      {title ? <TitleText withIcon={icon}>{title}</TitleText> : null}
-      {icon ? <Icon name={icon} style={iconStyles} size={iconSize} /> : null}
-    </StyledButton>
-  )
-);
-
-Chip.propTypes = {
-  icon: PropTypes.string,
-  iconStyles: PropTypes.object, // eslint-disable-line react/forbid-prop-types
-  iconSize: PropTypes.number,
-  selected: PropTypes.bool,
-  title: PropTypes.string,
-  pill: PropTypes.bool,
-};
-
-export default Chip;
diff --git a/apolloschurchapp/src/ui/ConnectedImage/ConnectedImage.tests.js b/apolloschurchapp/src/ui/ConnectedImage/ConnectedImage.tests.js
deleted file mode 100644
index d90cab3..0000000
--- a/apolloschurchapp/src/ui/ConnectedImage/ConnectedImage.tests.js
+++ /dev/null
@@ -1,55 +0,0 @@
-import React from 'react';
-import renderer from 'react-test-renderer';
-
-import Providers from 'apolloschurchapp/src/Providers';
-
-import ConnectedImage, { getCachedSources, updateCache } from '.';
-
-describe('the ConnectedImage component', () => {
-  it('should render immediately with a network image with a known width and height', () => {
-    const tree = renderer.create(
-      <Providers>
-        <ConnectedImage
-          source={{
-            uri: 'https://placeholdit.co/i/150x150?bg=eeeeee&fc=577084',
-            width: 150,
-            height: 150,
-          }}
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should maintain aspect ratio', () => {
-    const tree = renderer.create(
-      <Providers>
-        <ConnectedImage
-          source={{
-            uri: 'https://placeholdit.co/i/150x150?bg=eeeeee&fc=577084',
-            width: 150,
-            height: 150,
-          }}
-          maintainAspectRatio
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  describe('updateCache', () => {
-    it('updates cache with image uri and sizes', async () => {
-      const source = {
-        url: '//via.placeholder.com/320x240',
-      };
-      await updateCache(source);
-
-      expect(getCachedSources(source)).toContainEqual(
-        expect.objectContaining({
-          uri: 'https://via.placeholder.com/320x240',
-          url: '//via.placeholder.com/320x240',
-          width: 320,
-          height: 240,
-        })
-      );
-    });
-  });
-});
diff --git a/apolloschurchapp/src/ui/ConnectedImage/SkeletonImage.js b/apolloschurchapp/src/ui/ConnectedImage/SkeletonImage.js
deleted file mode 100644
index ba9230e..0000000
--- a/apolloschurchapp/src/ui/ConnectedImage/SkeletonImage.js
+++ /dev/null
@@ -1,12 +0,0 @@
-import { View } from 'react-native';
-import Placeholder from 'rn-placeholder';
-
-import styled from 'apolloschurchapp/src/ui/styled';
-
-const SkeletonImage = styled(({ theme }) => ({
-  width: '100%',
-  aspectRatio: 1,
-  backgroundColor: theme.colors.background.inactive,
-}))(View);
-
-export default Placeholder.connect(SkeletonImage);
diff --git a/apolloschurchapp/src/ui/ConnectedImage/SkeletonImage.tests.js b/apolloschurchapp/src/ui/ConnectedImage/SkeletonImage.tests.js
deleted file mode 100644
index c4a1e87..0000000
--- a/apolloschurchapp/src/ui/ConnectedImage/SkeletonImage.tests.js
+++ /dev/null
@@ -1,17 +0,0 @@
-import React from 'react';
-import renderer from 'react-test-renderer';
-
-import { ThemeProvider } from 'apolloschurchapp/src/ui/theme';
-
-import SkeletonImage from './SkeletonImage';
-
-describe('the SkeletonImage component', () => {
-  it('should render a loading state', () => {
-    const tree = renderer.create(
-      <ThemeProvider>
-        <SkeletonImage onReady={false} />
-      </ThemeProvider>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/ui/ConnectedImage/index.js b/apolloschurchapp/src/ui/ConnectedImage/index.js
deleted file mode 100644
index 0634f54..0000000
--- a/apolloschurchapp/src/ui/ConnectedImage/index.js
+++ /dev/null
@@ -1,223 +0,0 @@
-import React, { PureComponent } from 'react';
-import { Animated, Image } from 'react-native';
-import PropTypes from 'prop-types';
-import { every } from 'lodash';
-
-import styled from 'apolloschurchapp/src/ui/styled';
-
-import SkeletonImage from './SkeletonImage';
-
-// This mirrors the File resource we get from Heighliner:
-const ImageSourceType = PropTypes.oneOfType([
-  PropTypes.shape({
-    uri: PropTypes.string,
-    label: PropTypes.string,
-    width: PropTypes.number,
-    height: PropTypes.number,
-  }),
-  PropTypes.string,
-]);
-
-const sizeCache = {};
-
-const getCacheKey = (source) => {
-  if (source.size && source.fileLabel)
-    return `${source.size}-${source.fileLabel}`;
-  if (source.url) return source.url;
-  if (source.uri) return source.uri;
-  return undefined;
-};
-
-const getCachedSources = (_sources = []) => {
-  let sources = _sources;
-  if (!Array.isArray(sources)) sources = [sources];
-  sources = sources.map((source) => {
-    if (typeof source === 'string') return { url: source };
-    return source;
-  });
-
-  return sources.map((source) => ({
-    uri: (source.url || '').replace(/^http:\/\/|^\/\//i, 'https://'),
-    ...source,
-    ...(sizeCache[getCacheKey(source)] || {}),
-  }));
-};
-
-const updateCache = (sources) =>
-  Promise.all(
-    getCachedSources(sources).map((source) => {
-      const key = getCacheKey(source);
-      if (sizeCache[key] || !key) return Promise.resolve(source);
-      return new Promise((resolve, reject) => {
-        Image.getSize(
-          source.uri,
-          (width, height) =>
-            resolve({
-              width,
-              height,
-            }),
-          reject
-        );
-      }).then((sizeForCache) => {
-        if (key) sizeCache[key] = sizeForCache;
-      });
-    })
-  );
-
-const withBackgroundColor = styled(({ theme }) => ({
-  backgroundColor: theme.colors.background.inactive,
-}));
-
-class ConnectedImage extends PureComponent {
-  static propTypes = {
-    source: PropTypes.oneOfType([
-      PropTypes.arrayOf(ImageSourceType),
-      ImageSourceType,
-    ]),
-    ImageComponent: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),
-    maintainAspectRatio: PropTypes.bool,
-    isLoading: PropTypes.bool,
-    onLoad: PropTypes.func,
-    style: PropTypes.any, // eslint-disable-line
-  };
-
-  static defaultProps = {
-    ImageComponent: Animated.Image,
-    maintainAspectRatio: false,
-  };
-
-  constructor(props) {
-    super(props);
-
-    this.state = {
-      source: getCachedSources(this.props.source),
-    };
-
-    this.imageOpacity = new Animated.Value(0);
-  }
-
-  componentWillMount() {
-    this.updateCache(this.props.source);
-  }
-
-  componentWillReceiveProps(newProps) {
-    this.updateCache(newProps.source);
-  }
-
-  componentWillUnmount() {
-    if (this.cacheUpdater) this.cacheUpdater.cancel();
-  }
-
-  get aspectRatio() {
-    const style = {};
-    if (this.props.maintainAspectRatio) {
-      const firstSource = this.state.source[0];
-      if (firstSource && firstSource.width && firstSource.height) {
-        style.aspectRatio = firstSource.width / firstSource.height;
-      }
-    }
-    if (this.props.isLoading && !style.aspectRatio) {
-      style.aspectRatio = 1;
-    }
-    return style;
-  }
-
-  get isLoading() {
-    return (
-      this.props.isLoading ||
-      !every(this.state.source, (image) => image.width && image.height)
-    );
-  }
-
-  handleOnLoad = (...args) => {
-    Animated.timing(this.imageOpacity, {
-      toValue: 1,
-      duration: 250,
-    }).start();
-    if (this.props.onLoad) this.props.onLoad(...args);
-  };
-
-  cancleCacheUpdater = (promise) => {
-    let hasCanceled = false;
-
-    const wrappedPromise = new Promise((resolve, reject) => {
-      promise.then(
-        (val) => (hasCanceled ? reject({ isCanceled: true }) : resolve(val)), // eslint-disable-line
-        (error) => (hasCanceled ? reject({ isCanceled: true }) : reject(error)) // eslint-disable-line
-      );
-    });
-
-    return {
-      promise: wrappedPromise,
-      cancel() {
-        hasCanceled = true;
-      },
-    };
-  };
-
-  updateCache(sources) {
-    this.cacheUpdater = this.cancleCacheUpdater(updateCache(sources));
-    this.cacheUpdater.promise
-      .then(() => {
-        const newSource = getCachedSources(sources);
-        const oldSource = this.state.source || [];
-
-        if (
-          newSource.length !== oldSource.length ||
-          newSource.find(
-            (source, i) =>
-              !oldSource[i] ||
-              getCacheKey(source) !== getCacheKey(oldSource[i]) ||
-              source.width !== oldSource[i].width ||
-              source.height !== oldSource[i].height
-          )
-        ) {
-          this.setState({ source: getCachedSources(sources) });
-        }
-      })
-      .catch(() => {
-        // todo: Right now, if there's an error on connected image that means one of two things:
-        // 1) the image component was unmounted before load...we should do nothing
-        // 2) the image failed to load. Our "empty" state for images is a graybox.
-        //    We could make this better by showing an alert icon or something on error,
-        //    But a gray box is better then nothing. so, we do nothing currently :)
-        //    However, we still need this empty catch function as uncaught promise errors
-        //    will throw an error up the food chain.
-      });
-  }
-
-  render() {
-    let { source } = this.state;
-    if (!Array.isArray(source)) source = [source];
-
-    const {
-      ImageComponent = Animated.Image,
-      style,
-      isLoading,
-      maintainAspectRatio,
-      ...otherProps
-    } = this.props;
-    return (
-      <SkeletonImage onReady={!this.isLoading}>
-        <ImageComponent
-          {...otherProps}
-          source={source}
-          onLoad={this.handleOnLoad}
-          style={[this.aspectRatio, { opacity: this.imageOpacity }, style]}
-        />
-      </SkeletonImage>
-    );
-  }
-}
-
-const enhanced = withBackgroundColor(ConnectedImage);
-
-enhanced.propTypes = ConnectedImage.propTypes;
-
-export {
-  sizeCache,
-  getCacheKey,
-  getCachedSources,
-  updateCache,
-  enhanced as default,
-};
diff --git a/apolloschurchapp/src/ui/ContentCardConnected/ContentCardConnected.js b/apolloschurchapp/src/ui/ContentCardConnected/ContentCardConnected.js
new file mode 100644
index 0000000..399c930
--- /dev/null
+++ b/apolloschurchapp/src/ui/ContentCardConnected/ContentCardConnected.js
@@ -0,0 +1,63 @@
+import React, { memo } from 'react';
+import PropTypes from 'prop-types';
+import { Query } from 'react-apollo';
+import { get } from 'lodash';
+
+import { ErrorCard } from '@apollosproject/ui-kit';
+
+import { LiveConsumer } from '@apollosproject/ui-connected';
+
+import contentCardComponentMapper from './contentCardComponentMapper';
+import GET_CONTENT_CARD from './query';
+
+const ContentCardConnected = memo(
+  ({ Component, contentId, isLoading, tile, mapProps, ...otherProps }) => {
+    if (!contentId || isLoading)
+      return <Component {...otherProps} isLoading tile={tile} />;
+
+    return (
+      <LiveConsumer contentId={contentId}>
+        {(liveStream) => (
+          <Query query={GET_CONTENT_CARD} variables={{ contentId }}>
+            {({ data: { node = {} } = {}, loading, error }) => {
+              if (error) return <ErrorCard error={error} />;
+
+              const coverImage = get(node, 'coverImage.sources', undefined);
+              const hasMedia = !!get(node, 'videos.[0].sources[0]', null);
+              const isLive = !!liveStream;
+              const labelText = get(node, 'parentChannel.name', '');
+
+              return (
+                <Component
+                  {...node}
+                  hasAction={hasMedia}
+                  isLive={isLive}
+                  labelText={isLive ? 'Live' : labelText}
+                  {...otherProps}
+                  coverImage={coverImage}
+                  isLoading={loading}
+                />
+              );
+            }}
+          </Query>
+        )}
+      </LiveConsumer>
+    );
+  }
+);
+
+ContentCardConnected.propTypes = {
+  Component: PropTypes.func,
+  mapProps: PropTypes.func,
+  contentId: PropTypes.string,
+  isLoading: PropTypes.bool,
+  tile: PropTypes.bool,
+};
+
+ContentCardConnected.defaultProps = {
+  Component: contentCardComponentMapper,
+};
+
+ContentCardConnected.displayName = 'ContentCardConnected';
+
+export default ContentCardConnected;
diff --git a/apolloschurchapp/src/ui/ContentCardConnected/contentCardComponentMapper.js b/apolloschurchapp/src/ui/ContentCardConnected/contentCardComponentMapper.js
new file mode 100644
index 0000000..30d8e1e
--- /dev/null
+++ b/apolloschurchapp/src/ui/ContentCardConnected/contentCardComponentMapper.js
@@ -0,0 +1,19 @@
+import React from 'react';
+import { get } from 'lodash';
+
+import { DefaultCard, HighlightCard } from '@apollosproject/ui-kit';
+
+const contentCardComponentMapper = (props) => {
+  // map typename to the the card we want to render.
+  switch (get(props, '__typename')) {
+    case 'MediaContentItem':
+    case 'WeekendContentItem':
+    case 'ContentSeriesContentItem':
+    case 'DevotionalContentItem':
+      return <HighlightCard {...props} />;
+    default:
+      return <DefaultCard {...props} />;
+  }
+};
+
+export default contentCardComponentMapper;
diff --git a/apolloschurchapp/src/ui/ContentCardConnected/index.js b/apolloschurchapp/src/ui/ContentCardConnected/index.js
new file mode 100644
index 0000000..8d01605
--- /dev/null
+++ b/apolloschurchapp/src/ui/ContentCardConnected/index.js
@@ -0,0 +1,5 @@
+import ContentCardConnected from './ContentCardConnected';
+
+export contentCardComponentMapper from './contentCardComponentMapper';
+
+export default ContentCardConnected;
diff --git a/apolloschurchapp/src/ui/ContentCardConnected/query.js b/apolloschurchapp/src/ui/ContentCardConnected/query.js
new file mode 100644
index 0000000..37255d5
--- /dev/null
+++ b/apolloschurchapp/src/ui/ContentCardConnected/query.js
@@ -0,0 +1,15 @@
+import gql from 'graphql-tag';
+import ApollosConfig from '@apollosproject/config';
+
+const GET_CONTENT_CARD = gql`
+  query getContentCard($contentId: ID!) {
+    node(id: $contentId) {
+      id
+      __typename
+      ...contentCardFragment
+    }
+  }
+  ${ApollosConfig.FRAGMENTS.CONTENT_CARD_FRAGMENT}
+`;
+
+export default GET_CONTENT_CARD;
diff --git a/apolloschurchapp/src/ui/FeedItemCard/FeedItemCard.stories.js b/apolloschurchapp/src/ui/FeedItemCard/FeedItemCard.stories.js
deleted file mode 100644
index 6336b1d..0000000
--- a/apolloschurchapp/src/ui/FeedItemCard/FeedItemCard.stories.js
+++ /dev/null
@@ -1,151 +0,0 @@
-import React from 'react';
-import { View } from 'react-native';
-import { storiesOf } from '@storybook/react-native';
-
-import FeedItemCard from '.';
-
-storiesOf('FeedItemCard', module)
-  .add('Default', () => {
-    const centered = {
-      justifyContent: 'center',
-      flex: 1,
-      backgroundColor: '#f7f7f7',
-    };
-
-    return (
-      <View style={centered}>
-        <FeedItemCard
-          title={'Promised Land'}
-          channelType={'Series'}
-          images={'https://picsum.photos/600/400/?random'}
-        />
-      </View>
-    );
-  })
-  .add('isLoading', () => {
-    const centered = {
-      justifyContent: 'center',
-      flex: 1,
-      backgroundColor: '#f7f7f7',
-    };
-
-    return (
-      <View style={centered}>
-        <FeedItemCard
-          title={'Promised Land'}
-          channelType={'Series'}
-          images={'https://picsum.photos/600/400/?random'}
-          isLoading
-        />
-      </View>
-    );
-  })
-  .add('With icon', () => {
-    const centered = {
-      justifyContent: 'center',
-      flex: 1,
-      backgroundColor: '#f7f7f7',
-    };
-    return (
-      <View style={centered}>
-        <FeedItemCard
-          title={'Promised Land'}
-          channelType={'Series'}
-          channelTypeIcon={'video'}
-          images={'https://picsum.photos/600/400/?random'}
-          backgroundColor={'salmon'}
-        />
-      </View>
-    );
-  })
-  .add('With dark backgroundColor', () => {
-    const centered = {
-      justifyContent: 'center',
-      flex: 1,
-      backgroundColor: '#f7f7f7',
-    };
-    return (
-      <View style={centered}>
-        <FeedItemCard
-          title={'Promised Land'}
-          channelType={'Series'}
-          images={'https://picsum.photos/600/400/?random'}
-          backgroundColor={'salmon'}
-          isLight={false}
-        />
-      </View>
-    );
-  })
-  .add('With isLight and light backgroundColor', () => {
-    const centered = {
-      justifyContent: 'center',
-      flex: 1,
-      backgroundColor: '#f7f7f7',
-    };
-    return (
-      <View style={centered}>
-        <FeedItemCard
-          title={'Promised Land'}
-          channelType={'Series'}
-          images={'https://picsum.photos/600/400/?random'}
-          backgroundColor={'papayawhip'}
-          isLight
-        />
-      </View>
-    );
-  });
-// .add('As liked', () => {
-//   const centered = {
-//     justifyContent: 'center',
-//     flex: 1,
-//     backgroundColor: '#f7f7f7',
-//   };
-//   return (
-//     <View style={centered}>
-//       <FeedItemCard
-//         title={'Promised Land'}
-//         category={'Series'}
-//         images={'https://picsum.photos/600/400/?random'}
-//         isLiked
-//       />
-//     </View>
-//   );
-// })
-// .add('As liked with backgroundColor', () => {
-//   const centered = {
-//     justifyContent: 'center',
-//     flex: 1,
-//     backgroundColor: '#f7f7f7',
-//   };
-//   return (
-//     <View style={centered}>
-//       <FeedItemCard
-//         title={'Promised Land'}
-//         category={'Series'}
-//         images={'https://picsum.photos/600/400/?random'}
-//         backgroundColor={'salmon'}
-//         isLight={false}
-//         isLiked
-//       />
-//     </View>
-//   );
-// })
-// .add('As liked with isLight and light backgroundColor', () => {
-//   const centered = {
-//     justifyContent: 'center',
-//     flex: 1,
-//     backgroundColor: '#f7f7f7',
-//   };
-//   return (
-//     <View style={centered}>
-//       <FeedItemCard
-//         title={'Promised Land'}
-//         category={'Series'}
-//         images={'https://picsum.photos/600/400/?random'}
-//         backgroundColor={'papayawhip'}
-//         isLight
-//         isLiked
-//       />
-//     </View>
-//   );
-// });
diff --git a/apolloschurchapp/src/ui/FeedItemCard/FeedItemCard.tests.js b/apolloschurchapp/src/ui/FeedItemCard/FeedItemCard.tests.js
deleted file mode 100644
index 9371bfe..0000000
--- a/apolloschurchapp/src/ui/FeedItemCard/FeedItemCard.tests.js
+++ /dev/null
@@ -1,146 +0,0 @@
-import React from 'react';
-import renderer from 'react-test-renderer';
-
-import Providers from 'apolloschurchapp/src/Providers';
-
-import FeedItemCard from '.';
-
-describe('the FeedItemCard component', () => {
-  it('should render', () => {
-    const tree = renderer.create(
-      <Providers>
-        <FeedItemCard
-          title={'Boom'}
-          channelType={'What'}
-          images={[
-            {
-              uri: 'https://picsum.photos/600/400/?random',
-              width: 600,
-              height: 400,
-            },
-          ]}
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render with an icon', () => {
-    const tree = renderer.create(
-      <Providers>
-        <FeedItemCard
-          title={'Boom'}
-          channelType={'What'}
-          channelTypeIcon={'play'}
-          images={[
-            {
-              uri: 'https://picsum.photos/600/400/?random',
-              width: 600,
-              height: 400,
-            },
-          ]}
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render with inverted (light) font colors', () => {
-    const tree = renderer.create(
-      <Providers>
-        <FeedItemCard
-          title={'Boom'}
-          channelType={'What'}
-          images={[
-            {
-              uri: 'https://picsum.photos/600/400/?random',
-              width: 600,
-              height: 400,
-            },
-          ]}
-          isLight={false}
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should accept a different backgroundColor', () => {
-    const tree = renderer.create(
-      <Providers>
-        <FeedItemCard
-          title={'Boom'}
-          channelType={'What'}
-          images={[
-            {
-              uri: 'https://picsum.photos/600/400/?random',
-              width: 600,
-              height: 400,
-            },
-          ]}
-          backgroundColor={'salmon'}
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render text correctly with isLight', () => {
-    const tree = renderer.create(
-      <Providers>
-        <FeedItemCard
-          title={'Boom'}
-          channelType={'What'}
-          images={[
-            {
-              uri: 'https://picsum.photos/600/400/?random',
-              width: 600,
-              height: 400,
-            },
-          ]}
-          isLight
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  // it('should render as liked', () => {
-  //   const tree = renderer.create(
-  //     <Providers>
-  //       <FeedItemCard
-  //         title={'Boom'}
-  //         category={'What'}
-  //         images={[
-  //           {
-  //             uri: 'https://picsum.photos/600/400/?random',
-  //             width: 600,
-  //             height: 400,
-  //           },
-  //         ]}
-  //         isLiked
-  //       />
-  //     </Providers>
-  //   );
-  //   expect(tree).toMatchSnapshot();
-  // });
-  it('should accept and render passed in styles', () => {
-    const cardDimensions = {
-      height: 400,
-      width: '92%',
-    };
-
-    const tree = renderer.create(
-      <Providers>
-        <FeedItemCard
-          title={'Boom'}
-          channelType={'What'}
-          images={[
-            {
-              uri: 'https://picsum.photos/600/400/?random',
-              width: 600,
-              height: 400,
-            },
-          ]}
-          style={cardDimensions}
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/ui/FeedItemCard/LikeButton.js b/apolloschurchapp/src/ui/FeedItemCard/LikeButton.js
deleted file mode 100644
index cdb41c7..0000000
--- a/apolloschurchapp/src/ui/FeedItemCard/LikeButton.js
+++ /dev/null
@@ -1,13 +0,0 @@
-import { TouchableOpacity } from 'react-native';
-import { compose, mapProps } from 'recompose';
-// import withToggleLike from '@data/likes/withToggleLike';
-
-const enhance = compose(
-  // withToggleLike,
-  mapProps(({ toggleLike, id, ...otherProps }) => ({
-    onPress: () => toggleLike(id),
-    ...otherProps,
-  }))
-);
-
-export default enhance(TouchableOpacity);
diff --git a/apolloschurchapp/src/ui/FeedItemCard/index.js b/apolloschurchapp/src/ui/FeedItemCard/index.js
deleted file mode 100644
index 8e8dd74..0000000
--- a/apolloschurchapp/src/ui/FeedItemCard/index.js
+++ /dev/null
@@ -1,92 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-import { compose, pure } from 'recompose';
-import { startCase, toLower } from 'lodash';
-
-import { withThemeMixin, withTheme } from 'apolloschurchapp/src/ui/theme';
-import Icon from 'apolloschurchapp/src/ui/Icon';
-import ChannelLabel from 'apolloschurchapp/src/ui/ChannelLabel';
-import GradientOverlayImage from 'apolloschurchapp/src/ui/GradientOverlayImage';
-import Card, { CardContent, CardActions } from 'apolloschurchapp/src/ui/Card';
-import { H3 } from 'apolloschurchapp/src/ui/typography';
-// import ConnectedImage from 'apolloschurchapp/src/ui/ConnectedImage';
-// import ProgressiveImage from 'apolloschurchapp/src/ui/ProgressiveImage';
-
-// import LikeButton from './LikeButton';
-
-const enhance = compose(
-  pure,
-  withThemeMixin(({ isLight }) => ({
-    type: isLight ? 'light' : 'dark',
-  })),
-  withTheme()
-);
-
-const FeedItemCard = enhance(
-  ({
-    images,
-    title,
-    channelType,
-    channelTypeIcon,
-    isLoading,
-    isLight,
-    isLiked,
-    backgroundColor,
-    theme,
-    id,
-    ...otherProps
-  }) => (
-    <Card isLoading={isLoading} cardColor={backgroundColor} {...otherProps}>
-      <GradientOverlayImage
-        isLoading={isLoading}
-        source={images}
-        overlayColor={backgroundColor}
-      />
-      <CardContent>
-        <H3 isLoading={isLoading}>{title}</H3>
-      </CardContent>
-      <CardActions>
-        <ChannelLabel
-          label={startCase(toLower(channelType))}
-          icon={channelTypeIcon}
-          isLoading={isLoading}
-          withFlex
-        />
-        <Icon
-          name={isLiked ? 'like-solid' : 'like'}
-          size={theme.helpers.rem(1.2)}
-          fill={theme.colors.text.primary}
-          isLoading={isLoading}
-        />
-      </CardActions>
-    </Card>
-  )
-);
-
-const sourcePropType = PropTypes.oneOfType([
-  PropTypes.arrayOf(
-    PropTypes.shape({
-      uri: PropTypes.string,
-    })
-  ),
-  PropTypes.string,
-]);
-
-FeedItemCard.propTypes = {
-  title: PropTypes.string.isRequired,
-  images: sourcePropType,
-  channelType: PropTypes.string,
-  channelTypeIcon: PropTypes.string,
-  isLoading: PropTypes.bool,
-  isLiked: PropTypes.bool,
-  isLight: PropTypes.bool,
-  backgroundColor: PropTypes.string,
-  style: PropTypes.any, // eslint-disable-line
-};
-
-FeedItemCard.defaultProps = {
-  isLight: true,
-  channelTypeIcon: null,
-};
-
-export default FeedItemCard;
diff --git a/apolloschurchapp/src/ui/FeedView/FeedView.stories.js b/apolloschurchapp/src/ui/FeedView/FeedView.stories.js
deleted file mode 100644
index e1f3cb6..0000000
--- a/apolloschurchapp/src/ui/FeedView/FeedView.stories.js
+++ /dev/null
@@ -1,63 +0,0 @@
-import React from 'react';
-import { storiesOf } from '@storybook/react-native';
-
-import FeedView from '.';
-
-storiesOf('FeedView', module).add('Example', () => (
-  <FeedView
-    content={[
-      {
-        node: {
-          id: '1',
-          title: "Will I get to shake Jesus' hand?",
-          coverImage: [
-            {
-              uri: 'https://picsum.photos/600/400/?random',
-              width: 600,
-              height: 400,
-            },
-          ],
-          theme: {
-            isLight: true,
-            colors: {
-              background: {
-                paper: '#fa8072',
-              },
-            },
-          },
-          parentChannel: {
-            id: '01',
-            name: 'eschatology',
-            iconName: 'like',
-          },
-        },
-      },
-      {
-        node: {
-          id: '2',
-          title: 'Where is the new Jerusalem anyways?',
-          coverImage: [
-            {
-              uri: 'https://picsum.photos/600/400/?random',
-              width: 600,
-              height: 400,
-            },
-          ],
-          theme: {
-            isLight: true,
-            colors: {
-              background: {
-                paper: '#e9967a',
-              },
-            },
-          },
-          parentChannel: {
-            id: '02',
-            name: 'eschatology',
-            iconName: 'like',
-          },
-        },
-      },
-    ]}
-  />
-));
diff --git a/apolloschurchapp/src/ui/FeedView/FeedView.tests.js b/apolloschurchapp/src/ui/FeedView/FeedView.tests.js
deleted file mode 100644
index ce1b3f5..0000000
--- a/apolloschurchapp/src/ui/FeedView/FeedView.tests.js
+++ /dev/null
@@ -1,147 +0,0 @@
-import React from 'react';
-import renderer from 'react-test-renderer';
-import { TouchableWithoutFeedback } from 'react-native';
-import { get } from 'lodash';
-
-import Providers from 'apolloschurchapp/src/Providers';
-import FeedItemCard from 'apolloschurchapp/src/ui/FeedItemCard';
-
-import FeedView from '.';
-
-describe('The FeedView component', () => {
-  it('renders correctly', () => {
-    const tree = renderer.create(
-      <Providers>
-        <FeedView
-          content={[
-            {
-              node: {
-                id: '1',
-                title: "Will I get to shake Jesus' hand?",
-                coverImage: [
-                  {
-                    uri: 'https://picsum.photos/600/400/?random',
-                    width: 600,
-                    height: 400,
-                  },
-                ],
-                theme: {
-                  isLight: true,
-                  colors: {
-                    background: {
-                      paper: '#fa8072',
-                    },
-                  },
-                },
-                parentChannel: {
-                  id: '01',
-                  name: 'eschatology',
-                  iconName: 'like',
-                },
-              },
-            },
-            {
-              node: {
-                id: '2',
-                title: 'Where is the new Jerusalem anyways?',
-                coverImage: [
-                  {
-                    uri: 'https://picsum.photos/600/400/?random',
-                    width: 600,
-                    height: 400,
-                  },
-                ],
-                theme: {
-                  isLight: true,
-                  colors: {
-                    background: {
-                      paper: '#e9967a',
-                    },
-                  },
-                },
-                parentChannel: {
-                  id: '02',
-                  name: 'eschatology',
-                  iconName: 'like',
-                },
-              },
-            },
-          ]}
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('renders empty state', () => {
-    const tree = renderer.create(
-      <Providers>
-        <FeedView isLoading content={[]} />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('handles a renderItem prop', () => {
-    const renderItem = (item) => {
-      const theItem = get(item, 'item', {});
-      return (
-        <TouchableWithoutFeedback>
-          <FeedItemCard
-            id={theItem.node.id}
-            title={theItem.node.title || theItem.node.name || ' '}
-            channelType={theItem.node.parentChannel.name}
-            channelTypeIcon={theItem.node.parentChannel.iconName}
-            images={theItem.node.coverImage.sources}
-            isLoading={theItem.node.isLoading}
-          />
-        </TouchableWithoutFeedback>
-      );
-    };
-
-    const tree = renderer.create(
-      <Providers>
-        <FeedView
-          isLoading
-          content={[
-            {
-              node: {
-                id: '1',
-                title: "Will I get to shake Jesus' hand?",
-                coverImage: [
-                  {
-                    uri: 'https://picsum.photos/600/400/?random',
-                    width: 600,
-                    height: 400,
-                  },
-                ],
-                theme: {
-                  isLight: true,
-                  colors: {
-                    background: {
-                      paper: '#fa8072',
-                    },
-                  },
-                },
-                parentChannel: {
-                  id: '01',
-                  name: 'eschatology',
-                  iconName: 'like',
-                },
-              },
-            },
-          ]}
-          renderItem={renderItem}
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('passes an onPressItem prop', () => {
-    const onPress = () => {};
-    const tree = renderer.create(
-      <Providers>
-        <FeedView isLoading content={[]} onPressItem={onPress} />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/ui/FeedView/index.js b/apolloschurchapp/src/ui/FeedView/index.js
deleted file mode 100644
index da91622..0000000
--- a/apolloschurchapp/src/ui/FeedView/index.js
+++ /dev/null
@@ -1,170 +0,0 @@
-import React, { Component } from 'react';
-import { FlatList, TouchableWithoutFeedback } from 'react-native';
-import PropTypes from 'prop-types';
-import { pure, compose, branch, withProps, defaultProps } from 'recompose';
-import { get } from 'lodash';
-
-import FeedItemCard from 'apolloschurchapp/src/ui/FeedItemCard';
-import { enhancer as mediaQuery } from 'apolloschurchapp/src/ui/MediaQuery';
-import { withTheme } from 'apolloschurchapp/src/ui/theme';
-import { ErrorCard } from 'apolloschurchapp/src/ui/Card';
-
-const StyledFlatList = compose(
-  withTheme(({ theme: { helpers: { verticalRhythm } } } = {}) => ({
-    contentContainerStyle: { paddingVertical: verticalRhythm(0.3125) }, // Android padding fix 😩
-  }))
-)(FlatList);
-
-class FeedView extends Component {
-  static propTypes = {
-    content: PropTypes.array, // eslint-disable-line
-    error: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),
-    fetchMore: PropTypes.func,
-    isLoading: PropTypes.bool,
-    keyExtractor: PropTypes.func,
-    ListEmptyComponent: PropTypes.func,
-    numColumns: PropTypes.number,
-    onEndReachedThreshold: PropTypes.number,
-    onPressItem: PropTypes.func,
-    refetch: PropTypes.func,
-    renderEmptyState: PropTypes.func,
-    renderItem: PropTypes.func,
-  };
-
-  static defaultProps = {
-    isLoading: false,
-    // renderItem: this.defaultFeedItemRenderer,
-    onEndReachedThreshold: 0.7,
-    keyExtractor: (item) => item && item.id,
-    content: [],
-    refetch: undefined,
-    fetchMore: undefined,
-  };
-
-  refetchHandler = ({ isLoading, refetch }) =>
-    refetch && ((...args) => !isLoading && refetch(...args));
-
-  fetchMoreHandler = ({ fetchMore, error, isLoading }) =>
-    fetchMore && ((...args) => !isLoading && !error && fetchMore(...args));
-
-  renderItem = ({ item }) => {
-    if (this.props.renderItem) {
-      return this.props.renderItem({ item });
-    }
-    return (
-      // These are all props of FeedItemCard but they do not have data coming
-      // back yet. So I moved them here for safe keeping.
-      // TODO: Move them back when the data is ready.
-      // backgroundColor={item.theme.colors.background.paper}
-      // isLight={item.theme.isLight}
-      // isLiked={item.isLiked}
-      <TouchableWithoutFeedback
-        onPress={() => this.props.onPressItem({ ...item })}
-      >
-        <FeedItemCard
-          id={get(item, 'id')}
-          title={get(item, 'title') || get(item, 'name') || ' '}
-          isLiked={get(item, 'isLiked')}
-          channelType={get(item, 'parentChannel.name')}
-          channelTypeIcon={get(item, 'parentChannel.iconName')}
-          images={get(item, 'coverImage.sources')}
-          isLoading={get(item, 'isLoading')}
-        />
-      </TouchableWithoutFeedback>
-    );
-  };
-
-  render() {
-    const {
-      content,
-      error,
-      fetchMore,
-      isLoading,
-      keyExtractor,
-      ListEmptyComponent,
-      numColumns,
-      onEndReachedThreshold,
-      refetch,
-      renderEmptyState,
-      renderItem,
-      ...otherProps
-    } = this.props;
-
-    return (
-      <StyledFlatList
-        {...otherProps}
-        data={content}
-        keyExtractor={keyExtractor}
-        ListEmptyComponent={
-          error && !isLoading && (!content || !content.length) ? (
-            <ErrorCard error={error} />
-          ) : (
-            ListEmptyComponent
-          )
-        }
-        numColumns={numColumns}
-        onEndReached={this.fetchMoreHandler({ fetchMore, error, isLoading })}
-        onEndReachedThreshold={onEndReachedThreshold}
-        onRefresh={this.refetchHandler({ isLoading, refetch })}
-        refreshing={isLoading}
-        renderItem={this.renderItem}
-      />
-    );
-  }
-}
-
-const defaultLoadingState = {
-  id: 'fakeId0',
-  isLoading: true,
-  title: '',
-  channelType: '',
-  coverImage: [],
-  theme: {
-    isLight: '',
-    colors: {
-      background: {
-        paper: '',
-      },
-    },
-  },
-  parentChannel: {
-    id: '',
-    name: '',
-  },
-};
-
-const generateLoadingStateData = (
-  numberOfItems = 1,
-  loadingStateObject = defaultLoadingState
-) => {
-  const itemData = () => ({ ...loadingStateObject });
-
-  const loadingStateData = [];
-
-  while (loadingStateData.length < numberOfItems) {
-    const newData = itemData();
-    newData.id = `fakeId${loadingStateData.length}`;
-    loadingStateData.push(newData);
-  }
-
-  return loadingStateData;
-};
-
-const enhance = compose(
-  pure,
-  branch(
-    ({ isLoading, content }) => isLoading && !content.length,
-    withProps(({ loadingStateObject }) => ({
-      isLoading: true,
-      content: generateLoadingStateData(10, loadingStateObject),
-      fetchMore: () => {},
-    }))
-  ),
-  mediaQuery(
-    ({ md }) => ({ maxWidth: md }),
-    defaultProps({ numColumns: 1 }),
-    defaultProps({ numColumns: 2 })
-  )
-);
-
-export default enhance(FeedView);
diff --git a/apolloschurchapp/src/ui/FlexedView/FlexedView.stories.js b/apolloschurchapp/src/ui/FlexedView/FlexedView.stories.js
deleted file mode 100644
index 32290a0..0000000
--- a/apolloschurchapp/src/ui/FlexedView/FlexedView.stories.js
+++ /dev/null
@@ -1,21 +0,0 @@
-import React from 'react';
-import { storiesOf } from '@storybook/react-native';
-
-import { H1 } from 'apolloschurchapp/src/ui/typography';
-import styled from 'apolloschurchapp/src/ui/styled';
-
-import FlexedView from '.';
-
-storiesOf('FlexedView', module).add('Example', () => {
-  const FlexedSalmonView = styled({
-    backgroundColor: 'salmon',
-  })(FlexedView);
-
-  return (
-    <FlexedView>
-      <FlexedSalmonView>
-        <H1>This box is in a FlexedView</H1>
-      </FlexedSalmonView>
-    </FlexedView>
-  );
-});
diff --git a/apolloschurchapp/src/ui/FlexedView/FlexedView.tests.js b/apolloschurchapp/src/ui/FlexedView/FlexedView.tests.js
deleted file mode 100644
index b248969..0000000
--- a/apolloschurchapp/src/ui/FlexedView/FlexedView.tests.js
+++ /dev/null
@@ -1,17 +0,0 @@
-import React from 'react';
-import renderer from 'react-test-renderer';
-
-import Providers from 'apolloschurchapp/src/Providers';
-
-import FlexedView from '.';
-
-describe('the FlexedView component', () => {
-  it('should render', () => {
-    const tree = renderer.create(
-      <Providers>
-        <FlexedView />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/ui/FlexedView/index.js b/apolloschurchapp/src/ui/FlexedView/index.js
deleted file mode 100644
index e1fe7aa..0000000
--- a/apolloschurchapp/src/ui/FlexedView/index.js
+++ /dev/null
@@ -1,12 +0,0 @@
-import { View } from 'react-native';
-
-import styled from 'apolloschurchapp/src/ui/styled';
-
-const FlexedView = styled(
-  {
-    flex: 1,
-  },
-  'FlexedView'
-)(View);
-
-export default FlexedView;
diff --git a/apolloschurchapp/src/ui/GradientOverlayImage/GradientOverlayImage.stories.js b/apolloschurchapp/src/ui/GradientOverlayImage/GradientOverlayImage.stories.js
deleted file mode 100644
index b8dd80b..0000000
--- a/apolloschurchapp/src/ui/GradientOverlayImage/GradientOverlayImage.stories.js
+++ /dev/null
@@ -1,15 +0,0 @@
-import React from 'react';
-import { storiesOf } from '@storybook/react-native';
-
-import GradientOverlayImage from '.';
-
-storiesOf('GradientOverlayImage', module)
-  .add('Default', () => (
-    <GradientOverlayImage source={'https://picsum.photos/600/400/?random'} />
-  ))
-  .add('With Overlay', () => (
-    <GradientOverlayImage
-      source={'https://picsum.photos/600/400/?random'}
-      overlayColor={'salmon'}
-    />
-  ));
diff --git a/apolloschurchapp/src/ui/GradientOverlayImage/GradientOverlayImage.tests.js b/apolloschurchapp/src/ui/GradientOverlayImage/GradientOverlayImage.tests.js
deleted file mode 100644
index 0a86354..0000000
--- a/apolloschurchapp/src/ui/GradientOverlayImage/GradientOverlayImage.tests.js
+++ /dev/null
@@ -1,42 +0,0 @@
-import React from 'react';
-import renderer from 'react-test-renderer';
-
-import Providers from 'apolloschurchapp/src/Providers';
-
-import GradientOverlayImage from '.';
-
-describe('the GradientOverlayImage component', () => {
-  it('should render', () => {
-    const tree = renderer.create(
-      <Providers>
-        <GradientOverlayImage
-          source={[
-            {
-              uri: 'https://picsum.photos/600/400/?random',
-              width: 600,
-              height: 400,
-            },
-          ]}
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render with an overlayColor', () => {
-    const tree = renderer.create(
-      <Providers>
-        <GradientOverlayImage
-          source={[
-            {
-              uri: 'https://picsum.photos/600/400/?random',
-              width: 600,
-              height: 400,
-            },
-          ]}
-          overlayColor={'salmon'}
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/ui/GradientOverlayImage/index.js b/apolloschurchapp/src/ui/GradientOverlayImage/index.js
deleted file mode 100644
index 01be2b1..0000000
--- a/apolloschurchapp/src/ui/GradientOverlayImage/index.js
+++ /dev/null
@@ -1,101 +0,0 @@
-import React from 'react';
-import { StyleSheet, View } from 'react-native';
-import LinearGradient from 'react-native-linear-gradient';
-import PropTypes from 'prop-types';
-import { pure } from 'recompose';
-import Color from 'color';
-
-import styled from 'apolloschurchapp/src/ui/styled';
-import ConnectedImage from 'apolloschurchapp/src/ui/ConnectedImage';
-
-const Overlay = styled(StyleSheet.absoluteFillObject)(LinearGradient);
-
-const getGradientValues = (overlayColor) => {
-  const values = {
-    colors: [
-      `${Color(overlayColor)
-        .fade(1)
-        .string()}`,
-      overlayColor,
-    ],
-    start: { x: 0, y: 0 },
-    end: { x: 0, y: 1 },
-    locations: [0.3, 1],
-  };
-
-  return values;
-};
-
-const Container = styled(({ theme }) => ({
-  width: '100%',
-  backgroundColor: theme.colors.background.inactive,
-}))(View);
-
-const DefaultImageComponent = styled({
-  width: '100%',
-  resizeMode: 'cover',
-})(ConnectedImage);
-
-const NoImagePlaceholder = styled(({ theme }) => ({
-  width: '100%',
-  aspectRatio: 1,
-  backgroundColor: theme.colors.background.inactive,
-}))(View);
-
-const GradientOverlayImage = pure(
-  ({
-    source: imageSource,
-    overlayColor,
-    ImageComponent: ComponentProp,
-    isLoading,
-    ...otherProps
-  }) => {
-    const Component = ComponentProp || DefaultImageComponent;
-    return (
-      <Container>
-        {imageSource || isLoading ? (
-          <Component
-            source={imageSource}
-            isLoading={isLoading}
-            {...otherProps}
-          />
-        ) : (
-          <NoImagePlaceholder />
-        )}
-        {overlayColor ? (
-          <Overlay
-            colors={getGradientValues(overlayColor).colors}
-            start={getGradientValues(overlayColor).start}
-            end={getGradientValues(overlayColor).end}
-            locations={getGradientValues(overlayColor).locations}
-          />
-        ) : null}
-      </Container>
-    );
-  }
-);
-
-const source = PropTypes.oneOfType([
-  PropTypes.arrayOf(
-    PropTypes.shape({
-      uri: PropTypes.string,
-      label: PropTypes.string,
-      width: PropTypes.number,
-      height: PropTypes.number,
-    })
-  ),
-  PropTypes.string,
-]);
-
-GradientOverlayImage.propTypes = {
-  source,
-  overlayColor: PropTypes.string,
-  ImageComponent: PropTypes.func,
-  maintainAspectRatio: PropTypes.bool,
-};
-
-GradientOverlayImage.defaultProps = {
-  maintainAspectRatio: true,
-};
-
-export default GradientOverlayImage;
diff --git a/apolloschurchapp/src/ui/HTMLView/HTMLView.stories.js b/apolloschurchapp/src/ui/HTMLView/HTMLView.stories.js
deleted file mode 100644
index 0d69e14..0000000
--- a/apolloschurchapp/src/ui/HTMLView/HTMLView.stories.js
+++ /dev/null
@@ -1,21 +0,0 @@
-import React from 'react';
-import { ScrollView } from 'react-native';
-import { storiesOf } from '@storybook/react-native';
-
-import HTMLView from '.';
-
-storiesOf('HTMLView', module)
-  .add('Example', () => (
-    <ScrollView>
-      <HTMLView>
-        {
-          "<p>I sat on my couch next to my high school <a href='https://newspringfuse.com/groups' target='_blank'>Fuse Group</a>, silently fuming at their inability to put their phones down during Bible study. Finally, I spoke up, teasing one of the girls in a tone that clearly said, &ldquo;I&rsquo;m not actually kidding.&rdquo;&nbsp;</p>\n\n<p>A few days later, I was in the car with my sister, and as I sat in the passenger seat responding to emails, I heard her laugh and say, &ldquo;You always mumble when you are typing. Stop doing that.&rdquo;&nbsp;</p>\n\n<p>&ldquo;Sorry,&rdquo; I responded. &ldquo;I just don&rsquo;t want people to think I&rsquo;m ignoring them when I&rsquo;m typing.&rdquo;</p>\n\n<p>But the truth is, I am ignoring them! In my head, this behavior is totally acceptable. I tell myself I&rsquo;m tending to my priorities in order, and in doing so, I send a message to the person in front of me that she is of lesser importance.</p>\n\n<blockquote>\n<p>My phone is the primary outlet that distracts me from people who need my attention.</p>\n</blockquote>\n\n<p>I quickly get frustrated when I am the one on the outside, but how often to I shut others out during my own social media binges or email frenzies? Just like my girls, I&rsquo;m learning that my phone is the primary outlet that distracts me from people who need my attention.</p>\n\n<h3>Why Being Present Matters</h3>\n\n<p>There is nothing wrong with using our phones &mdash; as long as we remember that the best investment we can make is to invest in our relationships with Jesus and each other. We were created for <a href='http://newspring.cc/community' target='_blank'>community</a> by God, who exists in community as Father, Son, and Holy Spirit (John 1:1-2, Genesis 2:18).&nbsp;</p>\n\n<p>Our phones help us stay connected, but they are not the foundation of all connection. If we&rsquo;re honest, our phones are much quicker to distract and disengage us from the people right in front of us.&nbsp;</p>\n\n<p>Jesus said loving God and loving others is greatest of all God&rsquo;s commandments (Matthew 22:38-40). And, after trying everything the world had to offer, King Solomon reminded his people that their relationships with God and others are the only things that really matter (Ecclesiastes 2:24-26, Ecclesiastes 3:9).&nbsp;</p>\n\n<blockquote>\n<p>Greater love has no one than this: to lay down one&rsquo;s phone for one&rsquo;s loved ones.</p>\n</blockquote>\n\n<p>So the next time we feel like we have to text back immediately or tweet before someone else does, consider:&nbsp;</p>\n\n<ul>\n\t<li>Am I putting others before myself right now?</li>\n\t<li>How can I love the people around me if I&rsquo;m not even paying attention to them?</li>\n\t<li>What if Jesus wants to speak through me, but I&rsquo;ve got my nose stuck in my phone?&nbsp;</li>\n</ul>\n\n<p>The world won&rsquo;t implode if we don&rsquo;t reply to every text or email immediately. And that Instagram picture doesn&rsquo;t need to go up ASAP. If it&rsquo;s already been a week between posts, what&rsquo;s a few more hours? We love everyone better &mdash; our friends to our coworkers to our social media followers &mdash; when we give them the gift of our full attention.&nbsp;</p>\n\n<p>I can almost hear Jesus saying, &ldquo;Greater love has no one than this: to lay down one&rsquo;s phone for one&rsquo;s loved ones&rdquo;&nbsp; (John 15:13).&nbsp;</p>\n\n<h3>Four Ways To Stay Away From Your Phone And Be Intentionally Present</h3>\n\n<p><a href='http://newspring.cc/christmas' target='_blank'>This holiday season</a>, we will have more opportunities to be around friends and family than usual. So let&rsquo;s make the most of each minute. The following are some tips can help us all be a little more present.&nbsp;&nbsp;</p>\n\n<ol>\n\t<li>Turn your phone off, leave it in the car, or put it in airplane mode. Habitual notification checks can take a break.</li>\n\t<li>Talk about something other than yourself. Ask someone else about their life (job, school, kids).</li>\n\t<li>Look for opportunities to encourage someone. Ask the Holy Spirit to speak through you and help you love people.</li>\n\t<li>Ask Jesus to keep your heart interested and engaged in what really matters. He wants to help!</li>\n</ol>\n\n<p>Intentionally taking advantage of time with loved ones sometimes does require sacrificing our own immediate desires or comforts, but that&rsquo;s what we are commanded to do (Philippians 2:3).&nbsp;</p>\n\n<p>Take pictures, but don&rsquo;t let the only memory be a digital one. The positive outcome of interactions should be more than Instagram likes. Unplug from social media, choose to be present, and you will be surprised at the good it does for your heart and the hearts of those around you.&nbsp;</p>"
-        }
-      </HTMLView>
-    </ScrollView>
-  ))
-  .add('isLoading', () => (
-    <ScrollView>
-      <HTMLView isLoading />
-    </ScrollView>
-  ));
diff --git a/apolloschurchapp/src/ui/HTMLView/HTMLView.tests.js b/apolloschurchapp/src/ui/HTMLView/HTMLView.tests.js
deleted file mode 100644
index a0eb6ec..0000000
--- a/apolloschurchapp/src/ui/HTMLView/HTMLView.tests.js
+++ /dev/null
@@ -1,191 +0,0 @@
-import React from 'react';
-import renderer from 'react-test-renderer';
-
-import Providers from 'apolloschurchapp/src/Providers';
-
-import HTMLView from '.';
-
-describe('the HTMLView component', () => {
-  it('should render an H1', () => {
-    const tree = renderer.create(
-      <Providers>
-        <HTMLView>{'<h1>Testings</h1>'}</HTMLView>
-      </Providers>
-    );
-
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render an H2', () => {
-    const tree = renderer.create(
-      <Providers>
-        <HTMLView>{'<h2>Testings</h2>'}</HTMLView>
-      </Providers>
-    );
-
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render an H3', () => {
-    const tree = renderer.create(
-      <Providers>
-        <HTMLView>{'<h3>Testings</h3>'}</HTMLView>
-      </Providers>
-    );
-
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render an H4', () => {
-    const tree = renderer.create(
-      <Providers>
-        <HTMLView>{'<h4>Testings</h4>'}</HTMLView>
-      </Providers>
-    );
-
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render an H5', () => {
-    const tree = renderer.create(
-      <Providers>
-        <HTMLView>{'<h5>Testings</h5>'}</HTMLView>
-      </Providers>
-    );
-
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render an H6', () => {
-    const tree = renderer.create(
-      <Providers>
-        <HTMLView>{'<h6>Testings</h6>'}</HTMLView>
-      </Providers>
-    );
-
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render a paragraph', () => {
-    const tree = renderer.create(
-      <Providers>
-        <HTMLView>{'<p>Testings</p>'}</HTMLView>
-      </Providers>
-    );
-
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render italic text', () => {
-    const tree = renderer.create(
-      <Providers>
-        <HTMLView>{'<p><em>Testings</em></p>'}</HTMLView>
-      </Providers>
-    );
-
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render bold text', () => {
-    const tree = renderer.create(
-      <Providers>
-        <HTMLView>{'<p><strong>Testings</strong></p>'}</HTMLView>
-      </Providers>
-    );
-
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render a block quote', () => {
-    const tree = renderer.create(
-      <Providers>
-        <HTMLView>
-          {'<p>Testings</p><blockquote>Testings</blockquote>'}
-        </HTMLView>
-      </Providers>
-    );
-
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render a list', () => {
-    const tree = renderer.create(
-      <Providers>
-        <HTMLView>{'<ul><li>Testings</li><li>Testings</li></ul>'}</HTMLView>
-      </Providers>
-    );
-
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render a link', () => {
-    const tree = renderer.create(
-      <Providers>
-        <HTMLView>
-          {'<p>Testings <a href="http://wwww.google.com">Google</a></p>'}
-        </HTMLView>
-      </Providers>
-    );
-
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render handle relative links', () => {
-    const tree = renderer.create(
-      <Providers>
-        <HTMLView>
-          {'<p>Testings <a href="//google.com">Google</a></p>'}
-        </HTMLView>
-      </Providers>
-    );
-
-    expect(tree).toMatchSnapshot();
-  });
-  it('strips out badly formatted links', () => {
-    const tree = renderer.create(
-      <Providers>
-        <HTMLView>{"<p><a href='{page_536525}'>Bad link</a></p>"}</HTMLView>
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render an image', () => {
-    const tree = renderer.create(
-      <Providers>
-        <HTMLView>
-          {'<img src="https://placeholdit.co/i/150x150?bg=eeeeee&fc=577084" />'}
-        </HTMLView>
-      </Providers>
-    );
-
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render a line break (br)', () => {
-    const tree = renderer.create(
-      <Providers>
-        <HTMLView>{'<p>Testings</p><br>'}</HTMLView>
-      </Providers>
-    );
-
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render a loading state', () => {
-    const tree = renderer.create(
-      <Providers>
-        <HTMLView isLoading />
-      </Providers>
-    );
-
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render example HTML', () => {
-    const tree = renderer.create(
-      <Providers>
-        <HTMLView>
-          {
-            "<p>I sat on my couch next to my high school <a href='https://newspringfuse.com/groups' target='_blank'>Fuse Group</a>, silently fuming at their inability to put their phones down during Bible study. Finally, I spoke up, teasing one of the girls in a tone that clearly said, &ldquo;I&rsquo;m not actually kidding.&rdquo;&nbsp;</p>\n\n<p>A few days later, I was in the car with my sister, and as I sat in the passenger seat responding to emails, I heard her laugh and say, &ldquo;You always mumble when you are typing. Stop doing that.&rdquo;&nbsp;</p>\n\n<p>&ldquo;Sorry,&rdquo; I responded. &ldquo;I just don&rsquo;t want people to think I&rsquo;m ignoring them when I&rsquo;m typing.&rdquo;</p>\n\n<p>But the truth is, I am ignoring them! In my head, this behavior is totally acceptable. I tell myself I&rsquo;m tending to my priorities in order, and in doing so, I send a message to the person in front of me that she is of lesser importance.</p>\n\n<blockquote>\n<p>My phone is the primary outlet that distracts me from people who need my attention.</p>\n</blockquote>\n\n<p>I quickly get frustrated when I am the one on the outside, but how often to I shut others out during my own social media binges or email frenzies? Just like my girls, I&rsquo;m learning that my phone is the primary outlet that distracts me from people who need my attention.</p>\n\n<h3>Why Being Present Matters</h3>\n\n<p>There is nothing wrong with using our phones &mdash; as long as we remember that the best investment we can make is to invest in our relationships with Jesus and each other. We were created for <a href='http://newspring.cc/community' target='_blank'>community</a> by God, who exists in community as Father, Son, and Holy Spirit (John 1:1-2, Genesis 2:18).&nbsp;</p>\n\n<p>Our phones help us stay connected, but they are not the foundation of all connection. If we&rsquo;re honest, our phones are much quicker to distract and disengage us from the people right in front of us.&nbsp;</p>\n\n<p>Jesus said loving God and loving others is greatest of all God&rsquo;s commandments (Matthew 22:38-40). And, after trying everything the world had to offer, King Solomon reminded his people that their relationships with God and others are the only things that really matter (Ecclesiastes 2:24-26, Ecclesiastes 3:9).&nbsp;</p>\n\n<blockquote>\n<p>Greater love has no one than this: to lay down one&rsquo;s phone for one&rsquo;s loved ones.</p>\n</blockquote>\n\n<p>So the next time we feel like we have to text back immediately or tweet before someone else does, consider:&nbsp;</p>\n\n<ul>\n\t<li>Am I putting others before myself right now?</li>\n\t<li>How can I love the people around me if I&rsquo;m not even paying attention to them?</li>\n\t<li>What if Jesus wants to speak through me, but I&rsquo;ve got my nose stuck in my phone?&nbsp;</li>\n</ul>\n\n<p>The world won&rsquo;t implode if we don&rsquo;t reply to every text or email immediately. And that Instagram picture doesn&rsquo;t need to go up ASAP. If it&rsquo;s already been a week between posts, what&rsquo;s a few more hours? We love everyone better &mdash; our friends to our coworkers to our social media followers &mdash; when we give them the gift of our full attention.&nbsp;</p>\n\n<p>I can almost hear Jesus saying, &ldquo;Greater love has no one than this: to lay down one&rsquo;s phone for one&rsquo;s loved ones&rdquo;&nbsp; (John 15:13).&nbsp;</p>\n\n<h3>Four Ways To Stay Away From Your Phone And Be Intentionally Present</h3>\n\n<p><a href='http://newspring.cc/christmas' target='_blank'>This holiday season</a>, we will have more opportunities to be around friends and family than usual. So let&rsquo;s make the most of each minute. The following are some tips can help us all be a little more present.&nbsp;&nbsp;</p>\n\n<ol>\n\t<li>Turn your phone off, leave it in the car, or put it in airplane mode. Habitual notification checks can take a break.</li>\n\t<li>Talk about something other than yourself. Ask someone else about their life (job, school, kids).</li>\n\t<li>Look for opportunities to encourage someone. Ask the Holy Spirit to speak through you and help you love people.</li>\n\t<li>Ask Jesus to keep your heart interested and engaged in what really matters. He wants to help!</li>\n</ol>\n\n<p>Intentionally taking advantage of time with loved ones sometimes does require sacrificing our own immediate desires or comforts, but that&rsquo;s what we are commanded to do (Philippians 2:3).&nbsp;</p>\n\n<p>Take pictures, but don&rsquo;t let the only memory be a digital one. The positive outcome of interactions should be more than Instagram likes. Unplug from social media, choose to be present, and you will be surprised at the good it does for your heart and the hearts of those around you.</p>"
-          }
-        </HTMLView>
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should accept an alternative render', () => {
-    const testRenderer = jest.fn();
-    renderer.create(
-      <Providers>
-        <HTMLView renderer={testRenderer}>{'<p>Testings</p>'}</HTMLView>
-      </Providers>
-    );
-
-    expect(testRenderer).toBeCalled();
-  });
-});
diff --git a/apolloschurchapp/src/ui/HTMLView/defaultRenderer.js b/apolloschurchapp/src/ui/HTMLView/defaultRenderer.js
deleted file mode 100644
index 6e17c65..0000000
--- a/apolloschurchapp/src/ui/HTMLView/defaultRenderer.js
+++ /dev/null
@@ -1,128 +0,0 @@
-import React, { Children } from 'react';
-import { Text, Linking } from 'react-native';
-import { decodeHTML } from 'entities';
-
-import {
-  BodyText,
-  H1,
-  H2,
-  H3,
-  H4,
-  H5,
-  H6,
-  Paragraph,
-  BlockQuote,
-  BulletListItem,
-} from 'apolloschurchapp/src/ui/typography';
-import { ButtonLink } from 'apolloschurchapp/src/ui/Button';
-import ConnectedImage from 'apolloschurchapp/src/ui/ConnectedImage';
-
-const LINE_BREAK = '\n';
-const TEXT_TYPES_THAT_SHOULD_WRAP = [Text, BodyText, ButtonLink];
-
-export const wrapTextChildren = (children, Component = BodyText) => {
-  const newChildren = [];
-  let currentTextChildren = [];
-  Children.toArray(children).forEach((child, i) => {
-    if (TEXT_TYPES_THAT_SHOULD_WRAP.includes(child.type)) {
-      currentTextChildren.push(child);
-    } else {
-      if (currentTextChildren.length) {
-        newChildren.push(
-          // eslint-disable-next-line
-          <Component key={`composed-children-${i}`}>
-            {currentTextChildren}
-          </Component>
-        );
-        currentTextChildren = [];
-      }
-      newChildren.push(child);
-    }
-  });
-  if (currentTextChildren.length) {
-    newChildren.push(
-      <Component key="composed-children">{currentTextChildren}</Component>
-    );
-  }
-  return newChildren;
-};
-
-const defaultRenderer = (node, { children }) => {
-  if (node.type === 'text' && node.data && node.data.trim()) {
-    const text = decodeHTML(node.data);
-    if (!node.parent) {
-      return (
-        <Paragraph>
-          <BodyText>{text}</BodyText>
-        </Paragraph>
-      );
-    }
-    return <Text>{text}</Text>;
-  }
-
-  switch (node.name) {
-    case 'p':
-      return <Paragraph>{wrapTextChildren(children)}</Paragraph>;
-    case 'strong':
-      return <BodyText bold>{children}</BodyText>;
-    case 'em':
-      return <BodyText italic>{children}</BodyText>;
-    case 'blockquote':
-      return <BlockQuote>{wrapTextChildren(children, Text)}</BlockQuote>;
-    case 'h1':
-      return <H1 padded>{wrapTextChildren(children, Text)}</H1>;
-    case 'h2':
-      return <H2 padded>{wrapTextChildren(children, Text)}</H2>;
-    case 'h3':
-      return <H3 padded>{wrapTextChildren(children, Text)}</H3>;
-    case 'h4':
-      return <H4 padded>{wrapTextChildren(children, Text)}</H4>;
-    case 'h5':
-      return <H5 padded>{wrapTextChildren(children, Text)}</H5>;
-    case 'h6':
-      return <H6 padded>{wrapTextChildren(children, Text)}</H6>;
-    case 'ul':
-      return <Paragraph>{children}</Paragraph>;
-    case 'li':
-      return <BulletListItem>{wrapTextChildren(children)}</BulletListItem>;
-    case 'a': {
-      let url = node.attribs && node.attribs.href;
-      url = decodeHTML(url);
-
-      if (url && url.startsWith('//')) {
-        url = `http:${url}`;
-      }
-      if (!url.startsWith('http')) {
-        // we can't currently handle non web-links, so just return regular text instead:
-        return children;
-      }
-      const onPress = () => Linking.openURL(url);
-      if (url) {
-        return <ButtonLink onPress={onPress}>{children}</ButtonLink>;
-      }
-    }
-    /* ignoring fallthrough on the next line because of the conditional return above,
-     * so we handle the edge-case of an <a> tag used w/o a href
-     */
-    case 'img': {
-      const source = {
-        url: node.attribs.src,
-      };
-
-      const imgStyles = {
-        resizeMode: 'contain',
-        width: '100%',
-      };
-
-      return (
-        <ConnectedImage maintainAspectRatio source={source} style={imgStyles} />
-      );
-    }
-    case 'br':
-      return <BodyText>{LINE_BREAK}</BodyText>;
-    default:
-      return children;
-  }
-};
-
-export default defaultRenderer;
diff --git a/apolloschurchapp/src/ui/HTMLView/index.js b/apolloschurchapp/src/ui/HTMLView/index.js
deleted file mode 100644
index ba9cc7c..0000000
--- a/apolloschurchapp/src/ui/HTMLView/index.js
+++ /dev/null
@@ -1,75 +0,0 @@
-import React, { PureComponent, cloneElement } from 'react';
-import PropTypes from 'prop-types';
-import { View } from 'react-native';
-import { Parser, DomHandler } from 'htmlparser2';
-
-import { Paragraph as ParagraphPlaceholder } from 'apolloschurchapp/src/ui/Placeholder';
-
-import defaultRenderer from './defaultRenderer';
-
-class HTMLView extends PureComponent {
-  static propTypes = {
-    children: PropTypes.string,
-    renderer: PropTypes.func,
-    isLoading: PropTypes.bool,
-  };
-
-  static defaultProps = {
-    renderer: defaultRenderer,
-  };
-
-  constructor(...args) {
-    super(...args);
-    this.parser = new Parser(
-      new DomHandler(
-        (err, dom) => {
-          this.parsed = this.renderDom(dom);
-        },
-        { normalizeWhitespace: true }
-      )
-    );
-    if (this.props.children) this.parse(this.props.children);
-  }
-
-  componentWillUpdate(props) {
-    this.parse(props.children);
-  }
-
-  parse(html = '') {
-    this.parser.write(html);
-    this.parser.done();
-  }
-
-  renderDom(dom) {
-    return dom
-      .map((node, index) => {
-        let children = [];
-        if (node.children) children = this.renderDom(node.children);
-
-        let renderedNode = this.props.renderer(node, { children });
-        if (
-          !renderedNode &&
-          renderedNode !== null &&
-          this.props.renderer !== defaultRenderer
-        ) {
-          renderedNode = defaultRenderer(node, { children });
-        }
-
-        if (renderedNode && !Array.isArray(renderedNode)) {
-          renderedNode = cloneElement(renderedNode, { key: index });
-        }
-        return renderedNode;
-      })
-      .filter((e) => e !== undefined);
-  }
-
-  render() {
-    return (
-      <ParagraphPlaceholder lineNumber={8} onReady={!this.props.isLoading}>
-        <View>{this.parsed}</View>
-      </ParagraphPlaceholder>
-    );
-  }
-}
-
-export default HTMLView;
diff --git a/apolloschurchapp/src/ui/HorizontalContentCardConnected/horizontalContentCardComponentMapper.js b/apolloschurchapp/src/ui/HorizontalContentCardConnected/horizontalContentCardComponentMapper.js
new file mode 100644
index 0000000..433b143
--- /dev/null
+++ b/apolloschurchapp/src/ui/HorizontalContentCardConnected/horizontalContentCardComponentMapper.js
@@ -0,0 +1,32 @@
+import React from 'react';
+import { get } from 'lodash';
+import PropTypes from 'prop-types';
+
+import {
+  HorizontalDefaultCard,
+  HorizontalHighlightCard,
+} from '@apollosproject/ui-kit';
+
+const horizontalContentCardComponentMapper = ({
+  title,
+  hyphenatedTitle,
+  ...props
+}) => {
+  // map typename to the the card we want to render.
+  switch (get(props, '__typename')) {
+    case 'MediaContentItem':
+    case 'WeekendContentItem':
+    case 'ContentSeriesContentItem':
+    case 'DevotionalContentItem':
+      return <HorizontalHighlightCard title={hyphenatedTitle} {...props} />;
+    default:
+      return <HorizontalDefaultCard title={title} {...props} />;
+  }
+};
+
+horizontalContentCardComponentMapper.propTypes = {
+  hyphenatedTitle: PropTypes.string,
+  title: PropTypes.string,
+};
+
+export default horizontalContentCardComponentMapper;
diff --git a/apolloschurchapp/src/ui/HorizontalContentCardConnected/index.js b/apolloschurchapp/src/ui/HorizontalContentCardConnected/index.js
new file mode 100644
index 0000000..c0a38bc
--- /dev/null
+++ b/apolloschurchapp/src/ui/HorizontalContentCardConnected/index.js
@@ -0,0 +1,29 @@
+import React, { memo } from 'react';
+import PropTypes from 'prop-types';
+
+import ContentCardConnected from '../ContentCardConnected';
+
+import horizontalContentCardComponentMapper from './horizontalContentCardComponentMapper';
+
+const HorizontalContentCardConnected = memo(
+  ({ Component, isLoading, ...otherProps }) => (
+    <ContentCardConnected
+      Component={Component}
+      isLoading={isLoading}
+      {...otherProps}
+    />
+  )
+);
+
+HorizontalContentCardConnected.propTypes = {
+  Component: PropTypes.func,
+  isLoading: PropTypes.bool,
+};
+
+HorizontalContentCardConnected.defaultProps = {
+  Component: horizontalContentCardComponentMapper,
+};
+
+HorizontalContentCardConnected.displayName = 'HorizontalContentCardConnected';
+
+export default HorizontalContentCardConnected;
diff --git a/apolloschurchapp/src/ui/HorizontalTileFeed/HorizontalTileFeed.stories.js b/apolloschurchapp/src/ui/HorizontalTileFeed/HorizontalTileFeed.stories.js
deleted file mode 100644
index 8ebfe1e..0000000
--- a/apolloschurchapp/src/ui/HorizontalTileFeed/HorizontalTileFeed.stories.js
+++ /dev/null
@@ -1,141 +0,0 @@
-import React from 'react';
-import { View } from 'react-native';
-import { storiesOf } from '@storybook/react-native';
-
-import styled from 'apolloschurchapp/src/ui/styled';
-import CardTile from 'apolloschurchapp/src/ui/CardTile';
-import TileImage from 'apolloschurchapp/src/ui/TileImage';
-
-import HorizontalTileFeed from '.';
-
-storiesOf('HorizontalTileFeed', module)
-  .add('With CardTile', () => {
-    const CardTileData = [
-      {
-        node: {
-          id: 'fakeId0',
-          title: 'Why Jesus is Timeless',
-        },
-      },
-      {
-        node: {
-          id: 'fakeId1',
-          title: 'Tall Hat Tales',
-        },
-      },
-    ];
-
-    const loadingStateObject = {
-      node: {
-        id: 'fakeId0',
-        title: '',
-        isLoading: true,
-      },
-    };
-
-    const renderCardTile = (
-      { item, index } //eslint-disable-line
-    ) => (
-      <CardTile
-        number={index + 1}
-        title={item.node.title}
-        isLoading={item.node.isLoading}
-      />
-    );
-
-    return (
-      <View>
-        <HorizontalTileFeed
-          content={CardTileData}
-          renderItem={renderCardTile}
-          loadingStateObject={loadingStateObject}
-        />
-      </View>
-    );
-  })
-  .add('CardTile Skeleton', () => {
-    const loadingStateObject = {
-      node: {
-        id: 'fakeId0',
-        title: '',
-        isLoading: true,
-      },
-    };
-
-    const renderCardTile = (
-      { item, index } //eslint-disable-line
-    ) => (
-      <CardTile
-        number={index + 1}
-        title={item.node.title}
-        isLoading={item.node.isLoading}
-      />
-    );
-
-    return (
-      <View>
-        <HorizontalTileFeed
-          content={[]}
-          renderItem={renderCardTile}
-          loadingStateObject={loadingStateObject}
-          isLoading
-        />
-      </View>
-    );
-  })
-  .add('With TileImage', () => {
-    const imageData = [
-      {
-        node: {
-          id: 'fakeId0',
-          source: 'https://picsum.photos/900/900/?random',
-          link: 'https://github.com',
-        },
-      },
-      {
-        node: {
-          id: 'fakeId1',
-          source: 'https://picsum.photos/900/900/?random',
-          link: 'https://github.com',
-        },
-      },
-      {
-        node: {
-          id: 'fakeId2',
-          source: 'https://picsum.photos/900/900/?random',
-          link: 'https://github.com',
-        },
-      },
-    ];
-
-    const loadingStateImageObject = {
-      node: {
-        id: 'fakeId1',
-        source: '',
-        link: '',
-      },
-    };
-
-    const Spacer = styled({
-      flex: 1,
-      paddingHorizontal: 10,
-    })(View);
-
-    const renderTileImage = (
-      { item, index } //eslint-disable-line
-    ) => (
-      <Spacer>
-        <TileImage image={item.node.source} link={item.node.link} />
-      </Spacer>
-    );
-
-    return (
-      <View>
-        <HorizontalTileFeed
-          content={imageData}
-          renderItem={renderTileImage}
-          loadingStateObject={loadingStateImageObject}
-        />
-      </View>
-    );
-  });
diff --git a/apolloschurchapp/src/ui/HorizontalTileFeed/HorizontalTileFeed.tests.js b/apolloschurchapp/src/ui/HorizontalTileFeed/HorizontalTileFeed.tests.js
deleted file mode 100644
index b98a6bf..0000000
--- a/apolloschurchapp/src/ui/HorizontalTileFeed/HorizontalTileFeed.tests.js
+++ /dev/null
@@ -1,68 +0,0 @@
-import React from 'react';
-import renderer from 'react-test-renderer';
-
-import Providers from 'apolloschurchapp/src/Providers';
-import CardTile from 'apolloschurchapp/src/ui/CardTile';
-
-import HorizontalTileFeed from '.';
-
-const loadingStateObject = {
-  node: {
-    id: 'fakeId0',
-    title: '',
-    isLoading: true,
-  },
-};
-
-describe('The HorizontalTileFeed component', () => {
-  it('renders correctly', () => {
-    const tree = renderer.create(
-      <Providers>
-        <HorizontalTileFeed
-          content={[
-            {
-              node: {
-                id: 'fakeId0',
-                title: 'Why Jesus is Timeless',
-              },
-            },
-            {
-              node: {
-                id: 'fakeId1',
-                title: 'Why Jesus is Timeless',
-              },
-            },
-          ]}
-          renderItem={({ item, index }) => (
-            <CardTile
-              number={index + 1}
-              title={item.node.title}
-              isLoading={item.node.isLoading}
-            />
-          )}
-          loadingStateObject={loadingStateObject}
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('renders empty state', () => {
-    const tree = renderer.create(
-      <Providers>
-        <HorizontalTileFeed
-          isLoading
-          content={[]}
-          renderItem={({ item, index }) => (
-            <CardTile
-              number={index + 1}
-              title={item.node.title}
-              isLoading={item.node.isLoading}
-            />
-          )}
-          loadingStateObject={loadingStateObject}
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/ui/HorizontalTileFeed/TileFeed.js b/apolloschurchapp/src/ui/HorizontalTileFeed/TileFeed.js
deleted file mode 100644
index 1f2eadf..0000000
--- a/apolloschurchapp/src/ui/HorizontalTileFeed/TileFeed.js
+++ /dev/null
@@ -1,11 +0,0 @@
-import { FlatList } from 'react-native';
-
-import styled from 'apolloschurchapp/src/ui/styled';
-
-const TileFeed = styled(({ theme, tileHeight }) => ({
-  height: tileHeight,
-  paddingHorizontal: theme.sizing.baseUnit / 2,
-  paddingBottom: theme.sizing.baseUnit / 2,
-}))(FlatList);
-
-export default TileFeed;
diff --git a/apolloschurchapp/src/ui/HorizontalTileFeed/TileFeed.tests.js b/apolloschurchapp/src/ui/HorizontalTileFeed/TileFeed.tests.js
deleted file mode 100644
index 81aae8f..0000000
--- a/apolloschurchapp/src/ui/HorizontalTileFeed/TileFeed.tests.js
+++ /dev/null
@@ -1,68 +0,0 @@
-import React from 'react';
-import renderer from 'react-test-renderer';
-
-import Providers from 'apolloschurchapp/src/Providers';
-import CardTile from 'apolloschurchapp/src/ui/CardTile';
-
-import TileFeed from '.';
-
-describe('The TileFeed component', () => {
-  it('renders correctly', () => {
-    const tree = renderer.create(
-      <Providers>
-        <TileFeed
-          content={[
-            {
-              node: {
-                id: 'fakeId0',
-                title: 'Why Jesus is Timeless',
-              },
-            },
-            {
-              node: {
-                id: 'fakeId1',
-                title: 'Why Jesus is Timeless',
-              },
-            },
-          ]}
-          loadingStateObject={{
-            id: 'fakeId0',
-            title: '',
-            isLoading: false,
-          }}
-          renderItem={({ item, index }) => (
-            <CardTile
-              number={index + 1}
-              title={item.title}
-              isLoading={item.isLoading}
-            />
-          )}
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('renders empty state', () => {
-    const tree = renderer.create(
-      <Providers>
-        <TileFeed
-          refreshing
-          content={[]}
-          loadingStateObject={{
-            id: 'fakeId0',
-            title: '',
-            isLoading: true,
-          }}
-          renderItem={({ item, index }) => (
-            <CardTile
-              number={index + 1}
-              title={item.title}
-              isLoading={item.isLoading}
-            />
-          )}
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/ui/HorizontalTileFeed/index.js b/apolloschurchapp/src/ui/HorizontalTileFeed/index.js
deleted file mode 100644
index 631a1c9..0000000
--- a/apolloschurchapp/src/ui/HorizontalTileFeed/index.js
+++ /dev/null
@@ -1,93 +0,0 @@
-import React, { PureComponent } from 'react';
-import { Dimensions } from 'react-native';
-import PropTypes from 'prop-types';
-import { compose, withProps } from 'recompose';
-
-import { withTheme } from 'apolloschurchapp/src/ui/theme';
-
-import TileFeed from './TileFeed';
-
-export class HorizontalTileFeed extends PureComponent {
-  static propTypes = {
-    content: PropTypes.array, // eslint-disable-line
-    loadingStateObject: PropTypes.shape({}).isRequired,
-    renderItem: PropTypes.func.isRequired,
-    fetchMore: PropTypes.func,
-    isLoading: PropTypes.bool,
-    keyExtractor: PropTypes.func,
-    theme: PropTypes.shape({}),
-  };
-
-  static defaultProps = {
-    keyExtractor: (item) => item && item.id,
-    content: [],
-    isLoading: false,
-  };
-
-  constructor(props) {
-    super(props);
-
-    this.snapToInterval = this.getTileWidth() - this.props.theme.baseUnit / 2; //eslint-disable-line
-  }
-
-  getTileWidth = () => {
-    const { width } = Dimensions.get('window');
-    return width * 0.8; // 80% of width
-  };
-
-  render() {
-    const { content, isLoading, renderItem, theme, ...otherProps } = this.props;
-
-    return (
-      <TileFeed
-        data={content}
-        horizontal
-        initialScrollIndex={0}
-        refreshing={isLoading}
-        renderItem={renderItem}
-        showsHorizontalScrollIndicator={false}
-        tileHeight={this.getTileWidth()} // passed into TileFeed styles. Height is equal to 80% of width
-        /*
-         * `(80% of width - baseUnit / 2)` which is used for padding on the tile. This padding was added
-         * to fix a shadow clipping bug on Android. `snapToInterval` below is adjusted to account for
-         * that padding on each swipe. TODO: find better shadow clipping fix that simplifies this math.
-         */
-        snapToInterval={this.snapToInterval} // passed down to rendered ScrollView.
-        snapToAlignment={'start'} // passed down to rendered ScrollView
-        decelerationRate={'fast'} // passed down to rendered ScrollView
-        {...otherProps}
-      />
-    );
-  }
-}
-
-const generateLoadingStateData = (loadingStateObject, numberOfItems) => {
-  const itemData = () => JSON.parse(JSON.stringify(loadingStateObject));
-
-  const loadingStateData = [];
-
-  while (loadingStateData.length < numberOfItems) {
-    const newData = itemData();
-    newData.id = `fakeId${loadingStateData.length}`;
-    loadingStateData.push(newData);
-  }
-
-  return loadingStateData;
-};
-
-const enhance = compose(
-  withProps(
-    ({ isLoading, content, loadingStateObject } = {}) =>
-      isLoading && (!content || !content.length)
-        ? {
-            content: generateLoadingStateData(loadingStateObject, 5),
-            fetchMore: () => {},
-          }
-        : {}
-  ),
-  withTheme(({ theme: { sizing: { baseUnit } = {} } = {} } = {}) => ({
-    theme: { baseUnit },
-  }))
-);
-
-export default enhance(HorizontalTileFeed);
diff --git a/apolloschurchapp/src/ui/Icon/Icon.stories.js b/apolloschurchapp/src/ui/Icon/Icon.stories.js
deleted file mode 100644
index ef0df2a..0000000
--- a/apolloschurchapp/src/ui/Icon/Icon.stories.js
+++ /dev/null
@@ -1,19 +0,0 @@
-import React from 'react';
-import { storiesOf } from '@storybook/react-native';
-import { kebabCase } from 'lodash';
-
-import CenteredView from 'apolloschurchapp/src/ui/CenteredView';
-
-import * as icons from './icons';
-
-import Icon from '.';
-
-const stories = storiesOf('Icon', module).addDecorator((getStory) => (
-  <CenteredView>{getStory()}</CenteredView>
-));
-
-Object.keys(icons).forEach((iconName) => {
-  stories.add(iconName, () => <Icon name={kebabCase(iconName)} />);
-});
-
-stories.add('isLoading', () => <Icon name={'umbrella'} isLoading />);
diff --git a/apolloschurchapp/src/ui/Icon/Icon.tests.js b/apolloschurchapp/src/ui/Icon/Icon.tests.js
deleted file mode 100644
index 6f794dd..0000000
--- a/apolloschurchapp/src/ui/Icon/Icon.tests.js
+++ /dev/null
@@ -1,22 +0,0 @@
-import React from 'react';
-import renderer from 'react-test-renderer';
-import { kebabCase } from 'lodash';
-
-import Providers from 'apolloschurchapp/src/Providers';
-
-import * as icons from './icons';
-
-import Icon from '.';
-
-Object.keys(icons).forEach((iconName) => {
-  describe(`The ${iconName} icon`, () => {
-    it('renders correctly', () => {
-      const tree = renderer.create(
-        <Providers>
-          <Icon name={kebabCase(iconName)} />
-        </Providers>
-      );
-      expect(tree).toMatchSnapshot();
-    });
-  });
-});
diff --git a/apolloschurchapp/src/ui/Icon/icons/ArrowBack.js b/apolloschurchapp/src/ui/Icon/icons/ArrowBack.js
deleted file mode 100644
index ea4d039..0000000
--- a/apolloschurchapp/src/ui/Icon/icons/ArrowBack.js
+++ /dev/null
@@ -1,21 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-import Svg, { Path } from 'react-native-svg';
-
-import makeIcon from './makeIcon';
-
-const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
-  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
-    <Path
-      d="M14.35 21L6.2 12.46c-.26-.28-.26-.64 0-.92L14.34 3l1.65.9L8.27 12 16 20.1l-1.65.9z"
-      fill={fill}
-    />
-  </Svg>
-));
-
-Icon.propTypes = {
-  size: PropTypes.number,
-  fill: PropTypes.string,
-};
-
-export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/ArrowDown.js b/apolloschurchapp/src/ui/Icon/icons/ArrowDown.js
deleted file mode 100644
index 81e83f1..0000000
--- a/apolloschurchapp/src/ui/Icon/icons/ArrowDown.js
+++ /dev/null
@@ -1,21 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-import Svg, { Path } from 'react-native-svg';
-
-import makeIcon from './makeIcon';
-
-const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
-  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
-    <Path
-      d="M12 18c-.16 0-.32-.06-.46-.2L3 9.66 3.9 8l8.1 7.72L20.1 8l.9 1.65-8.54 8.16c-.14.15-.3.2-.46.2z"
-      fill={fill}
-    />
-  </Svg>
-));
-
-Icon.propTypes = {
-  size: PropTypes.number,
-  fill: PropTypes.string,
-};
-
-export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/ArrowNext.js b/apolloschurchapp/src/ui/Icon/icons/ArrowNext.js
deleted file mode 100644
index 1371ca4..0000000
--- a/apolloschurchapp/src/ui/Icon/icons/ArrowNext.js
+++ /dev/null
@@ -1,21 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-import Svg, { Path } from 'react-native-svg';
-
-import makeIcon from './makeIcon';
-
-const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
-  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
-    <Path
-      d="M9.65 21L8 20.1l7.72-8.1L8 3.9 9.65 3l8.16 8.54c.27.28.27.64 0 .92L9.67 21z"
-      fill={fill}
-    />
-  </Svg>
-));
-
-Icon.propTypes = {
-  size: PropTypes.number,
-  fill: PropTypes.string,
-};
-
-export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/ArrowUp.js b/apolloschurchapp/src/ui/Icon/icons/ArrowUp.js
deleted file mode 100644
index f434de5..0000000
--- a/apolloschurchapp/src/ui/Icon/icons/ArrowUp.js
+++ /dev/null
@@ -1,21 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-import Svg, { Path } from 'react-native-svg';
-
-import makeIcon from './makeIcon';
-
-const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
-  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
-    <Path
-      d="M20.1 16L12 8.28 3.9 16 3 14.35l8.54-8.15c.28-.27.64-.27.92 0L21 14.35 20.1 16z"
-      fill={fill}
-    />
-  </Svg>
-));
-
-Icon.propTypes = {
-  size: PropTypes.number,
-  fill: PropTypes.string,
-};
-
-export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/Audio.js b/apolloschurchapp/src/ui/Icon/icons/Audio.js
deleted file mode 100644
index da2b1fb..0000000
--- a/apolloschurchapp/src/ui/Icon/icons/Audio.js
+++ /dev/null
@@ -1,21 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-import Svg, { Path } from 'react-native-svg';
-
-import makeIcon from './makeIcon';
-
-const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
-  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
-    <Path
-      d="M3.82 13.5H2v-.32C2 6.54 5.22 2 12 2c6.5 0 9.64 4.16 9.98 10.42v1.07h-1.82v-1c-.3-5.8-3.02-8.8-8.16-8.8-5.37 0-8.18 3.32-8.18 9.45v.3zm0 1.7h1.6c.87 0 1.58.66 1.58 1.48v2.13c0 .86-.7 1.5-1.6 1.5-.87 0-1.58-.64-1.58-1.5v-3.6zm0-1.7h1.6c1.87 0 3.4 1.42 3.4 3.18v2.13c0 1.8-1.53 3.2-3.4 3.2C3.5 22 2 20.6 2 18.8v-5.3h1.82zm16.36 1.7v3.6c0 .83-.7 1.5-1.6 1.5-.87 0-1.58-.67-1.58-1.5v-2.1c0-.82.7-1.5 1.6-1.5h1.58zm0-1.7H22v5.3c0 1.77-1.53 3.2-3.4 3.2-1.9 0-3.42-1.43-3.42-3.2v-2.1c0-1.76 1.53-3.2 3.4-3.2h1.6z"
-      fill={fill}
-    />
-  </Svg>
-));
-
-Icon.propTypes = {
-  size: PropTypes.number,
-  fill: PropTypes.string,
-};
-
-export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/Bank.js b/apolloschurchapp/src/ui/Icon/icons/Bank.js
deleted file mode 100644
index 98f8791..0000000
--- a/apolloschurchapp/src/ui/Icon/icons/Bank.js
+++ /dev/null
@@ -1,21 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-import Svg, { Path } from 'react-native-svg';
-
-import makeIcon from './makeIcon';
-
-const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
-  <Svg width={size} height={size} viewBox="0 0 24 17" {...otherProps}>
-    <Path
-      d="M1.3,0 L22.7,0 C23.42,0 24,0.57 24,1.28 L24,15.88 C24,16.58 23.42,17.16 22.7,17.16 L1.3,17.16 C0.57,17.15 0,16.57 0,15.87 L0,1.27 C0,0.57 0.58,0 1.3,0 Z M22.2,15.43 L22.2,1.71 L1.8,1.71 L1.8,15.43 L22.2,15.43 Z M11.4,12 L4.2,12 L4.2,9.7 L11.4,9.7 L11.4,12 Z M19.8,6.86 L4.2,6.86 L4.2,4.57 L19.8,4.57 L19.8,6.87 L19.8,6.86 Z"
-      fill={fill}
-    />
-  </Svg>
-));
-
-Icon.propTypes = {
-  size: PropTypes.number,
-  fill: PropTypes.string,
-};
-
-export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/BrandIcon.js b/apolloschurchapp/src/ui/Icon/icons/BrandIcon.js
deleted file mode 100644
index e46ffed..0000000
--- a/apolloschurchapp/src/ui/Icon/icons/BrandIcon.js
+++ /dev/null
@@ -1,21 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-import Svg, { Path } from 'react-native-svg';
-
-import makeIcon from './makeIcon';
-
-const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
-  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
-    <Path
-      d="M8.84799129,0 L13.7577354,0 L22.6057267,24 L0,24 L8.84799129,0 Z M6.52559608,19.4398694 L16.0921502,19.4398694 L11.4494502,5.83629831 L11.1682961,5.83629831 L6.52559608,19.4398694 Z"
-      fill={fill}
-    />
-  </Svg>
-));
-
-Icon.propTypes = {
-  size: PropTypes.number,
-  fill: PropTypes.string,
-};
-
-export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/Building.js b/apolloschurchapp/src/ui/Icon/icons/Building.js
deleted file mode 100644
index 3f5bf3e..0000000
--- a/apolloschurchapp/src/ui/Icon/icons/Building.js
+++ /dev/null
@@ -1,21 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-import Svg, { Path } from 'react-native-svg';
-
-import makeIcon from './makeIcon';
-
-const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
-  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
-    <Path
-      d="M19.5 21v-8.25h.75c.45 0 .75.3.75.75v6.75c0 .45-.3.75-.75.75h-.75zm-15-.75V21h-.75c-.45 0-.75-.3-.75-.75V13.5c0-.45.3-.75.75-.75h.75v7.5zM17.25 3c.45 0 .75.3.75.75v16.5c0 .45-.3.75-.75.75h-4.5v-3h-1.5v3h-4.5c-.45 0-.75-.3-.75-.75V3.75c0-.45.3-.75.75-.75h10.5zM10.5 15.75v-1.5H8.25v1.5h2.25zm0-3v-1.5H8.25v1.5h2.25zm0-3v-1.5H8.25v1.5h2.25zm0-3v-1.5H8.25v1.5h2.25zm5.25 9v-1.5H13.5v1.5h2.25zm0-3v-1.5H13.5v1.5h2.25zm0-3v-1.5H13.5v1.5h2.25zm0-3v-1.5H13.5v1.5h2.25z"
-      fill={fill}
-    />
-  </Svg>
-));
-
-Icon.propTypes = {
-  size: PropTypes.number,
-  fill: PropTypes.string,
-};
-
-export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/Calendar.js b/apolloschurchapp/src/ui/Icon/icons/Calendar.js
deleted file mode 100644
index eb78cab..0000000
--- a/apolloschurchapp/src/ui/Icon/icons/Calendar.js
+++ /dev/null
@@ -1,21 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-import Svg, { Path } from 'react-native-svg';
-
-import makeIcon from './makeIcon';
-
-const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
-  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
-    <Path
-      d="M4.4 20.57h15.52V9.14H4.42v11.43zM8.65 7V3.8c0-.12-.03-.2-.1-.27-.06-.07-.15-.1-.25-.1h-.72c-.1 0-.18.03-.25.1s-.1.15-.1.26V7c0 .1.03.2.1.26s.15.1.25.1h.7c.1 0 .2-.04.26-.1.07-.07.1-.16.1-.26zm8.46 0V3.8c0-.12 0-.2-.1-.27 0-.07-.1-.1-.2-.1h-.7c-.1 0-.2.03-.22.1s-.1.15-.1.26V7c0 .1.04.2.1.26.07.06.15.1.25.1h.7c.1 0 .2-.04.26-.1.07-.07.1-.16.1-.26zm4.3-.7v14.27c0 .4-.12.72-.4 1-.26.3-.6.43-1 .43H4.4c-.4 0-.72-.14-1-.42-.28-.3-.42-.62-.42-1V6.28c0-.4.14-.73.42-1 .28-.3.6-.43 1-.43h1.4V3.8c0-.5.17-.93.52-1.28.34-.35.76-.52 1.24-.52h.7c.5 0 .9.17 1.25.52s.55.77.55 1.27v1h4.23v-1c0-.5.17-.97.52-1.3s.75-.5 1.23-.5h.7c.5 0 .9.14 1.25.5.3.34.5.76.5 1.26v1h1.4c.4 0 .7.13 1 .4.23.3.4.63.4 1z"
-      fill={fill}
-    />
-  </Svg>
-));
-
-Icon.propTypes = {
-  size: PropTypes.number,
-  fill: PropTypes.string,
-};
-
-export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/Camera.js b/apolloschurchapp/src/ui/Icon/icons/Camera.js
deleted file mode 100644
index 0572a9e..0000000
--- a/apolloschurchapp/src/ui/Icon/icons/Camera.js
+++ /dev/null
@@ -1,21 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-import Svg, { Path } from 'react-native-svg';
-
-import makeIcon from './makeIcon';
-
-const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
-  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
-    <Path
-      d="M6.24 5.7l.52-1.23C7.18 3.67 8.2 3 9.1 3h5.8c1 0 2 .65 2.34 1.47l.52 1.23H20c1.16 0 2.06.86 2 1.88V19.1c.06 1.12-.84 1.97-2 1.9H4c-1.07.07-1.97-.78-2-1.9V7.6c.03-1.03.92-1.87 2-1.88h2.24zm2.17-.58l-.7 1.7-.22.5H4.02c-.16 0-.3.13-.3.28v11.58c0 .14.14.26.3.26h16.02c.16 0 .3-.1.3-.26V7.6c0-.14-.14-.27-.3-.27H16.6l-.2-.5-.72-1.7c-.1-.26-.5-.5-.78-.5H9.18c-.28 0-.67.25-.77.5zm3.65 12.16c-2.68 0-4.86-2.06-4.86-4.6 0-2.53 2.17-4.6 4.85-4.6 2.7 0 4.87 2.07 4.87 4.6 0 2.54-2.17 4.6-4.86 4.6zm0-1.62c1.74 0 3.15-1.33 3.15-2.97 0-1.67-1.42-3-3.16-3-1.74 0-3.15 1.33-3.15 3 0 1.62 1.4 2.95 3.13 2.95z"
-      fill={fill}
-    />
-  </Svg>
-));
-
-Icon.propTypes = {
-  size: PropTypes.number,
-  fill: PropTypes.string,
-};
-
-export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/Check.js b/apolloschurchapp/src/ui/Icon/icons/Check.js
deleted file mode 100644
index 05fc873..0000000
--- a/apolloschurchapp/src/ui/Icon/icons/Check.js
+++ /dev/null
@@ -1,21 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-import Svg, { Path } from 'react-native-svg';
-
-import makeIcon from './makeIcon';
-
-const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
-  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
-    <Path
-      d="M19.18 6.32l-9.9 9.65-4.46-4.3c-.22-.23-.48-.33-.76-.33-.3 0-.54.1-.76.32-.2.2-.3.43-.3.7 0 .3.1.54.3.73l5.25 5.03c.2.22.44.32.74.32s.53-.1.72-.32l.14-.13L20.7 7.77c.2-.2.3-.43.3-.72 0-.3-.1-.53-.3-.72-.22-.2-.47-.32-.76-.32-.28 0-.54.1-.76.33z"
-      fill={fill}
-    />
-  </Svg>
-));
-
-Icon.propTypes = {
-  size: PropTypes.number,
-  fill: PropTypes.string,
-};
-
-export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/CheckboxChecked.js b/apolloschurchapp/src/ui/Icon/icons/CheckboxChecked.js
deleted file mode 100644
index 53bff59..0000000
--- a/apolloschurchapp/src/ui/Icon/icons/CheckboxChecked.js
+++ /dev/null
@@ -1,21 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-import Svg, { Path } from 'react-native-svg';
-
-import makeIcon from './makeIcon';
-
-const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
-  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
-    <Path
-      d="M2.57,0 L19.43,0 C20.85,0 22,1.15 22,2.57 L22,19.43 C22,20.85 20.85,22 19.43,22 L2.57,22 C1.15,22 0,20.85 0,19.43 L0,2.57 C0,1.15 1.15,0 2.57,0 Z M17.75,4.56 L8.45,14.38 L4.25,9.98 C4.05,9.78 3.8,9.68 3.53,9.68 C3.26,9.68 3.03,9.78 2.83,9.98 C2.63,10.18 2.53,10.43 2.53,10.72 C2.53,11.02 2.63,11.26 2.83,11.46 L7.76,16.6 C7.94,16.8 8.16,16.92 8.46,16.92 C8.73,16.92 8.96,16.82 9.16,16.6 L9.28,16.47 L19.18,6.02 C19.38,5.82 19.46,5.58 19.46,5.29 C19.46,4.99 19.36,4.73 19.18,4.54 C18.98,4.32 18.74,4.21 18.48,4.21 C18.2,4.21 17.96,4.31 17.75,4.54 L17.75,4.56 Z"
-      fill={fill}
-    />
-  </Svg>
-));
-
-Icon.propTypes = {
-  size: PropTypes.number,
-  fill: PropTypes.string,
-};
-
-export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/CheckboxUnchecked.js b/apolloschurchapp/src/ui/Icon/icons/CheckboxUnchecked.js
deleted file mode 100644
index ac7c319..0000000
--- a/apolloschurchapp/src/ui/Icon/icons/CheckboxUnchecked.js
+++ /dev/null
@@ -1,21 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-import Svg, { Path } from 'react-native-svg';
-
-import makeIcon from './makeIcon';
-
-const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
-  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
-    <Path
-      d="M3.75 20.25h16.5V3.75H3.75v16.5zM1 3.75C1 2.22 2.23 1 3.74 1h16.52C21.76 1 23 2.23 23 3.74v16.52c0 1.5-1.23 2.74-2.74 2.74H3.74C2.24 23 1 21.77 1 20.26V3.74z"
-      fill={fill}
-    />
-  </Svg>
-));
-
-Icon.propTypes = {
-  size: PropTypes.number,
-  fill: PropTypes.string,
-};
-
-export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/Chromecast.js b/apolloschurchapp/src/ui/Icon/icons/Chromecast.js
deleted file mode 100644
index c312fdb..0000000
--- a/apolloschurchapp/src/ui/Icon/icons/Chromecast.js
+++ /dev/null
@@ -1,21 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-import Svg, { Path } from 'react-native-svg';
-
-import makeIcon from './makeIcon';
-
-const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
-  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
-    <Path
-      d="M3 17.27v2.46h2.45c0-1.36-1.1-2.46-2.45-2.46zM3 14v1.64c2.26 0 4.1 1.83 4.1 4.1h1.63C8.73 16.54 6.17 14 3 14zm0-3.27v1.63c4.07 0 7.36 3.3 7.36 7.37H12c0-4.98-4.03-9-9-9zM19.36 5H4.64C3.74 5 3 5.74 3 6.64V9.1h1.64V6.63h14.72V18.1h-5.72v1.63h5.72c.9 0 1.64-.74 1.64-1.64V6.62c0-.9-.74-1.64-1.64-1.64z"
-      fill={fill}
-    />
-  </Svg>
-));
-
-Icon.propTypes = {
-  size: PropTypes.number,
-  fill: PropTypes.string,
-};
-
-export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/CircleOutlineCheckMark.js b/apolloschurchapp/src/ui/Icon/icons/CircleOutlineCheckMark.js
deleted file mode 100644
index b8bfa94..0000000
--- a/apolloschurchapp/src/ui/Icon/icons/CircleOutlineCheckMark.js
+++ /dev/null
@@ -1,25 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-import Svg, { Path, Polygon } from 'react-native-svg';
-
-import makeIcon from './makeIcon';
-
-const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
-  <Svg width={size} height={size} viewBox="0 0 60 61" {...otherProps}>
-    <Polygon
-      fill={fill}
-      points="25.9570657 39.7210789 26.6666667 40.4357125 27.3762676 39.7210789 40.709601 26.293183 41.4092427 25.5885792 40.709601 24.8839754 38.0429343 22.1983962 37.3333333 21.4837626 36.6237324 22.1983962 25.9570657 32.940713 27.3762676 32.940713 23.3762676 28.9123442 22.6666667 28.1977106 21.9570657 28.9123442 19.290399 31.5979234 18.5907573 32.3025272 19.290399 33.007131"
-    />
-    <Path
-      fill={fill}
-      d="M30,54.903 L30,54.903 C43.254834,54.903 54,44.157834 54,30.903 C54,17.648166 43.254834,6.903 30,6.903 C16.745166,6.903 6,17.648166 6,30.903 C6,44.157834 16.745166,54.903 30,54.903 L30,54.903 Z M30,60.903 L30,60.903 C13.4314575,60.903 0,47.4715425 0,30.903 C0,14.3344575 13.4314575,0.903 30,0.903 C46.5685425,0.903 60,14.3344575 60,30.903 C60,47.4715425 46.5685425,60.903 30,60.903 L30,60.903 Z"
-    />
-  </Svg>
-));
-
-Icon.propTypes = {
-  size: PropTypes.number,
-  fill: PropTypes.string,
-};
-
-export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/CircleOutlineXMark.js b/apolloschurchapp/src/ui/Icon/icons/CircleOutlineXMark.js
deleted file mode 100644
index 6ab39b4..0000000
--- a/apolloschurchapp/src/ui/Icon/icons/CircleOutlineXMark.js
+++ /dev/null
@@ -1,25 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-import Svg, { Path } from 'react-native-svg';
-
-import makeIcon from './makeIcon';
-
-const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
-  <Svg width={size} height={size} viewBox="0 0 60 61" {...otherProps}>
-    <Path
-      fill={fill}
-      d="M30,54.33 L30,54.33 C43.254834,54.33 54,43.584834 54,30.33 C54,17.075166 43.254834,6.33 30,6.33 C16.745166,6.33 6,17.075166 6,30.33 C6,43.584834 16.745166,54.33 30,54.33 L30,54.33 Z M30,60.33 L30,60.33 C13.4314575,60.33 0,46.8985425 0,30.33 C0,13.7614575 13.4314575,0.33 30,0.33 C46.5685425,0.33 60,13.7614575 60,30.33 C60,46.8985425 46.5685425,60.33 30,60.33 L30,60.33 Z"
-    />
-    <Path
-      fill={fill}
-      d="M28.784,33.438 L28.784,33.438 L27.9222343,33.438 L27.7949654,32.5856839 L26.7389654,25.5136839 L26.728,25.366 L26.728,16.502 L26.728,15.502 L27.728,15.502 L32.272,15.502 L33.272,15.502 L33.272,16.502 L33.272,25.366 L33.2610346,25.5136839 L32.2050346,32.5856839 L32.0777657,33.438 L31.216,33.438 L28.784,33.438 Z M26.504,41.662 L26.504,41.662 C26.504,39.6282997 27.9530061,38.166 30,38.166 C32.0469939,38.166 33.496,39.6282997 33.496,41.662 C33.496,43.6957003 32.0469939,45.158 30,45.158 C27.9530061,45.158 26.504,43.6957003 26.504,41.662 L26.504,41.662 Z"
-    />
-  </Svg>
-));
-
-Icon.propTypes = {
-  size: PropTypes.number,
-  fill: PropTypes.string,
-};
-
-export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/Close.js b/apolloschurchapp/src/ui/Icon/icons/Close.js
deleted file mode 100644
index 75d4164..0000000
--- a/apolloschurchapp/src/ui/Icon/icons/Close.js
+++ /dev/null
@@ -1,21 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-import Svg, { Path } from 'react-native-svg';
-
-import makeIcon from './makeIcon';
-
-const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
-  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
-    <Path
-      d="M13.07 12l7.2-7.2.5-.5c.3-.3.3-.78 0-1.08-.3-.3-.76-.3-1.06 0l-.5.5-7.2 7.2-7.2-7.2-.5-.5c-.3-.3-.77-.3-1.07 0-.3.3-.3.77 0 1.07l.5.5 7.2 7.2-7.7 7.7c-.3.3-.3.77 0 1.07.3.3.77.3 1.07 0l7.7-7.7 7.7 7.7c.3.3.78.3 1.08 0 .3-.3.3-.77 0-1.07l-7.7-7.7z"
-      fill={fill}
-    />
-  </Svg>
-));
-
-Icon.propTypes = {
-  size: PropTypes.number,
-  fill: PropTypes.string,
-};
-
-export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/Credit.js b/apolloschurchapp/src/ui/Icon/icons/Credit.js
deleted file mode 100644
index 228ea79..0000000
--- a/apolloschurchapp/src/ui/Icon/icons/Credit.js
+++ /dev/null
@@ -1,21 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-import Svg, { Path } from 'react-native-svg';
-
-import makeIcon from './makeIcon';
-
-const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
-  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
-    <Path
-      d="M1.7 3.43c-.84 0-1.7.86-1.7 1.7v13.73c0 .85.86 1.7 1.7 1.7h20.6c.84 0 1.7-.85 1.7-1.7V5.14c0-.85-.86-1.7-1.7-1.7H1.7zm0 15.43v-6h20.6v6H1.7zm0-10.65V5.16h20.6V8.2H1.7z"
-      fill={fill}
-    />
-  </Svg>
-));
-
-Icon.propTypes = {
-  size: PropTypes.number,
-  fill: PropTypes.string,
-};
-
-export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/Download.js b/apolloschurchapp/src/ui/Icon/icons/Download.js
deleted file mode 100644
index efe61ba..0000000
--- a/apolloschurchapp/src/ui/Icon/icons/Download.js
+++ /dev/null
@@ -1,21 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-import Svg, { Path } from 'react-native-svg';
-
-import makeIcon from './makeIcon';
-
-const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
-  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
-    <Path
-      d="M13 13.34l3.2-3.2c.4-.4 1.04-.4 1.43 0 .4.38.4 1 0 1.4l-4.92 4.92c-.2.2-.46.3-.73.3s-.54-.1-.75-.3l-4.9-4.92c-.4-.4-.4-1.02 0-1.4.38-.4 1.02-.4 1.4 0L11 13.4V3.02c0-.57.44-1.02 1-1.02.55 0 1 .45 1 1v10.34zm-9 .7v5.93c0 .33.4.7 1 .7h14c.6 0 1-.37 1-.7v-5.94c0-.33 2-1.5 2 0v5.94c0 1.5-1.34 2.7-3 2.7H5c-1.66 0-3-1.2-3-2.7v-5.94c0-1.5 2-.33 2 0z"
-      fill={fill}
-    />
-  </Svg>
-));
-
-Icon.propTypes = {
-  size: PropTypes.number,
-  fill: PropTypes.string,
-};
-
-export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/Dropdown.js b/apolloschurchapp/src/ui/Icon/icons/Dropdown.js
deleted file mode 100644
index de47137..0000000
--- a/apolloschurchapp/src/ui/Icon/icons/Dropdown.js
+++ /dev/null
@@ -1,18 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-import Svg, { Path } from 'react-native-svg';
-
-import makeIcon from './makeIcon';
-
-const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
-  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
-    <Path d="M7 10l5 5 5-5z" fill={fill} />
-  </Svg>
-));
-
-Icon.propTypes = {
-  size: PropTypes.number,
-  fill: PropTypes.string,
-};
-
-export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/Empty.js b/apolloschurchapp/src/ui/Icon/icons/Empty.js
deleted file mode 100644
index 503bc97..0000000
--- a/apolloschurchapp/src/ui/Icon/icons/Empty.js
+++ /dev/null
@@ -1,16 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-import Svg from 'react-native-svg';
-
-import makeIcon from './makeIcon';
-
-const Icon = makeIcon(({ size = 32, ...otherProps } = {}) => (
-  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps} />
-));
-
-Icon.propTypes = {
-  size: PropTypes.number,
-  fill: PropTypes.string,
-};
-
-export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/Failed.js b/apolloschurchapp/src/ui/Icon/icons/Failed.js
deleted file mode 100644
index e917a5a..0000000
--- a/apolloschurchapp/src/ui/Icon/icons/Failed.js
+++ /dev/null
@@ -1,21 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-import Svg, { Path } from 'react-native-svg';
-
-import makeIcon from './makeIcon';
-
-const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
-  <Svg width={size} height={size} viewBox="0 0 512 512" {...otherProps}>
-    <Path
-      d="M256 51c113 0 205 92 205 205 0 113-92 205-205 205-113 0-205-92-205-205 0-113 92-205 205-205z m0-51c-141 0-256 115-256 256 0 141 115 256 256 256 141 0 256-115 256-256 0-141-115-256-256-256z m109 188l-41-41-68 68-68-68-41 41 68 68-68 68 41 41 68-68 68 68 41-41-68-68z"
-      fill={fill}
-    />
-  </Svg>
-));
-
-Icon.propTypes = {
-  size: PropTypes.number,
-  fill: PropTypes.string,
-};
-
-export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/Filter.js b/apolloschurchapp/src/ui/Icon/icons/Filter.js
deleted file mode 100644
index ebe4d5e..0000000
--- a/apolloschurchapp/src/ui/Icon/icons/Filter.js
+++ /dev/null
@@ -1,21 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-import Svg, { Path } from 'react-native-svg';
-
-import makeIcon from './makeIcon';
-
-const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
-  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
-    <Path
-      d="M14.07 18.6c0-.42-.33-.75-.74-.75h-2.66c-.4 0-.74.33-.74.74 0 .4.33.7.74.7h2.66c.4 0 .74-.35.74-.76zM2.74 7.47h18.52c.4 0 .74-.33.74-.74 0-.4-.33-.74-.74-.74H2.74c-.4 0-.74.3-.74.7 0 .4.33.73.74.73zm15.8 5.2c0-.42-.32-.75-.73-.75H6.2c-.42 0-.75.33-.75.74 0 .4.33.74.74.74h11.6c.4 0 .7-.32.7-.73z"
-      fill={fill}
-    />
-  </Svg>
-));
-
-Icon.propTypes = {
-  size: PropTypes.number,
-  fill: PropTypes.string,
-};
-
-export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/Fullscreen.js b/apolloschurchapp/src/ui/Icon/icons/Fullscreen.js
deleted file mode 100644
index 7258643..0000000
--- a/apolloschurchapp/src/ui/Icon/icons/Fullscreen.js
+++ /dev/null
@@ -1,21 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-import Svg, { Path } from 'react-native-svg';
-
-import makeIcon from './makeIcon';
-
-const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
-  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
-    <Path
-      d="M22 2.83V9.5h-1.67V3.67H14.5V2H22v.83zM21.17 22H22v-7.5h-1.67v5.83H14.5V22h6.67zm-17.5-1.67V14.5H2V22h7.5v-1.67H3.67zM2.83 2H2v7.5h1.67V3.67H9.5V2H2.83z"
-      fill={fill}
-    />
-  </Svg>
-));
-
-Icon.propTypes = {
-  size: PropTypes.number,
-  fill: PropTypes.string,
-};
-
-export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/Groups.js b/apolloschurchapp/src/ui/Icon/icons/Groups.js
deleted file mode 100644
index f65dcb6..0000000
--- a/apolloschurchapp/src/ui/Icon/icons/Groups.js
+++ /dev/null
@@ -1,21 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-import Svg, { Path } from 'react-native-svg';
-
-import makeIcon from './makeIcon';
-
-const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
-  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
-    <Path
-      d="M15.6 4c1.77 0 3.2 1.43 3.2 3.2V8c0 1.77-1.43 3.2-3.2 3.2-.44 0-.85-.1-1.23-.25.28-.66.43-1.4.43-2.15V8c0-1.26-.42-2.4-1.12-3.35.54-.4 1.2-.65 1.92-.65zm-6.4 8.8c-2.2 0-4-1.8-4-4V8c0-2.2 1.8-4 4-4s4 1.8 4 4v.8c0 2.2-1.8 4-4 4zm11.07 1.12c.57.26.93.83.93 1.46v2.22c0 .44-.36.8-.8.8h-2.44c-.17-2.38-1.82-4.4-4.15-5-.3-.08-.6-.14-.9-.2.85-.23 1.77-.4 2.7-.4 1.9 0 3.67.65 4.7 1.12zM15.6 20H2.8c-.44 0-.8-.36-.8-.8v-.38C2 17 3.22 15.4 4.98 14.95c1.18-.3 2.64-.55 4.22-.55 1.58 0 3.04.25 4.22.55 1.76.45 2.98 2.05 2.98 3.87v.38c0 .44-.36.8-.8.8z"
-      fill={fill}
-    />
-  </Svg>
-));
-
-Icon.propTypes = {
-  size: PropTypes.number,
-  fill: PropTypes.string,
-};
-
-export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/Home.js b/apolloschurchapp/src/ui/Icon/icons/Home.js
deleted file mode 100644
index b015a25..0000000
--- a/apolloschurchapp/src/ui/Icon/icons/Home.js
+++ /dev/null
@@ -1,21 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-import Svg, { Path } from 'react-native-svg';
-
-import makeIcon from './makeIcon';
-
-const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
-  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
-    <Path
-      d="M19,2.5 L16.5,2.5 C15.9477153,2.5 15.5,2.05228475 15.5,1.5 C15.5,0.94771525 15.9477153,0.5 16.5,0.5 L20,0.5 C20.5522847,0.5 21,0.94771525 21,1.5 L21,5 C21,5.55228475 20.5522847,6 20,6 C19.4477153,6 19,5.55228475 19,5 L19,2.5 Z M21,22 C21,22.5522847 20.5522847,23 20,23 L14,23 C13.4477153,23 13,22.5522847 13,22 L13,17 L10,17 L10,22 C10,22.5522847 9.55228475,23 9,23 L4,23 C3.44771525,23 3,22.5522847 3,22 L3,13 C3,12.4477153 3.44771525,12 4,12 C4.55228475,12 5,12.4477153 5,13 L5,21 L8,21 L8,16 C8,15.4477153 8.44771525,15 9,15 L14,15 C14.5522847,15 15,15.4477153 15,16 L15,21 L19,21 L19,13 C19,12.4477153 19.4477153,12 20,12 C20.5522847,12 21,12.4477153 21,13 L21,22 Z M12.7071068,0.292893219 L23.7071068,11.2928932 C24.0976311,11.6834175 24.0976311,12.3165825 23.7071068,12.7071068 C23.3165825,13.0976311 22.6834175,13.0976311 22.2928932,12.7071068 L12,2.41421356 L1.70710678,12.7071068 C1.31658249,13.0976311 0.683417511,13.0976311 0.292893219,12.7071068 C-0.0976310729,12.3165825 -0.0976310729,11.6834175 0.292893219,11.2928932 L11.2928932,0.292893219 C11.6834175,-0.0976310729 12.3165825,-0.0976310729 12.7071068,0.292893219 Z"
-      fill={fill}
-    />
-  </Svg>
-));
-
-Icon.propTypes = {
-  size: PropTypes.number,
-  fill: PropTypes.string,
-};
-
-export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/Information.js b/apolloschurchapp/src/ui/Icon/icons/Information.js
deleted file mode 100644
index 5508914..0000000
--- a/apolloschurchapp/src/ui/Icon/icons/Information.js
+++ /dev/null
@@ -1,21 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-import Svg, { Path } from 'react-native-svg';
-
-import makeIcon from './makeIcon';
-
-const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
-  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
-    <Path
-      d="M12 2C6.5 2 2 6.5 2 12s4.5 10 10 10 10-4.5 10-10S17.5 2 12 2zm2.2 15.24c-.54.2-2.44 1.13-3.54.16-.33-.3-.5-.66-.5-1.1 0-.83.28-1.56.77-3.3.1-.33.2-.76.2-1.1 0-.58-.23-.73-.83-.73-.3 0-.62.1-.9.2l.15-.65c.65-.27 1.48-.6 2.18-.6 1.06 0 1.84.53 1.84 1.53 0 .3-.05.8-.16 1.15l-.6 2.15c-.1.44-.3 1.4 0 1.68s1.2.13 1.6-.06l-.14.67zm-1-8.57c-.68 0-1.24-.56-1.24-1.25 0-.7.56-1.25 1.25-1.25.7 0 1.3.56 1.3 1.25 0 .7-.55 1.25-1.24 1.25z"
-      fill={fill}
-    />
-  </Svg>
-));
-
-Icon.propTypes = {
-  size: PropTypes.number,
-  fill: PropTypes.string,
-};
-
-export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/Like.js b/apolloschurchapp/src/ui/Icon/icons/Like.js
deleted file mode 100644
index d56487f..0000000
--- a/apolloschurchapp/src/ui/Icon/icons/Like.js
+++ /dev/null
@@ -1,21 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-import Svg, { Path } from 'react-native-svg';
-
-import makeIcon from './makeIcon';
-
-const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
-  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
-    <Path
-      d="M13.13 20.2h-2.26l1.4-1.4.03-.02.03-.03c6.37-5.6 8.06-7.67 8.06-10.27 0-2.2-1.7-3.9-3.9-3.9-1.23 0-2.48.6-3.28 1.54L12 7.57l-1.23-1.45C9.97 5.18 8.72 4.6 7.5 4.6c-2.2 0-3.9 1.67-3.9 3.88 0 2.6 1.7 4.66 8.07 10.27l.03.03.04.03 1.4 1.4zM10.8 4.03l-.03.03h.1c.4.3.8.64 1.13 1.03.33-.4.72-.75 1.14-1.05h.1c-.02 0-.03-.02-.04-.03.97-.66 2.13-1.03 3.3-1.03C19.6 3 22 5.4 22 8.47c0 3.8-3.4 6.88-8.6 11.46l-1.4 1.4-1.4-1.4C5.4 15.36 2 12.27 2 8.48 2 5.38 4.4 3 7.5 3c1.17 0 2.33.37 3.3 1.03z"
-      fill={fill}
-    />
-  </Svg>
-));
-
-Icon.propTypes = {
-  size: PropTypes.number,
-  fill: PropTypes.string,
-};
-
-export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/LikeSolid.js b/apolloschurchapp/src/ui/Icon/icons/LikeSolid.js
deleted file mode 100644
index 3ecc3a4..0000000
--- a/apolloschurchapp/src/ui/Icon/icons/LikeSolid.js
+++ /dev/null
@@ -1,21 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-import Svg, { Path } from 'react-native-svg';
-
-import makeIcon from './makeIcon';
-
-const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
-  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
-    <Path
-      d="M10.8 4.03l-.03.03h.1c.4.3.8.64 1.13 1.03.33-.4.72-.75 1.14-1.05h.1c-.02 0-.03-.02-.04-.03.97-.66 2.13-1.03 3.3-1.03C19.6 3 22 5.4 22 8.47c0 3.8-3.4 6.88-8.6 11.46l-1.4 1.4-1.4-1.4C5.4 15.36 2 12.27 2 8.48 2 5.38 4.4 3 7.5 3c1.17 0 2.33.37 3.3 1.03z"
-      fill={fill}
-    />
-  </Svg>
-));
-
-Icon.propTypes = {
-  size: PropTypes.number,
-  fill: PropTypes.string,
-};
-
-export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/Locate.js b/apolloschurchapp/src/ui/Icon/icons/Locate.js
deleted file mode 100644
index 9506ea1..0000000
--- a/apolloschurchapp/src/ui/Icon/icons/Locate.js
+++ /dev/null
@@ -1,21 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-import Svg, { Path } from 'react-native-svg';
-
-import makeIcon from './makeIcon';
-
-const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
-  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
-    <Path
-      d="M12 8.36C10 8.36 8.36 10 8.36 12S10 15.64 12 15.64 15.64 14 15.64 12 14 8.36 12 8.36zm8.13 2.73c-.43-3.8-3.43-6.8-7.23-7.3V2h-1.8v1.87C7.3 4.3 4.3 7.3 3.9 11.1H2v1.8h1.87c.42 3.8 3.43 6.8 7.22 7.23V22h1.8v-1.87c3.8-.42 6.8-3.43 7.2-7.22H22v-1.8h-1.87zM12 18.3c-3.52 0-6.36-2.84-6.36-6.36 0-3.5 2.84-6.36 6.36-6.36 3.52 0 6.36 2.85 6.36 6.37 0 3.5-2.84 6.35-6.36 6.35z"
-      fill={fill}
-    />
-  </Svg>
-));
-
-Icon.propTypes = {
-  size: PropTypes.number,
-  fill: PropTypes.string,
-};
-
-export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/Lock.js b/apolloschurchapp/src/ui/Icon/icons/Lock.js
deleted file mode 100644
index b6d1591..0000000
--- a/apolloschurchapp/src/ui/Icon/icons/Lock.js
+++ /dev/null
@@ -1,21 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-import Svg, { Path } from 'react-native-svg';
-
-import makeIcon from './makeIcon';
-
-const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
-  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
-    <Path
-      d="M9 11.18h6.4V8.73c0-.9-.3-1.68-.94-2.32-.62-.6-1.38-.9-2.26-.9-.88 0-1.64.3-2.26.97C9.3 7.1 9 7.87 9 8.77v2.45zm10.4 1.23v7.4c0 .37-.12.66-.35.9-.23.24-.52.36-.85.36h-12c-.33 0-.62-.1-.85-.35-.23-.24-.35-.53-.35-.87v-7.4c0-.32.12-.6.35-.85.23-.24.52-.36.85-.36h.4V8.74c0-1.57.55-2.92 1.65-4.04C9.35 3.5 10.67 3 12.2 3c1.53 0 2.85.56 3.95 1.7 1.1 1.1 1.65 2.46 1.65 4.03v2.45h.4c.33 0 .62.12.85.36.23.24.35.53.35.87z"
-      fill={fill}
-    />
-  </Svg>
-));
-
-Icon.propTypes = {
-  size: PropTypes.number,
-  fill: PropTypes.string,
-};
-
-export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/Pause.js b/apolloschurchapp/src/ui/Icon/icons/Pause.js
deleted file mode 100644
index 72c6a11..0000000
--- a/apolloschurchapp/src/ui/Icon/icons/Pause.js
+++ /dev/null
@@ -1,18 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-import Svg, { Path } from 'react-native-svg';
-
-import makeIcon from './makeIcon';
-
-const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
-  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
-    <Path d="M7 3h1.67v18H7V3zm8.33 0H17v18h-1.67V3z" fill={fill} />
-  </Svg>
-));
-
-Icon.propTypes = {
-  size: PropTypes.number,
-  fill: PropTypes.string,
-};
-
-export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/Pin.js b/apolloschurchapp/src/ui/Icon/icons/Pin.js
deleted file mode 100644
index b2fedda..0000000
--- a/apolloschurchapp/src/ui/Icon/icons/Pin.js
+++ /dev/null
@@ -1,21 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-import Svg, { Path } from 'react-native-svg';
-
-import makeIcon from './makeIcon';
-
-const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
-  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
-    <Path
-      d="M11.83 2C8 2 4 4.96 4 9.83c0 4.6 6.96 11.65 7.22 11.9.17.18.35.27.6.27.27 0 .44-.1.6-.26.28-.26 7.23-7.3 7.23-11.9 0-4.88-4-7.84-7.82-7.84zm0 10.43c-1.48 0-2.6-1.13-2.6-2.6 0-1.48 1.12-2.6 2.6-2.6 1.47 0 2.6 1.12 2.6 2.6 0 1.47-1.13 2.6-2.6 2.6z"
-      fill={fill}
-    />
-  </Svg>
-));
-
-Icon.propTypes = {
-  size: PropTypes.number,
-  fill: PropTypes.string,
-};
-
-export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/Play.js b/apolloschurchapp/src/ui/Icon/icons/Play.js
deleted file mode 100644
index f9e4b24..0000000
--- a/apolloschurchapp/src/ui/Icon/icons/Play.js
+++ /dev/null
@@ -1,21 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-import Svg, { Path } from 'react-native-svg';
-
-import makeIcon from './makeIcon';
-
-const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
-  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
-    <Path
-      d="M7.63 3.34v17.5c-.04-.12-.17-.25-.35-.33-.18-.06-.37-.1-.5-.04l.14-.1 11.13-8.4c.22-.17.22-.2 0-.36L7 3.65l-.14-.1c.1.03.28.02.45-.07.2-.1.3-.2.36-.3v.13zM6 3.34c0-1.3.88-1.73 1.97-.95l11.05 7.9c1.1.8 1.1 2.06.04 2.86l-11.13 8.4C6.86 22.4 6 22 6 20.7V3.34z"
-      fill={fill}
-    />
-  </Svg>
-));
-
-Icon.propTypes = {
-  size: PropTypes.number,
-  fill: PropTypes.string,
-};
-
-export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/Print.js b/apolloschurchapp/src/ui/Icon/icons/Print.js
deleted file mode 100644
index 6f774d0..0000000
--- a/apolloschurchapp/src/ui/Icon/icons/Print.js
+++ /dev/null
@@ -1,21 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-import Svg, { Path } from 'react-native-svg';
-
-import makeIcon from './makeIcon';
-
-const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
-  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
-    <Path
-      d="M6.42 8.25H4.58c-.7 0-1.3.57-1.3 1.27v5.1c0 .44.2.73.66.73h3.22v3.78h9.68v-6.45H7.16v2.67h-1.3V11.4h12.27v9.02H5.86v-3.78H3.94C2.77 16.64 2 15.5 2 14.6V9.53c0-1.4 1.16-2.56 2.58-2.56h14.76c1.5 0 2.66 1.15 2.66 2.56v5.1c0 1.14-.87 2-2.03 2.02h-1.84v-1.3h1.84c.44 0 .74-.28.74-.73v-5.1c0-.7-.55-1.27-1.26-1.26h-13zm9.13 6.92v-.74h-7.1v.74h7.1zm0 2.4h-7.1v-.75h7.1v.74zm-8.4-10.6H5.88V3h12.26v3.96h-1.3V4.3H7.17v2.66z"
-      fill={fill}
-    />
-  </Svg>
-));
-
-Icon.propTypes = {
-  size: PropTypes.number,
-  fill: PropTypes.string,
-};
-
-export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/Profile.js b/apolloschurchapp/src/ui/Icon/icons/Profile.js
deleted file mode 100644
index 24e12d6..0000000
--- a/apolloschurchapp/src/ui/Icon/icons/Profile.js
+++ /dev/null
@@ -1,21 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-import Svg, { Path } from 'react-native-svg';
-
-import makeIcon from './makeIcon';
-
-const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
-  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
-    <Path
-      d="M22,22.8 C22,23.4627417 21.4527925,24 20.7777778,24 C20.1027631,24 19.5555556,23.4627417 19.5555556,22.8 L19.5555556,20.4 C19.5555556,18.4117749 17.913933,16.8 15.8888889,16.8 L6.11111111,16.8 C4.08606703,16.8 2.44444444,18.4117749 2.44444444,20.4 L2.44444444,22.8 C2.44444444,23.4627417 1.89723692,24 1.22222222,24 C0.547207528,24 0,23.4627417 0,22.8 L0,20.4 C0,17.0862915 2.73603764,14.4 6.11111111,14.4 L15.8888889,14.4 C19.2639624,14.4 22,17.0862915 22,20.4 L22,22.8 Z M11,12 C7.62492653,12 4.88888889,9.3137085 4.88888889,6 C4.88888889,2.6862915 7.62492653,0 11,0 C14.3750735,0 17.1111111,2.6862915 17.1111111,6 C17.1111111,9.3137085 14.3750735,12 11,12 Z M11,9.6 C13.0250441,9.6 14.6666667,7.9882251 14.6666667,6 C14.6666667,4.0117749 13.0250441,2.4 11,2.4 C8.97495592,2.4 7.33333333,4.0117749 7.33333333,6 C7.33333333,7.9882251 8.97495592,9.6 11,9.6 Z"
-      fill={fill}
-    />
-  </Svg>
-));
-
-Icon.propTypes = {
-  size: PropTypes.number,
-  fill: PropTypes.string,
-};
-
-export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/RadioChecked.js b/apolloschurchapp/src/ui/Icon/icons/RadioChecked.js
deleted file mode 100644
index a01a630..0000000
--- a/apolloschurchapp/src/ui/Icon/icons/RadioChecked.js
+++ /dev/null
@@ -1,21 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-import Svg, { Path } from 'react-native-svg';
-
-import makeIcon from './makeIcon';
-
-const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
-  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
-    <Path
-      d="M12 24C5.37 24 0 18.63 0 12S5.37 0 12 0s12 5.37 12 12-5.37 12-12 12zm0-2.4c5.3 0 9.6-4.3 9.6-9.6S17.3 2.4 12 2.4 2.4 6.7 2.4 12s4.3 9.6 9.6 9.6zm0-2.4c-3.98 0-7.2-3.22-7.2-7.2S8.02 4.8 12 4.8s7.2 3.22 7.2 7.2-3.22 7.2-7.2 7.2z"
-      fill={fill}
-    />
-  </Svg>
-));
-
-Icon.propTypes = {
-  size: PropTypes.number,
-  fill: PropTypes.string,
-};
-
-export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/RadioUnchecked.js b/apolloschurchapp/src/ui/Icon/icons/RadioUnchecked.js
deleted file mode 100644
index 873beab..0000000
--- a/apolloschurchapp/src/ui/Icon/icons/RadioUnchecked.js
+++ /dev/null
@@ -1,21 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-import Svg, { Path } from 'react-native-svg';
-
-import makeIcon from './makeIcon';
-
-const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
-  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
-    <Path
-      d="M12 24C5.37 24 0 18.63 0 12S5.37 0 12 0s12 5.37 12 12-5.37 12-12 12zm0-2.4c5.3 0 9.6-4.3 9.6-9.6S17.3 2.4 12 2.4 2.4 6.7 2.4 12s4.3 9.6 9.6 9.6z"
-      fill={fill}
-    />
-  </Svg>
-));
-
-Icon.propTypes = {
-  size: PropTypes.number,
-  fill: PropTypes.string,
-};
-
-export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/Repeat.js b/apolloschurchapp/src/ui/Icon/icons/Repeat.js
deleted file mode 100644
index 718ee4d..0000000
--- a/apolloschurchapp/src/ui/Icon/icons/Repeat.js
+++ /dev/null
@@ -1,21 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-import Svg, { Path } from 'react-native-svg';
-
-import makeIcon from './makeIcon';
-
-const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
-  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
-    <Path
-      d="M6.22 16.55h11.45l-.3.04c1.32-.5 2.1-1.1 2.52-2 .3-.8.4-1.6.3-2.3l-.1-.2 1.7-.4v.3c.14 1 .05 2.06-.43 3.1-.6 1.33-1.8 2.34-3.56 2.9l-.13.06H6.04l2.9 2.9-1.3 1.3-4.9-4.9.1-.1v-.1l.7-.66v-.1h.1l4.26-3.9 1.22 1.4-2.8 2.62zm11.56-9.1H6.33l.3-.04c-1.32.5-2.1 1.1-2.52 2-.3.8-.4 1.6-.3 2.3l.1.2-1.7.4V12c-.14-1-.05-2.06.43-3.1.6-1.33 1.8-2.34 3.56-2.9l.13-.06H18L15.1 3l1.3-1.3 4.9 4.9-.08.1.08.1-.72.65v.1h-.1l-4.26 3.95-1.25-1.35 2.8-2.62z"
-      fill={fill}
-    />
-  </Svg>
-));
-
-Icon.propTypes = {
-  size: PropTypes.number,
-  fill: PropTypes.string,
-};
-
-export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/RepeatAll.js b/apolloschurchapp/src/ui/Icon/icons/RepeatAll.js
deleted file mode 100644
index ab0c962..0000000
--- a/apolloschurchapp/src/ui/Icon/icons/RepeatAll.js
+++ /dev/null
@@ -1,21 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-import Svg, { Path } from 'react-native-svg';
-
-import makeIcon from './makeIcon';
-
-const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
-  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
-    <Path
-      d="M2 12l3.87-5H22v10H5.87L2 12zm7.5-1.53l.55 1.73h-1.1l.56-1.73zm1.08 3.4h1.1L10.1 9.5H8.94l-1.6 4.38h1.1l.25-.82h1.6l.26.8zm5.47-4.37v4.38h3.1v-.9h-2V9.5h-1.1zm-3.78 0v4.38h3.1v-.9h-2V9.5h-1.1z"
-      fill={fill}
-    />
-  </Svg>
-));
-
-Icon.propTypes = {
-  size: PropTypes.number,
-  fill: PropTypes.string,
-};
-
-export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/RepeatOne.js b/apolloschurchapp/src/ui/Icon/icons/RepeatOne.js
deleted file mode 100644
index 65be25d..0000000
--- a/apolloschurchapp/src/ui/Icon/icons/RepeatOne.js
+++ /dev/null
@@ -1,21 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-import Svg, { Path } from 'react-native-svg';
-
-import makeIcon from './makeIcon';
-
-const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
-  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
-    <Path
-      d="M2 12l3.87-5H22v10H5.87L2 12zm7.55-.56v.67c0 .7-.32 1.1-.96 1.1-.7 0-1-.4-1-1.03v-.66c0-.63.3-1.05.93-1.05.63 0 .95.4.95 1.05zm1.1.62v-.57c0-1.2-.7-2-2.06-2-1.4 0-2.1.8-2.1 2v.5c0 1.13.7 2 2.03 2 1.35 0 2.06-.87 2.06-2zm5.5 1.9h3.28v-.9h-2.17v-.87h1.97v-.9h-1.97v-.88h2.17v-.9h-3.28v4.38zm-.9 0V9.6h-1.08v2.54l-1.7-2.55h-1.05v4.3h1.08v-2.5l1.7 2.55h1.05z"
-      fill={fill}
-    />
-  </Svg>
-));
-
-Icon.propTypes = {
-  size: PropTypes.number,
-  fill: PropTypes.string,
-};
-
-export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/Search.js b/apolloschurchapp/src/ui/Icon/icons/Search.js
deleted file mode 100644
index ce17480..0000000
--- a/apolloschurchapp/src/ui/Icon/icons/Search.js
+++ /dev/null
@@ -1,21 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-import Svg, { Path } from 'react-native-svg';
-
-import makeIcon from './makeIcon';
-
-const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
-  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
-    <Path
-      d="M20.77 18.56l-3.42-3.42c.82-1.24 1.3-2.72 1.3-4.3 0-4.33-3.5-7.84-7.82-7.84S3 6.5 3 10.83c0 4.3 3.5 7.82 7.83 7.82 1.6 0 3.07-.48 4.3-1.3l3.43 3.42c.3.3.8.3 1.1 0l1.1-1.1c.32-.3.32-.8 0-1.1zm-16.2-7.73c0-3.46 2.8-6.26 6.26-6.26 3.45 0 6.26 2.8 6.26 6.26 0 3.45-2.83 6.26-6.28 6.26-3.46 0-6.26-2.83-6.26-6.28z"
-      fill={fill}
-    />
-  </Svg>
-));
-
-Icon.propTypes = {
-  size: PropTypes.number,
-  fill: PropTypes.string,
-};
-
-export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/Sections.js b/apolloschurchapp/src/ui/Icon/icons/Sections.js
deleted file mode 100644
index ecbe137..0000000
--- a/apolloschurchapp/src/ui/Icon/icons/Sections.js
+++ /dev/null
@@ -1,21 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-import Svg, { Path } from 'react-native-svg';
-
-import makeIcon from './makeIcon';
-
-const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
-  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
-    <Path
-      d="M2.4,2.4 L2.4,8.4 L8.4,8.4 L8.4,2.4 L2.4,2.4 Z M1.2,0 L9.6,0 C10.2627417,0 10.8,0.5372583 10.8,1.2 L10.8,9.6 C10.8,10.2627417 10.2627417,10.8 9.6,10.8 L1.2,10.8 C0.5372583,10.8 0,10.2627417 0,9.6 L0,1.2 C0,0.5372583 0.5372583,0 1.2,0 Z M14.4,0 L22.8,0 C23.4627417,0 24,0.5372583 24,1.2 L24,9.6 C24,10.2627417 23.4627417,10.8 22.8,10.8 L14.4,10.8 C13.7372583,10.8 13.2,10.2627417 13.2,9.6 L13.2,1.2 C13.2,0.5372583 13.7372583,0 14.4,0 Z M15.6,2.4 L15.6,8.4 L21.6,8.4 L21.6,2.4 L15.6,2.4 Z M14.4,13.2 L22.8,13.2 C23.4627417,13.2 24,13.7372583 24,14.4 L24,22.8 C24,23.4627417 23.4627417,24 22.8,24 L14.4,24 C13.7372583,24 13.2,23.4627417 13.2,22.8 L13.2,14.4 C13.2,13.7372583 13.7372583,13.2 14.4,13.2 Z M15.6,15.6 L15.6,21.6 L21.6,21.6 L21.6,15.6 L15.6,15.6 Z M1.2,13.2 L9.6,13.2 C10.2627417,13.2 10.8,13.7372583 10.8,14.4 L10.8,22.8 C10.8,23.4627417 10.2627417,24 9.6,24 L1.2,24 C0.5372583,24 0,23.4627417 0,22.8 L0,14.4 C0,13.7372583 0.5372583,13.2 1.2,13.2 Z M2.4,15.6 L2.4,21.6 L8.4,21.6 L8.4,15.6 L2.4,15.6 Z"
-      fill={fill}
-    />
-  </Svg>
-));
-
-Icon.propTypes = {
-  size: PropTypes.number,
-  fill: PropTypes.string,
-};
-
-export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/Settings.js b/apolloschurchapp/src/ui/Icon/icons/Settings.js
deleted file mode 100644
index 8a5674e..0000000
--- a/apolloschurchapp/src/ui/Icon/icons/Settings.js
+++ /dev/null
@@ -1,21 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-import Svg, { Path } from 'react-native-svg';
-
-import makeIcon from './makeIcon';
-
-const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
-  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
-    <Path
-      d="M18.9108 12.8764c0-.0527.0054-.0964.034-.2803.035-.224.0505-.369.0505-.554 0-.535-.0164-.745-.1206-1.054l-.0246-.062-.643.283.443.541 1.775-1.419.055-.048c.379-.374.441-.861.217-1.303l-.018-.034-1.69-2.921-.046-.0803-.066-.066c-.299-.295-.754-.4074-1.228-.2514l-.039.014-2.113.8345.262.646.44-.543c-.4042-.3196-.756-.516-1.562-.914l-.315.622.6965-.1053-.338-2.17-.697.106.668.22C14.895 3.602 14.2855 3 13.642 3h-3.3812c-.5353 0-1.127.4382-1.127 1.0294h.7044l-.6968-.102-.338 2.2535.6967.101-.222-.66c-.293.096-.565.233-.874.427-.16.101-.687.459-.731.488l.391.578.271-.642-2.029-.834-.048-.018c-.512-.169-.948-.025-1.312.335l-.066.065-.047.081-1.691 2.922.612.345-.498-.492c-.454.448-.24 1.08.169 1.484l.033.033.038.0283 1.775 1.3353.427-.5534h-.705c0 .053-.005.0967-.034.2806-.035.224-.05.3693-.05.554 0 .5354.0167.7457.121 1.0546l.669-.22-.443-.541-1.775 1.419-.055.049c-.379.3742-.44.861-.216 1.3035l.019.034 1.69 2.921.047.081.067.066c.299.295.754.408 1.228.252l.039-.014 2.113-.835-.2616-.646-.44.543c.404.32.756.516 1.562.914l.315-.622-.6966.106.338 2.17.696-.1055H9.22c0 .589.5207 1.0298 1.127 1.0298h3.3813c.5355 0 1.127-.438 1.127-1.03h-.704l.6966.106.338-2.17-.696-.106.315.622c.806-.3974 1.157-.594 1.562-.913l-.44-.543-.262.646 2.113.8343.261-.645-.315.622c.517.2557 1.1934.033 1.452-.478l-.63-.311.6115.3455 1.6907-2.9214.018-.034c.249-.491.174-1.1504-.4-1.434l-.315.622.402-.5707-1.944-1.3355-.402.571h.7045zm-1.4088 0v.3634l.3022.2075 1.944 1.3354.0418.0287.0455.0224c-.1554-.0767-.2346-.21-.2477-.3262-.005-.0438.0008-.0737.0172-.106l.63.311-.6115-.3452-1.6906 2.9212-.019.034c.089-.1766.259-.2324.438-.144l-.054-.0238-2.114-.8346-.381-.1505-.321.2532c-.3.236-.596.402-1.312.755l-.326.161-.056.355-.338 2.17-.009.052v.053c0-.279.112-.362.282-.362h-3.381c.127 0 .281.13.281.361v-.054l-.008-.053-.338-2.17-.0558-.3557-.326-.161c-.7157-.353-1.012-.518-1.312-.755l-.3206-.253-.381.1502-2.113.834.262.646-.2225-.66c.0393-.013.14.012.2137.0846l-.498.492.6116-.345-1.69-2.921-.6116.345.63-.311c.038.0754.0178.2377-.0473.302l-.498-.492.443.5406 1.775-1.419.379-.303-.1548-.4574c-.04-.117-.049-.232-.049-.615 0-.097.009-.183.034-.3424.041-.2638.0505-.3394.0505-.492v-.344l-.278-.209-1.773-1.335-.427.553.498-.492c-.005-.0047-.011-.015-.0097-.01.0083.0262.015.0622.013.115-.0045.1236-.053.2596-.173.3777l.067-.066.0464-.081 1.691-2.921-.611-.345.498.4917c.022-.021.019-.019-.011-.009-.052.017-.101.016-.118.01l.223-.66-.271.642 2.029.8345.348.143.314-.2064c.062-.041.571-.3874.706-.472.22-.138.394-.226.563-.2816l.411-.135.0635-.4226.338-2.2535.0075-.0505v-.05c0 .278-.113.3615-.282.3615h3.381c-.221 0-.429-.2053-.33-.498l-.054.1595.026.1662.338 2.17.0553.3554.326.161c.716.353 1.0125.5186 1.312.7555l.321.253.381-.151 2.113-.8345-.2613-.646.223.66c-.039.013-.14-.012-.2137-.0848l.498-.492-.611.345 1.69 2.9213.6117-.345-.63.311c-.0385-.0756-.018-.238.0472-.302l.498.492-.443-.541-1.775 1.419-.379.304.1542.458.0245.063c.015.054.024.1694.024.552 0 .097-.009.183-.034.343-.041.2637-.0508.339-.0508.492zm-5.5506 1.391c-1.217 0-2.254-1.024-2.254-2.2257 0-1.2016 1.037-2.2256 2.254-2.2256s2.254 1.024 2.254 2.226-1.037 2.226-2.254 2.226zm0 1.391c1.995 0 3.6628-1.6468 3.6628-3.6167 0-1.97-1.6678-3.6167-3.6628-3.6167-1.995 0-3.663 1.6468-3.663 3.6167 0 1.97 1.668 3.6167 3.663 3.6167z"
-      fill={fill}
-    />
-  </Svg>
-));
-
-Icon.propTypes = {
-  size: PropTypes.number,
-  fill: PropTypes.string,
-};
-
-export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/Share.js b/apolloschurchapp/src/ui/Icon/icons/Share.js
deleted file mode 100644
index 2691126..0000000
--- a/apolloschurchapp/src/ui/Icon/icons/Share.js
+++ /dev/null
@@ -1,21 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-import Svg, { Path } from 'react-native-svg';
-
-import makeIcon from './makeIcon';
-
-const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
-  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
-    <Path
-      d="M12.8 3.621v8.6568h-1.6V3.5545L8.6046 6.224c-.3037.3124-.7962.3124-1.1 0-.3037-.3124-.3037-.819 0-1.1314l3.826-3.9352c.174-.179.41-.2554.637-.2293.227-.026.463.0505.637.2295l3.826 3.9352c.3037.3125.3037.819 0 1.1314-.3038.3125-.7963.3125-1.1 0L12.8 3.621zM8.0338 8v1.5556H6.4012c-.4785 0-.8012.2822-.8012.544v9.8007c0 .2617.3228.544.7997.544h11.2006c.477 0 .7997-.2823.7997-.544v-9.8006c0-.2623-.3216-.544-.796-.544h-1.623V8h1.623C18.927 8 20 8.9403 20 10.0997v9.8006C20 21.06 18.9254 22 17.6003 22H6.3997C5.0744 22 4 21.0597 4 19.9003v-9.8006C4 8.94 5.0743 8 6.4012 8h1.6326z"
-      fill={fill}
-    />
-  </Svg>
-));
-
-Icon.propTypes = {
-  size: PropTypes.number,
-  fill: PropTypes.string,
-};
-
-export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/Shuffle.js b/apolloschurchapp/src/ui/Icon/icons/Shuffle.js
deleted file mode 100644
index 0b521f6..0000000
--- a/apolloschurchapp/src/ui/Icon/icons/Shuffle.js
+++ /dev/null
@@ -1,21 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-import Svg, { Path } from 'react-native-svg';
-
-import makeIcon from './makeIcon';
-
-const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
-  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
-    <Path
-      d="M18.81 16.6543l-3.0324-3.0325 1.2128-1.2127 3.8464 3.8467.0167-.0156.4454.4778.7214.7215-.0252.0252.028.03-.8566.7986-.359.359-.0125-.0125-3.9745 3.7064-1.1697-1.2544 2.851-2.6588h-3.639c-1.3287 0-2.3808-.7553-3.2627-2.112-.6044-.9298.659-2.4274 1.0328-1.6996.7637 1.487 1.3937 2.0333 2.23 2.0333h3.947zm.1715-10.9927l-2.796-2.7958 1.213-1.2127 3.8463 3.8466.0167-.0155.4455.4777.7215.7216-.0252.0252.028.03-.8566.7986-.359.359-.0125-.0125-3.9746 3.7064-1.1697-1.2544L19.164 7.44h-4.301c-1.2457 0-2.0337 1.2122-3.4872 4.9388-.828 2.123-1.221 3.012-1.8256 3.942-.882 1.3566-1.934 2.112-3.2626 2.112H2v-1.7785h4.2876c1.2456 0 2.0336-1.2122 3.487-4.9388.8282-2.123 1.2212-3.012 1.8257-3.942.882-1.3566 1.934-2.112 3.2626-2.112h4.1184zM6.2875 7.44H2V5.6617h4.2876c1.3286 0 2.3807.7553 3.2626 2.112.6045.9298-.3475 2.6184-.7595 1.8623-.703-1.2902-1.7178-2.196-2.503-2.196z"
-      fill={fill}
-    />
-  </Svg>
-));
-
-Icon.propTypes = {
-  size: PropTypes.number,
-  fill: PropTypes.string,
-};
-
-export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/SkipNext.js b/apolloschurchapp/src/ui/Icon/icons/SkipNext.js
deleted file mode 100644
index 7cdfe6e..0000000
--- a/apolloschurchapp/src/ui/Icon/icons/SkipNext.js
+++ /dev/null
@@ -1,21 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-import Svg, { Path } from 'react-native-svg';
-
-import makeIcon from './makeIcon';
-
-const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
-  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
-    <Path
-      d="M13.78 4.168v15.67c0 .116.01.173.004.16-.07-.15-.238-.318-.502-.42-.265-.1-.512-.09-.678-.03-.013.006.038-.028.127-.11l7.404-6.805c.322-.296.325-.784.006-1.083l-7.437-6.977c-.09-.084-.142-.12-.13-.114.17.062.424.074.697-.028.272-.103.442-.276.514-.43.005-.012-.005.046-.005.164zm-1.626 0c0-1.24.763-1.528 1.707-.642l7.44 6.977c.943.885.935 2.31-.02 3.188l-7.4 6.808c-.952.876-1.724.58-1.724-.657V4.168zM2 4.168c0-1.24.78-1.54 1.737-.674l7.377 6.667c.96.87.978 2.297.048 3.185L3.69 20.47c-.934.89-1.69.606-1.69-.63V4.167zm1.625 0v15.67c0 .12.01.178.005.166-.072-.157-.245-.332-.522-.436-.28-.105-.54-.09-.712-.022-.015.005.036-.03.124-.113l7.472-7.13c.313-.297.306-.784-.017-1.075L2.6 4.56c-.09-.078-.14-.11-.126-.106.164.06.407.066.665-.033.255-.1.42-.262.49-.41.003-.01-.007.045-.007.16z"
-      fill={fill}
-    />
-  </Svg>
-));
-
-Icon.propTypes = {
-  size: PropTypes.number,
-  fill: PropTypes.string,
-};
-
-export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/SkipPrevious.js b/apolloschurchapp/src/ui/Icon/icons/SkipPrevious.js
deleted file mode 100644
index 818867d..0000000
--- a/apolloschurchapp/src/ui/Icon/icons/SkipPrevious.js
+++ /dev/null
@@ -1,21 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-import Svg, { Path } from 'react-native-svg';
-
-import makeIcon from './makeIcon';
-
-const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
-  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
-    <Path
-      d="M11.846 4.168v15.67c0 1.238-.772 1.534-1.725.658l-7.4-6.805c-.95-.87-.96-2.3-.01-3.18l7.44-6.97c.95-.88 1.71-.59 1.71.64zm-1.625 0c0-.118-.01-.176 0-.165.07.155.24.328.52.43.28.103.53.09.7.026.02-.01-.04.03-.13.11l-7.44 6.98c-.32.3-.31.78.01 1.08l7.4 6.8c.09.08.14.11.13.11-.162-.06-.41-.07-.68.03-.26.1-.43.27-.5.42-.002.01.008-.05.008-.16V4.17zm11.78 0v15.67c0 1.238-.75 1.523-1.69.633l-7.47-7.12c-.93-.89-.91-2.31.05-3.18l7.38-6.67c.95-.87 1.73-.57 1.73.67zm-1.62 0c0-.115-.01-.17 0-.16.07.148.24.313.49.413.26.1.51.1.67.04.02 0-.03.03-.12.11l-7.38 6.66c-.32.29-.33.78-.012 1.08l7.47 7.13c.09.09.14.12.125.11-.173-.07-.433-.09-.712.02-.274.1-.45.28-.52.44-.004.01.006-.04.006-.16V4.17z"
-      fill={fill}
-    />
-  </Svg>
-));
-
-Icon.propTypes = {
-  size: PropTypes.number,
-  fill: PropTypes.string,
-};
-
-export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/Text.js b/apolloschurchapp/src/ui/Icon/icons/Text.js
deleted file mode 100644
index c9f763d..0000000
--- a/apolloschurchapp/src/ui/Icon/icons/Text.js
+++ /dev/null
@@ -1,21 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-import Svg, { Path } from 'react-native-svg';
-
-import makeIcon from './makeIcon';
-
-const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
-  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
-    <Path
-      d="M4.6 3.64v16.356c0 .004 0 .004-.003.004h14.806c-.004 0-.003 0-.003-.004V3.64c0-.004 0-.004.003-.004H4.597c.004 0 .003 0 .003.004zm-1.6 0C3 2.734 3.717 2 4.597 2h14.806C20.285 2 21 2.734 21 3.64v16.356c0 .906-.717 1.64-1.597 1.64H4.597c-.882 0-1.597-.734-1.597-1.64V3.64zm4 3.27c0 .45.366.817.818.817h8.364c.452 0 .818-.366.818-.818 0-.454-.366-.82-.818-.82H7.818c-.452 0-.818.366-.818.82zm0 4.908c0 .452.366.818.818.818h8.364c.452 0 .818-.366.818-.818 0-.452-.366-.818-.818-.818H7.818c-.452 0-.818.366-.818.818zm0 4.91c0 .45.366.817.818.817h4.764c.452 0 .818-.366.818-.818 0-.452-.366-.818-.818-.818H7.818c-.452 0-.818.364-.818.816z"
-      fill={fill}
-    />
-  </Svg>
-));
-
-Icon.propTypes = {
-  size: PropTypes.number,
-  fill: PropTypes.string,
-};
-
-export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/Time.js b/apolloschurchapp/src/ui/Icon/icons/Time.js
deleted file mode 100644
index 03096b9..0000000
--- a/apolloschurchapp/src/ui/Icon/icons/Time.js
+++ /dev/null
@@ -1,21 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-import Svg, { Path } from 'react-native-svg';
-
-import makeIcon from './makeIcon';
-
-const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
-  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
-    <Path
-      d="M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8zm.5-13H11v6l5.25 3.15.75-1.23-4.5-2.67V7z"
-      fill={fill}
-    />
-  </Svg>
-));
-
-Icon.propTypes = {
-  size: PropTypes.number,
-  fill: PropTypes.string,
-};
-
-export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/Umbrella.js b/apolloschurchapp/src/ui/Icon/icons/Umbrella.js
deleted file mode 100644
index c146811..0000000
--- a/apolloschurchapp/src/ui/Icon/icons/Umbrella.js
+++ /dev/null
@@ -1,21 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-import Svg, { Path } from 'react-native-svg';
-
-import makeIcon from './makeIcon';
-
-const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
-  <Svg width={size} height={size} viewBox="0 0 32 32" {...otherProps}>
-    <Path
-      d="M27 14h5c0-1.105-1.119-2-2.5-2s-2.5 0.895-2.5 2v0zM27 14c0-1.105-1.119-2-2.5-2s-2.5 0.895-2.5 2c0-1.105-1.119-2-2.5-2s-2.5 0.895-2.5 2v0 14c0 1.112-0.895 2-2 2-1.112 0-2-0.896-2-2.001v-1.494c0-0.291 0.224-0.505 0.5-0.505 0.268 0 0.5 0.226 0.5 0.505v1.505c0 0.547 0.444 0.991 1 0.991 0.552 0 1-0.451 1-0.991v-14.009c0-1.105-1.119-2-2.5-2s-2.5 0.895-2.5 2c0-1.105-1.119-2-2.5-2s-2.5 0.895-2.5 2c0-1.105-1.119-2-2.5-2s-2.5 0.895-2.5 2c0-5.415 6.671-9.825 15-9.995v-1.506c0-0.283 0.224-0.499 0.5-0.499 0.268 0 0.5 0.224 0.5 0.499v1.506c8.329 0.17 15 4.58 15 9.995h-5z"
-      fill={fill}
-    />
-  </Svg>
-));
-
-Icon.propTypes = {
-  size: PropTypes.number,
-  fill: PropTypes.string,
-};
-
-export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/Video.js b/apolloschurchapp/src/ui/Icon/icons/Video.js
deleted file mode 100644
index 702bed5..0000000
--- a/apolloschurchapp/src/ui/Icon/icons/Video.js
+++ /dev/null
@@ -1,21 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-import Svg, { Path } from 'react-native-svg';
-
-import makeIcon from './makeIcon';
-
-const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
-  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
-    <Path
-      d="M3.8182 5.7778v12.4444H14.2V5.7778H3.8182zM16 6v12c0 1.1046-.8954 2-2 2H4c-1.1046 0-2-.8954-2-2V6c0-1.1046.8954-2 2-2h10c1.1046 0 2 .8954 2 2zm4.1818 2.6952L16 11.8084v.3832l4.1818 3.251V8.695zM16 14.4957V9.4253l6-4.2178v13.585l-6-4.2968z"
-      fill={fill}
-    />
-  </Svg>
-));
-
-Icon.propTypes = {
-  size: PropTypes.number,
-  fill: PropTypes.string,
-};
-
-export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/Warning.js b/apolloschurchapp/src/ui/Icon/icons/Warning.js
deleted file mode 100644
index abd015a..0000000
--- a/apolloschurchapp/src/ui/Icon/icons/Warning.js
+++ /dev/null
@@ -1,21 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-import Svg, { Path } from 'react-native-svg';
-
-import makeIcon from './makeIcon';
-
-const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
-  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
-    <Path
-      d="M21.8955 19.741l-9.091-16.3178c-.3145-.5643-1.2945-.5643-1.609 0L2.1045 19.741c-.148.2662-.138.5865.0255.8433.1655.2585.46.4157.779.4157h18.182c.319 0 .6136-.1572.778-.4148.1647-.2577.1747-.578.0265-.8442zM12 18.4235c-.5018 0-.909-.3847-.909-.8588 0-.474.4072-.8588.909-.8588.502 0 .909.3845.909.8586 0 .474-.407.8588-.909.8588zm.909-3.4353h-1.818V8.9764h1.818v6.0118z"
-      fill={fill}
-    />
-  </Svg>
-));
-
-Icon.propTypes = {
-  size: PropTypes.number,
-  fill: PropTypes.string,
-};
-
-export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/index.js b/apolloschurchapp/src/ui/Icon/icons/index.js
deleted file mode 100644
index b4385c6..0000000
--- a/apolloschurchapp/src/ui/Icon/icons/index.js
+++ /dev/null
@@ -1,53 +0,0 @@
-export { default as ArrowBack } from './ArrowBack';
-export { default as ArrowDown } from './ArrowDown';
-export { default as ArrowNext } from './ArrowNext';
-export { default as ArrowUp } from './ArrowUp';
-export { default as Audio } from './Audio';
-export { default as Bank } from './Bank';
-export { default as Building } from './Building';
-export { default as BrandIcon } from './BrandIcon';
-export { default as Calendar } from './Calendar';
-export { default as Camera } from './Camera';
-export { default as Check } from './Check';
-export { default as CheckboxChecked } from './CheckboxChecked';
-export { default as CheckboxUnchecked } from './CheckboxUnchecked';
-export { default as Chromecast } from './Chromecast';
-export { default as Close } from './Close';
-export { default as Credit } from './Credit';
-export { default as Download } from './Download';
-export { default as Dropdown } from './Dropdown';
-export { default as Empty } from './Empty';
-export { default as Failed } from './Failed';
-export { default as Filter } from './Filter';
-export { default as Fullscreen } from './Fullscreen';
-export { default as Groups } from './Groups';
-export { default as Home } from './Home';
-export { default as Information } from './Information';
-export { default as Like } from './Like';
-export { default as LikeSolid } from './LikeSolid';
-export { default as Locate } from './Locate';
-export { default as Lock } from './Lock';
-export { default as Pause } from './Pause';
-export { default as Pin } from './Pin';
-export { default as Play } from './Play';
-export { default as Print } from './Print';
-export { default as Profile } from './Profile';
-export { default as RadioChecked } from './RadioChecked';
-export { default as RadioUnchecked } from './RadioUnchecked';
-export { default as Repeat } from './Repeat';
-export { default as RepeatAll } from './RepeatAll';
-export { default as RepeatOne } from './RepeatOne';
-export { default as Search } from './Search';
-export { default as Sections } from './Sections';
-export { default as Settings } from './Settings';
-export { default as Share } from './Share';
-export { default as Shuffle } from './Shuffle';
-export { default as SkipNext } from './SkipNext';
-export { default as SkipPrevious } from './SkipPrevious';
-export { default as Text } from './Text';
-export { default as Time } from './Time';
-export { default as Umbrella } from './Umbrella';
-export { default as Video } from './Video';
-export { default as Warning } from './Warning';
-export { default as CircleOutlineCheckMark } from './CircleOutlineCheckMark';
-export { default as CircleOutlineXMark } from './CircleOutlineXMark';
diff --git a/apolloschurchapp/src/ui/Icon/icons/makeIcon.js b/apolloschurchapp/src/ui/Icon/icons/makeIcon.js
deleted file mode 100644
index ead36b1..0000000
--- a/apolloschurchapp/src/ui/Icon/icons/makeIcon.js
+++ /dev/null
@@ -1,10 +0,0 @@
-import { withTheme } from 'apolloschurchapp/src/ui/theme';
-
-// Currently used to inject default fill color to icons.
-// Eventually can be used for other shared functionality between icons
-const makeIcon = withTheme(({ theme, fill, ...otherProps } = {}) => ({
-  fill: fill || theme.colors.text.primary,
-  ...otherProps,
-}));
-
-export default makeIcon;
diff --git a/apolloschurchapp/src/ui/Icon/index.js b/apolloschurchapp/src/ui/Icon/index.js
deleted file mode 100644
index f213544..0000000
--- a/apolloschurchapp/src/ui/Icon/index.js
+++ /dev/null
@@ -1,45 +0,0 @@
-import PropTypes from 'prop-types';
-import React from 'react';
-import { compose, pure } from 'recompose';
-import { flow, camelCase, upperFirst, kebabCase } from 'lodash';
-
-import Placeholder from 'apolloschurchapp/src/ui/Placeholder';
-
-import * as Icons from './icons';
-
-const pascalCase = (string) =>
-  flow(
-    camelCase,
-    upperFirst
-  )(string);
-
-// Convenience component to render icons based on the icon's string name, like:
-// <Icon name="skip-next" {...allOtherPropsPassedToComponent} />
-//
-// Can also import the icon directly:
-// import { SkipNext } from 'Icon/icons';
-// <SkipNext />
-
-const enhance = compose(pure);
-
-const Icon = enhance(({ name, size, isLoading = false, ...otherProps }) => {
-  const IconComponent = Icons[pascalCase(name)];
-  return (
-    <Placeholder.Media size={size} hasRadius onReady={!isLoading}>
-      <IconComponent size={size} {...otherProps} />
-    </Placeholder.Media>
-  );
-});
-
-Icon.propTypes = {
-  name: PropTypes.oneOf(Object.keys(Icons).map(kebabCase)).isRequired,
-  size: PropTypes.number,
-  fill: PropTypes.string,
-  isLoading: PropTypes.bool,
-};
-
-Icon.defaultProps = {
-  size: 32, // 32 is the default size used within the svg component
-};
-
-export default Icon;
diff --git a/apolloschurchapp/src/ui/LandingScreen/LandingScreen.stories.js b/apolloschurchapp/src/ui/LandingScreen/LandingScreen.stories.js
new file mode 100644
index 0000000..d9ebd3c
--- /dev/null
+++ b/apolloschurchapp/src/ui/LandingScreen/LandingScreen.stories.js
@@ -0,0 +1,23 @@
+import React from 'react';
+import { storiesOf } from '@apollosproject/ui-storybook';
+import { GradientOverlayImage } from '@apollosproject/ui-kit';
+
+import LandingScreen from '.';
+
+storiesOf('LandingScreen', module)
+  .add('default', () => <LandingScreen />)
+  .add('slideTitle', () => <LandingScreen slideTitle={'Custom title text'} />)
+  .add('description', () => (
+    <LandingScreen description={'Custom description text'} />
+  ))
+  .add('textColor', () => <LandingScreen textColor={'salmon'} />)
+  .add('ImageComponent', () => (
+    <LandingScreen
+      BackgroundComponent={
+        <GradientOverlayImage
+          source={'https://picsum.photos/375/812/?random'}
+        />
+      }
+    />
+  ))
+  .add('Slide props', () => <LandingScreen onPressPrimary={() => {}} />);
diff --git a/apolloschurchapp/src/ui/LandingScreen/LandingScreen.tests.js b/apolloschurchapp/src/ui/LandingScreen/LandingScreen.tests.js
new file mode 100644
index 0000000..c60a3b9
--- /dev/null
+++ b/apolloschurchapp/src/ui/LandingScreen/LandingScreen.tests.js
@@ -0,0 +1,64 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+import { GradientOverlayImage } from '@apollosproject/ui-kit';
+
+import Providers from '../../Providers';
+
+import LandingScreen from '.';
+
+describe('The Onboarding LandingScreen component', () => {
+  it('should render', () => {
+    const tree = renderer.create(
+      <Providers>
+        <LandingScreen />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a custom title', () => {
+    const tree = renderer.create(
+      <Providers>
+        <LandingScreen slideTitle={'Custom title text'} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a custom description', () => {
+    const tree = renderer.create(
+      <Providers>
+        <LandingScreen description={'Custom description text'} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render with a custom text color', () => {
+    const tree = renderer.create(
+      <Providers>
+        <LandingScreen textColor={'salmon'} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render with an ImageComponent', () => {
+    const tree = renderer.create(
+      <Providers>
+        <LandingScreen
+          BackgroundComponent={
+            <GradientOverlayImage
+              source={'https://picsum.photos/375/812/?random'}
+            />
+          }
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should pass additional props to Slide', () => {
+    const tree = renderer.create(
+      <Providers>
+        <LandingScreen onPressPrimary={jest.fn()} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/LandingScreen/index.js b/apolloschurchapp/src/ui/LandingScreen/index.js
new file mode 100644
index 0000000..d803a8d
--- /dev/null
+++ b/apolloschurchapp/src/ui/LandingScreen/index.js
@@ -0,0 +1,86 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+
+import {
+  styled,
+  withTheme,
+  Icon,
+  H1,
+  H4,
+  PaddedView,
+  BackgroundView,
+} from '@apollosproject/ui-kit';
+
+import { Slide } from '@apollosproject/ui-onboarding';
+
+const Content = styled({
+  flex: 1,
+  justifyContent: 'center',
+})(PaddedView);
+
+const BrandIcon = withTheme(({ theme, color }) => ({
+  name: 'brand-icon',
+  size: theme.sizing.baseUnit * 3,
+  ...(color ? { fill: color } : {}),
+  style: {
+    marginBottom: theme.sizing.baseUnit,
+  },
+}))(Icon);
+
+const Title = styled(({ theme, color }) => ({
+  marginBottom: theme.sizing.baseUnit,
+  ...(color ? { color } : {}),
+}))(H1);
+
+const StyledH4 = styled(({ color }) => ({
+  ...(color ? { color } : {}),
+}))(H4);
+
+const LandingScreen = ({
+  slideTitle,
+  description,
+  textColor,
+  BackgroundComponent,
+  ...props
+}) => (
+  <BackgroundView>
+    <Slide {...props} scrollEnabled={false}>
+      {BackgroundComponent}
+      <Content>
+        <BrandIcon color={textColor} />
+        <Title color={textColor}>{slideTitle}</Title>
+        <StyledH4 color={textColor}>{description}</StyledH4>
+      </Content>
+    </Slide>
+  </BackgroundView>
+);
+
+LandingScreen.propTypes = {
+  /* The `Swiper` component used in `<onBoarding>` looks for and hijacks the title prop of it's
+   * children. Thus we have to use more unique name.
+   */
+  slideTitle: PropTypes.string,
+  description: PropTypes.string,
+  textColor: PropTypes.string, // Use for custom text and `BrandIcon` color when overlaying text on an image or video needs more clarity. Defaults to theme driven colors.
+  /* Recommended usage:
+   * - `Image` (react-native)
+   * - `GradientOverlayImage` (@apollosproject/ui-kit) for increased readability
+   * - `Video` (react-native-video) because moving pictures!
+   */
+  BackgroundComponent: PropTypes.oneOfType([
+    PropTypes.arrayOf(PropTypes.node),
+    PropTypes.node,
+  ]),
+};
+
+LandingScreen.defaultProps = {
+  slideTitle: "We're glad you're here.",
+  description:
+    "We're not just a building you go to, but a family to belong to.",
+};
+
+LandingScreen.navigationOptions = {
+  header: null,
+};
+
+export default LandingScreen;
diff --git a/apolloschurchapp/src/ui/Like/Like.tests.js b/apolloschurchapp/src/ui/Like/Like.tests.js
deleted file mode 100644
index 6c9cf26..0000000
--- a/apolloschurchapp/src/ui/Like/Like.tests.js
+++ /dev/null
@@ -1,38 +0,0 @@
-import React from 'react';
-import renderer from 'react-test-renderer';
-
-import Providers from 'apolloschurchapp/src/Providers';
-
-import Like from '.';
-
-describe('the Share component', () => {
-  it('should render a Like', () => {
-    const tree = renderer.create(
-      <Providers>
-        <Like
-          itemId={'abc'}
-          sessionId={'123'}
-          isLiked={false}
-          operation={'Like'}
-          toggleLike={(data) => data}
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-
-  it('should render a UnLike', () => {
-    const tree = renderer.create(
-      <Providers>
-        <Like
-          itemId={'abc'}
-          sessionId={'123'}
-          isLiked
-          operation={'Unlike'}
-          toggleLike={(data) => data}
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/ui/Like/index.js b/apolloschurchapp/src/ui/Like/index.js
deleted file mode 100644
index 40c8904..0000000
--- a/apolloschurchapp/src/ui/Like/index.js
+++ /dev/null
@@ -1,30 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-import { compose, pure } from 'recompose';
-import Icon from 'apolloschurchapp/src/ui/Icon';
-import Touchable from 'apolloschurchapp/src/ui/Touchable';
-import { withTheme } from 'apolloschurchapp/src/ui/theme';
-
-const enhance = compose(
-  pure,
-  withTheme()
-);
-
-const Like = enhance(
-  ({ isLiked, toggleLike, itemId, sessionId, operation, theme }) => (
-    <Touchable onPress={() => toggleLike({ itemId, sessionId, operation })}>
-      <Icon
-        name={isLiked ? 'like-solid' : 'like'}
-        fill={theme.colors.secondary}
-      />
-    </Touchable>
-  )
-);
-
-Like.propTypes = {
-  id: PropTypes.string,
-  isLike: PropTypes.bool,
-  toggleLike: PropTypes.func,
-};
-
-export default Like;
diff --git a/apolloschurchapp/src/ui/LikeContentButton/Like.tests.js b/apolloschurchapp/src/ui/LikeContentButton/Like.tests.js
new file mode 100644
index 0000000..41cc70f
--- /dev/null
+++ b/apolloschurchapp/src/ui/LikeContentButton/Like.tests.js
@@ -0,0 +1,26 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from '../../Providers';
+
+import { LikeIcon } from '.';
+
+describe('the LikeContentButton component', () => {
+  it('should render a Like', () => {
+    const tree = renderer.create(
+      <Providers>
+        <LikeIcon itemId={'abc'} isLiked={false} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+
+  it('should render a UnLike', () => {
+    const tree = renderer.create(
+      <Providers>
+        <LikeIcon itemId={'abc'} isLiked />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/LikeContentButton/index.js b/apolloschurchapp/src/ui/LikeContentButton/index.js
new file mode 100644
index 0000000..3a58e27
--- /dev/null
+++ b/apolloschurchapp/src/ui/LikeContentButton/index.js
@@ -0,0 +1,36 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+
+import { Icon, withTheme } from '@apollosproject/ui-kit';
+import { ProtectedTouchable } from '@apollosproject/ui-auth';
+
+import { withNavigation } from 'react-navigation';
+
+const LikeIcon = withTheme(
+  ({ theme: { colors: { secondary } = {} } = {}, isLiked } = {}) => ({
+    name: isLiked ? 'like-solid' : 'like',
+    fill: secondary,
+  })
+)(Icon);
+
+LikeIcon.propTypes = {
+  isLiked: PropTypes.bool,
+};
+
+const LikeContentButton = withNavigation(({ isLiked, toggleLike, itemId }) => (
+  <ProtectedTouchable
+    onPress={() =>
+      toggleLike({ itemId, operation: isLiked ? 'Unlike' : 'Like' })
+    }
+  >
+    <LikeIcon isLiked={isLiked} />
+  </ProtectedTouchable>
+));
+
+LikeContentButton.propTypes = {
+  itemId: PropTypes.string,
+  isLiked: PropTypes.bool,
+  toggleLike: PropTypes.func,
+};
+
+export { LikeContentButton as default, LikeIcon };
diff --git a/apolloschurchapp/src/ui/LikeContentButtonConnected/LikeButton.tests.js b/apolloschurchapp/src/ui/LikeContentButtonConnected/LikeButton.tests.js
new file mode 100644
index 0000000..5a66dd1
--- /dev/null
+++ b/apolloschurchapp/src/ui/LikeContentButtonConnected/LikeButton.tests.js
@@ -0,0 +1,114 @@
+// import React from 'react';
+// import renderer from 'react-test-renderer';
+
+// import Providers from '../Providers';
+// import gql from 'graphql-tag';
+
+// import LikeContentButtonConnected from '.';
+
+describe('the LikeContentButtonConnected component', () => {
+  it('should render', () => {
+    //     const updateLikeEntity = {
+    //       request: {
+    //         query: gql`
+    //           mutation updateLikeEntity($itemId: ID!, $operation: LIKE_OPERATION!) {
+    //             updateLikeEntity(
+    //               input: { nodeId: $itemId, operation: $operation }
+    //             ) {
+    //               id
+    //               operation
+    //               interactionDateTime
+    //             }
+    //           }
+    //         `,
+    //         variables: {
+    //           itemId: 'asdf',
+    //           operation: 'Like',
+    //         },
+    //       },
+    //       result: {
+    //         data: {
+    //           node: { isLiked: true },
+    //         },
+    //       },
+    //     };
+    //     const getLikedContentItem = {
+    //       request: {
+    //         query: gql`
+    //           query getLikedContentItem($itemId: ID!) {
+    //             node(id: $itemId) {
+    //               ... on ContentItem {
+    //                 id
+    //                 isLiked
+    //               }
+    //             }
+    //           }
+    //         `,
+    //         variables: {
+    //           itemId: 'asdf',
+    //         },
+    //       },
+    //       result: {
+    //         data: {
+    //           updateLikeEntity: { operation: 'Like' },
+    //         },
+    //       },
+    //     };
+    //     const tree = renderer.create(
+    //       <Providers mocks={[updateLikeEntity, getLikedContentItem]}>
+    //         <LikeContentButtonConnected itemId={'asdf'} />
+    //       </Providers>
+    //     );
+    //     expect(tree).toMatchSnapshot();
+  });
+  it('should render when loading', () => {
+    //     const updateLikeEntity = {
+    //       request: {
+    //         query: gql`
+    //           mutation updateLikeEntity($itemId: ID!, $operation: LIKE_OPERATION!) {
+    //             updateLikeEntity(
+    //               input: { nodeId: $itemId, operation: $operation }
+    //             ) {
+    //               id
+    //               operation
+    //               interactionDateTime
+    //             }
+    //           }
+    //         `,
+    //         variables: {
+    //           itemId: 'asdf',
+    //           operation: 'Like',
+    //         },
+    //       },
+    //       result: {
+    //         data: {
+    //           node: { isLiked: true },
+    //         },
+    //       },
+    //     };
+    //     const getLikedContentItem = {
+    //       request: {
+    //         query: gql`
+    //           query getLikedContentItem($itemId: ID!) {
+    //             node(id: $itemId) {
+    //               ... on ContentItem {
+    //                 id
+    //                 isLiked
+    //               }
+    //             }
+    //           }
+    //         `,
+    //         variables: {
+    //           itemId: 'asdf',
+    //         },
+    //       },
+    //       result: null,
+    //     };
+    //     const tree = renderer.create(
+    //       <Providers mocks={[updateLikeEntity, getLikedContentItem]}>
+    //         <LikeContentButtonConnected itemId={'asdf'} />
+    //       </Providers>
+    //     );
+    //     expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/content-single/getLikedContentItem.js b/apolloschurchapp/src/ui/LikeContentButtonConnected/getLikedContentItem.js
similarity index 100%
rename from apolloschurchapp/src/content-single/getLikedContentItem.js
rename to apolloschurchapp/src/ui/LikeContentButtonConnected/getLikedContentItem.js
diff --git a/apolloschurchapp/src/ui/LikeContentButtonConnected/index.js b/apolloschurchapp/src/ui/LikeContentButtonConnected/index.js
new file mode 100644
index 0000000..6bf7b1e
--- /dev/null
+++ b/apolloschurchapp/src/ui/LikeContentButtonConnected/index.js
@@ -0,0 +1,123 @@
+import React from 'react';
+
+import PropTypes from 'prop-types';
+import { get } from 'lodash';
+import { Query, Mutation } from 'react-apollo';
+
+import { AnalyticsConsumer } from '@apollosproject/ui-analytics';
+import LikeContentButton from '../LikeContentButton';
+
+import UPDATE_LIKE_ENTITY from './updateLikeEntity';
+import GET_LIKED_CONTENT_ITEM from './getLikedContentItem';
+import updateLikedContent from './updateLikedContent';
+
+const GetLikeData = ({ itemId, children }) => (
+  <Query query={GET_LIKED_CONTENT_ITEM} variables={{ itemId }}>
+    {({ data: { node = {} } = {}, loading }) => {
+      const isLiked = loading ? false : get(node, 'isLiked') || false;
+      return children({ isLiked, item: node });
+    }}
+  </Query>
+);
+
+GetLikeData.propTypes = {
+  itemId: PropTypes.string,
+  children: PropTypes.func.isRequired,
+};
+
+const UpdateLikeStatus = ({
+  itemId,
+  item = { __typename: null },
+  isLiked,
+  children,
+}) => (
+  <AnalyticsConsumer>
+    {({ track }) => (
+      <Mutation
+        mutation={UPDATE_LIKE_ENTITY}
+        optimisticResponse={{
+          updateLikeEntity: {
+            id: itemId, // unknown at this time
+            isLiked: !isLiked,
+            likedCount: 0, // field required but exact value is not needed
+            __typename: item && item.__typename,
+          },
+        }}
+        update={(
+          cache,
+          {
+            data: {
+              updateLikeEntity: { isLiked: liked },
+            },
+          }
+        ) => {
+          updateLikedContent({ liked, cache, item });
+          cache.writeQuery({
+            query: GET_LIKED_CONTENT_ITEM,
+            data: {
+              node: {
+                ...item,
+                isLiked: liked,
+              },
+            },
+          });
+        }}
+      >
+        {(createNewInteraction) =>
+          itemId
+            ? children({
+                itemId,
+                isLiked,
+                toggleLike: async (variables) => {
+                  try {
+                    await createNewInteraction({ variables });
+                    track({
+                      eventName: isLiked ? 'UnlikeContent' : 'LikeContent',
+                      properties: {
+                        id: itemId,
+                      },
+                    });
+                  } catch (e) {
+                    throw e.message;
+                  }
+                },
+              })
+            : null
+        }
+      </Mutation>
+    )}
+  </AnalyticsConsumer>
+);
+
+UpdateLikeStatus.propTypes = {
+  itemId: PropTypes.string,
+  children: PropTypes.func.isRequired,
+  isLiked: PropTypes.bool.isRequired,
+  item: PropTypes.shape({
+    id: PropTypes.string,
+    __typename: PropTypes.string,
+    isLiked: PropTypes.bool,
+  }),
+};
+
+const LikeContentButtonConnected = ({ itemId }) => (
+  <GetLikeData itemId={itemId}>
+    {({ isLiked, item }) => (
+      <UpdateLikeStatus itemId={itemId} item={item} isLiked={isLiked}>
+        {({ toggleLike, isLiked: newLikeValue }) => (
+          <LikeContentButton
+            itemId={itemId}
+            isLiked={newLikeValue}
+            toggleLike={toggleLike}
+          />
+        )}
+      </UpdateLikeStatus>
+    )}
+  </GetLikeData>
+);
+
+LikeContentButtonConnected.propTypes = {
+  itemId: PropTypes.string,
+};
+
+export default LikeContentButtonConnected;
diff --git a/apolloschurchapp/src/ui/LikeContentButtonConnected/updateLikeEntity.js b/apolloschurchapp/src/ui/LikeContentButtonConnected/updateLikeEntity.js
new file mode 100644
index 0000000..986d867
--- /dev/null
+++ b/apolloschurchapp/src/ui/LikeContentButtonConnected/updateLikeEntity.js
@@ -0,0 +1,11 @@
+import gql from 'graphql-tag';
+
+export default gql`
+  mutation updateLikeEntity($itemId: ID!, $operation: LIKE_OPERATION!) {
+    updateLikeEntity(input: { nodeId: $itemId, operation: $operation }) {
+      id
+      isLiked
+      likedCount
+    }
+  }
+`;
diff --git a/apolloschurchapp/src/ui/LikeContentButtonConnected/updateLikedContent.js b/apolloschurchapp/src/ui/LikeContentButtonConnected/updateLikedContent.js
new file mode 100644
index 0000000..b8b52ea
--- /dev/null
+++ b/apolloschurchapp/src/ui/LikeContentButtonConnected/updateLikedContent.js
@@ -0,0 +1,82 @@
+import ApollosConfig from '@apollosproject/config';
+import GET_ALL_LIKED_CONTENT from '../../tabs/connect/getLikedContent';
+
+const addItemToLikedContentList = ({ cache, item, variables }) => {
+  try {
+    const data = cache.readQuery({
+      query: GET_ALL_LIKED_CONTENT,
+      variables,
+    });
+    const fullItem = cache.readFragment({
+      id: `${item.__typename}:${item.id}`,
+      fragment: ApollosConfig.FRAGMENTS.CONTENT_CARD_FRAGMENT,
+      fragmentName: 'contentCardFragment',
+    });
+    const newEdges = [
+      fullItem,
+      ...data.likedContent.edges.map(({ node }) => node),
+    ].map((node) => ({
+      __typename: 'ContentItemsConnectionEdge',
+      node: {
+        ...node,
+        isLiked: true,
+      },
+    }));
+    cache.writeQuery({
+      query: GET_ALL_LIKED_CONTENT,
+      variables,
+      data: {
+        ...data,
+        likedContent: {
+          ...data.likedContent,
+          edges: newEdges,
+        },
+      },
+    });
+  } catch (e) {
+    console.log(e);
+    // Most likely we haven't ran the `getAllLikedContent` query yet.
+    // We can safely exit.
+  }
+};
+
+const removeItemFromLikedContentList = ({ cache, item, variables }) => {
+  try {
+    const data = cache.readQuery({
+      query: GET_ALL_LIKED_CONTENT,
+      variables,
+    });
+
+    const filteredEdges = data.likedContent.edges.filter(
+      ({ node }) => node.id !== item.id
+    );
+
+    cache.writeQuery({
+      query: GET_ALL_LIKED_CONTENT,
+      variables,
+      data: {
+        ...data,
+        likedContent: {
+          ...data.likedContent,
+          edges: filteredEdges,
+        },
+      },
+    });
+  } catch (e) {
+    console.log(e);
+    // Most likely we haven't ran the `getAllLikedContent` query yet.
+    // We can safely exit.
+  }
+};
+
+const updateLikedContent = ({ liked, cache, item }) => {
+  if (liked) {
+    addItemToLikedContentList({ cache, item, variables: { first: 3 } });
+    addItemToLikedContentList({ cache, item, variables: { first: 20 } });
+  } else {
+    removeItemFromLikedContentList({ cache, item, variables: { first: 3 } });
+    removeItemFromLikedContentList({ cache, item, variables: { first: 20 } });
+  }
+};
+
+export default updateLikedContent;
diff --git a/apolloschurchapp/src/ui/MediaPlayer/FullscreenControls.js b/apolloschurchapp/src/ui/MediaPlayer/FullscreenControls.js
deleted file mode 100644
index 5e86a59..0000000
--- a/apolloschurchapp/src/ui/MediaPlayer/FullscreenControls.js
+++ /dev/null
@@ -1,259 +0,0 @@
-import React, { PureComponent } from 'react';
-import PropTypes from 'prop-types';
-import {
-  BackHandler,
-  StyleSheet,
-  Animated,
-  TouchableWithoutFeedback,
-} from 'react-native';
-import { Query, withApollo } from 'react-apollo';
-import LinearGradient from 'react-native-linear-gradient';
-import SafeAreaView from 'react-native-safe-area-view';
-import { get } from 'lodash';
-import { compose } from 'recompose';
-
-import PaddedView from 'apolloschurchapp/src/ui/PaddedView';
-import { withTheme, withThemeMixin } from 'apolloschurchapp/src/ui/theme';
-import styled from 'apolloschurchapp/src/ui/styled';
-import { H4, H6 } from 'apolloschurchapp/src/ui/typography';
-import Icon from 'apolloschurchapp/src/ui/Icon';
-import Touchable from 'apolloschurchapp/src/ui/Touchable';
-
-import Seeker from './Seeker';
-import { getControlState } from './queries';
-import { play, pause, exitFullscreen } from './mutations';
-
-import { ControlsConsumer } from './PlayheadState';
-
-const Background = withTheme(({ theme }) => ({
-  style: StyleSheet.absoluteFill,
-  colors: [
-    theme.colors.darkPrimary,
-    theme.colors.transparent,
-    theme.colors.darkPrimary,
-  ],
-  locations: [0, 0.4, 0.95],
-}))(LinearGradient);
-
-const UpperControl = styled({
-  flexDirection: 'row',
-  justifyContent: 'space-between',
-  alignItems: 'center',
-})(PaddedView);
-
-const LowerControl = styled({
-  position: 'absolute',
-  bottom: 0,
-  left: 0,
-  right: 0,
-})(PaddedView);
-
-const PlayControls = styled(({ theme }) => ({
-  flexDirection: 'row',
-  justifyContent: 'space-around',
-  alignItems: 'center',
-  paddingBottom: theme.sizing.baseUnit * 1.5,
-}))(PaddedView);
-
-const PlayHead = styled({ paddingVertical: 0 })(PaddedView);
-
-const Titles = styled({
-  alignItems: 'center',
-  paddingVertical: 0,
-})(PaddedView);
-
-const Title = styled({ textAlign: 'center' })(H4);
-const Artist = styled({ textAlign: 'center' })(H6);
-
-const IconSm = withTheme(({ theme, disabled }) => ({
-  size: theme.sizing.baseUnit,
-  opacity: disabled ? 0.5 : 1,
-}))(Icon);
-
-const IconMd = withTheme(({ theme, disabled }) => ({
-  size: theme.sizing.baseUnit * 1.5,
-  opacity: disabled ? 0.5 : 1,
-}))(Icon);
-
-const IconLg = withTheme(({ theme, disabled }) => ({
-  size: theme.sizing.baseUnit * 2.5,
-  opacity: disabled ? 0.5 : 1,
-}))(Icon);
-
-/**
- * FullscreenControls displays fading player controls
- */
-class FullscreenControls extends PureComponent {
-  static propTypes = {
-    client: PropTypes.shape({
-      mutate: PropTypes.func,
-    }),
-  };
-
-  state = {};
-
-  fader = new Animated.Value(1);
-
-  controlsVisible = true;
-
-  wasFullscreen = false;
-
-  open = Animated.spring(this.fader, {
-    toValue: 1,
-    useNativeDriver: true,
-  });
-
-  close = Animated.spring(this.fader, {
-    toValue: 0,
-    useNativeDriver: true,
-  });
-
-  constructor(...args) {
-    super(...args);
-    this.fader.addListener(({ value }) => {
-      this.controlsVisible = value > 0.05;
-    });
-  }
-
-  componentDidMount() {
-    this.backHandler = BackHandler.addEventListener('hardwareBackPress', () => {
-      if (this.wasFullscreen) {
-        this.handleClose();
-        return true;
-      }
-      return false;
-    });
-  }
-
-  componentWillUnmount() {
-    this.backHandler.remove();
-    if (this.closeTimeout) clearTimeout(this.closeTimeout);
-  }
-
-  handleOnScrubbing = ({ isScrubbing }) => {
-    this.setState({ isScrubbing });
-  };
-
-  handleClose = () => {
-    this.props.client.mutate({ mutation: exitFullscreen });
-  };
-
-  handlePlay = () => {
-    this.props.client.mutate({ mutation: play });
-  };
-
-  handlePause = () => {
-    this.props.client.mutate({ mutation: pause });
-  };
-
-  handleControlVisibility = () => {
-    if (this.closeTimeout) clearTimeout(this.closeTimeout);
-    this.open.stop();
-    this.close.stop();
-
-    if (
-      !this.state.isScrubbing &&
-      this.isVideo &&
-      this.isPlaying &&
-      this.wasFullscreen &&
-      (!this.animatingClosed && this.controlsVisible)
-    ) {
-      this.animatingClosed = true;
-      this.close.start(() => {
-        this.animatingClosed = false;
-      });
-    } else {
-      this.open.start(() => {
-        if (this.isVideo && this.isPlaying) this.queueClose();
-      });
-    }
-  };
-
-  queueClose = () => {
-    this.closeTimeout = setTimeout(this.handleControlVisibility, 5000);
-  };
-
-  renderSkipForward = ({ skip }) => (
-    <Touchable onPress={() => skip(30)}>
-      <IconMd name="skip-next" />
-    </Touchable>
-  );
-
-  renderSkipBack = ({ skip }) => (
-    <Touchable onPress={() => skip(-30)}>
-      <IconMd name="skip-previous" />
-    </Touchable>
-  );
-
-  renderFullscreenControls = ({ data: { mediaPlayer = {} } = {} }) => {
-    this.isVideo = get(mediaPlayer, 'currentTrack.isVideo');
-    this.isPlaying = mediaPlayer.isPlaying;
-
-    if (
-      (mediaPlayer.isFullscreen && !this.wasFullscreen) ||
-      !this.isVideo ||
-      (!this.isPlaying || (this.isPlaying && !this.wasPlaying))
-    )
-      this.handleControlVisibility();
-
-    this.wasFullscreen = mediaPlayer.isFullscreen;
-    this.wasPlaying = mediaPlayer.isPlaying;
-
-    return (
-      <TouchableWithoutFeedback onPress={this.handleControlVisibility}>
-        <Animated.View
-          style={[StyleSheet.absoluteFill, { opacity: this.fader }]}
-        >
-          <Background>
-            <SafeAreaView
-              style={StyleSheet.absoluteFill}
-              forceInset={{ top: 'always', bottom: 'always' }}
-            >
-              <Touchable onPress={this.handleClose}>
-                <UpperControl>
-                  <IconSm name="arrow-down" />
-                  <Titles>
-                    <Title>{get(mediaPlayer, 'currentTrack.title')}</Title>
-                    <Artist>{get(mediaPlayer, 'currentTrack.artist')}</Artist>
-                  </Titles>
-                  <IconSm name="empty" />
-                </UpperControl>
-              </Touchable>
-              <LowerControl>
-                <PlayHead>
-                  <Seeker onScrubbing={this.handleOnScrubbing} />
-                </PlayHead>
-                <PlayControls>
-                  <IconSm disabled name="shuffle" />
-                  <ControlsConsumer>{this.renderSkipBack}</ControlsConsumer>
-                  {mediaPlayer.isPlaying ? (
-                    <Touchable onPress={this.handlePause}>
-                      <IconLg name="pause" />
-                    </Touchable>
-                  ) : (
-                    <Touchable onPress={this.handlePlay}>
-                      <IconLg name="play" />
-                    </Touchable>
-                  )}
-                  <ControlsConsumer>{this.renderSkipForward}</ControlsConsumer>
-                  <IconSm disabled name="repeat" />
-                </PlayControls>
-              </LowerControl>
-            </SafeAreaView>
-          </Background>
-        </Animated.View>
-      </TouchableWithoutFeedback>
-    );
-  };
-
-  render() {
-    return (
-      <Query query={getControlState}>{this.renderFullscreenControls}</Query>
-    );
-  }
-}
-
-export default compose(
-  withApollo,
-  withThemeMixin({ type: 'dark' })
-)(FullscreenControls);
diff --git a/apolloschurchapp/src/ui/MediaPlayer/FullscreenPlayer.js b/apolloschurchapp/src/ui/MediaPlayer/FullscreenPlayer.js
deleted file mode 100644
index feac512..0000000
--- a/apolloschurchapp/src/ui/MediaPlayer/FullscreenPlayer.js
+++ /dev/null
@@ -1,236 +0,0 @@
-import React, { PureComponent } from 'react';
-import {
-  Animated,
-  View,
-  StyleSheet,
-  Dimensions,
-  PanResponder,
-  Platform,
-} from 'react-native';
-import PropTypes from 'prop-types';
-import { Query, withApollo } from 'react-apollo';
-import { get } from 'lodash';
-import DeviceInfo from 'react-native-device-info';
-
-import styled from 'apolloschurchapp/src/ui/styled';
-
-import MiniControls, { MINI_PLAYER_HEIGHT } from './MiniControls';
-import FullscreenControls from './FullscreenControls';
-import VideoWindow from './VideoWindow';
-import MusicControls from './MusicControls';
-import { getFullVisibilityState } from './queries';
-import { exitFullscreen, goFullscreen } from './mutations';
-import { Provider, ControlsConsumer } from './PlayheadState';
-
-const VideoSizer = styled(
-  ({ isFullscreen, isVideo, theme }) =>
-    isFullscreen
-      ? StyleSheet.absoluteFill
-      : {
-          height: MINI_PLAYER_HEIGHT,
-          borderTopLeftRadius: theme.sizing.borderRadius,
-          borderBottomLeftRadius: theme.sizing.borderRadius,
-          overflow: 'hidden',
-          aspectRatio: isVideo ? 16 / 9 : 1,
-        }
-)(View);
-
-const isPhoneX = DeviceInfo.getModel() === 'iPhone X';
-const BOTTOM_OFFSET = isPhoneX ? 25 : 10; // Some devices need more "spacing" at the bottom of the screen. This helps account for that
-
-/**
- * FullscreenPlayer is a animating media player that transitions between
- * a mini state and a full screen state.
- * It is capable of playing any type of media that react-native-video supports.
- * It reads from local graphql state, and so you must use graphql mutations to play tracks.
- */
-class FullscreenPlayer extends PureComponent {
-  static propTypes = {
-    client: PropTypes.shape({ mutate: PropTypes.func }),
-  };
-
-  // Tracks the fullscreen animation
-  fullscreen = new Animated.Value(0);
-
-  // Tracks the measured height of the minicontrols. Used in other derived styles
-  miniControlHeight = new Animated.Value(MINI_PLAYER_HEIGHT);
-
-  // Tracks the measured height of the fullscreen cover. Used in other derived styles
-  coverHeight = new Animated.Value(Dimensions.get('window').height);
-
-  // Tracks the amount you drag the window
-  dragOffset = new Animated.Value(0);
-
-  fullScreenWithOffset = Animated.add(this.fullscreen, this.dragOffset);
-
-  // Self-invoking function because we end up with just one massic derived animated value that can be stored
-  coverTranslateY = (() => {
-    const translateYWhenCollapsed = Animated.subtract(
-      this.coverHeight,
-      this.miniControlHeight
-    );
-
-    const translateYSlope = Animated.multiply(
-      translateYWhenCollapsed,
-      Animated.multiply(this.fullScreenWithOffset, -1)
-    );
-
-    const translateY = Animated.add(translateYSlope, translateYWhenCollapsed);
-    return translateY;
-  })();
-
-  miniControlsTranslateY = (() => {
-    const translateYWhenExpanded = Animated.subtract(
-      this.coverHeight,
-      this.miniControlHeight
-    );
-    const translateYSlope = Animated.multiply(
-      translateYWhenExpanded,
-      Animated.multiply(this.fullScreenWithOffset, -1)
-    );
-    return translateYSlope;
-  })();
-
-  coverStyle = [
-    StyleSheet.absoluteFill,
-    {
-      transform: [{ translateY: this.coverTranslateY }],
-    },
-  ];
-
-  miniControlsAnimation = {
-    opacity: this.fullScreenWithOffset.interpolate({
-      inputRange: [0, 0.1],
-      outputRange: [1, 0],
-    }),
-  };
-
-  fullscreenControlsAnimation = [
-    StyleSheet.absoluteFill,
-    {
-      opacity: this.fullScreenWithOffset.interpolate({
-        inputRange: [0, 0.1],
-        outputRange: [0, 1],
-      }),
-    },
-  ];
-
-  panResponder = PanResponder.create({
-    onMoveShouldSetPanResponder: (event, { dx, dy }) =>
-      Math.abs(dy) > Math.abs(dx) && Math.abs(dy) > 10, // set pan responder only when we move enough in the Y-axis
-
-    onPanResponderMove: (event, { dy }) => {
-      // Calculate the amount you've offsetted the cover
-      const dragOffset = Math.min(0, -dy / Dimensions.get('window').height);
-      this.dragOffset.setValue(dragOffset);
-    },
-
-    onPanResponderRelease: (event, { dy, vy }) => {
-      const { height } = Dimensions.get('window');
-      const gestureVelocity = vy;
-      const gestureDistance = Math.abs(dy);
-
-      // Determine whether to continue the animation and exit fullscreen,
-      // or stay full screen and reset back up
-      let mutation = goFullscreen;
-      if (Math.abs(gestureVelocity > 0.5)) {
-        if (gestureVelocity > 0) {
-          mutation = exitFullscreen;
-        }
-      } else if (gestureDistance >= height / 2) {
-        mutation = exitFullscreen;
-      }
-
-      const dragOffset = Math.min(0, -dy / Dimensions.get('window').height);
-
-      if (mutation === goFullscreen) {
-        Animated.spring(this.dragOffset, {
-          toValue: 0,
-          useNativeDriver: true,
-        }).start();
-      } else {
-        this.dragOffset.setValue(0);
-        this.fullscreen.setValue(dragOffset);
-      }
-
-      this.props.client.mutate({ mutation });
-    },
-  });
-
-  handleCoverLayout = Animated.event([
-    { nativeEvent: { layout: { height: this.coverHeight } } },
-  ]);
-
-  handleMiniControlLayout = Animated.event([
-    { nativeEvent: { layout: { height: this.miniControlHeight } } },
-  ]);
-
-  renderCover = ({ data: { mediaPlayer = {} } = {} }) => {
-    const { isFullscreen = false } = mediaPlayer;
-
-    const fullscreenStyles = {
-      margin: isFullscreen ? 0 : 10,
-      marginBottom: isFullscreen ? 0 : BOTTOM_OFFSET,
-    };
-
-    Animated.spring(this.fullscreen, {
-      toValue: isFullscreen ? 1 : 0,
-      useNativeDriver: true,
-      bounciness: 4,
-    }).start();
-
-    const coverFlow = [
-      <Animated.View
-        key="cover"
-        onLayout={this.handleCoverLayout}
-        style={StyleSheet.absoluteFill}
-        {...(Platform.OS !== 'android' && isFullscreen
-          ? this.panResponder.panHandlers
-          : {})}
-      >
-        <VideoSizer
-          isFullscreen={isFullscreen}
-          isVideo={get(mediaPlayer, 'currentTrack.isVideo')}
-        >
-          <ControlsConsumer>
-            {(controlHandlers) => <VideoWindow {...controlHandlers} />}
-          </ControlsConsumer>
-        </VideoSizer>
-        <Animated.View style={this.fullscreenControlsAnimation}>
-          <FullscreenControls />
-        </Animated.View>
-      </Animated.View>,
-      <MusicControls key="music-controls" />,
-    ];
-
-    if (!isFullscreen) {
-      coverFlow.push(
-        <Animated.View
-          key="mini-controls"
-          style={this.miniControlsAnimation}
-          onLayout={this.handleMiniControlLayout}
-        >
-          <MiniControls />
-        </Animated.View>
-      );
-    }
-
-    return (
-      <Animated.View style={[this.coverStyle, fullscreenStyles]}>
-        {coverFlow}
-      </Animated.View>
-    );
-  };
-
-  render() {
-    return (
-      <Provider>
-        <Query query={getFullVisibilityState}>{this.renderCover}</Query>
-      </Provider>
-    );
-  }
-}
-
-const FullscreenPlayerWithData = withApollo(FullscreenPlayer);
-
-export { FullscreenPlayerWithData as default, BOTTOM_OFFSET };
diff --git a/apolloschurchapp/src/ui/MediaPlayer/FullscreenPlayer.stories.js b/apolloschurchapp/src/ui/MediaPlayer/FullscreenPlayer.stories.js
deleted file mode 100644
index 869d9c2..0000000
--- a/apolloschurchapp/src/ui/MediaPlayer/FullscreenPlayer.stories.js
+++ /dev/null
@@ -1,79 +0,0 @@
-import React from 'react';
-import { storiesOf } from '@storybook/react-native';
-import { Mutation } from 'react-apollo';
-
-import { ButtonLink } from 'apolloschurchapp/src/ui/Button';
-import CenteredView from 'apolloschurchapp/src/ui/CenteredView';
-import BackgroundView from 'apolloschurchapp/src/ui/BackgroundView';
-import FlexedView from 'apolloschurchapp/src/ui/FlexedView';
-
-import { playVideoMutation } from './mutations';
-import MediaPlayer from '.';
-
-storiesOf('MediaPlayer', module).add('simple', () => (
-  <BackgroundView>
-    <FlexedView>
-      <CenteredView>
-        <Mutation mutation={playVideoMutation}>
-          {(play) => (
-            <ButtonLink
-              onPress={() =>
-                play({
-                  variables: {
-                    mediaSource: {
-                      uri:
-                        'http://embed.wistia.com/deliveries/0e364f7e6f6604384ece8a35905a53a864386e9f.bin',
-                      __typename: 'VideoMediaSource',
-                    },
-                    posterSources: [
-                      {
-                        uri:
-                          'https://apollosrock.newspring.cc/GetImage.ashx?guid=28ea9e81-09b4-411f-8ad5-741054837823',
-                        __typename: 'ImageMediaSource',
-                      },
-                    ],
-                    title: 'Holy Spirit',
-                    artist: 'Fuse Promos',
-                    isVideo: true,
-                  },
-                })
-              }
-            >
-              Play video
-            </ButtonLink>
-          )}
-        </Mutation>
-        <Mutation mutation={playVideoMutation}>
-          {(play) => (
-            <ButtonLink
-              onPress={() =>
-                play({
-                  variables: {
-                    mediaSource: {
-                      uri:
-                        'https://s3.amazonaws.com/ns.downloads/newspring/audio/newspring_sermons/2017/180513_HolySpirit_06-Message-AUDIO.mp3',
-                      __typename: 'AudioMediaSource',
-                    },
-                    posterSources: [
-                      {
-                        uri:
-                          'https://apollosrock.newspring.cc/GetImage.ashx?guid=28ea9e81-09b4-411f-8ad5-741054837823',
-                        __typename: 'ImageMediaSource',
-                      },
-                    ],
-                    title: 'The Greatest Evangelist',
-                    artist: 'Sermon',
-                    isVideo: false,
-                  },
-                })
-              }
-            >
-              Play audio
-            </ButtonLink>
-          )}
-        </Mutation>
-      </CenteredView>
-    </FlexedView>
-    <MediaPlayer />
-  </BackgroundView>
-));
diff --git a/apolloschurchapp/src/ui/MediaPlayer/FullscreenPlayer.tests.js b/apolloschurchapp/src/ui/MediaPlayer/FullscreenPlayer.tests.js
deleted file mode 100644
index 6fb0aa5..0000000
--- a/apolloschurchapp/src/ui/MediaPlayer/FullscreenPlayer.tests.js
+++ /dev/null
@@ -1,108 +0,0 @@
-import React from 'react';
-import renderer from 'react-test-renderer';
-
-import { client } from 'apolloschurchapp/src/client';
-import Providers from 'apolloschurchapp/src/Providers';
-
-import FullscreenPlayer from './FullscreenPlayer';
-
-describe('the FullscreenPlayer component', () => {
-  it('should render miniplayer with video', async () => {
-    client.cache.writeData({
-      data: {
-        mediaPlayer: {
-          __typename: 'MediaPlayerState',
-          currentTrack: {
-            __typename: 'MediaPlayerTrack',
-            id: 1,
-            mediaSource: { uri: 'some-source' },
-            posterSources: [{ uri: 'some-poster-source' }],
-            title: 'Some Title',
-            artist: 'some artist',
-            isVideo: true,
-          },
-          isVisible: true,
-          isFullscreen: false,
-          isPlaying: true,
-          progress: {
-            __typename: 'MediaPlayerProgress',
-            currentTime: 12,
-            duration: 56,
-          },
-        },
-      },
-    });
-    const tree = renderer.create(
-      <Providers>
-        <FullscreenPlayer />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-
-  it('should render miniplayer with audio', async () => {
-    client.cache.writeData({
-      data: {
-        mediaPlayer: {
-          __typename: 'MediaPlayerState',
-          currentTrack: {
-            __typename: 'MediaPlayerTrack',
-            id: 1,
-            mediaSource: { uri: 'some-source' },
-            posterSources: [{ uri: 'some-poster-source' }],
-            title: 'Some Title',
-            artist: 'some artist',
-            isVideo: false,
-          },
-          isVisible: true,
-          isFullscreen: false,
-          isPlaying: true,
-          progress: {
-            __typename: 'MediaPlayerProgress',
-            currentTime: 12,
-            duration: 56,
-          },
-        },
-      },
-    });
-    const tree = renderer.create(
-      <Providers>
-        <FullscreenPlayer />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-
-  it('should render fullscreen', async () => {
-    client.cache.writeData({
-      data: {
-        mediaPlayer: {
-          __typename: 'MediaPlayerState',
-          currentTrack: {
-            __typename: 'MediaPlayerTrack',
-            id: 1,
-            mediaSource: { uri: 'some-source' },
-            posterSources: [{ uri: 'some-poster-source' }],
-            title: 'Some Title',
-            artist: 'some artist',
-            isVideo: false,
-          },
-          isVisible: true,
-          isFullscreen: true,
-          isPlaying: true,
-          progress: {
-            __typename: 'MediaPlayerProgress',
-            currentTime: 12,
-            duration: 56,
-          },
-        },
-      },
-    });
-    const tree = renderer.create(
-      <Providers>
-        <FullscreenPlayer />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/ui/MediaPlayer/MiniControls.js b/apolloschurchapp/src/ui/MediaPlayer/MiniControls.js
deleted file mode 100644
index e6a4662..0000000
--- a/apolloschurchapp/src/ui/MediaPlayer/MiniControls.js
+++ /dev/null
@@ -1,191 +0,0 @@
-import React, { Component } from 'react';
-import { Platform, View, Animated, StyleSheet } from 'react-native';
-import { Mutation, Query } from 'react-apollo';
-
-import styled from 'apolloschurchapp/src/ui/styled';
-import Touchable from 'apolloschurchapp/src/ui/Touchable';
-import { H5, H6 } from 'apolloschurchapp/src/ui/typography';
-import Icon from 'apolloschurchapp/src/ui/Icon';
-import { withTheme } from 'apolloschurchapp/src/ui/theme';
-
-import Seeker from './Seeker';
-
-import { getControlState } from './queries';
-
-import {
-  goFullscreen as goFullscreenMutation,
-  dismiss as dismissMutation,
-  play as playMutation,
-  pause as pauseMutation,
-} from './mutations';
-
-const MINI_PLAYER_HEIGHT = 50;
-
-const DismissBackground = styled(({ theme }) => ({
-  ...StyleSheet.absoluteFillObject,
-  alignItems: 'center',
-  justifyContent: 'center',
-  backgroundColor: theme.colors.white,
-}))(View);
-
-const TrackInfoTouchable = styled({
-  flex: 1,
-})(Touchable);
-
-const TrackInfoTouchableBackground = styled(({ theme }) => ({
-  backgroundColor: theme.colors.white,
-  flex: 1,
-}))(View);
-
-const TrackInfo = styled(({ theme }) => ({
-  paddingHorizontal: theme.sizing.baseUnit / 2,
-  height: '100%',
-  justifyContent: 'center',
-  width: '100%',
-}))(View);
-
-const TrackName = styled(({ theme }) => ({
-  height: theme.sizing.baseUnit,
-  overflow: 'hidden',
-}))(H5);
-
-const TrackArtist = styled(({ theme }) => ({
-  height: theme.sizing.baseUnit,
-  marginTop: theme.helpers.rem(-0.15625),
-  color: theme.colors.text.tertiary,
-  // overflow: 'hidden',
-}))(H6);
-
-const Container = styled(({ theme }) => ({
-  height: MINI_PLAYER_HEIGHT,
-  flexDirection: 'row',
-  justifyContent: 'flex-start',
-  overflow: 'hidden',
-  borderRadius: theme.sizing.borderRadius,
-}))(View);
-
-const Shadow = styled(({ theme }) => ({
-  borderRadius: theme.sizing.borderRadius,
-  ...Platform.select(theme.shadows.default),
-}))(View);
-
-// ThumbnailSpacer is used to offset the text in MiniPlayer to make room for the video/music
-// thumbnail in a way that is dynamic to the MINI_PLAYER_HEIGHT
-const ThumbnailSpacer = styled(({ isVideo }) => ({
-  height: MINI_PLAYER_HEIGHT,
-  aspectRatio: isVideo ? 16 / 9 : 1,
-}))(View);
-
-const Controls = styled(({ theme }) => ({
-  position: 'absolute',
-  right: 0,
-  bottom: 0,
-  top: -1,
-  paddingHorizontal: theme.sizing.baseUnit / 2,
-  flexDirection: 'row',
-  justifyContent: 'flex-end',
-  alignItems: 'center',
-}))(View);
-
-const MiniSeeker = styled({
-  position: 'absolute',
-  left: 0,
-  right: 0,
-  bottom: 0,
-})(Seeker);
-
-const StyledIcon = withTheme(({ theme }) => ({
-  fill: theme.colors.darkTertiary,
-  size: theme.sizing.baseUnit * 1.25,
-}))(Icon);
-
-/**
- * The MiniControls renders basic track info and a play/pause button.
- * Also displays a close button to close the player when the track is paused.
- */
-class MiniControls extends Component {
-  dismissAnimator = new Animated.Value(0);
-
-  shouldComponentUpdate() {
-    return false;
-  }
-
-  renderMiniControls = ({
-    data: {
-      mediaPlayer: {
-        currentTrack: { title, artist, isVideo } = {},
-        isPlaying = false,
-      } = {},
-    } = {},
-  }) => {
-    Animated.spring(this.dismissAnimator, {
-      toValue: isPlaying ? 0 : 0.8,
-      overshootClamping: true,
-      useNativeDriver: true,
-    }).start();
-    return (
-      <Mutation mutation={goFullscreenMutation}>
-        {(goFullscreen) => (
-          <Shadow>
-            <Container>
-              <Mutation mutation={dismissMutation}>
-                {(dismiss) => (
-                  <Touchable
-                    onPress={() => (isPlaying ? goFullscreen() : dismiss())}
-                  >
-                    <ThumbnailSpacer isVideo={isVideo}>
-                      <Animated.View
-                        style={[
-                          StyleSheet.absoluteFill,
-                          { opacity: this.dismissAnimator },
-                        ]}
-                      >
-                        <DismissBackground>
-                          <StyledIcon name="close" />
-                        </DismissBackground>
-                      </Animated.View>
-                    </ThumbnailSpacer>
-                  </Touchable>
-                )}
-              </Mutation>
-              <TrackInfoTouchableBackground>
-                <TrackInfoTouchable onPress={() => goFullscreen()}>
-                  <TrackInfo>
-                    <TrackName>{title}</TrackName>
-                    <TrackArtist>{artist}</TrackArtist>
-                  </TrackInfo>
-                </TrackInfoTouchable>
-              </TrackInfoTouchableBackground>
-              <Controls>
-                {isPlaying ? (
-                  <Mutation mutation={pauseMutation}>
-                    {(pause) => (
-                      <Touchable onPress={() => pause()}>
-                        <StyledIcon name="pause" />
-                      </Touchable>
-                    )}
-                  </Mutation>
-                ) : (
-                  <Mutation mutation={playMutation}>
-                    {(play) => (
-                      <Touchable onPress={() => play()}>
-                        <StyledIcon name="play" />
-                      </Touchable>
-                    )}
-                  </Mutation>
-                )}
-              </Controls>
-              <MiniSeeker minimal />
-            </Container>
-          </Shadow>
-        )}
-      </Mutation>
-    );
-  };
-
-  render() {
-    return <Query query={getControlState}>{this.renderMiniControls}</Query>;
-  }
-}
-
-export { MiniControls as default, MINI_PLAYER_HEIGHT };
diff --git a/apolloschurchapp/src/ui/MediaPlayer/MusicControls.js b/apolloschurchapp/src/ui/MediaPlayer/MusicControls.js
deleted file mode 100644
index 677c364..0000000
--- a/apolloschurchapp/src/ui/MediaPlayer/MusicControls.js
+++ /dev/null
@@ -1,178 +0,0 @@
-import PropTypes from 'prop-types';
-import React, { Component } from 'react';
-import { Animated, Platform } from 'react-native';
-import MusicControl from 'react-native-music-control';
-import { withApollo, Query } from 'react-apollo';
-import { throttle, get } from 'lodash';
-
-import { PlayheadConsumer, ControlsConsumer } from './PlayheadState';
-import { getMusicControlState } from './queries';
-import { play, pause, updatePlayhead } from './mutations';
-
-class MusicControls extends Component {
-  static propTypes = {
-    currentTrack: PropTypes.shape({}),
-    currentTime: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
-    currentTimeAnimated: PropTypes.instanceOf(Animated.Value),
-    isPlaying: PropTypes.bool,
-    duration: PropTypes.number,
-    skip: PropTypes.func,
-    client: PropTypes.shape({ mutate: PropTypes.func }),
-  };
-
-  constructor(...args) {
-    super(...args);
-    // iOS is the only platform that displays currentTime and Android is notorious bad at handling
-    // the JS thread.
-    if (Platform.OS === 'ios') this.currentTimeSubscription();
-  }
-
-  componentDidUpdate(oldProps) {
-    if (this.props.duration > 1 && oldProps.duration !== this.props.duration) {
-      this.configureMusicControl();
-    }
-    if (this.props.currentTimeAnimated !== oldProps.currentTimeAnimated) {
-      if (this.listener) {
-        oldProps.currentTimeAnimated.removeListener(this.listener);
-      }
-      if (Platform.OS === 'ios') this.currentTimeSubscription();
-    }
-
-    if (
-      oldProps.currentTime !== this.props.currentTime ||
-      oldProps.isPlaying !== this.props.isPlaying
-    ) {
-      this.updatePlayback();
-    }
-  }
-
-  componentWillUnmount() {
-    MusicControl.enableBackgroundMode(false);
-    MusicControl.stopControl();
-    if (this.listener)
-      this.props.currentTimeAnimated.removeListener(this.listener);
-  }
-
-  currentTimeSubscription = () => {
-    this.listener = this.props.currentTimeAnimated.addListener(
-      throttle(({ value }) => {
-        MusicControl.updatePlayback({
-          state: this.props.isPlaying
-            ? MusicControl.STATE_PLAYING
-            : MusicControl.STATE_PAUSED,
-          elapsedTime: value,
-        });
-      }, 1000)
-    );
-  };
-
-  configureMusicControl = () => {
-    // Initialize MusicControl settings
-    MusicControl.enableBackgroundMode(true);
-
-    // Play
-    MusicControl.enableControl('play', true);
-    MusicControl.on('play', this.handleOnPlay);
-
-    // Pause/Stop
-    MusicControl.enableControl('pause', true);
-    MusicControl.enableControl('stop', false);
-    MusicControl.on('pause', this.handleOnPause);
-    MusicControl.on('stop', this.handleOnPause);
-
-    // Skip
-    MusicControl.enableControl('previousTrack', false);
-    MusicControl.enableControl('nextTrack', false);
-
-    // Seeking
-    if (this.props.skip) {
-      MusicControl.enableControl('skipForward', true);
-      MusicControl.enableControl('skipBackward', true);
-      MusicControl.on('skipForward', this.handleOnFastForward);
-      MusicControl.on('skipBackward', this.handleOnRewind);
-    }
-
-    // Scrubber
-    MusicControl.enableControl('seek', true); // Android
-    MusicControl.enableControl('changePlaybackPosition', true); // iOS
-    MusicControl.on('seek', this.handleOnSeek);
-    MusicControl.on('changePlaybackPosition', this.handleOnSeek);
-
-    // Remote (headphones) play/pause
-    MusicControl.enableControl('togglePlayPause', true);
-    MusicControl.on(
-      'togglePlayPause',
-      () => (this.props.isPlaying ? this.handleOnPause() : this.handleOnPlay())
-    );
-
-    // Remote (headphones) fast forward/rewind (iOS only) (disabled)
-    MusicControl.enableControl('seekForward', false);
-    MusicControl.enableControl('seekBackward', false);
-
-    // Swipe to dismiss native control (Android only)
-    MusicControl.enableControl('closeNotification', true, { when: 'paused' });
-
-    // Configure the visuals
-    const { currentTrack = {} } = this.props;
-    MusicControl.setNowPlaying({
-      title: currentTrack.title,
-      artist: currentTrack.artist,
-      artwork: get(currentTrack, 'posterSources[0].uri'),
-      elapsedTime: this.props.currentTime,
-      duration: this.props.duration,
-    });
-  };
-
-  updatePlayback = () => {
-    MusicControl.updatePlayback({
-      state: this.props.isPlaying
-        ? MusicControl.STATE_PLAYING
-        : MusicControl.STATE_PAUSED,
-      elapsedTime: this.props.currentTime,
-    });
-  };
-
-  handleOnPlay = () => this.props.client.mutate({ mutation: play });
-
-  handleOnPause = () => this.props.client.mutate({ mutation: pause });
-
-  handleOnFastForward = () => this.props.skip(15);
-
-  handleOnRewind = () => this.props.skip(-15);
-
-  handleOnSeek = (seekTo) =>
-    this.props.client.mutate({
-      mutation: updatePlayhead,
-      variables: {
-        currentTime: seekTo,
-      },
-    });
-
-  render() {
-    return null;
-  }
-}
-
-const MusicControlsState = (props) => (
-  <Query query={getMusicControlState}>
-    {({ data: { mediaPlayer = {} } = {} }) => (
-      <PlayheadConsumer>
-        {({ duration, currentTime }) => (
-          <ControlsConsumer>
-            {({ skip }) => (
-              <MusicControls
-                {...props}
-                currentTimeAnimated={currentTime}
-                duration={duration}
-                skip={skip}
-                {...mediaPlayer}
-              />
-            )}
-          </ControlsConsumer>
-        )}
-      </PlayheadConsumer>
-    )}
-  </Query>
-);
-
-export default withApollo(MusicControlsState);
diff --git a/apolloschurchapp/src/ui/MediaPlayer/PlayheadState.js b/apolloschurchapp/src/ui/MediaPlayer/PlayheadState.js
deleted file mode 100644
index 0d5b33d..0000000
--- a/apolloschurchapp/src/ui/MediaPlayer/PlayheadState.js
+++ /dev/null
@@ -1,110 +0,0 @@
-import React, { createContext, Component } from 'react';
-import { Animated } from 'react-native';
-import { Query, withApollo } from 'react-apollo';
-import PropTypes from 'prop-types';
-
-import { getMediaPlayerIsPlaying } from './queries';
-import { updatePlayhead } from './mutations';
-
-const defaultState = {
-  duration: 1,
-  currentTime: new Animated.Value(0),
-  playableDuration: new Animated.Value(1),
-  seekableDuration: new Animated.Value(1),
-};
-
-const controlState = () => {};
-
-const PlayheadContext = createContext(defaultState);
-
-const PlayheadControls = createContext(controlState);
-
-class ProviderWithoutApollo extends Component {
-  static propTypes = {
-    client: PropTypes.shape({
-      mutate: PropTypes.func,
-    }),
-  };
-
-  state = defaultState;
-
-  get controlState() {
-    return {
-      onLoad: this.handleOnLoad,
-      onProgress: this.handleOnProgress,
-      skip: this.skip,
-    };
-  }
-
-  handleOnLoad = ({ duration }) => {
-    this.setState({ duration });
-    this.state.currentTime.setValue(0);
-    this.state.playableDuration.setValue(0);
-    this.state.seekableDuration.setValue(0);
-  };
-
-  handleOnProgress = ({ currentTime, playableDuration, seekableDuration }) => {
-    if (!this.seekingTo || Math.abs(this.seekingTo - currentTime) < 1) {
-      // when seeking, only update `currentTime` after the seek has finished
-      this.seekingTo = null;
-      this.lastCurrentTime = currentTime;
-      this.state.currentTime.setValue(currentTime);
-    }
-    this.state.playableDuration.setValue(playableDuration);
-    this.state.seekableDuration.setValue(seekableDuration);
-  };
-
-  handlePause = () => {
-    this.props.client.mutate({
-      mutation: updatePlayhead,
-      variables: {
-        currentTime: this.lastCurrentTime,
-      },
-    });
-  };
-
-  skip = async (secondsToSkip) => {
-    const currentTime = Math.min(
-      Math.max(this.lastCurrentTime + secondsToSkip, 0),
-      this.state.duration
-    );
-
-    await this.props.client.mutate({
-      mutation: updatePlayhead,
-      variables: {
-        currentTime,
-      },
-    });
-
-    this.seekingTo = currentTime;
-    this.state.currentTime.setValue(currentTime); // immediately set the playhead value so progress bar doesn't jump around
-  };
-
-  renderProviders = ({
-    data: { mediaPlayer: { isPlaying = false } = {} } = {},
-  }) => {
-    if (!isPlaying && this.wasPlaying) {
-      this.handlePause();
-    }
-    this.wasPlaying = isPlaying;
-
-    return (
-      <PlayheadControls.Provider value={this.controlState}>
-        <PlayheadContext.Provider value={this.state} {...this.props} />
-      </PlayheadControls.Provider>
-    );
-  };
-
-  render() {
-    return (
-      <Query query={getMediaPlayerIsPlaying}>{this.renderProviders}</Query>
-    );
-  }
-}
-
-const Provider = withApollo(ProviderWithoutApollo);
-
-const { Consumer: PlayheadConsumer } = PlayheadContext;
-const { Consumer: ControlsConsumer } = PlayheadControls;
-
-export { Provider, PlayheadConsumer, ControlsConsumer };
diff --git a/apolloschurchapp/src/ui/MediaPlayer/Seeker/Timestamp.js b/apolloschurchapp/src/ui/MediaPlayer/Seeker/Timestamp.js
deleted file mode 100644
index 8b6de0b..0000000
--- a/apolloschurchapp/src/ui/MediaPlayer/Seeker/Timestamp.js
+++ /dev/null
@@ -1,98 +0,0 @@
-import React, { PureComponent } from 'react';
-import { Animated } from 'react-native';
-import PropTypes from 'prop-types';
-
-import { H6 } from 'apolloschurchapp/src/ui/typography';
-import styled from 'apolloschurchapp/src/ui/styled';
-
-const TIME_TEXT_WIDTH = 50;
-
-const TimeText = styled({
-  width: TIME_TEXT_WIDTH,
-  textAlign: 'center',
-  alignItems: 'center',
-})(H6);
-
-/**
- * Displays a MM:SS formatted timestamp from either a number or Animate.Value in seconds
- */
-class Timestamp extends PureComponent {
-  static propTypes = {
-    time: PropTypes.oneOfType([
-      PropTypes.number,
-      PropTypes.instanceOf(Animated.Value),
-    ]),
-    offset: PropTypes.instanceOf(Animated.Value),
-  };
-
-  state = {
-    time: 0,
-    offset: 0,
-  };
-
-  constructor(props) {
-    super(props);
-    if (typeof props.time === 'number') {
-      this.state.time = props.time;
-    } else {
-      this.listen(props);
-    }
-  }
-
-  componentWillUpdate(newProps) {
-    if (
-      newProps.time !== this.props.time ||
-      newProps.offset !== this.props.offset
-    ) {
-      this.listen(newProps);
-    }
-  }
-
-  listen = ({ time = 0, offset = 0 }) => {
-    if (this.listener) this.props.time.removeListener(this.listener);
-    if (this.offsetListener) {
-      this.props.offset.removeListener(this.offsetListener);
-    }
-
-    if (!time.addListener) {
-      this.setState({ time });
-    } else {
-      this.listener = time.addListener(({ value }) =>
-        this.setState({ time: value })
-      );
-    }
-
-    if (!offset.addListener) {
-      this.setState({ offset });
-    } else if (offset) {
-      this.offsetListener = offset.addListener(({ value }) =>
-        this.setState({ offset: value })
-      );
-    }
-  };
-
-  timestamp = (time) => {
-    // Hours, minutes and seconds
-    const hrs = Math.floor(time / 3600);
-    const mins = Math.floor((time % 3600) / 60);
-    const secs = time % 60;
-
-    let timestamp = '';
-
-    if (hrs > 0) {
-      timestamp += `${hrs}:${mins < 10 ? '0' : ''}`;
-    }
-
-    timestamp += `${mins}:${secs < 10 ? '0' : ''}`;
-    timestamp += `${Math.round(secs)}`;
-    return timestamp;
-  };
-
-  render() {
-    return (
-      <TimeText>{this.timestamp(this.state.time + this.state.offset)}</TimeText>
-    );
-  }
-}
-
-export { Timestamp as default, TIME_TEXT_WIDTH };
diff --git a/apolloschurchapp/src/ui/MediaPlayer/Seeker/index.js b/apolloschurchapp/src/ui/MediaPlayer/Seeker/index.js
deleted file mode 100644
index 3aa9674..0000000
--- a/apolloschurchapp/src/ui/MediaPlayer/Seeker/index.js
+++ /dev/null
@@ -1,220 +0,0 @@
-import React, { PureComponent } from 'react';
-import { PanResponder, Animated, View, StyleSheet } from 'react-native';
-import PropTypes from 'prop-types';
-
-import styled from 'apolloschurchapp/src/ui/styled';
-
-import { PlayheadConsumer, ControlsConsumer } from '../PlayheadState';
-import Timestamp, { TIME_TEXT_WIDTH } from './Timestamp';
-
-const Container = styled({
-  width: '100%',
-  flexDirection: 'row',
-  justifyContent: 'space-between',
-  alignItems: 'center',
-})(View);
-
-const Track = styled(({ theme, minimal }) => ({
-  backgroundColor: minimal
-    ? theme.colors.transparent
-    : theme.colors.darkSecondary,
-  borderRadius: minimal ? 0 : theme.sizing.borderRadius,
-  overflow: 'hidden',
-  position: 'absolute',
-  left: 0,
-  right: 0,
-  top: 0,
-  bottom: 0,
-}))(View);
-
-const TrackContainer = styled(({ theme, minimal }) => ({
-  position: 'absolute',
-  left: minimal ? 0 : TIME_TEXT_WIDTH,
-  right: minimal ? 0 : TIME_TEXT_WIDTH,
-  height: theme.sizing.borderRadius,
-}))(View);
-
-const Knob = styled(({ theme, minimal }) => {
-  const size = minimal ? 0 : theme.sizing.borderRadius * 2;
-  return {
-    backgroundColor: theme.colors.text.primary,
-    borderRadius: size,
-    position: 'absolute',
-    top: -(size / 2) + theme.sizing.borderRadius / 2,
-    right: -(size / 2),
-    height: size,
-    width: size,
-    elevation: 2,
-  };
-})(View);
-
-const ProgressBar = styled(({ theme }) => ({
-  backgroundColor: theme.colors.secondary,
-  ...StyleSheet.absoluteFillObject,
-}))(View);
-
-/**
- * Animated Seeker component.
- * Depends on `PlayheadState`, so you don't pass it any props directly,
- * but must be rendered within a `<MediaPlayer/>` component
- */
-class Seeker extends PureComponent {
-  static propTypes = {
-    minimal: PropTypes.bool, // The only prop you need to pass - switches to a minimal version (line instead of bar)
-    currentTime: PropTypes.any, // eslint-disable-line
-    duration: PropTypes.any, // eslint-disable-line
-    style: PropTypes.any, // eslint-disable-line
-    onScrubbing: PropTypes.func,
-  };
-
-  state = {
-    width: 0, // the width of the seeker bar
-    isSeeking: false,
-    timeAtSeekingStart: 0,
-  };
-
-  offsetDriver = new Animated.Value(0); // Used to track pixel offset when seeking
-
-  offsetTimeDriver = new Animated.Value(0); // Used to track time offset when seeking
-
-  panResponder = PanResponder.create({
-    onStartShouldSetPanResponder: () => true,
-    onPanResponderGrant: () => {
-      // Using `stopAnimation` only to get the currentTime value
-      this.props.currentTime.stopAnimation((value) => {
-        this.setState({
-          isSeeking: true,
-          timeAtSeekingStart: value,
-        });
-      });
-    },
-    onPanResponderMove: (e, { dx }) => {
-      // Calculate the pixel offset and apply it to the offsetDriver
-      let offset = dx;
-      const progressAtStart =
-        this.state.timeAtSeekingStart / this.props.duration;
-      const positionAtStart = progressAtStart * this.state.width;
-      offset = Math.min(this.state.width - positionAtStart, offset);
-      offset = Math.max(-positionAtStart, offset);
-      this.offsetDriver.setValue(offset);
-
-      // Calculate the time offset and apply it to the offsetTimeDriver
-      const moveAmount = offset / this.state.width;
-      const moveAmountInTime = moveAmount * this.props.duration;
-      this.offsetTimeDriver.setValue(moveAmountInTime);
-
-      if (this.props.onScrubbing) this.props.onScrubbing({ isScrubbing: true });
-    },
-    onPanResponderRelease: async (e, { dx }) => {
-      // Calculate the amount in time we've moved, and skip that duration
-      const moveAmount = dx / this.state.width;
-      const moveAmountInTime = moveAmount * this.props.duration;
-      await this.props.skip(moveAmountInTime);
-
-      // Reset state
-      this.offsetDriver.setValue(0);
-      this.offsetTimeDriver.setValue(0);
-      this.setState({
-        isSeeking: false,
-        timeAtSeekingStart: 0,
-      });
-
-      if (this.props.onScrubbing)
-        this.props.onScrubbing({ isScrubbing: false });
-    },
-  });
-
-  // Calculate the real offset position of the colored track bar
-  // To be able to useNativeDriver, the trackbar is always the full-width, and we animate its X position
-  get trackBarOffset() {
-    const progress = Animated.divide(
-      this.state.isSeeking
-        ? this.state.timeAtSeekingStart
-        : this.props.currentTime,
-      this.props.duration
-    );
-
-    const progressInvert = Animated.subtract(1, progress);
-    const widthInvert = Animated.multiply(-1, this.state.width);
-    const position = Animated.multiply(progressInvert, widthInvert);
-    return Animated.add(position, this.offsetDriver);
-  }
-
-  // the "knob" is on top of the trackbar, the piece of UI you can grab and move around
-  get knobStyles() {
-    return [
-      StyleSheet.absoluteFill,
-      {
-        overflow: 'visible',
-        transform: [{ translateX: this.trackBarOffset }],
-      },
-    ];
-  }
-
-  get progressBarStyles() {
-    return [
-      StyleSheet.absoluteFill,
-      {
-        transform: [{ translateX: this.trackBarOffset }],
-      },
-    ];
-  }
-
-  handleOnLayout = ({
-    nativeEvent: {
-      layout: { width },
-    },
-  }) => {
-    this.setState({ width });
-  };
-
-  renderProgress = () => (
-    <Animated.View
-      style={[
-        StyleSheet.absoluteFill,
-        {
-          transform: [{ translateX: this.trackBarOffset }],
-        },
-      ]}
-    >
-      <ProgressBar />
-    </Animated.View>
-  );
-
-  render() {
-    return (
-      <Container style={this.props.style}>
-        {!this.props.minimal ? (
-          <Timestamp
-            time={this.props.currentTime}
-            offset={this.offsetTimeDriver}
-          />
-        ) : null}
-        <TrackContainer minimal={this.props.minimal}>
-          <Track onLayout={this.handleOnLayout} minimal={this.props.minimal}>
-            {this.renderProgress()}
-          </Track>
-          <Animated.View style={this.knobStyles}>
-            <Knob
-              minimal={this.props.minimal}
-              {...this.panResponder.panHandlers}
-            />
-          </Animated.View>
-        </TrackContainer>
-        {!this.props.minimal ? <Timestamp time={this.props.duration} /> : null}
-      </Container>
-    );
-  }
-}
-
-const SeekerWithState = (props) => (
-  <ControlsConsumer>
-    {(controls) => (
-      <PlayheadConsumer>
-        {(playhead) => <Seeker {...props} {...playhead} {...controls} />}
-      </PlayheadConsumer>
-    )}
-  </ControlsConsumer>
-);
-
-export default SeekerWithState;
diff --git a/apolloschurchapp/src/ui/MediaPlayer/VideoWindow.js b/apolloschurchapp/src/ui/MediaPlayer/VideoWindow.js
deleted file mode 100644
index b93ccb1..0000000
--- a/apolloschurchapp/src/ui/MediaPlayer/VideoWindow.js
+++ /dev/null
@@ -1,135 +0,0 @@
-import React, { PureComponent } from 'react';
-import PropTypes from 'prop-types';
-import { Query, withApollo } from 'react-apollo';
-import { get } from 'lodash';
-import Video from 'react-native-video';
-import { Animated, View, StyleSheet } from 'react-native';
-
-import styled from 'apolloschurchapp/src/ui/styled';
-import ActivityIndicator from 'apolloschurchapp/src/ui/ActivityIndicator';
-
-import { getVideoState } from './queries';
-import { pause as pauseMutation, pauseAndRestart } from './mutations';
-
-const styles = StyleSheet.create({
-  animatedPosterImage: {
-    ...StyleSheet.absoluteFillObject,
-    resizeMode: 'cover',
-  },
-});
-
-const Background = styled(({ theme }) => ({
-  ...StyleSheet.absoluteFillObject,
-  backgroundColor: theme.colors.black,
-}))(View);
-
-/**
- * The VideoWindow displays the actual react-native-video component.
- * It's responsible for loading the video, and updating progress + duration in state.
- */
-class VideoWindow extends PureComponent {
-  static propTypes = {
-    client: PropTypes.shape({
-      mutate: PropTypes.func,
-    }),
-    onProgress: PropTypes.func,
-    onLoad: PropTypes.func,
-  };
-
-  loadingOverlay = new Animated.Value(1);
-
-  loadingStyle = [StyleSheet.absoluteFill, { opacity: this.loadingOverlay }];
-
-  handleOnEnd = async () => {
-    this.props.client.mutate({ mutation: pauseAndRestart });
-  };
-
-  handlePause = () => {
-    this.props.client.mutate({ mutation: pauseMutation });
-  };
-
-  handleOnProgress = (progress) => {
-    if (this.props.onProgress) this.props.onProgress(progress);
-  };
-
-  handleOnError = () => {
-    this.handlePause();
-  };
-
-  handleOnLoad = ({ duration }) => {
-    Animated.spring(this.loadingOverlay, {
-      toValue: 0,
-      useNativeDriver: true,
-    }).start();
-
-    if (this.props.onLoad) this.props.onLoad({ duration });
-  };
-
-  handleOnLoadStart = () => {
-    Animated.spring(this.loadingOverlay, {
-      toValue: 1,
-      useNativeDriver: true,
-    });
-  };
-
-  setVideoRef = (element) => {
-    this.video = element;
-  };
-
-  renderVideo = ({ data: { mediaPlayer = {} } = {} }) => {
-    if (!get(mediaPlayer, 'currentTrack.mediaSource')) return null;
-
-    const { currentTime } = mediaPlayer;
-    if (currentTime && currentTime !== this.lastCurrentTime && this.video) {
-      this.video.seek(currentTime);
-    }
-
-    this.lastCurrentTime = currentTime;
-
-    return [
-      <Video
-        ref={this.setVideoRef}
-        source={mediaPlayer.currentTrack.mediaSource}
-        paused={!mediaPlayer.isPlaying}
-        audioOnly={!mediaPlayer.currentTrack.isVideo}
-        ignoreSilentSwitch={'ignore'}
-        allowsExternalPlayback
-        playInBackground
-        playWhenInactive
-        onAudioBecomingNoisy={this.handlePause}
-        onEnd={this.handleOnEnd}
-        onError={this.handleOnError}
-        resizeMode={'contain'}
-        onLoadStart={this.handleOnLoadStart}
-        onLoad={this.handleOnLoad}
-        onProgress={this.handleOnProgress}
-        style={StyleSheet.absoluteFill}
-        repeat
-        key="video"
-      />,
-      // there's currently a bug on android where react-native-video's poster doesn't ever go away
-      // So we use our own image copmonent...which is nicer cuz we can show a nice fading animation too!
-      <Animated.Image
-        key="poster"
-        style={[
-          styles.animatedPosterImage,
-          mediaPlayer.currentTrack.isVideo ? this.loadingStyle : {},
-        ]}
-        source={mediaPlayer.currentTrack.posterSources}
-      />,
-    ];
-  };
-
-  render() {
-    return (
-      <Background>
-        <Query query={getVideoState}>{this.renderVideo}</Query>
-        <Animated.View style={this.loadingStyle}>
-          <ActivityIndicator />
-        </Animated.View>
-      </Background>
-    );
-  }
-}
-
-export default withApollo(VideoWindow);
diff --git a/apolloschurchapp/src/ui/MediaPlayer/index.js b/apolloschurchapp/src/ui/MediaPlayer/index.js
deleted file mode 100644
index 8b6b8a6..0000000
--- a/apolloschurchapp/src/ui/MediaPlayer/index.js
+++ /dev/null
@@ -1,28 +0,0 @@
-import React, { Component } from 'react';
-import { Query } from 'react-apollo';
-
-import FullscreenPlayer from './FullscreenPlayer';
-
-import { getMediaPlayerVisibility } from './queries';
-
-export { MINI_PLAYER_HEIGHT } from './MiniControls';
-
-/**
- * Selectively renders FullscreenPlayer component is MediaPlayer is visible
- */
-class MediaPlayer extends Component {
-  shouldComponentUpdate() {
-    return false; // 🚀
-  }
-
-  renderPlayer = ({ data = {} }) => {
-    if (!data.mediaPlayer || !data.mediaPlayer.isVisible) return null;
-    return <FullscreenPlayer />;
-  };
-
-  render() {
-    return <Query query={getMediaPlayerVisibility}>{this.renderPlayer}</Query>;
-  }
-}
-
-export default MediaPlayer;
diff --git a/apolloschurchapp/src/ui/MediaPlayer/mutations.js b/apolloschurchapp/src/ui/MediaPlayer/mutations.js
deleted file mode 100644
index 95a0ae8..0000000
--- a/apolloschurchapp/src/ui/MediaPlayer/mutations.js
+++ /dev/null
@@ -1,73 +0,0 @@
-import gql from 'graphql-tag';
-
-const playVideoMutation = gql`
-  mutation playVideo(
-    $mediaSource: String!
-    $posterSources: String
-    $title: String
-    $artist: String
-    $isVideo: Boolean
-  ) {
-    mediaPlayerPlayNow(
-      mediaSource: $mediaSource
-      posterSources: $posterSources
-      title: $title
-      artist: $artist
-      isVideo: $isVideo
-    ) @client
-  }
-`;
-
-const goFullscreen = gql`
-  mutation {
-    mediaPlayerUpdateState(isFullscreen: true) @client
-  }
-`;
-
-const play = gql`
-  mutation {
-    mediaPlayerUpdateState(isPlaying: true) @client
-  }
-`;
-
-const pause = gql`
-  mutation {
-    mediaPlayerUpdateState(isPlaying: false) @client
-  }
-`;
-
-const dismiss = gql`
-  mutation {
-    mediaPlayerUpdateState(isPlaying: false, isVisible: false) @client
-  }
-`;
-
-const pauseAndRestart = gql`
-  mutation pause {
-    mediaPlayerUpdateState(isPlaying: false) @client
-    mediaPlayerSetPlayhead(currentTime: 0) @client
-  }
-`;
-
-const exitFullscreen = gql`
-  mutation {
-    mediaPlayerUpdateState(isFullscreen: false) @client
-  }
-`;
-
-const updatePlayhead = gql`
-  mutation mediaPlayerSetPlayhead($currentTime: Float) {
-    mediaPlayerSetPlayhead(currentTime: $currentTime) @client
-  }
-`;
-
-export {
-  pauseAndRestart,
-  playVideoMutation,
-  goFullscreen,
-  play,
-  pause,
-  dismiss,
-  exitFullscreen,
-  updatePlayhead,
-};
diff --git a/apolloschurchapp/src/ui/MediaPlayer/queries.js b/apolloschurchapp/src/ui/MediaPlayer/queries.js
deleted file mode 100644
index 83290f5..0000000
--- a/apolloschurchapp/src/ui/MediaPlayer/queries.js
+++ /dev/null
@@ -1,122 +0,0 @@
-import gql from 'graphql-tag';
-
-const getMediaPlayerVisibility = gql`
-  query mediaPlayerVisibility {
-    mediaPlayer @client {
-      isVisible
-    }
-  }
-`;
-
-const getMediaPlayerIsPlaying = gql`
-  query mediaPlayerVisibility {
-    mediaPlayer @client {
-      isPlaying
-    }
-  }
-`;
-
-const getFullVisibilityState = gql`
-  query fullVisibilityState {
-    mediaPlayer @client {
-      currentTrack {
-        isVideo
-      }
-      isVisible
-      isFullscreen
-    }
-  }
-`;
-
-const getControlState = gql`
-  query {
-    mediaPlayer @client {
-      isFullscreen
-      isPlaying
-      currentTrack {
-        id
-        title
-        artist
-        isVideo
-      }
-    }
-  }
-`;
-
-const getVideoState = gql`
-  query mediaPlayer {
-    mediaPlayer @client {
-      currentTrack {
-        mediaSource {
-          uri
-        }
-        posterSources {
-          uri
-        }
-        id
-        isVideo
-      }
-      currentTime
-      isPlaying
-    }
-  }
-`;
-
-const getMusicControlState = gql`
-  query musicControlState {
-    mediaPlayer @client {
-      currentTrack {
-        posterSources {
-          uri
-        }
-        title
-        artist
-      }
-      currentTime
-      isPlaying
-    }
-  }
-`;
-
-const getElapsedTime = gql`
-  query {
-    mediaPlayer @client {
-      progress {
-        currentTime
-      }
-    }
-  }
-`;
-
-const getProgress = gql`
-  query {
-    mediaPlayer @client {
-      progress {
-        currentTime
-        duration
-      }
-    }
-  }
-`;
-
-const getTotalTime = gql`
-  query {
-    mediaPlayer @client {
-      progress {
-        duration
-      }
-    }
-  }
-`;
-
-export {
-  getMediaPlayerIsPlaying,
-  getMediaPlayerVisibility,
-  getMusicControlState,
-  getFullVisibilityState,
-  getControlState,
-  getVideoState,
-  getElapsedTime,
-  getProgress,
-  getTotalTime,
-};
diff --git a/apolloschurchapp/src/ui/MediaQuery/MediaQuery.js b/apolloschurchapp/src/ui/MediaQuery/MediaQuery.js
deleted file mode 100644
index 10557b3..0000000
--- a/apolloschurchapp/src/ui/MediaQuery/MediaQuery.js
+++ /dev/null
@@ -1,67 +0,0 @@
-import { Component } from 'react';
-import PropTypes from 'prop-types';
-import { get, every } from 'lodash';
-import { pick, mapValues, flow } from 'lodash/fp';
-import { compose } from 'recompose';
-
-import { withTheme } from 'apolloschurchapp/src/ui/theme';
-
-import withWindow from './withWindow';
-import queryMatcher from './queryMatcher';
-
-const supportedMediaQueryTypes = {
-  minWidth: PropTypes.string,
-  maxWidth: PropTypes.string,
-  minHeight: PropTypes.string,
-  maxHeight: PropTypes.string,
-  minDeviceAspectRatio: PropTypes.string,
-  maxDeviceAspectRatio: PropTypes.string,
-};
-
-// <MediaQuery maxWidth="md" minWidth="sm">I render on screens sm to md</MediaQuery>
-// <MediaQuery maxWidth="xs">I render only on xs screens</MediaQuery>
-// <MediaQuery minWidth="md">I render on screens md or above</MediaQuery>
-class MediaQuery extends Component {
-  static propTypes = {
-    ...supportedMediaQueryTypes,
-    children: PropTypes.node,
-
-    // These props are passed in through HOCs (withTheme and withWindow)
-    breakpoints: PropTypes.shape({
-      xs: PropTypes.number,
-      sm: PropTypes.number,
-      md: PropTypes.number,
-      lg: PropTypes.number,
-    }),
-    window: PropTypes.shape({
-      width: PropTypes.number,
-      height: PropTypes.number,
-    }).isRequired,
-  };
-
-  static defaultProps = {
-    ...mapValues(supportedMediaQueryTypes, () => null),
-    breakpoints: {},
-  };
-
-  get shouldBeVisible() {
-    const mediaQuery = flow(
-      pick(Object.keys(supportedMediaQueryTypes)),
-      mapValues((breakpoint) => get(this.props.breakpoints, breakpoint))
-    )(this.props);
-
-    const {
-      window: { width, height },
-    } = this.props; // destructuring just to make below line clean
-    return every(mediaQuery, queryMatcher({ width, height }));
-  }
-
-  render() {
-    return this.shouldBeVisible ? this.props.children : null;
-  }
-}
-
-export default compose(
-  withTheme(({ theme: { breakpoints } = {} } = {}) => ({ breakpoints })),
-  withWindow
-)(MediaQuery);
diff --git a/apolloschurchapp/src/ui/MediaQuery/enhancer.js b/apolloschurchapp/src/ui/MediaQuery/enhancer.js
deleted file mode 100644
index 617a1f4..0000000
--- a/apolloschurchapp/src/ui/MediaQuery/enhancer.js
+++ /dev/null
@@ -1,42 +0,0 @@
-import { branch, compose, mapProps } from 'recompose';
-import { every } from 'lodash';
-
-import { withTheme } from 'apolloschurchapp/src/ui/theme';
-
-import withWindow from './withWindow';
-import queryMatcher from './queryMatcher';
-
-// Make it easy to do breakpoint-based component branching, a-la recompose's branch method.
-// The "test" function should return an object that mirrors what you'd do in a css mediaQuery:
-// import { enhancer as mediaQuery } from 'MediaQuery';
-// mediaQuery(
-//   ({ xs, lg }) => ({ minWidth: xs, maxWidth: lg }),
-//   HigherOrderComponent,
-//   ?HigherOrderComponent
-// ): HigherOrderComponent
-const enhancer = (getMediaQuery, ...args) =>
-  compose(
-    withTheme(({ theme: { breakpoints = {} } = {} }) => ({ breakpoints })),
-    withWindow,
-    branch(({ breakpoints, window: { width, height }, ...ownProps }) => {
-      const mediaQuery = getMediaQuery(
-        { ...breakpoints, width, height },
-        ownProps
-      );
-
-      // We should only interpret `mediaQuery` if we have an object.
-      // This allows the function you pass in to utilize more complex query logic, like:
-      // mediaQuery(({ sm, lg, width }) => width < sm || width > lg, styles)
-      // mediaQuery(({ sm }, ownProps) => ownProps.size < sm, styles)
-      if (typeof mediaQuery !== 'object') {
-        return mediaQuery;
-      }
-
-      return every(mediaQuery, queryMatcher({ width, height }));
-    }, ...args),
-
-    // clean up props
-    mapProps(({ breakpoints, window, ...ownProps }) => ownProps)
-  );
-
-export default enhancer;
diff --git a/apolloschurchapp/src/ui/MediaQuery/enhancer.tests.js b/apolloschurchapp/src/ui/MediaQuery/enhancer.tests.js
deleted file mode 100644
index 9438e27..0000000
--- a/apolloschurchapp/src/ui/MediaQuery/enhancer.tests.js
+++ /dev/null
@@ -1,163 +0,0 @@
-import React from 'react';
-import renderer from 'react-test-renderer';
-import { View, Dimensions } from 'react-native';
-
-import Providers from 'apolloschurchapp/src/Providers';
-import { breakpoints as defaultBreakPoints } from 'apolloschurchapp/src/ui/theme/defaultTheme';
-
-import enhancer from './enhancer';
-
-const TestHOC = (mock) => (Component) => {
-  mock();
-  return Component;
-};
-
-const mediaQueryThatPasses = () => true;
-const mediaQueryThatFails = () => false;
-
-describe('The mediaQuery enhancer', () => {
-  it('uses the first HOC (and renders the root View) with a passing media query', () => {
-    const firstMock = jest.fn();
-    const secondMock = jest.fn();
-
-    const Component = enhancer(
-      mediaQueryThatPasses,
-      TestHOC(firstMock),
-      TestHOC(secondMock)
-    )(View);
-    const tree = renderer.create(
-      <Providers>
-        <Component />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-    expect(firstMock.mock.calls.length).toBe(1);
-    expect(secondMock.mock.calls.length).toBe(0);
-  });
-  it('uses the second HOC (and renders the root View) with a failing media query', () => {
-    const firstMock = jest.fn();
-    const secondMock = jest.fn();
-
-    const Component = enhancer(
-      mediaQueryThatFails,
-      TestHOC(firstMock),
-      TestHOC(secondMock)
-    )(View);
-    const tree = renderer.create(
-      <Providers>
-        <Component />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-    expect(firstMock.mock.calls.length).toBe(0);
-    expect(secondMock.mock.calls.length).toBe(1);
-  });
-
-  const testWindow = Dimensions.get('window');
-  it('works with a simple media query', () => {
-    const firstMock = jest.fn();
-
-    const Component = enhancer(
-      () => ({ maxWidth: testWindow.width + 1 }),
-      TestHOC(firstMock)
-    )(View);
-
-    const tree = renderer.create(
-      <Providers>
-        <Component />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-    expect(firstMock.mock.calls.length).toBe(1);
-  });
-
-  it('works with a complex media query', () => {
-    const firstMock = jest.fn();
-
-    const Component = enhancer(
-      () => ({
-        maxWidth: testWindow.width + 1,
-        minWidth: testWindow.width - 1,
-        maxHeight: testWindow.height + 1,
-        minHeight: testWindow.height - 1,
-        minDeviceAspectRatio: testWindow.width / testWindow.height - 1,
-        maxDeviceAspectRatio: testWindow.width / testWindow.height + 1,
-      }),
-      TestHOC(firstMock)
-    )(View);
-
-    const tree = renderer.create(
-      <Providers>
-        <Component />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-    expect(firstMock.mock.calls.length).toBe(1);
-  });
-
-  it('uses second HOC when provided with a complex media query that doesnt match', () => {
-    const firstMock = jest.fn();
-    const secondMock = jest.fn();
-
-    const Component = enhancer(
-      () => ({
-        maxWidth: testWindow.width - 1,
-        minWidth: testWindow.width + 1,
-        maxHeight: testWindow.height - 1,
-        minHeight: testWindow.height + 1,
-        minDeviceAspectRatio: testWindow.width / testWindow.height + 1,
-        maxDeviceAspectRatio: testWindow.width / testWindow.height - 1,
-      }),
-      TestHOC(firstMock),
-      TestHOC(secondMock)
-    )(View);
-
-    const tree = renderer.create(
-      <Providers>
-        <Component />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-    expect(firstMock.mock.calls.length).toBe(0);
-    expect(secondMock.mock.calls.length).toBe(1);
-  });
-
-  it('passes in breakpoints to the test function', () => {
-    const firstMock = jest.fn();
-
-    const testFunction = ({ height, width, ...breakpoints }) => {
-      expect(breakpoints).toEqual(defaultBreakPoints);
-      return true;
-    };
-
-    const Component = enhancer(testFunction, TestHOC(firstMock))(View);
-
-    const tree = renderer.create(
-      <Providers>
-        <Component />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-    expect(firstMock.mock.calls.length).toBe(1);
-  });
-
-  it('passes in window width and height to the test function', () => {
-    const firstMock = jest.fn();
-
-    const testFunction = ({ height, width }) => {
-      expect(width).toBeGreaterThan(0);
-      expect(height).toBeGreaterThan(0);
-      return true;
-    };
-
-    const Component = enhancer(testFunction, TestHOC(firstMock))(View);
-
-    const tree = renderer.create(
-      <Providers>
-        <Component />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-    expect(firstMock.mock.calls.length).toBe(1);
-  });
-});
diff --git a/apolloschurchapp/src/ui/MediaQuery/index.js b/apolloschurchapp/src/ui/MediaQuery/index.js
deleted file mode 100644
index c38c7f0..0000000
--- a/apolloschurchapp/src/ui/MediaQuery/index.js
+++ /dev/null
@@ -1,3 +0,0 @@
-export { default as enhancer } from './enhancer';
-export { default as withWindow } from './withWindow';
-export { default } from './MediaQuery';
diff --git a/apolloschurchapp/src/ui/MediaQuery/queryMatcher.js b/apolloschurchapp/src/ui/MediaQuery/queryMatcher.js
deleted file mode 100644
index 25e95c3..0000000
--- a/apolloschurchapp/src/ui/MediaQuery/queryMatcher.js
+++ /dev/null
@@ -1,20 +0,0 @@
-const queryMatcher = ({ width, height }) => (selector, query) => {
-  switch (query) {
-    case 'maxWidth':
-      return width < selector;
-    case 'minWidth':
-      return width > selector;
-    case 'maxHeight':
-      return height < selector;
-    case 'minHeight':
-      return height > selector;
-    case 'minDeviceAspectRatio':
-      return width / height > selector;
-    case 'maxDeviceAspectRatio':
-      return width / height < selector;
-    default:
-      return true;
-  }
-};
-
-export default queryMatcher;
diff --git a/apolloschurchapp/src/ui/MediaQuery/withWindow.js b/apolloschurchapp/src/ui/MediaQuery/withWindow.js
deleted file mode 100644
index 0ee9583..0000000
--- a/apolloschurchapp/src/ui/MediaQuery/withWindow.js
+++ /dev/null
@@ -1,36 +0,0 @@
-import React, { PureComponent } from 'react';
-import { Dimensions } from 'react-native';
-
-export default function withWindow(ComponentToWrap) {
-  return class WithWindow extends PureComponent {
-    state = {
-      window: {
-        height: Dimensions.get('window').height,
-        width: Dimensions.get('window').width,
-      },
-    };
-
-    componentWillMount() {
-      Dimensions.addEventListener('change', this.handler);
-    }
-
-    componentWillUnmount() {
-      Dimensions.removeEventListener('change', this.handler);
-    }
-
-    handler = ({ window }) => {
-      if (
-        // detect orientation change
-        window.width === this.state.window.height &&
-        window.height === this.state.window.width
-      ) {
-        return;
-      }
-      this.setState({ window });
-    };
-
-    render() {
-      return <ComponentToWrap {...this.state} {...this.props} />;
-    }
-  };
-}
diff --git a/apolloschurchapp/src/ui/Onboarding/Onboarding.stories.js b/apolloschurchapp/src/ui/Onboarding/Onboarding.stories.js
new file mode 100644
index 0000000..bf81552
--- /dev/null
+++ b/apolloschurchapp/src/ui/Onboarding/Onboarding.stories.js
@@ -0,0 +1,5 @@
+import React from 'react';
+import { storiesOf } from '@apollosproject/ui-storybook';
+import Onboarding from '.';
+
+storiesOf('Onboarding', module).add('full', () => <Onboarding />);
diff --git a/apolloschurchapp/src/ui/PaddedView/PaddedView.tests.js b/apolloschurchapp/src/ui/Onboarding/Onboarding.tests.js
similarity index 52%
rename from apolloschurchapp/src/ui/PaddedView/PaddedView.tests.js
rename to apolloschurchapp/src/ui/Onboarding/Onboarding.tests.js
index 3e1f918..abe9746 100644
--- a/apolloschurchapp/src/ui/PaddedView/PaddedView.tests.js
+++ b/apolloschurchapp/src/ui/Onboarding/Onboarding.tests.js
@@ -1,15 +1,15 @@
 import React from 'react';
 import renderer from 'react-test-renderer';
 
-import Providers from 'apolloschurchapp/src/Providers';
+import Providers from '../../Providers';
 
-import PaddedView from '.';
+import Onboarding from '.';
 
-describe('the PaddedView component', () => {
-  it('should render', () => {
+describe('the Onboarding component', () => {
+  it('should render Onboarding', () => {
     const tree = renderer.create(
       <Providers>
-        <PaddedView />
+        <Onboarding />
       </Providers>
     );
     expect(tree).toMatchSnapshot();
diff --git a/apolloschurchapp/src/ui/Onboarding/index.js b/apolloschurchapp/src/ui/Onboarding/index.js
new file mode 100644
index 0000000..3965e47
--- /dev/null
+++ b/apolloschurchapp/src/ui/Onboarding/index.js
@@ -0,0 +1,103 @@
+import React from 'react';
+import {
+  checkNotifications,
+  openSettings,
+  requestNotifications,
+  RESULTS,
+} from 'react-native-permissions';
+
+import {
+  GradientOverlayImage,
+  styled,
+  BackgroundView,
+} from '@apollosproject/ui-kit';
+import {
+  AskNotificationsConnected,
+  AskNameConnected,
+  FeaturesConnected,
+  AboutYouConnected,
+  LocationFinderConnected,
+  OnboardingSwiper,
+} from '@apollosproject/ui-onboarding';
+
+const FullscreenBackgroundView = styled({
+  position: 'absolute',
+  width: '100%',
+  height: '100%',
+})(BackgroundView);
+
+const StyledGradient = styled({
+  maxHeight: '40%',
+})(GradientOverlayImage);
+
+function Onboarding({ navigation }) {
+  return (
+    <>
+      <FullscreenBackgroundView />
+      <OnboardingSwiper>
+        {({ swipeForward }) => (
+          <>
+            <AskNameConnected onPressPrimary={swipeForward} />
+            <FeaturesConnected
+              onPressPrimary={swipeForward}
+              BackgroundComponent={
+                <StyledGradient
+                  source={'https://picsum.photos/640/640/?random'}
+                />
+              }
+            />
+            <AboutYouConnected
+              onPressPrimary={swipeForward}
+              BackgroundComponent={
+                <StyledGradient
+                  source={'https://picsum.photos/640/640/?random'}
+                />
+              }
+            />
+            <LocationFinderConnected
+              onPressPrimary={swipeForward}
+              onNavigate={() => {
+                navigation.navigate('Location');
+              }}
+              BackgroundComponent={
+                <StyledGradient
+                  source={'https://picsum.photos/640/640/?random'}
+                />
+              }
+            />
+            <AskNotificationsConnected
+              onRequestPushPermissions={(update) => {
+                checkNotifications().then((checkRes) => {
+                  if (checkRes.status === RESULTS.DENIED) {
+                    requestNotifications(['alert', 'badge', 'sound']).then(
+                      () => {
+                        update();
+                      }
+                    );
+                  } else {
+                    openSettings();
+                  }
+                });
+              }}
+              onPressPrimary={() => navigation.replace('Tabs')}
+              primaryNavText={'Finish'}
+              BackgroundComponent={
+                <StyledGradient
+                  source={'https://picsum.photos/640/640/?random'}
+                />
+              }
+            />
+          </>
+        )}
+      </OnboardingSwiper>
+    </>
+  );
+}
+
+Onboarding.navigationOptions = {
+  title: 'Onboarding',
+  header: null,
+  gesturesEnabled: false,
+};
+
+export default Onboarding;
diff --git a/apolloschurchapp/src/ui/PaddedView/PaddedView.stories.js b/apolloschurchapp/src/ui/PaddedView/PaddedView.stories.js
deleted file mode 100644
index c22d2c1..0000000
--- a/apolloschurchapp/src/ui/PaddedView/PaddedView.stories.js
+++ /dev/null
@@ -1,12 +0,0 @@
-import React from 'react';
-import { storiesOf } from '@storybook/react-native';
-
-import { H1 } from 'apolloschurchapp/src/ui/typography';
-
-import PaddedView from '.';
-
-storiesOf('PaddedView', module).add('Example', () => (
-  <PaddedView>
-    <H1>This text is in a PaddedView</H1>
-  </PaddedView>
-));
diff --git a/apolloschurchapp/src/ui/PaddedView/index.js b/apolloschurchapp/src/ui/PaddedView/index.js
deleted file mode 100644
index ea72d31..0000000
--- a/apolloschurchapp/src/ui/PaddedView/index.js
+++ /dev/null
@@ -1,13 +0,0 @@
-import { View } from 'react-native';
-
-import styled from 'apolloschurchapp/src/ui/styled';
-
-const PaddedView = styled(
-  ({ theme, horizontal = true, vertical = true }) => ({
-    paddingHorizontal: horizontal ? theme.sizing.baseUnit : 0,
-    paddingVertical: vertical ? theme.sizing.baseUnit : 0,
-  }),
-  'PaddedView'
-)(View);
-
-export default PaddedView;
diff --git a/apolloschurchapp/src/ui/Placeholder/Line.js b/apolloschurchapp/src/ui/Placeholder/Line.js
deleted file mode 100644
index 340dabb..0000000
--- a/apolloschurchapp/src/ui/Placeholder/Line.js
+++ /dev/null
@@ -1,18 +0,0 @@
-import React from 'react';
-import { View } from 'react-native';
-import Placeholder from 'rn-placeholder';
-
-import styled from 'apolloschurchapp/src/ui/styled';
-
-export const Line = styled(
-  ({ theme, width = '100%' }) => ({
-    borderRadius: theme.sizing.borderRadius,
-    backgroundColor: theme.colors.background.inactive,
-    height: theme.helpers.rem(1),
-    width,
-    alignSelf: 'stretch',
-  }),
-  'Placeholder.Line'
-)(({ style }) => <View style={style} />);
-
-export default Placeholder.connect(Line);
diff --git a/apolloschurchapp/src/ui/Placeholder/Media.js b/apolloschurchapp/src/ui/Placeholder/Media.js
deleted file mode 100644
index a702cd3..0000000
--- a/apolloschurchapp/src/ui/Placeholder/Media.js
+++ /dev/null
@@ -1,17 +0,0 @@
-import React from 'react';
-import { View } from 'react-native';
-import Placeholder from 'rn-placeholder';
-
-import styled from 'apolloschurchapp/src/ui/styled';
-
-export const Media = styled(
-  ({ borderRadius, theme, size = '100%' }) => ({
-    height: size,
-    width: size,
-    borderRadius: borderRadius || theme.sizing.borderRadius,
-    backgroundColor: theme.colors.background.inactive,
-  }),
-  'Placeholder.Media'
-)(({ style }) => <View style={style} />);
-
-export default Placeholder.connect(Media);
diff --git a/apolloschurchapp/src/ui/Placeholder/Media.tests.js b/apolloschurchapp/src/ui/Placeholder/Media.tests.js
deleted file mode 100644
index adb247d..0000000
--- a/apolloschurchapp/src/ui/Placeholder/Media.tests.js
+++ /dev/null
@@ -1,35 +0,0 @@
-import React from 'react';
-import renderer from 'react-test-renderer';
-
-import Providers from 'apolloschurchapp/src/Providers';
-
-import { Media } from './Media';
-
-describe('The Media placeholder', () => {
-  it('renders correctly', () => {
-    const tree = renderer.create(
-      <Providers>
-        <Media />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('accepts size', () => {
-    const tree = renderer.create(
-      <Providers>
-        <Media size="50%" />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('accepts custom styles', () => {
-    const customStyle = { backgroundColor: 'salmon' };
-
-    const tree = renderer.create(
-      <Providers>
-        <Media style={customStyle} />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/ui/Placeholder/Paragraph.js b/apolloschurchapp/src/ui/Placeholder/Paragraph.js
deleted file mode 100644
index 0fa7695..0000000
--- a/apolloschurchapp/src/ui/Placeholder/Paragraph.js
+++ /dev/null
@@ -1,47 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-import { View } from 'react-native';
-import Placeholder from 'rn-placeholder';
-import { times } from 'lodash';
-
-import styled from 'apolloschurchapp/src/ui/styled';
-
-import { Line } from './Line';
-
-const ParagraphLine = styled(
-  ({ theme }) => ({
-    height: theme.helpers.rem(1),
-    marginVertical:
-      (theme.helpers.verticalRhythm(1, 1.625) - theme.helpers.rem(1)) / 2,
-  }),
-  'Placeholder.Paragraph.line'
-)(Line);
-
-export const Paragraph = ({
-  lineNumber = 3,
-  width = '100%',
-  lastLineWidth = '75%',
-  firstLineWidth = '85%',
-  lineStyle,
-  style,
-}) => (
-  <View style={style}>
-    {times(lineNumber, (i) => {
-      let lineWidth = width;
-      if (i === 0 && firstLineWidth) lineWidth = firstLineWidth;
-      if (i === lineNumber - 1 && lastLineWidth) lineWidth = lastLineWidth;
-      return <ParagraphLine key={i} width={lineWidth} style={lineStyle} />;
-    })}
-  </View>
-);
-
-Paragraph.propTypes = {
-  lineNumber: PropTypes.number,
-  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
-  lastLineWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
-  firstLineWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
-  lineStyle: PropTypes.any, // eslint-disable-line
-  style: PropTypes.any, // eslint-disable-line
-};
-
-export default Placeholder.connect(Paragraph);
diff --git a/apolloschurchapp/src/ui/Placeholder/Paragraph.tests.js b/apolloschurchapp/src/ui/Placeholder/Paragraph.tests.js
deleted file mode 100644
index ab72f64..0000000
--- a/apolloschurchapp/src/ui/Placeholder/Paragraph.tests.js
+++ /dev/null
@@ -1,53 +0,0 @@
-import React from 'react';
-import renderer from 'react-test-renderer';
-
-import Providers from 'apolloschurchapp/src/Providers';
-
-import { Paragraph } from './Paragraph';
-
-describe('The Paragraph placeholder', () => {
-  it('renders correctly', () => {
-    const tree = renderer.create(
-      <Providers>
-        <Paragraph />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('renders multiple lines', () => {
-    const tree = renderer.create(
-      <Providers>
-        <Paragraph lineNumber={50} />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('has varying width lines', () => {
-    const tree = renderer.create(
-      <Providers>
-        <Paragraph lastLineWidth={33} firstLineWidth={'23%'} />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('accepts custom line styles', () => {
-    const customStyle = { height: 33 };
-
-    const tree = renderer.create(
-      <Providers>
-        <Paragraph lineStyle={customStyle} />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('accepts custom styles', () => {
-    const customStyle = { backgroundColor: 'salmon' };
-
-    const tree = renderer.create(
-      <Providers>
-        <Paragraph style={customStyle} />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/ui/Placeholder/Typography.js b/apolloschurchapp/src/ui/Placeholder/Typography.js
deleted file mode 100644
index 0a2934e..0000000
--- a/apolloschurchapp/src/ui/Placeholder/Typography.js
+++ /dev/null
@@ -1,44 +0,0 @@
-import { compose, mapProps } from 'recompose';
-import { StyleSheet } from 'react-native';
-import Placeholder from 'rn-placeholder';
-
-import styled from 'apolloschurchapp/src/ui/styled';
-
-import { Line } from './Line';
-
-export const Typography = compose(
-  mapProps(({ style, ...otherProps }) => ({
-    flattenedStyles: StyleSheet.flatten(style),
-    ...otherProps,
-  })),
-  styled(
-    ({
-      flattenedStyles: {
-        fontSize,
-        lineHeight,
-        paddingTop,
-        paddingBottom,
-        paddingVertical,
-      } = {},
-    }) => {
-      const styles = {};
-      if (fontSize && lineHeight) {
-        styles.height = fontSize;
-        styles.marginVertical = (lineHeight - fontSize) / 2;
-      }
-      if (paddingTop) {
-        styles.marginTop = paddingTop;
-      }
-      if (paddingBottom) {
-        styles.marginBottom = paddingBottom;
-      }
-      if (paddingVertical) {
-        styles.marginVertical = paddingVertical;
-      }
-      return styles;
-    },
-    'Placeholder.Typography'
-  )
-)(Line);
-
-export default Placeholder.connect(Typography);
diff --git a/apolloschurchapp/src/ui/Placeholder/Typography.tests.js b/apolloschurchapp/src/ui/Placeholder/Typography.tests.js
deleted file mode 100644
index 42aa841..0000000
--- a/apolloschurchapp/src/ui/Placeholder/Typography.tests.js
+++ /dev/null
@@ -1,27 +0,0 @@
-import React from 'react';
-import renderer from 'react-test-renderer';
-
-import Providers from 'apolloschurchapp/src/Providers';
-
-import { Typography } from './Typography';
-
-describe('The Typography placeholder', () => {
-  it('renders correctly', () => {
-    const tree = renderer.create(
-      <Providers>
-        <Typography />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('translates type styles', () => {
-    const customTypeStyles = { fontSize: 24, lineHeight: 32 };
-
-    const tree = renderer.create(
-      <Providers>
-        <Typography style={customTypeStyles} />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/ui/Placeholder/index.js b/apolloschurchapp/src/ui/Placeholder/index.js
deleted file mode 100644
index 82f6577..0000000
--- a/apolloschurchapp/src/ui/Placeholder/index.js
+++ /dev/null
@@ -1,14 +0,0 @@
-import Line from './Line';
-import Typography from './Typography';
-import Media from './Media';
-import Paragraph from './Paragraph';
-
-export withPlaceholder from './withPlaceholder';
-export { Line, Typography, Media, Paragraph };
-
-export default {
-  Line,
-  Typography,
-  Media,
-  Paragraph,
-};
diff --git a/apolloschurchapp/src/ui/Placeholder/withPlaceholder.js b/apolloschurchapp/src/ui/Placeholder/withPlaceholder.js
deleted file mode 100644
index 6920bd5..0000000
--- a/apolloschurchapp/src/ui/Placeholder/withPlaceholder.js
+++ /dev/null
@@ -1,20 +0,0 @@
-import React from 'react';
-
-import { getIsLoading } from 'apolloschurchapp/src/ui/isLoading';
-
-import { Line } from '.';
-
-const withPlaceholder = (PlaceholderComponent = Line, getProps = {}) => (
-  Component
-) =>
-  getIsLoading(({ isLoading = false, style, ...props }) => {
-    const propInput =
-      typeof getProps === 'function' ? getProps(props) : getProps;
-    return (
-      <PlaceholderComponent onReady={!isLoading} style={style} {...propInput}>
-        <Component style={style} {...props} />
-      </PlaceholderComponent>
-    );
-  });
-
-export default withPlaceholder;
diff --git a/apolloschurchapp/src/ui/ProgressiveImage/ProgressiveImage.tests.js b/apolloschurchapp/src/ui/ProgressiveImage/ProgressiveImage.tests.js
deleted file mode 100644
index 9f13fc2..0000000
--- a/apolloschurchapp/src/ui/ProgressiveImage/ProgressiveImage.tests.js
+++ /dev/null
@@ -1,28 +0,0 @@
-import React from 'react';
-import renderer from 'react-test-renderer';
-
-import { ThemeProvider } from 'apolloschurchapp/src/ui/theme';
-
-import ProgressiveImage from '.';
-
-describe('the ProgressiveImage component', () => {
-  it('should render', () => {
-    const tree = renderer.create(
-      <ThemeProvider>
-        <ProgressiveImage
-          source={{
-            uri: 'https://placeholdit.co/i/1500x1500',
-            width: 1500,
-            height: 1500,
-          }}
-          thumbnail={{
-            uri: 'https://placeholdit.co/i/50x50',
-            width: 50,
-            height: 50,
-          }}
-        />
-      </ThemeProvider>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/ui/ProgressiveImage/index.js b/apolloschurchapp/src/ui/ProgressiveImage/index.js
deleted file mode 100644
index 3ce2c5f..0000000
--- a/apolloschurchapp/src/ui/ProgressiveImage/index.js
+++ /dev/null
@@ -1,68 +0,0 @@
-import React, { PureComponent } from 'react';
-import PropTypes from 'prop-types';
-import { View, StyleSheet } from 'react-native';
-
-import styled from 'apolloschurchapp/src/ui/styled';
-import ConnectedImage from 'apolloschurchapp/src/ui/ConnectedImage';
-
-const Wrapper = styled(({ theme }) => ({
-  width: '100%',
-  aspectRatio: 1,
-  backgroundColor: theme.colors.background.inactive,
-}))(View);
-
-const styles = StyleSheet.create({
-  imageStyles: {
-    width: '100%',
-    height: '100%',
-    resizeMode: 'cover',
-  },
-});
-
-class ProgressiveImage extends PureComponent {
-  static propTypes = {
-    source: ConnectedImage.propTypes.source,
-    thumbnail: ConnectedImage.propTypes.source,
-    thumbnailBlurRadius: PropTypes.number,
-    imageStyle: PropTypes.any, // eslint-disable-line
-    ...ConnectedImage.propTypes,
-  };
-
-  static defaultProps = {
-    thumbnailBlurRadius: 2,
-  };
-
-  render() {
-    const {
-      source,
-      thumbnail,
-      thumbnailFadeDuration,
-      imageFadeDuration,
-      thumbnailBlurRadius,
-      onLoadThumbnail,
-      onLoadImage,
-      imageStyle,
-      style,
-      ...imageProps
-    } = this.props;
-    return (
-      <Wrapper style={style}>
-        {thumbnail ? (
-          <ConnectedImage
-            {...imageProps}
-            blurRadius={thumbnailBlurRadius}
-            style={[styles.imageStyles, imageStyle]}
-            source={thumbnail}
-          />
-        ) : null}
-        <ConnectedImage
-          {...imageProps}
-          style={[styles.imageStyles, imageStyle]}
-          source={source}
-        />
-      </Wrapper>
-    );
-  }
-}
-
-export default ProgressiveImage;
diff --git a/apolloschurchapp/src/ui/Scripture/Item.js b/apolloschurchapp/src/ui/Scripture/Item.js
deleted file mode 100644
index 2d7a8ed..0000000
--- a/apolloschurchapp/src/ui/Scripture/Item.js
+++ /dev/null
@@ -1,32 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-import { View } from 'react-native';
-import Placeholder from 'rn-placeholder';
-
-import { H4, H6 } from 'apolloschurchapp/src/ui/typography';
-
-import ScriptureHTMLView from './ScriptureHTMLView';
-
-const Item = ({ reference, html, isLoading }) => (
-  <View>
-    <H4>
-      <H4>{reference}</H4> <H6>WEB</H6>
-    </H4>
-    <Placeholder.Paragraph
-      lineNumber={5}
-      onReady={!isLoading}
-      lastLineWidth="60%"
-      firstLineWidth="40%"
-    >
-      <ScriptureHTMLView>{html}</ScriptureHTMLView>
-    </Placeholder.Paragraph>
-  </View>
-);
-
-Item.propTypes = {
-  reference: PropTypes.string,
-  html: PropTypes.string,
-  isLoading: PropTypes.bool,
-};
-
-export default Item;
diff --git a/apolloschurchapp/src/ui/Scripture/Scripture.stories.js b/apolloschurchapp/src/ui/Scripture/Scripture.stories.js
deleted file mode 100644
index 2d985ee..0000000
--- a/apolloschurchapp/src/ui/Scripture/Scripture.stories.js
+++ /dev/null
@@ -1,108 +0,0 @@
-import React from 'react';
-import { ScrollView } from 'react-native';
-import { storiesOf } from '@storybook/react-native';
-import PaddedView from 'apolloschurchapp/src/ui/PaddedView';
-
-import Item from './Item';
-
-const genesis1 = {
-  scripture: {
-    reference: 'Genesis 1:1-5',
-    html:
-      '<p class="p"><span data-number="1" class="v">1</span>In the beginning, God created the heavens and the earth. <span data-number="2" class="v">2</span>The earth was formless and empty. Darkness was on the surface of the deep and God’s Spirit was hovering over the surface of the waters.</p><p class="p"><span data-number="3" class="v">3</span>God said, “Let there be light,” and there was light. <span data-number="4" class="v">4</span>God saw the light, and saw that it was good. God divided the light from the darkness. <span data-number="5" class="v">5</span>God called the light “day”, and the darkness he called “night”. There was evening and there was morning, the first day.</p>',
-  },
-};
-
-const psalm23 = {
-  scripture: {
-    reference: 'Psalm 23',
-    html:
-      '<p class="d">A Psalm by David.</p><p class="q1"><span data-number="1" class="v">1</span>Yahweh is my shepherd:</p><p class="q2">I shall lack nothing.</p><p class="q1"><span data-number="2" class="v">2</span>He makes me lie down in green pastures.</p><p class="q2">He leads me beside still waters.</p><p class="q1"><span data-number="3" class="v">3</span>He restores my soul.</p><p class="q2">He guides me in the paths of righteousness for his name’s sake.</p><p class="q1"><span data-number="4" class="v">4</span>Even though I walk through the valley of the shadow of death,</p><p class="q2">I will fear no evil, for you are with me.</p><p class="q1">Your rod and your staff,</p><p class="q2">they comfort me.</p><p class="q1"><span data-number="5" class="v">5</span>You prepare a table before me</p><p class="q2">in the presence of my enemies.</p><p class="q1">You anoint my head with oil.</p><p class="q2">My cup runs over.</p><p class="q1"><span data-number="6" class="v">6</span>Surely goodness and loving kindness shall follow me all the days of my life,</p><p class="q2">and I will dwell in Yahweh’s house forever.</p>',
-  },
-};
-
-const songOfSolomon1 = {
-  scripture: {
-    reference: 'Song of Solomon 1:1-4',
-    html:
-      '<p class="p"><span data-number="1" class="v">1</span>The Song of songs, which is Solomon’s.</p><p class="sp">Beloved</p><p class="q1"><span data-number="2" class="v">2</span>Let him kiss me with the kisses of his mouth;</p><p class="q2">for your love is better than wine.</p><p class="q1"><span data-number="3" class="v">3</span>Your oils have a pleasing fragrance.</p><p class="q2">Your name is oil poured out,</p><p class="q2">therefore the virgins love you.</p><p class="q1"><span data-number="4" class="v">4</span>Take me away with you.</p><p class="q2">Let’s hurry.</p><p class="q2">The king has brought me into his rooms.</p><p class="sp">Friends</p><p class="q1">We will be glad and rejoice in you.</p><p class="q2">We will praise your love more than wine!</p><p class="sp">Beloved</p><p class="q1">They are right to love you.</p>',
-  },
-};
-
-const john3 = {
-  scripture: {
-    reference: 'John 3:16-17',
-    html:
-      '<p class="p"><span data-number="16" class="v">16</span><span class="wj">For God so loved the world, that he gave his one and only Son, that whoever believes in him should not perish, but have eternal life. </span><span data-number="17" class="v">17</span><span class="wj">For God didn’t send his Son into the world to judge the world, but that the world should be saved through him. </span></p>',
-  },
-};
-
-const revelation22 = {
-  scripture: {
-    reference: 'Revelation 22:20-21',
-    html:
-      '<p class="p"><span data-number="20" class="v">20</span>He who testifies these things says, <span class="wj">“Yes, I come quickly.” </span></p><p class="p">Amen! Yes, come, Lord Jesus.</p><p class="p"><span data-number="21" class="v">21</span>The grace of the Lord Jesus Christ be with all the saints. Amen.</p>',
-  },
-};
-
-const stories = storiesOf('Scripture', module);
-
-stories.add('Genesis 1:1-5', () => (
-  <ScrollView>
-    <PaddedView>
-      <Item
-        reference={genesis1.scripture.reference}
-        html={genesis1.scripture.html}
-        isLoading={false}
-      />
-    </PaddedView>
-  </ScrollView>
-));
-
-stories.add('Psalm 23', () => (
-  <ScrollView>
-    <PaddedView>
-      <Item
-        reference={psalm23.scripture.reference}
-        html={psalm23.scripture.html}
-        isLoading={false}
-      />
-    </PaddedView>
-  </ScrollView>
-));
-
-stories.add('Song of Solomon 1:1-4', () => (
-  <ScrollView>
-    <PaddedView>
-      <Item
-        reference={songOfSolomon1.scripture.reference}
-        html={songOfSolomon1.scripture.html}
-        isLoading={false}
-      />
-    </PaddedView>
-  </ScrollView>
-));
-
-stories.add('John 3:16-17', () => (
-  <ScrollView>
-    <PaddedView>
-      <Item
-        reference={john3.scripture.reference}
-        html={john3.scripture.html}
-        isLoading={false}
-      />
-    </PaddedView>
-  </ScrollView>
-));
-
-stories.add('Revelation 22:20-21', () => (
-  <ScrollView>
-    <PaddedView>
-      <Item
-        reference={revelation22.scripture.reference}
-        html={revelation22.scripture.html}
-        isLoading={false}
-      />
-    </PaddedView>
-  </ScrollView>
-));
diff --git a/apolloschurchapp/src/ui/Scripture/Scripture.tests.js b/apolloschurchapp/src/ui/Scripture/Scripture.tests.js
deleted file mode 100644
index 080c38e..0000000
--- a/apolloschurchapp/src/ui/Scripture/Scripture.tests.js
+++ /dev/null
@@ -1,40 +0,0 @@
-import React from 'react';
-import renderer from 'react-test-renderer';
-
-import Providers from 'apolloschurchapp/src/Providers';
-import Item from './Item';
-
-const songOfSolomon1 = {
-  reference: 'Song of Solomon 1:1-4',
-  html:
-    '<p class="p"><span data-number="1" class="v">1</span>The Song of songs, which is Solomon’s.</p><p class="sp">Beloved</p><p class="q1"><span data-number="2" class="v">2</span>Let him kiss me with the kisses of his mouth;</p><p class="q2">for your love is better than wine.</p><p class="q1"><span data-number="3" class="v">3</span>Your oils have a pleasing fragrance.</p><p class="q2">Your name is oil poured out,</p><p class="q2">therefore the virgins love you.</p><p class="q1"><span data-number="4" class="v">4</span>Take me away with you.</p><p class="q2">Let’s hurry.</p><p class="q2">The king has brought me into his rooms.</p><p class="sp">Friends</p><p class="q1">We will be glad and rejoice in you.</p><p class="q2">We will praise your love more than wine!</p><p class="sp">Beloved</p><p class="q1">They are right to love you.</p>',
-};
-
-const john3 = {
-  reference: 'John 3:16-17',
-  html:
-    '<p class="p"><span data-number="16" class="v">16</span><span class="wj">For God so loved the world, that he gave his one and only Son, that whoever believes in him should not perish, but have eternal life. </span><span data-number="17" class="v">17</span><span class="wj">For God didn’t send his Son into the world to judge the world, but that the world should be saved through him. </span></p>',
-};
-
-describe('the ScriptureItem component', () => {
-  it('renders Song of Solomon 1:1-4', () => {
-    const tree = renderer.create(
-      <Providers>
-        <Item
-          reference={songOfSolomon1.reference}
-          html={songOfSolomon1.html}
-          isLoading={false}
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('renders John 3:16-17', () => {
-    const tree = renderer.create(
-      <Providers>
-        <Item reference={john3.reference} html={john3.html} isLoading={false} />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/ui/Scripture/ScriptureHTMLView.js b/apolloschurchapp/src/ui/Scripture/ScriptureHTMLView.js
deleted file mode 100644
index 9cb7462..0000000
--- a/apolloschurchapp/src/ui/Scripture/ScriptureHTMLView.js
+++ /dev/null
@@ -1,75 +0,0 @@
-import React from 'react';
-import { withProps } from 'recompose';
-import { Text } from 'react-native';
-
-import HTMLView from 'apolloschurchapp/src/ui/HTMLView';
-import defaultRenderer, {
-  wrapTextChildren,
-} from 'apolloschurchapp/src/ui/HTMLView/defaultRenderer';
-import Paragraph from 'apolloschurchapp/src/ui/typography/Paragraph';
-import { H4, H6, BodyText } from 'apolloschurchapp/src/ui/typography';
-import styled from 'apolloschurchapp/src/ui/styled';
-
-const RedLetters = styled(({ theme }) => ({
-  color: theme.colors.wordOfChrist,
-}))(Text);
-
-const NumText = styled(({ theme }) => ({
-  color: theme.colors.text.tertiary,
-  lineHeight: theme.helpers.verticalRhythm(1, 1.625),
-}))(H6);
-
-const HeavyText = styled(({ theme }) => ({
-  lineHeight: theme.helpers.verticalRhythm(2),
-}))(H4);
-
-const renderer = (node, { children, ...other }) => {
-  // the defaultRenderer support several basic elements out of the box,
-  // this function only needs to handle the cases that are unique to scripture.
-  const className = (node && node.attribs && node.attribs.class) || '';
-
-  if (className.includes('v')) {
-    /* TODO: a single space lives here to temporarily space verse numbers when they are not at the
-     * beginning of a sentence or paragraph. It affects all instences (albeit less noticably in
-     * somecases) so a more procise fix in the future is prefered.
-     */
-    return <NumText> {children} </NumText>;
-  }
-
-  if (className.includes('sp') || className.includes('d')) {
-    return <HeavyText>{children}</HeavyText>;
-  }
-
-  if (className.includes('q1')) {
-    return <BodyText>{children}</BodyText>;
-  }
-
-  if (className.includes('q2')) {
-    return (
-      <BodyText>
-        {'     '}
-        {children}
-      </BodyText>
-    );
-  }
-
-  if (className.includes('wj')) {
-    return <RedLetters>{children}</RedLetters>;
-  }
-
-  if (node.name === 'p') {
-    return (
-      <Paragraph>
-        <BodyText>{wrapTextChildren(children)}</BodyText>
-      </Paragraph>
-    );
-  }
-
-  return defaultRenderer(node, { children, ...other });
-};
-
-const ScriptureHTMLView = withProps({
-  renderer,
-})(HTMLView);
-
-export default ScriptureHTMLView;
diff --git a/apolloschurchapp/src/ui/Scripture/index.js b/apolloschurchapp/src/ui/Scripture/index.js
deleted file mode 100644
index 1c5fb67..0000000
--- a/apolloschurchapp/src/ui/Scripture/index.js
+++ /dev/null
@@ -1,38 +0,0 @@
-import React from 'react';
-import { Query } from 'react-apollo';
-import { get } from 'lodash';
-import PropTypes from 'prop-types';
-import { View } from 'react-native';
-
-// import HTMLView from 'apolloschurchapp/src/ui/HTMLView';
-import Spacer from 'apolloschurchapp/src/ui/Spacer';
-
-import Item from './Item';
-import getScripture from './getScripture';
-
-// const copyright =
-//   '<h6>Scripture taken from The Holy Bible, English Standard Version. Copyright &copy;2001 by <a href="http://www.crosswaybibles.org">Crossway Bibles</a>, a publishing ministry of Good News Publishers. Used by permission. All rights reserved. Text provided by the <a href="http://www.gnpcb.org/esv/share/services/">Crossway Bibles Web Service</a><h6>';
-
-const Scripture = ({ references = [] }) => (
-  <View>
-    {references.map((query) => (
-      <Query query={getScripture} variables={{ query }} key={query}>
-        {({ loading, data }) => (
-          <Item
-            reference={get(data, 'scripture.reference', '')}
-            html={get(data, 'scripture.html', '')}
-            isLoading={loading}
-          />
-        )}
-      </Query>
-    ))}
-    <Spacer byHeight />
-    {/* <HTMLView>{copyright}</HTMLView> */}
-  </View>
-);
-
-Scripture.propTypes = {
-  references: PropTypes.arrayOf(PropTypes.string),
-};
-
-export default Scripture;
diff --git a/apolloschurchapp/src/ui/SearchCard/SearchCard.tests.js b/apolloschurchapp/src/ui/SearchCard/SearchCard.tests.js
new file mode 100644
index 0000000..478a956
--- /dev/null
+++ b/apolloschurchapp/src/ui/SearchCard/SearchCard.tests.js
@@ -0,0 +1,70 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from '../../Providers';
+
+import SearchCard from '.';
+
+describe('The SearchCard component', () => {
+  it('should render', () => {
+    const data = {
+      title: 'How to lead people to Jesus',
+      summary:
+        'Love compels a mother to lose all dignity in public as she screams the name of her lost child.',
+      coverImage: {
+        name: null,
+        sources: [
+          {
+            uri:
+              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3Dd3a96243-2558-4c04-bf41-3aadcf41771f',
+            __typename: 'ImageMediaSource',
+          },
+        ],
+        __typename: 'ImageMedia',
+      },
+      cursor: 'b487224762b030f470967f45d7205823',
+      node: {
+        id: 'DevotionalContentItem:561dfb7dbd8a5c093fd8385c7edaadbc',
+        title: 'How to lead people to Jesus',
+        hyphenatedTitle: '-',
+        isLiked: false,
+        likedCount: 0,
+        summary:
+          'Love compels a mother to lose all dignity in public as she screams the name of her lost child.',
+        coverImage: {
+          name: 'Square Image',
+          sources: [
+            {
+              uri:
+                'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3Dd3a96243-2558-4c04-bf41-3aadcf41771f',
+              __typename: 'ImageMediaSource',
+            },
+          ],
+          __typename: 'ImageMedia',
+        },
+        theme: null,
+        parentChannel: {
+          id: 'ContentChannel:559b23fd0aa90e81b1c023e72e230fa1',
+          name: 'Devotional',
+          __typename: 'ContentChannel',
+        },
+        videos: [{ sources: [], __typename: 'VideoMedia' }],
+        audios: [],
+        __typename: 'DevotionalContentItem',
+      },
+      __typename: 'SearchResult',
+    };
+
+    const tree = renderer.create(
+      <Providers>
+        <SearchCard
+          coverImage={data.coverImage}
+          summary={data.summary}
+          title={data.title}
+          node={data.node}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/SearchCard/index.js b/apolloschurchapp/src/ui/SearchCard/index.js
new file mode 100644
index 0000000..3a73fb4
--- /dev/null
+++ b/apolloschurchapp/src/ui/SearchCard/index.js
@@ -0,0 +1,55 @@
+import React, { memo } from 'react';
+import PropTypes from 'prop-types';
+import { get } from 'lodash';
+
+import { contentCardComponentMapper } from '../ContentCardConnected';
+
+const SearchCard = memo(
+  ({
+    Component,
+    coverImage,
+    isLoading,
+    node,
+    summary,
+    title,
+    ...otherProps
+  }) => {
+    /* We don't have a way to know for certain if a particular card is true for `hasAction` without
+     * hitting Rock. While not 100% perfect we do know that these two types will have almost always
+     * have media associated with them. */
+    const hasAction = ['MediaContentItem', 'WeekendContentItem'].includes(
+      get(node, '__typename')
+    );
+
+    return (
+      <Component
+        coverImage={get(coverImage, 'sources', [])}
+        hasAction={hasAction}
+        isLoading={isLoading}
+        summary={summary}
+        title={title}
+        {...otherProps}
+        {...node}
+      />
+    );
+  }
+);
+
+SearchCard.propTypes = {
+  Component: PropTypes.func,
+  coverImage: PropTypes.shape({
+    sources: PropTypes.array,
+  }),
+  summary: PropTypes.string,
+  title: PropTypes.string,
+  node: PropTypes.shape({}),
+  isLoading: PropTypes.bool,
+};
+
+SearchCard.defaultProps = {
+  Component: contentCardComponentMapper,
+};
+
+SearchCard.displayName = 'SearchCard';
+
+export default SearchCard;
diff --git a/apolloschurchapp/src/ui/Placeholder/Line.tests.js b/apolloschurchapp/src/ui/SearchInputHeader/SearchInputHeader.tests.js
similarity index 50%
rename from apolloschurchapp/src/ui/Placeholder/Line.tests.js
rename to apolloschurchapp/src/ui/SearchInputHeader/SearchInputHeader.tests.js
index 598a1b0..cdaeb17 100644
--- a/apolloschurchapp/src/ui/Placeholder/Line.tests.js
+++ b/apolloschurchapp/src/ui/SearchInputHeader/SearchInputHeader.tests.js
@@ -1,33 +1,32 @@
 import React from 'react';
 import renderer from 'react-test-renderer';
 
-import Providers from 'apolloschurchapp/src/Providers';
+import Providers from '../../Providers';
 
-import { Line } from './Line';
+import SearchInputHeader from '.';
 
-describe('The Line placeholder', () => {
-  it('renders correctly', () => {
+describe('The Onboarding LandingScreen component', () => {
+  it('should render', () => {
     const tree = renderer.create(
       <Providers>
-        <Line />
+        <SearchInputHeader />
       </Providers>
     );
     expect(tree).toMatchSnapshot();
   });
-  it('accepts width', () => {
+  it('should be stylable', () => {
+    const style = { backgroundColor: 'salmon' };
     const tree = renderer.create(
       <Providers>
-        <Line width="50%" />
+        <SearchInputHeader style={style} />
       </Providers>
     );
     expect(tree).toMatchSnapshot();
   });
-  it('accepts custom styles', () => {
-    const customStyle = { backgroundColor: 'salmon' };
-
+  it('should render pass props to SearchInput', () => {
     const tree = renderer.create(
       <Providers>
-        <Line width="50%" style={customStyle} />
+        <SearchInputHeader cancelButtonText={'Boom'} />
       </Providers>
     );
     expect(tree).toMatchSnapshot();
diff --git a/apolloschurchapp/src/ui/SearchInputHeader/index.js b/apolloschurchapp/src/ui/SearchInputHeader/index.js
new file mode 100644
index 0000000..b2f33d9
--- /dev/null
+++ b/apolloschurchapp/src/ui/SearchInputHeader/index.js
@@ -0,0 +1,64 @@
+import React from 'react';
+import { Platform, StyleSheet, View } from 'react-native';
+
+import { styled, PaddedView, SearchInput } from '@apollosproject/ui-kit';
+
+const HeaderBorder = styled(
+  ({ theme }) => ({
+    paddingBottom: theme.sizing.baseUnit / 2,
+    /* It's unclear why this is necessary but without it the layout breaks on both platforms. Limited
+     * research suggest that without a background color the shadows don't know what to blend with so
+     * the view collapses. */
+    backgroundColor: theme.colors.background.paper,
+    // Renders the same shadows that React Navigation does.
+    ...Platform.select({
+      ios: {
+        shadowColor: 'rgba(0, 0, 0, 0.3)',
+        shadowOpacity: 0.85,
+        shadowRadius: 0,
+        shadowOffset: {
+          width: 0,
+          height: StyleSheet.hairlineWidth,
+        },
+      },
+      android: {
+        elevation: 4,
+      },
+    }),
+  }),
+  'SearchInputHeader.HeaderBorder'
+)(PaddedView);
+
+// This element is used to clip the Android shadow in every directection except the bottom.
+const AndroidClipElevationFix = styled(
+  {
+    ...Platform.select({
+      android: {
+        paddingBottom: 4,
+        overflow: 'hidden',
+      },
+    }),
+  },
+  'SearchInputHeader.AndroidClipElevationFix'
+)(View);
+
+const ReactNavigationStyleReset = StyleSheet.create({
+  header: {
+    borderBottomWidth: 0,
+    elevation: 0,
+  },
+});
+
+const SearchInputHeader = ({ style, ...props }) => (
+  <AndroidClipElevationFix style={style}>
+    <HeaderBorder vertical={false}>
+      <SearchInput {...props} />
+    </HeaderBorder>
+  </AndroidClipElevationFix>
+);
+
+SearchInputHeader.propTypes = {
+  ...SearchInput.propTypes,
+};
+
+export { SearchInputHeader as default, ReactNavigationStyleReset };
diff --git a/apolloschurchapp/src/ui/Share/index.js b/apolloschurchapp/src/ui/Share/index.js
deleted file mode 100644
index 2a5fddb..0000000
--- a/apolloschurchapp/src/ui/Share/index.js
+++ /dev/null
@@ -1,28 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-import { compose, pure } from 'recompose';
-import Icon from 'apolloschurchapp/src/ui/Icon';
-import Touchable from 'apolloschurchapp/src/ui/Touchable';
-import share from 'apolloschurchapp/src/utils/content/share';
-import { withTheme } from 'apolloschurchapp/src/ui/theme';
-
-const enhance = compose(
-  pure,
-  withTheme()
-);
-
-const Share = enhance(({ content, theme }) => (
-  <Touchable onPress={() => share(content)}>
-    <Icon name={'share'} fill={theme.colors.secondary} />
-  </Touchable>
-));
-
-Share.propTypes = {
-  content: PropTypes.shape({
-    message: PropTypes.string,
-    title: PropTypes.string,
-    url: PropTypes.string,
-  }),
-};
-
-export default Share;
diff --git a/apolloschurchapp/src/ui/Share/Share.tests.js b/apolloschurchapp/src/ui/ShareContentButton/ShareContentButton.tests.js
similarity index 61%
rename from apolloschurchapp/src/ui/Share/Share.tests.js
rename to apolloschurchapp/src/ui/ShareContentButton/ShareContentButton.tests.js
index 2411ac0..106f6b3 100644
--- a/apolloschurchapp/src/ui/Share/Share.tests.js
+++ b/apolloschurchapp/src/ui/ShareContentButton/ShareContentButton.tests.js
@@ -1,21 +1,20 @@
 import React from 'react';
 import renderer from 'react-test-renderer';
 
-import { ThemeProvider } from 'apolloschurchapp/src/ui/theme';
+import { Providers } from '@apollosproject/ui-kit';
 
-import Share from '.';
+import ShareContentButton from '.';
 
 describe('the Share component', () => {
   it('should render', () => {
     const shareObject = {
       title: 'Shared Object Title',
       url: 'https://github.com/ApollosProject/apollos-prototype',
-      message: 'Share this with all your friends and family',
     };
     const tree = renderer.create(
-      <ThemeProvider>
-        <Share content={shareObject} />
-      </ThemeProvider>
+      <Providers>
+        <ShareContentButton content={shareObject} />
+      </Providers>
     );
     expect(tree).toMatchSnapshot();
   });
diff --git a/apolloschurchapp/src/ui/ShareContentButton/index.js b/apolloschurchapp/src/ui/ShareContentButton/index.js
new file mode 100644
index 0000000..b84568f
--- /dev/null
+++ b/apolloschurchapp/src/ui/ShareContentButton/index.js
@@ -0,0 +1,40 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import { compose, pure } from 'recompose';
+import { Touchable, Icon, withTheme } from '@apollosproject/ui-kit';
+import { AnalyticsConsumer } from '@apollosproject/ui-analytics';
+import share from '../../utils/content/share';
+
+const enhance = compose(
+  pure,
+  withTheme()
+);
+
+const ShareContentButton = enhance(({ content, theme }) => (
+  <AnalyticsConsumer>
+    {({ track }) => {
+      const onPress = () => {
+        share(content);
+        track({
+          eventName: 'Share',
+          properties: { id: content.id, title: content.title },
+        });
+      };
+      return (
+        <Touchable onPress={onPress}>
+          <Icon name={'share'} fill={theme.colors.secondary} />
+        </Touchable>
+      );
+    }}
+  </AnalyticsConsumer>
+));
+
+ShareContentButton.propTypes = {
+  content: PropTypes.shape({
+    title: PropTypes.string,
+    url: PropTypes.string,
+    id: PropTypes.string,
+  }),
+};
+
+export default ShareContentButton;
diff --git a/apolloschurchapp/src/ui/ShareContentButtonConnected/ShareContentButtonConnected.tests.js b/apolloschurchapp/src/ui/ShareContentButtonConnected/ShareContentButtonConnected.tests.js
new file mode 100644
index 0000000..2dc48e9
--- /dev/null
+++ b/apolloschurchapp/src/ui/ShareContentButtonConnected/ShareContentButtonConnected.tests.js
@@ -0,0 +1,50 @@
+import React from 'react';
+import { renderWithApolloData } from '../../utils/testUtils';
+import Providers from '../../Providers';
+import getShareContent from './getShareContent';
+import ShareContentButtonConnected from '.';
+
+const shareMock = {
+  request: {
+    query: getShareContent,
+    variables: { itemId: '1' },
+  },
+  result: {
+    data: {
+      node: {
+        id: '1',
+        __typename: 'ContentSeriesContentItem',
+        sharing: {
+          url: 'https://apolloschurchapp.newspring.cc',
+          title: 'Test Title ',
+          __typename: 'SharableContentItem',
+        },
+      },
+    },
+  },
+};
+
+const mocks = [shareMock];
+
+describe('the ShareContentButtonConnected', () => {
+  it('renders a share button', async () => {
+    const tree = await renderWithApolloData(
+      <Providers mocks={mocks}>
+        <ShareContentButtonConnected itemId={'1'} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('renders a share button with custom url, and title', async () => {
+    const tree = await renderWithApolloData(
+      <Providers mocks={mocks}>
+        <ShareContentButtonConnected
+          itemId={'1'}
+          url={'https://apollosrock.com'}
+          title="Some great title"
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/ShareContentButtonConnected/getShareContent.js b/apolloschurchapp/src/ui/ShareContentButtonConnected/getShareContent.js
new file mode 100644
index 0000000..44718b3
--- /dev/null
+++ b/apolloschurchapp/src/ui/ShareContentButtonConnected/getShareContent.js
@@ -0,0 +1,16 @@
+import gql from 'graphql-tag';
+
+export default gql`
+  query getShareContent($itemId: ID!) {
+    node(id: $itemId) {
+      ... on ContentItem {
+        id
+        sharing {
+          url
+          message
+          title
+        }
+      }
+    }
+  }
+`;
diff --git a/apolloschurchapp/src/ui/ShareContentButtonConnected/index.js b/apolloschurchapp/src/ui/ShareContentButtonConnected/index.js
new file mode 100644
index 0000000..ebe4de6
--- /dev/null
+++ b/apolloschurchapp/src/ui/ShareContentButtonConnected/index.js
@@ -0,0 +1,34 @@
+import React from 'react';
+
+import PropTypes from 'prop-types';
+import { Query } from 'react-apollo';
+import { get } from 'lodash';
+
+import ShareContentButton from '../ShareContentButton';
+
+import GET_SHARE_CONTENT from './getShareContent';
+
+const ShareContentButtonConnected = ({ itemId, title, message, url }) => (
+  <Query query={GET_SHARE_CONTENT} variables={{ itemId }}>
+    {({ data }) => {
+      const sharing = get(data, 'node.sharing', {});
+      const content = {
+        id: itemId,
+        title: title || sharing.title,
+        message: message || sharing.message,
+        url: url || sharing.url,
+      };
+      return <ShareContentButton content={content} />;
+    }}
+  </Query>
+);
+
+ShareContentButtonConnected.propTypes = {
+  itemId: PropTypes.string.isRequired,
+  // These props are available to override the default sharing data for a node.
+  title: PropTypes.string,
+  message: PropTypes.string,
+  url: PropTypes.string,
+};
+
+export default ShareContentButtonConnected;
diff --git a/apolloschurchapp/src/ui/SideBySideView/Left.js b/apolloschurchapp/src/ui/SideBySideView/Left.js
deleted file mode 100644
index 81b5fb6..0000000
--- a/apolloschurchapp/src/ui/SideBySideView/Left.js
+++ /dev/null
@@ -1,16 +0,0 @@
-import { View } from 'react-native';
-import { compose } from 'recompose';
-
-import { enhancer as mediaQuery } from 'apolloschurchapp/src/ui/MediaQuery';
-import styled from 'apolloschurchapp/src/ui/styled';
-
-export default compose(
-  mediaQuery(
-    ({ md }) => ({ minWidth: md }),
-    styled({
-      width: `${100 - 41.6666666}%`,
-      height: '100%',
-      overflow: 'hidden',
-    })
-  )
-)(View);
diff --git a/apolloschurchapp/src/ui/SideBySideView/Right.js b/apolloschurchapp/src/ui/SideBySideView/Right.js
deleted file mode 100644
index 9d80e02..0000000
--- a/apolloschurchapp/src/ui/SideBySideView/Right.js
+++ /dev/null
@@ -1,19 +0,0 @@
-import { View } from 'react-native';
-import { compose } from 'recompose';
-
-import { enhancer as mediaQuery } from 'apolloschurchapp/src/ui/MediaQuery';
-import styled from 'apolloschurchapp/src/ui/styled';
-
-export default compose(
-  mediaQuery(
-    ({ md }) => ({ minWidth: md }),
-    styled(
-      {
-        width: '41.6666666%',
-        height: '100%',
-        overflow: 'hidden',
-      },
-      'SideBySideView.Right'
-    )
-  )
-)(View);
diff --git a/apolloschurchapp/src/ui/SideBySideView/SideBySideView.tests.js b/apolloschurchapp/src/ui/SideBySideView/SideBySideView.tests.js
deleted file mode 100644
index d701831..0000000
--- a/apolloschurchapp/src/ui/SideBySideView/SideBySideView.tests.js
+++ /dev/null
@@ -1,53 +0,0 @@
-import React from 'react';
-import renderer from 'react-test-renderer';
-import { View } from 'react-native';
-
-import SideBySide, { ResponsiveSideBySideView, Left, Right } from '.';
-
-describe('The SideBySide component', () => {
-  it('should render correctly', () => {
-    const tree = renderer.create(
-      <SideBySide>
-        <View />
-        <View />
-      </SideBySide>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
-
-describe('The ResponsiveSideBySideView component', () => {
-  it('should render correctly', () => {
-    const tree = renderer.create(
-      <ResponsiveSideBySideView>
-        <View />
-        <View />
-      </ResponsiveSideBySideView>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
-
-describe('The Right component', () => {
-  it('should render correctly', () => {
-    const tree = renderer.create(
-      <Right>
-        <View />
-        <View />
-      </Right>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
-
-describe('The Left component', () => {
-  it('should render correctly', () => {
-    const tree = renderer.create(
-      <Left>
-        <View />
-        <View />
-      </Left>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/ui/SideBySideView/index.js b/apolloschurchapp/src/ui/SideBySideView/index.js
deleted file mode 100644
index 25c289d..0000000
--- a/apolloschurchapp/src/ui/SideBySideView/index.js
+++ /dev/null
@@ -1,21 +0,0 @@
-import { View } from 'react-native';
-import { compose, renderComponent } from 'recompose';
-
-import styled from 'apolloschurchapp/src/ui/styled';
-import { enhancer as mediaQuery } from 'apolloschurchapp/src/ui/MediaQuery';
-
-export { default as Right } from './Right';
-export { default as Left } from './Left';
-
-const SideBySideView = styled(({ reversed = false, stretched = true }) => ({
-  flexDirection: reversed ? 'row-reverse' : 'row',
-  flexWrap: 'nowrap',
-  justifyContent: 'space-between',
-  alignItems: stretched ? 'stretch' : 'center',
-}))(View);
-
-const ResponsiveSideBySideView = compose(
-  mediaQuery(({ md }) => ({ minWidth: md }), renderComponent(SideBySideView))
-)(View);
-
-export { SideBySideView as default, ResponsiveSideBySideView };
diff --git a/apolloschurchapp/src/ui/Spacer.js b/apolloschurchapp/src/ui/Spacer.js
deleted file mode 100644
index f3f6fef..0000000
--- a/apolloschurchapp/src/ui/Spacer.js
+++ /dev/null
@@ -1,7 +0,0 @@
-import { View } from 'react-native';
-import styled from 'apolloschurchapp/src/ui/styled';
-
-export default styled(({ theme, byWidth }) => ({
-  width: byWidth ? theme.sizing.baseUnit / 2 : null,
-  height: byWidth ? null : theme.sizing.baseUnit / 2,
-}))(View);
diff --git a/apolloschurchapp/src/ui/TabView/TabBar/Indicator.js b/apolloschurchapp/src/ui/TabView/TabBar/Indicator.js
deleted file mode 100644
index 64300fe..0000000
--- a/apolloschurchapp/src/ui/TabView/TabBar/Indicator.js
+++ /dev/null
@@ -1,45 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-import { Animated } from 'react-native';
-
-const wrapperStyles = {
-  position: 'absolute',
-  left: 0,
-  bottom: 0,
-  height: 3,
-};
-
-const Indicator = ({
-  width,
-  position,
-  navigationState,
-  indicatorColor: backgroundColor,
-}) => {
-  const translateX = Animated.multiply(
-    position.interpolate({
-      inputRange: [0, navigationState.routes.length - 1],
-      outputRange: [0, navigationState.routes.length - 1],
-      extrapolate: 'clamp',
-    }),
-    width
-  );
-  return (
-    <Animated.View
-      style={{
-        width,
-        backgroundColor,
-        transform: [{ translateX }],
-        ...wrapperStyles,
-      }}
-    />
-  );
-};
-
-Indicator.propTypes = {
-  width: PropTypes.number,
-  position: PropTypes.shape({ interpolate: PropTypes.func }),
-  navigationState: PropTypes.shape({ routes: PropTypes.array }),
-  indicatorColor: PropTypes.string,
-};
-
-export default Indicator;
diff --git a/apolloschurchapp/src/ui/TabView/TabBar/Label.js b/apolloschurchapp/src/ui/TabView/TabBar/Label.js
deleted file mode 100644
index f08eb4a..0000000
--- a/apolloschurchapp/src/ui/TabView/TabBar/Label.js
+++ /dev/null
@@ -1,13 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-
-import { H4 } from 'apolloschurchapp/src/ui/typography';
-
-const Label = ({ route }) => {
-  const labelText = route.title;
-  return <H4 padded>{labelText}</H4>;
-};
-
-Label.propTypes = { route: PropTypes.shape({ title: PropTypes.string }) };
-
-export default Label;
diff --git a/apolloschurchapp/src/ui/TabView/TabBar/index.js b/apolloschurchapp/src/ui/TabView/TabBar/index.js
deleted file mode 100644
index 63387b6..0000000
--- a/apolloschurchapp/src/ui/TabView/TabBar/index.js
+++ /dev/null
@@ -1,28 +0,0 @@
-import { TabBar } from 'react-native-tab-view';
-import { compose, withProps } from 'recompose';
-
-import styled from 'apolloschurchapp/src/ui/styled';
-import { withTheme } from 'apolloschurchapp/src/ui/theme';
-
-import Label from './Label';
-import Indicator from './Indicator';
-
-const withStyles = compose(
-  styled(
-    ({ theme }) => ({
-      backgroundColor: theme.colors.background.paper,
-    }),
-    'TabBar'
-  ),
-  withTheme(({ theme, indicatorColor }) => ({
-    indicatorColor: indicatorColor || theme.colors.tertiary,
-  }))
-);
-
-export default compose(
-  withStyles,
-  withProps({
-    renderLabel: Label,
-    renderIndicator: Indicator,
-  })
-)(TabBar);
diff --git a/apolloschurchapp/src/ui/TabView/TabView.stories.js b/apolloschurchapp/src/ui/TabView/TabView.stories.js
deleted file mode 100644
index a2e8f4b..0000000
--- a/apolloschurchapp/src/ui/TabView/TabView.stories.js
+++ /dev/null
@@ -1,28 +0,0 @@
-import React from 'react';
-import { View, StyleSheet } from 'react-native';
-import { storiesOf } from '@storybook/react-native';
-
-import TabView, { SceneMap } from '.';
-
-const styles = StyleSheet.create({
-  firstRoute: { flex: 1, backgroundColor: '#ff4081' }, // eslint-disable-line
-  secondRoute: { flex: 1, backgroundColor: '#673ab7' }, // eslint-disable-line
-});
-
-const FirstRoute = () => <View style={styles.firstRoute} />;
-const SecondRoute = () => <View style={styles.SecondRoute} />;
-
-storiesOf('TabView', module).add('default', () => (
-  <View style={StyleSheet.absoluteFill}>
-    <TabView
-      routes={[
-        { key: 'first', title: 'First' },
-        { key: 'second', title: 'Second' },
-      ]}
-      renderScene={SceneMap({
-        first: FirstRoute,
-        second: SecondRoute,
-      })}
-    />
-  </View>
-));
diff --git a/apolloschurchapp/src/ui/TabView/TabView.tests.js b/apolloschurchapp/src/ui/TabView/TabView.tests.js
deleted file mode 100644
index 8a2158b..0000000
--- a/apolloschurchapp/src/ui/TabView/TabView.tests.js
+++ /dev/null
@@ -1,36 +0,0 @@
-import React from 'react';
-import { View } from 'react-native';
-import renderer from 'react-test-renderer';
-
-import Providers from 'apolloschurchapp/src/Providers';
-
-import TabView, { SceneMap } from '.';
-
-const FirstRoute = () => (
-  // eslint-disable-next-line
-  <View style={[{ flex: 1, backgroundColor: '#ff4081' }]} />
-);
-const SecondRoute = () => (
-  // eslint-disable-next-line
-  <View style={[{ flex: 1, backgroundColor: '#673ab7' }]} />
-);
-
-describe('TabView Component', () => {
-  it('renders', () => {
-    const tree = renderer.create(
-      <Providers>
-        <TabView
-          routes={[
-            { key: 'first', title: 'First' },
-            { key: 'second', title: 'Second' },
-          ]}
-          renderScene={SceneMap({
-            first: FirstRoute,
-            second: SecondRoute,
-          })}
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/ui/TabView/index.js b/apolloschurchapp/src/ui/TabView/index.js
deleted file mode 100644
index 21777cd..0000000
--- a/apolloschurchapp/src/ui/TabView/index.js
+++ /dev/null
@@ -1,69 +0,0 @@
-import PropTypes from 'prop-types';
-import { Dimensions, Platform } from 'react-native';
-import { TabView as RNTabView, SceneMap } from 'react-native-tab-view';
-import { branch, compose, withProps, withState } from 'recompose';
-import isFunction from 'lodash/isFunction';
-
-import styled from 'apolloschurchapp/src/ui/styled';
-
-import TabBar from './TabBar';
-
-const initialLayout = {
-  height: 0,
-  width: Dimensions.get('window').width,
-};
-
-const withStyles = styled({ flex: 1 }, 'TabView');
-
-const TabView = compose(
-  withStyles,
-  branch(
-    ({ index }) => typeof index !== 'number',
-    withState('index', 'onIndexChange', ({ initialIndex }) => initialIndex)
-  ),
-  withProps((props) => {
-    function onIndexChange(index) {
-      if (isFunction(props.onIndexChange)) props.onIndexChange(index);
-      if (isFunction(props.onChange)) props.onChange(index);
-    }
-
-    return {
-      navigationState: {
-        index: props.index,
-        routes: props.routes.map((routeProps) => ({
-          ...routeProps,
-          jumpTo(key) {
-            const index = props.routes.findIndex((r) => r.key === key);
-            return onIndexChange(index);
-          },
-        })),
-      },
-      initialLayout,
-      renderTabBar: props.renderTabBar ? props.renderTabBar : TabBar,
-      onIndexChange,
-    };
-  })
-)(RNTabView);
-
-TabView.propTypes = {
-  initialIndex: PropTypes.number,
-  routes: PropTypes.arrayOf(
-    PropTypes.shape({
-      key: PropTypes.string.isRequired,
-      title: PropTypes.string.isRequired,
-    })
-  ).isRequired,
-  renderScene: PropTypes.func.isRequired,
-  renderTabBar: PropTypes.func,
-  swipeEnabled: PropTypes.bool,
-  autoHeightEnabled: PropTypes.bool,
-};
-
-TabView.defaultProps = {
-  initialIndex: 0,
-  swipeEnabled: Platform.OS !== 'web',
-  autoHeightEnabled: false,
-};
-
-export { SceneMap, TabBar };
-export default TabView;
diff --git a/apolloschurchapp/src/ui/TableView/Cell.js b/apolloschurchapp/src/ui/TableView/Cell.js
deleted file mode 100644
index 2d66bb2..0000000
--- a/apolloschurchapp/src/ui/TableView/Cell.js
+++ /dev/null
@@ -1,38 +0,0 @@
-import React, { Children, cloneElement } from 'react';
-import PropTypes from 'prop-types';
-import { View } from 'react-native';
-
-import styled from 'apolloschurchapp/src/ui/styled';
-
-const asFirstChild = (child) =>
-  cloneElement(child, {
-    style: { paddingLeft: 0 },
-  });
-
-const Container = styled(
-  ({ theme }) => ({
-    padding: theme.sizing.baseUnit / 2,
-    paddingLeft: theme.sizing.baseUnit / 1.5,
-    backgroundColor: theme.colors.background.paper,
-    flexDirection: 'row',
-    justifyContent: 'flex-start',
-    alignItems: 'center',
-    height: theme.sizing.baseUnit * 2.5,
-  }),
-  'TableView.Cell.Container'
-)(View);
-
-const Cell = ({ children, ...otherProps }) => (
-  <Container {...otherProps}>
-    {Children.map(children, (child, i) => {
-      if (i === 0) return asFirstChild(child);
-      return child;
-    })}
-  </Container>
-);
-
-Cell.propTypes = {
-  children: PropTypes.node,
-};
-
-export default Cell;
diff --git a/apolloschurchapp/src/ui/TableView/CellIcon.js b/apolloschurchapp/src/ui/TableView/CellIcon.js
deleted file mode 100644
index 3b68306..0000000
--- a/apolloschurchapp/src/ui/TableView/CellIcon.js
+++ /dev/null
@@ -1,9 +0,0 @@
-import { defaultProps } from 'recompose';
-
-import Icon from 'apolloschurchapp/src/ui/Icon';
-
-const CellIcon = defaultProps({
-  size: 20,
-})(Icon);
-
-export default CellIcon;
diff --git a/apolloschurchapp/src/ui/TableView/CellText.js b/apolloschurchapp/src/ui/TableView/CellText.js
deleted file mode 100644
index 6ab6214..0000000
--- a/apolloschurchapp/src/ui/TableView/CellText.js
+++ /dev/null
@@ -1,11 +0,0 @@
-import { H5 } from 'apolloschurchapp/src/ui/typography';
-import styled from 'apolloschurchapp/src/ui/styled';
-
-const CellText = styled(({ theme }) => ({
-  flexGrow: 1,
-  flexShrink: 1,
-  paddingLeft: theme.sizing.baseUnit / 2,
-  paddingRight: theme.sizing.baseUnit / 2,
-}))(H5);
-
-export default CellText;
diff --git a/apolloschurchapp/src/ui/TableView/Divider.js b/apolloschurchapp/src/ui/TableView/Divider.js
deleted file mode 100644
index 034fd93..0000000
--- a/apolloschurchapp/src/ui/TableView/Divider.js
+++ /dev/null
@@ -1,12 +0,0 @@
-import { View, StyleSheet } from 'react-native';
-
-import styled from 'apolloschurchapp/src/ui/styled';
-
-const Divider = styled(({ theme }) => ({
-  height: StyleSheet.hairlineWidth,
-  marginLeft: theme.sizing.baseUnit / 1.5,
-  backgroundColor: theme.colors.shadows.default,
-  width: '100%',
-}))(View);
-
-export default Divider;
diff --git a/apolloschurchapp/src/ui/TableView/FormFields.js b/apolloschurchapp/src/ui/TableView/FormFields.js
deleted file mode 100644
index 8550d26..0000000
--- a/apolloschurchapp/src/ui/TableView/FormFields.js
+++ /dev/null
@@ -1,9 +0,0 @@
-import PaddedView from 'apolloschurchapp/src/ui/PaddedView';
-import styled from 'apolloschurchapp/src/ui/styled';
-
-const FormFields = styled(({ theme }) => ({
-  paddingTop: theme.sizing.baseUnit * 0.6,
-  paddingBottom: theme.sizing.baseUnit / 2,
-}))(PaddedView);
-
-export default FormFields;
diff --git a/apolloschurchapp/src/ui/TableView/TableView.stories.js b/apolloschurchapp/src/ui/TableView/TableView.stories.js
deleted file mode 100644
index 4bdfb67..0000000
--- a/apolloschurchapp/src/ui/TableView/TableView.stories.js
+++ /dev/null
@@ -1,34 +0,0 @@
-import React from 'react';
-import { storiesOf } from '@storybook/react-native';
-
-import FlexedView from 'apolloschurchapp/src/ui/FlexedView';
-import Icon from 'apolloschurchapp/src/ui/Icon';
-import { Switch } from 'apolloschurchapp/src/ui/inputs';
-
-import TableView, { Cell, CellText, Divider } from '.';
-
-storiesOf('TableView', module).add('default', () => (
-  <FlexedView>
-    <TableView>
-      <Cell>
-        <Icon name="arrow-back" />
-        <CellText>Line Item</CellText>
-      </Cell>
-      <Divider />
-      <Cell>
-        <Icon name="camera" />
-        <CellText>A toggle!</CellText>
-        <Switch />
-      </Cell>
-      <Divider />
-      <Cell>
-        <CellText>Just a row</CellText>
-      </Cell>
-      <Divider />
-      <Cell>
-        <CellText>This be some button!</CellText>
-        <Icon name="arrow-next" />
-      </Cell>
-    </TableView>
-  </FlexedView>
-));
diff --git a/apolloschurchapp/src/ui/TableView/TableView.tests.js b/apolloschurchapp/src/ui/TableView/TableView.tests.js
deleted file mode 100644
index c6f2db9..0000000
--- a/apolloschurchapp/src/ui/TableView/TableView.tests.js
+++ /dev/null
@@ -1,42 +0,0 @@
-import React from 'react';
-import renderer from 'react-test-renderer';
-
-import FlexedView from 'apolloschurchapp/src/ui/FlexedView';
-import Providers from 'apolloschurchapp/src/Providers';
-import Icon from 'apolloschurchapp/src/ui/Icon';
-import { Switch } from 'apolloschurchapp/src/ui/inputs';
-
-import TableView, { Cell, CellText, Divider } from '.';
-
-describe('the TableView Component', () => {
-  it('should render', () => {
-    const tree = renderer.create(
-      <Providers>
-        <FlexedView>
-          <TableView>
-            <Cell>
-              <Icon name="arrow-back" />
-              <CellText>Line Item</CellText>
-            </Cell>
-            <Divider />
-            <Cell>
-              <Icon name="camera" />
-              <CellText>A toggle!</CellText>
-              <Switch />
-            </Cell>
-            <Divider />
-            <Cell>
-              <CellText>Just a row</CellText>
-            </Cell>
-            <Divider />
-            <Cell>
-              <CellText>This be some button!</CellText>
-              <Icon name="arrow-next" />
-            </Cell>
-          </TableView>
-        </FlexedView>
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/ui/TableView/index.js b/apolloschurchapp/src/ui/TableView/index.js
deleted file mode 100644
index c9c1f01..0000000
--- a/apolloschurchapp/src/ui/TableView/index.js
+++ /dev/null
@@ -1,38 +0,0 @@
-import { StyleSheet, View } from 'react-native';
-import PropTypes from 'prop-types';
-import { compose, renderComponent } from 'recompose';
-
-import styled from 'apolloschurchapp/src/ui/styled';
-import { enhancer as mediaQuery } from 'apolloschurchapp/src/ui/MediaQuery';
-import Card from 'apolloschurchapp/src/ui/Card';
-
-export { default as Cell } from './Cell';
-export { default as CellText } from './CellText';
-export { default as CellIcon } from './CellIcon';
-export { default as Divider } from './Divider';
-export { default as FormFields } from './FormFields';
-
-const TableView = compose(
-  styled(
-    ({ theme }) => ({
-      marginBottom: theme.sizing.baseUnit,
-      backgroundColor: theme.colors.background.paper,
-      borderColor: theme.colors.shadows.default,
-      borderTopWidth: StyleSheet.hairlineWidth,
-      borderBottomWidth: StyleSheet.hairlineWidth,
-      borderLeftWidth: 0,
-      borderRightWidth: 0,
-    }),
-    'TableView'
-  ),
-  mediaQuery(
-    ({ md, width }, { responsive = true }) => responsive && width > md,
-    renderComponent(Card)
-  )
-)(View);
-
-TableView.proptypes = {
-  responsive: PropTypes.bool,
-};
-
-export default TableView;
diff --git a/apolloschurchapp/src/ui/ThumbnailCard/Thumbnail.js b/apolloschurchapp/src/ui/ThumbnailCard/Thumbnail.js
deleted file mode 100644
index b0a78c0..0000000
--- a/apolloschurchapp/src/ui/ThumbnailCard/Thumbnail.js
+++ /dev/null
@@ -1,24 +0,0 @@
-import { StyleSheet } from 'react-native';
-import { compose } from 'recompose';
-
-import styled from 'apolloschurchapp/src/ui/styled';
-import ProgressiveImage from 'apolloschurchapp/src/ui/ProgressiveImage';
-import { getIsLoading } from 'apolloschurchapp/src/ui/isLoading';
-
-const Image = compose(
-  getIsLoading,
-  styled(
-    {
-      ...StyleSheet.absoluteFillObject,
-      height: '100%',
-      paddingTop: 0,
-      alignItems: 'center',
-      justifyContent: 'center',
-    },
-    'Card.Image'
-  )
-)(ProgressiveImage);
-
-Image.propTypes = ProgressiveImage.propTypes;
-
-export default Image;
diff --git a/apolloschurchapp/src/ui/ThumbnailCard/ThumbnailCard.stories.js b/apolloschurchapp/src/ui/ThumbnailCard/ThumbnailCard.stories.js
deleted file mode 100644
index a951cca..0000000
--- a/apolloschurchapp/src/ui/ThumbnailCard/ThumbnailCard.stories.js
+++ /dev/null
@@ -1,60 +0,0 @@
-import React from 'react';
-import { View } from 'react-native';
-import { storiesOf } from '@storybook/react-native';
-
-import ThumbnailCard from '.';
-
-const containerStyles = {
-  flex: 1,
-  justifyContent: 'center',
-  backgroundColor: '#f7f7f7',
-};
-
-storiesOf('ThumbnailCard', module)
-  .add('Default', () => (
-    <View style={containerStyles}>
-      <ThumbnailCard title={'Why Jesus is Timeless'} />
-    </View>
-  ))
-  .add('With Description', () => (
-    <View style={containerStyles}>
-      <ThumbnailCard
-        title={'Why Jesus is Timeless'}
-        description={
-          'This is the story of a God, who made a flood and drowned the whole world. He gave up His son for everybody, and we absolutely love Him, all the time.'
-        }
-      />
-    </View>
-  ))
-  .add('With images', () => (
-    <View style={containerStyles}>
-      <ThumbnailCard
-        title={'Why Jesus is Timeless'}
-        images={'https://picsum.photos/400/400/?random'}
-      />
-    </View>
-  ))
-  .add('With Category', () => (
-    <View style={containerStyles}>
-      <ThumbnailCard title={'Why Jesus is Timeless'} category={'Time Travel'} />
-    </View>
-  ))
-  .add('With Category and images', () => (
-    <View style={containerStyles}>
-      <ThumbnailCard
-        title={'Why Jesus is Timeless'}
-        category={'Time Travel'}
-        images={'https://picsum.photos/400/400/?random'}
-      />
-    </View>
-  ))
-  .add('Skeleton', () => (
-    <View style={containerStyles}>
-      <ThumbnailCard
-        title={'Why Jesus is Timeless'}
-        images={'https://picsum.photos/400/400/?random'}
-        category={'Time Travel'}
-        isLoading
-      />
-    </View>
-  ));
diff --git a/apolloschurchapp/src/ui/ThumbnailCard/ThumbnailCard.tests.js b/apolloschurchapp/src/ui/ThumbnailCard/ThumbnailCard.tests.js
deleted file mode 100644
index bbe5e56..0000000
--- a/apolloschurchapp/src/ui/ThumbnailCard/ThumbnailCard.tests.js
+++ /dev/null
@@ -1,77 +0,0 @@
-import React from 'react';
-import renderer from 'react-test-renderer';
-
-import Providers from 'apolloschurchapp/src/Providers';
-
-import ThumbnailCard from '.';
-
-describe('the ThumbnailCard component', () => {
-  it('should render', () => {
-    const tree = renderer.create(
-      <Providers>
-        <ThumbnailCard title={'Why Jesus is Timeless'} />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render with a description', () => {
-    const tree = renderer.create(
-      <Providers>
-        <ThumbnailCard
-          title={'Why Jesus is Timeless'}
-          description={
-            'This is the story of a God, who made a flood and drowned the whole world. He gave up His son for everybody, and we absolutely love Him, all the time.'
-          }
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render with an images', () => {
-    const tree = renderer.create(
-      <Providers>
-        <ThumbnailCard
-          title={'Why Jesus is Timeless'}
-          images={'https://picsum.photos/100/100/?random'}
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render with a category', () => {
-    const tree = renderer.create(
-      <Providers>
-        <ThumbnailCard
-          title={'Why Jesus is Timeless'}
-          category={'Time Travel'}
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render with a category and images', () => {
-    const tree = renderer.create(
-      <Providers>
-        <ThumbnailCard
-          title={'Why Jesus is Timeless'}
-          images={'https://picsum.photos/100/100/?random'}
-          category={'Time Travel'}
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render a loading state', () => {
-    const tree = renderer.create(
-      <Providers>
-        <ThumbnailCard
-          title={'Why Jesus is Timeless'}
-          images={'https://picsum.photos/100/100/?random'}
-          category={'Time Travel'}
-          isLoading
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/ui/ThumbnailCard/index.js b/apolloschurchapp/src/ui/ThumbnailCard/index.js
deleted file mode 100644
index 5bcb6cc..0000000
--- a/apolloschurchapp/src/ui/ThumbnailCard/index.js
+++ /dev/null
@@ -1,93 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-import { TouchableWithoutFeedback } from 'react-native';
-import { compose, pure } from 'recompose';
-import { startCase, toLower } from 'lodash';
-
-import { withIsLoading } from 'apolloschurchapp/src/ui/isLoading';
-import styled from 'apolloschurchapp/src/ui/styled';
-import Card, { CardContent } from 'apolloschurchapp/src/ui/Card';
-import SideBySideView from 'apolloschurchapp/src/ui/SideBySideView';
-import FlexedView from 'apolloschurchapp/src/ui/FlexedView';
-import { H5, BodyText, Paragraph } from 'apolloschurchapp/src/ui/typography';
-import { enhancer as mediaQuery } from 'apolloschurchapp/src/ui/MediaQuery';
-import ChannelLabel from 'apolloschurchapp/src/ui/ChannelLabel';
-
-import Thumbnail from './Thumbnail';
-
-const enhance = compose(
-  withIsLoading,
-  pure
-);
-
-const HorizontalLayout = styled({
-  alignItems: 'center',
-  minHeight: 110, // kind of the best middle ground for various title lengths.
-})(SideBySideView);
-
-const LeftColumn = compose(
-  styled({ flex: 1.66 }),
-  mediaQuery(
-    ({ md }) => ({ maxWidth: md }),
-    styled(({ theme }) => ({
-      paddingVertical: theme.sizing.baseUnit * 0.75,
-    })),
-    styled(({ theme }) => ({
-      paddingVertical: theme.sizing.baseUnit * 2,
-      paddingHorizontal: theme.sizing.baseUnit * 1.5,
-    }))
-  )
-)(CardContent);
-
-const RightColumn = styled({
-  alignSelf: 'stretch',
-})(FlexedView);
-
-const ThumbnailCard = enhance(
-  ({
-    title,
-    description,
-    images,
-    thumbnailImage,
-    category,
-    isLoading,
-    onPressItem,
-    ...otherProps
-  }) => (
-    <TouchableWithoutFeedback onPress={() => onPressItem()}>
-      <Card isLoading={isLoading} {...otherProps}>
-        <HorizontalLayout>
-          <LeftColumn>
-            <H5>{title}</H5>
-            {description ? (
-              <Paragraph>
-                <BodyText>{description}</BodyText>
-              </Paragraph>
-            ) : null}
-            {typeof category !== 'undefined' ? (
-              <ChannelLabel
-                label={startCase(toLower(category))}
-                isLoading={isLoading}
-              />
-            ) : null}
-          </LeftColumn>
-          {images ? (
-            <RightColumn>
-              <Thumbnail source={images} thumbnail={thumbnailImage} />
-            </RightColumn>
-          ) : null}
-        </HorizontalLayout>
-      </Card>
-    </TouchableWithoutFeedback>
-  )
-);
-
-ThumbnailCard.propTypes = {
-  title: PropTypes.string.isRequired,
-  description: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),
-  images: Thumbnail.propTypes.source,
-  category: PropTypes.string,
-  isLoading: PropTypes.bool,
-};
-
-export default ThumbnailCard;
diff --git a/apolloschurchapp/src/ui/TileImage/TileImage.stories.js b/apolloschurchapp/src/ui/TileImage/TileImage.stories.js
deleted file mode 100644
index b535875..0000000
--- a/apolloschurchapp/src/ui/TileImage/TileImage.stories.js
+++ /dev/null
@@ -1,37 +0,0 @@
-import React from 'react';
-import { storiesOf } from '@storybook/react-native';
-import { View } from 'react-native';
-
-import styled from 'apolloschurchapp/src/ui/styled';
-
-import TileImage from '.';
-
-const Square = styled({ aspectRatio: 1 })(View);
-
-storiesOf('TileImage', module)
-  .add('Default', () => (
-    <Square>
-      <TileImage
-        image={'https://picsum.photos/600/400/?random'}
-        link={'https://github.com'}
-        text={'So cool!'}
-      />
-    </Square>
-  ))
-  .add('Without text', () => (
-    <Square>
-      <TileImage
-        image={'https://picsum.photos/600/400/?random'}
-        link={'https://github.com'}
-      />
-    </Square>
-  ))
-  .add('isLoading', () => (
-    <Square>
-      <TileImage
-        image={'https://picsum.photos/600/400/?random'}
-        link={'https://github.com'}
-        isLoading
-      />
-    </Square>
-  ));
diff --git a/apolloschurchapp/src/ui/TileImage/TileImage.tests.js b/apolloschurchapp/src/ui/TileImage/TileImage.tests.js
deleted file mode 100644
index b4d1332..0000000
--- a/apolloschurchapp/src/ui/TileImage/TileImage.tests.js
+++ /dev/null
@@ -1,57 +0,0 @@
-import React from 'react';
-import renderer from 'react-test-renderer';
-
-import Providers from 'apolloschurchapp/src/Providers';
-
-import TileImage from '.';
-
-describe('the TileImage component', () => {
-  it('should render', () => {
-    const tree = renderer.create(
-      <Providers>
-        <TileImage
-          image={'https://picsum.photos/600/400/?random'}
-          link={'https://github.com'}
-          text={'So cool!'}
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render without text', () => {
-    const tree = renderer.create(
-      <Providers>
-        <TileImage
-          image={'https://picsum.photos/600/400/?random'}
-          link={'https://github.com'}
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render a loading state', () => {
-    const tree = renderer.create(
-      <Providers>
-        <TileImage
-          image={'https://picsum.photos/600/400/?random'}
-          link={'https://github.com'}
-          isLoading
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('passes an onPressItem prop', () => {
-    const handleOnPressItem = jest.fn;
-    const tree = renderer.create(
-      <Providers>
-        <TileImage
-          image={'https://picsum.photos/600/400/?random'}
-          link={'https://github.com'}
-          onPressItem={handleOnPressItem}
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/ui/TileImage/index.js b/apolloschurchapp/src/ui/TileImage/index.js
deleted file mode 100644
index 524bb16..0000000
--- a/apolloschurchapp/src/ui/TileImage/index.js
+++ /dev/null
@@ -1,73 +0,0 @@
-import React from 'react';
-import { TouchableWithoutFeedback, View } from 'react-native';
-import PropTypes from 'prop-types';
-import { pure, compose } from 'recompose';
-
-import { H4 } from 'apolloschurchapp/src/ui/typography';
-import styled from 'apolloschurchapp/src/ui/styled';
-import { withTheme } from 'apolloschurchapp/src/ui/theme';
-import GradientOverlayImage from 'apolloschurchapp/src/ui/GradientOverlayImage';
-
-const CardView = styled(
-  ({ theme }) => ({
-    borderRadius: theme.sizing.borderRadius,
-    overflow: 'hidden',
-    width: '100%',
-    height: '100%',
-    aspectRatio: 1,
-  }),
-  'TileImage'
-)(View);
-
-const Title = styled(
-  ({ theme }) => ({
-    position: 'absolute',
-    bottom: theme.sizing.baseUnit,
-    left: theme.sizing.baseUnit,
-    right: theme.sizing.baseUnit,
-    backgroundColor: theme.colors.transparent,
-    color: theme.colors.lightPrimary,
-  }),
-  'TileImage.Text'
-)(H4);
-
-const SquareGradientOverlayImage = styled({
-  aspectRatio: 1,
-})(GradientOverlayImage);
-
-const enhance = compose(
-  withTheme(({ theme: { colors } = {} } = {}) => ({ theme: { colors } })),
-  pure
-);
-
-const TileImage = enhance(
-  ({ image, link, onPressItem, text, theme, isLoading }) => (
-    <TouchableWithoutFeedback
-      onPress={() => !isLoading && onPressItem({ ...link })}
-    >
-      <CardView>
-        <SquareGradientOverlayImage
-          source={image}
-          isLoading={isLoading}
-          maintainAspectRatio={false}
-          overlayColor={text ? theme.colors.black : null}
-        />
-        <Title isLoading={isLoading}>{text}</Title>
-      </CardView>
-    </TouchableWithoutFeedback>
-  )
-);
-
-TileImage.propTypes = {
-  image: GradientOverlayImage.propTypes.source,
-  link: PropTypes.string,
-  onPressItem: PropTypes.func,
-  text: PropTypes.string,
-  isLoading: PropTypes.bool,
-};
-
-TileImage.defaultProps = {
-  text: '',
-};
-
-export default TileImage;
diff --git a/apolloschurchapp/src/ui/Touchable/index.js b/apolloschurchapp/src/ui/Touchable/index.js
deleted file mode 100644
index cef6121..0000000
--- a/apolloschurchapp/src/ui/Touchable/index.js
+++ /dev/null
@@ -1,16 +0,0 @@
-import {
-  Platform,
-  TouchableNativeFeedback,
-  TouchableOpacity,
-} from 'react-native';
-
-const IOSTouchable = TouchableOpacity;
-
-IOSTouchable.defaultProps = {
-  activeOpacity: 0.5,
-};
-
-const Touchable =
-  Platform.OS === 'android' ? TouchableNativeFeedback : IOSTouchable;
-
-export default Touchable;
diff --git a/apolloschurchapp/src/ui/UserAvatarView/AvatarForm.js b/apolloschurchapp/src/ui/UserAvatarView/AvatarForm.js
deleted file mode 100644
index f62198e..0000000
--- a/apolloschurchapp/src/ui/UserAvatarView/AvatarForm.js
+++ /dev/null
@@ -1,46 +0,0 @@
-import React, { PureComponent } from 'react';
-import PropTypes from 'prop-types';
-
-import ConnectedImage from 'apolloschurchapp/src/ui/ConnectedImage';
-import Touchable from 'apolloschurchapp/src/ui/Touchable';
-import Avatar from 'apolloschurchapp/src/ui/Avatar';
-import { withTheme } from 'apolloschurchapp/src/ui/theme';
-
-import uploadPhoto from './uploadPhoto';
-
-const StyledAvatar = withTheme(({ theme }) => ({
-  containerStyle: {
-    marginRight: 0,
-    marginBottom: theme.sizing.baseUnit / 2,
-  },
-}))(Avatar);
-
-export default class AvatarForm extends PureComponent {
-  state = {
-    isUploadingFile: false,
-  };
-
-  handleUploadPhoto = async () => {
-    await uploadPhoto({
-      onUpload: () => this.setState({ isUploadingFile: true }),
-    });
-    await this.props.refetch();
-    this.setState({ isUploadingFile: false });
-  };
-
-  render() {
-    const { photo } = this.props;
-    const { isUploadingFile } = this.state;
-
-    return (
-      <Touchable onPress={this.handleUploadPhoto}>
-        <StyledAvatar source={photo} size="large" isLoading={isUploadingFile} />
-      </Touchable>
-    );
-  }
-}
-
-AvatarForm.propTypes = {
-  refetch: PropTypes.func.isRequired,
-  photo: ConnectedImage.propTypes.source,
-};
diff --git a/apolloschurchapp/src/ui/UserAvatarView/UserAvatarView.stories.js b/apolloschurchapp/src/ui/UserAvatarView/UserAvatarView.stories.js
deleted file mode 100644
index aae6b43..0000000
--- a/apolloschurchapp/src/ui/UserAvatarView/UserAvatarView.stories.js
+++ /dev/null
@@ -1,22 +0,0 @@
-import React from 'react';
-import { storiesOf } from '@storybook/react-native';
-
-import FlexedView from 'apolloschurchapp/src/ui/FlexedView';
-
-import UserAvatarView from '.';
-
-const photo = {
-  url:
-    'https://dg0ddngxdz549.cloudfront.net/images/cached/images/remote/http_s3.amazonaws.com/ns.images/all/member_images/members.nophoto_1000_1000_90_c1.jpg',
-};
-
-storiesOf('UserAvatarView', module).add('default', () => (
-  <FlexedView>
-    <UserAvatarView
-      photo={photo}
-      firstName="John"
-      lastName="Doe"
-      home={{ city: 'Hometown' }}
-    />
-  </FlexedView>
-));
diff --git a/apolloschurchapp/src/ui/UserAvatarView/index.js b/apolloschurchapp/src/ui/UserAvatarView/index.js
deleted file mode 100644
index 5daec23..0000000
--- a/apolloschurchapp/src/ui/UserAvatarView/index.js
+++ /dev/null
@@ -1,63 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-import { View } from 'react-native';
-
-import { H4, BodyText } from 'apolloschurchapp/src/ui/typography';
-import PaddedView from 'apolloschurchapp/src/ui/PaddedView';
-import ConnectedImage from 'apolloschurchapp/src/ui/ConnectedImage';
-import styled from 'apolloschurchapp/src/ui/styled';
-import AvatarForm from './AvatarForm';
-
-const Container = styled({
-  alignItems: 'center',
-  justifyContent: 'center',
-  overflow: 'hidden',
-})(View);
-
-const Content = styled({ alignItems: 'center', justifyContent: 'center' })(
-  PaddedView
-);
-
-const Name = H4;
-const City = BodyText;
-
-const UserAvatarView = ({
-  photo,
-  firstName,
-  lastName,
-  home,
-  isLoading,
-  refetch,
-  onPhotoPress,
-  setIsUploadingFile,
-  isUploadingFile,
-  ...viewProps
-}) => (
-  // todo: handle file select stuff
-  <Container {...viewProps}>
-    <Content>
-      <AvatarForm photo={photo} refetch={refetch} />
-      <Name>
-        {firstName} {lastName}
-      </Name>
-      {home ? <City>{home.city}</City> : null}
-    </Content>
-  </Container>
-);
-
-UserAvatarView.propTypes = {
-  photo: ConnectedImage.propTypes.source,
-  firstName: PropTypes.string,
-  lastName: PropTypes.string,
-  home: PropTypes.shape({
-    city: PropTypes.string,
-  }),
-  isLoading: PropTypes.bool,
-  refetch: PropTypes.func,
-  onPhotoPress: PropTypes.func,
-  blurIntensity: PropTypes.number,
-  allowProfileImageChange: PropTypes.bool,
-  ...View.propTypes,
-};
-
-export default UserAvatarView;
diff --git a/apolloschurchapp/src/ui/UserAvatarView/uploadPhoto.js b/apolloschurchapp/src/ui/UserAvatarView/uploadPhoto.js
deleted file mode 100644
index 700b9e5..0000000
--- a/apolloschurchapp/src/ui/UserAvatarView/uploadPhoto.js
+++ /dev/null
@@ -1,47 +0,0 @@
-import gql from 'graphql-tag';
-import ImagePicker from 'react-native-image-picker';
-import { client } from 'apolloschurchapp/src/client';
-import { ReactNativeFile } from 'apollo-upload-client';
-
-const options = {
-  title: 'Select Profile Image',
-  storageOptions: {
-    skipBackup: true,
-    path: 'images',
-  },
-};
-
-function showImagePicker() {
-  return new Promise((resolve, reject) => {
-    ImagePicker.showImagePicker(options, (response) => {
-      if (response.didCancel) {
-        resolve({ cancelled: true });
-      } else if (response.error) {
-        reject(response.error);
-      } else {
-        resolve(response);
-      }
-    });
-  });
-}
-
-export default async ({ onUpload = () => ({}) }) => {
-  const image = await showImagePicker();
-  const file = new ReactNativeFile({
-    uri: image.uri,
-    name: image.fileName,
-    type: 'image/jpeg',
-  });
-  onUpload();
-  return client.mutate({
-    mutation: gql`
-      mutation uploadProfileImage($file: Upload!, $size: Int!) {
-        uploadProfileImage(file: $file, size: $size) {
-          firstName
-          lastName
-        }
-      }
-    `,
-    variables: { file, size: image.fileSize },
-  });
-};
diff --git a/apolloschurchapp/src/ui/WebBrowser/Browser.android.js b/apolloschurchapp/src/ui/WebBrowser/Browser.android.js
deleted file mode 100644
index 49dc211..0000000
--- a/apolloschurchapp/src/ui/WebBrowser/Browser.android.js
+++ /dev/null
@@ -1,15 +0,0 @@
-import { Linking } from 'react-native';
-import { CustomTabs } from 'react-native-custom-tabs';
-
-const Browser = {
-  openURL: async (url, options = {}) => {
-    try {
-      await CustomTabs.openURL(url, options);
-    } catch (e) {
-      if (!Linking.canOpenURL()) throw new Error('URL not supported');
-      Linking.openURL(url);
-    }
-  },
-};
-
-export default Browser;
diff --git a/apolloschurchapp/src/ui/WebBrowser/Browser.ios.js b/apolloschurchapp/src/ui/WebBrowser/Browser.ios.js
deleted file mode 100644
index 7de160f..0000000
--- a/apolloschurchapp/src/ui/WebBrowser/Browser.ios.js
+++ /dev/null
@@ -1,19 +0,0 @@
-import { Linking } from 'react-native';
-import SafariView from 'react-native-safari-view';
-
-const Browser = {
-  openURL: async (url, options) => {
-    try {
-      await SafariView.isAvailable();
-      SafariView.show({
-        url,
-        ...options,
-      });
-    } catch (e) {
-      if (!Linking.canOpenURL()) throw new Error('URL not supported');
-      Linking.openURL(url);
-    }
-  },
-};
-
-export default Browser;
diff --git a/apolloschurchapp/src/ui/WebBrowser/Browser.js b/apolloschurchapp/src/ui/WebBrowser/Browser.js
new file mode 100644
index 0000000..19ef6bc
--- /dev/null
+++ b/apolloschurchapp/src/ui/WebBrowser/Browser.js
@@ -0,0 +1,63 @@
+import { Linking } from 'react-native';
+import InAppBrowser from 'react-native-inappbrowser-reborn';
+import gql from 'graphql-tag';
+import { client } from '../../client';
+
+export const GET_ROCK_AUTH_DETAILS = gql`
+  query RockAuthDetails {
+    currentUser {
+      id
+      rock {
+        authCookie
+        authToken
+      }
+    }
+  }
+`;
+
+export const getRockAuthDetails = async () => {
+  const { data: { currentUser: { rock } = {} } = {} } = await client.query({
+    query: GET_ROCK_AUTH_DETAILS,
+    fetchPolicy: 'network-only',
+  });
+  return rock;
+};
+
+const Browser = {
+  open: async (
+    baseURL,
+    options,
+    auth = { useRockCookie: false, useRockToken: false }
+  ) => {
+    const url = new URL(baseURL);
+    // NOTE: RN adds a trailing slash
+    // https://github.com/facebook/react-native/issues/24428
+    url._url = url.toString().endsWith('/')
+      ? url.toString().slice(0, -1)
+      : url.toString();
+
+    const { authCookie, authToken } = await getRockAuthDetails();
+    let headers = {};
+    if (auth.useRockCookie && authCookie) {
+      console.warn(
+        "iOS doesn't support headers, you may want to use src/user-web-view"
+      );
+      headers = { Cookie: authCookie };
+    }
+    if (auth.useRockToken && authToken) {
+      url.searchParams.append('rckipid', authToken);
+    }
+    try {
+      if (await InAppBrowser.isAvailable()) {
+        InAppBrowser.open(url.toString(), {
+          headers,
+          ...options,
+        });
+      } else Linking.openURL(url.toString());
+    } catch (e) {
+      console.error(e);
+    }
+  },
+};
+
+export default Browser;
diff --git a/apolloschurchapp/src/ui/WebBrowser/index.js b/apolloschurchapp/src/ui/WebBrowser/index.js
index 70260fc..9e85ea5 100644
--- a/apolloschurchapp/src/ui/WebBrowser/index.js
+++ b/apolloschurchapp/src/ui/WebBrowser/index.js
@@ -2,25 +2,37 @@
 import { Platform } from 'react-native';
 import { createContext } from 'react';
 
-import { withTheme } from 'apolloschurchapp/src/ui/theme';
+import { withTheme } from '@apollosproject/ui-kit';
 
 import Browser from './Browser';
 
-const { Provider: BaseProvider, Consumer } = createContext(Browser.openURL);
+const { Provider: BaseProvider, Consumer } = createContext(Browser.open);
 
+// NOTE: don't think this is working...
 const Provider = withTheme(({ theme }) => ({
-  value: (url, options = {}) =>
-    Browser.openURL(url, {
+  value: (url, headers = {}, options = {}) =>
+    Browser.open(url, {
       ...Platform.select({
         ios: {
-          tintColor: theme.colors.primary,
-          barTintColor: theme.colors.background.paper,
+          dismissButtonStyle: 'cancel',
+          preferredBarTintColor: theme.colors.background.paper,
+          preferredControlTintColor: theme.colors.primary,
+          readerMode: false,
+          animated: true,
+          modalPresentationStyle: 'overFullScreen',
+          modalTransitionStyle: 'partialCurl',
+          modalEnabled: true,
         },
         android: {
           toolbarColor: theme.colors.background.paper,
           enableDefaultShare: true,
+          showTitle: true,
+          secondaryToolbarColor: 'black',
+          enableUrlBarHiding: true,
+          forceCloseOnRedirection: false,
         },
       }),
+      headers: { ...headers },
       ...options,
     }),
 }))(BaseProvider);
diff --git a/apolloschurchapp/src/ui/WebBrowser/index.tests.js b/apolloschurchapp/src/ui/WebBrowser/index.tests.js
index aa74598..1e616eb 100644
--- a/apolloschurchapp/src/ui/WebBrowser/index.tests.js
+++ b/apolloschurchapp/src/ui/WebBrowser/index.tests.js
@@ -1,11 +1,13 @@
 import React from 'react';
 import renderer from 'react-test-renderer';
-// TODO: how to include test for Android?
+import { Platform } from 'react-native';
 
-import Providers from 'apolloschurchapp/src/Providers';
+import Providers from '../../Providers';
 
 import { WebBrowserConsumer } from '.';
 
+jest.mock('Platform');
+
 describe(`WebBrowser Provider and Consumer`, () => {
   it('passes a function', async () => {
     renderer.create(
@@ -18,4 +20,16 @@ describe(`WebBrowser Provider and Consumer`, () => {
       </Providers>
     );
   });
+  it('passes a function (Android)', async () => {
+    Platform.OS = 'android';
+    renderer.create(
+      <Providers>
+        <WebBrowserConsumer>
+          {(openUrl) => {
+            expect(typeof openUrl).toBe('function');
+          }}
+        </WebBrowserConsumer>
+      </Providers>
+    );
+  });
 });
diff --git a/apolloschurchapp/src/ui/inputs/DateInput/DateInput.tests.js b/apolloschurchapp/src/ui/inputs/DateInput/DateInput.tests.js
deleted file mode 100644
index 52ba67a..0000000
--- a/apolloschurchapp/src/ui/inputs/DateInput/DateInput.tests.js
+++ /dev/null
@@ -1,52 +0,0 @@
-import React from 'react';
-import renderer from 'react-test-renderer';
-import moment from 'moment';
-
-import Providers from 'apolloschurchapp/src/Providers';
-
-import DateInput from '.';
-
-describe('The DateInput component', () => {
-  it('should render', () => {
-    const tree = renderer.create(
-      <Providers>
-        <DateInput value={moment.utc('1/1/2015').toDate()} />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render with a displayValue', () => {
-    const tree = renderer.create(
-      <Providers>
-        <DateInput
-          value={moment.utc('1/1/2015').toDate()}
-          displayValue={moment.utc('1/1/2015').format('YYYY/MM/DD')}
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render with a placeholder', () => {
-    const tree = renderer.create(
-      <Providers>
-        <DateInput
-          placeholder={'mm/dd/yyyy'}
-          value={moment.utc('1/1/2015').toDate()}
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render with a label', () => {
-    const tree = renderer.create(
-      <Providers>
-        <DateInput
-          value={moment.utc('1/1/2015').toDate()}
-          displayValue={moment.utc('1/1/2015').format('YYYY/MM/DD')}
-          label={'Date Label'}
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/ui/inputs/DateInput/index.js b/apolloschurchapp/src/ui/inputs/DateInput/index.js
deleted file mode 100644
index a92ab5d..0000000
--- a/apolloschurchapp/src/ui/inputs/DateInput/index.js
+++ /dev/null
@@ -1,75 +0,0 @@
-import React, { PureComponent } from 'react';
-import PropTypes from 'prop-types';
-import moment from 'moment';
-import { Animated } from 'react-native';
-import DateTimePicker from 'react-native-modal-datetime-picker';
-
-import Chip from 'apolloschurchapp/src/ui/Chip';
-
-import InputWrapper from '../InputWrapper';
-import FloatingLabel from '../FloatingLabel';
-
-const chipStyle = { marginTop: 5 };
-
-class DateInput extends PureComponent {
-  static propTypes = {
-    label: PropTypes.string,
-    placeholder: PropTypes.string,
-    value: PropTypes.any, // eslint-disable-line
-    displayValue: PropTypes.string,
-    onChange: PropTypes.func,
-    onChangeText: PropTypes.func,
-    onBlur: PropTypes.func,
-    error: PropTypes.any, // eslint-disable-line
-  };
-
-  state = {
-    isVisible: false,
-  };
-
-  handleOpen = () => this.setState({ isVisible: true });
-
-  handleClose = () => {
-    this.setState({ isVisible: false });
-    if (this.props.onBlur) this.props.onBlur();
-  };
-
-  handleConfirm = (value) => {
-    if (this.props.onChange) this.props.onChange(value);
-    if (this.props.onChangeText) {
-      this.props.onChangeText(moment(value).format('MM/DD/YYYY'));
-    }
-    this.handleClose();
-  };
-
-  render() {
-    let date = this.props.value;
-    if (typeof date === 'string') date = moment(date).toDate();
-    return (
-      <InputWrapper>
-        <Chip
-          style={chipStyle}
-          title={
-            this.props.displayValue ||
-            this.props.placeholder ||
-            this.props.label
-          }
-          onPress={this.handleOpen}
-        />
-        <DateTimePicker
-          date={date || new Date()}
-          isVisible={this.state.isVisible}
-          onConfirm={this.handleConfirm}
-          onCancel={this.handleClose}
-        />
-        {this.props.displayValue || this.props.placeholder ? (
-          <FloatingLabel animation={new Animated.Value(1)}>
-            {this.props.label}
-          </FloatingLabel>
-        ) : null}
-      </InputWrapper>
-    );
-  }
-}
-
-export default DateInput;
diff --git a/apolloschurchapp/src/ui/inputs/ErrorText.js b/apolloschurchapp/src/ui/inputs/ErrorText.js
deleted file mode 100644
index 3368ee0..0000000
--- a/apolloschurchapp/src/ui/inputs/ErrorText.js
+++ /dev/null
@@ -1,9 +0,0 @@
-import { H6 } from 'apolloschurchapp/src/ui/typography';
-import styled from 'apolloschurchapp/src/ui/styled';
-
-const ErrorText = styled(({ theme }) => ({
-  color: theme.colors.alert,
-  paddingTop: theme.sizing.baseUnit / 2,
-}))(H6);
-
-export default ErrorText;
diff --git a/apolloschurchapp/src/ui/inputs/FloatingLabel.js b/apolloschurchapp/src/ui/inputs/FloatingLabel.js
deleted file mode 100644
index 3e45f9b..0000000
--- a/apolloschurchapp/src/ui/inputs/FloatingLabel.js
+++ /dev/null
@@ -1,90 +0,0 @@
-import React, { PureComponent } from 'react';
-import PropTypes from 'prop-types';
-import { Animated, StyleSheet } from 'react-native';
-
-import { H6 } from 'apolloschurchapp/src/ui/typography';
-import styled from 'apolloschurchapp/src/ui/styled';
-
-export const LabelText = styled(
-  ({ theme }) => ({
-    color: theme.colors.text.secondary,
-    backgroundColor: 'transparent',
-    paddingVertical: theme.sizing.baseUnit / 4,
-  }),
-  'FloatingLabel.LabelText'
-)(H6);
-
-const styles = StyleSheet.create({
-  floatLabelView: {
-    position: 'absolute',
-    bottom: 0,
-    top: 0,
-    justifyContent: 'center',
-  },
-});
-
-class FloatingLabel extends PureComponent {
-  static propTypes = {
-    children: PropTypes.node,
-    animation: PropTypes.shape({
-      interpolate: PropTypes.func,
-    }),
-    scaleSize: PropTypes.number, // how much smaller to make label when focused
-    floatingOpacity: PropTypes.number,
-  };
-
-  static defaultProps = {
-    animation: new Animated.Value(0),
-    scaleSize: 0.8,
-    floatingOpacity: 0.8,
-  };
-
-  state = {
-    labelWidth: 0,
-    labelHeight: 0,
-  };
-
-  handleLayout = ({ nativeEvent: { layout } }) => {
-    this.setState({
-      labelWidth: layout.width,
-      labelHeight: layout.height,
-    });
-  };
-
-  render() {
-    const scaledWidth = this.state.labelWidth * (1.05 - this.props.scaleSize);
-    const sideScaledWidth = scaledWidth / 2;
-    const scale = this.props.animation.interpolate({
-      inputRange: [0, 1],
-      outputRange: [1, this.props.scaleSize],
-    });
-    const opacity = this.props.animation.interpolate({
-      inputRange: [0, 1],
-      outputRange: [1, this.props.floatingOpacity],
-    });
-    const translateY = this.props.animation.interpolate({
-      inputRange: [0, 1],
-      outputRange: [0, -(this.state.labelHeight * 0.7)],
-    });
-    const translateX = this.props.animation.interpolate({
-      inputRange: [0, 1],
-      outputRange: [0, -sideScaledWidth],
-    });
-    const wrapperStyles = {
-      transform: [{ scale }, { translateX }, { translateY }],
-      opacity,
-    };
-
-    return (
-      <Animated.View
-        pointerEvents="none"
-        onLayout={this.handleLayout}
-        style={[styles.floatLabelView, wrapperStyles]}
-      >
-        <LabelText>{this.props.children}</LabelText>
-      </Animated.View>
-    );
-  }
-}
-
-export default FloatingLabel;
diff --git a/apolloschurchapp/src/ui/inputs/InputAddon.js b/apolloschurchapp/src/ui/inputs/InputAddon.js
deleted file mode 100644
index 01e4ee7..0000000
--- a/apolloschurchapp/src/ui/inputs/InputAddon.js
+++ /dev/null
@@ -1,21 +0,0 @@
-import { View } from 'react-native';
-
-import styled from 'apolloschurchapp/src/ui/styled';
-
-const InputAddon = styled(
-  {
-    justifyContent: 'center',
-    alignItems: 'center',
-  },
-  'InputAddon'
-)(View);
-
-const AddonRow = styled(
-  {
-    flexDirection: 'row',
-    justifyContent: 'center',
-  },
-  'InputWrapper.Row'
-)(View);
-
-export { InputAddon as default, AddonRow };
diff --git a/apolloschurchapp/src/ui/inputs/InputUnderline.js b/apolloschurchapp/src/ui/inputs/InputUnderline.js
deleted file mode 100644
index 378a2b3..0000000
--- a/apolloschurchapp/src/ui/inputs/InputUnderline.js
+++ /dev/null
@@ -1,62 +0,0 @@
-import React from 'react';
-import { Animated, StyleSheet, View } from 'react-native';
-import PropTypes from 'prop-types';
-
-import styled from 'apolloschurchapp/src/ui/styled';
-
-const FocusedUnderline = styled(
-  ({ theme, hasError }) => ({
-    height: StyleSheet.hairlineWidth,
-    backgroundColor: hasError ? theme.colors.alert : theme.colors.primary,
-    bottom: 0,
-  }),
-  'InputUnderline.focused'
-)(View);
-
-const BluredUnderline = styled(
-  ({ theme }) => ({
-    height: StyleSheet.hairlineWidth,
-    backgroundColor: theme.colors.background.inactive,
-    bottom: -StyleSheet.hairlineWidth,
-  }),
-  'InputUnderline.blurred'
-)(View);
-
-const styles = StyleSheet.create({
-  wrapper: {
-    bottom: 0,
-    left: 0,
-    right: 0,
-  },
-});
-
-const InputUnderline = ({
-  animation = new Animated.Value(0),
-  hasError = false,
-}) => {
-  let scaleX = animation.interpolate({
-    inputRange: [0, 1],
-    outputRange: [0.0001, 1],
-  });
-  if (hasError) scaleX = 1;
-
-  const transform = [{ scaleX }];
-
-  return (
-    <View style={styles.wrapper}>
-      <BluredUnderline />
-      <Animated.View style={[styles.wrapper, { transform }]}>
-        <FocusedUnderline hasError={hasError} />
-      </Animated.View>
-    </View>
-  );
-};
-
-InputUnderline.propTypes = {
-  animation: PropTypes.shape({
-    interpolate: PropTypes.func,
-  }),
-  hasError: PropTypes.bool,
-};
-
-export default InputUnderline;
diff --git a/apolloschurchapp/src/ui/inputs/InputWrapper.js b/apolloschurchapp/src/ui/inputs/InputWrapper.js
deleted file mode 100644
index fe23b94..0000000
--- a/apolloschurchapp/src/ui/inputs/InputWrapper.js
+++ /dev/null
@@ -1,13 +0,0 @@
-import { View } from 'react-native';
-
-import styled from 'apolloschurchapp/src/ui/styled';
-
-const InputWrapper = styled(
-  ({ theme, disabled }) => ({
-    marginVertical: theme.sizing.baseUnit,
-    ...(disabled ? { opacity: 0.5 } : {}),
-  }),
-  'InputWrapper'
-)(View);
-
-export default InputWrapper;
diff --git a/apolloschurchapp/src/ui/inputs/Picker/Picker.stories.js b/apolloschurchapp/src/ui/inputs/Picker/Picker.stories.js
deleted file mode 100644
index 79ce6b8..0000000
--- a/apolloschurchapp/src/ui/inputs/Picker/Picker.stories.js
+++ /dev/null
@@ -1,15 +0,0 @@
-import React from 'react';
-import { storiesOf } from '@storybook/react-native';
-
-import FlexedView from 'apolloschurchapp/src/ui/FlexedView';
-
-import Picker, { Item } from '.';
-
-storiesOf('Inputs', module).add('Picker', () => (
-  <FlexedView>
-    <Picker placeholder="Select a language..." label="Languages">
-      <Item label="Java" value="java" />
-      <Item label="JavaScript" value="js" />
-    </Picker>
-  </FlexedView>
-));
diff --git a/apolloschurchapp/src/ui/inputs/Picker/Picker.tests.js b/apolloschurchapp/src/ui/inputs/Picker/Picker.tests.js
deleted file mode 100644
index f2f66a1..0000000
--- a/apolloschurchapp/src/ui/inputs/Picker/Picker.tests.js
+++ /dev/null
@@ -1,48 +0,0 @@
-import React from 'react';
-import renderer from 'react-test-renderer';
-import { Text, Animated } from 'react-native';
-
-import Providers from 'apolloschurchapp/src/Providers';
-
-import Picker, { Item, Picker as UnwrappedPicker } from '.';
-
-describe('The Picker Input component', () => {
-  it('should render correctly', () => {
-    const tree = renderer.create(
-      <Providers>
-        <Picker
-          placeholder="Select a language..."
-          label="Languages"
-          displayValue="Display Value"
-          prefix={<Text>Hello there!</Text>}
-          suffix={<Text>Goodbye now.</Text>}
-        >
-          <Item label="Java" value="java" />
-          <Item label="JavaScript" value="js" />
-        </Picker>
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-
-  it('focuses and blurs', () => {
-    const focus = jest.fn();
-    const blur = jest.fn();
-    const tree = renderer.create(
-      <Providers>
-        <UnwrappedPicker
-          focusAnimation={new Animated.Value(0)}
-          onFocus={focus}
-          onBlur={blur}
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-    tree.root.findByType(UnwrappedPicker).instance.handleOnPress();
-    expect(tree).toMatchSnapshot();
-    expect(focus).toHaveBeenCalled();
-    tree.root.findByType(UnwrappedPicker).instance.handleOnPress();
-    expect(tree).toMatchSnapshot();
-    expect(blur).toHaveBeenCalled();
-  });
-});
diff --git a/apolloschurchapp/src/ui/inputs/Picker/PickerList.js b/apolloschurchapp/src/ui/inputs/Picker/PickerList.js
deleted file mode 100644
index d3c846f..0000000
--- a/apolloschurchapp/src/ui/inputs/Picker/PickerList.js
+++ /dev/null
@@ -1,62 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-import { Modal, StyleSheet, View, Picker as NativePicker } from 'react-native';
-
-import styled from 'apolloschurchapp/src/ui/styled';
-import { ButtonLink } from 'apolloschurchapp/src/ui/Button';
-
-const StyledPicker = styled(
-  ({ theme }) => ({
-    borderTopWidth: StyleSheet.hairlineWidth,
-    borderTopColor: theme.colors.background.inactive,
-  }),
-  'Inputs.Picker.List'
-)(NativePicker);
-
-const PickerKeyboardView = styled(
-  ({ theme }) => ({
-    backgroundColor: theme.colors.background.paper,
-    position: 'absolute',
-    bottom: 0,
-    left: 0,
-    right: 0,
-    borderTopColor: theme.colors.shadows.default,
-    borderTopWidth: StyleSheet.hairlineWidth,
-  }),
-  'Inputs.Picker.List.Keyboard'
-)(View);
-
-const Toolbar = styled(
-  ({ theme }) => ({
-    alignItems: 'flex-end',
-    padding: theme.sizing.baseUnit / 2,
-    backgroundColor: theme.colors.background.accent,
-  }),
-  'Inputs.Picker.List.Toolbar'
-)(View);
-
-const PickerList = ({ focused, onRequestClose, value, ...pickerProps }) => (
-  <Modal
-    visible={focused}
-    onRequestClose={onRequestClose}
-    animationType="slide"
-    transparent
-  >
-    <PickerKeyboardView>
-      <Toolbar>
-        <ButtonLink onPress={onRequestClose}>Done</ButtonLink>
-      </Toolbar>
-      <StyledPicker selectedValue={value} {...pickerProps} />
-    </PickerKeyboardView>
-  </Modal>
-);
-
-PickerList.propTypes = {
-  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
-  children: PropTypes.node,
-  focused: PropTypes.bool,
-  onRequestClose: PropTypes.func,
-  mode: PropTypes.string,
-};
-
-export default PickerList;
diff --git a/apolloschurchapp/src/ui/inputs/Picker/index.android.js b/apolloschurchapp/src/ui/inputs/Picker/index.android.js
deleted file mode 100644
index 8703f8c..0000000
--- a/apolloschurchapp/src/ui/inputs/Picker/index.android.js
+++ /dev/null
@@ -1,34 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-import { Animated, Picker as NativePicker } from 'react-native';
-import { mapProps } from 'recompose';
-
-import InputUnderline from '../InputUnderline';
-import InputWrapper from '../InputWrapper';
-import FloatingLabel from '../FloatingLabel';
-
-const MappedNativePicker = mapProps(
-  ({ placeholder: prompt, value: selectedValue, ...otherProps }) => ({
-    prompt,
-    selectedValue,
-    ...otherProps,
-  })
-)(NativePicker);
-
-const Picker = ({ wrapperStyle, ...props }) => (
-  <InputWrapper style={wrapperStyle}>
-    <MappedNativePicker {...props} />
-    <FloatingLabel animation={new Animated.Value(1)}>
-      {props.label}
-    </FloatingLabel>
-    <InputUnderline />
-  </InputWrapper>
-);
-
-Picker.propTypes = {
-  label: PropTypes.string,
-  wrapperStyle: PropTypes.any, // eslint-disable-line
-};
-
-export default Picker;
-export const { Item } = NativePicker;
diff --git a/apolloschurchapp/src/ui/inputs/Picker/index.js b/apolloschurchapp/src/ui/inputs/Picker/index.js
deleted file mode 100644
index a559d8c..0000000
--- a/apolloschurchapp/src/ui/inputs/Picker/index.js
+++ /dev/null
@@ -1,116 +0,0 @@
-import React, { PureComponent } from 'react';
-import PropTypes from 'prop-types';
-import {
-  Animated,
-  Picker as NativePicker,
-  TouchableOpacity,
-} from 'react-native';
-
-import styled from 'apolloschurchapp/src/ui/styled';
-import { H6 } from 'apolloschurchapp/src/ui/typography';
-import Icon from 'apolloschurchapp/src/ui/Icon';
-
-import FloatingLabel from '../FloatingLabel';
-import InputUnderline from '../InputUnderline';
-import InputWrapper from '../InputWrapper';
-import withFocusAnimation from '../withFocusAnimation';
-import InputAddon, { AddonRow } from '../InputAddon';
-import withInputControlStyles from '../withInputControlStyles';
-
-import PickerList from './PickerList';
-
-const StyledH6 = withInputControlStyles(H6);
-const Placeholder = styled(
-  ({ theme }) => ({
-    color: theme.colors.text.tertiary,
-  }),
-  'Inputs.Picker.Placeholder'
-)(H6);
-
-export class Picker extends PureComponent {
-  static propTypes = {
-    placeholder: PropTypes.string,
-    displayValue: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
-    focusAnimation: PropTypes.any, // eslint-disable-line
-    prefix: PropTypes.node,
-    suffix: PropTypes.node,
-    onFocus: PropTypes.func,
-    onBlur: PropTypes.func,
-    label: PropTypes.string,
-    value: PropTypes.any, // eslint-disable-line
-    wrapperStyle: PropTypes.any, // eslint-disable-line
-    style: PropTypes.any, // eslint-disable-line
-  };
-
-  state = {
-    focused: false,
-  };
-
-  handleOnPress = () => {
-    this.setState(
-      (previousState) => ({ focused: !previousState.focused }),
-      () => {
-        if (this.state.focused) {
-          this.props.onFocus();
-        } else {
-          this.props.onBlur();
-        }
-      }
-    );
-  };
-
-  render() {
-    const {
-      displayValue,
-      focusAnimation, // from createInput
-      placeholder,
-      label,
-      value,
-      style,
-      wrapperStyle,
-      ...pickerProps
-    } = this.props;
-    const rotate = focusAnimation.interpolate({
-      inputRange: [0, 1],
-      outputRange: ['0deg', '180deg'],
-    });
-    const labelAnimation = value ? new Animated.Value(1) : focusAnimation;
-
-    const animatedStyle = { opacity: labelAnimation, flex: 1 };
-
-    return (
-      <InputWrapper style={wrapperStyle}>
-        <TouchableOpacity onPress={this.handleOnPress}>
-          <AddonRow>
-            <Animated.View style={animatedStyle}>
-              <StyledH6 style={style}>
-                {displayValue || <Placeholder>{placeholder}</Placeholder>}
-              </StyledH6>
-            </Animated.View>
-            <InputAddon>
-              <Animated.View style={{ transform: [{ rotate }] }}>
-                <Icon name="arrow-down" size={18} />
-              </Animated.View>
-            </InputAddon>
-          </AddonRow>
-        </TouchableOpacity>
-
-        <PickerList
-          {...pickerProps}
-          value={value}
-          focused={this.state.focused}
-          onRequestClose={this.handleOnPress}
-        />
-
-        <FloatingLabel animation={labelAnimation}>{label}</FloatingLabel>
-        <InputUnderline animation={focusAnimation} />
-      </InputWrapper>
-    );
-  }
-}
-
-const EnhancedComponent = withFocusAnimation(Picker);
-EnhancedComponent.propTypes = Picker.propTypes;
-
-export default EnhancedComponent;
-export const { Item } = NativePicker;
diff --git a/apolloschurchapp/src/ui/inputs/Radio/RadioButton.js b/apolloschurchapp/src/ui/inputs/Radio/RadioButton.js
deleted file mode 100644
index d45d6ee..0000000
--- a/apolloschurchapp/src/ui/inputs/Radio/RadioButton.js
+++ /dev/null
@@ -1,73 +0,0 @@
-import React, { PureComponent } from 'react';
-import { View, TouchableWithoutFeedback } from 'react-native';
-import PropTypes from 'prop-types';
-import { compose, getContext } from 'recompose';
-import isString from 'lodash/isString';
-
-import { H6 } from 'apolloschurchapp/src/ui/typography';
-import styled from 'apolloschurchapp/src/ui/styled';
-
-import RadioButtonIndicator from './RadioButtonIndicator';
-
-const Row = styled(({ theme }) => ({
-  padding: theme.sizing.baseUnit / 2,
-  borderBottomWidth: 1,
-  borderBottomColor: theme.colors.background.accent,
-  flexDirection: 'row',
-  justifyContent: 'space-between',
-  alignItems: 'center',
-}))(View);
-
-class RadioButton extends PureComponent {
-  static propTypes = {
-    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,
-    currentValue: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
-    Label: PropTypes.oneOfType([
-      PropTypes.string,
-      PropTypes.element,
-      PropTypes.func,
-    ]),
-    onSelectValue: PropTypes.func,
-    RadioButtonIndicator: PropTypes.oneOfType([
-      PropTypes.element,
-      PropTypes.func,
-    ]),
-  };
-
-  static defaultProps = {
-    Label: '',
-    onSelectValue() {},
-    RadioButtonIndicator,
-  };
-
-  handleOnPress = () => {
-    this.props.onSelectValue(this.props.value);
-  };
-
-  render() {
-    const Indicator = this.props.RadioButtonIndicator;
-    return (
-      <TouchableWithoutFeedback onPress={this.handleOnPress}>
-        <Row>
-          <Indicator
-            isSelected={this.props.currentValue === this.props.value}
-          />
-          {isString(this.props.Label) ? (
-            <H6>{this.props.Label}</H6>
-          ) : (
-            <this.props.Label />
-          )}
-        </Row>
-      </TouchableWithoutFeedback>
-    );
-  }
-}
-
-const enhance = compose(
-  getContext({
-    onSelectValue: PropTypes.func,
-    currentValue: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
-  })
-);
-
-export default enhance(RadioButton);
diff --git a/apolloschurchapp/src/ui/inputs/Radio/RadioButtonIndicator.js b/apolloschurchapp/src/ui/inputs/Radio/RadioButtonIndicator.js
deleted file mode 100644
index a3d0576..0000000
--- a/apolloschurchapp/src/ui/inputs/Radio/RadioButtonIndicator.js
+++ /dev/null
@@ -1,43 +0,0 @@
-import React, { PureComponent } from 'react';
-import { View } from 'react-native';
-import PropTypes from 'prop-types';
-
-import styled from 'apolloschurchapp/src/ui/styled';
-
-const OutlinedCircle = styled(({ theme, isSelected }) => ({
-  height: 20,
-  width: 20,
-  borderRadius: 99,
-  borderWidth: 2,
-  borderColor: isSelected ? theme.colors.primary : theme.colors.darkTertiary,
-  alignItems: 'center',
-  justifyContent: 'center',
-}))(View);
-
-const FilledCircle = styled(({ theme }) => ({
-  height: 12,
-  width: 12,
-  borderRadius: 99,
-  backgroundColor: theme.colors.primary,
-}))(View);
-
-export default class RadioButtonIndicator extends PureComponent {
-  static propTypes = {
-    isSelected: PropTypes.bool,
-  };
-
-  static defaultProps = {
-    isSelected: false,
-  };
-
-  render() {
-    if (this.props.isSelected) {
-      return (
-        <OutlinedCircle isSelected>
-          <FilledCircle />
-        </OutlinedCircle>
-      );
-    }
-    return <OutlinedCircle />;
-  }
-}
diff --git a/apolloschurchapp/src/ui/inputs/Radio/index.js b/apolloschurchapp/src/ui/inputs/Radio/index.js
deleted file mode 100644
index fc8a94e..0000000
--- a/apolloschurchapp/src/ui/inputs/Radio/index.js
+++ /dev/null
@@ -1,66 +0,0 @@
-import React, { Component } from 'react';
-import { View } from 'react-native';
-import PropTypes from 'prop-types';
-
-import RadioButton from './RadioButton';
-
-export default class Radio extends Component {
-  static Button = RadioButton;
-
-  static propTypes = {
-    children: PropTypes.node,
-    onChange: PropTypes.func,
-    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
-    style: PropTypes.any, // eslint-disable-line
-  };
-
-  static childContextTypes = {
-    onSelectValue: PropTypes.func,
-    currentValue: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
-  };
-
-  static defaultProps = {
-    children: null,
-    onChange() {},
-    value: null,
-  };
-
-  state = {
-    value: this.props.value,
-  };
-
-  getChildContext() {
-    return {
-      onSelectValue: this.selectValue,
-      currentValue: this.state.value,
-    };
-  }
-
-  componentWillReceiveProps(nextProps) {
-    if (nextProps.value !== this.props.value) {
-      this.setState(
-        {
-          value: nextProps.value,
-        },
-        this.notifyValueChanged
-      );
-    }
-  }
-
-  selectValue = (value) => {
-    this.setState(
-      {
-        value,
-      },
-      this.notifyValueChanged
-    );
-  };
-
-  notifyValueChanged = () => {
-    this.props.onChange(this.state.value);
-  };
-
-  render() {
-    return <View style={this.props.style}>{this.props.children}</View>;
-  }
-}
diff --git a/apolloschurchapp/src/ui/inputs/Switch/Switch.stories.js b/apolloschurchapp/src/ui/inputs/Switch/Switch.stories.js
deleted file mode 100644
index 724225a..0000000
--- a/apolloschurchapp/src/ui/inputs/Switch/Switch.stories.js
+++ /dev/null
@@ -1,12 +0,0 @@
-import React from 'react';
-import { storiesOf } from '@storybook/react-native';
-
-import FlexedView from 'apolloschurchapp/src/ui/FlexedView';
-
-import Switch from '.';
-
-storiesOf('Inputs', module).add('Switch', () => (
-  <FlexedView>
-    <Switch label="Some label text" />
-  </FlexedView>
-));
diff --git a/apolloschurchapp/src/ui/inputs/Switch/Switch.tests.js b/apolloschurchapp/src/ui/inputs/Switch/Switch.tests.js
deleted file mode 100644
index b8a7e7a..0000000
--- a/apolloschurchapp/src/ui/inputs/Switch/Switch.tests.js
+++ /dev/null
@@ -1,17 +0,0 @@
-import React from 'react';
-import renderer from 'react-test-renderer';
-
-import Providers from 'apolloschurchapp/src/Providers';
-
-import Switch from '.';
-
-describe('The Picker Input component', () => {
-  it('should render correctly', () => {
-    const tree = renderer.create(
-      <Providers>
-        <Switch label="Some label text" />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/ui/inputs/Switch/index.js b/apolloschurchapp/src/ui/inputs/Switch/index.js
deleted file mode 100644
index b6ec5ac..0000000
--- a/apolloschurchapp/src/ui/inputs/Switch/index.js
+++ /dev/null
@@ -1,78 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-import { compose, pure } from 'recompose';
-import { Platform, Switch, View } from 'react-native';
-
-import { withTheme } from 'apolloschurchapp/src/ui/theme';
-import FlexedView from 'apolloschurchapp/src/ui/FlexedView';
-import styled from 'apolloschurchapp/src/ui/styled';
-import Touchable from 'apolloschurchapp/src/ui/Touchable';
-
-import InputAddon, { AddonRow } from '../InputAddon';
-import { LabelText } from '../FloatingLabel';
-import InputWrapper from '../InputWrapper';
-import { withInputControlViewStyles } from '../withInputControlStyles';
-import ErrorText from '../ErrorText';
-
-const ControlWrapper = withInputControlViewStyles(View);
-
-const enhance = compose(
-  pure,
-  withTheme(({ theme }) => ({
-    onTintColor: theme.colors.primary,
-    activeTrackColor: theme.colors.primary,
-    trackColor: theme.colors.background.inactive,
-    tintColor: theme.colors.background.inactive,
-    activeThumbColor: theme.colors.background.paper,
-    ...Platform.select({
-      android: { thumbTintColor: theme.colors.background.paper },
-    }),
-  }))
-);
-
-const LabelContainer = styled({
-  justifyContent: 'center',
-})(FlexedView);
-
-const Text = enhance(
-  ({
-    label,
-    prefix,
-    error,
-    wrapperStyle,
-    onValueChange,
-    value,
-    ...switchProps
-  }) => (
-    <InputWrapper style={wrapperStyle}>
-      <ControlWrapper>
-        <AddonRow>
-          <InputAddon>{prefix}</InputAddon>
-          <LabelContainer>
-            <Touchable onPress={() => onValueChange(!value)}>
-              <LabelText>{label}</LabelText>
-            </Touchable>
-          </LabelContainer>
-          <InputAddon>
-            <Switch
-              value={value}
-              onValueChange={onValueChange}
-              {...switchProps}
-            />
-          </InputAddon>
-        </AddonRow>
-      </ControlWrapper>
-
-      {error && typeof error === 'string' ? (
-        <ErrorText>{error}</ErrorText>
-      ) : null}
-    </InputWrapper>
-  )
-);
-
-Text.propTypes = {
-  label: PropTypes.node,
-  error: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),
-};
-
-export default Text;
diff --git a/apolloschurchapp/src/ui/inputs/Text/Text.stories.js b/apolloschurchapp/src/ui/inputs/Text/Text.stories.js
deleted file mode 100644
index ece7b9e..0000000
--- a/apolloschurchapp/src/ui/inputs/Text/Text.stories.js
+++ /dev/null
@@ -1,33 +0,0 @@
-import React from 'react';
-import { storiesOf } from '@storybook/react-native';
-
-import Icon from 'apolloschurchapp/src/ui/Icon';
-import FlexedView from 'apolloschurchapp/src/ui/FlexedView';
-
-import Text from '.';
-
-storiesOf('Inputs', module).add('Text', () => (
-  <FlexedView>
-    <Text editable label="Some label text" placeholder="Some placeholder" />
-    <Text
-      editable
-      type="password"
-      label="Password"
-      placeholder="Some placeholder"
-      suffix={<Icon name="lock" size={18} />}
-    />
-    <Text editable type="email" label="Email" placeholder="Some placeholder" />
-    <Text
-      editable
-      type="numeric"
-      label="Numeric"
-      placeholder="Some placeholder"
-    />
-    <Text
-      editable
-      type="phone"
-      label="Phone Number"
-      placeholder="Some placeholder"
-    />
-  </FlexedView>
-));
diff --git a/apolloschurchapp/src/ui/inputs/Text/Text.tests.js b/apolloschurchapp/src/ui/inputs/Text/Text.tests.js
deleted file mode 100644
index 10c0300..0000000
--- a/apolloschurchapp/src/ui/inputs/Text/Text.tests.js
+++ /dev/null
@@ -1,70 +0,0 @@
-import React from 'react';
-import renderer from 'react-test-renderer';
-
-import Providers from 'apolloschurchapp/src/Providers';
-import Icon from 'apolloschurchapp/src/ui/Icon';
-
-import Text from '.';
-
-describe('The Text Input component', () => {
-  it('should render correctly', () => {
-    const tree = renderer.create(
-      <Providers>
-        <Text editable label="Some label text" placeholder="Some placeholder" />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render as a password field with an icon', () => {
-    const tree = renderer.create(
-      <Providers>
-        <Text
-          editable
-          type="password"
-          label="Password"
-          placeholder="Some placeholder"
-          suffix={<Icon name="lock" size={18} />}
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render as an email field', () => {
-    const tree = renderer.create(
-      <Providers>
-        <Text
-          editable
-          type="email"
-          label="Email"
-          placeholder="Some placeholder"
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render as a numeric field', () => {
-    const tree = renderer.create(
-      <Providers>
-        <Text
-          editable
-          type="numeric"
-          label="Numeric"
-          placeholder="Some placeholder"
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render as a phone number field', () => {
-    const tree = renderer.create(
-      <Providers>
-        <Text
-          type="phone"
-          label="Phone Number"
-          placeholder="Some placeholder"
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/ui/inputs/Text/index.js b/apolloschurchapp/src/ui/inputs/Text/index.js
deleted file mode 100644
index 4264b20..0000000
--- a/apolloschurchapp/src/ui/inputs/Text/index.js
+++ /dev/null
@@ -1,133 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-import { get } from 'lodash';
-import { compose, withProps, pure } from 'recompose';
-import { View, Platform, TextInput, Animated } from 'react-native';
-import Color from 'color';
-
-import { withTheme } from 'apolloschurchapp/src/ui/theme';
-
-import FloatingLabel from '../FloatingLabel';
-import InputUnderline from '../InputUnderline';
-import InputWrapper from '../InputWrapper';
-import ErrorText from '../ErrorText';
-import withFocusAnimation from '../withFocusAnimation';
-import InputAddon, { AddonRow } from '../InputAddon';
-import { textStyle } from '../withInputControlStyles';
-
-const propsForInputType = {
-  password: {
-    secureTextEntry: true,
-    autoCapitalize: 'none',
-    autoCorrect: false,
-  },
-  email: {
-    keyboardType: 'email-address',
-    autoCapitalize: 'none',
-    autoCorrect: false,
-  },
-  numeric: {
-    keyboardType: 'numeric',
-  },
-  numericKeyboard: {
-    ...Platform.select({
-      ios: { keyboardType: 'numeric' },
-      android: { keyboardType: 'numeric' },
-      web: { type: 'text' },
-    }),
-  },
-  phone: {
-    keyboardType: 'phone-pad',
-  },
-  date: {
-    ...Platform.select({
-      ios: { keyboardType: 'numeric' },
-      android: { keyboardType: 'numeric' },
-      web: { type: 'date' },
-    }),
-  },
-};
-
-const enhance = compose(
-  withTheme(),
-  pure,
-  withFocusAnimation,
-  withProps(({ type, ...props }) => ({
-    ...get(propsForInputType, type, {}),
-    ...props,
-  }))
-);
-
-const Text = enhance(
-  ({
-    label,
-    prefix,
-    suffix,
-    value,
-    wrapperStyle,
-    error,
-    disabled = false,
-    theme,
-    inputRef,
-    focusAnimation: focusAnimationInput, // from withFocusAnimation
-    ...textInputProps
-  }) => {
-    const focusAnimation =
-      value || !label ? new Animated.Value(1) : focusAnimationInput;
-
-    const animatedStyle = { opacity: focusAnimation, flex: 1 };
-
-    return (
-      <InputWrapper style={wrapperStyle} disabled={disabled}>
-        <View>
-          <AddonRow>
-            <InputAddon>{prefix}</InputAddon>
-            <Animated.View style={animatedStyle}>
-              <TextInput
-                style={textStyle({ theme })}
-                ref={inputRef}
-                placeholderTextColor={Color(theme.colors.text.primary)
-                  .fade(theme.alpha.low)
-                  .string()}
-                {...textInputProps}
-                editable={!disabled}
-                value={`${value || ''}`}
-              />
-            </Animated.View>
-            <InputAddon>{suffix}</InputAddon>
-          </AddonRow>
-
-          <FloatingLabel animation={focusAnimation}>{label}</FloatingLabel>
-          <InputUnderline
-            animation={focusAnimation}
-            hasError={Boolean(error)}
-          />
-        </View>
-
-        {error && typeof error === 'string' ? (
-          <ErrorText>{error}</ErrorText>
-        ) : null}
-      </InputWrapper>
-    );
-  }
-);
-
-Text.defaultProps = {
-  returnKeyType: 'done',
-  underlineColorAndroid: 'transparent',
-};
-
-Text.propTypes = {
-  disabled: PropTypes.bool,
-  prefix: PropTypes.node,
-  suffix: PropTypes.node,
-  label: PropTypes.string,
-  value: PropTypes.any, // eslint-disable-line
-  wrapperStyle: PropTypes.any, // eslint-disable-line
-  returnKeyType: PropTypes.string,
-  error: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),
-  underlineColorAndroid: PropTypes.string,
-  inputRef: PropTypes.func,
-};
-
-export default Text;
diff --git a/apolloschurchapp/src/ui/inputs/index.js b/apolloschurchapp/src/ui/inputs/index.js
deleted file mode 100644
index d8ada5e..0000000
--- a/apolloschurchapp/src/ui/inputs/index.js
+++ /dev/null
@@ -1,4 +0,0 @@
-export Picker, { Item as PickerItem } from './Picker';
-export Switch from './Switch';
-export Text from './Text';
-export DateInput from './DateInput';
diff --git a/apolloschurchapp/src/ui/inputs/withFocusAnimation.js b/apolloschurchapp/src/ui/inputs/withFocusAnimation.js
deleted file mode 100644
index 5afa6d0..0000000
--- a/apolloschurchapp/src/ui/inputs/withFocusAnimation.js
+++ /dev/null
@@ -1,61 +0,0 @@
-import React, { PureComponent } from 'react';
-import { Animated, Easing } from 'react-native';
-import PropTypes from 'prop-types';
-
-// helper HOC to wrap an Input in a floating label and animated underline
-const withFocusAnimation = (Component) =>
-  class WrappedInput extends PureComponent {
-    focusAnimation = new Animated.Value(0);
-
-    static propTypes = {
-      focusAnimationDuration: PropTypes.number,
-      focusAnimationEasing: PropTypes.func,
-      onFocus: PropTypes.func,
-      onBlur: PropTypes.func,
-      value: PropTypes.any, // eslint-disable-line
-    };
-
-    static defaultProps = {
-      focusAnimationDuration: 450,
-      focusAnimationEasing: Easing.in(Easing.bezier(0.23, 1, 0.32, 1)),
-    };
-
-    playAnimation = (toValue) => {
-      Animated.timing(this.focusAnimation, {
-        toValue,
-        duration: this.props.focusAnimationDuration,
-        easing: this.props.focusAnimationEasing,
-        // useNativeDriver: true,
-      }).start();
-    };
-
-    handleFocus = (...args) => {
-      if (this.props.onFocus) this.props.onFocus(...args);
-      this.focused = true;
-      this.playAnimation(1);
-    };
-
-    handleBlur = (event, ...other) => {
-      if (this.props.onBlur) this.props.onBlur(event, ...other);
-      this.focused = false;
-      this.playAnimation(0);
-    };
-
-    render() {
-      const {
-        focusAnimationDuration,
-        focusAnimationEasing,
-        ...otherProps
-      } = this.props;
-      return (
-        <Component
-          {...otherProps}
-          onFocus={this.handleFocus}
-          onBlur={this.handleBlur}
-          focusAnimation={this.focusAnimation}
-        />
-      );
-    }
-  };
-
-export default withFocusAnimation;
diff --git a/apolloschurchapp/src/ui/inputs/withInputControlStyles.js b/apolloschurchapp/src/ui/inputs/withInputControlStyles.js
deleted file mode 100644
index 8dc7e0d..0000000
--- a/apolloschurchapp/src/ui/inputs/withInputControlStyles.js
+++ /dev/null
@@ -1,19 +0,0 @@
-import styled from 'apolloschurchapp/src/ui/styled';
-
-export const baseStyle = ({ theme }) => ({
-  paddingVertical: theme.sizing.baseUnit / 4,
-  height: 30 + theme.sizing.baseUnit / 2,
-});
-
-export const textStyle = ({ theme }) => ({
-  ...baseStyle({ theme }),
-  paddingVertical: 0,
-  fontSize: theme.helpers.rem(0.875),
-  fontFamily: theme.typography.sans.bold.default,
-  color: theme.colors.text.primary,
-});
-
-const withInputControlTextStyles = styled(textStyle, 'Input.Control');
-const withInputControlViewStyles = styled(baseStyle);
-
-export { withInputControlTextStyles as default, withInputControlViewStyles };
diff --git a/apolloschurchapp/src/ui/isLoading.js b/apolloschurchapp/src/ui/isLoading.js
deleted file mode 100644
index 7fc3c37..0000000
--- a/apolloschurchapp/src/ui/isLoading.js
+++ /dev/null
@@ -1,21 +0,0 @@
-import { branch, getContext, withContext } from 'recompose';
-import PropTypes from 'prop-types';
-
-// Both of these HOCs deal with context, therefore they should be used
-// above "pure" in a recompose `compose` chain.
-
-// Checks if the component has an "isLoading" prop.
-// If it doesn't it, it passes in context.
-// This makes easy to build components that respond to either props
-// or context for rendering placeholder / loading state.
-export const getIsLoading = branch(
-  (props) => !Object.hasOwnProperty.call(props, 'isLoading'),
-  getContext({ isLoading: PropTypes.bool })
-);
-
-// Allows a component to accept an "isLoading" prop to pass down
-// into context.
-export const withIsLoading = withContext(
-  { isLoading: PropTypes.bool },
-  ({ isLoading }) => ({ isLoading })
-);
diff --git a/apolloschurchapp/src/ui/styled/createStyleSheet.js b/apolloschurchapp/src/ui/styled/createStyleSheet.js
deleted file mode 100644
index 933bbb7..0000000
--- a/apolloschurchapp/src/ui/styled/createStyleSheet.js
+++ /dev/null
@@ -1,45 +0,0 @@
-import { StyleSheet } from 'react-native';
-import { flatten } from 'lodash';
-
-export const cachedStyles = {};
-export const styleHasher = JSON.stringify; // todo: how bad is this?
-
-// Uses cached or generates a new StyleSheet for a given style prop
-const createStyleSheet = (stylesToGenerate) => {
-  let styles = flatten([stylesToGenerate]); // Need to make sure we're working with a flat array
-  const styleSheet = {}; // passed to StyleSheet.create later
-
-  // Load style from cache or add style to stylesheet
-  styles.forEach((style, index) => {
-    if (typeof style !== 'object' || !style) return;
-    const hash = styleHasher(style);
-    if (cachedStyles[hash]) {
-      styles[index] = cachedStyles[hash];
-    } else {
-      styleSheet[`${index}`] = style;
-    }
-  });
-
-  if (Object.keys(styleSheet).length) {
-    // Generate the new stylesheet
-    const generatedStyleSheet = StyleSheet.create(styleSheet);
-
-    // Process the generated stylesheet
-    Object.keys(generatedStyleSheet).forEach((key) => {
-      const index = parseInt(key, 0);
-      const generatedStyle = generatedStyleSheet[key];
-      const hash = styleHasher(styles[index]);
-
-      // add generated style to cache
-      cachedStyles[hash] = generatedStyle;
-
-      // swap generated style into result list
-      styles[index] = generatedStyle;
-    });
-  }
-
-  if (styles.length === 1) styles = styles[0]; // eslint-disable-line
-  return styles;
-};
-
-export default createStyleSheet;
diff --git a/apolloschurchapp/src/ui/styled/createStyleSheet.tests.js b/apolloschurchapp/src/ui/styled/createStyleSheet.tests.js
deleted file mode 100644
index 34950f3..0000000
--- a/apolloschurchapp/src/ui/styled/createStyleSheet.tests.js
+++ /dev/null
@@ -1,28 +0,0 @@
-import React from 'react';
-import { View } from 'react-native';
-import renderer from 'react-test-renderer';
-
-import createStyleSheet, { cachedStyles } from './createStyleSheet';
-
-describe('the createStyleSheet function', () => {
-  it('returns styles that work on components', () => {
-    const style = createStyleSheet({ backgroundColor: 'red' });
-    const tree = renderer.create(<View style={style} />);
-    expect(tree).toMatchSnapshot();
-  });
-  it('uses a style cache when using same style twice', () => {
-    const style = { backgroundColor: 'red' };
-    const a = createStyleSheet(style);
-    const b = createStyleSheet(style);
-    expect(a).toEqual(b);
-    expect(Object.keys(cachedStyles)).toHaveLength(1);
-  });
-  it('doesnt fail when passed an already generated style', () => {
-    const style = createStyleSheet(0); // simulating StyleSheet.create() used elsewhere
-    expect(style).toEqual(0);
-  });
-  it('returns a single style if possible', () => {
-    const style = createStyleSheet([{ backgroundColor: 'red' }]);
-    expect(Array.isArray(style)).toBeFalsy();
-  });
-});
diff --git a/apolloschurchapp/src/ui/styled/index.js b/apolloschurchapp/src/ui/styled/index.js
deleted file mode 100644
index 376f9b9..0000000
--- a/apolloschurchapp/src/ui/styled/index.js
+++ /dev/null
@@ -1,74 +0,0 @@
-import { withPropsOnChange, compose, mapProps } from 'recompose';
-import { isEqual, get } from 'lodash';
-
-import { withTheme } from 'apolloschurchapp/src/ui/theme';
-
-import mergeStyles from './mergeStyles';
-import createStyleSheet from './createStyleSheet';
-
-// HOC to make composing component style easy.
-// Use similar to how you'd use `styled` in styled-components:
-// StyledView = styled({ backgroundColor: 'red' })(View)
-//
-// Can base style off of props:
-// StyledView = styled((props) => ({ backgroundColor: props.color }))(View)
-//
-// Or theme:
-// StyledView = styled(({ theme, ...ownProps }) => ({ backgroundColor: theme.primaryColor }))(View)
-//
-// Also allows for style overriding:
-// <StyledView style={{ borderColor: 'red' }} />
-//
-// Or using with ReactNative.StyleSheet:
-// const styles = StyleSheet.create({ myStyle: { backgroundColor: 'red' }});
-// StyledView = styled(styles.myStyle)(View)
-//
-// However - `styled` uses ReactNative.StyleSheet under the hood, so no need to create
-// separate stylesheets:
-// StyledView = styled((props) => ({ backgroundColor: props.color }))(View)
-// Will create a stylesheet for { backgroundColor: props.color } internally and cache it!
-
-// Generates a style object from a given styleInput.
-// styleInput is the argument passed to `styled`
-const getStyleLiteralFromStyledInput = (
-  styleInput,
-  { ownProps = {}, theme = {} }
-) => {
-  let generatedStyle = styleInput;
-  if (typeof generatedStyle === 'function')
-    generatedStyle = generatedStyle({ theme, ...ownProps });
-  return generatedStyle;
-};
-
-const styled = (styleInput, fqn) =>
-  compose(
-    mapProps((props) => ({ ownProps: props })),
-    withTheme(({ theme }) => ({ theme })),
-    withPropsOnChange(
-      // Only re-eval styles if style prop changes, or the generated style from
-      // styleInput is different. Both of these checks should be exteremely cheap.
-      (props, nextProps) =>
-        props.ownProps.style !== nextProps.ownProps.style ||
-        !isEqual(
-          getStyleLiteralFromStyledInput(styleInput, props),
-          getStyleLiteralFromStyledInput(styleInput, nextProps)
-        ),
-      ({ ownProps, theme }) => {
-        let style = getStyleLiteralFromStyledInput(styleInput, {
-          ownProps,
-          theme,
-        });
-
-        const themeOverrides = fqn ? get(theme, `overrides['${fqn}']`, {}) : {};
-        const { style: ownPropsStyle = {} } = ownProps;
-
-        style = mergeStyles(style, themeOverrides, ownPropsStyle);
-        style = createStyleSheet(style);
-
-        return { style };
-      }
-    ),
-    mapProps(({ ownProps, style }) => ({ ...ownProps, style }))
-  );
-
-export default styled;
diff --git a/apolloschurchapp/src/ui/styled/mergeStyles.js b/apolloschurchapp/src/ui/styled/mergeStyles.js
deleted file mode 100644
index d068b56..0000000
--- a/apolloschurchapp/src/ui/styled/mergeStyles.js
+++ /dev/null
@@ -1,35 +0,0 @@
-import { flattenDeep } from 'lodash';
-
-// Merges two or more styles into one style object or array
-const mergeStyles = (...stylesToMerge) =>
-  flattenDeep(stylesToMerge).reduce((accumulatedStyle, currentStyle) => {
-    let style = accumulatedStyle;
-    const styleRight = currentStyle;
-
-    if (!styleRight && typeof styleRight !== 'number') return accumulatedStyle;
-
-    // both styles are objects, we should turn them into a single object:
-    if (
-      typeof style === 'object' &&
-      !Array.isArray(style) &&
-      !Array.isArray(styleRight) &&
-      typeof styleRight === 'object'
-    ) {
-      style = Object.assign({}, style, styleRight);
-
-      // styles can't be merged automatically, result to joining them in an array
-    } else {
-      if (!Array.isArray(style)) {
-        style = [style];
-      }
-
-      if (Array.isArray(styleRight)) {
-        style = style.concat(styleRight);
-      } else {
-        style.push(styleRight);
-      }
-    }
-    return style;
-  });
-
-export default mergeStyles;
diff --git a/apolloschurchapp/src/ui/styled/mergeStyles.tests.js b/apolloschurchapp/src/ui/styled/mergeStyles.tests.js
deleted file mode 100644
index 4719577..0000000
--- a/apolloschurchapp/src/ui/styled/mergeStyles.tests.js
+++ /dev/null
@@ -1,42 +0,0 @@
-import mergeStyles from './mergeStyles';
-
-describe('the mergeStyles function', () => {
-  it('merges two style objects into one array', () => {
-    const styleOne = { a: '1' };
-    const styleTwo = { b: '2' };
-    const merged = mergeStyles(styleOne, styleTwo);
-    expect(merged).toEqual({ a: '1', b: '2' });
-  });
-  it('maintains expected order', () => {
-    const merged = mergeStyles(1, 2, 3);
-    expect(merged).toEqual([1, 2, 3]);
-  });
-  it('handles null styles', () => {
-    const merged = mergeStyles(43, null);
-    expect(merged).toEqual(43);
-  });
-  it('merges mixed array of objects and objects to one style object', () => {
-    const styleOne = [{ c: '2' }, { a: '1' }];
-    const styleTwo = { b: '1' };
-    const merged = mergeStyles(styleOne, styleTwo);
-    expect(merged).toEqual({ c: '2', a: '1', b: '1' });
-  });
-  it('merges mixed types and maintains correct style order', () => {
-    const styleOne = [{ a: '1' }, { a: '2' }];
-    const styleTwo = { a: '3' };
-    const merged = mergeStyles(styleOne, styleTwo);
-    expect(merged).toEqual({ a: '3' });
-  });
-  it('results in a flat array of styles', () => {
-    const styleOne = [[[1, 2]], { a: '1' }, [3, 4]];
-    const styleTwo = [{ b: '2' }, [[5, 6]]];
-    const merged = mergeStyles(styleOne, styleTwo);
-    expect(merged).toEqual([1, 2, { a: '1' }, 3, 4, { b: '2' }, 5, 6]);
-  });
-  it('handles triple nested arrays', () => {
-    const styleOne = [[[{ a: '1' }, { a: '2' }]]];
-    const styleTwo = [[[{ b: '1' }, { b: '2' }]]];
-    const merged = mergeStyles(styleOne, styleTwo);
-    expect(merged).toEqual({ a: '2', b: '2' });
-  });
-});
diff --git a/apolloschurchapp/src/ui/styled/styled.tests.js b/apolloschurchapp/src/ui/styled/styled.tests.js
deleted file mode 100644
index e165fb3..0000000
--- a/apolloschurchapp/src/ui/styled/styled.tests.js
+++ /dev/null
@@ -1,57 +0,0 @@
-import React from 'react';
-import renderer from 'react-test-renderer';
-import { compose } from 'recompose';
-import { View } from 'react-native';
-
-import Providers from 'apolloschurchapp/src/Providers';
-
-import styled from '.';
-
-describe('the styled HOC', () => {
-  it('passes style literal to the base component', () => {
-    const StyledView = styled({ backgroundColor: 'red' })(View);
-    const tree = renderer.create(<StyledView />);
-    expect(tree).toMatchSnapshot();
-  });
-  it('supports multiple styles, and keeps the correct order', () => {
-    const StyledView = compose(
-      styled({ backgroundColor: 'red' }),
-      styled({ borderColor: 'green' })
-    )(View);
-
-    const customStyle = { height: 100 };
-
-    const tree = renderer.create(<StyledView style={customStyle} />);
-    expect(tree).toMatchSnapshot();
-  });
-  it('should accept a function, works with props', () => {
-    const StyledView = styled(({ color }) => ({ backgroundColor: color }))(
-      View
-    );
-    const tree = renderer.create(<StyledView color="green" />);
-    expect(tree).toMatchSnapshot();
-  });
-  it('provides a theme', () => {
-    const StyledView = styled(({ theme }) => ({
-      backgroundColor: theme.colors.primary,
-    }))(View);
-    const tree = renderer.create(
-      <Providers>
-        <StyledView />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('allows a theme to supply overrides', () => {
-    const StyledView = styled(() => ({ backgroundColor: 'red' }), 'StyledView')(
-      View
-    );
-    const overrides = { StyledView: { backgroundColor: 'green' } };
-    const tree = renderer.create(
-      <Providers themeInput={{ overrides }}>
-        <StyledView />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/ui/theme/ThemeProvider.js b/apolloschurchapp/src/ui/theme/ThemeProvider.js
deleted file mode 100644
index 4dd21e7..0000000
--- a/apolloschurchapp/src/ui/theme/ThemeProvider.js
+++ /dev/null
@@ -1,30 +0,0 @@
-import { PureComponent, Children } from 'react';
-import PropTypes from 'prop-types';
-
-import createTheme, { THEME_PROPS } from './createTheme';
-
-export default class ThemeProvider extends PureComponent {
-  static propTypes = {
-    children: PropTypes.node,
-    themeInput: PropTypes.shape(THEME_PROPS),
-  };
-
-  static childContextTypes = {
-    theme: PropTypes.shape(THEME_PROPS),
-    themeInput: PropTypes.shape(THEME_PROPS),
-  };
-
-  static defaultProps = {
-    children: null,
-    themeInput: {},
-  };
-
-  getChildContext = () => ({
-    theme: createTheme(this.props.themeInput),
-    themeInput: this.props.themeInput,
-  });
-
-  render() {
-    return Children.only(this.props.children);
-  }
-}
diff --git a/apolloschurchapp/src/ui/theme/createTheme.js b/apolloschurchapp/src/ui/theme/createTheme.js
deleted file mode 100644
index 2192c7e..0000000
--- a/apolloschurchapp/src/ui/theme/createTheme.js
+++ /dev/null
@@ -1,80 +0,0 @@
-import { merge, mapValues } from 'lodash';
-import PropTypes from 'prop-types';
-
-import * as defaultTheme from './defaultTheme';
-
-const {
-  colors,
-  typography,
-  breakpoints,
-  sizing,
-  type,
-  types,
-  alpha,
-  ...otherThemeDefaults
-} = defaultTheme;
-
-// Some parts of the theme are stored as functions (such as `shadows` and `helpers`),
-// that depend on the given theme to compute. This processes these parts into objects
-// so we can merge a clean object. It's recursive and fairly abstract for flexibility.
-export const getDynamicThemePart = (part, theme) => {
-  if (typeof part === 'function') return part(theme);
-  if (Array.isArray(part))
-    return part.map((item) => getDynamicThemePart(item, theme));
-  if (typeof part === 'object')
-    return mapValues(part, (value) => getDynamicThemePart(value, theme));
-  return part;
-};
-
-const createTheme = ({
-  colors: colorsInput = {},
-  typography: typographyInput = {},
-  breakpoints: breakpointsInput = {},
-  sizing: sizingInput = {},
-  type: typeInput = type,
-  types: typesInput = {},
-  alpha: alphaInput = {},
-  ...other
-} = {}) => {
-  // compose base theme
-  const theme = {
-    colors: merge({}, colors, colorsInput),
-    typography: merge({}, typography, typographyInput),
-    breakpoints: merge({}, breakpoints, breakpointsInput),
-    sizing: merge({}, sizing, sizingInput),
-    alpha: merge({}, alpha, alphaInput),
-    type: typeInput.toLowerCase(),
-  };
-
-  // inject theme type
-  merge(theme, getDynamicThemePart({ types }, theme));
-  merge(theme, getDynamicThemePart({ types: typesInput }, theme));
-  const availableTypes = theme.types;
-  if (!availableTypes[theme.type])
-    throw new Error(`The theme type ${theme.type} is not supported`);
-
-  merge(theme, availableTypes[typeInput], { colors: colorsInput });
-
-  // mixin other theme defaults (that might depend on base theme)
-  merge(theme, getDynamicThemePart(otherThemeDefaults, theme));
-
-  // mixin other theme inputs (that might depend on base theme)
-  merge(theme, getDynamicThemePart(other, theme));
-  return theme;
-};
-
-export const THEME_PROPS = {
-  colors: PropTypes.object,
-  typography: PropTypes.object,
-  breakpoints: PropTypes.shape({
-    xs: PropTypes.number,
-    sm: PropTypes.number,
-    md: PropTypes.number,
-    lg: PropTypes.number,
-  }),
-  sizing: PropTypes.object,
-  helpers: PropTypes.object,
-  overrides: PropTypes.object,
-};
-
-export default createTheme;
diff --git a/apolloschurchapp/src/ui/theme/createTheme.tests.js b/apolloschurchapp/src/ui/theme/createTheme.tests.js
deleted file mode 100644
index a01712e..0000000
--- a/apolloschurchapp/src/ui/theme/createTheme.tests.js
+++ /dev/null
@@ -1,73 +0,0 @@
-import createTheme, { getDynamicThemePart } from './createTheme';
-import * as defaultTheme from './defaultTheme';
-
-describe('createTheme', () => {
-  it('has a colors', () => {
-    const theme = createTheme();
-    expect(theme).toHaveProperty('colors');
-  });
-
-  it('has a custom colors', () => {
-    const customColors = { primary: 'red', otherColor: 'green' };
-    const theme = createTheme({ colors: customColors });
-    expect(theme.colors).toMatchSnapshot();
-  });
-
-  it('has typography', () => {
-    const theme = createTheme();
-    expect(theme).toHaveProperty('typography');
-  });
-
-  it('has custom typography', () => {
-    const custom = { baseFontSize: '24', otherProp: true };
-    const theme = createTheme({ typography: custom });
-    expect(theme.typography).toMatchSnapshot();
-  });
-
-  it('has helper functions and allows for custom helper functions', () => {
-    const custom = { myFunc: () => () => 'yay!' };
-    const theme = createTheme({ helpers: custom });
-    expect(theme.helpers.rem(1)).toEqual(defaultTheme.typography.baseFontSize);
-    expect(theme.helpers.verticalRhythm(1)).toEqual(
-      defaultTheme.typography.baseLineHeight
-    );
-    expect(theme.helpers.myFunc()).toEqual('yay!');
-  });
-
-  it('allows adding in custom theme properties', () => {
-    const custom = {
-      overrides: { MyComponent: { some: 'style' } },
-    };
-    const theme = createTheme(custom);
-    expect(theme).toMatchSnapshot();
-  });
-
-  it('switches to a dark theme', () => {
-    const theme = createTheme({ type: 'dark' });
-    expect(theme).toMatchSnapshot();
-  });
-  it('throws an error for an unsupported theme type', () => {
-    const theme = () => createTheme({ type: 'Boom' });
-    expect(theme).toThrowErrorMatchingSnapshot();
-  });
-
-  describe('getDynamicThemePart', () => {
-    it('parses types in theme object', () => {
-      const result = getDynamicThemePart(
-        { types: defaultTheme.types },
-        defaultTheme
-      );
-      expect(result.types).toEqual(
-        expect.objectContaining({
-          light: expect.objectContaining({
-            colors: expect.objectContaining({
-              text: expect.objectContaining({
-                primary: expect.any(String),
-              }),
-            }),
-          }),
-        })
-      );
-    });
-  });
-});
diff --git a/apolloschurchapp/src/ui/theme/defaultTheme.js b/apolloschurchapp/src/ui/theme/defaultTheme.js
deleted file mode 100644
index 0ea5632..0000000
--- a/apolloschurchapp/src/ui/theme/defaultTheme.js
+++ /dev/null
@@ -1,189 +0,0 @@
-import fontStack from './fontStack';
-import * as types from './types';
-
-/**
- * There are two parts to a theme:
- * 1. The `input` that is used to generate a theme,
- * 2. The generated `theme` that is consumed by components
- *
- * The structure of both parts are essentially the same, except
- * with the generated `theme` having more detail.
- *
- * This file exposes the default values that are used in
- * theme generation that you might want to customize.
- *
- * To customize these values, provide theme as options in the `themeInput`
- * prop in <ThemeProvider>, like:
- * <ThemeProvider themeInput={{ colors: { primary: 'blue' }, type: 'dark' }} />
- *
- * For more detail on how to customize a theme, see (TODO: should be on storybook)
- */
-
-// Base colors.
-// These get used by theme types (see /types directory) to color
-// specific parts of the interface. For more control on how certain
-// elements are colored, go there. The next level of control comes
-// on a per-component basis with "overrides"
-export const colors = {
-  primary: '#00676D',
-  secondary: '#17B582',
-  tertiary: '#6EC5B8',
-  screen: '#F8F7F4',
-  paper: '#FFFFFF',
-  alert: '#c64f55',
-
-  // Dark shades
-  darkPrimary: '#303030',
-  darkSecondary: '#505050',
-  darkTertiary: '#A5A5A5',
-
-  // Light shades
-  lightPrimary: '#F8F7F4',
-  lightSecondary: '#DBDBD9',
-  lightTertiary: '#A5A5A5',
-
-  // Statics
-  black: '#000000',
-  white: '#FFFFFF',
-  transparent: 'transparent',
-  wordOfChrist: '#8b0000', // only used in Scripture.
-};
-
-/* Base Typography sizing and fonts.
- *
- * To control speicfic styles used on different type components (like H1, H2, etc), see "overrides"
- */
-export const typography = {
-  baseFontSize: 16,
-  baseLineHeight: 23.04, // 1.44 ratio
-  ...fontStack,
-};
-
-// Responsive breakpoints
-export const breakpoints = {
-  xs: 320,
-  sm: 496,
-  md: 800,
-  lg: 1200,
-};
-
-// Base sizing units. These are used to scale
-// space, and size components relatively to one another.
-export const sizing = {
-  baseUnit: 20,
-  borderRadius: 6,
-  avatar: {
-    small: 40,
-    medium: 80,
-    large: 160,
-  },
-};
-
-export const alpha = {
-  high: 0.9,
-  medium: 0.7,
-  low: 0.4,
-};
-
-/**
- * Dynamic theme parts
- * The sections below define some of the dynamic
- * components to a theme. You can still override them,
- * but if you modify only the values above, the values below
- * will be updated to reflect your customizations.
- *
- * The available theme types get included into the theme, and the active theme type gets merged into
- * the theme. This allows for switching of theme values between different color palettes. The theme
- * types included by default are "light" and "dark". But, you could add your own theme types
- * (ex: "kids", with a more vibrant set of colors). Most of the colors that a component uses should
- * come from the active type, not from the base colors above. For example, notice below how
- * `shadows` gets the shadowColor from `colors.shadows`, which is provided by the active theme type.
- */
-export const type = 'light';
-export { types };
-
-export const shadows = ({ colors: themeColors }) => ({
-  default: {
-    ios: {
-      shadowColor: themeColors.shadows.default,
-      shadowOffset: {
-        width: 0,
-        height: 1,
-      },
-      shadowOpacity: 1,
-      shadowRadius: 3,
-    },
-    android: {
-      elevation: 3,
-    },
-  },
-});
-
-export const buttons = ({ colors: themeColors }) => ({
-  default: {
-    fill: themeColors.action.default,
-    accent: themeColors.text.primary,
-  },
-  primary: {
-    fill: themeColors.action.primary,
-    accent: themeColors.white,
-  },
-  secondary: {
-    fill: themeColors.action.secondary,
-    accent: themeColors.white,
-  },
-  tertiary: {
-    fill: themeColors.action.tertiary,
-    accent: themeColors.white,
-  },
-  ghost: {
-    fill: themeColors.text.primary,
-    accent: themeColors.text.primary,
-  },
-  alert: {
-    fill: themeColors.alert,
-    accent: themeColors.white,
-  },
-});
-
-/*
- * Helpers make it easy to expose simple utils in your theme that rely on the current theme to
- * compute its value. They should be a function that takes a single argument - the current theme,
- * and returns a function that gets injected into the theme.
- */
-export const helpers = {};
-
-helpers.rem = (theme) => (units) => {
-  const value = units * theme.typography.baseFontSize;
-  return +value.toFixed(2);
-};
-
-/*
-* Vertical rhythm method of spacing objects (typically typographic elements) based on a predefined
-* ratio. A popular ratio that is often used would be something like the Golden Ratio. With the
-* Golden Ratio as an example, all elment spacing on the page is a multiplied derivitive of that
-* ratio resulting in a rhthmic spacing. This is often used in typography to set line heights and
-* vertical paddings. The helper function below takes a `rem` unit (often a font size but not always)
-* and multiplies it by either a custom ratio or a derrived ratio from the themes `baseLineHeight`
-* devided by the `baseFontSize`.
-*/
-helpers.verticalRhythm = (theme) => (units, customRatio) => {
-  const verticalRatio =
-    customRatio ||
-    theme.typography.baseLineHeight / theme.typography.baseFontSize;
-  return helpers.rem(theme)(verticalRatio * units);
-};
-
-// Overrides allow you to override the styles of any component styled using the `styled` HOC.
-// For example, this component:
-// const SomeComponent = styled({ margin: 10, padding: 20 }, 'SomeComponent');
-// can have its styles overriden by including in overrides:
-// {
-//   overides: {
-//     SomeComponent: {
-//       margin: 5,
-//       padding: 15,
-//     },
-//   },
-// }
-export const overrides = {};
diff --git a/apolloschurchapp/src/ui/theme/fontStack/index.android.js b/apolloschurchapp/src/ui/theme/fontStack/index.android.js
deleted file mode 100644
index 097c09d..0000000
--- a/apolloschurchapp/src/ui/theme/fontStack/index.android.js
+++ /dev/null
@@ -1,35 +0,0 @@
-const fontStack = {
-  sans: {
-    regular: {
-      default: 'Inter-UI-Regular',
-      italic: 'Inter-UI-Italic',
-    },
-    medium: {
-      default: 'Inter-UI-Medium',
-      italic: 'Inter-UI-MediumItalic',
-    },
-    bold: {
-      default: 'Inter-UI-Bold',
-      italic: 'Inter-UI-BoldItalic',
-    },
-    black: {
-      default: 'Inter-UI-Black',
-      italic: 'Inter-UI-BlackItalic',
-    },
-  },
-  serif: {
-    regular: {
-      default: 'DroidSerif-Regular',
-      italic: 'DroidSerif-Italic',
-    },
-    bold: {
-      default: 'DroidSerif-Bold',
-      italic: 'DroidSerif-BoldItalic',
-    },
-  },
-  ui: {
-    regular: 'sans-serif',
-  },
-};
-
-export default fontStack;
diff --git a/apolloschurchapp/src/ui/theme/fontStack/index.ios.js b/apolloschurchapp/src/ui/theme/fontStack/index.ios.js
deleted file mode 100644
index 7242fe0..0000000
--- a/apolloschurchapp/src/ui/theme/fontStack/index.ios.js
+++ /dev/null
@@ -1,35 +0,0 @@
-const fontStack = {
-  sans: {
-    regular: {
-      default: 'InterUI-Regular',
-      italic: 'InterUI-Italic',
-    },
-    medium: {
-      default: 'InterUI-Medium',
-      italic: 'InterUI-MediumItalic',
-    },
-    bold: {
-      default: 'InterUI-Bold',
-      italic: 'InterUI-BoldItalic',
-    },
-    black: {
-      default: 'InterUI-Black',
-      italic: 'InterUI-BlackItalic',
-    },
-  },
-  serif: {
-    regular: {
-      default: 'DroidSerif',
-      italic: 'DroidSerif-Italic',
-    },
-    bold: {
-      default: 'DroidSerif-Bold',
-      italic: 'DroidSerif-BoldItalic',
-    },
-  },
-  ui: {
-    regular: 'System',
-  },
-};
-
-export default fontStack;
diff --git a/apolloschurchapp/src/ui/theme/index.js b/apolloschurchapp/src/ui/theme/index.js
deleted file mode 100644
index 5c0bbd7..0000000
--- a/apolloschurchapp/src/ui/theme/index.js
+++ /dev/null
@@ -1,3 +0,0 @@
-export { default as ThemeProvider } from './ThemeProvider';
-export { default as withTheme } from './withTheme';
-export { ThemeMixin, withThemeMixin } from './mixins';
diff --git a/apolloschurchapp/src/ui/theme/mixins.js b/apolloschurchapp/src/ui/theme/mixins.js
deleted file mode 100644
index a9739aa..0000000
--- a/apolloschurchapp/src/ui/theme/mixins.js
+++ /dev/null
@@ -1,38 +0,0 @@
-import { compose, mapProps, withContext } from 'recompose';
-import PropTypes from 'prop-types';
-import { merge } from 'lodash';
-
-import withTheme from './withTheme';
-import createTheme, { THEME_PROPS } from './createTheme';
-
-const withThemeMixin = (themeInput) =>
-  compose(
-    mapProps((props) => ({ ownProps: props })),
-    withTheme(),
-    withContext(
-      {
-        theme: PropTypes.shape(THEME_PROPS),
-        themeInput: PropTypes.shape(THEME_PROPS),
-      },
-      ({ theme, themeInput: originalThemeInput, ownProps }) => {
-        let themeInputAsObject = themeInput;
-        if (typeof themeInput === 'function') {
-          themeInputAsObject = themeInput({ ...ownProps, theme });
-        }
-        themeInputAsObject = merge(originalThemeInput, themeInputAsObject);
-
-        const themeWithMixin = createTheme(themeInputAsObject);
-        return {
-          theme: themeWithMixin,
-          themeInput: themeInputAsObject,
-        };
-      }
-    ),
-    mapProps(({ ownProps }) => ownProps)
-  );
-
-const ThemeMixin = withThemeMixin(({ mixin = {} } = {}) => mixin)(
-  ({ children }) => children
-);
-
-export { withThemeMixin, ThemeMixin };
diff --git a/apolloschurchapp/src/ui/theme/mixins.tests.js b/apolloschurchapp/src/ui/theme/mixins.tests.js
deleted file mode 100644
index 7b76e92..0000000
--- a/apolloschurchapp/src/ui/theme/mixins.tests.js
+++ /dev/null
@@ -1,58 +0,0 @@
-/* eslint-disable */
-import React from 'react';
-import renderer from 'react-test-renderer';
-
-import FlexedView from 'apolloschurchapp/src/ui/FlexedView';
-import { H3, H6, BodyText } from 'apolloschurchapp/src/ui/typography';
-
-import { ThemeProvider } from './';
-import { withThemeMixin } from './mixins';
-
-const TypeExample = () => (
-  <FlexedView>
-    <H3>Hi there!</H3>
-    <H6>Lorem ipsum dolor sit amet.</H6>
-    <BodyText>
-      Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque sodales
-      sit amet ante eu lobortis. In vitae faucibus lectus, at interdum nibh.
-      Fusce suscipit tincidunt justo, vitae cursus mi fermentum eget.
-    </BodyText>
-  </FlexedView>
-);
-
-const DarkTypeExample = withThemeMixin({
-  type: 'dark',
-})(TypeExample);
-
-const TypeExampleWithProps = withThemeMixin(({ color, isLight = true }) => ({
-  type: isLight ? 'light' : 'dark',
-  colors: {
-    primary: color,
-  },
-}))(TypeExample);
-
-describe('withThemeMixin', () => {
-  it('overrides styles without affecting siblings', () => {
-    const tree = renderer.create(
-      <ThemeProvider>
-        <FlexedView>
-          <TypeExample />
-          <DarkTypeExample />
-          <TypeExample />
-        </FlexedView>
-      </ThemeProvider>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('works with dynamic props', () => {
-    const tree = renderer.create(
-      <ThemeProvider>
-        <FlexedView>
-          <TypeExampleWithProps isLight color="red" />
-          <TypeExampleWithProps isLight={false} color="blue" />
-        </FlexedView>
-      </ThemeProvider>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/ui/theme/theme.stories.js b/apolloschurchapp/src/ui/theme/theme.stories.js
deleted file mode 100644
index 0127758..0000000
--- a/apolloschurchapp/src/ui/theme/theme.stories.js
+++ /dev/null
@@ -1,73 +0,0 @@
-/* eslint-disable */
-import React from 'react';
-import { storiesOf } from '@storybook/react-native';
-
-import FlexedView from 'apolloschurchapp/src/ui/FlexedView';
-import { H3, H6, BodyText } from 'apolloschurchapp/src/ui/typography';
-
-import { ThemeProvider, ThemeMixin, withThemeMixin } from './';
-
-const TypeExample = () => (
-  <FlexedView>
-    <H3>Hi there!</H3>
-    <H6>Lorem ipsum dolor sit amet.</H6>
-    <BodyText>
-      Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque sodales
-      sit amet ante eu lobortis. In vitae faucibus lectus, at interdum nibh.
-      Fusce suscipit tincidunt justo, vitae cursus mi fermentum eget.
-    </BodyText>
-  </FlexedView>
-);
-
-const DarkTypeExample = withThemeMixin({
-  type: 'dark',
-})(TypeExample);
-
-const TypeExampleWithProps = withThemeMixin(({ color, isLight = true }) => ({
-  type: isLight ? 'light' : 'dark',
-  colors: {
-    primary: color,
-  },
-}))(TypeExample);
-
-storiesOf('Theming', module)
-  .add('ThemeProvider - default', () => (
-    <ThemeProvider>
-      <TypeExample />
-    </ThemeProvider>
-  ))
-  .add('ThemeProvider - dark theme', () => (
-    <ThemeProvider
-      themeInput={{
-        type: 'dark',
-      }}
-    >
-      <TypeExample />
-    </ThemeProvider>
-  ))
-  .add('ThemeMixin', () => (
-    <ThemeProvider>
-      <FlexedView>
-        <TypeExample />
-        <ThemeMixin mixin={{ type: 'dark' }}>
-          <TypeExample />
-        </ThemeMixin>
-      </FlexedView>
-    </ThemeProvider>
-  ))
-  .add('withThemeMixin', () => (
-    <ThemeProvider>
-      <FlexedView>
-        <TypeExample />
-        <DarkTypeExample />
-      </FlexedView>
-    </ThemeProvider>
-  ))
-  .add('withThemeMixin using props', () => (
-    <ThemeProvider>
-      <FlexedView>
-        <TypeExampleWithProps isLight color="red" />
-        <TypeExampleWithProps isLight={false} color="blue" />
-      </FlexedView>
-    </ThemeProvider>
-  ));
diff --git a/apolloschurchapp/src/ui/theme/types/dark.js b/apolloschurchapp/src/ui/theme/types/dark.js
deleted file mode 100644
index d1bf211..0000000
--- a/apolloschurchapp/src/ui/theme/types/dark.js
+++ /dev/null
@@ -1,33 +0,0 @@
-import Color from 'color';
-
-const dark = ({ colors, alpha }) => ({
-  colors: {
-    text: {
-      primary: colors.lightPrimary,
-      secondary: colors.lightSecondary,
-      tertiary: colors.lightTertiary,
-      link: colors.secondary,
-    },
-    background: {
-      screen: colors.screen,
-      paper: colors.paper,
-      accent: Color(colors.darkTertiary)
-        .fade(alpha.high)
-        .string(),
-      inactive: colors.darkTertiary,
-    },
-    shadows: {
-      default: Color(colors.darkTertiary)
-        .fade(alpha.medium)
-        .string(),
-    },
-    action: {
-      default: colors.darkTertiary,
-      primary: colors.primary,
-      secondary: colors.secondary,
-      tertiary: colors.tertiary,
-    },
-  },
-});
-
-export default dark;
diff --git a/apolloschurchapp/src/ui/theme/types/index.js b/apolloschurchapp/src/ui/theme/types/index.js
deleted file mode 100644
index 0593895..0000000
--- a/apolloschurchapp/src/ui/theme/types/index.js
+++ /dev/null
@@ -1,2 +0,0 @@
-export { default as dark } from './dark';
-export { default as light } from './light';
diff --git a/apolloschurchapp/src/ui/theme/types/light.js b/apolloschurchapp/src/ui/theme/types/light.js
deleted file mode 100644
index d343f2a..0000000
--- a/apolloschurchapp/src/ui/theme/types/light.js
+++ /dev/null
@@ -1,33 +0,0 @@
-import Color from 'color';
-
-const light = ({ colors, alpha }) => ({
-  colors: {
-    text: {
-      primary: colors.darkPrimary,
-      secondary: colors.darkSecondary,
-      tertiary: colors.darkTertiary,
-      link: colors.secondary,
-    },
-    background: {
-      screen: colors.screen,
-      paper: colors.paper,
-      accent: Color(colors.lightTertiary)
-        .fade(alpha.high)
-        .string(),
-      inactive: colors.lightTertiary,
-    },
-    shadows: {
-      default: Color(colors.darkTertiary)
-        .fade(alpha.medium)
-        .string(),
-    },
-    action: {
-      default: colors.lightTertiary,
-      primary: colors.primary,
-      secondary: colors.secondary,
-      tertiary: colors.tertiary,
-    },
-  },
-});
-
-export default light;
diff --git a/apolloschurchapp/src/ui/theme/withTheme.js b/apolloschurchapp/src/ui/theme/withTheme.js
deleted file mode 100644
index 4208ffd..0000000
--- a/apolloschurchapp/src/ui/theme/withTheme.js
+++ /dev/null
@@ -1,20 +0,0 @@
-import PropTypes from 'prop-types';
-import { compose, mapProps, getContext, hoistStatics } from 'recompose';
-
-import { THEME_PROPS } from './createTheme';
-
-const DEFAULT_MAPPER_FN = ({ theme } = {}) => ({ theme });
-
-export default function(mapperFn = DEFAULT_MAPPER_FN) {
-  return hoistStatics(
-    compose(
-      getContext({
-        theme: PropTypes.shape(THEME_PROPS),
-      }),
-      mapProps(({ theme, ...otherProps }) => ({
-        ...otherProps,
-        ...mapperFn({ theme, ...otherProps }),
-      }))
-    )
-  );
-}
diff --git a/apolloschurchapp/src/ui/typography/BlockQuote/BlockQuote.stories.js b/apolloschurchapp/src/ui/typography/BlockQuote/BlockQuote.stories.js
deleted file mode 100644
index 901a99c..0000000
--- a/apolloschurchapp/src/ui/typography/BlockQuote/BlockQuote.stories.js
+++ /dev/null
@@ -1,31 +0,0 @@
-import React from 'react';
-import { storiesOf } from '@storybook/react-native';
-
-import { withIsLoading } from 'apolloschurchapp/src/ui/isLoading';
-import PaddedView from 'apolloschurchapp/src/ui/PaddedView';
-
-import BlockQuote from '.';
-
-storiesOf('typography/BlockQuote', module)
-  .add('Default', () => (
-    <PaddedView>
-      <BlockQuote>
-        {
-          '"You are the only Bible some unbelievers will ever read." – John MacArthur'
-        }
-      </BlockQuote>
-    </PaddedView>
-  ))
-  .add('isLoading', () => {
-    const SetIsLoading = withIsLoading(PaddedView);
-
-    return (
-      <SetIsLoading isLoading>
-        <BlockQuote>
-          {
-            '"You are the only Bible some unbelievers will ever read." – John MacArthur'
-          }
-        </BlockQuote>
-      </SetIsLoading>
-    );
-  });
diff --git a/apolloschurchapp/src/ui/typography/BlockQuote/BlockQuote.tests.js b/apolloschurchapp/src/ui/typography/BlockQuote/BlockQuote.tests.js
deleted file mode 100644
index 071031c..0000000
--- a/apolloschurchapp/src/ui/typography/BlockQuote/BlockQuote.tests.js
+++ /dev/null
@@ -1,50 +0,0 @@
-import React from 'react';
-import renderer from 'react-test-renderer';
-
-import Providers from 'apolloschurchapp/src/Providers';
-import { H5 } from 'apolloschurchapp/src/ui/typography';
-import { withIsLoading } from 'apolloschurchapp/src/ui/isLoading';
-
-import BlockQuote from '.';
-
-describe('the BlockQuote component', () => {
-  it('should render a string', () => {
-    const tree = renderer.create(
-      <Providers>
-        <BlockQuote>
-          {
-            '"You are the only Bible some unbelievers will ever read." – John MacArthur'
-          }
-        </BlockQuote>
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render child components', () => {
-    const tree = renderer.create(
-      <Providers>
-        <BlockQuote>
-          <H5>
-            {
-              '"You are the only Bible some unbelievers will ever read." – John MacArthur'
-            }
-          </H5>
-        </BlockQuote>
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render a loading state', () => {
-    const BlockQuoteLoadingState = withIsLoading(BlockQuote);
-    const tree = renderer.create(
-      <Providers>
-        <BlockQuoteLoadingState isLoading>
-          {
-            '"You are the only Bible some unbelievers will ever read." – John MacArthur'
-          }
-        </BlockQuoteLoadingState>
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/ui/typography/BlockQuote/index.js b/apolloschurchapp/src/ui/typography/BlockQuote/index.js
deleted file mode 100644
index 6b02d31..0000000
--- a/apolloschurchapp/src/ui/typography/BlockQuote/index.js
+++ /dev/null
@@ -1,45 +0,0 @@
-import React from 'react';
-import { compose, setDisplayName, pure } from 'recompose';
-import PropTypes from 'prop-types';
-import { StyleSheet, View } from 'react-native';
-
-import styled from 'apolloschurchapp/src/ui/styled';
-import { withThemeMixin } from 'apolloschurchapp/src/ui/theme';
-import { BodyText } from 'apolloschurchapp/src/ui/typography';
-
-const Block = compose(
-  setDisplayName('BlockQuote'),
-  styled(({ theme }) => ({
-    alignSelf: 'stretch',
-    marginVertical: theme.helpers.verticalRhythm(2),
-    paddingVertical: theme.helpers.verticalRhythm(1.5),
-    paddingHorizontal: theme.sizing.baseUnit,
-    borderTopWidth: StyleSheet.hairlineWidth,
-    borderBottomWidth: StyleSheet.hairlineWidth,
-    borderColor: theme.colors.text.tertiary,
-  })),
-  // Forced <BodyText> to inherit QuoteText styles.
-  // This is necessary for HTMLView to properly style <blockquote>'s 😥
-  withThemeMixin(({ theme }) => ({
-    overrides: {
-      BodyText: {
-        fontFamily: theme.typography.sans.regular.italic,
-        textAlign: 'center',
-        color: theme.colors.text.primary,
-      },
-    },
-  }))
-)(View);
-
-const BlockQuote = pure(({ children }) => (
-  <Block>
-    {typeof children === 'string' ? <BodyText>{children}</BodyText> : children}
-  </Block>
-));
-
-BlockQuote.propTypes = {
-  children: PropTypes.node,
-  isLoading: PropTypes.bool,
-};
-
-export default BlockQuote;
diff --git a/apolloschurchapp/src/ui/typography/BodyText/BodyText.stories.js b/apolloschurchapp/src/ui/typography/BodyText/BodyText.stories.js
deleted file mode 100644
index 8782907..0000000
--- a/apolloschurchapp/src/ui/typography/BodyText/BodyText.stories.js
+++ /dev/null
@@ -1,56 +0,0 @@
-import React from 'react';
-import { View } from 'react-native';
-import { storiesOf } from '@storybook/react-native';
-
-import BodyText from '.';
-
-storiesOf('typography/BodyText', module)
-  .add('Regular', () => (
-    <BodyText>
-      {
-        '"True faith means holding nothing back. It means putting every hope in God\'s fidelity to His Promises." ― Francis Chan'
-      }
-    </BodyText>
-  ))
-  .add('Bold', () => (
-    <BodyText bold>
-      {
-        '"True faith means holding nothing back. It means putting every hope in God\'s fidelity to His Promises." ― Francis Chan'
-      }
-    </BodyText>
-  ))
-  .add('Italic', () => (
-    <BodyText italic>
-      {
-        '"True faith means holding nothing back. It means putting every hope in God\'s fidelity to His Promises." ― Francis Chan'
-      }
-    </BodyText>
-  ))
-  .add('Bold Italic', () => (
-    <BodyText bold italic>
-      {
-        '"True faith means holding nothing back. It means putting every hope in God\'s fidelity to His Promises." ― Francis Chan'
-      }
-    </BodyText>
-  ))
-  .add('isLoading', () => (
-    <BodyText isLoading>
-      {
-        '"True faith means holding nothing back. It means putting every hope in God\'s fidelity to His Promises." ― Francis Chan'
-      }
-    </BodyText>
-  ))
-  .add('Border Box – platform testing', () => {
-    const border = { borderWidth: 1, borderStyle: 'solid' };
-
-    return (
-      <View>
-        <BodyText style={border}>Body Text</BodyText>
-        <BodyText style={border}>
-          {
-            '"True faith means holding nothing\nback. It means putting every\nhope in God\'s fidelity to His Promises." ― Francis Chan'
-          }
-        </BodyText>
-      </View>
-    );
-  });
diff --git a/apolloschurchapp/src/ui/typography/BodyText/BodyText.tests.js b/apolloschurchapp/src/ui/typography/BodyText/BodyText.tests.js
deleted file mode 100644
index f1e30ef..0000000
--- a/apolloschurchapp/src/ui/typography/BodyText/BodyText.tests.js
+++ /dev/null
@@ -1,72 +0,0 @@
-import React from 'react';
-import renderer from 'react-test-renderer';
-
-import Providers from 'apolloschurchapp/src/Providers';
-
-import BodyText from '.';
-
-describe('the BodyText component', () => {
-  it('should render correctly', () => {
-    const tree = renderer.create(
-      <Providers>
-        <BodyText>Default BodyText text</BodyText>
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render as bold', () => {
-    const tree = renderer.create(
-      <Providers>
-        <BodyText bold>Bold BodyText text</BodyText>
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render as italic', () => {
-    const tree = renderer.create(
-      <Providers>
-        <BodyText italic>Italic BodyText text</BodyText>
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render as bold italic', () => {
-    const tree = renderer.create(
-      <Providers>
-        <BodyText bold italic>
-          Bold italic BodyText text
-        </BodyText>
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should accept and render passed in styles', () => {
-    const salmon = { color: 'salmon' };
-    const tree = renderer.create(
-      <Providers>
-        <BodyText style={salmon}>Salmon text</BodyText>
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render a loading state', () => {
-    const tree = renderer.create(
-      <Providers>
-        <BodyText isLoading>Default BodyText text</BodyText>
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should accept additional props', () => {
-    const tree = renderer.create(
-      <Providers>
-        <BodyText accessible={false}>
-          {
-            '"True faith means holding nothing back. It means putting every hope in God\'s fidelity to His Promises." ― Francis Chan'
-          }
-        </BodyText>
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/ui/typography/BodyText/index.js b/apolloschurchapp/src/ui/typography/BodyText/index.js
deleted file mode 100644
index f6da80a..0000000
--- a/apolloschurchapp/src/ui/typography/BodyText/index.js
+++ /dev/null
@@ -1,49 +0,0 @@
-import { Text } from 'react-native';
-import PropTypes from 'prop-types';
-import { compose, pure, setDisplayName } from 'recompose';
-
-import styled from 'apolloschurchapp/src/ui/styled';
-import {
-  withPlaceholder,
-  Typography,
-} from 'apolloschurchapp/src/ui/Placeholder';
-
-const styles = styled(({ theme, bold, italic }) => {
-  let fontStack = theme.typography.sans.regular.default;
-
-  if (bold && italic) {
-    fontStack = theme.typography.sans.bold.italic;
-  } else if (bold) {
-    fontStack = theme.typography.sans.bold.default;
-  } else if (italic) {
-    fontStack = theme.typography.sans.regular.italic;
-  }
-
-  return {
-    fontSize: theme.helpers.rem(1),
-    lineHeight: theme.helpers.verticalRhythm(1, 1.625),
-    fontFamily: fontStack,
-    color: theme.colors.text.primary,
-  };
-}, 'BodyText');
-
-const BodyText = compose(
-  setDisplayName('BodyText'),
-  styles,
-  withPlaceholder(Typography),
-  pure
-)(Text);
-
-BodyText.propTypes = {
-  bold: PropTypes.bool,
-  italic: PropTypes.bool,
-  isLoading: PropTypes.bool, // display loading placeholder
-  ...Text.propTypes,
-};
-
-BodyText.defaultProps = {
-  bold: false,
-  italic: false,
-};
-
-export default BodyText;
diff --git a/apolloschurchapp/src/ui/typography/BulletListItem/BulletListItem.stories.js b/apolloschurchapp/src/ui/typography/BulletListItem/BulletListItem.stories.js
deleted file mode 100644
index c69c3cb..0000000
--- a/apolloschurchapp/src/ui/typography/BulletListItem/BulletListItem.stories.js
+++ /dev/null
@@ -1,27 +0,0 @@
-import React from 'react';
-import { storiesOf } from '@storybook/react-native';
-
-import { withIsLoading } from 'apolloschurchapp/src/ui/isLoading';
-import PaddedView from 'apolloschurchapp/src/ui/PaddedView';
-
-import BulletListItem from '.';
-
-storiesOf('typography/BulletListItem', module)
-  .add('Default', () => (
-    <PaddedView>
-      <BulletListItem>
-        {`"God's work done in God's way will never lack God's supplies." – Hudson Taylor`}
-      </BulletListItem>
-    </PaddedView>
-  ))
-  .add('isLoading', () => {
-    const SetIsLoading = withIsLoading(PaddedView);
-
-    return (
-      <SetIsLoading isLoading>
-        <BulletListItem>
-          {`"God's work done in God's way will never lack God's supplies." – Hudson Taylor`}
-        </BulletListItem>
-      </SetIsLoading>
-    );
-  });
diff --git a/apolloschurchapp/src/ui/typography/BulletListItem/BulletListItem.tests.js b/apolloschurchapp/src/ui/typography/BulletListItem/BulletListItem.tests.js
deleted file mode 100644
index d9cd08b..0000000
--- a/apolloschurchapp/src/ui/typography/BulletListItem/BulletListItem.tests.js
+++ /dev/null
@@ -1,44 +0,0 @@
-import React from 'react';
-import renderer from 'react-test-renderer';
-
-import Providers from 'apolloschurchapp/src/Providers';
-import { withIsLoading } from 'apolloschurchapp/src/ui/isLoading';
-import { H5 } from 'apolloschurchapp/src/ui/typography';
-
-import BulletListItem from '.';
-
-describe('the BulletListItem component', () => {
-  it('should render a string', () => {
-    const tree = renderer.create(
-      <Providers>
-        <BulletListItem>
-          {`"God's work done in God's way will never lack God's supplies." – Hudson Taylor`}
-        </BulletListItem>
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render render child components', () => {
-    const tree = renderer.create(
-      <Providers>
-        <BulletListItem>
-          <H5>
-            {`"God's work done in God's way will never lack God's supplies." – Hudson Taylor`}
-          </H5>
-        </BulletListItem>
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render a loading state', () => {
-    const BulletListLoadingState = withIsLoading(BulletListItem);
-    const tree = renderer.create(
-      <Providers>
-        <BulletListLoadingState isLoading>
-          {`"God's work done in God's way will never lack God's supplies." – Hudson Taylor`}
-        </BulletListLoadingState>
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/ui/typography/BulletListItem/index.js b/apolloschurchapp/src/ui/typography/BulletListItem/index.js
deleted file mode 100644
index 6be20c1..0000000
--- a/apolloschurchapp/src/ui/typography/BulletListItem/index.js
+++ /dev/null
@@ -1,55 +0,0 @@
-import React from 'react';
-import { compose, setDisplayName, pure } from 'recompose';
-import PropTypes from 'prop-types';
-import { View } from 'react-native';
-
-import styled from 'apolloschurchapp/src/ui/styled';
-import { BodyText } from 'apolloschurchapp/src/ui/typography';
-
-const enhance = compose(
-  setDisplayName('BulletListItem'),
-  pure
-);
-
-const Wrapper = styled(({ theme }) => ({
-  flexDirection: 'row',
-  paddingBottom: theme.helpers.verticalRhythm(0.375),
-}))(View);
-
-const Bullet = styled(({ theme }) => ({
-  // Set in a typographic unit to reflect changes in the default type size.
-  paddingRight: theme.helpers.rem(1) / 2,
-}))(View);
-
-const IosTextWrapFix = styled({
-  // 😢
-  flexShrink: 1,
-})(View);
-
-const BulletListItem = enhance(({ children }) => (
-  <Wrapper>
-    <Bullet>
-      <BodyText>•</BodyText>
-    </Bullet>
-    <IosTextWrapFix>
-      {typeof children === 'string' ? (
-        <BodyText>{children}</BodyText>
-      ) : (
-        children
-      )}
-    </IosTextWrapFix>
-  </Wrapper>
-));
-
-BulletListItem.propTypes = {
-  children: PropTypes.oneOfType([
-    /*
-     * There is no way to type check against known text nodes but expect problems if you try to
-     * pass something other than a string or text elements (this includes children of children).
-     */
-    PropTypes.string,
-    PropTypes.node,
-  ]),
-};
-
-export default BulletListItem;
diff --git a/apolloschurchapp/src/ui/typography/H1/H1.stories.js b/apolloschurchapp/src/ui/typography/H1/H1.stories.js
deleted file mode 100644
index 14a038b..0000000
--- a/apolloschurchapp/src/ui/typography/H1/H1.stories.js
+++ /dev/null
@@ -1,66 +0,0 @@
-import React from 'react';
-import { ScrollView } from 'react-native';
-import { storiesOf } from '@storybook/react-native';
-
-import { Paragraph, H2, BodyText } from 'apolloschurchapp/src/ui/typography';
-import PaddedView from 'apolloschurchapp/src/ui/PaddedView';
-
-import H1 from '.';
-
-storiesOf('typography/H1', module)
-  .add('Default', () => (
-    <ScrollView>
-      <H1>
-        {
-          '"Do all the good you can. By all the means you can. In all the ways you can. In all the places you can. At all the times you can. To all the people you can. As long as ever you can." ― John Wesley'
-        }
-      </H1>
-    </ScrollView>
-  ))
-  .add('padded', () => (
-    <ScrollView>
-      <PaddedView>
-        <H1 padded>Padded Heading Big and Long</H1>
-        <Paragraph>
-          <BodyText>
-            <BodyText italic>Paragraph</BodyText>
-            {
-              " why do the nations rage, and the peoples plot a vain thing? The kings of the earth take a stand, and the rulers take counsel together, against Yahweh, and against his Anointed, saying, «Let's break their bonds apart, and cast their cords from us. He who sits in the heavens will laugh. The LORD will have them in derision. Then he will speak to them in his anger, and terrify them in his wrath: Yet I have set my King on my holy hill of Zion.» I will tell of the decree. Yahweh said to me, You are my son. Today I have become your father. Ask of me, and I will give the nations for your inheritance, the uttermost parts of the earth for your possession. You shall break them with a rod of iron. You shall dash them in pieces like a potter's vessel. Now therefore be wise, you kings. Be instructed, you judges of the earth. Serve Yahweh with fear, and rejoice with trembling. Give sincere homage to the Son, lest he be angry, and you perish in the way, for his wrath will soon be kindled. Blessed are all those who take refuge in him."
-            }
-          </BodyText>
-        </Paragraph>
-        <H2 padded>Padded Heading Big and Long</H2>
-        <Paragraph>
-          <BodyText>
-            <BodyText italic>Paragraph</BodyText>
-            {
-              " blessed is the man who doesn't walk in the counsel of the wicked, nor stand in the way of sinners, nor sit in the seat of scoffers; but his delight is in Yahweh's law. On his law he meditates day and night. He will be like a tree planted by the streams of water, that brings forth its fruit in its season, whose leaf also does not wither. Whatever he does shall prosper. The wicked are not so, but are like the chaff which the wind drives away. Therefore the wicked shall not stand in the judgment, nor sinners in the congregation of the righteous. For Yahweh knows the way of the righteous, but the way of the wicked shall perish."
-            }
-          </BodyText>
-        </Paragraph>
-      </PaddedView>
-    </ScrollView>
-  ))
-  .add('isLoading', () => (
-    <ScrollView>
-      <H1 isLoading>
-        {
-          '"Do all the good you can. By all the means you can. In all the ways you can. In all the places you can. At all the times you can. To all the people you can. As long as ever you can." ― John Wesley'
-        }
-      </H1>
-    </ScrollView>
-  ))
-  .add('Border Box – platform testing', () => {
-    const border = { borderWidth: 1, borderStyle: 'solid' };
-
-    return (
-      <ScrollView>
-        <H1 style={border}>Heading 1</H1>
-        <H1 style={border}>
-          {
-            '"Do all the\ngood you can.\nBy all the means you can. In all the ways you can. In all the places you can. At all the times you can. To all the people you can. As long as ever you can." ― John Wesley'
-          }
-        </H1>
-      </ScrollView>
-    );
-  });
diff --git a/apolloschurchapp/src/ui/typography/H1/H1.tests.js b/apolloschurchapp/src/ui/typography/H1/H1.tests.js
deleted file mode 100644
index 79088b9..0000000
--- a/apolloschurchapp/src/ui/typography/H1/H1.tests.js
+++ /dev/null
@@ -1,64 +0,0 @@
-import React from 'react';
-import renderer from 'react-test-renderer';
-
-import Providers from 'apolloschurchapp/src/Providers';
-
-import H1 from '.';
-
-describe('the H1 component', () => {
-  it('should render correctly', () => {
-    const tree = renderer.create(
-      <Providers>
-        <H1>Default H1 text</H1>
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should accept and render passed in styles', () => {
-    const salmon = { color: 'salmon' };
-    const tree = renderer.create(
-      <Providers>
-        <H1 style={salmon}>Salmon text</H1>
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render with correct padding', () => {
-    const tree = renderer.create(
-      <Providers>
-        <H1 padded>Padded H1 text</H1>
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render a loading state', () => {
-    const tree = renderer.create(
-      <Providers>
-        <H1 isLoading>Default H1 text</H1>
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render a loading state with correct positioning (margins)', () => {
-    const tree = renderer.create(
-      <Providers>
-        <H1 padded isLoading>
-          Padded H1 text
-        </H1>
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should accept additional props', () => {
-    const tree = renderer.create(
-      <Providers>
-        <H1 accessible={false}>
-          {
-            '"Do all the good you can. By all the means you can. In all the ways you can. In all theplaces you can. At all the times you can. To all the people you can. As long as ever you can." ― John Wesley'
-          }
-        </H1>
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/ui/typography/H1/index.js b/apolloschurchapp/src/ui/typography/H1/index.js
deleted file mode 100644
index 15d7ac7..0000000
--- a/apolloschurchapp/src/ui/typography/H1/index.js
+++ /dev/null
@@ -1,39 +0,0 @@
-import { Text } from 'react-native';
-import PropTypes from 'prop-types';
-import { compose, setDisplayName, pure } from 'recompose';
-
-import styled from 'apolloschurchapp/src/ui/styled';
-import {
-  withPlaceholder,
-  Typography,
-} from 'apolloschurchapp/src/ui/Placeholder';
-
-const styles = styled(
-  ({ theme, padded }) => ({
-    fontSize: theme.helpers.rem(2.6875),
-    lineHeight: theme.helpers.verticalRhythm(2.6875, 1.15),
-    fontFamily: theme.typography.sans.black.default,
-    color: theme.colors.text.primary,
-    ...(padded
-      ? {
-          paddingVertical: theme.helpers.verticalRhythm(2.015625),
-        }
-      : {}),
-  }),
-  'H1'
-);
-
-const H1 = compose(
-  setDisplayName('H1'),
-  styles,
-  withPlaceholder(Typography, { width: '100%' }),
-  pure
-)(Text);
-
-H1.propTypes = {
-  padded: PropTypes.bool,
-  isLoading: PropTypes.bool, // display loading placeholder
-  ...Text.propTypes,
-};
-
-export default H1;
diff --git a/apolloschurchapp/src/ui/typography/H2/H2.stories.js b/apolloschurchapp/src/ui/typography/H2/H2.stories.js
deleted file mode 100644
index 4dea901..0000000
--- a/apolloschurchapp/src/ui/typography/H2/H2.stories.js
+++ /dev/null
@@ -1,51 +0,0 @@
-import React from 'react';
-import { View } from 'react-native';
-import { storiesOf } from '@storybook/react-native';
-
-import { Paragraph, BodyText } from 'apolloschurchapp/src/ui/typography';
-import PaddedView from 'apolloschurchapp/src/ui/PaddedView';
-
-import H2 from '.';
-
-storiesOf('typography/H2', module)
-  .add('Default', () => (
-    <H2>
-      {
-        '"God is most glorified in us when we are most satisfied in Him" ― John Piper'
-      }
-    </H2>
-  ))
-  .add('padded', () => (
-    <PaddedView>
-      <H2 padded>Padded Heading Big and Long</H2>
-      <Paragraph>
-        <BodyText>
-          <BodyText italic>Paragraph</BodyText>
-          {
-            " why do the nations rage, and the peoples plot a vain thing? The kings of the earth take a stand, and the rulers take counsel together, against Yahweh, and against his Anointed, saying, «Let's break their bonds apart, and cast their cords from us. He who sits in the heavens will laugh. The LORD will have them in derision. Then he will speak to them in his anger, and terrify them in his wrath: Yet I have set my King on my holy hill of Zion.» I will tell of the decree. Yahweh said to me, You are my son. Today I have become your father. Ask of me, and I will give the nations for your inheritance, the uttermost parts of the earth for your possession. You shall break them with a rod of iron. You shall dash them in pieces like a potter's vessel. Now therefore be wise, you kings. Be instructed, you judges of the earth. Serve Yahweh with fear, and rejoice with trembling. Give sincere homage to the Son, lest he be angry, and you perish in the way, for his wrath will soon be kindled. Blessed are all those who take refuge in him."
-          }
-        </BodyText>
-      </Paragraph>
-    </PaddedView>
-  ))
-  .add('isLoading', () => (
-    <H2 isLoading>
-      {
-        '"God is most glorified in us when we are most satisfied in Him" ― John Piper'
-      }
-    </H2>
-  ))
-  .add('Border Box – platform testing', () => {
-    const border = { borderWidth: 1, borderStyle: 'solid' };
-
-    return (
-      <View>
-        <H2 style={border}>Heading 2</H2>
-        <H2 style={border}>
-          {
-            '"God is most glorified in us when we are most satisfied in Him" ― John Piper'
-          }
-        </H2>
-      </View>
-    );
-  });
diff --git a/apolloschurchapp/src/ui/typography/H2/H2.tests.js b/apolloschurchapp/src/ui/typography/H2/H2.tests.js
deleted file mode 100644
index 4d27da7..0000000
--- a/apolloschurchapp/src/ui/typography/H2/H2.tests.js
+++ /dev/null
@@ -1,64 +0,0 @@
-import React from 'react';
-import renderer from 'react-test-renderer';
-
-import Providers from 'apolloschurchapp/src/Providers';
-
-import H2 from '.';
-
-describe('the H2 component', () => {
-  it('should render correctly', () => {
-    const tree = renderer.create(
-      <Providers>
-        <H2>Default H2 text</H2>
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should accept and render passed in styles', () => {
-    const salmon = { color: 'salmon' };
-    const tree = renderer.create(
-      <Providers>
-        <H2 style={salmon}>Salmon text</H2>
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render with correct padding', () => {
-    const tree = renderer.create(
-      <Providers>
-        <H2 padded>Padded H2 text</H2>
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render a loading state', () => {
-    const tree = renderer.create(
-      <Providers>
-        <H2 isLoading>Default H2 text</H2>
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render a loading state with correct positioning (margins)', () => {
-    const tree = renderer.create(
-      <Providers>
-        <H2 padded isLoading>
-          Padded H2 text
-        </H2>
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should accept additional props', () => {
-    const tree = renderer.create(
-      <Providers>
-        <H2 accessible={false}>
-          {
-            '"God is most glorified in us when we are most satisfied in Him" ― John Piper'
-          }
-        </H2>
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/ui/typography/H2/index.js b/apolloschurchapp/src/ui/typography/H2/index.js
deleted file mode 100644
index 19fba61..0000000
--- a/apolloschurchapp/src/ui/typography/H2/index.js
+++ /dev/null
@@ -1,40 +0,0 @@
-import { Text } from 'react-native';
-import PropTypes from 'prop-types';
-import { compose, setDisplayName, pure } from 'recompose';
-
-import styled from 'apolloschurchapp/src/ui/styled';
-import {
-  withPlaceholder,
-  Typography,
-} from 'apolloschurchapp/src/ui/Placeholder';
-
-const styles = styled(
-  ({ theme, padded }) => ({
-    fontSize: theme.helpers.rem(2.25),
-    lineHeight: theme.helpers.verticalRhythm(2.25, 1.15),
-    fontFamily: theme.typography.sans.black.default,
-    color: theme.colors.text.primary,
-    ...(padded
-      ? {
-          paddingTop: theme.helpers.verticalRhythm(1.6875),
-          paddingBottom: theme.helpers.verticalRhythm(1.125),
-        }
-      : {}),
-  }),
-  'H2'
-);
-
-const H2 = compose(
-  setDisplayName('H2'),
-  styles,
-  withPlaceholder(Typography, { width: '100%' }),
-  pure
-)(Text);
-
-H2.propTypes = {
-  padded: PropTypes.bool,
-  isLoading: PropTypes.bool, // display loading placeholder
-  ...Text.propTypes,
-};
-
-export default H2;
diff --git a/apolloschurchapp/src/ui/typography/H3/H3.stories.js b/apolloschurchapp/src/ui/typography/H3/H3.stories.js
deleted file mode 100644
index 42c966f..0000000
--- a/apolloschurchapp/src/ui/typography/H3/H3.stories.js
+++ /dev/null
@@ -1,59 +0,0 @@
-import React from 'react';
-import { View } from 'react-native';
-import { storiesOf } from '@storybook/react-native';
-
-import PaddedView from 'apolloschurchapp/src/ui/PaddedView';
-import { Paragraph, BodyText } from 'apolloschurchapp/src/ui/typography';
-
-import H3 from '.';
-
-storiesOf('typography/H3', module)
-  .add('Default', () => (
-    <H3>
-      {
-        '"The Christian shoemaker does his duty not by putting little crosses on the shoes, but by making good shoes, because God is interested in good craftsmanship." ― Martin Luther'
-      }
-    </H3>
-  ))
-  .add('padded', () => (
-    <PaddedView>
-      <Paragraph>
-        <BodyText>
-          <BodyText italic>Paragraph</BodyText>
-          {
-            " blessed is the man who doesn't walk in the counsel of the wicked, nor stand in the way of sinners, nor sit in the seat of scoffers; but his delight is in Yahweh's law. On his law he meditates day and night. He will be like a tree planted by the streams of water, that brings forth its fruit in its season, whose leaf also does not wither. Whatever he does shall prosper. The wicked are not so, but are like the chaff which the wind drives away. Therefore the wicked shall not stand in the judgment, nor sinners in the congregation of the righteous. For Yahweh knows the way of the righteous, but the way of the wicked shall perish."
-          }
-        </BodyText>
-      </Paragraph>
-      <H3 padded>Padded Heading The Story of The Longest Heading Ever</H3>
-      <Paragraph>
-        <BodyText>
-          <BodyText italic>Paragraph</BodyText>
-          {
-            " why do the nations rage, and the peoples plot a vain thing? The kings of the earth take a stand, and the rulers take counsel together, against Yahweh, and against his Anointed, saying, «Let's break their bonds apart, and cast their cords from us. He who sits in the heavens will laugh. The LORD will have them in derision. Then he will speak to them in his anger, and terrify them in his wrath: Yet I have set my King on my holy hill of Zion.» I will tell of the decree. Yahweh said to me, You are my son. Today I have become your father. Ask of me, and I will give the nations for your inheritance, the uttermost parts of the earth for your possession. You shall break them with a rod of iron. You shall dash them in pieces like a potter's vessel. Now therefore be wise, you kings. Be instructed, you judges of the earth. Serve Yahweh with fear, and rejoice with trembling. Give sincere homage to the Son, lest he be angry, and you perish in the way, for his wrath will soon be kindled. Blessed are all those who take refuge in him."
-          }
-        </BodyText>
-      </Paragraph>
-    </PaddedView>
-  ))
-  .add('isLoading', () => (
-    <H3 isLoading>
-      {
-        '"The Christian shoemaker does his duty not by putting little crosses on the shoes, but by making good shoes, because God is interested in good craftsmanship." ― Martin Luther'
-      }
-    </H3>
-  ))
-  .add('Border Box – platform testing', () => {
-    const border = { borderWidth: 1, borderStyle: 'solid' };
-
-    return (
-      <View>
-        <H3 style={border}>Heading 3</H3>
-        <H3 style={border}>
-          {
-            '"The Christian shoemaker does his duty not by putting little crosses on the shoes, but by making good shoes, because God is interested in good craftsmanship." ― Martin Luther'
-          }
-        </H3>
-      </View>
-    );
-  });
diff --git a/apolloschurchapp/src/ui/typography/H3/H3.tests.js b/apolloschurchapp/src/ui/typography/H3/H3.tests.js
deleted file mode 100644
index cdbd69a..0000000
--- a/apolloschurchapp/src/ui/typography/H3/H3.tests.js
+++ /dev/null
@@ -1,64 +0,0 @@
-import React from 'react';
-import renderer from 'react-test-renderer';
-
-import Providers from 'apolloschurchapp/src/Providers';
-
-import H3 from '.';
-
-describe('the H3 component', () => {
-  it('should render correctly', () => {
-    const tree = renderer.create(
-      <Providers>
-        <H3>Default H3 text</H3>
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should accept and render passed in styles', () => {
-    const salmon = { color: 'salmon' };
-    const tree = renderer.create(
-      <Providers>
-        <H3 style={salmon}>Salmon text</H3>
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render with correct padding', () => {
-    const tree = renderer.create(
-      <Providers>
-        <H3 padded>Padded H3 text</H3>
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render a loading state', () => {
-    const tree = renderer.create(
-      <Providers>
-        <H3 isLoading>Default H3 text</H3>
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render a loading state with correct positioning (margins)', () => {
-    const tree = renderer.create(
-      <Providers>
-        <H3 padded isLoading>
-          Padded H3 text
-        </H3>
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should accept additional props', () => {
-    const tree = renderer.create(
-      <Providers>
-        <H3 accessible={false}>
-          {
-            '"The Christian shoemaker does his duty not by putting little crosses on the shoes, but by making good shoes, because God is interested in good craftsmanship." ― Martin Luther'
-          }
-        </H3>
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/ui/typography/H3/index.js b/apolloschurchapp/src/ui/typography/H3/index.js
deleted file mode 100644
index b4d22bd..0000000
--- a/apolloschurchapp/src/ui/typography/H3/index.js
+++ /dev/null
@@ -1,40 +0,0 @@
-import { Text } from 'react-native';
-import PropTypes from 'prop-types';
-import { compose, setDisplayName, pure } from 'recompose';
-
-import styled from 'apolloschurchapp/src/ui/styled';
-import {
-  withPlaceholder,
-  Typography,
-} from 'apolloschurchapp/src/ui/Placeholder';
-
-const styles = styled(
-  ({ theme, padded }) => ({
-    fontSize: theme.helpers.rem(1.5),
-    lineHeight: theme.helpers.verticalRhythm(1.5, 1.15),
-    fontFamily: theme.typography.sans.black.default,
-    color: theme.colors.text.primary,
-    ...(padded
-      ? {
-          paddingTop: theme.helpers.verticalRhythm(1.125),
-          paddingBottom: theme.helpers.verticalRhythm(0.75),
-        }
-      : {}),
-  }),
-  'H3'
-);
-
-const H3 = compose(
-  setDisplayName('H3'),
-  styles,
-  withPlaceholder(Typography, { width: '100%' }),
-  pure
-)(Text);
-
-H3.propTypes = {
-  padded: PropTypes.bool,
-  isLoading: PropTypes.bool, // display loading placeholder
-  ...Text.propTypes,
-};
-
-export default H3;
diff --git a/apolloschurchapp/src/ui/typography/H4/H4.stories.js b/apolloschurchapp/src/ui/typography/H4/H4.stories.js
deleted file mode 100644
index 82dcd6f..0000000
--- a/apolloschurchapp/src/ui/typography/H4/H4.stories.js
+++ /dev/null
@@ -1,59 +0,0 @@
-import React from 'react';
-import { View } from 'react-native';
-import { storiesOf } from '@storybook/react-native';
-
-import { Paragraph, BodyText } from 'apolloschurchapp/src/ui/typography';
-import PaddedView from 'apolloschurchapp/src/ui/PaddedView';
-
-import H4 from '.';
-
-storiesOf('typography/H4', module)
-  .add('Default', () => (
-    <H4>
-      {
-        '"What you are is God\'s gift to you, what you become is your gift to God." ― Hans Urs von Balthasar'
-      }
-    </H4>
-  ))
-  .add('padded', () => (
-    <PaddedView>
-      <Paragraph>
-        <BodyText>
-          <BodyText italic>Paragraph</BodyText>
-          {
-            " blessed is the man who doesn't walk in the counsel of the wicked, nor stand in the way of sinners, nor sit in the seat of scoffers; but his delight is in Yahweh's law. On his law he meditates day and night. He will be like a tree planted by the streams of water, that brings forth its fruit in its season, whose leaf also does not wither. Whatever he does shall prosper. The wicked are not so, but are like the chaff which the wind drives away. Therefore the wicked shall not stand in the judgment, nor sinners in the congregation of the righteous. For Yahweh knows the way of the righteous, but the way of the wicked shall perish."
-          }
-        </BodyText>
-      </Paragraph>
-      <H4 padded>Padded Heading The Story of The Longest Heading Ever</H4>
-      <Paragraph>
-        <BodyText>
-          <BodyText italic>Paragraph</BodyText>
-          {
-            " why do the nations rage, and the peoples plot a vain thing? The kings of the earth take a stand, and the rulers take counsel together, against Yahweh, and against his Anointed, saying, «Let's break their bonds apart, and cast their cords from us. He who sits in the heavens will laugh. The LORD will have them in derision. Then he will speak to them in his anger, and terrify them in his wrath: Yet I have set my King on my holy hill of Zion.» I will tell of the decree. Yahweh said to me, You are my son. Today I have become your father. Ask of me, and I will give the nations for your inheritance, the uttermost parts of the earth for your possession. You shall break them with a rod of iron. You shall dash them in pieces like a potter's vessel. Now therefore be wise, you kings. Be instructed, you judges of the earth. Serve Yahweh with fear, and rejoice with trembling. Give sincere homage to the Son, lest he be angry, and you perish in the way, for his wrath will soon be kindled. Blessed are all those who take refuge in him."
-          }
-        </BodyText>
-      </Paragraph>
-    </PaddedView>
-  ))
-  .add('isLoading', () => (
-    <H4 isLoading>
-      {
-        '"What you are is God\'s gift to you, what you become is your gift to God." ― Hans Urs von Balthasar'
-      }
-    </H4>
-  ))
-  .add('Border Box – platform testing', () => {
-    const border = { borderWidth: 1, borderStyle: 'solid' };
-
-    return (
-      <View>
-        <H4 style={border}>Heading 4</H4>
-        <H4 style={border}>
-          {
-            '"What you are is God\'s gift to you, what you become is your gift to God." ― Hans Urs von Balthasar'
-          }
-        </H4>
-      </View>
-    );
-  });
diff --git a/apolloschurchapp/src/ui/typography/H4/H4.tests.js b/apolloschurchapp/src/ui/typography/H4/H4.tests.js
deleted file mode 100644
index f03f6a9..0000000
--- a/apolloschurchapp/src/ui/typography/H4/H4.tests.js
+++ /dev/null
@@ -1,64 +0,0 @@
-import React from 'react';
-import renderer from 'react-test-renderer';
-
-import Providers from 'apolloschurchapp/src/Providers';
-
-import H4 from '.';
-
-describe('the H4 component', () => {
-  it('should render correctly', () => {
-    const tree = renderer.create(
-      <Providers>
-        <H4>Default H4 text</H4>
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should accept and render passed in styles', () => {
-    const salmon = { color: 'salmon' };
-    const tree = renderer.create(
-      <Providers>
-        <H4 style={salmon}>Salmon text</H4>
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render with correct padding', () => {
-    const tree = renderer.create(
-      <Providers>
-        <H4 padded>Padded H4 text</H4>
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render a loading state', () => {
-    const tree = renderer.create(
-      <Providers>
-        <H4 isLoading>Default H4 text</H4>
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render a loading state with correct positioning (margins)', () => {
-    const tree = renderer.create(
-      <Providers>
-        <H4 padded isLoading>
-          Padded H4 text
-        </H4>
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should accept additional props', () => {
-    const tree = renderer.create(
-      <Providers>
-        <H4 accessible={false}>
-          {
-            '"What you are is God\'s gift to you, what you become is your gift to God." ― Hans Urs von Balthasar'
-          }
-        </H4>
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/ui/typography/H4/index.js b/apolloschurchapp/src/ui/typography/H4/index.js
deleted file mode 100644
index 04589a1..0000000
--- a/apolloschurchapp/src/ui/typography/H4/index.js
+++ /dev/null
@@ -1,37 +0,0 @@
-import { Text } from 'react-native';
-import PropTypes from 'prop-types';
-import { compose, setDisplayName, pure } from 'recompose';
-
-import styled from 'apolloschurchapp/src/ui/styled';
-import {
-  withPlaceholder,
-  Typography,
-} from 'apolloschurchapp/src/ui/Placeholder';
-
-const H4 = compose(
-  setDisplayName('H4'),
-  styled(
-    ({ theme, padded }) => ({
-      fontSize: theme.helpers.rem(1),
-      lineHeight: theme.helpers.verticalRhythm(1),
-      fontFamily: theme.typography.sans.bold.default,
-      color: theme.colors.text.primary,
-      ...(padded
-        ? {
-            paddingTop: theme.helpers.verticalRhythm(0.66),
-            paddingBottom: theme.helpers.verticalRhythm(0.5),
-          }
-        : {}),
-    }),
-    'H4'
-  ),
-  withPlaceholder(Typography, { width: '80%' }),
-  pure
-)(Text);
-
-H4.propTypes = {
-  isLoading: PropTypes.bool, // display loading placeholder
-  ...Text.propTypes,
-};
-
-export default H4;
diff --git a/apolloschurchapp/src/ui/typography/H5/H5.stories.js b/apolloschurchapp/src/ui/typography/H5/H5.stories.js
deleted file mode 100644
index d7655d4..0000000
--- a/apolloschurchapp/src/ui/typography/H5/H5.stories.js
+++ /dev/null
@@ -1,59 +0,0 @@
-import React from 'react';
-import { View } from 'react-native';
-import { storiesOf } from '@storybook/react-native';
-
-import { Paragraph, BodyText } from 'apolloschurchapp/src/ui/typography';
-import PaddedView from 'apolloschurchapp/src/ui/PaddedView';
-
-import H5 from '.';
-
-storiesOf('typography/H5', module)
-  .add('Default', () => (
-    <H5>
-      {
-        '"Faith does not eliminate questions. But faith knows where to take them." ― Elisabeth Elliot'
-      }
-    </H5>
-  ))
-  .add('padded', () => (
-    <PaddedView>
-      <Paragraph>
-        <BodyText>
-          <BodyText italic>Paragraph</BodyText>
-          {
-            " blessed is the man who doesn't walk in the counsel of the wicked, nor stand in the way of sinners, nor sit in the seat of scoffers; but his delight is in Yahweh's law. On his law he meditates day and night. He will be like a tree planted by the streams of water, that brings forth its fruit in its season, whose leaf also does not wither. Whatever he does shall prosper. The wicked are not so, but are like the chaff which the wind drives away. Therefore the wicked shall not stand in the judgment, nor sinners in the congregation of the righteous. For Yahweh knows the way of the righteous, but the way of the wicked shall perish."
-          }
-        </BodyText>
-      </Paragraph>
-      <H5 padded>Padded Heading The Story of The Longest Heading Ever</H5>
-      <Paragraph>
-        <BodyText>
-          <BodyText italic>Paragraph</BodyText>
-          {
-            " why do the nations rage, and the peoples plot a vain thing? The kings of the earth take a stand, and the rulers take counsel together, against Yahweh, and against his Anointed, saying, «Let's break their bonds apart, and cast their cords from us. He who sits in the heavens will laugh. The LORD will have them in derision. Then he will speak to them in his anger, and terrify them in his wrath: Yet I have set my King on my holy hill of Zion.» I will tell of the decree. Yahweh said to me, You are my son. Today I have become your father. Ask of me, and I will give the nations for your inheritance, the uttermost parts of the earth for your possession. You shall break them with a rod of iron. You shall dash them in pieces like a potter's vessel. Now therefore be wise, you kings. Be instructed, you judges of the earth. Serve Yahweh with fear, and rejoice with trembling. Give sincere homage to the Son, lest he be angry, and you perish in the way, for his wrath will soon be kindled. Blessed are all those who take refuge in him."
-          }
-        </BodyText>
-      </Paragraph>
-    </PaddedView>
-  ))
-  .add('isLoading', () => (
-    <H5 isLoading>
-      {
-        '"Faith does not eliminate questions. But faith knows where to take them." ― Elisabeth Elliot'
-      }
-    </H5>
-  ))
-  .add('Border Box – platform testing', () => {
-    const border = { borderWidth: 1, borderStyle: 'solid' };
-
-    return (
-      <View>
-        <H5 style={border}>Heading 5</H5>
-        <H5 style={border}>
-          {
-            '"Faith does not eliminate questions. But faith knows where to take them." ― Elisabeth Elliot'
-          }
-        </H5>
-      </View>
-    );
-  });
diff --git a/apolloschurchapp/src/ui/typography/H5/H5.tests.js b/apolloschurchapp/src/ui/typography/H5/H5.tests.js
deleted file mode 100644
index 1c36f36..0000000
--- a/apolloschurchapp/src/ui/typography/H5/H5.tests.js
+++ /dev/null
@@ -1,64 +0,0 @@
-import React from 'react';
-import renderer from 'react-test-renderer';
-
-import Providers from 'apolloschurchapp/src/Providers';
-
-import H5 from '.';
-
-describe('the H5 component', () => {
-  it('should render correctly', () => {
-    const tree = renderer.create(
-      <Providers>
-        <H5>Default H5 text</H5>
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should accept and render passed in styles', () => {
-    const salmon = { color: 'salmon' };
-    const tree = renderer.create(
-      <Providers>
-        <H5 style={salmon}>Salmon text</H5>
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render with correct padding', () => {
-    const tree = renderer.create(
-      <Providers>
-        <H5 padded>Padded H5 text</H5>
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render a loading state', () => {
-    const tree = renderer.create(
-      <Providers>
-        <H5 isLoading>Default H5 text</H5>
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render a loading state with correct positioning (margins)', () => {
-    const tree = renderer.create(
-      <Providers>
-        <H5 padded isLoading>
-          Padded H5 text
-        </H5>
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should accept additional props', () => {
-    const tree = renderer.create(
-      <Providers>
-        <H5 accessible={false}>
-          {
-            '"Faith does not eliminate questions. But faith knows where to take them." ― Elisabeth Elliot'
-          }
-        </H5>
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/ui/typography/H5/index.js b/apolloschurchapp/src/ui/typography/H5/index.js
deleted file mode 100644
index 04caa52..0000000
--- a/apolloschurchapp/src/ui/typography/H5/index.js
+++ /dev/null
@@ -1,40 +0,0 @@
-import { Text } from 'react-native';
-import PropTypes from 'prop-types';
-import { compose, setDisplayName, pure } from 'recompose';
-
-import styled from 'apolloschurchapp/src/ui/styled';
-import {
-  withPlaceholder,
-  Typography,
-} from 'apolloschurchapp/src/ui/Placeholder';
-
-const styles = styled(
-  ({ theme, padded }) => ({
-    fontSize: theme.helpers.rem(0.875),
-    lineHeight: theme.helpers.verticalRhythm(0.875),
-    fontFamily: theme.typography.sans.medium.default,
-    color: theme.colors.text.primary,
-    ...(padded
-      ? {
-          paddingTop: theme.helpers.verticalRhythm(0.5775),
-          paddingBottom: theme.helpers.verticalRhythm(0.4375),
-        }
-      : {}),
-  }),
-  'H5'
-);
-
-const H5 = compose(
-  setDisplayName('H5'),
-  styles,
-  withPlaceholder(Typography, { width: '60%' }),
-  pure
-)(Text);
-
-H5.propTypes = {
-  padded: PropTypes.bool,
-  isLoading: PropTypes.bool, // display loading placeholder
-  ...Text.propTypes,
-};
-
-export default H5;
diff --git a/apolloschurchapp/src/ui/typography/H6/H6.stories.js b/apolloschurchapp/src/ui/typography/H6/H6.stories.js
deleted file mode 100644
index ef14964..0000000
--- a/apolloschurchapp/src/ui/typography/H6/H6.stories.js
+++ /dev/null
@@ -1,59 +0,0 @@
-import React from 'react';
-import { View } from 'react-native';
-import { storiesOf } from '@storybook/react-native';
-
-import { Paragraph, BodyText } from 'apolloschurchapp/src/ui/typography';
-import PaddedView from 'apolloschurchapp/src/ui/PaddedView';
-
-import H6 from '.';
-
-storiesOf('typography/H6', module)
-  .add('Default', () => (
-    <H6>
-      {
-        '"Radical obedience to Christ is not easy... It\'s not comfort, not health, not wealth, and not prosperity in this world. Radical obedience to Christ risks losing all these things. But in the end, such risk finds its reward in Christ. And He is more than enough for us." ― David Platt'
-      }
-    </H6>
-  ))
-  .add('padded', () => (
-    <PaddedView>
-      <Paragraph>
-        <BodyText>
-          <BodyText italic>Paragraph</BodyText>
-          {
-            " blessed is the man who doesn't walk in the counsel of the wicked, nor stand in the way of sinners, nor sit in the seat of scoffers; but his delight is in Yahweh's law. On his law he meditates day and night. He will be like a tree planted by the streams of water, that brings forth its fruit in its season, whose leaf also does not wither. Whatever he does shall prosper. The wicked are not so, but are like the chaff which the wind drives away. Therefore the wicked shall not stand in the judgment, nor sinners in the congregation of the righteous. For Yahweh knows the way of the righteous, but the way of the wicked shall perish."
-          }
-        </BodyText>
-      </Paragraph>
-      <H6 padded>Padded Heading The Story of The Longest Heading Ever</H6>
-      <Paragraph>
-        <BodyText>
-          <BodyText italic>Paragraph</BodyText>
-          {
-            " why do the nations rage, and the peoples plot a vain thing? The kings of the earth take a stand, and the rulers take counsel together, against Yahweh, and against his Anointed, saying, «Let's break their bonds apart, and cast their cords from us. He who sits in the heavens will laugh. The LORD will have them in derision. Then he will speak to them in his anger, and terrify them in his wrath: Yet I have set my King on my holy hill of Zion.» I will tell of the decree. Yahweh said to me, You are my son. Today I have become your father. Ask of me, and I will give the nations for your inheritance, the uttermost parts of the earth for your possession. You shall break them with a rod of iron. You shall dash them in pieces like a potter's vessel. Now therefore be wise, you kings. Be instructed, you judges of the earth. Serve Yahweh with fear, and rejoice with trembling. Give sincere homage to the Son, lest he be angry, and you perish in the way, for his wrath will soon be kindled. Blessed are all those who take refuge in him."
-          }
-        </BodyText>
-      </Paragraph>
-    </PaddedView>
-  ))
-  .add('isLoading', () => (
-    <H6 isLoading>
-      {
-        '"Radical obedience to Christ is not easy... It\'s not comfort, not health, not wealth, and not prosperity in this world. Radical obedience to Christ risks losing all these things. But in the end, such risk finds its reward in Christ. And He is more than enough for us." ― David Platt'
-      }
-    </H6>
-  ))
-  .add('Border Box – platform testing', () => {
-    const border = { borderWidth: 1, borderStyle: 'solid' };
-
-    return (
-      <View>
-        <H6 style={border}>Heading 6</H6>
-        <H6 style={border}>
-          {
-            '"Radical obedience to Christ is not easy... It\'s not comfort, not health, not wealth, and not prosperity in this world. Radical obedience to Christ risks losing all these things. But in the end, such risk finds its reward in Christ. And He is more than enough for us." ― David Platt'
-          }
-        </H6>
-      </View>
-    );
-  });
diff --git a/apolloschurchapp/src/ui/typography/H6/H6.tests.js b/apolloschurchapp/src/ui/typography/H6/H6.tests.js
deleted file mode 100644
index 849c9c1..0000000
--- a/apolloschurchapp/src/ui/typography/H6/H6.tests.js
+++ /dev/null
@@ -1,64 +0,0 @@
-import React from 'react';
-import renderer from 'react-test-renderer';
-
-import Providers from 'apolloschurchapp/src/Providers';
-
-import H6 from '.';
-
-describe('the H6 component', () => {
-  it('should render correctly', () => {
-    const tree = renderer.create(
-      <Providers>
-        <H6>Default H6 text</H6>
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should accept and render passed in styles', () => {
-    const salmon = { color: 'salmon' };
-    const tree = renderer.create(
-      <Providers>
-        <H6 style={salmon}>Salmon text</H6>
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render with correct padding', () => {
-    const tree = renderer.create(
-      <Providers>
-        <H6 padded>Padded H6 text</H6>
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render a loading state', () => {
-    const tree = renderer.create(
-      <Providers>
-        <H6 isLoading>Default H6 text</H6>
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render a loading state with correct positioning (margins)', () => {
-    const tree = renderer.create(
-      <Providers>
-        <H6 padded isLoading>
-          Padded H6 text
-        </H6>
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should accept additional props', () => {
-    const tree = renderer.create(
-      <Providers>
-        <H6 accessible={false}>
-          {
-            '"Radical obedience to Christ is not easy... It\'s not comfort, not health, not wealth, and not prosperity in this world. Radical obedience to Christ risks losing all these things. But in the end, such risk finds its reward in Christ. And he is more than enough for us." ― David Platt'
-          }
-        </H6>
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/ui/typography/H6/index.js b/apolloschurchapp/src/ui/typography/H6/index.js
deleted file mode 100644
index 9084ba1..0000000
--- a/apolloschurchapp/src/ui/typography/H6/index.js
+++ /dev/null
@@ -1,40 +0,0 @@
-import { Text } from 'react-native';
-import PropTypes from 'prop-types';
-import { compose, setDisplayName, pure } from 'recompose';
-
-import styled from 'apolloschurchapp/src/ui/styled';
-import {
-  withPlaceholder,
-  Typography,
-} from 'apolloschurchapp/src/ui/Placeholder';
-
-const styles = styled(
-  ({ theme, padded }) => ({
-    fontSize: theme.helpers.rem(0.75),
-    lineHeight: theme.helpers.verticalRhythm(0.75),
-    fontFamily: theme.typography.sans.bold.default,
-    color: theme.colors.text.secondary,
-    ...(padded
-      ? {
-          // paddingTop: theme.helpers.verticalRhythm(0.495),
-          paddingBottom: theme.helpers.verticalRhythm(0.375),
-        }
-      : {}),
-  }),
-  'H6'
-);
-
-const H6 = compose(
-  setDisplayName('H6'),
-  styles,
-  withPlaceholder(Typography, { width: '50%' }),
-  pure
-)(Text);
-
-H6.propTypes = {
-  padded: PropTypes.bool,
-  isLoading: PropTypes.bool, // display loading placeholder
-  ...Text.propTypes,
-};
-
-export default H6;
diff --git a/apolloschurchapp/src/ui/typography/Paragraph/Paragraph.stories.js b/apolloschurchapp/src/ui/typography/Paragraph/Paragraph.stories.js
deleted file mode 100644
index fc68b44..0000000
--- a/apolloschurchapp/src/ui/typography/Paragraph/Paragraph.stories.js
+++ /dev/null
@@ -1,81 +0,0 @@
-import React from 'react';
-import { storiesOf } from '@storybook/react-native';
-import { ScrollView } from 'react-native';
-
-import { BodyText } from 'apolloschurchapp/src/ui/typography';
-import PaddedView from 'apolloschurchapp/src/ui/PaddedView';
-
-import Paragraph from '.';
-
-storiesOf('typography/Paragraph', module)
-  .add('Default', () => (
-    <ScrollView>
-      <PaddedView>
-        <Paragraph>
-          <BodyText>
-            {`But I, brothers, could not address you as spiritual people, but as people of the flesh, as infants in Christ. I fed you with milk, not solid food, for you were not ready for it. And even now you are not yet ready, for you are still of the flesh. For while there is jealousy and strife among you, are you not of the flesh and behaving only in a human way? For when one says, "I follow Paul," and another, "I follow Apollos," are you not being merely human?`}
-          </BodyText>
-        </Paragraph>
-
-        <Paragraph>
-          <BodyText>
-            {`What then is Apollos? What is Paul? Servants through whom you believed, as the Lord assigned to each. I planted, Apollos watered, but God gave the growth. So neither he who plants nor he who waters is anything, but only God who gives the growth. He who plants and he who waters are one, and each will receive his wages according to his labor. For we are God's fellow workers. You are God's field, God's building.`}
-          </BodyText>
-        </Paragraph>
-
-        <Paragraph>
-          <BodyText>
-            {`According to the grace of God given to me, like a skilled[b] master builder I laid a foundation, and someone else is building upon it. Let each one take care how he builds upon it. For no one can lay a foundation other than that which is laid, which is Jesus Christ. Now if anyone builds on the foundation with gold, silver, precious stones, wood, hay, straw— each one's work will become manifest, for the Day will disclose it, because it will be revealed by fire, and the fire will test what sort of work each one has done. If the work that anyone has built on the foundation survives, he will receive a reward. If anyone's work is burned up, he will suffer loss, though he himself will be saved, but only as through fire.`}
-          </BodyText>
-        </Paragraph>
-      </PaddedView>
-    </ScrollView>
-  ))
-  .add('isLoading', () => (
-    <ScrollView>
-      <PaddedView>
-        <Paragraph isLoading>
-          <BodyText>
-            {`But I, brothers, could not address you as spiritual people, but as people of the flesh, as infants in Christ. I fed you with milk, not solid food, for you were not ready for it. And even now you are not yet ready, for you are still of the flesh. For while there is jealousy and strife among you, are you not of the flesh and behaving only in a human way? For when one says, "I follow Paul," and another, "I follow Apollos," are you not being merely human?`}
-          </BodyText>
-        </Paragraph>
-
-        <Paragraph isLoading>
-          <BodyText>
-            {`What then is Apollos? What is Paul? Servants through whom you believed, as the Lord assigned to each. I planted, Apollos watered, but God gave the growth. So neither he who plants nor he who waters is anything, but only God who gives the growth. He who plants and he who waters are one, and each will receive his wages according to his labor. For we are God's fellow workers. You are God's field, God's building.`}
-          </BodyText>
-        </Paragraph>
-
-        <Paragraph isLoading>
-          <BodyText>
-            {`According to the grace of God given to me, like a skilled[b] master builder I laid a foundation, and someone else is building upon it. Let each one take care how he builds upon it. For no one can lay a foundation other than that which is laid, which is Jesus Christ. Now if anyone builds on the foundation with gold, silver, precious stones, wood, hay, straw— each one's work will become manifest, for the Day will disclose it, because it will be revealed by fire, and the fire will test what sort of work each one has done. If the work that anyone has built on the foundation survives, he will receive a reward. If anyone's work is burned up, he will suffer loss, though he himself will be saved, but only as through fire.`}
-          </BodyText>
-        </Paragraph>
-      </PaddedView>
-    </ScrollView>
-  ))
-  .add('Border Box – platform testing', () => {
-    const border = { borderWidth: 1, borderStyle: 'solid' };
-
-    return (
-      <ScrollView>
-        <Paragraph style={border}>
-          <BodyText>
-            {`But I, brothers, could not address you as spiritual people, but as people of the flesh, as infants in Christ. I fed you with milk, not solid food, for you were not ready for it. And even now you are not yet ready, for you are still of the flesh. For while there is jealousy and strife among you, are you not of the flesh and behaving only in a human way? For when one says, "I follow Paul," and another, "I follow Apollos," are you not being merely human?`}
-          </BodyText>
-        </Paragraph>
-
-        <Paragraph style={border}>
-          <BodyText>
-            {`What then is Apollos? What is Paul? Servants through whom you believed, as the Lord assigned to each. I planted, Apollos watered, but God gave the growth. So neither he who plants nor he who waters is anything, but only God who gives the growth. He who plants and he who waters are one, and each will receive his wages according to his labor. For we are God's fellow workers. You are God's field, God's building.`}
-          </BodyText>
-        </Paragraph>
-
-        <Paragraph style={border}>
-          <BodyText>
-            {`According to the grace of God given to me, like a skilled[b] master builder I laid a foundation, and someone else is building upon it. Let each one take care how he builds upon it. For no one can lay a foundation other than that which is laid, which is Jesus Christ. Now if anyone builds on the foundation with gold, silver, precious stones, wood, hay, straw— each one's work will become manifest, for the Day will disclose it, because it will be revealed by fire, and the fire will test what sort of work each one has done. If the work that anyone has built on the foundation survives, he will receive a reward. If anyone's work is burned up, he will suffer loss, though he himself will be saved, but only as through fire.`}
-          </BodyText>
-        </Paragraph>
-      </ScrollView>
-    );
-  });
diff --git a/apolloschurchapp/src/ui/typography/Paragraph/Paragraph.tests.js b/apolloschurchapp/src/ui/typography/Paragraph/Paragraph.tests.js
deleted file mode 100644
index 14f295c..0000000
--- a/apolloschurchapp/src/ui/typography/Paragraph/Paragraph.tests.js
+++ /dev/null
@@ -1,46 +0,0 @@
-import React from 'react';
-import { Text } from 'react-native';
-import renderer from 'react-test-renderer';
-
-import Providers from 'apolloschurchapp/src/Providers';
-
-import Paragraph from '.';
-
-describe('the UIText component', () => {
-  it('should render correctly', () => {
-    const tree = renderer.create(
-      <Providers>
-        <Paragraph>
-          <Text>
-            {`But I, brothers, could not address you as spiritual people, but as
-              people of the flesh, as infants in Christ. I fed you with milk, not
-              solid food, for you were not ready for it. And even now you are not
-              yet ready, for you are still of the flesh. For while there is jealousy
-              and strife among you, are you not of the flesh and behaving only in a
-              human way? For when one says, "I follow Paul," and another, "I follow
-              Apollos," are you not being merely human?`}
-          </Text>
-        </Paragraph>
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render a loading state', () => {
-    const tree = renderer.create(
-      <Providers>
-        <Paragraph isLoading>
-          <Text>
-            {`But I, brothers, could not address you as spiritual people, but as
-              people of the flesh, as infants in Christ. I fed you with milk, not
-              solid food, for you were not ready for it. And even now you are not
-              yet ready, for you are still of the flesh. For while there is jealousy
-              and strife among you, are you not of the flesh and behaving only in a
-              human way? For when one says, "I follow Paul," and another, "I follow
-              Apollos," are you not being merely human?`}
-          </Text>
-        </Paragraph>
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/ui/typography/Paragraph/index.js b/apolloschurchapp/src/ui/typography/Paragraph/index.js
deleted file mode 100644
index ed68326..0000000
--- a/apolloschurchapp/src/ui/typography/Paragraph/index.js
+++ /dev/null
@@ -1,23 +0,0 @@
-import { compose, setDisplayName } from 'recompose';
-import PropTypes from 'prop-types';
-import { View } from 'react-native';
-
-import {
-  withPlaceholder,
-  Paragraph as ParagraphPlaceholder,
-} from 'apolloschurchapp/src/ui/Placeholder';
-import styled from 'apolloschurchapp/src/ui/styled';
-
-const Paragraph = compose(
-  setDisplayName('Paragraph'),
-  styled(({ theme }) => ({
-    paddingBottom: theme.helpers.verticalRhythm(0.75),
-  })),
-  withPlaceholder(ParagraphPlaceholder)
-)(View);
-
-Paragraph.propTypes = {
-  isLoading: PropTypes.bool, // display loading placeholder
-};
-
-export default Paragraph;
diff --git a/apolloschurchapp/src/ui/typography/UIText/UIText.stories.js b/apolloschurchapp/src/ui/typography/UIText/UIText.stories.js
deleted file mode 100644
index 62ac32e..0000000
--- a/apolloschurchapp/src/ui/typography/UIText/UIText.stories.js
+++ /dev/null
@@ -1,56 +0,0 @@
-import React from 'react';
-import { View } from 'react-native';
-import { storiesOf } from '@storybook/react-native';
-
-import UIText from '.';
-
-storiesOf('typography/UIText', module)
-  .add('Normal', () => (
-    <UIText>
-      {
-        '"You are the only Bible some unbelievers will ever read." – John MacArthur'
-      }
-    </UIText>
-  ))
-  .add('Bold', () => (
-    <UIText bold>
-      {
-        '"You are the only Bible some unbelievers will ever read." – John MacArthur'
-      }
-    </UIText>
-  ))
-  .add('Italic', () => (
-    <UIText italic>
-      {
-        '"You are the only Bible some unbelievers will ever read." – John MacArthur'
-      }
-    </UIText>
-  ))
-  .add('Bold Italic', () => (
-    <UIText bold italic>
-      {
-        '"You are the only Bible some unbelievers will ever read." – John MacArthur'
-      }
-    </UIText>
-  ))
-  .add('isLoading', () => (
-    <UIText isLoading>
-      {
-        '"You are the only Bible some unbelievers will ever read." – John MacArthur'
-      }
-    </UIText>
-  ))
-  .add('Border Box – platform testing', () => {
-    const border = { borderWidth: 1, borderStyle: 'solid' };
-
-    return (
-      <View>
-        <UIText style={border}>UI Text</UIText>
-        <UIText style={border}>
-          {
-            '"You are the only Bible some unbelievers will ever read." – John MacArthur'
-          }
-        </UIText>
-      </View>
-    );
-  });
diff --git a/apolloschurchapp/src/ui/typography/UIText/UIText.tests.js b/apolloschurchapp/src/ui/typography/UIText/UIText.tests.js
deleted file mode 100644
index 646447e..0000000
--- a/apolloschurchapp/src/ui/typography/UIText/UIText.tests.js
+++ /dev/null
@@ -1,72 +0,0 @@
-import React from 'react';
-import renderer from 'react-test-renderer';
-
-import Providers from 'apolloschurchapp/src/Providers';
-
-import UIText from '.';
-
-describe('the UIText component', () => {
-  it('should render correctly', () => {
-    const tree = renderer.create(
-      <Providers>
-        <UIText>Default UIText text</UIText>
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render as bold', () => {
-    const tree = renderer.create(
-      <Providers>
-        <UIText bold>Bold UIText text</UIText>
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render as italic', () => {
-    const tree = renderer.create(
-      <Providers>
-        <UIText italic>Italic UIText text</UIText>
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render as bold italic', () => {
-    const tree = renderer.create(
-      <Providers>
-        <UIText bold italic>
-          Bold italic UIText text
-        </UIText>
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should accept and render passed in styles', () => {
-    const salmon = { color: 'salmon' };
-    const tree = renderer.create(
-      <Providers>
-        <UIText style={salmon}>Salmon text</UIText>
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render a loading state', () => {
-    const tree = renderer.create(
-      <Providers>
-        <UIText isLoading>Default UIText text</UIText>
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should accept additional props', () => {
-    const tree = renderer.create(
-      <Providers>
-        <UIText accessible={false}>
-          {
-            '"You are the only Bible some unbelievers will ever read." – John MacArthur'
-          }
-        </UIText>
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/ui/typography/UIText/index.js b/apolloschurchapp/src/ui/typography/UIText/index.js
deleted file mode 100644
index 3e7e5ce..0000000
--- a/apolloschurchapp/src/ui/typography/UIText/index.js
+++ /dev/null
@@ -1,35 +0,0 @@
-import { Text } from 'react-native';
-import PropTypes from 'prop-types';
-import { compose, setDisplayName, pure } from 'recompose';
-
-import styled from 'apolloschurchapp/src/ui/styled';
-import {
-  withPlaceholder,
-  Typography,
-} from 'apolloschurchapp/src/ui/Placeholder';
-
-const UIText = compose(
-  setDisplayName('UIText'),
-  styled(
-    ({ theme, bold, italic }) => ({
-      fontSize: theme.helpers.rem(0.875),
-      lineHeight: theme.helpers.verticalRhythm(0.875),
-      fontFamily: theme.typography.ui.regular,
-      fontStyle: italic ? 'italic' : null,
-      fontWeight: bold ? '700' : null,
-      color: theme.colors.text.primary,
-    }),
-    'UIText'
-  ),
-  withPlaceholder(Typography, { width: '40%' }),
-  pure
-)(Text);
-
-UIText.propTypes = {
-  bold: PropTypes.bool,
-  italic: PropTypes.bool,
-  isLoading: PropTypes.bool, // display loading placeholder
-  ...Text.propTypes,
-};
-
-export default UIText;
diff --git a/apolloschurchapp/src/ui/typography/headings.stories.js b/apolloschurchapp/src/ui/typography/headings.stories.js
deleted file mode 100644
index efbe852..0000000
--- a/apolloschurchapp/src/ui/typography/headings.stories.js
+++ /dev/null
@@ -1,31 +0,0 @@
-import React from 'react';
-import { View } from 'react-native';
-import { storiesOf } from '@storybook/react-native';
-
-import { withIsLoading } from 'apolloschurchapp/src/ui/isLoading';
-
-import { H1, H2, H3, H4, H5, H6 } from '.';
-
-const SetLoading = withIsLoading(View);
-
-storiesOf('typography', module)
-  .add('headings', () => (
-    <View>
-      <H1>Heading 1</H1>
-      <H2>Heading 2</H2>
-      <H3>Heading 3</H3>
-      <H4>Heading 4</H4>
-      <H5>Heading 5</H5>
-      <H6>Heading 6</H6>
-    </View>
-  ))
-  .add('placeholders', () => (
-    <SetLoading isLoading>
-      <H1>Heading 1</H1>
-      <H2>Heading 2</H2>
-      <H3>Heading 3</H3>
-      <H4>Heading 4</H4>
-      <H5>Heading 5</H5>
-      <H6>Heading 6</H6>
-    </SetLoading>
-  ));
diff --git a/apolloschurchapp/src/ui/typography/index.js b/apolloschurchapp/src/ui/typography/index.js
deleted file mode 100644
index fb53054..0000000
--- a/apolloschurchapp/src/ui/typography/index.js
+++ /dev/null
@@ -1,11 +0,0 @@
-export H1 from './H1';
-export H2 from './H2';
-export H3 from './H3';
-export H4 from './H4';
-export H5 from './H5';
-export H6 from './H6';
-export UIText from './UIText';
-export BodyText from './BodyText';
-export Paragraph from './Paragraph';
-export BlockQuote from './BlockQuote';
-export BulletListItem from './BulletListItem';
diff --git a/apolloschurchapp/src/user-settings/ChangeAvatar.js b/apolloschurchapp/src/user-settings/ChangeAvatar.js
new file mode 100644
index 0000000..ccadf1b
--- /dev/null
+++ b/apolloschurchapp/src/user-settings/ChangeAvatar.js
@@ -0,0 +1,76 @@
+import React, { PureComponent } from 'react';
+import { View } from 'react-native';
+import PropTypes from 'prop-types';
+import { get } from 'lodash';
+import { Query, ApolloConsumer } from 'react-apollo';
+
+import { PaddedView, Avatar, styled } from '@apollosproject/ui-kit';
+import GET_USER_PHOTO from './getUserPhoto';
+import uploadPhoto from './uploadPhoto';
+
+const GetPhotoData = ({ children }) => (
+  <Query query={GET_USER_PHOTO}>
+    {({ data: { currentUser = {} } = {} }) => {
+      const photo = get(currentUser, 'profile.photo');
+      return children({ photo });
+    }}
+  </Query>
+);
+
+GetPhotoData.propTypes = {
+  children: PropTypes.func.isRequired,
+};
+
+const Wrapper = styled({
+  justifyContent: 'center',
+  alignItems: 'center',
+})(View);
+
+export default class AvatarForm extends PureComponent {
+  state = {
+    isUploadingFile: false,
+  };
+
+  componentWillUnmount() {
+    this.setState({ isUploadingFile: false });
+  }
+
+  handleUploadPhoto = async ({ client }) => {
+    try {
+      await uploadPhoto({
+        client,
+        onUpload: () => this.setState({ isUploadingFile: true }),
+      });
+      await this.setState({ isUploadingFile: false });
+    } catch (e) {
+      console.warn(e);
+      this.setState({ isUploadingFile: false });
+    }
+  };
+
+  render() {
+    const { isUploadingFile } = this.state;
+
+    return (
+      <ApolloConsumer>
+        {(client) => (
+          <Wrapper>
+            <GetPhotoData>
+              {({ photo }) => (
+                <PaddedView horizontal={false}>
+                  <Avatar
+                    source={photo}
+                    size="large"
+                    buttonIcon="camera"
+                    onPressIcon={() => this.handleUploadPhoto({ client })}
+                    isLoading={isUploadingFile}
+                  />
+                </PaddedView>
+              )}
+            </GetPhotoData>
+          </Wrapper>
+        )}
+      </ApolloConsumer>
+    );
+  }
+}
diff --git a/apolloschurchapp/src/user-settings/ChangePassword.js b/apolloschurchapp/src/user-settings/ChangePassword.js
new file mode 100644
index 0000000..b8683fc
--- /dev/null
+++ b/apolloschurchapp/src/user-settings/ChangePassword.js
@@ -0,0 +1,145 @@
+import React, { PureComponent } from 'react';
+import PropTypes from 'prop-types';
+import {
+  Platform,
+  KeyboardAvoidingView,
+  StyleSheet,
+  StatusBar,
+} from 'react-native';
+import { Mutation } from 'react-apollo';
+import { SafeAreaView, Header } from 'react-navigation';
+import { Formik } from 'formik';
+import * as Yup from 'yup';
+
+import {
+  Button,
+  ButtonLink,
+  TextInput,
+  PaddedView,
+  FlexedView,
+  styled,
+} from '@apollosproject/ui-kit';
+
+import GET_AUTH_TOKEN from '../store/getAuthToken';
+import CHANGE_PASSWORD from './passwordChange';
+
+const Footer = styled({
+  flex: 1,
+  justifyContent: 'flex-end',
+})(SafeAreaView);
+
+class ChangePassword extends PureComponent {
+  static navigationOptions = ({ navigation }) => ({
+    title: 'Change Password',
+    headerLeft: null,
+    headerRight: (
+      <PaddedView vertical={false}>
+        <ButtonLink onPress={() => navigation.goBack()}>Cancel</ButtonLink>
+      </PaddedView>
+    ),
+  });
+
+  static propTypes = {
+    navigation: PropTypes.shape({
+      getParam: PropTypes.func,
+      navigate: PropTypes.func,
+      goBack: PropTypes.func,
+    }),
+  };
+
+  renderForm = (props) => (
+    <KeyboardAvoidingView
+      behavior={'padding'}
+      style={StyleSheet.absoluteFill}
+      keyboardVerticalOffset={
+        Header.HEIGHT +
+        (Platform.OS === 'android' ? StatusBar.currentHeight : 0)
+      }
+    >
+      <FlexedView>
+        <PaddedView>
+          <TextInput
+            label="New Password"
+            type="password"
+            value={props.values.password}
+            error={props.touched.password && props.errors.password}
+            onChangeText={(text) => props.setFieldValue('password', text)}
+          />
+          <TextInput
+            label="Confirm Password"
+            type="password"
+            value={props.values.confirmPassword}
+            error={
+              props.touched.confirmPassword && props.errors.confirmPassword
+            }
+            onChangeText={(text) =>
+              props.setFieldValue('confirmPassword', text)
+            }
+          />
+        </PaddedView>
+        <Footer>
+          <PaddedView>
+            <Button
+              disabled={props.isSubmitting}
+              onPress={props.handleSubmit}
+              title="Save"
+              loading={props.isSubmitting}
+            />
+          </PaddedView>
+        </Footer>
+      </FlexedView>
+    </KeyboardAvoidingView>
+  );
+
+  render() {
+    return (
+      <Mutation
+        mutation={CHANGE_PASSWORD}
+        update={async (cache, { data: { token } }) => {
+          await cache.writeQuery({
+            query: GET_AUTH_TOKEN,
+            data: { authToken: token },
+          });
+
+          await cache.writeData({
+            data: { authToken: token },
+          });
+        }}
+      >
+        {(updatePassword) => (
+          <Formik
+            validationSchema={Yup.object().shape({
+              password: Yup.string()
+                .min(6, 'Password must be at least 6 characters')
+                .required('Password is required'),
+              confirmPassword: Yup.string()
+                .min(6, 'Password must be at least 6 characters')
+                .oneOf([Yup.ref('password')], 'Passwords must match.')
+                .required('Password confirm is required'),
+            })}
+            onSubmit={async (variables, { setSubmitting, setFieldError }) => {
+              try {
+                await updatePassword({ variables });
+
+                await this.props.navigation.goBack();
+              } catch (e) {
+                const { graphQLErrors } = e;
+                if (graphQLErrors.length) {
+                  setFieldError(
+                    'confirmPassword',
+                    'Unknown error. Please try again later.'
+                  );
+                }
+              }
+              setSubmitting(false);
+            }}
+          >
+            {this.renderForm}
+          </Formik>
+        )}
+      </Mutation>
+    );
+  }
+}
+
+export default ChangePassword;
diff --git a/apolloschurchapp/src/user-settings/ChangePassword.tests.js b/apolloschurchapp/src/user-settings/ChangePassword.tests.js
new file mode 100644
index 0000000..85ff133
--- /dev/null
+++ b/apolloschurchapp/src/user-settings/ChangePassword.tests.js
@@ -0,0 +1,24 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+import wait from 'waait';
+
+import Providers from '../Providers';
+
+import ChangePassword from './ChangePassword';
+
+describe('Change Password component', () => {
+  it('renders a change password form', async () => {
+    const navigation = {
+      navigate: jest.fn(),
+      getParam: jest.fn(),
+      goBack: jest.fn(),
+    };
+    const tree = renderer.create(
+      <Providers>
+        <ChangePassword navigation={navigation} />
+      </Providers>
+    );
+    await wait(0); // wait for response from graphql
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/user-settings/Locations/Locations.tests.js b/apolloschurchapp/src/user-settings/Locations/Locations.tests.js
new file mode 100644
index 0000000..5505bf2
--- /dev/null
+++ b/apolloschurchapp/src/user-settings/Locations/Locations.tests.js
@@ -0,0 +1,133 @@
+import React from 'react';
+import { renderWithApolloData } from '../../utils/testUtils';
+
+import Providers from '../../Providers';
+import GET_CAMPUS_LOCATIONS from './getCampusLocations';
+import Location from './index';
+
+const campuses = [
+  {
+    __typename: 'Campus',
+    id: 'Campus:559b23fd0aa90e81b1c023e72e230fa1',
+    latitude: 34.59814,
+    longitude: -82.62045,
+    name: 'Anderson Campus',
+    street1: '2940 Concord Rd',
+    street2: '',
+    city: 'Anderson',
+    state: 'SC',
+    distanceFromLocation: 5,
+    postalCode: '29621-3619',
+    image: {
+      __typename: 'ImageMediaSource',
+      uri:
+        'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3Da47e8e69-9542-42de-9ed3-ff42fdc82417',
+    },
+  },
+  {
+    __typename: 'Campus',
+    id: 'Campus:965b6e6d7046a885bea4e300b5c0400d',
+    latitude: 32.95103,
+    longitude: -96.74738,
+    name: 'Dallas Campus',
+    street1: '102 N Weatherred Dr',
+    street2: '',
+    city: 'Richardson',
+    state: 'TX',
+    postalCode: '75080-5525',
+    distanceFromLocation: 50,
+    image: {
+      __typename: 'ImageMediaSource',
+      uri:
+        'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D5f9fd97a-fd6e-4ae5-ab5d-a9b95290d9b6',
+    },
+  },
+  {
+    __typename: 'Campus',
+    id: 'Campus:4f68015ba18662a7409d1219a4ce013e',
+    latitude: 39.10501,
+    longitude: -84.51138,
+    name: 'Cincinnati Campus',
+    street1: '120 E 8th St',
+    street2: '',
+    city: 'Cincinnati',
+    state: 'OH',
+    postalCode: '45202-2118',
+    distanceFromLocation: 500,
+    image: {
+      __typename: 'ImageMediaSource',
+      uri:
+        'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3Dbad9eb54-3e78-44a7-a028-3f2d6e71a36f',
+    },
+  },
+  {
+    __typename: 'Campus',
+    id: 'Campus:a0f64573eabf00a607bec911794d50fb',
+    latitude: 42.09203,
+    longitude: -88.13289,
+    name: 'Chicago Campus',
+    street1: '67 Algonquin Rd',
+    street2: '',
+    city: 'South Barrington',
+    state: 'IL',
+    postalCode: '60010-6143',
+    distanceFromLocation: 5000,
+    image: {
+      __typename: 'ImageMediaSource',
+      uri:
+        'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3Dede1fb83-968e-4bef-8d77-ad81c96e8a47',
+    },
+  },
+];
+
+describe('Display Native Map with Locations', () => {
+  const initialRegion = {
+    // roughly show the entire USA by default
+    latitude: 39.809734,
+    longitude: -98.555618,
+    latitudeDelta: 100,
+    longitudeDelta: 10,
+  };
+  const userLocation = {
+    latitude: 39.104797,
+    longitude: -84.511959,
+  };
+  it('Render a native map view', async () => {
+    const navigation = {
+      navigate: jest.fn(),
+      getParam: jest.fn(),
+      goBack: jest.fn(),
+    };
+
+    const mock = {
+      request: {
+        query: GET_CAMPUS_LOCATIONS,
+        variables: {
+          latitude: userLocation.latitude,
+          longitude: userLocation.longitude,
+        },
+      },
+      result: {
+        data: {
+          campuses,
+          currentUser: {
+            id: 'AuthenticatedUser:123',
+            __typename: 'AuthenticatedUser',
+            profile: {
+              id: 'Person:123',
+              __typename: 'Person',
+              campus: campuses[3],
+            },
+          },
+        },
+      },
+    };
+
+    const tree = await renderWithApolloData(
+      <Providers mocks={[mock]}>
+        <Location navigation={navigation} initialRegion={initialRegion} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/user-settings/Locations/Marker.js b/apolloschurchapp/src/user-settings/Locations/Marker.js
new file mode 100644
index 0000000..6f1fdfe
--- /dev/null
+++ b/apolloschurchapp/src/user-settings/Locations/Marker.js
@@ -0,0 +1,47 @@
+import React, { memo } from 'react';
+import { View, Animated } from 'react-native';
+import PropTypes from 'prop-types';
+import { Marker } from 'react-native-maps';
+import Color from 'color';
+
+import { styled } from '@apollosproject/ui-kit';
+
+const MarkerView = styled(({ theme }) => ({
+  width: theme.sizing.baseUnit * 0.5,
+  height: theme.sizing.baseUnit * 0.5,
+  borderRadius: theme.sizing.baseUnit * 0.25,
+  backgroundColor: Color(theme.colors.primary).fade(theme.alpha.medium),
+  zIndex: 2,
+}))(View);
+
+const MarkerRingView = styled(({ theme }) => ({
+  width: theme.sizing.baseUnit * 1.5,
+  height: theme.sizing.baseUnit * 1.5,
+  borderRadius: theme.sizing.baseUnit * 0.75,
+  backgroundColor: Color(theme.colors.primary).fade(theme.alpha.low),
+  borderWidth: 1,
+  borderColor: Color(theme.colors.primary).fade(theme.alpha.medium),
+  alignItems: 'center',
+  justifyContent: 'center',
+}))(View);
+
+const StyledMarker = memo(({ latitude, longitude, opacityStyle, onPress }) => (
+  <Marker onPress={onPress} coordinate={{ latitude, longitude }}>
+    <Animated.View style={opacityStyle}>
+      <MarkerRingView>
+        <MarkerView />
+      </MarkerRingView>
+    </Animated.View>
+  </Marker>
+));
+
+StyledMarker.displayName = 'StyledMarker';
+
+StyledMarker.propTypes = {
+  latitude: PropTypes.number.isRequired,
+  longitude: PropTypes.number.isRequired,
+  onPress: PropTypes.func.isRequired,
+  opacityStyle: PropTypes.shape({}),
+};
+
+export default StyledMarker;
diff --git a/apolloschurchapp/src/user-settings/Locations/campusChange.js b/apolloschurchapp/src/user-settings/Locations/campusChange.js
new file mode 100644
index 0000000..190481b
--- /dev/null
+++ b/apolloschurchapp/src/user-settings/Locations/campusChange.js
@@ -0,0 +1,14 @@
+import gql from 'graphql-tag';
+import ApollosConfig from '@apollosproject/config';
+
+export default gql`
+  mutation campusChange($campusId: String!) {
+    updateUserCampus(campusId: $campusId) {
+      id
+      campus {
+        ...CampusParts
+      }
+    }
+  }
+  ${ApollosConfig.FRAGMENTS.CAMPUS_PARTS_FRAGMENT}
+`;
diff --git a/apolloschurchapp/src/user-settings/Locations/getCampusLocations.js b/apolloschurchapp/src/user-settings/Locations/getCampusLocations.js
new file mode 100644
index 0000000..a0ce1b5
--- /dev/null
+++ b/apolloschurchapp/src/user-settings/Locations/getCampusLocations.js
@@ -0,0 +1,20 @@
+import gql from 'graphql-tag';
+import ApollosConfig from '@apollosproject/config';
+
+export default gql`
+  query getAllCampuses($latitude: Float!, $longitude: Float!) {
+    campuses(location: { latitude: $latitude, longitude: $longitude }) {
+      ...CampusParts
+    }
+    currentUser {
+      id
+      profile {
+        id
+        campus {
+          ...CampusParts
+        }
+      }
+    }
+  }
+  ${ApollosConfig.FRAGMENTS.CAMPUS_PARTS_FRAGMENT}
+`;
diff --git a/apolloschurchapp/src/user-settings/Locations/index.js b/apolloschurchapp/src/user-settings/Locations/index.js
new file mode 100644
index 0000000..e0dc679
--- /dev/null
+++ b/apolloschurchapp/src/user-settings/Locations/index.js
@@ -0,0 +1,117 @@
+import React, { PureComponent } from 'react';
+import PropTypes from 'prop-types';
+import { Query, Mutation } from 'react-apollo';
+import { Dimensions } from 'react-native';
+import Geolocation from 'react-native-geolocation-service';
+import MapView from '@apollosproject/ui-mapview';
+import { PaddedView, ButtonLink } from '@apollosproject/ui-kit';
+import { get } from 'lodash';
+
+import GET_CAMPUSES from './getCampusLocations';
+import CHANGE_CAMPUS from './campusChange';
+
+class Location extends PureComponent {
+  static propTypes = {
+    navigation: PropTypes.shape({
+      getParam: PropTypes.func,
+      navigate: PropTypes.func,
+      goBack: PropTypes.func,
+    }),
+    initialRegion: PropTypes.shape({
+      latitude: PropTypes.number,
+      longitude: PropTypes.number,
+      latitudeDelta: PropTypes.number,
+      longitudeDelta: PropTypes.number,
+    }),
+  };
+
+  static defaultProps = {
+    initialRegion: {
+      // roughly show the entire USA by default
+      latitude: 39.809734,
+      longitude: -98.555618,
+      latitudeDelta: 100,
+      longitudeDelta:
+        (100 * Dimensions.get('window').width) /
+        Dimensions.get('window').height,
+    },
+  };
+
+  static navigationOptions = ({ navigation }) => ({
+    title: 'Location',
+    headerLeft: null,
+    headerRight: (
+      <PaddedView vertical={false}>
+        <ButtonLink onPress={() => navigation.goBack()}>Back</ButtonLink>
+      </PaddedView>
+    ),
+  });
+
+  state = {
+    userLocation: {
+      latitude: 39.104797,
+      longitude: -84.511959,
+    },
+  };
+
+  async componentDidMount() {
+    Geolocation.getCurrentPosition(
+      (position) => {
+        this.setState({
+          userLocation: {
+            latitude: position.coords.latitude,
+            longitude: position.coords.longitude,
+          },
+        });
+      },
+      (e) => console.warn('Error getting location!', e),
+      { enableHighAccuracy: true, timeout: 15000, maximumAge: 10000 }
+    );
+  }
+
+  render() {
+    return (
+      <Query
+        query={GET_CAMPUSES}
+        variables={{
+          latitude: this.state.userLocation.latitude,
+          longitude: this.state.userLocation.longitude,
+        }}
+        fetchPolicy="cache-and-network"
+      >
+        {({ loading, error, data: { campuses, currentUser } = {} }) => (
+          <Mutation mutation={CHANGE_CAMPUS}>
+            {(handlePress) => (
+              <MapView
+                navigation={this.props.navigation}
+                isLoading={loading}
+                error={error}
+                campuses={campuses || []}
+                initialRegion={this.props.initialRegion}
+                userLocation={this.state.userLocation}
+                currentCampus={get(currentUser, 'profile.campus')}
+                onLocationSelect={async (campus) => {
+                  handlePress({
+                    variables: {
+                      campusId: campus.id,
+                    },
+                    optimisticResponse: {
+                      updateUserCampus: {
+                        __typename: 'Mutation',
+                        id: currentUser.id,
+                        campus,
+                      },
+                    },
+                  });
+                  this.props.navigation.goBack();
+                }}
+              />
+            )}
+          </Mutation>
+        )}
+      </Query>
+    );
+  }
+}
+
+export default Location;
diff --git a/apolloschurchapp/src/user-settings/PersonDetails.tests.js b/apolloschurchapp/src/user-settings/PersonDetails.tests.js
new file mode 100644
index 0000000..497d5a3
--- /dev/null
+++ b/apolloschurchapp/src/user-settings/PersonDetails.tests.js
@@ -0,0 +1,49 @@
+import React from 'react';
+
+import Providers from '../Providers';
+
+import GET_USER_PROFILE from '../tabs/connect/getUserProfile';
+import { renderWithApolloData } from '../utils/testUtils';
+import PersonalDetails from './PersonalDetails';
+
+describe('PersonalDetails component', () => {
+  it('renders PersonalDetails when logged in', async () => {
+    const mock = {
+      request: {
+        query: GET_USER_PROFILE,
+      },
+      result: {
+        data: {
+          currentUser: {
+            __typename: 'AuthenticatedUser',
+            id: 'AuthenticatedUser:123',
+            profile: {
+              __typename: 'Person',
+              id: 'Profile:123',
+              firstName: 'Isaac',
+              lastName: 'Hardy',
+              nickName: 'Ike',
+              email: 'isaac.hardy@newspring.cc',
+              birthDate: '2019-09-12T21:01:06.026Z',
+              gender: 'Male',
+              campus: null,
+              photo: null,
+            },
+          },
+        },
+      },
+    };
+    const navigation = {
+      navigate: jest.fn(),
+      getParam: jest.fn(),
+      goBack: jest.fn(),
+    };
+    const tree = await renderWithApolloData(
+      <Providers mocks={[mock]}>
+        <PersonalDetails navigation={navigation} />
+      </Providers>
+    );
+
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/user-settings/PersonalDetails.js b/apolloschurchapp/src/user-settings/PersonalDetails.js
new file mode 100644
index 0000000..9404206
--- /dev/null
+++ b/apolloschurchapp/src/user-settings/PersonalDetails.js
@@ -0,0 +1,174 @@
+import React, { PureComponent } from 'react';
+import PropTypes from 'prop-types';
+import {
+  KeyboardAvoidingView,
+  StyleSheet,
+  StatusBar,
+  Platform,
+} from 'react-native';
+import { SafeAreaView, Header } from 'react-navigation';
+import { Query, Mutation } from 'react-apollo';
+import { Formik } from 'formik';
+import * as Yup from 'yup';
+
+import {
+  TextInput,
+  PaddedView,
+  FlexedView,
+  Button,
+  ButtonLink,
+  styled,
+} from '@apollosproject/ui-kit';
+
+import GET_USER_PROFILE from '../tabs/connect/getUserProfile';
+import UPDATE_CURRENT_USER from './updateCurrentUser';
+
+const Footer = styled({
+  flex: 1,
+  justifyContent: 'flex-end',
+})(SafeAreaView);
+
+class PersonalDetails extends PureComponent {
+  static navigationOptions = ({ navigation }) => ({
+    title: 'Personal Details',
+    headerLeft: null,
+    headerRight: (
+      <PaddedView vertical={false}>
+        <ButtonLink onPress={() => navigation.goBack()}>Cancel</ButtonLink>
+      </PaddedView>
+    ),
+  });
+
+  static propTypes = {
+    navigation: PropTypes.shape({
+      getParam: PropTypes.func,
+      navigate: PropTypes.func,
+      goBack: PropTypes.func,
+    }),
+  };
+
+  renderForm = (props) => (
+    // have to add the offset to account for react-navigation header
+    <KeyboardAvoidingView
+      behavior={'padding'}
+      style={StyleSheet.absoluteFill}
+      keyboardVerticalOffset={
+        Header.HEIGHT +
+        (Platform.OS === 'android' ? StatusBar.currentHeight : 0)
+      }
+    >
+      <FlexedView>
+        <PaddedView>
+          <TextInput
+            label="First Name"
+            type="text"
+            value={props.values.firstName}
+            error={props.touched.firstName && props.errors.firstName}
+            onChangeText={(text) => props.setFieldValue('firstName', text)}
+          />
+          <TextInput
+            label="Last Name"
+            type="text"
+            value={props.values.lastName}
+            error={props.touched.lastName && props.errors.lastName}
+            onChangeText={(text) => props.setFieldValue('lastName', text)}
+          />
+          <TextInput
+            label="Email"
+            type="email"
+            value={props.values.email}
+            error={props.touched.email && props.errors.email}
+            onChangeText={(text) => props.setFieldValue('email', text)}
+          />
+        </PaddedView>
+        <Footer>
+          <PaddedView>
+            <Button
+              disabled={!props.isValid || props.isSubmitting}
+              onPress={props.handleSubmit}
+              title="Save"
+              loading={props.isSubmitting}
+            />
+          </PaddedView>
+        </Footer>
+      </FlexedView>
+    </KeyboardAvoidingView>
+  );
+
+  render() {
+    return (
+      <Query query={GET_USER_PROFILE} fetchPolicy="cache-and-network">
+        {({ data: { currentUser = { profile: {} } } = {} }) => {
+          const { firstName, lastName, email } = currentUser.profile;
+
+          return (
+            <Mutation
+              mutation={UPDATE_CURRENT_USER}
+              update={async (cache, { data: { updateProfileFields } }) => {
+                await cache.writeQuery({
+                  query: GET_USER_PROFILE,
+                  data: {
+                    currentUser: {
+                      ...currentUser,
+                      profile: {
+                        ...currentUser.profile,
+                        firstName: updateProfileFields.firstName,
+                        lastName: updateProfileFields.lastName,
+                        email: updateProfileFields.email,
+                      },
+                    },
+                  },
+                });
+              }}
+            >
+              {(updateDetails) => (
+                <Formik
+                  initialValues={{ firstName, lastName, email }}
+                  validationSchema={Yup.object().shape({
+                    firstName: Yup.string().required('First Name is required!'),
+                    lastName: Yup.string().required('Last Name is required!'),
+                    email: Yup.string()
+                      .email('Invalid email address')
+                      .required('Email is required!'),
+                  })}
+                  onSubmit={async (
+                    variables,
+                    { setSubmitting, setFieldError }
+                  ) => {
+                    try {
+                      await updateDetails({ variables });
+                      await this.props.navigation.goBack();
+                    } catch (e) {
+                      const { graphQLErrors } = e;
+                      if (
+                        graphQLErrors.length &&
+                        graphQLErrors.find(({ message }) =>
+                          message.includes('User already exists')
+                        )
+                      ) {
+                        setFieldError(
+                          'email',
+                          'There is already a user with this email'
+                        );
+                      } else {
+                        setFieldError(
+                          'email',
+                          'Unknown error. Please try again later.'
+                        );
+                      }
+                    }
+                    setSubmitting(false);
+                  }}
+                >
+                  {this.renderForm}
+                </Formik>
+              )}
+            </Mutation>
+          );
+        }}
+      </Query>
+    );
+  }
+}
+
+export default PersonalDetails;
diff --git a/apolloschurchapp/src/user-settings/UserSettings.tests.js b/apolloschurchapp/src/user-settings/UserSettings.tests.js
new file mode 100644
index 0000000..d57af4f
--- /dev/null
+++ b/apolloschurchapp/src/user-settings/UserSettings.tests.js
@@ -0,0 +1,29 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+import wait from 'waait';
+
+import { GET_LOGIN_STATE } from '@apollosproject/ui-auth';
+import Providers from '../Providers';
+
+import UserSettings from '.';
+
+describe('UserSettings component', () => {
+  it('renders UserSettings when logged in', async () => {
+    const mock = {
+      request: {
+        query: GET_LOGIN_STATE,
+      },
+      result: {
+        data: { isLoggedIn: true },
+      },
+    };
+    const navigation = { navigate: jest.fn(), getParam: jest.fn() };
+    const tree = renderer.create(
+      <Providers mocks={[mock]}>
+        <UserSettings navigation={navigation} />
+      </Providers>
+    );
+    await wait(0); // wait for response from graphql
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/user-settings/getUserPhoto.js b/apolloschurchapp/src/user-settings/getUserPhoto.js
new file mode 100644
index 0000000..6235575
--- /dev/null
+++ b/apolloschurchapp/src/user-settings/getUserPhoto.js
@@ -0,0 +1,15 @@
+import gql from 'graphql-tag';
+
+export default gql`
+  query CurrentUserPhoto {
+    currentUser {
+      id
+      profile {
+        id
+        photo {
+          uri
+        }
+      }
+    }
+  }
+`;
diff --git a/apolloschurchapp/src/user-settings/index.js b/apolloschurchapp/src/user-settings/index.js
new file mode 100644
index 0000000..1857c48
--- /dev/null
+++ b/apolloschurchapp/src/user-settings/index.js
@@ -0,0 +1,161 @@
+import React, { PureComponent } from 'react';
+import { ScrollView } from 'react-native';
+import PropTypes from 'prop-types';
+import { Query, Mutation } from 'react-apollo';
+import { getVersion, getBuildNumber } from 'react-native-device-info';
+
+import {
+  BackgroundView,
+  TableView,
+  Cell,
+  CellIcon,
+  CellText,
+  Divider,
+  Touchable,
+  ActivityIndicator,
+} from '@apollosproject/ui-kit';
+
+import { GET_LOGIN_STATE, LOGOUT } from '@apollosproject/ui-auth';
+import { WebBrowserConsumer } from '../ui/WebBrowser';
+import NavigationService from '../NavigationService';
+
+import ChangeAvatar from './ChangeAvatar';
+
+class UserSettings extends PureComponent {
+  static navigationOptions = () => ({
+    title: 'Settings',
+  });
+
+  static propTypes = {
+    navigation: PropTypes.shape({
+      getParam: PropTypes.func,
+      navigate: PropTypes.func,
+    }),
+  };
+
+  render() {
+    return (
+      <Query query={GET_LOGIN_STATE} fetchPolicy="cache-and-network">
+        {({ data: { isLoggedIn = false, loading } }) => {
+          if (loading) return <ActivityIndicator />;
+          if (!isLoggedIn) return null;
+          return (
+            <BackgroundView>
+              <ScrollView>
+                <ChangeAvatar />
+
+                <WebBrowserConsumer>
+                  {(openUrl) => (
+                    <>
+                      <TableView>
+                        <Touchable
+                          onPress={async () => {
+                            await this.props.navigation.navigate(
+                              'PersonalDetails'
+                            );
+                          }}
+                        >
+                          <Cell>
+                            <CellText>Personal Details</CellText>
+                            <CellIcon name="arrow-next" />
+                          </Cell>
+                        </Touchable>
+                        <Divider />
+                        <Touchable
+                          onPress={async () => {
+                            await this.props.navigation.navigate('Location');
+                          }}
+                        >
+                          <Cell>
+                            <CellText>Location</CellText>
+                            <CellIcon name="arrow-next" />
+                          </Cell>
+                        </Touchable>
+                        <Divider />
+                        <Touchable
+                          onPress={async () => {
+                            await this.props.navigation.navigate(
+                              'ChangePassword'
+                            );
+                          }}
+                        >
+                          <Cell>
+                            <CellText>Change Password</CellText>
+                            <CellIcon name="arrow-next" />
+                          </Cell>
+                        </Touchable>
+                      </TableView>
+                      <TableView>
+                        <Touchable
+                          onPress={() =>
+                            openUrl('https://apollosrock.newspring.cc/')
+                          }
+                        >
+                          <Cell>
+                            <CellText>Give Feedback</CellText>
+                            <CellIcon name="arrow-next" />
+                          </Cell>
+                        </Touchable>
+                      </TableView>
+                      <TableView>
+                        <Touchable
+                          onPress={() =>
+                            openUrl('https://apollosrock.newspring.cc/')
+                          }
+                        >
+                          <Cell>
+                            <CellText>Privacy Policy</CellText>
+                            <CellIcon name="arrow-next" />
+                          </Cell>
+                        </Touchable>
+                        <Divider />
+                        <Touchable
+                          onPress={() =>
+                            openUrl('https://apollosrock.newspring.cc/')
+                          }
+                        >
+                          <Cell>
+                            <CellText>Terms of Use</CellText>
+                            <CellIcon name="arrow-next" />
+                          </Cell>
+                        </Touchable>
+                      </TableView>
+                      <TableView>
+                        <Mutation mutation={LOGOUT}>
+                          {(handleLogout) => (
+                            <Touchable
+                              onPress={async () => {
+                                await handleLogout();
+                                // This resets the navigation stack, and the navigates to the first auth screen.
+                                // This ensures that user isn't navigated to a subscreen of Auth, like the pin entry screen.
+                                await NavigationService.resetToAuth();
+                              }}
+                            >
+                              <Cell>
+                                <CellText>Logout</CellText>
+                                <CellIcon name="arrow-next" />
+                              </Cell>
+                            </Touchable>
+                          )}
+                        </Mutation>
+                      </TableView>
+                      <TableView>
+                        <Cell>
+                          <CellText>
+                            {`App Version: ${getVersion()}.${getBuildNumber()}`}
+                          </CellText>
+                        </Cell>
+                      </TableView>
+                    </>
+                  )}
+                </WebBrowserConsumer>
+              </ScrollView>
+            </BackgroundView>
+          );
+        }}
+      </Query>
+    );
+  }
+}
+
+export default UserSettings;
diff --git a/apolloschurchapp/src/user-settings/passwordChange.js b/apolloschurchapp/src/user-settings/passwordChange.js
new file mode 100644
index 0000000..2bd714a
--- /dev/null
+++ b/apolloschurchapp/src/user-settings/passwordChange.js
@@ -0,0 +1,9 @@
+import gql from 'graphql-tag';
+
+export default gql`
+  mutation changePassword($password: String!) {
+    changePassword(password: $password) {
+      token
+    }
+  }
+`;
diff --git a/apolloschurchapp/src/user-settings/updateCurrentUser.js b/apolloschurchapp/src/user-settings/updateCurrentUser.js
new file mode 100644
index 0000000..5efd459
--- /dev/null
+++ b/apolloschurchapp/src/user-settings/updateCurrentUser.js
@@ -0,0 +1,22 @@
+import gql from 'graphql-tag';
+
+export default gql`
+  mutation updateDetails(
+    $firstName: String!
+    $lastName: String!
+    $email: String!
+  ) {
+    updateProfileFields(
+      input: [
+        { field: FirstName, value: $firstName }
+        { field: LastName, value: $lastName }
+        { field: Email, value: $email }
+      ]
+    ) {
+      firstName
+      lastName
+      email
+      id
+    }
+  }
+`;
diff --git a/apolloschurchapp/src/user-settings/uploadPhoto.js b/apolloschurchapp/src/user-settings/uploadPhoto.js
new file mode 100644
index 0000000..b5949e8
--- /dev/null
+++ b/apolloschurchapp/src/user-settings/uploadPhoto.js
@@ -0,0 +1,102 @@
+import { Platform } from 'react-native';
+
+import { ReactNativeFile } from 'apollo-upload-client';
+import gql from 'graphql-tag';
+import ImagePicker from 'react-native-image-picker';
+import { check, PERMISSIONS, request, RESULTS } from 'react-native-permissions';
+
+import GET_USER_PHOTO from './getUserPhoto';
+
+const options = {
+  title: 'Select Profile Image',
+  quality: 0,
+  storageOptions: {
+    skipBackup: true,
+    path: 'images',
+    waitUntilSaved: true,
+    cameraRoll: true,
+  },
+};
+
+async function handleIOSPermissions() {
+  let cameraPermissionStatus = await check(PERMISSIONS.IOS.PHOTO_LIBRARY);
+  let hasPermission = cameraPermissionStatus === RESULTS.GRANTED;
+  if (!hasPermission) {
+    cameraPermissionStatus = await request(PERMISSIONS.IOS.PHOTO_LIBRARY);
+    hasPermission = cameraPermissionStatus === RESULTS.GRANTED;
+    if (!hasPermission) {
+      return false;
+    }
+  }
+  return true;
+}
+
+async function showImagePicker() {
+  if (Platform.OS === 'ios' && !(await handleIOSPermissions())) {
+    return null;
+  }
+  return new Promise((resolve, reject) => {
+    ImagePicker.showImagePicker(options, (response) => {
+      if (response.didCancel) {
+        reject(response.didCancel);
+      } else if (response.error) {
+        reject(response.error);
+      } else {
+        resolve(response);
+      }
+    });
+  });
+}
+
+export default async ({ client, onUpload = () => ({}) }) => {
+  try {
+    const image = await showImagePicker();
+    const file = new ReactNativeFile({
+      uri: image.uri,
+      name: image.fileName,
+      type: 'image/jpeg',
+    });
+    onUpload();
+    return client.mutate({
+      mutation: gql`
+        mutation uploadProfileImage($file: Upload!, $size: Int!) {
+          uploadProfileImage(file: $file, size: $size) {
+            id
+            firstName
+            lastName
+            photo {
+              uri
+            }
+          }
+        }
+      `,
+      variables: { file, size: image.fileSize },
+      update: (
+        cache,
+        {
+          data: {
+            uploadProfileImage: { photo },
+          },
+        }
+      ) => {
+        const data = cache.readQuery({ query: GET_USER_PHOTO });
+
+        cache.writeQuery({
+          query: GET_USER_PHOTO,
+          data: {
+            currentUser: {
+              ...data.currentUser,
+              profile: {
+                ...data.currentUser.profile,
+                photo,
+              },
+            },
+          },
+        });
+      },
+    });
+  } catch (e) {
+    console.warn(e);
+    return null;
+  }
+};
diff --git a/apolloschurchapp/src/user-web-browser/Provider.js b/apolloschurchapp/src/user-web-browser/Provider.js
new file mode 100644
index 0000000..bc1ce7f
--- /dev/null
+++ b/apolloschurchapp/src/user-web-browser/Provider.js
@@ -0,0 +1,12 @@
+import { createContext } from 'react';
+import NavigationService from '../NavigationService';
+
+// Can can either call the OpenUserWebView function directly, or call it using
+// the Consumer. Your choice.
+export const OpenUserWebView = ({ url }) =>
+  NavigationService.navigate('UserWebBrowser', { url });
+
+const { Provider, Consumer } = createContext(OpenUserWebView);
+
+export { Provider as UserWebBrowserProvider };
+export { Consumer as UserWebBrowserConsumer };
diff --git a/apolloschurchapp/src/user-web-browser/__tests__/BrowserWithUserCookie.tests.js b/apolloschurchapp/src/user-web-browser/__tests__/BrowserWithUserCookie.tests.js
new file mode 100644
index 0000000..5c576db
--- /dev/null
+++ b/apolloschurchapp/src/user-web-browser/__tests__/BrowserWithUserCookie.tests.js
@@ -0,0 +1,52 @@
+import React from 'react';
+import { renderWithApolloData } from '../../utils/testUtils';
+import Providers from '../../Providers';
+import BrowserWithUserCookie, { WITH_USER_COOKIE } from '../index';
+import { OpenUserWebView } from '../Provider';
+import NavigationService from '../../NavigationService';
+
+const mocks = [
+  {
+    request: { query: WITH_USER_COOKIE },
+    result: {
+      data: {
+        __typename: 'AuthenticatedUser',
+        currentUser: {
+          __typename: 'Person',
+          id: 'Person:123',
+          rockToken: 'ABC',
+        },
+      },
+    },
+  },
+];
+const navigation = { navigate: jest.fn(), getParam: jest.fn() };
+
+describe('the BrowserWithUserCookie component', () => {
+  it('renders with a user', async () => {
+    const tree = await renderWithApolloData(
+      <Providers mocks={mocks}>
+        <BrowserWithUserCookie navigation={navigation} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('renders with modal false', async () => {
+    const tree = await renderWithApolloData(
+      <Providers mocks={mocks}>
+        <BrowserWithUserCookie modal={false} navigation={navigation} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
+describe('the OpenUserWebView', () => {
+  jest.mock('NavigationService');
+  NavigationService.navigate = jest.fn();
+  it('navigtes', () => {
+    OpenUserWebView({ url: 'fake.com' });
+    expect(NavigationService.navigate).toBeCalledWith('UserWebBrowser', {
+      url: 'fake.com',
+    });
+  });
+});
diff --git a/apolloschurchapp/src/user-web-browser/index.js b/apolloschurchapp/src/user-web-browser/index.js
new file mode 100644
index 0000000..5a41635
--- /dev/null
+++ b/apolloschurchapp/src/user-web-browser/index.js
@@ -0,0 +1,66 @@
+// Provider API for WebBrowser that injects theme values and defaults to the web browser:
+// import { Platform } from 'react-native';
+import React from 'react';
+import gql from 'graphql-tag';
+import { Query } from 'react-apollo';
+import { ModalView } from '@apollosproject/ui-kit';
+import { WebView } from 'react-native-webview';
+import PropTypes from 'prop-types';
+import { get } from 'lodash';
+
+const Browser = ({ url, cookie, modal, navigation }) => {
+  if (modal) {
+    return (
+      <ModalView navigation={navigation}>
+        <WebView source={{ uri: url, headers: { Cookie: cookie } }} />
+      </ModalView>
+    );
+  }
+  return <WebView source={{ uri: url, headers: { Cookie: cookie } }} />;
+};
+
+Browser.propTypes = {
+  url: PropTypes.string.isRequired,
+  cookie: PropTypes.string,
+  modal: PropTypes.bool.isRequired,
+};
+
+export const WITH_USER_COOKIE = gql`
+  query currentUserCookie {
+    currentUser {
+      id
+      rockToken
+    }
+  }
+`;
+
+const BrowserWithUserCookie = ({ url, navigation, modal = true }) => {
+  // get the url from the navigation param or default to the url prop;
+  const uri = navigation.getParam('url', url);
+  return (
+    <Query query={WITH_USER_COOKIE}>
+      {({ data, loading }) => {
+        if (loading) {
+          return null;
+        }
+        const cookie = get(data, 'currentUser.rockToken', '');
+        return (
+          <Browser
+            cookie={cookie}
+            url={uri}
+            modal={modal}
+            navigation={navigation}
+          />
+        );
+      }}
+    </Query>
+  );
+};
+
+BrowserWithUserCookie.propTypes = {
+  url: PropTypes.string,
+  modal: PropTypes.bool,
+};
+
+export default BrowserWithUserCookie;
+export { UserWebBrowserProvider, UserWebBrowserConsumer } from './Provider';
diff --git a/apolloschurchapp/src/utils/__tests__/utils.tests.js b/apolloschurchapp/src/utils/__tests__/utils.tests.js
new file mode 100644
index 0000000..24fe48a
--- /dev/null
+++ b/apolloschurchapp/src/utils/__tests__/utils.tests.js
@@ -0,0 +1,68 @@
+import React from 'react';
+import { Text } from 'react-native';
+import fetchMoreResolver from '../fetchMoreResolver';
+import { renderWithApolloData } from '../testUtils';
+
+describe('the fetchMoreResolver function', () => {
+  const args = {
+    collectionName: 'userFeed',
+    variables: { first: 10, after: null },
+    fetchMore: jest.fn(),
+    data: {
+      userFeed: {
+        edges: [
+          {
+            node: { id: 'foo' },
+          },
+          {
+            node: { id: 'bar' },
+          },
+        ],
+        pageInfo: { endCursor: 'abc123' },
+      },
+    },
+  };
+  test('no endCursor', () => {
+    expect(
+      fetchMoreResolver({
+        ...args,
+        data: { userFeed: { edges: [], pageInfo: {} } },
+      })()
+    ).toBeUndefined();
+  });
+  test('combines data', () => {
+    fetchMoreResolver({ ...args })();
+    const previousResult = args.data;
+    const fetchMoreResult = {
+      userFeed: {
+        edges: [{ node: { id: 'baz' } }],
+        pageInfo: { endCursor: 'def456' },
+      },
+    };
+    expect(
+      args.fetchMore.mock.calls[0][0].updateQuery(previousResult, {
+        fetchMoreResult,
+      })
+    ).toEqual({
+      userFeed: {
+        edges: [
+          {
+            node: { id: 'foo' },
+          },
+          {
+            node: { id: 'bar' },
+          },
+          {
+            node: { id: 'baz' },
+          },
+        ],
+        pageInfo: { endCursor: 'def456' },
+      },
+    });
+  });
+});
+
+test('renderWithApolloData renders the component', async () => {
+  const tree = await renderWithApolloData(<Text>hello, world!</Text>);
+  expect(tree).toMatchSnapshot();
+});
diff --git a/apolloschurchapp/src/utils/content/__tests__/share.tests.js b/apolloschurchapp/src/utils/content/__tests__/share.tests.js
new file mode 100644
index 0000000..972edaa
--- /dev/null
+++ b/apolloschurchapp/src/utils/content/__tests__/share.tests.js
@@ -0,0 +1,38 @@
+import { Platform, Share } from 'react-native';
+import share from '../share';
+
+jest.mock('Platform');
+jest.mock('Share');
+
+describe('the share function', () => {
+  beforeAll(() => {
+    Share.share = jest.fn();
+  });
+  test('default arguments', () => {
+    Platform.OS = 'ios';
+    share({ title: 'title', url: 'http://url.com' });
+    expect(Share.share).toBeCalledWith({
+      title: 'title',
+      message: undefined,
+      url: 'http://url.com',
+    });
+  });
+  test('use message if provided', () => {
+    Platform.OS = 'ios';
+    share({ title: 'title', message: 'some message', url: 'http://url.com' });
+    expect(Share.share).toBeCalledWith({
+      title: 'title',
+      message: 'some message',
+      url: 'http://url.com',
+    });
+  });
+  test('android arguments', () => {
+    Platform.OS = 'android';
+    share({ title: 'title', url: 'http://url.com' });
+    expect(Share.share).toBeCalledWith({
+      title: 'title',
+      message: 'http://url.com',
+      url: 'http://url.com',
+    });
+  });
+});
diff --git a/apolloschurchapp/src/utils/content/share.js b/apolloschurchapp/src/utils/content/share.js
index 2d94889..6d4326f 100644
--- a/apolloschurchapp/src/utils/content/share.js
+++ b/apolloschurchapp/src/utils/content/share.js
@@ -1,22 +1,14 @@
-import { Share } from 'react-native';
-// import { get } from 'lodash';
-// import { track, events } from '@utils/analytics';
-// import getSiteLink from './getSiteLink';
+import { Platform, Share } from 'react-native';
 
-const share = ({ title, message, url }) => {
+const share = ({ title, url, message }) => {
   Share.share({
     title,
-    message,
+    message:
+      Platform.OS === 'android'
+        ? [message, url].filter((s) => !!s).join('\n')
+        : message,
     url,
   });
-
-  // track(events.Shared, {
-  //   channel: get(content, 'channelName'),
-  //   isLiked: get(content, 'content.isLiked'),
-  //   contentId: get(content, 'id'),
-  //   meta: get(content, 'meta'),
-  //   title: content.title || content.name,
-  // });
 };
 
 export default share;
diff --git a/apolloschurchapp/src/utils/fetchMoreResolver.js b/apolloschurchapp/src/utils/fetchMoreResolver.js
new file mode 100644
index 0000000..b93cb2f
--- /dev/null
+++ b/apolloschurchapp/src/utils/fetchMoreResolver.js
@@ -0,0 +1,42 @@
+import get from 'lodash/get';
+import set from 'lodash/fp/set';
+
+export default function fetchMoreResolver({
+  collectionName,
+  variables,
+  fetchMore,
+  data,
+}) {
+  return () => {
+    const pageInfoPath = `${collectionName}.pageInfo`;
+    const edgePath = `${collectionName}.edges`;
+
+    const after = get(data, `${pageInfoPath}.endCursor`);
+    if (!after) return;
+
+    fetchMore({
+      variables: { ...variables, after },
+      updateQuery: (previousResult, { fetchMoreResult }) => {
+        // combine previous data and fetchMore data
+        const newDataWithPageInfo = set(
+          pageInfoPath,
+          {
+            ...get(previousResult, pageInfoPath, {}),
+            ...get(fetchMoreResult, pageInfoPath, {}),
+          },
+          previousResult
+        );
+        const newDataWithAdditionalItems = set(
+          edgePath,
+          [
+            ...get(previousResult, edgePath, []),
+            ...get(fetchMoreResult, edgePath, []),
+          ],
+          newDataWithPageInfo
+        );
+
+        return newDataWithAdditionalItems;
+      },
+    });
+  };
+}
diff --git a/apolloschurchapp/src/utils/testUtils.js b/apolloschurchapp/src/utils/testUtils.js
new file mode 100644
index 0000000..38d20f7
--- /dev/null
+++ b/apolloschurchapp/src/utils/testUtils.js
@@ -0,0 +1,10 @@
+/* eslint-disable import/prefer-default-export */
+import renderer from 'react-test-renderer';
+import wait from 'waait';
+
+export const renderWithApolloData = async (component) => {
+  const tree = renderer.create(component);
+  await wait(1);
+  tree.update(component);
+  return tree;
+};
diff --git a/apolloschurchapp/storybook/Welcome/Intro.js b/apolloschurchapp/storybook/Welcome/Intro.js
new file mode 100644
index 0000000..2e8b8d7
--- /dev/null
+++ b/apolloschurchapp/storybook/Welcome/Intro.js
@@ -0,0 +1,43 @@
+import React from 'react';
+import { Paragraph, BodyText } from '@apollosproject/ui-kit';
+
+import { Slide, SlideContent } from '@apollosproject/ui-onboarding';
+
+const Intro = () => (
+  <Slide>
+    <SlideContent title={`Welcome to ${'\n'}Apollos Storybook!`} icon>
+      <Paragraph>
+        <BodyText>
+          Storybook is the component workshop for the Apollos app platform.
+        </BodyText>
+      </Paragraph>
+      <Paragraph>
+        <BodyText>
+          A story is a single state of one or more UI components. You can have
+          as many stories as you want.
+        </BodyText>
+      </Paragraph>
+      <Paragraph>
+        <BodyText>
+          We use Storybook to help document UI and to serve as visual test cases
+          for different states.
+        </BodyText>
+      </Paragraph>
+      <Paragraph>
+        <BodyText>
+          Open the navigator using the navigation bar at the bottom of the
+          screen to navigate the available stories.
+        </BodyText>
+      </Paragraph>
+      <Paragraph>
+        <BodyText>
+          The stories defined inside of your app will be listed first, with
+          Apollos UI stories below them. If you setup a theme, all of the
+          stories will reflect your theme.
+        </BodyText>
+      </Paragraph>
+    </SlideContent>
+  </Slide>
+);
+
+export default Intro;
diff --git a/apolloschurchapp/storybook/Welcome/Welcome.stories.js b/apolloschurchapp/storybook/Welcome/Welcome.stories.js
deleted file mode 100644
index f1c9a65..0000000
--- a/apolloschurchapp/storybook/Welcome/Welcome.stories.js
+++ /dev/null
@@ -1,9 +0,0 @@
-import React from 'react';
-import { storiesOf } from '@storybook/react-native';
-import { linkTo } from '@storybook/addon-links';
-
-import Welcome from '.';
-
-storiesOf('Welcome', module).add('to Storybook', () => (
-  <Welcome showApp={linkTo('Button')} />
-));
diff --git a/apolloschurchapp/storybook/Welcome/index.js b/apolloschurchapp/storybook/Welcome/index.js
index 78f7086..6c1e852 100644
--- a/apolloschurchapp/storybook/Welcome/index.js
+++ b/apolloschurchapp/storybook/Welcome/index.js
@@ -1,57 +1,9 @@
 import React from 'react';
-import PropTypes from 'prop-types';
-import { View, Text } from 'react-native';
+import { storiesOf } from '@apollosproject/ui-storybook';
 
-export default class Welcome extends React.Component {
-  styles = {
-    wrapper: {
-      flex: 1,
-      padding: 24,
-      justifyContent: 'center',
-    },
-    header: {
-      fontSize: 18,
-      marginBottom: 18,
-    },
-    content: {
-      fontSize: 12,
-      marginBottom: 10,
-      lineHeight: 18,
-    },
-  };
+import App from '../../src';
+import Intro from './Intro';
 
-  showApp(event) {
-    event.preventDefault();
-    if (this.props.showApp) this.props.showApp();
-  }
-
-  render() {
-    return (
-      <View style={this.styles.wrapper}>
-        <Text style={this.styles.header}>
-          Welcome to React Native Storybook
-        </Text>
-        <Text style={this.styles.content}>
-          This is a UI Component development environment for your React Native
-          app. Here you can display and interact with your UI components as
-          stories. A story is a single state of one or more UI components. You
-          can have as many stories as you want. In other words a story is like a
-          visual test case.
-        </Text>
-        <Text style={this.styles.content}>
-          We have added some stories inside the &quot;storybook/stories&quot;
-          directory for examples. Try editing the
-          &quot;storybook/stories/Welcome.js&quot; file to edit this message.
-        </Text>
-      </View>
-    );
-  }
-}
-
-Welcome.defaultProps = {
-  showApp: null,
-};
-
-Welcome.propTypes = {
-  showApp: PropTypes.func,
-};
+storiesOf('Storybook', module)
+  .add('Welcome', () => <Intro />)
+  .add('App', () => <App />);
diff --git a/apolloschurchapp/storybook/addons.js b/apolloschurchapp/storybook/addons.js
deleted file mode 100644
index 6aed412..0000000
--- a/apolloschurchapp/storybook/addons.js
+++ /dev/null
@@ -1,2 +0,0 @@
-import '@storybook/addon-actions/register';
-import '@storybook/addon-links/register';
diff --git a/apolloschurchapp/storybook/index.android.js b/apolloschurchapp/storybook/index.android.js
deleted file mode 100644
index f0513c5..0000000
--- a/apolloschurchapp/storybook/index.android.js
+++ /dev/null
@@ -1,3 +0,0 @@
-import StorybookUI from './storybook';
-
-export default StorybookUI;
diff --git a/apolloschurchapp/storybook/index.ios.js b/apolloschurchapp/storybook/index.ios.js
deleted file mode 100644
index f0513c5..0000000
--- a/apolloschurchapp/storybook/index.ios.js
+++ /dev/null
@@ -1,3 +0,0 @@
-import StorybookUI from './storybook';
-
-export default StorybookUI;
diff --git a/apolloschurchapp/storybook/index.js b/apolloschurchapp/storybook/index.js
index f0513c5..bcb07cf 100644
--- a/apolloschurchapp/storybook/index.js
+++ b/apolloschurchapp/storybook/index.js
@@ -1,3 +1,21 @@
-import StorybookUI from './storybook';
+import StorybookUI, {
+  loadApollosStories,
+  addApollosProviderDecorator,
+  configure,
+} from '@apollosproject/ui-storybook';
+import SplashScreen from 'react-native-splash-screen';
+import Providers from '../src/Providers';
+
+import { loadStories } from './storyLoader';
+
+addApollosProviderDecorator(Providers);
+
+configure(() => {
+  require('./Welcome');
+  loadStories();
+  loadApollosStories();
+
+  SplashScreen.hide();
+}, module);
 
 export default StorybookUI;
diff --git a/apolloschurchapp/storybook/storybook.js b/apolloschurchapp/storybook/storybook.js
deleted file mode 100644
index 19be073..0000000
--- a/apolloschurchapp/storybook/storybook.js
+++ /dev/null
@@ -1,35 +0,0 @@
-import React, { Component } from 'react';
-import { AppRegistry } from 'react-native';
-import {
-  getStorybookUI,
-  configure,
-  addDecorator,
-} from '@storybook/react-native';
-
-import Providers from 'apolloschurchapp/src/Providers';
-
-// storyLoader.js is generated on storybook start. next line disabled for CI test.
-import { loadStories } from './storyLoader'; // eslint-disable-line
-
-addDecorator((renderStorybook) => <Providers>{renderStorybook()}</Providers>);
-
-// import stories
-configure(() => {
-  loadStories();
-}, module);
-
-// This assumes that storybook is running on the same host as your RN packager,
-// to set manually use, e.g. host: 'localhost' option
-const StorybookUIRoot = getStorybookUI({ port: 7007, onDeviceUI: true });
-
-// react-native hot module loader must take in a Class - https://github.com/facebook/react-native/issues/10991
-// https://github.com/storybooks/storybook/issues/2081
-// eslint-disable-next-line react/prefer-stateless-function
-class StorybookUIHMRRoot extends Component {
-  render() {
-    return <StorybookUIRoot />;
-  }
-}
-
-AppRegistry.registerComponent('apolloschurchapp', () => StorybookUIHMRRoot);
-export default StorybookUIHMRRoot;
