diff --git a/apolloschurchapp/.babelrc b/apolloschurchapp/.babelrc
deleted file mode 100644
index 25c8292..0000000
--- a/apolloschurchapp/.babelrc
+++ /dev/null
@@ -1,9 +0,0 @@
-{
-  "presets": ["module:metro-react-native-babel-preset", "module:react-native-dotenv"],
-  "plugins": [
-    ["@babel/plugin-proposal-decorators", {
-      "legacy": true
-    }],
-    ["@babel/plugin-proposal-export-default-from"]
-  ]
-}
\ No newline at end of file
diff --git a/apolloschurchapp/.env.dev.storybook b/apolloschurchapp/.env.dev.storybook
new file mode 100644
index 0000000..3ef3926
--- /dev/null
+++ b/apolloschurchapp/.env.dev.storybook
@@ -0,0 +1,2 @@
+# This file inherits values from .env
+STORYBOOK=true
\ No newline at end of file
diff --git a/apolloschurchapp/.env.production b/apolloschurchapp/.env.production
index 4f37d9c..60ab693 100644
--- a/apolloschurchapp/.env.production
+++ b/apolloschurchapp/.env.production
@@ -1,3 +1,5 @@
-APP_DATA_URL=https://apollos-church-api.herokuapp.com/
+APP_DATA_URL=https://apollos-church-api-herokuapp-com.global.ssl.fastly.net/
 ONE_SIGNAL_KEY=$ONE_SIGNAL_KEY
-ANDROID_URL=doesnotmatter
\ No newline at end of file
+GOOGLE_MAPS_API_KEY=$GOOGLE_MAPS_API_KEY
+STORYBOOK=$STORYBOOK
+ANDROID_URL=doesnotmatter
diff --git a/apolloschurchapp/.flowconfig b/apolloschurchapp/.flowconfig
index 1043c82..9bded78 100644
--- a/apolloschurchapp/.flowconfig
+++ b/apolloschurchapp/.flowconfig
@@ -67,4 +67,4 @@ suppress_comment=\\(.\\|\n\\)*\\$FlowFixedInNextDeploy
 suppress_comment=\\(.\\|\n\\)*\\$FlowExpectedError
 
 [version]
-^0.78.0
+^0.86.0
diff --git a/apolloschurchapp/android/app/BUCK b/apolloschurchapp/android/app/BUCK
index 5392fca..de2c2e2 100644
--- a/apolloschurchapp/android/app/BUCK
+++ b/apolloschurchapp/android/app/BUCK
@@ -8,23 +8,13 @@
 # - `buck install -r android/app` - compile, install and run application
 #
 
+load(":build_defs.bzl", "create_aar_targets", "create_jar_targets")
+
 lib_deps = []
 
-for jarfile in glob(['libs/*.jar']):
-  name = 'jars__' + jarfile[jarfile.rindex('/') + 1: jarfile.rindex('.jar')]
-  lib_deps.append(':' + name)
-  prebuilt_jar(
-    name = name,
-    binary_jar = jarfile,
-  )
+create_aar_targets(glob(["libs/*.aar"]))
 
-for aarfile in glob(['libs/*.aar']):
-  name = 'aars__' + aarfile[aarfile.rindex('/') + 1: aarfile.rindex('.aar')]
-  lib_deps.append(':' + name)
-  android_prebuilt_aar(
-    name = name,
-    aar = aarfile,
-  )
+create_jar_targets(glob(["libs/*.jar"]))
 
 android_library(
     name = "all-libs",
diff --git a/apolloschurchapp/android/app/build.gradle b/apolloschurchapp/android/app/build.gradle
index 6be0c59..3154a54 100644
--- a/apolloschurchapp/android/app/build.gradle
+++ b/apolloschurchapp/android/app/build.gradle
@@ -10,6 +10,12 @@ buildscript {
 apply plugin: 'com.onesignal.androidsdk.onesignal-gradle-plugin'
 apply plugin: "com.android.application"
 
+project.ext.envConfigFiles = [
+    release: ".env.production",
+]
+
+apply from: project(':react-native-config').projectDir.getPath() + "/dotenv.gradle"
+
 import com.android.build.OutputFile
 
 /**
@@ -111,18 +117,19 @@ android {
         applicationId "com.apolloschurch.app"
         minSdkVersion rootProject.ext.minSdkVersion
         targetSdkVersion rootProject.ext.targetSdkVersion
-        versionCode 5
-        versionName "0.7.0"
+        versionCode 10
+        versionName "0.8.5"
         ndk {
             abiFilters "armeabi-v7a", "x86"
         }
+        resValue "string", "build_config_package", "com.apolloschurchapp"
     }
     splits {
         abi {
             reset()
             enable enableSeparateBuildPerCPUArchitecture
             universalApk false  // If true, also generate a universal APK
-            include "armeabi-v7a", "x86"
+            include "armeabi-v7a", "x86", "arm64-v8a"
         }
     }
     buildTypes {
@@ -136,7 +143,7 @@ android {
         variant.outputs.each { output ->
             // For each separate APK per architecture, set a unique version code as described here:
             // http://tools.android.com/tech-docs/new-build-system/user-guide/apk-splits
-            def versionCodes = ["armeabi-v7a":1, "x86":2]
+            def versionCodes = ["armeabi-v7a":1, "x86":2, "arm64-v8a": 3]
             def abi = output.getFilter(OutputFile.ABI)
             if (abi != null) {  // null for the universal-debug, universal-release variants
                 output.versionCodeOverride =
@@ -144,19 +151,31 @@ android {
             }
         }
     }
+    compileOptions {
+        targetCompatibility JavaVersion.VERSION_1_8
+    }
 }
 
 dependencies {
-    compile project(':react-native-screens')
-    compile project(':react-native-onesignal')
-    compile project(':react-native-image-picker')
-    compile project(':react-native-music-control')
-    compile project(':react-native-device-info')
-    compile project(':react-native-video')
-    compile project(':react-native-svg')
-    compile project(':react-native-splash-screen')
-    compile project(':react-native-linear-gradient')
-    compile project(':react-native-custom-tabs')
+       // added this and the two google play packages below when upgraded rn-maps to 0.24.2
+    implementation(project(':react-native-maps')){
+      exclude group: 'com.google.android.gms', module: 'play-services-base'
+      exclude group: 'com.google.android.gms', module: 'play-services-maps'
+    }
+    implementation 'com.google.android.gms:play-services-base:10.0.1'
+    implementation 'com.google.android.gms:play-services-maps:10.0.1'
+    implementation project(':rn-fetch-blob')
+    implementation project(':react-native-webview')
+    implementation project(':react-native-video')
+    implementation project(':react-native-svg')
+    implementation project(':react-native-splash-screen')
+    implementation project(':react-native-screens')
+    implementation project(':react-native-onesignal')
+    implementation project(':react-native-music-control')
+    implementation project(':react-native-linear-gradient')
+    implementation project(':react-native-image-picker')
+    implementation project(':react-native-device-info')
+    implementation project(':react-native-config')
     implementation fileTree(dir: "libs", include: ["*.jar"])
     implementation "com.android.support:appcompat-v7:${rootProject.ext.supportLibVersion}"
     implementation "com.facebook.react:react-native:+"  // From node_modules
diff --git a/apolloschurchapp/android/app/build_defs.bzl b/apolloschurchapp/android/app/build_defs.bzl
new file mode 100644
index 0000000..fff270f
--- /dev/null
+++ b/apolloschurchapp/android/app/build_defs.bzl
@@ -0,0 +1,19 @@
+"""Helper definitions to glob .aar and .jar targets"""
+
+def create_aar_targets(aarfiles):
+    for aarfile in aarfiles:
+        name = "aars__" + aarfile[aarfile.rindex("/") + 1:aarfile.rindex(".aar")]
+        lib_deps.append(":" + name)
+        android_prebuilt_aar(
+            name = name,
+            aar = aarfile,
+        )
+
+def create_jar_targets(jarfiles):
+    for jarfile in jarfiles:
+        name = "jars__" + jarfile[jarfile.rindex("/") + 1:jarfile.rindex(".jar")]
+        lib_deps.append(":" + name)
+        prebuilt_jar(
+            name = name,
+            binary_jar = jarfile,
+        )
diff --git a/apolloschurchapp/android/app/src/main/AndroidManifest.xml b/apolloschurchapp/android/app/src/main/AndroidManifest.xml
index 988588b..209e70c 100644
--- a/apolloschurchapp/android/app/src/main/AndroidManifest.xml
+++ b/apolloschurchapp/android/app/src/main/AndroidManifest.xml
@@ -2,9 +2,11 @@
     package="com.apolloschurchapp">
 
     <uses-permission android:name="android.permission.INTERNET" />
+    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
     <uses-permission android:name="android.permission.SYSTEM_ALERT_WINDOW"/>
     <uses-permission android:name="android.permission.CAMERA" />
-    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE"/>
+    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION"/>
+
 
     <application
       android:name=".MainApplication"
@@ -13,13 +15,17 @@
       android:roundIcon="@mipmap/ic_launcher_round"
       android:allowBackup="false"
       android:theme="@style/AppTheme">
+      <meta-data
+        android:name="com.google.android.geo.API_KEY"
+        android:value="@string/GOOGLE_MAPS_API_KEY"/>
       <activity
         android:name=".LaunchActivity"
         android:theme="@style/LaunchTheme"
-        android:label="Apollos Church">
+        android:label="@string/app_name">
         <intent-filter>
             <action android:name="android.intent.action.MAIN" />
             <category android:name="android.intent.category.LAUNCHER" />
+     <action android:name="android.intent.action.DOWNLOAD_COMPLETE"/>
         </intent-filter>
         <intent-filter android:label="filter_react_native">
           <action android:name="android.intent.action.VIEW" />
diff --git a/apolloschurchapp/android/app/src/main/java/com/apolloschurchapp/MainApplication.java b/apolloschurchapp/android/app/src/main/java/com/apolloschurchapp/MainApplication.java
index 95e9084..aa318e0 100644
--- a/apolloschurchapp/android/app/src/main/java/com/apolloschurchapp/MainApplication.java
+++ b/apolloschurchapp/android/app/src/main/java/com/apolloschurchapp/MainApplication.java
@@ -3,16 +3,19 @@ package com.apolloschurchapp;
 import android.app.Application;
 
 import com.facebook.react.ReactApplication;
-import com.swmansion.rnscreens.RNScreenPackage;
-import com.geektime.rnonesignalandroid.ReactNativeOneSignalPackage;
-import com.imagepicker.ImagePickerPackage;
-import com.tanguyantoine.react.MusicControl;
-import com.learnium.RNDeviceInfo.RNDeviceInfo;
+import com.airbnb.android.react.maps.MapsPackage;
+import com.RNFetchBlob.RNFetchBlobPackage;
+import com.reactnativecommunity.webview.RNCWebViewPackage;
 import com.brentvatne.react.ReactVideoPackage;
 import com.horcrux.svg.SvgPackage;
 import org.devio.rn.splashscreen.SplashScreenReactPackage;
+import com.swmansion.rnscreens.RNScreensPackage;
+import com.geektime.rnonesignalandroid.ReactNativeOneSignalPackage;
+import com.tanguyantoine.react.MusicControl;
 import com.BV.LinearGradient.LinearGradientPackage;
-import com.github.droibit.android.reactnative.customtabs.CustomTabsPackage;
+import com.imagepicker.ImagePickerPackage;
+import com.learnium.RNDeviceInfo.RNDeviceInfo;
+import com.lugg.ReactNativeConfig.ReactNativeConfigPackage;
 import com.facebook.react.ReactNativeHost;
 import com.facebook.react.ReactPackage;
 import com.facebook.react.shell.MainReactPackage;
@@ -33,16 +36,19 @@ public class MainApplication extends Application implements ReactApplication {
     protected List<ReactPackage> getPackages() {
       return Arrays.<ReactPackage>asList(
           new MainReactPackage(),
-            new RNScreenPackage(),
-            new ReactNativeOneSignalPackage(),
-            new ImagePickerPackage(),
-            new MusicControl(),
-            new RNDeviceInfo(),
+            new MapsPackage(),
+            new RNFetchBlobPackage(),
+            new RNCWebViewPackage(),
             new ReactVideoPackage(),
             new SvgPackage(),
             new SplashScreenReactPackage(),
+            new RNScreensPackage(),
+            new ReactNativeOneSignalPackage(),
+            new MusicControl(),
             new LinearGradientPackage(),
-            new CustomTabsPackage()
+            new ImagePickerPackage(),
+            new RNDeviceInfo(),
+            new ReactNativeConfigPackage()
       );
     }
 
diff --git a/apolloschurchapp/android/app/src/main/res/drawable/background_splash.xml b/apolloschurchapp/android/app/src/main/res/drawable/background_splash.xml
index 4f85728..19383f0 100644
--- a/apolloschurchapp/android/app/src/main/res/drawable/background_splash.xml
+++ b/apolloschurchapp/android/app/src/main/res/drawable/background_splash.xml
@@ -2,7 +2,7 @@
 <layer-list xmlns:android="http://schemas.android.com/apk/res/android">
 
     <item
-        android:drawable="@color/deep_water"/>
+        android:drawable="@color/primary"/>
 
     <item
         android:width="95.28dp"
diff --git a/apolloschurchapp/android/app/src/main/res/layout/launch_screen.xml b/apolloschurchapp/android/app/src/main/res/layout/launch_screen.xml
index 0009481..6e78d8b 100644
--- a/apolloschurchapp/android/app/src/main/res/layout/launch_screen.xml
+++ b/apolloschurchapp/android/app/src/main/res/layout/launch_screen.xml
@@ -3,7 +3,7 @@
     android:orientation="vertical"
     android:layout_width="match_parent"
     android:layout_height="match_parent"
-    android:background="@color/deep_water"
+    android:background="@color/primary"
     android:gravity="center">
 
     <ImageView
diff --git a/apolloschurchapp/android/app/src/main/res/values-v21/styles.xml b/apolloschurchapp/android/app/src/main/res/values-v21/styles.xml
index 5a4019d..8cfc536 100644
--- a/apolloschurchapp/android/app/src/main/res/values-v21/styles.xml
+++ b/apolloschurchapp/android/app/src/main/res/values-v21/styles.xml
@@ -7,12 +7,12 @@
 
     <style name="LaunchTheme" parent="Theme.AppCompat.Light.NoActionBar">
         <item name="android:windowBackground">@drawable/background_splash</item>
-        <item name="android:statusBarColor">@color/deep_water</item>
+        <item name="android:statusBarColor">@color/primary</item>
     </style>
 
     <style name="SplashScreenTheme" parent="SplashScreen_SplashTheme">
-        <item name="android:statusBarColor">@color/deep_water</item>
-        <item name="colorPrimaryDark">@color/deep_water</item>
+        <item name="android:statusBarColor">@color/primary</item>
+        <item name="colorPrimaryDark">@color/primary</item>
     </style>
 
 </resources>
diff --git a/apolloschurchapp/android/app/src/main/res/values/colors.xml b/apolloschurchapp/android/app/src/main/res/values/colors.xml
index 348fc25..62a0e92 100644
--- a/apolloschurchapp/android/app/src/main/res/values/colors.xml
+++ b/apolloschurchapp/android/app/src/main/res/values/colors.xml
@@ -1,4 +1,4 @@
 <?xml version="1.0" encoding="utf-8"?>
 <resources>
-    <color name="deep_water">#00676D</color>
-</resources>
\ No newline at end of file
+    <color name="primary">#00676D</color>
+</resources>
diff --git a/apolloschurchapp/android/build.gradle b/apolloschurchapp/android/build.gradle
index dea1a1c..8a238c8 100644
--- a/apolloschurchapp/android/build.gradle
+++ b/apolloschurchapp/android/build.gradle
@@ -2,22 +2,18 @@
 
 buildscript {
     ext {
-        buildToolsVersion = "27.0.3"
+        buildToolsVersion = "28.0.2"
         minSdkVersion = 16
-        compileSdkVersion = 27
-        targetSdkVersion = 26
-        supportLibVersion = "27.1.1"
+        compileSdkVersion = 28
+        targetSdkVersion = 27
+        supportLibVersion = "28.0.0"
     }
     repositories {
-        jcenter()
-        maven {
-            url 'https://maven.google.com/'
-            name 'Google'
-        }
         google()
+        jcenter()
     }
     dependencies {
-        classpath 'com.android.tools.build:gradle:3.1.4'
+        classpath 'com.android.tools.build:gradle:3.2.1'
 
         // NOTE: Do not place your application dependencies here; they belong
         // in the individual module build.gradle files
@@ -27,12 +23,8 @@ buildscript {
 allprojects {
     repositories {
         mavenLocal()
-        maven {
-            url 'https://maven.google.com/'
-            name 'Google'
-        }
-        jcenter()
         google()
+        jcenter()
         maven {
             // All of React Native (JS, Obj-C sources, Android binaries) is installed from npm
             url "$rootDir/../node_modules/react-native/android"
@@ -41,26 +33,8 @@ allprojects {
     }
 }
 
-ext {
-    buildToolsVersion = "26.0.3"
-    minSdkVersion = 16
-    compileSdkVersion = 26
-    targetSdkVersion = 26
-    supportLibVersion = "26.1.0"
-}
-
-subprojects {
-    afterEvaluate { project ->
-        if (project.hasProperty("android")) {
-            android {
-                compileSdkVersion rootProject.ext.compileSdkVersion
-                buildToolsVersion rootProject.ext.buildToolsVersion
-            }
-        }
-    }
-}
 
 task wrapper(type: Wrapper) {
-    gradleVersion = '4.4'
+    gradleVersion = '4.7'
     distributionUrl = distributionUrl.replace("bin", "all")
 }
diff --git a/apolloschurchapp/android/gradle/wrapper/gradle-wrapper.properties b/apolloschurchapp/android/gradle/wrapper/gradle-wrapper.properties
index b6517bb..73bb13d 100644
--- a/apolloschurchapp/android/gradle/wrapper/gradle-wrapper.properties
+++ b/apolloschurchapp/android/gradle/wrapper/gradle-wrapper.properties
@@ -2,4 +2,4 @@ distributionBase=GRADLE_USER_HOME
 distributionPath=wrapper/dists
 zipStoreBase=GRADLE_USER_HOME
 zipStorePath=wrapper/dists
-distributionUrl=https\://services.gradle.org/distributions/gradle-4.4-all.zip
+distributionUrl=https\://services.gradle.org/distributions/gradle-4.7-all.zip
diff --git a/apolloschurchapp/android/settings.gradle b/apolloschurchapp/android/settings.gradle
index e1ecbb9..d705770 100644
--- a/apolloschurchapp/android/settings.gradle
+++ b/apolloschurchapp/android/settings.gradle
@@ -1,23 +1,29 @@
 rootProject.name = 'apolloschurchapp'
-include ':react-native-screens'
-project(':react-native-screens').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-screens/android')
-include ':react-native-onesignal'
-project(':react-native-onesignal').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-onesignal/android')
-include ':react-native-image-picker'
-project(':react-native-image-picker').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-image-picker/android')
-include ':react-native-music-control'
-project(':react-native-music-control').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-music-control/android')
-include ':react-native-device-info'
-project(':react-native-device-info').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-device-info/android')
+include ':react-native-maps'
+project(':react-native-maps').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-maps/lib/android')
+include ':rn-fetch-blob'
+project(':rn-fetch-blob').projectDir = new File(rootProject.projectDir, '../node_modules/rn-fetch-blob/android')
+include ':react-native-webview'
+project(':react-native-webview').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-webview/android')
 include ':react-native-video'
 project(':react-native-video').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-video/android-exoplayer')
 include ':react-native-svg'
 project(':react-native-svg').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-svg/android')
 include ':react-native-splash-screen'
 project(':react-native-splash-screen').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-splash-screen/android')
+include ':react-native-screens'
+project(':react-native-screens').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-screens/android')
+include ':react-native-onesignal'
+project(':react-native-onesignal').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-onesignal/android')
+include ':react-native-music-control'
+project(':react-native-music-control').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-music-control/android')
 include ':react-native-linear-gradient'
 project(':react-native-linear-gradient').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-linear-gradient/android')
-include ':react-native-custom-tabs'
-project(':react-native-custom-tabs').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-custom-tabs/android')
+include ':react-native-image-picker'
+project(':react-native-image-picker').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-image-picker/android')
+include ':react-native-device-info'
+project(':react-native-device-info').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-device-info/android')
+include ':react-native-config'
+project(':react-native-config').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-config/android')
 
 include ':app'
diff --git a/apolloschurchapp/apollos.json b/apolloschurchapp/apollos.json
new file mode 100644
index 0000000..614d45e
--- /dev/null
+++ b/apolloschurchapp/apollos.json
@@ -0,0 +1,4 @@
+{
+    "version": "0.8.6",
+    "environment": "client"
+}
\ No newline at end of file
diff --git a/apolloschurchapp/appcenter-post-clone.sh b/apolloschurchapp/appcenter-post-clone.sh
index 97b3e73..268f281 100755
--- a/apolloschurchapp/appcenter-post-clone.sh
+++ b/apolloschurchapp/appcenter-post-clone.sh
@@ -10,4 +10,6 @@ cp $(pwd)/../../yarn.lock $(pwd)/yarn.lock
 
 # Swaps out all placeholder env variables w/ their real values
 # Placeholders look like "$ONE_SIGNAL_KEY"
-grep -o '\$.*' .env.production | sed 's/\$\(.*\)/\1/' | xargs -I {} sh -c "sed -i -e 's/\$"{}"/'$"{}"'/' .env.production"
\ No newline at end of file
+grep -o '\$.*' .env.production | sed 's/\$\(.*\)/\1/' | xargs -I {} sh -c "sed -i -e 's/\$"{}"/'$"{}"'/' .env.production"
+# Make sure ReactNativeConfig picks up values from prod env file.
+cp .env.production .env
\ No newline at end of file
diff --git a/apolloschurchapp/appcenter-pre-build.sh b/apolloschurchapp/appcenter-pre-build.sh
index c666ab2..a9348f2 100644
--- a/apolloschurchapp/appcenter-pre-build.sh
+++ b/apolloschurchapp/appcenter-pre-build.sh
@@ -6,3 +6,4 @@ cp $droid_dir/gradle.properties.appcenter $droid_dir/gradle.properties
 
 cd ../../
 yarn
+yarn lerna run generate-stories
\ No newline at end of file
diff --git a/apolloschurchapp/babel.config.js b/apolloschurchapp/babel.config.js
new file mode 100644
index 0000000..bd83dde
--- /dev/null
+++ b/apolloschurchapp/babel.config.js
@@ -0,0 +1,12 @@
+module.exports = {
+  presets: ['module:metro-react-native-babel-preset'],
+  plugins: [
+    [
+      '@babel/plugin-proposal-decorators',
+      {
+        legacy: true,
+      },
+    ],
+    ['@babel/plugin-proposal-export-default-from'],
+  ],
+};
diff --git a/apolloschurchapp/index.js b/apolloschurchapp/index.js
index d009549..6bfaa01 100644
--- a/apolloschurchapp/index.js
+++ b/apolloschurchapp/index.js
@@ -1,6 +1,23 @@
+import './polyfill'; // this can be removed when we upgrade to react-native 59
 import { AppRegistry, YellowBox } from 'react-native';
+import SplashScreen from 'react-native-splash-screen';
 
-import App from './src';
+import Config from 'react-native-config';
+import Storybook from './storybook';
+import MainApp from './src';
+
+const useStorybook = Config.STORYBOOK === 'true';
+
+let App = MainApp;
+if (useStorybook) {
+  App = Storybook;
+}
+
+// If there's an error before the splash screen goes away, you never see that error.
+// This tries to hide the splash screen so you can see the error.
+// Shouldnt't do anything in Prod.
+// Depending on the error, splash screen might not go away ;)
+global.ErrorUtils.setGlobalHandler(() => SplashScreen.hide());
 
 YellowBox.ignoreWarnings([
   'Warning: isMounted(...) is deprecated',
diff --git a/apolloschurchapp/ios/apolloschurchapp-tvOS/Info.plist b/apolloschurchapp/ios/apolloschurchapp-tvOS/Info.plist
index aed24ed..c24983e 100644
--- a/apolloschurchapp/ios/apolloschurchapp-tvOS/Info.plist
+++ b/apolloschurchapp/ios/apolloschurchapp-tvOS/Info.plist
@@ -15,11 +15,11 @@
 	<key>CFBundlePackageType</key>
 	<string>APPL</string>
 	<key>CFBundleShortVersionString</key>
-	<string>0.7.0</string>
+	<string>0.8.5</string>
 	<key>CFBundleSignature</key>
 	<string>????</string>
 	<key>CFBundleVersion</key>
-	<string>5</string>
+	<string>10</string>
 	<key>LSRequiresIPhoneOS</key>
 	<true />
 	<key>UILaunchStoryboardName</key>
diff --git a/apolloschurchapp/ios/apolloschurchapp-tvOSTests/Info.plist b/apolloschurchapp/ios/apolloschurchapp-tvOSTests/Info.plist
index e358b6d..d84e362 100644
--- a/apolloschurchapp/ios/apolloschurchapp-tvOSTests/Info.plist
+++ b/apolloschurchapp/ios/apolloschurchapp-tvOSTests/Info.plist
@@ -15,10 +15,10 @@
 	<key>CFBundlePackageType</key>
 	<string>BNDL</string>
 	<key>CFBundleShortVersionString</key>
-	<string>0.7.0</string>
+	<string>0.8.5</string>
 	<key>CFBundleSignature</key>
 	<string>????</string>
 	<key>CFBundleVersion</key>
-	<string>5</string>
+	<string>10</string>
 </dict>
 </plist>
diff --git a/apolloschurchapp/ios/apolloschurchapp.xcodeproj/project.pbxproj b/apolloschurchapp/ios/apolloschurchapp.xcodeproj/project.pbxproj
index a1d174c..209fd52 100644
--- a/apolloschurchapp/ios/apolloschurchapp.xcodeproj/project.pbxproj
+++ b/apolloschurchapp/ios/apolloschurchapp.xcodeproj/project.pbxproj
@@ -5,7 +5,6 @@
 	};
 	objectVersion = 46;
 	objects = {
-
 /* Begin PBXBuildFile section */
 		00C302E51ABCBA2D00DB3ED1 /* libRCTActionSheet.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 00C302AC1ABCB8CE00DB3ED1 /* libRCTActionSheet.a */; };
 		00C302E71ABCBA2D00DB3ED1 /* libRCTGeolocation.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 00C302BA1ABCB90400DB3ED1 /* libRCTGeolocation.a */; };
@@ -13,7 +12,10 @@
 		00C302E91ABCBA2D00DB3ED1 /* libRCTNetwork.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 00C302DC1ABCB9D200DB3ED1 /* libRCTNetwork.a */; };
 		00C302EA1ABCBA2D00DB3ED1 /* libRCTVibration.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 00C302E41ABCB9EE00DB3ED1 /* libRCTVibration.a */; };
 		00E356F31AD99517003FC87E /* apolloschurchappTests.m in Sources */ = {isa = PBXBuildFile; fileRef = 00E356F21AD99517003FC87E /* apolloschurchappTests.m */; };
-		0D4EDF6EBA274F9D93DDED76 /* Inter-UI-MediumItalic.otf in Resources */ = {isa = PBXBuildFile; fileRef = F79112193F3548D284406ABF /* Inter-UI-MediumItalic.otf */; };
+		01F091B02048490A8F9EF4FE /* Inter-UI-Italic.otf in Resources */ = {isa = PBXBuildFile; fileRef = 63F6EE53A9B44B4388B5F1C2 /* Inter-UI-Italic.otf */; };
+		08CE105F17284254AD54AF84 /* DroidSerif-Bold.ttf in Resources */ = {isa = PBXBuildFile; fileRef = E3B8A0AC5A6B4FABB3BDF6CB /* DroidSerif-Bold.ttf */; };
+		0CB759F558AA42908EEA1EAB /* libRNDeviceInfo-tvOS.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 7A505BEDA0674A7F9DD875ED /* libRNDeviceInfo-tvOS.a */; };
+		11D1A2F320CAFA9E000508D9 /* libRCTAnimation.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 5E9157331DD0AC6500FF2AA8 /* libRCTAnimation.a */; };
 		133E29F31AD74F7200F7D852 /* libRCTLinking.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 78C398B91ACF4ADC00677621 /* libRCTLinking.a */; };
 		139105C61AF99C1200B5F7CC /* libRCTSettings.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 139105C11AF99BAD00B5F7CC /* libRCTSettings.a */; };
 		139FDEF61B0652A700C62182 /* libRCTWebSocket.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 139FDEF41B06529B00C62182 /* libRCTWebSocket.a */; };
@@ -23,8 +25,8 @@
 		13B07FC11A68108700A75B9A /* main.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB71A68108700A75B9A /* main.m */; };
 		140ED2AC1D01E1AD002B40FF /* libReact.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 146834041AC3E56700842450 /* libReact.a */; };
 		146834051AC3E58100842450 /* libReact.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 146834041AC3E56700842450 /* libReact.a */; };
-		1680179655164C96985B5731 /* libMusicControl.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 643D51DCF8F14993B9AA6990 /* libMusicControl.a */; };
-		1C1FD8B313AB4A6583A0D31B /* libRNDeviceInfo.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 14D838A2FAE743C7B1DA5E31 /* libRNDeviceInfo.a */; };
+		1C48DCDE11AC47C48E918489 /* Inter-UI-Medium.otf in Resources */ = {isa = PBXBuildFile; fileRef = DC74A378C1CC40E4B6192D7F /* Inter-UI-Medium.otf */; };
+		1E6618B697C649BB9FCD362E /* libBVLinearGradient.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 9F0EC3F23A3F4FFBBBC6583A /* libBVLinearGradient.a */; };
 		2D02E4BC1E0B4A80006451C7 /* AppDelegate.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB01A68108700A75B9A /* AppDelegate.m */; };
 		2D02E4BD1E0B4A84006451C7 /* Images.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB51A68108700A75B9A /* Images.xcassets */; };
 		2D02E4BF1E0B4AB3006451C7 /* main.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB71A68108700A75B9A /* main.m */; };
@@ -38,32 +40,37 @@
 		2D16E6881FA4F8E400B85C8A /* libReact.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 2D16E6891FA4F8E400B85C8A /* libReact.a */; };
 		2DCD954D1E0B4F2C00145EB5 /* apolloschurchappTests.m in Sources */ = {isa = PBXBuildFile; fileRef = 00E356F21AD99517003FC87E /* apolloschurchappTests.m */; };
 		2DF0FFEE2056DD460020B375 /* libReact.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 3DAD3EA31DF850E9000B6D8A /* libReact.a */; };
-		3CAA28FFFCCF46518672AC8F /* libDBCustomTabs.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 71E6499CCC9D4DB2ADD365D8 /* libDBCustomTabs.a */; };
-		417027FD83CA4902AB4DB2B4 /* Inter-UI-Black.otf in Resources */ = {isa = PBXBuildFile; fileRef = 8E13C8F9AE60487C9ED95C21 /* Inter-UI-Black.otf */; };
-		4B29B8AACC2A4FB7BA6A8EEB /* libSafariViewManager.a in Frameworks */ = {isa = PBXBuildFile; fileRef = BF5A2B416EB74A44923FED7B /* libSafariViewManager.a */; };
-		59D8DFA78CDF4642892CC142 /* DroidSerif-BoldItalic.ttf in Resources */ = {isa = PBXBuildFile; fileRef = D979B537509247C099CE3F24 /* DroidSerif-BoldItalic.ttf */; };
-		5C862E57737C4032A378868D /* libRNScreens.a in Frameworks */ = {isa = PBXBuildFile; fileRef = B16900D1DAC94F96B742B4EA /* libRNScreens.a */; };
-		5CA1D8E805684478B04ABB60 /* Inter-UI-Italic.otf in Resources */ = {isa = PBXBuildFile; fileRef = 8CA3C04F98954FB2895CD36D /* Inter-UI-Italic.otf */; };
-		5E9157361DD0AC6A00FF2AA8 /* libRCTAnimation.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 5E9157331DD0AC6500FF2AA8 /* libRCTAnimation.a */; };
-		6C6BE3C2189E4FBA9FB66BE5 /* libRCTOneSignal.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 828255630B3246AEA19CF24D /* libRCTOneSignal.a */; };
-		6E4442FB39BE4F898DE4C454 /* Inter-UI-BlackItalic.otf in Resources */ = {isa = PBXBuildFile; fileRef = 22246A6BC58E4CF09A22A4DF /* Inter-UI-BlackItalic.otf */; };
-		7D060CA312AB4E828CD60DDC /* Inter-UI-Regular.otf in Resources */ = {isa = PBXBuildFile; fileRef = 10F42B11F27E467A8C71C280 /* Inter-UI-Regular.otf */; };
+		4994C0DA2471456ABE1D0174 /* libRNAirplay.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 0BE434FF7E9549F392208DEF /* libRNAirplay.a */; };
+		4C19EE32F0B441CD93BB0172 /* libRCTOneSignal.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 0D480D95FC7F4569B8B934E3 /* libRCTOneSignal.a */; };
+		578FFEC1D7D54C9B871A9E5B /* Inter-UI-BlackItalic.otf in Resources */ = {isa = PBXBuildFile; fileRef = 5A5A2BC2998547F4816B82E4 /* Inter-UI-BlackItalic.otf */; };
+		5CAC55FAB9964618918A0056 /* libSafariViewManager.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 349D96BF833B4B1C88D02412 /* libSafariViewManager.a */; };
+		62236B4E7E814A95BC3A3B19 /* libRNScreens.a in Frameworks */ = {isa = PBXBuildFile; fileRef = A44246D0E44E48C4B8335DBD /* libRNScreens.a */; };
+		62BCE95D7F6B4F37B3CB4265 /* libRNImagePicker.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 605AEFB6B1BB4611BDCFE95C /* libRNImagePicker.a */; };
+		68D1351E80AA4A2C96288FD9 /* Inter-UI-Black.otf in Resources */ = {isa = PBXBuildFile; fileRef = EC21254B449443F99016EBFD /* Inter-UI-Black.otf */; };
+		6FFC53D62D7D482A9A92B721 /* libRNSVG-tvOS.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 67356E00D116467DA58DF3CC /* libRNSVG-tvOS.a */; };
+		7FBC6BC3CE8D48298F9850A9 /* Inter-UI-Bold.otf in Resources */ = {isa = PBXBuildFile; fileRef = D5157D807E164356ADE87867 /* Inter-UI-Bold.otf */; };
+		80E20D1B9CC74EB4A9A4CE7B /* libRNFetchBlob.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 0174E356BAEC413288BF654B /* libRNFetchBlob.a */; };
+		820E9220ECAC4A83A15D589F /* libReactNativeConfig-tvOS.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 97222E2EB5E54C7FA6104218 /* libReactNativeConfig-tvOS.a */; };
+		82A2FF1E6E114D3D962D533D /* libRNPassKit.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 3AB4C6D7F52C428FA62777F1 /* libRNPassKit.a */; };
 		832341BD1AAA6AB300B99B32 /* libRCTText.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 832341B51AAA6A8300B99B32 /* libRCTText.a */; };
-		86D0B47B5BF143E797822EF1 /* libRCTVideo.a in Frameworks */ = {isa = PBXBuildFile; fileRef = FC8FFB7C37BB4499AEB6FA37 /* libRCTVideo.a */; };
-		89331B8BDAF24EF5BE08A485 /* libRNSVG.a in Frameworks */ = {isa = PBXBuildFile; fileRef = CFAF46FBA8B44C7B8DCA7707 /* libRNSVG.a */; };
-		9388C44B949C4DBAAA7256D5 /* libBVLinearGradient.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 60E52391C9744A46B3925A78 /* libBVLinearGradient.a */; };
-		9ACBD642B18D41C9BB1E4D9E /* DroidSerif-Italic.ttf in Resources */ = {isa = PBXBuildFile; fileRef = F9CFD638A5414DFF961A8D11 /* DroidSerif-Italic.ttf */; };
-		A173C226549E48B991AC5D98 /* Inter-UI-Medium.otf in Resources */ = {isa = PBXBuildFile; fileRef = 9FD7D997F4F14C439AC699B3 /* Inter-UI-Medium.otf */; };
-		AB7B2136E56C4B40B64F9C87 /* libMusicControl-tvOS.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 67E66409EF8A4BC7A1B9E054 /* libMusicControl-tvOS.a */; };
-		AC4174D90AD644A28D0CA9D9 /* libRNDeviceInfo-tvOS.a in Frameworks */ = {isa = PBXBuildFile; fileRef = A574C961754742F688E43151 /* libRNDeviceInfo-tvOS.a */; };
+		834122CBBA8E476A8652994F /* libRNCWebView.a in Frameworks */ = {isa = PBXBuildFile; fileRef = AE039A0F55BB4B989835F759 /* libRNCWebView.a */; };
+		894732A70B4740678E85B593 /* Inter-UI-BoldItalic.otf in Resources */ = {isa = PBXBuildFile; fileRef = 2F5410F239E9477B9C2E86BD /* Inter-UI-BoldItalic.otf */; };
+		90743C40BF544F10A810C43C /* DroidSerif-Italic.ttf in Resources */ = {isa = PBXBuildFile; fileRef = ADC3D2DB245545ADB1CAB3FE /* DroidSerif-Italic.ttf */; };
+		93A2B0A9328A46A4B7DD5EFA /* DroidSerif-Regular.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 4E007B33EDD74B82AEF02C24 /* DroidSerif-Regular.ttf */; };
+		A975E0B94A5D44AEB410E546 /* libReactNativeConfig.a in Frameworks */ = {isa = PBXBuildFile; fileRef = CF3175A44C4B4612AD79C04E /* libReactNativeConfig.a */; };
+		AB3BD177B8A14193A5EEDDF8 /* Inter-UI-Regular.otf in Resources */ = {isa = PBXBuildFile; fileRef = A613256118404CB691DE2C8E /* Inter-UI-Regular.otf */; };
 		ADBDB9381DFEBF1600ED6528 /* libRCTBlob.a in Frameworks */ = {isa = PBXBuildFile; fileRef = ADBDB9271DFEBF0700ED6528 /* libRCTBlob.a */; };
-		B5DE58C6CF1E4E7ABDD1B48D /* libRNImagePicker.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 3F58D699A37B432BA1C0F092 /* libRNImagePicker.a */; };
-		C87CA8735EEB43C4A55CB285 /* DroidSerif-Bold.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 4629759169AB4756B447B16A /* DroidSerif-Bold.ttf */; };
-		D5744BF3B41D4BC49F93CD68 /* DroidSerif-Regular.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 76E6AD5294554A5FA53DB415 /* DroidSerif-Regular.ttf */; };
-		DEF13113111A40DF8F4FEB13 /* libRNSVG-tvOS.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 84716CBFF56347BA880A16C6 /* libRNSVG-tvOS.a */; };
-		E374C61F2AAF41D3B615AB44 /* Inter-UI-BoldItalic.otf in Resources */ = {isa = PBXBuildFile; fileRef = 32A467E2C3364ABDBB7BD0D1 /* Inter-UI-BoldItalic.otf */; };
-		F3F4A3D13570438F9562746F /* libSplashScreen.a in Frameworks */ = {isa = PBXBuildFile; fileRef = F08D1EBF0C2A4E6798AA8F36 /* libSplashScreen.a */; };
-		F8FAD93CCE5641A8B87611EA /* Inter-UI-Bold.otf in Resources */ = {isa = PBXBuildFile; fileRef = FB25CB02F40D4CC39DDA3C74 /* Inter-UI-Bold.otf */; };
+		B02F194A3F6A4FE29AC799B4 /* DroidSerif-BoldItalic.ttf in Resources */ = {isa = PBXBuildFile; fileRef = A93F9D112A034626A9421759 /* DroidSerif-BoldItalic.ttf */; };
+		B0D490A62BC143209FD3BFE8 /* libMusicControl.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 393EA40CFC2843BF9BB667B3 /* libMusicControl.a */; };
+		B6899815EB024B7987617799 /* libRNSVG.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 430F3786C56541B198E03A02 /* libRNSVG.a */; };
+		CB1584B0772D4A67A81FC83F /* libMusicControl-tvOS.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 74625A1E54234FB7BE12070D /* libMusicControl-tvOS.a */; };
+		CE33B866C2DE49DEBE1AF23F /* libSplashScreen.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 1398ECED9AE14FD19B92232D /* libSplashScreen.a */; };
+		CFE4716D4F6D4ABF9ED485AC /* libRNDeviceInfo.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 0F155E84A5784CBE8D95A974 /* libRNDeviceInfo.a */; };
+		D2F560374F3341308A1579E7 /* libRCTVideo.a in Frameworks */ = {isa = PBXBuildFile; fileRef = C7FE26CDA2DC4CDBAB580A2F /* libRCTVideo.a */; };
+		E28D37FEDA0245DBAC6552D3 /* libAirMaps.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 9862436C289A498D8B2E6201 /* libAirMaps.a */; };
+		ED297163215061F000B7C4FE /* JavaScriptCore.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = ED297162215061F000B7C4FE /* JavaScriptCore.framework */; };
+		ED2971652150620600B7C4FE /* JavaScriptCore.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = ED2971642150620600B7C4FE /* JavaScriptCore.framework */; };
+		FCB3069DB5DD4170B2CAEFC4 /* Inter-UI-MediumItalic.otf in Resources */ = {isa = PBXBuildFile; fileRef = A460FD7884FD4574A818005A /* Inter-UI-MediumItalic.otf */; };
 /* End PBXBuildFile section */
 
 /* Begin PBXContainerItemProxy section */
@@ -200,20 +207,6 @@
 			remoteGlobalIDString = 3D383D621EBD27B9005632C8;
 			remoteInfo = "double-conversion-tvOS";
 		};
-		2DF0FFEA2056DD460020B375 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 9936F3131F5F2E4B0010BF04;
-			remoteInfo = privatedata;
-		};
-		2DF0FFEC2056DD460020B375 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 9936F32F1F5F2E5B0010BF04;
-			remoteInfo = "privatedata-tvOS";
-		};
 		3DAD3E831DF850E9000B6D8A /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
 			containerPortal = 00C302BB1ABCB91800DB3ED1 /* RCTImage.xcodeproj */;
@@ -291,34 +284,6 @@
 			remoteGlobalIDString = 3D3CD9321DE5FBEE00167DC4;
 			remoteInfo = "cxxreact-tvOS";
 		};
-		3DAD3EAC1DF850E9000B6D8A /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 3D3CD90B1DE5FBD600167DC4;
-			remoteInfo = jschelpers;
-		};
-		3DAD3EAE1DF850E9000B6D8A /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 3D3CD9181DE5FBD800167DC4;
-			remoteInfo = "jschelpers-tvOS";
-		};
-		427787EC2149B96A0045AD7F /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 84B340CC6C3940A782834F00 /* RCTOneSignal.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 3245CDED1BFEE35C00EABF68;
-			remoteInfo = RCTOneSignal;
-		};
-		42B4B6CB219DD7CB00162F25 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 59AF37DEFAA847DBAB3A0526 /* RNScreens.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 134814201AA4EA6300B7C361;
-			remoteInfo = RNScreens;
-		};
 		5E9157321DD0AC6500FF2AA8 /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
 			containerPortal = 5E91572D1DD0AC6500FF2AA8 /* RCTAnimation.xcodeproj */;
@@ -340,103 +305,145 @@
 			remoteGlobalIDString = 134814201AA4EA6300B7C361;
 			remoteInfo = RCTLinking;
 		};
-		791434762126017B006F13B7 /* PBXContainerItemProxy */ = {
+		79CEBFDB223011FE00D8F685 /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
-			containerPortal = 46704FC4FCEB45B6B9DD92BB /* BVLinearGradient.xcodeproj */;
+			containerPortal = 43F1D28CACD04757A0FB29A6 /* BVLinearGradient.xcodeproj */;
 			proxyType = 2;
 			remoteGlobalIDString = 134814201AA4EA6300B7C361;
 			remoteInfo = BVLinearGradient;
 		};
-		791434782126017B006F13B7 /* PBXContainerItemProxy */ = {
+		79CEBFDD223011FE00D8F685 /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
-			containerPortal = 46704FC4FCEB45B6B9DD92BB /* BVLinearGradient.xcodeproj */;
+			containerPortal = 43F1D28CACD04757A0FB29A6 /* BVLinearGradient.xcodeproj */;
 			proxyType = 2;
 			remoteGlobalIDString = 64AA15081EF7F30100718508;
 			remoteInfo = "BVLinearGradient-tvOS";
 		};
-		7914347C2126017B006F13B7 /* PBXContainerItemProxy */ = {
+		79CEBFE1223011FE00D8F685 /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
-			containerPortal = 2F8741F0746D4C8A89970C4D /* RCTVideo.xcodeproj */;
+			containerPortal = BD872E89C275480496010898 /* MusicControl.xcodeproj */;
 			proxyType = 2;
 			remoteGlobalIDString = 134814201AA4EA6300B7C361;
-			remoteInfo = RCTVideo;
+			remoteInfo = MusicControl;
 		};
-		7914347E2126017B006F13B7 /* PBXContainerItemProxy */ = {
+		79CEBFE3223011FE00D8F685 /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
-			containerPortal = 2F8741F0746D4C8A89970C4D /* RCTVideo.xcodeproj */;
+			containerPortal = BD872E89C275480496010898 /* MusicControl.xcodeproj */;
 			proxyType = 2;
-			remoteGlobalIDString = 641E28441F0EEC8500443AF6;
-			remoteInfo = "RCTVideo-tvOS";
+			remoteGlobalIDString = A3FC285E1EA7A8350097B6A9;
+			remoteInfo = "MusicControl-tvOS";
 		};
-		791434812126017B006F13B7 /* PBXContainerItemProxy */ = {
+		79CEBFE6223011FE00D8F685 /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
-			containerPortal = 6BAAC994942548609D0EEECA /* ReactNativeCustomTabs.xcodeproj */;
+			containerPortal = 34667F4711264343B035ACD0 /* RCTOneSignal.xcodeproj */;
 			proxyType = 2;
-			remoteGlobalIDString = DA7118681CC9158A0087DF95;
-			remoteInfo = DBCustomTabs;
+			remoteGlobalIDString = 3245CDED1BFEE35C00EABF68;
+			remoteInfo = RCTOneSignal;
 		};
-		791434852126017B006F13B7 /* PBXContainerItemProxy */ = {
+		79CEBFEA223011FE00D8F685 /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
-			containerPortal = 01441BF099BE44EE8BA8E390 /* RNSVG.xcodeproj */;
+			containerPortal = 63998175DB3B4506ACF27B92 /* ReactNativeConfig.xcodeproj */;
 			proxyType = 2;
-			remoteGlobalIDString = 0CF68AC11AF0540F00FF9E5C;
-			remoteInfo = RNSVG;
+			remoteGlobalIDString = EB2648DF1C7BE17A00B8F155;
+			remoteInfo = ReactNativeConfig;
 		};
-		791434872126017B006F13B7 /* PBXContainerItemProxy */ = {
+		79CEBFEC223011FE00D8F685 /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
-			containerPortal = 01441BF099BE44EE8BA8E390 /* RNSVG.xcodeproj */;
+			containerPortal = 63998175DB3B4506ACF27B92 /* ReactNativeConfig.xcodeproj */;
 			proxyType = 2;
-			remoteGlobalIDString = 94DDAC5C1F3D024300EED511;
-			remoteInfo = "RNSVG-tvOS";
+			remoteGlobalIDString = 3DF7F6AC203AA09B00D0EAB7;
+			remoteInfo = "ReactNativeConfig-tvOS";
 		};
-		7914348A2126017B006F13B7 /* PBXContainerItemProxy */ = {
+		79CEBFF2223011FE00D8F685 /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
-			containerPortal = 6B6E5A404A4B4A34B18D7D34 /* SafariViewManager.xcodeproj */;
+			containerPortal = 3923D6EFF26D4A53B8BDF8C6 /* RNAirplay.xcodeproj */;
 			proxyType = 2;
 			remoteGlobalIDString = 134814201AA4EA6300B7C361;
-			remoteInfo = SafariViewManager;
+			remoteInfo = RNAirplay;
+		};
+		79CEBFF5223011FE00D8F685 /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 4ED51CB73778472686A7279B /* RNCWebView.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 134814201AA4EA6300B7C361;
+			remoteInfo = RNCWebView;
 		};
-		7914348D2126017B006F13B7 /* PBXContainerItemProxy */ = {
+		79CEBFF9223011FE00D8F685 /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
-			containerPortal = A64D00F181AE4927A4632B6E /* SplashScreen.xcodeproj */;
+			containerPortal = 39E16D6487A34F4D9B8C6EC1 /* RNDeviceInfo.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = DA5891D81BA9A9FC002B4DB2;
+			remoteInfo = RNDeviceInfo;
+		};
+		79CEBFFB223011FE00D8F685 /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 39E16D6487A34F4D9B8C6EC1 /* RNDeviceInfo.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = E72EC1401F7ABB5A0001BC90;
+			remoteInfo = "RNDeviceInfo-tvOS";
+		};
+		79CEBFFE223011FE00D8F685 /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 629FCAAD128E41B4BAE2BCF4 /* RNImagePicker.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 014A3B5C1C6CF33500B6D375;
+			remoteInfo = RNImagePicker;
+		};
+		79CEC004223011FE00D8F685 /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 0C974B3AFB5446819A990A78 /* SplashScreen.xcodeproj */;
 			proxyType = 2;
 			remoteGlobalIDString = 3D7682761D8E76B80014119E;
 			remoteInfo = SplashScreen;
 		};
-		794FE987219DF8880046142B /* PBXContainerItemProxy */ = {
+		79CEC009223011FE00D8F685 /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
-			containerPortal = 59AF37DEFAA847DBAB3A0526 /* RNScreens.xcodeproj */;
+			containerPortal = F4FDE4F3C6704DA2A3E04D18 /* SafariViewManager.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 134814201AA4EA6300B7C361;
+			remoteInfo = SafariViewManager;
+		};
+		79CEC00E223011FE00D8F685 /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 00F25A7E17B94370985B32E7 /* RNScreens.xcodeproj */;
 			proxyType = 2;
 			remoteGlobalIDString = 134814201AA4EA6300B7C361;
 			remoteInfo = RNScreens;
 		};
-		796F2532212CAD5D00C6935E /* PBXContainerItemProxy */ = {
+		79CEC014223011FE00D8F685 /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
-			containerPortal = 239ECFF08FA841B99DB1CAFA /* RNDeviceInfo.xcodeproj */;
+			containerPortal = 2130E622CDAD43DF896EFF80 /* RNSVG.xcodeproj */;
 			proxyType = 2;
-			remoteGlobalIDString = DA5891D81BA9A9FC002B4DB2;
-			remoteInfo = RNDeviceInfo;
+			remoteGlobalIDString = 0CF68AC11AF0540F00FF9E5C;
+			remoteInfo = RNSVG;
 		};
-		796F2534212CAD5D00C6935E /* PBXContainerItemProxy */ = {
+		79CEC016223011FE00D8F685 /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
-			containerPortal = 239ECFF08FA841B99DB1CAFA /* RNDeviceInfo.xcodeproj */;
+			containerPortal = 2130E622CDAD43DF896EFF80 /* RNSVG.xcodeproj */;
 			proxyType = 2;
-			remoteGlobalIDString = E72EC1401F7ABB5A0001BC90;
-			remoteInfo = "RNDeviceInfo-tvOS";
+			remoteGlobalIDString = 94DDAC5C1F3D024300EED511;
+			remoteInfo = "RNSVG-tvOS";
 		};
-		797304182146322D00F6E05B /* PBXContainerItemProxy */ = {
+		79CEC01C223011FE00D8F685 /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
-			containerPortal = 4BD3C4E6742F4F6380640CA9 /* MusicControl.xcodeproj */;
+			containerPortal = F617FE53F3334D93B2EEAA64 /* RCTVideo.xcodeproj */;
 			proxyType = 2;
 			remoteGlobalIDString = 134814201AA4EA6300B7C361;
-			remoteInfo = MusicControl;
+			remoteInfo = RCTVideo;
 		};
-		7973041A2146322D00F6E05B /* PBXContainerItemProxy */ = {
+		79CEC01E223011FE00D8F685 /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
-			containerPortal = 4BD3C4E6742F4F6380640CA9 /* MusicControl.xcodeproj */;
+			containerPortal = F617FE53F3334D93B2EEAA64 /* RCTVideo.xcodeproj */;
 			proxyType = 2;
-			remoteGlobalIDString = A3FC285E1EA7A8350097B6A9;
-			remoteInfo = "MusicControl-tvOS";
+			remoteGlobalIDString = 641E28441F0EEC8500443AF6;
+			remoteInfo = "RCTVideo-tvOS";
+		};
+		79CEC023223011FF00D8F685 /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 10B0392307184C498573F1A2 /* RNFetchBlob.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = A15C300E1CD25C330074CB35;
+			remoteInfo = RNFetchBlob;
 		};
 		832341B41AAA6A8300B99B32 /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
@@ -452,27 +459,49 @@
 			remoteGlobalIDString = 358F4ED71D1E81A9004DF814;
 			remoteInfo = RCTBlob;
 		};
-		BF9931702138673B0077FD20 /* PBXContainerItemProxy */ = {
+		BF08F42F22429D0700FFB1DC /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = EDEBC6D6214B3E7000DD5AC8;
+			remoteInfo = jsi;
+		};
+		BF08F43122429D0700FFB1DC /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
-			containerPortal = 3BD7DCDF7B194D7BB9BE3C6C /* RNImagePicker.xcodeproj */;
+			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
 			proxyType = 2;
-			remoteGlobalIDString = 014A3B5C1C6CF33500B6D375;
-			remoteInfo = RNImagePicker;
+			remoteGlobalIDString = EDEBC73B214B45A300DD5AC8;
+			remoteInfo = jsiexecutor;
 		};
-/* End PBXContainerItemProxy section */
-
-/* Begin PBXCopyFilesBuildPhase section */
-		4217B141214ADBC00034808C /* Embed App Extensions */ = {
-			isa = PBXCopyFilesBuildPhase;
-			buildActionMask = 2147483647;
-			dstPath = "";
-			dstSubfolderSpec = 13;
-			files = (
-			);
-			name = "Embed App Extensions";
-			runOnlyForDeploymentPostprocessing = 0;
+		BF08F43322429D0700FFB1DC /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = ED296FB6214C9A0900B7C4FE;
+			remoteInfo = "jsi-tvOS";
+		};
+		BF08F43522429D0700FFB1DC /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = ED296FEE214C9CF800B7C4FE;
+			remoteInfo = "jsiexecutor-tvOS";
 		};
-/* End PBXCopyFilesBuildPhase section */
+		BF08F44922429D0700FFB1DC /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 1C0ED1C4FB474DC8A829950D /* AirMaps.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 11FA5C511C4A1296003AC2EE;
+			remoteInfo = AirMaps;
+		};
+		BF08F5182242B97A00FFB1DC /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = D3BA7667091546469A730845 /* RNPassKit.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 6D42A7D820341E6800A0D1AE;
+			remoteInfo = RNPassKit;
+		};
+/* End PBXContainerItemProxy section */
 
 /* Begin PBXFileReference section */
 		008F07F21AC5B25A0029DE68 /* main.jsbundle */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = main.jsbundle; sourceTree = "<group>"; };
@@ -484,9 +513,15 @@
 		00E356EE1AD99517003FC87E /* apolloschurchappTests.xctest */ = {isa = PBXFileReference; explicitFileType = wrapper.cfbundle; includeInIndex = 0; path = apolloschurchappTests.xctest; sourceTree = BUILT_PRODUCTS_DIR; };
 		00E356F11AD99517003FC87E /* Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; path = Info.plist; sourceTree = "<group>"; };
 		00E356F21AD99517003FC87E /* apolloschurchappTests.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; path = apolloschurchappTests.m; sourceTree = "<group>"; };
-		01441BF099BE44EE8BA8E390 /* RNSVG.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = RNSVG.xcodeproj; path = "../node_modules/react-native-svg/ios/RNSVG.xcodeproj"; sourceTree = "<group>"; };
-		10F42B11F27E467A8C71C280 /* Inter-UI-Regular.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-Regular.otf"; path = "../assets/fonts/Inter-UI-Regular.otf"; sourceTree = "<group>"; };
+		00F25A7E17B94370985B32E7 /* RNScreens.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = RNScreens.xcodeproj; path = "../node_modules/react-native-screens/ios/RNScreens.xcodeproj"; sourceTree = "<group>"; };
+		0174E356BAEC413288BF654B /* libRNFetchBlob.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libRNFetchBlob.a; sourceTree = "<group>"; };
+		0BE434FF7E9549F392208DEF /* libRNAirplay.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libRNAirplay.a; sourceTree = "<group>"; };
+		0C974B3AFB5446819A990A78 /* SplashScreen.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = SplashScreen.xcodeproj; path = "../node_modules/react-native-splash-screen/ios/SplashScreen.xcodeproj"; sourceTree = "<group>"; };
+		0D480D95FC7F4569B8B934E3 /* libRCTOneSignal.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libRCTOneSignal.a; sourceTree = "<group>"; };
+		0F155E84A5784CBE8D95A974 /* libRNDeviceInfo.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libRNDeviceInfo.a; sourceTree = "<group>"; };
+		10B0392307184C498573F1A2 /* RNFetchBlob.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = RNFetchBlob.xcodeproj; path = "../node_modules/rn-fetch-blob/ios/RNFetchBlob.xcodeproj"; sourceTree = "<group>"; };
 		139105B61AF99BAD00B5F7CC /* RCTSettings.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = RCTSettings.xcodeproj; path = "../node_modules/react-native/Libraries/Settings/RCTSettings.xcodeproj"; sourceTree = "<group>"; };
+		1398ECED9AE14FD19B92232D /* libSplashScreen.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libSplashScreen.a; sourceTree = "<group>"; };
 		139FDEE61B06529A00C62182 /* RCTWebSocket.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = RCTWebSocket.xcodeproj; path = "../node_modules/react-native/Libraries/WebSocket/RCTWebSocket.xcodeproj"; sourceTree = "<group>"; };
 		13B07F961A680F5B00A75B9A /* apolloschurchapp.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = apolloschurchapp.app; sourceTree = BUILT_PRODUCTS_DIR; };
 		13B07FAF1A68108700A75B9A /* AppDelegate.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = AppDelegate.h; path = apolloschurchapp/AppDelegate.h; sourceTree = "<group>"; };
@@ -496,51 +531,55 @@
 		13B07FB61A68108700A75B9A /* Info.plist */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.xml; name = Info.plist; path = apolloschurchapp/Info.plist; sourceTree = "<group>"; };
 		13B07FB71A68108700A75B9A /* main.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; name = main.m; path = apolloschurchapp/main.m; sourceTree = "<group>"; };
 		146833FF1AC3E56700842450 /* React.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = React.xcodeproj; path = "../node_modules/react-native/React/React.xcodeproj"; sourceTree = "<group>"; };
-		14D838A2FAE743C7B1DA5E31 /* libRNDeviceInfo.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libRNDeviceInfo.a; sourceTree = "<group>"; };
-		22246A6BC58E4CF09A22A4DF /* Inter-UI-BlackItalic.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-BlackItalic.otf"; path = "../assets/fonts/Inter-UI-BlackItalic.otf"; sourceTree = "<group>"; };
-		239ECFF08FA841B99DB1CAFA /* RNDeviceInfo.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = RNDeviceInfo.xcodeproj; path = "../node_modules/react-native-device-info/ios/RNDeviceInfo.xcodeproj"; sourceTree = "<group>"; };
+		1C0ED1C4FB474DC8A829950D /* AirMaps.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = AirMaps.xcodeproj; path = "../node_modules/react-native-maps/lib/ios/AirMaps.xcodeproj"; sourceTree = "<group>"; };
+		2130E622CDAD43DF896EFF80 /* RNSVG.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = RNSVG.xcodeproj; path = "../node_modules/react-native-svg/ios/RNSVG.xcodeproj"; sourceTree = "<group>"; };
 		2D02E47B1E0B4A5D006451C7 /* apolloschurchapp-tvOS.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = "apolloschurchapp-tvOS.app"; sourceTree = BUILT_PRODUCTS_DIR; };
 		2D02E4901E0B4A5D006451C7 /* apolloschurchapp-tvOSTests.xctest */ = {isa = PBXFileReference; explicitFileType = wrapper.cfbundle; includeInIndex = 0; path = "apolloschurchapp-tvOSTests.xctest"; sourceTree = BUILT_PRODUCTS_DIR; };
 		2D16E6891FA4F8E400B85C8A /* libReact.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; path = libReact.a; sourceTree = BUILT_PRODUCTS_DIR; };
-		2F8741F0746D4C8A89970C4D /* RCTVideo.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = RCTVideo.xcodeproj; path = "../node_modules/react-native-video/ios/RCTVideo.xcodeproj"; sourceTree = "<group>"; };
-		32A467E2C3364ABDBB7BD0D1 /* Inter-UI-BoldItalic.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-BoldItalic.otf"; path = "../assets/fonts/Inter-UI-BoldItalic.otf"; sourceTree = "<group>"; };
-		3BD7DCDF7B194D7BB9BE3C6C /* RNImagePicker.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = RNImagePicker.xcodeproj; path = "../node_modules/react-native-image-picker/ios/RNImagePicker.xcodeproj"; sourceTree = "<group>"; };
-		3F58D699A37B432BA1C0F092 /* libRNImagePicker.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libRNImagePicker.a; sourceTree = "<group>"; };
-		4217B130214ADB740034808C /* apolloschurchapp.entitlements */ = {isa = PBXFileReference; lastKnownFileType = text.plist.entitlements; name = apolloschurchapp.entitlements; path = apolloschurchapp/apolloschurchapp.entitlements; sourceTree = "<group>"; };
-		4217B142214ADCD50034808C /* UIKit.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = UIKit.framework; path = System/Library/Frameworks/UIKit.framework; sourceTree = SDKROOT; };
-		4217B144214ADCE10034808C /* SystemConfiguration.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = SystemConfiguration.framework; path = System/Library/Frameworks/SystemConfiguration.framework; sourceTree = SDKROOT; };
-		4629759169AB4756B447B16A /* DroidSerif-Bold.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "DroidSerif-Bold.ttf"; path = "../assets/fonts/DroidSerif-Bold.ttf"; sourceTree = "<group>"; };
-		46704FC4FCEB45B6B9DD92BB /* BVLinearGradient.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = BVLinearGradient.xcodeproj; path = "../node_modules/react-native-linear-gradient/BVLinearGradient.xcodeproj"; sourceTree = "<group>"; };
-		4BD3C4E6742F4F6380640CA9 /* MusicControl.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = MusicControl.xcodeproj; path = "../node_modules/react-native-music-control/ios/MusicControl.xcodeproj"; sourceTree = "<group>"; };
-		59AF37DEFAA847DBAB3A0526 /* RNScreens.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = RNScreens.xcodeproj; path = "../node_modules/react-native-screens/ios/RNScreens.xcodeproj"; sourceTree = "<group>"; };
+		2F5410F239E9477B9C2E86BD /* Inter-UI-BoldItalic.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-BoldItalic.otf"; path = "../assets/fonts/Inter-UI-BoldItalic.otf"; sourceTree = "<group>"; };
+		34667F4711264343B035ACD0 /* RCTOneSignal.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = RCTOneSignal.xcodeproj; path = "../node_modules/react-native-onesignal/ios/RCTOneSignal.xcodeproj"; sourceTree = "<group>"; };
+		349D96BF833B4B1C88D02412 /* libSafariViewManager.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libSafariViewManager.a; sourceTree = "<group>"; };
+		3923D6EFF26D4A53B8BDF8C6 /* RNAirplay.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = RNAirplay.xcodeproj; path = "../node_modules/react-native-airplay-btn/ios/RNAirplay.xcodeproj"; sourceTree = "<group>"; };
+		393EA40CFC2843BF9BB667B3 /* libMusicControl.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libMusicControl.a; sourceTree = "<group>"; };
+		39E16D6487A34F4D9B8C6EC1 /* RNDeviceInfo.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = RNDeviceInfo.xcodeproj; path = "../node_modules/react-native-device-info/ios/RNDeviceInfo.xcodeproj"; sourceTree = "<group>"; };
+		3AB4C6D7F52C428FA62777F1 /* libRNPassKit.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libRNPassKit.a; sourceTree = "<group>"; };
+		430F3786C56541B198E03A02 /* libRNSVG.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libRNSVG.a; sourceTree = "<group>"; };
+		43F1D28CACD04757A0FB29A6 /* BVLinearGradient.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = BVLinearGradient.xcodeproj; path = "../node_modules/react-native-linear-gradient/BVLinearGradient.xcodeproj"; sourceTree = "<group>"; };
+		4E007B33EDD74B82AEF02C24 /* DroidSerif-Regular.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "DroidSerif-Regular.ttf"; path = "../assets/fonts/DroidSerif-Regular.ttf"; sourceTree = "<group>"; };
+		4ED51CB73778472686A7279B /* RNCWebView.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = RNCWebView.xcodeproj; path = "../node_modules/react-native-webview/ios/RNCWebView.xcodeproj"; sourceTree = "<group>"; };
+		5A5A2BC2998547F4816B82E4 /* Inter-UI-BlackItalic.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-BlackItalic.otf"; path = "../assets/fonts/Inter-UI-BlackItalic.otf"; sourceTree = "<group>"; };
 		5E91572D1DD0AC6500FF2AA8 /* RCTAnimation.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = RCTAnimation.xcodeproj; path = "../node_modules/react-native/Libraries/NativeAnimation/RCTAnimation.xcodeproj"; sourceTree = "<group>"; };
-		60E52391C9744A46B3925A78 /* libBVLinearGradient.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libBVLinearGradient.a; sourceTree = "<group>"; };
-		643D51DCF8F14993B9AA6990 /* libMusicControl.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libMusicControl.a; sourceTree = "<group>"; };
-		67E66409EF8A4BC7A1B9E054 /* libMusicControl-tvOS.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = "libMusicControl-tvOS.a"; sourceTree = "<group>"; };
-		6B6E5A404A4B4A34B18D7D34 /* SafariViewManager.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = SafariViewManager.xcodeproj; path = "../node_modules/react-native-safari-view/SafariViewManager.xcodeproj"; sourceTree = "<group>"; };
-		6BAAC994942548609D0EEECA /* ReactNativeCustomTabs.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = ReactNativeCustomTabs.xcodeproj; path = "../node_modules/react-native-custom-tabs/ios/ReactNativeCustomTabs.xcodeproj"; sourceTree = "<group>"; };
-		71E6499CCC9D4DB2ADD365D8 /* libDBCustomTabs.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libDBCustomTabs.a; sourceTree = "<group>"; };
-		76E6AD5294554A5FA53DB415 /* DroidSerif-Regular.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "DroidSerif-Regular.ttf"; path = "../assets/fonts/DroidSerif-Regular.ttf"; sourceTree = "<group>"; };
+		605AEFB6B1BB4611BDCFE95C /* libRNImagePicker.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libRNImagePicker.a; sourceTree = "<group>"; };
+		629FCAAD128E41B4BAE2BCF4 /* RNImagePicker.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = RNImagePicker.xcodeproj; path = "../node_modules/react-native-image-picker/ios/RNImagePicker.xcodeproj"; sourceTree = "<group>"; };
+		63998175DB3B4506ACF27B92 /* ReactNativeConfig.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = ReactNativeConfig.xcodeproj; path = "../node_modules/react-native-config/ios/ReactNativeConfig.xcodeproj"; sourceTree = "<group>"; };
+		63F6EE53A9B44B4388B5F1C2 /* Inter-UI-Italic.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-Italic.otf"; path = "../assets/fonts/Inter-UI-Italic.otf"; sourceTree = "<group>"; };
+		67356E00D116467DA58DF3CC /* libRNSVG-tvOS.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = "libRNSVG-tvOS.a"; sourceTree = "<group>"; };
+		74625A1E54234FB7BE12070D /* libMusicControl-tvOS.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = "libMusicControl-tvOS.a"; sourceTree = "<group>"; };
 		78C398B01ACF4ADC00677621 /* RCTLinking.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = RCTLinking.xcodeproj; path = "../node_modules/react-native/Libraries/LinkingIOS/RCTLinking.xcodeproj"; sourceTree = "<group>"; };
-		828255630B3246AEA19CF24D /* libRCTOneSignal.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libRCTOneSignal.a; sourceTree = "<group>"; };
+		7A505BEDA0674A7F9DD875ED /* libRNDeviceInfo-tvOS.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = "libRNDeviceInfo-tvOS.a"; sourceTree = "<group>"; };
 		832341B01AAA6A8300B99B32 /* RCTText.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = RCTText.xcodeproj; path = "../node_modules/react-native/Libraries/Text/RCTText.xcodeproj"; sourceTree = "<group>"; };
-		84716CBFF56347BA880A16C6 /* libRNSVG-tvOS.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = "libRNSVG-tvOS.a"; sourceTree = "<group>"; };
-		84B340CC6C3940A782834F00 /* RCTOneSignal.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = RCTOneSignal.xcodeproj; path = "../node_modules/react-native-onesignal/ios/RCTOneSignal.xcodeproj"; sourceTree = "<group>"; };
-		8CA3C04F98954FB2895CD36D /* Inter-UI-Italic.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-Italic.otf"; path = "../assets/fonts/Inter-UI-Italic.otf"; sourceTree = "<group>"; };
-		8E13C8F9AE60487C9ED95C21 /* Inter-UI-Black.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-Black.otf"; path = "../assets/fonts/Inter-UI-Black.otf"; sourceTree = "<group>"; };
-		9FD7D997F4F14C439AC699B3 /* Inter-UI-Medium.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-Medium.otf"; path = "../assets/fonts/Inter-UI-Medium.otf"; sourceTree = "<group>"; };
-		A574C961754742F688E43151 /* libRNDeviceInfo-tvOS.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = "libRNDeviceInfo-tvOS.a"; sourceTree = "<group>"; };
-		A64D00F181AE4927A4632B6E /* SplashScreen.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = SplashScreen.xcodeproj; path = "../node_modules/react-native-splash-screen/ios/SplashScreen.xcodeproj"; sourceTree = "<group>"; };
+		97222E2EB5E54C7FA6104218 /* libReactNativeConfig-tvOS.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = "libReactNativeConfig-tvOS.a"; sourceTree = "<group>"; };
+		9862436C289A498D8B2E6201 /* libAirMaps.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libAirMaps.a; sourceTree = "<group>"; };
+		9F0EC3F23A3F4FFBBBC6583A /* libBVLinearGradient.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libBVLinearGradient.a; sourceTree = "<group>"; };
+		A44246D0E44E48C4B8335DBD /* libRNScreens.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libRNScreens.a; sourceTree = "<group>"; };
+		A460FD7884FD4574A818005A /* Inter-UI-MediumItalic.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-MediumItalic.otf"; path = "../assets/fonts/Inter-UI-MediumItalic.otf"; sourceTree = "<group>"; };
+		A613256118404CB691DE2C8E /* Inter-UI-Regular.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-Regular.otf"; path = "../assets/fonts/Inter-UI-Regular.otf"; sourceTree = "<group>"; };
+		A93F9D112A034626A9421759 /* DroidSerif-BoldItalic.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "DroidSerif-BoldItalic.ttf"; path = "../assets/fonts/DroidSerif-BoldItalic.ttf"; sourceTree = "<group>"; };
 		ADBDB91F1DFEBF0600ED6528 /* RCTBlob.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = RCTBlob.xcodeproj; path = "../node_modules/react-native/Libraries/Blob/RCTBlob.xcodeproj"; sourceTree = "<group>"; };
-		B16900D1DAC94F96B742B4EA /* libRNScreens.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libRNScreens.a; sourceTree = "<group>"; };
-		BF5A2B416EB74A44923FED7B /* libSafariViewManager.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libSafariViewManager.a; sourceTree = "<group>"; };
-		CFAF46FBA8B44C7B8DCA7707 /* libRNSVG.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libRNSVG.a; sourceTree = "<group>"; };
-		D979B537509247C099CE3F24 /* DroidSerif-BoldItalic.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "DroidSerif-BoldItalic.ttf"; path = "../assets/fonts/DroidSerif-BoldItalic.ttf"; sourceTree = "<group>"; };
-		F08D1EBF0C2A4E6798AA8F36 /* libSplashScreen.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libSplashScreen.a; sourceTree = "<group>"; };
-		F79112193F3548D284406ABF /* Inter-UI-MediumItalic.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-MediumItalic.otf"; path = "../assets/fonts/Inter-UI-MediumItalic.otf"; sourceTree = "<group>"; };
-		F9CFD638A5414DFF961A8D11 /* DroidSerif-Italic.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "DroidSerif-Italic.ttf"; path = "../assets/fonts/DroidSerif-Italic.ttf"; sourceTree = "<group>"; };
-		FB25CB02F40D4CC39DDA3C74 /* Inter-UI-Bold.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-Bold.otf"; path = "../assets/fonts/Inter-UI-Bold.otf"; sourceTree = "<group>"; };
-		FC8FFB7C37BB4499AEB6FA37 /* libRCTVideo.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libRCTVideo.a; sourceTree = "<group>"; };
+		ADC3D2DB245545ADB1CAB3FE /* DroidSerif-Italic.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "DroidSerif-Italic.ttf"; path = "../assets/fonts/DroidSerif-Italic.ttf"; sourceTree = "<group>"; };
+		AE039A0F55BB4B989835F759 /* libRNCWebView.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libRNCWebView.a; sourceTree = "<group>"; };
+		BD872E89C275480496010898 /* MusicControl.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = MusicControl.xcodeproj; path = "../node_modules/react-native-music-control/ios/MusicControl.xcodeproj"; sourceTree = "<group>"; };
+		C7FE26CDA2DC4CDBAB580A2F /* libRCTVideo.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libRCTVideo.a; sourceTree = "<group>"; };
+		CF3175A44C4B4612AD79C04E /* libReactNativeConfig.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libReactNativeConfig.a; sourceTree = "<group>"; };
+		D3BA7667091546469A730845 /* RNPassKit.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = RNPassKit.xcodeproj; path = "../node_modules/react-native-passkit-wallet/ios/RNPassKit.xcodeproj"; sourceTree = "<group>"; };
+		D5157D807E164356ADE87867 /* Inter-UI-Bold.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-Bold.otf"; path = "../assets/fonts/Inter-UI-Bold.otf"; sourceTree = "<group>"; };
+		DC74A378C1CC40E4B6192D7F /* Inter-UI-Medium.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-Medium.otf"; path = "../assets/fonts/Inter-UI-Medium.otf"; sourceTree = "<group>"; };
+		E3B8A0AC5A6B4FABB3BDF6CB /* DroidSerif-Bold.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "DroidSerif-Bold.ttf"; path = "../assets/fonts/DroidSerif-Bold.ttf"; sourceTree = "<group>"; };
+		EC21254B449443F99016EBFD /* Inter-UI-Black.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-Black.otf"; path = "../assets/fonts/Inter-UI-Black.otf"; sourceTree = "<group>"; };
+		ED297162215061F000B7C4FE /* JavaScriptCore.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = JavaScriptCore.framework; path = System/Library/Frameworks/JavaScriptCore.framework; sourceTree = SDKROOT; };
+		ED2971642150620600B7C4FE /* JavaScriptCore.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = JavaScriptCore.framework; path = Platforms/AppleTVOS.platform/Developer/SDKs/AppleTVOS12.0.sdk/System/Library/Frameworks/JavaScriptCore.framework; sourceTree = DEVELOPER_DIR; };
+		F4FDE4F3C6704DA2A3E04D18 /* SafariViewManager.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = SafariViewManager.xcodeproj; path = "../node_modules/react-native-safari-view/SafariViewManager.xcodeproj"; sourceTree = "<group>"; };
+		F617FE53F3334D93B2EEAA64 /* RCTVideo.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = RCTVideo.xcodeproj; path = "../node_modules/react-native-video/ios/RCTVideo.xcodeproj"; sourceTree = "<group>"; };
 /* End PBXFileReference section */
 
 /* Begin PBXFrameworksBuildPhase section */
@@ -556,10 +595,10 @@
 			isa = PBXFrameworksBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
+				ED297163215061F000B7C4FE /* JavaScriptCore.framework in Frameworks */,
 				ADBDB9381DFEBF1600ED6528 /* libRCTBlob.a in Frameworks */,
-				5E9157361DD0AC6A00FF2AA8 /* libRCTAnimation.a in Frameworks */,
+				11D1A2F320CAFA9E000508D9 /* libRCTAnimation.a in Frameworks */,
 				146834051AC3E58100842450 /* libReact.a in Frameworks */,
-				5E9157361DD0AC6A00FF2AA8 /* libRCTAnimation.a in Frameworks */,
 				00C302E51ABCBA2D00DB3ED1 /* libRCTActionSheet.a in Frameworks */,
 				00C302E71ABCBA2D00DB3ED1 /* libRCTGeolocation.a in Frameworks */,
 				00C302E81ABCBA2D00DB3ED1 /* libRCTImage.a in Frameworks */,
@@ -569,17 +608,22 @@
 				832341BD1AAA6AB300B99B32 /* libRCTText.a in Frameworks */,
 				00C302EA1ABCBA2D00DB3ED1 /* libRCTVibration.a in Frameworks */,
 				139FDEF61B0652A700C62182 /* libRCTWebSocket.a in Frameworks */,
-				3CAA28FFFCCF46518672AC8F /* libDBCustomTabs.a in Frameworks */,
-				9388C44B949C4DBAAA7256D5 /* libBVLinearGradient.a in Frameworks */,
-				4B29B8AACC2A4FB7BA6A8EEB /* libSafariViewManager.a in Frameworks */,
-				F3F4A3D13570438F9562746F /* libSplashScreen.a in Frameworks */,
-				89331B8BDAF24EF5BE08A485 /* libRNSVG.a in Frameworks */,
-				86D0B47B5BF143E797822EF1 /* libRCTVideo.a in Frameworks */,
-				6C6BE3C2189E4FBA9FB66BE5 /* libRCTOneSignal.a in Frameworks */,
-				B5DE58C6CF1E4E7ABDD1B48D /* libRNImagePicker.a in Frameworks */,
-				1C1FD8B313AB4A6583A0D31B /* libRNDeviceInfo.a in Frameworks */,
-				1680179655164C96985B5731 /* libMusicControl.a in Frameworks */,
-				5C862E57737C4032A378868D /* libRNScreens.a in Frameworks */,
+				4994C0DA2471456ABE1D0174 /* libRNAirplay.a in Frameworks */,
+				A975E0B94A5D44AEB410E546 /* libReactNativeConfig.a in Frameworks */,
+				CFE4716D4F6D4ABF9ED485AC /* libRNDeviceInfo.a in Frameworks */,
+				62BCE95D7F6B4F37B3CB4265 /* libRNImagePicker.a in Frameworks */,
+				1E6618B697C649BB9FCD362E /* libBVLinearGradient.a in Frameworks */,
+				B0D490A62BC143209FD3BFE8 /* libMusicControl.a in Frameworks */,
+				4C19EE32F0B441CD93BB0172 /* libRCTOneSignal.a in Frameworks */,
+				5CAC55FAB9964618918A0056 /* libSafariViewManager.a in Frameworks */,
+				62236B4E7E814A95BC3A3B19 /* libRNScreens.a in Frameworks */,
+				CE33B866C2DE49DEBE1AF23F /* libSplashScreen.a in Frameworks */,
+				B6899815EB024B7987617799 /* libRNSVG.a in Frameworks */,
+				D2F560374F3341308A1579E7 /* libRCTVideo.a in Frameworks */,
+				834122CBBA8E476A8652994F /* libRNCWebView.a in Frameworks */,
+				80E20D1B9CC74EB4A9A4CE7B /* libRNFetchBlob.a in Frameworks */,
+				E28D37FEDA0245DBAC6552D3 /* libAirMaps.a in Frameworks */,
+				82A2FF1E6E114D3D962D533D /* libRNPassKit.a in Frameworks */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
@@ -587,6 +631,7 @@
 			isa = PBXFrameworksBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
+				ED2971652150620600B7C4FE /* JavaScriptCore.framework in Frameworks */,
 				2D16E6881FA4F8E400B85C8A /* libReact.a in Frameworks */,
 				2D02E4C21E0B4AEC006451C7 /* libRCTAnimation.a in Frameworks */,
 				2D02E4C31E0B4AEC006451C7 /* libRCTImage-tvOS.a in Frameworks */,
@@ -595,9 +640,10 @@
 				2D02E4C61E0B4AEC006451C7 /* libRCTSettings-tvOS.a in Frameworks */,
 				2D02E4C71E0B4AEC006451C7 /* libRCTText-tvOS.a in Frameworks */,
 				2D02E4C81E0B4AEC006451C7 /* libRCTWebSocket-tvOS.a in Frameworks */,
-				DEF13113111A40DF8F4FEB13 /* libRNSVG-tvOS.a in Frameworks */,
-				AC4174D90AD644A28D0CA9D9 /* libRNDeviceInfo-tvOS.a in Frameworks */,
-				AB7B2136E56C4B40B64F9C87 /* libMusicControl-tvOS.a in Frameworks */,
+				820E9220ECAC4A83A15D589F /* libReactNativeConfig-tvOS.a in Frameworks */,
+				0CB759F558AA42908EEA1EAB /* libRNDeviceInfo-tvOS.a in Frameworks */,
+				CB1584B0772D4A67A81FC83F /* libMusicControl-tvOS.a in Frameworks */,
+				6FFC53D62D7D482A9A92B721 /* libRNSVG-tvOS.a in Frameworks */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
@@ -694,7 +740,6 @@
 		13B07FAE1A68108700A75B9A /* apolloschurchapp */ = {
 			isa = PBXGroup;
 			children = (
-				4217B130214ADB740034808C /* apolloschurchapp.entitlements */,
 				008F07F21AC5B25A0029DE68 /* main.jsbundle */,
 				13B07FAF1A68108700A75B9A /* AppDelegate.h */,
 				13B07FB01A68108700A75B9A /* AppDelegate.m */,
@@ -715,16 +760,16 @@
 				3DAD3EA71DF850E9000B6D8A /* libyoga.a */,
 				3DAD3EA91DF850E9000B6D8A /* libcxxreact.a */,
 				3DAD3EAB1DF850E9000B6D8A /* libcxxreact.a */,
-				3DAD3EAD1DF850E9000B6D8A /* libjschelpers.a */,
-				3DAD3EAF1DF850E9000B6D8A /* libjschelpers.a */,
 				2DF0FFDF2056DD460020B375 /* libjsinspector.a */,
 				2DF0FFE12056DD460020B375 /* libjsinspector-tvOS.a */,
 				2DF0FFE32056DD460020B375 /* libthird-party.a */,
 				2DF0FFE52056DD460020B375 /* libthird-party.a */,
 				2DF0FFE72056DD460020B375 /* libdouble-conversion.a */,
 				2DF0FFE92056DD460020B375 /* libdouble-conversion.a */,
-				2DF0FFEB2056DD460020B375 /* libprivatedata.a */,
-				2DF0FFED2056DD460020B375 /* libprivatedata-tvOS.a */,
+				BF08F43022429D0700FFB1DC /* libjsi.a */,
+				BF08F43222429D0700FFB1DC /* libjsiexecutor.a */,
+				BF08F43422429D0700FFB1DC /* libjsi-tvOS.a */,
+				BF08F43622429D0700FFB1DC /* libjsiexecutor-tvOS.a */,
 			);
 			name = Products;
 			sourceTree = "<group>";
@@ -732,160 +777,192 @@
 		2D16E6871FA4F8E400B85C8A /* Frameworks */ = {
 			isa = PBXGroup;
 			children = (
-				4217B144214ADCE10034808C /* SystemConfiguration.framework */,
-				4217B142214ADCD50034808C /* UIKit.framework */,
+				ED297162215061F000B7C4FE /* JavaScriptCore.framework */,
+				ED2971642150620600B7C4FE /* JavaScriptCore.framework */,
 				2D16E6891FA4F8E400B85C8A /* libReact.a */,
 			);
 			name = Frameworks;
 			sourceTree = "<group>";
 		};
-		427787E92149B9690045AD7F /* Products */ = {
+		58D6A3E05A234CD89DC0BCE1 /* Resources */ = {
+			isa = PBXGroup;
+			children = (
+				E3B8A0AC5A6B4FABB3BDF6CB /* DroidSerif-Bold.ttf */,
+				A93F9D112A034626A9421759 /* DroidSerif-BoldItalic.ttf */,
+				ADC3D2DB245545ADB1CAB3FE /* DroidSerif-Italic.ttf */,
+				4E007B33EDD74B82AEF02C24 /* DroidSerif-Regular.ttf */,
+				EC21254B449443F99016EBFD /* Inter-UI-Black.otf */,
+				5A5A2BC2998547F4816B82E4 /* Inter-UI-BlackItalic.otf */,
+				D5157D807E164356ADE87867 /* Inter-UI-Bold.otf */,
+				2F5410F239E9477B9C2E86BD /* Inter-UI-BoldItalic.otf */,
+				63F6EE53A9B44B4388B5F1C2 /* Inter-UI-Italic.otf */,
+				DC74A378C1CC40E4B6192D7F /* Inter-UI-Medium.otf */,
+				A460FD7884FD4574A818005A /* Inter-UI-MediumItalic.otf */,
+				A613256118404CB691DE2C8E /* Inter-UI-Regular.otf */,
+			);
+			name = Resources;
+			sourceTree = "<group>";
+		};
+		5E91572E1DD0AC6500FF2AA8 /* Products */ = {
 			isa = PBXGroup;
 			children = (
-				427787ED2149B96A0045AD7F /* libRCTOneSignal.a */,
+				5E9157331DD0AC6500FF2AA8 /* libRCTAnimation.a */,
+				5E9157351DD0AC6500FF2AA8 /* libRCTAnimation.a */,
 			);
 			name = Products;
 			sourceTree = "<group>";
 		};
-		42B4B698219DD7CA00162F25 /* Products */ = {
+		78C398B11ACF4ADC00677621 /* Products */ = {
 			isa = PBXGroup;
 			children = (
-				42B4B6CC219DD7CB00162F25 /* libRNScreens.a */,
+				78C398B91ACF4ADC00677621 /* libRCTLinking.a */,
+				3DAD3E881DF850E9000B6D8A /* libRCTLinking-tvOS.a */,
 			);
 			name = Products;
 			sourceTree = "<group>";
 		};
-		4446111C6E474E038489E599 /* Resources */ = {
+		79CEBF9D223011FC00D8F685 /* Recovered References */ = {
 			isa = PBXGroup;
 			children = (
-				4629759169AB4756B447B16A /* DroidSerif-Bold.ttf */,
-				D979B537509247C099CE3F24 /* DroidSerif-BoldItalic.ttf */,
-				F9CFD638A5414DFF961A8D11 /* DroidSerif-Italic.ttf */,
-				76E6AD5294554A5FA53DB415 /* DroidSerif-Regular.ttf */,
-				8E13C8F9AE60487C9ED95C21 /* Inter-UI-Black.otf */,
-				22246A6BC58E4CF09A22A4DF /* Inter-UI-BlackItalic.otf */,
-				FB25CB02F40D4CC39DDA3C74 /* Inter-UI-Bold.otf */,
-				32A467E2C3364ABDBB7BD0D1 /* Inter-UI-BoldItalic.otf */,
-				8CA3C04F98954FB2895CD36D /* Inter-UI-Italic.otf */,
-				9FD7D997F4F14C439AC699B3 /* Inter-UI-Medium.otf */,
-				F79112193F3548D284406ABF /* Inter-UI-MediumItalic.otf */,
-				10F42B11F27E467A8C71C280 /* Inter-UI-Regular.otf */,
+				0BE434FF7E9549F392208DEF /* libRNAirplay.a */,
+				CF3175A44C4B4612AD79C04E /* libReactNativeConfig.a */,
+				9DA3750D49B0422F9A4B45BE /* libDBCustomTabs.a */,
+				0F155E84A5784CBE8D95A974 /* libRNDeviceInfo.a */,
+				605AEFB6B1BB4611BDCFE95C /* libRNImagePicker.a */,
+				9F0EC3F23A3F4FFBBBC6583A /* libBVLinearGradient.a */,
+				393EA40CFC2843BF9BB667B3 /* libMusicControl.a */,
+				0D480D95FC7F4569B8B934E3 /* libRCTOneSignal.a */,
+				349D96BF833B4B1C88D02412 /* libSafariViewManager.a */,
+				A44246D0E44E48C4B8335DBD /* libRNScreens.a */,
+				1398ECED9AE14FD19B92232D /* libSplashScreen.a */,
+				430F3786C56541B198E03A02 /* libRNSVG.a */,
+				C7FE26CDA2DC4CDBAB580A2F /* libRCTVideo.a */,
+				AE039A0F55BB4B989835F759 /* libRNCWebView.a */,
+				0174E356BAEC413288BF654B /* libRNFetchBlob.a */,
+				97222E2EB5E54C7FA6104218 /* libReactNativeConfig-tvOS.a */,
+				7A505BEDA0674A7F9DD875ED /* libRNDeviceInfo-tvOS.a */,
+				74625A1E54234FB7BE12070D /* libMusicControl-tvOS.a */,
+				67356E00D116467DA58DF3CC /* libRNSVG-tvOS.a */,
+				9862436C289A498D8B2E6201 /* libAirMaps.a */,
+				3AB4C6D7F52C428FA62777F1 /* libRNPassKit.a */,
 			);
-			name = Resources;
+			name = "Recovered References";
 			sourceTree = "<group>";
 		};
-		5E91572E1DD0AC6500FF2AA8 /* Products */ = {
+		79CEBFC5223011FD00D8F685 /* Products */ = {
 			isa = PBXGroup;
 			children = (
-				5E9157331DD0AC6500FF2AA8 /* libRCTAnimation.a */,
-				5E9157351DD0AC6500FF2AA8 /* libRCTAnimation.a */,
+				79CEC005223011FE00D8F685 /* libSplashScreen.a */,
 			);
 			name = Products;
 			sourceTree = "<group>";
 		};
-		78C398B11ACF4ADC00677621 /* Products */ = {
+		79CEBFC7223011FD00D8F685 /* Products */ = {
 			isa = PBXGroup;
 			children = (
-				78C398B91ACF4ADC00677621 /* libRCTLinking.a */,
-				3DAD3E881DF850E9000B6D8A /* libRCTLinking-tvOS.a */,
+				79CEBFF6223011FE00D8F685 /* libRNCWebView.a */,
 			);
 			name = Products;
 			sourceTree = "<group>";
 		};
-		7914344221260177006F13B7 /* Recovered References */ = {
+		79CEBFC9223011FD00D8F685 /* Products */ = {
 			isa = PBXGroup;
 			children = (
-				71E6499CCC9D4DB2ADD365D8 /* libDBCustomTabs.a */,
-				60E52391C9744A46B3925A78 /* libBVLinearGradient.a */,
-				BF5A2B416EB74A44923FED7B /* libSafariViewManager.a */,
-				F08D1EBF0C2A4E6798AA8F36 /* libSplashScreen.a */,
-				CFAF46FBA8B44C7B8DCA7707 /* libRNSVG.a */,
-				FC8FFB7C37BB4499AEB6FA37 /* libRCTVideo.a */,
-				84716CBFF56347BA880A16C6 /* libRNSVG-tvOS.a */,
-				828255630B3246AEA19CF24D /* libRCTOneSignal.a */,
-				3F58D699A37B432BA1C0F092 /* libRNImagePicker.a */,
-				14D838A2FAE743C7B1DA5E31 /* libRNDeviceInfo.a */,
-				A574C961754742F688E43151 /* libRNDeviceInfo-tvOS.a */,
-				643D51DCF8F14993B9AA6990 /* libMusicControl.a */,
-				67E66409EF8A4BC7A1B9E054 /* libMusicControl-tvOS.a */,
-				B16900D1DAC94F96B742B4EA /* libRNScreens.a */,
+				79CEBFFA223011FE00D8F685 /* libRNDeviceInfo.a */,
+				79CEBFFC223011FE00D8F685 /* libRNDeviceInfo-tvOS.a */,
 			);
-			name = "Recovered References";
+			name = Products;
 			sourceTree = "<group>";
 		};
-		791434682126017A006F13B7 /* Products */ = {
+		79CEBFCB223011FD00D8F685 /* Products */ = {
 			isa = PBXGroup;
 			children = (
-				7914348B2126017B006F13B7 /* libSafariViewManager.a */,
+				79CEBFE2223011FE00D8F685 /* libMusicControl.a */,
+				79CEBFE4223011FE00D8F685 /* libMusicControl-tvOS.a */,
 			);
 			name = Products;
 			sourceTree = "<group>";
 		};
-		7914346A2126017A006F13B7 /* Products */ = {
+		79CEBFCD223011FE00D8F685 /* Products */ = {
 			isa = PBXGroup;
 			children = (
-				791434822126017B006F13B7 /* libDBCustomTabs.a */,
+				79CEBFF3223011FE00D8F685 /* libRNAirplay.a */,
 			);
 			name = Products;
 			sourceTree = "<group>";
 		};
-		7914346C2126017A006F13B7 /* Products */ = {
+		79CEBFCF223011FE00D8F685 /* Products */ = {
 			isa = PBXGroup;
 			children = (
-				7914348E2126017B006F13B7 /* libSplashScreen.a */,
+				79CEBFEB223011FE00D8F685 /* libReactNativeConfig.a */,
+				79CEBFED223011FE00D8F685 /* libReactNativeConfig-tvOS.a */,
 			);
 			name = Products;
 			sourceTree = "<group>";
 		};
-		7914346E2126017A006F13B7 /* Products */ = {
+		79CEBFD3223011FE00D8F685 /* Products */ = {
 			isa = PBXGroup;
 			children = (
-				791434772126017B006F13B7 /* libBVLinearGradient.a */,
-				791434792126017B006F13B7 /* libBVLinearGradient.a */,
+				79CEBFFF223011FE00D8F685 /* libRNImagePicker.a */,
 			);
 			name = Products;
 			sourceTree = "<group>";
 		};
-		791434702126017A006F13B7 /* Products */ = {
+		79CEBFD5223011FE00D8F685 /* Products */ = {
 			isa = PBXGroup;
 			children = (
-				791434862126017B006F13B7 /* libRNSVG.a */,
-				791434882126017B006F13B7 /* libRNSVG-tvOS.a */,
+				79CEBFDC223011FE00D8F685 /* libBVLinearGradient.a */,
+				79CEBFDE223011FE00D8F685 /* libBVLinearGradient.a */,
 			);
 			name = Products;
 			sourceTree = "<group>";
 		};
-		791434722126017A006F13B7 /* Products */ = {
+		79CEBFD7223011FE00D8F685 /* Products */ = {
 			isa = PBXGroup;
 			children = (
-				7914347D2126017B006F13B7 /* libRCTVideo.a */,
-				7914347F2126017B006F13B7 /* libRCTVideo.a */,
+				79CEBFE7223011FE00D8F685 /* libRCTOneSignal.a */,
 			);
 			name = Products;
 			sourceTree = "<group>";
 		};
-		794FE954219DF8880046142B /* Products */ = {
+		79CEC006223011FE00D8F685 /* Products */ = {
 			isa = PBXGroup;
 			children = (
-				794FE988219DF8880046142B /* libRNScreens.a */,
+				79CEC00A223011FE00D8F685 /* libSafariViewManager.a */,
 			);
 			name = Products;
 			sourceTree = "<group>";
 		};
-		796F252E212CAD5D00C6935E /* Products */ = {
+		79CEC00B223011FE00D8F685 /* Products */ = {
 			isa = PBXGroup;
 			children = (
-				796F2533212CAD5D00C6935E /* libRNDeviceInfo.a */,
-				796F2535212CAD5D00C6935E /* libRNDeviceInfo-tvOS.a */,
+				79CEC00F223011FE00D8F685 /* libRNScreens.a */,
 			);
 			name = Products;
 			sourceTree = "<group>";
 		};
-		797304142146322D00F6E05B /* Products */ = {
+		79CEC010223011FE00D8F685 /* Products */ = {
 			isa = PBXGroup;
 			children = (
-				797304192146322D00F6E05B /* libMusicControl.a */,
-				7973041B2146322D00F6E05B /* libMusicControl-tvOS.a */,
+				79CEC015223011FE00D8F685 /* libRNSVG.a */,
+				79CEC017223011FE00D8F685 /* libRNSVG-tvOS.a */,
+			);
+			name = Products;
+			sourceTree = "<group>";
+		};
+		79CEC018223011FE00D8F685 /* Products */ = {
+			isa = PBXGroup;
+			children = (
+				79CEC01D223011FE00D8F685 /* libRCTVideo.a */,
+				79CEC01F223011FE00D8F685 /* libRCTVideo.a */,
+			);
+			name = Products;
+			sourceTree = "<group>";
+		};
+		79CEC020223011FF00D8F685 /* Products */ = {
+			isa = PBXGroup;
+			children = (
+				79CEC024223011FF00D8F685 /* libRNFetchBlob.a */,
 			);
 			name = Products;
 			sourceTree = "<group>";
@@ -905,17 +982,22 @@
 				832341B01AAA6A8300B99B32 /* RCTText.xcodeproj */,
 				00C302DF1ABCB9EE00DB3ED1 /* RCTVibration.xcodeproj */,
 				139FDEE61B06529A00C62182 /* RCTWebSocket.xcodeproj */,
-				6BAAC994942548609D0EEECA /* ReactNativeCustomTabs.xcodeproj */,
-				46704FC4FCEB45B6B9DD92BB /* BVLinearGradient.xcodeproj */,
-				6B6E5A404A4B4A34B18D7D34 /* SafariViewManager.xcodeproj */,
-				A64D00F181AE4927A4632B6E /* SplashScreen.xcodeproj */,
-				01441BF099BE44EE8BA8E390 /* RNSVG.xcodeproj */,
-				2F8741F0746D4C8A89970C4D /* RCTVideo.xcodeproj */,
-				84B340CC6C3940A782834F00 /* RCTOneSignal.xcodeproj */,
-				3BD7DCDF7B194D7BB9BE3C6C /* RNImagePicker.xcodeproj */,
-				239ECFF08FA841B99DB1CAFA /* RNDeviceInfo.xcodeproj */,
-				4BD3C4E6742F4F6380640CA9 /* MusicControl.xcodeproj */,
-				59AF37DEFAA847DBAB3A0526 /* RNScreens.xcodeproj */,
+				3923D6EFF26D4A53B8BDF8C6 /* RNAirplay.xcodeproj */,
+				63998175DB3B4506ACF27B92 /* ReactNativeConfig.xcodeproj */,
+				39E16D6487A34F4D9B8C6EC1 /* RNDeviceInfo.xcodeproj */,
+				629FCAAD128E41B4BAE2BCF4 /* RNImagePicker.xcodeproj */,
+				43F1D28CACD04757A0FB29A6 /* BVLinearGradient.xcodeproj */,
+				BD872E89C275480496010898 /* MusicControl.xcodeproj */,
+				34667F4711264343B035ACD0 /* RCTOneSignal.xcodeproj */,
+				F4FDE4F3C6704DA2A3E04D18 /* SafariViewManager.xcodeproj */,
+				00F25A7E17B94370985B32E7 /* RNScreens.xcodeproj */,
+				0C974B3AFB5446819A990A78 /* SplashScreen.xcodeproj */,
+				2130E622CDAD43DF896EFF80 /* RNSVG.xcodeproj */,
+				F617FE53F3334D93B2EEAA64 /* RCTVideo.xcodeproj */,
+				4ED51CB73778472686A7279B /* RNCWebView.xcodeproj */,
+				10B0392307184C498573F1A2 /* RNFetchBlob.xcodeproj */,
+				1C0ED1C4FB474DC8A829950D /* AirMaps.xcodeproj */,
+				D3BA7667091546469A730845 /* RNPassKit.xcodeproj */,
 			);
 			name = Libraries;
 			sourceTree = "<group>";
@@ -937,8 +1019,8 @@
 				00E356EF1AD99517003FC87E /* apolloschurchappTests */,
 				83CBBA001A601CBA00E9B192 /* Products */,
 				2D16E6871FA4F8E400B85C8A /* Frameworks */,
-				4446111C6E474E038489E599 /* Resources */,
-				7914344221260177006F13B7 /* Recovered References */,
+				58D6A3E05A234CD89DC0BCE1 /* Resources */,
+				79CEBF9D223011FC00D8F685 /* Recovered References */,
 			);
 			indentWidth = 2;
 			sourceTree = "<group>";
@@ -965,10 +1047,18 @@
 			name = Products;
 			sourceTree = "<group>";
 		};
-		BF99316D2138673B0077FD20 /* Products */ = {
+		BF08F44622429D0700FFB1DC /* Products */ = {
 			isa = PBXGroup;
 			children = (
-				BF9931712138673B0077FD20 /* libRNImagePicker.a */,
+				BF08F44A22429D0700FFB1DC /* libAirMaps.a */,
+			);
+			name = Products;
+			sourceTree = "<group>";
+		};
+		BF08F5152242B97900FFB1DC /* Products */ = {
+			isa = PBXGroup;
+			children = (
+				BF08F5192242B97A00FFB1DC /* libRNPassKit.a */,
 			);
 			name = Products;
 			sourceTree = "<group>";
@@ -1002,7 +1092,6 @@
 				13B07F8C1A680F5B00A75B9A /* Frameworks */,
 				13B07F8E1A680F5B00A75B9A /* Resources */,
 				00DD1BFF1BD5951E006B06BC /* Bundle React Native code and images */,
-				4217B141214ADBC00034808C /* Embed App Extensions */,
 			);
 			buildRules = (
 			);
@@ -1055,7 +1144,7 @@
 		83CBB9F71A601CBA00E9B192 /* Project object */ = {
 			isa = PBXProject;
 			attributes = {
-				LastUpgradeCheck = 610;
+				LastUpgradeCheck = 940;
 				ORGANIZATIONNAME = Facebook;
 				TargetAttributes = {
 					00E356ED1AD99517003FC87E = {
@@ -1064,11 +1153,7 @@
 					};
 					13B07F861A680F5B00A75B9A = {
 						DevelopmentTeam = 7TM8C6252Z;
-						SystemCapabilities = {
-							com.apple.Push = {
-								enabled = 1;
-							};
-						};
+						ProvisioningStyle = Automatic;
 					};
 					2D02E47A1E0B4A5D006451C7 = {
 						CreatedOnToolsVersion = 8.2.1;
@@ -1086,6 +1171,7 @@
 			developmentRegion = English;
 			hasScannedForEncodings = 0;
 			knownRegions = (
+				English,
 				en,
 				Base,
 			);
@@ -1094,12 +1180,16 @@
 			projectDirPath = "";
 			projectReferences = (
 				{
-					ProductGroup = 7914346E2126017A006F13B7 /* Products */;
-					ProjectRef = 46704FC4FCEB45B6B9DD92BB /* BVLinearGradient.xcodeproj */;
+					ProductGroup = BF08F44622429D0700FFB1DC /* Products */;
+					ProjectRef = 1C0ED1C4FB474DC8A829950D /* AirMaps.xcodeproj */;
 				},
 				{
-					ProductGroup = 797304142146322D00F6E05B /* Products */;
-					ProjectRef = 4BD3C4E6742F4F6380640CA9 /* MusicControl.xcodeproj */;
+					ProductGroup = 79CEBFD5223011FE00D8F685 /* Products */;
+					ProjectRef = 43F1D28CACD04757A0FB29A6 /* BVLinearGradient.xcodeproj */;
+				},
+				{
+					ProductGroup = 79CEBFCB223011FD00D8F685 /* Products */;
+					ProjectRef = BD872E89C275480496010898 /* MusicControl.xcodeproj */;
 				},
 				{
 					ProductGroup = 00C302A81ABCB8CE00DB3ED1 /* Products */;
@@ -1130,8 +1220,8 @@
 					ProjectRef = 00C302D31ABCB9D200DB3ED1 /* RCTNetwork.xcodeproj */;
 				},
 				{
-					ProductGroup = 427787E92149B9690045AD7F /* Products */;
-					ProjectRef = 84B340CC6C3940A782834F00 /* RCTOneSignal.xcodeproj */;
+					ProductGroup = 79CEBFD7223011FE00D8F685 /* Products */;
+					ProjectRef = 34667F4711264343B035ACD0 /* RCTOneSignal.xcodeproj */;
 				},
 				{
 					ProductGroup = 139105B71AF99BAD00B5F7CC /* Products */;
@@ -1146,8 +1236,8 @@
 					ProjectRef = 00C302DF1ABCB9EE00DB3ED1 /* RCTVibration.xcodeproj */;
 				},
 				{
-					ProductGroup = 791434722126017A006F13B7 /* Products */;
-					ProjectRef = 2F8741F0746D4C8A89970C4D /* RCTVideo.xcodeproj */;
+					ProductGroup = 79CEC018223011FE00D8F685 /* Products */;
+					ProjectRef = F617FE53F3334D93B2EEAA64 /* RCTVideo.xcodeproj */;
 				},
 				{
 					ProductGroup = 139FDEE71B06529A00C62182 /* Products */;
@@ -1158,32 +1248,48 @@
 					ProjectRef = 146833FF1AC3E56700842450 /* React.xcodeproj */;
 				},
 				{
-					ProductGroup = 7914346A2126017A006F13B7 /* Products */;
-					ProjectRef = 6BAAC994942548609D0EEECA /* ReactNativeCustomTabs.xcodeproj */;
+					ProductGroup = 79CEBFCF223011FE00D8F685 /* Products */;
+					ProjectRef = 63998175DB3B4506ACF27B92 /* ReactNativeConfig.xcodeproj */;
+				},
+				{
+					ProductGroup = 79CEBFCD223011FE00D8F685 /* Products */;
+					ProjectRef = 3923D6EFF26D4A53B8BDF8C6 /* RNAirplay.xcodeproj */;
+				},
+				{
+					ProductGroup = 79CEBFC7223011FD00D8F685 /* Products */;
+					ProjectRef = 4ED51CB73778472686A7279B /* RNCWebView.xcodeproj */;
+				},
+				{
+					ProductGroup = 79CEBFC9223011FD00D8F685 /* Products */;
+					ProjectRef = 39E16D6487A34F4D9B8C6EC1 /* RNDeviceInfo.xcodeproj */;
+				},
+				{
+					ProductGroup = 79CEC020223011FF00D8F685 /* Products */;
+					ProjectRef = 10B0392307184C498573F1A2 /* RNFetchBlob.xcodeproj */;
 				},
 				{
-					ProductGroup = 796F252E212CAD5D00C6935E /* Products */;
-					ProjectRef = 239ECFF08FA841B99DB1CAFA /* RNDeviceInfo.xcodeproj */;
+					ProductGroup = 79CEBFD3223011FE00D8F685 /* Products */;
+					ProjectRef = 629FCAAD128E41B4BAE2BCF4 /* RNImagePicker.xcodeproj */;
 				},
 				{
-					ProductGroup = BF99316D2138673B0077FD20 /* Products */;
-					ProjectRef = 3BD7DCDF7B194D7BB9BE3C6C /* RNImagePicker.xcodeproj */;
+					ProductGroup = BF08F5152242B97900FFB1DC /* Products */;
+					ProjectRef = D3BA7667091546469A730845 /* RNPassKit.xcodeproj */;
 				},
 				{
-					ProductGroup = 42B4B698219DD7CA00162F25 /* Products */;
-					ProjectRef = 59AF37DEFAA847DBAB3A0526 /* RNScreens.xcodeproj */;
+					ProductGroup = 79CEC00B223011FE00D8F685 /* Products */;
+					ProjectRef = 00F25A7E17B94370985B32E7 /* RNScreens.xcodeproj */;
 				},
 				{
-					ProductGroup = 791434702126017A006F13B7 /* Products */;
-					ProjectRef = 01441BF099BE44EE8BA8E390 /* RNSVG.xcodeproj */;
+					ProductGroup = 79CEC010223011FE00D8F685 /* Products */;
+					ProjectRef = 2130E622CDAD43DF896EFF80 /* RNSVG.xcodeproj */;
 				},
 				{
-					ProductGroup = 791434682126017A006F13B7 /* Products */;
-					ProjectRef = 6B6E5A404A4B4A34B18D7D34 /* SafariViewManager.xcodeproj */;
+					ProductGroup = 79CEC006223011FE00D8F685 /* Products */;
+					ProjectRef = F4FDE4F3C6704DA2A3E04D18 /* SafariViewManager.xcodeproj */;
 				},
 				{
-					ProductGroup = 7914346C2126017A006F13B7 /* Products */;
-					ProjectRef = A64D00F181AE4927A4632B6E /* SplashScreen.xcodeproj */;
+					ProductGroup = 79CEBFC5223011FD00D8F685 /* Products */;
+					ProjectRef = 0C974B3AFB5446819A990A78 /* SplashScreen.xcodeproj */;
 				},
 			);
 			projectRoot = "";
@@ -1316,20 +1422,6 @@
 			remoteRef = 2DF0FFE82056DD460020B375 /* PBXContainerItemProxy */;
 			sourceTree = BUILT_PRODUCTS_DIR;
 		};
-		2DF0FFEB2056DD460020B375 /* libprivatedata.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libprivatedata.a;
-			remoteRef = 2DF0FFEA2056DD460020B375 /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		2DF0FFED2056DD460020B375 /* libprivatedata-tvOS.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = "libprivatedata-tvOS.a";
-			remoteRef = 2DF0FFEC2056DD460020B375 /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
 		3DAD3E841DF850E9000B6D8A /* libRCTImage-tvOS.a */ = {
 			isa = PBXReferenceProxy;
 			fileType = archive.ar;
@@ -1407,151 +1499,165 @@
 			remoteRef = 3DAD3EAA1DF850E9000B6D8A /* PBXContainerItemProxy */;
 			sourceTree = BUILT_PRODUCTS_DIR;
 		};
-		3DAD3EAD1DF850E9000B6D8A /* libjschelpers.a */ = {
+		5E9157331DD0AC6500FF2AA8 /* libRCTAnimation.a */ = {
 			isa = PBXReferenceProxy;
 			fileType = archive.ar;
-			path = libjschelpers.a;
-			remoteRef = 3DAD3EAC1DF850E9000B6D8A /* PBXContainerItemProxy */;
+			path = libRCTAnimation.a;
+			remoteRef = 5E9157321DD0AC6500FF2AA8 /* PBXContainerItemProxy */;
 			sourceTree = BUILT_PRODUCTS_DIR;
 		};
-		3DAD3EAF1DF850E9000B6D8A /* libjschelpers.a */ = {
+		5E9157351DD0AC6500FF2AA8 /* libRCTAnimation.a */ = {
 			isa = PBXReferenceProxy;
 			fileType = archive.ar;
-			path = libjschelpers.a;
-			remoteRef = 3DAD3EAE1DF850E9000B6D8A /* PBXContainerItemProxy */;
+			path = libRCTAnimation.a;
+			remoteRef = 5E9157341DD0AC6500FF2AA8 /* PBXContainerItemProxy */;
 			sourceTree = BUILT_PRODUCTS_DIR;
 		};
-		427787ED2149B96A0045AD7F /* libRCTOneSignal.a */ = {
+		78C398B91ACF4ADC00677621 /* libRCTLinking.a */ = {
 			isa = PBXReferenceProxy;
 			fileType = archive.ar;
-			path = libRCTOneSignal.a;
-			remoteRef = 427787EC2149B96A0045AD7F /* PBXContainerItemProxy */;
+			path = libRCTLinking.a;
+			remoteRef = 78C398B81ACF4ADC00677621 /* PBXContainerItemProxy */;
 			sourceTree = BUILT_PRODUCTS_DIR;
 		};
-		42B4B6CC219DD7CB00162F25 /* libRNScreens.a */ = {
+		79CEBFDC223011FE00D8F685 /* libBVLinearGradient.a */ = {
 			isa = PBXReferenceProxy;
 			fileType = archive.ar;
-			path = libRNScreens.a;
-			remoteRef = 42B4B6CB219DD7CB00162F25 /* PBXContainerItemProxy */;
+			path = libBVLinearGradient.a;
+			remoteRef = 79CEBFDB223011FE00D8F685 /* PBXContainerItemProxy */;
 			sourceTree = BUILT_PRODUCTS_DIR;
 		};
-		5E9157331DD0AC6500FF2AA8 /* libRCTAnimation.a */ = {
+		79CEBFDE223011FE00D8F685 /* libBVLinearGradient.a */ = {
 			isa = PBXReferenceProxy;
 			fileType = archive.ar;
-			path = libRCTAnimation.a;
-			remoteRef = 5E9157321DD0AC6500FF2AA8 /* PBXContainerItemProxy */;
+			path = libBVLinearGradient.a;
+			remoteRef = 79CEBFDD223011FE00D8F685 /* PBXContainerItemProxy */;
 			sourceTree = BUILT_PRODUCTS_DIR;
 		};
-		5E9157351DD0AC6500FF2AA8 /* libRCTAnimation.a */ = {
+		79CEBFE2223011FE00D8F685 /* libMusicControl.a */ = {
 			isa = PBXReferenceProxy;
 			fileType = archive.ar;
-			path = libRCTAnimation.a;
-			remoteRef = 5E9157341DD0AC6500FF2AA8 /* PBXContainerItemProxy */;
+			path = libMusicControl.a;
+			remoteRef = 79CEBFE1223011FE00D8F685 /* PBXContainerItemProxy */;
 			sourceTree = BUILT_PRODUCTS_DIR;
 		};
-		78C398B91ACF4ADC00677621 /* libRCTLinking.a */ = {
+		79CEBFE4223011FE00D8F685 /* libMusicControl-tvOS.a */ = {
 			isa = PBXReferenceProxy;
 			fileType = archive.ar;
-			path = libRCTLinking.a;
-			remoteRef = 78C398B81ACF4ADC00677621 /* PBXContainerItemProxy */;
+			path = "libMusicControl-tvOS.a";
+			remoteRef = 79CEBFE3223011FE00D8F685 /* PBXContainerItemProxy */;
 			sourceTree = BUILT_PRODUCTS_DIR;
 		};
-		791434772126017B006F13B7 /* libBVLinearGradient.a */ = {
+		79CEBFE7223011FE00D8F685 /* libRCTOneSignal.a */ = {
 			isa = PBXReferenceProxy;
 			fileType = archive.ar;
-			path = libBVLinearGradient.a;
-			remoteRef = 791434762126017B006F13B7 /* PBXContainerItemProxy */;
+			path = libRCTOneSignal.a;
+			remoteRef = 79CEBFE6223011FE00D8F685 /* PBXContainerItemProxy */;
 			sourceTree = BUILT_PRODUCTS_DIR;
 		};
-		791434792126017B006F13B7 /* libBVLinearGradient.a */ = {
+		79CEBFEB223011FE00D8F685 /* libReactNativeConfig.a */ = {
 			isa = PBXReferenceProxy;
 			fileType = archive.ar;
-			path = libBVLinearGradient.a;
-			remoteRef = 791434782126017B006F13B7 /* PBXContainerItemProxy */;
+			path = libReactNativeConfig.a;
+			remoteRef = 79CEBFEA223011FE00D8F685 /* PBXContainerItemProxy */;
 			sourceTree = BUILT_PRODUCTS_DIR;
 		};
-		7914347D2126017B006F13B7 /* libRCTVideo.a */ = {
+		79CEBFED223011FE00D8F685 /* libReactNativeConfig-tvOS.a */ = {
 			isa = PBXReferenceProxy;
 			fileType = archive.ar;
-			path = libRCTVideo.a;
-			remoteRef = 7914347C2126017B006F13B7 /* PBXContainerItemProxy */;
+			path = "libReactNativeConfig-tvOS.a";
+			remoteRef = 79CEBFEC223011FE00D8F685 /* PBXContainerItemProxy */;
 			sourceTree = BUILT_PRODUCTS_DIR;
 		};
-		7914347F2126017B006F13B7 /* libRCTVideo.a */ = {
+		79CEBFF3223011FE00D8F685 /* libRNAirplay.a */ = {
 			isa = PBXReferenceProxy;
 			fileType = archive.ar;
-			path = libRCTVideo.a;
-			remoteRef = 7914347E2126017B006F13B7 /* PBXContainerItemProxy */;
+			path = libRNAirplay.a;
+			remoteRef = 79CEBFF2223011FE00D8F685 /* PBXContainerItemProxy */;
 			sourceTree = BUILT_PRODUCTS_DIR;
 		};
-		791434822126017B006F13B7 /* libDBCustomTabs.a */ = {
+		79CEBFF6223011FE00D8F685 /* libRNCWebView.a */ = {
 			isa = PBXReferenceProxy;
 			fileType = archive.ar;
-			path = libDBCustomTabs.a;
-			remoteRef = 791434812126017B006F13B7 /* PBXContainerItemProxy */;
+			path = libRNCWebView.a;
+			remoteRef = 79CEBFF5223011FE00D8F685 /* PBXContainerItemProxy */;
 			sourceTree = BUILT_PRODUCTS_DIR;
 		};
-		791434862126017B006F13B7 /* libRNSVG.a */ = {
+		79CEBFFA223011FE00D8F685 /* libRNDeviceInfo.a */ = {
 			isa = PBXReferenceProxy;
 			fileType = archive.ar;
-			path = libRNSVG.a;
-			remoteRef = 791434852126017B006F13B7 /* PBXContainerItemProxy */;
+			path = libRNDeviceInfo.a;
+			remoteRef = 79CEBFF9223011FE00D8F685 /* PBXContainerItemProxy */;
 			sourceTree = BUILT_PRODUCTS_DIR;
 		};
-		791434882126017B006F13B7 /* libRNSVG-tvOS.a */ = {
+		79CEBFFC223011FE00D8F685 /* libRNDeviceInfo-tvOS.a */ = {
 			isa = PBXReferenceProxy;
 			fileType = archive.ar;
-			path = "libRNSVG-tvOS.a";
-			remoteRef = 791434872126017B006F13B7 /* PBXContainerItemProxy */;
+			path = "libRNDeviceInfo-tvOS.a";
+			remoteRef = 79CEBFFB223011FE00D8F685 /* PBXContainerItemProxy */;
 			sourceTree = BUILT_PRODUCTS_DIR;
 		};
-		7914348B2126017B006F13B7 /* libSafariViewManager.a */ = {
+		79CEBFFF223011FE00D8F685 /* libRNImagePicker.a */ = {
 			isa = PBXReferenceProxy;
 			fileType = archive.ar;
-			path = libSafariViewManager.a;
-			remoteRef = 7914348A2126017B006F13B7 /* PBXContainerItemProxy */;
+			path = libRNImagePicker.a;
+			remoteRef = 79CEBFFE223011FE00D8F685 /* PBXContainerItemProxy */;
 			sourceTree = BUILT_PRODUCTS_DIR;
 		};
-		7914348E2126017B006F13B7 /* libSplashScreen.a */ = {
+		79CEC005223011FE00D8F685 /* libSplashScreen.a */ = {
 			isa = PBXReferenceProxy;
 			fileType = archive.ar;
 			path = libSplashScreen.a;
-			remoteRef = 7914348D2126017B006F13B7 /* PBXContainerItemProxy */;
+			remoteRef = 79CEC004223011FE00D8F685 /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		79CEC00A223011FE00D8F685 /* libSafariViewManager.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libSafariViewManager.a;
+			remoteRef = 79CEC009223011FE00D8F685 /* PBXContainerItemProxy */;
 			sourceTree = BUILT_PRODUCTS_DIR;
 		};
-		794FE988219DF8880046142B /* libRNScreens.a */ = {
+		79CEC00F223011FE00D8F685 /* libRNScreens.a */ = {
 			isa = PBXReferenceProxy;
 			fileType = archive.ar;
 			path = libRNScreens.a;
-			remoteRef = 794FE987219DF8880046142B /* PBXContainerItemProxy */;
+			remoteRef = 79CEC00E223011FE00D8F685 /* PBXContainerItemProxy */;
 			sourceTree = BUILT_PRODUCTS_DIR;
 		};
-		796F2533212CAD5D00C6935E /* libRNDeviceInfo.a */ = {
+		79CEC015223011FE00D8F685 /* libRNSVG.a */ = {
 			isa = PBXReferenceProxy;
 			fileType = archive.ar;
-			path = libRNDeviceInfo.a;
-			remoteRef = 796F2532212CAD5D00C6935E /* PBXContainerItemProxy */;
+			path = libRNSVG.a;
+			remoteRef = 79CEC014223011FE00D8F685 /* PBXContainerItemProxy */;
 			sourceTree = BUILT_PRODUCTS_DIR;
 		};
-		796F2535212CAD5D00C6935E /* libRNDeviceInfo-tvOS.a */ = {
+		79CEC017223011FE00D8F685 /* libRNSVG-tvOS.a */ = {
 			isa = PBXReferenceProxy;
 			fileType = archive.ar;
-			path = "libRNDeviceInfo-tvOS.a";
-			remoteRef = 796F2534212CAD5D00C6935E /* PBXContainerItemProxy */;
+			path = "libRNSVG-tvOS.a";
+			remoteRef = 79CEC016223011FE00D8F685 /* PBXContainerItemProxy */;
 			sourceTree = BUILT_PRODUCTS_DIR;
 		};
-		797304192146322D00F6E05B /* libMusicControl.a */ = {
+		79CEC01D223011FE00D8F685 /* libRCTVideo.a */ = {
 			isa = PBXReferenceProxy;
 			fileType = archive.ar;
-			path = libMusicControl.a;
-			remoteRef = 797304182146322D00F6E05B /* PBXContainerItemProxy */;
+			path = libRCTVideo.a;
+			remoteRef = 79CEC01C223011FE00D8F685 /* PBXContainerItemProxy */;
 			sourceTree = BUILT_PRODUCTS_DIR;
 		};
-		7973041B2146322D00F6E05B /* libMusicControl-tvOS.a */ = {
+		79CEC01F223011FE00D8F685 /* libRCTVideo.a */ = {
 			isa = PBXReferenceProxy;
 			fileType = archive.ar;
-			path = "libMusicControl-tvOS.a";
-			remoteRef = 7973041A2146322D00F6E05B /* PBXContainerItemProxy */;
+			path = libRCTVideo.a;
+			remoteRef = 79CEC01E223011FE00D8F685 /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		79CEC024223011FF00D8F685 /* libRNFetchBlob.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libRNFetchBlob.a;
+			remoteRef = 79CEC023223011FF00D8F685 /* PBXContainerItemProxy */;
 			sourceTree = BUILT_PRODUCTS_DIR;
 		};
 		832341B51AAA6A8300B99B32 /* libRCTText.a */ = {
@@ -1568,11 +1674,46 @@
 			remoteRef = ADBDB9261DFEBF0700ED6528 /* PBXContainerItemProxy */;
 			sourceTree = BUILT_PRODUCTS_DIR;
 		};
-		BF9931712138673B0077FD20 /* libRNImagePicker.a */ = {
+		BF08F43022429D0700FFB1DC /* libjsi.a */ = {
 			isa = PBXReferenceProxy;
 			fileType = archive.ar;
-			path = libRNImagePicker.a;
-			remoteRef = BF9931702138673B0077FD20 /* PBXContainerItemProxy */;
+			path = libjsi.a;
+			remoteRef = BF08F42F22429D0700FFB1DC /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		BF08F43222429D0700FFB1DC /* libjsiexecutor.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libjsiexecutor.a;
+			remoteRef = BF08F43122429D0700FFB1DC /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		BF08F43422429D0700FFB1DC /* libjsi-tvOS.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = "libjsi-tvOS.a";
+			remoteRef = BF08F43322429D0700FFB1DC /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		BF08F43622429D0700FFB1DC /* libjsiexecutor-tvOS.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = "libjsiexecutor-tvOS.a";
+			remoteRef = BF08F43522429D0700FFB1DC /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		BF08F44A22429D0700FFB1DC /* libAirMaps.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libAirMaps.a;
+			remoteRef = BF08F44922429D0700FFB1DC /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		BF08F5192242B97A00FFB1DC /* libRNPassKit.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libRNPassKit.a;
+			remoteRef = BF08F5182242B97A00FFB1DC /* PBXContainerItemProxy */;
 			sourceTree = BUILT_PRODUCTS_DIR;
 		};
 /* End PBXReferenceProxy section */
@@ -1591,18 +1732,18 @@
 			files = (
 				13B07FBF1A68108700A75B9A /* Images.xcassets in Resources */,
 				13B07FBD1A68108700A75B9A /* LaunchScreen.xib in Resources */,
-				C87CA8735EEB43C4A55CB285 /* DroidSerif-Bold.ttf in Resources */,
-				59D8DFA78CDF4642892CC142 /* DroidSerif-BoldItalic.ttf in Resources */,
-				9ACBD642B18D41C9BB1E4D9E /* DroidSerif-Italic.ttf in Resources */,
-				D5744BF3B41D4BC49F93CD68 /* DroidSerif-Regular.ttf in Resources */,
-				417027FD83CA4902AB4DB2B4 /* Inter-UI-Black.otf in Resources */,
-				6E4442FB39BE4F898DE4C454 /* Inter-UI-BlackItalic.otf in Resources */,
-				F8FAD93CCE5641A8B87611EA /* Inter-UI-Bold.otf in Resources */,
-				E374C61F2AAF41D3B615AB44 /* Inter-UI-BoldItalic.otf in Resources */,
-				5CA1D8E805684478B04ABB60 /* Inter-UI-Italic.otf in Resources */,
-				A173C226549E48B991AC5D98 /* Inter-UI-Medium.otf in Resources */,
-				0D4EDF6EBA274F9D93DDED76 /* Inter-UI-MediumItalic.otf in Resources */,
-				7D060CA312AB4E828CD60DDC /* Inter-UI-Regular.otf in Resources */,
+				08CE105F17284254AD54AF84 /* DroidSerif-Bold.ttf in Resources */,
+				B02F194A3F6A4FE29AC799B4 /* DroidSerif-BoldItalic.ttf in Resources */,
+				90743C40BF544F10A810C43C /* DroidSerif-Italic.ttf in Resources */,
+				93A2B0A9328A46A4B7DD5EFA /* DroidSerif-Regular.ttf in Resources */,
+				68D1351E80AA4A2C96288FD9 /* Inter-UI-Black.otf in Resources */,
+				578FFEC1D7D54C9B871A9E5B /* Inter-UI-BlackItalic.otf in Resources */,
+				7FBC6BC3CE8D48298F9850A9 /* Inter-UI-Bold.otf in Resources */,
+				894732A70B4740678E85B593 /* Inter-UI-BoldItalic.otf in Resources */,
+				01F091B02048490A8F9EF4FE /* Inter-UI-Italic.otf in Resources */,
+				1C48DCDE11AC47C48E918489 /* Inter-UI-Medium.otf in Resources */,
+				FCB3069DB5DD4170B2CAEFC4 /* Inter-UI-MediumItalic.otf in Resources */,
+				AB3BD177B8A14193A5EEDDF8 /* Inter-UI-Regular.otf in Resources */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
@@ -1727,29 +1868,34 @@
 				);
 				HEADER_SEARCH_PATHS = (
 					"$(inherited)",
-					"$(SRCROOT)/../node_modules/react-native-custom-tabs/ios/ReactNativeCustomTabs",
+					"$(SRCROOT)/../node_modules/react-native-airplay-btn/ios",
+					"$(SRCROOT)/../node_modules/react-native-config/ios/ReactNativeConfig",
+					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
+					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
 					"$(SRCROOT)/../node_modules/react-native-linear-gradient/BVLinearGradient",
+					"$(SRCROOT)/../node_modules/react-native-music-control/ios",
+					"$(SRCROOT)/../node_modules/react-native-onesignal/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-safari-view",
+					"$(SRCROOT)/../node_modules/react-native-screens/ios",
 					"$(SRCROOT)/../node_modules/react-native-splash-screen/ios",
 					"$(SRCROOT)/../node_modules/react-native-svg/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-video/ios",
-					"$(SRCROOT)/../node_modules/react-native-onesignal/ios/**",
-					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
-					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
-					"$(SRCROOT)/../node_modules/react-native-music-control/ios",
-					"$(SRCROOT)/../node_modules/react-native-screens/ios",
+					"$(SRCROOT)/../node_modules/react-native-webview/ios",
+					"$(SRCROOT)/../node_modules/rn-fetch-blob/ios/**",
+					"$(SRCROOT)/../node_modules/react-native-maps/lib/ios/**",
+					"$(SRCROOT)/../node_modules/react-native-passkit-wallet/ios/RNPassKit",
 				);
 				INFOPLIST_FILE = apolloschurchappTests/Info.plist;
 				IPHONEOS_DEPLOYMENT_TARGET = 9.0;
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @loader_path/Frameworks";
 				LIBRARY_SEARCH_PATHS = (
 					"$(inherited)",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
 				);
 				OTHER_LDFLAGS = (
 					"-ObjC",
 					"-lc++",
 				);
+				PRODUCT_BUNDLE_IDENTIFIER = "org.reactjs.native.example.$(PRODUCT_NAME:rfc1034identifier)";
 				PRODUCT_NAME = "$(TARGET_NAME)";
 				TEST_HOST = "$(BUILT_PRODUCTS_DIR)/apolloschurchapp.app/apolloschurchapp";
 			};
@@ -1762,29 +1908,34 @@
 				COPY_PHASE_STRIP = NO;
 				HEADER_SEARCH_PATHS = (
 					"$(inherited)",
-					"$(SRCROOT)/../node_modules/react-native-custom-tabs/ios/ReactNativeCustomTabs",
+					"$(SRCROOT)/../node_modules/react-native-airplay-btn/ios",
+					"$(SRCROOT)/../node_modules/react-native-config/ios/ReactNativeConfig",
+					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
+					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
 					"$(SRCROOT)/../node_modules/react-native-linear-gradient/BVLinearGradient",
+					"$(SRCROOT)/../node_modules/react-native-music-control/ios",
+					"$(SRCROOT)/../node_modules/react-native-onesignal/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-safari-view",
+					"$(SRCROOT)/../node_modules/react-native-screens/ios",
 					"$(SRCROOT)/../node_modules/react-native-splash-screen/ios",
 					"$(SRCROOT)/../node_modules/react-native-svg/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-video/ios",
-					"$(SRCROOT)/../node_modules/react-native-onesignal/ios/**",
-					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
-					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
-					"$(SRCROOT)/../node_modules/react-native-music-control/ios",
-					"$(SRCROOT)/../node_modules/react-native-screens/ios",
+					"$(SRCROOT)/../node_modules/react-native-webview/ios",
+					"$(SRCROOT)/../node_modules/rn-fetch-blob/ios/**",
+					"$(SRCROOT)/../node_modules/react-native-maps/lib/ios/**",
+					"$(SRCROOT)/../node_modules/react-native-passkit-wallet/ios/RNPassKit",
 				);
 				INFOPLIST_FILE = apolloschurchappTests/Info.plist;
 				IPHONEOS_DEPLOYMENT_TARGET = 9.0;
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @loader_path/Frameworks";
 				LIBRARY_SEARCH_PATHS = (
 					"$(inherited)",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
 				);
 				OTHER_LDFLAGS = (
 					"-ObjC",
 					"-lc++",
 				);
+				PRODUCT_BUNDLE_IDENTIFIER = "org.reactjs.native.example.$(PRODUCT_NAME:rfc1034identifier)";
 				PRODUCT_NAME = "$(TARGET_NAME)";
 				TEST_HOST = "$(BUILT_PRODUCTS_DIR)/apolloschurchapp.app/apolloschurchapp";
 			};
@@ -1794,24 +1945,27 @@
 			isa = XCBuildConfiguration;
 			buildSettings = {
 				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
-				CODE_SIGN_ENTITLEMENTS = apolloschurchapp/apolloschurchapp.entitlements;
-				CODE_SIGN_IDENTITY = "iPhone Developer";
-				CURRENT_PROJECT_VERSION = 5;
+				CURRENT_PROJECT_VERSION = 6;
 				DEAD_CODE_STRIPPING = NO;
 				DEVELOPMENT_TEAM = 7TM8C6252Z;
 				HEADER_SEARCH_PATHS = (
 					"$(inherited)",
-					"$(SRCROOT)/../node_modules/react-native-custom-tabs/ios/ReactNativeCustomTabs",
+					"$(SRCROOT)/../node_modules/react-native-airplay-btn/ios",
+					"$(SRCROOT)/../node_modules/react-native-config/ios/ReactNativeConfig",
+					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
+					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
 					"$(SRCROOT)/../node_modules/react-native-linear-gradient/BVLinearGradient",
+					"$(SRCROOT)/../node_modules/react-native-music-control/ios",
+					"$(SRCROOT)/../node_modules/react-native-onesignal/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-safari-view",
+					"$(SRCROOT)/../node_modules/react-native-screens/ios",
 					"$(SRCROOT)/../node_modules/react-native-splash-screen/ios",
 					"$(SRCROOT)/../node_modules/react-native-svg/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-video/ios",
-					"$(SRCROOT)/../node_modules/react-native-onesignal/ios/**",
-					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
-					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
-					"$(SRCROOT)/../node_modules/react-native-music-control/ios",
-					"$(SRCROOT)/../node_modules/react-native-screens/ios",
+					"$(SRCROOT)/../node_modules/react-native-webview/ios",
+					"$(SRCROOT)/../node_modules/rn-fetch-blob/ios/**",
+					"$(SRCROOT)/../node_modules/react-native-maps/lib/ios/**",
+					"$(SRCROOT)/../node_modules/react-native-passkit-wallet/ios/RNPassKit",
 				);
 				INFOPLIST_FILE = apolloschurchapp/Info.plist;
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
@@ -1820,7 +1974,9 @@
 					"-ObjC",
 					"-lc++",
 				);
+				PRODUCT_BUNDLE_IDENTIFIER = "org.reactjs.native.example.$(PRODUCT_NAME:rfc1034identifier)";
 				PRODUCT_NAME = apolloschurchapp;
+				PROVISIONING_PROFILE_SPECIFIER = "";
 				VERSIONING_SYSTEM = "apple-generic";
 			};
 			name = Debug;
@@ -1829,23 +1985,25 @@
 			isa = XCBuildConfiguration;
 			buildSettings = {
 				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
-				CODE_SIGN_ENTITLEMENTS = apolloschurchapp/apolloschurchapp.entitlements;
-				CODE_SIGN_IDENTITY = "iPhone Developer";
-				CURRENT_PROJECT_VERSION = 5;
-				DEVELOPMENT_TEAM = 7TM8C6252Z;
+				CURRENT_PROJECT_VERSION = 6;
 				HEADER_SEARCH_PATHS = (
 					"$(inherited)",
-					"$(SRCROOT)/../node_modules/react-native-custom-tabs/ios/ReactNativeCustomTabs",
+					"$(SRCROOT)/../node_modules/react-native-airplay-btn/ios",
+					"$(SRCROOT)/../node_modules/react-native-config/ios/ReactNativeConfig",
+					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
+					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
 					"$(SRCROOT)/../node_modules/react-native-linear-gradient/BVLinearGradient",
+					"$(SRCROOT)/../node_modules/react-native-music-control/ios",
+					"$(SRCROOT)/../node_modules/react-native-onesignal/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-safari-view",
+					"$(SRCROOT)/../node_modules/react-native-screens/ios",
 					"$(SRCROOT)/../node_modules/react-native-splash-screen/ios",
 					"$(SRCROOT)/../node_modules/react-native-svg/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-video/ios",
-					"$(SRCROOT)/../node_modules/react-native-onesignal/ios/**",
-					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
-					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
-					"$(SRCROOT)/../node_modules/react-native-music-control/ios",
-					"$(SRCROOT)/../node_modules/react-native-screens/ios",
+					"$(SRCROOT)/../node_modules/react-native-webview/ios",
+					"$(SRCROOT)/../node_modules/rn-fetch-blob/ios/**",
+					"$(SRCROOT)/../node_modules/react-native-maps/lib/ios/**",
+					"$(SRCROOT)/../node_modules/react-native-passkit-wallet/ios/RNPassKit",
 				);
 				INFOPLIST_FILE = apolloschurchapp/Info.plist;
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
@@ -1854,7 +2012,9 @@
 					"-ObjC",
 					"-lc++",
 				);
+				PRODUCT_BUNDLE_IDENTIFIER = "org.reactjs.native.example.$(PRODUCT_NAME:rfc1034identifier)";
 				PRODUCT_NAME = apolloschurchapp;
+				PROVISIONING_PROFILE_SPECIFIER = "";
 				VERSIONING_SYSTEM = "apple-generic";
 			};
 			name = Release;
@@ -1873,29 +2033,33 @@
 				GCC_NO_COMMON_BLOCKS = YES;
 				HEADER_SEARCH_PATHS = (
 					"$(inherited)",
-					"$(SRCROOT)/../node_modules/react-native-custom-tabs/ios/ReactNativeCustomTabs",
+					"$(SRCROOT)/../node_modules/react-native-airplay-btn/ios",
+					"$(SRCROOT)/../node_modules/react-native-config/ios/ReactNativeConfig",
+					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
+					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
 					"$(SRCROOT)/../node_modules/react-native-linear-gradient/BVLinearGradient",
+					"$(SRCROOT)/../node_modules/react-native-music-control/ios",
+					"$(SRCROOT)/../node_modules/react-native-onesignal/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-safari-view",
+					"$(SRCROOT)/../node_modules/react-native-screens/ios",
 					"$(SRCROOT)/../node_modules/react-native-splash-screen/ios",
 					"$(SRCROOT)/../node_modules/react-native-svg/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-video/ios",
-					"$(SRCROOT)/../node_modules/react-native-onesignal/ios/**",
-					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
-					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
-					"$(SRCROOT)/../node_modules/react-native-music-control/ios",
-					"$(SRCROOT)/../node_modules/react-native-screens/ios",
+					"$(SRCROOT)/../node_modules/react-native-webview/ios",
+					"$(SRCROOT)/../node_modules/rn-fetch-blob/ios/**",
+					"$(SRCROOT)/../node_modules/react-native-maps/lib/ios/**",
+					"$(SRCROOT)/../node_modules/react-native-passkit-wallet/ios/RNPassKit",
 				);
 				INFOPLIST_FILE = "apolloschurchapp-tvOS/Info.plist";
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
 				LIBRARY_SEARCH_PATHS = (
 					"$(inherited)",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
 				);
 				OTHER_LDFLAGS = (
 					"-ObjC",
 					"-lc++",
 				);
-				PRODUCT_BUNDLE_IDENTIFIER = "org.reactjs.native.apolloschurchapp-tvOS";
+				PRODUCT_BUNDLE_IDENTIFIER = "com.facebook.REACT.apolloschurchapp-tvOS";
 				PRODUCT_NAME = "$(TARGET_NAME)";
 				SDKROOT = appletvos;
 				TARGETED_DEVICE_FAMILY = 3;
@@ -1917,29 +2081,33 @@
 				GCC_NO_COMMON_BLOCKS = YES;
 				HEADER_SEARCH_PATHS = (
 					"$(inherited)",
-					"$(SRCROOT)/../node_modules/react-native-custom-tabs/ios/ReactNativeCustomTabs",
+					"$(SRCROOT)/../node_modules/react-native-airplay-btn/ios",
+					"$(SRCROOT)/../node_modules/react-native-config/ios/ReactNativeConfig",
+					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
+					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
 					"$(SRCROOT)/../node_modules/react-native-linear-gradient/BVLinearGradient",
+					"$(SRCROOT)/../node_modules/react-native-music-control/ios",
+					"$(SRCROOT)/../node_modules/react-native-onesignal/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-safari-view",
+					"$(SRCROOT)/../node_modules/react-native-screens/ios",
 					"$(SRCROOT)/../node_modules/react-native-splash-screen/ios",
 					"$(SRCROOT)/../node_modules/react-native-svg/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-video/ios",
-					"$(SRCROOT)/../node_modules/react-native-onesignal/ios/**",
-					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
-					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
-					"$(SRCROOT)/../node_modules/react-native-music-control/ios",
-					"$(SRCROOT)/../node_modules/react-native-screens/ios",
+					"$(SRCROOT)/../node_modules/react-native-webview/ios",
+					"$(SRCROOT)/../node_modules/rn-fetch-blob/ios/**",
+					"$(SRCROOT)/../node_modules/react-native-maps/lib/ios/**",
+					"$(SRCROOT)/../node_modules/react-native-passkit-wallet/ios/RNPassKit",
 				);
 				INFOPLIST_FILE = "apolloschurchapp-tvOS/Info.plist";
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
 				LIBRARY_SEARCH_PATHS = (
 					"$(inherited)",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
 				);
 				OTHER_LDFLAGS = (
 					"-ObjC",
 					"-lc++",
 				);
-				PRODUCT_BUNDLE_IDENTIFIER = "org.reactjs.native.apolloschurchapp-tvOS";
+				PRODUCT_BUNDLE_IDENTIFIER = "com.facebook.REACT.apolloschurchapp-tvOS";
 				PRODUCT_NAME = "$(TARGET_NAME)";
 				SDKROOT = appletvos;
 				TARGETED_DEVICE_FAMILY = 3;
@@ -1960,29 +2128,33 @@
 				GCC_NO_COMMON_BLOCKS = YES;
 				HEADER_SEARCH_PATHS = (
 					"$(inherited)",
-					"$(SRCROOT)/../node_modules/react-native-custom-tabs/ios/ReactNativeCustomTabs",
+					"$(SRCROOT)/../node_modules/react-native-airplay-btn/ios",
+					"$(SRCROOT)/../node_modules/react-native-config/ios/ReactNativeConfig",
+					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
+					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
 					"$(SRCROOT)/../node_modules/react-native-linear-gradient/BVLinearGradient",
+					"$(SRCROOT)/../node_modules/react-native-music-control/ios",
+					"$(SRCROOT)/../node_modules/react-native-onesignal/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-safari-view",
+					"$(SRCROOT)/../node_modules/react-native-screens/ios",
 					"$(SRCROOT)/../node_modules/react-native-splash-screen/ios",
 					"$(SRCROOT)/../node_modules/react-native-svg/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-video/ios",
-					"$(SRCROOT)/../node_modules/react-native-onesignal/ios/**",
-					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
-					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
-					"$(SRCROOT)/../node_modules/react-native-music-control/ios",
-					"$(SRCROOT)/../node_modules/react-native-screens/ios",
+					"$(SRCROOT)/../node_modules/react-native-webview/ios",
+					"$(SRCROOT)/../node_modules/rn-fetch-blob/ios/**",
+					"$(SRCROOT)/../node_modules/react-native-maps/lib/ios/**",
+					"$(SRCROOT)/../node_modules/react-native-passkit-wallet/ios/RNPassKit",
 				);
 				INFOPLIST_FILE = "apolloschurchapp-tvOSTests/Info.plist";
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @loader_path/Frameworks";
 				LIBRARY_SEARCH_PATHS = (
 					"$(inherited)",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
 				);
 				OTHER_LDFLAGS = (
 					"-ObjC",
 					"-lc++",
 				);
-				PRODUCT_BUNDLE_IDENTIFIER = "org.reactjs.native.apolloschurchapp-tvOSTests";
+				PRODUCT_BUNDLE_IDENTIFIER = "com.facebook.REACT.apolloschurchapp-tvOSTests";
 				PRODUCT_NAME = "$(TARGET_NAME)";
 				SDKROOT = appletvos;
 				TEST_HOST = "$(BUILT_PRODUCTS_DIR)/apolloschurchapp-tvOS.app/apolloschurchapp-tvOS";
@@ -2003,29 +2175,33 @@
 				GCC_NO_COMMON_BLOCKS = YES;
 				HEADER_SEARCH_PATHS = (
 					"$(inherited)",
-					"$(SRCROOT)/../node_modules/react-native-custom-tabs/ios/ReactNativeCustomTabs",
+					"$(SRCROOT)/../node_modules/react-native-airplay-btn/ios",
+					"$(SRCROOT)/../node_modules/react-native-config/ios/ReactNativeConfig",
+					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
+					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
 					"$(SRCROOT)/../node_modules/react-native-linear-gradient/BVLinearGradient",
+					"$(SRCROOT)/../node_modules/react-native-music-control/ios",
+					"$(SRCROOT)/../node_modules/react-native-onesignal/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-safari-view",
+					"$(SRCROOT)/../node_modules/react-native-screens/ios",
 					"$(SRCROOT)/../node_modules/react-native-splash-screen/ios",
 					"$(SRCROOT)/../node_modules/react-native-svg/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-video/ios",
-					"$(SRCROOT)/../node_modules/react-native-onesignal/ios/**",
-					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
-					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
-					"$(SRCROOT)/../node_modules/react-native-music-control/ios",
-					"$(SRCROOT)/../node_modules/react-native-screens/ios",
+					"$(SRCROOT)/../node_modules/react-native-webview/ios",
+					"$(SRCROOT)/../node_modules/rn-fetch-blob/ios/**",
+					"$(SRCROOT)/../node_modules/react-native-maps/lib/ios/**",
+					"$(SRCROOT)/../node_modules/react-native-passkit-wallet/ios/RNPassKit",
 				);
 				INFOPLIST_FILE = "apolloschurchapp-tvOSTests/Info.plist";
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @loader_path/Frameworks";
 				LIBRARY_SEARCH_PATHS = (
 					"$(inherited)",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
 				);
 				OTHER_LDFLAGS = (
 					"-ObjC",
 					"-lc++",
 				);
-				PRODUCT_BUNDLE_IDENTIFIER = "org.reactjs.native.apolloschurchapp-tvOSTests";
+				PRODUCT_BUNDLE_IDENTIFIER = "com.facebook.REACT.apolloschurchapp-tvOSTests";
 				PRODUCT_NAME = "$(TARGET_NAME)";
 				SDKROOT = appletvos;
 				TEST_HOST = "$(BUILT_PRODUCTS_DIR)/apolloschurchapp-tvOS.app/apolloschurchapp-tvOS";
@@ -2041,20 +2217,32 @@
 				CLANG_CXX_LIBRARY = "libc++";
 				CLANG_ENABLE_MODULES = YES;
 				CLANG_ENABLE_OBJC_ARC = YES;
+				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
 				CLANG_WARN_BOOL_CONVERSION = YES;
+				CLANG_WARN_COMMA = YES;
 				CLANG_WARN_CONSTANT_CONVERSION = YES;
+				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
 				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
 				CLANG_WARN_EMPTY_BODY = YES;
 				CLANG_WARN_ENUM_CONVERSION = YES;
+				CLANG_WARN_INFINITE_RECURSION = YES;
 				CLANG_WARN_INT_CONVERSION = YES;
+				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
+				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
+				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
 				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
+				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
+				CLANG_WARN_STRICT_PROTOTYPES = YES;
+				CLANG_WARN_SUSPICIOUS_MOVE = YES;
 				CLANG_WARN_UNREACHABLE_CODE = YES;
 				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
 				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "iPhone Developer";
 				COPY_PHASE_STRIP = NO;
 				ENABLE_STRICT_OBJC_MSGSEND = YES;
+				ENABLE_TESTABILITY = YES;
 				GCC_C_LANGUAGE_STANDARD = gnu99;
 				GCC_DYNAMIC_NO_PIC = NO;
+				GCC_NO_COMMON_BLOCKS = YES;
 				GCC_OPTIMIZATION_LEVEL = 0;
 				GCC_PREPROCESSOR_DEFINITIONS = (
 					"DEBUG=1",
@@ -2082,13 +2270,23 @@
 				CLANG_CXX_LIBRARY = "libc++";
 				CLANG_ENABLE_MODULES = YES;
 				CLANG_ENABLE_OBJC_ARC = YES;
+				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
 				CLANG_WARN_BOOL_CONVERSION = YES;
+				CLANG_WARN_COMMA = YES;
 				CLANG_WARN_CONSTANT_CONVERSION = YES;
+				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
 				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
 				CLANG_WARN_EMPTY_BODY = YES;
 				CLANG_WARN_ENUM_CONVERSION = YES;
+				CLANG_WARN_INFINITE_RECURSION = YES;
 				CLANG_WARN_INT_CONVERSION = YES;
+				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
+				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
+				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
 				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
+				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
+				CLANG_WARN_STRICT_PROTOTYPES = YES;
+				CLANG_WARN_SUSPICIOUS_MOVE = YES;
 				CLANG_WARN_UNREACHABLE_CODE = YES;
 				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
 				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "iPhone Developer";
@@ -2096,6 +2294,7 @@
 				ENABLE_NS_ASSERTIONS = NO;
 				ENABLE_STRICT_OBJC_MSGSEND = YES;
 				GCC_C_LANGUAGE_STANDARD = gnu99;
+				GCC_NO_COMMON_BLOCKS = YES;
 				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
 				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
 				GCC_WARN_UNDECLARED_SELECTOR = YES;
diff --git a/apolloschurchapp/ios/apolloschurchapp/AppDelegate.h b/apolloschurchapp/ios/apolloschurchapp/AppDelegate.h
index d4f2580..4b5644f 100644
--- a/apolloschurchapp/ios/apolloschurchapp/AppDelegate.h
+++ b/apolloschurchapp/ios/apolloschurchapp/AppDelegate.h
@@ -1,5 +1,5 @@
 /**
- * Copyright (c) 2015-present, Facebook, Inc.
+ * Copyright (c) Facebook, Inc. and its affiliates.
  *
  * This source code is licensed under the MIT license found in the
  * LICENSE file in the root directory of this source tree.
diff --git a/apolloschurchapp/ios/apolloschurchapp/AppDelegate.m b/apolloschurchapp/ios/apolloschurchapp/AppDelegate.m
index 9d889ed..af4f8d1 100644
--- a/apolloschurchapp/ios/apolloschurchapp/AppDelegate.m
+++ b/apolloschurchapp/ios/apolloschurchapp/AppDelegate.m
@@ -1,5 +1,5 @@
 /**
- * Copyright (c) 2015-present, Facebook, Inc.
+ * Copyright (c) Facebook, Inc. and its affiliates.
  *
  * This source code is licensed under the MIT license found in the
  * LICENSE file in the root directory of this source tree.
diff --git a/apolloschurchapp/ios/apolloschurchapp/Base.lproj/LaunchScreen.xib b/apolloschurchapp/ios/apolloschurchapp/Base.lproj/LaunchScreen.xib
index 035b378..4ca705c 100644
--- a/apolloschurchapp/ios/apolloschurchapp/Base.lproj/LaunchScreen.xib
+++ b/apolloschurchapp/ios/apolloschurchapp/Base.lproj/LaunchScreen.xib
@@ -1,11 +1,11 @@
 <?xml version="1.0" encoding="UTF-8"?>
-<document type="com.apple.InterfaceBuilder3.CocoaTouch.XIB" version="3.0" toolsVersion="14113" targetRuntime="iOS.CocoaTouch" propertyAccessControl="none" useAutolayout="YES" launchScreen="YES" useTraitCollections="YES" colorMatched="YES">
+<document type="com.apple.InterfaceBuilder3.CocoaTouch.XIB" version="3.0" toolsVersion="14490.70" targetRuntime="iOS.CocoaTouch" propertyAccessControl="none" useAutolayout="YES" launchScreen="YES" useTraitCollections="YES" colorMatched="YES">
     <device id="retina5_5" orientation="portrait">
         <adaptation id="fullscreen"/>
     </device>
     <dependencies>
         <deployment identifier="iOS"/>
-        <plugIn identifier="com.apple.InterfaceBuilder.IBCocoaTouchPlugin" version="14088"/>
+        <plugIn identifier="com.apple.InterfaceBuilder.IBCocoaTouchPlugin" version="14490.49"/>
         <capability name="documents saved in the Xcode 8 format" minToolsVersion="8.0"/>
     </dependencies>
     <objects>
@@ -15,18 +15,22 @@
             <rect key="frame" x="0.0" y="0.0" width="414" height="736"/>
             <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
             <subviews>
+                <imageView clipsSubviews="YES" userInteractionEnabled="NO" contentMode="scaleToFill" horizontalHuggingPriority="251" verticalHuggingPriority="251" fixedFrame="YES" image="splash_bg" translatesAutoresizingMaskIntoConstraints="NO" id="iGM-E3-lqn">
+                    <rect key="frame" x="-12" y="-10" width="437" height="758"/>
+                    <autoresizingMask key="autoresizingMask" flexibleMinX="YES" widthSizable="YES" flexibleMaxX="YES" flexibleMinY="YES" heightSizable="YES" flexibleMaxY="YES"/>
+                </imageView>
                 <imageView userInteractionEnabled="NO" contentMode="scaleAspectFit" horizontalHuggingPriority="251" verticalHuggingPriority="251" fixedFrame="YES" image="splash-icon" translatesAutoresizingMaskIntoConstraints="NO" id="6Je-Yv-1Zj">
                     <rect key="frame" x="157" y="288" width="100" height="100"/>
                     <autoresizingMask key="autoresizingMask" flexibleMinX="YES" widthSizable="YES" flexibleMaxX="YES" flexibleMinY="YES" heightSizable="YES" flexibleMaxY="YES"/>
                 </imageView>
             </subviews>
-            <color key="backgroundColor" red="0.0" green="0.40392156862745099" blue="0.42745098039215684" alpha="1" colorSpace="custom" customColorSpace="sRGB"/>
             <nil key="simulatedStatusBarMetrics"/>
             <modalPageSheetSimulatedSizeMetrics key="simulatedDestinationMetrics"/>
-            <point key="canvasLocation" x="546" y="454"/>
+            <point key="canvasLocation" x="544.92753623188412" y="453.26086956521743"/>
         </view>
     </objects>
     <resources>
         <image name="splash-icon" width="94" height="99"/>
+        <image name="splash_bg" width="721" height="721"/>
     </resources>
-</document>
\ No newline at end of file
+</document>
diff --git a/apolloschurchapp/ios/apolloschurchapp/Images.xcassets/Contents.json b/apolloschurchapp/ios/apolloschurchapp/Images.xcassets/Contents.json
index 2d92bd5..da4a164 100644
--- a/apolloschurchapp/ios/apolloschurchapp/Images.xcassets/Contents.json
+++ b/apolloschurchapp/ios/apolloschurchapp/Images.xcassets/Contents.json
@@ -3,4 +3,4 @@
     "version" : 1,
     "author" : "xcode"
   }
-}
+}
\ No newline at end of file
diff --git a/apolloschurchapp/ios/apolloschurchapp/Images.xcassets/splash_bg.imageset/Contents.json b/apolloschurchapp/ios/apolloschurchapp/Images.xcassets/splash_bg.imageset/Contents.json
new file mode 100644
index 0000000..8939b14
--- /dev/null
+++ b/apolloschurchapp/ios/apolloschurchapp/Images.xcassets/splash_bg.imageset/Contents.json
@@ -0,0 +1,21 @@
+{
+  "images" : [
+    {
+      "idiom" : "universal",
+      "filename" : "splash_bg.png",
+      "scale" : "1x"
+    },
+    {
+      "idiom" : "universal",
+      "scale" : "2x"
+    },
+    {
+      "idiom" : "universal",
+      "scale" : "3x"
+    }
+  ],
+  "info" : {
+    "version" : 1,
+    "author" : "xcode"
+  }
+}
\ No newline at end of file
diff --git a/apolloschurchapp/ios/apolloschurchapp/Images.xcassets/splash_bg.imageset/splash_bg.png b/apolloschurchapp/ios/apolloschurchapp/Images.xcassets/splash_bg.imageset/splash_bg.png
new file mode 100644
index 0000000000000000000000000000000000000000..315d8e09ac4fd5f51176da24982baad2115fa027
GIT binary patch
literal 11471
zcmeAS@N?(olHy`uVBq!ia0y~yV7dsx9Be?5xhMa#GcYJHc)B=-RK&f#rYOYZDB^tZ
z=H*2eyj_=_M49$pT<`AhvTNUo(sMs$`WYCRSU3a}92yuJZ!=xbcd?(ho!L$Z#0N`w
zaPNsf-r*PD@CmAlk!f>-pzUN%uojS#E37>)ezCsrhiXtT;Fh>(JQHrLL+pW$b@2`V
zMzsTjWHjhTlg((B87(fLrQ>K(Ia*BsYueE&a<q8>Zf}h?4@R2@qs@cS=D}$5V6+!G
z+Jgqw1*1))(WcR8(`a<S4K^M*I@mZm&<Yw!9vwLu9XT0o9*j<`KxVE+Css!1<G|(N
zX!BsSc`({MK+L~8to{|vz`)Z5S_?2*U5-|lqt)eTQ(?5JFxpfYU9vU0Ty1m|WptS$
xWKrhmB+KX|3r!|j{weR`TWF71VC?vS+x%;O<pqA37~n!>22WQ%mvv4FO#m9H?QQ@7

literal 0
HcmV?d00001

diff --git a/apolloschurchapp/ios/apolloschurchapp/Info.plist b/apolloschurchapp/ios/apolloschurchapp/Info.plist
index 0d5c926..44d7b82 100644
--- a/apolloschurchapp/ios/apolloschurchapp/Info.plist
+++ b/apolloschurchapp/ios/apolloschurchapp/Info.plist
@@ -2,15 +2,6 @@
 <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
 <plist version="1.0">
 <dict>
-	<key>CFBundleURLTypes</key>
-	<array>
-		<dict>
-			<key>CFBundleURLSchemes</key>
-			<array>
-				<string>apolloschurchapp</string>
-			</array>
-		</dict>
-	</array>
 	<key>CFBundleDevelopmentRegion</key>
 	<string>en</string>
 	<key>CFBundleDisplayName</key>
@@ -18,7 +9,7 @@
 	<key>CFBundleExecutable</key>
 	<string>$(EXECUTABLE_NAME)</string>
 	<key>CFBundleIdentifier</key>
-	<string>org.reactjs.native.$(PRODUCT_NAME:rfc1034identifier)</string>
+	<string>$(PRODUCT_BUNDLE_IDENTIFIER)</string>
 	<key>CFBundleInfoDictionaryVersion</key>
 	<string>6.0</string>
 	<key>CFBundleName</key>
@@ -26,17 +17,28 @@
 	<key>CFBundlePackageType</key>
 	<string>APPL</string>
 	<key>CFBundleShortVersionString</key>
-	<string>0.7.0</string>
+	<string>0.8.5</string>
 	<key>CFBundleSignature</key>
 	<string>????</string>
+	<key>CFBundleURLTypes</key>
+	<array>
+		<dict>
+			<key>CFBundleURLSchemes</key>
+			<array>
+				<string>apolloschurchapp</string>
+			</array>
+		</dict>
+	</array>
 	<key>CFBundleVersion</key>
-	<string>5</string>
+	<string>11</string>
 	<key>ITSAppUsesNonExemptEncryption</key>
 	<false />
 	<key>LSRequiresIPhoneOS</key>
 	<true />
 	<key>NSAppTransportSecurity</key>
 	<dict>
+		<key>NSAllowsArbitraryLoads</key>
+		<true />
 		<key>NSExceptionDomains</key>
 		<dict>
 			<key>embed.wistia.com</key>
@@ -51,8 +53,16 @@
 			</dict>
 		</dict>
 	</dict>
+	<key>NSCameraUsageDescription</key>
+	<string>$(PRODUCT_NAME) would like to use your camera (for uploading profile pictures)</string>
 	<key>NSLocationWhenInUseUsageDescription</key>
 	<string />
+	<key>NSMicrophoneUsageDescription</key>
+	<string>$(PRODUCT_NAME) would like to your microphone (for videos)</string>
+	<key>NSPhotoLibraryAddUsageDescription</key>
+	<string>$(PRODUCT_NAME) would like to save photos to your photo gallery (for uploading profile pictures)</string>
+	<key>NSPhotoLibraryUsageDescription</key>
+	<string>$(PRODUCT_NAME) would like access to your photo gallery (for uploading profile pictures)</string>
 	<key>UIAppFonts</key>
 	<array>
 		<string>DroidSerif-Bold.ttf</string>
@@ -68,11 +78,6 @@
 		<string>Inter-UI-MediumItalic.otf</string>
 		<string>Inter-UI-Regular.otf</string>
 	</array>
-	<key>UIBackgroundModes</key>
-	<array>
-		<string>audio</string>
-		<string>remote-notification</string>
-	</array>
 	<key>UILaunchStoryboardName</key>
 	<string>LaunchScreen</string>
 	<key>UIRequiredDeviceCapabilities</key>
@@ -89,13 +94,5 @@
 	</array>
 	<key>UIViewControllerBasedStatusBarAppearance</key>
 	<false />
-	<key>NSPhotoLibraryUsageDescription</key>
-	<string>$(PRODUCT_NAME) would like access to your photo gallery (for uploading profile pictures)</string>
-	<key>NSCameraUsageDescription</key>
-	<string>$(PRODUCT_NAME) would like to use your camera (for uploading profile pictures)</string>
-	<key>NSPhotoLibraryAddUsageDescription</key>
-	<string>$(PRODUCT_NAME) would like to save photos to your photo gallery (for uploading profile pictures)</string>
-	<key>NSMicrophoneUsageDescription</key>
-	<string>$(PRODUCT_NAME) would like to your microphone (for videos)</string>
 </dict>
 </plist>
diff --git a/apolloschurchapp/ios/apolloschurchapp/main.m b/apolloschurchapp/ios/apolloschurchapp/main.m
index c73e006..d9c4112 100644
--- a/apolloschurchapp/ios/apolloschurchapp/main.m
+++ b/apolloschurchapp/ios/apolloschurchapp/main.m
@@ -1,5 +1,5 @@
 /**
- * Copyright (c) 2015-present, Facebook, Inc.
+ * Copyright (c) Facebook, Inc. and its affiliates.
  *
  * This source code is licensed under the MIT license found in the
  * LICENSE file in the root directory of this source tree.
@@ -14,3 +14,4 @@ int main(int argc, char * argv[]) {
     return UIApplicationMain(argc, argv, nil, NSStringFromClass([AppDelegate class]));
   }
 }
+          
diff --git a/apolloschurchapp/ios/apolloschurchappTests/Info.plist b/apolloschurchapp/ios/apolloschurchappTests/Info.plist
index e358b6d..b4de62d 100644
--- a/apolloschurchapp/ios/apolloschurchappTests/Info.plist
+++ b/apolloschurchapp/ios/apolloschurchappTests/Info.plist
@@ -7,7 +7,7 @@
 	<key>CFBundleExecutable</key>
 	<string>$(EXECUTABLE_NAME)</string>
 	<key>CFBundleIdentifier</key>
-	<string>org.reactjs.native.example.$(PRODUCT_NAME:rfc1034identifier)</string>
+	<string>$(PRODUCT_BUNDLE_IDENTIFIER)</string>
 	<key>CFBundleInfoDictionaryVersion</key>
 	<string>6.0</string>
 	<key>CFBundleName</key>
@@ -15,10 +15,10 @@
 	<key>CFBundlePackageType</key>
 	<string>BNDL</string>
 	<key>CFBundleShortVersionString</key>
-	<string>0.7.0</string>
+	<string>0.8.5</string>
 	<key>CFBundleSignature</key>
 	<string>????</string>
 	<key>CFBundleVersion</key>
-	<string>5</string>
+	<string>10</string>
 </dict>
 </plist>
diff --git a/apolloschurchapp/ios/apolloschurchappTests/apolloschurchappTests.m b/apolloschurchapp/ios/apolloschurchappTests/apolloschurchappTests.m
index 5b96cea..8b9d30b 100644
--- a/apolloschurchapp/ios/apolloschurchappTests/apolloschurchappTests.m
+++ b/apolloschurchapp/ios/apolloschurchappTests/apolloschurchappTests.m
@@ -1,5 +1,5 @@
 /**
- * Copyright (c) 2015-present, Facebook, Inc.
+ * Copyright (c) Facebook, Inc. and its affiliates.
  *
  * This source code is licensed under the MIT license found in the
  * LICENSE file in the root directory of this source tree.
diff --git a/apolloschurchapp/jest.setup.js b/apolloschurchapp/jest.setup.js
index 03cd103..fcdc84a 100644
--- a/apolloschurchapp/jest.setup.js
+++ b/apolloschurchapp/jest.setup.js
@@ -1,19 +1,50 @@
-jest.mock('./src/client/index');
-jest.mock('./src/config', () => ({
+// We ran into an issue where SafeAreaView would break jest tests.
+jest.mock('react-navigation', () => {
+  const ActualNavigation = require.requireActual('react-navigation');
+  return {
+    ...ActualNavigation,
+    SafeAreaView: require.requireActual('SafeAreaView'),
+  };
+});
+
+jest.mock('react-native-config', () => ({
   ONE_SIGNAL_KEY: 'doesntmatter',
 }));
-jest.mock('react-native-custom-tabs', () => ({
-  CustomTabs: {
-    openURL: jest.fn(),
-  },
-}));
+jest.mock('Animated', () => {
+  const ActualAnimated = require.requireActual('Animated');
+  return {
+    ...ActualAnimated,
+    timing: (value, config) => ({
+      start: (callback) => {
+        value.setValue(config.toValue);
+        callback && callback();
+      },
+      stop: () => ({}),
+    }),
+    spring: (value, config) => ({
+      start: (callback) => {
+        value.setValue(config.toValue);
+        callback && callback();
+      },
+      stop: () => ({}),
+    }),
+  };
+});
 
 jest.mock('react-native-safari-view', () => ({
   isAvailable: jest.fn().mockImplementation(() => Promise.resolve(true)),
   show: jest.fn(),
 }));
 
-jest.mock('react-native-onesignal');
+jest.mock('react-native-onesignal', () => ({
+  getPermissionSubscriptionState: (callback) =>
+    callback({ notificationsEnabled: true, subscriptionEnabled: true }),
+  promptForPushNotificationsWithUserResponse: (callback) => callback(true),
+  init: jest.fn(),
+  addEventListener: jest.fn(),
+  configure: jest.fn(),
+}));
+
 jest.mock('react-native-music-control', () => ({
   enableBackgroundMode: jest.fn(),
   enableControl: jest.fn(),
@@ -29,4 +60,22 @@ jest.mock('react-native-device-info', () => ({
   getBuildNumber: () => 0,
 }));
 
+jest.mock('rn-fetch-blob', () => 'Fetch');
+jest.mock(
+  '@apollosproject/ui-passes/node_modules/rn-fetch-blob',
+  () => 'Fetch'
+);
+
+jest.mock('@apollosproject/ui-analytics', () => ({
+  track: () => '',
+  AnalyticsConsumer: ({ children }) => children({ test: jest.fn() }),
+  AnalyticsProvider: ({ children }) => children,
+}));
+
 jest.mock('react-native-video', () => 'Video');
+
+jest.mock('NativeEventEmitter');
+
+jest.mock('react-native-maps');
+jest.mock('DatePickerIOS', () => 'DatePicker');
+jest.mock('./src/client/index');
diff --git a/apolloschurchapp/package.json b/apolloschurchapp/package.json
index d992510..2c11343 100644
--- a/apolloschurchapp/package.json
+++ b/apolloschurchapp/package.json
@@ -1,20 +1,15 @@
 {
   "name": "apolloschurchapp",
-  "version": "0.8.0-alpha.2",
+  "version": "0.8.6",
   "private": true,
   "devDependencies": {
-    "@storybook/addon-actions": "4.0.7",
-    "@storybook/addon-links": "4.0.7",
-    "@storybook/addons": "4.0.7",
-    "@storybook/react-native": "4.0.7",
     "codecov": "3.0.2",
     "get-dev-paths": "^0.1.0",
     "jest": "23.6.0",
     "jest-react-native": "18.0.0",
-    "nodemon": "1.17.5",
+    "nodemon": "1.18.7",
     "prop-types": "15.6.1",
     "react-dom": "16.6.3",
-    "react-native-dotenv": "0.2.0",
     "react-native-storybook-loader": "1.8.0",
     "react-native-version": "2.6.2",
     "react-test-renderer": "16.6.1",
@@ -27,15 +22,19 @@
     "src"
   ],
   "scripts": {
-    "android": "react-native run-android",
+    "android": "SIM=\"$($HOME/Library/Android/sdk/emulator/emulator -list-avds | sed -n 1p)\" && $HOME/Library/Android/sdk/emulator/emulator -avd \"${SIM}\" & react-native run-android --appId com.apolloschurch.app --main-activity LaunchActivity",
     "codecov": "cat ./coverage/lcov.info | codecov",
     "fixlint": "eslint ./src --fix",
     "ios": "react-native run-ios --simulator=\"iPhone X\"",
+    "storybook:enable": "sed -i '' 's/STORYBOOK=false/STORYBOOK=true/g' .env",
+    "storybook:disable": "sed -i '' 's/STORYBOOK=true/STORYBOOK=false/g' .env",
+    "build-storybook-env": "cat .env .env.dev.storybook > .env.storybook",
+    "generate-stories": "rnstl --searchDir ./src --pattern **/*.stories.js",
     "lint": "eslint ./src --ext .js",
+    "version": "node ../../scripts/update-apollos-version.js && git add apollos.json",
     "postversion": "react-native-version --never-amend --android android/app/build.gradle --ios ios/",
-    "prestart": "babel-node ./scripts/get-introspection-data.js",
+    "prestart": "lerna run generate-stories & node ./scripts/get-introspection-data.js",
     "start": "react-native start",
-    "storybook": "rnstl --searchDir ./storybook ./src --pattern \"**/*.stories.js\" && storybook start -p 7007 --root ../../",
     "test": "jest",
     "release": "standard-version --release-as minor"
   },
@@ -57,56 +56,67 @@
     "setupFiles": [
       "./jest.setup.js"
     ],
-    "transform": {
-      ".+\\.js$": "<rootDir>/node_modules/react-native/jest/preprocessor.js"
-    }
+    "reporters": [
+      "<rootDir>/../../scripts/fingers-crossed-reporter.js"
+    ]
   },
   "dependencies": {
-    "@apollosproject/ui-kit": "^0.8.0-alpha.2",
-    "apollo-cache-inmemory": "1.3.5",
+    "@apollosproject/ui-analytics": "^0.8.6",
+    "@apollosproject/ui-auth": "^0.8.6",
+    "@apollosproject/ui-htmlview": "^0.8.6",
+    "@apollosproject/ui-kit": "^0.8.6",
+    "@apollosproject/ui-passes": "^0.8.6",
+    "@apollosproject/ui-storybook": "^0.8.6",
+    "apollo-cache-inmemory": "1.5.1",
     "apollo-cache-persist": "0.1.1",
-    "apollo-client": "2.4.2",
-    "apollo-link": "1.2.3",
-    "apollo-link-context": "1.0.9",
-    "apollo-link-http": "1.5.5",
-    "apollo-link-schema": "1.1.1",
-    "apollo-link-state": "0.4.2",
+    "apollo-client": "2.5.1",
+    "apollo-link": "1.2.8",
+    "apollo-link-context": "1.0.14",
+    "apollo-link-http": "1.5.11",
+    "apollo-link-schema": "1.1.6",
     "apollo-upload-client": "9.0.0",
     "buffer": "^5.2.1",
     "color": "3.0.0",
+    "dotenv": "^6.2.0",
     "entities": "1.1.1",
     "events": "^3.0.0",
-    "formik": "0.11.11",
+    "formik": "^1.5.2",
     "graphql": "0.13.2",
     "graphql-tag": "2.9.2",
     "graphql-tools": "3.1.1",
-    "htmlparser2": "3.9.2",
     "lodash": "^4.17.11",
     "memoize-one": "4.0.0",
+    "metro-react-native-babel-preset": "^0.53.1",
     "moment": "2.22.2",
     "node-fetch": "2.2.0",
     "numeral": "^2.0.6",
     "prettier": "1.14.2",
     "querystring": "^0.2.0",
-    "react": "16.6.1",
-    "react-apollo": "2.2.4",
-    "react-native": "0.57.5",
-    "react-native-custom-tabs": "0.1.7",
+    "react": "16.6.3",
+    "react-apollo": "2.5.5",
+    "react-native": "0.58.5",
+    "react-native-airplay-btn": "^1.0.6",
+    "react-native-config": "^0.11.7",
     "react-native-device-info": "0.22.5",
-    "react-native-image-picker": "0.26.10",
+    "react-native-image-picker": "0.28.0",
     "react-native-keyboard-aware-scroll-view": "0.7.0",
-    "react-native-linear-gradient": "2.4.0",
-    "react-native-music-control": "0.7.3",
+    "react-native-linear-gradient": "2.5.3",
+    "react-native-maps": "^0.24.2",
+    "react-native-music-control": "^0.10.2",
     "react-native-onesignal": "3.2.7",
+    "react-native-passkit-wallet": "^0.1.4",
     "react-native-safari-view": "2.1.0",
-    "react-native-safe-area-view": "0.11.0",
-    "react-native-screens": "1.0.0-alpha.12",
+    "react-native-safe-area-view": "0.13.1",
+    "react-native-screens": "^1.0.0-alpha.22",
     "react-native-splash-screen": "^3.1.1",
-    "react-native-svg": "6.5.2",
-    "react-native-video": "3.2.0",
+    "react-native-svg": "9.2.4",
+    "react-native-video": "^4.4.1",
     "react-native-video-controls": "2.2.3",
-    "react-navigation": "2.11.2",
+    "react-native-webview": "^5.2.0",
+    "react-navigation": "2.14.0",
+    "react-navigation-tabs": "0.6.0",
     "recompose": "^0.30.0",
+    "rn-fetch-blob": "^0.10.15",
     "rn-placeholder": "1.2.0",
     "stream": "0.0.2",
     "url": "^0.11.0",
diff --git a/apolloschurchapp/polyfill.js b/apolloschurchapp/polyfill.js
new file mode 100644
index 0000000..e2e1ede
--- /dev/null
+++ b/apolloschurchapp/polyfill.js
@@ -0,0 +1,10 @@
+// this can be removed when we upgrade to react-native 59
+
+// symbol polyfills
+global.Symbol = require('core-js/es6/symbol');
+require('core-js/fn/symbol/iterator');
+
+// collection fn polyfills
+require('core-js/fn/map');
+require('core-js/fn/set');
+require('core-js/fn/array/find');
diff --git a/apolloschurchapp/rn-cli.config.js b/apolloschurchapp/rn-cli.config.js
index 4235fa0..4d8de40 100644
--- a/apolloschurchapp/rn-cli.config.js
+++ b/apolloschurchapp/rn-cli.config.js
@@ -1,7 +1,15 @@
 const path = require('path');
 const blacklist = require('metro-config/src/defaults/blacklist');
 
-const localDeps = [path.resolve('..', 'apollos-ui-kit')];
+const localDeps = [
+  path.resolve('..', 'apollos-ui-kit'),
+  path.resolve('..', 'apollos-ui-passes'),
+  path.resolve('..', 'apollos-ui-auth'),
+  path.resolve('..', 'apollos-ui-htmlview'),
+  path.resolve('..', 'apollos-ui-analytics'),
+  path.resolve('..', 'apollos-ui-storybook'),
+  path.resolve('..', 'apollos-ui-onboarding'),
+];
 
 module.exports = {
   resolver: {
@@ -20,11 +28,22 @@ module.exports = {
         (depPath) =>
           new RegExp(`${depPath}/node_modules/react-native-linear-gradient/.*`)
       ),
+      ...localDeps.map(
+        (depPath) =>
+          new RegExp(`${depPath}/node_modules/.*/node_modules/react-native/.*`)
+      ),
+      new RegExp(
+        `${path.resolve('.', 'node_modules')}/.*/node_modules/react-native/.*`
+      ),
       new RegExp(
         `${path.resolve('..', '..', 'node_modules', 'react-native')}/.*`
       ),
       new RegExp(
-        `${path.resolve('..', '..', 'node_modules')}/.*/react-native/.*`
+        `${path.resolve(
+          '..',
+          '..',
+          'node_modules'
+        )}/.*/node_modules/react-native/.*`
       ),
       new RegExp(
         `${path.resolve('../../node_modules/react-native-linear-gradient')}/.*`
diff --git a/apolloschurchapp/scripts/get-introspection-data.js b/apolloschurchapp/scripts/get-introspection-data.js
index f2c7e28..80ae562 100755
--- a/apolloschurchapp/scripts/get-introspection-data.js
+++ b/apolloschurchapp/scripts/get-introspection-data.js
@@ -1,7 +1,7 @@
-import fs from 'fs';
-import Path from 'path';
-import { APP_DATA_URL } from 'react-native-dotenv';
-import fetch from 'node-fetch';
+const fs = require('fs');
+const Path = require('path');
+require('dotenv/config');
+const fetch = require('node-fetch');
 
 const attempts = 0;
 const maxAttempts = 3;
@@ -9,7 +9,7 @@ const timeBetweenAttempts = 5 * 1000;
 
 const getIntrospectionData = async () => {
   try {
-    const query = await fetch(APP_DATA_URL, {
+    const query = await fetch(process.env.APP_DATA_URL, {
       method: 'POST',
       headers: { 'Content-Type': 'application/json' },
       body: JSON.stringify({
diff --git a/apolloschurchapp/src/LandingScreen.js b/apolloschurchapp/src/LandingScreen.js
new file mode 100644
index 0000000..52dde4b
--- /dev/null
+++ b/apolloschurchapp/src/LandingScreen.js
@@ -0,0 +1,33 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import { styled, GradientOverlayImage } from '@apollosproject/ui-kit';
+
+import ApollosLandingScreen from './ui/LandingScreen';
+
+const FullScreenImage = styled({
+  resizeMode: 'cover',
+  position: 'absolute',
+})(GradientOverlayImage);
+
+const LandingScreen = ({ navigation }) => (
+  <ApollosLandingScreen
+    onPressPrimary={() => navigation.push('Auth')}
+    textColor={'white'}
+    BackgroundComponent={
+      <FullScreenImage source={'https://picsum.photos/375/812/?random'} />
+    }
+    primaryNavText={"Let's go!"}
+  />
+);
+
+LandingScreen.navigationOptions = {
+  header: null,
+};
+
+LandingScreen.propTypes = {
+  navigation: PropTypes.shape({
+    push: PropTypes.func,
+  }),
+};
+
+export default LandingScreen;
diff --git a/apolloschurchapp/src/NavigationService.js b/apolloschurchapp/src/NavigationService.js
index a5d758b..a2a5348 100644
--- a/apolloschurchapp/src/NavigationService.js
+++ b/apolloschurchapp/src/NavigationService.js
@@ -2,22 +2,30 @@ import { NavigationActions } from 'react-navigation';
 
 let _navigator;
 
-function setTopLevelNavigator(navigatorRef) {
+const setTopLevelNavigator = (navigatorRef) => {
   _navigator = navigatorRef;
-}
+};
 
-function navigate(routeName, params) {
+const navigate = (routeName, params) => {
   _navigator.dispatch(
     NavigationActions.navigate({
       routeName,
       params,
     })
   );
-}
+};
 
-// add other navigation functions that you need and export them
+const goBack = (from) => {
+  let key;
+  if (from) {
+    const route = _navigator.state.nav.routes.find((r) => r.routeName === from);
+    if (route) ({ key } = route);
+  }
+  _navigator.dispatch(NavigationActions.back({ key }));
+};
 
 export default {
-  navigate,
   setTopLevelNavigator,
+  navigate,
+  goBack,
 };
diff --git a/apolloschurchapp/src/Providers.js b/apolloschurchapp/src/Providers.js
index da98513..2f9bd73 100644
--- a/apolloschurchapp/src/Providers.js
+++ b/apolloschurchapp/src/Providers.js
@@ -1,5 +1,24 @@
-import { nest } from 'recompose';
+import React from 'react';
 import { Providers } from '@apollosproject/ui-kit';
+import { AuthProvider } from '@apollosproject/ui-auth';
+import { AnalyticsProvider } from '@apollosproject/ui-analytics';
+import NavigationService from './NavigationService';
+import { NotificationsManager } from './notifications';
 import ClientProvider from './client';
 
-export default nest(ClientProvider, Providers);
+const AppProviders = (props) => (
+  <ClientProvider {...props}>
+    <NotificationsManager>
+      <AuthProvider
+        navigateToAuth={() => NavigationService.navigate('Auth')}
+        closeAuth={() => NavigationService.navigate('Onboarding')}
+      >
+        <AnalyticsProvider>
+          <Providers {...props} />
+        </AnalyticsProvider>
+      </AuthProvider>
+    </NotificationsManager>
+  </ClientProvider>
+);
+
+export default AppProviders;
diff --git a/apolloschurchapp/src/__mocks__/config.js b/apolloschurchapp/src/__mocks__/config.js
deleted file mode 100644
index b1162fc..0000000
--- a/apolloschurchapp/src/__mocks__/config.js
+++ /dev/null
@@ -1,2 +0,0 @@
-/* eslint-disable import/prefer-default-export */
-export const ONE_SIGNAL_KEY = 'doesntmatter';
diff --git a/apolloschurchapp/src/analytics/TrackEventWhenLoaded.js b/apolloschurchapp/src/analytics/TrackEventWhenLoaded.js
deleted file mode 100644
index eb7ed61..0000000
--- a/apolloschurchapp/src/analytics/TrackEventWhenLoaded.js
+++ /dev/null
@@ -1,38 +0,0 @@
-import { PureComponent } from 'react';
-import PropTypes from 'prop-types';
-import { track } from './index';
-
-export default class TrackEventWhenLoaded extends PureComponent {
-  componentDidMount() {
-    if (this.props.loaded) {
-      this.track();
-    }
-  }
-
-  componentDidUpdate(prevProps) {
-    if (!prevProps.loaded && this.props.loaded) {
-      this.track();
-    }
-  }
-
-  get trackClient() {
-    return this.props.track || track;
-  }
-
-  track() {
-    const { eventName, properties } = this.props;
-    return this.trackClient({ eventName, properties });
-  }
-
-  render() {
-    return null;
-  }
-}
-
-TrackEventWhenLoaded.propTypes = {
-  loaded: PropTypes.bool.isRequired,
-  eventName: PropTypes.string.isRequired,
-  // eslint-disable-next-line react/forbid-prop-types
-  properties: PropTypes.any,
-  track: PropTypes.func,
-};
diff --git a/apolloschurchapp/src/analytics/TrackEventWhenLoaded.tests.js b/apolloschurchapp/src/analytics/TrackEventWhenLoaded.tests.js
deleted file mode 100644
index fcf66ed..0000000
--- a/apolloschurchapp/src/analytics/TrackEventWhenLoaded.tests.js
+++ /dev/null
@@ -1,46 +0,0 @@
-import React from 'react';
-import renderer from 'react-test-renderer';
-
-import TrackEventWhenLoaded from './TrackEventWhenLoaded';
-
-const trackMock = jest.fn();
-
-describe('The TrackEventWhenLoaded component', () => {
-  afterEach(() => {
-    trackMock.mockClear();
-  });
-  it('should track an event if mounted with loaded=true', () => {
-    renderer.create(
-      <TrackEventWhenLoaded
-        loaded
-        eventName="Track Something"
-        properties={{ ThingId: '1234' }}
-        track={trackMock}
-      />
-    );
-    expect(trackMock.mock.calls).toMatchSnapshot();
-  });
-
-  it('should track an event if mounted with loaded=false and then switching to true', () => {
-    const tree = renderer.create(
-      <TrackEventWhenLoaded
-        loaded={false}
-        eventName="Track Something"
-        properties={{ ThingId: '1234' }}
-        track={trackMock}
-        key="tracker"
-      />
-    );
-    expect(trackMock.mock.calls).toMatchSnapshot();
-    tree.update(
-      <TrackEventWhenLoaded
-        loaded
-        eventName="Track Something"
-        properties={{ ThingId: '1234' }}
-        track={trackMock}
-        key="tracker"
-      />
-    );
-    expect(trackMock.mock.calls).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/analytics/index.js b/apolloschurchapp/src/analytics/index.js
deleted file mode 100644
index cd7dbba..0000000
--- a/apolloschurchapp/src/analytics/index.js
+++ /dev/null
@@ -1,79 +0,0 @@
-import gql from 'graphql-tag';
-import DeviceInfo from 'react-native-device-info';
-import { Platform } from 'react-native';
-
-import { client } from '../client';
-
-const anonymousId = DeviceInfo.getUniqueID();
-
-const deviceInfo = {
-  platform: Platform.OS === 'ios' ? 'iOS' : 'Android',
-  deviceId: anonymousId,
-  deviceModel: DeviceInfo.getModel(),
-  osVersion: DeviceInfo.getSystemVersion(),
-  appVersion: DeviceInfo.getVersion(),
-};
-
-const trackMutation = gql`
-  mutation track($input: AnalyticsTrackInput!) {
-    trackEvent(input: $input) {
-      success
-    }
-  }
-`;
-
-const identifyMutation = gql`
-  mutation identify($input: AnalyticsIdentifyInput!) {
-    identifySelf(input: $input) {
-      success
-    }
-  }
-`;
-
-const propertiesToGqlInput = (props = []) =>
-  Object.keys(props).map((key) => ({
-    field: key,
-    value: props[key],
-  }));
-
-export const track = ({ eventName, properties }) =>
-  client.mutate({
-    mutation: trackMutation,
-    variables: {
-      input: {
-        anonymousId,
-        deviceInfo,
-        eventName,
-        properties: propertiesToGqlInput(properties),
-      },
-    },
-  });
-
-export const identify = () =>
-  client.mutate({
-    mutation: identifyMutation,
-    variables: {
-      input: {
-        anonymousId,
-        deviceInfo,
-      },
-    },
-  });
-
-export const events = {
-  LikeContent: 'Like Content',
-  UnlikeContent: 'Unlike Content',
-  ViewContent: 'View Content',
-  ShareContent: 'Share Content',
-  UserLogin: 'User Login',
-  UserSignup: 'User Signup',
-  UserLogout: 'UserLogout',
-  UserForgotPassword: 'User Forgot Password',
-  UserPlayedMedia: 'User Played Media',
-};
-
-export default {
-  track,
-  identify,
-  events,
-};
diff --git a/apolloschurchapp/src/auth/LoginButton/LoginButton.tests.js b/apolloschurchapp/src/auth/LoginButton/LoginButton.tests.js
deleted file mode 100644
index 64f2b62..0000000
--- a/apolloschurchapp/src/auth/LoginButton/LoginButton.tests.js
+++ /dev/null
@@ -1,71 +0,0 @@
-import React from 'react';
-import renderer from 'react-test-renderer';
-import wait from 'waait';
-
-import Providers from 'apolloschurchapp/src/Providers';
-
-import getLoginState from '../getLoginState';
-
-import LoginButton from '.';
-
-describe('LoginButton component', () => {
-  it('renders nothing when logged in', async () => {
-    const mock = {
-      request: {
-        query: getLoginState,
-      },
-      result: {
-        data: { isLoggedIn: true },
-      },
-    };
-
-    const navigation = { navigate: jest.fn() };
-    const tree = renderer.create(
-      <Providers mocks={[mock]}>
-        <LoginButton navigation={navigation} />
-      </Providers>
-    );
-    await wait(0); // wait for response from graphql
-    expect(tree).toMatchSnapshot();
-  });
-
-  it('renders a LoginButton when logged out', async () => {
-    const mock = {
-      request: {
-        query: getLoginState,
-      },
-      result: {
-        data: { isLoggedIn: null },
-      },
-    };
-
-    const navigation = { navigate: jest.fn() };
-    const tree = renderer.create(
-      <Providers mocks={[mock]}>
-        <LoginButton navigation={navigation} />
-      </Providers>
-    );
-    await wait(0); // wait for response from graphql
-    expect(tree).toMatchSnapshot();
-  });
-
-  it('renders a LoginButton that is loading', async () => {
-    const mock = {
-      request: {
-        query: getLoginState,
-      },
-      result: {
-        data: { isLoggedIn: null },
-      },
-    };
-
-    const navigation = { navigate: jest.fn() };
-    const tree = renderer.create(
-      <Providers mocks={[mock]}>
-        <LoginButton navigation={navigation} loading />
-      </Providers>
-    );
-    await wait(0); // wait for response from graphql
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/auth/LoginButton/index.js b/apolloschurchapp/src/auth/LoginButton/index.js
deleted file mode 100644
index 66c7753..0000000
--- a/apolloschurchapp/src/auth/LoginButton/index.js
+++ /dev/null
@@ -1,40 +0,0 @@
-import React, { PureComponent } from 'react';
-import { withNavigation } from 'react-navigation';
-import { Query } from 'react-apollo';
-import PropTypes from 'prop-types';
-
-import { Button } from '@apollosproject/ui-kit';
-
-import getLoginState from '../getLoginState';
-
-class LoginButton extends PureComponent {
-  static propTypes = {
-    navigation: PropTypes.shape({
-      push: PropTypes.func,
-    }),
-  };
-
-  handleLoginPress = () => this.props.navigation.push('Auth');
-
-  render() {
-    const { navigation, ...otherProps } = this.props;
-    return (
-      <Query query={getLoginState}>
-        {({ data }) => {
-          const { isLoggedIn, loading } = data;
-          if (isLoggedIn) return null;
-          return (
-            <Button
-              onPress={this.handleLoginPress}
-              title="Get Connected"
-              loading={loading}
-              {...otherProps}
-            />
-          );
-        }}
-      </Query>
-    );
-  }
-}
-
-export default withNavigation(LoginButton);
diff --git a/apolloschurchapp/src/auth/ProtectedAction.js b/apolloschurchapp/src/auth/ProtectedAction.js
deleted file mode 100644
index 5cec0fd..0000000
--- a/apolloschurchapp/src/auth/ProtectedAction.js
+++ /dev/null
@@ -1,67 +0,0 @@
-import React, { PureComponent } from 'react';
-import { Query } from 'react-apollo';
-import PropTypes from 'prop-types';
-import { withNavigation } from 'react-navigation';
-
-import getLoginState from './getLoginState';
-
-class ProtectedAction extends PureComponent {
-  queuedActionsToTriggerOnLogin = [];
-
-  static propTypes = {
-    children: PropTypes.func,
-    navigation: PropTypes.shape({
-      push: PropTypes.func,
-    }),
-    loading: PropTypes.bool,
-    isLoggedIn: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),
-    action: PropTypes.func.isRequired,
-  };
-
-  componentDidUpdate(oldProps) {
-    if (!oldProps.isLoggedIn && this.props.isLoggedIn) {
-      this.handleLogin();
-    }
-
-    if (
-      oldProps.loading &&
-      !this.props.loading &&
-      !this.props.isLoggedIn &&
-      this.queuedActionsToTriggerOnLogin.length
-    ) {
-      this.triggerLogin();
-    }
-  }
-
-  handleLogin = () => {
-    this.queuedActionsToTriggerOnLogin.forEach((action) => action());
-    this.queuedActionsToTriggerOnLogin = [];
-  };
-
-  triggerLogin = () => this.props.navigation.push('Auth');
-
-  protectedActionHandler = (action) => (...args) => {
-    if (this.props.isLoggedIn) {
-      action(...args);
-    } else {
-      this.queuedActionsToTriggerOnLogin.push(action.bind(this, ...args));
-      if (!this.props.loading) this.triggerLogin();
-    }
-  };
-
-  render() {
-    return typeof this.props.children === 'function'
-      ? this.props.children(this.protectedActionHandler(this.props.action))
-      : this.props.children;
-  }
-}
-
-const ProtectedActionWithQuery = (props) => (
-  <Query query={getLoginState}>
-    {({ data: { isLoggedIn = false } = {}, loading }) => (
-      <ProtectedAction isLoggedIn={isLoggedIn} loading={loading} {...props} />
-    )}
-  </Query>
-);
-
-export default withNavigation(ProtectedActionWithQuery);
diff --git a/apolloschurchapp/src/auth/ProtectedTouchable.js b/apolloschurchapp/src/auth/ProtectedTouchable.js
deleted file mode 100644
index 82bb73b..0000000
--- a/apolloschurchapp/src/auth/ProtectedTouchable.js
+++ /dev/null
@@ -1,24 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-import { Touchable } from '@apollosproject/ui-kit';
-import ProtectedAction from './ProtectedAction';
-
-const ProtectedTouchable = ({
-  onPress,
-  children,
-  TouchableComponent = Touchable,
-}) => (
-  <ProtectedAction action={onPress}>
-    {(action) => (
-      <TouchableComponent onPress={action}>{children}</TouchableComponent>
-    )}
-  </ProtectedAction>
-);
-
-ProtectedTouchable.propTypes = {
-  onPress: PropTypes.func.isRequired,
-  children: PropTypes.node.isRequired,
-  TouchableComponent: PropTypes.func,
-};
-
-export default ProtectedTouchable;
diff --git a/apolloschurchapp/src/auth/getLoginState.js b/apolloschurchapp/src/auth/getLoginState.js
deleted file mode 100644
index 97d3e8d..0000000
--- a/apolloschurchapp/src/auth/getLoginState.js
+++ /dev/null
@@ -1,7 +0,0 @@
-import gql from 'graphql-tag';
-
-export default gql`
-  query {
-    isLoggedIn @client
-  }
-`;
diff --git a/apolloschurchapp/src/auth/handleLogin.js b/apolloschurchapp/src/auth/handleLogin.js
deleted file mode 100644
index 417dde0..0000000
--- a/apolloschurchapp/src/auth/handleLogin.js
+++ /dev/null
@@ -1,7 +0,0 @@
-import gql from 'graphql-tag';
-
-export default gql`
-  mutation handleLogin($authToken: String!) {
-    handleLogin(authToken: $authToken) @client
-  }
-`;
diff --git a/apolloschurchapp/src/auth/index.js b/apolloschurchapp/src/auth/index.js
deleted file mode 100644
index b8f16a3..0000000
--- a/apolloschurchapp/src/auth/index.js
+++ /dev/null
@@ -1,98 +0,0 @@
-import React, { PureComponent } from 'react';
-import PropTypes from 'prop-types';
-import { View, SafeAreaView } from 'react-native';
-
-import {
-  FlexedView,
-  TabView,
-  TabSceneMap as SceneMap,
-  H1,
-  H5,
-  styled,
-  Icon,
-  ButtonLink,
-  withTheme,
-} from '@apollosproject/ui-kit';
-
-import { track } from 'apolloschurchapp/src/analytics';
-
-import LoginForm from './login';
-import SignUpForm from './signup';
-
-export LoginButton from './LoginButton';
-export ProtectedAction from './ProtectedAction';
-
-const Title = styled(({ theme }) => ({ color: theme.colors.primary }))(H1);
-
-const BrandIcon = withTheme(({ theme }) => ({
-  name: 'brand-icon',
-  size: theme.sizing.baseUnit * 2.25,
-  marginVertical: theme.sizing.baseUnit,
-  fill: theme.colors.primary,
-}))(Icon);
-
-const HeaderContainer = styled(({ theme }) => ({
-  backgroundColor: theme.colors.background.paper,
-}))(SafeAreaView);
-
-const Header = styled(({ theme }) => ({
-  padding: theme.sizing.baseUnit,
-  paddingBottom: theme.sizing.baseUnit * 1.5,
-}))(View);
-
-const CancelButton = styled(({ theme }) => ({
-  alignSelf: 'flex-end',
-  paddingTop: theme.sizing.baseUnit * 0.75,
-  paddingRight: theme.sizing.baseUnit,
-}))(ButtonLink);
-
-class Auth extends PureComponent {
-  static navigationOptions = {
-    header: null,
-  };
-
-  tabRoutes = [
-    { title: 'Sign In', key: 'login' },
-    { title: 'Register', key: 'signup' },
-  ];
-
-  static propTypes = {
-    navigation: PropTypes.shape({
-      goBack: PropTypes.func,
-    }),
-  };
-
-  handleFinish = () => {
-    // trigger the auth modal to close
-    track({ eventName: 'UserLogin' });
-    this.props.navigation.goBack();
-  };
-
-  renderLogin = () => <LoginForm onLogin={this.handleFinish} />;
-
-  renderSignup = () => <SignUpForm onSignup={this.handleFinish} />;
-
-  render() {
-    return (
-      <FlexedView>
-        <HeaderContainer>
-          <CancelButton onPress={this.handleFinish}>Cancel</CancelButton>
-          <Header>
-            <BrandIcon />
-            <Title>Welcome!</Title>
-            <H5>Please sign in to continue</H5>
-          </Header>
-        </HeaderContainer>
-        <TabView
-          routes={this.tabRoutes}
-          renderScene={SceneMap({
-            login: this.renderLogin,
-            signup: this.renderSignup,
-          })}
-        />
-      </FlexedView>
-    );
-  }
-}
-
-export default Auth;
diff --git a/apolloschurchapp/src/auth/login/Form.js b/apolloschurchapp/src/auth/login/Form.js
deleted file mode 100644
index 7551d9e..0000000
--- a/apolloschurchapp/src/auth/login/Form.js
+++ /dev/null
@@ -1,107 +0,0 @@
-import React, { PureComponent } from 'react';
-import { View, SafeAreaView } from 'react-native';
-import PropTypes from 'prop-types';
-import { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';
-
-import { track, events } from 'apolloschurchapp/src/analytics';
-import { WebBrowserConsumer } from 'apolloschurchapp/src/ui/WebBrowser';
-import {
-  FlexedView,
-  PaddedView,
-  TextInput,
-  Button,
-  ButtonLink,
-  styled,
-} from '@apollosproject/ui-kit';
-
-const BottomSafeAreaView = styled({
-  position: 'absolute',
-  bottom: 0,
-  left: 0,
-  right: 0,
-})(SafeAreaView);
-
-class Form extends PureComponent {
-  static propTypes = {
-    setFieldValue: PropTypes.func,
-    touched: PropTypes.shape({}),
-    errors: PropTypes.shape({}),
-    values: PropTypes.shape({}),
-    handleSubmit: PropTypes.func,
-    isSubmitting: PropTypes.bool,
-    isValid: PropTypes.bool,
-  };
-
-  render() {
-    const {
-      values,
-      touched,
-      errors,
-      handleSubmit,
-      setFieldValue,
-      isValid,
-      isSubmitting,
-    } = this.props;
-    return (
-      <FlexedView>
-        <KeyboardAwareScrollView>
-          <PaddedView>
-            <View>
-              <TextInput
-                label="Email"
-                type="email"
-                value={values.email}
-                error={touched.email && errors.email}
-                onChangeText={(text) => setFieldValue('email', text)}
-                onSubmitEditing={() => this.passwordInput.focus()}
-                returnKeyType="next"
-                textContentType="username"
-                enablesReturnKeyAutomatically
-              />
-              <TextInput
-                label="Password"
-                type="password"
-                value={values.password}
-                error={touched.password && errors.password}
-                onChangeText={(text) => setFieldValue('password', text)}
-                onSubmitEditing={handleSubmit}
-                returnKeyType="go"
-                textContentType="password"
-                enablesReturnKeyAutomatically
-                inputRef={(r) => {
-                  this.passwordInput = r;
-                }}
-              />
-              <WebBrowserConsumer>
-                {(openUrl) => (
-                  <ButtonLink
-                    onPress={() => {
-                      track({ eventName: events.UserForgotPassword });
-                      return openUrl(
-                        'https://apollosrock.newspring.cc/page/56/'
-                      );
-                    }}
-                  >
-                    Forgot your password?
-                  </ButtonLink>
-                )}
-              </WebBrowserConsumer>
-            </View>
-          </PaddedView>
-        </KeyboardAwareScrollView>
-        <BottomSafeAreaView>
-          <PaddedView vertical={false}>
-            <Button
-              onPress={handleSubmit}
-              title="Sign in"
-              disabled={!isValid}
-              loading={isSubmitting}
-            />
-          </PaddedView>
-        </BottomSafeAreaView>
-      </FlexedView>
-    );
-  }
-}
-
-export default Form;
diff --git a/apolloschurchapp/src/auth/login/Form.stories.js b/apolloschurchapp/src/auth/login/Form.stories.js
deleted file mode 100644
index 54cc3f8..0000000
--- a/apolloschurchapp/src/auth/login/Form.stories.js
+++ /dev/null
@@ -1,12 +0,0 @@
-import React from 'react';
-import { storiesOf } from '@storybook/react-native';
-
-import LoginForm from './Form';
-
-storiesOf('Auth/LoginForm', module).add('Example', () => (
-  <LoginForm
-    values={{ email: '', password: '' }}
-    touched={{ email: false, password: false }}
-    errors={{ email: null, password: null }}
-  />
-));
diff --git a/apolloschurchapp/src/auth/login/Form.tests.js b/apolloschurchapp/src/auth/login/Form.tests.js
deleted file mode 100644
index 0e352e3..0000000
--- a/apolloschurchapp/src/auth/login/Form.tests.js
+++ /dev/null
@@ -1,21 +0,0 @@
-import React from 'react';
-import renderer from 'react-test-renderer';
-
-import Providers from 'apolloschurchapp/src/Providers';
-
-import LoginForm from './Form';
-
-describe('The LoginForm component', () => {
-  it('should render', () => {
-    const tree = renderer.create(
-      <Providers>
-        <LoginForm
-          values={{ email: '', password: '' }}
-          touched={{ email: false, password: false }}
-          errors={{ email: null, password: null }}
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/auth/login/authenticate.js b/apolloschurchapp/src/auth/login/authenticate.js
deleted file mode 100644
index 94d4e74..0000000
--- a/apolloschurchapp/src/auth/login/authenticate.js
+++ /dev/null
@@ -1,9 +0,0 @@
-import gql from 'graphql-tag';
-
-export default gql`
-  mutation authenticate($email: String!, $password: String!) {
-    authenticate(identity: $email, password: $password) {
-      token
-    }
-  }
-`;
diff --git a/apolloschurchapp/src/auth/login/index.js b/apolloschurchapp/src/auth/login/index.js
deleted file mode 100644
index 1546d60..0000000
--- a/apolloschurchapp/src/auth/login/index.js
+++ /dev/null
@@ -1,66 +0,0 @@
-import React from 'react';
-import { Mutation } from 'react-apollo';
-import { Formik } from 'formik';
-import * as Yup from 'yup';
-import PropTypes from 'prop-types';
-
-import handleLogin from '../handleLogin';
-import { client } from '../../client'; //eslint-disable-line
-import authenticateMutation from './authenticate';
-import LoginForm from './Form';
-
-const Login = ({ onLogin }) => (
-  <Mutation
-    mutation={authenticateMutation}
-    update={(cache, { data: { authenticate } }) => {
-      client.mutate({
-        mutation: handleLogin,
-        variables: {
-          authToken: authenticate.token,
-        },
-      });
-    }}
-  >
-    {(authenticate) => (
-      <Formik
-        validationSchema={Yup.object().shape({
-          email: Yup.string()
-            .email('Invalid email address')
-            .required('Email is required!'),
-          password: Yup.string().required('Password is required!'),
-        })}
-        onSubmit={async (variables, { setSubmitting, setFieldError }) => {
-          try {
-            await authenticate({ variables });
-            if (onLogin) onLogin();
-          } catch (e) {
-            const { graphQLErrors } = e;
-            if (
-              graphQLErrors.length &&
-              graphQLErrors.find(
-                ({ extensions }) => extensions.code === 'UNAUTHENTICATED'
-              )
-            ) {
-              setFieldError('email', true);
-              setFieldError('password', 'Your email or password is incorrect.');
-            } else {
-              setFieldError(
-                'password',
-                'Unknown error. Please try again later.'
-              );
-            }
-          }
-          setSubmitting(false);
-        }}
-      >
-        {(formikBag) => <LoginForm {...formikBag} />}
-      </Formik>
-    )}
-  </Mutation>
-);
-
-Login.propTypes = {
-  onLogin: PropTypes.func,
-};
-
-export default Login;
diff --git a/apolloschurchapp/src/auth/logout.js b/apolloschurchapp/src/auth/logout.js
deleted file mode 100644
index 8dbff04..0000000
--- a/apolloschurchapp/src/auth/logout.js
+++ /dev/null
@@ -1,7 +0,0 @@
-import gql from 'graphql-tag';
-
-export default gql`
-  mutation {
-    logout @client
-  }
-`;
diff --git a/apolloschurchapp/src/auth/signup/Form.js b/apolloschurchapp/src/auth/signup/Form.js
deleted file mode 100644
index 640342e..0000000
--- a/apolloschurchapp/src/auth/signup/Form.js
+++ /dev/null
@@ -1,90 +0,0 @@
-import React, { PureComponent } from 'react';
-import { View, SafeAreaView } from 'react-native';
-import PropTypes from 'prop-types';
-import { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';
-
-import {
-  FlexedView,
-  PaddedView,
-  TextInput,
-  Button,
-  styled,
-} from '@apollosproject/ui-kit';
-
-const BottomSafeAreaView = styled({
-  position: 'absolute',
-  bottom: 0,
-  left: 0,
-  right: 0,
-})(SafeAreaView);
-
-class Form extends PureComponent {
-  static propTypes = {
-    setFieldValue: PropTypes.func,
-    touched: PropTypes.shape({}),
-    errors: PropTypes.shape({}),
-    values: PropTypes.shape({}),
-    handleSubmit: PropTypes.func,
-    isSubmitting: PropTypes.bool,
-    isValid: PropTypes.bool,
-  };
-
-  render() {
-    const {
-      values,
-      touched,
-      errors,
-      handleSubmit,
-      setFieldValue,
-      isValid,
-      isSubmitting,
-    } = this.props;
-    return (
-      <FlexedView>
-        <KeyboardAwareScrollView>
-          <PaddedView>
-            <View>
-              <TextInput
-                label="Email"
-                type="email"
-                value={values.email}
-                error={touched.email && errors.email}
-                onChangeText={(text) => setFieldValue('email', text)}
-                onSubmitEditing={() => this.passwordInput.focus()}
-                returnKeyType="next"
-                textContentType="username"
-                enablesReturnKeyAutomatically
-              />
-              <TextInput
-                label="Password"
-                type="password"
-                value={values.password}
-                error={touched.password && errors.password}
-                onChangeText={(text) => setFieldValue('password', text)}
-                onSubmitEditing={handleSubmit}
-                returnKeyType="go"
-                textContentType="password"
-                enablesReturnKeyAutomatically
-                inputRef={(r) => {
-                  this.passwordInput = r;
-                }}
-              />
-            </View>
-          </PaddedView>
-        </KeyboardAwareScrollView>
-        <BottomSafeAreaView>
-          <PaddedView vertical={false}>
-            <Button
-              onPress={handleSubmit}
-              title="Register"
-              disabled={!isValid}
-              loading={isSubmitting}
-            />
-          </PaddedView>
-        </BottomSafeAreaView>
-      </FlexedView>
-    );
-  }
-}
-
-export default Form;
diff --git a/apolloschurchapp/src/auth/signup/Form.stories.js b/apolloschurchapp/src/auth/signup/Form.stories.js
deleted file mode 100644
index da0e764..0000000
--- a/apolloschurchapp/src/auth/signup/Form.stories.js
+++ /dev/null
@@ -1,12 +0,0 @@
-import React from 'react';
-import { storiesOf } from '@storybook/react-native';
-
-import LoginForm from './Form';
-
-storiesOf('Auth/SignupForm', module).add('Example', () => (
-  <LoginForm
-    values={{ email: '', password: '' }}
-    touched={{ email: false, password: false }}
-    errors={{ email: null, password: null }}
-  />
-));
diff --git a/apolloschurchapp/src/auth/signup/Form.tests.js b/apolloschurchapp/src/auth/signup/Form.tests.js
deleted file mode 100644
index 5d9601f..0000000
--- a/apolloschurchapp/src/auth/signup/Form.tests.js
+++ /dev/null
@@ -1,21 +0,0 @@
-import React from 'react';
-import renderer from 'react-test-renderer';
-
-import Providers from 'apolloschurchapp/src/Providers';
-
-import LoginForm from './Form';
-
-describe('The SignupForm component', () => {
-  it('should render', () => {
-    const tree = renderer.create(
-      <Providers>
-        <LoginForm
-          values={{ email: '', password: '' }}
-          touched={{ email: false, password: false }}
-          errors={{ email: null, password: null }}
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/auth/signup/index.js b/apolloschurchapp/src/auth/signup/index.js
deleted file mode 100644
index 81e64a7..0000000
--- a/apolloschurchapp/src/auth/signup/index.js
+++ /dev/null
@@ -1,67 +0,0 @@
-import React from 'react';
-import { Mutation } from 'react-apollo';
-import { Formik } from 'formik';
-import * as Yup from 'yup';
-import PropTypes from 'prop-types';
-
-import { track, events } from 'apolloschurchapp/src/analytics';
-
-import handleLogin from '../handleLogin';
-import { client } from '../../client'; //eslint-disable-line
-import registerPersonMutation from './registerPerson';
-import SignupForm from './Form';
-
-const Signup = ({ onSignup }) => (
-  <Mutation
-    mutation={registerPersonMutation}
-    update={(cache, { data: { registerPerson } }) => {
-      client.mutate({
-        mutation: handleLogin,
-        variables: {
-          authToken: registerPerson.token,
-        },
-      });
-    }}
-  >
-    {(authenticate) => (
-      <Formik
-        validationSchema={Yup.object().shape({
-          email: Yup.string()
-            .email('Invalid email address')
-            .required('Email is required!'),
-          password: Yup.string().required('Password is required!'),
-        })}
-        onSubmit={async (variables, { setSubmitting, setFieldError }) => {
-          try {
-            await authenticate({ variables });
-            track({ eventName: events.UserSignup }); // TODO: Move signup logic to store/index and move tracking logic there also.
-            if (onSignup) onSignup();
-          } catch ({ graphQLErrors = [], ...e }) {
-            if (
-              graphQLErrors.length &&
-              graphQLErrors.find(({ message }) =>
-                message.includes('User already exists')
-              )
-            ) {
-              setFieldError('email', 'There is already a user with this email');
-            } else {
-              setFieldError(
-                'password',
-                'Unknown error. Please try again later.'
-              );
-            }
-          }
-          setSubmitting(false);
-        }}
-      >
-        {(formikBag) => <SignupForm {...formikBag} />}
-      </Formik>
-    )}
-  </Mutation>
-);
-
-Signup.propTypes = {
-  onSignup: PropTypes.func,
-};
-
-export default Signup;
diff --git a/apolloschurchapp/src/auth/signup/registerPerson.js b/apolloschurchapp/src/auth/signup/registerPerson.js
deleted file mode 100644
index 77fc892..0000000
--- a/apolloschurchapp/src/auth/signup/registerPerson.js
+++ /dev/null
@@ -1,9 +0,0 @@
-import gql from 'graphql-tag';
-
-export default gql`
-  mutation registerPerson($email: String!, $password: String!) {
-    registerPerson(email: $email, password: $password) {
-      token
-    }
-  }
-`;
diff --git a/apolloschurchapp/src/client/__mocks__/index.js b/apolloschurchapp/src/client/__mocks__/index.js
index 7d3347c..36dec2b 100644
--- a/apolloschurchapp/src/client/__mocks__/index.js
+++ b/apolloschurchapp/src/client/__mocks__/index.js
@@ -1,29 +1,39 @@
+import React from 'react';
 import { MockedProvider } from 'react-apollo/test-utils';
 import ApolloClient from 'apollo-client';
 import { makeExecutableSchema, addMockFunctionsToSchema } from 'graphql-tools';
 import { SchemaLink } from 'apollo-link-schema';
-import { ApolloLink } from 'apollo-link';
+
 import { testSchema as typeDefs } from 'apollos-church-api';
 
 import cache from '../cache';
-import clientStateLink from '../clientStateLink';
+import { resolvers, schema, defaults } from '../../store';
 
-export default MockedProvider;
+// eslint-disable-next-line
+export default (props) => {
+  let finalProps = props;
+  // eslint-disable-next-line
+  if (!props.mocks) {
+    // eslint-disable-next-line
+    finalProps = { ...props, resolvers };
+  }
+  return <MockedProvider {...finalProps} />;
+};
 
-const schema = makeExecutableSchema({
+const serverSchema = makeExecutableSchema({
   typeDefs,
   resolverValidationOptions: {
     requireResolversForResolveType: false,
   },
 });
-addMockFunctionsToSchema({ schema });
+addMockFunctionsToSchema({ schema: serverSchema });
 
-let link = new SchemaLink({ schema });
-if (clientStateLink) {
-  link = ApolloLink.from([clientStateLink, link]);
-}
+const link = new SchemaLink({ schema: serverSchema });
+cache.writeData({ data: defaults });
 
 export const client = new ApolloClient({
-  cache,
   link,
+  cache,
+  resolvers,
+  typeDefs: schema,
 });
diff --git a/apolloschurchapp/src/client/authLink.js b/apolloschurchapp/src/client/authLink.js
deleted file mode 100644
index 407934b..0000000
--- a/apolloschurchapp/src/client/authLink.js
+++ /dev/null
@@ -1,35 +0,0 @@
-import { setContext } from 'apollo-link-context';
-import gql from 'graphql-tag';
-
-import { ensureCacheHydration } from './cache';
-
-import { client } from './'; // eslint-disable-line
-
-export default setContext(async (request, { headers }) => {
-  try {
-    await ensureCacheHydration;
-
-    const {
-      data: { authToken },
-    } = await client.query({
-      query: gql`
-        query {
-          authToken @client
-        }
-      `,
-    });
-    if (!authToken) return {};
-
-    // return the headers to the context so httpLink can read them
-    return {
-      headers: {
-        ...headers,
-        authorization: authToken,
-      },
-    };
-  } catch (err) {
-    // eslint-disable-next-line
-    console.warn('Authorization Failed', err);
-    return {};
-  }
-});
diff --git a/apolloschurchapp/src/client/cache.js b/apolloschurchapp/src/client/cache.js
index 3979a8a..b4d1609 100644
--- a/apolloschurchapp/src/client/cache.js
+++ b/apolloschurchapp/src/client/cache.js
@@ -5,9 +5,21 @@ import {
 import { AsyncStorage } from 'react-native';
 import DeviceInfo from 'react-native-device-info';
 import { CachePersistor } from 'apollo-cache-persist';
-
+import gql from 'graphql-tag';
 import introspectionQueryResultData from './fragmentTypes.json';
 
+export const CACHE_LOADED = gql`
+  query {
+    cacheLoaded @client
+  }
+`;
+
+export const MARK_CACHE_LOADED = gql`
+  mutation markCacheLoaded {
+    cacheMarkLoaded @client
+  }
+`;
+
 // We reset our apollo cache on every build:
 // TODO: this could be optimized by only reseting cache when our schema or client-side schema changes,
 // however there is risk for missing changes and breaking things in production, so this is safer.
diff --git a/apolloschurchapp/src/client/clientStateLink.js b/apolloschurchapp/src/client/clientStateLink.js
deleted file mode 100644
index 0c45da8..0000000
--- a/apolloschurchapp/src/client/clientStateLink.js
+++ /dev/null
@@ -1,11 +0,0 @@
-import { withClientState } from 'apollo-link-state';
-
-import { resolvers, defaults, schema } from '../store';
-import cache from './cache';
-
-export default withClientState({
-  resolvers,
-  defaults,
-  cache,
-  typeDefs: schema,
-});
diff --git a/apolloschurchapp/src/client/fragmentTypes.json b/apolloschurchapp/src/client/fragmentTypes.json
index 8d96fc0..14cf82b 100644
--- a/apolloschurchapp/src/client/fragmentTypes.json
+++ b/apolloschurchapp/src/client/fragmentTypes.json
@@ -1 +1 @@
-{"__schema":{"types":[{"kind":"INTERFACE","name":"Node","possibleTypes":[{"name":"ContentChannel"},{"name":"Person"},{"name":"Interaction"},{"name":"UniversalContentItem"},{"name":"DevotionalContentItem"},{"name":"MediaContentItem"},{"name":"ContentSeriesContentItem"}]},{"kind":"INTERFACE","name":"ContentItem","possibleTypes":[{"name":"UniversalContentItem"},{"name":"DevotionalContentItem"},{"name":"MediaContentItem"},{"name":"ContentSeriesContentItem"}]},{"kind":"INTERFACE","name":"Media","possibleTypes":[{"name":"ImageMedia"},{"name":"VideoMedia"},{"name":"AudioMedia"}]},{"kind":"INTERFACE","name":"MediaSource","possibleTypes":[{"name":"ImageMediaSource"},{"name":"VideoMediaSource"},{"name":"AudioMediaSource"}]},{"kind":"INTERFACE","name":"Sharable","possibleTypes":[{"name":"SharableContentItem"}]}]}}
\ No newline at end of file
+{"__schema":{"types":[{"kind":"INTERFACE","name":"Node","possibleTypes":[{"name":"ContentChannel"},{"name":"Person"},{"name":"Campus"},{"name":"Pass"},{"name":"UniversalContentItem"},{"name":"DevotionalContentItem"},{"name":"MediaContentItem"},{"name":"ContentSeriesContentItem"}]},{"kind":"INTERFACE","name":"ContentItem","possibleTypes":[{"name":"UniversalContentItem"},{"name":"DevotionalContentItem"},{"name":"MediaContentItem"},{"name":"ContentSeriesContentItem"}]},{"kind":"INTERFACE","name":"Media","possibleTypes":[{"name":"ImageMedia"},{"name":"VideoMedia"},{"name":"AudioMedia"}]},{"kind":"INTERFACE","name":"MediaSource","possibleTypes":[{"name":"ImageMediaSource"},{"name":"VideoMediaSource"},{"name":"AudioMediaSource"}]},{"kind":"INTERFACE","name":"Sharable","possibleTypes":[{"name":"SharableContentItem"}]}]}}
\ No newline at end of file
diff --git a/apolloschurchapp/src/client/httpLink.js b/apolloschurchapp/src/client/httpLink.js
index 157fb8e..c8974f8 100644
--- a/apolloschurchapp/src/client/httpLink.js
+++ b/apolloschurchapp/src/client/httpLink.js
@@ -1,11 +1,24 @@
 import { Platform } from 'react-native';
 import { createUploadLink } from 'apollo-upload-client';
-import { APP_DATA_URL, ANDROID_URL } from 'react-native-dotenv';
+import Config from 'react-native-config';
+import { split } from 'apollo-link';
+import { createHttpLink } from 'apollo-link-http';
+import { getMainDefinition } from 'apollo-utilities';
 
-let uri = APP_DATA_URL;
-const androidUri = ANDROID_URL || '10.0.2.2';
+let uri = Config.APP_DATA_URL;
+const androidUri = Config.ANDROID_URL || '10.0.2.2';
 
 // Android's emulator requires localhost network traffic to go through 10.0.2.2
 if (Platform.OS === 'android') uri = uri.replace('localhost', androidUri);
 
-export default createUploadLink({ uri });
+export default split(
+  ({ query }) => {
+    const { kind, operation } = getMainDefinition(query);
+    return kind === 'OperationDefinition' && operation === 'mutation';
+  },
+  createUploadLink({ uri }),
+  createHttpLink({
+    uri,
+    useGETForQueries: true,
+  })
+);
diff --git a/apolloschurchapp/src/client/index.js b/apolloschurchapp/src/client/index.js
index 76cff4a..c473190 100644
--- a/apolloschurchapp/src/client/index.js
+++ b/apolloschurchapp/src/client/index.js
@@ -3,22 +3,27 @@ import PropTypes from 'prop-types';
 import { ApolloProvider } from 'react-apollo';
 import { ApolloClient } from 'apollo-client';
 import { ApolloLink } from 'apollo-link';
-import SplashScreen from 'react-native-splash-screen';
 
+import { authLink } from '@apollosproject/ui-auth';
+import { resolvers, schema, defaults } from '../store';
 import httpLink from './httpLink';
-import clientStateLink from './clientStateLink';
-import authLink from './authLink'; // eslint-disable-line
-import cache, { ensureCacheHydration } from './cache';
+import cache, { ensureCacheHydration, MARK_CACHE_LOADED } from './cache';
 
-const link = clientStateLink.concat(ApolloLink.from([authLink, httpLink]));
+const link = ApolloLink.from([authLink, httpLink]);
 
 export const client = new ApolloClient({
   link,
   cache,
-  queryDeduplication: true,
+  queryDeduplication: false,
   shouldBatch: true,
+  resolvers,
+  typeDefs: schema,
 });
 
+cache.writeData({ data: defaults });
+// Ensure that media player still works after logout.
+client.onResetStore(() => cache.writeData({ data: defaults }));
+
 class ClientProvider extends PureComponent {
   static propTypes = {
     client: PropTypes.shape({
@@ -36,7 +41,7 @@ class ClientProvider extends PureComponent {
     } catch (e) {
       throw e;
     } finally {
-      if (SplashScreen && SplashScreen.hide) SplashScreen.hide();
+      client.mutate({ mutation: MARK_CACHE_LOADED });
     }
   }
 
diff --git a/apolloschurchapp/src/config.js b/apolloschurchapp/src/config.js
deleted file mode 100644
index 248183d..0000000
--- a/apolloschurchapp/src/config.js
+++ /dev/null
@@ -1,6 +0,0 @@
-/* eslint-disable import/prefer-default-export */
-import { ONE_SIGNAL_KEY as oneSignalKey } from 'react-native-dotenv';
-
-const ONE_SIGNAL_KEY = oneSignalKey;
-
-export { ONE_SIGNAL_KEY };
diff --git a/apolloschurchapp/src/content-single/ActionContainer/index.js b/apolloschurchapp/src/content-single/ActionContainer/index.js
index 2df4bae..e1d6cb1 100644
--- a/apolloschurchapp/src/content-single/ActionContainer/index.js
+++ b/apolloschurchapp/src/content-single/ActionContainer/index.js
@@ -1,5 +1,6 @@
 import React from 'react';
-import { Platform, View } from 'react-native';
+import { Platform } from 'react-native';
+import SafeAreaView from 'react-native-safe-area-view';
 import PropTypes from 'prop-types';
 import { Query } from 'react-apollo';
 import { get } from 'lodash';
@@ -21,7 +22,7 @@ const PositioningView = styled(({ theme }) => ({
 const Container = styled(({ theme }) => ({
   backgroundColor: theme.colors.paper,
   ...Platform.select(theme.shadows.default),
-}))(View);
+}))(SafeAreaView);
 
 const ActionContainer = ({ itemId }) => (
   <Container>
diff --git a/apolloschurchapp/src/content-single/ContentSingle.js b/apolloschurchapp/src/content-single/ContentSingle.js
index f5b2709..eaaf244 100644
--- a/apolloschurchapp/src/content-single/ContentSingle.js
+++ b/apolloschurchapp/src/content-single/ContentSingle.js
@@ -5,8 +5,7 @@ import PropTypes from 'prop-types';
 
 import { ErrorCard, ThemeMixin } from '@apollosproject/ui-kit';
 
-import TrackEventWhenLoaded from 'apolloschurchapp/src/analytics/TrackEventWhenLoaded';
-import { events } from 'apolloschurchapp/src/analytics';
+import { TrackEventWhenLoaded } from '@apollosproject/ui-analytics';
 
 import ActionContainer from './ActionContainer';
 import getContentItem from './getContentItem';
@@ -80,7 +79,7 @@ class ContentSingle extends PureComponent {
       >
         <TrackEventWhenLoaded
           loaded={!!(!loading && content.title)}
-          eventName={events.ViewContent}
+          eventName={'View Contentx'}
           properties={{
             title: content.title,
             itemId: this.itemId,
diff --git a/apolloschurchapp/src/content-single/DevotionalContentItem/Devotional.stories.js b/apolloschurchapp/src/content-single/DevotionalContentItem/Devotional.stories.js
index 109a669..8bf3ffd 100644
--- a/apolloschurchapp/src/content-single/DevotionalContentItem/Devotional.stories.js
+++ b/apolloschurchapp/src/content-single/DevotionalContentItem/Devotional.stories.js
@@ -1,60 +1,62 @@
-import React from 'react';
-import { storiesOf } from '@storybook/react-native';
-
-import Devotional from '.';
-
-const scripture = [
-  {
-    id: '1CO.15.57',
-    reference: '1 Corinthians 15:57',
-    html:
-      '<p class="p"><span data-number="57" class="v">57</span>But thanks be to God, who gives us the victory through our Lord Jesus Christ. </p>',
-  },
-  {
-    id: 'EXO.17.8-EXO.17.15',
-    reference: 'Exodus 17:8-15',
-    html:
-      '<p class="p"><span data-number="8" class="v">8</span>Then Amalek came and fought with Israel in Rephidim. <span data-number="9" class="v">9</span>Moses said to Joshua, “Choose men for us, and go out to fight with Amalek. Tomorrow I will stand on the top of the hill with God’s rod in my hand.” <span data-number="10" class="v">10</span>So Joshua did as Moses had told him, and fought with Amalek; and Moses, Aaron, and Hur went up to the top of the hill. <span data-number="11" class="v">11</span>When Moses held up his hand, Israel prevailed. When he let down his hand, Amalek prevailed. <span data-number="12" class="v">12</span>But Moses’ hands were heavy; so they took a stone, and put it under him, and he sat on it. Aaron and Hur held up his hands, the one on the one side, and the other on the other side. His hands were steady until sunset. <span data-number="13" class="v">13</span>Joshua defeated Amalek and his people with the edge of the sword. <span data-number="14" class="v">14</span>Yahweh said to Moses, “Write this for a memorial in a book, and rehearse it in the ears of Joshua: that I will utterly blot out the memory of Amalek from under the sky.” <span data-number="15" class="v">15</span>Moses built an altar, and called its name “Yahweh our Banner”.</p>',
-  },
-];
-
-const content = {
-  body:
-    '<p>Sometimes God&rsquo;s promises to us involve a fight. We have to fight to keep our focus on Him, fight to move towards the promise we know God has laid on our hearts. We have a real enemy that would love nothing more than to get us sidetracked and doubt God&rsquo;s promises. So we fight saying that we are going to believe God will do what He says He will do, and we keep fighting until we see that promise come to life.</p><p>In Exodus 17:8-15 the nation of Israel, freed from great oppression in Egypt was traveling to the land God promised them. Yet, Israel was fighting, again.&nbsp;<br />&nbsp;<br />As the Israelites were fighting in the valley,&nbsp;Moses was on the hill top lifting his hands in prayer for these great fighters. Israel fought hard, and with the prayers of Moses and the help of his companions, Aaron and Hur, the Amalekites were defeated. Moses knew that it was solely because of the Lord&rsquo;s hand of protection and blessing on the Israelites that they won the battle. &ldquo;Moses built an altar and called it The Lord is my banner&rdquo; (Exodus 17:15).</p><p>In battle opposing nations would fly their own flag on a pole at each of their respective front lines. This was to give their soldiers a feeling of hope and a focal point. This is what God is to us: a banner of encouragement to give us hope and a focal point.</p><blockquote><p>The Lord protects us, covers us with love, and&nbsp;blesses us continually.</p></blockquote><p>The Lord is our banner. He protects us; He covers us with love; He blesses us continually. The Lord gives us hope and a place to focus during the tough fights when the enemy is trying to make us doubt God&rsquo;s promises.&nbsp;</p><p>When was the last time you sat and thanked Jesus for all the ways he is a banner in your life?&nbsp;</p><p>Reflect:</p><ul><li>What is one way the Lord has been your banner?</li><li>How can you focus more today on the Lord and all the things He does for you throughout the day?</li></ul>',
-  route: { jumpTo: () => {} },
-  title: 'God is Our Banner',
-};
-
-const renderItem = () => {};
-
-const loadingStateObject = {
-  node: {
-    id: 'fakeId0',
-    title: '',
-    isLoading: true,
-  },
-};
-
-const stories = storiesOf('Devotional', module);
-
-stories.add('Example', () => (
-  <Devotional
-    body={content.body}
-    title={content.title}
-    isLoading={false}
-    scripture={scripture}
-    renderItem={renderItem}
-    loadingStateObject={loadingStateObject}
-  />
-));
-
-stories.add('isLoading', () => (
-  <Devotional
-    body={content.body}
-    title={content.title}
-    isLoading
-    scripture={scripture}
-    renderItem={renderItem}
-    loadingStateObject={loadingStateObject}
-  />
-));
+// TODO: fix story
+
+// import React from 'react';
+// import { storiesOf } from '@apollosproject/ui-storybook';
+
+// import Devotional from '.';
+
+// const scripture = [
+//   {
+//     id: '1CO.15.57',
+//     reference: '1 Corinthians 15:57',
+//     html:
+//       '<p class="p"><span data-number="57" class="v">57</span>But thanks be to God, who gives us the victory through our Lord Jesus Christ. </p>',
+//   },
+//   {
+//     id: 'EXO.17.8-EXO.17.15',
+//     reference: 'Exodus 17:8-15',
+//     html:
+//       '<p class="p"><span data-number="8" class="v">8</span>Then Amalek came and fought with Israel in Rephidim. <span data-number="9" class="v">9</span>Moses said to Joshua, “Choose men for us, and go out to fight with Amalek. Tomorrow I will stand on the top of the hill with God’s rod in my hand.” <span data-number="10" class="v">10</span>So Joshua did as Moses had told him, and fought with Amalek; and Moses, Aaron, and Hur went up to the top of the hill. <span data-number="11" class="v">11</span>When Moses held up his hand, Israel prevailed. When he let down his hand, Amalek prevailed. <span data-number="12" class="v">12</span>But Moses’ hands were heavy; so they took a stone, and put it under him, and he sat on it. Aaron and Hur held up his hands, the one on the one side, and the other on the other side. His hands were steady until sunset. <span data-number="13" class="v">13</span>Joshua defeated Amalek and his people with the edge of the sword. <span data-number="14" class="v">14</span>Yahweh said to Moses, “Write this for a memorial in a book, and rehearse it in the ears of Joshua: that I will utterly blot out the memory of Amalek from under the sky.” <span data-number="15" class="v">15</span>Moses built an altar, and called its name “Yahweh our Banner”.</p>',
+//   },
+// ];
+
+// const content = {
+//   body:
+//     '<p>Sometimes God&rsquo;s promises to us involve a fight. We have to fight to keep our focus on Him, fight to move towards the promise we know God has laid on our hearts. We have a real enemy that would love nothing more than to get us sidetracked and doubt God&rsquo;s promises. So we fight saying that we are going to believe God will do what He says He will do, and we keep fighting until we see that promise come to life.</p><p>In Exodus 17:8-15 the nation of Israel, freed from great oppression in Egypt was traveling to the land God promised them. Yet, Israel was fighting, again.&nbsp;<br />&nbsp;<br />As the Israelites were fighting in the valley,&nbsp;Moses was on the hill top lifting his hands in prayer for these great fighters. Israel fought hard, and with the prayers of Moses and the help of his companions, Aaron and Hur, the Amalekites were defeated. Moses knew that it was solely because of the Lord&rsquo;s hand of protection and blessing on the Israelites that they won the battle. &ldquo;Moses built an altar and called it The Lord is my banner&rdquo; (Exodus 17:15).</p><p>In battle opposing nations would fly their own flag on a pole at each of their respective front lines. This was to give their soldiers a feeling of hope and a focal point. This is what God is to us: a banner of encouragement to give us hope and a focal point.</p><blockquote><p>The Lord protects us, covers us with love, and&nbsp;blesses us continually.</p></blockquote><p>The Lord is our banner. He protects us; He covers us with love; He blesses us continually. The Lord gives us hope and a place to focus during the tough fights when the enemy is trying to make us doubt God&rsquo;s promises.&nbsp;</p><p>When was the last time you sat and thanked Jesus for all the ways he is a banner in your life?&nbsp;</p><p>Reflect:</p><ul><li>What is one way the Lord has been your banner?</li><li>How can you focus more today on the Lord and all the things He does for you throughout the day?</li></ul>',
+//   route: { jumpTo: () => {} },
+//   title: 'God is Our Banner',
+// };
+
+// const renderItem = () => {};
+
+// const loadingStateObject = {
+//   node: {
+//     id: 'fakeId0',
+//     title: '',
+//     isLoading: true,
+//   },
+// };
+
+// const stories = storiesOf('Devotional', module);
+
+// stories.add('Example', () => (
+//   <Devotional
+//     body={content.body}
+//     title={content.title}
+//     isLoading={false}
+//     scripture={scripture}
+//     renderItem={renderItem}
+//     loadingStateObject={loadingStateObject}
+//   />
+// ));
+
+// stories.add('isLoading', () => (
+//   <Devotional
+//     body={content.body}
+//     title={content.title}
+//     isLoading
+//     scripture={scripture}
+//     renderItem={renderItem}
+//     loadingStateObject={loadingStateObject}
+//   />
+// ));
diff --git a/apolloschurchapp/src/content-single/DevotionalContentItem/Devotional.tests.js b/apolloschurchapp/src/content-single/DevotionalContentItem/Devotional.tests.js
index 59ed7e1..efaffbd 100644
--- a/apolloschurchapp/src/content-single/DevotionalContentItem/Devotional.tests.js
+++ b/apolloschurchapp/src/content-single/DevotionalContentItem/Devotional.tests.js
@@ -1,7 +1,7 @@
 import React from 'react';
 import renderer from 'react-test-renderer';
-import wait from 'waait';
 import Providers from 'apolloschurchapp/src/Providers';
+import { renderWithApolloData } from 'apolloschurchapp/src/utils/testUtils';
 import getContentItemContent from '../HTMLContent/getContentItemContent';
 import getScripture from './getScripture';
 import Devotional from '.';
@@ -66,7 +66,7 @@ const navigation = {
 
 describe('the Devotional component', () => {
   it('renders a devotional', async () => {
-    const tree = renderer.create(
+    const tree = await renderWithApolloData(
       <Providers mocks={mocks}>
         <Devotional
           id="1"
@@ -76,16 +76,19 @@ describe('the Devotional component', () => {
         />
       </Providers>
     );
-    await wait(0); // wait for response
     expect(tree).toMatchSnapshot();
   });
   it('renders even with empty scripture array', async () => {
-    const tree = renderer.create(
+    const tree = await renderWithApolloData(
       <Providers mocks={mocks}>
-        <Devotional id="1" content={content} loading navigation={navigation} />
+        <Devotional
+          id="1"
+          content={content}
+          loading={false}
+          navigation={navigation}
+        />
       </Providers>
     );
-    await wait(0); // wait for response
     expect(tree).toMatchSnapshot();
   });
   it('renders a loading state', async () => {
@@ -94,7 +97,6 @@ describe('the Devotional component', () => {
         <Devotional id="1" content={content} loading navigation={navigation} />
       </Providers>
     );
-    await wait(0); // wait for response
     expect(tree).toMatchSnapshot();
   });
 });
diff --git a/apolloschurchapp/src/content-single/DevotionalContentItem/index.js b/apolloschurchapp/src/content-single/DevotionalContentItem/index.js
index 8544eba..088bbdc 100644
--- a/apolloschurchapp/src/content-single/DevotionalContentItem/index.js
+++ b/apolloschurchapp/src/content-single/DevotionalContentItem/index.js
@@ -1,6 +1,6 @@
 import React, { PureComponent } from 'react';
-import { SafeAreaView } from 'react-native';
 import PropTypes from 'prop-types';
+import { SafeAreaView } from 'react-navigation';
 import { Query } from 'react-apollo';
 
 import {
@@ -86,10 +86,11 @@ class DevotionalContentItem extends PureComponent {
     loading,
   }) => {
     if (error) return <ErrorCard error={error} />;
+
     // only include scriptures where the references are not null
-    const validScriptures = scriptures.filter(
-      (scripture) => scripture.reference != null
-    );
+    const validScriptures = scriptures
+      ? scriptures.filter((scripture) => scripture.reference != null)
+      : [];
 
     const hasScripture = loading || validScriptures.length;
     const tabRoutes = [{ title: 'Devotional', key: 'content' }];
@@ -108,7 +109,7 @@ class DevotionalContentItem extends PureComponent {
   render() {
     return (
       <BackgroundView>
-        <FlexedSafeAreaView>
+        <FlexedSafeAreaView forceInset={{ top: 'always' }}>
           <Query query={getScripture} variables={{ itemId: this.props.id }}>
             {this.renderTabs}
           </Query>
diff --git a/apolloschurchapp/src/content-single/HTMLContent/index.js b/apolloschurchapp/src/content-single/HTMLContent/index.js
index 4d4f384..39c62bc 100644
--- a/apolloschurchapp/src/content-single/HTMLContent/index.js
+++ b/apolloschurchapp/src/content-single/HTMLContent/index.js
@@ -2,7 +2,7 @@ import React from 'react';
 import PropTypes from 'prop-types';
 import { Query } from 'react-apollo';
 
-import HTMLView from 'apolloschurchapp/src/ui/HTMLView';
+import HTMLView from '@apollosproject/ui-htmlview';
 import { ErrorCard } from '@apollosproject/ui-kit';
 
 import getContentItemContent from './getContentItemContent';
diff --git a/apolloschurchapp/src/content-single/UniversalContentItem/index.js b/apolloschurchapp/src/content-single/UniversalContentItem/index.js
index f34789c..80c9aae 100644
--- a/apolloschurchapp/src/content-single/UniversalContentItem/index.js
+++ b/apolloschurchapp/src/content-single/UniversalContentItem/index.js
@@ -18,14 +18,14 @@ const FlexedScrollView = styled({ flex: 1 })(ScrollView);
 const UniversalContentItem = ({ content, loading }) => {
   const coverImageSources = get(content, 'coverImage.sources', []);
   return (
-    <FlexedScrollView>
-      {coverImageSources.length || loading ? (
-        <GradientOverlayImage
-          isLoading={!coverImageSources.length && loading}
-          source={coverImageSources}
-        />
-      ) : null}
-      <BackgroundView>
+    <BackgroundView>
+      <FlexedScrollView>
+        {coverImageSources.length || loading ? (
+          <GradientOverlayImage
+            isLoading={!coverImageSources.length && loading}
+            source={coverImageSources}
+          />
+        ) : null}
         <MediaControls contentId={content.id} />
         <PaddedView>
           <H2 padded isLoading={!content.title && loading}>
@@ -34,8 +34,8 @@ const UniversalContentItem = ({ content, loading }) => {
           <HTMLContent contentId={content.id} />
         </PaddedView>
         <HorizontalContentFeed contentId={content.id} />
-      </BackgroundView>
-    </FlexedScrollView>
+      </FlexedScrollView>
+    </BackgroundView>
   );
 };
 
diff --git a/apolloschurchapp/src/content-single/getContentItem.js b/apolloschurchapp/src/content-single/getContentItem.js
index 40b8221..b4ebc19 100644
--- a/apolloschurchapp/src/content-single/getContentItem.js
+++ b/apolloschurchapp/src/content-single/getContentItem.js
@@ -5,6 +5,8 @@ export const contentItemFragment = gql`
     id
     title
     isLiked
+    likedCount
+    summary
     coverImage {
       name
       sources {
diff --git a/apolloschurchapp/src/content-single/index.js b/apolloschurchapp/src/content-single/index.js
index f5b2709..83072a7 100644
--- a/apolloschurchapp/src/content-single/index.js
+++ b/apolloschurchapp/src/content-single/index.js
@@ -1,104 +1,20 @@
-import React, { PureComponent } from 'react';
-import { Query } from 'react-apollo';
-import { get } from 'lodash';
-import PropTypes from 'prop-types';
-
-import { ErrorCard, ThemeMixin } from '@apollosproject/ui-kit';
-
-import TrackEventWhenLoaded from 'apolloschurchapp/src/analytics/TrackEventWhenLoaded';
-import { events } from 'apolloschurchapp/src/analytics';
-
-import ActionContainer from './ActionContainer';
-import getContentItem from './getContentItem';
-
-import DevotionalContentItem from './DevotionalContentItem';
-import UniversalContentItem from './UniversalContentItem';
-
-import NavigationHeader from './NavigationHeader';
-
-class ContentSingle extends PureComponent {
-  static propTypes = {
-    navigation: PropTypes.shape({
-      getParam: PropTypes.func,
-      push: PropTypes.func,
-    }),
-  };
-
-  static navigationOptions = {
-    header: NavigationHeader,
-  };
-
-  get itemId() {
-    return this.props.navigation.getParam('itemId', []);
+import { createStackNavigator } from 'react-navigation';
+
+import ContentSingle from './ContentSingle';
+
+const ContentSingleNavigator = createStackNavigator(
+  {
+    ContentSingle,
+  },
+  {
+    initialRouteName: 'ContentSingle',
+    headerMode: 'float',
+    headerTransitionPreset: 'fade-in-place',
   }
+);
 
-  get queryVariables() {
-    return { itemId: this.itemId };
-  }
-
-  renderContent = ({ content, loading, error }) => {
-    let { __typename } = content;
-    if (!__typename && this.itemId) {
-      [__typename] = this.itemId.split(':');
-    }
-    switch (__typename) {
-      case 'DevotionalContentItem':
-        return (
-          <DevotionalContentItem
-            id={this.itemId}
-            content={content}
-            loading={loading}
-            error={error}
-          />
-        );
-      case 'UniversalContentItem':
-      default:
-        return (
-          <UniversalContentItem
-            id={this.itemId}
-            content={content}
-            loading={loading}
-            error={error}
-          />
-        );
-    }
-  };
-
-  renderWithData = ({ loading, error, data }) => {
-    if (error) return <ErrorCard error={error} />;
-
-    const content = data.node || {};
-
-    const { theme = {}, id } = content;
-
-    return (
-      <ThemeMixin
-        mixin={{
-          type: get(theme, 'type', 'light').toLowerCase(),
-          colors: get(theme, 'colors'),
-        }}
-      >
-        <TrackEventWhenLoaded
-          loaded={!!(!loading && content.title)}
-          eventName={events.ViewContent}
-          properties={{
-            title: content.title,
-            itemId: this.itemId,
-          }}
-        />
-        {this.renderContent({ content, loading, error })}
-        <ActionContainer itemId={id} />
-      </ThemeMixin>
-    );
-  };
-
-  render() {
-    return (
-      <Query query={getContentItem} variables={this.queryVariables}>
-        {this.renderWithData}
-      </Query>
-    );
-  }
-}
+ContentSingleNavigator.navigationOptions = {
+  header: null,
+};
 
-export default ContentSingle;
+export default ContentSingleNavigator;
diff --git a/apolloschurchapp/src/index.js b/apolloschurchapp/src/index.js
index 7fe89f1..630be1e 100644
--- a/apolloschurchapp/src/index.js
+++ b/apolloschurchapp/src/index.js
@@ -1,38 +1,51 @@
 import React from 'react';
 import { StatusBar } from 'react-native';
 import { createStackNavigator } from 'react-navigation';
-// import { Sentry } from 'react-native-sentry';
+import SplashScreen from 'react-native-splash-screen';
 
 import { BackgroundView, withTheme } from '@apollosproject/ui-kit';
+import Passes from '@apollosproject/ui-passes';
 import MediaPlayer from 'apolloschurchapp/src/ui/MediaPlayer';
+import Auth, { ProtectedRoute } from '@apollosproject/ui-auth';
+
 import Providers from './Providers';
-import NotificationsInit from './Notifications';
 import NavigationService from './NavigationService';
 import ContentSingle from './content-single';
 import Tabs from './tabs';
-import Auth from './auth';
 import PersonalDetails from './user-settings/PersonalDetails';
 import ChangePassword from './user-settings/ChangePassword';
-
-// Sentry.config(
-//   'https://5908fa19ed37447f86b2717423cadec5:45dd3b58792b413cb67109c5e63a0bb7@sentry.io/1241658'
-// ).install();
+import Location from './user-settings/Locations';
+import LandingScreen from './LandingScreen';
+import UserWebBrowser from './user-web-browser';
+import Onboarding from './ui/Onboarding';
 
 const AppStatusBar = withTheme(({ theme }) => ({
   barStyle: 'dark-content',
   backgroundColor: theme.colors.paper,
 }))(StatusBar);
 
+const ProtectedRouteWithSplashScreen = (props) => {
+  const handleOnRouteChange = () => SplashScreen.hide();
+
+  return <ProtectedRoute {...props} onRouteChange={handleOnRouteChange} />;
+};
+
 const AppNavigator = createStackNavigator(
   {
+    ProtectedRoute: ProtectedRouteWithSplashScreen,
     Tabs,
     ContentSingle,
     Auth,
     PersonalDetails,
     ChangePassword,
+    Location,
+    Passes,
+    UserWebBrowser,
+    Onboarding,
+    LandingScreen,
   },
   {
-    initialRouteName: 'Tabs',
+    initialRouteName: 'ProtectedRoute',
     mode: 'modal',
     headerMode: 'screen',
   }
@@ -47,7 +60,6 @@ const App = () => (
           NavigationService.setTopLevelNavigator(navigatorRef);
         }}
       />
-      <NotificationsInit />
       <MediaPlayer />
     </BackgroundView>
   </Providers>
diff --git a/apolloschurchapp/src/Notifications.js b/apolloschurchapp/src/notifications/NotificationManager.js
similarity index 62%
rename from apolloschurchapp/src/Notifications.js
rename to apolloschurchapp/src/notifications/NotificationManager.js
index d37e22f..bdeb95d 100644
--- a/apolloschurchapp/src/Notifications.js
+++ b/apolloschurchapp/src/notifications/NotificationManager.js
@@ -1,24 +1,46 @@
-import querystring from 'querystring';
 import URL from 'url';
+import querystring from 'querystring';
 import { Component } from 'react';
 import { Linking } from 'react-native';
+import PropTypes from 'prop-types';
+import gql from 'graphql-tag';
+import { withApollo } from 'react-apollo';
 import OneSignal from 'react-native-onesignal';
-import NavigationService from './NavigationService';
-import { ONE_SIGNAL_KEY } from './config';
+import Config from 'react-native-config';
+import { get } from 'lodash';
+
+import NavigationService from '../NavigationService';
+
+const UPDATE_DEVICE_PUSH_ID = gql`
+  mutation updateDevicePushId($pushId: String!) {
+    updateDevicePushId(pushId: $pushId) @client
+  }
+`;
+
+class NotificationsInit extends Component {
+  static propTypes = {
+    children: PropTypes.oneOfType([
+      PropTypes.arrayOf(PropTypes.node),
+      PropTypes.node,
+    ]).isRequired,
+  };
 
-export default class NotificationsInit extends Component {
   static navigationOptions = {};
 
-  componentWillMount() {
-    OneSignal.init(ONE_SIGNAL_KEY, {
-      kOSSettingsKeyAutoPrompt: true,
+  static propTypes = {
+    client: PropTypes.shape({
+      mutate: PropTypes.func,
+    }),
+  };
+
+  componentDidMount() {
+    OneSignal.init(Config.ONE_SIGNAL_KEY, {
+      kOSSettingsKeyAutoPrompt: false,
     });
     OneSignal.addEventListener('received', this.onReceived);
     OneSignal.addEventListener('opened', this.onOpened);
     OneSignal.addEventListener('ids', this.onIds);
-  }
-
-  componentDidMount() {
+    OneSignal.configure();
     Linking.getInitialURL().then((url) => {
       this.navigate(url);
     });
@@ -53,17 +75,22 @@ export default class NotificationsInit extends Component {
     // apolloschurchapp://AppStackNavigator/Connect
     // apolloschurchapp://SomethingElse/Connect
     // apolloschurchapp://SomethingElse/ContentSingle?itemId=SomeItemId:blablalba
-    const { url } = openResult.notification.payload.additionalData;
+    const url = get(openResult, 'notification.payload.additionalData.url');
     if (url) {
       this.navigate(url);
     }
   };
 
   onIds = (device) => {
-    console.log('Device info: ', device);
+    this.props.client.mutate({
+      mutation: UPDATE_DEVICE_PUSH_ID,
+      variables: { pushId: device.userId },
+    });
   };
 
   render() {
-    return null;
+    return this.props.children;
   }
 }
+
+export default withApollo(NotificationsInit);
diff --git a/apolloschurchapp/src/notifications/index.js b/apolloschurchapp/src/notifications/index.js
new file mode 100644
index 0000000..5a95ec1
--- /dev/null
+++ b/apolloschurchapp/src/notifications/index.js
@@ -0,0 +1,7 @@
+export NotificationsManager from './NotificationManager';
+export {
+  getPushPermissions,
+  requestPushPermissions,
+  getNotificationsEnabled,
+} from './permissionUtils';
+export updatePushId from './updatePushId';
diff --git a/apolloschurchapp/src/notifications/permissionUtils.js b/apolloschurchapp/src/notifications/permissionUtils.js
new file mode 100644
index 0000000..4e07b16
--- /dev/null
+++ b/apolloschurchapp/src/notifications/permissionUtils.js
@@ -0,0 +1,39 @@
+import OneSignal from 'react-native-onesignal';
+import gql from 'graphql-tag';
+
+const getPushPermissions = async () =>
+  new Promise((resolve) =>
+    OneSignal.getPermissionSubscriptionState((status) =>
+      // Ensure the client (notificationsEnabled) && OneSignal (subscriptionEnabled) are boolean values
+      resolve(!!(status.notificationsEnabled && status.subscriptionEnabled))
+    )
+  );
+
+const promptForPushNotificationsWithUserResponse = async () =>
+  new Promise((resolve) =>
+    OneSignal.promptForPushNotificationsWithUserResponse(resolve)
+  );
+
+const setNotifcationsEnabled = gql`
+  mutation updatePushPermissions($enabled: Boolean!) {
+    updatePushPermissions(enabled: $enabled) @client
+  }
+`;
+
+const getNotificationsEnabled = gql`
+  query getPushPermissions {
+    notificationsEnabled @client(always: true)
+  }
+`;
+
+const requestPushPermissions = async ({ client }) => {
+  const notificationsEnabled = await promptForPushNotificationsWithUserResponse();
+  await client.mutate({
+    mutation: setNotifcationsEnabled,
+    variables: { enabled: notificationsEnabled },
+  });
+
+  return notificationsEnabled;
+};
+
+export { getPushPermissions, requestPushPermissions, getNotificationsEnabled };
diff --git a/apolloschurchapp/src/notifications/permissionUtils.tests.js b/apolloschurchapp/src/notifications/permissionUtils.tests.js
new file mode 100644
index 0000000..870d597
--- /dev/null
+++ b/apolloschurchapp/src/notifications/permissionUtils.tests.js
@@ -0,0 +1,29 @@
+import { client } from '../client';
+import {
+  getPushPermissions,
+  getNotificationsEnabled,
+  requestPushPermissions,
+} from './permissionUtils';
+
+describe('getPushPermissions', () => {
+  it('should return a boolean based on the result from OneSignal', async () => {
+    const result = await getPushPermissions();
+    expect(result).toEqual(true);
+  });
+});
+
+describe('requestPushPermissions', () => {
+  it('must update the store if OneSignal returns true', async () => {
+    expect(
+      client.readQuery({ query: getNotificationsEnabled })
+    ).toMatchSnapshot('Before calling mutation');
+
+    const result = await requestPushPermissions({ client });
+    expect(result).toEqual(true);
+    // this doesn't work yet :(
+    // the result is same as above, it looks like the client state isn't loading in time
+    expect(
+      client.readQuery({ query: getNotificationsEnabled })
+    ).toMatchSnapshot('After calling mutation');
+  });
+});
diff --git a/apolloschurchapp/src/notifications/updatePushId.js b/apolloschurchapp/src/notifications/updatePushId.js
new file mode 100644
index 0000000..a43b658
--- /dev/null
+++ b/apolloschurchapp/src/notifications/updatePushId.js
@@ -0,0 +1,18 @@
+import gql from 'graphql-tag';
+
+const UPDATE_PUSH_ID = gql`
+  mutation updateUserPushSettings($input: PushSettingsInput!) {
+    updateUserPushSettings(input: $input) {
+      id
+    }
+  }
+`;
+
+const updatePushId = async ({ pushId, client }) => {
+  await client.mutate({
+    mutation: UPDATE_PUSH_ID,
+    variables: { input: { pushProviderUserId: pushId } },
+  });
+};
+
+export { updatePushId as default };
diff --git a/apolloschurchapp/src/store/Auth.tests.js b/apolloschurchapp/src/store/Auth.tests.js
deleted file mode 100644
index da6b401..0000000
--- a/apolloschurchapp/src/store/Auth.tests.js
+++ /dev/null
@@ -1,11 +0,0 @@
-import { client } from 'apolloschurchapp/src/client';
-
-import { resolvers } from '.';
-
-describe('Auth Store', () => {
-  it('logs a user out', async () => {
-    client.cache.writeData({ data: { authToken: 'some-auth-token' } });
-    resolvers.Mutation.logout({}, {}, { cache: client.cache });
-    expect(client.cache).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/store/MediaPlayer.tests.js b/apolloschurchapp/src/store/MediaPlayer.tests.js
index 68724b9..5ebf3a8 100644
--- a/apolloschurchapp/src/store/MediaPlayer.tests.js
+++ b/apolloschurchapp/src/store/MediaPlayer.tests.js
@@ -35,24 +35,26 @@ describe('MediaPlayer Store', () => {
   it('plays a track', async () => {
     resolvers.Mutation.mediaPlayerPlayNow({}, testTrack, {
       cache: client.cache,
+      client,
     });
     expect(client.query({ query })).resolves.toMatchSnapshot();
   });
   it('updates player state', async () => {
     resolvers.Mutation.mediaPlayerPlayNow({}, testTrack, {
       cache: client.cache,
+      client,
     });
     expect(client.query({ query })).resolves.toMatchSnapshot();
     resolvers.Mutation.mediaPlayerUpdateState(
       {},
       { isPlaying: false },
-      { cache: client.cache }
+      { cache: client.cache, client }
     );
     expect(client.query({ query })).resolves.toMatchSnapshot();
     resolvers.Mutation.mediaPlayerUpdateState(
       {},
       { isPlaying: true },
-      { cache: client.cache }
+      { cache: client.cache, client }
     );
   });
 });
diff --git a/apolloschurchapp/src/store/index.js b/apolloschurchapp/src/store/index.js
index 2873934..cee2356 100644
--- a/apolloschurchapp/src/store/index.js
+++ b/apolloschurchapp/src/store/index.js
@@ -1,21 +1,27 @@
 import { merge, get } from 'lodash';
 import gql from 'graphql-tag';
-import getLoginState from 'apolloschurchapp/src/auth/getLoginState';
-import { track, events } from 'apolloschurchapp/src/analytics';
-import { client } from '../client'; // eslint-disable-line
-import getAuthToken from './getAuthToken';
+
+import { track } from '@apollosproject/ui-analytics';
+import { Platform } from 'react-native';
+import { CACHE_LOADED } from '../client/cache'; // eslint-disable-line
+
+import {
+  getPushPermissions,
+  updatePushId,
+  getNotificationsEnabled,
+} from '../notifications';
 // TODO: this will require more organization...ie...not keeping everything in one file.
 // But this is simple while our needs our small.
 
 export const schema = `
   type Query {
-    authToken: String
     mediaPlayer: MediaPlayerState
-    isLoggedIn: Boolean
+    devicePushId: String
+    cacheLoaded: Boolean
+    notificationsEnabled: Boolean
   }
 
   type Mutation {
-    logout
     mediaPlayerUpdateState(isPlaying: Boolean, isFullscreen: Boolean, isVisible: Boolean): Boolean
     mediaPlayerSetPlayhead(currentTime: Float): Boolean
     mediaPlayerPlayNow(
@@ -27,7 +33,9 @@ export const schema = `
       isVideo: Boolean,
     ): Boolean
 
-    handleLogin(authToken: String!)
+    cacheMarkLoaded
+    updateDevicePushId(pushId: String!)
+    updatePushPermissions(enabled: Boolean!)
   }
 
   type MediaPlayerState {
@@ -58,7 +66,9 @@ export const schema = `
 
 export const defaults = {
   __typename: 'Query',
-  authToken: null,
+  cacheLoaded: false,
+  pushId: null,
+  notificationsEnabled: Platform.OS === 'android',
   mediaPlayer: {
     __typename: 'MediaPlayerState',
     currentTrack: null,
@@ -73,52 +83,18 @@ export const defaults = {
 
 let trackId = 0;
 
+const getIsLoggedIn = gql`
+  query {
+    isLoggedIn @client
+  }
+`;
+
 export const resolvers = {
   Query: {
-    isLoggedIn: () => {
-      // When logging out, this query returns an error.
-      // Rescue the error, and return false.
-      try {
-        const { authToken } = client.readQuery({ query: getAuthToken });
-        return !!authToken;
-      } catch (e) {
-        return false;
-      }
-    },
+    notificationsEnabled: getPushPermissions,
   },
   Mutation: {
-    logout: (root, variables, { cache }) => {
-      client.resetStore();
-      cache.writeData({
-        data: defaults,
-      });
-      track({ eventName: events.UserLogout });
-      return null;
-    },
-
-    handleLogin: async (root, { authToken }, { cache }) => {
-      try {
-        await cache.writeQuery({
-          query: getAuthToken,
-          data: { authToken },
-        });
-        await cache.writeQuery({
-          query: getLoginState,
-          data: { isLoggedIn: true },
-        });
-        await cache.writeData({
-          data: { authToken },
-        });
-
-        track({ eventName: events.UserLogin });
-      } catch (e) {
-        throw e.message;
-      }
-
-      return null;
-    },
-
-    mediaPlayerPlayNow: (root, trackInfo, { cache }) => {
+    mediaPlayerPlayNow: (root, trackInfo, { cache, client }) => {
       const query = gql`
         query {
           mediaPlayer {
@@ -175,9 +151,9 @@ export const resolvers = {
           mediaPlayer: newMediaPlayerState,
         },
       });
-
       track({
-        eventName: events.UserPlayedMedia,
+        client,
+        eventName: 'UserPlayedMedia',
         properties: {
           uri: mediaTrack.uri,
           title: mediaTrack.title,
@@ -239,5 +215,62 @@ export const resolvers = {
       });
       return null;
     },
+    updateDevicePushId: async (root, { pushId }, { cache, client }) => {
+      const query = gql`
+        query {
+          pushId @client
+        }
+      `;
+      cache.writeQuery({
+        query,
+        data: {
+          pushId,
+        },
+      });
+
+      const { data: { isLoggedIn } = {} } = await client.query({
+        query: getIsLoggedIn,
+      });
+
+      if (isLoggedIn) {
+        updatePushId({ pushId, client });
+      }
+      return null;
+    },
+    updatePushPermissions: (root, { enabled }, { cache }) => {
+      cache.writeQuery({
+        query: getNotificationsEnabled,
+        data: {
+          notificationsEnabled: enabled,
+        },
+      });
+
+      return null;
+    },
+
+    cacheMarkLoaded: async (root, args, { cache, client }) => {
+      cache.writeQuery({
+        query: CACHE_LOADED,
+        data: {
+          cacheLoaded: true,
+        },
+      });
+      const { data: { isLoggedIn } = {} } = await client.query({
+        query: getIsLoggedIn,
+      });
+
+      const { pushId } = cache.readQuery({
+        query: gql`
+          query {
+            pushId @client
+          }
+        `,
+      });
+
+      if (isLoggedIn && pushId) {
+        updatePushId({ pushId, client });
+      }
+      return null;
+    },
   },
 };
diff --git a/apolloschurchapp/src/tabs/connect/Connect.js b/apolloschurchapp/src/tabs/connect/Connect.js
index 8de06b1..79bb6df 100644
--- a/apolloschurchapp/src/tabs/connect/Connect.js
+++ b/apolloschurchapp/src/tabs/connect/Connect.js
@@ -4,7 +4,7 @@ import { Query } from 'react-apollo';
 import { get } from 'lodash';
 import PropTypes from 'prop-types';
 
-import { LoginButton } from 'apolloschurchapp/src/auth';
+import { LoginButton } from '@apollosproject/ui-auth';
 import {
   H1,
   BodyText,
@@ -16,6 +16,7 @@ import {
   PaddedView,
 } from '@apollosproject/ui-kit';
 import ActionTable from './ActionTable';
+import Toolbar from './Toolbar';
 import { UserAvatarHeaderConnected } from './UserAvatarHeader';
 import { RecentlyLikedTileFeedConnected } from './RecentlyLikedTileFeed';
 import getLoginState from './getLoginState';
@@ -42,6 +43,10 @@ const StyledLoginButton = styled(({ theme }) => ({
   marginVertical: theme.sizing.baseUnit,
 }))(LoginButton);
 
+const StyledScrollView = styled(({ theme }) => ({
+  marginVertical: theme.sizing.baseUnit,
+}))(ScrollView);
+
 class Connect extends PureComponent {
   static navigationOptions = () => ({
     title: 'Connect',
@@ -63,11 +68,12 @@ class Connect extends PureComponent {
             if (get(data, 'isLoggedIn', false))
               return (
                 <SafeAreaView>
-                  <ScrollView>
+                  <StyledScrollView>
                     <UserAvatarHeaderConnected key="UserAvatarHeaderConnected" />
                     <RecentlyLikedTileFeedConnected key="RecentlyLikedTileFeedConnected" />
+                    <Toolbar />
                     <ActionTable />
-                  </ScrollView>
+                  </StyledScrollView>
                 </SafeAreaView>
               );
             return (
diff --git a/apolloschurchapp/src/tabs/connect/LikedContentList/LikedContentList.tests.js b/apolloschurchapp/src/tabs/connect/LikedContentList/LikedContentList.tests.js
index f6fadb7..78a32c7 100644
--- a/apolloschurchapp/src/tabs/connect/LikedContentList/LikedContentList.tests.js
+++ b/apolloschurchapp/src/tabs/connect/LikedContentList/LikedContentList.tests.js
@@ -15,7 +15,7 @@ describe('LikedContentList component', () => {
       },
       result: {
         data: {
-          getAllLikedContent: [
+          likedContent: [
             {
               __typename: 'UniversalContentItem',
               id: 'UniversalContentItem:4148aeb9482181025e9cad42826e676a',
diff --git a/apolloschurchapp/src/tabs/connect/LikedContentList/index.js b/apolloschurchapp/src/tabs/connect/LikedContentList/index.js
index 2fd7fda..c53c2ae 100644
--- a/apolloschurchapp/src/tabs/connect/LikedContentList/index.js
+++ b/apolloschurchapp/src/tabs/connect/LikedContentList/index.js
@@ -1,6 +1,7 @@
 import React, { PureComponent } from 'react';
 import PropTypes from 'prop-types';
 import { Query } from 'react-apollo';
+import { get } from 'lodash';
 
 import { BackgroundView, FeedView } from '@apollosproject/ui-kit';
 import ContentCardConnected from '../../../ui/ContentCardConnected';
@@ -35,12 +36,17 @@ class LikedContentList extends PureComponent {
   render() {
     return (
       <BackgroundView>
-        <Query query={getLikedContent} fetchPolicy="cache-and-network">
-          {({ loading, error, data: { getAllLikedContent = [] }, refetch }) => (
+        <Query
+          query={getLikedContent}
+          fetchPolicy="cache-and-network"
+          variables={{ first: 20 }}
+        >
+          {({ loading, error, data, refetch }) => (
             <FeedView
               ListItemComponent={ContentCardConnected}
-              initialNumToRender={5}
-              content={getAllLikedContent}
+              content={get(data, 'likedContent.edges', []).map(
+                (edge) => edge.node
+              )}
               isLoading={loading}
               error={error}
               refetch={refetch}
diff --git a/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeed.js b/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeed.js
index 8b4437d..dc2e2b2 100644
--- a/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeed.js
+++ b/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeed.js
@@ -4,32 +4,49 @@ import { withNavigation } from 'react-navigation';
 import PropTypes from 'prop-types';
 
 import {
+  styled,
+  withTheme,
   PaddedView,
-  H4,
-  UIText,
+  H5,
+  H6,
   HorizontalTileFeed,
-  styled,
   ButtonLink,
-  withIsLoading,
   TouchableScale,
+  Touchable,
+  withIsLoading,
 } from '@apollosproject/ui-kit';
 
 import ContentCard from 'apolloschurchapp/src/ui/ContentCardConnected';
 
-const RowHeader = styled({
+const RowHeader = styled(({ theme }) => ({
   flexDirection: 'row',
   justifyContent: 'space-between',
   alignItems: 'center',
-  paddingVertical: 0,
-})(PaddedView);
+  zIndex: 2, // UX hack to improve tapability. Positions RowHeader above StyledHorizontalTileFeed
+  paddingTop: theme.sizing.baseUnit * 0.5,
+  paddingLeft: theme.sizing.baseUnit,
+}))(View);
 
 const Name = styled({
-  flexGrow: 1,
+  flexGrow: 2,
 })(View);
 
-const LikedContentLink = styled({
-  flexDirection: 'row-reverse',
-})(View);
+const ButtonLinkSpacing = styled(({ theme }) => ({
+  flexDirection: 'row', // correctly positions the loading state
+  justifyContent: 'flex-end', // correctly positions the loading state
+  padding: theme.sizing.baseUnit, // UX hack to improve tapability.
+}))(View);
+
+const AndroidTouchableFix = withTheme(({ theme }) => ({
+  borderRadius: theme.sizing.baseUnit / 2,
+}))(Touchable);
+
+const StyledHorizontalTileFeed = styled(({ theme }) => ({
+  /* UX hack to improve tapability. The magic number below happens to be the number of pixels that
+   * aligns everything in the same place as if none of the UX hacks were there. */
+  marginTop: theme.sizing.baseUnit * -1.25,
+  zIndex: 1,
+}))(HorizontalTileFeed);
 
 class RecentlyLikedTileFeed extends Component {
   static propTypes = {
@@ -73,21 +90,23 @@ class RecentlyLikedTileFeed extends Component {
       <PaddedView horizontal={false}>
         <RowHeader>
           <Name>
-            <H4 isLoading={isLoading}>{name}</H4>
+            <H5>{name}</H5>
           </Name>
-          <LikedContentLink>
-            <UIText isLoading={isLoading}>
-              <ButtonLink
-                onPress={() => {
-                  navigation.navigate('LikedContentList');
-                }}
-              >
-                View All
-              </ButtonLink>
-            </UIText>
-          </LikedContentLink>
+
+          <AndroidTouchableFix
+            onPress={() => {
+              navigation.navigate('LikedContentList');
+            }}
+          >
+            <ButtonLinkSpacing>
+              <H6>
+                {/* we have to wrap "View All" in a ButtonLink twice to inherit styles and color correctly. */}
+                <ButtonLink>View All</ButtonLink>
+              </H6>
+            </ButtonLinkSpacing>
+          </AndroidTouchableFix>
         </RowHeader>
-        <HorizontalTileFeed
+        <StyledHorizontalTileFeed
           initialNumToRender={5}
           content={content}
           renderItem={this.titleImageItem}
diff --git a/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeedConnected.js b/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeedConnected.js
index a86843d..7527d53 100644
--- a/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeedConnected.js
+++ b/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeedConnected.js
@@ -6,14 +6,21 @@ import getLikedContent from '../getLikedContent';
 import RecentlyLikedTileFeed from './RecentlyLikedTileFeed';
 
 const RecentlyLikedTileFeedConnected = ({ navigation }) => (
-  <Query query={getLikedContent} fetchPolicy="cache-and-network">
-    {({ loading, data: { getAllLikedContent = [] } = {} }) => {
-      if (!getAllLikedContent.length) return null;
+  <Query
+    query={getLikedContent}
+    fetchPolicy="cache-and-network"
+    variables={{ first: 3 }}
+  >
+    {({
+      loading,
+      data: { likedContent: { edges = [] } = { edges: [] } } = {},
+    }) => {
+      if (!edges.length) return null;
       return (
         <RecentlyLikedTileFeed
           id={'liked'}
           name={'Recently Liked'}
-          content={getAllLikedContent}
+          content={edges.map((e) => e.node)}
           isLoading={loading}
           navigation={navigation}
           loadingStateObject={{
diff --git a/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeedConnected.tests.js b/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeedConnected.tests.js
index 20e6417..19c91cf 100644
--- a/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeedConnected.tests.js
+++ b/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeedConnected.tests.js
@@ -15,7 +15,7 @@ describe('RecentlyLikedTileFeedConnected', () => {
       },
       result: {
         data: {
-          getAllLikedContent: [
+          likedContent: [
             {
               id: 'UniversalContentItem:296373ecb53580855cadffa0375ebe18',
               __typename: 'UniversalContentItem',
@@ -91,7 +91,7 @@ describe('RecentlyLikedTileFeedConnected', () => {
       },
       result: {
         data: {
-          getAllLikedContent: [],
+          likedContent: [],
         },
       },
     };
diff --git a/apolloschurchapp/src/tabs/connect/Toolbar.js b/apolloschurchapp/src/tabs/connect/Toolbar.js
new file mode 100644
index 0000000..159180e
--- /dev/null
+++ b/apolloschurchapp/src/tabs/connect/Toolbar.js
@@ -0,0 +1,33 @@
+import React from 'react';
+import {
+  TableView,
+  Cell,
+  CellIcon,
+  CellText,
+  Touchable,
+} from '@apollosproject/ui-kit';
+import { withNavigation } from 'react-navigation';
+import PropTypes from 'prop-types';
+
+const Toolbar = ({ navigation }) => (
+  <TableView>
+    <Touchable
+      onPress={() => {
+        navigation.navigate('Passes');
+      }}
+    >
+      <Cell>
+        <CellIcon name="check" />
+        <CellText>Check-in</CellText>
+      </Cell>
+    </Touchable>
+  </TableView>
+);
+
+Toolbar.propTypes = {
+  navigation: PropTypes.shape({
+    navigate: PropTypes.func.isRequired,
+  }).isRequired,
+};
+
+export default withNavigation(Toolbar);
diff --git a/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeader.js b/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeader.js
index 1484a66..caa56cb 100644
--- a/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeader.js
+++ b/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeader.js
@@ -8,7 +8,6 @@ import UserAvatarView from 'apolloschurchapp/src/ui/UserAvatarView';
 import {
   withIsLoading,
   Touchable,
-  ConnectedImage,
   Icon,
   withTheme,
   styled,
@@ -34,8 +33,6 @@ const UserAvatarHeader = ({
   firstName,
   lastName,
   location,
-  photo,
-  refetch,
   navigation,
   disabled,
   isLoading,
@@ -46,15 +43,11 @@ const UserAvatarHeader = ({
         firstName={firstName}
         lastName={lastName}
         location={location}
-        photo={photo}
-        refetch={refetch}
         disabled={disabled}
         isLoading={isLoading}
       />
     </FlexedView>
-    <Touchable
-      onPress={() => navigation.navigate('UserSettings', { photo, refetch })}
-    >
+    <Touchable onPress={() => navigation.navigate('UserSettings')}>
       <SettingsIcon />
     </Touchable>
   </Container>
@@ -64,8 +57,6 @@ UserAvatarHeader.propTypes = {
   firstName: PropTypes.string,
   lastName: PropTypes.string,
   location: PropTypes.string,
-  photo: ConnectedImage.propTypes.source,
-  refetch: PropTypes.func,
   navigation: PropTypes.shape({
     getParam: PropTypes.func,
     navigate: PropTypes.func,
diff --git a/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeaderConnected.js b/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeaderConnected.js
index 599f719..397a879 100644
--- a/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeaderConnected.js
+++ b/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeaderConnected.js
@@ -1,6 +1,7 @@
 import React from 'react';
 import { Query } from 'react-apollo';
 import PropTypes from 'prop-types';
+import { get } from 'lodash';
 
 import getUserProfile from '../getUserProfile';
 import UserAvatarHeader from './UserAvatarHeader';
@@ -10,7 +11,7 @@ const UserAvatarHeaderConnected = ({ navigation }) => (
     {({
       data: {
         currentUser: {
-          profile: { photo, firstName, lastName, location } = {},
+          profile: { photo, firstName, lastName, campus } = {},
         } = {},
       } = {},
       refetch,
@@ -18,7 +19,7 @@ const UserAvatarHeaderConnected = ({ navigation }) => (
       <UserAvatarHeader
         firstName={firstName}
         lastName={lastName}
-        location={location}
+        location={get(campus, 'name')}
         photo={photo}
         refetch={refetch}
         navigation={navigation}
diff --git a/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeaderConnected.tests.js b/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeaderConnected.tests.js
index e0a8488..b4bad0c 100644
--- a/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeaderConnected.tests.js
+++ b/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeaderConnected.tests.js
@@ -1,6 +1,5 @@
 import React from 'react';
-import renderer from 'react-test-renderer';
-import wait from 'waait';
+import { renderWithApolloData } from 'apolloschurchapp/src/utils/testUtils';
 
 import Providers from 'apolloschurchapp/src/Providers';
 
@@ -16,16 +15,37 @@ describe('user avatar header connect', () => {
       result: {
         data: {
           currentUser: {
-            id: 'AuthenticatedUser:057b0758543270d1cb21784cac4d3f5c',
+            __typename: 'AuthenticatedUser',
+            id: 'AuthenticatedUser:123',
             profile: {
+              id: 'Person:123',
+              __typename: 'Person',
+              gender: 'Male',
+              birthDate: '1980-02-10T00:00:00',
               firstName: 'Isaac',
               lastName: 'Hardy',
-              location: 'Anderson, SC',
+              campus: {
+                __typename: 'Campus',
+                id: 'Campus:a0f64573eabf00a607bec911794d50fb',
+                name: 'Chicago Campus',
+                latitude: 42.09203,
+                longitude: -88.13289,
+                distanceFromLocation: null,
+                street1: '67 Algonquin Rd',
+                street2: '',
+                city: 'South Barrington',
+                state: 'IL',
+                postalCode: '60010-6143',
+                image: {
+                  __typename: 'ImageMediaSource',
+                  uri: 'https://picsum.photos/300/300/?random',
+                },
+              },
               email: 'isaac.hardy@newspring.cc',
-              nickName: 'Ike',
+              nickName: 'Batman',
               photo: {
-                uri:
-                  'https://apollosrock.newspring.cc:443/GetImage.ashx?guid=60fd5f35-3167-4c26-9a30-d44937287b87',
+                __typename: 'ImageMediaSource',
+                uri: 'https://some-uri.com/test.jpg',
               },
             },
           },
@@ -33,12 +53,11 @@ describe('user avatar header connect', () => {
       },
     };
     const navigation = { navigate: jest.fn(), getParam: jest.fn() };
-    const tree = renderer.create(
+    const tree = await renderWithApolloData(
       <Providers mocks={[mock]}>
         <UserAvatarHeaderConnected navigation={navigation} />
       </Providers>
     );
-    await wait(0); // wait for response from graphql
     expect(tree).toMatchSnapshot();
   });
 });
diff --git a/apolloschurchapp/src/tabs/connect/getLikedContent.js b/apolloschurchapp/src/tabs/connect/getLikedContent.js
index 0252dd1..8a903d1 100644
--- a/apolloschurchapp/src/tabs/connect/getLikedContent.js
+++ b/apolloschurchapp/src/tabs/connect/getLikedContent.js
@@ -4,11 +4,15 @@ import { largeCardFragment } from 'apolloschurchapp/src/ui/ContentCardConnected'
 import { contentItemFragment } from 'apolloschurchapp/src/content-single/getContentItem';
 
 export default gql`
-  query getAllLikedContent {
-    getAllLikedContent {
-      ... on ContentItem {
-        ...contentItemFragment
-        ...largeCardFragment
+  query getAllLikedContent($first: Int) {
+    likedContent(first: $first) {
+      edges {
+        node {
+          ... on ContentItem {
+            ...contentItemFragment
+            ...largeCardFragment
+          }
+        }
       }
     }
   }
diff --git a/apolloschurchapp/src/tabs/connect/getUserProfile.js b/apolloschurchapp/src/tabs/connect/getUserProfile.js
index b591a5b..ef3b2c8 100644
--- a/apolloschurchapp/src/tabs/connect/getUserProfile.js
+++ b/apolloschurchapp/src/tabs/connect/getUserProfile.js
@@ -1,19 +1,26 @@
 import gql from 'graphql-tag';
+import CampusParts from 'apolloschurchapp/src/user-settings/Locations/campusFragment';
 
 export default gql`
-  query {
+  query getCurrentUserProfile {
     currentUser {
       id
       profile {
+        id
         firstName
         lastName
-        location
+        campus {
+          ...CampusParts
+        }
         email
         nickName
+        gender
+        birthDate
         photo {
           uri
         }
       }
     }
   }
+  ${CampusParts}
 `;
diff --git a/apolloschurchapp/src/tabs/discover/TileContentFeed.js b/apolloschurchapp/src/tabs/discover/TileContentFeed.js
index 4470a03..656cf7f 100644
--- a/apolloschurchapp/src/tabs/discover/TileContentFeed.js
+++ b/apolloschurchapp/src/tabs/discover/TileContentFeed.js
@@ -1,24 +1,51 @@
 import React from 'react';
+import { View } from 'react-native';
 import { withNavigation } from 'react-navigation';
 import PropTypes from 'prop-types';
 
 import {
-  PaddedView,
-  H4,
-  HorizontalTileFeed,
   styled,
+  withTheme,
+  H5,
+  H6,
+  HorizontalTileFeed,
   ButtonLink,
   TouchableScale,
+  Touchable,
+  withIsLoading,
 } from '@apollosproject/ui-kit';
 
 import ContentCardConnected from '../../ui/ContentCardConnected';
 
-const RowHeader = styled({
+const RowHeader = styled(({ theme }) => ({
   flexDirection: 'row',
   justifyContent: 'space-between',
   alignItems: 'center',
-  paddingBottom: 0,
-})(PaddedView);
+  zIndex: 2, // UX hack to improve tapability. Positions RowHeader above StyledHorizontalTileFeed
+  paddingTop: theme.sizing.baseUnit * 0.5,
+  paddingLeft: theme.sizing.baseUnit,
+}))(View);
+
+const Name = styled({
+  flexGrow: 2,
+})(View);
+
+const AndroidTouchableFix = withTheme(({ theme }) => ({
+  borderRadius: theme.sizing.baseUnit / 2,
+}))(Touchable);
+
+const ButtonLinkSpacing = styled(({ theme }) => ({
+  flexDirection: 'row', // correctly positions the loading state
+  justifyContent: 'flex-end', // correctly positions the loading state
+  padding: theme.sizing.baseUnit, // UX hack to improve tapability.
+}))(View);
+
+const StyledHorizontalTileFeed = styled(({ theme }) => ({
+  /* UX hack to improve tapability. The magic number below happens to be the number of pixels that
+   * aligns everything in the same place as if none of the UX hacks were there. */
+  marginTop: theme.sizing.baseUnit * -1.25,
+  zIndex: 1,
+}))(HorizontalTileFeed);
 
 const loadingStateObject = {
   id: 'fake_id',
@@ -27,23 +54,27 @@ const loadingStateObject = {
 };
 
 const TileContentFeed = ({ isLoading, id, name, navigation, content = [] }) => (
-  <PaddedView horizontal={false}>
+  <>
     <RowHeader>
-      <H4 isLoading={isLoading}>{name}</H4>
-      {!isLoading ? (
-        <ButtonLink
-          onPress={() => {
-            navigation.navigate('ContentFeed', {
-              itemId: id,
-              itemTitle: name,
-            });
-          }}
-        >
-          View All
-        </ButtonLink>
-      ) : null}
+      <Name>
+        <H5>{name}</H5>
+      </Name>
+      <AndroidTouchableFix
+        onPress={() => {
+          navigation.navigate('ContentFeed', {
+            itemId: id,
+            itemTitle: name,
+          });
+        }}
+      >
+        <ButtonLinkSpacing>
+          <H6>
+            <ButtonLink>View All</ButtonLink>
+          </H6>
+        </ButtonLinkSpacing>
+      </AndroidTouchableFix>
     </RowHeader>
-    <HorizontalTileFeed
+    <StyledHorizontalTileFeed
       content={content}
       renderItem={({ item }) => (
         <TouchableScale
@@ -64,7 +95,7 @@ const TileContentFeed = ({ isLoading, id, name, navigation, content = [] }) => (
       loadingStateObject={loadingStateObject}
       isLoading={isLoading}
     />
-  </PaddedView>
+  </>
 );
 
 TileContentFeed.propTypes = {
@@ -79,4 +110,4 @@ TileContentFeed.propTypes = {
   ),
 };
 
-export default withNavigation(TileContentFeed);
+export default withNavigation(withIsLoading(TileContentFeed));
diff --git a/apolloschurchapp/src/tabs/home/Home.js b/apolloschurchapp/src/tabs/home/Home.js
index bb09a97..57abba0 100644
--- a/apolloschurchapp/src/tabs/home/Home.js
+++ b/apolloschurchapp/src/tabs/home/Home.js
@@ -5,12 +5,21 @@ import SafeAreaView from 'react-native-safe-area-view';
 import { get } from 'lodash';
 import PropTypes from 'prop-types';
 
-import { styled, FeedView, BackgroundView } from '@apollosproject/ui-kit';
+import {
+  styled,
+  FeedView,
+  BackgroundView,
+  H3,
+  H6,
+} from '@apollosproject/ui-kit';
 import ContentCardConnected from '../../ui/ContentCardConnected';
 
 import { LiveButton } from '../../live';
 
+import ContentTableCard from '../../ui/ContentTableCard';
 import getUserFeed from './getUserFeed';
+import getPersonaFeed from './getPersonaFeed';
+import getCampaignContentItem from './getCampaignContentItem';
 
 const LogoTitle = styled(({ theme }) => ({
   height: theme.sizing.baseUnit,
@@ -19,6 +28,10 @@ const LogoTitle = styled(({ theme }) => ({
   resizeMode: 'contain',
 }))(Image);
 
+const StyledH6 = styled(({ theme }) => ({
+  color: theme.colors.text.tertiary,
+}))(H6);
+
 class Home extends PureComponent {
   static navigationOptions = () => ({
     header: null,
@@ -56,6 +69,64 @@ class Home extends PureComponent {
                   <>
                     <LogoTitle source={require('./wordmark.png')} />
                     <LiveButton />
+                    <Query
+                      query={getCampaignContentItem}
+                      fetchPolicy="cache-and-network"
+                    >
+                      {({ data: featuredData, loading: isFeaturedLoading }) => {
+                        const featuredContent = get(
+                          featuredData,
+                          'campaigns.edges',
+                          []
+                        ).map((edge) => edge.node);
+
+                        const featuredItem = get(
+                          featuredContent[0],
+                          'childContentItemsConnection.edges[0].node',
+                          {}
+                        );
+
+                        return (
+                          <ContentCardConnected
+                            contentId={featuredItem.id}
+                            isLoading={isFeaturedLoading}
+                          />
+                        );
+                      }}
+                    </Query>
+                    <Query
+                      query={getPersonaFeed}
+                      fetchPolicy="cache-and-network"
+                    >
+                      {({
+                        data: personaData,
+                        loading: isContentTableLoading,
+                      }) => (
+                        <ContentTableCard
+                          isLoading={isContentTableLoading}
+                          onPress={this.handleOnPress}
+                          header={
+                            <>
+                              <StyledH6 isLoading={isContentTableLoading}>
+                                FOR YOU
+                              </StyledH6>
+                              <H3
+                                isLoading={isContentTableLoading}
+                                numberOfLines={3}
+                                ellipsizeMode="tail"
+                              >
+                                Explore what God calls you to today
+                              </H3>
+                            </>
+                          }
+                          content={get(
+                            personaData,
+                            'personaFeed.edges',
+                            []
+                          ).map((edge) => edge.node)}
+                        />
+                      )}
+                    </Query>
                   </>
                 }
                 onPressItem={this.handleOnPress}
diff --git a/apolloschurchapp/src/tabs/home/getCampaignContentItem.js b/apolloschurchapp/src/tabs/home/getCampaignContentItem.js
new file mode 100644
index 0000000..5bdb082
--- /dev/null
+++ b/apolloschurchapp/src/tabs/home/getCampaignContentItem.js
@@ -0,0 +1,25 @@
+import gql from 'graphql-tag';
+
+import { contentItemFragment } from 'apolloschurchapp/src/content-single/getContentItem';
+import { largeCardFragment } from 'apolloschurchapp/src/ui/ContentCardConnected';
+
+export default gql`
+  query campaigns {
+    campaigns {
+      edges {
+        node {
+          childContentItemsConnection {
+            edges {
+              node {
+                ...largeCardFragment
+                ...contentItemFragment
+              }
+            }
+          }
+        }
+      }
+    }
+  }
+  ${contentItemFragment}
+  ${largeCardFragment}
+`;
diff --git a/apolloschurchapp/src/tabs/home/getPersonaFeed.js b/apolloschurchapp/src/tabs/home/getPersonaFeed.js
new file mode 100644
index 0000000..b8130e0
--- /dev/null
+++ b/apolloschurchapp/src/tabs/home/getPersonaFeed.js
@@ -0,0 +1,19 @@
+import gql from 'graphql-tag';
+
+import { contentItemFragment } from 'apolloschurchapp/src/content-single/getContentItem';
+import { largeCardFragment } from 'apolloschurchapp/src/ui/ContentCardConnected';
+
+export default gql`
+  query getPersonaFeed {
+    personaFeed(first: 4) {
+      edges {
+        node {
+          ...largeCardFragment
+          ...contentItemFragment
+        }
+      }
+    }
+  }
+  ${contentItemFragment}
+  ${largeCardFragment}
+`;
diff --git a/apolloschurchapp/src/tabs/tabBar.js b/apolloschurchapp/src/tabs/tabBar.js
index e806ab4..0bdbfc3 100644
--- a/apolloschurchapp/src/tabs/tabBar.js
+++ b/apolloschurchapp/src/tabs/tabBar.js
@@ -41,10 +41,7 @@ const TabBar = (props) => (
     {({ data = {} }) => (
       <TabBarWrapper mediaPlayerIsVisible={get(data, 'mediaPlayer.isVisible')}>
         <MediaPlayerSpacer>
-          <ThemedBottomTabBar
-            {...props}
-            safeAreaInset={{ bottom: 'never', top: 'never' }}
-          />
+          <ThemedBottomTabBar {...props} />
         </MediaPlayerSpacer>
       </TabBarWrapper>
     )}
diff --git a/apolloschurchapp/src/testing-control-panel/index.js b/apolloschurchapp/src/testing-control-panel/index.js
index 121e804..6a6c16a 100644
--- a/apolloschurchapp/src/testing-control-panel/index.js
+++ b/apolloschurchapp/src/testing-control-panel/index.js
@@ -1,6 +1,8 @@
 import React, { PureComponent } from 'react';
 import { TableView, Divider } from '@apollosproject/ui-kit';
+import { UserWebBrowserConsumer } from 'apolloschurchapp/src/user-web-browser';
 import ChangeLivestream from './ChangeLivestream';
+import TouchableCell from './TouchableCell';
 
 export default class TestingControlPanel extends PureComponent {
   static navigationOptions = () => ({
@@ -12,6 +14,25 @@ export default class TestingControlPanel extends PureComponent {
       <TableView>
         <ChangeLivestream />
         <Divider />
+        <UserWebBrowserConsumer>
+          {(openUserWebView) => (
+            <TouchableCell
+              handlePress={() =>
+                openUserWebView({
+                  url:
+                    'https://www.whatismybrowser.com/detect/what-http-headers-is-my-browser-sending',
+                })
+              }
+              iconName="share"
+              cellText={`Open Web Browser With User Cookie`}
+            />
+          )}
+        </UserWebBrowserConsumer>
+        <TouchableCell
+          handlePress={() => this.props.navigation.navigate('Onboarding')}
+          iconName="Avatar"
+          cellText={`Launch Onboarding`}
+        />
       </TableView>
     );
   }
diff --git a/apolloschurchapp/src/ui/ContentTableCard/ContentTableCard.stories.js b/apolloschurchapp/src/ui/ContentTableCard/ContentTableCard.stories.js
new file mode 100644
index 0000000..9287554
--- /dev/null
+++ b/apolloschurchapp/src/ui/ContentTableCard/ContentTableCard.stories.js
@@ -0,0 +1,86 @@
+import React from 'react';
+import { storiesOf } from '@apollosproject/ui-storybook';
+import { H3 } from '@apollosproject/ui-kit';
+import ContentTableCard from '.';
+
+const content = [
+  {
+    id: 'UniversalContentItem:9d06423a8908b7cc1e1f2db6156c1bfb',
+    title: 'Hello 1',
+    parentChannel: {
+      id: 'ContentChannel:be35f49307d7297989d3514be788ef2d',
+      name: 'NewSpring - Articles',
+    },
+    coverImage: {
+      sources: {
+        uri: 'https://picsum.photos/600/400/?image=63',
+      },
+    },
+  },
+  {
+    id: 'UniversalContentItem:9d06423a8908b7cc1e1f2db6156c1bfb',
+    title: 'Hello 2',
+    parentChannel: {
+      id: 'ContentChannel:be35f49307d7297989d3514be788ef2d',
+      name: 'NewSpring - Articles',
+    },
+    coverImage: {
+      sources: {
+        uri: 'https://picsum.photos/600/400/?image=63',
+      },
+    },
+  },
+  {
+    id: 'UniversalContentItem:9d06423a8908b7cc1e1f2db6156c1bfb',
+    title: 'Hello 3',
+    parentChannel: {
+      id: 'ContentChannel:be35f49307d7297989d3514be788ef2d',
+      name: 'NewSpring - Articles',
+    },
+    coverImage: {
+      sources: {
+        uri: 'https://picsum.photos/600/400/?image=63',
+      },
+    },
+  },
+  {
+    id: 'UniversalContentItem:9d06423a8908b7cc1e1f2db6156c1bfb',
+    title: 'Hello 4',
+    parentChannel: {
+      id: 'ContentChannel:be35f49307d7297989d3514be788ef2d',
+      name: 'NewSpring - Articles',
+    },
+    coverImage: {
+      sources: {
+        uri: 'https://picsum.photos/600/400/?image=63',
+      },
+    },
+  },
+];
+
+storiesOf('ContentTableCard', module)
+  .add('simple', () => (
+    <ContentTableCard
+      label={'FOR YOU'}
+      onPress={() => {}}
+      content={content}
+      DynamicHeader={
+        <H3 numberOfLines={3} ellipsizeMode="tail">
+          Some random text that encourages you
+        </H3>
+      }
+    />
+  ))
+  .add('isLoading', () => (
+    <ContentTableCard
+      label={'FOR YOU'}
+      onPress={() => {}}
+      isLoading
+      content={content}
+      DynamicHeader={
+        <H3 isLoading numberOfLines={3} ellipsizeMode="tail">
+          Some random text that encourages you
+        </H3>
+      }
+    />
+  ));
diff --git a/apolloschurchapp/src/ui/ContentTableCard/ContentTableCardItem.js b/apolloschurchapp/src/ui/ContentTableCard/ContentTableCardItem.js
new file mode 100644
index 0000000..f387a41
--- /dev/null
+++ b/apolloschurchapp/src/ui/ContentTableCard/ContentTableCardItem.js
@@ -0,0 +1,78 @@
+import React, { PureComponent } from 'react';
+import { View } from 'react-native';
+import PropTypes from 'prop-types';
+
+import {
+  H6,
+  H4,
+  styled,
+  TouchableScale,
+  withIsLoading,
+  ConnectedImage,
+  FlexedView,
+} from '@apollosproject/ui-kit';
+
+const CellImage = styled(({ theme }) => ({
+  width: theme.sizing.baseUnit * 4,
+  height: theme.sizing.baseUnit * 4,
+  borderRadius: theme.sizing.baseUnit,
+  overflow: 'hidden',
+  marginRight: theme.sizing.baseUnit,
+}))(View);
+
+const StyledH6 = styled(({ theme }) => ({
+  color: theme.colors.text.tertiary,
+}))(H6);
+
+const TextContainer = styled(({ theme }) => ({
+  marginTop: theme.sizing.baseUnit / 2.5,
+  borderBottomWidth: 0.5,
+  height: theme.sizing.baseUnit * 4.25,
+  borderColor: theme.colors.shadows.default,
+}))(FlexedView);
+
+const Cell = styled(({ theme }) => ({
+  paddingHorizontal: theme.sizing.baseUnit,
+  paddingVertical: theme.sizing.baseUnit / 4,
+  backgroundColor: theme.colors.background.paper,
+  flexDirection: 'row',
+  justifyContent: 'flex-start',
+  alignItems: 'center',
+}))(View);
+
+class ContentTableCardItem extends PureComponent {
+  static propTypes = {
+    onPress: PropTypes.func,
+    imageSource: PropTypes.any, // eslint-disable-line
+    label: PropTypes.string,
+    title: PropTypes.string,
+    id: PropTypes.string,
+  };
+
+  render() {
+    return (
+      <TouchableScale
+        onPress={() =>
+          this.props.onPress({
+            id: this.props.id,
+            transitionKey: 2,
+          })
+        }
+      >
+        <Cell>
+          <CellImage>
+            <ConnectedImage source={this.props.imageSource} isLoading />
+          </CellImage>
+          <TextContainer>
+            <StyledH6>{this.props.label}</StyledH6>
+            <H4 numberOfLines={2} ellipsizeMode="tail">
+              {this.props.title}
+            </H4>
+          </TextContainer>
+        </Cell>
+      </TouchableScale>
+    );
+  }
+}
+
+export default withIsLoading(ContentTableCardItem);
diff --git a/apolloschurchapp/src/ui/ContentTableCard/ContentTableCardItem.stories.js b/apolloschurchapp/src/ui/ContentTableCard/ContentTableCardItem.stories.js
new file mode 100644
index 0000000..6a0d4cb
--- /dev/null
+++ b/apolloschurchapp/src/ui/ContentTableCard/ContentTableCardItem.stories.js
@@ -0,0 +1,28 @@
+import React from 'react';
+import { storiesOf } from '@apollosproject/ui-storybook';
+
+import ContentTableCardItem from './ContentTableCardItem';
+
+const item = {
+  id: 'UniversalContentItem:9d06423a8908b7cc1e1f2db6156c1bfb',
+  title: 'Hello 1',
+  parentChannel: {
+    id: 'ContentChannel:be35f49307d7297989d3514be788ef2d',
+    name: 'NewSpring - Articles',
+  },
+  coverImage: {
+    sources: {
+      uri: 'https://picsum.photos/600/400/?image=63',
+    },
+  },
+};
+
+storiesOf('ContentTableCardItem', module).add('simple', () => (
+  <ContentTableCardItem
+    onPress={() => {}}
+    imageSource={item.coverImage.sources}
+    label={item.parentChannel.name}
+    title={item.title}
+    id={item.id}
+  />
+));
diff --git a/apolloschurchapp/src/ui/ContentTableCard/index.js b/apolloschurchapp/src/ui/ContentTableCard/index.js
new file mode 100644
index 0000000..646b394
--- /dev/null
+++ b/apolloschurchapp/src/ui/ContentTableCard/index.js
@@ -0,0 +1,56 @@
+import React, { PureComponent } from 'react';
+// import { View } from 'react-native';
+import PropTypes from 'prop-types';
+
+import {
+  TableView,
+  Card,
+  CardContent,
+  styled,
+  withIsLoading,
+} from '@apollosproject/ui-kit';
+
+import ContentTableCardItem from './ContentTableCardItem';
+
+const Header = styled(({ theme }) => ({
+  backgroundColor: theme.colors.background.paper,
+}))(CardContent);
+
+const Content = styled(() => ({
+  borderBottomWidth: 0,
+  borderTopWidth: 0,
+}))(TableView);
+
+class ContentTableCard extends PureComponent {
+  static propTypes = {
+    onPress: PropTypes.func,
+    isLoading: PropTypes.bool, // eslint-disable-line
+    content: PropTypes.array, // eslint-disable-line
+    header: PropTypes.element,
+  };
+
+  render() {
+    const { onPress, isLoading, content, header: headerContent } = this.props;
+
+    return (
+      <Card>
+        <Header>{headerContent}</Header>
+        <Content>
+          {content.map((item) => (
+            <ContentTableCardItem
+              isLoading={isLoading}
+              key={item.id}
+              id={item.id}
+              onPress={onPress}
+              label={item.parentChannel ? item.parentChannel.name : ''}
+              title={item.title || ''}
+              imageSource={item.coverImage ? item.coverImage.sources : ''}
+            />
+          ))}
+        </Content>
+      </Card>
+    );
+  }
+}
+
+export default withIsLoading(ContentTableCard);
diff --git a/apolloschurchapp/src/ui/HTMLView/HTMLView.stories.js b/apolloschurchapp/src/ui/HTMLView/HTMLView.stories.js
deleted file mode 100644
index 0d69e14..0000000
--- a/apolloschurchapp/src/ui/HTMLView/HTMLView.stories.js
+++ /dev/null
@@ -1,21 +0,0 @@
-import React from 'react';
-import { ScrollView } from 'react-native';
-import { storiesOf } from '@storybook/react-native';
-
-import HTMLView from '.';
-
-storiesOf('HTMLView', module)
-  .add('Example', () => (
-    <ScrollView>
-      <HTMLView>
-        {
-          "<p>I sat on my couch next to my high school <a href='https://newspringfuse.com/groups' target='_blank'>Fuse Group</a>, silently fuming at their inability to put their phones down during Bible study. Finally, I spoke up, teasing one of the girls in a tone that clearly said, &ldquo;I&rsquo;m not actually kidding.&rdquo;&nbsp;</p>\n\n<p>A few days later, I was in the car with my sister, and as I sat in the passenger seat responding to emails, I heard her laugh and say, &ldquo;You always mumble when you are typing. Stop doing that.&rdquo;&nbsp;</p>\n\n<p>&ldquo;Sorry,&rdquo; I responded. &ldquo;I just don&rsquo;t want people to think I&rsquo;m ignoring them when I&rsquo;m typing.&rdquo;</p>\n\n<p>But the truth is, I am ignoring them! In my head, this behavior is totally acceptable. I tell myself I&rsquo;m tending to my priorities in order, and in doing so, I send a message to the person in front of me that she is of lesser importance.</p>\n\n<blockquote>\n<p>My phone is the primary outlet that distracts me from people who need my attention.</p>\n</blockquote>\n\n<p>I quickly get frustrated when I am the one on the outside, but how often to I shut others out during my own social media binges or email frenzies? Just like my girls, I&rsquo;m learning that my phone is the primary outlet that distracts me from people who need my attention.</p>\n\n<h3>Why Being Present Matters</h3>\n\n<p>There is nothing wrong with using our phones &mdash; as long as we remember that the best investment we can make is to invest in our relationships with Jesus and each other. We were created for <a href='http://newspring.cc/community' target='_blank'>community</a> by God, who exists in community as Father, Son, and Holy Spirit (John 1:1-2, Genesis 2:18).&nbsp;</p>\n\n<p>Our phones help us stay connected, but they are not the foundation of all connection. If we&rsquo;re honest, our phones are much quicker to distract and disengage us from the people right in front of us.&nbsp;</p>\n\n<p>Jesus said loving God and loving others is greatest of all God&rsquo;s commandments (Matthew 22:38-40). And, after trying everything the world had to offer, King Solomon reminded his people that their relationships with God and others are the only things that really matter (Ecclesiastes 2:24-26, Ecclesiastes 3:9).&nbsp;</p>\n\n<blockquote>\n<p>Greater love has no one than this: to lay down one&rsquo;s phone for one&rsquo;s loved ones.</p>\n</blockquote>\n\n<p>So the next time we feel like we have to text back immediately or tweet before someone else does, consider:&nbsp;</p>\n\n<ul>\n\t<li>Am I putting others before myself right now?</li>\n\t<li>How can I love the people around me if I&rsquo;m not even paying attention to them?</li>\n\t<li>What if Jesus wants to speak through me, but I&rsquo;ve got my nose stuck in my phone?&nbsp;</li>\n</ul>\n\n<p>The world won&rsquo;t implode if we don&rsquo;t reply to every text or email immediately. And that Instagram picture doesn&rsquo;t need to go up ASAP. If it&rsquo;s already been a week between posts, what&rsquo;s a few more hours? We love everyone better &mdash; our friends to our coworkers to our social media followers &mdash; when we give them the gift of our full attention.&nbsp;</p>\n\n<p>I can almost hear Jesus saying, &ldquo;Greater love has no one than this: to lay down one&rsquo;s phone for one&rsquo;s loved ones&rdquo;&nbsp; (John 15:13).&nbsp;</p>\n\n<h3>Four Ways To Stay Away From Your Phone And Be Intentionally Present</h3>\n\n<p><a href='http://newspring.cc/christmas' target='_blank'>This holiday season</a>, we will have more opportunities to be around friends and family than usual. So let&rsquo;s make the most of each minute. The following are some tips can help us all be a little more present.&nbsp;&nbsp;</p>\n\n<ol>\n\t<li>Turn your phone off, leave it in the car, or put it in airplane mode. Habitual notification checks can take a break.</li>\n\t<li>Talk about something other than yourself. Ask someone else about their life (job, school, kids).</li>\n\t<li>Look for opportunities to encourage someone. Ask the Holy Spirit to speak through you and help you love people.</li>\n\t<li>Ask Jesus to keep your heart interested and engaged in what really matters. He wants to help!</li>\n</ol>\n\n<p>Intentionally taking advantage of time with loved ones sometimes does require sacrificing our own immediate desires or comforts, but that&rsquo;s what we are commanded to do (Philippians 2:3).&nbsp;</p>\n\n<p>Take pictures, but don&rsquo;t let the only memory be a digital one. The positive outcome of interactions should be more than Instagram likes. Unplug from social media, choose to be present, and you will be surprised at the good it does for your heart and the hearts of those around you.&nbsp;</p>"
-        }
-      </HTMLView>
-    </ScrollView>
-  ))
-  .add('isLoading', () => (
-    <ScrollView>
-      <HTMLView isLoading />
-    </ScrollView>
-  ));
diff --git a/apolloschurchapp/src/ui/HTMLView/HTMLView.tests.js b/apolloschurchapp/src/ui/HTMLView/HTMLView.tests.js
deleted file mode 100644
index a0eb6ec..0000000
--- a/apolloschurchapp/src/ui/HTMLView/HTMLView.tests.js
+++ /dev/null
@@ -1,191 +0,0 @@
-import React from 'react';
-import renderer from 'react-test-renderer';
-
-import Providers from 'apolloschurchapp/src/Providers';
-
-import HTMLView from '.';
-
-describe('the HTMLView component', () => {
-  it('should render an H1', () => {
-    const tree = renderer.create(
-      <Providers>
-        <HTMLView>{'<h1>Testings</h1>'}</HTMLView>
-      </Providers>
-    );
-
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render an H2', () => {
-    const tree = renderer.create(
-      <Providers>
-        <HTMLView>{'<h2>Testings</h2>'}</HTMLView>
-      </Providers>
-    );
-
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render an H3', () => {
-    const tree = renderer.create(
-      <Providers>
-        <HTMLView>{'<h3>Testings</h3>'}</HTMLView>
-      </Providers>
-    );
-
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render an H4', () => {
-    const tree = renderer.create(
-      <Providers>
-        <HTMLView>{'<h4>Testings</h4>'}</HTMLView>
-      </Providers>
-    );
-
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render an H5', () => {
-    const tree = renderer.create(
-      <Providers>
-        <HTMLView>{'<h5>Testings</h5>'}</HTMLView>
-      </Providers>
-    );
-
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render an H6', () => {
-    const tree = renderer.create(
-      <Providers>
-        <HTMLView>{'<h6>Testings</h6>'}</HTMLView>
-      </Providers>
-    );
-
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render a paragraph', () => {
-    const tree = renderer.create(
-      <Providers>
-        <HTMLView>{'<p>Testings</p>'}</HTMLView>
-      </Providers>
-    );
-
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render italic text', () => {
-    const tree = renderer.create(
-      <Providers>
-        <HTMLView>{'<p><em>Testings</em></p>'}</HTMLView>
-      </Providers>
-    );
-
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render bold text', () => {
-    const tree = renderer.create(
-      <Providers>
-        <HTMLView>{'<p><strong>Testings</strong></p>'}</HTMLView>
-      </Providers>
-    );
-
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render a block quote', () => {
-    const tree = renderer.create(
-      <Providers>
-        <HTMLView>
-          {'<p>Testings</p><blockquote>Testings</blockquote>'}
-        </HTMLView>
-      </Providers>
-    );
-
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render a list', () => {
-    const tree = renderer.create(
-      <Providers>
-        <HTMLView>{'<ul><li>Testings</li><li>Testings</li></ul>'}</HTMLView>
-      </Providers>
-    );
-
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render a link', () => {
-    const tree = renderer.create(
-      <Providers>
-        <HTMLView>
-          {'<p>Testings <a href="http://wwww.google.com">Google</a></p>'}
-        </HTMLView>
-      </Providers>
-    );
-
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render handle relative links', () => {
-    const tree = renderer.create(
-      <Providers>
-        <HTMLView>
-          {'<p>Testings <a href="//google.com">Google</a></p>'}
-        </HTMLView>
-      </Providers>
-    );
-
-    expect(tree).toMatchSnapshot();
-  });
-  it('strips out badly formatted links', () => {
-    const tree = renderer.create(
-      <Providers>
-        <HTMLView>{"<p><a href='{page_536525}'>Bad link</a></p>"}</HTMLView>
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render an image', () => {
-    const tree = renderer.create(
-      <Providers>
-        <HTMLView>
-          {'<img src="https://placeholdit.co/i/150x150?bg=eeeeee&fc=577084" />'}
-        </HTMLView>
-      </Providers>
-    );
-
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render a line break (br)', () => {
-    const tree = renderer.create(
-      <Providers>
-        <HTMLView>{'<p>Testings</p><br>'}</HTMLView>
-      </Providers>
-    );
-
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render a loading state', () => {
-    const tree = renderer.create(
-      <Providers>
-        <HTMLView isLoading />
-      </Providers>
-    );
-
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render example HTML', () => {
-    const tree = renderer.create(
-      <Providers>
-        <HTMLView>
-          {
-            "<p>I sat on my couch next to my high school <a href='https://newspringfuse.com/groups' target='_blank'>Fuse Group</a>, silently fuming at their inability to put their phones down during Bible study. Finally, I spoke up, teasing one of the girls in a tone that clearly said, &ldquo;I&rsquo;m not actually kidding.&rdquo;&nbsp;</p>\n\n<p>A few days later, I was in the car with my sister, and as I sat in the passenger seat responding to emails, I heard her laugh and say, &ldquo;You always mumble when you are typing. Stop doing that.&rdquo;&nbsp;</p>\n\n<p>&ldquo;Sorry,&rdquo; I responded. &ldquo;I just don&rsquo;t want people to think I&rsquo;m ignoring them when I&rsquo;m typing.&rdquo;</p>\n\n<p>But the truth is, I am ignoring them! In my head, this behavior is totally acceptable. I tell myself I&rsquo;m tending to my priorities in order, and in doing so, I send a message to the person in front of me that she is of lesser importance.</p>\n\n<blockquote>\n<p>My phone is the primary outlet that distracts me from people who need my attention.</p>\n</blockquote>\n\n<p>I quickly get frustrated when I am the one on the outside, but how often to I shut others out during my own social media binges or email frenzies? Just like my girls, I&rsquo;m learning that my phone is the primary outlet that distracts me from people who need my attention.</p>\n\n<h3>Why Being Present Matters</h3>\n\n<p>There is nothing wrong with using our phones &mdash; as long as we remember that the best investment we can make is to invest in our relationships with Jesus and each other. We were created for <a href='http://newspring.cc/community' target='_blank'>community</a> by God, who exists in community as Father, Son, and Holy Spirit (John 1:1-2, Genesis 2:18).&nbsp;</p>\n\n<p>Our phones help us stay connected, but they are not the foundation of all connection. If we&rsquo;re honest, our phones are much quicker to distract and disengage us from the people right in front of us.&nbsp;</p>\n\n<p>Jesus said loving God and loving others is greatest of all God&rsquo;s commandments (Matthew 22:38-40). And, after trying everything the world had to offer, King Solomon reminded his people that their relationships with God and others are the only things that really matter (Ecclesiastes 2:24-26, Ecclesiastes 3:9).&nbsp;</p>\n\n<blockquote>\n<p>Greater love has no one than this: to lay down one&rsquo;s phone for one&rsquo;s loved ones.</p>\n</blockquote>\n\n<p>So the next time we feel like we have to text back immediately or tweet before someone else does, consider:&nbsp;</p>\n\n<ul>\n\t<li>Am I putting others before myself right now?</li>\n\t<li>How can I love the people around me if I&rsquo;m not even paying attention to them?</li>\n\t<li>What if Jesus wants to speak through me, but I&rsquo;ve got my nose stuck in my phone?&nbsp;</li>\n</ul>\n\n<p>The world won&rsquo;t implode if we don&rsquo;t reply to every text or email immediately. And that Instagram picture doesn&rsquo;t need to go up ASAP. If it&rsquo;s already been a week between posts, what&rsquo;s a few more hours? We love everyone better &mdash; our friends to our coworkers to our social media followers &mdash; when we give them the gift of our full attention.&nbsp;</p>\n\n<p>I can almost hear Jesus saying, &ldquo;Greater love has no one than this: to lay down one&rsquo;s phone for one&rsquo;s loved ones&rdquo;&nbsp; (John 15:13).&nbsp;</p>\n\n<h3>Four Ways To Stay Away From Your Phone And Be Intentionally Present</h3>\n\n<p><a href='http://newspring.cc/christmas' target='_blank'>This holiday season</a>, we will have more opportunities to be around friends and family than usual. So let&rsquo;s make the most of each minute. The following are some tips can help us all be a little more present.&nbsp;&nbsp;</p>\n\n<ol>\n\t<li>Turn your phone off, leave it in the car, or put it in airplane mode. Habitual notification checks can take a break.</li>\n\t<li>Talk about something other than yourself. Ask someone else about their life (job, school, kids).</li>\n\t<li>Look for opportunities to encourage someone. Ask the Holy Spirit to speak through you and help you love people.</li>\n\t<li>Ask Jesus to keep your heart interested and engaged in what really matters. He wants to help!</li>\n</ol>\n\n<p>Intentionally taking advantage of time with loved ones sometimes does require sacrificing our own immediate desires or comforts, but that&rsquo;s what we are commanded to do (Philippians 2:3).&nbsp;</p>\n\n<p>Take pictures, but don&rsquo;t let the only memory be a digital one. The positive outcome of interactions should be more than Instagram likes. Unplug from social media, choose to be present, and you will be surprised at the good it does for your heart and the hearts of those around you.</p>"
-          }
-        </HTMLView>
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should accept an alternative render', () => {
-    const testRenderer = jest.fn();
-    renderer.create(
-      <Providers>
-        <HTMLView renderer={testRenderer}>{'<p>Testings</p>'}</HTMLView>
-      </Providers>
-    );
-
-    expect(testRenderer).toBeCalled();
-  });
-});
diff --git a/apolloschurchapp/src/ui/HTMLView/defaultRenderer.js b/apolloschurchapp/src/ui/HTMLView/defaultRenderer.js
deleted file mode 100644
index b8af60c..0000000
--- a/apolloschurchapp/src/ui/HTMLView/defaultRenderer.js
+++ /dev/null
@@ -1,128 +0,0 @@
-import React, { Children } from 'react';
-import { Text, Linking } from 'react-native';
-import { decodeHTML } from 'entities';
-
-import {
-  BodyText,
-  H1,
-  H2,
-  H3,
-  H4,
-  H5,
-  H6,
-  Paragraph,
-  BlockQuote,
-  BulletListItem,
-  ButtonLink,
-  ConnectedImage,
-} from '@apollosproject/ui-kit';
-
-const LINE_BREAK = '\n';
-const TEXT_TYPES_THAT_SHOULD_WRAP = [Text, BodyText, ButtonLink];
-
-export const wrapTextChildren = (children, Component = BodyText) => {
-  const newChildren = [];
-  let currentTextChildren = [];
-  Children.toArray(children).forEach((child, i) => {
-    if (TEXT_TYPES_THAT_SHOULD_WRAP.includes(child.type)) {
-      currentTextChildren.push(child);
-    } else {
-      if (currentTextChildren.length) {
-        newChildren.push(
-          // eslint-disable-next-line
-          <Component key={`composed-children-${i}`}>
-            {currentTextChildren}
-          </Component>
-        );
-        currentTextChildren = [];
-      }
-      newChildren.push(child);
-    }
-  });
-  if (currentTextChildren.length) {
-    newChildren.push(
-      <Component key="composed-children">{currentTextChildren}</Component>
-    );
-  }
-  return newChildren;
-};
-
-const defaultRenderer = (node, { children }) => {
-  if (node.type === 'text' && node.data && node.data.trim()) {
-    const text = decodeHTML(node.data);
-    if (!node.parent) {
-      return (
-        <Paragraph>
-          <BodyText>{text}</BodyText>
-        </Paragraph>
-      );
-    }
-    return <Text>{text}</Text>;
-  }
-
-  switch (node.name) {
-    case 'p':
-      return <Paragraph>{wrapTextChildren(children)}</Paragraph>;
-    case 'strong':
-      return <BodyText bold>{children}</BodyText>;
-    case 'em':
-      return <BodyText italic>{children}</BodyText>;
-    case 'blockquote':
-      return <BlockQuote>{wrapTextChildren(children, Text)}</BlockQuote>;
-    case 'h1':
-      return <H1 padded>{wrapTextChildren(children, Text)}</H1>;
-    case 'h2':
-      return <H2 padded>{wrapTextChildren(children, Text)}</H2>;
-    case 'h3':
-      return <H3 padded>{wrapTextChildren(children, Text)}</H3>;
-    case 'h4':
-      return <H4 padded>{wrapTextChildren(children, Text)}</H4>;
-    case 'h5':
-      return <H5 padded>{wrapTextChildren(children, Text)}</H5>;
-    case 'h6':
-      return <H6 padded>{wrapTextChildren(children, Text)}</H6>;
-    case 'ul':
-      return <Paragraph>{children}</Paragraph>;
-    case 'li':
-      return <BulletListItem>{wrapTextChildren(children)}</BulletListItem>;
-    case 'a': {
-      let url = node.attribs && node.attribs.href;
-      url = decodeHTML(url);
-
-      if (url && url.startsWith('//')) {
-        url = `http:${url}`;
-      }
-      if (!url.startsWith('http')) {
-        // we can't currently handle non web-links, so just return regular text instead:
-        return children;
-      }
-      const onPress = () => Linking.openURL(url);
-      if (url) {
-        return <ButtonLink onPress={onPress}>{children}</ButtonLink>;
-      }
-    }
-    /* ignoring fallthrough on the next line because of the conditional return above,
-     * so we handle the edge-case of an <a> tag used w/o a href
-     */
-    case 'img': {
-      const source = {
-        url: node.attribs.src,
-      };
-
-      const imgStyles = {
-        resizeMode: 'contain',
-        width: '100%',
-      };
-
-      return (
-        <ConnectedImage maintainAspectRatio source={source} style={imgStyles} />
-      );
-    }
-    case 'br':
-      return <BodyText>{LINE_BREAK}</BodyText>;
-    default:
-      return children;
-  }
-};
-
-export default defaultRenderer;
diff --git a/apolloschurchapp/src/ui/HTMLView/index.js b/apolloschurchapp/src/ui/HTMLView/index.js
deleted file mode 100644
index 5873b74..0000000
--- a/apolloschurchapp/src/ui/HTMLView/index.js
+++ /dev/null
@@ -1,75 +0,0 @@
-import React, { PureComponent, cloneElement } from 'react';
-import PropTypes from 'prop-types';
-import { View } from 'react-native';
-import { Parser, DomHandler } from 'htmlparser2';
-
-import { Paragraph as ParagraphPlaceholder } from '@apollosproject/ui-kit';
-
-import defaultRenderer from './defaultRenderer';
-
-class HTMLView extends PureComponent {
-  static propTypes = {
-    children: PropTypes.string,
-    renderer: PropTypes.func,
-    isLoading: PropTypes.bool,
-  };
-
-  static defaultProps = {
-    renderer: defaultRenderer,
-  };
-
-  constructor(...args) {
-    super(...args);
-    this.parser = new Parser(
-      new DomHandler(
-        (err, dom) => {
-          this.parsed = this.renderDom(dom);
-        },
-        { normalizeWhitespace: true }
-      )
-    );
-    if (this.props.children) this.parse(this.props.children);
-  }
-
-  componentWillUpdate(props) {
-    this.parse(props.children);
-  }
-
-  parse(html = '') {
-    this.parser.write(html);
-    this.parser.done();
-  }
-
-  renderDom(dom) {
-    return dom
-      .map((node, index) => {
-        let children = [];
-        if (node.children) children = this.renderDom(node.children);
-
-        let renderedNode = this.props.renderer(node, { children });
-        if (
-          !renderedNode &&
-          renderedNode !== null &&
-          this.props.renderer !== defaultRenderer
-        ) {
-          renderedNode = defaultRenderer(node, { children });
-        }
-
-        if (renderedNode && !Array.isArray(renderedNode)) {
-          renderedNode = cloneElement(renderedNode, { key: index });
-        }
-        return renderedNode;
-      })
-      .filter((e) => e !== undefined);
-  }
-
-  render() {
-    return (
-      <ParagraphPlaceholder lineNumber={8} onReady={!this.props.isLoading}>
-        <View>{this.parsed}</View>
-      </ParagraphPlaceholder>
-    );
-  }
-}
-
-export default HTMLView;
diff --git a/apolloschurchapp/src/ui/LandingScreen/LandingScreen.stories.js b/apolloschurchapp/src/ui/LandingScreen/LandingScreen.stories.js
new file mode 100644
index 0000000..d9ebd3c
--- /dev/null
+++ b/apolloschurchapp/src/ui/LandingScreen/LandingScreen.stories.js
@@ -0,0 +1,23 @@
+import React from 'react';
+import { storiesOf } from '@apollosproject/ui-storybook';
+import { GradientOverlayImage } from '@apollosproject/ui-kit';
+
+import LandingScreen from '.';
+
+storiesOf('LandingScreen', module)
+  .add('default', () => <LandingScreen />)
+  .add('slideTitle', () => <LandingScreen slideTitle={'Custom title text'} />)
+  .add('description', () => (
+    <LandingScreen description={'Custom description text'} />
+  ))
+  .add('textColor', () => <LandingScreen textColor={'salmon'} />)
+  .add('ImageComponent', () => (
+    <LandingScreen
+      BackgroundComponent={
+        <GradientOverlayImage
+          source={'https://picsum.photos/375/812/?random'}
+        />
+      }
+    />
+  ))
+  .add('Slide props', () => <LandingScreen onPressPrimary={() => {}} />);
diff --git a/apolloschurchapp/src/ui/LandingScreen/LandingScreen.tests.js b/apolloschurchapp/src/ui/LandingScreen/LandingScreen.tests.js
new file mode 100644
index 0000000..13e64f1
--- /dev/null
+++ b/apolloschurchapp/src/ui/LandingScreen/LandingScreen.tests.js
@@ -0,0 +1,64 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+import { GradientOverlayImage } from '@apollosproject/ui-kit';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import LandingScreen from '.';
+
+describe('The Onboarding LandingScreen component', () => {
+  it('should render', () => {
+    const tree = renderer.create(
+      <Providers>
+        <LandingScreen />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a custom title', () => {
+    const tree = renderer.create(
+      <Providers>
+        <LandingScreen slideTitle={'Custom title text'} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a custom description', () => {
+    const tree = renderer.create(
+      <Providers>
+        <LandingScreen description={'Custom description text'} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render with a custom text color', () => {
+    const tree = renderer.create(
+      <Providers>
+        <LandingScreen textColor={'salmon'} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render with an ImageComponent', () => {
+    const tree = renderer.create(
+      <Providers>
+        <LandingScreen
+          BackgroundComponent={
+            <GradientOverlayImage
+              source={'https://picsum.photos/375/812/?random'}
+            />
+          }
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should pass additional props to Slide', () => {
+    const tree = renderer.create(
+      <Providers>
+        <LandingScreen onPressPrimary={jest.fn()} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/LandingScreen/index.js b/apolloschurchapp/src/ui/LandingScreen/index.js
new file mode 100644
index 0000000..f929f81
--- /dev/null
+++ b/apolloschurchapp/src/ui/LandingScreen/index.js
@@ -0,0 +1,86 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+
+import {
+  styled,
+  withTheme,
+  Icon,
+  H1,
+  H4,
+  PaddedView,
+  BackgroundView,
+} from '@apollosproject/ui-kit';
+
+import { Slide } from '@apollosproject/ui-onboarding';
+
+const Content = styled({
+  flex: 1,
+  justifyContent: 'center',
+})(PaddedView);
+
+const BrandIcon = withTheme(({ theme, color }) => ({
+  name: 'brand-icon',
+  size: theme.sizing.baseUnit * 3,
+  ...(color ? { fill: color } : {}),
+  style: {
+    marginBottom: theme.sizing.baseUnit,
+  },
+}))(Icon);
+
+const Title = styled(({ theme, color }) => ({
+  marginBottom: theme.sizing.baseUnit * 2,
+  ...(color ? { color } : {}),
+}))(H1);
+
+const StyledH4 = styled(({ color }) => ({
+  ...(color ? { color } : {}),
+}))(H4);
+
+const LandingScreen = ({
+  slideTitle,
+  description,
+  textColor,
+  BackgroundComponent,
+  ...props
+}) => (
+  <BackgroundView>
+    <Slide {...props} scrollEnabled={false}>
+      {BackgroundComponent}
+      <Content>
+        <BrandIcon color={textColor} />
+        <Title color={textColor}>{slideTitle}</Title>
+        <StyledH4 color={textColor}>{description}</StyledH4>
+      </Content>
+    </Slide>
+  </BackgroundView>
+);
+
+LandingScreen.propTypes = {
+  /* The `Swiper` component used in `<onBoarding>` looks for and hijacks the title prop of it's
+   * children. Thus we have to use more unique name.
+   */
+  slideTitle: PropTypes.string,
+  description: PropTypes.string,
+  textColor: PropTypes.string, // Use for custom text and `BrandIcon` color when overlaying text on an image or video needs more clarity. Defaults to theme driven colors.
+  /* Recommended usage:
+   * - `Image` (react-native)
+   * - `GradientOverlayImage` (@apollosproject/ui-kit) for increased readability
+   * - `Video` (react-native-video) because moving pictures!
+   */
+  BackgroundComponent: PropTypes.oneOfType([
+    PropTypes.arrayOf(PropTypes.node),
+    PropTypes.node,
+  ]),
+};
+
+LandingScreen.defaultProps = {
+  slideTitle: "We're glad you're here.",
+  description:
+    "We're not just a building you go to, but a family to belong to.",
+};
+
+LandingScreen.navigationOptions = {
+  header: null,
+};
+
+export default LandingScreen;
diff --git a/apolloschurchapp/src/ui/Like/index.js b/apolloschurchapp/src/ui/Like/index.js
index 48e19ee..7efb31a 100644
--- a/apolloschurchapp/src/ui/Like/index.js
+++ b/apolloschurchapp/src/ui/Like/index.js
@@ -2,7 +2,9 @@ import React from 'react';
 import PropTypes from 'prop-types';
 
 import { Icon, withTheme } from '@apollosproject/ui-kit';
-import ProtectedTouchable from '../../auth/ProtectedTouchable';
+import { ProtectedTouchable } from '@apollosproject/ui-auth';
+
+import { withNavigation } from 'react-navigation';
 
 const LikeIcon = withTheme(
   ({ theme: { colors: { secondary } = {} } = {}, isLiked } = {}) => ({
@@ -15,7 +17,7 @@ LikeIcon.propTypes = {
   isLiked: PropTypes.bool,
 };
 
-const Like = ({ isLiked, toggleLike, itemId }) => (
+const Like = withNavigation(({ isLiked, toggleLike, itemId }) => (
   <ProtectedTouchable
     onPress={() =>
       toggleLike({ itemId, operation: isLiked ? 'Unlike' : 'Like' })
@@ -23,7 +25,7 @@ const Like = ({ isLiked, toggleLike, itemId }) => (
   >
     <LikeIcon isLiked={isLiked} />
   </ProtectedTouchable>
-);
+));
 
 Like.propTypes = {
   itemId: PropTypes.string,
diff --git a/apolloschurchapp/src/ui/LikeButton/LikeButton.tests.js b/apolloschurchapp/src/ui/LikeButton/LikeButton.tests.js
index d3bf42f..76197fd 100644
--- a/apolloschurchapp/src/ui/LikeButton/LikeButton.tests.js
+++ b/apolloschurchapp/src/ui/LikeButton/LikeButton.tests.js
@@ -61,4 +61,54 @@ describe('the LikeButton component', () => {
     //     );
     //     expect(tree).toMatchSnapshot();
   });
+  it('should render when loading', () => {
+    //     const updateLikeEntity = {
+    //       request: {
+    //         query: gql`
+    //           mutation updateLikeEntity($itemId: ID!, $operation: LIKE_OPERATION!) {
+    //             updateLikeEntity(
+    //               input: { nodeId: $itemId, operation: $operation }
+    //             ) {
+    //               id
+    //               operation
+    //               interactionDateTime
+    //             }
+    //           }
+    //         `,
+    //         variables: {
+    //           itemId: 'asdf',
+    //           operation: 'Like',
+    //         },
+    //       },
+    //       result: {
+    //         data: {
+    //           node: { isLiked: true },
+    //         },
+    //       },
+    //     };
+    //     const getLikedContentItem = {
+    //       request: {
+    //         query: gql`
+    //           query getLikedContentItem($itemId: ID!) {
+    //             node(id: $itemId) {
+    //               ... on ContentItem {
+    //                 id
+    //                 isLiked
+    //               }
+    //             }
+    //           }
+    //         `,
+    //         variables: {
+    //           itemId: 'asdf',
+    //         },
+    //       },
+    //       result: null,
+    //     };
+    //     const tree = renderer.create(
+    //       <Providers mocks={[updateLikeEntity, getLikedContentItem]}>
+    //         <LikeButton itemId={'asdf'} />
+    //       </Providers>
+    //     );
+    //     expect(tree).toMatchSnapshot();
+  });
 });
diff --git a/apolloschurchapp/src/ui/LikeButton/index.js b/apolloschurchapp/src/ui/LikeButton/index.js
index fee9f8b..b6592b7 100644
--- a/apolloschurchapp/src/ui/LikeButton/index.js
+++ b/apolloschurchapp/src/ui/LikeButton/index.js
@@ -5,7 +5,7 @@ import { get } from 'lodash';
 import { Query, Mutation } from 'react-apollo';
 
 import Like from 'apolloschurchapp/src/ui/Like';
-import { track, events } from 'apolloschurchapp/src/analytics';
+import { AnalyticsConsumer } from '@apollosproject/ui-analytics';
 
 import updateLikeEntity from './updateLikeEntity';
 import getLikedContentItem from './getLikedContentItem';
@@ -25,61 +25,67 @@ GetLikeData.propTypes = {
   children: PropTypes.func.isRequired,
 };
 
-const UpdateLikeStatus = ({ itemId, item, isLiked, children }) => (
-  <Mutation
-    mutation={updateLikeEntity}
-    optimisticResponse={{
-      updateLikeEntity: {
-        operation: isLiked ? 'Unlike' : 'Like',
-        id: null, // unknown at this time
-        interactionDateTime: new Date().toJSON(),
-        __typename: 'Interaction',
-      },
-    }}
-    update={(
-      cache,
-      {
-        data: {
-          updateLikeEntity: { operation },
-        },
-      }
-    ) => {
-      updateLikedContent({ liked: operation === 'Like', cache, item });
-      cache.writeQuery({
-        query: getLikedContentItem,
-        data: {
-          node: {
-            ...item,
-            isLiked: operation === 'Like',
+const UpdateLikeStatus = ({
+  itemId,
+  item = { __typename: null },
+  isLiked,
+  children,
+}) => (
+  <AnalyticsConsumer>
+    {({ track }) => (
+      <Mutation
+        mutation={updateLikeEntity}
+        optimisticResponse={{
+          updateLikeEntity: {
+            id: itemId, // unknown at this time
+            isLiked: !isLiked,
+            __typename: item && item.__typename,
           },
-        },
-      });
-    }}
-  >
-    {(createNewInteraction) =>
-      itemId
-        ? children({
-            itemId,
-            isLiked,
-            toggleLike: async (variables) => {
-              try {
-                await createNewInteraction({ variables });
-                track({
-                  eventName: isLiked
-                    ? events.UnlikeContent
-                    : events.LikeContent,
-                  properties: {
-                    id: itemId,
-                  },
-                });
-              } catch (e) {
-                throw e.message;
-              }
+        }}
+        update={(
+          cache,
+          {
+            data: {
+              updateLikeEntity: { isLiked: liked },
             },
-          })
-        : null
-    }
-  </Mutation>
+          }
+        ) => {
+          updateLikedContent({ liked, cache, item });
+          cache.writeQuery({
+            query: getLikedContentItem,
+            data: {
+              node: {
+                ...item,
+                isLiked: liked,
+              },
+            },
+          });
+        }}
+      >
+        {(createNewInteraction) =>
+          itemId
+            ? children({
+                itemId,
+                isLiked,
+                toggleLike: async (variables) => {
+                  try {
+                    await createNewInteraction({ variables });
+                    track({
+                      eventName: isLiked ? 'UnlikeContent' : 'LikeContent',
+                      properties: {
+                        id: itemId,
+                      },
+                    });
+                  } catch (e) {
+                    throw e.message;
+                  }
+                },
+              })
+            : null
+        }
+      </Mutation>
+    )}
+  </AnalyticsConsumer>
 );
 
 UpdateLikeStatus.propTypes = {
diff --git a/apolloschurchapp/src/ui/LikeButton/updateLikeEntity.js b/apolloschurchapp/src/ui/LikeButton/updateLikeEntity.js
index 892fd76..eabd9e9 100644
--- a/apolloschurchapp/src/ui/LikeButton/updateLikeEntity.js
+++ b/apolloschurchapp/src/ui/LikeButton/updateLikeEntity.js
@@ -4,8 +4,7 @@ export default gql`
   mutation updateLikeEntity($itemId: ID!, $operation: LIKE_OPERATION!) {
     updateLikeEntity(input: { nodeId: $itemId, operation: $operation }) {
       id
-      operation
-      interactionDateTime
+      isLiked
     }
   }
 `;
diff --git a/apolloschurchapp/src/ui/LikeButton/updateLikedContent.js b/apolloschurchapp/src/ui/LikeButton/updateLikedContent.js
index 50b612a..c0d5978 100644
--- a/apolloschurchapp/src/ui/LikeButton/updateLikedContent.js
+++ b/apolloschurchapp/src/ui/LikeButton/updateLikedContent.js
@@ -1,18 +1,32 @@
 import getAllLikedContent from 'apolloschurchapp/src/tabs/connect/getLikedContent';
 import { contentItemFragment } from 'apolloschurchapp/src/content-single/getContentItem';
 
-const addItemToLikedContentList = ({ cache, item }) => {
+const addItemToLikedContentList = ({ cache, item, variables }) => {
   try {
-    const data = cache.readQuery({ query: getAllLikedContent });
+    const data = cache.readQuery({
+      query: getAllLikedContent,
+      variables,
+    });
     const fullItem = cache.readFragment({
       id: `${item.__typename}:${item.id}`,
       fragment: contentItemFragment,
     });
+    const newEdges = [
+      fullItem,
+      ...data.likedContent.edges.map(({ node }) => node),
+    ].map((node) => ({
+      __typename: 'ContentItemsConnectionEdge',
+      node,
+    }));
     cache.writeQuery({
       query: getAllLikedContent,
+      variables,
       data: {
         ...data,
-        getAllLikedContent: [fullItem, ...data.getAllLikedContent],
+        likedContent: {
+          ...data.likedContent,
+          edges: newEdges,
+        },
       },
     });
   } catch (e) {
@@ -22,16 +36,26 @@ const addItemToLikedContentList = ({ cache, item }) => {
   }
 };
 
-const removeItemFromLikedContentList = ({ cache, item }) => {
+const removeItemFromLikedContentList = ({ cache, item, variables }) => {
   try {
-    const data = cache.readQuery({ query: getAllLikedContent });
+    const data = cache.readQuery({
+      query: getAllLikedContent,
+      variables,
+    });
+
+    const filteredEdges = data.likedContent.edges.filter(
+      ({ node }) => node.id !== item.id
+    );
+
     cache.writeQuery({
       query: getAllLikedContent,
+      variables,
       data: {
         ...data,
-        getAllLikedContent: data.getAllLikedContent.filter(
-          (content) => content.id !== item.id
-        ),
+        likedContent: {
+          ...data.likedContent,
+          edges: filteredEdges,
+        },
       },
     });
   } catch (e) {
@@ -43,9 +67,11 @@ const removeItemFromLikedContentList = ({ cache, item }) => {
 
 const updateLikedContent = ({ liked, cache, item }) => {
   if (liked) {
-    addItemToLikedContentList({ cache, item });
+    addItemToLikedContentList({ cache, item, variables: { first: 3 } });
+    addItemToLikedContentList({ cache, item, variables: { first: 20 } });
   } else {
-    removeItemFromLikedContentList({ cache, item });
+    removeItemFromLikedContentList({ cache, item, variables: { first: 3 } });
+    removeItemFromLikedContentList({ cache, item, variables: { first: 20 } });
   }
 };
 
diff --git a/apolloschurchapp/src/ui/MediaPlayer/AirPlayButton.js b/apolloschurchapp/src/ui/MediaPlayer/AirPlayButton.js
new file mode 100644
index 0000000..f0ae504
--- /dev/null
+++ b/apolloschurchapp/src/ui/MediaPlayer/AirPlayButton.js
@@ -0,0 +1,23 @@
+import React from 'react';
+import { Platform, View } from 'react-native';
+import { AirPlayButton as AirPlayBtn } from 'react-native-airplay-btn';
+
+import { styled } from '@apollosproject/ui-kit';
+
+const Wrapper = styled(({ theme }) => ({
+  /* 40px is the size the airplay-btn package demands we use 😢 We add the same padding values to
+   * match the size of the other small icons on the screen */
+  width: 40 + theme.sizing.baseUnit * 1.25,
+  height: 40 + theme.sizing.baseUnit * 1.25,
+  justifyContent: 'center',
+  alignItems: 'center',
+}))(View);
+
+const AirPlayButton = () =>
+  Platform.OS === 'ios' ? (
+    <Wrapper>
+      <AirPlayBtn />
+    </Wrapper>
+  ) : null;
+
+export default AirPlayButton;
diff --git a/apolloschurchapp/src/ui/MediaPlayer/FullscreenControls.js b/apolloschurchapp/src/ui/MediaPlayer/FullscreenControls.js
index 7256ae4..bbd9cb0 100644
--- a/apolloschurchapp/src/ui/MediaPlayer/FullscreenControls.js
+++ b/apolloschurchapp/src/ui/MediaPlayer/FullscreenControls.js
@@ -5,6 +5,7 @@ import {
   StyleSheet,
   Animated,
   TouchableWithoutFeedback,
+  View,
 } from 'react-native';
 import { Query, withApollo } from 'react-apollo';
 import LinearGradient from 'react-native-linear-gradient';
@@ -22,7 +23,6 @@ import {
   ButtonIcon,
 } from '@apollosproject/ui-kit';
 
-import Seeker from './Seeker';
 import { getControlState } from './queries';
 import {
   play,
@@ -33,8 +33,9 @@ import {
   mute,
   unmute,
 } from './mutations';
-
 import { ControlsConsumer } from './PlayheadState';
+import Seeker from './Seeker';
+import AirPlayButton from './AirPlayButton';
 
 const Background = withTheme(({ theme }) => ({
   style: StyleSheet.absoluteFill,
@@ -46,13 +47,13 @@ const Background = withTheme(({ theme }) => ({
   locations: [0, 0.4, 0.95],
 }))(LinearGradient);
 
-const UpperControl = styled({
+const UpperControls = styled({
   flexDirection: 'row',
   justifyContent: 'space-between',
   alignItems: 'center',
-})(PaddedView);
+})(View);
 
-const LowerControl = styled({
+const LowerControls = styled({
   position: 'absolute',
   bottom: 0,
   left: 0,
@@ -69,6 +70,7 @@ const PlayControls = styled(({ theme }) => ({
 const PlayHead = styled({ paddingVertical: 0 })(PaddedView);
 
 const Titles = styled({
+  flex: 1,
   alignItems: 'center',
   paddingVertical: 0,
 })(PaddedView);
@@ -255,22 +257,20 @@ class FullscreenControls extends PureComponent {
               style={StyleSheet.absoluteFill}
               forceInset={{ top: 'always', bottom: 'always' }}
             >
-              <TouchableWithoutFeedback onPress={this.handleClose}>
-                <UpperControl>
-                  <IconSm name="arrow-down" onPress={this.handleClose} />
-                  <Titles>
-                    <Title>{get(mediaPlayer, 'currentTrack.title')}</Title>
-                    <Artist>{get(mediaPlayer, 'currentTrack.artist')}</Artist>
-                  </Titles>
-                  <IconSm name="empty" disabled />
-                </UpperControl>
-              </TouchableWithoutFeedback>
-              <LowerControl>
+              <UpperControls>
+                <IconSm name="arrow-down" onPress={this.handleClose} />
+                <Titles>
+                  <Title>{get(mediaPlayer, 'currentTrack.title')}</Title>
+                  <Artist>{get(mediaPlayer, 'currentTrack.artist')}</Artist>
+                </Titles>
+                <AirPlayButton />
+              </UpperControls>
+              <LowerControls horizontal={false}>
                 <PlayHead>
                   <Seeker onScrubbing={this.handleOnScrubbing} />
                 </PlayHead>
                 <ControlsConsumer>{this.renderPlayerControls}</ControlsConsumer>
-              </LowerControl>
+              </LowerControls>
             </SafeAreaView>
           </Background>
         </Animated.View>
diff --git a/apolloschurchapp/src/ui/MediaPlayer/FullscreenPlayer.stories.js b/apolloschurchapp/src/ui/MediaPlayer/FullscreenPlayer.stories.js
index 6c889cc..30eb140 100644
--- a/apolloschurchapp/src/ui/MediaPlayer/FullscreenPlayer.stories.js
+++ b/apolloschurchapp/src/ui/MediaPlayer/FullscreenPlayer.stories.js
@@ -1,5 +1,5 @@
 import React from 'react';
-import { storiesOf } from '@storybook/react-native';
+import { storiesOf } from '@apollosproject/ui-storybook';
 import { Mutation } from 'react-apollo';
 
 import {
diff --git a/apolloschurchapp/src/ui/MediaPlayer/FullscreenPlayer.tests.js b/apolloschurchapp/src/ui/MediaPlayer/FullscreenPlayer.tests.js
index 6fb0aa5..9cb08d3 100644
--- a/apolloschurchapp/src/ui/MediaPlayer/FullscreenPlayer.tests.js
+++ b/apolloschurchapp/src/ui/MediaPlayer/FullscreenPlayer.tests.js
@@ -1,39 +1,33 @@
 import React from 'react';
-import renderer from 'react-test-renderer';
 
-import { client } from 'apolloschurchapp/src/client';
 import Providers from 'apolloschurchapp/src/Providers';
+import { renderWithApolloData } from 'apolloschurchapp/src/utils/testUtils';
+import { InMemoryCache } from 'apollo-cache-inmemory';
 
 import FullscreenPlayer from './FullscreenPlayer';
 
+// TODO: Get these tests to work.
+
 describe('the FullscreenPlayer component', () => {
   it('should render miniplayer with video', async () => {
-    client.cache.writeData({
-      data: {
+    const cache = new InMemoryCache().restore({
+      ROOT_QUERY: {
         mediaPlayer: {
-          __typename: 'MediaPlayerState',
-          currentTrack: {
-            __typename: 'MediaPlayerTrack',
-            id: 1,
-            mediaSource: { uri: 'some-source' },
-            posterSources: [{ uri: 'some-poster-source' }],
-            title: 'Some Title',
-            artist: 'some artist',
-            isVideo: true,
-          },
-          isVisible: true,
+          currentTime: 0,
           isFullscreen: false,
-          isPlaying: true,
-          progress: {
-            __typename: 'MediaPlayerProgress',
-            currentTime: 12,
-            duration: 56,
-          },
+          isVisible: false,
+          currentTrack: 'MediaPlayerTrack:0',
+          __typename: 'MediaPlayerState',
         },
       },
+      'MediaPlayerTrack:0': {
+        isVideo: true,
+        id: 0,
+        __typename: 'MediaPlayerTrack',
+      },
     });
-    const tree = renderer.create(
-      <Providers>
+    const tree = await renderWithApolloData(
+      <Providers cache={cache}>
         <FullscreenPlayer />
       </Providers>
     );
@@ -41,32 +35,17 @@ describe('the FullscreenPlayer component', () => {
   });
 
   it('should render miniplayer with audio', async () => {
-    client.cache.writeData({
-      data: {
-        mediaPlayer: {
-          __typename: 'MediaPlayerState',
-          currentTrack: {
-            __typename: 'MediaPlayerTrack',
-            id: 1,
-            mediaSource: { uri: 'some-source' },
-            posterSources: [{ uri: 'some-poster-source' }],
-            title: 'Some Title',
-            artist: 'some artist',
-            isVideo: false,
-          },
-          isVisible: true,
-          isFullscreen: false,
-          isPlaying: true,
-          progress: {
-            __typename: 'MediaPlayerProgress',
-            currentTime: 12,
-            duration: 56,
-          },
-        },
+    const mediaPlayer = {
+      currentTrack: {
+        isVideo: false,
       },
-    });
-    const tree = renderer.create(
-      <Providers>
+      isVisible: true,
+      isFullscreen: false,
+    };
+    const tree = await renderWithApolloData(
+      <Providers
+        resolvers={{ Query: { mediaPlayer: Promise.resolve(mediaPlayer) } }}
+      >
         <FullscreenPlayer />
       </Providers>
     );
@@ -74,32 +53,17 @@ describe('the FullscreenPlayer component', () => {
   });
 
   it('should render fullscreen', async () => {
-    client.cache.writeData({
-      data: {
-        mediaPlayer: {
-          __typename: 'MediaPlayerState',
-          currentTrack: {
-            __typename: 'MediaPlayerTrack',
-            id: 1,
-            mediaSource: { uri: 'some-source' },
-            posterSources: [{ uri: 'some-poster-source' }],
-            title: 'Some Title',
-            artist: 'some artist',
-            isVideo: false,
-          },
-          isVisible: true,
-          isFullscreen: true,
-          isPlaying: true,
-          progress: {
-            __typename: 'MediaPlayerProgress',
-            currentTime: 12,
-            duration: 56,
-          },
-        },
+    const mediaPlayer = {
+      currentTrack: {
+        isVideo: true,
       },
-    });
-    const tree = renderer.create(
-      <Providers>
+      isVisible: true,
+      isFullscreen: true,
+    };
+    const tree = await renderWithApolloData(
+      <Providers
+        resolvers={{ Query: { mediaPlayer: Promise.resolve(mediaPlayer) } }}
+      >
         <FullscreenPlayer />
       </Providers>
     );
diff --git a/apolloschurchapp/src/ui/MediaPlayer/Seeker/index.js b/apolloschurchapp/src/ui/MediaPlayer/Seeker/index.js
index d071a72..23f74ac 100644
--- a/apolloschurchapp/src/ui/MediaPlayer/Seeker/index.js
+++ b/apolloschurchapp/src/ui/MediaPlayer/Seeker/index.js
@@ -58,6 +58,7 @@ class Seeker extends PureComponent {
     duration: PropTypes.any, // eslint-disable-line
     style: PropTypes.any, // eslint-disable-line
     onScrubbing: PropTypes.func,
+    skip: PropTypes.func,
     knobSize: PropTypes.number, // defaults to theme.sizing.baseUnit / 1.5  (12px)
   };
 
diff --git a/apolloschurchapp/src/ui/Onboarding/index.js b/apolloschurchapp/src/ui/Onboarding/index.js
new file mode 100644
index 0000000..54a0382
--- /dev/null
+++ b/apolloschurchapp/src/ui/Onboarding/index.js
@@ -0,0 +1,80 @@
+import React from 'react';
+
+import { GradientOverlayImage } from '@apollosproject/ui-kit';
+import { ApolloConsumer } from 'react-apollo';
+
+import {
+  AskNotificationsConnected,
+  AskNameConnected,
+  FeaturesConnected,
+  AboutYouConnected,
+  LocationFinderConnected,
+  OnboardingSwiper,
+} from '@apollosproject/ui-onboarding';
+
+import { requestPushPermissions } from 'apolloschurchapp/src/notifications';
+
+function Onboarding({ navigation }) {
+  return (
+    <OnboardingSwiper>
+      {({ swipeForward }) => (
+        <>
+          <AskNameConnected onPressPrimary={swipeForward} />
+          <FeaturesConnected
+            onPressPrimary={swipeForward}
+            BackgroundComponent={
+              <GradientOverlayImage
+                source={'https://picsum.photos/640/640/?random'}
+              />
+            }
+          />
+          <AboutYouConnected
+            onPressPrimary={swipeForward}
+            BackgroundComponent={
+              <GradientOverlayImage
+                source={'https://picsum.photos/640/640/?random'}
+              />
+            }
+          />
+          <LocationFinderConnected
+            onPressPrimary={swipeForward}
+            onNavigate={() => {
+              navigation.navigate('Location', {
+                onFinished: swipeForward,
+              });
+            }}
+            BackgroundComponent={
+              <GradientOverlayImage
+                source={'https://picsum.photos/640/640/?random'}
+              />
+            }
+          />
+          <ApolloConsumer>
+            {(client) => (
+              <AskNotificationsConnected
+                onPressPrimary={() => navigation.navigate('Home')}
+                onRequestPushPermissions={() =>
+                  requestPushPermissions({ client })
+                }
+                primaryNavText={'Finish'}
+                BackgroundComponent={
+                  <GradientOverlayImage
+                    source={'https://picsum.photos/640/640/?random'}
+                  />
+                }
+              />
+            )}
+          </ApolloConsumer>
+        </>
+      )}
+    </OnboardingSwiper>
+  );
+}
+
+Onboarding.navigationOptions = {
+  title: 'Onboarding',
+  header: null,
+  gesturesEnabled: false,
+};
+
+export default Onboarding;
diff --git a/apolloschurchapp/src/ui/Scripture/ScriptureHTMLView.js b/apolloschurchapp/src/ui/Scripture/ScriptureHTMLView.js
index fb6a93d..507c90b 100644
--- a/apolloschurchapp/src/ui/Scripture/ScriptureHTMLView.js
+++ b/apolloschurchapp/src/ui/Scripture/ScriptureHTMLView.js
@@ -3,10 +3,10 @@ import { withProps } from 'recompose';
 import { Platform } from 'react-native';
 
 import { Paragraph, H4 } from '@apollosproject/ui-kit';
-import HTMLView from 'apolloschurchapp/src/ui/HTMLView';
-import defaultRenderer, {
+import HTMLView, {
+  defaultRenderer,
   wrapTextChildren,
-} from 'apolloschurchapp/src/ui/HTMLView/defaultRenderer';
+} from '@apollosproject/ui-htmlview';
 
 import {
   ScriptureText,
diff --git a/apolloschurchapp/src/ui/Scripture/ScriptureItem.stories.js b/apolloschurchapp/src/ui/Scripture/ScriptureItem.stories.js
index c51b7ed..4018ce3 100644
--- a/apolloschurchapp/src/ui/Scripture/ScriptureItem.stories.js
+++ b/apolloschurchapp/src/ui/Scripture/ScriptureItem.stories.js
@@ -1,6 +1,6 @@
 import React from 'react';
 import { ScrollView } from 'react-native';
-import { storiesOf } from '@storybook/react-native';
+import { storiesOf } from '@apollosproject/ui-storybook';
 import { PaddedView } from '@apollosproject/ui-kit';
 
 import ScriptureItem from './ScriptureItem';
diff --git a/apolloschurchapp/src/ui/Scripture/typography/ScriptureText/ScriptureText.stories.js b/apolloschurchapp/src/ui/Scripture/typography/ScriptureText/ScriptureText.stories.js
index 33ea0d2..ddaa3c7 100644
--- a/apolloschurchapp/src/ui/Scripture/typography/ScriptureText/ScriptureText.stories.js
+++ b/apolloschurchapp/src/ui/Scripture/typography/ScriptureText/ScriptureText.stories.js
@@ -1,6 +1,6 @@
 import React from 'react';
 import { View } from 'react-native';
-import { storiesOf } from '@storybook/react-native';
+import { storiesOf } from '@apollosproject/ui-storybook';
 
 import ScriptureText from '.';
 
diff --git a/apolloschurchapp/src/ui/Share/index.js b/apolloschurchapp/src/ui/Share/index.js
index 667f1e6..2f979c5 100644
--- a/apolloschurchapp/src/ui/Share/index.js
+++ b/apolloschurchapp/src/ui/Share/index.js
@@ -3,6 +3,7 @@ import PropTypes from 'prop-types';
 import { compose, pure } from 'recompose';
 import share from 'apolloschurchapp/src/utils/content/share';
 import { Touchable, Icon, withTheme } from '@apollosproject/ui-kit';
+import { AnalyticsConsumer } from '@apollosproject/ui-analytics';
 
 const enhance = compose(
   pure,
@@ -10,9 +11,22 @@ const enhance = compose(
 );
 
 const Share = enhance(({ content, theme }) => (
-  <Touchable onPress={() => share(content)}>
-    <Icon name={'share'} fill={theme.colors.secondary} />
-  </Touchable>
+  <AnalyticsConsumer>
+    {({ track }) => {
+      const onPress = () => {
+        share(content);
+        track({
+          eventName: 'ShareContent',
+          properties: { id: content.id, title: content.title },
+        });
+      };
+      return (
+        <Touchable onPress={onPress}>
+          <Icon name={'share'} fill={theme.colors.secondary} />
+        </Touchable>
+      );
+    }}
+  </AnalyticsConsumer>
 ));
 
 Share.propTypes = {
diff --git a/apolloschurchapp/src/ui/UserAvatarView/AvatarForm.js b/apolloschurchapp/src/ui/UserAvatarView/AvatarForm.js
index 70dabc9..f4a46fe 100644
--- a/apolloschurchapp/src/ui/UserAvatarView/AvatarForm.js
+++ b/apolloschurchapp/src/ui/UserAvatarView/AvatarForm.js
@@ -2,7 +2,7 @@ import React, { PureComponent } from 'react';
 import { View } from 'react-native';
 import PropTypes from 'prop-types';
 import { get } from 'lodash';
-import { Query } from 'react-apollo';
+import { Query, ApolloConsumer } from 'react-apollo';
 
 import {
   Touchable,
@@ -28,11 +28,9 @@ GetPhotoData.propTypes = {
   children: PropTypes.func.isRequired,
 };
 
-const StyledAvatar = withTheme(({ theme }) => ({
-  containerStyle: {
-    marginRight: 0,
-    marginBottom: theme.sizing.baseUnit / 2,
-  },
+const StyledAvatar = styled(({ theme }) => ({
+  marginRight: 0,
+  marginBottom: theme.sizing.baseUnit / 2,
 }))(Avatar);
 
 const RoundTouchable = withTheme(({ theme, size }) => ({
@@ -53,14 +51,15 @@ export default class AvatarForm extends PureComponent {
     this.setState({ isUploadingFile: false });
   }
 
-  handleUploadPhoto = async () => {
+  handleUploadPhoto = async ({ client }) => {
     try {
       await uploadPhoto({
+        client,
         onUpload: () => this.setState({ isUploadingFile: true }),
       });
-      await this.props.refetch();
       await this.setState({ isUploadingFile: false });
     } catch (e) {
+      console.warn(e);
       this.setState({ isUploadingFile: false });
     }
   };
@@ -69,38 +68,41 @@ export default class AvatarForm extends PureComponent {
     const { isUploadingFile } = this.state;
 
     return (
-      <Wrapper>
-        <RoundTouchable
-          disabled={this.props.disabled}
-          onPress={this.handleUploadPhoto}
-          size="medium"
-        >
-          <GetPhotoData>
-            {({ photo }) => (
-              <View>
-                <StyledAvatar
-                  source={photo}
-                  size="medium"
-                  isLoading={isUploadingFile}
-                />
-              </View>
-            )}
-          </GetPhotoData>
-        </RoundTouchable>
-        {this.props.text ? (
-          <H5>
-            <ButtonLink onPress={this.handleUploadPhoto}>
-              Change Photo
-            </ButtonLink>
-          </H5>
-        ) : null}
-      </Wrapper>
+      <ApolloConsumer>
+        {(client) => (
+          <Wrapper>
+            <RoundTouchable
+              disabled={this.props.disabled}
+              onPress={() => this.handleUploadPhoto({ client })}
+              size="medium"
+            >
+              <GetPhotoData>
+                {({ photo }) => (
+                  <View>
+                    <StyledAvatar
+                      source={photo}
+                      size="medium"
+                      isLoading={isUploadingFile}
+                    />
+                  </View>
+                )}
+              </GetPhotoData>
+            </RoundTouchable>
+            {this.props.text ? (
+              <H5>
+                <ButtonLink onPress={() => this.handleUploadPhoto({ client })}>
+                  Change Photo
+                </ButtonLink>
+              </H5>
+            ) : null}
+          </Wrapper>
+        )}
+      </ApolloConsumer>
     );
   }
 }
 
 AvatarForm.propTypes = {
-  refetch: PropTypes.func.isRequired,
   disabled: PropTypes.bool,
   text: PropTypes.bool,
 };
diff --git a/apolloschurchapp/src/ui/UserAvatarView/UserAvatarView.stories.js b/apolloschurchapp/src/ui/UserAvatarView/UserAvatarView.stories.js
index 76cf42a..f32c776 100644
--- a/apolloschurchapp/src/ui/UserAvatarView/UserAvatarView.stories.js
+++ b/apolloschurchapp/src/ui/UserAvatarView/UserAvatarView.stories.js
@@ -1,5 +1,5 @@
 import React from 'react';
-import { storiesOf } from '@storybook/react-native';
+import { storiesOf } from '@apollosproject/ui-storybook';
 
 import UserAvatarView from '.';
 
diff --git a/apolloschurchapp/src/ui/UserAvatarView/index.js b/apolloschurchapp/src/ui/UserAvatarView/index.js
index 4228878..d18a809 100644
--- a/apolloschurchapp/src/ui/UserAvatarView/index.js
+++ b/apolloschurchapp/src/ui/UserAvatarView/index.js
@@ -27,32 +27,23 @@ const Content = styled(({ theme }) => ({
 const UserAvatarView = withIsLoading(
   ({
     theme,
-    photo,
     firstName,
     lastName,
     location,
     isLoading,
-    refetch,
-    onPhotoPress,
-    setIsUploadingFile,
-    isUploadingFile,
     disabled,
     ...viewProps
   }) => (
     // todo: handle file select stuff
     <Container {...viewProps}>
-      <AvatarForm
-        isLoading={isLoading}
-        text={false}
-        disabled={disabled}
-        photo={photo}
-        refetch={refetch}
-      />
+      <AvatarForm isLoading={isLoading} text={false} disabled={disabled} />
       <Content>
         <H3>
           {firstName} {lastName}
         </H3>
-        <ChannelLabel icon="pin" label={location || ''} isLoading={isLoading} />
+        {location && (
+          <ChannelLabel icon="pin" label={location} isLoading={isLoading} />
+        )}
       </Content>
     </Container>
   )
@@ -64,10 +55,8 @@ UserAvatarView.propTypes = {
   lastName: PropTypes.string,
   location: PropTypes.string,
   isLoading: PropTypes.bool,
-  refetch: PropTypes.func,
-  onPhotoPress: PropTypes.func,
+  disabled: PropTypes.bool,
   blurIntensity: PropTypes.number,
-  allowProfileImageChange: PropTypes.bool,
   ...View.propTypes,
 };
 
diff --git a/apolloschurchapp/src/ui/UserAvatarView/uploadPhoto.js b/apolloschurchapp/src/ui/UserAvatarView/uploadPhoto.js
index f56408b..cf0b4e0 100644
--- a/apolloschurchapp/src/ui/UserAvatarView/uploadPhoto.js
+++ b/apolloschurchapp/src/ui/UserAvatarView/uploadPhoto.js
@@ -1,6 +1,5 @@
 import gql from 'graphql-tag';
 import ImagePicker from 'react-native-image-picker';
-import { client } from 'apolloschurchapp/src/client';
 import { ReactNativeFile } from 'apollo-upload-client';
 import getUserProfile from '../../tabs/connect/getUserProfile';
 
@@ -27,7 +26,7 @@ function showImagePicker() {
   });
 }
 
-export default async ({ onUpload = () => ({}) }) => {
+export default async ({ client, onUpload = () => ({}) }) => {
   try {
     const image = await showImagePicker();
     const file = new ReactNativeFile({
@@ -75,6 +74,7 @@ export default async ({ onUpload = () => ({}) }) => {
       },
     });
   } catch (e) {
+    console.warn(e);
     return null;
   }
 };
diff --git a/apolloschurchapp/src/ui/WebBrowser/Browser.android.js b/apolloschurchapp/src/ui/WebBrowser/Browser.android.js
index 49dc211..cc7d39d 100644
--- a/apolloschurchapp/src/ui/WebBrowser/Browser.android.js
+++ b/apolloschurchapp/src/ui/WebBrowser/Browser.android.js
@@ -1,14 +1,9 @@
 import { Linking } from 'react-native';
-import { CustomTabs } from 'react-native-custom-tabs';
 
 const Browser = {
-  openURL: async (url, options = {}) => {
-    try {
-      await CustomTabs.openURL(url, options);
-    } catch (e) {
-      if (!Linking.canOpenURL()) throw new Error('URL not supported');
-      Linking.openURL(url);
-    }
+  openURL: async (url) => {
+    if (!Linking.canOpenURL(url)) throw new Error('URL not supported');
+    Linking.openURL(url);
   },
 };
 
diff --git a/apolloschurchapp/src/ui/WebBrowser/Browser.ios.js b/apolloschurchapp/src/ui/WebBrowser/Browser.ios.js
index 7de160f..0716bff 100644
--- a/apolloschurchapp/src/ui/WebBrowser/Browser.ios.js
+++ b/apolloschurchapp/src/ui/WebBrowser/Browser.ios.js
@@ -10,7 +10,7 @@ const Browser = {
         ...options,
       });
     } catch (e) {
-      if (!Linking.canOpenURL()) throw new Error('URL not supported');
+      if (!Linking.canOpenURL(url)) throw new Error('URL not supported');
       Linking.openURL(url);
     }
   },
diff --git a/apolloschurchapp/src/user-settings/ChangePassword.js b/apolloschurchapp/src/user-settings/ChangePassword.js
index 4b5bdf3..6f5f027 100644
--- a/apolloschurchapp/src/user-settings/ChangePassword.js
+++ b/apolloschurchapp/src/user-settings/ChangePassword.js
@@ -67,7 +67,7 @@ class ChangePassword extends PureComponent {
       <SafeAreaView>
         <PaddedView>
           <Button
-            disabled={!props.isValid || props.isSubmitting}
+            disabled={props.isSubmitting}
             onPress={props.handleSubmit}
             title="Save"
             loading={props.isSubmitting}
diff --git a/apolloschurchapp/src/user-settings/Locations/Locations.tests.js b/apolloschurchapp/src/user-settings/Locations/Locations.tests.js
new file mode 100644
index 0000000..627fc7f
--- /dev/null
+++ b/apolloschurchapp/src/user-settings/Locations/Locations.tests.js
@@ -0,0 +1,112 @@
+import React from 'react';
+import { renderWithApolloData } from 'apolloschurchapp/src/utils/testUtils';
+
+import Providers from 'apolloschurchapp/src/Providers';
+import getCampusLocations from './getCampusLocations';
+import Location from './index';
+
+const campuses = [
+  {
+    id: 'Campus:559b23fd0aa90e81b1c023e72e230fa1',
+    latitude: 34.59814,
+    longitude: -82.62045,
+    name: 'Anderson Campus',
+    street1: '2940 Concord Rd',
+    street2: '',
+    city: 'Anderson',
+    state: 'SC',
+    distanceFromLocation: 5,
+    postalCode: '29621-3619',
+    image: {
+      uri:
+        'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3Da47e8e69-9542-42de-9ed3-ff42fdc82417',
+    },
+  },
+  {
+    id: 'Campus:965b6e6d7046a885bea4e300b5c0400d',
+    latitude: 32.95103,
+    longitude: -96.74738,
+    name: 'Dallas Campus',
+    street1: '102 N Weatherred Dr',
+    street2: '',
+    city: 'Richardson',
+    state: 'TX',
+    postalCode: '75080-5525',
+    distanceFromLocation: 50,
+    image: {
+      uri:
+        'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D5f9fd97a-fd6e-4ae5-ab5d-a9b95290d9b6',
+    },
+  },
+  {
+    id: 'Campus:4f68015ba18662a7409d1219a4ce013e',
+    latitude: 39.10501,
+    longitude: -84.51138,
+    name: 'Cincinnati Campus',
+    street1: '120 E 8th St',
+    street2: '',
+    city: 'Cincinnati',
+    state: 'OH',
+    postalCode: '45202-2118',
+    distanceFromLocation: 500,
+    image: {
+      uri:
+        'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3Dbad9eb54-3e78-44a7-a028-3f2d6e71a36f',
+    },
+  },
+  {
+    id: 'Campus:a0f64573eabf00a607bec911794d50fb',
+    latitude: 42.09203,
+    longitude: -88.13289,
+    name: 'Chicago Campus',
+    street1: '67 Algonquin Rd',
+    street2: '',
+    city: 'South Barrington',
+    state: 'IL',
+    postalCode: '60010-6143',
+    distanceFromLocation: 5000,
+    image: {
+      uri:
+        'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3Dede1fb83-968e-4bef-8d77-ad81c96e8a47',
+    },
+  },
+];
+
+describe('Display Native Map with Locations', () => {
+  const initialRegion = {
+    // roughly show the entire USA by default
+    latitude: 39.809734,
+    longitude: -98.555618,
+    latitudeDelta: 100,
+    longitudeDelta: 10,
+  };
+  it('Render a native map view', async () => {
+    const navigation = {
+      navigate: jest.fn(),
+      getParam: jest.fn(),
+      goBack: jest.fn(),
+    };
+
+    const mock = {
+      request: {
+        query: getCampusLocations,
+        variables: {
+          latitude: initialRegion.latitude,
+          longitude: initialRegion.longitude,
+        },
+      },
+      result: {
+        data: {
+          campuses,
+        },
+      },
+    };
+
+    const tree = await renderWithApolloData(
+      <Providers mocks={[mock]} addTypename={false}>
+        <Location navigation={navigation} initialRegion={initialRegion} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/user-settings/Locations/MapView.js b/apolloschurchapp/src/user-settings/Locations/MapView.js
new file mode 100644
index 0000000..b38e1d5
--- /dev/null
+++ b/apolloschurchapp/src/user-settings/Locations/MapView.js
@@ -0,0 +1,232 @@
+import React, { Component } from 'react';
+import PropTypes from 'prop-types';
+import { View, Animated } from 'react-native';
+import SafeAreaView from 'react-native-safe-area-view';
+import RNMapView from 'react-native-maps';
+import { debounce } from 'lodash';
+
+import {
+  Button,
+  PaddedView,
+  styled,
+  withTheme,
+  CampusCard,
+} from '@apollosproject/ui-kit';
+
+import Marker from './Marker';
+
+const { CARD_WIDTH } = CampusCard;
+
+const ContainerView = styled({
+  flex: 1,
+})(View);
+
+const FlexedMapView = styled({ flex: 1 })(({ mapRef, ...props }) => (
+  <RNMapView ref={mapRef} {...props} />
+));
+
+const getCampusAddress = (campus) =>
+  `${campus.street1}\n${campus.city}, ${campus.state} ${campus.postalCode}`;
+
+const ScrollingView = styled({
+  position: 'absolute',
+  bottom: 0,
+  left: 0,
+  right: 0,
+})(View);
+
+class MapView extends Component {
+  static propTypes = {
+    campuses: PropTypes.arrayOf(
+      PropTypes.shape({
+        latitude: PropTypes.number.isRequired,
+        longitude: PropTypes.number.isRequired,
+      })
+    ),
+    onLocationSelect: PropTypes.func.isRequired,
+    initialRegion: PropTypes.shape({
+      latitude: PropTypes.number.isRequired,
+      longitude: PropTypes.number.isRequired,
+      latitudeDelta: PropTypes.number,
+      longitudeDelta: PropTypes.number,
+    }).isRequired,
+    userLocation: PropTypes.shape({
+      latitude: PropTypes.number.isRequired,
+      longitude: PropTypes.number.isRequired,
+    }),
+    theme: PropTypes.shape({
+      sizing: PropTypes.shape({
+        baseUnit: PropTypes.number,
+      }),
+    }),
+    navigation: PropTypes.shape({
+      goBack: PropTypes.func,
+    }),
+  };
+
+  state = {
+    campus: null,
+  };
+
+  animation = new Animated.Value(0);
+
+  componentDidMount() {
+    this.animation.addListener(debounce(this.updateCoordinates));
+  }
+
+  componentDidUpdate(oldProps) {
+    if (oldProps.userLocation !== this.props.userLocation) {
+      this.updateCoordinates({ value: this.previousScrollPosition });
+    }
+  }
+
+  get contentContainerStyle() {
+    return { paddingHorizontal: this.props.theme.sizing.baseUnit * 0.75 }; // pad cards from edge of screen but account for card margin
+  }
+
+  updateCoordinates = ({ value }) => {
+    this.previousScrollPosition = value;
+    const cardIndex = Math.floor(value / CARD_WIDTH + 0.3); // animate 30% away from landing on the next item;
+    const campus = this.props.campuses[cardIndex];
+    this.setState({ campus });
+    if (!campus) return;
+
+    const { userLocation } = this.props;
+
+    let { latitude } = campus;
+    const { longitude } = campus;
+    let { latitudeDelta, longitudeDelta } = this.props.initialRegion;
+
+    if (userLocation) {
+      // Calculate rectangle that shows user's location in the view with campus at center
+      const minLat = Math.min(campus.latitude, userLocation.latitude);
+      const maxLat = Math.max(campus.latitude, userLocation.latitude);
+      const minLong = Math.min(campus.longitude, userLocation.longitude);
+      const mayLong = Math.max(campus.longitude, userLocation.longitude);
+
+      latitudeDelta = (maxLat - minLat) * 2.5;
+      longitudeDelta = (mayLong - minLong) * 2.5;
+    }
+
+    // Now, we need to transform the given lat/lng/delta up to make room for cards at bottom.
+    // To make this math simpler, we'll assume the cards take up roughly 20% of the vertical space
+    const maxDelta = Math.max(latitudeDelta, longitudeDelta);
+    latitude -= maxDelta * 0.2; // move the view up 20%
+    latitudeDelta *= 1.2; // include 20% more area in the view
+
+    this.map.animateToRegion(
+      {
+        latitude,
+        longitude,
+        latitudeDelta,
+        longitudeDelta,
+      },
+      350
+    );
+  };
+
+  render() {
+    const { campuses = [], onLocationSelect } = this.props;
+    const interpolations = campuses.map((marker, index) => {
+      const inputRange = [
+        (index - 1) * CARD_WIDTH,
+        index * CARD_WIDTH,
+        (index + 1) * CARD_WIDTH,
+      ];
+      const scale = this.animation.interpolate({
+        inputRange,
+        outputRange: [1, 2.5, 1],
+        extrapolate: 'clamp',
+      });
+      const opacity = this.animation.interpolate({
+        inputRange,
+        outputRange: [0.35, 1, 0.35],
+        extrapolate: 'clamp',
+      });
+      return { scale, opacity };
+    });
+
+    return (
+      <ContainerView>
+        <ContainerView>
+          <FlexedMapView
+            initialRegion={this.props.initialRegion}
+            showsUserLocation
+            mapRef={(map) => {
+              this.map = map;
+            }}
+          >
+            {campuses.map((campus, index) => {
+              const scaleStyle = {
+                transform: [
+                  {
+                    scale: interpolations[index].scale,
+                  },
+                ],
+              };
+              const opacityStyle = {
+                opacity: interpolations[index].opacity,
+              };
+              return (
+                <Marker
+                  key={campus.id}
+                  opacityStyle={opacityStyle}
+                  scaleStyle={scaleStyle}
+                  latitude={campus.latitude}
+                  longitude={campus.longitude}
+                />
+              );
+            })}
+          </FlexedMapView>
+          <ScrollingView>
+            <SafeAreaView forceInset={{ bottom: 'always', top: 'never' }}>
+              <Animated.ScrollView
+                horizontal
+                showsHorizontalScrollIndicator={false}
+                snapToInterval={CARD_WIDTH + 8} // account for padding
+                snapToAlignment={'start'}
+                decelerationRate={'fast'}
+                contentContainerStyle={this.contentContainerStyle} // correctly pads cards in ScrollView
+                scrollEventThrottle={16} // roughtly 1000ms/60fps = 16ms
+                onScroll={Animated.event(
+                  [
+                    {
+                      nativeEvent: {
+                        contentOffset: {
+                          x: this.animation,
+                        },
+                      },
+                    },
+                  ],
+                  { useNativeDriver: true }
+                )}
+              >
+                {campuses.map((campus) => (
+                  <CampusCard
+                    key={campus.id}
+                    distance={campus.distanceFromLocation}
+                    title={campus.name}
+                    description={getCampusAddress(campus)}
+                    images={[campus.image]}
+                  />
+                ))}
+              </Animated.ScrollView>
+              <PaddedView>
+                <Button
+                  title="Select Campus"
+                  pill={false}
+                  type="secondary"
+                  onPress={() =>
+                    onLocationSelect(this.state.campus || campuses[0])
+                  }
+                />
+              </PaddedView>
+            </SafeAreaView>
+          </ScrollingView>
+        </ContainerView>
+      </ContainerView>
+    );
+  }
+}
+
+export default withTheme()(MapView);
diff --git a/apolloschurchapp/src/user-settings/Locations/Marker.js b/apolloschurchapp/src/user-settings/Locations/Marker.js
new file mode 100644
index 0000000..b7c10d7
--- /dev/null
+++ b/apolloschurchapp/src/user-settings/Locations/Marker.js
@@ -0,0 +1,60 @@
+import React, { memo } from 'react';
+import { View, Animated } from 'react-native';
+import PropTypes from 'prop-types';
+import { Marker } from 'react-native-maps';
+import Color from 'color';
+
+import { styled } from '@apollosproject/ui-kit';
+
+const MarkerView = styled(({ theme }) => ({
+  width: 8,
+  height: 8,
+  borderRadius: 4,
+  backgroundColor: Color(theme.colors.primary).fade(theme.alpha.medium),
+}))(View);
+
+const MarkerWrapView = styled({
+  alignItems: 'center',
+  justifyContent: 'center',
+})(View);
+
+// This is not good. Is there a better way to prevent cascading styles?
+
+const MarkerRingView = styled(({ theme }) => ({
+  width: 24,
+  height: 24,
+  borderRadius: 12,
+  right: -8,
+  top: -8,
+  backgroundColor: Color(theme.colors.primary).fade(theme.alpha.low),
+  position: 'absolute',
+  borderWidth: 1,
+  borderColor: Color(theme.colors.primary).fade(theme.alpha.medium),
+  alignItems: 'stretch',
+}))(View);
+
+const StyledMarker = memo(
+  ({ latitude, longitude, opacityStyle, scaleStyle }) => (
+    <Marker coordinate={{ latitude, longitude }}>
+      <MarkerWrapView>
+        <Animated.View style={opacityStyle}>
+          <MarkerRingView>
+            <Animated.View style={scaleStyle} />
+          </MarkerRingView>
+          <MarkerView />
+        </Animated.View>
+      </MarkerWrapView>
+    </Marker>
+  )
+);
+
+StyledMarker.displayName = 'StyledMarker';
+
+StyledMarker.propTypes = {
+  latitude: PropTypes.number.isRequired,
+  longitude: PropTypes.number.isRequired,
+  opacityStyle: PropTypes.shape({}),
+  scaleStyle: PropTypes.shape({}),
+};
+
+export default StyledMarker;
diff --git a/apolloschurchapp/src/user-settings/Locations/campusChange.js b/apolloschurchapp/src/user-settings/Locations/campusChange.js
new file mode 100644
index 0000000..e164b7b
--- /dev/null
+++ b/apolloschurchapp/src/user-settings/Locations/campusChange.js
@@ -0,0 +1,14 @@
+import gql from 'graphql-tag';
+import CampusFragment from './campusFragment';
+
+export default gql`
+  mutation campusChange($campusId: String!) {
+    updateUserCampus(campusId: $campusId) {
+      id
+      campus {
+        ...CampusParts
+      }
+    }
+  }
+  ${CampusFragment}
+`;
diff --git a/apolloschurchapp/src/user-settings/Locations/campusFragment.js b/apolloschurchapp/src/user-settings/Locations/campusFragment.js
new file mode 100644
index 0000000..777cce5
--- /dev/null
+++ b/apolloschurchapp/src/user-settings/Locations/campusFragment.js
@@ -0,0 +1,19 @@
+import gql from 'graphql-tag';
+
+export default gql`
+  fragment CampusParts on Campus {
+    id
+    name
+    latitude
+    longitude
+    distanceFromLocation
+    street1
+    street2
+    city
+    state
+    postalCode
+    image {
+      uri
+    }
+  }
+`;
diff --git a/apolloschurchapp/src/user-settings/Locations/getCampusLocations.js b/apolloschurchapp/src/user-settings/Locations/getCampusLocations.js
new file mode 100644
index 0000000..1c98bb8
--- /dev/null
+++ b/apolloschurchapp/src/user-settings/Locations/getCampusLocations.js
@@ -0,0 +1,11 @@
+import gql from 'graphql-tag';
+import CampusFragment from './campusFragment';
+
+export default gql`
+  query getAllCampuses($latitude: Float!, $longitude: Float!) {
+    campuses(location: { latitude: $latitude, longitude: $longitude }) {
+      ...CampusParts
+    }
+  }
+  ${CampusFragment}
+`;
diff --git a/apolloschurchapp/src/user-settings/Locations/index.js b/apolloschurchapp/src/user-settings/Locations/index.js
new file mode 100644
index 0000000..f8517c3
--- /dev/null
+++ b/apolloschurchapp/src/user-settings/Locations/index.js
@@ -0,0 +1,146 @@
+import React, { PureComponent } from 'react';
+import PropTypes from 'prop-types';
+import { Query, Mutation } from 'react-apollo';
+import { Dimensions } from 'react-native';
+
+import { PaddedView, ButtonLink } from '@apollosproject/ui-kit';
+
+import getUserProfile from '../../tabs/connect/getUserProfile';
+import MapView from './MapView';
+
+import getAllCampuses from './getCampusLocations';
+
+import campusChange from './campusChange';
+
+const getCurrentLocation = () =>
+  new Promise((resolve, reject) => {
+    navigator.geolocation.getCurrentPosition(
+      (position) => resolve(position),
+      (e) => reject(e)
+    );
+  });
+
+const screen = Dimensions.get('window');
+
+const ASPECT_RATIO = screen.width / screen.height;
+
+class Location extends PureComponent {
+  static propTypes = {
+    navigation: PropTypes.shape({
+      getParam: PropTypes.func,
+      navigate: PropTypes.func,
+      goBack: PropTypes.func,
+    }),
+    initialRegion: PropTypes.shape({
+      latitude: PropTypes.number,
+      longitude: PropTypes.number,
+      latitudeDelta: PropTypes.number,
+      longitudeDelta: PropTypes.number,
+    }),
+    onFinished: PropTypes.func,
+  };
+
+  static defaultProps = {
+    initialRegion: {
+      // roughly show the entire USA by default
+      latitude: 39.809734,
+      longitude: -98.555618,
+      latitudeDelta: 100,
+      longitudeDelta: 100 * ASPECT_RATIO,
+    },
+  };
+
+  static navigationOptions = ({ navigation }) => ({
+    title: 'Location',
+    headerLeft: null,
+    headerRight: (
+      <PaddedView vertical={false}>
+        <ButtonLink onPress={() => navigation.goBack()}>Back</ButtonLink>
+      </PaddedView>
+    ),
+  });
+
+  state = {
+    region: this.props.initialRegion,
+  };
+
+  componentDidMount() {
+    return getCurrentLocation().then((position) => {
+      if (position) {
+        this.setState({
+          userLocation: {
+            latitude: position.coords.latitude,
+            longitude: position.coords.longitude,
+          },
+        });
+      }
+    });
+  }
+
+  render() {
+    const { navigation, onFinished } = this.props;
+    // we should use the `onFinished` from the navigation param, if it exists.
+    const handleFinished = this.props.navigation.getParam(
+      'onFinished',
+      onFinished
+    );
+
+    return (
+      <Query
+        query={getAllCampuses}
+        variables={{
+          latitude: this.state.region.latitude,
+          longitude: this.state.region.longitude,
+        }}
+        fetchPolicy="cache-and-network"
+      >
+        {({ loading, error, data: { campuses = [] } = {} }) => (
+          <Mutation
+            mutation={campusChange}
+            update={async (cache, { data: { updateUserCampus } }) => {
+              const { currentUser } = await cache.readQuery({
+                query: getUserProfile,
+              });
+              await cache.writeQuery({
+                query: getUserProfile,
+                data: {
+                  currentUser: {
+                    ...currentUser,
+                    profile: {
+                      ...currentUser.profile,
+                      campus: {
+                        ...updateUserCampus.campus,
+                      },
+                    },
+                  },
+                },
+              });
+            }}
+          >
+            {(handlePress) => (
+              <MapView
+                navigation={navigation}
+                isLoading={loading}
+                error={error}
+                campuses={campuses}
+                initialRegion={this.props.initialRegion}
+                userLocation={this.state.userLocation}
+                onLocationSelect={async ({ id }) => {
+                  await handlePress({
+                    variables: {
+                      campusId: id,
+                    },
+                  });
+                  await navigation.goBack();
+                  if (handleFinished) handleFinished();
+                }}
+              />
+            )}
+          </Mutation>
+        )}
+      </Query>
+    );
+  }
+}
+
+export default Location;
diff --git a/apolloschurchapp/src/user-settings/index.js b/apolloschurchapp/src/user-settings/index.js
index 6d26048..c386327 100644
--- a/apolloschurchapp/src/user-settings/index.js
+++ b/apolloschurchapp/src/user-settings/index.js
@@ -18,8 +18,7 @@ import {
 import { WebBrowserConsumer } from 'apolloschurchapp/src/ui/WebBrowser';
 import AvatarForm from 'apolloschurchapp/src/ui/UserAvatarView/AvatarForm';
 
-import getLoginState from '../auth/getLoginState';
-import logout from '../auth/logout';
+import { getLoginState, logout } from '@apollosproject/ui-auth';
 
 const AvatarView = styled({
   alignItems: 'center',
@@ -51,10 +50,7 @@ class UserSettings extends PureComponent {
           return (
             <BackgroundContainer>
               <AvatarView>
-                <AvatarForm
-                  text
-                  refetch={this.props.navigation.getParam('refetch', {})}
-                />
+                <AvatarForm text />
               </AvatarView>
               <WebBrowserConsumer>
                 {(openUrl) => (
@@ -73,6 +69,17 @@ class UserSettings extends PureComponent {
                         </Cell>
                       </Touchable>
                       <Divider />
+                      <Touchable
+                        onPress={async () => {
+                          await this.props.navigation.navigate('Location');
+                        }}
+                      >
+                        <Cell>
+                          <CellText>Location</CellText>
+                          <CellIcon name="arrow-next" />
+                        </Cell>
+                      </Touchable>
+                      <Divider />
                       <Touchable
                         onPress={async () => {
                           await this.props.navigation.navigate(
diff --git a/apolloschurchapp/src/user-web-browser/Provider.js b/apolloschurchapp/src/user-web-browser/Provider.js
new file mode 100644
index 0000000..e620207
--- /dev/null
+++ b/apolloschurchapp/src/user-web-browser/Provider.js
@@ -0,0 +1,12 @@
+import { createContext } from 'react';
+import NavigationService from '../NavigationService';
+
+// Can can either call the OpenUserWebView function directly, or call it using the Consuemer.
+// Your choice.
+export const OpenUserWebView = ({ url }) =>
+  NavigationService.navigate('UserWebBrowser', { url });
+
+const { Provider, Consumer } = createContext(OpenUserWebView);
+
+export { Provider as UserWebBrowserProvider };
+export { Consumer as UserWebBrowserConsumer };
diff --git a/apolloschurchapp/src/user-web-browser/index.js b/apolloschurchapp/src/user-web-browser/index.js
new file mode 100644
index 0000000..d830fe5
--- /dev/null
+++ b/apolloschurchapp/src/user-web-browser/index.js
@@ -0,0 +1,67 @@
+// Provider API for WebBrowser that injects theme values and defaults to the web browser:
+// import { Platform } from 'react-native';
+import React from 'react';
+import gql from 'graphql-tag';
+import { Query } from 'react-apollo';
+import { ModalView } from '@apollosproject/ui-kit';
+import { WebView } from 'react-native-webview';
+import PropTypes from 'prop-types';
+import { get } from 'lodash';
+
+const Browser = ({ url, cookie = '', modal, navigation }) => {
+  console.warn(cookie);
+  if (modal) {
+    return (
+      <ModalView navigation={navigation}>
+        <WebView source={{ uri: url, headers: { Cookie: cookie } }} />
+      </ModalView>
+    );
+  }
+  return <WebView source={{ uri: url, headers: { Cookie: cookie } }} />;
+};
+
+Browser.propTypes = {
+  url: PropTypes.string.isRequired,
+  cookie: PropTypes.string,
+  modal: PropTypes.bool.isRequired,
+};
+
+const WITH_USER_COOKIE = gql`
+  query currentUserCookie {
+    currentUser {
+      id
+      rockToken
+    }
+  }
+`;
+
+const BrowserWithUserCookie = ({ url, navigation, modal = true }) => {
+  // get the url from the navigation param or default to the url prop;
+  const uri = navigation.getParam('url', url);
+  return (
+    <Query query={WITH_USER_COOKIE}>
+      {({ data, loading }) => {
+        if (loading) {
+          return null;
+        }
+        const cookie = get(data, 'currentUser.rockToken', '');
+        return (
+          <Browser
+            cookie={cookie}
+            url={uri}
+            modal={modal}
+            navigation={navigation}
+          />
+        );
+      }}
+    </Query>
+  );
+};
+
+BrowserWithUserCookie.propTypes = {
+  url: PropTypes.string,
+  modal: PropTypes.bool,
+};
+
+export default BrowserWithUserCookie;
+export { UserWebBrowserProvider, UserWebBrowserConsumer } from './Provider';
diff --git a/apolloschurchapp/src/utils/content/share.js b/apolloschurchapp/src/utils/content/share.js
index e04063d..7a8efae 100644
--- a/apolloschurchapp/src/utils/content/share.js
+++ b/apolloschurchapp/src/utils/content/share.js
@@ -1,19 +1,14 @@
 import { Platform, Share } from 'react-native';
 // import { get } from 'lodash';
-import { track, events } from 'apolloschurchapp/src/analytics';
+// import { track, events } from 'apolloschurchapp/src/analytics';
 // import getSiteLink from './getSiteLink';
 
-const share = ({ title, url, id = '' }) => {
+const share = ({ title, url }) => {
   Share.share({
     title,
     message: Platform.OS === 'android' ? `${title}\n${url}` : title,
     url,
   });
-
-  track({
-    eventName: events.ShareContent,
-    properties: { title, id },
-  });
 };
 
 export default share;
diff --git a/apolloschurchapp/src/utils/testUtils.js b/apolloschurchapp/src/utils/testUtils.js
new file mode 100644
index 0000000..38d20f7
--- /dev/null
+++ b/apolloschurchapp/src/utils/testUtils.js
@@ -0,0 +1,10 @@
+/* eslint-disable import/prefer-default-export */
+import renderer from 'react-test-renderer';
+import wait from 'waait';
+
+export const renderWithApolloData = async (component) => {
+  const tree = renderer.create(component);
+  await wait(1);
+  tree.update(component);
+  return tree;
+};
diff --git a/apolloschurchapp/storybook/Welcome/Intro.js b/apolloschurchapp/storybook/Welcome/Intro.js
new file mode 100644
index 0000000..2e8b8d7
--- /dev/null
+++ b/apolloschurchapp/storybook/Welcome/Intro.js
@@ -0,0 +1,43 @@
+import React from 'react';
+import { Paragraph, BodyText } from '@apollosproject/ui-kit';
+
+import { Slide, SlideContent } from '@apollosproject/ui-onboarding';
+
+const Intro = () => (
+  <Slide>
+    <SlideContent title={`Welcome to ${'\n'}Apollos Storybook!`} icon>
+      <Paragraph>
+        <BodyText>
+          Storybook is the component workshop for the Apollos app platform.
+        </BodyText>
+      </Paragraph>
+      <Paragraph>
+        <BodyText>
+          A story is a single state of one or more UI components. You can have
+          as many stories as you want.
+        </BodyText>
+      </Paragraph>
+      <Paragraph>
+        <BodyText>
+          We use Storybook to help document UI and to serve as visual test cases
+          for different states.
+        </BodyText>
+      </Paragraph>
+      <Paragraph>
+        <BodyText>
+          Open the navigator using the navigation bar at the bottom of the
+          screen to navigate the available stories.
+        </BodyText>
+      </Paragraph>
+      <Paragraph>
+        <BodyText>
+          The stories defined inside of your app will be listed first, with
+          Apollos UI stories below them. If you setup a theme, all of the
+          stories will reflect your theme.
+        </BodyText>
+      </Paragraph>
+    </SlideContent>
+  </Slide>
+);
+
+export default Intro;
diff --git a/apolloschurchapp/storybook/Welcome/Welcome.stories.js b/apolloschurchapp/storybook/Welcome/Welcome.stories.js
deleted file mode 100644
index f1c9a65..0000000
--- a/apolloschurchapp/storybook/Welcome/Welcome.stories.js
+++ /dev/null
@@ -1,9 +0,0 @@
-import React from 'react';
-import { storiesOf } from '@storybook/react-native';
-import { linkTo } from '@storybook/addon-links';
-
-import Welcome from '.';
-
-storiesOf('Welcome', module).add('to Storybook', () => (
-  <Welcome showApp={linkTo('Button')} />
-));
diff --git a/apolloschurchapp/storybook/Welcome/index.js b/apolloschurchapp/storybook/Welcome/index.js
index 78f7086..6c1e852 100644
--- a/apolloschurchapp/storybook/Welcome/index.js
+++ b/apolloschurchapp/storybook/Welcome/index.js
@@ -1,57 +1,9 @@
 import React from 'react';
-import PropTypes from 'prop-types';
-import { View, Text } from 'react-native';
+import { storiesOf } from '@apollosproject/ui-storybook';
 
-export default class Welcome extends React.Component {
-  styles = {
-    wrapper: {
-      flex: 1,
-      padding: 24,
-      justifyContent: 'center',
-    },
-    header: {
-      fontSize: 18,
-      marginBottom: 18,
-    },
-    content: {
-      fontSize: 12,
-      marginBottom: 10,
-      lineHeight: 18,
-    },
-  };
+import App from '../../src';
+import Intro from './Intro';
 
-  showApp(event) {
-    event.preventDefault();
-    if (this.props.showApp) this.props.showApp();
-  }
-
-  render() {
-    return (
-      <View style={this.styles.wrapper}>
-        <Text style={this.styles.header}>
-          Welcome to React Native Storybook
-        </Text>
-        <Text style={this.styles.content}>
-          This is a UI Component development environment for your React Native
-          app. Here you can display and interact with your UI components as
-          stories. A story is a single state of one or more UI components. You
-          can have as many stories as you want. In other words a story is like a
-          visual test case.
-        </Text>
-        <Text style={this.styles.content}>
-          We have added some stories inside the &quot;storybook/stories&quot;
-          directory for examples. Try editing the
-          &quot;storybook/stories/Welcome.js&quot; file to edit this message.
-        </Text>
-      </View>
-    );
-  }
-}
-
-Welcome.defaultProps = {
-  showApp: null,
-};
-
-Welcome.propTypes = {
-  showApp: PropTypes.func,
-};
+storiesOf('Storybook', module)
+  .add('Welcome', () => <Intro />)
+  .add('App', () => <App />);
diff --git a/apolloschurchapp/storybook/addons.js b/apolloschurchapp/storybook/addons.js
deleted file mode 100644
index 6aed412..0000000
--- a/apolloschurchapp/storybook/addons.js
+++ /dev/null
@@ -1,2 +0,0 @@
-import '@storybook/addon-actions/register';
-import '@storybook/addon-links/register';
diff --git a/apolloschurchapp/storybook/index.android.js b/apolloschurchapp/storybook/index.android.js
deleted file mode 100644
index f0513c5..0000000
--- a/apolloschurchapp/storybook/index.android.js
+++ /dev/null
@@ -1,3 +0,0 @@
-import StorybookUI from './storybook';
-
-export default StorybookUI;
diff --git a/apolloschurchapp/storybook/index.ios.js b/apolloschurchapp/storybook/index.ios.js
deleted file mode 100644
index f0513c5..0000000
--- a/apolloschurchapp/storybook/index.ios.js
+++ /dev/null
@@ -1,3 +0,0 @@
-import StorybookUI from './storybook';
-
-export default StorybookUI;
diff --git a/apolloschurchapp/storybook/index.js b/apolloschurchapp/storybook/index.js
index f0513c5..bcb07cf 100644
--- a/apolloschurchapp/storybook/index.js
+++ b/apolloschurchapp/storybook/index.js
@@ -1,3 +1,21 @@
-import StorybookUI from './storybook';
+import StorybookUI, {
+  loadApollosStories,
+  addApollosProviderDecorator,
+  configure,
+} from '@apollosproject/ui-storybook';
+import SplashScreen from 'react-native-splash-screen';
+import Providers from '../src/Providers';
+
+import { loadStories } from './storyLoader';
+
+addApollosProviderDecorator(Providers);
+
+configure(() => {
+  require('./Welcome');
+  loadStories();
+  loadApollosStories();
+
+  SplashScreen.hide();
+}, module);
 
 export default StorybookUI;
diff --git a/apolloschurchapp/storybook/storybook.js b/apolloschurchapp/storybook/storybook.js
deleted file mode 100644
index 19be073..0000000
--- a/apolloschurchapp/storybook/storybook.js
+++ /dev/null
@@ -1,35 +0,0 @@
-import React, { Component } from 'react';
-import { AppRegistry } from 'react-native';
-import {
-  getStorybookUI,
-  configure,
-  addDecorator,
-} from '@storybook/react-native';
-
-import Providers from 'apolloschurchapp/src/Providers';
-
-// storyLoader.js is generated on storybook start. next line disabled for CI test.
-import { loadStories } from './storyLoader'; // eslint-disable-line
-
-addDecorator((renderStorybook) => <Providers>{renderStorybook()}</Providers>);
-
-// import stories
-configure(() => {
-  loadStories();
-}, module);
-
-// This assumes that storybook is running on the same host as your RN packager,
-// to set manually use, e.g. host: 'localhost' option
-const StorybookUIRoot = getStorybookUI({ port: 7007, onDeviceUI: true });
-
-// react-native hot module loader must take in a Class - https://github.com/facebook/react-native/issues/10991
-// https://github.com/storybooks/storybook/issues/2081
-// eslint-disable-next-line react/prefer-stateless-function
-class StorybookUIHMRRoot extends Component {
-  render() {
-    return <StorybookUIRoot />;
-  }
-}
-
-AppRegistry.registerComponent('apolloschurchapp', () => StorybookUIHMRRoot);
-export default StorybookUIHMRRoot;
