diff --git a/apolloschurchapp/.env.dev.storybook b/apolloschurchapp/.env.dev.storybook
deleted file mode 100644
index 3ef3926..0000000
--- a/apolloschurchapp/.env.dev.storybook
+++ /dev/null
@@ -1,2 +0,0 @@
-# This file inherits values from .env
-STORYBOOK=true
\ No newline at end of file
diff --git a/apolloschurchapp/.env.production b/apolloschurchapp/.env.production
index 60ab693..435f922 100644
--- a/apolloschurchapp/.env.production
+++ b/apolloschurchapp/.env.production
@@ -1,5 +1,4 @@
 APP_DATA_URL=https://apollos-church-api-herokuapp-com.global.ssl.fastly.net/
 ONE_SIGNAL_KEY=$ONE_SIGNAL_KEY
 GOOGLE_MAPS_API_KEY=$GOOGLE_MAPS_API_KEY
-STORYBOOK=$STORYBOOK
 ANDROID_URL=doesnotmatter
diff --git a/apolloschurchapp/android/app/build.gradle b/apolloschurchapp/android/app/build.gradle
index 3154a54..1581d1b 100644
--- a/apolloschurchapp/android/app/build.gradle
+++ b/apolloschurchapp/android/app/build.gradle
@@ -117,8 +117,8 @@ android {
         applicationId "com.apolloschurch.app"
         minSdkVersion rootProject.ext.minSdkVersion
         targetSdkVersion rootProject.ext.targetSdkVersion
-        versionCode 10
-        versionName "0.8.5"
+        versionCode 7
+        versionName "0.8.2"
         ndk {
             abiFilters "armeabi-v7a", "x86"
         }
@@ -151,19 +151,10 @@ android {
             }
         }
     }
-    compileOptions {
-        targetCompatibility JavaVersion.VERSION_1_8
-    }
 }
 
 dependencies {
-       // added this and the two google play packages below when upgraded rn-maps to 0.24.2
-    implementation(project(':react-native-maps')){
-      exclude group: 'com.google.android.gms', module: 'play-services-base'
-      exclude group: 'com.google.android.gms', module: 'play-services-maps'
-    }
-    implementation 'com.google.android.gms:play-services-base:10.0.1'
-    implementation 'com.google.android.gms:play-services-maps:10.0.1'
+    implementation project(':react-native-maps')
     implementation project(':rn-fetch-blob')
     implementation project(':react-native-webview')
     implementation project(':react-native-video')
@@ -175,6 +166,7 @@ dependencies {
     implementation project(':react-native-linear-gradient')
     implementation project(':react-native-image-picker')
     implementation project(':react-native-device-info')
+    implementation project(':react-native-custom-tabs')
     implementation project(':react-native-config')
     implementation fileTree(dir: "libs", include: ["*.jar"])
     implementation "com.android.support:appcompat-v7:${rootProject.ext.supportLibVersion}"
diff --git a/apolloschurchapp/android/app/src/main/java/com/apolloschurchapp/MainApplication.java b/apolloschurchapp/android/app/src/main/java/com/apolloschurchapp/MainApplication.java
index aa318e0..2555f80 100644
--- a/apolloschurchapp/android/app/src/main/java/com/apolloschurchapp/MainApplication.java
+++ b/apolloschurchapp/android/app/src/main/java/com/apolloschurchapp/MainApplication.java
@@ -9,12 +9,13 @@ import com.reactnativecommunity.webview.RNCWebViewPackage;
 import com.brentvatne.react.ReactVideoPackage;
 import com.horcrux.svg.SvgPackage;
 import org.devio.rn.splashscreen.SplashScreenReactPackage;
-import com.swmansion.rnscreens.RNScreensPackage;
+import com.swmansion.rnscreens.RNScreenPackage;
 import com.geektime.rnonesignalandroid.ReactNativeOneSignalPackage;
 import com.tanguyantoine.react.MusicControl;
 import com.BV.LinearGradient.LinearGradientPackage;
 import com.imagepicker.ImagePickerPackage;
 import com.learnium.RNDeviceInfo.RNDeviceInfo;
+import com.github.droibit.android.reactnative.customtabs.CustomTabsPackage;
 import com.lugg.ReactNativeConfig.ReactNativeConfigPackage;
 import com.facebook.react.ReactNativeHost;
 import com.facebook.react.ReactPackage;
@@ -42,12 +43,13 @@ public class MainApplication extends Application implements ReactApplication {
             new ReactVideoPackage(),
             new SvgPackage(),
             new SplashScreenReactPackage(),
-            new RNScreensPackage(),
+            new RNScreenPackage(),
             new ReactNativeOneSignalPackage(),
             new MusicControl(),
             new LinearGradientPackage(),
             new ImagePickerPackage(),
             new RNDeviceInfo(),
+            new CustomTabsPackage(),
             new ReactNativeConfigPackage()
       );
     }
diff --git a/apolloschurchapp/android/settings.gradle b/apolloschurchapp/android/settings.gradle
index d705770..d7961bd 100644
--- a/apolloschurchapp/android/settings.gradle
+++ b/apolloschurchapp/android/settings.gradle
@@ -1,6 +1,8 @@
 rootProject.name = 'apolloschurchapp'
 include ':react-native-maps'
 project(':react-native-maps').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-maps/lib/android')
+include ':react-native-maps'
+project(':react-native-maps').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-maps/lib/android')
 include ':rn-fetch-blob'
 project(':rn-fetch-blob').projectDir = new File(rootProject.projectDir, '../node_modules/rn-fetch-blob/android')
 include ':react-native-webview'
@@ -23,6 +25,8 @@ include ':react-native-image-picker'
 project(':react-native-image-picker').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-image-picker/android')
 include ':react-native-device-info'
 project(':react-native-device-info').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-device-info/android')
+include ':react-native-custom-tabs'
+project(':react-native-custom-tabs').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-custom-tabs/android')
 include ':react-native-config'
 project(':react-native-config').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-config/android')
 
diff --git a/apolloschurchapp/apollos.json b/apolloschurchapp/apollos.json
deleted file mode 100644
index 614d45e..0000000
--- a/apolloschurchapp/apollos.json
+++ /dev/null
@@ -1,4 +0,0 @@
-{
-    "version": "0.8.6",
-    "environment": "client"
-}
\ No newline at end of file
diff --git a/apolloschurchapp/appcenter-pre-build.sh b/apolloschurchapp/appcenter-pre-build.sh
index a9348f2..c666ab2 100644
--- a/apolloschurchapp/appcenter-pre-build.sh
+++ b/apolloschurchapp/appcenter-pre-build.sh
@@ -6,4 +6,3 @@ cp $droid_dir/gradle.properties.appcenter $droid_dir/gradle.properties
 
 cd ../../
 yarn
-yarn lerna run generate-stories
\ No newline at end of file
diff --git a/apolloschurchapp/index.js b/apolloschurchapp/index.js
index 6bfaa01..d009549 100644
--- a/apolloschurchapp/index.js
+++ b/apolloschurchapp/index.js
@@ -1,23 +1,6 @@
-import './polyfill'; // this can be removed when we upgrade to react-native 59
 import { AppRegistry, YellowBox } from 'react-native';
-import SplashScreen from 'react-native-splash-screen';
 
-import Config from 'react-native-config';
-import Storybook from './storybook';
-import MainApp from './src';
-
-const useStorybook = Config.STORYBOOK === 'true';
-
-let App = MainApp;
-if (useStorybook) {
-  App = Storybook;
-}
-
-// If there's an error before the splash screen goes away, you never see that error.
-// This tries to hide the splash screen so you can see the error.
-// Shouldnt't do anything in Prod.
-// Depending on the error, splash screen might not go away ;)
-global.ErrorUtils.setGlobalHandler(() => SplashScreen.hide());
+import App from './src';
 
 YellowBox.ignoreWarnings([
   'Warning: isMounted(...) is deprecated',
diff --git a/apolloschurchapp/ios/apolloschurchapp-tvOS/Info.plist b/apolloschurchapp/ios/apolloschurchapp-tvOS/Info.plist
index c24983e..e5afa57 100644
--- a/apolloschurchapp/ios/apolloschurchapp-tvOS/Info.plist
+++ b/apolloschurchapp/ios/apolloschurchapp-tvOS/Info.plist
@@ -15,11 +15,11 @@
 	<key>CFBundlePackageType</key>
 	<string>APPL</string>
 	<key>CFBundleShortVersionString</key>
-	<string>0.8.5</string>
+	<string>0.8.2</string>
 	<key>CFBundleSignature</key>
 	<string>????</string>
 	<key>CFBundleVersion</key>
-	<string>10</string>
+	<string>7</string>
 	<key>LSRequiresIPhoneOS</key>
 	<true />
 	<key>UILaunchStoryboardName</key>
diff --git a/apolloschurchapp/ios/apolloschurchapp-tvOSTests/Info.plist b/apolloschurchapp/ios/apolloschurchapp-tvOSTests/Info.plist
index d84e362..159f9b5 100644
--- a/apolloschurchapp/ios/apolloschurchapp-tvOSTests/Info.plist
+++ b/apolloschurchapp/ios/apolloschurchapp-tvOSTests/Info.plist
@@ -15,10 +15,10 @@
 	<key>CFBundlePackageType</key>
 	<string>BNDL</string>
 	<key>CFBundleShortVersionString</key>
-	<string>0.8.5</string>
+	<string>0.8.2</string>
 	<key>CFBundleSignature</key>
 	<string>????</string>
 	<key>CFBundleVersion</key>
-	<string>10</string>
+	<string>7</string>
 </dict>
 </plist>
diff --git a/apolloschurchapp/ios/apolloschurchapp.xcodeproj/project.pbxproj b/apolloschurchapp/ios/apolloschurchapp.xcodeproj/project.pbxproj
index 209fd52..dbbdb16 100644
--- a/apolloschurchapp/ios/apolloschurchapp.xcodeproj/project.pbxproj
+++ b/apolloschurchapp/ios/apolloschurchapp.xcodeproj/project.pbxproj
@@ -5,6 +5,7 @@
 	};
 	objectVersion = 46;
 	objects = {
+
 /* Begin PBXBuildFile section */
 		00C302E51ABCBA2D00DB3ED1 /* libRCTActionSheet.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 00C302AC1ABCB8CE00DB3ED1 /* libRCTActionSheet.a */; };
 		00C302E71ABCBA2D00DB3ED1 /* libRCTGeolocation.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 00C302BA1ABCB90400DB3ED1 /* libRCTGeolocation.a */; };
@@ -40,6 +41,7 @@
 		2D16E6881FA4F8E400B85C8A /* libReact.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 2D16E6891FA4F8E400B85C8A /* libReact.a */; };
 		2DCD954D1E0B4F2C00145EB5 /* apolloschurchappTests.m in Sources */ = {isa = PBXBuildFile; fileRef = 00E356F21AD99517003FC87E /* apolloschurchappTests.m */; };
 		2DF0FFEE2056DD460020B375 /* libReact.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 3DAD3EA31DF850E9000B6D8A /* libReact.a */; };
+		470A7E49F0A8424780FFAE7B /* libDBCustomTabs.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 9DA3750D49B0422F9A4B45BE /* libDBCustomTabs.a */; };
 		4994C0DA2471456ABE1D0174 /* libRNAirplay.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 0BE434FF7E9549F392208DEF /* libRNAirplay.a */; };
 		4C19EE32F0B441CD93BB0172 /* libRCTOneSignal.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 0D480D95FC7F4569B8B934E3 /* libRCTOneSignal.a */; };
 		578FFEC1D7D54C9B871A9E5B /* Inter-UI-BlackItalic.otf in Resources */ = {isa = PBXBuildFile; fileRef = 5A5A2BC2998547F4816B82E4 /* Inter-UI-BlackItalic.otf */; };
@@ -354,6 +356,13 @@
 			remoteGlobalIDString = 3DF7F6AC203AA09B00D0EAB7;
 			remoteInfo = "ReactNativeConfig-tvOS";
 		};
+		79CEBFEF223011FE00D8F685 /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 6F1D5B192D1D4948B39D4BFE /* ReactNativeCustomTabs.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = DA7118681CC9158A0087DF95;
+			remoteInfo = DBCustomTabs;
+		};
 		79CEBFF2223011FE00D8F685 /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
 			containerPortal = 3923D6EFF26D4A53B8BDF8C6 /* RNAirplay.xcodeproj */;
@@ -554,12 +563,14 @@
 		63998175DB3B4506ACF27B92 /* ReactNativeConfig.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = ReactNativeConfig.xcodeproj; path = "../node_modules/react-native-config/ios/ReactNativeConfig.xcodeproj"; sourceTree = "<group>"; };
 		63F6EE53A9B44B4388B5F1C2 /* Inter-UI-Italic.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-Italic.otf"; path = "../assets/fonts/Inter-UI-Italic.otf"; sourceTree = "<group>"; };
 		67356E00D116467DA58DF3CC /* libRNSVG-tvOS.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = "libRNSVG-tvOS.a"; sourceTree = "<group>"; };
+		6F1D5B192D1D4948B39D4BFE /* ReactNativeCustomTabs.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = ReactNativeCustomTabs.xcodeproj; path = "../node_modules/react-native-custom-tabs/ios/ReactNativeCustomTabs.xcodeproj"; sourceTree = "<group>"; };
 		74625A1E54234FB7BE12070D /* libMusicControl-tvOS.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = "libMusicControl-tvOS.a"; sourceTree = "<group>"; };
 		78C398B01ACF4ADC00677621 /* RCTLinking.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = RCTLinking.xcodeproj; path = "../node_modules/react-native/Libraries/LinkingIOS/RCTLinking.xcodeproj"; sourceTree = "<group>"; };
 		7A505BEDA0674A7F9DD875ED /* libRNDeviceInfo-tvOS.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = "libRNDeviceInfo-tvOS.a"; sourceTree = "<group>"; };
 		832341B01AAA6A8300B99B32 /* RCTText.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = RCTText.xcodeproj; path = "../node_modules/react-native/Libraries/Text/RCTText.xcodeproj"; sourceTree = "<group>"; };
 		97222E2EB5E54C7FA6104218 /* libReactNativeConfig-tvOS.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = "libReactNativeConfig-tvOS.a"; sourceTree = "<group>"; };
 		9862436C289A498D8B2E6201 /* libAirMaps.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libAirMaps.a; sourceTree = "<group>"; };
+		9DA3750D49B0422F9A4B45BE /* libDBCustomTabs.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libDBCustomTabs.a; sourceTree = "<group>"; };
 		9F0EC3F23A3F4FFBBBC6583A /* libBVLinearGradient.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libBVLinearGradient.a; sourceTree = "<group>"; };
 		A44246D0E44E48C4B8335DBD /* libRNScreens.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libRNScreens.a; sourceTree = "<group>"; };
 		A460FD7884FD4574A818005A /* Inter-UI-MediumItalic.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-MediumItalic.otf"; path = "../assets/fonts/Inter-UI-MediumItalic.otf"; sourceTree = "<group>"; };
@@ -610,6 +621,7 @@
 				139FDEF61B0652A700C62182 /* libRCTWebSocket.a in Frameworks */,
 				4994C0DA2471456ABE1D0174 /* libRNAirplay.a in Frameworks */,
 				A975E0B94A5D44AEB410E546 /* libReactNativeConfig.a in Frameworks */,
+				470A7E49F0A8424780FFAE7B /* libDBCustomTabs.a in Frameworks */,
 				CFE4716D4F6D4ABF9ED485AC /* libRNDeviceInfo.a in Frameworks */,
 				62BCE95D7F6B4F37B3CB4265 /* libRNImagePicker.a in Frameworks */,
 				1E6618B697C649BB9FCD362E /* libBVLinearGradient.a in Frameworks */,
@@ -900,6 +912,14 @@
 			name = Products;
 			sourceTree = "<group>";
 		};
+		79CEBFD1223011FE00D8F685 /* Products */ = {
+			isa = PBXGroup;
+			children = (
+				79CEBFF0223011FE00D8F685 /* libDBCustomTabs.a */,
+			);
+			name = Products;
+			sourceTree = "<group>";
+		};
 		79CEBFD3223011FE00D8F685 /* Products */ = {
 			isa = PBXGroup;
 			children = (
@@ -984,6 +1004,7 @@
 				139FDEE61B06529A00C62182 /* RCTWebSocket.xcodeproj */,
 				3923D6EFF26D4A53B8BDF8C6 /* RNAirplay.xcodeproj */,
 				63998175DB3B4506ACF27B92 /* ReactNativeConfig.xcodeproj */,
+				6F1D5B192D1D4948B39D4BFE /* ReactNativeCustomTabs.xcodeproj */,
 				39E16D6487A34F4D9B8C6EC1 /* RNDeviceInfo.xcodeproj */,
 				629FCAAD128E41B4BAE2BCF4 /* RNImagePicker.xcodeproj */,
 				43F1D28CACD04757A0FB29A6 /* BVLinearGradient.xcodeproj */,
@@ -1251,6 +1272,10 @@
 					ProductGroup = 79CEBFCF223011FE00D8F685 /* Products */;
 					ProjectRef = 63998175DB3B4506ACF27B92 /* ReactNativeConfig.xcodeproj */;
 				},
+				{
+					ProductGroup = 79CEBFD1223011FE00D8F685 /* Products */;
+					ProjectRef = 6F1D5B192D1D4948B39D4BFE /* ReactNativeCustomTabs.xcodeproj */;
+				},
 				{
 					ProductGroup = 79CEBFCD223011FE00D8F685 /* Products */;
 					ProjectRef = 3923D6EFF26D4A53B8BDF8C6 /* RNAirplay.xcodeproj */;
@@ -1569,6 +1594,13 @@
 			remoteRef = 79CEBFEC223011FE00D8F685 /* PBXContainerItemProxy */;
 			sourceTree = BUILT_PRODUCTS_DIR;
 		};
+		79CEBFF0223011FE00D8F685 /* libDBCustomTabs.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libDBCustomTabs.a;
+			remoteRef = 79CEBFEF223011FE00D8F685 /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
 		79CEBFF3223011FE00D8F685 /* libRNAirplay.a */ = {
 			isa = PBXReferenceProxy;
 			fileType = archive.ar;
@@ -1870,6 +1902,7 @@
 					"$(inherited)",
 					"$(SRCROOT)/../node_modules/react-native-airplay-btn/ios",
 					"$(SRCROOT)/../node_modules/react-native-config/ios/ReactNativeConfig",
+					"$(SRCROOT)/../node_modules/react-native-custom-tabs/ios/ReactNativeCustomTabs",
 					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
 					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
 					"$(SRCROOT)/../node_modules/react-native-linear-gradient/BVLinearGradient",
@@ -1890,6 +1923,7 @@
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @loader_path/Frameworks";
 				LIBRARY_SEARCH_PATHS = (
 					"$(inherited)",
+					"\"$(SRCROOT)/$(TARGET_NAME)\"",
 				);
 				OTHER_LDFLAGS = (
 					"-ObjC",
@@ -1910,6 +1944,7 @@
 					"$(inherited)",
 					"$(SRCROOT)/../node_modules/react-native-airplay-btn/ios",
 					"$(SRCROOT)/../node_modules/react-native-config/ios/ReactNativeConfig",
+					"$(SRCROOT)/../node_modules/react-native-custom-tabs/ios/ReactNativeCustomTabs",
 					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
 					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
 					"$(SRCROOT)/../node_modules/react-native-linear-gradient/BVLinearGradient",
@@ -1930,6 +1965,7 @@
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @loader_path/Frameworks";
 				LIBRARY_SEARCH_PATHS = (
 					"$(inherited)",
+					"\"$(SRCROOT)/$(TARGET_NAME)\"",
 				);
 				OTHER_LDFLAGS = (
 					"-ObjC",
@@ -1945,13 +1981,14 @@
 			isa = XCBuildConfiguration;
 			buildSettings = {
 				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
-				CURRENT_PROJECT_VERSION = 6;
+				CURRENT_PROJECT_VERSION = 3;
 				DEAD_CODE_STRIPPING = NO;
 				DEVELOPMENT_TEAM = 7TM8C6252Z;
 				HEADER_SEARCH_PATHS = (
 					"$(inherited)",
 					"$(SRCROOT)/../node_modules/react-native-airplay-btn/ios",
 					"$(SRCROOT)/../node_modules/react-native-config/ios/ReactNativeConfig",
+					"$(SRCROOT)/../node_modules/react-native-custom-tabs/ios/ReactNativeCustomTabs",
 					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
 					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
 					"$(SRCROOT)/../node_modules/react-native-linear-gradient/BVLinearGradient",
@@ -1985,11 +2022,12 @@
 			isa = XCBuildConfiguration;
 			buildSettings = {
 				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
-				CURRENT_PROJECT_VERSION = 6;
+				CURRENT_PROJECT_VERSION = 3;
 				HEADER_SEARCH_PATHS = (
 					"$(inherited)",
 					"$(SRCROOT)/../node_modules/react-native-airplay-btn/ios",
 					"$(SRCROOT)/../node_modules/react-native-config/ios/ReactNativeConfig",
+					"$(SRCROOT)/../node_modules/react-native-custom-tabs/ios/ReactNativeCustomTabs",
 					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
 					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
 					"$(SRCROOT)/../node_modules/react-native-linear-gradient/BVLinearGradient",
@@ -2035,6 +2073,7 @@
 					"$(inherited)",
 					"$(SRCROOT)/../node_modules/react-native-airplay-btn/ios",
 					"$(SRCROOT)/../node_modules/react-native-config/ios/ReactNativeConfig",
+					"$(SRCROOT)/../node_modules/react-native-custom-tabs/ios/ReactNativeCustomTabs",
 					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
 					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
 					"$(SRCROOT)/../node_modules/react-native-linear-gradient/BVLinearGradient",
@@ -2054,6 +2093,7 @@
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
 				LIBRARY_SEARCH_PATHS = (
 					"$(inherited)",
+					"\"$(SRCROOT)/$(TARGET_NAME)\"",
 				);
 				OTHER_LDFLAGS = (
 					"-ObjC",
@@ -2083,6 +2123,7 @@
 					"$(inherited)",
 					"$(SRCROOT)/../node_modules/react-native-airplay-btn/ios",
 					"$(SRCROOT)/../node_modules/react-native-config/ios/ReactNativeConfig",
+					"$(SRCROOT)/../node_modules/react-native-custom-tabs/ios/ReactNativeCustomTabs",
 					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
 					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
 					"$(SRCROOT)/../node_modules/react-native-linear-gradient/BVLinearGradient",
@@ -2102,6 +2143,7 @@
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
 				LIBRARY_SEARCH_PATHS = (
 					"$(inherited)",
+					"\"$(SRCROOT)/$(TARGET_NAME)\"",
 				);
 				OTHER_LDFLAGS = (
 					"-ObjC",
@@ -2130,6 +2172,7 @@
 					"$(inherited)",
 					"$(SRCROOT)/../node_modules/react-native-airplay-btn/ios",
 					"$(SRCROOT)/../node_modules/react-native-config/ios/ReactNativeConfig",
+					"$(SRCROOT)/../node_modules/react-native-custom-tabs/ios/ReactNativeCustomTabs",
 					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
 					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
 					"$(SRCROOT)/../node_modules/react-native-linear-gradient/BVLinearGradient",
@@ -2149,6 +2192,7 @@
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @loader_path/Frameworks";
 				LIBRARY_SEARCH_PATHS = (
 					"$(inherited)",
+					"\"$(SRCROOT)/$(TARGET_NAME)\"",
 				);
 				OTHER_LDFLAGS = (
 					"-ObjC",
@@ -2177,6 +2221,7 @@
 					"$(inherited)",
 					"$(SRCROOT)/../node_modules/react-native-airplay-btn/ios",
 					"$(SRCROOT)/../node_modules/react-native-config/ios/ReactNativeConfig",
+					"$(SRCROOT)/../node_modules/react-native-custom-tabs/ios/ReactNativeCustomTabs",
 					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
 					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
 					"$(SRCROOT)/../node_modules/react-native-linear-gradient/BVLinearGradient",
@@ -2196,6 +2241,7 @@
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @loader_path/Frameworks";
 				LIBRARY_SEARCH_PATHS = (
 					"$(inherited)",
+					"\"$(SRCROOT)/$(TARGET_NAME)\"",
 				);
 				OTHER_LDFLAGS = (
 					"-ObjC",
diff --git a/apolloschurchapp/ios/apolloschurchapp/Info.plist b/apolloschurchapp/ios/apolloschurchapp/Info.plist
index 44d7b82..dc4f505 100644
--- a/apolloschurchapp/ios/apolloschurchapp/Info.plist
+++ b/apolloschurchapp/ios/apolloschurchapp/Info.plist
@@ -17,7 +17,7 @@
 	<key>CFBundlePackageType</key>
 	<string>APPL</string>
 	<key>CFBundleShortVersionString</key>
-	<string>0.8.5</string>
+	<string>0.8.2</string>
 	<key>CFBundleSignature</key>
 	<string>????</string>
 	<key>CFBundleURLTypes</key>
@@ -30,33 +30,33 @@
 		</dict>
 	</array>
 	<key>CFBundleVersion</key>
-	<string>11</string>
+	<string>8</string>
 	<key>ITSAppUsesNonExemptEncryption</key>
-	<false />
+	<false/>
 	<key>LSRequiresIPhoneOS</key>
-	<true />
+	<true/>
 	<key>NSAppTransportSecurity</key>
 	<dict>
 		<key>NSAllowsArbitraryLoads</key>
-		<true />
+		<true/>
 		<key>NSExceptionDomains</key>
 		<dict>
 			<key>embed.wistia.com</key>
 			<dict>
 				<key>NSExceptionAllowsInsecureHTTPLoads</key>
-				<true />
+				<true/>
 			</dict>
 			<key>localhost</key>
 			<dict>
 				<key>NSExceptionAllowsInsecureHTTPLoads</key>
-				<true />
+				<true/>
 			</dict>
 		</dict>
 	</dict>
 	<key>NSCameraUsageDescription</key>
 	<string>$(PRODUCT_NAME) would like to use your camera (for uploading profile pictures)</string>
 	<key>NSLocationWhenInUseUsageDescription</key>
-	<string />
+	<string></string>
 	<key>NSMicrophoneUsageDescription</key>
 	<string>$(PRODUCT_NAME) would like to your microphone (for videos)</string>
 	<key>NSPhotoLibraryAddUsageDescription</key>
@@ -93,6 +93,6 @@
 		<string>UIInterfaceOrientationLandscapeRight</string>
 	</array>
 	<key>UIViewControllerBasedStatusBarAppearance</key>
-	<false />
+	<false/>
 </dict>
 </plist>
diff --git a/apolloschurchapp/ios/apolloschurchappTests/Info.plist b/apolloschurchapp/ios/apolloschurchappTests/Info.plist
index b4de62d..309f16c 100644
--- a/apolloschurchapp/ios/apolloschurchappTests/Info.plist
+++ b/apolloschurchapp/ios/apolloschurchappTests/Info.plist
@@ -15,10 +15,10 @@
 	<key>CFBundlePackageType</key>
 	<string>BNDL</string>
 	<key>CFBundleShortVersionString</key>
-	<string>0.8.5</string>
+	<string>0.8.2</string>
 	<key>CFBundleSignature</key>
 	<string>????</string>
 	<key>CFBundleVersion</key>
-	<string>10</string>
+	<string>7</string>
 </dict>
 </plist>
diff --git a/apolloschurchapp/jest.setup.js b/apolloschurchapp/jest.setup.js
index fcdc84a..d23ceca 100644
--- a/apolloschurchapp/jest.setup.js
+++ b/apolloschurchapp/jest.setup.js
@@ -1,15 +1,11 @@
-// We ran into an issue where SafeAreaView would break jest tests.
-jest.mock('react-navigation', () => {
-  const ActualNavigation = require.requireActual('react-navigation');
-  return {
-    ...ActualNavigation,
-    SafeAreaView: require.requireActual('SafeAreaView'),
-  };
-});
-
 jest.mock('react-native-config', () => ({
   ONE_SIGNAL_KEY: 'doesntmatter',
 }));
+jest.mock('react-native-custom-tabs', () => ({
+  CustomTabs: {
+    openURL: jest.fn(),
+  },
+}));
 jest.mock('Animated', () => {
   const ActualAnimated = require.requireActual('Animated');
   return {
diff --git a/apolloschurchapp/package.json b/apolloschurchapp/package.json
index 2c11343..2e36400 100644
--- a/apolloschurchapp/package.json
+++ b/apolloschurchapp/package.json
@@ -1,8 +1,12 @@
 {
   "name": "apolloschurchapp",
-  "version": "0.8.6",
+  "version": "0.8.3",
   "private": true,
   "devDependencies": {
+    "@storybook/addon-actions": "4.1.16",
+    "@storybook/addon-links": "4.1.16",
+    "@storybook/addons": "4.1.16",
+    "@storybook/react-native": "4.1.1",
     "codecov": "3.0.2",
     "get-dev-paths": "^0.1.0",
     "jest": "23.6.0",
@@ -26,15 +30,11 @@
     "codecov": "cat ./coverage/lcov.info | codecov",
     "fixlint": "eslint ./src --fix",
     "ios": "react-native run-ios --simulator=\"iPhone X\"",
-    "storybook:enable": "sed -i '' 's/STORYBOOK=false/STORYBOOK=true/g' .env",
-    "storybook:disable": "sed -i '' 's/STORYBOOK=true/STORYBOOK=false/g' .env",
-    "build-storybook-env": "cat .env .env.dev.storybook > .env.storybook",
-    "generate-stories": "rnstl --searchDir ./src --pattern **/*.stories.js",
     "lint": "eslint ./src --ext .js",
-    "version": "node ../../scripts/update-apollos-version.js && git add apollos.json",
     "postversion": "react-native-version --never-amend --android android/app/build.gradle --ios ios/",
-    "prestart": "lerna run generate-stories & node ./scripts/get-introspection-data.js",
+    "prestart": "node ./scripts/get-introspection-data.js",
     "start": "react-native start",
+    "storybook": "rnstl --searchDir ../ --pattern \"apollos*/src/**/*.stories.js\" && storybook start -p 7007  | react-native start --projectRoot $PWD/storybook",
     "test": "jest",
     "release": "standard-version --release-as minor"
   },
@@ -61,12 +61,10 @@
     ]
   },
   "dependencies": {
-    "@apollosproject/ui-analytics": "^0.8.6",
-    "@apollosproject/ui-auth": "^0.8.6",
-    "@apollosproject/ui-htmlview": "^0.8.6",
-    "@apollosproject/ui-kit": "^0.8.6",
-    "@apollosproject/ui-passes": "^0.8.6",
-    "@apollosproject/ui-storybook": "^0.8.6",
+    "@apollosproject/ui-analytics": "^0.8.3",
+    "@apollosproject/ui-auth": "^0.8.3",
+    "@apollosproject/ui-kit": "^0.8.3",
+    "@apollosproject/ui-passes": "^0.8.3",
     "apollo-cache-inmemory": "1.5.1",
     "apollo-cache-persist": "0.1.1",
     "apollo-client": "2.5.1",
@@ -93,27 +91,29 @@
     "prettier": "1.14.2",
     "querystring": "^0.2.0",
     "react": "16.6.3",
-    "react-apollo": "2.5.5",
+    "react-apollo": "2.5.1",
     "react-native": "0.58.5",
     "react-native-airplay-btn": "^1.0.6",
     "react-native-config": "^0.11.7",
+    "react-native-custom-tabs": "0.1.7",
     "react-native-device-info": "0.22.5",
-    "react-native-image-picker": "0.28.0",
+    "react-native-image-picker": "0.26.10",
     "react-native-keyboard-aware-scroll-view": "0.7.0",
     "react-native-linear-gradient": "2.5.3",
-    "react-native-maps": "^0.24.2",
-    "react-native-music-control": "^0.10.2",
+    "react-native-maps": "^0.23.0",
+    "react-native-music-control": "0.7.3",
     "react-native-onesignal": "3.2.7",
     "react-native-passkit-wallet": "^0.1.4",
     "react-native-safari-view": "2.1.0",
     "react-native-safe-area-view": "0.13.1",
-    "react-native-screens": "^1.0.0-alpha.22",
+    "react-native-screens": "1.0.0-alpha.12",
     "react-native-splash-screen": "^3.1.1",
     "react-native-svg": "9.2.4",
-    "react-native-video": "^4.4.1",
+    "react-native-swiper": "^1.5.14",
+    "react-native-video": "3.2.0",
     "react-native-video-controls": "2.2.3",
     "react-native-webview": "^5.2.0",
-    "react-navigation": "2.14.0",
+    "react-navigation": "2.11.2",
     "react-navigation-tabs": "0.6.0",
     "recompose": "^0.30.0",
     "rn-fetch-blob": "^0.10.15",
diff --git a/apolloschurchapp/polyfill.js b/apolloschurchapp/polyfill.js
deleted file mode 100644
index e2e1ede..0000000
--- a/apolloschurchapp/polyfill.js
+++ /dev/null
@@ -1,10 +0,0 @@
-// this can be removed when we upgrade to react-native 59
-
-// symbol polyfills
-global.Symbol = require('core-js/es6/symbol');
-require('core-js/fn/symbol/iterator');
-
-// collection fn polyfills
-require('core-js/fn/map');
-require('core-js/fn/set');
-require('core-js/fn/array/find');
diff --git a/apolloschurchapp/rn-cli.config.js b/apolloschurchapp/rn-cli.config.js
index 4d8de40..a604ef0 100644
--- a/apolloschurchapp/rn-cli.config.js
+++ b/apolloschurchapp/rn-cli.config.js
@@ -7,8 +7,6 @@ const localDeps = [
   path.resolve('..', 'apollos-ui-auth'),
   path.resolve('..', 'apollos-ui-htmlview'),
   path.resolve('..', 'apollos-ui-analytics'),
-  path.resolve('..', 'apollos-ui-storybook'),
-  path.resolve('..', 'apollos-ui-onboarding'),
 ];
 
 module.exports = {
diff --git a/apolloschurchapp/src/LandingScreen.js b/apolloschurchapp/src/LandingScreen.js
deleted file mode 100644
index 52dde4b..0000000
--- a/apolloschurchapp/src/LandingScreen.js
+++ /dev/null
@@ -1,33 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-import { styled, GradientOverlayImage } from '@apollosproject/ui-kit';
-
-import ApollosLandingScreen from './ui/LandingScreen';
-
-const FullScreenImage = styled({
-  resizeMode: 'cover',
-  position: 'absolute',
-})(GradientOverlayImage);
-
-const LandingScreen = ({ navigation }) => (
-  <ApollosLandingScreen
-    onPressPrimary={() => navigation.push('Auth')}
-    textColor={'white'}
-    BackgroundComponent={
-      <FullScreenImage source={'https://picsum.photos/375/812/?random'} />
-    }
-    primaryNavText={"Let's go!"}
-  />
-);
-
-LandingScreen.navigationOptions = {
-  header: null,
-};
-
-LandingScreen.propTypes = {
-  navigation: PropTypes.shape({
-    push: PropTypes.func,
-  }),
-};
-
-export default LandingScreen;
diff --git a/apolloschurchapp/src/client/index.js b/apolloschurchapp/src/client/index.js
index c473190..4a13cb8 100644
--- a/apolloschurchapp/src/client/index.js
+++ b/apolloschurchapp/src/client/index.js
@@ -3,6 +3,7 @@ import PropTypes from 'prop-types';
 import { ApolloProvider } from 'react-apollo';
 import { ApolloClient } from 'apollo-client';
 import { ApolloLink } from 'apollo-link';
+import SplashScreen from 'react-native-splash-screen';
 
 import { authLink } from '@apollosproject/ui-auth';
 import { resolvers, schema, defaults } from '../store';
@@ -41,6 +42,7 @@ class ClientProvider extends PureComponent {
     } catch (e) {
       throw e;
     } finally {
+      if (SplashScreen && SplashScreen.hide) SplashScreen.hide();
       client.mutate({ mutation: MARK_CACHE_LOADED });
     }
   }
diff --git a/apolloschurchapp/src/content-single/DevotionalContentItem/Devotional.stories.js b/apolloschurchapp/src/content-single/DevotionalContentItem/Devotional.stories.js
index 8bf3ffd..109a669 100644
--- a/apolloschurchapp/src/content-single/DevotionalContentItem/Devotional.stories.js
+++ b/apolloschurchapp/src/content-single/DevotionalContentItem/Devotional.stories.js
@@ -1,62 +1,60 @@
-// TODO: fix story
-
-// import React from 'react';
-// import { storiesOf } from '@apollosproject/ui-storybook';
-
-// import Devotional from '.';
-
-// const scripture = [
-//   {
-//     id: '1CO.15.57',
-//     reference: '1 Corinthians 15:57',
-//     html:
-//       '<p class="p"><span data-number="57" class="v">57</span>But thanks be to God, who gives us the victory through our Lord Jesus Christ. </p>',
-//   },
-//   {
-//     id: 'EXO.17.8-EXO.17.15',
-//     reference: 'Exodus 17:8-15',
-//     html:
-//       '<p class="p"><span data-number="8" class="v">8</span>Then Amalek came and fought with Israel in Rephidim. <span data-number="9" class="v">9</span>Moses said to Joshua, “Choose men for us, and go out to fight with Amalek. Tomorrow I will stand on the top of the hill with God’s rod in my hand.” <span data-number="10" class="v">10</span>So Joshua did as Moses had told him, and fought with Amalek; and Moses, Aaron, and Hur went up to the top of the hill. <span data-number="11" class="v">11</span>When Moses held up his hand, Israel prevailed. When he let down his hand, Amalek prevailed. <span data-number="12" class="v">12</span>But Moses’ hands were heavy; so they took a stone, and put it under him, and he sat on it. Aaron and Hur held up his hands, the one on the one side, and the other on the other side. His hands were steady until sunset. <span data-number="13" class="v">13</span>Joshua defeated Amalek and his people with the edge of the sword. <span data-number="14" class="v">14</span>Yahweh said to Moses, “Write this for a memorial in a book, and rehearse it in the ears of Joshua: that I will utterly blot out the memory of Amalek from under the sky.” <span data-number="15" class="v">15</span>Moses built an altar, and called its name “Yahweh our Banner”.</p>',
-//   },
-// ];
-
-// const content = {
-//   body:
-//     '<p>Sometimes God&rsquo;s promises to us involve a fight. We have to fight to keep our focus on Him, fight to move towards the promise we know God has laid on our hearts. We have a real enemy that would love nothing more than to get us sidetracked and doubt God&rsquo;s promises. So we fight saying that we are going to believe God will do what He says He will do, and we keep fighting until we see that promise come to life.</p><p>In Exodus 17:8-15 the nation of Israel, freed from great oppression in Egypt was traveling to the land God promised them. Yet, Israel was fighting, again.&nbsp;<br />&nbsp;<br />As the Israelites were fighting in the valley,&nbsp;Moses was on the hill top lifting his hands in prayer for these great fighters. Israel fought hard, and with the prayers of Moses and the help of his companions, Aaron and Hur, the Amalekites were defeated. Moses knew that it was solely because of the Lord&rsquo;s hand of protection and blessing on the Israelites that they won the battle. &ldquo;Moses built an altar and called it The Lord is my banner&rdquo; (Exodus 17:15).</p><p>In battle opposing nations would fly their own flag on a pole at each of their respective front lines. This was to give their soldiers a feeling of hope and a focal point. This is what God is to us: a banner of encouragement to give us hope and a focal point.</p><blockquote><p>The Lord protects us, covers us with love, and&nbsp;blesses us continually.</p></blockquote><p>The Lord is our banner. He protects us; He covers us with love; He blesses us continually. The Lord gives us hope and a place to focus during the tough fights when the enemy is trying to make us doubt God&rsquo;s promises.&nbsp;</p><p>When was the last time you sat and thanked Jesus for all the ways he is a banner in your life?&nbsp;</p><p>Reflect:</p><ul><li>What is one way the Lord has been your banner?</li><li>How can you focus more today on the Lord and all the things He does for you throughout the day?</li></ul>',
-//   route: { jumpTo: () => {} },
-//   title: 'God is Our Banner',
-// };
-
-// const renderItem = () => {};
-
-// const loadingStateObject = {
-//   node: {
-//     id: 'fakeId0',
-//     title: '',
-//     isLoading: true,
-//   },
-// };
-
-// const stories = storiesOf('Devotional', module);
-
-// stories.add('Example', () => (
-//   <Devotional
-//     body={content.body}
-//     title={content.title}
-//     isLoading={false}
-//     scripture={scripture}
-//     renderItem={renderItem}
-//     loadingStateObject={loadingStateObject}
-//   />
-// ));
-
-// stories.add('isLoading', () => (
-//   <Devotional
-//     body={content.body}
-//     title={content.title}
-//     isLoading
-//     scripture={scripture}
-//     renderItem={renderItem}
-//     loadingStateObject={loadingStateObject}
-//   />
-// ));
+import React from 'react';
+import { storiesOf } from '@storybook/react-native';
+
+import Devotional from '.';
+
+const scripture = [
+  {
+    id: '1CO.15.57',
+    reference: '1 Corinthians 15:57',
+    html:
+      '<p class="p"><span data-number="57" class="v">57</span>But thanks be to God, who gives us the victory through our Lord Jesus Christ. </p>',
+  },
+  {
+    id: 'EXO.17.8-EXO.17.15',
+    reference: 'Exodus 17:8-15',
+    html:
+      '<p class="p"><span data-number="8" class="v">8</span>Then Amalek came and fought with Israel in Rephidim. <span data-number="9" class="v">9</span>Moses said to Joshua, “Choose men for us, and go out to fight with Amalek. Tomorrow I will stand on the top of the hill with God’s rod in my hand.” <span data-number="10" class="v">10</span>So Joshua did as Moses had told him, and fought with Amalek; and Moses, Aaron, and Hur went up to the top of the hill. <span data-number="11" class="v">11</span>When Moses held up his hand, Israel prevailed. When he let down his hand, Amalek prevailed. <span data-number="12" class="v">12</span>But Moses’ hands were heavy; so they took a stone, and put it under him, and he sat on it. Aaron and Hur held up his hands, the one on the one side, and the other on the other side. His hands were steady until sunset. <span data-number="13" class="v">13</span>Joshua defeated Amalek and his people with the edge of the sword. <span data-number="14" class="v">14</span>Yahweh said to Moses, “Write this for a memorial in a book, and rehearse it in the ears of Joshua: that I will utterly blot out the memory of Amalek from under the sky.” <span data-number="15" class="v">15</span>Moses built an altar, and called its name “Yahweh our Banner”.</p>',
+  },
+];
+
+const content = {
+  body:
+    '<p>Sometimes God&rsquo;s promises to us involve a fight. We have to fight to keep our focus on Him, fight to move towards the promise we know God has laid on our hearts. We have a real enemy that would love nothing more than to get us sidetracked and doubt God&rsquo;s promises. So we fight saying that we are going to believe God will do what He says He will do, and we keep fighting until we see that promise come to life.</p><p>In Exodus 17:8-15 the nation of Israel, freed from great oppression in Egypt was traveling to the land God promised them. Yet, Israel was fighting, again.&nbsp;<br />&nbsp;<br />As the Israelites were fighting in the valley,&nbsp;Moses was on the hill top lifting his hands in prayer for these great fighters. Israel fought hard, and with the prayers of Moses and the help of his companions, Aaron and Hur, the Amalekites were defeated. Moses knew that it was solely because of the Lord&rsquo;s hand of protection and blessing on the Israelites that they won the battle. &ldquo;Moses built an altar and called it The Lord is my banner&rdquo; (Exodus 17:15).</p><p>In battle opposing nations would fly their own flag on a pole at each of their respective front lines. This was to give their soldiers a feeling of hope and a focal point. This is what God is to us: a banner of encouragement to give us hope and a focal point.</p><blockquote><p>The Lord protects us, covers us with love, and&nbsp;blesses us continually.</p></blockquote><p>The Lord is our banner. He protects us; He covers us with love; He blesses us continually. The Lord gives us hope and a place to focus during the tough fights when the enemy is trying to make us doubt God&rsquo;s promises.&nbsp;</p><p>When was the last time you sat and thanked Jesus for all the ways he is a banner in your life?&nbsp;</p><p>Reflect:</p><ul><li>What is one way the Lord has been your banner?</li><li>How can you focus more today on the Lord and all the things He does for you throughout the day?</li></ul>',
+  route: { jumpTo: () => {} },
+  title: 'God is Our Banner',
+};
+
+const renderItem = () => {};
+
+const loadingStateObject = {
+  node: {
+    id: 'fakeId0',
+    title: '',
+    isLoading: true,
+  },
+};
+
+const stories = storiesOf('Devotional', module);
+
+stories.add('Example', () => (
+  <Devotional
+    body={content.body}
+    title={content.title}
+    isLoading={false}
+    scripture={scripture}
+    renderItem={renderItem}
+    loadingStateObject={loadingStateObject}
+  />
+));
+
+stories.add('isLoading', () => (
+  <Devotional
+    body={content.body}
+    title={content.title}
+    isLoading
+    scripture={scripture}
+    renderItem={renderItem}
+    loadingStateObject={loadingStateObject}
+  />
+));
diff --git a/apolloschurchapp/src/content-single/DevotionalContentItem/Devotional.tests.js b/apolloschurchapp/src/content-single/DevotionalContentItem/Devotional.tests.js
index efaffbd..59ed7e1 100644
--- a/apolloschurchapp/src/content-single/DevotionalContentItem/Devotional.tests.js
+++ b/apolloschurchapp/src/content-single/DevotionalContentItem/Devotional.tests.js
@@ -1,7 +1,7 @@
 import React from 'react';
 import renderer from 'react-test-renderer';
+import wait from 'waait';
 import Providers from 'apolloschurchapp/src/Providers';
-import { renderWithApolloData } from 'apolloschurchapp/src/utils/testUtils';
 import getContentItemContent from '../HTMLContent/getContentItemContent';
 import getScripture from './getScripture';
 import Devotional from '.';
@@ -66,7 +66,7 @@ const navigation = {
 
 describe('the Devotional component', () => {
   it('renders a devotional', async () => {
-    const tree = await renderWithApolloData(
+    const tree = renderer.create(
       <Providers mocks={mocks}>
         <Devotional
           id="1"
@@ -76,19 +76,16 @@ describe('the Devotional component', () => {
         />
       </Providers>
     );
+    await wait(0); // wait for response
     expect(tree).toMatchSnapshot();
   });
   it('renders even with empty scripture array', async () => {
-    const tree = await renderWithApolloData(
+    const tree = renderer.create(
       <Providers mocks={mocks}>
-        <Devotional
-          id="1"
-          content={content}
-          loading={false}
-          navigation={navigation}
-        />
+        <Devotional id="1" content={content} loading navigation={navigation} />
       </Providers>
     );
+    await wait(0); // wait for response
     expect(tree).toMatchSnapshot();
   });
   it('renders a loading state', async () => {
@@ -97,6 +94,7 @@ describe('the Devotional component', () => {
         <Devotional id="1" content={content} loading navigation={navigation} />
       </Providers>
     );
+    await wait(0); // wait for response
     expect(tree).toMatchSnapshot();
   });
 });
diff --git a/apolloschurchapp/src/content-single/DevotionalContentItem/index.js b/apolloschurchapp/src/content-single/DevotionalContentItem/index.js
index 088bbdc..32cd53c 100644
--- a/apolloschurchapp/src/content-single/DevotionalContentItem/index.js
+++ b/apolloschurchapp/src/content-single/DevotionalContentItem/index.js
@@ -86,11 +86,10 @@ class DevotionalContentItem extends PureComponent {
     loading,
   }) => {
     if (error) return <ErrorCard error={error} />;
-
     // only include scriptures where the references are not null
-    const validScriptures = scriptures
-      ? scriptures.filter((scripture) => scripture.reference != null)
-      : [];
+    const validScriptures = scriptures.filter(
+      (scripture) => scripture.reference != null
+    );
 
     const hasScripture = loading || validScriptures.length;
     const tabRoutes = [{ title: 'Devotional', key: 'content' }];
diff --git a/apolloschurchapp/src/index.js b/apolloschurchapp/src/index.js
index 630be1e..e479b43 100644
--- a/apolloschurchapp/src/index.js
+++ b/apolloschurchapp/src/index.js
@@ -1,7 +1,7 @@
 import React from 'react';
 import { StatusBar } from 'react-native';
 import { createStackNavigator } from 'react-navigation';
-import SplashScreen from 'react-native-splash-screen';
+// import { Sentry } from 'react-native-sentry';
 
 import { BackgroundView, withTheme } from '@apollosproject/ui-kit';
 import Passes from '@apollosproject/ui-passes';
@@ -15,34 +15,31 @@ import Tabs from './tabs';
 import PersonalDetails from './user-settings/PersonalDetails';
 import ChangePassword from './user-settings/ChangePassword';
 import Location from './user-settings/Locations';
-import LandingScreen from './LandingScreen';
+import { LocationFinderMapView } from './ui/Onboarding/slides/LocationFinder';
 import UserWebBrowser from './user-web-browser';
-import Onboarding from './ui/Onboarding';
+import Onboarding from './onboarding';
+// Sentry.config(
+//   'https://5908fa19ed37447f86b2717423cadec5:45dd3b58792b413cb67109c5e63a0bb7@sentry.io/1241658'
+// ).install();
 
 const AppStatusBar = withTheme(({ theme }) => ({
   barStyle: 'dark-content',
   backgroundColor: theme.colors.paper,
 }))(StatusBar);
 
-const ProtectedRouteWithSplashScreen = (props) => {
-  const handleOnRouteChange = () => SplashScreen.hide();
-
-  return <ProtectedRoute {...props} onRouteChange={handleOnRouteChange} />;
-};
-
 const AppNavigator = createStackNavigator(
   {
-    ProtectedRoute: ProtectedRouteWithSplashScreen,
+    ProtectedRoute,
     Tabs,
     ContentSingle,
     Auth,
     PersonalDetails,
     ChangePassword,
     Location,
+    LocationFinderMapView,
     Passes,
     UserWebBrowser,
     Onboarding,
-    LandingScreen,
   },
   {
     initialRouteName: 'ProtectedRoute',
diff --git a/apolloschurchapp/src/onboarding/index.js b/apolloschurchapp/src/onboarding/index.js
new file mode 100644
index 0000000..f447f8a
--- /dev/null
+++ b/apolloschurchapp/src/onboarding/index.js
@@ -0,0 +1,14 @@
+import React, { PureComponent } from 'react';
+import Onboarding from 'apolloschurchapp/src/ui/Onboarding';
+
+export default class TestingControlPanel extends PureComponent {
+  static navigationOptions = () => ({
+    title: 'Onboarding',
+    header: null,
+    gesturesEnabled: false,
+  });
+
+  render() {
+    return <Onboarding {...this.props} />;
+  }
+}
diff --git a/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeaderConnected.js b/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeaderConnected.js
index 397a879..1ab8d26 100644
--- a/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeaderConnected.js
+++ b/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeaderConnected.js
@@ -1,7 +1,6 @@
 import React from 'react';
 import { Query } from 'react-apollo';
 import PropTypes from 'prop-types';
-import { get } from 'lodash';
 
 import getUserProfile from '../getUserProfile';
 import UserAvatarHeader from './UserAvatarHeader';
@@ -11,7 +10,9 @@ const UserAvatarHeaderConnected = ({ navigation }) => (
     {({
       data: {
         currentUser: {
-          profile: { photo, firstName, lastName, campus } = {},
+          profile: { photo, firstName, lastName, campus: { name } } = {
+            campus: {},
+          },
         } = {},
       } = {},
       refetch,
@@ -19,7 +20,7 @@ const UserAvatarHeaderConnected = ({ navigation }) => (
       <UserAvatarHeader
         firstName={firstName}
         lastName={lastName}
-        location={get(campus, 'name')}
+        location={name}
         photo={photo}
         refetch={refetch}
         navigation={navigation}
diff --git a/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeaderConnected.tests.js b/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeaderConnected.tests.js
index b4bad0c..e0a8488 100644
--- a/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeaderConnected.tests.js
+++ b/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeaderConnected.tests.js
@@ -1,5 +1,6 @@
 import React from 'react';
-import { renderWithApolloData } from 'apolloschurchapp/src/utils/testUtils';
+import renderer from 'react-test-renderer';
+import wait from 'waait';
 
 import Providers from 'apolloschurchapp/src/Providers';
 
@@ -15,37 +16,16 @@ describe('user avatar header connect', () => {
       result: {
         data: {
           currentUser: {
-            __typename: 'AuthenticatedUser',
-            id: 'AuthenticatedUser:123',
+            id: 'AuthenticatedUser:057b0758543270d1cb21784cac4d3f5c',
             profile: {
-              id: 'Person:123',
-              __typename: 'Person',
-              gender: 'Male',
-              birthDate: '1980-02-10T00:00:00',
               firstName: 'Isaac',
               lastName: 'Hardy',
-              campus: {
-                __typename: 'Campus',
-                id: 'Campus:a0f64573eabf00a607bec911794d50fb',
-                name: 'Chicago Campus',
-                latitude: 42.09203,
-                longitude: -88.13289,
-                distanceFromLocation: null,
-                street1: '67 Algonquin Rd',
-                street2: '',
-                city: 'South Barrington',
-                state: 'IL',
-                postalCode: '60010-6143',
-                image: {
-                  __typename: 'ImageMediaSource',
-                  uri: 'https://picsum.photos/300/300/?random',
-                },
-              },
+              location: 'Anderson, SC',
               email: 'isaac.hardy@newspring.cc',
-              nickName: 'Batman',
+              nickName: 'Ike',
               photo: {
-                __typename: 'ImageMediaSource',
-                uri: 'https://some-uri.com/test.jpg',
+                uri:
+                  'https://apollosrock.newspring.cc:443/GetImage.ashx?guid=60fd5f35-3167-4c26-9a30-d44937287b87',
               },
             },
           },
@@ -53,11 +33,12 @@ describe('user avatar header connect', () => {
       },
     };
     const navigation = { navigate: jest.fn(), getParam: jest.fn() };
-    const tree = await renderWithApolloData(
+    const tree = renderer.create(
       <Providers mocks={[mock]}>
         <UserAvatarHeaderConnected navigation={navigation} />
       </Providers>
     );
+    await wait(0); // wait for response from graphql
     expect(tree).toMatchSnapshot();
   });
 });
diff --git a/apolloschurchapp/src/tabs/connect/getUserProfile.js b/apolloschurchapp/src/tabs/connect/getUserProfile.js
index ef3b2c8..4e4dd64 100644
--- a/apolloschurchapp/src/tabs/connect/getUserProfile.js
+++ b/apolloschurchapp/src/tabs/connect/getUserProfile.js
@@ -6,7 +6,6 @@ export default gql`
     currentUser {
       id
       profile {
-        id
         firstName
         lastName
         campus {
diff --git a/apolloschurchapp/src/tabs/home/Home.js b/apolloschurchapp/src/tabs/home/Home.js
index 57abba0..ccdeee1 100644
--- a/apolloschurchapp/src/tabs/home/Home.js
+++ b/apolloschurchapp/src/tabs/home/Home.js
@@ -19,7 +19,6 @@ import { LiveButton } from '../../live';
 import ContentTableCard from '../../ui/ContentTableCard';
 import getUserFeed from './getUserFeed';
 import getPersonaFeed from './getPersonaFeed';
-import getCampaignContentItem from './getCampaignContentItem';
 
 const LogoTitle = styled(({ theme }) => ({
   height: theme.sizing.baseUnit,
@@ -69,49 +68,21 @@ class Home extends PureComponent {
                   <>
                     <LogoTitle source={require('./wordmark.png')} />
                     <LiveButton />
-                    <Query
-                      query={getCampaignContentItem}
-                      fetchPolicy="cache-and-network"
-                    >
-                      {({ data: featuredData, loading: isFeaturedLoading }) => {
-                        const featuredContent = get(
-                          featuredData,
-                          'campaigns.edges',
-                          []
-                        ).map((edge) => edge.node);
-
-                        const featuredItem = get(
-                          featuredContent[0],
-                          'childContentItemsConnection.edges[0].node',
-                          {}
-                        );
-
-                        return (
-                          <ContentCardConnected
-                            contentId={featuredItem.id}
-                            isLoading={isFeaturedLoading}
-                          />
-                        );
-                      }}
-                    </Query>
                     <Query
                       query={getPersonaFeed}
                       fetchPolicy="cache-and-network"
                     >
-                      {({
-                        data: personaData,
-                        loading: isContentTableLoading,
-                      }) => (
+                      {({ data: personaData, loading: actionLoading }) => (
                         <ContentTableCard
-                          isLoading={isContentTableLoading}
+                          isLoading={actionLoading}
                           onPress={this.handleOnPress}
                           header={
                             <>
-                              <StyledH6 isLoading={isContentTableLoading}>
+                              <StyledH6 isLoading={actionLoading}>
                                 FOR YOU
                               </StyledH6>
                               <H3
-                                isLoading={isContentTableLoading}
+                                isLoading={actionLoading}
                                 numberOfLines={3}
                                 ellipsizeMode="tail"
                               >
diff --git a/apolloschurchapp/src/tabs/home/getCampaignContentItem.js b/apolloschurchapp/src/tabs/home/getCampaignContentItem.js
deleted file mode 100644
index 5bdb082..0000000
--- a/apolloschurchapp/src/tabs/home/getCampaignContentItem.js
+++ /dev/null
@@ -1,25 +0,0 @@
-import gql from 'graphql-tag';
-
-import { contentItemFragment } from 'apolloschurchapp/src/content-single/getContentItem';
-import { largeCardFragment } from 'apolloschurchapp/src/ui/ContentCardConnected';
-
-export default gql`
-  query campaigns {
-    campaigns {
-      edges {
-        node {
-          childContentItemsConnection {
-            edges {
-              node {
-                ...largeCardFragment
-                ...contentItemFragment
-              }
-            }
-          }
-        }
-      }
-    }
-  }
-  ${contentItemFragment}
-  ${largeCardFragment}
-`;
diff --git a/apolloschurchapp/src/ui/ContentTableCard/ContentTableCard.stories.js b/apolloschurchapp/src/ui/ContentTableCard/ContentTableCard.stories.js
index 9287554..30bf74a 100644
--- a/apolloschurchapp/src/ui/ContentTableCard/ContentTableCard.stories.js
+++ b/apolloschurchapp/src/ui/ContentTableCard/ContentTableCard.stories.js
@@ -1,5 +1,5 @@
 import React from 'react';
-import { storiesOf } from '@apollosproject/ui-storybook';
+import { storiesOf } from '@storybook/react-native';
 import { H3 } from '@apollosproject/ui-kit';
 import ContentTableCard from '.';
 
diff --git a/apolloschurchapp/src/ui/ContentTableCard/ContentTableCardItem.stories.js b/apolloschurchapp/src/ui/ContentTableCard/ContentTableCardItem.stories.js
index 6a0d4cb..b7ba6d2 100644
--- a/apolloschurchapp/src/ui/ContentTableCard/ContentTableCardItem.stories.js
+++ b/apolloschurchapp/src/ui/ContentTableCard/ContentTableCardItem.stories.js
@@ -1,5 +1,5 @@
 import React from 'react';
-import { storiesOf } from '@apollosproject/ui-storybook';
+import { storiesOf } from '@storybook/react-native';
 
 import ContentTableCardItem from './ContentTableCardItem';
 
diff --git a/apolloschurchapp/src/ui/LandingScreen/LandingScreen.stories.js b/apolloschurchapp/src/ui/LandingScreen/LandingScreen.stories.js
deleted file mode 100644
index d9ebd3c..0000000
--- a/apolloschurchapp/src/ui/LandingScreen/LandingScreen.stories.js
+++ /dev/null
@@ -1,23 +0,0 @@
-import React from 'react';
-import { storiesOf } from '@apollosproject/ui-storybook';
-import { GradientOverlayImage } from '@apollosproject/ui-kit';
-
-import LandingScreen from '.';
-
-storiesOf('LandingScreen', module)
-  .add('default', () => <LandingScreen />)
-  .add('slideTitle', () => <LandingScreen slideTitle={'Custom title text'} />)
-  .add('description', () => (
-    <LandingScreen description={'Custom description text'} />
-  ))
-  .add('textColor', () => <LandingScreen textColor={'salmon'} />)
-  .add('ImageComponent', () => (
-    <LandingScreen
-      BackgroundComponent={
-        <GradientOverlayImage
-          source={'https://picsum.photos/375/812/?random'}
-        />
-      }
-    />
-  ))
-  .add('Slide props', () => <LandingScreen onPressPrimary={() => {}} />);
diff --git a/apolloschurchapp/src/ui/LandingScreen/index.js b/apolloschurchapp/src/ui/LandingScreen/index.js
deleted file mode 100644
index f929f81..0000000
--- a/apolloschurchapp/src/ui/LandingScreen/index.js
+++ /dev/null
@@ -1,86 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-
-import {
-  styled,
-  withTheme,
-  Icon,
-  H1,
-  H4,
-  PaddedView,
-  BackgroundView,
-} from '@apollosproject/ui-kit';
-
-import { Slide } from '@apollosproject/ui-onboarding';
-
-const Content = styled({
-  flex: 1,
-  justifyContent: 'center',
-})(PaddedView);
-
-const BrandIcon = withTheme(({ theme, color }) => ({
-  name: 'brand-icon',
-  size: theme.sizing.baseUnit * 3,
-  ...(color ? { fill: color } : {}),
-  style: {
-    marginBottom: theme.sizing.baseUnit,
-  },
-}))(Icon);
-
-const Title = styled(({ theme, color }) => ({
-  marginBottom: theme.sizing.baseUnit * 2,
-  ...(color ? { color } : {}),
-}))(H1);
-
-const StyledH4 = styled(({ color }) => ({
-  ...(color ? { color } : {}),
-}))(H4);
-
-const LandingScreen = ({
-  slideTitle,
-  description,
-  textColor,
-  BackgroundComponent,
-  ...props
-}) => (
-  <BackgroundView>
-    <Slide {...props} scrollEnabled={false}>
-      {BackgroundComponent}
-      <Content>
-        <BrandIcon color={textColor} />
-        <Title color={textColor}>{slideTitle}</Title>
-        <StyledH4 color={textColor}>{description}</StyledH4>
-      </Content>
-    </Slide>
-  </BackgroundView>
-);
-
-LandingScreen.propTypes = {
-  /* The `Swiper` component used in `<onBoarding>` looks for and hijacks the title prop of it's
-   * children. Thus we have to use more unique name.
-   */
-  slideTitle: PropTypes.string,
-  description: PropTypes.string,
-  textColor: PropTypes.string, // Use for custom text and `BrandIcon` color when overlaying text on an image or video needs more clarity. Defaults to theme driven colors.
-  /* Recommended usage:
-   * - `Image` (react-native)
-   * - `GradientOverlayImage` (@apollosproject/ui-kit) for increased readability
-   * - `Video` (react-native-video) because moving pictures!
-   */
-  BackgroundComponent: PropTypes.oneOfType([
-    PropTypes.arrayOf(PropTypes.node),
-    PropTypes.node,
-  ]),
-};
-
-LandingScreen.defaultProps = {
-  slideTitle: "We're glad you're here.",
-  description:
-    "We're not just a building you go to, but a family to belong to.",
-};
-
-LandingScreen.navigationOptions = {
-  header: null,
-};
-
-export default LandingScreen;
diff --git a/apolloschurchapp/src/ui/MediaPlayer/FullscreenPlayer.stories.js b/apolloschurchapp/src/ui/MediaPlayer/FullscreenPlayer.stories.js
index 30eb140..6c889cc 100644
--- a/apolloschurchapp/src/ui/MediaPlayer/FullscreenPlayer.stories.js
+++ b/apolloschurchapp/src/ui/MediaPlayer/FullscreenPlayer.stories.js
@@ -1,5 +1,5 @@
 import React from 'react';
-import { storiesOf } from '@apollosproject/ui-storybook';
+import { storiesOf } from '@storybook/react-native';
 import { Mutation } from 'react-apollo';
 
 import {
diff --git a/apolloschurchapp/src/ui/Onboarding/Onboarding.stories.js b/apolloschurchapp/src/ui/Onboarding/Onboarding.stories.js
new file mode 100644
index 0000000..d304b28
--- /dev/null
+++ b/apolloschurchapp/src/ui/Onboarding/Onboarding.stories.js
@@ -0,0 +1,6 @@
+import React from 'react';
+import { storiesOf } from '@storybook/react-native';
+
+import Onboarding from '.';
+
+storiesOf('Onboarding', module).add('Example', () => <Onboarding />);
diff --git a/apolloschurchapp/src/ui/Onboarding/Slide/Slide.stories.js b/apolloschurchapp/src/ui/Onboarding/Slide/Slide.stories.js
new file mode 100644
index 0000000..a23e44c
--- /dev/null
+++ b/apolloschurchapp/src/ui/Onboarding/Slide/Slide.stories.js
@@ -0,0 +1,58 @@
+import React from 'react';
+import { Text } from 'react-native';
+import { storiesOf } from '@storybook/react-native';
+
+import Slide from '.';
+
+storiesOf('Onboarding/Slide', module)
+  .add('default', () => (
+    <Slide>
+      <Text>Boom</Text>
+    </Slide>
+  ))
+  .add('onPressPrimary', () => (
+    <Slide onPressPrimary={() => {}}>
+      <Text>Boom</Text>
+    </Slide>
+  ))
+  .add('primaryNavText', () => (
+    <Slide onPressPrimary={() => {}} primaryNavText={'Custom button text'}>
+      <Text>Boom</Text>
+    </Slide>
+  ))
+  .add('primaryNavIcon', () => (
+    <Slide
+      onPressPrimary={() => {}}
+      primaryNavText={'Custom icon'}
+      primaryNavIcon={'umbrella'}
+    >
+      <Text>Boom</Text>
+    </Slide>
+  ))
+  .add('no icon', () => (
+    <Slide
+      onPressPrimary={() => {}}
+      primaryNavText={'No Icon!'}
+      primaryNavIcon={''}
+    >
+      <Text>Boom</Text>
+    </Slide>
+  ))
+  .add('onPressSecondary', () => (
+    <Slide onPressSecondary={() => {}}>
+      <Text>Boom</Text>
+    </Slide>
+  ))
+  .add('secondaryNavText', () => (
+    <Slide
+      onPressSecondary={() => {}}
+      secondaryNavText={'Custom skip button text'}
+    >
+      <Text>Boom</Text>
+    </Slide>
+  ))
+  .add('With Navigation', () => (
+    <Slide onPressPrimary={() => {}} onPressSecondary={() => {}}>
+      <Text>Boom</Text>
+    </Slide>
+  ));
diff --git a/apolloschurchapp/src/ui/Onboarding/Slide/Slide.tests.js b/apolloschurchapp/src/ui/Onboarding/Slide/Slide.tests.js
new file mode 100644
index 0000000..18e7175
--- /dev/null
+++ b/apolloschurchapp/src/ui/Onboarding/Slide/Slide.tests.js
@@ -0,0 +1,101 @@
+import React from 'react';
+import { Text } from 'react-native';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import Slide from '.';
+
+describe('The Onboarding Slide component', () => {
+  it('should render children', () => {
+    const tree = renderer.create(
+      <Providers>
+        <Slide>
+          <Text>Boom</Text>
+        </Slide>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render onboarding next button navigation', () => {
+    const tree = renderer.create(
+      <Providers>
+        <Slide onPressPrimary={jest.fn()}>
+          <Text>Boom</Text>
+        </Slide>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render primary navigation button with custom text', () => {
+    const tree = renderer.create(
+      <Providers>
+        <Slide onPressPrimary={jest.fn()} primaryNavText={'Custom nav text'}>
+          <Text>Boom</Text>
+        </Slide>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render primary navigation button with a custom icon', () => {
+    const tree = renderer.create(
+      <Providers>
+        <Slide
+          onPressPrimary={jest.fn()}
+          primaryNavText={'Custom nav text with custom icon'}
+          primaryNavIcon={'umbrella'}
+        >
+          <Text>Boom</Text>
+        </Slide>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render primary navigation button without a custom icon', () => {
+    const tree = renderer.create(
+      <Providers>
+        <Slide
+          onPressPrimary={jest.fn()}
+          primaryNavText={'Custom nav text without an icon'}
+          primaryNavIcon={''}
+        >
+          <Text>Boom</Text>
+        </Slide>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render onboarding skip button navigation', () => {
+    const tree = renderer.create(
+      <Providers>
+        <Slide onPressSecondary={jest.fn()}>
+          <Text>Boom</Text>
+        </Slide>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render onboarding skip button with custom text', () => {
+    const tree = renderer.create(
+      <Providers>
+        <Slide
+          onPressSecondary={jest.fn()}
+          secondaryNavText={'Custom skip button text'}
+        >
+          <Text>Boom</Text>
+        </Slide>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render both slide navigation buttons', () => {
+    const tree = renderer.create(
+      <Providers>
+        <Slide onPressPrimary={jest.fn()} onPressSecondary={jest.fn()}>
+          <Text>Boom</Text>
+        </Slide>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/Onboarding/Slide/index.js b/apolloschurchapp/src/ui/Onboarding/Slide/index.js
new file mode 100644
index 0000000..ed05867
--- /dev/null
+++ b/apolloschurchapp/src/ui/Onboarding/Slide/index.js
@@ -0,0 +1,92 @@
+import React, { memo } from 'react';
+import PropTypes from 'prop-types';
+
+import {
+  styled,
+  withTheme,
+  FlexedView,
+  PaddedView,
+  H5,
+  ButtonLink,
+  Button,
+  Icon,
+} from '@apollosproject/ui-kit';
+
+const NavWrapper = styled(({ theme }) => ({
+  flexDirection: 'row-reverse', // reversed so the primary action is always on the right
+  alignItems: 'center', // centers optional back button with dots/next button
+  justifyContent: 'space-between',
+  marginBottom: theme.sizing.baseUnit * 0.5, // centers nav/button with pager dots
+}))(PaddedView);
+
+const PrimaryNavIcon = withTheme(({ theme }) => ({
+  size: theme.helpers.rem(1.25),
+  style: {
+    marginLeft: theme.sizing.baseUnit * 0.5,
+    marginRight: theme.sizing.baseUnit * -0.5,
+  },
+}))(Icon);
+
+const SkipButton = styled(({ theme }) => ({
+  color: theme.colors.text.tertiary, // this is probably not the right color
+  paddingVertical: theme.sizing.baseUnit * 0.9375, // optically centered on typographic baseline
+  paddingHorizontal: theme.sizing.baseUnit, // improves tappability
+  marginLeft: theme.sizing.baseUnit * -1, // adjusts for paddingHorizontal
+}))(ButtonLink);
+
+/* Slide uses memo = sfc PureComponent 💥 Additionally, this component when rendered in a `Slider`
+ * is automatically rendered in a `View` */
+// eslint-disable-next-line react/display-name
+const Slide = memo(
+  ({
+    children,
+    onPressPrimary,
+    onPressSecondary,
+    primaryNavText,
+    primaryNavIcon,
+    secondaryNavText,
+  }) => (
+    <>
+      <FlexedView>{children}</FlexedView>
+      {onPressPrimary || onPressSecondary ? (
+        <NavWrapper vertical={false}>
+          {onPressPrimary ? (
+            <Button onPress={onPressPrimary}>
+              <>
+                <H5>{primaryNavText}</H5>
+                {primaryNavIcon ? (
+                  <PrimaryNavIcon name={primaryNavIcon} />
+                ) : null}
+              </>
+            </Button>
+          ) : null}
+          {onPressSecondary ? (
+            <SkipButton onPress={onPressSecondary}>
+              {secondaryNavText}
+            </SkipButton>
+          ) : null}
+        </NavWrapper>
+      ) : null}
+    </>
+  )
+);
+
+Slide.propTypes = {
+  children: PropTypes.oneOfType([
+    PropTypes.arrayOf(PropTypes.node),
+    PropTypes.node,
+  ]),
+  onPressPrimary: PropTypes.func,
+  onPressSecondary: PropTypes.func,
+  primaryNavText: PropTypes.string, // colored button text
+  primaryNavIcon: PropTypes.string, // optional custom icon name or empty string for no icon at all
+  secondaryNavText: PropTypes.string, // text link
+};
+
+Slide.defaultProps = {
+  primaryNavText: 'Next',
+  primaryNavIcon: 'arrow-next',
+  secondaryNavText: 'Skip',
+};
+
+export default Slide;
diff --git a/apolloschurchapp/src/ui/Onboarding/index.js b/apolloschurchapp/src/ui/Onboarding/index.js
index 54a0382..a7c6fb8 100644
--- a/apolloschurchapp/src/ui/Onboarding/index.js
+++ b/apolloschurchapp/src/ui/Onboarding/index.js
@@ -1,80 +1,85 @@
-import React from 'react';
-
-import { GradientOverlayImage } from '@apollosproject/ui-kit';
-import { ApolloConsumer } from 'react-apollo';
+import React, { Component } from 'react';
+// import PropTypes from 'prop-types';
+import Swiper from 'react-native-swiper';
+import {
+  withTheme,
+  BackgroundView,
+  GradientOverlayImage,
+} from '@apollosproject/ui-kit';
 
 import {
   AskNotificationsConnected,
   AskNameConnected,
-  FeaturesConnected,
+  Features,
   AboutYouConnected,
   LocationFinderConnected,
-  OnboardingSwiper,
-} from '@apollosproject/ui-onboarding';
+} from './slides';
+
+// Provides themed colors to Swiper dots
+const ThemedSwiper = withTheme(({ theme }) => ({
+  dotColor: theme.colors.background.inactive, // theme.colors.lightSecondary looks the best.
+  activeDotColor: theme.colors.action.primary,
+}))(({ swiperRef, ...props }) => <Swiper ref={swiperRef} {...props} />);
+
+class Onboarding extends Component {
+  static navigationOptions = () => ({
+    title: 'Onboarding',
+    header: null,
+  });
+
+  constructor() {
+    super();
 
-import { requestPushPermissions } from 'apolloschurchapp/src/notifications';
+    this.swiper = null;
+  }
 
-function Onboarding({ navigation }) {
-  return (
-    <OnboardingSwiper>
-      {({ swipeForward }) => (
-        <>
-          <AskNameConnected onPressPrimary={swipeForward} />
-          <FeaturesConnected
-            onPressPrimary={swipeForward}
-            BackgroundComponent={
-              <GradientOverlayImage
-                source={'https://picsum.photos/640/640/?random'}
-              />
-            }
+  // Creates ref to Swiper to be passed as a prop to children.
+  setSwiperRef = (r) => {
+    this.swiper = r;
+
+    return this.swiper;
+  };
+
+  // Advance swiper 1 slide. See Swiper documentation for scrollBy details. https://github.com/leecade/react-native-swiper#methods
+  handleOnPressPrimary = () => this.swiper.scrollBy(1);
+
+  render() {
+    return (
+      <BackgroundView>
+        <ThemedSwiper
+          loop={false}
+          /* Disables swipe gestures. We currently we dont display a back button so this is our
+           * only back navigation option. */
+          // scrollEnabled={false}
+          showsButtons={false}
+          swiperRef={this.setSwiperRef}
+        >
+          <AskNameConnected onPressPrimary={this.handleOnPressPrimary} />
+          <Features
+            imgSrc={{ uri: 'https://picsum.photos/1200/1200?random' }}
+            onPressPrimary={this.handleOnPressPrimary}
           />
           <AboutYouConnected
-            onPressPrimary={swipeForward}
-            BackgroundComponent={
-              <GradientOverlayImage
-                source={'https://picsum.photos/640/640/?random'}
-              />
-            }
+            imgSrc={{ uri: 'https://picsum.photos/1200/1200?random' }}
+            onPressPrimary={this.handleOnPressPrimary}
           />
-          <LocationFinderConnected
-            onPressPrimary={swipeForward}
-            onNavigate={() => {
-              navigation.navigate('Location', {
-                onFinished: swipeForward,
-              });
-            }}
-            BackgroundComponent={
-              <GradientOverlayImage
-                source={'https://picsum.photos/640/640/?random'}
-              />
-            }
-          />
-          <ApolloConsumer>
-            {(client) => (
-              <AskNotificationsConnected
-                onPressPrimary={() => navigation.navigate('Home')}
-                onRequestPushPermissions={() =>
-                  requestPushPermissions({ client })
-                }
-                primaryNavText={'Finish'}
-                BackgroundComponent={
-                  <GradientOverlayImage
-                    source={'https://picsum.photos/640/640/?random'}
-                  />
-                }
-              />
-            )}
-          </ApolloConsumer>
-        </>
-      )}
-    </OnboardingSwiper>
-  );
+          <LocationFinderConnected onPressPrimary={this.handleOnPressPrimary}>
+            <GradientOverlayImage
+              source={'https://picsum.photos/640/640/?random'}
+            />
+          </LocationFinderConnected>
+          <AskNotificationsConnected
+            onPressPrimary={() => this.props.navigation.navigate('Home')}
+            primaryNavText={'Finish'}
+          >
+            <GradientOverlayImage
+              source={'https://picsum.photos/640/640/?random'}
+            />
+          </AskNotificationsConnected>
+        </ThemedSwiper>
+      </BackgroundView>
+    );
+  }
 }
 
-Onboarding.navigationOptions = {
-  title: 'Onboarding',
-  header: null,
-  gesturesEnabled: false,
-};
-
 export default Onboarding;
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/AboutYou/AboutYou.js b/apolloschurchapp/src/ui/Onboarding/slides/AboutYou/AboutYou.js
new file mode 100644
index 0000000..861c9d1
--- /dev/null
+++ b/apolloschurchapp/src/ui/Onboarding/slides/AboutYou/AboutYou.js
@@ -0,0 +1,151 @@
+import React, { memo } from 'react';
+import { Image, View } from 'react-native';
+import PropTypes from 'prop-types';
+import moment from 'moment';
+import { get } from 'lodash';
+
+import {
+  styled,
+  H2,
+  H5,
+  Radio,
+  RadioButton,
+  H6,
+  DateInput,
+  FlexedView,
+  PaddedView,
+} from '@apollosproject/ui-kit';
+
+import Slide from '../../Slide';
+
+const Content = styled({
+  justifyContent: 'center',
+})(FlexedView);
+
+const StyledImage = styled(({ theme }) => ({
+  flex: 2,
+  resizeMode: 'contain',
+  marginBottom: theme.sizing.baseUnit * 2,
+}))(Image);
+
+const TextContent = styled({
+  flex: 1,
+  justifyContent: 'center',
+})(PaddedView);
+
+const Title = styled(({ theme }) => ({
+  color: theme.colors.primary,
+  marginBottom: theme.sizing.baseUnit * 0.5,
+}))(H2);
+
+const Description = styled(({ theme }) => ({
+  color: theme.colors.text.secondary,
+  marginBottom: theme.sizing.baseUnit,
+}))(H5);
+
+const Label = styled({
+  color: 'gray',
+  opacity: 0.7,
+})(H6);
+
+const StyledDate = styled(({ theme }) => ({
+  marginTop: 0,
+  marginBottom: theme.sizing.baseUnit,
+}))(DateInput);
+
+const StyledRadio = styled(({ theme }) => ({
+  marginBottom: theme.sizing.baseUnit,
+  flexDirection: 'row',
+}))(Radio);
+
+const RadioLabel = styled(({ theme }) => ({
+  marginLeft: theme.sizing.baseUnit * 0.5,
+}))(H5);
+
+const AboutYou = memo(
+  ({
+    onPressPrimary,
+    imgSrc,
+    slideTitle,
+    description,
+    defaultDate,
+    genderList,
+    values,
+    touched,
+    errors,
+    setFieldValue,
+    ...props
+  }) => (
+    <Slide onPressPrimary={onPressPrimary} {...props}>
+      <Content>
+        {imgSrc ? <StyledImage source={imgSrc} /> : null}
+        <TextContent>
+          <Title>{slideTitle}</Title>
+          <Description>{description}</Description>
+          <View>
+            <Label>Gender</Label>
+            <StyledRadio
+              label="Gender"
+              type="radio"
+              value={get(values, 'gender')}
+              error={get(touched, 'gender') && get(errors, 'gender')}
+              onChange={(value) => setFieldValue('gender', value)}
+            >
+              {genderList.map((gender) => [
+                <RadioButton
+                  key={gender}
+                  value={gender}
+                  label={() => <RadioLabel>{gender}</RadioLabel>}
+                  underline={false}
+                />,
+              ])}
+            </StyledRadio>
+          </View>
+          <View>
+            <Label>Birthday</Label>
+            <StyledDate
+              type={'DateInput'}
+              placeholder={'Select a date...'}
+              value={moment
+                .utc(get(values, 'birthDate', defaultDate) || defaultDate)
+                .toDate()}
+              error={get(touched, 'birthDate') && get(errors, 'birthDate')}
+              displayValue={moment(
+                get(values, 'birthDate', defaultDate) || defaultDate
+              ).format('MM/DD/YYYY')}
+              onChange={(value) => setFieldValue('birthDate', value)}
+            />
+          </View>
+        </TextContent>
+      </Content>
+    </Slide>
+  )
+);
+
+AboutYou.propTypes = {
+  /* The `Swiper` component used in `<Onboading>` looks for and hijacks the title prop of it's
+   * children. Thus we have to use more unique name.
+   */
+  setFieldValue: PropTypes.func.isRequired,
+  slideTitle: PropTypes.string,
+  description: PropTypes.string,
+  imgSrc: Image.propTypes,
+  defaultDate: PropTypes.instanceOf(Date),
+  genderList: PropTypes.arrayOf(PropTypes.number),
+  values: PropTypes.shape({}),
+  touched: PropTypes.shape({}),
+  errors: PropTypes.shape({}),
+  onPressPrimary: PropTypes.func,
+};
+
+AboutYou.defaultProps = {
+  slideTitle: "This one's easy.",
+  description:
+    'Help us understand who you are so we can connect you with the best ministries and events.',
+  genderList: ['Male', 'Female'],
+  defaultDate: new Date(),
+};
+
+AboutYou.displayName = 'AboutYou';
+
+export default AboutYou;
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/AboutYou/AboutYou.stories.js b/apolloschurchapp/src/ui/Onboarding/slides/AboutYou/AboutYou.stories.js
new file mode 100644
index 0000000..ac99a15
--- /dev/null
+++ b/apolloschurchapp/src/ui/Onboarding/slides/AboutYou/AboutYou.stories.js
@@ -0,0 +1,34 @@
+import React from 'react';
+import { storiesOf } from '@storybook/react-native';
+
+import AboutYou from '.';
+
+storiesOf('Onboarding/slides/AboutYou', module)
+  .add('default', () => <AboutYou />)
+  .add('withImg', () => (
+    <AboutYou
+      imgSrc={{ uri: 'https://picsum.photos/750/750?random' }}
+      setFieldValue={() => {}}
+    />
+  ))
+  .add('slideTitle', () => (
+    <AboutYou slideTitle={'Custom title text'} setFieldValue={() => {}} />
+  ))
+  .add('description', () => (
+    <AboutYou
+      description={'Custom description text'}
+      setFieldValue={() => {}}
+    />
+  ))
+  .add('genderList', () => (
+    <AboutYou genderList={['M', 'F']} setFieldValue={() => {}} />
+  ))
+  .add('values – birthDate', () => (
+    <AboutYou values={{ birthDate: '1989-02-14' }} setFieldValue={() => {}} />
+  ))
+  .add('values – gender', () => (
+    <AboutYou values={{ gender: 'Male' }} setFieldValue={() => {}} />
+  ))
+  .add('Slide props', () => (
+    <AboutYou onPressPrimary={() => {}} setFieldValue={() => {}} />
+  ));
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/AboutYou/AboutYou.tests.js b/apolloschurchapp/src/ui/Onboarding/slides/AboutYou/AboutYou.tests.js
new file mode 100644
index 0000000..6ae12d9
--- /dev/null
+++ b/apolloschurchapp/src/ui/Onboarding/slides/AboutYou/AboutYou.tests.js
@@ -0,0 +1,126 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import AboutYou from '.';
+
+describe('The Onboarding AboutYou component', () => {
+  it('should render', () => {
+    /* we have to pass in a date via defaultDate or the DateInput component will create a current date
+     * object and invalidate the snapshots every time. */
+    const tree = renderer.create(
+      <Providers>
+        <AboutYou defaultDate={'2019-02-14'} setFieldValue={jest.fn()} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a custom image', () => {
+    /* we have to pass in a date via defaultDate or the DateInput component will create a current date
+     * object and invalidate the snapshots every time. */
+    const tree = renderer.create(
+      <Providers>
+        <AboutYou
+          imgSrc={{ uri: 'https://picsum.photos/1200/1200?random' }}
+          defaultDate={'2019-02-14'}
+          setFieldValue={jest.fn()}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a custom title', () => {
+    /* we have to pass in a date via defaultDate or the DateInput component will create a current date
+     * object and invalidate the snapshots every time. */
+    const tree = renderer.create(
+      <Providers>
+        <AboutYou
+          slideTitle={'Custom title text'}
+          defaultDate={'2019-02-14'}
+          setFieldValue={jest.fn()}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a custom description', () => {
+    /* we have to pass in a date via defaultDate or the DateInput component will create a current date
+     * object and invalidate the snapshots every time. */
+    const tree = renderer.create(
+      <Providers>
+        <AboutYou
+          description={'Custom description text'}
+          defaultDate={'2019-02-14'}
+          setFieldValue={jest.fn()}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a custom gender list', () => {
+    /* we have to pass in a date via defaultDate or the DateInput component will create a current date
+     * object and invalidate the snapshots every time. */
+    const tree = renderer.create(
+      <Providers>
+        <AboutYou
+          genderList={['M', 'F']}
+          defaultDate={'2019-02-14'}
+          setFieldValue={jest.fn()}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render the selected gender', () => {
+    /* we have to pass in a date via defaultDate or the DateInput component will create a current date
+     * object and invalidate the snapshots every time. */
+    const tree = renderer.create(
+      <Providers>
+        <AboutYou
+          values={{ gender: 'Male' }}
+          defaultDate={'2019-02-14'}
+          setFieldValue={jest.fn()}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a custom date picker', () => {
+    const tree = renderer.create(
+      <Providers>
+        <AboutYou
+          values={{ birthDate: '1989-02-14' }}
+          setFieldValue={jest.fn()}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a custom date picker when the birth date is null', () => {
+    const tree = renderer.create(
+      <Providers>
+        <AboutYou
+          values={{ birthDate: null }}
+          setFieldValue={jest.fn()}
+          defaultDate={'2019-02-14'}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should pass additional props to Slide', () => {
+    /* we have to pass in a date via defaultDate or the DateInput component will create a current date
+     * object and invalidate the snapshots every time. */
+    const tree = renderer.create(
+      <Providers>
+        <AboutYou
+          onPressPrimary={jest.fn()}
+          defaultDate={'2019-02-14'}
+          setFieldValue={jest.fn()}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/AboutYou/AboutYouConnected.js b/apolloschurchapp/src/ui/Onboarding/slides/AboutYou/AboutYouConnected.js
new file mode 100644
index 0000000..85d0e52
--- /dev/null
+++ b/apolloschurchapp/src/ui/Onboarding/slides/AboutYou/AboutYouConnected.js
@@ -0,0 +1,100 @@
+import React, { memo } from 'react';
+import { Query, Mutation } from 'react-apollo';
+import { Formik } from 'formik';
+import * as Yup from 'yup';
+import PropTypes from 'prop-types';
+
+import getUserProfile from '../../../../tabs/connect/getUserProfile';
+import AboutYou from './AboutYou';
+
+import updateUserDetails from './updateUserDetails';
+
+// eslint-disable-next-line react/display-name
+const AboutYouConnected = memo(({ onPressPrimary, ...props }) => (
+  <Query query={getUserProfile}>
+    {({ data: { currentUser = { profile: {} } } = {} }) => {
+      const { gender, birthDate } = currentUser.profile;
+
+      return (
+        <Mutation
+          mutation={updateUserDetails}
+          update={async (cache, { data: { updateProfileFields } }) => {
+            await cache.writeQuery({
+              query: getUserProfile,
+              data: {
+                currentUser: {
+                  ...currentUser,
+                  profile: {
+                    ...currentUser.profile,
+                    gender: updateProfileFields.gender,
+                    birthDate: updateProfileFields.birthDate,
+                  },
+                },
+              },
+            });
+          }}
+        >
+          {(updateDetails) => (
+            <Formik
+              initialValues={{ gender, birthDate }}
+              validationSchema={Yup.object().shape({
+                gender: Yup.string().required('Gender is required!'),
+                birthDate: Yup.string().required('Birth Date is required!'),
+              })}
+              enableReinitialize
+              onSubmit={async (variables, { setSubmitting, setFieldError }) => {
+                try {
+                  await updateDetails({ variables });
+                } catch (e) {
+                  const { graphQLErrors } = e;
+                  if (
+                    graphQLErrors.length &&
+                    graphQLErrors.find(({ message }) =>
+                      message.includes('Invalid')
+                    )
+                  ) {
+                    setFieldError(
+                      'gender',
+                      'There was a problem sending your request'
+                    );
+                  } else {
+                    setFieldError(
+                      'gender',
+                      'Unknown error. Please try again later.'
+                    );
+                  }
+                }
+                setSubmitting(false);
+              }}
+            >
+              {({ submitForm, values, touched, errors, setFieldValue }) => {
+                const handleOnPressPrimary = () => {
+                  submitForm();
+                  onPressPrimary();
+                };
+                return (
+                  <AboutYou
+                    onPressPrimary={handleOnPressPrimary}
+                    gender={gender}
+                    birthDate={birthDate}
+                    values={values}
+                    touched={touched}
+                    errors={errors}
+                    setFieldValue={setFieldValue}
+                    {...props}
+                  />
+                );
+              }}
+            </Formik>
+          )}
+        </Mutation>
+      );
+    }}
+  </Query>
+));
+
+AboutYouConnected.propTypes = {
+  onPressPrimary: PropTypes.func,
+};
+
+export default AboutYouConnected;
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/AboutYou/AboutYouConnected.tests.js b/apolloschurchapp/src/ui/Onboarding/slides/AboutYou/AboutYouConnected.tests.js
new file mode 100644
index 0000000..8b0a837
--- /dev/null
+++ b/apolloschurchapp/src/ui/Onboarding/slides/AboutYou/AboutYouConnected.tests.js
@@ -0,0 +1,60 @@
+import React from 'react';
+import Providers from 'apolloschurchapp/src/Providers';
+
+import { renderWithApolloData } from 'apolloschurchapp/src/utils/testUtils';
+import getUserProfile from '../../../../tabs/connect/getUserProfile';
+import AboutYouConnected from './AboutYouConnected';
+
+describe('AboutYouConnected component', () => {
+  it('renders Gender and BirthDate when logged in', async () => {
+    const mock = {
+      request: {
+        query: getUserProfile,
+      },
+      result: {
+        data: {
+          currentUser: {
+            __typename: 'AuthenticatedUser',
+            id: 'AuthenticatedUser:123',
+            profile: {
+              __typename: 'Person',
+              gender: 'Male',
+              birthDate: '1980-02-10T00:00:00',
+              firstName: 'Isaac',
+              lastName: 'Hardy',
+              campus: {
+                __typename: 'Campus',
+                id: 'Campus:a0f64573eabf00a607bec911794d50fb',
+                name: 'Chicago Campus',
+                latitude: 42.09203,
+                longitude: -88.13289,
+                distanceFromLocation: null,
+                street1: '67 Algonquin Rd',
+                street2: '',
+                city: 'South Barrington',
+                state: 'IL',
+                postalCode: '60010-6143',
+                image: {
+                  __typename: 'ImageMediaSource',
+                  uri: 'https://picsum.photos/300/300/?random',
+                },
+              },
+              email: 'isaac.hardy@newspring.cc',
+              nickName: 'Batman',
+              photo: {
+                __typename: 'ImageMediaSource',
+                uri: 'https://some-uri.com/test.jpg',
+              },
+            },
+          },
+        },
+      },
+    };
+    const tree = await renderWithApolloData(
+      <Providers mocks={[mock]}>
+        <AboutYouConnected setFieldValue={jest.fn()} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/AboutYou/index.js b/apolloschurchapp/src/ui/Onboarding/slides/AboutYou/index.js
new file mode 100644
index 0000000..6b9737d
--- /dev/null
+++ b/apolloschurchapp/src/ui/Onboarding/slides/AboutYou/index.js
@@ -0,0 +1,4 @@
+import AboutYou from './AboutYou';
+
+export AboutYouConnected from './AboutYouConnected';
+export default AboutYou;
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/AboutYou/updateUserDetails.js b/apolloschurchapp/src/ui/Onboarding/slides/AboutYou/updateUserDetails.js
new file mode 100644
index 0000000..d5beb5e
--- /dev/null
+++ b/apolloschurchapp/src/ui/Onboarding/slides/AboutYou/updateUserDetails.js
@@ -0,0 +1,16 @@
+import gql from 'graphql-tag';
+
+export default gql`
+  mutation updateDetails($gender: String!, $birthDate: String!) {
+    updateProfileFields(
+      input: [
+        { field: Gender, value: $gender }
+        { field: BirthDate, value: $birthDate }
+      ]
+    ) {
+      gender
+      birthDate
+      id
+    }
+  }
+`;
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/AskName/AskName.js b/apolloschurchapp/src/ui/Onboarding/slides/AskName/AskName.js
new file mode 100644
index 0000000..c96f158
--- /dev/null
+++ b/apolloschurchapp/src/ui/Onboarding/slides/AskName/AskName.js
@@ -0,0 +1,113 @@
+import React, { memo } from 'react';
+import PropTypes from 'prop-types';
+import { get } from 'lodash';
+
+import {
+  styled,
+  withTheme,
+  Icon,
+  H2,
+  H5,
+  PaddedView,
+  TextInput,
+} from '@apollosproject/ui-kit';
+
+import Slide from '../../Slide';
+
+const BrandIcon = withTheme(({ theme }) => ({
+  name: 'brand-icon',
+  size: theme.sizing.baseUnit * 3.0,
+  fill: theme.colors.primary,
+  style: {
+    marginTop: theme.sizing.baseUnit * 2,
+    marginBottom: theme.sizing.baseUnit * 0.5,
+  },
+}))(Icon);
+
+const Title = styled(({ theme }) => ({
+  color: theme.colors.primary,
+}))(H2);
+
+const StyledH5 = styled(({ theme }) => ({
+  color: theme.colors.text.secondary,
+}))(H5);
+
+// memo = sfc PureComponent 💥
+// eslint-disable-next-line react/display-name
+const AskName = memo(
+  ({
+    onPressPrimary,
+    slideTitle,
+    description,
+    firstName,
+    lastName,
+    values,
+    touched,
+    errors,
+    setFieldValue,
+    ...props
+  }) => {
+    let LastNameInput = null;
+
+    return (
+      <Slide onPressPrimary={onPressPrimary} {...props}>
+        <PaddedView vertical={false}>
+          <BrandIcon />
+          <Title>{slideTitle}</Title>
+          <StyledH5>{description}</StyledH5>
+          <TextInput
+            label={'First Name'}
+            type={'text'}
+            textContentType={'givenName'} // ios autofill
+            returnKeyType={'next'}
+            value={get(values, 'firstName')}
+            error={
+              get(touched, 'firstName', false) && get(errors, 'firstName', null)
+            }
+            onChangeText={(text) => setFieldValue('firstName', text)}
+            onSubmitEditing={() => LastNameInput.focus()}
+            enablesReturnKeyAutomatically
+          />
+          <TextInput
+            label={'Last Name'}
+            type={'text'}
+            textContentType={'familyName'} // ios autofill
+            returnKeyType={'next'}
+            value={get(values, 'lastName')}
+            error={
+              get(touched, 'lastName', false) && get(errors, 'lastName', null)
+            }
+            onChangeText={(text) => setFieldValue('lastName', text)}
+            onSubmitEditing={onPressPrimary}
+            enablesReturnKeyAutomatically
+            inputRef={(r) => {
+              LastNameInput = r;
+            }}
+          />
+        </PaddedView>
+      </Slide>
+    );
+  }
+);
+
+AskName.propTypes = {
+  /* The `Swiper` component used in `<Onboading>` looks for and hijacks the title prop of it's
+   * children. Thus we have to use more unique name.
+   */
+  setFieldValue: PropTypes.func.isRequired,
+  slideTitle: PropTypes.string,
+  description: PropTypes.string,
+  firstName: PropTypes.string,
+  lastName: PropTypes.string,
+  touched: PropTypes.shape({}),
+  errors: PropTypes.shape({}),
+  values: PropTypes.shape({}),
+  onPressPrimary: PropTypes.func,
+};
+
+AskName.defaultProps = {
+  slideTitle: 'Welcome!',
+  description: "Every relationship starts with a name. What's yours?",
+};
+
+export default AskName;
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/AskName/AskName.stories.js b/apolloschurchapp/src/ui/Onboarding/slides/AskName/AskName.stories.js
new file mode 100644
index 0000000..ff00b90
--- /dev/null
+++ b/apolloschurchapp/src/ui/Onboarding/slides/AskName/AskName.stories.js
@@ -0,0 +1,22 @@
+import React from 'react';
+import { storiesOf } from '@storybook/react-native';
+
+import AskName from '.';
+
+storiesOf('Onboarding/slides/AskName', module)
+  .add('default', () => <AskName setFieldValue={() => {}} />)
+  .add('slideTitle', () => (
+    <AskName slideTitle={'Custom title text'} setFieldValue={() => {}} />
+  ))
+  .add('description', () => (
+    <AskName description={'Custom description text'} setFieldValue={() => {}} />
+  ))
+  .add('firstName and lastName', () => (
+    <AskName
+      values={{ firstName: 'Marty', lastName: 'McFly' }}
+      setFieldValue={() => {}}
+    />
+  ))
+  .add('SlideWrapper props', () => (
+    <AskName setFieldValue={() => {}} onPressPrimary={() => {}} />
+  ));
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/AskName/AskName.tests.js b/apolloschurchapp/src/ui/Onboarding/slides/AskName/AskName.tests.js
new file mode 100644
index 0000000..2e21540
--- /dev/null
+++ b/apolloschurchapp/src/ui/Onboarding/slides/AskName/AskName.tests.js
@@ -0,0 +1,60 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import AskName from '.';
+
+describe('The Onboarding AskName component', () => {
+  it('should render', () => {
+    const tree = renderer.create(
+      <Providers>
+        <AskName setFieldValue={jest.fn()} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a custom title', () => {
+    const tree = renderer.create(
+      <Providers>
+        <AskName slideTitle={'Custom title text'} setFieldValue={jest.fn()} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a custom description', () => {
+    const tree = renderer.create(
+      <Providers>
+        <AskName
+          description={'Custom description text'}
+          setFieldValue={jest.fn()}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should accept a firstName', () => {
+    const tree = renderer.create(
+      <Providers>
+        <AskName values={{ firstName: 'Marty' }} setFieldValue={jest.fn()} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should accept a lastName', () => {
+    const tree = renderer.create(
+      <Providers>
+        <AskName values={{ lastName: 'McFly' }} setFieldValue={jest.fn()} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should pass additional props to Slide component', () => {
+    const tree = renderer.create(
+      <Providers>
+        <AskName onPressPrimary={jest.fn()} setFieldValue={jest.fn()} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/AskName/AskNameConnected.js b/apolloschurchapp/src/ui/Onboarding/slides/AskName/AskNameConnected.js
new file mode 100644
index 0000000..427421c
--- /dev/null
+++ b/apolloschurchapp/src/ui/Onboarding/slides/AskName/AskNameConnected.js
@@ -0,0 +1,100 @@
+import React, { memo } from 'react';
+import { Query, Mutation } from 'react-apollo';
+import { Formik } from 'formik';
+import * as Yup from 'yup';
+import PropTypes from 'prop-types';
+
+import getUserProfile from '../../../../tabs/connect/getUserProfile';
+import AskName from './AskName';
+
+import updateUserName from './updateUserName';
+
+// eslint-disable-next-line react/display-name
+const AskNameConnected = memo(({ onPressPrimary, ...props }) => (
+  <Query query={getUserProfile}>
+    {({ data: { currentUser = { profile: {} } } = {} }) => {
+      const { firstName, lastName } = currentUser.profile;
+      return (
+        <Mutation
+          mutation={updateUserName}
+          update={async (cache, { data: { updateProfileFields } }) => {
+            await cache.writeQuery({
+              query: getUserProfile,
+              data: {
+                currentUser: {
+                  ...currentUser,
+                  profile: {
+                    ...currentUser.profile,
+                    firstName: updateProfileFields.firstName,
+                    lastName: updateProfileFields.lastName,
+                  },
+                },
+              },
+            });
+          }}
+        >
+          {(updateName) => (
+            <Formik
+              initialValues={{ firstName, lastName }}
+              validationSchema={Yup.object().shape({
+                firstName: Yup.string().required('First Name is required!'),
+                lastName: Yup.string().required('Last Name is required!'),
+              })}
+              enableReinitialize
+              onSubmit={async (variables, { setSubmitting, setFieldError }) => {
+                try {
+                  await updateName({ variables });
+                } catch (e) {
+                  const { graphQLErrors } = e;
+                  if (
+                    graphQLErrors.length &&
+                    graphQLErrors.find(({ message }) =>
+                      message.includes('User already exists')
+                    )
+                  ) {
+                    setFieldError(
+                      'firstName',
+                      'There was a problem sending your request'
+                    );
+                  } else {
+                    setFieldError(
+                      'firstName',
+                      'Unknown error. Please try again later.'
+                    );
+                  }
+                }
+                setSubmitting(false);
+              }}
+            >
+              {({ submitForm, values, touched, errors, setFieldValue }) => {
+                const handleOnPressPrimary = () => {
+                  submitForm();
+                  onPressPrimary();
+                };
+
+                return (
+                  <AskName
+                    onPressPrimary={handleOnPressPrimary}
+                    firstName={firstName}
+                    lastName={lastName}
+                    values={values}
+                    touched={touched}
+                    errors={errors}
+                    setFieldValue={setFieldValue}
+                    {...props}
+                  />
+                );
+              }}
+            </Formik>
+          )}
+        </Mutation>
+      );
+    }}
+  </Query>
+));
+
+AskNameConnected.propTypes = {
+  onPressPrimary: PropTypes.func,
+};
+
+export default AskNameConnected;
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/AskName/AskNameConnected.tests.js b/apolloschurchapp/src/ui/Onboarding/slides/AskName/AskNameConnected.tests.js
new file mode 100644
index 0000000..03138c3
--- /dev/null
+++ b/apolloschurchapp/src/ui/Onboarding/slides/AskName/AskNameConnected.tests.js
@@ -0,0 +1,36 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+import wait from 'waait';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import getUserProfile from '../../../../tabs/connect/getUserProfile';
+import AskNameConnected from './AskNameConnected';
+
+describe('PersonalDetails component', () => {
+  it('renders User Name when logged in', async () => {
+    const mock = {
+      request: {
+        query: getUserProfile,
+      },
+      result: {
+        data: {
+          currentUser: {
+            profile: {
+              firstName: 'Aaron',
+              lastName: 'Attendee',
+              nickName: 'A-Aron',
+            },
+          },
+        },
+      },
+    };
+    const tree = renderer.create(
+      <Providers mocks={[mock]}>
+        <AskNameConnected />
+      </Providers>
+    );
+    await wait(0); // wait for response from graphql
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/AskName/index.js b/apolloschurchapp/src/ui/Onboarding/slides/AskName/index.js
new file mode 100644
index 0000000..138f0e9
--- /dev/null
+++ b/apolloschurchapp/src/ui/Onboarding/slides/AskName/index.js
@@ -0,0 +1,4 @@
+import AskName from './AskName';
+
+export AskNameConnected from './AskNameConnected';
+export default AskName;
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/AskName/updateUserName.js b/apolloschurchapp/src/ui/Onboarding/slides/AskName/updateUserName.js
new file mode 100644
index 0000000..70c8d49
--- /dev/null
+++ b/apolloschurchapp/src/ui/Onboarding/slides/AskName/updateUserName.js
@@ -0,0 +1,16 @@
+import gql from 'graphql-tag';
+
+export default gql`
+  mutation updateName($firstName: String!, $lastName: String!) {
+    updateProfileFields(
+      input: [
+        { field: FirstName, value: $firstName }
+        { field: LastName, value: $lastName }
+      ]
+    ) {
+      firstName
+      lastName
+      id
+    }
+  }
+`;
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/AskNotifications/AskNotifications.js b/apolloschurchapp/src/ui/Onboarding/slides/AskNotifications/AskNotifications.js
new file mode 100644
index 0000000..ae8d5fb
--- /dev/null
+++ b/apolloschurchapp/src/ui/Onboarding/slides/AskNotifications/AskNotifications.js
@@ -0,0 +1,87 @@
+import React, { memo } from 'react';
+import { View } from 'react-native';
+import PropTypes from 'prop-types';
+import {
+  PaddedView,
+  FlexedView,
+  styled,
+  H2,
+  H5,
+  Button,
+} from '@apollosproject/ui-kit';
+
+import Slide from '../../Slide';
+
+const ContentWrapper = styled({
+  height: '100%',
+})(View);
+
+const Content = styled({
+  justifyContent: 'flex-end',
+})(PaddedView);
+
+const Title = styled(({ theme }) => ({
+  color: theme.colors.primary,
+}))(H2);
+
+const StyledH5 = styled(({ theme }) => ({
+  color: theme.colors.text.secondary,
+  paddingBottom: theme.sizing.baseUnit * 1.5,
+}))(H5);
+
+// memo = sfc PureComponent 💥
+// eslint-disable-next-line react/display-name
+const AskNotifications = memo(
+  ({
+    children,
+    slideTitle,
+    description,
+    buttonText,
+    buttonDisabled,
+    onPressButton,
+    ...props
+  }) => (
+    <Slide {...props}>
+      <ContentWrapper>
+        <FlexedView>{children}</FlexedView>
+        <Content>
+          <Title>{slideTitle}</Title>
+          <StyledH5>{description}</StyledH5>
+          {buttonDisabled || onPressButton ? (
+            <Button
+              title={buttonText}
+              onPress={onPressButton}
+              disabled={buttonDisabled}
+              pill={false}
+            />
+          ) : null}
+        </Content>
+      </ContentWrapper>
+    </Slide>
+  )
+);
+
+AskNotifications.propTypes = {
+  /* The `Swiper` component used in `<onBoarding>` looks for and hijacks the title prop of it's
+   * children. Thus we have to use a more unique name.
+   */
+  children: PropTypes.oneOfType([
+    PropTypes.arrayOf(PropTypes.node),
+    PropTypes.node,
+  ]),
+  slideTitle: PropTypes.string,
+  description: PropTypes.string,
+  buttonText: PropTypes.string,
+  buttonDisabled: PropTypes.bool,
+  onPressButton: PropTypes.func,
+};
+
+AskNotifications.defaultProps = {
+  slideTitle: 'Can we keep you informed?',
+  description:
+    "We'll let you know when important things are happening and keep you in the loop",
+  buttonText: 'Yes, enable notifications',
+  buttonDisabled: false,
+};
+
+export default AskNotifications;
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/AskNotifications/AskNotifications.stories.js b/apolloschurchapp/src/ui/Onboarding/slides/AskNotifications/AskNotifications.stories.js
new file mode 100644
index 0000000..0506b87
--- /dev/null
+++ b/apolloschurchapp/src/ui/Onboarding/slides/AskNotifications/AskNotifications.stories.js
@@ -0,0 +1,29 @@
+import React from 'react';
+import { storiesOf } from '@storybook/react-native';
+import { GradientOverlayImage } from '@apollosproject/ui-kit';
+
+import AskNotifications from './AskNotifications';
+
+storiesOf('Onboarding/slides/AskNotifications', module)
+  .add('default', () => <AskNotifications />)
+  .add('children (image)', () => (
+    <AskNotifications>
+      <GradientOverlayImage source={'https://picsum.photos/640/640/?random'} />
+    </AskNotifications>
+  ))
+  .add('slideTitle', () => (
+    <AskNotifications slideTitle={'Custom title text'} />
+  ))
+  .add('description', () => (
+    <AskNotifications description={'Custom description text'} />
+  ))
+  .add('buttonDisabled', () => <AskNotifications buttonDisabled />)
+  .add('buttonText', () => (
+    <AskNotifications
+      onPressButton={() => {}}
+      buttonText={'Custom button text'}
+    />
+  ))
+  .add('SlideWrapper props', () => (
+    <AskNotifications onPressSecondary={() => {}} />
+  ));
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/AskNotifications/AskNotifications.tests.js b/apolloschurchapp/src/ui/Onboarding/slides/AskNotifications/AskNotifications.tests.js
new file mode 100644
index 0000000..1e411d8
--- /dev/null
+++ b/apolloschurchapp/src/ui/Onboarding/slides/AskNotifications/AskNotifications.tests.js
@@ -0,0 +1,84 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+import { GradientOverlayImage } from '@apollosproject/ui-kit';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import AskNotifications from './AskNotifications';
+
+describe('The Onboarding AskNotifications component', () => {
+  it('should render', () => {
+    const tree = renderer.create(
+      <Providers>
+        <AskNotifications />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render children (image)', () => {
+    const tree = renderer.create(
+      <Providers>
+        <AskNotifications>
+          <GradientOverlayImage
+            source={'https://picsum.photos/640/640/?random'}
+          />
+        </AskNotifications>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a custom title', () => {
+    const tree = renderer.create(
+      <Providers>
+        <AskNotifications slideTitle={'Custom title text'} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a custom description', () => {
+    const tree = renderer.create(
+      <Providers>
+        <AskNotifications description={'Custom description text'} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render with a button', () => {
+    const tree = renderer.create(
+      <Providers>
+        <AskNotifications onPressButton={jest.fn()} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render the button disabled', () => {
+    const tree = renderer.create(
+      <Providers>
+        <AskNotifications onPressButton={jest.fn()} buttonDisabled />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a button with custom text', () => {
+    const tree = renderer.create(
+      <Providers>
+        <AskNotifications
+          onPressButton={jest.fn()}
+          buttonText={'Custom button text'}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should pass additional props to Slide component', () => {
+    const tree = renderer.create(
+      <Providers>
+        <AskNotifications
+          onPressSecondary={jest.fn()}
+          secondaryNavText={'Later'}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/AskNotifications/AskNotificationsConnected.js b/apolloschurchapp/src/ui/Onboarding/slides/AskNotifications/AskNotificationsConnected.js
new file mode 100644
index 0000000..cfd6df9
--- /dev/null
+++ b/apolloschurchapp/src/ui/Onboarding/slides/AskNotifications/AskNotificationsConnected.js
@@ -0,0 +1,46 @@
+import React, { memo } from 'react';
+import { Query, ApolloConsumer } from 'react-apollo';
+import PropTypes from 'prop-types';
+
+import {
+  requestPushPermissions,
+  getNotificationsEnabled,
+} from 'apolloschurchapp/src/notifications';
+
+import AskNotifications from '.';
+
+// eslint-disable-next-line react/display-name
+const AskNotificationsConnected = memo(
+  ({ onPressPrimary, onPressSecondary, ...props }) => (
+    <ApolloConsumer>
+      {(client) => (
+        <Query query={getNotificationsEnabled}>
+          {({ data: { notificationsEnabled = false } = {} }) => (
+            <AskNotifications
+              onPressButton={() => requestPushPermissions({ client })}
+              buttonDisabled={notificationsEnabled}
+              buttonText={
+                notificationsEnabled
+                  ? 'Notifications Enabled!'
+                  : 'Yes, enable notifications'
+              }
+              onPressPrimary={notificationsEnabled ? onPressPrimary : null} // if notifications are enabled show the primary nav button (next/finish)
+              onPressSecondary={
+                // if notifications are not enabled show the secondary nav button (skip)
+                notificationsEnabled ? null : onPressSecondary || onPressPrimary // if onPressSecondary exists use it else default onPressPrimary
+              }
+              {...props}
+            />
+          )}
+        </Query>
+      )}
+    </ApolloConsumer>
+  )
+);
+
+AskNotificationsConnected.propTypes = {
+  onPressPrimary: PropTypes.func,
+  onPressSecondary: PropTypes.func,
+};
+
+export default AskNotificationsConnected;
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/AskNotifications/AskNotificationsConnected.tests.js b/apolloschurchapp/src/ui/Onboarding/slides/AskNotifications/AskNotificationsConnected.tests.js
new file mode 100644
index 0000000..5751dee
--- /dev/null
+++ b/apolloschurchapp/src/ui/Onboarding/slides/AskNotifications/AskNotificationsConnected.tests.js
@@ -0,0 +1,53 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+import Providers from 'apolloschurchapp/src/Providers';
+import { getNotificationsEnabled } from 'apolloschurchapp/src/notifications';
+import { renderWithApolloData } from 'apolloschurchapp/src/utils/testUtils';
+
+import AskNotificationsConnected from './AskNotificationsConnected';
+
+describe('The Onboarding AskNotificationsConnected component', () => {
+  it('should render with a user not having granted push notifications permissions', async () => {
+    const mocks = [
+      {
+        request: {
+          query: getNotificationsEnabled,
+        },
+        result: {
+          data: { notificationsEnabled: false },
+        },
+      },
+    ];
+
+    const component = (
+      <Providers mocks={mocks} addTypename={false}>
+        <AskNotificationsConnected onPressPrimary={jest.fn()} />
+      </Providers>
+    );
+
+    const tree = await renderWithApolloData(component);
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render with a user having granted push notifications permissions', async () => {
+    const component = (
+      <Providers
+        resolvers={{ Query: { notificationsEnabled: Promise.resolve(true) } }}
+        addTypename={false}
+      >
+        <AskNotificationsConnected onPressPrimary={jest.fn()} />
+      </Providers>
+    );
+
+    const tree = await renderWithApolloData(component);
+    expect(tree).toMatchSnapshot();
+  });
+
+  it('should render with no data in the cache', () => {
+    const tree = renderer.create(
+      <Providers>
+        <AskNotificationsConnected />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/AskNotifications/index.js b/apolloschurchapp/src/ui/Onboarding/slides/AskNotifications/index.js
new file mode 100644
index 0000000..865e500
--- /dev/null
+++ b/apolloschurchapp/src/ui/Onboarding/slides/AskNotifications/index.js
@@ -0,0 +1,4 @@
+import AskNotifications from './AskNotifications';
+
+export AskNotificationsConnected from './AskNotificationsConnected';
+export default AskNotifications;
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/Features/Features.stories.js b/apolloschurchapp/src/ui/Onboarding/slides/Features/Features.stories.js
new file mode 100644
index 0000000..dfe3aa8
--- /dev/null
+++ b/apolloschurchapp/src/ui/Onboarding/slides/Features/Features.stories.js
@@ -0,0 +1,16 @@
+import React from 'react';
+import { storiesOf } from '@storybook/react-native';
+
+import Features from '.';
+
+storiesOf('Onboarding/slides/Features', module)
+  .add('default', () => <Features />)
+  .add('withImg', () => (
+    <Features imgSrc={{ uri: 'https://picsum.photos/1200/1200?random' }} />
+  ))
+  .add('firstName', () => <Features firstName={'firstName'} />)
+  .add('slideTitle', () => <Features slideTitle={'Custom title text'} />)
+  .add('description', () => (
+    <Features description={'Custom description text'} />
+  ))
+  .add('Slide props', () => <Features onPressPrimary={() => {}} />);
diff --git a/apolloschurchapp/src/ui/LandingScreen/LandingScreen.tests.js b/apolloschurchapp/src/ui/Onboarding/slides/Features/Features.tests.js
similarity index 59%
rename from apolloschurchapp/src/ui/LandingScreen/LandingScreen.tests.js
rename to apolloschurchapp/src/ui/Onboarding/slides/Features/Features.tests.js
index 13e64f1..8ff8bf6 100644
--- a/apolloschurchapp/src/ui/LandingScreen/LandingScreen.tests.js
+++ b/apolloschurchapp/src/ui/Onboarding/slides/Features/Features.tests.js
@@ -1,54 +1,48 @@
 import React from 'react';
 import renderer from 'react-test-renderer';
-import { GradientOverlayImage } from '@apollosproject/ui-kit';
 
 import Providers from 'apolloschurchapp/src/Providers';
 
-import LandingScreen from '.';
+import Features from '.';
 
-describe('The Onboarding LandingScreen component', () => {
+describe('The Onboarding SlideWrapper component', () => {
   it('should render', () => {
     const tree = renderer.create(
       <Providers>
-        <LandingScreen />
+        <Features />
       </Providers>
     );
     expect(tree).toMatchSnapshot();
   });
-  it('should render a custom title', () => {
+  it('should render a custom image', () => {
     const tree = renderer.create(
       <Providers>
-        <LandingScreen slideTitle={'Custom title text'} />
+        <Features imgSrc={{ uri: 'https://picsum.photos/1200/1200?random' }} />
       </Providers>
     );
     expect(tree).toMatchSnapshot();
   });
-  it('should render a custom description', () => {
+
+  it('should render a custom first name', () => {
     const tree = renderer.create(
       <Providers>
-        <LandingScreen description={'Custom description text'} />
+        <Features firstName={'firstName'} />
       </Providers>
     );
     expect(tree).toMatchSnapshot();
   });
-  it('should render with a custom text color', () => {
+  it('should render a custom title', () => {
     const tree = renderer.create(
       <Providers>
-        <LandingScreen textColor={'salmon'} />
+        <Features slideTitle={'Custom title text'} />
       </Providers>
     );
     expect(tree).toMatchSnapshot();
   });
-  it('should render with an ImageComponent', () => {
+  it('should render a custom description', () => {
     const tree = renderer.create(
       <Providers>
-        <LandingScreen
-          BackgroundComponent={
-            <GradientOverlayImage
-              source={'https://picsum.photos/375/812/?random'}
-            />
-          }
-        />
+        <Features description={'Custom description text'} />
       </Providers>
     );
     expect(tree).toMatchSnapshot();
@@ -56,7 +50,7 @@ describe('The Onboarding LandingScreen component', () => {
   it('should pass additional props to Slide', () => {
     const tree = renderer.create(
       <Providers>
-        <LandingScreen onPressPrimary={jest.fn()} />
+        <Features onPressPrimary={jest.fn()} />
       </Providers>
     );
     expect(tree).toMatchSnapshot();
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/Features/index.js b/apolloschurchapp/src/ui/Onboarding/slides/Features/index.js
new file mode 100644
index 0000000..f07cb75
--- /dev/null
+++ b/apolloschurchapp/src/ui/Onboarding/slides/Features/index.js
@@ -0,0 +1,62 @@
+import React, { memo } from 'react';
+import { Image, View } from 'react-native';
+import PropTypes from 'prop-types';
+
+import { styled, H2, H5, PaddedView } from '@apollosproject/ui-kit';
+
+import Slide from '../../Slide';
+
+const Title = styled(({ theme }) => ({
+  color: theme.colors.primary,
+  marginBottom: theme.sizing.baseUnit * 0.5,
+}))(H2);
+
+const StyledH5 = styled(({ theme }) => ({
+  color: theme.colors.text.secondary,
+}))(H5);
+
+const StyledImage = styled(({ theme }) => ({
+  flex: 3,
+  resizeMode: 'contain',
+  marginBottom: theme.sizing.baseUnit,
+}))(Image);
+
+const Content = styled({
+  flex: 1,
+  justifyContent: 'center',
+})(View);
+
+const TextContent = styled({
+  flex: 1,
+  justifyContent: 'center',
+})(PaddedView);
+
+// eslint-disable-next-line react/display-name
+const Features = memo(({ firstName, description, imgSrc, ...props }) => (
+  <Slide {...props}>
+    <Content>
+      {imgSrc ? <StyledImage source={imgSrc} /> : null}
+      <TextContent>
+        <Title>{`Hey ${firstName}!`}</Title>
+        <StyledH5>{description}</StyledH5>
+      </TextContent>
+    </Content>
+  </Slide>
+));
+
+Features.propTypes = {
+  /* The `Swiper` component used in `<onBoarding>` looks for and hijacks the title prop of it's
+   * children. Thus we have to use more unique name.
+   */
+  firstName: PropTypes.string,
+  description: PropTypes.string,
+  imgSrc: PropTypes.string,
+};
+
+Features.defaultProps = {
+  firstName: 'friend',
+  description:
+    "We'd like to help personalize your mobile experience so we can help you with every step on your journey.",
+};
+
+export default Features;
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/LocationFinder/LocationFinder.js b/apolloschurchapp/src/ui/Onboarding/slides/LocationFinder/LocationFinder.js
new file mode 100644
index 0000000..7a07ab4
--- /dev/null
+++ b/apolloschurchapp/src/ui/Onboarding/slides/LocationFinder/LocationFinder.js
@@ -0,0 +1,131 @@
+import React, { memo } from 'react';
+import { View } from 'react-native';
+import PropTypes from 'prop-types';
+
+import {
+  PaddedView,
+  FlexedView,
+  styled,
+  H2,
+  H5,
+  Button,
+  Touchable,
+} from '@apollosproject/ui-kit';
+
+import CampusCard from 'apolloschurchapp/src/user-settings/Locations/CampusCard';
+import Slide from '../../Slide';
+
+const getCampusAddress = (campus) =>
+  `${campus.street1}\n${campus.city}, ${campus.state} ${campus.postalCode}`;
+
+const ContentWrapper = styled({
+  height: '100%',
+})(View);
+
+const Content = styled({
+  justifyContent: 'flex-end',
+})(PaddedView);
+
+const Title = styled(({ theme }) => ({
+  color: theme.colors.primary,
+}))(H2);
+
+const StyledH5 = styled(({ theme }) => ({
+  color: theme.colors.text.secondary,
+  paddingBottom: theme.sizing.baseUnit * 1.5,
+}))(H5);
+
+const StyledCampusCard = styled(({ theme }) => ({
+  marginHorizontal: theme.sizing.baseUnit,
+  marginBottom: theme.sizing.baseUnit,
+}))(CampusCard);
+
+// memo = sfc PureComponent 💥
+// eslint-disable-next-line react/display-name
+const LocationFinder = memo(
+  ({
+    onPressPrimary,
+    children,
+    slideTitle,
+    description,
+    buttonText,
+    buttonDisabled,
+    onPressButton,
+    isCurrentCampus,
+    campus,
+    ...props
+  }) => (
+    <Slide
+      onPressPrimary={
+        campus /* show the primary action button (next) if we have a campus */
+          ? onPressPrimary
+          : null
+      }
+      onPressSecondary={
+        !campus /* show the secondary action button (skip) if we don't have a campus */
+          ? onPressPrimary
+          : null
+      }
+      {...props}
+    >
+      <ContentWrapper>
+        <FlexedView>{children}</FlexedView>
+        <Content>
+          <Title>{slideTitle}</Title>
+          <StyledH5>{description}</StyledH5>
+        </Content>
+        {campus ? (
+          <Touchable onPress={onPressButton}>
+            <StyledCampusCard
+              key={campus.id}
+              distance={campus.distanceFromLocation}
+              title={campus.name}
+              description={getCampusAddress(campus)}
+              images={[campus.image]}
+            />
+          </Touchable>
+        ) : (
+          <Content>
+            <Button
+              title={buttonText}
+              onPress={onPressButton}
+              disabled={buttonDisabled}
+              pill={false}
+            />
+          </Content>
+        )}
+      </ContentWrapper>
+    </Slide>
+  )
+);
+
+LocationFinder.propTypes = {
+  /* The `Swiper` component used in `<Onboarding>` looks for and hijacks the title prop of it's
+   * children. Thus we have to use a more unique name.
+   */
+  onPressPrimary: PropTypes.func,
+  children: PropTypes.oneOfType([
+    PropTypes.arrayOf(PropTypes.node),
+    PropTypes.node,
+  ]),
+  slideTitle: PropTypes.string,
+  description: PropTypes.string,
+  buttonText: PropTypes.string,
+  buttonDisabled: PropTypes.bool,
+  onPressButton: PropTypes.func,
+  campus: PropTypes.oneOfType([
+    PropTypes.arrayOf(PropTypes.node),
+    PropTypes.node,
+  ]),
+  isCurrentCampus: PropTypes.bool,
+};
+
+LocationFinder.defaultProps = {
+  slideTitle: "Let's select your local campus",
+  description:
+    "We'll use your location to connect you with your nearby campus and community",
+  buttonText: 'Yes, find my local campus',
+  buttonDisabled: false,
+};
+
+export default LocationFinder;
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/LocationFinder/LocationFinder.stories.js b/apolloschurchapp/src/ui/Onboarding/slides/LocationFinder/LocationFinder.stories.js
new file mode 100644
index 0000000..97a6246
--- /dev/null
+++ b/apolloschurchapp/src/ui/Onboarding/slides/LocationFinder/LocationFinder.stories.js
@@ -0,0 +1,46 @@
+import React from 'react';
+import { storiesOf } from '@storybook/react-native';
+
+import { GradientOverlayImage } from '@apollosproject/ui-kit';
+
+import LocationFinder from './LocationFinder';
+
+storiesOf('Onboarding/slides/LocationFinder', module)
+  .add('default', () => <LocationFinder />)
+  .add('children (image)', () => (
+    <LocationFinder>
+      <GradientOverlayImage source={'https://picsum.photos/640/640/?random'} />
+    </LocationFinder>
+  ))
+  .add('slideTitle', () => <LocationFinder slideTitle={'Custom title text'} />)
+  .add('description', () => (
+    <LocationFinder description={'Custom description text'} />
+  ))
+  .add('campus', () => (
+    <LocationFinder
+      campus={{
+        id: 'Campus:a0f64573eabf00a607bec911794d50fb',
+        name: 'Lyon Estates',
+        latitude: 42.09203,
+        longitude: -88.13289,
+        distanceFromLocation: 88,
+        street1: '9303 Lyon Drive',
+        street2: '',
+        city: 'Hill Valley',
+        state: 'CA',
+        postalCode: '95420',
+        image: {
+          uri: 'https://picsum.photos/300/300/?random',
+        },
+      }}
+    />
+  ))
+  .add('buttonText', () => (
+    <LocationFinder
+      onPressButton={() => {}}
+      buttonText={'Custom button text'}
+    />
+  ))
+  .add('SlideWrapper props', () => (
+    <LocationFinder onPressSecondary={() => {}} />
+  ));
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/LocationFinder/LocationFinder.tests.js b/apolloschurchapp/src/ui/Onboarding/slides/LocationFinder/LocationFinder.tests.js
new file mode 100644
index 0000000..d1a8341
--- /dev/null
+++ b/apolloschurchapp/src/ui/Onboarding/slides/LocationFinder/LocationFinder.tests.js
@@ -0,0 +1,104 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import { GradientOverlayImage } from '@apollosproject/ui-kit';
+import Providers from 'apolloschurchapp/src/Providers';
+
+import LocationFinder from './LocationFinder';
+
+const campus = {
+  id: 'Campus:a0f64573eabf00a607bec911794d50fb',
+  name: 'Chicago Campus',
+  latitude: 42.09203,
+  longitude: -88.13289,
+  distanceFromLocation: null,
+  street1: '67 Algonquin Rd',
+  street2: '',
+  city: 'South Barrington',
+  state: 'IL',
+  postalCode: '60010-6143',
+  image: {
+    uri: 'https://picsum.photos/300/300/?random',
+  },
+};
+
+describe('The Onboarding LocationFinder component', () => {
+  it('should render', () => {
+    const tree = renderer.create(
+      <Providers>
+        <LocationFinder />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render children (image)', () => {
+    const tree = renderer.create(
+      <Providers>
+        <LocationFinder>
+          <GradientOverlayImage
+            source={'https://picsum.photos/640/640/?random'}
+          />
+        </LocationFinder>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a custom title', () => {
+    const tree = renderer.create(
+      <Providers>
+        <LocationFinder slideTitle={'Custom title text'} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a custom description', () => {
+    const tree = renderer.create(
+      <Providers>
+        <LocationFinder description={'Custom description text'} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render with a button', () => {
+    const tree = renderer.create(
+      <Providers>
+        <LocationFinder onPressButton={jest.fn()} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render the button disabled', () => {
+    const tree = renderer.create(
+      <Providers>
+        <LocationFinder
+          onPressButton={jest.fn()}
+          buttonDisabled
+          campus={campus}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a button with custom text', () => {
+    const tree = renderer.create(
+      <Providers>
+        <LocationFinder
+          onPressButton={jest.fn()}
+          buttonText={'Custom button text'}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should pass additional props to Slide component', () => {
+    const tree = renderer.create(
+      <Providers>
+        <LocationFinder
+          onPressSecondary={jest.fn()}
+          secondaryNavText={'Later'}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/LocationFinder/LocationFinderConnected.js b/apolloschurchapp/src/ui/Onboarding/slides/LocationFinder/LocationFinderConnected.js
new file mode 100644
index 0000000..b02c212
--- /dev/null
+++ b/apolloschurchapp/src/ui/Onboarding/slides/LocationFinder/LocationFinderConnected.js
@@ -0,0 +1,47 @@
+import React, { PureComponent } from 'react';
+import PropTypes from 'prop-types';
+import { Query } from 'react-apollo';
+import { withNavigation } from 'react-navigation';
+import getUserCampus from './getUserCampus';
+import LocationFinder from '.';
+
+class LocationFinderConnected extends PureComponent {
+  state = { selectedCampus: false };
+
+  render() {
+    return (
+      <Query query={getUserCampus} fetchPolicy="cache-and-network">
+        {({
+          data: {
+            currentUser: {
+              profile: { campus } = {
+                campus: {},
+              },
+            } = {},
+          } = {},
+        }) => (
+          <LocationFinder
+            onPressButton={async () => {
+              this.setState({ selectedCampus: true });
+              this.props.navigation.navigate('LocationFinderMapView', {
+                onFinished: this.props.onPressPrimary,
+              });
+            }}
+            buttonText={'Yes, find my local campus'}
+            campus={this.state.selectedCampus ? campus : null}
+            onPressPrimary={this.props.onPressPrimary}
+            {...this.props}
+          />
+        )}
+      </Query>
+    );
+  }
+}
+
+LocationFinderConnected.propTypes = {
+  onPressPrimary: PropTypes.func.isRequired,
+};
+
+LocationFinderConnected.displayName = 'LocationFinderConnected';
+
+export default withNavigation(LocationFinderConnected);
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/LocationFinder/LocationFinderConnected.tests.js b/apolloschurchapp/src/ui/Onboarding/slides/LocationFinder/LocationFinderConnected.tests.js
new file mode 100644
index 0000000..7b2cec6
--- /dev/null
+++ b/apolloschurchapp/src/ui/Onboarding/slides/LocationFinder/LocationFinderConnected.tests.js
@@ -0,0 +1,81 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+import Providers from 'apolloschurchapp/src/Providers';
+import { renderWithApolloData } from 'apolloschurchapp/src/utils/testUtils';
+
+import LocationFinderConnected from './LocationFinderConnected';
+import getUserCampus from './getUserCampus';
+
+const navigation = { navigate: jest.fn() };
+describe('The Onboarding LocationFinderConnected component', () => {
+  it('should render with a user not having a campus selected', async () => {
+    const mocks = [
+      {
+        request: {
+          query: getUserCampus,
+        },
+        result: {
+          data: { campus: null },
+        },
+      },
+    ];
+
+    const component = (
+      <Providers mocks={mocks} addTypename={false}>
+        <LocationFinderConnected navigation={navigation} />
+      </Providers>
+    );
+
+    const tree = await renderWithApolloData(component);
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render with a user having selected a campus', async () => {
+    const mocks = [
+      {
+        request: {
+          query: getUserCampus,
+        },
+        result: {
+          data: {
+            campus: {
+              campus: {
+                id: 'Campus:a0f64573eabf00a607bec911794d50fb',
+                name: 'Chicago Campus',
+                latitude: 42.09203,
+                longitude: -88.13289,
+                distanceFromLocation: null,
+                street1: '67 Algonquin Rd',
+                street2: '',
+                city: 'South Barrington',
+                state: 'IL',
+                postalCode: '60010-6143',
+                image: {
+                  uri:
+                    'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3Dede1fb83-968e-4bef-8d77-ad81c96e8a47',
+                },
+              },
+            },
+          },
+        },
+      },
+    ];
+
+    const component = (
+      <Providers mocks={mocks} addTypename={false}>
+        <LocationFinderConnected navigation={navigation} />
+      </Providers>
+    );
+
+    const tree = await renderWithApolloData(component);
+    expect(tree).toMatchSnapshot();
+  });
+
+  it('should render with no data in the cache', () => {
+    const tree = renderer.create(
+      <Providers>
+        <LocationFinderConnected navigation={navigation} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/LocationFinder/LocationFinderMapView.js b/apolloschurchapp/src/ui/Onboarding/slides/LocationFinder/LocationFinderMapView.js
new file mode 100644
index 0000000..3534353
--- /dev/null
+++ b/apolloschurchapp/src/ui/Onboarding/slides/LocationFinder/LocationFinderMapView.js
@@ -0,0 +1,27 @@
+import React, { PureComponent } from 'react';
+import PropTypes from 'prop-types';
+
+import MapView from 'apolloschurchapp/src/user-settings/Locations';
+
+class LocationFinderMapView extends PureComponent {
+  static propTypes = {
+    navigation: PropTypes.shape({
+      getParam: PropTypes.func,
+      navigate: PropTypes.func,
+      goBack: PropTypes.func,
+    }),
+  };
+
+  static navigationOptions = () => ({
+    title: 'LocationFinderMapView',
+    header: null,
+  });
+
+  render() {
+    const { navigation } = this.props;
+    const onFinished = this.props.navigation.getParam('onFinished');
+    return <MapView navigation={navigation} onFinished={onFinished} />;
+  }
+}
+
+export default LocationFinderMapView;
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/LocationFinder/getUserCampus.js b/apolloschurchapp/src/ui/Onboarding/slides/LocationFinder/getUserCampus.js
new file mode 100644
index 0000000..7d5816a
--- /dev/null
+++ b/apolloschurchapp/src/ui/Onboarding/slides/LocationFinder/getUserCampus.js
@@ -0,0 +1,16 @@
+import gql from 'graphql-tag';
+import CampusParts from 'apolloschurchapp/src/user-settings/Locations/campusFragment';
+
+export default gql`
+  query getCurrentCampus {
+    currentUser {
+      id
+      profile {
+        campus {
+          ...CampusParts
+        }
+      }
+    }
+  }
+  ${CampusParts}
+`;
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/LocationFinder/index.js b/apolloschurchapp/src/ui/Onboarding/slides/LocationFinder/index.js
new file mode 100644
index 0000000..5693639
--- /dev/null
+++ b/apolloschurchapp/src/ui/Onboarding/slides/LocationFinder/index.js
@@ -0,0 +1,5 @@
+import LocationFinder from './LocationFinder';
+
+export LocationFinderConnected from './LocationFinderConnected';
+export LocationFinderMapView from './LocationFinderMapView';
+export default LocationFinder;
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/index.js b/apolloschurchapp/src/ui/Onboarding/slides/index.js
new file mode 100644
index 0000000..36d93c7
--- /dev/null
+++ b/apolloschurchapp/src/ui/Onboarding/slides/index.js
@@ -0,0 +1,10 @@
+export AboutYou, { AboutYouConnected } from './AboutYou';
+export AskName, { AskNameConnected } from './AskName';
+export AskNotifications, {
+  AskNotificationsConnected,
+} from './AskNotifications';
+export LocationFinder, {
+  LocationFinderConnected,
+  LocationFinderMapView,
+} from './LocationFinder';
+export Features from './Features';
diff --git a/apolloschurchapp/src/ui/Scripture/ScriptureItem.stories.js b/apolloschurchapp/src/ui/Scripture/ScriptureItem.stories.js
index 4018ce3..c51b7ed 100644
--- a/apolloschurchapp/src/ui/Scripture/ScriptureItem.stories.js
+++ b/apolloschurchapp/src/ui/Scripture/ScriptureItem.stories.js
@@ -1,6 +1,6 @@
 import React from 'react';
 import { ScrollView } from 'react-native';
-import { storiesOf } from '@apollosproject/ui-storybook';
+import { storiesOf } from '@storybook/react-native';
 import { PaddedView } from '@apollosproject/ui-kit';
 
 import ScriptureItem from './ScriptureItem';
diff --git a/apolloschurchapp/src/ui/Scripture/typography/ScriptureText/ScriptureText.stories.js b/apolloschurchapp/src/ui/Scripture/typography/ScriptureText/ScriptureText.stories.js
index ddaa3c7..33ea0d2 100644
--- a/apolloschurchapp/src/ui/Scripture/typography/ScriptureText/ScriptureText.stories.js
+++ b/apolloschurchapp/src/ui/Scripture/typography/ScriptureText/ScriptureText.stories.js
@@ -1,6 +1,6 @@
 import React from 'react';
 import { View } from 'react-native';
-import { storiesOf } from '@apollosproject/ui-storybook';
+import { storiesOf } from '@storybook/react-native';
 
 import ScriptureText from '.';
 
diff --git a/apolloschurchapp/src/ui/Splash/Splash.stories.js b/apolloschurchapp/src/ui/Splash/Splash.stories.js
new file mode 100644
index 0000000..a39677a
--- /dev/null
+++ b/apolloschurchapp/src/ui/Splash/Splash.stories.js
@@ -0,0 +1,20 @@
+import React from 'react';
+import { storiesOf } from '@storybook/react-native';
+
+import Splash from '.';
+
+storiesOf('Splash', module)
+  .add('default', () => <Splash />)
+  .add('imgSrc & !isLight', () => (
+    <Splash
+      imgSrc={{
+        uri: 'https://picsum.photos/1200/1200?random',
+        height: 1200,
+        width: 1200,
+      }}
+      isLight={false}
+    />
+  ))
+  .add('slideTitle', () => <Splash slideTitle={'Custom title text'} />)
+  .add('description', () => <Splash description={'Custom description text'} />)
+  .add('Slide props', () => <Splash onPressPrimary={() => {}} />);
diff --git a/apolloschurchapp/src/ui/Splash/Splash.tests.js b/apolloschurchapp/src/ui/Splash/Splash.tests.js
new file mode 100644
index 0000000..2fa2cdd
--- /dev/null
+++ b/apolloschurchapp/src/ui/Splash/Splash.tests.js
@@ -0,0 +1,56 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import Splash from '.';
+
+describe('The Onboarding Splash component', () => {
+  it('should render', () => {
+    const tree = renderer.create(
+      <Providers>
+        <Splash />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render light text on a dark background', () => {
+    const tree = renderer.create(
+      <Providers>
+        <Splash
+          imgSrc={{
+            uri: 'https://picsum.photos/1200/1200?random',
+            height: 1200,
+            width: 1200,
+          }}
+          isLight={false}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a custom title', () => {
+    const tree = renderer.create(
+      <Providers>
+        <Splash slideTitle={'Custom title text'} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a custom description', () => {
+    const tree = renderer.create(
+      <Providers>
+        <Splash description={'Custom description text'} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should pass additional props to Slide', () => {
+    const tree = renderer.create(
+      <Providers>
+        <Splash onPressPrimary={jest.fn()} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/Splash/index.js b/apolloschurchapp/src/ui/Splash/index.js
new file mode 100644
index 0000000..7e9f6ff
--- /dev/null
+++ b/apolloschurchapp/src/ui/Splash/index.js
@@ -0,0 +1,75 @@
+import React, { memo } from 'react';
+import { Image } from 'react-native';
+import PropTypes from 'prop-types';
+
+import {
+  styled,
+  withTheme,
+  Icon,
+  H1,
+  H4,
+  PaddedView,
+} from '@apollosproject/ui-kit';
+
+import Slide from '../Onboarding/Slide';
+
+const Content = styled({
+  flex: 1,
+  justifyContent: 'center',
+})(PaddedView);
+
+const BrandIcon = withTheme(({ theme, isLight }) => ({
+  name: 'brand-icon',
+  size: theme.sizing.baseUnit * 3.0,
+  fill: isLight ? theme.colors.text.primary : theme.colors.white,
+  style: {
+    marginBottom: theme.sizing.baseUnit,
+  },
+}))(Icon);
+
+const Title = styled(({ theme, isLight }) => ({
+  color: isLight ? theme.colors.text.primary : theme.colors.white,
+  marginBottom: theme.sizing.baseUnit * 2,
+}))(H1);
+
+const CoverImage = styled({
+  resizeMode: 'cover',
+  position: 'absolute',
+})(Image);
+
+const StyledH4 = styled(({ theme, isLight }) => ({
+  color: isLight ? theme.colors.text.primary : theme.colors.white,
+}))(H4);
+
+// eslint-disable-next-line react/display-name
+const Splash = memo(
+  ({ slideTitle, description, imgSrc, isLight, ...props }) => (
+    <Slide {...props}>
+      {imgSrc ? <CoverImage source={imgSrc} /> : null}
+      <Content>
+        <BrandIcon isLight={isLight} />
+        <Title isLight={isLight}>{slideTitle}</Title>
+        <StyledH4 isLight={isLight}>{description}</StyledH4>
+      </Content>
+    </Slide>
+  )
+);
+
+Splash.propTypes = {
+  /* The `Swiper` component used in `<onBoarding>` looks for and hijacks the title prop of it's
+   * children. Thus we have to use more unique name.
+   */
+  slideTitle: PropTypes.string,
+  description: PropTypes.string,
+  imgSrc: PropTypes.string,
+  isLight: PropTypes.boolean,
+};
+
+Splash.defaultProps = {
+  slideTitle: "We're glad you're here.".toUpperCase(),
+  description:
+    "We're not just a building you go to, but a family to belong to.",
+  isLight: true,
+};
+
+export default Splash;
diff --git a/apolloschurchapp/src/ui/UserAvatarView/AvatarForm.js b/apolloschurchapp/src/ui/UserAvatarView/AvatarForm.js
index f4a46fe..684344a 100644
--- a/apolloschurchapp/src/ui/UserAvatarView/AvatarForm.js
+++ b/apolloschurchapp/src/ui/UserAvatarView/AvatarForm.js
@@ -28,9 +28,11 @@ GetPhotoData.propTypes = {
   children: PropTypes.func.isRequired,
 };
 
-const StyledAvatar = styled(({ theme }) => ({
-  marginRight: 0,
-  marginBottom: theme.sizing.baseUnit / 2,
+const StyledAvatar = withTheme(({ theme }) => ({
+  containerStyle: {
+    marginRight: 0,
+    marginBottom: theme.sizing.baseUnit / 2,
+  },
 }))(Avatar);
 
 const RoundTouchable = withTheme(({ theme, size }) => ({
diff --git a/apolloschurchapp/src/ui/UserAvatarView/UserAvatarView.stories.js b/apolloschurchapp/src/ui/UserAvatarView/UserAvatarView.stories.js
index f32c776..76cf42a 100644
--- a/apolloschurchapp/src/ui/UserAvatarView/UserAvatarView.stories.js
+++ b/apolloschurchapp/src/ui/UserAvatarView/UserAvatarView.stories.js
@@ -1,5 +1,5 @@
 import React from 'react';
-import { storiesOf } from '@apollosproject/ui-storybook';
+import { storiesOf } from '@storybook/react-native';
 
 import UserAvatarView from '.';
 
diff --git a/apolloschurchapp/src/ui/UserAvatarView/index.js b/apolloschurchapp/src/ui/UserAvatarView/index.js
index d18a809..51dd27b 100644
--- a/apolloschurchapp/src/ui/UserAvatarView/index.js
+++ b/apolloschurchapp/src/ui/UserAvatarView/index.js
@@ -41,9 +41,7 @@ const UserAvatarView = withIsLoading(
         <H3>
           {firstName} {lastName}
         </H3>
-        {location && (
-          <ChannelLabel icon="pin" label={location} isLoading={isLoading} />
-        )}
+        <ChannelLabel icon="pin" label={location || ''} isLoading={isLoading} />
       </Content>
     </Container>
   )
diff --git a/apolloschurchapp/src/ui/WebBrowser/Browser.android.js b/apolloschurchapp/src/ui/WebBrowser/Browser.android.js
index cc7d39d..49dc211 100644
--- a/apolloschurchapp/src/ui/WebBrowser/Browser.android.js
+++ b/apolloschurchapp/src/ui/WebBrowser/Browser.android.js
@@ -1,9 +1,14 @@
 import { Linking } from 'react-native';
+import { CustomTabs } from 'react-native-custom-tabs';
 
 const Browser = {
-  openURL: async (url) => {
-    if (!Linking.canOpenURL(url)) throw new Error('URL not supported');
-    Linking.openURL(url);
+  openURL: async (url, options = {}) => {
+    try {
+      await CustomTabs.openURL(url, options);
+    } catch (e) {
+      if (!Linking.canOpenURL()) throw new Error('URL not supported');
+      Linking.openURL(url);
+    }
   },
 };
 
diff --git a/apolloschurchapp/src/ui/WebBrowser/Browser.ios.js b/apolloschurchapp/src/ui/WebBrowser/Browser.ios.js
index 0716bff..7de160f 100644
--- a/apolloschurchapp/src/ui/WebBrowser/Browser.ios.js
+++ b/apolloschurchapp/src/ui/WebBrowser/Browser.ios.js
@@ -10,7 +10,7 @@ const Browser = {
         ...options,
       });
     } catch (e) {
-      if (!Linking.canOpenURL(url)) throw new Error('URL not supported');
+      if (!Linking.canOpenURL()) throw new Error('URL not supported');
       Linking.openURL(url);
     }
   },
diff --git a/apolloschurchapp/src/user-settings/Locations/CampusCard.js b/apolloschurchapp/src/user-settings/Locations/CampusCard.js
new file mode 100644
index 0000000..d0af97d
--- /dev/null
+++ b/apolloschurchapp/src/user-settings/Locations/CampusCard.js
@@ -0,0 +1,92 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import { compose, pure } from 'recompose';
+import { Dimensions, View } from 'react-native';
+
+import {
+  Card,
+  ConnectedImage,
+  SideBySideView,
+  withIsLoading,
+  styled,
+  CardContent,
+  H5,
+  H6,
+} from '@apollosproject/ui-kit';
+
+const { width } = Dimensions.get('window');
+
+/* TODO: remove magic number. `theme.sizing.baseUnit * 2.25` This width value is a brittle
+ * calculation of width minus `CampusCard` margins */
+export const CARD_WIDTH = width - 36;
+
+const enhance = compose(
+  withIsLoading,
+  pure
+);
+
+const HorizontalLayout = styled({
+  alignItems: 'center',
+})(SideBySideView);
+
+const HorizontalTextLayout = styled(({ theme }) => ({
+  height: theme.helpers.verticalRhythm(0.875),
+}))(SideBySideView);
+
+const RightColumn = styled(({ theme }) => ({
+  paddingVertical: theme.sizing.baseUnit * 0.85,
+  flex: 1,
+}))(CardContent);
+
+const CampusImage = styled({
+  aspectRatio: 1,
+  height: '100%',
+  alignSelf: 'stretch',
+  resizeMode: 'cover', // This is to make sure images smaller than the ProgressiveImage size will cover
+})(ConnectedImage);
+
+const CampusImageSizer = styled({
+  aspectRatio: 1,
+  height: '100%',
+  alignSelf: 'stretch',
+})(View);
+
+const StyledCard = styled(({ theme }) => ({
+  width: CARD_WIDTH,
+  height: theme.sizing.baseUnit * 6,
+  marginHorizontal: theme.sizing.baseUnit / 4,
+}))(Card);
+
+const CampusCard = enhance(
+  ({ title, description, distance, images, isLoading, ...otherProps }) => (
+    <StyledCard isLoading={isLoading} inHorizontalList {...otherProps}>
+      <HorizontalLayout>
+        {images ? (
+          <CampusImageSizer>
+            <CampusImage source={images} />
+          </CampusImageSizer>
+        ) : null}
+        <RightColumn>
+          <HorizontalTextLayout>
+            <H5>{title}</H5>
+            <H6>
+              {Math.round(distance)}
+              mi
+            </H6>
+          </HorizontalTextLayout>
+          {description ? <H6>{description}</H6> : null}
+        </RightColumn>
+      </HorizontalLayout>
+    </StyledCard>
+  )
+);
+
+CampusCard.propTypes = {
+  title: PropTypes.string.isRequired,
+  description: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),
+  images: PropTypes.any, // eslint-disable-line
+  category: PropTypes.string,
+  isLoading: PropTypes.bool,
+};
+
+export default CampusCard;
diff --git a/apolloschurchapp/src/user-settings/Locations/MapView.js b/apolloschurchapp/src/user-settings/Locations/MapView.js
index b38e1d5..ededd53 100644
--- a/apolloschurchapp/src/user-settings/Locations/MapView.js
+++ b/apolloschurchapp/src/user-settings/Locations/MapView.js
@@ -5,18 +5,11 @@ import SafeAreaView from 'react-native-safe-area-view';
 import RNMapView from 'react-native-maps';
 import { debounce } from 'lodash';
 
-import {
-  Button,
-  PaddedView,
-  styled,
-  withTheme,
-  CampusCard,
-} from '@apollosproject/ui-kit';
+import { Button, PaddedView, styled, withTheme } from '@apollosproject/ui-kit';
 
+import CampusCard, { CARD_WIDTH } from './CampusCard';
 import Marker from './Marker';
 
-const { CARD_WIDTH } = CampusCard;
-
 const ContainerView = styled({
   flex: 1,
 })(View);
diff --git a/apolloschurchapp/src/user-settings/Locations/index.js b/apolloschurchapp/src/user-settings/Locations/index.js
index f8517c3..b4c03b8 100644
--- a/apolloschurchapp/src/user-settings/Locations/index.js
+++ b/apolloschurchapp/src/user-settings/Locations/index.js
@@ -79,12 +79,6 @@ class Location extends PureComponent {
 
   render() {
     const { navigation, onFinished } = this.props;
-    // we should use the `onFinished` from the navigation param, if it exists.
-    const handleFinished = this.props.navigation.getParam(
-      'onFinished',
-      onFinished
-    );
-
     return (
       <Query
         query={getAllCampuses}
@@ -132,7 +126,7 @@ class Location extends PureComponent {
                     },
                   });
                   await navigation.goBack();
-                  if (handleFinished) handleFinished();
+                  if (onFinished) onFinished();
                 }}
               />
             )}
diff --git a/apolloschurchapp/storybook/.babelrc b/apolloschurchapp/storybook/.babelrc
new file mode 100644
index 0000000..cfb9634
--- /dev/null
+++ b/apolloschurchapp/storybook/.babelrc
@@ -0,0 +1 @@
+{ "presets": ["module:metro-react-native-babel-preset"] }
diff --git a/apolloschurchapp/storybook/Welcome/Intro.js b/apolloschurchapp/storybook/Welcome/Intro.js
deleted file mode 100644
index 2e8b8d7..0000000
--- a/apolloschurchapp/storybook/Welcome/Intro.js
+++ /dev/null
@@ -1,43 +0,0 @@
-import React from 'react';
-import { Paragraph, BodyText } from '@apollosproject/ui-kit';
-
-import { Slide, SlideContent } from '@apollosproject/ui-onboarding';
-
-const Intro = () => (
-  <Slide>
-    <SlideContent title={`Welcome to ${'\n'}Apollos Storybook!`} icon>
-      <Paragraph>
-        <BodyText>
-          Storybook is the component workshop for the Apollos app platform.
-        </BodyText>
-      </Paragraph>
-      <Paragraph>
-        <BodyText>
-          A story is a single state of one or more UI components. You can have
-          as many stories as you want.
-        </BodyText>
-      </Paragraph>
-      <Paragraph>
-        <BodyText>
-          We use Storybook to help document UI and to serve as visual test cases
-          for different states.
-        </BodyText>
-      </Paragraph>
-      <Paragraph>
-        <BodyText>
-          Open the navigator using the navigation bar at the bottom of the
-          screen to navigate the available stories.
-        </BodyText>
-      </Paragraph>
-      <Paragraph>
-        <BodyText>
-          The stories defined inside of your app will be listed first, with
-          Apollos UI stories below them. If you setup a theme, all of the
-          stories will reflect your theme.
-        </BodyText>
-      </Paragraph>
-    </SlideContent>
-  </Slide>
-);
-
-export default Intro;
diff --git a/apolloschurchapp/storybook/Welcome/Welcome.stories.js b/apolloschurchapp/storybook/Welcome/Welcome.stories.js
new file mode 100644
index 0000000..f1c9a65
--- /dev/null
+++ b/apolloschurchapp/storybook/Welcome/Welcome.stories.js
@@ -0,0 +1,9 @@
+import React from 'react';
+import { storiesOf } from '@storybook/react-native';
+import { linkTo } from '@storybook/addon-links';
+
+import Welcome from '.';
+
+storiesOf('Welcome', module).add('to Storybook', () => (
+  <Welcome showApp={linkTo('Button')} />
+));
diff --git a/apolloschurchapp/storybook/Welcome/index.js b/apolloschurchapp/storybook/Welcome/index.js
index 6c1e852..78f7086 100644
--- a/apolloschurchapp/storybook/Welcome/index.js
+++ b/apolloschurchapp/storybook/Welcome/index.js
@@ -1,9 +1,57 @@
 import React from 'react';
-import { storiesOf } from '@apollosproject/ui-storybook';
+import PropTypes from 'prop-types';
+import { View, Text } from 'react-native';
 
-import App from '../../src';
-import Intro from './Intro';
+export default class Welcome extends React.Component {
+  styles = {
+    wrapper: {
+      flex: 1,
+      padding: 24,
+      justifyContent: 'center',
+    },
+    header: {
+      fontSize: 18,
+      marginBottom: 18,
+    },
+    content: {
+      fontSize: 12,
+      marginBottom: 10,
+      lineHeight: 18,
+    },
+  };
 
-storiesOf('Storybook', module)
-  .add('Welcome', () => <Intro />)
-  .add('App', () => <App />);
+  showApp(event) {
+    event.preventDefault();
+    if (this.props.showApp) this.props.showApp();
+  }
+
+  render() {
+    return (
+      <View style={this.styles.wrapper}>
+        <Text style={this.styles.header}>
+          Welcome to React Native Storybook
+        </Text>
+        <Text style={this.styles.content}>
+          This is a UI Component development environment for your React Native
+          app. Here you can display and interact with your UI components as
+          stories. A story is a single state of one or more UI components. You
+          can have as many stories as you want. In other words a story is like a
+          visual test case.
+        </Text>
+        <Text style={this.styles.content}>
+          We have added some stories inside the &quot;storybook/stories&quot;
+          directory for examples. Try editing the
+          &quot;storybook/stories/Welcome.js&quot; file to edit this message.
+        </Text>
+      </View>
+    );
+  }
+}
+
+Welcome.defaultProps = {
+  showApp: null,
+};
+
+Welcome.propTypes = {
+  showApp: PropTypes.func,
+};
diff --git a/apolloschurchapp/storybook/addons.js b/apolloschurchapp/storybook/addons.js
new file mode 100644
index 0000000..6aed412
--- /dev/null
+++ b/apolloschurchapp/storybook/addons.js
@@ -0,0 +1,2 @@
+import '@storybook/addon-actions/register';
+import '@storybook/addon-links/register';
diff --git a/apolloschurchapp/storybook/index.android.js b/apolloschurchapp/storybook/index.android.js
new file mode 100644
index 0000000..f0513c5
--- /dev/null
+++ b/apolloschurchapp/storybook/index.android.js
@@ -0,0 +1,3 @@
+import StorybookUI from './storybook';
+
+export default StorybookUI;
diff --git a/apolloschurchapp/storybook/index.ios.js b/apolloschurchapp/storybook/index.ios.js
new file mode 100644
index 0000000..f0513c5
--- /dev/null
+++ b/apolloschurchapp/storybook/index.ios.js
@@ -0,0 +1,3 @@
+import StorybookUI from './storybook';
+
+export default StorybookUI;
diff --git a/apolloschurchapp/storybook/index.js b/apolloschurchapp/storybook/index.js
index bcb07cf..f0513c5 100644
--- a/apolloschurchapp/storybook/index.js
+++ b/apolloschurchapp/storybook/index.js
@@ -1,21 +1,3 @@
-import StorybookUI, {
-  loadApollosStories,
-  addApollosProviderDecorator,
-  configure,
-} from '@apollosproject/ui-storybook';
-import SplashScreen from 'react-native-splash-screen';
-import Providers from '../src/Providers';
-
-import { loadStories } from './storyLoader';
-
-addApollosProviderDecorator(Providers);
-
-configure(() => {
-  require('./Welcome');
-  loadStories();
-  loadApollosStories();
-
-  SplashScreen.hide();
-}, module);
+import StorybookUI from './storybook';
 
 export default StorybookUI;
diff --git a/apolloschurchapp/storybook/storybook.js b/apolloschurchapp/storybook/storybook.js
new file mode 100644
index 0000000..19be073
--- /dev/null
+++ b/apolloschurchapp/storybook/storybook.js
@@ -0,0 +1,35 @@
+import React, { Component } from 'react';
+import { AppRegistry } from 'react-native';
+import {
+  getStorybookUI,
+  configure,
+  addDecorator,
+} from '@storybook/react-native';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+// storyLoader.js is generated on storybook start. next line disabled for CI test.
+import { loadStories } from './storyLoader'; // eslint-disable-line
+
+addDecorator((renderStorybook) => <Providers>{renderStorybook()}</Providers>);
+
+// import stories
+configure(() => {
+  loadStories();
+}, module);
+
+// This assumes that storybook is running on the same host as your RN packager,
+// to set manually use, e.g. host: 'localhost' option
+const StorybookUIRoot = getStorybookUI({ port: 7007, onDeviceUI: true });
+
+// react-native hot module loader must take in a Class - https://github.com/facebook/react-native/issues/10991
+// https://github.com/storybooks/storybook/issues/2081
+// eslint-disable-next-line react/prefer-stateless-function
+class StorybookUIHMRRoot extends Component {
+  render() {
+    return <StorybookUIRoot />;
+  }
+}
+
+AppRegistry.registerComponent('apolloschurchapp', () => StorybookUIHMRRoot);
+export default StorybookUIHMRRoot;
