diff --git a/apolloschurchapp/.babelrc b/apolloschurchapp/.babelrc
deleted file mode 100644
index 25c8292..0000000
--- a/apolloschurchapp/.babelrc
+++ /dev/null
@@ -1,9 +0,0 @@
-{
-  "presets": ["module:metro-react-native-babel-preset", "module:react-native-dotenv"],
-  "plugins": [
-    ["@babel/plugin-proposal-decorators", {
-      "legacy": true
-    }],
-    ["@babel/plugin-proposal-export-default-from"]
-  ]
-}
\ No newline at end of file
diff --git a/apolloschurchapp/.env.production b/apolloschurchapp/.env.production
index 4dde734..8f2e35f 100644
--- a/apolloschurchapp/.env.production
+++ b/apolloschurchapp/.env.production
@@ -1,3 +1,5 @@
-APP_DATA_URL=https://apollos-church-api.now.sh
+APP_DATA_URL=https://apollos-church-api-herokuapp-com.global.ssl.fastly.net/
 ONE_SIGNAL_KEY=$ONE_SIGNAL_KEY
-ANDROID_URL=doesnotmatter
\ No newline at end of file
+GOOGLE_MAPS_API_KEY=$GOOGLE_MAPS_API_KEY
+STORYBOOK=$STORYBOOK
+SCHEMA_VERSION=$SCHEMA_VERSION
\ No newline at end of file
diff --git a/apolloschurchapp/.flowconfig b/apolloschurchapp/.flowconfig
index 1043c82..1319ea1 100644
--- a/apolloschurchapp/.flowconfig
+++ b/apolloschurchapp/.flowconfig
@@ -11,20 +11,26 @@
 ; Ignore duplicate module providers
 ; For RN Apps installed via npm, "Libraries" folder is inside
 ; "node_modules/react-native" but in the source repo it is in the root
-.*/Libraries/react-native/React.js
+node_modules/react-native/Libraries/react-native/React.js
 
 ; Ignore polyfills
-.*/Libraries/polyfills/.*
+node_modules/react-native/Libraries/polyfills/.*
 
-; Ignore metro
-.*/node_modules/metro/.*
+; These should not be required directly
+; require from fbjs/lib instead: require('fbjs/lib/warning')
+node_modules/warning/.*
+
+; Flow doesn't support platforms
+.*/Libraries/Utilities/HMRLoadingView.js
+
+[untyped]
+.*/node_modules/@react-native-community/cli/.*/.*
 
 [include]
 
 [libs]
 node_modules/react-native/Libraries/react-native/react-native-interface.js
 node_modules/react-native/flow/
-node_modules/react-native/flow-github/
 
 [options]
 emoji=true
@@ -32,6 +38,10 @@ emoji=true
 esproposal.optional_chaining=enable
 esproposal.nullish_coalescing=enable
 
+module.file_ext=.js
+module.file_ext=.json
+module.file_ext=.ios.js
+
 module.system=haste
 module.system.haste.use_name_reducers=true
 # get basename
@@ -44,27 +54,46 @@ module.system.haste.name_reducers='^\(.*\)\.android$' -> '\1'
 module.system.haste.name_reducers='^\(.*\)\.native$' -> '\1'
 module.system.haste.paths.blacklist=.*/__tests__/.*
 module.system.haste.paths.blacklist=.*/__mocks__/.*
-module.system.haste.paths.blacklist=<PROJECT_ROOT>/node_modules/react-native/Libraries/Animated/src/polyfills/.*
 module.system.haste.paths.whitelist=<PROJECT_ROOT>/node_modules/react-native/Libraries/.*
+module.system.haste.paths.whitelist=<PROJECT_ROOT>/node_modules/react-native/RNTester/.*
+module.system.haste.paths.whitelist=<PROJECT_ROOT>/node_modules/react-native/IntegrationTests/.*
+module.system.haste.paths.blacklist=<PROJECT_ROOT>/node_modules/react-native/Libraries/react-native/react-native-implementation.js
+module.system.haste.paths.blacklist=<PROJECT_ROOT>/node_modules/react-native/Libraries/Animated/src/polyfills/.*
 
 munge_underscores=true
 
 module.name_mapper='^[./a-zA-Z0-9$_-]+\.\(bmp\|gif\|jpg\|jpeg\|png\|psd\|svg\|webp\|m4v\|mov\|mp4\|mpeg\|mpg\|webm\|aac\|aiff\|caf\|m4a\|mp3\|wav\|html\|pdf\)$' -> 'RelativeImageStub'
 
-module.file_ext=.js
-module.file_ext=.jsx
-module.file_ext=.json
-module.file_ext=.native.js
-
 suppress_type=$FlowIssue
 suppress_type=$FlowFixMe
 suppress_type=$FlowFixMeProps
 suppress_type=$FlowFixMeState
 
-suppress_comment=\\(.\\|\n\\)*\\$FlowFixMe\\($\\|[^(]\\|(\\(<VERSION>\\)? *\\(site=[a-z,_]*react_native[a-z,_]*\\)?)\\)
-suppress_comment=\\(.\\|\n\\)*\\$FlowIssue\\((\\(<VERSION>\\)? *\\(site=[a-z,_]*react_native[a-z,_]*\\)?)\\)?:? #[0-9]+
-suppress_comment=\\(.\\|\n\\)*\\$FlowFixedInNextDeploy
+suppress_comment=\\(.\\|\n\\)*\\$FlowFixMe\\($\\|[^(]\\|(\\(<VERSION>\\)? *\\(site=[a-z,_]*react_native\\(_ios\\)?_\\(oss\\|fb\\)[a-z,_]*\\)?)\\)
+suppress_comment=\\(.\\|\n\\)*\\$FlowIssue\\((\\(<VERSION>\\)? *\\(site=[a-z,_]*react_native\\(_ios\\)?_\\(oss\\|fb\\)[a-z,_]*\\)?)\\)?:? #[0-9]+
 suppress_comment=\\(.\\|\n\\)*\\$FlowExpectedError
 
+[lints]
+sketchy-null-number=warn
+sketchy-null-mixed=warn
+sketchy-number=warn
+untyped-type-import=warn
+nonstrict-import=warn
+deprecated-type=warn
+unsafe-getters-setters=warn
+inexact-spread=warn
+unnecessary-invariant=warn
+signature-verification-failure=warn
+deprecated-utility=error
+
+[strict]
+deprecated-type
+nonstrict-import
+sketchy-null
+unclear-type
+unsafe-getters-setters
+untyped-import
+untyped-type-import
+
 [version]
-^0.78.0
+^0.98.0
diff --git a/apolloschurchapp/.gitignore b/apolloschurchapp/.gitignore
index 12c1116..1401c87 100644
--- a/apolloschurchapp/.gitignore
+++ b/apolloschurchapp/.gitignore
@@ -45,3 +45,6 @@ project.xcworkspace
 .env.development.local
 .env.test.local
 .env.production.local
+
+# CocoaPods
+/ios/Pods/
\ No newline at end of file
diff --git a/apolloschurchapp/.npmignore b/apolloschurchapp/.npmignore
deleted file mode 100644
index 93f3929..0000000
--- a/apolloschurchapp/.npmignore
+++ /dev/null
@@ -1,2 +0,0 @@
-*
-!lib/**
diff --git a/apolloschurchapp/__mocks__/@react-native-community/async-storage/index.js b/apolloschurchapp/__mocks__/@react-native-community/async-storage/index.js
new file mode 100644
index 0000000..a4bf3f4
--- /dev/null
+++ b/apolloschurchapp/__mocks__/@react-native-community/async-storage/index.js
@@ -0,0 +1,23 @@
+let cache = {};
+export default {
+  setItem: (key, value) =>
+    new Promise((resolve, reject) =>
+      typeof key !== 'string' || typeof value !== 'string'
+        ? reject(new Error('key and value must be string'))
+        : resolve((cache[key] = value))
+    ),
+  getItem: (key, value) =>
+    new Promise((resolve) =>
+      cache.hasOwnProperty(key) ? resolve(cache[key]) : resolve(null)
+    ),
+  removeItem: (key) =>
+    new Promise((resolve, reject) =>
+      cache.hasOwnProperty(key)
+        ? resolve(delete cache[key])
+        : reject('No such key!')
+    ),
+  clear: (key) => new Promise((resolve, reject) => resolve((cache = {}))),
+
+  getAllKeys: (key) =>
+    new Promise((resolve, reject) => resolve(Object.keys(cache))),
+};
diff --git a/apolloschurchapp/__mocks__/@react-native-community/geolocation/index.js b/apolloschurchapp/__mocks__/@react-native-community/geolocation/index.js
new file mode 100644
index 0000000..0e77776
--- /dev/null
+++ b/apolloschurchapp/__mocks__/@react-native-community/geolocation/index.js
@@ -0,0 +1,3 @@
+export default {
+  getCurrentPosition: async () => null,
+};
diff --git a/apolloschurchapp/android/app/BUCK b/apolloschurchapp/android/app/BUCK
index 5392fca..de2c2e2 100644
--- a/apolloschurchapp/android/app/BUCK
+++ b/apolloschurchapp/android/app/BUCK
@@ -8,23 +8,13 @@
 # - `buck install -r android/app` - compile, install and run application
 #
 
+load(":build_defs.bzl", "create_aar_targets", "create_jar_targets")
+
 lib_deps = []
 
-for jarfile in glob(['libs/*.jar']):
-  name = 'jars__' + jarfile[jarfile.rindex('/') + 1: jarfile.rindex('.jar')]
-  lib_deps.append(':' + name)
-  prebuilt_jar(
-    name = name,
-    binary_jar = jarfile,
-  )
+create_aar_targets(glob(["libs/*.aar"]))
 
-for aarfile in glob(['libs/*.aar']):
-  name = 'aars__' + aarfile[aarfile.rindex('/') + 1: aarfile.rindex('.aar')]
-  lib_deps.append(':' + name)
-  android_prebuilt_aar(
-    name = name,
-    aar = aarfile,
-  )
+create_jar_targets(glob(["libs/*.jar"]))
 
 android_library(
     name = "all-libs",
diff --git a/apolloschurchapp/android/app/build.gradle b/apolloschurchapp/android/app/build.gradle
index 6be0c59..77d8bc8 100644
--- a/apolloschurchapp/android/app/build.gradle
+++ b/apolloschurchapp/android/app/build.gradle
@@ -10,6 +10,12 @@ buildscript {
 apply plugin: 'com.onesignal.androidsdk.onesignal-gradle-plugin'
 apply plugin: "com.android.application"
 
+project.ext.envConfigFiles = [
+    release: ".env.production",
+]
+
+apply from: project(':react-native-config').projectDir.getPath() + "/dotenv.gradle"
+
 import com.android.build.OutputFile
 
 /**
@@ -53,6 +59,9 @@ import com.android.build.OutputFile
  *   // the root of your project, i.e. where "package.json" lives
  *   root: "../../",
  *
+ *   // https://facebook.github.io/react-native/docs/performance#enable-the-ram-format
+ *   bundleCommand: "ram-bundle",
+ *
  *   // where to put the JS bundle asset in debug mode
  *   jsBundleDirDebug: "$buildDir/intermediates/assets/debug",
  *
@@ -83,7 +92,8 @@ import com.android.build.OutputFile
  */
 
 project.ext.react = [
-    entryFile: "index.js"
+    entryFile: "index.js",
+    enableHermes: false,  // clean and rebuild if changing
 ]
 
 apply from: "../../node_modules/react-native/react.gradle"
@@ -103,26 +113,52 @@ def enableSeparateBuildPerCPUArchitecture = false
  */
 def enableProguardInReleaseBuilds = false
 
+/**
+ * The preferred build flavor of JavaScriptCore.
+ *
+ * For example, to use the international variant, you can use:
+ * `def jscFlavor = 'org.webkit:android-jsc-intl:+'`
+ *
+ * The international variant includes ICU i18n library and necessary data
+ * allowing to use e.g. `Date.toLocaleString` and `String.localeCompare` that
+ * give correct results when using with locales other than en-US.  Note that
+ * this variant is about 6MiB larger per architecture than default.
+ */
+def jscFlavor = 'org.webkit:android-jsc:+'
+/**
+ * Whether to enable the Hermes VM.
+ *
+ * This should be set on project.ext.react and mirrored here.  If it is not set
+ * on project.ext.react, JavaScript will not be compiled to Hermes Bytecode
+ * and the benefits of using Hermes will therefore be sharply reduced.
+ */
+def enableHermes = project.ext.react.get("enableHermes", false);
+
 android {
     compileSdkVersion rootProject.ext.compileSdkVersion
-    buildToolsVersion rootProject.ext.buildToolsVersion
+
+    compileOptions {
+        sourceCompatibility JavaVersion.VERSION_1_8
+        targetCompatibility JavaVersion.VERSION_1_8
+    }
 
     defaultConfig {
         applicationId "com.apolloschurch.app"
         minSdkVersion rootProject.ext.minSdkVersion
         targetSdkVersion rootProject.ext.targetSdkVersion
-        versionCode 5
-        versionName "0.7.0"
+        versionCode 23
+        versionName "1.2.0"
         ndk {
-            abiFilters "armeabi-v7a", "x86"
+            abiFilters "armeabi-v7a", "x86", "arm64-v8a", "x86_64"
         }
+        resValue "string", "build_config_package", "com.apolloschurchapp"
     }
     splits {
         abi {
             reset()
             enable enableSeparateBuildPerCPUArchitecture
             universalApk false  // If true, also generate a universal APK
-            include "armeabi-v7a", "x86"
+            include "armeabi-v7a", "x86", "arm64-v8a", "x86_64"
         }
     }
     buildTypes {
@@ -136,7 +172,7 @@ android {
         variant.outputs.each { output ->
             // For each separate APK per architecture, set a unique version code as described here:
             // http://tools.android.com/tech-docs/new-build-system/user-guide/apk-splits
-            def versionCodes = ["armeabi-v7a":1, "x86":2]
+            def versionCodes = ["armeabi-v7a":1, "x86":2, "arm64-v8a": 3, "x86_64": 4]
             def abi = output.getFilter(OutputFile.ABI)
             if (abi != null) {  // null for the universal-debug, universal-release variants
                 output.versionCodeOverride =
@@ -144,22 +180,27 @@ android {
             }
         }
     }
+    packagingOptions {
+        pickFirst '**/armeabi-v7a/libc++_shared.so'
+        pickFirst '**/x86/libc++_shared.so'
+        pickFirst '**/arm64-v8a/libc++_shared.so'
+        pickFirst '**/x86_64/libc++_shared.so'
+        pickFirst '**/x86/libjsc.so'
+        pickFirst '**/armeabi-v7a/libjsc.so'
+    }
 }
 
 dependencies {
-    compile project(':react-native-screens')
-    compile project(':react-native-onesignal')
-    compile project(':react-native-image-picker')
-    compile project(':react-native-music-control')
-    compile project(':react-native-device-info')
-    compile project(':react-native-video')
-    compile project(':react-native-svg')
-    compile project(':react-native-splash-screen')
-    compile project(':react-native-linear-gradient')
-    compile project(':react-native-custom-tabs')
     implementation fileTree(dir: "libs", include: ["*.jar"])
-    implementation "com.android.support:appcompat-v7:${rootProject.ext.supportLibVersion}"
     implementation "com.facebook.react:react-native:+"  // From node_modules
+
+    if (enableHermes) {
+      def hermesPath = "../../node_modules/hermesvm/android/";
+      debugImplementation files(hermesPath + "hermes-debug.aar")
+      releaseImplementation files(hermesPath + "hermes-release.aar")
+    } else {
+      implementation jscFlavor
+    }
 }
 
 // Run this once to be able to run the application with BUCK
@@ -168,3 +209,6 @@ task copyDownloadableDepsToLibs(type: Copy) {
     from configurations.compile
     into 'libs'
 }
+
+
+apply from: file("../../node_modules/@react-native-community/cli-platform-android/native_modules.gradle"); applyNativeModulesAppBuildGradle(project)
diff --git a/apolloschurchapp/android/app/build_defs.bzl b/apolloschurchapp/android/app/build_defs.bzl
new file mode 100644
index 0000000..fff270f
--- /dev/null
+++ b/apolloschurchapp/android/app/build_defs.bzl
@@ -0,0 +1,19 @@
+"""Helper definitions to glob .aar and .jar targets"""
+
+def create_aar_targets(aarfiles):
+    for aarfile in aarfiles:
+        name = "aars__" + aarfile[aarfile.rindex("/") + 1:aarfile.rindex(".aar")]
+        lib_deps.append(":" + name)
+        android_prebuilt_aar(
+            name = name,
+            aar = aarfile,
+        )
+
+def create_jar_targets(jarfiles):
+    for jarfile in jarfiles:
+        name = "jars__" + jarfile[jarfile.rindex("/") + 1:jarfile.rindex(".jar")]
+        lib_deps.append(":" + name)
+        prebuilt_jar(
+            name = name,
+            binary_jar = jarfile,
+        )
diff --git a/apolloschurchapp/android/app/debug.keystore b/apolloschurchapp/android/app/debug.keystore
new file mode 100644
index 0000000000000000000000000000000000000000..364e105ed39fbfd62001429a68140672b06ec0de
GIT binary patch
literal 2257
zcmchYXEfYt8;7T1^dLH$VOTZ%2NOdOH5j5LYLtZ0q7x-V8_6gU5)#7dkq{HTmsfNq
zB3ZqcAxeY^G10@?efK?Q&)M(qInVv!xjx+IKEL}p*K@LYvIzo#AZG>st5|P)<NSTx
zaX4qkKvxgvduLn=+uyMU0?|MKJnRHup=FSw1;fCS5H>KF1_Z;y){W{<7K{nl!CPuE
z_^(!C<zwx~4vkzfMSaP=kxXVvQwM3%Ay_ek2-`cPW95k|{C@Z&h`EF*zn$>(Ol0n8
zK13*rzAtW>(wULKPRYLd7G18F8#1P`V*9`(Poj26eOXYyBVZPno~Cvvhx7vPjAuZo
zF?VD!zB~QG(!zbw#qsxT8%BSpqMZ4f70ZPn-3y$L8{EVbbN9$H`B&Z1quk9tgp5FM
zuxp3pJ0b8u|3+#5bkJ4SRnCF2l7#DyLYXYY8*?OuAwK4E6J{0N=O3QNVzQ$L#FKkR
zi-c@&!nDvezOV$i$Lr}iF$XEcwnybQ6WZrMKuw8gCL^U#D;q3t&HpTbq<OCu4=vvx
z+*t&~u`D?fzM7w1KV(PGnl;+>yD<vfkh#(e<fd+>%vG=TeDlzCT~MXUPC|Leb-Uk+
z=vnMd(|>ld?Fh>V8poP;q;;nc@en$|rnP0ytzD&fFkCeUE^kG9Kx4wUh!!rpjwKDP
zyw_e|a<e3|`{mv3r2M=Y@^U!pm#7j^ThHRQVk?Vnmer%caOEVp(qq~_F)5>^x_w3E
zP}}@$g>*LLJ4i0`Gx)qltL}@;mDv}D*xR^oeWcWdPkW@Uu)B^X&4W1$p6}ze!zudJ
zyiLg@uggoMIArBr*27EZV7djDg@W1MaL+rcZ-lrANJQ%%>u8)ZMWU@R2qtnmG(acP
z0d_^!<x#%Gz}~$zWXeGVMaRb7^24s-QHIx@R~bqYM+=6&K0KNnaD8=`HoL$>t>}5W
zpT`*2NR+0+SpTHb+6Js4b;%LJB;B_-ChhnU5py}iJtku*hm5F0!iql8Hrpcy1aYbT
z1*dKC5ua6pMX@@iO<YVC*(hAY;gal|Q`P50n*yIgxM$AhPpp<)-!cZBBZ}d;v*}Ya
zX#PNA;zxbnMQ@#Ol=y`iwpg-gLhKg+HAR0>NI?Hpr%h;&YaXp9n!ND7-=a%BD7v&g
zOO41M6EbE24mJ#S$Ui0-b<Pg^Ot>rR5M<ND3tGBdHh`%H&yL@xA9_yD8+*q%4YmrD
z;m%{o(%A28w7(ive$sbquebHRW}lET7&a4ndKh^l+NNZxy34<uKagv+RlH<!PhP-(
zUZt+lx~>L%@|ndz^)YLMMV1atna{Fw<;TF@>d&F|!Z>8eg>>hkFrV)W+uv=`^F9^e
zzzM2*oOjT9%gLoub<y5^rO=<NS}R)0)Dr@qml0fp7>%(R57p-`TXFe#oh1_{&N-YN
z<}artH|m=d8TQuKSWE)Z%puU|g|^^NFwC#N=@dPhasyYjoy(fdEVfKR@cXK<O0Jlt
z3A6)hMtVOAow~=y#0-unc_Aq{-*TH#56?JNBQHJ!M$7!ZqD=N)iH}N@p(#?0I;-+p
z5%Wu^=WkB!M?DcOt><c4vmQ<|QmDFDiChNBw>HZV-`06HsP`|Ftx;8<a2I7Rrpa@d
za7$*%uou_c2APjM#XWjjQ9p6NrdKb%k>(YD$fFXumLWbGnu$GMqRncXYY9mwz9$ap
zQtfZB^_BeNYITh^hA7+(XNFox5WMeG_LtJ%*Q}$8VKDI_p8^pqX)}NMb`0e|wgF7D
zuQACY_Ua<1ri{;Jwt@_1sW9zzdgnyh_O#8y+C;LcZq6=4e^cs6KvmK@$vVpKFGbQ=
z$)Eux5C|Fx;Gtmv9^#Y-g@7Rt7*eLp5n!gJmn7&B_L$G?NCN`AP>cXQEz}%F%K<UJ
zjyiYd&$A1hgU;OB!`mm=`+tP)UxeXbgpq?z<G*%BaRKN5>;vUs{+l4Q{}eWW;ATe2
zqvXzxoIDy(u;F2q1JH7Sf;{jy_<s+C2Mhl*lCvKJiU+fT06drhf(L^^DRbV4U;8{q
zwSNgo6s0oXoEZ#m8V_~tgoJ-uE9JT}%4uJC-NUMtH{()HFPE!t^h3BHdSIi`Po!((
z{Xh^oO_Q*YNRv=1ySlG1HE8vK&gSM1J;hi{j~`aC$1miMRE4r7E^V7MMmH*bEj3=9
zti8Pmw`3cR)6th6Y04yOI8^cD3j-%;0^DPdxYgSFEw>j})F+cKlIOmNfjBGHoG^CN
zM|Ho&&X|L-36f}Q-obEACz`sI%2f&k>z5c$2TyTSj~vmO)BW~+N^kt`Jt@R|s!){H
ze1_eCrlNaPkJQhL$WG&iRvF*YG=gXd1IyYQ9ew|iYn7r~g!wOnw;@n42>enAxBv*A
zEmV*N#sxdicyNM=A4<rw+G=O0XVDU$K<*&^8RFTyItvjDau^EYeD~3b=Nh|7dm~%m
zR?Ff+mr>|yaOC5MByts}s_Hpfj|y<6G=o=!3S@eIFKDdpR7|FY>L&Wat&oW&cm&X~
z5Bt>Fcq(fgnvlvLSYg&o6>&f<Cb8<D;~_?*j~^uo1`M+gz-Q8qvWHW%3dm!nySArT
ztI3V0ch+e~E}Ll`j%ID2_g3*Ex(thKv8URgjMB>Y`ODg4`V^lWWD=%oJ#Kbad2u~!
zLECFS*??>|vDsNR&pH=Ze0Eo`sC_G`OjoEKVHY|wmwlX&(XBE<@sx3Hd^gt<UzUXA
z9W!iDc7hl1L;!79D7&$KkM*I;>d-fNwUHsylg06p`U2y_={u}Bc<WnGT`_h0VE8u8
EA81kH<^TWy

literal 0
HcmV?d00001

diff --git a/apolloschurchapp/android/app/proguard-rules.pro b/apolloschurchapp/android/app/proguard-rules.pro
index a92fa17..11b0257 100644
--- a/apolloschurchapp/android/app/proguard-rules.pro
+++ b/apolloschurchapp/android/app/proguard-rules.pro
@@ -8,10 +8,3 @@
 #   http://developer.android.com/guide/developing/tools/proguard.html
 
 # Add any project specific keep options here:
-
-# If your project uses WebView with JS, uncomment the following
-# and specify the fully qualified class name to the JavaScript interface
-# class:
-#-keepclassmembers class fqcn.of.javascript.interface.for.webview {
-#   public *;
-#}
diff --git a/apolloschurchapp/android/app/src/debug/AndroidManifest.xml b/apolloschurchapp/android/app/src/debug/AndroidManifest.xml
new file mode 100644
index 0000000..fa26aa5
--- /dev/null
+++ b/apolloschurchapp/android/app/src/debug/AndroidManifest.xml
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="utf-8"?>
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools">
+
+    <uses-permission android:name="android.permission.SYSTEM_ALERT_WINDOW"/>
+
+    <application android:usesCleartextTraffic="true" tools:targetApi="28" tools:ignore="GoogleAppIndexingWarning" />
+</manifest>
diff --git a/apolloschurchapp/android/app/src/main/AndroidManifest.xml b/apolloschurchapp/android/app/src/main/AndroidManifest.xml
index 988588b..4d1e19d 100644
--- a/apolloschurchapp/android/app/src/main/AndroidManifest.xml
+++ b/apolloschurchapp/android/app/src/main/AndroidManifest.xml
@@ -2,9 +2,10 @@
     package="com.apolloschurchapp">
 
     <uses-permission android:name="android.permission.INTERNET" />
-    <uses-permission android:name="android.permission.SYSTEM_ALERT_WINDOW"/>
+    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
     <uses-permission android:name="android.permission.CAMERA" />
-    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE"/>
+    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION"/>
+    <uses-permission android:name="android.permission.FOREGROUND_SERVICE" />
 
     <application
       android:name=".MainApplication"
@@ -13,28 +14,20 @@
       android:roundIcon="@mipmap/ic_launcher_round"
       android:allowBackup="false"
       android:theme="@style/AppTheme">
+      <meta-data
+        android:name="com.google.android.geo.API_KEY"
+        android:value="@string/GOOGLE_MAPS_API_KEY"/>
       <activity
-        android:name=".LaunchActivity"
-        android:theme="@style/LaunchTheme"
-        android:label="Apollos Church">
+        android:name=".MainActivity"
+        android:label="@string/app_name"
+        android:configChanges="keyboard|keyboardHidden|orientation|screenSize"
+        android:windowSoftInputMode="adjustPan"
+        android:launchMode="singleTask">
         <intent-filter>
             <action android:name="android.intent.action.MAIN" />
             <category android:name="android.intent.category.LAUNCHER" />
         </intent-filter>
-        <intent-filter android:label="filter_react_native">
-          <action android:name="android.intent.action.VIEW" />
-          <category android:name="android.intent.category.DEFAULT" />
-          <category android:name="android.intent.category.BROWSABLE" />
-          <data android:scheme="peopleapp" android:host="people" /> // A
-        </intent-filter>
       </activity>
-      <activity
-        android:name=".MainActivity"
-        android:label="@string/app_name"
-        android:configChanges="keyboard|keyboardHidden|orientation|screenSize"
-        android:windowSoftInputMode="adjustPan"
-        android:launchMode="singleTask"
-      />
       <activity android:name="com.facebook.react.devsupport.DevSettingsActivity" />
     </application>
 
diff --git a/apolloschurchapp/android/app/src/main/java/com/apolloschurchapp/LaunchActivity.java b/apolloschurchapp/android/app/src/main/java/com/apolloschurchapp/LaunchActivity.java
deleted file mode 100644
index 6c4d404..0000000
--- a/apolloschurchapp/android/app/src/main/java/com/apolloschurchapp/LaunchActivity.java
+++ /dev/null
@@ -1,16 +0,0 @@
-package com.apolloschurchapp;
-
-import android.content.Intent;
-import android.os.Bundle;
-import android.support.v7.app.AppCompatActivity;
-
-public class LaunchActivity extends AppCompatActivity {
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-
-        Intent intent = new Intent(this, MainActivity.class);
-        startActivity(intent);
-        finish();
-    }
-}
\ No newline at end of file
diff --git a/apolloschurchapp/android/app/src/main/java/com/apolloschurchapp/MainActivity.java b/apolloschurchapp/android/app/src/main/java/com/apolloschurchapp/MainActivity.java
index 0b9f1ce..27565e6 100644
--- a/apolloschurchapp/android/app/src/main/java/com/apolloschurchapp/MainActivity.java
+++ b/apolloschurchapp/android/app/src/main/java/com/apolloschurchapp/MainActivity.java
@@ -1,12 +1,15 @@
 package com.apolloschurchapp;
 import android.os.Bundle;
 import com.facebook.react.ReactActivity;
+import com.facebook.react.ReactActivityDelegate;
+import com.facebook.react.ReactRootView;
+import com.swmansion.gesturehandler.react.RNGestureHandlerEnabledRootView;
 import org.devio.rn.splashscreen.SplashScreen;
 
 public class MainActivity extends ReactActivity {
     @Override
     protected void onCreate(Bundle savedInstanceState) {
-        SplashScreen.show(this, R.style.SplashScreenTheme);
+        SplashScreen.show(this);
         super.onCreate(savedInstanceState);
     }
     /**
@@ -17,4 +20,14 @@ public class MainActivity extends ReactActivity {
     protected String getMainComponentName() {
         return "apolloschurchapp";
     }
+
+    @Override
+    protected ReactActivityDelegate createReactActivityDelegate() {
+      return new ReactActivityDelegate(this, getMainComponentName()) {
+        @Override
+        protected ReactRootView createRootView() {
+         return new RNGestureHandlerEnabledRootView(MainActivity.this);
+        }
+      };
+    }
 }
diff --git a/apolloschurchapp/android/app/src/main/java/com/apolloschurchapp/MainApplication.java b/apolloschurchapp/android/app/src/main/java/com/apolloschurchapp/MainApplication.java
index 95e9084..0bdd47f 100644
--- a/apolloschurchapp/android/app/src/main/java/com/apolloschurchapp/MainApplication.java
+++ b/apolloschurchapp/android/app/src/main/java/com/apolloschurchapp/MainApplication.java
@@ -1,18 +1,12 @@
 package com.apolloschurchapp;
 
 import android.app.Application;
+import android.util.Log;
 
+import com.facebook.react.PackageList;
+import com.facebook.hermes.reactexecutor.HermesExecutorFactory;
+import com.facebook.react.bridge.JavaScriptExecutorFactory;
 import com.facebook.react.ReactApplication;
-import com.swmansion.rnscreens.RNScreenPackage;
-import com.geektime.rnonesignalandroid.ReactNativeOneSignalPackage;
-import com.imagepicker.ImagePickerPackage;
-import com.tanguyantoine.react.MusicControl;
-import com.learnium.RNDeviceInfo.RNDeviceInfo;
-import com.brentvatne.react.ReactVideoPackage;
-import com.horcrux.svg.SvgPackage;
-import org.devio.rn.splashscreen.SplashScreenReactPackage;
-import com.BV.LinearGradient.LinearGradientPackage;
-import com.github.droibit.android.reactnative.customtabs.CustomTabsPackage;
 import com.facebook.react.ReactNativeHost;
 import com.facebook.react.ReactPackage;
 import com.facebook.react.shell.MainReactPackage;
@@ -31,19 +25,11 @@ public class MainApplication extends Application implements ReactApplication {
 
     @Override
     protected List<ReactPackage> getPackages() {
-      return Arrays.<ReactPackage>asList(
-          new MainReactPackage(),
-            new RNScreenPackage(),
-            new ReactNativeOneSignalPackage(),
-            new ImagePickerPackage(),
-            new MusicControl(),
-            new RNDeviceInfo(),
-            new ReactVideoPackage(),
-            new SvgPackage(),
-            new SplashScreenReactPackage(),
-            new LinearGradientPackage(),
-            new CustomTabsPackage()
-      );
+      @SuppressWarnings("UnnecessaryLocalVariable")
+      List<ReactPackage> packages = new PackageList(this).getPackages();
+      // Packages that cannot be autolinked yet can be added manually here, for example:
+      // packages.add(new MyReactNativePackage());
+      return packages;
     }
 
     @Override
diff --git a/apolloschurchapp/android/app/src/main/res/drawable/background_splash.xml b/apolloschurchapp/android/app/src/main/res/drawable/background_splash.xml
index 4f85728..19383f0 100644
--- a/apolloschurchapp/android/app/src/main/res/drawable/background_splash.xml
+++ b/apolloschurchapp/android/app/src/main/res/drawable/background_splash.xml
@@ -2,7 +2,7 @@
 <layer-list xmlns:android="http://schemas.android.com/apk/res/android">
 
     <item
-        android:drawable="@color/deep_water"/>
+        android:drawable="@color/primary"/>
 
     <item
         android:width="95.28dp"
diff --git a/apolloschurchapp/android/app/src/main/res/layout/launch_screen.xml b/apolloschurchapp/android/app/src/main/res/layout/launch_screen.xml
index 0009481..6e78d8b 100644
--- a/apolloschurchapp/android/app/src/main/res/layout/launch_screen.xml
+++ b/apolloschurchapp/android/app/src/main/res/layout/launch_screen.xml
@@ -3,7 +3,7 @@
     android:orientation="vertical"
     android:layout_width="match_parent"
     android:layout_height="match_parent"
-    android:background="@color/deep_water"
+    android:background="@color/primary"
     android:gravity="center">
 
     <ImageView
diff --git a/apolloschurchapp/android/app/src/main/res/mipmap-hdpi/ic_launcher_round.webp b/apolloschurchapp/android/app/src/main/res/mipmap-hdpi/ic_launcher_round.webp
index 42aa619f04951d7e857d309cb6326bc2479fe766..f77fb4bc60914a3e469a4761dacc5b047738fcca 100644
GIT binary patch
literal 1876
zcmV-a2dnr}Nk&FY2LJ$9MM6+kP&iCL2LJ#sN5Byf+ECE8jpXo$z1;&LA|^nDP?=4%
z|8b#0j?}hoPuphqn3?y9nVFfHq0IIE|4#_mkCh$!tR4+|ug2w8amIdU)pMET24qRH
zP20Ni+4dXSwr$(jzWZD#5C9Nx-nPxzwr!h9(Mq<rWZSmAH8a{a&w(UKZL`akNLGzA
z@B~S=Z5g)JP1bGOw(XK_+qP|ds{=bCPd4GJWW=}4c;6Nj000a)_qL*K+t$1#Z;jP!
zUbBtlEvkCSwrwlI4FG^(b7?%=wr$(CZCkZ%9zYNXg0;f}3+%5DBe!iF*;{Ti+`ez%
zZ&3pfzyJXlz)x?JGyou408niJnGS&c)B6V}wbKI-0l<{>0QBrGw(QTcHkZ{{oNEea
zM)a=>;Fv~D;Ve7UJLxm-2ms`797dJ@yVd2pjp$Vo{8My}`;uLU^e-JTYSL-V;Zl*^
z_2sWGS=G+(Q){w$MtD@VT<R_QlEwQ0$g)^)q-;AH^F&~~_sR*sp*XIXxZkzeDV^uv
zHcjE2O_XX1=hCrLgjXJqd|mlr6{RvoPtXJCs$`~O>d~Aar#e%r82dA^NI;b*k`;6N
zostso#cz1*yT{tmH_y5RJ-6-+jOd-ns0)E(N<^h)PhcgzbCT6iJW@o@E}c8^{||cP
z<C`f7kEqH-+NuvQmFYTa+!TC*X<E7m)s-2Q=6wLa@nC60zf``8sv<UH(|c4`amX?4
z(#txC^@R;8o*oQg>*5(3;lN{}$~ybB=^Y=vhbpSW!*v9w1tn=@+T)K9vm0t4*B5rl
zaP9pAysYlsq7I_cEjoGJd+-`SjwuQ6E-xa$sX)f1y`*6Q#G1?$8SSIswxOeijB~$>
zq>uid8F{1fMMgUh;~jW>x4eA~Mmq5H&Ip4+#dW!fUjjM$>??^J2OblSTi@1{oaTTN
zBqZ99dH)hWyBa7pnFTV~Ep!KYRZNL^M?Sy71OwwsWZqPmFu7-WC%-AYD(YAIIk2}c
zpXk95WcSzv0FM9uv8GZ`eXaSPxBz+W(p^y<;8ehUb$ykTaq(6t$jXZ#1Fv1Wd-0io
zd-9P%#(IKkf4iKN#yG6QZ(l$#zj}@gEVTu(nPFM1ol14-z|%WGZ=5{1$$JhwwL(<k
zt5{noV*+M%W}QlvkZ6PES5itD9cO}u%GxrjaJ(-j0lfOcF_mgyd<o6o1~Dn6G(@A}
zIoY{>rVmFV3jZ&Nm_XQAx+OwAeT$DXDw_Mc@L(dM42VR(BQ6j(hc_bBJroyL<|w>y
zI)_JyL_Qpo21z6OBSP(=*h9sK3Vj69zPneTIBQNJpb<ZSq>igOe9)La;JUPVMKWz@
zZ$d{#wja$X6V+IHpfR07Z$WXIWE$*OL&wD20nIp(AdqM%oRg6LZ(lt_ud|qg^JZrt
zPC_;ka_DDF0z}oB9THMRlmTkzme24cHH|eWDJst*AzQNXhZSD@jgpYQp*FWDjwcCl
z$f0EY=pN~{K3#|jK)`zVQbr*%rw|<Z{6_dV-P|~Rgp@#!3PsubpNt8pm(C(6MCZ^t
zwRntgsi-bNOH)q=MVWVF3V^V-U*Cv+2t@DDnwb;9xA>SO&~otQ(+_3jzi=r2gAOQ=
ztxE4%6FCXl1lFESrw2vgRu6`-c5nwVNvRIXO6OB2066CW2mZs?25X|C@+_gMLsKit
zN<HQz{4W4)&zzU#itFb3(LHrJ{`be0L8JKhRs5hi=Uf5~l&jJQRz!gw6?Ll+IfXGw
z%Bs|X-zF0mIUu-sQ*1@l)YG9N%(Jf0$v;lO6aVlQw;DAR@63S=QD}cug!fA2G`G0b
zC`?*dNI--1o%>32B43M?>Q&S<RPmK9138%}4p5*k>o9L9+?f*jJLM{C%2c<oG=qzr
zUe;kA`J9_vE}dnolzAlSnmFu&Zh3rDrN}okuI8o-K@e^o4QedEs+4%|dxyo+T>u`G
z&K+c{l=#};w8fqz=!rn*;p?zUfgipNwFBL910X%%&aO3m@w?8vrkpR`o+RwDh8H&5
zRU~#<$D0@??X(17L25~xb6ISYZCZbV)Gxs)21t5fUW47UuVt3$nH)%KPI90D2a;fM
z^S0fHep%IuuK3!f15Pc!KnO;MR+8!q_iR$?4?BM8z{a5gpnwgUE4ut1y-gd@pZ(eg
z!Sj=y_KprDz=84!%=gSCRwRz>ru}Q*r_hnM4<LR42h_ms&`SEN*q)tQsr%2w-(S8-
zY|L_i*Z~?~yL~eD-qTop{(<;@h+w>{<GaJ=*eDQy_zrwf0n=GEZu=KgZ{7Em#Sfdq
zxA~Z#&gs&0@7VVV^P24mZNLCYPy=Idm{sGwX(aOaX3_Pl);kY__n)U8e=H3bM?bzR
zh@3m|wZAPkgYgL#AORl%uN9Q?pbsW}U^&(I@q1pk7NWH0%YZYt1c>hdx(!GnP=WTr
O4L`T#9A8WR=9>eIC7pZ#

literal 1056
zcmV+*1mF8oNk&E(1ONb6MM6+kP&iBr1ONapFTe{BH|8jkWLc@do<1N6{}NF0{xZ{b
z!~(;%Z6opaANZ|pNRcEtl49iR1f=7S;!x<Gihx_&wrXXb`vup?C8Q6EAR?s!+94<U
zA!RU#+}$0Xd`|$xA5Z}SDj>iB2oNBFItY-!AgF>WsDlKCKn+w?<9xn)E(|U<E;cp}
zM*WX87X1$!qf|CIvPojoM@G-RBx11XGy2HJrN5EHBxgMLl7*!{B{HdZu}NZdKaWK9
zK4@~1C`bK|MECPBGU{J_h7Ch~BS$v%E^cFoO@c%$4vB1RToN(3Fi?6bK!7gDK&CSB
zIoUe$O_tz76tmrA>x0n=ji>;7*kVF}1lrTJ4Q4*7AFw2#Tn&V|>Z*S<5p__2OF4yO
zf3eS_9aY6~wL8Zbv%9+|+dkW_o42hvyc9p5>+x)YnPxjI%LBcNXSq_IP`%q<_Ly#2
zEl{l38h-wZ8)08$i*0SP|DOJxeh%79JyyE>oy1yIt=s>Xn*RFO{&?>}!nSQ^-im+T
zH^qnA);-&{ZF}pi`mJqiwr$(nA4~E+NsmSJe*)<Lc=u+*t($iTN@HC`X|YmD6_-}j
zHM(}YzDzO8>TkPoqqamjSW<h#DRI42Ib3>OIFeOeq#Q4*&T`;RrE<0M4(ngJa=H8;
zLslu*tE85wQOvxYoSd9ohN=-7;#whR7644(6kZc{?>ZIp@E{X*F;wR}8*xQ(*TQlM
zM_mzCe>+%{tw!Z=I{sS7tBSh^wp%#rsx$>%W-SFUb}E25tjj^Bw{4u<(Eyfh05JFn
zr|m5f$$N^s4FGl@9Rgq-N8OV|ftOhG0E}-}vjI$DT?!=fT;LoV3Sfm&8v$S+=YogG
zcZRbb0QM?%Vkm&+oHITme-CFmfQd>eH5b5`JVuY7D71xf0035*HUq$RMoTDBSQlfZ
zX}{^@Z~zM!U13C_{dxuC08Cbv^8pMyuGb$*6mn5-2LP<L+6n+0^e%=F`S0s3GG$wx
z9tmKE-hDrj_o>#Y5dfws+l2s-t@YGP6#P+Z69BAjx7}u1rS&nG$cX9FnQ7vVZ`bIH
zF^DMiiN--Vx>Msx7!i@@eWBeNXBOKPe(;!#xJP!AoEe#K^C-?R3IEp?tM)?<+q8W3
z3lka9&#c^j7HyEV_s7|RaQ26nY-QxPZuh#sMM^sgi2dB^R_o{30MZRgeAD7i%bUa?
z(iWbiFTHN`eo68OJrbUT@8_L6_dUTQh${l4f4}T@ru*gZ=s-aZ8sRCwo;UNFpZ`h;
zH^^BT9F_L-^}{BeriZV8rbPuya$I^NlQRB%diCP*g9nday!!MfBPr4=$yFKTi-=E7
aP0!3sPfd=G@C8X4fI>=X7*a|>P67a|pzpu{

diff --git a/apolloschurchapp/android/app/src/main/res/mipmap-mdpi/ic_launcher_round.webp b/apolloschurchapp/android/app/src/main/res/mipmap-mdpi/ic_launcher_round.webp
index f77fb4bc60914a3e469a4761dacc5b047738fcca..42aa619f04951d7e857d309cb6326bc2479fe766 100644
GIT binary patch
literal 1056
zcmV+*1mF8oNk&E(1ONb6MM6+kP&iBr1ONapFTe{BH|8jkWLc@do<1N6{}NF0{xZ{b
z!~(;%Z6opaANZ|pNRcEtl49iR1f=7S;!x<Gihx_&wrXXb`vup?C8Q6EAR?s!+94<U
zA!RU#+}$0Xd`|$xA5Z}SDj>iB2oNBFItY-!AgF>WsDlKCKn+w?<9xn)E(|U<E;cp}
zM*WX87X1$!qf|CIvPojoM@G-RBx11XGy2HJrN5EHBxgMLl7*!{B{HdZu}NZdKaWK9
zK4@~1C`bK|MECPBGU{J_h7Ch~BS$v%E^cFoO@c%$4vB1RToN(3Fi?6bK!7gDK&CSB
zIoUe$O_tz76tmrA>x0n=ji>;7*kVF}1lrTJ4Q4*7AFw2#Tn&V|>Z*S<5p__2OF4yO
zf3eS_9aY6~wL8Zbv%9+|+dkW_o42hvyc9p5>+x)YnPxjI%LBcNXSq_IP`%q<_Ly#2
zEl{l38h-wZ8)08$i*0SP|DOJxeh%79JyyE>oy1yIt=s>Xn*RFO{&?>}!nSQ^-im+T
zH^qnA);-&{ZF}pi`mJqiwr$(nA4~E+NsmSJe*)<Lc=u+*t($iTN@HC`X|YmD6_-}j
zHM(}YzDzO8>TkPoqqamjSW<h#DRI42Ib3>OIFeOeq#Q4*&T`;RrE<0M4(ngJa=H8;
zLslu*tE85wQOvxYoSd9ohN=-7;#whR7644(6kZc{?>ZIp@E{X*F;wR}8*xQ(*TQlM
zM_mzCe>+%{tw!Z=I{sS7tBSh^wp%#rsx$>%W-SFUb}E25tjj^Bw{4u<(Eyfh05JFn
zr|m5f$$N^s4FGl@9Rgq-N8OV|ftOhG0E}-}vjI$DT?!=fT;LoV3Sfm&8v$S+=YogG
zcZRbb0QM?%Vkm&+oHITme-CFmfQd>eH5b5`JVuY7D71xf0035*HUq$RMoTDBSQlfZ
zX}{^@Z~zM!U13C_{dxuC08Cbv^8pMyuGb$*6mn5-2LP<L+6n+0^e%=F`S0s3GG$wx
z9tmKE-hDrj_o>#Y5dfws+l2s-t@YGP6#P+Z69BAjx7}u1rS&nG$cX9FnQ7vVZ`bIH
zF^DMiiN--Vx>Msx7!i@@eWBeNXBOKPe(;!#xJP!AoEe#K^C-?R3IEp?tM)?<+q8W3
z3lka9&#c^j7HyEV_s7|RaQ26nY-QxPZuh#sMM^sgi2dB^R_o{30MZRgeAD7i%bUa?
z(iWbiFTHN`eo68OJrbUT@8_L6_dUTQh${l4f4}T@ru*gZ=s-aZ8sRCwo;UNFpZ`h;
zH^^BT9F_L-^}{BeriZV8rbPuya$I^NlQRB%diCP*g9nday!!MfBPr4=$yFKTi-=E7
aP0!3sPfd=G@C8X4fI>=X7*a|>P67a|pzpu{

literal 1876
zcmV-a2dnr}Nk&FY2LJ$9MM6+kP&iCL2LJ#sN5Byf+ECE8jpXo$z1;&LA|^nDP?=4%
z|8b#0j?}hoPuphqn3?y9nVFfHq0IIE|4#_mkCh$!tR4+|ug2w8amIdU)pMET24qRH
zP20Ni+4dXSwr$(jzWZD#5C9Nx-nPxzwr!h9(Mq<rWZSmAH8a{a&w(UKZL`akNLGzA
z@B~S=Z5g)JP1bGOw(XK_+qP|ds{=bCPd4GJWW=}4c;6Nj000a)_qL*K+t$1#Z;jP!
zUbBtlEvkCSwrwlI4FG^(b7?%=wr$(CZCkZ%9zYNXg0;f}3+%5DBe!iF*;{Ti+`ez%
zZ&3pfzyJXlz)x?JGyou408niJnGS&c)B6V}wbKI-0l<{>0QBrGw(QTcHkZ{{oNEea
zM)a=>;Fv~D;Ve7UJLxm-2ms`797dJ@yVd2pjp$Vo{8My}`;uLU^e-JTYSL-V;Zl*^
z_2sWGS=G+(Q){w$MtD@VT<R_QlEwQ0$g)^)q-;AH^F&~~_sR*sp*XIXxZkzeDV^uv
zHcjE2O_XX1=hCrLgjXJqd|mlr6{RvoPtXJCs$`~O>d~Aar#e%r82dA^NI;b*k`;6N
zostso#cz1*yT{tmH_y5RJ-6-+jOd-ns0)E(N<^h)PhcgzbCT6iJW@o@E}c8^{||cP
z<C`f7kEqH-+NuvQmFYTa+!TC*X<E7m)s-2Q=6wLa@nC60zf``8sv<UH(|c4`amX?4
z(#txC^@R;8o*oQg>*5(3;lN{}$~ybB=^Y=vhbpSW!*v9w1tn=@+T)K9vm0t4*B5rl
zaP9pAysYlsq7I_cEjoGJd+-`SjwuQ6E-xa$sX)f1y`*6Q#G1?$8SSIswxOeijB~$>
zq>uid8F{1fMMgUh;~jW>x4eA~Mmq5H&Ip4+#dW!fUjjM$>??^J2OblSTi@1{oaTTN
zBqZ99dH)hWyBa7pnFTV~Ep!KYRZNL^M?Sy71OwwsWZqPmFu7-WC%-AYD(YAIIk2}c
zpXk95WcSzv0FM9uv8GZ`eXaSPxBz+W(p^y<;8ehUb$ykTaq(6t$jXZ#1Fv1Wd-0io
zd-9P%#(IKkf4iKN#yG6QZ(l$#zj}@gEVTu(nPFM1ol14-z|%WGZ=5{1$$JhwwL(<k
zt5{noV*+M%W}QlvkZ6PES5itD9cO}u%GxrjaJ(-j0lfOcF_mgyd<o6o1~Dn6G(@A}
zIoY{>rVmFV3jZ&Nm_XQAx+OwAeT$DXDw_Mc@L(dM42VR(BQ6j(hc_bBJroyL<|w>y
zI)_JyL_Qpo21z6OBSP(=*h9sK3Vj69zPneTIBQNJpb<ZSq>igOe9)La;JUPVMKWz@
zZ$d{#wja$X6V+IHpfR07Z$WXIWE$*OL&wD20nIp(AdqM%oRg6LZ(lt_ud|qg^JZrt
zPC_;ka_DDF0z}oB9THMRlmTkzme24cHH|eWDJst*AzQNXhZSD@jgpYQp*FWDjwcCl
z$f0EY=pN~{K3#|jK)`zVQbr*%rw|<Z{6_dV-P|~Rgp@#!3PsubpNt8pm(C(6MCZ^t
zwRntgsi-bNOH)q=MVWVF3V^V-U*Cv+2t@DDnwb;9xA>SO&~otQ(+_3jzi=r2gAOQ=
ztxE4%6FCXl1lFESrw2vgRu6`-c5nwVNvRIXO6OB2066CW2mZs?25X|C@+_gMLsKit
zN<HQz{4W4)&zzU#itFb3(LHrJ{`be0L8JKhRs5hi=Uf5~l&jJQRz!gw6?Ll+IfXGw
z%Bs|X-zF0mIUu-sQ*1@l)YG9N%(Jf0$v;lO6aVlQw;DAR@63S=QD}cug!fA2G`G0b
zC`?*dNI--1o%>32B43M?>Q&S<RPmK9138%}4p5*k>o9L9+?f*jJLM{C%2c<oG=qzr
zUe;kA`J9_vE}dnolzAlSnmFu&Zh3rDrN}okuI8o-K@e^o4QedEs+4%|dxyo+T>u`G
z&K+c{l=#};w8fqz=!rn*;p?zUfgipNwFBL910X%%&aO3m@w?8vrkpR`o+RwDh8H&5
zRU~#<$D0@??X(17L25~xb6ISYZCZbV)Gxs)21t5fUW47UuVt3$nH)%KPI90D2a;fM
z^S0fHep%IuuK3!f15Pc!KnO;MR+8!q_iR$?4?BM8z{a5gpnwgUE4ut1y-gd@pZ(eg
z!Sj=y_KprDz=84!%=gSCRwRz>ru}Q*r_hnM4<LR42h_ms&`SEN*q)tQsr%2w-(S8-
zY|L_i*Z~?~yL~eD-qTop{(<;@h+w>{<GaJ=*eDQy_zrwf0n=GEZu=KgZ{7Em#Sfdq
zxA~Z#&gs&0@7VVV^P24mZNLCYPy=Idm{sGwX(aOaX3_Pl);kY__n)U8e=H3bM?bzR
zh@3m|wZAPkgYgL#AORl%uN9Q?pbsW}U^&(I@q1pk7NWH0%YZYt1c>hdx(!GnP=WTr
O4L`T#9A8WR=9>eIC7pZ#

diff --git a/apolloschurchapp/android/app/src/main/res/values-v21/styles.xml b/apolloschurchapp/android/app/src/main/res/values-v21/styles.xml
deleted file mode 100644
index 5a4019d..0000000
--- a/apolloschurchapp/android/app/src/main/res/values-v21/styles.xml
+++ /dev/null
@@ -1,18 +0,0 @@
-<resources>
-
-    <!-- Base application theme. -->
-    <style name="AppTheme" parent="Theme.AppCompat.Light.NoActionBar">
-        <!-- Customize your theme here. -->
-    </style>
-
-    <style name="LaunchTheme" parent="Theme.AppCompat.Light.NoActionBar">
-        <item name="android:windowBackground">@drawable/background_splash</item>
-        <item name="android:statusBarColor">@color/deep_water</item>
-    </style>
-
-    <style name="SplashScreenTheme" parent="SplashScreen_SplashTheme">
-        <item name="android:statusBarColor">@color/deep_water</item>
-        <item name="colorPrimaryDark">@color/deep_water</item>
-    </style>
-
-</resources>
diff --git a/apolloschurchapp/android/app/src/main/res/values/colors.xml b/apolloschurchapp/android/app/src/main/res/values/colors.xml
index 348fc25..62a0e92 100644
--- a/apolloschurchapp/android/app/src/main/res/values/colors.xml
+++ b/apolloschurchapp/android/app/src/main/res/values/colors.xml
@@ -1,4 +1,4 @@
 <?xml version="1.0" encoding="utf-8"?>
 <resources>
-    <color name="deep_water">#00676D</color>
-</resources>
\ No newline at end of file
+    <color name="primary">#00676D</color>
+</resources>
diff --git a/apolloschurchapp/android/app/src/main/res/values/styles.xml b/apolloschurchapp/android/app/src/main/res/values/styles.xml
index 328c4be..de75bed 100644
--- a/apolloschurchapp/android/app/src/main/res/values/styles.xml
+++ b/apolloschurchapp/android/app/src/main/res/values/styles.xml
@@ -9,8 +9,4 @@
         <item name="android:windowBackground">@drawable/background_splash</item>
     </style>
 
-    <style name="SplashScreenTheme" parent="SplashScreen_SplashTheme">
-        <item name="android:windowIsTranslucent">true</item>
-    </style>
-
 </resources>
diff --git a/apolloschurchapp/android/build.gradle b/apolloschurchapp/android/build.gradle
index dea1a1c..1881d9d 100644
--- a/apolloschurchapp/android/build.gradle
+++ b/apolloschurchapp/android/build.gradle
@@ -2,22 +2,18 @@
 
 buildscript {
     ext {
-        buildToolsVersion = "27.0.3"
+        buildToolsVersion = "28.0.3"
         minSdkVersion = 16
-        compileSdkVersion = 27
-        targetSdkVersion = 26
-        supportLibVersion = "27.1.1"
+        compileSdkVersion = 28
+        targetSdkVersion = 28
+        supportLibVersion = "28.0.0"
     }
     repositories {
-        jcenter()
-        maven {
-            url 'https://maven.google.com/'
-            name 'Google'
-        }
         google()
+        jcenter()
     }
     dependencies {
-        classpath 'com.android.tools.build:gradle:3.1.4'
+        classpath("com.android.tools.build:gradle:3.4.1")
 
         // NOTE: Do not place your application dependencies here; they belong
         // in the individual module build.gradle files
@@ -27,40 +23,16 @@ buildscript {
 allprojects {
     repositories {
         mavenLocal()
-        maven {
-            url 'https://maven.google.com/'
-            name 'Google'
-        }
-        jcenter()
         google()
+        jcenter()
         maven {
             // All of React Native (JS, Obj-C sources, Android binaries) is installed from npm
-            url "$rootDir/../node_modules/react-native/android"
+            url("$rootDir/../node_modules/react-native/android")
         }
-        maven { url "https://jitpack.io" }
-    }
-}
-
-ext {
-    buildToolsVersion = "26.0.3"
-    minSdkVersion = 16
-    compileSdkVersion = 26
-    targetSdkVersion = 26
-    supportLibVersion = "26.1.0"
-}
-
-subprojects {
-    afterEvaluate { project ->
-        if (project.hasProperty("android")) {
-            android {
-                compileSdkVersion rootProject.ext.compileSdkVersion
-                buildToolsVersion rootProject.ext.buildToolsVersion
-            }
+        maven {
+            // Android JSC is installed from npm
+            url("$rootDir/../node_modules/jsc-android/dist")
         }
+        maven { url "https://jitpack.io" }
     }
 }
-
-task wrapper(type: Wrapper) {
-    gradleVersion = '4.4'
-    distributionUrl = distributionUrl.replace("bin", "all")
-}
diff --git a/apolloschurchapp/android/gradle.properties b/apolloschurchapp/android/gradle.properties
index 89e0d99..ccb748f 100644
--- a/apolloschurchapp/android/gradle.properties
+++ b/apolloschurchapp/android/gradle.properties
@@ -16,3 +16,6 @@
 # This option should only be used with decoupled projects. More details, visit
 # http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects
 # org.gradle.parallel=true
+
+android.useAndroidX=true
+android.enableJetifier=true
\ No newline at end of file
diff --git a/apolloschurchapp/android/gradle.properties.appcenter b/apolloschurchapp/android/gradle.properties.appcenter
index f8c9d46..a50dbd7 100644
--- a/apolloschurchapp/android/gradle.properties.appcenter
+++ b/apolloschurchapp/android/gradle.properties.appcenter
@@ -19,3 +19,5 @@
 
 android.useDeprecatedNdk=true
 android.enableAapt2=false
+android.useAndroidX=true
+android.enableJetifier=true
diff --git a/apolloschurchapp/android/gradle/wrapper/gradle-wrapper.properties b/apolloschurchapp/android/gradle/wrapper/gradle-wrapper.properties
index b6517bb..3c7a7c8 100644
--- a/apolloschurchapp/android/gradle/wrapper/gradle-wrapper.properties
+++ b/apolloschurchapp/android/gradle/wrapper/gradle-wrapper.properties
@@ -2,4 +2,4 @@ distributionBase=GRADLE_USER_HOME
 distributionPath=wrapper/dists
 zipStoreBase=GRADLE_USER_HOME
 zipStorePath=wrapper/dists
-distributionUrl=https\://services.gradle.org/distributions/gradle-4.4-all.zip
+distributionUrl=https\://services.gradle.org/distributions/gradle-5.4.1-all.zip
\ No newline at end of file
diff --git a/apolloschurchapp/android/gradlew b/apolloschurchapp/android/gradlew
index cccdd3d..3e84efe 100755
--- a/apolloschurchapp/android/gradlew
+++ b/apolloschurchapp/android/gradlew
@@ -28,7 +28,7 @@ APP_NAME="Gradle"
 APP_BASE_NAME=`basename "$0"`
 
 # Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
-DEFAULT_JVM_OPTS=""
+DEFAULT_JVM_OPTS='"-Xmx64m" "-Xms64m"'
 
 # Use the maximum available, or set MAX_FD != -1 to use that value.
 MAX_FD="maximum"
diff --git a/apolloschurchapp/android/gradlew.bat b/apolloschurchapp/android/gradlew.bat
index e95643d..1688408 100644
--- a/apolloschurchapp/android/gradlew.bat
+++ b/apolloschurchapp/android/gradlew.bat
@@ -14,7 +14,7 @@ set APP_BASE_NAME=%~n0
 set APP_HOME=%DIRNAME%
 
 @rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
-set DEFAULT_JVM_OPTS=
+set DEFAULT_JVM_OPTS="-Xmx64m" "-Xms64m"
 
 @rem Find java.exe
 if defined JAVA_HOME goto findJavaFromJavaHome
diff --git a/apolloschurchapp/android/settings.gradle b/apolloschurchapp/android/settings.gradle
index e1ecbb9..1ae2310 100644
--- a/apolloschurchapp/android/settings.gradle
+++ b/apolloschurchapp/android/settings.gradle
@@ -1,23 +1,3 @@
 rootProject.name = 'apolloschurchapp'
-include ':react-native-screens'
-project(':react-native-screens').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-screens/android')
-include ':react-native-onesignal'
-project(':react-native-onesignal').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-onesignal/android')
-include ':react-native-image-picker'
-project(':react-native-image-picker').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-image-picker/android')
-include ':react-native-music-control'
-project(':react-native-music-control').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-music-control/android')
-include ':react-native-device-info'
-project(':react-native-device-info').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-device-info/android')
-include ':react-native-video'
-project(':react-native-video').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-video/android-exoplayer')
-include ':react-native-svg'
-project(':react-native-svg').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-svg/android')
-include ':react-native-splash-screen'
-project(':react-native-splash-screen').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-splash-screen/android')
-include ':react-native-linear-gradient'
-project(':react-native-linear-gradient').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-linear-gradient/android')
-include ':react-native-custom-tabs'
-project(':react-native-custom-tabs').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-custom-tabs/android')
-
+apply from: file("../node_modules/@react-native-community/cli-platform-android/native_modules.gradle"); applyNativeModulesSettingsGradle(settings)
 include ':app'
diff --git a/apolloschurchapp/apollos.json b/apolloschurchapp/apollos.json
new file mode 100644
index 0000000..0267479
--- /dev/null
+++ b/apolloschurchapp/apollos.json
@@ -0,0 +1,4 @@
+{
+    "version": "1.2.0-beta.3",
+    "environment": "client"
+}
\ No newline at end of file
diff --git a/apolloschurchapp/appcenter-post-clone.sh b/apolloschurchapp/appcenter-post-clone.sh
index 97b3e73..83862e2 100755
--- a/apolloschurchapp/appcenter-post-clone.sh
+++ b/apolloschurchapp/appcenter-post-clone.sh
@@ -10,4 +10,14 @@ cp $(pwd)/../../yarn.lock $(pwd)/yarn.lock
 
 # Swaps out all placeholder env variables w/ their real values
 # Placeholders look like "$ONE_SIGNAL_KEY"
-grep -o '\$.*' .env.production | sed 's/\$\(.*\)/\1/' | xargs -I {} sh -c "sed -i -e 's/\$"{}"/'$"{}"'/' .env.production"
\ No newline at end of file
+grep -o '\$.*' .env.production | sed 's/\$\(.*\)/\1/' | xargs -I {} sh -c "sed -i -e 's/\$"{}"/'$"{}"'/' .env.production"
+# Make sure ReactNativeConfig picks up values from prod env file.
+cp .env.production .env
+
+echo "Uninstalling all CocoaPods versions"
+sudo gem uninstall cocoapods --all --executables
+
+COCOAPODS_VER=`sed -n -e 's/^COCOAPODS: \([0-9.]*\)/\1/p' ios/Podfile.lock`
+
+echo "Installing CocoaPods version $COCOAPODS_VER"
+sudo gem install cocoapods -v $COCOAPODS_VER
\ No newline at end of file
diff --git a/apolloschurchapp/appcenter-pre-build.sh b/apolloschurchapp/appcenter-pre-build.sh
index c666ab2..93e20b9 100644
--- a/apolloschurchapp/appcenter-pre-build.sh
+++ b/apolloschurchapp/appcenter-pre-build.sh
@@ -4,5 +4,9 @@ droid_dir=$(pwd)/android
 
 cp $droid_dir/gradle.properties.appcenter $droid_dir/gradle.properties
 
-cd ../../
+cd ios
+pod install
+
+cd ../../..
 yarn
+yarn lerna run generate-stories
diff --git a/apolloschurchapp/babel.config.js b/apolloschurchapp/babel.config.js
new file mode 100644
index 0000000..bd83dde
--- /dev/null
+++ b/apolloschurchapp/babel.config.js
@@ -0,0 +1,12 @@
+module.exports = {
+  presets: ['module:metro-react-native-babel-preset'],
+  plugins: [
+    [
+      '@babel/plugin-proposal-decorators',
+      {
+        legacy: true,
+      },
+    ],
+    ['@babel/plugin-proposal-export-default-from'],
+  ],
+};
diff --git a/apolloschurchapp/index.js b/apolloschurchapp/index.js
index d009549..6bfaa01 100644
--- a/apolloschurchapp/index.js
+++ b/apolloschurchapp/index.js
@@ -1,6 +1,23 @@
+import './polyfill'; // this can be removed when we upgrade to react-native 59
 import { AppRegistry, YellowBox } from 'react-native';
+import SplashScreen from 'react-native-splash-screen';
 
-import App from './src';
+import Config from 'react-native-config';
+import Storybook from './storybook';
+import MainApp from './src';
+
+const useStorybook = Config.STORYBOOK === 'true';
+
+let App = MainApp;
+if (useStorybook) {
+  App = Storybook;
+}
+
+// If there's an error before the splash screen goes away, you never see that error.
+// This tries to hide the splash screen so you can see the error.
+// Shouldnt't do anything in Prod.
+// Depending on the error, splash screen might not go away ;)
+global.ErrorUtils.setGlobalHandler(() => SplashScreen.hide());
 
 YellowBox.ignoreWarnings([
   'Warning: isMounted(...) is deprecated',
diff --git a/apolloschurchapp/ios/Podfile b/apolloschurchapp/ios/Podfile
new file mode 100644
index 0000000..354f6da
--- /dev/null
+++ b/apolloschurchapp/ios/Podfile
@@ -0,0 +1,61 @@
+platform :ios, '9.0'
+require_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'
+
+target 'apolloschurchapp' do
+  # Pods for apolloschurchapp
+  pod 'React', :path => '../node_modules/react-native/'
+  pod 'React-Core', :path => '../node_modules/react-native/React'
+  pod 'React-DevSupport', :path => '../node_modules/react-native/React'
+  pod 'React-RCTActionSheet', :path => '../node_modules/react-native/Libraries/ActionSheetIOS'
+  pod 'React-RCTAnimation', :path => '../node_modules/react-native/Libraries/NativeAnimation'
+  pod 'React-RCTBlob', :path => '../node_modules/react-native/Libraries/Blob'
+  pod 'React-RCTImage', :path => '../node_modules/react-native/Libraries/Image'
+  pod 'React-RCTLinking', :path => '../node_modules/react-native/Libraries/LinkingIOS'
+  pod 'React-RCTNetwork', :path => '../node_modules/react-native/Libraries/Network'
+  pod 'React-RCTSettings', :path => '../node_modules/react-native/Libraries/Settings'
+  pod 'React-RCTText', :path => '../node_modules/react-native/Libraries/Text'
+  pod 'React-RCTVibration', :path => '../node_modules/react-native/Libraries/Vibration'
+  pod 'React-RCTWebSocket', :path => '../node_modules/react-native/Libraries/WebSocket'
+
+  pod 'React-cxxreact', :path => '../node_modules/react-native/ReactCommon/cxxreact'
+  pod 'React-jsi', :path => '../node_modules/react-native/ReactCommon/jsi'
+  pod 'React-jsiexecutor', :path => '../node_modules/react-native/ReactCommon/jsiexecutor'
+  pod 'React-jsinspector', :path => '../node_modules/react-native/ReactCommon/jsinspector'
+  pod 'yoga', :path => '../node_modules/react-native/ReactCommon/yoga'
+
+  pod 'DoubleConversion', :podspec => '../node_modules/react-native/third-party-podspecs/DoubleConversion.podspec'
+  pod 'glog', :podspec => '../node_modules/react-native/third-party-podspecs/glog.podspec'
+  pod 'Folly', :podspec => '../node_modules/react-native/third-party-podspecs/Folly.podspec'
+
+  target 'apolloschurchappTests' do
+    inherit! :search_paths
+    # Pods for testing
+  end
+
+  use_native_modules!
+end
+
+target 'apolloschurchapp-tvOS' do
+  # Pods for apolloschurchapp-tvOS
+
+  target 'apolloschurchapp-tvOSTests' do
+    inherit! :search_paths
+    # Pods for testing
+  end
+
+end
+
+post_install do |installer|
+ installer.pods_project.targets.each do |target|
+   if target.name == 'react-native-config'
+     phase = target.project.new(Xcodeproj::Project::Object::PBXShellScriptBuildPhase)
+     phase.shell_script = "cd ../../"\
+     " && RNC_ROOT=./node_modules/react-native-config/"\
+     " && export SYMROOT=$RNC_ROOT/ios/ReactNativeConfig"\
+     " && ruby $RNC_ROOT/ios/ReactNativeConfig/BuildDotenvConfig.ruby"
+
+     target.build_phases << phase
+     target.build_phases.move(phase,0)
+   end
+ end
+end
diff --git a/apolloschurchapp/ios/Podfile.lock b/apolloschurchapp/ios/Podfile.lock
new file mode 100644
index 0000000..0c86a55
--- /dev/null
+++ b/apolloschurchapp/ios/Podfile.lock
@@ -0,0 +1,314 @@
+PODS:
+  - boost-for-react-native (1.63.0)
+  - BVLinearGradient (2.5.4):
+    - React
+  - DoubleConversion (1.1.6)
+  - Folly (2018.10.22.00):
+    - boost-for-react-native
+    - DoubleConversion
+    - Folly/Default (= 2018.10.22.00)
+    - glog
+  - Folly/Default (2018.10.22.00):
+    - boost-for-react-native
+    - DoubleConversion
+    - glog
+  - glog (0.3.5)
+  - OneSignal (2.10.1)
+  - React (0.60.5):
+    - React-Core (= 0.60.5)
+    - React-DevSupport (= 0.60.5)
+    - React-RCTActionSheet (= 0.60.5)
+    - React-RCTAnimation (= 0.60.5)
+    - React-RCTBlob (= 0.60.5)
+    - React-RCTImage (= 0.60.5)
+    - React-RCTLinking (= 0.60.5)
+    - React-RCTNetwork (= 0.60.5)
+    - React-RCTSettings (= 0.60.5)
+    - React-RCTText (= 0.60.5)
+    - React-RCTVibration (= 0.60.5)
+    - React-RCTWebSocket (= 0.60.5)
+  - React-Core (0.60.5):
+    - Folly (= 2018.10.22.00)
+    - React-cxxreact (= 0.60.5)
+    - React-jsiexecutor (= 0.60.5)
+    - yoga (= 0.60.5.React)
+  - React-cxxreact (0.60.5):
+    - boost-for-react-native (= 1.63.0)
+    - DoubleConversion
+    - Folly (= 2018.10.22.00)
+    - glog
+    - React-jsinspector (= 0.60.5)
+  - React-DevSupport (0.60.5):
+    - React-Core (= 0.60.5)
+    - React-RCTWebSocket (= 0.60.5)
+  - React-jsi (0.60.5):
+    - boost-for-react-native (= 1.63.0)
+    - DoubleConversion
+    - Folly (= 2018.10.22.00)
+    - glog
+    - React-jsi/Default (= 0.60.5)
+  - React-jsi/Default (0.60.5):
+    - boost-for-react-native (= 1.63.0)
+    - DoubleConversion
+    - Folly (= 2018.10.22.00)
+    - glog
+  - React-jsiexecutor (0.60.5):
+    - DoubleConversion
+    - Folly (= 2018.10.22.00)
+    - glog
+    - React-cxxreact (= 0.60.5)
+    - React-jsi (= 0.60.5)
+  - React-jsinspector (0.60.5)
+  - react-native-config (0.11.7):
+    - React
+  - react-native-geolocation (2.0.2):
+    - React
+  - react-native-image-picker (0.28.0):
+    - React
+  - react-native-maps (0.25.0):
+    - React
+  - react-native-music-control (0.10.5):
+    - React
+  - react-native-onesignal (3.3.2):
+    - OneSignal (= 2.10.1)
+    - React (< 1.0.0, >= 0.13.0)
+  - react-native-passkit-wallet (0.1.4):
+    - React
+  - react-native-safari-view (1.0.0):
+    - React
+  - react-native-safe-area-context (0.3.6):
+    - React
+  - react-native-splash-screen (3.2.0):
+    - React
+  - react-native-video (5.0.0):
+    - React
+    - react-native-video/Video (= 5.0.0)
+  - react-native-video/Video (5.0.0):
+    - React
+  - react-native-webview (5.10.0):
+    - React
+  - React-RCTActionSheet (0.60.5):
+    - React-Core (= 0.60.5)
+  - React-RCTAnimation (0.60.5):
+    - React-Core (= 0.60.5)
+  - React-RCTBlob (0.60.5):
+    - React-Core (= 0.60.5)
+    - React-RCTNetwork (= 0.60.5)
+    - React-RCTWebSocket (= 0.60.5)
+  - React-RCTImage (0.60.5):
+    - React-Core (= 0.60.5)
+    - React-RCTNetwork (= 0.60.5)
+  - React-RCTLinking (0.60.5):
+    - React-Core (= 0.60.5)
+  - React-RCTNetwork (0.60.5):
+    - React-Core (= 0.60.5)
+  - React-RCTSettings (0.60.5):
+    - React-Core (= 0.60.5)
+  - React-RCTText (0.60.5):
+    - React-Core (= 0.60.5)
+  - React-RCTVibration (0.60.5):
+    - React-Core (= 0.60.5)
+  - React-RCTWebSocket (0.60.5):
+    - React-Core (= 0.60.5)
+  - rn-fetch-blob (0.10.16):
+    - React-Core
+  - RNAirplay (1.0.0):
+    - React
+  - RNCAsyncStorage (1.5.1):
+    - React
+  - RNDeviceInfo (2.1.2):
+    - React
+  - RNGestureHandler (1.3.0):
+    - React
+  - RNInAppBrowser (3.1.0):
+    - React
+  - RNScreens (1.0.0-alpha.23):
+    - React
+  - RNSVG (9.4.0):
+    - React
+  - yoga (0.60.5.React)
+
+DEPENDENCIES:
+  - BVLinearGradient (from `../node_modules/react-native-linear-gradient`)
+  - DoubleConversion (from `../node_modules/react-native/third-party-podspecs/DoubleConversion.podspec`)
+  - Folly (from `../node_modules/react-native/third-party-podspecs/Folly.podspec`)
+  - glog (from `../node_modules/react-native/third-party-podspecs/glog.podspec`)
+  - React (from `../node_modules/react-native/`)
+  - React-Core (from `../node_modules/react-native/React`)
+  - React-cxxreact (from `../node_modules/react-native/ReactCommon/cxxreact`)
+  - React-DevSupport (from `../node_modules/react-native/React`)
+  - React-jsi (from `../node_modules/react-native/ReactCommon/jsi`)
+  - React-jsiexecutor (from `../node_modules/react-native/ReactCommon/jsiexecutor`)
+  - React-jsinspector (from `../node_modules/react-native/ReactCommon/jsinspector`)
+  - react-native-config (from `../node_modules/react-native-config`)
+  - "react-native-geolocation (from `../node_modules/@react-native-community/geolocation`)"
+  - react-native-image-picker (from `../node_modules/react-native-image-picker`)
+  - react-native-maps (from `../node_modules/react-native-maps`)
+  - react-native-music-control (from `../node_modules/react-native-music-control`)
+  - react-native-onesignal (from `../node_modules/react-native-onesignal`)
+  - react-native-passkit-wallet (from `../node_modules/react-native-passkit-wallet`)
+  - react-native-safari-view (from `../node_modules/react-native-safari-view`)
+  - react-native-safe-area-context (from `../node_modules/react-native-safe-area-context`)
+  - react-native-splash-screen (from `../node_modules/react-native-splash-screen`)
+  - react-native-video (from `../node_modules/react-native-video`)
+  - react-native-webview (from `../node_modules/react-native-webview`)
+  - React-RCTActionSheet (from `../node_modules/react-native/Libraries/ActionSheetIOS`)
+  - React-RCTAnimation (from `../node_modules/react-native/Libraries/NativeAnimation`)
+  - React-RCTBlob (from `../node_modules/react-native/Libraries/Blob`)
+  - React-RCTImage (from `../node_modules/react-native/Libraries/Image`)
+  - React-RCTLinking (from `../node_modules/react-native/Libraries/LinkingIOS`)
+  - React-RCTNetwork (from `../node_modules/react-native/Libraries/Network`)
+  - React-RCTSettings (from `../node_modules/react-native/Libraries/Settings`)
+  - React-RCTText (from `../node_modules/react-native/Libraries/Text`)
+  - React-RCTVibration (from `../node_modules/react-native/Libraries/Vibration`)
+  - React-RCTWebSocket (from `../node_modules/react-native/Libraries/WebSocket`)
+  - rn-fetch-blob (from `../node_modules/rn-fetch-blob`)
+  - "RNAirplay (from `../node_modules/@apollosproject/react-native-airplay-btn`)"
+  - "RNCAsyncStorage (from `../node_modules/@react-native-community/async-storage`)"
+  - RNDeviceInfo (from `../node_modules/react-native-device-info`)
+  - RNGestureHandler (from `../node_modules/react-native-gesture-handler`)
+  - RNInAppBrowser (from `../node_modules/react-native-inappbrowser-reborn`)
+  - RNScreens (from `../node_modules/react-native-screens`)
+  - RNSVG (from `../node_modules/react-native-svg`)
+  - yoga (from `../node_modules/react-native/ReactCommon/yoga`)
+
+SPEC REPOS:
+  https://github.com/cocoapods/specs.git:
+    - boost-for-react-native
+    - OneSignal
+
+EXTERNAL SOURCES:
+  BVLinearGradient:
+    :path: "../node_modules/react-native-linear-gradient"
+  DoubleConversion:
+    :podspec: "../node_modules/react-native/third-party-podspecs/DoubleConversion.podspec"
+  Folly:
+    :podspec: "../node_modules/react-native/third-party-podspecs/Folly.podspec"
+  glog:
+    :podspec: "../node_modules/react-native/third-party-podspecs/glog.podspec"
+  React:
+    :path: "../node_modules/react-native/"
+  React-Core:
+    :path: "../node_modules/react-native/React"
+  React-cxxreact:
+    :path: "../node_modules/react-native/ReactCommon/cxxreact"
+  React-DevSupport:
+    :path: "../node_modules/react-native/React"
+  React-jsi:
+    :path: "../node_modules/react-native/ReactCommon/jsi"
+  React-jsiexecutor:
+    :path: "../node_modules/react-native/ReactCommon/jsiexecutor"
+  React-jsinspector:
+    :path: "../node_modules/react-native/ReactCommon/jsinspector"
+  react-native-config:
+    :path: "../node_modules/react-native-config"
+  react-native-geolocation:
+    :path: "../node_modules/@react-native-community/geolocation"
+  react-native-image-picker:
+    :path: "../node_modules/react-native-image-picker"
+  react-native-maps:
+    :path: "../node_modules/react-native-maps"
+  react-native-music-control:
+    :path: "../node_modules/react-native-music-control"
+  react-native-onesignal:
+    :path: "../node_modules/react-native-onesignal"
+  react-native-passkit-wallet:
+    :path: "../node_modules/react-native-passkit-wallet"
+  react-native-safari-view:
+    :path: "../node_modules/react-native-safari-view"
+  react-native-safe-area-context:
+    :path: "../node_modules/react-native-safe-area-context"
+  react-native-splash-screen:
+    :path: "../node_modules/react-native-splash-screen"
+  react-native-video:
+    :path: "../node_modules/react-native-video"
+  react-native-webview:
+    :path: "../node_modules/react-native-webview"
+  React-RCTActionSheet:
+    :path: "../node_modules/react-native/Libraries/ActionSheetIOS"
+  React-RCTAnimation:
+    :path: "../node_modules/react-native/Libraries/NativeAnimation"
+  React-RCTBlob:
+    :path: "../node_modules/react-native/Libraries/Blob"
+  React-RCTImage:
+    :path: "../node_modules/react-native/Libraries/Image"
+  React-RCTLinking:
+    :path: "../node_modules/react-native/Libraries/LinkingIOS"
+  React-RCTNetwork:
+    :path: "../node_modules/react-native/Libraries/Network"
+  React-RCTSettings:
+    :path: "../node_modules/react-native/Libraries/Settings"
+  React-RCTText:
+    :path: "../node_modules/react-native/Libraries/Text"
+  React-RCTVibration:
+    :path: "../node_modules/react-native/Libraries/Vibration"
+  React-RCTWebSocket:
+    :path: "../node_modules/react-native/Libraries/WebSocket"
+  rn-fetch-blob:
+    :path: "../node_modules/rn-fetch-blob"
+  RNAirplay:
+    :path: "../node_modules/@apollosproject/react-native-airplay-btn"
+  RNCAsyncStorage:
+    :path: "../node_modules/@react-native-community/async-storage"
+  RNDeviceInfo:
+    :path: "../node_modules/react-native-device-info"
+  RNGestureHandler:
+    :path: "../node_modules/react-native-gesture-handler"
+  RNInAppBrowser:
+    :path: "../node_modules/react-native-inappbrowser-reborn"
+  RNScreens:
+    :path: "../node_modules/react-native-screens"
+  RNSVG:
+    :path: "../node_modules/react-native-svg"
+  yoga:
+    :path: "../node_modules/react-native/ReactCommon/yoga"
+
+SPEC CHECKSUMS:
+  boost-for-react-native: 39c7adb57c4e60d6c5479dd8623128eb5b3f0f2c
+  BVLinearGradient: 8cbc5155c978f2e43098818c91d206d07aae6d30
+  DoubleConversion: 5805e889d232975c086db112ece9ed034df7a0b2
+  Folly: 30e7936e1c45c08d884aa59369ed951a8e68cf51
+  glog: 1f3da668190260b06b429bb211bfbee5cd790c28
+  OneSignal: 8fb749fa07f88006403c9b659a570fb7fb74519a
+  React: 53c53c4d99097af47cf60594b8706b4e3321e722
+  React-Core: ba421f6b4f4cbe2fb17c0b6fc675f87622e78a64
+  React-cxxreact: 8384287780c4999351ad9b6e7a149d9ed10a2395
+  React-DevSupport: 197fb409737cff2c4f9986e77c220d7452cb9f9f
+  React-jsi: 4d8c9efb6312a9725b18d6fc818ffc103f60fec2
+  React-jsiexecutor: 90ad2f9db09513fc763bc757fdc3c4ff8bde2a30
+  React-jsinspector: e08662d1bf5b129a3d556eb9ea343a3f40353ae4
+  react-native-config: 55548054279d92e0e4566ea15a8b9b81028ec342
+  react-native-geolocation: c956aeb136625c23e0dce0467664af2c437888c9
+  react-native-image-picker: e6e06d4315e3c85bad17e4b2002cd29f11d202c8
+  react-native-maps: 190c02ca533fddac5bb49cf17bdece3644612107
+  react-native-music-control: 700e53dc9b2ec7342f69705243609c1cd644fa44
+  react-native-onesignal: 8958311abbd9125f26e600914e48833b57321cbf
+  react-native-passkit-wallet: 51e3babdaeec4c10b5736786ebd1bfb470fcaa36
+  react-native-safari-view: 955d7160d159241b8e9395d12d10ea0ef863dcdd
+  react-native-safe-area-context: e380a6f783ccaec848e2f3cc8eb205a62362950d
+  react-native-splash-screen: 200d11d188e2e78cea3ad319964f6142b6384865
+  react-native-video: 6555881252c8ca039760e1cd6df28ac28ffb2baf
+  react-native-webview: 3c79685b61a68d1fe99136f98f2f34b04dce2e02
+  React-RCTActionSheet: b0f1ea83f4bf75fb966eae9bfc47b78c8d3efd90
+  React-RCTAnimation: 359ba1b5690b1e87cc173558a78e82d35919333e
+  React-RCTBlob: 5e2b55f76e9a1c7ae52b826923502ddc3238df24
+  React-RCTImage: f5f1c50922164e89bdda67bcd0153952a5cfe719
+  React-RCTLinking: d0ecbd791e9ddddc41fa1f66b0255de90e8ee1e9
+  React-RCTNetwork: e26946300b0ab7bb6c4a6348090e93fa21f33a9d
+  React-RCTSettings: d0d37cb521b7470c998595a44f05847777cc3f42
+  React-RCTText: b074d89033583d4f2eb5faf7ea2db3a13c7553a2
+  React-RCTVibration: 2105b2e0e2b66a6408fc69a46c8a7fb5b2fdade0
+  React-RCTWebSocket: cd932a16b7214898b6b7f788c8bddb3637246ac4
+  rn-fetch-blob: 651b8d076b43d0d7aa294a3d9ec16c00aab8bef9
+  RNAirplay: 75777dd55dafbd3687703c3eb9c290ea6cc43248
+  RNCAsyncStorage: b63d6e83fc629b01df6b624688f17944cea5637f
+  RNDeviceInfo: 75dac2d7cd6b638b512cc9266ce48a39661fed0e
+  RNGestureHandler: 5329a942fce3d41c68b84c2c2276ce06a696d8b0
+  RNInAppBrowser: 9d1ffb9db0d0cbdf03f528f1f0624b2c533b93fd
+  RNScreens: f28b48b8345f2f5f39ed6195518291515032a788
+  RNSVG: 9cb6e958c4b6a1f58185ac72a350b148947d6fed
+  yoga: 312528f5bbbba37b4dcea5ef00e8b4033fdd9411
+
+PODFILE CHECKSUM: d235853c2d054909a0114df39a2529360918990d
+
+COCOAPODS: 1.7.5
diff --git a/apolloschurchapp/ios/apolloschurchapp-tvOS/Info.plist b/apolloschurchapp/ios/apolloschurchapp-tvOS/Info.plist
index aed24ed..e8438c7 100644
--- a/apolloschurchapp/ios/apolloschurchapp-tvOS/Info.plist
+++ b/apolloschurchapp/ios/apolloschurchapp-tvOS/Info.plist
@@ -15,11 +15,11 @@
 	<key>CFBundlePackageType</key>
 	<string>APPL</string>
 	<key>CFBundleShortVersionString</key>
-	<string>0.7.0</string>
+	<string>1.2.0</string>
 	<key>CFBundleSignature</key>
 	<string>????</string>
 	<key>CFBundleVersion</key>
-	<string>5</string>
+	<string>23</string>
 	<key>LSRequiresIPhoneOS</key>
 	<true />
 	<key>UILaunchStoryboardName</key>
diff --git a/apolloschurchapp/ios/apolloschurchapp-tvOSTests/Info.plist b/apolloschurchapp/ios/apolloschurchapp-tvOSTests/Info.plist
index e358b6d..d7c5027 100644
--- a/apolloschurchapp/ios/apolloschurchapp-tvOSTests/Info.plist
+++ b/apolloschurchapp/ios/apolloschurchapp-tvOSTests/Info.plist
@@ -15,10 +15,10 @@
 	<key>CFBundlePackageType</key>
 	<string>BNDL</string>
 	<key>CFBundleShortVersionString</key>
-	<string>0.7.0</string>
+	<string>1.2.0</string>
 	<key>CFBundleSignature</key>
 	<string>????</string>
 	<key>CFBundleVersion</key>
-	<string>5</string>
+	<string>23</string>
 </dict>
 </plist>
diff --git a/apolloschurchapp/ios/apolloschurchapp.xcodeproj/project.pbxproj b/apolloschurchapp/ios/apolloschurchapp.xcodeproj/project.pbxproj
index a1d174c..a24c843 100644
--- a/apolloschurchapp/ios/apolloschurchapp.xcodeproj/project.pbxproj
+++ b/apolloschurchapp/ios/apolloschurchapp.xcodeproj/project.pbxproj
@@ -7,101 +7,37 @@
 	objects = {
 
 /* Begin PBXBuildFile section */
-		00C302E51ABCBA2D00DB3ED1 /* libRCTActionSheet.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 00C302AC1ABCB8CE00DB3ED1 /* libRCTActionSheet.a */; };
-		00C302E71ABCBA2D00DB3ED1 /* libRCTGeolocation.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 00C302BA1ABCB90400DB3ED1 /* libRCTGeolocation.a */; };
-		00C302E81ABCBA2D00DB3ED1 /* libRCTImage.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 00C302C01ABCB91800DB3ED1 /* libRCTImage.a */; };
-		00C302E91ABCBA2D00DB3ED1 /* libRCTNetwork.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 00C302DC1ABCB9D200DB3ED1 /* libRCTNetwork.a */; };
-		00C302EA1ABCBA2D00DB3ED1 /* libRCTVibration.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 00C302E41ABCB9EE00DB3ED1 /* libRCTVibration.a */; };
 		00E356F31AD99517003FC87E /* apolloschurchappTests.m in Sources */ = {isa = PBXBuildFile; fileRef = 00E356F21AD99517003FC87E /* apolloschurchappTests.m */; };
-		0D4EDF6EBA274F9D93DDED76 /* Inter-UI-MediumItalic.otf in Resources */ = {isa = PBXBuildFile; fileRef = F79112193F3548D284406ABF /* Inter-UI-MediumItalic.otf */; };
-		133E29F31AD74F7200F7D852 /* libRCTLinking.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 78C398B91ACF4ADC00677621 /* libRCTLinking.a */; };
-		139105C61AF99C1200B5F7CC /* libRCTSettings.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 139105C11AF99BAD00B5F7CC /* libRCTSettings.a */; };
-		139FDEF61B0652A700C62182 /* libRCTWebSocket.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 139FDEF41B06529B00C62182 /* libRCTWebSocket.a */; };
+		01F091B02048490A8F9EF4FE /* Inter-UI-Italic.otf in Resources */ = {isa = PBXBuildFile; fileRef = 63F6EE53A9B44B4388B5F1C2 /* Inter-UI-Italic.otf */; };
+		08CE105F17284254AD54AF84 /* DroidSerif-Bold.ttf in Resources */ = {isa = PBXBuildFile; fileRef = E3B8A0AC5A6B4FABB3BDF6CB /* DroidSerif-Bold.ttf */; };
 		13B07FBC1A68108700A75B9A /* AppDelegate.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB01A68108700A75B9A /* AppDelegate.m */; };
 		13B07FBD1A68108700A75B9A /* LaunchScreen.xib in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB11A68108700A75B9A /* LaunchScreen.xib */; };
 		13B07FBF1A68108700A75B9A /* Images.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB51A68108700A75B9A /* Images.xcassets */; };
 		13B07FC11A68108700A75B9A /* main.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB71A68108700A75B9A /* main.m */; };
-		140ED2AC1D01E1AD002B40FF /* libReact.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 146834041AC3E56700842450 /* libReact.a */; };
-		146834051AC3E58100842450 /* libReact.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 146834041AC3E56700842450 /* libReact.a */; };
-		1680179655164C96985B5731 /* libMusicControl.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 643D51DCF8F14993B9AA6990 /* libMusicControl.a */; };
-		1C1FD8B313AB4A6583A0D31B /* libRNDeviceInfo.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 14D838A2FAE743C7B1DA5E31 /* libRNDeviceInfo.a */; };
+		1C48DCDE11AC47C48E918489 /* Inter-UI-Medium.otf in Resources */ = {isa = PBXBuildFile; fileRef = DC74A378C1CC40E4B6192D7F /* Inter-UI-Medium.otf */; };
+		25B9E67E3B46D33F45473A84 /* libPods-apolloschurchapp-tvOSTests.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 4F64CCA987A0419EB9C02236 /* libPods-apolloschurchapp-tvOSTests.a */; };
 		2D02E4BC1E0B4A80006451C7 /* AppDelegate.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB01A68108700A75B9A /* AppDelegate.m */; };
 		2D02E4BD1E0B4A84006451C7 /* Images.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB51A68108700A75B9A /* Images.xcassets */; };
 		2D02E4BF1E0B4AB3006451C7 /* main.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB71A68108700A75B9A /* main.m */; };
-		2D02E4C21E0B4AEC006451C7 /* libRCTAnimation.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 5E9157351DD0AC6500FF2AA8 /* libRCTAnimation.a */; };
-		2D02E4C31E0B4AEC006451C7 /* libRCTImage-tvOS.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 3DAD3E841DF850E9000B6D8A /* libRCTImage-tvOS.a */; };
-		2D02E4C41E0B4AEC006451C7 /* libRCTLinking-tvOS.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 3DAD3E881DF850E9000B6D8A /* libRCTLinking-tvOS.a */; };
-		2D02E4C51E0B4AEC006451C7 /* libRCTNetwork-tvOS.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 3DAD3E8C1DF850E9000B6D8A /* libRCTNetwork-tvOS.a */; };
-		2D02E4C61E0B4AEC006451C7 /* libRCTSettings-tvOS.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 3DAD3E901DF850E9000B6D8A /* libRCTSettings-tvOS.a */; };
-		2D02E4C71E0B4AEC006451C7 /* libRCTText-tvOS.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 3DAD3E941DF850E9000B6D8A /* libRCTText-tvOS.a */; };
-		2D02E4C81E0B4AEC006451C7 /* libRCTWebSocket-tvOS.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 3DAD3E991DF850E9000B6D8A /* libRCTWebSocket-tvOS.a */; };
 		2D16E6881FA4F8E400B85C8A /* libReact.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 2D16E6891FA4F8E400B85C8A /* libReact.a */; };
 		2DCD954D1E0B4F2C00145EB5 /* apolloschurchappTests.m in Sources */ = {isa = PBXBuildFile; fileRef = 00E356F21AD99517003FC87E /* apolloschurchappTests.m */; };
-		2DF0FFEE2056DD460020B375 /* libReact.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 3DAD3EA31DF850E9000B6D8A /* libReact.a */; };
-		3CAA28FFFCCF46518672AC8F /* libDBCustomTabs.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 71E6499CCC9D4DB2ADD365D8 /* libDBCustomTabs.a */; };
-		417027FD83CA4902AB4DB2B4 /* Inter-UI-Black.otf in Resources */ = {isa = PBXBuildFile; fileRef = 8E13C8F9AE60487C9ED95C21 /* Inter-UI-Black.otf */; };
-		4B29B8AACC2A4FB7BA6A8EEB /* libSafariViewManager.a in Frameworks */ = {isa = PBXBuildFile; fileRef = BF5A2B416EB74A44923FED7B /* libSafariViewManager.a */; };
-		59D8DFA78CDF4642892CC142 /* DroidSerif-BoldItalic.ttf in Resources */ = {isa = PBXBuildFile; fileRef = D979B537509247C099CE3F24 /* DroidSerif-BoldItalic.ttf */; };
-		5C862E57737C4032A378868D /* libRNScreens.a in Frameworks */ = {isa = PBXBuildFile; fileRef = B16900D1DAC94F96B742B4EA /* libRNScreens.a */; };
-		5CA1D8E805684478B04ABB60 /* Inter-UI-Italic.otf in Resources */ = {isa = PBXBuildFile; fileRef = 8CA3C04F98954FB2895CD36D /* Inter-UI-Italic.otf */; };
-		5E9157361DD0AC6A00FF2AA8 /* libRCTAnimation.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 5E9157331DD0AC6500FF2AA8 /* libRCTAnimation.a */; };
-		6C6BE3C2189E4FBA9FB66BE5 /* libRCTOneSignal.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 828255630B3246AEA19CF24D /* libRCTOneSignal.a */; };
-		6E4442FB39BE4F898DE4C454 /* Inter-UI-BlackItalic.otf in Resources */ = {isa = PBXBuildFile; fileRef = 22246A6BC58E4CF09A22A4DF /* Inter-UI-BlackItalic.otf */; };
-		7D060CA312AB4E828CD60DDC /* Inter-UI-Regular.otf in Resources */ = {isa = PBXBuildFile; fileRef = 10F42B11F27E467A8C71C280 /* Inter-UI-Regular.otf */; };
-		832341BD1AAA6AB300B99B32 /* libRCTText.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 832341B51AAA6A8300B99B32 /* libRCTText.a */; };
-		86D0B47B5BF143E797822EF1 /* libRCTVideo.a in Frameworks */ = {isa = PBXBuildFile; fileRef = FC8FFB7C37BB4499AEB6FA37 /* libRCTVideo.a */; };
-		89331B8BDAF24EF5BE08A485 /* libRNSVG.a in Frameworks */ = {isa = PBXBuildFile; fileRef = CFAF46FBA8B44C7B8DCA7707 /* libRNSVG.a */; };
-		9388C44B949C4DBAAA7256D5 /* libBVLinearGradient.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 60E52391C9744A46B3925A78 /* libBVLinearGradient.a */; };
-		9ACBD642B18D41C9BB1E4D9E /* DroidSerif-Italic.ttf in Resources */ = {isa = PBXBuildFile; fileRef = F9CFD638A5414DFF961A8D11 /* DroidSerif-Italic.ttf */; };
-		A173C226549E48B991AC5D98 /* Inter-UI-Medium.otf in Resources */ = {isa = PBXBuildFile; fileRef = 9FD7D997F4F14C439AC699B3 /* Inter-UI-Medium.otf */; };
-		AB7B2136E56C4B40B64F9C87 /* libMusicControl-tvOS.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 67E66409EF8A4BC7A1B9E054 /* libMusicControl-tvOS.a */; };
-		AC4174D90AD644A28D0CA9D9 /* libRNDeviceInfo-tvOS.a in Frameworks */ = {isa = PBXBuildFile; fileRef = A574C961754742F688E43151 /* libRNDeviceInfo-tvOS.a */; };
-		ADBDB9381DFEBF1600ED6528 /* libRCTBlob.a in Frameworks */ = {isa = PBXBuildFile; fileRef = ADBDB9271DFEBF0700ED6528 /* libRCTBlob.a */; };
-		B5DE58C6CF1E4E7ABDD1B48D /* libRNImagePicker.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 3F58D699A37B432BA1C0F092 /* libRNImagePicker.a */; };
-		C87CA8735EEB43C4A55CB285 /* DroidSerif-Bold.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 4629759169AB4756B447B16A /* DroidSerif-Bold.ttf */; };
-		D5744BF3B41D4BC49F93CD68 /* DroidSerif-Regular.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 76E6AD5294554A5FA53DB415 /* DroidSerif-Regular.ttf */; };
-		DEF13113111A40DF8F4FEB13 /* libRNSVG-tvOS.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 84716CBFF56347BA880A16C6 /* libRNSVG-tvOS.a */; };
-		E374C61F2AAF41D3B615AB44 /* Inter-UI-BoldItalic.otf in Resources */ = {isa = PBXBuildFile; fileRef = 32A467E2C3364ABDBB7BD0D1 /* Inter-UI-BoldItalic.otf */; };
-		F3F4A3D13570438F9562746F /* libSplashScreen.a in Frameworks */ = {isa = PBXBuildFile; fileRef = F08D1EBF0C2A4E6798AA8F36 /* libSplashScreen.a */; };
-		F8FAD93CCE5641A8B87611EA /* Inter-UI-Bold.otf in Resources */ = {isa = PBXBuildFile; fileRef = FB25CB02F40D4CC39DDA3C74 /* Inter-UI-Bold.otf */; };
+		578FFEC1D7D54C9B871A9E5B /* Inter-UI-BlackItalic.otf in Resources */ = {isa = PBXBuildFile; fileRef = 5A5A2BC2998547F4816B82E4 /* Inter-UI-BlackItalic.otf */; };
+		68D1351E80AA4A2C96288FD9 /* Inter-UI-Black.otf in Resources */ = {isa = PBXBuildFile; fileRef = EC21254B449443F99016EBFD /* Inter-UI-Black.otf */; };
+		7FBC6BC3CE8D48298F9850A9 /* Inter-UI-Bold.otf in Resources */ = {isa = PBXBuildFile; fileRef = D5157D807E164356ADE87867 /* Inter-UI-Bold.otf */; };
+		894732A70B4740678E85B593 /* Inter-UI-BoldItalic.otf in Resources */ = {isa = PBXBuildFile; fileRef = 2F5410F239E9477B9C2E86BD /* Inter-UI-BoldItalic.otf */; };
+		8EA9BDE542E09F685A47D9BE /* libPods-apolloschurchapp-tvOS.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 38B9762ACA099D28C28DBB31 /* libPods-apolloschurchapp-tvOS.a */; };
+		90743C40BF544F10A810C43C /* DroidSerif-Italic.ttf in Resources */ = {isa = PBXBuildFile; fileRef = ADC3D2DB245545ADB1CAB3FE /* DroidSerif-Italic.ttf */; };
+		93A2B0A9328A46A4B7DD5EFA /* DroidSerif-Regular.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 4E007B33EDD74B82AEF02C24 /* DroidSerif-Regular.ttf */; };
+		A415698B9815C7305EDB7AA7 /* libPods-apolloschurchappTests.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 560CBCD50AE7D282715D134E /* libPods-apolloschurchappTests.a */; };
+		AB3BD177B8A14193A5EEDDF8 /* Inter-UI-Regular.otf in Resources */ = {isa = PBXBuildFile; fileRef = A613256118404CB691DE2C8E /* Inter-UI-Regular.otf */; };
+		B02F194A3F6A4FE29AC799B4 /* DroidSerif-BoldItalic.ttf in Resources */ = {isa = PBXBuildFile; fileRef = A93F9D112A034626A9421759 /* DroidSerif-BoldItalic.ttf */; };
+		E875558F3FB8FA2024EF7DC2 /* libPods-apolloschurchapp.a in Frameworks */ = {isa = PBXBuildFile; fileRef = DDB6B5B7B6A0D1ECB68CF0DD /* libPods-apolloschurchapp.a */; };
+		ED297163215061F000B7C4FE /* JavaScriptCore.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = ED297162215061F000B7C4FE /* JavaScriptCore.framework */; };
+		ED2971652150620600B7C4FE /* JavaScriptCore.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = ED2971642150620600B7C4FE /* JavaScriptCore.framework */; };
+		FCB3069DB5DD4170B2CAEFC4 /* Inter-UI-MediumItalic.otf in Resources */ = {isa = PBXBuildFile; fileRef = A460FD7884FD4574A818005A /* Inter-UI-MediumItalic.otf */; };
 /* End PBXBuildFile section */
 
 /* Begin PBXContainerItemProxy section */
-		00C302AB1ABCB8CE00DB3ED1 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 00C302A71ABCB8CE00DB3ED1 /* RCTActionSheet.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 134814201AA4EA6300B7C361;
-			remoteInfo = RCTActionSheet;
-		};
-		00C302B91ABCB90400DB3ED1 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 00C302B51ABCB90400DB3ED1 /* RCTGeolocation.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 134814201AA4EA6300B7C361;
-			remoteInfo = RCTGeolocation;
-		};
-		00C302BF1ABCB91800DB3ED1 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 00C302BB1ABCB91800DB3ED1 /* RCTImage.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 58B5115D1A9E6B3D00147676;
-			remoteInfo = RCTImage;
-		};
-		00C302DB1ABCB9D200DB3ED1 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 00C302D31ABCB9D200DB3ED1 /* RCTNetwork.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 58B511DB1A9E6C8500147676;
-			remoteInfo = RCTNetwork;
-		};
-		00C302E31ABCB9EE00DB3ED1 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 00C302DF1ABCB9EE00DB3ED1 /* RCTVibration.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 832C81801AAF6DEF007FA2F7;
-			remoteInfo = RCTVibration;
-		};
 		00E356F41AD99517003FC87E /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
 			containerPortal = 83CBB9F71A601CBA00E9B192 /* Project object */;
@@ -109,27 +45,6 @@
 			remoteGlobalIDString = 13B07F861A680F5B00A75B9A;
 			remoteInfo = apolloschurchapp;
 		};
-		139105C01AF99BAD00B5F7CC /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 139105B61AF99BAD00B5F7CC /* RCTSettings.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 134814201AA4EA6300B7C361;
-			remoteInfo = RCTSettings;
-		};
-		139FDEF31B06529B00C62182 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 139FDEE61B06529A00C62182 /* RCTWebSocket.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 3C86DF461ADF2C930047B81A;
-			remoteInfo = RCTWebSocket;
-		};
-		146834031AC3E56700842450 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 83CBBA2E1A601D0E00E9B192;
-			remoteInfo = React;
-		};
 		2D02E4911E0B4A5D006451C7 /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
 			containerPortal = 83CBB9F71A601CBA00E9B192 /* Project object */;
@@ -137,357 +52,14 @@
 			remoteGlobalIDString = 2D02E47A1E0B4A5D006451C7;
 			remoteInfo = "apolloschurchapp-tvOS";
 		};
-		2D16E6711FA4F8DC00B85C8A /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = ADBDB91F1DFEBF0600ED6528 /* RCTBlob.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = ADD01A681E09402E00F6D226;
-			remoteInfo = "RCTBlob-tvOS";
-		};
-		2D16E6831FA4F8DC00B85C8A /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 139FDEE61B06529A00C62182 /* RCTWebSocket.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 3DBE0D001F3B181A0099AA32;
-			remoteInfo = fishhook;
-		};
-		2D16E6851FA4F8DC00B85C8A /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 139FDEE61B06529A00C62182 /* RCTWebSocket.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 3DBE0D0D1F3B181C0099AA32;
-			remoteInfo = "fishhook-tvOS";
-		};
-		2DF0FFDE2056DD460020B375 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = EBF21BDC1FC498900052F4D5;
-			remoteInfo = jsinspector;
-		};
-		2DF0FFE02056DD460020B375 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = EBF21BFA1FC4989A0052F4D5;
-			remoteInfo = "jsinspector-tvOS";
-		};
-		2DF0FFE22056DD460020B375 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 139D7ECE1E25DB7D00323FB7;
-			remoteInfo = "third-party";
-		};
-		2DF0FFE42056DD460020B375 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 3D383D3C1EBD27B6005632C8;
-			remoteInfo = "third-party-tvOS";
-		};
-		2DF0FFE62056DD460020B375 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 139D7E881E25C6D100323FB7;
-			remoteInfo = "double-conversion";
-		};
-		2DF0FFE82056DD460020B375 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 3D383D621EBD27B9005632C8;
-			remoteInfo = "double-conversion-tvOS";
-		};
-		2DF0FFEA2056DD460020B375 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 9936F3131F5F2E4B0010BF04;
-			remoteInfo = privatedata;
-		};
-		2DF0FFEC2056DD460020B375 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 9936F32F1F5F2E5B0010BF04;
-			remoteInfo = "privatedata-tvOS";
-		};
-		3DAD3E831DF850E9000B6D8A /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 00C302BB1ABCB91800DB3ED1 /* RCTImage.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 2D2A283A1D9B042B00D4039D;
-			remoteInfo = "RCTImage-tvOS";
-		};
-		3DAD3E871DF850E9000B6D8A /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 78C398B01ACF4ADC00677621 /* RCTLinking.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 2D2A28471D9B043800D4039D;
-			remoteInfo = "RCTLinking-tvOS";
-		};
-		3DAD3E8B1DF850E9000B6D8A /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 00C302D31ABCB9D200DB3ED1 /* RCTNetwork.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 2D2A28541D9B044C00D4039D;
-			remoteInfo = "RCTNetwork-tvOS";
-		};
-		3DAD3E8F1DF850E9000B6D8A /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 139105B61AF99BAD00B5F7CC /* RCTSettings.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 2D2A28611D9B046600D4039D;
-			remoteInfo = "RCTSettings-tvOS";
-		};
-		3DAD3E931DF850E9000B6D8A /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 832341B01AAA6A8300B99B32 /* RCTText.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 2D2A287B1D9B048500D4039D;
-			remoteInfo = "RCTText-tvOS";
-		};
-		3DAD3E981DF850E9000B6D8A /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 139FDEE61B06529A00C62182 /* RCTWebSocket.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 2D2A28881D9B049200D4039D;
-			remoteInfo = "RCTWebSocket-tvOS";
-		};
-		3DAD3EA21DF850E9000B6D8A /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 2D2A28131D9B038B00D4039D;
-			remoteInfo = "React-tvOS";
-		};
-		3DAD3EA41DF850E9000B6D8A /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 3D3C059A1DE3340900C268FA;
-			remoteInfo = yoga;
-		};
-		3DAD3EA61DF850E9000B6D8A /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 3D3C06751DE3340C00C268FA;
-			remoteInfo = "yoga-tvOS";
-		};
-		3DAD3EA81DF850E9000B6D8A /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 3D3CD9251DE5FBEC00167DC4;
-			remoteInfo = cxxreact;
-		};
-		3DAD3EAA1DF850E9000B6D8A /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 3D3CD9321DE5FBEE00167DC4;
-			remoteInfo = "cxxreact-tvOS";
-		};
-		3DAD3EAC1DF850E9000B6D8A /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 3D3CD90B1DE5FBD600167DC4;
-			remoteInfo = jschelpers;
-		};
-		3DAD3EAE1DF850E9000B6D8A /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 3D3CD9181DE5FBD800167DC4;
-			remoteInfo = "jschelpers-tvOS";
-		};
-		427787EC2149B96A0045AD7F /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 84B340CC6C3940A782834F00 /* RCTOneSignal.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 3245CDED1BFEE35C00EABF68;
-			remoteInfo = RCTOneSignal;
-		};
-		42B4B6CB219DD7CB00162F25 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 59AF37DEFAA847DBAB3A0526 /* RNScreens.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 134814201AA4EA6300B7C361;
-			remoteInfo = RNScreens;
-		};
-		5E9157321DD0AC6500FF2AA8 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 5E91572D1DD0AC6500FF2AA8 /* RCTAnimation.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 134814201AA4EA6300B7C361;
-			remoteInfo = RCTAnimation;
-		};
-		5E9157341DD0AC6500FF2AA8 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 5E91572D1DD0AC6500FF2AA8 /* RCTAnimation.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 2D2A28201D9B03D100D4039D;
-			remoteInfo = "RCTAnimation-tvOS";
-		};
-		78C398B81ACF4ADC00677621 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 78C398B01ACF4ADC00677621 /* RCTLinking.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 134814201AA4EA6300B7C361;
-			remoteInfo = RCTLinking;
-		};
-		791434762126017B006F13B7 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 46704FC4FCEB45B6B9DD92BB /* BVLinearGradient.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 134814201AA4EA6300B7C361;
-			remoteInfo = BVLinearGradient;
-		};
-		791434782126017B006F13B7 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 46704FC4FCEB45B6B9DD92BB /* BVLinearGradient.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 64AA15081EF7F30100718508;
-			remoteInfo = "BVLinearGradient-tvOS";
-		};
-		7914347C2126017B006F13B7 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 2F8741F0746D4C8A89970C4D /* RCTVideo.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 134814201AA4EA6300B7C361;
-			remoteInfo = RCTVideo;
-		};
-		7914347E2126017B006F13B7 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 2F8741F0746D4C8A89970C4D /* RCTVideo.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 641E28441F0EEC8500443AF6;
-			remoteInfo = "RCTVideo-tvOS";
-		};
-		791434812126017B006F13B7 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 6BAAC994942548609D0EEECA /* ReactNativeCustomTabs.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = DA7118681CC9158A0087DF95;
-			remoteInfo = DBCustomTabs;
-		};
-		791434852126017B006F13B7 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 01441BF099BE44EE8BA8E390 /* RNSVG.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 0CF68AC11AF0540F00FF9E5C;
-			remoteInfo = RNSVG;
-		};
-		791434872126017B006F13B7 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 01441BF099BE44EE8BA8E390 /* RNSVG.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 94DDAC5C1F3D024300EED511;
-			remoteInfo = "RNSVG-tvOS";
-		};
-		7914348A2126017B006F13B7 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 6B6E5A404A4B4A34B18D7D34 /* SafariViewManager.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 134814201AA4EA6300B7C361;
-			remoteInfo = SafariViewManager;
-		};
-		7914348D2126017B006F13B7 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = A64D00F181AE4927A4632B6E /* SplashScreen.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 3D7682761D8E76B80014119E;
-			remoteInfo = SplashScreen;
-		};
-		794FE987219DF8880046142B /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 59AF37DEFAA847DBAB3A0526 /* RNScreens.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 134814201AA4EA6300B7C361;
-			remoteInfo = RNScreens;
-		};
-		796F2532212CAD5D00C6935E /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 239ECFF08FA841B99DB1CAFA /* RNDeviceInfo.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = DA5891D81BA9A9FC002B4DB2;
-			remoteInfo = RNDeviceInfo;
-		};
-		796F2534212CAD5D00C6935E /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 239ECFF08FA841B99DB1CAFA /* RNDeviceInfo.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = E72EC1401F7ABB5A0001BC90;
-			remoteInfo = "RNDeviceInfo-tvOS";
-		};
-		797304182146322D00F6E05B /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 4BD3C4E6742F4F6380640CA9 /* MusicControl.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 134814201AA4EA6300B7C361;
-			remoteInfo = MusicControl;
-		};
-		7973041A2146322D00F6E05B /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 4BD3C4E6742F4F6380640CA9 /* MusicControl.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = A3FC285E1EA7A8350097B6A9;
-			remoteInfo = "MusicControl-tvOS";
-		};
-		832341B41AAA6A8300B99B32 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 832341B01AAA6A8300B99B32 /* RCTText.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 58B5119B1A9E6C1200147676;
-			remoteInfo = RCTText;
-		};
-		ADBDB9261DFEBF0700ED6528 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = ADBDB91F1DFEBF0600ED6528 /* RCTBlob.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 358F4ED71D1E81A9004DF814;
-			remoteInfo = RCTBlob;
-		};
-		BF9931702138673B0077FD20 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 3BD7DCDF7B194D7BB9BE3C6C /* RNImagePicker.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 014A3B5C1C6CF33500B6D375;
-			remoteInfo = RNImagePicker;
-		};
 /* End PBXContainerItemProxy section */
 
-/* Begin PBXCopyFilesBuildPhase section */
-		4217B141214ADBC00034808C /* Embed App Extensions */ = {
-			isa = PBXCopyFilesBuildPhase;
-			buildActionMask = 2147483647;
-			dstPath = "";
-			dstSubfolderSpec = 13;
-			files = (
-			);
-			name = "Embed App Extensions";
-			runOnlyForDeploymentPostprocessing = 0;
-		};
-/* End PBXCopyFilesBuildPhase section */
-
 /* Begin PBXFileReference section */
 		008F07F21AC5B25A0029DE68 /* main.jsbundle */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = main.jsbundle; sourceTree = "<group>"; };
-		00C302A71ABCB8CE00DB3ED1 /* RCTActionSheet.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = RCTActionSheet.xcodeproj; path = "../node_modules/react-native/Libraries/ActionSheetIOS/RCTActionSheet.xcodeproj"; sourceTree = "<group>"; };
-		00C302B51ABCB90400DB3ED1 /* RCTGeolocation.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = RCTGeolocation.xcodeproj; path = "../node_modules/react-native/Libraries/Geolocation/RCTGeolocation.xcodeproj"; sourceTree = "<group>"; };
-		00C302BB1ABCB91800DB3ED1 /* RCTImage.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = RCTImage.xcodeproj; path = "../node_modules/react-native/Libraries/Image/RCTImage.xcodeproj"; sourceTree = "<group>"; };
-		00C302D31ABCB9D200DB3ED1 /* RCTNetwork.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = RCTNetwork.xcodeproj; path = "../node_modules/react-native/Libraries/Network/RCTNetwork.xcodeproj"; sourceTree = "<group>"; };
-		00C302DF1ABCB9EE00DB3ED1 /* RCTVibration.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = RCTVibration.xcodeproj; path = "../node_modules/react-native/Libraries/Vibration/RCTVibration.xcodeproj"; sourceTree = "<group>"; };
 		00E356EE1AD99517003FC87E /* apolloschurchappTests.xctest */ = {isa = PBXFileReference; explicitFileType = wrapper.cfbundle; includeInIndex = 0; path = apolloschurchappTests.xctest; sourceTree = BUILT_PRODUCTS_DIR; };
 		00E356F11AD99517003FC87E /* Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; path = Info.plist; sourceTree = "<group>"; };
 		00E356F21AD99517003FC87E /* apolloschurchappTests.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; path = apolloschurchappTests.m; sourceTree = "<group>"; };
-		01441BF099BE44EE8BA8E390 /* RNSVG.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = RNSVG.xcodeproj; path = "../node_modules/react-native-svg/ios/RNSVG.xcodeproj"; sourceTree = "<group>"; };
-		10F42B11F27E467A8C71C280 /* Inter-UI-Regular.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-Regular.otf"; path = "../assets/fonts/Inter-UI-Regular.otf"; sourceTree = "<group>"; };
-		139105B61AF99BAD00B5F7CC /* RCTSettings.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = RCTSettings.xcodeproj; path = "../node_modules/react-native/Libraries/Settings/RCTSettings.xcodeproj"; sourceTree = "<group>"; };
-		139FDEE61B06529A00C62182 /* RCTWebSocket.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = RCTWebSocket.xcodeproj; path = "../node_modules/react-native/Libraries/WebSocket/RCTWebSocket.xcodeproj"; sourceTree = "<group>"; };
+		0D480D95FC7F4569B8B934E3 /* libRCTOneSignal.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libRCTOneSignal.a; sourceTree = "<group>"; };
 		13B07F961A680F5B00A75B9A /* apolloschurchapp.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = apolloschurchapp.app; sourceTree = BUILT_PRODUCTS_DIR; };
 		13B07FAF1A68108700A75B9A /* AppDelegate.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = AppDelegate.h; path = apolloschurchapp/AppDelegate.h; sourceTree = "<group>"; };
 		13B07FB01A68108700A75B9A /* AppDelegate.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; name = AppDelegate.m; path = apolloschurchapp/AppDelegate.m; sourceTree = "<group>"; };
@@ -495,52 +67,35 @@
 		13B07FB51A68108700A75B9A /* Images.xcassets */ = {isa = PBXFileReference; lastKnownFileType = folder.assetcatalog; name = Images.xcassets; path = apolloschurchapp/Images.xcassets; sourceTree = "<group>"; };
 		13B07FB61A68108700A75B9A /* Info.plist */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.xml; name = Info.plist; path = apolloschurchapp/Info.plist; sourceTree = "<group>"; };
 		13B07FB71A68108700A75B9A /* main.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; name = main.m; path = apolloschurchapp/main.m; sourceTree = "<group>"; };
-		146833FF1AC3E56700842450 /* React.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = React.xcodeproj; path = "../node_modules/react-native/React/React.xcodeproj"; sourceTree = "<group>"; };
-		14D838A2FAE743C7B1DA5E31 /* libRNDeviceInfo.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libRNDeviceInfo.a; sourceTree = "<group>"; };
-		22246A6BC58E4CF09A22A4DF /* Inter-UI-BlackItalic.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-BlackItalic.otf"; path = "../assets/fonts/Inter-UI-BlackItalic.otf"; sourceTree = "<group>"; };
-		239ECFF08FA841B99DB1CAFA /* RNDeviceInfo.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = RNDeviceInfo.xcodeproj; path = "../node_modules/react-native-device-info/ios/RNDeviceInfo.xcodeproj"; sourceTree = "<group>"; };
+		1F8F5BC4745C8F22C695573D /* Pods-apolloschurchapp.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-apolloschurchapp.release.xcconfig"; path = "Target Support Files/Pods-apolloschurchapp/Pods-apolloschurchapp.release.xcconfig"; sourceTree = "<group>"; };
 		2D02E47B1E0B4A5D006451C7 /* apolloschurchapp-tvOS.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = "apolloschurchapp-tvOS.app"; sourceTree = BUILT_PRODUCTS_DIR; };
 		2D02E4901E0B4A5D006451C7 /* apolloschurchapp-tvOSTests.xctest */ = {isa = PBXFileReference; explicitFileType = wrapper.cfbundle; includeInIndex = 0; path = "apolloschurchapp-tvOSTests.xctest"; sourceTree = BUILT_PRODUCTS_DIR; };
 		2D16E6891FA4F8E400B85C8A /* libReact.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; path = libReact.a; sourceTree = BUILT_PRODUCTS_DIR; };
-		2F8741F0746D4C8A89970C4D /* RCTVideo.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = RCTVideo.xcodeproj; path = "../node_modules/react-native-video/ios/RCTVideo.xcodeproj"; sourceTree = "<group>"; };
-		32A467E2C3364ABDBB7BD0D1 /* Inter-UI-BoldItalic.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-BoldItalic.otf"; path = "../assets/fonts/Inter-UI-BoldItalic.otf"; sourceTree = "<group>"; };
-		3BD7DCDF7B194D7BB9BE3C6C /* RNImagePicker.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = RNImagePicker.xcodeproj; path = "../node_modules/react-native-image-picker/ios/RNImagePicker.xcodeproj"; sourceTree = "<group>"; };
-		3F58D699A37B432BA1C0F092 /* libRNImagePicker.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libRNImagePicker.a; sourceTree = "<group>"; };
-		4217B130214ADB740034808C /* apolloschurchapp.entitlements */ = {isa = PBXFileReference; lastKnownFileType = text.plist.entitlements; name = apolloschurchapp.entitlements; path = apolloschurchapp/apolloschurchapp.entitlements; sourceTree = "<group>"; };
-		4217B142214ADCD50034808C /* UIKit.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = UIKit.framework; path = System/Library/Frameworks/UIKit.framework; sourceTree = SDKROOT; };
-		4217B144214ADCE10034808C /* SystemConfiguration.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = SystemConfiguration.framework; path = System/Library/Frameworks/SystemConfiguration.framework; sourceTree = SDKROOT; };
-		4629759169AB4756B447B16A /* DroidSerif-Bold.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "DroidSerif-Bold.ttf"; path = "../assets/fonts/DroidSerif-Bold.ttf"; sourceTree = "<group>"; };
-		46704FC4FCEB45B6B9DD92BB /* BVLinearGradient.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = BVLinearGradient.xcodeproj; path = "../node_modules/react-native-linear-gradient/BVLinearGradient.xcodeproj"; sourceTree = "<group>"; };
-		4BD3C4E6742F4F6380640CA9 /* MusicControl.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = MusicControl.xcodeproj; path = "../node_modules/react-native-music-control/ios/MusicControl.xcodeproj"; sourceTree = "<group>"; };
-		59AF37DEFAA847DBAB3A0526 /* RNScreens.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = RNScreens.xcodeproj; path = "../node_modules/react-native-screens/ios/RNScreens.xcodeproj"; sourceTree = "<group>"; };
-		5E91572D1DD0AC6500FF2AA8 /* RCTAnimation.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = RCTAnimation.xcodeproj; path = "../node_modules/react-native/Libraries/NativeAnimation/RCTAnimation.xcodeproj"; sourceTree = "<group>"; };
-		60E52391C9744A46B3925A78 /* libBVLinearGradient.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libBVLinearGradient.a; sourceTree = "<group>"; };
-		643D51DCF8F14993B9AA6990 /* libMusicControl.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libMusicControl.a; sourceTree = "<group>"; };
-		67E66409EF8A4BC7A1B9E054 /* libMusicControl-tvOS.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = "libMusicControl-tvOS.a"; sourceTree = "<group>"; };
-		6B6E5A404A4B4A34B18D7D34 /* SafariViewManager.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = SafariViewManager.xcodeproj; path = "../node_modules/react-native-safari-view/SafariViewManager.xcodeproj"; sourceTree = "<group>"; };
-		6BAAC994942548609D0EEECA /* ReactNativeCustomTabs.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = ReactNativeCustomTabs.xcodeproj; path = "../node_modules/react-native-custom-tabs/ios/ReactNativeCustomTabs.xcodeproj"; sourceTree = "<group>"; };
-		71E6499CCC9D4DB2ADD365D8 /* libDBCustomTabs.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libDBCustomTabs.a; sourceTree = "<group>"; };
-		76E6AD5294554A5FA53DB415 /* DroidSerif-Regular.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "DroidSerif-Regular.ttf"; path = "../assets/fonts/DroidSerif-Regular.ttf"; sourceTree = "<group>"; };
-		78C398B01ACF4ADC00677621 /* RCTLinking.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = RCTLinking.xcodeproj; path = "../node_modules/react-native/Libraries/LinkingIOS/RCTLinking.xcodeproj"; sourceTree = "<group>"; };
-		828255630B3246AEA19CF24D /* libRCTOneSignal.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libRCTOneSignal.a; sourceTree = "<group>"; };
-		832341B01AAA6A8300B99B32 /* RCTText.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = RCTText.xcodeproj; path = "../node_modules/react-native/Libraries/Text/RCTText.xcodeproj"; sourceTree = "<group>"; };
-		84716CBFF56347BA880A16C6 /* libRNSVG-tvOS.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = "libRNSVG-tvOS.a"; sourceTree = "<group>"; };
-		84B340CC6C3940A782834F00 /* RCTOneSignal.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = RCTOneSignal.xcodeproj; path = "../node_modules/react-native-onesignal/ios/RCTOneSignal.xcodeproj"; sourceTree = "<group>"; };
-		8CA3C04F98954FB2895CD36D /* Inter-UI-Italic.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-Italic.otf"; path = "../assets/fonts/Inter-UI-Italic.otf"; sourceTree = "<group>"; };
-		8E13C8F9AE60487C9ED95C21 /* Inter-UI-Black.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-Black.otf"; path = "../assets/fonts/Inter-UI-Black.otf"; sourceTree = "<group>"; };
-		9FD7D997F4F14C439AC699B3 /* Inter-UI-Medium.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-Medium.otf"; path = "../assets/fonts/Inter-UI-Medium.otf"; sourceTree = "<group>"; };
-		A574C961754742F688E43151 /* libRNDeviceInfo-tvOS.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = "libRNDeviceInfo-tvOS.a"; sourceTree = "<group>"; };
-		A64D00F181AE4927A4632B6E /* SplashScreen.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = SplashScreen.xcodeproj; path = "../node_modules/react-native-splash-screen/ios/SplashScreen.xcodeproj"; sourceTree = "<group>"; };
-		ADBDB91F1DFEBF0600ED6528 /* RCTBlob.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = RCTBlob.xcodeproj; path = "../node_modules/react-native/Libraries/Blob/RCTBlob.xcodeproj"; sourceTree = "<group>"; };
-		B16900D1DAC94F96B742B4EA /* libRNScreens.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libRNScreens.a; sourceTree = "<group>"; };
-		BF5A2B416EB74A44923FED7B /* libSafariViewManager.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libSafariViewManager.a; sourceTree = "<group>"; };
-		CFAF46FBA8B44C7B8DCA7707 /* libRNSVG.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libRNSVG.a; sourceTree = "<group>"; };
-		D979B537509247C099CE3F24 /* DroidSerif-BoldItalic.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "DroidSerif-BoldItalic.ttf"; path = "../assets/fonts/DroidSerif-BoldItalic.ttf"; sourceTree = "<group>"; };
-		F08D1EBF0C2A4E6798AA8F36 /* libSplashScreen.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libSplashScreen.a; sourceTree = "<group>"; };
-		F79112193F3548D284406ABF /* Inter-UI-MediumItalic.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-MediumItalic.otf"; path = "../assets/fonts/Inter-UI-MediumItalic.otf"; sourceTree = "<group>"; };
-		F9CFD638A5414DFF961A8D11 /* DroidSerif-Italic.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "DroidSerif-Italic.ttf"; path = "../assets/fonts/DroidSerif-Italic.ttf"; sourceTree = "<group>"; };
-		FB25CB02F40D4CC39DDA3C74 /* Inter-UI-Bold.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-Bold.otf"; path = "../assets/fonts/Inter-UI-Bold.otf"; sourceTree = "<group>"; };
-		FC8FFB7C37BB4499AEB6FA37 /* libRCTVideo.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libRCTVideo.a; sourceTree = "<group>"; };
+		2F5410F239E9477B9C2E86BD /* Inter-UI-BoldItalic.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-BoldItalic.otf"; path = "../assets/fonts/Inter-UI-BoldItalic.otf"; sourceTree = "<group>"; };
+		38B9762ACA099D28C28DBB31 /* libPods-apolloschurchapp-tvOS.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-apolloschurchapp-tvOS.a"; sourceTree = BUILT_PRODUCTS_DIR; };
+		4E007B33EDD74B82AEF02C24 /* DroidSerif-Regular.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "DroidSerif-Regular.ttf"; path = "../assets/fonts/DroidSerif-Regular.ttf"; sourceTree = "<group>"; };
+		4F64CCA987A0419EB9C02236 /* libPods-apolloschurchapp-tvOSTests.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-apolloschurchapp-tvOSTests.a"; sourceTree = BUILT_PRODUCTS_DIR; };
+		54F271B8EB67A4997A2C7D96 /* Pods-apolloschurchapp.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-apolloschurchapp.debug.xcconfig"; path = "Target Support Files/Pods-apolloschurchapp/Pods-apolloschurchapp.debug.xcconfig"; sourceTree = "<group>"; };
+		560CBCD50AE7D282715D134E /* libPods-apolloschurchappTests.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-apolloschurchappTests.a"; sourceTree = BUILT_PRODUCTS_DIR; };
+		5A5A2BC2998547F4816B82E4 /* Inter-UI-BlackItalic.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-BlackItalic.otf"; path = "../assets/fonts/Inter-UI-BlackItalic.otf"; sourceTree = "<group>"; };
+		63F6EE53A9B44B4388B5F1C2 /* Inter-UI-Italic.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-Italic.otf"; path = "../assets/fonts/Inter-UI-Italic.otf"; sourceTree = "<group>"; };
+		745C835CA2F1E1EC2425152A /* Pods-apolloschurchapp-tvOS.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-apolloschurchapp-tvOS.debug.xcconfig"; path = "Target Support Files/Pods-apolloschurchapp-tvOS/Pods-apolloschurchapp-tvOS.debug.xcconfig"; sourceTree = "<group>"; };
+		A460FD7884FD4574A818005A /* Inter-UI-MediumItalic.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-MediumItalic.otf"; path = "../assets/fonts/Inter-UI-MediumItalic.otf"; sourceTree = "<group>"; };
+		A613256118404CB691DE2C8E /* Inter-UI-Regular.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-Regular.otf"; path = "../assets/fonts/Inter-UI-Regular.otf"; sourceTree = "<group>"; };
+		A93F9D112A034626A9421759 /* DroidSerif-BoldItalic.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "DroidSerif-BoldItalic.ttf"; path = "../assets/fonts/DroidSerif-BoldItalic.ttf"; sourceTree = "<group>"; };
+		AB44FC16DED929081698EDFD /* Pods-apolloschurchappTests.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-apolloschurchappTests.debug.xcconfig"; path = "Target Support Files/Pods-apolloschurchappTests/Pods-apolloschurchappTests.debug.xcconfig"; sourceTree = "<group>"; };
+		ADC3D2DB245545ADB1CAB3FE /* DroidSerif-Italic.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "DroidSerif-Italic.ttf"; path = "../assets/fonts/DroidSerif-Italic.ttf"; sourceTree = "<group>"; };
+		AE85030F59F256E90D5A4C2B /* Pods-apolloschurchapp-tvOS.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-apolloschurchapp-tvOS.release.xcconfig"; path = "Target Support Files/Pods-apolloschurchapp-tvOS/Pods-apolloschurchapp-tvOS.release.xcconfig"; sourceTree = "<group>"; };
+		D394E3064D75710E81C51EB0 /* Pods-apolloschurchapp-tvOSTests.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-apolloschurchapp-tvOSTests.debug.xcconfig"; path = "Target Support Files/Pods-apolloschurchapp-tvOSTests/Pods-apolloschurchapp-tvOSTests.debug.xcconfig"; sourceTree = "<group>"; };
+		D5157D807E164356ADE87867 /* Inter-UI-Bold.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-Bold.otf"; path = "../assets/fonts/Inter-UI-Bold.otf"; sourceTree = "<group>"; };
+		DA9745795726553C6FA9E7A8 /* Pods-apolloschurchapp-tvOSTests.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-apolloschurchapp-tvOSTests.release.xcconfig"; path = "Target Support Files/Pods-apolloschurchapp-tvOSTests/Pods-apolloschurchapp-tvOSTests.release.xcconfig"; sourceTree = "<group>"; };
+		DC74A378C1CC40E4B6192D7F /* Inter-UI-Medium.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-Medium.otf"; path = "../assets/fonts/Inter-UI-Medium.otf"; sourceTree = "<group>"; };
+		DDB6B5B7B6A0D1ECB68CF0DD /* libPods-apolloschurchapp.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-apolloschurchapp.a"; sourceTree = BUILT_PRODUCTS_DIR; };
+		E3B8A0AC5A6B4FABB3BDF6CB /* DroidSerif-Bold.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "DroidSerif-Bold.ttf"; path = "../assets/fonts/DroidSerif-Bold.ttf"; sourceTree = "<group>"; };
+		E98AC9782C338F13632EF710 /* Pods-apolloschurchappTests.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-apolloschurchappTests.release.xcconfig"; path = "Target Support Files/Pods-apolloschurchappTests/Pods-apolloschurchappTests.release.xcconfig"; sourceTree = "<group>"; };
+		EC21254B449443F99016EBFD /* Inter-UI-Black.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-Black.otf"; path = "../assets/fonts/Inter-UI-Black.otf"; sourceTree = "<group>"; };
+		ED297162215061F000B7C4FE /* JavaScriptCore.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = JavaScriptCore.framework; path = System/Library/Frameworks/JavaScriptCore.framework; sourceTree = SDKROOT; };
+		ED2971642150620600B7C4FE /* JavaScriptCore.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = JavaScriptCore.framework; path = Platforms/AppleTVOS.platform/Developer/SDKs/AppleTVOS12.0.sdk/System/Library/Frameworks/JavaScriptCore.framework; sourceTree = DEVELOPER_DIR; };
 /* End PBXFileReference section */
 
 /* Begin PBXFrameworksBuildPhase section */
@@ -548,7 +103,7 @@
 			isa = PBXFrameworksBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
-				140ED2AC1D01E1AD002B40FF /* libReact.a in Frameworks */,
+				A415698B9815C7305EDB7AA7 /* libPods-apolloschurchappTests.a in Frameworks */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
@@ -556,30 +111,8 @@
 			isa = PBXFrameworksBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
-				ADBDB9381DFEBF1600ED6528 /* libRCTBlob.a in Frameworks */,
-				5E9157361DD0AC6A00FF2AA8 /* libRCTAnimation.a in Frameworks */,
-				146834051AC3E58100842450 /* libReact.a in Frameworks */,
-				5E9157361DD0AC6A00FF2AA8 /* libRCTAnimation.a in Frameworks */,
-				00C302E51ABCBA2D00DB3ED1 /* libRCTActionSheet.a in Frameworks */,
-				00C302E71ABCBA2D00DB3ED1 /* libRCTGeolocation.a in Frameworks */,
-				00C302E81ABCBA2D00DB3ED1 /* libRCTImage.a in Frameworks */,
-				133E29F31AD74F7200F7D852 /* libRCTLinking.a in Frameworks */,
-				00C302E91ABCBA2D00DB3ED1 /* libRCTNetwork.a in Frameworks */,
-				139105C61AF99C1200B5F7CC /* libRCTSettings.a in Frameworks */,
-				832341BD1AAA6AB300B99B32 /* libRCTText.a in Frameworks */,
-				00C302EA1ABCBA2D00DB3ED1 /* libRCTVibration.a in Frameworks */,
-				139FDEF61B0652A700C62182 /* libRCTWebSocket.a in Frameworks */,
-				3CAA28FFFCCF46518672AC8F /* libDBCustomTabs.a in Frameworks */,
-				9388C44B949C4DBAAA7256D5 /* libBVLinearGradient.a in Frameworks */,
-				4B29B8AACC2A4FB7BA6A8EEB /* libSafariViewManager.a in Frameworks */,
-				F3F4A3D13570438F9562746F /* libSplashScreen.a in Frameworks */,
-				89331B8BDAF24EF5BE08A485 /* libRNSVG.a in Frameworks */,
-				86D0B47B5BF143E797822EF1 /* libRCTVideo.a in Frameworks */,
-				6C6BE3C2189E4FBA9FB66BE5 /* libRCTOneSignal.a in Frameworks */,
-				B5DE58C6CF1E4E7ABDD1B48D /* libRNImagePicker.a in Frameworks */,
-				1C1FD8B313AB4A6583A0D31B /* libRNDeviceInfo.a in Frameworks */,
-				1680179655164C96985B5731 /* libMusicControl.a in Frameworks */,
-				5C862E57737C4032A378868D /* libRNScreens.a in Frameworks */,
+				ED297163215061F000B7C4FE /* JavaScriptCore.framework in Frameworks */,
+				E875558F3FB8FA2024EF7DC2 /* libPods-apolloschurchapp.a in Frameworks */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
@@ -587,17 +120,9 @@
 			isa = PBXFrameworksBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
+				ED2971652150620600B7C4FE /* JavaScriptCore.framework in Frameworks */,
 				2D16E6881FA4F8E400B85C8A /* libReact.a in Frameworks */,
-				2D02E4C21E0B4AEC006451C7 /* libRCTAnimation.a in Frameworks */,
-				2D02E4C31E0B4AEC006451C7 /* libRCTImage-tvOS.a in Frameworks */,
-				2D02E4C41E0B4AEC006451C7 /* libRCTLinking-tvOS.a in Frameworks */,
-				2D02E4C51E0B4AEC006451C7 /* libRCTNetwork-tvOS.a in Frameworks */,
-				2D02E4C61E0B4AEC006451C7 /* libRCTSettings-tvOS.a in Frameworks */,
-				2D02E4C71E0B4AEC006451C7 /* libRCTText-tvOS.a in Frameworks */,
-				2D02E4C81E0B4AEC006451C7 /* libRCTWebSocket-tvOS.a in Frameworks */,
-				DEF13113111A40DF8F4FEB13 /* libRNSVG-tvOS.a in Frameworks */,
-				AC4174D90AD644A28D0CA9D9 /* libRNDeviceInfo-tvOS.a in Frameworks */,
-				AB7B2136E56C4B40B64F9C87 /* libMusicControl-tvOS.a in Frameworks */,
+				8EA9BDE542E09F685A47D9BE /* libPods-apolloschurchapp-tvOS.a in Frameworks */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
@@ -605,55 +130,13 @@
 			isa = PBXFrameworksBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
-				2DF0FFEE2056DD460020B375 /* libReact.a in Frameworks */,
+				25B9E67E3B46D33F45473A84 /* libPods-apolloschurchapp-tvOSTests.a in Frameworks */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
 /* End PBXFrameworksBuildPhase section */
 
 /* Begin PBXGroup section */
-		00C302A81ABCB8CE00DB3ED1 /* Products */ = {
-			isa = PBXGroup;
-			children = (
-				00C302AC1ABCB8CE00DB3ED1 /* libRCTActionSheet.a */,
-			);
-			name = Products;
-			sourceTree = "<group>";
-		};
-		00C302B61ABCB90400DB3ED1 /* Products */ = {
-			isa = PBXGroup;
-			children = (
-				00C302BA1ABCB90400DB3ED1 /* libRCTGeolocation.a */,
-			);
-			name = Products;
-			sourceTree = "<group>";
-		};
-		00C302BC1ABCB91800DB3ED1 /* Products */ = {
-			isa = PBXGroup;
-			children = (
-				00C302C01ABCB91800DB3ED1 /* libRCTImage.a */,
-				3DAD3E841DF850E9000B6D8A /* libRCTImage-tvOS.a */,
-			);
-			name = Products;
-			sourceTree = "<group>";
-		};
-		00C302D41ABCB9D200DB3ED1 /* Products */ = {
-			isa = PBXGroup;
-			children = (
-				00C302DC1ABCB9D200DB3ED1 /* libRCTNetwork.a */,
-				3DAD3E8C1DF850E9000B6D8A /* libRCTNetwork-tvOS.a */,
-			);
-			name = Products;
-			sourceTree = "<group>";
-		};
-		00C302E01ABCB9EE00DB3ED1 /* Products */ = {
-			isa = PBXGroup;
-			children = (
-				00C302E41ABCB9EE00DB3ED1 /* libRCTVibration.a */,
-			);
-			name = Products;
-			sourceTree = "<group>";
-		};
 		00E356EF1AD99517003FC87E /* apolloschurchappTests */ = {
 			isa = PBXGroup;
 			children = (
@@ -671,30 +154,9 @@
 			name = "Supporting Files";
 			sourceTree = "<group>";
 		};
-		139105B71AF99BAD00B5F7CC /* Products */ = {
-			isa = PBXGroup;
-			children = (
-				139105C11AF99BAD00B5F7CC /* libRCTSettings.a */,
-				3DAD3E901DF850E9000B6D8A /* libRCTSettings-tvOS.a */,
-			);
-			name = Products;
-			sourceTree = "<group>";
-		};
-		139FDEE71B06529A00C62182 /* Products */ = {
-			isa = PBXGroup;
-			children = (
-				139FDEF41B06529B00C62182 /* libRCTWebSocket.a */,
-				3DAD3E991DF850E9000B6D8A /* libRCTWebSocket-tvOS.a */,
-				2D16E6841FA4F8DC00B85C8A /* libfishhook.a */,
-				2D16E6861FA4F8DC00B85C8A /* libfishhook-tvOS.a */,
-			);
-			name = Products;
-			sourceTree = "<group>";
-		};
 		13B07FAE1A68108700A75B9A /* apolloschurchapp */ = {
 			isa = PBXGroup;
 			children = (
-				4217B130214ADB740034808C /* apolloschurchapp.entitlements */,
 				008F07F21AC5B25A0029DE68 /* main.jsbundle */,
 				13B07FAF1A68108700A75B9A /* AppDelegate.h */,
 				13B07FB01A68108700A75B9A /* AppDelegate.m */,
@@ -706,229 +168,69 @@
 			name = apolloschurchapp;
 			sourceTree = "<group>";
 		};
-		146834001AC3E56700842450 /* Products */ = {
-			isa = PBXGroup;
-			children = (
-				146834041AC3E56700842450 /* libReact.a */,
-				3DAD3EA31DF850E9000B6D8A /* libReact.a */,
-				3DAD3EA51DF850E9000B6D8A /* libyoga.a */,
-				3DAD3EA71DF850E9000B6D8A /* libyoga.a */,
-				3DAD3EA91DF850E9000B6D8A /* libcxxreact.a */,
-				3DAD3EAB1DF850E9000B6D8A /* libcxxreact.a */,
-				3DAD3EAD1DF850E9000B6D8A /* libjschelpers.a */,
-				3DAD3EAF1DF850E9000B6D8A /* libjschelpers.a */,
-				2DF0FFDF2056DD460020B375 /* libjsinspector.a */,
-				2DF0FFE12056DD460020B375 /* libjsinspector-tvOS.a */,
-				2DF0FFE32056DD460020B375 /* libthird-party.a */,
-				2DF0FFE52056DD460020B375 /* libthird-party.a */,
-				2DF0FFE72056DD460020B375 /* libdouble-conversion.a */,
-				2DF0FFE92056DD460020B375 /* libdouble-conversion.a */,
-				2DF0FFEB2056DD460020B375 /* libprivatedata.a */,
-				2DF0FFED2056DD460020B375 /* libprivatedata-tvOS.a */,
-			);
-			name = Products;
-			sourceTree = "<group>";
-		};
 		2D16E6871FA4F8E400B85C8A /* Frameworks */ = {
 			isa = PBXGroup;
 			children = (
-				4217B144214ADCE10034808C /* SystemConfiguration.framework */,
-				4217B142214ADCD50034808C /* UIKit.framework */,
+				ED297162215061F000B7C4FE /* JavaScriptCore.framework */,
+				ED2971642150620600B7C4FE /* JavaScriptCore.framework */,
 				2D16E6891FA4F8E400B85C8A /* libReact.a */,
+				DDB6B5B7B6A0D1ECB68CF0DD /* libPods-apolloschurchapp.a */,
+				38B9762ACA099D28C28DBB31 /* libPods-apolloschurchapp-tvOS.a */,
+				4F64CCA987A0419EB9C02236 /* libPods-apolloschurchapp-tvOSTests.a */,
+				560CBCD50AE7D282715D134E /* libPods-apolloschurchappTests.a */,
 			);
 			name = Frameworks;
 			sourceTree = "<group>";
 		};
-		427787E92149B9690045AD7F /* Products */ = {
-			isa = PBXGroup;
-			children = (
-				427787ED2149B96A0045AD7F /* libRCTOneSignal.a */,
-			);
-			name = Products;
-			sourceTree = "<group>";
-		};
-		42B4B698219DD7CA00162F25 /* Products */ = {
+		58D6A3E05A234CD89DC0BCE1 /* Resources */ = {
 			isa = PBXGroup;
 			children = (
-				42B4B6CC219DD7CB00162F25 /* libRNScreens.a */,
-			);
-			name = Products;
-			sourceTree = "<group>";
-		};
-		4446111C6E474E038489E599 /* Resources */ = {
-			isa = PBXGroup;
-			children = (
-				4629759169AB4756B447B16A /* DroidSerif-Bold.ttf */,
-				D979B537509247C099CE3F24 /* DroidSerif-BoldItalic.ttf */,
-				F9CFD638A5414DFF961A8D11 /* DroidSerif-Italic.ttf */,
-				76E6AD5294554A5FA53DB415 /* DroidSerif-Regular.ttf */,
-				8E13C8F9AE60487C9ED95C21 /* Inter-UI-Black.otf */,
-				22246A6BC58E4CF09A22A4DF /* Inter-UI-BlackItalic.otf */,
-				FB25CB02F40D4CC39DDA3C74 /* Inter-UI-Bold.otf */,
-				32A467E2C3364ABDBB7BD0D1 /* Inter-UI-BoldItalic.otf */,
-				8CA3C04F98954FB2895CD36D /* Inter-UI-Italic.otf */,
-				9FD7D997F4F14C439AC699B3 /* Inter-UI-Medium.otf */,
-				F79112193F3548D284406ABF /* Inter-UI-MediumItalic.otf */,
-				10F42B11F27E467A8C71C280 /* Inter-UI-Regular.otf */,
+				E3B8A0AC5A6B4FABB3BDF6CB /* DroidSerif-Bold.ttf */,
+				A93F9D112A034626A9421759 /* DroidSerif-BoldItalic.ttf */,
+				ADC3D2DB245545ADB1CAB3FE /* DroidSerif-Italic.ttf */,
+				4E007B33EDD74B82AEF02C24 /* DroidSerif-Regular.ttf */,
+				EC21254B449443F99016EBFD /* Inter-UI-Black.otf */,
+				5A5A2BC2998547F4816B82E4 /* Inter-UI-BlackItalic.otf */,
+				D5157D807E164356ADE87867 /* Inter-UI-Bold.otf */,
+				2F5410F239E9477B9C2E86BD /* Inter-UI-BoldItalic.otf */,
+				63F6EE53A9B44B4388B5F1C2 /* Inter-UI-Italic.otf */,
+				DC74A378C1CC40E4B6192D7F /* Inter-UI-Medium.otf */,
+				A460FD7884FD4574A818005A /* Inter-UI-MediumItalic.otf */,
+				A613256118404CB691DE2C8E /* Inter-UI-Regular.otf */,
 			);
 			name = Resources;
 			sourceTree = "<group>";
 		};
-		5E91572E1DD0AC6500FF2AA8 /* Products */ = {
+		76EC01CF690166B3232686FE /* Pods */ = {
 			isa = PBXGroup;
 			children = (
-				5E9157331DD0AC6500FF2AA8 /* libRCTAnimation.a */,
-				5E9157351DD0AC6500FF2AA8 /* libRCTAnimation.a */,
+				54F271B8EB67A4997A2C7D96 /* Pods-apolloschurchapp.debug.xcconfig */,
+				1F8F5BC4745C8F22C695573D /* Pods-apolloschurchapp.release.xcconfig */,
+				745C835CA2F1E1EC2425152A /* Pods-apolloschurchapp-tvOS.debug.xcconfig */,
+				AE85030F59F256E90D5A4C2B /* Pods-apolloschurchapp-tvOS.release.xcconfig */,
+				D394E3064D75710E81C51EB0 /* Pods-apolloschurchapp-tvOSTests.debug.xcconfig */,
+				DA9745795726553C6FA9E7A8 /* Pods-apolloschurchapp-tvOSTests.release.xcconfig */,
+				AB44FC16DED929081698EDFD /* Pods-apolloschurchappTests.debug.xcconfig */,
+				E98AC9782C338F13632EF710 /* Pods-apolloschurchappTests.release.xcconfig */,
 			);
-			name = Products;
+			path = Pods;
 			sourceTree = "<group>";
 		};
-		78C398B11ACF4ADC00677621 /* Products */ = {
+		79CEBF9D223011FC00D8F685 /* Recovered References */ = {
 			isa = PBXGroup;
 			children = (
-				78C398B91ACF4ADC00677621 /* libRCTLinking.a */,
-				3DAD3E881DF850E9000B6D8A /* libRCTLinking-tvOS.a */,
-			);
-			name = Products;
-			sourceTree = "<group>";
-		};
-		7914344221260177006F13B7 /* Recovered References */ = {
-			isa = PBXGroup;
-			children = (
-				71E6499CCC9D4DB2ADD365D8 /* libDBCustomTabs.a */,
-				60E52391C9744A46B3925A78 /* libBVLinearGradient.a */,
-				BF5A2B416EB74A44923FED7B /* libSafariViewManager.a */,
-				F08D1EBF0C2A4E6798AA8F36 /* libSplashScreen.a */,
-				CFAF46FBA8B44C7B8DCA7707 /* libRNSVG.a */,
-				FC8FFB7C37BB4499AEB6FA37 /* libRCTVideo.a */,
-				84716CBFF56347BA880A16C6 /* libRNSVG-tvOS.a */,
-				828255630B3246AEA19CF24D /* libRCTOneSignal.a */,
-				3F58D699A37B432BA1C0F092 /* libRNImagePicker.a */,
-				14D838A2FAE743C7B1DA5E31 /* libRNDeviceInfo.a */,
-				A574C961754742F688E43151 /* libRNDeviceInfo-tvOS.a */,
-				643D51DCF8F14993B9AA6990 /* libMusicControl.a */,
-				67E66409EF8A4BC7A1B9E054 /* libMusicControl-tvOS.a */,
-				B16900D1DAC94F96B742B4EA /* libRNScreens.a */,
+				0D480D95FC7F4569B8B934E3 /* libRCTOneSignal.a */,
 			);
 			name = "Recovered References";
 			sourceTree = "<group>";
 		};
-		791434682126017A006F13B7 /* Products */ = {
-			isa = PBXGroup;
-			children = (
-				7914348B2126017B006F13B7 /* libSafariViewManager.a */,
-			);
-			name = Products;
-			sourceTree = "<group>";
-		};
-		7914346A2126017A006F13B7 /* Products */ = {
-			isa = PBXGroup;
-			children = (
-				791434822126017B006F13B7 /* libDBCustomTabs.a */,
-			);
-			name = Products;
-			sourceTree = "<group>";
-		};
-		7914346C2126017A006F13B7 /* Products */ = {
-			isa = PBXGroup;
-			children = (
-				7914348E2126017B006F13B7 /* libSplashScreen.a */,
-			);
-			name = Products;
-			sourceTree = "<group>";
-		};
-		7914346E2126017A006F13B7 /* Products */ = {
-			isa = PBXGroup;
-			children = (
-				791434772126017B006F13B7 /* libBVLinearGradient.a */,
-				791434792126017B006F13B7 /* libBVLinearGradient.a */,
-			);
-			name = Products;
-			sourceTree = "<group>";
-		};
-		791434702126017A006F13B7 /* Products */ = {
-			isa = PBXGroup;
-			children = (
-				791434862126017B006F13B7 /* libRNSVG.a */,
-				791434882126017B006F13B7 /* libRNSVG-tvOS.a */,
-			);
-			name = Products;
-			sourceTree = "<group>";
-		};
-		791434722126017A006F13B7 /* Products */ = {
-			isa = PBXGroup;
-			children = (
-				7914347D2126017B006F13B7 /* libRCTVideo.a */,
-				7914347F2126017B006F13B7 /* libRCTVideo.a */,
-			);
-			name = Products;
-			sourceTree = "<group>";
-		};
-		794FE954219DF8880046142B /* Products */ = {
-			isa = PBXGroup;
-			children = (
-				794FE988219DF8880046142B /* libRNScreens.a */,
-			);
-			name = Products;
-			sourceTree = "<group>";
-		};
-		796F252E212CAD5D00C6935E /* Products */ = {
-			isa = PBXGroup;
-			children = (
-				796F2533212CAD5D00C6935E /* libRNDeviceInfo.a */,
-				796F2535212CAD5D00C6935E /* libRNDeviceInfo-tvOS.a */,
-			);
-			name = Products;
-			sourceTree = "<group>";
-		};
-		797304142146322D00F6E05B /* Products */ = {
-			isa = PBXGroup;
-			children = (
-				797304192146322D00F6E05B /* libMusicControl.a */,
-				7973041B2146322D00F6E05B /* libMusicControl-tvOS.a */,
-			);
-			name = Products;
-			sourceTree = "<group>";
-		};
 		832341AE1AAA6A7D00B99B32 /* Libraries */ = {
 			isa = PBXGroup;
 			children = (
-				5E91572D1DD0AC6500FF2AA8 /* RCTAnimation.xcodeproj */,
-				146833FF1AC3E56700842450 /* React.xcodeproj */,
-				00C302A71ABCB8CE00DB3ED1 /* RCTActionSheet.xcodeproj */,
-				ADBDB91F1DFEBF0600ED6528 /* RCTBlob.xcodeproj */,
-				00C302B51ABCB90400DB3ED1 /* RCTGeolocation.xcodeproj */,
-				00C302BB1ABCB91800DB3ED1 /* RCTImage.xcodeproj */,
-				78C398B01ACF4ADC00677621 /* RCTLinking.xcodeproj */,
-				00C302D31ABCB9D200DB3ED1 /* RCTNetwork.xcodeproj */,
-				139105B61AF99BAD00B5F7CC /* RCTSettings.xcodeproj */,
-				832341B01AAA6A8300B99B32 /* RCTText.xcodeproj */,
-				00C302DF1ABCB9EE00DB3ED1 /* RCTVibration.xcodeproj */,
-				139FDEE61B06529A00C62182 /* RCTWebSocket.xcodeproj */,
-				6BAAC994942548609D0EEECA /* ReactNativeCustomTabs.xcodeproj */,
-				46704FC4FCEB45B6B9DD92BB /* BVLinearGradient.xcodeproj */,
-				6B6E5A404A4B4A34B18D7D34 /* SafariViewManager.xcodeproj */,
-				A64D00F181AE4927A4632B6E /* SplashScreen.xcodeproj */,
-				01441BF099BE44EE8BA8E390 /* RNSVG.xcodeproj */,
-				2F8741F0746D4C8A89970C4D /* RCTVideo.xcodeproj */,
-				84B340CC6C3940A782834F00 /* RCTOneSignal.xcodeproj */,
-				3BD7DCDF7B194D7BB9BE3C6C /* RNImagePicker.xcodeproj */,
-				239ECFF08FA841B99DB1CAFA /* RNDeviceInfo.xcodeproj */,
-				4BD3C4E6742F4F6380640CA9 /* MusicControl.xcodeproj */,
-				59AF37DEFAA847DBAB3A0526 /* RNScreens.xcodeproj */,
 			);
 			name = Libraries;
 			sourceTree = "<group>";
 		};
-		832341B11AAA6A8300B99B32 /* Products */ = {
-			isa = PBXGroup;
-			children = (
-				832341B51AAA6A8300B99B32 /* libRCTText.a */,
-				3DAD3E941DF850E9000B6D8A /* libRCTText-tvOS.a */,
-			);
-			name = Products;
-			sourceTree = "<group>";
-		};
 		83CBB9F61A601CBA00E9B192 = {
 			isa = PBXGroup;
 			children = (
@@ -937,8 +239,9 @@
 				00E356EF1AD99517003FC87E /* apolloschurchappTests */,
 				83CBBA001A601CBA00E9B192 /* Products */,
 				2D16E6871FA4F8E400B85C8A /* Frameworks */,
-				4446111C6E474E038489E599 /* Resources */,
-				7914344221260177006F13B7 /* Recovered References */,
+				58D6A3E05A234CD89DC0BCE1 /* Resources */,
+				79CEBF9D223011FC00D8F685 /* Recovered References */,
+				76EC01CF690166B3232686FE /* Pods */,
 			);
 			indentWidth = 2;
 			sourceTree = "<group>";
@@ -956,23 +259,6 @@
 			name = Products;
 			sourceTree = "<group>";
 		};
-		ADBDB9201DFEBF0600ED6528 /* Products */ = {
-			isa = PBXGroup;
-			children = (
-				ADBDB9271DFEBF0700ED6528 /* libRCTBlob.a */,
-				2D16E6721FA4F8DC00B85C8A /* libRCTBlob-tvOS.a */,
-			);
-			name = Products;
-			sourceTree = "<group>";
-		};
-		BF99316D2138673B0077FD20 /* Products */ = {
-			isa = PBXGroup;
-			children = (
-				BF9931712138673B0077FD20 /* libRNImagePicker.a */,
-			);
-			name = Products;
-			sourceTree = "<group>";
-		};
 /* End PBXGroup section */
 
 /* Begin PBXNativeTarget section */
@@ -980,6 +266,7 @@
 			isa = PBXNativeTarget;
 			buildConfigurationList = 00E357021AD99517003FC87E /* Build configuration list for PBXNativeTarget "apolloschurchappTests" */;
 			buildPhases = (
+				2C62ED438C51D0F43EC7017B /* [CP] Check Pods Manifest.lock */,
 				00E356EA1AD99517003FC87E /* Sources */,
 				00E356EB1AD99517003FC87E /* Frameworks */,
 				00E356EC1AD99517003FC87E /* Resources */,
@@ -998,11 +285,11 @@
 			isa = PBXNativeTarget;
 			buildConfigurationList = 13B07F931A680F5B00A75B9A /* Build configuration list for PBXNativeTarget "apolloschurchapp" */;
 			buildPhases = (
+				DEEF24CE4F76789E5E8C369D /* [CP] Check Pods Manifest.lock */,
 				13B07F871A680F5B00A75B9A /* Sources */,
 				13B07F8C1A680F5B00A75B9A /* Frameworks */,
 				13B07F8E1A680F5B00A75B9A /* Resources */,
 				00DD1BFF1BD5951E006B06BC /* Bundle React Native code and images */,
-				4217B141214ADBC00034808C /* Embed App Extensions */,
 			);
 			buildRules = (
 			);
@@ -1017,6 +304,7 @@
 			isa = PBXNativeTarget;
 			buildConfigurationList = 2D02E4BA1E0B4A5E006451C7 /* Build configuration list for PBXNativeTarget "apolloschurchapp-tvOS" */;
 			buildPhases = (
+				9C20354F160AAF86C8281F23 /* [CP] Check Pods Manifest.lock */,
 				2D02E4771E0B4A5D006451C7 /* Sources */,
 				2D02E4781E0B4A5D006451C7 /* Frameworks */,
 				2D02E4791E0B4A5D006451C7 /* Resources */,
@@ -1035,6 +323,7 @@
 			isa = PBXNativeTarget;
 			buildConfigurationList = 2D02E4BB1E0B4A5E006451C7 /* Build configuration list for PBXNativeTarget "apolloschurchapp-tvOSTests" */;
 			buildPhases = (
+				A85CD736CDC3356677735901 /* [CP] Check Pods Manifest.lock */,
 				2D02E48C1E0B4A5D006451C7 /* Sources */,
 				2D02E48D1E0B4A5D006451C7 /* Frameworks */,
 				2D02E48E1E0B4A5D006451C7 /* Resources */,
@@ -1055,7 +344,7 @@
 		83CBB9F71A601CBA00E9B192 /* Project object */ = {
 			isa = PBXProject;
 			attributes = {
-				LastUpgradeCheck = 610;
+				LastUpgradeCheck = 940;
 				ORGANIZATIONNAME = Facebook;
 				TargetAttributes = {
 					00E356ED1AD99517003FC87E = {
@@ -1064,11 +353,7 @@
 					};
 					13B07F861A680F5B00A75B9A = {
 						DevelopmentTeam = 7TM8C6252Z;
-						SystemCapabilities = {
-							com.apple.Push = {
-								enabled = 1;
-							};
-						};
+						ProvisioningStyle = Automatic;
 					};
 					2D02E47A1E0B4A5D006451C7 = {
 						CreatedOnToolsVersion = 8.2.1;
@@ -1086,106 +371,13 @@
 			developmentRegion = English;
 			hasScannedForEncodings = 0;
 			knownRegions = (
+				English,
 				en,
 				Base,
 			);
 			mainGroup = 83CBB9F61A601CBA00E9B192;
 			productRefGroup = 83CBBA001A601CBA00E9B192 /* Products */;
 			projectDirPath = "";
-			projectReferences = (
-				{
-					ProductGroup = 7914346E2126017A006F13B7 /* Products */;
-					ProjectRef = 46704FC4FCEB45B6B9DD92BB /* BVLinearGradient.xcodeproj */;
-				},
-				{
-					ProductGroup = 797304142146322D00F6E05B /* Products */;
-					ProjectRef = 4BD3C4E6742F4F6380640CA9 /* MusicControl.xcodeproj */;
-				},
-				{
-					ProductGroup = 00C302A81ABCB8CE00DB3ED1 /* Products */;
-					ProjectRef = 00C302A71ABCB8CE00DB3ED1 /* RCTActionSheet.xcodeproj */;
-				},
-				{
-					ProductGroup = 5E91572E1DD0AC6500FF2AA8 /* Products */;
-					ProjectRef = 5E91572D1DD0AC6500FF2AA8 /* RCTAnimation.xcodeproj */;
-				},
-				{
-					ProductGroup = ADBDB9201DFEBF0600ED6528 /* Products */;
-					ProjectRef = ADBDB91F1DFEBF0600ED6528 /* RCTBlob.xcodeproj */;
-				},
-				{
-					ProductGroup = 00C302B61ABCB90400DB3ED1 /* Products */;
-					ProjectRef = 00C302B51ABCB90400DB3ED1 /* RCTGeolocation.xcodeproj */;
-				},
-				{
-					ProductGroup = 00C302BC1ABCB91800DB3ED1 /* Products */;
-					ProjectRef = 00C302BB1ABCB91800DB3ED1 /* RCTImage.xcodeproj */;
-				},
-				{
-					ProductGroup = 78C398B11ACF4ADC00677621 /* Products */;
-					ProjectRef = 78C398B01ACF4ADC00677621 /* RCTLinking.xcodeproj */;
-				},
-				{
-					ProductGroup = 00C302D41ABCB9D200DB3ED1 /* Products */;
-					ProjectRef = 00C302D31ABCB9D200DB3ED1 /* RCTNetwork.xcodeproj */;
-				},
-				{
-					ProductGroup = 427787E92149B9690045AD7F /* Products */;
-					ProjectRef = 84B340CC6C3940A782834F00 /* RCTOneSignal.xcodeproj */;
-				},
-				{
-					ProductGroup = 139105B71AF99BAD00B5F7CC /* Products */;
-					ProjectRef = 139105B61AF99BAD00B5F7CC /* RCTSettings.xcodeproj */;
-				},
-				{
-					ProductGroup = 832341B11AAA6A8300B99B32 /* Products */;
-					ProjectRef = 832341B01AAA6A8300B99B32 /* RCTText.xcodeproj */;
-				},
-				{
-					ProductGroup = 00C302E01ABCB9EE00DB3ED1 /* Products */;
-					ProjectRef = 00C302DF1ABCB9EE00DB3ED1 /* RCTVibration.xcodeproj */;
-				},
-				{
-					ProductGroup = 791434722126017A006F13B7 /* Products */;
-					ProjectRef = 2F8741F0746D4C8A89970C4D /* RCTVideo.xcodeproj */;
-				},
-				{
-					ProductGroup = 139FDEE71B06529A00C62182 /* Products */;
-					ProjectRef = 139FDEE61B06529A00C62182 /* RCTWebSocket.xcodeproj */;
-				},
-				{
-					ProductGroup = 146834001AC3E56700842450 /* Products */;
-					ProjectRef = 146833FF1AC3E56700842450 /* React.xcodeproj */;
-				},
-				{
-					ProductGroup = 7914346A2126017A006F13B7 /* Products */;
-					ProjectRef = 6BAAC994942548609D0EEECA /* ReactNativeCustomTabs.xcodeproj */;
-				},
-				{
-					ProductGroup = 796F252E212CAD5D00C6935E /* Products */;
-					ProjectRef = 239ECFF08FA841B99DB1CAFA /* RNDeviceInfo.xcodeproj */;
-				},
-				{
-					ProductGroup = BF99316D2138673B0077FD20 /* Products */;
-					ProjectRef = 3BD7DCDF7B194D7BB9BE3C6C /* RNImagePicker.xcodeproj */;
-				},
-				{
-					ProductGroup = 42B4B698219DD7CA00162F25 /* Products */;
-					ProjectRef = 59AF37DEFAA847DBAB3A0526 /* RNScreens.xcodeproj */;
-				},
-				{
-					ProductGroup = 791434702126017A006F13B7 /* Products */;
-					ProjectRef = 01441BF099BE44EE8BA8E390 /* RNSVG.xcodeproj */;
-				},
-				{
-					ProductGroup = 791434682126017A006F13B7 /* Products */;
-					ProjectRef = 6B6E5A404A4B4A34B18D7D34 /* SafariViewManager.xcodeproj */;
-				},
-				{
-					ProductGroup = 7914346C2126017A006F13B7 /* Products */;
-					ProjectRef = A64D00F181AE4927A4632B6E /* SplashScreen.xcodeproj */;
-				},
-			);
 			projectRoot = "";
 			targets = (
 				13B07F861A680F5B00A75B9A /* apolloschurchapp */,
@@ -1196,387 +388,6 @@
 		};
 /* End PBXProject section */
 
-/* Begin PBXReferenceProxy section */
-		00C302AC1ABCB8CE00DB3ED1 /* libRCTActionSheet.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libRCTActionSheet.a;
-			remoteRef = 00C302AB1ABCB8CE00DB3ED1 /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		00C302BA1ABCB90400DB3ED1 /* libRCTGeolocation.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libRCTGeolocation.a;
-			remoteRef = 00C302B91ABCB90400DB3ED1 /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		00C302C01ABCB91800DB3ED1 /* libRCTImage.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libRCTImage.a;
-			remoteRef = 00C302BF1ABCB91800DB3ED1 /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		00C302DC1ABCB9D200DB3ED1 /* libRCTNetwork.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libRCTNetwork.a;
-			remoteRef = 00C302DB1ABCB9D200DB3ED1 /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		00C302E41ABCB9EE00DB3ED1 /* libRCTVibration.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libRCTVibration.a;
-			remoteRef = 00C302E31ABCB9EE00DB3ED1 /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		139105C11AF99BAD00B5F7CC /* libRCTSettings.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libRCTSettings.a;
-			remoteRef = 139105C01AF99BAD00B5F7CC /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		139FDEF41B06529B00C62182 /* libRCTWebSocket.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libRCTWebSocket.a;
-			remoteRef = 139FDEF31B06529B00C62182 /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		146834041AC3E56700842450 /* libReact.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libReact.a;
-			remoteRef = 146834031AC3E56700842450 /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		2D16E6721FA4F8DC00B85C8A /* libRCTBlob-tvOS.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = "libRCTBlob-tvOS.a";
-			remoteRef = 2D16E6711FA4F8DC00B85C8A /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		2D16E6841FA4F8DC00B85C8A /* libfishhook.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libfishhook.a;
-			remoteRef = 2D16E6831FA4F8DC00B85C8A /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		2D16E6861FA4F8DC00B85C8A /* libfishhook-tvOS.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = "libfishhook-tvOS.a";
-			remoteRef = 2D16E6851FA4F8DC00B85C8A /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		2DF0FFDF2056DD460020B375 /* libjsinspector.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libjsinspector.a;
-			remoteRef = 2DF0FFDE2056DD460020B375 /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		2DF0FFE12056DD460020B375 /* libjsinspector-tvOS.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = "libjsinspector-tvOS.a";
-			remoteRef = 2DF0FFE02056DD460020B375 /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		2DF0FFE32056DD460020B375 /* libthird-party.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = "libthird-party.a";
-			remoteRef = 2DF0FFE22056DD460020B375 /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		2DF0FFE52056DD460020B375 /* libthird-party.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = "libthird-party.a";
-			remoteRef = 2DF0FFE42056DD460020B375 /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		2DF0FFE72056DD460020B375 /* libdouble-conversion.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = "libdouble-conversion.a";
-			remoteRef = 2DF0FFE62056DD460020B375 /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		2DF0FFE92056DD460020B375 /* libdouble-conversion.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = "libdouble-conversion.a";
-			remoteRef = 2DF0FFE82056DD460020B375 /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		2DF0FFEB2056DD460020B375 /* libprivatedata.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libprivatedata.a;
-			remoteRef = 2DF0FFEA2056DD460020B375 /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		2DF0FFED2056DD460020B375 /* libprivatedata-tvOS.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = "libprivatedata-tvOS.a";
-			remoteRef = 2DF0FFEC2056DD460020B375 /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		3DAD3E841DF850E9000B6D8A /* libRCTImage-tvOS.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = "libRCTImage-tvOS.a";
-			remoteRef = 3DAD3E831DF850E9000B6D8A /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		3DAD3E881DF850E9000B6D8A /* libRCTLinking-tvOS.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = "libRCTLinking-tvOS.a";
-			remoteRef = 3DAD3E871DF850E9000B6D8A /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		3DAD3E8C1DF850E9000B6D8A /* libRCTNetwork-tvOS.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = "libRCTNetwork-tvOS.a";
-			remoteRef = 3DAD3E8B1DF850E9000B6D8A /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		3DAD3E901DF850E9000B6D8A /* libRCTSettings-tvOS.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = "libRCTSettings-tvOS.a";
-			remoteRef = 3DAD3E8F1DF850E9000B6D8A /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		3DAD3E941DF850E9000B6D8A /* libRCTText-tvOS.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = "libRCTText-tvOS.a";
-			remoteRef = 3DAD3E931DF850E9000B6D8A /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		3DAD3E991DF850E9000B6D8A /* libRCTWebSocket-tvOS.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = "libRCTWebSocket-tvOS.a";
-			remoteRef = 3DAD3E981DF850E9000B6D8A /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		3DAD3EA31DF850E9000B6D8A /* libReact.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libReact.a;
-			remoteRef = 3DAD3EA21DF850E9000B6D8A /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		3DAD3EA51DF850E9000B6D8A /* libyoga.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libyoga.a;
-			remoteRef = 3DAD3EA41DF850E9000B6D8A /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		3DAD3EA71DF850E9000B6D8A /* libyoga.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libyoga.a;
-			remoteRef = 3DAD3EA61DF850E9000B6D8A /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		3DAD3EA91DF850E9000B6D8A /* libcxxreact.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libcxxreact.a;
-			remoteRef = 3DAD3EA81DF850E9000B6D8A /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		3DAD3EAB1DF850E9000B6D8A /* libcxxreact.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libcxxreact.a;
-			remoteRef = 3DAD3EAA1DF850E9000B6D8A /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		3DAD3EAD1DF850E9000B6D8A /* libjschelpers.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libjschelpers.a;
-			remoteRef = 3DAD3EAC1DF850E9000B6D8A /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		3DAD3EAF1DF850E9000B6D8A /* libjschelpers.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libjschelpers.a;
-			remoteRef = 3DAD3EAE1DF850E9000B6D8A /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		427787ED2149B96A0045AD7F /* libRCTOneSignal.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libRCTOneSignal.a;
-			remoteRef = 427787EC2149B96A0045AD7F /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		42B4B6CC219DD7CB00162F25 /* libRNScreens.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libRNScreens.a;
-			remoteRef = 42B4B6CB219DD7CB00162F25 /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		5E9157331DD0AC6500FF2AA8 /* libRCTAnimation.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libRCTAnimation.a;
-			remoteRef = 5E9157321DD0AC6500FF2AA8 /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		5E9157351DD0AC6500FF2AA8 /* libRCTAnimation.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libRCTAnimation.a;
-			remoteRef = 5E9157341DD0AC6500FF2AA8 /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		78C398B91ACF4ADC00677621 /* libRCTLinking.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libRCTLinking.a;
-			remoteRef = 78C398B81ACF4ADC00677621 /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		791434772126017B006F13B7 /* libBVLinearGradient.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libBVLinearGradient.a;
-			remoteRef = 791434762126017B006F13B7 /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		791434792126017B006F13B7 /* libBVLinearGradient.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libBVLinearGradient.a;
-			remoteRef = 791434782126017B006F13B7 /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		7914347D2126017B006F13B7 /* libRCTVideo.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libRCTVideo.a;
-			remoteRef = 7914347C2126017B006F13B7 /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		7914347F2126017B006F13B7 /* libRCTVideo.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libRCTVideo.a;
-			remoteRef = 7914347E2126017B006F13B7 /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		791434822126017B006F13B7 /* libDBCustomTabs.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libDBCustomTabs.a;
-			remoteRef = 791434812126017B006F13B7 /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		791434862126017B006F13B7 /* libRNSVG.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libRNSVG.a;
-			remoteRef = 791434852126017B006F13B7 /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		791434882126017B006F13B7 /* libRNSVG-tvOS.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = "libRNSVG-tvOS.a";
-			remoteRef = 791434872126017B006F13B7 /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		7914348B2126017B006F13B7 /* libSafariViewManager.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libSafariViewManager.a;
-			remoteRef = 7914348A2126017B006F13B7 /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		7914348E2126017B006F13B7 /* libSplashScreen.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libSplashScreen.a;
-			remoteRef = 7914348D2126017B006F13B7 /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		794FE988219DF8880046142B /* libRNScreens.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libRNScreens.a;
-			remoteRef = 794FE987219DF8880046142B /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		796F2533212CAD5D00C6935E /* libRNDeviceInfo.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libRNDeviceInfo.a;
-			remoteRef = 796F2532212CAD5D00C6935E /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		796F2535212CAD5D00C6935E /* libRNDeviceInfo-tvOS.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = "libRNDeviceInfo-tvOS.a";
-			remoteRef = 796F2534212CAD5D00C6935E /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		797304192146322D00F6E05B /* libMusicControl.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libMusicControl.a;
-			remoteRef = 797304182146322D00F6E05B /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		7973041B2146322D00F6E05B /* libMusicControl-tvOS.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = "libMusicControl-tvOS.a";
-			remoteRef = 7973041A2146322D00F6E05B /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		832341B51AAA6A8300B99B32 /* libRCTText.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libRCTText.a;
-			remoteRef = 832341B41AAA6A8300B99B32 /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		ADBDB9271DFEBF0700ED6528 /* libRCTBlob.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libRCTBlob.a;
-			remoteRef = ADBDB9261DFEBF0700ED6528 /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		BF9931712138673B0077FD20 /* libRNImagePicker.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libRNImagePicker.a;
-			remoteRef = BF9931702138673B0077FD20 /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-/* End PBXReferenceProxy section */
-
 /* Begin PBXResourcesBuildPhase section */
 		00E356EC1AD99517003FC87E /* Resources */ = {
 			isa = PBXResourcesBuildPhase;
@@ -1591,18 +402,18 @@
 			files = (
 				13B07FBF1A68108700A75B9A /* Images.xcassets in Resources */,
 				13B07FBD1A68108700A75B9A /* LaunchScreen.xib in Resources */,
-				C87CA8735EEB43C4A55CB285 /* DroidSerif-Bold.ttf in Resources */,
-				59D8DFA78CDF4642892CC142 /* DroidSerif-BoldItalic.ttf in Resources */,
-				9ACBD642B18D41C9BB1E4D9E /* DroidSerif-Italic.ttf in Resources */,
-				D5744BF3B41D4BC49F93CD68 /* DroidSerif-Regular.ttf in Resources */,
-				417027FD83CA4902AB4DB2B4 /* Inter-UI-Black.otf in Resources */,
-				6E4442FB39BE4F898DE4C454 /* Inter-UI-BlackItalic.otf in Resources */,
-				F8FAD93CCE5641A8B87611EA /* Inter-UI-Bold.otf in Resources */,
-				E374C61F2AAF41D3B615AB44 /* Inter-UI-BoldItalic.otf in Resources */,
-				5CA1D8E805684478B04ABB60 /* Inter-UI-Italic.otf in Resources */,
-				A173C226549E48B991AC5D98 /* Inter-UI-Medium.otf in Resources */,
-				0D4EDF6EBA274F9D93DDED76 /* Inter-UI-MediumItalic.otf in Resources */,
-				7D060CA312AB4E828CD60DDC /* Inter-UI-Regular.otf in Resources */,
+				08CE105F17284254AD54AF84 /* DroidSerif-Bold.ttf in Resources */,
+				B02F194A3F6A4FE29AC799B4 /* DroidSerif-BoldItalic.ttf in Resources */,
+				90743C40BF544F10A810C43C /* DroidSerif-Italic.ttf in Resources */,
+				93A2B0A9328A46A4B7DD5EFA /* DroidSerif-Regular.ttf in Resources */,
+				68D1351E80AA4A2C96288FD9 /* Inter-UI-Black.otf in Resources */,
+				578FFEC1D7D54C9B871A9E5B /* Inter-UI-BlackItalic.otf in Resources */,
+				7FBC6BC3CE8D48298F9850A9 /* Inter-UI-Bold.otf in Resources */,
+				894732A70B4740678E85B593 /* Inter-UI-BoldItalic.otf in Resources */,
+				01F091B02048490A8F9EF4FE /* Inter-UI-Italic.otf in Resources */,
+				1C48DCDE11AC47C48E918489 /* Inter-UI-Medium.otf in Resources */,
+				FCB3069DB5DD4170B2CAEFC4 /* Inter-UI-MediumItalic.otf in Resources */,
+				AB3BD177B8A14193A5EEDDF8 /* Inter-UI-Regular.otf in Resources */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
@@ -1638,6 +449,28 @@
 			shellPath = /bin/sh;
 			shellScript = "export NODE_BINARY=node\n../node_modules/react-native/scripts/react-native-xcode.sh";
 		};
+		2C62ED438C51D0F43EC7017B /* [CP] Check Pods Manifest.lock */ = {
+			isa = PBXShellScriptBuildPhase;
+			buildActionMask = 2147483647;
+			files = (
+			);
+			inputFileListPaths = (
+			);
+			inputPaths = (
+				"${PODS_PODFILE_DIR_PATH}/Podfile.lock",
+				"${PODS_ROOT}/Manifest.lock",
+			);
+			name = "[CP] Check Pods Manifest.lock";
+			outputFileListPaths = (
+			);
+			outputPaths = (
+				"$(DERIVED_FILE_DIR)/Pods-apolloschurchappTests-checkManifestLockResult.txt",
+			);
+			runOnlyForDeploymentPostprocessing = 0;
+			shellPath = /bin/sh;
+			shellScript = "diff \"${PODS_PODFILE_DIR_PATH}/Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null\nif [ $? != 0 ] ; then\n    # print error to STDERR\n    echo \"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\" >&2\n    exit 1\nfi\n# This output is used by Xcode 'outputs' to avoid re-running this script phase.\necho \"SUCCESS\" > \"${SCRIPT_OUTPUT_FILE_0}\"\n";
+			showEnvVarsInLog = 0;
+		};
 		2D02E4CB1E0B4B27006451C7 /* Bundle React Native Code And Images */ = {
 			isa = PBXShellScriptBuildPhase;
 			buildActionMask = 2147483647;
@@ -1652,6 +485,72 @@
 			shellPath = /bin/sh;
 			shellScript = "export NODE_BINARY=node\n../node_modules/react-native/scripts/react-native-xcode.sh";
 		};
+		9C20354F160AAF86C8281F23 /* [CP] Check Pods Manifest.lock */ = {
+			isa = PBXShellScriptBuildPhase;
+			buildActionMask = 2147483647;
+			files = (
+			);
+			inputFileListPaths = (
+			);
+			inputPaths = (
+				"${PODS_PODFILE_DIR_PATH}/Podfile.lock",
+				"${PODS_ROOT}/Manifest.lock",
+			);
+			name = "[CP] Check Pods Manifest.lock";
+			outputFileListPaths = (
+			);
+			outputPaths = (
+				"$(DERIVED_FILE_DIR)/Pods-apolloschurchapp-tvOS-checkManifestLockResult.txt",
+			);
+			runOnlyForDeploymentPostprocessing = 0;
+			shellPath = /bin/sh;
+			shellScript = "diff \"${PODS_PODFILE_DIR_PATH}/Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null\nif [ $? != 0 ] ; then\n    # print error to STDERR\n    echo \"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\" >&2\n    exit 1\nfi\n# This output is used by Xcode 'outputs' to avoid re-running this script phase.\necho \"SUCCESS\" > \"${SCRIPT_OUTPUT_FILE_0}\"\n";
+			showEnvVarsInLog = 0;
+		};
+		A85CD736CDC3356677735901 /* [CP] Check Pods Manifest.lock */ = {
+			isa = PBXShellScriptBuildPhase;
+			buildActionMask = 2147483647;
+			files = (
+			);
+			inputFileListPaths = (
+			);
+			inputPaths = (
+				"${PODS_PODFILE_DIR_PATH}/Podfile.lock",
+				"${PODS_ROOT}/Manifest.lock",
+			);
+			name = "[CP] Check Pods Manifest.lock";
+			outputFileListPaths = (
+			);
+			outputPaths = (
+				"$(DERIVED_FILE_DIR)/Pods-apolloschurchapp-tvOSTests-checkManifestLockResult.txt",
+			);
+			runOnlyForDeploymentPostprocessing = 0;
+			shellPath = /bin/sh;
+			shellScript = "diff \"${PODS_PODFILE_DIR_PATH}/Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null\nif [ $? != 0 ] ; then\n    # print error to STDERR\n    echo \"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\" >&2\n    exit 1\nfi\n# This output is used by Xcode 'outputs' to avoid re-running this script phase.\necho \"SUCCESS\" > \"${SCRIPT_OUTPUT_FILE_0}\"\n";
+			showEnvVarsInLog = 0;
+		};
+		DEEF24CE4F76789E5E8C369D /* [CP] Check Pods Manifest.lock */ = {
+			isa = PBXShellScriptBuildPhase;
+			buildActionMask = 2147483647;
+			files = (
+			);
+			inputFileListPaths = (
+			);
+			inputPaths = (
+				"${PODS_PODFILE_DIR_PATH}/Podfile.lock",
+				"${PODS_ROOT}/Manifest.lock",
+			);
+			name = "[CP] Check Pods Manifest.lock";
+			outputFileListPaths = (
+			);
+			outputPaths = (
+				"$(DERIVED_FILE_DIR)/Pods-apolloschurchapp-checkManifestLockResult.txt",
+			);
+			runOnlyForDeploymentPostprocessing = 0;
+			shellPath = /bin/sh;
+			shellScript = "diff \"${PODS_PODFILE_DIR_PATH}/Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null\nif [ $? != 0 ] ; then\n    # print error to STDERR\n    echo \"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\" >&2\n    exit 1\nfi\n# This output is used by Xcode 'outputs' to avoid re-running this script phase.\necho \"SUCCESS\" > \"${SCRIPT_OUTPUT_FILE_0}\"\n";
+			showEnvVarsInLog = 0;
+		};
 /* End PBXShellScriptBuildPhase section */
 
 /* Begin PBXSourcesBuildPhase section */
@@ -1719,6 +618,7 @@
 /* Begin XCBuildConfiguration section */
 		00E356F61AD99517003FC87E /* Debug */ = {
 			isa = XCBuildConfiguration;
+			baseConfigurationReference = AB44FC16DED929081698EDFD /* Pods-apolloschurchappTests.debug.xcconfig */;
 			buildSettings = {
 				BUNDLE_LOADER = "$(TEST_HOST)";
 				GCC_PREPROCESSOR_DEFINITIONS = (
@@ -1727,29 +627,17 @@
 				);
 				HEADER_SEARCH_PATHS = (
 					"$(inherited)",
-					"$(SRCROOT)/../node_modules/react-native-custom-tabs/ios/ReactNativeCustomTabs",
-					"$(SRCROOT)/../node_modules/react-native-linear-gradient/BVLinearGradient",
-					"$(SRCROOT)/../node_modules/react-native-safari-view",
-					"$(SRCROOT)/../node_modules/react-native-splash-screen/ios",
-					"$(SRCROOT)/../node_modules/react-native-svg/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-video/ios",
-					"$(SRCROOT)/../node_modules/react-native-onesignal/ios/**",
-					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
-					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
-					"$(SRCROOT)/../node_modules/react-native-music-control/ios",
-					"$(SRCROOT)/../node_modules/react-native-screens/ios",
 				);
 				INFOPLIST_FILE = apolloschurchappTests/Info.plist;
 				IPHONEOS_DEPLOYMENT_TARGET = 9.0;
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @loader_path/Frameworks";
-				LIBRARY_SEARCH_PATHS = (
-					"$(inherited)",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-				);
+				LIBRARY_SEARCH_PATHS = "$(inherited)";
 				OTHER_LDFLAGS = (
 					"-ObjC",
 					"-lc++",
 				);
+				PRODUCT_BUNDLE_IDENTIFIER = "org.reactjs.native.example.$(PRODUCT_NAME:rfc1034identifier)";
 				PRODUCT_NAME = "$(TARGET_NAME)";
 				TEST_HOST = "$(BUILT_PRODUCTS_DIR)/apolloschurchapp.app/apolloschurchapp";
 			};
@@ -1757,34 +645,23 @@
 		};
 		00E356F71AD99517003FC87E /* Release */ = {
 			isa = XCBuildConfiguration;
+			baseConfigurationReference = E98AC9782C338F13632EF710 /* Pods-apolloschurchappTests.release.xcconfig */;
 			buildSettings = {
 				BUNDLE_LOADER = "$(TEST_HOST)";
 				COPY_PHASE_STRIP = NO;
 				HEADER_SEARCH_PATHS = (
 					"$(inherited)",
-					"$(SRCROOT)/../node_modules/react-native-custom-tabs/ios/ReactNativeCustomTabs",
-					"$(SRCROOT)/../node_modules/react-native-linear-gradient/BVLinearGradient",
-					"$(SRCROOT)/../node_modules/react-native-safari-view",
-					"$(SRCROOT)/../node_modules/react-native-splash-screen/ios",
-					"$(SRCROOT)/../node_modules/react-native-svg/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-video/ios",
-					"$(SRCROOT)/../node_modules/react-native-onesignal/ios/**",
-					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
-					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
-					"$(SRCROOT)/../node_modules/react-native-music-control/ios",
-					"$(SRCROOT)/../node_modules/react-native-screens/ios",
 				);
 				INFOPLIST_FILE = apolloschurchappTests/Info.plist;
 				IPHONEOS_DEPLOYMENT_TARGET = 9.0;
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @loader_path/Frameworks";
-				LIBRARY_SEARCH_PATHS = (
-					"$(inherited)",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-				);
+				LIBRARY_SEARCH_PATHS = "$(inherited)";
 				OTHER_LDFLAGS = (
 					"-ObjC",
 					"-lc++",
 				);
+				PRODUCT_BUNDLE_IDENTIFIER = "org.reactjs.native.example.$(PRODUCT_NAME:rfc1034identifier)";
 				PRODUCT_NAME = "$(TARGET_NAME)";
 				TEST_HOST = "$(BUILT_PRODUCTS_DIR)/apolloschurchapp.app/apolloschurchapp";
 			};
@@ -1792,26 +669,15 @@
 		};
 		13B07F941A680F5B00A75B9A /* Debug */ = {
 			isa = XCBuildConfiguration;
+			baseConfigurationReference = 54F271B8EB67A4997A2C7D96 /* Pods-apolloschurchapp.debug.xcconfig */;
 			buildSettings = {
 				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
-				CODE_SIGN_ENTITLEMENTS = apolloschurchapp/apolloschurchapp.entitlements;
-				CODE_SIGN_IDENTITY = "iPhone Developer";
-				CURRENT_PROJECT_VERSION = 5;
+				CURRENT_PROJECT_VERSION = 18;
 				DEAD_CODE_STRIPPING = NO;
 				DEVELOPMENT_TEAM = 7TM8C6252Z;
 				HEADER_SEARCH_PATHS = (
 					"$(inherited)",
-					"$(SRCROOT)/../node_modules/react-native-custom-tabs/ios/ReactNativeCustomTabs",
-					"$(SRCROOT)/../node_modules/react-native-linear-gradient/BVLinearGradient",
-					"$(SRCROOT)/../node_modules/react-native-safari-view",
-					"$(SRCROOT)/../node_modules/react-native-splash-screen/ios",
-					"$(SRCROOT)/../node_modules/react-native-svg/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-video/ios",
-					"$(SRCROOT)/../node_modules/react-native-onesignal/ios/**",
-					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
-					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
-					"$(SRCROOT)/../node_modules/react-native-music-control/ios",
-					"$(SRCROOT)/../node_modules/react-native-screens/ios",
 				);
 				INFOPLIST_FILE = apolloschurchapp/Info.plist;
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
@@ -1820,32 +686,22 @@
 					"-ObjC",
 					"-lc++",
 				);
+				PRODUCT_BUNDLE_IDENTIFIER = "org.reactjs.native.example.$(PRODUCT_NAME:rfc1034identifier)";
 				PRODUCT_NAME = apolloschurchapp;
+				PROVISIONING_PROFILE_SPECIFIER = "";
 				VERSIONING_SYSTEM = "apple-generic";
 			};
 			name = Debug;
 		};
 		13B07F951A680F5B00A75B9A /* Release */ = {
 			isa = XCBuildConfiguration;
+			baseConfigurationReference = 1F8F5BC4745C8F22C695573D /* Pods-apolloschurchapp.release.xcconfig */;
 			buildSettings = {
 				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
-				CODE_SIGN_ENTITLEMENTS = apolloschurchapp/apolloschurchapp.entitlements;
-				CODE_SIGN_IDENTITY = "iPhone Developer";
-				CURRENT_PROJECT_VERSION = 5;
-				DEVELOPMENT_TEAM = 7TM8C6252Z;
+				CURRENT_PROJECT_VERSION = 18;
 				HEADER_SEARCH_PATHS = (
 					"$(inherited)",
-					"$(SRCROOT)/../node_modules/react-native-custom-tabs/ios/ReactNativeCustomTabs",
-					"$(SRCROOT)/../node_modules/react-native-linear-gradient/BVLinearGradient",
-					"$(SRCROOT)/../node_modules/react-native-safari-view",
-					"$(SRCROOT)/../node_modules/react-native-splash-screen/ios",
-					"$(SRCROOT)/../node_modules/react-native-svg/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-video/ios",
-					"$(SRCROOT)/../node_modules/react-native-onesignal/ios/**",
-					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
-					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
-					"$(SRCROOT)/../node_modules/react-native-music-control/ios",
-					"$(SRCROOT)/../node_modules/react-native-screens/ios",
 				);
 				INFOPLIST_FILE = apolloschurchapp/Info.plist;
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
@@ -1854,13 +710,16 @@
 					"-ObjC",
 					"-lc++",
 				);
+				PRODUCT_BUNDLE_IDENTIFIER = "org.reactjs.native.example.$(PRODUCT_NAME:rfc1034identifier)";
 				PRODUCT_NAME = apolloschurchapp;
+				PROVISIONING_PROFILE_SPECIFIER = "";
 				VERSIONING_SYSTEM = "apple-generic";
 			};
 			name = Release;
 		};
 		2D02E4971E0B4A5E006451C7 /* Debug */ = {
 			isa = XCBuildConfiguration;
+			baseConfigurationReference = 745C835CA2F1E1EC2425152A /* Pods-apolloschurchapp-tvOS.debug.xcconfig */;
 			buildSettings = {
 				ASSETCATALOG_COMPILER_APPICON_NAME = "App Icon & Top Shelf Image";
 				ASSETCATALOG_COMPILER_LAUNCHIMAGE_NAME = LaunchImage;
@@ -1873,29 +732,16 @@
 				GCC_NO_COMMON_BLOCKS = YES;
 				HEADER_SEARCH_PATHS = (
 					"$(inherited)",
-					"$(SRCROOT)/../node_modules/react-native-custom-tabs/ios/ReactNativeCustomTabs",
-					"$(SRCROOT)/../node_modules/react-native-linear-gradient/BVLinearGradient",
-					"$(SRCROOT)/../node_modules/react-native-safari-view",
-					"$(SRCROOT)/../node_modules/react-native-splash-screen/ios",
-					"$(SRCROOT)/../node_modules/react-native-svg/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-video/ios",
-					"$(SRCROOT)/../node_modules/react-native-onesignal/ios/**",
-					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
-					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
-					"$(SRCROOT)/../node_modules/react-native-music-control/ios",
-					"$(SRCROOT)/../node_modules/react-native-screens/ios",
 				);
 				INFOPLIST_FILE = "apolloschurchapp-tvOS/Info.plist";
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
-				LIBRARY_SEARCH_PATHS = (
-					"$(inherited)",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-				);
+				LIBRARY_SEARCH_PATHS = "$(inherited)";
 				OTHER_LDFLAGS = (
 					"-ObjC",
 					"-lc++",
 				);
-				PRODUCT_BUNDLE_IDENTIFIER = "org.reactjs.native.apolloschurchapp-tvOS";
+				PRODUCT_BUNDLE_IDENTIFIER = "com.facebook.REACT.apolloschurchapp-tvOS";
 				PRODUCT_NAME = "$(TARGET_NAME)";
 				SDKROOT = appletvos;
 				TARGETED_DEVICE_FAMILY = 3;
@@ -1905,6 +751,7 @@
 		};
 		2D02E4981E0B4A5E006451C7 /* Release */ = {
 			isa = XCBuildConfiguration;
+			baseConfigurationReference = AE85030F59F256E90D5A4C2B /* Pods-apolloschurchapp-tvOS.release.xcconfig */;
 			buildSettings = {
 				ASSETCATALOG_COMPILER_APPICON_NAME = "App Icon & Top Shelf Image";
 				ASSETCATALOG_COMPILER_LAUNCHIMAGE_NAME = LaunchImage;
@@ -1917,29 +764,16 @@
 				GCC_NO_COMMON_BLOCKS = YES;
 				HEADER_SEARCH_PATHS = (
 					"$(inherited)",
-					"$(SRCROOT)/../node_modules/react-native-custom-tabs/ios/ReactNativeCustomTabs",
-					"$(SRCROOT)/../node_modules/react-native-linear-gradient/BVLinearGradient",
-					"$(SRCROOT)/../node_modules/react-native-safari-view",
-					"$(SRCROOT)/../node_modules/react-native-splash-screen/ios",
-					"$(SRCROOT)/../node_modules/react-native-svg/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-video/ios",
-					"$(SRCROOT)/../node_modules/react-native-onesignal/ios/**",
-					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
-					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
-					"$(SRCROOT)/../node_modules/react-native-music-control/ios",
-					"$(SRCROOT)/../node_modules/react-native-screens/ios",
 				);
 				INFOPLIST_FILE = "apolloschurchapp-tvOS/Info.plist";
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
-				LIBRARY_SEARCH_PATHS = (
-					"$(inherited)",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-				);
+				LIBRARY_SEARCH_PATHS = "$(inherited)";
 				OTHER_LDFLAGS = (
 					"-ObjC",
 					"-lc++",
 				);
-				PRODUCT_BUNDLE_IDENTIFIER = "org.reactjs.native.apolloschurchapp-tvOS";
+				PRODUCT_BUNDLE_IDENTIFIER = "com.facebook.REACT.apolloschurchapp-tvOS";
 				PRODUCT_NAME = "$(TARGET_NAME)";
 				SDKROOT = appletvos;
 				TARGETED_DEVICE_FAMILY = 3;
@@ -1949,6 +783,7 @@
 		};
 		2D02E4991E0B4A5E006451C7 /* Debug */ = {
 			isa = XCBuildConfiguration;
+			baseConfigurationReference = D394E3064D75710E81C51EB0 /* Pods-apolloschurchapp-tvOSTests.debug.xcconfig */;
 			buildSettings = {
 				BUNDLE_LOADER = "$(TEST_HOST)";
 				CLANG_ANALYZER_NONNULL = YES;
@@ -1960,29 +795,16 @@
 				GCC_NO_COMMON_BLOCKS = YES;
 				HEADER_SEARCH_PATHS = (
 					"$(inherited)",
-					"$(SRCROOT)/../node_modules/react-native-custom-tabs/ios/ReactNativeCustomTabs",
-					"$(SRCROOT)/../node_modules/react-native-linear-gradient/BVLinearGradient",
-					"$(SRCROOT)/../node_modules/react-native-safari-view",
-					"$(SRCROOT)/../node_modules/react-native-splash-screen/ios",
-					"$(SRCROOT)/../node_modules/react-native-svg/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-video/ios",
-					"$(SRCROOT)/../node_modules/react-native-onesignal/ios/**",
-					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
-					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
-					"$(SRCROOT)/../node_modules/react-native-music-control/ios",
-					"$(SRCROOT)/../node_modules/react-native-screens/ios",
 				);
 				INFOPLIST_FILE = "apolloschurchapp-tvOSTests/Info.plist";
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @loader_path/Frameworks";
-				LIBRARY_SEARCH_PATHS = (
-					"$(inherited)",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-				);
+				LIBRARY_SEARCH_PATHS = "$(inherited)";
 				OTHER_LDFLAGS = (
 					"-ObjC",
 					"-lc++",
 				);
-				PRODUCT_BUNDLE_IDENTIFIER = "org.reactjs.native.apolloschurchapp-tvOSTests";
+				PRODUCT_BUNDLE_IDENTIFIER = "com.facebook.REACT.apolloschurchapp-tvOSTests";
 				PRODUCT_NAME = "$(TARGET_NAME)";
 				SDKROOT = appletvos;
 				TEST_HOST = "$(BUILT_PRODUCTS_DIR)/apolloschurchapp-tvOS.app/apolloschurchapp-tvOS";
@@ -1992,6 +814,7 @@
 		};
 		2D02E49A1E0B4A5E006451C7 /* Release */ = {
 			isa = XCBuildConfiguration;
+			baseConfigurationReference = DA9745795726553C6FA9E7A8 /* Pods-apolloschurchapp-tvOSTests.release.xcconfig */;
 			buildSettings = {
 				BUNDLE_LOADER = "$(TEST_HOST)";
 				CLANG_ANALYZER_NONNULL = YES;
@@ -2003,29 +826,16 @@
 				GCC_NO_COMMON_BLOCKS = YES;
 				HEADER_SEARCH_PATHS = (
 					"$(inherited)",
-					"$(SRCROOT)/../node_modules/react-native-custom-tabs/ios/ReactNativeCustomTabs",
-					"$(SRCROOT)/../node_modules/react-native-linear-gradient/BVLinearGradient",
-					"$(SRCROOT)/../node_modules/react-native-safari-view",
-					"$(SRCROOT)/../node_modules/react-native-splash-screen/ios",
-					"$(SRCROOT)/../node_modules/react-native-svg/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-video/ios",
-					"$(SRCROOT)/../node_modules/react-native-onesignal/ios/**",
-					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
-					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
-					"$(SRCROOT)/../node_modules/react-native-music-control/ios",
-					"$(SRCROOT)/../node_modules/react-native-screens/ios",
 				);
 				INFOPLIST_FILE = "apolloschurchapp-tvOSTests/Info.plist";
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @loader_path/Frameworks";
-				LIBRARY_SEARCH_PATHS = (
-					"$(inherited)",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-				);
+				LIBRARY_SEARCH_PATHS = "$(inherited)";
 				OTHER_LDFLAGS = (
 					"-ObjC",
 					"-lc++",
 				);
-				PRODUCT_BUNDLE_IDENTIFIER = "org.reactjs.native.apolloschurchapp-tvOSTests";
+				PRODUCT_BUNDLE_IDENTIFIER = "com.facebook.REACT.apolloschurchapp-tvOSTests";
 				PRODUCT_NAME = "$(TARGET_NAME)";
 				SDKROOT = appletvos;
 				TEST_HOST = "$(BUILT_PRODUCTS_DIR)/apolloschurchapp-tvOS.app/apolloschurchapp-tvOS";
@@ -2041,20 +851,32 @@
 				CLANG_CXX_LIBRARY = "libc++";
 				CLANG_ENABLE_MODULES = YES;
 				CLANG_ENABLE_OBJC_ARC = YES;
+				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
 				CLANG_WARN_BOOL_CONVERSION = YES;
+				CLANG_WARN_COMMA = YES;
 				CLANG_WARN_CONSTANT_CONVERSION = YES;
+				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
 				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
 				CLANG_WARN_EMPTY_BODY = YES;
 				CLANG_WARN_ENUM_CONVERSION = YES;
+				CLANG_WARN_INFINITE_RECURSION = YES;
 				CLANG_WARN_INT_CONVERSION = YES;
+				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
+				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
+				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
 				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
+				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
+				CLANG_WARN_STRICT_PROTOTYPES = YES;
+				CLANG_WARN_SUSPICIOUS_MOVE = YES;
 				CLANG_WARN_UNREACHABLE_CODE = YES;
 				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
 				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "iPhone Developer";
 				COPY_PHASE_STRIP = NO;
 				ENABLE_STRICT_OBJC_MSGSEND = YES;
+				ENABLE_TESTABILITY = YES;
 				GCC_C_LANGUAGE_STANDARD = gnu99;
 				GCC_DYNAMIC_NO_PIC = NO;
+				GCC_NO_COMMON_BLOCKS = YES;
 				GCC_OPTIMIZATION_LEVEL = 0;
 				GCC_PREPROCESSOR_DEFINITIONS = (
 					"DEBUG=1",
@@ -2082,13 +904,23 @@
 				CLANG_CXX_LIBRARY = "libc++";
 				CLANG_ENABLE_MODULES = YES;
 				CLANG_ENABLE_OBJC_ARC = YES;
+				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
 				CLANG_WARN_BOOL_CONVERSION = YES;
+				CLANG_WARN_COMMA = YES;
 				CLANG_WARN_CONSTANT_CONVERSION = YES;
+				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
 				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
 				CLANG_WARN_EMPTY_BODY = YES;
 				CLANG_WARN_ENUM_CONVERSION = YES;
+				CLANG_WARN_INFINITE_RECURSION = YES;
 				CLANG_WARN_INT_CONVERSION = YES;
+				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
+				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
+				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
 				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
+				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
+				CLANG_WARN_STRICT_PROTOTYPES = YES;
+				CLANG_WARN_SUSPICIOUS_MOVE = YES;
 				CLANG_WARN_UNREACHABLE_CODE = YES;
 				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
 				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "iPhone Developer";
@@ -2096,6 +928,7 @@
 				ENABLE_NS_ASSERTIONS = NO;
 				ENABLE_STRICT_OBJC_MSGSEND = YES;
 				GCC_C_LANGUAGE_STANDARD = gnu99;
+				GCC_NO_COMMON_BLOCKS = YES;
 				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
 				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
 				GCC_WARN_UNDECLARED_SELECTOR = YES;
diff --git a/apolloschurchapp/ios/apolloschurchapp.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist b/apolloschurchapp/ios/apolloschurchapp.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist
new file mode 100644
index 0000000..18d9810
--- /dev/null
+++ b/apolloschurchapp/ios/apolloschurchapp.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
+<plist version="1.0">
+<dict>
+	<key>IDEDidComputeMac32BitWarning</key>
+	<true/>
+</dict>
+</plist>
diff --git a/apolloschurchapp/ios/apolloschurchapp.xcodeproj/xcshareddata/xcschemes/apolloschurchapp.xcscheme b/apolloschurchapp/ios/apolloschurchapp.xcworkspace/xcshareddata/xcschemes/apolloschurchapp.xcscheme
similarity index 100%
rename from apolloschurchapp/ios/apolloschurchapp.xcodeproj/xcshareddata/xcschemes/apolloschurchapp.xcscheme
rename to apolloschurchapp/ios/apolloschurchapp.xcworkspace/xcshareddata/xcschemes/apolloschurchapp.xcscheme
diff --git a/apolloschurchapp/ios/apolloschurchapp.xcodeproj/xcshareddata/xcschemes/apolloschurchapp-tvOS.xcscheme b/apolloschurchapp/ios/apolloschurchapp.xcworkspace/xcshareddata/xcschemes/apolloschurchappprod.xcscheme
similarity index 72%
rename from apolloschurchapp/ios/apolloschurchapp.xcodeproj/xcshareddata/xcschemes/apolloschurchapp-tvOS.xcscheme
rename to apolloschurchapp/ios/apolloschurchapp.xcworkspace/xcshareddata/xcschemes/apolloschurchappprod.xcscheme
index e872aa3..cb89197 100644
--- a/apolloschurchapp/ios/apolloschurchapp.xcodeproj/xcshareddata/xcschemes/apolloschurchapp-tvOS.xcscheme
+++ b/apolloschurchapp/ios/apolloschurchapp.xcworkspace/xcshareddata/xcschemes/apolloschurchappprod.xcscheme
@@ -5,6 +5,15 @@
    <BuildAction
       parallelizeBuildables = "NO"
       buildImplicitDependencies = "YES">
+      <PreActions>
+         <ExecutionAction
+            ActionType = "Xcode.IDEStandardExecutionActionsCore.ExecutionActionType.ShellScriptAction">
+            <ActionContent
+               title = "Run Script"
+               scriptText = "echo &quot;.env.production&quot; &gt; /tmp/envfile&#10;">
+            </ActionContent>
+         </ExecutionAction>
+      </PreActions>
       <BuildActionEntries>
          <BuildActionEntry
             buildForTesting = "YES"
@@ -14,9 +23,9 @@
             buildForAnalyzing = "YES">
             <BuildableReference
                BuildableIdentifier = "primary"
-               BlueprintIdentifier = "2D2A28121D9B038B00D4039D"
+               BlueprintIdentifier = "83CBBA2D1A601D0E00E9B192"
                BuildableName = "libReact.a"
-               BlueprintName = "React-tvOS"
+               BlueprintName = "React"
                ReferencedContainer = "container:../node_modules/react-native/React/React.xcodeproj">
             </BuildableReference>
          </BuildActionEntry>
@@ -28,9 +37,9 @@
             buildForAnalyzing = "YES">
             <BuildableReference
                BuildableIdentifier = "primary"
-               BlueprintIdentifier = "2D02E47A1E0B4A5D006451C7"
-               BuildableName = "apolloschurchapp-tvOS.app"
-               BlueprintName = "apolloschurchapp-tvOS"
+               BlueprintIdentifier = "13B07F861A680F5B00A75B9A"
+               BuildableName = "apolloschurchapp.app"
+               BlueprintName = "apolloschurchapp"
                ReferencedContainer = "container:apolloschurchapp.xcodeproj">
             </BuildableReference>
          </BuildActionEntry>
@@ -42,9 +51,9 @@
             buildForAnalyzing = "YES">
             <BuildableReference
                BuildableIdentifier = "primary"
-               BlueprintIdentifier = "2D02E48F1E0B4A5D006451C7"
-               BuildableName = "apolloschurchapp-tvOSTests.xctest"
-               BlueprintName = "apolloschurchapp-tvOSTests"
+               BlueprintIdentifier = "00E356ED1AD99517003FC87E"
+               BuildableName = "apolloschurchappTests.xctest"
+               BlueprintName = "apolloschurchappTests"
                ReferencedContainer = "container:apolloschurchapp.xcodeproj">
             </BuildableReference>
          </BuildActionEntry>
@@ -60,9 +69,9 @@
             skipped = "NO">
             <BuildableReference
                BuildableIdentifier = "primary"
-               BlueprintIdentifier = "2D02E48F1E0B4A5D006451C7"
-               BuildableName = "apolloschurchapp-tvOSTests.xctest"
-               BlueprintName = "apolloschurchapp-tvOSTests"
+               BlueprintIdentifier = "00E356ED1AD99517003FC87E"
+               BuildableName = "apolloschurchappTests.xctest"
+               BlueprintName = "apolloschurchappTests"
                ReferencedContainer = "container:apolloschurchapp.xcodeproj">
             </BuildableReference>
          </TestableReference>
@@ -70,9 +79,9 @@
       <MacroExpansion>
          <BuildableReference
             BuildableIdentifier = "primary"
-            BlueprintIdentifier = "2D02E47A1E0B4A5D006451C7"
-            BuildableName = "apolloschurchapp-tvOS.app"
-            BlueprintName = "apolloschurchapp-tvOS"
+            BlueprintIdentifier = "13B07F861A680F5B00A75B9A"
+            BuildableName = "apolloschurchapp.app"
+            BlueprintName = "apolloschurchapp"
             ReferencedContainer = "container:apolloschurchapp.xcodeproj">
          </BuildableReference>
       </MacroExpansion>
@@ -80,7 +89,7 @@
       </AdditionalOptions>
    </TestAction>
    <LaunchAction
-      buildConfiguration = "Debug"
+      buildConfiguration = "Release"
       selectedDebuggerIdentifier = "Xcode.DebuggerFoundation.Debugger.LLDB"
       selectedLauncherIdentifier = "Xcode.DebuggerFoundation.Launcher.LLDB"
       launchStyle = "0"
@@ -93,9 +102,9 @@
          runnableDebuggingMode = "0">
          <BuildableReference
             BuildableIdentifier = "primary"
-            BlueprintIdentifier = "2D02E47A1E0B4A5D006451C7"
-            BuildableName = "apolloschurchapp-tvOS.app"
-            BlueprintName = "apolloschurchapp-tvOS"
+            BlueprintIdentifier = "13B07F861A680F5B00A75B9A"
+            BuildableName = "apolloschurchapp.app"
+            BlueprintName = "apolloschurchapp"
             ReferencedContainer = "container:apolloschurchapp.xcodeproj">
          </BuildableReference>
       </BuildableProductRunnable>
@@ -112,9 +121,9 @@
          runnableDebuggingMode = "0">
          <BuildableReference
             BuildableIdentifier = "primary"
-            BlueprintIdentifier = "2D02E47A1E0B4A5D006451C7"
-            BuildableName = "apolloschurchapp-tvOS.app"
-            BlueprintName = "apolloschurchapp-tvOS"
+            BlueprintIdentifier = "13B07F861A680F5B00A75B9A"
+            BuildableName = "apolloschurchapp.app"
+            BlueprintName = "apolloschurchapp"
             ReferencedContainer = "container:apolloschurchapp.xcodeproj">
          </BuildableReference>
       </BuildableProductRunnable>
diff --git a/apolloschurchapp/ios/apolloschurchapp/AppDelegate.h b/apolloschurchapp/ios/apolloschurchapp/AppDelegate.h
index d4f2580..2726d5e 100644
--- a/apolloschurchapp/ios/apolloschurchapp/AppDelegate.h
+++ b/apolloschurchapp/ios/apolloschurchapp/AppDelegate.h
@@ -1,13 +1,14 @@
 /**
- * Copyright (c) 2015-present, Facebook, Inc.
+ * Copyright (c) Facebook, Inc. and its affiliates.
  *
  * This source code is licensed under the MIT license found in the
  * LICENSE file in the root directory of this source tree.
  */
 
+#import <React/RCTBridgeDelegate.h>
 #import <UIKit/UIKit.h>
 
-@interface AppDelegate : UIResponder <UIApplicationDelegate>
+@interface AppDelegate : UIResponder <UIApplicationDelegate, RCTBridgeDelegate>
 
 @property (nonatomic, strong) UIWindow *window;
 
diff --git a/apolloschurchapp/ios/apolloschurchapp/AppDelegate.m b/apolloschurchapp/ios/apolloschurchapp/AppDelegate.m
index 9d889ed..b9f7b95 100644
--- a/apolloschurchapp/ios/apolloschurchapp/AppDelegate.m
+++ b/apolloschurchapp/ios/apolloschurchapp/AppDelegate.m
@@ -1,5 +1,5 @@
 /**
- * Copyright (c) 2015-present, Facebook, Inc.
+ * Copyright (c) Facebook, Inc. and its affiliates.
  *
  * This source code is licensed under the MIT license found in the
  * LICENSE file in the root directory of this source tree.
@@ -7,6 +7,8 @@
 
 #import "AppDelegate.h"
 
+
+#import <React/RCTBridge.h>
 #import <React/RCTBundleURLProvider.h>
 #import <React/RCTRootView.h>
 #import "RNSplashScreen.h"
@@ -34,14 +36,12 @@ - (BOOL)application:(UIApplication *)application continueUserActivity:(NSUserAct
 
 - (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions
 {
-  NSURL *jsCodeLocation;
 
-  jsCodeLocation = [[RCTBundleURLProvider sharedSettings] jsBundleURLForBundleRoot:@"index" fallbackResource:nil];
+  RCTBridge *bridge = [[RCTBridge alloc] initWithDelegate:self launchOptions:launchOptions];
+  RCTRootView *rootView = [[RCTRootView alloc] initWithBridge:bridge
+                                                   moduleName:@"apolloschurchapp"
+                                            initialProperties:nil];
 
-  RCTRootView *rootView = [[RCTRootView alloc] initWithBundleURL:jsCodeLocation
-                                                      moduleName:@"apolloschurchapp"
-                                               initialProperties:nil
-                                                   launchOptions:launchOptions];
   rootView.backgroundColor = [[UIColor alloc] initWithRed:1.0f green:1.0f blue:1.0f alpha:1];
 
   self.window = [[UIWindow alloc] initWithFrame:[UIScreen mainScreen].bounds];
@@ -54,4 +54,13 @@ - (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(
   return YES;
 }
 
+- (NSURL *)sourceURLForBridge:(RCTBridge *)bridge
+{
+#if DEBUG
+  return [[RCTBundleURLProvider sharedSettings] jsBundleURLForBundleRoot:@"index" fallbackResource:nil];
+#else
+  return [[NSBundle mainBundle] URLForResource:@"main" withExtension:@"jsbundle"];
+#endif
+}
+
 @end
diff --git a/apolloschurchapp/ios/apolloschurchapp/Base.lproj/LaunchScreen.xib b/apolloschurchapp/ios/apolloschurchapp/Base.lproj/LaunchScreen.xib
index 035b378..4ca705c 100644
--- a/apolloschurchapp/ios/apolloschurchapp/Base.lproj/LaunchScreen.xib
+++ b/apolloschurchapp/ios/apolloschurchapp/Base.lproj/LaunchScreen.xib
@@ -1,11 +1,11 @@
 <?xml version="1.0" encoding="UTF-8"?>
-<document type="com.apple.InterfaceBuilder3.CocoaTouch.XIB" version="3.0" toolsVersion="14113" targetRuntime="iOS.CocoaTouch" propertyAccessControl="none" useAutolayout="YES" launchScreen="YES" useTraitCollections="YES" colorMatched="YES">
+<document type="com.apple.InterfaceBuilder3.CocoaTouch.XIB" version="3.0" toolsVersion="14490.70" targetRuntime="iOS.CocoaTouch" propertyAccessControl="none" useAutolayout="YES" launchScreen="YES" useTraitCollections="YES" colorMatched="YES">
     <device id="retina5_5" orientation="portrait">
         <adaptation id="fullscreen"/>
     </device>
     <dependencies>
         <deployment identifier="iOS"/>
-        <plugIn identifier="com.apple.InterfaceBuilder.IBCocoaTouchPlugin" version="14088"/>
+        <plugIn identifier="com.apple.InterfaceBuilder.IBCocoaTouchPlugin" version="14490.49"/>
         <capability name="documents saved in the Xcode 8 format" minToolsVersion="8.0"/>
     </dependencies>
     <objects>
@@ -15,18 +15,22 @@
             <rect key="frame" x="0.0" y="0.0" width="414" height="736"/>
             <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
             <subviews>
+                <imageView clipsSubviews="YES" userInteractionEnabled="NO" contentMode="scaleToFill" horizontalHuggingPriority="251" verticalHuggingPriority="251" fixedFrame="YES" image="splash_bg" translatesAutoresizingMaskIntoConstraints="NO" id="iGM-E3-lqn">
+                    <rect key="frame" x="-12" y="-10" width="437" height="758"/>
+                    <autoresizingMask key="autoresizingMask" flexibleMinX="YES" widthSizable="YES" flexibleMaxX="YES" flexibleMinY="YES" heightSizable="YES" flexibleMaxY="YES"/>
+                </imageView>
                 <imageView userInteractionEnabled="NO" contentMode="scaleAspectFit" horizontalHuggingPriority="251" verticalHuggingPriority="251" fixedFrame="YES" image="splash-icon" translatesAutoresizingMaskIntoConstraints="NO" id="6Je-Yv-1Zj">
                     <rect key="frame" x="157" y="288" width="100" height="100"/>
                     <autoresizingMask key="autoresizingMask" flexibleMinX="YES" widthSizable="YES" flexibleMaxX="YES" flexibleMinY="YES" heightSizable="YES" flexibleMaxY="YES"/>
                 </imageView>
             </subviews>
-            <color key="backgroundColor" red="0.0" green="0.40392156862745099" blue="0.42745098039215684" alpha="1" colorSpace="custom" customColorSpace="sRGB"/>
             <nil key="simulatedStatusBarMetrics"/>
             <modalPageSheetSimulatedSizeMetrics key="simulatedDestinationMetrics"/>
-            <point key="canvasLocation" x="546" y="454"/>
+            <point key="canvasLocation" x="544.92753623188412" y="453.26086956521743"/>
         </view>
     </objects>
     <resources>
         <image name="splash-icon" width="94" height="99"/>
+        <image name="splash_bg" width="721" height="721"/>
     </resources>
-</document>
\ No newline at end of file
+</document>
diff --git a/apolloschurchapp/ios/apolloschurchapp/Images.xcassets/Contents.json b/apolloschurchapp/ios/apolloschurchapp/Images.xcassets/Contents.json
index 2d92bd5..da4a164 100644
--- a/apolloschurchapp/ios/apolloschurchapp/Images.xcassets/Contents.json
+++ b/apolloschurchapp/ios/apolloschurchapp/Images.xcassets/Contents.json
@@ -3,4 +3,4 @@
     "version" : 1,
     "author" : "xcode"
   }
-}
+}
\ No newline at end of file
diff --git a/apolloschurchapp/ios/apolloschurchapp/Images.xcassets/splash_bg.imageset/Contents.json b/apolloschurchapp/ios/apolloschurchapp/Images.xcassets/splash_bg.imageset/Contents.json
new file mode 100644
index 0000000..8939b14
--- /dev/null
+++ b/apolloschurchapp/ios/apolloschurchapp/Images.xcassets/splash_bg.imageset/Contents.json
@@ -0,0 +1,21 @@
+{
+  "images" : [
+    {
+      "idiom" : "universal",
+      "filename" : "splash_bg.png",
+      "scale" : "1x"
+    },
+    {
+      "idiom" : "universal",
+      "scale" : "2x"
+    },
+    {
+      "idiom" : "universal",
+      "scale" : "3x"
+    }
+  ],
+  "info" : {
+    "version" : 1,
+    "author" : "xcode"
+  }
+}
\ No newline at end of file
diff --git a/apolloschurchapp/ios/apolloschurchapp/Images.xcassets/splash_bg.imageset/splash_bg.png b/apolloschurchapp/ios/apolloschurchapp/Images.xcassets/splash_bg.imageset/splash_bg.png
new file mode 100644
index 0000000000000000000000000000000000000000..315d8e09ac4fd5f51176da24982baad2115fa027
GIT binary patch
literal 11471
zcmeAS@N?(olHy`uVBq!ia0y~yV7dsx9Be?5xhMa#GcYJHc)B=-RK&f#rYOYZDB^tZ
z=H*2eyj_=_M49$pT<`AhvTNUo(sMs$`WYCRSU3a}92yuJZ!=xbcd?(ho!L$Z#0N`w
zaPNsf-r*PD@CmAlk!f>-pzUN%uojS#E37>)ezCsrhiXtT;Fh>(JQHrLL+pW$b@2`V
zMzsTjWHjhTlg((B87(fLrQ>K(Ia*BsYueE&a<q8>Zf}h?4@R2@qs@cS=D}$5V6+!G
z+Jgqw1*1))(WcR8(`a<S4K^M*I@mZm&<Yw!9vwLu9XT0o9*j<`KxVE+Css!1<G|(N
zX!BsSc`({MK+L~8to{|vz`)Z5S_?2*U5-|lqt)eTQ(?5JFxpfYU9vU0Ty1m|WptS$
xWKrhmB+KX|3r!|j{weR`TWF71VC?vS+x%;O<pqA37~n!>22WQ%mvv4FO#m9H?QQ@7

literal 0
HcmV?d00001

diff --git a/apolloschurchapp/ios/apolloschurchapp/Info.plist b/apolloschurchapp/ios/apolloschurchapp/Info.plist
index 0d5c926..49a5dfc 100644
--- a/apolloschurchapp/ios/apolloschurchapp/Info.plist
+++ b/apolloschurchapp/ios/apolloschurchapp/Info.plist
@@ -2,15 +2,6 @@
 <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
 <plist version="1.0">
 <dict>
-	<key>CFBundleURLTypes</key>
-	<array>
-		<dict>
-			<key>CFBundleURLSchemes</key>
-			<array>
-				<string>apolloschurchapp</string>
-			</array>
-		</dict>
-	</array>
 	<key>CFBundleDevelopmentRegion</key>
 	<string>en</string>
 	<key>CFBundleDisplayName</key>
@@ -18,7 +9,7 @@
 	<key>CFBundleExecutable</key>
 	<string>$(EXECUTABLE_NAME)</string>
 	<key>CFBundleIdentifier</key>
-	<string>org.reactjs.native.$(PRODUCT_NAME:rfc1034identifier)</string>
+	<string>$(PRODUCT_BUNDLE_IDENTIFIER)</string>
 	<key>CFBundleInfoDictionaryVersion</key>
 	<string>6.0</string>
 	<key>CFBundleName</key>
@@ -26,17 +17,28 @@
 	<key>CFBundlePackageType</key>
 	<string>APPL</string>
 	<key>CFBundleShortVersionString</key>
-	<string>0.7.0</string>
+	<string>1.2.0</string>
 	<key>CFBundleSignature</key>
 	<string>????</string>
+	<key>CFBundleURLTypes</key>
+	<array>
+		<dict>
+			<key>CFBundleURLSchemes</key>
+			<array>
+				<string>apolloschurchapp</string>
+			</array>
+		</dict>
+	</array>
 	<key>CFBundleVersion</key>
-	<string>5</string>
+	<string>24</string>
 	<key>ITSAppUsesNonExemptEncryption</key>
 	<false />
 	<key>LSRequiresIPhoneOS</key>
 	<true />
 	<key>NSAppTransportSecurity</key>
 	<dict>
+		<key>NSAllowsArbitraryLoads</key>
+		<true />
 		<key>NSExceptionDomains</key>
 		<dict>
 			<key>embed.wistia.com</key>
@@ -51,8 +53,18 @@
 			</dict>
 		</dict>
 	</dict>
+	<key>NSCameraUsageDescription</key>
+	<string>$(PRODUCT_NAME) would like to use your camera (for uploading profile pictures)</string>
+	<key>NSLocationAlwaysUsageDescription</key>
+	<string>$(PRODUCT_NAME) would like to use your location for determining your closest campus</string>
 	<key>NSLocationWhenInUseUsageDescription</key>
-	<string />
+	<string>$(PRODUCT_NAME) would like to use your location for determining your closest campus</string>
+	<key>NSMicrophoneUsageDescription</key>
+	<string>$(PRODUCT_NAME) would like to your microphone (for videos)</string>
+	<key>NSPhotoLibraryAddUsageDescription</key>
+	<string>$(PRODUCT_NAME) would like to save photos to your photo gallery (for uploading profile pictures)</string>
+	<key>NSPhotoLibraryUsageDescription</key>
+	<string>$(PRODUCT_NAME) would like access to your photo gallery (for uploading profile pictures)</string>
 	<key>UIAppFonts</key>
 	<array>
 		<string>DroidSerif-Bold.ttf</string>
@@ -68,11 +80,6 @@
 		<string>Inter-UI-MediumItalic.otf</string>
 		<string>Inter-UI-Regular.otf</string>
 	</array>
-	<key>UIBackgroundModes</key>
-	<array>
-		<string>audio</string>
-		<string>remote-notification</string>
-	</array>
 	<key>UILaunchStoryboardName</key>
 	<string>LaunchScreen</string>
 	<key>UIRequiredDeviceCapabilities</key>
@@ -89,13 +96,5 @@
 	</array>
 	<key>UIViewControllerBasedStatusBarAppearance</key>
 	<false />
-	<key>NSPhotoLibraryUsageDescription</key>
-	<string>$(PRODUCT_NAME) would like access to your photo gallery (for uploading profile pictures)</string>
-	<key>NSCameraUsageDescription</key>
-	<string>$(PRODUCT_NAME) would like to use your camera (for uploading profile pictures)</string>
-	<key>NSPhotoLibraryAddUsageDescription</key>
-	<string>$(PRODUCT_NAME) would like to save photos to your photo gallery (for uploading profile pictures)</string>
-	<key>NSMicrophoneUsageDescription</key>
-	<string>$(PRODUCT_NAME) would like to your microphone (for videos)</string>
 </dict>
 </plist>
diff --git a/apolloschurchapp/ios/apolloschurchapp/main.m b/apolloschurchapp/ios/apolloschurchapp/main.m
index c73e006..d9c4112 100644
--- a/apolloschurchapp/ios/apolloschurchapp/main.m
+++ b/apolloschurchapp/ios/apolloschurchapp/main.m
@@ -1,5 +1,5 @@
 /**
- * Copyright (c) 2015-present, Facebook, Inc.
+ * Copyright (c) Facebook, Inc. and its affiliates.
  *
  * This source code is licensed under the MIT license found in the
  * LICENSE file in the root directory of this source tree.
@@ -14,3 +14,4 @@ int main(int argc, char * argv[]) {
     return UIApplicationMain(argc, argv, nil, NSStringFromClass([AppDelegate class]));
   }
 }
+          
diff --git a/apolloschurchapp/ios/apolloschurchappTests/Info.plist b/apolloschurchapp/ios/apolloschurchappTests/Info.plist
index e358b6d..9b092fb 100644
--- a/apolloschurchapp/ios/apolloschurchappTests/Info.plist
+++ b/apolloschurchapp/ios/apolloschurchappTests/Info.plist
@@ -7,7 +7,7 @@
 	<key>CFBundleExecutable</key>
 	<string>$(EXECUTABLE_NAME)</string>
 	<key>CFBundleIdentifier</key>
-	<string>org.reactjs.native.example.$(PRODUCT_NAME:rfc1034identifier)</string>
+	<string>$(PRODUCT_BUNDLE_IDENTIFIER)</string>
 	<key>CFBundleInfoDictionaryVersion</key>
 	<string>6.0</string>
 	<key>CFBundleName</key>
@@ -15,10 +15,10 @@
 	<key>CFBundlePackageType</key>
 	<string>BNDL</string>
 	<key>CFBundleShortVersionString</key>
-	<string>0.7.0</string>
+	<string>1.2.0</string>
 	<key>CFBundleSignature</key>
 	<string>????</string>
 	<key>CFBundleVersion</key>
-	<string>5</string>
+	<string>23</string>
 </dict>
 </plist>
diff --git a/apolloschurchapp/ios/apolloschurchappTests/apolloschurchappTests.m b/apolloschurchapp/ios/apolloschurchappTests/apolloschurchappTests.m
index 5b96cea..8b9d30b 100644
--- a/apolloschurchapp/ios/apolloschurchappTests/apolloschurchappTests.m
+++ b/apolloschurchapp/ios/apolloschurchappTests/apolloschurchappTests.m
@@ -1,5 +1,5 @@
 /**
- * Copyright (c) 2015-present, Facebook, Inc.
+ * Copyright (c) Facebook, Inc. and its affiliates.
  *
  * This source code is licensed under the MIT license found in the
  * LICENSE file in the root directory of this source tree.
diff --git a/apolloschurchapp/jest.setup.js b/apolloschurchapp/jest.setup.js
index 03cd103..4b67053 100644
--- a/apolloschurchapp/jest.setup.js
+++ b/apolloschurchapp/jest.setup.js
@@ -1,24 +1,57 @@
-jest.mock('./src/client/index');
-jest.mock('./src/config', () => ({
-  ONE_SIGNAL_KEY: 'doesntmatter',
-}));
-jest.mock('react-native-custom-tabs', () => ({
-  CustomTabs: {
-    openURL: jest.fn(),
-  },
-}));
+import React from 'react';
+import { NativeModules } from 'react-native';
+// We ran into an issue where SafeAreaView would break jest tests.
 
-jest.mock('react-native-safari-view', () => ({
-  isAvailable: jest.fn().mockImplementation(() => Promise.resolve(true)),
-  show: jest.fn(),
+jest.mock('../apollos-ui-kit/node_modules/react-native-safe-area-context/', () => ({
+  SafeAreaConsumer: ({ children }) => children({ top: 0, bottom: 0, left: 0, right: 0 }),
+  SafeAreaProvider: ({ children }) => children,
 }));
 
-jest.mock('react-native-onesignal');
+jest.mock('react-navigation', () => {
+  const ActualNavigation = require.requireActual('react-navigation');
+  return {
+    ...ActualNavigation,
+    SafeAreaView: require.requireActual('SafeAreaView'),
+  };
+});
+
 jest.mock('react-native-music-control', () => ({
   enableBackgroundMode: jest.fn(),
   enableControl: jest.fn(),
   on: jest.fn(),
   setNowPlaying: jest.fn(),
+  STATE_PLAYING: false,
+  STATE_PAUSED: true,
+}));
+
+jest.mock('react-native-config', () => ({
+  ONE_SIGNAL_KEY: 'doesntmatter',
+}));
+
+jest.mock('Animated', () => {
+  const ActualAnimated = require.requireActual('Animated');
+  return {
+    ...ActualAnimated,
+    timing: (value, config) => ({
+      start: (callback) => {
+        value.setValue(config.toValue);
+        callback && callback();
+      },
+      stop: () => ({}),
+    }),
+    spring: (value, config) => ({
+      start: (callback) => {
+        value.setValue(config.toValue);
+        callback && callback();
+      },
+      stop: () => ({}),
+    }),
+  };
+});
+
+jest.mock('react-native-safari-view', () => ({
+  isAvailable: jest.fn().mockImplementation(() => Promise.resolve(true)),
+  show: jest.fn(),
 }));
 
 jest.mock('react-native-device-info', () => ({
@@ -29,4 +62,45 @@ jest.mock('react-native-device-info', () => ({
   getBuildNumber: () => 0,
 }));
 
+jest.mock('rn-fetch-blob', () => 'Fetch');
+jest.mock(
+  '@apollosproject/ui-passes/node_modules/rn-fetch-blob',
+  () => 'Fetch'
+);
+
+jest.mock('@apollosproject/ui-analytics', () => ({
+  track: () => '',
+  AnalyticsConsumer: ({ children }) => children({ test: jest.fn() }),
+  AnalyticsProvider: ({ children }) => children,
+  TrackEventWhenLoaded: () => null,
+  withTrackOnPress: (Component) => (props) => <Component {...props} />,
+}));
+
+jest.mock('@apollosproject/ui-notifications', () => ({
+  NotificationsProvider: ({ children }) => children,
+}));
+
+jest.mock('@apollosproject/ui-media-player', () => ({
+  MediaPlayerSpacer: ({ children }) => children,
+  MediaPlayer: () => 'MediaPlayer',
+  MediaPlayerProvider: ({ children }) => children,
+  playVideoMutation: 'mutation { playVideo }',
+  withTabBarMediaSpacer: () => ({ children }) => children,
+}));
+
 jest.mock('react-native-video', () => 'Video');
+
+jest.mock('NativeEventEmitter');
+
+jest.mock('react-native-maps');
+jest.mock('DatePickerIOS', () => 'DatePicker');
+jest.mock('./src/client/index');
+
+NativeModules.RNGestureHandlerModule = {
+  attachGestureHandler: jest.fn(),
+  createGestureHandler: jest.fn(),
+  dropGestureHandler: jest.fn(),
+  updateGestureHandler: jest.fn(),
+  State: {},
+  Directions: {},
+};
diff --git a/apolloschurchapp/metro.config.js b/apolloschurchapp/metro.config.js
new file mode 100644
index 0000000..f833f5a
--- /dev/null
+++ b/apolloschurchapp/metro.config.js
@@ -0,0 +1,99 @@
+/**
+ * Metro configuration for React Native
+ * https://github.com/facebook/react-native
+ *
+ * @format
+ */
+
+const path = require('path');
+const blacklist = require('metro-config/src/defaults/blacklist');
+
+const flatten = (array) =>
+  array.reduce((accum, curr) => curr.concat(accum), []);
+
+const localDeps = [
+  path.resolve('..', 'apollos-ui-kit'),
+  path.resolve('..', 'apollos-ui-passes'),
+  path.resolve('..', 'apollos-ui-auth'),
+  path.resolve('..', 'apollos-ui-htmlview'),
+  path.resolve('..', 'apollos-ui-analytics'),
+  path.resolve('..', 'apollos-ui-storybook'),
+  path.resolve('..', 'apollos-ui-onboarding'),
+  path.resolve('..', 'apollos-ui-media-player'),
+  path.resolve('..', 'apollos-ui-scripture'),
+  path.resolve('..', 'apollos-ui-notifications'),
+];
+
+const sharedNativeModules = [
+  'react-native-linear-gradient',
+  'react-native-safe-area-context',
+  'react-native-svg',
+  'react-native-onesignal',
+  'react-native-music-control',
+  'react-native-video',
+  'react-native-video-controls',
+  '@apollosproject/react-native-airplay-btn',
+  'react-navigation',
+];
+
+module.exports = {
+  resolver: {
+    extraNodeModules: {
+      'react-native': path.resolve('.', 'node_modules/react-native'),
+      ...sharedNativeModules.reduce(
+        (accum, curr) => ({
+          ...accum,
+          [curr]: path.resolve('.', `node_modules/${curr}`),
+        }),
+        {}
+      ),
+      'react-native-svg': path.resolve('.', 'node_modules/react-native-svg'),
+    },
+    blacklistRE: blacklist([
+      ...localDeps.map(
+        (depPath) => new RegExp(`${depPath}/node_modules/react-native/.*`)
+      ),
+      ...flatten(
+        localDeps.map((depPath) =>
+          sharedNativeModules.map(
+            (moduleName) =>
+              new RegExp(`${depPath}/node_modules/${moduleName}/.*`)
+          )
+        )
+      ),
+      ...sharedNativeModules.map(
+        (moduleName) =>
+          new RegExp(`${path.resolve(`../../node_modules/${moduleName}`)}/.*`)
+      ),
+      ...localDeps.map(
+        (depPath) => new RegExp(`${depPath}/node_modules/react-native-svg/.*`)
+      ),
+      ...localDeps.map(
+        (depPath) =>
+          new RegExp(`${depPath}/node_modules/.*/node_modules/react-native/.*`)
+      ),
+      new RegExp(
+        `${path.resolve('.', 'node_modules')}/.*/node_modules/react-native/.*`
+      ),
+      new RegExp(
+        `${path.resolve('..', '..', 'node_modules', 'react-native')}/.*`
+      ),
+      new RegExp(
+        `${path.resolve(
+          '..',
+          '..',
+          'node_modules'
+        )}/.*/node_modules/react-native/.*`
+      ),
+    ]),
+  },
+  watchFolders: [...localDeps, path.resolve('..', '..', 'node_modules')],
+  transformer: {
+    getTransformOptions: async () => ({
+      transform: {
+        experimentalImportSupport: false,
+        inlineRequires: false,
+      },
+    }),
+  },
+};
diff --git a/apolloschurchapp/package.json b/apolloschurchapp/package.json
index e0b9480..729ab08 100644
--- a/apolloschurchapp/package.json
+++ b/apolloschurchapp/package.json
@@ -1,23 +1,22 @@
 {
   "name": "apolloschurchapp",
-  "version": "0.8.0-alpha.0",
+  "version": "1.2.0-beta.3",
   "private": true,
   "devDependencies": {
-    "@storybook/addon-actions": "4.0.7",
-    "@storybook/addon-links": "4.0.7",
-    "@storybook/addons": "4.0.7",
-    "@storybook/react-native": "4.0.7",
     "codecov": "3.0.2",
     "get-dev-paths": "^0.1.0",
-    "jest": "23.6.0",
+    "graphql-import": "^0.7.1",
+    "jest": "^24.8.0",
     "jest-react-native": "18.0.0",
-    "nodemon": "1.17.5",
+    "jetifier": "^1.6.4",
+    "metro-react-native-babel-preset": "^0.56.0",
+    "nodemon": "1.18.7",
+    "prettier": "1.14.2",
     "prop-types": "15.6.1",
     "react-dom": "16.6.3",
-    "react-native-dotenv": "0.2.0",
     "react-native-storybook-loader": "1.8.0",
     "react-native-version": "2.6.2",
-    "react-test-renderer": "16.6.1",
+    "react-test-renderer": "16.8.6",
     "waait": "1.0.2"
   },
   "engines": {
@@ -27,23 +26,27 @@
     "src"
   ],
   "scripts": {
-    "android": "react-native run-android",
+    "android": "SIM=\"$($HOME/Library/Android/sdk/emulator/emulator -list-avds | sed -n 1p)\" && $HOME/Library/Android/sdk/emulator/emulator -avd \"${SIM}\" & react-native run-android --appId com.apolloschurch.app",
     "codecov": "cat ./coverage/lcov.info | codecov",
     "fixlint": "eslint ./src --fix",
-    "ios": "react-native run-ios --simulator=\"iPhone X\"",
+    "ios": "react-native run-ios --simulator=\"iPhone 11\"",
+    "storybook:enable": "sed -i '' 's/STORYBOOK=false/STORYBOOK=true/g' .env",
+    "storybook:disable": "sed -i '' 's/STORYBOOK=true/STORYBOOK=false/g' .env",
+    "generate-stories": "rnstl --searchDir ./src --pattern **/*.stories.js",
     "lint": "eslint ./src --ext .js",
+    "version": "node ../../scripts/update-apollos-version.js && git add apollos.json",
     "postversion": "react-native-version --never-amend --android android/app/build.gradle --ios ios/",
-    "prestart": "babel-node ./scripts/get-introspection-data.js",
+    "prestart": "lerna run generate-stories & node ./scripts/get-introspection-data.js",
+    "postinstall": "jetify",
+    "pods": "./scripts/install_pods.sh",
     "start": "react-native start",
-    "storybook": "rnstl --searchDir ./storybook ./src --pattern \"**/*.stories.js\" && storybook start -p 7007 --root ../../",
-    "test": "jest",
-    "release": "standard-version --release-as minor"
+    "test": "TZ=UTC jest"
   },
   "jest": {
     "preset": "react-native",
     "collectCoverage": true,
     "transformIgnorePatterns": [
-      "node_modules/(?!((jest-)?react-native|rn-*|react-clone-referenced-element|react-navigation|@apollosproject))"
+      "node_modules/(?!((jest-)?react-native|rn-*|react-clone-referenced-element|react-navigation|@react-navigation|@apollosproject))"
     ],
     "testMatch": [
       "<rootDir>/src/**/?(*.)(test|tests).{js,jsx,mjs}"
@@ -56,60 +59,67 @@
     ],
     "setupFiles": [
       "./jest.setup.js"
-    ],
-    "transform": {
-      ".+\\.js$": "<rootDir>/node_modules/react-native/jest/preprocessor.js"
-    }
+    ]
   },
   "dependencies": {
-    "@apollosproject/ui-kit": "^0.8.0-alpha.0",
-    "apollo-cache-inmemory": "1.3.5",
+    "@apollosproject/react-native-airplay-btn": "0.2.0",
+    "@apollosproject/ui-analytics": "^1.2.0-beta.3",
+    "@apollosproject/ui-auth": "^1.2.0-beta.3",
+    "@apollosproject/ui-htmlview": "^1.2.0-beta.3",
+    "@apollosproject/ui-kit": "^1.2.0-beta.3",
+    "@apollosproject/ui-media-player": "^1.2.0-beta.3",
+    "@apollosproject/ui-notifications": "^1.2.0-beta.3",
+    "@apollosproject/ui-onboarding": "^1.2.0-beta.3",
+    "@apollosproject/ui-passes": "^1.2.0-beta.3",
+    "@apollosproject/ui-scripture": "^1.2.0-beta.3",
+    "@apollosproject/ui-storybook": "^1.2.0-beta.3",
+    "@react-native-community/async-storage": "^1.5.1",
+    "@react-native-community/geolocation": "^2.0.2",
+    "apollo-cache-inmemory": "1.5.1",
     "apollo-cache-persist": "0.1.1",
-    "apollo-client": "2.4.2",
-    "apollo-link": "1.2.3",
-    "apollo-link-context": "1.0.9",
-    "apollo-link-http": "1.5.5",
-    "apollo-link-schema": "1.1.1",
-    "apollo-link-state": "0.4.2",
+    "apollo-client": "2.5.1",
+    "apollo-link": "1.2.8",
+    "apollo-link-http": "1.5.11",
+    "apollo-link-schema": "1.1.6",
     "apollo-upload-client": "9.0.0",
-    "buffer": "^5.2.1",
     "color": "3.0.0",
-    "entities": "1.1.1",
+    "dotenv": "^6.2.0",
     "events": "^3.0.0",
-    "formik": "0.11.11",
+    "formik": "^1.5.2",
     "graphql": "0.13.2",
     "graphql-tag": "2.9.2",
     "graphql-tools": "3.1.1",
-    "htmlparser2": "3.9.2",
     "lodash": "^4.17.11",
     "memoize-one": "4.0.0",
     "moment": "2.22.2",
     "node-fetch": "2.2.0",
-    "numeral": "^2.0.6",
-    "prettier": "1.14.2",
-    "querystring": "^0.2.0",
-    "react": "16.6.1",
-    "react-apollo": "2.2.4",
-    "react-native": "0.57.5",
-    "react-native-custom-tabs": "0.1.7",
-    "react-native-device-info": "0.22.5",
-    "react-native-image-picker": "0.26.10",
-    "react-native-keyboard-aware-scroll-view": "0.7.0",
-    "react-native-linear-gradient": "2.4.0",
-    "react-native-music-control": "0.7.3",
-    "react-native-onesignal": "3.2.7",
+    "react": "16.8.6",
+    "react-apollo": "2.5.5",
+    "react-native": "0.60.5",
+    "react-native-config": "^0.11.7",
+    "react-native-device-info": "^2.1.2",
+    "react-native-geolocation-service": "^3.0.0",
+    "react-native-gesture-handler": "^1.3.0",
+    "react-native-image-picker": "0.28.0",
+    "react-native-inappbrowser-reborn": "^3.0.0",
+    "react-native-linear-gradient": "^2.5.4",
+    "react-native-maps": "0.25.0",
+    "react-native-music-control": "0.10.5",
+    "react-native-onesignal": "3.3.2",
+    "react-native-passkit-wallet": "^0.1.4",
     "react-native-safari-view": "2.1.0",
-    "react-native-safe-area-view": "0.11.0",
-    "react-native-screens": "1.0.0-alpha.12",
-    "react-native-splash-screen": "^3.1.1",
-    "react-native-svg": "6.5.2",
-    "react-native-video": "3.2.0",
+    "react-native-safe-area-context": "^0.3.6",
+    "react-native-safe-area-view": "0.13.1",
+    "react-native-screens": "^1.0.0-alpha.23",
+    "react-native-splash-screen": "3.2.0",
+    "react-native-svg": "^9.4.0",
+    "react-native-video": "^5.0.0",
     "react-native-video-controls": "2.2.3",
-    "react-navigation": "2.11.2",
+    "react-native-webview": "^5.2.0",
+    "react-navigation": "^3.11.0",
     "recompose": "^0.30.0",
-    "rn-placeholder": "1.2.0",
-    "stream": "0.0.2",
-    "url": "^0.11.0",
+    "rn-fetch-blob": "^0.10.16",
+    "stream": "^0.0.2",
     "yup": "0.26.6"
   },
   "rnpm": {
diff --git a/apolloschurchapp/polyfill.js b/apolloschurchapp/polyfill.js
new file mode 100644
index 0000000..e2e1ede
--- /dev/null
+++ b/apolloschurchapp/polyfill.js
@@ -0,0 +1,10 @@
+// this can be removed when we upgrade to react-native 59
+
+// symbol polyfills
+global.Symbol = require('core-js/es6/symbol');
+require('core-js/fn/symbol/iterator');
+
+// collection fn polyfills
+require('core-js/fn/map');
+require('core-js/fn/set');
+require('core-js/fn/array/find');
diff --git a/apolloschurchapp/rn-cli.config.js b/apolloschurchapp/rn-cli.config.js
deleted file mode 100644
index 4235fa0..0000000
--- a/apolloschurchapp/rn-cli.config.js
+++ /dev/null
@@ -1,35 +0,0 @@
-const path = require('path');
-const blacklist = require('metro-config/src/defaults/blacklist');
-
-const localDeps = [path.resolve('..', 'apollos-ui-kit')];
-
-module.exports = {
-  resolver: {
-    extraNodeModules: {
-      'react-native': path.resolve('.', 'node_modules/react-native'),
-      'react-native-linear-gradient': path.resolve(
-        '.',
-        'node_modules/react-native-linear-gradient'
-      ),
-    },
-    blacklistRE: blacklist([
-      ...localDeps.map(
-        (depPath) => new RegExp(`${depPath}/node_modules/react-native/.*`)
-      ),
-      ...localDeps.map(
-        (depPath) =>
-          new RegExp(`${depPath}/node_modules/react-native-linear-gradient/.*`)
-      ),
-      new RegExp(
-        `${path.resolve('..', '..', 'node_modules', 'react-native')}/.*`
-      ),
-      new RegExp(
-        `${path.resolve('..', '..', 'node_modules')}/.*/react-native/.*`
-      ),
-      new RegExp(
-        `${path.resolve('../../node_modules/react-native-linear-gradient')}/.*`
-      ),
-    ]),
-  },
-  watchFolders: [...localDeps, path.resolve('..', '..', 'node_modules')],
-};
diff --git a/apolloschurchapp/scripts/get-introspection-data.js b/apolloschurchapp/scripts/get-introspection-data.js
index f2c7e28..80ae562 100755
--- a/apolloschurchapp/scripts/get-introspection-data.js
+++ b/apolloschurchapp/scripts/get-introspection-data.js
@@ -1,7 +1,7 @@
-import fs from 'fs';
-import Path from 'path';
-import { APP_DATA_URL } from 'react-native-dotenv';
-import fetch from 'node-fetch';
+const fs = require('fs');
+const Path = require('path');
+require('dotenv/config');
+const fetch = require('node-fetch');
 
 const attempts = 0;
 const maxAttempts = 3;
@@ -9,7 +9,7 @@ const timeBetweenAttempts = 5 * 1000;
 
 const getIntrospectionData = async () => {
   try {
-    const query = await fetch(APP_DATA_URL, {
+    const query = await fetch(process.env.APP_DATA_URL, {
       method: 'POST',
       headers: { 'Content-Type': 'application/json' },
       body: JSON.stringify({
diff --git a/apolloschurchapp/scripts/install_pods.sh b/apolloschurchapp/scripts/install_pods.sh
new file mode 100755
index 0000000..dfd82f2
--- /dev/null
+++ b/apolloschurchapp/scripts/install_pods.sh
@@ -0,0 +1,11 @@
+cd ios
+# check cocoapods version
+MY_VERSION=$(pod --version)
+PODFILE_TEXT=$(sed -n /COCOAPODS/p Podfile.lock)
+MASTER_VERSION=${PODFILE_TEXT#"COCOAPODS: "}
+if [[ $MY_VERSION != $MASTER_VERSION ]]; then
+	echo "Cocoapods version mismatch. Install version $MASTER_VERSION."
+	exit 1
+fi
+# update repo and install pods
+pod install --repo-update
diff --git a/apolloschurchapp/src/LandingScreen.js b/apolloschurchapp/src/LandingScreen.js
new file mode 100644
index 0000000..fa430a1
--- /dev/null
+++ b/apolloschurchapp/src/LandingScreen.js
@@ -0,0 +1,26 @@
+import React from 'react';
+import { styled, GradientOverlayImage } from '@apollosproject/ui-kit';
+
+import ApollosLandingScreen from './ui/LandingScreen';
+
+const FullScreenImage = styled({
+  resizeMode: 'cover',
+  position: 'absolute',
+})(GradientOverlayImage);
+
+const LandingScreen = ({ navigation }) => (
+  <ApollosLandingScreen
+    onPressPrimary={() => navigation.push('Auth')}
+    textColor={'white'}
+    BackgroundComponent={
+      <FullScreenImage source={'https://picsum.photos/375/812/?random'} />
+    }
+    primaryNavText={"Let's go!"}
+  />
+);
+
+LandingScreen.navigationOptions = {
+  header: null,
+};
+
+export default LandingScreen;
diff --git a/apolloschurchapp/src/NavigationService.js b/apolloschurchapp/src/NavigationService.js
index a5d758b..a2a5348 100644
--- a/apolloschurchapp/src/NavigationService.js
+++ b/apolloschurchapp/src/NavigationService.js
@@ -2,22 +2,30 @@ import { NavigationActions } from 'react-navigation';
 
 let _navigator;
 
-function setTopLevelNavigator(navigatorRef) {
+const setTopLevelNavigator = (navigatorRef) => {
   _navigator = navigatorRef;
-}
+};
 
-function navigate(routeName, params) {
+const navigate = (routeName, params) => {
   _navigator.dispatch(
     NavigationActions.navigate({
       routeName,
       params,
     })
   );
-}
+};
 
-// add other navigation functions that you need and export them
+const goBack = (from) => {
+  let key;
+  if (from) {
+    const route = _navigator.state.nav.routes.find((r) => r.routeName === from);
+    if (route) ({ key } = route);
+  }
+  _navigator.dispatch(NavigationActions.back({ key }));
+};
 
 export default {
-  navigate,
   setTopLevelNavigator,
+  navigate,
+  goBack,
 };
diff --git a/apolloschurchapp/src/Notifications.js b/apolloschurchapp/src/Notifications.js
deleted file mode 100644
index d37e22f..0000000
--- a/apolloschurchapp/src/Notifications.js
+++ /dev/null
@@ -1,69 +0,0 @@
-import querystring from 'querystring';
-import URL from 'url';
-import { Component } from 'react';
-import { Linking } from 'react-native';
-import OneSignal from 'react-native-onesignal';
-import NavigationService from './NavigationService';
-import { ONE_SIGNAL_KEY } from './config';
-
-export default class NotificationsInit extends Component {
-  static navigationOptions = {};
-
-  componentWillMount() {
-    OneSignal.init(ONE_SIGNAL_KEY, {
-      kOSSettingsKeyAutoPrompt: true,
-    });
-    OneSignal.addEventListener('received', this.onReceived);
-    OneSignal.addEventListener('opened', this.onOpened);
-    OneSignal.addEventListener('ids', this.onIds);
-  }
-
-  componentDidMount() {
-    Linking.getInitialURL().then((url) => {
-      this.navigate(url);
-    });
-    Linking.addEventListener('url', ({ url }) => this.navigate(url));
-  }
-
-  componentWillUnmount() {
-    Linking.removeEventListener('url');
-    OneSignal.removeEventListener('received');
-    OneSignal.removeEventListener('opened');
-    OneSignal.removeEventListener('ids');
-  }
-
-  navigate = (rawUrl) => {
-    if (!rawUrl) return;
-    const url = URL.parse(rawUrl);
-    const route = url.pathname.substring(1);
-    const args = querystring.parse(url.query);
-    NavigationService.navigate(route, args);
-  };
-
-  onReceived = (notification) => {
-    console.log('Notification received: ', notification);
-  };
-
-  onOpened = (openResult) => {
-    console.log('Message: ', openResult.notification.payload.body);
-    console.log('Data: ', openResult.notification.payload.additionalData);
-    console.log('isActive: ', openResult.notification.isAppInFocus);
-    console.log('openResult: ', openResult);
-    // URL looks like this
-    // apolloschurchapp://AppStackNavigator/Connect
-    // apolloschurchapp://SomethingElse/Connect
-    // apolloschurchapp://SomethingElse/ContentSingle?itemId=SomeItemId:blablalba
-    const { url } = openResult.notification.payload.additionalData;
-    if (url) {
-      this.navigate(url);
-    }
-  };
-
-  onIds = (device) => {
-    console.log('Device info: ', device);
-  };
-
-  render() {
-    return null;
-  }
-}
diff --git a/apolloschurchapp/src/Providers.js b/apolloschurchapp/src/Providers.js
index da98513..9b7e84f 100644
--- a/apolloschurchapp/src/Providers.js
+++ b/apolloschurchapp/src/Providers.js
@@ -1,5 +1,37 @@
-import { nest } from 'recompose';
+import React from 'react';
+import Config from 'react-native-config';
 import { Providers } from '@apollosproject/ui-kit';
+import { AuthProvider } from '@apollosproject/ui-auth';
+import { AnalyticsProvider } from '@apollosproject/ui-analytics';
+import { MediaPlayerProvider } from '@apollosproject/ui-media-player';
+import { NotificationsProvider } from '@apollosproject/ui-notifications';
+
+import NavigationService from './NavigationService';
 import ClientProvider from './client';
+import customTheme, { customIcons } from './theme';
+
+const AppProviders = (props) => (
+  <ClientProvider {...props}>
+    <NotificationsProvider
+      oneSignalKey={Config.ONE_SIGNAL_KEY}
+      navigate={NavigationService.navigate}
+    >
+      <AuthProvider
+        navigateToAuth={() => NavigationService.navigate('Auth')}
+        closeAuth={() => NavigationService.navigate('Onboarding')}
+      >
+        <MediaPlayerProvider>
+          <AnalyticsProvider>
+            <Providers
+              themeInput={customTheme}
+              iconInput={customIcons}
+              {...props}
+            />
+          </AnalyticsProvider>
+        </MediaPlayerProvider>
+      </AuthProvider>
+    </NotificationsProvider>
+  </ClientProvider>
+);
 
-export default nest(ClientProvider, Providers);
+export default AppProviders;
diff --git a/apolloschurchapp/src/__mocks__/config.js b/apolloschurchapp/src/__mocks__/config.js
deleted file mode 100644
index b1162fc..0000000
--- a/apolloschurchapp/src/__mocks__/config.js
+++ /dev/null
@@ -1,2 +0,0 @@
-/* eslint-disable import/prefer-default-export */
-export const ONE_SIGNAL_KEY = 'doesntmatter';
diff --git a/apolloschurchapp/src/__tests__/LandingScreen.tests.js b/apolloschurchapp/src/__tests__/LandingScreen.tests.js
new file mode 100644
index 0000000..37abb80
--- /dev/null
+++ b/apolloschurchapp/src/__tests__/LandingScreen.tests.js
@@ -0,0 +1,15 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+import { Providers } from '@apollosproject/ui-kit';
+import LandingScreen from '../LandingScreen';
+
+describe('the LandingScreen', () => {
+  it('should render', () => {
+    const tree = renderer.create(
+      <Providers>
+        <LandingScreen />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/index.test.js b/apolloschurchapp/src/__tests__/index.test.js
similarity index 87%
rename from apolloschurchapp/src/index.test.js
rename to apolloschurchapp/src/__tests__/index.test.js
index dcea081..92aedcb 100644
--- a/apolloschurchapp/src/index.test.js
+++ b/apolloschurchapp/src/__tests__/index.test.js
@@ -1,7 +1,7 @@
 import renderer from 'react-test-renderer';
 import React from 'react';
 
-import App from '.';
+import App from '../index';
 
 it('renders without crashing', () => {
   const rendered = renderer.create(<App />).toJSON();
diff --git a/apolloschurchapp/src/analytics/TrackEventWhenLoaded.js b/apolloschurchapp/src/analytics/TrackEventWhenLoaded.js
deleted file mode 100644
index eb7ed61..0000000
--- a/apolloschurchapp/src/analytics/TrackEventWhenLoaded.js
+++ /dev/null
@@ -1,38 +0,0 @@
-import { PureComponent } from 'react';
-import PropTypes from 'prop-types';
-import { track } from './index';
-
-export default class TrackEventWhenLoaded extends PureComponent {
-  componentDidMount() {
-    if (this.props.loaded) {
-      this.track();
-    }
-  }
-
-  componentDidUpdate(prevProps) {
-    if (!prevProps.loaded && this.props.loaded) {
-      this.track();
-    }
-  }
-
-  get trackClient() {
-    return this.props.track || track;
-  }
-
-  track() {
-    const { eventName, properties } = this.props;
-    return this.trackClient({ eventName, properties });
-  }
-
-  render() {
-    return null;
-  }
-}
-
-TrackEventWhenLoaded.propTypes = {
-  loaded: PropTypes.bool.isRequired,
-  eventName: PropTypes.string.isRequired,
-  // eslint-disable-next-line react/forbid-prop-types
-  properties: PropTypes.any,
-  track: PropTypes.func,
-};
diff --git a/apolloschurchapp/src/analytics/TrackEventWhenLoaded.tests.js b/apolloschurchapp/src/analytics/TrackEventWhenLoaded.tests.js
deleted file mode 100644
index fcf66ed..0000000
--- a/apolloschurchapp/src/analytics/TrackEventWhenLoaded.tests.js
+++ /dev/null
@@ -1,46 +0,0 @@
-import React from 'react';
-import renderer from 'react-test-renderer';
-
-import TrackEventWhenLoaded from './TrackEventWhenLoaded';
-
-const trackMock = jest.fn();
-
-describe('The TrackEventWhenLoaded component', () => {
-  afterEach(() => {
-    trackMock.mockClear();
-  });
-  it('should track an event if mounted with loaded=true', () => {
-    renderer.create(
-      <TrackEventWhenLoaded
-        loaded
-        eventName="Track Something"
-        properties={{ ThingId: '1234' }}
-        track={trackMock}
-      />
-    );
-    expect(trackMock.mock.calls).toMatchSnapshot();
-  });
-
-  it('should track an event if mounted with loaded=false and then switching to true', () => {
-    const tree = renderer.create(
-      <TrackEventWhenLoaded
-        loaded={false}
-        eventName="Track Something"
-        properties={{ ThingId: '1234' }}
-        track={trackMock}
-        key="tracker"
-      />
-    );
-    expect(trackMock.mock.calls).toMatchSnapshot();
-    tree.update(
-      <TrackEventWhenLoaded
-        loaded
-        eventName="Track Something"
-        properties={{ ThingId: '1234' }}
-        track={trackMock}
-        key="tracker"
-      />
-    );
-    expect(trackMock.mock.calls).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/analytics/index.js b/apolloschurchapp/src/analytics/index.js
deleted file mode 100644
index cd7dbba..0000000
--- a/apolloschurchapp/src/analytics/index.js
+++ /dev/null
@@ -1,79 +0,0 @@
-import gql from 'graphql-tag';
-import DeviceInfo from 'react-native-device-info';
-import { Platform } from 'react-native';
-
-import { client } from '../client';
-
-const anonymousId = DeviceInfo.getUniqueID();
-
-const deviceInfo = {
-  platform: Platform.OS === 'ios' ? 'iOS' : 'Android',
-  deviceId: anonymousId,
-  deviceModel: DeviceInfo.getModel(),
-  osVersion: DeviceInfo.getSystemVersion(),
-  appVersion: DeviceInfo.getVersion(),
-};
-
-const trackMutation = gql`
-  mutation track($input: AnalyticsTrackInput!) {
-    trackEvent(input: $input) {
-      success
-    }
-  }
-`;
-
-const identifyMutation = gql`
-  mutation identify($input: AnalyticsIdentifyInput!) {
-    identifySelf(input: $input) {
-      success
-    }
-  }
-`;
-
-const propertiesToGqlInput = (props = []) =>
-  Object.keys(props).map((key) => ({
-    field: key,
-    value: props[key],
-  }));
-
-export const track = ({ eventName, properties }) =>
-  client.mutate({
-    mutation: trackMutation,
-    variables: {
-      input: {
-        anonymousId,
-        deviceInfo,
-        eventName,
-        properties: propertiesToGqlInput(properties),
-      },
-    },
-  });
-
-export const identify = () =>
-  client.mutate({
-    mutation: identifyMutation,
-    variables: {
-      input: {
-        anonymousId,
-        deviceInfo,
-      },
-    },
-  });
-
-export const events = {
-  LikeContent: 'Like Content',
-  UnlikeContent: 'Unlike Content',
-  ViewContent: 'View Content',
-  ShareContent: 'Share Content',
-  UserLogin: 'User Login',
-  UserSignup: 'User Signup',
-  UserLogout: 'UserLogout',
-  UserForgotPassword: 'User Forgot Password',
-  UserPlayedMedia: 'User Played Media',
-};
-
-export default {
-  track,
-  identify,
-  events,
-};
diff --git a/apolloschurchapp/src/auth/LoginButton/LoginButton.tests.js b/apolloschurchapp/src/auth/LoginButton/LoginButton.tests.js
deleted file mode 100644
index 64f2b62..0000000
--- a/apolloschurchapp/src/auth/LoginButton/LoginButton.tests.js
+++ /dev/null
@@ -1,71 +0,0 @@
-import React from 'react';
-import renderer from 'react-test-renderer';
-import wait from 'waait';
-
-import Providers from 'apolloschurchapp/src/Providers';
-
-import getLoginState from '../getLoginState';
-
-import LoginButton from '.';
-
-describe('LoginButton component', () => {
-  it('renders nothing when logged in', async () => {
-    const mock = {
-      request: {
-        query: getLoginState,
-      },
-      result: {
-        data: { isLoggedIn: true },
-      },
-    };
-
-    const navigation = { navigate: jest.fn() };
-    const tree = renderer.create(
-      <Providers mocks={[mock]}>
-        <LoginButton navigation={navigation} />
-      </Providers>
-    );
-    await wait(0); // wait for response from graphql
-    expect(tree).toMatchSnapshot();
-  });
-
-  it('renders a LoginButton when logged out', async () => {
-    const mock = {
-      request: {
-        query: getLoginState,
-      },
-      result: {
-        data: { isLoggedIn: null },
-      },
-    };
-
-    const navigation = { navigate: jest.fn() };
-    const tree = renderer.create(
-      <Providers mocks={[mock]}>
-        <LoginButton navigation={navigation} />
-      </Providers>
-    );
-    await wait(0); // wait for response from graphql
-    expect(tree).toMatchSnapshot();
-  });
-
-  it('renders a LoginButton that is loading', async () => {
-    const mock = {
-      request: {
-        query: getLoginState,
-      },
-      result: {
-        data: { isLoggedIn: null },
-      },
-    };
-
-    const navigation = { navigate: jest.fn() };
-    const tree = renderer.create(
-      <Providers mocks={[mock]}>
-        <LoginButton navigation={navigation} loading />
-      </Providers>
-    );
-    await wait(0); // wait for response from graphql
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/auth/LoginButton/index.js b/apolloschurchapp/src/auth/LoginButton/index.js
deleted file mode 100644
index 66c7753..0000000
--- a/apolloschurchapp/src/auth/LoginButton/index.js
+++ /dev/null
@@ -1,40 +0,0 @@
-import React, { PureComponent } from 'react';
-import { withNavigation } from 'react-navigation';
-import { Query } from 'react-apollo';
-import PropTypes from 'prop-types';
-
-import { Button } from '@apollosproject/ui-kit';
-
-import getLoginState from '../getLoginState';
-
-class LoginButton extends PureComponent {
-  static propTypes = {
-    navigation: PropTypes.shape({
-      push: PropTypes.func,
-    }),
-  };
-
-  handleLoginPress = () => this.props.navigation.push('Auth');
-
-  render() {
-    const { navigation, ...otherProps } = this.props;
-    return (
-      <Query query={getLoginState}>
-        {({ data }) => {
-          const { isLoggedIn, loading } = data;
-          if (isLoggedIn) return null;
-          return (
-            <Button
-              onPress={this.handleLoginPress}
-              title="Get Connected"
-              loading={loading}
-              {...otherProps}
-            />
-          );
-        }}
-      </Query>
-    );
-  }
-}
-
-export default withNavigation(LoginButton);
diff --git a/apolloschurchapp/src/auth/ProtectedAction.js b/apolloschurchapp/src/auth/ProtectedAction.js
deleted file mode 100644
index 5cec0fd..0000000
--- a/apolloschurchapp/src/auth/ProtectedAction.js
+++ /dev/null
@@ -1,67 +0,0 @@
-import React, { PureComponent } from 'react';
-import { Query } from 'react-apollo';
-import PropTypes from 'prop-types';
-import { withNavigation } from 'react-navigation';
-
-import getLoginState from './getLoginState';
-
-class ProtectedAction extends PureComponent {
-  queuedActionsToTriggerOnLogin = [];
-
-  static propTypes = {
-    children: PropTypes.func,
-    navigation: PropTypes.shape({
-      push: PropTypes.func,
-    }),
-    loading: PropTypes.bool,
-    isLoggedIn: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),
-    action: PropTypes.func.isRequired,
-  };
-
-  componentDidUpdate(oldProps) {
-    if (!oldProps.isLoggedIn && this.props.isLoggedIn) {
-      this.handleLogin();
-    }
-
-    if (
-      oldProps.loading &&
-      !this.props.loading &&
-      !this.props.isLoggedIn &&
-      this.queuedActionsToTriggerOnLogin.length
-    ) {
-      this.triggerLogin();
-    }
-  }
-
-  handleLogin = () => {
-    this.queuedActionsToTriggerOnLogin.forEach((action) => action());
-    this.queuedActionsToTriggerOnLogin = [];
-  };
-
-  triggerLogin = () => this.props.navigation.push('Auth');
-
-  protectedActionHandler = (action) => (...args) => {
-    if (this.props.isLoggedIn) {
-      action(...args);
-    } else {
-      this.queuedActionsToTriggerOnLogin.push(action.bind(this, ...args));
-      if (!this.props.loading) this.triggerLogin();
-    }
-  };
-
-  render() {
-    return typeof this.props.children === 'function'
-      ? this.props.children(this.protectedActionHandler(this.props.action))
-      : this.props.children;
-  }
-}
-
-const ProtectedActionWithQuery = (props) => (
-  <Query query={getLoginState}>
-    {({ data: { isLoggedIn = false } = {}, loading }) => (
-      <ProtectedAction isLoggedIn={isLoggedIn} loading={loading} {...props} />
-    )}
-  </Query>
-);
-
-export default withNavigation(ProtectedActionWithQuery);
diff --git a/apolloschurchapp/src/auth/ProtectedTouchable.js b/apolloschurchapp/src/auth/ProtectedTouchable.js
deleted file mode 100644
index 82bb73b..0000000
--- a/apolloschurchapp/src/auth/ProtectedTouchable.js
+++ /dev/null
@@ -1,24 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-import { Touchable } from '@apollosproject/ui-kit';
-import ProtectedAction from './ProtectedAction';
-
-const ProtectedTouchable = ({
-  onPress,
-  children,
-  TouchableComponent = Touchable,
-}) => (
-  <ProtectedAction action={onPress}>
-    {(action) => (
-      <TouchableComponent onPress={action}>{children}</TouchableComponent>
-    )}
-  </ProtectedAction>
-);
-
-ProtectedTouchable.propTypes = {
-  onPress: PropTypes.func.isRequired,
-  children: PropTypes.node.isRequired,
-  TouchableComponent: PropTypes.func,
-};
-
-export default ProtectedTouchable;
diff --git a/apolloschurchapp/src/auth/getLoginState.js b/apolloschurchapp/src/auth/getLoginState.js
deleted file mode 100644
index 97d3e8d..0000000
--- a/apolloschurchapp/src/auth/getLoginState.js
+++ /dev/null
@@ -1,7 +0,0 @@
-import gql from 'graphql-tag';
-
-export default gql`
-  query {
-    isLoggedIn @client
-  }
-`;
diff --git a/apolloschurchapp/src/auth/handleLogin.js b/apolloschurchapp/src/auth/handleLogin.js
deleted file mode 100644
index 417dde0..0000000
--- a/apolloschurchapp/src/auth/handleLogin.js
+++ /dev/null
@@ -1,7 +0,0 @@
-import gql from 'graphql-tag';
-
-export default gql`
-  mutation handleLogin($authToken: String!) {
-    handleLogin(authToken: $authToken) @client
-  }
-`;
diff --git a/apolloschurchapp/src/auth/index.js b/apolloschurchapp/src/auth/index.js
deleted file mode 100644
index b8f16a3..0000000
--- a/apolloschurchapp/src/auth/index.js
+++ /dev/null
@@ -1,98 +0,0 @@
-import React, { PureComponent } from 'react';
-import PropTypes from 'prop-types';
-import { View, SafeAreaView } from 'react-native';
-
-import {
-  FlexedView,
-  TabView,
-  TabSceneMap as SceneMap,
-  H1,
-  H5,
-  styled,
-  Icon,
-  ButtonLink,
-  withTheme,
-} from '@apollosproject/ui-kit';
-
-import { track } from 'apolloschurchapp/src/analytics';
-
-import LoginForm from './login';
-import SignUpForm from './signup';
-
-export LoginButton from './LoginButton';
-export ProtectedAction from './ProtectedAction';
-
-const Title = styled(({ theme }) => ({ color: theme.colors.primary }))(H1);
-
-const BrandIcon = withTheme(({ theme }) => ({
-  name: 'brand-icon',
-  size: theme.sizing.baseUnit * 2.25,
-  marginVertical: theme.sizing.baseUnit,
-  fill: theme.colors.primary,
-}))(Icon);
-
-const HeaderContainer = styled(({ theme }) => ({
-  backgroundColor: theme.colors.background.paper,
-}))(SafeAreaView);
-
-const Header = styled(({ theme }) => ({
-  padding: theme.sizing.baseUnit,
-  paddingBottom: theme.sizing.baseUnit * 1.5,
-}))(View);
-
-const CancelButton = styled(({ theme }) => ({
-  alignSelf: 'flex-end',
-  paddingTop: theme.sizing.baseUnit * 0.75,
-  paddingRight: theme.sizing.baseUnit,
-}))(ButtonLink);
-
-class Auth extends PureComponent {
-  static navigationOptions = {
-    header: null,
-  };
-
-  tabRoutes = [
-    { title: 'Sign In', key: 'login' },
-    { title: 'Register', key: 'signup' },
-  ];
-
-  static propTypes = {
-    navigation: PropTypes.shape({
-      goBack: PropTypes.func,
-    }),
-  };
-
-  handleFinish = () => {
-    // trigger the auth modal to close
-    track({ eventName: 'UserLogin' });
-    this.props.navigation.goBack();
-  };
-
-  renderLogin = () => <LoginForm onLogin={this.handleFinish} />;
-
-  renderSignup = () => <SignUpForm onSignup={this.handleFinish} />;
-
-  render() {
-    return (
-      <FlexedView>
-        <HeaderContainer>
-          <CancelButton onPress={this.handleFinish}>Cancel</CancelButton>
-          <Header>
-            <BrandIcon />
-            <Title>Welcome!</Title>
-            <H5>Please sign in to continue</H5>
-          </Header>
-        </HeaderContainer>
-        <TabView
-          routes={this.tabRoutes}
-          renderScene={SceneMap({
-            login: this.renderLogin,
-            signup: this.renderSignup,
-          })}
-        />
-      </FlexedView>
-    );
-  }
-}
-
-export default Auth;
diff --git a/apolloschurchapp/src/auth/login/Form.js b/apolloschurchapp/src/auth/login/Form.js
deleted file mode 100644
index 7551d9e..0000000
--- a/apolloschurchapp/src/auth/login/Form.js
+++ /dev/null
@@ -1,107 +0,0 @@
-import React, { PureComponent } from 'react';
-import { View, SafeAreaView } from 'react-native';
-import PropTypes from 'prop-types';
-import { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';
-
-import { track, events } from 'apolloschurchapp/src/analytics';
-import { WebBrowserConsumer } from 'apolloschurchapp/src/ui/WebBrowser';
-import {
-  FlexedView,
-  PaddedView,
-  TextInput,
-  Button,
-  ButtonLink,
-  styled,
-} from '@apollosproject/ui-kit';
-
-const BottomSafeAreaView = styled({
-  position: 'absolute',
-  bottom: 0,
-  left: 0,
-  right: 0,
-})(SafeAreaView);
-
-class Form extends PureComponent {
-  static propTypes = {
-    setFieldValue: PropTypes.func,
-    touched: PropTypes.shape({}),
-    errors: PropTypes.shape({}),
-    values: PropTypes.shape({}),
-    handleSubmit: PropTypes.func,
-    isSubmitting: PropTypes.bool,
-    isValid: PropTypes.bool,
-  };
-
-  render() {
-    const {
-      values,
-      touched,
-      errors,
-      handleSubmit,
-      setFieldValue,
-      isValid,
-      isSubmitting,
-    } = this.props;
-    return (
-      <FlexedView>
-        <KeyboardAwareScrollView>
-          <PaddedView>
-            <View>
-              <TextInput
-                label="Email"
-                type="email"
-                value={values.email}
-                error={touched.email && errors.email}
-                onChangeText={(text) => setFieldValue('email', text)}
-                onSubmitEditing={() => this.passwordInput.focus()}
-                returnKeyType="next"
-                textContentType="username"
-                enablesReturnKeyAutomatically
-              />
-              <TextInput
-                label="Password"
-                type="password"
-                value={values.password}
-                error={touched.password && errors.password}
-                onChangeText={(text) => setFieldValue('password', text)}
-                onSubmitEditing={handleSubmit}
-                returnKeyType="go"
-                textContentType="password"
-                enablesReturnKeyAutomatically
-                inputRef={(r) => {
-                  this.passwordInput = r;
-                }}
-              />
-              <WebBrowserConsumer>
-                {(openUrl) => (
-                  <ButtonLink
-                    onPress={() => {
-                      track({ eventName: events.UserForgotPassword });
-                      return openUrl(
-                        'https://apollosrock.newspring.cc/page/56/'
-                      );
-                    }}
-                  >
-                    Forgot your password?
-                  </ButtonLink>
-                )}
-              </WebBrowserConsumer>
-            </View>
-          </PaddedView>
-        </KeyboardAwareScrollView>
-        <BottomSafeAreaView>
-          <PaddedView vertical={false}>
-            <Button
-              onPress={handleSubmit}
-              title="Sign in"
-              disabled={!isValid}
-              loading={isSubmitting}
-            />
-          </PaddedView>
-        </BottomSafeAreaView>
-      </FlexedView>
-    );
-  }
-}
-
-export default Form;
diff --git a/apolloschurchapp/src/auth/login/Form.stories.js b/apolloschurchapp/src/auth/login/Form.stories.js
deleted file mode 100644
index 54cc3f8..0000000
--- a/apolloschurchapp/src/auth/login/Form.stories.js
+++ /dev/null
@@ -1,12 +0,0 @@
-import React from 'react';
-import { storiesOf } from '@storybook/react-native';
-
-import LoginForm from './Form';
-
-storiesOf('Auth/LoginForm', module).add('Example', () => (
-  <LoginForm
-    values={{ email: '', password: '' }}
-    touched={{ email: false, password: false }}
-    errors={{ email: null, password: null }}
-  />
-));
diff --git a/apolloschurchapp/src/auth/login/Form.tests.js b/apolloschurchapp/src/auth/login/Form.tests.js
deleted file mode 100644
index 0e352e3..0000000
--- a/apolloschurchapp/src/auth/login/Form.tests.js
+++ /dev/null
@@ -1,21 +0,0 @@
-import React from 'react';
-import renderer from 'react-test-renderer';
-
-import Providers from 'apolloschurchapp/src/Providers';
-
-import LoginForm from './Form';
-
-describe('The LoginForm component', () => {
-  it('should render', () => {
-    const tree = renderer.create(
-      <Providers>
-        <LoginForm
-          values={{ email: '', password: '' }}
-          touched={{ email: false, password: false }}
-          errors={{ email: null, password: null }}
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/auth/login/authenticate.js b/apolloschurchapp/src/auth/login/authenticate.js
deleted file mode 100644
index 94d4e74..0000000
--- a/apolloschurchapp/src/auth/login/authenticate.js
+++ /dev/null
@@ -1,9 +0,0 @@
-import gql from 'graphql-tag';
-
-export default gql`
-  mutation authenticate($email: String!, $password: String!) {
-    authenticate(identity: $email, password: $password) {
-      token
-    }
-  }
-`;
diff --git a/apolloschurchapp/src/auth/login/index.js b/apolloschurchapp/src/auth/login/index.js
deleted file mode 100644
index 1546d60..0000000
--- a/apolloschurchapp/src/auth/login/index.js
+++ /dev/null
@@ -1,66 +0,0 @@
-import React from 'react';
-import { Mutation } from 'react-apollo';
-import { Formik } from 'formik';
-import * as Yup from 'yup';
-import PropTypes from 'prop-types';
-
-import handleLogin from '../handleLogin';
-import { client } from '../../client'; //eslint-disable-line
-import authenticateMutation from './authenticate';
-import LoginForm from './Form';
-
-const Login = ({ onLogin }) => (
-  <Mutation
-    mutation={authenticateMutation}
-    update={(cache, { data: { authenticate } }) => {
-      client.mutate({
-        mutation: handleLogin,
-        variables: {
-          authToken: authenticate.token,
-        },
-      });
-    }}
-  >
-    {(authenticate) => (
-      <Formik
-        validationSchema={Yup.object().shape({
-          email: Yup.string()
-            .email('Invalid email address')
-            .required('Email is required!'),
-          password: Yup.string().required('Password is required!'),
-        })}
-        onSubmit={async (variables, { setSubmitting, setFieldError }) => {
-          try {
-            await authenticate({ variables });
-            if (onLogin) onLogin();
-          } catch (e) {
-            const { graphQLErrors } = e;
-            if (
-              graphQLErrors.length &&
-              graphQLErrors.find(
-                ({ extensions }) => extensions.code === 'UNAUTHENTICATED'
-              )
-            ) {
-              setFieldError('email', true);
-              setFieldError('password', 'Your email or password is incorrect.');
-            } else {
-              setFieldError(
-                'password',
-                'Unknown error. Please try again later.'
-              );
-            }
-          }
-          setSubmitting(false);
-        }}
-      >
-        {(formikBag) => <LoginForm {...formikBag} />}
-      </Formik>
-    )}
-  </Mutation>
-);
-
-Login.propTypes = {
-  onLogin: PropTypes.func,
-};
-
-export default Login;
diff --git a/apolloschurchapp/src/auth/logout.js b/apolloschurchapp/src/auth/logout.js
deleted file mode 100644
index 8dbff04..0000000
--- a/apolloschurchapp/src/auth/logout.js
+++ /dev/null
@@ -1,7 +0,0 @@
-import gql from 'graphql-tag';
-
-export default gql`
-  mutation {
-    logout @client
-  }
-`;
diff --git a/apolloschurchapp/src/auth/signup/Form.js b/apolloschurchapp/src/auth/signup/Form.js
deleted file mode 100644
index 640342e..0000000
--- a/apolloschurchapp/src/auth/signup/Form.js
+++ /dev/null
@@ -1,90 +0,0 @@
-import React, { PureComponent } from 'react';
-import { View, SafeAreaView } from 'react-native';
-import PropTypes from 'prop-types';
-import { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';
-
-import {
-  FlexedView,
-  PaddedView,
-  TextInput,
-  Button,
-  styled,
-} from '@apollosproject/ui-kit';
-
-const BottomSafeAreaView = styled({
-  position: 'absolute',
-  bottom: 0,
-  left: 0,
-  right: 0,
-})(SafeAreaView);
-
-class Form extends PureComponent {
-  static propTypes = {
-    setFieldValue: PropTypes.func,
-    touched: PropTypes.shape({}),
-    errors: PropTypes.shape({}),
-    values: PropTypes.shape({}),
-    handleSubmit: PropTypes.func,
-    isSubmitting: PropTypes.bool,
-    isValid: PropTypes.bool,
-  };
-
-  render() {
-    const {
-      values,
-      touched,
-      errors,
-      handleSubmit,
-      setFieldValue,
-      isValid,
-      isSubmitting,
-    } = this.props;
-    return (
-      <FlexedView>
-        <KeyboardAwareScrollView>
-          <PaddedView>
-            <View>
-              <TextInput
-                label="Email"
-                type="email"
-                value={values.email}
-                error={touched.email && errors.email}
-                onChangeText={(text) => setFieldValue('email', text)}
-                onSubmitEditing={() => this.passwordInput.focus()}
-                returnKeyType="next"
-                textContentType="username"
-                enablesReturnKeyAutomatically
-              />
-              <TextInput
-                label="Password"
-                type="password"
-                value={values.password}
-                error={touched.password && errors.password}
-                onChangeText={(text) => setFieldValue('password', text)}
-                onSubmitEditing={handleSubmit}
-                returnKeyType="go"
-                textContentType="password"
-                enablesReturnKeyAutomatically
-                inputRef={(r) => {
-                  this.passwordInput = r;
-                }}
-              />
-            </View>
-          </PaddedView>
-        </KeyboardAwareScrollView>
-        <BottomSafeAreaView>
-          <PaddedView vertical={false}>
-            <Button
-              onPress={handleSubmit}
-              title="Register"
-              disabled={!isValid}
-              loading={isSubmitting}
-            />
-          </PaddedView>
-        </BottomSafeAreaView>
-      </FlexedView>
-    );
-  }
-}
-
-export default Form;
diff --git a/apolloschurchapp/src/auth/signup/Form.stories.js b/apolloschurchapp/src/auth/signup/Form.stories.js
deleted file mode 100644
index da0e764..0000000
--- a/apolloschurchapp/src/auth/signup/Form.stories.js
+++ /dev/null
@@ -1,12 +0,0 @@
-import React from 'react';
-import { storiesOf } from '@storybook/react-native';
-
-import LoginForm from './Form';
-
-storiesOf('Auth/SignupForm', module).add('Example', () => (
-  <LoginForm
-    values={{ email: '', password: '' }}
-    touched={{ email: false, password: false }}
-    errors={{ email: null, password: null }}
-  />
-));
diff --git a/apolloschurchapp/src/auth/signup/Form.tests.js b/apolloschurchapp/src/auth/signup/Form.tests.js
deleted file mode 100644
index 5d9601f..0000000
--- a/apolloschurchapp/src/auth/signup/Form.tests.js
+++ /dev/null
@@ -1,21 +0,0 @@
-import React from 'react';
-import renderer from 'react-test-renderer';
-
-import Providers from 'apolloschurchapp/src/Providers';
-
-import LoginForm from './Form';
-
-describe('The SignupForm component', () => {
-  it('should render', () => {
-    const tree = renderer.create(
-      <Providers>
-        <LoginForm
-          values={{ email: '', password: '' }}
-          touched={{ email: false, password: false }}
-          errors={{ email: null, password: null }}
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/auth/signup/index.js b/apolloschurchapp/src/auth/signup/index.js
deleted file mode 100644
index 81e64a7..0000000
--- a/apolloschurchapp/src/auth/signup/index.js
+++ /dev/null
@@ -1,67 +0,0 @@
-import React from 'react';
-import { Mutation } from 'react-apollo';
-import { Formik } from 'formik';
-import * as Yup from 'yup';
-import PropTypes from 'prop-types';
-
-import { track, events } from 'apolloschurchapp/src/analytics';
-
-import handleLogin from '../handleLogin';
-import { client } from '../../client'; //eslint-disable-line
-import registerPersonMutation from './registerPerson';
-import SignupForm from './Form';
-
-const Signup = ({ onSignup }) => (
-  <Mutation
-    mutation={registerPersonMutation}
-    update={(cache, { data: { registerPerson } }) => {
-      client.mutate({
-        mutation: handleLogin,
-        variables: {
-          authToken: registerPerson.token,
-        },
-      });
-    }}
-  >
-    {(authenticate) => (
-      <Formik
-        validationSchema={Yup.object().shape({
-          email: Yup.string()
-            .email('Invalid email address')
-            .required('Email is required!'),
-          password: Yup.string().required('Password is required!'),
-        })}
-        onSubmit={async (variables, { setSubmitting, setFieldError }) => {
-          try {
-            await authenticate({ variables });
-            track({ eventName: events.UserSignup }); // TODO: Move signup logic to store/index and move tracking logic there also.
-            if (onSignup) onSignup();
-          } catch ({ graphQLErrors = [], ...e }) {
-            if (
-              graphQLErrors.length &&
-              graphQLErrors.find(({ message }) =>
-                message.includes('User already exists')
-              )
-            ) {
-              setFieldError('email', 'There is already a user with this email');
-            } else {
-              setFieldError(
-                'password',
-                'Unknown error. Please try again later.'
-              );
-            }
-          }
-          setSubmitting(false);
-        }}
-      >
-        {(formikBag) => <SignupForm {...formikBag} />}
-      </Formik>
-    )}
-  </Mutation>
-);
-
-Signup.propTypes = {
-  onSignup: PropTypes.func,
-};
-
-export default Signup;
diff --git a/apolloschurchapp/src/auth/signup/registerPerson.js b/apolloschurchapp/src/auth/signup/registerPerson.js
deleted file mode 100644
index 77fc892..0000000
--- a/apolloschurchapp/src/auth/signup/registerPerson.js
+++ /dev/null
@@ -1,9 +0,0 @@
-import gql from 'graphql-tag';
-
-export default gql`
-  mutation registerPerson($email: String!, $password: String!) {
-    registerPerson(email: $email, password: $password) {
-      token
-    }
-  }
-`;
diff --git a/apolloschurchapp/src/client/__mocks__/index.js b/apolloschurchapp/src/client/__mocks__/index.js
index 7d3347c..cf59c84 100644
--- a/apolloschurchapp/src/client/__mocks__/index.js
+++ b/apolloschurchapp/src/client/__mocks__/index.js
@@ -1,29 +1,40 @@
+import React from 'react';
 import { MockedProvider } from 'react-apollo/test-utils';
 import ApolloClient from 'apollo-client';
 import { makeExecutableSchema, addMockFunctionsToSchema } from 'graphql-tools';
 import { SchemaLink } from 'apollo-link-schema';
-import { ApolloLink } from 'apollo-link';
-import { testSchema as typeDefs } from 'apollos-church-api';
+import { importSchema } from 'graphql-import';
 
 import cache from '../cache';
-import clientStateLink from '../clientStateLink';
+import { resolvers, schema, defaults } from '../../store';
 
-export default MockedProvider;
+// eslint-disable-next-line
+export default (props) => {
+  let finalProps = props;
+  // eslint-disable-next-line
+  if (!props.mocks) {
+    // eslint-disable-next-line
+    finalProps = { ...props, resolvers };
+  }
+  return <MockedProvider cache={cache} {...finalProps} />;
+};
 
-const schema = makeExecutableSchema({
-  typeDefs,
+const serverSchema = makeExecutableSchema({
+  typeDefs: importSchema(
+    `${process.cwd()}/../apollos-church-api/local.graphql`
+  ),
   resolverValidationOptions: {
     requireResolversForResolveType: false,
   },
 });
-addMockFunctionsToSchema({ schema });
+addMockFunctionsToSchema({ schema: serverSchema });
 
-let link = new SchemaLink({ schema });
-if (clientStateLink) {
-  link = ApolloLink.from([clientStateLink, link]);
-}
+const link = new SchemaLink({ schema: serverSchema });
+cache.writeData({ data: defaults });
 
 export const client = new ApolloClient({
-  cache,
   link,
+  cache,
+  resolvers,
+  typeDefs: schema,
 });
diff --git a/apolloschurchapp/src/client/authLink.js b/apolloschurchapp/src/client/authLink.js
deleted file mode 100644
index 407934b..0000000
--- a/apolloschurchapp/src/client/authLink.js
+++ /dev/null
@@ -1,35 +0,0 @@
-import { setContext } from 'apollo-link-context';
-import gql from 'graphql-tag';
-
-import { ensureCacheHydration } from './cache';
-
-import { client } from './'; // eslint-disable-line
-
-export default setContext(async (request, { headers }) => {
-  try {
-    await ensureCacheHydration;
-
-    const {
-      data: { authToken },
-    } = await client.query({
-      query: gql`
-        query {
-          authToken @client
-        }
-      `,
-    });
-    if (!authToken) return {};
-
-    // return the headers to the context so httpLink can read them
-    return {
-      headers: {
-        ...headers,
-        authorization: authToken,
-      },
-    };
-  } catch (err) {
-    // eslint-disable-next-line
-    console.warn('Authorization Failed', err);
-    return {};
-  }
-});
diff --git a/apolloschurchapp/src/client/cache.js b/apolloschurchapp/src/client/cache.js
index 3979a8a..862639f 100644
--- a/apolloschurchapp/src/client/cache.js
+++ b/apolloschurchapp/src/client/cache.js
@@ -2,16 +2,28 @@ import {
   InMemoryCache,
   IntrospectionFragmentMatcher,
 } from 'apollo-cache-inmemory';
-import { AsyncStorage } from 'react-native';
-import DeviceInfo from 'react-native-device-info';
+import AsyncStorage from '@react-native-community/async-storage';
 import { CachePersistor } from 'apollo-cache-persist';
-
+import gql from 'graphql-tag';
+import Config from 'react-native-config';
 import introspectionQueryResultData from './fragmentTypes.json';
 
-// We reset our apollo cache on every build:
-// TODO: this could be optimized by only reseting cache when our schema or client-side schema changes,
-// however there is risk for missing changes and breaking things in production, so this is safer.
-const SCHEMA_VERSION = `${DeviceInfo.getVersion()}${DeviceInfo.getBuildNumber()}`; // Must be a string.
+export const CACHE_LOADED = gql`
+  query {
+    cacheLoaded @client
+  }
+`;
+
+export const MARK_CACHE_LOADED = gql`
+  mutation markCacheLoaded {
+    cacheMarkLoaded @client
+  }
+`;
+
+// We reset our apollo cache based an env value and static number.
+// In the future, we should also look at resetting the app when an error occurs related to Apollo.
+// You can also increment this number to force a manual reset of the cache.
+const SCHEMA_VERSION = `${Config.SCHEMA_VERSION}-1`; // Must be a string.
 const SCHEMA_VERSION_KEY = 'apollo-schema-version';
 
 const nodeCacheRedirect = (_, { id }, { getCacheKey }) =>
@@ -33,13 +45,26 @@ const persistor = new CachePersistor({
   storage: AsyncStorage,
 });
 
+// 1. If we are on the same schema version, restore the cache.
+// 2. If that fails, purge the cache and update the stored version so we don't try and restore agian
+// 3. If we are on a new schema version, purge the cache.
+// 4. If purging or setting AsyncStorage keys fails (or anything else) we capture the error and log it.
+
 export const ensureCacheHydration = (async () => {
+  // We wrap everything in try/catch because crashing on a cache restore is bad
+  // 😬
   try {
     const currentVersion = await AsyncStorage.getItem(SCHEMA_VERSION_KEY);
     if (currentVersion === SCHEMA_VERSION) {
       // If the current version matches the latest version,
       // we're good to go and can restore the cache.
-      await persistor.restore();
+      try {
+        await persistor.restore();
+      } catch (restoreError) {
+        // If the restore fails, we want to do our best to purge the cache.
+        await persistor.purge();
+        console.error('Error restoring cache, purging the cache', restoreError);
+      }
     } else {
       // Otherwise, we'll want to purge the outdated persisted cache
       // and mark ourselves as having updated to the latest version.
@@ -47,7 +72,7 @@ export const ensureCacheHydration = (async () => {
       await AsyncStorage.setItem(SCHEMA_VERSION_KEY, SCHEMA_VERSION);
     }
   } catch (error) {
-    console.error('Error restoring Apollo cache', error);
+    console.error('Error restoring or purging Apollo cache', error);
   }
 })();
 
diff --git a/apolloschurchapp/src/client/clientStateLink.js b/apolloschurchapp/src/client/clientStateLink.js
deleted file mode 100644
index 0c45da8..0000000
--- a/apolloschurchapp/src/client/clientStateLink.js
+++ /dev/null
@@ -1,11 +0,0 @@
-import { withClientState } from 'apollo-link-state';
-
-import { resolvers, defaults, schema } from '../store';
-import cache from './cache';
-
-export default withClientState({
-  resolvers,
-  defaults,
-  cache,
-  typeDefs: schema,
-});
diff --git a/apolloschurchapp/src/client/fragmentTypes.json b/apolloschurchapp/src/client/fragmentTypes.json
index 8d96fc0..9dcddbd 100644
--- a/apolloschurchapp/src/client/fragmentTypes.json
+++ b/apolloschurchapp/src/client/fragmentTypes.json
@@ -1 +1 @@
-{"__schema":{"types":[{"kind":"INTERFACE","name":"Node","possibleTypes":[{"name":"ContentChannel"},{"name":"Person"},{"name":"Interaction"},{"name":"UniversalContentItem"},{"name":"DevotionalContentItem"},{"name":"MediaContentItem"},{"name":"ContentSeriesContentItem"}]},{"kind":"INTERFACE","name":"ContentItem","possibleTypes":[{"name":"UniversalContentItem"},{"name":"DevotionalContentItem"},{"name":"MediaContentItem"},{"name":"ContentSeriesContentItem"}]},{"kind":"INTERFACE","name":"Media","possibleTypes":[{"name":"ImageMedia"},{"name":"VideoMedia"},{"name":"AudioMedia"}]},{"kind":"INTERFACE","name":"MediaSource","possibleTypes":[{"name":"ImageMediaSource"},{"name":"VideoMediaSource"},{"name":"AudioMediaSource"}]},{"kind":"INTERFACE","name":"Sharable","possibleTypes":[{"name":"SharableContentItem"}]}]}}
\ No newline at end of file
+{"__schema":{"types":[{"kind":"INTERFACE","name":"Node","possibleTypes":[{"name":"ContentChannel"},{"name":"Person"},{"name":"Campus"},{"name":"Event"},{"name":"Group"},{"name":"Scripture"},{"name":"Pass"},{"name":"UniversalContentItem"},{"name":"DevotionalContentItem"},{"name":"MediaContentItem"},{"name":"ContentSeriesContentItem"},{"name":"WeekendContentItem"},{"name":"ActionListFeature"},{"name":"TextFeature"},{"name":"ScriptureFeature"}]},{"kind":"INTERFACE","name":"ContentItem","possibleTypes":[{"name":"UniversalContentItem"},{"name":"DevotionalContentItem"},{"name":"MediaContentItem"},{"name":"ContentSeriesContentItem"},{"name":"WeekendContentItem"}]},{"kind":"INTERFACE","name":"Media","possibleTypes":[{"name":"ImageMedia"},{"name":"VideoMedia"},{"name":"AudioMedia"}]},{"kind":"INTERFACE","name":"MediaSource","possibleTypes":[{"name":"ImageMediaSource"},{"name":"VideoMediaSource"},{"name":"AudioMediaSource"}]},{"kind":"INTERFACE","name":"Sharable","possibleTypes":[{"name":"SharableContentItem"},{"name":"SharableFeature"}]},{"kind":"INTERFACE","name":"Feature","possibleTypes":[{"name":"ActionListFeature"},{"name":"TextFeature"},{"name":"ScriptureFeature"}]}]}}
\ No newline at end of file
diff --git a/apolloschurchapp/src/client/httpLink.js b/apolloschurchapp/src/client/httpLink.js
index 157fb8e..c8974f8 100644
--- a/apolloschurchapp/src/client/httpLink.js
+++ b/apolloschurchapp/src/client/httpLink.js
@@ -1,11 +1,24 @@
 import { Platform } from 'react-native';
 import { createUploadLink } from 'apollo-upload-client';
-import { APP_DATA_URL, ANDROID_URL } from 'react-native-dotenv';
+import Config from 'react-native-config';
+import { split } from 'apollo-link';
+import { createHttpLink } from 'apollo-link-http';
+import { getMainDefinition } from 'apollo-utilities';
 
-let uri = APP_DATA_URL;
-const androidUri = ANDROID_URL || '10.0.2.2';
+let uri = Config.APP_DATA_URL;
+const androidUri = Config.ANDROID_URL || '10.0.2.2';
 
 // Android's emulator requires localhost network traffic to go through 10.0.2.2
 if (Platform.OS === 'android') uri = uri.replace('localhost', androidUri);
 
-export default createUploadLink({ uri });
+export default split(
+  ({ query }) => {
+    const { kind, operation } = getMainDefinition(query);
+    return kind === 'OperationDefinition' && operation === 'mutation';
+  },
+  createUploadLink({ uri }),
+  createHttpLink({
+    uri,
+    useGETForQueries: true,
+  })
+);
diff --git a/apolloschurchapp/src/client/index.js b/apolloschurchapp/src/client/index.js
index 76cff4a..fb7ca59 100644
--- a/apolloschurchapp/src/client/index.js
+++ b/apolloschurchapp/src/client/index.js
@@ -3,22 +3,43 @@ import PropTypes from 'prop-types';
 import { ApolloProvider } from 'react-apollo';
 import { ApolloClient } from 'apollo-client';
 import { ApolloLink } from 'apollo-link';
-import SplashScreen from 'react-native-splash-screen';
 
+import { authLink, buildErrorLink } from '@apollosproject/ui-auth';
+import { resolvers, schema, defaults } from '../store';
+import NavigationService from '../NavigationService';
 import httpLink from './httpLink';
-import clientStateLink from './clientStateLink';
-import authLink from './authLink'; // eslint-disable-line
-import cache, { ensureCacheHydration } from './cache';
+import cache, { ensureCacheHydration, MARK_CACHE_LOADED } from './cache';
 
-const link = clientStateLink.concat(ApolloLink.from([authLink, httpLink]));
+const goToAuth = () => NavigationService.navigate('Auth');
+const wipeData = () => cache.writeData({ data: defaults });
+
+let resetStore;
+const onAuthError = () => {
+  resetStore();
+  goToAuth();
+};
+
+const errorLink = buildErrorLink(onAuthError);
+
+const link = ApolloLink.from([authLink, errorLink, httpLink]);
 
 export const client = new ApolloClient({
   link,
   cache,
-  queryDeduplication: true,
+  queryDeduplication: false,
   shouldBatch: true,
+  resolvers,
+  typeDefs: schema,
 });
 
+// Hack to give auth link access to method on client;
+// eslint-disable-next-line prefer-destructuring
+resetStore = client.resetStore;
+
+wipeData();
+// Ensure that media player still works after logout.
+client.onResetStore(() => wipeData());
+
 class ClientProvider extends PureComponent {
   static propTypes = {
     client: PropTypes.shape({
@@ -36,7 +57,7 @@ class ClientProvider extends PureComponent {
     } catch (e) {
       throw e;
     } finally {
-      if (SplashScreen && SplashScreen.hide) SplashScreen.hide();
+      client.mutate({ mutation: MARK_CACHE_LOADED });
     }
   }
 
diff --git a/apolloschurchapp/src/config.js b/apolloschurchapp/src/config.js
deleted file mode 100644
index 248183d..0000000
--- a/apolloschurchapp/src/config.js
+++ /dev/null
@@ -1,6 +0,0 @@
-/* eslint-disable import/prefer-default-export */
-import { ONE_SIGNAL_KEY as oneSignalKey } from 'react-native-dotenv';
-
-const ONE_SIGNAL_KEY = oneSignalKey;
-
-export { ONE_SIGNAL_KEY };
diff --git a/apolloschurchapp/src/content-feed/content-feed.tests.js b/apolloschurchapp/src/content-feed/content-feed.tests.js
index 544d818..21b8c9c 100644
--- a/apolloschurchapp/src/content-feed/content-feed.tests.js
+++ b/apolloschurchapp/src/content-feed/content-feed.tests.js
@@ -1,24 +1,32 @@
 import React from 'react';
-import renderer from 'react-test-renderer';
 
 import Providers from 'apolloschurchapp/src/Providers';
 
-import getContentFeed from './getContentFeed';
+import { renderWithApolloData } from '../utils/testUtils';
+import GET_CONTENT_FEED from './getContentFeed';
 
 import ContentFeed from './index';
 
 describe('content feed query component', () => {
-  it('renders a feedview after successful query', () => {
+  it('renders a feedview after successful query', async () => {
     const mock = {
       request: {
-        query: getContentFeed,
+        query: GET_CONTENT_FEED,
+        variables: { itemId: 'ContentChannel:123' },
       },
       result: {
         data: {
           node: {
+            __typename: 'ContentChannel',
             childContentItemsConnection: {
+              pageInfo: {
+                endCursor: 'blablalba',
+                __typename: 'PaginationInfo',
+              },
+              __typename: 'ContentItemsConnection',
               edges: [
                 {
+                  __typename: 'ContentItemsConnectionEdge',
                   node: {
                     __typename: 'UniversalContentItem',
                     id: 'UniversalContentItem:d57994350b9d213866b24dea3a97433d',
@@ -27,11 +35,19 @@ describe('content feed query component', () => {
                       id: 'ContentChannel:4f68015ba18662a7409d1219a4ce013e',
                       name: 'Editorial',
                       iconName: 'text',
+                      __typename: 'ContentChannel',
                     },
                     title: 'Mea Animal Aperiam Ornatus Eu',
+                    summary: 'Bla bla bla',
+                    theme: null,
+                    isLiked: false,
+                    likedCount: 0,
+                    videos: [],
+                    audios: [],
                   },
                 },
                 {
+                  __typename: 'ContentItemsConnectionEdge',
                   node: {
                     __typename: 'UniversalContentItem',
                     id: 'UniversalContentItem:b36e55d803443431e96bb4b5068147ec',
@@ -40,8 +56,15 @@ describe('content feed query component', () => {
                       id: 'ContentChannel:4f68015ba18662a7409d1219a4ce013e',
                       name: 'Editorial',
                       iconName: 'text',
+                      __typename: 'ContentChannel',
                     },
                     title: 'Probo Senserit Id Mea, Ut Sed Malis Postea,',
+                    summary: 'Bla bla bla',
+                    theme: null,
+                    isLiked: false,
+                    likedCount: 0,
+                    videos: [],
+                    audios: [],
                   },
                 },
               ],
@@ -52,10 +75,10 @@ describe('content feed query component', () => {
     };
 
     const navigation = {
-      getParam: jest.fn(),
+      getParam: () => 'ContentChannel:123',
       navigate: jest.fn(),
     };
-    const tree = renderer.create(
+    const tree = await renderWithApolloData(
       <Providers mocks={[mock]}>
         <ContentFeed navigation={navigation} />
       </Providers>
diff --git a/apolloschurchapp/src/content-feed/getContentFeed.js b/apolloschurchapp/src/content-feed/getContentFeed.js
index 2e47d19..40758cb 100644
--- a/apolloschurchapp/src/content-feed/getContentFeed.js
+++ b/apolloschurchapp/src/content-feed/getContentFeed.js
@@ -1,13 +1,16 @@
 import gql from 'graphql-tag';
 
-import { largeCardFragment } from 'apolloschurchapp/src/ui/ContentCardConnected';
-import { contentItemFragment } from '../content-single/getContentItem';
+import { LARGE_CARD_FRAGMENT } from 'apolloschurchapp/src/ui/ContentCardConnected';
+import { CONTENT_ITEM_FRAGMENT } from '../content-single/getContentItem';
 
 export default gql`
-  query getContentFeed($itemId: ID!) {
+  query getContentFeed($itemId: ID!, $after: String, $first: Int) {
     node(id: $itemId) {
       ... on ContentChannel {
-        childContentItemsConnection {
+        childContentItemsConnection(after: $after, first: $first) {
+          pageInfo {
+            endCursor
+          }
           edges {
             node {
               ...contentItemFragment
@@ -18,6 +21,6 @@ export default gql`
       }
     }
   }
-  ${contentItemFragment}
-  ${largeCardFragment}
+  ${CONTENT_ITEM_FRAGMENT}
+  ${LARGE_CARD_FRAGMENT}
 `;
diff --git a/apolloschurchapp/src/content-feed/index.js b/apolloschurchapp/src/content-feed/index.js
index 8662d8a..8443086 100644
--- a/apolloschurchapp/src/content-feed/index.js
+++ b/apolloschurchapp/src/content-feed/index.js
@@ -6,8 +6,9 @@ import PropTypes from 'prop-types';
 import { BackgroundView, FeedView } from '@apollosproject/ui-kit';
 
 import ContentCardConnected from 'apolloschurchapp/src/ui/ContentCardConnected';
+import fetchMoreResolver from 'apolloschurchapp/src/utils/fetchMoreResolver';
 
-import getContentFeed from './getContentFeed';
+import GET_CONTENT_FEED from './getContentFeed';
 /**
  * This is where the component description lives
  * A FeedView wrapped in a query to pull content data.
@@ -46,11 +47,11 @@ class ContentFeed extends PureComponent {
     return (
       <BackgroundView>
         <Query
-          query={getContentFeed}
+          query={GET_CONTENT_FEED}
           variables={{ itemId }}
           fetchPolicy="cache-and-network"
         >
-          {({ loading, error, data, refetch }) => (
+          {({ loading, error, data, refetch, fetchMore, variables }) => (
             <FeedView
               ListItemComponent={ContentCardConnected}
               content={get(
@@ -58,6 +59,12 @@ class ContentFeed extends PureComponent {
                 'node.childContentItemsConnection.edges',
                 []
               ).map((edge) => edge.node)}
+              fetchMore={fetchMoreResolver({
+                collectionName: 'node.childContentItemsConnection',
+                fetchMore,
+                variables,
+                data,
+              })}
               isLoading={loading}
               error={error}
               refetch={refetch}
diff --git a/apolloschurchapp/src/content-single/ActionContainer/index.js b/apolloschurchapp/src/content-single/ActionContainer/index.js
index 2df4bae..7b64e05 100644
--- a/apolloschurchapp/src/content-single/ActionContainer/index.js
+++ b/apolloschurchapp/src/content-single/ActionContainer/index.js
@@ -1,16 +1,11 @@
 import React from 'react';
 import { Platform, View } from 'react-native';
 import PropTypes from 'prop-types';
-import { Query } from 'react-apollo';
-import { get } from 'lodash';
-
-import Share from 'apolloschurchapp/src/ui/Share';
+import ShareContentButtonConnected from 'apolloschurchapp/src/ui/ShareContentButtonConnected';
 
 import { SideBySideView, styled } from '@apollosproject/ui-kit';
-import LikeButton from 'apolloschurchapp/src/ui/LikeButton';
-import { MediaPlayerSpacer } from 'apolloschurchapp/src/ui/MediaPlayer';
-
-import getShareContent from './getShareContent';
+import LikeContentButtonConnected from 'apolloschurchapp/src/ui/LikeContentButtonConnected';
+import { MediaPlayerSpacer } from '@apollosproject/ui-media-player';
 
 const PositioningView = styled(({ theme }) => ({
   justifyContent: 'space-around',
@@ -27,15 +22,8 @@ const ActionContainer = ({ itemId }) => (
   <Container>
     <MediaPlayerSpacer>
       <PositioningView>
-        <LikeButton itemId={itemId} />
-        <Query query={getShareContent} variables={{ itemId }}>
-          {({ data: { node } = {}, error, loading }) => {
-            const sharing = get(node, 'sharing');
-            return loading || error || !sharing ? null : (
-              <Share content={sharing} />
-            );
-          }}
-        </Query>
+        <LikeContentButtonConnected itemId={itemId} />
+        <ShareContentButtonConnected itemId={itemId} />
       </PositioningView>
     </MediaPlayerSpacer>
   </Container>
diff --git a/apolloschurchapp/src/content-single/ContentSingle.js b/apolloschurchapp/src/content-single/ContentSingle.js
new file mode 100644
index 0000000..817af65
--- /dev/null
+++ b/apolloschurchapp/src/content-single/ContentSingle.js
@@ -0,0 +1,116 @@
+import React, { PureComponent } from 'react';
+import { Query } from 'react-apollo';
+import { get } from 'lodash';
+import PropTypes from 'prop-types';
+
+import { ErrorCard, ThemeMixin } from '@apollosproject/ui-kit';
+
+import { TrackEventWhenLoaded } from '@apollosproject/ui-analytics';
+
+import ActionContainer from './ActionContainer';
+import GET_CONTENT_ITEM from './getContentItem';
+
+import DevotionalContentItem from './DevotionalContentItem';
+import UniversalContentItem from './UniversalContentItem';
+import WeekendContentItem from './WeekendContentItem';
+
+import NavigationHeader from './NavigationHeader';
+
+class ContentSingle extends PureComponent {
+  static propTypes = {
+    navigation: PropTypes.shape({
+      getParam: PropTypes.func,
+      push: PropTypes.func,
+    }),
+  };
+
+  static navigationOptions = {
+    header: NavigationHeader,
+    headerTransparent: true,
+    headerMode: 'float',
+  };
+
+  get itemId() {
+    return this.props.navigation.getParam('itemId', []);
+  }
+
+  get queryVariables() {
+    return { itemId: this.itemId };
+  }
+
+  renderContent = ({ content, loading, error }) => {
+    let { __typename } = content;
+    if (!__typename && this.itemId) {
+      [__typename] = this.itemId.split(':');
+    }
+
+    switch (__typename) {
+      case 'DevotionalContentItem':
+        return (
+          <DevotionalContentItem
+            id={this.itemId}
+            content={content}
+            loading={loading}
+            error={error}
+          />
+        );
+      case 'WeekendContentItem':
+        return (
+          <WeekendContentItem
+            id={this.itemId}
+            content={content}
+            loading={loading}
+            error={error}
+          />
+        );
+      case 'UniversalContentItem':
+      default:
+        return (
+          <UniversalContentItem
+            id={this.itemId}
+            content={content}
+            loading={loading}
+            error={error}
+          />
+        );
+    }
+  };
+
+  renderWithData = ({ loading, error, data }) => {
+    if (error) return <ErrorCard error={error} />;
+
+    const content = data.node || {};
+
+    const { theme = {}, id } = content;
+
+    return (
+      <ThemeMixin
+        mixin={{
+          type: get(theme, 'type', 'light').toLowerCase(),
+          colors: get(theme, 'colors'),
+        }}
+      >
+        <TrackEventWhenLoaded
+          loaded={!!(!loading && content.title)}
+          eventName={'View Contentx'}
+          properties={{
+            title: content.title,
+            itemId: this.itemId,
+          }}
+        />
+        {this.renderContent({ content, loading, error })}
+        <ActionContainer itemId={id} />
+      </ThemeMixin>
+    );
+  };
+
+  render() {
+    return (
+      <Query query={GET_CONTENT_ITEM} variables={this.queryVariables}>
+        {this.renderWithData}
+      </Query>
+    );
+  }
+}
+
+export default ContentSingle;
diff --git a/apolloschurchapp/src/content-single/DevotionalContentItem/ContentTab.js b/apolloschurchapp/src/content-single/DevotionalContentItem/ContentTab.js
index 9a4b521..426feb3 100644
--- a/apolloschurchapp/src/content-single/DevotionalContentItem/ContentTab.js
+++ b/apolloschurchapp/src/content-single/DevotionalContentItem/ContentTab.js
@@ -2,7 +2,7 @@ import React from 'react';
 import { ScrollView } from 'react-native';
 import PropTypes from 'prop-types';
 import { PaddedView, H2, styled } from '@apollosproject/ui-kit';
-import { ScriptureList } from 'apolloschurchapp/src/ui/Scripture';
+import { ScriptureList } from '@apollosproject/ui-scripture';
 import HorizontalContentFeed from '../HorizontalContentFeed';
 import HTMLContent from '../HTMLContent';
 
diff --git a/apolloschurchapp/src/content-single/DevotionalContentItem/Devotional.stories.js b/apolloschurchapp/src/content-single/DevotionalContentItem/Devotional.stories.js
index 109a669..8bf3ffd 100644
--- a/apolloschurchapp/src/content-single/DevotionalContentItem/Devotional.stories.js
+++ b/apolloschurchapp/src/content-single/DevotionalContentItem/Devotional.stories.js
@@ -1,60 +1,62 @@
-import React from 'react';
-import { storiesOf } from '@storybook/react-native';
-
-import Devotional from '.';
-
-const scripture = [
-  {
-    id: '1CO.15.57',
-    reference: '1 Corinthians 15:57',
-    html:
-      '<p class="p"><span data-number="57" class="v">57</span>But thanks be to God, who gives us the victory through our Lord Jesus Christ. </p>',
-  },
-  {
-    id: 'EXO.17.8-EXO.17.15',
-    reference: 'Exodus 17:8-15',
-    html:
-      '<p class="p"><span data-number="8" class="v">8</span>Then Amalek came and fought with Israel in Rephidim. <span data-number="9" class="v">9</span>Moses said to Joshua, “Choose men for us, and go out to fight with Amalek. Tomorrow I will stand on the top of the hill with God’s rod in my hand.” <span data-number="10" class="v">10</span>So Joshua did as Moses had told him, and fought with Amalek; and Moses, Aaron, and Hur went up to the top of the hill. <span data-number="11" class="v">11</span>When Moses held up his hand, Israel prevailed. When he let down his hand, Amalek prevailed. <span data-number="12" class="v">12</span>But Moses’ hands were heavy; so they took a stone, and put it under him, and he sat on it. Aaron and Hur held up his hands, the one on the one side, and the other on the other side. His hands were steady until sunset. <span data-number="13" class="v">13</span>Joshua defeated Amalek and his people with the edge of the sword. <span data-number="14" class="v">14</span>Yahweh said to Moses, “Write this for a memorial in a book, and rehearse it in the ears of Joshua: that I will utterly blot out the memory of Amalek from under the sky.” <span data-number="15" class="v">15</span>Moses built an altar, and called its name “Yahweh our Banner”.</p>',
-  },
-];
-
-const content = {
-  body:
-    '<p>Sometimes God&rsquo;s promises to us involve a fight. We have to fight to keep our focus on Him, fight to move towards the promise we know God has laid on our hearts. We have a real enemy that would love nothing more than to get us sidetracked and doubt God&rsquo;s promises. So we fight saying that we are going to believe God will do what He says He will do, and we keep fighting until we see that promise come to life.</p><p>In Exodus 17:8-15 the nation of Israel, freed from great oppression in Egypt was traveling to the land God promised them. Yet, Israel was fighting, again.&nbsp;<br />&nbsp;<br />As the Israelites were fighting in the valley,&nbsp;Moses was on the hill top lifting his hands in prayer for these great fighters. Israel fought hard, and with the prayers of Moses and the help of his companions, Aaron and Hur, the Amalekites were defeated. Moses knew that it was solely because of the Lord&rsquo;s hand of protection and blessing on the Israelites that they won the battle. &ldquo;Moses built an altar and called it The Lord is my banner&rdquo; (Exodus 17:15).</p><p>In battle opposing nations would fly their own flag on a pole at each of their respective front lines. This was to give their soldiers a feeling of hope and a focal point. This is what God is to us: a banner of encouragement to give us hope and a focal point.</p><blockquote><p>The Lord protects us, covers us with love, and&nbsp;blesses us continually.</p></blockquote><p>The Lord is our banner. He protects us; He covers us with love; He blesses us continually. The Lord gives us hope and a place to focus during the tough fights when the enemy is trying to make us doubt God&rsquo;s promises.&nbsp;</p><p>When was the last time you sat and thanked Jesus for all the ways he is a banner in your life?&nbsp;</p><p>Reflect:</p><ul><li>What is one way the Lord has been your banner?</li><li>How can you focus more today on the Lord and all the things He does for you throughout the day?</li></ul>',
-  route: { jumpTo: () => {} },
-  title: 'God is Our Banner',
-};
-
-const renderItem = () => {};
-
-const loadingStateObject = {
-  node: {
-    id: 'fakeId0',
-    title: '',
-    isLoading: true,
-  },
-};
-
-const stories = storiesOf('Devotional', module);
-
-stories.add('Example', () => (
-  <Devotional
-    body={content.body}
-    title={content.title}
-    isLoading={false}
-    scripture={scripture}
-    renderItem={renderItem}
-    loadingStateObject={loadingStateObject}
-  />
-));
-
-stories.add('isLoading', () => (
-  <Devotional
-    body={content.body}
-    title={content.title}
-    isLoading
-    scripture={scripture}
-    renderItem={renderItem}
-    loadingStateObject={loadingStateObject}
-  />
-));
+// TODO: fix story
+
+// import React from 'react';
+// import { storiesOf } from '@apollosproject/ui-storybook';
+
+// import Devotional from '.';
+
+// const scripture = [
+//   {
+//     id: '1CO.15.57',
+//     reference: '1 Corinthians 15:57',
+//     html:
+//       '<p class="p"><span data-number="57" class="v">57</span>But thanks be to God, who gives us the victory through our Lord Jesus Christ. </p>',
+//   },
+//   {
+//     id: 'EXO.17.8-EXO.17.15',
+//     reference: 'Exodus 17:8-15',
+//     html:
+//       '<p class="p"><span data-number="8" class="v">8</span>Then Amalek came and fought with Israel in Rephidim. <span data-number="9" class="v">9</span>Moses said to Joshua, “Choose men for us, and go out to fight with Amalek. Tomorrow I will stand on the top of the hill with God’s rod in my hand.” <span data-number="10" class="v">10</span>So Joshua did as Moses had told him, and fought with Amalek; and Moses, Aaron, and Hur went up to the top of the hill. <span data-number="11" class="v">11</span>When Moses held up his hand, Israel prevailed. When he let down his hand, Amalek prevailed. <span data-number="12" class="v">12</span>But Moses’ hands were heavy; so they took a stone, and put it under him, and he sat on it. Aaron and Hur held up his hands, the one on the one side, and the other on the other side. His hands were steady until sunset. <span data-number="13" class="v">13</span>Joshua defeated Amalek and his people with the edge of the sword. <span data-number="14" class="v">14</span>Yahweh said to Moses, “Write this for a memorial in a book, and rehearse it in the ears of Joshua: that I will utterly blot out the memory of Amalek from under the sky.” <span data-number="15" class="v">15</span>Moses built an altar, and called its name “Yahweh our Banner”.</p>',
+//   },
+// ];
+
+// const content = {
+//   body:
+//     '<p>Sometimes God&rsquo;s promises to us involve a fight. We have to fight to keep our focus on Him, fight to move towards the promise we know God has laid on our hearts. We have a real enemy that would love nothing more than to get us sidetracked and doubt God&rsquo;s promises. So we fight saying that we are going to believe God will do what He says He will do, and we keep fighting until we see that promise come to life.</p><p>In Exodus 17:8-15 the nation of Israel, freed from great oppression in Egypt was traveling to the land God promised them. Yet, Israel was fighting, again.&nbsp;<br />&nbsp;<br />As the Israelites were fighting in the valley,&nbsp;Moses was on the hill top lifting his hands in prayer for these great fighters. Israel fought hard, and with the prayers of Moses and the help of his companions, Aaron and Hur, the Amalekites were defeated. Moses knew that it was solely because of the Lord&rsquo;s hand of protection and blessing on the Israelites that they won the battle. &ldquo;Moses built an altar and called it The Lord is my banner&rdquo; (Exodus 17:15).</p><p>In battle opposing nations would fly their own flag on a pole at each of their respective front lines. This was to give their soldiers a feeling of hope and a focal point. This is what God is to us: a banner of encouragement to give us hope and a focal point.</p><blockquote><p>The Lord protects us, covers us with love, and&nbsp;blesses us continually.</p></blockquote><p>The Lord is our banner. He protects us; He covers us with love; He blesses us continually. The Lord gives us hope and a place to focus during the tough fights when the enemy is trying to make us doubt God&rsquo;s promises.&nbsp;</p><p>When was the last time you sat and thanked Jesus for all the ways he is a banner in your life?&nbsp;</p><p>Reflect:</p><ul><li>What is one way the Lord has been your banner?</li><li>How can you focus more today on the Lord and all the things He does for you throughout the day?</li></ul>',
+//   route: { jumpTo: () => {} },
+//   title: 'God is Our Banner',
+// };
+
+// const renderItem = () => {};
+
+// const loadingStateObject = {
+//   node: {
+//     id: 'fakeId0',
+//     title: '',
+//     isLoading: true,
+//   },
+// };
+
+// const stories = storiesOf('Devotional', module);
+
+// stories.add('Example', () => (
+//   <Devotional
+//     body={content.body}
+//     title={content.title}
+//     isLoading={false}
+//     scripture={scripture}
+//     renderItem={renderItem}
+//     loadingStateObject={loadingStateObject}
+//   />
+// ));
+
+// stories.add('isLoading', () => (
+//   <Devotional
+//     body={content.body}
+//     title={content.title}
+//     isLoading
+//     scripture={scripture}
+//     renderItem={renderItem}
+//     loadingStateObject={loadingStateObject}
+//   />
+// ));
diff --git a/apolloschurchapp/src/content-single/DevotionalContentItem/Devotional.tests.js b/apolloschurchapp/src/content-single/DevotionalContentItem/Devotional.tests.js
index 59ed7e1..5bbb257 100644
--- a/apolloschurchapp/src/content-single/DevotionalContentItem/Devotional.tests.js
+++ b/apolloschurchapp/src/content-single/DevotionalContentItem/Devotional.tests.js
@@ -1,9 +1,9 @@
 import React from 'react';
 import renderer from 'react-test-renderer';
-import wait from 'waait';
 import Providers from 'apolloschurchapp/src/Providers';
-import getContentItemContent from '../HTMLContent/getContentItemContent';
-import getScripture from './getScripture';
+import { renderWithApolloData } from 'apolloschurchapp/src/utils/testUtils';
+import GET_CONTENT_ITEM_CONTENT from '../HTMLContent/getContentItemContent';
+import GET_SCRIPTURE from './getScripture';
 import Devotional from '.';
 
 const content = {
@@ -32,7 +32,7 @@ const scriptures = [
 
 const scriptureMock = {
   request: {
-    query: getScripture,
+    query: GET_SCRIPTURE,
     variables: { itemId: '1' },
   },
   result: {
@@ -44,7 +44,7 @@ const scriptureMock = {
 
 const contentItemHTMLMock = {
   request: {
-    query: getContentItemContent,
+    query: GET_CONTENT_ITEM_CONTENT,
     variables: { contentId: '1' },
   },
   result: {
@@ -66,7 +66,7 @@ const navigation = {
 
 describe('the Devotional component', () => {
   it('renders a devotional', async () => {
-    const tree = renderer.create(
+    const tree = await renderWithApolloData(
       <Providers mocks={mocks}>
         <Devotional
           id="1"
@@ -76,25 +76,27 @@ describe('the Devotional component', () => {
         />
       </Providers>
     );
-    await wait(0); // wait for response
     expect(tree).toMatchSnapshot();
   });
   it('renders even with empty scripture array', async () => {
-    const tree = renderer.create(
+    const tree = await renderWithApolloData(
       <Providers mocks={mocks}>
-        <Devotional id="1" content={content} loading navigation={navigation} />
+        <Devotional
+          id="1"
+          content={content}
+          loading={false}
+          navigation={navigation}
+        />
       </Providers>
     );
-    await wait(0); // wait for response
     expect(tree).toMatchSnapshot();
   });
-  it('renders a loading state', async () => {
+  it('renders a loading state of null', async () => {
     const tree = renderer.create(
       <Providers mocks={mocks}>
         <Devotional id="1" content={content} loading navigation={navigation} />
       </Providers>
     );
-    await wait(0); // wait for response
     expect(tree).toMatchSnapshot();
   });
 });
diff --git a/apolloschurchapp/src/content-single/DevotionalContentItem/ScriptureTab.js b/apolloschurchapp/src/content-single/DevotionalContentItem/ScriptureTab.js
index 9458010..79ef066 100644
--- a/apolloschurchapp/src/content-single/DevotionalContentItem/ScriptureTab.js
+++ b/apolloschurchapp/src/content-single/DevotionalContentItem/ScriptureTab.js
@@ -2,7 +2,7 @@ import React from 'react';
 import { ScrollView } from 'react-native';
 import PropTypes from 'prop-types';
 import { PaddedView } from '@apollosproject/ui-kit';
-import ScriptureItem from 'apolloschurchapp/src/ui/Scripture';
+import ScriptureItem from '@apollosproject/ui-scripture';
 import HorizontalContentFeed from '../HorizontalContentFeed';
 
 /**
diff --git a/apolloschurchapp/src/content-single/DevotionalContentItem/index.js b/apolloschurchapp/src/content-single/DevotionalContentItem/index.js
index ad6835f..07b4938 100644
--- a/apolloschurchapp/src/content-single/DevotionalContentItem/index.js
+++ b/apolloschurchapp/src/content-single/DevotionalContentItem/index.js
@@ -1,6 +1,6 @@
 import React, { PureComponent } from 'react';
-import { SafeAreaView } from 'react-native';
 import PropTypes from 'prop-types';
+import { SafeAreaView } from 'react-navigation';
 import { Query } from 'react-apollo';
 
 import {
@@ -13,7 +13,7 @@ import {
 import ContentTab from './ContentTab';
 import ScriptureTab from './ScriptureTab';
 
-import getScripture from './getScripture';
+import GET_SCRIPTURE from './getScripture';
 
 const FlexedSafeAreaView = styled({ flex: 1 })(SafeAreaView);
 
@@ -40,10 +40,17 @@ class DevotionalContentItem extends PureComponent {
    * Returns: an array of scripture references.
    */
   getScriptureReferences = (scripture) => {
-    if (scripture && scripture.length) {
-      return scripture.map((ref) => ref.reference);
+    let arrayOfRefrences = null;
+
+    if (scripture) {
+      arrayOfRefrences = scripture.map(
+        (ref) =>
+          // only add refs to the array if they exist
+          ref.reference || ''
+      );
     }
-    return null;
+
+    return arrayOfRefrences;
   };
 
   /**
@@ -79,7 +86,13 @@ class DevotionalContentItem extends PureComponent {
     loading,
   }) => {
     if (error) return <ErrorCard error={error} />;
-    const hasScripture = loading || scriptures.length;
+
+    // only include scriptures where the references are not null
+    const validScriptures = scriptures
+      ? scriptures.filter((scripture) => scripture.reference != null)
+      : [];
+
+    const hasScripture = loading || validScriptures.length;
     const tabRoutes = [{ title: 'Devotional', key: 'content' }];
     if (hasScripture) tabRoutes.push({ title: 'Scripture', key: 'scripture' });
     return (
@@ -96,8 +109,8 @@ class DevotionalContentItem extends PureComponent {
   render() {
     return (
       <BackgroundView>
-        <FlexedSafeAreaView>
-          <Query query={getScripture} variables={{ itemId: this.props.id }}>
+        <FlexedSafeAreaView forceInset={{ top: 'always' }}>
+          <Query query={GET_SCRIPTURE} variables={{ itemId: this.props.id }}>
             {this.renderTabs}
           </Query>
         </FlexedSafeAreaView>
diff --git a/apolloschurchapp/src/content-single/Features/ScriptureFeature.js b/apolloschurchapp/src/content-single/Features/ScriptureFeature.js
new file mode 100644
index 0000000..dc08881
--- /dev/null
+++ b/apolloschurchapp/src/content-single/Features/ScriptureFeature.js
@@ -0,0 +1,60 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+
+import { ActionCard } from '@apollosproject/ui-kit';
+import { ScriptureItem } from '@apollosproject/ui-scripture';
+import ShareContentButtonConnected from 'apolloschurchapp/src/ui/ShareContentButtonConnected';
+
+const ScriptureFeature = ({
+  scriptures,
+  sharing: { message } = {},
+  isLoading,
+  contentId,
+}) => (
+  <ActionCard
+    icon={'text'}
+    action={
+      <ShareContentButtonConnected message={message} itemId={contentId} />
+    }
+  >
+    {scriptures.map(({ copyright, reference, html, id }) => (
+      <ScriptureItem
+        key={id}
+        reference={reference}
+        html={html}
+        isLoading={isLoading}
+        copyright={copyright}
+      />
+    ))}
+  </ActionCard>
+);
+
+ScriptureFeature.propTypes = {
+  isLoading: PropTypes.bool.isRequired,
+  scriptures: PropTypes.arrayOf(
+    PropTypes.shape({
+      html: PropTypes.string.isRequired,
+      reference: PropTypes.string.isRequired,
+      id: PropTypes.string.isRequired,
+      copyright: PropTypes.string,
+    })
+  ),
+  sharing: PropTypes.shape({ message: PropTypes.string }),
+  contentId: PropTypes.string.isRequired,
+};
+
+export const SCRIPTURE_FEATURE_FRAGMENT = `
+fragment ScriptureFeatureFragment on ScriptureFeature {
+  sharing {
+    message
+  }
+  scriptures {
+    id
+    html
+    reference
+    copyright
+  }
+}
+`;
+
+export default ScriptureFeature;
diff --git a/apolloschurchapp/src/content-single/Features/TextFeature.js b/apolloschurchapp/src/content-single/Features/TextFeature.js
new file mode 100644
index 0000000..b4bb2a6
--- /dev/null
+++ b/apolloschurchapp/src/content-single/Features/TextFeature.js
@@ -0,0 +1,33 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+
+import { ActionCard, BodyText } from '@apollosproject/ui-kit';
+import ShareContentButtonConnected from 'apolloschurchapp/src/ui/ShareContentButtonConnected';
+
+const TextFeature = ({ body, sharing: { message } = {}, contentId }) => (
+  <ActionCard
+    action={
+      <ShareContentButtonConnected message={message} itemId={contentId} />
+    }
+  >
+    <BodyText>{body}</BodyText>
+  </ActionCard>
+);
+
+TextFeature.propTypes = {
+  body: PropTypes.string.isRequired,
+  sharing: PropTypes.shape({ message: PropTypes.string }),
+  contentId: PropTypes.string.isRequired,
+};
+
+export const TEXT_FEATURE_FRAGMENT = `
+fragment TextFeatureFragment on TextFeature {
+  body
+  id
+  sharing {
+    message
+  }
+}
+`;
+
+export default TextFeature;
diff --git a/apolloschurchapp/src/content-single/Features/getContentItemFeatures.js b/apolloschurchapp/src/content-single/Features/getContentItemFeatures.js
new file mode 100644
index 0000000..a015cec
--- /dev/null
+++ b/apolloschurchapp/src/content-single/Features/getContentItemFeatures.js
@@ -0,0 +1,32 @@
+import gql from 'graphql-tag';
+import { TEXT_FEATURE_FRAGMENT } from './TextFeature';
+import { SCRIPTURE_FEATURE_FRAGMENT } from './ScriptureFeature';
+
+const FEATURES_FRAGMENT = `
+  fragment FeaturesFragment on Feature {
+    id
+    ...TextFeatureFragment
+    ...ScriptureFeatureFragment
+  }
+  ${TEXT_FEATURE_FRAGMENT}
+  ${SCRIPTURE_FEATURE_FRAGMENT}
+`;
+
+export default gql`
+  query contentItemFeatures($contentId: ID!) {
+    node(id: $contentId) {
+      id
+      ... on ContentSeriesContentItem {
+        features {
+          ...FeaturesFragment
+        }
+      }
+      ... on WeekendContentItem {
+        features {
+          ...FeaturesFragment
+        }
+      }
+    }
+  }
+  ${FEATURES_FRAGMENT}
+`;
diff --git a/apolloschurchapp/src/content-single/Features/index.js b/apolloschurchapp/src/content-single/Features/index.js
new file mode 100644
index 0000000..e345e37
--- /dev/null
+++ b/apolloschurchapp/src/content-single/Features/index.js
@@ -0,0 +1,55 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import { Query } from 'react-apollo';
+import { ErrorCard, H3, PaddedView } from '@apollosproject/ui-kit';
+import { get } from 'lodash';
+import TextFeature from './TextFeature';
+import ScriptureFeature from './ScriptureFeature';
+
+import GET_CONTENT_ITEM_FEATURES from './getContentItemFeatures';
+
+const FEATURE_MAP = {
+  TextFeature,
+  ScriptureFeature,
+};
+
+const Features = ({ contentId }) => {
+  if (!contentId) return null;
+
+  return (
+    <Query
+      query={GET_CONTENT_ITEM_FEATURES}
+      fetchPolicy="cache-and-network"
+      variables={{ contentId }}
+    >
+      {({ data: { node } = {}, loading, error }) => {
+        if (error) return <ErrorCard error={error} />;
+        if (loading) return null;
+
+        const features = get(node, 'features', []);
+        if (!features || !features.length) return null;
+
+        return (
+          <PaddedView horizontal={false}>
+            <PaddedView vertical={false}>
+              <H3 padded>Engage</H3>
+            </PaddedView>
+            {features.map(({ __typename, ...feature }) => {
+              const Feature = FEATURE_MAP[__typename];
+              if (!Feature) return null;
+              return (
+                <Feature key={feature.id} {...feature} contentId={contentId} />
+              );
+            })}
+          </PaddedView>
+        );
+      }}
+    </Query>
+  );
+};
+
+Features.propTypes = {
+  contentId: PropTypes.string,
+};
+
+export default Features;
diff --git a/apolloschurchapp/src/content-single/HTMLContent/index.js b/apolloschurchapp/src/content-single/HTMLContent/index.js
index 4d4f384..755af41 100644
--- a/apolloschurchapp/src/content-single/HTMLContent/index.js
+++ b/apolloschurchapp/src/content-single/HTMLContent/index.js
@@ -2,16 +2,16 @@ import React from 'react';
 import PropTypes from 'prop-types';
 import { Query } from 'react-apollo';
 
-import HTMLView from 'apolloschurchapp/src/ui/HTMLView';
+import HTMLView from '@apollosproject/ui-htmlview';
 import { ErrorCard } from '@apollosproject/ui-kit';
 
-import getContentItemContent from './getContentItemContent';
+import GET_CONTENT_ITEM_CONTENT from './getContentItemContent';
 
 const HTMLContent = ({ contentId }) => {
   if (!contentId) return <HTMLView isLoading />;
 
   return (
-    <Query query={getContentItemContent} variables={{ contentId }}>
+    <Query query={GET_CONTENT_ITEM_CONTENT} variables={{ contentId }}>
       {({ data: { node: { htmlContent } = {} } = {}, loading, error }) => {
         if (error) return <ErrorCard error={error} />;
         return (
diff --git a/apolloschurchapp/src/content-single/HorizontalContentFeed/HorizontalContentFeed.tests.js b/apolloschurchapp/src/content-single/HorizontalContentFeed/HorizontalContentFeed.tests.js
new file mode 100644
index 0000000..182f5e1
--- /dev/null
+++ b/apolloschurchapp/src/content-single/HorizontalContentFeed/HorizontalContentFeed.tests.js
@@ -0,0 +1,206 @@
+import React from 'react';
+import Providers from 'apolloschurchapp/src/Providers';
+import { renderWithApolloData } from 'apolloschurchapp/src/utils/testUtils';
+import GET_CONTENT_CARD from '../../ui/ContentCardConnected/query';
+import GET_HORIZONTAL_CONTENT from './getHorizontalContent';
+import HorizontalContentFeed from '.';
+
+const mock = {
+  request: {
+    query: GET_HORIZONTAL_CONTENT,
+    variables: { itemId: 'ContentSeriesContentItem:123' },
+  },
+  result: {
+    data: {
+      node: {
+        id: 'ContentSeriesContentItem:123',
+        childContentItemsConnection: {
+          edges: [
+            {
+              cursor: 'b487224762b030f470967f45d7205823',
+              node: {
+                id: 'DevotionalContentItem:d395278cd4b68e074ca4e595c8feab6d',
+                coverImage: {
+                  name: 'Square Image',
+                  sources: [
+                    {
+                      uri:
+                        'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D31af1a61-360c-4b1e-8e62-45517c06a9a2',
+                      __typename: 'ImageMediaSource',
+                    },
+                  ],
+                  __typename: 'ImageMedia',
+                },
+                parentChannel: {
+                  id: 'ContentChannel:559b23fd0aa90e81b1c023e72e230fa1',
+                  name: 'Devotional',
+                  iconName: 'text',
+                  __typename: 'ContentChannel',
+                },
+                title: 'God sees who you can be not who you are',
+                sharing: {
+                  url:
+                    'https://apollosrock.newspring.cc/devotional/god-sees-who-you-can-be-not-who-you-are',
+                  message:
+                    'God sees who you can be not who you are - Life is challenging enough.',
+                  title: 'Share via ...',
+                  __typename: 'SharableContentItem',
+                },
+                __typename: 'DevotionalContentItem',
+              },
+              __typename: 'ContentItemsConnectionEdge',
+            },
+            {
+              cursor: '4affc1122ad80d4edcf6c5bc9d88ae99',
+              node: {
+                id: 'DevotionalContentItem:fbea6914a3e8877516cbd333d919075d',
+                coverImage: {
+                  name: 'Square Image',
+                  sources: [
+                    {
+                      uri:
+                        'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D31af1a61-360c-4b1e-8e62-45517c06a9a2',
+                      __typename: 'ImageMediaSource',
+                    },
+                  ],
+                  __typename: 'ImageMedia',
+                },
+                parentChannel: {
+                  id: 'ContentChannel:559b23fd0aa90e81b1c023e72e230fa1',
+                  name: 'Devotional',
+                  iconName: 'text',
+                  __typename: 'ContentChannel',
+                },
+                title: 'Thank God for the friends who will tell it like it is',
+                sharing: {
+                  url:
+                    'https://apollosrock.newspring.cc/devotional/thank-god-for-the-friends-who-will-tell-it-like-it-is',
+                  message:
+                    'Thank God for the friends who will tell it like it is - Some of us grew up in a sanitized church.',
+                  title: 'Share via ...',
+                  __typename: 'SharableContentItem',
+                },
+                __typename: 'DevotionalContentItem',
+              },
+              __typename: 'ContentItemsConnectionEdge',
+            },
+            {
+              cursor: '659a26257a49fb2bf1446bb747bf7dd3',
+              node: {
+                id: 'DevotionalContentItem:5e18250f586ab8de4d3d6292c919dcc4',
+                coverImage: {
+                  name: 'Square Image',
+                  sources: [
+                    {
+                      uri:
+                        'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D31af1a61-360c-4b1e-8e62-45517c06a9a2',
+                      __typename: 'ImageMediaSource',
+                    },
+                  ],
+                  __typename: 'ImageMedia',
+                },
+                parentChannel: {
+                  id: 'ContentChannel:559b23fd0aa90e81b1c023e72e230fa1',
+                  name: 'Devotional',
+                  iconName: 'text',
+                  __typename: 'ContentChannel',
+                },
+                title: 'No sin is too bad',
+                sharing: {
+                  url:
+                    'https://apollosrock.newspring.cc/devotional/no-sin-is-too-bad',
+                  message:
+                    'No sin is too bad - In Jeremiah 3, God’s people had really messed up.',
+                  title: 'Share via ...',
+                  __typename: 'SharableContentItem',
+                },
+                __typename: 'DevotionalContentItem',
+              },
+              __typename: 'ContentItemsConnectionEdge',
+            },
+            {
+              cursor: 'c8d2fe738629909c33010432432f21c8',
+              node: {
+                id: 'DevotionalContentItem:bdc2c29b85949e4ca8232b373a07953d',
+                coverImage: {
+                  name: 'Square Image',
+                  sources: [
+                    {
+                      uri:
+                        'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D31af1a61-360c-4b1e-8e62-45517c06a9a2',
+                      __typename: 'ImageMediaSource',
+                    },
+                  ],
+                  __typename: 'ImageMedia',
+                },
+                parentChannel: {
+                  id: 'ContentChannel:559b23fd0aa90e81b1c023e72e230fa1',
+                  name: 'Devotional',
+                  iconName: 'text',
+                  __typename: 'ContentChannel',
+                },
+                title: 'Change starts with a choice',
+                sharing: {
+                  url:
+                    'https://apollosrock.newspring.cc/devotional/change-starts-with-a-choice',
+                  message:
+                    'Change starts with a choice - Have you ever restored an old piece of furniture?',
+                  title: 'Share via ...',
+                  __typename: 'SharableContentItem',
+                },
+                __typename: 'DevotionalContentItem',
+              },
+              __typename: 'ContentItemsConnectionEdge',
+            },
+          ],
+          __typename: 'ContentItemsConnection',
+        },
+        siblingContentItemsConnection: {
+          edges: [],
+          __typename: 'ContentItemsConnection',
+        },
+        __typename: 'ContentSeriesContentItem',
+      },
+    },
+  },
+};
+
+const navigation = {
+  push: jest.fn(),
+};
+
+const additionalMocks = mock.result.data.node.childContentItemsConnection.edges.map(
+  ({ node }) => ({
+    request: {
+      query: GET_CONTENT_CARD,
+      variables: { contentId: node.id },
+    },
+    result: {
+      data: {
+        node: {
+          ...node,
+          summary: 'bla bla bla',
+          isLiked: false,
+          theme: null,
+          coverImage: null,
+        },
+      },
+    },
+  })
+);
+
+console.log(additionalMocks);
+
+describe('the HorizontalContentFeed component', () => {
+  it('renders a horizontal content feed', async () => {
+    const tree = await renderWithApolloData(
+      <Providers mocks={[mock, ...additionalMocks]}>
+        <HorizontalContentFeed
+          contentId={'ContentSeriesContentItem:123'}
+          navigation={navigation}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/content-single/HorizontalContentFeed/getHorizontalContent.js b/apolloschurchapp/src/content-single/HorizontalContentFeed/getHorizontalContent.js
index b0b77bc..a126c97 100644
--- a/apolloschurchapp/src/content-single/HorizontalContentFeed/getHorizontalContent.js
+++ b/apolloschurchapp/src/content-single/HorizontalContentFeed/getHorizontalContent.js
@@ -1,12 +1,13 @@
 import gql from 'graphql-tag';
 
 export default gql`
-  query getHorizontalContent($itemId: ID!) {
+  query getHorizontalContent($itemId: ID!, $cursor: String) {
     node(id: $itemId) {
       ... on ContentItem {
         id
-        childContentItemsConnection {
+        childContentItemsConnection(after: $cursor) {
           edges {
+            cursor
             node {
               id
               coverImage {
@@ -29,8 +30,9 @@ export default gql`
             }
           }
         }
-        siblingContentItemsConnection {
+        siblingContentItemsConnection(after: $cursor) {
           edges {
+            cursor
             node {
               id
               coverImage {
diff --git a/apolloschurchapp/src/content-single/HorizontalContentFeed/index.js b/apolloschurchapp/src/content-single/HorizontalContentFeed/index.js
index c0a236f..666d509 100644
--- a/apolloschurchapp/src/content-single/HorizontalContentFeed/index.js
+++ b/apolloschurchapp/src/content-single/HorizontalContentFeed/index.js
@@ -4,13 +4,11 @@ import PropTypes from 'prop-types';
 import { withNavigation } from 'react-navigation';
 import { Query } from 'react-apollo';
 
-import {
-  CardTile,
-  HorizontalTileFeed,
-  TouchableScale,
-} from '@apollosproject/ui-kit';
+import { HorizontalTileFeed, TouchableScale } from '@apollosproject/ui-kit';
 
-import getHorizontalContent from './getHorizontalContent';
+import HorizontalContentCardConnected from '../../ui/HorizontalContentCardConnected';
+
+import GET_HORIZONTAL_CONTENT from './getHorizontalContent';
 
 const loadingStateObject = {
   node: {
@@ -34,44 +32,62 @@ class HorizontalContentFeed extends Component {
     });
   };
 
-  renderItem = ({ item, index }) => (
+  renderItem = ({ item }) => (
     <TouchableScale onPress={() => this.handleOnPressItem(item)}>
-      <CardTile
-        number={index + 1}
-        title={get(item, 'title', '')}
-        /*
-         * These are props that are not yet being passed in the data.
-         * We will need to make sure they get added back when that data is available.
-         * byLine={item.content.speaker}
-         * date={item.meta.date}
-         */
-      />
+      <HorizontalContentCardConnected contentId={get(item, 'id', '')} />
     </TouchableScale>
   );
 
-  renderFeed = ({ data, loading, error }) => {
+  renderFeed = ({ data, loading, error, fetchMore }) => {
     if (error) return null;
+    if (loading) return null;
 
-    const childContent = get(
-      data,
-      'node.childContentItemsConnection.edges',
-      []
-    ).map((edge) => edge.node);
-
-    const siblingContent = get(
-      data,
-      'node.siblingContentItemsConnection.edges',
-      []
-    ).map((edge) => edge.node);
+    const children = get(data, 'node.childContentItemsConnection.edges', []);
+    const siblings = get(data, 'node.siblingContentItemsConnection.edges', []);
+    const isParent = children.length > 0;
 
-    const content = siblingContent.length ? siblingContent : childContent;
+    const edges = isParent ? children : siblings;
+    const content = edges.map((edge) => edge.node);
+    const { cursor } = edges.length && edges[edges.length - 1];
+    const currentIndex = content.findIndex(
+      ({ id }) => id === this.props.contentId
+    );
+    const initialScrollIndex = currentIndex === -1 ? 0 : currentIndex;
 
-    return (content && content.length) || loading ? (
+    return content && content.length ? (
       <HorizontalTileFeed
         content={content}
-        isLoading={loading}
         loadingStateObject={loadingStateObject}
         renderItem={this.renderItem}
+        initialScrollIndex={initialScrollIndex}
+        getItemLayout={(itemData, index) => ({
+          // We need to pass this function so that initialScrollIndex will work.
+          length: 240,
+          offset: 240 * index,
+          index,
+        })}
+        onEndReached={() =>
+          fetchMore({
+            query: GET_HORIZONTAL_CONTENT,
+            variables: { cursor, itemId: this.props.contentId },
+            updateQuery: (previousResult, { fetchMoreResult }) => {
+              const connection = isParent
+                ? 'childContentItemsConnection'
+                : 'siblingContentItemsConnection';
+              const newEdges = get(fetchMoreResult.node, connection, []).edges;
+
+              return {
+                node: {
+                  ...previousResult.node,
+                  [connection]: {
+                    ...previousResult.node[connection],
+                    edges: [...edges, ...newEdges],
+                  },
+                },
+              };
+            },
+          })
+        }
       />
     ) : null;
   };
@@ -81,7 +97,7 @@ class HorizontalContentFeed extends Component {
 
     return (
       <Query
-        query={getHorizontalContent}
+        query={GET_HORIZONTAL_CONTENT}
         variables={{ itemId: this.props.contentId }}
       >
         {this.renderFeed}
diff --git a/apolloschurchapp/src/content-single/MediaControls/getContentMedia.js b/apolloschurchapp/src/content-single/MediaControls/getContentMedia.js
index 8ab3d1a..3bc3e34 100644
--- a/apolloschurchapp/src/content-single/MediaControls/getContentMedia.js
+++ b/apolloschurchapp/src/content-single/MediaControls/getContentMedia.js
@@ -21,6 +21,17 @@ export default gql`
           }
         }
       }
+      ... on WeekendContentItem {
+        liveStream {
+          isLive
+          media {
+            sources {
+              uri
+            }
+          }
+          webViewUrl
+        }
+      }
     }
   }
 `;
diff --git a/apolloschurchapp/src/content-single/MediaControls/index.js b/apolloschurchapp/src/content-single/MediaControls/index.js
index 994e4b0..a36e7d9 100644
--- a/apolloschurchapp/src/content-single/MediaControls/index.js
+++ b/apolloschurchapp/src/content-single/MediaControls/index.js
@@ -4,95 +4,144 @@ import { Query, Mutation } from 'react-apollo';
 import { View } from 'react-native';
 import { get } from 'lodash';
 
-import { playVideoMutation } from 'apolloschurchapp/src/ui/MediaPlayer/mutations';
-import { Icon, styled, Button } from '@apollosproject/ui-kit';
-import getContentMedia from './getContentMedia';
-
-const buttonSizeDifferential = 4;
-
-const MediaIcon = Icon; // todo: add back styles
-const MediaButton = styled(({ theme }) => ({
-  width: theme.sizing.baseUnit * buttonSizeDifferential,
-  height: theme.sizing.baseUnit * buttonSizeDifferential,
-  borderRadius: theme.sizing.baseUnit * (buttonSizeDifferential / 2),
-  backgroundColor: theme.colors.secondary,
-  justifyContent: 'center',
-  alignItems: 'center',
-  borderWidth: 0, // remove default button border
-}))(Button);
-
-/** MediaButtton "border styles" live in a seperate component so that Android places it's elevation
- * shadow in the right place. */
-const MediaButtonBorder = styled(({ theme }) => ({
-  borderRadius:
-    theme.sizing.baseUnit * (buttonSizeDifferential / 2) +
-    buttonSizeDifferential, // this is eqivalent to the MediaButton size above + the padding below
-  padding: buttonSizeDifferential, // padding + backgroundColor = MediaButton + "borderStyles"
-  backgroundColor: theme.colors.paper,
-}))(View);
+import { PLAY_VIDEO } from '@apollosproject/ui-media-player';
+import {
+  styled,
+  TouchableScale,
+  MediaThumbnail,
+  MediaThumbnailIcon,
+  MediaThumbnailItem,
+  H6,
+} from '@apollosproject/ui-kit';
+import { WebBrowserConsumer } from 'apolloschurchapp/src/ui/WebBrowser';
+import GET_CONTENT_MEDIA from './getContentMedia';
 
 const Container = styled(({ theme }) => ({
   flexDirection: 'row',
-  alignItems: 'center',
-  justifyContent: 'center',
-  marginTop:
-    -theme.sizing.baseUnit * (buttonSizeDifferential / 2) -
-    buttonSizeDifferential, // MediaButton size / 2 + border
+  alignItems: 'flex-start',
+  justifyContent: 'flex-start',
+  marginTop: -(theme.sizing.baseUnit * 2.5),
 }))(View);
 
+const StyledMediaThumbnail = styled({ marginVertical: 0 })(MediaThumbnail);
+
 class MediaControls extends PureComponent {
   static propTypes = {
     contentId: PropTypes.string,
   };
 
+  renderPlayButton = ({ action, coverImageSources }) => (
+    <Container>
+      <TouchableScale onPress={action}>
+        <StyledMediaThumbnail image={coverImageSources}>
+          <MediaThumbnailItem centered>
+            <MediaThumbnailIcon name="play" />
+          </MediaThumbnailItem>
+          <MediaThumbnailItem centered bottom>
+            <H6 padded>Play</H6>
+          </MediaThumbnailItem>
+        </StyledMediaThumbnail>
+      </TouchableScale>
+    </Container>
+  );
+
+  renderMedia = ({
+    videoSource,
+    coverImageSources,
+    title,
+    parentChannelName,
+  }) => (
+    <Mutation mutation={PLAY_VIDEO}>
+      {(play) =>
+        this.renderPlayButton({
+          action: () =>
+            play({
+              variables: {
+                mediaSource: videoSource,
+                posterSources: coverImageSources,
+                title,
+                isVideo: true,
+                artist: parentChannelName,
+              },
+            }),
+          coverImageSources,
+        })
+      }
+    </Mutation>
+  );
+
+  renderWebView = ({ webViewUrl, coverImageSources }) => (
+    <WebBrowserConsumer>
+      {(openUrl) =>
+        this.renderPlayButton({
+          action: () => openUrl(webViewUrl),
+          coverImageSources,
+        })
+      }
+    </WebBrowserConsumer>
+  );
+
   renderControls = ({
     loading,
     error,
     data: {
-      node: { videos, title, parentChannel = {}, coverImage = {} } = {},
+      node: {
+        videos,
+        title,
+        parentChannel = {},
+        coverImage = {},
+        liveStream = {},
+      } = {},
     } = {},
   }) => {
     if (loading || error) return null;
 
+    const isLive = get(liveStream, 'isLive', false);
+    const hasLiveStreamContent = !!(
+      get(liveStream, 'webViewUrl') || get(liveStream, 'media.sources[0]')
+    );
+
     const videoSource = get(videos, '[0].sources[0]', null);
+    const shouldRender = (isLive && hasLiveStreamContent) || videoSource;
+
+    if (!shouldRender) return null;
+
     const coverImageSources = (coverImage && coverImage.sources) || [];
 
-    return (
-      <Mutation mutation={playVideoMutation}>
-        {(play) => (
-          <Container>
-            {videoSource ? (
-              <MediaButtonBorder>
-                <MediaButton
-                  type="primary"
-                  onPress={() =>
-                    play({
-                      variables: {
-                        mediaSource: videoSource,
-                        posterSources: coverImageSources,
-                        title,
-                        isVideo: true,
-                        artist: parentChannel.name,
-                      },
-                    })
-                  }
-                  useForeground
-                >
-                  <MediaIcon name="play" />
-                </MediaButton>
-              </MediaButtonBorder>
-            ) : null}
-          </Container>
-        )}
-      </Mutation>
-    );
+    // Content is live, and we have a livestream media
+    if (isLive && get(liveStream, 'media.sources[0].uri')) {
+      return this.renderMedia({
+        coverImageSources,
+        videoSource: liveStream.media.sources[0],
+        parentChannelName: parentChannel.name,
+        title,
+      });
+    }
+
+    // Content is live, and we don't have a livestream media
+    // but we do have a webview url
+    if (isLive && get(liveStream, 'webViewUrl')) {
+      return this.renderWebView({
+        webViewUrl: liveStream.webViewUrl,
+        coverImageSources,
+      });
+    }
+
+    // Default case, normal media.
+    return this.renderMedia({
+      coverImageSources,
+      videoSource,
+      parentChannelName: parentChannel.name,
+      title,
+    });
   };
 
   render() {
     if (!this.props.contentId) return null;
     return (
       <Query
-        query={getContentMedia}
+        query={GET_CONTENT_MEDIA}
+        fetchPolicy="cache-and-network"
         variables={{ contentId: this.props.contentId }}
       >
         {this.renderControls}
diff --git a/apolloschurchapp/src/content-single/NavigationHeader.js b/apolloschurchapp/src/content-single/NavigationHeader.js
new file mode 100644
index 0000000..15b9d7b
--- /dev/null
+++ b/apolloschurchapp/src/content-single/NavigationHeader.js
@@ -0,0 +1,25 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import { ModalViewHeader } from '@apollosproject/ui-kit';
+
+const NavigationHeader = ({ scene, navigation }) => {
+  let onBack = null;
+  if (scene.index > 0) onBack = () => navigation.pop();
+  const onClose = () => {
+    navigation.goBack();
+  };
+
+  return <ModalViewHeader onClose={onClose} onBack={onBack} navigationHeader />;
+};
+
+NavigationHeader.propTypes = {
+  scene: PropTypes.shape({
+    index: PropTypes.number,
+  }),
+  navigation: PropTypes.shape({
+    pop: PropTypes.func,
+    popToTop: PropTypes.func,
+  }),
+};
+
+export default NavigationHeader;
diff --git a/apolloschurchapp/src/content-single/UniversalContentItem/index.js b/apolloschurchapp/src/content-single/UniversalContentItem/index.js
index f34789c..14db7a4 100644
--- a/apolloschurchapp/src/content-single/UniversalContentItem/index.js
+++ b/apolloschurchapp/src/content-single/UniversalContentItem/index.js
@@ -8,34 +8,43 @@ import {
   BackgroundView,
   PaddedView,
   H2,
+  StretchyView,
 } from '@apollosproject/ui-kit';
 import MediaControls from '../MediaControls';
 import HTMLContent from '../HTMLContent';
 import HorizontalContentFeed from '../HorizontalContentFeed';
+import Features from '../Features';
 
 const FlexedScrollView = styled({ flex: 1 })(ScrollView);
 
 const UniversalContentItem = ({ content, loading }) => {
   const coverImageSources = get(content, 'coverImage.sources', []);
   return (
-    <FlexedScrollView>
-      {coverImageSources.length || loading ? (
-        <GradientOverlayImage
-          isLoading={!coverImageSources.length && loading}
-          source={coverImageSources}
-        />
-      ) : null}
-      <BackgroundView>
-        <MediaControls contentId={content.id} />
-        <PaddedView>
-          <H2 padded isLoading={!content.title && loading}>
-            {content.title}
-          </H2>
-          <HTMLContent contentId={content.id} />
-        </PaddedView>
-        <HorizontalContentFeed contentId={content.id} />
-      </BackgroundView>
-    </FlexedScrollView>
+    <BackgroundView>
+      <StretchyView>
+        {({ Stretchy, ...scrollViewProps }) => (
+          <FlexedScrollView {...scrollViewProps}>
+            {coverImageSources.length || loading ? (
+              <Stretchy>
+                <GradientOverlayImage
+                  isLoading={!coverImageSources.length && loading}
+                  source={coverImageSources}
+                />
+              </Stretchy>
+            ) : null}
+            <MediaControls contentId={content.id} />
+            <PaddedView vertical={false}>
+              <H2 padded isLoading={!content.title && loading}>
+                {content.title}
+              </H2>
+              <HTMLContent contentId={content.id} />
+            </PaddedView>
+            <Features contentId={content.id} />
+            <HorizontalContentFeed contentId={content.id} />
+          </FlexedScrollView>
+        )}
+      </StretchyView>
+    </BackgroundView>
   );
 };
 
diff --git a/apolloschurchapp/src/content-single/WeekendContentItem/index.js b/apolloschurchapp/src/content-single/WeekendContentItem/index.js
new file mode 100644
index 0000000..f48b63a
--- /dev/null
+++ b/apolloschurchapp/src/content-single/WeekendContentItem/index.js
@@ -0,0 +1,91 @@
+import React from 'react';
+import { ScrollView, Dimensions } from 'react-native';
+import { get } from 'lodash';
+import PropTypes from 'prop-types';
+import {
+  styled,
+  GradientOverlayImage,
+  BackgroundView,
+  PaddedView,
+  H2,
+  StretchyView,
+  ThemeMixin,
+  ThemeConsumer,
+  CardLabel,
+} from '@apollosproject/ui-kit';
+import MediaControls from '../MediaControls';
+import HTMLContent from '../HTMLContent';
+import HorizontalContentFeed from '../HorizontalContentFeed';
+import Features from '../Features';
+
+const FlexedScrollView = styled({ flex: 1 })(ScrollView);
+
+const Header = styled(({ hasMedia, theme }) => ({
+  paddingTop: Dimensions.get('window').width * 0.5, // for some reason % based padding still is buggy
+  alignItems: 'flex-start',
+  paddingBottom: hasMedia ? theme.sizing.baseUnit : theme.sizing.baseUnit * 2,
+  // backgroundColor: theme.colors.primary,
+}))(PaddedView);
+
+const WeekendContentItem = ({ content, loading }) => {
+  const coverImageSources = get(content, 'coverImage.sources', []);
+  return (
+    <ThemeMixin mixin={content.theme || {}}>
+      <ThemeConsumer>
+        {(theme) => (
+          <BackgroundView>
+            <StretchyView>
+              {({ Stretchy, ...scrollViewProps }) => (
+                <FlexedScrollView {...scrollViewProps}>
+                  <Header hasMedia={content.videos && content.videos.sources}>
+                    <ThemeMixin mixin={{ type: 'dark' }}>
+                      {coverImageSources.length || loading ? (
+                        <Stretchy
+                          background
+                          style={{ backgroundColor: theme.colors.primary }}
+                        >
+                          <GradientOverlayImage
+                            isLoading={!coverImageSources.length && loading}
+                            overlayColor={theme.colors.primary}
+                            overlayType="featured"
+                            source={coverImageSources}
+                          />
+                        </Stretchy>
+                      ) : null}
+                      <CardLabel
+                        title={
+                          content.parentChannel && content.parentChannel.name
+                        }
+                      />
+                      <H2 padded isLoading={!content.title && loading}>
+                        {content.title}
+                      </H2>
+                      <HTMLContent contentId={content.id} />
+                    </ThemeMixin>
+                  </Header>
+                  <MediaControls contentId={content.id} />
+                  <Features contentId={content.id} />
+                  <HorizontalContentFeed contentId={content.id} />
+                </FlexedScrollView>
+              )}
+            </StretchyView>
+          </BackgroundView>
+        )}
+      </ThemeConsumer>
+    </ThemeMixin>
+  );
+};
+
+WeekendContentItem.propTypes = {
+  content: PropTypes.shape({
+    __typename: PropTypes.string,
+    parentChannel: PropTypes.shape({
+      name: PropTypes.string,
+    }),
+    id: PropTypes.string,
+    title: PropTypes.string,
+  }),
+  loading: PropTypes.bool,
+};
+
+export default WeekendContentItem;
diff --git a/apolloschurchapp/src/content-single/getContentItem.js b/apolloschurchapp/src/content-single/getContentItem.js
index 40b8221..8da8e36 100644
--- a/apolloschurchapp/src/content-single/getContentItem.js
+++ b/apolloschurchapp/src/content-single/getContentItem.js
@@ -1,10 +1,12 @@
 import gql from 'graphql-tag';
 
-export const contentItemFragment = gql`
+export const CONTENT_ITEM_FRAGMENT = gql`
   fragment contentItemFragment on ContentItem {
     id
     title
     isLiked
+    likedCount
+    summary
     coverImage {
       name
       sources {
@@ -34,6 +36,11 @@ export const contentItemFragment = gql`
         uri
       }
     }
+    ... on WeekendContentItem {
+      liveStream {
+        isLive
+      }
+    }
   }
 `;
 
@@ -46,5 +53,5 @@ export default gql`
       }
     }
   }
-  ${contentItemFragment}
+  ${CONTENT_ITEM_FRAGMENT}
 `;
diff --git a/apolloschurchapp/src/content-single/index.js b/apolloschurchapp/src/content-single/index.js
index d9f5be6..1e5b838 100644
--- a/apolloschurchapp/src/content-single/index.js
+++ b/apolloschurchapp/src/content-single/index.js
@@ -1,103 +1,17 @@
-import React, { PureComponent } from 'react';
-import { Query } from 'react-apollo';
-import { get } from 'lodash';
-import PropTypes from 'prop-types';
-
-import { ErrorCard, ThemeMixin, ModalView } from '@apollosproject/ui-kit';
-import TrackEventWhenLoaded from 'apolloschurchapp/src/analytics/TrackEventWhenLoaded';
-
-import { events } from 'apolloschurchapp/src/analytics';
-import ActionContainer from './ActionContainer';
-import getContentItem from './getContentItem';
-
-import DevotionalContentItem from './DevotionalContentItem';
-import UniversalContentItem from './UniversalContentItem';
-
-class ContentSingle extends PureComponent {
-  static propTypes = {
-    navigation: PropTypes.shape({
-      getParam: PropTypes.func,
-      push: PropTypes.func,
-    }),
-  };
-
-  static navigationOptions = {
-    header: null,
-  };
-
-  get itemId() {
-    return this.props.navigation.getParam('itemId', []);
-  }
-
-  get queryVariables() {
-    return { itemId: this.itemId };
-  }
-
-  renderContent = ({ content, loading, error }) => {
-    let { __typename } = content;
-    if (!__typename && this.itemId) {
-      [__typename] = this.itemId.split(':');
-    }
-    switch (__typename) {
-      case 'DevotionalContentItem':
-        return (
-          <DevotionalContentItem
-            id={this.itemId}
-            content={content}
-            loading={loading}
-            error={error}
-          />
-        );
-      case 'UniversalContentItem':
-      default:
-        return (
-          <UniversalContentItem
-            id={this.itemId}
-            content={content}
-            loading={loading}
-            error={error}
-          />
-        );
-    }
-  };
-
-  renderWithData = ({ loading, error, data }) => {
-    if (error) return <ErrorCard error={error} />;
-
-    const content = data.node || {};
-
-    const { theme = {}, id } = content;
-
-    return (
-      <ThemeMixin
-        mixin={{
-          type: get(theme, 'type', 'light').toLowerCase(),
-          colors: get(theme, 'colors'),
-        }}
-      >
-        <ModalView navigation={this.props.navigation}>
-          <TrackEventWhenLoaded
-            loaded={!!(!loading && content.title)}
-            eventName={events.ViewContent}
-            properties={{
-              title: content.title,
-              itemId: this.itemId,
-            }}
-          />
-          {this.renderContent({ content, loading, error })}
-          <ActionContainer itemId={id} />
-        </ModalView>
-      </ThemeMixin>
-    );
-  };
-
-  render() {
-    return (
-      <Query query={getContentItem} variables={this.queryVariables}>
-        {this.renderWithData}
-      </Query>
-    );
+import { createStackNavigator } from 'react-navigation';
+
+import ContentSingle from './ContentSingle';
+
+const ContentSingleNavigator = createStackNavigator(
+  {
+    ContentSingle,
+  },
+  {
+    initialRouteName: 'ContentSingle',
+    headerMode: 'float',
+    headerTransitionPreset: 'fade-in-place',
+    navigationOptions: { header: null },
   }
-}
+);
 
-export default ContentSingle;
+export default ContentSingleNavigator;
diff --git a/apolloschurchapp/src/event/Event.js b/apolloschurchapp/src/event/Event.js
new file mode 100644
index 0000000..270a48f
--- /dev/null
+++ b/apolloschurchapp/src/event/Event.js
@@ -0,0 +1,65 @@
+import React from 'react';
+import { get } from 'lodash';
+import PropTypes from 'prop-types';
+import moment from 'moment';
+import {
+  GradientOverlayImage,
+  BackgroundView,
+  PaddedView,
+  H2,
+  Paragraph,
+  StretchyView,
+} from '@apollosproject/ui-kit';
+
+import { FlexedScrollView, EventInfoItem } from './components';
+
+const Event = ({ event, loading }) => {
+  const coverImageSources = get(event, 'image.sources', []);
+  return (
+    <BackgroundView>
+      <StretchyView>
+        {({ Stretchy, ...scrollViewProps }) => (
+          <FlexedScrollView {...scrollViewProps}>
+            {coverImageSources.length || loading ? (
+              <Stretchy>
+                <GradientOverlayImage
+                  isLoading={!coverImageSources.length && loading}
+                  source={coverImageSources}
+                />
+              </Stretchy>
+            ) : null}
+            <PaddedView vertical={false}>
+              <H2 padded isLoading={!event.name && loading}>
+                {event.name}
+              </H2>
+              <Paragraph>
+                <EventInfoItem
+                  icon={'time'}
+                  title={moment(event.start).format('ddd, MMMM Do, YYYY')}
+                  subtitle={`${moment(event.start).format('LT')} — ${moment(
+                    event.end
+                  ).format('LT')}`}
+                />
+                <EventInfoItem icon={'pin'} title={event.location} />
+              </Paragraph>
+            </PaddedView>
+          </FlexedScrollView>
+        )}
+      </StretchyView>
+    </BackgroundView>
+  );
+};
+
+Event.propTypes = {
+  event: PropTypes.shape({
+    __typename: PropTypes.string,
+    id: PropTypes.string,
+    name: PropTypes.string,
+    start: PropTypes.string,
+    end: PropTypes.string,
+    location: PropTypes.string,
+  }),
+  loading: PropTypes.bool,
+};
+
+export default Event;
diff --git a/apolloschurchapp/src/event/Event.tests.js b/apolloschurchapp/src/event/Event.tests.js
new file mode 100644
index 0000000..10cf33d
--- /dev/null
+++ b/apolloschurchapp/src/event/Event.tests.js
@@ -0,0 +1,31 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+import moment from 'moment';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import Event from './Event';
+
+describe('The Event component', () => {
+  it('should render', () => {
+    const tree = renderer.create(
+      <Providers>
+        <Event
+          event={{
+            __typename: 'Event',
+            id: 'Event:123',
+            start: moment('2019-09-26T15:10:51.200Z')
+              .utc()
+              .toJSON(),
+            end: moment('2019-09-26T17:10:51.200Z')
+              .utc()
+              .toJSON(),
+            location: 'Willow Creek, Chicago',
+            image: { sources: [{ url: 'https://url.com/image.jpg' }] },
+          }}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/event/EventConnected.js b/apolloschurchapp/src/event/EventConnected.js
new file mode 100644
index 0000000..71f0a3b
--- /dev/null
+++ b/apolloschurchapp/src/event/EventConnected.js
@@ -0,0 +1,81 @@
+import React, { PureComponent } from 'react';
+import { Query } from 'react-apollo';
+import { get } from 'lodash';
+import PropTypes from 'prop-types';
+
+import { ErrorCard, ThemeMixin } from '@apollosproject/ui-kit';
+
+import { TrackEventWhenLoaded } from '@apollosproject/ui-analytics';
+
+import NavigationHeader from '../content-single/NavigationHeader';
+import Event from './Event';
+import GET_EVENT from './getEvent';
+
+class EventConnected extends PureComponent {
+  static propTypes = {
+    navigation: PropTypes.shape({
+      getParam: PropTypes.func,
+      push: PropTypes.func,
+    }),
+  };
+
+  static navigationOptions = {
+    header: NavigationHeader,
+    headerTransparent: true,
+    headerMode: 'float',
+  };
+
+  get eventId() {
+    return this.props.navigation.getParam('eventId', []);
+  }
+
+  get queryVariables() {
+    return { eventId: this.eventId };
+  }
+
+  renderWithData = ({ loading, error, data }) => {
+    if (error) return <ErrorCard error={error} />;
+
+    const event = data.node || {};
+
+    const { theme = {} } = event;
+
+    return (
+      <ThemeMixin
+        mixin={{
+          type: get(theme, 'type', 'light').toLowerCase(),
+          colors: get(theme, 'colors'),
+        }}
+      >
+        <TrackEventWhenLoaded
+          loaded={!!(!loading && event.name)}
+          eventName={'View Event'}
+          properties={{
+            title: event.name,
+            eventId: this.eventId,
+          }}
+        />
+        <Event
+          id={this.eventId}
+          event={event}
+          loading={loading}
+          error={error}
+        />
+      </ThemeMixin>
+    );
+  };
+
+  render() {
+    return (
+      <Query
+        query={GET_EVENT}
+        fetchPolicy="network-only"
+        variables={this.queryVariables}
+      >
+        {this.renderWithData}
+      </Query>
+    );
+  }
+}
+
+export default EventConnected;
diff --git a/apolloschurchapp/src/event/EventConnected.tests.js b/apolloschurchapp/src/event/EventConnected.tests.js
new file mode 100644
index 0000000..ca7abcd
--- /dev/null
+++ b/apolloschurchapp/src/event/EventConnected.tests.js
@@ -0,0 +1,52 @@
+import React from 'react';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import moment from 'moment';
+import { renderWithApolloData } from '../utils/testUtils';
+import getEvent from './getEvent';
+import EventConnected from './EventConnected';
+
+const mocks = {
+  request: {
+    query: getEvent,
+    variables: { eventId: 'Event:123' },
+  },
+  result: {
+    data: {
+      node: {
+        __typename: 'Event',
+        id: 'Event:123',
+        start: moment('2019-09-26T15:10:51.200Z')
+          .utc()
+          .toJSON(),
+        end: moment('2019-09-26T17:10:51.200Z')
+          .utc()
+          .toJSON(),
+        location: 'Willow Creek, Chicago',
+        name: 'Cookout',
+        image: {
+          __typename: 'ImageMedia',
+          sources: [
+            {
+              uri: 'https://url.com/image.jpg',
+              __typename: 'ImageMediaSource',
+            },
+          ],
+        },
+      },
+    },
+  },
+};
+
+describe('EventConnected component', () => {
+  it('renders without errors', async () => {
+    const tree = await renderWithApolloData(
+      <Providers mocks={[mocks]}>
+        <EventConnected navigation={{ getParam: () => 'Event:123' }} />
+      </Providers>
+    );
+
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/event/components.js b/apolloschurchapp/src/event/components.js
new file mode 100644
index 0000000..509e400
--- /dev/null
+++ b/apolloschurchapp/src/event/components.js
@@ -0,0 +1,44 @@
+import React from 'react';
+import { ScrollView, View } from 'react-native';
+import PropTypes from 'prop-types';
+import { styled, withTheme, H6, H4, Icon } from '@apollosproject/ui-kit';
+
+const FlexedScrollView = styled({ flex: 1 })(ScrollView);
+
+const StyledIcon = withTheme(({ theme: { colors, sizing } }) => ({
+  fill: colors.text.tertiary,
+  size: sizing.baseUnit * 1.5,
+  style: {
+    marginRight: 8,
+  },
+}))(Icon);
+
+const StyledH6 = styled(({ theme: { colors, sizing } }) => ({
+  color: colors.text.tertiary,
+  fontSize: sizing.baseUnit * 0.875,
+  marginTop: sizing.baseUnit / 4,
+}))(H6);
+
+const EventInfoContainer = styled({ marginBottom: 24, flexDirection: 'row' })(
+  View
+);
+
+const TextContainer = styled({ flexDirection: 'column' })(View);
+
+const EventInfoItem = ({ icon, title, subtitle }) => (
+  <EventInfoContainer>
+    <StyledIcon name={icon} />
+    <TextContainer>
+      <H4 bold>{title}</H4>
+      <StyledH6>{subtitle}</StyledH6>
+    </TextContainer>
+  </EventInfoContainer>
+);
+
+EventInfoItem.propTypes = {
+  icon: PropTypes.string.isRequired,
+  title: PropTypes.string,
+  subtitle: PropTypes.string,
+};
+
+export { FlexedScrollView, EventInfoItem };
diff --git a/apolloschurchapp/src/event/getEvent.js b/apolloschurchapp/src/event/getEvent.js
new file mode 100644
index 0000000..7035e1b
--- /dev/null
+++ b/apolloschurchapp/src/event/getEvent.js
@@ -0,0 +1,28 @@
+import gql from 'graphql-tag';
+
+export const EVENT_FRAGMENT = gql`
+  fragment eventFragment on Event {
+    id
+    name
+    location
+    start
+    end
+    image {
+      sources {
+        uri
+      }
+    }
+  }
+`;
+
+export default gql`
+  query getEvent($eventId: ID!) {
+    node(id: $eventId) {
+      __typename
+      ... on Event {
+        ...eventFragment
+      }
+    }
+  }
+  ${EVENT_FRAGMENT}
+`;
diff --git a/apolloschurchapp/src/event/index.js b/apolloschurchapp/src/event/index.js
new file mode 100644
index 0000000..b065c4c
--- /dev/null
+++ b/apolloschurchapp/src/event/index.js
@@ -0,0 +1,17 @@
+import { createStackNavigator } from 'react-navigation';
+
+import Event from './EventConnected';
+
+const EventNavigator = createStackNavigator(
+  {
+    Event,
+  },
+  {
+    initialRouteName: 'Event',
+    headerMode: 'float',
+    headerTransitionPreset: 'fade-in-place',
+    navigationOptions: { header: null },
+  }
+);
+
+export default EventNavigator;
diff --git a/apolloschurchapp/src/index.js b/apolloschurchapp/src/index.js
index 7fe89f1..114240e 100644
--- a/apolloschurchapp/src/index.js
+++ b/apolloschurchapp/src/index.js
@@ -1,53 +1,75 @@
+import hoistNonReactStatic from 'hoist-non-react-statics';
 import React from 'react';
 import { StatusBar } from 'react-native';
-import { createStackNavigator } from 'react-navigation';
-// import { Sentry } from 'react-native-sentry';
+import { createStackNavigator, createAppContainer } from 'react-navigation';
+import SplashScreen from 'react-native-splash-screen';
 
 import { BackgroundView, withTheme } from '@apollosproject/ui-kit';
-import MediaPlayer from 'apolloschurchapp/src/ui/MediaPlayer';
+import Passes from '@apollosproject/ui-passes';
+import { MediaPlayer } from '@apollosproject/ui-media-player';
+import Auth, { ProtectedRoute } from '@apollosproject/ui-auth';
+
 import Providers from './Providers';
-import NotificationsInit from './Notifications';
 import NavigationService from './NavigationService';
 import ContentSingle from './content-single';
+import Event from './event';
 import Tabs from './tabs';
-import Auth from './auth';
 import PersonalDetails from './user-settings/PersonalDetails';
 import ChangePassword from './user-settings/ChangePassword';
-
-// Sentry.config(
-//   'https://5908fa19ed37447f86b2717423cadec5:45dd3b58792b413cb67109c5e63a0bb7@sentry.io/1241658'
-// ).install();
+import Location from './user-settings/Locations';
+import LandingScreen from './LandingScreen';
+import UserWebBrowser from './user-web-browser';
+import Onboarding from './ui/Onboarding';
 
 const AppStatusBar = withTheme(({ theme }) => ({
   barStyle: 'dark-content',
   backgroundColor: theme.colors.paper,
 }))(StatusBar);
 
+const ProtectedRouteWithSplashScreen = (props) => {
+  const handleOnRouteChange = () => SplashScreen.hide();
+
+  return <ProtectedRoute {...props} onRouteChange={handleOnRouteChange} />;
+};
+
+// Hack to avoid needing to pass emailRequired through the navigator.navigate
+const EnhancedAuth = (props) => <Auth {...props} emailRequired />;
+// 😑
+hoistNonReactStatic(EnhancedAuth, Auth);
+
 const AppNavigator = createStackNavigator(
   {
+    ProtectedRoute: ProtectedRouteWithSplashScreen,
     Tabs,
     ContentSingle,
-    Auth,
+    Event,
+    Auth: EnhancedAuth,
     PersonalDetails,
     ChangePassword,
+    Location,
+    Passes,
+    UserWebBrowser,
+    Onboarding,
+    LandingScreen,
   },
   {
-    initialRouteName: 'Tabs',
+    initialRouteName: 'ProtectedRoute',
     mode: 'modal',
     headerMode: 'screen',
   }
 );
 
+const AppContainer = createAppContainer(AppNavigator);
+
 const App = () => (
   <Providers>
     <BackgroundView>
       <AppStatusBar barStyle="dark-content" />
-      <AppNavigator
+      <AppContainer
         ref={(navigatorRef) => {
           NavigationService.setTopLevelNavigator(navigatorRef);
         }}
       />
-      <NotificationsInit />
       <MediaPlayer />
     </BackgroundView>
   </Providers>
diff --git a/apolloschurchapp/src/live/LiveButton.js b/apolloschurchapp/src/live/LiveButton.js
index c5760e3..6e1fa30 100644
--- a/apolloschurchapp/src/live/LiveButton.js
+++ b/apolloschurchapp/src/live/LiveButton.js
@@ -12,7 +12,7 @@ import {
 } from '@apollosproject/ui-kit';
 import { WebBrowserConsumer } from 'apolloschurchapp/src/ui/WebBrowser';
 
-import getLiveStream from './getLiveStream';
+import GET_LIVE_STREAM from './getLiveStream';
 
 const LiveCard = styled(({ theme }) => ({
   backgroundColor: theme.colors.lightSecondary,
@@ -20,7 +20,7 @@ const LiveCard = styled(({ theme }) => ({
 
 const LiveNowButton = () => (
   <Query
-    query={getLiveStream}
+    query={GET_LIVE_STREAM}
     fetchPolicy="cache-and-network"
     pollInterval={60000}
   >
diff --git a/apolloschurchapp/src/scripture/ScriptureConnected.tests.js b/apolloschurchapp/src/scripture/ScriptureConnected.tests.js
index 04b5361..5666b7d 100644
--- a/apolloschurchapp/src/scripture/ScriptureConnected.tests.js
+++ b/apolloschurchapp/src/scripture/ScriptureConnected.tests.js
@@ -1,9 +1,8 @@
 import React from 'react';
-import renderer from 'react-test-renderer';
-import wait from 'waait';
 
 import Providers from 'apolloschurchapp/src/Providers';
 
+import { renderWithApolloData } from '../utils/testUtils';
 import getScripture from './getScripture';
 import ScriptureConnected from '.';
 
@@ -15,6 +14,7 @@ const mocks = {
   result: {
     data: {
       scripture: {
+        __typename: 'Scripture',
         id: 'GEN.1.1',
         reference: 'Genesis 1:1',
         copyright: 'PUBLIC DOMAIN',
@@ -27,12 +27,12 @@ const mocks = {
 
 describe('ScriptureConnected component', () => {
   it('renders without errors', async () => {
-    const tree = renderer.create(
-      <Providers mocks={[mocks]} addTypename={false}>
+    const tree = await renderWithApolloData(
+      <Providers mocks={[mocks]}>
         <ScriptureConnected references={['Genesis 1:1']} />
       </Providers>
     );
-    await wait(0); // wait for response from graphql
+
     expect(tree).toMatchSnapshot();
   });
 });
diff --git a/apolloschurchapp/src/scripture/index.js b/apolloschurchapp/src/scripture/index.js
index 5c7e682..5b23d5d 100644
--- a/apolloschurchapp/src/scripture/index.js
+++ b/apolloschurchapp/src/scripture/index.js
@@ -2,8 +2,8 @@ import React from 'react';
 import { Query } from 'react-apollo';
 import { get } from 'lodash';
 import PropTypes from 'prop-types';
-import ScriptureItem from 'apolloschurchapp/src/ui/Scripture/ScriptureItem';
-import getScripture from './getScripture';
+import { ScriptureItem } from '@apollosproject/ui-scripture';
+import GET_SCRIPTURE from './getScripture';
 
 /**
  * This is the data-bound "connected" scripture component.
@@ -15,7 +15,7 @@ const ScriptureConnected = ({
   references,
 }) =>
   references.map((query) => (
-    <Query query={getScripture} variables={{ query }} key={query}>
+    <Query query={GET_SCRIPTURE} variables={{ query }} key={query}>
       {({ loading, data }) => (
         <ScriptureComponent
           reference={get(data, 'scripture.reference', '')}
diff --git a/apolloschurchapp/src/store/Auth.tests.js b/apolloschurchapp/src/store/Auth.tests.js
deleted file mode 100644
index da6b401..0000000
--- a/apolloschurchapp/src/store/Auth.tests.js
+++ /dev/null
@@ -1,11 +0,0 @@
-import { client } from 'apolloschurchapp/src/client';
-
-import { resolvers } from '.';
-
-describe('Auth Store', () => {
-  it('logs a user out', async () => {
-    client.cache.writeData({ data: { authToken: 'some-auth-token' } });
-    resolvers.Mutation.logout({}, {}, { cache: client.cache });
-    expect(client.cache).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/store/MediaPlayer.tests.js b/apolloschurchapp/src/store/MediaPlayer.tests.js
deleted file mode 100644
index 68724b9..0000000
--- a/apolloschurchapp/src/store/MediaPlayer.tests.js
+++ /dev/null
@@ -1,58 +0,0 @@
-import { client } from 'apolloschurchapp/src/client';
-import gql from 'graphql-tag';
-
-import { resolvers, defaults } from '.';
-
-const query = gql`
-  query {
-    mediaPlayer @client {
-      currentTrack {
-        mediaSourceUri
-        posterSourceUri
-        title
-        artist
-      }
-      isPlaying
-      isFullscreen
-      isVisible
-    }
-  }
-`;
-
-const testTrack = {
-  parentId: 'parentId',
-  mediaSourceUri: 'mediaSourceUri',
-  posterSourceUri: 'posterSourceUri',
-  title: 'title',
-  artist: 'artist',
-};
-
-describe('MediaPlayer Store', () => {
-  beforeEach(() => {
-    client.writeData({ data: defaults });
-  });
-
-  it('plays a track', async () => {
-    resolvers.Mutation.mediaPlayerPlayNow({}, testTrack, {
-      cache: client.cache,
-    });
-    expect(client.query({ query })).resolves.toMatchSnapshot();
-  });
-  it('updates player state', async () => {
-    resolvers.Mutation.mediaPlayerPlayNow({}, testTrack, {
-      cache: client.cache,
-    });
-    expect(client.query({ query })).resolves.toMatchSnapshot();
-    resolvers.Mutation.mediaPlayerUpdateState(
-      {},
-      { isPlaying: false },
-      { cache: client.cache }
-    );
-    expect(client.query({ query })).resolves.toMatchSnapshot();
-    resolvers.Mutation.mediaPlayerUpdateState(
-      {},
-      { isPlaying: true },
-      { cache: client.cache }
-    );
-  });
-});
diff --git a/apolloschurchapp/src/store/index.js b/apolloschurchapp/src/store/index.js
index 2873934..66fdccb 100644
--- a/apolloschurchapp/src/store/index.js
+++ b/apolloschurchapp/src/store/index.js
@@ -1,242 +1,62 @@
-import { merge, get } from 'lodash';
 import gql from 'graphql-tag';
-import getLoginState from 'apolloschurchapp/src/auth/getLoginState';
-import { track, events } from 'apolloschurchapp/src/analytics';
-import { client } from '../client'; // eslint-disable-line
-import getAuthToken from './getAuthToken';
+
+import { schema as mediaPlayerSchema } from '@apollosproject/ui-media-player';
+import { updatePushId } from '@apollosproject/ui-notifications';
+import { CACHE_LOADED } from '../client/cache'; // eslint-disable-line
+
 // TODO: this will require more organization...ie...not keeping everything in one file.
 // But this is simple while our needs our small.
 
 export const schema = `
   type Query {
-    authToken: String
-    mediaPlayer: MediaPlayerState
-    isLoggedIn: Boolean
+    devicePushId: String
+    cacheLoaded: Boolean
+    notificationsEnabled: Boolean
   }
 
   type Mutation {
-    logout
-    mediaPlayerUpdateState(isPlaying: Boolean, isFullscreen: Boolean, isVisible: Boolean): Boolean
-    mediaPlayerSetPlayhead(currentTime: Float): Boolean
-    mediaPlayerPlayNow(
-      parentId: ID,
-      mediaSource: VideoMediaSource!,
-      posterSources: [ImageMediaSource],
-      title: String,
-      artist: String,
-      isVideo: Boolean,
-    ): Boolean
-
-    handleLogin(authToken: String!)
-  }
-
-  type MediaPlayerState {
-    currentTrack: MediaPlayerTrack
-    isPlaying: Boolean
-    isFullscreen: Boolean
-    isVisible: Boolean
-    currentTime: Float
-  }
-
-  type MediaPlayerProgress {
-    currentTime: Float
-    playableDuration: Float
-    seekableDuration: Float
-    duration: Float
-  }
-
-  type MediaPlayerTrack {
-    id: ID!
-    parentId: ID
-    mediaSource: VideoMediaSource!
-    posterSources: [ImageMediaSource]
-    title: String
-    artist: String
-    isVideo: Boolean
+    cacheMarkLoaded
+    updateDevicePushId(pushId: String!)
+    updatePushPermissions(enabled: Boolean!)
   }
+${mediaPlayerSchema}
 `;
 
 export const defaults = {
   __typename: 'Query',
-  authToken: null,
-  mediaPlayer: {
-    __typename: 'MediaPlayerState',
-    currentTrack: null,
-    isPlaying: false,
-    isFullscreen: false,
-    isVisible: false,
-    currentTime: 0,
-    showVideo: true,
-    muted: false,
-  },
+  cacheLoaded: false,
 };
 
-let trackId = 0;
+const GET_LOGGED_IN = gql`
+  query {
+    isLoggedIn @client
+  }
+`;
 
 export const resolvers = {
-  Query: {
-    isLoggedIn: () => {
-      // When logging out, this query returns an error.
-      // Rescue the error, and return false.
-      try {
-        const { authToken } = client.readQuery({ query: getAuthToken });
-        return !!authToken;
-      } catch (e) {
-        return false;
-      }
-    },
-  },
   Mutation: {
-    logout: (root, variables, { cache }) => {
-      client.resetStore();
-      cache.writeData({
-        data: defaults,
-      });
-      track({ eventName: events.UserLogout });
-      return null;
-    },
-
-    handleLogin: async (root, { authToken }, { cache }) => {
-      try {
-        await cache.writeQuery({
-          query: getAuthToken,
-          data: { authToken },
-        });
-        await cache.writeQuery({
-          query: getLoginState,
-          data: { isLoggedIn: true },
-        });
-        await cache.writeData({
-          data: { authToken },
-        });
-
-        track({ eventName: events.UserLogin });
-      } catch (e) {
-        throw e.message;
-      }
-
-      return null;
-    },
-
-    mediaPlayerPlayNow: (root, trackInfo, { cache }) => {
-      const query = gql`
-        query {
-          mediaPlayer {
-            isFullscreen
-          }
-        }
-      `;
-      const mediaTrack = merge(
-        {
-          __typename: 'MediaPlayerTrack',
-          parentId: null,
-          mediaSource: null,
-          posterSources: null,
-          title: null,
-          artist: null,
-          isVideo: false,
-        },
-        trackInfo
-      );
-
-      const { mediaPlayer } = cache.readQuery({ query });
-
-      const newMediaPlayerState = {
-        __typename: 'MediaPlayerState',
-        isPlaying: true,
-        isVisible: true,
-        isFullscreen: mediaTrack.isVideo
-          ? true
-          : (mediaPlayer && mediaPlayer.isFullscreen) || false,
-        currentTrack: mediaTrack,
-        currentTime: 0,
-        showVideo: mediaTrack.isVideo,
-        muted: false,
-      };
-
-      if (
-        // if same track
-        mediaPlayer &&
-        mediaPlayer.currentTrack &&
-        mediaPlayer.currentTrack.mediaSource.uri === mediaTrack.mediaSource.uri
-      ) {
-        // use the same Id
-        newMediaPlayerState.currentTrack.id = mediaPlayer.currentTrack.id;
-      } else {
-        // otherwise reset progress and use new Id
-        newMediaPlayerState.currentTrack.id = trackId;
-        newMediaPlayerState.progress = null;
-        trackId += 1;
-      }
-
-      cache.writeData({
-        query,
-        data: {
-          mediaPlayer: newMediaPlayerState,
-        },
-      });
-
-      track({
-        eventName: events.UserPlayedMedia,
-        properties: {
-          uri: mediaTrack.uri,
-          title: mediaTrack.title,
-          type: mediaTrack.isVideo ? 'Video' : 'Audio',
-        },
-      });
-      return null;
-    },
-    mediaPlayerUpdateState: (
-      root,
-      { isPlaying, isFullscreen, isVisible, showVideo, muted },
-      { cache }
-    ) => {
-      const query = gql`
-        query {
-          mediaPlayer @client {
-            isPlaying
-            isFullscreen
-            isVisible
-            showVideo
-            muted
-          }
-        }
-      `;
-      const { mediaPlayer } = cache.readQuery({ query });
+    cacheMarkLoaded: async (root, args, { cache, client }) => {
       cache.writeQuery({
-        query,
+        query: CACHE_LOADED,
         data: {
-          mediaPlayer: merge(mediaPlayer, {
-            isPlaying,
-            isFullscreen,
-            isVisible,
-            showVideo,
-            muted,
-            __typename: 'MediaPlayerState',
-          }),
+          cacheLoaded: true,
         },
       });
-      return null;
-    },
-    mediaPlayerSetPlayhead: (root, { currentTime }, { cache }) => {
-      const query = gql`
-        query {
-          mediaPlayer @client {
-            currentTime
+      const { data: { isLoggedIn } = {} } = await client.query({
+        query: GET_LOGGED_IN,
+      });
+
+      const { pushId } = cache.readQuery({
+        query: gql`
+          query {
+            pushId @client
           }
-        }
-      `;
-      const { mediaPlayer } = cache.readQuery({ query });
-      cache.writeQuery({
-        query,
-        data: {
-          mediaPlayer: {
-            __typename: 'MediaPlayerState',
-            currentTime:
-              currentTime || get(mediaPlayer.progress, 'currentTime') || 0,
-          },
-        },
+        `,
       });
+
+      if (isLoggedIn && pushId) {
+        updatePushId({ pushId, client });
+      }
       return null;
     },
   },
diff --git a/apolloschurchapp/src/tabs/connect/ActionBar.js b/apolloschurchapp/src/tabs/connect/ActionBar.js
new file mode 100644
index 0000000..8708fda
--- /dev/null
+++ b/apolloschurchapp/src/tabs/connect/ActionBar.js
@@ -0,0 +1,37 @@
+import React from 'react';
+import { ActionBar, ActionBarItem } from '@apollosproject/ui-kit';
+import { withNavigation } from 'react-navigation';
+import PropTypes from 'prop-types';
+import { WebBrowserConsumer } from 'apolloschurchapp/src/ui/WebBrowser';
+
+const Toolbar = ({ navigation }) => (
+  <WebBrowserConsumer>
+    {(openUrl) => (
+      <ActionBar>
+        <ActionBarItem
+          onPress={() => navigation.navigate('Passes')}
+          icon="check"
+          label="Check-in"
+        />
+        <ActionBarItem
+          onPress={() => openUrl('https://apollosrock.newspring.cc/page/186')}
+          icon="download"
+          label="Give"
+        />
+        <ActionBarItem
+          onPress={() => navigation.navigate('TestingControlPanel')}
+          icon="information"
+          label="Test"
+        />
+      </ActionBar>
+    )}
+  </WebBrowserConsumer>
+);
+
+Toolbar.propTypes = {
+  navigation: PropTypes.shape({
+    navigate: PropTypes.func.isRequired,
+  }).isRequired,
+};
+
+export default withNavigation(Toolbar);
diff --git a/apolloschurchapp/src/tabs/connect/ActionTable/index.js b/apolloschurchapp/src/tabs/connect/ActionTable/index.js
index c68be5c..d376af6 100644
--- a/apolloschurchapp/src/tabs/connect/ActionTable/index.js
+++ b/apolloschurchapp/src/tabs/connect/ActionTable/index.js
@@ -40,8 +40,8 @@ const ActionTable = () => (
             onPress={() => openUrl('https://apollosrock.newspring.cc/page/235')}
           >
             <Cell>
-              <CellIcon name="check" />
               <CellText>Find a serving opportunity</CellText>
+              <CellIcon name="arrow-next" />
             </Cell>
           </Touchable>
           <Divider />
@@ -49,8 +49,8 @@ const ActionTable = () => (
             onPress={() => openUrl('https://apollosrock.newspring.cc/page/236')}
           >
             <Cell>
-              <CellIcon name="groups" />
               <CellText>Join a small group</CellText>
+              <CellIcon name="arrow-next" />
             </Cell>
           </Touchable>
           <Divider />
@@ -58,8 +58,8 @@ const ActionTable = () => (
             onPress={() => openUrl('https://apollosrock.newspring.cc/page/233')}
           >
             <Cell>
-              <CellIcon name="share" />
               <CellText>I need prayer</CellText>
+              <CellIcon name="arrow-next" />
             </Cell>
           </Touchable>
           <Divider />
@@ -67,8 +67,8 @@ const ActionTable = () => (
             onPress={() => openUrl('https://apollosrock.newspring.cc/page/186')}
           >
             <Cell>
-              <CellIcon name="download" />
               <CellText>I would like to give</CellText>
+              <CellIcon name="arrow-next" />
             </Cell>
           </Touchable>
         </TableView>
@@ -79,6 +79,7 @@ const ActionTable = () => (
             <Cell>
               <CellIcon name="settings" />
               <CellText>Open Testing Panel</CellText>
+              <CellIcon name="arrow-next" />
             </Cell>
           </Touchable>
         </TableView>
diff --git a/apolloschurchapp/src/tabs/connect/Connect.js b/apolloschurchapp/src/tabs/connect/Connect.js
index 8de06b1..4ba12d4 100644
--- a/apolloschurchapp/src/tabs/connect/Connect.js
+++ b/apolloschurchapp/src/tabs/connect/Connect.js
@@ -1,46 +1,13 @@
 import React, { PureComponent } from 'react';
-import { ScrollView, SafeAreaView } from 'react-native';
-import { Query } from 'react-apollo';
-import { get } from 'lodash';
+import { ScrollView } from 'react-native';
+import { SafeAreaView } from 'react-navigation';
 import PropTypes from 'prop-types';
 
-import { LoginButton } from 'apolloschurchapp/src/auth';
-import {
-  H1,
-  BodyText,
-  Paragraph,
-  BackgroundView,
-  withTheme,
-  styled,
-  Icon,
-  PaddedView,
-} from '@apollosproject/ui-kit';
+import { BackgroundView } from '@apollosproject/ui-kit';
 import ActionTable from './ActionTable';
-import { UserAvatarHeaderConnected } from './UserAvatarHeader';
+import ActionBar from './ActionBar';
+import UserAvatarHeader from './UserAvatarHeader';
 import { RecentlyLikedTileFeedConnected } from './RecentlyLikedTileFeed';
-import getLoginState from './getLoginState';
-
-const Title = styled(({ theme }) => ({
-  color: theme.colors.primary,
-  paddingBottom: theme.helpers.verticalRhythm(1.5),
-}))(H1);
-
-const BrandIcon = withTheme(({ theme }) => ({
-  name: 'brand-icon',
-  size: theme.sizing.baseUnit * 2.25,
-  marginBottom: theme.sizing.baseUnit,
-  fill: theme.colors.primary,
-}))(Icon);
-
-const Header = styled(({ theme }) => ({
-  paddingBottom: theme.sizing.baseUnit * 1.5,
-  backgroundColor: theme.colors.background.paper,
-  paddingTop: theme.sizing.baseUnit * 4,
-}))(PaddedView);
-
-const StyledLoginButton = styled(({ theme }) => ({
-  marginVertical: theme.sizing.baseUnit,
-}))(LoginButton);
 
 class Connect extends PureComponent {
   static navigationOptions = () => ({
@@ -58,45 +25,14 @@ class Connect extends PureComponent {
   render() {
     return (
       <BackgroundView>
-        <Query query={getLoginState}>
-          {({ data }) => {
-            if (get(data, 'isLoggedIn', false))
-              return (
-                <SafeAreaView>
-                  <ScrollView>
-                    <UserAvatarHeaderConnected key="UserAvatarHeaderConnected" />
-                    <RecentlyLikedTileFeedConnected key="RecentlyLikedTileFeedConnected" />
-                    <ActionTable />
-                  </ScrollView>
-                </SafeAreaView>
-              );
-            return (
-              <SafeAreaView>
-                <ScrollView>
-                  <Header>
-                    <BrandIcon />
-                    <Title>Connect!</Title>
-                    <Paragraph>
-                      <BodyText>
-                        Our mission is to help you connect to others as well as
-                        help you in your walk with Christ.
-                      </BodyText>
-                    </Paragraph>
-                    <Paragraph>
-                      <BodyText>
-                        By joining this community, you will unlock amazing
-                        features like; curated content and devotionals, simple
-                        event registration, and easy online giving!
-                      </BodyText>
-                    </Paragraph>
-                    <StyledLoginButton />
-                  </Header>
-                  <ActionTable />
-                </ScrollView>
-              </SafeAreaView>
-            );
-          }}
-        </Query>
+        <SafeAreaView>
+          <ScrollView>
+            <UserAvatarHeader />
+            <ActionBar />
+            <RecentlyLikedTileFeedConnected />
+            <ActionTable />
+          </ScrollView>
+        </SafeAreaView>
       </BackgroundView>
     );
   }
diff --git a/apolloschurchapp/src/tabs/connect/LikedContentList/LikedContentList.tests.js b/apolloschurchapp/src/tabs/connect/LikedContentList/LikedContentList.tests.js
index f6fadb7..673817c 100644
--- a/apolloschurchapp/src/tabs/connect/LikedContentList/LikedContentList.tests.js
+++ b/apolloschurchapp/src/tabs/connect/LikedContentList/LikedContentList.tests.js
@@ -4,18 +4,18 @@ import wait from 'waait';
 
 import Providers from 'apolloschurchapp/src/Providers';
 
-import getLikedContent from '../getLikedContent';
+import GET_LIKED_CONTENT from '../getLikedContent';
 import LikedContentList from '.';
 
 describe('LikedContentList component', () => {
   it('renders LikedContentList', async () => {
     const mock = {
       request: {
-        query: getLikedContent,
+        query: GET_LIKED_CONTENT,
       },
       result: {
         data: {
-          getAllLikedContent: [
+          likedContent: [
             {
               __typename: 'UniversalContentItem',
               id: 'UniversalContentItem:4148aeb9482181025e9cad42826e676a',
diff --git a/apolloschurchapp/src/tabs/connect/LikedContentList/index.js b/apolloschurchapp/src/tabs/connect/LikedContentList/index.js
index 2fd7fda..38dedb3 100644
--- a/apolloschurchapp/src/tabs/connect/LikedContentList/index.js
+++ b/apolloschurchapp/src/tabs/connect/LikedContentList/index.js
@@ -1,11 +1,13 @@
 import React, { PureComponent } from 'react';
 import PropTypes from 'prop-types';
 import { Query } from 'react-apollo';
+import { get } from 'lodash';
 
 import { BackgroundView, FeedView } from '@apollosproject/ui-kit';
+import fetchMoreResolver from 'apolloschurchapp/src/utils/fetchMoreResolver';
 import ContentCardConnected from '../../../ui/ContentCardConnected';
 
-import getLikedContent from '../getLikedContent';
+import GET_LIKED_CONTENT from '../getLikedContent';
 /** A FeedView wrapped in a query to pull content data. */
 class LikedContentList extends PureComponent {
   /** Function for React Navigation to set information in the header. */
@@ -35,16 +37,27 @@ class LikedContentList extends PureComponent {
   render() {
     return (
       <BackgroundView>
-        <Query query={getLikedContent} fetchPolicy="cache-and-network">
-          {({ loading, error, data: { getAllLikedContent = [] }, refetch }) => (
+        <Query
+          query={GET_LIKED_CONTENT}
+          fetchPolicy="cache-and-network"
+          variables={{ first: 20 }}
+        >
+          {({ loading, error, data, refetch, fetchMore, variables }) => (
             <FeedView
               ListItemComponent={ContentCardConnected}
-              initialNumToRender={5}
-              content={getAllLikedContent}
+              content={get(data, 'likedContent.edges', []).map(
+                (edge) => edge.node
+              )}
               isLoading={loading}
               error={error}
               refetch={refetch}
               onPressItem={this.handleOnPress}
+              fetchMore={fetchMoreResolver({
+                collectionName: 'likedContent',
+                fetchMore,
+                variables,
+                data,
+              })}
             />
           )}
         </Query>
diff --git a/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeed.js b/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeed.js
index 8b4437d..b829473 100644
--- a/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeed.js
+++ b/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeed.js
@@ -4,32 +4,49 @@ import { withNavigation } from 'react-navigation';
 import PropTypes from 'prop-types';
 
 import {
+  styled,
+  withTheme,
   PaddedView,
-  H4,
-  UIText,
+  H5,
+  H6,
   HorizontalTileFeed,
-  styled,
   ButtonLink,
-  withIsLoading,
   TouchableScale,
+  Touchable,
+  withIsLoading,
 } from '@apollosproject/ui-kit';
 
-import ContentCard from 'apolloschurchapp/src/ui/ContentCardConnected';
+import HorizontalContentCardConnected from 'apolloschurchapp/src/ui/HorizontalContentCardConnected';
 
-const RowHeader = styled({
+const RowHeader = styled(({ theme }) => ({
   flexDirection: 'row',
   justifyContent: 'space-between',
   alignItems: 'center',
-  paddingVertical: 0,
-})(PaddedView);
+  zIndex: 2, // UX hack to improve tapability. Positions RowHeader above StyledHorizontalTileFeed
+  paddingTop: theme.sizing.baseUnit * 0.5,
+  paddingLeft: theme.sizing.baseUnit,
+}))(View);
 
 const Name = styled({
-  flexGrow: 1,
+  flexGrow: 2,
 })(View);
 
-const LikedContentLink = styled({
-  flexDirection: 'row-reverse',
-})(View);
+const ButtonLinkSpacing = styled(({ theme }) => ({
+  flexDirection: 'row', // correctly positions the loading state
+  justifyContent: 'flex-end', // correctly positions the loading state
+  padding: theme.sizing.baseUnit, // UX hack to improve tapability.
+}))(View);
+
+const AndroidTouchableFix = withTheme(({ theme }) => ({
+  borderRadius: theme.sizing.baseUnit / 2,
+}))(Touchable);
+
+const StyledHorizontalTileFeed = styled(({ theme }) => ({
+  /* UX hack to improve tapability. The magic number below happens to be the number of pixels that
+   * aligns everything in the same place as if none of the UX hacks were there. */
+  marginTop: theme.sizing.baseUnit * -1.25,
+  zIndex: 1,
+}))(HorizontalTileFeed);
 
 class RecentlyLikedTileFeed extends Component {
   static propTypes = {
@@ -57,11 +74,9 @@ class RecentlyLikedTileFeed extends Component {
         });
       }}
     >
-      <ContentCard
+      <HorizontalContentCardConnected
         isLoading={item.isLoading}
-        tile
         contentId={item.id}
-        inHorizontalList
       />
     </TouchableScale>
   );
@@ -73,22 +88,23 @@ class RecentlyLikedTileFeed extends Component {
       <PaddedView horizontal={false}>
         <RowHeader>
           <Name>
-            <H4 isLoading={isLoading}>{name}</H4>
+            <H5>{name}</H5>
           </Name>
-          <LikedContentLink>
-            <UIText isLoading={isLoading}>
-              <ButtonLink
-                onPress={() => {
-                  navigation.navigate('LikedContentList');
-                }}
-              >
-                View All
-              </ButtonLink>
-            </UIText>
-          </LikedContentLink>
+
+          <AndroidTouchableFix
+            onPress={() => {
+              navigation.navigate('LikedContentList');
+            }}
+          >
+            <ButtonLinkSpacing>
+              <H6>
+                {/* we have to wrap "View All" in a ButtonLink twice to inherit styles and color correctly. */}
+                <ButtonLink>View All</ButtonLink>
+              </H6>
+            </ButtonLinkSpacing>
+          </AndroidTouchableFix>
         </RowHeader>
-        <HorizontalTileFeed
-          initialNumToRender={5}
+        <StyledHorizontalTileFeed
           content={content}
           renderItem={this.titleImageItem}
           loadingStateObject={this.loadingStateObject}
diff --git a/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeedConnected.js b/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeedConnected.js
index a86843d..bfccbe1 100644
--- a/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeedConnected.js
+++ b/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeedConnected.js
@@ -2,18 +2,25 @@ import React from 'react';
 import { Query } from 'react-apollo';
 import PropTypes from 'prop-types';
 
-import getLikedContent from '../getLikedContent';
+import GET_LIKED_CONTENT from '../getLikedContent';
 import RecentlyLikedTileFeed from './RecentlyLikedTileFeed';
 
 const RecentlyLikedTileFeedConnected = ({ navigation }) => (
-  <Query query={getLikedContent} fetchPolicy="cache-and-network">
-    {({ loading, data: { getAllLikedContent = [] } = {} }) => {
-      if (!getAllLikedContent.length) return null;
+  <Query
+    query={GET_LIKED_CONTENT}
+    fetchPolicy="cache-and-network"
+    variables={{ first: 3 }}
+  >
+    {({
+      loading,
+      data: { likedContent: { edges = [] } = { edges: [] } } = {},
+    }) => {
+      if (!edges.length) return null;
       return (
         <RecentlyLikedTileFeed
           id={'liked'}
           name={'Recently Liked'}
-          content={getAllLikedContent}
+          content={edges.map((e) => e.node)}
           isLoading={loading}
           navigation={navigation}
           loadingStateObject={{
diff --git a/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeedConnected.tests.js b/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeedConnected.tests.js
index 20e6417..a8620c1 100644
--- a/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeedConnected.tests.js
+++ b/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeedConnected.tests.js
@@ -1,107 +1,108 @@
 import React from 'react';
-import renderer from 'react-test-renderer';
-import wait from 'waait';
 
 import Providers from 'apolloschurchapp/src/Providers';
 
-import getLikedContent from '../getLikedContent';
+import { renderWithApolloData } from '../../../utils/testUtils';
+
+import GET_LIKED_CONTENT from '../getLikedContent';
 import RecentlyLikedTileFeedConnected from './RecentlyLikedTileFeedConnected';
 
 describe('RecentlyLikedTileFeedConnected', () => {
   it('renders a RecentlyLikedTileFeedConnected', async () => {
     const mock = {
       request: {
-        query: getLikedContent,
+        query: GET_LIKED_CONTENT,
+        variables: { first: 3 },
       },
       result: {
         data: {
-          getAllLikedContent: [
-            {
-              id: 'UniversalContentItem:296373ecb53580855cadffa0375ebe18',
-              __typename: 'UniversalContentItem',
-              title: 'Guys Night!',
-              coverImage: {
-                sources: [
-                  {
-                    uri:
-                      'https://apollosrock.newspring.cc/GetImage.ashx?guid=58c037fa-cc7f-4d72-9571-a0cc0558e346',
-                  },
-                ],
-              },
-              sharing: {
-                title: 'Guys Night!',
-                message: '',
-                url: 'https://apollosrock.newspring.cc/',
-              },
+          likedContent: {
+            __typename: 'ContentItemsConnection',
+            pageInfo: {
+              __typename: 'PaginationInfo',
+              endCursor: '123',
             },
-            {
-              id: 'UniversalContentItem:39193b5ad28717ebfeab4d226664d8e7',
-              __typename: 'UniversalContentItem',
-              title: 'This August at NewSpring',
-              coverImage: {
-                sources: [
-                  {
-                    uri:
-                      'https://apollosrock.newspring.cc/GetImage.ashx?guid=f54b0db0-95f5-44ad-b8f2-8bcd1b23cfdb',
+            edges: [
+              {
+                __typename: 'ContentItemsConnectionEdge',
+                node: {
+                  __typename: 'UniversalContentItem',
+                  id: 'UniversalContentItem:d57994350b9d213866b24dea3a97433d',
+                  coverImage: null,
+                  parentChannel: {
+                    id: 'ContentChannel:4f68015ba18662a7409d1219a4ce013e',
+                    name: 'Editorial',
+                    iconName: 'text',
+                    __typename: 'ContentChannel',
                   },
-                ],
-              },
-              sharing: {
-                title: 'This August at NewSpring',
-                message: '',
-                url: 'https://apollosrock.newspring.cc/',
+                  title: 'Mea Animal Aperiam Ornatus Eu',
+                  summary: 'Bla bla bla',
+                  theme: null,
+                  isLiked: false,
+                  likedCount: 0,
+                  videos: [],
+                  audios: [],
+                },
               },
-            },
-            {
-              id: 'UniversalContentItem:ae8ec75906ba7437c49ad2534b5024db',
-              __typename: 'UniversalContentItem',
-              title: 'A Place to Worship Free of Fear',
-              coverImage: {
-                sources: [
-                  {
-                    uri:
-                      'https://apollosrock.newspring.cc/GetImage.ashx?guid=a65bc45d-f961-4b7e-a899-63eb1f9b8da9',
+              {
+                __typename: 'ContentItemsConnectionEdge',
+                node: {
+                  __typename: 'UniversalContentItem',
+                  id: 'UniversalContentItem:b36e55d803443431e96bb4b5068147ec',
+                  coverImage: null,
+                  parentChannel: {
+                    id: 'ContentChannel:4f68015ba18662a7409d1219a4ce013e',
+                    name: 'Editorial',
+                    iconName: 'text',
+                    __typename: 'ContentChannel',
                   },
-                ],
-              },
-              sharing: {
-                title: 'A Place to Worship Free of Fear',
-                message: '',
-                url: 'https://apollosrock.newspring.cc/',
+                  title: 'Probo Senserit Id Mea, Ut Sed Malis Postea,',
+                  summary: 'Bla bla bla',
+                  theme: null,
+                  isLiked: false,
+                  likedCount: 0,
+                  videos: [],
+                  audios: [],
+                },
               },
-            },
-          ],
+            ],
+          },
         },
       },
     };
     const navigation = { navigate: jest.fn(), getParam: jest.fn() };
-    const tree = renderer.create(
+    const tree = await renderWithApolloData(
       <Providers mocks={[mock]}>
         <RecentlyLikedTileFeedConnected navigation={navigation} />
       </Providers>
     );
-    await wait(0); // wait for response from graphql
     expect(tree).toMatchSnapshot();
   });
 
   it('renders nothing if no liked content', async () => {
     const mock = {
       request: {
-        query: getLikedContent,
+        query: GET_LIKED_CONTENT,
       },
       result: {
         data: {
-          getAllLikedContent: [],
+          likedContent: {
+            __typename: 'ContentItemsConnection',
+            pageInfo: {
+              __typename: 'PaginationInfo',
+              endCursor: null,
+            },
+            edges: [],
+          },
         },
       },
     };
     const navigation = { navigate: jest.fn(), getParam: jest.fn() };
-    const tree = renderer.create(
+    const tree = await renderWithApolloData(
       <Providers mocks={[mock]}>
         <RecentlyLikedTileFeedConnected navigation={navigation} />
       </Providers>
     );
-    await wait(0); // wait for response from graphql
     expect(tree).toMatchSnapshot();
   });
 });
diff --git a/apolloschurchapp/src/tabs/connect/UserAvatarHeader.js b/apolloschurchapp/src/tabs/connect/UserAvatarHeader.js
new file mode 100644
index 0000000..9f1b65a
--- /dev/null
+++ b/apolloschurchapp/src/tabs/connect/UserAvatarHeader.js
@@ -0,0 +1,44 @@
+import React from 'react';
+import { Query } from 'react-apollo';
+import PropTypes from 'prop-types';
+import { withNavigation } from 'react-navigation';
+
+import { Avatar, H3, styled, PaddedView } from '@apollosproject/ui-kit';
+import GET_USER_PROFILE from './getUserProfile';
+
+const Container = styled({
+  alignItems: 'center',
+  justifyContent: 'center',
+})(PaddedView);
+
+const UserAvatarHeader = ({ navigation }) => (
+  <Query query={GET_USER_PROFILE} fetchPolicy="cache-and-network">
+    {({
+      data: { currentUser: { profile: { photo, firstName } = {} } = {} } = {},
+    }) => (
+      <Container>
+        <PaddedView horizontal={false}>
+          <Avatar
+            source={photo}
+            size="large"
+            buttonIcon="settings"
+            onPressIcon={() => navigation.navigate('UserSettings')}
+          />
+        </PaddedView>
+        <H3>
+          Hello
+          {firstName ? ` ${firstName}` : ''}!
+        </H3>
+      </Container>
+    )}
+  </Query>
+);
+
+UserAvatarHeader.propTypes = {
+  navigation: PropTypes.shape({
+    getParam: PropTypes.func,
+    navigate: PropTypes.func,
+  }),
+};
+
+export default withNavigation(UserAvatarHeader);
diff --git a/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeader.js b/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeader.js
deleted file mode 100644
index 1484a66..0000000
--- a/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeader.js
+++ /dev/null
@@ -1,77 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-import { compose } from 'recompose';
-import { withNavigation } from 'react-navigation';
-
-import UserAvatarView from 'apolloschurchapp/src/ui/UserAvatarView';
-
-import {
-  withIsLoading,
-  Touchable,
-  ConnectedImage,
-  Icon,
-  withTheme,
-  styled,
-  PaddedView,
-  FlexedView,
-} from '@apollosproject/ui-kit';
-
-const Container = styled(({ theme }) => ({
-  alignItems: 'center',
-  flexDirection: 'row',
-  paddingTop: theme.sizing.baseUnit * 2,
-  paddingBottom: 0,
-}))(PaddedView);
-
-const SettingsIcon = compose(
-  withTheme(({ theme }) => ({
-    name: 'settings',
-    fill: theme.colors.text.tertiary,
-  }))
-)(Icon);
-
-const UserAvatarHeader = ({
-  firstName,
-  lastName,
-  location,
-  photo,
-  refetch,
-  navigation,
-  disabled,
-  isLoading,
-}) => (
-  <Container>
-    <FlexedView>
-      <UserAvatarView
-        firstName={firstName}
-        lastName={lastName}
-        location={location}
-        photo={photo}
-        refetch={refetch}
-        disabled={disabled}
-        isLoading={isLoading}
-      />
-    </FlexedView>
-    <Touchable
-      onPress={() => navigation.navigate('UserSettings', { photo, refetch })}
-    >
-      <SettingsIcon />
-    </Touchable>
-  </Container>
-);
-
-UserAvatarHeader.propTypes = {
-  firstName: PropTypes.string,
-  lastName: PropTypes.string,
-  location: PropTypes.string,
-  photo: ConnectedImage.propTypes.source,
-  refetch: PropTypes.func,
-  navigation: PropTypes.shape({
-    getParam: PropTypes.func,
-    navigate: PropTypes.func,
-  }),
-  disabled: PropTypes.bool,
-  isLoading: PropTypes.bool,
-};
-
-export default withNavigation(withIsLoading(UserAvatarHeader));
diff --git a/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeader.test.js b/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeader.test.js
deleted file mode 100644
index 314dfa6..0000000
--- a/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeader.test.js
+++ /dev/null
@@ -1,65 +0,0 @@
-import React from 'react';
-import renderer from 'react-test-renderer';
-
-import Providers from 'apolloschurchapp/src/Providers';
-import UserAvatarHeader from './UserAvatarHeader';
-
-describe('user avatar header', () => {
-  it('renders user avatar header if logged in', () => {
-    const props = {
-      theme: {
-        colors: {
-          text: {
-            tertiary: 'red',
-          },
-        },
-      },
-      firstName: 'Isaac',
-      lastName: 'Hardy',
-      location: 'Anderson, SC',
-      photo: {
-        uri: 'google.com',
-      },
-      refetch: jest.fn(),
-      navigation: jest.fn(),
-      disabled: true,
-      isLoading: false,
-    };
-
-    const tree = renderer.create(
-      <Providers>
-        <UserAvatarHeader {...props} />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-
-  it('renders placeholder when loading', () => {
-    const props = {
-      theme: {
-        colors: {
-          text: {
-            tertiary: 'red',
-          },
-        },
-      },
-      firstName: 'Isaac',
-      lastName: 'Hardy',
-      location: 'Anderson, SC',
-      photo: {
-        uri: 'google.com',
-      },
-      refetch: jest.fn(),
-      navigation: jest.fn(),
-      disabled: true,
-      isLoading: true,
-    };
-
-    const tree = renderer.create(
-      <Providers>
-        <UserAvatarHeader {...props} />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeaderConnected.js b/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeaderConnected.js
deleted file mode 100644
index 599f719..0000000
--- a/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeaderConnected.js
+++ /dev/null
@@ -1,38 +0,0 @@
-import React from 'react';
-import { Query } from 'react-apollo';
-import PropTypes from 'prop-types';
-
-import getUserProfile from '../getUserProfile';
-import UserAvatarHeader from './UserAvatarHeader';
-
-const UserAvatarHeaderConnected = ({ navigation }) => (
-  <Query query={getUserProfile} fetchPolicy="cache-and-network">
-    {({
-      data: {
-        currentUser: {
-          profile: { photo, firstName, lastName, location } = {},
-        } = {},
-      } = {},
-      refetch,
-    }) => (
-      <UserAvatarHeader
-        firstName={firstName}
-        lastName={lastName}
-        location={location}
-        photo={photo}
-        refetch={refetch}
-        navigation={navigation}
-        disabled
-      />
-    )}
-  </Query>
-);
-
-UserAvatarHeaderConnected.propTypes = {
-  navigation: PropTypes.shape({
-    getParam: PropTypes.func,
-    navigate: PropTypes.func,
-  }),
-};
-
-export default UserAvatarHeaderConnected;
diff --git a/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeaderConnected.tests.js b/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeaderConnected.tests.js
deleted file mode 100644
index e0a8488..0000000
--- a/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeaderConnected.tests.js
+++ /dev/null
@@ -1,44 +0,0 @@
-import React from 'react';
-import renderer from 'react-test-renderer';
-import wait from 'waait';
-
-import Providers from 'apolloschurchapp/src/Providers';
-
-import getUserProfile from '../getUserProfile';
-import UserAvatarHeaderConnected from './UserAvatarHeaderConnected';
-
-describe('user avatar header connect', () => {
-  it('renders user avatar header if logged in', async () => {
-    const mock = {
-      request: {
-        query: getUserProfile,
-      },
-      result: {
-        data: {
-          currentUser: {
-            id: 'AuthenticatedUser:057b0758543270d1cb21784cac4d3f5c',
-            profile: {
-              firstName: 'Isaac',
-              lastName: 'Hardy',
-              location: 'Anderson, SC',
-              email: 'isaac.hardy@newspring.cc',
-              nickName: 'Ike',
-              photo: {
-                uri:
-                  'https://apollosrock.newspring.cc:443/GetImage.ashx?guid=60fd5f35-3167-4c26-9a30-d44937287b87',
-              },
-            },
-          },
-        },
-      },
-    };
-    const navigation = { navigate: jest.fn(), getParam: jest.fn() };
-    const tree = renderer.create(
-      <Providers mocks={[mock]}>
-        <UserAvatarHeaderConnected navigation={navigation} />
-      </Providers>
-    );
-    await wait(0); // wait for response from graphql
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/tabs/connect/UserAvatarHeader/index.js b/apolloschurchapp/src/tabs/connect/UserAvatarHeader/index.js
deleted file mode 100644
index a8b66ec..0000000
--- a/apolloschurchapp/src/tabs/connect/UserAvatarHeader/index.js
+++ /dev/null
@@ -1,2 +0,0 @@
-export UserAvatarHeader from './UserAvatarHeader';
-export UserAvatarHeaderConnected from './UserAvatarHeaderConnected';
diff --git a/apolloschurchapp/src/tabs/connect/getLikedContent.js b/apolloschurchapp/src/tabs/connect/getLikedContent.js
index 0252dd1..67a6720 100644
--- a/apolloschurchapp/src/tabs/connect/getLikedContent.js
+++ b/apolloschurchapp/src/tabs/connect/getLikedContent.js
@@ -1,17 +1,24 @@
 import gql from 'graphql-tag';
 
-import { largeCardFragment } from 'apolloschurchapp/src/ui/ContentCardConnected';
-import { contentItemFragment } from 'apolloschurchapp/src/content-single/getContentItem';
+import { LARGE_CARD_FRAGMENT } from 'apolloschurchapp/src/ui/ContentCardConnected';
+import { CONTENT_ITEM_FRAGMENT } from 'apolloschurchapp/src/content-single/getContentItem';
 
 export default gql`
-  query getAllLikedContent {
-    getAllLikedContent {
-      ... on ContentItem {
-        ...contentItemFragment
-        ...largeCardFragment
+  query getAllLikedContent($first: Int, $after: String) {
+    likedContent(first: $first, after: $after) {
+      pageInfo {
+        endCursor
+      }
+      edges {
+        node {
+          ... on ContentItem {
+            ...contentItemFragment
+            ...largeCardFragment
+          }
+        }
       }
     }
   }
-  ${contentItemFragment}
-  ${largeCardFragment}
+  ${CONTENT_ITEM_FRAGMENT}
+  ${LARGE_CARD_FRAGMENT}
 `;
diff --git a/apolloschurchapp/src/tabs/connect/getUserProfile.js b/apolloschurchapp/src/tabs/connect/getUserProfile.js
index b591a5b..ef3b2c8 100644
--- a/apolloschurchapp/src/tabs/connect/getUserProfile.js
+++ b/apolloschurchapp/src/tabs/connect/getUserProfile.js
@@ -1,19 +1,26 @@
 import gql from 'graphql-tag';
+import CampusParts from 'apolloschurchapp/src/user-settings/Locations/campusFragment';
 
 export default gql`
-  query {
+  query getCurrentUserProfile {
     currentUser {
       id
       profile {
+        id
         firstName
         lastName
-        location
+        campus {
+          ...CampusParts
+        }
         email
         nickName
+        gender
+        birthDate
         photo {
           uri
         }
       }
     }
   }
+  ${CampusParts}
 `;
diff --git a/apolloschurchapp/src/tabs/connect/index.js b/apolloschurchapp/src/tabs/connect/index.js
index 7091870..f1e447f 100644
--- a/apolloschurchapp/src/tabs/connect/index.js
+++ b/apolloschurchapp/src/tabs/connect/index.js
@@ -1,4 +1,5 @@
 import { createStackNavigator } from 'react-navigation';
+import { withTheme } from '@apollosproject/ui-kit';
 
 import UserSettings from 'apolloschurchapp/src/user-settings';
 
@@ -17,11 +18,16 @@ const ConnectNavigator = createStackNavigator(
   {
     initialRouteName: 'Connect',
     headerMode: 'screen',
+    defaultNavigationOptions: ({ screenProps }) => ({
+      headerTintColor: screenProps.headerTintColor,
+    }),
+    navigationOptions: { tabBarIcon: tabBarIcon('profile') },
   }
 );
 
-ConnectNavigator.navigationOptions = {
-  tabBarIcon: tabBarIcon('profile'),
-};
+const EnhancedConnect = withTheme(({ theme, ...props }) => ({
+  ...props,
+  screenProps: { headerTintColor: theme.colors.text.secondary },
+}))(ConnectNavigator);
 
-export default ConnectNavigator;
+export default EnhancedConnect;
diff --git a/apolloschurchapp/src/tabs/discover/Discover.js b/apolloschurchapp/src/tabs/discover/Discover.js
index 76d8b24..b53b8f7 100644
--- a/apolloschurchapp/src/tabs/discover/Discover.js
+++ b/apolloschurchapp/src/tabs/discover/Discover.js
@@ -1,55 +1,47 @@
 import React, { PureComponent } from 'react';
-import { Query } from 'react-apollo';
-import { get } from 'lodash';
+import { throttle } from 'lodash';
 
-import { FeedView, BackgroundView } from '@apollosproject/ui-kit';
+import { BackgroundView } from '@apollosproject/ui-kit';
 
-import TileContentFeed from './TileContentFeed';
-import getContentChannels from './getContentChannels';
+import SearchInputHeader, {
+  ReactNavigationStyleReset,
+} from '../../ui/SearchInputHeader';
 
-const childContentItemLoadingState = {
-  title: '',
-  isLoading: true,
-};
-
-const feedItemLoadingState = {
-  name: '',
-  isLoading: true,
-};
+import SearchFeed from './SearchFeed';
+import DiscoverFeed from './DiscoverFeed';
 
 class Discover extends PureComponent {
-  renderItem = ({ item }) => (
-    <TileContentFeed
-      id={item.id}
-      name={item.name}
-      content={get(item, 'childContentItemsConnection.edges', []).map(
-        (edge) => edge.node
-      )}
-      isLoading={item.isLoading}
-      loadingStateObject={childContentItemLoadingState}
-    />
+  state = {
+    searchText: '',
+    isFocused: false,
+  };
+
+  handleOnChangeText = throttle(
+    (value) =>
+      this.setState({
+        searchText: value,
+      }),
+    300
   );
 
+  handleOnFocus = (inputState) => {
+    this.setState({
+      isFocused: inputState,
+    });
+  };
+
   render() {
     return (
       <BackgroundView>
-        <Query query={getContentChannels} fetchPolicy="cache-and-network">
-          {({
-            error,
-            loading,
-            data: { contentChannels = [] } = {},
-            refetch,
-          }) => (
-            <FeedView
-              error={error}
-              content={contentChannels}
-              isLoading={loading}
-              refetch={refetch}
-              renderItem={this.renderItem}
-              loadingStateObject={feedItemLoadingState}
-            />
-          )}
-        </Query>
+        <SearchInputHeader
+          onChangeText={this.handleOnChangeText}
+          onFocus={this.handleOnFocus}
+        />
+        {this.state.isFocused || this.state.searchText ? (
+          <SearchFeed searchText={this.state.searchText} />
+        ) : (
+          <DiscoverFeed />
+        )}
       </BackgroundView>
     );
   }
@@ -57,6 +49,7 @@ class Discover extends PureComponent {
 
 Discover.navigationOptions = {
   title: 'Discover',
+  headerStyle: ReactNavigationStyleReset.header,
 };
 
 export default Discover;
diff --git a/apolloschurchapp/src/tabs/discover/DiscoverFeed/DiscoverFeed.tests.js b/apolloschurchapp/src/tabs/discover/DiscoverFeed/DiscoverFeed.tests.js
new file mode 100644
index 0000000..3ce5dec
--- /dev/null
+++ b/apolloschurchapp/src/tabs/discover/DiscoverFeed/DiscoverFeed.tests.js
@@ -0,0 +1,564 @@
+import React from 'react';
+import { flatMap } from 'lodash';
+import { createStackNavigator, createAppContainer } from 'react-navigation';
+import renderer from 'react-test-renderer';
+
+import Providers from '../../../Providers';
+import { renderWithApolloData } from '../../../utils/testUtils';
+import GET_CONTENT_CARD from '../../../ui/ContentCardConnected/query';
+
+import GET_CONTENT_CHANNELS from './getContentChannels';
+import DiscoverFeed from '.';
+
+describe('The DiscoverFeed component', () => {
+  it('should render', async () => {
+    const mockFeedData = {
+      request: {
+        query: GET_CONTENT_CHANNELS,
+      },
+      result: {
+        data: {
+          contentChannels: [
+            {
+              id: 'ContentChannel:965b6e6d7046a885bea4e300b5c0400d',
+              name: 'News',
+              childContentItemsConnection: {
+                edges: [
+                  {
+                    node: {
+                      id:
+                        'UniversalContentItem:00bb7b364911281c97fc50f2a0d17b11',
+                      title: 'Anderson Family Cookout!',
+                      isLiked: false,
+                      likedCount: 0,
+                      summary: 'Come join us!',
+                      coverImage: {
+                        name: 'Landscape Image',
+                        sources: [
+                          {
+                            uri:
+                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D62e0e2ba-2dac-468b-a852-7e8cf2533efc',
+                            __typename: 'ImageMediaSource',
+                          },
+                        ],
+                        __typename: 'ImageMedia',
+                      },
+                      theme: null,
+                      parentChannel: {
+                        id: 'ContentChannel:965b6e6d7046a885bea4e300b5c0400d',
+                        name: 'News',
+                        __typename: 'ContentChannel',
+                      },
+                      videos: [],
+                      audios: [],
+                      __typename: 'UniversalContentItem',
+                    },
+                    __typename: 'ContentItemsConnectionEdge',
+                  },
+                  {
+                    node: {
+                      id:
+                        'UniversalContentItem:7db601b238aa4345a818654300f83dd2',
+                      title: 'Robert Madu is Coming to Christ Fellowship',
+                      isLiked: false,
+                      likedCount: 5,
+                      summary:
+                        "Don't miss a powerful message from preacher and speaker, Robert Madu.",
+                      coverImage: {
+                        name: 'Square Image',
+                        sources: [
+                          {
+                            uri:
+                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3Df3ba0936-8aab-46c1-8245-0e5aef637ae3',
+                            __typename: 'ImageMediaSource',
+                          },
+                        ],
+                        __typename: 'ImageMedia',
+                      },
+                      theme: null,
+                      parentChannel: {
+                        id: 'ContentChannel:965b6e6d7046a885bea4e300b5c0400d',
+                        name: 'News',
+                        __typename: 'ContentChannel',
+                      },
+                      videos: [],
+                      audios: [],
+                      __typename: 'UniversalContentItem',
+                    },
+                    __typename: 'ContentItemsConnectionEdge',
+                  },
+                  {
+                    node: {
+                      id:
+                        'UniversalContentItem:296373ecb53580855cadffa0375ebe18',
+                      title: 'Guys Night!',
+                      isLiked: false,
+                      likedCount: 0,
+                      summary:
+                        'A time to connect with other guys who live nearby.',
+                      coverImage: {
+                        name: 'Square Image',
+                        sources: [
+                          {
+                            uri:
+                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D58c037fa-cc7f-4d72-9571-a0cc0558e346',
+                            __typename: 'ImageMediaSource',
+                          },
+                        ],
+                        __typename: 'ImageMedia',
+                      },
+                      theme: null,
+                      parentChannel: {
+                        id: 'ContentChannel:965b6e6d7046a885bea4e300b5c0400d',
+                        name: 'News',
+                        __typename: 'ContentChannel',
+                      },
+                      videos: [],
+                      audios: [],
+                      __typename: 'UniversalContentItem',
+                    },
+                    __typename: 'ContentItemsConnectionEdge',
+                  },
+                ],
+                __typename: 'ContentItemsConnection',
+              },
+              __typename: 'ContentChannel',
+            },
+            {
+              id: 'ContentChannel:4f68015ba18662a7409d1219a4ce013e',
+              name: 'Articles',
+              childContentItemsConnection: {
+                edges: [
+                  {
+                    node: {
+                      id:
+                        'UniversalContentItem:604a4a763a5fc0edfe386684ca6b3515',
+                      title: 'Test Article',
+                      isLiked: false,
+                      likedCount: 0,
+                      summary: 'Test article...',
+                      coverImage: null,
+                      theme: null,
+                      parentChannel: {
+                        id: 'ContentChannel:4f68015ba18662a7409d1219a4ce013e',
+                        name: 'Articles',
+                        __typename: 'ContentChannel',
+                      },
+                      videos: [],
+                      audios: [],
+                      __typename: 'UniversalContentItem',
+                    },
+                    __typename: 'ContentItemsConnectionEdge',
+                  },
+                  {
+                    node: {
+                      id:
+                        'UniversalContentItem:c495ff18cd998ed516a798b6218907cd',
+                      title: '10 ways to refresh your spirit every day',
+                      isLiked: false,
+                      likedCount: 2,
+                      summary:
+                        '1. Be slow What would it look like to live your life at half-speed?',
+                      coverImage: null,
+                      theme: null,
+                      parentChannel: {
+                        id: 'ContentChannel:4f68015ba18662a7409d1219a4ce013e',
+                        name: 'Articles',
+                        __typename: 'ContentChannel',
+                      },
+                      videos: [],
+                      audios: [],
+                      __typename: 'UniversalContentItem',
+                    },
+                    __typename: 'ContentItemsConnectionEdge',
+                  },
+                  {
+                    node: {
+                      id:
+                        'UniversalContentItem:95ff79f60a028b1b506aaeedf8b4c6ae',
+                      title: 'Live for Freedom Toolkit',
+                      isLiked: false,
+                      likedCount: 1,
+                      summary:
+                        "Get in the Groove\nCelebrate your freedom in Christ — in the car, shower, cubicle or wherever you go — with this playlist of NewSpring Worship's favorite songs of the summer.",
+                      coverImage: null,
+                      theme: null,
+                      parentChannel: {
+                        id: 'ContentChannel:4f68015ba18662a7409d1219a4ce013e',
+                        name: 'Articles',
+                        __typename: 'ContentChannel',
+                      },
+                      videos: [],
+                      audios: [],
+                      __typename: 'UniversalContentItem',
+                    },
+                    __typename: 'ContentItemsConnectionEdge',
+                  },
+                ],
+                __typename: 'ContentItemsConnection',
+              },
+              __typename: 'ContentChannel',
+            },
+            {
+              id: 'ContentChannel:a0f64573eabf00a607bec911794d50fb',
+              name: 'Sermon Series',
+              childContentItemsConnection: {
+                edges: [
+                  {
+                    node: {
+                      id:
+                        'ContentSeriesContentItem:6d8dc8e4bad017f815ae0cac8bf692bb',
+                      title: 'The New Weekend Experience',
+                      isLiked: false,
+                      likedCount: 1,
+                      summary:
+                        'Have you come into relationship with Jesus Christ?',
+                      coverImage: {
+                        name: 'Series Image',
+                        sources: [
+                          {
+                            uri:
+                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D98be229f-dfed-4344-86ab-0d11666fc781',
+                            __typename: 'ImageMediaSource',
+                          },
+                        ],
+                        __typename: 'ImageMedia',
+                      },
+                      theme: null,
+                      parentChannel: {
+                        id: 'ContentChannel:a0f64573eabf00a607bec911794d50fb',
+                        name: 'Sermon Series',
+                        __typename: 'ContentChannel',
+                      },
+                      videos: [
+                        { sources: [], __typename: 'VideoMedia' },
+                        { sources: [], __typename: 'VideoMedia' },
+                      ],
+                      audios: [],
+                      __typename: 'ContentSeriesContentItem',
+                    },
+                    __typename: 'ContentItemsConnectionEdge',
+                  },
+                  {
+                    node: {
+                      id:
+                        'ContentSeriesContentItem:08449058d438ebeaffe9adb7a8e633cc',
+                      title: 'Gathering',
+                      isLiked: false,
+                      likedCount: 0,
+                      summary: '',
+                      coverImage: {
+                        name: 'Square Image',
+                        sources: [
+                          {
+                            uri:
+                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D50f4e3e3-2842-4991-9f64-8fc6fbb3067c',
+                            __typename: 'ImageMediaSource',
+                          },
+                        ],
+                        __typename: 'ImageMedia',
+                      },
+                      theme: null,
+                      parentChannel: {
+                        id: 'ContentChannel:a0f64573eabf00a607bec911794d50fb',
+                        name: 'Sermon Series',
+                        __typename: 'ContentChannel',
+                      },
+                      videos: [
+                        { sources: [], __typename: 'VideoMedia' },
+                        { sources: [], __typename: 'VideoMedia' },
+                      ],
+                      audios: [],
+                      __typename: 'ContentSeriesContentItem',
+                    },
+                    __typename: 'ContentItemsConnectionEdge',
+                  },
+                  {
+                    node: {
+                      id:
+                        'ContentSeriesContentItem:b74c2d295a0cf1340232ffa8be856c00',
+                      title: 'Gauntlet 2018',
+                      isLiked: false,
+                      likedCount: 0,
+                      summary: '',
+                      coverImage: {
+                        name: 'Square Image',
+                        sources: [
+                          {
+                            uri:
+                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D3e3e38d2-d804-45db-b45a-3b7a82c415d1',
+                            __typename: 'ImageMediaSource',
+                          },
+                        ],
+                        __typename: 'ImageMedia',
+                      },
+                      theme: null,
+                      parentChannel: {
+                        id: 'ContentChannel:a0f64573eabf00a607bec911794d50fb',
+                        name: 'Sermon Series',
+                        __typename: 'ContentChannel',
+                      },
+                      videos: [
+                        { sources: [], __typename: 'VideoMedia' },
+                        { sources: [], __typename: 'VideoMedia' },
+                      ],
+                      audios: [],
+                      __typename: 'ContentSeriesContentItem',
+                    },
+                    __typename: 'ContentItemsConnectionEdge',
+                  },
+                ],
+                __typename: 'ContentItemsConnection',
+              },
+              __typename: 'ContentChannel',
+            },
+            {
+              id: 'ContentChannel:7fba1b1ee253e0fd5f0795b4b8b1175e',
+              name: 'Devotion Series',
+              childContentItemsConnection: {
+                edges: [
+                  {
+                    node: {
+                      id:
+                        'ContentSeriesContentItem:b085ec27d53006e9e6b95f3ac57da581',
+                      title: 'Jeremiah: A 33-Day Devotional',
+                      isLiked: true,
+                      likedCount: 6,
+                      summary: 'Have you ever had to deliver difficult news?',
+                      coverImage: {
+                        name: 'Square Image',
+                        sources: [
+                          {
+                            uri:
+                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D31af1a61-360c-4b1e-8e62-45517c06a9a2',
+                            __typename: 'ImageMediaSource',
+                          },
+                        ],
+                        __typename: 'ImageMedia',
+                      },
+                      theme: null,
+                      parentChannel: {
+                        id: 'ContentChannel:7fba1b1ee253e0fd5f0795b4b8b1175e',
+                        name: 'Devotion Series',
+                        __typename: 'ContentChannel',
+                      },
+                      videos: [{ sources: [], __typename: 'VideoMedia' }],
+                      audios: [],
+                      __typename: 'ContentSeriesContentItem',
+                    },
+                    __typename: 'ContentItemsConnectionEdge',
+                  },
+                  {
+                    node: {
+                      id:
+                        'ContentSeriesContentItem:71bfdac0b98ea1b72a63ff4ea64e3c5a',
+                      title: 'How To Be A Better Leader: A 7-Day Devotional',
+                      isLiked: false,
+                      likedCount: 0,
+                      summary: '',
+                      coverImage: {
+                        name: 'Square Image',
+                        sources: [
+                          {
+                            uri:
+                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3Dd3a96243-2558-4c04-bf41-3aadcf41771f',
+                            __typename: 'ImageMediaSource',
+                          },
+                        ],
+                        __typename: 'ImageMedia',
+                      },
+                      theme: null,
+                      parentChannel: {
+                        id: 'ContentChannel:7fba1b1ee253e0fd5f0795b4b8b1175e',
+                        name: 'Devotion Series',
+                        __typename: 'ContentChannel',
+                      },
+                      videos: [{ sources: [], __typename: 'VideoMedia' }],
+                      audios: [],
+                      __typename: 'ContentSeriesContentItem',
+                    },
+                    __typename: 'ContentItemsConnectionEdge',
+                  },
+                  {
+                    node: {
+                      id:
+                        'ContentSeriesContentItem:44fd3b82373ea8f197bd1e1e77c4bed0',
+                      title: '2 Thessalonians: A 5-Day Devotional',
+                      isLiked: false,
+                      likedCount: 0,
+                      summary: '',
+                      coverImage: {
+                        name: 'Square Image',
+                        sources: [
+                          {
+                            uri:
+                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D70b0b57c-5a15-4f46-8e6a-c759231685bf',
+                            __typename: 'ImageMediaSource',
+                          },
+                        ],
+                        __typename: 'ImageMedia',
+                      },
+                      theme: null,
+                      parentChannel: {
+                        id: 'ContentChannel:7fba1b1ee253e0fd5f0795b4b8b1175e',
+                        name: 'Devotion Series',
+                        __typename: 'ContentChannel',
+                      },
+                      videos: [{ sources: [], __typename: 'VideoMedia' }],
+                      audios: [],
+                      __typename: 'ContentSeriesContentItem',
+                    },
+                    __typename: 'ContentItemsConnectionEdge',
+                  },
+                ],
+                __typename: 'ContentItemsConnection',
+              },
+              __typename: 'ContentChannel',
+            },
+            {
+              id: 'ContentChannel:be7381e9c2fea9f41504cd98d4b14321',
+              name: 'Stories',
+              childContentItemsConnection: {
+                edges: [
+                  {
+                    node: {
+                      id:
+                        'UniversalContentItem:cf8fa657f23af88a2d63f7e4a2237db8',
+                      title:
+                        'The surprising journey that changed me and my dad',
+                      isLiked: false,
+                      likedCount: 6,
+                      summary:
+                        'My father, Darwin, has always been involved in my life.',
+                      coverImage: {
+                        name: 'Square Image',
+                        sources: [
+                          {
+                            uri:
+                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D2a65e561-cd6e-4590-bb37-029a21c554e8',
+                            __typename: 'ImageMediaSource',
+                          },
+                        ],
+                        __typename: 'ImageMedia',
+                      },
+                      theme: null,
+                      parentChannel: {
+                        id: 'ContentChannel:be7381e9c2fea9f41504cd98d4b14321',
+                        name: 'Stories',
+                        __typename: 'ContentChannel',
+                      },
+                      videos: [],
+                      audios: [],
+                      __typename: 'UniversalContentItem',
+                    },
+                    __typename: 'ContentItemsConnectionEdge',
+                  },
+                  {
+                    node: {
+                      id:
+                        'UniversalContentItem:2e17f5a66407d114ab9f2392b03ebccd',
+                      title: 'When I lost hope, my church family had my back',
+                      isLiked: true,
+                      likedCount: 5,
+                      summary:
+                        'Brian Kalwat was just trying to knock something off his honey-do list.',
+                      coverImage: {
+                        name: 'Square Image',
+                        sources: [
+                          {
+                            uri:
+                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D0305285f-1155-4405-ba38-a61b9c8558be',
+                            __typename: 'ImageMediaSource',
+                          },
+                        ],
+                        __typename: 'ImageMedia',
+                      },
+                      theme: null,
+                      parentChannel: {
+                        id: 'ContentChannel:be7381e9c2fea9f41504cd98d4b14321',
+                        name: 'Stories',
+                        __typename: 'ContentChannel',
+                      },
+                      videos: [],
+                      audios: [],
+                      __typename: 'UniversalContentItem',
+                    },
+                    __typename: 'ContentItemsConnectionEdge',
+                  },
+                  {
+                    node: {
+                      id:
+                        'UniversalContentItem:ae8ec75906ba7437c49ad2534b5024db',
+                      title: 'A Place to Worship Free of Fear',
+                      isLiked: false,
+                      likedCount: 1,
+                      summary:
+                        'Cornelius &amp; Stephanie Mack, proud parents of a Special Friends adult, share about their experience\nOur son Cameron began attending Willow Creek Special Friends in 2015.',
+                      coverImage: {
+                        name: 'Portrait Image',
+                        sources: [
+                          {
+                            uri:
+                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3Da65bc45d-f961-4b7e-a899-63eb1f9b8da9',
+                            __typename: 'ImageMediaSource',
+                          },
+                        ],
+                        __typename: 'ImageMedia',
+                      },
+                      theme: null,
+                      parentChannel: {
+                        id: 'ContentChannel:be7381e9c2fea9f41504cd98d4b14321',
+                        name: 'Stories',
+                        __typename: 'ContentChannel',
+                      },
+                      videos: [],
+                      audios: [],
+                      __typename: 'UniversalContentItem',
+                    },
+                    __typename: 'ContentItemsConnectionEdge',
+                  },
+                ],
+                __typename: 'ContentItemsConnection',
+              },
+              __typename: 'ContentChannel',
+            },
+          ],
+        },
+      },
+    };
+    const mockChannelCardData = flatMap(
+      mockFeedData.result.data.contentChannels,
+      (contentChannel) =>
+        contentChannel.childContentItemsConnection.edges.map((edge) => ({
+          request: {
+            query: GET_CONTENT_CARD,
+            variables: { contentId: edge.node.id },
+          },
+          result: {
+            data: {
+              node: edge.node,
+            },
+          },
+        }))
+    );
+
+    const DiscoverStack = createStackNavigator({ DiscoverFeed });
+    const DiscoverFeedWithNavigation = createAppContainer(DiscoverStack);
+    const tree = await renderWithApolloData(
+      <Providers mocks={[mockFeedData, ...mockChannelCardData]}>
+        <DiscoverFeedWithNavigation />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a loading state', () => {
+    const DiscoverStack = createStackNavigator({ DiscoverFeed });
+    const DiscoverFeedWithNavigation = createAppContainer(DiscoverStack);
+    const tree = renderer.create(
+      <Providers cache={null}>
+        <DiscoverFeedWithNavigation />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/tabs/discover/DiscoverFeed/TileContentFeed.js b/apolloschurchapp/src/tabs/discover/DiscoverFeed/TileContentFeed.js
new file mode 100644
index 0000000..c4507fb
--- /dev/null
+++ b/apolloschurchapp/src/tabs/discover/DiscoverFeed/TileContentFeed.js
@@ -0,0 +1,111 @@
+import React from 'react';
+import { View } from 'react-native';
+import { withNavigation } from 'react-navigation';
+import PropTypes from 'prop-types';
+
+import {
+  styled,
+  withTheme,
+  H5,
+  H6,
+  HorizontalTileFeed,
+  ButtonLink,
+  TouchableScale,
+  Touchable,
+  withIsLoading,
+} from '@apollosproject/ui-kit';
+
+import HorizontalContentCardConnected from '../../../ui/HorizontalContentCardConnected';
+
+const RowHeader = styled(({ theme }) => ({
+  flexDirection: 'row',
+  justifyContent: 'space-between',
+  alignItems: 'center',
+  zIndex: 2, // UX hack to improve tapability. Positions RowHeader above StyledHorizontalTileFeed
+  paddingLeft: theme.sizing.baseUnit,
+}))(View);
+
+const Name = styled({
+  flexGrow: 2,
+})(View);
+
+const AndroidTouchableFix = withTheme(({ theme }) => ({
+  borderRadius: theme.sizing.baseUnit / 2,
+}))(Touchable);
+
+const ButtonLinkSpacing = styled(({ theme }) => ({
+  flexDirection: 'row', // correctly positions the loading state
+  justifyContent: 'flex-end', // correctly positions the loading state
+  padding: theme.sizing.baseUnit, // UX hack to improve tapability.
+}))(View);
+
+const StyledHorizontalTileFeed = styled(({ theme }) => ({
+  /* UX hack to improve tapability. The magic number below happens to be the number of pixels that
+   * aligns everything in the same place as if none of the UX hacks were there. */
+  marginTop: theme.sizing.baseUnit * -1.25,
+  paddingBottom: theme.sizing.baseUnit,
+  zIndex: 1,
+}))(HorizontalTileFeed);
+
+const loadingStateObject = {
+  id: 'fake_id',
+  title: '',
+  coverImage: [],
+};
+
+const TileContentFeed = ({ isLoading, id, name, navigation, content = [] }) => (
+  <>
+    <RowHeader>
+      <Name>
+        <H5>{name}</H5>
+      </Name>
+      <AndroidTouchableFix
+        onPress={() => {
+          navigation.navigate('ContentFeed', {
+            itemId: id,
+            itemTitle: name,
+          });
+        }}
+      >
+        <ButtonLinkSpacing>
+          <H6>
+            <ButtonLink>View All</ButtonLink>
+          </H6>
+        </ButtonLinkSpacing>
+      </AndroidTouchableFix>
+    </RowHeader>
+    <StyledHorizontalTileFeed
+      content={content}
+      renderItem={({ item }) => (
+        <TouchableScale
+          onPress={() => {
+            navigation.push('ContentSingle', {
+              itemId: item.id,
+            });
+          }}
+        >
+          <HorizontalContentCardConnected
+            contentId={item.id}
+            isLoading={isLoading}
+          />
+        </TouchableScale>
+      )}
+      loadingStateObject={loadingStateObject}
+      isLoading={isLoading}
+    />
+  </>
+);
+
+TileContentFeed.propTypes = {
+  navigation: PropTypes.shape({
+    navigate: PropTypes.func,
+  }),
+  isLoading: PropTypes.bool,
+  id: PropTypes.string,
+  name: PropTypes.string,
+  content: PropTypes.arrayOf(
+    PropTypes.any // this component doesn't care about the shape of `node`, just that it exists
+  ),
+};
+
+export default withNavigation(withIsLoading(TileContentFeed));
diff --git a/apolloschurchapp/src/tabs/discover/getContentChannels.js b/apolloschurchapp/src/tabs/discover/DiscoverFeed/getContentChannels.js
similarity index 53%
rename from apolloschurchapp/src/tabs/discover/getContentChannels.js
rename to apolloschurchapp/src/tabs/discover/DiscoverFeed/getContentChannels.js
index bc9c243..a63629c 100644
--- a/apolloschurchapp/src/tabs/discover/getContentChannels.js
+++ b/apolloschurchapp/src/tabs/discover/DiscoverFeed/getContentChannels.js
@@ -1,7 +1,7 @@
 import gql from 'graphql-tag';
 
-import { contentItemFragment } from 'apolloschurchapp/src/content-single/getContentItem';
-import { tileCardFragment } from 'apolloschurchapp/src/ui/ContentCardConnected';
+import { CONTENT_ITEM_FRAGMENT } from 'apolloschurchapp/src/content-single/getContentItem';
+import { LARGE_CARD_FRAGMENT } from 'apolloschurchapp/src/ui/ContentCardConnected';
 
 export default gql`
   query getContentChannels {
@@ -13,12 +13,12 @@ export default gql`
           node {
             id
             ...contentItemFragment
-            ...tileCardFragment
+            ...largeCardFragment
           }
         }
       }
     }
   }
-  ${contentItemFragment}
-  ${tileCardFragment}
+  ${CONTENT_ITEM_FRAGMENT}
+  ${LARGE_CARD_FRAGMENT}
 `;
diff --git a/apolloschurchapp/src/tabs/discover/DiscoverFeed/index.js b/apolloschurchapp/src/tabs/discover/DiscoverFeed/index.js
new file mode 100644
index 0000000..9e4006b
--- /dev/null
+++ b/apolloschurchapp/src/tabs/discover/DiscoverFeed/index.js
@@ -0,0 +1,52 @@
+import React, { memo } from 'react';
+import { Query } from 'react-apollo';
+import { get } from 'lodash';
+
+import { FeedView } from '@apollosproject/ui-kit';
+
+import TileContentFeed from './TileContentFeed';
+import GET_CONTENT_CHANNELS from './getContentChannels';
+
+const childContentItemLoadingState = {
+  title: '',
+  isLoading: true,
+};
+
+const feedItemLoadingState = {
+  name: '',
+  isLoading: true,
+};
+
+const renderItem = (
+  { item } // eslint-disable-line react/prop-types
+) => (
+  <TileContentFeed
+    id={item.id}
+    name={item.name}
+    content={get(item, 'childContentItemsConnection.edges', []).map(
+      (edge) => edge.node
+    )}
+    isLoading={item.isLoading}
+    loadingStateObject={childContentItemLoadingState}
+  />
+);
+
+const DiscoverFeed = memo(() => (
+  <Query query={GET_CONTENT_CHANNELS} fetchPolicy="cache-and-network">
+    {({ error, loading, data: { contentChannels = [] } = {}, refetch }) => (
+      <FeedView
+        error={error}
+        content={contentChannels}
+        isLoading={loading && !contentChannels.length}
+        refetch={refetch}
+        renderItem={renderItem}
+        loadingStateObject={feedItemLoadingState}
+        numColumns={1}
+      />
+    )}
+  </Query>
+));
+
+DiscoverFeed.displayName = 'DiscoverFeed';
+
+export default DiscoverFeed;
diff --git a/apolloschurchapp/src/tabs/discover/SearchFeed/NoResults.js b/apolloschurchapp/src/tabs/discover/SearchFeed/NoResults.js
new file mode 100644
index 0000000..7cc7a56
--- /dev/null
+++ b/apolloschurchapp/src/tabs/discover/SearchFeed/NoResults.js
@@ -0,0 +1,57 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+
+import {
+  styled,
+  withTheme,
+  CenteredView,
+  PaddedView,
+  Icon,
+  H4,
+  BodySmall,
+} from '@apollosproject/ui-kit';
+
+const StyledIcon = withTheme(({ theme }) => ({
+  fill: theme.colors.text.tertiary,
+  style: {
+    marginRight: theme.sizing.baseUnit / 2,
+  },
+}))(Icon);
+
+const Title = styled({
+  flexDirection: 'row',
+  alignItems: 'center',
+})(PaddedView);
+
+const NoResultsText = styled(
+  ({ theme }) => ({
+    color: theme.colors.text.tertiary,
+    textAlign: 'center',
+  }),
+  'Discover.SearchFeed.NoResultsText'
+);
+
+const StyledH4 = NoResultsText(H4);
+const StyledBodySmall = NoResultsText(BodySmall);
+
+const NoResults = ({ searchText }) => (
+  <CenteredView>
+    <Title vertical={false}>
+      <StyledIcon name={'umbrella'} />
+      <StyledH4 padded>Uh Oh!</StyledH4>
+    </Title>
+    <PaddedView vertical={false}>
+      <StyledBodySmall>
+        {"Looks like we couldn't find anything for "}
+        <StyledBodySmall bold>{`"${searchText}."`}</StyledBodySmall>
+        {' Try searching for something else!'}
+      </StyledBodySmall>
+    </PaddedView>
+  </CenteredView>
+);
+
+NoResults.propTypes = {
+  searchText: PropTypes.string,
+};
+
+export default NoResults;
diff --git a/apolloschurchapp/src/tabs/discover/SearchFeed/SearchFeed.tests.js b/apolloschurchapp/src/tabs/discover/SearchFeed/SearchFeed.tests.js
new file mode 100644
index 0000000..6dbc4da
--- /dev/null
+++ b/apolloschurchapp/src/tabs/discover/SearchFeed/SearchFeed.tests.js
@@ -0,0 +1,347 @@
+import React from 'react';
+import { flatMap } from 'lodash';
+import { createStackNavigator, createAppContainer } from 'react-navigation';
+import renderer from 'react-test-renderer';
+
+import Providers from '../../../Providers';
+import { renderWithApolloData } from '../../../utils/testUtils';
+import GET_CONTENT_CARD from '../../../ui/ContentCardConnected/query';
+
+import GET_SEARCH_RESULTS from './getSearchResults';
+import SearchFeed from '.';
+
+describe('The SearchFeed component', () => {
+  it('should render', async () => {
+    const mockFeedData = {
+      request: {
+        query: GET_SEARCH_RESULTS,
+        variables: { searchText: 'Love' },
+      },
+      result: {
+        data: {
+          search: {
+            edges: [
+              {
+                title: 'How to lead people to Jesus',
+                summary:
+                  'Love compels a mother to lose all dignity in public as she screams the name of her lost child.',
+                coverImage: {
+                  name: null,
+                  sources: [
+                    {
+                      uri:
+                        'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3Dd3a96243-2558-4c04-bf41-3aadcf41771f',
+                      __typename: 'ImageMediaSource',
+                    },
+                  ],
+                  __typename: 'ImageMedia',
+                },
+                cursor: 'b487224762b030f470967f45d7205823',
+                node: {
+                  id: 'DevotionalContentItem:561dfb7dbd8a5c093fd8385c7edaadbc',
+                  title: 'How to lead people to Jesus',
+                  isLiked: false,
+                  likedCount: 0,
+                  summary:
+                    'Love compels a mother to lose all dignity in public as she screams the name of her lost child.',
+                  coverImage: {
+                    name: 'Square Image',
+                    sources: [
+                      {
+                        uri:
+                          'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3Dd3a96243-2558-4c04-bf41-3aadcf41771f',
+                        __typename: 'ImageMediaSource',
+                      },
+                    ],
+                    __typename: 'ImageMedia',
+                  },
+                  theme: null,
+                  parentChannel: {
+                    id: 'ContentChannel:559b23fd0aa90e81b1c023e72e230fa1',
+                    name: 'Devotional',
+                    __typename: 'ContentChannel',
+                  },
+                  videos: [{ sources: [], __typename: 'VideoMedia' }],
+                  audios: [],
+                  __typename: 'DevotionalContentItem',
+                },
+                __typename: 'SearchResult',
+              },
+              {
+                title: 'Live for Freedom Toolkit',
+                summary:
+                  "Get in the Groove\nCelebrate your freedom in Christ — in the car, shower, cubicle or wherever you go — with this playlist of NewSpring Worship's favorite songs of the summer.",
+                coverImage: null,
+                cursor: '4affc1122ad80d4edcf6c5bc9d88ae99',
+                node: {
+                  id: 'UniversalContentItem:95ff79f60a028b1b506aaeedf8b4c6ae',
+                  title: 'Live for Freedom Toolkit',
+                  isLiked: false,
+                  likedCount: 1,
+                  summary:
+                    "Get in the Groove\nCelebrate your freedom in Christ — in the car, shower, cubicle or wherever you go — with this playlist of NewSpring Worship's favorite songs of the summer.",
+                  coverImage: null,
+                  theme: null,
+                  parentChannel: {
+                    id: 'ContentChannel:4f68015ba18662a7409d1219a4ce013e',
+                    name: 'Articles',
+                    __typename: 'ContentChannel',
+                  },
+                  videos: [],
+                  audios: [],
+                  __typename: 'UniversalContentItem',
+                },
+                __typename: 'SearchResult',
+              },
+              {
+                title: 'Should your 20-something live at home?',
+                summary:
+                  'Daughter: “Mom, can I bring some friends from college over for dinner Sunday?',
+                coverImage: {
+                  name: null,
+                  sources: [
+                    {
+                      uri:
+                        'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3Db08e4d69-0acf-40ff-920a-4517de086175',
+                      __typename: 'ImageMediaSource',
+                    },
+                  ],
+                  __typename: 'ImageMedia',
+                },
+                cursor: '659a26257a49fb2bf1446bb747bf7dd3',
+                node: {
+                  id: 'UniversalContentItem:895738f70482712adb3ab45a08c30456',
+                  title: 'Should your 20-something live at home?',
+                  isLiked: false,
+                  likedCount: 0,
+                  summary:
+                    'Daughter: “Mom, can I bring some friends from college over for dinner Sunday?',
+                  coverImage: {
+                    name: 'Landscape Image',
+                    sources: [
+                      {
+                        uri:
+                          'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3Db08e4d69-0acf-40ff-920a-4517de086175',
+                        __typename: 'ImageMediaSource',
+                      },
+                    ],
+                    __typename: 'ImageMedia',
+                  },
+                  theme: null,
+                  parentChannel: {
+                    id: 'ContentChannel:4f68015ba18662a7409d1219a4ce013e',
+                    name: 'Articles',
+                    __typename: 'ContentChannel',
+                  },
+                  videos: [],
+                  audios: [],
+                  __typename: 'UniversalContentItem',
+                },
+                __typename: 'SearchResult',
+              },
+              {
+                title: 'Guys Night!',
+                summary: 'A time to connect with other guys who live nearby.',
+                coverImage: {
+                  name: null,
+                  sources: [
+                    {
+                      uri:
+                        'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D58c037fa-cc7f-4d72-9571-a0cc0558e346',
+                      __typename: 'ImageMediaSource',
+                    },
+                  ],
+                  __typename: 'ImageMedia',
+                },
+                cursor: 'c8d2fe738629909c33010432432f21c8',
+                node: {
+                  id: 'UniversalContentItem:296373ecb53580855cadffa0375ebe18',
+                  title: 'Guys Night!',
+                  isLiked: false,
+                  likedCount: 0,
+                  summary: 'A time to connect with other guys who live nearby.',
+                  coverImage: {
+                    name: 'Square Image',
+                    sources: [
+                      {
+                        uri:
+                          'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D58c037fa-cc7f-4d72-9571-a0cc0558e346',
+                        __typename: 'ImageMediaSource',
+                      },
+                    ],
+                    __typename: 'ImageMedia',
+                  },
+                  theme: null,
+                  parentChannel: {
+                    id: 'ContentChannel:965b6e6d7046a885bea4e300b5c0400d',
+                    name: 'News',
+                    __typename: 'ContentChannel',
+                  },
+                  videos: [],
+                  audios: [],
+                  __typename: 'UniversalContentItem',
+                },
+                __typename: 'SearchResult',
+              },
+              {
+                title: '10 ways to refresh your spirit every day',
+                summary:
+                  '1. Be slow What would it look like to live your life at half-speed?',
+                coverImage: null,
+                cursor: 'ba47485fbc61945a38a4147fe7ff3703',
+                node: {
+                  id: 'UniversalContentItem:c495ff18cd998ed516a798b6218907cd',
+                  title: '10 ways to refresh your spirit every day',
+                  isLiked: false,
+                  likedCount: 2,
+                  summary:
+                    '1. Be slow What would it look like to live your life at half-speed?',
+                  coverImage: null,
+                  theme: null,
+                  parentChannel: {
+                    id: 'ContentChannel:4f68015ba18662a7409d1219a4ce013e',
+                    name: 'Articles',
+                    __typename: 'ContentChannel',
+                  },
+                  videos: [],
+                  audios: [],
+                  __typename: 'UniversalContentItem',
+                },
+                __typename: 'SearchResult',
+              },
+              {
+                title: 'Why leadership isn’t all about the title',
+                summary:
+                  'We all like to know that our boss or the authority over us is pleased, and it means even more when they take the time to share that in front of other people.',
+                coverImage: {
+                  name: null,
+                  sources: [
+                    {
+                      uri:
+                        'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3Dd3a96243-2558-4c04-bf41-3aadcf41771f',
+                      __typename: 'ImageMediaSource',
+                    },
+                  ],
+                  __typename: 'ImageMedia',
+                },
+                cursor: '9456eef87e314dcf19f013384a29fd22',
+                node: {
+                  id: 'DevotionalContentItem:4dd74ceca9e09b5276e93cbf53821bd6',
+                  title: 'Why leadership isn’t all about the title',
+                  isLiked: false,
+                  likedCount: 0,
+                  summary:
+                    'We all like to know that our boss or the authority over us is pleased, and it means even more when they take the time to share that in front of other people.',
+                  coverImage: {
+                    name: 'Square Image',
+                    sources: [
+                      {
+                        uri:
+                          'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3Dd3a96243-2558-4c04-bf41-3aadcf41771f',
+                        __typename: 'ImageMediaSource',
+                      },
+                    ],
+                    __typename: 'ImageMedia',
+                  },
+                  theme: null,
+                  parentChannel: {
+                    id: 'ContentChannel:559b23fd0aa90e81b1c023e72e230fa1',
+                    name: 'Devotional',
+                    __typename: 'ContentChannel',
+                  },
+                  videos: [{ sources: [], __typename: 'VideoMedia' }],
+                  audios: [],
+                  __typename: 'DevotionalContentItem',
+                },
+                __typename: 'SearchResult',
+              },
+            ],
+            __typename: 'SearchResultsConnection',
+          },
+        },
+      },
+    };
+
+    const mockSearchResultsCardData = flatMap(
+      mockFeedData.result.data.search.edges,
+      (node) => ({
+        request: {
+          query: GET_CONTENT_CARD,
+          variables: { contentId: node.id },
+        },
+        result: {
+          data: {
+            node,
+          },
+        },
+      })
+    );
+
+    const SearchStack = createStackNavigator({
+      SearchFeed: (props) => <SearchFeed searchText={'Love'} {...props} />, // eslint-disable-line react/display-name
+    });
+    const SearchFeedWithNavigation = createAppContainer(SearchStack);
+    const tree = await renderWithApolloData(
+      <Providers mocks={[mockFeedData, ...mockSearchResultsCardData]}>
+        <SearchFeedWithNavigation searchText={'Love'} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render an empty state', async () => {
+    const mockEmptyFeedData = {
+      request: {
+        query: GET_SEARCH_RESULTS,
+        variables: { searchText: 'No results here' },
+      },
+      result: {
+        data: {
+          search: {
+            edges: [],
+            __typename: 'SearchResultsConnection',
+          },
+        },
+      },
+    };
+
+    const mockEmptySearchResultsCardData = [
+      {
+        request: {
+          query: GET_CONTENT_CARD,
+          variables: { contentId: 'fake-id' },
+        },
+        result: {
+          data: {},
+        },
+      },
+    ];
+
+    const SearchStack = createStackNavigator({
+      // eslint-disable-next-line react/display-name
+      SearchFeed: (props) => (
+        <SearchFeed searchText={'No results here'} {...props} />
+      ),
+    });
+
+    const SearchFeedWithNavigation = createAppContainer(SearchStack);
+    const tree = await renderWithApolloData(
+      <Providers
+        mocks={[mockEmptyFeedData, ...mockEmptySearchResultsCardData]}
+        cache={null}
+      >
+        <SearchFeedWithNavigation searchText={'No results here'} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a loading state', () => {
+    const SearchStack = createStackNavigator({ SearchFeed });
+    const SearchFeedWithNavigation = createAppContainer(SearchStack);
+    const tree = renderer.create(
+      <Providers cache={null}>
+        <SearchFeedWithNavigation searchText={'Love'} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/tabs/discover/SearchFeed/getSearchResults.js b/apolloschurchapp/src/tabs/discover/SearchFeed/getSearchResults.js
new file mode 100644
index 0000000..6122da4
--- /dev/null
+++ b/apolloschurchapp/src/tabs/discover/SearchFeed/getSearchResults.js
@@ -0,0 +1,30 @@
+import gql from 'graphql-tag';
+import { CONTENT_ITEM_FRAGMENT } from 'apolloschurchapp/src/content-single/getContentItem';
+import { LARGE_CARD_FRAGMENT } from 'apolloschurchapp/src/ui/ContentCardConnected';
+
+export default gql`
+  query searchResults($searchText: String!) {
+    search(query: $searchText) {
+      edges {
+        title
+        summary
+        coverImage {
+          name
+          sources {
+            uri
+          }
+        }
+        cursor
+        node {
+          ... on ContentItem {
+            id
+            ...contentItemFragment
+            ...largeCardFragment
+          }
+        }
+      }
+    }
+  }
+  ${CONTENT_ITEM_FRAGMENT}
+  ${LARGE_CARD_FRAGMENT}
+`;
diff --git a/apolloschurchapp/src/tabs/discover/SearchFeed/index.js b/apolloschurchapp/src/tabs/discover/SearchFeed/index.js
new file mode 100644
index 0000000..63a7e16
--- /dev/null
+++ b/apolloschurchapp/src/tabs/discover/SearchFeed/index.js
@@ -0,0 +1,53 @@
+import React from 'react';
+import { withProps } from 'recompose';
+import { withNavigation } from 'react-navigation';
+import { Query } from 'react-apollo';
+import { get } from 'lodash';
+import PropTypes from 'prop-types';
+
+import { FeedView } from '@apollosproject/ui-kit';
+
+import ContentCardConnected from '../../../ui/ContentCardConnected';
+
+import GET_SEARCH_RESULTS from './getSearchResults';
+import NoResults from './NoResults';
+
+// this could be refactored into a custom effect hook 💥
+const StyledFeedView = withProps(({ hasContent }) => ({
+  contentContainerStyle: {
+    ...(hasContent ? {} : { flex: 1 }),
+  },
+}))(FeedView);
+
+const handleOnPress = ({ navigation, item }) =>
+  navigation.navigate('ContentSingle', {
+    itemId: item.id,
+    transitionKey: item.transitionKey,
+  });
+
+const SearchFeed = withNavigation(({ navigation, searchText }) => (
+  <Query
+    query={GET_SEARCH_RESULTS}
+    variables={{ searchText }}
+    fetchPolicy="cache-and-network"
+  >
+    {({ loading, error, data, refetch }) => (
+      <StyledFeedView
+        ListItemComponent={ContentCardConnected}
+        content={get(data, 'search.edges', []).map((edge) => edge.node)}
+        ListEmptyComponent={() => <NoResults searchText={searchText} />}
+        hasContent={get(data, 'search.edges', []).length}
+        isLoading={loading}
+        error={error}
+        refetch={refetch}
+        onPressItem={(item) => handleOnPress({ navigation, item })}
+      />
+    )}
+  </Query>
+));
+
+SearchFeed.propTypes = {
+  searchText: PropTypes.string,
+};
+
+export default SearchFeed;
diff --git a/apolloschurchapp/src/tabs/discover/TileContentFeed.js b/apolloschurchapp/src/tabs/discover/TileContentFeed.js
deleted file mode 100644
index 4470a03..0000000
--- a/apolloschurchapp/src/tabs/discover/TileContentFeed.js
+++ /dev/null
@@ -1,82 +0,0 @@
-import React from 'react';
-import { withNavigation } from 'react-navigation';
-import PropTypes from 'prop-types';
-
-import {
-  PaddedView,
-  H4,
-  HorizontalTileFeed,
-  styled,
-  ButtonLink,
-  TouchableScale,
-} from '@apollosproject/ui-kit';
-
-import ContentCardConnected from '../../ui/ContentCardConnected';
-
-const RowHeader = styled({
-  flexDirection: 'row',
-  justifyContent: 'space-between',
-  alignItems: 'center',
-  paddingBottom: 0,
-})(PaddedView);
-
-const loadingStateObject = {
-  id: 'fake_id',
-  title: '',
-  coverImage: [],
-};
-
-const TileContentFeed = ({ isLoading, id, name, navigation, content = [] }) => (
-  <PaddedView horizontal={false}>
-    <RowHeader>
-      <H4 isLoading={isLoading}>{name}</H4>
-      {!isLoading ? (
-        <ButtonLink
-          onPress={() => {
-            navigation.navigate('ContentFeed', {
-              itemId: id,
-              itemTitle: name,
-            });
-          }}
-        >
-          View All
-        </ButtonLink>
-      ) : null}
-    </RowHeader>
-    <HorizontalTileFeed
-      content={content}
-      renderItem={({ item }) => (
-        <TouchableScale
-          onPress={() => {
-            navigation.push('ContentSingle', {
-              itemId: item.id,
-            });
-          }}
-        >
-          <ContentCardConnected
-            contentId={item.id}
-            isLoading={isLoading}
-            tile
-            inHorizontalList
-          />
-        </TouchableScale>
-      )}
-      loadingStateObject={loadingStateObject}
-      isLoading={isLoading}
-    />
-  </PaddedView>
-);
-
-TileContentFeed.propTypes = {
-  navigation: PropTypes.shape({
-    navigate: PropTypes.func,
-  }),
-  isLoading: PropTypes.bool,
-  id: PropTypes.string,
-  name: PropTypes.string,
-  content: PropTypes.arrayOf(
-    PropTypes.any // this component doesn't care about the shape of `node`, just that it exists
-  ),
-};
-
-export default withNavigation(TileContentFeed);
diff --git a/apolloschurchapp/src/tabs/discover/discover.tests.js b/apolloschurchapp/src/tabs/discover/discover.tests.js
index 96f2fde..93fd091 100644
--- a/apolloschurchapp/src/tabs/discover/discover.tests.js
+++ b/apolloschurchapp/src/tabs/discover/discover.tests.js
@@ -1,52 +1,203 @@
 import React from 'react';
-import renderer from 'react-test-renderer';
-import { createStackNavigator } from 'react-navigation';
+import { flatMap } from 'lodash';
+import { createStackNavigator, createAppContainer } from 'react-navigation';
 
 import Providers from 'apolloschurchapp/src/Providers';
 
+import { renderWithApolloData } from '../../utils/testUtils';
+import GET_CONTENT_CARD from '../../ui/ContentCardConnected/query';
+
 import Discover from './Discover';
-import getContentChannels from './getContentChannels';
+import GET_CONTENT_CHANNELS from './DiscoverFeed/getContentChannels';
 
-describe('Test the Discover Component Query', () => {
-  it('Should retrieve the Content Channel Feeds', () => {
-    const mock = {
+describe('The Discover tab component', () => {
+  it('Should retrieve the Content Channel Feeds', async () => {
+    const mockFeedData = {
       request: {
-        query: getContentChannels,
+        query: GET_CONTENT_CHANNELS,
       },
       result: {
         data: {
           contentChannels: [
+            {
+              id: 'ContentChannel:965b6e6d7046a885bea4e300b5c0400d',
+              name: 'News',
+              childContentItemsConnection: {
+                edges: [
+                  {
+                    node: {
+                      id:
+                        'UniversalContentItem:00bb7b364911281c97fc50f2a0d17b11',
+                      title: 'Anderson Family Cookout!',
+                      isLiked: false,
+                      likedCount: 0,
+                      summary: 'Come join us!',
+                      coverImage: {
+                        name: 'Landscape Image',
+                        sources: [
+                          {
+                            uri:
+                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D62e0e2ba-2dac-468b-a852-7e8cf2533efc',
+                            __typename: 'ImageMediaSource',
+                          },
+                        ],
+                        __typename: 'ImageMedia',
+                      },
+                      theme: null,
+                      parentChannel: {
+                        id: 'ContentChannel:965b6e6d7046a885bea4e300b5c0400d',
+                        name: 'News',
+                        __typename: 'ContentChannel',
+                      },
+                      videos: [],
+                      audios: [],
+                      __typename: 'UniversalContentItem',
+                    },
+                    __typename: 'ContentItemsConnectionEdge',
+                  },
+                  {
+                    node: {
+                      id:
+                        'UniversalContentItem:7db601b238aa4345a818654300f83dd2',
+                      title: 'Robert Madu is Coming to Christ Fellowship',
+                      isLiked: false,
+                      likedCount: 5,
+                      summary:
+                        "Don't miss a powerful message from preacher and speaker, Robert Madu.",
+                      coverImage: {
+                        name: 'Square Image',
+                        sources: [
+                          {
+                            uri:
+                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3Df3ba0936-8aab-46c1-8245-0e5aef637ae3',
+                            __typename: 'ImageMediaSource',
+                          },
+                        ],
+                        __typename: 'ImageMedia',
+                      },
+                      theme: null,
+                      parentChannel: {
+                        id: 'ContentChannel:965b6e6d7046a885bea4e300b5c0400d',
+                        name: 'News',
+                        __typename: 'ContentChannel',
+                      },
+                      videos: [],
+                      audios: [],
+                      __typename: 'UniversalContentItem',
+                    },
+                    __typename: 'ContentItemsConnectionEdge',
+                  },
+                  {
+                    node: {
+                      id:
+                        'UniversalContentItem:296373ecb53580855cadffa0375ebe18',
+                      title: 'Guys Night!',
+                      isLiked: false,
+                      likedCount: 0,
+                      summary:
+                        'A time to connect with other guys who live nearby.',
+                      coverImage: {
+                        name: 'Square Image',
+                        sources: [
+                          {
+                            uri:
+                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D58c037fa-cc7f-4d72-9571-a0cc0558e346',
+                            __typename: 'ImageMediaSource',
+                          },
+                        ],
+                        __typename: 'ImageMedia',
+                      },
+                      theme: null,
+                      parentChannel: {
+                        id: 'ContentChannel:965b6e6d7046a885bea4e300b5c0400d',
+                        name: 'News',
+                        __typename: 'ContentChannel',
+                      },
+                      videos: [],
+                      audios: [],
+                      __typename: 'UniversalContentItem',
+                    },
+                    __typename: 'ContentItemsConnectionEdge',
+                  },
+                ],
+                __typename: 'ContentItemsConnection',
+              },
+              __typename: 'ContentChannel',
+            },
             {
               id: 'ContentChannel:4f68015ba18662a7409d1219a4ce013e',
-              name: 'Editorial',
+              name: 'Articles',
               childContentItemsConnection: {
                 edges: [
                   {
                     node: {
                       id:
-                        'UniversalContentItem:d57994350b9d213866b24dea3a97433d',
-                      title: 'Mea Animal Aperiam Ornatus Eu',
+                        'UniversalContentItem:604a4a763a5fc0edfe386684ca6b3515',
+                      title: 'Test Article',
+                      isLiked: false,
+                      likedCount: 0,
+                      summary: 'Test article...',
                       coverImage: null,
+                      theme: null,
+                      parentChannel: {
+                        id: 'ContentChannel:4f68015ba18662a7409d1219a4ce013e',
+                        name: 'Articles',
+                        __typename: 'ContentChannel',
+                      },
+                      videos: [],
+                      audios: [],
+                      __typename: 'UniversalContentItem',
                     },
+                    __typename: 'ContentItemsConnectionEdge',
                   },
                   {
                     node: {
                       id:
-                        'UniversalContentItem:b36e55d803443431e96bb4b5068147ec',
-                      title: 'Probo Senserit Id Mea, Ut Sed Malis Postea,',
+                        'UniversalContentItem:c495ff18cd998ed516a798b6218907cd',
+                      title: '10 ways to refresh your spirit every day',
+                      isLiked: false,
+                      likedCount: 2,
+                      summary:
+                        '1. Be slow What would it look like to live your life at half-speed?',
                       coverImage: null,
+                      theme: null,
+                      parentChannel: {
+                        id: 'ContentChannel:4f68015ba18662a7409d1219a4ce013e',
+                        name: 'Articles',
+                        __typename: 'ContentChannel',
+                      },
+                      videos: [],
+                      audios: [],
+                      __typename: 'UniversalContentItem',
                     },
+                    __typename: 'ContentItemsConnectionEdge',
                   },
                   {
                     node: {
                       id:
-                        'UniversalContentItem:57c465ee3cd69524d729569b338607de',
-                      title: 'Ea Harum Albucius Mel',
+                        'UniversalContentItem:95ff79f60a028b1b506aaeedf8b4c6ae',
+                      title: 'Live for Freedom Toolkit',
+                      isLiked: false,
+                      likedCount: 1,
+                      summary:
+                        "Get in the Groove\nCelebrate your freedom in Christ — in the car, shower, cubicle or wherever you go — with this playlist of NewSpring Worship's favorite songs of the summer.",
                       coverImage: null,
+                      theme: null,
+                      parentChannel: {
+                        id: 'ContentChannel:4f68015ba18662a7409d1219a4ce013e',
+                        name: 'Articles',
+                        __typename: 'ContentChannel',
+                      },
+                      videos: [],
+                      audios: [],
+                      __typename: 'UniversalContentItem',
                     },
+                    __typename: 'ContentItemsConnectionEdge',
                   },
                 ],
+                __typename: 'ContentItemsConnection',
               },
+              __typename: 'ContentChannel',
             },
             {
               id: 'ContentChannel:a0f64573eabf00a607bec911794d50fb',
@@ -56,50 +207,110 @@ describe('Test the Discover Component Query', () => {
                   {
                     node: {
                       id:
-                        'UniversalContentItem:1c627c20911791321f819125a65c3c9d',
-                      title: 'Money Wise',
+                        'ContentSeriesContentItem:6d8dc8e4bad017f815ae0cac8bf692bb',
+                      title: 'The New Weekend Experience',
+                      isLiked: false,
+                      likedCount: 1,
+                      summary:
+                        'Have you come into relationship with Jesus Christ?',
                       coverImage: {
+                        name: 'Series Image',
                         sources: [
                           {
                             uri:
-                              'https://apollosrock.newspring.cc/GetImage.ashx?guid=33e4c568-a456-4250-a8dc-6a4ceb548455',
+                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D98be229f-dfed-4344-86ab-0d11666fc781',
+                            __typename: 'ImageMediaSource',
                           },
                         ],
+                        __typename: 'ImageMedia',
+                      },
+                      theme: null,
+                      parentChannel: {
+                        id: 'ContentChannel:a0f64573eabf00a607bec911794d50fb',
+                        name: 'Sermon Series',
+                        __typename: 'ContentChannel',
                       },
+                      videos: [
+                        { sources: [], __typename: 'VideoMedia' },
+                        { sources: [], __typename: 'VideoMedia' },
+                      ],
+                      audios: [],
+                      __typename: 'ContentSeriesContentItem',
                     },
+                    __typename: 'ContentItemsConnectionEdge',
                   },
                   {
                     node: {
                       id:
-                        'UniversalContentItem:66a4d75b02b447556e4e3806430a9946',
-                      title: 'Momentum',
+                        'ContentSeriesContentItem:08449058d438ebeaffe9adb7a8e633cc',
+                      title: 'Gathering',
+                      isLiked: false,
+                      likedCount: 0,
+                      summary: '',
                       coverImage: {
+                        name: 'Square Image',
                         sources: [
                           {
                             uri:
-                              'https://apollosrock.newspring.cc/GetImage.ashx?guid=F3F2E438-2AE8-4EF4-980B-709463691296',
+                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D50f4e3e3-2842-4991-9f64-8fc6fbb3067c',
+                            __typename: 'ImageMediaSource',
                           },
                         ],
+                        __typename: 'ImageMedia',
+                      },
+                      theme: null,
+                      parentChannel: {
+                        id: 'ContentChannel:a0f64573eabf00a607bec911794d50fb',
+                        name: 'Sermon Series',
+                        __typename: 'ContentChannel',
                       },
+                      videos: [
+                        { sources: [], __typename: 'VideoMedia' },
+                        { sources: [], __typename: 'VideoMedia' },
+                      ],
+                      audios: [],
+                      __typename: 'ContentSeriesContentItem',
                     },
+                    __typename: 'ContentItemsConnectionEdge',
                   },
                   {
                     node: {
                       id:
-                        'UniversalContentItem:22c861a5d54d09634018f7eb132c452e',
-                      title: 'Miracles in Luke',
+                        'ContentSeriesContentItem:b74c2d295a0cf1340232ffa8be856c00',
+                      title: 'Gauntlet 2018',
+                      isLiked: false,
+                      likedCount: 0,
+                      summary: '',
                       coverImage: {
+                        name: 'Square Image',
                         sources: [
                           {
                             uri:
-                              'https://apollosrock.newspring.cc/GetImage.ashx?guid=EDFDBD47-BBE8-4BE9-8D3F-CC0059BD4CCC',
+                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D3e3e38d2-d804-45db-b45a-3b7a82c415d1',
+                            __typename: 'ImageMediaSource',
                           },
                         ],
+                        __typename: 'ImageMedia',
                       },
+                      theme: null,
+                      parentChannel: {
+                        id: 'ContentChannel:a0f64573eabf00a607bec911794d50fb',
+                        name: 'Sermon Series',
+                        __typename: 'ContentChannel',
+                      },
+                      videos: [
+                        { sources: [], __typename: 'VideoMedia' },
+                        { sources: [], __typename: 'VideoMedia' },
+                      ],
+                      audios: [],
+                      __typename: 'ContentSeriesContentItem',
                     },
+                    __typename: 'ContentItemsConnectionEdge',
                   },
                 ],
+                __typename: 'ContentItemsConnection',
               },
+              __typename: 'ContentChannel',
             },
             {
               id: 'ContentChannel:7fba1b1ee253e0fd5f0795b4b8b1175e',
@@ -109,59 +320,232 @@ describe('Test the Discover Component Query', () => {
                   {
                     node: {
                       id:
-                        'UniversalContentItem:678b4a38968fc6004dd8b23e586c923e',
-                      title: 'Psalms: A 28-Day Devotional',
+                        'ContentSeriesContentItem:b085ec27d53006e9e6b95f3ac57da581',
+                      title: 'Jeremiah: A 33-Day Devotional',
+                      isLiked: true,
+                      likedCount: 6,
+                      summary: 'Have you ever had to deliver difficult news?',
                       coverImage: {
+                        name: 'Square Image',
                         sources: [
                           {
                             uri:
-                              'https://apollosrock.newspring.cc/GetImage.ashx?guid=ed857076-2623-4fdc-8476-50b3a60e0b68',
+                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D31af1a61-360c-4b1e-8e62-45517c06a9a2',
+                            __typename: 'ImageMediaSource',
                           },
                         ],
+                        __typename: 'ImageMedia',
+                      },
+                      theme: null,
+                      parentChannel: {
+                        id: 'ContentChannel:7fba1b1ee253e0fd5f0795b4b8b1175e',
+                        name: 'Devotion Series',
+                        __typename: 'ContentChannel',
                       },
+                      videos: [{ sources: [], __typename: 'VideoMedia' }],
+                      audios: [],
+                      __typename: 'ContentSeriesContentItem',
                     },
+                    __typename: 'ContentItemsConnectionEdge',
                   },
                   {
                     node: {
                       id:
-                        'UniversalContentItem:0f361c619b7e5dd511da181069498250',
-                      title: '2 Samuel: A 5-Week Devotional',
+                        'ContentSeriesContentItem:71bfdac0b98ea1b72a63ff4ea64e3c5a',
+                      title: 'How To Be A Better Leader: A 7-Day Devotional',
+                      isLiked: false,
+                      likedCount: 0,
+                      summary: '',
                       coverImage: {
+                        name: 'Square Image',
                         sources: [
                           {
                             uri:
-                              'https://apollosrock.newspring.cc/GetImage.ashx?guid=aa68b674-9cf4-4f8a-8702-9564a4a9fa7b',
+                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3Dd3a96243-2558-4c04-bf41-3aadcf41771f',
+                            __typename: 'ImageMediaSource',
                           },
                         ],
+                        __typename: 'ImageMedia',
                       },
+                      theme: null,
+                      parentChannel: {
+                        id: 'ContentChannel:7fba1b1ee253e0fd5f0795b4b8b1175e',
+                        name: 'Devotion Series',
+                        __typename: 'ContentChannel',
+                      },
+                      videos: [{ sources: [], __typename: 'VideoMedia' }],
+                      audios: [],
+                      __typename: 'ContentSeriesContentItem',
                     },
+                    __typename: 'ContentItemsConnectionEdge',
                   },
                   {
                     node: {
                       id:
-                        'UniversalContentItem:bc1002007d482c412962ad6b1f24901a',
-                      title: '#MomLife: An 8-Day Devotional',
+                        'ContentSeriesContentItem:44fd3b82373ea8f197bd1e1e77c4bed0',
+                      title: '2 Thessalonians: A 5-Day Devotional',
+                      isLiked: false,
+                      likedCount: 0,
+                      summary: '',
                       coverImage: {
+                        name: 'Square Image',
                         sources: [
                           {
                             uri:
-                              'https://apollosrock.newspring.cc/GetImage.ashx?guid=65dfddf1-c146-4599-bdb7-a8f53bf8fed2',
+                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D70b0b57c-5a15-4f46-8e6a-c759231685bf',
+                            __typename: 'ImageMediaSource',
                           },
                         ],
+                        __typename: 'ImageMedia',
+                      },
+                      theme: null,
+                      parentChannel: {
+                        id: 'ContentChannel:7fba1b1ee253e0fd5f0795b4b8b1175e',
+                        name: 'Devotion Series',
+                        __typename: 'ContentChannel',
                       },
+                      videos: [{ sources: [], __typename: 'VideoMedia' }],
+                      audios: [],
+                      __typename: 'ContentSeriesContentItem',
                     },
+                    __typename: 'ContentItemsConnectionEdge',
                   },
                 ],
+                __typename: 'ContentItemsConnection',
               },
+              __typename: 'ContentChannel',
+            },
+            {
+              id: 'ContentChannel:be7381e9c2fea9f41504cd98d4b14321',
+              name: 'Stories',
+              childContentItemsConnection: {
+                edges: [
+                  {
+                    node: {
+                      id:
+                        'UniversalContentItem:cf8fa657f23af88a2d63f7e4a2237db8',
+                      title:
+                        'The surprising journey that changed me and my dad',
+                      isLiked: false,
+                      likedCount: 6,
+                      summary:
+                        'My father, Darwin, has always been involved in my life.',
+                      coverImage: {
+                        name: 'Square Image',
+                        sources: [
+                          {
+                            uri:
+                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D2a65e561-cd6e-4590-bb37-029a21c554e8',
+                            __typename: 'ImageMediaSource',
+                          },
+                        ],
+                        __typename: 'ImageMedia',
+                      },
+                      theme: null,
+                      parentChannel: {
+                        id: 'ContentChannel:be7381e9c2fea9f41504cd98d4b14321',
+                        name: 'Stories',
+                        __typename: 'ContentChannel',
+                      },
+                      videos: [],
+                      audios: [],
+                      __typename: 'UniversalContentItem',
+                    },
+                    __typename: 'ContentItemsConnectionEdge',
+                  },
+                  {
+                    node: {
+                      id:
+                        'UniversalContentItem:2e17f5a66407d114ab9f2392b03ebccd',
+                      title: 'When I lost hope, my church family had my back',
+                      isLiked: true,
+                      likedCount: 5,
+                      summary:
+                        'Brian Kalwat was just trying to knock something off his honey-do list.',
+                      coverImage: {
+                        name: 'Square Image',
+                        sources: [
+                          {
+                            uri:
+                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D0305285f-1155-4405-ba38-a61b9c8558be',
+                            __typename: 'ImageMediaSource',
+                          },
+                        ],
+                        __typename: 'ImageMedia',
+                      },
+                      theme: null,
+                      parentChannel: {
+                        id: 'ContentChannel:be7381e9c2fea9f41504cd98d4b14321',
+                        name: 'Stories',
+                        __typename: 'ContentChannel',
+                      },
+                      videos: [],
+                      audios: [],
+                      __typename: 'UniversalContentItem',
+                    },
+                    __typename: 'ContentItemsConnectionEdge',
+                  },
+                  {
+                    node: {
+                      id:
+                        'UniversalContentItem:ae8ec75906ba7437c49ad2534b5024db',
+                      title: 'A Place to Worship Free of Fear',
+                      isLiked: false,
+                      likedCount: 1,
+                      summary:
+                        'Cornelius &amp; Stephanie Mack, proud parents of a Special Friends adult, share about their experience\nOur son Cameron began attending Willow Creek Special Friends in 2015.',
+                      coverImage: {
+                        name: 'Portrait Image',
+                        sources: [
+                          {
+                            uri:
+                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3Da65bc45d-f961-4b7e-a899-63eb1f9b8da9',
+                            __typename: 'ImageMediaSource',
+                          },
+                        ],
+                        __typename: 'ImageMedia',
+                      },
+                      theme: null,
+                      parentChannel: {
+                        id: 'ContentChannel:be7381e9c2fea9f41504cd98d4b14321',
+                        name: 'Stories',
+                        __typename: 'ContentChannel',
+                      },
+                      videos: [],
+                      audios: [],
+                      __typename: 'UniversalContentItem',
+                    },
+                    __typename: 'ContentItemsConnectionEdge',
+                  },
+                ],
+                __typename: 'ContentItemsConnection',
+              },
+              __typename: 'ContentChannel',
             },
           ],
         },
       },
     };
+    const mockChannelCardData = flatMap(
+      mockFeedData.result.data.contentChannels,
+      (contentChannel) =>
+        contentChannel.childContentItemsConnection.edges.map((edge) => ({
+          request: {
+            query: GET_CONTENT_CARD,
+            variables: { contentId: edge.node.id },
+          },
+          result: {
+            data: {
+              node: edge.node,
+            },
+          },
+        }))
+    );
 
-    const DiscoverWithNavigation = createStackNavigator({ Discover });
-    const tree = renderer.create(
-      <Providers mocks={[mock]}>
+    const DiscoverStack = createStackNavigator({ Discover });
+    const DiscoverWithNavigation = createAppContainer(DiscoverStack);
+    const tree = await renderWithApolloData(
+      <Providers mocks={[mockFeedData, ...mockChannelCardData]}>
         <DiscoverWithNavigation />
       </Providers>
     );
diff --git a/apolloschurchapp/src/tabs/discover/index.js b/apolloschurchapp/src/tabs/discover/index.js
index bcfae50..5e8c752 100644
--- a/apolloschurchapp/src/tabs/discover/index.js
+++ b/apolloschurchapp/src/tabs/discover/index.js
@@ -1,4 +1,5 @@
 import { createStackNavigator } from 'react-navigation';
+import { withTheme } from '@apollosproject/ui-kit';
 
 import ContentFeed from 'apolloschurchapp/src/content-feed';
 
@@ -6,18 +7,23 @@ import tabBarIcon from '../tabBarIcon';
 
 import Discover from './Discover';
 
-export const DiscoverNavigator = createStackNavigator(
+const DiscoverNavigator = createStackNavigator(
   {
     Discover,
     ContentFeed,
   },
   {
     initialRouteName: 'Discover',
+    defaultNavigationOptions: ({ screenProps }) => ({
+      headerTintColor: screenProps.headerTintColor,
+    }),
+    navigationOptions: { tabBarIcon: tabBarIcon('sections') },
   }
 );
 
-DiscoverNavigator.navigationOptions = {
-  tabBarIcon: tabBarIcon('sections'),
-};
+const EnhancedDiscover = withTheme(({ theme, ...props }) => ({
+  ...props,
+  screenProps: { headerTintColor: theme.colors.text.secondary },
+}))(DiscoverNavigator);
 
-export default DiscoverNavigator;
+export default EnhancedDiscover;
diff --git a/apolloschurchapp/src/tabs/home/Features/getFeedFeatures.js b/apolloschurchapp/src/tabs/home/Features/getFeedFeatures.js
new file mode 100644
index 0000000..caffc10
--- /dev/null
+++ b/apolloschurchapp/src/tabs/home/Features/getFeedFeatures.js
@@ -0,0 +1,27 @@
+import gql from 'graphql-tag';
+
+export default gql`
+  query getFeedFeatures {
+    userFeedFeatures {
+      ... on ActionListFeature {
+        id
+        title
+        subtitle
+        actions {
+          id
+          title
+          subtitle
+          action
+          image {
+            sources {
+              uri
+            }
+          }
+          relatedNode {
+            id
+          }
+        }
+      }
+    }
+  }
+`;
diff --git a/apolloschurchapp/src/tabs/home/Features/index.js b/apolloschurchapp/src/tabs/home/Features/index.js
new file mode 100644
index 0000000..80aebcb
--- /dev/null
+++ b/apolloschurchapp/src/tabs/home/Features/index.js
@@ -0,0 +1,135 @@
+import React, { memo } from 'react';
+import { Query } from 'react-apollo';
+import { get } from 'lodash';
+// import PropTypes from 'prop-types';
+
+import { styled, ActionListCard, H3, H6 } from '@apollosproject/ui-kit';
+
+import GET_FEED_FEATURES from './getFeedFeatures';
+
+const StyledH6 = styled(({ theme }) => ({
+  color: theme.colors.text.tertiary,
+}))(H6);
+
+// const handleOnPressActionItem = (id) =>
+//   this.props.navigation.navigate('ContentSingle', {
+//     itemId: id,
+//     transitionKey: 2,
+//   });
+
+const Features = memo(({ navigation }) => (
+  <Query query={GET_FEED_FEATURES} fetchPolicy="cache-and-network">
+    {({ data: features, loading }) =>
+      loading ? (
+        <ActionListCard
+          isLoading
+          header={
+            <>
+              <StyledH6 isLoading />
+              <H3 isLoading />
+            </>
+          }
+          actions={[
+            {
+              id: 'fakeId1',
+              title: '',
+              subtitle: '',
+              parentChannel: {
+                id: '',
+                name: '',
+              },
+              coverImage: {
+                sources: {
+                  uri: '',
+                },
+              },
+            },
+            {
+              id: 'fakeId2',
+              title: '',
+              subtitle: '',
+              parentChannel: {
+                id: '',
+                name: '',
+              },
+              coverImage: {
+                sources: {
+                  uri: '',
+                },
+              },
+            },
+            {
+              id: 'fakeId3',
+              title: '',
+              subtitle: '',
+              parentChannel: {
+                id: '',
+                name: '',
+              },
+              coverImage: {
+                sources: {
+                  uri: '',
+                },
+              },
+            },
+            {
+              id: 'fakeId4',
+              title: '',
+              subtitle: '',
+              parentChannel: {
+                id: '',
+                name: '',
+              },
+              coverImage: {
+                sources: {
+                  uri: '',
+                },
+              },
+            },
+          ]}
+        />
+      ) : (
+        get(features, 'userFeedFeatures', []).map(
+          ({ title, subtitle, actions, id }) =>
+            actions.length ? (
+              <ActionListCard
+                isLoading={loading}
+                key={id}
+                header={
+                  <>
+                    <StyledH6 numberOfLines={1}>{title}</StyledH6>
+                    <H3 numberOfLines={3}>{subtitle}</H3>
+                  </>
+                }
+                actions={actions}
+                onPressActionItem={({ action, relatedNode }) => {
+                  if (action === 'READ_CONTENT') {
+                    navigation.navigate('ContentSingle', {
+                      itemId: relatedNode.id,
+                      transitionKey: 2,
+                    });
+                  }
+                  if (action === 'READ_EVENT') {
+                    navigation.navigate('Event', {
+                      eventId: relatedNode.id,
+                      transitionKey: 2,
+                    });
+                  }
+                }}
+                onPressCardActionButton={() =>
+                  navigation.navigate('ContentFeed', {
+                    itemId: id,
+                    itemTitle: title,
+                  })
+                }
+              />
+            ) : null
+        )
+      )
+    }
+  </Query>
+));
+
+Features.displayName = 'Features';
+
+export default Features;
diff --git a/apolloschurchapp/src/tabs/home/Home.js b/apolloschurchapp/src/tabs/home/Home.js
index bb09a97..118f612 100644
--- a/apolloschurchapp/src/tabs/home/Home.js
+++ b/apolloschurchapp/src/tabs/home/Home.js
@@ -5,12 +5,22 @@ import SafeAreaView from 'react-native-safe-area-view';
 import { get } from 'lodash';
 import PropTypes from 'prop-types';
 
-import { styled, FeedView, BackgroundView } from '@apollosproject/ui-kit';
+import {
+  styled,
+  FeedView,
+  BackgroundView,
+  TouchableScale,
+  FeaturedCard,
+} from '@apollosproject/ui-kit';
+
+import fetchMoreResolver from '../../utils/fetchMoreResolver';
 import ContentCardConnected from '../../ui/ContentCardConnected';
 
 import { LiveButton } from '../../live';
 
-import getUserFeed from './getUserFeed';
+import Features from './Features';
+import GET_USER_FEED from './getUserFeed';
+import GET_CAMPAIGN_CONTENT_ITEM from './getCampaignContentItem';
 
 const LogoTitle = styled(({ theme }) => ({
   height: theme.sizing.baseUnit,
@@ -42,13 +52,26 @@ class Home extends PureComponent {
     return (
       <BackgroundView>
         <SafeAreaView>
-          <Query query={getUserFeed} fetchPolicy="cache-and-network">
-            {({ loading, error, data, refetch }) => (
+          <Query
+            query={GET_USER_FEED}
+            variables={{
+              first: 10,
+              after: null,
+            }}
+            fetchPolicy="cache-and-network"
+          >
+            {({ loading, error, data, refetch, fetchMore, variables }) => (
               <FeedView
                 ListItemComponent={ContentCardConnected}
                 content={get(data, 'userFeed.edges', []).map(
                   (edge) => edge.node
                 )}
+                fetchMore={fetchMoreResolver({
+                  collectionName: 'userFeed',
+                  fetchMore,
+                  variables,
+                  data,
+                })}
                 isLoading={loading}
                 error={error}
                 refetch={refetch}
@@ -56,6 +79,39 @@ class Home extends PureComponent {
                   <>
                     <LogoTitle source={require('./wordmark.png')} />
                     <LiveButton />
+                    <Query
+                      query={GET_CAMPAIGN_CONTENT_ITEM}
+                      fetchPolicy="cache-and-network"
+                    >
+                      {({ data: featuredData, loading: isFeaturedLoading }) => {
+                        const featuredContent = get(
+                          featuredData,
+                          'campaigns.edges',
+                          []
+                        ).map((edge) => edge.node);
+
+                        const featuredItem = get(
+                          featuredContent[0],
+                          'childContentItemsConnection.edges[0].node',
+                          {}
+                        );
+
+                        return (
+                          <TouchableScale
+                            onPress={() =>
+                              this.handleOnPress({ id: featuredItem.id })
+                            }
+                          >
+                            <ContentCardConnected
+                              Component={FeaturedCard}
+                              contentId={featuredItem.id}
+                              isLoading={isFeaturedLoading}
+                            />
+                          </TouchableScale>
+                        );
+                      }}
+                    </Query>
+                    <Features navigation={this.props.navigation} />
                   </>
                 }
                 onPressItem={this.handleOnPress}
diff --git a/apolloschurchapp/src/tabs/home/getCampaignContentItem.js b/apolloschurchapp/src/tabs/home/getCampaignContentItem.js
new file mode 100644
index 0000000..345463c
--- /dev/null
+++ b/apolloschurchapp/src/tabs/home/getCampaignContentItem.js
@@ -0,0 +1,25 @@
+import gql from 'graphql-tag';
+
+import { CONTENT_ITEM_FRAGMENT } from 'apolloschurchapp/src/content-single/getContentItem';
+import { LARGE_CARD_FRAGMENT } from 'apolloschurchapp/src/ui/ContentCardConnected';
+
+export default gql`
+  query campaigns {
+    campaigns {
+      edges {
+        node {
+          childContentItemsConnection {
+            edges {
+              node {
+                ...largeCardFragment
+                ...contentItemFragment
+              }
+            }
+          }
+        }
+      }
+    }
+  }
+  ${CONTENT_ITEM_FRAGMENT}
+  ${LARGE_CARD_FRAGMENT}
+`;
diff --git a/apolloschurchapp/src/tabs/home/getFeedFeatures.js b/apolloschurchapp/src/tabs/home/getFeedFeatures.js
new file mode 100644
index 0000000..caffc10
--- /dev/null
+++ b/apolloschurchapp/src/tabs/home/getFeedFeatures.js
@@ -0,0 +1,27 @@
+import gql from 'graphql-tag';
+
+export default gql`
+  query getFeedFeatures {
+    userFeedFeatures {
+      ... on ActionListFeature {
+        id
+        title
+        subtitle
+        actions {
+          id
+          title
+          subtitle
+          action
+          image {
+            sources {
+              uri
+            }
+          }
+          relatedNode {
+            id
+          }
+        }
+      }
+    }
+  }
+`;
diff --git a/apolloschurchapp/src/tabs/home/getUserFeed.js b/apolloschurchapp/src/tabs/home/getUserFeed.js
index 2d7cb9a..e120403 100644
--- a/apolloschurchapp/src/tabs/home/getUserFeed.js
+++ b/apolloschurchapp/src/tabs/home/getUserFeed.js
@@ -1,11 +1,14 @@
 import gql from 'graphql-tag';
 
-import { contentItemFragment } from 'apolloschurchapp/src/content-single/getContentItem';
-import { largeCardFragment } from 'apolloschurchapp/src/ui/ContentCardConnected';
+import { CONTENT_ITEM_FRAGMENT } from 'apolloschurchapp/src/content-single/getContentItem';
+import { LARGE_CARD_FRAGMENT } from 'apolloschurchapp/src/ui/ContentCardConnected';
 
 export default gql`
-  query getUserFeed {
-    userFeed {
+  query getUserFeed($first: Int, $after: String) {
+    userFeed(first: $first, after: $after) {
+      pageInfo {
+        endCursor
+      }
       edges {
         node {
           ...largeCardFragment
@@ -14,6 +17,6 @@ export default gql`
       }
     }
   }
-  ${contentItemFragment}
-  ${largeCardFragment}
+  ${CONTENT_ITEM_FRAGMENT}
+  ${LARGE_CARD_FRAGMENT}
 `;
diff --git a/apolloschurchapp/src/tabs/home/home.tests.js b/apolloschurchapp/src/tabs/home/home.tests.js
index e9f98c5..96a5008 100644
--- a/apolloschurchapp/src/tabs/home/home.tests.js
+++ b/apolloschurchapp/src/tabs/home/home.tests.js
@@ -4,13 +4,13 @@ import renderer from 'react-test-renderer';
 import Providers from 'apolloschurchapp/src/Providers';
 
 import Home from './Home';
-import getUserFeed from './getUserFeed';
+import GET_USER_FEED from './getUserFeed';
 
 describe('User Home Feed Query', () => {
   it('should return correct query results', () => {
     const mock = {
       request: {
-        query: getUserFeed,
+        query: GET_USER_FEED,
       },
       result: {
         data: {
diff --git a/apolloschurchapp/src/tabs/index.js b/apolloschurchapp/src/tabs/index.js
index 0b9ea17..ff11787 100644
--- a/apolloschurchapp/src/tabs/index.js
+++ b/apolloschurchapp/src/tabs/index.js
@@ -16,11 +16,8 @@ const TabNavigator = createBottomTabNavigator(
     tabBarComponent: TabBar,
     lazy: true,
     removeClippedSubviews: true,
+    navigationOptions: { header: null },
   }
 );
 
-TabNavigator.navigationOptions = {
-  header: null,
-};
-
 export default TabNavigator;
diff --git a/apolloschurchapp/src/tabs/tabBar.js b/apolloschurchapp/src/tabs/tabBar.js
index e806ab4..6b2b849 100644
--- a/apolloschurchapp/src/tabs/tabBar.js
+++ b/apolloschurchapp/src/tabs/tabBar.js
@@ -1,54 +1,21 @@
-import React from 'react';
 import { compose } from 'recompose';
-import { Platform, View } from 'react-native';
-import { BottomTabBar } from 'react-navigation-tabs';
-import { Query } from 'react-apollo';
-import gql from 'graphql-tag';
-import { get } from 'lodash';
+import { BottomTabBar } from 'react-navigation';
 
-import { MediaPlayerSpacer } from 'apolloschurchapp/src/ui/MediaPlayer';
+import { withTabBarMediaSpacer } from '@apollosproject/ui-media-player';
 import { styled, withTheme } from '@apollosproject/ui-kit';
 
-const mediaPlayerIsVisibleQuery = gql`
-  query {
-    mediaPlayer @client {
-      isVisible
-    }
-  }
-`;
-
-const TabBarWrapper = styled(({ theme, mediaPlayerIsVisible }) => ({
-  backgroundColor: mediaPlayerIsVisible
-    ? theme.colors.screen
-    : theme.colors.paper,
-  ...Platform.select(theme.shadows.default),
-}))(View);
-
 const ThemedBottomTabBar = compose(
   withTheme(({ theme }) => ({
     showLabel: false,
     activeTintColor: theme.colors.secondary,
     inactiveTintColor: theme.colors.text.tertiary,
+    safeAreaInset: { bottom: 0 },
   })),
   styled(({ theme }) => ({
     borderTopWidth: 0,
     backgroundColor: theme.colors.transparent,
-  }))
+  })),
+  withTabBarMediaSpacer
 )(BottomTabBar);
 
-const TabBar = (props) => (
-  <Query query={mediaPlayerIsVisibleQuery}>
-    {({ data = {} }) => (
-      <TabBarWrapper mediaPlayerIsVisible={get(data, 'mediaPlayer.isVisible')}>
-        <MediaPlayerSpacer>
-          <ThemedBottomTabBar
-            {...props}
-            safeAreaInset={{ bottom: 'never', top: 'never' }}
-          />
-        </MediaPlayerSpacer>
-      </TabBarWrapper>
-    )}
-  </Query>
-);
-
-export default TabBar;
+export default ThemedBottomTabBar;
diff --git a/apolloschurchapp/src/testing-control-panel/ChangeLivestream.js b/apolloschurchapp/src/testing-control-panel/ChangeLivestream.js
index 6723f30..6675653 100644
--- a/apolloschurchapp/src/testing-control-panel/ChangeLivestream.js
+++ b/apolloschurchapp/src/testing-control-panel/ChangeLivestream.js
@@ -4,12 +4,12 @@ import { Query } from 'react-apollo';
 import { get } from 'lodash';
 
 import { client } from 'apolloschurchapp/src/client';
-import getLiveStream from 'apolloschurchapp/src/live/getLiveStream';
+import GET_LIVE_STREAM from 'apolloschurchapp/src/live/getLiveStream';
 import TouchableCell from './TouchableCell';
 
 const changeLivestream = ({ isLive }) =>
   client.writeQuery({
-    query: getLiveStream,
+    query: GET_LIVE_STREAM,
     data: {
       liveStream: {
         __typename: 'LiveStream',
@@ -19,7 +19,7 @@ const changeLivestream = ({ isLive }) =>
   });
 
 const ChangeLivestream = () => (
-  <Query query={getLiveStream}>
+  <Query query={GET_LIVE_STREAM}>
     {({ data }) => {
       const isLive = get(data, 'liveStream.isLive', false);
       return (
diff --git a/apolloschurchapp/src/testing-control-panel/index.js b/apolloschurchapp/src/testing-control-panel/index.js
index 121e804..6a6c16a 100644
--- a/apolloschurchapp/src/testing-control-panel/index.js
+++ b/apolloschurchapp/src/testing-control-panel/index.js
@@ -1,6 +1,8 @@
 import React, { PureComponent } from 'react';
 import { TableView, Divider } from '@apollosproject/ui-kit';
+import { UserWebBrowserConsumer } from 'apolloschurchapp/src/user-web-browser';
 import ChangeLivestream from './ChangeLivestream';
+import TouchableCell from './TouchableCell';
 
 export default class TestingControlPanel extends PureComponent {
   static navigationOptions = () => ({
@@ -12,6 +14,25 @@ export default class TestingControlPanel extends PureComponent {
       <TableView>
         <ChangeLivestream />
         <Divider />
+        <UserWebBrowserConsumer>
+          {(openUserWebView) => (
+            <TouchableCell
+              handlePress={() =>
+                openUserWebView({
+                  url:
+                    'https://www.whatismybrowser.com/detect/what-http-headers-is-my-browser-sending',
+                })
+              }
+              iconName="share"
+              cellText={`Open Web Browser With User Cookie`}
+            />
+          )}
+        </UserWebBrowserConsumer>
+        <TouchableCell
+          handlePress={() => this.props.navigation.navigate('Onboarding')}
+          iconName="Avatar"
+          cellText={`Launch Onboarding`}
+        />
       </TableView>
     );
   }
diff --git a/apolloschurchapp/src/theme/icons/index.js b/apolloschurchapp/src/theme/icons/index.js
new file mode 100644
index 0000000..79e948a
--- /dev/null
+++ b/apolloschurchapp/src/theme/icons/index.js
@@ -0,0 +1,2 @@
+/* Export your custom icon components here. */
+export {};
diff --git a/apolloschurchapp/src/theme/index.js b/apolloschurchapp/src/theme/index.js
new file mode 100644
index 0000000..9ccfc4a
--- /dev/null
+++ b/apolloschurchapp/src/theme/index.js
@@ -0,0 +1,4 @@
+import theme from './theme';
+import * as customIcons from './icons';
+
+export { theme as default, customIcons };
diff --git a/apolloschurchapp/src/theme/theme.js b/apolloschurchapp/src/theme/theme.js
new file mode 100644
index 0000000..532be93
--- /dev/null
+++ b/apolloschurchapp/src/theme/theme.js
@@ -0,0 +1,46 @@
+/* Add your custom theme definitions below. Anything that is supported in UI-Kit Theme can be
+ overridden and/or customized here! */
+
+/* Base colors.
+ * These get used by theme types (see /types directory) to color
+ * specific parts of the interface. For more control on how certain
+ * elements are colored, go there. The next level of control comes
+ * on a per-component basis with "overrides"
+ */
+// const colors = {};
+
+/* Base Typography sizing and fonts.
+ * To control speicfic styles used on different type components (like H1, H2, etc), see "overrides"
+ */
+// const typography = {};
+
+/* Responsive breakpoints */
+// export const breakpoints = {};
+
+/* Base sizing units. These are used to scale
+ * space, and size components relatively to one another.
+ */
+// export const sizing = {};
+
+/* Base alpha values. These are used to keep transparent values across the app consistant */
+// export const alpha = {};
+
+/* Base overlays. These are used as configuration for LinearGradients across the app */
+// export const overlays = () => ({});
+
+/* Overrides allow you to override the styles of any component styled using the `styled` HOC.
+ * For example, this component:
+ * const SomeComponent = styled({ margin: 10, padding: 20 }, 'SomeComponent');
+ * can have its styles overriden by including in overrides:
+ * {
+ *   overides: {
+ *     SomeComponent: {
+ *       margin: 5,
+ *       padding: 15,
+ *     },
+ *   },
+ * }
+ */
+// const overrides = {};
+
+export default {};
diff --git a/apolloschurchapp/src/ui/ContentCardConnected/ContentCardConnected.js b/apolloschurchapp/src/ui/ContentCardConnected/ContentCardConnected.js
new file mode 100644
index 0000000..e4d7ac2
--- /dev/null
+++ b/apolloschurchapp/src/ui/ContentCardConnected/ContentCardConnected.js
@@ -0,0 +1,57 @@
+import React, { memo } from 'react';
+import PropTypes from 'prop-types';
+import { Query } from 'react-apollo';
+import { get } from 'lodash';
+
+import { ErrorCard } from '@apollosproject/ui-kit';
+
+import contentCardComponentMapper from './contentCardComponentMapper';
+import GET_CONTENT_CARD from './query';
+
+const ContentCardConnected = memo(
+  ({ Component, contentId, isLoading, tile, mapProps, ...otherProps }) => {
+    if (!contentId || isLoading)
+      return <Component {...otherProps} isLoading tile={tile} />;
+
+    return (
+      <Query query={GET_CONTENT_CARD} variables={{ contentId }}>
+        {({ data: { node = {} } = {}, loading, error }) => {
+          if (error) return <ErrorCard error={error} />;
+
+          const coverImage = get(node, 'coverImage.sources', undefined);
+          const hasMedia = !!get(node, 'videos.[0].sources[0]', null);
+          const isLive = get(node, 'liveStream.isLive', false);
+          const labelText = get(node, 'parentChannel.name', null);
+
+          return (
+            <Component
+              {...node}
+              hasAction={hasMedia}
+              isLive={isLive}
+              labelText={labelText}
+              {...otherProps}
+              coverImage={coverImage}
+              isLoading={loading}
+            />
+          );
+        }}
+      </Query>
+    );
+  }
+);
+
+ContentCardConnected.propTypes = {
+  Component: PropTypes.func,
+  mapProps: PropTypes.func,
+  contentId: PropTypes.string,
+  isLoading: PropTypes.bool,
+  tile: PropTypes.bool,
+};
+
+ContentCardConnected.defaultProps = {
+  Component: contentCardComponentMapper,
+};
+
+ContentCardConnected.displayName = 'ContentCardConnected';
+
+export default ContentCardConnected;
diff --git a/apolloschurchapp/src/ui/ContentCardConnected/contentCardComponentMapper.js b/apolloschurchapp/src/ui/ContentCardConnected/contentCardComponentMapper.js
new file mode 100644
index 0000000..30d8e1e
--- /dev/null
+++ b/apolloschurchapp/src/ui/ContentCardConnected/contentCardComponentMapper.js
@@ -0,0 +1,19 @@
+import React from 'react';
+import { get } from 'lodash';
+
+import { DefaultCard, HighlightCard } from '@apollosproject/ui-kit';
+
+const contentCardComponentMapper = (props) => {
+  // map typename to the the card we want to render.
+  switch (get(props, '__typename')) {
+    case 'MediaContentItem':
+    case 'WeekendContentItem':
+    case 'ContentSeriesContentItem':
+    case 'DevotionalContentItem':
+      return <HighlightCard {...props} />;
+    default:
+      return <DefaultCard {...props} />;
+  }
+};
+
+export default contentCardComponentMapper;
diff --git a/apolloschurchapp/src/ui/ContentCardConnected/index.js b/apolloschurchapp/src/ui/ContentCardConnected/index.js
index b64bdc6..c8fd37e 100644
--- a/apolloschurchapp/src/ui/ContentCardConnected/index.js
+++ b/apolloschurchapp/src/ui/ContentCardConnected/index.js
@@ -1,55 +1,5 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-import { Query } from 'react-apollo';
-import { get } from 'lodash';
+import ContentCardConnected from './ContentCardConnected';
 
-import { ContentCard, ErrorCard } from '@apollosproject/ui-kit';
-import getContentCard from './query';
-
-export { tileCardFragment, largeCardFragment } from './query';
-
-const ContentCardConnected = ({
-  contentId,
-  isLoading,
-  tile,
-  ...otherProps
-}) => {
-  if (!contentId || isLoading)
-    return <ContentCard {...otherProps} isLoading tile={tile} />;
-
-  return (
-    <Query query={getContentCard} variables={{ contentId, tile: !!tile }}>
-      {({ data: { node = {} } = {}, loading, error }) => {
-        if (error) return <ErrorCard error={error} />;
-
-        const metrics = [
-          {
-            icon: node.isLiked ? 'like-solid' : 'like',
-            value: node.likedCount,
-          },
-        ];
-
-        const coverImage = get(node, 'coverImage.sources', undefined);
-
-        return (
-          <ContentCard
-            {...node}
-            {...otherProps}
-            coverImage={coverImage}
-            metrics={metrics}
-            tile={tile}
-            isLoading={loading}
-          />
-        );
-      }}
-    </Query>
-  );
-};
-
-ContentCardConnected.propTypes = {
-  isLoading: PropTypes.bool,
-  contentId: PropTypes.string,
-  tile: PropTypes.bool,
-};
+export { LARGE_CARD_FRAGMENT } from './query';
 
 export default ContentCardConnected;
diff --git a/apolloschurchapp/src/ui/ContentCardConnected/query.js b/apolloschurchapp/src/ui/ContentCardConnected/query.js
index abefc12..1ff178a 100644
--- a/apolloschurchapp/src/ui/ContentCardConnected/query.js
+++ b/apolloschurchapp/src/ui/ContentCardConnected/query.js
@@ -1,6 +1,6 @@
 import gql from 'graphql-tag';
 
-export const coverImageFragment = gql`
+export const COVER_IMAGE_FRAGMENT = gql`
   fragment coverImageFragment on ContentItem {
     coverImage {
       sources {
@@ -10,7 +10,7 @@ export const coverImageFragment = gql`
   }
 `;
 
-export const themeFragment = gql`
+export const THEME_FRAGMENT = gql`
   fragment themeFragment on ContentItem {
     theme {
       type
@@ -24,70 +24,63 @@ export const themeFragment = gql`
   }
 `;
 
-export const contentCardMetricsFragment = gql`
-  fragment contentCardMetricsFragment on ContentItem {
-    isLiked
-    likedCount
-  }
-`;
-
-export const baseCardFragment = gql`
+export const BASE_CARD_FRAGMENT = gql`
   fragment baseCardFragment on ContentItem {
     id
     __typename
-    ...contentCardMetricsFragment
     ...coverImageFragment
     ...themeFragment
     title
     summary
-  }
-  ${contentCardMetricsFragment}
-  ${coverImageFragment}
-  ${themeFragment}
-`;
-
-export const tileCardFragment = gql`
-  fragment tileCardFragment on ContentItem {
-    ... on ContentSeriesContentItem {
-      id
-      ...themeFragment
-      ...coverImageFragment
-      ...contentCardMetricsFragment
+    isLiked
+    ... on MediaContentItem {
+      videos {
+        sources {
+          uri
+        }
+      }
     }
-    ... on UniversalContentItem {
-      ...baseCardFragment
+    ... on WeekendContentItem {
+      videos {
+        sources {
+          uri
+        }
+      }
+      liveStream {
+        isLive
+      }
+      parentChannel {
+        id
+        name
+      }
     }
     ... on DevotionalContentItem {
-      ...baseCardFragment
-    }
-    ... on MediaContentItem {
-      ...baseCardFragment
+      parentChannel {
+        id
+        name
+      }
     }
   }
-  ${baseCardFragment}
-  ${themeFragment}
-  ${coverImageFragment}
-  ${contentCardMetricsFragment}
+  ${COVER_IMAGE_FRAGMENT}
+  ${THEME_FRAGMENT}
 `;
 
-export const largeCardFragment = gql`
+export const LARGE_CARD_FRAGMENT = gql`
   fragment largeCardFragment on ContentItem {
     ...baseCardFragment
   }
-  ${baseCardFragment}
+  ${BASE_CARD_FRAGMENT}
 `;
 
-const getContentCard = gql`
-  query getContentCard($contentId: ID!, $tile: Boolean!) {
+const GET_CONTENT_CARD = gql`
+  query getContentCard($contentId: ID!) {
     node(id: $contentId) {
       id
       __typename
-      ...tileCardFragment @include(if: $tile)
-      ...largeCardFragment @skip(if: $tile)
+      ...largeCardFragment
     }
   }
-  ${tileCardFragment}
-  ${largeCardFragment}
+  ${LARGE_CARD_FRAGMENT}
 `;
 
-export default getContentCard;
+export default GET_CONTENT_CARD;
diff --git a/apolloschurchapp/src/ui/HTMLView/HTMLView.stories.js b/apolloschurchapp/src/ui/HTMLView/HTMLView.stories.js
deleted file mode 100644
index 0d69e14..0000000
--- a/apolloschurchapp/src/ui/HTMLView/HTMLView.stories.js
+++ /dev/null
@@ -1,21 +0,0 @@
-import React from 'react';
-import { ScrollView } from 'react-native';
-import { storiesOf } from '@storybook/react-native';
-
-import HTMLView from '.';
-
-storiesOf('HTMLView', module)
-  .add('Example', () => (
-    <ScrollView>
-      <HTMLView>
-        {
-          "<p>I sat on my couch next to my high school <a href='https://newspringfuse.com/groups' target='_blank'>Fuse Group</a>, silently fuming at their inability to put their phones down during Bible study. Finally, I spoke up, teasing one of the girls in a tone that clearly said, &ldquo;I&rsquo;m not actually kidding.&rdquo;&nbsp;</p>\n\n<p>A few days later, I was in the car with my sister, and as I sat in the passenger seat responding to emails, I heard her laugh and say, &ldquo;You always mumble when you are typing. Stop doing that.&rdquo;&nbsp;</p>\n\n<p>&ldquo;Sorry,&rdquo; I responded. &ldquo;I just don&rsquo;t want people to think I&rsquo;m ignoring them when I&rsquo;m typing.&rdquo;</p>\n\n<p>But the truth is, I am ignoring them! In my head, this behavior is totally acceptable. I tell myself I&rsquo;m tending to my priorities in order, and in doing so, I send a message to the person in front of me that she is of lesser importance.</p>\n\n<blockquote>\n<p>My phone is the primary outlet that distracts me from people who need my attention.</p>\n</blockquote>\n\n<p>I quickly get frustrated when I am the one on the outside, but how often to I shut others out during my own social media binges or email frenzies? Just like my girls, I&rsquo;m learning that my phone is the primary outlet that distracts me from people who need my attention.</p>\n\n<h3>Why Being Present Matters</h3>\n\n<p>There is nothing wrong with using our phones &mdash; as long as we remember that the best investment we can make is to invest in our relationships with Jesus and each other. We were created for <a href='http://newspring.cc/community' target='_blank'>community</a> by God, who exists in community as Father, Son, and Holy Spirit (John 1:1-2, Genesis 2:18).&nbsp;</p>\n\n<p>Our phones help us stay connected, but they are not the foundation of all connection. If we&rsquo;re honest, our phones are much quicker to distract and disengage us from the people right in front of us.&nbsp;</p>\n\n<p>Jesus said loving God and loving others is greatest of all God&rsquo;s commandments (Matthew 22:38-40). And, after trying everything the world had to offer, King Solomon reminded his people that their relationships with God and others are the only things that really matter (Ecclesiastes 2:24-26, Ecclesiastes 3:9).&nbsp;</p>\n\n<blockquote>\n<p>Greater love has no one than this: to lay down one&rsquo;s phone for one&rsquo;s loved ones.</p>\n</blockquote>\n\n<p>So the next time we feel like we have to text back immediately or tweet before someone else does, consider:&nbsp;</p>\n\n<ul>\n\t<li>Am I putting others before myself right now?</li>\n\t<li>How can I love the people around me if I&rsquo;m not even paying attention to them?</li>\n\t<li>What if Jesus wants to speak through me, but I&rsquo;ve got my nose stuck in my phone?&nbsp;</li>\n</ul>\n\n<p>The world won&rsquo;t implode if we don&rsquo;t reply to every text or email immediately. And that Instagram picture doesn&rsquo;t need to go up ASAP. If it&rsquo;s already been a week between posts, what&rsquo;s a few more hours? We love everyone better &mdash; our friends to our coworkers to our social media followers &mdash; when we give them the gift of our full attention.&nbsp;</p>\n\n<p>I can almost hear Jesus saying, &ldquo;Greater love has no one than this: to lay down one&rsquo;s phone for one&rsquo;s loved ones&rdquo;&nbsp; (John 15:13).&nbsp;</p>\n\n<h3>Four Ways To Stay Away From Your Phone And Be Intentionally Present</h3>\n\n<p><a href='http://newspring.cc/christmas' target='_blank'>This holiday season</a>, we will have more opportunities to be around friends and family than usual. So let&rsquo;s make the most of each minute. The following are some tips can help us all be a little more present.&nbsp;&nbsp;</p>\n\n<ol>\n\t<li>Turn your phone off, leave it in the car, or put it in airplane mode. Habitual notification checks can take a break.</li>\n\t<li>Talk about something other than yourself. Ask someone else about their life (job, school, kids).</li>\n\t<li>Look for opportunities to encourage someone. Ask the Holy Spirit to speak through you and help you love people.</li>\n\t<li>Ask Jesus to keep your heart interested and engaged in what really matters. He wants to help!</li>\n</ol>\n\n<p>Intentionally taking advantage of time with loved ones sometimes does require sacrificing our own immediate desires or comforts, but that&rsquo;s what we are commanded to do (Philippians 2:3).&nbsp;</p>\n\n<p>Take pictures, but don&rsquo;t let the only memory be a digital one. The positive outcome of interactions should be more than Instagram likes. Unplug from social media, choose to be present, and you will be surprised at the good it does for your heart and the hearts of those around you.&nbsp;</p>"
-        }
-      </HTMLView>
-    </ScrollView>
-  ))
-  .add('isLoading', () => (
-    <ScrollView>
-      <HTMLView isLoading />
-    </ScrollView>
-  ));
diff --git a/apolloschurchapp/src/ui/HTMLView/HTMLView.tests.js b/apolloschurchapp/src/ui/HTMLView/HTMLView.tests.js
deleted file mode 100644
index a0eb6ec..0000000
--- a/apolloschurchapp/src/ui/HTMLView/HTMLView.tests.js
+++ /dev/null
@@ -1,191 +0,0 @@
-import React from 'react';
-import renderer from 'react-test-renderer';
-
-import Providers from 'apolloschurchapp/src/Providers';
-
-import HTMLView from '.';
-
-describe('the HTMLView component', () => {
-  it('should render an H1', () => {
-    const tree = renderer.create(
-      <Providers>
-        <HTMLView>{'<h1>Testings</h1>'}</HTMLView>
-      </Providers>
-    );
-
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render an H2', () => {
-    const tree = renderer.create(
-      <Providers>
-        <HTMLView>{'<h2>Testings</h2>'}</HTMLView>
-      </Providers>
-    );
-
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render an H3', () => {
-    const tree = renderer.create(
-      <Providers>
-        <HTMLView>{'<h3>Testings</h3>'}</HTMLView>
-      </Providers>
-    );
-
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render an H4', () => {
-    const tree = renderer.create(
-      <Providers>
-        <HTMLView>{'<h4>Testings</h4>'}</HTMLView>
-      </Providers>
-    );
-
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render an H5', () => {
-    const tree = renderer.create(
-      <Providers>
-        <HTMLView>{'<h5>Testings</h5>'}</HTMLView>
-      </Providers>
-    );
-
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render an H6', () => {
-    const tree = renderer.create(
-      <Providers>
-        <HTMLView>{'<h6>Testings</h6>'}</HTMLView>
-      </Providers>
-    );
-
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render a paragraph', () => {
-    const tree = renderer.create(
-      <Providers>
-        <HTMLView>{'<p>Testings</p>'}</HTMLView>
-      </Providers>
-    );
-
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render italic text', () => {
-    const tree = renderer.create(
-      <Providers>
-        <HTMLView>{'<p><em>Testings</em></p>'}</HTMLView>
-      </Providers>
-    );
-
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render bold text', () => {
-    const tree = renderer.create(
-      <Providers>
-        <HTMLView>{'<p><strong>Testings</strong></p>'}</HTMLView>
-      </Providers>
-    );
-
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render a block quote', () => {
-    const tree = renderer.create(
-      <Providers>
-        <HTMLView>
-          {'<p>Testings</p><blockquote>Testings</blockquote>'}
-        </HTMLView>
-      </Providers>
-    );
-
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render a list', () => {
-    const tree = renderer.create(
-      <Providers>
-        <HTMLView>{'<ul><li>Testings</li><li>Testings</li></ul>'}</HTMLView>
-      </Providers>
-    );
-
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render a link', () => {
-    const tree = renderer.create(
-      <Providers>
-        <HTMLView>
-          {'<p>Testings <a href="http://wwww.google.com">Google</a></p>'}
-        </HTMLView>
-      </Providers>
-    );
-
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render handle relative links', () => {
-    const tree = renderer.create(
-      <Providers>
-        <HTMLView>
-          {'<p>Testings <a href="//google.com">Google</a></p>'}
-        </HTMLView>
-      </Providers>
-    );
-
-    expect(tree).toMatchSnapshot();
-  });
-  it('strips out badly formatted links', () => {
-    const tree = renderer.create(
-      <Providers>
-        <HTMLView>{"<p><a href='{page_536525}'>Bad link</a></p>"}</HTMLView>
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render an image', () => {
-    const tree = renderer.create(
-      <Providers>
-        <HTMLView>
-          {'<img src="https://placeholdit.co/i/150x150?bg=eeeeee&fc=577084" />'}
-        </HTMLView>
-      </Providers>
-    );
-
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render a line break (br)', () => {
-    const tree = renderer.create(
-      <Providers>
-        <HTMLView>{'<p>Testings</p><br>'}</HTMLView>
-      </Providers>
-    );
-
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render a loading state', () => {
-    const tree = renderer.create(
-      <Providers>
-        <HTMLView isLoading />
-      </Providers>
-    );
-
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render example HTML', () => {
-    const tree = renderer.create(
-      <Providers>
-        <HTMLView>
-          {
-            "<p>I sat on my couch next to my high school <a href='https://newspringfuse.com/groups' target='_blank'>Fuse Group</a>, silently fuming at their inability to put their phones down during Bible study. Finally, I spoke up, teasing one of the girls in a tone that clearly said, &ldquo;I&rsquo;m not actually kidding.&rdquo;&nbsp;</p>\n\n<p>A few days later, I was in the car with my sister, and as I sat in the passenger seat responding to emails, I heard her laugh and say, &ldquo;You always mumble when you are typing. Stop doing that.&rdquo;&nbsp;</p>\n\n<p>&ldquo;Sorry,&rdquo; I responded. &ldquo;I just don&rsquo;t want people to think I&rsquo;m ignoring them when I&rsquo;m typing.&rdquo;</p>\n\n<p>But the truth is, I am ignoring them! In my head, this behavior is totally acceptable. I tell myself I&rsquo;m tending to my priorities in order, and in doing so, I send a message to the person in front of me that she is of lesser importance.</p>\n\n<blockquote>\n<p>My phone is the primary outlet that distracts me from people who need my attention.</p>\n</blockquote>\n\n<p>I quickly get frustrated when I am the one on the outside, but how often to I shut others out during my own social media binges or email frenzies? Just like my girls, I&rsquo;m learning that my phone is the primary outlet that distracts me from people who need my attention.</p>\n\n<h3>Why Being Present Matters</h3>\n\n<p>There is nothing wrong with using our phones &mdash; as long as we remember that the best investment we can make is to invest in our relationships with Jesus and each other. We were created for <a href='http://newspring.cc/community' target='_blank'>community</a> by God, who exists in community as Father, Son, and Holy Spirit (John 1:1-2, Genesis 2:18).&nbsp;</p>\n\n<p>Our phones help us stay connected, but they are not the foundation of all connection. If we&rsquo;re honest, our phones are much quicker to distract and disengage us from the people right in front of us.&nbsp;</p>\n\n<p>Jesus said loving God and loving others is greatest of all God&rsquo;s commandments (Matthew 22:38-40). And, after trying everything the world had to offer, King Solomon reminded his people that their relationships with God and others are the only things that really matter (Ecclesiastes 2:24-26, Ecclesiastes 3:9).&nbsp;</p>\n\n<blockquote>\n<p>Greater love has no one than this: to lay down one&rsquo;s phone for one&rsquo;s loved ones.</p>\n</blockquote>\n\n<p>So the next time we feel like we have to text back immediately or tweet before someone else does, consider:&nbsp;</p>\n\n<ul>\n\t<li>Am I putting others before myself right now?</li>\n\t<li>How can I love the people around me if I&rsquo;m not even paying attention to them?</li>\n\t<li>What if Jesus wants to speak through me, but I&rsquo;ve got my nose stuck in my phone?&nbsp;</li>\n</ul>\n\n<p>The world won&rsquo;t implode if we don&rsquo;t reply to every text or email immediately. And that Instagram picture doesn&rsquo;t need to go up ASAP. If it&rsquo;s already been a week between posts, what&rsquo;s a few more hours? We love everyone better &mdash; our friends to our coworkers to our social media followers &mdash; when we give them the gift of our full attention.&nbsp;</p>\n\n<p>I can almost hear Jesus saying, &ldquo;Greater love has no one than this: to lay down one&rsquo;s phone for one&rsquo;s loved ones&rdquo;&nbsp; (John 15:13).&nbsp;</p>\n\n<h3>Four Ways To Stay Away From Your Phone And Be Intentionally Present</h3>\n\n<p><a href='http://newspring.cc/christmas' target='_blank'>This holiday season</a>, we will have more opportunities to be around friends and family than usual. So let&rsquo;s make the most of each minute. The following are some tips can help us all be a little more present.&nbsp;&nbsp;</p>\n\n<ol>\n\t<li>Turn your phone off, leave it in the car, or put it in airplane mode. Habitual notification checks can take a break.</li>\n\t<li>Talk about something other than yourself. Ask someone else about their life (job, school, kids).</li>\n\t<li>Look for opportunities to encourage someone. Ask the Holy Spirit to speak through you and help you love people.</li>\n\t<li>Ask Jesus to keep your heart interested and engaged in what really matters. He wants to help!</li>\n</ol>\n\n<p>Intentionally taking advantage of time with loved ones sometimes does require sacrificing our own immediate desires or comforts, but that&rsquo;s what we are commanded to do (Philippians 2:3).&nbsp;</p>\n\n<p>Take pictures, but don&rsquo;t let the only memory be a digital one. The positive outcome of interactions should be more than Instagram likes. Unplug from social media, choose to be present, and you will be surprised at the good it does for your heart and the hearts of those around you.</p>"
-          }
-        </HTMLView>
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should accept an alternative render', () => {
-    const testRenderer = jest.fn();
-    renderer.create(
-      <Providers>
-        <HTMLView renderer={testRenderer}>{'<p>Testings</p>'}</HTMLView>
-      </Providers>
-    );
-
-    expect(testRenderer).toBeCalled();
-  });
-});
diff --git a/apolloschurchapp/src/ui/HTMLView/defaultRenderer.js b/apolloschurchapp/src/ui/HTMLView/defaultRenderer.js
deleted file mode 100644
index b8af60c..0000000
--- a/apolloschurchapp/src/ui/HTMLView/defaultRenderer.js
+++ /dev/null
@@ -1,128 +0,0 @@
-import React, { Children } from 'react';
-import { Text, Linking } from 'react-native';
-import { decodeHTML } from 'entities';
-
-import {
-  BodyText,
-  H1,
-  H2,
-  H3,
-  H4,
-  H5,
-  H6,
-  Paragraph,
-  BlockQuote,
-  BulletListItem,
-  ButtonLink,
-  ConnectedImage,
-} from '@apollosproject/ui-kit';
-
-const LINE_BREAK = '\n';
-const TEXT_TYPES_THAT_SHOULD_WRAP = [Text, BodyText, ButtonLink];
-
-export const wrapTextChildren = (children, Component = BodyText) => {
-  const newChildren = [];
-  let currentTextChildren = [];
-  Children.toArray(children).forEach((child, i) => {
-    if (TEXT_TYPES_THAT_SHOULD_WRAP.includes(child.type)) {
-      currentTextChildren.push(child);
-    } else {
-      if (currentTextChildren.length) {
-        newChildren.push(
-          // eslint-disable-next-line
-          <Component key={`composed-children-${i}`}>
-            {currentTextChildren}
-          </Component>
-        );
-        currentTextChildren = [];
-      }
-      newChildren.push(child);
-    }
-  });
-  if (currentTextChildren.length) {
-    newChildren.push(
-      <Component key="composed-children">{currentTextChildren}</Component>
-    );
-  }
-  return newChildren;
-};
-
-const defaultRenderer = (node, { children }) => {
-  if (node.type === 'text' && node.data && node.data.trim()) {
-    const text = decodeHTML(node.data);
-    if (!node.parent) {
-      return (
-        <Paragraph>
-          <BodyText>{text}</BodyText>
-        </Paragraph>
-      );
-    }
-    return <Text>{text}</Text>;
-  }
-
-  switch (node.name) {
-    case 'p':
-      return <Paragraph>{wrapTextChildren(children)}</Paragraph>;
-    case 'strong':
-      return <BodyText bold>{children}</BodyText>;
-    case 'em':
-      return <BodyText italic>{children}</BodyText>;
-    case 'blockquote':
-      return <BlockQuote>{wrapTextChildren(children, Text)}</BlockQuote>;
-    case 'h1':
-      return <H1 padded>{wrapTextChildren(children, Text)}</H1>;
-    case 'h2':
-      return <H2 padded>{wrapTextChildren(children, Text)}</H2>;
-    case 'h3':
-      return <H3 padded>{wrapTextChildren(children, Text)}</H3>;
-    case 'h4':
-      return <H4 padded>{wrapTextChildren(children, Text)}</H4>;
-    case 'h5':
-      return <H5 padded>{wrapTextChildren(children, Text)}</H5>;
-    case 'h6':
-      return <H6 padded>{wrapTextChildren(children, Text)}</H6>;
-    case 'ul':
-      return <Paragraph>{children}</Paragraph>;
-    case 'li':
-      return <BulletListItem>{wrapTextChildren(children)}</BulletListItem>;
-    case 'a': {
-      let url = node.attribs && node.attribs.href;
-      url = decodeHTML(url);
-
-      if (url && url.startsWith('//')) {
-        url = `http:${url}`;
-      }
-      if (!url.startsWith('http')) {
-        // we can't currently handle non web-links, so just return regular text instead:
-        return children;
-      }
-      const onPress = () => Linking.openURL(url);
-      if (url) {
-        return <ButtonLink onPress={onPress}>{children}</ButtonLink>;
-      }
-    }
-    /* ignoring fallthrough on the next line because of the conditional return above,
-     * so we handle the edge-case of an <a> tag used w/o a href
-     */
-    case 'img': {
-      const source = {
-        url: node.attribs.src,
-      };
-
-      const imgStyles = {
-        resizeMode: 'contain',
-        width: '100%',
-      };
-
-      return (
-        <ConnectedImage maintainAspectRatio source={source} style={imgStyles} />
-      );
-    }
-    case 'br':
-      return <BodyText>{LINE_BREAK}</BodyText>;
-    default:
-      return children;
-  }
-};
-
-export default defaultRenderer;
diff --git a/apolloschurchapp/src/ui/HTMLView/index.js b/apolloschurchapp/src/ui/HTMLView/index.js
deleted file mode 100644
index 5873b74..0000000
--- a/apolloschurchapp/src/ui/HTMLView/index.js
+++ /dev/null
@@ -1,75 +0,0 @@
-import React, { PureComponent, cloneElement } from 'react';
-import PropTypes from 'prop-types';
-import { View } from 'react-native';
-import { Parser, DomHandler } from 'htmlparser2';
-
-import { Paragraph as ParagraphPlaceholder } from '@apollosproject/ui-kit';
-
-import defaultRenderer from './defaultRenderer';
-
-class HTMLView extends PureComponent {
-  static propTypes = {
-    children: PropTypes.string,
-    renderer: PropTypes.func,
-    isLoading: PropTypes.bool,
-  };
-
-  static defaultProps = {
-    renderer: defaultRenderer,
-  };
-
-  constructor(...args) {
-    super(...args);
-    this.parser = new Parser(
-      new DomHandler(
-        (err, dom) => {
-          this.parsed = this.renderDom(dom);
-        },
-        { normalizeWhitespace: true }
-      )
-    );
-    if (this.props.children) this.parse(this.props.children);
-  }
-
-  componentWillUpdate(props) {
-    this.parse(props.children);
-  }
-
-  parse(html = '') {
-    this.parser.write(html);
-    this.parser.done();
-  }
-
-  renderDom(dom) {
-    return dom
-      .map((node, index) => {
-        let children = [];
-        if (node.children) children = this.renderDom(node.children);
-
-        let renderedNode = this.props.renderer(node, { children });
-        if (
-          !renderedNode &&
-          renderedNode !== null &&
-          this.props.renderer !== defaultRenderer
-        ) {
-          renderedNode = defaultRenderer(node, { children });
-        }
-
-        if (renderedNode && !Array.isArray(renderedNode)) {
-          renderedNode = cloneElement(renderedNode, { key: index });
-        }
-        return renderedNode;
-      })
-      .filter((e) => e !== undefined);
-  }
-
-  render() {
-    return (
-      <ParagraphPlaceholder lineNumber={8} onReady={!this.props.isLoading}>
-        <View>{this.parsed}</View>
-      </ParagraphPlaceholder>
-    );
-  }
-}
-
-export default HTMLView;
diff --git a/apolloschurchapp/src/ui/HorizontalContentCardConnected/horizontalContentCardComponentMapper.js b/apolloschurchapp/src/ui/HorizontalContentCardConnected/horizontalContentCardComponentMapper.js
new file mode 100644
index 0000000..c658e47
--- /dev/null
+++ b/apolloschurchapp/src/ui/HorizontalContentCardConnected/horizontalContentCardComponentMapper.js
@@ -0,0 +1,22 @@
+import React from 'react';
+import { get } from 'lodash';
+
+import {
+  HorizontalDefaultCard,
+  HorizontalHighlightCard,
+} from '@apollosproject/ui-kit';
+
+const horizontalContentCardComponentMapper = (props) => {
+  // map typename to the the card we want to render.
+  switch (get(props, '__typename')) {
+    case 'MediaContentItem':
+    case 'WeekendContentItem':
+    case 'ContentSeriesContentItem':
+    case 'DevotionalContentItem':
+      return <HorizontalHighlightCard {...props} />;
+    default:
+      return <HorizontalDefaultCard {...props} />;
+  }
+};
+
+export default horizontalContentCardComponentMapper;
diff --git a/apolloschurchapp/src/ui/HorizontalContentCardConnected/index.js b/apolloschurchapp/src/ui/HorizontalContentCardConnected/index.js
new file mode 100644
index 0000000..c0a38bc
--- /dev/null
+++ b/apolloschurchapp/src/ui/HorizontalContentCardConnected/index.js
@@ -0,0 +1,29 @@
+import React, { memo } from 'react';
+import PropTypes from 'prop-types';
+
+import ContentCardConnected from '../ContentCardConnected';
+
+import horizontalContentCardComponentMapper from './horizontalContentCardComponentMapper';
+
+const HorizontalContentCardConnected = memo(
+  ({ Component, isLoading, ...otherProps }) => (
+    <ContentCardConnected
+      Component={Component}
+      isLoading={isLoading}
+      {...otherProps}
+    />
+  )
+);
+
+HorizontalContentCardConnected.propTypes = {
+  Component: PropTypes.func,
+  isLoading: PropTypes.bool,
+};
+
+HorizontalContentCardConnected.defaultProps = {
+  Component: horizontalContentCardComponentMapper,
+};
+
+HorizontalContentCardConnected.displayName = 'HorizontalContentCardConnected';
+
+export default HorizontalContentCardConnected;
diff --git a/apolloschurchapp/src/ui/LandingScreen/LandingScreen.stories.js b/apolloschurchapp/src/ui/LandingScreen/LandingScreen.stories.js
new file mode 100644
index 0000000..d9ebd3c
--- /dev/null
+++ b/apolloschurchapp/src/ui/LandingScreen/LandingScreen.stories.js
@@ -0,0 +1,23 @@
+import React from 'react';
+import { storiesOf } from '@apollosproject/ui-storybook';
+import { GradientOverlayImage } from '@apollosproject/ui-kit';
+
+import LandingScreen from '.';
+
+storiesOf('LandingScreen', module)
+  .add('default', () => <LandingScreen />)
+  .add('slideTitle', () => <LandingScreen slideTitle={'Custom title text'} />)
+  .add('description', () => (
+    <LandingScreen description={'Custom description text'} />
+  ))
+  .add('textColor', () => <LandingScreen textColor={'salmon'} />)
+  .add('ImageComponent', () => (
+    <LandingScreen
+      BackgroundComponent={
+        <GradientOverlayImage
+          source={'https://picsum.photos/375/812/?random'}
+        />
+      }
+    />
+  ))
+  .add('Slide props', () => <LandingScreen onPressPrimary={() => {}} />);
diff --git a/apolloschurchapp/src/ui/LandingScreen/LandingScreen.tests.js b/apolloschurchapp/src/ui/LandingScreen/LandingScreen.tests.js
new file mode 100644
index 0000000..13e64f1
--- /dev/null
+++ b/apolloschurchapp/src/ui/LandingScreen/LandingScreen.tests.js
@@ -0,0 +1,64 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+import { GradientOverlayImage } from '@apollosproject/ui-kit';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import LandingScreen from '.';
+
+describe('The Onboarding LandingScreen component', () => {
+  it('should render', () => {
+    const tree = renderer.create(
+      <Providers>
+        <LandingScreen />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a custom title', () => {
+    const tree = renderer.create(
+      <Providers>
+        <LandingScreen slideTitle={'Custom title text'} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a custom description', () => {
+    const tree = renderer.create(
+      <Providers>
+        <LandingScreen description={'Custom description text'} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render with a custom text color', () => {
+    const tree = renderer.create(
+      <Providers>
+        <LandingScreen textColor={'salmon'} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render with an ImageComponent', () => {
+    const tree = renderer.create(
+      <Providers>
+        <LandingScreen
+          BackgroundComponent={
+            <GradientOverlayImage
+              source={'https://picsum.photos/375/812/?random'}
+            />
+          }
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should pass additional props to Slide', () => {
+    const tree = renderer.create(
+      <Providers>
+        <LandingScreen onPressPrimary={jest.fn()} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/LandingScreen/index.js b/apolloschurchapp/src/ui/LandingScreen/index.js
new file mode 100644
index 0000000..f929f81
--- /dev/null
+++ b/apolloschurchapp/src/ui/LandingScreen/index.js
@@ -0,0 +1,86 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+
+import {
+  styled,
+  withTheme,
+  Icon,
+  H1,
+  H4,
+  PaddedView,
+  BackgroundView,
+} from '@apollosproject/ui-kit';
+
+import { Slide } from '@apollosproject/ui-onboarding';
+
+const Content = styled({
+  flex: 1,
+  justifyContent: 'center',
+})(PaddedView);
+
+const BrandIcon = withTheme(({ theme, color }) => ({
+  name: 'brand-icon',
+  size: theme.sizing.baseUnit * 3,
+  ...(color ? { fill: color } : {}),
+  style: {
+    marginBottom: theme.sizing.baseUnit,
+  },
+}))(Icon);
+
+const Title = styled(({ theme, color }) => ({
+  marginBottom: theme.sizing.baseUnit * 2,
+  ...(color ? { color } : {}),
+}))(H1);
+
+const StyledH4 = styled(({ color }) => ({
+  ...(color ? { color } : {}),
+}))(H4);
+
+const LandingScreen = ({
+  slideTitle,
+  description,
+  textColor,
+  BackgroundComponent,
+  ...props
+}) => (
+  <BackgroundView>
+    <Slide {...props} scrollEnabled={false}>
+      {BackgroundComponent}
+      <Content>
+        <BrandIcon color={textColor} />
+        <Title color={textColor}>{slideTitle}</Title>
+        <StyledH4 color={textColor}>{description}</StyledH4>
+      </Content>
+    </Slide>
+  </BackgroundView>
+);
+
+LandingScreen.propTypes = {
+  /* The `Swiper` component used in `<onBoarding>` looks for and hijacks the title prop of it's
+   * children. Thus we have to use more unique name.
+   */
+  slideTitle: PropTypes.string,
+  description: PropTypes.string,
+  textColor: PropTypes.string, // Use for custom text and `BrandIcon` color when overlaying text on an image or video needs more clarity. Defaults to theme driven colors.
+  /* Recommended usage:
+   * - `Image` (react-native)
+   * - `GradientOverlayImage` (@apollosproject/ui-kit) for increased readability
+   * - `Video` (react-native-video) because moving pictures!
+   */
+  BackgroundComponent: PropTypes.oneOfType([
+    PropTypes.arrayOf(PropTypes.node),
+    PropTypes.node,
+  ]),
+};
+
+LandingScreen.defaultProps = {
+  slideTitle: "We're glad you're here.",
+  description:
+    "We're not just a building you go to, but a family to belong to.",
+};
+
+LandingScreen.navigationOptions = {
+  header: null,
+};
+
+export default LandingScreen;
diff --git a/apolloschurchapp/src/ui/LikeButton/index.js b/apolloschurchapp/src/ui/LikeButton/index.js
deleted file mode 100644
index fee9f8b..0000000
--- a/apolloschurchapp/src/ui/LikeButton/index.js
+++ /dev/null
@@ -1,116 +0,0 @@
-import React from 'react';
-
-import PropTypes from 'prop-types';
-import { get } from 'lodash';
-import { Query, Mutation } from 'react-apollo';
-
-import Like from 'apolloschurchapp/src/ui/Like';
-import { track, events } from 'apolloschurchapp/src/analytics';
-
-import updateLikeEntity from './updateLikeEntity';
-import getLikedContentItem from './getLikedContentItem';
-import updateLikedContent from './updateLikedContent';
-
-const GetLikeData = ({ itemId, children }) => (
-  <Query query={getLikedContentItem} variables={{ itemId }}>
-    {({ data: { node = {} } = {}, loading }) => {
-      const isLiked = loading ? false : get(node, 'isLiked') || false;
-      return children({ isLiked, item: node });
-    }}
-  </Query>
-);
-
-GetLikeData.propTypes = {
-  itemId: PropTypes.string,
-  children: PropTypes.func.isRequired,
-};
-
-const UpdateLikeStatus = ({ itemId, item, isLiked, children }) => (
-  <Mutation
-    mutation={updateLikeEntity}
-    optimisticResponse={{
-      updateLikeEntity: {
-        operation: isLiked ? 'Unlike' : 'Like',
-        id: null, // unknown at this time
-        interactionDateTime: new Date().toJSON(),
-        __typename: 'Interaction',
-      },
-    }}
-    update={(
-      cache,
-      {
-        data: {
-          updateLikeEntity: { operation },
-        },
-      }
-    ) => {
-      updateLikedContent({ liked: operation === 'Like', cache, item });
-      cache.writeQuery({
-        query: getLikedContentItem,
-        data: {
-          node: {
-            ...item,
-            isLiked: operation === 'Like',
-          },
-        },
-      });
-    }}
-  >
-    {(createNewInteraction) =>
-      itemId
-        ? children({
-            itemId,
-            isLiked,
-            toggleLike: async (variables) => {
-              try {
-                await createNewInteraction({ variables });
-                track({
-                  eventName: isLiked
-                    ? events.UnlikeContent
-                    : events.LikeContent,
-                  properties: {
-                    id: itemId,
-                  },
-                });
-              } catch (e) {
-                throw e.message;
-              }
-            },
-          })
-        : null
-    }
-  </Mutation>
-);
-
-UpdateLikeStatus.propTypes = {
-  itemId: PropTypes.string,
-  children: PropTypes.func.isRequired,
-  isLiked: PropTypes.bool.isRequired,
-  item: PropTypes.shape({
-    id: PropTypes.string,
-    __typename: PropTypes.string,
-    isLiked: PropTypes.bool,
-  }),
-};
-
-const LikeButton = ({ itemId }) => (
-  <GetLikeData itemId={itemId}>
-    {({ isLiked, item }) => (
-      <UpdateLikeStatus itemId={itemId} item={item} isLiked={isLiked}>
-        {({ toggleLike, isLiked: newLikeValue }) => (
-          <Like
-            itemId={itemId}
-            isLiked={newLikeValue}
-            toggleLike={toggleLike}
-          />
-        )}
-      </UpdateLikeStatus>
-    )}
-  </GetLikeData>
-);
-
-LikeButton.propTypes = {
-  itemId: PropTypes.string,
-};
-
-export default LikeButton;
diff --git a/apolloschurchapp/src/ui/LikeButton/updateLikedContent.js b/apolloschurchapp/src/ui/LikeButton/updateLikedContent.js
deleted file mode 100644
index 50b612a..0000000
--- a/apolloschurchapp/src/ui/LikeButton/updateLikedContent.js
+++ /dev/null
@@ -1,52 +0,0 @@
-import getAllLikedContent from 'apolloschurchapp/src/tabs/connect/getLikedContent';
-import { contentItemFragment } from 'apolloschurchapp/src/content-single/getContentItem';
-
-const addItemToLikedContentList = ({ cache, item }) => {
-  try {
-    const data = cache.readQuery({ query: getAllLikedContent });
-    const fullItem = cache.readFragment({
-      id: `${item.__typename}:${item.id}`,
-      fragment: contentItemFragment,
-    });
-    cache.writeQuery({
-      query: getAllLikedContent,
-      data: {
-        ...data,
-        getAllLikedContent: [fullItem, ...data.getAllLikedContent],
-      },
-    });
-  } catch (e) {
-    console.log(e);
-    // Most likely we haven't ran the `getAllLikedContent` query yet.
-    // We can safely exit.
-  }
-};
-
-const removeItemFromLikedContentList = ({ cache, item }) => {
-  try {
-    const data = cache.readQuery({ query: getAllLikedContent });
-    cache.writeQuery({
-      query: getAllLikedContent,
-      data: {
-        ...data,
-        getAllLikedContent: data.getAllLikedContent.filter(
-          (content) => content.id !== item.id
-        ),
-      },
-    });
-  } catch (e) {
-    console.log(e);
-    // Most likely we haven't ran the `getAllLikedContent` query yet.
-    // We can safely exit.
-  }
-};
-
-const updateLikedContent = ({ liked, cache, item }) => {
-  if (liked) {
-    addItemToLikedContentList({ cache, item });
-  } else {
-    removeItemFromLikedContentList({ cache, item });
-  }
-};
-
-export default updateLikedContent;
diff --git a/apolloschurchapp/src/ui/Like/Like.tests.js b/apolloschurchapp/src/ui/LikeContentButton/Like.tests.js
similarity index 91%
rename from apolloschurchapp/src/ui/Like/Like.tests.js
rename to apolloschurchapp/src/ui/LikeContentButton/Like.tests.js
index f7d40c2..1ec78ec 100644
--- a/apolloschurchapp/src/ui/Like/Like.tests.js
+++ b/apolloschurchapp/src/ui/LikeContentButton/Like.tests.js
@@ -5,7 +5,7 @@ import Providers from 'apolloschurchapp/src/Providers';
 
 import { LikeIcon } from '.';
 
-describe('the Like component', () => {
+describe('the LikeContentButton component', () => {
   it('should render a Like', () => {
     const tree = renderer.create(
       <Providers>
diff --git a/apolloschurchapp/src/ui/Like/index.js b/apolloschurchapp/src/ui/LikeContentButton/index.js
similarity index 68%
rename from apolloschurchapp/src/ui/Like/index.js
rename to apolloschurchapp/src/ui/LikeContentButton/index.js
index 48e19ee..3a58e27 100644
--- a/apolloschurchapp/src/ui/Like/index.js
+++ b/apolloschurchapp/src/ui/LikeContentButton/index.js
@@ -2,7 +2,9 @@ import React from 'react';
 import PropTypes from 'prop-types';
 
 import { Icon, withTheme } from '@apollosproject/ui-kit';
-import ProtectedTouchable from '../../auth/ProtectedTouchable';
+import { ProtectedTouchable } from '@apollosproject/ui-auth';
+
+import { withNavigation } from 'react-navigation';
 
 const LikeIcon = withTheme(
   ({ theme: { colors: { secondary } = {} } = {}, isLiked } = {}) => ({
@@ -15,7 +17,7 @@ LikeIcon.propTypes = {
   isLiked: PropTypes.bool,
 };
 
-const Like = ({ isLiked, toggleLike, itemId }) => (
+const LikeContentButton = withNavigation(({ isLiked, toggleLike, itemId }) => (
   <ProtectedTouchable
     onPress={() =>
       toggleLike({ itemId, operation: isLiked ? 'Unlike' : 'Like' })
@@ -23,12 +25,12 @@ const Like = ({ isLiked, toggleLike, itemId }) => (
   >
     <LikeIcon isLiked={isLiked} />
   </ProtectedTouchable>
-);
+));
 
-Like.propTypes = {
+LikeContentButton.propTypes = {
   itemId: PropTypes.string,
   isLiked: PropTypes.bool,
   toggleLike: PropTypes.func,
 };
 
-export { Like as default, LikeIcon };
+export { LikeContentButton as default, LikeIcon };
diff --git a/apolloschurchapp/src/ui/LikeButton/LikeButton.tests.js b/apolloschurchapp/src/ui/LikeContentButtonConnected/LikeButton.tests.js
similarity index 50%
rename from apolloschurchapp/src/ui/LikeButton/LikeButton.tests.js
rename to apolloschurchapp/src/ui/LikeContentButtonConnected/LikeButton.tests.js
index d3bf42f..aee7385 100644
--- a/apolloschurchapp/src/ui/LikeButton/LikeButton.tests.js
+++ b/apolloschurchapp/src/ui/LikeContentButtonConnected/LikeButton.tests.js
@@ -4,9 +4,9 @@
 // import Providers from 'apolloschurchapp/src/Providers';
 // import gql from 'graphql-tag';
 
-// import LikeButton from '.';
+// import LikeContentButtonConnected from '.';
 
-describe('the LikeButton component', () => {
+describe('the LikeContentButtonConnected component', () => {
   it('should render', () => {
     //     const updateLikeEntity = {
     //       request: {
@@ -56,7 +56,57 @@ describe('the LikeButton component', () => {
     //     };
     //     const tree = renderer.create(
     //       <Providers mocks={[updateLikeEntity, getLikedContentItem]}>
-    //         <LikeButton itemId={'asdf'} />
+    //         <LikeContentButtonConnected itemId={'asdf'} />
+    //       </Providers>
+    //     );
+    //     expect(tree).toMatchSnapshot();
+  });
+  it('should render when loading', () => {
+    //     const updateLikeEntity = {
+    //       request: {
+    //         query: gql`
+    //           mutation updateLikeEntity($itemId: ID!, $operation: LIKE_OPERATION!) {
+    //             updateLikeEntity(
+    //               input: { nodeId: $itemId, operation: $operation }
+    //             ) {
+    //               id
+    //               operation
+    //               interactionDateTime
+    //             }
+    //           }
+    //         `,
+    //         variables: {
+    //           itemId: 'asdf',
+    //           operation: 'Like',
+    //         },
+    //       },
+    //       result: {
+    //         data: {
+    //           node: { isLiked: true },
+    //         },
+    //       },
+    //     };
+    //     const getLikedContentItem = {
+    //       request: {
+    //         query: gql`
+    //           query getLikedContentItem($itemId: ID!) {
+    //             node(id: $itemId) {
+    //               ... on ContentItem {
+    //                 id
+    //                 isLiked
+    //               }
+    //             }
+    //           }
+    //         `,
+    //         variables: {
+    //           itemId: 'asdf',
+    //         },
+    //       },
+    //       result: null,
+    //     };
+    //     const tree = renderer.create(
+    //       <Providers mocks={[updateLikeEntity, getLikedContentItem]}>
+    //         <LikeContentButtonConnected itemId={'asdf'} />
     //       </Providers>
     //     );
     //     expect(tree).toMatchSnapshot();
diff --git a/apolloschurchapp/src/ui/LikeButton/getLikedContentItem.js b/apolloschurchapp/src/ui/LikeContentButtonConnected/getLikedContentItem.js
similarity index 100%
rename from apolloschurchapp/src/ui/LikeButton/getLikedContentItem.js
rename to apolloschurchapp/src/ui/LikeContentButtonConnected/getLikedContentItem.js
diff --git a/apolloschurchapp/src/ui/LikeContentButtonConnected/index.js b/apolloschurchapp/src/ui/LikeContentButtonConnected/index.js
new file mode 100644
index 0000000..724407e
--- /dev/null
+++ b/apolloschurchapp/src/ui/LikeContentButtonConnected/index.js
@@ -0,0 +1,123 @@
+import React from 'react';
+
+import PropTypes from 'prop-types';
+import { get } from 'lodash';
+import { Query, Mutation } from 'react-apollo';
+
+import LikeContentButton from 'apolloschurchapp/src/ui/LikeContentButton';
+import { AnalyticsConsumer } from '@apollosproject/ui-analytics';
+
+import UPDATE_LIKE_ENTITY from './updateLikeEntity';
+import GET_LIKED_CONTENT_ITEM from './getLikedContentItem';
+import updateLikedContent from './updateLikedContent';
+
+const GetLikeData = ({ itemId, children }) => (
+  <Query query={GET_LIKED_CONTENT_ITEM} variables={{ itemId }}>
+    {({ data: { node = {} } = {}, loading }) => {
+      const isLiked = loading ? false : get(node, 'isLiked') || false;
+      return children({ isLiked, item: node });
+    }}
+  </Query>
+);
+
+GetLikeData.propTypes = {
+  itemId: PropTypes.string,
+  children: PropTypes.func.isRequired,
+};
+
+const UpdateLikeStatus = ({
+  itemId,
+  item = { __typename: null },
+  isLiked,
+  children,
+}) => (
+  <AnalyticsConsumer>
+    {({ track }) => (
+      <Mutation
+        mutation={UPDATE_LIKE_ENTITY}
+        optimisticResponse={{
+          updateLikeEntity: {
+            id: itemId, // unknown at this time
+            isLiked: !isLiked,
+            likedCount: 0, // field required but exact value is not needed
+            __typename: item && item.__typename,
+          },
+        }}
+        update={(
+          cache,
+          {
+            data: {
+              updateLikeEntity: { isLiked: liked },
+            },
+          }
+        ) => {
+          updateLikedContent({ liked, cache, item });
+          cache.writeQuery({
+            query: GET_LIKED_CONTENT_ITEM,
+            data: {
+              node: {
+                ...item,
+                isLiked: liked,
+              },
+            },
+          });
+        }}
+      >
+        {(createNewInteraction) =>
+          itemId
+            ? children({
+                itemId,
+                isLiked,
+                toggleLike: async (variables) => {
+                  try {
+                    await createNewInteraction({ variables });
+                    track({
+                      eventName: isLiked ? 'UnlikeContent' : 'LikeContent',
+                      properties: {
+                        id: itemId,
+                      },
+                    });
+                  } catch (e) {
+                    throw e.message;
+                  }
+                },
+              })
+            : null
+        }
+      </Mutation>
+    )}
+  </AnalyticsConsumer>
+);
+
+UpdateLikeStatus.propTypes = {
+  itemId: PropTypes.string,
+  children: PropTypes.func.isRequired,
+  isLiked: PropTypes.bool.isRequired,
+  item: PropTypes.shape({
+    id: PropTypes.string,
+    __typename: PropTypes.string,
+    isLiked: PropTypes.bool,
+  }),
+};
+
+const LikeContentButtonConnected = ({ itemId }) => (
+  <GetLikeData itemId={itemId}>
+    {({ isLiked, item }) => (
+      <UpdateLikeStatus itemId={itemId} item={item} isLiked={isLiked}>
+        {({ toggleLike, isLiked: newLikeValue }) => (
+          <LikeContentButton
+            itemId={itemId}
+            isLiked={newLikeValue}
+            toggleLike={toggleLike}
+          />
+        )}
+      </UpdateLikeStatus>
+    )}
+  </GetLikeData>
+);
+
+LikeContentButtonConnected.propTypes = {
+  itemId: PropTypes.string,
+};
+
+export default LikeContentButtonConnected;
diff --git a/apolloschurchapp/src/ui/LikeButton/updateLikeEntity.js b/apolloschurchapp/src/ui/LikeContentButtonConnected/updateLikeEntity.js
similarity index 84%
rename from apolloschurchapp/src/ui/LikeButton/updateLikeEntity.js
rename to apolloschurchapp/src/ui/LikeContentButtonConnected/updateLikeEntity.js
index 892fd76..986d867 100644
--- a/apolloschurchapp/src/ui/LikeButton/updateLikeEntity.js
+++ b/apolloschurchapp/src/ui/LikeContentButtonConnected/updateLikeEntity.js
@@ -4,8 +4,8 @@ export default gql`
   mutation updateLikeEntity($itemId: ID!, $operation: LIKE_OPERATION!) {
     updateLikeEntity(input: { nodeId: $itemId, operation: $operation }) {
       id
-      operation
-      interactionDateTime
+      isLiked
+      likedCount
     }
   }
 `;
diff --git a/apolloschurchapp/src/ui/LikeContentButtonConnected/updateLikedContent.js b/apolloschurchapp/src/ui/LikeContentButtonConnected/updateLikedContent.js
new file mode 100644
index 0000000..1024864
--- /dev/null
+++ b/apolloschurchapp/src/ui/LikeContentButtonConnected/updateLikedContent.js
@@ -0,0 +1,78 @@
+import GET_ALL_LIKED_CONTENT from 'apolloschurchapp/src/tabs/connect/getLikedContent';
+import { CONTENT_ITEM_FRAGMENT } from 'apolloschurchapp/src/content-single/getContentItem';
+
+const addItemToLikedContentList = ({ cache, item, variables }) => {
+  try {
+    const data = cache.readQuery({
+      query: GET_ALL_LIKED_CONTENT,
+      variables,
+    });
+    const fullItem = cache.readFragment({
+      id: `${item.__typename}:${item.id}`,
+      fragment: CONTENT_ITEM_FRAGMENT,
+    });
+    const newEdges = [
+      fullItem,
+      ...data.likedContent.edges.map(({ node }) => node),
+    ].map((node) => ({
+      __typename: 'ContentItemsConnectionEdge',
+      node,
+    }));
+    cache.writeQuery({
+      query: GET_ALL_LIKED_CONTENT,
+      variables,
+      data: {
+        ...data,
+        likedContent: {
+          ...data.likedContent,
+          edges: newEdges,
+        },
+      },
+    });
+  } catch (e) {
+    console.log(e);
+    // Most likely we haven't ran the `getAllLikedContent` query yet.
+    // We can safely exit.
+  }
+};
+
+const removeItemFromLikedContentList = ({ cache, item, variables }) => {
+  try {
+    const data = cache.readQuery({
+      query: GET_ALL_LIKED_CONTENT,
+      variables,
+    });
+
+    const filteredEdges = data.likedContent.edges.filter(
+      ({ node }) => node.id !== item.id
+    );
+
+    cache.writeQuery({
+      query: GET_ALL_LIKED_CONTENT,
+      variables,
+      data: {
+        ...data,
+        likedContent: {
+          ...data.likedContent,
+          edges: filteredEdges,
+        },
+      },
+    });
+  } catch (e) {
+    console.log(e);
+    // Most likely we haven't ran the `getAllLikedContent` query yet.
+    // We can safely exit.
+  }
+};
+
+const updateLikedContent = ({ liked, cache, item }) => {
+  if (liked) {
+    addItemToLikedContentList({ cache, item, variables: { first: 3 } });
+    addItemToLikedContentList({ cache, item, variables: { first: 20 } });
+  } else {
+    removeItemFromLikedContentList({ cache, item, variables: { first: 3 } });
+    removeItemFromLikedContentList({ cache, item, variables: { first: 20 } });
+  }
+};
+
+export default updateLikedContent;
diff --git a/apolloschurchapp/src/ui/MediaPlayer/FullscreenControls.js b/apolloschurchapp/src/ui/MediaPlayer/FullscreenControls.js
deleted file mode 100644
index a9a46d1..0000000
--- a/apolloschurchapp/src/ui/MediaPlayer/FullscreenControls.js
+++ /dev/null
@@ -1,303 +0,0 @@
-import React, { PureComponent } from 'react';
-import PropTypes from 'prop-types';
-import {
-  BackHandler,
-  StyleSheet,
-  Animated,
-  TouchableWithoutFeedback,
-} from 'react-native';
-import { Query, withApollo } from 'react-apollo';
-import LinearGradient from 'react-native-linear-gradient';
-import SafeAreaView from 'react-native-safe-area-view';
-import { get } from 'lodash';
-import { compose } from 'recompose';
-
-import {
-  PaddedView,
-  withTheme,
-  withThemeMixin,
-  styled,
-  H4,
-  H6,
-  Icon,
-  Touchable,
-} from '@apollosproject/ui-kit';
-
-import Seeker from './Seeker';
-import { getControlState } from './queries';
-import {
-  play,
-  pause,
-  exitFullscreen,
-  showVideo,
-  hideVideo,
-  mute,
-  unmute,
-} from './mutations';
-
-import { ControlsConsumer } from './PlayheadState';
-
-const Background = withTheme(({ theme }) => ({
-  style: StyleSheet.absoluteFill,
-  colors: [
-    theme.colors.darkPrimary,
-    theme.colors.transparent,
-    theme.colors.darkPrimary,
-  ],
-  locations: [0, 0.4, 0.95],
-}))(LinearGradient);
-
-const UpperControl = styled({
-  flexDirection: 'row',
-  justifyContent: 'space-between',
-  alignItems: 'center',
-})(PaddedView);
-
-const LowerControl = styled({
-  position: 'absolute',
-  bottom: 0,
-  left: 0,
-  right: 0,
-})(PaddedView);
-
-const PlayControls = styled(({ theme }) => ({
-  flexDirection: 'row',
-  justifyContent: 'space-around',
-  alignItems: 'center',
-  paddingBottom: theme.sizing.baseUnit * 1.5,
-}))(PaddedView);
-
-const PlayHead = styled({ paddingVertical: 0 })(PaddedView);
-
-const Titles = styled({
-  alignItems: 'center',
-  paddingVertical: 0,
-})(PaddedView);
-
-const Title = styled({ textAlign: 'center' })(H4);
-const Artist = styled({ textAlign: 'center' })(H6);
-
-const IconSm = withTheme(({ theme, disabled }) => ({
-  size: theme.sizing.baseUnit,
-  opacity: disabled ? 0.5 : 1.25,
-}))(Icon);
-
-const IconMd = withTheme(({ theme, disabled }) => ({
-  size: theme.sizing.baseUnit * 1.875,
-  opacity: disabled ? 0.5 : 1,
-}))(Icon);
-
-const IconLg = withTheme(({ theme, disabled }) => ({
-  size: theme.sizing.baseUnit * 3.125,
-  opacity: disabled ? 0.5 : 1,
-}))(Icon);
-
-/**
- * FullscreenControls displays fading player controls
- */
-class FullscreenControls extends PureComponent {
-  static propTypes = {
-    client: PropTypes.shape({
-      mutate: PropTypes.func,
-    }),
-  };
-
-  state = {};
-
-  fader = new Animated.Value(1);
-
-  controlsVisible = true;
-
-  wasFullscreen = false;
-
-  open = Animated.spring(this.fader, {
-    toValue: 1,
-    useNativeDriver: true,
-  });
-
-  close = Animated.spring(this.fader, {
-    toValue: 0,
-    useNativeDriver: true,
-  });
-
-  constructor(...args) {
-    super(...args);
-    this.fader.addListener(({ value }) => {
-      this.controlsVisible = value > 0.05;
-    });
-  }
-
-  componentDidMount() {
-    this.backHandler = BackHandler.addEventListener('hardwareBackPress', () => {
-      if (this.wasFullscreen) {
-        this.handleClose();
-        return true;
-      }
-      return false;
-    });
-  }
-
-  componentWillUnmount() {
-    this.backHandler.remove();
-    if (this.closeTimeout) clearTimeout(this.closeTimeout);
-  }
-
-  handleOnScrubbing = ({ isScrubbing }) => {
-    this.setState({ isScrubbing });
-  };
-
-  handleClose = () => {
-    this.props.client.mutate({ mutation: exitFullscreen });
-  };
-
-  handlePlay = () => {
-    this.props.client.mutate({ mutation: play });
-  };
-
-  handlePause = () => {
-    this.props.client.mutate({ mutation: pause });
-  };
-
-  handleShowVideo = () => {
-    this.props.client.mutate({ mutation: showVideo });
-  };
-
-  handleHideVideo = () => {
-    this.props.client.mutate({ mutation: hideVideo });
-  };
-
-  handleMute = () => {
-    this.props.client.mutate({ mutation: mute });
-  };
-
-  handleUnMute = () => {
-    this.props.client.mutate({ mutation: unmute });
-  };
-
-  handleControlVisibility = () => {
-    if (this.closeTimeout) clearTimeout(this.closeTimeout);
-    this.open.stop();
-    this.close.stop();
-
-    if (
-      !this.state.isScrubbing &&
-      this.isVideo &&
-      this.isPlaying &&
-      this.wasFullscreen &&
-      (!this.animatingClosed && this.controlsVisible)
-    ) {
-      this.animatingClosed = true;
-      this.close.start(() => {
-        this.animatingClosed = false;
-      });
-    } else {
-      this.open.start(() => {
-        if (this.isVideo && this.isPlaying) this.queueClose();
-      });
-    }
-  };
-
-  queueClose = () => {
-    this.closeTimeout = setTimeout(this.handleControlVisibility, 5000);
-  };
-
-  renderSkipForward = ({ skip }) => (
-    <Touchable onPress={() => skip(30)}>
-      <IconMd name="skip-forward-thirty" />
-    </Touchable>
-  );
-
-  renderSkipBack = ({ skip }) => (
-    <Touchable onPress={() => skip(-30)}>
-      <IconMd name="skip-back-thirty" />
-    </Touchable>
-  );
-
-  renderFullscreenControls = ({ data: { mediaPlayer = {} } = {} }) => {
-    this.isVideo = get(mediaPlayer, 'showVideo');
-    this.isPlaying = mediaPlayer.isPlaying;
-
-    if (
-      (mediaPlayer.isFullscreen && !this.wasFullscreen) ||
-      !this.isVideo ||
-      (!this.isPlaying || (this.isPlaying && !this.wasPlaying))
-    )
-      this.handleControlVisibility();
-
-    this.wasFullscreen = mediaPlayer.isFullscreen;
-    this.wasPlaying = mediaPlayer.isPlaying;
-
-    return (
-      <TouchableWithoutFeedback onPress={this.handleControlVisibility}>
-        <Animated.View
-          style={[StyleSheet.absoluteFill, { opacity: this.fader }]}
-        >
-          <Background>
-            <SafeAreaView
-              style={StyleSheet.absoluteFill}
-              forceInset={{ top: 'always', bottom: 'always' }}
-            >
-              <Touchable onPress={this.handleClose}>
-                <UpperControl>
-                  <IconSm name="arrow-down" />
-                  <Titles>
-                    <Title>{get(mediaPlayer, 'currentTrack.title')}</Title>
-                    <Artist>{get(mediaPlayer, 'currentTrack.artist')}</Artist>
-                  </Titles>
-                  <IconSm name="empty" />
-                </UpperControl>
-              </Touchable>
-              <LowerControl>
-                <PlayHead>
-                  <Seeker onScrubbing={this.handleOnScrubbing} />
-                </PlayHead>
-                <PlayControls>
-                  {get(mediaPlayer, 'muted') ? (
-                    <Touchable onPress={this.handleUnMute}>
-                      <IconSm name="mute" />
-                    </Touchable>
-                  ) : (
-                    <Touchable onPress={this.handleMute}>
-                      <IconSm name="volume" />
-                    </Touchable>
-                  )}
-                  <ControlsConsumer>{this.renderSkipBack}</ControlsConsumer>
-                  {mediaPlayer.isPlaying ? (
-                    <Touchable onPress={this.handlePause}>
-                      <IconLg name="pause" />
-                    </Touchable>
-                  ) : (
-                    <Touchable onPress={this.handlePlay}>
-                      <IconLg name="play" />
-                    </Touchable>
-                  )}
-                  <ControlsConsumer>{this.renderSkipForward}</ControlsConsumer>
-                  {mediaPlayer.showVideo ? (
-                    <Touchable onPress={this.handleHideVideo}>
-                      <IconSm name="video" />
-                    </Touchable>
-                  ) : (
-                    <Touchable onPress={this.handleShowVideo}>
-                      <IconSm name="video-off" />
-                    </Touchable>
-                  )}
-                </PlayControls>
-              </LowerControl>
-            </SafeAreaView>
-          </Background>
-        </Animated.View>
-      </TouchableWithoutFeedback>
-    );
-  };
-
-  render() {
-    return (
-      <Query query={getControlState}>{this.renderFullscreenControls}</Query>
-    );
-  }
-}
-
-export default compose(
-  withApollo,
-  withThemeMixin({ type: 'dark' })
-)(FullscreenControls);
diff --git a/apolloschurchapp/src/ui/MediaPlayer/FullscreenPlayer.js b/apolloschurchapp/src/ui/MediaPlayer/FullscreenPlayer.js
deleted file mode 100644
index 1e86006..0000000
--- a/apolloschurchapp/src/ui/MediaPlayer/FullscreenPlayer.js
+++ /dev/null
@@ -1,234 +0,0 @@
-import React, { PureComponent } from 'react';
-import {
-  Animated,
-  View,
-  StyleSheet,
-  Dimensions,
-  PanResponder,
-  Platform,
-} from 'react-native';
-import PropTypes from 'prop-types';
-import { Query, withApollo } from 'react-apollo';
-import { get } from 'lodash';
-
-import { styled } from '@apollosproject/ui-kit';
-
-import MiniControls, { MINI_PLAYER_HEIGHT } from './MiniControls';
-import FullscreenControls from './FullscreenControls';
-import VideoWindow from './VideoWindow';
-import MusicControls from './MusicControls';
-import { getFullVisibilityState } from './queries';
-import { exitFullscreen, goFullscreen } from './mutations';
-import { Provider, ControlsConsumer } from './PlayheadState';
-import MediaPlayerSafeLayout from './MediaPlayerSafeLayout';
-
-const VideoSizer = styled(({ isFullscreen, isVideo, theme }) =>
-  isFullscreen
-    ? StyleSheet.absoluteFill
-    : {
-        height: MINI_PLAYER_HEIGHT,
-        borderTopLeftRadius: theme.sizing.baseUnit / 2,
-        borderBottomLeftRadius: theme.sizing.baseUnit / 2,
-        overflow: 'hidden',
-        aspectRatio: isVideo ? 16 / 9 : 1,
-      }
-)(View);
-
-const FullscreenMediaPlayerSafeLayout = styled(({ isFullscreen, theme }) => ({
-  ...StyleSheet.absoluteFillObject,
-  margin: isFullscreen ? 0 : theme.sizing.baseUnit,
-}))(MediaPlayerSafeLayout);
-
-/**
- * FullscreenPlayer is a animating media player that transitions between
- * a mini state and a full screen state.
- * It is capable of playing any type of media that react-native-video supports.
- * It reads from local graphql state, and so you must use graphql mutations to play tracks.
- */
-class FullscreenPlayer extends PureComponent {
-  static propTypes = {
-    client: PropTypes.shape({ mutate: PropTypes.func }),
-  };
-
-  // Tracks the fullscreen animation
-  fullscreen = new Animated.Value(0);
-
-  // Tracks the measured height of the minicontrols. Used in other derived styles
-  miniControlHeight = new Animated.Value(MINI_PLAYER_HEIGHT);
-
-  // Tracks the measured height of the fullscreen cover. Used in other derived styles
-  coverHeight = new Animated.Value(Dimensions.get('window').height);
-
-  // Tracks the amount you drag the window
-  dragOffset = new Animated.Value(0);
-
-  fullScreenWithOffset = Animated.add(this.fullscreen, this.dragOffset);
-
-  // Self-invoking function because we end up with just one massic derived animated value that can be stored
-  coverTranslateY = (() => {
-    const translateYWhenCollapsed = Animated.subtract(
-      this.coverHeight,
-      this.miniControlHeight
-    );
-
-    const translateYSlope = Animated.multiply(
-      translateYWhenCollapsed,
-      Animated.multiply(this.fullScreenWithOffset, -1)
-    );
-
-    const translateY = Animated.add(translateYSlope, translateYWhenCollapsed);
-    return translateY;
-  })();
-
-  miniControlsTranslateY = (() => {
-    const translateYWhenExpanded = Animated.subtract(
-      this.coverHeight,
-      this.miniControlHeight
-    );
-    const translateYSlope = Animated.multiply(
-      translateYWhenExpanded,
-      Animated.multiply(this.fullScreenWithOffset, -1)
-    );
-    return translateYSlope;
-  })();
-
-  coverStyle = [
-    StyleSheet.absoluteFill,
-    {
-      transform: [{ translateY: this.coverTranslateY }],
-    },
-  ];
-
-  miniControlsAnimation = {
-    opacity: this.fullScreenWithOffset.interpolate({
-      inputRange: [0, 0.1],
-      outputRange: [1, 0],
-    }),
-  };
-
-  fullscreenControlsAnimation = [
-    StyleSheet.absoluteFill,
-    {
-      opacity: this.fullScreenWithOffset.interpolate({
-        inputRange: [0, 0.1],
-        outputRange: [0, 1],
-      }),
-    },
-  ];
-
-  panResponder = PanResponder.create({
-    onMoveShouldSetPanResponder: (event, { dx, dy }) =>
-      Math.abs(dy) > Math.abs(dx) && Math.abs(dy) > 10, // set pan responder only when we move enough in the Y-axis
-
-    onPanResponderMove: (event, { dy }) => {
-      // Calculate the amount you've offsetted the cover
-      const dragOffset = Math.min(0, -dy / Dimensions.get('window').height);
-      this.dragOffset.setValue(dragOffset);
-    },
-
-    onPanResponderRelease: (event, { dy, vy }) => {
-      const { height } = Dimensions.get('window');
-      const gestureVelocity = vy;
-      const gestureDistance = Math.abs(dy);
-
-      // Determine whether to continue the animation and exit fullscreen,
-      // or stay full screen and reset back up
-      let mutation = goFullscreen;
-      if (Math.abs(gestureVelocity > 0.5)) {
-        if (gestureVelocity > 0) {
-          mutation = exitFullscreen;
-        }
-      } else if (gestureDistance >= height / 2) {
-        mutation = exitFullscreen;
-      }
-
-      const dragOffset = Math.min(0, -dy / Dimensions.get('window').height);
-
-      if (mutation === goFullscreen) {
-        Animated.spring(this.dragOffset, {
-          toValue: 0,
-          useNativeDriver: true,
-        }).start();
-      } else {
-        this.dragOffset.setValue(0);
-        this.fullscreen.setValue(dragOffset);
-      }
-
-      this.props.client.mutate({ mutation });
-    },
-  });
-
-  handleCoverLayout = Animated.event([
-    { nativeEvent: { layout: { height: this.coverHeight } } },
-  ]);
-
-  handleMiniControlLayout = Animated.event([
-    { nativeEvent: { layout: { height: this.miniControlHeight } } },
-  ]);
-
-  renderCover = ({ data: { mediaPlayer = {} } = {} }) => {
-    const { isFullscreen = false } = mediaPlayer;
-
-    Animated.spring(this.fullscreen, {
-      toValue: isFullscreen ? 1 : 0,
-      useNativeDriver: true,
-      bounciness: 4,
-    }).start();
-
-    const coverFlow = [
-      <Animated.View
-        key="cover"
-        onLayout={this.handleCoverLayout}
-        style={StyleSheet.absoluteFill}
-        {...(Platform.OS !== 'android' && isFullscreen
-          ? this.panResponder.panHandlers
-          : {})}
-      >
-        <VideoSizer
-          isFullscreen={isFullscreen}
-          isVideo={get(mediaPlayer, 'currentTrack.isVideo')}
-        >
-          <ControlsConsumer>
-            {(controlHandlers) => <VideoWindow {...controlHandlers} />}
-          </ControlsConsumer>
-        </VideoSizer>
-        <Animated.View style={this.fullscreenControlsAnimation}>
-          <FullscreenControls />
-        </Animated.View>
-      </Animated.View>,
-      <MusicControls key="music-controls" />,
-    ];
-
-    if (!isFullscreen) {
-      coverFlow.push(
-        <Animated.View
-          key="mini-controls"
-          style={this.miniControlsAnimation}
-          onLayout={this.handleMiniControlLayout}
-        >
-          <MiniControls />
-        </Animated.View>
-      );
-    }
-
-    return (
-      <Animated.View style={this.coverStyle}>
-        <FullscreenMediaPlayerSafeLayout isFullscreen={isFullscreen}>
-          {coverFlow}
-        </FullscreenMediaPlayerSafeLayout>
-      </Animated.View>
-    );
-  };
-
-  render() {
-    return (
-      <Provider>
-        <Query query={getFullVisibilityState}>{this.renderCover}</Query>
-      </Provider>
-    );
-  }
-}
-
-const FullscreenPlayerWithData = withApollo(FullscreenPlayer);
-
-export { FullscreenPlayerWithData as default };
diff --git a/apolloschurchapp/src/ui/MediaPlayer/FullscreenPlayer.stories.js b/apolloschurchapp/src/ui/MediaPlayer/FullscreenPlayer.stories.js
deleted file mode 100644
index 6c889cc..0000000
--- a/apolloschurchapp/src/ui/MediaPlayer/FullscreenPlayer.stories.js
+++ /dev/null
@@ -1,81 +0,0 @@
-import React from 'react';
-import { storiesOf } from '@storybook/react-native';
-import { Mutation } from 'react-apollo';
-
-import {
-  ButtonLink,
-  CenteredView,
-  BackgroundView,
-  FlexedView,
-} from '@apollosproject/ui-kit';
-
-import { playVideoMutation } from './mutations';
-import MediaPlayer from '.';
-
-storiesOf('MediaPlayer', module).add('simple', () => (
-  <BackgroundView>
-    <FlexedView>
-      <CenteredView>
-        <Mutation mutation={playVideoMutation}>
-          {(play) => (
-            <ButtonLink
-              onPress={() =>
-                play({
-                  variables: {
-                    mediaSource: {
-                      uri:
-                        'http://embed.wistia.com/deliveries/0e364f7e6f6604384ece8a35905a53a864386e9f.bin',
-                      __typename: 'VideoMediaSource',
-                    },
-                    posterSources: [
-                      {
-                        uri:
-                          'https://apollosrock.newspring.cc/GetImage.ashx?guid=28ea9e81-09b4-411f-8ad5-741054837823',
-                        __typename: 'ImageMediaSource',
-                      },
-                    ],
-                    title: 'Holy Spirit',
-                    artist: 'Fuse Promos',
-                    isVideo: true,
-                  },
-                })
-              }
-            >
-              Play video
-            </ButtonLink>
-          )}
-        </Mutation>
-        <Mutation mutation={playVideoMutation}>
-          {(play) => (
-            <ButtonLink
-              onPress={() =>
-                play({
-                  variables: {
-                    mediaSource: {
-                      uri:
-                        'https://s3.amazonaws.com/ns.downloads/newspring/audio/newspring_sermons/2017/180513_HolySpirit_06-Message-AUDIO.mp3',
-                      __typename: 'AudioMediaSource',
-                    },
-                    posterSources: [
-                      {
-                        uri:
-                          'https://apollosrock.newspring.cc/GetImage.ashx?guid=28ea9e81-09b4-411f-8ad5-741054837823',
-                        __typename: 'ImageMediaSource',
-                      },
-                    ],
-                    title: 'The Greatest Evangelist',
-                    artist: 'Sermon',
-                    isVideo: false,
-                  },
-                })
-              }
-            >
-              Play audio
-            </ButtonLink>
-          )}
-        </Mutation>
-      </CenteredView>
-    </FlexedView>
-    <MediaPlayer />
-  </BackgroundView>
-));
diff --git a/apolloschurchapp/src/ui/MediaPlayer/FullscreenPlayer.tests.js b/apolloschurchapp/src/ui/MediaPlayer/FullscreenPlayer.tests.js
deleted file mode 100644
index 6fb0aa5..0000000
--- a/apolloschurchapp/src/ui/MediaPlayer/FullscreenPlayer.tests.js
+++ /dev/null
@@ -1,108 +0,0 @@
-import React from 'react';
-import renderer from 'react-test-renderer';
-
-import { client } from 'apolloschurchapp/src/client';
-import Providers from 'apolloschurchapp/src/Providers';
-
-import FullscreenPlayer from './FullscreenPlayer';
-
-describe('the FullscreenPlayer component', () => {
-  it('should render miniplayer with video', async () => {
-    client.cache.writeData({
-      data: {
-        mediaPlayer: {
-          __typename: 'MediaPlayerState',
-          currentTrack: {
-            __typename: 'MediaPlayerTrack',
-            id: 1,
-            mediaSource: { uri: 'some-source' },
-            posterSources: [{ uri: 'some-poster-source' }],
-            title: 'Some Title',
-            artist: 'some artist',
-            isVideo: true,
-          },
-          isVisible: true,
-          isFullscreen: false,
-          isPlaying: true,
-          progress: {
-            __typename: 'MediaPlayerProgress',
-            currentTime: 12,
-            duration: 56,
-          },
-        },
-      },
-    });
-    const tree = renderer.create(
-      <Providers>
-        <FullscreenPlayer />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-
-  it('should render miniplayer with audio', async () => {
-    client.cache.writeData({
-      data: {
-        mediaPlayer: {
-          __typename: 'MediaPlayerState',
-          currentTrack: {
-            __typename: 'MediaPlayerTrack',
-            id: 1,
-            mediaSource: { uri: 'some-source' },
-            posterSources: [{ uri: 'some-poster-source' }],
-            title: 'Some Title',
-            artist: 'some artist',
-            isVideo: false,
-          },
-          isVisible: true,
-          isFullscreen: false,
-          isPlaying: true,
-          progress: {
-            __typename: 'MediaPlayerProgress',
-            currentTime: 12,
-            duration: 56,
-          },
-        },
-      },
-    });
-    const tree = renderer.create(
-      <Providers>
-        <FullscreenPlayer />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-
-  it('should render fullscreen', async () => {
-    client.cache.writeData({
-      data: {
-        mediaPlayer: {
-          __typename: 'MediaPlayerState',
-          currentTrack: {
-            __typename: 'MediaPlayerTrack',
-            id: 1,
-            mediaSource: { uri: 'some-source' },
-            posterSources: [{ uri: 'some-poster-source' }],
-            title: 'Some Title',
-            artist: 'some artist',
-            isVideo: false,
-          },
-          isVisible: true,
-          isFullscreen: true,
-          isPlaying: true,
-          progress: {
-            __typename: 'MediaPlayerProgress',
-            currentTime: 12,
-            duration: 56,
-          },
-        },
-      },
-    });
-    const tree = renderer.create(
-      <Providers>
-        <FullscreenPlayer />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/ui/MediaPlayer/MediaPlayerSafeLayout.js b/apolloschurchapp/src/ui/MediaPlayer/MediaPlayerSafeLayout.js
deleted file mode 100644
index 57368b8..0000000
--- a/apolloschurchapp/src/ui/MediaPlayer/MediaPlayerSafeLayout.js
+++ /dev/null
@@ -1,20 +0,0 @@
-import React from 'react';
-import { View } from 'react-native';
-
-import { styled, LayoutConsumer } from '@apollosproject/ui-kit';
-
-const InnerView = styled(({ safeAreaInsets, isFullscreen = false, theme }) => ({
-  marginBottom: isFullscreen
-    ? 0
-    : Math.max(theme.sizing.baseUnit, safeAreaInsets.bottom * 0.75),
-}))(View);
-
-const MediaPlayerSafeLayout = (props) => (
-  <LayoutConsumer>
-    {({ safeAreaInsets }) => (
-      <InnerView safeAreaInsets={safeAreaInsets} {...props} />
-    )}
-  </LayoutConsumer>
-);
-
-export default MediaPlayerSafeLayout;
diff --git a/apolloschurchapp/src/ui/MediaPlayer/MediaPlayerSpacer.js b/apolloschurchapp/src/ui/MediaPlayer/MediaPlayerSpacer.js
deleted file mode 100644
index e88b769..0000000
--- a/apolloschurchapp/src/ui/MediaPlayer/MediaPlayerSpacer.js
+++ /dev/null
@@ -1,36 +0,0 @@
-import React from 'react';
-import { SafeAreaView } from 'react-native';
-import { Query } from 'react-apollo';
-import gql from 'graphql-tag';
-import { get } from 'lodash';
-
-import { styled } from '@apollosproject/ui-kit';
-import { MINI_PLAYER_HEIGHT } from 'apolloschurchapp/src/ui/MediaPlayer';
-
-import MediaPlayerSafeLayout from './MediaPlayerSafeLayout';
-
-const mediaPlayerIsVisibleQuery = gql`
-  query {
-    mediaPlayer @client {
-      isVisible
-    }
-  }
-`;
-
-const MediaPlayerSafeLayoutWithSpacing = styled({
-  paddingBottom: MINI_PLAYER_HEIGHT,
-})(MediaPlayerSafeLayout);
-
-const MediaPlayerSpacer = (props) => (
-  <Query query={mediaPlayerIsVisibleQuery}>
-    {({ data = {} }) =>
-      get(data, 'mediaPlayer.isVisible') ? (
-        <MediaPlayerSafeLayoutWithSpacing {...props} />
-      ) : (
-        <SafeAreaView {...props} />
-      )
-    }
-  </Query>
-);
-
-export default MediaPlayerSpacer;
diff --git a/apolloschurchapp/src/ui/MediaPlayer/MiniControls.js b/apolloschurchapp/src/ui/MediaPlayer/MiniControls.js
deleted file mode 100644
index 54f52e4..0000000
--- a/apolloschurchapp/src/ui/MediaPlayer/MiniControls.js
+++ /dev/null
@@ -1,194 +0,0 @@
-import React, { Component } from 'react';
-import { Platform, View, Animated, StyleSheet } from 'react-native';
-import { Mutation, Query } from 'react-apollo';
-
-import {
-  styled,
-  Touchable,
-  H5,
-  H6,
-  Icon,
-  withTheme,
-} from '@apollosproject/ui-kit';
-
-import Seeker from './Seeker';
-
-import { getControlState } from './queries';
-
-import {
-  goFullscreen as goFullscreenMutation,
-  dismiss as dismissMutation,
-  play as playMutation,
-  pause as pauseMutation,
-} from './mutations';
-
-const MINI_PLAYER_HEIGHT = 50;
-
-const DismissBackground = styled(({ theme }) => ({
-  ...StyleSheet.absoluteFillObject,
-  alignItems: 'center',
-  justifyContent: 'center',
-  backgroundColor: theme.colors.white,
-}))(View);
-
-const TrackInfoTouchable = styled({
-  flex: 1,
-})(Touchable);
-
-const TrackInfoTouchableBackground = styled(({ theme }) => ({
-  backgroundColor: theme.colors.white,
-  flex: 1,
-}))(View);
-
-const TrackInfo = styled(({ theme }) => ({
-  paddingHorizontal: theme.sizing.baseUnit / 2,
-  height: '100%',
-  justifyContent: 'center',
-  width: '100%',
-}))(View);
-
-const TrackName = styled(({ theme }) => ({
-  height: theme.sizing.baseUnit,
-  overflow: 'hidden',
-}))(H5);
-
-const TrackArtist = styled(({ theme }) => ({
-  height: theme.sizing.baseUnit,
-  marginTop: theme.helpers.rem(-0.15625),
-  color: theme.colors.text.tertiary,
-  // overflow: 'hidden',
-}))(H6);
-
-const Container = styled(({ theme }) => ({
-  height: MINI_PLAYER_HEIGHT,
-  flexDirection: 'row',
-  justifyContent: 'flex-start',
-  overflow: 'hidden',
-  borderRadius: theme.sizing.baseUnit / 2,
-}))(View);
-
-const Shadow = styled(({ theme }) => ({
-  borderRadius: theme.sizing.baseUnit / 2,
-  ...Platform.select(theme.shadows.default),
-}))(View);
-
-// ThumbnailSpacer is used to offset the text in MiniPlayer to make room for the video/music
-// thumbnail in a way that is dynamic to the MINI_PLAYER_HEIGHT
-const ThumbnailSpacer = styled(({ isVideo }) => ({
-  height: MINI_PLAYER_HEIGHT,
-  aspectRatio: isVideo ? 16 / 9 : 1,
-}))(View);
-
-const Controls = styled(({ theme }) => ({
-  position: 'absolute',
-  right: 0,
-  bottom: 0,
-  top: -1,
-  paddingHorizontal: theme.sizing.baseUnit / 2,
-  flexDirection: 'row',
-  justifyContent: 'flex-end',
-  alignItems: 'center',
-}))(View);
-
-const MiniSeeker = styled({
-  position: 'absolute',
-  left: 0,
-  right: 0,
-  bottom: 0,
-})(Seeker);
-
-const StyledIcon = withTheme(({ theme }) => ({
-  fill: theme.colors.darkTertiary,
-  size: theme.sizing.baseUnit * 1.25,
-}))(Icon);
-
-/**
- * The MiniControls renders basic track info and a play/pause button.
- * Also displays a close button to close the player when the track is paused.
- */
-class MiniControls extends Component {
-  dismissAnimator = new Animated.Value(0);
-
-  shouldComponentUpdate() {
-    return false;
-  }
-
-  renderMiniControls = ({
-    data: {
-      mediaPlayer: {
-        currentTrack: { title, artist, isVideo } = {},
-        isPlaying = false,
-      } = {},
-    } = {},
-  }) => {
-    Animated.spring(this.dismissAnimator, {
-      toValue: isPlaying ? 0 : 0.8,
-      overshootClamping: true,
-      useNativeDriver: true,
-    }).start();
-    return (
-      <Mutation mutation={goFullscreenMutation}>
-        {(goFullscreen) => (
-          <Shadow>
-            <Container>
-              <Mutation mutation={dismissMutation}>
-                {(dismiss) => (
-                  <Touchable
-                    onPress={() => (isPlaying ? goFullscreen() : dismiss())}
-                  >
-                    <ThumbnailSpacer isVideo={isVideo}>
-                      <Animated.View
-                        style={[
-                          StyleSheet.absoluteFill,
-                          { opacity: this.dismissAnimator },
-                        ]}
-                      >
-                        <DismissBackground>
-                          <StyledIcon name="close" />
-                        </DismissBackground>
-                      </Animated.View>
-                    </ThumbnailSpacer>
-                  </Touchable>
-                )}
-              </Mutation>
-              <TrackInfoTouchableBackground>
-                <TrackInfoTouchable onPress={() => goFullscreen()}>
-                  <TrackInfo>
-                    <TrackName>{title}</TrackName>
-                    <TrackArtist>{artist}</TrackArtist>
-                  </TrackInfo>
-                </TrackInfoTouchable>
-              </TrackInfoTouchableBackground>
-              <Controls>
-                {isPlaying ? (
-                  <Mutation mutation={pauseMutation}>
-                    {(pause) => (
-                      <Touchable onPress={() => pause()}>
-                        <StyledIcon name="pause" />
-                      </Touchable>
-                    )}
-                  </Mutation>
-                ) : (
-                  <Mutation mutation={playMutation}>
-                    {(play) => (
-                      <Touchable onPress={() => play()}>
-                        <StyledIcon name="play" />
-                      </Touchable>
-                    )}
-                  </Mutation>
-                )}
-              </Controls>
-              <MiniSeeker minimal />
-            </Container>
-          </Shadow>
-        )}
-      </Mutation>
-    );
-  };
-
-  render() {
-    return <Query query={getControlState}>{this.renderMiniControls}</Query>;
-  }
-}
-
-export { MiniControls as default, MINI_PLAYER_HEIGHT };
diff --git a/apolloschurchapp/src/ui/MediaPlayer/MusicControls.js b/apolloschurchapp/src/ui/MediaPlayer/MusicControls.js
deleted file mode 100644
index 0bf66c6..0000000
--- a/apolloschurchapp/src/ui/MediaPlayer/MusicControls.js
+++ /dev/null
@@ -1,177 +0,0 @@
-import PropTypes from 'prop-types';
-import React, { Component } from 'react';
-import { Animated, Platform } from 'react-native';
-import MusicControl from 'react-native-music-control';
-import { withApollo, Query } from 'react-apollo';
-import { throttle, get } from 'lodash';
-
-import { PlayheadConsumer, ControlsConsumer } from './PlayheadState';
-import { getMusicControlState } from './queries';
-import { play, pause, updatePlayhead } from './mutations';
-
-class MusicControls extends Component {
-  static propTypes = {
-    currentTrack: PropTypes.shape({}),
-    currentTime: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
-    currentTimeAnimated: PropTypes.instanceOf(Animated.Value),
-    isPlaying: PropTypes.bool,
-    duration: PropTypes.number,
-    skip: PropTypes.func,
-    client: PropTypes.shape({ mutate: PropTypes.func }),
-  };
-
-  constructor(...args) {
-    super(...args);
-    // iOS is the only platform that displays currentTime and Android is notorious bad at handling
-    // the JS thread.
-    if (Platform.OS === 'ios') this.currentTimeSubscription();
-  }
-
-  componentDidUpdate(oldProps) {
-    if (this.props.duration > 1 && oldProps.duration !== this.props.duration) {
-      this.configureMusicControl();
-    }
-    if (this.props.currentTimeAnimated !== oldProps.currentTimeAnimated) {
-      if (this.listener) {
-        oldProps.currentTimeAnimated.removeListener(this.listener);
-      }
-      if (Platform.OS === 'ios') this.currentTimeSubscription();
-    }
-
-    if (
-      oldProps.currentTime !== this.props.currentTime ||
-      oldProps.isPlaying !== this.props.isPlaying
-    ) {
-      this.updatePlayback();
-    }
-  }
-
-  componentWillUnmount() {
-    MusicControl.enableBackgroundMode(false);
-    MusicControl.stopControl();
-    if (this.listener)
-      this.props.currentTimeAnimated.removeListener(this.listener);
-  }
-
-  currentTimeSubscription = () => {
-    this.listener = this.props.currentTimeAnimated.addListener(
-      throttle(({ value }) => {
-        MusicControl.updatePlayback({
-          state: this.props.isPlaying
-            ? MusicControl.STATE_PLAYING
-            : MusicControl.STATE_PAUSED,
-          elapsedTime: value,
-        });
-      }, 1000)
-    );
-  };
-
-  configureMusicControl = () => {
-    // Initialize MusicControl settings
-    MusicControl.enableBackgroundMode(true);
-
-    // Play
-    MusicControl.enableControl('play', true);
-    MusicControl.on('play', this.handleOnPlay);
-
-    // Pause/Stop
-    MusicControl.enableControl('pause', true);
-    MusicControl.enableControl('stop', false);
-    MusicControl.on('pause', this.handleOnPause);
-    MusicControl.on('stop', this.handleOnPause);
-
-    // Skip
-    MusicControl.enableControl('previousTrack', false);
-    MusicControl.enableControl('nextTrack', false);
-
-    // Seeking
-    if (this.props.skip) {
-      MusicControl.enableControl('skipForward', true);
-      MusicControl.enableControl('skipBackward', true);
-      MusicControl.on('skipForward', this.handleOnFastForward);
-      MusicControl.on('skipBackward', this.handleOnRewind);
-    }
-
-    // Scrubber
-    MusicControl.enableControl('seek', true); // Android
-    MusicControl.enableControl('changePlaybackPosition', true); // iOS
-    MusicControl.on('seek', this.handleOnSeek);
-    MusicControl.on('changePlaybackPosition', this.handleOnSeek);
-
-    // Remote (headphones) play/pause
-    MusicControl.enableControl('togglePlayPause', true);
-    MusicControl.on('togglePlayPause', () =>
-      this.props.isPlaying ? this.handleOnPause() : this.handleOnPlay()
-    );
-
-    // Remote (headphones) fast forward/rewind (iOS only) (disabled)
-    MusicControl.enableControl('seekForward', false);
-    MusicControl.enableControl('seekBackward', false);
-
-    // Swipe to dismiss native control (Android only)
-    MusicControl.enableControl('closeNotification', true, { when: 'paused' });
-
-    // Configure the visuals
-    const { currentTrack = {} } = this.props;
-    MusicControl.setNowPlaying({
-      title: currentTrack.title,
-      artist: currentTrack.artist,
-      artwork: get(currentTrack, 'posterSources[0].uri'),
-      elapsedTime: this.props.currentTime,
-      duration: this.props.duration,
-    });
-  };
-
-  updatePlayback = () => {
-    MusicControl.updatePlayback({
-      state: this.props.isPlaying
-        ? MusicControl.STATE_PLAYING
-        : MusicControl.STATE_PAUSED,
-      elapsedTime: this.props.currentTime,
-    });
-  };
-
-  handleOnPlay = () => this.props.client.mutate({ mutation: play });
-
-  handleOnPause = () => this.props.client.mutate({ mutation: pause });
-
-  handleOnFastForward = () => this.props.skip(15);
-
-  handleOnRewind = () => this.props.skip(-15);
-
-  handleOnSeek = (seekTo) =>
-    this.props.client.mutate({
-      mutation: updatePlayhead,
-      variables: {
-        currentTime: seekTo,
-      },
-    });
-
-  render() {
-    return null;
-  }
-}
-
-const MusicControlsState = (props) => (
-  <Query query={getMusicControlState}>
-    {({ data: { mediaPlayer = {} } = {} }) => (
-      <PlayheadConsumer>
-        {({ duration, currentTime }) => (
-          <ControlsConsumer>
-            {({ skip }) => (
-              <MusicControls
-                {...props}
-                currentTimeAnimated={currentTime}
-                duration={duration}
-                skip={skip}
-                {...mediaPlayer}
-              />
-            )}
-          </ControlsConsumer>
-        )}
-      </PlayheadConsumer>
-    )}
-  </Query>
-);
-
-export default withApollo(MusicControlsState);
diff --git a/apolloschurchapp/src/ui/MediaPlayer/PlayheadState.js b/apolloschurchapp/src/ui/MediaPlayer/PlayheadState.js
deleted file mode 100644
index 0d5b33d..0000000
--- a/apolloschurchapp/src/ui/MediaPlayer/PlayheadState.js
+++ /dev/null
@@ -1,110 +0,0 @@
-import React, { createContext, Component } from 'react';
-import { Animated } from 'react-native';
-import { Query, withApollo } from 'react-apollo';
-import PropTypes from 'prop-types';
-
-import { getMediaPlayerIsPlaying } from './queries';
-import { updatePlayhead } from './mutations';
-
-const defaultState = {
-  duration: 1,
-  currentTime: new Animated.Value(0),
-  playableDuration: new Animated.Value(1),
-  seekableDuration: new Animated.Value(1),
-};
-
-const controlState = () => {};
-
-const PlayheadContext = createContext(defaultState);
-
-const PlayheadControls = createContext(controlState);
-
-class ProviderWithoutApollo extends Component {
-  static propTypes = {
-    client: PropTypes.shape({
-      mutate: PropTypes.func,
-    }),
-  };
-
-  state = defaultState;
-
-  get controlState() {
-    return {
-      onLoad: this.handleOnLoad,
-      onProgress: this.handleOnProgress,
-      skip: this.skip,
-    };
-  }
-
-  handleOnLoad = ({ duration }) => {
-    this.setState({ duration });
-    this.state.currentTime.setValue(0);
-    this.state.playableDuration.setValue(0);
-    this.state.seekableDuration.setValue(0);
-  };
-
-  handleOnProgress = ({ currentTime, playableDuration, seekableDuration }) => {
-    if (!this.seekingTo || Math.abs(this.seekingTo - currentTime) < 1) {
-      // when seeking, only update `currentTime` after the seek has finished
-      this.seekingTo = null;
-      this.lastCurrentTime = currentTime;
-      this.state.currentTime.setValue(currentTime);
-    }
-    this.state.playableDuration.setValue(playableDuration);
-    this.state.seekableDuration.setValue(seekableDuration);
-  };
-
-  handlePause = () => {
-    this.props.client.mutate({
-      mutation: updatePlayhead,
-      variables: {
-        currentTime: this.lastCurrentTime,
-      },
-    });
-  };
-
-  skip = async (secondsToSkip) => {
-    const currentTime = Math.min(
-      Math.max(this.lastCurrentTime + secondsToSkip, 0),
-      this.state.duration
-    );
-
-    await this.props.client.mutate({
-      mutation: updatePlayhead,
-      variables: {
-        currentTime,
-      },
-    });
-
-    this.seekingTo = currentTime;
-    this.state.currentTime.setValue(currentTime); // immediately set the playhead value so progress bar doesn't jump around
-  };
-
-  renderProviders = ({
-    data: { mediaPlayer: { isPlaying = false } = {} } = {},
-  }) => {
-    if (!isPlaying && this.wasPlaying) {
-      this.handlePause();
-    }
-    this.wasPlaying = isPlaying;
-
-    return (
-      <PlayheadControls.Provider value={this.controlState}>
-        <PlayheadContext.Provider value={this.state} {...this.props} />
-      </PlayheadControls.Provider>
-    );
-  };
-
-  render() {
-    return (
-      <Query query={getMediaPlayerIsPlaying}>{this.renderProviders}</Query>
-    );
-  }
-}
-
-const Provider = withApollo(ProviderWithoutApollo);
-
-const { Consumer: PlayheadConsumer } = PlayheadContext;
-const { Consumer: ControlsConsumer } = PlayheadControls;
-
-export { Provider, PlayheadConsumer, ControlsConsumer };
diff --git a/apolloschurchapp/src/ui/MediaPlayer/Seeker/Timestamp.js b/apolloschurchapp/src/ui/MediaPlayer/Seeker/Timestamp.js
deleted file mode 100644
index ab33167..0000000
--- a/apolloschurchapp/src/ui/MediaPlayer/Seeker/Timestamp.js
+++ /dev/null
@@ -1,95 +0,0 @@
-import React, { PureComponent } from 'react';
-import { Animated } from 'react-native';
-import PropTypes from 'prop-types';
-
-import { H6, styled } from '@apollosproject/ui-kit';
-
-const TimeText = styled({
-  width: 50,
-  textAlign: 'center',
-  alignItems: 'center',
-})(H6);
-
-/**
- * Displays a MM:SS formatted timestamp from either a number or Animate.Value in seconds
- */
-class Timestamp extends PureComponent {
-  static propTypes = {
-    time: PropTypes.oneOfType([
-      PropTypes.number,
-      PropTypes.instanceOf(Animated.Value),
-    ]),
-    offset: PropTypes.instanceOf(Animated.Value),
-  };
-
-  state = {
-    time: 0,
-    offset: 0,
-  };
-
-  constructor(props) {
-    super(props);
-    if (typeof props.time === 'number') {
-      this.state.time = props.time;
-    } else {
-      this.listen(props);
-    }
-  }
-
-  componentWillUpdate(newProps) {
-    if (
-      newProps.time !== this.props.time ||
-      newProps.offset !== this.props.offset
-    ) {
-      this.listen(newProps);
-    }
-  }
-
-  listen = ({ time = 0, offset = 0 }) => {
-    if (this.listener) this.props.time.removeListener(this.listener);
-    if (this.offsetListener) {
-      this.props.offset.removeListener(this.offsetListener);
-    }
-
-    if (!time.addListener) {
-      this.setState({ time });
-    } else {
-      this.listener = time.addListener(({ value }) =>
-        this.setState({ time: value })
-      );
-    }
-
-    if (!offset.addListener) {
-      this.setState({ offset });
-    } else if (offset) {
-      this.offsetListener = offset.addListener(({ value }) =>
-        this.setState({ offset: value })
-      );
-    }
-  };
-
-  timestamp = (time) => {
-    // Hours, minutes and seconds
-    const hrs = Math.floor(time / 3600);
-    const mins = Math.floor((time % 3600) / 60);
-    const secs = time % 60;
-
-    let timestamp = '';
-
-    if (hrs > 0) {
-      timestamp += `${hrs}:${mins < 10 ? '0' : ''}`;
-    }
-
-    timestamp += `${mins}:${secs < 10 ? '0' : ''}`;
-    timestamp += `${Math.round(secs)}`;
-    return timestamp;
-  };
-
-  render() {
-    return (
-      <TimeText>{this.timestamp(this.state.time + this.state.offset)}</TimeText>
-    );
-  }
-}
-
-export default Timestamp;
diff --git a/apolloschurchapp/src/ui/MediaPlayer/Seeker/index.js b/apolloschurchapp/src/ui/MediaPlayer/Seeker/index.js
deleted file mode 100644
index d071a72..0000000
--- a/apolloschurchapp/src/ui/MediaPlayer/Seeker/index.js
+++ /dev/null
@@ -1,215 +0,0 @@
-import React, { PureComponent } from 'react';
-import { PanResponder, Animated, View, StyleSheet } from 'react-native';
-import PropTypes from 'prop-types';
-
-import { styled, withTheme } from '@apollosproject/ui-kit';
-
-import { PlayheadConsumer, ControlsConsumer } from '../PlayheadState';
-import Timestamp from './Timestamp';
-
-const Container = styled({
-  width: '100%',
-  flexDirection: 'row',
-  justifyContent: 'space-between',
-  alignItems: 'center',
-})(View);
-
-const TrackContainer = styled(({ minimal, knobSize }) => ({
-  height: knobSize / 2,
-  flexGrow: 1,
-  justifyContent: 'center',
-  paddingTop: minimal ? 20 : knobSize / 2,
-  paddingBottom: minimal ? 0 : knobSize / 2,
-}))(View);
-
-const Track = styled(({ theme, minimal, knobSize }) => ({
-  height: knobSize / 2,
-  overflow: 'hidden',
-  borderRadius: minimal ? 0 : knobSize / 2,
-  backgroundColor: minimal
-    ? theme.colors.transparent
-    : theme.colors.darkSecondary,
-}))(View);
-
-const ProgressBar = styled(({ theme }) => ({
-  height: theme.sizing.baseUnit,
-  backgroundColor: theme.colors.secondary,
-}))(View);
-
-const Knob = styled(({ theme, knobSize }) => ({
-  height: knobSize,
-  width: knobSize,
-  position: 'absolute',
-  right: 0,
-  elevation: 2,
-  borderRadius: knobSize,
-  backgroundColor: theme.colors.text.primary,
-}))(View);
-
-/**
- * Animated Seeker component.
- * Depends on `PlayheadState`, so you don't pass it any props directly,
- * but must be rendered within a `<MediaPlayer/>` component
- */
-class Seeker extends PureComponent {
-  static propTypes = {
-    minimal: PropTypes.bool, // The only prop you need to pass - switches to a minimal version (line instead of bar)
-    currentTime: PropTypes.any, // eslint-disable-line
-    duration: PropTypes.any, // eslint-disable-line
-    style: PropTypes.any, // eslint-disable-line
-    onScrubbing: PropTypes.func,
-    knobSize: PropTypes.number, // defaults to theme.sizing.baseUnit / 1.5  (12px)
-  };
-
-  isSeeking = false;
-
-  timeAtSeekingStart = 0;
-
-  state = {
-    width: 0, // the width of the seeker bar
-  };
-
-  offsetDriver = new Animated.Value(0); // Used to track pixel offset when seeking
-
-  offsetTimeDriver = new Animated.Value(0); // Used to track time offset when seeking
-
-  panResponder = PanResponder.create({
-    onStartShouldSetPanResponder: () => true,
-    onPanResponderGrant: () => {
-      // Using `stopAnimation` only to get the currentTime value
-      this.props.currentTime.stopAnimation((value) => {
-        this.isSeeking = true;
-        this.timeAtSeekingStart = value;
-      });
-    },
-    onPanResponderMove: (e, { dx }) => {
-      // Calculate the pixel offset and apply it to the offsetDriver
-      let offset = dx;
-      const progressAtStart = this.timeAtSeekingStart / this.props.duration;
-      const positionAtStart = progressAtStart * this.state.width;
-      offset = Math.min(this.state.width - positionAtStart, offset);
-      offset = Math.max(-positionAtStart, offset);
-      this.offsetDriver.setValue(offset);
-
-      // Calculate the time offset and apply it to the offsetTimeDriver
-      const moveAmount = offset / this.state.width;
-      const moveAmountInTime = moveAmount * this.props.duration;
-      this.offsetTimeDriver.setValue(moveAmountInTime);
-
-      if (this.props.onScrubbing) this.props.onScrubbing({ isScrubbing: true });
-    },
-    onPanResponderRelease: async (e, { dx }) => {
-      // Calculate the amount in time we've moved, and skip that duration
-      const moveAmount = dx / this.state.width;
-      const moveAmountInTime = moveAmount * this.props.duration;
-      await this.props.skip(moveAmountInTime);
-
-      // Reset state
-      this.offsetDriver.setValue(0);
-      this.offsetTimeDriver.setValue(0);
-      this.isSeeking = false;
-      this.timeAtSeekingStart = 0;
-
-      if (this.props.onScrubbing)
-        this.props.onScrubbing({ isScrubbing: false });
-    },
-  });
-
-  // Calculate the real offset position of the colored track bar
-  // To be able to useNativeDriver, the trackbar is always the full-width, and we animate its X position
-  get trackBarOffset() {
-    const progress = Animated.divide(
-      this.isSeeking ? this.timeAtSeekingStart : this.props.currentTime,
-      this.props.duration
-    );
-
-    const progressInvert = Animated.subtract(1, progress);
-    const widthInvert = Animated.multiply(-1, this.state.width);
-    const position = Animated.multiply(progressInvert, widthInvert);
-    return Animated.add(position, this.offsetDriver);
-  }
-
-  // the "knob" is on top of the trackbar, the piece of UI you can grab and move around
-  get knobStyles() {
-    return [
-      StyleSheet.absoluteFill,
-      {
-        transform: [{ translateX: this.trackBarOffset }],
-      },
-    ];
-  }
-
-  handleOnLayout = ({
-    nativeEvent: {
-      layout: { width },
-    },
-  }) =>
-    this.setState({
-      /*
-       * Adjust offset width to adjust for knobSize so Knob always appears on the track. Knob is
-       * hidden when in a minimal state (miniplayer) we only make this adjustment when necessary.
-       */
-      width: this.props.minimal ? width : width - this.props.knobSize,
-    });
-
-  renderProgress = () => (
-    <Animated.View
-      style={[
-        StyleSheet.absoluteFill,
-        {
-          transform: [{ translateX: this.trackBarOffset }],
-        },
-      ]}
-    >
-      <ProgressBar />
-    </Animated.View>
-  );
-
-  render() {
-    return (
-      <Container style={this.props.style}>
-        {!this.props.minimal ? (
-          <Timestamp
-            time={this.props.currentTime}
-            offset={this.offsetTimeDriver}
-          />
-        ) : null}
-        <TrackContainer
-          minimal={this.props.minimal}
-          knobSize={this.props.knobSize}
-        >
-          <Track
-            onLayout={this.handleOnLayout}
-            minimal={this.props.minimal}
-            knobSize={this.props.knobSize}
-          >
-            {this.renderProgress()}
-          </Track>
-          <Animated.View style={this.knobStyles}>
-            {!this.props.minimal ? (
-              <Knob
-                knobSize={this.props.knobSize}
-                {...this.panResponder.panHandlers}
-              />
-            ) : null}
-          </Animated.View>
-        </TrackContainer>
-        {!this.props.minimal ? <Timestamp time={this.props.duration} /> : null}
-      </Container>
-    );
-  }
-}
-
-const SeekerWithState = withTheme(({ theme: { sizing: { baseUnit } } }) => ({
-  knobSize: Math.floor(baseUnit / 1.33),
-}))((props) => (
-  <ControlsConsumer>
-    {(controls) => (
-      <PlayheadConsumer>
-        {(playhead) => <Seeker {...props} {...playhead} {...controls} />}
-      </PlayheadConsumer>
-    )}
-  </ControlsConsumer>
-));
-
-export default SeekerWithState;
diff --git a/apolloschurchapp/src/ui/MediaPlayer/VideoWindow.js b/apolloschurchapp/src/ui/MediaPlayer/VideoWindow.js
deleted file mode 100644
index 350916e..0000000
--- a/apolloschurchapp/src/ui/MediaPlayer/VideoWindow.js
+++ /dev/null
@@ -1,135 +0,0 @@
-import React, { PureComponent } from 'react';
-import PropTypes from 'prop-types';
-import { Query, withApollo } from 'react-apollo';
-import { get } from 'lodash';
-import Video from 'react-native-video';
-import { Animated, View, StyleSheet } from 'react-native';
-
-import { styled, ActivityIndicator } from '@apollosproject/ui-kit';
-
-import { getVideoState } from './queries';
-import { pause as pauseMutation, pauseAndRestart } from './mutations';
-
-const styles = StyleSheet.create({
-  animatedPosterImage: {
-    ...StyleSheet.absoluteFillObject,
-    resizeMode: 'cover',
-  },
-});
-
-const Background = styled(({ theme }) => ({
-  ...StyleSheet.absoluteFillObject,
-  backgroundColor: theme.colors.black,
-}))(View);
-
-/**
- * The VideoWindow displays the actual react-native-video component.
- * It's responsible for loading the video, and updating progress + duration in state.
- */
-class VideoWindow extends PureComponent {
-  static propTypes = {
-    client: PropTypes.shape({
-      mutate: PropTypes.func,
-    }),
-    onProgress: PropTypes.func,
-    onLoad: PropTypes.func,
-  };
-
-  loadingOverlay = new Animated.Value(1);
-
-  loadingStyle = [StyleSheet.absoluteFill, { opacity: this.loadingOverlay }];
-
-  handleOnEnd = async () => {
-    this.props.client.mutate({ mutation: pauseAndRestart });
-  };
-
-  handlePause = () => {
-    this.props.client.mutate({ mutation: pauseMutation });
-  };
-
-  handleOnProgress = (progress) => {
-    if (this.props.onProgress) this.props.onProgress(progress);
-  };
-
-  handleOnError = () => {
-    this.handlePause();
-  };
-
-  handleOnLoad = ({ duration }) => {
-    Animated.spring(this.loadingOverlay, {
-      toValue: 0,
-      useNativeDriver: true,
-    }).start();
-
-    if (this.props.onLoad) this.props.onLoad({ duration });
-  };
-
-  handleOnLoadStart = () => {
-    Animated.spring(this.loadingOverlay, {
-      toValue: 1,
-      useNativeDriver: true,
-    });
-  };
-
-  setVideoRef = (element) => {
-    this.video = element;
-  };
-
-  renderVideo = ({ data: { mediaPlayer = {} } = {} }) => {
-    if (!get(mediaPlayer, 'currentTrack.mediaSource')) return null;
-
-    const { currentTime } = mediaPlayer;
-    if (currentTime && currentTime !== this.lastCurrentTime && this.video) {
-      this.video.seek(currentTime);
-    }
-
-    this.lastCurrentTime = currentTime;
-
-    return [
-      <Video
-        ref={this.setVideoRef}
-        source={mediaPlayer.currentTrack.mediaSource}
-        paused={!mediaPlayer.isPlaying}
-        audioOnly={!mediaPlayer.showVideo}
-        ignoreSilentSwitch={'ignore'}
-        allowsExternalPlayback
-        playInBackground
-        playWhenInactive
-        onAudioBecomingNoisy={this.handlePause}
-        onEnd={this.handleOnEnd}
-        onError={this.handleOnError}
-        resizeMode={'contain'}
-        onLoadStart={this.handleOnLoadStart}
-        onLoad={this.handleOnLoad}
-        onProgress={this.handleOnProgress}
-        style={StyleSheet.absoluteFill}
-        volume={mediaPlayer.muted ? 0 : 1}
-        repeat
-        key="video"
-      />,
-      // there's currently a bug on android where react-native-video's poster doesn't ever go away
-      // So we use our own image copmonent...which is nicer cuz we can show a nice fading animation too!
-      <Animated.Image
-        key="poster"
-        style={[
-          styles.animatedPosterImage,
-          mediaPlayer.showVideo ? this.loadingStyle : {},
-        ]}
-        source={mediaPlayer.currentTrack.posterSources}
-      />,
-    ];
-  };
-
-  render() {
-    return (
-      <Background>
-        <Query query={getVideoState}>{this.renderVideo}</Query>
-        <Animated.View style={this.loadingStyle}>
-          <ActivityIndicator />
-        </Animated.View>
-      </Background>
-    );
-  }
-}
-
-export default withApollo(VideoWindow);
diff --git a/apolloschurchapp/src/ui/MediaPlayer/index.js b/apolloschurchapp/src/ui/MediaPlayer/index.js
deleted file mode 100644
index 2264866..0000000
--- a/apolloschurchapp/src/ui/MediaPlayer/index.js
+++ /dev/null
@@ -1,29 +0,0 @@
-import React, { Component } from 'react';
-import { Query } from 'react-apollo';
-
-import FullscreenPlayer from './FullscreenPlayer';
-
-import { getMediaPlayerVisibility } from './queries';
-
-export { MINI_PLAYER_HEIGHT } from './MiniControls';
-export MediaPlayerSpacer from './MediaPlayerSpacer';
-
-/**
- * Selectively renders FullscreenPlayer component is MediaPlayer is visible
- */
-class MediaPlayer extends Component {
-  shouldComponentUpdate() {
-    return false; // 🚀
-  }
-
-  renderPlayer = ({ data = {} }) => {
-    if (!data.mediaPlayer || !data.mediaPlayer.isVisible) return null;
-    return <FullscreenPlayer />;
-  };
-
-  render() {
-    return <Query query={getMediaPlayerVisibility}>{this.renderPlayer}</Query>;
-  }
-}
-
-export default MediaPlayer;
diff --git a/apolloschurchapp/src/ui/MediaPlayer/mutations.js b/apolloschurchapp/src/ui/MediaPlayer/mutations.js
deleted file mode 100644
index 3eb3b2d..0000000
--- a/apolloschurchapp/src/ui/MediaPlayer/mutations.js
+++ /dev/null
@@ -1,101 +0,0 @@
-import gql from 'graphql-tag';
-
-const playVideoMutation = gql`
-  mutation playVideo(
-    $mediaSource: String!
-    $posterSources: String
-    $title: String
-    $artist: String
-    $isVideo: Boolean
-  ) {
-    mediaPlayerPlayNow(
-      mediaSource: $mediaSource
-      posterSources: $posterSources
-      title: $title
-      artist: $artist
-      isVideo: $isVideo
-    ) @client
-  }
-`;
-
-const goFullscreen = gql`
-  mutation {
-    mediaPlayerUpdateState(isFullscreen: true) @client
-  }
-`;
-
-const play = gql`
-  mutation {
-    mediaPlayerUpdateState(isPlaying: true) @client
-  }
-`;
-
-const pause = gql`
-  mutation {
-    mediaPlayerUpdateState(isPlaying: false) @client
-  }
-`;
-
-const dismiss = gql`
-  mutation {
-    mediaPlayerUpdateState(isPlaying: false, isVisible: false) @client
-  }
-`;
-
-const pauseAndRestart = gql`
-  mutation pause {
-    mediaPlayerUpdateState(isPlaying: false) @client
-    mediaPlayerSetPlayhead(currentTime: 0) @client
-  }
-`;
-
-const exitFullscreen = gql`
-  mutation {
-    mediaPlayerUpdateState(isFullscreen: false) @client
-  }
-`;
-
-const mute = gql`
-  mutation {
-    mediaPlayerUpdateState(muted: true) @client
-  }
-`;
-
-const unmute = gql`
-  mutation {
-    mediaPlayerUpdateState(muted: false) @client
-  }
-`;
-
-const showVideo = gql`
-  mutation {
-    mediaPlayerUpdateState(showVideo: true) @client
-  }
-`;
-
-const hideVideo = gql`
-  mutation {
-    mediaPlayerUpdateState(showVideo: false) @client
-  }
-`;
-
-const updatePlayhead = gql`
-  mutation mediaPlayerSetPlayhead($currentTime: Float) {
-    mediaPlayerSetPlayhead(currentTime: $currentTime) @client
-  }
-`;
-
-export {
-  pauseAndRestart,
-  playVideoMutation,
-  goFullscreen,
-  play,
-  pause,
-  dismiss,
-  exitFullscreen,
-  updatePlayhead,
-  mute,
-  unmute,
-  showVideo,
-  hideVideo,
-};
diff --git a/apolloschurchapp/src/ui/MediaPlayer/queries.js b/apolloschurchapp/src/ui/MediaPlayer/queries.js
deleted file mode 100644
index b56957a..0000000
--- a/apolloschurchapp/src/ui/MediaPlayer/queries.js
+++ /dev/null
@@ -1,126 +0,0 @@
-import gql from 'graphql-tag';
-
-const getMediaPlayerVisibility = gql`
-  query mediaPlayerVisibility {
-    mediaPlayer @client {
-      isVisible
-    }
-  }
-`;
-
-const getMediaPlayerIsPlaying = gql`
-  query mediaPlayerVisibility {
-    mediaPlayer @client {
-      isPlaying
-    }
-  }
-`;
-
-const getFullVisibilityState = gql`
-  query fullVisibilityState {
-    mediaPlayer @client {
-      currentTrack {
-        isVideo
-      }
-      isVisible
-      isFullscreen
-    }
-  }
-`;
-
-const getControlState = gql`
-  query {
-    mediaPlayer @client {
-      isFullscreen
-      isPlaying
-      currentTrack {
-        id
-        title
-        artist
-        isVideo
-      }
-      showVideo
-      muted
-    }
-  }
-`;
-
-const getVideoState = gql`
-  query mediaPlayer {
-    mediaPlayer @client {
-      currentTrack {
-        mediaSource {
-          uri
-        }
-        posterSources {
-          uri
-        }
-        id
-        isVideo
-      }
-      currentTime
-      isPlaying
-      showVideo
-      muted
-    }
-  }
-`;
-
-const getMusicControlState = gql`
-  query musicControlState {
-    mediaPlayer @client {
-      currentTrack {
-        posterSources {
-          uri
-        }
-        title
-        artist
-      }
-      currentTime
-      isPlaying
-    }
-  }
-`;
-
-const getElapsedTime = gql`
-  query {
-    mediaPlayer @client {
-      progress {
-        currentTime
-      }
-    }
-  }
-`;
-
-const getProgress = gql`
-  query {
-    mediaPlayer @client {
-      progress {
-        currentTime
-        duration
-      }
-    }
-  }
-`;
-
-const getTotalTime = gql`
-  query {
-    mediaPlayer @client {
-      progress {
-        duration
-      }
-    }
-  }
-`;
-
-export {
-  getMediaPlayerIsPlaying,
-  getMediaPlayerVisibility,
-  getMusicControlState,
-  getFullVisibilityState,
-  getControlState,
-  getVideoState,
-  getElapsedTime,
-  getProgress,
-  getTotalTime,
-};
diff --git a/apolloschurchapp/src/ui/Onboarding/Onboarding.stories.js b/apolloschurchapp/src/ui/Onboarding/Onboarding.stories.js
new file mode 100644
index 0000000..bf81552
--- /dev/null
+++ b/apolloschurchapp/src/ui/Onboarding/Onboarding.stories.js
@@ -0,0 +1,5 @@
+import React from 'react';
+import { storiesOf } from '@apollosproject/ui-storybook';
+import Onboarding from '.';
+
+storiesOf('Onboarding', module).add('full', () => <Onboarding />);
diff --git a/apolloschurchapp/src/ui/Onboarding/Onboarding.tests.js b/apolloschurchapp/src/ui/Onboarding/Onboarding.tests.js
new file mode 100644
index 0000000..abe9746
--- /dev/null
+++ b/apolloschurchapp/src/ui/Onboarding/Onboarding.tests.js
@@ -0,0 +1,17 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from '../../Providers';
+
+import Onboarding from '.';
+
+describe('the Onboarding component', () => {
+  it('should render Onboarding', () => {
+    const tree = renderer.create(
+      <Providers>
+        <Onboarding />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/Onboarding/index.js b/apolloschurchapp/src/ui/Onboarding/index.js
new file mode 100644
index 0000000..67d9879
--- /dev/null
+++ b/apolloschurchapp/src/ui/Onboarding/index.js
@@ -0,0 +1,95 @@
+import React from 'react';
+
+import {
+  GradientOverlayImage,
+  styled,
+  BackgroundView,
+} from '@apollosproject/ui-kit';
+import { ApolloConsumer } from 'react-apollo';
+
+import {
+  AskNotificationsConnected,
+  AskNameConnected,
+  FeaturesConnected,
+  AboutYouConnected,
+  LocationFinderConnected,
+  OnboardingSwiper,
+} from '@apollosproject/ui-onboarding';
+
+import { requestPushPermissions } from '@apollosproject/ui-notifications';
+
+const FullscreenBackgroundView = styled({
+  position: 'absolute',
+  width: '100%',
+  height: '100%',
+})(BackgroundView);
+
+const StyledGradient = styled({
+  maxHeight: '40%',
+})(GradientOverlayImage);
+
+function Onboarding({ navigation }) {
+  return (
+    <>
+      <FullscreenBackgroundView />
+      <OnboardingSwiper>
+        {({ swipeForward }) => (
+          <>
+            <AskNameConnected onPressPrimary={swipeForward} />
+            <FeaturesConnected
+              onPressPrimary={swipeForward}
+              BackgroundComponent={
+                <StyledGradient
+                  source={'https://picsum.photos/640/640/?random'}
+                />
+              }
+            />
+            <AboutYouConnected
+              onPressPrimary={swipeForward}
+              BackgroundComponent={
+                <StyledGradient
+                  source={'https://picsum.photos/640/640/?random'}
+                />
+              }
+            />
+            <LocationFinderConnected
+              onPressPrimary={swipeForward}
+              onNavigate={() => {
+                navigation.navigate('Location');
+              }}
+              BackgroundComponent={
+                <StyledGradient
+                  source={'https://picsum.photos/640/640/?random'}
+                />
+              }
+            />
+            <ApolloConsumer>
+              {(client) => (
+                <AskNotificationsConnected
+                  onPressPrimary={() => navigation.replace('Tabs')}
+                  onRequestPushPermissions={() =>
+                    requestPushPermissions({ client })
+                  }
+                  primaryNavText={'Finish'}
+                  BackgroundComponent={
+                    <StyledGradient
+                      source={'https://picsum.photos/640/640/?random'}
+                    />
+                  }
+                />
+              )}
+            </ApolloConsumer>
+          </>
+        )}
+      </OnboardingSwiper>
+    </>
+  );
+}
+
+Onboarding.navigationOptions = {
+  title: 'Onboarding',
+  header: null,
+  gesturesEnabled: false,
+};
+
+export default Onboarding;
diff --git a/apolloschurchapp/src/ui/Scripture/ScriptureHTMLView.js b/apolloschurchapp/src/ui/Scripture/ScriptureHTMLView.js
deleted file mode 100644
index fb6a93d..0000000
--- a/apolloschurchapp/src/ui/Scripture/ScriptureHTMLView.js
+++ /dev/null
@@ -1,138 +0,0 @@
-import React from 'react';
-import { withProps } from 'recompose';
-import { Platform } from 'react-native';
-
-import { Paragraph, H4 } from '@apollosproject/ui-kit';
-import HTMLView from 'apolloschurchapp/src/ui/HTMLView';
-import defaultRenderer, {
-  wrapTextChildren,
-} from 'apolloschurchapp/src/ui/HTMLView/defaultRenderer';
-
-import {
-  ScriptureText,
-  VerseNumber,
-  RedLetters,
-  PoeticPause,
-} from './typography';
-
-const renderer = (node, { children, ...other }) => {
-  // the defaultRenderer support several basic elements out of the box,
-  // this function only needs to handle the cases that are unique to scripture.
-  const className = (node && node.attribs && node.attribs.class) || '';
-
-  /* Verse numbers
-   * https://github.com/americanbible/api-bible-assets/blob/master/scss/eb-scripture-style/modules/_chapters-verses.scss#L33
-   */
-  if (className.includes('v')) {
-    /* TODO: a single space before and importantly a non-breaking space (`\u00A0`) after wraps the number to
-     * temporarily space verse numbers when they are not at the beginning of a sentence or
-     * paragraph. It affects all instences (albeit less noticably in some cases) so a more procise
-     * fix in the future is prefered.
-     */
-    return (
-      <VerseNumber>
-        {' '}
-        {children}
-        {`\u00A0`}
-      </VerseNumber>
-    );
-  }
-
-  /* Speaker identification and descriptive titles ("Hebrew subtitle")
-   * https://github.com/americanbible/api-bible-assets/blob/master/scss/eb-scripture-style/modules/_titles-headings.scss#L109-L126
-   */
-  if (className.includes('sp') || className.includes('d')) {
-    return <H4 padded>{children}</H4>;
-  }
-
-  /* Indented poetic line These are sometimes seen as a quote of the OT in the NT as well.
-   * This uses spaces as a less ideal fix because we are bound by the limits of rendering HTML.
-   * https://github.com/americanbible/api-bible-assets/blob/master/scss/eb-scripture-style/modules/_poetry.scss#L2
-   */
-  if (className.includes('q1')) {
-    return (
-      <ScriptureText>
-        {'     '}
-        {children}
-      </ScriptureText>
-    );
-  }
-
-  /* Double indented poetic lines. These are sometimes seen as a quote of the OT in the NT as well.
-   * This uses spaces as a less ideal fix because we are bound by the limits of rendering HTML.
-   * https://github.com/americanbible/api-bible-assets/blob/master/scss/eb-scripture-style/modules/_poetry.scss#L7
-   */
-  if (className.includes('q2')) {
-    return (
-      <ScriptureText>
-        {'          '}
-        {children}
-      </ScriptureText>
-    );
-  }
-
-  /* Triple indented poetic lines. These are sometimes seen as a quote of the OT in the NT as well.
-   * This uses spaces as a less ideal fix because we are bound by the limits of rendering HTML.
-   * https://github.com/americanbible/api-bible-assets/blob/master/scss/eb-scripture-style/modules/_poetry.scss#L8
-   */
-  if (className.includes('q3')) {
-    return (
-      <ScriptureText>
-        {'               '}
-        {children}
-      </ScriptureText>
-    );
-  }
-
-  /* Quadruple indented poetic lines. These are sometimes seen as a quote of the OT in the NT as well.
-   * This uses spaces as a less ideal fix because we are bound by the limits of rendering HTML.
-   * https://github.com/americanbible/api-bible-assets/blob/master/scss/eb-scripture-style/modules/_poetry.scss#L9
-   */
-  if (className.includes('q4')) {
-    return (
-      <ScriptureText>
-        {'                    '}
-        {children}
-      </ScriptureText>
-    );
-  }
-
-  if (className.includes('wj')) {
-    return <RedLetters>{children}</RedLetters>;
-  }
-
-  /* Poetic pause ("Selah"). Highly conditional rendering due to Android not supporting nested text
-   * alignment (https://github.com/facebook/react-native/issues/18790) and needing to keep it
-   * somewhat attractive. TODO: revisit conditional code when issue is resolved or if we refactor
-   * the parser
-   *
-   * https://github.com/americanbible/api-bible-assets/blob/master/scss/eb-scripture-style/modules/_poetry.scss#L22
-   */
-  if (className.includes('qs')) {
-    return (
-      <PoeticPause>
-        {Platform.OS === 'ios' ? `\n` : null}
-        {children}
-        {Platform.OS === 'ios' ? `\n` : `\n\n`}
-      </PoeticPause>
-    );
-  }
-
-  if (node.name === 'p') {
-    return (
-      <Paragraph>
-        <ScriptureText>
-          {wrapTextChildren(children, ScriptureText)}
-        </ScriptureText>
-      </Paragraph>
-    );
-  }
-
-  return defaultRenderer(node, { children, ...other });
-};
-
-const ScriptureHTMLView = withProps({
-  renderer,
-})(HTMLView);
-
-export default ScriptureHTMLView;
diff --git a/apolloschurchapp/src/ui/Scripture/ScriptureItem.js b/apolloschurchapp/src/ui/Scripture/ScriptureItem.js
deleted file mode 100644
index b78993f..0000000
--- a/apolloschurchapp/src/ui/Scripture/ScriptureItem.js
+++ /dev/null
@@ -1,34 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-import { View } from 'react-native';
-
-import { Placeholder, H4, H6 } from '@apollosproject/ui-kit';
-
-import { LegalText } from './typography';
-import ScriptureHTMLView from './ScriptureHTMLView';
-
-const ScriptureItem = ({ reference, html, copyright, isLoading }) => (
-  <Placeholder.Paragraph
-    lineNumber={5}
-    onReady={!isLoading}
-    lastLineWidth="60%"
-    firstLineWidth="40%"
-  >
-    <View>
-      <H4>
-        <H4>{reference}</H4> <H6>WEB</H6>
-      </H4>
-      <ScriptureHTMLView>{html}</ScriptureHTMLView>
-      <LegalText>{copyright === 'PUBLIC DOMAIN' ? '' : copyright}</LegalText>
-    </View>
-  </Placeholder.Paragraph>
-);
-
-ScriptureItem.propTypes = {
-  reference: PropTypes.string,
-  html: PropTypes.string,
-  copyright: PropTypes.string,
-  isLoading: PropTypes.bool,
-};
-
-export default ScriptureItem;
diff --git a/apolloschurchapp/src/ui/Scripture/ScriptureItem.stories.js b/apolloschurchapp/src/ui/Scripture/ScriptureItem.stories.js
deleted file mode 100644
index c51b7ed..0000000
--- a/apolloschurchapp/src/ui/Scripture/ScriptureItem.stories.js
+++ /dev/null
@@ -1,210 +0,0 @@
-import React from 'react';
-import { ScrollView } from 'react-native';
-import { storiesOf } from '@storybook/react-native';
-import { PaddedView } from '@apollosproject/ui-kit';
-
-import ScriptureItem from './ScriptureItem';
-
-const genesis1 = {
-  scripture: {
-    reference: 'Genesis 1:1-5',
-    html:
-      '<p class="p"><span data-number="1" class="v">1</span>In the beginning, God created the heavens and the earth. <span data-number="2" class="v">2</span>The earth was formless and empty. Darkness was on the surface of the deep and God’s Spirit was hovering over the surface of the waters.</p><p class="p"><span data-number="3" class="v">3</span>God said, “Let there be light,” and there was light. <span data-number="4" class="v">4</span>God saw the light, and saw that it was good. God divided the light from the darkness. <span data-number="5" class="v">5</span>God called the light “day”, and the darkness he called “night”. There was evening and there was morning, the first day.</p>',
-    isLoading: false,
-    copyright: 'PUBLIC DOMAIN',
-  },
-};
-
-const john1 = {
-  scripture: {
-    reference: 'John 1:1',
-    html:
-      '<p class="p"><span data-number="1" class="v">1</span>In the beginning was the Word, and the Word was with God, and the Word was God. </p>',
-    isLoading: false,
-    copyright:
-      'PUBLIC DOMAIN except in the United Kingdom, where a Crown Copyright applies to printing the KJV. See http://www.cambridge.org/about-us/who-we-are/queens-printers-patent',
-  },
-};
-
-const psalm23 = {
-  scripture: {
-    reference: 'Psalm 23',
-    html:
-      '<p class="d">A Psalm by David.</p><p class="q1"><span data-number="1" class="v">1</span>Yahweh is my shepherd:</p><p class="q2">I shall lack nothing.</p><p class="q1"><span data-number="2" class="v">2</span>He makes me lie down in green pastures.</p><p class="q2">He leads me beside still waters.</p><p class="q1"><span data-number="3" class="v">3</span>He restores my soul.</p><p class="q2">He guides me in the paths of righteousness for his name’s sake.</p><p class="q1"><span data-number="4" class="v">4</span>Even though I walk through the valley of the shadow of death,</p><p class="q2">I will fear no evil, for you are with me.</p><p class="q1">Your rod and your staff,</p><p class="q2">they comfort me.</p><p class="q1"><span data-number="5" class="v">5</span>You prepare a table before me</p><p class="q2">in the presence of my enemies.</p><p class="q1">You anoint my head with oil.</p><p class="q2">My cup runs over.</p><p class="q1"><span data-number="6" class="v">6</span>Surely goodness and loving kindness shall follow me all the days of my life,</p><p class="q2">and I will dwell in Yahweh’s house forever.</p>',
-    isLoading: false,
-  },
-};
-
-const psalm32 = {
-  scripture: {
-    reference: 'Psalm 32',
-    html:
-      '<p class="d">By David. A contemplative psalm.</p><p class="q1"><span data-number="1" class="v">1</span>Blessed is he whose disobedience is forgiven,</p><p class="q2">whose sin is covered.</p><p class="q1"><span data-number="2" class="v">2</span>Blessed is the man to whom Yahweh doesn’t impute iniquity,</p><p class="q2">in whose spirit there is no deceit.</p><p class="q1"><span data-number="3" class="v">3</span>When I kept silence, my bones wasted away through my groaning all day long.</p><p class="q1"><span data-number="4" class="v">4</span>For day and night your hand was heavy on me.</p><p class="q2">My strength was sapped in the heat of summer. <span class="qs">Selah.</span></p><p class="q1"><span data-number="5" class="v">5</span>I acknowledged my sin to you.</p><p class="q2">I didn’t hide my iniquity.</p><p class="q1">I said, I will confess my transgressions to Yahweh,</p><p class="q2">and you forgave the iniquity of my sin. <span class="qs">Selah.</span></p><p class="q1"><span data-number="6" class="v">6</span>For this, let everyone who is godly pray to you in a time when you may be found.</p><p class="q2">Surely when the great waters overflow, they shall not reach to him.</p><p class="q1"><span data-number="7" class="v">7</span>You are my hiding place.</p><p class="q2">You will preserve me from trouble.</p><p class="q2">You will surround me with songs of deliverance. <span class="qs">Selah.</span></p><p class="q1"><span data-number="8" class="v">8</span>I will instruct you and teach you in the way which you shall go.</p><p class="q2">I will counsel you with my eye on you.</p><p class="q1"><span data-number="9" class="v">9</span>Don’t be like the horse, or like the mule, which have no understanding,</p><p class="q2">who are controlled by bit and bridle, or else they will not come near to you.</p><p class="q1"><span data-number="10" class="v">10</span>Many sorrows come to the wicked,</p><p class="q2">but loving kindness shall surround him who trusts in Yahweh.</p><p class="q1"><span data-number="11" class="v">11</span>Be glad in Yahweh, and rejoice, you righteous!</p><p class="q2">Shout for joy, all you who are upright in heart!</p>',
-  },
-};
-
-const psalm119 = {
-  scripture: {
-    reference: 'Psalm 119:129 - 144',
-    html:
-      '<p class="d">PEY</p><p class="q1"><span data-number="129" class="v">129</span>Your testimonies are wonderful,</p><p class="q2">therefore my soul keeps them.</p><p class="q1"><span data-number="130" class="v">130</span>The entrance of your words gives light.</p><p class="q2">It gives understanding to the simple.</p><p class="q1"><span data-number="131" class="v">131</span>I opened my mouth wide and panted,</p><p class="q2">for I longed for your commandments.</p><p class="q1"><span data-number="132" class="v">132</span>Turn to me, and have mercy on me,</p><p class="q2">as you always do to those who love your name.</p><p class="q1"><span data-number="133" class="v">133</span>Establish my footsteps in your word.</p><p class="q2">Don’t let any iniquity have dominion over me.</p><p class="q1"><span data-number="134" class="v">134</span>Redeem me from the oppression of man,</p><p class="q2">so I will observe your precepts.</p><p class="q1"><span data-number="135" class="v">135</span>Make your face shine on your servant.</p><p class="q2">Teach me your statutes.</p><p class="q1"><span data-number="136" class="v">136</span>Streams of tears run down my eyes,</p><p class="q2">because they don’t observe your law.</p><p class="d">TZADI</p><p class="q1"><span data-number="137" class="v">137</span>You are righteous, Yahweh.</p><p class="q2">Your judgments are upright.</p><p class="q1"><span data-number="138" class="v">138</span>You have commanded your statutes in righteousness.</p><p class="q2">They are fully trustworthy.</p><p class="q1"><span data-number="139" class="v">139</span>My zeal wears me out,</p><p class="q2">because my enemies ignore your words.</p><p class="q1"><span data-number="140" class="v">140</span>Your promises have been thoroughly tested,</p><p class="q2">and your servant loves them.</p><p class="q1"><span data-number="141" class="v">141</span>I am small and despised.</p><p class="q2">I don’t forget your precepts.</p><p class="q1"><span data-number="142" class="v">142</span>Your righteousness is an everlasting righteousness.</p><p class="q2">Your law is truth.</p><p class="q1"><span data-number="143" class="v">143</span>Trouble and anguish have taken hold of me.</p><p class="q2">Your commandments are my delight.</p><p class="q1"><span data-number="144" class="v">144</span>Your testimonies are righteous forever.</p><p class="q2">Give me understanding, that I may live.</p>',
-  },
-};
-
-const songOfSolomon1 = {
-  scripture: {
-    reference: 'Song of Solomon 1:1-4',
-    html:
-      '<p class="p"><span data-number="1" class="v">1</span>The Song of songs, which is Solomon’s.</p><p class="sp">Beloved</p><p class="q1"><span data-number="2" class="v">2</span>Let him kiss me with the kisses of his mouth;</p><p class="q2">for your love is better than wine.</p><p class="q1"><span data-number="3" class="v">3</span>Your oils have a pleasing fragrance.</p><p class="q2">Your name is oil poured out,</p><p class="q2">therefore the virgins love you.</p><p class="q1"><span data-number="4" class="v">4</span>Take me away with you.</p><p class="q2">Let’s hurry.</p><p class="q2">The king has brought me into his rooms.</p><p class="sp">Friends</p><p class="q1">We will be glad and rejoice in you.</p><p class="q2">We will praise your love more than wine!</p><p class="sp">Beloved</p><p class="q1">They are right to love you.</p>',
-    isLoading: false,
-  },
-};
-
-const mark1 = {
-  scripture: {
-    reference: 'Mark 1: 1-4',
-    html:
-      '<p class="p"><span data-number="1" class="v">1</span>The beginning of the Good News of Jesus Christ, the Son of God.</p><p class="p"><span data-number="2" class="v">2</span>As it is written in the prophets,</p><p class="q1">“Behold, I send my messenger before your face,</p><p class="q2">who will prepare your way before you:</p><p class="q1"><span data-number="3" class="v">3</span>the voice of one crying in the wilderness,</p><p class="q2">‘Make ready the way of the Lord!</p><p class="q2">Make his paths straight!’”</p><p class="p"><span data-number="4" class="v">4</span>John came baptizing in the wilderness and preaching the baptism of repentance for forgiveness of sins.',
-  },
-};
-
-const john3 = {
-  scripture: {
-    reference: 'John 3:16-17',
-    html:
-      '<p class="p"><span data-number="16" class="v">16</span><span class="wj">For God so loved the world, that he gave his one and only Son, that whoever believes in him should not perish, but have eternal life. </span><span data-number="17" class="v">17</span><span class="wj">For God didn’t send his Son into the world to judge the world, but that the world should be saved through him. </span></p>',
-    isLoading: false,
-  },
-};
-
-const revelation22 = {
-  scripture: {
-    reference: 'Revelation 22:20-21',
-    html:
-      '<p class="p"><span data-number="20" class="v">20</span>He who testifies these things says, <span class="wj">“Yes, I come quickly.” </span></p><p class="p">Amen! Yes, come, Lord Jesus.</p><p class="p"><span data-number="21" class="v">21</span>The grace of the Lord Jesus Christ be with all the saints. Amen.</p>',
-    isLoading: false,
-  },
-};
-
-const revelation22Loading = {
-  scripture: {
-    reference: 'Revelation 22:20-21',
-    html:
-      '<p class="p"><span data-number="20" class="v">20</span>He who testifies these things says, <span class="wj">“Yes, I come quickly.” </span></p><p class="p">Amen! Yes, come, Lord Jesus.</p><p class="p"><span data-number="21" class="v">21</span>The grace of the Lord Jesus Christ be with all the saints. Amen.</p>',
-    isLoading: true,
-  },
-};
-
-storiesOf('Scripture', module)
-  .add('Genesis 1:1-5', () => (
-    <ScrollView>
-      <PaddedView>
-        <ScriptureItem
-          reference={genesis1.scripture.reference}
-          html={genesis1.scripture.html}
-          isLoading={genesis1.scripture.isLoading}
-          copyright={genesis1.scripture.copyright}
-        />
-      </PaddedView>
-    </ScrollView>
-  ))
-  .add('John 1:1', () => (
-    <ScrollView>
-      <PaddedView>
-        <ScriptureItem
-          reference={john1.scripture.reference}
-          html={john1.scripture.html}
-          isLoading={john1.scripture.isLoading}
-          copyright={john1.scripture.copyright}
-        />
-      </PaddedView>
-    </ScrollView>
-  ))
-  .add('Psalm 23', () => (
-    <ScrollView>
-      <PaddedView>
-        <ScriptureItem
-          reference={psalm23.scripture.reference}
-          html={psalm23.scripture.html}
-          isLoading={psalm23.scripture.isLoading}
-        />
-      </PaddedView>
-    </ScrollView>
-  ))
-  .add('Psalm 32', () => (
-    <ScrollView>
-      <PaddedView>
-        <ScriptureItem
-          reference={psalm32.scripture.reference}
-          html={psalm32.scripture.html}
-          isLoading={psalm32.scripture.isLoading}
-        />
-      </PaddedView>
-    </ScrollView>
-  ))
-  .add('Psalm 119:129 - 144', () => (
-    <ScrollView>
-      <PaddedView>
-        <ScriptureItem
-          reference={psalm119.scripture.reference}
-          html={psalm119.scripture.html}
-          isLoading={psalm119.scripture.isLoading}
-        />
-      </PaddedView>
-    </ScrollView>
-  ))
-  .add('Song of Solomon 1:1-4', () => (
-    <ScrollView>
-      <PaddedView>
-        <ScriptureItem
-          reference={songOfSolomon1.scripture.reference}
-          html={songOfSolomon1.scripture.html}
-          isLoading={songOfSolomon1.scripture.isLoading}
-        />
-      </PaddedView>
-    </ScrollView>
-  ))
-  .add('Mark 1: 1-4', () => (
-    <ScrollView>
-      <PaddedView>
-        <ScriptureItem
-          reference={mark1.scripture.reference}
-          html={mark1.scripture.html}
-          isLoading={mark1.scripture.isLoading}
-        />
-      </PaddedView>
-    </ScrollView>
-  ))
-  .add('John 3:16-17', () => (
-    <ScrollView>
-      <PaddedView>
-        <ScriptureItem
-          reference={john3.scripture.reference}
-          html={john3.scripture.html}
-          isLoading={john3.scripture.isLoading}
-        />
-      </PaddedView>
-    </ScrollView>
-  ))
-  .add('Revelation 22:20-21', () => (
-    <ScrollView>
-      <PaddedView>
-        <ScriptureItem
-          reference={revelation22.scripture.reference}
-          html={revelation22.scripture.html}
-          isLoading={revelation22.scripture.isLoading}
-        />
-      </PaddedView>
-    </ScrollView>
-  ))
-  .add('Loading State', () => (
-    <ScrollView>
-      <PaddedView>
-        <ScriptureItem
-          reference={revelation22Loading.scripture.reference}
-          html={revelation22Loading.scripture.html}
-          isLoading={revelation22Loading.scripture.isLoading}
-        />
-      </PaddedView>
-    </ScrollView>
-  ));
diff --git a/apolloschurchapp/src/ui/Scripture/ScriptureItem.tests.js b/apolloschurchapp/src/ui/Scripture/ScriptureItem.tests.js
deleted file mode 100644
index b43256b..0000000
--- a/apolloschurchapp/src/ui/Scripture/ScriptureItem.tests.js
+++ /dev/null
@@ -1,198 +0,0 @@
-import React from 'react';
-import renderer from 'react-test-renderer';
-
-import Providers from 'apolloschurchapp/src/Providers';
-
-import ScriptureItem from './ScriptureItem';
-
-const genesis1 = {
-  scripture: {
-    reference: 'Genesis 1:1-5',
-    html:
-      '<p class="p"><span data-number="1" class="v">1</span>In the beginning, God created the heavens and the earth. <span data-number="2" class="v">2</span>The earth was formless and empty. Darkness was on the surface of the deep and God’s Spirit was hovering over the surface of the waters.</p><p class="p"><span data-number="3" class="v">3</span>God said, “Let there be light,” and there was light. <span data-number="4" class="v">4</span>God saw the light, and saw that it was good. God divided the light from the darkness. <span data-number="5" class="v">5</span>God called the light “day”, and the darkness he called “night”. There was evening and there was morning, the first day.</p>',
-    copyright: 'PUBLIC DOMAIN',
-  },
-};
-
-const psalm23 = {
-  scripture: {
-    reference: 'Psalm 23',
-    html:
-      '<p class="d">A Psalm by David.</p><p class="q1"><span data-number="1" class="v">1</span>Yahweh is my shepherd:</p><p class="q2">I shall lack nothing.</p><p class="q1"><span data-number="2" class="v">2</span>He makes me lie down in green pastures.</p><p class="q2">He leads me beside still waters.</p><p class="q1"><span data-number="3" class="v">3</span>He restores my soul.</p><p class="q2">He guides me in the paths of righteousness for his name’s sake.</p><p class="q1"><span data-number="4" class="v">4</span>Even though I walk through the valley of the shadow of death,</p><p class="q2">I will fear no evil, for you are with me.</p><p class="q1">Your rod and your staff,</p><p class="q2">they comfort me.</p><p class="q1"><span data-number="5" class="v">5</span>You prepare a table before me</p><p class="q2">in the presence of my enemies.</p><p class="q1">You anoint my head with oil.</p><p class="q2">My cup runs over.</p><p class="q1"><span data-number="6" class="v">6</span>Surely goodness and loving kindness shall follow me all the days of my life,</p><p class="q2">and I will dwell in Yahweh’s house forever.</p>',
-
-    copyright:
-      'PUBLIC DOMAIN except in the United Kingdom, where a Crown Copyright applies to printing the KJV. See http://www.cambridge.org/about-us/who-we-are/queens-printers-patent',
-  },
-};
-
-const psalm32 = {
-  scripture: {
-    reference: 'Psalm 32',
-    html:
-      '<p class="d">By David. A contemplative psalm.</p><p class="q1"><span data-number="1" class="v">1</span>Blessed is he whose disobedience is forgiven,</p><p class="q2">whose sin is covered.</p><p class="q1"><span data-number="2" class="v">2</span>Blessed is the man to whom Yahweh doesn’t impute iniquity,</p><p class="q2">in whose spirit there is no deceit.</p><p class="q1"><span data-number="3" class="v">3</span>When I kept silence, my bones wasted away through my groaning all day long.</p><p class="q1"><span data-number="4" class="v">4</span>For day and night your hand was heavy on me.</p><p class="q2">My strength was sapped in the heat of summer. <span class="qs">Selah.</span></p><p class="q1"><span data-number="5" class="v">5</span>I acknowledged my sin to you.</p><p class="q2">I didn’t hide my iniquity.</p><p class="q1">I said, I will confess my transgressions to Yahweh,</p><p class="q2">and you forgave the iniquity of my sin. <span class="qs">Selah.</span></p><p class="q1"><span data-number="6" class="v">6</span>For this, let everyone who is godly pray to you in a time when you may be found.</p><p class="q2">Surely when the great waters overflow, they shall not reach to him.</p><p class="q1"><span data-number="7" class="v">7</span>You are my hiding place.</p><p class="q2">You will preserve me from trouble.</p><p class="q2">You will surround me with songs of deliverance. <span class="qs">Selah.</span></p><p class="q1"><span data-number="8" class="v">8</span>I will instruct you and teach you in the way which you shall go.</p><p class="q2">I will counsel you with my eye on you.</p><p class="q1"><span data-number="9" class="v">9</span>Don’t be like the horse, or like the mule, which have no understanding,</p><p class="q2">who are controlled by bit and bridle, or else they will not come near to you.</p><p class="q1"><span data-number="10" class="v">10</span>Many sorrows come to the wicked,</p><p class="q2">but loving kindness shall surround him who trusts in Yahweh.</p><p class="q1"><span data-number="11" class="v">11</span>Be glad in Yahweh, and rejoice, you righteous!</p><p class="q2">Shout for joy, all you who are upright in heart!</p>',
-  },
-};
-
-const psalm119 = {
-  scripture: {
-    reference: 'Psalm 119:129 - 144',
-    html:
-      '<p class="d">PEY</p><p class="q1"><span data-number="129" class="v">129</span>Your testimonies are wonderful,</p><p class="q2">therefore my soul keeps them.</p><p class="q1"><span data-number="130" class="v">130</span>The entrance of your words gives light.</p><p class="q2">It gives understanding to the simple.</p><p class="q1"><span data-number="131" class="v">131</span>I opened my mouth wide and panted,</p><p class="q2">for I longed for your commandments.</p><p class="q1"><span data-number="132" class="v">132</span>Turn to me, and have mercy on me,</p><p class="q2">as you always do to those who love your name.</p><p class="q1"><span data-number="133" class="v">133</span>Establish my footsteps in your word.</p><p class="q2">Don’t let any iniquity have dominion over me.</p><p class="q1"><span data-number="134" class="v">134</span>Redeem me from the oppression of man,</p><p class="q2">so I will observe your precepts.</p><p class="q1"><span data-number="135" class="v">135</span>Make your face shine on your servant.</p><p class="q2">Teach me your statutes.</p><p class="q1"><span data-number="136" class="v">136</span>Streams of tears run down my eyes,</p><p class="q2">because they don’t observe your law.</p><p class="d">TZADI</p><p class="q1"><span data-number="137" class="v">137</span>You are righteous, Yahweh.</p><p class="q2">Your judgments are upright.</p><p class="q1"><span data-number="138" class="v">138</span>You have commanded your statutes in righteousness.</p><p class="q2">They are fully trustworthy.</p><p class="q1"><span data-number="139" class="v">139</span>My zeal wears me out,</p><p class="q2">because my enemies ignore your words.</p><p class="q1"><span data-number="140" class="v">140</span>Your promises have been thoroughly tested,</p><p class="q2">and your servant loves them.</p><p class="q1"><span data-number="141" class="v">141</span>I am small and despised.</p><p class="q2">I don’t forget your precepts.</p><p class="q1"><span data-number="142" class="v">142</span>Your righteousness is an everlasting righteousness.</p><p class="q2">Your law is truth.</p><p class="q1"><span data-number="143" class="v">143</span>Trouble and anguish have taken hold of me.</p><p class="q2">Your commandments are my delight.</p><p class="q1"><span data-number="144" class="v">144</span>Your testimonies are righteous forever.</p><p class="q2">Give me understanding, that I may live.</p>',
-  },
-};
-
-const songOfSolomon1 = {
-  scripture: {
-    reference: 'Song of Solomon 1:1-4',
-    html:
-      '<p class="p"><span data-number="1" class="v">1</span>The Song of songs, which is Solomon’s.</p><p class="sp">Beloved</p><p class="q1"><span data-number="2" class="v">2</span>Let him kiss me with the kisses of his mouth;</p><p class="q2">for your love is better than wine.</p><p class="q1"><span data-number="3" class="v">3</span>Your oils have a pleasing fragrance.</p><p class="q2">Your name is oil poured out,</p><p class="q2">therefore the virgins love you.</p><p class="q1"><span data-number="4" class="v">4</span>Take me away with you.</p><p class="q2">Let’s hurry.</p><p class="q2">The king has brought me into his rooms.</p><p class="sp">Friends</p><p class="q1">We will be glad and rejoice in you.</p><p class="q2">We will praise your love more than wine!</p><p class="sp">Beloved</p><p class="q1">They are right to love you.</p>',
-    isLoading: false,
-  },
-};
-
-const mark1 = {
-  scripture: {
-    reference: 'Mark 1:1-4',
-    html:
-      '<p class="p"><span data-number="1" class="v">1</span>The beginning of the Good News of Jesus Christ, the Son of God.</p><p class="p"><span data-number="2" class="v">2</span>As it is written in the prophets,</p><p class="q1">“Behold, I send my messenger before your face,</p><p class="q2">who will prepare your way before you:</p><p class="q1"><span data-number="3" class="v">3</span>the voice of one crying in the wilderness,</p><p class="q2">‘Make ready the way of the Lord!</p><p class="q2">Make his paths straight!’”</p><p class="p"><span data-number="4" class="v">4</span>John came baptizing in the wilderness and preaching the baptism of repentance for forgiveness of sins.',
-  },
-};
-
-const john3 = {
-  scripture: {
-    reference: 'John 3:16-17',
-    html:
-      '<p class="p"><span data-number="16" class="v">16</span><span class="wj">For God so loved the world, that he gave his one and only Son, that whoever believes in him should not perish, but have eternal life. </span><span data-number="17" class="v">17</span><span class="wj">For God didn’t send his Son into the world to judge the world, but that the world should be saved through him. </span></p>',
-    isLoading: false,
-  },
-};
-
-const revelation22 = {
-  scripture: {
-    reference: 'Revelation 22:20-21',
-    html:
-      '<p class="p"><span data-number="20" class="v">20</span>He who testifies these things says, <span class="wj">“Yes, I come quickly.” </span></p><p class="p">Amen! Yes, come, Lord Jesus.</p><p class="p"><span data-number="21" class="v">21</span>The grace of the Lord Jesus Christ be with all the saints. Amen.</p>',
-  },
-};
-
-const john3Loading = {
-  scripture: {
-    reference: 'John 3:16-17',
-    html:
-      '<p class="p"><span data-number="16" class="v">16</span><span class="wj">For God so loved the world, that he gave his one and only Son, that whoever believes in him should not perish, but have eternal life. </span><span data-number="17" class="v">17</span><span class="wj">For God didn’t send his Son into the world to judge the world, but that the world should be saved through him. </span></p>',
-    isLoading: true,
-  },
-};
-
-describe('the ScriptureItem component', () => {
-  it('renders Genesis 1:1-5', () => {
-    const tree = renderer.create(
-      <Providers>
-        <ScriptureItem
-          reference={genesis1.scripture.reference}
-          html={genesis1.scripture.html}
-          copyright={genesis1.scripture.copyright}
-          isLoading={false}
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('renders Psalm 23', () => {
-    const tree = renderer.create(
-      <Providers>
-        <ScriptureItem
-          reference={psalm23.scripture.reference}
-          html={psalm23.scripture.html}
-          copyright={psalm23.scripture.copyright}
-          isLoading={false}
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('renders Psalm 32', () => {
-    const tree = renderer.create(
-      <Providers>
-        <ScriptureItem
-          reference={psalm32.scripture.reference}
-          html={psalm32.scripture.html}
-          isLoading={false}
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('renders Psalm 119:129 - 144', () => {
-    const tree = renderer.create(
-      <Providers>
-        <ScriptureItem
-          reference={psalm119.scripture.reference}
-          html={psalm119.scripture.html}
-          isLoading={false}
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('renders Song of Solomon 1:1-4', () => {
-    const tree = renderer.create(
-      <Providers>
-        <ScriptureItem
-          reference={songOfSolomon1.scripture.reference}
-          html={songOfSolomon1.scripture.html}
-          isLoading={songOfSolomon1.scripture.isLoading}
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('renders Mark 1:1-4', () => {
-    const tree = renderer.create(
-      <Providers>
-        <ScriptureItem
-          reference={mark1.scripture.reference}
-          html={mark1.scripture.html}
-          isLoading={false}
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('renders John 3:16-17', () => {
-    const tree = renderer.create(
-      <Providers>
-        <ScriptureItem
-          reference={john3.scripture.reference}
-          html={john3.scripture.html}
-          isLoading={john3.scripture.isLoading}
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('renders Revelation 22:20-21', () => {
-    const tree = renderer.create(
-      <Providers>
-        <ScriptureItem
-          reference={revelation22.scripture.reference}
-          html={revelation22.scripture.html}
-          isLoading={false}
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('renders a loading state', () => {
-    const tree = renderer.create(
-      <Providers>
-        <ScriptureItem
-          reference={john3Loading.scripture.reference}
-          html={john3Loading.scripture.html}
-          isLoading={john3Loading.scripture.isLoading}
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/ui/Scripture/ScriptureList.js b/apolloschurchapp/src/ui/Scripture/ScriptureList.js
deleted file mode 100644
index f6d3015..0000000
--- a/apolloschurchapp/src/ui/Scripture/ScriptureList.js
+++ /dev/null
@@ -1,49 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-import { H4, styled, ButtonLink } from '@apollosproject/ui-kit';
-
-const StyledH4 = styled(({ theme }) => ({
-  color: theme.colors.primary,
-  textAlign: 'center',
-  textDecorationLine: 'underline',
-  paddingBottom: theme.sizing.baseUnit * 1.5,
-}))(H4);
-
-const ScriptureList = ({
-  references,
-  onPress,
-  tabDestination,
-  commas = true,
-}) => {
-  if (!references && commas) return '';
-  if (!references) return [];
-
-  let combo = references.map((reference) => `${reference}`);
-
-  if (commas) {
-    combo = combo.join(', ');
-  }
-
-  const handleOnPress = () => onPress(tabDestination);
-
-  return (
-    <StyledH4>
-      <ButtonLink padded onPress={handleOnPress}>
-        {combo}
-      </ButtonLink>
-    </StyledH4>
-  );
-};
-
-ScriptureList.propTypes = {
-  /** Toggles comma formating */
-  commas: PropTypes.bool,
-  /** The ButtonLink handler */
-  onPress: PropTypes.func,
-  /** An array of human readable references (i.e. '1 Corinthians 15:57') */
-  references: PropTypes.arrayOf(PropTypes.string),
-  /** The tab to go to onPress */
-  tabDestination: PropTypes.string,
-};
-
-export default ScriptureList;
diff --git a/apolloschurchapp/src/ui/Scripture/ScriptureList.tests.js b/apolloschurchapp/src/ui/Scripture/ScriptureList.tests.js
deleted file mode 100644
index d95c212..0000000
--- a/apolloschurchapp/src/ui/Scripture/ScriptureList.tests.js
+++ /dev/null
@@ -1,19 +0,0 @@
-import React from 'react';
-import renderer from 'react-test-renderer';
-
-import Providers from 'apolloschurchapp/src/Providers';
-
-import ScriptureList from './ScriptureList';
-
-const scriptureReferences = ['1 Corinthians 15:57', 'Exodus 17:8-15'];
-
-describe('the ScriptureList component', () => {
-  it('renders a scripture List', () => {
-    const tree = renderer.create(
-      <Providers>
-        <ScriptureList onPress={jest.fn()} references={scriptureReferences} />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/ui/Scripture/index.js b/apolloschurchapp/src/ui/Scripture/index.js
deleted file mode 100644
index 6458f99..0000000
--- a/apolloschurchapp/src/ui/Scripture/index.js
+++ /dev/null
@@ -1,2 +0,0 @@
-export { default } from './ScriptureItem';
-export ScriptureList from './ScriptureList';
diff --git a/apolloschurchapp/src/ui/Scripture/typography/ScriptureText/ScriptureText.stories.js b/apolloschurchapp/src/ui/Scripture/typography/ScriptureText/ScriptureText.stories.js
deleted file mode 100644
index 33ea0d2..0000000
--- a/apolloschurchapp/src/ui/Scripture/typography/ScriptureText/ScriptureText.stories.js
+++ /dev/null
@@ -1,44 +0,0 @@
-import React from 'react';
-import { View } from 'react-native';
-import { storiesOf } from '@storybook/react-native';
-
-import ScriptureText from '.';
-
-storiesOf('Scripture/typography/ScriptureText', module)
-  .add('Regular', () => (
-    <ScriptureText>
-      {`"God's commands are designed to guide you to life's very best. You will not obey Him, if you do not believe Him and trust Him. You cannot believe Him if you do not love Him. You cannot love Him unless you know Him." ― Henry Blackaby`}
-    </ScriptureText>
-  ))
-  .add('Bold', () => (
-    <ScriptureText bold>
-      {`"God's commands are designed to guide you to life's very best. You will not obey Him, if you do not believe Him and trust Him. You cannot believe Him if you do not love Him. You cannot love Him unless you know Him." ― Henry Blackaby`}
-    </ScriptureText>
-  ))
-  .add('Italic', () => (
-    <ScriptureText italic>
-      {`"God's commands are designed to guide you to life's very best. You will not obey Him, if you do not believe Him and trust Him. You cannot believe Him if you do not love Him. You cannot love Him unless you know Him." ― Henry Blackaby`}
-    </ScriptureText>
-  ))
-  .add('Bold Italic', () => (
-    <ScriptureText bold italic>
-      {`"God's commands are designed to guide you to life's very best. You will not obey Him, if you do not believe Him and trust Him. You cannot believe Him if you do not love Him. You cannot love Him unless you know Him." ― Henry Blackaby`}
-    </ScriptureText>
-  ))
-  .add('isLoading', () => (
-    <ScriptureText isLoading>
-      {`"God's commands are designed to guide you to life's very best. You will not obey Him, if you do not believe Him and trust Him. You cannot believe Him if you do not love Him. You cannot love Him unless you know Him." ― Henry Blackaby`}
-    </ScriptureText>
-  ))
-  .add('Border Box – platform testing', () => {
-    const border = { borderWidth: 1, borderStyle: 'solid' };
-
-    return (
-      <View>
-        <ScriptureText style={border}>Body Text</ScriptureText>
-        <ScriptureText style={border}>
-          {`"God's commands are designed to guide you to life's very best. You will not obey Him, if you do not believe Him and trust Him. You cannot believe Him if you do not love Him. You cannot love Him unless you know Him." ― Henry Blackaby`}
-        </ScriptureText>
-      </View>
-    );
-  });
diff --git a/apolloschurchapp/src/ui/Scripture/typography/ScriptureText/ScriptureText.tests.js b/apolloschurchapp/src/ui/Scripture/typography/ScriptureText/ScriptureText.tests.js
deleted file mode 100644
index f1c7012..0000000
--- a/apolloschurchapp/src/ui/Scripture/typography/ScriptureText/ScriptureText.tests.js
+++ /dev/null
@@ -1,72 +0,0 @@
-import React from 'react';
-import renderer from 'react-test-renderer';
-
-import Providers from 'apolloschurchapp/src/Providers';
-
-import ScriptureText from '.';
-
-describe('the ScriptureText component', () => {
-  it('should render correctly', () => {
-    const tree = renderer.create(
-      <Providers>
-        <ScriptureText>Default ScriptureText text</ScriptureText>
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render as bold', () => {
-    const tree = renderer.create(
-      <Providers>
-        <ScriptureText bold>Bold ScriptureText text</ScriptureText>
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render as italic', () => {
-    const tree = renderer.create(
-      <Providers>
-        <ScriptureText italic>Italic ScriptureText text</ScriptureText>
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render as bold italic', () => {
-    const tree = renderer.create(
-      <Providers>
-        <ScriptureText bold italic>
-          Bold italic ScriptureText text
-        </ScriptureText>
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should accept and render passed in styles', () => {
-    const salmon = { color: 'salmon' };
-    const tree = renderer.create(
-      <Providers>
-        <ScriptureText style={salmon}>Salmon text</ScriptureText>
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render a loading state', () => {
-    const tree = renderer.create(
-      <Providers>
-        <ScriptureText isLoading>Default ScriptureText text</ScriptureText>
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should accept additional props', () => {
-    const tree = renderer.create(
-      <Providers>
-        <ScriptureText accessible={false}>
-          {
-            '"True faith means holding nothing back. It means putting every hope in God\'s fidelity to His Promises." ― Francis Chan'
-          }
-        </ScriptureText>
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/ui/Scripture/typography/ScriptureText/index.js b/apolloschurchapp/src/ui/Scripture/typography/ScriptureText/index.js
deleted file mode 100644
index 6f216c7..0000000
--- a/apolloschurchapp/src/ui/Scripture/typography/ScriptureText/index.js
+++ /dev/null
@@ -1,47 +0,0 @@
-import { Text } from 'react-native';
-import PropTypes from 'prop-types';
-import { compose, pure, setDisplayName } from 'recompose';
-
-import { styled, withPlaceholder, Placeholder } from '@apollosproject/ui-kit';
-
-const { Typography } = Placeholder;
-
-const styles = styled(({ theme, bold, italic }) => {
-  let fontStack = theme.typography.serif.regular.default;
-
-  if (bold && italic) {
-    fontStack = theme.typography.serif.bold.italic;
-  } else if (bold) {
-    fontStack = theme.typography.serif.bold.default;
-  } else if (italic) {
-    fontStack = theme.typography.serif.regular.italic;
-  }
-
-  return {
-    fontSize: theme.helpers.rem(1),
-    lineHeight: theme.helpers.verticalRhythm(1, 1.625),
-    fontFamily: fontStack,
-    color: theme.colors.text.primary,
-  };
-}, 'ScriptureText');
-
-const ScriptureText = compose(
-  setDisplayName('ScriptureText'),
-  styles,
-  withPlaceholder(Typography),
-  pure
-)(Text);
-
-ScriptureText.propTypes = {
-  bold: PropTypes.bool,
-  italic: PropTypes.bool,
-  isLoading: PropTypes.bool, // display loading placeholder
-  ...Text.propTypes,
-};
-
-ScriptureText.defaultProps = {
-  bold: false,
-  italic: false,
-};
-
-export default ScriptureText;
diff --git a/apolloschurchapp/src/ui/Scripture/typography/index.js b/apolloschurchapp/src/ui/Scripture/typography/index.js
deleted file mode 100644
index b9ec8c2..0000000
--- a/apolloschurchapp/src/ui/Scripture/typography/index.js
+++ /dev/null
@@ -1,27 +0,0 @@
-import { Text } from 'react-native';
-
-import { styled } from '@apollosproject/ui-kit';
-
-import ScriptureText from './ScriptureText';
-
-const VerseNumber = styled(({ theme }) => ({
-  fontSize: theme.helpers.rem(0.6),
-  color: theme.colors.text.secondary,
-}))(ScriptureText);
-
-const RedLetters = styled(({ theme }) => ({
-  color: theme.colors.wordOfChrist,
-}))(Text);
-
-const PoeticPause = styled({
-  textAlign: 'right',
-})(ScriptureText);
-
-const LegalText = styled(({ theme }) => ({
-  fontSize: theme.helpers.rem(0.6),
-  lineHeight: theme.helpers.verticalRhythm(0.45),
-  fontFamily: theme.typography.sans.regular.default,
-  color: theme.colors.text.secondary,
-}))(ScriptureText);
-
-export { ScriptureText, VerseNumber, RedLetters, PoeticPause, LegalText };
diff --git a/apolloschurchapp/src/ui/SearchInputHeader/SearchInputHeader.tests.js b/apolloschurchapp/src/ui/SearchInputHeader/SearchInputHeader.tests.js
new file mode 100644
index 0000000..ad074a3
--- /dev/null
+++ b/apolloschurchapp/src/ui/SearchInputHeader/SearchInputHeader.tests.js
@@ -0,0 +1,34 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import SearchInputHeader from '.';
+
+describe('The Onboarding LandingScreen component', () => {
+  it('should render', () => {
+    const tree = renderer.create(
+      <Providers>
+        <SearchInputHeader />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should be stylable', () => {
+    const style = { backgroundColor: 'salmon' };
+    const tree = renderer.create(
+      <Providers>
+        <SearchInputHeader style={style} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render pass props to SearchInput', () => {
+    const tree = renderer.create(
+      <Providers>
+        <SearchInputHeader cancelButtonText={'Boom'} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/SearchInputHeader/index.js b/apolloschurchapp/src/ui/SearchInputHeader/index.js
new file mode 100644
index 0000000..b2f33d9
--- /dev/null
+++ b/apolloschurchapp/src/ui/SearchInputHeader/index.js
@@ -0,0 +1,64 @@
+import React from 'react';
+import { Platform, StyleSheet, View } from 'react-native';
+
+import { styled, PaddedView, SearchInput } from '@apollosproject/ui-kit';
+
+const HeaderBorder = styled(
+  ({ theme }) => ({
+    paddingBottom: theme.sizing.baseUnit / 2,
+    /* It's unclear why this is necessary but without it the layout breaks on both platforms. Limited
+     * research suggest that without a background color the shadows don't know what to blend with so
+     * the view collapses. */
+    backgroundColor: theme.colors.background.paper,
+    // Renders the same shadows that React Navigation does.
+    ...Platform.select({
+      ios: {
+        shadowColor: 'rgba(0, 0, 0, 0.3)',
+        shadowOpacity: 0.85,
+        shadowRadius: 0,
+        shadowOffset: {
+          width: 0,
+          height: StyleSheet.hairlineWidth,
+        },
+      },
+      android: {
+        elevation: 4,
+      },
+    }),
+  }),
+  'SearchInputHeader.HeaderBorder'
+)(PaddedView);
+
+// This element is used to clip the Android shadow in every directection except the bottom.
+const AndroidClipElevationFix = styled(
+  {
+    ...Platform.select({
+      android: {
+        paddingBottom: 4,
+        overflow: 'hidden',
+      },
+    }),
+  },
+  'SearchInputHeader.AndroidClipElevationFix'
+)(View);
+
+const ReactNavigationStyleReset = StyleSheet.create({
+  header: {
+    borderBottomWidth: 0,
+    elevation: 0,
+  },
+});
+
+const SearchInputHeader = ({ style, ...props }) => (
+  <AndroidClipElevationFix style={style}>
+    <HeaderBorder vertical={false}>
+      <SearchInput {...props} />
+    </HeaderBorder>
+  </AndroidClipElevationFix>
+);
+
+SearchInputHeader.propTypes = {
+  ...SearchInput.propTypes,
+};
+
+export { SearchInputHeader as default, ReactNavigationStyleReset };
diff --git a/apolloschurchapp/src/ui/Share/index.js b/apolloschurchapp/src/ui/Share/index.js
deleted file mode 100644
index 667f1e6..0000000
--- a/apolloschurchapp/src/ui/Share/index.js
+++ /dev/null
@@ -1,26 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-import { compose, pure } from 'recompose';
-import share from 'apolloschurchapp/src/utils/content/share';
-import { Touchable, Icon, withTheme } from '@apollosproject/ui-kit';
-
-const enhance = compose(
-  pure,
-  withTheme()
-);
-
-const Share = enhance(({ content, theme }) => (
-  <Touchable onPress={() => share(content)}>
-    <Icon name={'share'} fill={theme.colors.secondary} />
-  </Touchable>
-));
-
-Share.propTypes = {
-  content: PropTypes.shape({
-    message: PropTypes.string,
-    title: PropTypes.string,
-    url: PropTypes.string,
-  }),
-};
-
-export default Share;
diff --git a/apolloschurchapp/src/ui/Share/Share.tests.js b/apolloschurchapp/src/ui/ShareContentButton/ShareContentButton.tests.js
similarity index 78%
rename from apolloschurchapp/src/ui/Share/Share.tests.js
rename to apolloschurchapp/src/ui/ShareContentButton/ShareContentButton.tests.js
index 1a059da..106f6b3 100644
--- a/apolloschurchapp/src/ui/Share/Share.tests.js
+++ b/apolloschurchapp/src/ui/ShareContentButton/ShareContentButton.tests.js
@@ -3,18 +3,17 @@ import renderer from 'react-test-renderer';
 
 import { Providers } from '@apollosproject/ui-kit';
 
-import Share from '.';
+import ShareContentButton from '.';
 
 describe('the Share component', () => {
   it('should render', () => {
     const shareObject = {
       title: 'Shared Object Title',
       url: 'https://github.com/ApollosProject/apollos-prototype',
-      message: 'Share this with all your friends and family',
     };
     const tree = renderer.create(
       <Providers>
-        <Share content={shareObject} />
+        <ShareContentButton content={shareObject} />
       </Providers>
     );
     expect(tree).toMatchSnapshot();
diff --git a/apolloschurchapp/src/ui/ShareContentButton/index.js b/apolloschurchapp/src/ui/ShareContentButton/index.js
new file mode 100644
index 0000000..4286a7f
--- /dev/null
+++ b/apolloschurchapp/src/ui/ShareContentButton/index.js
@@ -0,0 +1,40 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import { compose, pure } from 'recompose';
+import share from 'apolloschurchapp/src/utils/content/share';
+import { Touchable, Icon, withTheme } from '@apollosproject/ui-kit';
+import { AnalyticsConsumer } from '@apollosproject/ui-analytics';
+
+const enhance = compose(
+  pure,
+  withTheme()
+);
+
+const ShareContentButton = enhance(({ content, theme }) => (
+  <AnalyticsConsumer>
+    {({ track }) => {
+      const onPress = () => {
+        share(content);
+        track({
+          eventName: 'Share',
+          properties: { id: content.id, title: content.title },
+        });
+      };
+      return (
+        <Touchable onPress={onPress}>
+          <Icon name={'share'} fill={theme.colors.secondary} />
+        </Touchable>
+      );
+    }}
+  </AnalyticsConsumer>
+));
+
+ShareContentButton.propTypes = {
+  content: PropTypes.shape({
+    title: PropTypes.string,
+    url: PropTypes.string,
+    id: PropTypes.string,
+  }),
+};
+
+export default ShareContentButton;
diff --git a/apolloschurchapp/src/ui/ShareContentButtonConnected/ShareContentButtonConnected.tests.js b/apolloschurchapp/src/ui/ShareContentButtonConnected/ShareContentButtonConnected.tests.js
new file mode 100644
index 0000000..46a3b2c
--- /dev/null
+++ b/apolloschurchapp/src/ui/ShareContentButtonConnected/ShareContentButtonConnected.tests.js
@@ -0,0 +1,50 @@
+import React from 'react';
+import Providers from 'apolloschurchapp/src/Providers';
+import { renderWithApolloData } from 'apolloschurchapp/src/utils/testUtils';
+import getShareContent from './getShareContent';
+import ShareContentButtonConnected from '.';
+
+const shareMock = {
+  request: {
+    query: getShareContent,
+    variables: { itemId: '1' },
+  },
+  result: {
+    data: {
+      node: {
+        id: '1',
+        __typename: 'ContentSeriesContentItem',
+        sharing: {
+          url: 'https://apolloschurchapp.newspring.cc',
+          title: 'Test Title ',
+          __typename: 'SharableContentItem',
+        },
+      },
+    },
+  },
+};
+
+const mocks = [shareMock];
+
+describe('the ShareContentButtonConnected', () => {
+  it('renders a share button', async () => {
+    const tree = await renderWithApolloData(
+      <Providers mocks={mocks}>
+        <ShareContentButtonConnected itemId={'1'} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('renders a share button with custom url, and title', async () => {
+    const tree = await renderWithApolloData(
+      <Providers mocks={mocks}>
+        <ShareContentButtonConnected
+          itemId={'1'}
+          url={'https://apollosrock.com'}
+          title="Some great title"
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/content-single/ActionContainer/getShareContent.js b/apolloschurchapp/src/ui/ShareContentButtonConnected/getShareContent.js
similarity index 100%
rename from apolloschurchapp/src/content-single/ActionContainer/getShareContent.js
rename to apolloschurchapp/src/ui/ShareContentButtonConnected/getShareContent.js
diff --git a/apolloschurchapp/src/ui/ShareContentButtonConnected/index.js b/apolloschurchapp/src/ui/ShareContentButtonConnected/index.js
new file mode 100644
index 0000000..95483b5
--- /dev/null
+++ b/apolloschurchapp/src/ui/ShareContentButtonConnected/index.js
@@ -0,0 +1,34 @@
+import React from 'react';
+
+import PropTypes from 'prop-types';
+import { Query } from 'react-apollo';
+import { get } from 'lodash';
+
+import ShareContentButton from 'apolloschurchapp/src/ui/ShareContentButton';
+
+import GET_SHARE_CONTENT from './getShareContent';
+
+const ShareContentButtonConnected = ({ itemId, title, message, url }) => (
+  <Query query={GET_SHARE_CONTENT} variables={{ itemId }}>
+    {({ data }) => {
+      const sharing = get(data, 'node.sharing', {});
+      const content = {
+        id: itemId,
+        title: title || sharing.title,
+        message: message || sharing.message,
+        url: url || sharing.url,
+      };
+      return <ShareContentButton content={content} />;
+    }}
+  </Query>
+);
+
+ShareContentButtonConnected.propTypes = {
+  itemId: PropTypes.string.isRequired,
+  // These props are available to override the default sharing data for a node.
+  title: PropTypes.string,
+  message: PropTypes.string,
+  url: PropTypes.string,
+};
+
+export default ShareContentButtonConnected;
diff --git a/apolloschurchapp/src/ui/UserAvatarView/AvatarForm.js b/apolloschurchapp/src/ui/UserAvatarView/AvatarForm.js
deleted file mode 100644
index 70dabc9..0000000
--- a/apolloschurchapp/src/ui/UserAvatarView/AvatarForm.js
+++ /dev/null
@@ -1,106 +0,0 @@
-import React, { PureComponent } from 'react';
-import { View } from 'react-native';
-import PropTypes from 'prop-types';
-import { get } from 'lodash';
-import { Query } from 'react-apollo';
-
-import {
-  Touchable,
-  ButtonLink,
-  Avatar,
-  withTheme,
-  H5,
-  styled,
-} from '@apollosproject/ui-kit';
-import getUserProfile from '../../tabs/connect/getUserProfile';
-import uploadPhoto from './uploadPhoto';
-
-const GetPhotoData = ({ children }) => (
-  <Query query={getUserProfile}>
-    {({ data: { currentUser = {} } = {} }) => {
-      const photo = get(currentUser, 'profile.photo');
-      return children({ photo });
-    }}
-  </Query>
-);
-
-GetPhotoData.propTypes = {
-  children: PropTypes.func.isRequired,
-};
-
-const StyledAvatar = withTheme(({ theme }) => ({
-  containerStyle: {
-    marginRight: 0,
-    marginBottom: theme.sizing.baseUnit / 2,
-  },
-}))(Avatar);
-
-const RoundTouchable = withTheme(({ theme, size }) => ({
-  borderRadius: get(theme.sizing.avatar, size, theme.sizing.avatar.small),
-}))(Touchable);
-
-const Wrapper = styled({
-  justifyContent: 'center',
-  alignItems: 'center',
-})(View);
-
-export default class AvatarForm extends PureComponent {
-  state = {
-    isUploadingFile: false,
-  };
-
-  componentWillUnmount() {
-    this.setState({ isUploadingFile: false });
-  }
-
-  handleUploadPhoto = async () => {
-    try {
-      await uploadPhoto({
-        onUpload: () => this.setState({ isUploadingFile: true }),
-      });
-      await this.props.refetch();
-      await this.setState({ isUploadingFile: false });
-    } catch (e) {
-      this.setState({ isUploadingFile: false });
-    }
-  };
-
-  render() {
-    const { isUploadingFile } = this.state;
-
-    return (
-      <Wrapper>
-        <RoundTouchable
-          disabled={this.props.disabled}
-          onPress={this.handleUploadPhoto}
-          size="medium"
-        >
-          <GetPhotoData>
-            {({ photo }) => (
-              <View>
-                <StyledAvatar
-                  source={photo}
-                  size="medium"
-                  isLoading={isUploadingFile}
-                />
-              </View>
-            )}
-          </GetPhotoData>
-        </RoundTouchable>
-        {this.props.text ? (
-          <H5>
-            <ButtonLink onPress={this.handleUploadPhoto}>
-              Change Photo
-            </ButtonLink>
-          </H5>
-        ) : null}
-      </Wrapper>
-    );
-  }
-}
-
-AvatarForm.propTypes = {
-  refetch: PropTypes.func.isRequired,
-  disabled: PropTypes.bool,
-  text: PropTypes.bool,
-};
diff --git a/apolloschurchapp/src/ui/UserAvatarView/UserAvatarView.stories.js b/apolloschurchapp/src/ui/UserAvatarView/UserAvatarView.stories.js
deleted file mode 100644
index 76cf42a..0000000
--- a/apolloschurchapp/src/ui/UserAvatarView/UserAvatarView.stories.js
+++ /dev/null
@@ -1,23 +0,0 @@
-import React from 'react';
-import { storiesOf } from '@storybook/react-native';
-
-import UserAvatarView from '.';
-
-storiesOf('UserAvatarView', module)
-  .add('example', () => (
-    <UserAvatarView
-      photo={'https://picsum.photos/400/400/?random'}
-      firstName={'Marty'}
-      lastName={'McFly'}
-      location={'Hill Valley'}
-    />
-  ))
-  .add('isLoading', () => (
-    <UserAvatarView
-      photo={'https://picsum.photos/400/400/?random'}
-      firstName={'Marty'}
-      lastName={'McFly'}
-      location={'Hill Valley'}
-      isLoading
-    />
-  ));
diff --git a/apolloschurchapp/src/ui/UserAvatarView/index.js b/apolloschurchapp/src/ui/UserAvatarView/index.js
deleted file mode 100644
index 4228878..0000000
--- a/apolloschurchapp/src/ui/UserAvatarView/index.js
+++ /dev/null
@@ -1,74 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-import { View } from 'react-native';
-
-import {
-  H3,
-  PaddedView,
-  ConnectedImage,
-  styled,
-  ChannelLabel,
-  withIsLoading,
-} from '@apollosproject/ui-kit';
-
-import AvatarForm from './AvatarForm';
-
-const Container = styled(({ theme }) => ({
-  backgroundColor: theme.colors.background.paper,
-  flexDirection: 'row',
-}))(View);
-
-const Content = styled(({ theme }) => ({
-  flex: 1,
-  justifyContent: 'center',
-  paddingVertical: theme.sizing.baseUnit * 0.5,
-}))(PaddedView);
-
-const UserAvatarView = withIsLoading(
-  ({
-    theme,
-    photo,
-    firstName,
-    lastName,
-    location,
-    isLoading,
-    refetch,
-    onPhotoPress,
-    setIsUploadingFile,
-    isUploadingFile,
-    disabled,
-    ...viewProps
-  }) => (
-    // todo: handle file select stuff
-    <Container {...viewProps}>
-      <AvatarForm
-        isLoading={isLoading}
-        text={false}
-        disabled={disabled}
-        photo={photo}
-        refetch={refetch}
-      />
-      <Content>
-        <H3>
-          {firstName} {lastName}
-        </H3>
-        <ChannelLabel icon="pin" label={location || ''} isLoading={isLoading} />
-      </Content>
-    </Container>
-  )
-);
-
-UserAvatarView.propTypes = {
-  photo: ConnectedImage.propTypes.source,
-  firstName: PropTypes.string,
-  lastName: PropTypes.string,
-  location: PropTypes.string,
-  isLoading: PropTypes.bool,
-  refetch: PropTypes.func,
-  onPhotoPress: PropTypes.func,
-  blurIntensity: PropTypes.number,
-  allowProfileImageChange: PropTypes.bool,
-  ...View.propTypes,
-};
-
-export default UserAvatarView;
diff --git a/apolloschurchapp/src/ui/WebBrowser/Browser.android.js b/apolloschurchapp/src/ui/WebBrowser/Browser.android.js
deleted file mode 100644
index 49dc211..0000000
--- a/apolloschurchapp/src/ui/WebBrowser/Browser.android.js
+++ /dev/null
@@ -1,15 +0,0 @@
-import { Linking } from 'react-native';
-import { CustomTabs } from 'react-native-custom-tabs';
-
-const Browser = {
-  openURL: async (url, options = {}) => {
-    try {
-      await CustomTabs.openURL(url, options);
-    } catch (e) {
-      if (!Linking.canOpenURL()) throw new Error('URL not supported');
-      Linking.openURL(url);
-    }
-  },
-};
-
-export default Browser;
diff --git a/apolloschurchapp/src/ui/WebBrowser/Browser.ios.js b/apolloschurchapp/src/ui/WebBrowser/Browser.ios.js
deleted file mode 100644
index 7de160f..0000000
--- a/apolloschurchapp/src/ui/WebBrowser/Browser.ios.js
+++ /dev/null
@@ -1,19 +0,0 @@
-import { Linking } from 'react-native';
-import SafariView from 'react-native-safari-view';
-
-const Browser = {
-  openURL: async (url, options) => {
-    try {
-      await SafariView.isAvailable();
-      SafariView.show({
-        url,
-        ...options,
-      });
-    } catch (e) {
-      if (!Linking.canOpenURL()) throw new Error('URL not supported');
-      Linking.openURL(url);
-    }
-  },
-};
-
-export default Browser;
diff --git a/apolloschurchapp/src/ui/WebBrowser/Browser.js b/apolloschurchapp/src/ui/WebBrowser/Browser.js
new file mode 100644
index 0000000..c6ddcb8
--- /dev/null
+++ b/apolloschurchapp/src/ui/WebBrowser/Browser.js
@@ -0,0 +1,45 @@
+import { Linking } from 'react-native';
+import InAppBrowser from 'react-native-inappbrowser-reborn';
+import gql from 'graphql-tag';
+import { client } from '../../client';
+
+export const GET_USER_COOKIE = gql`
+  query CurrentUserCookie {
+    currentUser {
+      id
+      rockToken
+    }
+  }
+`;
+
+export const getCookie = async () => {
+  const { data: { currentUser: { rockToken } = {} } = {} } = await client.query(
+    {
+      query: GET_USER_COOKIE,
+    }
+  );
+  return rockToken;
+};
+
+const Browser = {
+  open: async (url, options) => {
+    const cookie = await getCookie();
+    if (cookie)
+      console.warn(
+        "iOS doesn't support headers, you may want to use src/user-web-view"
+      );
+    const headers = { Cookie: cookie };
+    try {
+      if (await InAppBrowser.isAvailable()) {
+        InAppBrowser.open(url, {
+          headers,
+          ...options,
+        });
+      } else Linking.openURL(url);
+    } catch (e) {
+      console.error(e);
+    }
+  },
+};
+
+export default Browser;
diff --git a/apolloschurchapp/src/ui/WebBrowser/index.js b/apolloschurchapp/src/ui/WebBrowser/index.js
index bc93c02..9e85ea5 100644
--- a/apolloschurchapp/src/ui/WebBrowser/index.js
+++ b/apolloschurchapp/src/ui/WebBrowser/index.js
@@ -6,21 +6,33 @@ import { withTheme } from '@apollosproject/ui-kit';
 
 import Browser from './Browser';
 
-const { Provider: BaseProvider, Consumer } = createContext(Browser.openURL);
+const { Provider: BaseProvider, Consumer } = createContext(Browser.open);
 
+// NOTE: don't think this is working...
 const Provider = withTheme(({ theme }) => ({
-  value: (url, options = {}) =>
-    Browser.openURL(url, {
+  value: (url, headers = {}, options = {}) =>
+    Browser.open(url, {
       ...Platform.select({
         ios: {
-          tintColor: theme.colors.primary,
-          barTintColor: theme.colors.background.paper,
+          dismissButtonStyle: 'cancel',
+          preferredBarTintColor: theme.colors.background.paper,
+          preferredControlTintColor: theme.colors.primary,
+          readerMode: false,
+          animated: true,
+          modalPresentationStyle: 'overFullScreen',
+          modalTransitionStyle: 'partialCurl',
+          modalEnabled: true,
         },
         android: {
           toolbarColor: theme.colors.background.paper,
           enableDefaultShare: true,
+          showTitle: true,
+          secondaryToolbarColor: 'black',
+          enableUrlBarHiding: true,
+          forceCloseOnRedirection: false,
         },
       }),
+      headers: { ...headers },
       ...options,
     }),
 }))(BaseProvider);
diff --git a/apolloschurchapp/src/ui/WebBrowser/index.tests.js b/apolloschurchapp/src/ui/WebBrowser/index.tests.js
index aa74598..88eb48f 100644
--- a/apolloschurchapp/src/ui/WebBrowser/index.tests.js
+++ b/apolloschurchapp/src/ui/WebBrowser/index.tests.js
@@ -1,11 +1,13 @@
 import React from 'react';
 import renderer from 'react-test-renderer';
-// TODO: how to include test for Android?
+import { Platform } from 'react-native';
 
 import Providers from 'apolloschurchapp/src/Providers';
 
 import { WebBrowserConsumer } from '.';
 
+jest.mock('Platform');
+
 describe(`WebBrowser Provider and Consumer`, () => {
   it('passes a function', async () => {
     renderer.create(
@@ -18,4 +20,16 @@ describe(`WebBrowser Provider and Consumer`, () => {
       </Providers>
     );
   });
+  it('passes a function (Android)', async () => {
+    Platform.OS = 'android';
+    renderer.create(
+      <Providers>
+        <WebBrowserConsumer>
+          {(openUrl) => {
+            expect(typeof openUrl).toBe('function');
+          }}
+        </WebBrowserConsumer>
+      </Providers>
+    );
+  });
 });
diff --git a/apolloschurchapp/src/user-settings/ChangeAvatar.js b/apolloschurchapp/src/user-settings/ChangeAvatar.js
new file mode 100644
index 0000000..ccadf1b
--- /dev/null
+++ b/apolloschurchapp/src/user-settings/ChangeAvatar.js
@@ -0,0 +1,76 @@
+import React, { PureComponent } from 'react';
+import { View } from 'react-native';
+import PropTypes from 'prop-types';
+import { get } from 'lodash';
+import { Query, ApolloConsumer } from 'react-apollo';
+
+import { PaddedView, Avatar, styled } from '@apollosproject/ui-kit';
+import GET_USER_PHOTO from './getUserPhoto';
+import uploadPhoto from './uploadPhoto';
+
+const GetPhotoData = ({ children }) => (
+  <Query query={GET_USER_PHOTO}>
+    {({ data: { currentUser = {} } = {} }) => {
+      const photo = get(currentUser, 'profile.photo');
+      return children({ photo });
+    }}
+  </Query>
+);
+
+GetPhotoData.propTypes = {
+  children: PropTypes.func.isRequired,
+};
+
+const Wrapper = styled({
+  justifyContent: 'center',
+  alignItems: 'center',
+})(View);
+
+export default class AvatarForm extends PureComponent {
+  state = {
+    isUploadingFile: false,
+  };
+
+  componentWillUnmount() {
+    this.setState({ isUploadingFile: false });
+  }
+
+  handleUploadPhoto = async ({ client }) => {
+    try {
+      await uploadPhoto({
+        client,
+        onUpload: () => this.setState({ isUploadingFile: true }),
+      });
+      await this.setState({ isUploadingFile: false });
+    } catch (e) {
+      console.warn(e);
+      this.setState({ isUploadingFile: false });
+    }
+  };
+
+  render() {
+    const { isUploadingFile } = this.state;
+
+    return (
+      <ApolloConsumer>
+        {(client) => (
+          <Wrapper>
+            <GetPhotoData>
+              {({ photo }) => (
+                <PaddedView horizontal={false}>
+                  <Avatar
+                    source={photo}
+                    size="large"
+                    buttonIcon="camera"
+                    onPressIcon={() => this.handleUploadPhoto({ client })}
+                    isLoading={isUploadingFile}
+                  />
+                </PaddedView>
+              )}
+            </GetPhotoData>
+          </Wrapper>
+        )}
+      </ApolloConsumer>
+    );
+  }
+}
diff --git a/apolloschurchapp/src/user-settings/ChangePassword.js b/apolloschurchapp/src/user-settings/ChangePassword.js
index 4b5bdf3..b8683fc 100644
--- a/apolloschurchapp/src/user-settings/ChangePassword.js
+++ b/apolloschurchapp/src/user-settings/ChangePassword.js
@@ -1,22 +1,32 @@
 import React, { PureComponent } from 'react';
 import PropTypes from 'prop-types';
-import { SafeAreaView } from 'react-native';
+import {
+  Platform,
+  KeyboardAvoidingView,
+  StyleSheet,
+  StatusBar,
+} from 'react-native';
 import { Mutation } from 'react-apollo';
+import { SafeAreaView, Header } from 'react-navigation';
 import { Formik } from 'formik';
 import * as Yup from 'yup';
 
-import { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';
 import {
   Button,
   ButtonLink,
   TextInput,
-  BackgroundView,
   PaddedView,
   FlexedView,
+  styled,
 } from '@apollosproject/ui-kit';
 
-import getAuthToken from '../store/getAuthToken';
-import changePassword from './passwordChange';
+import GET_AUTH_TOKEN from '../store/getAuthToken';
+import CHANGE_PASSWORD from './passwordChange';
+
+const Footer = styled({
+  flex: 1,
+  justifyContent: 'flex-end',
+})(SafeAreaView);
 
 class ChangePassword extends PureComponent {
   static navigationOptions = ({ navigation }) => ({
@@ -38,52 +48,56 @@ class ChangePassword extends PureComponent {
   };
 
   renderForm = (props) => (
-    <FlexedView>
-      <KeyboardAwareScrollView>
-        <BackgroundView>
-          <PaddedView>
-            <TextInput
-              label="New Password"
-              type="password"
-              value={props.values.password}
-              error={props.touched.password && props.errors.password}
-              onChangeText={(text) => props.setFieldValue('password', text)}
-            />
-            <TextInput
-              label="Confirm Password"
-              type="password"
-              value={props.values.confirmPassword}
-              error={
-                props.touched.confirmPassword && props.errors.confirmPassword
-              }
-              onChangeText={(text) =>
-                props.setFieldValue('confirmPassword', text)
-              }
-            />
-          </PaddedView>
-        </BackgroundView>
-      </KeyboardAwareScrollView>
-
-      <SafeAreaView>
+    <KeyboardAvoidingView
+      behavior={'padding'}
+      style={StyleSheet.absoluteFill}
+      keyboardVerticalOffset={
+        Header.HEIGHT +
+        (Platform.OS === 'android' ? StatusBar.currentHeight : 0)
+      }
+    >
+      <FlexedView>
         <PaddedView>
-          <Button
-            disabled={!props.isValid || props.isSubmitting}
-            onPress={props.handleSubmit}
-            title="Save"
-            loading={props.isSubmitting}
+          <TextInput
+            label="New Password"
+            type="password"
+            value={props.values.password}
+            error={props.touched.password && props.errors.password}
+            onChangeText={(text) => props.setFieldValue('password', text)}
+          />
+          <TextInput
+            label="Confirm Password"
+            type="password"
+            value={props.values.confirmPassword}
+            error={
+              props.touched.confirmPassword && props.errors.confirmPassword
+            }
+            onChangeText={(text) =>
+              props.setFieldValue('confirmPassword', text)
+            }
           />
         </PaddedView>
-      </SafeAreaView>
-    </FlexedView>
+        <Footer>
+          <PaddedView>
+            <Button
+              disabled={props.isSubmitting}
+              onPress={props.handleSubmit}
+              title="Save"
+              loading={props.isSubmitting}
+            />
+          </PaddedView>
+        </Footer>
+      </FlexedView>
+    </KeyboardAvoidingView>
   );
 
   render() {
     return (
       <Mutation
-        mutation={changePassword}
+        mutation={CHANGE_PASSWORD}
         update={async (cache, { data: { token } }) => {
           await cache.writeQuery({
-            query: getAuthToken,
+            query: GET_AUTH_TOKEN,
             data: { authToken: token },
           });
 
diff --git a/apolloschurchapp/src/user-settings/Locations/Locations.tests.js b/apolloschurchapp/src/user-settings/Locations/Locations.tests.js
new file mode 100644
index 0000000..9e131ae
--- /dev/null
+++ b/apolloschurchapp/src/user-settings/Locations/Locations.tests.js
@@ -0,0 +1,124 @@
+import React from 'react';
+import { renderWithApolloData } from 'apolloschurchapp/src/utils/testUtils';
+
+import Providers from 'apolloschurchapp/src/Providers';
+import GET_CAMPUS_LOCATIONS from './getCampusLocations';
+import Location from './index';
+
+const campuses = [
+  {
+    __typename: 'Campus',
+    id: 'Campus:559b23fd0aa90e81b1c023e72e230fa1',
+    latitude: 34.59814,
+    longitude: -82.62045,
+    name: 'Anderson Campus',
+    street1: '2940 Concord Rd',
+    street2: '',
+    city: 'Anderson',
+    state: 'SC',
+    distanceFromLocation: 5,
+    postalCode: '29621-3619',
+    image: {
+      __typename: 'ImageMediaSource',
+      uri:
+        'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3Da47e8e69-9542-42de-9ed3-ff42fdc82417',
+    },
+  },
+  {
+    __typename: 'Campus',
+    id: 'Campus:965b6e6d7046a885bea4e300b5c0400d',
+    latitude: 32.95103,
+    longitude: -96.74738,
+    name: 'Dallas Campus',
+    street1: '102 N Weatherred Dr',
+    street2: '',
+    city: 'Richardson',
+    state: 'TX',
+    postalCode: '75080-5525',
+    distanceFromLocation: 50,
+    image: {
+      __typename: 'ImageMediaSource',
+      uri:
+        'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D5f9fd97a-fd6e-4ae5-ab5d-a9b95290d9b6',
+    },
+  },
+  {
+    __typename: 'Campus',
+    id: 'Campus:4f68015ba18662a7409d1219a4ce013e',
+    latitude: 39.10501,
+    longitude: -84.51138,
+    name: 'Cincinnati Campus',
+    street1: '120 E 8th St',
+    street2: '',
+    city: 'Cincinnati',
+    state: 'OH',
+    postalCode: '45202-2118',
+    distanceFromLocation: 500,
+    image: {
+      __typename: 'ImageMediaSource',
+      uri:
+        'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3Dbad9eb54-3e78-44a7-a028-3f2d6e71a36f',
+    },
+  },
+  {
+    __typename: 'Campus',
+    id: 'Campus:a0f64573eabf00a607bec911794d50fb',
+    latitude: 42.09203,
+    longitude: -88.13289,
+    name: 'Chicago Campus',
+    street1: '67 Algonquin Rd',
+    street2: '',
+    city: 'South Barrington',
+    state: 'IL',
+    postalCode: '60010-6143',
+    distanceFromLocation: 5000,
+    image: {
+      __typename: 'ImageMediaSource',
+      uri:
+        'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3Dede1fb83-968e-4bef-8d77-ad81c96e8a47',
+    },
+  },
+];
+
+describe('Display Native Map with Locations', () => {
+  const initialRegion = {
+    // roughly show the entire USA by default
+    latitude: 39.809734,
+    longitude: -98.555618,
+    latitudeDelta: 100,
+    longitudeDelta: 10,
+  };
+  const userLocation = {
+    latitude: 39.104797,
+    longitude: -84.511959,
+  };
+  it('Render a native map view', async () => {
+    const navigation = {
+      navigate: jest.fn(),
+      getParam: jest.fn(),
+      goBack: jest.fn(),
+    };
+
+    const mock = {
+      request: {
+        query: GET_CAMPUS_LOCATIONS,
+        variables: {
+          latitude: userLocation.latitude,
+          longitude: userLocation.longitude,
+        },
+      },
+      result: {
+        data: {
+          campuses,
+        },
+      },
+    };
+
+    const tree = await renderWithApolloData(
+      <Providers mocks={[mock]}>
+        <Location navigation={navigation} initialRegion={initialRegion} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/user-settings/Locations/MapView.js b/apolloschurchapp/src/user-settings/Locations/MapView.js
new file mode 100644
index 0000000..9478cf7
--- /dev/null
+++ b/apolloschurchapp/src/user-settings/Locations/MapView.js
@@ -0,0 +1,208 @@
+import React, { Component } from 'react';
+import PropTypes from 'prop-types';
+import { Animated, Dimensions, Platform, PixelRatio } from 'react-native';
+import { SafeAreaView } from 'react-navigation';
+import RNMapView from 'react-native-maps';
+import { debounce } from 'lodash';
+
+import {
+  Button,
+  PaddedView,
+  FlexedView,
+  styled,
+  withTheme,
+  CampusCard,
+} from '@apollosproject/ui-kit';
+
+import Marker from './Marker';
+
+const getCampusAddress = (campus) =>
+  `${campus.street1}\n${campus.city}, ${campus.state} ${campus.postalCode}`;
+
+/* TODO: remove magic number. `theme.sizing.baseUnit * 2.25` This width value is a brittle
+ * calculation of width minus `CampusCard` margins */
+const CARD_WIDTH = Dimensions.get('window').width - 36;
+
+const FlexedMapView = styled({ flex: 1 })(({ mapRef, ...props }) => (
+  <RNMapView ref={mapRef} {...props} />
+));
+
+const Footer = styled({
+  position: 'absolute',
+  bottom: 0,
+  left: 0,
+  right: 0,
+})(SafeAreaView);
+
+const StyledCampusCard = styled(({ theme }) => ({
+  width: CARD_WIDTH,
+  marginHorizontal: theme.sizing.baseUnit / 4,
+}))(CampusCard);
+
+class MapView extends Component {
+  static propTypes = {
+    campuses: PropTypes.arrayOf(
+      PropTypes.shape({
+        latitude: PropTypes.number.isRequired,
+        longitude: PropTypes.number.isRequired,
+      })
+    ),
+    onLocationSelect: PropTypes.func.isRequired,
+    initialRegion: PropTypes.shape({
+      latitude: PropTypes.number.isRequired,
+      longitude: PropTypes.number.isRequired,
+      latitudeDelta: PropTypes.number,
+      longitudeDelta: PropTypes.number,
+    }).isRequired,
+    userLocation: PropTypes.shape({
+      latitude: PropTypes.number.isRequired,
+      longitude: PropTypes.number.isRequired,
+    }),
+    theme: PropTypes.shape({
+      sizing: PropTypes.shape({
+        baseUnit: PropTypes.number,
+      }),
+    }),
+    navigation: PropTypes.shape({
+      goBack: PropTypes.func,
+    }),
+  };
+
+  animation = new Animated.Value(0);
+
+  componentDidMount() {
+    this.animation.addListener(debounce(this.updateCoordinates));
+  }
+
+  componentDidUpdate(oldProps) {
+    if (oldProps.userLocation !== this.props.userLocation) {
+      this.updateCoordinates({ value: this.previousScrollPosition });
+    }
+  }
+
+  get currentCampus() {
+    const cardIndex = Math.floor(
+      this.previousScrollPosition / CARD_WIDTH + 0.3
+    ); // animate 30% away from landing on the next item;
+    return this.props.campuses[cardIndex];
+  }
+
+  updateCoordinates = ({ value }) => {
+    this.previousScrollPosition = value;
+
+    const { userLocation, campuses } = this.props;
+    // campus card height + some padding
+
+    const bottomPadding = 100 + this.props.theme.sizing.baseUnit * 12;
+    const edgePadding = {
+      top: 100,
+      left: 100,
+      right: 100,
+      bottom:
+        Platform.OS === 'android'
+          ? // NOTE: android bug
+            // https://github.com/react-native-community/react-native-maps/issues/2543
+            PixelRatio.getPixelSizeForLayoutSize(bottomPadding)
+          : bottomPadding,
+    };
+
+    const visibleCampuses = [
+      userLocation,
+      ...(this.currentCampus ? [this.currentCampus] : campuses),
+    ];
+
+    this.map.fitToCoordinates(visibleCampuses, {
+      edgePadding,
+    });
+  };
+
+  render() {
+    const { campuses = [], onLocationSelect } = this.props;
+    const interpolations = campuses.map((marker, index) => {
+      const inputRange = [
+        (index - 1) * CARD_WIDTH,
+        index * CARD_WIDTH,
+        (index + 1) * CARD_WIDTH,
+      ];
+      const opacity = this.animation.interpolate({
+        inputRange,
+        outputRange: [0.35, 1, 0.35],
+        extrapolate: 'clamp',
+      });
+      return { opacity };
+    });
+
+    return (
+      <FlexedView>
+        <FlexedMapView
+          initialRegion={this.props.initialRegion}
+          showsUserLocation
+          mapRef={(map) => {
+            this.map = map;
+          }}
+        >
+          {campuses.map((campus, index) => {
+            const campusOpacity = {
+              opacity: interpolations[index].opacity,
+            };
+            return (
+              <Marker
+                key={campus.id}
+                opacityStyle={campusOpacity}
+                latitude={campus.latitude}
+                longitude={campus.longitude}
+              />
+            );
+          })}
+        </FlexedMapView>
+        <Footer>
+          <Animated.ScrollView
+            horizontal
+            showsHorizontalScrollIndicator={false}
+            snapToInterval={CARD_WIDTH + 8} // account for padding
+            snapToAlignment={'start'}
+            decelerationRate={'fast'}
+            contentContainerStyle={{
+              paddingHorizontal: this.props.theme.sizing.baseUnit * 0.75,
+            }}
+            scrollEventThrottle={16} // roughtly 1000ms/60fps = 16ms
+            onScroll={Animated.event(
+              [
+                {
+                  nativeEvent: {
+                    contentOffset: {
+                      x: this.animation,
+                    },
+                  },
+                },
+              ],
+              { useNativeDriver: true }
+            )}
+          >
+            {campuses.map((campus) => (
+              <StyledCampusCard
+                key={campus.id}
+                distance={campus.distanceFromLocation}
+                title={campus.name}
+                description={getCampusAddress(campus)}
+                images={[campus.image]}
+              />
+            ))}
+          </Animated.ScrollView>
+          <PaddedView>
+            <Button
+              title="Select Campus"
+              pill={false}
+              type="secondary"
+              onPress={() =>
+                onLocationSelect(this.currentCampus || campuses[0])
+              }
+            />
+          </PaddedView>
+        </Footer>
+      </FlexedView>
+    );
+  }
+}
+
+export default withTheme()(MapView);
diff --git a/apolloschurchapp/src/user-settings/Locations/Marker.js b/apolloschurchapp/src/user-settings/Locations/Marker.js
new file mode 100644
index 0000000..0c98fa9
--- /dev/null
+++ b/apolloschurchapp/src/user-settings/Locations/Marker.js
@@ -0,0 +1,46 @@
+import React, { memo } from 'react';
+import { View, Animated } from 'react-native';
+import PropTypes from 'prop-types';
+import { Marker } from 'react-native-maps';
+import Color from 'color';
+
+import { styled } from '@apollosproject/ui-kit';
+
+const MarkerView = styled(({ theme }) => ({
+  width: 8,
+  height: 8,
+  borderRadius: 4,
+  backgroundColor: Color(theme.colors.primary).fade(theme.alpha.medium),
+  zIndex: 2,
+}))(View);
+
+const MarkerRingView = styled(({ theme }) => ({
+  width: 24,
+  height: 24,
+  borderRadius: 12,
+  backgroundColor: Color(theme.colors.primary).fade(theme.alpha.low),
+  borderWidth: 1,
+  borderColor: Color(theme.colors.primary).fade(theme.alpha.medium),
+  alignItems: 'center',
+  justifyContent: 'center',
+}))(View);
+
+const StyledMarker = memo(({ latitude, longitude, opacityStyle }) => (
+  <Marker coordinate={{ latitude, longitude }}>
+    <Animated.View style={opacityStyle}>
+      <MarkerRingView>
+        <MarkerView />
+      </MarkerRingView>
+    </Animated.View>
+  </Marker>
+));
+
+StyledMarker.displayName = 'StyledMarker';
+
+StyledMarker.propTypes = {
+  latitude: PropTypes.number.isRequired,
+  longitude: PropTypes.number.isRequired,
+  opacityStyle: PropTypes.shape({}),
+};
+
+export default StyledMarker;
diff --git a/apolloschurchapp/src/user-settings/Locations/campusChange.js b/apolloschurchapp/src/user-settings/Locations/campusChange.js
new file mode 100644
index 0000000..e164b7b
--- /dev/null
+++ b/apolloschurchapp/src/user-settings/Locations/campusChange.js
@@ -0,0 +1,14 @@
+import gql from 'graphql-tag';
+import CampusFragment from './campusFragment';
+
+export default gql`
+  mutation campusChange($campusId: String!) {
+    updateUserCampus(campusId: $campusId) {
+      id
+      campus {
+        ...CampusParts
+      }
+    }
+  }
+  ${CampusFragment}
+`;
diff --git a/apolloschurchapp/src/user-settings/Locations/campusFragment.js b/apolloschurchapp/src/user-settings/Locations/campusFragment.js
new file mode 100644
index 0000000..777cce5
--- /dev/null
+++ b/apolloschurchapp/src/user-settings/Locations/campusFragment.js
@@ -0,0 +1,19 @@
+import gql from 'graphql-tag';
+
+export default gql`
+  fragment CampusParts on Campus {
+    id
+    name
+    latitude
+    longitude
+    distanceFromLocation
+    street1
+    street2
+    city
+    state
+    postalCode
+    image {
+      uri
+    }
+  }
+`;
diff --git a/apolloschurchapp/src/user-settings/Locations/getCampusLocations.js b/apolloschurchapp/src/user-settings/Locations/getCampusLocations.js
new file mode 100644
index 0000000..1c98bb8
--- /dev/null
+++ b/apolloschurchapp/src/user-settings/Locations/getCampusLocations.js
@@ -0,0 +1,11 @@
+import gql from 'graphql-tag';
+import CampusFragment from './campusFragment';
+
+export default gql`
+  query getAllCampuses($latitude: Float!, $longitude: Float!) {
+    campuses(location: { latitude: $latitude, longitude: $longitude }) {
+      ...CampusParts
+    }
+  }
+  ${CampusFragment}
+`;
diff --git a/apolloschurchapp/src/user-settings/Locations/index.js b/apolloschurchapp/src/user-settings/Locations/index.js
new file mode 100644
index 0000000..c730500
--- /dev/null
+++ b/apolloschurchapp/src/user-settings/Locations/index.js
@@ -0,0 +1,108 @@
+import React, { PureComponent } from 'react';
+import PropTypes from 'prop-types';
+import { Query, Mutation } from 'react-apollo';
+import { Dimensions } from 'react-native';
+import Geolocation from 'react-native-geolocation-service';
+import { PaddedView, ButtonLink } from '@apollosproject/ui-kit';
+
+import GET_CAMPUSES from './getCampusLocations';
+import CHANGE_CAMPUS from './campusChange';
+import MapView from './MapView';
+
+class Location extends PureComponent {
+  static propTypes = {
+    navigation: PropTypes.shape({
+      getParam: PropTypes.func,
+      navigate: PropTypes.func,
+      goBack: PropTypes.func,
+    }),
+    initialRegion: PropTypes.shape({
+      latitude: PropTypes.number,
+      longitude: PropTypes.number,
+      latitudeDelta: PropTypes.number,
+      longitudeDelta: PropTypes.number,
+    }),
+  };
+
+  static defaultProps = {
+    initialRegion: {
+      // roughly show the entire USA by default
+      latitude: 39.809734,
+      longitude: -98.555618,
+      latitudeDelta: 100,
+      longitudeDelta:
+        (100 * Dimensions.get('window').width) /
+        Dimensions.get('window').height,
+    },
+  };
+
+  static navigationOptions = ({ navigation }) => ({
+    title: 'Location',
+    headerLeft: null,
+    headerRight: (
+      <PaddedView vertical={false}>
+        <ButtonLink onPress={() => navigation.goBack()}>Back</ButtonLink>
+      </PaddedView>
+    ),
+  });
+
+  state = {
+    userLocation: {
+      latitude: 39.104797,
+      longitude: -84.511959,
+    },
+  };
+
+  async componentDidMount() {
+    Geolocation.getCurrentPosition(
+      (position) => {
+        this.setState({
+          userLocation: {
+            latitude: position.coords.latitude,
+            longitude: position.coords.longitude,
+          },
+        });
+      },
+      () => null,
+      { enableHighAccuracy: true, timeout: 15000, maximumAge: 10000 }
+    );
+  }
+
+  render() {
+    return (
+      <Query
+        query={GET_CAMPUSES}
+        variables={{
+          latitude: this.state.userLocation.latitude,
+          longitude: this.state.userLocation.longitude,
+        }}
+        fetchPolicy="cache-and-network"
+      >
+        {({ loading, error, data: { campuses = [] } = {} }) => (
+          <Mutation mutation={CHANGE_CAMPUS}>
+            {(handlePress) => (
+              <MapView
+                navigation={this.props.navigation}
+                isLoading={loading}
+                error={error}
+                campuses={campuses}
+                initialRegion={this.props.initialRegion}
+                userLocation={this.state.userLocation}
+                onLocationSelect={async ({ id }) => {
+                  await handlePress({
+                    variables: {
+                      campusId: id,
+                    },
+                  });
+                  this.props.navigation.goBack();
+                }}
+              />
+            )}
+          </Mutation>
+        )}
+      </Query>
+    );
+  }
+}
+
+export default Location;
diff --git a/apolloschurchapp/src/user-settings/PersonDetails.tests.js b/apolloschurchapp/src/user-settings/PersonDetails.tests.js
index b55f57e..ef8d662 100644
--- a/apolloschurchapp/src/user-settings/PersonDetails.tests.js
+++ b/apolloschurchapp/src/user-settings/PersonDetails.tests.js
@@ -1,26 +1,33 @@
 import React from 'react';
-import renderer from 'react-test-renderer';
-import wait from 'waait';
 
 import Providers from 'apolloschurchapp/src/Providers';
 
-import getUserProfile from '../tabs/connect/getUserProfile';
+import GET_USER_PROFILE from '../tabs/connect/getUserProfile';
+import { renderWithApolloData } from '../utils/testUtils';
 import PersonalDetails from './PersonalDetails';
 
 describe('PersonalDetails component', () => {
   it('renders PersonalDetails when logged in', async () => {
     const mock = {
       request: {
-        query: getUserProfile,
+        query: GET_USER_PROFILE,
       },
       result: {
         data: {
           currentUser: {
+            __typename: 'AuthenticatedUser',
+            id: 'AuthenticatedUser:123',
             profile: {
+              __typename: 'Person',
+              id: 'Profile:123',
               firstName: 'Isaac',
               lastName: 'Hardy',
               nickName: 'Ike',
               email: 'isaac.hardy@newspring.cc',
+              birthDate: '2019-09-12T21:01:06.026Z',
+              gender: 'Male',
+              campus: null,
+              photo: null,
             },
           },
         },
@@ -31,12 +38,12 @@ describe('PersonalDetails component', () => {
       getParam: jest.fn(),
       goBack: jest.fn(),
     };
-    const tree = renderer.create(
+    const tree = await renderWithApolloData(
       <Providers mocks={[mock]}>
         <PersonalDetails navigation={navigation} />
       </Providers>
     );
-    await wait(0); // wait for response from graphql
+
     expect(tree).toMatchSnapshot();
   });
 });
diff --git a/apolloschurchapp/src/user-settings/PersonalDetails.js b/apolloschurchapp/src/user-settings/PersonalDetails.js
index 71d7631..9404206 100644
--- a/apolloschurchapp/src/user-settings/PersonalDetails.js
+++ b/apolloschurchapp/src/user-settings/PersonalDetails.js
@@ -1,10 +1,15 @@
 import React, { PureComponent } from 'react';
 import PropTypes from 'prop-types';
-import { SafeAreaView } from 'react-native';
+import {
+  KeyboardAvoidingView,
+  StyleSheet,
+  StatusBar,
+  Platform,
+} from 'react-native';
+import { SafeAreaView, Header } from 'react-navigation';
 import { Query, Mutation } from 'react-apollo';
 import { Formik } from 'formik';
 import * as Yup from 'yup';
-import { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';
 
 import {
   TextInput,
@@ -12,11 +17,16 @@ import {
   FlexedView,
   Button,
   ButtonLink,
-  TableView,
+  styled,
 } from '@apollosproject/ui-kit';
 
-import getUserProfile from '../tabs/connect/getUserProfile';
-import updateCurrentUser from './updateCurrentUser';
+import GET_USER_PROFILE from '../tabs/connect/getUserProfile';
+import UPDATE_CURRENT_USER from './updateCurrentUser';
+
+const Footer = styled({
+  flex: 1,
+  justifyContent: 'flex-end',
+})(SafeAreaView);
 
 class PersonalDetails extends PureComponent {
   static navigationOptions = ({ navigation }) => ({
@@ -38,63 +48,65 @@ class PersonalDetails extends PureComponent {
   };
 
   renderForm = (props) => (
-    <FlexedView>
-      <KeyboardAwareScrollView>
-        <TableView>
-          <PaddedView>
-            <TextInput
-              label="First Name"
-              type="text"
-              value={props.values.firstName}
-              error={props.touched.firstName && props.errors.firstName}
-              onChangeText={(text) => props.setFieldValue('firstName', text)}
-            />
-            <TextInput
-              label="Last Name"
-              type="text"
-              value={props.values.lastName}
-              error={props.touched.lastName && props.errors.lastName}
-              onChangeText={(text) => props.setFieldValue('lastName', text)}
-            />
-          </PaddedView>
-        </TableView>
-        <TableView>
-          <PaddedView>
-            <TextInput
-              label="Email"
-              type="email"
-              value={props.values.email}
-              error={props.touched.email && props.errors.email}
-              onChangeText={(text) => props.setFieldValue('email', text)}
-            />
-          </PaddedView>
-        </TableView>
-      </KeyboardAwareScrollView>
-      <SafeAreaView>
+    // have to add the offset to account for react-navigation header
+    <KeyboardAvoidingView
+      behavior={'padding'}
+      style={StyleSheet.absoluteFill}
+      keyboardVerticalOffset={
+        Header.HEIGHT +
+        (Platform.OS === 'android' ? StatusBar.currentHeight : 0)
+      }
+    >
+      <FlexedView>
         <PaddedView>
-          <Button
-            disabled={!props.isValid || props.isSubmitting}
-            onPress={props.handleSubmit}
-            title="Save"
-            loading={props.isSubmitting}
+          <TextInput
+            label="First Name"
+            type="text"
+            value={props.values.firstName}
+            error={props.touched.firstName && props.errors.firstName}
+            onChangeText={(text) => props.setFieldValue('firstName', text)}
+          />
+          <TextInput
+            label="Last Name"
+            type="text"
+            value={props.values.lastName}
+            error={props.touched.lastName && props.errors.lastName}
+            onChangeText={(text) => props.setFieldValue('lastName', text)}
+          />
+          <TextInput
+            label="Email"
+            type="email"
+            value={props.values.email}
+            error={props.touched.email && props.errors.email}
+            onChangeText={(text) => props.setFieldValue('email', text)}
           />
         </PaddedView>
-      </SafeAreaView>
-    </FlexedView>
+        <Footer>
+          <PaddedView>
+            <Button
+              disabled={!props.isValid || props.isSubmitting}
+              onPress={props.handleSubmit}
+              title="Save"
+              loading={props.isSubmitting}
+            />
+          </PaddedView>
+        </Footer>
+      </FlexedView>
+    </KeyboardAvoidingView>
   );
 
   render() {
     return (
-      <Query query={getUserProfile} fetchPolicy="cache-and-network">
+      <Query query={GET_USER_PROFILE} fetchPolicy="cache-and-network">
         {({ data: { currentUser = { profile: {} } } = {} }) => {
           const { firstName, lastName, email } = currentUser.profile;
 
           return (
             <Mutation
-              mutation={updateCurrentUser}
+              mutation={UPDATE_CURRENT_USER}
               update={async (cache, { data: { updateProfileFields } }) => {
                 await cache.writeQuery({
-                  query: getUserProfile,
+                  query: GET_USER_PROFILE,
                   data: {
                     currentUser: {
                       ...currentUser,
diff --git a/apolloschurchapp/src/user-settings/UserSettings.tests.js b/apolloschurchapp/src/user-settings/UserSettings.tests.js
index 5cb5377..9a1f3d3 100644
--- a/apolloschurchapp/src/user-settings/UserSettings.tests.js
+++ b/apolloschurchapp/src/user-settings/UserSettings.tests.js
@@ -4,14 +4,14 @@ import wait from 'waait';
 
 import Providers from 'apolloschurchapp/src/Providers';
 
-import getLoginState from '../tabs/connect/getLoginState';
+import GET_LOGIN_STATE from '../tabs/connect/getLoginState';
 import UserSettings from '.';
 
 describe('UserSettings component', () => {
   it('renders UserSettings when logged in', async () => {
     const mock = {
       request: {
-        query: getLoginState,
+        query: GET_LOGIN_STATE,
       },
       result: {
         data: { isLoggedIn: true },
diff --git a/apolloschurchapp/src/user-settings/getUserPhoto.js b/apolloschurchapp/src/user-settings/getUserPhoto.js
new file mode 100644
index 0000000..9d48a44
--- /dev/null
+++ b/apolloschurchapp/src/user-settings/getUserPhoto.js
@@ -0,0 +1,17 @@
+import gql from 'graphql-tag';
+import CampusParts from 'apolloschurchapp/src/user-settings/Locations/campusFragment';
+
+export default gql`
+  query getCurrentUserProfile {
+    currentUser {
+      id
+      profile {
+        id
+        photo {
+          uri
+        }
+      }
+    }
+  }
+  ${CampusParts}
+`;
diff --git a/apolloschurchapp/src/user-settings/index.js b/apolloschurchapp/src/user-settings/index.js
index 6d26048..491b707 100644
--- a/apolloschurchapp/src/user-settings/index.js
+++ b/apolloschurchapp/src/user-settings/index.js
@@ -1,34 +1,23 @@
 import React, { PureComponent } from 'react';
-
+import { ScrollView } from 'react-native';
+import { StackActions, NavigationActions } from 'react-navigation';
 import PropTypes from 'prop-types';
 import { Query, Mutation } from 'react-apollo';
 
 import {
   BackgroundView,
-  PaddedView,
   TableView,
   Cell,
   CellIcon,
   CellText,
   Divider,
   Touchable,
-  styled,
   ActivityIndicator,
 } from '@apollosproject/ui-kit';
 import { WebBrowserConsumer } from 'apolloschurchapp/src/ui/WebBrowser';
-import AvatarForm from 'apolloschurchapp/src/ui/UserAvatarView/AvatarForm';
-
-import getLoginState from '../auth/getLoginState';
-import logout from '../auth/logout';
 
-const AvatarView = styled({
-  alignItems: 'center',
-  justifyContent: 'center',
-})(PaddedView);
-
-const BackgroundContainer = styled(({ theme }) => ({
-  paddingTop: theme.sizing.baseUnit * 1.75,
-}))(BackgroundView);
+import { GET_LOGIN_STATE, LOGOUT } from '@apollosproject/ui-auth';
+import ChangeAvatar from './ChangeAvatar';
 
 class UserSettings extends PureComponent {
   static navigationOptions = () => ({
@@ -44,104 +33,129 @@ class UserSettings extends PureComponent {
 
   render() {
     return (
-      <Query query={getLoginState} fetchPolicy="cache-and-network">
+      <Query query={GET_LOGIN_STATE} fetchPolicy="cache-and-network">
         {({ data: { isLoggedIn = false, loading } }) => {
           if (loading) return <ActivityIndicator />;
           if (!isLoggedIn) return null;
           return (
-            <BackgroundContainer>
-              <AvatarView>
-                <AvatarForm
-                  text
-                  refetch={this.props.navigation.getParam('refetch', {})}
-                />
-              </AvatarView>
-              <WebBrowserConsumer>
-                {(openUrl) => (
-                  <BackgroundView>
-                    <TableView>
-                      <Touchable
-                        onPress={async () => {
-                          await this.props.navigation.navigate(
-                            'PersonalDetails'
-                          );
-                        }}
-                      >
-                        <Cell>
-                          <CellText>Personal Details</CellText>
-                          <CellIcon name="arrow-next" />
-                        </Cell>
-                      </Touchable>
-                      <Divider />
-                      <Touchable
-                        onPress={async () => {
-                          await this.props.navigation.navigate(
-                            'ChangePassword'
-                          );
-                        }}
-                      >
-                        <Cell>
-                          <CellText>Change Password</CellText>
-                          <CellIcon name="arrow-next" />
-                        </Cell>
-                      </Touchable>
-                    </TableView>
-                    <TableView>
-                      <Touchable
-                        onPress={() =>
-                          openUrl('https://apollosrock.newspring.cc/')
-                        }
-                      >
-                        <Cell>
-                          <CellText>Give Feedback</CellText>
-                          <CellIcon name="arrow-next" />
-                        </Cell>
-                      </Touchable>
-                    </TableView>
-                    <TableView>
-                      <Touchable
-                        onPress={() =>
-                          openUrl('https://apollosrock.newspring.cc/')
-                        }
-                      >
-                        <Cell>
-                          <CellText>Privacy Policy</CellText>
-                          <CellIcon name="arrow-next" />
-                        </Cell>
-                      </Touchable>
-                      <Divider />
-                      <Touchable
-                        onPress={() =>
-                          openUrl('https://apollosrock.newspring.cc/')
-                        }
-                      >
-                        <Cell>
-                          <CellText>Terms of Use</CellText>
-                          <CellIcon name="arrow-next" />
-                        </Cell>
-                      </Touchable>
-                    </TableView>
-                    <TableView>
-                      <Mutation mutation={logout}>
-                        {(handleLogout) => (
-                          <Touchable
-                            onPress={async () => {
-                              await handleLogout();
-                              await this.props.navigation.navigate('Connect');
-                            }}
-                          >
-                            <Cell>
-                              <CellText>Logout</CellText>
-                              <CellIcon name="arrow-next" />
-                            </Cell>
-                          </Touchable>
-                        )}
-                      </Mutation>
-                    </TableView>
-                  </BackgroundView>
-                )}
-              </WebBrowserConsumer>
-            </BackgroundContainer>
+            <BackgroundView>
+              <ScrollView>
+                <ChangeAvatar />
+
+                <WebBrowserConsumer>
+                  {(openUrl) => (
+                    <>
+                      <TableView>
+                        <Touchable
+                          onPress={async () => {
+                            await this.props.navigation.navigate(
+                              'PersonalDetails'
+                            );
+                          }}
+                        >
+                          <Cell>
+                            <CellText>Personal Details</CellText>
+                            <CellIcon name="arrow-next" />
+                          </Cell>
+                        </Touchable>
+                        <Divider />
+                        <Touchable
+                          onPress={async () => {
+                            await this.props.navigation.navigate('Location');
+                          }}
+                        >
+                          <Cell>
+                            <CellText>Location</CellText>
+                            <CellIcon name="arrow-next" />
+                          </Cell>
+                        </Touchable>
+                        <Divider />
+                        <Touchable
+                          onPress={async () => {
+                            await this.props.navigation.navigate(
+                              'ChangePassword'
+                            );
+                          }}
+                        >
+                          <Cell>
+                            <CellText>Change Password</CellText>
+                            <CellIcon name="arrow-next" />
+                          </Cell>
+                        </Touchable>
+                      </TableView>
+                      <TableView>
+                        <Touchable
+                          onPress={() =>
+                            openUrl('https://apollosrock.newspring.cc/')
+                          }
+                        >
+                          <Cell>
+                            <CellText>Give Feedback</CellText>
+                            <CellIcon name="arrow-next" />
+                          </Cell>
+                        </Touchable>
+                      </TableView>
+                      <TableView>
+                        <Touchable
+                          onPress={() =>
+                            openUrl('https://apollosrock.newspring.cc/')
+                          }
+                        >
+                          <Cell>
+                            <CellText>Privacy Policy</CellText>
+                            <CellIcon name="arrow-next" />
+                          </Cell>
+                        </Touchable>
+                        <Divider />
+                        <Touchable
+                          onPress={() =>
+                            openUrl('https://apollosrock.newspring.cc/')
+                          }
+                        >
+                          <Cell>
+                            <CellText>Terms of Use</CellText>
+                            <CellIcon name="arrow-next" />
+                          </Cell>
+                        </Touchable>
+                      </TableView>
+                      <TableView>
+                        <Mutation mutation={LOGOUT}>
+                          {(handleLogout) => (
+                            <Touchable
+                              onPress={async () => {
+                                await handleLogout();
+                                // This resets the navigation stack, and the navigates to the first auth screen.
+                                // This ensures that user isn't navigated to a subscreen of Auth, like the pin entry screen.
+                                await this.props.navigation.dispatch(
+                                  StackActions.reset({
+                                    index: 0,
+                                    key: null,
+                                    actions: [
+                                      NavigationActions.navigate({
+                                        routeName: 'Auth',
+                                        action: NavigationActions.navigate({
+                                          routeName:
+                                            'AuthSMSPhoneEntryConnected',
+                                        }),
+                                      }),
+                                    ],
+                                  })
+                                );
+                              }}
+                            >
+                              <Cell>
+                                <CellText>Logout</CellText>
+                                <CellIcon name="arrow-next" />
+                              </Cell>
+                            </Touchable>
+                          )}
+                        </Mutation>
+                      </TableView>
+                    </>
+                  )}
+                </WebBrowserConsumer>
+              </ScrollView>
+            </BackgroundView>
           );
         }}
       </Query>
diff --git a/apolloschurchapp/src/ui/UserAvatarView/uploadPhoto.js b/apolloschurchapp/src/user-settings/uploadPhoto.js
similarity index 85%
rename from apolloschurchapp/src/ui/UserAvatarView/uploadPhoto.js
rename to apolloschurchapp/src/user-settings/uploadPhoto.js
index f56408b..7eb5815 100644
--- a/apolloschurchapp/src/ui/UserAvatarView/uploadPhoto.js
+++ b/apolloschurchapp/src/user-settings/uploadPhoto.js
@@ -1,8 +1,7 @@
 import gql from 'graphql-tag';
 import ImagePicker from 'react-native-image-picker';
-import { client } from 'apolloschurchapp/src/client';
 import { ReactNativeFile } from 'apollo-upload-client';
-import getUserProfile from '../../tabs/connect/getUserProfile';
+import GET_USER_PROFILE from './getUserPhoto';
 
 const options = {
   title: 'Select Profile Image',
@@ -27,7 +26,7 @@ function showImagePicker() {
   });
 }
 
-export default async ({ onUpload = () => ({}) }) => {
+export default async ({ client, onUpload = () => ({}) }) => {
   try {
     const image = await showImagePicker();
     const file = new ReactNativeFile({
@@ -58,10 +57,10 @@ export default async ({ onUpload = () => ({}) }) => {
           },
         }
       ) => {
-        const data = cache.readQuery({ query: getUserProfile });
+        const data = cache.readQuery({ query: GET_USER_PROFILE });
 
         cache.writeQuery({
-          query: getUserProfile,
+          query: GET_USER_PROFILE,
           data: {
             currentUser: {
               ...data.currentUser,
@@ -75,6 +74,7 @@ export default async ({ onUpload = () => ({}) }) => {
       },
     });
   } catch (e) {
+    console.warn(e);
     return null;
   }
 };
diff --git a/apolloschurchapp/src/user-web-browser/Provider.js b/apolloschurchapp/src/user-web-browser/Provider.js
new file mode 100644
index 0000000..bc1ce7f
--- /dev/null
+++ b/apolloschurchapp/src/user-web-browser/Provider.js
@@ -0,0 +1,12 @@
+import { createContext } from 'react';
+import NavigationService from '../NavigationService';
+
+// Can can either call the OpenUserWebView function directly, or call it using
+// the Consumer. Your choice.
+export const OpenUserWebView = ({ url }) =>
+  NavigationService.navigate('UserWebBrowser', { url });
+
+const { Provider, Consumer } = createContext(OpenUserWebView);
+
+export { Provider as UserWebBrowserProvider };
+export { Consumer as UserWebBrowserConsumer };
diff --git a/apolloschurchapp/src/user-web-browser/__tests__/BrowserWithUserCookie.tests.js b/apolloschurchapp/src/user-web-browser/__tests__/BrowserWithUserCookie.tests.js
new file mode 100644
index 0000000..5c576db
--- /dev/null
+++ b/apolloschurchapp/src/user-web-browser/__tests__/BrowserWithUserCookie.tests.js
@@ -0,0 +1,52 @@
+import React from 'react';
+import { renderWithApolloData } from '../../utils/testUtils';
+import Providers from '../../Providers';
+import BrowserWithUserCookie, { WITH_USER_COOKIE } from '../index';
+import { OpenUserWebView } from '../Provider';
+import NavigationService from '../../NavigationService';
+
+const mocks = [
+  {
+    request: { query: WITH_USER_COOKIE },
+    result: {
+      data: {
+        __typename: 'AuthenticatedUser',
+        currentUser: {
+          __typename: 'Person',
+          id: 'Person:123',
+          rockToken: 'ABC',
+        },
+      },
+    },
+  },
+];
+const navigation = { navigate: jest.fn(), getParam: jest.fn() };
+
+describe('the BrowserWithUserCookie component', () => {
+  it('renders with a user', async () => {
+    const tree = await renderWithApolloData(
+      <Providers mocks={mocks}>
+        <BrowserWithUserCookie navigation={navigation} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('renders with modal false', async () => {
+    const tree = await renderWithApolloData(
+      <Providers mocks={mocks}>
+        <BrowserWithUserCookie modal={false} navigation={navigation} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
+describe('the OpenUserWebView', () => {
+  jest.mock('NavigationService');
+  NavigationService.navigate = jest.fn();
+  it('navigtes', () => {
+    OpenUserWebView({ url: 'fake.com' });
+    expect(NavigationService.navigate).toBeCalledWith('UserWebBrowser', {
+      url: 'fake.com',
+    });
+  });
+});
diff --git a/apolloschurchapp/src/user-web-browser/index.js b/apolloschurchapp/src/user-web-browser/index.js
new file mode 100644
index 0000000..5a41635
--- /dev/null
+++ b/apolloschurchapp/src/user-web-browser/index.js
@@ -0,0 +1,66 @@
+// Provider API for WebBrowser that injects theme values and defaults to the web browser:
+// import { Platform } from 'react-native';
+import React from 'react';
+import gql from 'graphql-tag';
+import { Query } from 'react-apollo';
+import { ModalView } from '@apollosproject/ui-kit';
+import { WebView } from 'react-native-webview';
+import PropTypes from 'prop-types';
+import { get } from 'lodash';
+
+const Browser = ({ url, cookie, modal, navigation }) => {
+  if (modal) {
+    return (
+      <ModalView navigation={navigation}>
+        <WebView source={{ uri: url, headers: { Cookie: cookie } }} />
+      </ModalView>
+    );
+  }
+  return <WebView source={{ uri: url, headers: { Cookie: cookie } }} />;
+};
+
+Browser.propTypes = {
+  url: PropTypes.string.isRequired,
+  cookie: PropTypes.string,
+  modal: PropTypes.bool.isRequired,
+};
+
+export const WITH_USER_COOKIE = gql`
+  query currentUserCookie {
+    currentUser {
+      id
+      rockToken
+    }
+  }
+`;
+
+const BrowserWithUserCookie = ({ url, navigation, modal = true }) => {
+  // get the url from the navigation param or default to the url prop;
+  const uri = navigation.getParam('url', url);
+  return (
+    <Query query={WITH_USER_COOKIE}>
+      {({ data, loading }) => {
+        if (loading) {
+          return null;
+        }
+        const cookie = get(data, 'currentUser.rockToken', '');
+        return (
+          <Browser
+            cookie={cookie}
+            url={uri}
+            modal={modal}
+            navigation={navigation}
+          />
+        );
+      }}
+    </Query>
+  );
+};
+
+BrowserWithUserCookie.propTypes = {
+  url: PropTypes.string,
+  modal: PropTypes.bool,
+};
+
+export default BrowserWithUserCookie;
+export { UserWebBrowserProvider, UserWebBrowserConsumer } from './Provider';
diff --git a/apolloschurchapp/src/utils/__tests__/utils.tests.js b/apolloschurchapp/src/utils/__tests__/utils.tests.js
new file mode 100644
index 0000000..24fe48a
--- /dev/null
+++ b/apolloschurchapp/src/utils/__tests__/utils.tests.js
@@ -0,0 +1,68 @@
+import React from 'react';
+import { Text } from 'react-native';
+import fetchMoreResolver from '../fetchMoreResolver';
+import { renderWithApolloData } from '../testUtils';
+
+describe('the fetchMoreResolver function', () => {
+  const args = {
+    collectionName: 'userFeed',
+    variables: { first: 10, after: null },
+    fetchMore: jest.fn(),
+    data: {
+      userFeed: {
+        edges: [
+          {
+            node: { id: 'foo' },
+          },
+          {
+            node: { id: 'bar' },
+          },
+        ],
+        pageInfo: { endCursor: 'abc123' },
+      },
+    },
+  };
+  test('no endCursor', () => {
+    expect(
+      fetchMoreResolver({
+        ...args,
+        data: { userFeed: { edges: [], pageInfo: {} } },
+      })()
+    ).toBeUndefined();
+  });
+  test('combines data', () => {
+    fetchMoreResolver({ ...args })();
+    const previousResult = args.data;
+    const fetchMoreResult = {
+      userFeed: {
+        edges: [{ node: { id: 'baz' } }],
+        pageInfo: { endCursor: 'def456' },
+      },
+    };
+    expect(
+      args.fetchMore.mock.calls[0][0].updateQuery(previousResult, {
+        fetchMoreResult,
+      })
+    ).toEqual({
+      userFeed: {
+        edges: [
+          {
+            node: { id: 'foo' },
+          },
+          {
+            node: { id: 'bar' },
+          },
+          {
+            node: { id: 'baz' },
+          },
+        ],
+        pageInfo: { endCursor: 'def456' },
+      },
+    });
+  });
+});
+
+test('renderWithApolloData renders the component', async () => {
+  const tree = await renderWithApolloData(<Text>hello, world!</Text>);
+  expect(tree).toMatchSnapshot();
+});
diff --git a/apolloschurchapp/src/utils/content/__tests__/share.tests.js b/apolloschurchapp/src/utils/content/__tests__/share.tests.js
new file mode 100644
index 0000000..972edaa
--- /dev/null
+++ b/apolloschurchapp/src/utils/content/__tests__/share.tests.js
@@ -0,0 +1,38 @@
+import { Platform, Share } from 'react-native';
+import share from '../share';
+
+jest.mock('Platform');
+jest.mock('Share');
+
+describe('the share function', () => {
+  beforeAll(() => {
+    Share.share = jest.fn();
+  });
+  test('default arguments', () => {
+    Platform.OS = 'ios';
+    share({ title: 'title', url: 'http://url.com' });
+    expect(Share.share).toBeCalledWith({
+      title: 'title',
+      message: undefined,
+      url: 'http://url.com',
+    });
+  });
+  test('use message if provided', () => {
+    Platform.OS = 'ios';
+    share({ title: 'title', message: 'some message', url: 'http://url.com' });
+    expect(Share.share).toBeCalledWith({
+      title: 'title',
+      message: 'some message',
+      url: 'http://url.com',
+    });
+  });
+  test('android arguments', () => {
+    Platform.OS = 'android';
+    share({ title: 'title', url: 'http://url.com' });
+    expect(Share.share).toBeCalledWith({
+      title: 'title',
+      message: 'http://url.com',
+      url: 'http://url.com',
+    });
+  });
+});
diff --git a/apolloschurchapp/src/utils/content/share.js b/apolloschurchapp/src/utils/content/share.js
index 4a52f5c..6d4326f 100644
--- a/apolloschurchapp/src/utils/content/share.js
+++ b/apolloschurchapp/src/utils/content/share.js
@@ -1,19 +1,14 @@
-import { Share } from 'react-native';
-// import { get } from 'lodash';
-import { track, events } from 'apolloschurchapp/src/analytics';
-// import getSiteLink from './getSiteLink';
+import { Platform, Share } from 'react-native';
 
-const share = ({ title, message, url, id = '' }) => {
+const share = ({ title, url, message }) => {
   Share.share({
     title,
-    message,
+    message:
+      Platform.OS === 'android'
+        ? [message, url].filter((s) => !!s).join('\n')
+        : message,
     url,
   });
-
-  track({
-    eventName: events.ShareContent,
-    properties: { title, id },
-  });
 };
 
 export default share;
diff --git a/apolloschurchapp/src/utils/fetchMoreResolver.js b/apolloschurchapp/src/utils/fetchMoreResolver.js
new file mode 100644
index 0000000..b93cb2f
--- /dev/null
+++ b/apolloschurchapp/src/utils/fetchMoreResolver.js
@@ -0,0 +1,42 @@
+import get from 'lodash/get';
+import set from 'lodash/fp/set';
+
+export default function fetchMoreResolver({
+  collectionName,
+  variables,
+  fetchMore,
+  data,
+}) {
+  return () => {
+    const pageInfoPath = `${collectionName}.pageInfo`;
+    const edgePath = `${collectionName}.edges`;
+
+    const after = get(data, `${pageInfoPath}.endCursor`);
+    if (!after) return;
+
+    fetchMore({
+      variables: { ...variables, after },
+      updateQuery: (previousResult, { fetchMoreResult }) => {
+        // combine previous data and fetchMore data
+        const newDataWithPageInfo = set(
+          pageInfoPath,
+          {
+            ...get(previousResult, pageInfoPath, {}),
+            ...get(fetchMoreResult, pageInfoPath, {}),
+          },
+          previousResult
+        );
+        const newDataWithAdditionalItems = set(
+          edgePath,
+          [
+            ...get(previousResult, edgePath, []),
+            ...get(fetchMoreResult, edgePath, []),
+          ],
+          newDataWithPageInfo
+        );
+
+        return newDataWithAdditionalItems;
+      },
+    });
+  };
+}
diff --git a/apolloschurchapp/src/utils/testUtils.js b/apolloschurchapp/src/utils/testUtils.js
new file mode 100644
index 0000000..38d20f7
--- /dev/null
+++ b/apolloschurchapp/src/utils/testUtils.js
@@ -0,0 +1,10 @@
+/* eslint-disable import/prefer-default-export */
+import renderer from 'react-test-renderer';
+import wait from 'waait';
+
+export const renderWithApolloData = async (component) => {
+  const tree = renderer.create(component);
+  await wait(1);
+  tree.update(component);
+  return tree;
+};
diff --git a/apolloschurchapp/storybook/Welcome/Intro.js b/apolloschurchapp/storybook/Welcome/Intro.js
new file mode 100644
index 0000000..2e8b8d7
--- /dev/null
+++ b/apolloschurchapp/storybook/Welcome/Intro.js
@@ -0,0 +1,43 @@
+import React from 'react';
+import { Paragraph, BodyText } from '@apollosproject/ui-kit';
+
+import { Slide, SlideContent } from '@apollosproject/ui-onboarding';
+
+const Intro = () => (
+  <Slide>
+    <SlideContent title={`Welcome to ${'\n'}Apollos Storybook!`} icon>
+      <Paragraph>
+        <BodyText>
+          Storybook is the component workshop for the Apollos app platform.
+        </BodyText>
+      </Paragraph>
+      <Paragraph>
+        <BodyText>
+          A story is a single state of one or more UI components. You can have
+          as many stories as you want.
+        </BodyText>
+      </Paragraph>
+      <Paragraph>
+        <BodyText>
+          We use Storybook to help document UI and to serve as visual test cases
+          for different states.
+        </BodyText>
+      </Paragraph>
+      <Paragraph>
+        <BodyText>
+          Open the navigator using the navigation bar at the bottom of the
+          screen to navigate the available stories.
+        </BodyText>
+      </Paragraph>
+      <Paragraph>
+        <BodyText>
+          The stories defined inside of your app will be listed first, with
+          Apollos UI stories below them. If you setup a theme, all of the
+          stories will reflect your theme.
+        </BodyText>
+      </Paragraph>
+    </SlideContent>
+  </Slide>
+);
+
+export default Intro;
diff --git a/apolloschurchapp/storybook/Welcome/Welcome.stories.js b/apolloschurchapp/storybook/Welcome/Welcome.stories.js
deleted file mode 100644
index f1c9a65..0000000
--- a/apolloschurchapp/storybook/Welcome/Welcome.stories.js
+++ /dev/null
@@ -1,9 +0,0 @@
-import React from 'react';
-import { storiesOf } from '@storybook/react-native';
-import { linkTo } from '@storybook/addon-links';
-
-import Welcome from '.';
-
-storiesOf('Welcome', module).add('to Storybook', () => (
-  <Welcome showApp={linkTo('Button')} />
-));
diff --git a/apolloschurchapp/storybook/Welcome/index.js b/apolloschurchapp/storybook/Welcome/index.js
index 78f7086..6c1e852 100644
--- a/apolloschurchapp/storybook/Welcome/index.js
+++ b/apolloschurchapp/storybook/Welcome/index.js
@@ -1,57 +1,9 @@
 import React from 'react';
-import PropTypes from 'prop-types';
-import { View, Text } from 'react-native';
+import { storiesOf } from '@apollosproject/ui-storybook';
 
-export default class Welcome extends React.Component {
-  styles = {
-    wrapper: {
-      flex: 1,
-      padding: 24,
-      justifyContent: 'center',
-    },
-    header: {
-      fontSize: 18,
-      marginBottom: 18,
-    },
-    content: {
-      fontSize: 12,
-      marginBottom: 10,
-      lineHeight: 18,
-    },
-  };
+import App from '../../src';
+import Intro from './Intro';
 
-  showApp(event) {
-    event.preventDefault();
-    if (this.props.showApp) this.props.showApp();
-  }
-
-  render() {
-    return (
-      <View style={this.styles.wrapper}>
-        <Text style={this.styles.header}>
-          Welcome to React Native Storybook
-        </Text>
-        <Text style={this.styles.content}>
-          This is a UI Component development environment for your React Native
-          app. Here you can display and interact with your UI components as
-          stories. A story is a single state of one or more UI components. You
-          can have as many stories as you want. In other words a story is like a
-          visual test case.
-        </Text>
-        <Text style={this.styles.content}>
-          We have added some stories inside the &quot;storybook/stories&quot;
-          directory for examples. Try editing the
-          &quot;storybook/stories/Welcome.js&quot; file to edit this message.
-        </Text>
-      </View>
-    );
-  }
-}
-
-Welcome.defaultProps = {
-  showApp: null,
-};
-
-Welcome.propTypes = {
-  showApp: PropTypes.func,
-};
+storiesOf('Storybook', module)
+  .add('Welcome', () => <Intro />)
+  .add('App', () => <App />);
diff --git a/apolloschurchapp/storybook/addons.js b/apolloschurchapp/storybook/addons.js
deleted file mode 100644
index 6aed412..0000000
--- a/apolloschurchapp/storybook/addons.js
+++ /dev/null
@@ -1,2 +0,0 @@
-import '@storybook/addon-actions/register';
-import '@storybook/addon-links/register';
diff --git a/apolloschurchapp/storybook/index.android.js b/apolloschurchapp/storybook/index.android.js
deleted file mode 100644
index f0513c5..0000000
--- a/apolloschurchapp/storybook/index.android.js
+++ /dev/null
@@ -1,3 +0,0 @@
-import StorybookUI from './storybook';
-
-export default StorybookUI;
diff --git a/apolloschurchapp/storybook/index.ios.js b/apolloschurchapp/storybook/index.ios.js
deleted file mode 100644
index f0513c5..0000000
--- a/apolloschurchapp/storybook/index.ios.js
+++ /dev/null
@@ -1,3 +0,0 @@
-import StorybookUI from './storybook';
-
-export default StorybookUI;
diff --git a/apolloschurchapp/storybook/index.js b/apolloschurchapp/storybook/index.js
index f0513c5..bcb07cf 100644
--- a/apolloschurchapp/storybook/index.js
+++ b/apolloschurchapp/storybook/index.js
@@ -1,3 +1,21 @@
-import StorybookUI from './storybook';
+import StorybookUI, {
+  loadApollosStories,
+  addApollosProviderDecorator,
+  configure,
+} from '@apollosproject/ui-storybook';
+import SplashScreen from 'react-native-splash-screen';
+import Providers from '../src/Providers';
+
+import { loadStories } from './storyLoader';
+
+addApollosProviderDecorator(Providers);
+
+configure(() => {
+  require('./Welcome');
+  loadStories();
+  loadApollosStories();
+
+  SplashScreen.hide();
+}, module);
 
 export default StorybookUI;
diff --git a/apolloschurchapp/storybook/storybook.js b/apolloschurchapp/storybook/storybook.js
deleted file mode 100644
index 19be073..0000000
--- a/apolloschurchapp/storybook/storybook.js
+++ /dev/null
@@ -1,35 +0,0 @@
-import React, { Component } from 'react';
-import { AppRegistry } from 'react-native';
-import {
-  getStorybookUI,
-  configure,
-  addDecorator,
-} from '@storybook/react-native';
-
-import Providers from 'apolloschurchapp/src/Providers';
-
-// storyLoader.js is generated on storybook start. next line disabled for CI test.
-import { loadStories } from './storyLoader'; // eslint-disable-line
-
-addDecorator((renderStorybook) => <Providers>{renderStorybook()}</Providers>);
-
-// import stories
-configure(() => {
-  loadStories();
-}, module);
-
-// This assumes that storybook is running on the same host as your RN packager,
-// to set manually use, e.g. host: 'localhost' option
-const StorybookUIRoot = getStorybookUI({ port: 7007, onDeviceUI: true });
-
-// react-native hot module loader must take in a Class - https://github.com/facebook/react-native/issues/10991
-// https://github.com/storybooks/storybook/issues/2081
-// eslint-disable-next-line react/prefer-stateless-function
-class StorybookUIHMRRoot extends Component {
-  render() {
-    return <StorybookUIRoot />;
-  }
-}
-
-AppRegistry.registerComponent('apolloschurchapp', () => StorybookUIHMRRoot);
-export default StorybookUIHMRRoot;
