diff --git a/apolloschurchapp/apollos.json b/apolloschurchapp/apollos.json
index 615aee6f..6701bc54 100644
--- a/apolloschurchapp/apollos.json
+++ b/apolloschurchapp/apollos.json
@@ -1,4 +1,4 @@
 {
-    "version": "2.23.1",
+    "version": "2.24.0",
     "environment": "client"
 }
diff --git a/apolloschurchapp/fastlane/Fastfile b/apolloschurchapp/fastlane/Fastfile
index 36f00fef..2cb78117 100644
--- a/apolloschurchapp/fastlane/Fastfile
+++ b/apolloschurchapp/fastlane/Fastfile
@@ -21,6 +21,15 @@ def product_bundle_id(path:)
   build_configuration.build_settings['PRODUCT_BUNDLE_IDENTIFIER']
 end
 
+def bump_version_code()
+    s = File.read("../android/app/build.gradle")
+    versionCode = number_of_commits
+    s[/versionCode\s+(\d+)/, 1] = (versionCode).to_s
+    f = File.new('../android/app/build.gradle', 'w')
+    f.write(s)
+    f.close
+end
+
 before_all do
   ensure_git_branch
   ensure_git_status_clean
@@ -50,20 +59,6 @@ end
 
 platform :android do
 
-  desc "Bumps Android versionCode"
-  lane :bump_version_code do
-    path = '../android/app/build.gradle'
-    re = /versionCode\s+(\d+)/
-
-    s = File.read("../android/app/build.gradle")
-    versionCode = number_of_commits
-    s[re, 1] = (versionCode).to_s
-
-    f = File.new(path, 'w')
-    f.write(s)
-    f.close
-  end
-
   desc "Deploy a new version to the Google Play"
   lane :deploy do
     bump_version_code
@@ -71,10 +66,8 @@ platform :android do
     gradle(task: 'bundle', build_type: 'Release', project_dir: 'android')
     changelog_from_git_commits
 
-    path = '../android/app/build.gradle'
-    re = /applicationId\s+"([\w+\.]*)"/
     s = File.read("../android/app/build.gradle")
-    package_name = s[re, 1]
+    package_name = s[/applicationId\s+"([\w+\.]*)"/, 1]
 
     upload_to_play_store(
       track: "internal",
@@ -86,5 +79,7 @@ platform :android do
 end
 
 error do |lane, exception|
-   slack(message: exception.to_s, success: false)
+  s = File.read("../app.json")
+  app_name = s[/"name": "(.*)",/, 1]
+  slack(message: name << " - " << exception.to_s, success: false)
 end
diff --git a/apolloschurchapp/ios/Podfile.lock b/apolloschurchapp/ios/Podfile.lock
index 5e7612b5..79b7cfa4 100644
--- a/apolloschurchapp/ios/Podfile.lock
+++ b/apolloschurchapp/ios/Podfile.lock
@@ -242,7 +242,7 @@ PODS:
     - React-cxxreact (= 0.63.4)
     - React-jsi (= 0.63.4)
   - React-jsinspector (0.63.4)
-  - react-native-apollos-player (2.23.1):
+  - react-native-apollos-player (2.24.0):
     - React
   - react-native-config (0.11.7):
     - React
@@ -640,7 +640,7 @@ SPEC CHECKSUMS:
   React-jsi: a0418934cf48f25b485631deb27c64dc40fb4c31
   React-jsiexecutor: 93bd528844ad21dc07aab1c67cb10abae6df6949
   React-jsinspector: 58aef7155bc9a9683f5b60b35eccea8722a4f53a
-  react-native-apollos-player: 9379ad8d5ec146feaa4aec02d819998bab6cfefe
+  react-native-apollos-player: f54c15c6dc31f38e681757b28644aeb409d214af
   react-native-config: 55548054279d92e0e4566ea15a8b9b81028ec342
   react-native-geolocation: c956aeb136625c23e0dce0467664af2c437888c9
   react-native-geolocation-service: f33626f1ae12381ca2ae60f98b2f5edd676bf95a
diff --git a/apolloschurchapp/package.json b/apolloschurchapp/package.json
index 48103f9a..4ca159e4 100644
--- a/apolloschurchapp/package.json
+++ b/apolloschurchapp/package.json
@@ -43,23 +43,23 @@
   "dependencies": {
     "@apollo/client": "3.3.0-rc.2",
     "@apollo/react-hooks": "^3.1.3",
-    "@apollosproject/config": "^2.23.1",
+    "@apollosproject/config": "^2.24.0",
     "@apollosproject/react-native-airplay-btn": "^0.2.0",
-    "@apollosproject/ui-analytics": "^2.23.1",
-    "@apollosproject/ui-auth": "^2.23.1",
-    "@apollosproject/ui-connected": "^2.23.1",
-    "@apollosproject/ui-fragments": "^2.23.1",
-    "@apollosproject/ui-htmlview": "^2.23.1",
-    "@apollosproject/ui-kit": "^2.23.1",
-    "@apollosproject/ui-mapview": "^2.23.1",
-    "@apollosproject/ui-media-player": "^2.23.1",
-    "@apollosproject/ui-notifications": "^2.23.1",
-    "@apollosproject/ui-onboarding": "^2.23.1",
-    "@apollosproject/ui-passes": "^2.23.1",
-    "@apollosproject/ui-prayer": "^2.23.1",
-    "@apollosproject/ui-scripture": "^2.23.1",
-    "@apollosproject/ui-storybook": "^2.23.1",
-    "@apollosproject/ui-test-utils": "^2.23.1",
+    "@apollosproject/ui-analytics": "^2.24.0",
+    "@apollosproject/ui-auth": "^2.24.0",
+    "@apollosproject/ui-connected": "^2.24.0",
+    "@apollosproject/ui-fragments": "^2.24.0",
+    "@apollosproject/ui-htmlview": "^2.24.0",
+    "@apollosproject/ui-kit": "^2.24.0",
+    "@apollosproject/ui-mapview": "^2.24.0",
+    "@apollosproject/ui-media-player": "^2.24.0",
+    "@apollosproject/ui-notifications": "^2.24.0",
+    "@apollosproject/ui-onboarding": "^2.24.0",
+    "@apollosproject/ui-passes": "^2.24.0",
+    "@apollosproject/ui-prayer": "^2.24.0",
+    "@apollosproject/ui-scripture": "^2.24.0",
+    "@apollosproject/ui-storybook": "^2.24.0",
+    "@apollosproject/ui-test-utils": "^2.24.0",
     "@gorhom/bottom-sheet": "3.4.1",
     "@metarouter/analytics-react-native": "^1.1.5",
     "@react-native-community/async-storage": "^1.5.1",
@@ -116,7 +116,7 @@
     "yup": "0.26.6"
   },
   "devDependencies": {
-    "@apollosproject/eslint-config": "^2.23.1",
+    "@apollosproject/eslint-config": "^2.24.0",
     "@babel/core": "^7.8.4",
     "@babel/runtime": "^7.8.4",
     "@bam.tech/react-native-make": "^3.0.0",
diff --git a/apolloschurchapp/src/tabs/connect/ActionBar.js b/apolloschurchapp/src/tabs/connect/ActionBar.js
index da1aafa3..900f129f 100644
--- a/apolloschurchapp/src/tabs/connect/ActionBar.js
+++ b/apolloschurchapp/src/tabs/connect/ActionBar.js
@@ -19,11 +19,6 @@ const Toolbar = () => {
             icon="download"
             label="Give"
           />
-          <ActionBarItem
-            onPress={() => navigation.navigate('TestingControlPanel')}
-            icon="information"
-            label="Test"
-          />
         </ActionBar>
       )}
     </RockAuthedWebBrowser>
diff --git a/apolloschurchapp/src/tabs/connect/index.js b/apolloschurchapp/src/tabs/connect/index.js
index da182421..8659793d 100644
--- a/apolloschurchapp/src/tabs/connect/index.js
+++ b/apolloschurchapp/src/tabs/connect/index.js
@@ -7,7 +7,6 @@ import { NotificationSettingsConnected } from '@apollosproject/ui-notifications'
 import UserSettings from '../../user-settings';
 import PersonalDetails from '../../user-settings/PersonalDetails';
 import ChangePassword from '../../user-settings/ChangePassword';
-import TestingControlPanel from '../../testing-control-panel';
 
 import Connect from './Connect';
 
@@ -20,11 +19,6 @@ const ConnectNavigator = (props) => (
       name="Connect"
       options={{ headerShown: false }}
     />
-    <Screen
-      component={TestingControlPanel}
-      name="TestingControlPanel"
-      options={{ headerTitle: 'Testing' }}
-    />
     <Screen
       component={NotificationSettingsConnected}
       name="Notifications"
@@ -35,7 +29,6 @@ const ConnectNavigator = (props) => (
       name="UserSettings"
       options={{ headerTitle: 'Settings' }}
     />
-
     <Screen
       name="PersonalDetails"
       component={PersonalDetails}
diff --git a/apolloschurchapp/src/testing-control-panel/TouchableCell.js b/apolloschurchapp/src/testing-control-panel/TouchableCell.js
deleted file mode 100644
index bfe51df3..00000000
--- a/apolloschurchapp/src/testing-control-panel/TouchableCell.js
+++ /dev/null
@@ -1,20 +0,0 @@
-import React from 'react';
-import PropType from 'prop-types';
-import { Touchable, Cell, CellIcon, CellText } from '@apollosproject/ui-kit';
-
-const TouchableCell = ({ iconName, cellText, handlePress }) => (
-  <Touchable onPress={handlePress}>
-    <Cell>
-      <CellIcon name={iconName} />
-      <CellText>{cellText}</CellText>
-    </Cell>
-  </Touchable>
-);
-
-TouchableCell.propTypes = {
-  iconName: PropType.string.isRequired,
-  cellText: PropType.string.isRequired,
-  handlePress: PropType.func.isRequired,
-};
-
-export default TouchableCell;
diff --git a/apolloschurchapp/src/testing-control-panel/TouchableCell.tests.js b/apolloschurchapp/src/testing-control-panel/TouchableCell.tests.js
deleted file mode 100644
index 75bc5b07..00000000
--- a/apolloschurchapp/src/testing-control-panel/TouchableCell.tests.js
+++ /dev/null
@@ -1,21 +0,0 @@
-import React from 'react';
-import renderer from 'react-test-renderer';
-
-import { Providers } from '@apollosproject/ui-test-utils';
-
-import TouchableCell from './TouchableCell';
-
-describe('touchable cell', () => {
-  it('renders the cell, icon, and text', () => {
-    const tree = renderer.create(
-      <Providers>
-        <TouchableCell
-          cellText="This is a cell"
-          iconName="play"
-          handlePress={() => ({})}
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/testing-control-panel/index.js b/apolloschurchapp/src/testing-control-panel/index.js
deleted file mode 100644
index 7f77a7cc..00000000
--- a/apolloschurchapp/src/testing-control-panel/index.js
+++ /dev/null
@@ -1,54 +0,0 @@
-import React from 'react';
-import {
-  TableView,
-  BackgroundView,
-  NavigationService,
-} from '@apollosproject/ui-kit';
-import {
-  checkOnboardingStatusAndNavigate,
-  onboardingComplete,
-} from '@apollosproject/ui-onboarding';
-import { useApolloClient, useQuery, gql } from '@apollo/client';
-import TouchableCell from './TouchableCell';
-
-export default function TestingControlPanel() {
-  const client = useApolloClient();
-  const { data } = useQuery(gql`
-    query currentUserId {
-      currentUser {
-        id
-      }
-    }
-  `);
-  return (
-    <BackgroundView>
-      <TableView>
-        <TouchableCell
-          handlePress={() =>
-            checkOnboardingStatusAndNavigate({
-              latestOnboardingVersion: 2,
-              navigation: NavigationService,
-              client,
-            })
-          }
-          iconName="Avatar"
-          cellText={`Launch Onboarding`}
-        />
-      </TableView>
-      <TouchableCell
-        handlePress={() =>
-          onboardingComplete({ version: 0, userId: data?.currentUser?.id })
-        }
-        iconName="Avatar"
-        cellText={`Reset Onboarding to Unseen`}
-      />
-      <TouchableCell
-        handlePress={() =>
-          onboardingComplete({ version: 1, userId: data?.currentUser?.id })
-        }
-        iconName="Avatar"
-        cellText={`Reset Onboarding to Seen v1`}
-      />
-    </BackgroundView>
-  );
-}
diff --git a/apolloschurchapp/src/user-settings/UserSettings.tests.js b/apolloschurchapp/src/user-settings/UserSettings.tests.js
index 5753d4ae..48966e2a 100644
--- a/apolloschurchapp/src/user-settings/UserSettings.tests.js
+++ b/apolloschurchapp/src/user-settings/UserSettings.tests.js
@@ -1,12 +1,36 @@
 import React from 'react';
 
 import { GET_LOGIN_STATE } from '@apollosproject/ui-auth';
-import { renderWithApolloData, Providers } from '@apollosproject/ui-test-utils';
+import {
+  renderWithApolloData,
+  Providers,
+  WithReactNavigator,
+} from '@apollosproject/ui-test-utils';
+import { gql } from '@apollo/client';
 import { MockedProvider } from '@apollo/client/testing';
 import { InMemoryCache } from '@apollo/client/cache';
 
 import UserSettings from '.';
 
+const mock = {
+  request: {
+    query: gql`
+      query currentUserId {
+        currentUser {
+          id
+        }
+      }
+    `,
+  },
+  result: {
+    data: {
+      currentUser: {
+        id: 1,
+      },
+    },
+  },
+};
+
 describe('UserSettings component', () => {
   it('renders UserSettings when logged in', async () => {
     const cache = new InMemoryCache();
@@ -14,11 +38,12 @@ describe('UserSettings component', () => {
       query: GET_LOGIN_STATE,
       data: { isLoggedIn: true },
     });
-    const navigation = { navigate: jest.fn() };
     const tree = await renderWithApolloData(
-      <Providers cache={cache} MockedProvider={MockedProvider}>
-        <UserSettings navigation={navigation} />
-      </Providers>
+      WithReactNavigator(
+        <Providers cache={cache} MockedProvider={MockedProvider} mocks={[mock]}>
+          <UserSettings />
+        </Providers>
+      )
     );
     expect(tree).toMatchSnapshot();
   });
diff --git a/apolloschurchapp/src/user-settings/index.js b/apolloschurchapp/src/user-settings/index.js
index 1db143da..9a0a8aed 100644
--- a/apolloschurchapp/src/user-settings/index.js
+++ b/apolloschurchapp/src/user-settings/index.js
@@ -1,7 +1,7 @@
-import React, { PureComponent } from 'react';
+import React from 'react';
 import { ScrollView } from 'react-native';
-import PropTypes from 'prop-types';
-import { Query, Mutation } from '@apollo/client/react/components';
+import { useQuery, useMutation, useApolloClient, gql } from '@apollo/client';
+import { useNavigation } from '@react-navigation/native';
 import { getVersion, getBuildNumber } from 'react-native-device-info';
 
 import {
@@ -14,150 +14,198 @@ import {
   Touchable,
   ActivityIndicator,
   NavigationService,
+  H4,
+  PaddedView,
 } from '@apollosproject/ui-kit';
-
+import {
+  checkOnboardingStatusAndNavigate,
+  onboardingComplete,
+} from '@apollosproject/ui-onboarding';
 import { GET_LOGIN_STATE, LOGOUT } from '@apollosproject/ui-auth';
 import {
   RockAuthedWebBrowser,
   UserAvatarUpdate,
 } from '@apollosproject/ui-connected';
 
-class UserSettings extends PureComponent {
-  static propTypes = {
-    navigation: PropTypes.shape({
-      navigate: PropTypes.func,
-    }),
-  };
+const UserSettings = () => {
+  const navigation = useNavigation();
+  const {
+    data: { isLoggedIn = false },
+    loading,
+  } = useQuery(GET_LOGIN_STATE, { fetchPolicy: 'cache-and-network' });
+  const [logout] = useMutation(LOGOUT);
+  const client = useApolloClient();
+  const { data } = useQuery(gql`
+    query currentUserId {
+      currentUser {
+        id
+      }
+    }
+  `);
+
+  if (loading) return <ActivityIndicator />;
+  if (!isLoggedIn) return null;
+  return (
+    <BackgroundView>
+      <ScrollView>
+        <UserAvatarUpdate />
 
-  render() {
-    return (
-      <Query query={GET_LOGIN_STATE} fetchPolicy="cache-and-network">
-        {({ data: { isLoggedIn = false }, loading }) => {
-          if (loading) return <ActivityIndicator />;
-          if (!isLoggedIn) return null;
-          return (
-            <BackgroundView>
-              <ScrollView>
-                <UserAvatarUpdate />
+        <RockAuthedWebBrowser>
+          {(openUrl) => (
+            <>
+              <TableView>
+                <Touchable
+                  onPress={() => {
+                    navigation.navigate('PersonalDetails');
+                  }}
+                >
+                  <Cell>
+                    <CellText>Personal Details</CellText>
+                    <CellIcon name="arrow-next" />
+                  </Cell>
+                </Touchable>
+                <Divider />
+                <Touchable
+                  onPress={() => {
+                    navigation.navigate('Location');
+                  }}
+                >
+                  <Cell>
+                    <CellText>Location</CellText>
+                    <CellIcon name="arrow-next" />
+                  </Cell>
+                </Touchable>
+                <Divider />
+                <Touchable
+                  onPress={() => {
+                    navigation.navigate('ChangePassword');
+                  }}
+                >
+                  <Cell>
+                    <CellText>Change Password</CellText>
+                    <CellIcon name="arrow-next" />
+                  </Cell>
+                </Touchable>
+                <Touchable
+                  onPress={() => {
+                    navigation.navigate('Notifications');
+                  }}
+                >
+                  <Cell>
+                    <CellText>Notification Settings</CellText>
+                    <CellIcon name="arrow-next" />
+                  </Cell>
+                </Touchable>
+              </TableView>
+              <TableView>
+                <Touchable
+                  onPress={() => {
+                    openUrl('mailto:support@apollos.app');
+                  }}
+                >
+                  <Cell>
+                    <CellText>Give Feedback</CellText>
+                    <CellIcon name="arrow-next" />
+                  </Cell>
+                </Touchable>
+              </TableView>
+              <TableView>
+                <Touchable
+                  onPress={() => openUrl('https://apollosrock.newspring.cc/')}
+                >
+                  <Cell>
+                    <CellText>Privacy Policy</CellText>
+                    <CellIcon name="arrow-next" />
+                  </Cell>
+                </Touchable>
+                <Divider />
+                <Touchable
+                  onPress={() => openUrl('https://apollosrock.newspring.cc/')}
+                >
+                  <Cell>
+                    <CellText>Terms of Use</CellText>
+                    <CellIcon name="arrow-next" />
+                  </Cell>
+                </Touchable>
+              </TableView>
+              <TableView>
+                <Touchable
+                  onPress={async () => {
+                    await logout();
+                    // This resets the navigation stack, and the navigates to the first auth screen.
+                    // This ensures that user isn't navigated to a subscreen of Auth, like the pin entry screen.
+                    NavigationService.resetToAuth();
+                  }}
+                >
+                  <Cell>
+                    <CellText>Logout</CellText>
+                    <CellIcon name="arrow-next" />
+                  </Cell>
+                </Touchable>
+              </TableView>
+              <TableView>
+                <Cell>
+                  <CellText>
+                    {`App Version: ${getVersion()}.${getBuildNumber()}`}
+                  </CellText>
+                </Cell>
+              </TableView>
 
-                <RockAuthedWebBrowser>
-                  {(openUrl) => (
-                    <>
-                      <TableView>
-                        <Touchable
-                          onPress={() => {
-                            this.props.navigation.navigate('PersonalDetails');
-                          }}
-                        >
-                          <Cell>
-                            <CellText>Personal Details</CellText>
-                            <CellIcon name="arrow-next" />
-                          </Cell>
-                        </Touchable>
-                        <Divider />
-                        <Touchable
-                          onPress={() => {
-                            this.props.navigation.navigate('Location');
-                          }}
-                        >
-                          <Cell>
-                            <CellText>Location</CellText>
-                            <CellIcon name="arrow-next" />
-                          </Cell>
-                        </Touchable>
-                        <Divider />
-                        <Touchable
-                          onPress={() => {
-                            this.props.navigation.navigate('ChangePassword');
-                          }}
-                        >
-                          <Cell>
-                            <CellText>Change Password</CellText>
-                            <CellIcon name="arrow-next" />
-                          </Cell>
-                        </Touchable>
-                        <Touchable
-                          onPress={() => {
-                            this.props.navigation.navigate('Notifications');
-                          }}
-                        >
-                          <Cell>
-                            <CellText>Notification Settings</CellText>
-                            <CellIcon name="arrow-next" />
-                          </Cell>
-                        </Touchable>
-                      </TableView>
-                      <TableView>
-                        <Touchable
-                          onPress={() => {
-                            openUrl('mailto:support@apollos.app');
-                          }}
-                        >
-                          <Cell>
-                            <CellText>Give Feedback</CellText>
-                            <CellIcon name="arrow-next" />
-                          </Cell>
-                        </Touchable>
-                      </TableView>
-                      <TableView>
-                        <Touchable
-                          onPress={() =>
-                            openUrl('https://apollosrock.newspring.cc/')
-                          }
-                        >
-                          <Cell>
-                            <CellText>Privacy Policy</CellText>
-                            <CellIcon name="arrow-next" />
-                          </Cell>
-                        </Touchable>
-                        <Divider />
-                        <Touchable
-                          onPress={() =>
-                            openUrl('https://apollosrock.newspring.cc/')
-                          }
-                        >
-                          <Cell>
-                            <CellText>Terms of Use</CellText>
-                            <CellIcon name="arrow-next" />
-                          </Cell>
-                        </Touchable>
-                      </TableView>
-                      <TableView>
-                        <Mutation mutation={LOGOUT}>
-                          {(handleLogout) => (
-                            <Touchable
-                              onPress={async () => {
-                                await handleLogout();
-                                // This resets the navigation stack, and the navigates to the first auth screen.
-                                // This ensures that user isn't navigated to a subscreen of Auth, like the pin entry screen.
-                                await NavigationService.resetToAuth();
-                              }}
-                            >
-                              <Cell>
-                                <CellText>Logout</CellText>
-                                <CellIcon name="arrow-next" />
-                              </Cell>
-                            </Touchable>
-                          )}
-                        </Mutation>
-                      </TableView>
-                      <TableView>
-                        <Cell>
-                          <CellText>
-                            {`App Version: ${getVersion()}.${getBuildNumber()}`}
-                          </CellText>
-                        </Cell>
-                      </TableView>
-                    </>
-                  )}
-                </RockAuthedWebBrowser>
-              </ScrollView>
-            </BackgroundView>
-          );
-        }}
-      </Query>
-    );
-  }
-}
+              {/* testing panel */}
+              {process.env.NODE_ENV !== 'production' ? (
+                <>
+                  <PaddedView>
+                    <H4>For development only</H4>
+                  </PaddedView>
+                  <TableView>
+                    <Touchable
+                      onPress={() =>
+                        checkOnboardingStatusAndNavigate({
+                          latestOnboardingVersion: 2,
+                          navigation: NavigationService,
+                          client,
+                        })
+                      }
+                    >
+                      <Cell>
+                        <CellText>Launch Onboarding</CellText>
+                      </Cell>
+                    </Touchable>
+                    <Divider />
+                    <Touchable
+                      onPress={() =>
+                        onboardingComplete({
+                          version: 0,
+                          userId: data?.currentUser?.id,
+                        })
+                      }
+                    >
+                      <Cell>
+                        <CellText>Reset Onboarding to Unseen</CellText>
+                      </Cell>
+                    </Touchable>
+                    <Divider />
+                    <Touchable
+                      onPress={() =>
+                        onboardingComplete({
+                          version: 1,
+                          userId: data?.currentUser?.id,
+                        })
+                      }
+                    >
+                      <Cell>
+                        <CellText>Reset Onboarding to Seen v1</CellText>
+                      </Cell>
+                    </Touchable>
+                  </TableView>
+                </>
+              ) : null}
+            </>
+          )}
+        </RockAuthedWebBrowser>
+      </ScrollView>
+    </BackgroundView>
+  );
+};
 
 export default UserSettings;
