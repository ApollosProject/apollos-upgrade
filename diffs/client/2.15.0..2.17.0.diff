diff --git a/apolloschurchapp/.gitignore b/apolloschurchapp/.gitignore
index ee91441b..caf99aad 100644
--- a/apolloschurchapp/.gitignore
+++ b/apolloschurchapp/.gitignore
@@ -160,5 +160,4 @@ key.json
 .env.shared
 
 # GraphQL info
-schema.graphql
 fragmentTypes.json
diff --git a/apolloschurchapp/apollos.json b/apolloschurchapp/apollos.json
index af7746f5..5974170c 100644
--- a/apolloschurchapp/apollos.json
+++ b/apolloschurchapp/apollos.json
@@ -1,4 +1,4 @@
 {
-    "version": "2.15.0",
+    "version": "2.17.0",
     "environment": "client"
 }
diff --git a/apolloschurchapp/ios/Podfile.lock b/apolloschurchapp/ios/Podfile.lock
index 9bf023b0..10d39c4b 100644
--- a/apolloschurchapp/ios/Podfile.lock
+++ b/apolloschurchapp/ios/Podfile.lock
@@ -242,7 +242,7 @@ PODS:
     - React-cxxreact (= 0.63.4)
     - React-jsi (= 0.63.4)
   - React-jsinspector (0.63.4)
-  - react-native-apollos-player (2.15.0):
+  - react-native-apollos-player (2.17.0):
     - React
   - react-native-config (0.11.7):
     - React
@@ -639,7 +639,7 @@ SPEC CHECKSUMS:
   React-jsi: a0418934cf48f25b485631deb27c64dc40fb4c31
   React-jsiexecutor: 93bd528844ad21dc07aab1c67cb10abae6df6949
   React-jsinspector: 58aef7155bc9a9683f5b60b35eccea8722a4f53a
-  react-native-apollos-player: 7ed93f8ad355c1e5b5cde3e524e39396af7f5a52
+  react-native-apollos-player: 05e77f652456c927f29c21cf0bf53835b9f53952
   react-native-config: 55548054279d92e0e4566ea15a8b9b81028ec342
   react-native-geolocation: c956aeb136625c23e0dce0467664af2c437888c9
   react-native-geolocation-service: f33626f1ae12381ca2ae60f98b2f5edd676bf95a
diff --git a/apolloschurchapp/ios/apolloschurchapp.xcodeproj/project.pbxproj b/apolloschurchapp/ios/apolloschurchapp.xcodeproj/project.pbxproj
index 0ffd1038..c429baab 100644
--- a/apolloschurchapp/ios/apolloschurchapp.xcodeproj/project.pbxproj
+++ b/apolloschurchapp/ios/apolloschurchapp.xcodeproj/project.pbxproj
@@ -14,7 +14,7 @@
 		13B07FBF1A68108700A75B9A /* Images.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB51A68108700A75B9A /* Images.xcassets */; };
 		13B07FC11A68108700A75B9A /* main.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB71A68108700A75B9A /* main.m */; };
 		1C48DCDE11AC47C48E918489 /* Inter-UI-Medium.otf in Resources */ = {isa = PBXBuildFile; fileRef = DC74A378C1CC40E4B6192D7F /* Inter-UI-Medium.otf */; };
-		2AE17F608689DAE577F28E4D /* BuildFile in Frameworks */ = {isa = PBXBuildFile; };
+		2AE17F608689DAE577F28E4D /* (null) in Frameworks */ = {isa = PBXBuildFile; };
 		2D02E4BC1E0B4A80006451C7 /* AppDelegate.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB01A68108700A75B9A /* AppDelegate.m */; };
 		2D02E4BD1E0B4A84006451C7 /* Images.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB51A68108700A75B9A /* Images.xcassets */; };
 		2D02E4BF1E0B4AB3006451C7 /* main.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB71A68108700A75B9A /* main.m */; };
@@ -115,7 +115,7 @@
 			isa = PBXFrameworksBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
-				2AE17F608689DAE577F28E4D /* BuildFile in Frameworks */,
+				2AE17F608689DAE577F28E4D /* (null) in Frameworks */,
 				EF3A30A2E55D4F8352E116D3 /* libPods-apolloschurchapp-apolloschurchappTests.a in Frameworks */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
@@ -308,6 +308,7 @@
 			buildConfigurationList = 13B07F931A680F5B00A75B9A /* Build configuration list for PBXNativeTarget "apolloschurchapp" */;
 			buildPhases = (
 				DEEF24CE4F76789E5E8C369D /* [CP] Check Pods Manifest.lock */,
+				4C006E292656868900EE9158 /* Start Packager */,
 				13B07F871A680F5B00A75B9A /* Sources */,
 				13B07F8C1A680F5B00A75B9A /* Frameworks */,
 				13B07F8E1A680F5B00A75B9A /* Resources */,
@@ -550,6 +551,25 @@
 			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-apolloschurchapp/Pods-apolloschurchapp-resources.sh\"\n";
 			showEnvVarsInLog = 0;
 		};
+		4C006E292656868900EE9158 /* Start Packager */ = {
+			isa = PBXShellScriptBuildPhase;
+			buildActionMask = 2147483647;
+			files = (
+			);
+			inputFileListPaths = (
+			);
+			inputPaths = (
+			);
+			name = "Start Packager";
+			outputFileListPaths = (
+			);
+			outputPaths = (
+			);
+			runOnlyForDeploymentPostprocessing = 0;
+			shellPath = /bin/sh;
+			shellScript = "export RCT_METRO_PORT=\"${RCT_METRO_PORT:=8081}\"\necho \"export RCT_METRO_PORT=${RCT_METRO_PORT}\" > \"${SRCROOT}/../node_modules/react-native/scripts/.packager.env\"\nif [ -z \"${RCT_NO_LAUNCH_PACKAGER+xxx}\" ] ; then\n  if nc -w 5 -z localhost ${RCT_METRO_PORT} ; then\n    if ! curl -s \"http://localhost:${RCT_METRO_PORT}/status\" | grep -q \"packager-status:running\" ; then\n      echo \"Port ${RCT_METRO_PORT} already in use, packager is either not running or not running correctly\"\n      exit 2\n    fi\n  else\n    open \"$SRCROOT/../node_modules/react-native/scripts/launchPackager.command\" || echo \"Can't start packager automatically\"\n  fi\nfi\n";
+			showEnvVarsInLog = 0;
+		};
 		84E19E444A56C704431362B6 /* [CP] Embed Pods Frameworks */ = {
 			isa = PBXShellScriptBuildPhase;
 			buildActionMask = 2147483647;
diff --git a/apolloschurchapp/package.json b/apolloschurchapp/package.json
index bfb037ce..b7778b65 100644
--- a/apolloschurchapp/package.json
+++ b/apolloschurchapp/package.json
@@ -17,11 +17,10 @@
     "unlink-packages": "node ./scripts/link-packages remove && rm -rf ./node_modules",
     "generate-stories": "rnstl --searchDir ./src --pattern **/*.stories.js",
     "lint": "eslint ./src --ext .js",
-    "get-schema": "eval $(grep ^APP_DATA_URL .env) && sleep 10 && get-graphql-schema $APP_DATA_URL > schema.graphql",
     "postinstall": "jetify && yarn pods",
     "pods": "(bundle install && cd ios && bundle exec pod install --repo-update)",
     "start": "yarn start:dev",
-    "start:dev": "yarn generate-stories & yarn get-schema && node ./scripts/get-introspection-data.js && react-native start",
+    "start:dev": "yarn generate-stories && node ./scripts/get-introspection-data.js && react-native start",
     "test": "TZ=UTC jest",
     "icons": "react-native set-icon --path",
     "splash": "react-native set-splash --path"
@@ -46,23 +45,23 @@
   "dependencies": {
     "@apollo/client": "3.3.0-rc.2",
     "@apollo/react-hooks": "^3.1.3",
-    "@apollosproject/config": "^2.15.0",
+    "@apollosproject/config": "^2.17.0",
     "@apollosproject/react-native-airplay-btn": "^0.2.0",
-    "@apollosproject/ui-analytics": "^2.15.0",
-    "@apollosproject/ui-auth": "^2.15.0",
-    "@apollosproject/ui-connected": "^2.15.0",
-    "@apollosproject/ui-fragments": "^2.15.0",
-    "@apollosproject/ui-htmlview": "^2.15.0",
-    "@apollosproject/ui-kit": "^2.15.0",
-    "@apollosproject/ui-mapview": "^2.15.0",
-    "@apollosproject/ui-media-player": "^2.15.0",
-    "@apollosproject/ui-notifications": "^2.15.0",
-    "@apollosproject/ui-onboarding": "^2.15.0",
-    "@apollosproject/ui-passes": "^2.15.0",
-    "@apollosproject/ui-prayer": "^2.15.0",
-    "@apollosproject/ui-scripture": "^2.15.0",
-    "@apollosproject/ui-storybook": "^2.15.0",
-    "@apollosproject/ui-test-utils": "^2.15.0",
+    "@apollosproject/ui-analytics": "^2.17.0",
+    "@apollosproject/ui-auth": "^2.17.0",
+    "@apollosproject/ui-connected": "^2.17.0",
+    "@apollosproject/ui-fragments": "^2.17.0",
+    "@apollosproject/ui-htmlview": "^2.17.0",
+    "@apollosproject/ui-kit": "^2.17.0",
+    "@apollosproject/ui-mapview": "^2.17.0",
+    "@apollosproject/ui-media-player": "^2.17.0",
+    "@apollosproject/ui-notifications": "^2.17.0",
+    "@apollosproject/ui-onboarding": "^2.17.0",
+    "@apollosproject/ui-passes": "^2.17.0",
+    "@apollosproject/ui-prayer": "^2.17.0",
+    "@apollosproject/ui-scripture": "^2.17.0",
+    "@apollosproject/ui-storybook": "^2.17.0",
+    "@apollosproject/ui-test-utils": "^2.17.0",
     "@gorhom/bottom-sheet": "3.4.1",
     "@metarouter/analytics-react-native": "^1.1.5",
     "@react-native-community/async-storage": "^1.5.1",
@@ -119,7 +118,7 @@
     "yup": "0.26.6"
   },
   "devDependencies": {
-    "@apollosproject/eslint-config": "^2.15.0",
+    "@apollosproject/eslint-config": "^2.17.0",
     "@babel/core": "^7.8.4",
     "@babel/runtime": "^7.8.4",
     "@bam.tech/react-native-make": "^3.0.0",
@@ -143,7 +142,6 @@
     "eslint-plugin-react-hooks": "^4.0.2",
     "eslint-plugin-react-native": "^3.2.1",
     "get-dev-paths": "^0.1.0",
-    "get-graphql-schema": "^2.1.2",
     "graphql-import": "^0.7.1",
     "jest": "^25.1.0",
     "jetifier": "^1.6.4",
diff --git a/apolloschurchapp/src/content-feed/content-feed.tests.js b/apolloschurchapp/src/content-feed/content-feed.tests.js
deleted file mode 100644
index 3c967931..00000000
--- a/apolloschurchapp/src/content-feed/content-feed.tests.js
+++ /dev/null
@@ -1,119 +0,0 @@
-import React from 'react';
-
-import { renderWithApolloData, Providers } from '@apollosproject/ui-test-utils';
-import { MockedProvider } from '@apollo/client/testing';
-import { GET_CONTENT_CARD } from '@apollosproject/ui-connected';
-import GET_CONTENT_FEED from './getContentFeed';
-
-import ContentFeed from './index';
-
-describe('content feed query component', () => {
-  it('renders a feedview after successful query', async () => {
-    const mock = {
-      request: {
-        query: GET_CONTENT_FEED,
-        variables: { itemId: 'ContentChannel:123' },
-      },
-      result: {
-        data: {
-          node: {
-            __typename: 'ContentChannel',
-            childContentItemsConnection: {
-              pageInfo: {
-                endCursor: 'blablalba',
-                __typename: 'PaginationInfo',
-              },
-              __typename: 'ContentItemsConnection',
-              edges: [
-                {
-                  __typename: 'ContentItemsConnectionEdge',
-                  node: {
-                    __typename: 'UniversalContentItem',
-                    id: 'UniversalContentItem:d57994350b9d213866b24dea3a97433d',
-                    coverImage: null,
-                    parentChannel: {
-                      id: 'ContentChannel:4f68015ba18662a7409d1219a4ce013e',
-                      name: 'Editorial',
-                      iconName: 'text',
-                      __typename: 'ContentChannel',
-                    },
-                    title: 'Mea Animal Aperiam Ornatus Eu',
-                    hyphenatedTitle: 'Mea Animal Aperiam Ornatus Eu',
-                    summary: 'Bla bla bla',
-                    theme: null,
-                    isLiked: false,
-                    likedCount: 0,
-                    videos: [],
-                    audios: [],
-                  },
-                },
-                {
-                  __typename: 'ContentItemsConnectionEdge',
-                  node: {
-                    __typename: 'UniversalContentItem',
-                    id: 'UniversalContentItem:b36e55d803443431e96bb4b5068147ec',
-                    coverImage: null,
-                    parentChannel: {
-                      id: 'ContentChannel:4f68015ba18662a7409d1219a4ce013e',
-                      name: 'Editorial',
-                      iconName: 'text',
-                      __typename: 'ContentChannel',
-                    },
-                    title: 'Probo Senserit Id Mea, Ut Sed Malis Postea,',
-                    hyphenatedTitle:
-                      'Probo Senserit Id Mea, Ut Sed Malis Postea,',
-                    summary: 'Bla bla bla',
-                    theme: null,
-                    isLiked: false,
-                    likedCount: 0,
-                    videos: [],
-                    audios: [],
-                  },
-                },
-              ],
-            },
-          },
-        },
-      },
-    };
-
-    const additionalMocks = mock.result.data.node.childContentItemsConnection.edges.map(
-      ({ node }) => ({
-        request: {
-          query: GET_CONTENT_CARD,
-          variables: { contentId: node.id },
-        },
-        result: {
-          data: {
-            node: {
-              ...node,
-              coverImage: {
-                name: 'Boom',
-                ...node.coverImage,
-              },
-            },
-          },
-        },
-      })
-    );
-
-    const initialTree = await renderWithApolloData(
-      <Providers
-        MockedProvider={MockedProvider}
-        mocks={[mock, ...additionalMocks]}
-      >
-        <ContentFeed route={{ params: { itemId: 'ContentChannel:123' } }} />
-      </Providers>
-    );
-    const tree = await renderWithApolloData(
-      <Providers
-        MockedProvider={MockedProvider}
-        mocks={[mock, ...additionalMocks]}
-      >
-        <ContentFeed route={{ params: { itemId: 'ContentChannel:123' } }} />
-      </Providers>,
-      initialTree
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/content-feed/getContentFeed.js b/apolloschurchapp/src/content-feed/getContentFeed.js
deleted file mode 100644
index 38ed31fb..00000000
--- a/apolloschurchapp/src/content-feed/getContentFeed.js
+++ /dev/null
@@ -1,22 +0,0 @@
-import gql from 'graphql-tag';
-import ApollosConfig from '@apollosproject/config';
-
-export default gql`
-  query getContentFeed($itemId: ID!, $after: String, $first: Int) {
-    node(id: $itemId) {
-      ... on ContentChannel {
-        childContentItemsConnection(after: $after, first: $first) {
-          pageInfo {
-            endCursor
-          }
-          edges {
-            node {
-              ...contentCardFragment
-            }
-          }
-        }
-      }
-    }
-  }
-  ${ApollosConfig.FRAGMENTS.CONTENT_CARD_FRAGMENT}
-`;
diff --git a/apolloschurchapp/src/content-feed/index.js b/apolloschurchapp/src/content-feed/index.js
deleted file mode 100644
index ea033d8d..00000000
--- a/apolloschurchapp/src/content-feed/index.js
+++ /dev/null
@@ -1,78 +0,0 @@
-import React, { PureComponent } from 'react';
-import { Query } from '@apollo/client/react/components';
-import { get } from 'lodash';
-import PropTypes from 'prop-types';
-
-import {
-  ContentCardConnected,
-  fetchMoreResolver,
-} from '@apollosproject/ui-connected';
-
-import { BackgroundView, FeedView } from '@apollosproject/ui-kit';
-
-import GET_CONTENT_FEED from './getContentFeed';
-/**
- * This is where the component description lives
- * A FeedView wrapped in a query to pull content data.
- */
-class ContentFeed extends PureComponent {
-  static propTypes = {
-    /** Functions passed down from React Navigation to use in navigating to/from
-     * items in the feed.
-     */
-    navigation: PropTypes.shape({
-      navigate: PropTypes.func,
-    }),
-    route: PropTypes.shape({
-      params: PropTypes.shape({
-        itemId: PropTypes.string,
-      }),
-    }),
-  };
-
-  /** Function that is called when a card in the feed is pressed.
-   * Takes the user to the ContentSingle
-   */
-  handleOnPress = (item) =>
-    this.props.navigation.navigate('ContentSingle', {
-      itemId: item.id,
-      sharing: item.sharing,
-    });
-
-  render() {
-    const { route } = this.props;
-    const { itemId } = route.params;
-    return (
-      <BackgroundView>
-        <Query
-          query={GET_CONTENT_FEED}
-          variables={{ itemId }}
-          fetchPolicy="cache-and-network"
-        >
-          {({ loading, error, data, refetch, fetchMore, variables }) => (
-            <FeedView
-              ListItemComponent={ContentCardConnected}
-              content={get(
-                data,
-                'node.childContentItemsConnection.edges',
-                []
-              ).map((edge) => edge.node)}
-              fetchMore={fetchMoreResolver({
-                collectionName: 'node.childContentItemsConnection',
-                fetchMore,
-                variables,
-                data,
-              })}
-              isLoading={loading}
-              error={error}
-              refetch={refetch}
-              onPressItem={this.handleOnPress}
-            />
-          )}
-        </Query>
-      </BackgroundView>
-    );
-  }
-}
-
-export default ContentFeed;
diff --git a/apolloschurchapp/src/index.js b/apolloschurchapp/src/index.js
index 65f157f3..2d5a93ea 100644
--- a/apolloschurchapp/src/index.js
+++ b/apolloschurchapp/src/index.js
@@ -22,9 +22,9 @@ import Passes from '@apollosproject/ui-passes';
 import { MapViewConnected as Location } from '@apollosproject/ui-mapview';
 import Auth, { ProtectedRoute } from '@apollosproject/ui-auth';
 
+import { ContentFeedConnected } from '@apollosproject/ui-connected';
 import Providers from './Providers';
 import ContentSingle from './content-single';
-import ContentFeed from './content-feed';
 import Event from './event';
 import Tabs from './tabs';
 import LandingScreen from './ui/LandingScreen';
@@ -93,7 +93,7 @@ const App = () => (
             }}
           />
           <Screen
-            component={ContentFeed}
+            component={ContentFeedConnected}
             name="ContentFeed"
             options={({ route }) => ({
               title: route.params.itemTitle || 'Content Feed',
diff --git a/apolloschurchapp/src/tabs/Tab.js b/apolloschurchapp/src/tabs/Tab.js
deleted file mode 100644
index 2c6933f5..00000000
--- a/apolloschurchapp/src/tabs/Tab.js
+++ /dev/null
@@ -1,81 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-import { gql, useQuery } from '@apollo/client';
-
-import { BackgroundView } from '@apollosproject/ui-kit';
-import {
-  FeaturesFeedConnected,
-  FEATURE_FEED_ACTION_MAP,
-  RockAuthedWebBrowser,
-} from '@apollosproject/ui-connected';
-
-import { createNativeStackNavigator } from 'react-native-screens/native-stack';
-import { useNavigation } from '@react-navigation/native';
-
-import ContentFeed from '../content-feed';
-
-function handleOnPress({ action, ...props }) {
-  if (FEATURE_FEED_ACTION_MAP[action]) {
-    FEATURE_FEED_ACTION_MAP[action]({ action, ...props });
-  }
-}
-
-export const createFeatureFeedTab = ({ tabName, screenOptions, feedName }) => {
-  const TabStack = createNativeStackNavigator();
-  const TabComponent = () => <Tab tab={feedName} />;
-  const TabNav = () => (
-    <TabStack.Navigator
-      screenOptions={{
-        headerHideShadow: true,
-        headerLargeTitle: true,
-        ...screenOptions,
-      }}
-    >
-      <TabStack.Screen name={tabName} component={TabComponent} />
-      <TabStack.Screen
-        component={ContentFeed}
-        name="ContentFeed"
-        options={({ route }) => ({
-          title: route?.params?.itemTitle || 'Content Feed',
-          stackPresentation: 'push',
-        })}
-      />
-    </TabStack.Navigator>
-  );
-  return TabNav;
-};
-
-const Tab = ({ tab }) => {
-  const navigation = useNavigation();
-  const { data } = useQuery(
-    gql`
-      query GetTabFeatures($tab: Tab!) {
-        tabFeedFeatures(tab: $tab) {
-          id
-        }
-      }
-    `,
-    { variables: { tab }, fetchPolicy: 'cache-and-network' }
-  );
-
-  return (
-    <RockAuthedWebBrowser>
-      {(openUrl) => (
-        <BackgroundView>
-          <FeaturesFeedConnected
-            openUrl={openUrl}
-            featureFeedId={data?.tabFeedFeatures?.id}
-            onPressActionItem={handleOnPress}
-            navigation={navigation}
-          />
-        </BackgroundView>
-      )}
-    </RockAuthedWebBrowser>
-  );
-};
-
-Tab.propTypes = {
-  tab: PropTypes.string.isRequired,
-};
-
-export default Tab;
diff --git a/apolloschurchapp/src/tabs/index.js b/apolloschurchapp/src/tabs/index.js
index 574a6b3d..53dfb2a5 100644
--- a/apolloschurchapp/src/tabs/index.js
+++ b/apolloschurchapp/src/tabs/index.js
@@ -4,11 +4,10 @@ import { useNavigation } from '@react-navigation/native';
 import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';
 import { styled, NavigationService } from '@apollosproject/ui-kit';
 import { useApolloClient } from '@apollo/client';
-
+import { createFeatureFeedTab } from '@apollosproject/ui-connected';
 import { checkOnboardingStatusAndNavigate } from '@apollosproject/ui-onboarding';
 import { SearchButton } from '../ui/Search';
 import { ONBOARDING_VERSION } from '../ui/Onboarding';
-import { createFeatureFeedTab } from './Tab';
 import Connect from './connect';
 import tabBarIcon from './tabBarIcon';
 
