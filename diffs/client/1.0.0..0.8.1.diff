diff --git a/apolloschurchapp/.env.production b/apolloschurchapp/.env.production
index 8f2e35f..435f922 100644
--- a/apolloschurchapp/.env.production
+++ b/apolloschurchapp/.env.production
@@ -1,5 +1,4 @@
 APP_DATA_URL=https://apollos-church-api-herokuapp-com.global.ssl.fastly.net/
 ONE_SIGNAL_KEY=$ONE_SIGNAL_KEY
 GOOGLE_MAPS_API_KEY=$GOOGLE_MAPS_API_KEY
-STORYBOOK=$STORYBOOK
-SCHEMA_VERSION=$SCHEMA_VERSION
\ No newline at end of file
+ANDROID_URL=doesnotmatter
diff --git a/apolloschurchapp/.npmignore b/apolloschurchapp/.npmignore
new file mode 100644
index 0000000..93f3929
--- /dev/null
+++ b/apolloschurchapp/.npmignore
@@ -0,0 +1,2 @@
+*
+!lib/**
diff --git a/apolloschurchapp/android/app/build.gradle b/apolloschurchapp/android/app/build.gradle
index 245005a..597d14c 100644
--- a/apolloschurchapp/android/app/build.gradle
+++ b/apolloschurchapp/android/app/build.gradle
@@ -111,18 +111,14 @@ def enableProguardInReleaseBuilds = false
 
 android {
     compileSdkVersion rootProject.ext.compileSdkVersion
-
-    compileOptions {
-        sourceCompatibility JavaVersion.VERSION_1_8
-        targetCompatibility JavaVersion.VERSION_1_8
-    }
+    buildToolsVersion rootProject.ext.buildToolsVersion
 
     defaultConfig {
         applicationId "com.apolloschurch.app"
         minSdkVersion rootProject.ext.minSdkVersion
         targetSdkVersion rootProject.ext.targetSdkVersion
-        versionCode 14
-        versionName "1.0.0"
+        versionCode 5
+        versionName "0.8.0"
         ndk {
             abiFilters "armeabi-v7a", "x86"
         }
@@ -133,7 +129,7 @@ android {
             reset()
             enable enableSeparateBuildPerCPUArchitecture
             universalApk false  // If true, also generate a universal APK
-            include "armeabi-v7a", "x86", "arm64-v8a", "x86_64"
+            include "armeabi-v7a", "x86", "arm64-v8a"
         }
     }
     buildTypes {
@@ -147,7 +143,7 @@ android {
         variant.outputs.each { output ->
             // For each separate APK per architecture, set a unique version code as described here:
             // http://tools.android.com/tech-docs/new-build-system/user-guide/apk-splits
-            def versionCodes = ["armeabi-v7a":1, "x86":2, "arm64-v8a": 3, "x86_64": 4]
+            def versionCodes = ["armeabi-v7a":1, "x86":2, "arm64-v8a": 3]
             def abi = output.getFilter(OutputFile.ABI)
             if (abi != null) {  // null for the universal-debug, universal-release variants
                 output.versionCodeOverride =
@@ -158,13 +154,8 @@ android {
 }
 
 dependencies {
-       // added this and the two google play packages below when upgraded rn-maps to 0.24.2
-    implementation(project(':react-native-maps')){
-      exclude group: 'com.google.android.gms', module: 'play-services-base'
-      exclude group: 'com.google.android.gms', module: 'play-services-maps'
-    }
-    implementation 'com.google.android.gms:play-services-base:16.1.0'
-    implementation 'com.google.android.gms:play-services-maps:16.1.0'
+    implementation project(':react-native-passkit-wallet')
+    implementation project(':react-native-maps')
     implementation project(':rn-fetch-blob')
     implementation project(':react-native-webview')
     implementation project(':react-native-video')
@@ -176,6 +167,7 @@ dependencies {
     implementation project(':react-native-linear-gradient')
     implementation project(':react-native-image-picker')
     implementation project(':react-native-device-info')
+    implementation project(':react-native-custom-tabs')
     implementation project(':react-native-config')
     implementation fileTree(dir: "libs", include: ["*.jar"])
     implementation "com.android.support:appcompat-v7:${rootProject.ext.supportLibVersion}"
diff --git a/apolloschurchapp/android/app/src/debug/AndroidManifest.xml b/apolloschurchapp/android/app/src/debug/AndroidManifest.xml
deleted file mode 100644
index fa26aa5..0000000
--- a/apolloschurchapp/android/app/src/debug/AndroidManifest.xml
+++ /dev/null
@@ -1,8 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<manifest xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:tools="http://schemas.android.com/tools">
-
-    <uses-permission android:name="android.permission.SYSTEM_ALERT_WINDOW"/>
-
-    <application android:usesCleartextTraffic="true" tools:targetApi="28" tools:ignore="GoogleAppIndexingWarning" />
-</manifest>
diff --git a/apolloschurchapp/android/app/src/main/AndroidManifest.xml b/apolloschurchapp/android/app/src/main/AndroidManifest.xml
index fd72c6c..7e91940 100644
--- a/apolloschurchapp/android/app/src/main/AndroidManifest.xml
+++ b/apolloschurchapp/android/app/src/main/AndroidManifest.xml
@@ -3,9 +3,10 @@
 
     <uses-permission android:name="android.permission.INTERNET" />
     <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
+    <uses-permission android:name="android.permission.SYSTEM_ALERT_WINDOW"/>
     <uses-permission android:name="android.permission.CAMERA" />
     <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION"/>
-    <uses-permission android:name="android.permission.FOREGROUND_SERVICE" />
+
 
     <application
       android:name=".MainApplication"
@@ -20,7 +21,7 @@
       <activity
         android:name=".LaunchActivity"
         android:theme="@style/LaunchTheme"
-        android:label="@string/app_name">
+        android:label="Apollos Church">
         <intent-filter>
             <action android:name="android.intent.action.MAIN" />
             <category android:name="android.intent.category.LAUNCHER" />
@@ -30,7 +31,7 @@
           <action android:name="android.intent.action.VIEW" />
           <category android:name="android.intent.category.DEFAULT" />
           <category android:name="android.intent.category.BROWSABLE" />
-          <data android:scheme="peopleapp" android:host="people" />
+          <data android:scheme="peopleapp" android:host="people" /> // A
         </intent-filter>
       </activity>
       <activity
diff --git a/apolloschurchapp/android/app/src/main/java/com/apolloschurchapp/MainApplication.java b/apolloschurchapp/android/app/src/main/java/com/apolloschurchapp/MainApplication.java
index aa318e0..dbaf07b 100644
--- a/apolloschurchapp/android/app/src/main/java/com/apolloschurchapp/MainApplication.java
+++ b/apolloschurchapp/android/app/src/main/java/com/apolloschurchapp/MainApplication.java
@@ -3,18 +3,20 @@ package com.apolloschurchapp;
 import android.app.Application;
 
 import com.facebook.react.ReactApplication;
+import com.mybdesign.RNPassKit.RNPassKitPackage;
 import com.airbnb.android.react.maps.MapsPackage;
 import com.RNFetchBlob.RNFetchBlobPackage;
 import com.reactnativecommunity.webview.RNCWebViewPackage;
 import com.brentvatne.react.ReactVideoPackage;
 import com.horcrux.svg.SvgPackage;
 import org.devio.rn.splashscreen.SplashScreenReactPackage;
-import com.swmansion.rnscreens.RNScreensPackage;
+import com.swmansion.rnscreens.RNScreenPackage;
 import com.geektime.rnonesignalandroid.ReactNativeOneSignalPackage;
 import com.tanguyantoine.react.MusicControl;
 import com.BV.LinearGradient.LinearGradientPackage;
 import com.imagepicker.ImagePickerPackage;
 import com.learnium.RNDeviceInfo.RNDeviceInfo;
+import com.github.droibit.android.reactnative.customtabs.CustomTabsPackage;
 import com.lugg.ReactNativeConfig.ReactNativeConfigPackage;
 import com.facebook.react.ReactNativeHost;
 import com.facebook.react.ReactPackage;
@@ -36,18 +38,20 @@ public class MainApplication extends Application implements ReactApplication {
     protected List<ReactPackage> getPackages() {
       return Arrays.<ReactPackage>asList(
           new MainReactPackage(),
+            new RNPassKitPackage(),
             new MapsPackage(),
             new RNFetchBlobPackage(),
             new RNCWebViewPackage(),
             new ReactVideoPackage(),
             new SvgPackage(),
             new SplashScreenReactPackage(),
-            new RNScreensPackage(),
+            new RNScreenPackage(),
             new ReactNativeOneSignalPackage(),
             new MusicControl(),
             new LinearGradientPackage(),
             new ImagePickerPackage(),
             new RNDeviceInfo(),
+            new CustomTabsPackage(),
             new ReactNativeConfigPackage()
       );
     }
diff --git a/apolloschurchapp/android/app/src/main/res/drawable/background_splash.xml b/apolloschurchapp/android/app/src/main/res/drawable/background_splash.xml
index 19383f0..4f85728 100644
--- a/apolloschurchapp/android/app/src/main/res/drawable/background_splash.xml
+++ b/apolloschurchapp/android/app/src/main/res/drawable/background_splash.xml
@@ -2,7 +2,7 @@
 <layer-list xmlns:android="http://schemas.android.com/apk/res/android">
 
     <item
-        android:drawable="@color/primary"/>
+        android:drawable="@color/deep_water"/>
 
     <item
         android:width="95.28dp"
diff --git a/apolloschurchapp/android/app/src/main/res/layout/launch_screen.xml b/apolloschurchapp/android/app/src/main/res/layout/launch_screen.xml
index 6e78d8b..0009481 100644
--- a/apolloschurchapp/android/app/src/main/res/layout/launch_screen.xml
+++ b/apolloschurchapp/android/app/src/main/res/layout/launch_screen.xml
@@ -3,7 +3,7 @@
     android:orientation="vertical"
     android:layout_width="match_parent"
     android:layout_height="match_parent"
-    android:background="@color/primary"
+    android:background="@color/deep_water"
     android:gravity="center">
 
     <ImageView
diff --git a/apolloschurchapp/android/app/src/main/res/values-v21/styles.xml b/apolloschurchapp/android/app/src/main/res/values-v21/styles.xml
index 8cfc536..5a4019d 100644
--- a/apolloschurchapp/android/app/src/main/res/values-v21/styles.xml
+++ b/apolloschurchapp/android/app/src/main/res/values-v21/styles.xml
@@ -7,12 +7,12 @@
 
     <style name="LaunchTheme" parent="Theme.AppCompat.Light.NoActionBar">
         <item name="android:windowBackground">@drawable/background_splash</item>
-        <item name="android:statusBarColor">@color/primary</item>
+        <item name="android:statusBarColor">@color/deep_water</item>
     </style>
 
     <style name="SplashScreenTheme" parent="SplashScreen_SplashTheme">
-        <item name="android:statusBarColor">@color/primary</item>
-        <item name="colorPrimaryDark">@color/primary</item>
+        <item name="android:statusBarColor">@color/deep_water</item>
+        <item name="colorPrimaryDark">@color/deep_water</item>
     </style>
 
 </resources>
diff --git a/apolloschurchapp/android/app/src/main/res/values/colors.xml b/apolloschurchapp/android/app/src/main/res/values/colors.xml
index 62a0e92..348fc25 100644
--- a/apolloschurchapp/android/app/src/main/res/values/colors.xml
+++ b/apolloschurchapp/android/app/src/main/res/values/colors.xml
@@ -1,4 +1,4 @@
 <?xml version="1.0" encoding="utf-8"?>
 <resources>
-    <color name="primary">#00676D</color>
-</resources>
+    <color name="deep_water">#00676D</color>
+</resources>
\ No newline at end of file
diff --git a/apolloschurchapp/android/build.gradle b/apolloschurchapp/android/build.gradle
index 50a195a..8a238c8 100644
--- a/apolloschurchapp/android/build.gradle
+++ b/apolloschurchapp/android/build.gradle
@@ -2,10 +2,10 @@
 
 buildscript {
     ext {
-        buildToolsVersion = "28.0.3"
+        buildToolsVersion = "28.0.2"
         minSdkVersion = 16
         compileSdkVersion = 28
-        targetSdkVersion = 28
+        targetSdkVersion = 27
         supportLibVersion = "28.0.0"
     }
     repositories {
@@ -13,7 +13,7 @@ buildscript {
         jcenter()
     }
     dependencies {
-        classpath 'com.android.tools.build:gradle:3.3.1'
+        classpath 'com.android.tools.build:gradle:3.2.1'
 
         // NOTE: Do not place your application dependencies here; they belong
         // in the individual module build.gradle files
@@ -32,3 +32,9 @@ allprojects {
         maven { url "https://jitpack.io" }
     }
 }
+
+
+task wrapper(type: Wrapper) {
+    gradleVersion = '4.7'
+    distributionUrl = distributionUrl.replace("bin", "all")
+}
diff --git a/apolloschurchapp/android/gradle/wrapper/gradle-wrapper.properties b/apolloschurchapp/android/gradle/wrapper/gradle-wrapper.properties
index 019065d..73bb13d 100644
--- a/apolloschurchapp/android/gradle/wrapper/gradle-wrapper.properties
+++ b/apolloschurchapp/android/gradle/wrapper/gradle-wrapper.properties
@@ -2,4 +2,4 @@ distributionBase=GRADLE_USER_HOME
 distributionPath=wrapper/dists
 zipStoreBase=GRADLE_USER_HOME
 zipStorePath=wrapper/dists
-distributionUrl=https\://services.gradle.org/distributions/gradle-4.10.2-all.zip
+distributionUrl=https\://services.gradle.org/distributions/gradle-4.7-all.zip
diff --git a/apolloschurchapp/android/settings.gradle b/apolloschurchapp/android/settings.gradle
index d705770..60d41e3 100644
--- a/apolloschurchapp/android/settings.gradle
+++ b/apolloschurchapp/android/settings.gradle
@@ -1,4 +1,8 @@
 rootProject.name = 'apolloschurchapp'
+include ':react-native-passkit-wallet'
+project(':react-native-passkit-wallet').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-passkit-wallet/android')
+include ':react-native-maps'
+project(':react-native-maps').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-maps/lib/android')
 include ':react-native-maps'
 project(':react-native-maps').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-maps/lib/android')
 include ':rn-fetch-blob'
@@ -23,6 +27,8 @@ include ':react-native-image-picker'
 project(':react-native-image-picker').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-image-picker/android')
 include ':react-native-device-info'
 project(':react-native-device-info').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-device-info/android')
+include ':react-native-custom-tabs'
+project(':react-native-custom-tabs').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-custom-tabs/android')
 include ':react-native-config'
 project(':react-native-config').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-config/android')
 
diff --git a/apolloschurchapp/apollos.json b/apolloschurchapp/apollos.json
deleted file mode 100644
index eb28af7..0000000
--- a/apolloschurchapp/apollos.json
+++ /dev/null
@@ -1,4 +0,0 @@
-{
-    "version": "1.0.0",
-    "environment": "client"
-}
\ No newline at end of file
diff --git a/apolloschurchapp/appcenter-pre-build.sh b/apolloschurchapp/appcenter-pre-build.sh
index a9348f2..c666ab2 100644
--- a/apolloschurchapp/appcenter-pre-build.sh
+++ b/apolloschurchapp/appcenter-pre-build.sh
@@ -6,4 +6,3 @@ cp $droid_dir/gradle.properties.appcenter $droid_dir/gradle.properties
 
 cd ../../
 yarn
-yarn lerna run generate-stories
\ No newline at end of file
diff --git a/apolloschurchapp/index.js b/apolloschurchapp/index.js
index 6bfaa01..d009549 100644
--- a/apolloschurchapp/index.js
+++ b/apolloschurchapp/index.js
@@ -1,23 +1,6 @@
-import './polyfill'; // this can be removed when we upgrade to react-native 59
 import { AppRegistry, YellowBox } from 'react-native';
-import SplashScreen from 'react-native-splash-screen';
 
-import Config from 'react-native-config';
-import Storybook from './storybook';
-import MainApp from './src';
-
-const useStorybook = Config.STORYBOOK === 'true';
-
-let App = MainApp;
-if (useStorybook) {
-  App = Storybook;
-}
-
-// If there's an error before the splash screen goes away, you never see that error.
-// This tries to hide the splash screen so you can see the error.
-// Shouldnt't do anything in Prod.
-// Depending on the error, splash screen might not go away ;)
-global.ErrorUtils.setGlobalHandler(() => SplashScreen.hide());
+import App from './src';
 
 YellowBox.ignoreWarnings([
   'Warning: isMounted(...) is deprecated',
diff --git a/apolloschurchapp/ios/apolloschurchapp-tvOS/Info.plist b/apolloschurchapp/ios/apolloschurchapp-tvOS/Info.plist
index 997f96e..b0737ef 100644
--- a/apolloschurchapp/ios/apolloschurchapp-tvOS/Info.plist
+++ b/apolloschurchapp/ios/apolloschurchapp-tvOS/Info.plist
@@ -15,13 +15,13 @@
 	<key>CFBundlePackageType</key>
 	<string>APPL</string>
 	<key>CFBundleShortVersionString</key>
-	<string>1.0.0</string>
+	<string>0.7.0</string>
 	<key>CFBundleSignature</key>
 	<string>????</string>
 	<key>CFBundleVersion</key>
-	<string>14</string>
+	<string>5</string>
 	<key>LSRequiresIPhoneOS</key>
-	<true />
+	<true/>
 	<key>UILaunchStoryboardName</key>
 	<string>LaunchScreen</string>
 	<key>UIRequiredDeviceCapabilities</key>
@@ -35,17 +35,18 @@
 		<string>UIInterfaceOrientationLandscapeRight</string>
 	</array>
 	<key>UIViewControllerBasedStatusBarAppearance</key>
-	<false />
+	<false/>
 	<key>NSLocationWhenInUseUsageDescription</key>
-	<string />
+	<string></string>
 	<key>NSAppTransportSecurity</key>
+	<!--See http://ste.vn/2015/06/10/configuring-app-transport-security-ios-9-osx-10-11/ -->
 	<dict>
 		<key>NSExceptionDomains</key>
 		<dict>
 			<key>localhost</key>
 			<dict>
 				<key>NSExceptionAllowsInsecureHTTPLoads</key>
-				<true />
+				<true/>
 			</dict>
 		</dict>
 	</dict>
diff --git a/apolloschurchapp/ios/apolloschurchapp-tvOSTests/Info.plist b/apolloschurchapp/ios/apolloschurchapp-tvOSTests/Info.plist
index 90d34c1..e358b6d 100644
--- a/apolloschurchapp/ios/apolloschurchapp-tvOSTests/Info.plist
+++ b/apolloschurchapp/ios/apolloschurchapp-tvOSTests/Info.plist
@@ -15,10 +15,10 @@
 	<key>CFBundlePackageType</key>
 	<string>BNDL</string>
 	<key>CFBundleShortVersionString</key>
-	<string>1.0.0</string>
+	<string>0.7.0</string>
 	<key>CFBundleSignature</key>
 	<string>????</string>
 	<key>CFBundleVersion</key>
-	<string>14</string>
+	<string>5</string>
 </dict>
 </plist>
diff --git a/apolloschurchapp/ios/apolloschurchapp.xcodeproj/project.pbxproj b/apolloschurchapp/ios/apolloschurchapp.xcodeproj/project.pbxproj
index c1b6636..df3e4a6 100644
--- a/apolloschurchapp/ios/apolloschurchapp.xcodeproj/project.pbxproj
+++ b/apolloschurchapp/ios/apolloschurchapp.xcodeproj/project.pbxproj
@@ -5,6 +5,7 @@
 	};
 	objectVersion = 46;
 	objects = {
+
 /* Begin PBXBuildFile section */
 		00C302E51ABCBA2D00DB3ED1 /* libRCTActionSheet.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 00C302AC1ABCB8CE00DB3ED1 /* libRCTActionSheet.a */; };
 		00C302E71ABCBA2D00DB3ED1 /* libRCTGeolocation.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 00C302BA1ABCB90400DB3ED1 /* libRCTGeolocation.a */; };
@@ -40,6 +41,7 @@
 		2D16E6881FA4F8E400B85C8A /* libReact.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 2D16E6891FA4F8E400B85C8A /* libReact.a */; };
 		2DCD954D1E0B4F2C00145EB5 /* apolloschurchappTests.m in Sources */ = {isa = PBXBuildFile; fileRef = 00E356F21AD99517003FC87E /* apolloschurchappTests.m */; };
 		2DF0FFEE2056DD460020B375 /* libReact.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 3DAD3EA31DF850E9000B6D8A /* libReact.a */; };
+		470A7E49F0A8424780FFAE7B /* libDBCustomTabs.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 9DA3750D49B0422F9A4B45BE /* libDBCustomTabs.a */; };
 		4994C0DA2471456ABE1D0174 /* libRNAirplay.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 0BE434FF7E9549F392208DEF /* libRNAirplay.a */; };
 		4C19EE32F0B441CD93BB0172 /* libRCTOneSignal.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 0D480D95FC7F4569B8B934E3 /* libRCTOneSignal.a */; };
 		578FFEC1D7D54C9B871A9E5B /* Inter-UI-BlackItalic.otf in Resources */ = {isa = PBXBuildFile; fileRef = 5A5A2BC2998547F4816B82E4 /* Inter-UI-BlackItalic.otf */; };
@@ -354,6 +356,13 @@
 			remoteGlobalIDString = 3DF7F6AC203AA09B00D0EAB7;
 			remoteInfo = "ReactNativeConfig-tvOS";
 		};
+		79CEBFEF223011FE00D8F685 /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 6F1D5B192D1D4948B39D4BFE /* ReactNativeCustomTabs.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = DA7118681CC9158A0087DF95;
+			remoteInfo = DBCustomTabs;
+		};
 		79CEBFF2223011FE00D8F685 /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
 			containerPortal = 3923D6EFF26D4A53B8BDF8C6 /* RNAirplay.xcodeproj */;
@@ -554,12 +563,14 @@
 		63998175DB3B4506ACF27B92 /* ReactNativeConfig.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = ReactNativeConfig.xcodeproj; path = "../node_modules/react-native-config/ios/ReactNativeConfig.xcodeproj"; sourceTree = "<group>"; };
 		63F6EE53A9B44B4388B5F1C2 /* Inter-UI-Italic.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-Italic.otf"; path = "../assets/fonts/Inter-UI-Italic.otf"; sourceTree = "<group>"; };
 		67356E00D116467DA58DF3CC /* libRNSVG-tvOS.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = "libRNSVG-tvOS.a"; sourceTree = "<group>"; };
+		6F1D5B192D1D4948B39D4BFE /* ReactNativeCustomTabs.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = ReactNativeCustomTabs.xcodeproj; path = "../node_modules/react-native-custom-tabs/ios/ReactNativeCustomTabs.xcodeproj"; sourceTree = "<group>"; };
 		74625A1E54234FB7BE12070D /* libMusicControl-tvOS.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = "libMusicControl-tvOS.a"; sourceTree = "<group>"; };
 		78C398B01ACF4ADC00677621 /* RCTLinking.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = RCTLinking.xcodeproj; path = "../node_modules/react-native/Libraries/LinkingIOS/RCTLinking.xcodeproj"; sourceTree = "<group>"; };
 		7A505BEDA0674A7F9DD875ED /* libRNDeviceInfo-tvOS.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = "libRNDeviceInfo-tvOS.a"; sourceTree = "<group>"; };
 		832341B01AAA6A8300B99B32 /* RCTText.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = RCTText.xcodeproj; path = "../node_modules/react-native/Libraries/Text/RCTText.xcodeproj"; sourceTree = "<group>"; };
 		97222E2EB5E54C7FA6104218 /* libReactNativeConfig-tvOS.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = "libReactNativeConfig-tvOS.a"; sourceTree = "<group>"; };
 		9862436C289A498D8B2E6201 /* libAirMaps.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libAirMaps.a; sourceTree = "<group>"; };
+		9DA3750D49B0422F9A4B45BE /* libDBCustomTabs.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libDBCustomTabs.a; sourceTree = "<group>"; };
 		9F0EC3F23A3F4FFBBBC6583A /* libBVLinearGradient.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libBVLinearGradient.a; sourceTree = "<group>"; };
 		A44246D0E44E48C4B8335DBD /* libRNScreens.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libRNScreens.a; sourceTree = "<group>"; };
 		A460FD7884FD4574A818005A /* Inter-UI-MediumItalic.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-MediumItalic.otf"; path = "../assets/fonts/Inter-UI-MediumItalic.otf"; sourceTree = "<group>"; };
@@ -610,6 +621,7 @@
 				139FDEF61B0652A700C62182 /* libRCTWebSocket.a in Frameworks */,
 				4994C0DA2471456ABE1D0174 /* libRNAirplay.a in Frameworks */,
 				A975E0B94A5D44AEB410E546 /* libReactNativeConfig.a in Frameworks */,
+				470A7E49F0A8424780FFAE7B /* libDBCustomTabs.a in Frameworks */,
 				CFE4716D4F6D4ABF9ED485AC /* libRNDeviceInfo.a in Frameworks */,
 				62BCE95D7F6B4F37B3CB4265 /* libRNImagePicker.a in Frameworks */,
 				1E6618B697C649BB9FCD362E /* libBVLinearGradient.a in Frameworks */,
@@ -900,6 +912,14 @@
 			name = Products;
 			sourceTree = "<group>";
 		};
+		79CEBFD1223011FE00D8F685 /* Products */ = {
+			isa = PBXGroup;
+			children = (
+				79CEBFF0223011FE00D8F685 /* libDBCustomTabs.a */,
+			);
+			name = Products;
+			sourceTree = "<group>";
+		};
 		79CEBFD3223011FE00D8F685 /* Products */ = {
 			isa = PBXGroup;
 			children = (
@@ -984,6 +1004,7 @@
 				139FDEE61B06529A00C62182 /* RCTWebSocket.xcodeproj */,
 				3923D6EFF26D4A53B8BDF8C6 /* RNAirplay.xcodeproj */,
 				63998175DB3B4506ACF27B92 /* ReactNativeConfig.xcodeproj */,
+				6F1D5B192D1D4948B39D4BFE /* ReactNativeCustomTabs.xcodeproj */,
 				39E16D6487A34F4D9B8C6EC1 /* RNDeviceInfo.xcodeproj */,
 				629FCAAD128E41B4BAE2BCF4 /* RNImagePicker.xcodeproj */,
 				43F1D28CACD04757A0FB29A6 /* BVLinearGradient.xcodeproj */,
@@ -1151,10 +1172,6 @@
 						CreatedOnToolsVersion = 6.2;
 						TestTargetID = 13B07F861A680F5B00A75B9A;
 					};
-					13B07F861A680F5B00A75B9A = {
-						DevelopmentTeam = 7TM8C6252Z;
-						ProvisioningStyle = Automatic;
-					};
 					2D02E47A1E0B4A5D006451C7 = {
 						CreatedOnToolsVersion = 8.2.1;
 						ProvisioningStyle = Automatic;
@@ -1171,7 +1188,6 @@
 			developmentRegion = English;
 			hasScannedForEncodings = 0;
 			knownRegions = (
-				English,
 				en,
 				Base,
 			);
@@ -1251,6 +1267,10 @@
 					ProductGroup = 79CEBFCF223011FE00D8F685 /* Products */;
 					ProjectRef = 63998175DB3B4506ACF27B92 /* ReactNativeConfig.xcodeproj */;
 				},
+				{
+					ProductGroup = 79CEBFD1223011FE00D8F685 /* Products */;
+					ProjectRef = 6F1D5B192D1D4948B39D4BFE /* ReactNativeCustomTabs.xcodeproj */;
+				},
 				{
 					ProductGroup = 79CEBFCD223011FE00D8F685 /* Products */;
 					ProjectRef = 3923D6EFF26D4A53B8BDF8C6 /* RNAirplay.xcodeproj */;
@@ -1569,6 +1589,13 @@
 			remoteRef = 79CEBFEC223011FE00D8F685 /* PBXContainerItemProxy */;
 			sourceTree = BUILT_PRODUCTS_DIR;
 		};
+		79CEBFF0223011FE00D8F685 /* libDBCustomTabs.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libDBCustomTabs.a;
+			remoteRef = 79CEBFEF223011FE00D8F685 /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
 		79CEBFF3223011FE00D8F685 /* libRNAirplay.a */ = {
 			isa = PBXReferenceProxy;
 			fileType = archive.ar;
@@ -1870,6 +1897,7 @@
 					"$(inherited)",
 					"$(SRCROOT)/../node_modules/react-native-airplay-btn/ios",
 					"$(SRCROOT)/../node_modules/react-native-config/ios/ReactNativeConfig",
+					"$(SRCROOT)/../node_modules/react-native-custom-tabs/ios/ReactNativeCustomTabs",
 					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
 					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
 					"$(SRCROOT)/../node_modules/react-native-linear-gradient/BVLinearGradient",
@@ -1890,6 +1918,7 @@
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @loader_path/Frameworks";
 				LIBRARY_SEARCH_PATHS = (
 					"$(inherited)",
+					"\"$(SRCROOT)/$(TARGET_NAME)\"",
 				);
 				OTHER_LDFLAGS = (
 					"-ObjC",
@@ -1910,6 +1939,7 @@
 					"$(inherited)",
 					"$(SRCROOT)/../node_modules/react-native-airplay-btn/ios",
 					"$(SRCROOT)/../node_modules/react-native-config/ios/ReactNativeConfig",
+					"$(SRCROOT)/../node_modules/react-native-custom-tabs/ios/ReactNativeCustomTabs",
 					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
 					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
 					"$(SRCROOT)/../node_modules/react-native-linear-gradient/BVLinearGradient",
@@ -1930,6 +1960,7 @@
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @loader_path/Frameworks";
 				LIBRARY_SEARCH_PATHS = (
 					"$(inherited)",
+					"\"$(SRCROOT)/$(TARGET_NAME)\"",
 				);
 				OTHER_LDFLAGS = (
 					"-ObjC",
@@ -1945,13 +1976,13 @@
 			isa = XCBuildConfiguration;
 			buildSettings = {
 				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
-				CURRENT_PROJECT_VERSION = 10;
+				CURRENT_PROJECT_VERSION = 1;
 				DEAD_CODE_STRIPPING = NO;
-				DEVELOPMENT_TEAM = 7TM8C6252Z;
 				HEADER_SEARCH_PATHS = (
 					"$(inherited)",
 					"$(SRCROOT)/../node_modules/react-native-airplay-btn/ios",
 					"$(SRCROOT)/../node_modules/react-native-config/ios/ReactNativeConfig",
+					"$(SRCROOT)/../node_modules/react-native-custom-tabs/ios/ReactNativeCustomTabs",
 					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
 					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
 					"$(SRCROOT)/../node_modules/react-native-linear-gradient/BVLinearGradient",
@@ -1976,7 +2007,6 @@
 				);
 				PRODUCT_BUNDLE_IDENTIFIER = "org.reactjs.native.example.$(PRODUCT_NAME:rfc1034identifier)";
 				PRODUCT_NAME = apolloschurchapp;
-				PROVISIONING_PROFILE_SPECIFIER = "";
 				VERSIONING_SYSTEM = "apple-generic";
 			};
 			name = Debug;
@@ -1985,11 +2015,12 @@
 			isa = XCBuildConfiguration;
 			buildSettings = {
 				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
-				CURRENT_PROJECT_VERSION = 10;
+				CURRENT_PROJECT_VERSION = 1;
 				HEADER_SEARCH_PATHS = (
 					"$(inherited)",
 					"$(SRCROOT)/../node_modules/react-native-airplay-btn/ios",
 					"$(SRCROOT)/../node_modules/react-native-config/ios/ReactNativeConfig",
+					"$(SRCROOT)/../node_modules/react-native-custom-tabs/ios/ReactNativeCustomTabs",
 					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
 					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
 					"$(SRCROOT)/../node_modules/react-native-linear-gradient/BVLinearGradient",
@@ -2014,7 +2045,6 @@
 				);
 				PRODUCT_BUNDLE_IDENTIFIER = "org.reactjs.native.example.$(PRODUCT_NAME:rfc1034identifier)";
 				PRODUCT_NAME = apolloschurchapp;
-				PROVISIONING_PROFILE_SPECIFIER = "";
 				VERSIONING_SYSTEM = "apple-generic";
 			};
 			name = Release;
@@ -2035,6 +2065,7 @@
 					"$(inherited)",
 					"$(SRCROOT)/../node_modules/react-native-airplay-btn/ios",
 					"$(SRCROOT)/../node_modules/react-native-config/ios/ReactNativeConfig",
+					"$(SRCROOT)/../node_modules/react-native-custom-tabs/ios/ReactNativeCustomTabs",
 					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
 					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
 					"$(SRCROOT)/../node_modules/react-native-linear-gradient/BVLinearGradient",
@@ -2054,6 +2085,7 @@
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
 				LIBRARY_SEARCH_PATHS = (
 					"$(inherited)",
+					"\"$(SRCROOT)/$(TARGET_NAME)\"",
 				);
 				OTHER_LDFLAGS = (
 					"-ObjC",
@@ -2083,6 +2115,7 @@
 					"$(inherited)",
 					"$(SRCROOT)/../node_modules/react-native-airplay-btn/ios",
 					"$(SRCROOT)/../node_modules/react-native-config/ios/ReactNativeConfig",
+					"$(SRCROOT)/../node_modules/react-native-custom-tabs/ios/ReactNativeCustomTabs",
 					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
 					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
 					"$(SRCROOT)/../node_modules/react-native-linear-gradient/BVLinearGradient",
@@ -2102,6 +2135,7 @@
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
 				LIBRARY_SEARCH_PATHS = (
 					"$(inherited)",
+					"\"$(SRCROOT)/$(TARGET_NAME)\"",
 				);
 				OTHER_LDFLAGS = (
 					"-ObjC",
@@ -2130,6 +2164,7 @@
 					"$(inherited)",
 					"$(SRCROOT)/../node_modules/react-native-airplay-btn/ios",
 					"$(SRCROOT)/../node_modules/react-native-config/ios/ReactNativeConfig",
+					"$(SRCROOT)/../node_modules/react-native-custom-tabs/ios/ReactNativeCustomTabs",
 					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
 					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
 					"$(SRCROOT)/../node_modules/react-native-linear-gradient/BVLinearGradient",
@@ -2149,6 +2184,7 @@
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @loader_path/Frameworks";
 				LIBRARY_SEARCH_PATHS = (
 					"$(inherited)",
+					"\"$(SRCROOT)/$(TARGET_NAME)\"",
 				);
 				OTHER_LDFLAGS = (
 					"-ObjC",
@@ -2177,6 +2213,7 @@
 					"$(inherited)",
 					"$(SRCROOT)/../node_modules/react-native-airplay-btn/ios",
 					"$(SRCROOT)/../node_modules/react-native-config/ios/ReactNativeConfig",
+					"$(SRCROOT)/../node_modules/react-native-custom-tabs/ios/ReactNativeCustomTabs",
 					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
 					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
 					"$(SRCROOT)/../node_modules/react-native-linear-gradient/BVLinearGradient",
@@ -2196,6 +2233,7 @@
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @loader_path/Frameworks";
 				LIBRARY_SEARCH_PATHS = (
 					"$(inherited)",
+					"\"$(SRCROOT)/$(TARGET_NAME)\"",
 				);
 				OTHER_LDFLAGS = (
 					"-ObjC",
diff --git a/apolloschurchapp/ios/apolloschurchapp/AppDelegate.h b/apolloschurchapp/ios/apolloschurchapp/AppDelegate.h
index 2726d5e..4b5644f 100644
--- a/apolloschurchapp/ios/apolloschurchapp/AppDelegate.h
+++ b/apolloschurchapp/ios/apolloschurchapp/AppDelegate.h
@@ -5,10 +5,9 @@
  * LICENSE file in the root directory of this source tree.
  */
 
-#import <React/RCTBridgeDelegate.h>
 #import <UIKit/UIKit.h>
 
-@interface AppDelegate : UIResponder <UIApplicationDelegate, RCTBridgeDelegate>
+@interface AppDelegate : UIResponder <UIApplicationDelegate>
 
 @property (nonatomic, strong) UIWindow *window;
 
diff --git a/apolloschurchapp/ios/apolloschurchapp/AppDelegate.m b/apolloschurchapp/ios/apolloschurchapp/AppDelegate.m
index b9f7b95..af4f8d1 100644
--- a/apolloschurchapp/ios/apolloschurchapp/AppDelegate.m
+++ b/apolloschurchapp/ios/apolloschurchapp/AppDelegate.m
@@ -7,8 +7,6 @@
 
 #import "AppDelegate.h"
 
-
-#import <React/RCTBridge.h>
 #import <React/RCTBundleURLProvider.h>
 #import <React/RCTRootView.h>
 #import "RNSplashScreen.h"
@@ -36,12 +34,14 @@ - (BOOL)application:(UIApplication *)application continueUserActivity:(NSUserAct
 
 - (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions
 {
+  NSURL *jsCodeLocation;
 
-  RCTBridge *bridge = [[RCTBridge alloc] initWithDelegate:self launchOptions:launchOptions];
-  RCTRootView *rootView = [[RCTRootView alloc] initWithBridge:bridge
-                                                   moduleName:@"apolloschurchapp"
-                                            initialProperties:nil];
+  jsCodeLocation = [[RCTBundleURLProvider sharedSettings] jsBundleURLForBundleRoot:@"index" fallbackResource:nil];
 
+  RCTRootView *rootView = [[RCTRootView alloc] initWithBundleURL:jsCodeLocation
+                                                      moduleName:@"apolloschurchapp"
+                                               initialProperties:nil
+                                                   launchOptions:launchOptions];
   rootView.backgroundColor = [[UIColor alloc] initWithRed:1.0f green:1.0f blue:1.0f alpha:1];
 
   self.window = [[UIWindow alloc] initWithFrame:[UIScreen mainScreen].bounds];
@@ -54,13 +54,4 @@ - (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(
   return YES;
 }
 
-- (NSURL *)sourceURLForBridge:(RCTBridge *)bridge
-{
-#if DEBUG
-  return [[RCTBundleURLProvider sharedSettings] jsBundleURLForBundleRoot:@"index" fallbackResource:nil];
-#else
-  return [[NSBundle mainBundle] URLForResource:@"main" withExtension:@"jsbundle"];
-#endif
-}
-
 @end
diff --git a/apolloschurchapp/ios/apolloschurchapp/Base.lproj/LaunchScreen.xib b/apolloschurchapp/ios/apolloschurchapp/Base.lproj/LaunchScreen.xib
index 4ca705c..035b378 100644
--- a/apolloschurchapp/ios/apolloschurchapp/Base.lproj/LaunchScreen.xib
+++ b/apolloschurchapp/ios/apolloschurchapp/Base.lproj/LaunchScreen.xib
@@ -1,11 +1,11 @@
 <?xml version="1.0" encoding="UTF-8"?>
-<document type="com.apple.InterfaceBuilder3.CocoaTouch.XIB" version="3.0" toolsVersion="14490.70" targetRuntime="iOS.CocoaTouch" propertyAccessControl="none" useAutolayout="YES" launchScreen="YES" useTraitCollections="YES" colorMatched="YES">
+<document type="com.apple.InterfaceBuilder3.CocoaTouch.XIB" version="3.0" toolsVersion="14113" targetRuntime="iOS.CocoaTouch" propertyAccessControl="none" useAutolayout="YES" launchScreen="YES" useTraitCollections="YES" colorMatched="YES">
     <device id="retina5_5" orientation="portrait">
         <adaptation id="fullscreen"/>
     </device>
     <dependencies>
         <deployment identifier="iOS"/>
-        <plugIn identifier="com.apple.InterfaceBuilder.IBCocoaTouchPlugin" version="14490.49"/>
+        <plugIn identifier="com.apple.InterfaceBuilder.IBCocoaTouchPlugin" version="14088"/>
         <capability name="documents saved in the Xcode 8 format" minToolsVersion="8.0"/>
     </dependencies>
     <objects>
@@ -15,22 +15,18 @@
             <rect key="frame" x="0.0" y="0.0" width="414" height="736"/>
             <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
             <subviews>
-                <imageView clipsSubviews="YES" userInteractionEnabled="NO" contentMode="scaleToFill" horizontalHuggingPriority="251" verticalHuggingPriority="251" fixedFrame="YES" image="splash_bg" translatesAutoresizingMaskIntoConstraints="NO" id="iGM-E3-lqn">
-                    <rect key="frame" x="-12" y="-10" width="437" height="758"/>
-                    <autoresizingMask key="autoresizingMask" flexibleMinX="YES" widthSizable="YES" flexibleMaxX="YES" flexibleMinY="YES" heightSizable="YES" flexibleMaxY="YES"/>
-                </imageView>
                 <imageView userInteractionEnabled="NO" contentMode="scaleAspectFit" horizontalHuggingPriority="251" verticalHuggingPriority="251" fixedFrame="YES" image="splash-icon" translatesAutoresizingMaskIntoConstraints="NO" id="6Je-Yv-1Zj">
                     <rect key="frame" x="157" y="288" width="100" height="100"/>
                     <autoresizingMask key="autoresizingMask" flexibleMinX="YES" widthSizable="YES" flexibleMaxX="YES" flexibleMinY="YES" heightSizable="YES" flexibleMaxY="YES"/>
                 </imageView>
             </subviews>
+            <color key="backgroundColor" red="0.0" green="0.40392156862745099" blue="0.42745098039215684" alpha="1" colorSpace="custom" customColorSpace="sRGB"/>
             <nil key="simulatedStatusBarMetrics"/>
             <modalPageSheetSimulatedSizeMetrics key="simulatedDestinationMetrics"/>
-            <point key="canvasLocation" x="544.92753623188412" y="453.26086956521743"/>
+            <point key="canvasLocation" x="546" y="454"/>
         </view>
     </objects>
     <resources>
         <image name="splash-icon" width="94" height="99"/>
-        <image name="splash_bg" width="721" height="721"/>
     </resources>
-</document>
+</document>
\ No newline at end of file
diff --git a/apolloschurchapp/ios/apolloschurchapp/Images.xcassets/Contents.json b/apolloschurchapp/ios/apolloschurchapp/Images.xcassets/Contents.json
index da4a164..2d92bd5 100644
--- a/apolloschurchapp/ios/apolloschurchapp/Images.xcassets/Contents.json
+++ b/apolloschurchapp/ios/apolloschurchapp/Images.xcassets/Contents.json
@@ -3,4 +3,4 @@
     "version" : 1,
     "author" : "xcode"
   }
-}
\ No newline at end of file
+}
diff --git a/apolloschurchapp/ios/apolloschurchapp/Images.xcassets/splash_bg.imageset/Contents.json b/apolloschurchapp/ios/apolloschurchapp/Images.xcassets/splash_bg.imageset/Contents.json
deleted file mode 100644
index 8939b14..0000000
--- a/apolloschurchapp/ios/apolloschurchapp/Images.xcassets/splash_bg.imageset/Contents.json
+++ /dev/null
@@ -1,21 +0,0 @@
-{
-  "images" : [
-    {
-      "idiom" : "universal",
-      "filename" : "splash_bg.png",
-      "scale" : "1x"
-    },
-    {
-      "idiom" : "universal",
-      "scale" : "2x"
-    },
-    {
-      "idiom" : "universal",
-      "scale" : "3x"
-    }
-  ],
-  "info" : {
-    "version" : 1,
-    "author" : "xcode"
-  }
-}
\ No newline at end of file
diff --git a/apolloschurchapp/ios/apolloschurchapp/Images.xcassets/splash_bg.imageset/splash_bg.png b/apolloschurchapp/ios/apolloschurchapp/Images.xcassets/splash_bg.imageset/splash_bg.png
deleted file mode 100644
index 315d8e09ac4fd5f51176da24982baad2115fa027..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 11471
zcmeAS@N?(olHy`uVBq!ia0y~yV7dsx9Be?5xhMa#GcYJHc)B=-RK&f#rYOYZDB^tZ
z=H*2eyj_=_M49$pT<`AhvTNUo(sMs$`WYCRSU3a}92yuJZ!=xbcd?(ho!L$Z#0N`w
zaPNsf-r*PD@CmAlk!f>-pzUN%uojS#E37>)ezCsrhiXtT;Fh>(JQHrLL+pW$b@2`V
zMzsTjWHjhTlg((B87(fLrQ>K(Ia*BsYueE&a<q8>Zf}h?4@R2@qs@cS=D}$5V6+!G
z+Jgqw1*1))(WcR8(`a<S4K^M*I@mZm&<Yw!9vwLu9XT0o9*j<`KxVE+Css!1<G|(N
zX!BsSc`({MK+L~8to{|vz`)Z5S_?2*U5-|lqt)eTQ(?5JFxpfYU9vU0Ty1m|WptS$
xWKrhmB+KX|3r!|j{weR`TWF71VC?vS+x%;O<pqA37~n!>22WQ%mvv4FO#m9H?QQ@7

diff --git a/apolloschurchapp/ios/apolloschurchapp/Info.plist b/apolloschurchapp/ios/apolloschurchapp/Info.plist
index aa3344d..c091996 100644
--- a/apolloschurchapp/ios/apolloschurchapp/Info.plist
+++ b/apolloschurchapp/ios/apolloschurchapp/Info.plist
@@ -2,6 +2,15 @@
 <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
 <plist version="1.0">
 <dict>
+	<key>CFBundleURLTypes</key>
+	<array>
+		<dict>
+			<key>CFBundleURLSchemes</key>
+			<array>
+				<string>apolloschurchapp</string>
+			</array>
+		</dict>
+	</array>
 	<key>CFBundleDevelopmentRegion</key>
 	<string>en</string>
 	<key>CFBundleDisplayName</key>
@@ -17,52 +26,51 @@
 	<key>CFBundlePackageType</key>
 	<string>APPL</string>
 	<key>CFBundleShortVersionString</key>
-	<string>1.0.0</string>
+	<string>0.8.0</string>
 	<key>CFBundleSignature</key>
 	<string>????</string>
-	<key>CFBundleURLTypes</key>
-	<array>
-		<dict>
-			<key>CFBundleURLSchemes</key>
-			<array>
-				<string>apolloschurchapp</string>
-			</array>
-		</dict>
-	</array>
 	<key>CFBundleVersion</key>
-	<string>15</string>
+	<string>6</string>
 	<key>ITSAppUsesNonExemptEncryption</key>
-	<false />
+	<false/>
 	<key>LSRequiresIPhoneOS</key>
-	<true />
+	<true/>
+	<key>NSLocationWhenInUseUsageDescription</key>
+	<string/>
+	<key>UILaunchStoryboardName</key>
+	<string>LaunchScreen</string>
+	<key>UIRequiredDeviceCapabilities</key>
+	<array>
+		<string>armv7</string>
+	</array>
+	<key>UIStatusBarStyle</key>
+	<string>UIStatusBarStyleLightContent</string>
+	<key>UISupportedInterfaceOrientations</key>
+	<array>
+		<string>UIInterfaceOrientationPortrait</string>
+		<string>UIInterfaceOrientationLandscapeLeft</string>
+		<string>UIInterfaceOrientationLandscapeRight</string>
+	</array>
+	<key>UIViewControllerBasedStatusBarAppearance</key>
+	<false/>
 	<key>NSAppTransportSecurity</key>
 	<dict>
 		<key>NSAllowsArbitraryLoads</key>
-		<true />
+		<true/>
 		<key>NSExceptionDomains</key>
 		<dict>
 			<key>embed.wistia.com</key>
 			<dict>
 				<key>NSExceptionAllowsInsecureHTTPLoads</key>
-				<true />
+				<true/>
 			</dict>
 			<key>localhost</key>
 			<dict>
 				<key>NSExceptionAllowsInsecureHTTPLoads</key>
-				<true />
+				<true/>
 			</dict>
 		</dict>
 	</dict>
-	<key>NSCameraUsageDescription</key>
-	<string>$(PRODUCT_NAME) would like to use your camera (for uploading profile pictures)</string>
-	<key>NSLocationWhenInUseUsageDescription</key>
-	<string />
-	<key>NSMicrophoneUsageDescription</key>
-	<string>$(PRODUCT_NAME) would like to your microphone (for videos)</string>
-	<key>NSPhotoLibraryAddUsageDescription</key>
-	<string>$(PRODUCT_NAME) would like to save photos to your photo gallery (for uploading profile pictures)</string>
-	<key>NSPhotoLibraryUsageDescription</key>
-	<string>$(PRODUCT_NAME) would like access to your photo gallery (for uploading profile pictures)</string>
 	<key>UIAppFonts</key>
 	<array>
 		<string>DroidSerif-Bold.ttf</string>
@@ -78,21 +86,13 @@
 		<string>Inter-UI-MediumItalic.otf</string>
 		<string>Inter-UI-Regular.otf</string>
 	</array>
-	<key>UILaunchStoryboardName</key>
-	<string>LaunchScreen</string>
-	<key>UIRequiredDeviceCapabilities</key>
-	<array>
-		<string>armv7</string>
-	</array>
-	<key>UIStatusBarStyle</key>
-	<string>UIStatusBarStyleLightContent</string>
-	<key>UISupportedInterfaceOrientations</key>
-	<array>
-		<string>UIInterfaceOrientationPortrait</string>
-		<string>UIInterfaceOrientationLandscapeLeft</string>
-		<string>UIInterfaceOrientationLandscapeRight</string>
-	</array>
-	<key>UIViewControllerBasedStatusBarAppearance</key>
-	<false />
+	<key>NSPhotoLibraryUsageDescription</key>
+	<string>$(PRODUCT_NAME) would like access to your photo gallery (for uploading profile pictures)</string>
+	<key>NSCameraUsageDescription</key>
+	<string>$(PRODUCT_NAME) would like to use your camera (for uploading profile pictures)</string>
+	<key>NSPhotoLibraryAddUsageDescription</key>
+	<string>$(PRODUCT_NAME) would like to save photos to your photo gallery (for uploading profile pictures)</string>
+	<key>NSMicrophoneUsageDescription</key>
+	<string>$(PRODUCT_NAME) would like to your microphone (for videos)</string>
 </dict>
 </plist>
diff --git a/apolloschurchapp/ios/apolloschurchappTests/Info.plist b/apolloschurchapp/ios/apolloschurchappTests/Info.plist
index 689ee53..6ed8754 100644
--- a/apolloschurchapp/ios/apolloschurchappTests/Info.plist
+++ b/apolloschurchapp/ios/apolloschurchappTests/Info.plist
@@ -15,10 +15,10 @@
 	<key>CFBundlePackageType</key>
 	<string>BNDL</string>
 	<key>CFBundleShortVersionString</key>
-	<string>1.0.0</string>
+	<string>0.7.0</string>
 	<key>CFBundleSignature</key>
 	<string>????</string>
 	<key>CFBundleVersion</key>
-	<string>14</string>
+	<string>5</string>
 </dict>
 </plist>
diff --git a/apolloschurchapp/jest.setup.js b/apolloschurchapp/jest.setup.js
index d15cab6..59ba7e7 100644
--- a/apolloschurchapp/jest.setup.js
+++ b/apolloschurchapp/jest.setup.js
@@ -1,44 +1,33 @@
-import React from 'react';
-// We ran into an issue where SafeAreaView would break jest tests.
-jest.mock('react-navigation', () => {
-  const ActualNavigation = require.requireActual('react-navigation');
-  return {
-    ...ActualNavigation,
-    SafeAreaView: require.requireActual('SafeAreaView'),
-  };
-});
-
-jest.mock('react-native-music-control', () => ({
-  enableBackgroundMode: jest.fn(),
-  enableControl: jest.fn(),
-  on: jest.fn(),
-  setNowPlaying: jest.fn(),
-  STATE_PLAYING: false,
-  STATE_PAUSED: true,
-}));
-
 jest.mock('react-native-config', () => ({
   ONE_SIGNAL_KEY: 'doesntmatter',
 }));
-
+jest.mock('react-native-custom-tabs', () => ({
+  CustomTabs: {
+    openURL: jest.fn(),
+  },
+}));
 jest.mock('Animated', () => {
   const ActualAnimated = require.requireActual('Animated');
   return {
     ...ActualAnimated,
-    timing: (value, config) => ({
-      start: (callback) => {
-        value.setValue(config.toValue);
-        callback && callback();
-      },
-      stop: () => ({}),
-    }),
-    spring: (value, config) => ({
-      start: (callback) => {
-        value.setValue(config.toValue);
-        callback && callback();
-      },
-      stop: () => ({}),
-    }),
+    timing: (value, config) => {
+      return {
+        start: (callback) => {
+          value.setValue(config.toValue);
+          callback && callback()
+        },
+        stop: () => ({}),
+      };
+    },
+    spring: (value, config) => {
+      return {
+        start: (callback) => {
+          value.setValue(config.toValue);
+          callback && callback()
+        },
+        stop: () => ({}),
+      };
+    },
   };
 });
 
@@ -47,6 +36,22 @@ jest.mock('react-native-safari-view', () => ({
   show: jest.fn(),
 }));
 
+jest.mock('react-native-onesignal', () => ({
+  getPermissionSubscriptionState: (callback) =>
+    callback({ notificationsEnabled: true, subscriptionEnabled: true }),
+  promptForPushNotificationsWithUserResponse: (callback) => callback(true),
+  init: jest.fn(),
+  addEventListener: jest.fn(),
+  configure: jest.fn(),
+}));
+
+jest.mock('react-native-music-control', () => ({
+  enableBackgroundMode: jest.fn(),
+  enableControl: jest.fn(),
+  on: jest.fn(),
+  setNowPlaying: jest.fn(),
+}));
+
 jest.mock('react-native-device-info', () => ({
   getUniqueID: () => 'id-123',
   getSystemVersion: () => 'sys-version-123',
@@ -61,29 +66,9 @@ jest.mock(
   () => 'Fetch'
 );
 
-jest.mock('@apollosproject/ui-analytics', () => ({
-  track: () => '',
-  AnalyticsConsumer: ({ children }) => children({ test: jest.fn() }),
-  AnalyticsProvider: ({ children }) => children,
-  withTrackOnPress: (Component) => (props) => <Component {...props} />,
-}));
-
-jest.mock('@apollosproject/ui-notifications', () => ({
-  NotificationsProvider: ({ children }) => children,
-}));
-
-jest.mock('@apollosproject/ui-media-player', () => ({
-  MediaPlayerSpacer: ({ children }) => children,
-  MediaPlayer: () => 'MediaPlayer',
-  MediaPlayerProvider: ({ children }) => children,
-  playVideoMutation: 'mutation { playVideo }',
-  withTabBarMediaSpacer: () => ({ children }) => children,
-}));
-
 jest.mock('react-native-video', () => 'Video');
 
 jest.mock('NativeEventEmitter');
 
 jest.mock('react-native-maps');
-jest.mock('DatePickerIOS', () => 'DatePicker');
 jest.mock('./src/client/index');
diff --git a/apolloschurchapp/metro.config.js b/apolloschurchapp/metro.config.js
deleted file mode 100644
index 9b60d7a..0000000
--- a/apolloschurchapp/metro.config.js
+++ /dev/null
@@ -1,97 +0,0 @@
-/**
- * Metro configuration for React Native
- * https://github.com/facebook/react-native
- *
- * @format
- */
-
-const path = require('path');
-const blacklist = require('metro-config/src/defaults/blacklist');
-
-const flatten = (array) =>
-  array.reduce((accum, curr) => curr.concat(accum), []);
-
-const localDeps = [
-  path.resolve('..', 'apollos-ui-kit'),
-  path.resolve('..', 'apollos-ui-passes'),
-  path.resolve('..', 'apollos-ui-auth'),
-  path.resolve('..', 'apollos-ui-htmlview'),
-  path.resolve('..', 'apollos-ui-analytics'),
-  path.resolve('..', 'apollos-ui-storybook'),
-  path.resolve('..', 'apollos-ui-onboarding'),
-  path.resolve('..', 'apollos-ui-media-player'),
-  path.resolve('..', 'apollos-ui-scripture'),
-  path.resolve('..', 'apollos-ui-notifications'),
-];
-
-const sharedNativeModules = [
-  'react-native-linear-gradient',
-  'react-native-svg',
-  'react-native-onesignal',
-  'react-native-music-control',
-  'react-native-video',
-  'react-native-video-controls',
-  'react-native-airplay-btn',
-];
-
-module.exports = {
-  resolver: {
-    extraNodeModules: {
-      'react-native': path.resolve('.', 'node_modules/react-native'),
-      ...sharedNativeModules.reduce(
-        (accum, curr) => ({
-          ...accum,
-          [curr]: path.resolve('.', `node_modules/${curr}`),
-        }),
-        {}
-      ),
-      'react-native-svg': path.resolve('.', 'node_modules/react-native-svg'),
-    },
-    blacklistRE: blacklist([
-      ...localDeps.map(
-        (depPath) => new RegExp(`${depPath}/node_modules/react-native/.*`)
-      ),
-      ...flatten(
-        localDeps.map((depPath) =>
-          sharedNativeModules.map(
-            (moduleName) =>
-              new RegExp(`${depPath}/node_modules/${moduleName}/.*`)
-          )
-        )
-      ),
-      ...sharedNativeModules.map(
-        (moduleName) =>
-          new RegExp(`${path.resolve(`../../node_modules/${moduleName}`)}/.*`)
-      ),
-      ...localDeps.map(
-        (depPath) => new RegExp(`${depPath}/node_modules/react-native-svg/.*`)
-      ),
-      ...localDeps.map(
-        (depPath) =>
-          new RegExp(`${depPath}/node_modules/.*/node_modules/react-native/.*`)
-      ),
-      new RegExp(
-        `${path.resolve('.', 'node_modules')}/.*/node_modules/react-native/.*`
-      ),
-      new RegExp(
-        `${path.resolve('..', '..', 'node_modules', 'react-native')}/.*`
-      ),
-      new RegExp(
-        `${path.resolve(
-          '..',
-          '..',
-          'node_modules'
-        )}/.*/node_modules/react-native/.*`
-      ),
-    ]),
-  },
-  watchFolders: [...localDeps, path.resolve('..', '..', 'node_modules')],
-  transformer: {
-    getTransformOptions: async () => ({
-      transform: {
-        experimentalImportSupport: false,
-        inlineRequires: false,
-      },
-    }),
-  },
-};
diff --git a/apolloschurchapp/package.json b/apolloschurchapp/package.json
index b385877..1f552df 100644
--- a/apolloschurchapp/package.json
+++ b/apolloschurchapp/package.json
@@ -1,21 +1,22 @@
 {
   "name": "apolloschurchapp",
-  "version": "1.0.0",
+  "version": "0.8.1",
   "private": true,
   "devDependencies": {
-    "@apollosproject/ui-storybook": "^0.8.6",
+    "@storybook/addon-actions": "4.0.7",
+    "@storybook/addon-links": "4.0.7",
+    "@storybook/addons": "4.0.7",
+    "@storybook/react-native": "4.0.7",
     "codecov": "3.0.2",
     "get-dev-paths": "^0.1.0",
-    "jest": "^24.8.0",
+    "jest": "23.6.0",
     "jest-react-native": "18.0.0",
-    "metro-react-native-babel-preset": "^0.54.0",
     "nodemon": "1.18.7",
-    "prettier": "1.14.2",
     "prop-types": "15.6.1",
     "react-dom": "16.6.3",
     "react-native-storybook-loader": "1.8.0",
     "react-native-version": "2.6.2",
-    "react-test-renderer": "16.8.3",
+    "react-test-renderer": "16.6.1",
     "waait": "1.0.2"
   },
   "engines": {
@@ -25,19 +26,17 @@
     "src"
   ],
   "scripts": {
-    "android": "SIM=\"$($HOME/Library/Android/sdk/emulator/emulator -list-avds | sed -n 1p)\" && $HOME/Library/Android/sdk/emulator/emulator -avd \"${SIM}\" & react-native run-android --appId com.apolloschurch.app --main-activity LaunchActivity",
+    "android": "react-native run-android",
     "codecov": "cat ./coverage/lcov.info | codecov",
     "fixlint": "eslint ./src --fix",
     "ios": "react-native run-ios --simulator=\"iPhone X\"",
-    "storybook:enable": "sed -i '' 's/STORYBOOK=false/STORYBOOK=true/g' .env",
-    "storybook:disable": "sed -i '' 's/STORYBOOK=true/STORYBOOK=false/g' .env",
-    "generate-stories": "rnstl --searchDir ./src --pattern **/*.stories.js",
     "lint": "eslint ./src --ext .js",
-    "version": "node ../../scripts/update-apollos-version.js && git add apollos.json",
     "postversion": "react-native-version --never-amend --android android/app/build.gradle --ios ios/",
-    "prestart": "lerna run generate-stories & node ./scripts/get-introspection-data.js",
+    "prestart": "node ./scripts/get-introspection-data.js",
     "start": "react-native start",
-    "test": "jest"
+    "storybook": "rnstl --searchDir ../ --pattern \"apollos*/src/**/*.stories.js\" && storybook start -p 7007  | react-native start --projectRoot $PWD/storybook",
+    "test": "jest",
+    "release": "standard-version --release-as minor"
   },
   "jest": {
     "preset": "react-native",
@@ -56,61 +55,70 @@
     ],
     "setupFiles": [
       "./jest.setup.js"
+    ],
+    "reporters": [
+      "<rootDir>/../../scripts/fingers-crossed-reporter.js"
     ]
   },
   "dependencies": {
-    "@apollosproject/ui-analytics": "^1.0.0",
-    "@apollosproject/ui-auth": "^1.0.0",
-    "@apollosproject/ui-htmlview": "^1.0.0",
-    "@apollosproject/ui-kit": "^1.0.0",
-    "@apollosproject/ui-media-player": "^1.0.0",
-    "@apollosproject/ui-notifications": "^1.0.0",
-    "@apollosproject/ui-passes": "^1.0.0",
-    "@apollosproject/ui-scripture": "^1.0.0-beta.0",
-    "@apollosproject/ui-storybook": "^1.0.0-beta.0",
+    "@apollosproject/ui-auth": "^0.8.1",
+    "@apollosproject/ui-kit": "^0.8.1",
+    "@apollosproject/ui-passes": "^0.8.1",
     "apollo-cache-inmemory": "1.5.1",
     "apollo-cache-persist": "0.1.1",
     "apollo-client": "2.5.1",
     "apollo-link": "1.2.8",
+    "apollo-link-context": "1.0.14",
     "apollo-link-http": "1.5.11",
     "apollo-link-schema": "1.1.6",
     "apollo-upload-client": "9.0.0",
+    "buffer": "^5.2.1",
     "color": "3.0.0",
     "dotenv": "^6.2.0",
+    "entities": "1.1.1",
     "events": "^3.0.0",
-    "formik": "^1.5.2",
+    "formik": "0.11.11",
     "graphql": "0.13.2",
     "graphql-tag": "2.9.2",
     "graphql-tools": "3.1.1",
     "lodash": "^4.17.11",
     "memoize-one": "4.0.0",
+    "metro-react-native-babel-preset": "^0.53.1",
     "moment": "2.22.2",
     "node-fetch": "2.2.0",
-    "react": "16.8.3",
-    "react-apollo": "2.5.5",
-    "react-native": "0.59.8",
+    "numeral": "^2.0.6",
+    "prettier": "1.14.2",
+    "querystring": "^0.2.0",
+    "react": "16.6.3",
+    "react-apollo": "2.5.1",
+    "react-native": "0.58.5",
     "react-native-airplay-btn": "^1.0.6",
     "react-native-config": "^0.11.7",
-    "react-native-device-info": "^2.1.2",
-    "react-native-image-picker": "0.28.0",
-    "react-native-linear-gradient": "^2.5.4",
-    "react-native-maps": "^0.24.2",
-    "react-native-music-control": "^0.10.2",
-    "react-native-onesignal": "3.2.14",
+    "react-native-custom-tabs": "0.1.7",
+    "react-native-device-info": "0.22.5",
+    "react-native-image-picker": "0.26.10",
+    "react-native-keyboard-aware-scroll-view": "0.7.0",
+    "react-native-linear-gradient": "2.5.3",
+    "react-native-maps": "^0.23.0",
+    "react-native-music-control": "0.7.3",
+    "react-native-onesignal": "3.2.7",
     "react-native-passkit-wallet": "^0.1.4",
     "react-native-safari-view": "2.1.0",
     "react-native-safe-area-view": "0.13.1",
-    "react-native-screens": "^1.0.0-alpha.11",
+    "react-native-screens": "1.0.0-alpha.12",
     "react-native-splash-screen": "^3.1.1",
-    "react-native-svg": "^9.4.0",
-    "react-native-video": "^4.4.1",
+    "react-native-svg": "9.2.4",
+    "react-native-swiper": "^1.5.14",
+    "react-native-video": "3.2.0",
     "react-native-video-controls": "2.2.3",
     "react-native-webview": "^5.2.0",
-    "react-navigation": "2.18.3",
+    "react-navigation": "2.11.2",
     "react-navigation-tabs": "0.6.0",
     "recompose": "^0.30.0",
     "rn-fetch-blob": "^0.10.15",
-    "stream": "^0.0.2",
+    "rn-placeholder": "1.2.0",
+    "stream": "0.0.2",
+    "url": "^0.11.0",
     "yup": "0.26.6"
   },
   "rnpm": {
diff --git a/apolloschurchapp/polyfill.js b/apolloschurchapp/polyfill.js
deleted file mode 100644
index e2e1ede..0000000
--- a/apolloschurchapp/polyfill.js
+++ /dev/null
@@ -1,10 +0,0 @@
-// this can be removed when we upgrade to react-native 59
-
-// symbol polyfills
-global.Symbol = require('core-js/es6/symbol');
-require('core-js/fn/symbol/iterator');
-
-// collection fn polyfills
-require('core-js/fn/map');
-require('core-js/fn/set');
-require('core-js/fn/array/find');
diff --git a/apolloschurchapp/rn-cli.config.js b/apolloschurchapp/rn-cli.config.js
new file mode 100644
index 0000000..efc06fe
--- /dev/null
+++ b/apolloschurchapp/rn-cli.config.js
@@ -0,0 +1,51 @@
+const path = require('path');
+const blacklist = require('metro-config/src/defaults/blacklist');
+
+const localDeps = [
+  path.resolve('..', 'apollos-ui-kit'),
+  path.resolve('..', 'apollos-ui-passes'),
+  path.resolve('..', 'apollos-ui-auth'),
+  path.resolve('..', 'apollos-ui-htmlview'),
+];
+
+module.exports = {
+  resolver: {
+    extraNodeModules: {
+      'react-native': path.resolve('.', 'node_modules/react-native'),
+      'react-native-linear-gradient': path.resolve(
+        '.',
+        'node_modules/react-native-linear-gradient'
+      ),
+    },
+    blacklistRE: blacklist([
+      ...localDeps.map(
+        (depPath) => new RegExp(`${depPath}/node_modules/react-native/.*`)
+      ),
+      ...localDeps.map(
+        (depPath) =>
+          new RegExp(`${depPath}/node_modules/react-native-linear-gradient/.*`)
+      ),
+      ...localDeps.map(
+        (depPath) =>
+          new RegExp(`${depPath}/node_modules/.*/node_modules/react-native/.*`)
+      ),
+      new RegExp(
+        `${path.resolve('.', 'node_modules')}/.*/node_modules/react-native/.*`
+      ),
+      new RegExp(
+        `${path.resolve('..', '..', 'node_modules', 'react-native')}/.*`
+      ),
+      new RegExp(
+        `${path.resolve(
+          '..',
+          '..',
+          'node_modules'
+        )}/.*/node_modules/react-native/.*`
+      ),
+      new RegExp(
+        `${path.resolve('../../node_modules/react-native-linear-gradient')}/.*`
+      ),
+    ]),
+  },
+  watchFolders: [...localDeps, path.resolve('..', '..', 'node_modules')],
+};
diff --git a/apolloschurchapp/src/LandingScreen.js b/apolloschurchapp/src/LandingScreen.js
deleted file mode 100644
index 52dde4b..0000000
--- a/apolloschurchapp/src/LandingScreen.js
+++ /dev/null
@@ -1,33 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-import { styled, GradientOverlayImage } from '@apollosproject/ui-kit';
-
-import ApollosLandingScreen from './ui/LandingScreen';
-
-const FullScreenImage = styled({
-  resizeMode: 'cover',
-  position: 'absolute',
-})(GradientOverlayImage);
-
-const LandingScreen = ({ navigation }) => (
-  <ApollosLandingScreen
-    onPressPrimary={() => navigation.push('Auth')}
-    textColor={'white'}
-    BackgroundComponent={
-      <FullScreenImage source={'https://picsum.photos/375/812/?random'} />
-    }
-    primaryNavText={"Let's go!"}
-  />
-);
-
-LandingScreen.navigationOptions = {
-  header: null,
-};
-
-LandingScreen.propTypes = {
-  navigation: PropTypes.shape({
-    push: PropTypes.func,
-  }),
-};
-
-export default LandingScreen;
diff --git a/apolloschurchapp/src/NavigationService.js b/apolloschurchapp/src/NavigationService.js
index a2a5348..a5d758b 100644
--- a/apolloschurchapp/src/NavigationService.js
+++ b/apolloschurchapp/src/NavigationService.js
@@ -2,30 +2,22 @@ import { NavigationActions } from 'react-navigation';
 
 let _navigator;
 
-const setTopLevelNavigator = (navigatorRef) => {
+function setTopLevelNavigator(navigatorRef) {
   _navigator = navigatorRef;
-};
+}
 
-const navigate = (routeName, params) => {
+function navigate(routeName, params) {
   _navigator.dispatch(
     NavigationActions.navigate({
       routeName,
       params,
     })
   );
-};
+}
 
-const goBack = (from) => {
-  let key;
-  if (from) {
-    const route = _navigator.state.nav.routes.find((r) => r.routeName === from);
-    if (route) ({ key } = route);
-  }
-  _navigator.dispatch(NavigationActions.back({ key }));
-};
+// add other navigation functions that you need and export them
 
 export default {
-  setTopLevelNavigator,
   navigate,
-  goBack,
+  setTopLevelNavigator,
 };
diff --git a/apolloschurchapp/src/Providers.js b/apolloschurchapp/src/Providers.js
index 9b7e84f..f66ae36 100644
--- a/apolloschurchapp/src/Providers.js
+++ b/apolloschurchapp/src/Providers.js
@@ -1,36 +1,17 @@
 import React from 'react';
-import Config from 'react-native-config';
 import { Providers } from '@apollosproject/ui-kit';
 import { AuthProvider } from '@apollosproject/ui-auth';
-import { AnalyticsProvider } from '@apollosproject/ui-analytics';
-import { MediaPlayerProvider } from '@apollosproject/ui-media-player';
-import { NotificationsProvider } from '@apollosproject/ui-notifications';
-
 import NavigationService from './NavigationService';
+import { NotificationsManager } from './notifications';
 import ClientProvider from './client';
-import customTheme, { customIcons } from './theme';
 
 const AppProviders = (props) => (
   <ClientProvider {...props}>
-    <NotificationsProvider
-      oneSignalKey={Config.ONE_SIGNAL_KEY}
-      navigate={NavigationService.navigate}
-    >
-      <AuthProvider
-        navigateToAuth={() => NavigationService.navigate('Auth')}
-        closeAuth={() => NavigationService.navigate('Onboarding')}
-      >
-        <MediaPlayerProvider>
-          <AnalyticsProvider>
-            <Providers
-              themeInput={customTheme}
-              iconInput={customIcons}
-              {...props}
-            />
-          </AnalyticsProvider>
-        </MediaPlayerProvider>
+    <NotificationsManager>
+      <AuthProvider navigateToAuth={() => NavigationService.navigate('Auth')}>
+        <Providers {...props} />
       </AuthProvider>
-    </NotificationsProvider>
+    </NotificationsManager>
   </ClientProvider>
 );
 
diff --git a/apolloschurchapp/src/analytics/TrackEventWhenLoaded.js b/apolloschurchapp/src/analytics/TrackEventWhenLoaded.js
new file mode 100644
index 0000000..113408e
--- /dev/null
+++ b/apolloschurchapp/src/analytics/TrackEventWhenLoaded.js
@@ -0,0 +1,49 @@
+import React, { PureComponent } from 'react';
+import { ApolloConsumer } from 'react-apollo';
+import PropTypes from 'prop-types';
+import { track } from './index';
+
+class TrackEventWhenLoaded extends PureComponent {
+  componentDidMount() {
+    if (this.props.loaded) {
+      this.track();
+    }
+  }
+
+  componentDidUpdate(prevProps) {
+    if (!prevProps.loaded && this.props.loaded) {
+      this.track();
+    }
+  }
+
+  get trackClient() {
+    return this.props.track || track;
+  }
+
+  track() {
+    const { eventName, properties, client } = this.props;
+    return this.trackClient({ eventName, properties, client });
+  }
+
+  render() {
+    return null;
+  }
+}
+
+TrackEventWhenLoaded.propTypes = {
+  loaded: PropTypes.bool.isRequired,
+  eventName: PropTypes.string.isRequired,
+  // eslint-disable-next-line react/forbid-prop-types
+  properties: PropTypes.any,
+  // eslint-disable-next-line react/forbid-prop-types
+  client: PropTypes.any,
+  track: PropTypes.func,
+};
+
+const TrackEventWhenLoadedConnected = (props) => (
+  <ApolloConsumer>
+    {(client) => <TrackEventWhenLoaded {...props} client={client} />}
+  </ApolloConsumer>
+);
+
+export default TrackEventWhenLoadedConnected;
diff --git a/apolloschurchapp/src/analytics/TrackEventWhenLoaded.tests.js b/apolloschurchapp/src/analytics/TrackEventWhenLoaded.tests.js
new file mode 100644
index 0000000..0572c72
--- /dev/null
+++ b/apolloschurchapp/src/analytics/TrackEventWhenLoaded.tests.js
@@ -0,0 +1,53 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+import TrackEventWhenLoaded from './TrackEventWhenLoaded';
+
+const trackMock = jest.fn();
+
+describe('The TrackEventWhenLoaded component', () => {
+  afterEach(() => {
+    trackMock.mockClear();
+  });
+  it('should track an event if mounted with loaded=true', () => {
+    renderer.create(
+      <Providers>
+        <TrackEventWhenLoaded
+          loaded
+          eventName="Track Something"
+          properties={{ ThingId: '1234' }}
+          track={trackMock}
+        />
+      </Providers>
+    );
+    expect(trackMock.mock.calls).toMatchSnapshot();
+  });
+
+  it('should track an event if mounted with loaded=false and then switching to true', () => {
+    const tree = renderer.create(
+      <Providers>
+        <TrackEventWhenLoaded
+          loaded={false}
+          eventName="Track Something"
+          properties={{ ThingId: '1234' }}
+          track={trackMock}
+          key="tracker"
+        />
+      </Providers>
+    );
+    expect(trackMock.mock.calls).toMatchSnapshot();
+    tree.update(
+      <Providers>
+        <TrackEventWhenLoaded
+          loaded
+          eventName="Track Something"
+          properties={{ ThingId: '1234' }}
+          track={trackMock}
+          key="tracker"
+        />
+      </Providers>
+    );
+    expect(trackMock.mock.calls).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/analytics/index.js b/apolloschurchapp/src/analytics/index.js
new file mode 100644
index 0000000..491e985
--- /dev/null
+++ b/apolloschurchapp/src/analytics/index.js
@@ -0,0 +1,77 @@
+import gql from 'graphql-tag';
+import DeviceInfo from 'react-native-device-info';
+import { Platform } from 'react-native';
+
+const anonymousId = DeviceInfo.getUniqueID();
+
+const deviceInfo = {
+  platform: Platform.OS === 'ios' ? 'iOS' : 'Android',
+  deviceId: anonymousId,
+  deviceModel: DeviceInfo.getModel(),
+  osVersion: DeviceInfo.getSystemVersion(),
+  appVersion: DeviceInfo.getVersion(),
+};
+
+const trackMutation = gql`
+  mutation track($input: AnalyticsTrackInput!) {
+    trackEvent(input: $input) {
+      success
+    }
+  }
+`;
+
+const identifyMutation = gql`
+  mutation identify($input: AnalyticsIdentifyInput!) {
+    identifySelf(input: $input) {
+      success
+    }
+  }
+`;
+
+const propertiesToGqlInput = (props = []) =>
+  Object.keys(props).map((key) => ({
+    field: key,
+    value: props[key],
+  }));
+
+export const track = ({ eventName, properties, client }) =>
+  client.mutate({
+    mutation: trackMutation,
+    variables: {
+      input: {
+        anonymousId,
+        deviceInfo,
+        eventName,
+        properties: propertiesToGqlInput(properties),
+      },
+    },
+  });
+
+export const identify = ({ client }) =>
+  client.mutate({
+    mutation: identifyMutation,
+    variables: {
+      input: {
+        anonymousId,
+        deviceInfo,
+      },
+    },
+  });
+
+export const events = {
+  LikeContent: 'Like Content',
+  UnlikeContent: 'Unlike Content',
+  ViewContent: 'View Content',
+  ShareContent: 'Share Content',
+  UserLogin: 'User Login',
+  UserSignup: 'User Signup',
+  UserLogout: 'UserLogout',
+  UserForgotPassword: 'User Forgot Password',
+  UserPlayedMedia: 'User Played Media',
+};
+
+export default {
+  track,
+  identify,
+  events,
+};
diff --git a/apolloschurchapp/src/client/cache.js b/apolloschurchapp/src/client/cache.js
index 5b4bfd5..b4d1609 100644
--- a/apolloschurchapp/src/client/cache.js
+++ b/apolloschurchapp/src/client/cache.js
@@ -3,9 +3,9 @@ import {
   IntrospectionFragmentMatcher,
 } from 'apollo-cache-inmemory';
 import { AsyncStorage } from 'react-native';
+import DeviceInfo from 'react-native-device-info';
 import { CachePersistor } from 'apollo-cache-persist';
 import gql from 'graphql-tag';
-import Config from 'react-native-config';
 import introspectionQueryResultData from './fragmentTypes.json';
 
 export const CACHE_LOADED = gql`
@@ -20,10 +20,10 @@ export const MARK_CACHE_LOADED = gql`
   }
 `;
 
-// We reset our apollo cache based an env value and static number.
-// In the future, we should also look at resetting the app when an error occurs related to Apollo.
-// You can also increment this number to force a manual reset of the cache.
-const SCHEMA_VERSION = `${Config.SCHEMA_VERSION}-1`; // Must be a string.
+// We reset our apollo cache on every build:
+// TODO: this could be optimized by only reseting cache when our schema or client-side schema changes,
+// however there is risk for missing changes and breaking things in production, so this is safer.
+const SCHEMA_VERSION = `${DeviceInfo.getVersion()}${DeviceInfo.getBuildNumber()}`; // Must be a string.
 const SCHEMA_VERSION_KEY = 'apollo-schema-version';
 
 const nodeCacheRedirect = (_, { id }, { getCacheKey }) =>
@@ -45,26 +45,13 @@ const persistor = new CachePersistor({
   storage: AsyncStorage,
 });
 
-// 1. If we are on the same schema version, restore the cache.
-// 2. If that fails, purge the cache and update the stored version so we don't try and restore agian
-// 3. If we are on a new schema version, purge the cache.
-// 4. If purging or setting AsyncStorage keys fails (or anything else) we capture the error and log it.
-
 export const ensureCacheHydration = (async () => {
-  // We wrap everything in try/catch because crashing on a cache restore is bad
-  // 😬
   try {
     const currentVersion = await AsyncStorage.getItem(SCHEMA_VERSION_KEY);
     if (currentVersion === SCHEMA_VERSION) {
       // If the current version matches the latest version,
       // we're good to go and can restore the cache.
-      try {
-        await persistor.restore();
-      } catch (restoreError) {
-        // If the restore fails, we want to do our best to purge the cache.
-        await persistor.purge();
-        console.error('Error restoring cache, purging the cache', restoreError);
-      }
+      await persistor.restore();
     } else {
       // Otherwise, we'll want to purge the outdated persisted cache
       // and mark ourselves as having updated to the latest version.
@@ -72,7 +59,7 @@ export const ensureCacheHydration = (async () => {
       await AsyncStorage.setItem(SCHEMA_VERSION_KEY, SCHEMA_VERSION);
     }
   } catch (error) {
-    console.error('Error restoring or purging Apollo cache', error);
+    console.error('Error restoring Apollo cache', error);
   }
 })();
 
diff --git a/apolloschurchapp/src/client/fragmentTypes.json b/apolloschurchapp/src/client/fragmentTypes.json
index 8003403..14cf82b 100644
--- a/apolloschurchapp/src/client/fragmentTypes.json
+++ b/apolloschurchapp/src/client/fragmentTypes.json
@@ -1 +1 @@
-{"__schema":{"types":[{"kind":"INTERFACE","name":"Node","possibleTypes":[{"name":"ContentChannel"},{"name":"Person"},{"name":"Campus"},{"name":"Pass"},{"name":"UniversalContentItem"},{"name":"DevotionalContentItem"},{"name":"MediaContentItem"},{"name":"ContentSeriesContentItem"},{"name":"WeekendContentItem"},{"name":"ActionListFeature"}]},{"kind":"INTERFACE","name":"ContentItem","possibleTypes":[{"name":"UniversalContentItem"},{"name":"DevotionalContentItem"},{"name":"MediaContentItem"},{"name":"ContentSeriesContentItem"},{"name":"WeekendContentItem"}]},{"kind":"INTERFACE","name":"Media","possibleTypes":[{"name":"ImageMedia"},{"name":"VideoMedia"},{"name":"AudioMedia"}]},{"kind":"INTERFACE","name":"MediaSource","possibleTypes":[{"name":"ImageMediaSource"},{"name":"VideoMediaSource"},{"name":"AudioMediaSource"}]},{"kind":"INTERFACE","name":"Sharable","possibleTypes":[{"name":"SharableContentItem"}]},{"kind":"INTERFACE","name":"Feature","possibleTypes":[{"name":"ActionListFeature"}]}]}}
\ No newline at end of file
+{"__schema":{"types":[{"kind":"INTERFACE","name":"Node","possibleTypes":[{"name":"ContentChannel"},{"name":"Person"},{"name":"Campus"},{"name":"Pass"},{"name":"UniversalContentItem"},{"name":"DevotionalContentItem"},{"name":"MediaContentItem"},{"name":"ContentSeriesContentItem"}]},{"kind":"INTERFACE","name":"ContentItem","possibleTypes":[{"name":"UniversalContentItem"},{"name":"DevotionalContentItem"},{"name":"MediaContentItem"},{"name":"ContentSeriesContentItem"}]},{"kind":"INTERFACE","name":"Media","possibleTypes":[{"name":"ImageMedia"},{"name":"VideoMedia"},{"name":"AudioMedia"}]},{"kind":"INTERFACE","name":"MediaSource","possibleTypes":[{"name":"ImageMediaSource"},{"name":"VideoMediaSource"},{"name":"AudioMediaSource"}]},{"kind":"INTERFACE","name":"Sharable","possibleTypes":[{"name":"SharableContentItem"}]}]}}
\ No newline at end of file
diff --git a/apolloschurchapp/src/client/index.js b/apolloschurchapp/src/client/index.js
index c473190..4a13cb8 100644
--- a/apolloschurchapp/src/client/index.js
+++ b/apolloschurchapp/src/client/index.js
@@ -3,6 +3,7 @@ import PropTypes from 'prop-types';
 import { ApolloProvider } from 'react-apollo';
 import { ApolloClient } from 'apollo-client';
 import { ApolloLink } from 'apollo-link';
+import SplashScreen from 'react-native-splash-screen';
 
 import { authLink } from '@apollosproject/ui-auth';
 import { resolvers, schema, defaults } from '../store';
@@ -41,6 +42,7 @@ class ClientProvider extends PureComponent {
     } catch (e) {
       throw e;
     } finally {
+      if (SplashScreen && SplashScreen.hide) SplashScreen.hide();
       client.mutate({ mutation: MARK_CACHE_LOADED });
     }
   }
diff --git a/apolloschurchapp/src/content-feed/content-feed.tests.js b/apolloschurchapp/src/content-feed/content-feed.tests.js
index 2f7fd1b..544d818 100644
--- a/apolloschurchapp/src/content-feed/content-feed.tests.js
+++ b/apolloschurchapp/src/content-feed/content-feed.tests.js
@@ -3,7 +3,7 @@ import renderer from 'react-test-renderer';
 
 import Providers from 'apolloschurchapp/src/Providers';
 
-import GET_CONTENT_FEED from './getContentFeed';
+import getContentFeed from './getContentFeed';
 
 import ContentFeed from './index';
 
@@ -11,7 +11,7 @@ describe('content feed query component', () => {
   it('renders a feedview after successful query', () => {
     const mock = {
       request: {
-        query: GET_CONTENT_FEED,
+        query: getContentFeed,
       },
       result: {
         data: {
diff --git a/apolloschurchapp/src/content-feed/getContentFeed.js b/apolloschurchapp/src/content-feed/getContentFeed.js
index 40758cb..2e47d19 100644
--- a/apolloschurchapp/src/content-feed/getContentFeed.js
+++ b/apolloschurchapp/src/content-feed/getContentFeed.js
@@ -1,16 +1,13 @@
 import gql from 'graphql-tag';
 
-import { LARGE_CARD_FRAGMENT } from 'apolloschurchapp/src/ui/ContentCardConnected';
-import { CONTENT_ITEM_FRAGMENT } from '../content-single/getContentItem';
+import { largeCardFragment } from 'apolloschurchapp/src/ui/ContentCardConnected';
+import { contentItemFragment } from '../content-single/getContentItem';
 
 export default gql`
-  query getContentFeed($itemId: ID!, $after: String, $first: Int) {
+  query getContentFeed($itemId: ID!) {
     node(id: $itemId) {
       ... on ContentChannel {
-        childContentItemsConnection(after: $after, first: $first) {
-          pageInfo {
-            endCursor
-          }
+        childContentItemsConnection {
           edges {
             node {
               ...contentItemFragment
@@ -21,6 +18,6 @@ export default gql`
       }
     }
   }
-  ${CONTENT_ITEM_FRAGMENT}
-  ${LARGE_CARD_FRAGMENT}
+  ${contentItemFragment}
+  ${largeCardFragment}
 `;
diff --git a/apolloschurchapp/src/content-feed/index.js b/apolloschurchapp/src/content-feed/index.js
index 8443086..8662d8a 100644
--- a/apolloschurchapp/src/content-feed/index.js
+++ b/apolloschurchapp/src/content-feed/index.js
@@ -6,9 +6,8 @@ import PropTypes from 'prop-types';
 import { BackgroundView, FeedView } from '@apollosproject/ui-kit';
 
 import ContentCardConnected from 'apolloschurchapp/src/ui/ContentCardConnected';
-import fetchMoreResolver from 'apolloschurchapp/src/utils/fetchMoreResolver';
 
-import GET_CONTENT_FEED from './getContentFeed';
+import getContentFeed from './getContentFeed';
 /**
  * This is where the component description lives
  * A FeedView wrapped in a query to pull content data.
@@ -47,11 +46,11 @@ class ContentFeed extends PureComponent {
     return (
       <BackgroundView>
         <Query
-          query={GET_CONTENT_FEED}
+          query={getContentFeed}
           variables={{ itemId }}
           fetchPolicy="cache-and-network"
         >
-          {({ loading, error, data, refetch, fetchMore, variables }) => (
+          {({ loading, error, data, refetch }) => (
             <FeedView
               ListItemComponent={ContentCardConnected}
               content={get(
@@ -59,12 +58,6 @@ class ContentFeed extends PureComponent {
                 'node.childContentItemsConnection.edges',
                 []
               ).map((edge) => edge.node)}
-              fetchMore={fetchMoreResolver({
-                collectionName: 'node.childContentItemsConnection',
-                fetchMore,
-                variables,
-                data,
-              })}
               isLoading={loading}
               error={error}
               refetch={refetch}
diff --git a/apolloschurchapp/src/content-single/ActionContainer/index.js b/apolloschurchapp/src/content-single/ActionContainer/index.js
index b10302d..e1d6cb1 100644
--- a/apolloschurchapp/src/content-single/ActionContainer/index.js
+++ b/apolloschurchapp/src/content-single/ActionContainer/index.js
@@ -1,15 +1,17 @@
 import React from 'react';
-import { Platform, View } from 'react-native';
+import { Platform } from 'react-native';
+import SafeAreaView from 'react-native-safe-area-view';
 import PropTypes from 'prop-types';
 import { Query } from 'react-apollo';
 import { get } from 'lodash';
+
 import Share from 'apolloschurchapp/src/ui/Share';
 
 import { SideBySideView, styled } from '@apollosproject/ui-kit';
 import LikeButton from 'apolloschurchapp/src/ui/LikeButton';
-import { MediaPlayerSpacer } from '@apollosproject/ui-media-player';
+import { MediaPlayerSpacer } from 'apolloschurchapp/src/ui/MediaPlayer';
 
-import GET_SHARE_CONTENT from './getShareContent';
+import getShareContent from './getShareContent';
 
 const PositioningView = styled(({ theme }) => ({
   justifyContent: 'space-around',
@@ -20,14 +22,14 @@ const PositioningView = styled(({ theme }) => ({
 const Container = styled(({ theme }) => ({
   backgroundColor: theme.colors.paper,
   ...Platform.select(theme.shadows.default),
-}))(View);
+}))(SafeAreaView);
 
 const ActionContainer = ({ itemId }) => (
   <Container>
     <MediaPlayerSpacer>
       <PositioningView>
         <LikeButton itemId={itemId} />
-        <Query query={GET_SHARE_CONTENT} variables={{ itemId }}>
+        <Query query={getShareContent} variables={{ itemId }}>
           {({ data: { node } = {}, error, loading }) => {
             const sharing = get(node, 'sharing');
             return loading || error || !sharing ? null : (
diff --git a/apolloschurchapp/src/content-single/ContentSingle.js b/apolloschurchapp/src/content-single/ContentSingle.js
index 8bed0fc..f5b2709 100644
--- a/apolloschurchapp/src/content-single/ContentSingle.js
+++ b/apolloschurchapp/src/content-single/ContentSingle.js
@@ -5,10 +5,11 @@ import PropTypes from 'prop-types';
 
 import { ErrorCard, ThemeMixin } from '@apollosproject/ui-kit';
 
-import { TrackEventWhenLoaded } from '@apollosproject/ui-analytics';
+import TrackEventWhenLoaded from 'apolloschurchapp/src/analytics/TrackEventWhenLoaded';
+import { events } from 'apolloschurchapp/src/analytics';
 
 import ActionContainer from './ActionContainer';
-import GET_CONTENT_ITEM from './getContentItem';
+import getContentItem from './getContentItem';
 
 import DevotionalContentItem from './DevotionalContentItem';
 import UniversalContentItem from './UniversalContentItem';
@@ -25,8 +26,6 @@ class ContentSingle extends PureComponent {
 
   static navigationOptions = {
     header: NavigationHeader,
-    headerTransparent: true,
-    headerMode: 'float',
   };
 
   get itemId() {
@@ -81,7 +80,7 @@ class ContentSingle extends PureComponent {
       >
         <TrackEventWhenLoaded
           loaded={!!(!loading && content.title)}
-          eventName={'View Contentx'}
+          eventName={events.ViewContent}
           properties={{
             title: content.title,
             itemId: this.itemId,
@@ -95,7 +94,7 @@ class ContentSingle extends PureComponent {
 
   render() {
     return (
-      <Query query={GET_CONTENT_ITEM} variables={this.queryVariables}>
+      <Query query={getContentItem} variables={this.queryVariables}>
         {this.renderWithData}
       </Query>
     );
diff --git a/apolloschurchapp/src/content-single/DevotionalContentItem/ContentTab.js b/apolloschurchapp/src/content-single/DevotionalContentItem/ContentTab.js
index 426feb3..9a4b521 100644
--- a/apolloschurchapp/src/content-single/DevotionalContentItem/ContentTab.js
+++ b/apolloschurchapp/src/content-single/DevotionalContentItem/ContentTab.js
@@ -2,7 +2,7 @@ import React from 'react';
 import { ScrollView } from 'react-native';
 import PropTypes from 'prop-types';
 import { PaddedView, H2, styled } from '@apollosproject/ui-kit';
-import { ScriptureList } from '@apollosproject/ui-scripture';
+import { ScriptureList } from 'apolloschurchapp/src/ui/Scripture';
 import HorizontalContentFeed from '../HorizontalContentFeed';
 import HTMLContent from '../HTMLContent';
 
diff --git a/apolloschurchapp/src/content-single/DevotionalContentItem/Devotional.stories.js b/apolloschurchapp/src/content-single/DevotionalContentItem/Devotional.stories.js
index 8bf3ffd..109a669 100644
--- a/apolloschurchapp/src/content-single/DevotionalContentItem/Devotional.stories.js
+++ b/apolloschurchapp/src/content-single/DevotionalContentItem/Devotional.stories.js
@@ -1,62 +1,60 @@
-// TODO: fix story
-
-// import React from 'react';
-// import { storiesOf } from '@apollosproject/ui-storybook';
-
-// import Devotional from '.';
-
-// const scripture = [
-//   {
-//     id: '1CO.15.57',
-//     reference: '1 Corinthians 15:57',
-//     html:
-//       '<p class="p"><span data-number="57" class="v">57</span>But thanks be to God, who gives us the victory through our Lord Jesus Christ. </p>',
-//   },
-//   {
-//     id: 'EXO.17.8-EXO.17.15',
-//     reference: 'Exodus 17:8-15',
-//     html:
-//       '<p class="p"><span data-number="8" class="v">8</span>Then Amalek came and fought with Israel in Rephidim. <span data-number="9" class="v">9</span>Moses said to Joshua, “Choose men for us, and go out to fight with Amalek. Tomorrow I will stand on the top of the hill with God’s rod in my hand.” <span data-number="10" class="v">10</span>So Joshua did as Moses had told him, and fought with Amalek; and Moses, Aaron, and Hur went up to the top of the hill. <span data-number="11" class="v">11</span>When Moses held up his hand, Israel prevailed. When he let down his hand, Amalek prevailed. <span data-number="12" class="v">12</span>But Moses’ hands were heavy; so they took a stone, and put it under him, and he sat on it. Aaron and Hur held up his hands, the one on the one side, and the other on the other side. His hands were steady until sunset. <span data-number="13" class="v">13</span>Joshua defeated Amalek and his people with the edge of the sword. <span data-number="14" class="v">14</span>Yahweh said to Moses, “Write this for a memorial in a book, and rehearse it in the ears of Joshua: that I will utterly blot out the memory of Amalek from under the sky.” <span data-number="15" class="v">15</span>Moses built an altar, and called its name “Yahweh our Banner”.</p>',
-//   },
-// ];
-
-// const content = {
-//   body:
-//     '<p>Sometimes God&rsquo;s promises to us involve a fight. We have to fight to keep our focus on Him, fight to move towards the promise we know God has laid on our hearts. We have a real enemy that would love nothing more than to get us sidetracked and doubt God&rsquo;s promises. So we fight saying that we are going to believe God will do what He says He will do, and we keep fighting until we see that promise come to life.</p><p>In Exodus 17:8-15 the nation of Israel, freed from great oppression in Egypt was traveling to the land God promised them. Yet, Israel was fighting, again.&nbsp;<br />&nbsp;<br />As the Israelites were fighting in the valley,&nbsp;Moses was on the hill top lifting his hands in prayer for these great fighters. Israel fought hard, and with the prayers of Moses and the help of his companions, Aaron and Hur, the Amalekites were defeated. Moses knew that it was solely because of the Lord&rsquo;s hand of protection and blessing on the Israelites that they won the battle. &ldquo;Moses built an altar and called it The Lord is my banner&rdquo; (Exodus 17:15).</p><p>In battle opposing nations would fly their own flag on a pole at each of their respective front lines. This was to give their soldiers a feeling of hope and a focal point. This is what God is to us: a banner of encouragement to give us hope and a focal point.</p><blockquote><p>The Lord protects us, covers us with love, and&nbsp;blesses us continually.</p></blockquote><p>The Lord is our banner. He protects us; He covers us with love; He blesses us continually. The Lord gives us hope and a place to focus during the tough fights when the enemy is trying to make us doubt God&rsquo;s promises.&nbsp;</p><p>When was the last time you sat and thanked Jesus for all the ways he is a banner in your life?&nbsp;</p><p>Reflect:</p><ul><li>What is one way the Lord has been your banner?</li><li>How can you focus more today on the Lord and all the things He does for you throughout the day?</li></ul>',
-//   route: { jumpTo: () => {} },
-//   title: 'God is Our Banner',
-// };
-
-// const renderItem = () => {};
-
-// const loadingStateObject = {
-//   node: {
-//     id: 'fakeId0',
-//     title: '',
-//     isLoading: true,
-//   },
-// };
-
-// const stories = storiesOf('Devotional', module);
-
-// stories.add('Example', () => (
-//   <Devotional
-//     body={content.body}
-//     title={content.title}
-//     isLoading={false}
-//     scripture={scripture}
-//     renderItem={renderItem}
-//     loadingStateObject={loadingStateObject}
-//   />
-// ));
-
-// stories.add('isLoading', () => (
-//   <Devotional
-//     body={content.body}
-//     title={content.title}
-//     isLoading
-//     scripture={scripture}
-//     renderItem={renderItem}
-//     loadingStateObject={loadingStateObject}
-//   />
-// ));
+import React from 'react';
+import { storiesOf } from '@storybook/react-native';
+
+import Devotional from '.';
+
+const scripture = [
+  {
+    id: '1CO.15.57',
+    reference: '1 Corinthians 15:57',
+    html:
+      '<p class="p"><span data-number="57" class="v">57</span>But thanks be to God, who gives us the victory through our Lord Jesus Christ. </p>',
+  },
+  {
+    id: 'EXO.17.8-EXO.17.15',
+    reference: 'Exodus 17:8-15',
+    html:
+      '<p class="p"><span data-number="8" class="v">8</span>Then Amalek came and fought with Israel in Rephidim. <span data-number="9" class="v">9</span>Moses said to Joshua, “Choose men for us, and go out to fight with Amalek. Tomorrow I will stand on the top of the hill with God’s rod in my hand.” <span data-number="10" class="v">10</span>So Joshua did as Moses had told him, and fought with Amalek; and Moses, Aaron, and Hur went up to the top of the hill. <span data-number="11" class="v">11</span>When Moses held up his hand, Israel prevailed. When he let down his hand, Amalek prevailed. <span data-number="12" class="v">12</span>But Moses’ hands were heavy; so they took a stone, and put it under him, and he sat on it. Aaron and Hur held up his hands, the one on the one side, and the other on the other side. His hands were steady until sunset. <span data-number="13" class="v">13</span>Joshua defeated Amalek and his people with the edge of the sword. <span data-number="14" class="v">14</span>Yahweh said to Moses, “Write this for a memorial in a book, and rehearse it in the ears of Joshua: that I will utterly blot out the memory of Amalek from under the sky.” <span data-number="15" class="v">15</span>Moses built an altar, and called its name “Yahweh our Banner”.</p>',
+  },
+];
+
+const content = {
+  body:
+    '<p>Sometimes God&rsquo;s promises to us involve a fight. We have to fight to keep our focus on Him, fight to move towards the promise we know God has laid on our hearts. We have a real enemy that would love nothing more than to get us sidetracked and doubt God&rsquo;s promises. So we fight saying that we are going to believe God will do what He says He will do, and we keep fighting until we see that promise come to life.</p><p>In Exodus 17:8-15 the nation of Israel, freed from great oppression in Egypt was traveling to the land God promised them. Yet, Israel was fighting, again.&nbsp;<br />&nbsp;<br />As the Israelites were fighting in the valley,&nbsp;Moses was on the hill top lifting his hands in prayer for these great fighters. Israel fought hard, and with the prayers of Moses and the help of his companions, Aaron and Hur, the Amalekites were defeated. Moses knew that it was solely because of the Lord&rsquo;s hand of protection and blessing on the Israelites that they won the battle. &ldquo;Moses built an altar and called it The Lord is my banner&rdquo; (Exodus 17:15).</p><p>In battle opposing nations would fly their own flag on a pole at each of their respective front lines. This was to give their soldiers a feeling of hope and a focal point. This is what God is to us: a banner of encouragement to give us hope and a focal point.</p><blockquote><p>The Lord protects us, covers us with love, and&nbsp;blesses us continually.</p></blockquote><p>The Lord is our banner. He protects us; He covers us with love; He blesses us continually. The Lord gives us hope and a place to focus during the tough fights when the enemy is trying to make us doubt God&rsquo;s promises.&nbsp;</p><p>When was the last time you sat and thanked Jesus for all the ways he is a banner in your life?&nbsp;</p><p>Reflect:</p><ul><li>What is one way the Lord has been your banner?</li><li>How can you focus more today on the Lord and all the things He does for you throughout the day?</li></ul>',
+  route: { jumpTo: () => {} },
+  title: 'God is Our Banner',
+};
+
+const renderItem = () => {};
+
+const loadingStateObject = {
+  node: {
+    id: 'fakeId0',
+    title: '',
+    isLoading: true,
+  },
+};
+
+const stories = storiesOf('Devotional', module);
+
+stories.add('Example', () => (
+  <Devotional
+    body={content.body}
+    title={content.title}
+    isLoading={false}
+    scripture={scripture}
+    renderItem={renderItem}
+    loadingStateObject={loadingStateObject}
+  />
+));
+
+stories.add('isLoading', () => (
+  <Devotional
+    body={content.body}
+    title={content.title}
+    isLoading
+    scripture={scripture}
+    renderItem={renderItem}
+    loadingStateObject={loadingStateObject}
+  />
+));
diff --git a/apolloschurchapp/src/content-single/DevotionalContentItem/Devotional.tests.js b/apolloschurchapp/src/content-single/DevotionalContentItem/Devotional.tests.js
index 1021514..59ed7e1 100644
--- a/apolloschurchapp/src/content-single/DevotionalContentItem/Devotional.tests.js
+++ b/apolloschurchapp/src/content-single/DevotionalContentItem/Devotional.tests.js
@@ -1,9 +1,9 @@
 import React from 'react';
 import renderer from 'react-test-renderer';
+import wait from 'waait';
 import Providers from 'apolloschurchapp/src/Providers';
-import { renderWithApolloData } from 'apolloschurchapp/src/utils/testUtils';
-import GET_CONTENT_ITEM_CONTENT from '../HTMLContent/getContentItemContent';
-import GET_SCRIPTURE from './getScripture';
+import getContentItemContent from '../HTMLContent/getContentItemContent';
+import getScripture from './getScripture';
 import Devotional from '.';
 
 const content = {
@@ -32,7 +32,7 @@ const scriptures = [
 
 const scriptureMock = {
   request: {
-    query: GET_SCRIPTURE,
+    query: getScripture,
     variables: { itemId: '1' },
   },
   result: {
@@ -44,7 +44,7 @@ const scriptureMock = {
 
 const contentItemHTMLMock = {
   request: {
-    query: GET_CONTENT_ITEM_CONTENT,
+    query: getContentItemContent,
     variables: { contentId: '1' },
   },
   result: {
@@ -66,7 +66,7 @@ const navigation = {
 
 describe('the Devotional component', () => {
   it('renders a devotional', async () => {
-    const tree = await renderWithApolloData(
+    const tree = renderer.create(
       <Providers mocks={mocks}>
         <Devotional
           id="1"
@@ -76,19 +76,16 @@ describe('the Devotional component', () => {
         />
       </Providers>
     );
+    await wait(0); // wait for response
     expect(tree).toMatchSnapshot();
   });
   it('renders even with empty scripture array', async () => {
-    const tree = await renderWithApolloData(
+    const tree = renderer.create(
       <Providers mocks={mocks}>
-        <Devotional
-          id="1"
-          content={content}
-          loading={false}
-          navigation={navigation}
-        />
+        <Devotional id="1" content={content} loading navigation={navigation} />
       </Providers>
     );
+    await wait(0); // wait for response
     expect(tree).toMatchSnapshot();
   });
   it('renders a loading state', async () => {
@@ -97,6 +94,7 @@ describe('the Devotional component', () => {
         <Devotional id="1" content={content} loading navigation={navigation} />
       </Providers>
     );
+    await wait(0); // wait for response
     expect(tree).toMatchSnapshot();
   });
 });
diff --git a/apolloschurchapp/src/content-single/DevotionalContentItem/ScriptureTab.js b/apolloschurchapp/src/content-single/DevotionalContentItem/ScriptureTab.js
index 79ef066..9458010 100644
--- a/apolloschurchapp/src/content-single/DevotionalContentItem/ScriptureTab.js
+++ b/apolloschurchapp/src/content-single/DevotionalContentItem/ScriptureTab.js
@@ -2,7 +2,7 @@ import React from 'react';
 import { ScrollView } from 'react-native';
 import PropTypes from 'prop-types';
 import { PaddedView } from '@apollosproject/ui-kit';
-import ScriptureItem from '@apollosproject/ui-scripture';
+import ScriptureItem from 'apolloschurchapp/src/ui/Scripture';
 import HorizontalContentFeed from '../HorizontalContentFeed';
 
 /**
diff --git a/apolloschurchapp/src/content-single/DevotionalContentItem/index.js b/apolloschurchapp/src/content-single/DevotionalContentItem/index.js
index 07b4938..32cd53c 100644
--- a/apolloschurchapp/src/content-single/DevotionalContentItem/index.js
+++ b/apolloschurchapp/src/content-single/DevotionalContentItem/index.js
@@ -13,7 +13,7 @@ import {
 import ContentTab from './ContentTab';
 import ScriptureTab from './ScriptureTab';
 
-import GET_SCRIPTURE from './getScripture';
+import getScripture from './getScripture';
 
 const FlexedSafeAreaView = styled({ flex: 1 })(SafeAreaView);
 
@@ -86,11 +86,10 @@ class DevotionalContentItem extends PureComponent {
     loading,
   }) => {
     if (error) return <ErrorCard error={error} />;
-
     // only include scriptures where the references are not null
-    const validScriptures = scriptures
-      ? scriptures.filter((scripture) => scripture.reference != null)
-      : [];
+    const validScriptures = scriptures.filter(
+      (scripture) => scripture.reference != null
+    );
 
     const hasScripture = loading || validScriptures.length;
     const tabRoutes = [{ title: 'Devotional', key: 'content' }];
@@ -110,7 +109,7 @@ class DevotionalContentItem extends PureComponent {
     return (
       <BackgroundView>
         <FlexedSafeAreaView forceInset={{ top: 'always' }}>
-          <Query query={GET_SCRIPTURE} variables={{ itemId: this.props.id }}>
+          <Query query={getScripture} variables={{ itemId: this.props.id }}>
             {this.renderTabs}
           </Query>
         </FlexedSafeAreaView>
diff --git a/apolloschurchapp/src/content-single/HTMLContent/index.js b/apolloschurchapp/src/content-single/HTMLContent/index.js
index 755af41..39c62bc 100644
--- a/apolloschurchapp/src/content-single/HTMLContent/index.js
+++ b/apolloschurchapp/src/content-single/HTMLContent/index.js
@@ -5,13 +5,13 @@ import { Query } from 'react-apollo';
 import HTMLView from '@apollosproject/ui-htmlview';
 import { ErrorCard } from '@apollosproject/ui-kit';
 
-import GET_CONTENT_ITEM_CONTENT from './getContentItemContent';
+import getContentItemContent from './getContentItemContent';
 
 const HTMLContent = ({ contentId }) => {
   if (!contentId) return <HTMLView isLoading />;
 
   return (
-    <Query query={GET_CONTENT_ITEM_CONTENT} variables={{ contentId }}>
+    <Query query={getContentItemContent} variables={{ contentId }}>
       {({ data: { node: { htmlContent } = {} } = {}, loading, error }) => {
         if (error) return <ErrorCard error={error} />;
         return (
diff --git a/apolloschurchapp/src/content-single/HorizontalContentFeed/index.js b/apolloschurchapp/src/content-single/HorizontalContentFeed/index.js
index d9b6aba..c0a236f 100644
--- a/apolloschurchapp/src/content-single/HorizontalContentFeed/index.js
+++ b/apolloschurchapp/src/content-single/HorizontalContentFeed/index.js
@@ -10,7 +10,7 @@ import {
   TouchableScale,
 } from '@apollosproject/ui-kit';
 
-import GET_HORIZONTAL_CONTENT from './getHorizontalContent';
+import getHorizontalContent from './getHorizontalContent';
 
 const loadingStateObject = {
   node: {
@@ -81,7 +81,7 @@ class HorizontalContentFeed extends Component {
 
     return (
       <Query
-        query={GET_HORIZONTAL_CONTENT}
+        query={getHorizontalContent}
         variables={{ itemId: this.props.contentId }}
       >
         {this.renderFeed}
diff --git a/apolloschurchapp/src/content-single/MediaControls/index.js b/apolloschurchapp/src/content-single/MediaControls/index.js
index fdbbe12..994e4b0 100644
--- a/apolloschurchapp/src/content-single/MediaControls/index.js
+++ b/apolloschurchapp/src/content-single/MediaControls/index.js
@@ -4,9 +4,9 @@ import { Query, Mutation } from 'react-apollo';
 import { View } from 'react-native';
 import { get } from 'lodash';
 
-import { PLAY_VIDEO } from '@apollosproject/ui-media-player';
+import { playVideoMutation } from 'apolloschurchapp/src/ui/MediaPlayer/mutations';
 import { Icon, styled, Button } from '@apollosproject/ui-kit';
-import GET_CONTENT_MEDIA from './getContentMedia';
+import getContentMedia from './getContentMedia';
 
 const buttonSizeDifferential = 4;
 
@@ -58,7 +58,7 @@ class MediaControls extends PureComponent {
     const coverImageSources = (coverImage && coverImage.sources) || [];
 
     return (
-      <Mutation mutation={PLAY_VIDEO}>
+      <Mutation mutation={playVideoMutation}>
         {(play) => (
           <Container>
             {videoSource ? (
@@ -92,7 +92,7 @@ class MediaControls extends PureComponent {
     if (!this.props.contentId) return null;
     return (
       <Query
-        query={GET_CONTENT_MEDIA}
+        query={getContentMedia}
         variables={{ contentId: this.props.contentId }}
       >
         {this.renderControls}
diff --git a/apolloschurchapp/src/content-single/NavigationHeader.js b/apolloschurchapp/src/content-single/NavigationHeader.js
index a2e3204..50a10ff 100644
--- a/apolloschurchapp/src/content-single/NavigationHeader.js
+++ b/apolloschurchapp/src/content-single/NavigationHeader.js
@@ -4,7 +4,8 @@ import { ModalViewHeader } from '@apollosproject/ui-kit';
 
 const NavigationHeader = ({ scene, navigation }) => {
   let onBack = null;
-  if (scene.index > 0) onBack = () => navigation.goBack();
+  if (scene.index > 0) onBack = () => navigation.pop();
+
   const onClose = () => {
     // Since we're dealing with nested navigators, we have to trigger two actions:
     // One action that pops us to the top of the modal's navigation history
@@ -15,16 +16,11 @@ const NavigationHeader = ({ scene, navigation }) => {
     // handling for calling `.pop()` at the top of a nested navigators stack.
     //
     // Because react (or redux?) chains renders, this still results in only one clean animation!
-    //
-    // This "double pop" is only needed when we are already deep in a navigation stack.
-    // In ReactNavigation, we could look at using "goBack('ContentSingle')"
-    if (scene.index > 0) {
-      navigation.popToTop();
-    }
+    navigation.popToTop();
     navigation.pop();
   };
 
-  return <ModalViewHeader onClose={onClose} onBack={onBack} navigationHeader />;
+  return <ModalViewHeader onClose={onClose} onBack={onBack} />;
 };
 
 NavigationHeader.propTypes = {
diff --git a/apolloschurchapp/src/content-single/getContentItem.js b/apolloschurchapp/src/content-single/getContentItem.js
index 55676c9..b4ebc19 100644
--- a/apolloschurchapp/src/content-single/getContentItem.js
+++ b/apolloschurchapp/src/content-single/getContentItem.js
@@ -1,6 +1,6 @@
 import gql from 'graphql-tag';
 
-export const CONTENT_ITEM_FRAGMENT = gql`
+export const contentItemFragment = gql`
   fragment contentItemFragment on ContentItem {
     id
     title
@@ -48,5 +48,5 @@ export default gql`
       }
     }
   }
-  ${CONTENT_ITEM_FRAGMENT}
+  ${contentItemFragment}
 `;
diff --git a/apolloschurchapp/src/index.js b/apolloschurchapp/src/index.js
index f3e2939..b3714ea 100644
--- a/apolloschurchapp/src/index.js
+++ b/apolloschurchapp/src/index.js
@@ -1,13 +1,13 @@
 import React from 'react';
 import { StatusBar } from 'react-native';
 import { createStackNavigator } from 'react-navigation';
-import SplashScreen from 'react-native-splash-screen';
+// import { Sentry } from 'react-native-sentry';
 
 import { BackgroundView, withTheme } from '@apollosproject/ui-kit';
 import Passes from '@apollosproject/ui-passes';
-import { MediaPlayer } from '@apollosproject/ui-media-player';
-import Auth, { ProtectedRoute } from '@apollosproject/ui-auth';
 
+import MediaPlayer from 'apolloschurchapp/src/ui/MediaPlayer';
+import Auth from '@apollosproject/ui-auth';
 import Providers from './Providers';
 import NavigationService from './NavigationService';
 import ContentSingle from './content-single';
@@ -15,24 +15,20 @@ import Tabs from './tabs';
 import PersonalDetails from './user-settings/PersonalDetails';
 import ChangePassword from './user-settings/ChangePassword';
 import Location from './user-settings/Locations';
-import LandingScreen from './LandingScreen';
 import UserWebBrowser from './user-web-browser';
-import Onboarding from './ui/Onboarding';
+import Onboarding from './onboarding';
+
+// Sentry.config(
+//   'https://5908fa19ed37447f86b2717423cadec5:45dd3b58792b413cb67109c5e63a0bb7@sentry.io/1241658'
+// ).install();
 
 const AppStatusBar = withTheme(({ theme }) => ({
   barStyle: 'dark-content',
   backgroundColor: theme.colors.paper,
 }))(StatusBar);
 
-const ProtectedRouteWithSplashScreen = (props) => {
-  const handleOnRouteChange = () => SplashScreen.hide();
-
-  return <ProtectedRoute {...props} onRouteChange={handleOnRouteChange} />;
-};
-
 const AppNavigator = createStackNavigator(
   {
-    ProtectedRoute: ProtectedRouteWithSplashScreen,
     Tabs,
     ContentSingle,
     Auth,
@@ -42,10 +38,9 @@ const AppNavigator = createStackNavigator(
     Passes,
     UserWebBrowser,
     Onboarding,
-    LandingScreen,
   },
   {
-    initialRouteName: 'ProtectedRoute',
+    initialRouteName: 'Tabs',
     mode: 'modal',
     headerMode: 'screen',
   }
diff --git a/apolloschurchapp/src/live/LiveButton.js b/apolloschurchapp/src/live/LiveButton.js
index 6e1fa30..c5760e3 100644
--- a/apolloschurchapp/src/live/LiveButton.js
+++ b/apolloschurchapp/src/live/LiveButton.js
@@ -12,7 +12,7 @@ import {
 } from '@apollosproject/ui-kit';
 import { WebBrowserConsumer } from 'apolloschurchapp/src/ui/WebBrowser';
 
-import GET_LIVE_STREAM from './getLiveStream';
+import getLiveStream from './getLiveStream';
 
 const LiveCard = styled(({ theme }) => ({
   backgroundColor: theme.colors.lightSecondary,
@@ -20,7 +20,7 @@ const LiveCard = styled(({ theme }) => ({
 
 const LiveNowButton = () => (
   <Query
-    query={GET_LIVE_STREAM}
+    query={getLiveStream}
     fetchPolicy="cache-and-network"
     pollInterval={60000}
   >
diff --git a/apolloschurchapp/src/notifications/NotificationManager.js b/apolloschurchapp/src/notifications/NotificationManager.js
new file mode 100644
index 0000000..47e204c
--- /dev/null
+++ b/apolloschurchapp/src/notifications/NotificationManager.js
@@ -0,0 +1,96 @@
+import URL from 'url';
+import querystring from 'querystring';
+import { Component } from 'react';
+import { Linking } from 'react-native';
+import PropTypes from 'prop-types';
+import gql from 'graphql-tag';
+import { withApollo } from 'react-apollo';
+import OneSignal from 'react-native-onesignal';
+import Config from 'react-native-config';
+import { get } from 'lodash';
+
+import NavigationService from '../NavigationService';
+
+const UPDATE_DEVICE_PUSH_ID = gql`
+  mutation updateDevicePushId($pushId: String!) {
+    updateDevicePushId(pushId: $pushId) @client
+  }
+`;
+
+class NotificationsInit extends Component {
+  static propTypes = {
+    children: PropTypes.oneOfType([
+      PropTypes.arrayOf(PropTypes.node),
+      PropTypes.node,
+    ]).isRequired,
+  };
+
+  static navigationOptions = {};
+
+  static propTypes = {
+    client: PropTypes.shape({
+      mutate: PropTypes.func,
+    }),
+  };
+
+  componentDidMount() {
+    OneSignal.init(Config.ONE_SIGNAL_KEY, {
+      kOSSettingsKeyAutoPrompt: true,
+    });
+    OneSignal.addEventListener('received', this.onReceived);
+    OneSignal.addEventListener('opened', this.onOpened);
+    OneSignal.addEventListener('ids', this.onIds);
+    OneSignal.configure();
+    Linking.getInitialURL().then((url) => {
+      this.navigate(url);
+    });
+    Linking.addEventListener('url', ({ url }) => this.navigate(url));
+  }
+
+  componentWillUnmount() {
+    Linking.removeEventListener('url');
+    OneSignal.removeEventListener('received');
+    OneSignal.removeEventListener('opened');
+    OneSignal.removeEventListener('ids');
+  }
+
+  navigate = (rawUrl) => {
+    if (!rawUrl) return;
+    const url = URL.parse(rawUrl);
+    const route = url.pathname.substring(1);
+    const args = querystring.parse(url.query);
+    NavigationService.navigate(route, args);
+  };
+
+  onReceived = (notification) => {
+    console.log('Notification received: ', notification);
+  };
+
+  onOpened = (openResult) => {
+    console.log('Message: ', openResult.notification.payload.body);
+    console.log('Data: ', openResult.notification.payload.additionalData);
+    console.log('isActive: ', openResult.notification.isAppInFocus);
+    console.log('openResult: ', openResult);
+    // URL looks like this
+    // apolloschurchapp://AppStackNavigator/Connect
+    // apolloschurchapp://SomethingElse/Connect
+    // apolloschurchapp://SomethingElse/ContentSingle?itemId=SomeItemId:blablalba
+    const url = get(openResult, 'notification.payload.additionalData.url');
+    if (url) {
+      this.navigate(url);
+    }
+  };
+
+  onIds = (device) => {
+    this.props.client.mutate({
+      mutation: UPDATE_DEVICE_PUSH_ID,
+      variables: { pushId: device.userId },
+    });
+  };
+
+  render() {
+    return this.props.children;
+  }
+}
+
+export default withApollo(NotificationsInit);
diff --git a/apolloschurchapp/src/notifications/index.js b/apolloschurchapp/src/notifications/index.js
new file mode 100644
index 0000000..5a95ec1
--- /dev/null
+++ b/apolloschurchapp/src/notifications/index.js
@@ -0,0 +1,7 @@
+export NotificationsManager from './NotificationManager';
+export {
+  getPushPermissions,
+  requestPushPermissions,
+  getNotificationsEnabled,
+} from './permissionUtils';
+export updatePushId from './updatePushId';
diff --git a/apolloschurchapp/src/notifications/permissionUtils.js b/apolloschurchapp/src/notifications/permissionUtils.js
new file mode 100644
index 0000000..4e07b16
--- /dev/null
+++ b/apolloschurchapp/src/notifications/permissionUtils.js
@@ -0,0 +1,39 @@
+import OneSignal from 'react-native-onesignal';
+import gql from 'graphql-tag';
+
+const getPushPermissions = async () =>
+  new Promise((resolve) =>
+    OneSignal.getPermissionSubscriptionState((status) =>
+      // Ensure the client (notificationsEnabled) && OneSignal (subscriptionEnabled) are boolean values
+      resolve(!!(status.notificationsEnabled && status.subscriptionEnabled))
+    )
+  );
+
+const promptForPushNotificationsWithUserResponse = async () =>
+  new Promise((resolve) =>
+    OneSignal.promptForPushNotificationsWithUserResponse(resolve)
+  );
+
+const setNotifcationsEnabled = gql`
+  mutation updatePushPermissions($enabled: Boolean!) {
+    updatePushPermissions(enabled: $enabled) @client
+  }
+`;
+
+const getNotificationsEnabled = gql`
+  query getPushPermissions {
+    notificationsEnabled @client(always: true)
+  }
+`;
+
+const requestPushPermissions = async ({ client }) => {
+  const notificationsEnabled = await promptForPushNotificationsWithUserResponse();
+  await client.mutate({
+    mutation: setNotifcationsEnabled,
+    variables: { enabled: notificationsEnabled },
+  });
+
+  return notificationsEnabled;
+};
+
+export { getPushPermissions, requestPushPermissions, getNotificationsEnabled };
diff --git a/apolloschurchapp/src/notifications/permissionUtils.tests.js b/apolloschurchapp/src/notifications/permissionUtils.tests.js
new file mode 100644
index 0000000..870d597
--- /dev/null
+++ b/apolloschurchapp/src/notifications/permissionUtils.tests.js
@@ -0,0 +1,29 @@
+import { client } from '../client';
+import {
+  getPushPermissions,
+  getNotificationsEnabled,
+  requestPushPermissions,
+} from './permissionUtils';
+
+describe('getPushPermissions', () => {
+  it('should return a boolean based on the result from OneSignal', async () => {
+    const result = await getPushPermissions();
+    expect(result).toEqual(true);
+  });
+});
+
+describe('requestPushPermissions', () => {
+  it('must update the store if OneSignal returns true', async () => {
+    expect(
+      client.readQuery({ query: getNotificationsEnabled })
+    ).toMatchSnapshot('Before calling mutation');
+
+    const result = await requestPushPermissions({ client });
+    expect(result).toEqual(true);
+    // this doesn't work yet :(
+    // the result is same as above, it looks like the client state isn't loading in time
+    expect(
+      client.readQuery({ query: getNotificationsEnabled })
+    ).toMatchSnapshot('After calling mutation');
+  });
+});
diff --git a/apolloschurchapp/src/notifications/updatePushId.js b/apolloschurchapp/src/notifications/updatePushId.js
new file mode 100644
index 0000000..a43b658
--- /dev/null
+++ b/apolloschurchapp/src/notifications/updatePushId.js
@@ -0,0 +1,18 @@
+import gql from 'graphql-tag';
+
+const UPDATE_PUSH_ID = gql`
+  mutation updateUserPushSettings($input: PushSettingsInput!) {
+    updateUserPushSettings(input: $input) {
+      id
+    }
+  }
+`;
+
+const updatePushId = async ({ pushId, client }) => {
+  await client.mutate({
+    mutation: UPDATE_PUSH_ID,
+    variables: { input: { pushProviderUserId: pushId } },
+  });
+};
+
+export { updatePushId as default };
diff --git a/apolloschurchapp/src/onboarding/index.js b/apolloschurchapp/src/onboarding/index.js
new file mode 100644
index 0000000..6396965
--- /dev/null
+++ b/apolloschurchapp/src/onboarding/index.js
@@ -0,0 +1,13 @@
+import React, { PureComponent } from 'react';
+import Onboarding from 'apolloschurchapp/src/ui/Onboarding';
+
+export default class TestingControlPanel extends PureComponent {
+  static navigationOptions = () => ({
+    title: 'Onboarding',
+    header: null,
+  });
+
+  render() {
+    return <Onboarding />;
+  }
+}
diff --git a/apolloschurchapp/src/scripture/index.js b/apolloschurchapp/src/scripture/index.js
index 5b23d5d..5c7e682 100644
--- a/apolloschurchapp/src/scripture/index.js
+++ b/apolloschurchapp/src/scripture/index.js
@@ -2,8 +2,8 @@ import React from 'react';
 import { Query } from 'react-apollo';
 import { get } from 'lodash';
 import PropTypes from 'prop-types';
-import { ScriptureItem } from '@apollosproject/ui-scripture';
-import GET_SCRIPTURE from './getScripture';
+import ScriptureItem from 'apolloschurchapp/src/ui/Scripture/ScriptureItem';
+import getScripture from './getScripture';
 
 /**
  * This is the data-bound "connected" scripture component.
@@ -15,7 +15,7 @@ const ScriptureConnected = ({
   references,
 }) =>
   references.map((query) => (
-    <Query query={GET_SCRIPTURE} variables={{ query }} key={query}>
+    <Query query={getScripture} variables={{ query }} key={query}>
       {({ loading, data }) => (
         <ScriptureComponent
           reference={get(data, 'scripture.reference', '')}
diff --git a/apolloschurchapp/src/store/MediaPlayer.tests.js b/apolloschurchapp/src/store/MediaPlayer.tests.js
new file mode 100644
index 0000000..5ebf3a8
--- /dev/null
+++ b/apolloschurchapp/src/store/MediaPlayer.tests.js
@@ -0,0 +1,60 @@
+import { client } from 'apolloschurchapp/src/client';
+import gql from 'graphql-tag';
+
+import { resolvers, defaults } from '.';
+
+const query = gql`
+  query {
+    mediaPlayer @client {
+      currentTrack {
+        mediaSourceUri
+        posterSourceUri
+        title
+        artist
+      }
+      isPlaying
+      isFullscreen
+      isVisible
+    }
+  }
+`;
+
+const testTrack = {
+  parentId: 'parentId',
+  mediaSourceUri: 'mediaSourceUri',
+  posterSourceUri: 'posterSourceUri',
+  title: 'title',
+  artist: 'artist',
+};
+
+describe('MediaPlayer Store', () => {
+  beforeEach(() => {
+    client.writeData({ data: defaults });
+  });
+
+  it('plays a track', async () => {
+    resolvers.Mutation.mediaPlayerPlayNow({}, testTrack, {
+      cache: client.cache,
+      client,
+    });
+    expect(client.query({ query })).resolves.toMatchSnapshot();
+  });
+  it('updates player state', async () => {
+    resolvers.Mutation.mediaPlayerPlayNow({}, testTrack, {
+      cache: client.cache,
+      client,
+    });
+    expect(client.query({ query })).resolves.toMatchSnapshot();
+    resolvers.Mutation.mediaPlayerUpdateState(
+      {},
+      { isPlaying: false },
+      { cache: client.cache, client }
+    );
+    expect(client.query({ query })).resolves.toMatchSnapshot();
+    resolvers.Mutation.mediaPlayerUpdateState(
+      {},
+      { isPlaying: true },
+      { cache: client.cache, client }
+    );
+  });
+});
diff --git a/apolloschurchapp/src/store/index.js b/apolloschurchapp/src/store/index.js
index 66fdccb..1ff8038 100644
--- a/apolloschurchapp/src/store/index.js
+++ b/apolloschurchapp/src/store/index.js
@@ -1,40 +1,253 @@
+import { merge, get } from 'lodash';
 import gql from 'graphql-tag';
 
-import { schema as mediaPlayerSchema } from '@apollosproject/ui-media-player';
-import { updatePushId } from '@apollosproject/ui-notifications';
+import { track, events } from 'apolloschurchapp/src/analytics';
+import { Platform } from 'react-native';
 import { CACHE_LOADED } from '../client/cache'; // eslint-disable-line
 
+import {
+  getPushPermissions,
+  updatePushId,
+  getNotificationsEnabled,
+} from '../notifications';
 // TODO: this will require more organization...ie...not keeping everything in one file.
 // But this is simple while our needs our small.
 
 export const schema = `
   type Query {
+    mediaPlayer: MediaPlayerState
     devicePushId: String
     cacheLoaded: Boolean
     notificationsEnabled: Boolean
   }
 
   type Mutation {
+    mediaPlayerUpdateState(isPlaying: Boolean, isFullscreen: Boolean, isVisible: Boolean): Boolean
+    mediaPlayerSetPlayhead(currentTime: Float): Boolean
+    mediaPlayerPlayNow(
+      parentId: ID,
+      mediaSource: VideoMediaSource!,
+      posterSources: [ImageMediaSource],
+      title: String,
+      artist: String,
+      isVideo: Boolean,
+    ): Boolean
+
     cacheMarkLoaded
     updateDevicePushId(pushId: String!)
     updatePushPermissions(enabled: Boolean!)
   }
-${mediaPlayerSchema}
+
+  type MediaPlayerState {
+    currentTrack: MediaPlayerTrack
+    isPlaying: Boolean
+    isFullscreen: Boolean
+    isVisible: Boolean
+    currentTime: Float
+  }
+
+  type MediaPlayerProgress {
+    currentTime: Float
+    playableDuration: Float
+    seekableDuration: Float
+    duration: Float
+  }
+
+  type MediaPlayerTrack {
+    id: ID!
+    parentId: ID
+    mediaSource: VideoMediaSource!
+    posterSources: [ImageMediaSource]
+    title: String
+    artist: String
+    isVideo: Boolean
+  }
 `;
 
 export const defaults = {
   __typename: 'Query',
   cacheLoaded: false,
+  pushId: null,
+  notificationsEnabled: Platform.OS === 'android',
+  mediaPlayer: {
+    __typename: 'MediaPlayerState',
+    currentTrack: null,
+    isPlaying: false,
+    isFullscreen: false,
+    isVisible: false,
+    currentTime: 0,
+    showVideo: true,
+    muted: false,
+  },
 };
 
-const GET_LOGGED_IN = gql`
+let trackId = 0;
+
+const getIsLoggedIn = gql`
   query {
     isLoggedIn @client
   }
 `;
 
 export const resolvers = {
+  Query: {
+    notificationsEnabled: getPushPermissions,
+  },
   Mutation: {
+    mediaPlayerPlayNow: (root, trackInfo, { cache, client }) => {
+      const query = gql`
+        query {
+          mediaPlayer {
+            isFullscreen
+          }
+        }
+      `;
+      const mediaTrack = merge(
+        {
+          __typename: 'MediaPlayerTrack',
+          parentId: null,
+          mediaSource: null,
+          posterSources: null,
+          title: null,
+          artist: null,
+          isVideo: false,
+        },
+        trackInfo
+      );
+
+      const { mediaPlayer } = cache.readQuery({ query });
+
+      const newMediaPlayerState = {
+        __typename: 'MediaPlayerState',
+        isPlaying: true,
+        isVisible: true,
+        isFullscreen: mediaTrack.isVideo
+          ? true
+          : (mediaPlayer && mediaPlayer.isFullscreen) || false,
+        currentTrack: mediaTrack,
+        currentTime: 0,
+        showVideo: mediaTrack.isVideo,
+        muted: false,
+      };
+
+      if (
+        // if same track
+        mediaPlayer &&
+        mediaPlayer.currentTrack &&
+        mediaPlayer.currentTrack.mediaSource.uri === mediaTrack.mediaSource.uri
+      ) {
+        // use the same Id
+        newMediaPlayerState.currentTrack.id = mediaPlayer.currentTrack.id;
+      } else {
+        // otherwise reset progress and use new Id
+        newMediaPlayerState.currentTrack.id = trackId;
+        newMediaPlayerState.progress = null;
+        trackId += 1;
+      }
+
+      cache.writeData({
+        query,
+        data: {
+          mediaPlayer: newMediaPlayerState,
+        },
+      });
+      track({
+        eventName: events.UserPlayedMedia,
+        properties: {
+          uri: mediaTrack.uri,
+          title: mediaTrack.title,
+          type: mediaTrack.isVideo ? 'Video' : 'Audio',
+        },
+        client,
+      });
+      return null;
+    },
+    mediaPlayerUpdateState: (
+      root,
+      { isPlaying, isFullscreen, isVisible, showVideo, muted },
+      { cache }
+    ) => {
+      const query = gql`
+        query {
+          mediaPlayer @client {
+            isPlaying
+            isFullscreen
+            isVisible
+            showVideo
+            muted
+          }
+        }
+      `;
+      const { mediaPlayer } = cache.readQuery({ query });
+      cache.writeQuery({
+        query,
+        data: {
+          mediaPlayer: merge(mediaPlayer, {
+            isPlaying,
+            isFullscreen,
+            isVisible,
+            showVideo,
+            muted,
+            __typename: 'MediaPlayerState',
+          }),
+        },
+      });
+      return null;
+    },
+    mediaPlayerSetPlayhead: (root, { currentTime }, { cache }) => {
+      const query = gql`
+        query {
+          mediaPlayer @client {
+            currentTime
+          }
+        }
+      `;
+      const { mediaPlayer } = cache.readQuery({ query });
+      cache.writeQuery({
+        query,
+        data: {
+          mediaPlayer: {
+            __typename: 'MediaPlayerState',
+            currentTime:
+              currentTime || get(mediaPlayer.progress, 'currentTime') || 0,
+          },
+        },
+      });
+      return null;
+    },
+    updateDevicePushId: async (root, { pushId }, { cache, client }) => {
+      const query = gql`
+        query {
+          pushId @client
+        }
+      `;
+      cache.writeQuery({
+        query,
+        data: {
+          pushId,
+        },
+      });
+
+      const { data: { isLoggedIn } = {} } = await client.query({
+        query: getIsLoggedIn,
+      });
+
+      if (isLoggedIn) {
+        updatePushId({ pushId, client });
+      }
+      return null;
+    },
+    updatePushPermissions: (root, { enabled }, { cache }) => {
+      cache.writeQuery({
+        query: getNotificationsEnabled,
+        data: {
+          notificationsEnabled: enabled,
+        },
+      });
+
+      return null;
+    },
+
     cacheMarkLoaded: async (root, args, { cache, client }) => {
       cache.writeQuery({
         query: CACHE_LOADED,
@@ -43,7 +256,7 @@ export const resolvers = {
         },
       });
       const { data: { isLoggedIn } = {} } = await client.query({
-        query: GET_LOGGED_IN,
+        query: getIsLoggedIn,
       });
 
       const { pushId } = cache.readQuery({
diff --git a/apolloschurchapp/src/tabs/connect/Connect.js b/apolloschurchapp/src/tabs/connect/Connect.js
index f3ba0e1..79bb6df 100644
--- a/apolloschurchapp/src/tabs/connect/Connect.js
+++ b/apolloschurchapp/src/tabs/connect/Connect.js
@@ -4,7 +4,7 @@ import { Query } from 'react-apollo';
 import { get } from 'lodash';
 import PropTypes from 'prop-types';
 
-import { LoginButton, GET_LOGIN_STATE } from '@apollosproject/ui-auth';
+import { LoginButton } from '@apollosproject/ui-auth';
 import {
   H1,
   BodyText,
@@ -19,6 +19,7 @@ import ActionTable from './ActionTable';
 import Toolbar from './Toolbar';
 import { UserAvatarHeaderConnected } from './UserAvatarHeader';
 import { RecentlyLikedTileFeedConnected } from './RecentlyLikedTileFeed';
+import getLoginState from './getLoginState';
 
 const Title = styled(({ theme }) => ({
   color: theme.colors.primary,
@@ -62,7 +63,7 @@ class Connect extends PureComponent {
   render() {
     return (
       <BackgroundView>
-        <Query query={GET_LOGIN_STATE}>
+        <Query query={getLoginState}>
           {({ data }) => {
             if (get(data, 'isLoggedIn', false))
               return (
diff --git a/apolloschurchapp/src/tabs/connect/LikedContentList/LikedContentList.tests.js b/apolloschurchapp/src/tabs/connect/LikedContentList/LikedContentList.tests.js
index 673817c..78a32c7 100644
--- a/apolloschurchapp/src/tabs/connect/LikedContentList/LikedContentList.tests.js
+++ b/apolloschurchapp/src/tabs/connect/LikedContentList/LikedContentList.tests.js
@@ -4,14 +4,14 @@ import wait from 'waait';
 
 import Providers from 'apolloschurchapp/src/Providers';
 
-import GET_LIKED_CONTENT from '../getLikedContent';
+import getLikedContent from '../getLikedContent';
 import LikedContentList from '.';
 
 describe('LikedContentList component', () => {
   it('renders LikedContentList', async () => {
     const mock = {
       request: {
-        query: GET_LIKED_CONTENT,
+        query: getLikedContent,
       },
       result: {
         data: {
diff --git a/apolloschurchapp/src/tabs/connect/LikedContentList/index.js b/apolloschurchapp/src/tabs/connect/LikedContentList/index.js
index 38dedb3..c53c2ae 100644
--- a/apolloschurchapp/src/tabs/connect/LikedContentList/index.js
+++ b/apolloschurchapp/src/tabs/connect/LikedContentList/index.js
@@ -4,10 +4,9 @@ import { Query } from 'react-apollo';
 import { get } from 'lodash';
 
 import { BackgroundView, FeedView } from '@apollosproject/ui-kit';
-import fetchMoreResolver from 'apolloschurchapp/src/utils/fetchMoreResolver';
 import ContentCardConnected from '../../../ui/ContentCardConnected';
 
-import GET_LIKED_CONTENT from '../getLikedContent';
+import getLikedContent from '../getLikedContent';
 /** A FeedView wrapped in a query to pull content data. */
 class LikedContentList extends PureComponent {
   /** Function for React Navigation to set information in the header. */
@@ -38,11 +37,11 @@ class LikedContentList extends PureComponent {
     return (
       <BackgroundView>
         <Query
-          query={GET_LIKED_CONTENT}
+          query={getLikedContent}
           fetchPolicy="cache-and-network"
           variables={{ first: 20 }}
         >
-          {({ loading, error, data, refetch, fetchMore, variables }) => (
+          {({ loading, error, data, refetch }) => (
             <FeedView
               ListItemComponent={ContentCardConnected}
               content={get(data, 'likedContent.edges', []).map(
@@ -52,12 +51,6 @@ class LikedContentList extends PureComponent {
               error={error}
               refetch={refetch}
               onPressItem={this.handleOnPress}
-              fetchMore={fetchMoreResolver({
-                collectionName: 'likedContent',
-                fetchMore,
-                variables,
-                data,
-              })}
             />
           )}
         </Query>
diff --git a/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeedConnected.js b/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeedConnected.js
index bfccbe1..7527d53 100644
--- a/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeedConnected.js
+++ b/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeedConnected.js
@@ -2,12 +2,12 @@ import React from 'react';
 import { Query } from 'react-apollo';
 import PropTypes from 'prop-types';
 
-import GET_LIKED_CONTENT from '../getLikedContent';
+import getLikedContent from '../getLikedContent';
 import RecentlyLikedTileFeed from './RecentlyLikedTileFeed';
 
 const RecentlyLikedTileFeedConnected = ({ navigation }) => (
   <Query
-    query={GET_LIKED_CONTENT}
+    query={getLikedContent}
     fetchPolicy="cache-and-network"
     variables={{ first: 3 }}
   >
diff --git a/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeedConnected.tests.js b/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeedConnected.tests.js
index 8463a14..19c91cf 100644
--- a/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeedConnected.tests.js
+++ b/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeedConnected.tests.js
@@ -4,14 +4,14 @@ import wait from 'waait';
 
 import Providers from 'apolloschurchapp/src/Providers';
 
-import GET_LIKED_CONTENT from '../getLikedContent';
+import getLikedContent from '../getLikedContent';
 import RecentlyLikedTileFeedConnected from './RecentlyLikedTileFeedConnected';
 
 describe('RecentlyLikedTileFeedConnected', () => {
   it('renders a RecentlyLikedTileFeedConnected', async () => {
     const mock = {
       request: {
-        query: GET_LIKED_CONTENT,
+        query: getLikedContent,
       },
       result: {
         data: {
@@ -87,7 +87,7 @@ describe('RecentlyLikedTileFeedConnected', () => {
   it('renders nothing if no liked content', async () => {
     const mock = {
       request: {
-        query: GET_LIKED_CONTENT,
+        query: getLikedContent,
       },
       result: {
         data: {
diff --git a/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeaderConnected.js b/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeaderConnected.js
index 9b9997c..1ab8d26 100644
--- a/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeaderConnected.js
+++ b/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeaderConnected.js
@@ -1,17 +1,18 @@
 import React from 'react';
 import { Query } from 'react-apollo';
 import PropTypes from 'prop-types';
-import { get } from 'lodash';
 
-import GET_USER_PROFILE from '../getUserProfile';
+import getUserProfile from '../getUserProfile';
 import UserAvatarHeader from './UserAvatarHeader';
 
 const UserAvatarHeaderConnected = ({ navigation }) => (
-  <Query query={GET_USER_PROFILE} fetchPolicy="cache-and-network">
+  <Query query={getUserProfile} fetchPolicy="cache-and-network">
     {({
       data: {
         currentUser: {
-          profile: { photo, firstName, lastName, campus } = {},
+          profile: { photo, firstName, lastName, campus: { name } } = {
+            campus: {},
+          },
         } = {},
       } = {},
       refetch,
@@ -19,7 +20,7 @@ const UserAvatarHeaderConnected = ({ navigation }) => (
       <UserAvatarHeader
         firstName={firstName}
         lastName={lastName}
-        location={get(campus, 'name')}
+        location={name}
         photo={photo}
         refetch={refetch}
         navigation={navigation}
diff --git a/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeaderConnected.tests.js b/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeaderConnected.tests.js
index 0395abe..e0a8488 100644
--- a/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeaderConnected.tests.js
+++ b/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeaderConnected.tests.js
@@ -1,51 +1,31 @@
 import React from 'react';
-import { renderWithApolloData } from 'apolloschurchapp/src/utils/testUtils';
+import renderer from 'react-test-renderer';
+import wait from 'waait';
 
 import Providers from 'apolloschurchapp/src/Providers';
 
-import GET_USER_PROFILE from '../getUserProfile';
+import getUserProfile from '../getUserProfile';
 import UserAvatarHeaderConnected from './UserAvatarHeaderConnected';
 
 describe('user avatar header connect', () => {
   it('renders user avatar header if logged in', async () => {
     const mock = {
       request: {
-        query: GET_USER_PROFILE,
+        query: getUserProfile,
       },
       result: {
         data: {
           currentUser: {
-            __typename: 'AuthenticatedUser',
-            id: 'AuthenticatedUser:123',
+            id: 'AuthenticatedUser:057b0758543270d1cb21784cac4d3f5c',
             profile: {
-              id: 'Person:123',
-              __typename: 'Person',
-              gender: 'Male',
-              birthDate: '1980-02-10T00:00:00',
               firstName: 'Isaac',
               lastName: 'Hardy',
-              campus: {
-                __typename: 'Campus',
-                id: 'Campus:a0f64573eabf00a607bec911794d50fb',
-                name: 'Chicago Campus',
-                latitude: 42.09203,
-                longitude: -88.13289,
-                distanceFromLocation: null,
-                street1: '67 Algonquin Rd',
-                street2: '',
-                city: 'South Barrington',
-                state: 'IL',
-                postalCode: '60010-6143',
-                image: {
-                  __typename: 'ImageMediaSource',
-                  uri: 'https://picsum.photos/300/300/?random',
-                },
-              },
+              location: 'Anderson, SC',
               email: 'isaac.hardy@newspring.cc',
-              nickName: 'Batman',
+              nickName: 'Ike',
               photo: {
-                __typename: 'ImageMediaSource',
-                uri: 'https://some-uri.com/test.jpg',
+                uri:
+                  'https://apollosrock.newspring.cc:443/GetImage.ashx?guid=60fd5f35-3167-4c26-9a30-d44937287b87',
               },
             },
           },
@@ -53,11 +33,12 @@ describe('user avatar header connect', () => {
       },
     };
     const navigation = { navigate: jest.fn(), getParam: jest.fn() };
-    const tree = await renderWithApolloData(
+    const tree = renderer.create(
       <Providers mocks={[mock]}>
         <UserAvatarHeaderConnected navigation={navigation} />
       </Providers>
     );
+    await wait(0); // wait for response from graphql
     expect(tree).toMatchSnapshot();
   });
 });
diff --git a/apolloschurchapp/src/tabs/connect/getLikedContent.js b/apolloschurchapp/src/tabs/connect/getLikedContent.js
index 67a6720..8a903d1 100644
--- a/apolloschurchapp/src/tabs/connect/getLikedContent.js
+++ b/apolloschurchapp/src/tabs/connect/getLikedContent.js
@@ -1,14 +1,11 @@
 import gql from 'graphql-tag';
 
-import { LARGE_CARD_FRAGMENT } from 'apolloschurchapp/src/ui/ContentCardConnected';
-import { CONTENT_ITEM_FRAGMENT } from 'apolloschurchapp/src/content-single/getContentItem';
+import { largeCardFragment } from 'apolloschurchapp/src/ui/ContentCardConnected';
+import { contentItemFragment } from 'apolloschurchapp/src/content-single/getContentItem';
 
 export default gql`
-  query getAllLikedContent($first: Int, $after: String) {
-    likedContent(first: $first, after: $after) {
-      pageInfo {
-        endCursor
-      }
+  query getAllLikedContent($first: Int) {
+    likedContent(first: $first) {
       edges {
         node {
           ... on ContentItem {
@@ -19,6 +16,6 @@ export default gql`
       }
     }
   }
-  ${CONTENT_ITEM_FRAGMENT}
-  ${LARGE_CARD_FRAGMENT}
+  ${contentItemFragment}
+  ${largeCardFragment}
 `;
diff --git a/apolloschurchapp/src/tabs/connect/getUserProfile.js b/apolloschurchapp/src/tabs/connect/getUserProfile.js
index ef3b2c8..54c0f77 100644
--- a/apolloschurchapp/src/tabs/connect/getUserProfile.js
+++ b/apolloschurchapp/src/tabs/connect/getUserProfile.js
@@ -1,26 +1,21 @@
 import gql from 'graphql-tag';
-import CampusParts from 'apolloschurchapp/src/user-settings/Locations/campusFragment';
 
 export default gql`
   query getCurrentUserProfile {
     currentUser {
       id
       profile {
-        id
         firstName
         lastName
         campus {
-          ...CampusParts
+          name
         }
         email
         nickName
-        gender
-        birthDate
         photo {
           uri
         }
       }
     }
   }
-  ${CampusParts}
 `;
diff --git a/apolloschurchapp/src/tabs/discover/Discover.js b/apolloschurchapp/src/tabs/discover/Discover.js
index 210c1a2..76d8b24 100644
--- a/apolloschurchapp/src/tabs/discover/Discover.js
+++ b/apolloschurchapp/src/tabs/discover/Discover.js
@@ -5,7 +5,7 @@ import { get } from 'lodash';
 import { FeedView, BackgroundView } from '@apollosproject/ui-kit';
 
 import TileContentFeed from './TileContentFeed';
-import GET_CONTENT_CHANNELS from './getContentChannels';
+import getContentChannels from './getContentChannels';
 
 const childContentItemLoadingState = {
   title: '',
@@ -33,7 +33,7 @@ class Discover extends PureComponent {
   render() {
     return (
       <BackgroundView>
-        <Query query={GET_CONTENT_CHANNELS} fetchPolicy="cache-and-network">
+        <Query query={getContentChannels} fetchPolicy="cache-and-network">
           {({
             error,
             loading,
diff --git a/apolloschurchapp/src/tabs/discover/discover.tests.js b/apolloschurchapp/src/tabs/discover/discover.tests.js
index 6e8f57b..96f2fde 100644
--- a/apolloschurchapp/src/tabs/discover/discover.tests.js
+++ b/apolloschurchapp/src/tabs/discover/discover.tests.js
@@ -5,13 +5,13 @@ import { createStackNavigator } from 'react-navigation';
 import Providers from 'apolloschurchapp/src/Providers';
 
 import Discover from './Discover';
-import GET_CONTENT_CHANNELS from './getContentChannels';
+import getContentChannels from './getContentChannels';
 
 describe('Test the Discover Component Query', () => {
   it('Should retrieve the Content Channel Feeds', () => {
     const mock = {
       request: {
-        query: GET_CONTENT_CHANNELS,
+        query: getContentChannels,
       },
       result: {
         data: {
diff --git a/apolloschurchapp/src/tabs/discover/getContentChannels.js b/apolloschurchapp/src/tabs/discover/getContentChannels.js
index be21aa9..bc9c243 100644
--- a/apolloschurchapp/src/tabs/discover/getContentChannels.js
+++ b/apolloschurchapp/src/tabs/discover/getContentChannels.js
@@ -1,7 +1,7 @@
 import gql from 'graphql-tag';
 
-import { CONTENT_ITEM_FRAGMENT } from 'apolloschurchapp/src/content-single/getContentItem';
-import { TILE_CARD_FRAGMENT } from 'apolloschurchapp/src/ui/ContentCardConnected';
+import { contentItemFragment } from 'apolloschurchapp/src/content-single/getContentItem';
+import { tileCardFragment } from 'apolloschurchapp/src/ui/ContentCardConnected';
 
 export default gql`
   query getContentChannels {
@@ -19,6 +19,6 @@ export default gql`
       }
     }
   }
-  ${CONTENT_ITEM_FRAGMENT}
-  ${TILE_CARD_FRAGMENT}
+  ${contentItemFragment}
+  ${tileCardFragment}
 `;
diff --git a/apolloschurchapp/src/tabs/home/Home.js b/apolloschurchapp/src/tabs/home/Home.js
index 9d7b3c8..bb09a97 100644
--- a/apolloschurchapp/src/tabs/home/Home.js
+++ b/apolloschurchapp/src/tabs/home/Home.js
@@ -5,24 +5,12 @@ import SafeAreaView from 'react-native-safe-area-view';
 import { get } from 'lodash';
 import PropTypes from 'prop-types';
 
-import {
-  styled,
-  FeedView,
-  BackgroundView,
-  H3,
-  H6,
-  TouchableScale,
-} from '@apollosproject/ui-kit';
-
-import fetchMoreResolver from '../../utils/fetchMoreResolver';
+import { styled, FeedView, BackgroundView } from '@apollosproject/ui-kit';
 import ContentCardConnected from '../../ui/ContentCardConnected';
 
 import { LiveButton } from '../../live';
 
-import ContentTableCard from '../../ui/ContentTableCard';
-import GET_USER_FEED from './getUserFeed';
-import GET_PERSONA_FEED from './getPersonaFeed';
-import GET_CAMPAIGN_CONTENT_ITEM from './getCampaignContentItem';
+import getUserFeed from './getUserFeed';
 
 const LogoTitle = styled(({ theme }) => ({
   height: theme.sizing.baseUnit,
@@ -31,10 +19,6 @@ const LogoTitle = styled(({ theme }) => ({
   resizeMode: 'contain',
 }))(Image);
 
-const StyledH6 = styled(({ theme }) => ({
-  color: theme.colors.text.tertiary,
-}))(H6);
-
 class Home extends PureComponent {
   static navigationOptions = () => ({
     header: null,
@@ -58,26 +42,13 @@ class Home extends PureComponent {
     return (
       <BackgroundView>
         <SafeAreaView>
-          <Query
-            query={GET_USER_FEED}
-            variables={{
-              first: 10,
-              after: null,
-            }}
-            fetchPolicy="cache-and-network"
-          >
-            {({ loading, error, data, refetch, fetchMore, variables }) => (
+          <Query query={getUserFeed} fetchPolicy="cache-and-network">
+            {({ loading, error, data, refetch }) => (
               <FeedView
                 ListItemComponent={ContentCardConnected}
                 content={get(data, 'userFeed.edges', []).map(
                   (edge) => edge.node
                 )}
-                fetchMore={fetchMoreResolver({
-                  collectionName: 'userFeed',
-                  fetchMore,
-                  variables,
-                  data,
-                })}
                 isLoading={loading}
                 error={error}
                 refetch={refetch}
@@ -85,70 +56,6 @@ class Home extends PureComponent {
                   <>
                     <LogoTitle source={require('./wordmark.png')} />
                     <LiveButton />
-                    <Query
-                      query={GET_CAMPAIGN_CONTENT_ITEM}
-                      fetchPolicy="cache-and-network"
-                    >
-                      {({ data: featuredData, loading: isFeaturedLoading }) => {
-                        const featuredContent = get(
-                          featuredData,
-                          'campaigns.edges',
-                          []
-                        ).map((edge) => edge.node);
-
-                        const featuredItem = get(
-                          featuredContent[0],
-                          'childContentItemsConnection.edges[0].node',
-                          {}
-                        );
-
-                        return (
-                          <TouchableScale
-                            onPress={() =>
-                              this.handleOnPress({ id: featuredItem.id })
-                            }
-                          >
-                            <ContentCardConnected
-                              contentId={featuredItem.id}
-                              isLoading={isFeaturedLoading}
-                            />
-                          </TouchableScale>
-                        );
-                      }}
-                    </Query>
-                    <Query
-                      query={GET_PERSONA_FEED}
-                      fetchPolicy="cache-and-network"
-                    >
-                      {({
-                        data: personaData,
-                        loading: isContentTableLoading,
-                      }) => (
-                        <ContentTableCard
-                          isLoading={isContentTableLoading}
-                          onPress={this.handleOnPress}
-                          header={
-                            <>
-                              <StyledH6 isLoading={isContentTableLoading}>
-                                FOR YOU
-                              </StyledH6>
-                              <H3
-                                isLoading={isContentTableLoading}
-                                numberOfLines={3}
-                                ellipsizeMode="tail"
-                              >
-                                Explore what God calls you to today
-                              </H3>
-                            </>
-                          }
-                          content={get(
-                            personaData,
-                            'personaFeed.edges',
-                            []
-                          ).map((edge) => edge.node)}
-                        />
-                      )}
-                    </Query>
                   </>
                 }
                 onPressItem={this.handleOnPress}
diff --git a/apolloschurchapp/src/tabs/home/getCampaignContentItem.js b/apolloschurchapp/src/tabs/home/getCampaignContentItem.js
deleted file mode 100644
index 345463c..0000000
--- a/apolloschurchapp/src/tabs/home/getCampaignContentItem.js
+++ /dev/null
@@ -1,25 +0,0 @@
-import gql from 'graphql-tag';
-
-import { CONTENT_ITEM_FRAGMENT } from 'apolloschurchapp/src/content-single/getContentItem';
-import { LARGE_CARD_FRAGMENT } from 'apolloschurchapp/src/ui/ContentCardConnected';
-
-export default gql`
-  query campaigns {
-    campaigns {
-      edges {
-        node {
-          childContentItemsConnection {
-            edges {
-              node {
-                ...largeCardFragment
-                ...contentItemFragment
-              }
-            }
-          }
-        }
-      }
-    }
-  }
-  ${CONTENT_ITEM_FRAGMENT}
-  ${LARGE_CARD_FRAGMENT}
-`;
diff --git a/apolloschurchapp/src/tabs/home/getPersonaFeed.js b/apolloschurchapp/src/tabs/home/getPersonaFeed.js
deleted file mode 100644
index ac2b87d..0000000
--- a/apolloschurchapp/src/tabs/home/getPersonaFeed.js
+++ /dev/null
@@ -1,19 +0,0 @@
-import gql from 'graphql-tag';
-
-import { CONTENT_ITEM_FRAGMENT } from 'apolloschurchapp/src/content-single/getContentItem';
-import { LARGE_CARD_FRAGMENT } from 'apolloschurchapp/src/ui/ContentCardConnected';
-
-export default gql`
-  query getPersonaFeed {
-    personaFeed(first: 4) {
-      edges {
-        node {
-          ...largeCardFragment
-          ...contentItemFragment
-        }
-      }
-    }
-  }
-  ${CONTENT_ITEM_FRAGMENT}
-  ${LARGE_CARD_FRAGMENT}
-`;
diff --git a/apolloschurchapp/src/tabs/home/getUserFeed.js b/apolloschurchapp/src/tabs/home/getUserFeed.js
index e120403..2d7cb9a 100644
--- a/apolloschurchapp/src/tabs/home/getUserFeed.js
+++ b/apolloschurchapp/src/tabs/home/getUserFeed.js
@@ -1,14 +1,11 @@
 import gql from 'graphql-tag';
 
-import { CONTENT_ITEM_FRAGMENT } from 'apolloschurchapp/src/content-single/getContentItem';
-import { LARGE_CARD_FRAGMENT } from 'apolloschurchapp/src/ui/ContentCardConnected';
+import { contentItemFragment } from 'apolloschurchapp/src/content-single/getContentItem';
+import { largeCardFragment } from 'apolloschurchapp/src/ui/ContentCardConnected';
 
 export default gql`
-  query getUserFeed($first: Int, $after: String) {
-    userFeed(first: $first, after: $after) {
-      pageInfo {
-        endCursor
-      }
+  query getUserFeed {
+    userFeed {
       edges {
         node {
           ...largeCardFragment
@@ -17,6 +14,6 @@ export default gql`
       }
     }
   }
-  ${CONTENT_ITEM_FRAGMENT}
-  ${LARGE_CARD_FRAGMENT}
+  ${contentItemFragment}
+  ${largeCardFragment}
 `;
diff --git a/apolloschurchapp/src/tabs/home/home.tests.js b/apolloschurchapp/src/tabs/home/home.tests.js
index 96a5008..e9f98c5 100644
--- a/apolloschurchapp/src/tabs/home/home.tests.js
+++ b/apolloschurchapp/src/tabs/home/home.tests.js
@@ -4,13 +4,13 @@ import renderer from 'react-test-renderer';
 import Providers from 'apolloschurchapp/src/Providers';
 
 import Home from './Home';
-import GET_USER_FEED from './getUserFeed';
+import getUserFeed from './getUserFeed';
 
 describe('User Home Feed Query', () => {
   it('should return correct query results', () => {
     const mock = {
       request: {
-        query: GET_USER_FEED,
+        query: getUserFeed,
       },
       result: {
         data: {
diff --git a/apolloschurchapp/src/tabs/tabBar.js b/apolloschurchapp/src/tabs/tabBar.js
index 80e2f0e..0bdbfc3 100644
--- a/apolloschurchapp/src/tabs/tabBar.js
+++ b/apolloschurchapp/src/tabs/tabBar.js
@@ -1,21 +1,51 @@
+import React from 'react';
 import { compose } from 'recompose';
+import { Platform, View } from 'react-native';
 import { BottomTabBar } from 'react-navigation-tabs';
+import { Query } from 'react-apollo';
+import gql from 'graphql-tag';
+import { get } from 'lodash';
 
-import { withTabBarMediaSpacer } from '@apollosproject/ui-media-player';
+import { MediaPlayerSpacer } from 'apolloschurchapp/src/ui/MediaPlayer';
 import { styled, withTheme } from '@apollosproject/ui-kit';
 
+const mediaPlayerIsVisibleQuery = gql`
+  query {
+    mediaPlayer @client {
+      isVisible
+    }
+  }
+`;
+
+const TabBarWrapper = styled(({ theme, mediaPlayerIsVisible }) => ({
+  backgroundColor: mediaPlayerIsVisible
+    ? theme.colors.screen
+    : theme.colors.paper,
+  ...Platform.select(theme.shadows.default),
+}))(View);
+
 const ThemedBottomTabBar = compose(
   withTheme(({ theme }) => ({
     showLabel: false,
     activeTintColor: theme.colors.secondary,
     inactiveTintColor: theme.colors.text.tertiary,
-    safeAreaInset: { bottom: 0 },
   })),
   styled(({ theme }) => ({
     borderTopWidth: 0,
     backgroundColor: theme.colors.transparent,
-  })),
-  withTabBarMediaSpacer
+  }))
 )(BottomTabBar);
 
-export default ThemedBottomTabBar;
+const TabBar = (props) => (
+  <Query query={mediaPlayerIsVisibleQuery}>
+    {({ data = {} }) => (
+      <TabBarWrapper mediaPlayerIsVisible={get(data, 'mediaPlayer.isVisible')}>
+        <MediaPlayerSpacer>
+          <ThemedBottomTabBar {...props} />
+        </MediaPlayerSpacer>
+      </TabBarWrapper>
+    )}
+  </Query>
+);
+
+export default TabBar;
diff --git a/apolloschurchapp/src/testing-control-panel/ChangeLivestream.js b/apolloschurchapp/src/testing-control-panel/ChangeLivestream.js
index 6675653..6723f30 100644
--- a/apolloschurchapp/src/testing-control-panel/ChangeLivestream.js
+++ b/apolloschurchapp/src/testing-control-panel/ChangeLivestream.js
@@ -4,12 +4,12 @@ import { Query } from 'react-apollo';
 import { get } from 'lodash';
 
 import { client } from 'apolloschurchapp/src/client';
-import GET_LIVE_STREAM from 'apolloschurchapp/src/live/getLiveStream';
+import getLiveStream from 'apolloschurchapp/src/live/getLiveStream';
 import TouchableCell from './TouchableCell';
 
 const changeLivestream = ({ isLive }) =>
   client.writeQuery({
-    query: GET_LIVE_STREAM,
+    query: getLiveStream,
     data: {
       liveStream: {
         __typename: 'LiveStream',
@@ -19,7 +19,7 @@ const changeLivestream = ({ isLive }) =>
   });
 
 const ChangeLivestream = () => (
-  <Query query={GET_LIVE_STREAM}>
+  <Query query={getLiveStream}>
     {({ data }) => {
       const isLive = get(data, 'liveStream.isLive', false);
       return (
diff --git a/apolloschurchapp/src/theme/icons/index.js b/apolloschurchapp/src/theme/icons/index.js
deleted file mode 100644
index 79e948a..0000000
--- a/apolloschurchapp/src/theme/icons/index.js
+++ /dev/null
@@ -1,2 +0,0 @@
-/* Export your custom icon components here. */
-export {};
diff --git a/apolloschurchapp/src/theme/index.js b/apolloschurchapp/src/theme/index.js
deleted file mode 100644
index 9ccfc4a..0000000
--- a/apolloschurchapp/src/theme/index.js
+++ /dev/null
@@ -1,4 +0,0 @@
-import theme from './theme';
-import * as customIcons from './icons';
-
-export { theme as default, customIcons };
diff --git a/apolloschurchapp/src/theme/theme.js b/apolloschurchapp/src/theme/theme.js
deleted file mode 100644
index 39e124f..0000000
--- a/apolloschurchapp/src/theme/theme.js
+++ /dev/null
@@ -1,43 +0,0 @@
-/* Add your custom theme definitions below. Anything that is supported in UI-Kit Theme can be
- overridden and/or customized here! */
-
-/* Base colors.
- * These get used by theme types (see /types directory) to color
- * specific parts of the interface. For more control on how certain
- * elements are colored, go there. The next level of control comes
- * on a per-component basis with "overrides"
- */
-// const colors = {};
-
-/* Base Typography sizing and fonts.
- * To control speicfic styles used on different type components (like H1, H2, etc), see "overrides"
- */
-// const typography = {};
-
-/* Responsive breakpoints */
-// export const breakpoints = {};
-
-/* Base sizing units. These are used to scale
- * space, and size components relatively to one another.
- */
-// export const sizing = {};
-
-/* Base alpha values. These are used to keep transparent values across the app consistant */
-// export const alpha = {};
-
-/* Overrides allow you to override the styles of any component styled using the `styled` HOC.
- * For example, this component:
- * const SomeComponent = styled({ margin: 10, padding: 20 }, 'SomeComponent');
- * can have its styles overriden by including in overrides:
- * {
- *   overides: {
- *     SomeComponent: {
- *       margin: 5,
- *       padding: 15,
- *     },
- *   },
- * }
- */
-// const overrides = {};
-
-export default {};
diff --git a/apolloschurchapp/src/ui/ContentCardConnected/index.js b/apolloschurchapp/src/ui/ContentCardConnected/index.js
index 8722331..b64bdc6 100644
--- a/apolloschurchapp/src/ui/ContentCardConnected/index.js
+++ b/apolloschurchapp/src/ui/ContentCardConnected/index.js
@@ -4,9 +4,9 @@ import { Query } from 'react-apollo';
 import { get } from 'lodash';
 
 import { ContentCard, ErrorCard } from '@apollosproject/ui-kit';
-import GET_CONTENT_CARD from './query';
+import getContentCard from './query';
 
-export { TILE_CARD_FRAGMENT, LARGE_CARD_FRAGMENT } from './query';
+export { tileCardFragment, largeCardFragment } from './query';
 
 const ContentCardConnected = ({
   contentId,
@@ -18,7 +18,7 @@ const ContentCardConnected = ({
     return <ContentCard {...otherProps} isLoading tile={tile} />;
 
   return (
-    <Query query={GET_CONTENT_CARD} variables={{ contentId, tile: !!tile }}>
+    <Query query={getContentCard} variables={{ contentId, tile: !!tile }}>
       {({ data: { node = {} } = {}, loading, error }) => {
         if (error) return <ErrorCard error={error} />;
 
diff --git a/apolloschurchapp/src/ui/ContentCardConnected/query.js b/apolloschurchapp/src/ui/ContentCardConnected/query.js
index eee426a..abefc12 100644
--- a/apolloschurchapp/src/ui/ContentCardConnected/query.js
+++ b/apolloschurchapp/src/ui/ContentCardConnected/query.js
@@ -1,6 +1,6 @@
 import gql from 'graphql-tag';
 
-export const COVER_IMAGE_FRAGMENT = gql`
+export const coverImageFragment = gql`
   fragment coverImageFragment on ContentItem {
     coverImage {
       sources {
@@ -10,7 +10,7 @@ export const COVER_IMAGE_FRAGMENT = gql`
   }
 `;
 
-export const THEME_FRAGMENT = gql`
+export const themeFragment = gql`
   fragment themeFragment on ContentItem {
     theme {
       type
@@ -24,14 +24,14 @@ export const THEME_FRAGMENT = gql`
   }
 `;
 
-export const CONTENT_CARD_METRICS_FRAGMENT = gql`
+export const contentCardMetricsFragment = gql`
   fragment contentCardMetricsFragment on ContentItem {
     isLiked
     likedCount
   }
 `;
 
-export const BASE_CARD_FRAGMENT = gql`
+export const baseCardFragment = gql`
   fragment baseCardFragment on ContentItem {
     id
     __typename
@@ -41,12 +41,12 @@ export const BASE_CARD_FRAGMENT = gql`
     title
     summary
   }
-  ${CONTENT_CARD_METRICS_FRAGMENT}
-  ${COVER_IMAGE_FRAGMENT}
-  ${THEME_FRAGMENT}
+  ${contentCardMetricsFragment}
+  ${coverImageFragment}
+  ${themeFragment}
 `;
 
-export const TILE_CARD_FRAGMENT = gql`
+export const tileCardFragment = gql`
   fragment tileCardFragment on ContentItem {
     ... on ContentSeriesContentItem {
       id
@@ -64,20 +64,20 @@ export const TILE_CARD_FRAGMENT = gql`
       ...baseCardFragment
     }
   }
-  ${BASE_CARD_FRAGMENT}
-  ${THEME_FRAGMENT}
-  ${COVER_IMAGE_FRAGMENT}
-  ${CONTENT_CARD_METRICS_FRAGMENT}
+  ${baseCardFragment}
+  ${themeFragment}
+  ${coverImageFragment}
+  ${contentCardMetricsFragment}
 `;
 
-export const LARGE_CARD_FRAGMENT = gql`
+export const largeCardFragment = gql`
   fragment largeCardFragment on ContentItem {
     ...baseCardFragment
   }
-  ${BASE_CARD_FRAGMENT}
+  ${baseCardFragment}
 `;
 
-const GET_CONTENT_CARD = gql`
+const getContentCard = gql`
   query getContentCard($contentId: ID!, $tile: Boolean!) {
     node(id: $contentId) {
       id
@@ -86,8 +86,8 @@ const GET_CONTENT_CARD = gql`
       ...largeCardFragment @skip(if: $tile)
     }
   }
-  ${TILE_CARD_FRAGMENT}
-  ${LARGE_CARD_FRAGMENT}
+  ${tileCardFragment}
+  ${largeCardFragment}
 `;
 
-export default GET_CONTENT_CARD;
+export default getContentCard;
diff --git a/apolloschurchapp/src/ui/ContentTableCard/ContentTableCard.stories.js b/apolloschurchapp/src/ui/ContentTableCard/ContentTableCard.stories.js
deleted file mode 100644
index 9287554..0000000
--- a/apolloschurchapp/src/ui/ContentTableCard/ContentTableCard.stories.js
+++ /dev/null
@@ -1,86 +0,0 @@
-import React from 'react';
-import { storiesOf } from '@apollosproject/ui-storybook';
-import { H3 } from '@apollosproject/ui-kit';
-import ContentTableCard from '.';
-
-const content = [
-  {
-    id: 'UniversalContentItem:9d06423a8908b7cc1e1f2db6156c1bfb',
-    title: 'Hello 1',
-    parentChannel: {
-      id: 'ContentChannel:be35f49307d7297989d3514be788ef2d',
-      name: 'NewSpring - Articles',
-    },
-    coverImage: {
-      sources: {
-        uri: 'https://picsum.photos/600/400/?image=63',
-      },
-    },
-  },
-  {
-    id: 'UniversalContentItem:9d06423a8908b7cc1e1f2db6156c1bfb',
-    title: 'Hello 2',
-    parentChannel: {
-      id: 'ContentChannel:be35f49307d7297989d3514be788ef2d',
-      name: 'NewSpring - Articles',
-    },
-    coverImage: {
-      sources: {
-        uri: 'https://picsum.photos/600/400/?image=63',
-      },
-    },
-  },
-  {
-    id: 'UniversalContentItem:9d06423a8908b7cc1e1f2db6156c1bfb',
-    title: 'Hello 3',
-    parentChannel: {
-      id: 'ContentChannel:be35f49307d7297989d3514be788ef2d',
-      name: 'NewSpring - Articles',
-    },
-    coverImage: {
-      sources: {
-        uri: 'https://picsum.photos/600/400/?image=63',
-      },
-    },
-  },
-  {
-    id: 'UniversalContentItem:9d06423a8908b7cc1e1f2db6156c1bfb',
-    title: 'Hello 4',
-    parentChannel: {
-      id: 'ContentChannel:be35f49307d7297989d3514be788ef2d',
-      name: 'NewSpring - Articles',
-    },
-    coverImage: {
-      sources: {
-        uri: 'https://picsum.photos/600/400/?image=63',
-      },
-    },
-  },
-];
-
-storiesOf('ContentTableCard', module)
-  .add('simple', () => (
-    <ContentTableCard
-      label={'FOR YOU'}
-      onPress={() => {}}
-      content={content}
-      DynamicHeader={
-        <H3 numberOfLines={3} ellipsizeMode="tail">
-          Some random text that encourages you
-        </H3>
-      }
-    />
-  ))
-  .add('isLoading', () => (
-    <ContentTableCard
-      label={'FOR YOU'}
-      onPress={() => {}}
-      isLoading
-      content={content}
-      DynamicHeader={
-        <H3 isLoading numberOfLines={3} ellipsizeMode="tail">
-          Some random text that encourages you
-        </H3>
-      }
-    />
-  ));
diff --git a/apolloschurchapp/src/ui/ContentTableCard/ContentTableCardItem.js b/apolloschurchapp/src/ui/ContentTableCard/ContentTableCardItem.js
deleted file mode 100644
index f387a41..0000000
--- a/apolloschurchapp/src/ui/ContentTableCard/ContentTableCardItem.js
+++ /dev/null
@@ -1,78 +0,0 @@
-import React, { PureComponent } from 'react';
-import { View } from 'react-native';
-import PropTypes from 'prop-types';
-
-import {
-  H6,
-  H4,
-  styled,
-  TouchableScale,
-  withIsLoading,
-  ConnectedImage,
-  FlexedView,
-} from '@apollosproject/ui-kit';
-
-const CellImage = styled(({ theme }) => ({
-  width: theme.sizing.baseUnit * 4,
-  height: theme.sizing.baseUnit * 4,
-  borderRadius: theme.sizing.baseUnit,
-  overflow: 'hidden',
-  marginRight: theme.sizing.baseUnit,
-}))(View);
-
-const StyledH6 = styled(({ theme }) => ({
-  color: theme.colors.text.tertiary,
-}))(H6);
-
-const TextContainer = styled(({ theme }) => ({
-  marginTop: theme.sizing.baseUnit / 2.5,
-  borderBottomWidth: 0.5,
-  height: theme.sizing.baseUnit * 4.25,
-  borderColor: theme.colors.shadows.default,
-}))(FlexedView);
-
-const Cell = styled(({ theme }) => ({
-  paddingHorizontal: theme.sizing.baseUnit,
-  paddingVertical: theme.sizing.baseUnit / 4,
-  backgroundColor: theme.colors.background.paper,
-  flexDirection: 'row',
-  justifyContent: 'flex-start',
-  alignItems: 'center',
-}))(View);
-
-class ContentTableCardItem extends PureComponent {
-  static propTypes = {
-    onPress: PropTypes.func,
-    imageSource: PropTypes.any, // eslint-disable-line
-    label: PropTypes.string,
-    title: PropTypes.string,
-    id: PropTypes.string,
-  };
-
-  render() {
-    return (
-      <TouchableScale
-        onPress={() =>
-          this.props.onPress({
-            id: this.props.id,
-            transitionKey: 2,
-          })
-        }
-      >
-        <Cell>
-          <CellImage>
-            <ConnectedImage source={this.props.imageSource} isLoading />
-          </CellImage>
-          <TextContainer>
-            <StyledH6>{this.props.label}</StyledH6>
-            <H4 numberOfLines={2} ellipsizeMode="tail">
-              {this.props.title}
-            </H4>
-          </TextContainer>
-        </Cell>
-      </TouchableScale>
-    );
-  }
-}
-
-export default withIsLoading(ContentTableCardItem);
diff --git a/apolloschurchapp/src/ui/ContentTableCard/ContentTableCardItem.stories.js b/apolloschurchapp/src/ui/ContentTableCard/ContentTableCardItem.stories.js
deleted file mode 100644
index 6a0d4cb..0000000
--- a/apolloschurchapp/src/ui/ContentTableCard/ContentTableCardItem.stories.js
+++ /dev/null
@@ -1,28 +0,0 @@
-import React from 'react';
-import { storiesOf } from '@apollosproject/ui-storybook';
-
-import ContentTableCardItem from './ContentTableCardItem';
-
-const item = {
-  id: 'UniversalContentItem:9d06423a8908b7cc1e1f2db6156c1bfb',
-  title: 'Hello 1',
-  parentChannel: {
-    id: 'ContentChannel:be35f49307d7297989d3514be788ef2d',
-    name: 'NewSpring - Articles',
-  },
-  coverImage: {
-    sources: {
-      uri: 'https://picsum.photos/600/400/?image=63',
-    },
-  },
-};
-
-storiesOf('ContentTableCardItem', module).add('simple', () => (
-  <ContentTableCardItem
-    onPress={() => {}}
-    imageSource={item.coverImage.sources}
-    label={item.parentChannel.name}
-    title={item.title}
-    id={item.id}
-  />
-));
diff --git a/apolloschurchapp/src/ui/ContentTableCard/index.js b/apolloschurchapp/src/ui/ContentTableCard/index.js
deleted file mode 100644
index 646b394..0000000
--- a/apolloschurchapp/src/ui/ContentTableCard/index.js
+++ /dev/null
@@ -1,56 +0,0 @@
-import React, { PureComponent } from 'react';
-// import { View } from 'react-native';
-import PropTypes from 'prop-types';
-
-import {
-  TableView,
-  Card,
-  CardContent,
-  styled,
-  withIsLoading,
-} from '@apollosproject/ui-kit';
-
-import ContentTableCardItem from './ContentTableCardItem';
-
-const Header = styled(({ theme }) => ({
-  backgroundColor: theme.colors.background.paper,
-}))(CardContent);
-
-const Content = styled(() => ({
-  borderBottomWidth: 0,
-  borderTopWidth: 0,
-}))(TableView);
-
-class ContentTableCard extends PureComponent {
-  static propTypes = {
-    onPress: PropTypes.func,
-    isLoading: PropTypes.bool, // eslint-disable-line
-    content: PropTypes.array, // eslint-disable-line
-    header: PropTypes.element,
-  };
-
-  render() {
-    const { onPress, isLoading, content, header: headerContent } = this.props;
-
-    return (
-      <Card>
-        <Header>{headerContent}</Header>
-        <Content>
-          {content.map((item) => (
-            <ContentTableCardItem
-              isLoading={isLoading}
-              key={item.id}
-              id={item.id}
-              onPress={onPress}
-              label={item.parentChannel ? item.parentChannel.name : ''}
-              title={item.title || ''}
-              imageSource={item.coverImage ? item.coverImage.sources : ''}
-            />
-          ))}
-        </Content>
-      </Card>
-    );
-  }
-}
-
-export default withIsLoading(ContentTableCard);
diff --git a/apolloschurchapp/src/ui/LandingScreen/LandingScreen.stories.js b/apolloschurchapp/src/ui/LandingScreen/LandingScreen.stories.js
deleted file mode 100644
index d9ebd3c..0000000
--- a/apolloschurchapp/src/ui/LandingScreen/LandingScreen.stories.js
+++ /dev/null
@@ -1,23 +0,0 @@
-import React from 'react';
-import { storiesOf } from '@apollosproject/ui-storybook';
-import { GradientOverlayImage } from '@apollosproject/ui-kit';
-
-import LandingScreen from '.';
-
-storiesOf('LandingScreen', module)
-  .add('default', () => <LandingScreen />)
-  .add('slideTitle', () => <LandingScreen slideTitle={'Custom title text'} />)
-  .add('description', () => (
-    <LandingScreen description={'Custom description text'} />
-  ))
-  .add('textColor', () => <LandingScreen textColor={'salmon'} />)
-  .add('ImageComponent', () => (
-    <LandingScreen
-      BackgroundComponent={
-        <GradientOverlayImage
-          source={'https://picsum.photos/375/812/?random'}
-        />
-      }
-    />
-  ))
-  .add('Slide props', () => <LandingScreen onPressPrimary={() => {}} />);
diff --git a/apolloschurchapp/src/ui/LandingScreen/index.js b/apolloschurchapp/src/ui/LandingScreen/index.js
deleted file mode 100644
index f929f81..0000000
--- a/apolloschurchapp/src/ui/LandingScreen/index.js
+++ /dev/null
@@ -1,86 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-
-import {
-  styled,
-  withTheme,
-  Icon,
-  H1,
-  H4,
-  PaddedView,
-  BackgroundView,
-} from '@apollosproject/ui-kit';
-
-import { Slide } from '@apollosproject/ui-onboarding';
-
-const Content = styled({
-  flex: 1,
-  justifyContent: 'center',
-})(PaddedView);
-
-const BrandIcon = withTheme(({ theme, color }) => ({
-  name: 'brand-icon',
-  size: theme.sizing.baseUnit * 3,
-  ...(color ? { fill: color } : {}),
-  style: {
-    marginBottom: theme.sizing.baseUnit,
-  },
-}))(Icon);
-
-const Title = styled(({ theme, color }) => ({
-  marginBottom: theme.sizing.baseUnit * 2,
-  ...(color ? { color } : {}),
-}))(H1);
-
-const StyledH4 = styled(({ color }) => ({
-  ...(color ? { color } : {}),
-}))(H4);
-
-const LandingScreen = ({
-  slideTitle,
-  description,
-  textColor,
-  BackgroundComponent,
-  ...props
-}) => (
-  <BackgroundView>
-    <Slide {...props} scrollEnabled={false}>
-      {BackgroundComponent}
-      <Content>
-        <BrandIcon color={textColor} />
-        <Title color={textColor}>{slideTitle}</Title>
-        <StyledH4 color={textColor}>{description}</StyledH4>
-      </Content>
-    </Slide>
-  </BackgroundView>
-);
-
-LandingScreen.propTypes = {
-  /* The `Swiper` component used in `<onBoarding>` looks for and hijacks the title prop of it's
-   * children. Thus we have to use more unique name.
-   */
-  slideTitle: PropTypes.string,
-  description: PropTypes.string,
-  textColor: PropTypes.string, // Use for custom text and `BrandIcon` color when overlaying text on an image or video needs more clarity. Defaults to theme driven colors.
-  /* Recommended usage:
-   * - `Image` (react-native)
-   * - `GradientOverlayImage` (@apollosproject/ui-kit) for increased readability
-   * - `Video` (react-native-video) because moving pictures!
-   */
-  BackgroundComponent: PropTypes.oneOfType([
-    PropTypes.arrayOf(PropTypes.node),
-    PropTypes.node,
-  ]),
-};
-
-LandingScreen.defaultProps = {
-  slideTitle: "We're glad you're here.",
-  description:
-    "We're not just a building you go to, but a family to belong to.",
-};
-
-LandingScreen.navigationOptions = {
-  header: null,
-};
-
-export default LandingScreen;
diff --git a/apolloschurchapp/src/ui/LikeButton/index.js b/apolloschurchapp/src/ui/LikeButton/index.js
index 8272d96..681b055 100644
--- a/apolloschurchapp/src/ui/LikeButton/index.js
+++ b/apolloschurchapp/src/ui/LikeButton/index.js
@@ -2,17 +2,17 @@ import React from 'react';
 
 import PropTypes from 'prop-types';
 import { get } from 'lodash';
-import { Query, Mutation } from 'react-apollo';
+import { Query, Mutation, ApolloConsumer } from 'react-apollo';
 
 import Like from 'apolloschurchapp/src/ui/Like';
-import { AnalyticsConsumer } from '@apollosproject/ui-analytics';
+import { track, events } from 'apolloschurchapp/src/analytics';
 
-import UPDATE_LIKE_ENTITY from './updateLikeEntity';
-import GET_LIKED_CONTENT_ITEM from './getLikedContentItem';
+import updateLikeEntity from './updateLikeEntity';
+import getLikedContentItem from './getLikedContentItem';
 import updateLikedContent from './updateLikedContent';
 
 const GetLikeData = ({ itemId, children }) => (
-  <Query query={GET_LIKED_CONTENT_ITEM} variables={{ itemId }}>
+  <Query query={getLikedContentItem} variables={{ itemId }}>
     {({ data: { node = {} } = {}, loading }) => {
       const isLiked = loading ? false : get(node, 'isLiked') || false;
       return children({ isLiked, item: node });
@@ -31,15 +31,14 @@ const UpdateLikeStatus = ({
   isLiked,
   children,
 }) => (
-  <AnalyticsConsumer>
-    {({ track }) => (
+  <ApolloConsumer>
+    {(client) => (
       <Mutation
-        mutation={UPDATE_LIKE_ENTITY}
+        mutation={updateLikeEntity}
         optimisticResponse={{
           updateLikeEntity: {
             id: itemId, // unknown at this time
             isLiked: !isLiked,
-            likedCount: 0, // field required but exact value is not needed
             __typename: item && item.__typename,
           },
         }}
@@ -53,7 +52,7 @@ const UpdateLikeStatus = ({
         ) => {
           updateLikedContent({ liked, cache, item });
           cache.writeQuery({
-            query: GET_LIKED_CONTENT_ITEM,
+            query: getLikedContentItem,
             data: {
               node: {
                 ...item,
@@ -72,10 +71,13 @@ const UpdateLikeStatus = ({
                   try {
                     await createNewInteraction({ variables });
                     track({
-                      eventName: isLiked ? 'UnlikeContent' : 'LikeContent',
+                      eventName: isLiked
+                        ? events.UnlikeContent
+                        : events.LikeContent,
                       properties: {
                         id: itemId,
                       },
+                      client,
                     });
                   } catch (e) {
                     throw e.message;
@@ -86,7 +88,7 @@ const UpdateLikeStatus = ({
         }
       </Mutation>
     )}
-  </AnalyticsConsumer>
+  </ApolloConsumer>
 );
 
 UpdateLikeStatus.propTypes = {
diff --git a/apolloschurchapp/src/ui/LikeButton/updateLikeEntity.js b/apolloschurchapp/src/ui/LikeButton/updateLikeEntity.js
index 986d867..eabd9e9 100644
--- a/apolloschurchapp/src/ui/LikeButton/updateLikeEntity.js
+++ b/apolloschurchapp/src/ui/LikeButton/updateLikeEntity.js
@@ -5,7 +5,6 @@ export default gql`
     updateLikeEntity(input: { nodeId: $itemId, operation: $operation }) {
       id
       isLiked
-      likedCount
     }
   }
 `;
diff --git a/apolloschurchapp/src/ui/LikeButton/updateLikedContent.js b/apolloschurchapp/src/ui/LikeButton/updateLikedContent.js
index 1024864..c0d5978 100644
--- a/apolloschurchapp/src/ui/LikeButton/updateLikedContent.js
+++ b/apolloschurchapp/src/ui/LikeButton/updateLikedContent.js
@@ -1,15 +1,15 @@
-import GET_ALL_LIKED_CONTENT from 'apolloschurchapp/src/tabs/connect/getLikedContent';
-import { CONTENT_ITEM_FRAGMENT } from 'apolloschurchapp/src/content-single/getContentItem';
+import getAllLikedContent from 'apolloschurchapp/src/tabs/connect/getLikedContent';
+import { contentItemFragment } from 'apolloschurchapp/src/content-single/getContentItem';
 
 const addItemToLikedContentList = ({ cache, item, variables }) => {
   try {
     const data = cache.readQuery({
-      query: GET_ALL_LIKED_CONTENT,
+      query: getAllLikedContent,
       variables,
     });
     const fullItem = cache.readFragment({
       id: `${item.__typename}:${item.id}`,
-      fragment: CONTENT_ITEM_FRAGMENT,
+      fragment: contentItemFragment,
     });
     const newEdges = [
       fullItem,
@@ -19,7 +19,7 @@ const addItemToLikedContentList = ({ cache, item, variables }) => {
       node,
     }));
     cache.writeQuery({
-      query: GET_ALL_LIKED_CONTENT,
+      query: getAllLikedContent,
       variables,
       data: {
         ...data,
@@ -39,7 +39,7 @@ const addItemToLikedContentList = ({ cache, item, variables }) => {
 const removeItemFromLikedContentList = ({ cache, item, variables }) => {
   try {
     const data = cache.readQuery({
-      query: GET_ALL_LIKED_CONTENT,
+      query: getAllLikedContent,
       variables,
     });
 
@@ -48,7 +48,7 @@ const removeItemFromLikedContentList = ({ cache, item, variables }) => {
     );
 
     cache.writeQuery({
-      query: GET_ALL_LIKED_CONTENT,
+      query: getAllLikedContent,
       variables,
       data: {
         ...data,
diff --git a/apolloschurchapp/src/ui/MediaPlayer/AirPlayButton.js b/apolloschurchapp/src/ui/MediaPlayer/AirPlayButton.js
new file mode 100644
index 0000000..f0ae504
--- /dev/null
+++ b/apolloschurchapp/src/ui/MediaPlayer/AirPlayButton.js
@@ -0,0 +1,23 @@
+import React from 'react';
+import { Platform, View } from 'react-native';
+import { AirPlayButton as AirPlayBtn } from 'react-native-airplay-btn';
+
+import { styled } from '@apollosproject/ui-kit';
+
+const Wrapper = styled(({ theme }) => ({
+  /* 40px is the size the airplay-btn package demands we use 😢 We add the same padding values to
+   * match the size of the other small icons on the screen */
+  width: 40 + theme.sizing.baseUnit * 1.25,
+  height: 40 + theme.sizing.baseUnit * 1.25,
+  justifyContent: 'center',
+  alignItems: 'center',
+}))(View);
+
+const AirPlayButton = () =>
+  Platform.OS === 'ios' ? (
+    <Wrapper>
+      <AirPlayBtn />
+    </Wrapper>
+  ) : null;
+
+export default AirPlayButton;
diff --git a/apolloschurchapp/src/ui/MediaPlayer/FullscreenControls.js b/apolloschurchapp/src/ui/MediaPlayer/FullscreenControls.js
new file mode 100644
index 0000000..bbd9cb0
--- /dev/null
+++ b/apolloschurchapp/src/ui/MediaPlayer/FullscreenControls.js
@@ -0,0 +1,291 @@
+import React, { PureComponent } from 'react';
+import PropTypes from 'prop-types';
+import {
+  BackHandler,
+  StyleSheet,
+  Animated,
+  TouchableWithoutFeedback,
+  View,
+} from 'react-native';
+import { Query, withApollo } from 'react-apollo';
+import LinearGradient from 'react-native-linear-gradient';
+import SafeAreaView from 'react-native-safe-area-view';
+import { get } from 'lodash';
+import { compose } from 'recompose';
+
+import {
+  PaddedView,
+  withTheme,
+  withThemeMixin,
+  styled,
+  H4,
+  H6,
+  ButtonIcon,
+} from '@apollosproject/ui-kit';
+
+import { getControlState } from './queries';
+import {
+  play,
+  pause,
+  exitFullscreen,
+  showVideo,
+  hideVideo,
+  mute,
+  unmute,
+} from './mutations';
+import { ControlsConsumer } from './PlayheadState';
+import Seeker from './Seeker';
+import AirPlayButton from './AirPlayButton';
+
+const Background = withTheme(({ theme }) => ({
+  style: StyleSheet.absoluteFill,
+  colors: [
+    theme.colors.darkPrimary,
+    theme.colors.transparent,
+    theme.colors.darkPrimary,
+  ],
+  locations: [0, 0.4, 0.95],
+}))(LinearGradient);
+
+const UpperControls = styled({
+  flexDirection: 'row',
+  justifyContent: 'space-between',
+  alignItems: 'center',
+})(View);
+
+const LowerControls = styled({
+  position: 'absolute',
+  bottom: 0,
+  left: 0,
+  right: 0,
+})(PaddedView);
+
+const PlayControls = styled(({ theme }) => ({
+  flexDirection: 'row',
+  justifyContent: 'space-around',
+  alignItems: 'center',
+  paddingBottom: theme.sizing.baseUnit * 1.5,
+}))(PaddedView);
+
+const PlayHead = styled({ paddingVertical: 0 })(PaddedView);
+
+const Titles = styled({
+  flex: 1,
+  alignItems: 'center',
+  paddingVertical: 0,
+})(PaddedView);
+
+const Title = styled({ textAlign: 'center' })(H4);
+const Artist = styled({ textAlign: 'center' })(H6);
+
+const IconSm = withTheme(({ theme }) => ({
+  size: theme.sizing.baseUnit * 1.25,
+  iconPadding: theme.sizing.baseUnit * 1.25,
+}))(ButtonIcon);
+
+const IconMd = withTheme(({ theme }) => ({
+  size: theme.sizing.baseUnit * 1.875,
+  iconPadding: theme.sizing.baseUnit * 0.9375,
+}))(ButtonIcon);
+
+const IconLg = withTheme(({ theme }) => ({
+  size: theme.sizing.baseUnit * 3.125,
+  iconPadding: theme.sizing.baseUnit * 0.3125,
+}))(ButtonIcon);
+
+/**
+ * FullscreenControls displays fading player controls
+ */
+class FullscreenControls extends PureComponent {
+  static propTypes = {
+    client: PropTypes.shape({
+      mutate: PropTypes.func,
+    }),
+  };
+
+  state = {};
+
+  fader = new Animated.Value(1);
+
+  controlsVisible = true;
+
+  wasFullscreen = false;
+
+  open = Animated.spring(this.fader, {
+    toValue: 1,
+    useNativeDriver: true,
+  });
+
+  close = Animated.spring(this.fader, {
+    toValue: 0,
+    useNativeDriver: true,
+  });
+
+  constructor(...args) {
+    super(...args);
+    this.fader.addListener(({ value }) => {
+      this.controlsVisible = value > 0.05;
+    });
+  }
+
+  componentDidMount() {
+    this.backHandler = BackHandler.addEventListener('hardwareBackPress', () => {
+      if (this.wasFullscreen) {
+        this.handleClose();
+        return true;
+      }
+      return false;
+    });
+  }
+
+  componentWillUnmount() {
+    this.backHandler.remove();
+    if (this.closeTimeout) clearTimeout(this.closeTimeout);
+  }
+
+  handleOnScrubbing = ({ isScrubbing }) => {
+    this.setState({ isScrubbing });
+  };
+
+  handleClose = () => {
+    this.props.client.mutate({ mutation: exitFullscreen });
+  };
+
+  handlePlay = () => {
+    this.props.client.mutate({ mutation: play });
+  };
+
+  handlePause = () => {
+    this.props.client.mutate({ mutation: pause });
+  };
+
+  handleShowVideo = () => {
+    this.props.client.mutate({ mutation: showVideo });
+  };
+
+  handleHideVideo = () => {
+    this.props.client.mutate({ mutation: hideVideo });
+  };
+
+  handleMute = () => {
+    this.props.client.mutate({ mutation: mute });
+  };
+
+  handleUnMute = () => {
+    this.props.client.mutate({ mutation: unmute });
+  };
+
+  handleControlVisibility = () => {
+    if (this.closeTimeout) clearTimeout(this.closeTimeout);
+    this.open.stop();
+    this.close.stop();
+
+    if (
+      !this.state.isScrubbing &&
+      this.isVideo &&
+      this.isPlaying &&
+      this.wasFullscreen &&
+      (!this.animatingClosed && this.controlsVisible)
+    ) {
+      this.animatingClosed = true;
+      this.close.start(() => {
+        this.animatingClosed = false;
+      });
+    } else {
+      this.open.start(() => {
+        if (this.isVideo && this.isPlaying) this.queueClose();
+      });
+    }
+  };
+
+  queueClose = () => {
+    this.closeTimeout = setTimeout(this.handleControlVisibility, 5000);
+  };
+
+  renderPlayerControls = ({ isLoading, skip }) => (
+    <PlayControls>
+      <IconSm
+        onPress={this.isMuted ? this.handleUnMute : this.handleMute}
+        name={this.isMuted ? 'mute' : 'volume'}
+        disabled={isLoading}
+      />
+      <IconMd
+        onPress={() => skip(-30)}
+        name={'skip-back-thirty'}
+        disabled={isLoading}
+      />
+      <IconLg
+        onPress={this.isPlaying ? this.handlePause : this.handlePlay}
+        name={this.isPlaying ? 'pause' : 'play'}
+        disabled={isLoading}
+      />
+      <IconMd
+        onPress={() => skip(30)}
+        name={'skip-forward-thirty'}
+        disabled={isLoading}
+      />
+      <IconSm
+        onPress={this.isVideo ? this.handleHideVideo : this.handleShowVideo}
+        name={this.isVideo ? 'video' : 'video-off'}
+        disabled={isLoading}
+      />
+    </PlayControls>
+  );
+
+  renderFullscreenControls = ({ data: { mediaPlayer = {} } = {} }) => {
+    this.isVideo = get(mediaPlayer, 'showVideo');
+    this.isPlaying = mediaPlayer.isPlaying;
+    this.isMuted = mediaPlayer.muted;
+
+    if (
+      (mediaPlayer.isFullscreen && !this.wasFullscreen) ||
+      !this.isVideo ||
+      (!this.isPlaying || (this.isPlaying && !this.wasPlaying))
+    )
+      this.handleControlVisibility();
+
+    this.wasFullscreen = mediaPlayer.isFullscreen;
+    this.wasPlaying = mediaPlayer.isPlaying;
+
+    return (
+      <TouchableWithoutFeedback onPress={this.handleControlVisibility}>
+        <Animated.View
+          style={[StyleSheet.absoluteFill, { opacity: this.fader }]}
+        >
+          <Background>
+            <SafeAreaView
+              style={StyleSheet.absoluteFill}
+              forceInset={{ top: 'always', bottom: 'always' }}
+            >
+              <UpperControls>
+                <IconSm name="arrow-down" onPress={this.handleClose} />
+                <Titles>
+                  <Title>{get(mediaPlayer, 'currentTrack.title')}</Title>
+                  <Artist>{get(mediaPlayer, 'currentTrack.artist')}</Artist>
+                </Titles>
+                <AirPlayButton />
+              </UpperControls>
+              <LowerControls horizontal={false}>
+                <PlayHead>
+                  <Seeker onScrubbing={this.handleOnScrubbing} />
+                </PlayHead>
+                <ControlsConsumer>{this.renderPlayerControls}</ControlsConsumer>
+              </LowerControls>
+            </SafeAreaView>
+          </Background>
+        </Animated.View>
+      </TouchableWithoutFeedback>
+    );
+  };
+
+  render() {
+    return (
+      <Query query={getControlState}>{this.renderFullscreenControls}</Query>
+    );
+  }
+}
+
+export default compose(
+  withApollo,
+  withThemeMixin({ type: 'dark' })
+)(FullscreenControls);
diff --git a/apolloschurchapp/src/ui/MediaPlayer/FullscreenPlayer.js b/apolloschurchapp/src/ui/MediaPlayer/FullscreenPlayer.js
new file mode 100644
index 0000000..ecc64e7
--- /dev/null
+++ b/apolloschurchapp/src/ui/MediaPlayer/FullscreenPlayer.js
@@ -0,0 +1,236 @@
+import React, { PureComponent } from 'react';
+import {
+  Animated,
+  View,
+  StyleSheet,
+  Dimensions,
+  PanResponder,
+  Platform,
+  StatusBar,
+} from 'react-native';
+import PropTypes from 'prop-types';
+import { Query, withApollo } from 'react-apollo';
+import { get } from 'lodash';
+
+import { styled } from '@apollosproject/ui-kit';
+
+import MiniControls, { MINI_PLAYER_HEIGHT } from './MiniControls';
+import FullscreenControls from './FullscreenControls';
+import VideoWindow from './VideoWindow';
+import MusicControls from './MusicControls';
+import { getFullVisibilityState } from './queries';
+import { exitFullscreen, goFullscreen } from './mutations';
+import { Provider, ControlsConsumer } from './PlayheadState';
+import MediaPlayerSafeLayout from './MediaPlayerSafeLayout';
+
+const VideoSizer = styled(({ isFullscreen, isVideo, theme }) =>
+  isFullscreen
+    ? StyleSheet.absoluteFill
+    : {
+        height: MINI_PLAYER_HEIGHT,
+        borderTopLeftRadius: theme.sizing.baseUnit / 2,
+        borderBottomLeftRadius: theme.sizing.baseUnit / 2,
+        overflow: 'hidden',
+        aspectRatio: isVideo ? 16 / 9 : 1,
+      }
+)(View);
+
+const FullscreenMediaPlayerSafeLayout = styled(({ isFullscreen, theme }) => ({
+  ...StyleSheet.absoluteFillObject,
+  margin: isFullscreen ? 0 : theme.sizing.baseUnit,
+}))(MediaPlayerSafeLayout);
+
+/**
+ * FullscreenPlayer is a animating media player that transitions between
+ * a mini state and a full screen state.
+ * It is capable of playing any type of media that react-native-video supports.
+ * It reads from local graphql state, and so you must use graphql mutations to play tracks.
+ */
+class FullscreenPlayer extends PureComponent {
+  static propTypes = {
+    client: PropTypes.shape({ mutate: PropTypes.func }),
+  };
+
+  // Tracks the fullscreen animation
+  fullscreen = new Animated.Value(0);
+
+  // Tracks the measured height of the minicontrols. Used in other derived styles
+  miniControlHeight = new Animated.Value(MINI_PLAYER_HEIGHT);
+
+  // Tracks the measured height of the fullscreen cover. Used in other derived styles
+  coverHeight = new Animated.Value(Dimensions.get('window').height);
+
+  // Tracks the amount you drag the window
+  dragOffset = new Animated.Value(0);
+
+  fullScreenWithOffset = Animated.add(this.fullscreen, this.dragOffset);
+
+  // Self-invoking function because we end up with just one massic derived animated value that can be stored
+  coverTranslateY = (() => {
+    const translateYWhenCollapsed = Animated.subtract(
+      this.coverHeight,
+      this.miniControlHeight
+    );
+
+    const translateYSlope = Animated.multiply(
+      translateYWhenCollapsed,
+      Animated.multiply(this.fullScreenWithOffset, -1)
+    );
+
+    const translateY = Animated.add(translateYSlope, translateYWhenCollapsed);
+    return translateY;
+  })();
+
+  miniControlsTranslateY = (() => {
+    const translateYWhenExpanded = Animated.subtract(
+      this.coverHeight,
+      this.miniControlHeight
+    );
+    const translateYSlope = Animated.multiply(
+      translateYWhenExpanded,
+      Animated.multiply(this.fullScreenWithOffset, -1)
+    );
+    return translateYSlope;
+  })();
+
+  coverStyle = [
+    StyleSheet.absoluteFill,
+    {
+      transform: [{ translateY: this.coverTranslateY }],
+    },
+  ];
+
+  miniControlsAnimation = {
+    opacity: this.fullScreenWithOffset.interpolate({
+      inputRange: [0, 0.1],
+      outputRange: [1, 0],
+    }),
+  };
+
+  fullscreenControlsAnimation = [
+    StyleSheet.absoluteFill,
+    {
+      opacity: this.fullScreenWithOffset.interpolate({
+        inputRange: [0, 0.1],
+        outputRange: [0, 1],
+      }),
+    },
+  ];
+
+  panResponder = PanResponder.create({
+    onMoveShouldSetPanResponder: (event, { dx, dy }) =>
+      Math.abs(dy) > Math.abs(dx) && Math.abs(dy) > 10, // set pan responder only when we move enough in the Y-axis
+
+    onPanResponderMove: (event, { dy }) => {
+      // Calculate the amount you've offsetted the cover
+      const dragOffset = Math.min(0, -dy / Dimensions.get('window').height);
+      this.dragOffset.setValue(dragOffset);
+    },
+
+    onPanResponderRelease: (event, { dy, vy }) => {
+      const { height } = Dimensions.get('window');
+      const gestureVelocity = vy;
+      const gestureDistance = Math.abs(dy);
+
+      // Determine whether to continue the animation and exit fullscreen,
+      // or stay full screen and reset back up
+      let mutation = goFullscreen;
+      if (Math.abs(gestureVelocity > 0.5)) {
+        if (gestureVelocity > 0) {
+          mutation = exitFullscreen;
+        }
+      } else if (gestureDistance >= height / 2) {
+        mutation = exitFullscreen;
+      }
+
+      const dragOffset = Math.min(0, -dy / Dimensions.get('window').height);
+
+      if (mutation === goFullscreen) {
+        Animated.spring(this.dragOffset, {
+          toValue: 0,
+          useNativeDriver: true,
+        }).start();
+      } else {
+        this.dragOffset.setValue(0);
+        this.fullscreen.setValue(dragOffset);
+      }
+
+      this.props.client.mutate({ mutation });
+    },
+  });
+
+  handleCoverLayout = Animated.event([
+    { nativeEvent: { layout: { height: this.coverHeight } } },
+  ]);
+
+  handleMiniControlLayout = Animated.event([
+    { nativeEvent: { layout: { height: this.miniControlHeight } } },
+  ]);
+
+  renderCover = ({ data: { mediaPlayer = {} } = {} }) => {
+    const { isFullscreen = false } = mediaPlayer;
+
+    Animated.spring(this.fullscreen, {
+      toValue: isFullscreen ? 1 : 0,
+      useNativeDriver: true,
+      bounciness: 4,
+    }).start();
+
+    const coverFlow = [
+      <Animated.View
+        key="cover"
+        onLayout={this.handleCoverLayout}
+        style={StyleSheet.absoluteFill}
+        {...(Platform.OS !== 'android' && isFullscreen
+          ? this.panResponder.panHandlers
+          : {})}
+      >
+        <VideoSizer
+          isFullscreen={isFullscreen}
+          isVideo={get(mediaPlayer, 'currentTrack.isVideo')}
+        >
+          <ControlsConsumer>
+            {(controlHandlers) => <VideoWindow {...controlHandlers} />}
+          </ControlsConsumer>
+        </VideoSizer>
+        <Animated.View style={this.fullscreenControlsAnimation}>
+          <FullscreenControls />
+        </Animated.View>
+      </Animated.View>,
+      <MusicControls key="music-controls" />,
+    ];
+
+    if (!isFullscreen) {
+      coverFlow.push(
+        <Animated.View
+          key="mini-controls"
+          style={this.miniControlsAnimation}
+          onLayout={this.handleMiniControlLayout}
+        >
+          <MiniControls />
+        </Animated.View>
+      );
+    }
+
+    return (
+      <Animated.View style={this.coverStyle}>
+        <FullscreenMediaPlayerSafeLayout isFullscreen={isFullscreen}>
+          {isFullscreen ? <StatusBar hidden /> : null}
+          {coverFlow}
+        </FullscreenMediaPlayerSafeLayout>
+      </Animated.View>
+    );
+  };
+
+  render() {
+    return (
+      <Provider>
+        <Query query={getFullVisibilityState}>{this.renderCover}</Query>
+      </Provider>
+    );
+  }
+}
+
+const FullscreenPlayerWithData = withApollo(FullscreenPlayer);
+
+export { FullscreenPlayerWithData as default };
diff --git a/apolloschurchapp/src/ui/MediaPlayer/FullscreenPlayer.stories.js b/apolloschurchapp/src/ui/MediaPlayer/FullscreenPlayer.stories.js
new file mode 100644
index 0000000..6c889cc
--- /dev/null
+++ b/apolloschurchapp/src/ui/MediaPlayer/FullscreenPlayer.stories.js
@@ -0,0 +1,81 @@
+import React from 'react';
+import { storiesOf } from '@storybook/react-native';
+import { Mutation } from 'react-apollo';
+
+import {
+  ButtonLink,
+  CenteredView,
+  BackgroundView,
+  FlexedView,
+} from '@apollosproject/ui-kit';
+
+import { playVideoMutation } from './mutations';
+import MediaPlayer from '.';
+
+storiesOf('MediaPlayer', module).add('simple', () => (
+  <BackgroundView>
+    <FlexedView>
+      <CenteredView>
+        <Mutation mutation={playVideoMutation}>
+          {(play) => (
+            <ButtonLink
+              onPress={() =>
+                play({
+                  variables: {
+                    mediaSource: {
+                      uri:
+                        'http://embed.wistia.com/deliveries/0e364f7e6f6604384ece8a35905a53a864386e9f.bin',
+                      __typename: 'VideoMediaSource',
+                    },
+                    posterSources: [
+                      {
+                        uri:
+                          'https://apollosrock.newspring.cc/GetImage.ashx?guid=28ea9e81-09b4-411f-8ad5-741054837823',
+                        __typename: 'ImageMediaSource',
+                      },
+                    ],
+                    title: 'Holy Spirit',
+                    artist: 'Fuse Promos',
+                    isVideo: true,
+                  },
+                })
+              }
+            >
+              Play video
+            </ButtonLink>
+          )}
+        </Mutation>
+        <Mutation mutation={playVideoMutation}>
+          {(play) => (
+            <ButtonLink
+              onPress={() =>
+                play({
+                  variables: {
+                    mediaSource: {
+                      uri:
+                        'https://s3.amazonaws.com/ns.downloads/newspring/audio/newspring_sermons/2017/180513_HolySpirit_06-Message-AUDIO.mp3',
+                      __typename: 'AudioMediaSource',
+                    },
+                    posterSources: [
+                      {
+                        uri:
+                          'https://apollosrock.newspring.cc/GetImage.ashx?guid=28ea9e81-09b4-411f-8ad5-741054837823',
+                        __typename: 'ImageMediaSource',
+                      },
+                    ],
+                    title: 'The Greatest Evangelist',
+                    artist: 'Sermon',
+                    isVideo: false,
+                  },
+                })
+              }
+            >
+              Play audio
+            </ButtonLink>
+          )}
+        </Mutation>
+      </CenteredView>
+    </FlexedView>
+    <MediaPlayer />
+  </BackgroundView>
+));
diff --git a/apolloschurchapp/src/ui/MediaPlayer/FullscreenPlayer.tests.js b/apolloschurchapp/src/ui/MediaPlayer/FullscreenPlayer.tests.js
new file mode 100644
index 0000000..9cb08d3
--- /dev/null
+++ b/apolloschurchapp/src/ui/MediaPlayer/FullscreenPlayer.tests.js
@@ -0,0 +1,72 @@
+import React from 'react';
+
+import Providers from 'apolloschurchapp/src/Providers';
+import { renderWithApolloData } from 'apolloschurchapp/src/utils/testUtils';
+import { InMemoryCache } from 'apollo-cache-inmemory';
+
+import FullscreenPlayer from './FullscreenPlayer';
+
+// TODO: Get these tests to work.
+
+describe('the FullscreenPlayer component', () => {
+  it('should render miniplayer with video', async () => {
+    const cache = new InMemoryCache().restore({
+      ROOT_QUERY: {
+        mediaPlayer: {
+          currentTime: 0,
+          isFullscreen: false,
+          isVisible: false,
+          currentTrack: 'MediaPlayerTrack:0',
+          __typename: 'MediaPlayerState',
+        },
+      },
+      'MediaPlayerTrack:0': {
+        isVideo: true,
+        id: 0,
+        __typename: 'MediaPlayerTrack',
+      },
+    });
+    const tree = await renderWithApolloData(
+      <Providers cache={cache}>
+        <FullscreenPlayer />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+
+  it('should render miniplayer with audio', async () => {
+    const mediaPlayer = {
+      currentTrack: {
+        isVideo: false,
+      },
+      isVisible: true,
+      isFullscreen: false,
+    };
+    const tree = await renderWithApolloData(
+      <Providers
+        resolvers={{ Query: { mediaPlayer: Promise.resolve(mediaPlayer) } }}
+      >
+        <FullscreenPlayer />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+
+  it('should render fullscreen', async () => {
+    const mediaPlayer = {
+      currentTrack: {
+        isVideo: true,
+      },
+      isVisible: true,
+      isFullscreen: true,
+    };
+    const tree = await renderWithApolloData(
+      <Providers
+        resolvers={{ Query: { mediaPlayer: Promise.resolve(mediaPlayer) } }}
+      >
+        <FullscreenPlayer />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/MediaPlayer/MediaPlayerSafeLayout.js b/apolloschurchapp/src/ui/MediaPlayer/MediaPlayerSafeLayout.js
new file mode 100644
index 0000000..57368b8
--- /dev/null
+++ b/apolloschurchapp/src/ui/MediaPlayer/MediaPlayerSafeLayout.js
@@ -0,0 +1,20 @@
+import React from 'react';
+import { View } from 'react-native';
+
+import { styled, LayoutConsumer } from '@apollosproject/ui-kit';
+
+const InnerView = styled(({ safeAreaInsets, isFullscreen = false, theme }) => ({
+  marginBottom: isFullscreen
+    ? 0
+    : Math.max(theme.sizing.baseUnit, safeAreaInsets.bottom * 0.75),
+}))(View);
+
+const MediaPlayerSafeLayout = (props) => (
+  <LayoutConsumer>
+    {({ safeAreaInsets }) => (
+      <InnerView safeAreaInsets={safeAreaInsets} {...props} />
+    )}
+  </LayoutConsumer>
+);
+
+export default MediaPlayerSafeLayout;
diff --git a/apolloschurchapp/src/ui/MediaPlayer/MediaPlayerSpacer.js b/apolloschurchapp/src/ui/MediaPlayer/MediaPlayerSpacer.js
new file mode 100644
index 0000000..e88b769
--- /dev/null
+++ b/apolloschurchapp/src/ui/MediaPlayer/MediaPlayerSpacer.js
@@ -0,0 +1,36 @@
+import React from 'react';
+import { SafeAreaView } from 'react-native';
+import { Query } from 'react-apollo';
+import gql from 'graphql-tag';
+import { get } from 'lodash';
+
+import { styled } from '@apollosproject/ui-kit';
+import { MINI_PLAYER_HEIGHT } from 'apolloschurchapp/src/ui/MediaPlayer';
+
+import MediaPlayerSafeLayout from './MediaPlayerSafeLayout';
+
+const mediaPlayerIsVisibleQuery = gql`
+  query {
+    mediaPlayer @client {
+      isVisible
+    }
+  }
+`;
+
+const MediaPlayerSafeLayoutWithSpacing = styled({
+  paddingBottom: MINI_PLAYER_HEIGHT,
+})(MediaPlayerSafeLayout);
+
+const MediaPlayerSpacer = (props) => (
+  <Query query={mediaPlayerIsVisibleQuery}>
+    {({ data = {} }) =>
+      get(data, 'mediaPlayer.isVisible') ? (
+        <MediaPlayerSafeLayoutWithSpacing {...props} />
+      ) : (
+        <SafeAreaView {...props} />
+      )
+    }
+  </Query>
+);
+
+export default MediaPlayerSpacer;
diff --git a/apolloschurchapp/src/ui/MediaPlayer/MiniControls.js b/apolloschurchapp/src/ui/MediaPlayer/MiniControls.js
new file mode 100644
index 0000000..80bc783
--- /dev/null
+++ b/apolloschurchapp/src/ui/MediaPlayer/MiniControls.js
@@ -0,0 +1,197 @@
+import React, { Component } from 'react';
+import { Platform, View, Animated, StyleSheet } from 'react-native';
+import { Mutation, Query } from 'react-apollo';
+
+import {
+  withTheme,
+  Icon,
+  styled,
+  Touchable,
+  H5,
+  H6,
+  ButtonIcon,
+} from '@apollosproject/ui-kit';
+
+import Seeker from './Seeker';
+
+import { getControlState } from './queries';
+
+import {
+  goFullscreen as goFullscreenMutation,
+  dismiss as dismissMutation,
+  play as playMutation,
+  pause as pauseMutation,
+} from './mutations';
+
+const MINI_PLAYER_HEIGHT = 50;
+
+const DismissBackground = styled(({ theme }) => ({
+  ...StyleSheet.absoluteFillObject,
+  alignItems: 'center',
+  justifyContent: 'center',
+  backgroundColor: theme.colors.white,
+}))(View);
+
+const TrackInfoTouchable = styled({
+  flex: 1,
+})(Touchable);
+
+const TrackInfoTouchableBackground = styled(({ theme }) => ({
+  backgroundColor: theme.colors.white,
+  flex: 1,
+}))(View);
+
+const TrackInfo = styled(({ theme }) => ({
+  paddingHorizontal: theme.sizing.baseUnit / 2,
+  height: '100%',
+  justifyContent: 'center',
+  width: '100%',
+}))(View);
+
+const TrackName = styled(({ theme }) => ({
+  height: theme.sizing.baseUnit,
+  overflow: 'hidden',
+}))(H5);
+
+const TrackArtist = styled(({ theme }) => ({
+  height: theme.sizing.baseUnit,
+  marginTop: theme.helpers.rem(-0.15625),
+  color: theme.colors.text.tertiary,
+  // overflow: 'hidden',
+}))(H6);
+
+const Container = styled(({ theme }) => ({
+  height: MINI_PLAYER_HEIGHT,
+  flexDirection: 'row',
+  justifyContent: 'flex-start',
+  overflow: 'hidden',
+  borderRadius: theme.sizing.baseUnit / 2,
+}))(View);
+
+const Shadow = styled(({ theme }) => ({
+  borderRadius: theme.sizing.baseUnit / 2,
+  ...Platform.select(theme.shadows.default),
+}))(View);
+
+// ThumbnailSpacer is used to offset the text in MiniPlayer to make room for the video/music
+// thumbnail in a way that is dynamic to the MINI_PLAYER_HEIGHT
+const ThumbnailSpacer = styled(({ isVideo }) => ({
+  height: MINI_PLAYER_HEIGHT,
+  aspectRatio: isVideo ? 16 / 9 : 1,
+}))(View);
+
+const Controls = styled(({ theme }) => ({
+  position: 'absolute',
+  right: 0,
+  bottom: 0,
+  top: -1,
+  paddingHorizontal: theme.sizing.baseUnit / 2,
+  flexDirection: 'row',
+  justifyContent: 'flex-end',
+  alignItems: 'center',
+}))(View);
+
+const MiniSeeker = styled({
+  position: 'absolute',
+  left: 0,
+  right: 0,
+  bottom: 0,
+})(Seeker);
+
+const IconStyles = withTheme(({ theme }) => ({
+  fill: theme.colors.darkTertiary,
+  size: theme.sizing.baseUnit * 1.25,
+}));
+
+const StyledIcon = IconStyles(Icon);
+const StyledButtonIcon = IconStyles(ButtonIcon);
+
+/**
+ * The MiniControls renders basic track info and a play/pause button.
+ * Also displays a close button to close the player when the track is paused.
+ */
+class MiniControls extends Component {
+  dismissAnimator = new Animated.Value(0);
+
+  shouldComponentUpdate() {
+    return false;
+  }
+
+  renderMiniControls = ({
+    data: {
+      mediaPlayer: {
+        currentTrack: { title, artist, isVideo } = {},
+        isPlaying = false,
+      } = {},
+    } = {},
+  }) => {
+    Animated.spring(this.dismissAnimator, {
+      toValue: isPlaying ? 0 : 0.8,
+      overshootClamping: true,
+      useNativeDriver: true,
+    }).start();
+    return (
+      <Mutation mutation={goFullscreenMutation}>
+        {(goFullscreen) => (
+          <Shadow>
+            <Container>
+              <Mutation mutation={dismissMutation}>
+                {(dismiss) => (
+                  <Touchable
+                    onPress={() => (isPlaying ? goFullscreen() : dismiss())}
+                  >
+                    <ThumbnailSpacer isVideo={isVideo}>
+                      <Animated.View
+                        style={[
+                          StyleSheet.absoluteFill,
+                          { opacity: this.dismissAnimator },
+                        ]}
+                      >
+                        <DismissBackground>
+                          <StyledIcon name="close" />
+                        </DismissBackground>
+                      </Animated.View>
+                    </ThumbnailSpacer>
+                  </Touchable>
+                )}
+              </Mutation>
+              <TrackInfoTouchableBackground>
+                <TrackInfoTouchable onPress={() => goFullscreen()}>
+                  <TrackInfo>
+                    <TrackName>{title}</TrackName>
+                    <TrackArtist>{artist}</TrackArtist>
+                  </TrackInfo>
+                </TrackInfoTouchable>
+              </TrackInfoTouchableBackground>
+              <Controls>
+                {isPlaying ? (
+                  <Mutation mutation={pauseMutation}>
+                    {(pause) => (
+                      <StyledButtonIcon
+                        name={'pause'}
+                        onPress={() => pause()}
+                      />
+                    )}
+                  </Mutation>
+                ) : (
+                  <Mutation mutation={playMutation}>
+                    {(play) => (
+                      <StyledButtonIcon name={'play'} onPress={() => play()} />
+                    )}
+                  </Mutation>
+                )}
+              </Controls>
+              <MiniSeeker minimal />
+            </Container>
+          </Shadow>
+        )}
+      </Mutation>
+    );
+  };
+
+  render() {
+    return <Query query={getControlState}>{this.renderMiniControls}</Query>;
+  }
+}
+
+export { MiniControls as default, MINI_PLAYER_HEIGHT };
diff --git a/apolloschurchapp/src/ui/MediaPlayer/MusicControls.js b/apolloschurchapp/src/ui/MediaPlayer/MusicControls.js
new file mode 100644
index 0000000..0bf66c6
--- /dev/null
+++ b/apolloschurchapp/src/ui/MediaPlayer/MusicControls.js
@@ -0,0 +1,177 @@
+import PropTypes from 'prop-types';
+import React, { Component } from 'react';
+import { Animated, Platform } from 'react-native';
+import MusicControl from 'react-native-music-control';
+import { withApollo, Query } from 'react-apollo';
+import { throttle, get } from 'lodash';
+
+import { PlayheadConsumer, ControlsConsumer } from './PlayheadState';
+import { getMusicControlState } from './queries';
+import { play, pause, updatePlayhead } from './mutations';
+
+class MusicControls extends Component {
+  static propTypes = {
+    currentTrack: PropTypes.shape({}),
+    currentTime: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
+    currentTimeAnimated: PropTypes.instanceOf(Animated.Value),
+    isPlaying: PropTypes.bool,
+    duration: PropTypes.number,
+    skip: PropTypes.func,
+    client: PropTypes.shape({ mutate: PropTypes.func }),
+  };
+
+  constructor(...args) {
+    super(...args);
+    // iOS is the only platform that displays currentTime and Android is notorious bad at handling
+    // the JS thread.
+    if (Platform.OS === 'ios') this.currentTimeSubscription();
+  }
+
+  componentDidUpdate(oldProps) {
+    if (this.props.duration > 1 && oldProps.duration !== this.props.duration) {
+      this.configureMusicControl();
+    }
+    if (this.props.currentTimeAnimated !== oldProps.currentTimeAnimated) {
+      if (this.listener) {
+        oldProps.currentTimeAnimated.removeListener(this.listener);
+      }
+      if (Platform.OS === 'ios') this.currentTimeSubscription();
+    }
+
+    if (
+      oldProps.currentTime !== this.props.currentTime ||
+      oldProps.isPlaying !== this.props.isPlaying
+    ) {
+      this.updatePlayback();
+    }
+  }
+
+  componentWillUnmount() {
+    MusicControl.enableBackgroundMode(false);
+    MusicControl.stopControl();
+    if (this.listener)
+      this.props.currentTimeAnimated.removeListener(this.listener);
+  }
+
+  currentTimeSubscription = () => {
+    this.listener = this.props.currentTimeAnimated.addListener(
+      throttle(({ value }) => {
+        MusicControl.updatePlayback({
+          state: this.props.isPlaying
+            ? MusicControl.STATE_PLAYING
+            : MusicControl.STATE_PAUSED,
+          elapsedTime: value,
+        });
+      }, 1000)
+    );
+  };
+
+  configureMusicControl = () => {
+    // Initialize MusicControl settings
+    MusicControl.enableBackgroundMode(true);
+
+    // Play
+    MusicControl.enableControl('play', true);
+    MusicControl.on('play', this.handleOnPlay);
+
+    // Pause/Stop
+    MusicControl.enableControl('pause', true);
+    MusicControl.enableControl('stop', false);
+    MusicControl.on('pause', this.handleOnPause);
+    MusicControl.on('stop', this.handleOnPause);
+
+    // Skip
+    MusicControl.enableControl('previousTrack', false);
+    MusicControl.enableControl('nextTrack', false);
+
+    // Seeking
+    if (this.props.skip) {
+      MusicControl.enableControl('skipForward', true);
+      MusicControl.enableControl('skipBackward', true);
+      MusicControl.on('skipForward', this.handleOnFastForward);
+      MusicControl.on('skipBackward', this.handleOnRewind);
+    }
+
+    // Scrubber
+    MusicControl.enableControl('seek', true); // Android
+    MusicControl.enableControl('changePlaybackPosition', true); // iOS
+    MusicControl.on('seek', this.handleOnSeek);
+    MusicControl.on('changePlaybackPosition', this.handleOnSeek);
+
+    // Remote (headphones) play/pause
+    MusicControl.enableControl('togglePlayPause', true);
+    MusicControl.on('togglePlayPause', () =>
+      this.props.isPlaying ? this.handleOnPause() : this.handleOnPlay()
+    );
+
+    // Remote (headphones) fast forward/rewind (iOS only) (disabled)
+    MusicControl.enableControl('seekForward', false);
+    MusicControl.enableControl('seekBackward', false);
+
+    // Swipe to dismiss native control (Android only)
+    MusicControl.enableControl('closeNotification', true, { when: 'paused' });
+
+    // Configure the visuals
+    const { currentTrack = {} } = this.props;
+    MusicControl.setNowPlaying({
+      title: currentTrack.title,
+      artist: currentTrack.artist,
+      artwork: get(currentTrack, 'posterSources[0].uri'),
+      elapsedTime: this.props.currentTime,
+      duration: this.props.duration,
+    });
+  };
+
+  updatePlayback = () => {
+    MusicControl.updatePlayback({
+      state: this.props.isPlaying
+        ? MusicControl.STATE_PLAYING
+        : MusicControl.STATE_PAUSED,
+      elapsedTime: this.props.currentTime,
+    });
+  };
+
+  handleOnPlay = () => this.props.client.mutate({ mutation: play });
+
+  handleOnPause = () => this.props.client.mutate({ mutation: pause });
+
+  handleOnFastForward = () => this.props.skip(15);
+
+  handleOnRewind = () => this.props.skip(-15);
+
+  handleOnSeek = (seekTo) =>
+    this.props.client.mutate({
+      mutation: updatePlayhead,
+      variables: {
+        currentTime: seekTo,
+      },
+    });
+
+  render() {
+    return null;
+  }
+}
+
+const MusicControlsState = (props) => (
+  <Query query={getMusicControlState}>
+    {({ data: { mediaPlayer = {} } = {} }) => (
+      <PlayheadConsumer>
+        {({ duration, currentTime }) => (
+          <ControlsConsumer>
+            {({ skip }) => (
+              <MusicControls
+                {...props}
+                currentTimeAnimated={currentTime}
+                duration={duration}
+                skip={skip}
+                {...mediaPlayer}
+              />
+            )}
+          </ControlsConsumer>
+        )}
+      </PlayheadConsumer>
+    )}
+  </Query>
+);
+
+export default withApollo(MusicControlsState);
diff --git a/apolloschurchapp/src/ui/MediaPlayer/PlayheadState.js b/apolloschurchapp/src/ui/MediaPlayer/PlayheadState.js
new file mode 100644
index 0000000..ed10ed7
--- /dev/null
+++ b/apolloschurchapp/src/ui/MediaPlayer/PlayheadState.js
@@ -0,0 +1,124 @@
+import React, { createContext, Component } from 'react';
+import { Animated } from 'react-native';
+import { Query, withApollo } from 'react-apollo';
+import PropTypes from 'prop-types';
+
+import { getMediaPlayerIsPlaying } from './queries';
+import { updatePlayhead } from './mutations';
+
+const defaultState = {
+  duration: 1,
+  currentTime: new Animated.Value(0),
+  playableDuration: new Animated.Value(1),
+  seekableDuration: new Animated.Value(1),
+  isLoading: true,
+};
+
+const controlState = () => {};
+
+const PlayheadContext = createContext(defaultState);
+
+const PlayheadControls = createContext(controlState);
+
+class ProviderWithoutApollo extends Component {
+  static propTypes = {
+    client: PropTypes.shape({
+      mutate: PropTypes.func,
+    }),
+  };
+
+  state = defaultState;
+
+  get controlState() {
+    return {
+      onLoad: this.handleOnLoad,
+      onLoadStart: this.handleOnLoadStart,
+      // onBuffer: this.handleOnBuffer,
+      onProgress: this.handleOnProgress,
+      skip: this.skip,
+      isLoading: this.state.isLoading,
+      // isBuffering: this.state.isBuffering,
+    };
+  }
+
+  handleOnLoad = ({ duration }) => {
+    this.setState({ duration, isLoading: false });
+    this.state.currentTime.setValue(0);
+    this.state.playableDuration.setValue(0);
+    this.state.seekableDuration.setValue(0);
+  };
+
+  handleOnLoadStart = () => {
+    this.setState({ isLoading: true });
+  };
+
+  // handleOnBuffer = ({ isBuffering }) => {
+  //   this.setState({ isBuffering }); // bool value https://github.com/react-native-community/react-native-video/blob/2c391f580702f9579a0ebd01c6e97415feda928b/ios/Video/RCTVideo.m#L636-L643
+  // };
+
+  handleOnProgress = ({ currentTime, playableDuration, seekableDuration }) => {
+    if (!this.seekingTo || Math.abs(this.seekingTo - currentTime) < 1) {
+      // when seeking, only update `currentTime` after the seek has finished
+      this.seekingTo = null;
+      this.lastCurrentTime = currentTime;
+      this.state.currentTime.setValue(currentTime);
+    }
+    this.state.playableDuration.setValue(playableDuration);
+    this.state.seekableDuration.setValue(seekableDuration);
+  };
+
+  handlePause = () => {
+    this.props.client.mutate({
+      mutation: updatePlayhead,
+      variables: {
+        currentTime: this.lastCurrentTime,
+      },
+    });
+  };
+
+  skip = async (secondsToSkip) => {
+    if (this.lastCurrentTime === undefined) return;
+    const currentTime = Math.min(
+      Math.max(this.lastCurrentTime + secondsToSkip, 0),
+      this.state.duration
+    );
+
+    await this.props.client.mutate({
+      mutation: updatePlayhead,
+      variables: {
+        currentTime,
+      },
+    });
+
+    this.seekingTo = currentTime;
+    this.state.currentTime.setValue(currentTime); // immediately set the playhead value so progress bar doesn't jump around
+  };
+
+  renderProviders = ({
+    data: { mediaPlayer: { isPlaying = false } = {} } = {},
+  }) => {
+    if (!isPlaying && this.wasPlaying) {
+      this.handlePause();
+    }
+    this.wasPlaying = isPlaying;
+
+    return (
+      <PlayheadControls.Provider value={this.controlState}>
+        <PlayheadContext.Provider value={this.state} {...this.props} />
+      </PlayheadControls.Provider>
+    );
+  };
+
+  render() {
+    return (
+      <Query query={getMediaPlayerIsPlaying}>{this.renderProviders}</Query>
+    );
+  }
+}
+
+const Provider = withApollo(ProviderWithoutApollo);
+
+const { Consumer: PlayheadConsumer } = PlayheadContext;
+const { Consumer: ControlsConsumer } = PlayheadControls;
+
+export { Provider, PlayheadConsumer, ControlsConsumer };
diff --git a/apolloschurchapp/src/ui/MediaPlayer/Seeker/Timestamp.js b/apolloschurchapp/src/ui/MediaPlayer/Seeker/Timestamp.js
new file mode 100644
index 0000000..ab33167
--- /dev/null
+++ b/apolloschurchapp/src/ui/MediaPlayer/Seeker/Timestamp.js
@@ -0,0 +1,95 @@
+import React, { PureComponent } from 'react';
+import { Animated } from 'react-native';
+import PropTypes from 'prop-types';
+
+import { H6, styled } from '@apollosproject/ui-kit';
+
+const TimeText = styled({
+  width: 50,
+  textAlign: 'center',
+  alignItems: 'center',
+})(H6);
+
+/**
+ * Displays a MM:SS formatted timestamp from either a number or Animate.Value in seconds
+ */
+class Timestamp extends PureComponent {
+  static propTypes = {
+    time: PropTypes.oneOfType([
+      PropTypes.number,
+      PropTypes.instanceOf(Animated.Value),
+    ]),
+    offset: PropTypes.instanceOf(Animated.Value),
+  };
+
+  state = {
+    time: 0,
+    offset: 0,
+  };
+
+  constructor(props) {
+    super(props);
+    if (typeof props.time === 'number') {
+      this.state.time = props.time;
+    } else {
+      this.listen(props);
+    }
+  }
+
+  componentWillUpdate(newProps) {
+    if (
+      newProps.time !== this.props.time ||
+      newProps.offset !== this.props.offset
+    ) {
+      this.listen(newProps);
+    }
+  }
+
+  listen = ({ time = 0, offset = 0 }) => {
+    if (this.listener) this.props.time.removeListener(this.listener);
+    if (this.offsetListener) {
+      this.props.offset.removeListener(this.offsetListener);
+    }
+
+    if (!time.addListener) {
+      this.setState({ time });
+    } else {
+      this.listener = time.addListener(({ value }) =>
+        this.setState({ time: value })
+      );
+    }
+
+    if (!offset.addListener) {
+      this.setState({ offset });
+    } else if (offset) {
+      this.offsetListener = offset.addListener(({ value }) =>
+        this.setState({ offset: value })
+      );
+    }
+  };
+
+  timestamp = (time) => {
+    // Hours, minutes and seconds
+    const hrs = Math.floor(time / 3600);
+    const mins = Math.floor((time % 3600) / 60);
+    const secs = time % 60;
+
+    let timestamp = '';
+
+    if (hrs > 0) {
+      timestamp += `${hrs}:${mins < 10 ? '0' : ''}`;
+    }
+
+    timestamp += `${mins}:${secs < 10 ? '0' : ''}`;
+    timestamp += `${Math.round(secs)}`;
+    return timestamp;
+  };
+
+  render() {
+    return (
+      <TimeText>{this.timestamp(this.state.time + this.state.offset)}</TimeText>
+    );
+  }
+}
+
+export default Timestamp;
diff --git a/apolloschurchapp/src/ui/MediaPlayer/Seeker/index.js b/apolloschurchapp/src/ui/MediaPlayer/Seeker/index.js
new file mode 100644
index 0000000..23f74ac
--- /dev/null
+++ b/apolloschurchapp/src/ui/MediaPlayer/Seeker/index.js
@@ -0,0 +1,216 @@
+import React, { PureComponent } from 'react';
+import { PanResponder, Animated, View, StyleSheet } from 'react-native';
+import PropTypes from 'prop-types';
+
+import { styled, withTheme } from '@apollosproject/ui-kit';
+
+import { PlayheadConsumer, ControlsConsumer } from '../PlayheadState';
+import Timestamp from './Timestamp';
+
+const Container = styled({
+  width: '100%',
+  flexDirection: 'row',
+  justifyContent: 'space-between',
+  alignItems: 'center',
+})(View);
+
+const TrackContainer = styled(({ minimal, knobSize }) => ({
+  height: knobSize / 2,
+  flexGrow: 1,
+  justifyContent: 'center',
+  paddingTop: minimal ? 20 : knobSize / 2,
+  paddingBottom: minimal ? 0 : knobSize / 2,
+}))(View);
+
+const Track = styled(({ theme, minimal, knobSize }) => ({
+  height: knobSize / 2,
+  overflow: 'hidden',
+  borderRadius: minimal ? 0 : knobSize / 2,
+  backgroundColor: minimal
+    ? theme.colors.transparent
+    : theme.colors.darkSecondary,
+}))(View);
+
+const ProgressBar = styled(({ theme }) => ({
+  height: theme.sizing.baseUnit,
+  backgroundColor: theme.colors.secondary,
+}))(View);
+
+const Knob = styled(({ theme, knobSize }) => ({
+  height: knobSize,
+  width: knobSize,
+  position: 'absolute',
+  right: 0,
+  elevation: 2,
+  borderRadius: knobSize,
+  backgroundColor: theme.colors.text.primary,
+}))(View);
+
+/**
+ * Animated Seeker component.
+ * Depends on `PlayheadState`, so you don't pass it any props directly,
+ * but must be rendered within a `<MediaPlayer/>` component
+ */
+class Seeker extends PureComponent {
+  static propTypes = {
+    minimal: PropTypes.bool, // The only prop you need to pass - switches to a minimal version (line instead of bar)
+    currentTime: PropTypes.any, // eslint-disable-line
+    duration: PropTypes.any, // eslint-disable-line
+    style: PropTypes.any, // eslint-disable-line
+    onScrubbing: PropTypes.func,
+    skip: PropTypes.func,
+    knobSize: PropTypes.number, // defaults to theme.sizing.baseUnit / 1.5  (12px)
+  };
+
+  isSeeking = false;
+
+  timeAtSeekingStart = 0;
+
+  state = {
+    width: 0, // the width of the seeker bar
+  };
+
+  offsetDriver = new Animated.Value(0); // Used to track pixel offset when seeking
+
+  offsetTimeDriver = new Animated.Value(0); // Used to track time offset when seeking
+
+  panResponder = PanResponder.create({
+    onStartShouldSetPanResponder: () => true,
+    onPanResponderGrant: () => {
+      // Using `stopAnimation` only to get the currentTime value
+      this.props.currentTime.stopAnimation((value) => {
+        this.isSeeking = true;
+        this.timeAtSeekingStart = value;
+      });
+    },
+    onPanResponderMove: (e, { dx }) => {
+      // Calculate the pixel offset and apply it to the offsetDriver
+      let offset = dx;
+      const progressAtStart = this.timeAtSeekingStart / this.props.duration;
+      const positionAtStart = progressAtStart * this.state.width;
+      offset = Math.min(this.state.width - positionAtStart, offset);
+      offset = Math.max(-positionAtStart, offset);
+      this.offsetDriver.setValue(offset);
+
+      // Calculate the time offset and apply it to the offsetTimeDriver
+      const moveAmount = offset / this.state.width;
+      const moveAmountInTime = moveAmount * this.props.duration;
+      this.offsetTimeDriver.setValue(moveAmountInTime);
+
+      if (this.props.onScrubbing) this.props.onScrubbing({ isScrubbing: true });
+    },
+    onPanResponderRelease: async (e, { dx }) => {
+      // Calculate the amount in time we've moved, and skip that duration
+      const moveAmount = dx / this.state.width;
+      const moveAmountInTime = moveAmount * this.props.duration;
+      await this.props.skip(moveAmountInTime);
+
+      // Reset state
+      this.offsetDriver.setValue(0);
+      this.offsetTimeDriver.setValue(0);
+      this.isSeeking = false;
+      this.timeAtSeekingStart = 0;
+
+      if (this.props.onScrubbing)
+        this.props.onScrubbing({ isScrubbing: false });
+    },
+  });
+
+  // Calculate the real offset position of the colored track bar
+  // To be able to useNativeDriver, the trackbar is always the full-width, and we animate its X position
+  get trackBarOffset() {
+    const progress = Animated.divide(
+      this.isSeeking ? this.timeAtSeekingStart : this.props.currentTime,
+      this.props.duration
+    );
+
+    const progressInvert = Animated.subtract(1, progress);
+    const widthInvert = Animated.multiply(-1, this.state.width);
+    const position = Animated.multiply(progressInvert, widthInvert);
+    return Animated.add(position, this.offsetDriver);
+  }
+
+  // the "knob" is on top of the trackbar, the piece of UI you can grab and move around
+  get knobStyles() {
+    return [
+      StyleSheet.absoluteFill,
+      {
+        transform: [{ translateX: this.trackBarOffset }],
+      },
+    ];
+  }
+
+  handleOnLayout = ({
+    nativeEvent: {
+      layout: { width },
+    },
+  }) =>
+    this.setState({
+      /*
+       * Adjust offset width to adjust for knobSize so Knob always appears on the track. Knob is
+       * hidden when in a minimal state (miniplayer) we only make this adjustment when necessary.
+       */
+      width: this.props.minimal ? width : width - this.props.knobSize,
+    });
+
+  renderProgress = () => (
+    <Animated.View
+      style={[
+        StyleSheet.absoluteFill,
+        {
+          transform: [{ translateX: this.trackBarOffset }],
+        },
+      ]}
+    >
+      <ProgressBar />
+    </Animated.View>
+  );
+
+  render() {
+    return (
+      <Container style={this.props.style}>
+        {!this.props.minimal ? (
+          <Timestamp
+            time={this.props.currentTime}
+            offset={this.offsetTimeDriver}
+          />
+        ) : null}
+        <TrackContainer
+          minimal={this.props.minimal}
+          knobSize={this.props.knobSize}
+        >
+          <Track
+            onLayout={this.handleOnLayout}
+            minimal={this.props.minimal}
+            knobSize={this.props.knobSize}
+          >
+            {this.renderProgress()}
+          </Track>
+          <Animated.View style={this.knobStyles}>
+            {!this.props.minimal ? (
+              <Knob
+                knobSize={this.props.knobSize}
+                {...this.panResponder.panHandlers}
+              />
+            ) : null}
+          </Animated.View>
+        </TrackContainer>
+        {!this.props.minimal ? <Timestamp time={this.props.duration} /> : null}
+      </Container>
+    );
+  }
+}
+
+const SeekerWithState = withTheme(({ theme: { sizing: { baseUnit } } }) => ({
+  knobSize: Math.floor(baseUnit / 1.33),
+}))((props) => (
+  <ControlsConsumer>
+    {(controls) => (
+      <PlayheadConsumer>
+        {(playhead) => <Seeker {...props} {...playhead} {...controls} />}
+      </PlayheadConsumer>
+    )}
+  </ControlsConsumer>
+));
+
+export default SeekerWithState;
diff --git a/apolloschurchapp/src/ui/MediaPlayer/VideoWindow.js b/apolloschurchapp/src/ui/MediaPlayer/VideoWindow.js
new file mode 100644
index 0000000..4b07c38
--- /dev/null
+++ b/apolloschurchapp/src/ui/MediaPlayer/VideoWindow.js
@@ -0,0 +1,152 @@
+import React, { PureComponent } from 'react';
+import PropTypes from 'prop-types';
+import { Query, withApollo } from 'react-apollo';
+import { get } from 'lodash';
+import Video from 'react-native-video';
+import { Animated, View, StyleSheet } from 'react-native';
+
+import { styled, ActivityIndicator } from '@apollosproject/ui-kit';
+
+import { getVideoState } from './queries';
+import { pause as pauseMutation, pauseAndRestart } from './mutations';
+
+const styles = StyleSheet.create({
+  animatedPosterImage: {
+    ...StyleSheet.absoluteFillObject,
+    resizeMode: 'cover',
+  },
+});
+
+const Background = styled(({ theme }) => ({
+  ...StyleSheet.absoluteFillObject,
+  backgroundColor: theme.colors.black,
+}))(View);
+
+/**
+ * The VideoWindow displays the actual react-native-video component.
+ * It's responsible for loading the video, and updating progress + duration in state.
+ */
+class VideoWindow extends PureComponent {
+  static propTypes = {
+    client: PropTypes.shape({
+      mutate: PropTypes.func,
+    }),
+    onProgress: PropTypes.func,
+    onLoad: PropTypes.func,
+    onLoadStart: PropTypes.func,
+    // onBuffer: PropTypes.func,
+  };
+
+  loadingOverlay = new Animated.Value(1);
+
+  loadingStyle = [StyleSheet.absoluteFill, { opacity: this.loadingOverlay }];
+
+  handleOnEnd = async () => {
+    this.props.client.mutate({ mutation: pauseAndRestart });
+  };
+
+  handlePause = () => {
+    this.props.client.mutate({ mutation: pauseMutation });
+  };
+
+  handleOnProgress = (progress) => {
+    if (this.props.onProgress) this.props.onProgress(progress);
+  };
+
+  handleOnError = () => {
+    this.handlePause();
+  };
+
+  handleOnLoad = ({ duration }) => {
+    this.showLoadingIndicator(false);
+
+    if (this.props.onLoad) this.props.onLoad({ duration });
+  };
+
+  handleOnLoadStart = () => {
+    if (this.props.onLoadStart) this.props.onLoadStart();
+    this.showLoadingIndicator(true);
+  };
+
+  handleOnBuffer = ({ isBuffering }) => {
+    // if (this.props.onBuffer) this.props.onBuffer({ isBuffering });
+    this.showLoadingIndicator(!isBuffering);
+  };
+
+  setVideoRef = (element) => {
+    this.video = element;
+  };
+
+  showLoadingIndicator(isLoading) {
+    if (isLoading) {
+      Animated.spring(this.loadingOverlay, {
+        toValue: 1,
+        useNativeDriver: true,
+      });
+    } else {
+      Animated.spring(this.loadingOverlay, {
+        toValue: 0,
+        useNativeDriver: true,
+      }).start();
+    }
+  }
+
+  renderVideo = ({ data: { mediaPlayer = {} } = {} }) => {
+    if (!get(mediaPlayer, 'currentTrack.mediaSource')) return null;
+
+    const { currentTime } = mediaPlayer;
+    if (currentTime && currentTime !== this.lastCurrentTime && this.video) {
+      this.video.seek(currentTime);
+    }
+
+    this.lastCurrentTime = currentTime;
+
+    return [
+      <Video
+        ref={this.setVideoRef}
+        source={mediaPlayer.currentTrack.mediaSource}
+        paused={!mediaPlayer.isPlaying}
+        audioOnly={!mediaPlayer.showVideo}
+        ignoreSilentSwitch={'ignore'}
+        allowsExternalPlayback
+        playInBackground
+        playWhenInactive
+        onAudioBecomingNoisy={this.handlePause}
+        onEnd={this.handleOnEnd}
+        onError={this.handleOnError}
+        resizeMode={'contain'}
+        onLoadStart={this.handleOnLoadStart}
+        onLoad={this.handleOnLoad}
+        // onBuffer={this.handleOnBuffer}
+        onProgress={this.handleOnProgress}
+        style={StyleSheet.absoluteFill}
+        volume={mediaPlayer.muted ? 0 : 1}
+        repeat
+        key="video"
+      />,
+      // there's currently a bug on android where react-native-video's poster doesn't ever go away
+      // So we use our own image copmonent...which is nicer cuz we can show a nice fading animation too!
+      <Animated.Image
+        key="poster"
+        style={[
+          styles.animatedPosterImage,
+          mediaPlayer.showVideo ? this.loadingStyle : {},
+        ]}
+        source={mediaPlayer.currentTrack.posterSources}
+      />,
+    ];
+  };
+
+  render() {
+    return (
+      <Background>
+        <Query query={getVideoState}>{this.renderVideo}</Query>
+        <Animated.View style={this.loadingStyle}>
+          <ActivityIndicator size={'large'} />
+        </Animated.View>
+      </Background>
+    );
+  }
+}
+
+export default withApollo(VideoWindow);
diff --git a/apolloschurchapp/src/ui/MediaPlayer/index.js b/apolloschurchapp/src/ui/MediaPlayer/index.js
new file mode 100644
index 0000000..2264866
--- /dev/null
+++ b/apolloschurchapp/src/ui/MediaPlayer/index.js
@@ -0,0 +1,29 @@
+import React, { Component } from 'react';
+import { Query } from 'react-apollo';
+
+import FullscreenPlayer from './FullscreenPlayer';
+
+import { getMediaPlayerVisibility } from './queries';
+
+export { MINI_PLAYER_HEIGHT } from './MiniControls';
+export MediaPlayerSpacer from './MediaPlayerSpacer';
+
+/**
+ * Selectively renders FullscreenPlayer component is MediaPlayer is visible
+ */
+class MediaPlayer extends Component {
+  shouldComponentUpdate() {
+    return false; // 🚀
+  }
+
+  renderPlayer = ({ data = {} }) => {
+    if (!data.mediaPlayer || !data.mediaPlayer.isVisible) return null;
+    return <FullscreenPlayer />;
+  };
+
+  render() {
+    return <Query query={getMediaPlayerVisibility}>{this.renderPlayer}</Query>;
+  }
+}
+
+export default MediaPlayer;
diff --git a/apolloschurchapp/src/ui/MediaPlayer/mutations.js b/apolloschurchapp/src/ui/MediaPlayer/mutations.js
new file mode 100644
index 0000000..3eb3b2d
--- /dev/null
+++ b/apolloschurchapp/src/ui/MediaPlayer/mutations.js
@@ -0,0 +1,101 @@
+import gql from 'graphql-tag';
+
+const playVideoMutation = gql`
+  mutation playVideo(
+    $mediaSource: String!
+    $posterSources: String
+    $title: String
+    $artist: String
+    $isVideo: Boolean
+  ) {
+    mediaPlayerPlayNow(
+      mediaSource: $mediaSource
+      posterSources: $posterSources
+      title: $title
+      artist: $artist
+      isVideo: $isVideo
+    ) @client
+  }
+`;
+
+const goFullscreen = gql`
+  mutation {
+    mediaPlayerUpdateState(isFullscreen: true) @client
+  }
+`;
+
+const play = gql`
+  mutation {
+    mediaPlayerUpdateState(isPlaying: true) @client
+  }
+`;
+
+const pause = gql`
+  mutation {
+    mediaPlayerUpdateState(isPlaying: false) @client
+  }
+`;
+
+const dismiss = gql`
+  mutation {
+    mediaPlayerUpdateState(isPlaying: false, isVisible: false) @client
+  }
+`;
+
+const pauseAndRestart = gql`
+  mutation pause {
+    mediaPlayerUpdateState(isPlaying: false) @client
+    mediaPlayerSetPlayhead(currentTime: 0) @client
+  }
+`;
+
+const exitFullscreen = gql`
+  mutation {
+    mediaPlayerUpdateState(isFullscreen: false) @client
+  }
+`;
+
+const mute = gql`
+  mutation {
+    mediaPlayerUpdateState(muted: true) @client
+  }
+`;
+
+const unmute = gql`
+  mutation {
+    mediaPlayerUpdateState(muted: false) @client
+  }
+`;
+
+const showVideo = gql`
+  mutation {
+    mediaPlayerUpdateState(showVideo: true) @client
+  }
+`;
+
+const hideVideo = gql`
+  mutation {
+    mediaPlayerUpdateState(showVideo: false) @client
+  }
+`;
+
+const updatePlayhead = gql`
+  mutation mediaPlayerSetPlayhead($currentTime: Float) {
+    mediaPlayerSetPlayhead(currentTime: $currentTime) @client
+  }
+`;
+
+export {
+  pauseAndRestart,
+  playVideoMutation,
+  goFullscreen,
+  play,
+  pause,
+  dismiss,
+  exitFullscreen,
+  updatePlayhead,
+  mute,
+  unmute,
+  showVideo,
+  hideVideo,
+};
diff --git a/apolloschurchapp/src/ui/MediaPlayer/queries.js b/apolloschurchapp/src/ui/MediaPlayer/queries.js
new file mode 100644
index 0000000..b56957a
--- /dev/null
+++ b/apolloschurchapp/src/ui/MediaPlayer/queries.js
@@ -0,0 +1,126 @@
+import gql from 'graphql-tag';
+
+const getMediaPlayerVisibility = gql`
+  query mediaPlayerVisibility {
+    mediaPlayer @client {
+      isVisible
+    }
+  }
+`;
+
+const getMediaPlayerIsPlaying = gql`
+  query mediaPlayerVisibility {
+    mediaPlayer @client {
+      isPlaying
+    }
+  }
+`;
+
+const getFullVisibilityState = gql`
+  query fullVisibilityState {
+    mediaPlayer @client {
+      currentTrack {
+        isVideo
+      }
+      isVisible
+      isFullscreen
+    }
+  }
+`;
+
+const getControlState = gql`
+  query {
+    mediaPlayer @client {
+      isFullscreen
+      isPlaying
+      currentTrack {
+        id
+        title
+        artist
+        isVideo
+      }
+      showVideo
+      muted
+    }
+  }
+`;
+
+const getVideoState = gql`
+  query mediaPlayer {
+    mediaPlayer @client {
+      currentTrack {
+        mediaSource {
+          uri
+        }
+        posterSources {
+          uri
+        }
+        id
+        isVideo
+      }
+      currentTime
+      isPlaying
+      showVideo
+      muted
+    }
+  }
+`;
+
+const getMusicControlState = gql`
+  query musicControlState {
+    mediaPlayer @client {
+      currentTrack {
+        posterSources {
+          uri
+        }
+        title
+        artist
+      }
+      currentTime
+      isPlaying
+    }
+  }
+`;
+
+const getElapsedTime = gql`
+  query {
+    mediaPlayer @client {
+      progress {
+        currentTime
+      }
+    }
+  }
+`;
+
+const getProgress = gql`
+  query {
+    mediaPlayer @client {
+      progress {
+        currentTime
+        duration
+      }
+    }
+  }
+`;
+
+const getTotalTime = gql`
+  query {
+    mediaPlayer @client {
+      progress {
+        duration
+      }
+    }
+  }
+`;
+
+export {
+  getMediaPlayerIsPlaying,
+  getMediaPlayerVisibility,
+  getMusicControlState,
+  getFullVisibilityState,
+  getControlState,
+  getVideoState,
+  getElapsedTime,
+  getProgress,
+  getTotalTime,
+};
diff --git a/apolloschurchapp/src/ui/Onboarding/Onboarding.stories.js b/apolloschurchapp/src/ui/Onboarding/Onboarding.stories.js
index bf81552..d304b28 100644
--- a/apolloschurchapp/src/ui/Onboarding/Onboarding.stories.js
+++ b/apolloschurchapp/src/ui/Onboarding/Onboarding.stories.js
@@ -1,5 +1,6 @@
 import React from 'react';
-import { storiesOf } from '@apollosproject/ui-storybook';
+import { storiesOf } from '@storybook/react-native';
+
 import Onboarding from '.';
 
-storiesOf('Onboarding', module).add('full', () => <Onboarding />);
+storiesOf('Onboarding', module).add('Example', () => <Onboarding />);
diff --git a/apolloschurchapp/src/ui/Onboarding/Onboarding.tests.js b/apolloschurchapp/src/ui/Onboarding/Onboarding.tests.js
deleted file mode 100644
index abe9746..0000000
--- a/apolloschurchapp/src/ui/Onboarding/Onboarding.tests.js
+++ /dev/null
@@ -1,17 +0,0 @@
-import React from 'react';
-import renderer from 'react-test-renderer';
-
-import Providers from '../../Providers';
-
-import Onboarding from '.';
-
-describe('the Onboarding component', () => {
-  it('should render Onboarding', () => {
-    const tree = renderer.create(
-      <Providers>
-        <Onboarding />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/ui/Onboarding/Slide/Slide.stories.js b/apolloschurchapp/src/ui/Onboarding/Slide/Slide.stories.js
new file mode 100644
index 0000000..10ca9e6
--- /dev/null
+++ b/apolloschurchapp/src/ui/Onboarding/Slide/Slide.stories.js
@@ -0,0 +1,49 @@
+import React from 'react';
+import { Text } from 'react-native';
+import { storiesOf } from '@storybook/react-native';
+
+import Slide from '.';
+
+storiesOf('Onboarding/Slide', module)
+  .add('default', () => (
+    <Slide>
+      <Text>Boom</Text>
+    </Slide>
+  ))
+  .add('onPressPrimary', () => (
+    <Slide onPressPrimary={() => {}}>
+      <Text>Boom</Text>
+    </Slide>
+  ))
+  .add('primaryNavText', () => (
+    <Slide onPressPrimary={() => {}} primaryNavText={'Custom button text'}>
+      <Text>Boom</Text>
+    </Slide>
+  ))
+  .add('primaryNavIcon', () => (
+    <Slide
+      onPressPrimary={() => {}}
+      primaryNavText={'Custom icon'}
+      primaryNavIcon={'umbrella'}
+    >
+      <Text>Boom</Text>
+    </Slide>
+  ))
+  .add('onPressSecondary', () => (
+    <Slide onPressSecondary={() => {}}>
+      <Text>Boom</Text>
+    </Slide>
+  ))
+  .add('secondaryNavText', () => (
+    <Slide
+      onPressSecondary={() => {}}
+      secondaryNavText={'Custom skip button text'}
+    >
+      <Text>Boom</Text>
+    </Slide>
+  ))
+  .add('With Navigation', () => (
+    <Slide onPressPrimary={() => {}} onPressSecondary={() => {}}>
+      <Text>Boom</Text>
+    </Slide>
+  ));
diff --git a/apolloschurchapp/src/ui/Onboarding/Slide/Slide.tests.js b/apolloschurchapp/src/ui/Onboarding/Slide/Slide.tests.js
new file mode 100644
index 0000000..451c794
--- /dev/null
+++ b/apolloschurchapp/src/ui/Onboarding/Slide/Slide.tests.js
@@ -0,0 +1,87 @@
+import React from 'react';
+import { Text } from 'react-native';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import Slide from '.';
+
+describe('The Onboarding Slide component', () => {
+  it('should render children', () => {
+    const tree = renderer.create(
+      <Providers>
+        <Slide>
+          <Text>Boom</Text>
+        </Slide>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render onboarding next button navigation', () => {
+    const tree = renderer.create(
+      <Providers>
+        <Slide onPressPrimary={jest.fn()}>
+          <Text>Boom</Text>
+        </Slide>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render primary navigation button with custom text', () => {
+    const tree = renderer.create(
+      <Providers>
+        <Slide onPressPrimary={jest.fn()} primaryNavText={'Custom nav text'}>
+          <Text>Boom</Text>
+        </Slide>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render primary navigation button with a custom icon', () => {
+    const tree = renderer.create(
+      <Providers>
+        <Slide
+          onPressPrimary={jest.fn()}
+          primaryNavText={'Custom nav text with custom icon'}
+          primaryNavIcon={'umbrella'}
+        >
+          <Text>Boom</Text>
+        </Slide>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render onboarding skip button navigation', () => {
+    const tree = renderer.create(
+      <Providers>
+        <Slide onPressSecondary={jest.fn()}>
+          <Text>Boom</Text>
+        </Slide>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render onboarding skip button with custom text', () => {
+    const tree = renderer.create(
+      <Providers>
+        <Slide
+          onPressSecondary={jest.fn()}
+          secondaryNavText={'Custom skip button text'}
+        >
+          <Text>Boom</Text>
+        </Slide>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render both slide navigation buttons', () => {
+    const tree = renderer.create(
+      <Providers>
+        <Slide onPressPrimary={jest.fn()} onPressSecondary={jest.fn()}>
+          <Text>Boom</Text>
+        </Slide>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/Onboarding/Slide/index.js b/apolloschurchapp/src/ui/Onboarding/Slide/index.js
new file mode 100644
index 0000000..f9456d3
--- /dev/null
+++ b/apolloschurchapp/src/ui/Onboarding/Slide/index.js
@@ -0,0 +1,89 @@
+import React, { memo } from 'react';
+import PropTypes from 'prop-types';
+
+import {
+  styled,
+  withTheme,
+  FlexedView,
+  PaddedView,
+  H5,
+  ButtonLink,
+  Button,
+  Icon,
+} from '@apollosproject/ui-kit';
+
+const NavWrapper = styled(({ theme }) => ({
+  flexDirection: 'row-reverse', // reversed so the primary action is always on the right
+  alignItems: 'center', // centers optional back button with dots/next button
+  justifyContent: 'space-between',
+  marginBottom: theme.sizing.baseUnit * 0.5, // centers nav/button with pager dots
+}))(PaddedView);
+
+const PrimaryNavIcon = withTheme(({ theme }) => ({
+  size: theme.helpers.rem(1.25),
+  style: {
+    marginLeft: theme.sizing.baseUnit * 0.5,
+    marginRight: theme.sizing.baseUnit * -0.5,
+  },
+}))(Icon);
+
+const SkipButton = styled(({ theme }) => ({
+  color: theme.colors.text.tertiary, // this is probably not the right color
+  paddingVertical: theme.sizing.baseUnit * 0.9375, // optically centered on typographic baseline
+  paddingHorizontal: theme.sizing.baseUnit, // improves tappability
+  marginLeft: theme.sizing.baseUnit * -1, // adjusts for paddingHorizontal
+}))(ButtonLink);
+
+// memo = sfc PureComponent 💥
+// eslint-disable-next-line react/display-name
+const Slide = memo(
+  ({
+    children,
+    onPressPrimary,
+    onPressSecondary,
+    primaryNavText,
+    primaryNavIcon,
+    secondaryNavText,
+  }) => (
+    <>
+      <FlexedView>{children}</FlexedView>
+      {onPressPrimary || onPressSecondary ? (
+        <NavWrapper vertical={false}>
+          {onPressPrimary ? (
+            <Button onPress={onPressPrimary}>
+              <>
+                <H5>{primaryNavText}</H5>
+                <PrimaryNavIcon name={primaryNavIcon} />
+              </>
+            </Button>
+          ) : null}
+          {onPressSecondary ? (
+            <SkipButton onPress={onPressSecondary}>
+              {secondaryNavText}
+            </SkipButton>
+          ) : null}
+        </NavWrapper>
+      ) : null}
+    </>
+  )
+);
+
+Slide.propTypes = {
+  children: PropTypes.oneOfType([
+    PropTypes.arrayOf(PropTypes.node),
+    PropTypes.node,
+  ]),
+  onPressPrimary: PropTypes.func,
+  onPressSecondary: PropTypes.func,
+  primaryNavText: PropTypes.string, // colored button text
+  primaryNavIcon: PropTypes.string, // optional custom icon name
+  secondaryNavText: PropTypes.string, // text link
+};
+
+Slide.defaultProps = {
+  primaryNavText: 'Next',
+  primaryNavIcon: 'arrow-next',
+  secondaryNavText: 'Skip',
+};
+
+export default Slide;
diff --git a/apolloschurchapp/src/ui/Onboarding/index.js b/apolloschurchapp/src/ui/Onboarding/index.js
index bcd6421..0e67071 100644
--- a/apolloschurchapp/src/ui/Onboarding/index.js
+++ b/apolloschurchapp/src/ui/Onboarding/index.js
@@ -1,80 +1,104 @@
-import React from 'react';
-
-import { GradientOverlayImage } from '@apollosproject/ui-kit';
-import { ApolloConsumer } from 'react-apollo';
+import React, { Component } from 'react';
+import { Text } from 'react-native';
+// import PropTypes from 'prop-types';
+import Swiper from 'react-native-swiper';
+import {
+  withTheme,
+  styled,
+  BackgroundView,
+  FlexedView,
+  GradientOverlayImage,
+} from '@apollosproject/ui-kit';
 
 import {
+  AskName,
+  Features,
+  AboutYou,
   AskNotificationsConnected,
-  AskNameConnected,
-  FeaturesConnected,
-  AboutYouConnected,
-  LocationFinderConnected,
-  OnboardingSwiper,
-} from '@apollosproject/ui-onboarding';
+} from './slides';
 
-import { requestPushPermissions } from '@apollosproject/ui-notifications';
+// Provides themed colors to Swiper dots
+const ThemedSwiper = withTheme(({ theme }) => ({
+  dotColor: theme.colors.background.inactive, // theme.colors.lightSecondary looks the best.
+  activeDotColor: theme.colors.action.primary,
+}))(({ swiperRef, ...props }) => <Swiper ref={swiperRef} {...props} />);
 
-function Onboarding({ navigation }) {
-  return (
-    <OnboardingSwiper>
-      {({ swipeForward }) => (
-        <>
-          <AskNameConnected onPressPrimary={swipeForward} />
-          <FeaturesConnected
-            onPressPrimary={swipeForward}
-            BackgroundComponent={
-              <GradientOverlayImage
-                source={'https://picsum.photos/640/640/?random'}
-              />
-            }
-          />
-          <AboutYouConnected
-            onPressPrimary={swipeForward}
-            BackgroundComponent={
-              <GradientOverlayImage
-                source={'https://picsum.photos/640/640/?random'}
-              />
-            }
+const Boom = styled(({ bgcolor }) => ({
+  backgroundColor: bgcolor,
+}))(FlexedView);
+
+class Onboarding extends Component {
+  constructor() {
+    super();
+
+    this.swiper = null;
+    this.state = { pagination: true };
+  }
+
+  handleOnIndexChanged = (index) => {
+    this.currentIndex = index;
+
+    this.togglePagination();
+
+    return this.currentIndex;
+  };
+
+  togglePagination = () => {
+    if (this.currentIndex === 4 || this.state.pagination === false) {
+      this.setState((state) => ({
+        pagination: !state.pagination,
+      }));
+    }
+  };
+
+  // Creates ref to Swiper to be passed as a prop to children.
+  setSwiperRef = (r) => {
+    this.swiper = r;
+
+    return this.swiper;
+  };
+
+  // Advance swiper 1 slide. See Swiper documentation for scrollBy details. https://github.com/leecade/react-native-swiper#methods
+  handleOnPressPrimary = () => this.swiper.scrollBy(1);
+
+  render() {
+    return (
+      <BackgroundView>
+        <ThemedSwiper
+          showsPagination={this.state.pagination}
+          onIndexChanged={this.handleOnIndexChanged}
+          loop={false}
+          /* Disables swipe gestures. We currently we don't display a back button so this is our
+           * only back navigation option. */
+          // scrollEnabled={false}
+          showsButtons={false}
+          swiperRef={this.setSwiperRef}
+        >
+          <AskName onPressPrimary={this.handleOnPressPrimary} />
+          <Features
+            imgSrc={{ uri: 'https://picsum.photos/1200/1200?random' }}
+            onPressPrimary={this.handleOnPressPrimary}
           />
-          <LocationFinderConnected
-            onPressPrimary={swipeForward}
-            onNavigate={() => {
-              navigation.navigate('Location', {
-                onFinished: swipeForward,
-              });
-            }}
-            BackgroundComponent={
-              <GradientOverlayImage
-                source={'https://picsum.photos/640/640/?random'}
-              />
-            }
+          <AboutYou
+            imgSrc={{ uri: 'https://picsum.photos/1200/1200?random' }}
+            onPressPrimary={this.handleOnPressPrimary}
           />
-          <ApolloConsumer>
-            {(client) => (
-              <AskNotificationsConnected
-                onPressPrimary={() => navigation.replace('Tabs')}
-                onRequestPushPermissions={() =>
-                  requestPushPermissions({ client })
-                }
-                primaryNavText={'Finish'}
-                BackgroundComponent={
-                  <GradientOverlayImage
-                    source={'https://picsum.photos/640/640/?random'}
-                  />
-                }
-              />
-            )}
-          </ApolloConsumer>
-        </>
-      )}
-    </OnboardingSwiper>
-  );
+          <AskNotificationsConnected
+            onPressSecondary={this.handleOnPressPrimary}
+          >
+            <GradientOverlayImage
+              source={'https://picsum.photos/640/640/?random'}
+            />
+          </AskNotificationsConnected>
+          <Boom bgcolor={'lightgreen'}>
+            <Text>Hello World 2</Text>
+            <Text onPress={() => this.swiper.scrollBy(1)}>Next!</Text>
+            <Text onPress={() => this.swiper.scrollBy(-1)}>Previous!</Text>
+          </Boom>
+        </ThemedSwiper>
+      </BackgroundView>
+    );
+  }
 }
 
-Onboarding.navigationOptions = {
-  title: 'Onboarding',
-  header: null,
-  gesturesEnabled: false,
-};
-
 export default Onboarding;
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/AboutYou/AboutYou.stories.js b/apolloschurchapp/src/ui/Onboarding/slides/AboutYou/AboutYou.stories.js
new file mode 100644
index 0000000..cccacd6
--- /dev/null
+++ b/apolloschurchapp/src/ui/Onboarding/slides/AboutYou/AboutYou.stories.js
@@ -0,0 +1,18 @@
+import React from 'react';
+import { storiesOf } from '@storybook/react-native';
+
+import AboutYou from '.';
+
+storiesOf('Onboarding/slides/AboutYou', module)
+  .add('default', () => <AboutYou />)
+  .add('withImg', () => (
+    <AboutYou imgSrc={{ uri: 'https://picsum.photos/1200/1200?random' }} />
+  ))
+  .add('slideTitle', () => <AboutYou slideTitle={'Custom title text'} />)
+  .add('description', () => (
+    <AboutYou description={'Custom description text'} />
+  ))
+  .add('userDOB', () => <AboutYou userDOB={new Date('02/14/1989')} />)
+  .add('userGender', () => <AboutYou userGender={'Male'} />)
+  .add('genderList', () => <AboutYou genderList={['M', 'F']} />)
+  .add('Slide props', () => <AboutYou onPressPrimary={() => {}} />);
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/AboutYou/AboutYou.tests.js b/apolloschurchapp/src/ui/Onboarding/slides/AboutYou/AboutYou.tests.js
new file mode 100644
index 0000000..279c73c
--- /dev/null
+++ b/apolloschurchapp/src/ui/Onboarding/slides/AboutYou/AboutYou.tests.js
@@ -0,0 +1,106 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+import moment from 'moment';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import AboutYou from '.';
+
+describe('The Onboarding AboutYou component', () => {
+  it('should render', () => {
+    /* we have to pass in a date via defaultDate or the DateInput component will create a current date
+     * object and invalidate the snapshots every time. */
+    const tree = renderer.create(
+      <Providers>
+        <AboutYou defaultDate={moment.utc('2019-02-14').toDate()} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a custom image', () => {
+    /* we have to pass in a date via defaultDate or the DateInput component will create a current date
+     * object and invalidate the snapshots every time. */
+    const tree = renderer.create(
+      <Providers>
+        <AboutYou
+          imgSrc={{ uri: 'https://picsum.photos/1200/1200?random' }}
+          defaultDate={moment.utc('2019-02-14').toDate()}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a custom title', () => {
+    /* we have to pass in a date via defaultDate or the DateInput component will create a current date
+     * object and invalidate the snapshots every time. */
+    const tree = renderer.create(
+      <Providers>
+        <AboutYou
+          slideTitle={'Custom title text'}
+          defaultDate={moment.utc('2019-02-14').toDate()}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a custom description', () => {
+    /* we have to pass in a date via defaultDate or the DateInput component will create a current date
+     * object and invalidate the snapshots every time. */
+    const tree = renderer.create(
+      <Providers>
+        <AboutYou
+          description={'Custom description text'}
+          defaultDate={moment.utc('2019-02-14').toDate()}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a custom gender list', () => {
+    /* we have to pass in a date via defaultDate or the DateInput component will create a current date
+     * object and invalidate the snapshots every time. */
+    const tree = renderer.create(
+      <Providers>
+        <AboutYou
+          genderList={['M', 'F']}
+          defaultDate={moment.utc('2019-02-14').toDate()}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render the selected gender', () => {
+    /* we have to pass in a date via defaultDate or the DateInput component will create a current date
+     * object and invalidate the snapshots every time. */
+    const tree = renderer.create(
+      <Providers>
+        <AboutYou
+          userGender={'Male'}
+          defaultDate={moment.utc('2019-02-14').toDate()}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a custom date picker', () => {
+    const tree = renderer.create(
+      <Providers>
+        <AboutYou userDOB={moment.utc('1989-02-14').toDate()} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should pass additional props to Slide', () => {
+    /* we have to pass in a date via defaultDate or the DateInput component will create a current date
+     * object and invalidate the snapshots every time. */
+    const tree = renderer.create(
+      <Providers>
+        <AboutYou
+          onPressPrimary={jest.fn()}
+          defaultDate={moment.utc('2019-02-14').toDate()}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/AboutYou/index.js b/apolloschurchapp/src/ui/Onboarding/slides/AboutYou/index.js
new file mode 100644
index 0000000..7dcb94c
--- /dev/null
+++ b/apolloschurchapp/src/ui/Onboarding/slides/AboutYou/index.js
@@ -0,0 +1,138 @@
+import React, { memo } from 'react';
+import { Image, View } from 'react-native';
+import PropTypes from 'prop-types';
+import moment from 'moment';
+
+import {
+  styled,
+  H2,
+  H5,
+  Radio,
+  RadioButton,
+  H6,
+  DateInput,
+  FlexedView,
+  PaddedView,
+} from '@apollosproject/ui-kit';
+
+import Slide from '../../Slide';
+
+const Content = styled({
+  justifyContent: 'center',
+})(FlexedView);
+
+const StyledImage = styled(({ theme }) => ({
+  flex: 2,
+  resizeMode: 'contain',
+  marginBottom: theme.sizing.baseUnit * 2,
+}))(Image);
+
+const TextContent = styled({
+  flex: 1,
+  justifyContent: 'center',
+})(PaddedView);
+
+const Title = styled(({ theme }) => ({
+  color: theme.colors.primary,
+  marginBottom: theme.sizing.baseUnit * 0.5,
+}))(H2);
+
+const Description = styled(({ theme }) => ({
+  color: theme.colors.text.secondary,
+  marginBottom: theme.sizing.baseUnit,
+}))(H5);
+
+const Label = styled({
+  color: 'gray',
+  opacity: 0.7,
+})(H6);
+
+const StyledDate = styled(({ theme }) => ({
+  marginTop: 0,
+  marginBottom: theme.sizing.baseUnit,
+}))(DateInput);
+
+const StyledRadio = styled(({ theme }) => ({
+  marginBottom: theme.sizing.baseUnit,
+  flexDirection: 'row',
+}))(Radio);
+
+const RadioLabel = styled(({ theme }) => ({
+  marginLeft: theme.sizing.baseUnit * 0.5,
+}))(H5);
+
+const AboutYou = memo(
+  ({
+    imgSrc,
+    slideTitle,
+    description,
+    defaultDate,
+    userDOB,
+    userGender,
+    genderList,
+    ...props
+  }) => (
+    <Slide {...props}>
+      <Content>
+        {imgSrc ? <StyledImage source={imgSrc} /> : null}
+        <TextContent>
+          <Title>{slideTitle}</Title>
+          <Description>{description}</Description>
+          <View>
+            <Label>Gender</Label>
+            <StyledRadio value={userGender}>
+              {genderList.map((gender) => [
+                <RadioButton
+                  key={gender}
+                  value={gender}
+                  label={() => <RadioLabel>{gender}</RadioLabel>}
+                  underline={false}
+                />,
+              ])}
+            </StyledRadio>
+          </View>
+          {/* TODO: getting some warning with this DateInput */}
+          <View>
+            <Label>Birthday</Label>
+            {userDOB ? (
+              <StyledDate
+                value={moment.utc(userDOB).toDate()}
+                displayValue={moment.utc(userDOB).format('MM/DD/YYYY')}
+              />
+            ) : (
+              <StyledDate
+                placeholder={'Select a date...'}
+                value={defaultDate}
+              />
+            )}
+          </View>
+        </TextContent>
+      </Content>
+    </Slide>
+  )
+);
+
+AboutYou.propTypes = {
+  /* The `Swiper` component used in `<Onboading>` looks for and hijacks the title prop of it's
+   * children. Thus we have to use more unique name.
+   */
+  slideTitle: PropTypes.string,
+  description: PropTypes.string,
+  imgSrc: Image.propTypes,
+  userDOB: PropTypes.instanceOf(Date),
+  defaultDate: PropTypes.instanceOf(Date),
+  userGender: PropTypes.string,
+  genderList: PropTypes.arrayOf(PropTypes.number),
+};
+
+AboutYou.defaultProps = {
+  slideTitle: "This one's easy.",
+  description:
+    'Help us understand who you are so we can connect you with the best ministries and events.',
+  genderList: ['Male', 'Female'],
+  defaultDate: new Date(),
+};
+
+AboutYou.displayName = 'AboutYou';
+
+export default AboutYou;
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/AskName/AskName.stories.js b/apolloschurchapp/src/ui/Onboarding/slides/AskName/AskName.stories.js
new file mode 100644
index 0000000..dc7a07b
--- /dev/null
+++ b/apolloschurchapp/src/ui/Onboarding/slides/AskName/AskName.stories.js
@@ -0,0 +1,10 @@
+import React from 'react';
+import { storiesOf } from '@storybook/react-native';
+
+import AskName from '.';
+
+storiesOf('Onboarding/slides/AskName', module)
+  .add('default', () => <AskName />)
+  .add('slideTitle', () => <AskName slideTitle={'Custom title text'} />)
+  .add('description', () => <AskName description={'Custom description text'} />)
+  .add('SlideWrapper props', () => <AskName onPressPrimary={() => {}} />);
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/AskName/AskName.tests.js b/apolloschurchapp/src/ui/Onboarding/slides/AskName/AskName.tests.js
new file mode 100644
index 0000000..2feb35e
--- /dev/null
+++ b/apolloschurchapp/src/ui/Onboarding/slides/AskName/AskName.tests.js
@@ -0,0 +1,41 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import AskName from '.';
+
+describe('The Onboarding AskName component', () => {
+  it('should render', () => {
+    const tree = renderer.create(
+      <Providers>
+        <AskName />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a custom title', () => {
+    const tree = renderer.create(
+      <Providers>
+        <AskName slideTitle={'Custom title text'} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a custom description', () => {
+    const tree = renderer.create(
+      <Providers>
+        <AskName description={'Custom description text'} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should pass additional props to Slide component', () => {
+    const tree = renderer.create(
+      <Providers>
+        <AskName onPressPrimary={jest.fn()} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/AskName/index.js b/apolloschurchapp/src/ui/Onboarding/slides/AskName/index.js
new file mode 100644
index 0000000..77a480c
--- /dev/null
+++ b/apolloschurchapp/src/ui/Onboarding/slides/AskName/index.js
@@ -0,0 +1,79 @@
+import React, { memo } from 'react';
+import PropTypes from 'prop-types';
+
+import {
+  styled,
+  withTheme,
+  Icon,
+  H2,
+  H5,
+  PaddedView,
+  TextInput,
+} from '@apollosproject/ui-kit';
+
+import Slide from '../../Slide';
+
+const BrandIcon = withTheme(({ theme }) => ({
+  name: 'brand-icon',
+  size: theme.sizing.baseUnit * 3.0,
+  fill: theme.colors.primary,
+  style: {
+    marginTop: theme.sizing.baseUnit * 2,
+    marginBottom: theme.sizing.baseUnit * 0.5,
+  },
+}))(Icon);
+
+const Title = styled(({ theme }) => ({
+  color: theme.colors.primary,
+}))(H2);
+
+const StyledH5 = styled(({ theme }) => ({
+  color: theme.colors.text.secondary,
+}))(H5);
+
+// memo = sfc PureComponent 💥
+// eslint-disable-next-line react/display-name
+const AskName = memo(({ slideTitle, description, ...props }) => {
+  let LastNameInput = null;
+
+  return (
+    <Slide {...props}>
+      <PaddedView vertical={false}>
+        <BrandIcon />
+        <Title>{slideTitle}</Title>
+        <StyledH5>{description}</StyledH5>
+        <TextInput
+          label="First Name"
+          type="text"
+          returnKeyType="next"
+          onSubmitEditing={() => LastNameInput.focus()}
+          enzblesReturnKeyAutomatically
+        />
+        <TextInput
+          label="Last Name"
+          type="text"
+          returnKeyType="next"
+          enablesReturnKeyAutomatically
+          inputRef={(r) => {
+            LastNameInput = r;
+          }}
+        />
+      </PaddedView>
+    </Slide>
+  );
+});
+
+AskName.propTypes = {
+  /* The `Swiper` component used in `<Onboading>` looks for and hijacks the title prop of it's
+   * children. Thus we have to use more unique name.
+   */
+  slideTitle: PropTypes.string,
+  description: PropTypes.string,
+};
+
+AskName.defaultProps = {
+  slideTitle: 'Welcome!',
+  description: "Every relationship starts with a name. What's yours?",
+};
+
+export default AskName;
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/AskNotifications/AskNotifications.js b/apolloschurchapp/src/ui/Onboarding/slides/AskNotifications/AskNotifications.js
new file mode 100644
index 0000000..035a0e8
--- /dev/null
+++ b/apolloschurchapp/src/ui/Onboarding/slides/AskNotifications/AskNotifications.js
@@ -0,0 +1,87 @@
+import React, { memo } from 'react';
+import { View } from 'react-native';
+import PropTypes from 'prop-types';
+import {
+  PaddedView,
+  FlexedView,
+  styled,
+  H2,
+  H5,
+  Button,
+} from '@apollosproject/ui-kit';
+
+import Slide from '../../Slide';
+
+const ContentWrapper = styled({
+  height: '100%',
+})(View);
+
+const Content = styled({
+  justifyContent: 'flex-end',
+})(PaddedView);
+
+const Title = styled(({ theme }) => ({
+  color: theme.colors.primary,
+}))(H2);
+
+const StyledH5 = styled(({ theme }) => ({
+  color: theme.colors.text.secondary,
+  paddingBottom: theme.sizing.baseUnit * 1.5,
+}))(H5);
+
+// memo = sfc PureComponent 💥
+// eslint-disable-next-line react/display-name
+const AskNotifications = memo(
+  ({
+    children,
+    slideTitle,
+    description,
+    buttonText,
+    buttonDisabled,
+    onPressButton,
+    ...props
+  }) => (
+    <Slide {...props}>
+      <ContentWrapper>
+        <FlexedView>{children}</FlexedView>
+        <Content>
+          <Title>{slideTitle}</Title>
+          <StyledH5>{description}</StyledH5>
+          {buttonDisabled || onPressButton ? (
+            <Button
+              title={buttonText}
+              onPress={onPressButton}
+              disabled={buttonDisabled}
+              pill={false}
+            />
+          ) : null}
+        </Content>
+      </ContentWrapper>
+    </Slide>
+  )
+);
+
+AskNotifications.propTypes = {
+  /* The `Swiper` component used in `<Onboading>` looks for and hijacks the title prop of it's
+   * children. Thus we have to use a more unique name.
+   */
+  children: PropTypes.oneOfType([
+    PropTypes.arrayOf(PropTypes.node),
+    PropTypes.node,
+  ]),
+  slideTitle: PropTypes.string,
+  description: PropTypes.string,
+  buttonText: PropTypes.string,
+  buttonDisabled: PropTypes.bool,
+  onPressButton: PropTypes.func,
+};
+
+AskNotifications.defaultProps = {
+  slideTitle: 'Can we keep you informed?',
+  description:
+    "We'll let you know when important things are happening and keep you in the loop",
+  buttonText: 'Yes, enable notifications',
+  buttonDisabled: false,
+};
+
+export default AskNotifications;
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/AskNotifications/AskNotifications.stories.js b/apolloschurchapp/src/ui/Onboarding/slides/AskNotifications/AskNotifications.stories.js
new file mode 100644
index 0000000..0506b87
--- /dev/null
+++ b/apolloschurchapp/src/ui/Onboarding/slides/AskNotifications/AskNotifications.stories.js
@@ -0,0 +1,29 @@
+import React from 'react';
+import { storiesOf } from '@storybook/react-native';
+import { GradientOverlayImage } from '@apollosproject/ui-kit';
+
+import AskNotifications from './AskNotifications';
+
+storiesOf('Onboarding/slides/AskNotifications', module)
+  .add('default', () => <AskNotifications />)
+  .add('children (image)', () => (
+    <AskNotifications>
+      <GradientOverlayImage source={'https://picsum.photos/640/640/?random'} />
+    </AskNotifications>
+  ))
+  .add('slideTitle', () => (
+    <AskNotifications slideTitle={'Custom title text'} />
+  ))
+  .add('description', () => (
+    <AskNotifications description={'Custom description text'} />
+  ))
+  .add('buttonDisabled', () => <AskNotifications buttonDisabled />)
+  .add('buttonText', () => (
+    <AskNotifications
+      onPressButton={() => {}}
+      buttonText={'Custom button text'}
+    />
+  ))
+  .add('SlideWrapper props', () => (
+    <AskNotifications onPressSecondary={() => {}} />
+  ));
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/AskNotifications/AskNotifications.tests.js b/apolloschurchapp/src/ui/Onboarding/slides/AskNotifications/AskNotifications.tests.js
new file mode 100644
index 0000000..1e411d8
--- /dev/null
+++ b/apolloschurchapp/src/ui/Onboarding/slides/AskNotifications/AskNotifications.tests.js
@@ -0,0 +1,84 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+import { GradientOverlayImage } from '@apollosproject/ui-kit';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import AskNotifications from './AskNotifications';
+
+describe('The Onboarding AskNotifications component', () => {
+  it('should render', () => {
+    const tree = renderer.create(
+      <Providers>
+        <AskNotifications />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render children (image)', () => {
+    const tree = renderer.create(
+      <Providers>
+        <AskNotifications>
+          <GradientOverlayImage
+            source={'https://picsum.photos/640/640/?random'}
+          />
+        </AskNotifications>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a custom title', () => {
+    const tree = renderer.create(
+      <Providers>
+        <AskNotifications slideTitle={'Custom title text'} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a custom description', () => {
+    const tree = renderer.create(
+      <Providers>
+        <AskNotifications description={'Custom description text'} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render with a button', () => {
+    const tree = renderer.create(
+      <Providers>
+        <AskNotifications onPressButton={jest.fn()} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render the button disabled', () => {
+    const tree = renderer.create(
+      <Providers>
+        <AskNotifications onPressButton={jest.fn()} buttonDisabled />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a button with custom text', () => {
+    const tree = renderer.create(
+      <Providers>
+        <AskNotifications
+          onPressButton={jest.fn()}
+          buttonText={'Custom button text'}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should pass additional props to Slide component', () => {
+    const tree = renderer.create(
+      <Providers>
+        <AskNotifications
+          onPressSecondary={jest.fn()}
+          secondaryNavText={'Later'}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/AskNotifications/AskNotificationsConnected.js b/apolloschurchapp/src/ui/Onboarding/slides/AskNotifications/AskNotificationsConnected.js
new file mode 100644
index 0000000..43b3e03
--- /dev/null
+++ b/apolloschurchapp/src/ui/Onboarding/slides/AskNotifications/AskNotificationsConnected.js
@@ -0,0 +1,33 @@
+import React, { memo } from 'react';
+import { Query, ApolloConsumer } from 'react-apollo';
+
+import {
+  requestPushPermissions,
+  getNotificationsEnabled,
+} from 'apolloschurchapp/src/notifications';
+
+import AskNotifications from '.';
+
+// eslint-disable-next-line react/display-name
+const AskNotificationsConnected = memo((props) => (
+  <ApolloConsumer>
+    {(client) => (
+      <Query query={getNotificationsEnabled}>
+        {({ data: { notificationsEnabled = false } = {} }) => (
+          <AskNotifications
+            onPressButton={() => requestPushPermissions({ client })}
+            buttonDisabled={notificationsEnabled}
+            buttonText={
+              notificationsEnabled
+                ? 'Notifications Enabled!'
+                : 'Yes, enable notifications'
+            }
+            {...props}
+          />
+        )}
+      </Query>
+    )}
+  </ApolloConsumer>
+));
+
+export default AskNotificationsConnected;
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/AskNotifications/AskNotificationsConnected.tests.js b/apolloschurchapp/src/ui/Onboarding/slides/AskNotifications/AskNotificationsConnected.tests.js
new file mode 100644
index 0000000..c693656
--- /dev/null
+++ b/apolloschurchapp/src/ui/Onboarding/slides/AskNotifications/AskNotificationsConnected.tests.js
@@ -0,0 +1,53 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+import Providers from 'apolloschurchapp/src/Providers';
+import { getNotificationsEnabled } from 'apolloschurchapp/src/notifications';
+import { renderWithApolloData } from 'apolloschurchapp/src/utils/testUtils';
+
+import AskNotificationsConnected from './AskNotificationsConnected';
+
+describe('The Onboarding AskNotificationsConnected component', () => {
+  it('should render with a user not having granted push notifications permissions', async () => {
+    const mocks = [
+      {
+        request: {
+          query: getNotificationsEnabled,
+        },
+        result: {
+          data: { notificationsEnabled: false },
+        },
+      },
+    ];
+
+    const component = (
+      <Providers mocks={mocks} addTypename={false}>
+        <AskNotificationsConnected />
+      </Providers>
+    );
+
+    const tree = await renderWithApolloData(component);
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render with a user having granted push notifications permissions', async () => {
+    const component = (
+      <Providers
+        resolvers={{ Query: { notificationsEnabled: Promise.resolve(true) } }}
+        addTypename={false}
+      >
+        <AskNotificationsConnected />
+      </Providers>
+    );
+
+    const tree = await renderWithApolloData(component);
+    expect(tree).toMatchSnapshot();
+  });
+
+  it('should render with no data in the cache', () => {
+    const tree = renderer.create(
+      <Providers>
+        <AskNotificationsConnected />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/AskNotifications/index.js b/apolloschurchapp/src/ui/Onboarding/slides/AskNotifications/index.js
new file mode 100644
index 0000000..865e500
--- /dev/null
+++ b/apolloschurchapp/src/ui/Onboarding/slides/AskNotifications/index.js
@@ -0,0 +1,4 @@
+import AskNotifications from './AskNotifications';
+
+export AskNotificationsConnected from './AskNotificationsConnected';
+export default AskNotifications;
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/Features/Features.stories.js b/apolloschurchapp/src/ui/Onboarding/slides/Features/Features.stories.js
new file mode 100644
index 0000000..dfe3aa8
--- /dev/null
+++ b/apolloschurchapp/src/ui/Onboarding/slides/Features/Features.stories.js
@@ -0,0 +1,16 @@
+import React from 'react';
+import { storiesOf } from '@storybook/react-native';
+
+import Features from '.';
+
+storiesOf('Onboarding/slides/Features', module)
+  .add('default', () => <Features />)
+  .add('withImg', () => (
+    <Features imgSrc={{ uri: 'https://picsum.photos/1200/1200?random' }} />
+  ))
+  .add('firstName', () => <Features firstName={'firstName'} />)
+  .add('slideTitle', () => <Features slideTitle={'Custom title text'} />)
+  .add('description', () => (
+    <Features description={'Custom description text'} />
+  ))
+  .add('Slide props', () => <Features onPressPrimary={() => {}} />);
diff --git a/apolloschurchapp/src/ui/LandingScreen/LandingScreen.tests.js b/apolloschurchapp/src/ui/Onboarding/slides/Features/Features.tests.js
similarity index 59%
rename from apolloschurchapp/src/ui/LandingScreen/LandingScreen.tests.js
rename to apolloschurchapp/src/ui/Onboarding/slides/Features/Features.tests.js
index 13e64f1..8ff8bf6 100644
--- a/apolloschurchapp/src/ui/LandingScreen/LandingScreen.tests.js
+++ b/apolloschurchapp/src/ui/Onboarding/slides/Features/Features.tests.js
@@ -1,54 +1,48 @@
 import React from 'react';
 import renderer from 'react-test-renderer';
-import { GradientOverlayImage } from '@apollosproject/ui-kit';
 
 import Providers from 'apolloschurchapp/src/Providers';
 
-import LandingScreen from '.';
+import Features from '.';
 
-describe('The Onboarding LandingScreen component', () => {
+describe('The Onboarding SlideWrapper component', () => {
   it('should render', () => {
     const tree = renderer.create(
       <Providers>
-        <LandingScreen />
+        <Features />
       </Providers>
     );
     expect(tree).toMatchSnapshot();
   });
-  it('should render a custom title', () => {
+  it('should render a custom image', () => {
     const tree = renderer.create(
       <Providers>
-        <LandingScreen slideTitle={'Custom title text'} />
+        <Features imgSrc={{ uri: 'https://picsum.photos/1200/1200?random' }} />
       </Providers>
     );
     expect(tree).toMatchSnapshot();
   });
-  it('should render a custom description', () => {
+
+  it('should render a custom first name', () => {
     const tree = renderer.create(
       <Providers>
-        <LandingScreen description={'Custom description text'} />
+        <Features firstName={'firstName'} />
       </Providers>
     );
     expect(tree).toMatchSnapshot();
   });
-  it('should render with a custom text color', () => {
+  it('should render a custom title', () => {
     const tree = renderer.create(
       <Providers>
-        <LandingScreen textColor={'salmon'} />
+        <Features slideTitle={'Custom title text'} />
       </Providers>
     );
     expect(tree).toMatchSnapshot();
   });
-  it('should render with an ImageComponent', () => {
+  it('should render a custom description', () => {
     const tree = renderer.create(
       <Providers>
-        <LandingScreen
-          BackgroundComponent={
-            <GradientOverlayImage
-              source={'https://picsum.photos/375/812/?random'}
-            />
-          }
-        />
+        <Features description={'Custom description text'} />
       </Providers>
     );
     expect(tree).toMatchSnapshot();
@@ -56,7 +50,7 @@ describe('The Onboarding LandingScreen component', () => {
   it('should pass additional props to Slide', () => {
     const tree = renderer.create(
       <Providers>
-        <LandingScreen onPressPrimary={jest.fn()} />
+        <Features onPressPrimary={jest.fn()} />
       </Providers>
     );
     expect(tree).toMatchSnapshot();
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/Features/index.js b/apolloschurchapp/src/ui/Onboarding/slides/Features/index.js
new file mode 100644
index 0000000..1e8a529
--- /dev/null
+++ b/apolloschurchapp/src/ui/Onboarding/slides/Features/index.js
@@ -0,0 +1,62 @@
+import React, { memo } from 'react';
+import { Image, View } from 'react-native';
+import PropTypes from 'prop-types';
+
+import { styled, H2, H5, PaddedView } from '@apollosproject/ui-kit';
+
+import Slide from '../../Slide';
+
+const Title = styled(({ theme }) => ({
+  color: theme.colors.primary,
+  marginBottom: theme.sizing.baseUnit * 0.5,
+}))(H2);
+
+const StyledH5 = styled(({ theme }) => ({
+  color: theme.colors.text.secondary,
+}))(H5);
+
+const StyledImage = styled(({ theme }) => ({
+  flex: 3,
+  resizeMode: 'contain',
+  marginBottom: theme.sizing.baseUnit,
+}))(Image);
+
+const Content = styled({
+  flex: 1,
+  justifyContent: 'center',
+})(View);
+
+const TextContent = styled({
+  flex: 1,
+  justifyContent: 'center',
+})(PaddedView);
+
+// eslint-disable-next-line react/display-name
+const Features = memo(({ firstName, description, imgSrc, ...props }) => (
+  <Slide {...props}>
+    <Content>
+      {imgSrc ? <StyledImage source={imgSrc} /> : null}
+      <TextContent>
+        <Title>{`Hey ${firstName}!`}</Title>
+        <StyledH5>{description}</StyledH5>
+      </TextContent>
+    </Content>
+  </Slide>
+));
+
+Features.propTypes = {
+  /* The `Swiper` component used in `<Onboading>` looks for and hijacks the title prop of it's
+   * children. Thus we have to use more unique name.
+   */
+  firstName: PropTypes.string,
+  description: PropTypes.string,
+  imgSrc: PropTypes.string,
+};
+
+Features.defaultProps = {
+  firstName: 'friend',
+  description:
+    "We'd like to help personalize your mobile experience so we can help you with every step on your journey.",
+};
+
+export default Features;
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/index.js b/apolloschurchapp/src/ui/Onboarding/slides/index.js
new file mode 100644
index 0000000..16e69f0
--- /dev/null
+++ b/apolloschurchapp/src/ui/Onboarding/slides/index.js
@@ -0,0 +1,6 @@
+export AboutYou from './AboutYou';
+export AskName from './AskName';
+export AskNotifications, {
+  AskNotificationsConnected,
+} from './AskNotifications';
+export Features from './Features';
diff --git a/apolloschurchapp/src/ui/Scripture/ScriptureHTMLView.js b/apolloschurchapp/src/ui/Scripture/ScriptureHTMLView.js
new file mode 100644
index 0000000..507c90b
--- /dev/null
+++ b/apolloschurchapp/src/ui/Scripture/ScriptureHTMLView.js
@@ -0,0 +1,138 @@
+import React from 'react';
+import { withProps } from 'recompose';
+import { Platform } from 'react-native';
+
+import { Paragraph, H4 } from '@apollosproject/ui-kit';
+import HTMLView, {
+  defaultRenderer,
+  wrapTextChildren,
+} from '@apollosproject/ui-htmlview';
+
+import {
+  ScriptureText,
+  VerseNumber,
+  RedLetters,
+  PoeticPause,
+} from './typography';
+
+const renderer = (node, { children, ...other }) => {
+  // the defaultRenderer support several basic elements out of the box,
+  // this function only needs to handle the cases that are unique to scripture.
+  const className = (node && node.attribs && node.attribs.class) || '';
+
+  /* Verse numbers
+   * https://github.com/americanbible/api-bible-assets/blob/master/scss/eb-scripture-style/modules/_chapters-verses.scss#L33
+   */
+  if (className.includes('v')) {
+    /* TODO: a single space before and importantly a non-breaking space (`\u00A0`) after wraps the number to
+     * temporarily space verse numbers when they are not at the beginning of a sentence or
+     * paragraph. It affects all instences (albeit less noticably in some cases) so a more procise
+     * fix in the future is prefered.
+     */
+    return (
+      <VerseNumber>
+        {' '}
+        {children}
+        {`\u00A0`}
+      </VerseNumber>
+    );
+  }
+
+  /* Speaker identification and descriptive titles ("Hebrew subtitle")
+   * https://github.com/americanbible/api-bible-assets/blob/master/scss/eb-scripture-style/modules/_titles-headings.scss#L109-L126
+   */
+  if (className.includes('sp') || className.includes('d')) {
+    return <H4 padded>{children}</H4>;
+  }
+
+  /* Indented poetic line These are sometimes seen as a quote of the OT in the NT as well.
+   * This uses spaces as a less ideal fix because we are bound by the limits of rendering HTML.
+   * https://github.com/americanbible/api-bible-assets/blob/master/scss/eb-scripture-style/modules/_poetry.scss#L2
+   */
+  if (className.includes('q1')) {
+    return (
+      <ScriptureText>
+        {'     '}
+        {children}
+      </ScriptureText>
+    );
+  }
+
+  /* Double indented poetic lines. These are sometimes seen as a quote of the OT in the NT as well.
+   * This uses spaces as a less ideal fix because we are bound by the limits of rendering HTML.
+   * https://github.com/americanbible/api-bible-assets/blob/master/scss/eb-scripture-style/modules/_poetry.scss#L7
+   */
+  if (className.includes('q2')) {
+    return (
+      <ScriptureText>
+        {'          '}
+        {children}
+      </ScriptureText>
+    );
+  }
+
+  /* Triple indented poetic lines. These are sometimes seen as a quote of the OT in the NT as well.
+   * This uses spaces as a less ideal fix because we are bound by the limits of rendering HTML.
+   * https://github.com/americanbible/api-bible-assets/blob/master/scss/eb-scripture-style/modules/_poetry.scss#L8
+   */
+  if (className.includes('q3')) {
+    return (
+      <ScriptureText>
+        {'               '}
+        {children}
+      </ScriptureText>
+    );
+  }
+
+  /* Quadruple indented poetic lines. These are sometimes seen as a quote of the OT in the NT as well.
+   * This uses spaces as a less ideal fix because we are bound by the limits of rendering HTML.
+   * https://github.com/americanbible/api-bible-assets/blob/master/scss/eb-scripture-style/modules/_poetry.scss#L9
+   */
+  if (className.includes('q4')) {
+    return (
+      <ScriptureText>
+        {'                    '}
+        {children}
+      </ScriptureText>
+    );
+  }
+
+  if (className.includes('wj')) {
+    return <RedLetters>{children}</RedLetters>;
+  }
+
+  /* Poetic pause ("Selah"). Highly conditional rendering due to Android not supporting nested text
+   * alignment (https://github.com/facebook/react-native/issues/18790) and needing to keep it
+   * somewhat attractive. TODO: revisit conditional code when issue is resolved or if we refactor
+   * the parser
+   *
+   * https://github.com/americanbible/api-bible-assets/blob/master/scss/eb-scripture-style/modules/_poetry.scss#L22
+   */
+  if (className.includes('qs')) {
+    return (
+      <PoeticPause>
+        {Platform.OS === 'ios' ? `\n` : null}
+        {children}
+        {Platform.OS === 'ios' ? `\n` : `\n\n`}
+      </PoeticPause>
+    );
+  }
+
+  if (node.name === 'p') {
+    return (
+      <Paragraph>
+        <ScriptureText>
+          {wrapTextChildren(children, ScriptureText)}
+        </ScriptureText>
+      </Paragraph>
+    );
+  }
+
+  return defaultRenderer(node, { children, ...other });
+};
+
+const ScriptureHTMLView = withProps({
+  renderer,
+})(HTMLView);
+
+export default ScriptureHTMLView;
diff --git a/apolloschurchapp/src/ui/Scripture/ScriptureItem.js b/apolloschurchapp/src/ui/Scripture/ScriptureItem.js
new file mode 100644
index 0000000..b78993f
--- /dev/null
+++ b/apolloschurchapp/src/ui/Scripture/ScriptureItem.js
@@ -0,0 +1,34 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import { View } from 'react-native';
+
+import { Placeholder, H4, H6 } from '@apollosproject/ui-kit';
+
+import { LegalText } from './typography';
+import ScriptureHTMLView from './ScriptureHTMLView';
+
+const ScriptureItem = ({ reference, html, copyright, isLoading }) => (
+  <Placeholder.Paragraph
+    lineNumber={5}
+    onReady={!isLoading}
+    lastLineWidth="60%"
+    firstLineWidth="40%"
+  >
+    <View>
+      <H4>
+        <H4>{reference}</H4> <H6>WEB</H6>
+      </H4>
+      <ScriptureHTMLView>{html}</ScriptureHTMLView>
+      <LegalText>{copyright === 'PUBLIC DOMAIN' ? '' : copyright}</LegalText>
+    </View>
+  </Placeholder.Paragraph>
+);
+
+ScriptureItem.propTypes = {
+  reference: PropTypes.string,
+  html: PropTypes.string,
+  copyright: PropTypes.string,
+  isLoading: PropTypes.bool,
+};
+
+export default ScriptureItem;
diff --git a/apolloschurchapp/src/ui/Scripture/ScriptureItem.stories.js b/apolloschurchapp/src/ui/Scripture/ScriptureItem.stories.js
new file mode 100644
index 0000000..c51b7ed
--- /dev/null
+++ b/apolloschurchapp/src/ui/Scripture/ScriptureItem.stories.js
@@ -0,0 +1,210 @@
+import React from 'react';
+import { ScrollView } from 'react-native';
+import { storiesOf } from '@storybook/react-native';
+import { PaddedView } from '@apollosproject/ui-kit';
+
+import ScriptureItem from './ScriptureItem';
+
+const genesis1 = {
+  scripture: {
+    reference: 'Genesis 1:1-5',
+    html:
+      '<p class="p"><span data-number="1" class="v">1</span>In the beginning, God created the heavens and the earth. <span data-number="2" class="v">2</span>The earth was formless and empty. Darkness was on the surface of the deep and God’s Spirit was hovering over the surface of the waters.</p><p class="p"><span data-number="3" class="v">3</span>God said, “Let there be light,” and there was light. <span data-number="4" class="v">4</span>God saw the light, and saw that it was good. God divided the light from the darkness. <span data-number="5" class="v">5</span>God called the light “day”, and the darkness he called “night”. There was evening and there was morning, the first day.</p>',
+    isLoading: false,
+    copyright: 'PUBLIC DOMAIN',
+  },
+};
+
+const john1 = {
+  scripture: {
+    reference: 'John 1:1',
+    html:
+      '<p class="p"><span data-number="1" class="v">1</span>In the beginning was the Word, and the Word was with God, and the Word was God. </p>',
+    isLoading: false,
+    copyright:
+      'PUBLIC DOMAIN except in the United Kingdom, where a Crown Copyright applies to printing the KJV. See http://www.cambridge.org/about-us/who-we-are/queens-printers-patent',
+  },
+};
+
+const psalm23 = {
+  scripture: {
+    reference: 'Psalm 23',
+    html:
+      '<p class="d">A Psalm by David.</p><p class="q1"><span data-number="1" class="v">1</span>Yahweh is my shepherd:</p><p class="q2">I shall lack nothing.</p><p class="q1"><span data-number="2" class="v">2</span>He makes me lie down in green pastures.</p><p class="q2">He leads me beside still waters.</p><p class="q1"><span data-number="3" class="v">3</span>He restores my soul.</p><p class="q2">He guides me in the paths of righteousness for his name’s sake.</p><p class="q1"><span data-number="4" class="v">4</span>Even though I walk through the valley of the shadow of death,</p><p class="q2">I will fear no evil, for you are with me.</p><p class="q1">Your rod and your staff,</p><p class="q2">they comfort me.</p><p class="q1"><span data-number="5" class="v">5</span>You prepare a table before me</p><p class="q2">in the presence of my enemies.</p><p class="q1">You anoint my head with oil.</p><p class="q2">My cup runs over.</p><p class="q1"><span data-number="6" class="v">6</span>Surely goodness and loving kindness shall follow me all the days of my life,</p><p class="q2">and I will dwell in Yahweh’s house forever.</p>',
+    isLoading: false,
+  },
+};
+
+const psalm32 = {
+  scripture: {
+    reference: 'Psalm 32',
+    html:
+      '<p class="d">By David. A contemplative psalm.</p><p class="q1"><span data-number="1" class="v">1</span>Blessed is he whose disobedience is forgiven,</p><p class="q2">whose sin is covered.</p><p class="q1"><span data-number="2" class="v">2</span>Blessed is the man to whom Yahweh doesn’t impute iniquity,</p><p class="q2">in whose spirit there is no deceit.</p><p class="q1"><span data-number="3" class="v">3</span>When I kept silence, my bones wasted away through my groaning all day long.</p><p class="q1"><span data-number="4" class="v">4</span>For day and night your hand was heavy on me.</p><p class="q2">My strength was sapped in the heat of summer. <span class="qs">Selah.</span></p><p class="q1"><span data-number="5" class="v">5</span>I acknowledged my sin to you.</p><p class="q2">I didn’t hide my iniquity.</p><p class="q1">I said, I will confess my transgressions to Yahweh,</p><p class="q2">and you forgave the iniquity of my sin. <span class="qs">Selah.</span></p><p class="q1"><span data-number="6" class="v">6</span>For this, let everyone who is godly pray to you in a time when you may be found.</p><p class="q2">Surely when the great waters overflow, they shall not reach to him.</p><p class="q1"><span data-number="7" class="v">7</span>You are my hiding place.</p><p class="q2">You will preserve me from trouble.</p><p class="q2">You will surround me with songs of deliverance. <span class="qs">Selah.</span></p><p class="q1"><span data-number="8" class="v">8</span>I will instruct you and teach you in the way which you shall go.</p><p class="q2">I will counsel you with my eye on you.</p><p class="q1"><span data-number="9" class="v">9</span>Don’t be like the horse, or like the mule, which have no understanding,</p><p class="q2">who are controlled by bit and bridle, or else they will not come near to you.</p><p class="q1"><span data-number="10" class="v">10</span>Many sorrows come to the wicked,</p><p class="q2">but loving kindness shall surround him who trusts in Yahweh.</p><p class="q1"><span data-number="11" class="v">11</span>Be glad in Yahweh, and rejoice, you righteous!</p><p class="q2">Shout for joy, all you who are upright in heart!</p>',
+  },
+};
+
+const psalm119 = {
+  scripture: {
+    reference: 'Psalm 119:129 - 144',
+    html:
+      '<p class="d">PEY</p><p class="q1"><span data-number="129" class="v">129</span>Your testimonies are wonderful,</p><p class="q2">therefore my soul keeps them.</p><p class="q1"><span data-number="130" class="v">130</span>The entrance of your words gives light.</p><p class="q2">It gives understanding to the simple.</p><p class="q1"><span data-number="131" class="v">131</span>I opened my mouth wide and panted,</p><p class="q2">for I longed for your commandments.</p><p class="q1"><span data-number="132" class="v">132</span>Turn to me, and have mercy on me,</p><p class="q2">as you always do to those who love your name.</p><p class="q1"><span data-number="133" class="v">133</span>Establish my footsteps in your word.</p><p class="q2">Don’t let any iniquity have dominion over me.</p><p class="q1"><span data-number="134" class="v">134</span>Redeem me from the oppression of man,</p><p class="q2">so I will observe your precepts.</p><p class="q1"><span data-number="135" class="v">135</span>Make your face shine on your servant.</p><p class="q2">Teach me your statutes.</p><p class="q1"><span data-number="136" class="v">136</span>Streams of tears run down my eyes,</p><p class="q2">because they don’t observe your law.</p><p class="d">TZADI</p><p class="q1"><span data-number="137" class="v">137</span>You are righteous, Yahweh.</p><p class="q2">Your judgments are upright.</p><p class="q1"><span data-number="138" class="v">138</span>You have commanded your statutes in righteousness.</p><p class="q2">They are fully trustworthy.</p><p class="q1"><span data-number="139" class="v">139</span>My zeal wears me out,</p><p class="q2">because my enemies ignore your words.</p><p class="q1"><span data-number="140" class="v">140</span>Your promises have been thoroughly tested,</p><p class="q2">and your servant loves them.</p><p class="q1"><span data-number="141" class="v">141</span>I am small and despised.</p><p class="q2">I don’t forget your precepts.</p><p class="q1"><span data-number="142" class="v">142</span>Your righteousness is an everlasting righteousness.</p><p class="q2">Your law is truth.</p><p class="q1"><span data-number="143" class="v">143</span>Trouble and anguish have taken hold of me.</p><p class="q2">Your commandments are my delight.</p><p class="q1"><span data-number="144" class="v">144</span>Your testimonies are righteous forever.</p><p class="q2">Give me understanding, that I may live.</p>',
+  },
+};
+
+const songOfSolomon1 = {
+  scripture: {
+    reference: 'Song of Solomon 1:1-4',
+    html:
+      '<p class="p"><span data-number="1" class="v">1</span>The Song of songs, which is Solomon’s.</p><p class="sp">Beloved</p><p class="q1"><span data-number="2" class="v">2</span>Let him kiss me with the kisses of his mouth;</p><p class="q2">for your love is better than wine.</p><p class="q1"><span data-number="3" class="v">3</span>Your oils have a pleasing fragrance.</p><p class="q2">Your name is oil poured out,</p><p class="q2">therefore the virgins love you.</p><p class="q1"><span data-number="4" class="v">4</span>Take me away with you.</p><p class="q2">Let’s hurry.</p><p class="q2">The king has brought me into his rooms.</p><p class="sp">Friends</p><p class="q1">We will be glad and rejoice in you.</p><p class="q2">We will praise your love more than wine!</p><p class="sp">Beloved</p><p class="q1">They are right to love you.</p>',
+    isLoading: false,
+  },
+};
+
+const mark1 = {
+  scripture: {
+    reference: 'Mark 1: 1-4',
+    html:
+      '<p class="p"><span data-number="1" class="v">1</span>The beginning of the Good News of Jesus Christ, the Son of God.</p><p class="p"><span data-number="2" class="v">2</span>As it is written in the prophets,</p><p class="q1">“Behold, I send my messenger before your face,</p><p class="q2">who will prepare your way before you:</p><p class="q1"><span data-number="3" class="v">3</span>the voice of one crying in the wilderness,</p><p class="q2">‘Make ready the way of the Lord!</p><p class="q2">Make his paths straight!’”</p><p class="p"><span data-number="4" class="v">4</span>John came baptizing in the wilderness and preaching the baptism of repentance for forgiveness of sins.',
+  },
+};
+
+const john3 = {
+  scripture: {
+    reference: 'John 3:16-17',
+    html:
+      '<p class="p"><span data-number="16" class="v">16</span><span class="wj">For God so loved the world, that he gave his one and only Son, that whoever believes in him should not perish, but have eternal life. </span><span data-number="17" class="v">17</span><span class="wj">For God didn’t send his Son into the world to judge the world, but that the world should be saved through him. </span></p>',
+    isLoading: false,
+  },
+};
+
+const revelation22 = {
+  scripture: {
+    reference: 'Revelation 22:20-21',
+    html:
+      '<p class="p"><span data-number="20" class="v">20</span>He who testifies these things says, <span class="wj">“Yes, I come quickly.” </span></p><p class="p">Amen! Yes, come, Lord Jesus.</p><p class="p"><span data-number="21" class="v">21</span>The grace of the Lord Jesus Christ be with all the saints. Amen.</p>',
+    isLoading: false,
+  },
+};
+
+const revelation22Loading = {
+  scripture: {
+    reference: 'Revelation 22:20-21',
+    html:
+      '<p class="p"><span data-number="20" class="v">20</span>He who testifies these things says, <span class="wj">“Yes, I come quickly.” </span></p><p class="p">Amen! Yes, come, Lord Jesus.</p><p class="p"><span data-number="21" class="v">21</span>The grace of the Lord Jesus Christ be with all the saints. Amen.</p>',
+    isLoading: true,
+  },
+};
+
+storiesOf('Scripture', module)
+  .add('Genesis 1:1-5', () => (
+    <ScrollView>
+      <PaddedView>
+        <ScriptureItem
+          reference={genesis1.scripture.reference}
+          html={genesis1.scripture.html}
+          isLoading={genesis1.scripture.isLoading}
+          copyright={genesis1.scripture.copyright}
+        />
+      </PaddedView>
+    </ScrollView>
+  ))
+  .add('John 1:1', () => (
+    <ScrollView>
+      <PaddedView>
+        <ScriptureItem
+          reference={john1.scripture.reference}
+          html={john1.scripture.html}
+          isLoading={john1.scripture.isLoading}
+          copyright={john1.scripture.copyright}
+        />
+      </PaddedView>
+    </ScrollView>
+  ))
+  .add('Psalm 23', () => (
+    <ScrollView>
+      <PaddedView>
+        <ScriptureItem
+          reference={psalm23.scripture.reference}
+          html={psalm23.scripture.html}
+          isLoading={psalm23.scripture.isLoading}
+        />
+      </PaddedView>
+    </ScrollView>
+  ))
+  .add('Psalm 32', () => (
+    <ScrollView>
+      <PaddedView>
+        <ScriptureItem
+          reference={psalm32.scripture.reference}
+          html={psalm32.scripture.html}
+          isLoading={psalm32.scripture.isLoading}
+        />
+      </PaddedView>
+    </ScrollView>
+  ))
+  .add('Psalm 119:129 - 144', () => (
+    <ScrollView>
+      <PaddedView>
+        <ScriptureItem
+          reference={psalm119.scripture.reference}
+          html={psalm119.scripture.html}
+          isLoading={psalm119.scripture.isLoading}
+        />
+      </PaddedView>
+    </ScrollView>
+  ))
+  .add('Song of Solomon 1:1-4', () => (
+    <ScrollView>
+      <PaddedView>
+        <ScriptureItem
+          reference={songOfSolomon1.scripture.reference}
+          html={songOfSolomon1.scripture.html}
+          isLoading={songOfSolomon1.scripture.isLoading}
+        />
+      </PaddedView>
+    </ScrollView>
+  ))
+  .add('Mark 1: 1-4', () => (
+    <ScrollView>
+      <PaddedView>
+        <ScriptureItem
+          reference={mark1.scripture.reference}
+          html={mark1.scripture.html}
+          isLoading={mark1.scripture.isLoading}
+        />
+      </PaddedView>
+    </ScrollView>
+  ))
+  .add('John 3:16-17', () => (
+    <ScrollView>
+      <PaddedView>
+        <ScriptureItem
+          reference={john3.scripture.reference}
+          html={john3.scripture.html}
+          isLoading={john3.scripture.isLoading}
+        />
+      </PaddedView>
+    </ScrollView>
+  ))
+  .add('Revelation 22:20-21', () => (
+    <ScrollView>
+      <PaddedView>
+        <ScriptureItem
+          reference={revelation22.scripture.reference}
+          html={revelation22.scripture.html}
+          isLoading={revelation22.scripture.isLoading}
+        />
+      </PaddedView>
+    </ScrollView>
+  ))
+  .add('Loading State', () => (
+    <ScrollView>
+      <PaddedView>
+        <ScriptureItem
+          reference={revelation22Loading.scripture.reference}
+          html={revelation22Loading.scripture.html}
+          isLoading={revelation22Loading.scripture.isLoading}
+        />
+      </PaddedView>
+    </ScrollView>
+  ));
diff --git a/apolloschurchapp/src/ui/Scripture/ScriptureItem.tests.js b/apolloschurchapp/src/ui/Scripture/ScriptureItem.tests.js
new file mode 100644
index 0000000..b43256b
--- /dev/null
+++ b/apolloschurchapp/src/ui/Scripture/ScriptureItem.tests.js
@@ -0,0 +1,198 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import ScriptureItem from './ScriptureItem';
+
+const genesis1 = {
+  scripture: {
+    reference: 'Genesis 1:1-5',
+    html:
+      '<p class="p"><span data-number="1" class="v">1</span>In the beginning, God created the heavens and the earth. <span data-number="2" class="v">2</span>The earth was formless and empty. Darkness was on the surface of the deep and God’s Spirit was hovering over the surface of the waters.</p><p class="p"><span data-number="3" class="v">3</span>God said, “Let there be light,” and there was light. <span data-number="4" class="v">4</span>God saw the light, and saw that it was good. God divided the light from the darkness. <span data-number="5" class="v">5</span>God called the light “day”, and the darkness he called “night”. There was evening and there was morning, the first day.</p>',
+    copyright: 'PUBLIC DOMAIN',
+  },
+};
+
+const psalm23 = {
+  scripture: {
+    reference: 'Psalm 23',
+    html:
+      '<p class="d">A Psalm by David.</p><p class="q1"><span data-number="1" class="v">1</span>Yahweh is my shepherd:</p><p class="q2">I shall lack nothing.</p><p class="q1"><span data-number="2" class="v">2</span>He makes me lie down in green pastures.</p><p class="q2">He leads me beside still waters.</p><p class="q1"><span data-number="3" class="v">3</span>He restores my soul.</p><p class="q2">He guides me in the paths of righteousness for his name’s sake.</p><p class="q1"><span data-number="4" class="v">4</span>Even though I walk through the valley of the shadow of death,</p><p class="q2">I will fear no evil, for you are with me.</p><p class="q1">Your rod and your staff,</p><p class="q2">they comfort me.</p><p class="q1"><span data-number="5" class="v">5</span>You prepare a table before me</p><p class="q2">in the presence of my enemies.</p><p class="q1">You anoint my head with oil.</p><p class="q2">My cup runs over.</p><p class="q1"><span data-number="6" class="v">6</span>Surely goodness and loving kindness shall follow me all the days of my life,</p><p class="q2">and I will dwell in Yahweh’s house forever.</p>',
+
+    copyright:
+      'PUBLIC DOMAIN except in the United Kingdom, where a Crown Copyright applies to printing the KJV. See http://www.cambridge.org/about-us/who-we-are/queens-printers-patent',
+  },
+};
+
+const psalm32 = {
+  scripture: {
+    reference: 'Psalm 32',
+    html:
+      '<p class="d">By David. A contemplative psalm.</p><p class="q1"><span data-number="1" class="v">1</span>Blessed is he whose disobedience is forgiven,</p><p class="q2">whose sin is covered.</p><p class="q1"><span data-number="2" class="v">2</span>Blessed is the man to whom Yahweh doesn’t impute iniquity,</p><p class="q2">in whose spirit there is no deceit.</p><p class="q1"><span data-number="3" class="v">3</span>When I kept silence, my bones wasted away through my groaning all day long.</p><p class="q1"><span data-number="4" class="v">4</span>For day and night your hand was heavy on me.</p><p class="q2">My strength was sapped in the heat of summer. <span class="qs">Selah.</span></p><p class="q1"><span data-number="5" class="v">5</span>I acknowledged my sin to you.</p><p class="q2">I didn’t hide my iniquity.</p><p class="q1">I said, I will confess my transgressions to Yahweh,</p><p class="q2">and you forgave the iniquity of my sin. <span class="qs">Selah.</span></p><p class="q1"><span data-number="6" class="v">6</span>For this, let everyone who is godly pray to you in a time when you may be found.</p><p class="q2">Surely when the great waters overflow, they shall not reach to him.</p><p class="q1"><span data-number="7" class="v">7</span>You are my hiding place.</p><p class="q2">You will preserve me from trouble.</p><p class="q2">You will surround me with songs of deliverance. <span class="qs">Selah.</span></p><p class="q1"><span data-number="8" class="v">8</span>I will instruct you and teach you in the way which you shall go.</p><p class="q2">I will counsel you with my eye on you.</p><p class="q1"><span data-number="9" class="v">9</span>Don’t be like the horse, or like the mule, which have no understanding,</p><p class="q2">who are controlled by bit and bridle, or else they will not come near to you.</p><p class="q1"><span data-number="10" class="v">10</span>Many sorrows come to the wicked,</p><p class="q2">but loving kindness shall surround him who trusts in Yahweh.</p><p class="q1"><span data-number="11" class="v">11</span>Be glad in Yahweh, and rejoice, you righteous!</p><p class="q2">Shout for joy, all you who are upright in heart!</p>',
+  },
+};
+
+const psalm119 = {
+  scripture: {
+    reference: 'Psalm 119:129 - 144',
+    html:
+      '<p class="d">PEY</p><p class="q1"><span data-number="129" class="v">129</span>Your testimonies are wonderful,</p><p class="q2">therefore my soul keeps them.</p><p class="q1"><span data-number="130" class="v">130</span>The entrance of your words gives light.</p><p class="q2">It gives understanding to the simple.</p><p class="q1"><span data-number="131" class="v">131</span>I opened my mouth wide and panted,</p><p class="q2">for I longed for your commandments.</p><p class="q1"><span data-number="132" class="v">132</span>Turn to me, and have mercy on me,</p><p class="q2">as you always do to those who love your name.</p><p class="q1"><span data-number="133" class="v">133</span>Establish my footsteps in your word.</p><p class="q2">Don’t let any iniquity have dominion over me.</p><p class="q1"><span data-number="134" class="v">134</span>Redeem me from the oppression of man,</p><p class="q2">so I will observe your precepts.</p><p class="q1"><span data-number="135" class="v">135</span>Make your face shine on your servant.</p><p class="q2">Teach me your statutes.</p><p class="q1"><span data-number="136" class="v">136</span>Streams of tears run down my eyes,</p><p class="q2">because they don’t observe your law.</p><p class="d">TZADI</p><p class="q1"><span data-number="137" class="v">137</span>You are righteous, Yahweh.</p><p class="q2">Your judgments are upright.</p><p class="q1"><span data-number="138" class="v">138</span>You have commanded your statutes in righteousness.</p><p class="q2">They are fully trustworthy.</p><p class="q1"><span data-number="139" class="v">139</span>My zeal wears me out,</p><p class="q2">because my enemies ignore your words.</p><p class="q1"><span data-number="140" class="v">140</span>Your promises have been thoroughly tested,</p><p class="q2">and your servant loves them.</p><p class="q1"><span data-number="141" class="v">141</span>I am small and despised.</p><p class="q2">I don’t forget your precepts.</p><p class="q1"><span data-number="142" class="v">142</span>Your righteousness is an everlasting righteousness.</p><p class="q2">Your law is truth.</p><p class="q1"><span data-number="143" class="v">143</span>Trouble and anguish have taken hold of me.</p><p class="q2">Your commandments are my delight.</p><p class="q1"><span data-number="144" class="v">144</span>Your testimonies are righteous forever.</p><p class="q2">Give me understanding, that I may live.</p>',
+  },
+};
+
+const songOfSolomon1 = {
+  scripture: {
+    reference: 'Song of Solomon 1:1-4',
+    html:
+      '<p class="p"><span data-number="1" class="v">1</span>The Song of songs, which is Solomon’s.</p><p class="sp">Beloved</p><p class="q1"><span data-number="2" class="v">2</span>Let him kiss me with the kisses of his mouth;</p><p class="q2">for your love is better than wine.</p><p class="q1"><span data-number="3" class="v">3</span>Your oils have a pleasing fragrance.</p><p class="q2">Your name is oil poured out,</p><p class="q2">therefore the virgins love you.</p><p class="q1"><span data-number="4" class="v">4</span>Take me away with you.</p><p class="q2">Let’s hurry.</p><p class="q2">The king has brought me into his rooms.</p><p class="sp">Friends</p><p class="q1">We will be glad and rejoice in you.</p><p class="q2">We will praise your love more than wine!</p><p class="sp">Beloved</p><p class="q1">They are right to love you.</p>',
+    isLoading: false,
+  },
+};
+
+const mark1 = {
+  scripture: {
+    reference: 'Mark 1:1-4',
+    html:
+      '<p class="p"><span data-number="1" class="v">1</span>The beginning of the Good News of Jesus Christ, the Son of God.</p><p class="p"><span data-number="2" class="v">2</span>As it is written in the prophets,</p><p class="q1">“Behold, I send my messenger before your face,</p><p class="q2">who will prepare your way before you:</p><p class="q1"><span data-number="3" class="v">3</span>the voice of one crying in the wilderness,</p><p class="q2">‘Make ready the way of the Lord!</p><p class="q2">Make his paths straight!’”</p><p class="p"><span data-number="4" class="v">4</span>John came baptizing in the wilderness and preaching the baptism of repentance for forgiveness of sins.',
+  },
+};
+
+const john3 = {
+  scripture: {
+    reference: 'John 3:16-17',
+    html:
+      '<p class="p"><span data-number="16" class="v">16</span><span class="wj">For God so loved the world, that he gave his one and only Son, that whoever believes in him should not perish, but have eternal life. </span><span data-number="17" class="v">17</span><span class="wj">For God didn’t send his Son into the world to judge the world, but that the world should be saved through him. </span></p>',
+    isLoading: false,
+  },
+};
+
+const revelation22 = {
+  scripture: {
+    reference: 'Revelation 22:20-21',
+    html:
+      '<p class="p"><span data-number="20" class="v">20</span>He who testifies these things says, <span class="wj">“Yes, I come quickly.” </span></p><p class="p">Amen! Yes, come, Lord Jesus.</p><p class="p"><span data-number="21" class="v">21</span>The grace of the Lord Jesus Christ be with all the saints. Amen.</p>',
+  },
+};
+
+const john3Loading = {
+  scripture: {
+    reference: 'John 3:16-17',
+    html:
+      '<p class="p"><span data-number="16" class="v">16</span><span class="wj">For God so loved the world, that he gave his one and only Son, that whoever believes in him should not perish, but have eternal life. </span><span data-number="17" class="v">17</span><span class="wj">For God didn’t send his Son into the world to judge the world, but that the world should be saved through him. </span></p>',
+    isLoading: true,
+  },
+};
+
+describe('the ScriptureItem component', () => {
+  it('renders Genesis 1:1-5', () => {
+    const tree = renderer.create(
+      <Providers>
+        <ScriptureItem
+          reference={genesis1.scripture.reference}
+          html={genesis1.scripture.html}
+          copyright={genesis1.scripture.copyright}
+          isLoading={false}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('renders Psalm 23', () => {
+    const tree = renderer.create(
+      <Providers>
+        <ScriptureItem
+          reference={psalm23.scripture.reference}
+          html={psalm23.scripture.html}
+          copyright={psalm23.scripture.copyright}
+          isLoading={false}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('renders Psalm 32', () => {
+    const tree = renderer.create(
+      <Providers>
+        <ScriptureItem
+          reference={psalm32.scripture.reference}
+          html={psalm32.scripture.html}
+          isLoading={false}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('renders Psalm 119:129 - 144', () => {
+    const tree = renderer.create(
+      <Providers>
+        <ScriptureItem
+          reference={psalm119.scripture.reference}
+          html={psalm119.scripture.html}
+          isLoading={false}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('renders Song of Solomon 1:1-4', () => {
+    const tree = renderer.create(
+      <Providers>
+        <ScriptureItem
+          reference={songOfSolomon1.scripture.reference}
+          html={songOfSolomon1.scripture.html}
+          isLoading={songOfSolomon1.scripture.isLoading}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('renders Mark 1:1-4', () => {
+    const tree = renderer.create(
+      <Providers>
+        <ScriptureItem
+          reference={mark1.scripture.reference}
+          html={mark1.scripture.html}
+          isLoading={false}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('renders John 3:16-17', () => {
+    const tree = renderer.create(
+      <Providers>
+        <ScriptureItem
+          reference={john3.scripture.reference}
+          html={john3.scripture.html}
+          isLoading={john3.scripture.isLoading}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('renders Revelation 22:20-21', () => {
+    const tree = renderer.create(
+      <Providers>
+        <ScriptureItem
+          reference={revelation22.scripture.reference}
+          html={revelation22.scripture.html}
+          isLoading={false}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('renders a loading state', () => {
+    const tree = renderer.create(
+      <Providers>
+        <ScriptureItem
+          reference={john3Loading.scripture.reference}
+          html={john3Loading.scripture.html}
+          isLoading={john3Loading.scripture.isLoading}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/Scripture/ScriptureList.js b/apolloschurchapp/src/ui/Scripture/ScriptureList.js
new file mode 100644
index 0000000..f6d3015
--- /dev/null
+++ b/apolloschurchapp/src/ui/Scripture/ScriptureList.js
@@ -0,0 +1,49 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import { H4, styled, ButtonLink } from '@apollosproject/ui-kit';
+
+const StyledH4 = styled(({ theme }) => ({
+  color: theme.colors.primary,
+  textAlign: 'center',
+  textDecorationLine: 'underline',
+  paddingBottom: theme.sizing.baseUnit * 1.5,
+}))(H4);
+
+const ScriptureList = ({
+  references,
+  onPress,
+  tabDestination,
+  commas = true,
+}) => {
+  if (!references && commas) return '';
+  if (!references) return [];
+
+  let combo = references.map((reference) => `${reference}`);
+
+  if (commas) {
+    combo = combo.join(', ');
+  }
+
+  const handleOnPress = () => onPress(tabDestination);
+
+  return (
+    <StyledH4>
+      <ButtonLink padded onPress={handleOnPress}>
+        {combo}
+      </ButtonLink>
+    </StyledH4>
+  );
+};
+
+ScriptureList.propTypes = {
+  /** Toggles comma formating */
+  commas: PropTypes.bool,
+  /** The ButtonLink handler */
+  onPress: PropTypes.func,
+  /** An array of human readable references (i.e. '1 Corinthians 15:57') */
+  references: PropTypes.arrayOf(PropTypes.string),
+  /** The tab to go to onPress */
+  tabDestination: PropTypes.string,
+};
+
+export default ScriptureList;
diff --git a/apolloschurchapp/src/ui/Scripture/ScriptureList.tests.js b/apolloschurchapp/src/ui/Scripture/ScriptureList.tests.js
new file mode 100644
index 0000000..d95c212
--- /dev/null
+++ b/apolloschurchapp/src/ui/Scripture/ScriptureList.tests.js
@@ -0,0 +1,19 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import ScriptureList from './ScriptureList';
+
+const scriptureReferences = ['1 Corinthians 15:57', 'Exodus 17:8-15'];
+
+describe('the ScriptureList component', () => {
+  it('renders a scripture List', () => {
+    const tree = renderer.create(
+      <Providers>
+        <ScriptureList onPress={jest.fn()} references={scriptureReferences} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/Scripture/index.js b/apolloschurchapp/src/ui/Scripture/index.js
new file mode 100644
index 0000000..6458f99
--- /dev/null
+++ b/apolloschurchapp/src/ui/Scripture/index.js
@@ -0,0 +1,2 @@
+export { default } from './ScriptureItem';
+export ScriptureList from './ScriptureList';
diff --git a/apolloschurchapp/src/ui/Scripture/typography/ScriptureText/ScriptureText.stories.js b/apolloschurchapp/src/ui/Scripture/typography/ScriptureText/ScriptureText.stories.js
new file mode 100644
index 0000000..33ea0d2
--- /dev/null
+++ b/apolloschurchapp/src/ui/Scripture/typography/ScriptureText/ScriptureText.stories.js
@@ -0,0 +1,44 @@
+import React from 'react';
+import { View } from 'react-native';
+import { storiesOf } from '@storybook/react-native';
+
+import ScriptureText from '.';
+
+storiesOf('Scripture/typography/ScriptureText', module)
+  .add('Regular', () => (
+    <ScriptureText>
+      {`"God's commands are designed to guide you to life's very best. You will not obey Him, if you do not believe Him and trust Him. You cannot believe Him if you do not love Him. You cannot love Him unless you know Him." ― Henry Blackaby`}
+    </ScriptureText>
+  ))
+  .add('Bold', () => (
+    <ScriptureText bold>
+      {`"God's commands are designed to guide you to life's very best. You will not obey Him, if you do not believe Him and trust Him. You cannot believe Him if you do not love Him. You cannot love Him unless you know Him." ― Henry Blackaby`}
+    </ScriptureText>
+  ))
+  .add('Italic', () => (
+    <ScriptureText italic>
+      {`"God's commands are designed to guide you to life's very best. You will not obey Him, if you do not believe Him and trust Him. You cannot believe Him if you do not love Him. You cannot love Him unless you know Him." ― Henry Blackaby`}
+    </ScriptureText>
+  ))
+  .add('Bold Italic', () => (
+    <ScriptureText bold italic>
+      {`"God's commands are designed to guide you to life's very best. You will not obey Him, if you do not believe Him and trust Him. You cannot believe Him if you do not love Him. You cannot love Him unless you know Him." ― Henry Blackaby`}
+    </ScriptureText>
+  ))
+  .add('isLoading', () => (
+    <ScriptureText isLoading>
+      {`"God's commands are designed to guide you to life's very best. You will not obey Him, if you do not believe Him and trust Him. You cannot believe Him if you do not love Him. You cannot love Him unless you know Him." ― Henry Blackaby`}
+    </ScriptureText>
+  ))
+  .add('Border Box – platform testing', () => {
+    const border = { borderWidth: 1, borderStyle: 'solid' };
+
+    return (
+      <View>
+        <ScriptureText style={border}>Body Text</ScriptureText>
+        <ScriptureText style={border}>
+          {`"God's commands are designed to guide you to life's very best. You will not obey Him, if you do not believe Him and trust Him. You cannot believe Him if you do not love Him. You cannot love Him unless you know Him." ― Henry Blackaby`}
+        </ScriptureText>
+      </View>
+    );
+  });
diff --git a/apolloschurchapp/src/ui/Scripture/typography/ScriptureText/ScriptureText.tests.js b/apolloschurchapp/src/ui/Scripture/typography/ScriptureText/ScriptureText.tests.js
new file mode 100644
index 0000000..f1c7012
--- /dev/null
+++ b/apolloschurchapp/src/ui/Scripture/typography/ScriptureText/ScriptureText.tests.js
@@ -0,0 +1,72 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import ScriptureText from '.';
+
+describe('the ScriptureText component', () => {
+  it('should render correctly', () => {
+    const tree = renderer.create(
+      <Providers>
+        <ScriptureText>Default ScriptureText text</ScriptureText>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render as bold', () => {
+    const tree = renderer.create(
+      <Providers>
+        <ScriptureText bold>Bold ScriptureText text</ScriptureText>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render as italic', () => {
+    const tree = renderer.create(
+      <Providers>
+        <ScriptureText italic>Italic ScriptureText text</ScriptureText>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render as bold italic', () => {
+    const tree = renderer.create(
+      <Providers>
+        <ScriptureText bold italic>
+          Bold italic ScriptureText text
+        </ScriptureText>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should accept and render passed in styles', () => {
+    const salmon = { color: 'salmon' };
+    const tree = renderer.create(
+      <Providers>
+        <ScriptureText style={salmon}>Salmon text</ScriptureText>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a loading state', () => {
+    const tree = renderer.create(
+      <Providers>
+        <ScriptureText isLoading>Default ScriptureText text</ScriptureText>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should accept additional props', () => {
+    const tree = renderer.create(
+      <Providers>
+        <ScriptureText accessible={false}>
+          {
+            '"True faith means holding nothing back. It means putting every hope in God\'s fidelity to His Promises." ― Francis Chan'
+          }
+        </ScriptureText>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/Scripture/typography/ScriptureText/index.js b/apolloschurchapp/src/ui/Scripture/typography/ScriptureText/index.js
new file mode 100644
index 0000000..6f216c7
--- /dev/null
+++ b/apolloschurchapp/src/ui/Scripture/typography/ScriptureText/index.js
@@ -0,0 +1,47 @@
+import { Text } from 'react-native';
+import PropTypes from 'prop-types';
+import { compose, pure, setDisplayName } from 'recompose';
+
+import { styled, withPlaceholder, Placeholder } from '@apollosproject/ui-kit';
+
+const { Typography } = Placeholder;
+
+const styles = styled(({ theme, bold, italic }) => {
+  let fontStack = theme.typography.serif.regular.default;
+
+  if (bold && italic) {
+    fontStack = theme.typography.serif.bold.italic;
+  } else if (bold) {
+    fontStack = theme.typography.serif.bold.default;
+  } else if (italic) {
+    fontStack = theme.typography.serif.regular.italic;
+  }
+
+  return {
+    fontSize: theme.helpers.rem(1),
+    lineHeight: theme.helpers.verticalRhythm(1, 1.625),
+    fontFamily: fontStack,
+    color: theme.colors.text.primary,
+  };
+}, 'ScriptureText');
+
+const ScriptureText = compose(
+  setDisplayName('ScriptureText'),
+  styles,
+  withPlaceholder(Typography),
+  pure
+)(Text);
+
+ScriptureText.propTypes = {
+  bold: PropTypes.bool,
+  italic: PropTypes.bool,
+  isLoading: PropTypes.bool, // display loading placeholder
+  ...Text.propTypes,
+};
+
+ScriptureText.defaultProps = {
+  bold: false,
+  italic: false,
+};
+
+export default ScriptureText;
diff --git a/apolloschurchapp/src/ui/Scripture/typography/index.js b/apolloschurchapp/src/ui/Scripture/typography/index.js
new file mode 100644
index 0000000..b9ec8c2
--- /dev/null
+++ b/apolloschurchapp/src/ui/Scripture/typography/index.js
@@ -0,0 +1,27 @@
+import { Text } from 'react-native';
+
+import { styled } from '@apollosproject/ui-kit';
+
+import ScriptureText from './ScriptureText';
+
+const VerseNumber = styled(({ theme }) => ({
+  fontSize: theme.helpers.rem(0.6),
+  color: theme.colors.text.secondary,
+}))(ScriptureText);
+
+const RedLetters = styled(({ theme }) => ({
+  color: theme.colors.wordOfChrist,
+}))(Text);
+
+const PoeticPause = styled({
+  textAlign: 'right',
+})(ScriptureText);
+
+const LegalText = styled(({ theme }) => ({
+  fontSize: theme.helpers.rem(0.6),
+  lineHeight: theme.helpers.verticalRhythm(0.45),
+  fontFamily: theme.typography.sans.regular.default,
+  color: theme.colors.text.secondary,
+}))(ScriptureText);
+
+export { ScriptureText, VerseNumber, RedLetters, PoeticPause, LegalText };
diff --git a/apolloschurchapp/src/ui/Share/index.js b/apolloschurchapp/src/ui/Share/index.js
index 2f979c5..667f1e6 100644
--- a/apolloschurchapp/src/ui/Share/index.js
+++ b/apolloschurchapp/src/ui/Share/index.js
@@ -3,7 +3,6 @@ import PropTypes from 'prop-types';
 import { compose, pure } from 'recompose';
 import share from 'apolloschurchapp/src/utils/content/share';
 import { Touchable, Icon, withTheme } from '@apollosproject/ui-kit';
-import { AnalyticsConsumer } from '@apollosproject/ui-analytics';
 
 const enhance = compose(
   pure,
@@ -11,22 +10,9 @@ const enhance = compose(
 );
 
 const Share = enhance(({ content, theme }) => (
-  <AnalyticsConsumer>
-    {({ track }) => {
-      const onPress = () => {
-        share(content);
-        track({
-          eventName: 'ShareContent',
-          properties: { id: content.id, title: content.title },
-        });
-      };
-      return (
-        <Touchable onPress={onPress}>
-          <Icon name={'share'} fill={theme.colors.secondary} />
-        </Touchable>
-      );
-    }}
-  </AnalyticsConsumer>
+  <Touchable onPress={() => share(content)}>
+    <Icon name={'share'} fill={theme.colors.secondary} />
+  </Touchable>
 ));
 
 Share.propTypes = {
diff --git a/apolloschurchapp/src/ui/Splash/Splash.stories.js b/apolloschurchapp/src/ui/Splash/Splash.stories.js
new file mode 100644
index 0000000..a39677a
--- /dev/null
+++ b/apolloschurchapp/src/ui/Splash/Splash.stories.js
@@ -0,0 +1,20 @@
+import React from 'react';
+import { storiesOf } from '@storybook/react-native';
+
+import Splash from '.';
+
+storiesOf('Splash', module)
+  .add('default', () => <Splash />)
+  .add('imgSrc & !isLight', () => (
+    <Splash
+      imgSrc={{
+        uri: 'https://picsum.photos/1200/1200?random',
+        height: 1200,
+        width: 1200,
+      }}
+      isLight={false}
+    />
+  ))
+  .add('slideTitle', () => <Splash slideTitle={'Custom title text'} />)
+  .add('description', () => <Splash description={'Custom description text'} />)
+  .add('Slide props', () => <Splash onPressPrimary={() => {}} />);
diff --git a/apolloschurchapp/src/ui/Splash/Splash.tests.js b/apolloschurchapp/src/ui/Splash/Splash.tests.js
new file mode 100644
index 0000000..2fa2cdd
--- /dev/null
+++ b/apolloschurchapp/src/ui/Splash/Splash.tests.js
@@ -0,0 +1,56 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import Splash from '.';
+
+describe('The Onboarding Splash component', () => {
+  it('should render', () => {
+    const tree = renderer.create(
+      <Providers>
+        <Splash />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render light text on a dark background', () => {
+    const tree = renderer.create(
+      <Providers>
+        <Splash
+          imgSrc={{
+            uri: 'https://picsum.photos/1200/1200?random',
+            height: 1200,
+            width: 1200,
+          }}
+          isLight={false}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a custom title', () => {
+    const tree = renderer.create(
+      <Providers>
+        <Splash slideTitle={'Custom title text'} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a custom description', () => {
+    const tree = renderer.create(
+      <Providers>
+        <Splash description={'Custom description text'} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should pass additional props to Slide', () => {
+    const tree = renderer.create(
+      <Providers>
+        <Splash onPressPrimary={jest.fn()} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/Splash/index.js b/apolloschurchapp/src/ui/Splash/index.js
new file mode 100644
index 0000000..9f68279
--- /dev/null
+++ b/apolloschurchapp/src/ui/Splash/index.js
@@ -0,0 +1,75 @@
+import React, { memo } from 'react';
+import { Image } from 'react-native';
+import PropTypes from 'prop-types';
+
+import {
+  styled,
+  withTheme,
+  Icon,
+  H1,
+  H4,
+  PaddedView,
+} from '@apollosproject/ui-kit';
+
+import Slide from '../Onboarding/Slide';
+
+const Content = styled({
+  flex: 1,
+  justifyContent: 'center',
+})(PaddedView);
+
+const BrandIcon = withTheme(({ theme, isLight }) => ({
+  name: 'brand-icon',
+  size: theme.sizing.baseUnit * 3.0,
+  fill: isLight ? theme.colors.text.primary : theme.colors.white,
+  style: {
+    marginBottom: theme.sizing.baseUnit,
+  },
+}))(Icon);
+
+const Title = styled(({ theme, isLight }) => ({
+  color: isLight ? theme.colors.text.primary : theme.colors.white,
+  marginBottom: theme.sizing.baseUnit * 2,
+}))(H1);
+
+const CoverImage = styled({
+  resizeMode: 'cover',
+  position: 'absolute',
+})(Image);
+
+const StyledH4 = styled(({ theme, isLight }) => ({
+  color: isLight ? theme.colors.text.primary : theme.colors.white,
+}))(H4);
+
+// eslint-disable-next-line react/display-name
+const Splash = memo(
+  ({ slideTitle, description, imgSrc, isLight, ...props }) => (
+    <Slide {...props}>
+      {imgSrc ? <CoverImage source={imgSrc} /> : null}
+      <Content>
+        <BrandIcon isLight={isLight} />
+        <Title isLight={isLight}>{slideTitle}</Title>
+        <StyledH4 isLight={isLight}>{description}</StyledH4>
+      </Content>
+    </Slide>
+  )
+);
+
+Splash.propTypes = {
+  /* The `Swiper` component used in `<Onboading>` looks for and hijacks the title prop of it's
+   * children. Thus we have to use more unique name.
+   */
+  slideTitle: PropTypes.string,
+  description: PropTypes.string,
+  imgSrc: PropTypes.string,
+  isLight: PropTypes.boolean,
+};
+
+Splash.defaultProps = {
+  slideTitle: "We're glad you're here.".toUpperCase(),
+  description:
+    "We're not just a building you go to, but a family to belong to.",
+  isLight: true,
+};
+
+export default Splash;
diff --git a/apolloschurchapp/src/ui/UserAvatarView/AvatarForm.js b/apolloschurchapp/src/ui/UserAvatarView/AvatarForm.js
index 1787f08..684344a 100644
--- a/apolloschurchapp/src/ui/UserAvatarView/AvatarForm.js
+++ b/apolloschurchapp/src/ui/UserAvatarView/AvatarForm.js
@@ -12,11 +12,11 @@ import {
   H5,
   styled,
 } from '@apollosproject/ui-kit';
-import GET_USER_PROFILE from '../../tabs/connect/getUserProfile';
+import getUserProfile from '../../tabs/connect/getUserProfile';
 import uploadPhoto from './uploadPhoto';
 
 const GetPhotoData = ({ children }) => (
-  <Query query={GET_USER_PROFILE}>
+  <Query query={getUserProfile}>
     {({ data: { currentUser = {} } = {} }) => {
       const photo = get(currentUser, 'profile.photo');
       return children({ photo });
@@ -28,11 +28,12 @@ GetPhotoData.propTypes = {
   children: PropTypes.func.isRequired,
 };
 
-const StyledView = styled(({ theme }) => ({
-  marginRight: 0,
-  marginBottom: theme.sizing.baseUnit * 0.75,
-  marginTop: theme.sizing.baseUnit * 0.5,
-}))(View);
+const StyledAvatar = withTheme(({ theme }) => ({
+  containerStyle: {
+    marginRight: 0,
+    marginBottom: theme.sizing.baseUnit / 2,
+  },
+}))(Avatar);
 
 const RoundTouchable = withTheme(({ theme, size }) => ({
   borderRadius: get(theme.sizing.avatar, size, theme.sizing.avatar.small),
@@ -79,13 +80,13 @@ export default class AvatarForm extends PureComponent {
             >
               <GetPhotoData>
                 {({ photo }) => (
-                  <StyledView>
-                    <Avatar
+                  <View>
+                    <StyledAvatar
                       source={photo}
                       size="medium"
                       isLoading={isUploadingFile}
                     />
-                  </StyledView>
+                  </View>
                 )}
               </GetPhotoData>
             </RoundTouchable>
diff --git a/apolloschurchapp/src/ui/UserAvatarView/UserAvatarView.stories.js b/apolloschurchapp/src/ui/UserAvatarView/UserAvatarView.stories.js
index f32c776..76cf42a 100644
--- a/apolloschurchapp/src/ui/UserAvatarView/UserAvatarView.stories.js
+++ b/apolloschurchapp/src/ui/UserAvatarView/UserAvatarView.stories.js
@@ -1,5 +1,5 @@
 import React from 'react';
-import { storiesOf } from '@apollosproject/ui-storybook';
+import { storiesOf } from '@storybook/react-native';
 
 import UserAvatarView from '.';
 
diff --git a/apolloschurchapp/src/ui/UserAvatarView/index.js b/apolloschurchapp/src/ui/UserAvatarView/index.js
index d18a809..51dd27b 100644
--- a/apolloschurchapp/src/ui/UserAvatarView/index.js
+++ b/apolloschurchapp/src/ui/UserAvatarView/index.js
@@ -41,9 +41,7 @@ const UserAvatarView = withIsLoading(
         <H3>
           {firstName} {lastName}
         </H3>
-        {location && (
-          <ChannelLabel icon="pin" label={location} isLoading={isLoading} />
-        )}
+        <ChannelLabel icon="pin" label={location || ''} isLoading={isLoading} />
       </Content>
     </Container>
   )
diff --git a/apolloschurchapp/src/ui/UserAvatarView/uploadPhoto.js b/apolloschurchapp/src/ui/UserAvatarView/uploadPhoto.js
index 4c051e5..cf0b4e0 100644
--- a/apolloschurchapp/src/ui/UserAvatarView/uploadPhoto.js
+++ b/apolloschurchapp/src/ui/UserAvatarView/uploadPhoto.js
@@ -1,7 +1,7 @@
 import gql from 'graphql-tag';
 import ImagePicker from 'react-native-image-picker';
 import { ReactNativeFile } from 'apollo-upload-client';
-import GET_USER_PROFILE from '../../tabs/connect/getUserProfile';
+import getUserProfile from '../../tabs/connect/getUserProfile';
 
 const options = {
   title: 'Select Profile Image',
@@ -57,10 +57,10 @@ export default async ({ client, onUpload = () => ({}) }) => {
           },
         }
       ) => {
-        const data = cache.readQuery({ query: GET_USER_PROFILE });
+        const data = cache.readQuery({ query: getUserProfile });
 
         cache.writeQuery({
-          query: GET_USER_PROFILE,
+          query: getUserProfile,
           data: {
             currentUser: {
               ...data.currentUser,
diff --git a/apolloschurchapp/src/ui/WebBrowser/Browser.android.js b/apolloschurchapp/src/ui/WebBrowser/Browser.android.js
index cc7d39d..49dc211 100644
--- a/apolloschurchapp/src/ui/WebBrowser/Browser.android.js
+++ b/apolloschurchapp/src/ui/WebBrowser/Browser.android.js
@@ -1,9 +1,14 @@
 import { Linking } from 'react-native';
+import { CustomTabs } from 'react-native-custom-tabs';
 
 const Browser = {
-  openURL: async (url) => {
-    if (!Linking.canOpenURL(url)) throw new Error('URL not supported');
-    Linking.openURL(url);
+  openURL: async (url, options = {}) => {
+    try {
+      await CustomTabs.openURL(url, options);
+    } catch (e) {
+      if (!Linking.canOpenURL()) throw new Error('URL not supported');
+      Linking.openURL(url);
+    }
   },
 };
 
diff --git a/apolloschurchapp/src/ui/WebBrowser/Browser.ios.js b/apolloschurchapp/src/ui/WebBrowser/Browser.ios.js
index 0716bff..7de160f 100644
--- a/apolloschurchapp/src/ui/WebBrowser/Browser.ios.js
+++ b/apolloschurchapp/src/ui/WebBrowser/Browser.ios.js
@@ -10,7 +10,7 @@ const Browser = {
         ...options,
       });
     } catch (e) {
-      if (!Linking.canOpenURL(url)) throw new Error('URL not supported');
+      if (!Linking.canOpenURL()) throw new Error('URL not supported');
       Linking.openURL(url);
     }
   },
diff --git a/apolloschurchapp/src/user-settings/ChangePassword.js b/apolloschurchapp/src/user-settings/ChangePassword.js
index 6045e31..6f5f027 100644
--- a/apolloschurchapp/src/user-settings/ChangePassword.js
+++ b/apolloschurchapp/src/user-settings/ChangePassword.js
@@ -5,6 +5,7 @@ import { Mutation } from 'react-apollo';
 import { Formik } from 'formik';
 import * as Yup from 'yup';
 
+import { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';
 import {
   Button,
   ButtonLink,
@@ -12,16 +13,10 @@ import {
   BackgroundView,
   PaddedView,
   FlexedView,
-  styled,
 } from '@apollosproject/ui-kit';
 
-import GET_AUTH_TOKEN from '../store/getAuthToken';
-import CHANGE_PASSWORD from './passwordChange';
-
-const Footer = styled({
-  flex: 1,
-  justifyContent: 'flex-end',
-})(SafeAreaView);
+import getAuthToken from '../store/getAuthToken';
+import changePassword from './passwordChange';
 
 class ChangePassword extends PureComponent {
   static navigationOptions = ({ navigation }) => ({
@@ -44,29 +39,32 @@ class ChangePassword extends PureComponent {
 
   renderForm = (props) => (
     <FlexedView>
-      <BackgroundView>
-        <PaddedView>
-          <TextInput
-            label="New Password"
-            type="password"
-            value={props.values.password}
-            error={props.touched.password && props.errors.password}
-            onChangeText={(text) => props.setFieldValue('password', text)}
-          />
-          <TextInput
-            label="Confirm Password"
-            type="password"
-            value={props.values.confirmPassword}
-            error={
-              props.touched.confirmPassword && props.errors.confirmPassword
-            }
-            onChangeText={(text) =>
-              props.setFieldValue('confirmPassword', text)
-            }
-          />
-        </PaddedView>
-      </BackgroundView>
-      <Footer>
+      <KeyboardAwareScrollView>
+        <BackgroundView>
+          <PaddedView>
+            <TextInput
+              label="New Password"
+              type="password"
+              value={props.values.password}
+              error={props.touched.password && props.errors.password}
+              onChangeText={(text) => props.setFieldValue('password', text)}
+            />
+            <TextInput
+              label="Confirm Password"
+              type="password"
+              value={props.values.confirmPassword}
+              error={
+                props.touched.confirmPassword && props.errors.confirmPassword
+              }
+              onChangeText={(text) =>
+                props.setFieldValue('confirmPassword', text)
+              }
+            />
+          </PaddedView>
+        </BackgroundView>
+      </KeyboardAwareScrollView>
+
+      <SafeAreaView>
         <PaddedView>
           <Button
             disabled={props.isSubmitting}
@@ -75,17 +73,17 @@ class ChangePassword extends PureComponent {
             loading={props.isSubmitting}
           />
         </PaddedView>
-      </Footer>
+      </SafeAreaView>
     </FlexedView>
   );
 
   render() {
     return (
       <Mutation
-        mutation={CHANGE_PASSWORD}
+        mutation={changePassword}
         update={async (cache, { data: { token } }) => {
           await cache.writeQuery({
-            query: GET_AUTH_TOKEN,
+            query: getAuthToken,
             data: { authToken: token },
           });
 
diff --git a/apolloschurchapp/src/user-settings/Locations/CampusCard.js b/apolloschurchapp/src/user-settings/Locations/CampusCard.js
new file mode 100644
index 0000000..f543832
--- /dev/null
+++ b/apolloschurchapp/src/user-settings/Locations/CampusCard.js
@@ -0,0 +1,96 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import { compose, pure } from 'recompose';
+import { Dimensions, View } from 'react-native';
+
+import {
+  Card,
+  ConnectedImage,
+  SideBySideView,
+  withIsLoading,
+  styled,
+  CardContent,
+  H5,
+  H6,
+} from '@apollosproject/ui-kit';
+
+const { width } = Dimensions.get('window');
+
+export const CARD_WIDTH = width - 24; // todo: remove magic number. `theme.sizing.baseUnit * 1.5`
+
+const enhance = compose(
+  withIsLoading,
+  pure
+);
+
+const HorizontalLayout = styled({
+  alignItems: 'center',
+})(SideBySideView);
+
+const HorizontalTextLayout = styled(({ theme }) => ({
+  height: theme.helpers.verticalRhythm(0.875),
+}))(SideBySideView);
+
+const RightColumn = styled(({ theme }) => ({
+  paddingVertical: theme.sizing.baseUnit * 0.85,
+  flex: 1,
+}))(CardContent);
+
+const CampusImage = styled({
+  aspectRatio: 1,
+  height: '100%',
+  alignSelf: 'stretch',
+  resizeMode: 'cover', // This is to make sure images smaller than the ProgressiveImage size will cover
+})(ConnectedImage);
+
+const CampusImageSizer = styled({
+  aspectRatio: 1,
+  height: '100%',
+  alignSelf: 'stretch',
+})(View);
+
+const CardContainer = styled(({ theme }) => ({
+  width: CARD_WIDTH,
+  height: theme.sizing.baseUnit * 6,
+}))(View);
+
+const StyledCard = styled(({ theme }) => ({
+  marginHorizontal: 0,
+  marginRight: theme.sizing.baseUnit / 2,
+}))(Card);
+
+const CampusCard = enhance(
+  ({ title, description, distance, images, isLoading, ...otherProps }) => (
+    <CardContainer>
+      <StyledCard isLoading={isLoading} inHorizontalList {...otherProps}>
+        <HorizontalLayout>
+          {images ? (
+            <CampusImageSizer>
+              <CampusImage source={images} />
+            </CampusImageSizer>
+          ) : null}
+          <RightColumn>
+            <HorizontalTextLayout>
+              <H5>{title}</H5>
+              <H6>
+                {Math.round(distance)}
+                mi
+              </H6>
+            </HorizontalTextLayout>
+            {description ? <H6>{description}</H6> : null}
+          </RightColumn>
+        </HorizontalLayout>
+      </StyledCard>
+    </CardContainer>
+  )
+);
+
+CampusCard.propTypes = {
+  title: PropTypes.string.isRequired,
+  description: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),
+  images: PropTypes.any, // eslint-disable-line
+  category: PropTypes.string,
+  isLoading: PropTypes.bool,
+};
+
+export default CampusCard;
diff --git a/apolloschurchapp/src/user-settings/Locations/Locations.tests.js b/apolloschurchapp/src/user-settings/Locations/Locations.tests.js
index 53a4c91..627fc7f 100644
--- a/apolloschurchapp/src/user-settings/Locations/Locations.tests.js
+++ b/apolloschurchapp/src/user-settings/Locations/Locations.tests.js
@@ -2,7 +2,7 @@ import React from 'react';
 import { renderWithApolloData } from 'apolloschurchapp/src/utils/testUtils';
 
 import Providers from 'apolloschurchapp/src/Providers';
-import GET_CAMPUS_LOCATIONS from './getCampusLocations';
+import getCampusLocations from './getCampusLocations';
 import Location from './index';
 
 const campuses = [
@@ -80,10 +80,6 @@ describe('Display Native Map with Locations', () => {
     latitudeDelta: 100,
     longitudeDelta: 10,
   };
-  const userLocation = {
-    latitude: 39.104797,
-    longitude: -84.511959,
-  };
   it('Render a native map view', async () => {
     const navigation = {
       navigate: jest.fn(),
@@ -93,10 +89,10 @@ describe('Display Native Map with Locations', () => {
 
     const mock = {
       request: {
-        query: GET_CAMPUS_LOCATIONS,
+        query: getCampusLocations,
         variables: {
-          latitude: userLocation.latitude,
-          longitude: userLocation.longitude,
+          latitude: initialRegion.latitude,
+          longitude: initialRegion.longitude,
         },
       },
       result: {
diff --git a/apolloschurchapp/src/user-settings/Locations/MapView.js b/apolloschurchapp/src/user-settings/Locations/MapView.js
index 06dddb5..b31e830 100644
--- a/apolloschurchapp/src/user-settings/Locations/MapView.js
+++ b/apolloschurchapp/src/user-settings/Locations/MapView.js
@@ -1,22 +1,16 @@
 import React, { Component } from 'react';
 import PropTypes from 'prop-types';
 import { View, Animated } from 'react-native';
-import { SafeAreaView } from 'react-navigation';
-import RNMapView from 'react-native-maps';
+import SafeAreaView from 'react-native-safe-area-view';
+import RNMapView, { Marker } from 'react-native-maps';
+import Color from 'color';
 import { debounce } from 'lodash';
+import { Button, PaddedView, styled, withTheme } from '@apollosproject/ui-kit';
+import CampusCard, { CARD_WIDTH } from './CampusCard';
 
-import {
-  Button,
-  PaddedView,
-  FlexedView,
-  styled,
-  withTheme,
-  CampusCard,
-} from '@apollosproject/ui-kit';
-
-import Marker from './Marker';
-
-const { CARD_WIDTH } = CampusCard;
+const ContainerView = styled({
+  flex: 1,
+})(View);
 
 const FlexedMapView = styled({ flex: 1 })(({ mapRef, ...props }) => (
   <RNMapView ref={mapRef} {...props} />
@@ -25,13 +19,40 @@ const FlexedMapView = styled({ flex: 1 })(({ mapRef, ...props }) => (
 const getCampusAddress = (campus) =>
   `${campus.street1}\n${campus.city}, ${campus.state} ${campus.postalCode}`;
 
-const Footer = styled({
+const ScrollingView = styled({
   position: 'absolute',
   bottom: 0,
   left: 0,
   right: 0,
 })(View);
 
+const MarkerView = styled(({ theme }) => ({
+  width: 8,
+  height: 8,
+  borderRadius: 4,
+  backgroundColor: Color(theme.colors.primary).fade(theme.alpha.medium),
+}))(View);
+
+const MarkerWrapView = styled({
+  alignItems: 'center',
+  justifyContent: 'center',
+})(View);
+
+// This is not good. Is there a better way to prevent cascading styles?
+
+const MarkerRingView = styled(({ theme }) => ({
+  width: 24,
+  height: 24,
+  borderRadius: 12,
+  right: -8,
+  top: -8,
+  backgroundColor: Color(theme.colors.primary).fade(theme.alpha.low),
+  position: 'absolute',
+  borderWidth: 1,
+  borderColor: Color(theme.colors.primary).fade(theme.alpha.medium),
+  alignItems: 'stretch',
+}))(View);
+
 class MapView extends Component {
   static propTypes = {
     campuses: PropTypes.arrayOf(
@@ -62,13 +83,14 @@ class MapView extends Component {
   };
 
   state = {
-    campus: null,
+    campus: {},
   };
 
   animation = new Animated.Value(0);
 
   componentDidMount() {
     this.animation.addListener(debounce(this.updateCoordinates));
+    this.updateCoordinates({ value: 0 });
   }
 
   componentDidUpdate(oldProps) {
@@ -78,7 +100,7 @@ class MapView extends Component {
   }
 
   get contentContainerStyle() {
-    return { paddingHorizontal: this.props.theme.sizing.baseUnit * 0.75 }; // pad cards from edge of screen but account for card margin
+    return { paddingHorizontal: this.props.theme.sizing.baseUnit };
   }
 
   updateCoordinates = ({ value }) => {
@@ -86,119 +108,142 @@ class MapView extends Component {
     const cardIndex = Math.floor(value / CARD_WIDTH + 0.3); // animate 30% away from landing on the next item;
     const campus = this.props.campuses[cardIndex];
     this.setState({ campus });
-    if (!campus) {
-      this.map.fitToCoordinates(
-        [...this.props.campuses, this.props.userLocation],
-        {
-          edgePadding: {
-            top: 100,
-            left: 100,
-            right: 100,
-            // This is higher to avoid the campus cards (baseUnit * 6) on the bottom
-            bottom: 100 + this.props.theme.sizing.baseUnit * 12,
-          },
-        }
-      );
-      return;
-    }
+    if (!campus) return;
 
     const { userLocation } = this.props;
-    this.map.fitToCoordinates([campus, userLocation], {
-      edgePadding: {
-        top: 100,
-        left: 100,
-        right: 100,
-        // This is higher to avoid the campus cards (baseUnit * 6) on the bottom
-        bottom: 100 + this.props.theme.sizing.baseUnit * 12,
+
+    let { latitude } = campus;
+    const { longitude } = campus;
+    let { latitudeDelta, longitudeDelta } = this.props.initialRegion;
+
+    if (userLocation) {
+      // Calculate rectangle that shows user's location in the view with campus at center
+      const minLat = Math.min(campus.latitude, userLocation.latitude);
+      const maxLat = Math.max(campus.latitude, userLocation.latitude);
+      const minLong = Math.min(campus.longitude, userLocation.longitude);
+      const mayLong = Math.max(campus.longitude, userLocation.longitude);
+
+      latitudeDelta = (maxLat - minLat) * 2.5;
+      longitudeDelta = (mayLong - minLong) * 2.5;
+    }
+
+    // Now, we need to transform the given lat/lng/delta up to make room for cards at bottom.
+    // To make this math simpler, we'll assume the cards take up roughly 20% of the vertical space
+    const maxDelta = Math.max(latitudeDelta, longitudeDelta);
+    latitude -= maxDelta * 0.2; // move the view up 20%
+    latitudeDelta *= 1.2; // include 20% more area in the view
+
+    this.map.animateToRegion(
+      {
+        latitude,
+        longitude,
+        latitudeDelta,
+        longitudeDelta,
       },
-    });
+      350
+    );
   };
 
   render() {
-    const { campuses = [], onLocationSelect } = this.props;
+    const { campuses = [] } = this.props;
     const interpolations = campuses.map((marker, index) => {
       const inputRange = [
         (index - 1) * CARD_WIDTH,
         index * CARD_WIDTH,
         (index + 1) * CARD_WIDTH,
       ];
+      const scale = this.animation.interpolate({
+        inputRange,
+        outputRange: [1, 2.5, 1],
+        extrapolate: 'clamp',
+      });
       const opacity = this.animation.interpolate({
         inputRange,
         outputRange: [0.35, 1, 0.35],
         extrapolate: 'clamp',
       });
-      return { opacity };
+      return { scale, opacity };
     });
 
     return (
-      <FlexedView>
-        <FlexedMapView
-          initialRegion={this.props.initialRegion}
-          showsUserLocation
-          mapRef={(map) => {
-            this.map = map;
-          }}
-        >
-          {campuses.map((campus, index) => {
-            const campusOpacity = {
-              opacity: interpolations[index].opacity,
-            };
-            return (
-              <Marker
-                key={campus.id}
-                opacityStyle={campusOpacity}
-                latitude={campus.latitude}
-                longitude={campus.longitude}
-              />
-            );
-          })}
-        </FlexedMapView>
-        <Footer>
-          <SafeAreaView>
-            <Animated.ScrollView
-              horizontal
-              showsHorizontalScrollIndicator={false}
-              snapToInterval={CARD_WIDTH + 8} // account for padding
-              snapToAlignment={'start'}
-              decelerationRate={'fast'}
-              contentContainerStyle={this.contentContainerStyle} // correctly pads cards in ScrollView
-              scrollEventThrottle={16} // roughtly 1000ms/60fps = 16ms
-              onScroll={Animated.event(
-                [
+      <ContainerView>
+        <ContainerView>
+          <FlexedMapView
+            initialRegion={this.props.initialRegion}
+            showsUserLocation
+            mapRef={(map) => {
+              this.map = map;
+            }}
+          >
+            {campuses.map((campus, index) => {
+              const scaleStyle = {
+                transform: [
                   {
-                    nativeEvent: {
-                      contentOffset: {
-                        x: this.animation,
-                      },
-                    },
+                    scale: interpolations[index].scale,
                   },
                 ],
-                { useNativeDriver: true }
-              )}
-            >
-              {campuses.map((campus) => (
-                <CampusCard
-                  key={campus.id}
-                  distance={campus.distanceFromLocation}
-                  title={campus.name}
-                  description={getCampusAddress(campus)}
-                  images={[campus.image]}
+              };
+              const opacityStyle = {
+                opacity: interpolations[index].opacity,
+              };
+              return (
+                <Marker key={campus.id} coordinate={campus}>
+                  <MarkerWrapView>
+                    <Animated.View style={opacityStyle}>
+                      <MarkerRingView>
+                        <Animated.View style={scaleStyle} />
+                      </MarkerRingView>
+                      <MarkerView />
+                    </Animated.View>
+                  </MarkerWrapView>
+                </Marker>
+              );
+            })}
+          </FlexedMapView>
+          <ScrollingView>
+            <SafeAreaView forceInset={{ bottom: 'always', top: 'never' }}>
+              <Animated.ScrollView
+                horizontal
+                showsHorizontalScrollIndicator={false}
+                snapToInterval={CARD_WIDTH}
+                snapToAlignment="left"
+                decelerationRate="fast"
+                contentContainerStyle={this.contentContainerStyle}
+                onScroll={Animated.event(
+                  [
+                    {
+                      nativeEvent: {
+                        contentOffset: {
+                          x: this.animation,
+                        },
+                      },
+                    },
+                  ],
+                  { useNativeDriver: true }
+                )}
+              >
+                {campuses.map((campus) => (
+                  <CampusCard
+                    key={campus.id}
+                    distance={campus.distanceFromLocation}
+                    title={campus.name}
+                    description={getCampusAddress(campus)}
+                    images={[campus.image]}
+                  />
+                ))}
+              </Animated.ScrollView>
+              <PaddedView>
+                <Button
+                  title="Select Campus"
+                  pill={false}
+                  type="secondary"
+                  onPress={() => this.props.onLocationSelect(this.state.campus)}
                 />
-              ))}
-            </Animated.ScrollView>
-            <PaddedView>
-              <Button
-                title="Select Campus"
-                pill={false}
-                type="secondary"
-                onPress={() =>
-                  onLocationSelect(this.state.campus || campuses[0])
-                }
-              />
-            </PaddedView>
-          </SafeAreaView>
-        </Footer>
-      </FlexedView>
+              </PaddedView>
+            </SafeAreaView>
+          </ScrollingView>
+        </ContainerView>
+      </ContainerView>
     );
   }
 }
diff --git a/apolloschurchapp/src/user-settings/Locations/Marker.js b/apolloschurchapp/src/user-settings/Locations/Marker.js
index 0c98fa9..6e94c55 100644
--- a/apolloschurchapp/src/user-settings/Locations/Marker.js
+++ b/apolloschurchapp/src/user-settings/Locations/Marker.js
@@ -1,46 +1,29 @@
-import React, { memo } from 'react';
-import { View, Animated } from 'react-native';
+import React, { PureComponent } from 'react';
 import PropTypes from 'prop-types';
-import { Marker } from 'react-native-maps';
-import Color from 'color';
+import Marker from 'react-native-maps';
 
-import { styled } from '@apollosproject/ui-kit';
+import { UIText } from '@apollosproject/ui-kit';
 
-const MarkerView = styled(({ theme }) => ({
-  width: 8,
-  height: 8,
-  borderRadius: 4,
-  backgroundColor: Color(theme.colors.primary).fade(theme.alpha.medium),
-  zIndex: 2,
-}))(View);
+class StyledMarker extends PureComponent {
+  static propTypes = {
+    latitude: PropTypes.string,
+    longitude: PropTypes.string,
+    Name: PropTypes.string,
+  };
 
-const MarkerRingView = styled(({ theme }) => ({
-  width: 24,
-  height: 24,
-  borderRadius: 12,
-  backgroundColor: Color(theme.colors.primary).fade(theme.alpha.low),
-  borderWidth: 1,
-  borderColor: Color(theme.colors.primary).fade(theme.alpha.medium),
-  alignItems: 'center',
-  justifyContent: 'center',
-}))(View);
-
-const StyledMarker = memo(({ latitude, longitude, opacityStyle }) => (
-  <Marker coordinate={{ latitude, longitude }}>
-    <Animated.View style={opacityStyle}>
-      <MarkerRingView>
-        <MarkerView />
-      </MarkerRingView>
-    </Animated.View>
-  </Marker>
-));
-
-StyledMarker.displayName = 'StyledMarker';
-
-StyledMarker.propTypes = {
-  latitude: PropTypes.number.isRequired,
-  longitude: PropTypes.number.isRequired,
-  opacityStyle: PropTypes.shape({}),
-};
+  render() {
+    return (
+      <Marker
+        coordinate={{
+          latitude: this.props.latitude,
+          longitude: this.props.longitude,
+        }}
+        anchor={{ x: 0.69, y: 1 }}
+      >
+        <UIText>{this.props.Name}</UIText>
+      </Marker>
+    );
+  }
+}
 
 export default StyledMarker;
diff --git a/apolloschurchapp/src/user-settings/Locations/campusChange.js b/apolloschurchapp/src/user-settings/Locations/campusChange.js
index e164b7b..74585ba 100644
--- a/apolloschurchapp/src/user-settings/Locations/campusChange.js
+++ b/apolloschurchapp/src/user-settings/Locations/campusChange.js
@@ -1,14 +1,13 @@
 import gql from 'graphql-tag';
-import CampusFragment from './campusFragment';
 
 export default gql`
   mutation campusChange($campusId: String!) {
     updateUserCampus(campusId: $campusId) {
       id
       campus {
-        ...CampusParts
+        __typename
+        name
       }
     }
   }
-  ${CampusFragment}
 `;
diff --git a/apolloschurchapp/src/user-settings/Locations/campusFragment.js b/apolloschurchapp/src/user-settings/Locations/campusFragment.js
deleted file mode 100644
index 777cce5..0000000
--- a/apolloschurchapp/src/user-settings/Locations/campusFragment.js
+++ /dev/null
@@ -1,19 +0,0 @@
-import gql from 'graphql-tag';
-
-export default gql`
-  fragment CampusParts on Campus {
-    id
-    name
-    latitude
-    longitude
-    distanceFromLocation
-    street1
-    street2
-    city
-    state
-    postalCode
-    image {
-      uri
-    }
-  }
-`;
diff --git a/apolloschurchapp/src/user-settings/Locations/getCampusLocations.js b/apolloschurchapp/src/user-settings/Locations/getCampusLocations.js
index 1c98bb8..050f69f 100644
--- a/apolloschurchapp/src/user-settings/Locations/getCampusLocations.js
+++ b/apolloschurchapp/src/user-settings/Locations/getCampusLocations.js
@@ -1,11 +1,21 @@
 import gql from 'graphql-tag';
-import CampusFragment from './campusFragment';
 
 export default gql`
   query getAllCampuses($latitude: Float!, $longitude: Float!) {
     campuses(location: { latitude: $latitude, longitude: $longitude }) {
-      ...CampusParts
+      id
+      name
+      latitude
+      longitude
+      distanceFromLocation
+      street1
+      street2
+      city
+      state
+      postalCode
+      image {
+        uri
+      }
     }
   }
-  ${CampusFragment}
 `;
diff --git a/apolloschurchapp/src/user-settings/Locations/index.js b/apolloschurchapp/src/user-settings/Locations/index.js
index bc2b6d6..9c81c13 100644
--- a/apolloschurchapp/src/user-settings/Locations/index.js
+++ b/apolloschurchapp/src/user-settings/Locations/index.js
@@ -5,10 +5,13 @@ import { Dimensions } from 'react-native';
 
 import { PaddedView, ButtonLink } from '@apollosproject/ui-kit';
 
-import GET_CAMPUSES from './getCampusLocations';
-import CHANGE_CAMPUS from './campusChange';
+import getUserProfile from '../../tabs/connect/getUserProfile';
 import MapView from './MapView';
 
+import getAllCampuses from './getCampusLocations';
+
+import campusChange from './campusChange';
+
 const getCurrentLocation = () =>
   new Promise((resolve, reject) => {
     navigator.geolocation.getCurrentPosition(
@@ -17,6 +20,10 @@ const getCurrentLocation = () =>
     );
   });
 
+const screen = Dimensions.get('window');
+
+const ASPECT_RATIO = screen.width / screen.height;
+
 class Location extends PureComponent {
   static propTypes = {
     navigation: PropTypes.shape({
@@ -30,7 +37,6 @@ class Location extends PureComponent {
       latitudeDelta: PropTypes.number,
       longitudeDelta: PropTypes.number,
     }),
-    onFinished: PropTypes.func,
   };
 
   static defaultProps = {
@@ -39,9 +45,7 @@ class Location extends PureComponent {
       latitude: 39.809734,
       longitude: -98.555618,
       latitudeDelta: 100,
-      longitudeDelta:
-        (100 * Dimensions.get('window').width) /
-        Dimensions.get('window').height,
+      longitudeDelta: 100 * ASPECT_RATIO,
     },
   };
 
@@ -56,10 +60,7 @@ class Location extends PureComponent {
   });
 
   state = {
-    userLocation: {
-      latitude: 39.104797,
-      longitude: -84.511959,
-    },
+    region: this.props.initialRegion,
   };
 
   componentDidMount() {
@@ -76,21 +77,40 @@ class Location extends PureComponent {
   }
 
   render() {
-    const { navigation, onFinished } = this.props;
-    // we should use the `onFinished` from the navigation param, if it exists.
-    const handleFinished = navigation.getParam('onFinished', onFinished);
-
+    const { navigation } = this.props;
     return (
       <Query
-        query={GET_CAMPUSES}
+        query={getAllCampuses}
         variables={{
-          latitude: this.state.userLocation.latitude,
-          longitude: this.state.userLocation.longitude,
+          latitude: this.state.region.latitude,
+          longitude: this.state.region.longitude,
         }}
         fetchPolicy="cache-and-network"
       >
         {({ loading, error, data: { campuses = [] } = {} }) => (
-          <Mutation mutation={CHANGE_CAMPUS}>
+          <Mutation
+            mutation={campusChange}
+            update={async (cache, { data: { updateUserCampus } }) => {
+              const { currentUser } = await cache.readQuery({
+                query: getUserProfile,
+              });
+              await cache.writeQuery({
+                query: getUserProfile,
+                data: {
+                  currentUser: {
+                    ...currentUser,
+                    profile: {
+                      ...currentUser.profile,
+                      campus: {
+                        ...currentUser.profile.campus,
+                        name: updateUserCampus.campus.name,
+                      },
+                    },
+                  },
+                },
+              });
+            }}
+          >
             {(handlePress) => (
               <MapView
                 navigation={navigation}
@@ -106,7 +126,6 @@ class Location extends PureComponent {
                     },
                   });
                   await navigation.goBack();
-                  if (handleFinished) handleFinished();
                 }}
               />
             )}
diff --git a/apolloschurchapp/src/user-settings/PersonDetails.tests.js b/apolloschurchapp/src/user-settings/PersonDetails.tests.js
index 5234bf5..b55f57e 100644
--- a/apolloschurchapp/src/user-settings/PersonDetails.tests.js
+++ b/apolloschurchapp/src/user-settings/PersonDetails.tests.js
@@ -4,14 +4,14 @@ import wait from 'waait';
 
 import Providers from 'apolloschurchapp/src/Providers';
 
-import GET_USER_PROFILE from '../tabs/connect/getUserProfile';
+import getUserProfile from '../tabs/connect/getUserProfile';
 import PersonalDetails from './PersonalDetails';
 
 describe('PersonalDetails component', () => {
   it('renders PersonalDetails when logged in', async () => {
     const mock = {
       request: {
-        query: GET_USER_PROFILE,
+        query: getUserProfile,
       },
       result: {
         data: {
diff --git a/apolloschurchapp/src/user-settings/PersonalDetails.js b/apolloschurchapp/src/user-settings/PersonalDetails.js
index 9404206..71d7631 100644
--- a/apolloschurchapp/src/user-settings/PersonalDetails.js
+++ b/apolloschurchapp/src/user-settings/PersonalDetails.js
@@ -1,15 +1,10 @@
 import React, { PureComponent } from 'react';
 import PropTypes from 'prop-types';
-import {
-  KeyboardAvoidingView,
-  StyleSheet,
-  StatusBar,
-  Platform,
-} from 'react-native';
-import { SafeAreaView, Header } from 'react-navigation';
+import { SafeAreaView } from 'react-native';
 import { Query, Mutation } from 'react-apollo';
 import { Formik } from 'formik';
 import * as Yup from 'yup';
+import { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';
 
 import {
   TextInput,
@@ -17,16 +12,11 @@ import {
   FlexedView,
   Button,
   ButtonLink,
-  styled,
+  TableView,
 } from '@apollosproject/ui-kit';
 
-import GET_USER_PROFILE from '../tabs/connect/getUserProfile';
-import UPDATE_CURRENT_USER from './updateCurrentUser';
-
-const Footer = styled({
-  flex: 1,
-  justifyContent: 'flex-end',
-})(SafeAreaView);
+import getUserProfile from '../tabs/connect/getUserProfile';
+import updateCurrentUser from './updateCurrentUser';
 
 class PersonalDetails extends PureComponent {
   static navigationOptions = ({ navigation }) => ({
@@ -48,65 +38,63 @@ class PersonalDetails extends PureComponent {
   };
 
   renderForm = (props) => (
-    // have to add the offset to account for react-navigation header
-    <KeyboardAvoidingView
-      behavior={'padding'}
-      style={StyleSheet.absoluteFill}
-      keyboardVerticalOffset={
-        Header.HEIGHT +
-        (Platform.OS === 'android' ? StatusBar.currentHeight : 0)
-      }
-    >
-      <FlexedView>
-        <PaddedView>
-          <TextInput
-            label="First Name"
-            type="text"
-            value={props.values.firstName}
-            error={props.touched.firstName && props.errors.firstName}
-            onChangeText={(text) => props.setFieldValue('firstName', text)}
-          />
-          <TextInput
-            label="Last Name"
-            type="text"
-            value={props.values.lastName}
-            error={props.touched.lastName && props.errors.lastName}
-            onChangeText={(text) => props.setFieldValue('lastName', text)}
-          />
-          <TextInput
-            label="Email"
-            type="email"
-            value={props.values.email}
-            error={props.touched.email && props.errors.email}
-            onChangeText={(text) => props.setFieldValue('email', text)}
-          />
-        </PaddedView>
-        <Footer>
+    <FlexedView>
+      <KeyboardAwareScrollView>
+        <TableView>
           <PaddedView>
-            <Button
-              disabled={!props.isValid || props.isSubmitting}
-              onPress={props.handleSubmit}
-              title="Save"
-              loading={props.isSubmitting}
+            <TextInput
+              label="First Name"
+              type="text"
+              value={props.values.firstName}
+              error={props.touched.firstName && props.errors.firstName}
+              onChangeText={(text) => props.setFieldValue('firstName', text)}
+            />
+            <TextInput
+              label="Last Name"
+              type="text"
+              value={props.values.lastName}
+              error={props.touched.lastName && props.errors.lastName}
+              onChangeText={(text) => props.setFieldValue('lastName', text)}
+            />
+          </PaddedView>
+        </TableView>
+        <TableView>
+          <PaddedView>
+            <TextInput
+              label="Email"
+              type="email"
+              value={props.values.email}
+              error={props.touched.email && props.errors.email}
+              onChangeText={(text) => props.setFieldValue('email', text)}
             />
           </PaddedView>
-        </Footer>
-      </FlexedView>
-    </KeyboardAvoidingView>
+        </TableView>
+      </KeyboardAwareScrollView>
+      <SafeAreaView>
+        <PaddedView>
+          <Button
+            disabled={!props.isValid || props.isSubmitting}
+            onPress={props.handleSubmit}
+            title="Save"
+            loading={props.isSubmitting}
+          />
+        </PaddedView>
+      </SafeAreaView>
+    </FlexedView>
   );
 
   render() {
     return (
-      <Query query={GET_USER_PROFILE} fetchPolicy="cache-and-network">
+      <Query query={getUserProfile} fetchPolicy="cache-and-network">
         {({ data: { currentUser = { profile: {} } } = {} }) => {
           const { firstName, lastName, email } = currentUser.profile;
 
           return (
             <Mutation
-              mutation={UPDATE_CURRENT_USER}
+              mutation={updateCurrentUser}
               update={async (cache, { data: { updateProfileFields } }) => {
                 await cache.writeQuery({
-                  query: GET_USER_PROFILE,
+                  query: getUserProfile,
                   data: {
                     currentUser: {
                       ...currentUser,
diff --git a/apolloschurchapp/src/user-settings/UserSettings.tests.js b/apolloschurchapp/src/user-settings/UserSettings.tests.js
index 9a1f3d3..5cb5377 100644
--- a/apolloschurchapp/src/user-settings/UserSettings.tests.js
+++ b/apolloschurchapp/src/user-settings/UserSettings.tests.js
@@ -4,14 +4,14 @@ import wait from 'waait';
 
 import Providers from 'apolloschurchapp/src/Providers';
 
-import GET_LOGIN_STATE from '../tabs/connect/getLoginState';
+import getLoginState from '../tabs/connect/getLoginState';
 import UserSettings from '.';
 
 describe('UserSettings component', () => {
   it('renders UserSettings when logged in', async () => {
     const mock = {
       request: {
-        query: GET_LOGIN_STATE,
+        query: getLoginState,
       },
       result: {
         data: { isLoggedIn: true },
diff --git a/apolloschurchapp/src/user-settings/index.js b/apolloschurchapp/src/user-settings/index.js
index 30b1044..c386327 100644
--- a/apolloschurchapp/src/user-settings/index.js
+++ b/apolloschurchapp/src/user-settings/index.js
@@ -18,7 +18,7 @@ import {
 import { WebBrowserConsumer } from 'apolloschurchapp/src/ui/WebBrowser';
 import AvatarForm from 'apolloschurchapp/src/ui/UserAvatarView/AvatarForm';
 
-import { GET_LOGIN_STATE, LOGOUT } from '@apollosproject/ui-auth';
+import { getLoginState, logout } from '@apollosproject/ui-auth';
 
 const AvatarView = styled({
   alignItems: 'center',
@@ -43,7 +43,7 @@ class UserSettings extends PureComponent {
 
   render() {
     return (
-      <Query query={GET_LOGIN_STATE} fetchPolicy="cache-and-network">
+      <Query query={getLoginState} fetchPolicy="cache-and-network">
         {({ data: { isLoggedIn = false, loading } }) => {
           if (loading) return <ActivityIndicator />;
           if (!isLoggedIn) return null;
@@ -129,7 +129,7 @@ class UserSettings extends PureComponent {
                       </Touchable>
                     </TableView>
                     <TableView>
-                      <Mutation mutation={LOGOUT}>
+                      <Mutation mutation={logout}>
                         {(handleLogout) => (
                           <Touchable
                             onPress={async () => {
diff --git a/apolloschurchapp/src/utils/content/share.js b/apolloschurchapp/src/utils/content/share.js
index 7a8efae..e04063d 100644
--- a/apolloschurchapp/src/utils/content/share.js
+++ b/apolloschurchapp/src/utils/content/share.js
@@ -1,14 +1,19 @@
 import { Platform, Share } from 'react-native';
 // import { get } from 'lodash';
-// import { track, events } from 'apolloschurchapp/src/analytics';
+import { track, events } from 'apolloschurchapp/src/analytics';
 // import getSiteLink from './getSiteLink';
 
-const share = ({ title, url }) => {
+const share = ({ title, url, id = '' }) => {
   Share.share({
     title,
     message: Platform.OS === 'android' ? `${title}\n${url}` : title,
     url,
   });
+
+  track({
+    eventName: events.ShareContent,
+    properties: { title, id },
+  });
 };
 
 export default share;
diff --git a/apolloschurchapp/src/utils/fetchMoreResolver.js b/apolloschurchapp/src/utils/fetchMoreResolver.js
deleted file mode 100644
index d812283..0000000
--- a/apolloschurchapp/src/utils/fetchMoreResolver.js
+++ /dev/null
@@ -1,42 +0,0 @@
-import get from 'lodash/get';
-import set from 'lodash/fp/set';
-
-export default function fetchMoreResolver({
-  collectionName,
-  variables,
-  fetchMore,
-  data,
-} = {}) {
-  return () => {
-    const pageInfoPath = `${collectionName}.pageInfo`;
-    const edgePath = `${collectionName}.edges`;
-
-    const after = get(data, `${pageInfoPath}.endCursor`);
-    if (!after) return;
-
-    fetchMore({
-      variables: { ...variables, after },
-      updateQuery: (previousResult, { fetchMoreResult }) => {
-        // combine previous data and fetchMore data
-        const newDataWithPageInfo = set(
-          pageInfoPath,
-          {
-            ...get(previousResult, pageInfoPath, {}),
-            ...get(fetchMoreResult, pageInfoPath, {}),
-          },
-          previousResult
-        );
-        const newDataWithAdditionalItems = set(
-          edgePath,
-          [
-            ...get(previousResult, edgePath, []),
-            ...get(fetchMoreResult, edgePath, []),
-          ],
-          newDataWithPageInfo
-        );
-
-        return newDataWithAdditionalItems;
-      },
-    });
-  };
-}
diff --git a/apolloschurchapp/src/utils/testUtils.js b/apolloschurchapp/src/utils/testUtils.js
index 38d20f7..89cdffa 100644
--- a/apolloschurchapp/src/utils/testUtils.js
+++ b/apolloschurchapp/src/utils/testUtils.js
@@ -1,6 +1,7 @@
 /* eslint-disable import/prefer-default-export */
 import renderer from 'react-test-renderer';
-import wait from 'waait';
+
+const wait = (time) => new Promise((resolve) => setTimeout(resolve, time));
 
 export const renderWithApolloData = async (component) => {
   const tree = renderer.create(component);
diff --git a/apolloschurchapp/storybook/Welcome/Intro.js b/apolloschurchapp/storybook/Welcome/Intro.js
deleted file mode 100644
index 2e8b8d7..0000000
--- a/apolloschurchapp/storybook/Welcome/Intro.js
+++ /dev/null
@@ -1,43 +0,0 @@
-import React from 'react';
-import { Paragraph, BodyText } from '@apollosproject/ui-kit';
-
-import { Slide, SlideContent } from '@apollosproject/ui-onboarding';
-
-const Intro = () => (
-  <Slide>
-    <SlideContent title={`Welcome to ${'\n'}Apollos Storybook!`} icon>
-      <Paragraph>
-        <BodyText>
-          Storybook is the component workshop for the Apollos app platform.
-        </BodyText>
-      </Paragraph>
-      <Paragraph>
-        <BodyText>
-          A story is a single state of one or more UI components. You can have
-          as many stories as you want.
-        </BodyText>
-      </Paragraph>
-      <Paragraph>
-        <BodyText>
-          We use Storybook to help document UI and to serve as visual test cases
-          for different states.
-        </BodyText>
-      </Paragraph>
-      <Paragraph>
-        <BodyText>
-          Open the navigator using the navigation bar at the bottom of the
-          screen to navigate the available stories.
-        </BodyText>
-      </Paragraph>
-      <Paragraph>
-        <BodyText>
-          The stories defined inside of your app will be listed first, with
-          Apollos UI stories below them. If you setup a theme, all of the
-          stories will reflect your theme.
-        </BodyText>
-      </Paragraph>
-    </SlideContent>
-  </Slide>
-);
-
-export default Intro;
diff --git a/apolloschurchapp/storybook/Welcome/Welcome.stories.js b/apolloschurchapp/storybook/Welcome/Welcome.stories.js
new file mode 100644
index 0000000..f1c9a65
--- /dev/null
+++ b/apolloschurchapp/storybook/Welcome/Welcome.stories.js
@@ -0,0 +1,9 @@
+import React from 'react';
+import { storiesOf } from '@storybook/react-native';
+import { linkTo } from '@storybook/addon-links';
+
+import Welcome from '.';
+
+storiesOf('Welcome', module).add('to Storybook', () => (
+  <Welcome showApp={linkTo('Button')} />
+));
diff --git a/apolloschurchapp/storybook/Welcome/index.js b/apolloschurchapp/storybook/Welcome/index.js
index 6c1e852..78f7086 100644
--- a/apolloschurchapp/storybook/Welcome/index.js
+++ b/apolloschurchapp/storybook/Welcome/index.js
@@ -1,9 +1,57 @@
 import React from 'react';
-import { storiesOf } from '@apollosproject/ui-storybook';
+import PropTypes from 'prop-types';
+import { View, Text } from 'react-native';
 
-import App from '../../src';
-import Intro from './Intro';
+export default class Welcome extends React.Component {
+  styles = {
+    wrapper: {
+      flex: 1,
+      padding: 24,
+      justifyContent: 'center',
+    },
+    header: {
+      fontSize: 18,
+      marginBottom: 18,
+    },
+    content: {
+      fontSize: 12,
+      marginBottom: 10,
+      lineHeight: 18,
+    },
+  };
 
-storiesOf('Storybook', module)
-  .add('Welcome', () => <Intro />)
-  .add('App', () => <App />);
+  showApp(event) {
+    event.preventDefault();
+    if (this.props.showApp) this.props.showApp();
+  }
+
+  render() {
+    return (
+      <View style={this.styles.wrapper}>
+        <Text style={this.styles.header}>
+          Welcome to React Native Storybook
+        </Text>
+        <Text style={this.styles.content}>
+          This is a UI Component development environment for your React Native
+          app. Here you can display and interact with your UI components as
+          stories. A story is a single state of one or more UI components. You
+          can have as many stories as you want. In other words a story is like a
+          visual test case.
+        </Text>
+        <Text style={this.styles.content}>
+          We have added some stories inside the &quot;storybook/stories&quot;
+          directory for examples. Try editing the
+          &quot;storybook/stories/Welcome.js&quot; file to edit this message.
+        </Text>
+      </View>
+    );
+  }
+}
+
+Welcome.defaultProps = {
+  showApp: null,
+};
+
+Welcome.propTypes = {
+  showApp: PropTypes.func,
+};
diff --git a/apolloschurchapp/storybook/addons.js b/apolloschurchapp/storybook/addons.js
new file mode 100644
index 0000000..6aed412
--- /dev/null
+++ b/apolloschurchapp/storybook/addons.js
@@ -0,0 +1,2 @@
+import '@storybook/addon-actions/register';
+import '@storybook/addon-links/register';
diff --git a/apolloschurchapp/storybook/index.android.js b/apolloschurchapp/storybook/index.android.js
new file mode 100644
index 0000000..f0513c5
--- /dev/null
+++ b/apolloschurchapp/storybook/index.android.js
@@ -0,0 +1,3 @@
+import StorybookUI from './storybook';
+
+export default StorybookUI;
diff --git a/apolloschurchapp/storybook/index.ios.js b/apolloschurchapp/storybook/index.ios.js
new file mode 100644
index 0000000..f0513c5
--- /dev/null
+++ b/apolloschurchapp/storybook/index.ios.js
@@ -0,0 +1,3 @@
+import StorybookUI from './storybook';
+
+export default StorybookUI;
diff --git a/apolloschurchapp/storybook/index.js b/apolloschurchapp/storybook/index.js
index bcb07cf..f0513c5 100644
--- a/apolloschurchapp/storybook/index.js
+++ b/apolloschurchapp/storybook/index.js
@@ -1,21 +1,3 @@
-import StorybookUI, {
-  loadApollosStories,
-  addApollosProviderDecorator,
-  configure,
-} from '@apollosproject/ui-storybook';
-import SplashScreen from 'react-native-splash-screen';
-import Providers from '../src/Providers';
-
-import { loadStories } from './storyLoader';
-
-addApollosProviderDecorator(Providers);
-
-configure(() => {
-  require('./Welcome');
-  loadStories();
-  loadApollosStories();
-
-  SplashScreen.hide();
-}, module);
+import StorybookUI from './storybook';
 
 export default StorybookUI;
diff --git a/apolloschurchapp/storybook/storybook.js b/apolloschurchapp/storybook/storybook.js
new file mode 100644
index 0000000..19be073
--- /dev/null
+++ b/apolloschurchapp/storybook/storybook.js
@@ -0,0 +1,35 @@
+import React, { Component } from 'react';
+import { AppRegistry } from 'react-native';
+import {
+  getStorybookUI,
+  configure,
+  addDecorator,
+} from '@storybook/react-native';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+// storyLoader.js is generated on storybook start. next line disabled for CI test.
+import { loadStories } from './storyLoader'; // eslint-disable-line
+
+addDecorator((renderStorybook) => <Providers>{renderStorybook()}</Providers>);
+
+// import stories
+configure(() => {
+  loadStories();
+}, module);
+
+// This assumes that storybook is running on the same host as your RN packager,
+// to set manually use, e.g. host: 'localhost' option
+const StorybookUIRoot = getStorybookUI({ port: 7007, onDeviceUI: true });
+
+// react-native hot module loader must take in a Class - https://github.com/facebook/react-native/issues/10991
+// https://github.com/storybooks/storybook/issues/2081
+// eslint-disable-next-line react/prefer-stateless-function
+class StorybookUIHMRRoot extends Component {
+  render() {
+    return <StorybookUIRoot />;
+  }
+}
+
+AppRegistry.registerComponent('apolloschurchapp', () => StorybookUIHMRRoot);
+export default StorybookUIHMRRoot;
