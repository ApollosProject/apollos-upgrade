diff --git a/apolloschurchapp/__mocks__/@react-native-community/async-storage/index.js b/apolloschurchapp/__mocks__/@react-native-community/async-storage/index.js
new file mode 100644
index 0000000..a4bf3f4
--- /dev/null
+++ b/apolloschurchapp/__mocks__/@react-native-community/async-storage/index.js
@@ -0,0 +1,23 @@
+let cache = {};
+export default {
+  setItem: (key, value) =>
+    new Promise((resolve, reject) =>
+      typeof key !== 'string' || typeof value !== 'string'
+        ? reject(new Error('key and value must be string'))
+        : resolve((cache[key] = value))
+    ),
+  getItem: (key, value) =>
+    new Promise((resolve) =>
+      cache.hasOwnProperty(key) ? resolve(cache[key]) : resolve(null)
+    ),
+  removeItem: (key) =>
+    new Promise((resolve, reject) =>
+      cache.hasOwnProperty(key)
+        ? resolve(delete cache[key])
+        : reject('No such key!')
+    ),
+  clear: (key) => new Promise((resolve, reject) => resolve((cache = {}))),
+
+  getAllKeys: (key) =>
+    new Promise((resolve, reject) => resolve(Object.keys(cache))),
+};
diff --git a/apolloschurchapp/__mocks__/@react-native-community/geolocation/index.js b/apolloschurchapp/__mocks__/@react-native-community/geolocation/index.js
new file mode 100644
index 0000000..0e77776
--- /dev/null
+++ b/apolloschurchapp/__mocks__/@react-native-community/geolocation/index.js
@@ -0,0 +1,3 @@
+export default {
+  getCurrentPosition: async () => null,
+};
diff --git a/apolloschurchapp/android/app/build.gradle b/apolloschurchapp/android/app/build.gradle
index 12def44..64b8b5b 100644
--- a/apolloschurchapp/android/app/build.gradle
+++ b/apolloschurchapp/android/app/build.gradle
@@ -121,10 +121,10 @@ android {
         applicationId "com.apolloschurch.app"
         minSdkVersion rootProject.ext.minSdkVersion
         targetSdkVersion rootProject.ext.targetSdkVersion
-        versionCode 11
-        versionName "0.8.6"
+        versionCode 19
+        versionName "1.1.0"
         ndk {
-            abiFilters "armeabi-v7a", "x86"
+            abiFilters "armeabi-v7a", "x86", "arm64-v8a", "x86_64"
         }
         resValue "string", "build_config_package", "com.apolloschurchapp"
     }
@@ -158,13 +158,15 @@ android {
 }
 
 dependencies {
-       // added this and the two google play packages below when upgraded rn-maps to 0.24.2
+    implementation project(':@react-native-community_async-storage')
+    implementation project(':react-native-gesture-handler')
+    // added this and the two google play packages below when upgraded rn-maps to 0.24.2
     implementation(project(':react-native-maps')){
       exclude group: 'com.google.android.gms', module: 'play-services-base'
       exclude group: 'com.google.android.gms', module: 'play-services-maps'
     }
-    implementation 'com.google.android.gms:play-services-base:10.0.1'
-    implementation 'com.google.android.gms:play-services-maps:10.0.1'
+    implementation 'com.google.android.gms:play-services-base:16.1.0'
+    implementation 'com.google.android.gms:play-services-maps:16.1.0'
     implementation project(':rn-fetch-blob')
     implementation project(':react-native-webview')
     implementation project(':react-native-video')
@@ -177,6 +179,7 @@ dependencies {
     implementation project(':react-native-image-picker')
     implementation project(':react-native-device-info')
     implementation project(':react-native-config')
+    implementation project(':react-native-geolocation-service')
     implementation fileTree(dir: "libs", include: ["*.jar"])
     implementation "com.android.support:appcompat-v7:${rootProject.ext.supportLibVersion}"
     implementation "com.facebook.react:react-native:+"  // From node_modules
diff --git a/apolloschurchapp/android/app/src/main/AndroidManifest.xml b/apolloschurchapp/android/app/src/main/AndroidManifest.xml
index 5e6aee9..fd72c6c 100644
--- a/apolloschurchapp/android/app/src/main/AndroidManifest.xml
+++ b/apolloschurchapp/android/app/src/main/AndroidManifest.xml
@@ -5,7 +5,7 @@
     <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
     <uses-permission android:name="android.permission.CAMERA" />
     <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION"/>
-
+    <uses-permission android:name="android.permission.FOREGROUND_SERVICE" />
 
     <application
       android:name=".MainApplication"
@@ -30,7 +30,7 @@
           <action android:name="android.intent.action.VIEW" />
           <category android:name="android.intent.category.DEFAULT" />
           <category android:name="android.intent.category.BROWSABLE" />
-          <data android:scheme="peopleapp" android:host="people" /> // A
+          <data android:scheme="peopleapp" android:host="people" />
         </intent-filter>
       </activity>
       <activity
diff --git a/apolloschurchapp/android/app/src/main/java/com/apolloschurchapp/MainActivity.java b/apolloschurchapp/android/app/src/main/java/com/apolloschurchapp/MainActivity.java
index 0b9f1ce..afc7e3d 100644
--- a/apolloschurchapp/android/app/src/main/java/com/apolloschurchapp/MainActivity.java
+++ b/apolloschurchapp/android/app/src/main/java/com/apolloschurchapp/MainActivity.java
@@ -1,6 +1,9 @@
 package com.apolloschurchapp;
 import android.os.Bundle;
 import com.facebook.react.ReactActivity;
+import com.facebook.react.ReactActivityDelegate;
+import com.facebook.react.ReactRootView;
+import com.swmansion.gesturehandler.react.RNGestureHandlerEnabledRootView;
 import org.devio.rn.splashscreen.SplashScreen;
 
 public class MainActivity extends ReactActivity {
@@ -17,4 +20,14 @@ public class MainActivity extends ReactActivity {
     protected String getMainComponentName() {
         return "apolloschurchapp";
     }
+
+    @Override
+    protected ReactActivityDelegate createReactActivityDelegate() {
+      return new ReactActivityDelegate(this, getMainComponentName()) {
+        @Override
+        protected ReactRootView createRootView() {
+         return new RNGestureHandlerEnabledRootView(MainActivity.this);
+        }
+      };
+    }
 }
diff --git a/apolloschurchapp/android/app/src/main/java/com/apolloschurchapp/MainApplication.java b/apolloschurchapp/android/app/src/main/java/com/apolloschurchapp/MainApplication.java
index aa318e0..6793677 100644
--- a/apolloschurchapp/android/app/src/main/java/com/apolloschurchapp/MainApplication.java
+++ b/apolloschurchapp/android/app/src/main/java/com/apolloschurchapp/MainApplication.java
@@ -2,7 +2,10 @@ package com.apolloschurchapp;
 
 import android.app.Application;
 
+import com.agontuk.RNFusedLocation.RNFusedLocationPackage;
 import com.facebook.react.ReactApplication;
+import com.reactnativecommunity.asyncstorage.AsyncStoragePackage;
+import com.swmansion.gesturehandler.react.RNGestureHandlerPackage;
 import com.airbnb.android.react.maps.MapsPackage;
 import com.RNFetchBlob.RNFetchBlobPackage;
 import com.reactnativecommunity.webview.RNCWebViewPackage;
@@ -36,6 +39,9 @@ public class MainApplication extends Application implements ReactApplication {
     protected List<ReactPackage> getPackages() {
       return Arrays.<ReactPackage>asList(
           new MainReactPackage(),
+              new RNFusedLocationPackage(),
+            new AsyncStoragePackage(),
+            new RNGestureHandlerPackage(),
             new MapsPackage(),
             new RNFetchBlobPackage(),
             new RNCWebViewPackage(),
diff --git a/apolloschurchapp/android/app/src/main/res/values/styles.xml b/apolloschurchapp/android/app/src/main/res/values/styles.xml
index 328c4be..de75bed 100644
--- a/apolloschurchapp/android/app/src/main/res/values/styles.xml
+++ b/apolloschurchapp/android/app/src/main/res/values/styles.xml
@@ -9,8 +9,4 @@
         <item name="android:windowBackground">@drawable/background_splash</item>
     </style>
 
-    <style name="SplashScreenTheme" parent="SplashScreen_SplashTheme">
-        <item name="android:windowIsTranslucent">true</item>
-    </style>
-
 </resources>
diff --git a/apolloschurchapp/android/build.gradle b/apolloschurchapp/android/build.gradle
index 50a195a..fcc6be8 100644
--- a/apolloschurchapp/android/build.gradle
+++ b/apolloschurchapp/android/build.gradle
@@ -13,7 +13,7 @@ buildscript {
         jcenter()
     }
     dependencies {
-        classpath 'com.android.tools.build:gradle:3.3.1'
+        classpath("com.android.tools.build:gradle:3.4.0")
 
         // NOTE: Do not place your application dependencies here; they belong
         // in the individual module build.gradle files
diff --git a/apolloschurchapp/android/gradle/wrapper/gradle-wrapper.properties b/apolloschurchapp/android/gradle/wrapper/gradle-wrapper.properties
index 019065d..3c7a7c8 100644
--- a/apolloschurchapp/android/gradle/wrapper/gradle-wrapper.properties
+++ b/apolloschurchapp/android/gradle/wrapper/gradle-wrapper.properties
@@ -2,4 +2,4 @@ distributionBase=GRADLE_USER_HOME
 distributionPath=wrapper/dists
 zipStoreBase=GRADLE_USER_HOME
 zipStorePath=wrapper/dists
-distributionUrl=https\://services.gradle.org/distributions/gradle-4.10.2-all.zip
+distributionUrl=https\://services.gradle.org/distributions/gradle-5.4.1-all.zip
\ No newline at end of file
diff --git a/apolloschurchapp/android/gradlew b/apolloschurchapp/android/gradlew
index cccdd3d..3e84efe 100755
--- a/apolloschurchapp/android/gradlew
+++ b/apolloschurchapp/android/gradlew
@@ -28,7 +28,7 @@ APP_NAME="Gradle"
 APP_BASE_NAME=`basename "$0"`
 
 # Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
-DEFAULT_JVM_OPTS=""
+DEFAULT_JVM_OPTS='"-Xmx64m" "-Xms64m"'
 
 # Use the maximum available, or set MAX_FD != -1 to use that value.
 MAX_FD="maximum"
diff --git a/apolloschurchapp/android/gradlew.bat b/apolloschurchapp/android/gradlew.bat
index e95643d..1688408 100644
--- a/apolloschurchapp/android/gradlew.bat
+++ b/apolloschurchapp/android/gradlew.bat
@@ -14,7 +14,7 @@ set APP_BASE_NAME=%~n0
 set APP_HOME=%DIRNAME%
 
 @rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
-set DEFAULT_JVM_OPTS=
+set DEFAULT_JVM_OPTS="-Xmx64m" "-Xms64m"
 
 @rem Find java.exe
 if defined JAVA_HOME goto findJavaFromJavaHome
diff --git a/apolloschurchapp/android/settings.gradle b/apolloschurchapp/android/settings.gradle
index d705770..5eb9062 100644
--- a/apolloschurchapp/android/settings.gradle
+++ b/apolloschurchapp/android/settings.gradle
@@ -1,4 +1,10 @@
 rootProject.name = 'apolloschurchapp'
+include ':react-native-geolocation-service'
+project(':react-native-geolocation-service').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-geolocation-service/android')
+include ':@react-native-community_async-storage'
+project(':@react-native-community_async-storage').projectDir = new File(rootProject.projectDir, '../node_modules/@react-native-community/async-storage/android')
+include ':react-native-gesture-handler'
+project(':react-native-gesture-handler').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-gesture-handler/android')
 include ':react-native-maps'
 project(':react-native-maps').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-maps/lib/android')
 include ':rn-fetch-blob'
diff --git a/apolloschurchapp/apollos.json b/apolloschurchapp/apollos.json
index 614d45e..ecc542d 100644
--- a/apolloschurchapp/apollos.json
+++ b/apolloschurchapp/apollos.json
@@ -1,4 +1,4 @@
 {
-    "version": "0.8.6",
+    "version": "1.1.0",
     "environment": "client"
 }
\ No newline at end of file
diff --git a/apolloschurchapp/ios/apolloschurchapp-tvOS/Info.plist b/apolloschurchapp/ios/apolloschurchapp-tvOS/Info.plist
index 9bfe7a7..e637def 100644
--- a/apolloschurchapp/ios/apolloschurchapp-tvOS/Info.plist
+++ b/apolloschurchapp/ios/apolloschurchapp-tvOS/Info.plist
@@ -15,11 +15,11 @@
 	<key>CFBundlePackageType</key>
 	<string>APPL</string>
 	<key>CFBundleShortVersionString</key>
-	<string>0.8.6</string>
+	<string>1.1.0</string>
 	<key>CFBundleSignature</key>
 	<string>????</string>
 	<key>CFBundleVersion</key>
-	<string>11</string>
+	<string>19</string>
 	<key>LSRequiresIPhoneOS</key>
 	<true />
 	<key>UILaunchStoryboardName</key>
diff --git a/apolloschurchapp/ios/apolloschurchapp-tvOSTests/Info.plist b/apolloschurchapp/ios/apolloschurchapp-tvOSTests/Info.plist
index 81df5aa..6a7f9d6 100644
--- a/apolloschurchapp/ios/apolloschurchapp-tvOSTests/Info.plist
+++ b/apolloschurchapp/ios/apolloschurchapp-tvOSTests/Info.plist
@@ -15,10 +15,10 @@
 	<key>CFBundlePackageType</key>
 	<string>BNDL</string>
 	<key>CFBundleShortVersionString</key>
-	<string>0.8.6</string>
+	<string>1.1.0</string>
 	<key>CFBundleSignature</key>
 	<string>????</string>
 	<key>CFBundleVersion</key>
-	<string>11</string>
+	<string>19</string>
 </dict>
 </plist>
diff --git a/apolloschurchapp/ios/apolloschurchapp.xcodeproj/project.pbxproj b/apolloschurchapp/ios/apolloschurchapp.xcodeproj/project.pbxproj
index 70fcb47..162a5d3 100644
--- a/apolloschurchapp/ios/apolloschurchapp.xcodeproj/project.pbxproj
+++ b/apolloschurchapp/ios/apolloschurchapp.xcodeproj/project.pbxproj
@@ -5,6 +5,7 @@
 	};
 	objectVersion = 46;
 	objects = {
+
 /* Begin PBXBuildFile section */
 		00C302E51ABCBA2D00DB3ED1 /* libRCTActionSheet.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 00C302AC1ABCB8CE00DB3ED1 /* libRCTActionSheet.a */; };
 		00C302E71ABCBA2D00DB3ED1 /* libRCTGeolocation.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 00C302BA1ABCB90400DB3ED1 /* libRCTGeolocation.a */; };
@@ -55,6 +56,7 @@
 		832341BD1AAA6AB300B99B32 /* libRCTText.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 832341B51AAA6A8300B99B32 /* libRCTText.a */; };
 		834122CBBA8E476A8652994F /* libRNCWebView.a in Frameworks */ = {isa = PBXBuildFile; fileRef = AE039A0F55BB4B989835F759 /* libRNCWebView.a */; };
 		894732A70B4740678E85B593 /* Inter-UI-BoldItalic.otf in Resources */ = {isa = PBXBuildFile; fileRef = 2F5410F239E9477B9C2E86BD /* Inter-UI-BoldItalic.otf */; };
+		8962194BB2D748DDB6DA530B /* libRNGestureHandler.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 90612A20BF754A4E914906AD /* libRNGestureHandler.a */; };
 		90743C40BF544F10A810C43C /* DroidSerif-Italic.ttf in Resources */ = {isa = PBXBuildFile; fileRef = ADC3D2DB245545ADB1CAB3FE /* DroidSerif-Italic.ttf */; };
 		93A2B0A9328A46A4B7DD5EFA /* DroidSerif-Regular.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 4E007B33EDD74B82AEF02C24 /* DroidSerif-Regular.ttf */; };
 		A975E0B94A5D44AEB410E546 /* libReactNativeConfig.a in Frameworks */ = {isa = PBXBuildFile; fileRef = CF3175A44C4B4612AD79C04E /* libReactNativeConfig.a */; };
@@ -62,12 +64,15 @@
 		ADBDB9381DFEBF1600ED6528 /* libRCTBlob.a in Frameworks */ = {isa = PBXBuildFile; fileRef = ADBDB9271DFEBF0700ED6528 /* libRCTBlob.a */; };
 		B02F194A3F6A4FE29AC799B4 /* DroidSerif-BoldItalic.ttf in Resources */ = {isa = PBXBuildFile; fileRef = A93F9D112A034626A9421759 /* DroidSerif-BoldItalic.ttf */; };
 		B0D490A62BC143209FD3BFE8 /* libMusicControl.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 393EA40CFC2843BF9BB667B3 /* libMusicControl.a */; };
+		B2A8F7EFB7794DEFA6AEA50E /* libRNGestureHandler-tvOS.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 375F29B07CD141529D4EB2F7 /* libRNGestureHandler-tvOS.a */; };
 		B6899815EB024B7987617799 /* libRNSVG.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 430F3786C56541B198E03A02 /* libRNSVG.a */; };
 		CB1584B0772D4A67A81FC83F /* libMusicControl-tvOS.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 74625A1E54234FB7BE12070D /* libMusicControl-tvOS.a */; };
 		CE33B866C2DE49DEBE1AF23F /* libSplashScreen.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 1398ECED9AE14FD19B92232D /* libSplashScreen.a */; };
 		CFE4716D4F6D4ABF9ED485AC /* libRNDeviceInfo.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 0F155E84A5784CBE8D95A974 /* libRNDeviceInfo.a */; };
 		D2F560374F3341308A1579E7 /* libRCTVideo.a in Frameworks */ = {isa = PBXBuildFile; fileRef = C7FE26CDA2DC4CDBAB580A2F /* libRCTVideo.a */; };
+		DCC7DAB922F237B0001A2EA8 /* libRNCGeolocation.a in Frameworks */ = {isa = PBXBuildFile; fileRef = DCC7DAAD22F23799001A2EA8 /* libRNCGeolocation.a */; };
 		E28D37FEDA0245DBAC6552D3 /* libAirMaps.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 9862436C289A498D8B2E6201 /* libAirMaps.a */; };
+		E6525241950445C0929495F2 /* libRNCAsyncStorage.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 2C4605F404864B4EBBDF09DB /* libRNCAsyncStorage.a */; };
 		ED297163215061F000B7C4FE /* JavaScriptCore.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = ED297162215061F000B7C4FE /* JavaScriptCore.framework */; };
 		ED2971652150620600B7C4FE /* JavaScriptCore.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = ED2971642150620600B7C4FE /* JavaScriptCore.framework */; };
 		FCB3069DB5DD4170B2CAEFC4 /* Inter-UI-MediumItalic.otf in Resources */ = {isa = PBXBuildFile; fileRef = A460FD7884FD4574A818005A /* Inter-UI-MediumItalic.otf */; };
@@ -501,6 +506,34 @@
 			remoteGlobalIDString = 6D42A7D820341E6800A0D1AE;
 			remoteInfo = RNPassKit;
 		};
+		BFB447C8230303A60021E75E /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 4BC84B9C6F30419EBA142384 /* RNGestureHandler.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 134814201AA4EA6300B7C361;
+			remoteInfo = RNGestureHandler;
+		};
+		BFB447CA230303A60021E75E /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 4BC84B9C6F30419EBA142384 /* RNGestureHandler.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = B5C32A36220C603B000FFB8D;
+			remoteInfo = "RNGestureHandler-tvOS";
+		};
+		DCC7DAAC22F23799001A2EA8 /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = DCC7DA7622F23799001A2EA8 /* RNCGeolocation.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 134814201AA4EA6300B7C361;
+			remoteInfo = RNCGeolocation;
+		};
+		DCD3CDDD22E1011100DD3F4E /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = D74E40AB9C7A4D2B80BC5A2D /* RNCAsyncStorage.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 134814201AA4EA6300B7C361;
+			remoteInfo = RNCAsyncStorage;
+		};
 /* End PBXContainerItemProxy section */
 
 /* Begin PBXFileReference section */
@@ -533,18 +566,21 @@
 		146833FF1AC3E56700842450 /* React.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = React.xcodeproj; path = "../node_modules/react-native/React/React.xcodeproj"; sourceTree = "<group>"; };
 		1C0ED1C4FB474DC8A829950D /* AirMaps.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = AirMaps.xcodeproj; path = "../node_modules/react-native-maps/lib/ios/AirMaps.xcodeproj"; sourceTree = "<group>"; };
 		2130E622CDAD43DF896EFF80 /* RNSVG.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = RNSVG.xcodeproj; path = "../node_modules/react-native-svg/ios/RNSVG.xcodeproj"; sourceTree = "<group>"; };
+		2C4605F404864B4EBBDF09DB /* libRNCAsyncStorage.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libRNCAsyncStorage.a; sourceTree = "<group>"; };
 		2D02E47B1E0B4A5D006451C7 /* apolloschurchapp-tvOS.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = "apolloschurchapp-tvOS.app"; sourceTree = BUILT_PRODUCTS_DIR; };
 		2D02E4901E0B4A5D006451C7 /* apolloschurchapp-tvOSTests.xctest */ = {isa = PBXFileReference; explicitFileType = wrapper.cfbundle; includeInIndex = 0; path = "apolloschurchapp-tvOSTests.xctest"; sourceTree = BUILT_PRODUCTS_DIR; };
 		2D16E6891FA4F8E400B85C8A /* libReact.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; path = libReact.a; sourceTree = BUILT_PRODUCTS_DIR; };
 		2F5410F239E9477B9C2E86BD /* Inter-UI-BoldItalic.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-BoldItalic.otf"; path = "../assets/fonts/Inter-UI-BoldItalic.otf"; sourceTree = "<group>"; };
 		34667F4711264343B035ACD0 /* RCTOneSignal.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = RCTOneSignal.xcodeproj; path = "../node_modules/react-native-onesignal/ios/RCTOneSignal.xcodeproj"; sourceTree = "<group>"; };
 		349D96BF833B4B1C88D02412 /* libSafariViewManager.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libSafariViewManager.a; sourceTree = "<group>"; };
+		375F29B07CD141529D4EB2F7 /* libRNGestureHandler-tvOS.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = "libRNGestureHandler-tvOS.a"; sourceTree = "<group>"; };
 		3923D6EFF26D4A53B8BDF8C6 /* RNAirplay.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = RNAirplay.xcodeproj; path = "../node_modules/react-native-airplay-btn/ios/RNAirplay.xcodeproj"; sourceTree = "<group>"; };
 		393EA40CFC2843BF9BB667B3 /* libMusicControl.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libMusicControl.a; sourceTree = "<group>"; };
 		39E16D6487A34F4D9B8C6EC1 /* RNDeviceInfo.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = RNDeviceInfo.xcodeproj; path = "../node_modules/react-native-device-info/ios/RNDeviceInfo.xcodeproj"; sourceTree = "<group>"; };
 		3AB4C6D7F52C428FA62777F1 /* libRNPassKit.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libRNPassKit.a; sourceTree = "<group>"; };
 		430F3786C56541B198E03A02 /* libRNSVG.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libRNSVG.a; sourceTree = "<group>"; };
 		43F1D28CACD04757A0FB29A6 /* BVLinearGradient.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = BVLinearGradient.xcodeproj; path = "../node_modules/react-native-linear-gradient/BVLinearGradient.xcodeproj"; sourceTree = "<group>"; };
+		4BC84B9C6F30419EBA142384 /* RNGestureHandler.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = RNGestureHandler.xcodeproj; path = "../node_modules/react-native-gesture-handler/ios/RNGestureHandler.xcodeproj"; sourceTree = "<group>"; };
 		4E007B33EDD74B82AEF02C24 /* DroidSerif-Regular.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "DroidSerif-Regular.ttf"; path = "../assets/fonts/DroidSerif-Regular.ttf"; sourceTree = "<group>"; };
 		4ED51CB73778472686A7279B /* RNCWebView.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = RNCWebView.xcodeproj; path = "../node_modules/react-native-webview/ios/RNCWebView.xcodeproj"; sourceTree = "<group>"; };
 		5A5A2BC2998547F4816B82E4 /* Inter-UI-BlackItalic.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-BlackItalic.otf"; path = "../assets/fonts/Inter-UI-BlackItalic.otf"; sourceTree = "<group>"; };
@@ -558,6 +594,7 @@
 		78C398B01ACF4ADC00677621 /* RCTLinking.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = RCTLinking.xcodeproj; path = "../node_modules/react-native/Libraries/LinkingIOS/RCTLinking.xcodeproj"; sourceTree = "<group>"; };
 		7A505BEDA0674A7F9DD875ED /* libRNDeviceInfo-tvOS.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = "libRNDeviceInfo-tvOS.a"; sourceTree = "<group>"; };
 		832341B01AAA6A8300B99B32 /* RCTText.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = RCTText.xcodeproj; path = "../node_modules/react-native/Libraries/Text/RCTText.xcodeproj"; sourceTree = "<group>"; };
+		90612A20BF754A4E914906AD /* libRNGestureHandler.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libRNGestureHandler.a; sourceTree = "<group>"; };
 		97222E2EB5E54C7FA6104218 /* libReactNativeConfig-tvOS.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = "libReactNativeConfig-tvOS.a"; sourceTree = "<group>"; };
 		9862436C289A498D8B2E6201 /* libAirMaps.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libAirMaps.a; sourceTree = "<group>"; };
 		9F0EC3F23A3F4FFBBBC6583A /* libBVLinearGradient.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libBVLinearGradient.a; sourceTree = "<group>"; };
@@ -573,7 +610,9 @@
 		CF3175A44C4B4612AD79C04E /* libReactNativeConfig.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libReactNativeConfig.a; sourceTree = "<group>"; };
 		D3BA7667091546469A730845 /* RNPassKit.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = RNPassKit.xcodeproj; path = "../node_modules/react-native-passkit-wallet/ios/RNPassKit.xcodeproj"; sourceTree = "<group>"; };
 		D5157D807E164356ADE87867 /* Inter-UI-Bold.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-Bold.otf"; path = "../assets/fonts/Inter-UI-Bold.otf"; sourceTree = "<group>"; };
+		D74E40AB9C7A4D2B80BC5A2D /* RNCAsyncStorage.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = RNCAsyncStorage.xcodeproj; path = "../node_modules/@react-native-community/async-storage/ios/RNCAsyncStorage.xcodeproj"; sourceTree = "<group>"; };
 		DC74A378C1CC40E4B6192D7F /* Inter-UI-Medium.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-Medium.otf"; path = "../assets/fonts/Inter-UI-Medium.otf"; sourceTree = "<group>"; };
+		DCC7DA7622F23799001A2EA8 /* RNCGeolocation.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = RNCGeolocation.xcodeproj; path = "../node_modules/@react-native-community/geolocation/ios/RNCGeolocation.xcodeproj"; sourceTree = "<group>"; };
 		E3B8A0AC5A6B4FABB3BDF6CB /* DroidSerif-Bold.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "DroidSerif-Bold.ttf"; path = "../assets/fonts/DroidSerif-Bold.ttf"; sourceTree = "<group>"; };
 		EC21254B449443F99016EBFD /* Inter-UI-Black.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-Black.otf"; path = "../assets/fonts/Inter-UI-Black.otf"; sourceTree = "<group>"; };
 		ED297162215061F000B7C4FE /* JavaScriptCore.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = JavaScriptCore.framework; path = System/Library/Frameworks/JavaScriptCore.framework; sourceTree = SDKROOT; };
@@ -596,6 +635,7 @@
 			buildActionMask = 2147483647;
 			files = (
 				ED297163215061F000B7C4FE /* JavaScriptCore.framework in Frameworks */,
+				DCC7DAB922F237B0001A2EA8 /* libRNCGeolocation.a in Frameworks */,
 				ADBDB9381DFEBF1600ED6528 /* libRCTBlob.a in Frameworks */,
 				11D1A2F320CAFA9E000508D9 /* libRCTAnimation.a in Frameworks */,
 				146834051AC3E58100842450 /* libReact.a in Frameworks */,
@@ -624,6 +664,8 @@
 				80E20D1B9CC74EB4A9A4CE7B /* libRNFetchBlob.a in Frameworks */,
 				E28D37FEDA0245DBAC6552D3 /* libAirMaps.a in Frameworks */,
 				82A2FF1E6E114D3D962D533D /* libRNPassKit.a in Frameworks */,
+				E6525241950445C0929495F2 /* libRNCAsyncStorage.a in Frameworks */,
+				8962194BB2D748DDB6DA530B /* libRNGestureHandler.a in Frameworks */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
@@ -644,6 +686,7 @@
 				0CB759F558AA42908EEA1EAB /* libRNDeviceInfo-tvOS.a in Frameworks */,
 				CB1584B0772D4A67A81FC83F /* libMusicControl-tvOS.a in Frameworks */,
 				6FFC53D62D7D482A9A92B721 /* libRNSVG-tvOS.a in Frameworks */,
+				B2A8F7EFB7794DEFA6AEA50E /* libRNGestureHandler-tvOS.a in Frameworks */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
@@ -826,7 +869,6 @@
 			children = (
 				0BE434FF7E9549F392208DEF /* libRNAirplay.a */,
 				CF3175A44C4B4612AD79C04E /* libReactNativeConfig.a */,
-				9DA3750D49B0422F9A4B45BE /* libDBCustomTabs.a */,
 				0F155E84A5784CBE8D95A974 /* libRNDeviceInfo.a */,
 				605AEFB6B1BB4611BDCFE95C /* libRNImagePicker.a */,
 				9F0EC3F23A3F4FFBBBC6583A /* libBVLinearGradient.a */,
@@ -845,6 +887,9 @@
 				67356E00D116467DA58DF3CC /* libRNSVG-tvOS.a */,
 				9862436C289A498D8B2E6201 /* libAirMaps.a */,
 				3AB4C6D7F52C428FA62777F1 /* libRNPassKit.a */,
+				2C4605F404864B4EBBDF09DB /* libRNCAsyncStorage.a */,
+				90612A20BF754A4E914906AD /* libRNGestureHandler.a */,
+				375F29B07CD141529D4EB2F7 /* libRNGestureHandler-tvOS.a */,
 			);
 			name = "Recovered References";
 			sourceTree = "<group>";
@@ -970,6 +1015,7 @@
 		832341AE1AAA6A7D00B99B32 /* Libraries */ = {
 			isa = PBXGroup;
 			children = (
+				DCC7DA7622F23799001A2EA8 /* RNCGeolocation.xcodeproj */,
 				5E91572D1DD0AC6500FF2AA8 /* RCTAnimation.xcodeproj */,
 				146833FF1AC3E56700842450 /* React.xcodeproj */,
 				00C302A71ABCB8CE00DB3ED1 /* RCTActionSheet.xcodeproj */,
@@ -998,6 +1044,8 @@
 				10B0392307184C498573F1A2 /* RNFetchBlob.xcodeproj */,
 				1C0ED1C4FB474DC8A829950D /* AirMaps.xcodeproj */,
 				D3BA7667091546469A730845 /* RNPassKit.xcodeproj */,
+				D74E40AB9C7A4D2B80BC5A2D /* RNCAsyncStorage.xcodeproj */,
+				4BC84B9C6F30419EBA142384 /* RNGestureHandler.xcodeproj */,
 			);
 			name = Libraries;
 			sourceTree = "<group>";
@@ -1063,6 +1111,31 @@
 			name = Products;
 			sourceTree = "<group>";
 		};
+		BFB447C4230303A60021E75E /* Products */ = {
+			isa = PBXGroup;
+			children = (
+				BFB447C9230303A60021E75E /* libRNGestureHandler.a */,
+				BFB447CB230303A60021E75E /* libRNGestureHandler-tvOS.a */,
+			);
+			name = Products;
+			sourceTree = "<group>";
+		};
+		DCC7DA7722F23799001A2EA8 /* Products */ = {
+			isa = PBXGroup;
+			children = (
+				DCC7DAAD22F23799001A2EA8 /* libRNCGeolocation.a */,
+			);
+			name = Products;
+			sourceTree = "<group>";
+		};
+		DCD3CDDA22E1011100DD3F4E /* Products */ = {
+			isa = PBXGroup;
+			children = (
+				DCD3CDDE22E1011100DD3F4E /* libRNCAsyncStorage.a */,
+			);
+			name = Products;
+			sourceTree = "<group>";
+		};
 /* End PBXGroup section */
 
 /* Begin PBXNativeTarget section */
@@ -1255,6 +1328,14 @@
 					ProductGroup = 79CEBFCD223011FE00D8F685 /* Products */;
 					ProjectRef = 3923D6EFF26D4A53B8BDF8C6 /* RNAirplay.xcodeproj */;
 				},
+				{
+					ProductGroup = DCD3CDDA22E1011100DD3F4E /* Products */;
+					ProjectRef = D74E40AB9C7A4D2B80BC5A2D /* RNCAsyncStorage.xcodeproj */;
+				},
+				{
+					ProductGroup = DCC7DA7722F23799001A2EA8 /* Products */;
+					ProjectRef = DCC7DA7622F23799001A2EA8 /* RNCGeolocation.xcodeproj */;
+				},
 				{
 					ProductGroup = 79CEBFC7223011FD00D8F685 /* Products */;
 					ProjectRef = 4ED51CB73778472686A7279B /* RNCWebView.xcodeproj */;
@@ -1267,6 +1348,10 @@
 					ProductGroup = 79CEC020223011FF00D8F685 /* Products */;
 					ProjectRef = 10B0392307184C498573F1A2 /* RNFetchBlob.xcodeproj */;
 				},
+				{
+					ProductGroup = BFB447C4230303A60021E75E /* Products */;
+					ProjectRef = 4BC84B9C6F30419EBA142384 /* RNGestureHandler.xcodeproj */;
+				},
 				{
 					ProductGroup = 79CEBFD3223011FE00D8F685 /* Products */;
 					ProjectRef = 629FCAAD128E41B4BAE2BCF4 /* RNImagePicker.xcodeproj */;
@@ -1716,6 +1801,34 @@
 			remoteRef = BF08F5182242B97A00FFB1DC /* PBXContainerItemProxy */;
 			sourceTree = BUILT_PRODUCTS_DIR;
 		};
+		BFB447C9230303A60021E75E /* libRNGestureHandler.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libRNGestureHandler.a;
+			remoteRef = BFB447C8230303A60021E75E /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		BFB447CB230303A60021E75E /* libRNGestureHandler-tvOS.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = "libRNGestureHandler-tvOS.a";
+			remoteRef = BFB447CA230303A60021E75E /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		DCC7DAAD22F23799001A2EA8 /* libRNCGeolocation.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libRNCGeolocation.a;
+			remoteRef = DCC7DAAC22F23799001A2EA8 /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		DCD3CDDE22E1011100DD3F4E /* libRNCAsyncStorage.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libRNCAsyncStorage.a;
+			remoteRef = DCD3CDDD22E1011100DD3F4E /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
 /* End PBXReferenceProxy section */
 
 /* Begin PBXResourcesBuildPhase section */
@@ -1884,12 +1997,15 @@
 					"$(SRCROOT)/../node_modules/rn-fetch-blob/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-maps/lib/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-passkit-wallet/ios/RNPassKit",
+					"$(SRCROOT)/../node_modules/@react-native-community/async-storage/ios",
+					"$(SRCROOT)/../node_modules/react-native-gesture-handler/ios/**",
 				);
 				INFOPLIST_FILE = apolloschurchappTests/Info.plist;
 				IPHONEOS_DEPLOYMENT_TARGET = 9.0;
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @loader_path/Frameworks";
 				LIBRARY_SEARCH_PATHS = (
 					"$(inherited)",
+					"\"$(SRCROOT)/$(TARGET_NAME)\"",
 				);
 				OTHER_LDFLAGS = (
 					"-ObjC",
@@ -1924,12 +2040,15 @@
 					"$(SRCROOT)/../node_modules/rn-fetch-blob/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-maps/lib/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-passkit-wallet/ios/RNPassKit",
+					"$(SRCROOT)/../node_modules/@react-native-community/async-storage/ios",
+					"$(SRCROOT)/../node_modules/react-native-gesture-handler/ios/**",
 				);
 				INFOPLIST_FILE = apolloschurchappTests/Info.plist;
 				IPHONEOS_DEPLOYMENT_TARGET = 9.0;
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @loader_path/Frameworks";
 				LIBRARY_SEARCH_PATHS = (
 					"$(inherited)",
+					"\"$(SRCROOT)/$(TARGET_NAME)\"",
 				);
 				OTHER_LDFLAGS = (
 					"-ObjC",
@@ -1945,7 +2064,7 @@
 			isa = XCBuildConfiguration;
 			buildSettings = {
 				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
-				CURRENT_PROJECT_VERSION = 7;
+				CURRENT_PROJECT_VERSION = 15;
 				DEAD_CODE_STRIPPING = NO;
 				DEVELOPMENT_TEAM = 7TM8C6252Z;
 				HEADER_SEARCH_PATHS = (
@@ -1966,6 +2085,8 @@
 					"$(SRCROOT)/../node_modules/rn-fetch-blob/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-maps/lib/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-passkit-wallet/ios/RNPassKit",
+					"$(SRCROOT)/../node_modules/@react-native-community/async-storage/ios",
+					"$(SRCROOT)/../node_modules/react-native-gesture-handler/ios/**",
 				);
 				INFOPLIST_FILE = apolloschurchapp/Info.plist;
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
@@ -1985,7 +2106,7 @@
 			isa = XCBuildConfiguration;
 			buildSettings = {
 				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
-				CURRENT_PROJECT_VERSION = 7;
+				CURRENT_PROJECT_VERSION = 15;
 				HEADER_SEARCH_PATHS = (
 					"$(inherited)",
 					"$(SRCROOT)/../node_modules/react-native-airplay-btn/ios",
@@ -2004,6 +2125,8 @@
 					"$(SRCROOT)/../node_modules/rn-fetch-blob/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-maps/lib/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-passkit-wallet/ios/RNPassKit",
+					"$(SRCROOT)/../node_modules/@react-native-community/async-storage/ios",
+					"$(SRCROOT)/../node_modules/react-native-gesture-handler/ios/**",
 				);
 				INFOPLIST_FILE = apolloschurchapp/Info.plist;
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
@@ -2049,11 +2172,14 @@
 					"$(SRCROOT)/../node_modules/rn-fetch-blob/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-maps/lib/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-passkit-wallet/ios/RNPassKit",
+					"$(SRCROOT)/../node_modules/@react-native-community/async-storage/ios",
+					"$(SRCROOT)/../node_modules/react-native-gesture-handler/ios/**",
 				);
 				INFOPLIST_FILE = "apolloschurchapp-tvOS/Info.plist";
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
 				LIBRARY_SEARCH_PATHS = (
 					"$(inherited)",
+					"\"$(SRCROOT)/$(TARGET_NAME)\"",
 				);
 				OTHER_LDFLAGS = (
 					"-ObjC",
@@ -2097,11 +2223,14 @@
 					"$(SRCROOT)/../node_modules/rn-fetch-blob/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-maps/lib/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-passkit-wallet/ios/RNPassKit",
+					"$(SRCROOT)/../node_modules/@react-native-community/async-storage/ios",
+					"$(SRCROOT)/../node_modules/react-native-gesture-handler/ios/**",
 				);
 				INFOPLIST_FILE = "apolloschurchapp-tvOS/Info.plist";
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
 				LIBRARY_SEARCH_PATHS = (
 					"$(inherited)",
+					"\"$(SRCROOT)/$(TARGET_NAME)\"",
 				);
 				OTHER_LDFLAGS = (
 					"-ObjC",
@@ -2144,11 +2273,14 @@
 					"$(SRCROOT)/../node_modules/rn-fetch-blob/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-maps/lib/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-passkit-wallet/ios/RNPassKit",
+					"$(SRCROOT)/../node_modules/@react-native-community/async-storage/ios",
+					"$(SRCROOT)/../node_modules/react-native-gesture-handler/ios/**",
 				);
 				INFOPLIST_FILE = "apolloschurchapp-tvOSTests/Info.plist";
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @loader_path/Frameworks";
 				LIBRARY_SEARCH_PATHS = (
 					"$(inherited)",
+					"\"$(SRCROOT)/$(TARGET_NAME)\"",
 				);
 				OTHER_LDFLAGS = (
 					"-ObjC",
@@ -2191,11 +2323,14 @@
 					"$(SRCROOT)/../node_modules/rn-fetch-blob/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-maps/lib/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-passkit-wallet/ios/RNPassKit",
+					"$(SRCROOT)/../node_modules/@react-native-community/async-storage/ios",
+					"$(SRCROOT)/../node_modules/react-native-gesture-handler/ios/**",
 				);
 				INFOPLIST_FILE = "apolloschurchapp-tvOSTests/Info.plist";
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @loader_path/Frameworks";
 				LIBRARY_SEARCH_PATHS = (
 					"$(inherited)",
+					"\"$(SRCROOT)/$(TARGET_NAME)\"",
 				);
 				OTHER_LDFLAGS = (
 					"-ObjC",
diff --git a/apolloschurchapp/ios/apolloschurchapp/Info.plist b/apolloschurchapp/ios/apolloschurchapp/Info.plist
index 37e0ab4..444c814 100644
--- a/apolloschurchapp/ios/apolloschurchapp/Info.plist
+++ b/apolloschurchapp/ios/apolloschurchapp/Info.plist
@@ -17,7 +17,7 @@
 	<key>CFBundlePackageType</key>
 	<string>APPL</string>
 	<key>CFBundleShortVersionString</key>
-	<string>0.8.6</string>
+	<string>1.1.0</string>
 	<key>CFBundleSignature</key>
 	<string>????</string>
 	<key>CFBundleURLTypes</key>
@@ -30,7 +30,7 @@
 		</dict>
 	</array>
 	<key>CFBundleVersion</key>
-	<string>12</string>
+	<string>20</string>
 	<key>ITSAppUsesNonExemptEncryption</key>
 	<false />
 	<key>LSRequiresIPhoneOS</key>
diff --git a/apolloschurchapp/ios/apolloschurchappTests/Info.plist b/apolloschurchapp/ios/apolloschurchappTests/Info.plist
index ea797d5..a6cb25e 100644
--- a/apolloschurchapp/ios/apolloschurchappTests/Info.plist
+++ b/apolloschurchapp/ios/apolloschurchappTests/Info.plist
@@ -15,10 +15,10 @@
 	<key>CFBundlePackageType</key>
 	<string>BNDL</string>
 	<key>CFBundleShortVersionString</key>
-	<string>0.8.6</string>
+	<string>1.1.0</string>
 	<key>CFBundleSignature</key>
 	<string>????</string>
 	<key>CFBundleVersion</key>
-	<string>11</string>
+	<string>19</string>
 </dict>
 </plist>
diff --git a/apolloschurchapp/jest.setup.js b/apolloschurchapp/jest.setup.js
index d15cab6..946e5e0 100644
--- a/apolloschurchapp/jest.setup.js
+++ b/apolloschurchapp/jest.setup.js
@@ -1,4 +1,5 @@
 import React from 'react';
+import { NativeModules } from 'react-native';
 // We ran into an issue where SafeAreaView would break jest tests.
 jest.mock('react-navigation', () => {
   const ActualNavigation = require.requireActual('react-navigation');
@@ -87,3 +88,12 @@ jest.mock('NativeEventEmitter');
 jest.mock('react-native-maps');
 jest.mock('DatePickerIOS', () => 'DatePicker');
 jest.mock('./src/client/index');
+
+NativeModules.RNGestureHandlerModule = {
+  attachGestureHandler: jest.fn(),
+  createGestureHandler: jest.fn(),
+  dropGestureHandler: jest.fn(),
+  updateGestureHandler: jest.fn(),
+  State: {},
+  Directions: {},
+};
diff --git a/apolloschurchapp/metro.config.js b/apolloschurchapp/metro.config.js
index 9b60d7a..11ca48b 100644
--- a/apolloschurchapp/metro.config.js
+++ b/apolloschurchapp/metro.config.js
@@ -32,6 +32,7 @@ const sharedNativeModules = [
   'react-native-video',
   'react-native-video-controls',
   'react-native-airplay-btn',
+  'react-navigation',
 ];
 
 module.exports = {
diff --git a/apolloschurchapp/package.json b/apolloschurchapp/package.json
index 8de8d0c..733936a 100644
--- a/apolloschurchapp/package.json
+++ b/apolloschurchapp/package.json
@@ -1,14 +1,13 @@
 {
   "name": "apolloschurchapp",
-  "version": "0.8.6",
+  "version": "1.1.0",
   "private": true,
   "devDependencies": {
-    "@apollosproject/ui-storybook": "^0.8.6",
     "codecov": "3.0.2",
     "get-dev-paths": "^0.1.0",
     "jest": "^24.8.0",
     "jest-react-native": "18.0.0",
-    "metro-react-native-babel-preset": "^0.54.0",
+    "metro-react-native-babel-preset": "^0.54.1",
     "nodemon": "1.18.7",
     "prettier": "1.14.2",
     "prop-types": "15.6.1",
@@ -43,7 +42,7 @@
     "preset": "react-native",
     "collectCoverage": true,
     "transformIgnorePatterns": [
-      "node_modules/(?!((jest-)?react-native|rn-*|react-clone-referenced-element|react-navigation|@apollosproject))"
+      "node_modules/(?!((jest-)?react-native|rn-*|react-clone-referenced-element|react-navigation|@react-navigation|@apollosproject))"
     ],
     "testMatch": [
       "<rootDir>/src/**/?(*.)(test|tests).{js,jsx,mjs}"
@@ -59,15 +58,17 @@
     ]
   },
   "dependencies": {
-    "@apollosproject/ui-analytics": "^0.8.6",
-    "@apollosproject/ui-auth": "^0.8.6",
-    "@apollosproject/ui-htmlview": "^0.8.6",
-    "@apollosproject/ui-kit": "^0.8.6",
-    "@apollosproject/ui-passes": "^0.8.6",
-    "@apollosproject/ui-scripture": "^0.8.6",
-    "@apollosproject/ui-storybook": "^0.8.6",
-    "@apollosproject/ui-media-player": "^0.8.6",
-    "@apollosproject/ui-notifications": "^0.8.6",
+    "@apollosproject/ui-analytics": "^1.1.0",
+    "@apollosproject/ui-auth": "^1.1.0",
+    "@apollosproject/ui-htmlview": "^1.1.0",
+    "@apollosproject/ui-kit": "^1.1.0",
+    "@apollosproject/ui-media-player": "^1.1.0",
+    "@apollosproject/ui-notifications": "^1.1.0",
+    "@apollosproject/ui-onboarding": "^1.1.0",
+    "@apollosproject/ui-passes": "^1.1.0",
+    "@apollosproject/ui-scripture": "^1.1.0",
+    "@apollosproject/ui-storybook": "^1.1.0",
+    "@react-native-community/async-storage": "^1.5.1",
     "apollo-cache-inmemory": "1.5.1",
     "apollo-cache-persist": "0.1.1",
     "apollo-client": "2.5.1",
@@ -88,26 +89,27 @@
     "node-fetch": "2.2.0",
     "react": "16.8.3",
     "react-apollo": "2.5.5",
-    "react-native": "0.59.8",
+    "react-native": "0.59.10",
     "react-native-airplay-btn": "^1.0.6",
     "react-native-config": "^0.11.7",
-    "react-native-device-info": "0.22.5",
+    "react-native-device-info": "^2.1.2",
+    "react-native-geolocation-service": "^3.0.0",
+    "react-native-gesture-handler": "^1.3.0",
     "react-native-image-picker": "0.28.0",
     "react-native-linear-gradient": "^2.5.4",
     "react-native-maps": "^0.24.2",
     "react-native-music-control": "^0.10.2",
-    "react-native-onesignal": "3.2.7",
+    "react-native-onesignal": "3.2.14",
     "react-native-passkit-wallet": "^0.1.4",
     "react-native-safari-view": "2.1.0",
     "react-native-safe-area-view": "0.13.1",
-    "react-native-screens": "^1.0.0-alpha.11",
+    "react-native-screens": "^1.0.0-alpha.22",
     "react-native-splash-screen": "^3.1.1",
     "react-native-svg": "^9.4.0",
     "react-native-video": "^4.4.1",
     "react-native-video-controls": "2.2.3",
     "react-native-webview": "^5.2.0",
-    "react-navigation": "2.18.3",
-    "react-navigation-tabs": "0.6.0",
+    "react-navigation": "^3.11.0",
     "recompose": "^0.30.0",
     "rn-fetch-blob": "^0.10.15",
     "stream": "^0.0.2",
diff --git a/apolloschurchapp/src/client/cache.js b/apolloschurchapp/src/client/cache.js
index 5b4bfd5..862639f 100644
--- a/apolloschurchapp/src/client/cache.js
+++ b/apolloschurchapp/src/client/cache.js
@@ -2,7 +2,7 @@ import {
   InMemoryCache,
   IntrospectionFragmentMatcher,
 } from 'apollo-cache-inmemory';
-import { AsyncStorage } from 'react-native';
+import AsyncStorage from '@react-native-community/async-storage';
 import { CachePersistor } from 'apollo-cache-persist';
 import gql from 'graphql-tag';
 import Config from 'react-native-config';
diff --git a/apolloschurchapp/src/client/fragmentTypes.json b/apolloschurchapp/src/client/fragmentTypes.json
index 14cf82b..6c35859 100644
--- a/apolloschurchapp/src/client/fragmentTypes.json
+++ b/apolloschurchapp/src/client/fragmentTypes.json
@@ -1 +1 @@
-{"__schema":{"types":[{"kind":"INTERFACE","name":"Node","possibleTypes":[{"name":"ContentChannel"},{"name":"Person"},{"name":"Campus"},{"name":"Pass"},{"name":"UniversalContentItem"},{"name":"DevotionalContentItem"},{"name":"MediaContentItem"},{"name":"ContentSeriesContentItem"}]},{"kind":"INTERFACE","name":"ContentItem","possibleTypes":[{"name":"UniversalContentItem"},{"name":"DevotionalContentItem"},{"name":"MediaContentItem"},{"name":"ContentSeriesContentItem"}]},{"kind":"INTERFACE","name":"Media","possibleTypes":[{"name":"ImageMedia"},{"name":"VideoMedia"},{"name":"AudioMedia"}]},{"kind":"INTERFACE","name":"MediaSource","possibleTypes":[{"name":"ImageMediaSource"},{"name":"VideoMediaSource"},{"name":"AudioMediaSource"}]},{"kind":"INTERFACE","name":"Sharable","possibleTypes":[{"name":"SharableContentItem"}]}]}}
\ No newline at end of file
+{"__schema":{"types":[{"kind":"INTERFACE","name":"Node","possibleTypes":[{"name":"ContentChannel"},{"name":"Person"},{"name":"Campus"},{"name":"Scripture"},{"name":"Pass"},{"name":"UniversalContentItem"},{"name":"DevotionalContentItem"},{"name":"MediaContentItem"},{"name":"ContentSeriesContentItem"},{"name":"WeekendContentItem"},{"name":"ActionListFeature"},{"name":"TextFeature"},{"name":"ScriptureFeature"}]},{"kind":"INTERFACE","name":"ContentItem","possibleTypes":[{"name":"UniversalContentItem"},{"name":"DevotionalContentItem"},{"name":"MediaContentItem"},{"name":"ContentSeriesContentItem"},{"name":"WeekendContentItem"}]},{"kind":"INTERFACE","name":"Media","possibleTypes":[{"name":"ImageMedia"},{"name":"VideoMedia"},{"name":"AudioMedia"}]},{"kind":"INTERFACE","name":"MediaSource","possibleTypes":[{"name":"ImageMediaSource"},{"name":"VideoMediaSource"},{"name":"AudioMediaSource"}]},{"kind":"INTERFACE","name":"Sharable","possibleTypes":[{"name":"SharableContentItem"},{"name":"SharableFeature"}]},{"kind":"INTERFACE","name":"Feature","possibleTypes":[{"name":"ActionListFeature"},{"name":"TextFeature"},{"name":"ScriptureFeature"}]}]}}
\ No newline at end of file
diff --git a/apolloschurchapp/src/client/index.js b/apolloschurchapp/src/client/index.js
index c473190..fb7ca59 100644
--- a/apolloschurchapp/src/client/index.js
+++ b/apolloschurchapp/src/client/index.js
@@ -4,12 +4,24 @@ import { ApolloProvider } from 'react-apollo';
 import { ApolloClient } from 'apollo-client';
 import { ApolloLink } from 'apollo-link';
 
-import { authLink } from '@apollosproject/ui-auth';
+import { authLink, buildErrorLink } from '@apollosproject/ui-auth';
 import { resolvers, schema, defaults } from '../store';
+import NavigationService from '../NavigationService';
 import httpLink from './httpLink';
 import cache, { ensureCacheHydration, MARK_CACHE_LOADED } from './cache';
 
-const link = ApolloLink.from([authLink, httpLink]);
+const goToAuth = () => NavigationService.navigate('Auth');
+const wipeData = () => cache.writeData({ data: defaults });
+
+let resetStore;
+const onAuthError = () => {
+  resetStore();
+  goToAuth();
+};
+
+const errorLink = buildErrorLink(onAuthError);
+
+const link = ApolloLink.from([authLink, errorLink, httpLink]);
 
 export const client = new ApolloClient({
   link,
@@ -20,9 +32,13 @@ export const client = new ApolloClient({
   typeDefs: schema,
 });
 
-cache.writeData({ data: defaults });
+// Hack to give auth link access to method on client;
+// eslint-disable-next-line prefer-destructuring
+resetStore = client.resetStore;
+
+wipeData();
 // Ensure that media player still works after logout.
-client.onResetStore(() => cache.writeData({ data: defaults }));
+client.onResetStore(() => wipeData());
 
 class ClientProvider extends PureComponent {
   static propTypes = {
diff --git a/apolloschurchapp/src/content-feed/content-feed.tests.js b/apolloschurchapp/src/content-feed/content-feed.tests.js
index 544d818..2f7fd1b 100644
--- a/apolloschurchapp/src/content-feed/content-feed.tests.js
+++ b/apolloschurchapp/src/content-feed/content-feed.tests.js
@@ -3,7 +3,7 @@ import renderer from 'react-test-renderer';
 
 import Providers from 'apolloschurchapp/src/Providers';
 
-import getContentFeed from './getContentFeed';
+import GET_CONTENT_FEED from './getContentFeed';
 
 import ContentFeed from './index';
 
@@ -11,7 +11,7 @@ describe('content feed query component', () => {
   it('renders a feedview after successful query', () => {
     const mock = {
       request: {
-        query: getContentFeed,
+        query: GET_CONTENT_FEED,
       },
       result: {
         data: {
diff --git a/apolloschurchapp/src/content-feed/getContentFeed.js b/apolloschurchapp/src/content-feed/getContentFeed.js
index dbf38d5..40758cb 100644
--- a/apolloschurchapp/src/content-feed/getContentFeed.js
+++ b/apolloschurchapp/src/content-feed/getContentFeed.js
@@ -1,7 +1,7 @@
 import gql from 'graphql-tag';
 
-import { largeCardFragment } from 'apolloschurchapp/src/ui/ContentCardConnected';
-import { contentItemFragment } from '../content-single/getContentItem';
+import { LARGE_CARD_FRAGMENT } from 'apolloschurchapp/src/ui/ContentCardConnected';
+import { CONTENT_ITEM_FRAGMENT } from '../content-single/getContentItem';
 
 export default gql`
   query getContentFeed($itemId: ID!, $after: String, $first: Int) {
@@ -21,6 +21,6 @@ export default gql`
       }
     }
   }
-  ${contentItemFragment}
-  ${largeCardFragment}
+  ${CONTENT_ITEM_FRAGMENT}
+  ${LARGE_CARD_FRAGMENT}
 `;
diff --git a/apolloschurchapp/src/content-feed/index.js b/apolloschurchapp/src/content-feed/index.js
index 831c5f0..8443086 100644
--- a/apolloschurchapp/src/content-feed/index.js
+++ b/apolloschurchapp/src/content-feed/index.js
@@ -8,7 +8,7 @@ import { BackgroundView, FeedView } from '@apollosproject/ui-kit';
 import ContentCardConnected from 'apolloschurchapp/src/ui/ContentCardConnected';
 import fetchMoreResolver from 'apolloschurchapp/src/utils/fetchMoreResolver';
 
-import getContentFeed from './getContentFeed';
+import GET_CONTENT_FEED from './getContentFeed';
 /**
  * This is where the component description lives
  * A FeedView wrapped in a query to pull content data.
@@ -47,7 +47,7 @@ class ContentFeed extends PureComponent {
     return (
       <BackgroundView>
         <Query
-          query={getContentFeed}
+          query={GET_CONTENT_FEED}
           variables={{ itemId }}
           fetchPolicy="cache-and-network"
         >
diff --git a/apolloschurchapp/src/content-single/ActionContainer/index.js b/apolloschurchapp/src/content-single/ActionContainer/index.js
index 471fe32..7b64e05 100644
--- a/apolloschurchapp/src/content-single/ActionContainer/index.js
+++ b/apolloschurchapp/src/content-single/ActionContainer/index.js
@@ -1,16 +1,12 @@
 import React from 'react';
 import { Platform, View } from 'react-native';
 import PropTypes from 'prop-types';
-import { Query } from 'react-apollo';
-import { get } from 'lodash';
-import Share from 'apolloschurchapp/src/ui/Share';
+import ShareContentButtonConnected from 'apolloschurchapp/src/ui/ShareContentButtonConnected';
 
 import { SideBySideView, styled } from '@apollosproject/ui-kit';
-import LikeButton from 'apolloschurchapp/src/ui/LikeButton';
+import LikeContentButtonConnected from 'apolloschurchapp/src/ui/LikeContentButtonConnected';
 import { MediaPlayerSpacer } from '@apollosproject/ui-media-player';
 
-import getShareContent from './getShareContent';
-
 const PositioningView = styled(({ theme }) => ({
   justifyContent: 'space-around',
   paddingVertical: theme.sizing.baseUnit / 2,
@@ -26,15 +22,8 @@ const ActionContainer = ({ itemId }) => (
   <Container>
     <MediaPlayerSpacer>
       <PositioningView>
-        <LikeButton itemId={itemId} />
-        <Query query={getShareContent} variables={{ itemId }}>
-          {({ data: { node } = {}, error, loading }) => {
-            const sharing = get(node, 'sharing');
-            return loading || error || !sharing ? null : (
-              <Share content={sharing} />
-            );
-          }}
-        </Query>
+        <LikeContentButtonConnected itemId={itemId} />
+        <ShareContentButtonConnected itemId={itemId} />
       </PositioningView>
     </MediaPlayerSpacer>
   </Container>
diff --git a/apolloschurchapp/src/content-single/ContentSingle.js b/apolloschurchapp/src/content-single/ContentSingle.js
index 70f49fd..817af65 100644
--- a/apolloschurchapp/src/content-single/ContentSingle.js
+++ b/apolloschurchapp/src/content-single/ContentSingle.js
@@ -8,10 +8,11 @@ import { ErrorCard, ThemeMixin } from '@apollosproject/ui-kit';
 import { TrackEventWhenLoaded } from '@apollosproject/ui-analytics';
 
 import ActionContainer from './ActionContainer';
-import getContentItem from './getContentItem';
+import GET_CONTENT_ITEM from './getContentItem';
 
 import DevotionalContentItem from './DevotionalContentItem';
 import UniversalContentItem from './UniversalContentItem';
+import WeekendContentItem from './WeekendContentItem';
 
 import NavigationHeader from './NavigationHeader';
 
@@ -42,6 +43,7 @@ class ContentSingle extends PureComponent {
     if (!__typename && this.itemId) {
       [__typename] = this.itemId.split(':');
     }
+
     switch (__typename) {
       case 'DevotionalContentItem':
         return (
@@ -52,6 +54,15 @@ class ContentSingle extends PureComponent {
             error={error}
           />
         );
+      case 'WeekendContentItem':
+        return (
+          <WeekendContentItem
+            id={this.itemId}
+            content={content}
+            loading={loading}
+            error={error}
+          />
+        );
       case 'UniversalContentItem':
       default:
         return (
@@ -95,7 +106,7 @@ class ContentSingle extends PureComponent {
 
   render() {
     return (
-      <Query query={getContentItem} variables={this.queryVariables}>
+      <Query query={GET_CONTENT_ITEM} variables={this.queryVariables}>
         {this.renderWithData}
       </Query>
     );
diff --git a/apolloschurchapp/src/content-single/DevotionalContentItem/Devotional.tests.js b/apolloschurchapp/src/content-single/DevotionalContentItem/Devotional.tests.js
index efaffbd..5bbb257 100644
--- a/apolloschurchapp/src/content-single/DevotionalContentItem/Devotional.tests.js
+++ b/apolloschurchapp/src/content-single/DevotionalContentItem/Devotional.tests.js
@@ -2,8 +2,8 @@ import React from 'react';
 import renderer from 'react-test-renderer';
 import Providers from 'apolloschurchapp/src/Providers';
 import { renderWithApolloData } from 'apolloschurchapp/src/utils/testUtils';
-import getContentItemContent from '../HTMLContent/getContentItemContent';
-import getScripture from './getScripture';
+import GET_CONTENT_ITEM_CONTENT from '../HTMLContent/getContentItemContent';
+import GET_SCRIPTURE from './getScripture';
 import Devotional from '.';
 
 const content = {
@@ -32,7 +32,7 @@ const scriptures = [
 
 const scriptureMock = {
   request: {
-    query: getScripture,
+    query: GET_SCRIPTURE,
     variables: { itemId: '1' },
   },
   result: {
@@ -44,7 +44,7 @@ const scriptureMock = {
 
 const contentItemHTMLMock = {
   request: {
-    query: getContentItemContent,
+    query: GET_CONTENT_ITEM_CONTENT,
     variables: { contentId: '1' },
   },
   result: {
@@ -91,7 +91,7 @@ describe('the Devotional component', () => {
     );
     expect(tree).toMatchSnapshot();
   });
-  it('renders a loading state', async () => {
+  it('renders a loading state of null', async () => {
     const tree = renderer.create(
       <Providers mocks={mocks}>
         <Devotional id="1" content={content} loading navigation={navigation} />
diff --git a/apolloschurchapp/src/content-single/DevotionalContentItem/index.js b/apolloschurchapp/src/content-single/DevotionalContentItem/index.js
index 088bbdc..07b4938 100644
--- a/apolloschurchapp/src/content-single/DevotionalContentItem/index.js
+++ b/apolloschurchapp/src/content-single/DevotionalContentItem/index.js
@@ -13,7 +13,7 @@ import {
 import ContentTab from './ContentTab';
 import ScriptureTab from './ScriptureTab';
 
-import getScripture from './getScripture';
+import GET_SCRIPTURE from './getScripture';
 
 const FlexedSafeAreaView = styled({ flex: 1 })(SafeAreaView);
 
@@ -110,7 +110,7 @@ class DevotionalContentItem extends PureComponent {
     return (
       <BackgroundView>
         <FlexedSafeAreaView forceInset={{ top: 'always' }}>
-          <Query query={getScripture} variables={{ itemId: this.props.id }}>
+          <Query query={GET_SCRIPTURE} variables={{ itemId: this.props.id }}>
             {this.renderTabs}
           </Query>
         </FlexedSafeAreaView>
diff --git a/apolloschurchapp/src/content-single/Features/ScriptureFeature.js b/apolloschurchapp/src/content-single/Features/ScriptureFeature.js
new file mode 100644
index 0000000..dc08881
--- /dev/null
+++ b/apolloschurchapp/src/content-single/Features/ScriptureFeature.js
@@ -0,0 +1,60 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+
+import { ActionCard } from '@apollosproject/ui-kit';
+import { ScriptureItem } from '@apollosproject/ui-scripture';
+import ShareContentButtonConnected from 'apolloschurchapp/src/ui/ShareContentButtonConnected';
+
+const ScriptureFeature = ({
+  scriptures,
+  sharing: { message } = {},
+  isLoading,
+  contentId,
+}) => (
+  <ActionCard
+    icon={'text'}
+    action={
+      <ShareContentButtonConnected message={message} itemId={contentId} />
+    }
+  >
+    {scriptures.map(({ copyright, reference, html, id }) => (
+      <ScriptureItem
+        key={id}
+        reference={reference}
+        html={html}
+        isLoading={isLoading}
+        copyright={copyright}
+      />
+    ))}
+  </ActionCard>
+);
+
+ScriptureFeature.propTypes = {
+  isLoading: PropTypes.bool.isRequired,
+  scriptures: PropTypes.arrayOf(
+    PropTypes.shape({
+      html: PropTypes.string.isRequired,
+      reference: PropTypes.string.isRequired,
+      id: PropTypes.string.isRequired,
+      copyright: PropTypes.string,
+    })
+  ),
+  sharing: PropTypes.shape({ message: PropTypes.string }),
+  contentId: PropTypes.string.isRequired,
+};
+
+export const SCRIPTURE_FEATURE_FRAGMENT = `
+fragment ScriptureFeatureFragment on ScriptureFeature {
+  sharing {
+    message
+  }
+  scriptures {
+    id
+    html
+    reference
+    copyright
+  }
+}
+`;
+
+export default ScriptureFeature;
diff --git a/apolloschurchapp/src/content-single/Features/TextFeature.js b/apolloschurchapp/src/content-single/Features/TextFeature.js
new file mode 100644
index 0000000..b4bb2a6
--- /dev/null
+++ b/apolloschurchapp/src/content-single/Features/TextFeature.js
@@ -0,0 +1,33 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+
+import { ActionCard, BodyText } from '@apollosproject/ui-kit';
+import ShareContentButtonConnected from 'apolloschurchapp/src/ui/ShareContentButtonConnected';
+
+const TextFeature = ({ body, sharing: { message } = {}, contentId }) => (
+  <ActionCard
+    action={
+      <ShareContentButtonConnected message={message} itemId={contentId} />
+    }
+  >
+    <BodyText>{body}</BodyText>
+  </ActionCard>
+);
+
+TextFeature.propTypes = {
+  body: PropTypes.string.isRequired,
+  sharing: PropTypes.shape({ message: PropTypes.string }),
+  contentId: PropTypes.string.isRequired,
+};
+
+export const TEXT_FEATURE_FRAGMENT = `
+fragment TextFeatureFragment on TextFeature {
+  body
+  id
+  sharing {
+    message
+  }
+}
+`;
+
+export default TextFeature;
diff --git a/apolloschurchapp/src/content-single/Features/getContentItemFeatures.js b/apolloschurchapp/src/content-single/Features/getContentItemFeatures.js
new file mode 100644
index 0000000..a015cec
--- /dev/null
+++ b/apolloschurchapp/src/content-single/Features/getContentItemFeatures.js
@@ -0,0 +1,32 @@
+import gql from 'graphql-tag';
+import { TEXT_FEATURE_FRAGMENT } from './TextFeature';
+import { SCRIPTURE_FEATURE_FRAGMENT } from './ScriptureFeature';
+
+const FEATURES_FRAGMENT = `
+  fragment FeaturesFragment on Feature {
+    id
+    ...TextFeatureFragment
+    ...ScriptureFeatureFragment
+  }
+  ${TEXT_FEATURE_FRAGMENT}
+  ${SCRIPTURE_FEATURE_FRAGMENT}
+`;
+
+export default gql`
+  query contentItemFeatures($contentId: ID!) {
+    node(id: $contentId) {
+      id
+      ... on ContentSeriesContentItem {
+        features {
+          ...FeaturesFragment
+        }
+      }
+      ... on WeekendContentItem {
+        features {
+          ...FeaturesFragment
+        }
+      }
+    }
+  }
+  ${FEATURES_FRAGMENT}
+`;
diff --git a/apolloschurchapp/src/content-single/Features/index.js b/apolloschurchapp/src/content-single/Features/index.js
new file mode 100644
index 0000000..e345e37
--- /dev/null
+++ b/apolloschurchapp/src/content-single/Features/index.js
@@ -0,0 +1,55 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import { Query } from 'react-apollo';
+import { ErrorCard, H3, PaddedView } from '@apollosproject/ui-kit';
+import { get } from 'lodash';
+import TextFeature from './TextFeature';
+import ScriptureFeature from './ScriptureFeature';
+
+import GET_CONTENT_ITEM_FEATURES from './getContentItemFeatures';
+
+const FEATURE_MAP = {
+  TextFeature,
+  ScriptureFeature,
+};
+
+const Features = ({ contentId }) => {
+  if (!contentId) return null;
+
+  return (
+    <Query
+      query={GET_CONTENT_ITEM_FEATURES}
+      fetchPolicy="cache-and-network"
+      variables={{ contentId }}
+    >
+      {({ data: { node } = {}, loading, error }) => {
+        if (error) return <ErrorCard error={error} />;
+        if (loading) return null;
+
+        const features = get(node, 'features', []);
+        if (!features || !features.length) return null;
+
+        return (
+          <PaddedView horizontal={false}>
+            <PaddedView vertical={false}>
+              <H3 padded>Engage</H3>
+            </PaddedView>
+            {features.map(({ __typename, ...feature }) => {
+              const Feature = FEATURE_MAP[__typename];
+              if (!Feature) return null;
+              return (
+                <Feature key={feature.id} {...feature} contentId={contentId} />
+              );
+            })}
+          </PaddedView>
+        );
+      }}
+    </Query>
+  );
+};
+
+Features.propTypes = {
+  contentId: PropTypes.string,
+};
+
+export default Features;
diff --git a/apolloschurchapp/src/content-single/HTMLContent/index.js b/apolloschurchapp/src/content-single/HTMLContent/index.js
index 39c62bc..755af41 100644
--- a/apolloschurchapp/src/content-single/HTMLContent/index.js
+++ b/apolloschurchapp/src/content-single/HTMLContent/index.js
@@ -5,13 +5,13 @@ import { Query } from 'react-apollo';
 import HTMLView from '@apollosproject/ui-htmlview';
 import { ErrorCard } from '@apollosproject/ui-kit';
 
-import getContentItemContent from './getContentItemContent';
+import GET_CONTENT_ITEM_CONTENT from './getContentItemContent';
 
 const HTMLContent = ({ contentId }) => {
   if (!contentId) return <HTMLView isLoading />;
 
   return (
-    <Query query={getContentItemContent} variables={{ contentId }}>
+    <Query query={GET_CONTENT_ITEM_CONTENT} variables={{ contentId }}>
       {({ data: { node: { htmlContent } = {} } = {}, loading, error }) => {
         if (error) return <ErrorCard error={error} />;
         return (
diff --git a/apolloschurchapp/src/content-single/HorizontalContentFeed/index.js b/apolloschurchapp/src/content-single/HorizontalContentFeed/index.js
index c0a236f..e7740ba 100644
--- a/apolloschurchapp/src/content-single/HorizontalContentFeed/index.js
+++ b/apolloschurchapp/src/content-single/HorizontalContentFeed/index.js
@@ -4,13 +4,11 @@ import PropTypes from 'prop-types';
 import { withNavigation } from 'react-navigation';
 import { Query } from 'react-apollo';
 
-import {
-  CardTile,
-  HorizontalTileFeed,
-  TouchableScale,
-} from '@apollosproject/ui-kit';
+import { HorizontalTileFeed, TouchableScale } from '@apollosproject/ui-kit';
 
-import getHorizontalContent from './getHorizontalContent';
+import HorizontalContentCardConnected from '../../ui/HorizontalContentCardConnected';
+
+import GET_HORIZONTAL_CONTENT from './getHorizontalContent';
 
 const loadingStateObject = {
   node: {
@@ -34,23 +32,15 @@ class HorizontalContentFeed extends Component {
     });
   };
 
-  renderItem = ({ item, index }) => (
+  renderItem = ({ item }) => (
     <TouchableScale onPress={() => this.handleOnPressItem(item)}>
-      <CardTile
-        number={index + 1}
-        title={get(item, 'title', '')}
-        /*
-         * These are props that are not yet being passed in the data.
-         * We will need to make sure they get added back when that data is available.
-         * byLine={item.content.speaker}
-         * date={item.meta.date}
-         */
-      />
+      <HorizontalContentCardConnected contentId={get(item, 'id', '')} />
     </TouchableScale>
   );
 
   renderFeed = ({ data, loading, error }) => {
     if (error) return null;
+    if (loading) return null;
 
     const childContent = get(
       data,
@@ -65,13 +55,23 @@ class HorizontalContentFeed extends Component {
     ).map((edge) => edge.node);
 
     const content = siblingContent.length ? siblingContent : childContent;
+    const currentIndex = content.findIndex(
+      ({ id }) => id === this.props.contentId
+    );
+    const initialScrollIndex = currentIndex === -1 ? 0 : currentIndex;
 
-    return (content && content.length) || loading ? (
+    return content && content.length ? (
       <HorizontalTileFeed
         content={content}
-        isLoading={loading}
         loadingStateObject={loadingStateObject}
         renderItem={this.renderItem}
+        initialScrollIndex={initialScrollIndex}
+        getItemLayout={(itemData, index) => ({
+          // We need to pass this function so that initialScrollIndex will work.
+          length: 240,
+          offset: 240 * index,
+          index,
+        })}
       />
     ) : null;
   };
@@ -81,7 +81,7 @@ class HorizontalContentFeed extends Component {
 
     return (
       <Query
-        query={getHorizontalContent}
+        query={GET_HORIZONTAL_CONTENT}
         variables={{ itemId: this.props.contentId }}
       >
         {this.renderFeed}
diff --git a/apolloschurchapp/src/content-single/MediaControls/getContentMedia.js b/apolloschurchapp/src/content-single/MediaControls/getContentMedia.js
index 8ab3d1a..3bc3e34 100644
--- a/apolloschurchapp/src/content-single/MediaControls/getContentMedia.js
+++ b/apolloschurchapp/src/content-single/MediaControls/getContentMedia.js
@@ -21,6 +21,17 @@ export default gql`
           }
         }
       }
+      ... on WeekendContentItem {
+        liveStream {
+          isLive
+          media {
+            sources {
+              uri
+            }
+          }
+          webViewUrl
+        }
+      }
     }
   }
 `;
diff --git a/apolloschurchapp/src/content-single/MediaControls/index.js b/apolloschurchapp/src/content-single/MediaControls/index.js
index 96ae490..a36e7d9 100644
--- a/apolloschurchapp/src/content-single/MediaControls/index.js
+++ b/apolloschurchapp/src/content-single/MediaControls/index.js
@@ -4,95 +4,144 @@ import { Query, Mutation } from 'react-apollo';
 import { View } from 'react-native';
 import { get } from 'lodash';
 
-import { playVideoMutation } from '@apollosproject/ui-media-player';
-import { Icon, styled, Button } from '@apollosproject/ui-kit';
-import getContentMedia from './getContentMedia';
-
-const buttonSizeDifferential = 4;
-
-const MediaIcon = Icon; // todo: add back styles
-const MediaButton = styled(({ theme }) => ({
-  width: theme.sizing.baseUnit * buttonSizeDifferential,
-  height: theme.sizing.baseUnit * buttonSizeDifferential,
-  borderRadius: theme.sizing.baseUnit * (buttonSizeDifferential / 2),
-  backgroundColor: theme.colors.secondary,
-  justifyContent: 'center',
-  alignItems: 'center',
-  borderWidth: 0, // remove default button border
-}))(Button);
-
-/** MediaButtton "border styles" live in a seperate component so that Android places it's elevation
- * shadow in the right place. */
-const MediaButtonBorder = styled(({ theme }) => ({
-  borderRadius:
-    theme.sizing.baseUnit * (buttonSizeDifferential / 2) +
-    buttonSizeDifferential, // this is eqivalent to the MediaButton size above + the padding below
-  padding: buttonSizeDifferential, // padding + backgroundColor = MediaButton + "borderStyles"
-  backgroundColor: theme.colors.paper,
-}))(View);
+import { PLAY_VIDEO } from '@apollosproject/ui-media-player';
+import {
+  styled,
+  TouchableScale,
+  MediaThumbnail,
+  MediaThumbnailIcon,
+  MediaThumbnailItem,
+  H6,
+} from '@apollosproject/ui-kit';
+import { WebBrowserConsumer } from 'apolloschurchapp/src/ui/WebBrowser';
+import GET_CONTENT_MEDIA from './getContentMedia';
 
 const Container = styled(({ theme }) => ({
   flexDirection: 'row',
-  alignItems: 'center',
-  justifyContent: 'center',
-  marginTop:
-    -theme.sizing.baseUnit * (buttonSizeDifferential / 2) -
-    buttonSizeDifferential, // MediaButton size / 2 + border
+  alignItems: 'flex-start',
+  justifyContent: 'flex-start',
+  marginTop: -(theme.sizing.baseUnit * 2.5),
 }))(View);
 
+const StyledMediaThumbnail = styled({ marginVertical: 0 })(MediaThumbnail);
+
 class MediaControls extends PureComponent {
   static propTypes = {
     contentId: PropTypes.string,
   };
 
+  renderPlayButton = ({ action, coverImageSources }) => (
+    <Container>
+      <TouchableScale onPress={action}>
+        <StyledMediaThumbnail image={coverImageSources}>
+          <MediaThumbnailItem centered>
+            <MediaThumbnailIcon name="play" />
+          </MediaThumbnailItem>
+          <MediaThumbnailItem centered bottom>
+            <H6 padded>Play</H6>
+          </MediaThumbnailItem>
+        </StyledMediaThumbnail>
+      </TouchableScale>
+    </Container>
+  );
+
+  renderMedia = ({
+    videoSource,
+    coverImageSources,
+    title,
+    parentChannelName,
+  }) => (
+    <Mutation mutation={PLAY_VIDEO}>
+      {(play) =>
+        this.renderPlayButton({
+          action: () =>
+            play({
+              variables: {
+                mediaSource: videoSource,
+                posterSources: coverImageSources,
+                title,
+                isVideo: true,
+                artist: parentChannelName,
+              },
+            }),
+          coverImageSources,
+        })
+      }
+    </Mutation>
+  );
+
+  renderWebView = ({ webViewUrl, coverImageSources }) => (
+    <WebBrowserConsumer>
+      {(openUrl) =>
+        this.renderPlayButton({
+          action: () => openUrl(webViewUrl),
+          coverImageSources,
+        })
+      }
+    </WebBrowserConsumer>
+  );
+
   renderControls = ({
     loading,
     error,
     data: {
-      node: { videos, title, parentChannel = {}, coverImage = {} } = {},
+      node: {
+        videos,
+        title,
+        parentChannel = {},
+        coverImage = {},
+        liveStream = {},
+      } = {},
     } = {},
   }) => {
     if (loading || error) return null;
 
+    const isLive = get(liveStream, 'isLive', false);
+    const hasLiveStreamContent = !!(
+      get(liveStream, 'webViewUrl') || get(liveStream, 'media.sources[0]')
+    );
+
     const videoSource = get(videos, '[0].sources[0]', null);
+    const shouldRender = (isLive && hasLiveStreamContent) || videoSource;
+
+    if (!shouldRender) return null;
+
     const coverImageSources = (coverImage && coverImage.sources) || [];
 
-    return (
-      <Mutation mutation={playVideoMutation}>
-        {(play) => (
-          <Container>
-            {videoSource ? (
-              <MediaButtonBorder>
-                <MediaButton
-                  type="primary"
-                  onPress={() =>
-                    play({
-                      variables: {
-                        mediaSource: videoSource,
-                        posterSources: coverImageSources,
-                        title,
-                        isVideo: true,
-                        artist: parentChannel.name,
-                      },
-                    })
-                  }
-                  useForeground
-                >
-                  <MediaIcon name="play" />
-                </MediaButton>
-              </MediaButtonBorder>
-            ) : null}
-          </Container>
-        )}
-      </Mutation>
-    );
+    // Content is live, and we have a livestream media
+    if (isLive && get(liveStream, 'media.sources[0].uri')) {
+      return this.renderMedia({
+        coverImageSources,
+        videoSource: liveStream.media.sources[0],
+        parentChannelName: parentChannel.name,
+        title,
+      });
+    }
+
+    // Content is live, and we don't have a livestream media
+    // but we do have a webview url
+    if (isLive && get(liveStream, 'webViewUrl')) {
+      return this.renderWebView({
+        webViewUrl: liveStream.webViewUrl,
+        coverImageSources,
+      });
+    }
+
+    // Default case, normal media.
+    return this.renderMedia({
+      coverImageSources,
+      videoSource,
+      parentChannelName: parentChannel.name,
+      title,
+    });
   };
 
   render() {
     if (!this.props.contentId) return null;
     return (
       <Query
-        query={getContentMedia}
+        query={GET_CONTENT_MEDIA}
+        fetchPolicy="cache-and-network"
         variables={{ contentId: this.props.contentId }}
       >
         {this.renderControls}
diff --git a/apolloschurchapp/src/content-single/NavigationHeader.js b/apolloschurchapp/src/content-single/NavigationHeader.js
index a2e3204..15b9d7b 100644
--- a/apolloschurchapp/src/content-single/NavigationHeader.js
+++ b/apolloschurchapp/src/content-single/NavigationHeader.js
@@ -4,24 +4,9 @@ import { ModalViewHeader } from '@apollosproject/ui-kit';
 
 const NavigationHeader = ({ scene, navigation }) => {
   let onBack = null;
-  if (scene.index > 0) onBack = () => navigation.goBack();
+  if (scene.index > 0) onBack = () => navigation.pop();
   const onClose = () => {
-    // Since we're dealing with nested navigators, we have to trigger two actions:
-    // One action that pops us to the top of the modal's navigation history
-    // Another action that pops us one more level, which triggers the modal to close.
-    //
-    // FWIW, calling something like `.pop(scenes.length + 1)` or something does not work,
-    // as that results in the same thing as `.popToTop()`. React-Navigation must have some special-case
-    // handling for calling `.pop()` at the top of a nested navigators stack.
-    //
-    // Because react (or redux?) chains renders, this still results in only one clean animation!
-    //
-    // This "double pop" is only needed when we are already deep in a navigation stack.
-    // In ReactNavigation, we could look at using "goBack('ContentSingle')"
-    if (scene.index > 0) {
-      navigation.popToTop();
-    }
-    navigation.pop();
+    navigation.goBack();
   };
 
   return <ModalViewHeader onClose={onClose} onBack={onBack} navigationHeader />;
diff --git a/apolloschurchapp/src/content-single/UniversalContentItem/index.js b/apolloschurchapp/src/content-single/UniversalContentItem/index.js
index 80c9aae..14db7a4 100644
--- a/apolloschurchapp/src/content-single/UniversalContentItem/index.js
+++ b/apolloschurchapp/src/content-single/UniversalContentItem/index.js
@@ -8,10 +8,12 @@ import {
   BackgroundView,
   PaddedView,
   H2,
+  StretchyView,
 } from '@apollosproject/ui-kit';
 import MediaControls from '../MediaControls';
 import HTMLContent from '../HTMLContent';
 import HorizontalContentFeed from '../HorizontalContentFeed';
+import Features from '../Features';
 
 const FlexedScrollView = styled({ flex: 1 })(ScrollView);
 
@@ -19,22 +21,29 @@ const UniversalContentItem = ({ content, loading }) => {
   const coverImageSources = get(content, 'coverImage.sources', []);
   return (
     <BackgroundView>
-      <FlexedScrollView>
-        {coverImageSources.length || loading ? (
-          <GradientOverlayImage
-            isLoading={!coverImageSources.length && loading}
-            source={coverImageSources}
-          />
-        ) : null}
-        <MediaControls contentId={content.id} />
-        <PaddedView>
-          <H2 padded isLoading={!content.title && loading}>
-            {content.title}
-          </H2>
-          <HTMLContent contentId={content.id} />
-        </PaddedView>
-        <HorizontalContentFeed contentId={content.id} />
-      </FlexedScrollView>
+      <StretchyView>
+        {({ Stretchy, ...scrollViewProps }) => (
+          <FlexedScrollView {...scrollViewProps}>
+            {coverImageSources.length || loading ? (
+              <Stretchy>
+                <GradientOverlayImage
+                  isLoading={!coverImageSources.length && loading}
+                  source={coverImageSources}
+                />
+              </Stretchy>
+            ) : null}
+            <MediaControls contentId={content.id} />
+            <PaddedView vertical={false}>
+              <H2 padded isLoading={!content.title && loading}>
+                {content.title}
+              </H2>
+              <HTMLContent contentId={content.id} />
+            </PaddedView>
+            <Features contentId={content.id} />
+            <HorizontalContentFeed contentId={content.id} />
+          </FlexedScrollView>
+        )}
+      </StretchyView>
     </BackgroundView>
   );
 };
diff --git a/apolloschurchapp/src/content-single/WeekendContentItem/index.js b/apolloschurchapp/src/content-single/WeekendContentItem/index.js
new file mode 100644
index 0000000..f48b63a
--- /dev/null
+++ b/apolloschurchapp/src/content-single/WeekendContentItem/index.js
@@ -0,0 +1,91 @@
+import React from 'react';
+import { ScrollView, Dimensions } from 'react-native';
+import { get } from 'lodash';
+import PropTypes from 'prop-types';
+import {
+  styled,
+  GradientOverlayImage,
+  BackgroundView,
+  PaddedView,
+  H2,
+  StretchyView,
+  ThemeMixin,
+  ThemeConsumer,
+  CardLabel,
+} from '@apollosproject/ui-kit';
+import MediaControls from '../MediaControls';
+import HTMLContent from '../HTMLContent';
+import HorizontalContentFeed from '../HorizontalContentFeed';
+import Features from '../Features';
+
+const FlexedScrollView = styled({ flex: 1 })(ScrollView);
+
+const Header = styled(({ hasMedia, theme }) => ({
+  paddingTop: Dimensions.get('window').width * 0.5, // for some reason % based padding still is buggy
+  alignItems: 'flex-start',
+  paddingBottom: hasMedia ? theme.sizing.baseUnit : theme.sizing.baseUnit * 2,
+  // backgroundColor: theme.colors.primary,
+}))(PaddedView);
+
+const WeekendContentItem = ({ content, loading }) => {
+  const coverImageSources = get(content, 'coverImage.sources', []);
+  return (
+    <ThemeMixin mixin={content.theme || {}}>
+      <ThemeConsumer>
+        {(theme) => (
+          <BackgroundView>
+            <StretchyView>
+              {({ Stretchy, ...scrollViewProps }) => (
+                <FlexedScrollView {...scrollViewProps}>
+                  <Header hasMedia={content.videos && content.videos.sources}>
+                    <ThemeMixin mixin={{ type: 'dark' }}>
+                      {coverImageSources.length || loading ? (
+                        <Stretchy
+                          background
+                          style={{ backgroundColor: theme.colors.primary }}
+                        >
+                          <GradientOverlayImage
+                            isLoading={!coverImageSources.length && loading}
+                            overlayColor={theme.colors.primary}
+                            overlayType="featured"
+                            source={coverImageSources}
+                          />
+                        </Stretchy>
+                      ) : null}
+                      <CardLabel
+                        title={
+                          content.parentChannel && content.parentChannel.name
+                        }
+                      />
+                      <H2 padded isLoading={!content.title && loading}>
+                        {content.title}
+                      </H2>
+                      <HTMLContent contentId={content.id} />
+                    </ThemeMixin>
+                  </Header>
+                  <MediaControls contentId={content.id} />
+                  <Features contentId={content.id} />
+                  <HorizontalContentFeed contentId={content.id} />
+                </FlexedScrollView>
+              )}
+            </StretchyView>
+          </BackgroundView>
+        )}
+      </ThemeConsumer>
+    </ThemeMixin>
+  );
+};
+
+WeekendContentItem.propTypes = {
+  content: PropTypes.shape({
+    __typename: PropTypes.string,
+    parentChannel: PropTypes.shape({
+      name: PropTypes.string,
+    }),
+    id: PropTypes.string,
+    title: PropTypes.string,
+  }),
+  loading: PropTypes.bool,
+};
+
+export default WeekendContentItem;
diff --git a/apolloschurchapp/src/content-single/getContentItem.js b/apolloschurchapp/src/content-single/getContentItem.js
index b4ebc19..8da8e36 100644
--- a/apolloschurchapp/src/content-single/getContentItem.js
+++ b/apolloschurchapp/src/content-single/getContentItem.js
@@ -1,6 +1,6 @@
 import gql from 'graphql-tag';
 
-export const contentItemFragment = gql`
+export const CONTENT_ITEM_FRAGMENT = gql`
   fragment contentItemFragment on ContentItem {
     id
     title
@@ -36,6 +36,11 @@ export const contentItemFragment = gql`
         uri
       }
     }
+    ... on WeekendContentItem {
+      liveStream {
+        isLive
+      }
+    }
   }
 `;
 
@@ -48,5 +53,5 @@ export default gql`
       }
     }
   }
-  ${contentItemFragment}
+  ${CONTENT_ITEM_FRAGMENT}
 `;
diff --git a/apolloschurchapp/src/content-single/index.js b/apolloschurchapp/src/content-single/index.js
index 83072a7..1e5b838 100644
--- a/apolloschurchapp/src/content-single/index.js
+++ b/apolloschurchapp/src/content-single/index.js
@@ -10,11 +10,8 @@ const ContentSingleNavigator = createStackNavigator(
     initialRouteName: 'ContentSingle',
     headerMode: 'float',
     headerTransitionPreset: 'fade-in-place',
+    navigationOptions: { header: null },
   }
 );
 
-ContentSingleNavigator.navigationOptions = {
-  header: null,
-};
-
 export default ContentSingleNavigator;
diff --git a/apolloschurchapp/src/index.js b/apolloschurchapp/src/index.js
index f3e2939..72f8ac1 100644
--- a/apolloschurchapp/src/index.js
+++ b/apolloschurchapp/src/index.js
@@ -1,6 +1,6 @@
 import React from 'react';
 import { StatusBar } from 'react-native';
-import { createStackNavigator } from 'react-navigation';
+import { createStackNavigator, createAppContainer } from 'react-navigation';
 import SplashScreen from 'react-native-splash-screen';
 
 import { BackgroundView, withTheme } from '@apollosproject/ui-kit';
@@ -51,11 +51,13 @@ const AppNavigator = createStackNavigator(
   }
 );
 
+const AppContainer = createAppContainer(AppNavigator);
+
 const App = () => (
   <Providers>
     <BackgroundView>
       <AppStatusBar barStyle="dark-content" />
-      <AppNavigator
+      <AppContainer
         ref={(navigatorRef) => {
           NavigationService.setTopLevelNavigator(navigatorRef);
         }}
diff --git a/apolloschurchapp/src/live/LiveButton.js b/apolloschurchapp/src/live/LiveButton.js
index c5760e3..6e1fa30 100644
--- a/apolloschurchapp/src/live/LiveButton.js
+++ b/apolloschurchapp/src/live/LiveButton.js
@@ -12,7 +12,7 @@ import {
 } from '@apollosproject/ui-kit';
 import { WebBrowserConsumer } from 'apolloschurchapp/src/ui/WebBrowser';
 
-import getLiveStream from './getLiveStream';
+import GET_LIVE_STREAM from './getLiveStream';
 
 const LiveCard = styled(({ theme }) => ({
   backgroundColor: theme.colors.lightSecondary,
@@ -20,7 +20,7 @@ const LiveCard = styled(({ theme }) => ({
 
 const LiveNowButton = () => (
   <Query
-    query={getLiveStream}
+    query={GET_LIVE_STREAM}
     fetchPolicy="cache-and-network"
     pollInterval={60000}
   >
diff --git a/apolloschurchapp/src/scripture/index.js b/apolloschurchapp/src/scripture/index.js
index 4492e5c..5b23d5d 100644
--- a/apolloschurchapp/src/scripture/index.js
+++ b/apolloschurchapp/src/scripture/index.js
@@ -3,7 +3,7 @@ import { Query } from 'react-apollo';
 import { get } from 'lodash';
 import PropTypes from 'prop-types';
 import { ScriptureItem } from '@apollosproject/ui-scripture';
-import getScripture from './getScripture';
+import GET_SCRIPTURE from './getScripture';
 
 /**
  * This is the data-bound "connected" scripture component.
@@ -15,7 +15,7 @@ const ScriptureConnected = ({
   references,
 }) =>
   references.map((query) => (
-    <Query query={getScripture} variables={{ query }} key={query}>
+    <Query query={GET_SCRIPTURE} variables={{ query }} key={query}>
       {({ loading, data }) => (
         <ScriptureComponent
           reference={get(data, 'scripture.reference', '')}
diff --git a/apolloschurchapp/src/store/index.js b/apolloschurchapp/src/store/index.js
index 336839b..66fdccb 100644
--- a/apolloschurchapp/src/store/index.js
+++ b/apolloschurchapp/src/store/index.js
@@ -27,7 +27,7 @@ export const defaults = {
   cacheLoaded: false,
 };
 
-const getIsLoggedIn = gql`
+const GET_LOGGED_IN = gql`
   query {
     isLoggedIn @client
   }
@@ -43,7 +43,7 @@ export const resolvers = {
         },
       });
       const { data: { isLoggedIn } = {} } = await client.query({
-        query: getIsLoggedIn,
+        query: GET_LOGGED_IN,
       });
 
       const { pushId } = cache.readQuery({
diff --git a/apolloschurchapp/src/tabs/connect/ActionBar.js b/apolloschurchapp/src/tabs/connect/ActionBar.js
new file mode 100644
index 0000000..8708fda
--- /dev/null
+++ b/apolloschurchapp/src/tabs/connect/ActionBar.js
@@ -0,0 +1,37 @@
+import React from 'react';
+import { ActionBar, ActionBarItem } from '@apollosproject/ui-kit';
+import { withNavigation } from 'react-navigation';
+import PropTypes from 'prop-types';
+import { WebBrowserConsumer } from 'apolloschurchapp/src/ui/WebBrowser';
+
+const Toolbar = ({ navigation }) => (
+  <WebBrowserConsumer>
+    {(openUrl) => (
+      <ActionBar>
+        <ActionBarItem
+          onPress={() => navigation.navigate('Passes')}
+          icon="check"
+          label="Check-in"
+        />
+        <ActionBarItem
+          onPress={() => openUrl('https://apollosrock.newspring.cc/page/186')}
+          icon="download"
+          label="Give"
+        />
+        <ActionBarItem
+          onPress={() => navigation.navigate('TestingControlPanel')}
+          icon="information"
+          label="Test"
+        />
+      </ActionBar>
+    )}
+  </WebBrowserConsumer>
+);
+
+Toolbar.propTypes = {
+  navigation: PropTypes.shape({
+    navigate: PropTypes.func.isRequired,
+  }).isRequired,
+};
+
+export default withNavigation(Toolbar);
diff --git a/apolloschurchapp/src/tabs/connect/ActionTable/index.js b/apolloschurchapp/src/tabs/connect/ActionTable/index.js
index c68be5c..d376af6 100644
--- a/apolloschurchapp/src/tabs/connect/ActionTable/index.js
+++ b/apolloschurchapp/src/tabs/connect/ActionTable/index.js
@@ -40,8 +40,8 @@ const ActionTable = () => (
             onPress={() => openUrl('https://apollosrock.newspring.cc/page/235')}
           >
             <Cell>
-              <CellIcon name="check" />
               <CellText>Find a serving opportunity</CellText>
+              <CellIcon name="arrow-next" />
             </Cell>
           </Touchable>
           <Divider />
@@ -49,8 +49,8 @@ const ActionTable = () => (
             onPress={() => openUrl('https://apollosrock.newspring.cc/page/236')}
           >
             <Cell>
-              <CellIcon name="groups" />
               <CellText>Join a small group</CellText>
+              <CellIcon name="arrow-next" />
             </Cell>
           </Touchable>
           <Divider />
@@ -58,8 +58,8 @@ const ActionTable = () => (
             onPress={() => openUrl('https://apollosrock.newspring.cc/page/233')}
           >
             <Cell>
-              <CellIcon name="share" />
               <CellText>I need prayer</CellText>
+              <CellIcon name="arrow-next" />
             </Cell>
           </Touchable>
           <Divider />
@@ -67,8 +67,8 @@ const ActionTable = () => (
             onPress={() => openUrl('https://apollosrock.newspring.cc/page/186')}
           >
             <Cell>
-              <CellIcon name="download" />
               <CellText>I would like to give</CellText>
+              <CellIcon name="arrow-next" />
             </Cell>
           </Touchable>
         </TableView>
@@ -79,6 +79,7 @@ const ActionTable = () => (
             <Cell>
               <CellIcon name="settings" />
               <CellText>Open Testing Panel</CellText>
+              <CellIcon name="arrow-next" />
             </Cell>
           </Touchable>
         </TableView>
diff --git a/apolloschurchapp/src/tabs/connect/Connect.js b/apolloschurchapp/src/tabs/connect/Connect.js
index 79bb6df..4ba12d4 100644
--- a/apolloschurchapp/src/tabs/connect/Connect.js
+++ b/apolloschurchapp/src/tabs/connect/Connect.js
@@ -1,51 +1,13 @@
 import React, { PureComponent } from 'react';
-import { ScrollView, SafeAreaView } from 'react-native';
-import { Query } from 'react-apollo';
-import { get } from 'lodash';
+import { ScrollView } from 'react-native';
+import { SafeAreaView } from 'react-navigation';
 import PropTypes from 'prop-types';
 
-import { LoginButton } from '@apollosproject/ui-auth';
-import {
-  H1,
-  BodyText,
-  Paragraph,
-  BackgroundView,
-  withTheme,
-  styled,
-  Icon,
-  PaddedView,
-} from '@apollosproject/ui-kit';
+import { BackgroundView } from '@apollosproject/ui-kit';
 import ActionTable from './ActionTable';
-import Toolbar from './Toolbar';
-import { UserAvatarHeaderConnected } from './UserAvatarHeader';
+import ActionBar from './ActionBar';
+import UserAvatarHeader from './UserAvatarHeader';
 import { RecentlyLikedTileFeedConnected } from './RecentlyLikedTileFeed';
-import getLoginState from './getLoginState';
-
-const Title = styled(({ theme }) => ({
-  color: theme.colors.primary,
-  paddingBottom: theme.helpers.verticalRhythm(1.5),
-}))(H1);
-
-const BrandIcon = withTheme(({ theme }) => ({
-  name: 'brand-icon',
-  size: theme.sizing.baseUnit * 2.25,
-  marginBottom: theme.sizing.baseUnit,
-  fill: theme.colors.primary,
-}))(Icon);
-
-const Header = styled(({ theme }) => ({
-  paddingBottom: theme.sizing.baseUnit * 1.5,
-  backgroundColor: theme.colors.background.paper,
-  paddingTop: theme.sizing.baseUnit * 4,
-}))(PaddedView);
-
-const StyledLoginButton = styled(({ theme }) => ({
-  marginVertical: theme.sizing.baseUnit,
-}))(LoginButton);
-
-const StyledScrollView = styled(({ theme }) => ({
-  marginVertical: theme.sizing.baseUnit,
-}))(ScrollView);
 
 class Connect extends PureComponent {
   static navigationOptions = () => ({
@@ -63,46 +25,14 @@ class Connect extends PureComponent {
   render() {
     return (
       <BackgroundView>
-        <Query query={getLoginState}>
-          {({ data }) => {
-            if (get(data, 'isLoggedIn', false))
-              return (
-                <SafeAreaView>
-                  <StyledScrollView>
-                    <UserAvatarHeaderConnected key="UserAvatarHeaderConnected" />
-                    <RecentlyLikedTileFeedConnected key="RecentlyLikedTileFeedConnected" />
-                    <Toolbar />
-                    <ActionTable />
-                  </StyledScrollView>
-                </SafeAreaView>
-              );
-            return (
-              <SafeAreaView>
-                <ScrollView>
-                  <Header>
-                    <BrandIcon />
-                    <Title>Connect!</Title>
-                    <Paragraph>
-                      <BodyText>
-                        Our mission is to help you connect to others as well as
-                        help you in your walk with Christ.
-                      </BodyText>
-                    </Paragraph>
-                    <Paragraph>
-                      <BodyText>
-                        By joining this community, you will unlock amazing
-                        features like; curated content and devotionals, simple
-                        event registration, and easy online giving!
-                      </BodyText>
-                    </Paragraph>
-                    <StyledLoginButton />
-                  </Header>
-                  <ActionTable />
-                </ScrollView>
-              </SafeAreaView>
-            );
-          }}
-        </Query>
+        <SafeAreaView>
+          <ScrollView>
+            <UserAvatarHeader />
+            <ActionBar />
+            <RecentlyLikedTileFeedConnected />
+            <ActionTable />
+          </ScrollView>
+        </SafeAreaView>
       </BackgroundView>
     );
   }
diff --git a/apolloschurchapp/src/tabs/connect/LikedContentList/LikedContentList.tests.js b/apolloschurchapp/src/tabs/connect/LikedContentList/LikedContentList.tests.js
index 78a32c7..673817c 100644
--- a/apolloschurchapp/src/tabs/connect/LikedContentList/LikedContentList.tests.js
+++ b/apolloschurchapp/src/tabs/connect/LikedContentList/LikedContentList.tests.js
@@ -4,14 +4,14 @@ import wait from 'waait';
 
 import Providers from 'apolloschurchapp/src/Providers';
 
-import getLikedContent from '../getLikedContent';
+import GET_LIKED_CONTENT from '../getLikedContent';
 import LikedContentList from '.';
 
 describe('LikedContentList component', () => {
   it('renders LikedContentList', async () => {
     const mock = {
       request: {
-        query: getLikedContent,
+        query: GET_LIKED_CONTENT,
       },
       result: {
         data: {
diff --git a/apolloschurchapp/src/tabs/connect/LikedContentList/index.js b/apolloschurchapp/src/tabs/connect/LikedContentList/index.js
index 7ef1232..38dedb3 100644
--- a/apolloschurchapp/src/tabs/connect/LikedContentList/index.js
+++ b/apolloschurchapp/src/tabs/connect/LikedContentList/index.js
@@ -7,7 +7,7 @@ import { BackgroundView, FeedView } from '@apollosproject/ui-kit';
 import fetchMoreResolver from 'apolloschurchapp/src/utils/fetchMoreResolver';
 import ContentCardConnected from '../../../ui/ContentCardConnected';
 
-import getLikedContent from '../getLikedContent';
+import GET_LIKED_CONTENT from '../getLikedContent';
 /** A FeedView wrapped in a query to pull content data. */
 class LikedContentList extends PureComponent {
   /** Function for React Navigation to set information in the header. */
@@ -38,7 +38,7 @@ class LikedContentList extends PureComponent {
     return (
       <BackgroundView>
         <Query
-          query={getLikedContent}
+          query={GET_LIKED_CONTENT}
           fetchPolicy="cache-and-network"
           variables={{ first: 20 }}
         >
diff --git a/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeed.js b/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeed.js
index dc2e2b2..b829473 100644
--- a/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeed.js
+++ b/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeed.js
@@ -16,7 +16,7 @@ import {
   withIsLoading,
 } from '@apollosproject/ui-kit';
 
-import ContentCard from 'apolloschurchapp/src/ui/ContentCardConnected';
+import HorizontalContentCardConnected from 'apolloschurchapp/src/ui/HorizontalContentCardConnected';
 
 const RowHeader = styled(({ theme }) => ({
   flexDirection: 'row',
@@ -74,11 +74,9 @@ class RecentlyLikedTileFeed extends Component {
         });
       }}
     >
-      <ContentCard
+      <HorizontalContentCardConnected
         isLoading={item.isLoading}
-        tile
         contentId={item.id}
-        inHorizontalList
       />
     </TouchableScale>
   );
@@ -107,7 +105,6 @@ class RecentlyLikedTileFeed extends Component {
           </AndroidTouchableFix>
         </RowHeader>
         <StyledHorizontalTileFeed
-          initialNumToRender={5}
           content={content}
           renderItem={this.titleImageItem}
           loadingStateObject={this.loadingStateObject}
diff --git a/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeedConnected.js b/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeedConnected.js
index 7527d53..bfccbe1 100644
--- a/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeedConnected.js
+++ b/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeedConnected.js
@@ -2,12 +2,12 @@ import React from 'react';
 import { Query } from 'react-apollo';
 import PropTypes from 'prop-types';
 
-import getLikedContent from '../getLikedContent';
+import GET_LIKED_CONTENT from '../getLikedContent';
 import RecentlyLikedTileFeed from './RecentlyLikedTileFeed';
 
 const RecentlyLikedTileFeedConnected = ({ navigation }) => (
   <Query
-    query={getLikedContent}
+    query={GET_LIKED_CONTENT}
     fetchPolicy="cache-and-network"
     variables={{ first: 3 }}
   >
diff --git a/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeedConnected.tests.js b/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeedConnected.tests.js
index 19c91cf..8463a14 100644
--- a/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeedConnected.tests.js
+++ b/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeedConnected.tests.js
@@ -4,14 +4,14 @@ import wait from 'waait';
 
 import Providers from 'apolloschurchapp/src/Providers';
 
-import getLikedContent from '../getLikedContent';
+import GET_LIKED_CONTENT from '../getLikedContent';
 import RecentlyLikedTileFeedConnected from './RecentlyLikedTileFeedConnected';
 
 describe('RecentlyLikedTileFeedConnected', () => {
   it('renders a RecentlyLikedTileFeedConnected', async () => {
     const mock = {
       request: {
-        query: getLikedContent,
+        query: GET_LIKED_CONTENT,
       },
       result: {
         data: {
@@ -87,7 +87,7 @@ describe('RecentlyLikedTileFeedConnected', () => {
   it('renders nothing if no liked content', async () => {
     const mock = {
       request: {
-        query: getLikedContent,
+        query: GET_LIKED_CONTENT,
       },
       result: {
         data: {
diff --git a/apolloschurchapp/src/tabs/connect/Toolbar.js b/apolloschurchapp/src/tabs/connect/Toolbar.js
deleted file mode 100644
index 159180e..0000000
--- a/apolloschurchapp/src/tabs/connect/Toolbar.js
+++ /dev/null
@@ -1,33 +0,0 @@
-import React from 'react';
-import {
-  TableView,
-  Cell,
-  CellIcon,
-  CellText,
-  Touchable,
-} from '@apollosproject/ui-kit';
-import { withNavigation } from 'react-navigation';
-import PropTypes from 'prop-types';
-
-const Toolbar = ({ navigation }) => (
-  <TableView>
-    <Touchable
-      onPress={() => {
-        navigation.navigate('Passes');
-      }}
-    >
-      <Cell>
-        <CellIcon name="check" />
-        <CellText>Check-in</CellText>
-      </Cell>
-    </Touchable>
-  </TableView>
-);
-
-Toolbar.propTypes = {
-  navigation: PropTypes.shape({
-    navigate: PropTypes.func.isRequired,
-  }).isRequired,
-};
-
-export default withNavigation(Toolbar);
diff --git a/apolloschurchapp/src/tabs/connect/UserAvatarHeader.js b/apolloschurchapp/src/tabs/connect/UserAvatarHeader.js
new file mode 100644
index 0000000..9f1b65a
--- /dev/null
+++ b/apolloschurchapp/src/tabs/connect/UserAvatarHeader.js
@@ -0,0 +1,44 @@
+import React from 'react';
+import { Query } from 'react-apollo';
+import PropTypes from 'prop-types';
+import { withNavigation } from 'react-navigation';
+
+import { Avatar, H3, styled, PaddedView } from '@apollosproject/ui-kit';
+import GET_USER_PROFILE from './getUserProfile';
+
+const Container = styled({
+  alignItems: 'center',
+  justifyContent: 'center',
+})(PaddedView);
+
+const UserAvatarHeader = ({ navigation }) => (
+  <Query query={GET_USER_PROFILE} fetchPolicy="cache-and-network">
+    {({
+      data: { currentUser: { profile: { photo, firstName } = {} } = {} } = {},
+    }) => (
+      <Container>
+        <PaddedView horizontal={false}>
+          <Avatar
+            source={photo}
+            size="large"
+            buttonIcon="settings"
+            onPressIcon={() => navigation.navigate('UserSettings')}
+          />
+        </PaddedView>
+        <H3>
+          Hello
+          {firstName ? ` ${firstName}` : ''}!
+        </H3>
+      </Container>
+    )}
+  </Query>
+);
+
+UserAvatarHeader.propTypes = {
+  navigation: PropTypes.shape({
+    getParam: PropTypes.func,
+    navigate: PropTypes.func,
+  }),
+};
+
+export default withNavigation(UserAvatarHeader);
diff --git a/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeader.js b/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeader.js
deleted file mode 100644
index caa56cb..0000000
--- a/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeader.js
+++ /dev/null
@@ -1,68 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-import { compose } from 'recompose';
-import { withNavigation } from 'react-navigation';
-
-import UserAvatarView from 'apolloschurchapp/src/ui/UserAvatarView';
-
-import {
-  withIsLoading,
-  Touchable,
-  Icon,
-  withTheme,
-  styled,
-  PaddedView,
-  FlexedView,
-} from '@apollosproject/ui-kit';
-
-const Container = styled(({ theme }) => ({
-  alignItems: 'center',
-  flexDirection: 'row',
-  paddingTop: theme.sizing.baseUnit * 2,
-  paddingBottom: 0,
-}))(PaddedView);
-
-const SettingsIcon = compose(
-  withTheme(({ theme }) => ({
-    name: 'settings',
-    fill: theme.colors.text.tertiary,
-  }))
-)(Icon);
-
-const UserAvatarHeader = ({
-  firstName,
-  lastName,
-  location,
-  navigation,
-  disabled,
-  isLoading,
-}) => (
-  <Container>
-    <FlexedView>
-      <UserAvatarView
-        firstName={firstName}
-        lastName={lastName}
-        location={location}
-        disabled={disabled}
-        isLoading={isLoading}
-      />
-    </FlexedView>
-    <Touchable onPress={() => navigation.navigate('UserSettings')}>
-      <SettingsIcon />
-    </Touchable>
-  </Container>
-);
-
-UserAvatarHeader.propTypes = {
-  firstName: PropTypes.string,
-  lastName: PropTypes.string,
-  location: PropTypes.string,
-  navigation: PropTypes.shape({
-    getParam: PropTypes.func,
-    navigate: PropTypes.func,
-  }),
-  disabled: PropTypes.bool,
-  isLoading: PropTypes.bool,
-};
-
-export default withNavigation(withIsLoading(UserAvatarHeader));
diff --git a/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeader.test.js b/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeader.test.js
deleted file mode 100644
index 314dfa6..0000000
--- a/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeader.test.js
+++ /dev/null
@@ -1,65 +0,0 @@
-import React from 'react';
-import renderer from 'react-test-renderer';
-
-import Providers from 'apolloschurchapp/src/Providers';
-import UserAvatarHeader from './UserAvatarHeader';
-
-describe('user avatar header', () => {
-  it('renders user avatar header if logged in', () => {
-    const props = {
-      theme: {
-        colors: {
-          text: {
-            tertiary: 'red',
-          },
-        },
-      },
-      firstName: 'Isaac',
-      lastName: 'Hardy',
-      location: 'Anderson, SC',
-      photo: {
-        uri: 'google.com',
-      },
-      refetch: jest.fn(),
-      navigation: jest.fn(),
-      disabled: true,
-      isLoading: false,
-    };
-
-    const tree = renderer.create(
-      <Providers>
-        <UserAvatarHeader {...props} />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-
-  it('renders placeholder when loading', () => {
-    const props = {
-      theme: {
-        colors: {
-          text: {
-            tertiary: 'red',
-          },
-        },
-      },
-      firstName: 'Isaac',
-      lastName: 'Hardy',
-      location: 'Anderson, SC',
-      photo: {
-        uri: 'google.com',
-      },
-      refetch: jest.fn(),
-      navigation: jest.fn(),
-      disabled: true,
-      isLoading: true,
-    };
-
-    const tree = renderer.create(
-      <Providers>
-        <UserAvatarHeader {...props} />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeaderConnected.js b/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeaderConnected.js
deleted file mode 100644
index 397a879..0000000
--- a/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeaderConnected.js
+++ /dev/null
@@ -1,39 +0,0 @@
-import React from 'react';
-import { Query } from 'react-apollo';
-import PropTypes from 'prop-types';
-import { get } from 'lodash';
-
-import getUserProfile from '../getUserProfile';
-import UserAvatarHeader from './UserAvatarHeader';
-
-const UserAvatarHeaderConnected = ({ navigation }) => (
-  <Query query={getUserProfile} fetchPolicy="cache-and-network">
-    {({
-      data: {
-        currentUser: {
-          profile: { photo, firstName, lastName, campus } = {},
-        } = {},
-      } = {},
-      refetch,
-    }) => (
-      <UserAvatarHeader
-        firstName={firstName}
-        lastName={lastName}
-        location={get(campus, 'name')}
-        photo={photo}
-        refetch={refetch}
-        navigation={navigation}
-        disabled
-      />
-    )}
-  </Query>
-);
-
-UserAvatarHeaderConnected.propTypes = {
-  navigation: PropTypes.shape({
-    getParam: PropTypes.func,
-    navigate: PropTypes.func,
-  }),
-};
-
-export default UserAvatarHeaderConnected;
diff --git a/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeaderConnected.tests.js b/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeaderConnected.tests.js
deleted file mode 100644
index b4bad0c..0000000
--- a/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeaderConnected.tests.js
+++ /dev/null
@@ -1,63 +0,0 @@
-import React from 'react';
-import { renderWithApolloData } from 'apolloschurchapp/src/utils/testUtils';
-
-import Providers from 'apolloschurchapp/src/Providers';
-
-import getUserProfile from '../getUserProfile';
-import UserAvatarHeaderConnected from './UserAvatarHeaderConnected';
-
-describe('user avatar header connect', () => {
-  it('renders user avatar header if logged in', async () => {
-    const mock = {
-      request: {
-        query: getUserProfile,
-      },
-      result: {
-        data: {
-          currentUser: {
-            __typename: 'AuthenticatedUser',
-            id: 'AuthenticatedUser:123',
-            profile: {
-              id: 'Person:123',
-              __typename: 'Person',
-              gender: 'Male',
-              birthDate: '1980-02-10T00:00:00',
-              firstName: 'Isaac',
-              lastName: 'Hardy',
-              campus: {
-                __typename: 'Campus',
-                id: 'Campus:a0f64573eabf00a607bec911794d50fb',
-                name: 'Chicago Campus',
-                latitude: 42.09203,
-                longitude: -88.13289,
-                distanceFromLocation: null,
-                street1: '67 Algonquin Rd',
-                street2: '',
-                city: 'South Barrington',
-                state: 'IL',
-                postalCode: '60010-6143',
-                image: {
-                  __typename: 'ImageMediaSource',
-                  uri: 'https://picsum.photos/300/300/?random',
-                },
-              },
-              email: 'isaac.hardy@newspring.cc',
-              nickName: 'Batman',
-              photo: {
-                __typename: 'ImageMediaSource',
-                uri: 'https://some-uri.com/test.jpg',
-              },
-            },
-          },
-        },
-      },
-    };
-    const navigation = { navigate: jest.fn(), getParam: jest.fn() };
-    const tree = await renderWithApolloData(
-      <Providers mocks={[mock]}>
-        <UserAvatarHeaderConnected navigation={navigation} />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/tabs/connect/UserAvatarHeader/index.js b/apolloschurchapp/src/tabs/connect/UserAvatarHeader/index.js
deleted file mode 100644
index a8b66ec..0000000
--- a/apolloschurchapp/src/tabs/connect/UserAvatarHeader/index.js
+++ /dev/null
@@ -1,2 +0,0 @@
-export UserAvatarHeader from './UserAvatarHeader';
-export UserAvatarHeaderConnected from './UserAvatarHeaderConnected';
diff --git a/apolloschurchapp/src/tabs/connect/getLikedContent.js b/apolloschurchapp/src/tabs/connect/getLikedContent.js
index 5e4e1f9..67a6720 100644
--- a/apolloschurchapp/src/tabs/connect/getLikedContent.js
+++ b/apolloschurchapp/src/tabs/connect/getLikedContent.js
@@ -1,7 +1,7 @@
 import gql from 'graphql-tag';
 
-import { largeCardFragment } from 'apolloschurchapp/src/ui/ContentCardConnected';
-import { contentItemFragment } from 'apolloschurchapp/src/content-single/getContentItem';
+import { LARGE_CARD_FRAGMENT } from 'apolloschurchapp/src/ui/ContentCardConnected';
+import { CONTENT_ITEM_FRAGMENT } from 'apolloschurchapp/src/content-single/getContentItem';
 
 export default gql`
   query getAllLikedContent($first: Int, $after: String) {
@@ -19,6 +19,6 @@ export default gql`
       }
     }
   }
-  ${contentItemFragment}
-  ${largeCardFragment}
+  ${CONTENT_ITEM_FRAGMENT}
+  ${LARGE_CARD_FRAGMENT}
 `;
diff --git a/apolloschurchapp/src/tabs/discover/Discover.js b/apolloschurchapp/src/tabs/discover/Discover.js
index 76d8b24..210c1a2 100644
--- a/apolloschurchapp/src/tabs/discover/Discover.js
+++ b/apolloschurchapp/src/tabs/discover/Discover.js
@@ -5,7 +5,7 @@ import { get } from 'lodash';
 import { FeedView, BackgroundView } from '@apollosproject/ui-kit';
 
 import TileContentFeed from './TileContentFeed';
-import getContentChannels from './getContentChannels';
+import GET_CONTENT_CHANNELS from './getContentChannels';
 
 const childContentItemLoadingState = {
   title: '',
@@ -33,7 +33,7 @@ class Discover extends PureComponent {
   render() {
     return (
       <BackgroundView>
-        <Query query={getContentChannels} fetchPolicy="cache-and-network">
+        <Query query={GET_CONTENT_CHANNELS} fetchPolicy="cache-and-network">
           {({
             error,
             loading,
diff --git a/apolloschurchapp/src/tabs/discover/TileContentFeed.js b/apolloschurchapp/src/tabs/discover/TileContentFeed.js
index 656cf7f..9d2a0ff 100644
--- a/apolloschurchapp/src/tabs/discover/TileContentFeed.js
+++ b/apolloschurchapp/src/tabs/discover/TileContentFeed.js
@@ -15,7 +15,7 @@ import {
   withIsLoading,
 } from '@apollosproject/ui-kit';
 
-import ContentCardConnected from '../../ui/ContentCardConnected';
+import HorizontalContentCardConnected from '../../ui/HorizontalContentCardConnected';
 
 const RowHeader = styled(({ theme }) => ({
   flexDirection: 'row',
@@ -84,11 +84,9 @@ const TileContentFeed = ({ isLoading, id, name, navigation, content = [] }) => (
             });
           }}
         >
-          <ContentCardConnected
+          <HorizontalContentCardConnected
             contentId={item.id}
             isLoading={isLoading}
-            tile
-            inHorizontalList
           />
         </TouchableScale>
       )}
diff --git a/apolloschurchapp/src/tabs/discover/discover.tests.js b/apolloschurchapp/src/tabs/discover/discover.tests.js
index 96f2fde..5e7b853 100644
--- a/apolloschurchapp/src/tabs/discover/discover.tests.js
+++ b/apolloschurchapp/src/tabs/discover/discover.tests.js
@@ -1,17 +1,17 @@
 import React from 'react';
 import renderer from 'react-test-renderer';
-import { createStackNavigator } from 'react-navigation';
+import { createStackNavigator, createAppContainer } from 'react-navigation';
 
 import Providers from 'apolloschurchapp/src/Providers';
 
 import Discover from './Discover';
-import getContentChannels from './getContentChannels';
+import GET_CONTENT_CHANNELS from './getContentChannels';
 
 describe('Test the Discover Component Query', () => {
   it('Should retrieve the Content Channel Feeds', () => {
     const mock = {
       request: {
-        query: getContentChannels,
+        query: GET_CONTENT_CHANNELS,
       },
       result: {
         data: {
@@ -159,7 +159,8 @@ describe('Test the Discover Component Query', () => {
       },
     };
 
-    const DiscoverWithNavigation = createStackNavigator({ Discover });
+    const DiscoverStack = createStackNavigator({ Discover });
+    const DiscoverWithNavigation = createAppContainer(DiscoverStack);
     const tree = renderer.create(
       <Providers mocks={[mock]}>
         <DiscoverWithNavigation />
diff --git a/apolloschurchapp/src/tabs/discover/getContentChannels.js b/apolloschurchapp/src/tabs/discover/getContentChannels.js
index bc9c243..a63629c 100644
--- a/apolloschurchapp/src/tabs/discover/getContentChannels.js
+++ b/apolloschurchapp/src/tabs/discover/getContentChannels.js
@@ -1,7 +1,7 @@
 import gql from 'graphql-tag';
 
-import { contentItemFragment } from 'apolloschurchapp/src/content-single/getContentItem';
-import { tileCardFragment } from 'apolloschurchapp/src/ui/ContentCardConnected';
+import { CONTENT_ITEM_FRAGMENT } from 'apolloschurchapp/src/content-single/getContentItem';
+import { LARGE_CARD_FRAGMENT } from 'apolloschurchapp/src/ui/ContentCardConnected';
 
 export default gql`
   query getContentChannels {
@@ -13,12 +13,12 @@ export default gql`
           node {
             id
             ...contentItemFragment
-            ...tileCardFragment
+            ...largeCardFragment
           }
         }
       }
     }
   }
-  ${contentItemFragment}
-  ${tileCardFragment}
+  ${CONTENT_ITEM_FRAGMENT}
+  ${LARGE_CARD_FRAGMENT}
 `;
diff --git a/apolloschurchapp/src/tabs/home/Features/getFeedFeatures.js b/apolloschurchapp/src/tabs/home/Features/getFeedFeatures.js
new file mode 100644
index 0000000..caffc10
--- /dev/null
+++ b/apolloschurchapp/src/tabs/home/Features/getFeedFeatures.js
@@ -0,0 +1,27 @@
+import gql from 'graphql-tag';
+
+export default gql`
+  query getFeedFeatures {
+    userFeedFeatures {
+      ... on ActionListFeature {
+        id
+        title
+        subtitle
+        actions {
+          id
+          title
+          subtitle
+          action
+          image {
+            sources {
+              uri
+            }
+          }
+          relatedNode {
+            id
+          }
+        }
+      }
+    }
+  }
+`;
diff --git a/apolloschurchapp/src/tabs/home/Features/index.js b/apolloschurchapp/src/tabs/home/Features/index.js
new file mode 100644
index 0000000..87878f3
--- /dev/null
+++ b/apolloschurchapp/src/tabs/home/Features/index.js
@@ -0,0 +1,129 @@
+import React, { memo } from 'react';
+import { Query } from 'react-apollo';
+import { get } from 'lodash';
+// import PropTypes from 'prop-types';
+
+import { styled, ActionListCard, H3, H6 } from '@apollosproject/ui-kit';
+
+import GET_FEED_FEATURES from './getFeedFeatures';
+
+const StyledH6 = styled(({ theme }) => ({
+  color: theme.colors.text.tertiary,
+}))(H6);
+
+// const handleOnPressActionItem = (id) =>
+//   this.props.navigation.navigate('ContentSingle', {
+//     itemId: id,
+//     transitionKey: 2,
+//   });
+
+const Features = memo(({ navigation }) => (
+  <Query query={GET_FEED_FEATURES} fetchPolicy="cache-and-network">
+    {({ data: features, loading }) =>
+      loading ? (
+        <ActionListCard
+          isLoading
+          header={
+            <>
+              <StyledH6 isLoading />
+              <H3 isLoading />
+            </>
+          }
+          actions={[
+            {
+              id: 'fakeId1',
+              title: '',
+              subtitle: '',
+              parentChannel: {
+                id: '',
+                name: '',
+              },
+              coverImage: {
+                sources: {
+                  uri: '',
+                },
+              },
+            },
+            {
+              id: 'fakeId2',
+              title: '',
+              subtitle: '',
+              parentChannel: {
+                id: '',
+                name: '',
+              },
+              coverImage: {
+                sources: {
+                  uri: '',
+                },
+              },
+            },
+            {
+              id: 'fakeId3',
+              title: '',
+              subtitle: '',
+              parentChannel: {
+                id: '',
+                name: '',
+              },
+              coverImage: {
+                sources: {
+                  uri: '',
+                },
+              },
+            },
+            {
+              id: 'fakeId4',
+              title: '',
+              subtitle: '',
+              parentChannel: {
+                id: '',
+                name: '',
+              },
+              coverImage: {
+                sources: {
+                  uri: '',
+                },
+              },
+            },
+          ]}
+        />
+      ) : (
+        get(features, 'userFeedFeatures', []).map(
+          ({ title, subtitle, actions, id }) =>
+            actions.length ? (
+              <ActionListCard
+                isLoading={loading}
+                key={id}
+                header={
+                  <>
+                    <StyledH6 numberOfLines={1}>{title}</StyledH6>
+                    <H3 numberOfLines={3}>{subtitle}</H3>
+                  </>
+                }
+                actions={actions}
+                onPressActionItem={({ action, relatedNode }) => {
+                  if (action === 'READ_CONTENT') {
+                    navigation.navigate('ContentSingle', {
+                      itemId: relatedNode.id,
+                      transitionKey: 2,
+                    });
+                  }
+                }}
+                onPressCardActionButton={() =>
+                  navigation.navigate('ContentFeed', {
+                    itemId: id,
+                    itemTitle: title,
+                  })
+                }
+              />
+            ) : null
+        )
+      )
+    }
+  </Query>
+));
+
+Features.displayName = 'Features';
+
+export default Features;
diff --git a/apolloschurchapp/src/tabs/home/Home.js b/apolloschurchapp/src/tabs/home/Home.js
index 74f520b..118f612 100644
--- a/apolloschurchapp/src/tabs/home/Home.js
+++ b/apolloschurchapp/src/tabs/home/Home.js
@@ -9,9 +9,8 @@ import {
   styled,
   FeedView,
   BackgroundView,
-  H3,
-  H6,
   TouchableScale,
+  FeaturedCard,
 } from '@apollosproject/ui-kit';
 
 import fetchMoreResolver from '../../utils/fetchMoreResolver';
@@ -19,10 +18,9 @@ import ContentCardConnected from '../../ui/ContentCardConnected';
 
 import { LiveButton } from '../../live';
 
-import ContentTableCard from '../../ui/ContentTableCard';
-import getUserFeed from './getUserFeed';
-import getPersonaFeed from './getPersonaFeed';
-import getCampaignContentItem from './getCampaignContentItem';
+import Features from './Features';
+import GET_USER_FEED from './getUserFeed';
+import GET_CAMPAIGN_CONTENT_ITEM from './getCampaignContentItem';
 
 const LogoTitle = styled(({ theme }) => ({
   height: theme.sizing.baseUnit,
@@ -31,10 +29,6 @@ const LogoTitle = styled(({ theme }) => ({
   resizeMode: 'contain',
 }))(Image);
 
-const StyledH6 = styled(({ theme }) => ({
-  color: theme.colors.text.tertiary,
-}))(H6);
-
 class Home extends PureComponent {
   static navigationOptions = () => ({
     header: null,
@@ -59,7 +53,7 @@ class Home extends PureComponent {
       <BackgroundView>
         <SafeAreaView>
           <Query
-            query={getUserFeed}
+            query={GET_USER_FEED}
             variables={{
               first: 10,
               after: null,
@@ -86,7 +80,7 @@ class Home extends PureComponent {
                     <LogoTitle source={require('./wordmark.png')} />
                     <LiveButton />
                     <Query
-                      query={getCampaignContentItem}
+                      query={GET_CAMPAIGN_CONTENT_ITEM}
                       fetchPolicy="cache-and-network"
                     >
                       {({ data: featuredData, loading: isFeaturedLoading }) => {
@@ -109,6 +103,7 @@ class Home extends PureComponent {
                             }
                           >
                             <ContentCardConnected
+                              Component={FeaturedCard}
                               contentId={featuredItem.id}
                               isLoading={isFeaturedLoading}
                             />
@@ -116,39 +111,7 @@ class Home extends PureComponent {
                         );
                       }}
                     </Query>
-                    <Query
-                      query={getPersonaFeed}
-                      fetchPolicy="cache-and-network"
-                    >
-                      {({
-                        data: personaData,
-                        loading: isContentTableLoading,
-                      }) => (
-                        <ContentTableCard
-                          isLoading={isContentTableLoading}
-                          onPress={this.handleOnPress}
-                          header={
-                            <>
-                              <StyledH6 isLoading={isContentTableLoading}>
-                                FOR YOU
-                              </StyledH6>
-                              <H3
-                                isLoading={isContentTableLoading}
-                                numberOfLines={3}
-                                ellipsizeMode="tail"
-                              >
-                                Explore what God calls you to today
-                              </H3>
-                            </>
-                          }
-                          content={get(
-                            personaData,
-                            'personaFeed.edges',
-                            []
-                          ).map((edge) => edge.node)}
-                        />
-                      )}
-                    </Query>
+                    <Features navigation={this.props.navigation} />
                   </>
                 }
                 onPressItem={this.handleOnPress}
diff --git a/apolloschurchapp/src/tabs/home/getCampaignContentItem.js b/apolloschurchapp/src/tabs/home/getCampaignContentItem.js
index 5bdb082..345463c 100644
--- a/apolloschurchapp/src/tabs/home/getCampaignContentItem.js
+++ b/apolloschurchapp/src/tabs/home/getCampaignContentItem.js
@@ -1,7 +1,7 @@
 import gql from 'graphql-tag';
 
-import { contentItemFragment } from 'apolloschurchapp/src/content-single/getContentItem';
-import { largeCardFragment } from 'apolloschurchapp/src/ui/ContentCardConnected';
+import { CONTENT_ITEM_FRAGMENT } from 'apolloschurchapp/src/content-single/getContentItem';
+import { LARGE_CARD_FRAGMENT } from 'apolloschurchapp/src/ui/ContentCardConnected';
 
 export default gql`
   query campaigns {
@@ -20,6 +20,6 @@ export default gql`
       }
     }
   }
-  ${contentItemFragment}
-  ${largeCardFragment}
+  ${CONTENT_ITEM_FRAGMENT}
+  ${LARGE_CARD_FRAGMENT}
 `;
diff --git a/apolloschurchapp/src/tabs/home/getFeedFeatures.js b/apolloschurchapp/src/tabs/home/getFeedFeatures.js
new file mode 100644
index 0000000..caffc10
--- /dev/null
+++ b/apolloschurchapp/src/tabs/home/getFeedFeatures.js
@@ -0,0 +1,27 @@
+import gql from 'graphql-tag';
+
+export default gql`
+  query getFeedFeatures {
+    userFeedFeatures {
+      ... on ActionListFeature {
+        id
+        title
+        subtitle
+        actions {
+          id
+          title
+          subtitle
+          action
+          image {
+            sources {
+              uri
+            }
+          }
+          relatedNode {
+            id
+          }
+        }
+      }
+    }
+  }
+`;
diff --git a/apolloschurchapp/src/tabs/home/getPersonaFeed.js b/apolloschurchapp/src/tabs/home/getPersonaFeed.js
deleted file mode 100644
index b8130e0..0000000
--- a/apolloschurchapp/src/tabs/home/getPersonaFeed.js
+++ /dev/null
@@ -1,19 +0,0 @@
-import gql from 'graphql-tag';
-
-import { contentItemFragment } from 'apolloschurchapp/src/content-single/getContentItem';
-import { largeCardFragment } from 'apolloschurchapp/src/ui/ContentCardConnected';
-
-export default gql`
-  query getPersonaFeed {
-    personaFeed(first: 4) {
-      edges {
-        node {
-          ...largeCardFragment
-          ...contentItemFragment
-        }
-      }
-    }
-  }
-  ${contentItemFragment}
-  ${largeCardFragment}
-`;
diff --git a/apolloschurchapp/src/tabs/home/getUserFeed.js b/apolloschurchapp/src/tabs/home/getUserFeed.js
index 8ab2b1f..e120403 100644
--- a/apolloschurchapp/src/tabs/home/getUserFeed.js
+++ b/apolloschurchapp/src/tabs/home/getUserFeed.js
@@ -1,7 +1,7 @@
 import gql from 'graphql-tag';
 
-import { contentItemFragment } from 'apolloschurchapp/src/content-single/getContentItem';
-import { largeCardFragment } from 'apolloschurchapp/src/ui/ContentCardConnected';
+import { CONTENT_ITEM_FRAGMENT } from 'apolloschurchapp/src/content-single/getContentItem';
+import { LARGE_CARD_FRAGMENT } from 'apolloschurchapp/src/ui/ContentCardConnected';
 
 export default gql`
   query getUserFeed($first: Int, $after: String) {
@@ -17,6 +17,6 @@ export default gql`
       }
     }
   }
-  ${contentItemFragment}
-  ${largeCardFragment}
+  ${CONTENT_ITEM_FRAGMENT}
+  ${LARGE_CARD_FRAGMENT}
 `;
diff --git a/apolloschurchapp/src/tabs/home/home.tests.js b/apolloschurchapp/src/tabs/home/home.tests.js
index e9f98c5..96a5008 100644
--- a/apolloschurchapp/src/tabs/home/home.tests.js
+++ b/apolloschurchapp/src/tabs/home/home.tests.js
@@ -4,13 +4,13 @@ import renderer from 'react-test-renderer';
 import Providers from 'apolloschurchapp/src/Providers';
 
 import Home from './Home';
-import getUserFeed from './getUserFeed';
+import GET_USER_FEED from './getUserFeed';
 
 describe('User Home Feed Query', () => {
   it('should return correct query results', () => {
     const mock = {
       request: {
-        query: getUserFeed,
+        query: GET_USER_FEED,
       },
       result: {
         data: {
diff --git a/apolloschurchapp/src/tabs/index.js b/apolloschurchapp/src/tabs/index.js
index 0b9ea17..ff11787 100644
--- a/apolloschurchapp/src/tabs/index.js
+++ b/apolloschurchapp/src/tabs/index.js
@@ -16,11 +16,8 @@ const TabNavigator = createBottomTabNavigator(
     tabBarComponent: TabBar,
     lazy: true,
     removeClippedSubviews: true,
+    navigationOptions: { header: null },
   }
 );
 
-TabNavigator.navigationOptions = {
-  header: null,
-};
-
 export default TabNavigator;
diff --git a/apolloschurchapp/src/tabs/tabBar.js b/apolloschurchapp/src/tabs/tabBar.js
index 80e2f0e..6b2b849 100644
--- a/apolloschurchapp/src/tabs/tabBar.js
+++ b/apolloschurchapp/src/tabs/tabBar.js
@@ -1,5 +1,5 @@
 import { compose } from 'recompose';
-import { BottomTabBar } from 'react-navigation-tabs';
+import { BottomTabBar } from 'react-navigation';
 
 import { withTabBarMediaSpacer } from '@apollosproject/ui-media-player';
 import { styled, withTheme } from '@apollosproject/ui-kit';
diff --git a/apolloschurchapp/src/testing-control-panel/ChangeLivestream.js b/apolloschurchapp/src/testing-control-panel/ChangeLivestream.js
index 6723f30..6675653 100644
--- a/apolloschurchapp/src/testing-control-panel/ChangeLivestream.js
+++ b/apolloschurchapp/src/testing-control-panel/ChangeLivestream.js
@@ -4,12 +4,12 @@ import { Query } from 'react-apollo';
 import { get } from 'lodash';
 
 import { client } from 'apolloschurchapp/src/client';
-import getLiveStream from 'apolloschurchapp/src/live/getLiveStream';
+import GET_LIVE_STREAM from 'apolloschurchapp/src/live/getLiveStream';
 import TouchableCell from './TouchableCell';
 
 const changeLivestream = ({ isLive }) =>
   client.writeQuery({
-    query: getLiveStream,
+    query: GET_LIVE_STREAM,
     data: {
       liveStream: {
         __typename: 'LiveStream',
@@ -19,7 +19,7 @@ const changeLivestream = ({ isLive }) =>
   });
 
 const ChangeLivestream = () => (
-  <Query query={getLiveStream}>
+  <Query query={GET_LIVE_STREAM}>
     {({ data }) => {
       const isLive = get(data, 'liveStream.isLive', false);
       return (
diff --git a/apolloschurchapp/src/theme/theme.js b/apolloschurchapp/src/theme/theme.js
index 39e124f..532be93 100644
--- a/apolloschurchapp/src/theme/theme.js
+++ b/apolloschurchapp/src/theme/theme.js
@@ -25,6 +25,9 @@
 /* Base alpha values. These are used to keep transparent values across the app consistant */
 // export const alpha = {};
 
+/* Base overlays. These are used as configuration for LinearGradients across the app */
+// export const overlays = () => ({});
+
 /* Overrides allow you to override the styles of any component styled using the `styled` HOC.
  * For example, this component:
  * const SomeComponent = styled({ margin: 10, padding: 20 }, 'SomeComponent');
diff --git a/apolloschurchapp/src/ui/ContentCardConnected/ContentCardConnected.js b/apolloschurchapp/src/ui/ContentCardConnected/ContentCardConnected.js
new file mode 100644
index 0000000..e4d7ac2
--- /dev/null
+++ b/apolloschurchapp/src/ui/ContentCardConnected/ContentCardConnected.js
@@ -0,0 +1,57 @@
+import React, { memo } from 'react';
+import PropTypes from 'prop-types';
+import { Query } from 'react-apollo';
+import { get } from 'lodash';
+
+import { ErrorCard } from '@apollosproject/ui-kit';
+
+import contentCardComponentMapper from './contentCardComponentMapper';
+import GET_CONTENT_CARD from './query';
+
+const ContentCardConnected = memo(
+  ({ Component, contentId, isLoading, tile, mapProps, ...otherProps }) => {
+    if (!contentId || isLoading)
+      return <Component {...otherProps} isLoading tile={tile} />;
+
+    return (
+      <Query query={GET_CONTENT_CARD} variables={{ contentId }}>
+        {({ data: { node = {} } = {}, loading, error }) => {
+          if (error) return <ErrorCard error={error} />;
+
+          const coverImage = get(node, 'coverImage.sources', undefined);
+          const hasMedia = !!get(node, 'videos.[0].sources[0]', null);
+          const isLive = get(node, 'liveStream.isLive', false);
+          const labelText = get(node, 'parentChannel.name', null);
+
+          return (
+            <Component
+              {...node}
+              hasAction={hasMedia}
+              isLive={isLive}
+              labelText={labelText}
+              {...otherProps}
+              coverImage={coverImage}
+              isLoading={loading}
+            />
+          );
+        }}
+      </Query>
+    );
+  }
+);
+
+ContentCardConnected.propTypes = {
+  Component: PropTypes.func,
+  mapProps: PropTypes.func,
+  contentId: PropTypes.string,
+  isLoading: PropTypes.bool,
+  tile: PropTypes.bool,
+};
+
+ContentCardConnected.defaultProps = {
+  Component: contentCardComponentMapper,
+};
+
+ContentCardConnected.displayName = 'ContentCardConnected';
+
+export default ContentCardConnected;
diff --git a/apolloschurchapp/src/ui/ContentCardConnected/contentCardComponentMapper.js b/apolloschurchapp/src/ui/ContentCardConnected/contentCardComponentMapper.js
new file mode 100644
index 0000000..30d8e1e
--- /dev/null
+++ b/apolloschurchapp/src/ui/ContentCardConnected/contentCardComponentMapper.js
@@ -0,0 +1,19 @@
+import React from 'react';
+import { get } from 'lodash';
+
+import { DefaultCard, HighlightCard } from '@apollosproject/ui-kit';
+
+const contentCardComponentMapper = (props) => {
+  // map typename to the the card we want to render.
+  switch (get(props, '__typename')) {
+    case 'MediaContentItem':
+    case 'WeekendContentItem':
+    case 'ContentSeriesContentItem':
+    case 'DevotionalContentItem':
+      return <HighlightCard {...props} />;
+    default:
+      return <DefaultCard {...props} />;
+  }
+};
+
+export default contentCardComponentMapper;
diff --git a/apolloschurchapp/src/ui/ContentCardConnected/index.js b/apolloschurchapp/src/ui/ContentCardConnected/index.js
index b64bdc6..c8fd37e 100644
--- a/apolloschurchapp/src/ui/ContentCardConnected/index.js
+++ b/apolloschurchapp/src/ui/ContentCardConnected/index.js
@@ -1,55 +1,5 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-import { Query } from 'react-apollo';
-import { get } from 'lodash';
+import ContentCardConnected from './ContentCardConnected';
 
-import { ContentCard, ErrorCard } from '@apollosproject/ui-kit';
-import getContentCard from './query';
-
-export { tileCardFragment, largeCardFragment } from './query';
-
-const ContentCardConnected = ({
-  contentId,
-  isLoading,
-  tile,
-  ...otherProps
-}) => {
-  if (!contentId || isLoading)
-    return <ContentCard {...otherProps} isLoading tile={tile} />;
-
-  return (
-    <Query query={getContentCard} variables={{ contentId, tile: !!tile }}>
-      {({ data: { node = {} } = {}, loading, error }) => {
-        if (error) return <ErrorCard error={error} />;
-
-        const metrics = [
-          {
-            icon: node.isLiked ? 'like-solid' : 'like',
-            value: node.likedCount,
-          },
-        ];
-
-        const coverImage = get(node, 'coverImage.sources', undefined);
-
-        return (
-          <ContentCard
-            {...node}
-            {...otherProps}
-            coverImage={coverImage}
-            metrics={metrics}
-            tile={tile}
-            isLoading={loading}
-          />
-        );
-      }}
-    </Query>
-  );
-};
-
-ContentCardConnected.propTypes = {
-  isLoading: PropTypes.bool,
-  contentId: PropTypes.string,
-  tile: PropTypes.bool,
-};
+export { LARGE_CARD_FRAGMENT } from './query';
 
 export default ContentCardConnected;
diff --git a/apolloschurchapp/src/ui/ContentCardConnected/query.js b/apolloschurchapp/src/ui/ContentCardConnected/query.js
index abefc12..1ff178a 100644
--- a/apolloschurchapp/src/ui/ContentCardConnected/query.js
+++ b/apolloschurchapp/src/ui/ContentCardConnected/query.js
@@ -1,6 +1,6 @@
 import gql from 'graphql-tag';
 
-export const coverImageFragment = gql`
+export const COVER_IMAGE_FRAGMENT = gql`
   fragment coverImageFragment on ContentItem {
     coverImage {
       sources {
@@ -10,7 +10,7 @@ export const coverImageFragment = gql`
   }
 `;
 
-export const themeFragment = gql`
+export const THEME_FRAGMENT = gql`
   fragment themeFragment on ContentItem {
     theme {
       type
@@ -24,70 +24,63 @@ export const themeFragment = gql`
   }
 `;
 
-export const contentCardMetricsFragment = gql`
-  fragment contentCardMetricsFragment on ContentItem {
-    isLiked
-    likedCount
-  }
-`;
-
-export const baseCardFragment = gql`
+export const BASE_CARD_FRAGMENT = gql`
   fragment baseCardFragment on ContentItem {
     id
     __typename
-    ...contentCardMetricsFragment
     ...coverImageFragment
     ...themeFragment
     title
     summary
-  }
-  ${contentCardMetricsFragment}
-  ${coverImageFragment}
-  ${themeFragment}
-`;
-
-export const tileCardFragment = gql`
-  fragment tileCardFragment on ContentItem {
-    ... on ContentSeriesContentItem {
-      id
-      ...themeFragment
-      ...coverImageFragment
-      ...contentCardMetricsFragment
+    isLiked
+    ... on MediaContentItem {
+      videos {
+        sources {
+          uri
+        }
+      }
     }
-    ... on UniversalContentItem {
-      ...baseCardFragment
+    ... on WeekendContentItem {
+      videos {
+        sources {
+          uri
+        }
+      }
+      liveStream {
+        isLive
+      }
+      parentChannel {
+        id
+        name
+      }
     }
     ... on DevotionalContentItem {
-      ...baseCardFragment
-    }
-    ... on MediaContentItem {
-      ...baseCardFragment
+      parentChannel {
+        id
+        name
+      }
     }
   }
-  ${baseCardFragment}
-  ${themeFragment}
-  ${coverImageFragment}
-  ${contentCardMetricsFragment}
+  ${COVER_IMAGE_FRAGMENT}
+  ${THEME_FRAGMENT}
 `;
 
-export const largeCardFragment = gql`
+export const LARGE_CARD_FRAGMENT = gql`
   fragment largeCardFragment on ContentItem {
     ...baseCardFragment
   }
-  ${baseCardFragment}
+  ${BASE_CARD_FRAGMENT}
 `;
 
-const getContentCard = gql`
-  query getContentCard($contentId: ID!, $tile: Boolean!) {
+const GET_CONTENT_CARD = gql`
+  query getContentCard($contentId: ID!) {
     node(id: $contentId) {
       id
       __typename
-      ...tileCardFragment @include(if: $tile)
-      ...largeCardFragment @skip(if: $tile)
+      ...largeCardFragment
     }
   }
-  ${tileCardFragment}
-  ${largeCardFragment}
+  ${LARGE_CARD_FRAGMENT}
 `;
 
-export default getContentCard;
+export default GET_CONTENT_CARD;
diff --git a/apolloschurchapp/src/ui/ContentTableCard/ContentTableCard.stories.js b/apolloschurchapp/src/ui/ContentTableCard/ContentTableCard.stories.js
deleted file mode 100644
index 9287554..0000000
--- a/apolloschurchapp/src/ui/ContentTableCard/ContentTableCard.stories.js
+++ /dev/null
@@ -1,86 +0,0 @@
-import React from 'react';
-import { storiesOf } from '@apollosproject/ui-storybook';
-import { H3 } from '@apollosproject/ui-kit';
-import ContentTableCard from '.';
-
-const content = [
-  {
-    id: 'UniversalContentItem:9d06423a8908b7cc1e1f2db6156c1bfb',
-    title: 'Hello 1',
-    parentChannel: {
-      id: 'ContentChannel:be35f49307d7297989d3514be788ef2d',
-      name: 'NewSpring - Articles',
-    },
-    coverImage: {
-      sources: {
-        uri: 'https://picsum.photos/600/400/?image=63',
-      },
-    },
-  },
-  {
-    id: 'UniversalContentItem:9d06423a8908b7cc1e1f2db6156c1bfb',
-    title: 'Hello 2',
-    parentChannel: {
-      id: 'ContentChannel:be35f49307d7297989d3514be788ef2d',
-      name: 'NewSpring - Articles',
-    },
-    coverImage: {
-      sources: {
-        uri: 'https://picsum.photos/600/400/?image=63',
-      },
-    },
-  },
-  {
-    id: 'UniversalContentItem:9d06423a8908b7cc1e1f2db6156c1bfb',
-    title: 'Hello 3',
-    parentChannel: {
-      id: 'ContentChannel:be35f49307d7297989d3514be788ef2d',
-      name: 'NewSpring - Articles',
-    },
-    coverImage: {
-      sources: {
-        uri: 'https://picsum.photos/600/400/?image=63',
-      },
-    },
-  },
-  {
-    id: 'UniversalContentItem:9d06423a8908b7cc1e1f2db6156c1bfb',
-    title: 'Hello 4',
-    parentChannel: {
-      id: 'ContentChannel:be35f49307d7297989d3514be788ef2d',
-      name: 'NewSpring - Articles',
-    },
-    coverImage: {
-      sources: {
-        uri: 'https://picsum.photos/600/400/?image=63',
-      },
-    },
-  },
-];
-
-storiesOf('ContentTableCard', module)
-  .add('simple', () => (
-    <ContentTableCard
-      label={'FOR YOU'}
-      onPress={() => {}}
-      content={content}
-      DynamicHeader={
-        <H3 numberOfLines={3} ellipsizeMode="tail">
-          Some random text that encourages you
-        </H3>
-      }
-    />
-  ))
-  .add('isLoading', () => (
-    <ContentTableCard
-      label={'FOR YOU'}
-      onPress={() => {}}
-      isLoading
-      content={content}
-      DynamicHeader={
-        <H3 isLoading numberOfLines={3} ellipsizeMode="tail">
-          Some random text that encourages you
-        </H3>
-      }
-    />
-  ));
diff --git a/apolloschurchapp/src/ui/ContentTableCard/ContentTableCardItem.js b/apolloschurchapp/src/ui/ContentTableCard/ContentTableCardItem.js
deleted file mode 100644
index f387a41..0000000
--- a/apolloschurchapp/src/ui/ContentTableCard/ContentTableCardItem.js
+++ /dev/null
@@ -1,78 +0,0 @@
-import React, { PureComponent } from 'react';
-import { View } from 'react-native';
-import PropTypes from 'prop-types';
-
-import {
-  H6,
-  H4,
-  styled,
-  TouchableScale,
-  withIsLoading,
-  ConnectedImage,
-  FlexedView,
-} from '@apollosproject/ui-kit';
-
-const CellImage = styled(({ theme }) => ({
-  width: theme.sizing.baseUnit * 4,
-  height: theme.sizing.baseUnit * 4,
-  borderRadius: theme.sizing.baseUnit,
-  overflow: 'hidden',
-  marginRight: theme.sizing.baseUnit,
-}))(View);
-
-const StyledH6 = styled(({ theme }) => ({
-  color: theme.colors.text.tertiary,
-}))(H6);
-
-const TextContainer = styled(({ theme }) => ({
-  marginTop: theme.sizing.baseUnit / 2.5,
-  borderBottomWidth: 0.5,
-  height: theme.sizing.baseUnit * 4.25,
-  borderColor: theme.colors.shadows.default,
-}))(FlexedView);
-
-const Cell = styled(({ theme }) => ({
-  paddingHorizontal: theme.sizing.baseUnit,
-  paddingVertical: theme.sizing.baseUnit / 4,
-  backgroundColor: theme.colors.background.paper,
-  flexDirection: 'row',
-  justifyContent: 'flex-start',
-  alignItems: 'center',
-}))(View);
-
-class ContentTableCardItem extends PureComponent {
-  static propTypes = {
-    onPress: PropTypes.func,
-    imageSource: PropTypes.any, // eslint-disable-line
-    label: PropTypes.string,
-    title: PropTypes.string,
-    id: PropTypes.string,
-  };
-
-  render() {
-    return (
-      <TouchableScale
-        onPress={() =>
-          this.props.onPress({
-            id: this.props.id,
-            transitionKey: 2,
-          })
-        }
-      >
-        <Cell>
-          <CellImage>
-            <ConnectedImage source={this.props.imageSource} isLoading />
-          </CellImage>
-          <TextContainer>
-            <StyledH6>{this.props.label}</StyledH6>
-            <H4 numberOfLines={2} ellipsizeMode="tail">
-              {this.props.title}
-            </H4>
-          </TextContainer>
-        </Cell>
-      </TouchableScale>
-    );
-  }
-}
-
-export default withIsLoading(ContentTableCardItem);
diff --git a/apolloschurchapp/src/ui/ContentTableCard/ContentTableCardItem.stories.js b/apolloschurchapp/src/ui/ContentTableCard/ContentTableCardItem.stories.js
deleted file mode 100644
index 6a0d4cb..0000000
--- a/apolloschurchapp/src/ui/ContentTableCard/ContentTableCardItem.stories.js
+++ /dev/null
@@ -1,28 +0,0 @@
-import React from 'react';
-import { storiesOf } from '@apollosproject/ui-storybook';
-
-import ContentTableCardItem from './ContentTableCardItem';
-
-const item = {
-  id: 'UniversalContentItem:9d06423a8908b7cc1e1f2db6156c1bfb',
-  title: 'Hello 1',
-  parentChannel: {
-    id: 'ContentChannel:be35f49307d7297989d3514be788ef2d',
-    name: 'NewSpring - Articles',
-  },
-  coverImage: {
-    sources: {
-      uri: 'https://picsum.photos/600/400/?image=63',
-    },
-  },
-};
-
-storiesOf('ContentTableCardItem', module).add('simple', () => (
-  <ContentTableCardItem
-    onPress={() => {}}
-    imageSource={item.coverImage.sources}
-    label={item.parentChannel.name}
-    title={item.title}
-    id={item.id}
-  />
-));
diff --git a/apolloschurchapp/src/ui/ContentTableCard/index.js b/apolloschurchapp/src/ui/ContentTableCard/index.js
deleted file mode 100644
index 646b394..0000000
--- a/apolloschurchapp/src/ui/ContentTableCard/index.js
+++ /dev/null
@@ -1,56 +0,0 @@
-import React, { PureComponent } from 'react';
-// import { View } from 'react-native';
-import PropTypes from 'prop-types';
-
-import {
-  TableView,
-  Card,
-  CardContent,
-  styled,
-  withIsLoading,
-} from '@apollosproject/ui-kit';
-
-import ContentTableCardItem from './ContentTableCardItem';
-
-const Header = styled(({ theme }) => ({
-  backgroundColor: theme.colors.background.paper,
-}))(CardContent);
-
-const Content = styled(() => ({
-  borderBottomWidth: 0,
-  borderTopWidth: 0,
-}))(TableView);
-
-class ContentTableCard extends PureComponent {
-  static propTypes = {
-    onPress: PropTypes.func,
-    isLoading: PropTypes.bool, // eslint-disable-line
-    content: PropTypes.array, // eslint-disable-line
-    header: PropTypes.element,
-  };
-
-  render() {
-    const { onPress, isLoading, content, header: headerContent } = this.props;
-
-    return (
-      <Card>
-        <Header>{headerContent}</Header>
-        <Content>
-          {content.map((item) => (
-            <ContentTableCardItem
-              isLoading={isLoading}
-              key={item.id}
-              id={item.id}
-              onPress={onPress}
-              label={item.parentChannel ? item.parentChannel.name : ''}
-              title={item.title || ''}
-              imageSource={item.coverImage ? item.coverImage.sources : ''}
-            />
-          ))}
-        </Content>
-      </Card>
-    );
-  }
-}
-
-export default withIsLoading(ContentTableCard);
diff --git a/apolloschurchapp/src/ui/HorizontalContentCardConnected/horizontalContentCardComponentMapper.js b/apolloschurchapp/src/ui/HorizontalContentCardConnected/horizontalContentCardComponentMapper.js
new file mode 100644
index 0000000..c658e47
--- /dev/null
+++ b/apolloschurchapp/src/ui/HorizontalContentCardConnected/horizontalContentCardComponentMapper.js
@@ -0,0 +1,22 @@
+import React from 'react';
+import { get } from 'lodash';
+
+import {
+  HorizontalDefaultCard,
+  HorizontalHighlightCard,
+} from '@apollosproject/ui-kit';
+
+const horizontalContentCardComponentMapper = (props) => {
+  // map typename to the the card we want to render.
+  switch (get(props, '__typename')) {
+    case 'MediaContentItem':
+    case 'WeekendContentItem':
+    case 'ContentSeriesContentItem':
+    case 'DevotionalContentItem':
+      return <HorizontalHighlightCard {...props} />;
+    default:
+      return <HorizontalDefaultCard {...props} />;
+  }
+};
+
+export default horizontalContentCardComponentMapper;
diff --git a/apolloschurchapp/src/ui/HorizontalContentCardConnected/index.js b/apolloschurchapp/src/ui/HorizontalContentCardConnected/index.js
new file mode 100644
index 0000000..c0a38bc
--- /dev/null
+++ b/apolloschurchapp/src/ui/HorizontalContentCardConnected/index.js
@@ -0,0 +1,29 @@
+import React, { memo } from 'react';
+import PropTypes from 'prop-types';
+
+import ContentCardConnected from '../ContentCardConnected';
+
+import horizontalContentCardComponentMapper from './horizontalContentCardComponentMapper';
+
+const HorizontalContentCardConnected = memo(
+  ({ Component, isLoading, ...otherProps }) => (
+    <ContentCardConnected
+      Component={Component}
+      isLoading={isLoading}
+      {...otherProps}
+    />
+  )
+);
+
+HorizontalContentCardConnected.propTypes = {
+  Component: PropTypes.func,
+  isLoading: PropTypes.bool,
+};
+
+HorizontalContentCardConnected.defaultProps = {
+  Component: horizontalContentCardComponentMapper,
+};
+
+HorizontalContentCardConnected.displayName = 'HorizontalContentCardConnected';
+
+export default HorizontalContentCardConnected;
diff --git a/apolloschurchapp/src/ui/Like/Like.tests.js b/apolloschurchapp/src/ui/LikeContentButton/Like.tests.js
similarity index 91%
rename from apolloschurchapp/src/ui/Like/Like.tests.js
rename to apolloschurchapp/src/ui/LikeContentButton/Like.tests.js
index f7d40c2..1ec78ec 100644
--- a/apolloschurchapp/src/ui/Like/Like.tests.js
+++ b/apolloschurchapp/src/ui/LikeContentButton/Like.tests.js
@@ -5,7 +5,7 @@ import Providers from 'apolloschurchapp/src/Providers';
 
 import { LikeIcon } from '.';
 
-describe('the Like component', () => {
+describe('the LikeContentButton component', () => {
   it('should render a Like', () => {
     const tree = renderer.create(
       <Providers>
diff --git a/apolloschurchapp/src/ui/Like/index.js b/apolloschurchapp/src/ui/LikeContentButton/index.js
similarity index 81%
rename from apolloschurchapp/src/ui/Like/index.js
rename to apolloschurchapp/src/ui/LikeContentButton/index.js
index 7efb31a..3a58e27 100644
--- a/apolloschurchapp/src/ui/Like/index.js
+++ b/apolloschurchapp/src/ui/LikeContentButton/index.js
@@ -17,7 +17,7 @@ LikeIcon.propTypes = {
   isLiked: PropTypes.bool,
 };
 
-const Like = withNavigation(({ isLiked, toggleLike, itemId }) => (
+const LikeContentButton = withNavigation(({ isLiked, toggleLike, itemId }) => (
   <ProtectedTouchable
     onPress={() =>
       toggleLike({ itemId, operation: isLiked ? 'Unlike' : 'Like' })
@@ -27,10 +27,10 @@ const Like = withNavigation(({ isLiked, toggleLike, itemId }) => (
   </ProtectedTouchable>
 ));
 
-Like.propTypes = {
+LikeContentButton.propTypes = {
   itemId: PropTypes.string,
   isLiked: PropTypes.bool,
   toggleLike: PropTypes.func,
 };
 
-export { Like as default, LikeIcon };
+export { LikeContentButton as default, LikeIcon };
diff --git a/apolloschurchapp/src/ui/LikeButton/LikeButton.tests.js b/apolloschurchapp/src/ui/LikeContentButtonConnected/LikeButton.tests.js
similarity index 93%
rename from apolloschurchapp/src/ui/LikeButton/LikeButton.tests.js
rename to apolloschurchapp/src/ui/LikeContentButtonConnected/LikeButton.tests.js
index 76197fd..aee7385 100644
--- a/apolloschurchapp/src/ui/LikeButton/LikeButton.tests.js
+++ b/apolloschurchapp/src/ui/LikeContentButtonConnected/LikeButton.tests.js
@@ -4,9 +4,9 @@
 // import Providers from 'apolloschurchapp/src/Providers';
 // import gql from 'graphql-tag';
 
-// import LikeButton from '.';
+// import LikeContentButtonConnected from '.';
 
-describe('the LikeButton component', () => {
+describe('the LikeContentButtonConnected component', () => {
   it('should render', () => {
     //     const updateLikeEntity = {
     //       request: {
@@ -56,7 +56,7 @@ describe('the LikeButton component', () => {
     //     };
     //     const tree = renderer.create(
     //       <Providers mocks={[updateLikeEntity, getLikedContentItem]}>
-    //         <LikeButton itemId={'asdf'} />
+    //         <LikeContentButtonConnected itemId={'asdf'} />
     //       </Providers>
     //     );
     //     expect(tree).toMatchSnapshot();
@@ -106,7 +106,7 @@ describe('the LikeButton component', () => {
     //     };
     //     const tree = renderer.create(
     //       <Providers mocks={[updateLikeEntity, getLikedContentItem]}>
-    //         <LikeButton itemId={'asdf'} />
+    //         <LikeContentButtonConnected itemId={'asdf'} />
     //       </Providers>
     //     );
     //     expect(tree).toMatchSnapshot();
diff --git a/apolloschurchapp/src/ui/LikeButton/getLikedContentItem.js b/apolloschurchapp/src/ui/LikeContentButtonConnected/getLikedContentItem.js
similarity index 100%
rename from apolloschurchapp/src/ui/LikeButton/getLikedContentItem.js
rename to apolloschurchapp/src/ui/LikeContentButtonConnected/getLikedContentItem.js
diff --git a/apolloschurchapp/src/ui/LikeButton/index.js b/apolloschurchapp/src/ui/LikeContentButtonConnected/index.js
similarity index 84%
rename from apolloschurchapp/src/ui/LikeButton/index.js
rename to apolloschurchapp/src/ui/LikeContentButtonConnected/index.js
index a7c0c2d..724407e 100644
--- a/apolloschurchapp/src/ui/LikeButton/index.js
+++ b/apolloschurchapp/src/ui/LikeContentButtonConnected/index.js
@@ -4,15 +4,15 @@ import PropTypes from 'prop-types';
 import { get } from 'lodash';
 import { Query, Mutation } from 'react-apollo';
 
-import Like from 'apolloschurchapp/src/ui/Like';
+import LikeContentButton from 'apolloschurchapp/src/ui/LikeContentButton';
 import { AnalyticsConsumer } from '@apollosproject/ui-analytics';
 
-import updateLikeEntity from './updateLikeEntity';
-import getLikedContentItem from './getLikedContentItem';
+import UPDATE_LIKE_ENTITY from './updateLikeEntity';
+import GET_LIKED_CONTENT_ITEM from './getLikedContentItem';
 import updateLikedContent from './updateLikedContent';
 
 const GetLikeData = ({ itemId, children }) => (
-  <Query query={getLikedContentItem} variables={{ itemId }}>
+  <Query query={GET_LIKED_CONTENT_ITEM} variables={{ itemId }}>
     {({ data: { node = {} } = {}, loading }) => {
       const isLiked = loading ? false : get(node, 'isLiked') || false;
       return children({ isLiked, item: node });
@@ -34,7 +34,7 @@ const UpdateLikeStatus = ({
   <AnalyticsConsumer>
     {({ track }) => (
       <Mutation
-        mutation={updateLikeEntity}
+        mutation={UPDATE_LIKE_ENTITY}
         optimisticResponse={{
           updateLikeEntity: {
             id: itemId, // unknown at this time
@@ -53,7 +53,7 @@ const UpdateLikeStatus = ({
         ) => {
           updateLikedContent({ liked, cache, item });
           cache.writeQuery({
-            query: getLikedContentItem,
+            query: GET_LIKED_CONTENT_ITEM,
             data: {
               node: {
                 ...item,
@@ -100,12 +100,12 @@ UpdateLikeStatus.propTypes = {
   }),
 };
 
-const LikeButton = ({ itemId }) => (
+const LikeContentButtonConnected = ({ itemId }) => (
   <GetLikeData itemId={itemId}>
     {({ isLiked, item }) => (
       <UpdateLikeStatus itemId={itemId} item={item} isLiked={isLiked}>
         {({ toggleLike, isLiked: newLikeValue }) => (
-          <Like
+          <LikeContentButton
             itemId={itemId}
             isLiked={newLikeValue}
             toggleLike={toggleLike}
@@ -116,8 +116,8 @@ const LikeButton = ({ itemId }) => (
   </GetLikeData>
 );
 
-LikeButton.propTypes = {
+LikeContentButtonConnected.propTypes = {
   itemId: PropTypes.string,
 };
 
-export default LikeButton;
+export default LikeContentButtonConnected;
diff --git a/apolloschurchapp/src/ui/LikeButton/updateLikeEntity.js b/apolloschurchapp/src/ui/LikeContentButtonConnected/updateLikeEntity.js
similarity index 100%
rename from apolloschurchapp/src/ui/LikeButton/updateLikeEntity.js
rename to apolloschurchapp/src/ui/LikeContentButtonConnected/updateLikeEntity.js
diff --git a/apolloschurchapp/src/ui/LikeButton/updateLikedContent.js b/apolloschurchapp/src/ui/LikeContentButtonConnected/updateLikedContent.js
similarity index 82%
rename from apolloschurchapp/src/ui/LikeButton/updateLikedContent.js
rename to apolloschurchapp/src/ui/LikeContentButtonConnected/updateLikedContent.js
index c0d5978..1024864 100644
--- a/apolloschurchapp/src/ui/LikeButton/updateLikedContent.js
+++ b/apolloschurchapp/src/ui/LikeContentButtonConnected/updateLikedContent.js
@@ -1,15 +1,15 @@
-import getAllLikedContent from 'apolloschurchapp/src/tabs/connect/getLikedContent';
-import { contentItemFragment } from 'apolloschurchapp/src/content-single/getContentItem';
+import GET_ALL_LIKED_CONTENT from 'apolloschurchapp/src/tabs/connect/getLikedContent';
+import { CONTENT_ITEM_FRAGMENT } from 'apolloschurchapp/src/content-single/getContentItem';
 
 const addItemToLikedContentList = ({ cache, item, variables }) => {
   try {
     const data = cache.readQuery({
-      query: getAllLikedContent,
+      query: GET_ALL_LIKED_CONTENT,
       variables,
     });
     const fullItem = cache.readFragment({
       id: `${item.__typename}:${item.id}`,
-      fragment: contentItemFragment,
+      fragment: CONTENT_ITEM_FRAGMENT,
     });
     const newEdges = [
       fullItem,
@@ -19,7 +19,7 @@ const addItemToLikedContentList = ({ cache, item, variables }) => {
       node,
     }));
     cache.writeQuery({
-      query: getAllLikedContent,
+      query: GET_ALL_LIKED_CONTENT,
       variables,
       data: {
         ...data,
@@ -39,7 +39,7 @@ const addItemToLikedContentList = ({ cache, item, variables }) => {
 const removeItemFromLikedContentList = ({ cache, item, variables }) => {
   try {
     const data = cache.readQuery({
-      query: getAllLikedContent,
+      query: GET_ALL_LIKED_CONTENT,
       variables,
     });
 
@@ -48,7 +48,7 @@ const removeItemFromLikedContentList = ({ cache, item, variables }) => {
     );
 
     cache.writeQuery({
-      query: getAllLikedContent,
+      query: GET_ALL_LIKED_CONTENT,
       variables,
       data: {
         ...data,
diff --git a/apolloschurchapp/src/ui/Onboarding/Onboarding.tests.js b/apolloschurchapp/src/ui/Onboarding/Onboarding.tests.js
new file mode 100644
index 0000000..abe9746
--- /dev/null
+++ b/apolloschurchapp/src/ui/Onboarding/Onboarding.tests.js
@@ -0,0 +1,17 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from '../../Providers';
+
+import Onboarding from '.';
+
+describe('the Onboarding component', () => {
+  it('should render Onboarding', () => {
+    const tree = renderer.create(
+      <Providers>
+        <Onboarding />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/Onboarding/index.js b/apolloschurchapp/src/ui/Onboarding/index.js
index bcd6421..67d9879 100644
--- a/apolloschurchapp/src/ui/Onboarding/index.js
+++ b/apolloschurchapp/src/ui/Onboarding/index.js
@@ -1,6 +1,10 @@
 import React from 'react';
 
-import { GradientOverlayImage } from '@apollosproject/ui-kit';
+import {
+  GradientOverlayImage,
+  styled,
+  BackgroundView,
+} from '@apollosproject/ui-kit';
 import { ApolloConsumer } from 'react-apollo';
 
 import {
@@ -14,60 +18,71 @@ import {
 
 import { requestPushPermissions } from '@apollosproject/ui-notifications';
 
+const FullscreenBackgroundView = styled({
+  position: 'absolute',
+  width: '100%',
+  height: '100%',
+})(BackgroundView);
+
+const StyledGradient = styled({
+  maxHeight: '40%',
+})(GradientOverlayImage);
+
 function Onboarding({ navigation }) {
   return (
-    <OnboardingSwiper>
-      {({ swipeForward }) => (
-        <>
-          <AskNameConnected onPressPrimary={swipeForward} />
-          <FeaturesConnected
-            onPressPrimary={swipeForward}
-            BackgroundComponent={
-              <GradientOverlayImage
-                source={'https://picsum.photos/640/640/?random'}
-              />
-            }
-          />
-          <AboutYouConnected
-            onPressPrimary={swipeForward}
-            BackgroundComponent={
-              <GradientOverlayImage
-                source={'https://picsum.photos/640/640/?random'}
-              />
-            }
-          />
-          <LocationFinderConnected
-            onPressPrimary={swipeForward}
-            onNavigate={() => {
-              navigation.navigate('Location', {
-                onFinished: swipeForward,
-              });
-            }}
-            BackgroundComponent={
-              <GradientOverlayImage
-                source={'https://picsum.photos/640/640/?random'}
-              />
-            }
-          />
-          <ApolloConsumer>
-            {(client) => (
-              <AskNotificationsConnected
-                onPressPrimary={() => navigation.replace('Tabs')}
-                onRequestPushPermissions={() =>
-                  requestPushPermissions({ client })
-                }
-                primaryNavText={'Finish'}
-                BackgroundComponent={
-                  <GradientOverlayImage
-                    source={'https://picsum.photos/640/640/?random'}
-                  />
-                }
-              />
-            )}
-          </ApolloConsumer>
-        </>
-      )}
-    </OnboardingSwiper>
+    <>
+      <FullscreenBackgroundView />
+      <OnboardingSwiper>
+        {({ swipeForward }) => (
+          <>
+            <AskNameConnected onPressPrimary={swipeForward} />
+            <FeaturesConnected
+              onPressPrimary={swipeForward}
+              BackgroundComponent={
+                <StyledGradient
+                  source={'https://picsum.photos/640/640/?random'}
+                />
+              }
+            />
+            <AboutYouConnected
+              onPressPrimary={swipeForward}
+              BackgroundComponent={
+                <StyledGradient
+                  source={'https://picsum.photos/640/640/?random'}
+                />
+              }
+            />
+            <LocationFinderConnected
+              onPressPrimary={swipeForward}
+              onNavigate={() => {
+                navigation.navigate('Location');
+              }}
+              BackgroundComponent={
+                <StyledGradient
+                  source={'https://picsum.photos/640/640/?random'}
+                />
+              }
+            />
+            <ApolloConsumer>
+              {(client) => (
+                <AskNotificationsConnected
+                  onPressPrimary={() => navigation.replace('Tabs')}
+                  onRequestPushPermissions={() =>
+                    requestPushPermissions({ client })
+                  }
+                  primaryNavText={'Finish'}
+                  BackgroundComponent={
+                    <StyledGradient
+                      source={'https://picsum.photos/640/640/?random'}
+                    />
+                  }
+                />
+              )}
+            </ApolloConsumer>
+          </>
+        )}
+      </OnboardingSwiper>
+    </>
   );
 }
 
diff --git a/apolloschurchapp/src/ui/Share/Share.tests.js b/apolloschurchapp/src/ui/ShareContentButton/ShareContentButton.tests.js
similarity index 78%
rename from apolloschurchapp/src/ui/Share/Share.tests.js
rename to apolloschurchapp/src/ui/ShareContentButton/ShareContentButton.tests.js
index 1a059da..106f6b3 100644
--- a/apolloschurchapp/src/ui/Share/Share.tests.js
+++ b/apolloschurchapp/src/ui/ShareContentButton/ShareContentButton.tests.js
@@ -3,18 +3,17 @@ import renderer from 'react-test-renderer';
 
 import { Providers } from '@apollosproject/ui-kit';
 
-import Share from '.';
+import ShareContentButton from '.';
 
 describe('the Share component', () => {
   it('should render', () => {
     const shareObject = {
       title: 'Shared Object Title',
       url: 'https://github.com/ApollosProject/apollos-prototype',
-      message: 'Share this with all your friends and family',
     };
     const tree = renderer.create(
       <Providers>
-        <Share content={shareObject} />
+        <ShareContentButton content={shareObject} />
       </Providers>
     );
     expect(tree).toMatchSnapshot();
diff --git a/apolloschurchapp/src/ui/Share/index.js b/apolloschurchapp/src/ui/ShareContentButton/index.js
similarity index 81%
rename from apolloschurchapp/src/ui/Share/index.js
rename to apolloschurchapp/src/ui/ShareContentButton/index.js
index 2f979c5..4286a7f 100644
--- a/apolloschurchapp/src/ui/Share/index.js
+++ b/apolloschurchapp/src/ui/ShareContentButton/index.js
@@ -10,13 +10,13 @@ const enhance = compose(
   withTheme()
 );
 
-const Share = enhance(({ content, theme }) => (
+const ShareContentButton = enhance(({ content, theme }) => (
   <AnalyticsConsumer>
     {({ track }) => {
       const onPress = () => {
         share(content);
         track({
-          eventName: 'ShareContent',
+          eventName: 'Share',
           properties: { id: content.id, title: content.title },
         });
       };
@@ -29,12 +29,12 @@ const Share = enhance(({ content, theme }) => (
   </AnalyticsConsumer>
 ));
 
-Share.propTypes = {
+ShareContentButton.propTypes = {
   content: PropTypes.shape({
-    message: PropTypes.string,
     title: PropTypes.string,
     url: PropTypes.string,
+    id: PropTypes.string,
   }),
 };
 
-export default Share;
+export default ShareContentButton;
diff --git a/apolloschurchapp/src/ui/ShareContentButtonConnected/ShareContentButtonConnected.tests.js b/apolloschurchapp/src/ui/ShareContentButtonConnected/ShareContentButtonConnected.tests.js
new file mode 100644
index 0000000..46a3b2c
--- /dev/null
+++ b/apolloschurchapp/src/ui/ShareContentButtonConnected/ShareContentButtonConnected.tests.js
@@ -0,0 +1,50 @@
+import React from 'react';
+import Providers from 'apolloschurchapp/src/Providers';
+import { renderWithApolloData } from 'apolloschurchapp/src/utils/testUtils';
+import getShareContent from './getShareContent';
+import ShareContentButtonConnected from '.';
+
+const shareMock = {
+  request: {
+    query: getShareContent,
+    variables: { itemId: '1' },
+  },
+  result: {
+    data: {
+      node: {
+        id: '1',
+        __typename: 'ContentSeriesContentItem',
+        sharing: {
+          url: 'https://apolloschurchapp.newspring.cc',
+          title: 'Test Title ',
+          __typename: 'SharableContentItem',
+        },
+      },
+    },
+  },
+};
+
+const mocks = [shareMock];
+
+describe('the ShareContentButtonConnected', () => {
+  it('renders a share button', async () => {
+    const tree = await renderWithApolloData(
+      <Providers mocks={mocks}>
+        <ShareContentButtonConnected itemId={'1'} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('renders a share button with custom url, and title', async () => {
+    const tree = await renderWithApolloData(
+      <Providers mocks={mocks}>
+        <ShareContentButtonConnected
+          itemId={'1'}
+          url={'https://apollosrock.com'}
+          title="Some great title"
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/content-single/ActionContainer/getShareContent.js b/apolloschurchapp/src/ui/ShareContentButtonConnected/getShareContent.js
similarity index 100%
rename from apolloschurchapp/src/content-single/ActionContainer/getShareContent.js
rename to apolloschurchapp/src/ui/ShareContentButtonConnected/getShareContent.js
diff --git a/apolloschurchapp/src/ui/ShareContentButtonConnected/index.js b/apolloschurchapp/src/ui/ShareContentButtonConnected/index.js
new file mode 100644
index 0000000..95483b5
--- /dev/null
+++ b/apolloschurchapp/src/ui/ShareContentButtonConnected/index.js
@@ -0,0 +1,34 @@
+import React from 'react';
+
+import PropTypes from 'prop-types';
+import { Query } from 'react-apollo';
+import { get } from 'lodash';
+
+import ShareContentButton from 'apolloschurchapp/src/ui/ShareContentButton';
+
+import GET_SHARE_CONTENT from './getShareContent';
+
+const ShareContentButtonConnected = ({ itemId, title, message, url }) => (
+  <Query query={GET_SHARE_CONTENT} variables={{ itemId }}>
+    {({ data }) => {
+      const sharing = get(data, 'node.sharing', {});
+      const content = {
+        id: itemId,
+        title: title || sharing.title,
+        message: message || sharing.message,
+        url: url || sharing.url,
+      };
+      return <ShareContentButton content={content} />;
+    }}
+  </Query>
+);
+
+ShareContentButtonConnected.propTypes = {
+  itemId: PropTypes.string.isRequired,
+  // These props are available to override the default sharing data for a node.
+  title: PropTypes.string,
+  message: PropTypes.string,
+  url: PropTypes.string,
+};
+
+export default ShareContentButtonConnected;
diff --git a/apolloschurchapp/src/ui/UserAvatarView/AvatarForm.js b/apolloschurchapp/src/ui/UserAvatarView/AvatarForm.js
deleted file mode 100644
index 49c66b0..0000000
--- a/apolloschurchapp/src/ui/UserAvatarView/AvatarForm.js
+++ /dev/null
@@ -1,109 +0,0 @@
-import React, { PureComponent } from 'react';
-import { View } from 'react-native';
-import PropTypes from 'prop-types';
-import { get } from 'lodash';
-import { Query, ApolloConsumer } from 'react-apollo';
-
-import {
-  Touchable,
-  ButtonLink,
-  Avatar,
-  withTheme,
-  H5,
-  styled,
-} from '@apollosproject/ui-kit';
-import getUserProfile from '../../tabs/connect/getUserProfile';
-import uploadPhoto from './uploadPhoto';
-
-const GetPhotoData = ({ children }) => (
-  <Query query={getUserProfile}>
-    {({ data: { currentUser = {} } = {} }) => {
-      const photo = get(currentUser, 'profile.photo');
-      return children({ photo });
-    }}
-  </Query>
-);
-
-GetPhotoData.propTypes = {
-  children: PropTypes.func.isRequired,
-};
-
-const StyledView = styled(({ theme }) => ({
-  marginRight: 0,
-  marginBottom: theme.sizing.baseUnit * 0.75,
-  marginTop: theme.sizing.baseUnit * 0.5,
-}))(View);
-
-const RoundTouchable = withTheme(({ theme, size }) => ({
-  borderRadius: get(theme.sizing.avatar, size, theme.sizing.avatar.small),
-}))(Touchable);
-
-const Wrapper = styled({
-  justifyContent: 'center',
-  alignItems: 'center',
-})(View);
-
-export default class AvatarForm extends PureComponent {
-  state = {
-    isUploadingFile: false,
-  };
-
-  componentWillUnmount() {
-    this.setState({ isUploadingFile: false });
-  }
-
-  handleUploadPhoto = async ({ client }) => {
-    try {
-      await uploadPhoto({
-        client,
-        onUpload: () => this.setState({ isUploadingFile: true }),
-      });
-      await this.setState({ isUploadingFile: false });
-    } catch (e) {
-      console.warn(e);
-      this.setState({ isUploadingFile: false });
-    }
-  };
-
-  render() {
-    const { isUploadingFile } = this.state;
-
-    return (
-      <ApolloConsumer>
-        {(client) => (
-          <Wrapper>
-            <RoundTouchable
-              disabled={this.props.disabled}
-              onPress={() => this.handleUploadPhoto({ client })}
-              size="medium"
-            >
-              <GetPhotoData>
-                {({ photo }) => (
-                  <StyledView>
-                    <Avatar
-                      source={photo}
-                      size="medium"
-                      isLoading={isUploadingFile}
-                    />
-                  </StyledView>
-                )}
-              </GetPhotoData>
-            </RoundTouchable>
-            {this.props.text ? (
-              <H5>
-                <ButtonLink onPress={() => this.handleUploadPhoto({ client })}>
-                  Change Photo
-                </ButtonLink>
-              </H5>
-            ) : null}
-          </Wrapper>
-        )}
-      </ApolloConsumer>
-    );
-  }
-}
-
-AvatarForm.propTypes = {
-  disabled: PropTypes.bool,
-  text: PropTypes.bool,
-};
diff --git a/apolloschurchapp/src/ui/UserAvatarView/UserAvatarView.stories.js b/apolloschurchapp/src/ui/UserAvatarView/UserAvatarView.stories.js
deleted file mode 100644
index f32c776..0000000
--- a/apolloschurchapp/src/ui/UserAvatarView/UserAvatarView.stories.js
+++ /dev/null
@@ -1,23 +0,0 @@
-import React from 'react';
-import { storiesOf } from '@apollosproject/ui-storybook';
-
-import UserAvatarView from '.';
-
-storiesOf('UserAvatarView', module)
-  .add('example', () => (
-    <UserAvatarView
-      photo={'https://picsum.photos/400/400/?random'}
-      firstName={'Marty'}
-      lastName={'McFly'}
-      location={'Hill Valley'}
-    />
-  ))
-  .add('isLoading', () => (
-    <UserAvatarView
-      photo={'https://picsum.photos/400/400/?random'}
-      firstName={'Marty'}
-      lastName={'McFly'}
-      location={'Hill Valley'}
-      isLoading
-    />
-  ));
diff --git a/apolloschurchapp/src/ui/UserAvatarView/index.js b/apolloschurchapp/src/ui/UserAvatarView/index.js
deleted file mode 100644
index d18a809..0000000
--- a/apolloschurchapp/src/ui/UserAvatarView/index.js
+++ /dev/null
@@ -1,63 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-import { View } from 'react-native';
-
-import {
-  H3,
-  PaddedView,
-  ConnectedImage,
-  styled,
-  ChannelLabel,
-  withIsLoading,
-} from '@apollosproject/ui-kit';
-
-import AvatarForm from './AvatarForm';
-
-const Container = styled(({ theme }) => ({
-  backgroundColor: theme.colors.background.paper,
-  flexDirection: 'row',
-}))(View);
-
-const Content = styled(({ theme }) => ({
-  flex: 1,
-  justifyContent: 'center',
-  paddingVertical: theme.sizing.baseUnit * 0.5,
-}))(PaddedView);
-
-const UserAvatarView = withIsLoading(
-  ({
-    theme,
-    firstName,
-    lastName,
-    location,
-    isLoading,
-    disabled,
-    ...viewProps
-  }) => (
-    // todo: handle file select stuff
-    <Container {...viewProps}>
-      <AvatarForm isLoading={isLoading} text={false} disabled={disabled} />
-      <Content>
-        <H3>
-          {firstName} {lastName}
-        </H3>
-        {location && (
-          <ChannelLabel icon="pin" label={location} isLoading={isLoading} />
-        )}
-      </Content>
-    </Container>
-  )
-);
-
-UserAvatarView.propTypes = {
-  photo: ConnectedImage.propTypes.source,
-  firstName: PropTypes.string,
-  lastName: PropTypes.string,
-  location: PropTypes.string,
-  isLoading: PropTypes.bool,
-  disabled: PropTypes.bool,
-  blurIntensity: PropTypes.number,
-  ...View.propTypes,
-};
-
-export default UserAvatarView;
diff --git a/apolloschurchapp/src/user-settings/ChangeAvatar.js b/apolloschurchapp/src/user-settings/ChangeAvatar.js
new file mode 100644
index 0000000..ccadf1b
--- /dev/null
+++ b/apolloschurchapp/src/user-settings/ChangeAvatar.js
@@ -0,0 +1,76 @@
+import React, { PureComponent } from 'react';
+import { View } from 'react-native';
+import PropTypes from 'prop-types';
+import { get } from 'lodash';
+import { Query, ApolloConsumer } from 'react-apollo';
+
+import { PaddedView, Avatar, styled } from '@apollosproject/ui-kit';
+import GET_USER_PHOTO from './getUserPhoto';
+import uploadPhoto from './uploadPhoto';
+
+const GetPhotoData = ({ children }) => (
+  <Query query={GET_USER_PHOTO}>
+    {({ data: { currentUser = {} } = {} }) => {
+      const photo = get(currentUser, 'profile.photo');
+      return children({ photo });
+    }}
+  </Query>
+);
+
+GetPhotoData.propTypes = {
+  children: PropTypes.func.isRequired,
+};
+
+const Wrapper = styled({
+  justifyContent: 'center',
+  alignItems: 'center',
+})(View);
+
+export default class AvatarForm extends PureComponent {
+  state = {
+    isUploadingFile: false,
+  };
+
+  componentWillUnmount() {
+    this.setState({ isUploadingFile: false });
+  }
+
+  handleUploadPhoto = async ({ client }) => {
+    try {
+      await uploadPhoto({
+        client,
+        onUpload: () => this.setState({ isUploadingFile: true }),
+      });
+      await this.setState({ isUploadingFile: false });
+    } catch (e) {
+      console.warn(e);
+      this.setState({ isUploadingFile: false });
+    }
+  };
+
+  render() {
+    const { isUploadingFile } = this.state;
+
+    return (
+      <ApolloConsumer>
+        {(client) => (
+          <Wrapper>
+            <GetPhotoData>
+              {({ photo }) => (
+                <PaddedView horizontal={false}>
+                  <Avatar
+                    source={photo}
+                    size="large"
+                    buttonIcon="camera"
+                    onPressIcon={() => this.handleUploadPhoto({ client })}
+                    isLoading={isUploadingFile}
+                  />
+                </PaddedView>
+              )}
+            </GetPhotoData>
+          </Wrapper>
+        )}
+      </ApolloConsumer>
+    );
+  }
+}
diff --git a/apolloschurchapp/src/user-settings/ChangePassword.js b/apolloschurchapp/src/user-settings/ChangePassword.js
index 2938688..6045e31 100644
--- a/apolloschurchapp/src/user-settings/ChangePassword.js
+++ b/apolloschurchapp/src/user-settings/ChangePassword.js
@@ -15,8 +15,8 @@ import {
   styled,
 } from '@apollosproject/ui-kit';
 
-import getAuthToken from '../store/getAuthToken';
-import changePassword from './passwordChange';
+import GET_AUTH_TOKEN from '../store/getAuthToken';
+import CHANGE_PASSWORD from './passwordChange';
 
 const Footer = styled({
   flex: 1,
@@ -82,10 +82,10 @@ class ChangePassword extends PureComponent {
   render() {
     return (
       <Mutation
-        mutation={changePassword}
+        mutation={CHANGE_PASSWORD}
         update={async (cache, { data: { token } }) => {
           await cache.writeQuery({
-            query: getAuthToken,
+            query: GET_AUTH_TOKEN,
             data: { authToken: token },
           });
 
diff --git a/apolloschurchapp/src/user-settings/Locations/Locations.tests.js b/apolloschurchapp/src/user-settings/Locations/Locations.tests.js
index 627fc7f..53a4c91 100644
--- a/apolloschurchapp/src/user-settings/Locations/Locations.tests.js
+++ b/apolloschurchapp/src/user-settings/Locations/Locations.tests.js
@@ -2,7 +2,7 @@ import React from 'react';
 import { renderWithApolloData } from 'apolloschurchapp/src/utils/testUtils';
 
 import Providers from 'apolloschurchapp/src/Providers';
-import getCampusLocations from './getCampusLocations';
+import GET_CAMPUS_LOCATIONS from './getCampusLocations';
 import Location from './index';
 
 const campuses = [
@@ -80,6 +80,10 @@ describe('Display Native Map with Locations', () => {
     latitudeDelta: 100,
     longitudeDelta: 10,
   };
+  const userLocation = {
+    latitude: 39.104797,
+    longitude: -84.511959,
+  };
   it('Render a native map view', async () => {
     const navigation = {
       navigate: jest.fn(),
@@ -89,10 +93,10 @@ describe('Display Native Map with Locations', () => {
 
     const mock = {
       request: {
-        query: getCampusLocations,
+        query: GET_CAMPUS_LOCATIONS,
         variables: {
-          latitude: initialRegion.latitude,
-          longitude: initialRegion.longitude,
+          latitude: userLocation.latitude,
+          longitude: userLocation.longitude,
         },
       },
       result: {
diff --git a/apolloschurchapp/src/user-settings/Locations/MapView.js b/apolloschurchapp/src/user-settings/Locations/MapView.js
index b38e1d5..74e5743 100644
--- a/apolloschurchapp/src/user-settings/Locations/MapView.js
+++ b/apolloschurchapp/src/user-settings/Locations/MapView.js
@@ -1,13 +1,14 @@
 import React, { Component } from 'react';
 import PropTypes from 'prop-types';
-import { View, Animated } from 'react-native';
-import SafeAreaView from 'react-native-safe-area-view';
+import { View, Animated, Dimensions } from 'react-native';
+import { SafeAreaView } from 'react-navigation';
 import RNMapView from 'react-native-maps';
 import { debounce } from 'lodash';
 
 import {
   Button,
   PaddedView,
+  FlexedView,
   styled,
   withTheme,
   CampusCard,
@@ -15,11 +16,9 @@ import {
 
 import Marker from './Marker';
 
-const { CARD_WIDTH } = CampusCard;
-
-const ContainerView = styled({
-  flex: 1,
-})(View);
+/* TODO: remove magic number. `theme.sizing.baseUnit * 2.25` This width value is a brittle
+ * calculation of width minus `CampusCard` margins */
+const CARD_WIDTH = Dimensions.get('window').width - 36;
 
 const FlexedMapView = styled({ flex: 1 })(({ mapRef, ...props }) => (
   <RNMapView ref={mapRef} {...props} />
@@ -28,13 +27,18 @@ const FlexedMapView = styled({ flex: 1 })(({ mapRef, ...props }) => (
 const getCampusAddress = (campus) =>
   `${campus.street1}\n${campus.city}, ${campus.state} ${campus.postalCode}`;
 
-const ScrollingView = styled({
+const Footer = styled({
   position: 'absolute',
   bottom: 0,
   left: 0,
   right: 0,
 })(View);
 
+const StyledCampusCard = styled(({ theme }) => ({
+  width: CARD_WIDTH,
+  marginHorizontal: theme.sizing.baseUnit / 4,
+}))(CampusCard);
+
 class MapView extends Component {
   static propTypes = {
     campuses: PropTypes.arrayOf(
@@ -64,10 +68,6 @@ class MapView extends Component {
     }),
   };
 
-  state = {
-    campus: null,
-  };
-
   animation = new Animated.Value(0);
 
   componentDidMount() {
@@ -84,45 +84,42 @@ class MapView extends Component {
     return { paddingHorizontal: this.props.theme.sizing.baseUnit * 0.75 }; // pad cards from edge of screen but account for card margin
   }
 
-  updateCoordinates = ({ value }) => {
-    this.previousScrollPosition = value;
-    const cardIndex = Math.floor(value / CARD_WIDTH + 0.3); // animate 30% away from landing on the next item;
+  get currentCampus() {
+    const cardIndex = Math.floor(
+      this.previousScrollPosition / CARD_WIDTH + 0.3
+    ); // animate 30% away from landing on the next item;
     const campus = this.props.campuses[cardIndex];
-    this.setState({ campus });
-    if (!campus) return;
-
-    const { userLocation } = this.props;
+    return campus;
+  }
 
-    let { latitude } = campus;
-    const { longitude } = campus;
-    let { latitudeDelta, longitudeDelta } = this.props.initialRegion;
+  updateCoordinates = ({ value }) => {
+    this.previousScrollPosition = value;
 
-    if (userLocation) {
-      // Calculate rectangle that shows user's location in the view with campus at center
-      const minLat = Math.min(campus.latitude, userLocation.latitude);
-      const maxLat = Math.max(campus.latitude, userLocation.latitude);
-      const minLong = Math.min(campus.longitude, userLocation.longitude);
-      const mayLong = Math.max(campus.longitude, userLocation.longitude);
+    const campus = this.currentCampus;
 
-      latitudeDelta = (maxLat - minLat) * 2.5;
-      longitudeDelta = (mayLong - minLong) * 2.5;
+    const { userLocation } = this.props;
+    if (!campus) {
+      this.map.fitToCoordinates([...this.props.campuses, userLocation], {
+        edgePadding: {
+          top: 100,
+          left: 100,
+          right: 100,
+          // This is higher to avoid the campus cards (baseUnit * 6) on the bottom
+          bottom: 100 + this.props.theme.sizing.baseUnit * 12,
+        },
+      });
+      return;
     }
 
-    // Now, we need to transform the given lat/lng/delta up to make room for cards at bottom.
-    // To make this math simpler, we'll assume the cards take up roughly 20% of the vertical space
-    const maxDelta = Math.max(latitudeDelta, longitudeDelta);
-    latitude -= maxDelta * 0.2; // move the view up 20%
-    latitudeDelta *= 1.2; // include 20% more area in the view
-
-    this.map.animateToRegion(
-      {
-        latitude,
-        longitude,
-        latitudeDelta,
-        longitudeDelta,
+    this.map.fitToCoordinates([campus, userLocation], {
+      edgePadding: {
+        top: 100,
+        left: 100,
+        right: 100,
+        // This is higher to avoid the campus cards (baseUnit * 6) on the bottom
+        bottom: 100 + this.props.theme.sizing.baseUnit * 12,
       },
-      350
-    );
+    });
   };
 
   render() {
@@ -133,98 +130,83 @@ class MapView extends Component {
         index * CARD_WIDTH,
         (index + 1) * CARD_WIDTH,
       ];
-      const scale = this.animation.interpolate({
-        inputRange,
-        outputRange: [1, 2.5, 1],
-        extrapolate: 'clamp',
-      });
       const opacity = this.animation.interpolate({
         inputRange,
         outputRange: [0.35, 1, 0.35],
         extrapolate: 'clamp',
       });
-      return { scale, opacity };
+      return { opacity };
     });
 
     return (
-      <ContainerView>
-        <ContainerView>
-          <FlexedMapView
-            initialRegion={this.props.initialRegion}
-            showsUserLocation
-            mapRef={(map) => {
-              this.map = map;
-            }}
-          >
-            {campuses.map((campus, index) => {
-              const scaleStyle = {
-                transform: [
+      <FlexedView>
+        <FlexedMapView
+          initialRegion={this.props.initialRegion}
+          showsUserLocation
+          mapRef={(map) => {
+            this.map = map;
+          }}
+        >
+          {campuses.map((campus, index) => {
+            const campusOpacity = {
+              opacity: interpolations[index].opacity,
+            };
+            return (
+              <Marker
+                key={campus.id}
+                opacityStyle={campusOpacity}
+                latitude={campus.latitude}
+                longitude={campus.longitude}
+              />
+            );
+          })}
+        </FlexedMapView>
+        <Footer>
+          <SafeAreaView>
+            <Animated.ScrollView
+              horizontal
+              showsHorizontalScrollIndicator={false}
+              snapToInterval={CARD_WIDTH + 8} // account for padding
+              snapToAlignment={'start'}
+              decelerationRate={'fast'}
+              contentContainerStyle={this.contentContainerStyle} // correctly pads cards in ScrollView
+              scrollEventThrottle={16} // roughtly 1000ms/60fps = 16ms
+              onScroll={Animated.event(
+                [
                   {
-                    scale: interpolations[index].scale,
+                    nativeEvent: {
+                      contentOffset: {
+                        x: this.animation,
+                      },
+                    },
                   },
                 ],
-              };
-              const opacityStyle = {
-                opacity: interpolations[index].opacity,
-              };
-              return (
-                <Marker
+                { useNativeDriver: true }
+              )}
+            >
+              {campuses.map((campus) => (
+                <StyledCampusCard
                   key={campus.id}
-                  opacityStyle={opacityStyle}
-                  scaleStyle={scaleStyle}
-                  latitude={campus.latitude}
-                  longitude={campus.longitude}
-                />
-              );
-            })}
-          </FlexedMapView>
-          <ScrollingView>
-            <SafeAreaView forceInset={{ bottom: 'always', top: 'never' }}>
-              <Animated.ScrollView
-                horizontal
-                showsHorizontalScrollIndicator={false}
-                snapToInterval={CARD_WIDTH + 8} // account for padding
-                snapToAlignment={'start'}
-                decelerationRate={'fast'}
-                contentContainerStyle={this.contentContainerStyle} // correctly pads cards in ScrollView
-                scrollEventThrottle={16} // roughtly 1000ms/60fps = 16ms
-                onScroll={Animated.event(
-                  [
-                    {
-                      nativeEvent: {
-                        contentOffset: {
-                          x: this.animation,
-                        },
-                      },
-                    },
-                  ],
-                  { useNativeDriver: true }
-                )}
-              >
-                {campuses.map((campus) => (
-                  <CampusCard
-                    key={campus.id}
-                    distance={campus.distanceFromLocation}
-                    title={campus.name}
-                    description={getCampusAddress(campus)}
-                    images={[campus.image]}
-                  />
-                ))}
-              </Animated.ScrollView>
-              <PaddedView>
-                <Button
-                  title="Select Campus"
-                  pill={false}
-                  type="secondary"
-                  onPress={() =>
-                    onLocationSelect(this.state.campus || campuses[0])
-                  }
+                  distance={campus.distanceFromLocation}
+                  title={campus.name}
+                  description={getCampusAddress(campus)}
+                  images={[campus.image]}
                 />
-              </PaddedView>
-            </SafeAreaView>
-          </ScrollingView>
-        </ContainerView>
-      </ContainerView>
+              ))}
+            </Animated.ScrollView>
+            <PaddedView>
+              <Button
+                title="Select Campus"
+                pill={false}
+                type="secondary"
+                onPress={() =>
+                  onLocationSelect(this.currentCampus || campuses[0])
+                }
+              />
+            </PaddedView>
+          </SafeAreaView>
+        </Footer>
+      </FlexedView>
     );
   }
 }
diff --git a/apolloschurchapp/src/user-settings/Locations/Marker.js b/apolloschurchapp/src/user-settings/Locations/Marker.js
index b7c10d7..0c98fa9 100644
--- a/apolloschurchapp/src/user-settings/Locations/Marker.js
+++ b/apolloschurchapp/src/user-settings/Locations/Marker.js
@@ -11,42 +11,29 @@ const MarkerView = styled(({ theme }) => ({
   height: 8,
   borderRadius: 4,
   backgroundColor: Color(theme.colors.primary).fade(theme.alpha.medium),
+  zIndex: 2,
 }))(View);
 
-const MarkerWrapView = styled({
-  alignItems: 'center',
-  justifyContent: 'center',
-})(View);
-
-// This is not good. Is there a better way to prevent cascading styles?
-
 const MarkerRingView = styled(({ theme }) => ({
   width: 24,
   height: 24,
   borderRadius: 12,
-  right: -8,
-  top: -8,
   backgroundColor: Color(theme.colors.primary).fade(theme.alpha.low),
-  position: 'absolute',
   borderWidth: 1,
   borderColor: Color(theme.colors.primary).fade(theme.alpha.medium),
-  alignItems: 'stretch',
+  alignItems: 'center',
+  justifyContent: 'center',
 }))(View);
 
-const StyledMarker = memo(
-  ({ latitude, longitude, opacityStyle, scaleStyle }) => (
-    <Marker coordinate={{ latitude, longitude }}>
-      <MarkerWrapView>
-        <Animated.View style={opacityStyle}>
-          <MarkerRingView>
-            <Animated.View style={scaleStyle} />
-          </MarkerRingView>
-          <MarkerView />
-        </Animated.View>
-      </MarkerWrapView>
-    </Marker>
-  )
-);
+const StyledMarker = memo(({ latitude, longitude, opacityStyle }) => (
+  <Marker coordinate={{ latitude, longitude }}>
+    <Animated.View style={opacityStyle}>
+      <MarkerRingView>
+        <MarkerView />
+      </MarkerRingView>
+    </Animated.View>
+  </Marker>
+));
 
 StyledMarker.displayName = 'StyledMarker';
 
@@ -54,7 +41,6 @@ StyledMarker.propTypes = {
   latitude: PropTypes.number.isRequired,
   longitude: PropTypes.number.isRequired,
   opacityStyle: PropTypes.shape({}),
-  scaleStyle: PropTypes.shape({}),
 };
 
 export default StyledMarker;
diff --git a/apolloschurchapp/src/user-settings/Locations/index.js b/apolloschurchapp/src/user-settings/Locations/index.js
index f8517c3..985651a 100644
--- a/apolloschurchapp/src/user-settings/Locations/index.js
+++ b/apolloschurchapp/src/user-settings/Locations/index.js
@@ -2,28 +2,14 @@ import React, { PureComponent } from 'react';
 import PropTypes from 'prop-types';
 import { Query, Mutation } from 'react-apollo';
 import { Dimensions } from 'react-native';
-
+import Geolocation from 'react-native-geolocation-service';
 import { PaddedView, ButtonLink } from '@apollosproject/ui-kit';
+import requestLocation from './requestLocation';
 
-import getUserProfile from '../../tabs/connect/getUserProfile';
+import GET_CAMPUSES from './getCampusLocations';
+import CHANGE_CAMPUS from './campusChange';
 import MapView from './MapView';
 
-import getAllCampuses from './getCampusLocations';
-
-import campusChange from './campusChange';
-
-const getCurrentLocation = () =>
-  new Promise((resolve, reject) => {
-    navigator.geolocation.getCurrentPosition(
-      (position) => resolve(position),
-      (e) => reject(e)
-    );
-  });
-
-const screen = Dimensions.get('window');
-
-const ASPECT_RATIO = screen.width / screen.height;
-
 class Location extends PureComponent {
   static propTypes = {
     navigation: PropTypes.shape({
@@ -37,7 +23,6 @@ class Location extends PureComponent {
       latitudeDelta: PropTypes.number,
       longitudeDelta: PropTypes.number,
     }),
-    onFinished: PropTypes.func,
   };
 
   static defaultProps = {
@@ -46,7 +31,9 @@ class Location extends PureComponent {
       latitude: 39.809734,
       longitude: -98.555618,
       latitudeDelta: 100,
-      longitudeDelta: 100 * ASPECT_RATIO,
+      longitudeDelta:
+        (100 * Dimensions.get('window').width) /
+        Dimensions.get('window').height,
     },
   };
 
@@ -61,65 +48,43 @@ class Location extends PureComponent {
   });
 
   state = {
-    region: this.props.initialRegion,
+    userLocation: {
+      latitude: 39.104797,
+      longitude: -84.511959,
+    },
   };
 
-  componentDidMount() {
-    return getCurrentLocation().then((position) => {
-      if (position) {
+  async componentDidMount() {
+    await requestLocation();
+    Geolocation.getCurrentPosition(
+      (position) => {
         this.setState({
           userLocation: {
             latitude: position.coords.latitude,
             longitude: position.coords.longitude,
           },
         });
-      }
-    });
+      },
+      () => null,
+      { enableHighAccuracy: true, timeout: 15000, maximumAge: 10000 }
+    );
   }
 
   render() {
-    const { navigation, onFinished } = this.props;
-    // we should use the `onFinished` from the navigation param, if it exists.
-    const handleFinished = this.props.navigation.getParam(
-      'onFinished',
-      onFinished
-    );
-
     return (
       <Query
-        query={getAllCampuses}
+        query={GET_CAMPUSES}
         variables={{
-          latitude: this.state.region.latitude,
-          longitude: this.state.region.longitude,
+          latitude: this.state.userLocation.latitude,
+          longitude: this.state.userLocation.longitude,
         }}
         fetchPolicy="cache-and-network"
       >
         {({ loading, error, data: { campuses = [] } = {} }) => (
-          <Mutation
-            mutation={campusChange}
-            update={async (cache, { data: { updateUserCampus } }) => {
-              const { currentUser } = await cache.readQuery({
-                query: getUserProfile,
-              });
-              await cache.writeQuery({
-                query: getUserProfile,
-                data: {
-                  currentUser: {
-                    ...currentUser,
-                    profile: {
-                      ...currentUser.profile,
-                      campus: {
-                        ...updateUserCampus.campus,
-                      },
-                    },
-                  },
-                },
-              });
-            }}
-          >
+          <Mutation mutation={CHANGE_CAMPUS}>
             {(handlePress) => (
               <MapView
-                navigation={navigation}
+                navigation={this.props.navigation}
                 isLoading={loading}
                 error={error}
                 campuses={campuses}
@@ -131,8 +96,7 @@ class Location extends PureComponent {
                       campusId: id,
                     },
                   });
-                  await navigation.goBack();
-                  if (handleFinished) handleFinished();
+                  this.props.navigation.goBack();
                 }}
               />
             )}
diff --git a/apolloschurchapp/src/user-settings/Locations/requestLocation.android.js b/apolloschurchapp/src/user-settings/Locations/requestLocation.android.js
new file mode 100644
index 0000000..02c84c6
--- /dev/null
+++ b/apolloschurchapp/src/user-settings/Locations/requestLocation.android.js
@@ -0,0 +1,6 @@
+import { PermissionsAndroid } from 'react-native';
+
+export default async () =>
+  PermissionsAndroid.request(
+    PermissionsAndroid.PERMISSIONS.ACCESS_FINE_LOCATION
+  );
diff --git a/apolloschurchapp/src/user-settings/Locations/requestLocation.ios.js b/apolloschurchapp/src/user-settings/Locations/requestLocation.ios.js
new file mode 100644
index 0000000..a3918e8
--- /dev/null
+++ b/apolloschurchapp/src/user-settings/Locations/requestLocation.ios.js
@@ -0,0 +1,3 @@
+// not neccessary in ios
+// this is handled by Geolocation.getCurrentPosition()
+export default null;
diff --git a/apolloschurchapp/src/user-settings/PersonDetails.tests.js b/apolloschurchapp/src/user-settings/PersonDetails.tests.js
index b55f57e..5234bf5 100644
--- a/apolloschurchapp/src/user-settings/PersonDetails.tests.js
+++ b/apolloschurchapp/src/user-settings/PersonDetails.tests.js
@@ -4,14 +4,14 @@ import wait from 'waait';
 
 import Providers from 'apolloschurchapp/src/Providers';
 
-import getUserProfile from '../tabs/connect/getUserProfile';
+import GET_USER_PROFILE from '../tabs/connect/getUserProfile';
 import PersonalDetails from './PersonalDetails';
 
 describe('PersonalDetails component', () => {
   it('renders PersonalDetails when logged in', async () => {
     const mock = {
       request: {
-        query: getUserProfile,
+        query: GET_USER_PROFILE,
       },
       result: {
         data: {
diff --git a/apolloschurchapp/src/user-settings/PersonalDetails.js b/apolloschurchapp/src/user-settings/PersonalDetails.js
index e694002..9404206 100644
--- a/apolloschurchapp/src/user-settings/PersonalDetails.js
+++ b/apolloschurchapp/src/user-settings/PersonalDetails.js
@@ -1,6 +1,12 @@
 import React, { PureComponent } from 'react';
 import PropTypes from 'prop-types';
-import { SafeAreaView } from 'react-native';
+import {
+  KeyboardAvoidingView,
+  StyleSheet,
+  StatusBar,
+  Platform,
+} from 'react-native';
+import { SafeAreaView, Header } from 'react-navigation';
 import { Query, Mutation } from 'react-apollo';
 import { Formik } from 'formik';
 import * as Yup from 'yup';
@@ -11,12 +17,11 @@ import {
   FlexedView,
   Button,
   ButtonLink,
-  TableView,
   styled,
 } from '@apollosproject/ui-kit';
 
-import getUserProfile from '../tabs/connect/getUserProfile';
-import updateCurrentUser from './updateCurrentUser';
+import GET_USER_PROFILE from '../tabs/connect/getUserProfile';
+import UPDATE_CURRENT_USER from './updateCurrentUser';
 
 const Footer = styled({
   flex: 1,
@@ -43,8 +48,16 @@ class PersonalDetails extends PureComponent {
   };
 
   renderForm = (props) => (
-    <FlexedView>
-      <TableView>
+    // have to add the offset to account for react-navigation header
+    <KeyboardAvoidingView
+      behavior={'padding'}
+      style={StyleSheet.absoluteFill}
+      keyboardVerticalOffset={
+        Header.HEIGHT +
+        (Platform.OS === 'android' ? StatusBar.currentHeight : 0)
+      }
+    >
+      <FlexedView>
         <PaddedView>
           <TextInput
             label="First Name"
@@ -60,10 +73,6 @@ class PersonalDetails extends PureComponent {
             error={props.touched.lastName && props.errors.lastName}
             onChangeText={(text) => props.setFieldValue('lastName', text)}
           />
-        </PaddedView>
-      </TableView>
-      <TableView>
-        <PaddedView>
           <TextInput
             label="Email"
             type="email"
@@ -72,32 +81,32 @@ class PersonalDetails extends PureComponent {
             onChangeText={(text) => props.setFieldValue('email', text)}
           />
         </PaddedView>
-      </TableView>
-      <Footer>
-        <PaddedView>
-          <Button
-            disabled={!props.isValid || props.isSubmitting}
-            onPress={props.handleSubmit}
-            title="Save"
-            loading={props.isSubmitting}
-          />
-        </PaddedView>
-      </Footer>
-    </FlexedView>
+        <Footer>
+          <PaddedView>
+            <Button
+              disabled={!props.isValid || props.isSubmitting}
+              onPress={props.handleSubmit}
+              title="Save"
+              loading={props.isSubmitting}
+            />
+          </PaddedView>
+        </Footer>
+      </FlexedView>
+    </KeyboardAvoidingView>
   );
 
   render() {
     return (
-      <Query query={getUserProfile} fetchPolicy="cache-and-network">
+      <Query query={GET_USER_PROFILE} fetchPolicy="cache-and-network">
         {({ data: { currentUser = { profile: {} } } = {} }) => {
           const { firstName, lastName, email } = currentUser.profile;
 
           return (
             <Mutation
-              mutation={updateCurrentUser}
+              mutation={UPDATE_CURRENT_USER}
               update={async (cache, { data: { updateProfileFields } }) => {
                 await cache.writeQuery({
-                  query: getUserProfile,
+                  query: GET_USER_PROFILE,
                   data: {
                     currentUser: {
                       ...currentUser,
diff --git a/apolloschurchapp/src/user-settings/UserSettings.tests.js b/apolloschurchapp/src/user-settings/UserSettings.tests.js
index 5cb5377..9a1f3d3 100644
--- a/apolloschurchapp/src/user-settings/UserSettings.tests.js
+++ b/apolloschurchapp/src/user-settings/UserSettings.tests.js
@@ -4,14 +4,14 @@ import wait from 'waait';
 
 import Providers from 'apolloschurchapp/src/Providers';
 
-import getLoginState from '../tabs/connect/getLoginState';
+import GET_LOGIN_STATE from '../tabs/connect/getLoginState';
 import UserSettings from '.';
 
 describe('UserSettings component', () => {
   it('renders UserSettings when logged in', async () => {
     const mock = {
       request: {
-        query: getLoginState,
+        query: GET_LOGIN_STATE,
       },
       result: {
         data: { isLoggedIn: true },
diff --git a/apolloschurchapp/src/user-settings/getUserPhoto.js b/apolloschurchapp/src/user-settings/getUserPhoto.js
new file mode 100644
index 0000000..9d48a44
--- /dev/null
+++ b/apolloschurchapp/src/user-settings/getUserPhoto.js
@@ -0,0 +1,17 @@
+import gql from 'graphql-tag';
+import CampusParts from 'apolloschurchapp/src/user-settings/Locations/campusFragment';
+
+export default gql`
+  query getCurrentUserProfile {
+    currentUser {
+      id
+      profile {
+        id
+        photo {
+          uri
+        }
+      }
+    }
+  }
+  ${CampusParts}
+`;
diff --git a/apolloschurchapp/src/user-settings/index.js b/apolloschurchapp/src/user-settings/index.js
index c386327..491b707 100644
--- a/apolloschurchapp/src/user-settings/index.js
+++ b/apolloschurchapp/src/user-settings/index.js
@@ -1,33 +1,23 @@
 import React, { PureComponent } from 'react';
-
+import { ScrollView } from 'react-native';
+import { StackActions, NavigationActions } from 'react-navigation';
 import PropTypes from 'prop-types';
 import { Query, Mutation } from 'react-apollo';
 
 import {
   BackgroundView,
-  PaddedView,
   TableView,
   Cell,
   CellIcon,
   CellText,
   Divider,
   Touchable,
-  styled,
   ActivityIndicator,
 } from '@apollosproject/ui-kit';
 import { WebBrowserConsumer } from 'apolloschurchapp/src/ui/WebBrowser';
-import AvatarForm from 'apolloschurchapp/src/ui/UserAvatarView/AvatarForm';
-
-import { getLoginState, logout } from '@apollosproject/ui-auth';
 
-const AvatarView = styled({
-  alignItems: 'center',
-  justifyContent: 'center',
-})(PaddedView);
-
-const BackgroundContainer = styled(({ theme }) => ({
-  paddingTop: theme.sizing.baseUnit * 1.75,
-}))(BackgroundView);
+import { GET_LOGIN_STATE, LOGOUT } from '@apollosproject/ui-auth';
+import ChangeAvatar from './ChangeAvatar';
 
 class UserSettings extends PureComponent {
   static navigationOptions = () => ({
@@ -43,112 +33,129 @@ class UserSettings extends PureComponent {
 
   render() {
     return (
-      <Query query={getLoginState} fetchPolicy="cache-and-network">
+      <Query query={GET_LOGIN_STATE} fetchPolicy="cache-and-network">
         {({ data: { isLoggedIn = false, loading } }) => {
           if (loading) return <ActivityIndicator />;
           if (!isLoggedIn) return null;
           return (
-            <BackgroundContainer>
-              <AvatarView>
-                <AvatarForm text />
-              </AvatarView>
-              <WebBrowserConsumer>
-                {(openUrl) => (
-                  <BackgroundView>
-                    <TableView>
-                      <Touchable
-                        onPress={async () => {
-                          await this.props.navigation.navigate(
-                            'PersonalDetails'
-                          );
-                        }}
-                      >
-                        <Cell>
-                          <CellText>Personal Details</CellText>
-                          <CellIcon name="arrow-next" />
-                        </Cell>
-                      </Touchable>
-                      <Divider />
-                      <Touchable
-                        onPress={async () => {
-                          await this.props.navigation.navigate('Location');
-                        }}
-                      >
-                        <Cell>
-                          <CellText>Location</CellText>
-                          <CellIcon name="arrow-next" />
-                        </Cell>
-                      </Touchable>
-                      <Divider />
-                      <Touchable
-                        onPress={async () => {
-                          await this.props.navigation.navigate(
-                            'ChangePassword'
-                          );
-                        }}
-                      >
-                        <Cell>
-                          <CellText>Change Password</CellText>
-                          <CellIcon name="arrow-next" />
-                        </Cell>
-                      </Touchable>
-                    </TableView>
-                    <TableView>
-                      <Touchable
-                        onPress={() =>
-                          openUrl('https://apollosrock.newspring.cc/')
-                        }
-                      >
-                        <Cell>
-                          <CellText>Give Feedback</CellText>
-                          <CellIcon name="arrow-next" />
-                        </Cell>
-                      </Touchable>
-                    </TableView>
-                    <TableView>
-                      <Touchable
-                        onPress={() =>
-                          openUrl('https://apollosrock.newspring.cc/')
-                        }
-                      >
-                        <Cell>
-                          <CellText>Privacy Policy</CellText>
-                          <CellIcon name="arrow-next" />
-                        </Cell>
-                      </Touchable>
-                      <Divider />
-                      <Touchable
-                        onPress={() =>
-                          openUrl('https://apollosrock.newspring.cc/')
-                        }
-                      >
-                        <Cell>
-                          <CellText>Terms of Use</CellText>
-                          <CellIcon name="arrow-next" />
-                        </Cell>
-                      </Touchable>
-                    </TableView>
-                    <TableView>
-                      <Mutation mutation={logout}>
-                        {(handleLogout) => (
-                          <Touchable
-                            onPress={async () => {
-                              await handleLogout();
-                              await this.props.navigation.navigate('Connect');
-                            }}
-                          >
-                            <Cell>
-                              <CellText>Logout</CellText>
-                              <CellIcon name="arrow-next" />
-                            </Cell>
-                          </Touchable>
-                        )}
-                      </Mutation>
-                    </TableView>
-                  </BackgroundView>
-                )}
-              </WebBrowserConsumer>
-            </BackgroundContainer>
+            <BackgroundView>
+              <ScrollView>
+                <ChangeAvatar />
+
+                <WebBrowserConsumer>
+                  {(openUrl) => (
+                    <>
+                      <TableView>
+                        <Touchable
+                          onPress={async () => {
+                            await this.props.navigation.navigate(
+                              'PersonalDetails'
+                            );
+                          }}
+                        >
+                          <Cell>
+                            <CellText>Personal Details</CellText>
+                            <CellIcon name="arrow-next" />
+                          </Cell>
+                        </Touchable>
+                        <Divider />
+                        <Touchable
+                          onPress={async () => {
+                            await this.props.navigation.navigate('Location');
+                          }}
+                        >
+                          <Cell>
+                            <CellText>Location</CellText>
+                            <CellIcon name="arrow-next" />
+                          </Cell>
+                        </Touchable>
+                        <Divider />
+                        <Touchable
+                          onPress={async () => {
+                            await this.props.navigation.navigate(
+                              'ChangePassword'
+                            );
+                          }}
+                        >
+                          <Cell>
+                            <CellText>Change Password</CellText>
+                            <CellIcon name="arrow-next" />
+                          </Cell>
+                        </Touchable>
+                      </TableView>
+                      <TableView>
+                        <Touchable
+                          onPress={() =>
+                            openUrl('https://apollosrock.newspring.cc/')
+                          }
+                        >
+                          <Cell>
+                            <CellText>Give Feedback</CellText>
+                            <CellIcon name="arrow-next" />
+                          </Cell>
+                        </Touchable>
+                      </TableView>
+                      <TableView>
+                        <Touchable
+                          onPress={() =>
+                            openUrl('https://apollosrock.newspring.cc/')
+                          }
+                        >
+                          <Cell>
+                            <CellText>Privacy Policy</CellText>
+                            <CellIcon name="arrow-next" />
+                          </Cell>
+                        </Touchable>
+                        <Divider />
+                        <Touchable
+                          onPress={() =>
+                            openUrl('https://apollosrock.newspring.cc/')
+                          }
+                        >
+                          <Cell>
+                            <CellText>Terms of Use</CellText>
+                            <CellIcon name="arrow-next" />
+                          </Cell>
+                        </Touchable>
+                      </TableView>
+                      <TableView>
+                        <Mutation mutation={LOGOUT}>
+                          {(handleLogout) => (
+                            <Touchable
+                              onPress={async () => {
+                                await handleLogout();
+                                // This resets the navigation stack, and the navigates to the first auth screen.
+                                // This ensures that user isn't navigated to a subscreen of Auth, like the pin entry screen.
+                                await this.props.navigation.dispatch(
+                                  StackActions.reset({
+                                    index: 0,
+                                    key: null,
+                                    actions: [
+                                      NavigationActions.navigate({
+                                        routeName: 'Auth',
+                                        action: NavigationActions.navigate({
+                                          routeName:
+                                            'AuthSMSPhoneEntryConnected',
+                                        }),
+                                      }),
+                                    ],
+                                  })
+                                );
+                              }}
+                            >
+                              <Cell>
+                                <CellText>Logout</CellText>
+                                <CellIcon name="arrow-next" />
+                              </Cell>
+                            </Touchable>
+                          )}
+                        </Mutation>
+                      </TableView>
+                    </>
+                  )}
+                </WebBrowserConsumer>
+              </ScrollView>
+            </BackgroundView>
           );
         }}
       </Query>
diff --git a/apolloschurchapp/src/ui/UserAvatarView/uploadPhoto.js b/apolloschurchapp/src/user-settings/uploadPhoto.js
similarity index 91%
rename from apolloschurchapp/src/ui/UserAvatarView/uploadPhoto.js
rename to apolloschurchapp/src/user-settings/uploadPhoto.js
index cf0b4e0..7eb5815 100644
--- a/apolloschurchapp/src/ui/UserAvatarView/uploadPhoto.js
+++ b/apolloschurchapp/src/user-settings/uploadPhoto.js
@@ -1,7 +1,7 @@
 import gql from 'graphql-tag';
 import ImagePicker from 'react-native-image-picker';
 import { ReactNativeFile } from 'apollo-upload-client';
-import getUserProfile from '../../tabs/connect/getUserProfile';
+import GET_USER_PROFILE from './getUserPhoto';
 
 const options = {
   title: 'Select Profile Image',
@@ -57,10 +57,10 @@ export default async ({ client, onUpload = () => ({}) }) => {
           },
         }
       ) => {
-        const data = cache.readQuery({ query: getUserProfile });
+        const data = cache.readQuery({ query: GET_USER_PROFILE });
 
         cache.writeQuery({
-          query: getUserProfile,
+          query: GET_USER_PROFILE,
           data: {
             currentUser: {
               ...data.currentUser,
diff --git a/apolloschurchapp/src/user-web-browser/Provider.js b/apolloschurchapp/src/user-web-browser/Provider.js
index e620207..bc1ce7f 100644
--- a/apolloschurchapp/src/user-web-browser/Provider.js
+++ b/apolloschurchapp/src/user-web-browser/Provider.js
@@ -1,8 +1,8 @@
 import { createContext } from 'react';
 import NavigationService from '../NavigationService';
 
-// Can can either call the OpenUserWebView function directly, or call it using the Consuemer.
-// Your choice.
+// Can can either call the OpenUserWebView function directly, or call it using
+// the Consumer. Your choice.
 export const OpenUserWebView = ({ url }) =>
   NavigationService.navigate('UserWebBrowser', { url });
 
diff --git a/apolloschurchapp/src/user-web-browser/__tests__/BrowserWithUserCookie.tests.js b/apolloschurchapp/src/user-web-browser/__tests__/BrowserWithUserCookie.tests.js
new file mode 100644
index 0000000..5c576db
--- /dev/null
+++ b/apolloschurchapp/src/user-web-browser/__tests__/BrowserWithUserCookie.tests.js
@@ -0,0 +1,52 @@
+import React from 'react';
+import { renderWithApolloData } from '../../utils/testUtils';
+import Providers from '../../Providers';
+import BrowserWithUserCookie, { WITH_USER_COOKIE } from '../index';
+import { OpenUserWebView } from '../Provider';
+import NavigationService from '../../NavigationService';
+
+const mocks = [
+  {
+    request: { query: WITH_USER_COOKIE },
+    result: {
+      data: {
+        __typename: 'AuthenticatedUser',
+        currentUser: {
+          __typename: 'Person',
+          id: 'Person:123',
+          rockToken: 'ABC',
+        },
+      },
+    },
+  },
+];
+const navigation = { navigate: jest.fn(), getParam: jest.fn() };
+
+describe('the BrowserWithUserCookie component', () => {
+  it('renders with a user', async () => {
+    const tree = await renderWithApolloData(
+      <Providers mocks={mocks}>
+        <BrowserWithUserCookie navigation={navigation} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('renders with modal false', async () => {
+    const tree = await renderWithApolloData(
+      <Providers mocks={mocks}>
+        <BrowserWithUserCookie modal={false} navigation={navigation} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
+describe('the OpenUserWebView', () => {
+  jest.mock('NavigationService');
+  NavigationService.navigate = jest.fn();
+  it('navigtes', () => {
+    OpenUserWebView({ url: 'fake.com' });
+    expect(NavigationService.navigate).toBeCalledWith('UserWebBrowser', {
+      url: 'fake.com',
+    });
+  });
+});
diff --git a/apolloschurchapp/src/user-web-browser/index.js b/apolloschurchapp/src/user-web-browser/index.js
index d830fe5..5a41635 100644
--- a/apolloschurchapp/src/user-web-browser/index.js
+++ b/apolloschurchapp/src/user-web-browser/index.js
@@ -8,8 +8,7 @@ import { WebView } from 'react-native-webview';
 import PropTypes from 'prop-types';
 import { get } from 'lodash';
 
-const Browser = ({ url, cookie = '', modal, navigation }) => {
-  console.warn(cookie);
+const Browser = ({ url, cookie, modal, navigation }) => {
   if (modal) {
     return (
       <ModalView navigation={navigation}>
@@ -26,7 +25,7 @@ Browser.propTypes = {
   modal: PropTypes.bool.isRequired,
 };
 
-const WITH_USER_COOKIE = gql`
+export const WITH_USER_COOKIE = gql`
   query currentUserCookie {
     currentUser {
       id
diff --git a/apolloschurchapp/src/utils/__tests__/utils.tests.js b/apolloschurchapp/src/utils/__tests__/utils.tests.js
new file mode 100644
index 0000000..24fe48a
--- /dev/null
+++ b/apolloschurchapp/src/utils/__tests__/utils.tests.js
@@ -0,0 +1,68 @@
+import React from 'react';
+import { Text } from 'react-native';
+import fetchMoreResolver from '../fetchMoreResolver';
+import { renderWithApolloData } from '../testUtils';
+
+describe('the fetchMoreResolver function', () => {
+  const args = {
+    collectionName: 'userFeed',
+    variables: { first: 10, after: null },
+    fetchMore: jest.fn(),
+    data: {
+      userFeed: {
+        edges: [
+          {
+            node: { id: 'foo' },
+          },
+          {
+            node: { id: 'bar' },
+          },
+        ],
+        pageInfo: { endCursor: 'abc123' },
+      },
+    },
+  };
+  test('no endCursor', () => {
+    expect(
+      fetchMoreResolver({
+        ...args,
+        data: { userFeed: { edges: [], pageInfo: {} } },
+      })()
+    ).toBeUndefined();
+  });
+  test('combines data', () => {
+    fetchMoreResolver({ ...args })();
+    const previousResult = args.data;
+    const fetchMoreResult = {
+      userFeed: {
+        edges: [{ node: { id: 'baz' } }],
+        pageInfo: { endCursor: 'def456' },
+      },
+    };
+    expect(
+      args.fetchMore.mock.calls[0][0].updateQuery(previousResult, {
+        fetchMoreResult,
+      })
+    ).toEqual({
+      userFeed: {
+        edges: [
+          {
+            node: { id: 'foo' },
+          },
+          {
+            node: { id: 'bar' },
+          },
+          {
+            node: { id: 'baz' },
+          },
+        ],
+        pageInfo: { endCursor: 'def456' },
+      },
+    });
+  });
+});
+
+test('renderWithApolloData renders the component', async () => {
+  const tree = await renderWithApolloData(<Text>hello, world!</Text>);
+  expect(tree).toMatchSnapshot();
+});
diff --git a/apolloschurchapp/src/utils/content/__tests__/share.tests.js b/apolloschurchapp/src/utils/content/__tests__/share.tests.js
new file mode 100644
index 0000000..972edaa
--- /dev/null
+++ b/apolloschurchapp/src/utils/content/__tests__/share.tests.js
@@ -0,0 +1,38 @@
+import { Platform, Share } from 'react-native';
+import share from '../share';
+
+jest.mock('Platform');
+jest.mock('Share');
+
+describe('the share function', () => {
+  beforeAll(() => {
+    Share.share = jest.fn();
+  });
+  test('default arguments', () => {
+    Platform.OS = 'ios';
+    share({ title: 'title', url: 'http://url.com' });
+    expect(Share.share).toBeCalledWith({
+      title: 'title',
+      message: undefined,
+      url: 'http://url.com',
+    });
+  });
+  test('use message if provided', () => {
+    Platform.OS = 'ios';
+    share({ title: 'title', message: 'some message', url: 'http://url.com' });
+    expect(Share.share).toBeCalledWith({
+      title: 'title',
+      message: 'some message',
+      url: 'http://url.com',
+    });
+  });
+  test('android arguments', () => {
+    Platform.OS = 'android';
+    share({ title: 'title', url: 'http://url.com' });
+    expect(Share.share).toBeCalledWith({
+      title: 'title',
+      message: 'http://url.com',
+      url: 'http://url.com',
+    });
+  });
+});
diff --git a/apolloschurchapp/src/utils/content/share.js b/apolloschurchapp/src/utils/content/share.js
index 7a8efae..6d4326f 100644
--- a/apolloschurchapp/src/utils/content/share.js
+++ b/apolloschurchapp/src/utils/content/share.js
@@ -1,12 +1,12 @@
 import { Platform, Share } from 'react-native';
-// import { get } from 'lodash';
-// import { track, events } from 'apolloschurchapp/src/analytics';
-// import getSiteLink from './getSiteLink';
 
-const share = ({ title, url }) => {
+const share = ({ title, url, message }) => {
   Share.share({
     title,
-    message: Platform.OS === 'android' ? `${title}\n${url}` : title,
+    message:
+      Platform.OS === 'android'
+        ? [message, url].filter((s) => !!s).join('\n')
+        : message,
     url,
   });
 };
diff --git a/apolloschurchapp/src/utils/fetchMoreResolver.js b/apolloschurchapp/src/utils/fetchMoreResolver.js
index d812283..b93cb2f 100644
--- a/apolloschurchapp/src/utils/fetchMoreResolver.js
+++ b/apolloschurchapp/src/utils/fetchMoreResolver.js
@@ -6,7 +6,7 @@ export default function fetchMoreResolver({
   variables,
   fetchMore,
   data,
-} = {}) {
+}) {
   return () => {
     const pageInfoPath = `${collectionName}.pageInfo`;
     const edgePath = `${collectionName}.edges`;
