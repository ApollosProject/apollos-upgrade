diff --git a/apolloschurchapp/android/app/build.gradle b/apolloschurchapp/android/app/build.gradle
index 245005a..12e076a 100644
--- a/apolloschurchapp/android/app/build.gradle
+++ b/apolloschurchapp/android/app/build.gradle
@@ -121,10 +121,10 @@ android {
         applicationId "com.apolloschurch.app"
         minSdkVersion rootProject.ext.minSdkVersion
         targetSdkVersion rootProject.ext.targetSdkVersion
-        versionCode 14
-        versionName "1.0.0"
+        versionCode 17
+        versionName "1.1.0-beta.2"
         ndk {
-            abiFilters "armeabi-v7a", "x86"
+            abiFilters "armeabi-v7a", "x86", "arm64-v8a", "x86_64"
         }
         resValue "string", "build_config_package", "com.apolloschurchapp"
     }
diff --git a/apolloschurchapp/android/app/src/main/res/values/styles.xml b/apolloschurchapp/android/app/src/main/res/values/styles.xml
index 328c4be..de75bed 100644
--- a/apolloschurchapp/android/app/src/main/res/values/styles.xml
+++ b/apolloschurchapp/android/app/src/main/res/values/styles.xml
@@ -9,8 +9,4 @@
         <item name="android:windowBackground">@drawable/background_splash</item>
     </style>
 
-    <style name="SplashScreenTheme" parent="SplashScreen_SplashTheme">
-        <item name="android:windowIsTranslucent">true</item>
-    </style>
-
 </resources>
diff --git a/apolloschurchapp/android/build.gradle b/apolloschurchapp/android/build.gradle
index 50a195a..fcc6be8 100644
--- a/apolloschurchapp/android/build.gradle
+++ b/apolloschurchapp/android/build.gradle
@@ -13,7 +13,7 @@ buildscript {
         jcenter()
     }
     dependencies {
-        classpath 'com.android.tools.build:gradle:3.3.1'
+        classpath("com.android.tools.build:gradle:3.4.0")
 
         // NOTE: Do not place your application dependencies here; they belong
         // in the individual module build.gradle files
diff --git a/apolloschurchapp/android/gradle/wrapper/gradle-wrapper.properties b/apolloschurchapp/android/gradle/wrapper/gradle-wrapper.properties
index 019065d..3c7a7c8 100644
--- a/apolloschurchapp/android/gradle/wrapper/gradle-wrapper.properties
+++ b/apolloschurchapp/android/gradle/wrapper/gradle-wrapper.properties
@@ -2,4 +2,4 @@ distributionBase=GRADLE_USER_HOME
 distributionPath=wrapper/dists
 zipStoreBase=GRADLE_USER_HOME
 zipStorePath=wrapper/dists
-distributionUrl=https\://services.gradle.org/distributions/gradle-4.10.2-all.zip
+distributionUrl=https\://services.gradle.org/distributions/gradle-5.4.1-all.zip
\ No newline at end of file
diff --git a/apolloschurchapp/android/gradlew b/apolloschurchapp/android/gradlew
index cccdd3d..3e84efe 100755
--- a/apolloschurchapp/android/gradlew
+++ b/apolloschurchapp/android/gradlew
@@ -28,7 +28,7 @@ APP_NAME="Gradle"
 APP_BASE_NAME=`basename "$0"`
 
 # Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
-DEFAULT_JVM_OPTS=""
+DEFAULT_JVM_OPTS='"-Xmx64m" "-Xms64m"'
 
 # Use the maximum available, or set MAX_FD != -1 to use that value.
 MAX_FD="maximum"
diff --git a/apolloschurchapp/android/gradlew.bat b/apolloschurchapp/android/gradlew.bat
index e95643d..1688408 100644
--- a/apolloschurchapp/android/gradlew.bat
+++ b/apolloschurchapp/android/gradlew.bat
@@ -14,7 +14,7 @@ set APP_BASE_NAME=%~n0
 set APP_HOME=%DIRNAME%
 
 @rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
-set DEFAULT_JVM_OPTS=
+set DEFAULT_JVM_OPTS="-Xmx64m" "-Xms64m"
 
 @rem Find java.exe
 if defined JAVA_HOME goto findJavaFromJavaHome
diff --git a/apolloschurchapp/apollos.json b/apolloschurchapp/apollos.json
index eb28af7..727cfc1 100644
--- a/apolloschurchapp/apollos.json
+++ b/apolloschurchapp/apollos.json
@@ -1,4 +1,4 @@
 {
-    "version": "1.0.0",
+    "version": "1.1.0-beta.2",
     "environment": "client"
 }
\ No newline at end of file
diff --git a/apolloschurchapp/ios/apolloschurchapp-tvOS/Info.plist b/apolloschurchapp/ios/apolloschurchapp-tvOS/Info.plist
index 997f96e..85a8beb 100644
--- a/apolloschurchapp/ios/apolloschurchapp-tvOS/Info.plist
+++ b/apolloschurchapp/ios/apolloschurchapp-tvOS/Info.plist
@@ -15,11 +15,11 @@
 	<key>CFBundlePackageType</key>
 	<string>APPL</string>
 	<key>CFBundleShortVersionString</key>
-	<string>1.0.0</string>
+	<string>1.1.0-beta.2</string>
 	<key>CFBundleSignature</key>
 	<string>????</string>
 	<key>CFBundleVersion</key>
-	<string>14</string>
+	<string>17</string>
 	<key>LSRequiresIPhoneOS</key>
 	<true />
 	<key>UILaunchStoryboardName</key>
diff --git a/apolloschurchapp/ios/apolloschurchapp-tvOSTests/Info.plist b/apolloschurchapp/ios/apolloschurchapp-tvOSTests/Info.plist
index 90d34c1..05a45de 100644
--- a/apolloschurchapp/ios/apolloschurchapp-tvOSTests/Info.plist
+++ b/apolloschurchapp/ios/apolloschurchapp-tvOSTests/Info.plist
@@ -15,10 +15,10 @@
 	<key>CFBundlePackageType</key>
 	<string>BNDL</string>
 	<key>CFBundleShortVersionString</key>
-	<string>1.0.0</string>
+	<string>1.1.0-beta.2</string>
 	<key>CFBundleSignature</key>
 	<string>????</string>
 	<key>CFBundleVersion</key>
-	<string>14</string>
+	<string>17</string>
 </dict>
 </plist>
diff --git a/apolloschurchapp/ios/apolloschurchapp.xcodeproj/project.pbxproj b/apolloschurchapp/ios/apolloschurchapp.xcodeproj/project.pbxproj
index c1b6636..2a41435 100644
--- a/apolloschurchapp/ios/apolloschurchapp.xcodeproj/project.pbxproj
+++ b/apolloschurchapp/ios/apolloschurchapp.xcodeproj/project.pbxproj
@@ -1945,7 +1945,7 @@
 			isa = XCBuildConfiguration;
 			buildSettings = {
 				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
-				CURRENT_PROJECT_VERSION = 10;
+				CURRENT_PROJECT_VERSION = 13;
 				DEAD_CODE_STRIPPING = NO;
 				DEVELOPMENT_TEAM = 7TM8C6252Z;
 				HEADER_SEARCH_PATHS = (
@@ -1985,7 +1985,7 @@
 			isa = XCBuildConfiguration;
 			buildSettings = {
 				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
-				CURRENT_PROJECT_VERSION = 10;
+				CURRENT_PROJECT_VERSION = 13;
 				HEADER_SEARCH_PATHS = (
 					"$(inherited)",
 					"$(SRCROOT)/../node_modules/react-native-airplay-btn/ios",
diff --git a/apolloschurchapp/ios/apolloschurchapp/Info.plist b/apolloschurchapp/ios/apolloschurchapp/Info.plist
index aa3344d..ae6d8ca 100644
--- a/apolloschurchapp/ios/apolloschurchapp/Info.plist
+++ b/apolloschurchapp/ios/apolloschurchapp/Info.plist
@@ -17,7 +17,7 @@
 	<key>CFBundlePackageType</key>
 	<string>APPL</string>
 	<key>CFBundleShortVersionString</key>
-	<string>1.0.0</string>
+	<string>1.1.0-beta.2</string>
 	<key>CFBundleSignature</key>
 	<string>????</string>
 	<key>CFBundleURLTypes</key>
@@ -30,7 +30,7 @@
 		</dict>
 	</array>
 	<key>CFBundleVersion</key>
-	<string>15</string>
+	<string>18</string>
 	<key>ITSAppUsesNonExemptEncryption</key>
 	<false />
 	<key>LSRequiresIPhoneOS</key>
diff --git a/apolloschurchapp/ios/apolloschurchappTests/Info.plist b/apolloschurchapp/ios/apolloschurchappTests/Info.plist
index 689ee53..edd5369 100644
--- a/apolloschurchapp/ios/apolloschurchappTests/Info.plist
+++ b/apolloschurchapp/ios/apolloschurchappTests/Info.plist
@@ -15,10 +15,10 @@
 	<key>CFBundlePackageType</key>
 	<string>BNDL</string>
 	<key>CFBundleShortVersionString</key>
-	<string>1.0.0</string>
+	<string>1.1.0-beta.2</string>
 	<key>CFBundleSignature</key>
 	<string>????</string>
 	<key>CFBundleVersion</key>
-	<string>14</string>
+	<string>17</string>
 </dict>
 </plist>
diff --git a/apolloschurchapp/package.json b/apolloschurchapp/package.json
index b385877..6d346cd 100644
--- a/apolloschurchapp/package.json
+++ b/apolloschurchapp/package.json
@@ -1,6 +1,6 @@
 {
   "name": "apolloschurchapp",
-  "version": "1.0.0",
+  "version": "1.1.0-beta.2",
   "private": true,
   "devDependencies": {
     "@apollosproject/ui-storybook": "^0.8.6",
@@ -8,7 +8,7 @@
     "get-dev-paths": "^0.1.0",
     "jest": "^24.8.0",
     "jest-react-native": "18.0.0",
-    "metro-react-native-babel-preset": "^0.54.0",
+    "metro-react-native-babel-preset": "^0.54.1",
     "nodemon": "1.18.7",
     "prettier": "1.14.2",
     "prop-types": "15.6.1",
@@ -59,15 +59,16 @@
     ]
   },
   "dependencies": {
-    "@apollosproject/ui-analytics": "^1.0.0",
-    "@apollosproject/ui-auth": "^1.0.0",
-    "@apollosproject/ui-htmlview": "^1.0.0",
-    "@apollosproject/ui-kit": "^1.0.0",
-    "@apollosproject/ui-media-player": "^1.0.0",
-    "@apollosproject/ui-notifications": "^1.0.0",
-    "@apollosproject/ui-passes": "^1.0.0",
-    "@apollosproject/ui-scripture": "^1.0.0-beta.0",
-    "@apollosproject/ui-storybook": "^1.0.0-beta.0",
+    "@apollosproject/ui-analytics": "^1.1.0-beta.2",
+    "@apollosproject/ui-auth": "^1.1.0-beta.2",
+    "@apollosproject/ui-htmlview": "^1.1.0-beta.2",
+    "@apollosproject/ui-kit": "^1.1.0-beta.2",
+    "@apollosproject/ui-media-player": "^1.1.0-beta.2",
+    "@apollosproject/ui-notifications": "^1.1.0-beta.2",
+    "@apollosproject/ui-onboarding": "^1.1.0-beta.2",
+    "@apollosproject/ui-passes": "^1.1.0-beta.2",
+    "@apollosproject/ui-scripture": "^1.1.0-beta.2",
+    "@apollosproject/ui-storybook": "^1.1.0-beta.2",
     "apollo-cache-inmemory": "1.5.1",
     "apollo-cache-persist": "0.1.1",
     "apollo-client": "2.5.1",
@@ -88,7 +89,7 @@
     "node-fetch": "2.2.0",
     "react": "16.8.3",
     "react-apollo": "2.5.5",
-    "react-native": "0.59.8",
+    "react-native": "0.59.10",
     "react-native-airplay-btn": "^1.0.6",
     "react-native-config": "^0.11.7",
     "react-native-device-info": "^2.1.2",
diff --git a/apolloschurchapp/src/client/fragmentTypes.json b/apolloschurchapp/src/client/fragmentTypes.json
index 8003403..f6404a3 100644
--- a/apolloschurchapp/src/client/fragmentTypes.json
+++ b/apolloschurchapp/src/client/fragmentTypes.json
@@ -1 +1 @@
-{"__schema":{"types":[{"kind":"INTERFACE","name":"Node","possibleTypes":[{"name":"ContentChannel"},{"name":"Person"},{"name":"Campus"},{"name":"Pass"},{"name":"UniversalContentItem"},{"name":"DevotionalContentItem"},{"name":"MediaContentItem"},{"name":"ContentSeriesContentItem"},{"name":"WeekendContentItem"},{"name":"ActionListFeature"}]},{"kind":"INTERFACE","name":"ContentItem","possibleTypes":[{"name":"UniversalContentItem"},{"name":"DevotionalContentItem"},{"name":"MediaContentItem"},{"name":"ContentSeriesContentItem"},{"name":"WeekendContentItem"}]},{"kind":"INTERFACE","name":"Media","possibleTypes":[{"name":"ImageMedia"},{"name":"VideoMedia"},{"name":"AudioMedia"}]},{"kind":"INTERFACE","name":"MediaSource","possibleTypes":[{"name":"ImageMediaSource"},{"name":"VideoMediaSource"},{"name":"AudioMediaSource"}]},{"kind":"INTERFACE","name":"Sharable","possibleTypes":[{"name":"SharableContentItem"}]},{"kind":"INTERFACE","name":"Feature","possibleTypes":[{"name":"ActionListFeature"}]}]}}
\ No newline at end of file
+{"__schema":{"types":[{"kind":"INTERFACE","name":"Node","possibleTypes":[{"name":"ContentChannel"},{"name":"Person"},{"name":"Campus"},{"name":"Scripture"},{"name":"Pass"},{"name":"UniversalContentItem"},{"name":"DevotionalContentItem"},{"name":"MediaContentItem"},{"name":"ContentSeriesContentItem"},{"name":"WeekendContentItem"},{"name":"ActionListFeature"},{"name":"TextFeature"},{"name":"ScriptureFeature"}]},{"kind":"INTERFACE","name":"ContentItem","possibleTypes":[{"name":"UniversalContentItem"},{"name":"DevotionalContentItem"},{"name":"MediaContentItem"},{"name":"ContentSeriesContentItem"},{"name":"WeekendContentItem"}]},{"kind":"INTERFACE","name":"Media","possibleTypes":[{"name":"ImageMedia"},{"name":"VideoMedia"},{"name":"AudioMedia"}]},{"kind":"INTERFACE","name":"MediaSource","possibleTypes":[{"name":"ImageMediaSource"},{"name":"VideoMediaSource"},{"name":"AudioMediaSource"}]},{"kind":"INTERFACE","name":"Sharable","possibleTypes":[{"name":"SharableContentItem"}]},{"kind":"INTERFACE","name":"Feature","possibleTypes":[{"name":"ActionListFeature"},{"name":"TextFeature"},{"name":"ScriptureFeature"}]}]}}
\ No newline at end of file
diff --git a/apolloschurchapp/src/content-single/ActionContainer/index.js b/apolloschurchapp/src/content-single/ActionContainer/index.js
index b10302d..c6d8092 100644
--- a/apolloschurchapp/src/content-single/ActionContainer/index.js
+++ b/apolloschurchapp/src/content-single/ActionContainer/index.js
@@ -1,16 +1,12 @@
 import React from 'react';
 import { Platform, View } from 'react-native';
 import PropTypes from 'prop-types';
-import { Query } from 'react-apollo';
-import { get } from 'lodash';
-import Share from 'apolloschurchapp/src/ui/Share';
+import ShareButton from 'apolloschurchapp/src/ui/ShareButton';
 
 import { SideBySideView, styled } from '@apollosproject/ui-kit';
 import LikeButton from 'apolloschurchapp/src/ui/LikeButton';
 import { MediaPlayerSpacer } from '@apollosproject/ui-media-player';
 
-import GET_SHARE_CONTENT from './getShareContent';
-
 const PositioningView = styled(({ theme }) => ({
   justifyContent: 'space-around',
   paddingVertical: theme.sizing.baseUnit / 2,
@@ -27,14 +23,7 @@ const ActionContainer = ({ itemId }) => (
     <MediaPlayerSpacer>
       <PositioningView>
         <LikeButton itemId={itemId} />
-        <Query query={GET_SHARE_CONTENT} variables={{ itemId }}>
-          {({ data: { node } = {}, error, loading }) => {
-            const sharing = get(node, 'sharing');
-            return loading || error || !sharing ? null : (
-              <Share content={sharing} />
-            );
-          }}
-        </Query>
+        <ShareButton itemId={itemId} />
       </PositioningView>
     </MediaPlayerSpacer>
   </Container>
diff --git a/apolloschurchapp/src/content-single/DevotionalContentItem/Devotional.tests.js b/apolloschurchapp/src/content-single/DevotionalContentItem/Devotional.tests.js
index 1021514..5bbb257 100644
--- a/apolloschurchapp/src/content-single/DevotionalContentItem/Devotional.tests.js
+++ b/apolloschurchapp/src/content-single/DevotionalContentItem/Devotional.tests.js
@@ -91,7 +91,7 @@ describe('the Devotional component', () => {
     );
     expect(tree).toMatchSnapshot();
   });
-  it('renders a loading state', async () => {
+  it('renders a loading state of null', async () => {
     const tree = renderer.create(
       <Providers mocks={mocks}>
         <Devotional id="1" content={content} loading navigation={navigation} />
diff --git a/apolloschurchapp/src/content-single/Features/ScriptureFeature.js b/apolloschurchapp/src/content-single/Features/ScriptureFeature.js
new file mode 100644
index 0000000..75e15e0
--- /dev/null
+++ b/apolloschurchapp/src/content-single/Features/ScriptureFeature.js
@@ -0,0 +1,44 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+
+import { ActionCard } from '@apollosproject/ui-kit';
+import { ScriptureItem } from '@apollosproject/ui-scripture';
+
+const ScriptureFeature = ({ scriptures, isLoading }) => (
+  <ActionCard icon={'text'}>
+    {scriptures.map(({ copyright, reference, html, id }) => (
+      <ScriptureItem
+        key={id}
+        reference={reference}
+        html={html}
+        isLoading={isLoading}
+        copyright={copyright}
+      />
+    ))}
+  </ActionCard>
+);
+
+ScriptureFeature.propTypes = {
+  isLoading: PropTypes.bool.isRequired,
+  scriptures: PropTypes.arrayOf(
+    PropTypes.shape({
+      html: PropTypes.string.isRequired,
+      reference: PropTypes.string.isRequired,
+      id: PropTypes.string.isRequired,
+      copyright: PropTypes.string,
+    })
+  ),
+};
+
+export const SCRIPTURE_FEATURE_FRAGMENT = `
+fragment ScriptureFeatureFragment on ScriptureFeature {
+  scriptures {
+    id
+    html
+    reference
+    copyright
+  }
+}
+`;
+
+export default ScriptureFeature;
diff --git a/apolloschurchapp/src/content-single/Features/TextFeature.js b/apolloschurchapp/src/content-single/Features/TextFeature.js
new file mode 100644
index 0000000..69fe50e
--- /dev/null
+++ b/apolloschurchapp/src/content-single/Features/TextFeature.js
@@ -0,0 +1,25 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+
+import { ActionCard, BodyText } from '@apollosproject/ui-kit';
+import ShareButton from 'apolloschurchapp/src/ui/ShareButton';
+
+const TextFeature = ({ body, contentId }) => (
+  <ActionCard action={<ShareButton message={body} itemId={contentId} />}>
+    <BodyText>{body}</BodyText>
+  </ActionCard>
+);
+
+TextFeature.propTypes = {
+  body: PropTypes.string.isRequired,
+  contentId: PropTypes.string.isRequired,
+};
+
+export const TEXT_FEATURE_FRAGMENT = `
+fragment TextFeatureFragment on TextFeature {
+  body
+  id
+}
+`;
+
+export default TextFeature;
diff --git a/apolloschurchapp/src/content-single/Features/getContentItemFeatures.js b/apolloschurchapp/src/content-single/Features/getContentItemFeatures.js
new file mode 100644
index 0000000..a015cec
--- /dev/null
+++ b/apolloschurchapp/src/content-single/Features/getContentItemFeatures.js
@@ -0,0 +1,32 @@
+import gql from 'graphql-tag';
+import { TEXT_FEATURE_FRAGMENT } from './TextFeature';
+import { SCRIPTURE_FEATURE_FRAGMENT } from './ScriptureFeature';
+
+const FEATURES_FRAGMENT = `
+  fragment FeaturesFragment on Feature {
+    id
+    ...TextFeatureFragment
+    ...ScriptureFeatureFragment
+  }
+  ${TEXT_FEATURE_FRAGMENT}
+  ${SCRIPTURE_FEATURE_FRAGMENT}
+`;
+
+export default gql`
+  query contentItemFeatures($contentId: ID!) {
+    node(id: $contentId) {
+      id
+      ... on ContentSeriesContentItem {
+        features {
+          ...FeaturesFragment
+        }
+      }
+      ... on WeekendContentItem {
+        features {
+          ...FeaturesFragment
+        }
+      }
+    }
+  }
+  ${FEATURES_FRAGMENT}
+`;
diff --git a/apolloschurchapp/src/content-single/Features/index.js b/apolloschurchapp/src/content-single/Features/index.js
new file mode 100644
index 0000000..365a694
--- /dev/null
+++ b/apolloschurchapp/src/content-single/Features/index.js
@@ -0,0 +1,45 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import { Query } from 'react-apollo';
+import { ErrorCard } from '@apollosproject/ui-kit';
+import { get } from 'lodash';
+import TextFeature from './TextFeature';
+import ScriptureFeature from './ScriptureFeature';
+
+import GET_CONTENT_ITEM_FEATURES from './getContentItemFeatures';
+
+const FEATURE_MAP = {
+  TextFeature,
+  ScriptureFeature,
+};
+
+const Features = ({ contentId }) => {
+  if (!contentId) return null;
+
+  return (
+    <Query
+      query={GET_CONTENT_ITEM_FEATURES}
+      fetchPolicy="cache-and-network"
+      variables={{ contentId }}
+    >
+      {({ data: { node } = {}, loading, error }) => {
+        if (error) return <ErrorCard error={error} />;
+        if (loading) return null;
+
+        const features = get(node, 'features', []);
+        return features.map(({ __typename, ...feature }) => {
+          const Feature = FEATURE_MAP[__typename];
+          return (
+            <Feature key={feature.id} {...feature} contentId={contentId} />
+          );
+        });
+      }}
+    </Query>
+  );
+};
+
+Features.propTypes = {
+  contentId: PropTypes.string,
+};
+
+export default Features;
diff --git a/apolloschurchapp/src/content-single/HorizontalContentFeed/index.js b/apolloschurchapp/src/content-single/HorizontalContentFeed/index.js
index d9b6aba..30a1593 100644
--- a/apolloschurchapp/src/content-single/HorizontalContentFeed/index.js
+++ b/apolloschurchapp/src/content-single/HorizontalContentFeed/index.js
@@ -51,6 +51,7 @@ class HorizontalContentFeed extends Component {
 
   renderFeed = ({ data, loading, error }) => {
     if (error) return null;
+    if (loading) return null;
 
     const childContent = get(
       data,
@@ -66,10 +67,9 @@ class HorizontalContentFeed extends Component {
 
     const content = siblingContent.length ? siblingContent : childContent;
 
-    return (content && content.length) || loading ? (
+    return content && content.length ? (
       <HorizontalTileFeed
         content={content}
-        isLoading={loading}
         loadingStateObject={loadingStateObject}
         renderItem={this.renderItem}
       />
diff --git a/apolloschurchapp/src/content-single/MediaControls/getContentMedia.js b/apolloschurchapp/src/content-single/MediaControls/getContentMedia.js
index 8ab3d1a..3bc3e34 100644
--- a/apolloschurchapp/src/content-single/MediaControls/getContentMedia.js
+++ b/apolloschurchapp/src/content-single/MediaControls/getContentMedia.js
@@ -21,6 +21,17 @@ export default gql`
           }
         }
       }
+      ... on WeekendContentItem {
+        liveStream {
+          isLive
+          media {
+            sources {
+              uri
+            }
+          }
+          webViewUrl
+        }
+      }
     }
   }
 `;
diff --git a/apolloschurchapp/src/content-single/MediaControls/index.js b/apolloschurchapp/src/content-single/MediaControls/index.js
index fdbbe12..c3918f0 100644
--- a/apolloschurchapp/src/content-single/MediaControls/index.js
+++ b/apolloschurchapp/src/content-single/MediaControls/index.js
@@ -6,6 +6,7 @@ import { get } from 'lodash';
 
 import { PLAY_VIDEO } from '@apollosproject/ui-media-player';
 import { Icon, styled, Button } from '@apollosproject/ui-kit';
+import { WebBrowserConsumer } from 'apolloschurchapp/src/ui/WebBrowser';
 import GET_CONTENT_MEDIA from './getContentMedia';
 
 const buttonSizeDifferential = 4;
@@ -45,47 +46,109 @@ class MediaControls extends PureComponent {
     contentId: PropTypes.string,
   };
 
+  renderMedia = ({
+    videoSource,
+    coverImageSources,
+    title,
+    parentChannelName,
+  }) => (
+    <Mutation mutation={PLAY_VIDEO}>
+      {(play) => (
+        <Container>
+          <MediaButtonBorder>
+            <MediaButton
+              type="primary"
+              onPress={() =>
+                play({
+                  variables: {
+                    mediaSource: videoSource,
+                    posterSources: coverImageSources,
+                    title,
+                    isVideo: true,
+                    artist: parentChannelName,
+                  },
+                })
+              }
+              useForeground
+            >
+              <MediaIcon name="play" />
+            </MediaButton>
+          </MediaButtonBorder>
+        </Container>
+      )}
+    </Mutation>
+  );
+
+  renderWebView = ({ webViewUrl }) => (
+    <WebBrowserConsumer>
+      {(openUrl) => (
+        <Container>
+          <MediaButtonBorder>
+            <MediaButton
+              type="primary"
+              onPress={() => openUrl(webViewUrl)}
+              useForeground
+            >
+              <MediaIcon name="play" />
+            </MediaButton>
+          </MediaButtonBorder>
+        </Container>
+      )}
+    </WebBrowserConsumer>
+  );
+
   renderControls = ({
     loading,
     error,
     data: {
-      node: { videos, title, parentChannel = {}, coverImage = {} } = {},
+      node: {
+        videos,
+        title,
+        parentChannel = {},
+        coverImage = {},
+        liveStream = {},
+      } = {},
     } = {},
   }) => {
     if (loading || error) return null;
 
+    const isLive = get(liveStream, 'isLive', false);
+    const hasLiveStreamContent = !!(
+      get(liveStream, 'webViewUrl') || get(liveStream, 'media.sources[0]')
+    );
+
     const videoSource = get(videos, '[0].sources[0]', null);
+    const shouldRender = (isLive && hasLiveStreamContent) || videoSource;
+
+    if (!shouldRender) return null;
+
     const coverImageSources = (coverImage && coverImage.sources) || [];
 
-    return (
-      <Mutation mutation={PLAY_VIDEO}>
-        {(play) => (
-          <Container>
-            {videoSource ? (
-              <MediaButtonBorder>
-                <MediaButton
-                  type="primary"
-                  onPress={() =>
-                    play({
-                      variables: {
-                        mediaSource: videoSource,
-                        posterSources: coverImageSources,
-                        title,
-                        isVideo: true,
-                        artist: parentChannel.name,
-                      },
-                    })
-                  }
-                  useForeground
-                >
-                  <MediaIcon name="play" />
-                </MediaButton>
-              </MediaButtonBorder>
-            ) : null}
-          </Container>
-        )}
-      </Mutation>
-    );
+    // Content is live, and we have a livestream media
+    if (isLive && get(liveStream, 'media.sources[0].uri')) {
+      return this.renderMedia({
+        coverImageSources,
+        videoSource: liveStream.media.sources[0],
+        parentChannelName: parentChannel.name,
+        title,
+      });
+    }
+
+    // Content is live, and we don't have a livestream media
+    // but we do have a webview url
+    if (isLive && get(liveStream, 'webViewUrl')) {
+      return this.renderWebView({
+        webViewUrl: liveStream.webViewUrl,
+      });
+    }
+
+    // Default case, normal media.
+    return this.renderMedia({
+      coverImageSources,
+      videoSource,
+      parentChannelName: parentChannel.name,
+      title,
+    });
   };
 
   render() {
diff --git a/apolloschurchapp/src/content-single/UniversalContentItem/index.js b/apolloschurchapp/src/content-single/UniversalContentItem/index.js
index 80c9aae..ccc798e 100644
--- a/apolloschurchapp/src/content-single/UniversalContentItem/index.js
+++ b/apolloschurchapp/src/content-single/UniversalContentItem/index.js
@@ -12,6 +12,7 @@ import {
 import MediaControls from '../MediaControls';
 import HTMLContent from '../HTMLContent';
 import HorizontalContentFeed from '../HorizontalContentFeed';
+import Features from '../Features';
 
 const FlexedScrollView = styled({ flex: 1 })(ScrollView);
 
@@ -32,6 +33,7 @@ const UniversalContentItem = ({ content, loading }) => {
             {content.title}
           </H2>
           <HTMLContent contentId={content.id} />
+          <Features contentId={content.id} />
         </PaddedView>
         <HorizontalContentFeed contentId={content.id} />
       </FlexedScrollView>
diff --git a/apolloschurchapp/src/tabs/home/Home.js b/apolloschurchapp/src/tabs/home/Home.js
index 9d7b3c8..ffb4cc1 100644
--- a/apolloschurchapp/src/tabs/home/Home.js
+++ b/apolloschurchapp/src/tabs/home/Home.js
@@ -21,7 +21,7 @@ import { LiveButton } from '../../live';
 
 import ContentTableCard from '../../ui/ContentTableCard';
 import GET_USER_FEED from './getUserFeed';
-import GET_PERSONA_FEED from './getPersonaFeed';
+import GET_FEED_FEATURES from './getFeedFeatures';
 import GET_CAMPAIGN_CONTENT_ITEM from './getCampaignContentItem';
 
 const LogoTitle = styled(({ theme }) => ({
@@ -117,37 +117,35 @@ class Home extends PureComponent {
                       }}
                     </Query>
                     <Query
-                      query={GET_PERSONA_FEED}
+                      query={GET_FEED_FEATURES}
                       fetchPolicy="cache-and-network"
                     >
-                      {({
-                        data: personaData,
-                        loading: isContentTableLoading,
-                      }) => (
-                        <ContentTableCard
-                          isLoading={isContentTableLoading}
-                          onPress={this.handleOnPress}
-                          header={
-                            <>
-                              <StyledH6 isLoading={isContentTableLoading}>
-                                FOR YOU
-                              </StyledH6>
-                              <H3
-                                isLoading={isContentTableLoading}
-                                numberOfLines={3}
-                                ellipsizeMode="tail"
-                              >
-                                Explore what God calls you to today
-                              </H3>
-                            </>
-                          }
-                          content={get(
-                            personaData,
-                            'personaFeed.edges',
-                            []
-                          ).map((edge) => edge.node)}
-                        />
-                      )}
+                      {({ data: features, loading: featuresLoading }) =>
+                        get(features, 'userFeedFeatures', []).map(
+                          ({ title, subtitle, actions, id }) => (
+                            <ContentTableCard
+                              isLoading={featuresLoading}
+                              onPress={this.handleOnPress}
+                              key={id}
+                              header={
+                                <>
+                                  <StyledH6 isLoading={featuresLoading}>
+                                    {title}
+                                  </StyledH6>
+                                  <H3
+                                    isLoading={featuresLoading}
+                                    numberOfLines={3}
+                                    ellipsizeMode="tail"
+                                  >
+                                    {subtitle}
+                                  </H3>
+                                </>
+                              }
+                              content={actions}
+                            />
+                          )
+                        )
+                      }
                     </Query>
                   </>
                 }
diff --git a/apolloschurchapp/src/tabs/home/getFeedFeatures.js b/apolloschurchapp/src/tabs/home/getFeedFeatures.js
new file mode 100644
index 0000000..caffc10
--- /dev/null
+++ b/apolloschurchapp/src/tabs/home/getFeedFeatures.js
@@ -0,0 +1,27 @@
+import gql from 'graphql-tag';
+
+export default gql`
+  query getFeedFeatures {
+    userFeedFeatures {
+      ... on ActionListFeature {
+        id
+        title
+        subtitle
+        actions {
+          id
+          title
+          subtitle
+          action
+          image {
+            sources {
+              uri
+            }
+          }
+          relatedNode {
+            id
+          }
+        }
+      }
+    }
+  }
+`;
diff --git a/apolloschurchapp/src/tabs/home/getPersonaFeed.js b/apolloschurchapp/src/tabs/home/getPersonaFeed.js
deleted file mode 100644
index ac2b87d..0000000
--- a/apolloschurchapp/src/tabs/home/getPersonaFeed.js
+++ /dev/null
@@ -1,19 +0,0 @@
-import gql from 'graphql-tag';
-
-import { CONTENT_ITEM_FRAGMENT } from 'apolloschurchapp/src/content-single/getContentItem';
-import { LARGE_CARD_FRAGMENT } from 'apolloschurchapp/src/ui/ContentCardConnected';
-
-export default gql`
-  query getPersonaFeed {
-    personaFeed(first: 4) {
-      edges {
-        node {
-          ...largeCardFragment
-          ...contentItemFragment
-        }
-      }
-    }
-  }
-  ${CONTENT_ITEM_FRAGMENT}
-  ${LARGE_CARD_FRAGMENT}
-`;
diff --git a/apolloschurchapp/src/theme/theme.js b/apolloschurchapp/src/theme/theme.js
index 39e124f..532be93 100644
--- a/apolloschurchapp/src/theme/theme.js
+++ b/apolloschurchapp/src/theme/theme.js
@@ -25,6 +25,9 @@
 /* Base alpha values. These are used to keep transparent values across the app consistant */
 // export const alpha = {};
 
+/* Base overlays. These are used as configuration for LinearGradients across the app */
+// export const overlays = () => ({});
+
 /* Overrides allow you to override the styles of any component styled using the `styled` HOC.
  * For example, this component:
  * const SomeComponent = styled({ margin: 10, padding: 20 }, 'SomeComponent');
diff --git a/apolloschurchapp/src/ui/ContentTableCard/index.js b/apolloschurchapp/src/ui/ContentTableCard/index.js
index 646b394..638f91c 100644
--- a/apolloschurchapp/src/ui/ContentTableCard/index.js
+++ b/apolloschurchapp/src/ui/ContentTableCard/index.js
@@ -29,8 +29,16 @@ class ContentTableCard extends PureComponent {
     header: PropTypes.element,
   };
 
+  handleOnPress = ({ action, relatedNode: { id } }) => {
+    const { onPress } = this.props;
+
+    if (action === 'READ_CONTENT') {
+      onPress({ id });
+    }
+  };
+
   render() {
-    const { onPress, isLoading, content, header: headerContent } = this.props;
+    const { isLoading, content, header: headerContent } = this.props;
 
     return (
       <Card>
@@ -41,10 +49,10 @@ class ContentTableCard extends PureComponent {
               isLoading={isLoading}
               key={item.id}
               id={item.id}
-              onPress={onPress}
-              label={item.parentChannel ? item.parentChannel.name : ''}
+              onPress={() => this.handleOnPress(item)}
+              label={item.subtitle || ''}
               title={item.title || ''}
-              imageSource={item.coverImage ? item.coverImage.sources : ''}
+              imageSource={item.image ? item.image.sources : ''}
             />
           ))}
         </Content>
diff --git a/apolloschurchapp/src/ui/Share/index.js b/apolloschurchapp/src/ui/Share/index.js
index 2f979c5..11e597f 100644
--- a/apolloschurchapp/src/ui/Share/index.js
+++ b/apolloschurchapp/src/ui/Share/index.js
@@ -34,6 +34,7 @@ Share.propTypes = {
     message: PropTypes.string,
     title: PropTypes.string,
     url: PropTypes.string,
+    id: PropTypes.string,
   }),
 };
 
diff --git a/apolloschurchapp/src/ui/ShareButton/ShareButton.tests.js b/apolloschurchapp/src/ui/ShareButton/ShareButton.tests.js
new file mode 100644
index 0000000..91d1cf1
--- /dev/null
+++ b/apolloschurchapp/src/ui/ShareButton/ShareButton.tests.js
@@ -0,0 +1,52 @@
+import React from 'react';
+import Providers from 'apolloschurchapp/src/Providers';
+import { renderWithApolloData } from 'apolloschurchapp/src/utils/testUtils';
+import getShareContent from './getShareContent';
+import ShareButton from '.';
+
+const shareMock = {
+  request: {
+    query: getShareContent,
+    variables: { itemId: '1' },
+  },
+  result: {
+    data: {
+      node: {
+        id: '1',
+        __typename: 'ContentSeriesContentItem',
+        sharing: {
+          url: 'https://apolloschurchapp.newspring.cc',
+          message: 'Test Message',
+          title: 'Test Title ',
+          __typename: 'SharableContentItem',
+        },
+      },
+    },
+  },
+};
+
+const mocks = [shareMock];
+
+describe('the ShareButton', () => {
+  it('renders a share button', async () => {
+    const tree = await renderWithApolloData(
+      <Providers mocks={mocks}>
+        <ShareButton itemId={'1'} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('renders a share button with custom url, message, and title', async () => {
+    const tree = await renderWithApolloData(
+      <Providers mocks={mocks}>
+        <ShareButton
+          itemId={'1'}
+          url={'https://apollosrock.com'}
+          message="Some great message"
+          title="Some great title"
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/ShareButton/getShareContent.js b/apolloschurchapp/src/ui/ShareButton/getShareContent.js
new file mode 100644
index 0000000..44718b3
--- /dev/null
+++ b/apolloschurchapp/src/ui/ShareButton/getShareContent.js
@@ -0,0 +1,16 @@
+import gql from 'graphql-tag';
+
+export default gql`
+  query getShareContent($itemId: ID!) {
+    node(id: $itemId) {
+      ... on ContentItem {
+        id
+        sharing {
+          url
+          message
+          title
+        }
+      }
+    }
+  }
+`;
diff --git a/apolloschurchapp/src/ui/ShareButton/index.js b/apolloschurchapp/src/ui/ShareButton/index.js
new file mode 100644
index 0000000..cc6d175
--- /dev/null
+++ b/apolloschurchapp/src/ui/ShareButton/index.js
@@ -0,0 +1,34 @@
+import React from 'react';
+
+import PropTypes from 'prop-types';
+import { Query } from 'react-apollo';
+import { get } from 'lodash';
+
+import Share from 'apolloschurchapp/src/ui/Share';
+
+import GET_SHARE_CONTENT from './getShareContent';
+
+const ShareButton = ({ itemId, title, message, url }) => (
+  <Query query={GET_SHARE_CONTENT} variables={{ itemId }}>
+    {({ data }) => {
+      const sharing = get(data, 'node.sharing', {});
+      const content = {
+        id: itemId,
+        title: title || sharing.title,
+        messsage: message || sharing.message,
+        url: url || sharing.url,
+      };
+      return <Share content={content} />;
+    }}
+  </Query>
+);
+
+ShareButton.propTypes = {
+  itemId: PropTypes.string.isRequired,
+  // These props are available to override the default sharing data for a node.
+  title: PropTypes.string,
+  message: PropTypes.string,
+  url: PropTypes.string,
+};
+
+export default ShareButton;
diff --git a/apolloschurchapp/src/user-settings/Locations/MapView.js b/apolloschurchapp/src/user-settings/Locations/MapView.js
index 06dddb5..d69b876 100644
--- a/apolloschurchapp/src/user-settings/Locations/MapView.js
+++ b/apolloschurchapp/src/user-settings/Locations/MapView.js
@@ -1,6 +1,6 @@
 import React, { Component } from 'react';
 import PropTypes from 'prop-types';
-import { View, Animated } from 'react-native';
+import { View, Animated, Dimensions } from 'react-native';
 import { SafeAreaView } from 'react-navigation';
 import RNMapView from 'react-native-maps';
 import { debounce } from 'lodash';
@@ -16,7 +16,9 @@ import {
 
 import Marker from './Marker';
 
-const { CARD_WIDTH } = CampusCard;
+/* TODO: remove magic number. `theme.sizing.baseUnit * 2.25` This width value is a brittle
+ * calculation of width minus `CampusCard` margins */
+const CARD_WIDTH = Dimensions.get('window').width - 36;
 
 const FlexedMapView = styled({ flex: 1 })(({ mapRef, ...props }) => (
   <RNMapView ref={mapRef} {...props} />
@@ -32,6 +34,11 @@ const Footer = styled({
   right: 0,
 })(View);
 
+const StyledCampusCard = styled(({ theme }) => ({
+  width: CARD_WIDTH,
+  marginHorizontal: theme.sizing.baseUnit / 4,
+}))(CampusCard);
+
 class MapView extends Component {
   static propTypes = {
     campuses: PropTypes.arrayOf(
@@ -177,7 +184,7 @@ class MapView extends Component {
               )}
             >
               {campuses.map((campus) => (
-                <CampusCard
+                <StyledCampusCard
                   key={campus.id}
                   distance={campus.distanceFromLocation}
                   title={campus.name}
diff --git a/apolloschurchapp/src/user-web-browser/Provider.js b/apolloschurchapp/src/user-web-browser/Provider.js
index e620207..bc1ce7f 100644
--- a/apolloschurchapp/src/user-web-browser/Provider.js
+++ b/apolloschurchapp/src/user-web-browser/Provider.js
@@ -1,8 +1,8 @@
 import { createContext } from 'react';
 import NavigationService from '../NavigationService';
 
-// Can can either call the OpenUserWebView function directly, or call it using the Consuemer.
-// Your choice.
+// Can can either call the OpenUserWebView function directly, or call it using
+// the Consumer. Your choice.
 export const OpenUserWebView = ({ url }) =>
   NavigationService.navigate('UserWebBrowser', { url });
 
diff --git a/apolloschurchapp/src/user-web-browser/__tests__/BrowserWithUserCookie.tests.js b/apolloschurchapp/src/user-web-browser/__tests__/BrowserWithUserCookie.tests.js
new file mode 100644
index 0000000..5c576db
--- /dev/null
+++ b/apolloschurchapp/src/user-web-browser/__tests__/BrowserWithUserCookie.tests.js
@@ -0,0 +1,52 @@
+import React from 'react';
+import { renderWithApolloData } from '../../utils/testUtils';
+import Providers from '../../Providers';
+import BrowserWithUserCookie, { WITH_USER_COOKIE } from '../index';
+import { OpenUserWebView } from '../Provider';
+import NavigationService from '../../NavigationService';
+
+const mocks = [
+  {
+    request: { query: WITH_USER_COOKIE },
+    result: {
+      data: {
+        __typename: 'AuthenticatedUser',
+        currentUser: {
+          __typename: 'Person',
+          id: 'Person:123',
+          rockToken: 'ABC',
+        },
+      },
+    },
+  },
+];
+const navigation = { navigate: jest.fn(), getParam: jest.fn() };
+
+describe('the BrowserWithUserCookie component', () => {
+  it('renders with a user', async () => {
+    const tree = await renderWithApolloData(
+      <Providers mocks={mocks}>
+        <BrowserWithUserCookie navigation={navigation} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('renders with modal false', async () => {
+    const tree = await renderWithApolloData(
+      <Providers mocks={mocks}>
+        <BrowserWithUserCookie modal={false} navigation={navigation} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
+describe('the OpenUserWebView', () => {
+  jest.mock('NavigationService');
+  NavigationService.navigate = jest.fn();
+  it('navigtes', () => {
+    OpenUserWebView({ url: 'fake.com' });
+    expect(NavigationService.navigate).toBeCalledWith('UserWebBrowser', {
+      url: 'fake.com',
+    });
+  });
+});
diff --git a/apolloschurchapp/src/user-web-browser/index.js b/apolloschurchapp/src/user-web-browser/index.js
index d830fe5..5a41635 100644
--- a/apolloschurchapp/src/user-web-browser/index.js
+++ b/apolloschurchapp/src/user-web-browser/index.js
@@ -8,8 +8,7 @@ import { WebView } from 'react-native-webview';
 import PropTypes from 'prop-types';
 import { get } from 'lodash';
 
-const Browser = ({ url, cookie = '', modal, navigation }) => {
-  console.warn(cookie);
+const Browser = ({ url, cookie, modal, navigation }) => {
   if (modal) {
     return (
       <ModalView navigation={navigation}>
@@ -26,7 +25,7 @@ Browser.propTypes = {
   modal: PropTypes.bool.isRequired,
 };
 
-const WITH_USER_COOKIE = gql`
+export const WITH_USER_COOKIE = gql`
   query currentUserCookie {
     currentUser {
       id
diff --git a/apolloschurchapp/src/utils/__tests__/utils.tests.js b/apolloschurchapp/src/utils/__tests__/utils.tests.js
new file mode 100644
index 0000000..24fe48a
--- /dev/null
+++ b/apolloschurchapp/src/utils/__tests__/utils.tests.js
@@ -0,0 +1,68 @@
+import React from 'react';
+import { Text } from 'react-native';
+import fetchMoreResolver from '../fetchMoreResolver';
+import { renderWithApolloData } from '../testUtils';
+
+describe('the fetchMoreResolver function', () => {
+  const args = {
+    collectionName: 'userFeed',
+    variables: { first: 10, after: null },
+    fetchMore: jest.fn(),
+    data: {
+      userFeed: {
+        edges: [
+          {
+            node: { id: 'foo' },
+          },
+          {
+            node: { id: 'bar' },
+          },
+        ],
+        pageInfo: { endCursor: 'abc123' },
+      },
+    },
+  };
+  test('no endCursor', () => {
+    expect(
+      fetchMoreResolver({
+        ...args,
+        data: { userFeed: { edges: [], pageInfo: {} } },
+      })()
+    ).toBeUndefined();
+  });
+  test('combines data', () => {
+    fetchMoreResolver({ ...args })();
+    const previousResult = args.data;
+    const fetchMoreResult = {
+      userFeed: {
+        edges: [{ node: { id: 'baz' } }],
+        pageInfo: { endCursor: 'def456' },
+      },
+    };
+    expect(
+      args.fetchMore.mock.calls[0][0].updateQuery(previousResult, {
+        fetchMoreResult,
+      })
+    ).toEqual({
+      userFeed: {
+        edges: [
+          {
+            node: { id: 'foo' },
+          },
+          {
+            node: { id: 'bar' },
+          },
+          {
+            node: { id: 'baz' },
+          },
+        ],
+        pageInfo: { endCursor: 'def456' },
+      },
+    });
+  });
+});
+
+test('renderWithApolloData renders the component', async () => {
+  const tree = await renderWithApolloData(<Text>hello, world!</Text>);
+  expect(tree).toMatchSnapshot();
+});
diff --git a/apolloschurchapp/src/utils/content/__tests__/share.tests.js b/apolloschurchapp/src/utils/content/__tests__/share.tests.js
new file mode 100644
index 0000000..2e4b76c
--- /dev/null
+++ b/apolloschurchapp/src/utils/content/__tests__/share.tests.js
@@ -0,0 +1,29 @@
+import { Platform, Share } from 'react-native';
+import share from '../share';
+
+jest.mock('Platform');
+jest.mock('Share');
+
+describe('the share function', () => {
+  beforeAll(() => {
+    Share.share = jest.fn();
+  });
+  test('default arguments', () => {
+    Platform.OS = 'ios';
+    share({ title: 'title', url: 'http://url.com' });
+    expect(Share.share).toBeCalledWith({
+      title: 'title',
+      message: 'title',
+      url: 'http://url.com',
+    });
+  });
+  test('android arguments', () => {
+    Platform.OS = 'android';
+    share({ title: 'title', url: 'http://url.com' });
+    expect(Share.share).toBeCalledWith({
+      title: 'title',
+      message: 'title\nhttp://url.com',
+      url: 'http://url.com',
+    });
+  });
+});
diff --git a/apolloschurchapp/src/utils/fetchMoreResolver.js b/apolloschurchapp/src/utils/fetchMoreResolver.js
index d812283..b93cb2f 100644
--- a/apolloschurchapp/src/utils/fetchMoreResolver.js
+++ b/apolloschurchapp/src/utils/fetchMoreResolver.js
@@ -6,7 +6,7 @@ export default function fetchMoreResolver({
   variables,
   fetchMore,
   data,
-} = {}) {
+}) {
   return () => {
     const pageInfoPath = `${collectionName}.pageInfo`;
     const edgePath = `${collectionName}.edges`;
