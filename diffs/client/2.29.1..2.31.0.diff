diff --git a/apolloschurchapp/.env.shared.enc b/apolloschurchapp/.env.shared.enc
index 96c36f9c525a5de3589b79678a0f77b69d42e7fd..1c558f8a5e333f32e3d002464575e6c13feae8c0 100644
GIT binary patch
literal 944
zcmV;h15f-@VQh3|WM5y@Nu{FjT(Haz?}PfGI8oO00x|Y0w;NWB+F=8!3nqhTrF;{Q
zo6R37Y+Y(>>>hsVkXvuKBtaI7sb~PpHN~q58f6UiS&oy4FmgC?0CkRJv8<5Z7guB^
zD#ytx<&&UE2j#Xy?t3=@AsPv2w;t<am?eAiROL+qjyhZxiuqas=nY9cJw+$K-?_tv
z*F0T>s;G?dIv{!Zg7K-JebW5Cxx#xw%-d3~YYE1H3wU&hilOM*3Yf_wdyM9X8RXR-
z*=fA@NvUF+#?W92hzfWI$>3|W*H$Wvw)WI;0gD5M{LMpr{vdE<yQLMDiH%i^+55VU
z%s%P6WI)}v5>w5?KE(?JpnB#M1=4C%cUJ|eM;Abi4u#tj-UnVuU~>G@X$EH@4sb{C
zC!WnO<5o(*a52Krp4z?+^gE-A`DPEJivW}xafsBUikX#eBPCDK>Cw}>PW5A~MGz9>
zjpmb$4IINPj~nC`#*7QBek$pWcsUu*nMZ8}Vmv>Wlw)>6nki`XB@J%62JRwB$&ZWI
z((WG4l+IwRR}gyO+d7tl6{_v!iwDs9@MzLT^*&3Z-+NuF(BOw`F2z8H0R=-+Jpt?W
z6SaVBfD!nThA)G_aWz%V^Ebr}I<UdSN7Ihm>JXLmNU!roQ)hr_LF0CEV5R$ApOGR4
zR4FVA6nVcwttJ5{BP5z;FO?kG;ERhejStZCBm}9MnKl^d4X*Y}V=U$rHpZF)3m%j&
z-MGV+iS)Pic9u)_3$EiqnWG0`U%YS@U?HSm%8!PVpzBp!@{+Z*oMa*dfl*XDoS(ql
zX2VirW6|hXXk<fkZ1@`-;Rh!I>aONxG7oZ?u|#{q({>2N#=AE1zZZ}iTrp8Ij+0wT
z9$nq!zHpc-2s-^5ws++v3O*q{5Jo9`9%^nSw_co-3*nU03(wBI=3YI*VrM^|=Q-c$
z%M4DuXDctvyz-rkjH*7nS}hQ1ixUjcNU<>B*(UAF6kQ!ZNCAc#%Up9jC$P1nk+2;s
zbz$W%p(uteNtY9tQ=U@X!WZ<U-hm33EV{#RLM!m;0R&n}<Sg(@10&~2<Vy+=$UJ?&
zMl&)^hVhU>Lb4>Zt9%UKHs?J$Ptro1u!<~V`7Z!Y4lBCI$UkfJJNkD%+ndoW;8CcV
zn(*@lZJLisXq&c+jRd-xg#s+uO@#S92kQJ3TecEF$L%)%fzD~xB;F|W#S0kCG!7Ja
Sqfpp2h2a>qD>3$8W&9KzW5kmH

literal 880
zcmV-$1CRVuVQh3|WM5xU6sf6H-B9vL#T~x$tZk%IB35iLI^>LmVYRT6aqyVavD`V{
zPc_DrzRXODm79dnBJZ9vWM|67Nl3dGHyeJu)L9vIJP*d)i6^kNPUg7!s9|g1w{}3t
zl4~FZBC5QFB;m`2lD-Cgr;8u}8elsu261IuCk3*rqYX5%;4KuS0Pxla=8kWp>ykQ(
zK;{|-wmYav62sakkw;CFLz*R(Yd0<koOK<&m-=27fTjwVFOZ6WvfOkmcGBJ2T&47H
z78yxd*Qir28c<YS9n2S+zYnn>q67DSUQB3Kd7S|GcR~5TgqnmGj8*jA<SfkAGW79H
zc(5h)^H`|FE@2IVXfg<bO6$)6eU+Tm#sYP^c?O7j6|*L=hV-s10jW1YHQ2V02sS^G
z?(URc(cl<leVyOLDGF+f8}AxM$DqyoQ(_hwcx>WDlce@eTH1L!OZj$rFcic1ViMSq
zcQU_&5DD&4jWCxv%>TIY$e1FqUV^<e0y7Es{&_QNBfhw<5w<-A^wGuNXk~<s-Tx4N
zBs>YD3W6_;d!rTqNt^`t0n>uHZ*yDt@luocWD{mVbF@aNMa$ygH!(0sG}U5d+1uLq
zwle%rnO8~n2e~+3k6VR_fVIP~(_X34v!sp$t~aQLrzFT!PfU6AW*P#EEbggriaBob
zV!#1{_=BOP=P*~3^yn(N95!CZPOPUuEB0N(6fGGPJ_X}HTEMg?(rdsPtpMK)rAz;z
zi$bZ#IEG=Sn7_cJiVT>9Ad*B|!i0}^Mh$77xIec(NzF}w#f~yYj&W9Z22t~SGW&s@
zE|zi-P+K5h3#Xdc#Jk9@yhU1!qQfzpEuB3q4p&vEppk}@<nVW>ODgbHK$>DaUXHwN
zw8lf%Z087IlNn8|l3^p#%-ZQns>XLIn9EV=-_65mQSR0Ko`Wtl;zvl!xI|W#$Lw4j
zxQYgWUjW2776DNa3$+bRM%U(>0_^y{1<^A@_31D{8D2XXxf*dBLkMEe7+Ky2z5jjA
zwm)kCB}ucXFbDd=iJ#zz9Pi2`(a0l2PX-^luOU*VaPbE;jvirn#wSApQZ_frQb1&N
zm`Qka;NZSH7&G^U_){w_61b_FA2!Ojp0^*p4C(FSFjWG|L9h}94S0%oU~5jlL|1sB
GuRtx4c&6Y0

diff --git a/apolloschurchapp/.gitignore b/apolloschurchapp/.gitignore
index caf99aad..e00b925d 100644
--- a/apolloschurchapp/.gitignore
+++ b/apolloschurchapp/.gitignore
@@ -150,6 +150,7 @@ fastlane/report.xml
 *.app.dSYM.zip
 
 # iOS keys
+push.pem
 *.p8
 
 # Google Play authentication key
diff --git a/apolloschurchapp/Gemfile b/apolloschurchapp/Gemfile
index 0eeccaa5..77041843 100644
--- a/apolloschurchapp/Gemfile
+++ b/apolloschurchapp/Gemfile
@@ -1,4 +1,3 @@
 source 'https://rubygems.org'
 gem 'cocoapods', '1.10.1'
 gem 'fastlane', '2.179.0'
-gem 'xcodeproj'
diff --git a/apolloschurchapp/Gemfile.lock b/apolloschurchapp/Gemfile.lock
index 92818e11..6ff36a82 100644
--- a/apolloschurchapp/Gemfile.lock
+++ b/apolloschurchapp/Gemfile.lock
@@ -266,7 +266,6 @@ PLATFORMS
 DEPENDENCIES
   cocoapods (= 1.10.1)
   fastlane (= 2.179.0)
-  xcodeproj
 
 BUNDLED WITH
-   2.2.4
+   2.2.21
diff --git a/apolloschurchapp/android/app/apollos.keystore.enc b/apolloschurchapp/android/app/apollos.keystore.enc
index 84d919dad1f07b2792148548e1ed909adfe1e36e..0ebc8fb9aa5745a5b02e479a62797685ea4b1272 100644
GIT binary patch
literal 2272
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

literal 2272
zcmV<62p{)TVQh3|WM5xCei4@W)6~H-#ic2p70lv_y+J&$6(y(m<1`jXKWdpG+HY-L
z7mwUFhnK8M-H%~N?P`f7=!YeQB?-R`boYF_{g&Ut_a(|ce*Rs5CGZl=MA>A2%|EN}
zwEBthPrcv$);cH-q$AkyRxB&9CdP7hNiRO&mSX{}A@yASf)qYu=<E)dte0DOkCYtv
zl-(<&n?3$<=<)2gc-de2N}ABq@zNmqu#lV~8q5ePF68qnB_sOW43%-^wh50YP|ih;
zU{nKpI+ixt%lt(Ieh#lHyL!5~TGn-iV$9Su(d}5q|F~X@a7DMB{_hZc^>_(W_`rbU
z_~GvRuP)%&_kmC>-ioYS+S`|vu`}pgwfpfxu<RYVH?n9H1u0_D69o*w0x4HOS-E)M
zEoXkRst3@l1OLp^Q3&*W+s?Di12S-151T7zohR8Lgt2DkO?D_m6QkZ5aOxjg>3{Jz
zpjDaM25AT*^3+S`5`cP7n{oD`m7fPiox3h+7h=4s_sCqXz1^ILj?)7#NtzPK{{0Gc
zJ5WhnNQ00^S|n#oZ^X1f`1F<MKo_+@F!i!+jWegBIeZX}Rb(^=o^Hf6Z$}`}M<?St
z)TqkN6Y8U#LlC-Zcq0)Sdm>~LDSbH@2ELtdwBb~(q{y)OZMi+~gp=0q%_|G>17u2z
zjmtdEuK;#uGRy>UTm`*Io|)Bh5pDUdH=}ux1`|XevavasuxW!6N^<x0p%j1th=hyT
z3=Ns;z_x=zF)ZRWR2i9TM3Q%Jt)QGoC{%4_JQP~b2GTV~3)H+{l9kDJ_w<sf-TLV^
z&5B@j>NNy!PhA$_BLS5?v4@CNAq6jKc35-{z-C4X0m!W!B>x}gst%ON8|eOrT=m9`
zyvr(2q@pN<4OXCd`_X|=8>-}%%j9y7a*2N6a`+iDyu_b2{VeGtwgO(>u#pwi6qXJP
z({gJw{~TthP;7X<=5y)gHHQ0to{_(g-y2*puGFxAR8ib%JKGcp<9cAvb_xC)rN@tJ
z!<UYXZN!!-y@{N}uu17;FK^!t#pi_%@YVdX<{3Pj=P7bBqo5zsOYDe$qwK)%eMVl~
z3zccrMtl=R^>IXv<%ri#`zrb$s?XdB70RC<^%ikJcs2v!v8f(1gQtDJZcgJ1deZLs
zFtaL+-QVch&eQiEukE@Ag5$6Ec{WnfjX=07MY%*Kc-i#w!|bZj0{PMgoR!k*hy^!$
z&WUzLGGCm1xQ^R8n-^q7Sr)=#EyncktH!v{L$(&-b4Wsd{C%@DJ4~M@l_knZRU5f3
zXRPL+*l`gyuImgH#ie8yfYKDLx)TSYLp(OA%GzRm-?#tTkQl1>l98-(sAKNPp3S}y
zk<700)NN|V|INZOqNxGHH7cC>B5A%<HW`ydrJgP7P&P9&J}wg9mBUUeF>2XB4`8cK
z4=fym2SnE(vbA5E0wtY^jqE9l{G89%a@#U`43rxA%rbyC+J>k1SugG!6iII2BZk2*
zT`Tf7c8@Z&PK#3m)liQ6V^XN6!h*WCh@CCnwH)NOdM|>@7%_rBVFuhj?+~@&2gn}+
z(BL*7?n5MLX-zgGQ80b5UyBJwP%aG=VeXKN6&gt(i*z!vHw0lELS?9FEXlTD_m1uz
zyrXFQKm(Xy`UeZy7Sl3MGX2=<;u1>P!0U|paDwwl{W|wnY$EL~j!$*Htq4006qN^M
zg<FYzl^0uc1+|_rKfJpE(Mh}*O(eT)r}61f{mr2U4hEw|Iq0;<Y80J)y!r_Z)~~Sl
zy`wZq9n>d86|x1A0TeM5gd?UTf@-zs@A;TAt8|z37kTC?>3+k=Ne`9k8xn`LBT`3S
z4()yeBT?RP7dbez@0j_uPoi3h*R_+Yr2haJbD<N>_}KILYQLrnYO#NCV*XFkXXdUM
zGxlzJGD5jCy_dj_7qr(pWQ=Bi7j+alv|qcp#w#HInqvKf?0Qhmoks|S_L~h^+yyqJ
z%FvV@qP!at;J@mv-8A)c+ZGSkh`s=*i{rRs#H1}btxkr-7n}-(aIE6O)8=Ty;K{Le
zxNYM<;f%3C)0p?FJuA*Inef02*1x_(e=IUqj5@%k#r9d4^FeI@2Df+$tvy>AP|pFN
z7Ch!sV;KaAJ~eY&yhWbr`C}{w!cX(;&32xJTo@L?-dMa6btJP8H@eS34NxDvqY)uD
zPyPEjq}rKzu61h?BkYZG;|UI9ia5nzk)fT@s=$K~uOj+17P^osa^wj{#)_n`MwFg+
z%hens3XBrs)?6Q3%-{heI>b%P+-XJzbqK!&4H#g-s8ulnC9oZaAdIiF`1~43Ev0&T
zEEjOcM3HhaY2cC0Mh{7HBu%oE5gGD~hk?AsdN6T|ht9-4Mq>_`ItF04@>dsSVqh4D
zy9NbWk(NxYjzjiNd+ReK9ya~uyB5%|^$eKk+Pp<52=04V|65dsV>)gYR|qZhWG}bs
zxPypoc)x)FIAgtByA;nV_I}009?<C$)^j~I{YvZ!U<7$}kGBppjcn8lIT6*eK#4}i
zdqr&)JJ!$PA0@ixe$5HpORW7M4s=42r{tt$?pAUE`%7H}fkuZ<FL?$9Cuj4T?3X{r
z=L>-M!!_6MMgWhs&dehODX}1r^s<=8cFOW`p|ILCCK1bG25YDJf`WG5(=8UZo&_aQ
z=t60<IUaO1#p~|_KNK7uIOeY45On{HZx8}s@hE}$YtQ=N0<fl5LSF8mV5i`+WU1D>
z(#`eV54~6k=sQ`A5YY!bpG;X?aPw;kr_<Ij5Gj(8;3<~i5<={Yk0Q?95xu_!{V*YT
z<3~M~rdt(a6+?qxo8p9IOnh%#U@j}_Des6&LVOQ?Yhv?F)d+(1tx9phDwGYYUeo{H
zlSDgJ>=Hp!`M<xUHz`NY49;-d^3~UI)p|}wwbR;3hgJa$z_zHXIh&=-VYMV4;pRn$
uPGkbJREOc&_E^s^b<g`H^+Gq;J@Ncz{+=`3y!|tFt>{3CKiveF!lF4yo@RRh

diff --git a/apolloschurchapp/android/key.json.enc b/apolloschurchapp/android/key.json.enc
index 874dbdeb21a17deaca4461e1bf7a1a534ac33cda..5327a51d137bf1c6bb7b2ed60a6f12dfef609500 100644
GIT binary patch
literal 2384
zcmV-W39t53VQh3|WM5x6p83ML9{s7~#ubEU6CgcF=^8j6o<_L)^XMY5svWlA`VH;E
z!<1+>QCKt7FKtfR>kRtJn5{?;H>M<qDzDk$UpVQVBgE(0I9Z?0S@B!Yb6P0<<e#x5
zfb%Wa(=5&t(zdBwYYP&SV0a@_u}2f{*gNCDcrcbSMP0q}K{abY<c@CpGs(LP;%9)2
zP6)6dJ2LGO9+f;Hd44z!B10H_8`4-8Bwnd=Y#bsl#=)y0qrGG0l<ZlW95P<BA9Ijp
zu21m+zOZGyi5%`i9%xgB$#PB-90k`w=R737hV_m6vaKHf8jde8p-KV_Am-3Pu_uzx
zP(<;3{em7fmP)D(9-a={krN-#z%Op+$QiSz22xpAUJS(v|59=SQzNu5;s`r(qC~A4
z^==fD)4%fNVQloHTD?^->J=qulxLbDW_Kj<DTrK%Hs}k)JF!&)!vl*l76WW)*Y6n7
z$5I~l2zrLKsPvrS-^BDmsA0@SEh2o)pT_NZ6*Z~kj=02>d9Kr`vhrSnz0a!sy-N;<
z{Rzt{Fj<u@HJqFO!TtPYk<gTpgyXk+d1d)K%SQ<6^yZb0v;l@xSkLx9_3<pU8-4EO
zeJ14VqT8b;zBO=9)*UPSe2nv7sR5dS3umvSLDj(#&*8oJNZIjxA$B$P<jqQNS#{e+
z@8o*}K{(W0p;z1phRcA%^kT{gYW0Gh058v59^17+-YtB>K5RTs<?xRe&P^KFkv=VN
z^50~&msLcj%7jb;AtkQDo$>1~*}Ws@;tMw|Z77fYqW`(a9kqt@mK%vnPPn<ma8!Sa
zbgSsr5)PEofq1M7c5*L_-0HQgRJkV2)u)6|DsN6ux~*IKa1cNR`2TO+11B1_*<D70
z?tK!#pYspsS}G}Nb^ylwljol=+}i)5-!NRklIo5L1>*b(RelFzM7Ky2fIjU$aCfZR
zd8F&bG;CzSa~6q+2Z_RN+ic}v1rX?AMKI%yAH5j>8eYjW*TF~Br1GX^u9XSdRr#wg
zmcEYb>yv!^gK!E7z(>+A>p`gjakdD9>0up-?KIG=jV@J*mq~72*2NEErNaI?!A~(Y
zY2aJ+lrz(vNotR?Lj`PfS-C`CI=pP8$v+r2^ja~a<gBdnVV9wdClCjt^AsyR!Z$}3
z3gW@51<K`CfS4Z`Ir-j_NBl0-^tK<mPeMP}cGn-Kj;b?=X)weFmi$`kcQgV|hyVB}
zSF(#-^PdlGE54;N2IYcy9y6LEudwZ*Qb`~NXvarheTc&1;beLuV!Qa0i$JMmA{qNf
zU9VKznVJFH@}_O7bLAsbLd{RUu8v#FX<2xjGcguj17k`*k^7rnRDxu4G8S)MDltf+
z`8_YCyR#?$kMckicD03C(bjShYY(zQ5Tf;STq4b<wTwu8rynnw4+&3(S4@U~p2uBT
zuW6E|UveDi=Y9Khri|pn_?kSObRRzmj_1@VEalJ|?YYq&tMEG(eq*8wFzdGpf^T4|
zAN;W_`9cey(ZaRJb8WCTG+}q{mguxnvHc+knk7sshbyhIlbR(IMbS@AtNDWaNMOHw
zNtRnBvsialJ>-2-t=?<lj6`a}N$g&YSgB{Q3(YrIS2Ut&KT90y{ER*hOW%+Hg|rd2
zt+(ShM(>P<8FY4LBNK+0><=>68rcnwnf{yPl2ze=3~D@{i7|ppTEJeR1amwG>adUf
zV22YikMY!z=9@*zhxDO}mUg;%2Ct%6GQ8OWI#!Q&obmj!#mHg*x@W7;!ZIW6ZW+3k
zsYAx{?hC*2)(OV9XUW7;*ZWJ(P#}G@XF8CGBxk9v5Ydf|wk#X*vBAH_%lVs=<}!$z
z-d2%(_;_d7lK+b!A;BzvD@W2@A5ljh{_Y^h^n3Qc%d3+LAAB%*F+F}t<;@>hmXSl?
zELqZk#3_c$TW^UfV@w<<2+_GvX8II5(=KsZSMeRz=u<x!<Z{tQC~#2OwM~M1{7!u~
zJ61lB8eVevNPFV=fpc$7|K@DtnAd&P_@l<GCl{cR$%%NJ(%DNwt;tn{Y32SR9Xv*g
z%cPJAbexH<X%|29<e^e92mRKsk%<3O6bI~K%f}%NxYPXS0w!huPP*#U<z`{+zd0%0
zUgmCxrKe}2I*!B6mGiDEDL-X+<5T|QhjNs?s1IkfV^Ldu&NX__3%8i*REOeo6x96)
zC>HZ|qw2}^xsuft8Hh5fNM#ObwK{Kc{EV9}jx7(4v48oQvm;bz>t!A<@Tgq<BH7<G
zW;yPjI=CTOWO=Y^PP<N#=ln4%xKlunPKWa8Zn83*@AjQUh*R6wkxc$805bb`Wn)&5
zh*Zy*t1+L1MiZ{&A}G20R@#qt{m~dn2QT<fJ;)<+jRnt9+r>w-I9iV26xY&lFSPIL
zE#(GOxy+AJcpkwCf?M=%jhIR|ss5z!ghe7=k<O`>44i!c;&?{6QjuXwmcE8U(2u;C
zqnj1HN^<Rq$Grl4Dbd<{tiKs>;Sz(<D_h$uss4R3Vn$dT>qvhU@?}eK(lIF;-BnTk
zcEaXiPl&qWKM=|`jO9py%uO$Ib%*OVsEwQ5rPkrE?gihAfW(F^)q__DQffB}m5s7B
z9@|(*tiGUjf^`8b15$glchMeAw2Y_gF@TzS!H}*nZzjY*AkTnPg94wwzzNcI`0lQ{
zTvLMuF255g(19xdWa-A}wH=jhH@f21GGohyxkg9s;`dq!9#Yk|;gQAl>gif?aR+CJ
zbas2-9z0aOp6{=NZP9cs*t*}FT<b<<4%izsF8<Mf7O`;2gMhTj;7UxJP51bSetYgb
z&45ZZF;8ua`$xE3XJjf49!D>4gL7dcsg1t#OfZEeN{DHkccjszt{d<ZAE3n)Fog(=
z2_9gH%@&J@FFK?fXSPhcO${TE=D!xiZsH*XeuYwE+YANE!gSo%r;xTvZ=ed!4hsj9
zI{T3{Huu;C!NSFQQ&Y+~RG^}y0w@gmVqo$#R$Xez;8<44+NHxBp^KeoT;ONYnqg?*
z{e^2>n^Q$l?fmh~l%>yZ6Y}x{8oI|y>c)Z&Vi9;l+97#Yd*f;!t-CvA9bhdZy}6Ya
z66R!+--8`u38_S-N(9?E4dCi9!qNc55k)GxoCM%EfcL3mPCsQ3=YNlIZ^uw#=;Uul
CLaycj

literal 2384
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
CZ<VzG

diff --git a/apolloschurchapp/apollos.json b/apolloschurchapp/apollos.json
index c5bf3e61..866ceea2 100644
--- a/apolloschurchapp/apollos.json
+++ b/apolloschurchapp/apollos.json
@@ -1,4 +1,4 @@
 {
-    "version": "2.29.1",
+    "version": "2.31.0",
     "environment": "client"
 }
diff --git a/apolloschurchapp/fastlane/Fastfile b/apolloschurchapp/fastlane/Fastfile
index 2e5ba5f1..d1a92b9f 100644
--- a/apolloschurchapp/fastlane/Fastfile
+++ b/apolloschurchapp/fastlane/Fastfile
@@ -1,4 +1,3 @@
-require 'xcodeproj'
 # This file contains the fastlane.tools configuration
 # You can find the documentation at https://docs.fastlane.tools
 #
@@ -14,13 +13,6 @@ require 'xcodeproj'
 # Uncomment the line if you want fastlane to automatically update itself
 #update_fastlane
 
-def product_bundle_id(path:)
-  project = Xcodeproj::Project.open(path)
-  scheme = project.native_targets.first
-  build_configuration = scheme.build_configurations.first
-  build_configuration.build_settings['PRODUCT_BUNDLE_IDENTIFIER']
-end
-
 def bump_version_code()
     s = File.read("../android/app/build.gradle")
     versionCode = number_of_commits
@@ -39,17 +31,23 @@ end
 
 platform :ios do
 
+  desc "Generate new provisioning profiles and certificates for app and push notifications"
+  lane :certs do
+    app_store_connect_api_key(key_filepath: "ios/apollos.p8")
+    match(type: 'development')
+    match(type: 'appstore')
+    get_push_certificate(pem_name: 'push.pem')
+  end
+
   desc "Push a new internal build to TestFlight"
   lane :deploy do
 
     # get project name
     proj = Dir.glob("../ios/*.xcworkspace")[0][7..-13]
 
-    identifier = product_bundle_id(path: "../ios/" << proj << ".xcodeproj")
-
     app_store_connect_api_key(key_filepath: "ios/apollos.p8", in_house: false)
     setup_ci
-    match(type: 'appstore', app_identifier: [identifier, "#{identifier}.OneSignalNotificationServiceExtension"], readonly: true)
+    match(type: 'appstore', readonly: true)
     increment_build_number(build_number: number_of_commits, xcodeproj: "ios/" << proj << ".xcodeproj")
     build_app(workspace: "ios/" << proj << ".xcworkspace", scheme: proj)
     changelog_from_git_commits
diff --git a/apolloschurchapp/ios/Podfile.lock b/apolloschurchapp/ios/Podfile.lock
index 7abd459e..1d924190 100644
--- a/apolloschurchapp/ios/Podfile.lock
+++ b/apolloschurchapp/ios/Podfile.lock
@@ -242,7 +242,7 @@ PODS:
     - React-cxxreact (= 0.63.4)
     - React-jsi (= 0.63.4)
   - React-jsinspector (0.63.4)
-  - react-native-apollos-player (2.29.1):
+  - react-native-apollos-player (2.31.0):
     - React
   - react-native-config (0.11.7):
     - React
@@ -640,7 +640,7 @@ SPEC CHECKSUMS:
   React-jsi: a0418934cf48f25b485631deb27c64dc40fb4c31
   React-jsiexecutor: 93bd528844ad21dc07aab1c67cb10abae6df6949
   React-jsinspector: 58aef7155bc9a9683f5b60b35eccea8722a4f53a
-  react-native-apollos-player: 35e3ef51f9f453e3e84c80001e4625f2de006593
+  react-native-apollos-player: 7f9841a8d8394316e67758bc25603550c95128e0
   react-native-config: 55548054279d92e0e4566ea15a8b9b81028ec342
   react-native-geolocation: c956aeb136625c23e0dce0467664af2c437888c9
   react-native-geolocation-service: f33626f1ae12381ca2ae60f98b2f5edd676bf95a
diff --git a/apolloschurchapp/ios/apollos.p8.enc b/apolloschurchapp/ios/apollos.p8.enc
index 5947bea7fec93d5d37b440d73672edab9c52142f..7ebb1100bc75a0216f69f2bc8a19ef12c1f55c3d 100644
GIT binary patch
literal 288
zcmV+*0pI>pVQh3|WM5yIYg-K8Y<EUv@#)Vh3o8;i=VtqH>8B3XS~?P`hGV&2dQ({5
z`md$;@`(>!7kIi)c|sh;kwNM@8WSf_$?wgqpV}Z<eH!{C7VYUo2SMGC-4qcjlF{hi
zHUHSQ0e-z6d>1k=Q{N0kloT^>R^M<5K9UyiIE@mz08Z`Fk+NT-Nh_5!7Y9#ww@y`z
zq%7A!E+_%0{>+lL!@?TXqQNsUDFF&Jgj$l-(4VC~h(7}0F!|gPRfkpL+Ctv(-DVNV
zM4R^)Q4yVObC&)l@*$#t%pajwiG}bD1D3DsjQN)FXg2NVtOdJ&FsA)c5fK|?UQ?f*
mW5DJ^!yMxk!9mSa9Y32xJOO&-Aw}~jQ)bYV9ve|_Eh2DC(T0%#

literal 288
zcmV+*0pI>pVQh3|WM5wyX%jgx@mTLxE<@PQRiL_b=E~B@pxV>a5AXLtucBa_d<??^
z!!?vOBqK9lmA}$c6bJxfO|&)}SQ53b!NI$dhNd0V&wfV*gV(O0xlG&-wSqynWywL>
z43&`zI5BhZ1M@76V)E<(TesS)g<c413<s|)kT5T?SnO&2+4O(nR&1X|OcH?nbVDk&
z)nUt3SKY`lqV7vnNLpV(+c^CICP9J4q1zRzk?H@s>*T0*ZxA>Y?s@x5?r6n%?+B@g
zFeOe)%pjV@Rbh8+X^CWC@#RK)fr-3SP?0K8z@<N%6;CxTe>_r$YT*K(Plo*V{OM4P
mbUX=AX)QI_vi{0DiUrTzVViYl;j$%ACsIyVnzZOrX+vd3L5$h}

diff --git a/apolloschurchapp/package.json b/apolloschurchapp/package.json
index ec028407..7c595039 100644
--- a/apolloschurchapp/package.json
+++ b/apolloschurchapp/package.json
@@ -16,6 +16,8 @@
     "generate-stories": "rnstl --searchDir ./src --pattern **/*.stories.js",
     "lint": "eslint ./src --ext .js",
     "postinstall": "jetify && yarn pods",
+    "bump": "yarn version --patch",
+    "postversion": "react-native-version --amend --never-increment-build && git push --follow-tags",
     "pods": "(bundle install && cd ios && bundle exec pod install --repo-update)",
     "start": "yarn start:dev",
     "start:dev": "yarn generate-stories && node ./scripts/get-introspection-data.js && react-native start",
@@ -41,25 +43,25 @@
     ]
   },
   "dependencies": {
-    "@apollo/client": "3.3.0-rc.2",
+    "@apollo/client": "3.3.20",
     "@apollo/react-hooks": "^3.1.3",
-    "@apollosproject/config": "^2.29.1",
+    "@apollosproject/config": "^2.31.0",
     "@apollosproject/react-native-airplay-btn": "^0.2.0",
-    "@apollosproject/ui-analytics": "^2.29.1",
-    "@apollosproject/ui-auth": "^2.29.1",
-    "@apollosproject/ui-connected": "^2.29.1",
-    "@apollosproject/ui-fragments": "^2.29.1",
-    "@apollosproject/ui-htmlview": "^2.29.1",
-    "@apollosproject/ui-kit": "^2.29.1",
-    "@apollosproject/ui-mapview": "^2.29.1",
-    "@apollosproject/ui-media-player": "^2.29.1",
-    "@apollosproject/ui-notifications": "^2.29.1",
-    "@apollosproject/ui-onboarding": "^2.29.1",
-    "@apollosproject/ui-passes": "^2.29.1",
-    "@apollosproject/ui-prayer": "^2.29.1",
-    "@apollosproject/ui-scripture": "^2.29.1",
-    "@apollosproject/ui-storybook": "^2.29.1",
-    "@apollosproject/ui-test-utils": "^2.29.1",
+    "@apollosproject/ui-analytics": "^2.31.0",
+    "@apollosproject/ui-auth": "^2.31.0",
+    "@apollosproject/ui-connected": "^2.31.0",
+    "@apollosproject/ui-fragments": "^2.31.0",
+    "@apollosproject/ui-htmlview": "^2.31.0",
+    "@apollosproject/ui-kit": "^2.31.0",
+    "@apollosproject/ui-mapview": "^2.31.0",
+    "@apollosproject/ui-media-player": "^2.31.0",
+    "@apollosproject/ui-notifications": "^2.31.0",
+    "@apollosproject/ui-onboarding": "^2.31.0",
+    "@apollosproject/ui-passes": "^2.31.0",
+    "@apollosproject/ui-prayer": "^2.31.0",
+    "@apollosproject/ui-scripture": "^2.31.0",
+    "@apollosproject/ui-storybook": "^2.31.0",
+    "@apollosproject/ui-test-utils": "^2.31.0",
     "@gorhom/bottom-sheet": "3.4.1",
     "@metarouter/analytics-react-native": "^1.1.5",
     "@react-native-community/async-storage": "^1.5.1",
@@ -87,6 +89,7 @@
     "memoize-one": "4.0.0",
     "moment": "2.22.2",
     "node-fetch": "2.6.1",
+    "querystring": "^0.2.1",
     "react": "16.13.1",
     "react-native": "0.63.4",
     "react-native-config": "^0.11.7",
@@ -94,7 +97,7 @@
     "react-native-geolocation-service": "^5.1.1",
     "react-native-gesture-handler": "^1.10.3",
     "react-native-image-picker": "^3.1.4",
-    "react-native-inappbrowser-reborn": "^3.0.0",
+    "react-native-inappbrowser-reborn": "3.5.1",
     "react-native-linear-gradient": "^2.5.4",
     "react-native-maps": "^0.27.1",
     "react-native-music-control": "^1.3.0",
@@ -116,7 +119,7 @@
     "yup": "0.26.6"
   },
   "devDependencies": {
-    "@apollosproject/eslint-config": "^2.29.1",
+    "@apollosproject/eslint-config": "^2.31.0",
     "@babel/core": "^7.8.4",
     "@babel/runtime": "^7.8.4",
     "@bam.tech/react-native-make": "^3.0.3",
@@ -149,12 +152,8 @@
     "prop-types": "15.6.1",
     "react-dom": "16.6.3",
     "react-native-storybook-loader": "1.8.0",
+    "react-native-version": "^4.0.0",
     "react-test-renderer": "16.13.1",
     "waait": "1.0.2"
-  },
-  "rnpm": {
-    "assets": [
-      "assets/fonts"
-    ]
   }
 }
diff --git a/apolloschurchapp/react-native.config.js b/apolloschurchapp/react-native.config.js
new file mode 100644
index 00000000..2cfead94
--- /dev/null
+++ b/apolloschurchapp/react-native.config.js
@@ -0,0 +1,8 @@
+module.exports = {
+  project: {
+    ios: {},
+    android: {},
+  },
+  assets: ['./assets/fonts/'],
+};
+
diff --git a/apolloschurchapp/src/Providers.js b/apolloschurchapp/src/Providers.js
index bd897e33..a4e1b9d5 100644
--- a/apolloschurchapp/src/Providers.js
+++ b/apolloschurchapp/src/Providers.js
@@ -1,3 +1,4 @@
+import querystring from 'querystring';
 import React from 'react';
 import PropTypes from 'prop-types';
 import ApollosConfig from '@apollosproject/config';
@@ -24,11 +25,15 @@ const AppProviders = (props) => (
         const [route, location] = path.split('/');
         if (route === 'content')
           NavigationService.navigate('ContentSingle', { itemId: location });
-        if (route === 'nav')
+        if (route === 'nav') {
+          const [component, params] = location.split('?');
+          const args = querystring.parse(params);
           NavigationService.navigate(
             // turns "home" into "Home"
-            location[0].toUpperCase() + location.substring(1)
+            component[0].toUpperCase() + component.substring(1),
+            args
           );
+        }
       }}
       actionMap={{
         // accept a follow request when someone taps "accept" in a follow request push notification
diff --git a/apolloschurchapp/src/client/index.js b/apolloschurchapp/src/client/index.js
index 71333478..fda739c7 100644
--- a/apolloschurchapp/src/client/index.js
+++ b/apolloschurchapp/src/client/index.js
@@ -16,12 +16,12 @@ const goToAuth = () => NavigationService.resetToAuth();
 const wipeData = () =>
   cache.writeQuery({ query: GET_ALL_DATA, data: defaults });
 
-let clearStore;
 let storeIsResetting = false;
 const onAuthError = async () => {
   if (!storeIsResetting) {
     storeIsResetting = true;
-    await clearStore();
+    await client.stop();
+    await client.clearStore();
   }
   storeIsResetting = false;
   goToAuth();
@@ -57,10 +57,6 @@ export const client = new ApolloClient({
   },
 });
 
-// Hack to give auth link access to method on client;
-// eslint-disable-next-line prefer-destructuring
-clearStore = client.clearStore;
-
 wipeData();
 // Ensure that media player still works after logout.
 client.onClearStore(() => wipeData());
diff --git a/apolloschurchapp/src/event/Event.js b/apolloschurchapp/src/event/Event.js
deleted file mode 100644
index be51790d..00000000
--- a/apolloschurchapp/src/event/Event.js
+++ /dev/null
@@ -1,75 +0,0 @@
-import React from 'react';
-import { get } from 'lodash';
-import PropTypes from 'prop-types';
-import moment from 'moment';
-import InAppBrowser from 'react-native-inappbrowser-reborn';
-import {
-  GradientOverlayImage,
-  BackgroundView,
-  PaddedView,
-  H2,
-  Paragraph,
-  StretchyView,
-} from '@apollosproject/ui-kit';
-import HTMLView from '@apollosproject/ui-htmlview';
-
-import { FlexedScrollView, EventInfoItem } from './components';
-
-const handlePressAnchor = (url) => {
-  InAppBrowser.open(url);
-};
-
-const Event = ({ event, loading }) => {
-  const coverImageSources = get(event, 'image.sources', []);
-  return (
-    <BackgroundView>
-      <StretchyView>
-        {({ Stretchy, ...scrollViewProps }) => (
-          <FlexedScrollView {...scrollViewProps}>
-            {coverImageSources.length || loading ? (
-              <Stretchy>
-                <GradientOverlayImage
-                  isLoading={!coverImageSources.length && loading}
-                  source={coverImageSources}
-                />
-              </Stretchy>
-            ) : null}
-            <PaddedView vertical={false}>
-              <H2 padded isLoading={!event.name && loading}>
-                {event.name}
-              </H2>
-              <Paragraph>
-                <EventInfoItem
-                  icon={'time'}
-                  title={moment(event.start).format('ddd, MMMM Do, YYYY')}
-                  subtitle={`${moment(event.start).format('LT')} — ${moment(
-                    event.end
-                  ).format('LT')}`}
-                />
-                <EventInfoItem icon={'pin'} title={event.location} />
-              </Paragraph>
-              <HTMLView isLoading={loading} onPressAnchor={handlePressAnchor}>
-                {event.description}
-              </HTMLView>
-            </PaddedView>
-          </FlexedScrollView>
-        )}
-      </StretchyView>
-    </BackgroundView>
-  );
-};
-
-Event.propTypes = {
-  event: PropTypes.shape({
-    __typename: PropTypes.string,
-    id: PropTypes.string,
-    name: PropTypes.string,
-    description: PropTypes.string,
-    start: PropTypes.string,
-    end: PropTypes.string,
-    location: PropTypes.string,
-  }),
-  loading: PropTypes.bool,
-};
-
-export default Event;
diff --git a/apolloschurchapp/src/event/Event.tests.js b/apolloschurchapp/src/event/Event.tests.js
deleted file mode 100644
index 5717420c..00000000
--- a/apolloschurchapp/src/event/Event.tests.js
+++ /dev/null
@@ -1,30 +0,0 @@
-import React from 'react';
-import moment from 'moment';
-
-import { Providers, renderWithApolloData } from '@apollosproject/ui-test-utils';
-
-import Event from './Event';
-
-describe('The Event component', () => {
-  it('should render', async () => {
-    const tree = await renderWithApolloData(
-      <Providers>
-        <Event
-          event={{
-            __typename: 'Event',
-            id: 'Event:123',
-            start: moment('2019-09-26T15:10:51.200Z')
-              .utc()
-              .toJSON(),
-            end: moment('2019-09-26T17:10:51.200Z')
-              .utc()
-              .toJSON(),
-            location: 'Willow Creek, Chicago',
-            image: { sources: [{ url: 'https://url.com/image.jpg' }] },
-          }}
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/event/EventConnected.js b/apolloschurchapp/src/event/EventConnected.js
deleted file mode 100644
index 1569b802..00000000
--- a/apolloschurchapp/src/event/EventConnected.js
+++ /dev/null
@@ -1,78 +0,0 @@
-import React, { PureComponent } from 'react';
-import { Query } from '@apollo/client/react/components';
-import { get } from 'lodash';
-import PropTypes from 'prop-types';
-
-import { ErrorCard, ThemeMixin } from '@apollosproject/ui-kit';
-
-import { TrackEventWhenLoaded } from '@apollosproject/ui-analytics';
-
-import Event from './Event';
-import GET_EVENT from './getEvent';
-
-class EventConnected extends PureComponent {
-  static propTypes = {
-    navigation: PropTypes.shape({
-      push: PropTypes.func,
-    }),
-    route: PropTypes.shape({
-      params: PropTypes.shape({
-        eventId: PropTypes.string,
-      }),
-    }),
-  };
-
-  get eventId() {
-    return this.props.route.params.eventId;
-  }
-
-  get queryVariables() {
-    return { eventId: this.eventId };
-  }
-
-  renderWithData = ({ loading, error, data }) => {
-    if (error) return <ErrorCard error={error} />;
-
-    const event = data?.node || {};
-
-    const { theme = {} } = event;
-
-    return (
-      <ThemeMixin
-        mixin={{
-          type: get(theme, 'type', 'light').toLowerCase(),
-          colors: get(theme, 'colors'),
-        }}
-      >
-        <TrackEventWhenLoaded
-          loaded={!!(!loading && event.name)}
-          eventName={'View Event'}
-          properties={{
-            title: event.name,
-            eventId: this.eventId,
-          }}
-        />
-        <Event
-          id={this.eventId}
-          event={event}
-          loading={loading}
-          error={error}
-        />
-      </ThemeMixin>
-    );
-  };
-
-  render() {
-    return (
-      <Query
-        query={GET_EVENT}
-        fetchPolicy="network-only"
-        variables={this.queryVariables}
-      >
-        {this.renderWithData}
-      </Query>
-    );
-  }
-}
-
-export default EventConnected;
diff --git a/apolloschurchapp/src/event/EventConnected.tests.js b/apolloschurchapp/src/event/EventConnected.tests.js
deleted file mode 100644
index b3515a09..00000000
--- a/apolloschurchapp/src/event/EventConnected.tests.js
+++ /dev/null
@@ -1,52 +0,0 @@
-import React from 'react';
-
-import moment from 'moment';
-import { MockedProvider } from '@apollo/client/testing';
-import { Providers, renderWithApolloData } from '@apollosproject/ui-test-utils';
-import getEvent from './getEvent';
-import EventConnected from './EventConnected';
-
-const mocks = {
-  request: {
-    query: getEvent,
-    variables: { eventId: 'Event:123' },
-  },
-  result: {
-    data: {
-      node: {
-        __typename: 'Event',
-        id: 'Event:123',
-        start: moment('2019-09-26T15:10:51.200Z')
-          .utc()
-          .toJSON(),
-        end: moment('2019-09-26T17:10:51.200Z')
-          .utc()
-          .toJSON(),
-        location: 'Willow Creek, Chicago',
-        name: 'Cookout',
-        description: 'Some detailed description',
-        image: {
-          __typename: 'ImageMedia',
-          sources: [
-            {
-              uri: 'https://url.com/image.jpg',
-              __typename: 'ImageMediaSource',
-            },
-          ],
-        },
-      },
-    },
-  },
-};
-
-describe('EventConnected component', () => {
-  it('renders without errors', async () => {
-    const tree = await renderWithApolloData(
-      <Providers mocks={[mocks]} MockedProvider={MockedProvider}>
-        <EventConnected route={{ params: { eventId: 'Event:123' } }} />
-      </Providers>
-    );
-
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/event/components.js b/apolloschurchapp/src/event/components.js
deleted file mode 100644
index f2274154..00000000
--- a/apolloschurchapp/src/event/components.js
+++ /dev/null
@@ -1,44 +0,0 @@
-import React from 'react';
-import { Animated, View } from 'react-native';
-import PropTypes from 'prop-types';
-import { styled, withTheme, H6, H4, Icon } from '@apollosproject/ui-kit';
-
-const FlexedScrollView = styled({ flex: 1 })(Animated.ScrollView);
-
-const StyledIcon = withTheme(({ theme: { colors, sizing } }) => ({
-  fill: colors.text.tertiary,
-  size: sizing.baseUnit * 1.5,
-  style: {
-    marginRight: 8,
-  },
-}))(Icon);
-
-const StyledH6 = styled(({ theme: { colors, sizing } }) => ({
-  color: colors.text.tertiary,
-  fontSize: sizing.baseUnit * 0.875,
-  marginTop: sizing.baseUnit / 4,
-}))(H6);
-
-const EventInfoContainer = styled({ marginBottom: 24, flexDirection: 'row' })(
-  View
-);
-
-const TextContainer = styled({ flexDirection: 'column' })(View);
-
-const EventInfoItem = ({ icon, title, subtitle }) => (
-  <EventInfoContainer>
-    <StyledIcon name={icon} />
-    <TextContainer>
-      <H4 bold>{title}</H4>
-      <StyledH6>{subtitle}</StyledH6>
-    </TextContainer>
-  </EventInfoContainer>
-);
-
-EventInfoItem.propTypes = {
-  icon: PropTypes.string.isRequired,
-  title: PropTypes.string,
-  subtitle: PropTypes.string,
-};
-
-export { FlexedScrollView, EventInfoItem };
diff --git a/apolloschurchapp/src/event/getEvent.js b/apolloschurchapp/src/event/getEvent.js
deleted file mode 100644
index 059cb9f1..00000000
--- a/apolloschurchapp/src/event/getEvent.js
+++ /dev/null
@@ -1,29 +0,0 @@
-import gql from 'graphql-tag';
-
-export const EVENT_FRAGMENT = gql`
-  fragment eventFragment on Event {
-    id
-    name
-    location
-    start
-    end
-    description
-    image {
-      sources {
-        uri
-      }
-    }
-  }
-`;
-
-export default gql`
-  query getEvent($eventId: ID!) {
-    node(id: $eventId) {
-      __typename
-      ... on Event {
-        ...eventFragment
-      }
-    }
-  }
-  ${EVENT_FRAGMENT}
-`;
diff --git a/apolloschurchapp/src/event/index.js b/apolloschurchapp/src/event/index.js
deleted file mode 100644
index 708a1a68..00000000
--- a/apolloschurchapp/src/event/index.js
+++ /dev/null
@@ -1,25 +0,0 @@
-import React from 'react';
-import { createStackNavigator } from '@react-navigation/stack';
-
-import PropTypes from 'prop-types';
-import NavigationHeader from '../ui/NavigationHeader';
-import Event from './EventConnected';
-
-const { Navigator, Screen } = createStackNavigator();
-
-const EventNavigator = ({ route, ...props }) => (
-  <Navigator
-    {...props}
-    screenOptions={{ header: NavigationHeader, headerTransparent: true }}
-  >
-    <Screen name="Event" initialParams={route.params} component={Event} />
-  </Navigator>
-);
-
-EventNavigator.propTypes = {
-  route: PropTypes.shape({
-    params: PropTypes.shape({}),
-  }),
-};
-
-export default EventNavigator;
diff --git a/apolloschurchapp/src/index.js b/apolloschurchapp/src/index.js
index 877f0bcd..763276be 100644
--- a/apolloschurchapp/src/index.js
+++ b/apolloschurchapp/src/index.js
@@ -30,7 +30,6 @@ import {
 } from '@apollosproject/ui-connected';
 import Providers from './Providers';
 import ContentSingle from './content-single';
-import Event from './event';
 import Tabs from './tabs';
 import customTheme, { customIcons } from './theme';
 
@@ -109,11 +108,6 @@ const App = () => (
                 stackPresentation: 'push',
               })}
             />
-            <Screen
-              name="Event"
-              component={Event}
-              options={{ title: 'Event' }}
-            />
             <Screen
               name="Auth"
               component={Auth}
diff --git a/apolloschurchapp/src/store/index.js b/apolloschurchapp/src/store/index.js
index 5fbdd429..80b753bf 100644
--- a/apolloschurchapp/src/store/index.js
+++ b/apolloschurchapp/src/store/index.js
@@ -2,7 +2,7 @@ import gql from 'graphql-tag';
 
 import { schema as mediaPlayerSchema } from '@apollosproject/ui-media-player';
 import { updatePushId } from '@apollosproject/ui-notifications';
-import CACHE_LOADED from '../client/getCacheLoaded'; // eslint-disable-line
+import CACHE_LOADED from '../client/getCacheLoaded';
 
 // TODO: this will require more organization...ie...not keeping everything in one file.
 // But this is simple while our needs our small.
@@ -25,6 +25,8 @@ ${mediaPlayerSchema}
 export const defaults = {
   __typename: 'Query',
   cacheLoaded: false,
+  isLoggedIn: false,
+  notificationsEnabled: false,
 };
 
 const GET_LOGGED_IN = gql`
diff --git a/apolloschurchapp/src/ui/NavigationHeader/index.js b/apolloschurchapp/src/ui/NavigationHeader/index.js
deleted file mode 100644
index 4e4abf3d..00000000
--- a/apolloschurchapp/src/ui/NavigationHeader/index.js
+++ /dev/null
@@ -1,49 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-import { Animated } from 'react-native';
-import { ModalViewHeader } from '@apollosproject/ui-kit';
-
-const NavigationHeader = ({ previous, scene, navigation }) => {
-  let onBack = null;
-  if (previous?.route?.name === 'ContentSingle')
-    onBack = () => navigation.pop();
-  const onClose = () => {
-    navigation.goBack();
-  };
-
-  const progress = Animated.add(
-    scene.progress.current,
-    scene.progress.next || 0
-  );
-
-  const opacity = progress.interpolate({
-    inputRange: [0, 1, 2],
-    outputRange: [0, 1, 0],
-  });
-
-  return (
-    <Animated.View style={{ opacity }}>
-      <ModalViewHeader onClose={onClose} onBack={onBack} navigationHeader />
-    </Animated.View>
-  );
-};
-
-NavigationHeader.propTypes = {
-  previous: PropTypes.shape({
-    route: PropTypes.shape({
-      name: PropTypes.string,
-    }),
-  }),
-  navigation: PropTypes.shape({
-    pop: PropTypes.func,
-    popToTop: PropTypes.func,
-  }),
-  scene: PropTypes.shape({
-    progress: PropTypes.shape({
-      current: PropTypes.shape({}),
-      next: PropTypes.shape({}),
-    }),
-  }),
-};
-
-export default NavigationHeader;
diff --git a/apolloschurchapp/src/user-settings/index.js b/apolloschurchapp/src/user-settings/index.js
index 9a0a8aed..0cd320f3 100644
--- a/apolloschurchapp/src/user-settings/index.js
+++ b/apolloschurchapp/src/user-settings/index.js
@@ -86,6 +86,7 @@ const UserSettings = () => {
                     <CellIcon name="arrow-next" />
                   </Cell>
                 </Touchable>
+                <Divider />
                 <Touchable
                   onPress={() => {
                     navigation.navigate('Notifications');
