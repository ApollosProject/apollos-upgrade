diff --git a/apolloschurchapp/__mocks__/@react-native-community/async-storage/index.js b/apolloschurchapp/__mocks__/@react-native-community/async-storage/index.js
deleted file mode 100644
index a4bf3f4..0000000
--- a/apolloschurchapp/__mocks__/@react-native-community/async-storage/index.js
+++ /dev/null
@@ -1,23 +0,0 @@
-let cache = {};
-export default {
-  setItem: (key, value) =>
-    new Promise((resolve, reject) =>
-      typeof key !== 'string' || typeof value !== 'string'
-        ? reject(new Error('key and value must be string'))
-        : resolve((cache[key] = value))
-    ),
-  getItem: (key, value) =>
-    new Promise((resolve) =>
-      cache.hasOwnProperty(key) ? resolve(cache[key]) : resolve(null)
-    ),
-  removeItem: (key) =>
-    new Promise((resolve, reject) =>
-      cache.hasOwnProperty(key)
-        ? resolve(delete cache[key])
-        : reject('No such key!')
-    ),
-  clear: (key) => new Promise((resolve, reject) => resolve((cache = {}))),
-
-  getAllKeys: (key) =>
-    new Promise((resolve, reject) => resolve(Object.keys(cache))),
-};
diff --git a/apolloschurchapp/__mocks__/@react-native-community/geolocation/index.js b/apolloschurchapp/__mocks__/@react-native-community/geolocation/index.js
deleted file mode 100644
index 0e77776..0000000
--- a/apolloschurchapp/__mocks__/@react-native-community/geolocation/index.js
+++ /dev/null
@@ -1,3 +0,0 @@
-export default {
-  getCurrentPosition: async () => null,
-};
diff --git a/apolloschurchapp/android/app/build.gradle b/apolloschurchapp/android/app/build.gradle
index 64b8b5b..12e076a 100644
--- a/apolloschurchapp/android/app/build.gradle
+++ b/apolloschurchapp/android/app/build.gradle
@@ -121,8 +121,8 @@ android {
         applicationId "com.apolloschurch.app"
         minSdkVersion rootProject.ext.minSdkVersion
         targetSdkVersion rootProject.ext.targetSdkVersion
-        versionCode 19
-        versionName "1.1.0"
+        versionCode 17
+        versionName "1.1.0-beta.2"
         ndk {
             abiFilters "armeabi-v7a", "x86", "arm64-v8a", "x86_64"
         }
@@ -158,9 +158,7 @@ android {
 }
 
 dependencies {
-    implementation project(':@react-native-community_async-storage')
-    implementation project(':react-native-gesture-handler')
-    // added this and the two google play packages below when upgraded rn-maps to 0.24.2
+       // added this and the two google play packages below when upgraded rn-maps to 0.24.2
     implementation(project(':react-native-maps')){
       exclude group: 'com.google.android.gms', module: 'play-services-base'
       exclude group: 'com.google.android.gms', module: 'play-services-maps'
@@ -179,7 +177,6 @@ dependencies {
     implementation project(':react-native-image-picker')
     implementation project(':react-native-device-info')
     implementation project(':react-native-config')
-    implementation project(':react-native-geolocation-service')
     implementation fileTree(dir: "libs", include: ["*.jar"])
     implementation "com.android.support:appcompat-v7:${rootProject.ext.supportLibVersion}"
     implementation "com.facebook.react:react-native:+"  // From node_modules
diff --git a/apolloschurchapp/android/app/src/main/java/com/apolloschurchapp/MainActivity.java b/apolloschurchapp/android/app/src/main/java/com/apolloschurchapp/MainActivity.java
index afc7e3d..0b9f1ce 100644
--- a/apolloschurchapp/android/app/src/main/java/com/apolloschurchapp/MainActivity.java
+++ b/apolloschurchapp/android/app/src/main/java/com/apolloschurchapp/MainActivity.java
@@ -1,9 +1,6 @@
 package com.apolloschurchapp;
 import android.os.Bundle;
 import com.facebook.react.ReactActivity;
-import com.facebook.react.ReactActivityDelegate;
-import com.facebook.react.ReactRootView;
-import com.swmansion.gesturehandler.react.RNGestureHandlerEnabledRootView;
 import org.devio.rn.splashscreen.SplashScreen;
 
 public class MainActivity extends ReactActivity {
@@ -20,14 +17,4 @@ public class MainActivity extends ReactActivity {
     protected String getMainComponentName() {
         return "apolloschurchapp";
     }
-
-    @Override
-    protected ReactActivityDelegate createReactActivityDelegate() {
-      return new ReactActivityDelegate(this, getMainComponentName()) {
-        @Override
-        protected ReactRootView createRootView() {
-         return new RNGestureHandlerEnabledRootView(MainActivity.this);
-        }
-      };
-    }
 }
diff --git a/apolloschurchapp/android/app/src/main/java/com/apolloschurchapp/MainApplication.java b/apolloschurchapp/android/app/src/main/java/com/apolloschurchapp/MainApplication.java
index 6793677..aa318e0 100644
--- a/apolloschurchapp/android/app/src/main/java/com/apolloschurchapp/MainApplication.java
+++ b/apolloschurchapp/android/app/src/main/java/com/apolloschurchapp/MainApplication.java
@@ -2,10 +2,7 @@ package com.apolloschurchapp;
 
 import android.app.Application;
 
-import com.agontuk.RNFusedLocation.RNFusedLocationPackage;
 import com.facebook.react.ReactApplication;
-import com.reactnativecommunity.asyncstorage.AsyncStoragePackage;
-import com.swmansion.gesturehandler.react.RNGestureHandlerPackage;
 import com.airbnb.android.react.maps.MapsPackage;
 import com.RNFetchBlob.RNFetchBlobPackage;
 import com.reactnativecommunity.webview.RNCWebViewPackage;
@@ -39,9 +36,6 @@ public class MainApplication extends Application implements ReactApplication {
     protected List<ReactPackage> getPackages() {
       return Arrays.<ReactPackage>asList(
           new MainReactPackage(),
-              new RNFusedLocationPackage(),
-            new AsyncStoragePackage(),
-            new RNGestureHandlerPackage(),
             new MapsPackage(),
             new RNFetchBlobPackage(),
             new RNCWebViewPackage(),
diff --git a/apolloschurchapp/android/settings.gradle b/apolloschurchapp/android/settings.gradle
index 5eb9062..d705770 100644
--- a/apolloschurchapp/android/settings.gradle
+++ b/apolloschurchapp/android/settings.gradle
@@ -1,10 +1,4 @@
 rootProject.name = 'apolloschurchapp'
-include ':react-native-geolocation-service'
-project(':react-native-geolocation-service').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-geolocation-service/android')
-include ':@react-native-community_async-storage'
-project(':@react-native-community_async-storage').projectDir = new File(rootProject.projectDir, '../node_modules/@react-native-community/async-storage/android')
-include ':react-native-gesture-handler'
-project(':react-native-gesture-handler').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-gesture-handler/android')
 include ':react-native-maps'
 project(':react-native-maps').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-maps/lib/android')
 include ':rn-fetch-blob'
diff --git a/apolloschurchapp/apollos.json b/apolloschurchapp/apollos.json
index ecc542d..727cfc1 100644
--- a/apolloschurchapp/apollos.json
+++ b/apolloschurchapp/apollos.json
@@ -1,4 +1,4 @@
 {
-    "version": "1.1.0",
+    "version": "1.1.0-beta.2",
     "environment": "client"
 }
\ No newline at end of file
diff --git a/apolloschurchapp/ios/apolloschurchapp-tvOS/Info.plist b/apolloschurchapp/ios/apolloschurchapp-tvOS/Info.plist
index e637def..85a8beb 100644
--- a/apolloschurchapp/ios/apolloschurchapp-tvOS/Info.plist
+++ b/apolloschurchapp/ios/apolloschurchapp-tvOS/Info.plist
@@ -15,11 +15,11 @@
 	<key>CFBundlePackageType</key>
 	<string>APPL</string>
 	<key>CFBundleShortVersionString</key>
-	<string>1.1.0</string>
+	<string>1.1.0-beta.2</string>
 	<key>CFBundleSignature</key>
 	<string>????</string>
 	<key>CFBundleVersion</key>
-	<string>19</string>
+	<string>17</string>
 	<key>LSRequiresIPhoneOS</key>
 	<true />
 	<key>UILaunchStoryboardName</key>
diff --git a/apolloschurchapp/ios/apolloschurchapp-tvOSTests/Info.plist b/apolloschurchapp/ios/apolloschurchapp-tvOSTests/Info.plist
index 6a7f9d6..05a45de 100644
--- a/apolloschurchapp/ios/apolloschurchapp-tvOSTests/Info.plist
+++ b/apolloschurchapp/ios/apolloschurchapp-tvOSTests/Info.plist
@@ -15,10 +15,10 @@
 	<key>CFBundlePackageType</key>
 	<string>BNDL</string>
 	<key>CFBundleShortVersionString</key>
-	<string>1.1.0</string>
+	<string>1.1.0-beta.2</string>
 	<key>CFBundleSignature</key>
 	<string>????</string>
 	<key>CFBundleVersion</key>
-	<string>19</string>
+	<string>17</string>
 </dict>
 </plist>
diff --git a/apolloschurchapp/ios/apolloschurchapp.xcodeproj/project.pbxproj b/apolloschurchapp/ios/apolloschurchapp.xcodeproj/project.pbxproj
index 162a5d3..2a41435 100644
--- a/apolloschurchapp/ios/apolloschurchapp.xcodeproj/project.pbxproj
+++ b/apolloschurchapp/ios/apolloschurchapp.xcodeproj/project.pbxproj
@@ -5,7 +5,6 @@
 	};
 	objectVersion = 46;
 	objects = {
-
 /* Begin PBXBuildFile section */
 		00C302E51ABCBA2D00DB3ED1 /* libRCTActionSheet.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 00C302AC1ABCB8CE00DB3ED1 /* libRCTActionSheet.a */; };
 		00C302E71ABCBA2D00DB3ED1 /* libRCTGeolocation.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 00C302BA1ABCB90400DB3ED1 /* libRCTGeolocation.a */; };
@@ -56,7 +55,6 @@
 		832341BD1AAA6AB300B99B32 /* libRCTText.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 832341B51AAA6A8300B99B32 /* libRCTText.a */; };
 		834122CBBA8E476A8652994F /* libRNCWebView.a in Frameworks */ = {isa = PBXBuildFile; fileRef = AE039A0F55BB4B989835F759 /* libRNCWebView.a */; };
 		894732A70B4740678E85B593 /* Inter-UI-BoldItalic.otf in Resources */ = {isa = PBXBuildFile; fileRef = 2F5410F239E9477B9C2E86BD /* Inter-UI-BoldItalic.otf */; };
-		8962194BB2D748DDB6DA530B /* libRNGestureHandler.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 90612A20BF754A4E914906AD /* libRNGestureHandler.a */; };
 		90743C40BF544F10A810C43C /* DroidSerif-Italic.ttf in Resources */ = {isa = PBXBuildFile; fileRef = ADC3D2DB245545ADB1CAB3FE /* DroidSerif-Italic.ttf */; };
 		93A2B0A9328A46A4B7DD5EFA /* DroidSerif-Regular.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 4E007B33EDD74B82AEF02C24 /* DroidSerif-Regular.ttf */; };
 		A975E0B94A5D44AEB410E546 /* libReactNativeConfig.a in Frameworks */ = {isa = PBXBuildFile; fileRef = CF3175A44C4B4612AD79C04E /* libReactNativeConfig.a */; };
@@ -64,15 +62,12 @@
 		ADBDB9381DFEBF1600ED6528 /* libRCTBlob.a in Frameworks */ = {isa = PBXBuildFile; fileRef = ADBDB9271DFEBF0700ED6528 /* libRCTBlob.a */; };
 		B02F194A3F6A4FE29AC799B4 /* DroidSerif-BoldItalic.ttf in Resources */ = {isa = PBXBuildFile; fileRef = A93F9D112A034626A9421759 /* DroidSerif-BoldItalic.ttf */; };
 		B0D490A62BC143209FD3BFE8 /* libMusicControl.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 393EA40CFC2843BF9BB667B3 /* libMusicControl.a */; };
-		B2A8F7EFB7794DEFA6AEA50E /* libRNGestureHandler-tvOS.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 375F29B07CD141529D4EB2F7 /* libRNGestureHandler-tvOS.a */; };
 		B6899815EB024B7987617799 /* libRNSVG.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 430F3786C56541B198E03A02 /* libRNSVG.a */; };
 		CB1584B0772D4A67A81FC83F /* libMusicControl-tvOS.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 74625A1E54234FB7BE12070D /* libMusicControl-tvOS.a */; };
 		CE33B866C2DE49DEBE1AF23F /* libSplashScreen.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 1398ECED9AE14FD19B92232D /* libSplashScreen.a */; };
 		CFE4716D4F6D4ABF9ED485AC /* libRNDeviceInfo.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 0F155E84A5784CBE8D95A974 /* libRNDeviceInfo.a */; };
 		D2F560374F3341308A1579E7 /* libRCTVideo.a in Frameworks */ = {isa = PBXBuildFile; fileRef = C7FE26CDA2DC4CDBAB580A2F /* libRCTVideo.a */; };
-		DCC7DAB922F237B0001A2EA8 /* libRNCGeolocation.a in Frameworks */ = {isa = PBXBuildFile; fileRef = DCC7DAAD22F23799001A2EA8 /* libRNCGeolocation.a */; };
 		E28D37FEDA0245DBAC6552D3 /* libAirMaps.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 9862436C289A498D8B2E6201 /* libAirMaps.a */; };
-		E6525241950445C0929495F2 /* libRNCAsyncStorage.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 2C4605F404864B4EBBDF09DB /* libRNCAsyncStorage.a */; };
 		ED297163215061F000B7C4FE /* JavaScriptCore.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = ED297162215061F000B7C4FE /* JavaScriptCore.framework */; };
 		ED2971652150620600B7C4FE /* JavaScriptCore.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = ED2971642150620600B7C4FE /* JavaScriptCore.framework */; };
 		FCB3069DB5DD4170B2CAEFC4 /* Inter-UI-MediumItalic.otf in Resources */ = {isa = PBXBuildFile; fileRef = A460FD7884FD4574A818005A /* Inter-UI-MediumItalic.otf */; };
@@ -506,34 +501,6 @@
 			remoteGlobalIDString = 6D42A7D820341E6800A0D1AE;
 			remoteInfo = RNPassKit;
 		};
-		BFB447C8230303A60021E75E /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 4BC84B9C6F30419EBA142384 /* RNGestureHandler.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 134814201AA4EA6300B7C361;
-			remoteInfo = RNGestureHandler;
-		};
-		BFB447CA230303A60021E75E /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 4BC84B9C6F30419EBA142384 /* RNGestureHandler.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = B5C32A36220C603B000FFB8D;
-			remoteInfo = "RNGestureHandler-tvOS";
-		};
-		DCC7DAAC22F23799001A2EA8 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = DCC7DA7622F23799001A2EA8 /* RNCGeolocation.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 134814201AA4EA6300B7C361;
-			remoteInfo = RNCGeolocation;
-		};
-		DCD3CDDD22E1011100DD3F4E /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = D74E40AB9C7A4D2B80BC5A2D /* RNCAsyncStorage.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 134814201AA4EA6300B7C361;
-			remoteInfo = RNCAsyncStorage;
-		};
 /* End PBXContainerItemProxy section */
 
 /* Begin PBXFileReference section */
@@ -566,21 +533,18 @@
 		146833FF1AC3E56700842450 /* React.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = React.xcodeproj; path = "../node_modules/react-native/React/React.xcodeproj"; sourceTree = "<group>"; };
 		1C0ED1C4FB474DC8A829950D /* AirMaps.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = AirMaps.xcodeproj; path = "../node_modules/react-native-maps/lib/ios/AirMaps.xcodeproj"; sourceTree = "<group>"; };
 		2130E622CDAD43DF896EFF80 /* RNSVG.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = RNSVG.xcodeproj; path = "../node_modules/react-native-svg/ios/RNSVG.xcodeproj"; sourceTree = "<group>"; };
-		2C4605F404864B4EBBDF09DB /* libRNCAsyncStorage.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libRNCAsyncStorage.a; sourceTree = "<group>"; };
 		2D02E47B1E0B4A5D006451C7 /* apolloschurchapp-tvOS.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = "apolloschurchapp-tvOS.app"; sourceTree = BUILT_PRODUCTS_DIR; };
 		2D02E4901E0B4A5D006451C7 /* apolloschurchapp-tvOSTests.xctest */ = {isa = PBXFileReference; explicitFileType = wrapper.cfbundle; includeInIndex = 0; path = "apolloschurchapp-tvOSTests.xctest"; sourceTree = BUILT_PRODUCTS_DIR; };
 		2D16E6891FA4F8E400B85C8A /* libReact.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; path = libReact.a; sourceTree = BUILT_PRODUCTS_DIR; };
 		2F5410F239E9477B9C2E86BD /* Inter-UI-BoldItalic.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-BoldItalic.otf"; path = "../assets/fonts/Inter-UI-BoldItalic.otf"; sourceTree = "<group>"; };
 		34667F4711264343B035ACD0 /* RCTOneSignal.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = RCTOneSignal.xcodeproj; path = "../node_modules/react-native-onesignal/ios/RCTOneSignal.xcodeproj"; sourceTree = "<group>"; };
 		349D96BF833B4B1C88D02412 /* libSafariViewManager.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libSafariViewManager.a; sourceTree = "<group>"; };
-		375F29B07CD141529D4EB2F7 /* libRNGestureHandler-tvOS.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = "libRNGestureHandler-tvOS.a"; sourceTree = "<group>"; };
 		3923D6EFF26D4A53B8BDF8C6 /* RNAirplay.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = RNAirplay.xcodeproj; path = "../node_modules/react-native-airplay-btn/ios/RNAirplay.xcodeproj"; sourceTree = "<group>"; };
 		393EA40CFC2843BF9BB667B3 /* libMusicControl.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libMusicControl.a; sourceTree = "<group>"; };
 		39E16D6487A34F4D9B8C6EC1 /* RNDeviceInfo.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = RNDeviceInfo.xcodeproj; path = "../node_modules/react-native-device-info/ios/RNDeviceInfo.xcodeproj"; sourceTree = "<group>"; };
 		3AB4C6D7F52C428FA62777F1 /* libRNPassKit.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libRNPassKit.a; sourceTree = "<group>"; };
 		430F3786C56541B198E03A02 /* libRNSVG.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libRNSVG.a; sourceTree = "<group>"; };
 		43F1D28CACD04757A0FB29A6 /* BVLinearGradient.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = BVLinearGradient.xcodeproj; path = "../node_modules/react-native-linear-gradient/BVLinearGradient.xcodeproj"; sourceTree = "<group>"; };
-		4BC84B9C6F30419EBA142384 /* RNGestureHandler.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = RNGestureHandler.xcodeproj; path = "../node_modules/react-native-gesture-handler/ios/RNGestureHandler.xcodeproj"; sourceTree = "<group>"; };
 		4E007B33EDD74B82AEF02C24 /* DroidSerif-Regular.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "DroidSerif-Regular.ttf"; path = "../assets/fonts/DroidSerif-Regular.ttf"; sourceTree = "<group>"; };
 		4ED51CB73778472686A7279B /* RNCWebView.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = RNCWebView.xcodeproj; path = "../node_modules/react-native-webview/ios/RNCWebView.xcodeproj"; sourceTree = "<group>"; };
 		5A5A2BC2998547F4816B82E4 /* Inter-UI-BlackItalic.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-BlackItalic.otf"; path = "../assets/fonts/Inter-UI-BlackItalic.otf"; sourceTree = "<group>"; };
@@ -594,7 +558,6 @@
 		78C398B01ACF4ADC00677621 /* RCTLinking.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = RCTLinking.xcodeproj; path = "../node_modules/react-native/Libraries/LinkingIOS/RCTLinking.xcodeproj"; sourceTree = "<group>"; };
 		7A505BEDA0674A7F9DD875ED /* libRNDeviceInfo-tvOS.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = "libRNDeviceInfo-tvOS.a"; sourceTree = "<group>"; };
 		832341B01AAA6A8300B99B32 /* RCTText.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = RCTText.xcodeproj; path = "../node_modules/react-native/Libraries/Text/RCTText.xcodeproj"; sourceTree = "<group>"; };
-		90612A20BF754A4E914906AD /* libRNGestureHandler.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libRNGestureHandler.a; sourceTree = "<group>"; };
 		97222E2EB5E54C7FA6104218 /* libReactNativeConfig-tvOS.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = "libReactNativeConfig-tvOS.a"; sourceTree = "<group>"; };
 		9862436C289A498D8B2E6201 /* libAirMaps.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libAirMaps.a; sourceTree = "<group>"; };
 		9F0EC3F23A3F4FFBBBC6583A /* libBVLinearGradient.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libBVLinearGradient.a; sourceTree = "<group>"; };
@@ -610,9 +573,7 @@
 		CF3175A44C4B4612AD79C04E /* libReactNativeConfig.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libReactNativeConfig.a; sourceTree = "<group>"; };
 		D3BA7667091546469A730845 /* RNPassKit.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = RNPassKit.xcodeproj; path = "../node_modules/react-native-passkit-wallet/ios/RNPassKit.xcodeproj"; sourceTree = "<group>"; };
 		D5157D807E164356ADE87867 /* Inter-UI-Bold.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-Bold.otf"; path = "../assets/fonts/Inter-UI-Bold.otf"; sourceTree = "<group>"; };
-		D74E40AB9C7A4D2B80BC5A2D /* RNCAsyncStorage.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = RNCAsyncStorage.xcodeproj; path = "../node_modules/@react-native-community/async-storage/ios/RNCAsyncStorage.xcodeproj"; sourceTree = "<group>"; };
 		DC74A378C1CC40E4B6192D7F /* Inter-UI-Medium.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-Medium.otf"; path = "../assets/fonts/Inter-UI-Medium.otf"; sourceTree = "<group>"; };
-		DCC7DA7622F23799001A2EA8 /* RNCGeolocation.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = RNCGeolocation.xcodeproj; path = "../node_modules/@react-native-community/geolocation/ios/RNCGeolocation.xcodeproj"; sourceTree = "<group>"; };
 		E3B8A0AC5A6B4FABB3BDF6CB /* DroidSerif-Bold.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "DroidSerif-Bold.ttf"; path = "../assets/fonts/DroidSerif-Bold.ttf"; sourceTree = "<group>"; };
 		EC21254B449443F99016EBFD /* Inter-UI-Black.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-Black.otf"; path = "../assets/fonts/Inter-UI-Black.otf"; sourceTree = "<group>"; };
 		ED297162215061F000B7C4FE /* JavaScriptCore.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = JavaScriptCore.framework; path = System/Library/Frameworks/JavaScriptCore.framework; sourceTree = SDKROOT; };
@@ -635,7 +596,6 @@
 			buildActionMask = 2147483647;
 			files = (
 				ED297163215061F000B7C4FE /* JavaScriptCore.framework in Frameworks */,
-				DCC7DAB922F237B0001A2EA8 /* libRNCGeolocation.a in Frameworks */,
 				ADBDB9381DFEBF1600ED6528 /* libRCTBlob.a in Frameworks */,
 				11D1A2F320CAFA9E000508D9 /* libRCTAnimation.a in Frameworks */,
 				146834051AC3E58100842450 /* libReact.a in Frameworks */,
@@ -664,8 +624,6 @@
 				80E20D1B9CC74EB4A9A4CE7B /* libRNFetchBlob.a in Frameworks */,
 				E28D37FEDA0245DBAC6552D3 /* libAirMaps.a in Frameworks */,
 				82A2FF1E6E114D3D962D533D /* libRNPassKit.a in Frameworks */,
-				E6525241950445C0929495F2 /* libRNCAsyncStorage.a in Frameworks */,
-				8962194BB2D748DDB6DA530B /* libRNGestureHandler.a in Frameworks */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
@@ -686,7 +644,6 @@
 				0CB759F558AA42908EEA1EAB /* libRNDeviceInfo-tvOS.a in Frameworks */,
 				CB1584B0772D4A67A81FC83F /* libMusicControl-tvOS.a in Frameworks */,
 				6FFC53D62D7D482A9A92B721 /* libRNSVG-tvOS.a in Frameworks */,
-				B2A8F7EFB7794DEFA6AEA50E /* libRNGestureHandler-tvOS.a in Frameworks */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
@@ -869,6 +826,7 @@
 			children = (
 				0BE434FF7E9549F392208DEF /* libRNAirplay.a */,
 				CF3175A44C4B4612AD79C04E /* libReactNativeConfig.a */,
+				9DA3750D49B0422F9A4B45BE /* libDBCustomTabs.a */,
 				0F155E84A5784CBE8D95A974 /* libRNDeviceInfo.a */,
 				605AEFB6B1BB4611BDCFE95C /* libRNImagePicker.a */,
 				9F0EC3F23A3F4FFBBBC6583A /* libBVLinearGradient.a */,
@@ -887,9 +845,6 @@
 				67356E00D116467DA58DF3CC /* libRNSVG-tvOS.a */,
 				9862436C289A498D8B2E6201 /* libAirMaps.a */,
 				3AB4C6D7F52C428FA62777F1 /* libRNPassKit.a */,
-				2C4605F404864B4EBBDF09DB /* libRNCAsyncStorage.a */,
-				90612A20BF754A4E914906AD /* libRNGestureHandler.a */,
-				375F29B07CD141529D4EB2F7 /* libRNGestureHandler-tvOS.a */,
 			);
 			name = "Recovered References";
 			sourceTree = "<group>";
@@ -1015,7 +970,6 @@
 		832341AE1AAA6A7D00B99B32 /* Libraries */ = {
 			isa = PBXGroup;
 			children = (
-				DCC7DA7622F23799001A2EA8 /* RNCGeolocation.xcodeproj */,
 				5E91572D1DD0AC6500FF2AA8 /* RCTAnimation.xcodeproj */,
 				146833FF1AC3E56700842450 /* React.xcodeproj */,
 				00C302A71ABCB8CE00DB3ED1 /* RCTActionSheet.xcodeproj */,
@@ -1044,8 +998,6 @@
 				10B0392307184C498573F1A2 /* RNFetchBlob.xcodeproj */,
 				1C0ED1C4FB474DC8A829950D /* AirMaps.xcodeproj */,
 				D3BA7667091546469A730845 /* RNPassKit.xcodeproj */,
-				D74E40AB9C7A4D2B80BC5A2D /* RNCAsyncStorage.xcodeproj */,
-				4BC84B9C6F30419EBA142384 /* RNGestureHandler.xcodeproj */,
 			);
 			name = Libraries;
 			sourceTree = "<group>";
@@ -1111,31 +1063,6 @@
 			name = Products;
 			sourceTree = "<group>";
 		};
-		BFB447C4230303A60021E75E /* Products */ = {
-			isa = PBXGroup;
-			children = (
-				BFB447C9230303A60021E75E /* libRNGestureHandler.a */,
-				BFB447CB230303A60021E75E /* libRNGestureHandler-tvOS.a */,
-			);
-			name = Products;
-			sourceTree = "<group>";
-		};
-		DCC7DA7722F23799001A2EA8 /* Products */ = {
-			isa = PBXGroup;
-			children = (
-				DCC7DAAD22F23799001A2EA8 /* libRNCGeolocation.a */,
-			);
-			name = Products;
-			sourceTree = "<group>";
-		};
-		DCD3CDDA22E1011100DD3F4E /* Products */ = {
-			isa = PBXGroup;
-			children = (
-				DCD3CDDE22E1011100DD3F4E /* libRNCAsyncStorage.a */,
-			);
-			name = Products;
-			sourceTree = "<group>";
-		};
 /* End PBXGroup section */
 
 /* Begin PBXNativeTarget section */
@@ -1328,14 +1255,6 @@
 					ProductGroup = 79CEBFCD223011FE00D8F685 /* Products */;
 					ProjectRef = 3923D6EFF26D4A53B8BDF8C6 /* RNAirplay.xcodeproj */;
 				},
-				{
-					ProductGroup = DCD3CDDA22E1011100DD3F4E /* Products */;
-					ProjectRef = D74E40AB9C7A4D2B80BC5A2D /* RNCAsyncStorage.xcodeproj */;
-				},
-				{
-					ProductGroup = DCC7DA7722F23799001A2EA8 /* Products */;
-					ProjectRef = DCC7DA7622F23799001A2EA8 /* RNCGeolocation.xcodeproj */;
-				},
 				{
 					ProductGroup = 79CEBFC7223011FD00D8F685 /* Products */;
 					ProjectRef = 4ED51CB73778472686A7279B /* RNCWebView.xcodeproj */;
@@ -1348,10 +1267,6 @@
 					ProductGroup = 79CEC020223011FF00D8F685 /* Products */;
 					ProjectRef = 10B0392307184C498573F1A2 /* RNFetchBlob.xcodeproj */;
 				},
-				{
-					ProductGroup = BFB447C4230303A60021E75E /* Products */;
-					ProjectRef = 4BC84B9C6F30419EBA142384 /* RNGestureHandler.xcodeproj */;
-				},
 				{
 					ProductGroup = 79CEBFD3223011FE00D8F685 /* Products */;
 					ProjectRef = 629FCAAD128E41B4BAE2BCF4 /* RNImagePicker.xcodeproj */;
@@ -1801,34 +1716,6 @@
 			remoteRef = BF08F5182242B97A00FFB1DC /* PBXContainerItemProxy */;
 			sourceTree = BUILT_PRODUCTS_DIR;
 		};
-		BFB447C9230303A60021E75E /* libRNGestureHandler.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libRNGestureHandler.a;
-			remoteRef = BFB447C8230303A60021E75E /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		BFB447CB230303A60021E75E /* libRNGestureHandler-tvOS.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = "libRNGestureHandler-tvOS.a";
-			remoteRef = BFB447CA230303A60021E75E /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		DCC7DAAD22F23799001A2EA8 /* libRNCGeolocation.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libRNCGeolocation.a;
-			remoteRef = DCC7DAAC22F23799001A2EA8 /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		DCD3CDDE22E1011100DD3F4E /* libRNCAsyncStorage.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libRNCAsyncStorage.a;
-			remoteRef = DCD3CDDD22E1011100DD3F4E /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
 /* End PBXReferenceProxy section */
 
 /* Begin PBXResourcesBuildPhase section */
@@ -1997,15 +1884,12 @@
 					"$(SRCROOT)/../node_modules/rn-fetch-blob/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-maps/lib/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-passkit-wallet/ios/RNPassKit",
-					"$(SRCROOT)/../node_modules/@react-native-community/async-storage/ios",
-					"$(SRCROOT)/../node_modules/react-native-gesture-handler/ios/**",
 				);
 				INFOPLIST_FILE = apolloschurchappTests/Info.plist;
 				IPHONEOS_DEPLOYMENT_TARGET = 9.0;
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @loader_path/Frameworks";
 				LIBRARY_SEARCH_PATHS = (
 					"$(inherited)",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
 				);
 				OTHER_LDFLAGS = (
 					"-ObjC",
@@ -2040,15 +1924,12 @@
 					"$(SRCROOT)/../node_modules/rn-fetch-blob/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-maps/lib/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-passkit-wallet/ios/RNPassKit",
-					"$(SRCROOT)/../node_modules/@react-native-community/async-storage/ios",
-					"$(SRCROOT)/../node_modules/react-native-gesture-handler/ios/**",
 				);
 				INFOPLIST_FILE = apolloschurchappTests/Info.plist;
 				IPHONEOS_DEPLOYMENT_TARGET = 9.0;
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @loader_path/Frameworks";
 				LIBRARY_SEARCH_PATHS = (
 					"$(inherited)",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
 				);
 				OTHER_LDFLAGS = (
 					"-ObjC",
@@ -2064,7 +1945,7 @@
 			isa = XCBuildConfiguration;
 			buildSettings = {
 				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
-				CURRENT_PROJECT_VERSION = 15;
+				CURRENT_PROJECT_VERSION = 13;
 				DEAD_CODE_STRIPPING = NO;
 				DEVELOPMENT_TEAM = 7TM8C6252Z;
 				HEADER_SEARCH_PATHS = (
@@ -2085,8 +1966,6 @@
 					"$(SRCROOT)/../node_modules/rn-fetch-blob/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-maps/lib/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-passkit-wallet/ios/RNPassKit",
-					"$(SRCROOT)/../node_modules/@react-native-community/async-storage/ios",
-					"$(SRCROOT)/../node_modules/react-native-gesture-handler/ios/**",
 				);
 				INFOPLIST_FILE = apolloschurchapp/Info.plist;
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
@@ -2106,7 +1985,7 @@
 			isa = XCBuildConfiguration;
 			buildSettings = {
 				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
-				CURRENT_PROJECT_VERSION = 15;
+				CURRENT_PROJECT_VERSION = 13;
 				HEADER_SEARCH_PATHS = (
 					"$(inherited)",
 					"$(SRCROOT)/../node_modules/react-native-airplay-btn/ios",
@@ -2125,8 +2004,6 @@
 					"$(SRCROOT)/../node_modules/rn-fetch-blob/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-maps/lib/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-passkit-wallet/ios/RNPassKit",
-					"$(SRCROOT)/../node_modules/@react-native-community/async-storage/ios",
-					"$(SRCROOT)/../node_modules/react-native-gesture-handler/ios/**",
 				);
 				INFOPLIST_FILE = apolloschurchapp/Info.plist;
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
@@ -2172,14 +2049,11 @@
 					"$(SRCROOT)/../node_modules/rn-fetch-blob/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-maps/lib/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-passkit-wallet/ios/RNPassKit",
-					"$(SRCROOT)/../node_modules/@react-native-community/async-storage/ios",
-					"$(SRCROOT)/../node_modules/react-native-gesture-handler/ios/**",
 				);
 				INFOPLIST_FILE = "apolloschurchapp-tvOS/Info.plist";
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
 				LIBRARY_SEARCH_PATHS = (
 					"$(inherited)",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
 				);
 				OTHER_LDFLAGS = (
 					"-ObjC",
@@ -2223,14 +2097,11 @@
 					"$(SRCROOT)/../node_modules/rn-fetch-blob/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-maps/lib/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-passkit-wallet/ios/RNPassKit",
-					"$(SRCROOT)/../node_modules/@react-native-community/async-storage/ios",
-					"$(SRCROOT)/../node_modules/react-native-gesture-handler/ios/**",
 				);
 				INFOPLIST_FILE = "apolloschurchapp-tvOS/Info.plist";
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
 				LIBRARY_SEARCH_PATHS = (
 					"$(inherited)",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
 				);
 				OTHER_LDFLAGS = (
 					"-ObjC",
@@ -2273,14 +2144,11 @@
 					"$(SRCROOT)/../node_modules/rn-fetch-blob/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-maps/lib/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-passkit-wallet/ios/RNPassKit",
-					"$(SRCROOT)/../node_modules/@react-native-community/async-storage/ios",
-					"$(SRCROOT)/../node_modules/react-native-gesture-handler/ios/**",
 				);
 				INFOPLIST_FILE = "apolloschurchapp-tvOSTests/Info.plist";
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @loader_path/Frameworks";
 				LIBRARY_SEARCH_PATHS = (
 					"$(inherited)",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
 				);
 				OTHER_LDFLAGS = (
 					"-ObjC",
@@ -2323,14 +2191,11 @@
 					"$(SRCROOT)/../node_modules/rn-fetch-blob/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-maps/lib/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-passkit-wallet/ios/RNPassKit",
-					"$(SRCROOT)/../node_modules/@react-native-community/async-storage/ios",
-					"$(SRCROOT)/../node_modules/react-native-gesture-handler/ios/**",
 				);
 				INFOPLIST_FILE = "apolloschurchapp-tvOSTests/Info.plist";
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @loader_path/Frameworks";
 				LIBRARY_SEARCH_PATHS = (
 					"$(inherited)",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
 				);
 				OTHER_LDFLAGS = (
 					"-ObjC",
diff --git a/apolloschurchapp/ios/apolloschurchapp/Info.plist b/apolloschurchapp/ios/apolloschurchapp/Info.plist
index 444c814..ae6d8ca 100644
--- a/apolloschurchapp/ios/apolloschurchapp/Info.plist
+++ b/apolloschurchapp/ios/apolloschurchapp/Info.plist
@@ -17,7 +17,7 @@
 	<key>CFBundlePackageType</key>
 	<string>APPL</string>
 	<key>CFBundleShortVersionString</key>
-	<string>1.1.0</string>
+	<string>1.1.0-beta.2</string>
 	<key>CFBundleSignature</key>
 	<string>????</string>
 	<key>CFBundleURLTypes</key>
@@ -30,7 +30,7 @@
 		</dict>
 	</array>
 	<key>CFBundleVersion</key>
-	<string>20</string>
+	<string>18</string>
 	<key>ITSAppUsesNonExemptEncryption</key>
 	<false />
 	<key>LSRequiresIPhoneOS</key>
diff --git a/apolloschurchapp/ios/apolloschurchappTests/Info.plist b/apolloschurchapp/ios/apolloschurchappTests/Info.plist
index a6cb25e..edd5369 100644
--- a/apolloschurchapp/ios/apolloschurchappTests/Info.plist
+++ b/apolloschurchapp/ios/apolloschurchappTests/Info.plist
@@ -15,10 +15,10 @@
 	<key>CFBundlePackageType</key>
 	<string>BNDL</string>
 	<key>CFBundleShortVersionString</key>
-	<string>1.1.0</string>
+	<string>1.1.0-beta.2</string>
 	<key>CFBundleSignature</key>
 	<string>????</string>
 	<key>CFBundleVersion</key>
-	<string>19</string>
+	<string>17</string>
 </dict>
 </plist>
diff --git a/apolloschurchapp/jest.setup.js b/apolloschurchapp/jest.setup.js
index 946e5e0..d15cab6 100644
--- a/apolloschurchapp/jest.setup.js
+++ b/apolloschurchapp/jest.setup.js
@@ -1,5 +1,4 @@
 import React from 'react';
-import { NativeModules } from 'react-native';
 // We ran into an issue where SafeAreaView would break jest tests.
 jest.mock('react-navigation', () => {
   const ActualNavigation = require.requireActual('react-navigation');
@@ -88,12 +87,3 @@ jest.mock('NativeEventEmitter');
 jest.mock('react-native-maps');
 jest.mock('DatePickerIOS', () => 'DatePicker');
 jest.mock('./src/client/index');
-
-NativeModules.RNGestureHandlerModule = {
-  attachGestureHandler: jest.fn(),
-  createGestureHandler: jest.fn(),
-  dropGestureHandler: jest.fn(),
-  updateGestureHandler: jest.fn(),
-  State: {},
-  Directions: {},
-};
diff --git a/apolloschurchapp/metro.config.js b/apolloschurchapp/metro.config.js
index 11ca48b..9b60d7a 100644
--- a/apolloschurchapp/metro.config.js
+++ b/apolloschurchapp/metro.config.js
@@ -32,7 +32,6 @@ const sharedNativeModules = [
   'react-native-video',
   'react-native-video-controls',
   'react-native-airplay-btn',
-  'react-navigation',
 ];
 
 module.exports = {
diff --git a/apolloschurchapp/package.json b/apolloschurchapp/package.json
index 733936a..6d346cd 100644
--- a/apolloschurchapp/package.json
+++ b/apolloschurchapp/package.json
@@ -1,8 +1,9 @@
 {
   "name": "apolloschurchapp",
-  "version": "1.1.0",
+  "version": "1.1.0-beta.2",
   "private": true,
   "devDependencies": {
+    "@apollosproject/ui-storybook": "^0.8.6",
     "codecov": "3.0.2",
     "get-dev-paths": "^0.1.0",
     "jest": "^24.8.0",
@@ -42,7 +43,7 @@
     "preset": "react-native",
     "collectCoverage": true,
     "transformIgnorePatterns": [
-      "node_modules/(?!((jest-)?react-native|rn-*|react-clone-referenced-element|react-navigation|@react-navigation|@apollosproject))"
+      "node_modules/(?!((jest-)?react-native|rn-*|react-clone-referenced-element|react-navigation|@apollosproject))"
     ],
     "testMatch": [
       "<rootDir>/src/**/?(*.)(test|tests).{js,jsx,mjs}"
@@ -58,17 +59,16 @@
     ]
   },
   "dependencies": {
-    "@apollosproject/ui-analytics": "^1.1.0",
-    "@apollosproject/ui-auth": "^1.1.0",
-    "@apollosproject/ui-htmlview": "^1.1.0",
-    "@apollosproject/ui-kit": "^1.1.0",
-    "@apollosproject/ui-media-player": "^1.1.0",
-    "@apollosproject/ui-notifications": "^1.1.0",
-    "@apollosproject/ui-onboarding": "^1.1.0",
-    "@apollosproject/ui-passes": "^1.1.0",
-    "@apollosproject/ui-scripture": "^1.1.0",
-    "@apollosproject/ui-storybook": "^1.1.0",
-    "@react-native-community/async-storage": "^1.5.1",
+    "@apollosproject/ui-analytics": "^1.1.0-beta.2",
+    "@apollosproject/ui-auth": "^1.1.0-beta.2",
+    "@apollosproject/ui-htmlview": "^1.1.0-beta.2",
+    "@apollosproject/ui-kit": "^1.1.0-beta.2",
+    "@apollosproject/ui-media-player": "^1.1.0-beta.2",
+    "@apollosproject/ui-notifications": "^1.1.0-beta.2",
+    "@apollosproject/ui-onboarding": "^1.1.0-beta.2",
+    "@apollosproject/ui-passes": "^1.1.0-beta.2",
+    "@apollosproject/ui-scripture": "^1.1.0-beta.2",
+    "@apollosproject/ui-storybook": "^1.1.0-beta.2",
     "apollo-cache-inmemory": "1.5.1",
     "apollo-cache-persist": "0.1.1",
     "apollo-client": "2.5.1",
@@ -93,8 +93,6 @@
     "react-native-airplay-btn": "^1.0.6",
     "react-native-config": "^0.11.7",
     "react-native-device-info": "^2.1.2",
-    "react-native-geolocation-service": "^3.0.0",
-    "react-native-gesture-handler": "^1.3.0",
     "react-native-image-picker": "0.28.0",
     "react-native-linear-gradient": "^2.5.4",
     "react-native-maps": "^0.24.2",
@@ -103,13 +101,14 @@
     "react-native-passkit-wallet": "^0.1.4",
     "react-native-safari-view": "2.1.0",
     "react-native-safe-area-view": "0.13.1",
-    "react-native-screens": "^1.0.0-alpha.22",
+    "react-native-screens": "^1.0.0-alpha.11",
     "react-native-splash-screen": "^3.1.1",
     "react-native-svg": "^9.4.0",
     "react-native-video": "^4.4.1",
     "react-native-video-controls": "2.2.3",
     "react-native-webview": "^5.2.0",
-    "react-navigation": "^3.11.0",
+    "react-navigation": "2.18.3",
+    "react-navigation-tabs": "0.6.0",
     "recompose": "^0.30.0",
     "rn-fetch-blob": "^0.10.15",
     "stream": "^0.0.2",
diff --git a/apolloschurchapp/src/client/cache.js b/apolloschurchapp/src/client/cache.js
index 862639f..5b4bfd5 100644
--- a/apolloschurchapp/src/client/cache.js
+++ b/apolloschurchapp/src/client/cache.js
@@ -2,7 +2,7 @@ import {
   InMemoryCache,
   IntrospectionFragmentMatcher,
 } from 'apollo-cache-inmemory';
-import AsyncStorage from '@react-native-community/async-storage';
+import { AsyncStorage } from 'react-native';
 import { CachePersistor } from 'apollo-cache-persist';
 import gql from 'graphql-tag';
 import Config from 'react-native-config';
diff --git a/apolloschurchapp/src/client/fragmentTypes.json b/apolloschurchapp/src/client/fragmentTypes.json
index 6c35859..f6404a3 100644
--- a/apolloschurchapp/src/client/fragmentTypes.json
+++ b/apolloschurchapp/src/client/fragmentTypes.json
@@ -1 +1 @@
-{"__schema":{"types":[{"kind":"INTERFACE","name":"Node","possibleTypes":[{"name":"ContentChannel"},{"name":"Person"},{"name":"Campus"},{"name":"Scripture"},{"name":"Pass"},{"name":"UniversalContentItem"},{"name":"DevotionalContentItem"},{"name":"MediaContentItem"},{"name":"ContentSeriesContentItem"},{"name":"WeekendContentItem"},{"name":"ActionListFeature"},{"name":"TextFeature"},{"name":"ScriptureFeature"}]},{"kind":"INTERFACE","name":"ContentItem","possibleTypes":[{"name":"UniversalContentItem"},{"name":"DevotionalContentItem"},{"name":"MediaContentItem"},{"name":"ContentSeriesContentItem"},{"name":"WeekendContentItem"}]},{"kind":"INTERFACE","name":"Media","possibleTypes":[{"name":"ImageMedia"},{"name":"VideoMedia"},{"name":"AudioMedia"}]},{"kind":"INTERFACE","name":"MediaSource","possibleTypes":[{"name":"ImageMediaSource"},{"name":"VideoMediaSource"},{"name":"AudioMediaSource"}]},{"kind":"INTERFACE","name":"Sharable","possibleTypes":[{"name":"SharableContentItem"},{"name":"SharableFeature"}]},{"kind":"INTERFACE","name":"Feature","possibleTypes":[{"name":"ActionListFeature"},{"name":"TextFeature"},{"name":"ScriptureFeature"}]}]}}
\ No newline at end of file
+{"__schema":{"types":[{"kind":"INTERFACE","name":"Node","possibleTypes":[{"name":"ContentChannel"},{"name":"Person"},{"name":"Campus"},{"name":"Scripture"},{"name":"Pass"},{"name":"UniversalContentItem"},{"name":"DevotionalContentItem"},{"name":"MediaContentItem"},{"name":"ContentSeriesContentItem"},{"name":"WeekendContentItem"},{"name":"ActionListFeature"},{"name":"TextFeature"},{"name":"ScriptureFeature"}]},{"kind":"INTERFACE","name":"ContentItem","possibleTypes":[{"name":"UniversalContentItem"},{"name":"DevotionalContentItem"},{"name":"MediaContentItem"},{"name":"ContentSeriesContentItem"},{"name":"WeekendContentItem"}]},{"kind":"INTERFACE","name":"Media","possibleTypes":[{"name":"ImageMedia"},{"name":"VideoMedia"},{"name":"AudioMedia"}]},{"kind":"INTERFACE","name":"MediaSource","possibleTypes":[{"name":"ImageMediaSource"},{"name":"VideoMediaSource"},{"name":"AudioMediaSource"}]},{"kind":"INTERFACE","name":"Sharable","possibleTypes":[{"name":"SharableContentItem"}]},{"kind":"INTERFACE","name":"Feature","possibleTypes":[{"name":"ActionListFeature"},{"name":"TextFeature"},{"name":"ScriptureFeature"}]}]}}
\ No newline at end of file
diff --git a/apolloschurchapp/src/client/index.js b/apolloschurchapp/src/client/index.js
index fb7ca59..c473190 100644
--- a/apolloschurchapp/src/client/index.js
+++ b/apolloschurchapp/src/client/index.js
@@ -4,24 +4,12 @@ import { ApolloProvider } from 'react-apollo';
 import { ApolloClient } from 'apollo-client';
 import { ApolloLink } from 'apollo-link';
 
-import { authLink, buildErrorLink } from '@apollosproject/ui-auth';
+import { authLink } from '@apollosproject/ui-auth';
 import { resolvers, schema, defaults } from '../store';
-import NavigationService from '../NavigationService';
 import httpLink from './httpLink';
 import cache, { ensureCacheHydration, MARK_CACHE_LOADED } from './cache';
 
-const goToAuth = () => NavigationService.navigate('Auth');
-const wipeData = () => cache.writeData({ data: defaults });
-
-let resetStore;
-const onAuthError = () => {
-  resetStore();
-  goToAuth();
-};
-
-const errorLink = buildErrorLink(onAuthError);
-
-const link = ApolloLink.from([authLink, errorLink, httpLink]);
+const link = ApolloLink.from([authLink, httpLink]);
 
 export const client = new ApolloClient({
   link,
@@ -32,13 +20,9 @@ export const client = new ApolloClient({
   typeDefs: schema,
 });
 
-// Hack to give auth link access to method on client;
-// eslint-disable-next-line prefer-destructuring
-resetStore = client.resetStore;
-
-wipeData();
+cache.writeData({ data: defaults });
 // Ensure that media player still works after logout.
-client.onResetStore(() => wipeData());
+client.onResetStore(() => cache.writeData({ data: defaults }));
 
 class ClientProvider extends PureComponent {
   static propTypes = {
diff --git a/apolloschurchapp/src/ui/ShareContentButtonConnected/getShareContent.js b/apolloschurchapp/src/content-single/ActionContainer/getShareContent.js
similarity index 100%
rename from apolloschurchapp/src/ui/ShareContentButtonConnected/getShareContent.js
rename to apolloschurchapp/src/content-single/ActionContainer/getShareContent.js
diff --git a/apolloschurchapp/src/content-single/ActionContainer/index.js b/apolloschurchapp/src/content-single/ActionContainer/index.js
index 7b64e05..c6d8092 100644
--- a/apolloschurchapp/src/content-single/ActionContainer/index.js
+++ b/apolloschurchapp/src/content-single/ActionContainer/index.js
@@ -1,10 +1,10 @@
 import React from 'react';
 import { Platform, View } from 'react-native';
 import PropTypes from 'prop-types';
-import ShareContentButtonConnected from 'apolloschurchapp/src/ui/ShareContentButtonConnected';
+import ShareButton from 'apolloschurchapp/src/ui/ShareButton';
 
 import { SideBySideView, styled } from '@apollosproject/ui-kit';
-import LikeContentButtonConnected from 'apolloschurchapp/src/ui/LikeContentButtonConnected';
+import LikeButton from 'apolloschurchapp/src/ui/LikeButton';
 import { MediaPlayerSpacer } from '@apollosproject/ui-media-player';
 
 const PositioningView = styled(({ theme }) => ({
@@ -22,8 +22,8 @@ const ActionContainer = ({ itemId }) => (
   <Container>
     <MediaPlayerSpacer>
       <PositioningView>
-        <LikeContentButtonConnected itemId={itemId} />
-        <ShareContentButtonConnected itemId={itemId} />
+        <LikeButton itemId={itemId} />
+        <ShareButton itemId={itemId} />
       </PositioningView>
     </MediaPlayerSpacer>
   </Container>
diff --git a/apolloschurchapp/src/content-single/ContentSingle.js b/apolloschurchapp/src/content-single/ContentSingle.js
index 817af65..8bed0fc 100644
--- a/apolloschurchapp/src/content-single/ContentSingle.js
+++ b/apolloschurchapp/src/content-single/ContentSingle.js
@@ -12,7 +12,6 @@ import GET_CONTENT_ITEM from './getContentItem';
 
 import DevotionalContentItem from './DevotionalContentItem';
 import UniversalContentItem from './UniversalContentItem';
-import WeekendContentItem from './WeekendContentItem';
 
 import NavigationHeader from './NavigationHeader';
 
@@ -43,7 +42,6 @@ class ContentSingle extends PureComponent {
     if (!__typename && this.itemId) {
       [__typename] = this.itemId.split(':');
     }
-
     switch (__typename) {
       case 'DevotionalContentItem':
         return (
@@ -54,15 +52,6 @@ class ContentSingle extends PureComponent {
             error={error}
           />
         );
-      case 'WeekendContentItem':
-        return (
-          <WeekendContentItem
-            id={this.itemId}
-            content={content}
-            loading={loading}
-            error={error}
-          />
-        );
       case 'UniversalContentItem':
       default:
         return (
diff --git a/apolloschurchapp/src/content-single/Features/ScriptureFeature.js b/apolloschurchapp/src/content-single/Features/ScriptureFeature.js
index dc08881..75e15e0 100644
--- a/apolloschurchapp/src/content-single/Features/ScriptureFeature.js
+++ b/apolloschurchapp/src/content-single/Features/ScriptureFeature.js
@@ -3,20 +3,9 @@ import PropTypes from 'prop-types';
 
 import { ActionCard } from '@apollosproject/ui-kit';
 import { ScriptureItem } from '@apollosproject/ui-scripture';
-import ShareContentButtonConnected from 'apolloschurchapp/src/ui/ShareContentButtonConnected';
 
-const ScriptureFeature = ({
-  scriptures,
-  sharing: { message } = {},
-  isLoading,
-  contentId,
-}) => (
-  <ActionCard
-    icon={'text'}
-    action={
-      <ShareContentButtonConnected message={message} itemId={contentId} />
-    }
-  >
+const ScriptureFeature = ({ scriptures, isLoading }) => (
+  <ActionCard icon={'text'}>
     {scriptures.map(({ copyright, reference, html, id }) => (
       <ScriptureItem
         key={id}
@@ -39,15 +28,10 @@ ScriptureFeature.propTypes = {
       copyright: PropTypes.string,
     })
   ),
-  sharing: PropTypes.shape({ message: PropTypes.string }),
-  contentId: PropTypes.string.isRequired,
 };
 
 export const SCRIPTURE_FEATURE_FRAGMENT = `
 fragment ScriptureFeatureFragment on ScriptureFeature {
-  sharing {
-    message
-  }
   scriptures {
     id
     html
diff --git a/apolloschurchapp/src/content-single/Features/TextFeature.js b/apolloschurchapp/src/content-single/Features/TextFeature.js
index b4bb2a6..69fe50e 100644
--- a/apolloschurchapp/src/content-single/Features/TextFeature.js
+++ b/apolloschurchapp/src/content-single/Features/TextFeature.js
@@ -2,21 +2,16 @@ import React from 'react';
 import PropTypes from 'prop-types';
 
 import { ActionCard, BodyText } from '@apollosproject/ui-kit';
-import ShareContentButtonConnected from 'apolloschurchapp/src/ui/ShareContentButtonConnected';
+import ShareButton from 'apolloschurchapp/src/ui/ShareButton';
 
-const TextFeature = ({ body, sharing: { message } = {}, contentId }) => (
-  <ActionCard
-    action={
-      <ShareContentButtonConnected message={message} itemId={contentId} />
-    }
-  >
+const TextFeature = ({ body, contentId }) => (
+  <ActionCard action={<ShareButton message={body} itemId={contentId} />}>
     <BodyText>{body}</BodyText>
   </ActionCard>
 );
 
 TextFeature.propTypes = {
   body: PropTypes.string.isRequired,
-  sharing: PropTypes.shape({ message: PropTypes.string }),
   contentId: PropTypes.string.isRequired,
 };
 
@@ -24,9 +19,6 @@ export const TEXT_FEATURE_FRAGMENT = `
 fragment TextFeatureFragment on TextFeature {
   body
   id
-  sharing {
-    message
-  }
 }
 `;
 
diff --git a/apolloschurchapp/src/content-single/Features/index.js b/apolloschurchapp/src/content-single/Features/index.js
index e345e37..365a694 100644
--- a/apolloschurchapp/src/content-single/Features/index.js
+++ b/apolloschurchapp/src/content-single/Features/index.js
@@ -1,7 +1,7 @@
 import React from 'react';
 import PropTypes from 'prop-types';
 import { Query } from 'react-apollo';
-import { ErrorCard, H3, PaddedView } from '@apollosproject/ui-kit';
+import { ErrorCard } from '@apollosproject/ui-kit';
 import { get } from 'lodash';
 import TextFeature from './TextFeature';
 import ScriptureFeature from './ScriptureFeature';
@@ -27,22 +27,12 @@ const Features = ({ contentId }) => {
         if (loading) return null;
 
         const features = get(node, 'features', []);
-        if (!features || !features.length) return null;
-
-        return (
-          <PaddedView horizontal={false}>
-            <PaddedView vertical={false}>
-              <H3 padded>Engage</H3>
-            </PaddedView>
-            {features.map(({ __typename, ...feature }) => {
-              const Feature = FEATURE_MAP[__typename];
-              if (!Feature) return null;
-              return (
-                <Feature key={feature.id} {...feature} contentId={contentId} />
-              );
-            })}
-          </PaddedView>
-        );
+        return features.map(({ __typename, ...feature }) => {
+          const Feature = FEATURE_MAP[__typename];
+          return (
+            <Feature key={feature.id} {...feature} contentId={contentId} />
+          );
+        });
       }}
     </Query>
   );
diff --git a/apolloschurchapp/src/content-single/HorizontalContentFeed/index.js b/apolloschurchapp/src/content-single/HorizontalContentFeed/index.js
index e7740ba..30a1593 100644
--- a/apolloschurchapp/src/content-single/HorizontalContentFeed/index.js
+++ b/apolloschurchapp/src/content-single/HorizontalContentFeed/index.js
@@ -4,9 +4,11 @@ import PropTypes from 'prop-types';
 import { withNavigation } from 'react-navigation';
 import { Query } from 'react-apollo';
 
-import { HorizontalTileFeed, TouchableScale } from '@apollosproject/ui-kit';
-
-import HorizontalContentCardConnected from '../../ui/HorizontalContentCardConnected';
+import {
+  CardTile,
+  HorizontalTileFeed,
+  TouchableScale,
+} from '@apollosproject/ui-kit';
 
 import GET_HORIZONTAL_CONTENT from './getHorizontalContent';
 
@@ -32,9 +34,18 @@ class HorizontalContentFeed extends Component {
     });
   };
 
-  renderItem = ({ item }) => (
+  renderItem = ({ item, index }) => (
     <TouchableScale onPress={() => this.handleOnPressItem(item)}>
-      <HorizontalContentCardConnected contentId={get(item, 'id', '')} />
+      <CardTile
+        number={index + 1}
+        title={get(item, 'title', '')}
+        /*
+         * These are props that are not yet being passed in the data.
+         * We will need to make sure they get added back when that data is available.
+         * byLine={item.content.speaker}
+         * date={item.meta.date}
+         */
+      />
     </TouchableScale>
   );
 
@@ -55,23 +66,12 @@ class HorizontalContentFeed extends Component {
     ).map((edge) => edge.node);
 
     const content = siblingContent.length ? siblingContent : childContent;
-    const currentIndex = content.findIndex(
-      ({ id }) => id === this.props.contentId
-    );
-    const initialScrollIndex = currentIndex === -1 ? 0 : currentIndex;
 
     return content && content.length ? (
       <HorizontalTileFeed
         content={content}
         loadingStateObject={loadingStateObject}
         renderItem={this.renderItem}
-        initialScrollIndex={initialScrollIndex}
-        getItemLayout={(itemData, index) => ({
-          // We need to pass this function so that initialScrollIndex will work.
-          length: 240,
-          offset: 240 * index,
-          index,
-        })}
       />
     ) : null;
   };
diff --git a/apolloschurchapp/src/content-single/MediaControls/index.js b/apolloschurchapp/src/content-single/MediaControls/index.js
index a36e7d9..c3918f0 100644
--- a/apolloschurchapp/src/content-single/MediaControls/index.js
+++ b/apolloschurchapp/src/content-single/MediaControls/index.js
@@ -5,46 +5,47 @@ import { View } from 'react-native';
 import { get } from 'lodash';
 
 import { PLAY_VIDEO } from '@apollosproject/ui-media-player';
-import {
-  styled,
-  TouchableScale,
-  MediaThumbnail,
-  MediaThumbnailIcon,
-  MediaThumbnailItem,
-  H6,
-} from '@apollosproject/ui-kit';
+import { Icon, styled, Button } from '@apollosproject/ui-kit';
 import { WebBrowserConsumer } from 'apolloschurchapp/src/ui/WebBrowser';
 import GET_CONTENT_MEDIA from './getContentMedia';
 
+const buttonSizeDifferential = 4;
+
+const MediaIcon = Icon; // todo: add back styles
+const MediaButton = styled(({ theme }) => ({
+  width: theme.sizing.baseUnit * buttonSizeDifferential,
+  height: theme.sizing.baseUnit * buttonSizeDifferential,
+  borderRadius: theme.sizing.baseUnit * (buttonSizeDifferential / 2),
+  backgroundColor: theme.colors.secondary,
+  justifyContent: 'center',
+  alignItems: 'center',
+  borderWidth: 0, // remove default button border
+}))(Button);
+
+/** MediaButtton "border styles" live in a seperate component so that Android places it's elevation
+ * shadow in the right place. */
+const MediaButtonBorder = styled(({ theme }) => ({
+  borderRadius:
+    theme.sizing.baseUnit * (buttonSizeDifferential / 2) +
+    buttonSizeDifferential, // this is eqivalent to the MediaButton size above + the padding below
+  padding: buttonSizeDifferential, // padding + backgroundColor = MediaButton + "borderStyles"
+  backgroundColor: theme.colors.paper,
+}))(View);
+
 const Container = styled(({ theme }) => ({
   flexDirection: 'row',
-  alignItems: 'flex-start',
-  justifyContent: 'flex-start',
-  marginTop: -(theme.sizing.baseUnit * 2.5),
+  alignItems: 'center',
+  justifyContent: 'center',
+  marginTop:
+    -theme.sizing.baseUnit * (buttonSizeDifferential / 2) -
+    buttonSizeDifferential, // MediaButton size / 2 + border
 }))(View);
 
-const StyledMediaThumbnail = styled({ marginVertical: 0 })(MediaThumbnail);
-
 class MediaControls extends PureComponent {
   static propTypes = {
     contentId: PropTypes.string,
   };
 
-  renderPlayButton = ({ action, coverImageSources }) => (
-    <Container>
-      <TouchableScale onPress={action}>
-        <StyledMediaThumbnail image={coverImageSources}>
-          <MediaThumbnailItem centered>
-            <MediaThumbnailIcon name="play" />
-          </MediaThumbnailItem>
-          <MediaThumbnailItem centered bottom>
-            <H6 padded>Play</H6>
-          </MediaThumbnailItem>
-        </StyledMediaThumbnail>
-      </TouchableScale>
-    </Container>
-  );
-
   renderMedia = ({
     videoSource,
     coverImageSources,
@@ -52,32 +53,47 @@ class MediaControls extends PureComponent {
     parentChannelName,
   }) => (
     <Mutation mutation={PLAY_VIDEO}>
-      {(play) =>
-        this.renderPlayButton({
-          action: () =>
-            play({
-              variables: {
-                mediaSource: videoSource,
-                posterSources: coverImageSources,
-                title,
-                isVideo: true,
-                artist: parentChannelName,
-              },
-            }),
-          coverImageSources,
-        })
-      }
+      {(play) => (
+        <Container>
+          <MediaButtonBorder>
+            <MediaButton
+              type="primary"
+              onPress={() =>
+                play({
+                  variables: {
+                    mediaSource: videoSource,
+                    posterSources: coverImageSources,
+                    title,
+                    isVideo: true,
+                    artist: parentChannelName,
+                  },
+                })
+              }
+              useForeground
+            >
+              <MediaIcon name="play" />
+            </MediaButton>
+          </MediaButtonBorder>
+        </Container>
+      )}
     </Mutation>
   );
 
-  renderWebView = ({ webViewUrl, coverImageSources }) => (
+  renderWebView = ({ webViewUrl }) => (
     <WebBrowserConsumer>
-      {(openUrl) =>
-        this.renderPlayButton({
-          action: () => openUrl(webViewUrl),
-          coverImageSources,
-        })
-      }
+      {(openUrl) => (
+        <Container>
+          <MediaButtonBorder>
+            <MediaButton
+              type="primary"
+              onPress={() => openUrl(webViewUrl)}
+              useForeground
+            >
+              <MediaIcon name="play" />
+            </MediaButton>
+          </MediaButtonBorder>
+        </Container>
+      )}
     </WebBrowserConsumer>
   );
 
@@ -123,7 +139,6 @@ class MediaControls extends PureComponent {
     if (isLive && get(liveStream, 'webViewUrl')) {
       return this.renderWebView({
         webViewUrl: liveStream.webViewUrl,
-        coverImageSources,
       });
     }
 
@@ -141,7 +156,6 @@ class MediaControls extends PureComponent {
     return (
       <Query
         query={GET_CONTENT_MEDIA}
-        fetchPolicy="cache-and-network"
         variables={{ contentId: this.props.contentId }}
       >
         {this.renderControls}
diff --git a/apolloschurchapp/src/content-single/NavigationHeader.js b/apolloschurchapp/src/content-single/NavigationHeader.js
index 15b9d7b..a2e3204 100644
--- a/apolloschurchapp/src/content-single/NavigationHeader.js
+++ b/apolloschurchapp/src/content-single/NavigationHeader.js
@@ -4,9 +4,24 @@ import { ModalViewHeader } from '@apollosproject/ui-kit';
 
 const NavigationHeader = ({ scene, navigation }) => {
   let onBack = null;
-  if (scene.index > 0) onBack = () => navigation.pop();
+  if (scene.index > 0) onBack = () => navigation.goBack();
   const onClose = () => {
-    navigation.goBack();
+    // Since we're dealing with nested navigators, we have to trigger two actions:
+    // One action that pops us to the top of the modal's navigation history
+    // Another action that pops us one more level, which triggers the modal to close.
+    //
+    // FWIW, calling something like `.pop(scenes.length + 1)` or something does not work,
+    // as that results in the same thing as `.popToTop()`. React-Navigation must have some special-case
+    // handling for calling `.pop()` at the top of a nested navigators stack.
+    //
+    // Because react (or redux?) chains renders, this still results in only one clean animation!
+    //
+    // This "double pop" is only needed when we are already deep in a navigation stack.
+    // In ReactNavigation, we could look at using "goBack('ContentSingle')"
+    if (scene.index > 0) {
+      navigation.popToTop();
+    }
+    navigation.pop();
   };
 
   return <ModalViewHeader onClose={onClose} onBack={onBack} navigationHeader />;
diff --git a/apolloschurchapp/src/content-single/UniversalContentItem/index.js b/apolloschurchapp/src/content-single/UniversalContentItem/index.js
index 14db7a4..ccc798e 100644
--- a/apolloschurchapp/src/content-single/UniversalContentItem/index.js
+++ b/apolloschurchapp/src/content-single/UniversalContentItem/index.js
@@ -8,7 +8,6 @@ import {
   BackgroundView,
   PaddedView,
   H2,
-  StretchyView,
 } from '@apollosproject/ui-kit';
 import MediaControls from '../MediaControls';
 import HTMLContent from '../HTMLContent';
@@ -21,29 +20,23 @@ const UniversalContentItem = ({ content, loading }) => {
   const coverImageSources = get(content, 'coverImage.sources', []);
   return (
     <BackgroundView>
-      <StretchyView>
-        {({ Stretchy, ...scrollViewProps }) => (
-          <FlexedScrollView {...scrollViewProps}>
-            {coverImageSources.length || loading ? (
-              <Stretchy>
-                <GradientOverlayImage
-                  isLoading={!coverImageSources.length && loading}
-                  source={coverImageSources}
-                />
-              </Stretchy>
-            ) : null}
-            <MediaControls contentId={content.id} />
-            <PaddedView vertical={false}>
-              <H2 padded isLoading={!content.title && loading}>
-                {content.title}
-              </H2>
-              <HTMLContent contentId={content.id} />
-            </PaddedView>
-            <Features contentId={content.id} />
-            <HorizontalContentFeed contentId={content.id} />
-          </FlexedScrollView>
-        )}
-      </StretchyView>
+      <FlexedScrollView>
+        {coverImageSources.length || loading ? (
+          <GradientOverlayImage
+            isLoading={!coverImageSources.length && loading}
+            source={coverImageSources}
+          />
+        ) : null}
+        <MediaControls contentId={content.id} />
+        <PaddedView>
+          <H2 padded isLoading={!content.title && loading}>
+            {content.title}
+          </H2>
+          <HTMLContent contentId={content.id} />
+          <Features contentId={content.id} />
+        </PaddedView>
+        <HorizontalContentFeed contentId={content.id} />
+      </FlexedScrollView>
     </BackgroundView>
   );
 };
diff --git a/apolloschurchapp/src/content-single/WeekendContentItem/index.js b/apolloschurchapp/src/content-single/WeekendContentItem/index.js
deleted file mode 100644
index f48b63a..0000000
--- a/apolloschurchapp/src/content-single/WeekendContentItem/index.js
+++ /dev/null
@@ -1,91 +0,0 @@
-import React from 'react';
-import { ScrollView, Dimensions } from 'react-native';
-import { get } from 'lodash';
-import PropTypes from 'prop-types';
-import {
-  styled,
-  GradientOverlayImage,
-  BackgroundView,
-  PaddedView,
-  H2,
-  StretchyView,
-  ThemeMixin,
-  ThemeConsumer,
-  CardLabel,
-} from '@apollosproject/ui-kit';
-import MediaControls from '../MediaControls';
-import HTMLContent from '../HTMLContent';
-import HorizontalContentFeed from '../HorizontalContentFeed';
-import Features from '../Features';
-
-const FlexedScrollView = styled({ flex: 1 })(ScrollView);
-
-const Header = styled(({ hasMedia, theme }) => ({
-  paddingTop: Dimensions.get('window').width * 0.5, // for some reason % based padding still is buggy
-  alignItems: 'flex-start',
-  paddingBottom: hasMedia ? theme.sizing.baseUnit : theme.sizing.baseUnit * 2,
-  // backgroundColor: theme.colors.primary,
-}))(PaddedView);
-
-const WeekendContentItem = ({ content, loading }) => {
-  const coverImageSources = get(content, 'coverImage.sources', []);
-  return (
-    <ThemeMixin mixin={content.theme || {}}>
-      <ThemeConsumer>
-        {(theme) => (
-          <BackgroundView>
-            <StretchyView>
-              {({ Stretchy, ...scrollViewProps }) => (
-                <FlexedScrollView {...scrollViewProps}>
-                  <Header hasMedia={content.videos && content.videos.sources}>
-                    <ThemeMixin mixin={{ type: 'dark' }}>
-                      {coverImageSources.length || loading ? (
-                        <Stretchy
-                          background
-                          style={{ backgroundColor: theme.colors.primary }}
-                        >
-                          <GradientOverlayImage
-                            isLoading={!coverImageSources.length && loading}
-                            overlayColor={theme.colors.primary}
-                            overlayType="featured"
-                            source={coverImageSources}
-                          />
-                        </Stretchy>
-                      ) : null}
-                      <CardLabel
-                        title={
-                          content.parentChannel && content.parentChannel.name
-                        }
-                      />
-                      <H2 padded isLoading={!content.title && loading}>
-                        {content.title}
-                      </H2>
-                      <HTMLContent contentId={content.id} />
-                    </ThemeMixin>
-                  </Header>
-                  <MediaControls contentId={content.id} />
-                  <Features contentId={content.id} />
-                  <HorizontalContentFeed contentId={content.id} />
-                </FlexedScrollView>
-              )}
-            </StretchyView>
-          </BackgroundView>
-        )}
-      </ThemeConsumer>
-    </ThemeMixin>
-  );
-};
-
-WeekendContentItem.propTypes = {
-  content: PropTypes.shape({
-    __typename: PropTypes.string,
-    parentChannel: PropTypes.shape({
-      name: PropTypes.string,
-    }),
-    id: PropTypes.string,
-    title: PropTypes.string,
-  }),
-  loading: PropTypes.bool,
-};
-
-export default WeekendContentItem;
diff --git a/apolloschurchapp/src/content-single/getContentItem.js b/apolloschurchapp/src/content-single/getContentItem.js
index 8da8e36..55676c9 100644
--- a/apolloschurchapp/src/content-single/getContentItem.js
+++ b/apolloschurchapp/src/content-single/getContentItem.js
@@ -36,11 +36,6 @@ export const CONTENT_ITEM_FRAGMENT = gql`
         uri
       }
     }
-    ... on WeekendContentItem {
-      liveStream {
-        isLive
-      }
-    }
   }
 `;
 
diff --git a/apolloschurchapp/src/content-single/index.js b/apolloschurchapp/src/content-single/index.js
index 1e5b838..83072a7 100644
--- a/apolloschurchapp/src/content-single/index.js
+++ b/apolloschurchapp/src/content-single/index.js
@@ -10,8 +10,11 @@ const ContentSingleNavigator = createStackNavigator(
     initialRouteName: 'ContentSingle',
     headerMode: 'float',
     headerTransitionPreset: 'fade-in-place',
-    navigationOptions: { header: null },
   }
 );
 
+ContentSingleNavigator.navigationOptions = {
+  header: null,
+};
+
 export default ContentSingleNavigator;
diff --git a/apolloschurchapp/src/index.js b/apolloschurchapp/src/index.js
index 72f8ac1..f3e2939 100644
--- a/apolloschurchapp/src/index.js
+++ b/apolloschurchapp/src/index.js
@@ -1,6 +1,6 @@
 import React from 'react';
 import { StatusBar } from 'react-native';
-import { createStackNavigator, createAppContainer } from 'react-navigation';
+import { createStackNavigator } from 'react-navigation';
 import SplashScreen from 'react-native-splash-screen';
 
 import { BackgroundView, withTheme } from '@apollosproject/ui-kit';
@@ -51,13 +51,11 @@ const AppNavigator = createStackNavigator(
   }
 );
 
-const AppContainer = createAppContainer(AppNavigator);
-
 const App = () => (
   <Providers>
     <BackgroundView>
       <AppStatusBar barStyle="dark-content" />
-      <AppContainer
+      <AppNavigator
         ref={(navigatorRef) => {
           NavigationService.setTopLevelNavigator(navigatorRef);
         }}
diff --git a/apolloschurchapp/src/tabs/connect/ActionBar.js b/apolloschurchapp/src/tabs/connect/ActionBar.js
deleted file mode 100644
index 8708fda..0000000
--- a/apolloschurchapp/src/tabs/connect/ActionBar.js
+++ /dev/null
@@ -1,37 +0,0 @@
-import React from 'react';
-import { ActionBar, ActionBarItem } from '@apollosproject/ui-kit';
-import { withNavigation } from 'react-navigation';
-import PropTypes from 'prop-types';
-import { WebBrowserConsumer } from 'apolloschurchapp/src/ui/WebBrowser';
-
-const Toolbar = ({ navigation }) => (
-  <WebBrowserConsumer>
-    {(openUrl) => (
-      <ActionBar>
-        <ActionBarItem
-          onPress={() => navigation.navigate('Passes')}
-          icon="check"
-          label="Check-in"
-        />
-        <ActionBarItem
-          onPress={() => openUrl('https://apollosrock.newspring.cc/page/186')}
-          icon="download"
-          label="Give"
-        />
-        <ActionBarItem
-          onPress={() => navigation.navigate('TestingControlPanel')}
-          icon="information"
-          label="Test"
-        />
-      </ActionBar>
-    )}
-  </WebBrowserConsumer>
-);
-
-Toolbar.propTypes = {
-  navigation: PropTypes.shape({
-    navigate: PropTypes.func.isRequired,
-  }).isRequired,
-};
-
-export default withNavigation(Toolbar);
diff --git a/apolloschurchapp/src/tabs/connect/ActionTable/index.js b/apolloschurchapp/src/tabs/connect/ActionTable/index.js
index d376af6..c68be5c 100644
--- a/apolloschurchapp/src/tabs/connect/ActionTable/index.js
+++ b/apolloschurchapp/src/tabs/connect/ActionTable/index.js
@@ -40,8 +40,8 @@ const ActionTable = () => (
             onPress={() => openUrl('https://apollosrock.newspring.cc/page/235')}
           >
             <Cell>
+              <CellIcon name="check" />
               <CellText>Find a serving opportunity</CellText>
-              <CellIcon name="arrow-next" />
             </Cell>
           </Touchable>
           <Divider />
@@ -49,8 +49,8 @@ const ActionTable = () => (
             onPress={() => openUrl('https://apollosrock.newspring.cc/page/236')}
           >
             <Cell>
+              <CellIcon name="groups" />
               <CellText>Join a small group</CellText>
-              <CellIcon name="arrow-next" />
             </Cell>
           </Touchable>
           <Divider />
@@ -58,8 +58,8 @@ const ActionTable = () => (
             onPress={() => openUrl('https://apollosrock.newspring.cc/page/233')}
           >
             <Cell>
+              <CellIcon name="share" />
               <CellText>I need prayer</CellText>
-              <CellIcon name="arrow-next" />
             </Cell>
           </Touchable>
           <Divider />
@@ -67,8 +67,8 @@ const ActionTable = () => (
             onPress={() => openUrl('https://apollosrock.newspring.cc/page/186')}
           >
             <Cell>
+              <CellIcon name="download" />
               <CellText>I would like to give</CellText>
-              <CellIcon name="arrow-next" />
             </Cell>
           </Touchable>
         </TableView>
@@ -79,7 +79,6 @@ const ActionTable = () => (
             <Cell>
               <CellIcon name="settings" />
               <CellText>Open Testing Panel</CellText>
-              <CellIcon name="arrow-next" />
             </Cell>
           </Touchable>
         </TableView>
diff --git a/apolloschurchapp/src/tabs/connect/Connect.js b/apolloschurchapp/src/tabs/connect/Connect.js
index 4ba12d4..f3ba0e1 100644
--- a/apolloschurchapp/src/tabs/connect/Connect.js
+++ b/apolloschurchapp/src/tabs/connect/Connect.js
@@ -1,14 +1,51 @@
 import React, { PureComponent } from 'react';
-import { ScrollView } from 'react-native';
-import { SafeAreaView } from 'react-navigation';
+import { ScrollView, SafeAreaView } from 'react-native';
+import { Query } from 'react-apollo';
+import { get } from 'lodash';
 import PropTypes from 'prop-types';
 
-import { BackgroundView } from '@apollosproject/ui-kit';
+import { LoginButton, GET_LOGIN_STATE } from '@apollosproject/ui-auth';
+import {
+  H1,
+  BodyText,
+  Paragraph,
+  BackgroundView,
+  withTheme,
+  styled,
+  Icon,
+  PaddedView,
+} from '@apollosproject/ui-kit';
 import ActionTable from './ActionTable';
-import ActionBar from './ActionBar';
-import UserAvatarHeader from './UserAvatarHeader';
+import Toolbar from './Toolbar';
+import { UserAvatarHeaderConnected } from './UserAvatarHeader';
 import { RecentlyLikedTileFeedConnected } from './RecentlyLikedTileFeed';
 
+const Title = styled(({ theme }) => ({
+  color: theme.colors.primary,
+  paddingBottom: theme.helpers.verticalRhythm(1.5),
+}))(H1);
+
+const BrandIcon = withTheme(({ theme }) => ({
+  name: 'brand-icon',
+  size: theme.sizing.baseUnit * 2.25,
+  marginBottom: theme.sizing.baseUnit,
+  fill: theme.colors.primary,
+}))(Icon);
+
+const Header = styled(({ theme }) => ({
+  paddingBottom: theme.sizing.baseUnit * 1.5,
+  backgroundColor: theme.colors.background.paper,
+  paddingTop: theme.sizing.baseUnit * 4,
+}))(PaddedView);
+
+const StyledLoginButton = styled(({ theme }) => ({
+  marginVertical: theme.sizing.baseUnit,
+}))(LoginButton);
+
+const StyledScrollView = styled(({ theme }) => ({
+  marginVertical: theme.sizing.baseUnit,
+}))(ScrollView);
+
 class Connect extends PureComponent {
   static navigationOptions = () => ({
     title: 'Connect',
@@ -25,14 +62,46 @@ class Connect extends PureComponent {
   render() {
     return (
       <BackgroundView>
-        <SafeAreaView>
-          <ScrollView>
-            <UserAvatarHeader />
-            <ActionBar />
-            <RecentlyLikedTileFeedConnected />
-            <ActionTable />
-          </ScrollView>
-        </SafeAreaView>
+        <Query query={GET_LOGIN_STATE}>
+          {({ data }) => {
+            if (get(data, 'isLoggedIn', false))
+              return (
+                <SafeAreaView>
+                  <StyledScrollView>
+                    <UserAvatarHeaderConnected key="UserAvatarHeaderConnected" />
+                    <RecentlyLikedTileFeedConnected key="RecentlyLikedTileFeedConnected" />
+                    <Toolbar />
+                    <ActionTable />
+                  </StyledScrollView>
+                </SafeAreaView>
+              );
+            return (
+              <SafeAreaView>
+                <ScrollView>
+                  <Header>
+                    <BrandIcon />
+                    <Title>Connect!</Title>
+                    <Paragraph>
+                      <BodyText>
+                        Our mission is to help you connect to others as well as
+                        help you in your walk with Christ.
+                      </BodyText>
+                    </Paragraph>
+                    <Paragraph>
+                      <BodyText>
+                        By joining this community, you will unlock amazing
+                        features like; curated content and devotionals, simple
+                        event registration, and easy online giving!
+                      </BodyText>
+                    </Paragraph>
+                    <StyledLoginButton />
+                  </Header>
+                  <ActionTable />
+                </ScrollView>
+              </SafeAreaView>
+            );
+          }}
+        </Query>
       </BackgroundView>
     );
   }
diff --git a/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeed.js b/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeed.js
index b829473..dc2e2b2 100644
--- a/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeed.js
+++ b/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeed.js
@@ -16,7 +16,7 @@ import {
   withIsLoading,
 } from '@apollosproject/ui-kit';
 
-import HorizontalContentCardConnected from 'apolloschurchapp/src/ui/HorizontalContentCardConnected';
+import ContentCard from 'apolloschurchapp/src/ui/ContentCardConnected';
 
 const RowHeader = styled(({ theme }) => ({
   flexDirection: 'row',
@@ -74,9 +74,11 @@ class RecentlyLikedTileFeed extends Component {
         });
       }}
     >
-      <HorizontalContentCardConnected
+      <ContentCard
         isLoading={item.isLoading}
+        tile
         contentId={item.id}
+        inHorizontalList
       />
     </TouchableScale>
   );
@@ -105,6 +107,7 @@ class RecentlyLikedTileFeed extends Component {
           </AndroidTouchableFix>
         </RowHeader>
         <StyledHorizontalTileFeed
+          initialNumToRender={5}
           content={content}
           renderItem={this.titleImageItem}
           loadingStateObject={this.loadingStateObject}
diff --git a/apolloschurchapp/src/tabs/connect/Toolbar.js b/apolloschurchapp/src/tabs/connect/Toolbar.js
new file mode 100644
index 0000000..159180e
--- /dev/null
+++ b/apolloschurchapp/src/tabs/connect/Toolbar.js
@@ -0,0 +1,33 @@
+import React from 'react';
+import {
+  TableView,
+  Cell,
+  CellIcon,
+  CellText,
+  Touchable,
+} from '@apollosproject/ui-kit';
+import { withNavigation } from 'react-navigation';
+import PropTypes from 'prop-types';
+
+const Toolbar = ({ navigation }) => (
+  <TableView>
+    <Touchable
+      onPress={() => {
+        navigation.navigate('Passes');
+      }}
+    >
+      <Cell>
+        <CellIcon name="check" />
+        <CellText>Check-in</CellText>
+      </Cell>
+    </Touchable>
+  </TableView>
+);
+
+Toolbar.propTypes = {
+  navigation: PropTypes.shape({
+    navigate: PropTypes.func.isRequired,
+  }).isRequired,
+};
+
+export default withNavigation(Toolbar);
diff --git a/apolloschurchapp/src/tabs/connect/UserAvatarHeader.js b/apolloschurchapp/src/tabs/connect/UserAvatarHeader.js
deleted file mode 100644
index 9f1b65a..0000000
--- a/apolloschurchapp/src/tabs/connect/UserAvatarHeader.js
+++ /dev/null
@@ -1,44 +0,0 @@
-import React from 'react';
-import { Query } from 'react-apollo';
-import PropTypes from 'prop-types';
-import { withNavigation } from 'react-navigation';
-
-import { Avatar, H3, styled, PaddedView } from '@apollosproject/ui-kit';
-import GET_USER_PROFILE from './getUserProfile';
-
-const Container = styled({
-  alignItems: 'center',
-  justifyContent: 'center',
-})(PaddedView);
-
-const UserAvatarHeader = ({ navigation }) => (
-  <Query query={GET_USER_PROFILE} fetchPolicy="cache-and-network">
-    {({
-      data: { currentUser: { profile: { photo, firstName } = {} } = {} } = {},
-    }) => (
-      <Container>
-        <PaddedView horizontal={false}>
-          <Avatar
-            source={photo}
-            size="large"
-            buttonIcon="settings"
-            onPressIcon={() => navigation.navigate('UserSettings')}
-          />
-        </PaddedView>
-        <H3>
-          Hello
-          {firstName ? ` ${firstName}` : ''}!
-        </H3>
-      </Container>
-    )}
-  </Query>
-);
-
-UserAvatarHeader.propTypes = {
-  navigation: PropTypes.shape({
-    getParam: PropTypes.func,
-    navigate: PropTypes.func,
-  }),
-};
-
-export default withNavigation(UserAvatarHeader);
diff --git a/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeader.js b/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeader.js
new file mode 100644
index 0000000..caa56cb
--- /dev/null
+++ b/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeader.js
@@ -0,0 +1,68 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import { compose } from 'recompose';
+import { withNavigation } from 'react-navigation';
+
+import UserAvatarView from 'apolloschurchapp/src/ui/UserAvatarView';
+
+import {
+  withIsLoading,
+  Touchable,
+  Icon,
+  withTheme,
+  styled,
+  PaddedView,
+  FlexedView,
+} from '@apollosproject/ui-kit';
+
+const Container = styled(({ theme }) => ({
+  alignItems: 'center',
+  flexDirection: 'row',
+  paddingTop: theme.sizing.baseUnit * 2,
+  paddingBottom: 0,
+}))(PaddedView);
+
+const SettingsIcon = compose(
+  withTheme(({ theme }) => ({
+    name: 'settings',
+    fill: theme.colors.text.tertiary,
+  }))
+)(Icon);
+
+const UserAvatarHeader = ({
+  firstName,
+  lastName,
+  location,
+  navigation,
+  disabled,
+  isLoading,
+}) => (
+  <Container>
+    <FlexedView>
+      <UserAvatarView
+        firstName={firstName}
+        lastName={lastName}
+        location={location}
+        disabled={disabled}
+        isLoading={isLoading}
+      />
+    </FlexedView>
+    <Touchable onPress={() => navigation.navigate('UserSettings')}>
+      <SettingsIcon />
+    </Touchable>
+  </Container>
+);
+
+UserAvatarHeader.propTypes = {
+  firstName: PropTypes.string,
+  lastName: PropTypes.string,
+  location: PropTypes.string,
+  navigation: PropTypes.shape({
+    getParam: PropTypes.func,
+    navigate: PropTypes.func,
+  }),
+  disabled: PropTypes.bool,
+  isLoading: PropTypes.bool,
+};
+
+export default withNavigation(withIsLoading(UserAvatarHeader));
diff --git a/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeader.test.js b/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeader.test.js
new file mode 100644
index 0000000..314dfa6
--- /dev/null
+++ b/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeader.test.js
@@ -0,0 +1,65 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+import UserAvatarHeader from './UserAvatarHeader';
+
+describe('user avatar header', () => {
+  it('renders user avatar header if logged in', () => {
+    const props = {
+      theme: {
+        colors: {
+          text: {
+            tertiary: 'red',
+          },
+        },
+      },
+      firstName: 'Isaac',
+      lastName: 'Hardy',
+      location: 'Anderson, SC',
+      photo: {
+        uri: 'google.com',
+      },
+      refetch: jest.fn(),
+      navigation: jest.fn(),
+      disabled: true,
+      isLoading: false,
+    };
+
+    const tree = renderer.create(
+      <Providers>
+        <UserAvatarHeader {...props} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+
+  it('renders placeholder when loading', () => {
+    const props = {
+      theme: {
+        colors: {
+          text: {
+            tertiary: 'red',
+          },
+        },
+      },
+      firstName: 'Isaac',
+      lastName: 'Hardy',
+      location: 'Anderson, SC',
+      photo: {
+        uri: 'google.com',
+      },
+      refetch: jest.fn(),
+      navigation: jest.fn(),
+      disabled: true,
+      isLoading: true,
+    };
+
+    const tree = renderer.create(
+      <Providers>
+        <UserAvatarHeader {...props} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeaderConnected.js b/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeaderConnected.js
new file mode 100644
index 0000000..9b9997c
--- /dev/null
+++ b/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeaderConnected.js
@@ -0,0 +1,39 @@
+import React from 'react';
+import { Query } from 'react-apollo';
+import PropTypes from 'prop-types';
+import { get } from 'lodash';
+
+import GET_USER_PROFILE from '../getUserProfile';
+import UserAvatarHeader from './UserAvatarHeader';
+
+const UserAvatarHeaderConnected = ({ navigation }) => (
+  <Query query={GET_USER_PROFILE} fetchPolicy="cache-and-network">
+    {({
+      data: {
+        currentUser: {
+          profile: { photo, firstName, lastName, campus } = {},
+        } = {},
+      } = {},
+      refetch,
+    }) => (
+      <UserAvatarHeader
+        firstName={firstName}
+        lastName={lastName}
+        location={get(campus, 'name')}
+        photo={photo}
+        refetch={refetch}
+        navigation={navigation}
+        disabled
+      />
+    )}
+  </Query>
+);
+
+UserAvatarHeaderConnected.propTypes = {
+  navigation: PropTypes.shape({
+    getParam: PropTypes.func,
+    navigate: PropTypes.func,
+  }),
+};
+
+export default UserAvatarHeaderConnected;
diff --git a/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeaderConnected.tests.js b/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeaderConnected.tests.js
new file mode 100644
index 0000000..0395abe
--- /dev/null
+++ b/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeaderConnected.tests.js
@@ -0,0 +1,63 @@
+import React from 'react';
+import { renderWithApolloData } from 'apolloschurchapp/src/utils/testUtils';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import GET_USER_PROFILE from '../getUserProfile';
+import UserAvatarHeaderConnected from './UserAvatarHeaderConnected';
+
+describe('user avatar header connect', () => {
+  it('renders user avatar header if logged in', async () => {
+    const mock = {
+      request: {
+        query: GET_USER_PROFILE,
+      },
+      result: {
+        data: {
+          currentUser: {
+            __typename: 'AuthenticatedUser',
+            id: 'AuthenticatedUser:123',
+            profile: {
+              id: 'Person:123',
+              __typename: 'Person',
+              gender: 'Male',
+              birthDate: '1980-02-10T00:00:00',
+              firstName: 'Isaac',
+              lastName: 'Hardy',
+              campus: {
+                __typename: 'Campus',
+                id: 'Campus:a0f64573eabf00a607bec911794d50fb',
+                name: 'Chicago Campus',
+                latitude: 42.09203,
+                longitude: -88.13289,
+                distanceFromLocation: null,
+                street1: '67 Algonquin Rd',
+                street2: '',
+                city: 'South Barrington',
+                state: 'IL',
+                postalCode: '60010-6143',
+                image: {
+                  __typename: 'ImageMediaSource',
+                  uri: 'https://picsum.photos/300/300/?random',
+                },
+              },
+              email: 'isaac.hardy@newspring.cc',
+              nickName: 'Batman',
+              photo: {
+                __typename: 'ImageMediaSource',
+                uri: 'https://some-uri.com/test.jpg',
+              },
+            },
+          },
+        },
+      },
+    };
+    const navigation = { navigate: jest.fn(), getParam: jest.fn() };
+    const tree = await renderWithApolloData(
+      <Providers mocks={[mock]}>
+        <UserAvatarHeaderConnected navigation={navigation} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/tabs/connect/UserAvatarHeader/index.js b/apolloschurchapp/src/tabs/connect/UserAvatarHeader/index.js
new file mode 100644
index 0000000..a8b66ec
--- /dev/null
+++ b/apolloschurchapp/src/tabs/connect/UserAvatarHeader/index.js
@@ -0,0 +1,2 @@
+export UserAvatarHeader from './UserAvatarHeader';
+export UserAvatarHeaderConnected from './UserAvatarHeaderConnected';
diff --git a/apolloschurchapp/src/tabs/discover/TileContentFeed.js b/apolloschurchapp/src/tabs/discover/TileContentFeed.js
index 9d2a0ff..656cf7f 100644
--- a/apolloschurchapp/src/tabs/discover/TileContentFeed.js
+++ b/apolloschurchapp/src/tabs/discover/TileContentFeed.js
@@ -15,7 +15,7 @@ import {
   withIsLoading,
 } from '@apollosproject/ui-kit';
 
-import HorizontalContentCardConnected from '../../ui/HorizontalContentCardConnected';
+import ContentCardConnected from '../../ui/ContentCardConnected';
 
 const RowHeader = styled(({ theme }) => ({
   flexDirection: 'row',
@@ -84,9 +84,11 @@ const TileContentFeed = ({ isLoading, id, name, navigation, content = [] }) => (
             });
           }}
         >
-          <HorizontalContentCardConnected
+          <ContentCardConnected
             contentId={item.id}
             isLoading={isLoading}
+            tile
+            inHorizontalList
           />
         </TouchableScale>
       )}
diff --git a/apolloschurchapp/src/tabs/discover/discover.tests.js b/apolloschurchapp/src/tabs/discover/discover.tests.js
index 5e7b853..6e8f57b 100644
--- a/apolloschurchapp/src/tabs/discover/discover.tests.js
+++ b/apolloschurchapp/src/tabs/discover/discover.tests.js
@@ -1,6 +1,6 @@
 import React from 'react';
 import renderer from 'react-test-renderer';
-import { createStackNavigator, createAppContainer } from 'react-navigation';
+import { createStackNavigator } from 'react-navigation';
 
 import Providers from 'apolloschurchapp/src/Providers';
 
@@ -159,8 +159,7 @@ describe('Test the Discover Component Query', () => {
       },
     };
 
-    const DiscoverStack = createStackNavigator({ Discover });
-    const DiscoverWithNavigation = createAppContainer(DiscoverStack);
+    const DiscoverWithNavigation = createStackNavigator({ Discover });
     const tree = renderer.create(
       <Providers mocks={[mock]}>
         <DiscoverWithNavigation />
diff --git a/apolloschurchapp/src/tabs/discover/getContentChannels.js b/apolloschurchapp/src/tabs/discover/getContentChannels.js
index a63629c..be21aa9 100644
--- a/apolloschurchapp/src/tabs/discover/getContentChannels.js
+++ b/apolloschurchapp/src/tabs/discover/getContentChannels.js
@@ -1,7 +1,7 @@
 import gql from 'graphql-tag';
 
 import { CONTENT_ITEM_FRAGMENT } from 'apolloschurchapp/src/content-single/getContentItem';
-import { LARGE_CARD_FRAGMENT } from 'apolloschurchapp/src/ui/ContentCardConnected';
+import { TILE_CARD_FRAGMENT } from 'apolloschurchapp/src/ui/ContentCardConnected';
 
 export default gql`
   query getContentChannels {
@@ -13,12 +13,12 @@ export default gql`
           node {
             id
             ...contentItemFragment
-            ...largeCardFragment
+            ...tileCardFragment
           }
         }
       }
     }
   }
   ${CONTENT_ITEM_FRAGMENT}
-  ${LARGE_CARD_FRAGMENT}
+  ${TILE_CARD_FRAGMENT}
 `;
diff --git a/apolloschurchapp/src/tabs/home/Features/getFeedFeatures.js b/apolloschurchapp/src/tabs/home/Features/getFeedFeatures.js
deleted file mode 100644
index caffc10..0000000
--- a/apolloschurchapp/src/tabs/home/Features/getFeedFeatures.js
+++ /dev/null
@@ -1,27 +0,0 @@
-import gql from 'graphql-tag';
-
-export default gql`
-  query getFeedFeatures {
-    userFeedFeatures {
-      ... on ActionListFeature {
-        id
-        title
-        subtitle
-        actions {
-          id
-          title
-          subtitle
-          action
-          image {
-            sources {
-              uri
-            }
-          }
-          relatedNode {
-            id
-          }
-        }
-      }
-    }
-  }
-`;
diff --git a/apolloschurchapp/src/tabs/home/Features/index.js b/apolloschurchapp/src/tabs/home/Features/index.js
deleted file mode 100644
index 87878f3..0000000
--- a/apolloschurchapp/src/tabs/home/Features/index.js
+++ /dev/null
@@ -1,129 +0,0 @@
-import React, { memo } from 'react';
-import { Query } from 'react-apollo';
-import { get } from 'lodash';
-// import PropTypes from 'prop-types';
-
-import { styled, ActionListCard, H3, H6 } from '@apollosproject/ui-kit';
-
-import GET_FEED_FEATURES from './getFeedFeatures';
-
-const StyledH6 = styled(({ theme }) => ({
-  color: theme.colors.text.tertiary,
-}))(H6);
-
-// const handleOnPressActionItem = (id) =>
-//   this.props.navigation.navigate('ContentSingle', {
-//     itemId: id,
-//     transitionKey: 2,
-//   });
-
-const Features = memo(({ navigation }) => (
-  <Query query={GET_FEED_FEATURES} fetchPolicy="cache-and-network">
-    {({ data: features, loading }) =>
-      loading ? (
-        <ActionListCard
-          isLoading
-          header={
-            <>
-              <StyledH6 isLoading />
-              <H3 isLoading />
-            </>
-          }
-          actions={[
-            {
-              id: 'fakeId1',
-              title: '',
-              subtitle: '',
-              parentChannel: {
-                id: '',
-                name: '',
-              },
-              coverImage: {
-                sources: {
-                  uri: '',
-                },
-              },
-            },
-            {
-              id: 'fakeId2',
-              title: '',
-              subtitle: '',
-              parentChannel: {
-                id: '',
-                name: '',
-              },
-              coverImage: {
-                sources: {
-                  uri: '',
-                },
-              },
-            },
-            {
-              id: 'fakeId3',
-              title: '',
-              subtitle: '',
-              parentChannel: {
-                id: '',
-                name: '',
-              },
-              coverImage: {
-                sources: {
-                  uri: '',
-                },
-              },
-            },
-            {
-              id: 'fakeId4',
-              title: '',
-              subtitle: '',
-              parentChannel: {
-                id: '',
-                name: '',
-              },
-              coverImage: {
-                sources: {
-                  uri: '',
-                },
-              },
-            },
-          ]}
-        />
-      ) : (
-        get(features, 'userFeedFeatures', []).map(
-          ({ title, subtitle, actions, id }) =>
-            actions.length ? (
-              <ActionListCard
-                isLoading={loading}
-                key={id}
-                header={
-                  <>
-                    <StyledH6 numberOfLines={1}>{title}</StyledH6>
-                    <H3 numberOfLines={3}>{subtitle}</H3>
-                  </>
-                }
-                actions={actions}
-                onPressActionItem={({ action, relatedNode }) => {
-                  if (action === 'READ_CONTENT') {
-                    navigation.navigate('ContentSingle', {
-                      itemId: relatedNode.id,
-                      transitionKey: 2,
-                    });
-                  }
-                }}
-                onPressCardActionButton={() =>
-                  navigation.navigate('ContentFeed', {
-                    itemId: id,
-                    itemTitle: title,
-                  })
-                }
-              />
-            ) : null
-        )
-      )
-    }
-  </Query>
-));
-
-Features.displayName = 'Features';
-
-export default Features;
diff --git a/apolloschurchapp/src/tabs/home/Home.js b/apolloschurchapp/src/tabs/home/Home.js
index 118f612..ffb4cc1 100644
--- a/apolloschurchapp/src/tabs/home/Home.js
+++ b/apolloschurchapp/src/tabs/home/Home.js
@@ -9,8 +9,9 @@ import {
   styled,
   FeedView,
   BackgroundView,
+  H3,
+  H6,
   TouchableScale,
-  FeaturedCard,
 } from '@apollosproject/ui-kit';
 
 import fetchMoreResolver from '../../utils/fetchMoreResolver';
@@ -18,8 +19,9 @@ import ContentCardConnected from '../../ui/ContentCardConnected';
 
 import { LiveButton } from '../../live';
 
-import Features from './Features';
+import ContentTableCard from '../../ui/ContentTableCard';
 import GET_USER_FEED from './getUserFeed';
+import GET_FEED_FEATURES from './getFeedFeatures';
 import GET_CAMPAIGN_CONTENT_ITEM from './getCampaignContentItem';
 
 const LogoTitle = styled(({ theme }) => ({
@@ -29,6 +31,10 @@ const LogoTitle = styled(({ theme }) => ({
   resizeMode: 'contain',
 }))(Image);
 
+const StyledH6 = styled(({ theme }) => ({
+  color: theme.colors.text.tertiary,
+}))(H6);
+
 class Home extends PureComponent {
   static navigationOptions = () => ({
     header: null,
@@ -103,7 +109,6 @@ class Home extends PureComponent {
                             }
                           >
                             <ContentCardConnected
-                              Component={FeaturedCard}
                               contentId={featuredItem.id}
                               isLoading={isFeaturedLoading}
                             />
@@ -111,7 +116,37 @@ class Home extends PureComponent {
                         );
                       }}
                     </Query>
-                    <Features navigation={this.props.navigation} />
+                    <Query
+                      query={GET_FEED_FEATURES}
+                      fetchPolicy="cache-and-network"
+                    >
+                      {({ data: features, loading: featuresLoading }) =>
+                        get(features, 'userFeedFeatures', []).map(
+                          ({ title, subtitle, actions, id }) => (
+                            <ContentTableCard
+                              isLoading={featuresLoading}
+                              onPress={this.handleOnPress}
+                              key={id}
+                              header={
+                                <>
+                                  <StyledH6 isLoading={featuresLoading}>
+                                    {title}
+                                  </StyledH6>
+                                  <H3
+                                    isLoading={featuresLoading}
+                                    numberOfLines={3}
+                                    ellipsizeMode="tail"
+                                  >
+                                    {subtitle}
+                                  </H3>
+                                </>
+                              }
+                              content={actions}
+                            />
+                          )
+                        )
+                      }
+                    </Query>
                   </>
                 }
                 onPressItem={this.handleOnPress}
diff --git a/apolloschurchapp/src/tabs/index.js b/apolloschurchapp/src/tabs/index.js
index ff11787..0b9ea17 100644
--- a/apolloschurchapp/src/tabs/index.js
+++ b/apolloschurchapp/src/tabs/index.js
@@ -16,8 +16,11 @@ const TabNavigator = createBottomTabNavigator(
     tabBarComponent: TabBar,
     lazy: true,
     removeClippedSubviews: true,
-    navigationOptions: { header: null },
   }
 );
 
+TabNavigator.navigationOptions = {
+  header: null,
+};
+
 export default TabNavigator;
diff --git a/apolloschurchapp/src/tabs/tabBar.js b/apolloschurchapp/src/tabs/tabBar.js
index 6b2b849..80e2f0e 100644
--- a/apolloschurchapp/src/tabs/tabBar.js
+++ b/apolloschurchapp/src/tabs/tabBar.js
@@ -1,5 +1,5 @@
 import { compose } from 'recompose';
-import { BottomTabBar } from 'react-navigation';
+import { BottomTabBar } from 'react-navigation-tabs';
 
 import { withTabBarMediaSpacer } from '@apollosproject/ui-media-player';
 import { styled, withTheme } from '@apollosproject/ui-kit';
diff --git a/apolloschurchapp/src/ui/ContentCardConnected/ContentCardConnected.js b/apolloschurchapp/src/ui/ContentCardConnected/ContentCardConnected.js
deleted file mode 100644
index e4d7ac2..0000000
--- a/apolloschurchapp/src/ui/ContentCardConnected/ContentCardConnected.js
+++ /dev/null
@@ -1,57 +0,0 @@
-import React, { memo } from 'react';
-import PropTypes from 'prop-types';
-import { Query } from 'react-apollo';
-import { get } from 'lodash';
-
-import { ErrorCard } from '@apollosproject/ui-kit';
-
-import contentCardComponentMapper from './contentCardComponentMapper';
-import GET_CONTENT_CARD from './query';
-
-const ContentCardConnected = memo(
-  ({ Component, contentId, isLoading, tile, mapProps, ...otherProps }) => {
-    if (!contentId || isLoading)
-      return <Component {...otherProps} isLoading tile={tile} />;
-
-    return (
-      <Query query={GET_CONTENT_CARD} variables={{ contentId }}>
-        {({ data: { node = {} } = {}, loading, error }) => {
-          if (error) return <ErrorCard error={error} />;
-
-          const coverImage = get(node, 'coverImage.sources', undefined);
-          const hasMedia = !!get(node, 'videos.[0].sources[0]', null);
-          const isLive = get(node, 'liveStream.isLive', false);
-          const labelText = get(node, 'parentChannel.name', null);
-
-          return (
-            <Component
-              {...node}
-              hasAction={hasMedia}
-              isLive={isLive}
-              labelText={labelText}
-              {...otherProps}
-              coverImage={coverImage}
-              isLoading={loading}
-            />
-          );
-        }}
-      </Query>
-    );
-  }
-);
-
-ContentCardConnected.propTypes = {
-  Component: PropTypes.func,
-  mapProps: PropTypes.func,
-  contentId: PropTypes.string,
-  isLoading: PropTypes.bool,
-  tile: PropTypes.bool,
-};
-
-ContentCardConnected.defaultProps = {
-  Component: contentCardComponentMapper,
-};
-
-ContentCardConnected.displayName = 'ContentCardConnected';
-
-export default ContentCardConnected;
diff --git a/apolloschurchapp/src/ui/ContentCardConnected/contentCardComponentMapper.js b/apolloschurchapp/src/ui/ContentCardConnected/contentCardComponentMapper.js
deleted file mode 100644
index 30d8e1e..0000000
--- a/apolloschurchapp/src/ui/ContentCardConnected/contentCardComponentMapper.js
+++ /dev/null
@@ -1,19 +0,0 @@
-import React from 'react';
-import { get } from 'lodash';
-
-import { DefaultCard, HighlightCard } from '@apollosproject/ui-kit';
-
-const contentCardComponentMapper = (props) => {
-  // map typename to the the card we want to render.
-  switch (get(props, '__typename')) {
-    case 'MediaContentItem':
-    case 'WeekendContentItem':
-    case 'ContentSeriesContentItem':
-    case 'DevotionalContentItem':
-      return <HighlightCard {...props} />;
-    default:
-      return <DefaultCard {...props} />;
-  }
-};
-
-export default contentCardComponentMapper;
diff --git a/apolloschurchapp/src/ui/ContentCardConnected/index.js b/apolloschurchapp/src/ui/ContentCardConnected/index.js
index c8fd37e..8722331 100644
--- a/apolloschurchapp/src/ui/ContentCardConnected/index.js
+++ b/apolloschurchapp/src/ui/ContentCardConnected/index.js
@@ -1,5 +1,55 @@
-import ContentCardConnected from './ContentCardConnected';
+import React from 'react';
+import PropTypes from 'prop-types';
+import { Query } from 'react-apollo';
+import { get } from 'lodash';
 
-export { LARGE_CARD_FRAGMENT } from './query';
+import { ContentCard, ErrorCard } from '@apollosproject/ui-kit';
+import GET_CONTENT_CARD from './query';
+
+export { TILE_CARD_FRAGMENT, LARGE_CARD_FRAGMENT } from './query';
+
+const ContentCardConnected = ({
+  contentId,
+  isLoading,
+  tile,
+  ...otherProps
+}) => {
+  if (!contentId || isLoading)
+    return <ContentCard {...otherProps} isLoading tile={tile} />;
+
+  return (
+    <Query query={GET_CONTENT_CARD} variables={{ contentId, tile: !!tile }}>
+      {({ data: { node = {} } = {}, loading, error }) => {
+        if (error) return <ErrorCard error={error} />;
+
+        const metrics = [
+          {
+            icon: node.isLiked ? 'like-solid' : 'like',
+            value: node.likedCount,
+          },
+        ];
+
+        const coverImage = get(node, 'coverImage.sources', undefined);
+
+        return (
+          <ContentCard
+            {...node}
+            {...otherProps}
+            coverImage={coverImage}
+            metrics={metrics}
+            tile={tile}
+            isLoading={loading}
+          />
+        );
+      }}
+    </Query>
+  );
+};
+
+ContentCardConnected.propTypes = {
+  isLoading: PropTypes.bool,
+  contentId: PropTypes.string,
+  tile: PropTypes.bool,
+};
 
 export default ContentCardConnected;
diff --git a/apolloschurchapp/src/ui/ContentCardConnected/query.js b/apolloschurchapp/src/ui/ContentCardConnected/query.js
index 1ff178a..eee426a 100644
--- a/apolloschurchapp/src/ui/ContentCardConnected/query.js
+++ b/apolloschurchapp/src/ui/ContentCardConnected/query.js
@@ -24,45 +24,50 @@ export const THEME_FRAGMENT = gql`
   }
 `;
 
+export const CONTENT_CARD_METRICS_FRAGMENT = gql`
+  fragment contentCardMetricsFragment on ContentItem {
+    isLiked
+    likedCount
+  }
+`;
+
 export const BASE_CARD_FRAGMENT = gql`
   fragment baseCardFragment on ContentItem {
     id
     __typename
+    ...contentCardMetricsFragment
     ...coverImageFragment
     ...themeFragment
     title
     summary
-    isLiked
-    ... on MediaContentItem {
-      videos {
-        sources {
-          uri
-        }
-      }
+  }
+  ${CONTENT_CARD_METRICS_FRAGMENT}
+  ${COVER_IMAGE_FRAGMENT}
+  ${THEME_FRAGMENT}
+`;
+
+export const TILE_CARD_FRAGMENT = gql`
+  fragment tileCardFragment on ContentItem {
+    ... on ContentSeriesContentItem {
+      id
+      ...themeFragment
+      ...coverImageFragment
+      ...contentCardMetricsFragment
     }
-    ... on WeekendContentItem {
-      videos {
-        sources {
-          uri
-        }
-      }
-      liveStream {
-        isLive
-      }
-      parentChannel {
-        id
-        name
-      }
+    ... on UniversalContentItem {
+      ...baseCardFragment
     }
     ... on DevotionalContentItem {
-      parentChannel {
-        id
-        name
-      }
+      ...baseCardFragment
+    }
+    ... on MediaContentItem {
+      ...baseCardFragment
     }
   }
-  ${COVER_IMAGE_FRAGMENT}
+  ${BASE_CARD_FRAGMENT}
   ${THEME_FRAGMENT}
+  ${COVER_IMAGE_FRAGMENT}
+  ${CONTENT_CARD_METRICS_FRAGMENT}
 `;
 
 export const LARGE_CARD_FRAGMENT = gql`
@@ -73,13 +78,15 @@ export const LARGE_CARD_FRAGMENT = gql`
 `;
 
 const GET_CONTENT_CARD = gql`
-  query getContentCard($contentId: ID!) {
+  query getContentCard($contentId: ID!, $tile: Boolean!) {
     node(id: $contentId) {
       id
       __typename
-      ...largeCardFragment
+      ...tileCardFragment @include(if: $tile)
+      ...largeCardFragment @skip(if: $tile)
     }
   }
+  ${TILE_CARD_FRAGMENT}
   ${LARGE_CARD_FRAGMENT}
 `;
 
diff --git a/apolloschurchapp/src/ui/ContentTableCard/ContentTableCard.stories.js b/apolloschurchapp/src/ui/ContentTableCard/ContentTableCard.stories.js
new file mode 100644
index 0000000..9287554
--- /dev/null
+++ b/apolloschurchapp/src/ui/ContentTableCard/ContentTableCard.stories.js
@@ -0,0 +1,86 @@
+import React from 'react';
+import { storiesOf } from '@apollosproject/ui-storybook';
+import { H3 } from '@apollosproject/ui-kit';
+import ContentTableCard from '.';
+
+const content = [
+  {
+    id: 'UniversalContentItem:9d06423a8908b7cc1e1f2db6156c1bfb',
+    title: 'Hello 1',
+    parentChannel: {
+      id: 'ContentChannel:be35f49307d7297989d3514be788ef2d',
+      name: 'NewSpring - Articles',
+    },
+    coverImage: {
+      sources: {
+        uri: 'https://picsum.photos/600/400/?image=63',
+      },
+    },
+  },
+  {
+    id: 'UniversalContentItem:9d06423a8908b7cc1e1f2db6156c1bfb',
+    title: 'Hello 2',
+    parentChannel: {
+      id: 'ContentChannel:be35f49307d7297989d3514be788ef2d',
+      name: 'NewSpring - Articles',
+    },
+    coverImage: {
+      sources: {
+        uri: 'https://picsum.photos/600/400/?image=63',
+      },
+    },
+  },
+  {
+    id: 'UniversalContentItem:9d06423a8908b7cc1e1f2db6156c1bfb',
+    title: 'Hello 3',
+    parentChannel: {
+      id: 'ContentChannel:be35f49307d7297989d3514be788ef2d',
+      name: 'NewSpring - Articles',
+    },
+    coverImage: {
+      sources: {
+        uri: 'https://picsum.photos/600/400/?image=63',
+      },
+    },
+  },
+  {
+    id: 'UniversalContentItem:9d06423a8908b7cc1e1f2db6156c1bfb',
+    title: 'Hello 4',
+    parentChannel: {
+      id: 'ContentChannel:be35f49307d7297989d3514be788ef2d',
+      name: 'NewSpring - Articles',
+    },
+    coverImage: {
+      sources: {
+        uri: 'https://picsum.photos/600/400/?image=63',
+      },
+    },
+  },
+];
+
+storiesOf('ContentTableCard', module)
+  .add('simple', () => (
+    <ContentTableCard
+      label={'FOR YOU'}
+      onPress={() => {}}
+      content={content}
+      DynamicHeader={
+        <H3 numberOfLines={3} ellipsizeMode="tail">
+          Some random text that encourages you
+        </H3>
+      }
+    />
+  ))
+  .add('isLoading', () => (
+    <ContentTableCard
+      label={'FOR YOU'}
+      onPress={() => {}}
+      isLoading
+      content={content}
+      DynamicHeader={
+        <H3 isLoading numberOfLines={3} ellipsizeMode="tail">
+          Some random text that encourages you
+        </H3>
+      }
+    />
+  ));
diff --git a/apolloschurchapp/src/ui/ContentTableCard/ContentTableCardItem.js b/apolloschurchapp/src/ui/ContentTableCard/ContentTableCardItem.js
new file mode 100644
index 0000000..f387a41
--- /dev/null
+++ b/apolloschurchapp/src/ui/ContentTableCard/ContentTableCardItem.js
@@ -0,0 +1,78 @@
+import React, { PureComponent } from 'react';
+import { View } from 'react-native';
+import PropTypes from 'prop-types';
+
+import {
+  H6,
+  H4,
+  styled,
+  TouchableScale,
+  withIsLoading,
+  ConnectedImage,
+  FlexedView,
+} from '@apollosproject/ui-kit';
+
+const CellImage = styled(({ theme }) => ({
+  width: theme.sizing.baseUnit * 4,
+  height: theme.sizing.baseUnit * 4,
+  borderRadius: theme.sizing.baseUnit,
+  overflow: 'hidden',
+  marginRight: theme.sizing.baseUnit,
+}))(View);
+
+const StyledH6 = styled(({ theme }) => ({
+  color: theme.colors.text.tertiary,
+}))(H6);
+
+const TextContainer = styled(({ theme }) => ({
+  marginTop: theme.sizing.baseUnit / 2.5,
+  borderBottomWidth: 0.5,
+  height: theme.sizing.baseUnit * 4.25,
+  borderColor: theme.colors.shadows.default,
+}))(FlexedView);
+
+const Cell = styled(({ theme }) => ({
+  paddingHorizontal: theme.sizing.baseUnit,
+  paddingVertical: theme.sizing.baseUnit / 4,
+  backgroundColor: theme.colors.background.paper,
+  flexDirection: 'row',
+  justifyContent: 'flex-start',
+  alignItems: 'center',
+}))(View);
+
+class ContentTableCardItem extends PureComponent {
+  static propTypes = {
+    onPress: PropTypes.func,
+    imageSource: PropTypes.any, // eslint-disable-line
+    label: PropTypes.string,
+    title: PropTypes.string,
+    id: PropTypes.string,
+  };
+
+  render() {
+    return (
+      <TouchableScale
+        onPress={() =>
+          this.props.onPress({
+            id: this.props.id,
+            transitionKey: 2,
+          })
+        }
+      >
+        <Cell>
+          <CellImage>
+            <ConnectedImage source={this.props.imageSource} isLoading />
+          </CellImage>
+          <TextContainer>
+            <StyledH6>{this.props.label}</StyledH6>
+            <H4 numberOfLines={2} ellipsizeMode="tail">
+              {this.props.title}
+            </H4>
+          </TextContainer>
+        </Cell>
+      </TouchableScale>
+    );
+  }
+}
+
+export default withIsLoading(ContentTableCardItem);
diff --git a/apolloschurchapp/src/ui/ContentTableCard/ContentTableCardItem.stories.js b/apolloschurchapp/src/ui/ContentTableCard/ContentTableCardItem.stories.js
new file mode 100644
index 0000000..6a0d4cb
--- /dev/null
+++ b/apolloschurchapp/src/ui/ContentTableCard/ContentTableCardItem.stories.js
@@ -0,0 +1,28 @@
+import React from 'react';
+import { storiesOf } from '@apollosproject/ui-storybook';
+
+import ContentTableCardItem from './ContentTableCardItem';
+
+const item = {
+  id: 'UniversalContentItem:9d06423a8908b7cc1e1f2db6156c1bfb',
+  title: 'Hello 1',
+  parentChannel: {
+    id: 'ContentChannel:be35f49307d7297989d3514be788ef2d',
+    name: 'NewSpring - Articles',
+  },
+  coverImage: {
+    sources: {
+      uri: 'https://picsum.photos/600/400/?image=63',
+    },
+  },
+};
+
+storiesOf('ContentTableCardItem', module).add('simple', () => (
+  <ContentTableCardItem
+    onPress={() => {}}
+    imageSource={item.coverImage.sources}
+    label={item.parentChannel.name}
+    title={item.title}
+    id={item.id}
+  />
+));
diff --git a/apolloschurchapp/src/ui/ContentTableCard/index.js b/apolloschurchapp/src/ui/ContentTableCard/index.js
new file mode 100644
index 0000000..638f91c
--- /dev/null
+++ b/apolloschurchapp/src/ui/ContentTableCard/index.js
@@ -0,0 +1,64 @@
+import React, { PureComponent } from 'react';
+// import { View } from 'react-native';
+import PropTypes from 'prop-types';
+
+import {
+  TableView,
+  Card,
+  CardContent,
+  styled,
+  withIsLoading,
+} from '@apollosproject/ui-kit';
+
+import ContentTableCardItem from './ContentTableCardItem';
+
+const Header = styled(({ theme }) => ({
+  backgroundColor: theme.colors.background.paper,
+}))(CardContent);
+
+const Content = styled(() => ({
+  borderBottomWidth: 0,
+  borderTopWidth: 0,
+}))(TableView);
+
+class ContentTableCard extends PureComponent {
+  static propTypes = {
+    onPress: PropTypes.func,
+    isLoading: PropTypes.bool, // eslint-disable-line
+    content: PropTypes.array, // eslint-disable-line
+    header: PropTypes.element,
+  };
+
+  handleOnPress = ({ action, relatedNode: { id } }) => {
+    const { onPress } = this.props;
+
+    if (action === 'READ_CONTENT') {
+      onPress({ id });
+    }
+  };
+
+  render() {
+    const { isLoading, content, header: headerContent } = this.props;
+
+    return (
+      <Card>
+        <Header>{headerContent}</Header>
+        <Content>
+          {content.map((item) => (
+            <ContentTableCardItem
+              isLoading={isLoading}
+              key={item.id}
+              id={item.id}
+              onPress={() => this.handleOnPress(item)}
+              label={item.subtitle || ''}
+              title={item.title || ''}
+              imageSource={item.image ? item.image.sources : ''}
+            />
+          ))}
+        </Content>
+      </Card>
+    );
+  }
+}
+
+export default withIsLoading(ContentTableCard);
diff --git a/apolloschurchapp/src/ui/HorizontalContentCardConnected/horizontalContentCardComponentMapper.js b/apolloschurchapp/src/ui/HorizontalContentCardConnected/horizontalContentCardComponentMapper.js
deleted file mode 100644
index c658e47..0000000
--- a/apolloschurchapp/src/ui/HorizontalContentCardConnected/horizontalContentCardComponentMapper.js
+++ /dev/null
@@ -1,22 +0,0 @@
-import React from 'react';
-import { get } from 'lodash';
-
-import {
-  HorizontalDefaultCard,
-  HorizontalHighlightCard,
-} from '@apollosproject/ui-kit';
-
-const horizontalContentCardComponentMapper = (props) => {
-  // map typename to the the card we want to render.
-  switch (get(props, '__typename')) {
-    case 'MediaContentItem':
-    case 'WeekendContentItem':
-    case 'ContentSeriesContentItem':
-    case 'DevotionalContentItem':
-      return <HorizontalHighlightCard {...props} />;
-    default:
-      return <HorizontalDefaultCard {...props} />;
-  }
-};
-
-export default horizontalContentCardComponentMapper;
diff --git a/apolloschurchapp/src/ui/HorizontalContentCardConnected/index.js b/apolloschurchapp/src/ui/HorizontalContentCardConnected/index.js
deleted file mode 100644
index c0a38bc..0000000
--- a/apolloschurchapp/src/ui/HorizontalContentCardConnected/index.js
+++ /dev/null
@@ -1,29 +0,0 @@
-import React, { memo } from 'react';
-import PropTypes from 'prop-types';
-
-import ContentCardConnected from '../ContentCardConnected';
-
-import horizontalContentCardComponentMapper from './horizontalContentCardComponentMapper';
-
-const HorizontalContentCardConnected = memo(
-  ({ Component, isLoading, ...otherProps }) => (
-    <ContentCardConnected
-      Component={Component}
-      isLoading={isLoading}
-      {...otherProps}
-    />
-  )
-);
-
-HorizontalContentCardConnected.propTypes = {
-  Component: PropTypes.func,
-  isLoading: PropTypes.bool,
-};
-
-HorizontalContentCardConnected.defaultProps = {
-  Component: horizontalContentCardComponentMapper,
-};
-
-HorizontalContentCardConnected.displayName = 'HorizontalContentCardConnected';
-
-export default HorizontalContentCardConnected;
diff --git a/apolloschurchapp/src/ui/LikeContentButton/Like.tests.js b/apolloschurchapp/src/ui/Like/Like.tests.js
similarity index 91%
rename from apolloschurchapp/src/ui/LikeContentButton/Like.tests.js
rename to apolloschurchapp/src/ui/Like/Like.tests.js
index 1ec78ec..f7d40c2 100644
--- a/apolloschurchapp/src/ui/LikeContentButton/Like.tests.js
+++ b/apolloschurchapp/src/ui/Like/Like.tests.js
@@ -5,7 +5,7 @@ import Providers from 'apolloschurchapp/src/Providers';
 
 import { LikeIcon } from '.';
 
-describe('the LikeContentButton component', () => {
+describe('the Like component', () => {
   it('should render a Like', () => {
     const tree = renderer.create(
       <Providers>
diff --git a/apolloschurchapp/src/ui/LikeContentButton/index.js b/apolloschurchapp/src/ui/Like/index.js
similarity index 81%
rename from apolloschurchapp/src/ui/LikeContentButton/index.js
rename to apolloschurchapp/src/ui/Like/index.js
index 3a58e27..7efb31a 100644
--- a/apolloschurchapp/src/ui/LikeContentButton/index.js
+++ b/apolloschurchapp/src/ui/Like/index.js
@@ -17,7 +17,7 @@ LikeIcon.propTypes = {
   isLiked: PropTypes.bool,
 };
 
-const LikeContentButton = withNavigation(({ isLiked, toggleLike, itemId }) => (
+const Like = withNavigation(({ isLiked, toggleLike, itemId }) => (
   <ProtectedTouchable
     onPress={() =>
       toggleLike({ itemId, operation: isLiked ? 'Unlike' : 'Like' })
@@ -27,10 +27,10 @@ const LikeContentButton = withNavigation(({ isLiked, toggleLike, itemId }) => (
   </ProtectedTouchable>
 ));
 
-LikeContentButton.propTypes = {
+Like.propTypes = {
   itemId: PropTypes.string,
   isLiked: PropTypes.bool,
   toggleLike: PropTypes.func,
 };
 
-export { LikeContentButton as default, LikeIcon };
+export { Like as default, LikeIcon };
diff --git a/apolloschurchapp/src/ui/LikeContentButtonConnected/LikeButton.tests.js b/apolloschurchapp/src/ui/LikeButton/LikeButton.tests.js
similarity index 93%
rename from apolloschurchapp/src/ui/LikeContentButtonConnected/LikeButton.tests.js
rename to apolloschurchapp/src/ui/LikeButton/LikeButton.tests.js
index aee7385..76197fd 100644
--- a/apolloschurchapp/src/ui/LikeContentButtonConnected/LikeButton.tests.js
+++ b/apolloschurchapp/src/ui/LikeButton/LikeButton.tests.js
@@ -4,9 +4,9 @@
 // import Providers from 'apolloschurchapp/src/Providers';
 // import gql from 'graphql-tag';
 
-// import LikeContentButtonConnected from '.';
+// import LikeButton from '.';
 
-describe('the LikeContentButtonConnected component', () => {
+describe('the LikeButton component', () => {
   it('should render', () => {
     //     const updateLikeEntity = {
     //       request: {
@@ -56,7 +56,7 @@ describe('the LikeContentButtonConnected component', () => {
     //     };
     //     const tree = renderer.create(
     //       <Providers mocks={[updateLikeEntity, getLikedContentItem]}>
-    //         <LikeContentButtonConnected itemId={'asdf'} />
+    //         <LikeButton itemId={'asdf'} />
     //       </Providers>
     //     );
     //     expect(tree).toMatchSnapshot();
@@ -106,7 +106,7 @@ describe('the LikeContentButtonConnected component', () => {
     //     };
     //     const tree = renderer.create(
     //       <Providers mocks={[updateLikeEntity, getLikedContentItem]}>
-    //         <LikeContentButtonConnected itemId={'asdf'} />
+    //         <LikeButton itemId={'asdf'} />
     //       </Providers>
     //     );
     //     expect(tree).toMatchSnapshot();
diff --git a/apolloschurchapp/src/ui/LikeContentButtonConnected/getLikedContentItem.js b/apolloschurchapp/src/ui/LikeButton/getLikedContentItem.js
similarity index 100%
rename from apolloschurchapp/src/ui/LikeContentButtonConnected/getLikedContentItem.js
rename to apolloschurchapp/src/ui/LikeButton/getLikedContentItem.js
diff --git a/apolloschurchapp/src/ui/LikeContentButtonConnected/index.js b/apolloschurchapp/src/ui/LikeButton/index.js
similarity index 92%
rename from apolloschurchapp/src/ui/LikeContentButtonConnected/index.js
rename to apolloschurchapp/src/ui/LikeButton/index.js
index 724407e..8272d96 100644
--- a/apolloschurchapp/src/ui/LikeContentButtonConnected/index.js
+++ b/apolloschurchapp/src/ui/LikeButton/index.js
@@ -4,7 +4,7 @@ import PropTypes from 'prop-types';
 import { get } from 'lodash';
 import { Query, Mutation } from 'react-apollo';
 
-import LikeContentButton from 'apolloschurchapp/src/ui/LikeContentButton';
+import Like from 'apolloschurchapp/src/ui/Like';
 import { AnalyticsConsumer } from '@apollosproject/ui-analytics';
 
 import UPDATE_LIKE_ENTITY from './updateLikeEntity';
@@ -100,12 +100,12 @@ UpdateLikeStatus.propTypes = {
   }),
 };
 
-const LikeContentButtonConnected = ({ itemId }) => (
+const LikeButton = ({ itemId }) => (
   <GetLikeData itemId={itemId}>
     {({ isLiked, item }) => (
       <UpdateLikeStatus itemId={itemId} item={item} isLiked={isLiked}>
         {({ toggleLike, isLiked: newLikeValue }) => (
-          <LikeContentButton
+          <Like
             itemId={itemId}
             isLiked={newLikeValue}
             toggleLike={toggleLike}
@@ -116,8 +116,8 @@ const LikeContentButtonConnected = ({ itemId }) => (
   </GetLikeData>
 );
 
-LikeContentButtonConnected.propTypes = {
+LikeButton.propTypes = {
   itemId: PropTypes.string,
 };
 
-export default LikeContentButtonConnected;
+export default LikeButton;
diff --git a/apolloschurchapp/src/ui/LikeContentButtonConnected/updateLikeEntity.js b/apolloschurchapp/src/ui/LikeButton/updateLikeEntity.js
similarity index 100%
rename from apolloschurchapp/src/ui/LikeContentButtonConnected/updateLikeEntity.js
rename to apolloschurchapp/src/ui/LikeButton/updateLikeEntity.js
diff --git a/apolloschurchapp/src/ui/LikeContentButtonConnected/updateLikedContent.js b/apolloschurchapp/src/ui/LikeButton/updateLikedContent.js
similarity index 100%
rename from apolloschurchapp/src/ui/LikeContentButtonConnected/updateLikedContent.js
rename to apolloschurchapp/src/ui/LikeButton/updateLikedContent.js
diff --git a/apolloschurchapp/src/ui/Onboarding/index.js b/apolloschurchapp/src/ui/Onboarding/index.js
index 67d9879..bcd6421 100644
--- a/apolloschurchapp/src/ui/Onboarding/index.js
+++ b/apolloschurchapp/src/ui/Onboarding/index.js
@@ -1,10 +1,6 @@
 import React from 'react';
 
-import {
-  GradientOverlayImage,
-  styled,
-  BackgroundView,
-} from '@apollosproject/ui-kit';
+import { GradientOverlayImage } from '@apollosproject/ui-kit';
 import { ApolloConsumer } from 'react-apollo';
 
 import {
@@ -18,71 +14,60 @@ import {
 
 import { requestPushPermissions } from '@apollosproject/ui-notifications';
 
-const FullscreenBackgroundView = styled({
-  position: 'absolute',
-  width: '100%',
-  height: '100%',
-})(BackgroundView);
-
-const StyledGradient = styled({
-  maxHeight: '40%',
-})(GradientOverlayImage);
-
 function Onboarding({ navigation }) {
   return (
-    <>
-      <FullscreenBackgroundView />
-      <OnboardingSwiper>
-        {({ swipeForward }) => (
-          <>
-            <AskNameConnected onPressPrimary={swipeForward} />
-            <FeaturesConnected
-              onPressPrimary={swipeForward}
-              BackgroundComponent={
-                <StyledGradient
-                  source={'https://picsum.photos/640/640/?random'}
-                />
-              }
-            />
-            <AboutYouConnected
-              onPressPrimary={swipeForward}
-              BackgroundComponent={
-                <StyledGradient
-                  source={'https://picsum.photos/640/640/?random'}
-                />
-              }
-            />
-            <LocationFinderConnected
-              onPressPrimary={swipeForward}
-              onNavigate={() => {
-                navigation.navigate('Location');
-              }}
-              BackgroundComponent={
-                <StyledGradient
-                  source={'https://picsum.photos/640/640/?random'}
-                />
-              }
-            />
-            <ApolloConsumer>
-              {(client) => (
-                <AskNotificationsConnected
-                  onPressPrimary={() => navigation.replace('Tabs')}
-                  onRequestPushPermissions={() =>
-                    requestPushPermissions({ client })
-                  }
-                  primaryNavText={'Finish'}
-                  BackgroundComponent={
-                    <StyledGradient
-                      source={'https://picsum.photos/640/640/?random'}
-                    />
-                  }
-                />
-              )}
-            </ApolloConsumer>
-          </>
-        )}
-      </OnboardingSwiper>
-    </>
+    <OnboardingSwiper>
+      {({ swipeForward }) => (
+        <>
+          <AskNameConnected onPressPrimary={swipeForward} />
+          <FeaturesConnected
+            onPressPrimary={swipeForward}
+            BackgroundComponent={
+              <GradientOverlayImage
+                source={'https://picsum.photos/640/640/?random'}
+              />
+            }
+          />
+          <AboutYouConnected
+            onPressPrimary={swipeForward}
+            BackgroundComponent={
+              <GradientOverlayImage
+                source={'https://picsum.photos/640/640/?random'}
+              />
+            }
+          />
+          <LocationFinderConnected
+            onPressPrimary={swipeForward}
+            onNavigate={() => {
+              navigation.navigate('Location', {
+                onFinished: swipeForward,
+              });
+            }}
+            BackgroundComponent={
+              <GradientOverlayImage
+                source={'https://picsum.photos/640/640/?random'}
+              />
+            }
+          />
+          <ApolloConsumer>
+            {(client) => (
+              <AskNotificationsConnected
+                onPressPrimary={() => navigation.replace('Tabs')}
+                onRequestPushPermissions={() =>
+                  requestPushPermissions({ client })
+                }
+                primaryNavText={'Finish'}
+                BackgroundComponent={
+                  <GradientOverlayImage
+                    source={'https://picsum.photos/640/640/?random'}
+                  />
+                }
+              />
+            )}
+          </ApolloConsumer>
+        </>
+      )}
+    </OnboardingSwiper>
   );
 }
 
diff --git a/apolloschurchapp/src/ui/ShareContentButton/ShareContentButton.tests.js b/apolloschurchapp/src/ui/Share/Share.tests.js
similarity index 78%
rename from apolloschurchapp/src/ui/ShareContentButton/ShareContentButton.tests.js
rename to apolloschurchapp/src/ui/Share/Share.tests.js
index 106f6b3..1a059da 100644
--- a/apolloschurchapp/src/ui/ShareContentButton/ShareContentButton.tests.js
+++ b/apolloschurchapp/src/ui/Share/Share.tests.js
@@ -3,17 +3,18 @@ import renderer from 'react-test-renderer';
 
 import { Providers } from '@apollosproject/ui-kit';
 
-import ShareContentButton from '.';
+import Share from '.';
 
 describe('the Share component', () => {
   it('should render', () => {
     const shareObject = {
       title: 'Shared Object Title',
       url: 'https://github.com/ApollosProject/apollos-prototype',
+      message: 'Share this with all your friends and family',
     };
     const tree = renderer.create(
       <Providers>
-        <ShareContentButton content={shareObject} />
+        <Share content={shareObject} />
       </Providers>
     );
     expect(tree).toMatchSnapshot();
diff --git a/apolloschurchapp/src/ui/ShareContentButton/index.js b/apolloschurchapp/src/ui/Share/index.js
similarity index 84%
rename from apolloschurchapp/src/ui/ShareContentButton/index.js
rename to apolloschurchapp/src/ui/Share/index.js
index 4286a7f..11e597f 100644
--- a/apolloschurchapp/src/ui/ShareContentButton/index.js
+++ b/apolloschurchapp/src/ui/Share/index.js
@@ -10,13 +10,13 @@ const enhance = compose(
   withTheme()
 );
 
-const ShareContentButton = enhance(({ content, theme }) => (
+const Share = enhance(({ content, theme }) => (
   <AnalyticsConsumer>
     {({ track }) => {
       const onPress = () => {
         share(content);
         track({
-          eventName: 'Share',
+          eventName: 'ShareContent',
           properties: { id: content.id, title: content.title },
         });
       };
@@ -29,12 +29,13 @@ const ShareContentButton = enhance(({ content, theme }) => (
   </AnalyticsConsumer>
 ));
 
-ShareContentButton.propTypes = {
+Share.propTypes = {
   content: PropTypes.shape({
+    message: PropTypes.string,
     title: PropTypes.string,
     url: PropTypes.string,
     id: PropTypes.string,
   }),
 };
 
-export default ShareContentButton;
+export default Share;
diff --git a/apolloschurchapp/src/ui/ShareContentButtonConnected/ShareContentButtonConnected.tests.js b/apolloschurchapp/src/ui/ShareButton/ShareButton.tests.js
similarity index 79%
rename from apolloschurchapp/src/ui/ShareContentButtonConnected/ShareContentButtonConnected.tests.js
rename to apolloschurchapp/src/ui/ShareButton/ShareButton.tests.js
index 46a3b2c..91d1cf1 100644
--- a/apolloschurchapp/src/ui/ShareContentButtonConnected/ShareContentButtonConnected.tests.js
+++ b/apolloschurchapp/src/ui/ShareButton/ShareButton.tests.js
@@ -2,7 +2,7 @@ import React from 'react';
 import Providers from 'apolloschurchapp/src/Providers';
 import { renderWithApolloData } from 'apolloschurchapp/src/utils/testUtils';
 import getShareContent from './getShareContent';
-import ShareContentButtonConnected from '.';
+import ShareButton from '.';
 
 const shareMock = {
   request: {
@@ -16,6 +16,7 @@ const shareMock = {
         __typename: 'ContentSeriesContentItem',
         sharing: {
           url: 'https://apolloschurchapp.newspring.cc',
+          message: 'Test Message',
           title: 'Test Title ',
           __typename: 'SharableContentItem',
         },
@@ -26,21 +27,22 @@ const shareMock = {
 
 const mocks = [shareMock];
 
-describe('the ShareContentButtonConnected', () => {
+describe('the ShareButton', () => {
   it('renders a share button', async () => {
     const tree = await renderWithApolloData(
       <Providers mocks={mocks}>
-        <ShareContentButtonConnected itemId={'1'} />
+        <ShareButton itemId={'1'} />
       </Providers>
     );
     expect(tree).toMatchSnapshot();
   });
-  it('renders a share button with custom url, and title', async () => {
+  it('renders a share button with custom url, message, and title', async () => {
     const tree = await renderWithApolloData(
       <Providers mocks={mocks}>
-        <ShareContentButtonConnected
+        <ShareButton
           itemId={'1'}
           url={'https://apollosrock.com'}
+          message="Some great message"
           title="Some great title"
         />
       </Providers>
diff --git a/apolloschurchapp/src/ui/ShareButton/getShareContent.js b/apolloschurchapp/src/ui/ShareButton/getShareContent.js
new file mode 100644
index 0000000..44718b3
--- /dev/null
+++ b/apolloschurchapp/src/ui/ShareButton/getShareContent.js
@@ -0,0 +1,16 @@
+import gql from 'graphql-tag';
+
+export default gql`
+  query getShareContent($itemId: ID!) {
+    node(id: $itemId) {
+      ... on ContentItem {
+        id
+        sharing {
+          url
+          message
+          title
+        }
+      }
+    }
+  }
+`;
diff --git a/apolloschurchapp/src/ui/ShareContentButtonConnected/index.js b/apolloschurchapp/src/ui/ShareButton/index.js
similarity index 66%
rename from apolloschurchapp/src/ui/ShareContentButtonConnected/index.js
rename to apolloschurchapp/src/ui/ShareButton/index.js
index 95483b5..cc6d175 100644
--- a/apolloschurchapp/src/ui/ShareContentButtonConnected/index.js
+++ b/apolloschurchapp/src/ui/ShareButton/index.js
@@ -4,26 +4,26 @@ import PropTypes from 'prop-types';
 import { Query } from 'react-apollo';
 import { get } from 'lodash';
 
-import ShareContentButton from 'apolloschurchapp/src/ui/ShareContentButton';
+import Share from 'apolloschurchapp/src/ui/Share';
 
 import GET_SHARE_CONTENT from './getShareContent';
 
-const ShareContentButtonConnected = ({ itemId, title, message, url }) => (
+const ShareButton = ({ itemId, title, message, url }) => (
   <Query query={GET_SHARE_CONTENT} variables={{ itemId }}>
     {({ data }) => {
       const sharing = get(data, 'node.sharing', {});
       const content = {
         id: itemId,
         title: title || sharing.title,
-        message: message || sharing.message,
+        messsage: message || sharing.message,
         url: url || sharing.url,
       };
-      return <ShareContentButton content={content} />;
+      return <Share content={content} />;
     }}
   </Query>
 );
 
-ShareContentButtonConnected.propTypes = {
+ShareButton.propTypes = {
   itemId: PropTypes.string.isRequired,
   // These props are available to override the default sharing data for a node.
   title: PropTypes.string,
@@ -31,4 +31,4 @@ ShareContentButtonConnected.propTypes = {
   url: PropTypes.string,
 };
 
-export default ShareContentButtonConnected;
+export default ShareButton;
diff --git a/apolloschurchapp/src/ui/UserAvatarView/AvatarForm.js b/apolloschurchapp/src/ui/UserAvatarView/AvatarForm.js
new file mode 100644
index 0000000..1787f08
--- /dev/null
+++ b/apolloschurchapp/src/ui/UserAvatarView/AvatarForm.js
@@ -0,0 +1,109 @@
+import React, { PureComponent } from 'react';
+import { View } from 'react-native';
+import PropTypes from 'prop-types';
+import { get } from 'lodash';
+import { Query, ApolloConsumer } from 'react-apollo';
+
+import {
+  Touchable,
+  ButtonLink,
+  Avatar,
+  withTheme,
+  H5,
+  styled,
+} from '@apollosproject/ui-kit';
+import GET_USER_PROFILE from '../../tabs/connect/getUserProfile';
+import uploadPhoto from './uploadPhoto';
+
+const GetPhotoData = ({ children }) => (
+  <Query query={GET_USER_PROFILE}>
+    {({ data: { currentUser = {} } = {} }) => {
+      const photo = get(currentUser, 'profile.photo');
+      return children({ photo });
+    }}
+  </Query>
+);
+
+GetPhotoData.propTypes = {
+  children: PropTypes.func.isRequired,
+};
+
+const StyledView = styled(({ theme }) => ({
+  marginRight: 0,
+  marginBottom: theme.sizing.baseUnit * 0.75,
+  marginTop: theme.sizing.baseUnit * 0.5,
+}))(View);
+
+const RoundTouchable = withTheme(({ theme, size }) => ({
+  borderRadius: get(theme.sizing.avatar, size, theme.sizing.avatar.small),
+}))(Touchable);
+
+const Wrapper = styled({
+  justifyContent: 'center',
+  alignItems: 'center',
+})(View);
+
+export default class AvatarForm extends PureComponent {
+  state = {
+    isUploadingFile: false,
+  };
+
+  componentWillUnmount() {
+    this.setState({ isUploadingFile: false });
+  }
+
+  handleUploadPhoto = async ({ client }) => {
+    try {
+      await uploadPhoto({
+        client,
+        onUpload: () => this.setState({ isUploadingFile: true }),
+      });
+      await this.setState({ isUploadingFile: false });
+    } catch (e) {
+      console.warn(e);
+      this.setState({ isUploadingFile: false });
+    }
+  };
+
+  render() {
+    const { isUploadingFile } = this.state;
+
+    return (
+      <ApolloConsumer>
+        {(client) => (
+          <Wrapper>
+            <RoundTouchable
+              disabled={this.props.disabled}
+              onPress={() => this.handleUploadPhoto({ client })}
+              size="medium"
+            >
+              <GetPhotoData>
+                {({ photo }) => (
+                  <StyledView>
+                    <Avatar
+                      source={photo}
+                      size="medium"
+                      isLoading={isUploadingFile}
+                    />
+                  </StyledView>
+                )}
+              </GetPhotoData>
+            </RoundTouchable>
+            {this.props.text ? (
+              <H5>
+                <ButtonLink onPress={() => this.handleUploadPhoto({ client })}>
+                  Change Photo
+                </ButtonLink>
+              </H5>
+            ) : null}
+          </Wrapper>
+        )}
+      </ApolloConsumer>
+    );
+  }
+}
+
+AvatarForm.propTypes = {
+  disabled: PropTypes.bool,
+  text: PropTypes.bool,
+};
diff --git a/apolloschurchapp/src/ui/UserAvatarView/UserAvatarView.stories.js b/apolloschurchapp/src/ui/UserAvatarView/UserAvatarView.stories.js
new file mode 100644
index 0000000..f32c776
--- /dev/null
+++ b/apolloschurchapp/src/ui/UserAvatarView/UserAvatarView.stories.js
@@ -0,0 +1,23 @@
+import React from 'react';
+import { storiesOf } from '@apollosproject/ui-storybook';
+
+import UserAvatarView from '.';
+
+storiesOf('UserAvatarView', module)
+  .add('example', () => (
+    <UserAvatarView
+      photo={'https://picsum.photos/400/400/?random'}
+      firstName={'Marty'}
+      lastName={'McFly'}
+      location={'Hill Valley'}
+    />
+  ))
+  .add('isLoading', () => (
+    <UserAvatarView
+      photo={'https://picsum.photos/400/400/?random'}
+      firstName={'Marty'}
+      lastName={'McFly'}
+      location={'Hill Valley'}
+      isLoading
+    />
+  ));
diff --git a/apolloschurchapp/src/ui/UserAvatarView/index.js b/apolloschurchapp/src/ui/UserAvatarView/index.js
new file mode 100644
index 0000000..d18a809
--- /dev/null
+++ b/apolloschurchapp/src/ui/UserAvatarView/index.js
@@ -0,0 +1,63 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import { View } from 'react-native';
+
+import {
+  H3,
+  PaddedView,
+  ConnectedImage,
+  styled,
+  ChannelLabel,
+  withIsLoading,
+} from '@apollosproject/ui-kit';
+
+import AvatarForm from './AvatarForm';
+
+const Container = styled(({ theme }) => ({
+  backgroundColor: theme.colors.background.paper,
+  flexDirection: 'row',
+}))(View);
+
+const Content = styled(({ theme }) => ({
+  flex: 1,
+  justifyContent: 'center',
+  paddingVertical: theme.sizing.baseUnit * 0.5,
+}))(PaddedView);
+
+const UserAvatarView = withIsLoading(
+  ({
+    theme,
+    firstName,
+    lastName,
+    location,
+    isLoading,
+    disabled,
+    ...viewProps
+  }) => (
+    // todo: handle file select stuff
+    <Container {...viewProps}>
+      <AvatarForm isLoading={isLoading} text={false} disabled={disabled} />
+      <Content>
+        <H3>
+          {firstName} {lastName}
+        </H3>
+        {location && (
+          <ChannelLabel icon="pin" label={location} isLoading={isLoading} />
+        )}
+      </Content>
+    </Container>
+  )
+);
+
+UserAvatarView.propTypes = {
+  photo: ConnectedImage.propTypes.source,
+  firstName: PropTypes.string,
+  lastName: PropTypes.string,
+  location: PropTypes.string,
+  isLoading: PropTypes.bool,
+  disabled: PropTypes.bool,
+  blurIntensity: PropTypes.number,
+  ...View.propTypes,
+};
+
+export default UserAvatarView;
diff --git a/apolloschurchapp/src/user-settings/uploadPhoto.js b/apolloschurchapp/src/ui/UserAvatarView/uploadPhoto.js
similarity index 96%
rename from apolloschurchapp/src/user-settings/uploadPhoto.js
rename to apolloschurchapp/src/ui/UserAvatarView/uploadPhoto.js
index 7eb5815..4c051e5 100644
--- a/apolloschurchapp/src/user-settings/uploadPhoto.js
+++ b/apolloschurchapp/src/ui/UserAvatarView/uploadPhoto.js
@@ -1,7 +1,7 @@
 import gql from 'graphql-tag';
 import ImagePicker from 'react-native-image-picker';
 import { ReactNativeFile } from 'apollo-upload-client';
-import GET_USER_PROFILE from './getUserPhoto';
+import GET_USER_PROFILE from '../../tabs/connect/getUserProfile';
 
 const options = {
   title: 'Select Profile Image',
diff --git a/apolloschurchapp/src/user-settings/ChangeAvatar.js b/apolloschurchapp/src/user-settings/ChangeAvatar.js
deleted file mode 100644
index ccadf1b..0000000
--- a/apolloschurchapp/src/user-settings/ChangeAvatar.js
+++ /dev/null
@@ -1,76 +0,0 @@
-import React, { PureComponent } from 'react';
-import { View } from 'react-native';
-import PropTypes from 'prop-types';
-import { get } from 'lodash';
-import { Query, ApolloConsumer } from 'react-apollo';
-
-import { PaddedView, Avatar, styled } from '@apollosproject/ui-kit';
-import GET_USER_PHOTO from './getUserPhoto';
-import uploadPhoto from './uploadPhoto';
-
-const GetPhotoData = ({ children }) => (
-  <Query query={GET_USER_PHOTO}>
-    {({ data: { currentUser = {} } = {} }) => {
-      const photo = get(currentUser, 'profile.photo');
-      return children({ photo });
-    }}
-  </Query>
-);
-
-GetPhotoData.propTypes = {
-  children: PropTypes.func.isRequired,
-};
-
-const Wrapper = styled({
-  justifyContent: 'center',
-  alignItems: 'center',
-})(View);
-
-export default class AvatarForm extends PureComponent {
-  state = {
-    isUploadingFile: false,
-  };
-
-  componentWillUnmount() {
-    this.setState({ isUploadingFile: false });
-  }
-
-  handleUploadPhoto = async ({ client }) => {
-    try {
-      await uploadPhoto({
-        client,
-        onUpload: () => this.setState({ isUploadingFile: true }),
-      });
-      await this.setState({ isUploadingFile: false });
-    } catch (e) {
-      console.warn(e);
-      this.setState({ isUploadingFile: false });
-    }
-  };
-
-  render() {
-    const { isUploadingFile } = this.state;
-
-    return (
-      <ApolloConsumer>
-        {(client) => (
-          <Wrapper>
-            <GetPhotoData>
-              {({ photo }) => (
-                <PaddedView horizontal={false}>
-                  <Avatar
-                    source={photo}
-                    size="large"
-                    buttonIcon="camera"
-                    onPressIcon={() => this.handleUploadPhoto({ client })}
-                    isLoading={isUploadingFile}
-                  />
-                </PaddedView>
-              )}
-            </GetPhotoData>
-          </Wrapper>
-        )}
-      </ApolloConsumer>
-    );
-  }
-}
diff --git a/apolloschurchapp/src/user-settings/Locations/MapView.js b/apolloschurchapp/src/user-settings/Locations/MapView.js
index 74e5743..d69b876 100644
--- a/apolloschurchapp/src/user-settings/Locations/MapView.js
+++ b/apolloschurchapp/src/user-settings/Locations/MapView.js
@@ -68,6 +68,10 @@ class MapView extends Component {
     }),
   };
 
+  state = {
+    campus: null,
+  };
+
   animation = new Animated.Value(0);
 
   componentDidMount() {
@@ -84,33 +88,28 @@ class MapView extends Component {
     return { paddingHorizontal: this.props.theme.sizing.baseUnit * 0.75 }; // pad cards from edge of screen but account for card margin
   }
 
-  get currentCampus() {
-    const cardIndex = Math.floor(
-      this.previousScrollPosition / CARD_WIDTH + 0.3
-    ); // animate 30% away from landing on the next item;
-    const campus = this.props.campuses[cardIndex];
-    return campus;
-  }
-
   updateCoordinates = ({ value }) => {
     this.previousScrollPosition = value;
-
-    const campus = this.currentCampus;
-
-    const { userLocation } = this.props;
+    const cardIndex = Math.floor(value / CARD_WIDTH + 0.3); // animate 30% away from landing on the next item;
+    const campus = this.props.campuses[cardIndex];
+    this.setState({ campus });
     if (!campus) {
-      this.map.fitToCoordinates([...this.props.campuses, userLocation], {
-        edgePadding: {
-          top: 100,
-          left: 100,
-          right: 100,
-          // This is higher to avoid the campus cards (baseUnit * 6) on the bottom
-          bottom: 100 + this.props.theme.sizing.baseUnit * 12,
-        },
-      });
+      this.map.fitToCoordinates(
+        [...this.props.campuses, this.props.userLocation],
+        {
+          edgePadding: {
+            top: 100,
+            left: 100,
+            right: 100,
+            // This is higher to avoid the campus cards (baseUnit * 6) on the bottom
+            bottom: 100 + this.props.theme.sizing.baseUnit * 12,
+          },
+        }
+      );
       return;
     }
 
+    const { userLocation } = this.props;
     this.map.fitToCoordinates([campus, userLocation], {
       edgePadding: {
         top: 100,
@@ -200,7 +199,7 @@ class MapView extends Component {
                 pill={false}
                 type="secondary"
                 onPress={() =>
-                  onLocationSelect(this.currentCampus || campuses[0])
+                  onLocationSelect(this.state.campus || campuses[0])
                 }
               />
             </PaddedView>
diff --git a/apolloschurchapp/src/user-settings/Locations/index.js b/apolloschurchapp/src/user-settings/Locations/index.js
index 985651a..bc2b6d6 100644
--- a/apolloschurchapp/src/user-settings/Locations/index.js
+++ b/apolloschurchapp/src/user-settings/Locations/index.js
@@ -2,14 +2,21 @@ import React, { PureComponent } from 'react';
 import PropTypes from 'prop-types';
 import { Query, Mutation } from 'react-apollo';
 import { Dimensions } from 'react-native';
-import Geolocation from 'react-native-geolocation-service';
+
 import { PaddedView, ButtonLink } from '@apollosproject/ui-kit';
-import requestLocation from './requestLocation';
 
 import GET_CAMPUSES from './getCampusLocations';
 import CHANGE_CAMPUS from './campusChange';
 import MapView from './MapView';
 
+const getCurrentLocation = () =>
+  new Promise((resolve, reject) => {
+    navigator.geolocation.getCurrentPosition(
+      (position) => resolve(position),
+      (e) => reject(e)
+    );
+  });
+
 class Location extends PureComponent {
   static propTypes = {
     navigation: PropTypes.shape({
@@ -23,6 +30,7 @@ class Location extends PureComponent {
       latitudeDelta: PropTypes.number,
       longitudeDelta: PropTypes.number,
     }),
+    onFinished: PropTypes.func,
   };
 
   static defaultProps = {
@@ -54,23 +62,24 @@ class Location extends PureComponent {
     },
   };
 
-  async componentDidMount() {
-    await requestLocation();
-    Geolocation.getCurrentPosition(
-      (position) => {
+  componentDidMount() {
+    return getCurrentLocation().then((position) => {
+      if (position) {
         this.setState({
           userLocation: {
             latitude: position.coords.latitude,
             longitude: position.coords.longitude,
           },
         });
-      },
-      () => null,
-      { enableHighAccuracy: true, timeout: 15000, maximumAge: 10000 }
-    );
+      }
+    });
   }
 
   render() {
+    const { navigation, onFinished } = this.props;
+    // we should use the `onFinished` from the navigation param, if it exists.
+    const handleFinished = navigation.getParam('onFinished', onFinished);
+
     return (
       <Query
         query={GET_CAMPUSES}
@@ -84,7 +93,7 @@ class Location extends PureComponent {
           <Mutation mutation={CHANGE_CAMPUS}>
             {(handlePress) => (
               <MapView
-                navigation={this.props.navigation}
+                navigation={navigation}
                 isLoading={loading}
                 error={error}
                 campuses={campuses}
@@ -96,7 +105,8 @@ class Location extends PureComponent {
                       campusId: id,
                     },
                   });
-                  this.props.navigation.goBack();
+                  await navigation.goBack();
+                  if (handleFinished) handleFinished();
                 }}
               />
             )}
diff --git a/apolloschurchapp/src/user-settings/Locations/requestLocation.android.js b/apolloschurchapp/src/user-settings/Locations/requestLocation.android.js
deleted file mode 100644
index 02c84c6..0000000
--- a/apolloschurchapp/src/user-settings/Locations/requestLocation.android.js
+++ /dev/null
@@ -1,6 +0,0 @@
-import { PermissionsAndroid } from 'react-native';
-
-export default async () =>
-  PermissionsAndroid.request(
-    PermissionsAndroid.PERMISSIONS.ACCESS_FINE_LOCATION
-  );
diff --git a/apolloschurchapp/src/user-settings/Locations/requestLocation.ios.js b/apolloschurchapp/src/user-settings/Locations/requestLocation.ios.js
deleted file mode 100644
index a3918e8..0000000
--- a/apolloschurchapp/src/user-settings/Locations/requestLocation.ios.js
+++ /dev/null
@@ -1,3 +0,0 @@
-// not neccessary in ios
-// this is handled by Geolocation.getCurrentPosition()
-export default null;
diff --git a/apolloschurchapp/src/user-settings/getUserPhoto.js b/apolloschurchapp/src/user-settings/getUserPhoto.js
deleted file mode 100644
index 9d48a44..0000000
--- a/apolloschurchapp/src/user-settings/getUserPhoto.js
+++ /dev/null
@@ -1,17 +0,0 @@
-import gql from 'graphql-tag';
-import CampusParts from 'apolloschurchapp/src/user-settings/Locations/campusFragment';
-
-export default gql`
-  query getCurrentUserProfile {
-    currentUser {
-      id
-      profile {
-        id
-        photo {
-          uri
-        }
-      }
-    }
-  }
-  ${CampusParts}
-`;
diff --git a/apolloschurchapp/src/user-settings/index.js b/apolloschurchapp/src/user-settings/index.js
index 491b707..30b1044 100644
--- a/apolloschurchapp/src/user-settings/index.js
+++ b/apolloschurchapp/src/user-settings/index.js
@@ -1,23 +1,33 @@
 import React, { PureComponent } from 'react';
-import { ScrollView } from 'react-native';
-import { StackActions, NavigationActions } from 'react-navigation';
+
 import PropTypes from 'prop-types';
 import { Query, Mutation } from 'react-apollo';
 
 import {
   BackgroundView,
+  PaddedView,
   TableView,
   Cell,
   CellIcon,
   CellText,
   Divider,
   Touchable,
+  styled,
   ActivityIndicator,
 } from '@apollosproject/ui-kit';
 import { WebBrowserConsumer } from 'apolloschurchapp/src/ui/WebBrowser';
+import AvatarForm from 'apolloschurchapp/src/ui/UserAvatarView/AvatarForm';
 
 import { GET_LOGIN_STATE, LOGOUT } from '@apollosproject/ui-auth';
-import ChangeAvatar from './ChangeAvatar';
+
+const AvatarView = styled({
+  alignItems: 'center',
+  justifyContent: 'center',
+})(PaddedView);
+
+const BackgroundContainer = styled(({ theme }) => ({
+  paddingTop: theme.sizing.baseUnit * 1.75,
+}))(BackgroundView);
 
 class UserSettings extends PureComponent {
   static navigationOptions = () => ({
@@ -38,124 +48,107 @@ class UserSettings extends PureComponent {
           if (loading) return <ActivityIndicator />;
           if (!isLoggedIn) return null;
           return (
-            <BackgroundView>
-              <ScrollView>
-                <ChangeAvatar />
-
-                <WebBrowserConsumer>
-                  {(openUrl) => (
-                    <>
-                      <TableView>
-                        <Touchable
-                          onPress={async () => {
-                            await this.props.navigation.navigate(
-                              'PersonalDetails'
-                            );
-                          }}
-                        >
-                          <Cell>
-                            <CellText>Personal Details</CellText>
-                            <CellIcon name="arrow-next" />
-                          </Cell>
-                        </Touchable>
-                        <Divider />
-                        <Touchable
-                          onPress={async () => {
-                            await this.props.navigation.navigate('Location');
-                          }}
-                        >
-                          <Cell>
-                            <CellText>Location</CellText>
-                            <CellIcon name="arrow-next" />
-                          </Cell>
-                        </Touchable>
-                        <Divider />
-                        <Touchable
-                          onPress={async () => {
-                            await this.props.navigation.navigate(
-                              'ChangePassword'
-                            );
-                          }}
-                        >
-                          <Cell>
-                            <CellText>Change Password</CellText>
-                            <CellIcon name="arrow-next" />
-                          </Cell>
-                        </Touchable>
-                      </TableView>
-                      <TableView>
-                        <Touchable
-                          onPress={() =>
-                            openUrl('https://apollosrock.newspring.cc/')
-                          }
-                        >
-                          <Cell>
-                            <CellText>Give Feedback</CellText>
-                            <CellIcon name="arrow-next" />
-                          </Cell>
-                        </Touchable>
-                      </TableView>
-                      <TableView>
-                        <Touchable
-                          onPress={() =>
-                            openUrl('https://apollosrock.newspring.cc/')
-                          }
-                        >
-                          <Cell>
-                            <CellText>Privacy Policy</CellText>
-                            <CellIcon name="arrow-next" />
-                          </Cell>
-                        </Touchable>
-                        <Divider />
-                        <Touchable
-                          onPress={() =>
-                            openUrl('https://apollosrock.newspring.cc/')
-                          }
-                        >
-                          <Cell>
-                            <CellText>Terms of Use</CellText>
-                            <CellIcon name="arrow-next" />
-                          </Cell>
-                        </Touchable>
-                      </TableView>
-                      <TableView>
-                        <Mutation mutation={LOGOUT}>
-                          {(handleLogout) => (
-                            <Touchable
-                              onPress={async () => {
-                                await handleLogout();
-                                // This resets the navigation stack, and the navigates to the first auth screen.
-                                // This ensures that user isn't navigated to a subscreen of Auth, like the pin entry screen.
-                                await this.props.navigation.dispatch(
-                                  StackActions.reset({
-                                    index: 0,
-                                    key: null,
-                                    actions: [
-                                      NavigationActions.navigate({
-                                        routeName: 'Auth',
-                                        action: NavigationActions.navigate({
-                                          routeName:
-                                            'AuthSMSPhoneEntryConnected',
-                                        }),
-                                      }),
-                                    ],
-                                  })
-                                );
-                              }}
-                            >
-                              <Cell>
-                                <CellText>Logout</CellText>
-                                <CellIcon name="arrow-next" />
-                              </Cell>
-                            </Touchable>
-                          )}
-                        </Mutation>
-                      </TableView>
-                    </>
-                  )}
-                </WebBrowserConsumer>
-              </ScrollView>
-            </BackgroundView>
+            <BackgroundContainer>
+              <AvatarView>
+                <AvatarForm text />
+              </AvatarView>
+              <WebBrowserConsumer>
+                {(openUrl) => (
+                  <BackgroundView>
+                    <TableView>
+                      <Touchable
+                        onPress={async () => {
+                          await this.props.navigation.navigate(
+                            'PersonalDetails'
+                          );
+                        }}
+                      >
+                        <Cell>
+                          <CellText>Personal Details</CellText>
+                          <CellIcon name="arrow-next" />
+                        </Cell>
+                      </Touchable>
+                      <Divider />
+                      <Touchable
+                        onPress={async () => {
+                          await this.props.navigation.navigate('Location');
+                        }}
+                      >
+                        <Cell>
+                          <CellText>Location</CellText>
+                          <CellIcon name="arrow-next" />
+                        </Cell>
+                      </Touchable>
+                      <Divider />
+                      <Touchable
+                        onPress={async () => {
+                          await this.props.navigation.navigate(
+                            'ChangePassword'
+                          );
+                        }}
+                      >
+                        <Cell>
+                          <CellText>Change Password</CellText>
+                          <CellIcon name="arrow-next" />
+                        </Cell>
+                      </Touchable>
+                    </TableView>
+                    <TableView>
+                      <Touchable
+                        onPress={() =>
+                          openUrl('https://apollosrock.newspring.cc/')
+                        }
+                      >
+                        <Cell>
+                          <CellText>Give Feedback</CellText>
+                          <CellIcon name="arrow-next" />
+                        </Cell>
+                      </Touchable>
+                    </TableView>
+                    <TableView>
+                      <Touchable
+                        onPress={() =>
+                          openUrl('https://apollosrock.newspring.cc/')
+                        }
+                      >
+                        <Cell>
+                          <CellText>Privacy Policy</CellText>
+                          <CellIcon name="arrow-next" />
+                        </Cell>
+                      </Touchable>
+                      <Divider />
+                      <Touchable
+                        onPress={() =>
+                          openUrl('https://apollosrock.newspring.cc/')
+                        }
+                      >
+                        <Cell>
+                          <CellText>Terms of Use</CellText>
+                          <CellIcon name="arrow-next" />
+                        </Cell>
+                      </Touchable>
+                    </TableView>
+                    <TableView>
+                      <Mutation mutation={LOGOUT}>
+                        {(handleLogout) => (
+                          <Touchable
+                            onPress={async () => {
+                              await handleLogout();
+                              await this.props.navigation.navigate('Connect');
+                            }}
+                          >
+                            <Cell>
+                              <CellText>Logout</CellText>
+                              <CellIcon name="arrow-next" />
+                            </Cell>
+                          </Touchable>
+                        )}
+                      </Mutation>
+                    </TableView>
+                  </BackgroundView>
+                )}
+              </WebBrowserConsumer>
+            </BackgroundContainer>
           );
         }}
       </Query>
diff --git a/apolloschurchapp/src/utils/content/__tests__/share.tests.js b/apolloschurchapp/src/utils/content/__tests__/share.tests.js
index 972edaa..2e4b76c 100644
--- a/apolloschurchapp/src/utils/content/__tests__/share.tests.js
+++ b/apolloschurchapp/src/utils/content/__tests__/share.tests.js
@@ -13,16 +13,7 @@ describe('the share function', () => {
     share({ title: 'title', url: 'http://url.com' });
     expect(Share.share).toBeCalledWith({
       title: 'title',
-      message: undefined,
-      url: 'http://url.com',
-    });
-  });
-  test('use message if provided', () => {
-    Platform.OS = 'ios';
-    share({ title: 'title', message: 'some message', url: 'http://url.com' });
-    expect(Share.share).toBeCalledWith({
-      title: 'title',
-      message: 'some message',
+      message: 'title',
       url: 'http://url.com',
     });
   });
@@ -31,7 +22,7 @@ describe('the share function', () => {
     share({ title: 'title', url: 'http://url.com' });
     expect(Share.share).toBeCalledWith({
       title: 'title',
-      message: 'http://url.com',
+      message: 'title\nhttp://url.com',
       url: 'http://url.com',
     });
   });
diff --git a/apolloschurchapp/src/utils/content/share.js b/apolloschurchapp/src/utils/content/share.js
index 6d4326f..7a8efae 100644
--- a/apolloschurchapp/src/utils/content/share.js
+++ b/apolloschurchapp/src/utils/content/share.js
@@ -1,12 +1,12 @@
 import { Platform, Share } from 'react-native';
+// import { get } from 'lodash';
+// import { track, events } from 'apolloschurchapp/src/analytics';
+// import getSiteLink from './getSiteLink';
 
-const share = ({ title, url, message }) => {
+const share = ({ title, url }) => {
   Share.share({
     title,
-    message:
-      Platform.OS === 'android'
-        ? [message, url].filter((s) => !!s).join('\n')
-        : message,
+    message: Platform.OS === 'android' ? `${title}\n${url}` : title,
     url,
   });
 };
