diff --git a/apolloschurchapp/.flowconfig b/apolloschurchapp/.flowconfig
index 9bded78..1319ea1 100644
--- a/apolloschurchapp/.flowconfig
+++ b/apolloschurchapp/.flowconfig
@@ -11,20 +11,26 @@
 ; Ignore duplicate module providers
 ; For RN Apps installed via npm, "Libraries" folder is inside
 ; "node_modules/react-native" but in the source repo it is in the root
-.*/Libraries/react-native/React.js
+node_modules/react-native/Libraries/react-native/React.js
 
 ; Ignore polyfills
-.*/Libraries/polyfills/.*
+node_modules/react-native/Libraries/polyfills/.*
 
-; Ignore metro
-.*/node_modules/metro/.*
+; These should not be required directly
+; require from fbjs/lib instead: require('fbjs/lib/warning')
+node_modules/warning/.*
+
+; Flow doesn't support platforms
+.*/Libraries/Utilities/HMRLoadingView.js
+
+[untyped]
+.*/node_modules/@react-native-community/cli/.*/.*
 
 [include]
 
 [libs]
 node_modules/react-native/Libraries/react-native/react-native-interface.js
 node_modules/react-native/flow/
-node_modules/react-native/flow-github/
 
 [options]
 emoji=true
@@ -32,6 +38,10 @@ emoji=true
 esproposal.optional_chaining=enable
 esproposal.nullish_coalescing=enable
 
+module.file_ext=.js
+module.file_ext=.json
+module.file_ext=.ios.js
+
 module.system=haste
 module.system.haste.use_name_reducers=true
 # get basename
@@ -44,27 +54,46 @@ module.system.haste.name_reducers='^\(.*\)\.android$' -> '\1'
 module.system.haste.name_reducers='^\(.*\)\.native$' -> '\1'
 module.system.haste.paths.blacklist=.*/__tests__/.*
 module.system.haste.paths.blacklist=.*/__mocks__/.*
-module.system.haste.paths.blacklist=<PROJECT_ROOT>/node_modules/react-native/Libraries/Animated/src/polyfills/.*
 module.system.haste.paths.whitelist=<PROJECT_ROOT>/node_modules/react-native/Libraries/.*
+module.system.haste.paths.whitelist=<PROJECT_ROOT>/node_modules/react-native/RNTester/.*
+module.system.haste.paths.whitelist=<PROJECT_ROOT>/node_modules/react-native/IntegrationTests/.*
+module.system.haste.paths.blacklist=<PROJECT_ROOT>/node_modules/react-native/Libraries/react-native/react-native-implementation.js
+module.system.haste.paths.blacklist=<PROJECT_ROOT>/node_modules/react-native/Libraries/Animated/src/polyfills/.*
 
 munge_underscores=true
 
 module.name_mapper='^[./a-zA-Z0-9$_-]+\.\(bmp\|gif\|jpg\|jpeg\|png\|psd\|svg\|webp\|m4v\|mov\|mp4\|mpeg\|mpg\|webm\|aac\|aiff\|caf\|m4a\|mp3\|wav\|html\|pdf\)$' -> 'RelativeImageStub'
 
-module.file_ext=.js
-module.file_ext=.jsx
-module.file_ext=.json
-module.file_ext=.native.js
-
 suppress_type=$FlowIssue
 suppress_type=$FlowFixMe
 suppress_type=$FlowFixMeProps
 suppress_type=$FlowFixMeState
 
-suppress_comment=\\(.\\|\n\\)*\\$FlowFixMe\\($\\|[^(]\\|(\\(<VERSION>\\)? *\\(site=[a-z,_]*react_native[a-z,_]*\\)?)\\)
-suppress_comment=\\(.\\|\n\\)*\\$FlowIssue\\((\\(<VERSION>\\)? *\\(site=[a-z,_]*react_native[a-z,_]*\\)?)\\)?:? #[0-9]+
-suppress_comment=\\(.\\|\n\\)*\\$FlowFixedInNextDeploy
+suppress_comment=\\(.\\|\n\\)*\\$FlowFixMe\\($\\|[^(]\\|(\\(<VERSION>\\)? *\\(site=[a-z,_]*react_native\\(_ios\\)?_\\(oss\\|fb\\)[a-z,_]*\\)?)\\)
+suppress_comment=\\(.\\|\n\\)*\\$FlowIssue\\((\\(<VERSION>\\)? *\\(site=[a-z,_]*react_native\\(_ios\\)?_\\(oss\\|fb\\)[a-z,_]*\\)?)\\)?:? #[0-9]+
 suppress_comment=\\(.\\|\n\\)*\\$FlowExpectedError
 
+[lints]
+sketchy-null-number=warn
+sketchy-null-mixed=warn
+sketchy-number=warn
+untyped-type-import=warn
+nonstrict-import=warn
+deprecated-type=warn
+unsafe-getters-setters=warn
+inexact-spread=warn
+unnecessary-invariant=warn
+signature-verification-failure=warn
+deprecated-utility=error
+
+[strict]
+deprecated-type
+nonstrict-import
+sketchy-null
+unclear-type
+unsafe-getters-setters
+untyped-import
+untyped-type-import
+
 [version]
-^0.86.0
+^0.98.0
diff --git a/apolloschurchapp/.gitignore b/apolloschurchapp/.gitignore
index 12c1116..1401c87 100644
--- a/apolloschurchapp/.gitignore
+++ b/apolloschurchapp/.gitignore
@@ -45,3 +45,6 @@ project.xcworkspace
 .env.development.local
 .env.test.local
 .env.production.local
+
+# CocoaPods
+/ios/Pods/
\ No newline at end of file
diff --git a/apolloschurchapp/__mocks__/@react-native-community/async-storage/index.js b/apolloschurchapp/__mocks__/@react-native-community/async-storage/index.js
new file mode 100644
index 0000000..a4bf3f4
--- /dev/null
+++ b/apolloschurchapp/__mocks__/@react-native-community/async-storage/index.js
@@ -0,0 +1,23 @@
+let cache = {};
+export default {
+  setItem: (key, value) =>
+    new Promise((resolve, reject) =>
+      typeof key !== 'string' || typeof value !== 'string'
+        ? reject(new Error('key and value must be string'))
+        : resolve((cache[key] = value))
+    ),
+  getItem: (key, value) =>
+    new Promise((resolve) =>
+      cache.hasOwnProperty(key) ? resolve(cache[key]) : resolve(null)
+    ),
+  removeItem: (key) =>
+    new Promise((resolve, reject) =>
+      cache.hasOwnProperty(key)
+        ? resolve(delete cache[key])
+        : reject('No such key!')
+    ),
+  clear: (key) => new Promise((resolve, reject) => resolve((cache = {}))),
+
+  getAllKeys: (key) =>
+    new Promise((resolve, reject) => resolve(Object.keys(cache))),
+};
diff --git a/apolloschurchapp/__mocks__/@react-native-community/geolocation/index.js b/apolloschurchapp/__mocks__/@react-native-community/geolocation/index.js
new file mode 100644
index 0000000..0e77776
--- /dev/null
+++ b/apolloschurchapp/__mocks__/@react-native-community/geolocation/index.js
@@ -0,0 +1,3 @@
+export default {
+  getCurrentPosition: async () => null,
+};
diff --git a/apolloschurchapp/__mocks__/react-native-permissions/index.js b/apolloschurchapp/__mocks__/react-native-permissions/index.js
new file mode 100644
index 0000000..4d543c8
--- /dev/null
+++ b/apolloschurchapp/__mocks__/react-native-permissions/index.js
@@ -0,0 +1 @@
+export * from 'react-native-permissions/mock.js';
diff --git a/apolloschurchapp/android/app/build.gradle b/apolloschurchapp/android/app/build.gradle
index 12def44..e05ab7a 100644
--- a/apolloschurchapp/android/app/build.gradle
+++ b/apolloschurchapp/android/app/build.gradle
@@ -59,6 +59,9 @@ import com.android.build.OutputFile
  *   // the root of your project, i.e. where "package.json" lives
  *   root: "../../",
  *
+ *   // https://facebook.github.io/react-native/docs/performance#enable-the-ram-format
+ *   bundleCommand: "ram-bundle",
+ *
  *   // where to put the JS bundle asset in debug mode
  *   jsBundleDirDebug: "$buildDir/intermediates/assets/debug",
  *
@@ -89,7 +92,8 @@ import com.android.build.OutputFile
  */
 
 project.ext.react = [
-    entryFile: "index.js"
+    entryFile: "index.js",
+    enableHermes: false,  // clean and rebuild if changing
 ]
 
 apply from: "../../node_modules/react-native/react.gradle"
@@ -109,6 +113,27 @@ def enableSeparateBuildPerCPUArchitecture = false
  */
 def enableProguardInReleaseBuilds = false
 
+/**
+ * The preferred build flavor of JavaScriptCore.
+ *
+ * For example, to use the international variant, you can use:
+ * `def jscFlavor = 'org.webkit:android-jsc-intl:+'`
+ *
+ * The international variant includes ICU i18n library and necessary data
+ * allowing to use e.g. `Date.toLocaleString` and `String.localeCompare` that
+ * give correct results when using with locales other than en-US.  Note that
+ * this variant is about 6MiB larger per architecture than default.
+ */
+def jscFlavor = 'org.webkit:android-jsc:+'
+/**
+ * Whether to enable the Hermes VM.
+ *
+ * This should be set on project.ext.react and mirrored here.  If it is not set
+ * on project.ext.react, JavaScript will not be compiled to Hermes Bytecode
+ * and the benefits of using Hermes will therefore be sharply reduced.
+ */
+def enableHermes = project.ext.react.get("enableHermes", false);
+
 android {
     compileSdkVersion rootProject.ext.compileSdkVersion
 
@@ -121,10 +146,10 @@ android {
         applicationId "com.apolloschurch.app"
         minSdkVersion rootProject.ext.minSdkVersion
         targetSdkVersion rootProject.ext.targetSdkVersion
-        versionCode 11
-        versionName "0.8.6"
+        versionCode 24
+        versionName "1.2.5"
         ndk {
-            abiFilters "armeabi-v7a", "x86"
+            abiFilters "armeabi-v7a", "x86", "arm64-v8a", "x86_64"
         }
         resValue "string", "build_config_package", "com.apolloschurchapp"
     }
@@ -155,31 +180,28 @@ android {
             }
         }
     }
+    packagingOptions {
+        pickFirst '**/armeabi-v7a/libc++_shared.so'
+        pickFirst '**/x86/libc++_shared.so'
+        pickFirst '**/arm64-v8a/libc++_shared.so'
+        pickFirst '**/x86_64/libc++_shared.so'
+        pickFirst '**/x86/libjsc.so'
+        pickFirst '**/armeabi-v7a/libjsc.so'
+    }
 }
 
 dependencies {
-       // added this and the two google play packages below when upgraded rn-maps to 0.24.2
-    implementation(project(':react-native-maps')){
-      exclude group: 'com.google.android.gms', module: 'play-services-base'
-      exclude group: 'com.google.android.gms', module: 'play-services-maps'
-    }
-    implementation 'com.google.android.gms:play-services-base:10.0.1'
-    implementation 'com.google.android.gms:play-services-maps:10.0.1'
-    implementation project(':rn-fetch-blob')
-    implementation project(':react-native-webview')
-    implementation project(':react-native-video')
-    implementation project(':react-native-svg')
-    implementation project(':react-native-splash-screen')
-    implementation project(':react-native-screens')
-    implementation project(':react-native-onesignal')
-    implementation project(':react-native-music-control')
-    implementation project(':react-native-linear-gradient')
-    implementation project(':react-native-image-picker')
-    implementation project(':react-native-device-info')
-    implementation project(':react-native-config')
     implementation fileTree(dir: "libs", include: ["*.jar"])
-    implementation "com.android.support:appcompat-v7:${rootProject.ext.supportLibVersion}"
     implementation "com.facebook.react:react-native:+"  // From node_modules
+    implementation 'com.facebook.fresco:animated-gif:2.0.0'
+
+    if (enableHermes) {
+      def hermesPath = "../../node_modules/hermesvm/android/";
+      debugImplementation files(hermesPath + "hermes-debug.aar")
+      releaseImplementation files(hermesPath + "hermes-release.aar")
+    } else {
+      implementation jscFlavor
+    }
 }
 
 // Run this once to be able to run the application with BUCK
@@ -188,3 +210,6 @@ task copyDownloadableDepsToLibs(type: Copy) {
     from configurations.compile
     into 'libs'
 }
+
+
+apply from: file("../../node_modules/@react-native-community/cli-platform-android/native_modules.gradle"); applyNativeModulesAppBuildGradle(project)
diff --git a/apolloschurchapp/android/app/debug.keystore b/apolloschurchapp/android/app/debug.keystore
new file mode 100644
index 0000000000000000000000000000000000000000..364e105ed39fbfd62001429a68140672b06ec0de
GIT binary patch
literal 2257
zcmchYXEfYt8;7T1^dLH$VOTZ%2NOdOH5j5LYLtZ0q7x-V8_6gU5)#7dkq{HTmsfNq
zB3ZqcAxeY^G10@?efK?Q&)M(qInVv!xjx+IKEL}p*K@LYvIzo#AZG>st5|P)<NSTx
zaX4qkKvxgvduLn=+uyMU0?|MKJnRHup=FSw1;fCS5H>KF1_Z;y){W{<7K{nl!CPuE
z_^(!C<zwx~4vkzfMSaP=kxXVvQwM3%Ay_ek2-`cPW95k|{C@Z&h`EF*zn$>(Ol0n8
zK13*rzAtW>(wULKPRYLd7G18F8#1P`V*9`(Poj26eOXYyBVZPno~Cvvhx7vPjAuZo
zF?VD!zB~QG(!zbw#qsxT8%BSpqMZ4f70ZPn-3y$L8{EVbbN9$H`B&Z1quk9tgp5FM
zuxp3pJ0b8u|3+#5bkJ4SRnCF2l7#DyLYXYY8*?OuAwK4E6J{0N=O3QNVzQ$L#FKkR
zi-c@&!nDvezOV$i$Lr}iF$XEcwnybQ6WZrMKuw8gCL^U#D;q3t&HpTbq<OCu4=vvx
z+*t&~u`D?fzM7w1KV(PGnl;+>yD<vfkh#(e<fd+>%vG=TeDlzCT~MXUPC|Leb-Uk+
z=vnMd(|>ld?Fh>V8poP;q;;nc@en$|rnP0ytzD&fFkCeUE^kG9Kx4wUh!!rpjwKDP
zyw_e|a<e3|`{mv3r2M=Y@^U!pm#7j^ThHRQVk?Vnmer%caOEVp(qq~_F)5>^x_w3E
zP}}@$g>*LLJ4i0`Gx)qltL}@;mDv}D*xR^oeWcWdPkW@Uu)B^X&4W1$p6}ze!zudJ
zyiLg@uggoMIArBr*27EZV7djDg@W1MaL+rcZ-lrANJQ%%>u8)ZMWU@R2qtnmG(acP
z0d_^!<x#%Gz}~$zWXeGVMaRb7^24s-QHIx@R~bqYM+=6&K0KNnaD8=`HoL$>t>}5W
zpT`*2NR+0+SpTHb+6Js4b;%LJB;B_-ChhnU5py}iJtku*hm5F0!iql8Hrpcy1aYbT
z1*dKC5ua6pMX@@iO<YVC*(hAY;gal|Q`P50n*yIgxM$AhPpp<)-!cZBBZ}d;v*}Ya
zX#PNA;zxbnMQ@#Ol=y`iwpg-gLhKg+HAR0>NI?Hpr%h;&YaXp9n!ND7-=a%BD7v&g
zOO41M6EbE24mJ#S$Ui0-b<Pg^Ot>rR5M<ND3tGBdHh`%H&yL@xA9_yD8+*q%4YmrD
z;m%{o(%A28w7(ive$sbquebHRW}lET7&a4ndKh^l+NNZxy34<uKagv+RlH<!PhP-(
zUZt+lx~>L%@|ndz^)YLMMV1atna{Fw<;TF@>d&F|!Z>8eg>>hkFrV)W+uv=`^F9^e
zzzM2*oOjT9%gLoub<y5^rO=<NS}R)0)Dr@qml0fp7>%(R57p-`TXFe#oh1_{&N-YN
z<}artH|m=d8TQuKSWE)Z%puU|g|^^NFwC#N=@dPhasyYjoy(fdEVfKR@cXK<O0Jlt
z3A6)hMtVOAow~=y#0-unc_Aq{-*TH#56?JNBQHJ!M$7!ZqD=N)iH}N@p(#?0I;-+p
z5%Wu^=WkB!M?DcOt><c4vmQ<|QmDFDiChNBw>HZV-`06HsP`|Ftx;8<a2I7Rrpa@d
za7$*%uou_c2APjM#XWjjQ9p6NrdKb%k>(YD$fFXumLWbGnu$GMqRncXYY9mwz9$ap
zQtfZB^_BeNYITh^hA7+(XNFox5WMeG_LtJ%*Q}$8VKDI_p8^pqX)}NMb`0e|wgF7D
zuQACY_Ua<1ri{;Jwt@_1sW9zzdgnyh_O#8y+C;LcZq6=4e^cs6KvmK@$vVpKFGbQ=
z$)Eux5C|Fx;Gtmv9^#Y-g@7Rt7*eLp5n!gJmn7&B_L$G?NCN`AP>cXQEz}%F%K<UJ
zjyiYd&$A1hgU;OB!`mm=`+tP)UxeXbgpq?z<G*%BaRKN5>;vUs{+l4Q{}eWW;ATe2
zqvXzxoIDy(u;F2q1JH7Sf;{jy_<s+C2Mhl*lCvKJiU+fT06drhf(L^^DRbV4U;8{q
zwSNgo6s0oXoEZ#m8V_~tgoJ-uE9JT}%4uJC-NUMtH{()HFPE!t^h3BHdSIi`Po!((
z{Xh^oO_Q*YNRv=1ySlG1HE8vK&gSM1J;hi{j~`aC$1miMRE4r7E^V7MMmH*bEj3=9
zti8Pmw`3cR)6th6Y04yOI8^cD3j-%;0^DPdxYgSFEw>j})F+cKlIOmNfjBGHoG^CN
zM|Ho&&X|L-36f}Q-obEACz`sI%2f&k>z5c$2TyTSj~vmO)BW~+N^kt`Jt@R|s!){H
ze1_eCrlNaPkJQhL$WG&iRvF*YG=gXd1IyYQ9ew|iYn7r~g!wOnw;@n42>enAxBv*A
zEmV*N#sxdicyNM=A4<rw+G=O0XVDU$K<*&^8RFTyItvjDau^EYeD~3b=Nh|7dm~%m
zR?Ff+mr>|yaOC5MByts}s_Hpfj|y<6G=o=!3S@eIFKDdpR7|FY>L&Wat&oW&cm&X~
z5Bt>Fcq(fgnvlvLSYg&o6>&f<Cb8<D;~_?*j~^uo1`M+gz-Q8qvWHW%3dm!nySArT
ztI3V0ch+e~E}Ll`j%ID2_g3*Ex(thKv8URgjMB>Y`ODg4`V^lWWD=%oJ#Kbad2u~!
zLECFS*??>|vDsNR&pH=Ze0Eo`sC_G`OjoEKVHY|wmwlX&(XBE<@sx3Hd^gt<UzUXA
z9W!iDc7hl1L;!79D7&$KkM*I;>d-fNwUHsylg06p`U2y_={u}Bc<WnGT`_h0VE8u8
EA81kH<^TWy

literal 0
HcmV?d00001

diff --git a/apolloschurchapp/android/app/proguard-rules.pro b/apolloschurchapp/android/app/proguard-rules.pro
index a92fa17..11b0257 100644
--- a/apolloschurchapp/android/app/proguard-rules.pro
+++ b/apolloschurchapp/android/app/proguard-rules.pro
@@ -8,10 +8,3 @@
 #   http://developer.android.com/guide/developing/tools/proguard.html
 
 # Add any project specific keep options here:
-
-# If your project uses WebView with JS, uncomment the following
-# and specify the fully qualified class name to the JavaScript interface
-# class:
-#-keepclassmembers class fqcn.of.javascript.interface.for.webview {
-#   public *;
-#}
diff --git a/apolloschurchapp/android/app/src/main/AndroidManifest.xml b/apolloschurchapp/android/app/src/main/AndroidManifest.xml
index 5e6aee9..4d1e19d 100644
--- a/apolloschurchapp/android/app/src/main/AndroidManifest.xml
+++ b/apolloschurchapp/android/app/src/main/AndroidManifest.xml
@@ -5,7 +5,7 @@
     <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
     <uses-permission android:name="android.permission.CAMERA" />
     <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION"/>
-
+    <uses-permission android:name="android.permission.FOREGROUND_SERVICE" />
 
     <application
       android:name=".MainApplication"
@@ -18,28 +18,16 @@
         android:name="com.google.android.geo.API_KEY"
         android:value="@string/GOOGLE_MAPS_API_KEY"/>
       <activity
-        android:name=".LaunchActivity"
-        android:theme="@style/LaunchTheme"
-        android:label="@string/app_name">
+        android:name=".MainActivity"
+        android:label="@string/app_name"
+        android:configChanges="keyboard|keyboardHidden|orientation|screenSize"
+        android:windowSoftInputMode="adjustPan"
+        android:launchMode="singleTask">
         <intent-filter>
             <action android:name="android.intent.action.MAIN" />
             <category android:name="android.intent.category.LAUNCHER" />
-     <action android:name="android.intent.action.DOWNLOAD_COMPLETE"/>
-        </intent-filter>
-        <intent-filter android:label="filter_react_native">
-          <action android:name="android.intent.action.VIEW" />
-          <category android:name="android.intent.category.DEFAULT" />
-          <category android:name="android.intent.category.BROWSABLE" />
-          <data android:scheme="peopleapp" android:host="people" /> // A
         </intent-filter>
       </activity>
-      <activity
-        android:name=".MainActivity"
-        android:label="@string/app_name"
-        android:configChanges="keyboard|keyboardHidden|orientation|screenSize"
-        android:windowSoftInputMode="adjustPan"
-        android:launchMode="singleTask"
-      />
       <activity android:name="com.facebook.react.devsupport.DevSettingsActivity" />
     </application>
 
diff --git a/apolloschurchapp/android/app/src/main/java/com/apolloschurchapp/LaunchActivity.java b/apolloschurchapp/android/app/src/main/java/com/apolloschurchapp/LaunchActivity.java
deleted file mode 100644
index 6c4d404..0000000
--- a/apolloschurchapp/android/app/src/main/java/com/apolloschurchapp/LaunchActivity.java
+++ /dev/null
@@ -1,16 +0,0 @@
-package com.apolloschurchapp;
-
-import android.content.Intent;
-import android.os.Bundle;
-import android.support.v7.app.AppCompatActivity;
-
-public class LaunchActivity extends AppCompatActivity {
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-
-        Intent intent = new Intent(this, MainActivity.class);
-        startActivity(intent);
-        finish();
-    }
-}
\ No newline at end of file
diff --git a/apolloschurchapp/android/app/src/main/java/com/apolloschurchapp/MainActivity.java b/apolloschurchapp/android/app/src/main/java/com/apolloschurchapp/MainActivity.java
index 0b9f1ce..27565e6 100644
--- a/apolloschurchapp/android/app/src/main/java/com/apolloschurchapp/MainActivity.java
+++ b/apolloschurchapp/android/app/src/main/java/com/apolloschurchapp/MainActivity.java
@@ -1,12 +1,15 @@
 package com.apolloschurchapp;
 import android.os.Bundle;
 import com.facebook.react.ReactActivity;
+import com.facebook.react.ReactActivityDelegate;
+import com.facebook.react.ReactRootView;
+import com.swmansion.gesturehandler.react.RNGestureHandlerEnabledRootView;
 import org.devio.rn.splashscreen.SplashScreen;
 
 public class MainActivity extends ReactActivity {
     @Override
     protected void onCreate(Bundle savedInstanceState) {
-        SplashScreen.show(this, R.style.SplashScreenTheme);
+        SplashScreen.show(this);
         super.onCreate(savedInstanceState);
     }
     /**
@@ -17,4 +20,14 @@ public class MainActivity extends ReactActivity {
     protected String getMainComponentName() {
         return "apolloschurchapp";
     }
+
+    @Override
+    protected ReactActivityDelegate createReactActivityDelegate() {
+      return new ReactActivityDelegate(this, getMainComponentName()) {
+        @Override
+        protected ReactRootView createRootView() {
+         return new RNGestureHandlerEnabledRootView(MainActivity.this);
+        }
+      };
+    }
 }
diff --git a/apolloschurchapp/android/app/src/main/java/com/apolloschurchapp/MainApplication.java b/apolloschurchapp/android/app/src/main/java/com/apolloschurchapp/MainApplication.java
index aa318e0..0bdd47f 100644
--- a/apolloschurchapp/android/app/src/main/java/com/apolloschurchapp/MainApplication.java
+++ b/apolloschurchapp/android/app/src/main/java/com/apolloschurchapp/MainApplication.java
@@ -1,21 +1,12 @@
 package com.apolloschurchapp;
 
 import android.app.Application;
+import android.util.Log;
 
+import com.facebook.react.PackageList;
+import com.facebook.hermes.reactexecutor.HermesExecutorFactory;
+import com.facebook.react.bridge.JavaScriptExecutorFactory;
 import com.facebook.react.ReactApplication;
-import com.airbnb.android.react.maps.MapsPackage;
-import com.RNFetchBlob.RNFetchBlobPackage;
-import com.reactnativecommunity.webview.RNCWebViewPackage;
-import com.brentvatne.react.ReactVideoPackage;
-import com.horcrux.svg.SvgPackage;
-import org.devio.rn.splashscreen.SplashScreenReactPackage;
-import com.swmansion.rnscreens.RNScreensPackage;
-import com.geektime.rnonesignalandroid.ReactNativeOneSignalPackage;
-import com.tanguyantoine.react.MusicControl;
-import com.BV.LinearGradient.LinearGradientPackage;
-import com.imagepicker.ImagePickerPackage;
-import com.learnium.RNDeviceInfo.RNDeviceInfo;
-import com.lugg.ReactNativeConfig.ReactNativeConfigPackage;
 import com.facebook.react.ReactNativeHost;
 import com.facebook.react.ReactPackage;
 import com.facebook.react.shell.MainReactPackage;
@@ -34,22 +25,11 @@ public class MainApplication extends Application implements ReactApplication {
 
     @Override
     protected List<ReactPackage> getPackages() {
-      return Arrays.<ReactPackage>asList(
-          new MainReactPackage(),
-            new MapsPackage(),
-            new RNFetchBlobPackage(),
-            new RNCWebViewPackage(),
-            new ReactVideoPackage(),
-            new SvgPackage(),
-            new SplashScreenReactPackage(),
-            new RNScreensPackage(),
-            new ReactNativeOneSignalPackage(),
-            new MusicControl(),
-            new LinearGradientPackage(),
-            new ImagePickerPackage(),
-            new RNDeviceInfo(),
-            new ReactNativeConfigPackage()
-      );
+      @SuppressWarnings("UnnecessaryLocalVariable")
+      List<ReactPackage> packages = new PackageList(this).getPackages();
+      // Packages that cannot be autolinked yet can be added manually here, for example:
+      // packages.add(new MyReactNativePackage());
+      return packages;
     }
 
     @Override
diff --git a/apolloschurchapp/android/app/src/main/res/mipmap-hdpi/ic_launcher_round.webp b/apolloschurchapp/android/app/src/main/res/mipmap-hdpi/ic_launcher_round.webp
index 42aa619f04951d7e857d309cb6326bc2479fe766..f77fb4bc60914a3e469a4761dacc5b047738fcca 100644
GIT binary patch
literal 1876
zcmV-a2dnr}Nk&FY2LJ$9MM6+kP&iCL2LJ#sN5Byf+ECE8jpXo$z1;&LA|^nDP?=4%
z|8b#0j?}hoPuphqn3?y9nVFfHq0IIE|4#_mkCh$!tR4+|ug2w8amIdU)pMET24qRH
zP20Ni+4dXSwr$(jzWZD#5C9Nx-nPxzwr!h9(Mq<rWZSmAH8a{a&w(UKZL`akNLGzA
z@B~S=Z5g)JP1bGOw(XK_+qP|ds{=bCPd4GJWW=}4c;6Nj000a)_qL*K+t$1#Z;jP!
zUbBtlEvkCSwrwlI4FG^(b7?%=wr$(CZCkZ%9zYNXg0;f}3+%5DBe!iF*;{Ti+`ez%
zZ&3pfzyJXlz)x?JGyou408niJnGS&c)B6V}wbKI-0l<{>0QBrGw(QTcHkZ{{oNEea
zM)a=>;Fv~D;Ve7UJLxm-2ms`797dJ@yVd2pjp$Vo{8My}`;uLU^e-JTYSL-V;Zl*^
z_2sWGS=G+(Q){w$MtD@VT<R_QlEwQ0$g)^)q-;AH^F&~~_sR*sp*XIXxZkzeDV^uv
zHcjE2O_XX1=hCrLgjXJqd|mlr6{RvoPtXJCs$`~O>d~Aar#e%r82dA^NI;b*k`;6N
zostso#cz1*yT{tmH_y5RJ-6-+jOd-ns0)E(N<^h)PhcgzbCT6iJW@o@E}c8^{||cP
z<C`f7kEqH-+NuvQmFYTa+!TC*X<E7m)s-2Q=6wLa@nC60zf``8sv<UH(|c4`amX?4
z(#txC^@R;8o*oQg>*5(3;lN{}$~ybB=^Y=vhbpSW!*v9w1tn=@+T)K9vm0t4*B5rl
zaP9pAysYlsq7I_cEjoGJd+-`SjwuQ6E-xa$sX)f1y`*6Q#G1?$8SSIswxOeijB~$>
zq>uid8F{1fMMgUh;~jW>x4eA~Mmq5H&Ip4+#dW!fUjjM$>??^J2OblSTi@1{oaTTN
zBqZ99dH)hWyBa7pnFTV~Ep!KYRZNL^M?Sy71OwwsWZqPmFu7-WC%-AYD(YAIIk2}c
zpXk95WcSzv0FM9uv8GZ`eXaSPxBz+W(p^y<;8ehUb$ykTaq(6t$jXZ#1Fv1Wd-0io
zd-9P%#(IKkf4iKN#yG6QZ(l$#zj}@gEVTu(nPFM1ol14-z|%WGZ=5{1$$JhwwL(<k
zt5{noV*+M%W}QlvkZ6PES5itD9cO}u%GxrjaJ(-j0lfOcF_mgyd<o6o1~Dn6G(@A}
zIoY{>rVmFV3jZ&Nm_XQAx+OwAeT$DXDw_Mc@L(dM42VR(BQ6j(hc_bBJroyL<|w>y
zI)_JyL_Qpo21z6OBSP(=*h9sK3Vj69zPneTIBQNJpb<ZSq>igOe9)La;JUPVMKWz@
zZ$d{#wja$X6V+IHpfR07Z$WXIWE$*OL&wD20nIp(AdqM%oRg6LZ(lt_ud|qg^JZrt
zPC_;ka_DDF0z}oB9THMRlmTkzme24cHH|eWDJst*AzQNXhZSD@jgpYQp*FWDjwcCl
z$f0EY=pN~{K3#|jK)`zVQbr*%rw|<Z{6_dV-P|~Rgp@#!3PsubpNt8pm(C(6MCZ^t
zwRntgsi-bNOH)q=MVWVF3V^V-U*Cv+2t@DDnwb;9xA>SO&~otQ(+_3jzi=r2gAOQ=
ztxE4%6FCXl1lFESrw2vgRu6`-c5nwVNvRIXO6OB2066CW2mZs?25X|C@+_gMLsKit
zN<HQz{4W4)&zzU#itFb3(LHrJ{`be0L8JKhRs5hi=Uf5~l&jJQRz!gw6?Ll+IfXGw
z%Bs|X-zF0mIUu-sQ*1@l)YG9N%(Jf0$v;lO6aVlQw;DAR@63S=QD}cug!fA2G`G0b
zC`?*dNI--1o%>32B43M?>Q&S<RPmK9138%}4p5*k>o9L9+?f*jJLM{C%2c<oG=qzr
zUe;kA`J9_vE}dnolzAlSnmFu&Zh3rDrN}okuI8o-K@e^o4QedEs+4%|dxyo+T>u`G
z&K+c{l=#};w8fqz=!rn*;p?zUfgipNwFBL910X%%&aO3m@w?8vrkpR`o+RwDh8H&5
zRU~#<$D0@??X(17L25~xb6ISYZCZbV)Gxs)21t5fUW47UuVt3$nH)%KPI90D2a;fM
z^S0fHep%IuuK3!f15Pc!KnO;MR+8!q_iR$?4?BM8z{a5gpnwgUE4ut1y-gd@pZ(eg
z!Sj=y_KprDz=84!%=gSCRwRz>ru}Q*r_hnM4<LR42h_ms&`SEN*q)tQsr%2w-(S8-
zY|L_i*Z~?~yL~eD-qTop{(<;@h+w>{<GaJ=*eDQy_zrwf0n=GEZu=KgZ{7Em#Sfdq
zxA~Z#&gs&0@7VVV^P24mZNLCYPy=Idm{sGwX(aOaX3_Pl);kY__n)U8e=H3bM?bzR
zh@3m|wZAPkgYgL#AORl%uN9Q?pbsW}U^&(I@q1pk7NWH0%YZYt1c>hdx(!GnP=WTr
O4L`T#9A8WR=9>eIC7pZ#

literal 1056
zcmV+*1mF8oNk&E(1ONb6MM6+kP&iBr1ONapFTe{BH|8jkWLc@do<1N6{}NF0{xZ{b
z!~(;%Z6opaANZ|pNRcEtl49iR1f=7S;!x<Gihx_&wrXXb`vup?C8Q6EAR?s!+94<U
zA!RU#+}$0Xd`|$xA5Z}SDj>iB2oNBFItY-!AgF>WsDlKCKn+w?<9xn)E(|U<E;cp}
zM*WX87X1$!qf|CIvPojoM@G-RBx11XGy2HJrN5EHBxgMLl7*!{B{HdZu}NZdKaWK9
zK4@~1C`bK|MECPBGU{J_h7Ch~BS$v%E^cFoO@c%$4vB1RToN(3Fi?6bK!7gDK&CSB
zIoUe$O_tz76tmrA>x0n=ji>;7*kVF}1lrTJ4Q4*7AFw2#Tn&V|>Z*S<5p__2OF4yO
zf3eS_9aY6~wL8Zbv%9+|+dkW_o42hvyc9p5>+x)YnPxjI%LBcNXSq_IP`%q<_Ly#2
zEl{l38h-wZ8)08$i*0SP|DOJxeh%79JyyE>oy1yIt=s>Xn*RFO{&?>}!nSQ^-im+T
zH^qnA);-&{ZF}pi`mJqiwr$(nA4~E+NsmSJe*)<Lc=u+*t($iTN@HC`X|YmD6_-}j
zHM(}YzDzO8>TkPoqqamjSW<h#DRI42Ib3>OIFeOeq#Q4*&T`;RrE<0M4(ngJa=H8;
zLslu*tE85wQOvxYoSd9ohN=-7;#whR7644(6kZc{?>ZIp@E{X*F;wR}8*xQ(*TQlM
zM_mzCe>+%{tw!Z=I{sS7tBSh^wp%#rsx$>%W-SFUb}E25tjj^Bw{4u<(Eyfh05JFn
zr|m5f$$N^s4FGl@9Rgq-N8OV|ftOhG0E}-}vjI$DT?!=fT;LoV3Sfm&8v$S+=YogG
zcZRbb0QM?%Vkm&+oHITme-CFmfQd>eH5b5`JVuY7D71xf0035*HUq$RMoTDBSQlfZ
zX}{^@Z~zM!U13C_{dxuC08Cbv^8pMyuGb$*6mn5-2LP<L+6n+0^e%=F`S0s3GG$wx
z9tmKE-hDrj_o>#Y5dfws+l2s-t@YGP6#P+Z69BAjx7}u1rS&nG$cX9FnQ7vVZ`bIH
zF^DMiiN--Vx>Msx7!i@@eWBeNXBOKPe(;!#xJP!AoEe#K^C-?R3IEp?tM)?<+q8W3
z3lka9&#c^j7HyEV_s7|RaQ26nY-QxPZuh#sMM^sgi2dB^R_o{30MZRgeAD7i%bUa?
z(iWbiFTHN`eo68OJrbUT@8_L6_dUTQh${l4f4}T@ru*gZ=s-aZ8sRCwo;UNFpZ`h;
zH^^BT9F_L-^}{BeriZV8rbPuya$I^NlQRB%diCP*g9nday!!MfBPr4=$yFKTi-=E7
aP0!3sPfd=G@C8X4fI>=X7*a|>P67a|pzpu{

diff --git a/apolloschurchapp/android/app/src/main/res/mipmap-mdpi/ic_launcher_round.webp b/apolloschurchapp/android/app/src/main/res/mipmap-mdpi/ic_launcher_round.webp
index f77fb4bc60914a3e469a4761dacc5b047738fcca..42aa619f04951d7e857d309cb6326bc2479fe766 100644
GIT binary patch
literal 1056
zcmV+*1mF8oNk&E(1ONb6MM6+kP&iBr1ONapFTe{BH|8jkWLc@do<1N6{}NF0{xZ{b
z!~(;%Z6opaANZ|pNRcEtl49iR1f=7S;!x<Gihx_&wrXXb`vup?C8Q6EAR?s!+94<U
zA!RU#+}$0Xd`|$xA5Z}SDj>iB2oNBFItY-!AgF>WsDlKCKn+w?<9xn)E(|U<E;cp}
zM*WX87X1$!qf|CIvPojoM@G-RBx11XGy2HJrN5EHBxgMLl7*!{B{HdZu}NZdKaWK9
zK4@~1C`bK|MECPBGU{J_h7Ch~BS$v%E^cFoO@c%$4vB1RToN(3Fi?6bK!7gDK&CSB
zIoUe$O_tz76tmrA>x0n=ji>;7*kVF}1lrTJ4Q4*7AFw2#Tn&V|>Z*S<5p__2OF4yO
zf3eS_9aY6~wL8Zbv%9+|+dkW_o42hvyc9p5>+x)YnPxjI%LBcNXSq_IP`%q<_Ly#2
zEl{l38h-wZ8)08$i*0SP|DOJxeh%79JyyE>oy1yIt=s>Xn*RFO{&?>}!nSQ^-im+T
zH^qnA);-&{ZF}pi`mJqiwr$(nA4~E+NsmSJe*)<Lc=u+*t($iTN@HC`X|YmD6_-}j
zHM(}YzDzO8>TkPoqqamjSW<h#DRI42Ib3>OIFeOeq#Q4*&T`;RrE<0M4(ngJa=H8;
zLslu*tE85wQOvxYoSd9ohN=-7;#whR7644(6kZc{?>ZIp@E{X*F;wR}8*xQ(*TQlM
zM_mzCe>+%{tw!Z=I{sS7tBSh^wp%#rsx$>%W-SFUb}E25tjj^Bw{4u<(Eyfh05JFn
zr|m5f$$N^s4FGl@9Rgq-N8OV|ftOhG0E}-}vjI$DT?!=fT;LoV3Sfm&8v$S+=YogG
zcZRbb0QM?%Vkm&+oHITme-CFmfQd>eH5b5`JVuY7D71xf0035*HUq$RMoTDBSQlfZ
zX}{^@Z~zM!U13C_{dxuC08Cbv^8pMyuGb$*6mn5-2LP<L+6n+0^e%=F`S0s3GG$wx
z9tmKE-hDrj_o>#Y5dfws+l2s-t@YGP6#P+Z69BAjx7}u1rS&nG$cX9FnQ7vVZ`bIH
zF^DMiiN--Vx>Msx7!i@@eWBeNXBOKPe(;!#xJP!AoEe#K^C-?R3IEp?tM)?<+q8W3
z3lka9&#c^j7HyEV_s7|RaQ26nY-QxPZuh#sMM^sgi2dB^R_o{30MZRgeAD7i%bUa?
z(iWbiFTHN`eo68OJrbUT@8_L6_dUTQh${l4f4}T@ru*gZ=s-aZ8sRCwo;UNFpZ`h;
zH^^BT9F_L-^}{BeriZV8rbPuya$I^NlQRB%diCP*g9nday!!MfBPr4=$yFKTi-=E7
aP0!3sPfd=G@C8X4fI>=X7*a|>P67a|pzpu{

literal 1876
zcmV-a2dnr}Nk&FY2LJ$9MM6+kP&iCL2LJ#sN5Byf+ECE8jpXo$z1;&LA|^nDP?=4%
z|8b#0j?}hoPuphqn3?y9nVFfHq0IIE|4#_mkCh$!tR4+|ug2w8amIdU)pMET24qRH
zP20Ni+4dXSwr$(jzWZD#5C9Nx-nPxzwr!h9(Mq<rWZSmAH8a{a&w(UKZL`akNLGzA
z@B~S=Z5g)JP1bGOw(XK_+qP|ds{=bCPd4GJWW=}4c;6Nj000a)_qL*K+t$1#Z;jP!
zUbBtlEvkCSwrwlI4FG^(b7?%=wr$(CZCkZ%9zYNXg0;f}3+%5DBe!iF*;{Ti+`ez%
zZ&3pfzyJXlz)x?JGyou408niJnGS&c)B6V}wbKI-0l<{>0QBrGw(QTcHkZ{{oNEea
zM)a=>;Fv~D;Ve7UJLxm-2ms`797dJ@yVd2pjp$Vo{8My}`;uLU^e-JTYSL-V;Zl*^
z_2sWGS=G+(Q){w$MtD@VT<R_QlEwQ0$g)^)q-;AH^F&~~_sR*sp*XIXxZkzeDV^uv
zHcjE2O_XX1=hCrLgjXJqd|mlr6{RvoPtXJCs$`~O>d~Aar#e%r82dA^NI;b*k`;6N
zostso#cz1*yT{tmH_y5RJ-6-+jOd-ns0)E(N<^h)PhcgzbCT6iJW@o@E}c8^{||cP
z<C`f7kEqH-+NuvQmFYTa+!TC*X<E7m)s-2Q=6wLa@nC60zf``8sv<UH(|c4`amX?4
z(#txC^@R;8o*oQg>*5(3;lN{}$~ybB=^Y=vhbpSW!*v9w1tn=@+T)K9vm0t4*B5rl
zaP9pAysYlsq7I_cEjoGJd+-`SjwuQ6E-xa$sX)f1y`*6Q#G1?$8SSIswxOeijB~$>
zq>uid8F{1fMMgUh;~jW>x4eA~Mmq5H&Ip4+#dW!fUjjM$>??^J2OblSTi@1{oaTTN
zBqZ99dH)hWyBa7pnFTV~Ep!KYRZNL^M?Sy71OwwsWZqPmFu7-WC%-AYD(YAIIk2}c
zpXk95WcSzv0FM9uv8GZ`eXaSPxBz+W(p^y<;8ehUb$ykTaq(6t$jXZ#1Fv1Wd-0io
zd-9P%#(IKkf4iKN#yG6QZ(l$#zj}@gEVTu(nPFM1ol14-z|%WGZ=5{1$$JhwwL(<k
zt5{noV*+M%W}QlvkZ6PES5itD9cO}u%GxrjaJ(-j0lfOcF_mgyd<o6o1~Dn6G(@A}
zIoY{>rVmFV3jZ&Nm_XQAx+OwAeT$DXDw_Mc@L(dM42VR(BQ6j(hc_bBJroyL<|w>y
zI)_JyL_Qpo21z6OBSP(=*h9sK3Vj69zPneTIBQNJpb<ZSq>igOe9)La;JUPVMKWz@
zZ$d{#wja$X6V+IHpfR07Z$WXIWE$*OL&wD20nIp(AdqM%oRg6LZ(lt_ud|qg^JZrt
zPC_;ka_DDF0z}oB9THMRlmTkzme24cHH|eWDJst*AzQNXhZSD@jgpYQp*FWDjwcCl
z$f0EY=pN~{K3#|jK)`zVQbr*%rw|<Z{6_dV-P|~Rgp@#!3PsubpNt8pm(C(6MCZ^t
zwRntgsi-bNOH)q=MVWVF3V^V-U*Cv+2t@DDnwb;9xA>SO&~otQ(+_3jzi=r2gAOQ=
ztxE4%6FCXl1lFESrw2vgRu6`-c5nwVNvRIXO6OB2066CW2mZs?25X|C@+_gMLsKit
zN<HQz{4W4)&zzU#itFb3(LHrJ{`be0L8JKhRs5hi=Uf5~l&jJQRz!gw6?Ll+IfXGw
z%Bs|X-zF0mIUu-sQ*1@l)YG9N%(Jf0$v;lO6aVlQw;DAR@63S=QD}cug!fA2G`G0b
zC`?*dNI--1o%>32B43M?>Q&S<RPmK9138%}4p5*k>o9L9+?f*jJLM{C%2c<oG=qzr
zUe;kA`J9_vE}dnolzAlSnmFu&Zh3rDrN}okuI8o-K@e^o4QedEs+4%|dxyo+T>u`G
z&K+c{l=#};w8fqz=!rn*;p?zUfgipNwFBL910X%%&aO3m@w?8vrkpR`o+RwDh8H&5
zRU~#<$D0@??X(17L25~xb6ISYZCZbV)Gxs)21t5fUW47UuVt3$nH)%KPI90D2a;fM
z^S0fHep%IuuK3!f15Pc!KnO;MR+8!q_iR$?4?BM8z{a5gpnwgUE4ut1y-gd@pZ(eg
z!Sj=y_KprDz=84!%=gSCRwRz>ru}Q*r_hnM4<LR42h_ms&`SEN*q)tQsr%2w-(S8-
zY|L_i*Z~?~yL~eD-qTop{(<;@h+w>{<GaJ=*eDQy_zrwf0n=GEZu=KgZ{7Em#Sfdq
zxA~Z#&gs&0@7VVV^P24mZNLCYPy=Idm{sGwX(aOaX3_Pl);kY__n)U8e=H3bM?bzR
zh@3m|wZAPkgYgL#AORl%uN9Q?pbsW}U^&(I@q1pk7NWH0%YZYt1c>hdx(!GnP=WTr
O4L`T#9A8WR=9>eIC7pZ#

diff --git a/apolloschurchapp/android/app/src/main/res/values-v21/styles.xml b/apolloschurchapp/android/app/src/main/res/values-v21/styles.xml
deleted file mode 100644
index 8cfc536..0000000
--- a/apolloschurchapp/android/app/src/main/res/values-v21/styles.xml
+++ /dev/null
@@ -1,18 +0,0 @@
-<resources>
-
-    <!-- Base application theme. -->
-    <style name="AppTheme" parent="Theme.AppCompat.Light.NoActionBar">
-        <!-- Customize your theme here. -->
-    </style>
-
-    <style name="LaunchTheme" parent="Theme.AppCompat.Light.NoActionBar">
-        <item name="android:windowBackground">@drawable/background_splash</item>
-        <item name="android:statusBarColor">@color/primary</item>
-    </style>
-
-    <style name="SplashScreenTheme" parent="SplashScreen_SplashTheme">
-        <item name="android:statusBarColor">@color/primary</item>
-        <item name="colorPrimaryDark">@color/primary</item>
-    </style>
-
-</resources>
diff --git a/apolloschurchapp/android/app/src/main/res/values/styles.xml b/apolloschurchapp/android/app/src/main/res/values/styles.xml
index 328c4be..de75bed 100644
--- a/apolloschurchapp/android/app/src/main/res/values/styles.xml
+++ b/apolloschurchapp/android/app/src/main/res/values/styles.xml
@@ -9,8 +9,4 @@
         <item name="android:windowBackground">@drawable/background_splash</item>
     </style>
 
-    <style name="SplashScreenTheme" parent="SplashScreen_SplashTheme">
-        <item name="android:windowIsTranslucent">true</item>
-    </style>
-
 </resources>
diff --git a/apolloschurchapp/android/build.gradle b/apolloschurchapp/android/build.gradle
index 50a195a..1881d9d 100644
--- a/apolloschurchapp/android/build.gradle
+++ b/apolloschurchapp/android/build.gradle
@@ -13,7 +13,7 @@ buildscript {
         jcenter()
     }
     dependencies {
-        classpath 'com.android.tools.build:gradle:3.3.1'
+        classpath("com.android.tools.build:gradle:3.4.1")
 
         // NOTE: Do not place your application dependencies here; they belong
         // in the individual module build.gradle files
@@ -27,7 +27,11 @@ allprojects {
         jcenter()
         maven {
             // All of React Native (JS, Obj-C sources, Android binaries) is installed from npm
-            url "$rootDir/../node_modules/react-native/android"
+            url("$rootDir/../node_modules/react-native/android")
+        }
+        maven {
+            // Android JSC is installed from npm
+            url("$rootDir/../node_modules/jsc-android/dist")
         }
         maven { url "https://jitpack.io" }
     }
diff --git a/apolloschurchapp/android/gradle.properties b/apolloschurchapp/android/gradle.properties
index 89e0d99..ccb748f 100644
--- a/apolloschurchapp/android/gradle.properties
+++ b/apolloschurchapp/android/gradle.properties
@@ -16,3 +16,6 @@
 # This option should only be used with decoupled projects. More details, visit
 # http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects
 # org.gradle.parallel=true
+
+android.useAndroidX=true
+android.enableJetifier=true
\ No newline at end of file
diff --git a/apolloschurchapp/android/gradle.properties.appcenter b/apolloschurchapp/android/gradle.properties.appcenter
index f8c9d46..a50dbd7 100644
--- a/apolloschurchapp/android/gradle.properties.appcenter
+++ b/apolloschurchapp/android/gradle.properties.appcenter
@@ -19,3 +19,5 @@
 
 android.useDeprecatedNdk=true
 android.enableAapt2=false
+android.useAndroidX=true
+android.enableJetifier=true
diff --git a/apolloschurchapp/android/gradle/wrapper/gradle-wrapper.properties b/apolloschurchapp/android/gradle/wrapper/gradle-wrapper.properties
index 019065d..3c7a7c8 100644
--- a/apolloschurchapp/android/gradle/wrapper/gradle-wrapper.properties
+++ b/apolloschurchapp/android/gradle/wrapper/gradle-wrapper.properties
@@ -2,4 +2,4 @@ distributionBase=GRADLE_USER_HOME
 distributionPath=wrapper/dists
 zipStoreBase=GRADLE_USER_HOME
 zipStorePath=wrapper/dists
-distributionUrl=https\://services.gradle.org/distributions/gradle-4.10.2-all.zip
+distributionUrl=https\://services.gradle.org/distributions/gradle-5.4.1-all.zip
\ No newline at end of file
diff --git a/apolloschurchapp/android/gradlew b/apolloschurchapp/android/gradlew
index cccdd3d..3e84efe 100755
--- a/apolloschurchapp/android/gradlew
+++ b/apolloschurchapp/android/gradlew
@@ -28,7 +28,7 @@ APP_NAME="Gradle"
 APP_BASE_NAME=`basename "$0"`
 
 # Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
-DEFAULT_JVM_OPTS=""
+DEFAULT_JVM_OPTS='"-Xmx64m" "-Xms64m"'
 
 # Use the maximum available, or set MAX_FD != -1 to use that value.
 MAX_FD="maximum"
diff --git a/apolloschurchapp/android/gradlew.bat b/apolloschurchapp/android/gradlew.bat
index e95643d..1688408 100644
--- a/apolloschurchapp/android/gradlew.bat
+++ b/apolloschurchapp/android/gradlew.bat
@@ -14,7 +14,7 @@ set APP_BASE_NAME=%~n0
 set APP_HOME=%DIRNAME%
 
 @rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
-set DEFAULT_JVM_OPTS=
+set DEFAULT_JVM_OPTS="-Xmx64m" "-Xms64m"
 
 @rem Find java.exe
 if defined JAVA_HOME goto findJavaFromJavaHome
diff --git a/apolloschurchapp/android/settings.gradle b/apolloschurchapp/android/settings.gradle
index d705770..1ae2310 100644
--- a/apolloschurchapp/android/settings.gradle
+++ b/apolloschurchapp/android/settings.gradle
@@ -1,29 +1,3 @@
 rootProject.name = 'apolloschurchapp'
-include ':react-native-maps'
-project(':react-native-maps').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-maps/lib/android')
-include ':rn-fetch-blob'
-project(':rn-fetch-blob').projectDir = new File(rootProject.projectDir, '../node_modules/rn-fetch-blob/android')
-include ':react-native-webview'
-project(':react-native-webview').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-webview/android')
-include ':react-native-video'
-project(':react-native-video').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-video/android-exoplayer')
-include ':react-native-svg'
-project(':react-native-svg').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-svg/android')
-include ':react-native-splash-screen'
-project(':react-native-splash-screen').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-splash-screen/android')
-include ':react-native-screens'
-project(':react-native-screens').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-screens/android')
-include ':react-native-onesignal'
-project(':react-native-onesignal').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-onesignal/android')
-include ':react-native-music-control'
-project(':react-native-music-control').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-music-control/android')
-include ':react-native-linear-gradient'
-project(':react-native-linear-gradient').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-linear-gradient/android')
-include ':react-native-image-picker'
-project(':react-native-image-picker').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-image-picker/android')
-include ':react-native-device-info'
-project(':react-native-device-info').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-device-info/android')
-include ':react-native-config'
-project(':react-native-config').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-config/android')
-
+apply from: file("../node_modules/@react-native-community/cli-platform-android/native_modules.gradle"); applyNativeModulesSettingsGradle(settings)
 include ':app'
diff --git a/apolloschurchapp/apollos.json b/apolloschurchapp/apollos.json
index 614d45e..6a3b40e 100644
--- a/apolloschurchapp/apollos.json
+++ b/apolloschurchapp/apollos.json
@@ -1,4 +1,4 @@
 {
-    "version": "0.8.6",
+    "version": "1.2.5",
     "environment": "client"
 }
\ No newline at end of file
diff --git a/apolloschurchapp/appcenter-post-clone.sh b/apolloschurchapp/appcenter-post-clone.sh
index 268f281..83862e2 100755
--- a/apolloschurchapp/appcenter-post-clone.sh
+++ b/apolloschurchapp/appcenter-post-clone.sh
@@ -12,4 +12,12 @@ cp $(pwd)/../../yarn.lock $(pwd)/yarn.lock
 # Placeholders look like "$ONE_SIGNAL_KEY"
 grep -o '\$.*' .env.production | sed 's/\$\(.*\)/\1/' | xargs -I {} sh -c "sed -i -e 's/\$"{}"/'$"{}"'/' .env.production"
 # Make sure ReactNativeConfig picks up values from prod env file.
-cp .env.production .env
\ No newline at end of file
+cp .env.production .env
+
+echo "Uninstalling all CocoaPods versions"
+sudo gem uninstall cocoapods --all --executables
+
+COCOAPODS_VER=`sed -n -e 's/^COCOAPODS: \([0-9.]*\)/\1/p' ios/Podfile.lock`
+
+echo "Installing CocoaPods version $COCOAPODS_VER"
+sudo gem install cocoapods -v $COCOAPODS_VER
\ No newline at end of file
diff --git a/apolloschurchapp/appcenter-pre-build.sh b/apolloschurchapp/appcenter-pre-build.sh
index a9348f2..93e20b9 100644
--- a/apolloschurchapp/appcenter-pre-build.sh
+++ b/apolloschurchapp/appcenter-pre-build.sh
@@ -4,6 +4,9 @@ droid_dir=$(pwd)/android
 
 cp $droid_dir/gradle.properties.appcenter $droid_dir/gradle.properties
 
-cd ../../
+cd ios
+pod install
+
+cd ../../..
 yarn
-yarn lerna run generate-stories
\ No newline at end of file
+yarn lerna run generate-stories
diff --git a/apolloschurchapp/ios/Podfile b/apolloschurchapp/ios/Podfile
new file mode 100644
index 0000000..dc2be4e
--- /dev/null
+++ b/apolloschurchapp/ios/Podfile
@@ -0,0 +1,64 @@
+platform :ios, '9.0'
+require_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'
+
+target 'apolloschurchapp' do
+  permissions_path = '../node_modules/react-native-permissions/ios'
+
+  # Pods for apolloschurchapp
+  pod 'React', :path => '../node_modules/react-native/'
+  pod 'React-Core', :path => '../node_modules/react-native/React'
+  pod 'React-DevSupport', :path => '../node_modules/react-native/React'
+  pod 'React-RCTActionSheet', :path => '../node_modules/react-native/Libraries/ActionSheetIOS'
+  pod 'React-RCTAnimation', :path => '../node_modules/react-native/Libraries/NativeAnimation'
+  pod 'React-RCTBlob', :path => '../node_modules/react-native/Libraries/Blob'
+  pod 'React-RCTImage', :path => '../node_modules/react-native/Libraries/Image'
+  pod 'React-RCTLinking', :path => '../node_modules/react-native/Libraries/LinkingIOS'
+  pod 'React-RCTNetwork', :path => '../node_modules/react-native/Libraries/Network'
+  pod 'React-RCTSettings', :path => '../node_modules/react-native/Libraries/Settings'
+  pod 'React-RCTText', :path => '../node_modules/react-native/Libraries/Text'
+  pod 'React-RCTVibration', :path => '../node_modules/react-native/Libraries/Vibration'
+  pod 'React-RCTWebSocket', :path => '../node_modules/react-native/Libraries/WebSocket'
+
+  pod 'React-cxxreact', :path => '../node_modules/react-native/ReactCommon/cxxreact'
+  pod 'React-jsi', :path => '../node_modules/react-native/ReactCommon/jsi'
+  pod 'React-jsiexecutor', :path => '../node_modules/react-native/ReactCommon/jsiexecutor'
+  pod 'React-jsinspector', :path => '../node_modules/react-native/ReactCommon/jsinspector'
+  pod 'yoga', :path => '../node_modules/react-native/ReactCommon/yoga'
+
+  pod 'DoubleConversion', :podspec => '../node_modules/react-native/third-party-podspecs/DoubleConversion.podspec'
+  pod 'glog', :podspec => '../node_modules/react-native/third-party-podspecs/glog.podspec'
+  pod 'Folly', :podspec => '../node_modules/react-native/third-party-podspecs/Folly.podspec'
+  pod 'Permission-PhotoLibrary', :path => "#{permissions_path}/PhotoLibrary.podspec"
+
+  target 'apolloschurchappTests' do
+    inherit! :search_paths
+    # Pods for testing
+  end
+
+  use_native_modules!
+end
+
+target 'apolloschurchapp-tvOS' do
+  # Pods for apolloschurchapp-tvOS
+
+  target 'apolloschurchapp-tvOSTests' do
+    inherit! :search_paths
+    # Pods for testing
+  end
+
+end
+
+post_install do |installer|
+ installer.pods_project.targets.each do |target|
+   if target.name == 'react-native-config'
+     phase = target.project.new(Xcodeproj::Project::Object::PBXShellScriptBuildPhase)
+     phase.shell_script = "cd ../../"\
+     " && RNC_ROOT=./node_modules/react-native-config/"\
+     " && export SYMROOT=$RNC_ROOT/ios/ReactNativeConfig"\
+     " && ruby $RNC_ROOT/ios/ReactNativeConfig/BuildDotenvConfig.ruby"
+
+     target.build_phases << phase
+     target.build_phases.move(phase,0)
+   end
+ end
+end
diff --git a/apolloschurchapp/ios/Podfile.lock b/apolloschurchapp/ios/Podfile.lock
new file mode 100644
index 0000000..ae4257d
--- /dev/null
+++ b/apolloschurchapp/ios/Podfile.lock
@@ -0,0 +1,326 @@
+PODS:
+  - boost-for-react-native (1.63.0)
+  - BVLinearGradient (2.5.4):
+    - React
+  - DoubleConversion (1.1.6)
+  - Folly (2018.10.22.00):
+    - boost-for-react-native
+    - DoubleConversion
+    - Folly/Default (= 2018.10.22.00)
+    - glog
+  - Folly/Default (2018.10.22.00):
+    - boost-for-react-native
+    - DoubleConversion
+    - glog
+  - glog (0.3.5)
+  - OneSignal (2.10.1)
+  - Permission-PhotoLibrary (2.0.5):
+    - RNPermissions
+  - React (0.60.5):
+    - React-Core (= 0.60.5)
+    - React-DevSupport (= 0.60.5)
+    - React-RCTActionSheet (= 0.60.5)
+    - React-RCTAnimation (= 0.60.5)
+    - React-RCTBlob (= 0.60.5)
+    - React-RCTImage (= 0.60.5)
+    - React-RCTLinking (= 0.60.5)
+    - React-RCTNetwork (= 0.60.5)
+    - React-RCTSettings (= 0.60.5)
+    - React-RCTText (= 0.60.5)
+    - React-RCTVibration (= 0.60.5)
+    - React-RCTWebSocket (= 0.60.5)
+  - React-Core (0.60.5):
+    - Folly (= 2018.10.22.00)
+    - React-cxxreact (= 0.60.5)
+    - React-jsiexecutor (= 0.60.5)
+    - yoga (= 0.60.5.React)
+  - React-cxxreact (0.60.5):
+    - boost-for-react-native (= 1.63.0)
+    - DoubleConversion
+    - Folly (= 2018.10.22.00)
+    - glog
+    - React-jsinspector (= 0.60.5)
+  - React-DevSupport (0.60.5):
+    - React-Core (= 0.60.5)
+    - React-RCTWebSocket (= 0.60.5)
+  - React-jsi (0.60.5):
+    - boost-for-react-native (= 1.63.0)
+    - DoubleConversion
+    - Folly (= 2018.10.22.00)
+    - glog
+    - React-jsi/Default (= 0.60.5)
+  - React-jsi/Default (0.60.5):
+    - boost-for-react-native (= 1.63.0)
+    - DoubleConversion
+    - Folly (= 2018.10.22.00)
+    - glog
+  - React-jsiexecutor (0.60.5):
+    - DoubleConversion
+    - Folly (= 2018.10.22.00)
+    - glog
+    - React-cxxreact (= 0.60.5)
+    - React-jsi (= 0.60.5)
+  - React-jsinspector (0.60.5)
+  - react-native-config (0.11.7):
+    - React
+  - react-native-geolocation (2.0.2):
+    - React
+  - react-native-image-picker (0.28.0):
+    - React
+  - react-native-maps (0.25.0):
+    - React
+  - react-native-music-control (0.10.5):
+    - React
+  - react-native-onesignal (3.3.2):
+    - OneSignal (= 2.10.1)
+    - React (< 1.0.0, >= 0.13.0)
+  - react-native-passkit-wallet (0.1.4):
+    - React
+  - react-native-safari-view (1.0.0):
+    - React
+  - react-native-safe-area-context (0.3.6):
+    - React
+  - react-native-splash-screen (3.2.0):
+    - React
+  - react-native-video (5.0.0):
+    - React
+    - react-native-video/Video (= 5.0.0)
+  - react-native-video/Video (5.0.0):
+    - React
+  - react-native-webview (5.10.0):
+    - React
+  - React-RCTActionSheet (0.60.5):
+    - React-Core (= 0.60.5)
+  - React-RCTAnimation (0.60.5):
+    - React-Core (= 0.60.5)
+  - React-RCTBlob (0.60.5):
+    - React-Core (= 0.60.5)
+    - React-RCTNetwork (= 0.60.5)
+    - React-RCTWebSocket (= 0.60.5)
+  - React-RCTImage (0.60.5):
+    - React-Core (= 0.60.5)
+    - React-RCTNetwork (= 0.60.5)
+  - React-RCTLinking (0.60.5):
+    - React-Core (= 0.60.5)
+  - React-RCTNetwork (0.60.5):
+    - React-Core (= 0.60.5)
+  - React-RCTSettings (0.60.5):
+    - React-Core (= 0.60.5)
+  - React-RCTText (0.60.5):
+    - React-Core (= 0.60.5)
+  - React-RCTVibration (0.60.5):
+    - React-Core (= 0.60.5)
+  - React-RCTWebSocket (0.60.5):
+    - React-Core (= 0.60.5)
+  - rn-fetch-blob (0.10.16):
+    - React-Core
+  - RNAirplay (1.0.0):
+    - React
+  - RNCAsyncStorage (1.5.1):
+    - React
+  - RNDeviceInfo (4.0.1):
+    - React
+  - RNGestureHandler (1.3.0):
+    - React
+  - RNInAppBrowser (3.1.0):
+    - React
+  - RNPermissions (2.0.5):
+    - React
+  - RNScreens (1.0.0-alpha.23):
+    - React
+  - RNSVG (9.4.0):
+    - React
+  - yoga (0.60.5.React)
+
+DEPENDENCIES:
+  - BVLinearGradient (from `../node_modules/react-native-linear-gradient`)
+  - DoubleConversion (from `../node_modules/react-native/third-party-podspecs/DoubleConversion.podspec`)
+  - Folly (from `../node_modules/react-native/third-party-podspecs/Folly.podspec`)
+  - glog (from `../node_modules/react-native/third-party-podspecs/glog.podspec`)
+  - Permission-PhotoLibrary (from `../node_modules/react-native-permissions/ios/PhotoLibrary.podspec`)
+  - React (from `../node_modules/react-native/`)
+  - React-Core (from `../node_modules/react-native/React`)
+  - React-cxxreact (from `../node_modules/react-native/ReactCommon/cxxreact`)
+  - React-DevSupport (from `../node_modules/react-native/React`)
+  - React-jsi (from `../node_modules/react-native/ReactCommon/jsi`)
+  - React-jsiexecutor (from `../node_modules/react-native/ReactCommon/jsiexecutor`)
+  - React-jsinspector (from `../node_modules/react-native/ReactCommon/jsinspector`)
+  - react-native-config (from `../node_modules/react-native-config`)
+  - "react-native-geolocation (from `../node_modules/@react-native-community/geolocation`)"
+  - react-native-image-picker (from `../node_modules/react-native-image-picker`)
+  - react-native-maps (from `../node_modules/react-native-maps`)
+  - react-native-music-control (from `../node_modules/react-native-music-control`)
+  - react-native-onesignal (from `../node_modules/react-native-onesignal`)
+  - react-native-passkit-wallet (from `../node_modules/react-native-passkit-wallet`)
+  - react-native-safari-view (from `../node_modules/react-native-safari-view`)
+  - react-native-safe-area-context (from `../node_modules/react-native-safe-area-context`)
+  - react-native-splash-screen (from `../node_modules/react-native-splash-screen`)
+  - react-native-video (from `../node_modules/react-native-video`)
+  - react-native-webview (from `../node_modules/react-native-webview`)
+  - React-RCTActionSheet (from `../node_modules/react-native/Libraries/ActionSheetIOS`)
+  - React-RCTAnimation (from `../node_modules/react-native/Libraries/NativeAnimation`)
+  - React-RCTBlob (from `../node_modules/react-native/Libraries/Blob`)
+  - React-RCTImage (from `../node_modules/react-native/Libraries/Image`)
+  - React-RCTLinking (from `../node_modules/react-native/Libraries/LinkingIOS`)
+  - React-RCTNetwork (from `../node_modules/react-native/Libraries/Network`)
+  - React-RCTSettings (from `../node_modules/react-native/Libraries/Settings`)
+  - React-RCTText (from `../node_modules/react-native/Libraries/Text`)
+  - React-RCTVibration (from `../node_modules/react-native/Libraries/Vibration`)
+  - React-RCTWebSocket (from `../node_modules/react-native/Libraries/WebSocket`)
+  - rn-fetch-blob (from `../node_modules/rn-fetch-blob`)
+  - "RNAirplay (from `../node_modules/@apollosproject/react-native-airplay-btn`)"
+  - "RNCAsyncStorage (from `../node_modules/@react-native-community/async-storage`)"
+  - RNDeviceInfo (from `../node_modules/react-native-device-info`)
+  - RNGestureHandler (from `../node_modules/react-native-gesture-handler`)
+  - RNInAppBrowser (from `../node_modules/react-native-inappbrowser-reborn`)
+  - RNPermissions (from `../node_modules/react-native-permissions`)
+  - RNScreens (from `../node_modules/react-native-screens`)
+  - RNSVG (from `../node_modules/react-native-svg`)
+  - yoga (from `../node_modules/react-native/ReactCommon/yoga`)
+
+SPEC REPOS:
+  trunk:
+    - boost-for-react-native
+    - OneSignal
+
+EXTERNAL SOURCES:
+  BVLinearGradient:
+    :path: "../node_modules/react-native-linear-gradient"
+  DoubleConversion:
+    :podspec: "../node_modules/react-native/third-party-podspecs/DoubleConversion.podspec"
+  Folly:
+    :podspec: "../node_modules/react-native/third-party-podspecs/Folly.podspec"
+  glog:
+    :podspec: "../node_modules/react-native/third-party-podspecs/glog.podspec"
+  Permission-PhotoLibrary:
+    :path: "../node_modules/react-native-permissions/ios/PhotoLibrary.podspec"
+  React:
+    :path: "../node_modules/react-native/"
+  React-Core:
+    :path: "../node_modules/react-native/React"
+  React-cxxreact:
+    :path: "../node_modules/react-native/ReactCommon/cxxreact"
+  React-DevSupport:
+    :path: "../node_modules/react-native/React"
+  React-jsi:
+    :path: "../node_modules/react-native/ReactCommon/jsi"
+  React-jsiexecutor:
+    :path: "../node_modules/react-native/ReactCommon/jsiexecutor"
+  React-jsinspector:
+    :path: "../node_modules/react-native/ReactCommon/jsinspector"
+  react-native-config:
+    :path: "../node_modules/react-native-config"
+  react-native-geolocation:
+    :path: "../node_modules/@react-native-community/geolocation"
+  react-native-image-picker:
+    :path: "../node_modules/react-native-image-picker"
+  react-native-maps:
+    :path: "../node_modules/react-native-maps"
+  react-native-music-control:
+    :path: "../node_modules/react-native-music-control"
+  react-native-onesignal:
+    :path: "../node_modules/react-native-onesignal"
+  react-native-passkit-wallet:
+    :path: "../node_modules/react-native-passkit-wallet"
+  react-native-safari-view:
+    :path: "../node_modules/react-native-safari-view"
+  react-native-safe-area-context:
+    :path: "../node_modules/react-native-safe-area-context"
+  react-native-splash-screen:
+    :path: "../node_modules/react-native-splash-screen"
+  react-native-video:
+    :path: "../node_modules/react-native-video"
+  react-native-webview:
+    :path: "../node_modules/react-native-webview"
+  React-RCTActionSheet:
+    :path: "../node_modules/react-native/Libraries/ActionSheetIOS"
+  React-RCTAnimation:
+    :path: "../node_modules/react-native/Libraries/NativeAnimation"
+  React-RCTBlob:
+    :path: "../node_modules/react-native/Libraries/Blob"
+  React-RCTImage:
+    :path: "../node_modules/react-native/Libraries/Image"
+  React-RCTLinking:
+    :path: "../node_modules/react-native/Libraries/LinkingIOS"
+  React-RCTNetwork:
+    :path: "../node_modules/react-native/Libraries/Network"
+  React-RCTSettings:
+    :path: "../node_modules/react-native/Libraries/Settings"
+  React-RCTText:
+    :path: "../node_modules/react-native/Libraries/Text"
+  React-RCTVibration:
+    :path: "../node_modules/react-native/Libraries/Vibration"
+  React-RCTWebSocket:
+    :path: "../node_modules/react-native/Libraries/WebSocket"
+  rn-fetch-blob:
+    :path: "../node_modules/rn-fetch-blob"
+  RNAirplay:
+    :path: "../node_modules/@apollosproject/react-native-airplay-btn"
+  RNCAsyncStorage:
+    :path: "../node_modules/@react-native-community/async-storage"
+  RNDeviceInfo:
+    :path: "../node_modules/react-native-device-info"
+  RNGestureHandler:
+    :path: "../node_modules/react-native-gesture-handler"
+  RNInAppBrowser:
+    :path: "../node_modules/react-native-inappbrowser-reborn"
+  RNPermissions:
+    :path: "../node_modules/react-native-permissions"
+  RNScreens:
+    :path: "../node_modules/react-native-screens"
+  RNSVG:
+    :path: "../node_modules/react-native-svg"
+  yoga:
+    :path: "../node_modules/react-native/ReactCommon/yoga"
+
+SPEC CHECKSUMS:
+  boost-for-react-native: 39c7adb57c4e60d6c5479dd8623128eb5b3f0f2c
+  BVLinearGradient: 8cbc5155c978f2e43098818c91d206d07aae6d30
+  DoubleConversion: 5805e889d232975c086db112ece9ed034df7a0b2
+  Folly: 30e7936e1c45c08d884aa59369ed951a8e68cf51
+  glog: 1f3da668190260b06b429bb211bfbee5cd790c28
+  OneSignal: 8fb749fa07f88006403c9b659a570fb7fb74519a
+  Permission-PhotoLibrary: d6d09cca5d0de1fda1958175106234773a566893
+  React: 53c53c4d99097af47cf60594b8706b4e3321e722
+  React-Core: ba421f6b4f4cbe2fb17c0b6fc675f87622e78a64
+  React-cxxreact: 8384287780c4999351ad9b6e7a149d9ed10a2395
+  React-DevSupport: 197fb409737cff2c4f9986e77c220d7452cb9f9f
+  React-jsi: 4d8c9efb6312a9725b18d6fc818ffc103f60fec2
+  React-jsiexecutor: 90ad2f9db09513fc763bc757fdc3c4ff8bde2a30
+  React-jsinspector: e08662d1bf5b129a3d556eb9ea343a3f40353ae4
+  react-native-config: 55548054279d92e0e4566ea15a8b9b81028ec342
+  react-native-geolocation: c956aeb136625c23e0dce0467664af2c437888c9
+  react-native-image-picker: e6e06d4315e3c85bad17e4b2002cd29f11d202c8
+  react-native-maps: 190c02ca533fddac5bb49cf17bdece3644612107
+  react-native-music-control: 700e53dc9b2ec7342f69705243609c1cd644fa44
+  react-native-onesignal: 8958311abbd9125f26e600914e48833b57321cbf
+  react-native-passkit-wallet: 51e3babdaeec4c10b5736786ebd1bfb470fcaa36
+  react-native-safari-view: 955d7160d159241b8e9395d12d10ea0ef863dcdd
+  react-native-safe-area-context: e380a6f783ccaec848e2f3cc8eb205a62362950d
+  react-native-splash-screen: 200d11d188e2e78cea3ad319964f6142b6384865
+  react-native-video: 6555881252c8ca039760e1cd6df28ac28ffb2baf
+  react-native-webview: 3c79685b61a68d1fe99136f98f2f34b04dce2e02
+  React-RCTActionSheet: b0f1ea83f4bf75fb966eae9bfc47b78c8d3efd90
+  React-RCTAnimation: 359ba1b5690b1e87cc173558a78e82d35919333e
+  React-RCTBlob: 5e2b55f76e9a1c7ae52b826923502ddc3238df24
+  React-RCTImage: f5f1c50922164e89bdda67bcd0153952a5cfe719
+  React-RCTLinking: d0ecbd791e9ddddc41fa1f66b0255de90e8ee1e9
+  React-RCTNetwork: e26946300b0ab7bb6c4a6348090e93fa21f33a9d
+  React-RCTSettings: d0d37cb521b7470c998595a44f05847777cc3f42
+  React-RCTText: b074d89033583d4f2eb5faf7ea2db3a13c7553a2
+  React-RCTVibration: 2105b2e0e2b66a6408fc69a46c8a7fb5b2fdade0
+  React-RCTWebSocket: cd932a16b7214898b6b7f788c8bddb3637246ac4
+  rn-fetch-blob: 651b8d076b43d0d7aa294a3d9ec16c00aab8bef9
+  RNAirplay: 75777dd55dafbd3687703c3eb9c290ea6cc43248
+  RNCAsyncStorage: b63d6e83fc629b01df6b624688f17944cea5637f
+  RNDeviceInfo: 687c1b2ab6d86ff1ca1208783320cd144138c7f2
+  RNGestureHandler: 5329a942fce3d41c68b84c2c2276ce06a696d8b0
+  RNInAppBrowser: 9d1ffb9db0d0cbdf03f528f1f0624b2c533b93fd
+  RNPermissions: c40561e25ae1d4ca4ad987bde1026f9294a89f74
+  RNScreens: f28b48b8345f2f5f39ed6195518291515032a788
+  RNSVG: 9cb6e958c4b6a1f58185ac72a350b148947d6fed
+  yoga: 312528f5bbbba37b4dcea5ef00e8b4033fdd9411
+
+PODFILE CHECKSUM: bec92bd21d6fad684900aca0f0013ce700530821
+
+COCOAPODS: 1.8.3
diff --git a/apolloschurchapp/ios/apolloschurchapp-tvOS/Info.plist b/apolloschurchapp/ios/apolloschurchapp-tvOS/Info.plist
index 9bfe7a7..241338e 100644
--- a/apolloschurchapp/ios/apolloschurchapp-tvOS/Info.plist
+++ b/apolloschurchapp/ios/apolloschurchapp-tvOS/Info.plist
@@ -15,11 +15,11 @@
 	<key>CFBundlePackageType</key>
 	<string>APPL</string>
 	<key>CFBundleShortVersionString</key>
-	<string>0.8.6</string>
+	<string>1.2.5</string>
 	<key>CFBundleSignature</key>
 	<string>????</string>
 	<key>CFBundleVersion</key>
-	<string>11</string>
+	<string>24</string>
 	<key>LSRequiresIPhoneOS</key>
 	<true />
 	<key>UILaunchStoryboardName</key>
diff --git a/apolloschurchapp/ios/apolloschurchapp-tvOSTests/Info.plist b/apolloschurchapp/ios/apolloschurchapp-tvOSTests/Info.plist
index 81df5aa..3d463d7 100644
--- a/apolloschurchapp/ios/apolloschurchapp-tvOSTests/Info.plist
+++ b/apolloschurchapp/ios/apolloschurchapp-tvOSTests/Info.plist
@@ -15,10 +15,10 @@
 	<key>CFBundlePackageType</key>
 	<string>BNDL</string>
 	<key>CFBundleShortVersionString</key>
-	<string>0.8.6</string>
+	<string>1.2.5</string>
 	<key>CFBundleSignature</key>
 	<string>????</string>
 	<key>CFBundleVersion</key>
-	<string>11</string>
+	<string>24</string>
 </dict>
 </plist>
diff --git a/apolloschurchapp/ios/apolloschurchapp.xcodeproj/project.pbxproj b/apolloschurchapp/ios/apolloschurchapp.xcodeproj/project.pbxproj
index 70fcb47..a24c843 100644
--- a/apolloschurchapp/ios/apolloschurchapp.xcodeproj/project.pbxproj
+++ b/apolloschurchapp/ios/apolloschurchapp.xcodeproj/project.pbxproj
@@ -5,110 +5,39 @@
 	};
 	objectVersion = 46;
 	objects = {
+
 /* Begin PBXBuildFile section */
-		00C302E51ABCBA2D00DB3ED1 /* libRCTActionSheet.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 00C302AC1ABCB8CE00DB3ED1 /* libRCTActionSheet.a */; };
-		00C302E71ABCBA2D00DB3ED1 /* libRCTGeolocation.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 00C302BA1ABCB90400DB3ED1 /* libRCTGeolocation.a */; };
-		00C302E81ABCBA2D00DB3ED1 /* libRCTImage.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 00C302C01ABCB91800DB3ED1 /* libRCTImage.a */; };
-		00C302E91ABCBA2D00DB3ED1 /* libRCTNetwork.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 00C302DC1ABCB9D200DB3ED1 /* libRCTNetwork.a */; };
-		00C302EA1ABCBA2D00DB3ED1 /* libRCTVibration.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 00C302E41ABCB9EE00DB3ED1 /* libRCTVibration.a */; };
 		00E356F31AD99517003FC87E /* apolloschurchappTests.m in Sources */ = {isa = PBXBuildFile; fileRef = 00E356F21AD99517003FC87E /* apolloschurchappTests.m */; };
 		01F091B02048490A8F9EF4FE /* Inter-UI-Italic.otf in Resources */ = {isa = PBXBuildFile; fileRef = 63F6EE53A9B44B4388B5F1C2 /* Inter-UI-Italic.otf */; };
 		08CE105F17284254AD54AF84 /* DroidSerif-Bold.ttf in Resources */ = {isa = PBXBuildFile; fileRef = E3B8A0AC5A6B4FABB3BDF6CB /* DroidSerif-Bold.ttf */; };
-		0CB759F558AA42908EEA1EAB /* libRNDeviceInfo-tvOS.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 7A505BEDA0674A7F9DD875ED /* libRNDeviceInfo-tvOS.a */; };
-		11D1A2F320CAFA9E000508D9 /* libRCTAnimation.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 5E9157331DD0AC6500FF2AA8 /* libRCTAnimation.a */; };
-		133E29F31AD74F7200F7D852 /* libRCTLinking.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 78C398B91ACF4ADC00677621 /* libRCTLinking.a */; };
-		139105C61AF99C1200B5F7CC /* libRCTSettings.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 139105C11AF99BAD00B5F7CC /* libRCTSettings.a */; };
-		139FDEF61B0652A700C62182 /* libRCTWebSocket.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 139FDEF41B06529B00C62182 /* libRCTWebSocket.a */; };
 		13B07FBC1A68108700A75B9A /* AppDelegate.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB01A68108700A75B9A /* AppDelegate.m */; };
 		13B07FBD1A68108700A75B9A /* LaunchScreen.xib in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB11A68108700A75B9A /* LaunchScreen.xib */; };
 		13B07FBF1A68108700A75B9A /* Images.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB51A68108700A75B9A /* Images.xcassets */; };
 		13B07FC11A68108700A75B9A /* main.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB71A68108700A75B9A /* main.m */; };
-		140ED2AC1D01E1AD002B40FF /* libReact.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 146834041AC3E56700842450 /* libReact.a */; };
-		146834051AC3E58100842450 /* libReact.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 146834041AC3E56700842450 /* libReact.a */; };
 		1C48DCDE11AC47C48E918489 /* Inter-UI-Medium.otf in Resources */ = {isa = PBXBuildFile; fileRef = DC74A378C1CC40E4B6192D7F /* Inter-UI-Medium.otf */; };
-		1E6618B697C649BB9FCD362E /* libBVLinearGradient.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 9F0EC3F23A3F4FFBBBC6583A /* libBVLinearGradient.a */; };
+		25B9E67E3B46D33F45473A84 /* libPods-apolloschurchapp-tvOSTests.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 4F64CCA987A0419EB9C02236 /* libPods-apolloschurchapp-tvOSTests.a */; };
 		2D02E4BC1E0B4A80006451C7 /* AppDelegate.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB01A68108700A75B9A /* AppDelegate.m */; };
 		2D02E4BD1E0B4A84006451C7 /* Images.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB51A68108700A75B9A /* Images.xcassets */; };
 		2D02E4BF1E0B4AB3006451C7 /* main.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB71A68108700A75B9A /* main.m */; };
-		2D02E4C21E0B4AEC006451C7 /* libRCTAnimation.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 5E9157351DD0AC6500FF2AA8 /* libRCTAnimation.a */; };
-		2D02E4C31E0B4AEC006451C7 /* libRCTImage-tvOS.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 3DAD3E841DF850E9000B6D8A /* libRCTImage-tvOS.a */; };
-		2D02E4C41E0B4AEC006451C7 /* libRCTLinking-tvOS.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 3DAD3E881DF850E9000B6D8A /* libRCTLinking-tvOS.a */; };
-		2D02E4C51E0B4AEC006451C7 /* libRCTNetwork-tvOS.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 3DAD3E8C1DF850E9000B6D8A /* libRCTNetwork-tvOS.a */; };
-		2D02E4C61E0B4AEC006451C7 /* libRCTSettings-tvOS.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 3DAD3E901DF850E9000B6D8A /* libRCTSettings-tvOS.a */; };
-		2D02E4C71E0B4AEC006451C7 /* libRCTText-tvOS.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 3DAD3E941DF850E9000B6D8A /* libRCTText-tvOS.a */; };
-		2D02E4C81E0B4AEC006451C7 /* libRCTWebSocket-tvOS.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 3DAD3E991DF850E9000B6D8A /* libRCTWebSocket-tvOS.a */; };
 		2D16E6881FA4F8E400B85C8A /* libReact.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 2D16E6891FA4F8E400B85C8A /* libReact.a */; };
 		2DCD954D1E0B4F2C00145EB5 /* apolloschurchappTests.m in Sources */ = {isa = PBXBuildFile; fileRef = 00E356F21AD99517003FC87E /* apolloschurchappTests.m */; };
-		2DF0FFEE2056DD460020B375 /* libReact.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 3DAD3EA31DF850E9000B6D8A /* libReact.a */; };
-		4994C0DA2471456ABE1D0174 /* libRNAirplay.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 0BE434FF7E9549F392208DEF /* libRNAirplay.a */; };
-		4C19EE32F0B441CD93BB0172 /* libRCTOneSignal.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 0D480D95FC7F4569B8B934E3 /* libRCTOneSignal.a */; };
 		578FFEC1D7D54C9B871A9E5B /* Inter-UI-BlackItalic.otf in Resources */ = {isa = PBXBuildFile; fileRef = 5A5A2BC2998547F4816B82E4 /* Inter-UI-BlackItalic.otf */; };
-		5CAC55FAB9964618918A0056 /* libSafariViewManager.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 349D96BF833B4B1C88D02412 /* libSafariViewManager.a */; };
-		62236B4E7E814A95BC3A3B19 /* libRNScreens.a in Frameworks */ = {isa = PBXBuildFile; fileRef = A44246D0E44E48C4B8335DBD /* libRNScreens.a */; };
-		62BCE95D7F6B4F37B3CB4265 /* libRNImagePicker.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 605AEFB6B1BB4611BDCFE95C /* libRNImagePicker.a */; };
 		68D1351E80AA4A2C96288FD9 /* Inter-UI-Black.otf in Resources */ = {isa = PBXBuildFile; fileRef = EC21254B449443F99016EBFD /* Inter-UI-Black.otf */; };
-		6FFC53D62D7D482A9A92B721 /* libRNSVG-tvOS.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 67356E00D116467DA58DF3CC /* libRNSVG-tvOS.a */; };
 		7FBC6BC3CE8D48298F9850A9 /* Inter-UI-Bold.otf in Resources */ = {isa = PBXBuildFile; fileRef = D5157D807E164356ADE87867 /* Inter-UI-Bold.otf */; };
-		80E20D1B9CC74EB4A9A4CE7B /* libRNFetchBlob.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 0174E356BAEC413288BF654B /* libRNFetchBlob.a */; };
-		820E9220ECAC4A83A15D589F /* libReactNativeConfig-tvOS.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 97222E2EB5E54C7FA6104218 /* libReactNativeConfig-tvOS.a */; };
-		82A2FF1E6E114D3D962D533D /* libRNPassKit.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 3AB4C6D7F52C428FA62777F1 /* libRNPassKit.a */; };
-		832341BD1AAA6AB300B99B32 /* libRCTText.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 832341B51AAA6A8300B99B32 /* libRCTText.a */; };
-		834122CBBA8E476A8652994F /* libRNCWebView.a in Frameworks */ = {isa = PBXBuildFile; fileRef = AE039A0F55BB4B989835F759 /* libRNCWebView.a */; };
 		894732A70B4740678E85B593 /* Inter-UI-BoldItalic.otf in Resources */ = {isa = PBXBuildFile; fileRef = 2F5410F239E9477B9C2E86BD /* Inter-UI-BoldItalic.otf */; };
+		8EA9BDE542E09F685A47D9BE /* libPods-apolloschurchapp-tvOS.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 38B9762ACA099D28C28DBB31 /* libPods-apolloschurchapp-tvOS.a */; };
 		90743C40BF544F10A810C43C /* DroidSerif-Italic.ttf in Resources */ = {isa = PBXBuildFile; fileRef = ADC3D2DB245545ADB1CAB3FE /* DroidSerif-Italic.ttf */; };
 		93A2B0A9328A46A4B7DD5EFA /* DroidSerif-Regular.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 4E007B33EDD74B82AEF02C24 /* DroidSerif-Regular.ttf */; };
-		A975E0B94A5D44AEB410E546 /* libReactNativeConfig.a in Frameworks */ = {isa = PBXBuildFile; fileRef = CF3175A44C4B4612AD79C04E /* libReactNativeConfig.a */; };
+		A415698B9815C7305EDB7AA7 /* libPods-apolloschurchappTests.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 560CBCD50AE7D282715D134E /* libPods-apolloschurchappTests.a */; };
 		AB3BD177B8A14193A5EEDDF8 /* Inter-UI-Regular.otf in Resources */ = {isa = PBXBuildFile; fileRef = A613256118404CB691DE2C8E /* Inter-UI-Regular.otf */; };
-		ADBDB9381DFEBF1600ED6528 /* libRCTBlob.a in Frameworks */ = {isa = PBXBuildFile; fileRef = ADBDB9271DFEBF0700ED6528 /* libRCTBlob.a */; };
 		B02F194A3F6A4FE29AC799B4 /* DroidSerif-BoldItalic.ttf in Resources */ = {isa = PBXBuildFile; fileRef = A93F9D112A034626A9421759 /* DroidSerif-BoldItalic.ttf */; };
-		B0D490A62BC143209FD3BFE8 /* libMusicControl.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 393EA40CFC2843BF9BB667B3 /* libMusicControl.a */; };
-		B6899815EB024B7987617799 /* libRNSVG.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 430F3786C56541B198E03A02 /* libRNSVG.a */; };
-		CB1584B0772D4A67A81FC83F /* libMusicControl-tvOS.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 74625A1E54234FB7BE12070D /* libMusicControl-tvOS.a */; };
-		CE33B866C2DE49DEBE1AF23F /* libSplashScreen.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 1398ECED9AE14FD19B92232D /* libSplashScreen.a */; };
-		CFE4716D4F6D4ABF9ED485AC /* libRNDeviceInfo.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 0F155E84A5784CBE8D95A974 /* libRNDeviceInfo.a */; };
-		D2F560374F3341308A1579E7 /* libRCTVideo.a in Frameworks */ = {isa = PBXBuildFile; fileRef = C7FE26CDA2DC4CDBAB580A2F /* libRCTVideo.a */; };
-		E28D37FEDA0245DBAC6552D3 /* libAirMaps.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 9862436C289A498D8B2E6201 /* libAirMaps.a */; };
+		E875558F3FB8FA2024EF7DC2 /* libPods-apolloschurchapp.a in Frameworks */ = {isa = PBXBuildFile; fileRef = DDB6B5B7B6A0D1ECB68CF0DD /* libPods-apolloschurchapp.a */; };
 		ED297163215061F000B7C4FE /* JavaScriptCore.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = ED297162215061F000B7C4FE /* JavaScriptCore.framework */; };
 		ED2971652150620600B7C4FE /* JavaScriptCore.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = ED2971642150620600B7C4FE /* JavaScriptCore.framework */; };
 		FCB3069DB5DD4170B2CAEFC4 /* Inter-UI-MediumItalic.otf in Resources */ = {isa = PBXBuildFile; fileRef = A460FD7884FD4574A818005A /* Inter-UI-MediumItalic.otf */; };
 /* End PBXBuildFile section */
 
 /* Begin PBXContainerItemProxy section */
-		00C302AB1ABCB8CE00DB3ED1 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 00C302A71ABCB8CE00DB3ED1 /* RCTActionSheet.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 134814201AA4EA6300B7C361;
-			remoteInfo = RCTActionSheet;
-		};
-		00C302B91ABCB90400DB3ED1 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 00C302B51ABCB90400DB3ED1 /* RCTGeolocation.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 134814201AA4EA6300B7C361;
-			remoteInfo = RCTGeolocation;
-		};
-		00C302BF1ABCB91800DB3ED1 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 00C302BB1ABCB91800DB3ED1 /* RCTImage.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 58B5115D1A9E6B3D00147676;
-			remoteInfo = RCTImage;
-		};
-		00C302DB1ABCB9D200DB3ED1 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 00C302D31ABCB9D200DB3ED1 /* RCTNetwork.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 58B511DB1A9E6C8500147676;
-			remoteInfo = RCTNetwork;
-		};
-		00C302E31ABCB9EE00DB3ED1 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 00C302DF1ABCB9EE00DB3ED1 /* RCTVibration.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 832C81801AAF6DEF007FA2F7;
-			remoteInfo = RCTVibration;
-		};
 		00E356F41AD99517003FC87E /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
 			containerPortal = 83CBB9F71A601CBA00E9B192 /* Project object */;
@@ -116,27 +45,6 @@
 			remoteGlobalIDString = 13B07F861A680F5B00A75B9A;
 			remoteInfo = apolloschurchapp;
 		};
-		139105C01AF99BAD00B5F7CC /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 139105B61AF99BAD00B5F7CC /* RCTSettings.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 134814201AA4EA6300B7C361;
-			remoteInfo = RCTSettings;
-		};
-		139FDEF31B06529B00C62182 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 139FDEE61B06529A00C62182 /* RCTWebSocket.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 3C86DF461ADF2C930047B81A;
-			remoteInfo = RCTWebSocket;
-		};
-		146834031AC3E56700842450 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 83CBBA2E1A601D0E00E9B192;
-			remoteInfo = React;
-		};
 		2D02E4911E0B4A5D006451C7 /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
 			containerPortal = 83CBB9F71A601CBA00E9B192 /* Project object */;
@@ -144,385 +52,14 @@
 			remoteGlobalIDString = 2D02E47A1E0B4A5D006451C7;
 			remoteInfo = "apolloschurchapp-tvOS";
 		};
-		2D16E6711FA4F8DC00B85C8A /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = ADBDB91F1DFEBF0600ED6528 /* RCTBlob.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = ADD01A681E09402E00F6D226;
-			remoteInfo = "RCTBlob-tvOS";
-		};
-		2D16E6831FA4F8DC00B85C8A /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 139FDEE61B06529A00C62182 /* RCTWebSocket.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 3DBE0D001F3B181A0099AA32;
-			remoteInfo = fishhook;
-		};
-		2D16E6851FA4F8DC00B85C8A /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 139FDEE61B06529A00C62182 /* RCTWebSocket.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 3DBE0D0D1F3B181C0099AA32;
-			remoteInfo = "fishhook-tvOS";
-		};
-		2DF0FFDE2056DD460020B375 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = EBF21BDC1FC498900052F4D5;
-			remoteInfo = jsinspector;
-		};
-		2DF0FFE02056DD460020B375 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = EBF21BFA1FC4989A0052F4D5;
-			remoteInfo = "jsinspector-tvOS";
-		};
-		2DF0FFE22056DD460020B375 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 139D7ECE1E25DB7D00323FB7;
-			remoteInfo = "third-party";
-		};
-		2DF0FFE42056DD460020B375 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 3D383D3C1EBD27B6005632C8;
-			remoteInfo = "third-party-tvOS";
-		};
-		2DF0FFE62056DD460020B375 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 139D7E881E25C6D100323FB7;
-			remoteInfo = "double-conversion";
-		};
-		2DF0FFE82056DD460020B375 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 3D383D621EBD27B9005632C8;
-			remoteInfo = "double-conversion-tvOS";
-		};
-		3DAD3E831DF850E9000B6D8A /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 00C302BB1ABCB91800DB3ED1 /* RCTImage.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 2D2A283A1D9B042B00D4039D;
-			remoteInfo = "RCTImage-tvOS";
-		};
-		3DAD3E871DF850E9000B6D8A /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 78C398B01ACF4ADC00677621 /* RCTLinking.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 2D2A28471D9B043800D4039D;
-			remoteInfo = "RCTLinking-tvOS";
-		};
-		3DAD3E8B1DF850E9000B6D8A /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 00C302D31ABCB9D200DB3ED1 /* RCTNetwork.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 2D2A28541D9B044C00D4039D;
-			remoteInfo = "RCTNetwork-tvOS";
-		};
-		3DAD3E8F1DF850E9000B6D8A /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 139105B61AF99BAD00B5F7CC /* RCTSettings.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 2D2A28611D9B046600D4039D;
-			remoteInfo = "RCTSettings-tvOS";
-		};
-		3DAD3E931DF850E9000B6D8A /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 832341B01AAA6A8300B99B32 /* RCTText.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 2D2A287B1D9B048500D4039D;
-			remoteInfo = "RCTText-tvOS";
-		};
-		3DAD3E981DF850E9000B6D8A /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 139FDEE61B06529A00C62182 /* RCTWebSocket.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 2D2A28881D9B049200D4039D;
-			remoteInfo = "RCTWebSocket-tvOS";
-		};
-		3DAD3EA21DF850E9000B6D8A /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 2D2A28131D9B038B00D4039D;
-			remoteInfo = "React-tvOS";
-		};
-		3DAD3EA41DF850E9000B6D8A /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 3D3C059A1DE3340900C268FA;
-			remoteInfo = yoga;
-		};
-		3DAD3EA61DF850E9000B6D8A /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 3D3C06751DE3340C00C268FA;
-			remoteInfo = "yoga-tvOS";
-		};
-		3DAD3EA81DF850E9000B6D8A /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 3D3CD9251DE5FBEC00167DC4;
-			remoteInfo = cxxreact;
-		};
-		3DAD3EAA1DF850E9000B6D8A /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 3D3CD9321DE5FBEE00167DC4;
-			remoteInfo = "cxxreact-tvOS";
-		};
-		5E9157321DD0AC6500FF2AA8 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 5E91572D1DD0AC6500FF2AA8 /* RCTAnimation.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 134814201AA4EA6300B7C361;
-			remoteInfo = RCTAnimation;
-		};
-		5E9157341DD0AC6500FF2AA8 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 5E91572D1DD0AC6500FF2AA8 /* RCTAnimation.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 2D2A28201D9B03D100D4039D;
-			remoteInfo = "RCTAnimation-tvOS";
-		};
-		78C398B81ACF4ADC00677621 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 78C398B01ACF4ADC00677621 /* RCTLinking.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 134814201AA4EA6300B7C361;
-			remoteInfo = RCTLinking;
-		};
-		79CEBFDB223011FE00D8F685 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 43F1D28CACD04757A0FB29A6 /* BVLinearGradient.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 134814201AA4EA6300B7C361;
-			remoteInfo = BVLinearGradient;
-		};
-		79CEBFDD223011FE00D8F685 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 43F1D28CACD04757A0FB29A6 /* BVLinearGradient.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 64AA15081EF7F30100718508;
-			remoteInfo = "BVLinearGradient-tvOS";
-		};
-		79CEBFE1223011FE00D8F685 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = BD872E89C275480496010898 /* MusicControl.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 134814201AA4EA6300B7C361;
-			remoteInfo = MusicControl;
-		};
-		79CEBFE3223011FE00D8F685 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = BD872E89C275480496010898 /* MusicControl.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = A3FC285E1EA7A8350097B6A9;
-			remoteInfo = "MusicControl-tvOS";
-		};
-		79CEBFE6223011FE00D8F685 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 34667F4711264343B035ACD0 /* RCTOneSignal.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 3245CDED1BFEE35C00EABF68;
-			remoteInfo = RCTOneSignal;
-		};
-		79CEBFEA223011FE00D8F685 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 63998175DB3B4506ACF27B92 /* ReactNativeConfig.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = EB2648DF1C7BE17A00B8F155;
-			remoteInfo = ReactNativeConfig;
-		};
-		79CEBFEC223011FE00D8F685 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 63998175DB3B4506ACF27B92 /* ReactNativeConfig.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 3DF7F6AC203AA09B00D0EAB7;
-			remoteInfo = "ReactNativeConfig-tvOS";
-		};
-		79CEBFF2223011FE00D8F685 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 3923D6EFF26D4A53B8BDF8C6 /* RNAirplay.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 134814201AA4EA6300B7C361;
-			remoteInfo = RNAirplay;
-		};
-		79CEBFF5223011FE00D8F685 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 4ED51CB73778472686A7279B /* RNCWebView.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 134814201AA4EA6300B7C361;
-			remoteInfo = RNCWebView;
-		};
-		79CEBFF9223011FE00D8F685 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 39E16D6487A34F4D9B8C6EC1 /* RNDeviceInfo.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = DA5891D81BA9A9FC002B4DB2;
-			remoteInfo = RNDeviceInfo;
-		};
-		79CEBFFB223011FE00D8F685 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 39E16D6487A34F4D9B8C6EC1 /* RNDeviceInfo.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = E72EC1401F7ABB5A0001BC90;
-			remoteInfo = "RNDeviceInfo-tvOS";
-		};
-		79CEBFFE223011FE00D8F685 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 629FCAAD128E41B4BAE2BCF4 /* RNImagePicker.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 014A3B5C1C6CF33500B6D375;
-			remoteInfo = RNImagePicker;
-		};
-		79CEC004223011FE00D8F685 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 0C974B3AFB5446819A990A78 /* SplashScreen.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 3D7682761D8E76B80014119E;
-			remoteInfo = SplashScreen;
-		};
-		79CEC009223011FE00D8F685 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = F4FDE4F3C6704DA2A3E04D18 /* SafariViewManager.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 134814201AA4EA6300B7C361;
-			remoteInfo = SafariViewManager;
-		};
-		79CEC00E223011FE00D8F685 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 00F25A7E17B94370985B32E7 /* RNScreens.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 134814201AA4EA6300B7C361;
-			remoteInfo = RNScreens;
-		};
-		79CEC014223011FE00D8F685 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 2130E622CDAD43DF896EFF80 /* RNSVG.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 0CF68AC11AF0540F00FF9E5C;
-			remoteInfo = RNSVG;
-		};
-		79CEC016223011FE00D8F685 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 2130E622CDAD43DF896EFF80 /* RNSVG.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 94DDAC5C1F3D024300EED511;
-			remoteInfo = "RNSVG-tvOS";
-		};
-		79CEC01C223011FE00D8F685 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = F617FE53F3334D93B2EEAA64 /* RCTVideo.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 134814201AA4EA6300B7C361;
-			remoteInfo = RCTVideo;
-		};
-		79CEC01E223011FE00D8F685 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = F617FE53F3334D93B2EEAA64 /* RCTVideo.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 641E28441F0EEC8500443AF6;
-			remoteInfo = "RCTVideo-tvOS";
-		};
-		79CEC023223011FF00D8F685 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 10B0392307184C498573F1A2 /* RNFetchBlob.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = A15C300E1CD25C330074CB35;
-			remoteInfo = RNFetchBlob;
-		};
-		832341B41AAA6A8300B99B32 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 832341B01AAA6A8300B99B32 /* RCTText.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 58B5119B1A9E6C1200147676;
-			remoteInfo = RCTText;
-		};
-		ADBDB9261DFEBF0700ED6528 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = ADBDB91F1DFEBF0600ED6528 /* RCTBlob.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 358F4ED71D1E81A9004DF814;
-			remoteInfo = RCTBlob;
-		};
-		BF08F42F22429D0700FFB1DC /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = EDEBC6D6214B3E7000DD5AC8;
-			remoteInfo = jsi;
-		};
-		BF08F43122429D0700FFB1DC /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = EDEBC73B214B45A300DD5AC8;
-			remoteInfo = jsiexecutor;
-		};
-		BF08F43322429D0700FFB1DC /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = ED296FB6214C9A0900B7C4FE;
-			remoteInfo = "jsi-tvOS";
-		};
-		BF08F43522429D0700FFB1DC /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = ED296FEE214C9CF800B7C4FE;
-			remoteInfo = "jsiexecutor-tvOS";
-		};
-		BF08F44922429D0700FFB1DC /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 1C0ED1C4FB474DC8A829950D /* AirMaps.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 11FA5C511C4A1296003AC2EE;
-			remoteInfo = AirMaps;
-		};
-		BF08F5182242B97A00FFB1DC /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = D3BA7667091546469A730845 /* RNPassKit.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 6D42A7D820341E6800A0D1AE;
-			remoteInfo = RNPassKit;
-		};
 /* End PBXContainerItemProxy section */
 
 /* Begin PBXFileReference section */
 		008F07F21AC5B25A0029DE68 /* main.jsbundle */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = main.jsbundle; sourceTree = "<group>"; };
-		00C302A71ABCB8CE00DB3ED1 /* RCTActionSheet.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = RCTActionSheet.xcodeproj; path = "../node_modules/react-native/Libraries/ActionSheetIOS/RCTActionSheet.xcodeproj"; sourceTree = "<group>"; };
-		00C302B51ABCB90400DB3ED1 /* RCTGeolocation.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = RCTGeolocation.xcodeproj; path = "../node_modules/react-native/Libraries/Geolocation/RCTGeolocation.xcodeproj"; sourceTree = "<group>"; };
-		00C302BB1ABCB91800DB3ED1 /* RCTImage.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = RCTImage.xcodeproj; path = "../node_modules/react-native/Libraries/Image/RCTImage.xcodeproj"; sourceTree = "<group>"; };
-		00C302D31ABCB9D200DB3ED1 /* RCTNetwork.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = RCTNetwork.xcodeproj; path = "../node_modules/react-native/Libraries/Network/RCTNetwork.xcodeproj"; sourceTree = "<group>"; };
-		00C302DF1ABCB9EE00DB3ED1 /* RCTVibration.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = RCTVibration.xcodeproj; path = "../node_modules/react-native/Libraries/Vibration/RCTVibration.xcodeproj"; sourceTree = "<group>"; };
 		00E356EE1AD99517003FC87E /* apolloschurchappTests.xctest */ = {isa = PBXFileReference; explicitFileType = wrapper.cfbundle; includeInIndex = 0; path = apolloschurchappTests.xctest; sourceTree = BUILT_PRODUCTS_DIR; };
 		00E356F11AD99517003FC87E /* Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; path = Info.plist; sourceTree = "<group>"; };
 		00E356F21AD99517003FC87E /* apolloschurchappTests.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; path = apolloschurchappTests.m; sourceTree = "<group>"; };
-		00F25A7E17B94370985B32E7 /* RNScreens.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = RNScreens.xcodeproj; path = "../node_modules/react-native-screens/ios/RNScreens.xcodeproj"; sourceTree = "<group>"; };
-		0174E356BAEC413288BF654B /* libRNFetchBlob.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libRNFetchBlob.a; sourceTree = "<group>"; };
-		0BE434FF7E9549F392208DEF /* libRNAirplay.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libRNAirplay.a; sourceTree = "<group>"; };
-		0C974B3AFB5446819A990A78 /* SplashScreen.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = SplashScreen.xcodeproj; path = "../node_modules/react-native-splash-screen/ios/SplashScreen.xcodeproj"; sourceTree = "<group>"; };
 		0D480D95FC7F4569B8B934E3 /* libRCTOneSignal.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libRCTOneSignal.a; sourceTree = "<group>"; };
-		0F155E84A5784CBE8D95A974 /* libRNDeviceInfo.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libRNDeviceInfo.a; sourceTree = "<group>"; };
-		10B0392307184C498573F1A2 /* RNFetchBlob.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = RNFetchBlob.xcodeproj; path = "../node_modules/rn-fetch-blob/ios/RNFetchBlob.xcodeproj"; sourceTree = "<group>"; };
-		139105B61AF99BAD00B5F7CC /* RCTSettings.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = RCTSettings.xcodeproj; path = "../node_modules/react-native/Libraries/Settings/RCTSettings.xcodeproj"; sourceTree = "<group>"; };
-		1398ECED9AE14FD19B92232D /* libSplashScreen.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libSplashScreen.a; sourceTree = "<group>"; };
-		139FDEE61B06529A00C62182 /* RCTWebSocket.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = RCTWebSocket.xcodeproj; path = "../node_modules/react-native/Libraries/WebSocket/RCTWebSocket.xcodeproj"; sourceTree = "<group>"; };
 		13B07F961A680F5B00A75B9A /* apolloschurchapp.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = apolloschurchapp.app; sourceTree = BUILT_PRODUCTS_DIR; };
 		13B07FAF1A68108700A75B9A /* AppDelegate.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = AppDelegate.h; path = apolloschurchapp/AppDelegate.h; sourceTree = "<group>"; };
 		13B07FB01A68108700A75B9A /* AppDelegate.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; name = AppDelegate.m; path = apolloschurchapp/AppDelegate.m; sourceTree = "<group>"; };
@@ -530,56 +67,35 @@
 		13B07FB51A68108700A75B9A /* Images.xcassets */ = {isa = PBXFileReference; lastKnownFileType = folder.assetcatalog; name = Images.xcassets; path = apolloschurchapp/Images.xcassets; sourceTree = "<group>"; };
 		13B07FB61A68108700A75B9A /* Info.plist */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.xml; name = Info.plist; path = apolloschurchapp/Info.plist; sourceTree = "<group>"; };
 		13B07FB71A68108700A75B9A /* main.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; name = main.m; path = apolloschurchapp/main.m; sourceTree = "<group>"; };
-		146833FF1AC3E56700842450 /* React.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = React.xcodeproj; path = "../node_modules/react-native/React/React.xcodeproj"; sourceTree = "<group>"; };
-		1C0ED1C4FB474DC8A829950D /* AirMaps.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = AirMaps.xcodeproj; path = "../node_modules/react-native-maps/lib/ios/AirMaps.xcodeproj"; sourceTree = "<group>"; };
-		2130E622CDAD43DF896EFF80 /* RNSVG.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = RNSVG.xcodeproj; path = "../node_modules/react-native-svg/ios/RNSVG.xcodeproj"; sourceTree = "<group>"; };
+		1F8F5BC4745C8F22C695573D /* Pods-apolloschurchapp.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-apolloschurchapp.release.xcconfig"; path = "Target Support Files/Pods-apolloschurchapp/Pods-apolloschurchapp.release.xcconfig"; sourceTree = "<group>"; };
 		2D02E47B1E0B4A5D006451C7 /* apolloschurchapp-tvOS.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = "apolloschurchapp-tvOS.app"; sourceTree = BUILT_PRODUCTS_DIR; };
 		2D02E4901E0B4A5D006451C7 /* apolloschurchapp-tvOSTests.xctest */ = {isa = PBXFileReference; explicitFileType = wrapper.cfbundle; includeInIndex = 0; path = "apolloschurchapp-tvOSTests.xctest"; sourceTree = BUILT_PRODUCTS_DIR; };
 		2D16E6891FA4F8E400B85C8A /* libReact.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; path = libReact.a; sourceTree = BUILT_PRODUCTS_DIR; };
 		2F5410F239E9477B9C2E86BD /* Inter-UI-BoldItalic.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-BoldItalic.otf"; path = "../assets/fonts/Inter-UI-BoldItalic.otf"; sourceTree = "<group>"; };
-		34667F4711264343B035ACD0 /* RCTOneSignal.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = RCTOneSignal.xcodeproj; path = "../node_modules/react-native-onesignal/ios/RCTOneSignal.xcodeproj"; sourceTree = "<group>"; };
-		349D96BF833B4B1C88D02412 /* libSafariViewManager.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libSafariViewManager.a; sourceTree = "<group>"; };
-		3923D6EFF26D4A53B8BDF8C6 /* RNAirplay.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = RNAirplay.xcodeproj; path = "../node_modules/react-native-airplay-btn/ios/RNAirplay.xcodeproj"; sourceTree = "<group>"; };
-		393EA40CFC2843BF9BB667B3 /* libMusicControl.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libMusicControl.a; sourceTree = "<group>"; };
-		39E16D6487A34F4D9B8C6EC1 /* RNDeviceInfo.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = RNDeviceInfo.xcodeproj; path = "../node_modules/react-native-device-info/ios/RNDeviceInfo.xcodeproj"; sourceTree = "<group>"; };
-		3AB4C6D7F52C428FA62777F1 /* libRNPassKit.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libRNPassKit.a; sourceTree = "<group>"; };
-		430F3786C56541B198E03A02 /* libRNSVG.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libRNSVG.a; sourceTree = "<group>"; };
-		43F1D28CACD04757A0FB29A6 /* BVLinearGradient.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = BVLinearGradient.xcodeproj; path = "../node_modules/react-native-linear-gradient/BVLinearGradient.xcodeproj"; sourceTree = "<group>"; };
+		38B9762ACA099D28C28DBB31 /* libPods-apolloschurchapp-tvOS.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-apolloschurchapp-tvOS.a"; sourceTree = BUILT_PRODUCTS_DIR; };
 		4E007B33EDD74B82AEF02C24 /* DroidSerif-Regular.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "DroidSerif-Regular.ttf"; path = "../assets/fonts/DroidSerif-Regular.ttf"; sourceTree = "<group>"; };
-		4ED51CB73778472686A7279B /* RNCWebView.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = RNCWebView.xcodeproj; path = "../node_modules/react-native-webview/ios/RNCWebView.xcodeproj"; sourceTree = "<group>"; };
+		4F64CCA987A0419EB9C02236 /* libPods-apolloschurchapp-tvOSTests.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-apolloschurchapp-tvOSTests.a"; sourceTree = BUILT_PRODUCTS_DIR; };
+		54F271B8EB67A4997A2C7D96 /* Pods-apolloschurchapp.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-apolloschurchapp.debug.xcconfig"; path = "Target Support Files/Pods-apolloschurchapp/Pods-apolloschurchapp.debug.xcconfig"; sourceTree = "<group>"; };
+		560CBCD50AE7D282715D134E /* libPods-apolloschurchappTests.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-apolloschurchappTests.a"; sourceTree = BUILT_PRODUCTS_DIR; };
 		5A5A2BC2998547F4816B82E4 /* Inter-UI-BlackItalic.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-BlackItalic.otf"; path = "../assets/fonts/Inter-UI-BlackItalic.otf"; sourceTree = "<group>"; };
-		5E91572D1DD0AC6500FF2AA8 /* RCTAnimation.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = RCTAnimation.xcodeproj; path = "../node_modules/react-native/Libraries/NativeAnimation/RCTAnimation.xcodeproj"; sourceTree = "<group>"; };
-		605AEFB6B1BB4611BDCFE95C /* libRNImagePicker.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libRNImagePicker.a; sourceTree = "<group>"; };
-		629FCAAD128E41B4BAE2BCF4 /* RNImagePicker.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = RNImagePicker.xcodeproj; path = "../node_modules/react-native-image-picker/ios/RNImagePicker.xcodeproj"; sourceTree = "<group>"; };
-		63998175DB3B4506ACF27B92 /* ReactNativeConfig.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = ReactNativeConfig.xcodeproj; path = "../node_modules/react-native-config/ios/ReactNativeConfig.xcodeproj"; sourceTree = "<group>"; };
 		63F6EE53A9B44B4388B5F1C2 /* Inter-UI-Italic.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-Italic.otf"; path = "../assets/fonts/Inter-UI-Italic.otf"; sourceTree = "<group>"; };
-		67356E00D116467DA58DF3CC /* libRNSVG-tvOS.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = "libRNSVG-tvOS.a"; sourceTree = "<group>"; };
-		74625A1E54234FB7BE12070D /* libMusicControl-tvOS.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = "libMusicControl-tvOS.a"; sourceTree = "<group>"; };
-		78C398B01ACF4ADC00677621 /* RCTLinking.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = RCTLinking.xcodeproj; path = "../node_modules/react-native/Libraries/LinkingIOS/RCTLinking.xcodeproj"; sourceTree = "<group>"; };
-		7A505BEDA0674A7F9DD875ED /* libRNDeviceInfo-tvOS.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = "libRNDeviceInfo-tvOS.a"; sourceTree = "<group>"; };
-		832341B01AAA6A8300B99B32 /* RCTText.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = RCTText.xcodeproj; path = "../node_modules/react-native/Libraries/Text/RCTText.xcodeproj"; sourceTree = "<group>"; };
-		97222E2EB5E54C7FA6104218 /* libReactNativeConfig-tvOS.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = "libReactNativeConfig-tvOS.a"; sourceTree = "<group>"; };
-		9862436C289A498D8B2E6201 /* libAirMaps.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libAirMaps.a; sourceTree = "<group>"; };
-		9F0EC3F23A3F4FFBBBC6583A /* libBVLinearGradient.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libBVLinearGradient.a; sourceTree = "<group>"; };
-		A44246D0E44E48C4B8335DBD /* libRNScreens.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libRNScreens.a; sourceTree = "<group>"; };
+		745C835CA2F1E1EC2425152A /* Pods-apolloschurchapp-tvOS.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-apolloschurchapp-tvOS.debug.xcconfig"; path = "Target Support Files/Pods-apolloschurchapp-tvOS/Pods-apolloschurchapp-tvOS.debug.xcconfig"; sourceTree = "<group>"; };
 		A460FD7884FD4574A818005A /* Inter-UI-MediumItalic.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-MediumItalic.otf"; path = "../assets/fonts/Inter-UI-MediumItalic.otf"; sourceTree = "<group>"; };
 		A613256118404CB691DE2C8E /* Inter-UI-Regular.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-Regular.otf"; path = "../assets/fonts/Inter-UI-Regular.otf"; sourceTree = "<group>"; };
 		A93F9D112A034626A9421759 /* DroidSerif-BoldItalic.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "DroidSerif-BoldItalic.ttf"; path = "../assets/fonts/DroidSerif-BoldItalic.ttf"; sourceTree = "<group>"; };
-		ADBDB91F1DFEBF0600ED6528 /* RCTBlob.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = RCTBlob.xcodeproj; path = "../node_modules/react-native/Libraries/Blob/RCTBlob.xcodeproj"; sourceTree = "<group>"; };
+		AB44FC16DED929081698EDFD /* Pods-apolloschurchappTests.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-apolloschurchappTests.debug.xcconfig"; path = "Target Support Files/Pods-apolloschurchappTests/Pods-apolloschurchappTests.debug.xcconfig"; sourceTree = "<group>"; };
 		ADC3D2DB245545ADB1CAB3FE /* DroidSerif-Italic.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "DroidSerif-Italic.ttf"; path = "../assets/fonts/DroidSerif-Italic.ttf"; sourceTree = "<group>"; };
-		AE039A0F55BB4B989835F759 /* libRNCWebView.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libRNCWebView.a; sourceTree = "<group>"; };
-		BD872E89C275480496010898 /* MusicControl.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = MusicControl.xcodeproj; path = "../node_modules/react-native-music-control/ios/MusicControl.xcodeproj"; sourceTree = "<group>"; };
-		C7FE26CDA2DC4CDBAB580A2F /* libRCTVideo.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libRCTVideo.a; sourceTree = "<group>"; };
-		CF3175A44C4B4612AD79C04E /* libReactNativeConfig.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libReactNativeConfig.a; sourceTree = "<group>"; };
-		D3BA7667091546469A730845 /* RNPassKit.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = RNPassKit.xcodeproj; path = "../node_modules/react-native-passkit-wallet/ios/RNPassKit.xcodeproj"; sourceTree = "<group>"; };
+		AE85030F59F256E90D5A4C2B /* Pods-apolloschurchapp-tvOS.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-apolloschurchapp-tvOS.release.xcconfig"; path = "Target Support Files/Pods-apolloschurchapp-tvOS/Pods-apolloschurchapp-tvOS.release.xcconfig"; sourceTree = "<group>"; };
+		D394E3064D75710E81C51EB0 /* Pods-apolloschurchapp-tvOSTests.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-apolloschurchapp-tvOSTests.debug.xcconfig"; path = "Target Support Files/Pods-apolloschurchapp-tvOSTests/Pods-apolloschurchapp-tvOSTests.debug.xcconfig"; sourceTree = "<group>"; };
 		D5157D807E164356ADE87867 /* Inter-UI-Bold.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-Bold.otf"; path = "../assets/fonts/Inter-UI-Bold.otf"; sourceTree = "<group>"; };
+		DA9745795726553C6FA9E7A8 /* Pods-apolloschurchapp-tvOSTests.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-apolloschurchapp-tvOSTests.release.xcconfig"; path = "Target Support Files/Pods-apolloschurchapp-tvOSTests/Pods-apolloschurchapp-tvOSTests.release.xcconfig"; sourceTree = "<group>"; };
 		DC74A378C1CC40E4B6192D7F /* Inter-UI-Medium.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-Medium.otf"; path = "../assets/fonts/Inter-UI-Medium.otf"; sourceTree = "<group>"; };
+		DDB6B5B7B6A0D1ECB68CF0DD /* libPods-apolloschurchapp.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-apolloschurchapp.a"; sourceTree = BUILT_PRODUCTS_DIR; };
 		E3B8A0AC5A6B4FABB3BDF6CB /* DroidSerif-Bold.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "DroidSerif-Bold.ttf"; path = "../assets/fonts/DroidSerif-Bold.ttf"; sourceTree = "<group>"; };
+		E98AC9782C338F13632EF710 /* Pods-apolloschurchappTests.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-apolloschurchappTests.release.xcconfig"; path = "Target Support Files/Pods-apolloschurchappTests/Pods-apolloschurchappTests.release.xcconfig"; sourceTree = "<group>"; };
 		EC21254B449443F99016EBFD /* Inter-UI-Black.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-Black.otf"; path = "../assets/fonts/Inter-UI-Black.otf"; sourceTree = "<group>"; };
 		ED297162215061F000B7C4FE /* JavaScriptCore.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = JavaScriptCore.framework; path = System/Library/Frameworks/JavaScriptCore.framework; sourceTree = SDKROOT; };
 		ED2971642150620600B7C4FE /* JavaScriptCore.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = JavaScriptCore.framework; path = Platforms/AppleTVOS.platform/Developer/SDKs/AppleTVOS12.0.sdk/System/Library/Frameworks/JavaScriptCore.framework; sourceTree = DEVELOPER_DIR; };
-		F4FDE4F3C6704DA2A3E04D18 /* SafariViewManager.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = SafariViewManager.xcodeproj; path = "../node_modules/react-native-safari-view/SafariViewManager.xcodeproj"; sourceTree = "<group>"; };
-		F617FE53F3334D93B2EEAA64 /* RCTVideo.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = RCTVideo.xcodeproj; path = "../node_modules/react-native-video/ios/RCTVideo.xcodeproj"; sourceTree = "<group>"; };
 /* End PBXFileReference section */
 
 /* Begin PBXFrameworksBuildPhase section */
@@ -587,7 +103,7 @@
 			isa = PBXFrameworksBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
-				140ED2AC1D01E1AD002B40FF /* libReact.a in Frameworks */,
+				A415698B9815C7305EDB7AA7 /* libPods-apolloschurchappTests.a in Frameworks */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
@@ -596,34 +112,7 @@
 			buildActionMask = 2147483647;
 			files = (
 				ED297163215061F000B7C4FE /* JavaScriptCore.framework in Frameworks */,
-				ADBDB9381DFEBF1600ED6528 /* libRCTBlob.a in Frameworks */,
-				11D1A2F320CAFA9E000508D9 /* libRCTAnimation.a in Frameworks */,
-				146834051AC3E58100842450 /* libReact.a in Frameworks */,
-				00C302E51ABCBA2D00DB3ED1 /* libRCTActionSheet.a in Frameworks */,
-				00C302E71ABCBA2D00DB3ED1 /* libRCTGeolocation.a in Frameworks */,
-				00C302E81ABCBA2D00DB3ED1 /* libRCTImage.a in Frameworks */,
-				133E29F31AD74F7200F7D852 /* libRCTLinking.a in Frameworks */,
-				00C302E91ABCBA2D00DB3ED1 /* libRCTNetwork.a in Frameworks */,
-				139105C61AF99C1200B5F7CC /* libRCTSettings.a in Frameworks */,
-				832341BD1AAA6AB300B99B32 /* libRCTText.a in Frameworks */,
-				00C302EA1ABCBA2D00DB3ED1 /* libRCTVibration.a in Frameworks */,
-				139FDEF61B0652A700C62182 /* libRCTWebSocket.a in Frameworks */,
-				4994C0DA2471456ABE1D0174 /* libRNAirplay.a in Frameworks */,
-				A975E0B94A5D44AEB410E546 /* libReactNativeConfig.a in Frameworks */,
-				CFE4716D4F6D4ABF9ED485AC /* libRNDeviceInfo.a in Frameworks */,
-				62BCE95D7F6B4F37B3CB4265 /* libRNImagePicker.a in Frameworks */,
-				1E6618B697C649BB9FCD362E /* libBVLinearGradient.a in Frameworks */,
-				B0D490A62BC143209FD3BFE8 /* libMusicControl.a in Frameworks */,
-				4C19EE32F0B441CD93BB0172 /* libRCTOneSignal.a in Frameworks */,
-				5CAC55FAB9964618918A0056 /* libSafariViewManager.a in Frameworks */,
-				62236B4E7E814A95BC3A3B19 /* libRNScreens.a in Frameworks */,
-				CE33B866C2DE49DEBE1AF23F /* libSplashScreen.a in Frameworks */,
-				B6899815EB024B7987617799 /* libRNSVG.a in Frameworks */,
-				D2F560374F3341308A1579E7 /* libRCTVideo.a in Frameworks */,
-				834122CBBA8E476A8652994F /* libRNCWebView.a in Frameworks */,
-				80E20D1B9CC74EB4A9A4CE7B /* libRNFetchBlob.a in Frameworks */,
-				E28D37FEDA0245DBAC6552D3 /* libAirMaps.a in Frameworks */,
-				82A2FF1E6E114D3D962D533D /* libRNPassKit.a in Frameworks */,
+				E875558F3FB8FA2024EF7DC2 /* libPods-apolloschurchapp.a in Frameworks */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
@@ -633,17 +122,7 @@
 			files = (
 				ED2971652150620600B7C4FE /* JavaScriptCore.framework in Frameworks */,
 				2D16E6881FA4F8E400B85C8A /* libReact.a in Frameworks */,
-				2D02E4C21E0B4AEC006451C7 /* libRCTAnimation.a in Frameworks */,
-				2D02E4C31E0B4AEC006451C7 /* libRCTImage-tvOS.a in Frameworks */,
-				2D02E4C41E0B4AEC006451C7 /* libRCTLinking-tvOS.a in Frameworks */,
-				2D02E4C51E0B4AEC006451C7 /* libRCTNetwork-tvOS.a in Frameworks */,
-				2D02E4C61E0B4AEC006451C7 /* libRCTSettings-tvOS.a in Frameworks */,
-				2D02E4C71E0B4AEC006451C7 /* libRCTText-tvOS.a in Frameworks */,
-				2D02E4C81E0B4AEC006451C7 /* libRCTWebSocket-tvOS.a in Frameworks */,
-				820E9220ECAC4A83A15D589F /* libReactNativeConfig-tvOS.a in Frameworks */,
-				0CB759F558AA42908EEA1EAB /* libRNDeviceInfo-tvOS.a in Frameworks */,
-				CB1584B0772D4A67A81FC83F /* libMusicControl-tvOS.a in Frameworks */,
-				6FFC53D62D7D482A9A92B721 /* libRNSVG-tvOS.a in Frameworks */,
+				8EA9BDE542E09F685A47D9BE /* libPods-apolloschurchapp-tvOS.a in Frameworks */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
@@ -651,55 +130,13 @@
 			isa = PBXFrameworksBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
-				2DF0FFEE2056DD460020B375 /* libReact.a in Frameworks */,
+				25B9E67E3B46D33F45473A84 /* libPods-apolloschurchapp-tvOSTests.a in Frameworks */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
 /* End PBXFrameworksBuildPhase section */
 
 /* Begin PBXGroup section */
-		00C302A81ABCB8CE00DB3ED1 /* Products */ = {
-			isa = PBXGroup;
-			children = (
-				00C302AC1ABCB8CE00DB3ED1 /* libRCTActionSheet.a */,
-			);
-			name = Products;
-			sourceTree = "<group>";
-		};
-		00C302B61ABCB90400DB3ED1 /* Products */ = {
-			isa = PBXGroup;
-			children = (
-				00C302BA1ABCB90400DB3ED1 /* libRCTGeolocation.a */,
-			);
-			name = Products;
-			sourceTree = "<group>";
-		};
-		00C302BC1ABCB91800DB3ED1 /* Products */ = {
-			isa = PBXGroup;
-			children = (
-				00C302C01ABCB91800DB3ED1 /* libRCTImage.a */,
-				3DAD3E841DF850E9000B6D8A /* libRCTImage-tvOS.a */,
-			);
-			name = Products;
-			sourceTree = "<group>";
-		};
-		00C302D41ABCB9D200DB3ED1 /* Products */ = {
-			isa = PBXGroup;
-			children = (
-				00C302DC1ABCB9D200DB3ED1 /* libRCTNetwork.a */,
-				3DAD3E8C1DF850E9000B6D8A /* libRCTNetwork-tvOS.a */,
-			);
-			name = Products;
-			sourceTree = "<group>";
-		};
-		00C302E01ABCB9EE00DB3ED1 /* Products */ = {
-			isa = PBXGroup;
-			children = (
-				00C302E41ABCB9EE00DB3ED1 /* libRCTVibration.a */,
-			);
-			name = Products;
-			sourceTree = "<group>";
-		};
 		00E356EF1AD99517003FC87E /* apolloschurchappTests */ = {
 			isa = PBXGroup;
 			children = (
@@ -717,26 +154,6 @@
 			name = "Supporting Files";
 			sourceTree = "<group>";
 		};
-		139105B71AF99BAD00B5F7CC /* Products */ = {
-			isa = PBXGroup;
-			children = (
-				139105C11AF99BAD00B5F7CC /* libRCTSettings.a */,
-				3DAD3E901DF850E9000B6D8A /* libRCTSettings-tvOS.a */,
-			);
-			name = Products;
-			sourceTree = "<group>";
-		};
-		139FDEE71B06529A00C62182 /* Products */ = {
-			isa = PBXGroup;
-			children = (
-				139FDEF41B06529B00C62182 /* libRCTWebSocket.a */,
-				3DAD3E991DF850E9000B6D8A /* libRCTWebSocket-tvOS.a */,
-				2D16E6841FA4F8DC00B85C8A /* libfishhook.a */,
-				2D16E6861FA4F8DC00B85C8A /* libfishhook-tvOS.a */,
-			);
-			name = Products;
-			sourceTree = "<group>";
-		};
 		13B07FAE1A68108700A75B9A /* apolloschurchapp */ = {
 			isa = PBXGroup;
 			children = (
@@ -751,35 +168,16 @@
 			name = apolloschurchapp;
 			sourceTree = "<group>";
 		};
-		146834001AC3E56700842450 /* Products */ = {
-			isa = PBXGroup;
-			children = (
-				146834041AC3E56700842450 /* libReact.a */,
-				3DAD3EA31DF850E9000B6D8A /* libReact.a */,
-				3DAD3EA51DF850E9000B6D8A /* libyoga.a */,
-				3DAD3EA71DF850E9000B6D8A /* libyoga.a */,
-				3DAD3EA91DF850E9000B6D8A /* libcxxreact.a */,
-				3DAD3EAB1DF850E9000B6D8A /* libcxxreact.a */,
-				2DF0FFDF2056DD460020B375 /* libjsinspector.a */,
-				2DF0FFE12056DD460020B375 /* libjsinspector-tvOS.a */,
-				2DF0FFE32056DD460020B375 /* libthird-party.a */,
-				2DF0FFE52056DD460020B375 /* libthird-party.a */,
-				2DF0FFE72056DD460020B375 /* libdouble-conversion.a */,
-				2DF0FFE92056DD460020B375 /* libdouble-conversion.a */,
-				BF08F43022429D0700FFB1DC /* libjsi.a */,
-				BF08F43222429D0700FFB1DC /* libjsiexecutor.a */,
-				BF08F43422429D0700FFB1DC /* libjsi-tvOS.a */,
-				BF08F43622429D0700FFB1DC /* libjsiexecutor-tvOS.a */,
-			);
-			name = Products;
-			sourceTree = "<group>";
-		};
 		2D16E6871FA4F8E400B85C8A /* Frameworks */ = {
 			isa = PBXGroup;
 			children = (
 				ED297162215061F000B7C4FE /* JavaScriptCore.framework */,
 				ED2971642150620600B7C4FE /* JavaScriptCore.framework */,
 				2D16E6891FA4F8E400B85C8A /* libReact.a */,
+				DDB6B5B7B6A0D1ECB68CF0DD /* libPods-apolloschurchapp.a */,
+				38B9762ACA099D28C28DBB31 /* libPods-apolloschurchapp-tvOS.a */,
+				4F64CCA987A0419EB9C02236 /* libPods-apolloschurchapp-tvOSTests.a */,
+				560CBCD50AE7D282715D134E /* libPods-apolloschurchappTests.a */,
 			);
 			name = Frameworks;
 			sourceTree = "<group>";
@@ -803,214 +201,36 @@
 			name = Resources;
 			sourceTree = "<group>";
 		};
-		5E91572E1DD0AC6500FF2AA8 /* Products */ = {
+		76EC01CF690166B3232686FE /* Pods */ = {
 			isa = PBXGroup;
 			children = (
-				5E9157331DD0AC6500FF2AA8 /* libRCTAnimation.a */,
-				5E9157351DD0AC6500FF2AA8 /* libRCTAnimation.a */,
+				54F271B8EB67A4997A2C7D96 /* Pods-apolloschurchapp.debug.xcconfig */,
+				1F8F5BC4745C8F22C695573D /* Pods-apolloschurchapp.release.xcconfig */,
+				745C835CA2F1E1EC2425152A /* Pods-apolloschurchapp-tvOS.debug.xcconfig */,
+				AE85030F59F256E90D5A4C2B /* Pods-apolloschurchapp-tvOS.release.xcconfig */,
+				D394E3064D75710E81C51EB0 /* Pods-apolloschurchapp-tvOSTests.debug.xcconfig */,
+				DA9745795726553C6FA9E7A8 /* Pods-apolloschurchapp-tvOSTests.release.xcconfig */,
+				AB44FC16DED929081698EDFD /* Pods-apolloschurchappTests.debug.xcconfig */,
+				E98AC9782C338F13632EF710 /* Pods-apolloschurchappTests.release.xcconfig */,
 			);
-			name = Products;
-			sourceTree = "<group>";
-		};
-		78C398B11ACF4ADC00677621 /* Products */ = {
-			isa = PBXGroup;
-			children = (
-				78C398B91ACF4ADC00677621 /* libRCTLinking.a */,
-				3DAD3E881DF850E9000B6D8A /* libRCTLinking-tvOS.a */,
-			);
-			name = Products;
+			path = Pods;
 			sourceTree = "<group>";
 		};
 		79CEBF9D223011FC00D8F685 /* Recovered References */ = {
 			isa = PBXGroup;
 			children = (
-				0BE434FF7E9549F392208DEF /* libRNAirplay.a */,
-				CF3175A44C4B4612AD79C04E /* libReactNativeConfig.a */,
-				9DA3750D49B0422F9A4B45BE /* libDBCustomTabs.a */,
-				0F155E84A5784CBE8D95A974 /* libRNDeviceInfo.a */,
-				605AEFB6B1BB4611BDCFE95C /* libRNImagePicker.a */,
-				9F0EC3F23A3F4FFBBBC6583A /* libBVLinearGradient.a */,
-				393EA40CFC2843BF9BB667B3 /* libMusicControl.a */,
 				0D480D95FC7F4569B8B934E3 /* libRCTOneSignal.a */,
-				349D96BF833B4B1C88D02412 /* libSafariViewManager.a */,
-				A44246D0E44E48C4B8335DBD /* libRNScreens.a */,
-				1398ECED9AE14FD19B92232D /* libSplashScreen.a */,
-				430F3786C56541B198E03A02 /* libRNSVG.a */,
-				C7FE26CDA2DC4CDBAB580A2F /* libRCTVideo.a */,
-				AE039A0F55BB4B989835F759 /* libRNCWebView.a */,
-				0174E356BAEC413288BF654B /* libRNFetchBlob.a */,
-				97222E2EB5E54C7FA6104218 /* libReactNativeConfig-tvOS.a */,
-				7A505BEDA0674A7F9DD875ED /* libRNDeviceInfo-tvOS.a */,
-				74625A1E54234FB7BE12070D /* libMusicControl-tvOS.a */,
-				67356E00D116467DA58DF3CC /* libRNSVG-tvOS.a */,
-				9862436C289A498D8B2E6201 /* libAirMaps.a */,
-				3AB4C6D7F52C428FA62777F1 /* libRNPassKit.a */,
 			);
 			name = "Recovered References";
 			sourceTree = "<group>";
 		};
-		79CEBFC5223011FD00D8F685 /* Products */ = {
-			isa = PBXGroup;
-			children = (
-				79CEC005223011FE00D8F685 /* libSplashScreen.a */,
-			);
-			name = Products;
-			sourceTree = "<group>";
-		};
-		79CEBFC7223011FD00D8F685 /* Products */ = {
-			isa = PBXGroup;
-			children = (
-				79CEBFF6223011FE00D8F685 /* libRNCWebView.a */,
-			);
-			name = Products;
-			sourceTree = "<group>";
-		};
-		79CEBFC9223011FD00D8F685 /* Products */ = {
-			isa = PBXGroup;
-			children = (
-				79CEBFFA223011FE00D8F685 /* libRNDeviceInfo.a */,
-				79CEBFFC223011FE00D8F685 /* libRNDeviceInfo-tvOS.a */,
-			);
-			name = Products;
-			sourceTree = "<group>";
-		};
-		79CEBFCB223011FD00D8F685 /* Products */ = {
-			isa = PBXGroup;
-			children = (
-				79CEBFE2223011FE00D8F685 /* libMusicControl.a */,
-				79CEBFE4223011FE00D8F685 /* libMusicControl-tvOS.a */,
-			);
-			name = Products;
-			sourceTree = "<group>";
-		};
-		79CEBFCD223011FE00D8F685 /* Products */ = {
-			isa = PBXGroup;
-			children = (
-				79CEBFF3223011FE00D8F685 /* libRNAirplay.a */,
-			);
-			name = Products;
-			sourceTree = "<group>";
-		};
-		79CEBFCF223011FE00D8F685 /* Products */ = {
-			isa = PBXGroup;
-			children = (
-				79CEBFEB223011FE00D8F685 /* libReactNativeConfig.a */,
-				79CEBFED223011FE00D8F685 /* libReactNativeConfig-tvOS.a */,
-			);
-			name = Products;
-			sourceTree = "<group>";
-		};
-		79CEBFD3223011FE00D8F685 /* Products */ = {
-			isa = PBXGroup;
-			children = (
-				79CEBFFF223011FE00D8F685 /* libRNImagePicker.a */,
-			);
-			name = Products;
-			sourceTree = "<group>";
-		};
-		79CEBFD5223011FE00D8F685 /* Products */ = {
-			isa = PBXGroup;
-			children = (
-				79CEBFDC223011FE00D8F685 /* libBVLinearGradient.a */,
-				79CEBFDE223011FE00D8F685 /* libBVLinearGradient.a */,
-			);
-			name = Products;
-			sourceTree = "<group>";
-		};
-		79CEBFD7223011FE00D8F685 /* Products */ = {
-			isa = PBXGroup;
-			children = (
-				79CEBFE7223011FE00D8F685 /* libRCTOneSignal.a */,
-			);
-			name = Products;
-			sourceTree = "<group>";
-		};
-		79CEC006223011FE00D8F685 /* Products */ = {
-			isa = PBXGroup;
-			children = (
-				79CEC00A223011FE00D8F685 /* libSafariViewManager.a */,
-			);
-			name = Products;
-			sourceTree = "<group>";
-		};
-		79CEC00B223011FE00D8F685 /* Products */ = {
-			isa = PBXGroup;
-			children = (
-				79CEC00F223011FE00D8F685 /* libRNScreens.a */,
-			);
-			name = Products;
-			sourceTree = "<group>";
-		};
-		79CEC010223011FE00D8F685 /* Products */ = {
-			isa = PBXGroup;
-			children = (
-				79CEC015223011FE00D8F685 /* libRNSVG.a */,
-				79CEC017223011FE00D8F685 /* libRNSVG-tvOS.a */,
-			);
-			name = Products;
-			sourceTree = "<group>";
-		};
-		79CEC018223011FE00D8F685 /* Products */ = {
-			isa = PBXGroup;
-			children = (
-				79CEC01D223011FE00D8F685 /* libRCTVideo.a */,
-				79CEC01F223011FE00D8F685 /* libRCTVideo.a */,
-			);
-			name = Products;
-			sourceTree = "<group>";
-		};
-		79CEC020223011FF00D8F685 /* Products */ = {
-			isa = PBXGroup;
-			children = (
-				79CEC024223011FF00D8F685 /* libRNFetchBlob.a */,
-			);
-			name = Products;
-			sourceTree = "<group>";
-		};
 		832341AE1AAA6A7D00B99B32 /* Libraries */ = {
 			isa = PBXGroup;
 			children = (
-				5E91572D1DD0AC6500FF2AA8 /* RCTAnimation.xcodeproj */,
-				146833FF1AC3E56700842450 /* React.xcodeproj */,
-				00C302A71ABCB8CE00DB3ED1 /* RCTActionSheet.xcodeproj */,
-				ADBDB91F1DFEBF0600ED6528 /* RCTBlob.xcodeproj */,
-				00C302B51ABCB90400DB3ED1 /* RCTGeolocation.xcodeproj */,
-				00C302BB1ABCB91800DB3ED1 /* RCTImage.xcodeproj */,
-				78C398B01ACF4ADC00677621 /* RCTLinking.xcodeproj */,
-				00C302D31ABCB9D200DB3ED1 /* RCTNetwork.xcodeproj */,
-				139105B61AF99BAD00B5F7CC /* RCTSettings.xcodeproj */,
-				832341B01AAA6A8300B99B32 /* RCTText.xcodeproj */,
-				00C302DF1ABCB9EE00DB3ED1 /* RCTVibration.xcodeproj */,
-				139FDEE61B06529A00C62182 /* RCTWebSocket.xcodeproj */,
-				3923D6EFF26D4A53B8BDF8C6 /* RNAirplay.xcodeproj */,
-				63998175DB3B4506ACF27B92 /* ReactNativeConfig.xcodeproj */,
-				39E16D6487A34F4D9B8C6EC1 /* RNDeviceInfo.xcodeproj */,
-				629FCAAD128E41B4BAE2BCF4 /* RNImagePicker.xcodeproj */,
-				43F1D28CACD04757A0FB29A6 /* BVLinearGradient.xcodeproj */,
-				BD872E89C275480496010898 /* MusicControl.xcodeproj */,
-				34667F4711264343B035ACD0 /* RCTOneSignal.xcodeproj */,
-				F4FDE4F3C6704DA2A3E04D18 /* SafariViewManager.xcodeproj */,
-				00F25A7E17B94370985B32E7 /* RNScreens.xcodeproj */,
-				0C974B3AFB5446819A990A78 /* SplashScreen.xcodeproj */,
-				2130E622CDAD43DF896EFF80 /* RNSVG.xcodeproj */,
-				F617FE53F3334D93B2EEAA64 /* RCTVideo.xcodeproj */,
-				4ED51CB73778472686A7279B /* RNCWebView.xcodeproj */,
-				10B0392307184C498573F1A2 /* RNFetchBlob.xcodeproj */,
-				1C0ED1C4FB474DC8A829950D /* AirMaps.xcodeproj */,
-				D3BA7667091546469A730845 /* RNPassKit.xcodeproj */,
 			);
 			name = Libraries;
 			sourceTree = "<group>";
 		};
-		832341B11AAA6A8300B99B32 /* Products */ = {
-			isa = PBXGroup;
-			children = (
-				832341B51AAA6A8300B99B32 /* libRCTText.a */,
-				3DAD3E941DF850E9000B6D8A /* libRCTText-tvOS.a */,
-			);
-			name = Products;
-			sourceTree = "<group>";
-		};
 		83CBB9F61A601CBA00E9B192 = {
 			isa = PBXGroup;
 			children = (
@@ -1021,6 +241,7 @@
 				2D16E6871FA4F8E400B85C8A /* Frameworks */,
 				58D6A3E05A234CD89DC0BCE1 /* Resources */,
 				79CEBF9D223011FC00D8F685 /* Recovered References */,
+				76EC01CF690166B3232686FE /* Pods */,
 			);
 			indentWidth = 2;
 			sourceTree = "<group>";
@@ -1038,31 +259,6 @@
 			name = Products;
 			sourceTree = "<group>";
 		};
-		ADBDB9201DFEBF0600ED6528 /* Products */ = {
-			isa = PBXGroup;
-			children = (
-				ADBDB9271DFEBF0700ED6528 /* libRCTBlob.a */,
-				2D16E6721FA4F8DC00B85C8A /* libRCTBlob-tvOS.a */,
-			);
-			name = Products;
-			sourceTree = "<group>";
-		};
-		BF08F44622429D0700FFB1DC /* Products */ = {
-			isa = PBXGroup;
-			children = (
-				BF08F44A22429D0700FFB1DC /* libAirMaps.a */,
-			);
-			name = Products;
-			sourceTree = "<group>";
-		};
-		BF08F5152242B97900FFB1DC /* Products */ = {
-			isa = PBXGroup;
-			children = (
-				BF08F5192242B97A00FFB1DC /* libRNPassKit.a */,
-			);
-			name = Products;
-			sourceTree = "<group>";
-		};
 /* End PBXGroup section */
 
 /* Begin PBXNativeTarget section */
@@ -1070,6 +266,7 @@
 			isa = PBXNativeTarget;
 			buildConfigurationList = 00E357021AD99517003FC87E /* Build configuration list for PBXNativeTarget "apolloschurchappTests" */;
 			buildPhases = (
+				2C62ED438C51D0F43EC7017B /* [CP] Check Pods Manifest.lock */,
 				00E356EA1AD99517003FC87E /* Sources */,
 				00E356EB1AD99517003FC87E /* Frameworks */,
 				00E356EC1AD99517003FC87E /* Resources */,
@@ -1088,6 +285,7 @@
 			isa = PBXNativeTarget;
 			buildConfigurationList = 13B07F931A680F5B00A75B9A /* Build configuration list for PBXNativeTarget "apolloschurchapp" */;
 			buildPhases = (
+				DEEF24CE4F76789E5E8C369D /* [CP] Check Pods Manifest.lock */,
 				13B07F871A680F5B00A75B9A /* Sources */,
 				13B07F8C1A680F5B00A75B9A /* Frameworks */,
 				13B07F8E1A680F5B00A75B9A /* Resources */,
@@ -1106,6 +304,7 @@
 			isa = PBXNativeTarget;
 			buildConfigurationList = 2D02E4BA1E0B4A5E006451C7 /* Build configuration list for PBXNativeTarget "apolloschurchapp-tvOS" */;
 			buildPhases = (
+				9C20354F160AAF86C8281F23 /* [CP] Check Pods Manifest.lock */,
 				2D02E4771E0B4A5D006451C7 /* Sources */,
 				2D02E4781E0B4A5D006451C7 /* Frameworks */,
 				2D02E4791E0B4A5D006451C7 /* Resources */,
@@ -1124,6 +323,7 @@
 			isa = PBXNativeTarget;
 			buildConfigurationList = 2D02E4BB1E0B4A5E006451C7 /* Build configuration list for PBXNativeTarget "apolloschurchapp-tvOSTests" */;
 			buildPhases = (
+				A85CD736CDC3356677735901 /* [CP] Check Pods Manifest.lock */,
 				2D02E48C1E0B4A5D006451C7 /* Sources */,
 				2D02E48D1E0B4A5D006451C7 /* Frameworks */,
 				2D02E48E1E0B4A5D006451C7 /* Resources */,
@@ -1178,120 +378,6 @@
 			mainGroup = 83CBB9F61A601CBA00E9B192;
 			productRefGroup = 83CBBA001A601CBA00E9B192 /* Products */;
 			projectDirPath = "";
-			projectReferences = (
-				{
-					ProductGroup = BF08F44622429D0700FFB1DC /* Products */;
-					ProjectRef = 1C0ED1C4FB474DC8A829950D /* AirMaps.xcodeproj */;
-				},
-				{
-					ProductGroup = 79CEBFD5223011FE00D8F685 /* Products */;
-					ProjectRef = 43F1D28CACD04757A0FB29A6 /* BVLinearGradient.xcodeproj */;
-				},
-				{
-					ProductGroup = 79CEBFCB223011FD00D8F685 /* Products */;
-					ProjectRef = BD872E89C275480496010898 /* MusicControl.xcodeproj */;
-				},
-				{
-					ProductGroup = 00C302A81ABCB8CE00DB3ED1 /* Products */;
-					ProjectRef = 00C302A71ABCB8CE00DB3ED1 /* RCTActionSheet.xcodeproj */;
-				},
-				{
-					ProductGroup = 5E91572E1DD0AC6500FF2AA8 /* Products */;
-					ProjectRef = 5E91572D1DD0AC6500FF2AA8 /* RCTAnimation.xcodeproj */;
-				},
-				{
-					ProductGroup = ADBDB9201DFEBF0600ED6528 /* Products */;
-					ProjectRef = ADBDB91F1DFEBF0600ED6528 /* RCTBlob.xcodeproj */;
-				},
-				{
-					ProductGroup = 00C302B61ABCB90400DB3ED1 /* Products */;
-					ProjectRef = 00C302B51ABCB90400DB3ED1 /* RCTGeolocation.xcodeproj */;
-				},
-				{
-					ProductGroup = 00C302BC1ABCB91800DB3ED1 /* Products */;
-					ProjectRef = 00C302BB1ABCB91800DB3ED1 /* RCTImage.xcodeproj */;
-				},
-				{
-					ProductGroup = 78C398B11ACF4ADC00677621 /* Products */;
-					ProjectRef = 78C398B01ACF4ADC00677621 /* RCTLinking.xcodeproj */;
-				},
-				{
-					ProductGroup = 00C302D41ABCB9D200DB3ED1 /* Products */;
-					ProjectRef = 00C302D31ABCB9D200DB3ED1 /* RCTNetwork.xcodeproj */;
-				},
-				{
-					ProductGroup = 79CEBFD7223011FE00D8F685 /* Products */;
-					ProjectRef = 34667F4711264343B035ACD0 /* RCTOneSignal.xcodeproj */;
-				},
-				{
-					ProductGroup = 139105B71AF99BAD00B5F7CC /* Products */;
-					ProjectRef = 139105B61AF99BAD00B5F7CC /* RCTSettings.xcodeproj */;
-				},
-				{
-					ProductGroup = 832341B11AAA6A8300B99B32 /* Products */;
-					ProjectRef = 832341B01AAA6A8300B99B32 /* RCTText.xcodeproj */;
-				},
-				{
-					ProductGroup = 00C302E01ABCB9EE00DB3ED1 /* Products */;
-					ProjectRef = 00C302DF1ABCB9EE00DB3ED1 /* RCTVibration.xcodeproj */;
-				},
-				{
-					ProductGroup = 79CEC018223011FE00D8F685 /* Products */;
-					ProjectRef = F617FE53F3334D93B2EEAA64 /* RCTVideo.xcodeproj */;
-				},
-				{
-					ProductGroup = 139FDEE71B06529A00C62182 /* Products */;
-					ProjectRef = 139FDEE61B06529A00C62182 /* RCTWebSocket.xcodeproj */;
-				},
-				{
-					ProductGroup = 146834001AC3E56700842450 /* Products */;
-					ProjectRef = 146833FF1AC3E56700842450 /* React.xcodeproj */;
-				},
-				{
-					ProductGroup = 79CEBFCF223011FE00D8F685 /* Products */;
-					ProjectRef = 63998175DB3B4506ACF27B92 /* ReactNativeConfig.xcodeproj */;
-				},
-				{
-					ProductGroup = 79CEBFCD223011FE00D8F685 /* Products */;
-					ProjectRef = 3923D6EFF26D4A53B8BDF8C6 /* RNAirplay.xcodeproj */;
-				},
-				{
-					ProductGroup = 79CEBFC7223011FD00D8F685 /* Products */;
-					ProjectRef = 4ED51CB73778472686A7279B /* RNCWebView.xcodeproj */;
-				},
-				{
-					ProductGroup = 79CEBFC9223011FD00D8F685 /* Products */;
-					ProjectRef = 39E16D6487A34F4D9B8C6EC1 /* RNDeviceInfo.xcodeproj */;
-				},
-				{
-					ProductGroup = 79CEC020223011FF00D8F685 /* Products */;
-					ProjectRef = 10B0392307184C498573F1A2 /* RNFetchBlob.xcodeproj */;
-				},
-				{
-					ProductGroup = 79CEBFD3223011FE00D8F685 /* Products */;
-					ProjectRef = 629FCAAD128E41B4BAE2BCF4 /* RNImagePicker.xcodeproj */;
-				},
-				{
-					ProductGroup = BF08F5152242B97900FFB1DC /* Products */;
-					ProjectRef = D3BA7667091546469A730845 /* RNPassKit.xcodeproj */;
-				},
-				{
-					ProductGroup = 79CEC00B223011FE00D8F685 /* Products */;
-					ProjectRef = 00F25A7E17B94370985B32E7 /* RNScreens.xcodeproj */;
-				},
-				{
-					ProductGroup = 79CEC010223011FE00D8F685 /* Products */;
-					ProjectRef = 2130E622CDAD43DF896EFF80 /* RNSVG.xcodeproj */;
-				},
-				{
-					ProductGroup = 79CEC006223011FE00D8F685 /* Products */;
-					ProjectRef = F4FDE4F3C6704DA2A3E04D18 /* SafariViewManager.xcodeproj */;
-				},
-				{
-					ProductGroup = 79CEBFC5223011FD00D8F685 /* Products */;
-					ProjectRef = 0C974B3AFB5446819A990A78 /* SplashScreen.xcodeproj */;
-				},
-			);
 			projectRoot = "";
 			targets = (
 				13B07F861A680F5B00A75B9A /* apolloschurchapp */,
@@ -1302,422 +388,6 @@
 		};
 /* End PBXProject section */
 
-/* Begin PBXReferenceProxy section */
-		00C302AC1ABCB8CE00DB3ED1 /* libRCTActionSheet.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libRCTActionSheet.a;
-			remoteRef = 00C302AB1ABCB8CE00DB3ED1 /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		00C302BA1ABCB90400DB3ED1 /* libRCTGeolocation.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libRCTGeolocation.a;
-			remoteRef = 00C302B91ABCB90400DB3ED1 /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		00C302C01ABCB91800DB3ED1 /* libRCTImage.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libRCTImage.a;
-			remoteRef = 00C302BF1ABCB91800DB3ED1 /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		00C302DC1ABCB9D200DB3ED1 /* libRCTNetwork.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libRCTNetwork.a;
-			remoteRef = 00C302DB1ABCB9D200DB3ED1 /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		00C302E41ABCB9EE00DB3ED1 /* libRCTVibration.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libRCTVibration.a;
-			remoteRef = 00C302E31ABCB9EE00DB3ED1 /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		139105C11AF99BAD00B5F7CC /* libRCTSettings.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libRCTSettings.a;
-			remoteRef = 139105C01AF99BAD00B5F7CC /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		139FDEF41B06529B00C62182 /* libRCTWebSocket.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libRCTWebSocket.a;
-			remoteRef = 139FDEF31B06529B00C62182 /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		146834041AC3E56700842450 /* libReact.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libReact.a;
-			remoteRef = 146834031AC3E56700842450 /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		2D16E6721FA4F8DC00B85C8A /* libRCTBlob-tvOS.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = "libRCTBlob-tvOS.a";
-			remoteRef = 2D16E6711FA4F8DC00B85C8A /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		2D16E6841FA4F8DC00B85C8A /* libfishhook.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libfishhook.a;
-			remoteRef = 2D16E6831FA4F8DC00B85C8A /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		2D16E6861FA4F8DC00B85C8A /* libfishhook-tvOS.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = "libfishhook-tvOS.a";
-			remoteRef = 2D16E6851FA4F8DC00B85C8A /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		2DF0FFDF2056DD460020B375 /* libjsinspector.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libjsinspector.a;
-			remoteRef = 2DF0FFDE2056DD460020B375 /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		2DF0FFE12056DD460020B375 /* libjsinspector-tvOS.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = "libjsinspector-tvOS.a";
-			remoteRef = 2DF0FFE02056DD460020B375 /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		2DF0FFE32056DD460020B375 /* libthird-party.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = "libthird-party.a";
-			remoteRef = 2DF0FFE22056DD460020B375 /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		2DF0FFE52056DD460020B375 /* libthird-party.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = "libthird-party.a";
-			remoteRef = 2DF0FFE42056DD460020B375 /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		2DF0FFE72056DD460020B375 /* libdouble-conversion.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = "libdouble-conversion.a";
-			remoteRef = 2DF0FFE62056DD460020B375 /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		2DF0FFE92056DD460020B375 /* libdouble-conversion.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = "libdouble-conversion.a";
-			remoteRef = 2DF0FFE82056DD460020B375 /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		3DAD3E841DF850E9000B6D8A /* libRCTImage-tvOS.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = "libRCTImage-tvOS.a";
-			remoteRef = 3DAD3E831DF850E9000B6D8A /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		3DAD3E881DF850E9000B6D8A /* libRCTLinking-tvOS.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = "libRCTLinking-tvOS.a";
-			remoteRef = 3DAD3E871DF850E9000B6D8A /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		3DAD3E8C1DF850E9000B6D8A /* libRCTNetwork-tvOS.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = "libRCTNetwork-tvOS.a";
-			remoteRef = 3DAD3E8B1DF850E9000B6D8A /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		3DAD3E901DF850E9000B6D8A /* libRCTSettings-tvOS.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = "libRCTSettings-tvOS.a";
-			remoteRef = 3DAD3E8F1DF850E9000B6D8A /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		3DAD3E941DF850E9000B6D8A /* libRCTText-tvOS.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = "libRCTText-tvOS.a";
-			remoteRef = 3DAD3E931DF850E9000B6D8A /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		3DAD3E991DF850E9000B6D8A /* libRCTWebSocket-tvOS.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = "libRCTWebSocket-tvOS.a";
-			remoteRef = 3DAD3E981DF850E9000B6D8A /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		3DAD3EA31DF850E9000B6D8A /* libReact.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libReact.a;
-			remoteRef = 3DAD3EA21DF850E9000B6D8A /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		3DAD3EA51DF850E9000B6D8A /* libyoga.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libyoga.a;
-			remoteRef = 3DAD3EA41DF850E9000B6D8A /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		3DAD3EA71DF850E9000B6D8A /* libyoga.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libyoga.a;
-			remoteRef = 3DAD3EA61DF850E9000B6D8A /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		3DAD3EA91DF850E9000B6D8A /* libcxxreact.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libcxxreact.a;
-			remoteRef = 3DAD3EA81DF850E9000B6D8A /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		3DAD3EAB1DF850E9000B6D8A /* libcxxreact.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libcxxreact.a;
-			remoteRef = 3DAD3EAA1DF850E9000B6D8A /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		5E9157331DD0AC6500FF2AA8 /* libRCTAnimation.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libRCTAnimation.a;
-			remoteRef = 5E9157321DD0AC6500FF2AA8 /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		5E9157351DD0AC6500FF2AA8 /* libRCTAnimation.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libRCTAnimation.a;
-			remoteRef = 5E9157341DD0AC6500FF2AA8 /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		78C398B91ACF4ADC00677621 /* libRCTLinking.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libRCTLinking.a;
-			remoteRef = 78C398B81ACF4ADC00677621 /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		79CEBFDC223011FE00D8F685 /* libBVLinearGradient.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libBVLinearGradient.a;
-			remoteRef = 79CEBFDB223011FE00D8F685 /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		79CEBFDE223011FE00D8F685 /* libBVLinearGradient.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libBVLinearGradient.a;
-			remoteRef = 79CEBFDD223011FE00D8F685 /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		79CEBFE2223011FE00D8F685 /* libMusicControl.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libMusicControl.a;
-			remoteRef = 79CEBFE1223011FE00D8F685 /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		79CEBFE4223011FE00D8F685 /* libMusicControl-tvOS.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = "libMusicControl-tvOS.a";
-			remoteRef = 79CEBFE3223011FE00D8F685 /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		79CEBFE7223011FE00D8F685 /* libRCTOneSignal.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libRCTOneSignal.a;
-			remoteRef = 79CEBFE6223011FE00D8F685 /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		79CEBFEB223011FE00D8F685 /* libReactNativeConfig.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libReactNativeConfig.a;
-			remoteRef = 79CEBFEA223011FE00D8F685 /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		79CEBFED223011FE00D8F685 /* libReactNativeConfig-tvOS.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = "libReactNativeConfig-tvOS.a";
-			remoteRef = 79CEBFEC223011FE00D8F685 /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		79CEBFF3223011FE00D8F685 /* libRNAirplay.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libRNAirplay.a;
-			remoteRef = 79CEBFF2223011FE00D8F685 /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		79CEBFF6223011FE00D8F685 /* libRNCWebView.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libRNCWebView.a;
-			remoteRef = 79CEBFF5223011FE00D8F685 /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		79CEBFFA223011FE00D8F685 /* libRNDeviceInfo.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libRNDeviceInfo.a;
-			remoteRef = 79CEBFF9223011FE00D8F685 /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		79CEBFFC223011FE00D8F685 /* libRNDeviceInfo-tvOS.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = "libRNDeviceInfo-tvOS.a";
-			remoteRef = 79CEBFFB223011FE00D8F685 /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		79CEBFFF223011FE00D8F685 /* libRNImagePicker.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libRNImagePicker.a;
-			remoteRef = 79CEBFFE223011FE00D8F685 /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		79CEC005223011FE00D8F685 /* libSplashScreen.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libSplashScreen.a;
-			remoteRef = 79CEC004223011FE00D8F685 /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		79CEC00A223011FE00D8F685 /* libSafariViewManager.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libSafariViewManager.a;
-			remoteRef = 79CEC009223011FE00D8F685 /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		79CEC00F223011FE00D8F685 /* libRNScreens.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libRNScreens.a;
-			remoteRef = 79CEC00E223011FE00D8F685 /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		79CEC015223011FE00D8F685 /* libRNSVG.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libRNSVG.a;
-			remoteRef = 79CEC014223011FE00D8F685 /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		79CEC017223011FE00D8F685 /* libRNSVG-tvOS.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = "libRNSVG-tvOS.a";
-			remoteRef = 79CEC016223011FE00D8F685 /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		79CEC01D223011FE00D8F685 /* libRCTVideo.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libRCTVideo.a;
-			remoteRef = 79CEC01C223011FE00D8F685 /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		79CEC01F223011FE00D8F685 /* libRCTVideo.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libRCTVideo.a;
-			remoteRef = 79CEC01E223011FE00D8F685 /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		79CEC024223011FF00D8F685 /* libRNFetchBlob.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libRNFetchBlob.a;
-			remoteRef = 79CEC023223011FF00D8F685 /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		832341B51AAA6A8300B99B32 /* libRCTText.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libRCTText.a;
-			remoteRef = 832341B41AAA6A8300B99B32 /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		ADBDB9271DFEBF0700ED6528 /* libRCTBlob.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libRCTBlob.a;
-			remoteRef = ADBDB9261DFEBF0700ED6528 /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		BF08F43022429D0700FFB1DC /* libjsi.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libjsi.a;
-			remoteRef = BF08F42F22429D0700FFB1DC /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		BF08F43222429D0700FFB1DC /* libjsiexecutor.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libjsiexecutor.a;
-			remoteRef = BF08F43122429D0700FFB1DC /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		BF08F43422429D0700FFB1DC /* libjsi-tvOS.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = "libjsi-tvOS.a";
-			remoteRef = BF08F43322429D0700FFB1DC /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		BF08F43622429D0700FFB1DC /* libjsiexecutor-tvOS.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = "libjsiexecutor-tvOS.a";
-			remoteRef = BF08F43522429D0700FFB1DC /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		BF08F44A22429D0700FFB1DC /* libAirMaps.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libAirMaps.a;
-			remoteRef = BF08F44922429D0700FFB1DC /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		BF08F5192242B97A00FFB1DC /* libRNPassKit.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libRNPassKit.a;
-			remoteRef = BF08F5182242B97A00FFB1DC /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-/* End PBXReferenceProxy section */
-
 /* Begin PBXResourcesBuildPhase section */
 		00E356EC1AD99517003FC87E /* Resources */ = {
 			isa = PBXResourcesBuildPhase;
@@ -1779,6 +449,28 @@
 			shellPath = /bin/sh;
 			shellScript = "export NODE_BINARY=node\n../node_modules/react-native/scripts/react-native-xcode.sh";
 		};
+		2C62ED438C51D0F43EC7017B /* [CP] Check Pods Manifest.lock */ = {
+			isa = PBXShellScriptBuildPhase;
+			buildActionMask = 2147483647;
+			files = (
+			);
+			inputFileListPaths = (
+			);
+			inputPaths = (
+				"${PODS_PODFILE_DIR_PATH}/Podfile.lock",
+				"${PODS_ROOT}/Manifest.lock",
+			);
+			name = "[CP] Check Pods Manifest.lock";
+			outputFileListPaths = (
+			);
+			outputPaths = (
+				"$(DERIVED_FILE_DIR)/Pods-apolloschurchappTests-checkManifestLockResult.txt",
+			);
+			runOnlyForDeploymentPostprocessing = 0;
+			shellPath = /bin/sh;
+			shellScript = "diff \"${PODS_PODFILE_DIR_PATH}/Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null\nif [ $? != 0 ] ; then\n    # print error to STDERR\n    echo \"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\" >&2\n    exit 1\nfi\n# This output is used by Xcode 'outputs' to avoid re-running this script phase.\necho \"SUCCESS\" > \"${SCRIPT_OUTPUT_FILE_0}\"\n";
+			showEnvVarsInLog = 0;
+		};
 		2D02E4CB1E0B4B27006451C7 /* Bundle React Native Code And Images */ = {
 			isa = PBXShellScriptBuildPhase;
 			buildActionMask = 2147483647;
@@ -1793,6 +485,72 @@
 			shellPath = /bin/sh;
 			shellScript = "export NODE_BINARY=node\n../node_modules/react-native/scripts/react-native-xcode.sh";
 		};
+		9C20354F160AAF86C8281F23 /* [CP] Check Pods Manifest.lock */ = {
+			isa = PBXShellScriptBuildPhase;
+			buildActionMask = 2147483647;
+			files = (
+			);
+			inputFileListPaths = (
+			);
+			inputPaths = (
+				"${PODS_PODFILE_DIR_PATH}/Podfile.lock",
+				"${PODS_ROOT}/Manifest.lock",
+			);
+			name = "[CP] Check Pods Manifest.lock";
+			outputFileListPaths = (
+			);
+			outputPaths = (
+				"$(DERIVED_FILE_DIR)/Pods-apolloschurchapp-tvOS-checkManifestLockResult.txt",
+			);
+			runOnlyForDeploymentPostprocessing = 0;
+			shellPath = /bin/sh;
+			shellScript = "diff \"${PODS_PODFILE_DIR_PATH}/Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null\nif [ $? != 0 ] ; then\n    # print error to STDERR\n    echo \"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\" >&2\n    exit 1\nfi\n# This output is used by Xcode 'outputs' to avoid re-running this script phase.\necho \"SUCCESS\" > \"${SCRIPT_OUTPUT_FILE_0}\"\n";
+			showEnvVarsInLog = 0;
+		};
+		A85CD736CDC3356677735901 /* [CP] Check Pods Manifest.lock */ = {
+			isa = PBXShellScriptBuildPhase;
+			buildActionMask = 2147483647;
+			files = (
+			);
+			inputFileListPaths = (
+			);
+			inputPaths = (
+				"${PODS_PODFILE_DIR_PATH}/Podfile.lock",
+				"${PODS_ROOT}/Manifest.lock",
+			);
+			name = "[CP] Check Pods Manifest.lock";
+			outputFileListPaths = (
+			);
+			outputPaths = (
+				"$(DERIVED_FILE_DIR)/Pods-apolloschurchapp-tvOSTests-checkManifestLockResult.txt",
+			);
+			runOnlyForDeploymentPostprocessing = 0;
+			shellPath = /bin/sh;
+			shellScript = "diff \"${PODS_PODFILE_DIR_PATH}/Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null\nif [ $? != 0 ] ; then\n    # print error to STDERR\n    echo \"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\" >&2\n    exit 1\nfi\n# This output is used by Xcode 'outputs' to avoid re-running this script phase.\necho \"SUCCESS\" > \"${SCRIPT_OUTPUT_FILE_0}\"\n";
+			showEnvVarsInLog = 0;
+		};
+		DEEF24CE4F76789E5E8C369D /* [CP] Check Pods Manifest.lock */ = {
+			isa = PBXShellScriptBuildPhase;
+			buildActionMask = 2147483647;
+			files = (
+			);
+			inputFileListPaths = (
+			);
+			inputPaths = (
+				"${PODS_PODFILE_DIR_PATH}/Podfile.lock",
+				"${PODS_ROOT}/Manifest.lock",
+			);
+			name = "[CP] Check Pods Manifest.lock";
+			outputFileListPaths = (
+			);
+			outputPaths = (
+				"$(DERIVED_FILE_DIR)/Pods-apolloschurchapp-checkManifestLockResult.txt",
+			);
+			runOnlyForDeploymentPostprocessing = 0;
+			shellPath = /bin/sh;
+			shellScript = "diff \"${PODS_PODFILE_DIR_PATH}/Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null\nif [ $? != 0 ] ; then\n    # print error to STDERR\n    echo \"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\" >&2\n    exit 1\nfi\n# This output is used by Xcode 'outputs' to avoid re-running this script phase.\necho \"SUCCESS\" > \"${SCRIPT_OUTPUT_FILE_0}\"\n";
+			showEnvVarsInLog = 0;
+		};
 /* End PBXShellScriptBuildPhase section */
 
 /* Begin PBXSourcesBuildPhase section */
@@ -1860,6 +618,7 @@
 /* Begin XCBuildConfiguration section */
 		00E356F61AD99517003FC87E /* Debug */ = {
 			isa = XCBuildConfiguration;
+			baseConfigurationReference = AB44FC16DED929081698EDFD /* Pods-apolloschurchappTests.debug.xcconfig */;
 			buildSettings = {
 				BUNDLE_LOADER = "$(TEST_HOST)";
 				GCC_PREPROCESSOR_DEFINITIONS = (
@@ -1868,29 +627,12 @@
 				);
 				HEADER_SEARCH_PATHS = (
 					"$(inherited)",
-					"$(SRCROOT)/../node_modules/react-native-airplay-btn/ios",
-					"$(SRCROOT)/../node_modules/react-native-config/ios/ReactNativeConfig",
-					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
-					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
-					"$(SRCROOT)/../node_modules/react-native-linear-gradient/BVLinearGradient",
-					"$(SRCROOT)/../node_modules/react-native-music-control/ios",
-					"$(SRCROOT)/../node_modules/react-native-onesignal/ios/**",
-					"$(SRCROOT)/../node_modules/react-native-safari-view",
-					"$(SRCROOT)/../node_modules/react-native-screens/ios",
-					"$(SRCROOT)/../node_modules/react-native-splash-screen/ios",
-					"$(SRCROOT)/../node_modules/react-native-svg/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-video/ios",
-					"$(SRCROOT)/../node_modules/react-native-webview/ios",
-					"$(SRCROOT)/../node_modules/rn-fetch-blob/ios/**",
-					"$(SRCROOT)/../node_modules/react-native-maps/lib/ios/**",
-					"$(SRCROOT)/../node_modules/react-native-passkit-wallet/ios/RNPassKit",
 				);
 				INFOPLIST_FILE = apolloschurchappTests/Info.plist;
 				IPHONEOS_DEPLOYMENT_TARGET = 9.0;
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @loader_path/Frameworks";
-				LIBRARY_SEARCH_PATHS = (
-					"$(inherited)",
-				);
+				LIBRARY_SEARCH_PATHS = "$(inherited)";
 				OTHER_LDFLAGS = (
 					"-ObjC",
 					"-lc++",
@@ -1903,34 +645,18 @@
 		};
 		00E356F71AD99517003FC87E /* Release */ = {
 			isa = XCBuildConfiguration;
+			baseConfigurationReference = E98AC9782C338F13632EF710 /* Pods-apolloschurchappTests.release.xcconfig */;
 			buildSettings = {
 				BUNDLE_LOADER = "$(TEST_HOST)";
 				COPY_PHASE_STRIP = NO;
 				HEADER_SEARCH_PATHS = (
 					"$(inherited)",
-					"$(SRCROOT)/../node_modules/react-native-airplay-btn/ios",
-					"$(SRCROOT)/../node_modules/react-native-config/ios/ReactNativeConfig",
-					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
-					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
-					"$(SRCROOT)/../node_modules/react-native-linear-gradient/BVLinearGradient",
-					"$(SRCROOT)/../node_modules/react-native-music-control/ios",
-					"$(SRCROOT)/../node_modules/react-native-onesignal/ios/**",
-					"$(SRCROOT)/../node_modules/react-native-safari-view",
-					"$(SRCROOT)/../node_modules/react-native-screens/ios",
-					"$(SRCROOT)/../node_modules/react-native-splash-screen/ios",
-					"$(SRCROOT)/../node_modules/react-native-svg/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-video/ios",
-					"$(SRCROOT)/../node_modules/react-native-webview/ios",
-					"$(SRCROOT)/../node_modules/rn-fetch-blob/ios/**",
-					"$(SRCROOT)/../node_modules/react-native-maps/lib/ios/**",
-					"$(SRCROOT)/../node_modules/react-native-passkit-wallet/ios/RNPassKit",
 				);
 				INFOPLIST_FILE = apolloschurchappTests/Info.plist;
 				IPHONEOS_DEPLOYMENT_TARGET = 9.0;
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @loader_path/Frameworks";
-				LIBRARY_SEARCH_PATHS = (
-					"$(inherited)",
-				);
+				LIBRARY_SEARCH_PATHS = "$(inherited)";
 				OTHER_LDFLAGS = (
 					"-ObjC",
 					"-lc++",
@@ -1943,29 +669,15 @@
 		};
 		13B07F941A680F5B00A75B9A /* Debug */ = {
 			isa = XCBuildConfiguration;
+			baseConfigurationReference = 54F271B8EB67A4997A2C7D96 /* Pods-apolloschurchapp.debug.xcconfig */;
 			buildSettings = {
 				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
-				CURRENT_PROJECT_VERSION = 7;
+				CURRENT_PROJECT_VERSION = 18;
 				DEAD_CODE_STRIPPING = NO;
 				DEVELOPMENT_TEAM = 7TM8C6252Z;
 				HEADER_SEARCH_PATHS = (
 					"$(inherited)",
-					"$(SRCROOT)/../node_modules/react-native-airplay-btn/ios",
-					"$(SRCROOT)/../node_modules/react-native-config/ios/ReactNativeConfig",
-					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
-					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
-					"$(SRCROOT)/../node_modules/react-native-linear-gradient/BVLinearGradient",
-					"$(SRCROOT)/../node_modules/react-native-music-control/ios",
-					"$(SRCROOT)/../node_modules/react-native-onesignal/ios/**",
-					"$(SRCROOT)/../node_modules/react-native-safari-view",
-					"$(SRCROOT)/../node_modules/react-native-screens/ios",
-					"$(SRCROOT)/../node_modules/react-native-splash-screen/ios",
-					"$(SRCROOT)/../node_modules/react-native-svg/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-video/ios",
-					"$(SRCROOT)/../node_modules/react-native-webview/ios",
-					"$(SRCROOT)/../node_modules/rn-fetch-blob/ios/**",
-					"$(SRCROOT)/../node_modules/react-native-maps/lib/ios/**",
-					"$(SRCROOT)/../node_modules/react-native-passkit-wallet/ios/RNPassKit",
 				);
 				INFOPLIST_FILE = apolloschurchapp/Info.plist;
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
@@ -1983,27 +695,13 @@
 		};
 		13B07F951A680F5B00A75B9A /* Release */ = {
 			isa = XCBuildConfiguration;
+			baseConfigurationReference = 1F8F5BC4745C8F22C695573D /* Pods-apolloschurchapp.release.xcconfig */;
 			buildSettings = {
 				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
-				CURRENT_PROJECT_VERSION = 7;
+				CURRENT_PROJECT_VERSION = 18;
 				HEADER_SEARCH_PATHS = (
 					"$(inherited)",
-					"$(SRCROOT)/../node_modules/react-native-airplay-btn/ios",
-					"$(SRCROOT)/../node_modules/react-native-config/ios/ReactNativeConfig",
-					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
-					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
-					"$(SRCROOT)/../node_modules/react-native-linear-gradient/BVLinearGradient",
-					"$(SRCROOT)/../node_modules/react-native-music-control/ios",
-					"$(SRCROOT)/../node_modules/react-native-onesignal/ios/**",
-					"$(SRCROOT)/../node_modules/react-native-safari-view",
-					"$(SRCROOT)/../node_modules/react-native-screens/ios",
-					"$(SRCROOT)/../node_modules/react-native-splash-screen/ios",
-					"$(SRCROOT)/../node_modules/react-native-svg/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-video/ios",
-					"$(SRCROOT)/../node_modules/react-native-webview/ios",
-					"$(SRCROOT)/../node_modules/rn-fetch-blob/ios/**",
-					"$(SRCROOT)/../node_modules/react-native-maps/lib/ios/**",
-					"$(SRCROOT)/../node_modules/react-native-passkit-wallet/ios/RNPassKit",
 				);
 				INFOPLIST_FILE = apolloschurchapp/Info.plist;
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
@@ -2021,6 +719,7 @@
 		};
 		2D02E4971E0B4A5E006451C7 /* Debug */ = {
 			isa = XCBuildConfiguration;
+			baseConfigurationReference = 745C835CA2F1E1EC2425152A /* Pods-apolloschurchapp-tvOS.debug.xcconfig */;
 			buildSettings = {
 				ASSETCATALOG_COMPILER_APPICON_NAME = "App Icon & Top Shelf Image";
 				ASSETCATALOG_COMPILER_LAUNCHIMAGE_NAME = LaunchImage;
@@ -2033,28 +732,11 @@
 				GCC_NO_COMMON_BLOCKS = YES;
 				HEADER_SEARCH_PATHS = (
 					"$(inherited)",
-					"$(SRCROOT)/../node_modules/react-native-airplay-btn/ios",
-					"$(SRCROOT)/../node_modules/react-native-config/ios/ReactNativeConfig",
-					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
-					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
-					"$(SRCROOT)/../node_modules/react-native-linear-gradient/BVLinearGradient",
-					"$(SRCROOT)/../node_modules/react-native-music-control/ios",
-					"$(SRCROOT)/../node_modules/react-native-onesignal/ios/**",
-					"$(SRCROOT)/../node_modules/react-native-safari-view",
-					"$(SRCROOT)/../node_modules/react-native-screens/ios",
-					"$(SRCROOT)/../node_modules/react-native-splash-screen/ios",
-					"$(SRCROOT)/../node_modules/react-native-svg/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-video/ios",
-					"$(SRCROOT)/../node_modules/react-native-webview/ios",
-					"$(SRCROOT)/../node_modules/rn-fetch-blob/ios/**",
-					"$(SRCROOT)/../node_modules/react-native-maps/lib/ios/**",
-					"$(SRCROOT)/../node_modules/react-native-passkit-wallet/ios/RNPassKit",
 				);
 				INFOPLIST_FILE = "apolloschurchapp-tvOS/Info.plist";
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
-				LIBRARY_SEARCH_PATHS = (
-					"$(inherited)",
-				);
+				LIBRARY_SEARCH_PATHS = "$(inherited)";
 				OTHER_LDFLAGS = (
 					"-ObjC",
 					"-lc++",
@@ -2069,6 +751,7 @@
 		};
 		2D02E4981E0B4A5E006451C7 /* Release */ = {
 			isa = XCBuildConfiguration;
+			baseConfigurationReference = AE85030F59F256E90D5A4C2B /* Pods-apolloschurchapp-tvOS.release.xcconfig */;
 			buildSettings = {
 				ASSETCATALOG_COMPILER_APPICON_NAME = "App Icon & Top Shelf Image";
 				ASSETCATALOG_COMPILER_LAUNCHIMAGE_NAME = LaunchImage;
@@ -2081,28 +764,11 @@
 				GCC_NO_COMMON_BLOCKS = YES;
 				HEADER_SEARCH_PATHS = (
 					"$(inherited)",
-					"$(SRCROOT)/../node_modules/react-native-airplay-btn/ios",
-					"$(SRCROOT)/../node_modules/react-native-config/ios/ReactNativeConfig",
-					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
-					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
-					"$(SRCROOT)/../node_modules/react-native-linear-gradient/BVLinearGradient",
-					"$(SRCROOT)/../node_modules/react-native-music-control/ios",
-					"$(SRCROOT)/../node_modules/react-native-onesignal/ios/**",
-					"$(SRCROOT)/../node_modules/react-native-safari-view",
-					"$(SRCROOT)/../node_modules/react-native-screens/ios",
-					"$(SRCROOT)/../node_modules/react-native-splash-screen/ios",
-					"$(SRCROOT)/../node_modules/react-native-svg/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-video/ios",
-					"$(SRCROOT)/../node_modules/react-native-webview/ios",
-					"$(SRCROOT)/../node_modules/rn-fetch-blob/ios/**",
-					"$(SRCROOT)/../node_modules/react-native-maps/lib/ios/**",
-					"$(SRCROOT)/../node_modules/react-native-passkit-wallet/ios/RNPassKit",
 				);
 				INFOPLIST_FILE = "apolloschurchapp-tvOS/Info.plist";
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
-				LIBRARY_SEARCH_PATHS = (
-					"$(inherited)",
-				);
+				LIBRARY_SEARCH_PATHS = "$(inherited)";
 				OTHER_LDFLAGS = (
 					"-ObjC",
 					"-lc++",
@@ -2117,6 +783,7 @@
 		};
 		2D02E4991E0B4A5E006451C7 /* Debug */ = {
 			isa = XCBuildConfiguration;
+			baseConfigurationReference = D394E3064D75710E81C51EB0 /* Pods-apolloschurchapp-tvOSTests.debug.xcconfig */;
 			buildSettings = {
 				BUNDLE_LOADER = "$(TEST_HOST)";
 				CLANG_ANALYZER_NONNULL = YES;
@@ -2128,28 +795,11 @@
 				GCC_NO_COMMON_BLOCKS = YES;
 				HEADER_SEARCH_PATHS = (
 					"$(inherited)",
-					"$(SRCROOT)/../node_modules/react-native-airplay-btn/ios",
-					"$(SRCROOT)/../node_modules/react-native-config/ios/ReactNativeConfig",
-					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
-					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
-					"$(SRCROOT)/../node_modules/react-native-linear-gradient/BVLinearGradient",
-					"$(SRCROOT)/../node_modules/react-native-music-control/ios",
-					"$(SRCROOT)/../node_modules/react-native-onesignal/ios/**",
-					"$(SRCROOT)/../node_modules/react-native-safari-view",
-					"$(SRCROOT)/../node_modules/react-native-screens/ios",
-					"$(SRCROOT)/../node_modules/react-native-splash-screen/ios",
-					"$(SRCROOT)/../node_modules/react-native-svg/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-video/ios",
-					"$(SRCROOT)/../node_modules/react-native-webview/ios",
-					"$(SRCROOT)/../node_modules/rn-fetch-blob/ios/**",
-					"$(SRCROOT)/../node_modules/react-native-maps/lib/ios/**",
-					"$(SRCROOT)/../node_modules/react-native-passkit-wallet/ios/RNPassKit",
 				);
 				INFOPLIST_FILE = "apolloschurchapp-tvOSTests/Info.plist";
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @loader_path/Frameworks";
-				LIBRARY_SEARCH_PATHS = (
-					"$(inherited)",
-				);
+				LIBRARY_SEARCH_PATHS = "$(inherited)";
 				OTHER_LDFLAGS = (
 					"-ObjC",
 					"-lc++",
@@ -2164,6 +814,7 @@
 		};
 		2D02E49A1E0B4A5E006451C7 /* Release */ = {
 			isa = XCBuildConfiguration;
+			baseConfigurationReference = DA9745795726553C6FA9E7A8 /* Pods-apolloschurchapp-tvOSTests.release.xcconfig */;
 			buildSettings = {
 				BUNDLE_LOADER = "$(TEST_HOST)";
 				CLANG_ANALYZER_NONNULL = YES;
@@ -2175,28 +826,11 @@
 				GCC_NO_COMMON_BLOCKS = YES;
 				HEADER_SEARCH_PATHS = (
 					"$(inherited)",
-					"$(SRCROOT)/../node_modules/react-native-airplay-btn/ios",
-					"$(SRCROOT)/../node_modules/react-native-config/ios/ReactNativeConfig",
-					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
-					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
-					"$(SRCROOT)/../node_modules/react-native-linear-gradient/BVLinearGradient",
-					"$(SRCROOT)/../node_modules/react-native-music-control/ios",
-					"$(SRCROOT)/../node_modules/react-native-onesignal/ios/**",
-					"$(SRCROOT)/../node_modules/react-native-safari-view",
-					"$(SRCROOT)/../node_modules/react-native-screens/ios",
-					"$(SRCROOT)/../node_modules/react-native-splash-screen/ios",
-					"$(SRCROOT)/../node_modules/react-native-svg/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-video/ios",
-					"$(SRCROOT)/../node_modules/react-native-webview/ios",
-					"$(SRCROOT)/../node_modules/rn-fetch-blob/ios/**",
-					"$(SRCROOT)/../node_modules/react-native-maps/lib/ios/**",
-					"$(SRCROOT)/../node_modules/react-native-passkit-wallet/ios/RNPassKit",
 				);
 				INFOPLIST_FILE = "apolloschurchapp-tvOSTests/Info.plist";
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @loader_path/Frameworks";
-				LIBRARY_SEARCH_PATHS = (
-					"$(inherited)",
-				);
+				LIBRARY_SEARCH_PATHS = "$(inherited)";
 				OTHER_LDFLAGS = (
 					"-ObjC",
 					"-lc++",
diff --git a/apolloschurchapp/ios/apolloschurchapp.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist b/apolloschurchapp/ios/apolloschurchapp.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist
new file mode 100644
index 0000000..18d9810
--- /dev/null
+++ b/apolloschurchapp/ios/apolloschurchapp.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
+<plist version="1.0">
+<dict>
+	<key>IDEDidComputeMac32BitWarning</key>
+	<true/>
+</dict>
+</plist>
diff --git a/apolloschurchapp/ios/apolloschurchapp.xcodeproj/xcshareddata/xcschemes/apolloschurchapp.xcscheme b/apolloschurchapp/ios/apolloschurchapp.xcworkspace/xcshareddata/xcschemes/apolloschurchapp.xcscheme
similarity index 100%
rename from apolloschurchapp/ios/apolloschurchapp.xcodeproj/xcshareddata/xcschemes/apolloschurchapp.xcscheme
rename to apolloschurchapp/ios/apolloschurchapp.xcworkspace/xcshareddata/xcschemes/apolloschurchapp.xcscheme
diff --git a/apolloschurchapp/ios/apolloschurchapp.xcodeproj/xcshareddata/xcschemes/apolloschurchapp-tvOS.xcscheme b/apolloschurchapp/ios/apolloschurchapp.xcworkspace/xcshareddata/xcschemes/apolloschurchappprod.xcscheme
similarity index 72%
rename from apolloschurchapp/ios/apolloschurchapp.xcodeproj/xcshareddata/xcschemes/apolloschurchapp-tvOS.xcscheme
rename to apolloschurchapp/ios/apolloschurchapp.xcworkspace/xcshareddata/xcschemes/apolloschurchappprod.xcscheme
index e872aa3..cb89197 100644
--- a/apolloschurchapp/ios/apolloschurchapp.xcodeproj/xcshareddata/xcschemes/apolloschurchapp-tvOS.xcscheme
+++ b/apolloschurchapp/ios/apolloschurchapp.xcworkspace/xcshareddata/xcschemes/apolloschurchappprod.xcscheme
@@ -5,6 +5,15 @@
    <BuildAction
       parallelizeBuildables = "NO"
       buildImplicitDependencies = "YES">
+      <PreActions>
+         <ExecutionAction
+            ActionType = "Xcode.IDEStandardExecutionActionsCore.ExecutionActionType.ShellScriptAction">
+            <ActionContent
+               title = "Run Script"
+               scriptText = "echo &quot;.env.production&quot; &gt; /tmp/envfile&#10;">
+            </ActionContent>
+         </ExecutionAction>
+      </PreActions>
       <BuildActionEntries>
          <BuildActionEntry
             buildForTesting = "YES"
@@ -14,9 +23,9 @@
             buildForAnalyzing = "YES">
             <BuildableReference
                BuildableIdentifier = "primary"
-               BlueprintIdentifier = "2D2A28121D9B038B00D4039D"
+               BlueprintIdentifier = "83CBBA2D1A601D0E00E9B192"
                BuildableName = "libReact.a"
-               BlueprintName = "React-tvOS"
+               BlueprintName = "React"
                ReferencedContainer = "container:../node_modules/react-native/React/React.xcodeproj">
             </BuildableReference>
          </BuildActionEntry>
@@ -28,9 +37,9 @@
             buildForAnalyzing = "YES">
             <BuildableReference
                BuildableIdentifier = "primary"
-               BlueprintIdentifier = "2D02E47A1E0B4A5D006451C7"
-               BuildableName = "apolloschurchapp-tvOS.app"
-               BlueprintName = "apolloschurchapp-tvOS"
+               BlueprintIdentifier = "13B07F861A680F5B00A75B9A"
+               BuildableName = "apolloschurchapp.app"
+               BlueprintName = "apolloschurchapp"
                ReferencedContainer = "container:apolloschurchapp.xcodeproj">
             </BuildableReference>
          </BuildActionEntry>
@@ -42,9 +51,9 @@
             buildForAnalyzing = "YES">
             <BuildableReference
                BuildableIdentifier = "primary"
-               BlueprintIdentifier = "2D02E48F1E0B4A5D006451C7"
-               BuildableName = "apolloschurchapp-tvOSTests.xctest"
-               BlueprintName = "apolloschurchapp-tvOSTests"
+               BlueprintIdentifier = "00E356ED1AD99517003FC87E"
+               BuildableName = "apolloschurchappTests.xctest"
+               BlueprintName = "apolloschurchappTests"
                ReferencedContainer = "container:apolloschurchapp.xcodeproj">
             </BuildableReference>
          </BuildActionEntry>
@@ -60,9 +69,9 @@
             skipped = "NO">
             <BuildableReference
                BuildableIdentifier = "primary"
-               BlueprintIdentifier = "2D02E48F1E0B4A5D006451C7"
-               BuildableName = "apolloschurchapp-tvOSTests.xctest"
-               BlueprintName = "apolloschurchapp-tvOSTests"
+               BlueprintIdentifier = "00E356ED1AD99517003FC87E"
+               BuildableName = "apolloschurchappTests.xctest"
+               BlueprintName = "apolloschurchappTests"
                ReferencedContainer = "container:apolloschurchapp.xcodeproj">
             </BuildableReference>
          </TestableReference>
@@ -70,9 +79,9 @@
       <MacroExpansion>
          <BuildableReference
             BuildableIdentifier = "primary"
-            BlueprintIdentifier = "2D02E47A1E0B4A5D006451C7"
-            BuildableName = "apolloschurchapp-tvOS.app"
-            BlueprintName = "apolloschurchapp-tvOS"
+            BlueprintIdentifier = "13B07F861A680F5B00A75B9A"
+            BuildableName = "apolloschurchapp.app"
+            BlueprintName = "apolloschurchapp"
             ReferencedContainer = "container:apolloschurchapp.xcodeproj">
          </BuildableReference>
       </MacroExpansion>
@@ -80,7 +89,7 @@
       </AdditionalOptions>
    </TestAction>
    <LaunchAction
-      buildConfiguration = "Debug"
+      buildConfiguration = "Release"
       selectedDebuggerIdentifier = "Xcode.DebuggerFoundation.Debugger.LLDB"
       selectedLauncherIdentifier = "Xcode.DebuggerFoundation.Launcher.LLDB"
       launchStyle = "0"
@@ -93,9 +102,9 @@
          runnableDebuggingMode = "0">
          <BuildableReference
             BuildableIdentifier = "primary"
-            BlueprintIdentifier = "2D02E47A1E0B4A5D006451C7"
-            BuildableName = "apolloschurchapp-tvOS.app"
-            BlueprintName = "apolloschurchapp-tvOS"
+            BlueprintIdentifier = "13B07F861A680F5B00A75B9A"
+            BuildableName = "apolloschurchapp.app"
+            BlueprintName = "apolloschurchapp"
             ReferencedContainer = "container:apolloschurchapp.xcodeproj">
          </BuildableReference>
       </BuildableProductRunnable>
@@ -112,9 +121,9 @@
          runnableDebuggingMode = "0">
          <BuildableReference
             BuildableIdentifier = "primary"
-            BlueprintIdentifier = "2D02E47A1E0B4A5D006451C7"
-            BuildableName = "apolloschurchapp-tvOS.app"
-            BlueprintName = "apolloschurchapp-tvOS"
+            BlueprintIdentifier = "13B07F861A680F5B00A75B9A"
+            BuildableName = "apolloschurchapp.app"
+            BlueprintName = "apolloschurchapp"
             ReferencedContainer = "container:apolloschurchapp.xcodeproj">
          </BuildableReference>
       </BuildableProductRunnable>
diff --git a/apolloschurchapp/ios/apolloschurchapp/Info.plist b/apolloschurchapp/ios/apolloschurchapp/Info.plist
index 37e0ab4..c4f726c 100644
--- a/apolloschurchapp/ios/apolloschurchapp/Info.plist
+++ b/apolloschurchapp/ios/apolloschurchapp/Info.plist
@@ -17,7 +17,7 @@
 	<key>CFBundlePackageType</key>
 	<string>APPL</string>
 	<key>CFBundleShortVersionString</key>
-	<string>0.8.6</string>
+	<string>1.2.5</string>
 	<key>CFBundleSignature</key>
 	<string>????</string>
 	<key>CFBundleURLTypes</key>
@@ -30,7 +30,7 @@
 		</dict>
 	</array>
 	<key>CFBundleVersion</key>
-	<string>12</string>
+	<string>25</string>
 	<key>ITSAppUsesNonExemptEncryption</key>
 	<false />
 	<key>LSRequiresIPhoneOS</key>
@@ -55,8 +55,10 @@
 	</dict>
 	<key>NSCameraUsageDescription</key>
 	<string>$(PRODUCT_NAME) would like to use your camera (for uploading profile pictures)</string>
+	<key>NSLocationAlwaysUsageDescription</key>
+	<string>$(PRODUCT_NAME) would like to use your location for determining your closest campus</string>
 	<key>NSLocationWhenInUseUsageDescription</key>
-	<string />
+	<string>$(PRODUCT_NAME) would like to use your location for determining your closest campus</string>
 	<key>NSMicrophoneUsageDescription</key>
 	<string>$(PRODUCT_NAME) would like to your microphone (for videos)</string>
 	<key>NSPhotoLibraryAddUsageDescription</key>
diff --git a/apolloschurchapp/ios/apolloschurchappTests/Info.plist b/apolloschurchapp/ios/apolloschurchappTests/Info.plist
index ea797d5..1089739 100644
--- a/apolloschurchapp/ios/apolloschurchappTests/Info.plist
+++ b/apolloschurchapp/ios/apolloschurchappTests/Info.plist
@@ -15,10 +15,10 @@
 	<key>CFBundlePackageType</key>
 	<string>BNDL</string>
 	<key>CFBundleShortVersionString</key>
-	<string>0.8.6</string>
+	<string>1.2.5</string>
 	<key>CFBundleSignature</key>
 	<string>????</string>
 	<key>CFBundleVersion</key>
-	<string>11</string>
+	<string>24</string>
 </dict>
 </plist>
diff --git a/apolloschurchapp/jest.setup.js b/apolloschurchapp/jest.setup.js
index d15cab6..de5a421 100644
--- a/apolloschurchapp/jest.setup.js
+++ b/apolloschurchapp/jest.setup.js
@@ -1,5 +1,16 @@
 import React from 'react';
+import { NativeModules } from 'react-native';
 // We ran into an issue where SafeAreaView would break jest tests.
+
+jest.mock(
+  '../apollos-ui-kit/node_modules/react-native-safe-area-context/',
+  () => ({
+    SafeAreaConsumer: ({ children }) =>
+      children({ top: 0, bottom: 0, left: 0, right: 0 }),
+    SafeAreaProvider: ({ children }) => children,
+  })
+);
+
 jest.mock('react-navigation', () => {
   const ActualNavigation = require.requireActual('react-navigation');
   return {
@@ -48,7 +59,7 @@ jest.mock('react-native-safari-view', () => ({
 }));
 
 jest.mock('react-native-device-info', () => ({
-  getUniqueID: () => 'id-123',
+  getUniqueId: () => 'id-123',
   getSystemVersion: () => 'sys-version-123',
   getModel: () => 'ios',
   getVersion: () => 'version-123',
@@ -65,6 +76,7 @@ jest.mock('@apollosproject/ui-analytics', () => ({
   track: () => '',
   AnalyticsConsumer: ({ children }) => children({ test: jest.fn() }),
   AnalyticsProvider: ({ children }) => children,
+  TrackEventWhenLoaded: () => null,
   withTrackOnPress: (Component) => (props) => <Component {...props} />,
 }));
 
@@ -87,3 +99,12 @@ jest.mock('NativeEventEmitter');
 jest.mock('react-native-maps');
 jest.mock('DatePickerIOS', () => 'DatePicker');
 jest.mock('./src/client/index');
+
+NativeModules.RNGestureHandlerModule = {
+  attachGestureHandler: jest.fn(),
+  createGestureHandler: jest.fn(),
+  dropGestureHandler: jest.fn(),
+  updateGestureHandler: jest.fn(),
+  State: {},
+  Directions: {},
+};
diff --git a/apolloschurchapp/metro.config.js b/apolloschurchapp/metro.config.js
index 9b60d7a..5080a3a 100644
--- a/apolloschurchapp/metro.config.js
+++ b/apolloschurchapp/metro.config.js
@@ -26,12 +26,16 @@ const localDeps = [
 
 const sharedNativeModules = [
   'react-native-linear-gradient',
+  'react-native-safe-area-context',
   'react-native-svg',
   'react-native-onesignal',
   'react-native-music-control',
+  'react-native-gesture-handler',
   'react-native-video',
   'react-native-video-controls',
-  'react-native-airplay-btn',
+  'react-native-modal-datetime-picker',
+  '@apollosproject/react-native-airplay-btn',
+  'react-navigation',
 ];
 
 module.exports = {
diff --git a/apolloschurchapp/package.json b/apolloschurchapp/package.json
index 8de8d0c..90a41eb 100644
--- a/apolloschurchapp/package.json
+++ b/apolloschurchapp/package.json
@@ -1,21 +1,22 @@
 {
   "name": "apolloschurchapp",
-  "version": "0.8.6",
+  "version": "1.2.5",
   "private": true,
   "devDependencies": {
-    "@apollosproject/ui-storybook": "^0.8.6",
     "codecov": "3.0.2",
     "get-dev-paths": "^0.1.0",
+    "graphql-import": "^0.7.1",
     "jest": "^24.8.0",
     "jest-react-native": "18.0.0",
-    "metro-react-native-babel-preset": "^0.54.0",
+    "jetifier": "^1.6.4",
+    "metro-react-native-babel-preset": "^0.56.0",
     "nodemon": "1.18.7",
     "prettier": "1.14.2",
     "prop-types": "15.6.1",
     "react-dom": "16.6.3",
     "react-native-storybook-loader": "1.8.0",
     "react-native-version": "2.6.2",
-    "react-test-renderer": "16.8.3",
+    "react-test-renderer": "16.8.6",
     "waait": "1.0.2"
   },
   "engines": {
@@ -25,25 +26,27 @@
     "src"
   ],
   "scripts": {
-    "android": "SIM=\"$($HOME/Library/Android/sdk/emulator/emulator -list-avds | sed -n 1p)\" && $HOME/Library/Android/sdk/emulator/emulator -avd \"${SIM}\" & react-native run-android --appId com.apolloschurch.app --main-activity LaunchActivity",
+    "android": "SIM=\"$($HOME/Library/Android/sdk/emulator/emulator -list-avds | sed -n 1p)\" && $HOME/Library/Android/sdk/emulator/emulator -avd \"${SIM}\" & react-native run-android --appId com.apolloschurch.app",
     "codecov": "cat ./coverage/lcov.info | codecov",
     "fixlint": "eslint ./src --fix",
-    "ios": "react-native run-ios --simulator=\"iPhone X\"",
+    "ios": "react-native run-ios --simulator=\"iPhone 11\"",
     "storybook:enable": "sed -i '' 's/STORYBOOK=false/STORYBOOK=true/g' .env",
     "storybook:disable": "sed -i '' 's/STORYBOOK=true/STORYBOOK=false/g' .env",
     "generate-stories": "rnstl --searchDir ./src --pattern **/*.stories.js",
     "lint": "eslint ./src --ext .js",
     "version": "node ../../scripts/update-apollos-version.js && git add apollos.json",
-    "postversion": "react-native-version --never-amend --android android/app/build.gradle --ios ios/",
+    "postversion": "react-native-version --never-amend --never-increment-build --android android/app/build.gradle --ios ios/",
     "prestart": "lerna run generate-stories & node ./scripts/get-introspection-data.js",
+    "postinstall": "jetify",
+    "pods": "./scripts/install_pods.sh",
     "start": "react-native start",
-    "test": "jest"
+    "test": "TZ=UTC jest"
   },
   "jest": {
     "preset": "react-native",
     "collectCoverage": true,
     "transformIgnorePatterns": [
-      "node_modules/(?!((jest-)?react-native|rn-*|react-clone-referenced-element|react-navigation|@apollosproject))"
+      "node_modules/(?!((jest-)?react-native|rn-*|react-clone-referenced-element|react-navigation|@react-navigation|@apollosproject))"
     ],
     "testMatch": [
       "<rootDir>/src/**/?(*.)(test|tests).{js,jsx,mjs}"
@@ -59,15 +62,19 @@
     ]
   },
   "dependencies": {
-    "@apollosproject/ui-analytics": "^0.8.6",
-    "@apollosproject/ui-auth": "^0.8.6",
-    "@apollosproject/ui-htmlview": "^0.8.6",
-    "@apollosproject/ui-kit": "^0.8.6",
-    "@apollosproject/ui-passes": "^0.8.6",
-    "@apollosproject/ui-scripture": "^0.8.6",
-    "@apollosproject/ui-storybook": "^0.8.6",
-    "@apollosproject/ui-media-player": "^0.8.6",
-    "@apollosproject/ui-notifications": "^0.8.6",
+    "@apollosproject/react-native-airplay-btn": "0.2.0",
+    "@apollosproject/ui-analytics": "^1.2.5",
+    "@apollosproject/ui-auth": "^1.2.5",
+    "@apollosproject/ui-htmlview": "^1.2.5",
+    "@apollosproject/ui-kit": "^1.2.5",
+    "@apollosproject/ui-media-player": "^1.2.5",
+    "@apollosproject/ui-notifications": "^1.2.5",
+    "@apollosproject/ui-onboarding": "^1.2.5",
+    "@apollosproject/ui-passes": "^1.2.5",
+    "@apollosproject/ui-scripture": "^1.2.5",
+    "@apollosproject/ui-storybook": "^1.2.5",
+    "@react-native-community/async-storage": "^1.5.1",
+    "@react-native-community/geolocation": "^2.0.2",
     "apollo-cache-inmemory": "1.5.1",
     "apollo-cache-persist": "0.1.1",
     "apollo-client": "2.5.1",
@@ -86,30 +93,34 @@
     "memoize-one": "4.0.0",
     "moment": "2.22.2",
     "node-fetch": "2.2.0",
-    "react": "16.8.3",
+    "react": "16.8.6",
     "react-apollo": "2.5.5",
-    "react-native": "0.59.8",
-    "react-native-airplay-btn": "^1.0.6",
+    "react-native": "0.60.5",
     "react-native-config": "^0.11.7",
-    "react-native-device-info": "0.22.5",
+    "react-native-device-info": "^4.0.1",
+    "react-native-geolocation-service": "^3.0.0",
+    "react-native-gesture-handler": "^1.3.0",
     "react-native-image-picker": "0.28.0",
+    "react-native-inappbrowser-reborn": "^3.0.0",
     "react-native-linear-gradient": "^2.5.4",
-    "react-native-maps": "^0.24.2",
-    "react-native-music-control": "^0.10.2",
-    "react-native-onesignal": "3.2.7",
+    "react-native-maps": "0.25.0",
+    "react-native-modal-datetime-picker": "7.6.0",
+    "react-native-music-control": "0.10.5",
+    "react-native-onesignal": "3.3.2",
     "react-native-passkit-wallet": "^0.1.4",
+    "react-native-permissions": "^2.0.5",
     "react-native-safari-view": "2.1.0",
+    "react-native-safe-area-context": "^0.3.6",
     "react-native-safe-area-view": "0.13.1",
-    "react-native-screens": "^1.0.0-alpha.11",
-    "react-native-splash-screen": "^3.1.1",
+    "react-native-screens": "^1.0.0-alpha.23",
+    "react-native-splash-screen": "3.2.0",
     "react-native-svg": "^9.4.0",
-    "react-native-video": "^4.4.1",
+    "react-native-video": "^5.0.0",
     "react-native-video-controls": "2.2.3",
     "react-native-webview": "^5.2.0",
-    "react-navigation": "2.18.3",
-    "react-navigation-tabs": "0.6.0",
+    "react-navigation": "^3.11.0",
     "recompose": "^0.30.0",
-    "rn-fetch-blob": "^0.10.15",
+    "rn-fetch-blob": "^0.10.16",
     "stream": "^0.0.2",
     "yup": "0.26.6"
   },
diff --git a/apolloschurchapp/scripts/install_pods.sh b/apolloschurchapp/scripts/install_pods.sh
new file mode 100755
index 0000000..dfd82f2
--- /dev/null
+++ b/apolloschurchapp/scripts/install_pods.sh
@@ -0,0 +1,11 @@
+cd ios
+# check cocoapods version
+MY_VERSION=$(pod --version)
+PODFILE_TEXT=$(sed -n /COCOAPODS/p Podfile.lock)
+MASTER_VERSION=${PODFILE_TEXT#"COCOAPODS: "}
+if [[ $MY_VERSION != $MASTER_VERSION ]]; then
+	echo "Cocoapods version mismatch. Install version $MASTER_VERSION."
+	exit 1
+fi
+# update repo and install pods
+pod install --repo-update
diff --git a/apolloschurchapp/src/LandingScreen.js b/apolloschurchapp/src/LandingScreen.js
index 52dde4b..fa430a1 100644
--- a/apolloschurchapp/src/LandingScreen.js
+++ b/apolloschurchapp/src/LandingScreen.js
@@ -1,5 +1,4 @@
 import React from 'react';
-import PropTypes from 'prop-types';
 import { styled, GradientOverlayImage } from '@apollosproject/ui-kit';
 
 import ApollosLandingScreen from './ui/LandingScreen';
@@ -24,10 +23,4 @@ LandingScreen.navigationOptions = {
   header: null,
 };
 
-LandingScreen.propTypes = {
-  navigation: PropTypes.shape({
-    push: PropTypes.func,
-  }),
-};
-
 export default LandingScreen;
diff --git a/apolloschurchapp/src/Providers.js b/apolloschurchapp/src/Providers.js
index 9b7e84f..100ccb9 100644
--- a/apolloschurchapp/src/Providers.js
+++ b/apolloschurchapp/src/Providers.js
@@ -7,6 +7,7 @@ import { MediaPlayerProvider } from '@apollosproject/ui-media-player';
 import { NotificationsProvider } from '@apollosproject/ui-notifications';
 
 import NavigationService from './NavigationService';
+import { LiveProvider } from './live';
 import ClientProvider from './client';
 import customTheme, { customIcons } from './theme';
 
@@ -22,11 +23,13 @@ const AppProviders = (props) => (
       >
         <MediaPlayerProvider>
           <AnalyticsProvider>
-            <Providers
-              themeInput={customTheme}
-              iconInput={customIcons}
-              {...props}
-            />
+            <LiveProvider>
+              <Providers
+                themeInput={customTheme}
+                iconInput={customIcons}
+                {...props}
+              />
+            </LiveProvider>
           </AnalyticsProvider>
         </MediaPlayerProvider>
       </AuthProvider>
diff --git a/apolloschurchapp/src/__tests__/LandingScreen.tests.js b/apolloschurchapp/src/__tests__/LandingScreen.tests.js
new file mode 100644
index 0000000..37abb80
--- /dev/null
+++ b/apolloschurchapp/src/__tests__/LandingScreen.tests.js
@@ -0,0 +1,15 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+import { Providers } from '@apollosproject/ui-kit';
+import LandingScreen from '../LandingScreen';
+
+describe('the LandingScreen', () => {
+  it('should render', () => {
+    const tree = renderer.create(
+      <Providers>
+        <LandingScreen />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/index.test.js b/apolloschurchapp/src/__tests__/index.test.js
similarity index 87%
rename from apolloschurchapp/src/index.test.js
rename to apolloschurchapp/src/__tests__/index.test.js
index dcea081..92aedcb 100644
--- a/apolloschurchapp/src/index.test.js
+++ b/apolloschurchapp/src/__tests__/index.test.js
@@ -1,7 +1,7 @@
 import renderer from 'react-test-renderer';
 import React from 'react';
 
-import App from '.';
+import App from '../index';
 
 it('renders without crashing', () => {
   const rendered = renderer.create(<App />).toJSON();
diff --git a/apolloschurchapp/src/client/__mocks__/index.js b/apolloschurchapp/src/client/__mocks__/index.js
index 36dec2b..cf59c84 100644
--- a/apolloschurchapp/src/client/__mocks__/index.js
+++ b/apolloschurchapp/src/client/__mocks__/index.js
@@ -3,8 +3,7 @@ import { MockedProvider } from 'react-apollo/test-utils';
 import ApolloClient from 'apollo-client';
 import { makeExecutableSchema, addMockFunctionsToSchema } from 'graphql-tools';
 import { SchemaLink } from 'apollo-link-schema';
-
-import { testSchema as typeDefs } from 'apollos-church-api';
+import { importSchema } from 'graphql-import';
 
 import cache from '../cache';
 import { resolvers, schema, defaults } from '../../store';
@@ -17,11 +16,13 @@ export default (props) => {
     // eslint-disable-next-line
     finalProps = { ...props, resolvers };
   }
-  return <MockedProvider {...finalProps} />;
+  return <MockedProvider cache={cache} {...finalProps} />;
 };
 
 const serverSchema = makeExecutableSchema({
-  typeDefs,
+  typeDefs: importSchema(
+    `${process.cwd()}/../apollos-church-api/local.graphql`
+  ),
   resolverValidationOptions: {
     requireResolversForResolveType: false,
   },
diff --git a/apolloschurchapp/src/client/cache.js b/apolloschurchapp/src/client/cache.js
index 5b4bfd5..862639f 100644
--- a/apolloschurchapp/src/client/cache.js
+++ b/apolloschurchapp/src/client/cache.js
@@ -2,7 +2,7 @@ import {
   InMemoryCache,
   IntrospectionFragmentMatcher,
 } from 'apollo-cache-inmemory';
-import { AsyncStorage } from 'react-native';
+import AsyncStorage from '@react-native-community/async-storage';
 import { CachePersistor } from 'apollo-cache-persist';
 import gql from 'graphql-tag';
 import Config from 'react-native-config';
diff --git a/apolloschurchapp/src/client/fragmentTypes.json b/apolloschurchapp/src/client/fragmentTypes.json
index 14cf82b..9dcddbd 100644
--- a/apolloschurchapp/src/client/fragmentTypes.json
+++ b/apolloschurchapp/src/client/fragmentTypes.json
@@ -1 +1 @@
-{"__schema":{"types":[{"kind":"INTERFACE","name":"Node","possibleTypes":[{"name":"ContentChannel"},{"name":"Person"},{"name":"Campus"},{"name":"Pass"},{"name":"UniversalContentItem"},{"name":"DevotionalContentItem"},{"name":"MediaContentItem"},{"name":"ContentSeriesContentItem"}]},{"kind":"INTERFACE","name":"ContentItem","possibleTypes":[{"name":"UniversalContentItem"},{"name":"DevotionalContentItem"},{"name":"MediaContentItem"},{"name":"ContentSeriesContentItem"}]},{"kind":"INTERFACE","name":"Media","possibleTypes":[{"name":"ImageMedia"},{"name":"VideoMedia"},{"name":"AudioMedia"}]},{"kind":"INTERFACE","name":"MediaSource","possibleTypes":[{"name":"ImageMediaSource"},{"name":"VideoMediaSource"},{"name":"AudioMediaSource"}]},{"kind":"INTERFACE","name":"Sharable","possibleTypes":[{"name":"SharableContentItem"}]}]}}
\ No newline at end of file
+{"__schema":{"types":[{"kind":"INTERFACE","name":"Node","possibleTypes":[{"name":"ContentChannel"},{"name":"Person"},{"name":"Campus"},{"name":"Event"},{"name":"Group"},{"name":"Scripture"},{"name":"Pass"},{"name":"UniversalContentItem"},{"name":"DevotionalContentItem"},{"name":"MediaContentItem"},{"name":"ContentSeriesContentItem"},{"name":"WeekendContentItem"},{"name":"ActionListFeature"},{"name":"TextFeature"},{"name":"ScriptureFeature"}]},{"kind":"INTERFACE","name":"ContentItem","possibleTypes":[{"name":"UniversalContentItem"},{"name":"DevotionalContentItem"},{"name":"MediaContentItem"},{"name":"ContentSeriesContentItem"},{"name":"WeekendContentItem"}]},{"kind":"INTERFACE","name":"Media","possibleTypes":[{"name":"ImageMedia"},{"name":"VideoMedia"},{"name":"AudioMedia"}]},{"kind":"INTERFACE","name":"MediaSource","possibleTypes":[{"name":"ImageMediaSource"},{"name":"VideoMediaSource"},{"name":"AudioMediaSource"}]},{"kind":"INTERFACE","name":"Sharable","possibleTypes":[{"name":"SharableContentItem"},{"name":"SharableFeature"}]},{"kind":"INTERFACE","name":"Feature","possibleTypes":[{"name":"ActionListFeature"},{"name":"TextFeature"},{"name":"ScriptureFeature"}]}]}}
\ No newline at end of file
diff --git a/apolloschurchapp/src/client/index.js b/apolloschurchapp/src/client/index.js
index c473190..a6d4092 100644
--- a/apolloschurchapp/src/client/index.js
+++ b/apolloschurchapp/src/client/index.js
@@ -3,13 +3,26 @@ import PropTypes from 'prop-types';
 import { ApolloProvider } from 'react-apollo';
 import { ApolloClient } from 'apollo-client';
 import { ApolloLink } from 'apollo-link';
+import { getVersion, getApplicationName } from 'react-native-device-info';
 
-import { authLink } from '@apollosproject/ui-auth';
+import { authLink, buildErrorLink } from '@apollosproject/ui-auth';
 import { resolvers, schema, defaults } from '../store';
+import NavigationService from '../NavigationService';
 import httpLink from './httpLink';
 import cache, { ensureCacheHydration, MARK_CACHE_LOADED } from './cache';
 
-const link = ApolloLink.from([authLink, httpLink]);
+const goToAuth = () => NavigationService.navigate('Auth');
+const wipeData = () => cache.writeData({ data: defaults });
+
+let resetStore;
+const onAuthError = () => {
+  resetStore();
+  goToAuth();
+};
+
+const errorLink = buildErrorLink(onAuthError);
+
+const link = ApolloLink.from([authLink, errorLink, httpLink]);
 
 export const client = new ApolloClient({
   link,
@@ -18,11 +31,17 @@ export const client = new ApolloClient({
   shouldBatch: true,
   resolvers,
   typeDefs: schema,
+  name: getApplicationName(),
+  version: getVersion(),
 });
 
-cache.writeData({ data: defaults });
+// Hack to give auth link access to method on client;
+// eslint-disable-next-line prefer-destructuring
+resetStore = client.resetStore;
+
+wipeData();
 // Ensure that media player still works after logout.
-client.onResetStore(() => cache.writeData({ data: defaults }));
+client.onResetStore(() => wipeData());
 
 class ClientProvider extends PureComponent {
   static propTypes = {
diff --git a/apolloschurchapp/src/content-feed/content-feed.tests.js b/apolloschurchapp/src/content-feed/content-feed.tests.js
index 544d818..8578983 100644
--- a/apolloschurchapp/src/content-feed/content-feed.tests.js
+++ b/apolloschurchapp/src/content-feed/content-feed.tests.js
@@ -1,24 +1,32 @@
 import React from 'react';
-import renderer from 'react-test-renderer';
 
 import Providers from 'apolloschurchapp/src/Providers';
 
-import getContentFeed from './getContentFeed';
+import { renderWithApolloData } from '../utils/testUtils';
+import GET_CONTENT_FEED from './getContentFeed';
 
 import ContentFeed from './index';
 
 describe('content feed query component', () => {
-  it('renders a feedview after successful query', () => {
+  it('renders a feedview after successful query', async () => {
     const mock = {
       request: {
-        query: getContentFeed,
+        query: GET_CONTENT_FEED,
+        variables: { itemId: 'ContentChannel:123' },
       },
       result: {
         data: {
           node: {
+            __typename: 'ContentChannel',
             childContentItemsConnection: {
+              pageInfo: {
+                endCursor: 'blablalba',
+                __typename: 'PaginationInfo',
+              },
+              __typename: 'ContentItemsConnection',
               edges: [
                 {
+                  __typename: 'ContentItemsConnectionEdge',
                   node: {
                     __typename: 'UniversalContentItem',
                     id: 'UniversalContentItem:d57994350b9d213866b24dea3a97433d',
@@ -27,11 +35,20 @@ describe('content feed query component', () => {
                       id: 'ContentChannel:4f68015ba18662a7409d1219a4ce013e',
                       name: 'Editorial',
                       iconName: 'text',
+                      __typename: 'ContentChannel',
                     },
                     title: 'Mea Animal Aperiam Ornatus Eu',
+                    hyphenatedTitle: 'Mea Animal Aperiam Ornatus Eu',
+                    summary: 'Bla bla bla',
+                    theme: null,
+                    isLiked: false,
+                    likedCount: 0,
+                    videos: [],
+                    audios: [],
                   },
                 },
                 {
+                  __typename: 'ContentItemsConnectionEdge',
                   node: {
                     __typename: 'UniversalContentItem',
                     id: 'UniversalContentItem:b36e55d803443431e96bb4b5068147ec',
@@ -40,8 +57,17 @@ describe('content feed query component', () => {
                       id: 'ContentChannel:4f68015ba18662a7409d1219a4ce013e',
                       name: 'Editorial',
                       iconName: 'text',
+                      __typename: 'ContentChannel',
                     },
                     title: 'Probo Senserit Id Mea, Ut Sed Malis Postea,',
+                    hyphenatedTitle:
+                      'Probo Senserit Id Mea, Ut Sed Malis Postea,',
+                    summary: 'Bla bla bla',
+                    theme: null,
+                    isLiked: false,
+                    likedCount: 0,
+                    videos: [],
+                    audios: [],
                   },
                 },
               ],
@@ -52,10 +78,10 @@ describe('content feed query component', () => {
     };
 
     const navigation = {
-      getParam: jest.fn(),
+      getParam: () => 'ContentChannel:123',
       navigate: jest.fn(),
     };
-    const tree = renderer.create(
+    const tree = await renderWithApolloData(
       <Providers mocks={[mock]}>
         <ContentFeed navigation={navigation} />
       </Providers>
diff --git a/apolloschurchapp/src/content-feed/getContentFeed.js b/apolloschurchapp/src/content-feed/getContentFeed.js
index dbf38d5..97af6f6 100644
--- a/apolloschurchapp/src/content-feed/getContentFeed.js
+++ b/apolloschurchapp/src/content-feed/getContentFeed.js
@@ -1,7 +1,6 @@
 import gql from 'graphql-tag';
 
-import { largeCardFragment } from 'apolloschurchapp/src/ui/ContentCardConnected';
-import { contentItemFragment } from '../content-single/getContentItem';
+import { BASE_CARD_FRAGMENT } from 'apolloschurchapp/src/ui/ContentCardConnected';
 
 export default gql`
   query getContentFeed($itemId: ID!, $after: String, $first: Int) {
@@ -13,14 +12,12 @@ export default gql`
           }
           edges {
             node {
-              ...contentItemFragment
-              ...largeCardFragment
+              ...baseCardFragment
             }
           }
         }
       }
     }
   }
-  ${contentItemFragment}
-  ${largeCardFragment}
+  ${BASE_CARD_FRAGMENT}
 `;
diff --git a/apolloschurchapp/src/content-feed/index.js b/apolloschurchapp/src/content-feed/index.js
index 831c5f0..8443086 100644
--- a/apolloschurchapp/src/content-feed/index.js
+++ b/apolloschurchapp/src/content-feed/index.js
@@ -8,7 +8,7 @@ import { BackgroundView, FeedView } from '@apollosproject/ui-kit';
 import ContentCardConnected from 'apolloschurchapp/src/ui/ContentCardConnected';
 import fetchMoreResolver from 'apolloschurchapp/src/utils/fetchMoreResolver';
 
-import getContentFeed from './getContentFeed';
+import GET_CONTENT_FEED from './getContentFeed';
 /**
  * This is where the component description lives
  * A FeedView wrapped in a query to pull content data.
@@ -47,7 +47,7 @@ class ContentFeed extends PureComponent {
     return (
       <BackgroundView>
         <Query
-          query={getContentFeed}
+          query={GET_CONTENT_FEED}
           variables={{ itemId }}
           fetchPolicy="cache-and-network"
         >
diff --git a/apolloschurchapp/src/content-single/ActionContainer/index.js b/apolloschurchapp/src/content-single/ActionContainer/index.js
index 471fe32..7b64e05 100644
--- a/apolloschurchapp/src/content-single/ActionContainer/index.js
+++ b/apolloschurchapp/src/content-single/ActionContainer/index.js
@@ -1,16 +1,12 @@
 import React from 'react';
 import { Platform, View } from 'react-native';
 import PropTypes from 'prop-types';
-import { Query } from 'react-apollo';
-import { get } from 'lodash';
-import Share from 'apolloschurchapp/src/ui/Share';
+import ShareContentButtonConnected from 'apolloschurchapp/src/ui/ShareContentButtonConnected';
 
 import { SideBySideView, styled } from '@apollosproject/ui-kit';
-import LikeButton from 'apolloschurchapp/src/ui/LikeButton';
+import LikeContentButtonConnected from 'apolloschurchapp/src/ui/LikeContentButtonConnected';
 import { MediaPlayerSpacer } from '@apollosproject/ui-media-player';
 
-import getShareContent from './getShareContent';
-
 const PositioningView = styled(({ theme }) => ({
   justifyContent: 'space-around',
   paddingVertical: theme.sizing.baseUnit / 2,
@@ -26,15 +22,8 @@ const ActionContainer = ({ itemId }) => (
   <Container>
     <MediaPlayerSpacer>
       <PositioningView>
-        <LikeButton itemId={itemId} />
-        <Query query={getShareContent} variables={{ itemId }}>
-          {({ data: { node } = {}, error, loading }) => {
-            const sharing = get(node, 'sharing');
-            return loading || error || !sharing ? null : (
-              <Share content={sharing} />
-            );
-          }}
-        </Query>
+        <LikeContentButtonConnected itemId={itemId} />
+        <ShareContentButtonConnected itemId={itemId} />
       </PositioningView>
     </MediaPlayerSpacer>
   </Container>
diff --git a/apolloschurchapp/src/content-single/ContentSingle.js b/apolloschurchapp/src/content-single/ContentSingle.js
index 70f49fd..817af65 100644
--- a/apolloschurchapp/src/content-single/ContentSingle.js
+++ b/apolloschurchapp/src/content-single/ContentSingle.js
@@ -8,10 +8,11 @@ import { ErrorCard, ThemeMixin } from '@apollosproject/ui-kit';
 import { TrackEventWhenLoaded } from '@apollosproject/ui-analytics';
 
 import ActionContainer from './ActionContainer';
-import getContentItem from './getContentItem';
+import GET_CONTENT_ITEM from './getContentItem';
 
 import DevotionalContentItem from './DevotionalContentItem';
 import UniversalContentItem from './UniversalContentItem';
+import WeekendContentItem from './WeekendContentItem';
 
 import NavigationHeader from './NavigationHeader';
 
@@ -42,6 +43,7 @@ class ContentSingle extends PureComponent {
     if (!__typename && this.itemId) {
       [__typename] = this.itemId.split(':');
     }
+
     switch (__typename) {
       case 'DevotionalContentItem':
         return (
@@ -52,6 +54,15 @@ class ContentSingle extends PureComponent {
             error={error}
           />
         );
+      case 'WeekendContentItem':
+        return (
+          <WeekendContentItem
+            id={this.itemId}
+            content={content}
+            loading={loading}
+            error={error}
+          />
+        );
       case 'UniversalContentItem':
       default:
         return (
@@ -95,7 +106,7 @@ class ContentSingle extends PureComponent {
 
   render() {
     return (
-      <Query query={getContentItem} variables={this.queryVariables}>
+      <Query query={GET_CONTENT_ITEM} variables={this.queryVariables}>
         {this.renderWithData}
       </Query>
     );
diff --git a/apolloschurchapp/src/content-single/DevotionalContentItem/ContentTab.js b/apolloschurchapp/src/content-single/DevotionalContentItem/ContentTab.js
index 426feb3..cb74911 100644
--- a/apolloschurchapp/src/content-single/DevotionalContentItem/ContentTab.js
+++ b/apolloschurchapp/src/content-single/DevotionalContentItem/ContentTab.js
@@ -1,12 +1,14 @@
 import React from 'react';
 import { ScrollView } from 'react-native';
 import PropTypes from 'prop-types';
-import { PaddedView, H2, styled } from '@apollosproject/ui-kit';
+import { PaddedView, H2, styled, withIsLoading } from '@apollosproject/ui-kit';
 import { ScriptureList } from '@apollosproject/ui-scripture';
 import HorizontalContentFeed from '../HorizontalContentFeed';
 import HTMLContent from '../HTMLContent';
 
-const ContentContainer = styled({ paddingVertical: 0 })(PaddedView);
+const ContentContainer = withIsLoading(
+  styled({ paddingVertical: 0 })(PaddedView)
+);
 
 /**
  * This is the Content side of the Devotional tabbed component.
@@ -22,10 +24,8 @@ const ContentTab = ({
   navigation,
 }) => (
   <ScrollView>
-    <ContentContainer>
-      <H2 padded isLoading={!title && isLoading}>
-        {title}
-      </H2>
+    <ContentContainer isLoading={isLoading}>
+      <H2 padded>{title}</H2>
       {references && references.length ? (
         <ScriptureList
           references={references}
diff --git a/apolloschurchapp/src/content-single/DevotionalContentItem/Devotional.tests.js b/apolloschurchapp/src/content-single/DevotionalContentItem/Devotional.tests.js
index efaffbd..2c1e254 100644
--- a/apolloschurchapp/src/content-single/DevotionalContentItem/Devotional.tests.js
+++ b/apolloschurchapp/src/content-single/DevotionalContentItem/Devotional.tests.js
@@ -1,100 +1,73 @@
 import React from 'react';
-import renderer from 'react-test-renderer';
 import Providers from 'apolloschurchapp/src/Providers';
 import { renderWithApolloData } from 'apolloschurchapp/src/utils/testUtils';
-import getContentItemContent from '../HTMLContent/getContentItemContent';
-import getScripture from './getScripture';
+import { createStackNavigator, createAppContainer } from 'react-navigation';
+import GET_CONTENT_ITEM_CONTENT from '../HTMLContent/getContentItemContent';
+import GET_SCRIPTURE from './getScripture';
 import Devotional from '.';
 
-const content = {
-  body:
-    '<p>Sometimes God&rsquo;s promises to us involve a fight. We have to fight to keep our focus on Him, fight to move towards the promise we know God has laid on our hearts. We have a real enemy that would love nothing more than to get us sidetracked and doubt God&rsquo;s promises. So we fight saying that we are going to believe God will do what He says He will do, and we keep fighting until we see that promise come to life.</p><p>In Exodus 17:8-15 the nation of Israel, freed from great oppression in Egypt was traveling to the land God promised them. Yet, Israel was fighting, again.&nbsp;<br />&nbsp;<br />As the Israelites were fighting in the valley,&nbsp;Moses was on the hill top lifting his hands in prayer for these great fighters. Israel fought hard, and with the prayers of Moses and the help of his companions, Aaron and Hur, the Amalekites were defeated. Moses knew that it was solely because of the Lord&rsquo;s hand of protection and blessing on the Israelites that they won the battle. &ldquo;Moses built an altar and called it The Lord is my banner&rdquo; (Exodus 17:15).</p><p>In battle opposing nations would fly their own flag on a pole at each of their respective front lines. This was to give their soldiers a feeling of hope and a focal point. This is what God is to us: a banner of encouragement to give us hope and a focal point.</p><blockquote><p>The Lord protects us, covers us with love, and&nbsp;blesses us continually.</p></blockquote><p>The Lord is our banner. He protects us; He covers us with love; He blesses us continually. The Lord gives us hope and a place to focus during the tough fights when the enemy is trying to make us doubt God&rsquo;s promises.&nbsp;</p><p>When was the last time you sat and thanked Jesus for all the ways he is a banner in your life?&nbsp;</p><p>Reflect:</p><ul><li>What is one way the Lord has been your banner?</li><li>How can you focus more today on the Lord and all the things He does for you throughout the day?</li></ul>',
-  route: { jumpTo: jest.fn() },
-  title: 'God is Our Banner',
-};
-
-const scriptures = [
-  {
-    __typename: 'Scripture',
-    id: '1CO.15.57',
-    reference: '1 Corinthians 15:57',
-    html:
-      '<p class="p"><span data-number="57" class="v">57</span>But thanks be to God, who gives us the victory through our Lord Jesus Christ. </p>',
-  },
-  {
-    __typename: 'Scripture',
-    id: 'EXO.17.8-EXO.17.15',
-    reference: 'Exodus 17:8-15',
-    html:
-      '<p class="p"><span data-number="8" class="v">8</span>Then Amalek came and fought with Israel in Rephidim. <span data-number="9" class="v">9</span>Moses said to Joshua, “Choose men for us, and go out to fight with Amalek. Tomorrow I will stand on the top of the hill with God’s rod in my hand.” <span data-number="10" class="v">10</span>So Joshua did as Moses had told him, and fought with Amalek; and Moses, Aaron, and Hur went up to the top of the hill. <span data-number="11" class="v">11</span>When Moses held up his hand, Israel prevailed. When he let down his hand, Amalek prevailed. <span data-number="12" class="v">12</span>But Moses’ hands were heavy; so they took a stone, and put it under him, and he sat on it. Aaron and Hur held up his hands, the one on the one side, and the other on the other side. His hands were steady until sunset. <span data-number="13" class="v">13</span>Joshua defeated Amalek and his people with the edge of the sword. <span data-number="14" class="v">14</span>Yahweh said to Moses, “Write this for a memorial in a book, and rehearse it in the ears of Joshua: that I will utterly blot out the memory of Amalek from under the sky.” <span data-number="15" class="v">15</span>Moses built an altar, and called its name “Yahweh our Banner”.</p>',
-  },
-];
-
-const scriptureMock = {
+const contentScriptureMock = {
   request: {
-    query: getScripture,
+    query: GET_SCRIPTURE,
     variables: { itemId: '1' },
   },
   result: {
     data: {
-      node: { scriptures, id: '1', __typename: 'DevotionalContentItem' },
+      node: {
+        __typename: 'DevotionalContentItem',
+        id: '1',
+        scriptures: [
+          {
+            __typename: 'Scripture',
+            id: '1CO.15.57',
+            reference: '1 Corinthians 15:57',
+            html:
+              '<p class="p"><span data-number="57" class="v">57</span>But thanks be to God, who gives us the victory through our Lord Jesus Christ. </p>',
+            copyright: 'PUBLIC DOMAIN',
+            version: 'WEB',
+          },
+          {
+            __typename: 'Scripture',
+            id: 'EXO.17.8-EXO.17.15',
+            reference: 'Exodus 17:8-15',
+            html:
+              '<p class="p"><span data-number="8" class="v">8</span>Then Amalek came and fought with Israel in Rephidim. <span data-number="9" class="v">9</span>Moses said to Joshua, “Choose men for us, and go out to fight with Amalek. Tomorrow I will stand on the top of the hill with God’s rod in my hand.” <span data-number="10" class="v">10</span>So Joshua did as Moses had told him, and fought with Amalek; and Moses, Aaron, and Hur went up to the top of the hill. <span data-number="11" class="v">11</span>When Moses held up his hand, Israel prevailed. When he let down his hand, Amalek prevailed. <span data-number="12" class="v">12</span>But Moses’ hands were heavy; so they took a stone, and put it under him, and he sat on it. Aaron and Hur held up his hands, the one on the one side, and the other on the other side. His hands were steady until sunset. <span data-number="13" class="v">13</span>Joshua defeated Amalek and his people with the edge of the sword. <span data-number="14" class="v">14</span>Yahweh said to Moses, “Write this for a memorial in a book, and rehearse it in the ears of Joshua: that I will utterly blot out the memory of Amalek from under the sky.” <span data-number="15" class="v">15</span>Moses built an altar, and called its name “Yahweh our Banner”.</p>',
+            copyright: 'PUBLIC DOMAIN',
+            version: 'WEB',
+          },
+        ],
+      },
     },
   },
 };
 
-const contentItemHTMLMock = {
+const contentHTMLMock = {
   request: {
-    query: getContentItemContent,
+    query: GET_CONTENT_ITEM_CONTENT,
     variables: { contentId: '1' },
   },
   result: {
     data: {
       node: {
+        __typename: 'DevotionalContentItem',
         id: '1',
         htmlContent: '<b>Some content!</b>',
-        __typename: 'DevotionalContentItem',
       },
     },
   },
 };
 
-const mocks = [scriptureMock, contentItemHTMLMock];
-
-const navigation = {
-  push: jest.fn(),
-};
+const mocks = [contentScriptureMock, contentHTMLMock];
 
 describe('the Devotional component', () => {
   it('renders a devotional', async () => {
+    const DevotionalStack = createStackNavigator({
+      Devotional: () => <Devotional id="1" content={{ title: 'Title' }} />, //eslint-disable-line
+    });
+    const DevotionalWithNavigation = createAppContainer(DevotionalStack);
     const tree = await renderWithApolloData(
       <Providers mocks={mocks}>
-        <Devotional
-          id="1"
-          content={content}
-          loading={false}
-          navigation={navigation}
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('renders even with empty scripture array', async () => {
-    const tree = await renderWithApolloData(
-      <Providers mocks={mocks}>
-        <Devotional
-          id="1"
-          content={content}
-          loading={false}
-          navigation={navigation}
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('renders a loading state', async () => {
-    const tree = renderer.create(
-      <Providers mocks={mocks}>
-        <Devotional id="1" content={content} loading navigation={navigation} />
+        <DevotionalWithNavigation />
       </Providers>
     );
     expect(tree).toMatchSnapshot();
diff --git a/apolloschurchapp/src/content-single/DevotionalContentItem/ScriptureTab.js b/apolloschurchapp/src/content-single/DevotionalContentItem/ScriptureTab.js
index 79ef066..c03f364 100644
--- a/apolloschurchapp/src/content-single/DevotionalContentItem/ScriptureTab.js
+++ b/apolloschurchapp/src/content-single/DevotionalContentItem/ScriptureTab.js
@@ -13,12 +13,17 @@ import HorizontalContentFeed from '../HorizontalContentFeed';
 const ScriptureTab = ({ id, scripture, isLoading, navigation }) => (
   <ScrollView>
     <PaddedView>
-      {scripture.map((ref) => (
+      {scripture.map((ref, i) => (
         <ScriptureItem
           key={ref.id}
           reference={ref.reference}
           html={ref.html}
           isLoading={isLoading}
+          copyright={
+            // only show last copyright
+            scripture.length - 1 === i ? ref.copyright : null
+          }
+          version={ref.version}
         />
       ))}
     </PaddedView>
@@ -40,6 +45,10 @@ ScriptureTab.propTypes = {
       reference: PropTypes.string,
       /** The scripture source to render */
       html: PropTypes.string,
+      /** The copyright of the Bible version */
+      copyright: PropTypes.string,
+      /** The Bible version abbreviation */
+      version: PropTypes.string,
     })
   ),
 };
diff --git a/apolloschurchapp/src/content-single/DevotionalContentItem/getScripture.js b/apolloschurchapp/src/content-single/DevotionalContentItem/getScripture.js
index 1f0fb59..c94dad9 100644
--- a/apolloschurchapp/src/content-single/DevotionalContentItem/getScripture.js
+++ b/apolloschurchapp/src/content-single/DevotionalContentItem/getScripture.js
@@ -10,6 +10,8 @@ export default gql`
           id
           html
           reference
+          copyright
+          version
         }
       }
     }
diff --git a/apolloschurchapp/src/content-single/DevotionalContentItem/index.js b/apolloschurchapp/src/content-single/DevotionalContentItem/index.js
index 088bbdc..2ddacec 100644
--- a/apolloschurchapp/src/content-single/DevotionalContentItem/index.js
+++ b/apolloschurchapp/src/content-single/DevotionalContentItem/index.js
@@ -2,6 +2,7 @@ import React, { PureComponent } from 'react';
 import PropTypes from 'prop-types';
 import { SafeAreaView } from 'react-navigation';
 import { Query } from 'react-apollo';
+import { get } from 'lodash';
 
 import {
   ErrorCard,
@@ -13,7 +14,7 @@ import {
 import ContentTab from './ContentTab';
 import ScriptureTab from './ScriptureTab';
 
-import getScripture from './getScripture';
+import GET_SCRIPTURE from './getScripture';
 
 const FlexedSafeAreaView = styled({ flex: 1 })(SafeAreaView);
 
@@ -80,13 +81,13 @@ class DevotionalContentItem extends PureComponent {
     />
   );
 
-  renderTabs = ({
-    data: { node: { scriptures = [] } = {} } = {},
-    error,
-    loading,
-  }) => {
+  renderLoading = () => <ContentTab title={''} isLoading />;
+
+  renderTabs = ({ data, error, loading }) => {
     if (error) return <ErrorCard error={error} />;
 
+    const scriptures = get(data, 'node.scriptures', []);
+
     // only include scriptures where the references are not null
     const validScriptures = scriptures
       ? scriptures.filter((scripture) => scripture.reference != null)
@@ -94,15 +95,17 @@ class DevotionalContentItem extends PureComponent {
 
     const hasScripture = loading || validScriptures.length;
     const tabRoutes = [{ title: 'Devotional', key: 'content' }];
-    if (hasScripture) tabRoutes.push({ title: 'Scripture', key: 'scripture' });
-    return (
-      <TabView
-        routes={tabRoutes}
-        renderScene={SceneMap({
-          content: this.contentRoute({ scriptures, loading }),
-          scripture: this.scriptureRoute({ scriptures, loading }),
-        })}
-      />
+    const map = {
+      content: this.contentRoute({ scriptures, loading }),
+    };
+    if (hasScripture) {
+      tabRoutes.push({ title: 'Scripture', key: 'scripture' });
+      map.scripture = this.scriptureRoute({ scriptures, loading });
+    }
+    return tabRoutes.length < 2 ? (
+      map[tabRoutes[0].key]()
+    ) : (
+      <TabView routes={tabRoutes} renderScene={SceneMap(map)} />
     );
   };
 
@@ -110,8 +113,12 @@ class DevotionalContentItem extends PureComponent {
     return (
       <BackgroundView>
         <FlexedSafeAreaView forceInset={{ top: 'always' }}>
-          <Query query={getScripture} variables={{ itemId: this.props.id }}>
-            {this.renderTabs}
+          <Query query={GET_SCRIPTURE} variables={{ itemId: this.props.id }}>
+            {({ data, loading, error }) =>
+              loading
+                ? this.renderLoading()
+                : this.renderTabs({ data, loading, error })
+            }
           </Query>
         </FlexedSafeAreaView>
       </BackgroundView>
diff --git a/apolloschurchapp/src/content-single/Features/ScriptureFeature.js b/apolloschurchapp/src/content-single/Features/ScriptureFeature.js
new file mode 100644
index 0000000..ed87622
--- /dev/null
+++ b/apolloschurchapp/src/content-single/Features/ScriptureFeature.js
@@ -0,0 +1,63 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+
+import { ActionCard } from '@apollosproject/ui-kit';
+import { ScriptureItem } from '@apollosproject/ui-scripture';
+import ShareContentButtonConnected from 'apolloschurchapp/src/ui/ShareContentButtonConnected';
+
+const ScriptureFeature = ({
+  scriptures,
+  sharing: { message } = {},
+  isLoading,
+  contentId,
+}) => (
+  <ActionCard
+    icon={'text'}
+    action={
+      <ShareContentButtonConnected message={message} itemId={contentId} />
+    }
+  >
+    {scriptures.map(({ copyright, reference, html, id, version }) => (
+      <ScriptureItem
+        key={id}
+        reference={reference}
+        html={html}
+        isLoading={isLoading}
+        copyright={copyright}
+        version={version}
+      />
+    ))}
+  </ActionCard>
+);
+
+ScriptureFeature.propTypes = {
+  isLoading: PropTypes.bool.isRequired,
+  scriptures: PropTypes.arrayOf(
+    PropTypes.shape({
+      html: PropTypes.string.isRequired,
+      reference: PropTypes.string.isRequired,
+      id: PropTypes.string.isRequired,
+      copyright: PropTypes.string,
+      version: PropTypes.string,
+    })
+  ),
+  sharing: PropTypes.shape({ message: PropTypes.string }),
+  contentId: PropTypes.string.isRequired,
+};
+
+export const SCRIPTURE_FEATURE_FRAGMENT = `
+fragment ScriptureFeatureFragment on ScriptureFeature {
+  sharing {
+    message
+  }
+  scriptures {
+    id
+    html
+    reference
+    copyright
+    version
+  }
+}
+`;
+
+export default ScriptureFeature;
diff --git a/apolloschurchapp/src/content-single/Features/TextFeature.js b/apolloschurchapp/src/content-single/Features/TextFeature.js
new file mode 100644
index 0000000..b4bb2a6
--- /dev/null
+++ b/apolloschurchapp/src/content-single/Features/TextFeature.js
@@ -0,0 +1,33 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+
+import { ActionCard, BodyText } from '@apollosproject/ui-kit';
+import ShareContentButtonConnected from 'apolloschurchapp/src/ui/ShareContentButtonConnected';
+
+const TextFeature = ({ body, sharing: { message } = {}, contentId }) => (
+  <ActionCard
+    action={
+      <ShareContentButtonConnected message={message} itemId={contentId} />
+    }
+  >
+    <BodyText>{body}</BodyText>
+  </ActionCard>
+);
+
+TextFeature.propTypes = {
+  body: PropTypes.string.isRequired,
+  sharing: PropTypes.shape({ message: PropTypes.string }),
+  contentId: PropTypes.string.isRequired,
+};
+
+export const TEXT_FEATURE_FRAGMENT = `
+fragment TextFeatureFragment on TextFeature {
+  body
+  id
+  sharing {
+    message
+  }
+}
+`;
+
+export default TextFeature;
diff --git a/apolloschurchapp/src/content-single/Features/getContentItemFeatures.js b/apolloschurchapp/src/content-single/Features/getContentItemFeatures.js
new file mode 100644
index 0000000..a015cec
--- /dev/null
+++ b/apolloschurchapp/src/content-single/Features/getContentItemFeatures.js
@@ -0,0 +1,32 @@
+import gql from 'graphql-tag';
+import { TEXT_FEATURE_FRAGMENT } from './TextFeature';
+import { SCRIPTURE_FEATURE_FRAGMENT } from './ScriptureFeature';
+
+const FEATURES_FRAGMENT = `
+  fragment FeaturesFragment on Feature {
+    id
+    ...TextFeatureFragment
+    ...ScriptureFeatureFragment
+  }
+  ${TEXT_FEATURE_FRAGMENT}
+  ${SCRIPTURE_FEATURE_FRAGMENT}
+`;
+
+export default gql`
+  query contentItemFeatures($contentId: ID!) {
+    node(id: $contentId) {
+      id
+      ... on ContentSeriesContentItem {
+        features {
+          ...FeaturesFragment
+        }
+      }
+      ... on WeekendContentItem {
+        features {
+          ...FeaturesFragment
+        }
+      }
+    }
+  }
+  ${FEATURES_FRAGMENT}
+`;
diff --git a/apolloschurchapp/src/content-single/Features/index.js b/apolloschurchapp/src/content-single/Features/index.js
new file mode 100644
index 0000000..e345e37
--- /dev/null
+++ b/apolloschurchapp/src/content-single/Features/index.js
@@ -0,0 +1,55 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import { Query } from 'react-apollo';
+import { ErrorCard, H3, PaddedView } from '@apollosproject/ui-kit';
+import { get } from 'lodash';
+import TextFeature from './TextFeature';
+import ScriptureFeature from './ScriptureFeature';
+
+import GET_CONTENT_ITEM_FEATURES from './getContentItemFeatures';
+
+const FEATURE_MAP = {
+  TextFeature,
+  ScriptureFeature,
+};
+
+const Features = ({ contentId }) => {
+  if (!contentId) return null;
+
+  return (
+    <Query
+      query={GET_CONTENT_ITEM_FEATURES}
+      fetchPolicy="cache-and-network"
+      variables={{ contentId }}
+    >
+      {({ data: { node } = {}, loading, error }) => {
+        if (error) return <ErrorCard error={error} />;
+        if (loading) return null;
+
+        const features = get(node, 'features', []);
+        if (!features || !features.length) return null;
+
+        return (
+          <PaddedView horizontal={false}>
+            <PaddedView vertical={false}>
+              <H3 padded>Engage</H3>
+            </PaddedView>
+            {features.map(({ __typename, ...feature }) => {
+              const Feature = FEATURE_MAP[__typename];
+              if (!Feature) return null;
+              return (
+                <Feature key={feature.id} {...feature} contentId={contentId} />
+              );
+            })}
+          </PaddedView>
+        );
+      }}
+    </Query>
+  );
+};
+
+Features.propTypes = {
+  contentId: PropTypes.string,
+};
+
+export default Features;
diff --git a/apolloschurchapp/src/content-single/HTMLContent/index.js b/apolloschurchapp/src/content-single/HTMLContent/index.js
index 39c62bc..b830a1d 100644
--- a/apolloschurchapp/src/content-single/HTMLContent/index.js
+++ b/apolloschurchapp/src/content-single/HTMLContent/index.js
@@ -1,21 +1,35 @@
 import React from 'react';
 import PropTypes from 'prop-types';
 import { Query } from 'react-apollo';
+import InAppBrowser from 'react-native-inappbrowser-reborn';
 
 import HTMLView from '@apollosproject/ui-htmlview';
 import { ErrorCard } from '@apollosproject/ui-kit';
 
-import getContentItemContent from './getContentItemContent';
+import GET_CONTENT_ITEM_CONTENT from './getContentItemContent';
+
+function handlePressAnchor(url) {
+  return InAppBrowser.open(url);
+}
 
 const HTMLContent = ({ contentId }) => {
   if (!contentId) return <HTMLView isLoading />;
 
   return (
-    <Query query={getContentItemContent} variables={{ contentId }}>
+    <Query
+      query={GET_CONTENT_ITEM_CONTENT}
+      variables={{ contentId }}
+      fetchPolicy={'cache-and-network'}
+    >
       {({ data: { node: { htmlContent } = {} } = {}, loading, error }) => {
-        if (error) return <ErrorCard error={error} />;
+        if (!htmlContent && error) return <ErrorCard error={error} />;
         return (
-          <HTMLView isLoading={!htmlContent && loading}>{htmlContent}</HTMLView>
+          <HTMLView
+            isLoading={!htmlContent && loading}
+            onPressAnchor={handlePressAnchor}
+          >
+            {htmlContent}
+          </HTMLView>
         );
       }}
     </Query>
diff --git a/apolloschurchapp/src/content-single/HorizontalContentFeed/HorizontalContentFeed.tests.js b/apolloschurchapp/src/content-single/HorizontalContentFeed/HorizontalContentFeed.tests.js
new file mode 100644
index 0000000..182f5e1
--- /dev/null
+++ b/apolloschurchapp/src/content-single/HorizontalContentFeed/HorizontalContentFeed.tests.js
@@ -0,0 +1,206 @@
+import React from 'react';
+import Providers from 'apolloschurchapp/src/Providers';
+import { renderWithApolloData } from 'apolloschurchapp/src/utils/testUtils';
+import GET_CONTENT_CARD from '../../ui/ContentCardConnected/query';
+import GET_HORIZONTAL_CONTENT from './getHorizontalContent';
+import HorizontalContentFeed from '.';
+
+const mock = {
+  request: {
+    query: GET_HORIZONTAL_CONTENT,
+    variables: { itemId: 'ContentSeriesContentItem:123' },
+  },
+  result: {
+    data: {
+      node: {
+        id: 'ContentSeriesContentItem:123',
+        childContentItemsConnection: {
+          edges: [
+            {
+              cursor: 'b487224762b030f470967f45d7205823',
+              node: {
+                id: 'DevotionalContentItem:d395278cd4b68e074ca4e595c8feab6d',
+                coverImage: {
+                  name: 'Square Image',
+                  sources: [
+                    {
+                      uri:
+                        'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D31af1a61-360c-4b1e-8e62-45517c06a9a2',
+                      __typename: 'ImageMediaSource',
+                    },
+                  ],
+                  __typename: 'ImageMedia',
+                },
+                parentChannel: {
+                  id: 'ContentChannel:559b23fd0aa90e81b1c023e72e230fa1',
+                  name: 'Devotional',
+                  iconName: 'text',
+                  __typename: 'ContentChannel',
+                },
+                title: 'God sees who you can be not who you are',
+                sharing: {
+                  url:
+                    'https://apollosrock.newspring.cc/devotional/god-sees-who-you-can-be-not-who-you-are',
+                  message:
+                    'God sees who you can be not who you are - Life is challenging enough.',
+                  title: 'Share via ...',
+                  __typename: 'SharableContentItem',
+                },
+                __typename: 'DevotionalContentItem',
+              },
+              __typename: 'ContentItemsConnectionEdge',
+            },
+            {
+              cursor: '4affc1122ad80d4edcf6c5bc9d88ae99',
+              node: {
+                id: 'DevotionalContentItem:fbea6914a3e8877516cbd333d919075d',
+                coverImage: {
+                  name: 'Square Image',
+                  sources: [
+                    {
+                      uri:
+                        'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D31af1a61-360c-4b1e-8e62-45517c06a9a2',
+                      __typename: 'ImageMediaSource',
+                    },
+                  ],
+                  __typename: 'ImageMedia',
+                },
+                parentChannel: {
+                  id: 'ContentChannel:559b23fd0aa90e81b1c023e72e230fa1',
+                  name: 'Devotional',
+                  iconName: 'text',
+                  __typename: 'ContentChannel',
+                },
+                title: 'Thank God for the friends who will tell it like it is',
+                sharing: {
+                  url:
+                    'https://apollosrock.newspring.cc/devotional/thank-god-for-the-friends-who-will-tell-it-like-it-is',
+                  message:
+                    'Thank God for the friends who will tell it like it is - Some of us grew up in a sanitized church.',
+                  title: 'Share via ...',
+                  __typename: 'SharableContentItem',
+                },
+                __typename: 'DevotionalContentItem',
+              },
+              __typename: 'ContentItemsConnectionEdge',
+            },
+            {
+              cursor: '659a26257a49fb2bf1446bb747bf7dd3',
+              node: {
+                id: 'DevotionalContentItem:5e18250f586ab8de4d3d6292c919dcc4',
+                coverImage: {
+                  name: 'Square Image',
+                  sources: [
+                    {
+                      uri:
+                        'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D31af1a61-360c-4b1e-8e62-45517c06a9a2',
+                      __typename: 'ImageMediaSource',
+                    },
+                  ],
+                  __typename: 'ImageMedia',
+                },
+                parentChannel: {
+                  id: 'ContentChannel:559b23fd0aa90e81b1c023e72e230fa1',
+                  name: 'Devotional',
+                  iconName: 'text',
+                  __typename: 'ContentChannel',
+                },
+                title: 'No sin is too bad',
+                sharing: {
+                  url:
+                    'https://apollosrock.newspring.cc/devotional/no-sin-is-too-bad',
+                  message:
+                    'No sin is too bad - In Jeremiah 3, God’s people had really messed up.',
+                  title: 'Share via ...',
+                  __typename: 'SharableContentItem',
+                },
+                __typename: 'DevotionalContentItem',
+              },
+              __typename: 'ContentItemsConnectionEdge',
+            },
+            {
+              cursor: 'c8d2fe738629909c33010432432f21c8',
+              node: {
+                id: 'DevotionalContentItem:bdc2c29b85949e4ca8232b373a07953d',
+                coverImage: {
+                  name: 'Square Image',
+                  sources: [
+                    {
+                      uri:
+                        'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D31af1a61-360c-4b1e-8e62-45517c06a9a2',
+                      __typename: 'ImageMediaSource',
+                    },
+                  ],
+                  __typename: 'ImageMedia',
+                },
+                parentChannel: {
+                  id: 'ContentChannel:559b23fd0aa90e81b1c023e72e230fa1',
+                  name: 'Devotional',
+                  iconName: 'text',
+                  __typename: 'ContentChannel',
+                },
+                title: 'Change starts with a choice',
+                sharing: {
+                  url:
+                    'https://apollosrock.newspring.cc/devotional/change-starts-with-a-choice',
+                  message:
+                    'Change starts with a choice - Have you ever restored an old piece of furniture?',
+                  title: 'Share via ...',
+                  __typename: 'SharableContentItem',
+                },
+                __typename: 'DevotionalContentItem',
+              },
+              __typename: 'ContentItemsConnectionEdge',
+            },
+          ],
+          __typename: 'ContentItemsConnection',
+        },
+        siblingContentItemsConnection: {
+          edges: [],
+          __typename: 'ContentItemsConnection',
+        },
+        __typename: 'ContentSeriesContentItem',
+      },
+    },
+  },
+};
+
+const navigation = {
+  push: jest.fn(),
+};
+
+const additionalMocks = mock.result.data.node.childContentItemsConnection.edges.map(
+  ({ node }) => ({
+    request: {
+      query: GET_CONTENT_CARD,
+      variables: { contentId: node.id },
+    },
+    result: {
+      data: {
+        node: {
+          ...node,
+          summary: 'bla bla bla',
+          isLiked: false,
+          theme: null,
+          coverImage: null,
+        },
+      },
+    },
+  })
+);
+
+console.log(additionalMocks);
+
+describe('the HorizontalContentFeed component', () => {
+  it('renders a horizontal content feed', async () => {
+    const tree = await renderWithApolloData(
+      <Providers mocks={[mock, ...additionalMocks]}>
+        <HorizontalContentFeed
+          contentId={'ContentSeriesContentItem:123'}
+          navigation={navigation}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/content-single/HorizontalContentFeed/getHorizontalContent.js b/apolloschurchapp/src/content-single/HorizontalContentFeed/getHorizontalContent.js
index b0b77bc..a1e7c23 100644
--- a/apolloschurchapp/src/content-single/HorizontalContentFeed/getHorizontalContent.js
+++ b/apolloschurchapp/src/content-single/HorizontalContentFeed/getHorizontalContent.js
@@ -1,59 +1,29 @@
 import gql from 'graphql-tag';
+import { BASE_CARD_FRAGMENT } from '../../ui/ContentCardConnected/query';
 
 export default gql`
-  query getHorizontalContent($itemId: ID!) {
+  query getHorizontalContent($itemId: ID!, $cursor: String) {
     node(id: $itemId) {
       ... on ContentItem {
         id
-        childContentItemsConnection {
+        childContentItemsConnection(after: $cursor) {
           edges {
+            cursor
             node {
-              id
-              coverImage {
-                name
-                sources {
-                  uri
-                }
-              }
-              parentChannel {
-                id
-                name
-                iconName
-              }
-              title
-              sharing {
-                url
-                message
-                title
-              }
+              ...baseCardFragment
             }
           }
         }
-        siblingContentItemsConnection {
+        siblingContentItemsConnection(after: $cursor) {
           edges {
+            cursor
             node {
-              id
-              coverImage {
-                name
-                sources {
-                  uri
-                }
-              }
-              parentChannel {
-                id
-                name
-                iconName
-              }
-              title
-              sharing {
-                url
-                message
-                title
-              }
+              ...baseCardFragment
             }
           }
         }
       }
     }
   }
+  ${BASE_CARD_FRAGMENT}
 `;
diff --git a/apolloschurchapp/src/content-single/HorizontalContentFeed/index.js b/apolloschurchapp/src/content-single/HorizontalContentFeed/index.js
index c0a236f..f5f356f 100644
--- a/apolloschurchapp/src/content-single/HorizontalContentFeed/index.js
+++ b/apolloschurchapp/src/content-single/HorizontalContentFeed/index.js
@@ -4,13 +4,11 @@ import PropTypes from 'prop-types';
 import { withNavigation } from 'react-navigation';
 import { Query } from 'react-apollo';
 
-import {
-  CardTile,
-  HorizontalTileFeed,
-  TouchableScale,
-} from '@apollosproject/ui-kit';
+import { HorizontalTileFeed, TouchableScale } from '@apollosproject/ui-kit';
 
-import getHorizontalContent from './getHorizontalContent';
+import HorizontalContentCardConnected from '../../ui/HorizontalContentCardConnected';
+
+import GET_HORIZONTAL_CONTENT from './getHorizontalContent';
 
 const loadingStateObject = {
   node: {
@@ -28,50 +26,78 @@ class HorizontalContentFeed extends Component {
     }),
   };
 
+  renderItem = ({ item }) => {
+    const itemId = get(item, 'id', '');
+    const disabled = get(item, 'id', '') === this.props.contentId;
+    return (
+      <TouchableScale
+        onPress={() => this.handleOnPressItem(item)}
+        disabled={disabled}
+      >
+        <HorizontalContentCardConnected
+          contentId={itemId}
+          disabled={disabled}
+        />
+      </TouchableScale>
+    );
+  };
+
   handleOnPressItem = (item) => {
     this.props.navigation.push('ContentSingle', {
       itemId: item.id,
     });
   };
 
-  renderItem = ({ item, index }) => (
-    <TouchableScale onPress={() => this.handleOnPressItem(item)}>
-      <CardTile
-        number={index + 1}
-        title={get(item, 'title', '')}
-        /*
-         * These are props that are not yet being passed in the data.
-         * We will need to make sure they get added back when that data is available.
-         * byLine={item.content.speaker}
-         * date={item.meta.date}
-         */
-      />
-    </TouchableScale>
-  );
-
-  renderFeed = ({ data, loading, error }) => {
+  renderFeed = ({ data, loading, error, fetchMore }) => {
     if (error) return null;
+    if (loading) return null;
 
-    const childContent = get(
-      data,
-      'node.childContentItemsConnection.edges',
-      []
-    ).map((edge) => edge.node);
-
-    const siblingContent = get(
-      data,
-      'node.siblingContentItemsConnection.edges',
-      []
-    ).map((edge) => edge.node);
+    const children = get(data, 'node.childContentItemsConnection.edges', []);
+    const siblings = get(data, 'node.siblingContentItemsConnection.edges', []);
+    const isParent = children.length > 0;
 
-    const content = siblingContent.length ? siblingContent : childContent;
+    const edges = isParent ? children : siblings;
+    const content = edges.map((edge) => edge.node);
+    const { cursor } = edges.length && edges[edges.length - 1];
+    const currentIndex = content.findIndex(
+      ({ id }) => id === this.props.contentId
+    );
+    const initialScrollIndex = currentIndex === -1 ? 0 : currentIndex;
 
-    return (content && content.length) || loading ? (
+    return content && content.length ? (
       <HorizontalTileFeed
         content={content}
-        isLoading={loading}
         loadingStateObject={loadingStateObject}
         renderItem={this.renderItem}
+        initialScrollIndex={initialScrollIndex}
+        getItemLayout={(itemData, index) => ({
+          // We need to pass this function so that initialScrollIndex will work.
+          length: 240,
+          offset: 240 * index,
+          index,
+        })}
+        onEndReached={() =>
+          fetchMore({
+            query: GET_HORIZONTAL_CONTENT,
+            variables: { cursor, itemId: this.props.contentId },
+            updateQuery: (previousResult, { fetchMoreResult }) => {
+              const connection = isParent
+                ? 'childContentItemsConnection'
+                : 'siblingContentItemsConnection';
+              const newEdges = get(fetchMoreResult.node, connection, []).edges;
+
+              return {
+                node: {
+                  ...previousResult.node,
+                  [connection]: {
+                    ...previousResult.node[connection],
+                    edges: [...edges, ...newEdges],
+                  },
+                },
+              };
+            },
+          })
+        }
       />
     ) : null;
   };
@@ -81,7 +107,7 @@ class HorizontalContentFeed extends Component {
 
     return (
       <Query
-        query={getHorizontalContent}
+        query={GET_HORIZONTAL_CONTENT}
         variables={{ itemId: this.props.contentId }}
       >
         {this.renderFeed}
diff --git a/apolloschurchapp/src/content-single/MediaControls/getContentMedia.js b/apolloschurchapp/src/content-single/MediaControls/getContentMedia.js
index 8ab3d1a..595c8cd 100644
--- a/apolloschurchapp/src/content-single/MediaControls/getContentMedia.js
+++ b/apolloschurchapp/src/content-single/MediaControls/getContentMedia.js
@@ -1,26 +1,33 @@
 import gql from 'graphql-tag';
 
+export const contentMediaFragment = gql`
+  fragment contentMediaFragment on ContentItem {
+    id
+    title
+    parentChannel {
+      id
+      name
+    }
+    coverImage {
+      sources {
+        uri
+      }
+    }
+    videos {
+      sources {
+        uri
+      }
+    }
+  }
+`;
+
 export default gql`
   query getContentMedia($contentId: ID!) {
     node(id: $contentId) {
       ... on ContentItem {
-        id
-        title
-        parentChannel {
-          id
-          name
-        }
-        coverImage {
-          sources {
-            uri
-          }
-        }
-        videos {
-          sources {
-            uri
-          }
-        }
+        ...contentMediaFragment
       }
     }
   }
+  ${contentMediaFragment}
 `;
diff --git a/apolloschurchapp/src/content-single/MediaControls/index.js b/apolloschurchapp/src/content-single/MediaControls/index.js
index 96ae490..8df4c20 100644
--- a/apolloschurchapp/src/content-single/MediaControls/index.js
+++ b/apolloschurchapp/src/content-single/MediaControls/index.js
@@ -4,48 +4,86 @@ import { Query, Mutation } from 'react-apollo';
 import { View } from 'react-native';
 import { get } from 'lodash';
 
-import { playVideoMutation } from '@apollosproject/ui-media-player';
-import { Icon, styled, Button } from '@apollosproject/ui-kit';
-import getContentMedia from './getContentMedia';
-
-const buttonSizeDifferential = 4;
-
-const MediaIcon = Icon; // todo: add back styles
-const MediaButton = styled(({ theme }) => ({
-  width: theme.sizing.baseUnit * buttonSizeDifferential,
-  height: theme.sizing.baseUnit * buttonSizeDifferential,
-  borderRadius: theme.sizing.baseUnit * (buttonSizeDifferential / 2),
-  backgroundColor: theme.colors.secondary,
-  justifyContent: 'center',
-  alignItems: 'center',
-  borderWidth: 0, // remove default button border
-}))(Button);
-
-/** MediaButtton "border styles" live in a seperate component so that Android places it's elevation
- * shadow in the right place. */
-const MediaButtonBorder = styled(({ theme }) => ({
-  borderRadius:
-    theme.sizing.baseUnit * (buttonSizeDifferential / 2) +
-    buttonSizeDifferential, // this is eqivalent to the MediaButton size above + the padding below
-  padding: buttonSizeDifferential, // padding + backgroundColor = MediaButton + "borderStyles"
-  backgroundColor: theme.colors.paper,
-}))(View);
+import { PLAY_VIDEO } from '@apollosproject/ui-media-player';
+import {
+  styled,
+  TouchableScale,
+  MediaThumbnail,
+  MediaThumbnailIcon,
+  MediaThumbnailItem,
+  H6,
+} from '@apollosproject/ui-kit';
+import { WebBrowserConsumer } from 'apolloschurchapp/src/ui/WebBrowser';
+import { LiveConsumer } from '../../live';
+import GET_CONTENT_MEDIA from './getContentMedia';
 
 const Container = styled(({ theme }) => ({
   flexDirection: 'row',
-  alignItems: 'center',
-  justifyContent: 'center',
-  marginTop:
-    -theme.sizing.baseUnit * (buttonSizeDifferential / 2) -
-    buttonSizeDifferential, // MediaButton size / 2 + border
+  alignItems: 'flex-start',
+  justifyContent: 'flex-start',
+  marginTop: -(theme.sizing.baseUnit * 2.5),
 }))(View);
 
+const StyledMediaThumbnail = styled({ marginVertical: 0 })(MediaThumbnail);
+
 class MediaControls extends PureComponent {
   static propTypes = {
     contentId: PropTypes.string,
   };
 
+  renderPlayButton = ({ action, coverImageSources }) => (
+    <Container>
+      <TouchableScale onPress={action}>
+        <StyledMediaThumbnail image={coverImageSources}>
+          <MediaThumbnailItem centered>
+            <MediaThumbnailIcon name="play" />
+          </MediaThumbnailItem>
+          <MediaThumbnailItem centered bottom>
+            <H6 padded>Play</H6>
+          </MediaThumbnailItem>
+        </StyledMediaThumbnail>
+      </TouchableScale>
+    </Container>
+  );
+
+  renderMedia = ({
+    videoSource,
+    coverImageSources,
+    title,
+    parentChannelName,
+  }) => (
+    <Mutation mutation={PLAY_VIDEO}>
+      {(play) =>
+        this.renderPlayButton({
+          action: () =>
+            play({
+              variables: {
+                mediaSource: videoSource,
+                posterSources: coverImageSources,
+                title,
+                isVideo: true,
+                artist: parentChannelName,
+              },
+            }),
+          coverImageSources,
+        })
+      }
+    </Mutation>
+  );
+
+  renderWebView = ({ webViewUrl, coverImageSources }) => (
+    <WebBrowserConsumer>
+      {(openUrl) =>
+        this.renderPlayButton({
+          action: () => openUrl(webViewUrl),
+          coverImageSources,
+        })
+      }
+    </WebBrowserConsumer>
+  );
+
   renderControls = ({
+    liveStream,
     loading,
     error,
     data: {
@@ -53,50 +91,62 @@ class MediaControls extends PureComponent {
     } = {},
   }) => {
     if (loading || error) return null;
+    const isLive = !!liveStream;
+    const hasLiveStreamContent = !!(
+      get(liveStream, 'webViewUrl') || get(liveStream, 'media.sources[0]')
+    );
 
     const videoSource = get(videos, '[0].sources[0]', null);
+    const shouldRender = (isLive && hasLiveStreamContent) || videoSource;
+
+    if (!shouldRender) return null;
+
     const coverImageSources = (coverImage && coverImage.sources) || [];
 
-    return (
-      <Mutation mutation={playVideoMutation}>
-        {(play) => (
-          <Container>
-            {videoSource ? (
-              <MediaButtonBorder>
-                <MediaButton
-                  type="primary"
-                  onPress={() =>
-                    play({
-                      variables: {
-                        mediaSource: videoSource,
-                        posterSources: coverImageSources,
-                        title,
-                        isVideo: true,
-                        artist: parentChannel.name,
-                      },
-                    })
-                  }
-                  useForeground
-                >
-                  <MediaIcon name="play" />
-                </MediaButton>
-              </MediaButtonBorder>
-            ) : null}
-          </Container>
-        )}
-      </Mutation>
-    );
+    // Content is live, and we have a livestream media
+    if (isLive && get(liveStream, 'media.sources[0].uri')) {
+      return this.renderMedia({
+        coverImageSources,
+        videoSource: liveStream.media.sources[0],
+        parentChannelName: parentChannel.name,
+        title,
+      });
+    }
+
+    // Content is live, and we don't have a livestream media
+    // but we do have a webview url
+    if (isLive && get(liveStream, 'webViewUrl')) {
+      return this.renderWebView({
+        webViewUrl: liveStream.webViewUrl,
+        coverImageSources,
+      });
+    }
+
+    // Default case, normal media.
+    return this.renderMedia({
+      coverImageSources,
+      videoSource,
+      parentChannelName: parentChannel.name,
+      title,
+    });
   };
 
   render() {
     if (!this.props.contentId) return null;
     return (
-      <Query
-        query={getContentMedia}
-        variables={{ contentId: this.props.contentId }}
-      >
-        {this.renderControls}
-      </Query>
+      <LiveConsumer contentId={this.props.contentId}>
+        {(liveStream) => (
+          <Query
+            query={GET_CONTENT_MEDIA}
+            fetchPolicy="cache-and-network"
+            variables={{ contentId: this.props.contentId }}
+          >
+            {({ data, loading, error }) =>
+              this.renderControls({ data, loading, error, liveStream })
+            }
+          </Query>
+        )}
+      </LiveConsumer>
     );
   }
 }
diff --git a/apolloschurchapp/src/content-single/NavigationHeader.js b/apolloschurchapp/src/content-single/NavigationHeader.js
index a2e3204..15b9d7b 100644
--- a/apolloschurchapp/src/content-single/NavigationHeader.js
+++ b/apolloschurchapp/src/content-single/NavigationHeader.js
@@ -4,24 +4,9 @@ import { ModalViewHeader } from '@apollosproject/ui-kit';
 
 const NavigationHeader = ({ scene, navigation }) => {
   let onBack = null;
-  if (scene.index > 0) onBack = () => navigation.goBack();
+  if (scene.index > 0) onBack = () => navigation.pop();
   const onClose = () => {
-    // Since we're dealing with nested navigators, we have to trigger two actions:
-    // One action that pops us to the top of the modal's navigation history
-    // Another action that pops us one more level, which triggers the modal to close.
-    //
-    // FWIW, calling something like `.pop(scenes.length + 1)` or something does not work,
-    // as that results in the same thing as `.popToTop()`. React-Navigation must have some special-case
-    // handling for calling `.pop()` at the top of a nested navigators stack.
-    //
-    // Because react (or redux?) chains renders, this still results in only one clean animation!
-    //
-    // This "double pop" is only needed when we are already deep in a navigation stack.
-    // In ReactNavigation, we could look at using "goBack('ContentSingle')"
-    if (scene.index > 0) {
-      navigation.popToTop();
-    }
-    navigation.pop();
+    navigation.goBack();
   };
 
   return <ModalViewHeader onClose={onClose} onBack={onBack} navigationHeader />;
diff --git a/apolloschurchapp/src/content-single/UniversalContentItem/index.js b/apolloschurchapp/src/content-single/UniversalContentItem/index.js
index 80c9aae..c4031b4 100644
--- a/apolloschurchapp/src/content-single/UniversalContentItem/index.js
+++ b/apolloschurchapp/src/content-single/UniversalContentItem/index.js
@@ -8,10 +8,12 @@ import {
   BackgroundView,
   PaddedView,
   H2,
+  StretchyView,
 } from '@apollosproject/ui-kit';
 import MediaControls from '../MediaControls';
 import HTMLContent from '../HTMLContent';
 import HorizontalContentFeed from '../HorizontalContentFeed';
+import Features from '../Features';
 
 const FlexedScrollView = styled({ flex: 1 })(ScrollView);
 
@@ -19,22 +21,30 @@ const UniversalContentItem = ({ content, loading }) => {
   const coverImageSources = get(content, 'coverImage.sources', []);
   return (
     <BackgroundView>
-      <FlexedScrollView>
-        {coverImageSources.length || loading ? (
-          <GradientOverlayImage
-            isLoading={!coverImageSources.length && loading}
-            source={coverImageSources}
-          />
-        ) : null}
-        <MediaControls contentId={content.id} />
-        <PaddedView>
-          <H2 padded isLoading={!content.title && loading}>
-            {content.title}
-          </H2>
-          <HTMLContent contentId={content.id} />
-        </PaddedView>
-        <HorizontalContentFeed contentId={content.id} />
-      </FlexedScrollView>
+      <StretchyView>
+        {({ Stretchy, ...scrollViewProps }) => (
+          <FlexedScrollView {...scrollViewProps}>
+            {coverImageSources.length || loading ? (
+              <Stretchy>
+                <GradientOverlayImage
+                  isLoading={!coverImageSources.length && loading}
+                  source={coverImageSources}
+                />
+              </Stretchy>
+            ) : null}
+            <MediaControls contentId={content.id} />
+            {/* fixes text/navigation spacing by adding vertical padding if we dont have an image */}
+            <PaddedView vertical={!coverImageSources.length}>
+              <H2 padded isLoading={!content.title && loading}>
+                {content.title}
+              </H2>
+              <HTMLContent contentId={content.id} />
+            </PaddedView>
+            <Features contentId={content.id} />
+            <HorizontalContentFeed contentId={content.id} />
+          </FlexedScrollView>
+        )}
+      </StretchyView>
     </BackgroundView>
   );
 };
diff --git a/apolloschurchapp/src/content-single/WeekendContentItem/index.js b/apolloschurchapp/src/content-single/WeekendContentItem/index.js
new file mode 100644
index 0000000..3bca1c5
--- /dev/null
+++ b/apolloschurchapp/src/content-single/WeekendContentItem/index.js
@@ -0,0 +1,112 @@
+import React from 'react';
+import { ScrollView, Dimensions } from 'react-native';
+import { get } from 'lodash';
+import PropTypes from 'prop-types';
+import {
+  styled,
+  GradientOverlayImage,
+  BackgroundView,
+  PaddedView,
+  H2,
+  StretchyView,
+  ThemeMixin,
+  ThemeConsumer,
+  CardLabel,
+  withTheme,
+} from '@apollosproject/ui-kit';
+import MediaControls from '../MediaControls';
+import HTMLContent from '../HTMLContent';
+import HorizontalContentFeed from '../HorizontalContentFeed';
+import Features from '../Features';
+import { LiveConsumer } from '../../live';
+
+const FlexedScrollView = styled({ flex: 1 })(ScrollView);
+
+const Header = styled(({ hasMedia, theme }) => ({
+  paddingTop: Dimensions.get('window').width * 0.5, // for some reason % based padding still is buggy
+  alignItems: 'flex-start',
+  paddingBottom: hasMedia ? theme.sizing.baseUnit : theme.sizing.baseUnit * 2,
+  // backgroundColor: theme.colors.primary,
+}))(PaddedView);
+
+const LiveAwareLabel = withTheme(({ isLive, title, theme }) => ({
+  ...(isLive
+    ? {
+        title: 'Live',
+        type: 'secondary',
+        icon: 'live-dot',
+        iconSize: theme.helpers.rem(0.4375), // using our typographic size unit based on fontSize so that the icon scales correctly with font size changes.
+      }
+    : {
+        title,
+      }),
+}))(CardLabel);
+
+const WeekendContentItem = ({ content, loading }) => {
+  const coverImageSources = get(content, 'coverImage.sources', []);
+  return (
+    <ThemeMixin mixin={content.theme || {}}>
+      <ThemeConsumer>
+        {(theme) => (
+          <BackgroundView>
+            <StretchyView>
+              {({ Stretchy, ...scrollViewProps }) => (
+                <FlexedScrollView {...scrollViewProps}>
+                  <Header hasMedia={content.videos && content.videos.sources}>
+                    <ThemeMixin mixin={{ type: 'dark' }}>
+                      {coverImageSources.length || loading ? (
+                        <Stretchy
+                          background
+                          style={{ backgroundColor: theme.colors.primary }}
+                        >
+                          <GradientOverlayImage
+                            isLoading={!coverImageSources.length && loading}
+                            overlayColor={theme.colors.primary}
+                            overlayType="featured"
+                            source={coverImageSources}
+                          />
+                        </Stretchy>
+                      ) : null}
+                      <LiveConsumer contentId={content.id}>
+                        {(liveStream) => (
+                          <LiveAwareLabel
+                            isLive={!!liveStream}
+                            title={
+                              content.parentChannel &&
+                              content.parentChannel.name
+                            }
+                          />
+                        )}
+                      </LiveConsumer>
+                      <H2 padded isLoading={!content.title && loading}>
+                        {content.title}
+                      </H2>
+                      <HTMLContent contentId={content.id} />
+                    </ThemeMixin>
+                  </Header>
+                  <MediaControls contentId={content.id} />
+                  <Features contentId={content.id} />
+                  <HorizontalContentFeed contentId={content.id} />
+                </FlexedScrollView>
+              )}
+            </StretchyView>
+          </BackgroundView>
+        )}
+      </ThemeConsumer>
+    </ThemeMixin>
+  );
+};
+
+WeekendContentItem.propTypes = {
+  content: PropTypes.shape({
+    __typename: PropTypes.string,
+    parentChannel: PropTypes.shape({
+      name: PropTypes.string,
+    }),
+    id: PropTypes.string,
+    title: PropTypes.string,
+  }),
+  loading: PropTypes.bool,
+};
+
+export default WeekendContentItem;
diff --git a/apolloschurchapp/src/content-single/getContentItem.js b/apolloschurchapp/src/content-single/getContentItem.js
index b4ebc19..c0652ea 100644
--- a/apolloschurchapp/src/content-single/getContentItem.js
+++ b/apolloschurchapp/src/content-single/getContentItem.js
@@ -1,12 +1,11 @@
 import gql from 'graphql-tag';
 
-export const contentItemFragment = gql`
+export const CONTENT_ITEM_FRAGMENT = gql`
   fragment contentItemFragment on ContentItem {
     id
     title
-    isLiked
-    likedCount
     summary
+    htmlContent
     coverImage {
       name
       sources {
@@ -48,5 +47,5 @@ export default gql`
       }
     }
   }
-  ${contentItemFragment}
+  ${CONTENT_ITEM_FRAGMENT}
 `;
diff --git a/apolloschurchapp/src/content-single/index.js b/apolloschurchapp/src/content-single/index.js
index 83072a7..1e5b838 100644
--- a/apolloschurchapp/src/content-single/index.js
+++ b/apolloschurchapp/src/content-single/index.js
@@ -10,11 +10,8 @@ const ContentSingleNavigator = createStackNavigator(
     initialRouteName: 'ContentSingle',
     headerMode: 'float',
     headerTransitionPreset: 'fade-in-place',
+    navigationOptions: { header: null },
   }
 );
 
-ContentSingleNavigator.navigationOptions = {
-  header: null,
-};
-
 export default ContentSingleNavigator;
diff --git a/apolloschurchapp/src/event/Event.js b/apolloschurchapp/src/event/Event.js
new file mode 100644
index 0000000..be51790
--- /dev/null
+++ b/apolloschurchapp/src/event/Event.js
@@ -0,0 +1,75 @@
+import React from 'react';
+import { get } from 'lodash';
+import PropTypes from 'prop-types';
+import moment from 'moment';
+import InAppBrowser from 'react-native-inappbrowser-reborn';
+import {
+  GradientOverlayImage,
+  BackgroundView,
+  PaddedView,
+  H2,
+  Paragraph,
+  StretchyView,
+} from '@apollosproject/ui-kit';
+import HTMLView from '@apollosproject/ui-htmlview';
+
+import { FlexedScrollView, EventInfoItem } from './components';
+
+const handlePressAnchor = (url) => {
+  InAppBrowser.open(url);
+};
+
+const Event = ({ event, loading }) => {
+  const coverImageSources = get(event, 'image.sources', []);
+  return (
+    <BackgroundView>
+      <StretchyView>
+        {({ Stretchy, ...scrollViewProps }) => (
+          <FlexedScrollView {...scrollViewProps}>
+            {coverImageSources.length || loading ? (
+              <Stretchy>
+                <GradientOverlayImage
+                  isLoading={!coverImageSources.length && loading}
+                  source={coverImageSources}
+                />
+              </Stretchy>
+            ) : null}
+            <PaddedView vertical={false}>
+              <H2 padded isLoading={!event.name && loading}>
+                {event.name}
+              </H2>
+              <Paragraph>
+                <EventInfoItem
+                  icon={'time'}
+                  title={moment(event.start).format('ddd, MMMM Do, YYYY')}
+                  subtitle={`${moment(event.start).format('LT')} — ${moment(
+                    event.end
+                  ).format('LT')}`}
+                />
+                <EventInfoItem icon={'pin'} title={event.location} />
+              </Paragraph>
+              <HTMLView isLoading={loading} onPressAnchor={handlePressAnchor}>
+                {event.description}
+              </HTMLView>
+            </PaddedView>
+          </FlexedScrollView>
+        )}
+      </StretchyView>
+    </BackgroundView>
+  );
+};
+
+Event.propTypes = {
+  event: PropTypes.shape({
+    __typename: PropTypes.string,
+    id: PropTypes.string,
+    name: PropTypes.string,
+    description: PropTypes.string,
+    start: PropTypes.string,
+    end: PropTypes.string,
+    location: PropTypes.string,
+  }),
+  loading: PropTypes.bool,
+};
+
+export default Event;
diff --git a/apolloschurchapp/src/event/Event.tests.js b/apolloschurchapp/src/event/Event.tests.js
new file mode 100644
index 0000000..10cf33d
--- /dev/null
+++ b/apolloschurchapp/src/event/Event.tests.js
@@ -0,0 +1,31 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+import moment from 'moment';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import Event from './Event';
+
+describe('The Event component', () => {
+  it('should render', () => {
+    const tree = renderer.create(
+      <Providers>
+        <Event
+          event={{
+            __typename: 'Event',
+            id: 'Event:123',
+            start: moment('2019-09-26T15:10:51.200Z')
+              .utc()
+              .toJSON(),
+            end: moment('2019-09-26T17:10:51.200Z')
+              .utc()
+              .toJSON(),
+            location: 'Willow Creek, Chicago',
+            image: { sources: [{ url: 'https://url.com/image.jpg' }] },
+          }}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/event/EventConnected.js b/apolloschurchapp/src/event/EventConnected.js
new file mode 100644
index 0000000..71f0a3b
--- /dev/null
+++ b/apolloschurchapp/src/event/EventConnected.js
@@ -0,0 +1,81 @@
+import React, { PureComponent } from 'react';
+import { Query } from 'react-apollo';
+import { get } from 'lodash';
+import PropTypes from 'prop-types';
+
+import { ErrorCard, ThemeMixin } from '@apollosproject/ui-kit';
+
+import { TrackEventWhenLoaded } from '@apollosproject/ui-analytics';
+
+import NavigationHeader from '../content-single/NavigationHeader';
+import Event from './Event';
+import GET_EVENT from './getEvent';
+
+class EventConnected extends PureComponent {
+  static propTypes = {
+    navigation: PropTypes.shape({
+      getParam: PropTypes.func,
+      push: PropTypes.func,
+    }),
+  };
+
+  static navigationOptions = {
+    header: NavigationHeader,
+    headerTransparent: true,
+    headerMode: 'float',
+  };
+
+  get eventId() {
+    return this.props.navigation.getParam('eventId', []);
+  }
+
+  get queryVariables() {
+    return { eventId: this.eventId };
+  }
+
+  renderWithData = ({ loading, error, data }) => {
+    if (error) return <ErrorCard error={error} />;
+
+    const event = data.node || {};
+
+    const { theme = {} } = event;
+
+    return (
+      <ThemeMixin
+        mixin={{
+          type: get(theme, 'type', 'light').toLowerCase(),
+          colors: get(theme, 'colors'),
+        }}
+      >
+        <TrackEventWhenLoaded
+          loaded={!!(!loading && event.name)}
+          eventName={'View Event'}
+          properties={{
+            title: event.name,
+            eventId: this.eventId,
+          }}
+        />
+        <Event
+          id={this.eventId}
+          event={event}
+          loading={loading}
+          error={error}
+        />
+      </ThemeMixin>
+    );
+  };
+
+  render() {
+    return (
+      <Query
+        query={GET_EVENT}
+        fetchPolicy="network-only"
+        variables={this.queryVariables}
+      >
+        {this.renderWithData}
+      </Query>
+    );
+  }
+}
+
+export default EventConnected;
diff --git a/apolloschurchapp/src/event/EventConnected.tests.js b/apolloschurchapp/src/event/EventConnected.tests.js
new file mode 100644
index 0000000..0594d24
--- /dev/null
+++ b/apolloschurchapp/src/event/EventConnected.tests.js
@@ -0,0 +1,53 @@
+import React from 'react';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import moment from 'moment';
+import { renderWithApolloData } from '../utils/testUtils';
+import getEvent from './getEvent';
+import EventConnected from './EventConnected';
+
+const mocks = {
+  request: {
+    query: getEvent,
+    variables: { eventId: 'Event:123' },
+  },
+  result: {
+    data: {
+      node: {
+        __typename: 'Event',
+        id: 'Event:123',
+        start: moment('2019-09-26T15:10:51.200Z')
+          .utc()
+          .toJSON(),
+        end: moment('2019-09-26T17:10:51.200Z')
+          .utc()
+          .toJSON(),
+        location: 'Willow Creek, Chicago',
+        name: 'Cookout',
+        description: 'Some detailed description',
+        image: {
+          __typename: 'ImageMedia',
+          sources: [
+            {
+              uri: 'https://url.com/image.jpg',
+              __typename: 'ImageMediaSource',
+            },
+          ],
+        },
+      },
+    },
+  },
+};
+
+describe('EventConnected component', () => {
+  it('renders without errors', async () => {
+    const tree = await renderWithApolloData(
+      <Providers mocks={[mocks]}>
+        <EventConnected navigation={{ getParam: () => 'Event:123' }} />
+      </Providers>
+    );
+
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/event/components.js b/apolloschurchapp/src/event/components.js
new file mode 100644
index 0000000..509e400
--- /dev/null
+++ b/apolloschurchapp/src/event/components.js
@@ -0,0 +1,44 @@
+import React from 'react';
+import { ScrollView, View } from 'react-native';
+import PropTypes from 'prop-types';
+import { styled, withTheme, H6, H4, Icon } from '@apollosproject/ui-kit';
+
+const FlexedScrollView = styled({ flex: 1 })(ScrollView);
+
+const StyledIcon = withTheme(({ theme: { colors, sizing } }) => ({
+  fill: colors.text.tertiary,
+  size: sizing.baseUnit * 1.5,
+  style: {
+    marginRight: 8,
+  },
+}))(Icon);
+
+const StyledH6 = styled(({ theme: { colors, sizing } }) => ({
+  color: colors.text.tertiary,
+  fontSize: sizing.baseUnit * 0.875,
+  marginTop: sizing.baseUnit / 4,
+}))(H6);
+
+const EventInfoContainer = styled({ marginBottom: 24, flexDirection: 'row' })(
+  View
+);
+
+const TextContainer = styled({ flexDirection: 'column' })(View);
+
+const EventInfoItem = ({ icon, title, subtitle }) => (
+  <EventInfoContainer>
+    <StyledIcon name={icon} />
+    <TextContainer>
+      <H4 bold>{title}</H4>
+      <StyledH6>{subtitle}</StyledH6>
+    </TextContainer>
+  </EventInfoContainer>
+);
+
+EventInfoItem.propTypes = {
+  icon: PropTypes.string.isRequired,
+  title: PropTypes.string,
+  subtitle: PropTypes.string,
+};
+
+export { FlexedScrollView, EventInfoItem };
diff --git a/apolloschurchapp/src/event/getEvent.js b/apolloschurchapp/src/event/getEvent.js
new file mode 100644
index 0000000..059cb9f
--- /dev/null
+++ b/apolloschurchapp/src/event/getEvent.js
@@ -0,0 +1,29 @@
+import gql from 'graphql-tag';
+
+export const EVENT_FRAGMENT = gql`
+  fragment eventFragment on Event {
+    id
+    name
+    location
+    start
+    end
+    description
+    image {
+      sources {
+        uri
+      }
+    }
+  }
+`;
+
+export default gql`
+  query getEvent($eventId: ID!) {
+    node(id: $eventId) {
+      __typename
+      ... on Event {
+        ...eventFragment
+      }
+    }
+  }
+  ${EVENT_FRAGMENT}
+`;
diff --git a/apolloschurchapp/src/event/index.js b/apolloschurchapp/src/event/index.js
new file mode 100644
index 0000000..b065c4c
--- /dev/null
+++ b/apolloschurchapp/src/event/index.js
@@ -0,0 +1,17 @@
+import { createStackNavigator } from 'react-navigation';
+
+import Event from './EventConnected';
+
+const EventNavigator = createStackNavigator(
+  {
+    Event,
+  },
+  {
+    initialRouteName: 'Event',
+    headerMode: 'float',
+    headerTransitionPreset: 'fade-in-place',
+    navigationOptions: { header: null },
+  }
+);
+
+export default EventNavigator;
diff --git a/apolloschurchapp/src/index.js b/apolloschurchapp/src/index.js
index f3e2939..114240e 100644
--- a/apolloschurchapp/src/index.js
+++ b/apolloschurchapp/src/index.js
@@ -1,6 +1,7 @@
+import hoistNonReactStatic from 'hoist-non-react-statics';
 import React from 'react';
 import { StatusBar } from 'react-native';
-import { createStackNavigator } from 'react-navigation';
+import { createStackNavigator, createAppContainer } from 'react-navigation';
 import SplashScreen from 'react-native-splash-screen';
 
 import { BackgroundView, withTheme } from '@apollosproject/ui-kit';
@@ -11,6 +12,7 @@ import Auth, { ProtectedRoute } from '@apollosproject/ui-auth';
 import Providers from './Providers';
 import NavigationService from './NavigationService';
 import ContentSingle from './content-single';
+import Event from './event';
 import Tabs from './tabs';
 import PersonalDetails from './user-settings/PersonalDetails';
 import ChangePassword from './user-settings/ChangePassword';
@@ -30,12 +32,18 @@ const ProtectedRouteWithSplashScreen = (props) => {
   return <ProtectedRoute {...props} onRouteChange={handleOnRouteChange} />;
 };
 
+// Hack to avoid needing to pass emailRequired through the navigator.navigate
+const EnhancedAuth = (props) => <Auth {...props} emailRequired />;
+// 😑
+hoistNonReactStatic(EnhancedAuth, Auth);
+
 const AppNavigator = createStackNavigator(
   {
     ProtectedRoute: ProtectedRouteWithSplashScreen,
     Tabs,
     ContentSingle,
-    Auth,
+    Event,
+    Auth: EnhancedAuth,
     PersonalDetails,
     ChangePassword,
     Location,
@@ -51,11 +59,13 @@ const AppNavigator = createStackNavigator(
   }
 );
 
+const AppContainer = createAppContainer(AppNavigator);
+
 const App = () => (
   <Providers>
     <BackgroundView>
       <AppStatusBar barStyle="dark-content" />
-      <AppNavigator
+      <AppContainer
         ref={(navigatorRef) => {
           NavigationService.setTopLevelNavigator(navigatorRef);
         }}
diff --git a/apolloschurchapp/src/live/LiveButton.js b/apolloschurchapp/src/live/LiveButton.js
deleted file mode 100644
index c5760e3..0000000
--- a/apolloschurchapp/src/live/LiveButton.js
+++ /dev/null
@@ -1,57 +0,0 @@
-import React from 'react';
-import { Query } from 'react-apollo';
-import { get } from 'lodash';
-
-import {
-  Card,
-  CardContent,
-  TouchableScale,
-  styled,
-  ChannelLabel,
-  UIText,
-} from '@apollosproject/ui-kit';
-import { WebBrowserConsumer } from 'apolloschurchapp/src/ui/WebBrowser';
-
-import getLiveStream from './getLiveStream';
-
-const LiveCard = styled(({ theme }) => ({
-  backgroundColor: theme.colors.lightSecondary,
-}))(Card);
-
-const LiveNowButton = () => (
-  <Query
-    query={getLiveStream}
-    fetchPolicy="cache-and-network"
-    pollInterval={60000}
-  >
-    {({ loading, data }) => {
-      const isLive = get(data, 'liveStream.isLive', false);
-
-      return isLive ? (
-        <WebBrowserConsumer>
-          {(openUrl) => (
-            <TouchableScale
-              onPress={() => openUrl('https://apollos.churchonline.org/')}
-            >
-              <LiveCard isLoading={loading}>
-                <CardContent>
-                  <ChannelLabel
-                    icon="video"
-                    label={
-                      <UIText>
-                        <UIText bold>{`We're live.`} </UIText>
-                        Watch now!
-                      </UIText>
-                    }
-                  />
-                </CardContent>
-              </LiveCard>
-            </TouchableScale>
-          )}
-        </WebBrowserConsumer>
-      ) : null;
-    }}
-  </Query>
-);
-
-export default LiveNowButton;
diff --git a/apolloschurchapp/src/live/LiveButton.tests.js b/apolloschurchapp/src/live/LiveButton.tests.js
deleted file mode 100644
index 0ac2b75..0000000
--- a/apolloschurchapp/src/live/LiveButton.tests.js
+++ /dev/null
@@ -1,32 +0,0 @@
-import React from 'react';
-import renderer from 'react-test-renderer';
-
-import Providers from 'apolloschurchapp/src/Providers';
-
-import LiveNowButton from './LiveButton';
-import getLiveStream from './getLiveStream';
-
-const mocks = [
-  {
-    request: {
-      query: getLiveStream,
-      variables: {
-        isLive: true,
-      },
-    },
-    result: {
-      data: {
-        liveStream: { isLive: true },
-      },
-    },
-  },
-];
-
-it('renders without error', () => {
-  const tree = renderer.create(
-    <Providers mocks={mocks} addTypename={false}>
-      <LiveNowButton isLive />
-    </Providers>
-  );
-  expect(tree).toMatchSnapshot();
-});
diff --git a/apolloschurchapp/src/live/LiveContext.js b/apolloschurchapp/src/live/LiveContext.js
new file mode 100644
index 0000000..d5ffff2
--- /dev/null
+++ b/apolloschurchapp/src/live/LiveContext.js
@@ -0,0 +1,35 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import { Query } from 'react-apollo';
+import { get } from 'lodash';
+import getLiveContent from './getLiveContent';
+
+const { Provider, Consumer } = React.createContext([]);
+
+const LiveProvider = (props) => (
+  <Query query={getLiveContent} pollInterval={30000}>
+    {({ data: { liveStreams = [] } = {} }) => (
+      <Provider value={liveStreams}>{props.children}</Provider>
+    )}
+  </Query>
+);
+
+const LiveConsumer = ({ contentId, children }) => (
+  <Consumer>
+    {(liveStreams) => {
+      const stream = liveStreams.find(
+        (s) => get(s, 'contentItem.id') === contentId
+      );
+      return children(stream);
+    }}
+  </Consumer>
+);
+
+LiveConsumer.propTypes = {
+  children: PropTypes.node,
+  contentId: PropTypes.string,
+};
+
+LiveProvider.propTypes = { children: PropTypes.node };
+
+export { LiveProvider, LiveConsumer };
diff --git a/apolloschurchapp/src/live/getLiveContent.js b/apolloschurchapp/src/live/getLiveContent.js
new file mode 100644
index 0000000..8aac1d6
--- /dev/null
+++ b/apolloschurchapp/src/live/getLiveContent.js
@@ -0,0 +1,22 @@
+import gql from 'graphql-tag';
+
+export default gql`
+  query getLiveContent {
+    liveStreams {
+      isLive
+      eventStartTime
+      media {
+        sources {
+          uri
+        }
+      }
+      webViewUrl
+
+      contentItem {
+        ... on WeekendContentItem {
+          id
+        }
+      }
+    }
+  }
+`;
diff --git a/apolloschurchapp/src/live/getLiveStream.js b/apolloschurchapp/src/live/getLiveStream.js
deleted file mode 100644
index 55ae4e5..0000000
--- a/apolloschurchapp/src/live/getLiveStream.js
+++ /dev/null
@@ -1,9 +0,0 @@
-import gql from 'graphql-tag';
-
-export default gql`
-  query getLiveStream {
-    liveStream {
-      isLive
-    }
-  }
-`;
diff --git a/apolloschurchapp/src/live/index.js b/apolloschurchapp/src/live/index.js
index 1612958..f8f88d3 100644
--- a/apolloschurchapp/src/live/index.js
+++ b/apolloschurchapp/src/live/index.js
@@ -1 +1 @@
-export LiveButton from './LiveButton';
+export { LiveProvider, LiveConsumer } from './LiveContext';
diff --git a/apolloschurchapp/src/scripture/ScriptureConnected.tests.js b/apolloschurchapp/src/scripture/ScriptureConnected.tests.js
index 04b5361..3f40632 100644
--- a/apolloschurchapp/src/scripture/ScriptureConnected.tests.js
+++ b/apolloschurchapp/src/scripture/ScriptureConnected.tests.js
@@ -1,9 +1,8 @@
 import React from 'react';
-import renderer from 'react-test-renderer';
-import wait from 'waait';
 
 import Providers from 'apolloschurchapp/src/Providers';
 
+import { renderWithApolloData } from '../utils/testUtils';
 import getScripture from './getScripture';
 import ScriptureConnected from '.';
 
@@ -15,9 +14,11 @@ const mocks = {
   result: {
     data: {
       scripture: {
+        __typename: 'Scripture',
         id: 'GEN.1.1',
         reference: 'Genesis 1:1',
         copyright: 'PUBLIC DOMAIN',
+        version: 'WEB',
         html:
           '<p class="p"><span data-number="1" class="v">1</span>In the beginning, God created the heavens and the earth. </p>',
       },
@@ -27,12 +28,12 @@ const mocks = {
 
 describe('ScriptureConnected component', () => {
   it('renders without errors', async () => {
-    const tree = renderer.create(
-      <Providers mocks={[mocks]} addTypename={false}>
+    const tree = await renderWithApolloData(
+      <Providers mocks={[mocks]}>
         <ScriptureConnected references={['Genesis 1:1']} />
       </Providers>
     );
-    await wait(0); // wait for response from graphql
+
     expect(tree).toMatchSnapshot();
   });
 });
diff --git a/apolloschurchapp/src/scripture/getScripture.js b/apolloschurchapp/src/scripture/getScripture.js
index db1ef40..76e423e 100644
--- a/apolloschurchapp/src/scripture/getScripture.js
+++ b/apolloschurchapp/src/scripture/getScripture.js
@@ -6,6 +6,7 @@ export default gql`
       reference
       html
       copyright
+      version
     }
   }
 `;
diff --git a/apolloschurchapp/src/scripture/index.js b/apolloschurchapp/src/scripture/index.js
index 4492e5c..e6c6295 100644
--- a/apolloschurchapp/src/scripture/index.js
+++ b/apolloschurchapp/src/scripture/index.js
@@ -3,7 +3,7 @@ import { Query } from 'react-apollo';
 import { get } from 'lodash';
 import PropTypes from 'prop-types';
 import { ScriptureItem } from '@apollosproject/ui-scripture';
-import getScripture from './getScripture';
+import GET_SCRIPTURE from './getScripture';
 
 /**
  * This is the data-bound "connected" scripture component.
@@ -15,12 +15,13 @@ const ScriptureConnected = ({
   references,
 }) =>
   references.map((query) => (
-    <Query query={getScripture} variables={{ query }} key={query}>
+    <Query query={GET_SCRIPTURE} variables={{ query }} key={query}>
       {({ loading, data }) => (
         <ScriptureComponent
           reference={get(data, 'scripture.reference', '')}
           html={get(data, 'scripture.html', '')}
           copyright={get(data, 'scripture.copyright', '')}
+          version={get(data, 'scripture.version', '')}
           isLoading={loading}
         />
       )}
diff --git a/apolloschurchapp/src/store/index.js b/apolloschurchapp/src/store/index.js
index 336839b..66fdccb 100644
--- a/apolloschurchapp/src/store/index.js
+++ b/apolloschurchapp/src/store/index.js
@@ -27,7 +27,7 @@ export const defaults = {
   cacheLoaded: false,
 };
 
-const getIsLoggedIn = gql`
+const GET_LOGGED_IN = gql`
   query {
     isLoggedIn @client
   }
@@ -43,7 +43,7 @@ export const resolvers = {
         },
       });
       const { data: { isLoggedIn } = {} } = await client.query({
-        query: getIsLoggedIn,
+        query: GET_LOGGED_IN,
       });
 
       const { pushId } = cache.readQuery({
diff --git a/apolloschurchapp/src/tabs/connect/ActionBar.js b/apolloschurchapp/src/tabs/connect/ActionBar.js
new file mode 100644
index 0000000..8708fda
--- /dev/null
+++ b/apolloschurchapp/src/tabs/connect/ActionBar.js
@@ -0,0 +1,37 @@
+import React from 'react';
+import { ActionBar, ActionBarItem } from '@apollosproject/ui-kit';
+import { withNavigation } from 'react-navigation';
+import PropTypes from 'prop-types';
+import { WebBrowserConsumer } from 'apolloschurchapp/src/ui/WebBrowser';
+
+const Toolbar = ({ navigation }) => (
+  <WebBrowserConsumer>
+    {(openUrl) => (
+      <ActionBar>
+        <ActionBarItem
+          onPress={() => navigation.navigate('Passes')}
+          icon="check"
+          label="Check-in"
+        />
+        <ActionBarItem
+          onPress={() => openUrl('https://apollosrock.newspring.cc/page/186')}
+          icon="download"
+          label="Give"
+        />
+        <ActionBarItem
+          onPress={() => navigation.navigate('TestingControlPanel')}
+          icon="information"
+          label="Test"
+        />
+      </ActionBar>
+    )}
+  </WebBrowserConsumer>
+);
+
+Toolbar.propTypes = {
+  navigation: PropTypes.shape({
+    navigate: PropTypes.func.isRequired,
+  }).isRequired,
+};
+
+export default withNavigation(Toolbar);
diff --git a/apolloschurchapp/src/tabs/connect/ActionTable/index.js b/apolloschurchapp/src/tabs/connect/ActionTable/index.js
index c68be5c..a7a7400 100644
--- a/apolloschurchapp/src/tabs/connect/ActionTable/index.js
+++ b/apolloschurchapp/src/tabs/connect/ActionTable/index.js
@@ -40,8 +40,8 @@ const ActionTable = () => (
             onPress={() => openUrl('https://apollosrock.newspring.cc/page/235')}
           >
             <Cell>
-              <CellIcon name="check" />
               <CellText>Find a serving opportunity</CellText>
+              <CellIcon name="arrow-next" />
             </Cell>
           </Touchable>
           <Divider />
@@ -49,8 +49,8 @@ const ActionTable = () => (
             onPress={() => openUrl('https://apollosrock.newspring.cc/page/236')}
           >
             <Cell>
-              <CellIcon name="groups" />
               <CellText>Join a small group</CellText>
+              <CellIcon name="arrow-next" />
             </Cell>
           </Touchable>
           <Divider />
@@ -58,17 +58,8 @@ const ActionTable = () => (
             onPress={() => openUrl('https://apollosrock.newspring.cc/page/233')}
           >
             <Cell>
-              <CellIcon name="share" />
               <CellText>I need prayer</CellText>
-            </Cell>
-          </Touchable>
-          <Divider />
-          <Touchable
-            onPress={() => openUrl('https://apollosrock.newspring.cc/page/186')}
-          >
-            <Cell>
-              <CellIcon name="download" />
-              <CellText>I would like to give</CellText>
+              <CellIcon name="arrow-next" />
             </Cell>
           </Touchable>
         </TableView>
@@ -79,6 +70,7 @@ const ActionTable = () => (
             <Cell>
               <CellIcon name="settings" />
               <CellText>Open Testing Panel</CellText>
+              <CellIcon name="arrow-next" />
             </Cell>
           </Touchable>
         </TableView>
diff --git a/apolloschurchapp/src/tabs/connect/Connect.js b/apolloschurchapp/src/tabs/connect/Connect.js
index 79bb6df..4ba12d4 100644
--- a/apolloschurchapp/src/tabs/connect/Connect.js
+++ b/apolloschurchapp/src/tabs/connect/Connect.js
@@ -1,51 +1,13 @@
 import React, { PureComponent } from 'react';
-import { ScrollView, SafeAreaView } from 'react-native';
-import { Query } from 'react-apollo';
-import { get } from 'lodash';
+import { ScrollView } from 'react-native';
+import { SafeAreaView } from 'react-navigation';
 import PropTypes from 'prop-types';
 
-import { LoginButton } from '@apollosproject/ui-auth';
-import {
-  H1,
-  BodyText,
-  Paragraph,
-  BackgroundView,
-  withTheme,
-  styled,
-  Icon,
-  PaddedView,
-} from '@apollosproject/ui-kit';
+import { BackgroundView } from '@apollosproject/ui-kit';
 import ActionTable from './ActionTable';
-import Toolbar from './Toolbar';
-import { UserAvatarHeaderConnected } from './UserAvatarHeader';
+import ActionBar from './ActionBar';
+import UserAvatarHeader from './UserAvatarHeader';
 import { RecentlyLikedTileFeedConnected } from './RecentlyLikedTileFeed';
-import getLoginState from './getLoginState';
-
-const Title = styled(({ theme }) => ({
-  color: theme.colors.primary,
-  paddingBottom: theme.helpers.verticalRhythm(1.5),
-}))(H1);
-
-const BrandIcon = withTheme(({ theme }) => ({
-  name: 'brand-icon',
-  size: theme.sizing.baseUnit * 2.25,
-  marginBottom: theme.sizing.baseUnit,
-  fill: theme.colors.primary,
-}))(Icon);
-
-const Header = styled(({ theme }) => ({
-  paddingBottom: theme.sizing.baseUnit * 1.5,
-  backgroundColor: theme.colors.background.paper,
-  paddingTop: theme.sizing.baseUnit * 4,
-}))(PaddedView);
-
-const StyledLoginButton = styled(({ theme }) => ({
-  marginVertical: theme.sizing.baseUnit,
-}))(LoginButton);
-
-const StyledScrollView = styled(({ theme }) => ({
-  marginVertical: theme.sizing.baseUnit,
-}))(ScrollView);
 
 class Connect extends PureComponent {
   static navigationOptions = () => ({
@@ -63,46 +25,14 @@ class Connect extends PureComponent {
   render() {
     return (
       <BackgroundView>
-        <Query query={getLoginState}>
-          {({ data }) => {
-            if (get(data, 'isLoggedIn', false))
-              return (
-                <SafeAreaView>
-                  <StyledScrollView>
-                    <UserAvatarHeaderConnected key="UserAvatarHeaderConnected" />
-                    <RecentlyLikedTileFeedConnected key="RecentlyLikedTileFeedConnected" />
-                    <Toolbar />
-                    <ActionTable />
-                  </StyledScrollView>
-                </SafeAreaView>
-              );
-            return (
-              <SafeAreaView>
-                <ScrollView>
-                  <Header>
-                    <BrandIcon />
-                    <Title>Connect!</Title>
-                    <Paragraph>
-                      <BodyText>
-                        Our mission is to help you connect to others as well as
-                        help you in your walk with Christ.
-                      </BodyText>
-                    </Paragraph>
-                    <Paragraph>
-                      <BodyText>
-                        By joining this community, you will unlock amazing
-                        features like; curated content and devotionals, simple
-                        event registration, and easy online giving!
-                      </BodyText>
-                    </Paragraph>
-                    <StyledLoginButton />
-                  </Header>
-                  <ActionTable />
-                </ScrollView>
-              </SafeAreaView>
-            );
-          }}
-        </Query>
+        <SafeAreaView>
+          <ScrollView>
+            <UserAvatarHeader />
+            <ActionBar />
+            <RecentlyLikedTileFeedConnected />
+            <ActionTable />
+          </ScrollView>
+        </SafeAreaView>
       </BackgroundView>
     );
   }
diff --git a/apolloschurchapp/src/tabs/connect/LikedContentList/LikedContentList.tests.js b/apolloschurchapp/src/tabs/connect/LikedContentList/LikedContentList.tests.js
index 78a32c7..673817c 100644
--- a/apolloschurchapp/src/tabs/connect/LikedContentList/LikedContentList.tests.js
+++ b/apolloschurchapp/src/tabs/connect/LikedContentList/LikedContentList.tests.js
@@ -4,14 +4,14 @@ import wait from 'waait';
 
 import Providers from 'apolloschurchapp/src/Providers';
 
-import getLikedContent from '../getLikedContent';
+import GET_LIKED_CONTENT from '../getLikedContent';
 import LikedContentList from '.';
 
 describe('LikedContentList component', () => {
   it('renders LikedContentList', async () => {
     const mock = {
       request: {
-        query: getLikedContent,
+        query: GET_LIKED_CONTENT,
       },
       result: {
         data: {
diff --git a/apolloschurchapp/src/tabs/connect/LikedContentList/index.js b/apolloschurchapp/src/tabs/connect/LikedContentList/index.js
index 7ef1232..38dedb3 100644
--- a/apolloschurchapp/src/tabs/connect/LikedContentList/index.js
+++ b/apolloschurchapp/src/tabs/connect/LikedContentList/index.js
@@ -7,7 +7,7 @@ import { BackgroundView, FeedView } from '@apollosproject/ui-kit';
 import fetchMoreResolver from 'apolloschurchapp/src/utils/fetchMoreResolver';
 import ContentCardConnected from '../../../ui/ContentCardConnected';
 
-import getLikedContent from '../getLikedContent';
+import GET_LIKED_CONTENT from '../getLikedContent';
 /** A FeedView wrapped in a query to pull content data. */
 class LikedContentList extends PureComponent {
   /** Function for React Navigation to set information in the header. */
@@ -38,7 +38,7 @@ class LikedContentList extends PureComponent {
     return (
       <BackgroundView>
         <Query
-          query={getLikedContent}
+          query={GET_LIKED_CONTENT}
           fetchPolicy="cache-and-network"
           variables={{ first: 20 }}
         >
diff --git a/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeed.js b/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeed.js
index dc2e2b2..6ac75d0 100644
--- a/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeed.js
+++ b/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeed.js
@@ -16,7 +16,7 @@ import {
   withIsLoading,
 } from '@apollosproject/ui-kit';
 
-import ContentCard from 'apolloschurchapp/src/ui/ContentCardConnected';
+import HorizontalContentCardConnected from 'apolloschurchapp/src/ui/HorizontalContentCardConnected';
 
 const RowHeader = styled(({ theme }) => ({
   flexDirection: 'row',
@@ -38,7 +38,7 @@ const ButtonLinkSpacing = styled(({ theme }) => ({
 }))(View);
 
 const AndroidTouchableFix = withTheme(({ theme }) => ({
-  borderRadius: theme.sizing.baseUnit / 2,
+  borderRadius: theme.sizing.baseBorderRadius / 2,
 }))(Touchable);
 
 const StyledHorizontalTileFeed = styled(({ theme }) => ({
@@ -74,11 +74,9 @@ class RecentlyLikedTileFeed extends Component {
         });
       }}
     >
-      <ContentCard
+      <HorizontalContentCardConnected
         isLoading={item.isLoading}
-        tile
         contentId={item.id}
-        inHorizontalList
       />
     </TouchableScale>
   );
@@ -107,7 +105,6 @@ class RecentlyLikedTileFeed extends Component {
           </AndroidTouchableFix>
         </RowHeader>
         <StyledHorizontalTileFeed
-          initialNumToRender={5}
           content={content}
           renderItem={this.titleImageItem}
           loadingStateObject={this.loadingStateObject}
diff --git a/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeedConnected.js b/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeedConnected.js
index 7527d53..bfccbe1 100644
--- a/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeedConnected.js
+++ b/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeedConnected.js
@@ -2,12 +2,12 @@ import React from 'react';
 import { Query } from 'react-apollo';
 import PropTypes from 'prop-types';
 
-import getLikedContent from '../getLikedContent';
+import GET_LIKED_CONTENT from '../getLikedContent';
 import RecentlyLikedTileFeed from './RecentlyLikedTileFeed';
 
 const RecentlyLikedTileFeedConnected = ({ navigation }) => (
   <Query
-    query={getLikedContent}
+    query={GET_LIKED_CONTENT}
     fetchPolicy="cache-and-network"
     variables={{ first: 3 }}
   >
diff --git a/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeedConnected.tests.js b/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeedConnected.tests.js
index 19c91cf..016b246 100644
--- a/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeedConnected.tests.js
+++ b/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeedConnected.tests.js
@@ -1,107 +1,111 @@
 import React from 'react';
-import renderer from 'react-test-renderer';
-import wait from 'waait';
 
 import Providers from 'apolloschurchapp/src/Providers';
 
-import getLikedContent from '../getLikedContent';
+import { renderWithApolloData } from '../../../utils/testUtils';
+
+import GET_LIKED_CONTENT from '../getLikedContent';
 import RecentlyLikedTileFeedConnected from './RecentlyLikedTileFeedConnected';
 
 describe('RecentlyLikedTileFeedConnected', () => {
   it('renders a RecentlyLikedTileFeedConnected', async () => {
     const mock = {
       request: {
-        query: getLikedContent,
+        query: GET_LIKED_CONTENT,
+        variables: { first: 3 },
       },
       result: {
         data: {
-          likedContent: [
-            {
-              id: 'UniversalContentItem:296373ecb53580855cadffa0375ebe18',
-              __typename: 'UniversalContentItem',
-              title: 'Guys Night!',
-              coverImage: {
-                sources: [
-                  {
-                    uri:
-                      'https://apollosrock.newspring.cc/GetImage.ashx?guid=58c037fa-cc7f-4d72-9571-a0cc0558e346',
-                  },
-                ],
-              },
-              sharing: {
-                title: 'Guys Night!',
-                message: '',
-                url: 'https://apollosrock.newspring.cc/',
-              },
+          likedContent: {
+            __typename: 'ContentItemsConnection',
+            pageInfo: {
+              __typename: 'PaginationInfo',
+              endCursor: '123',
             },
-            {
-              id: 'UniversalContentItem:39193b5ad28717ebfeab4d226664d8e7',
-              __typename: 'UniversalContentItem',
-              title: 'This August at NewSpring',
-              coverImage: {
-                sources: [
-                  {
-                    uri:
-                      'https://apollosrock.newspring.cc/GetImage.ashx?guid=f54b0db0-95f5-44ad-b8f2-8bcd1b23cfdb',
+            edges: [
+              {
+                __typename: 'ContentItemsConnectionEdge',
+                node: {
+                  __typename: 'UniversalContentItem',
+                  id: 'UniversalContentItem:d57994350b9d213866b24dea3a97433d',
+                  coverImage: null,
+                  parentChannel: {
+                    id: 'ContentChannel:4f68015ba18662a7409d1219a4ce013e',
+                    name: 'Editorial',
+                    iconName: 'text',
+                    __typename: 'ContentChannel',
                   },
-                ],
-              },
-              sharing: {
-                title: 'This August at NewSpring',
-                message: '',
-                url: 'https://apollosrock.newspring.cc/',
+                  title: 'Mea Animal Aperiam Ornatus Eu',
+                  hyphenatedTitle: 'Mea Animal Aperiam Ornatus Eu',
+                  summary: 'Bla bla bla',
+                  theme: null,
+                  isLiked: false,
+                  likedCount: 0,
+                  videos: [],
+                  audios: [],
+                },
               },
-            },
-            {
-              id: 'UniversalContentItem:ae8ec75906ba7437c49ad2534b5024db',
-              __typename: 'UniversalContentItem',
-              title: 'A Place to Worship Free of Fear',
-              coverImage: {
-                sources: [
-                  {
-                    uri:
-                      'https://apollosrock.newspring.cc/GetImage.ashx?guid=a65bc45d-f961-4b7e-a899-63eb1f9b8da9',
+              {
+                __typename: 'ContentItemsConnectionEdge',
+                node: {
+                  __typename: 'UniversalContentItem',
+                  id: 'UniversalContentItem:b36e55d803443431e96bb4b5068147ec',
+                  coverImage: null,
+                  parentChannel: {
+                    id: 'ContentChannel:4f68015ba18662a7409d1219a4ce013e',
+                    name: 'Editorial',
+                    iconName: 'text',
+                    __typename: 'ContentChannel',
                   },
-                ],
-              },
-              sharing: {
-                title: 'A Place to Worship Free of Fear',
-                message: '',
-                url: 'https://apollosrock.newspring.cc/',
+                  title: 'Probo Senserit Id Mea, Ut Sed Malis Postea,',
+                  hyphenatedTitle:
+                    'Probo Senserit Id Mea, Ut Sed Malis Postea,',
+                  summary: 'Bla bla bla',
+                  theme: null,
+                  isLiked: false,
+                  likedCount: 0,
+                  videos: [],
+                  audios: [],
+                },
               },
-            },
-          ],
+            ],
+          },
         },
       },
     };
     const navigation = { navigate: jest.fn(), getParam: jest.fn() };
-    const tree = renderer.create(
+    const tree = await renderWithApolloData(
       <Providers mocks={[mock]}>
         <RecentlyLikedTileFeedConnected navigation={navigation} />
       </Providers>
     );
-    await wait(0); // wait for response from graphql
     expect(tree).toMatchSnapshot();
   });
 
   it('renders nothing if no liked content', async () => {
     const mock = {
       request: {
-        query: getLikedContent,
+        query: GET_LIKED_CONTENT,
       },
       result: {
         data: {
-          likedContent: [],
+          likedContent: {
+            __typename: 'ContentItemsConnection',
+            pageInfo: {
+              __typename: 'PaginationInfo',
+              endCursor: null,
+            },
+            edges: [],
+          },
         },
       },
     };
     const navigation = { navigate: jest.fn(), getParam: jest.fn() };
-    const tree = renderer.create(
+    const tree = await renderWithApolloData(
       <Providers mocks={[mock]}>
         <RecentlyLikedTileFeedConnected navigation={navigation} />
       </Providers>
     );
-    await wait(0); // wait for response from graphql
     expect(tree).toMatchSnapshot();
   });
 });
diff --git a/apolloschurchapp/src/tabs/connect/Toolbar.js b/apolloschurchapp/src/tabs/connect/Toolbar.js
deleted file mode 100644
index 159180e..0000000
--- a/apolloschurchapp/src/tabs/connect/Toolbar.js
+++ /dev/null
@@ -1,33 +0,0 @@
-import React from 'react';
-import {
-  TableView,
-  Cell,
-  CellIcon,
-  CellText,
-  Touchable,
-} from '@apollosproject/ui-kit';
-import { withNavigation } from 'react-navigation';
-import PropTypes from 'prop-types';
-
-const Toolbar = ({ navigation }) => (
-  <TableView>
-    <Touchable
-      onPress={() => {
-        navigation.navigate('Passes');
-      }}
-    >
-      <Cell>
-        <CellIcon name="check" />
-        <CellText>Check-in</CellText>
-      </Cell>
-    </Touchable>
-  </TableView>
-);
-
-Toolbar.propTypes = {
-  navigation: PropTypes.shape({
-    navigate: PropTypes.func.isRequired,
-  }).isRequired,
-};
-
-export default withNavigation(Toolbar);
diff --git a/apolloschurchapp/src/tabs/connect/UserAvatarHeader.js b/apolloschurchapp/src/tabs/connect/UserAvatarHeader.js
new file mode 100644
index 0000000..9f1b65a
--- /dev/null
+++ b/apolloschurchapp/src/tabs/connect/UserAvatarHeader.js
@@ -0,0 +1,44 @@
+import React from 'react';
+import { Query } from 'react-apollo';
+import PropTypes from 'prop-types';
+import { withNavigation } from 'react-navigation';
+
+import { Avatar, H3, styled, PaddedView } from '@apollosproject/ui-kit';
+import GET_USER_PROFILE from './getUserProfile';
+
+const Container = styled({
+  alignItems: 'center',
+  justifyContent: 'center',
+})(PaddedView);
+
+const UserAvatarHeader = ({ navigation }) => (
+  <Query query={GET_USER_PROFILE} fetchPolicy="cache-and-network">
+    {({
+      data: { currentUser: { profile: { photo, firstName } = {} } = {} } = {},
+    }) => (
+      <Container>
+        <PaddedView horizontal={false}>
+          <Avatar
+            source={photo}
+            size="large"
+            buttonIcon="settings"
+            onPressIcon={() => navigation.navigate('UserSettings')}
+          />
+        </PaddedView>
+        <H3>
+          Hello
+          {firstName ? ` ${firstName}` : ''}!
+        </H3>
+      </Container>
+    )}
+  </Query>
+);
+
+UserAvatarHeader.propTypes = {
+  navigation: PropTypes.shape({
+    getParam: PropTypes.func,
+    navigate: PropTypes.func,
+  }),
+};
+
+export default withNavigation(UserAvatarHeader);
diff --git a/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeader.js b/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeader.js
deleted file mode 100644
index caa56cb..0000000
--- a/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeader.js
+++ /dev/null
@@ -1,68 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-import { compose } from 'recompose';
-import { withNavigation } from 'react-navigation';
-
-import UserAvatarView from 'apolloschurchapp/src/ui/UserAvatarView';
-
-import {
-  withIsLoading,
-  Touchable,
-  Icon,
-  withTheme,
-  styled,
-  PaddedView,
-  FlexedView,
-} from '@apollosproject/ui-kit';
-
-const Container = styled(({ theme }) => ({
-  alignItems: 'center',
-  flexDirection: 'row',
-  paddingTop: theme.sizing.baseUnit * 2,
-  paddingBottom: 0,
-}))(PaddedView);
-
-const SettingsIcon = compose(
-  withTheme(({ theme }) => ({
-    name: 'settings',
-    fill: theme.colors.text.tertiary,
-  }))
-)(Icon);
-
-const UserAvatarHeader = ({
-  firstName,
-  lastName,
-  location,
-  navigation,
-  disabled,
-  isLoading,
-}) => (
-  <Container>
-    <FlexedView>
-      <UserAvatarView
-        firstName={firstName}
-        lastName={lastName}
-        location={location}
-        disabled={disabled}
-        isLoading={isLoading}
-      />
-    </FlexedView>
-    <Touchable onPress={() => navigation.navigate('UserSettings')}>
-      <SettingsIcon />
-    </Touchable>
-  </Container>
-);
-
-UserAvatarHeader.propTypes = {
-  firstName: PropTypes.string,
-  lastName: PropTypes.string,
-  location: PropTypes.string,
-  navigation: PropTypes.shape({
-    getParam: PropTypes.func,
-    navigate: PropTypes.func,
-  }),
-  disabled: PropTypes.bool,
-  isLoading: PropTypes.bool,
-};
-
-export default withNavigation(withIsLoading(UserAvatarHeader));
diff --git a/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeader.test.js b/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeader.test.js
deleted file mode 100644
index 314dfa6..0000000
--- a/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeader.test.js
+++ /dev/null
@@ -1,65 +0,0 @@
-import React from 'react';
-import renderer from 'react-test-renderer';
-
-import Providers from 'apolloschurchapp/src/Providers';
-import UserAvatarHeader from './UserAvatarHeader';
-
-describe('user avatar header', () => {
-  it('renders user avatar header if logged in', () => {
-    const props = {
-      theme: {
-        colors: {
-          text: {
-            tertiary: 'red',
-          },
-        },
-      },
-      firstName: 'Isaac',
-      lastName: 'Hardy',
-      location: 'Anderson, SC',
-      photo: {
-        uri: 'google.com',
-      },
-      refetch: jest.fn(),
-      navigation: jest.fn(),
-      disabled: true,
-      isLoading: false,
-    };
-
-    const tree = renderer.create(
-      <Providers>
-        <UserAvatarHeader {...props} />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-
-  it('renders placeholder when loading', () => {
-    const props = {
-      theme: {
-        colors: {
-          text: {
-            tertiary: 'red',
-          },
-        },
-      },
-      firstName: 'Isaac',
-      lastName: 'Hardy',
-      location: 'Anderson, SC',
-      photo: {
-        uri: 'google.com',
-      },
-      refetch: jest.fn(),
-      navigation: jest.fn(),
-      disabled: true,
-      isLoading: true,
-    };
-
-    const tree = renderer.create(
-      <Providers>
-        <UserAvatarHeader {...props} />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeaderConnected.js b/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeaderConnected.js
deleted file mode 100644
index 397a879..0000000
--- a/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeaderConnected.js
+++ /dev/null
@@ -1,39 +0,0 @@
-import React from 'react';
-import { Query } from 'react-apollo';
-import PropTypes from 'prop-types';
-import { get } from 'lodash';
-
-import getUserProfile from '../getUserProfile';
-import UserAvatarHeader from './UserAvatarHeader';
-
-const UserAvatarHeaderConnected = ({ navigation }) => (
-  <Query query={getUserProfile} fetchPolicy="cache-and-network">
-    {({
-      data: {
-        currentUser: {
-          profile: { photo, firstName, lastName, campus } = {},
-        } = {},
-      } = {},
-      refetch,
-    }) => (
-      <UserAvatarHeader
-        firstName={firstName}
-        lastName={lastName}
-        location={get(campus, 'name')}
-        photo={photo}
-        refetch={refetch}
-        navigation={navigation}
-        disabled
-      />
-    )}
-  </Query>
-);
-
-UserAvatarHeaderConnected.propTypes = {
-  navigation: PropTypes.shape({
-    getParam: PropTypes.func,
-    navigate: PropTypes.func,
-  }),
-};
-
-export default UserAvatarHeaderConnected;
diff --git a/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeaderConnected.tests.js b/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeaderConnected.tests.js
deleted file mode 100644
index b4bad0c..0000000
--- a/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeaderConnected.tests.js
+++ /dev/null
@@ -1,63 +0,0 @@
-import React from 'react';
-import { renderWithApolloData } from 'apolloschurchapp/src/utils/testUtils';
-
-import Providers from 'apolloschurchapp/src/Providers';
-
-import getUserProfile from '../getUserProfile';
-import UserAvatarHeaderConnected from './UserAvatarHeaderConnected';
-
-describe('user avatar header connect', () => {
-  it('renders user avatar header if logged in', async () => {
-    const mock = {
-      request: {
-        query: getUserProfile,
-      },
-      result: {
-        data: {
-          currentUser: {
-            __typename: 'AuthenticatedUser',
-            id: 'AuthenticatedUser:123',
-            profile: {
-              id: 'Person:123',
-              __typename: 'Person',
-              gender: 'Male',
-              birthDate: '1980-02-10T00:00:00',
-              firstName: 'Isaac',
-              lastName: 'Hardy',
-              campus: {
-                __typename: 'Campus',
-                id: 'Campus:a0f64573eabf00a607bec911794d50fb',
-                name: 'Chicago Campus',
-                latitude: 42.09203,
-                longitude: -88.13289,
-                distanceFromLocation: null,
-                street1: '67 Algonquin Rd',
-                street2: '',
-                city: 'South Barrington',
-                state: 'IL',
-                postalCode: '60010-6143',
-                image: {
-                  __typename: 'ImageMediaSource',
-                  uri: 'https://picsum.photos/300/300/?random',
-                },
-              },
-              email: 'isaac.hardy@newspring.cc',
-              nickName: 'Batman',
-              photo: {
-                __typename: 'ImageMediaSource',
-                uri: 'https://some-uri.com/test.jpg',
-              },
-            },
-          },
-        },
-      },
-    };
-    const navigation = { navigate: jest.fn(), getParam: jest.fn() };
-    const tree = await renderWithApolloData(
-      <Providers mocks={[mock]}>
-        <UserAvatarHeaderConnected navigation={navigation} />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/tabs/connect/UserAvatarHeader/index.js b/apolloschurchapp/src/tabs/connect/UserAvatarHeader/index.js
deleted file mode 100644
index a8b66ec..0000000
--- a/apolloschurchapp/src/tabs/connect/UserAvatarHeader/index.js
+++ /dev/null
@@ -1,2 +0,0 @@
-export UserAvatarHeader from './UserAvatarHeader';
-export UserAvatarHeaderConnected from './UserAvatarHeaderConnected';
diff --git a/apolloschurchapp/src/tabs/connect/getLikedContent.js b/apolloschurchapp/src/tabs/connect/getLikedContent.js
index 5e4e1f9..b9037c6 100644
--- a/apolloschurchapp/src/tabs/connect/getLikedContent.js
+++ b/apolloschurchapp/src/tabs/connect/getLikedContent.js
@@ -1,7 +1,6 @@
 import gql from 'graphql-tag';
 
-import { largeCardFragment } from 'apolloschurchapp/src/ui/ContentCardConnected';
-import { contentItemFragment } from 'apolloschurchapp/src/content-single/getContentItem';
+import { BASE_CARD_FRAGMENT } from 'apolloschurchapp/src/ui/ContentCardConnected';
 
 export default gql`
   query getAllLikedContent($first: Int, $after: String) {
@@ -12,13 +11,12 @@ export default gql`
       edges {
         node {
           ... on ContentItem {
-            ...contentItemFragment
-            ...largeCardFragment
+            isLiked
+            ...baseCardFragment
           }
         }
       }
     }
   }
-  ${contentItemFragment}
-  ${largeCardFragment}
+  ${BASE_CARD_FRAGMENT}
 `;
diff --git a/apolloschurchapp/src/tabs/connect/getUserProfile.js b/apolloschurchapp/src/tabs/connect/getUserProfile.js
index ef3b2c8..9d2d80c 100644
--- a/apolloschurchapp/src/tabs/connect/getUserProfile.js
+++ b/apolloschurchapp/src/tabs/connect/getUserProfile.js
@@ -2,7 +2,7 @@ import gql from 'graphql-tag';
 import CampusParts from 'apolloschurchapp/src/user-settings/Locations/campusFragment';
 
 export default gql`
-  query getCurrentUserProfile {
+  query CurrentUserProfile {
     currentUser {
       id
       profile {
diff --git a/apolloschurchapp/src/tabs/connect/index.js b/apolloschurchapp/src/tabs/connect/index.js
index 7091870..1901a73 100644
--- a/apolloschurchapp/src/tabs/connect/index.js
+++ b/apolloschurchapp/src/tabs/connect/index.js
@@ -1,4 +1,5 @@
 import { createStackNavigator } from 'react-navigation';
+import { withTheme } from '@apollosproject/ui-kit';
 
 import UserSettings from 'apolloschurchapp/src/user-settings';
 
@@ -17,11 +18,22 @@ const ConnectNavigator = createStackNavigator(
   {
     initialRouteName: 'Connect',
     headerMode: 'screen',
+    defaultNavigationOptions: ({ screenProps }) => ({
+      headerTintColor: screenProps.headerTintColor,
+      headerTitleStyle: screenProps.headerTitleStyle,
+    }),
+    navigationOptions: { tabBarIcon: tabBarIcon('profile') },
   }
 );
 
-ConnectNavigator.navigationOptions = {
-  tabBarIcon: tabBarIcon('profile'),
-};
+const EnhancedConnect = withTheme(({ theme, ...props }) => ({
+  ...props,
+  screenProps: {
+    headerTintColor: theme.colors.action.secondary,
+    headerTitleStyle: {
+      color: theme.colors.text.primary,
+    },
+  },
+}))(ConnectNavigator);
 
-export default ConnectNavigator;
+export default EnhancedConnect;
diff --git a/apolloschurchapp/src/tabs/discover/Discover.js b/apolloschurchapp/src/tabs/discover/Discover.js
index 76d8b24..b53b8f7 100644
--- a/apolloschurchapp/src/tabs/discover/Discover.js
+++ b/apolloschurchapp/src/tabs/discover/Discover.js
@@ -1,55 +1,47 @@
 import React, { PureComponent } from 'react';
-import { Query } from 'react-apollo';
-import { get } from 'lodash';
+import { throttle } from 'lodash';
 
-import { FeedView, BackgroundView } from '@apollosproject/ui-kit';
+import { BackgroundView } from '@apollosproject/ui-kit';
 
-import TileContentFeed from './TileContentFeed';
-import getContentChannels from './getContentChannels';
+import SearchInputHeader, {
+  ReactNavigationStyleReset,
+} from '../../ui/SearchInputHeader';
 
-const childContentItemLoadingState = {
-  title: '',
-  isLoading: true,
-};
-
-const feedItemLoadingState = {
-  name: '',
-  isLoading: true,
-};
+import SearchFeed from './SearchFeed';
+import DiscoverFeed from './DiscoverFeed';
 
 class Discover extends PureComponent {
-  renderItem = ({ item }) => (
-    <TileContentFeed
-      id={item.id}
-      name={item.name}
-      content={get(item, 'childContentItemsConnection.edges', []).map(
-        (edge) => edge.node
-      )}
-      isLoading={item.isLoading}
-      loadingStateObject={childContentItemLoadingState}
-    />
+  state = {
+    searchText: '',
+    isFocused: false,
+  };
+
+  handleOnChangeText = throttle(
+    (value) =>
+      this.setState({
+        searchText: value,
+      }),
+    300
   );
 
+  handleOnFocus = (inputState) => {
+    this.setState({
+      isFocused: inputState,
+    });
+  };
+
   render() {
     return (
       <BackgroundView>
-        <Query query={getContentChannels} fetchPolicy="cache-and-network">
-          {({
-            error,
-            loading,
-            data: { contentChannels = [] } = {},
-            refetch,
-          }) => (
-            <FeedView
-              error={error}
-              content={contentChannels}
-              isLoading={loading}
-              refetch={refetch}
-              renderItem={this.renderItem}
-              loadingStateObject={feedItemLoadingState}
-            />
-          )}
-        </Query>
+        <SearchInputHeader
+          onChangeText={this.handleOnChangeText}
+          onFocus={this.handleOnFocus}
+        />
+        {this.state.isFocused || this.state.searchText ? (
+          <SearchFeed searchText={this.state.searchText} />
+        ) : (
+          <DiscoverFeed />
+        )}
       </BackgroundView>
     );
   }
@@ -57,6 +49,7 @@ class Discover extends PureComponent {
 
 Discover.navigationOptions = {
   title: 'Discover',
+  headerStyle: ReactNavigationStyleReset.header,
 };
 
 export default Discover;
diff --git a/apolloschurchapp/src/tabs/discover/DiscoverFeed/DiscoverFeed.tests.js b/apolloschurchapp/src/tabs/discover/DiscoverFeed/DiscoverFeed.tests.js
new file mode 100644
index 0000000..568ee71
--- /dev/null
+++ b/apolloschurchapp/src/tabs/discover/DiscoverFeed/DiscoverFeed.tests.js
@@ -0,0 +1,584 @@
+import React from 'react';
+import { flatMap } from 'lodash';
+import { createStackNavigator, createAppContainer } from 'react-navigation';
+import renderer from 'react-test-renderer';
+
+import Providers from '../../../Providers';
+import { renderWithApolloData } from '../../../utils/testUtils';
+import GET_CONTENT_CARD from '../../../ui/ContentCardConnected/query';
+
+import GET_CONTENT_CHANNELS from './getContentChannels';
+import DiscoverFeed from '.';
+
+describe('The DiscoverFeed component', () => {
+  it('should render', async () => {
+    const mockFeedData = {
+      request: {
+        query: GET_CONTENT_CHANNELS,
+      },
+      result: {
+        data: {
+          contentChannels: [
+            {
+              id: 'ContentChannel:965b6e6d7046a885bea4e300b5c0400d',
+              name: 'News',
+              childContentItemsConnection: {
+                edges: [
+                  {
+                    node: {
+                      id:
+                        'UniversalContentItem:00bb7b364911281c97fc50f2a0d17b11',
+                      title: 'Anderson Family Cookout!',
+                      hyphenatedTitle: 'Anderson Family Cookout!',
+                      isLiked: false,
+                      likedCount: 0,
+                      summary: 'Come join us!',
+                      coverImage: {
+                        name: 'Landscape Image',
+                        sources: [
+                          {
+                            uri:
+                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D62e0e2ba-2dac-468b-a852-7e8cf2533efc',
+                            __typename: 'ImageMediaSource',
+                          },
+                        ],
+                        __typename: 'ImageMedia',
+                      },
+                      theme: null,
+                      parentChannel: {
+                        id: 'ContentChannel:965b6e6d7046a885bea4e300b5c0400d',
+                        name: 'News',
+                        __typename: 'ContentChannel',
+                      },
+                      videos: [],
+                      audios: [],
+                      __typename: 'UniversalContentItem',
+                    },
+                    __typename: 'ContentItemsConnectionEdge',
+                  },
+                  {
+                    node: {
+                      id:
+                        'UniversalContentItem:7db601b238aa4345a818654300f83dd2',
+                      title: 'Robert Madu is Coming to Christ Fellowship',
+                      hyphenatedTitle:
+                        'Robert Madu is Coming to Christ Fellowship',
+                      isLiked: false,
+                      likedCount: 5,
+                      summary:
+                        "Don't miss a powerful message from preacher and speaker, Robert Madu.",
+                      coverImage: {
+                        name: 'Square Image',
+                        sources: [
+                          {
+                            uri:
+                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3Df3ba0936-8aab-46c1-8245-0e5aef637ae3',
+                            __typename: 'ImageMediaSource',
+                          },
+                        ],
+                        __typename: 'ImageMedia',
+                      },
+                      theme: null,
+                      parentChannel: {
+                        id: 'ContentChannel:965b6e6d7046a885bea4e300b5c0400d',
+                        name: 'News',
+                        __typename: 'ContentChannel',
+                      },
+                      videos: [],
+                      audios: [],
+                      __typename: 'UniversalContentItem',
+                    },
+                    __typename: 'ContentItemsConnectionEdge',
+                  },
+                  {
+                    node: {
+                      id:
+                        'UniversalContentItem:296373ecb53580855cadffa0375ebe18',
+                      title: 'Guys Night!',
+                      hyphenatedTitle: 'Guys Night!',
+                      isLiked: false,
+                      likedCount: 0,
+                      summary:
+                        'A time to connect with other guys who live nearby.',
+                      coverImage: {
+                        name: 'Square Image',
+                        sources: [
+                          {
+                            uri:
+                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D58c037fa-cc7f-4d72-9571-a0cc0558e346',
+                            __typename: 'ImageMediaSource',
+                          },
+                        ],
+                        __typename: 'ImageMedia',
+                      },
+                      theme: null,
+                      parentChannel: {
+                        id: 'ContentChannel:965b6e6d7046a885bea4e300b5c0400d',
+                        name: 'News',
+                        __typename: 'ContentChannel',
+                      },
+                      videos: [],
+                      audios: [],
+                      __typename: 'UniversalContentItem',
+                    },
+                    __typename: 'ContentItemsConnectionEdge',
+                  },
+                ],
+                __typename: 'ContentItemsConnection',
+              },
+              __typename: 'ContentChannel',
+            },
+            {
+              id: 'ContentChannel:4f68015ba18662a7409d1219a4ce013e',
+              name: 'Articles',
+              childContentItemsConnection: {
+                edges: [
+                  {
+                    node: {
+                      id:
+                        'UniversalContentItem:604a4a763a5fc0edfe386684ca6b3515',
+                      title: 'Test Article',
+                      hyphenatedTitle: 'Test Article',
+                      isLiked: false,
+                      likedCount: 0,
+                      summary: 'Test article...',
+                      coverImage: null,
+                      theme: null,
+                      parentChannel: {
+                        id: 'ContentChannel:4f68015ba18662a7409d1219a4ce013e',
+                        name: 'Articles',
+                        __typename: 'ContentChannel',
+                      },
+                      videos: [],
+                      audios: [],
+                      __typename: 'UniversalContentItem',
+                    },
+                    __typename: 'ContentItemsConnectionEdge',
+                  },
+                  {
+                    node: {
+                      id:
+                        'UniversalContentItem:c495ff18cd998ed516a798b6218907cd',
+                      title: '10 ways to refresh your spirit every day',
+                      hyphenatedTitle:
+                        '10 ways to refresh your spirit every day',
+                      isLiked: false,
+                      likedCount: 2,
+                      summary:
+                        '1. Be slow What would it look like to live your life at half-speed?',
+                      coverImage: null,
+                      theme: null,
+                      parentChannel: {
+                        id: 'ContentChannel:4f68015ba18662a7409d1219a4ce013e',
+                        name: 'Articles',
+                        __typename: 'ContentChannel',
+                      },
+                      videos: [],
+                      audios: [],
+                      __typename: 'UniversalContentItem',
+                    },
+                    __typename: 'ContentItemsConnectionEdge',
+                  },
+                  {
+                    node: {
+                      id:
+                        'UniversalContentItem:95ff79f60a028b1b506aaeedf8b4c6ae',
+                      title: 'Live for Freedom Toolkit',
+                      hyphenatedTitle: 'Live for Freedom Toolkit',
+                      isLiked: false,
+                      likedCount: 1,
+                      summary:
+                        "Get in the Groove\nCelebrate your freedom in Christ — in the car, shower, cubicle or wherever you go — with this playlist of NewSpring Worship's favorite songs of the summer.",
+                      coverImage: null,
+                      theme: null,
+                      parentChannel: {
+                        id: 'ContentChannel:4f68015ba18662a7409d1219a4ce013e',
+                        name: 'Articles',
+                        __typename: 'ContentChannel',
+                      },
+                      videos: [],
+                      audios: [],
+                      __typename: 'UniversalContentItem',
+                    },
+                    __typename: 'ContentItemsConnectionEdge',
+                  },
+                ],
+                __typename: 'ContentItemsConnection',
+              },
+              __typename: 'ContentChannel',
+            },
+            {
+              id: 'ContentChannel:a0f64573eabf00a607bec911794d50fb',
+              name: 'Sermon Series',
+              childContentItemsConnection: {
+                edges: [
+                  {
+                    node: {
+                      id:
+                        'ContentSeriesContentItem:6d8dc8e4bad017f815ae0cac8bf692bb',
+                      title: 'The New Weekend Experience',
+                      hyphenatedTitle: 'The New Weekend Experience',
+                      isLiked: false,
+                      likedCount: 1,
+                      summary:
+                        'Have you come into relationship with Jesus Christ?',
+                      coverImage: {
+                        name: 'Series Image',
+                        sources: [
+                          {
+                            uri:
+                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D98be229f-dfed-4344-86ab-0d11666fc781',
+                            __typename: 'ImageMediaSource',
+                          },
+                        ],
+                        __typename: 'ImageMedia',
+                      },
+                      theme: null,
+                      parentChannel: {
+                        id: 'ContentChannel:a0f64573eabf00a607bec911794d50fb',
+                        name: 'Sermon Series',
+                        __typename: 'ContentChannel',
+                      },
+                      videos: [
+                        { sources: [], __typename: 'VideoMedia' },
+                        { sources: [], __typename: 'VideoMedia' },
+                      ],
+                      audios: [],
+                      __typename: 'ContentSeriesContentItem',
+                    },
+                    __typename: 'ContentItemsConnectionEdge',
+                  },
+                  {
+                    node: {
+                      id:
+                        'ContentSeriesContentItem:08449058d438ebeaffe9adb7a8e633cc',
+                      title: 'Gathering',
+                      hyphenatedTitle: 'Gathering',
+                      isLiked: false,
+                      likedCount: 0,
+                      summary: '',
+                      coverImage: {
+                        name: 'Square Image',
+                        sources: [
+                          {
+                            uri:
+                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D50f4e3e3-2842-4991-9f64-8fc6fbb3067c',
+                            __typename: 'ImageMediaSource',
+                          },
+                        ],
+                        __typename: 'ImageMedia',
+                      },
+                      theme: null,
+                      parentChannel: {
+                        id: 'ContentChannel:a0f64573eabf00a607bec911794d50fb',
+                        name: 'Sermon Series',
+                        __typename: 'ContentChannel',
+                      },
+                      videos: [
+                        { sources: [], __typename: 'VideoMedia' },
+                        { sources: [], __typename: 'VideoMedia' },
+                      ],
+                      audios: [],
+                      __typename: 'ContentSeriesContentItem',
+                    },
+                    __typename: 'ContentItemsConnectionEdge',
+                  },
+                  {
+                    node: {
+                      id:
+                        'ContentSeriesContentItem:b74c2d295a0cf1340232ffa8be856c00',
+                      title: 'Gauntlet 2018',
+                      hyphenatedTitle: 'Gauntlet 2018',
+                      isLiked: false,
+                      likedCount: 0,
+                      summary: '',
+                      coverImage: {
+                        name: 'Square Image',
+                        sources: [
+                          {
+                            uri:
+                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D3e3e38d2-d804-45db-b45a-3b7a82c415d1',
+                            __typename: 'ImageMediaSource',
+                          },
+                        ],
+                        __typename: 'ImageMedia',
+                      },
+                      theme: null,
+                      parentChannel: {
+                        id: 'ContentChannel:a0f64573eabf00a607bec911794d50fb',
+                        name: 'Sermon Series',
+                        __typename: 'ContentChannel',
+                      },
+                      videos: [
+                        { sources: [], __typename: 'VideoMedia' },
+                        { sources: [], __typename: 'VideoMedia' },
+                      ],
+                      audios: [],
+                      __typename: 'ContentSeriesContentItem',
+                    },
+                    __typename: 'ContentItemsConnectionEdge',
+                  },
+                ],
+                __typename: 'ContentItemsConnection',
+              },
+              __typename: 'ContentChannel',
+            },
+            {
+              id: 'ContentChannel:7fba1b1ee253e0fd5f0795b4b8b1175e',
+              name: 'Devotion Series',
+              childContentItemsConnection: {
+                edges: [
+                  {
+                    node: {
+                      id:
+                        'ContentSeriesContentItem:b085ec27d53006e9e6b95f3ac57da581',
+                      title: 'Jeremiah: A 33-Day Devotional',
+                      hyphenatedTitle: 'Jeremiah: A 33-Day Devotional',
+                      isLiked: true,
+                      likedCount: 6,
+                      summary: 'Have you ever had to deliver difficult news?',
+                      coverImage: {
+                        name: 'Square Image',
+                        sources: [
+                          {
+                            uri:
+                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D31af1a61-360c-4b1e-8e62-45517c06a9a2',
+                            __typename: 'ImageMediaSource',
+                          },
+                        ],
+                        __typename: 'ImageMedia',
+                      },
+                      theme: null,
+                      parentChannel: {
+                        id: 'ContentChannel:7fba1b1ee253e0fd5f0795b4b8b1175e',
+                        name: 'Devotion Series',
+                        __typename: 'ContentChannel',
+                      },
+                      videos: [{ sources: [], __typename: 'VideoMedia' }],
+                      audios: [],
+                      __typename: 'ContentSeriesContentItem',
+                    },
+                    __typename: 'ContentItemsConnectionEdge',
+                  },
+                  {
+                    node: {
+                      id:
+                        'ContentSeriesContentItem:71bfdac0b98ea1b72a63ff4ea64e3c5a',
+                      title: 'How To Be A Better Leader: A 7-Day Devotional',
+                      hyphenatedTitle:
+                        'How To Be A Better Leader: A 7-Day Devotional',
+                      isLiked: false,
+                      likedCount: 0,
+                      summary: '',
+                      coverImage: {
+                        name: 'Square Image',
+                        sources: [
+                          {
+                            uri:
+                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3Dd3a96243-2558-4c04-bf41-3aadcf41771f',
+                            __typename: 'ImageMediaSource',
+                          },
+                        ],
+                        __typename: 'ImageMedia',
+                      },
+                      theme: null,
+                      parentChannel: {
+                        id: 'ContentChannel:7fba1b1ee253e0fd5f0795b4b8b1175e',
+                        name: 'Devotion Series',
+                        __typename: 'ContentChannel',
+                      },
+                      videos: [{ sources: [], __typename: 'VideoMedia' }],
+                      audios: [],
+                      __typename: 'ContentSeriesContentItem',
+                    },
+                    __typename: 'ContentItemsConnectionEdge',
+                  },
+                  {
+                    node: {
+                      id:
+                        'ContentSeriesContentItem:44fd3b82373ea8f197bd1e1e77c4bed0',
+                      title: '2 Thessalonians: A 5-Day Devotional',
+                      hyphenatedTitle: '2 Thessalonians: A 5-Day Devotional',
+                      isLiked: false,
+                      likedCount: 0,
+                      summary: '',
+                      coverImage: {
+                        name: 'Square Image',
+                        sources: [
+                          {
+                            uri:
+                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D70b0b57c-5a15-4f46-8e6a-c759231685bf',
+                            __typename: 'ImageMediaSource',
+                          },
+                        ],
+                        __typename: 'ImageMedia',
+                      },
+                      theme: null,
+                      parentChannel: {
+                        id: 'ContentChannel:7fba1b1ee253e0fd5f0795b4b8b1175e',
+                        name: 'Devotion Series',
+                        __typename: 'ContentChannel',
+                      },
+                      videos: [{ sources: [], __typename: 'VideoMedia' }],
+                      audios: [],
+                      __typename: 'ContentSeriesContentItem',
+                    },
+                    __typename: 'ContentItemsConnectionEdge',
+                  },
+                ],
+                __typename: 'ContentItemsConnection',
+              },
+              __typename: 'ContentChannel',
+            },
+            {
+              id: 'ContentChannel:be7381e9c2fea9f41504cd98d4b14321',
+              name: 'Stories',
+              childContentItemsConnection: {
+                edges: [
+                  {
+                    node: {
+                      id:
+                        'UniversalContentItem:cf8fa657f23af88a2d63f7e4a2237db8',
+                      title:
+                        'The surprising journey that changed me and my dad',
+                      hyphenatedTitle:
+                        'The surprising journey that changed me and my dad',
+                      isLiked: false,
+                      likedCount: 6,
+                      summary:
+                        'My father, Darwin, has always been involved in my life.',
+                      coverImage: {
+                        name: 'Square Image',
+                        sources: [
+                          {
+                            uri:
+                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D2a65e561-cd6e-4590-bb37-029a21c554e8',
+                            __typename: 'ImageMediaSource',
+                          },
+                        ],
+                        __typename: 'ImageMedia',
+                      },
+                      theme: null,
+                      parentChannel: {
+                        id: 'ContentChannel:be7381e9c2fea9f41504cd98d4b14321',
+                        name: 'Stories',
+                        __typename: 'ContentChannel',
+                      },
+                      videos: [],
+                      audios: [],
+                      __typename: 'UniversalContentItem',
+                    },
+                    __typename: 'ContentItemsConnectionEdge',
+                  },
+                  {
+                    node: {
+                      id:
+                        'UniversalContentItem:2e17f5a66407d114ab9f2392b03ebccd',
+                      title: 'When I lost hope, my church family had my back',
+                      hyphenatedTitle:
+                        'When I lost hope, my church family had my back',
+                      isLiked: true,
+                      likedCount: 5,
+                      summary:
+                        'Brian Kalwat was just trying to knock something off his honey-do list.',
+                      coverImage: {
+                        name: 'Square Image',
+                        sources: [
+                          {
+                            uri:
+                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D0305285f-1155-4405-ba38-a61b9c8558be',
+                            __typename: 'ImageMediaSource',
+                          },
+                        ],
+                        __typename: 'ImageMedia',
+                      },
+                      theme: null,
+                      parentChannel: {
+                        id: 'ContentChannel:be7381e9c2fea9f41504cd98d4b14321',
+                        name: 'Stories',
+                        __typename: 'ContentChannel',
+                      },
+                      videos: [],
+                      audios: [],
+                      __typename: 'UniversalContentItem',
+                    },
+                    __typename: 'ContentItemsConnectionEdge',
+                  },
+                  {
+                    node: {
+                      id:
+                        'UniversalContentItem:ae8ec75906ba7437c49ad2534b5024db',
+                      title: 'A Place to Worship Free of Fear',
+                      hyphenatedTitle: 'A Place to Worship Free of Fear',
+                      isLiked: false,
+                      likedCount: 1,
+                      summary:
+                        'Cornelius &amp; Stephanie Mack, proud parents of a Special Friends adult, share about their experience\nOur son Cameron began attending Willow Creek Special Friends in 2015.',
+                      coverImage: {
+                        name: 'Portrait Image',
+                        sources: [
+                          {
+                            uri:
+                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3Da65bc45d-f961-4b7e-a899-63eb1f9b8da9',
+                            __typename: 'ImageMediaSource',
+                          },
+                        ],
+                        __typename: 'ImageMedia',
+                      },
+                      theme: null,
+                      parentChannel: {
+                        id: 'ContentChannel:be7381e9c2fea9f41504cd98d4b14321',
+                        name: 'Stories',
+                        __typename: 'ContentChannel',
+                      },
+                      videos: [],
+                      audios: [],
+                      __typename: 'UniversalContentItem',
+                    },
+                    __typename: 'ContentItemsConnectionEdge',
+                  },
+                ],
+                __typename: 'ContentItemsConnection',
+              },
+              __typename: 'ContentChannel',
+            },
+          ],
+        },
+      },
+    };
+    const mockChannelCardData = flatMap(
+      mockFeedData.result.data.contentChannels,
+      (contentChannel) =>
+        contentChannel.childContentItemsConnection.edges.map((edge) => ({
+          request: {
+            query: GET_CONTENT_CARD,
+            variables: { contentId: edge.node.id },
+          },
+          result: {
+            data: {
+              node: edge.node,
+            },
+          },
+        }))
+    );
+
+    const DiscoverStack = createStackNavigator({ DiscoverFeed });
+    const DiscoverFeedWithNavigation = createAppContainer(DiscoverStack);
+    const tree = await renderWithApolloData(
+      <Providers mocks={[mockFeedData, ...mockChannelCardData]}>
+        <DiscoverFeedWithNavigation />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a loading state', () => {
+    const DiscoverStack = createStackNavigator({ DiscoverFeed });
+    const DiscoverFeedWithNavigation = createAppContainer(DiscoverStack);
+    const tree = renderer.create(
+      <Providers cache={null}>
+        <DiscoverFeedWithNavigation />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/tabs/discover/TileContentFeed.js b/apolloschurchapp/src/tabs/discover/DiscoverFeed/TileContentFeed.js
similarity index 60%
rename from apolloschurchapp/src/tabs/discover/TileContentFeed.js
rename to apolloschurchapp/src/tabs/discover/DiscoverFeed/TileContentFeed.js
index 656cf7f..62c31bb 100644
--- a/apolloschurchapp/src/tabs/discover/TileContentFeed.js
+++ b/apolloschurchapp/src/tabs/discover/DiscoverFeed/TileContentFeed.js
@@ -1,6 +1,7 @@
 import React from 'react';
 import { View } from 'react-native';
 import { withNavigation } from 'react-navigation';
+import isEmpty from 'lodash/isEmpty';
 import PropTypes from 'prop-types';
 
 import {
@@ -15,14 +16,13 @@ import {
   withIsLoading,
 } from '@apollosproject/ui-kit';
 
-import ContentCardConnected from '../../ui/ContentCardConnected';
+import HorizontalContentCardConnected from '../../../ui/HorizontalContentCardConnected';
 
 const RowHeader = styled(({ theme }) => ({
   flexDirection: 'row',
   justifyContent: 'space-between',
   alignItems: 'center',
   zIndex: 2, // UX hack to improve tapability. Positions RowHeader above StyledHorizontalTileFeed
-  paddingTop: theme.sizing.baseUnit * 0.5,
   paddingLeft: theme.sizing.baseUnit,
 }))(View);
 
@@ -31,7 +31,7 @@ const Name = styled({
 })(View);
 
 const AndroidTouchableFix = withTheme(({ theme }) => ({
-  borderRadius: theme.sizing.baseUnit / 2,
+  borderRadius: theme.sizing.baseBorderRadius / 2,
 }))(Touchable);
 
 const ButtonLinkSpacing = styled(({ theme }) => ({
@@ -44,6 +44,7 @@ const StyledHorizontalTileFeed = styled(({ theme }) => ({
   /* UX hack to improve tapability. The magic number below happens to be the number of pixels that
    * aligns everything in the same place as if none of the UX hacks were there. */
   marginTop: theme.sizing.baseUnit * -1.25,
+  paddingBottom: theme.sizing.baseUnit,
   zIndex: 1,
 }))(HorizontalTileFeed);
 
@@ -53,50 +54,49 @@ const loadingStateObject = {
   coverImage: [],
 };
 
-const TileContentFeed = ({ isLoading, id, name, navigation, content = [] }) => (
-  <>
-    <RowHeader>
-      <Name>
-        <H5>{name}</H5>
-      </Name>
-      <AndroidTouchableFix
-        onPress={() => {
-          navigation.navigate('ContentFeed', {
-            itemId: id,
-            itemTitle: name,
-          });
-        }}
-      >
-        <ButtonLinkSpacing>
-          <H6>
-            <ButtonLink>View All</ButtonLink>
-          </H6>
-        </ButtonLinkSpacing>
-      </AndroidTouchableFix>
-    </RowHeader>
-    <StyledHorizontalTileFeed
-      content={content}
-      renderItem={({ item }) => (
-        <TouchableScale
+const TileContentFeed = ({ isLoading, id, name, navigation, content = [] }) =>
+  (isLoading || !isEmpty(content)) && (
+    <>
+      <RowHeader>
+        <Name>
+          <H5>{name}</H5>
+        </Name>
+        <AndroidTouchableFix
           onPress={() => {
-            navigation.push('ContentSingle', {
-              itemId: item.id,
+            navigation.navigate('ContentFeed', {
+              itemId: id,
+              itemTitle: name,
             });
           }}
         >
-          <ContentCardConnected
-            contentId={item.id}
-            isLoading={isLoading}
-            tile
-            inHorizontalList
-          />
-        </TouchableScale>
-      )}
-      loadingStateObject={loadingStateObject}
-      isLoading={isLoading}
-    />
-  </>
-);
+          <ButtonLinkSpacing>
+            <H6>
+              <ButtonLink>View All</ButtonLink>
+            </H6>
+          </ButtonLinkSpacing>
+        </AndroidTouchableFix>
+      </RowHeader>
+      <StyledHorizontalTileFeed
+        content={content}
+        renderItem={({ item }) => (
+          <TouchableScale
+            onPress={() => {
+              navigation.push('ContentSingle', {
+                itemId: item.id,
+              });
+            }}
+          >
+            <HorizontalContentCardConnected
+              contentId={item.id}
+              isLoading={isLoading}
+            />
+          </TouchableScale>
+        )}
+        loadingStateObject={loadingStateObject}
+        isLoading={isLoading}
+      />
+    </>
+  );
 
 TileContentFeed.propTypes = {
   navigation: PropTypes.shape({
diff --git a/apolloschurchapp/src/tabs/discover/DiscoverFeed/getContentChannels.js b/apolloschurchapp/src/tabs/discover/DiscoverFeed/getContentChannels.js
new file mode 100644
index 0000000..e581ca1
--- /dev/null
+++ b/apolloschurchapp/src/tabs/discover/DiscoverFeed/getContentChannels.js
@@ -0,0 +1,21 @@
+import gql from 'graphql-tag';
+
+import { BASE_CARD_FRAGMENT } from 'apolloschurchapp/src/ui/ContentCardConnected';
+
+export default gql`
+  query getContentChannels {
+    contentChannels {
+      id
+      name
+      childContentItemsConnection(first: 3) {
+        edges {
+          node {
+            id
+            ...baseCardFragment
+          }
+        }
+      }
+    }
+  }
+  ${BASE_CARD_FRAGMENT}
+`;
diff --git a/apolloschurchapp/src/tabs/discover/DiscoverFeed/index.js b/apolloschurchapp/src/tabs/discover/DiscoverFeed/index.js
new file mode 100644
index 0000000..9e4006b
--- /dev/null
+++ b/apolloschurchapp/src/tabs/discover/DiscoverFeed/index.js
@@ -0,0 +1,52 @@
+import React, { memo } from 'react';
+import { Query } from 'react-apollo';
+import { get } from 'lodash';
+
+import { FeedView } from '@apollosproject/ui-kit';
+
+import TileContentFeed from './TileContentFeed';
+import GET_CONTENT_CHANNELS from './getContentChannels';
+
+const childContentItemLoadingState = {
+  title: '',
+  isLoading: true,
+};
+
+const feedItemLoadingState = {
+  name: '',
+  isLoading: true,
+};
+
+const renderItem = (
+  { item } // eslint-disable-line react/prop-types
+) => (
+  <TileContentFeed
+    id={item.id}
+    name={item.name}
+    content={get(item, 'childContentItemsConnection.edges', []).map(
+      (edge) => edge.node
+    )}
+    isLoading={item.isLoading}
+    loadingStateObject={childContentItemLoadingState}
+  />
+);
+
+const DiscoverFeed = memo(() => (
+  <Query query={GET_CONTENT_CHANNELS} fetchPolicy="cache-and-network">
+    {({ error, loading, data: { contentChannels = [] } = {}, refetch }) => (
+      <FeedView
+        error={error}
+        content={contentChannels}
+        isLoading={loading && !contentChannels.length}
+        refetch={refetch}
+        renderItem={renderItem}
+        loadingStateObject={feedItemLoadingState}
+        numColumns={1}
+      />
+    )}
+  </Query>
+));
+
+DiscoverFeed.displayName = 'DiscoverFeed';
+
+export default DiscoverFeed;
diff --git a/apolloschurchapp/src/tabs/discover/SearchFeed/NoResults.js b/apolloschurchapp/src/tabs/discover/SearchFeed/NoResults.js
new file mode 100644
index 0000000..7cc7a56
--- /dev/null
+++ b/apolloschurchapp/src/tabs/discover/SearchFeed/NoResults.js
@@ -0,0 +1,57 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+
+import {
+  styled,
+  withTheme,
+  CenteredView,
+  PaddedView,
+  Icon,
+  H4,
+  BodySmall,
+} from '@apollosproject/ui-kit';
+
+const StyledIcon = withTheme(({ theme }) => ({
+  fill: theme.colors.text.tertiary,
+  style: {
+    marginRight: theme.sizing.baseUnit / 2,
+  },
+}))(Icon);
+
+const Title = styled({
+  flexDirection: 'row',
+  alignItems: 'center',
+})(PaddedView);
+
+const NoResultsText = styled(
+  ({ theme }) => ({
+    color: theme.colors.text.tertiary,
+    textAlign: 'center',
+  }),
+  'Discover.SearchFeed.NoResultsText'
+);
+
+const StyledH4 = NoResultsText(H4);
+const StyledBodySmall = NoResultsText(BodySmall);
+
+const NoResults = ({ searchText }) => (
+  <CenteredView>
+    <Title vertical={false}>
+      <StyledIcon name={'umbrella'} />
+      <StyledH4 padded>Uh Oh!</StyledH4>
+    </Title>
+    <PaddedView vertical={false}>
+      <StyledBodySmall>
+        {"Looks like we couldn't find anything for "}
+        <StyledBodySmall bold>{`"${searchText}."`}</StyledBodySmall>
+        {' Try searching for something else!'}
+      </StyledBodySmall>
+    </PaddedView>
+  </CenteredView>
+);
+
+NoResults.propTypes = {
+  searchText: PropTypes.string,
+};
+
+export default NoResults;
diff --git a/apolloschurchapp/src/tabs/discover/SearchFeed/SearchFeed.tests.js b/apolloschurchapp/src/tabs/discover/SearchFeed/SearchFeed.tests.js
new file mode 100644
index 0000000..aed2839
--- /dev/null
+++ b/apolloschurchapp/src/tabs/discover/SearchFeed/SearchFeed.tests.js
@@ -0,0 +1,353 @@
+import React from 'react';
+import { flatMap } from 'lodash';
+import { createStackNavigator, createAppContainer } from 'react-navigation';
+import renderer from 'react-test-renderer';
+
+import Providers from '../../../Providers';
+import { renderWithApolloData } from '../../../utils/testUtils';
+import GET_CONTENT_CARD from '../../../ui/ContentCardConnected/query';
+
+import GET_SEARCH_RESULTS from './getSearchResults';
+import SearchFeed from '.';
+
+describe('The SearchFeed component', () => {
+  it('should render', async () => {
+    const mockFeedData = {
+      request: {
+        query: GET_SEARCH_RESULTS,
+        variables: { searchText: 'Love' },
+      },
+      result: {
+        data: {
+          search: {
+            edges: [
+              {
+                title: 'How to lead people to Jesus',
+                summary:
+                  'Love compels a mother to lose all dignity in public as she screams the name of her lost child.',
+                coverImage: {
+                  name: null,
+                  sources: [
+                    {
+                      uri:
+                        'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3Dd3a96243-2558-4c04-bf41-3aadcf41771f',
+                      __typename: 'ImageMediaSource',
+                    },
+                  ],
+                  __typename: 'ImageMedia',
+                },
+                cursor: 'b487224762b030f470967f45d7205823',
+                node: {
+                  id: 'DevotionalContentItem:561dfb7dbd8a5c093fd8385c7edaadbc',
+                  title: 'How to lead people to Jesus',
+                  hyphenatedTitle: '-',
+                  isLiked: false,
+                  likedCount: 0,
+                  summary:
+                    'Love compels a mother to lose all dignity in public as she screams the name of her lost child.',
+                  coverImage: {
+                    name: 'Square Image',
+                    sources: [
+                      {
+                        uri:
+                          'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3Dd3a96243-2558-4c04-bf41-3aadcf41771f',
+                        __typename: 'ImageMediaSource',
+                      },
+                    ],
+                    __typename: 'ImageMedia',
+                  },
+                  theme: null,
+                  parentChannel: {
+                    id: 'ContentChannel:559b23fd0aa90e81b1c023e72e230fa1',
+                    name: 'Devotional',
+                    __typename: 'ContentChannel',
+                  },
+                  videos: [{ sources: [], __typename: 'VideoMedia' }],
+                  audios: [],
+                  __typename: 'DevotionalContentItem',
+                },
+                __typename: 'SearchResult',
+              },
+              {
+                title: 'Live for Freedom Toolkit',
+                summary:
+                  "Get in the Groove\nCelebrate your freedom in Christ — in the car, shower, cubicle or wherever you go — with this playlist of NewSpring Worship's favorite songs of the summer.",
+                coverImage: null,
+                cursor: '4affc1122ad80d4edcf6c5bc9d88ae99',
+                node: {
+                  id: 'UniversalContentItem:95ff79f60a028b1b506aaeedf8b4c6ae',
+                  title: 'Live for Freedom Toolkit',
+                  hyphenatedTitle: '-',
+                  isLiked: false,
+                  likedCount: 1,
+                  summary:
+                    "Get in the Groove\nCelebrate your freedom in Christ — in the car, shower, cubicle or wherever you go — with this playlist of NewSpring Worship's favorite songs of the summer.",
+                  coverImage: null,
+                  theme: null,
+                  parentChannel: {
+                    id: 'ContentChannel:4f68015ba18662a7409d1219a4ce013e',
+                    name: 'Articles',
+                    __typename: 'ContentChannel',
+                  },
+                  videos: [],
+                  audios: [],
+                  __typename: 'UniversalContentItem',
+                },
+                __typename: 'SearchResult',
+              },
+              {
+                title: 'Should your 20-something live at home?',
+                summary:
+                  'Daughter: “Mom, can I bring some friends from college over for dinner Sunday?',
+                coverImage: {
+                  name: null,
+                  sources: [
+                    {
+                      uri:
+                        'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3Db08e4d69-0acf-40ff-920a-4517de086175',
+                      __typename: 'ImageMediaSource',
+                    },
+                  ],
+                  __typename: 'ImageMedia',
+                },
+                cursor: '659a26257a49fb2bf1446bb747bf7dd3',
+                node: {
+                  id: 'UniversalContentItem:895738f70482712adb3ab45a08c30456',
+                  title: 'Should your 20-something live at home?',
+                  hyphenatedTitle: '-',
+                  isLiked: false,
+                  likedCount: 0,
+                  summary:
+                    'Daughter: “Mom, can I bring some friends from college over for dinner Sunday?',
+                  coverImage: {
+                    name: 'Landscape Image',
+                    sources: [
+                      {
+                        uri:
+                          'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3Db08e4d69-0acf-40ff-920a-4517de086175',
+                        __typename: 'ImageMediaSource',
+                      },
+                    ],
+                    __typename: 'ImageMedia',
+                  },
+                  theme: null,
+                  parentChannel: {
+                    id: 'ContentChannel:4f68015ba18662a7409d1219a4ce013e',
+                    name: 'Articles',
+                    __typename: 'ContentChannel',
+                  },
+                  videos: [],
+                  audios: [],
+                  __typename: 'UniversalContentItem',
+                },
+                __typename: 'SearchResult',
+              },
+              {
+                title: 'Guys Night!',
+                summary: 'A time to connect with other guys who live nearby.',
+                coverImage: {
+                  name: null,
+                  sources: [
+                    {
+                      uri:
+                        'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D58c037fa-cc7f-4d72-9571-a0cc0558e346',
+                      __typename: 'ImageMediaSource',
+                    },
+                  ],
+                  __typename: 'ImageMedia',
+                },
+                cursor: 'c8d2fe738629909c33010432432f21c8',
+                node: {
+                  id: 'UniversalContentItem:296373ecb53580855cadffa0375ebe18',
+                  title: 'Guys Night!',
+                  hyphenatedTitle: '-',
+                  isLiked: false,
+                  likedCount: 0,
+                  summary: 'A time to connect with other guys who live nearby.',
+                  coverImage: {
+                    name: 'Square Image',
+                    sources: [
+                      {
+                        uri:
+                          'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D58c037fa-cc7f-4d72-9571-a0cc0558e346',
+                        __typename: 'ImageMediaSource',
+                      },
+                    ],
+                    __typename: 'ImageMedia',
+                  },
+                  theme: null,
+                  parentChannel: {
+                    id: 'ContentChannel:965b6e6d7046a885bea4e300b5c0400d',
+                    name: 'News',
+                    __typename: 'ContentChannel',
+                  },
+                  videos: [],
+                  audios: [],
+                  __typename: 'UniversalContentItem',
+                },
+                __typename: 'SearchResult',
+              },
+              {
+                title: '10 ways to refresh your spirit every day',
+                summary:
+                  '1. Be slow What would it look like to live your life at half-speed?',
+                coverImage: null,
+                cursor: 'ba47485fbc61945a38a4147fe7ff3703',
+                node: {
+                  id: 'UniversalContentItem:c495ff18cd998ed516a798b6218907cd',
+                  title: '10 ways to refresh your spirit every day',
+                  hyphenatedTitle: '-',
+                  isLiked: false,
+                  likedCount: 2,
+                  summary:
+                    '1. Be slow What would it look like to live your life at half-speed?',
+                  coverImage: null,
+                  theme: null,
+                  parentChannel: {
+                    id: 'ContentChannel:4f68015ba18662a7409d1219a4ce013e',
+                    name: 'Articles',
+                    __typename: 'ContentChannel',
+                  },
+                  videos: [],
+                  audios: [],
+                  __typename: 'UniversalContentItem',
+                },
+                __typename: 'SearchResult',
+              },
+              {
+                title: 'Why leadership isn’t all about the title',
+                summary:
+                  'We all like to know that our boss or the authority over us is pleased, and it means even more when they take the time to share that in front of other people.',
+                coverImage: {
+                  name: null,
+                  sources: [
+                    {
+                      uri:
+                        'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3Dd3a96243-2558-4c04-bf41-3aadcf41771f',
+                      __typename: 'ImageMediaSource',
+                    },
+                  ],
+                  __typename: 'ImageMedia',
+                },
+                cursor: '9456eef87e314dcf19f013384a29fd22',
+                node: {
+                  id: 'DevotionalContentItem:4dd74ceca9e09b5276e93cbf53821bd6',
+                  title: 'Why leadership isn’t all about the title',
+                  hyphenatedTitle: '-',
+                  isLiked: false,
+                  likedCount: 0,
+                  summary:
+                    'We all like to know that our boss or the authority over us is pleased, and it means even more when they take the time to share that in front of other people.',
+                  coverImage: {
+                    name: 'Square Image',
+                    sources: [
+                      {
+                        uri:
+                          'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3Dd3a96243-2558-4c04-bf41-3aadcf41771f',
+                        __typename: 'ImageMediaSource',
+                      },
+                    ],
+                    __typename: 'ImageMedia',
+                  },
+                  theme: null,
+                  parentChannel: {
+                    id: 'ContentChannel:559b23fd0aa90e81b1c023e72e230fa1',
+                    name: 'Devotional',
+                    __typename: 'ContentChannel',
+                  },
+                  videos: [{ sources: [], __typename: 'VideoMedia' }],
+                  audios: [],
+                  __typename: 'DevotionalContentItem',
+                },
+                __typename: 'SearchResult',
+              },
+            ],
+            __typename: 'SearchResultsConnection',
+          },
+        },
+      },
+    };
+
+    const mockSearchResultsCardData = flatMap(
+      mockFeedData.result.data.search.edges,
+      (node) => ({
+        request: {
+          query: GET_CONTENT_CARD,
+          variables: { contentId: node.id },
+        },
+        result: {
+          data: {
+            node,
+          },
+        },
+      })
+    );
+
+    const SearchStack = createStackNavigator({
+      SearchFeed: (props) => <SearchFeed searchText={'Love'} {...props} />, // eslint-disable-line react/display-name
+    });
+    const SearchFeedWithNavigation = createAppContainer(SearchStack);
+    const tree = await renderWithApolloData(
+      <Providers mocks={[mockFeedData, ...mockSearchResultsCardData]}>
+        <SearchFeedWithNavigation searchText={'Love'} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render an empty state', async () => {
+    const mockEmptyFeedData = {
+      request: {
+        query: GET_SEARCH_RESULTS,
+        variables: { searchText: 'No results here' },
+      },
+      result: {
+        data: {
+          search: {
+            edges: [],
+            __typename: 'SearchResultsConnection',
+          },
+        },
+      },
+    };
+
+    const mockEmptySearchResultsCardData = [
+      {
+        request: {
+          query: GET_CONTENT_CARD,
+          variables: { contentId: 'fake-id' },
+        },
+        result: {
+          data: {},
+        },
+      },
+    ];
+
+    const SearchStack = createStackNavigator({
+      // eslint-disable-next-line react/display-name
+      SearchFeed: (props) => (
+        <SearchFeed searchText={'No results here'} {...props} />
+      ),
+    });
+
+    const SearchFeedWithNavigation = createAppContainer(SearchStack);
+    const tree = await renderWithApolloData(
+      <Providers
+        mocks={[mockEmptyFeedData, ...mockEmptySearchResultsCardData]}
+        cache={null}
+      >
+        <SearchFeedWithNavigation searchText={'No results here'} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a loading state', () => {
+    const SearchStack = createStackNavigator({ SearchFeed });
+    const SearchFeedWithNavigation = createAppContainer(SearchStack);
+    const tree = renderer.create(
+      <Providers cache={null}>
+        <SearchFeedWithNavigation searchText={'Love'} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/tabs/discover/SearchFeed/getSearchResults.js b/apolloschurchapp/src/tabs/discover/SearchFeed/getSearchResults.js
new file mode 100644
index 0000000..9f7dbe8
--- /dev/null
+++ b/apolloschurchapp/src/tabs/discover/SearchFeed/getSearchResults.js
@@ -0,0 +1,25 @@
+import gql from 'graphql-tag';
+
+export default gql`
+  query searchResults($searchText: String!) {
+    search(query: $searchText) {
+      edges {
+        title
+        summary
+        coverImage {
+          name
+          sources {
+            uri
+          }
+        }
+        cursor
+        node {
+          ... on ContentItem {
+            id
+            __typename
+          }
+        }
+      }
+    }
+  }
+`;
diff --git a/apolloschurchapp/src/tabs/discover/SearchFeed/index.js b/apolloschurchapp/src/tabs/discover/SearchFeed/index.js
new file mode 100644
index 0000000..2e6c5ec
--- /dev/null
+++ b/apolloschurchapp/src/tabs/discover/SearchFeed/index.js
@@ -0,0 +1,58 @@
+import React from 'react';
+import { withProps } from 'recompose';
+import { withNavigation } from 'react-navigation';
+import { Query } from 'react-apollo';
+import { get } from 'lodash';
+import PropTypes from 'prop-types';
+
+import { FeedView } from '@apollosproject/ui-kit';
+
+import SearchCard from '../../../ui/SearchCard';
+
+import GET_SEARCH_RESULTS from './getSearchResults';
+import NoResults from './NoResults';
+
+// this could be refactored into a custom effect hook 💥
+const StyledFeedView = withProps(({ hasContent }) => ({
+  contentContainerStyle: {
+    ...(hasContent ? {} : { flex: 1 }),
+  },
+}))(FeedView);
+
+const handleOnPress = ({ navigation, item }) => {
+  const id = get(item, 'node.id', null);
+  return navigation.navigate('ContentSingle', {
+    itemId: id,
+    transitionKey: item.transitionKey,
+  });
+};
+
+const keyExtractor = (item) => item && get(item, 'node.id', null);
+
+const SearchFeed = withNavigation(({ navigation, searchText }) => (
+  <Query
+    query={GET_SEARCH_RESULTS}
+    variables={{ searchText }}
+    fetchPolicy="cache-and-network"
+  >
+    {({ loading, error, data, refetch }) => (
+      <StyledFeedView
+        ListItemComponent={SearchCard}
+        content={get(data, 'search.edges', [])}
+        ListEmptyComponent={() => <NoResults searchText={searchText} />}
+        hasContent={get(data, 'search.edges', []).length}
+        isLoading={loading}
+        error={error}
+        refetch={refetch}
+        onPressItem={(item) => handleOnPress({ navigation, item })}
+        keyExtractor={keyExtractor}
+      />
+    )}
+  </Query>
+));
+
+SearchFeed.propTypes = {
+  searchText: PropTypes.string,
+};
+
+export default SearchFeed;
diff --git a/apolloschurchapp/src/tabs/discover/discover.tests.js b/apolloschurchapp/src/tabs/discover/discover.tests.js
index 96f2fde..abd60dd 100644
--- a/apolloschurchapp/src/tabs/discover/discover.tests.js
+++ b/apolloschurchapp/src/tabs/discover/discover.tests.js
@@ -1,52 +1,211 @@
 import React from 'react';
-import renderer from 'react-test-renderer';
-import { createStackNavigator } from 'react-navigation';
+import { flatMap } from 'lodash';
+import { createStackNavigator, createAppContainer } from 'react-navigation';
 
 import Providers from 'apolloschurchapp/src/Providers';
 
+import { renderWithApolloData } from '../../utils/testUtils';
+import GET_CONTENT_CARD from '../../ui/ContentCardConnected/query';
+
 import Discover from './Discover';
-import getContentChannels from './getContentChannels';
+import GET_CONTENT_CHANNELS from './DiscoverFeed/getContentChannels';
 
-describe('Test the Discover Component Query', () => {
-  it('Should retrieve the Content Channel Feeds', () => {
-    const mock = {
+describe('The Discover tab component', () => {
+  it('Should retrieve the Content Channel Feeds', async () => {
+    const mockFeedData = {
       request: {
-        query: getContentChannels,
+        query: GET_CONTENT_CHANNELS,
       },
       result: {
         data: {
           contentChannels: [
+            {
+              id: 'ContentChannel:965b6e6d7046a885bea4e300b5c0400d',
+              name: 'News',
+              childContentItemsConnection: {
+                edges: [
+                  {
+                    node: {
+                      id:
+                        'UniversalContentItem:00bb7b364911281c97fc50f2a0d17b11',
+                      title: 'Anderson Family Cookout!',
+                      hyphenatedTitle: 'Anderson Family Cookout!',
+                      isLiked: false,
+                      likedCount: 0,
+                      summary: 'Come join us!',
+                      coverImage: {
+                        name: 'Landscape Image',
+                        sources: [
+                          {
+                            uri:
+                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D62e0e2ba-2dac-468b-a852-7e8cf2533efc',
+                            __typename: 'ImageMediaSource',
+                          },
+                        ],
+                        __typename: 'ImageMedia',
+                      },
+                      theme: null,
+                      parentChannel: {
+                        id: 'ContentChannel:965b6e6d7046a885bea4e300b5c0400d',
+                        name: 'News',
+                        __typename: 'ContentChannel',
+                      },
+                      videos: [],
+                      audios: [],
+                      __typename: 'UniversalContentItem',
+                    },
+                    __typename: 'ContentItemsConnectionEdge',
+                  },
+                  {
+                    node: {
+                      id:
+                        'UniversalContentItem:7db601b238aa4345a818654300f83dd2',
+                      title: 'Robert Madu is Coming to Christ Fellowship',
+                      hyphenatedTitle:
+                        'Robert Madu is Coming to Christ Fellowship',
+                      isLiked: false,
+                      likedCount: 5,
+                      summary:
+                        "Don't miss a powerful message from preacher and speaker, Robert Madu.",
+                      coverImage: {
+                        name: 'Square Image',
+                        sources: [
+                          {
+                            uri:
+                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3Df3ba0936-8aab-46c1-8245-0e5aef637ae3',
+                            __typename: 'ImageMediaSource',
+                          },
+                        ],
+                        __typename: 'ImageMedia',
+                      },
+                      theme: null,
+                      parentChannel: {
+                        id: 'ContentChannel:965b6e6d7046a885bea4e300b5c0400d',
+                        name: 'News',
+                        __typename: 'ContentChannel',
+                      },
+                      videos: [],
+                      audios: [],
+                      __typename: 'UniversalContentItem',
+                    },
+                    __typename: 'ContentItemsConnectionEdge',
+                  },
+                  {
+                    node: {
+                      id:
+                        'UniversalContentItem:296373ecb53580855cadffa0375ebe18',
+                      title: 'Guys Night!',
+                      hyphenatedTitle: 'Guys Night!',
+                      isLiked: false,
+                      likedCount: 0,
+                      summary:
+                        'A time to connect with other guys who live nearby.',
+                      coverImage: {
+                        name: 'Square Image',
+                        sources: [
+                          {
+                            uri:
+                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D58c037fa-cc7f-4d72-9571-a0cc0558e346',
+                            __typename: 'ImageMediaSource',
+                          },
+                        ],
+                        __typename: 'ImageMedia',
+                      },
+                      theme: null,
+                      parentChannel: {
+                        id: 'ContentChannel:965b6e6d7046a885bea4e300b5c0400d',
+                        name: 'News',
+                        __typename: 'ContentChannel',
+                      },
+                      videos: [],
+                      audios: [],
+                      __typename: 'UniversalContentItem',
+                    },
+                    __typename: 'ContentItemsConnectionEdge',
+                  },
+                ],
+                __typename: 'ContentItemsConnection',
+              },
+              __typename: 'ContentChannel',
+            },
             {
               id: 'ContentChannel:4f68015ba18662a7409d1219a4ce013e',
-              name: 'Editorial',
+              name: 'Articles',
               childContentItemsConnection: {
                 edges: [
                   {
                     node: {
                       id:
-                        'UniversalContentItem:d57994350b9d213866b24dea3a97433d',
-                      title: 'Mea Animal Aperiam Ornatus Eu',
+                        'UniversalContentItem:604a4a763a5fc0edfe386684ca6b3515',
+                      title: 'Test Article',
+                      hyphenatedTitle: 'Test Article',
+                      isLiked: false,
+                      likedCount: 0,
+                      summary: 'Test article...',
                       coverImage: null,
+                      theme: null,
+                      parentChannel: {
+                        id: 'ContentChannel:4f68015ba18662a7409d1219a4ce013e',
+                        name: 'Articles',
+                        __typename: 'ContentChannel',
+                      },
+                      videos: [],
+                      audios: [],
+                      __typename: 'UniversalContentItem',
                     },
+                    __typename: 'ContentItemsConnectionEdge',
                   },
                   {
                     node: {
                       id:
-                        'UniversalContentItem:b36e55d803443431e96bb4b5068147ec',
-                      title: 'Probo Senserit Id Mea, Ut Sed Malis Postea,',
+                        'UniversalContentItem:c495ff18cd998ed516a798b6218907cd',
+                      title: '10 ways to refresh your spirit every day',
+                      hyphenatedTitle:
+                        '10 ways to refresh your spirit every day',
+                      isLiked: false,
+                      likedCount: 2,
+                      summary:
+                        '1. Be slow What would it look like to live your life at half-speed?',
                       coverImage: null,
+                      theme: null,
+                      parentChannel: {
+                        id: 'ContentChannel:4f68015ba18662a7409d1219a4ce013e',
+                        name: 'Articles',
+                        __typename: 'ContentChannel',
+                      },
+                      videos: [],
+                      audios: [],
+                      __typename: 'UniversalContentItem',
                     },
+                    __typename: 'ContentItemsConnectionEdge',
                   },
                   {
                     node: {
                       id:
-                        'UniversalContentItem:57c465ee3cd69524d729569b338607de',
-                      title: 'Ea Harum Albucius Mel',
+                        'UniversalContentItem:95ff79f60a028b1b506aaeedf8b4c6ae',
+                      title: 'Live for Freedom Toolkit',
+                      hyphenatedTitle: 'Live for Freedom Toolkit',
+                      isLiked: false,
+                      likedCount: 1,
+                      summary:
+                        "Get in the Groove\nCelebrate your freedom in Christ — in the car, shower, cubicle or wherever you go — with this playlist of NewSpring Worship's favorite songs of the summer.",
                       coverImage: null,
+                      theme: null,
+                      parentChannel: {
+                        id: 'ContentChannel:4f68015ba18662a7409d1219a4ce013e',
+                        name: 'Articles',
+                        __typename: 'ContentChannel',
+                      },
+                      videos: [],
+                      audios: [],
+                      __typename: 'UniversalContentItem',
                     },
+                    __typename: 'ContentItemsConnectionEdge',
                   },
                 ],
+                __typename: 'ContentItemsConnection',
               },
+              __typename: 'ContentChannel',
             },
             {
               id: 'ContentChannel:a0f64573eabf00a607bec911794d50fb',
@@ -56,50 +215,113 @@ describe('Test the Discover Component Query', () => {
                   {
                     node: {
                       id:
-                        'UniversalContentItem:1c627c20911791321f819125a65c3c9d',
-                      title: 'Money Wise',
+                        'ContentSeriesContentItem:6d8dc8e4bad017f815ae0cac8bf692bb',
+                      title: 'The New Weekend Experience',
+                      hyphenatedTitle: 'The New Weekend Experience',
+                      isLiked: false,
+                      likedCount: 1,
+                      summary:
+                        'Have you come into relationship with Jesus Christ?',
                       coverImage: {
+                        name: 'Series Image',
                         sources: [
                           {
                             uri:
-                              'https://apollosrock.newspring.cc/GetImage.ashx?guid=33e4c568-a456-4250-a8dc-6a4ceb548455',
+                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D98be229f-dfed-4344-86ab-0d11666fc781',
+                            __typename: 'ImageMediaSource',
                           },
                         ],
+                        __typename: 'ImageMedia',
+                      },
+                      theme: null,
+                      parentChannel: {
+                        id: 'ContentChannel:a0f64573eabf00a607bec911794d50fb',
+                        name: 'Sermon Series',
+                        __typename: 'ContentChannel',
                       },
+                      videos: [
+                        { sources: [], __typename: 'VideoMedia' },
+                        { sources: [], __typename: 'VideoMedia' },
+                      ],
+                      audios: [],
+                      __typename: 'ContentSeriesContentItem',
                     },
+                    __typename: 'ContentItemsConnectionEdge',
                   },
                   {
                     node: {
                       id:
-                        'UniversalContentItem:66a4d75b02b447556e4e3806430a9946',
-                      title: 'Momentum',
+                        'ContentSeriesContentItem:08449058d438ebeaffe9adb7a8e633cc',
+                      title: 'Gathering',
+                      hyphenatedTitle: 'Gathering',
+                      isLiked: false,
+                      likedCount: 0,
+                      summary: '',
                       coverImage: {
+                        name: 'Square Image',
                         sources: [
                           {
                             uri:
-                              'https://apollosrock.newspring.cc/GetImage.ashx?guid=F3F2E438-2AE8-4EF4-980B-709463691296',
+                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D50f4e3e3-2842-4991-9f64-8fc6fbb3067c',
+                            __typename: 'ImageMediaSource',
                           },
                         ],
+                        __typename: 'ImageMedia',
+                      },
+                      theme: null,
+                      parentChannel: {
+                        id: 'ContentChannel:a0f64573eabf00a607bec911794d50fb',
+                        name: 'Sermon Series',
+                        __typename: 'ContentChannel',
                       },
+                      videos: [
+                        { sources: [], __typename: 'VideoMedia' },
+                        { sources: [], __typename: 'VideoMedia' },
+                      ],
+                      audios: [],
+                      __typename: 'ContentSeriesContentItem',
                     },
+                    __typename: 'ContentItemsConnectionEdge',
                   },
                   {
                     node: {
                       id:
-                        'UniversalContentItem:22c861a5d54d09634018f7eb132c452e',
-                      title: 'Miracles in Luke',
+                        'ContentSeriesContentItem:b74c2d295a0cf1340232ffa8be856c00',
+                      title: 'Gauntlet 2018',
+                      hyphenatedTitle: 'Gauntlet 2018',
+                      isLiked: false,
+                      likedCount: 0,
+                      summary: '',
                       coverImage: {
+                        name: 'Square Image',
                         sources: [
                           {
                             uri:
-                              'https://apollosrock.newspring.cc/GetImage.ashx?guid=EDFDBD47-BBE8-4BE9-8D3F-CC0059BD4CCC',
+                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D3e3e38d2-d804-45db-b45a-3b7a82c415d1',
+                            __typename: 'ImageMediaSource',
                           },
                         ],
+                        __typename: 'ImageMedia',
                       },
+                      theme: null,
+                      parentChannel: {
+                        id: 'ContentChannel:a0f64573eabf00a607bec911794d50fb',
+                        name: 'Sermon Series',
+                        __typename: 'ContentChannel',
+                      },
+                      videos: [
+                        { sources: [], __typename: 'VideoMedia' },
+                        { sources: [], __typename: 'VideoMedia' },
+                      ],
+                      audios: [],
+                      __typename: 'ContentSeriesContentItem',
                     },
+                    __typename: 'ContentItemsConnectionEdge',
                   },
                 ],
+                __typename: 'ContentItemsConnection',
               },
+              __typename: 'ContentChannel',
             },
             {
               id: 'ContentChannel:7fba1b1ee253e0fd5f0795b4b8b1175e',
@@ -109,59 +331,241 @@ describe('Test the Discover Component Query', () => {
                   {
                     node: {
                       id:
-                        'UniversalContentItem:678b4a38968fc6004dd8b23e586c923e',
-                      title: 'Psalms: A 28-Day Devotional',
+                        'ContentSeriesContentItem:b085ec27d53006e9e6b95f3ac57da581',
+                      title: 'Jeremiah: A 33-Day Devotional',
+                      hyphenatedTitle: 'Jeremiah: A 33-Day Devotional',
+                      isLiked: true,
+                      likedCount: 6,
+                      summary: 'Have you ever had to deliver difficult news?',
                       coverImage: {
+                        name: 'Square Image',
                         sources: [
                           {
                             uri:
-                              'https://apollosrock.newspring.cc/GetImage.ashx?guid=ed857076-2623-4fdc-8476-50b3a60e0b68',
+                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D31af1a61-360c-4b1e-8e62-45517c06a9a2',
+                            __typename: 'ImageMediaSource',
                           },
                         ],
+                        __typename: 'ImageMedia',
+                      },
+                      theme: null,
+                      parentChannel: {
+                        id: 'ContentChannel:7fba1b1ee253e0fd5f0795b4b8b1175e',
+                        name: 'Devotion Series',
+                        __typename: 'ContentChannel',
                       },
+                      videos: [{ sources: [], __typename: 'VideoMedia' }],
+                      audios: [],
+                      __typename: 'ContentSeriesContentItem',
                     },
+                    __typename: 'ContentItemsConnectionEdge',
                   },
                   {
                     node: {
                       id:
-                        'UniversalContentItem:0f361c619b7e5dd511da181069498250',
-                      title: '2 Samuel: A 5-Week Devotional',
+                        'ContentSeriesContentItem:71bfdac0b98ea1b72a63ff4ea64e3c5a',
+                      title: 'How To Be A Better Leader: A 7-Day Devotional',
+                      hyphenatedTitle:
+                        'How To Be A Better Leader: A 7-Day Devotional',
+                      isLiked: false,
+                      likedCount: 0,
+                      summary: '',
                       coverImage: {
+                        name: 'Square Image',
                         sources: [
                           {
                             uri:
-                              'https://apollosrock.newspring.cc/GetImage.ashx?guid=aa68b674-9cf4-4f8a-8702-9564a4a9fa7b',
+                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3Dd3a96243-2558-4c04-bf41-3aadcf41771f',
+                            __typename: 'ImageMediaSource',
                           },
                         ],
+                        __typename: 'ImageMedia',
                       },
+                      theme: null,
+                      parentChannel: {
+                        id: 'ContentChannel:7fba1b1ee253e0fd5f0795b4b8b1175e',
+                        name: 'Devotion Series',
+                        __typename: 'ContentChannel',
+                      },
+                      videos: [{ sources: [], __typename: 'VideoMedia' }],
+                      audios: [],
+                      __typename: 'ContentSeriesContentItem',
                     },
+                    __typename: 'ContentItemsConnectionEdge',
                   },
                   {
                     node: {
                       id:
-                        'UniversalContentItem:bc1002007d482c412962ad6b1f24901a',
-                      title: '#MomLife: An 8-Day Devotional',
+                        'ContentSeriesContentItem:44fd3b82373ea8f197bd1e1e77c4bed0',
+                      title: '2 Thessalonians: A 5-Day Devotional',
+                      hyphenatedTitle: '2 Thessalonians: A 5-Day Devotional',
+                      isLiked: false,
+                      likedCount: 0,
+                      summary: '',
                       coverImage: {
+                        name: 'Square Image',
                         sources: [
                           {
                             uri:
-                              'https://apollosrock.newspring.cc/GetImage.ashx?guid=65dfddf1-c146-4599-bdb7-a8f53bf8fed2',
+                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D70b0b57c-5a15-4f46-8e6a-c759231685bf',
+                            __typename: 'ImageMediaSource',
                           },
                         ],
+                        __typename: 'ImageMedia',
+                      },
+                      theme: null,
+                      parentChannel: {
+                        id: 'ContentChannel:7fba1b1ee253e0fd5f0795b4b8b1175e',
+                        name: 'Devotion Series',
+                        __typename: 'ContentChannel',
                       },
+                      videos: [{ sources: [], __typename: 'VideoMedia' }],
+                      audios: [],
+                      __typename: 'ContentSeriesContentItem',
                     },
+                    __typename: 'ContentItemsConnectionEdge',
                   },
                 ],
+                __typename: 'ContentItemsConnection',
               },
+              __typename: 'ContentChannel',
+            },
+            {
+              id: 'ContentChannel:be7381e9c2fea9f41504cd98d4b14321',
+              name: 'Stories',
+              childContentItemsConnection: {
+                edges: [
+                  {
+                    node: {
+                      id:
+                        'UniversalContentItem:cf8fa657f23af88a2d63f7e4a2237db8',
+                      title:
+                        'The surprising journey that changed me and my dad',
+                      hyphenatedTitle:
+                        'The surprising journey that changed me and my dad',
+                      isLiked: false,
+                      likedCount: 6,
+                      summary:
+                        'My father, Darwin, has always been involved in my life.',
+                      coverImage: {
+                        name: 'Square Image',
+                        sources: [
+                          {
+                            uri:
+                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D2a65e561-cd6e-4590-bb37-029a21c554e8',
+                            __typename: 'ImageMediaSource',
+                          },
+                        ],
+                        __typename: 'ImageMedia',
+                      },
+                      theme: null,
+                      parentChannel: {
+                        id: 'ContentChannel:be7381e9c2fea9f41504cd98d4b14321',
+                        name: 'Stories',
+                        __typename: 'ContentChannel',
+                      },
+                      videos: [],
+                      audios: [],
+                      __typename: 'UniversalContentItem',
+                    },
+                    __typename: 'ContentItemsConnectionEdge',
+                  },
+                  {
+                    node: {
+                      id:
+                        'UniversalContentItem:2e17f5a66407d114ab9f2392b03ebccd',
+                      title: 'When I lost hope, my church family had my back',
+                      hyphenatedTitle:
+                        'When I lost hope, my church family had my back',
+                      isLiked: true,
+                      likedCount: 5,
+                      summary:
+                        'Brian Kalwat was just trying to knock something off his honey-do list.',
+                      coverImage: {
+                        name: 'Square Image',
+                        sources: [
+                          {
+                            uri:
+                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D0305285f-1155-4405-ba38-a61b9c8558be',
+                            __typename: 'ImageMediaSource',
+                          },
+                        ],
+                        __typename: 'ImageMedia',
+                      },
+                      theme: null,
+                      parentChannel: {
+                        id: 'ContentChannel:be7381e9c2fea9f41504cd98d4b14321',
+                        name: 'Stories',
+                        __typename: 'ContentChannel',
+                      },
+                      videos: [],
+                      audios: [],
+                      __typename: 'UniversalContentItem',
+                    },
+                    __typename: 'ContentItemsConnectionEdge',
+                  },
+                  {
+                    node: {
+                      id:
+                        'UniversalContentItem:ae8ec75906ba7437c49ad2534b5024db',
+                      title: 'A Place to Worship Free of Fear',
+                      hyphenatedTitle: 'A Place to Worship Free of Fear',
+                      isLiked: false,
+                      likedCount: 1,
+                      summary:
+                        'Cornelius &amp; Stephanie Mack, proud parents of a Special Friends adult, share about their experience\nOur son Cameron began attending Willow Creek Special Friends in 2015.',
+                      coverImage: {
+                        name: 'Portrait Image',
+                        sources: [
+                          {
+                            uri:
+                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3Da65bc45d-f961-4b7e-a899-63eb1f9b8da9',
+                            __typename: 'ImageMediaSource',
+                          },
+                        ],
+                        __typename: 'ImageMedia',
+                      },
+                      theme: null,
+                      parentChannel: {
+                        id: 'ContentChannel:be7381e9c2fea9f41504cd98d4b14321',
+                        name: 'Stories',
+                        __typename: 'ContentChannel',
+                      },
+                      videos: [],
+                      audios: [],
+                      __typename: 'UniversalContentItem',
+                    },
+                    __typename: 'ContentItemsConnectionEdge',
+                  },
+                ],
+                __typename: 'ContentItemsConnection',
+              },
+              __typename: 'ContentChannel',
             },
           ],
         },
       },
     };
+    const mockChannelCardData = flatMap(
+      mockFeedData.result.data.contentChannels,
+      (contentChannel) =>
+        contentChannel.childContentItemsConnection.edges.map((edge) => ({
+          request: {
+            query: GET_CONTENT_CARD,
+            variables: { contentId: edge.node.id },
+          },
+          result: {
+            data: {
+              node: edge.node,
+            },
+          },
+        }))
+    );
 
-    const DiscoverWithNavigation = createStackNavigator({ Discover });
-    const tree = renderer.create(
-      <Providers mocks={[mock]}>
+    const DiscoverStack = createStackNavigator({ Discover });
+    const DiscoverWithNavigation = createAppContainer(DiscoverStack);
+    const tree = await renderWithApolloData(
+      <Providers mocks={[mockFeedData, ...mockChannelCardData]}>
         <DiscoverWithNavigation />
       </Providers>
     );
diff --git a/apolloschurchapp/src/tabs/discover/getContentChannels.js b/apolloschurchapp/src/tabs/discover/getContentChannels.js
deleted file mode 100644
index bc9c243..0000000
--- a/apolloschurchapp/src/tabs/discover/getContentChannels.js
+++ /dev/null
@@ -1,24 +0,0 @@
-import gql from 'graphql-tag';
-
-import { contentItemFragment } from 'apolloschurchapp/src/content-single/getContentItem';
-import { tileCardFragment } from 'apolloschurchapp/src/ui/ContentCardConnected';
-
-export default gql`
-  query getContentChannels {
-    contentChannels {
-      id
-      name
-      childContentItemsConnection(first: 3) {
-        edges {
-          node {
-            id
-            ...contentItemFragment
-            ...tileCardFragment
-          }
-        }
-      }
-    }
-  }
-  ${contentItemFragment}
-  ${tileCardFragment}
-`;
diff --git a/apolloschurchapp/src/tabs/discover/index.js b/apolloschurchapp/src/tabs/discover/index.js
index bcfae50..eaf3ee0 100644
--- a/apolloschurchapp/src/tabs/discover/index.js
+++ b/apolloschurchapp/src/tabs/discover/index.js
@@ -1,4 +1,5 @@
 import { createStackNavigator } from 'react-navigation';
+import { withTheme } from '@apollosproject/ui-kit';
 
 import ContentFeed from 'apolloschurchapp/src/content-feed';
 
@@ -6,18 +7,29 @@ import tabBarIcon from '../tabBarIcon';
 
 import Discover from './Discover';
 
-export const DiscoverNavigator = createStackNavigator(
+const DiscoverNavigator = createStackNavigator(
   {
     Discover,
     ContentFeed,
   },
   {
     initialRouteName: 'Discover',
+    defaultNavigationOptions: ({ screenProps }) => ({
+      headerTintColor: screenProps.headerTintColor,
+      headerTitleStyle: screenProps.headerTitleStyle,
+    }),
+    navigationOptions: { tabBarIcon: tabBarIcon('sections') },
   }
 );
 
-DiscoverNavigator.navigationOptions = {
-  tabBarIcon: tabBarIcon('sections'),
-};
+const EnhancedDiscover = withTheme(({ theme, ...props }) => ({
+  ...props,
+  screenProps: {
+    headerTintColor: theme.colors.action.secondary,
+    headerTitleStyle: {
+      color: theme.colors.text.primary,
+    },
+  },
+}))(DiscoverNavigator);
 
-export default DiscoverNavigator;
+export default EnhancedDiscover;
diff --git a/apolloschurchapp/src/tabs/home/Features/getFeedFeatures.js b/apolloschurchapp/src/tabs/home/Features/getFeedFeatures.js
new file mode 100644
index 0000000..caffc10
--- /dev/null
+++ b/apolloschurchapp/src/tabs/home/Features/getFeedFeatures.js
@@ -0,0 +1,27 @@
+import gql from 'graphql-tag';
+
+export default gql`
+  query getFeedFeatures {
+    userFeedFeatures {
+      ... on ActionListFeature {
+        id
+        title
+        subtitle
+        actions {
+          id
+          title
+          subtitle
+          action
+          image {
+            sources {
+              uri
+            }
+          }
+          relatedNode {
+            id
+          }
+        }
+      }
+    }
+  }
+`;
diff --git a/apolloschurchapp/src/tabs/home/Features/index.js b/apolloschurchapp/src/tabs/home/Features/index.js
new file mode 100644
index 0000000..80aebcb
--- /dev/null
+++ b/apolloschurchapp/src/tabs/home/Features/index.js
@@ -0,0 +1,135 @@
+import React, { memo } from 'react';
+import { Query } from 'react-apollo';
+import { get } from 'lodash';
+// import PropTypes from 'prop-types';
+
+import { styled, ActionListCard, H3, H6 } from '@apollosproject/ui-kit';
+
+import GET_FEED_FEATURES from './getFeedFeatures';
+
+const StyledH6 = styled(({ theme }) => ({
+  color: theme.colors.text.tertiary,
+}))(H6);
+
+// const handleOnPressActionItem = (id) =>
+//   this.props.navigation.navigate('ContentSingle', {
+//     itemId: id,
+//     transitionKey: 2,
+//   });
+
+const Features = memo(({ navigation }) => (
+  <Query query={GET_FEED_FEATURES} fetchPolicy="cache-and-network">
+    {({ data: features, loading }) =>
+      loading ? (
+        <ActionListCard
+          isLoading
+          header={
+            <>
+              <StyledH6 isLoading />
+              <H3 isLoading />
+            </>
+          }
+          actions={[
+            {
+              id: 'fakeId1',
+              title: '',
+              subtitle: '',
+              parentChannel: {
+                id: '',
+                name: '',
+              },
+              coverImage: {
+                sources: {
+                  uri: '',
+                },
+              },
+            },
+            {
+              id: 'fakeId2',
+              title: '',
+              subtitle: '',
+              parentChannel: {
+                id: '',
+                name: '',
+              },
+              coverImage: {
+                sources: {
+                  uri: '',
+                },
+              },
+            },
+            {
+              id: 'fakeId3',
+              title: '',
+              subtitle: '',
+              parentChannel: {
+                id: '',
+                name: '',
+              },
+              coverImage: {
+                sources: {
+                  uri: '',
+                },
+              },
+            },
+            {
+              id: 'fakeId4',
+              title: '',
+              subtitle: '',
+              parentChannel: {
+                id: '',
+                name: '',
+              },
+              coverImage: {
+                sources: {
+                  uri: '',
+                },
+              },
+            },
+          ]}
+        />
+      ) : (
+        get(features, 'userFeedFeatures', []).map(
+          ({ title, subtitle, actions, id }) =>
+            actions.length ? (
+              <ActionListCard
+                isLoading={loading}
+                key={id}
+                header={
+                  <>
+                    <StyledH6 numberOfLines={1}>{title}</StyledH6>
+                    <H3 numberOfLines={3}>{subtitle}</H3>
+                  </>
+                }
+                actions={actions}
+                onPressActionItem={({ action, relatedNode }) => {
+                  if (action === 'READ_CONTENT') {
+                    navigation.navigate('ContentSingle', {
+                      itemId: relatedNode.id,
+                      transitionKey: 2,
+                    });
+                  }
+                  if (action === 'READ_EVENT') {
+                    navigation.navigate('Event', {
+                      eventId: relatedNode.id,
+                      transitionKey: 2,
+                    });
+                  }
+                }}
+                onPressCardActionButton={() =>
+                  navigation.navigate('ContentFeed', {
+                    itemId: id,
+                    itemTitle: title,
+                  })
+                }
+              />
+            ) : null
+        )
+      )
+    }
+  </Query>
+));
+
+Features.displayName = 'Features';
+
+export default Features;
diff --git a/apolloschurchapp/src/tabs/home/Home.js b/apolloschurchapp/src/tabs/home/Home.js
index 74f520b..bae53bc 100644
--- a/apolloschurchapp/src/tabs/home/Home.js
+++ b/apolloschurchapp/src/tabs/home/Home.js
@@ -9,20 +9,16 @@ import {
   styled,
   FeedView,
   BackgroundView,
-  H3,
-  H6,
   TouchableScale,
+  FeaturedCard,
 } from '@apollosproject/ui-kit';
 
 import fetchMoreResolver from '../../utils/fetchMoreResolver';
 import ContentCardConnected from '../../ui/ContentCardConnected';
 
-import { LiveButton } from '../../live';
-
-import ContentTableCard from '../../ui/ContentTableCard';
-import getUserFeed from './getUserFeed';
-import getPersonaFeed from './getPersonaFeed';
-import getCampaignContentItem from './getCampaignContentItem';
+import Features from './Features';
+import GET_USER_FEED from './getUserFeed';
+import GET_CAMPAIGN_CONTENT_ITEM from './getCampaignContentItem';
 
 const LogoTitle = styled(({ theme }) => ({
   height: theme.sizing.baseUnit,
@@ -31,10 +27,6 @@ const LogoTitle = styled(({ theme }) => ({
   resizeMode: 'contain',
 }))(Image);
 
-const StyledH6 = styled(({ theme }) => ({
-  color: theme.colors.text.tertiary,
-}))(H6);
-
 class Home extends PureComponent {
   static navigationOptions = () => ({
     header: null,
@@ -59,7 +51,7 @@ class Home extends PureComponent {
       <BackgroundView>
         <SafeAreaView>
           <Query
-            query={getUserFeed}
+            query={GET_USER_FEED}
             variables={{
               first: 10,
               after: null,
@@ -84,9 +76,8 @@ class Home extends PureComponent {
                 ListHeaderComponent={
                   <>
                     <LogoTitle source={require('./wordmark.png')} />
-                    <LiveButton />
                     <Query
-                      query={getCampaignContentItem}
+                      query={GET_CAMPAIGN_CONTENT_ITEM}
                       fetchPolicy="cache-and-network"
                     >
                       {({ data: featuredData, loading: isFeaturedLoading }) => {
@@ -109,6 +100,7 @@ class Home extends PureComponent {
                             }
                           >
                             <ContentCardConnected
+                              Component={FeaturedCard}
                               contentId={featuredItem.id}
                               isLoading={isFeaturedLoading}
                             />
@@ -116,39 +108,7 @@ class Home extends PureComponent {
                         );
                       }}
                     </Query>
-                    <Query
-                      query={getPersonaFeed}
-                      fetchPolicy="cache-and-network"
-                    >
-                      {({
-                        data: personaData,
-                        loading: isContentTableLoading,
-                      }) => (
-                        <ContentTableCard
-                          isLoading={isContentTableLoading}
-                          onPress={this.handleOnPress}
-                          header={
-                            <>
-                              <StyledH6 isLoading={isContentTableLoading}>
-                                FOR YOU
-                              </StyledH6>
-                              <H3
-                                isLoading={isContentTableLoading}
-                                numberOfLines={3}
-                                ellipsizeMode="tail"
-                              >
-                                Explore what God calls you to today
-                              </H3>
-                            </>
-                          }
-                          content={get(
-                            personaData,
-                            'personaFeed.edges',
-                            []
-                          ).map((edge) => edge.node)}
-                        />
-                      )}
-                    </Query>
+                    <Features navigation={this.props.navigation} />
                   </>
                 }
                 onPressItem={this.handleOnPress}
diff --git a/apolloschurchapp/src/tabs/home/getCampaignContentItem.js b/apolloschurchapp/src/tabs/home/getCampaignContentItem.js
index 5bdb082..fd6fbc7 100644
--- a/apolloschurchapp/src/tabs/home/getCampaignContentItem.js
+++ b/apolloschurchapp/src/tabs/home/getCampaignContentItem.js
@@ -1,7 +1,6 @@
 import gql from 'graphql-tag';
 
-import { contentItemFragment } from 'apolloschurchapp/src/content-single/getContentItem';
-import { largeCardFragment } from 'apolloschurchapp/src/ui/ContentCardConnected';
+import { BASE_CARD_FRAGMENT } from 'apolloschurchapp/src/ui/ContentCardConnected';
 
 export default gql`
   query campaigns {
@@ -11,8 +10,7 @@ export default gql`
           childContentItemsConnection {
             edges {
               node {
-                ...largeCardFragment
-                ...contentItemFragment
+                ...baseCardFragment
               }
             }
           }
@@ -20,6 +18,5 @@ export default gql`
       }
     }
   }
-  ${contentItemFragment}
-  ${largeCardFragment}
+  ${BASE_CARD_FRAGMENT}
 `;
diff --git a/apolloschurchapp/src/tabs/home/getFeedFeatures.js b/apolloschurchapp/src/tabs/home/getFeedFeatures.js
new file mode 100644
index 0000000..caffc10
--- /dev/null
+++ b/apolloschurchapp/src/tabs/home/getFeedFeatures.js
@@ -0,0 +1,27 @@
+import gql from 'graphql-tag';
+
+export default gql`
+  query getFeedFeatures {
+    userFeedFeatures {
+      ... on ActionListFeature {
+        id
+        title
+        subtitle
+        actions {
+          id
+          title
+          subtitle
+          action
+          image {
+            sources {
+              uri
+            }
+          }
+          relatedNode {
+            id
+          }
+        }
+      }
+    }
+  }
+`;
diff --git a/apolloschurchapp/src/tabs/home/getPersonaFeed.js b/apolloschurchapp/src/tabs/home/getPersonaFeed.js
deleted file mode 100644
index b8130e0..0000000
--- a/apolloschurchapp/src/tabs/home/getPersonaFeed.js
+++ /dev/null
@@ -1,19 +0,0 @@
-import gql from 'graphql-tag';
-
-import { contentItemFragment } from 'apolloschurchapp/src/content-single/getContentItem';
-import { largeCardFragment } from 'apolloschurchapp/src/ui/ContentCardConnected';
-
-export default gql`
-  query getPersonaFeed {
-    personaFeed(first: 4) {
-      edges {
-        node {
-          ...largeCardFragment
-          ...contentItemFragment
-        }
-      }
-    }
-  }
-  ${contentItemFragment}
-  ${largeCardFragment}
-`;
diff --git a/apolloschurchapp/src/tabs/home/getUserFeed.js b/apolloschurchapp/src/tabs/home/getUserFeed.js
index 8ab2b1f..a1515d3 100644
--- a/apolloschurchapp/src/tabs/home/getUserFeed.js
+++ b/apolloschurchapp/src/tabs/home/getUserFeed.js
@@ -1,7 +1,6 @@
 import gql from 'graphql-tag';
 
-import { contentItemFragment } from 'apolloschurchapp/src/content-single/getContentItem';
-import { largeCardFragment } from 'apolloschurchapp/src/ui/ContentCardConnected';
+import { BASE_CARD_FRAGMENT } from 'apolloschurchapp/src/ui/ContentCardConnected';
 
 export default gql`
   query getUserFeed($first: Int, $after: String) {
@@ -11,12 +10,10 @@ export default gql`
       }
       edges {
         node {
-          ...largeCardFragment
-          ...contentItemFragment
+          ...baseCardFragment
         }
       }
     }
   }
-  ${contentItemFragment}
-  ${largeCardFragment}
+  ${BASE_CARD_FRAGMENT}
 `;
diff --git a/apolloschurchapp/src/tabs/home/home.tests.js b/apolloschurchapp/src/tabs/home/home.tests.js
index e9f98c5..96a5008 100644
--- a/apolloschurchapp/src/tabs/home/home.tests.js
+++ b/apolloschurchapp/src/tabs/home/home.tests.js
@@ -4,13 +4,13 @@ import renderer from 'react-test-renderer';
 import Providers from 'apolloschurchapp/src/Providers';
 
 import Home from './Home';
-import getUserFeed from './getUserFeed';
+import GET_USER_FEED from './getUserFeed';
 
 describe('User Home Feed Query', () => {
   it('should return correct query results', () => {
     const mock = {
       request: {
-        query: getUserFeed,
+        query: GET_USER_FEED,
       },
       result: {
         data: {
diff --git a/apolloschurchapp/src/tabs/index.js b/apolloschurchapp/src/tabs/index.js
index 0b9ea17..ff11787 100644
--- a/apolloschurchapp/src/tabs/index.js
+++ b/apolloschurchapp/src/tabs/index.js
@@ -16,11 +16,8 @@ const TabNavigator = createBottomTabNavigator(
     tabBarComponent: TabBar,
     lazy: true,
     removeClippedSubviews: true,
+    navigationOptions: { header: null },
   }
 );
 
-TabNavigator.navigationOptions = {
-  header: null,
-};
-
 export default TabNavigator;
diff --git a/apolloschurchapp/src/tabs/tabBar.js b/apolloschurchapp/src/tabs/tabBar.js
index 80e2f0e..6b2b849 100644
--- a/apolloschurchapp/src/tabs/tabBar.js
+++ b/apolloschurchapp/src/tabs/tabBar.js
@@ -1,5 +1,5 @@
 import { compose } from 'recompose';
-import { BottomTabBar } from 'react-navigation-tabs';
+import { BottomTabBar } from 'react-navigation';
 
 import { withTabBarMediaSpacer } from '@apollosproject/ui-media-player';
 import { styled, withTheme } from '@apollosproject/ui-kit';
diff --git a/apolloschurchapp/src/testing-control-panel/ChangeLivestream.js b/apolloschurchapp/src/testing-control-panel/ChangeLivestream.js
deleted file mode 100644
index 6723f30..0000000
--- a/apolloschurchapp/src/testing-control-panel/ChangeLivestream.js
+++ /dev/null
@@ -1,36 +0,0 @@
-import React from 'react';
-
-import { Query } from 'react-apollo';
-import { get } from 'lodash';
-
-import { client } from 'apolloschurchapp/src/client';
-import getLiveStream from 'apolloschurchapp/src/live/getLiveStream';
-import TouchableCell from './TouchableCell';
-
-const changeLivestream = ({ isLive }) =>
-  client.writeQuery({
-    query: getLiveStream,
-    data: {
-      liveStream: {
-        __typename: 'LiveStream',
-        isLive,
-      },
-    },
-  });
-
-const ChangeLivestream = () => (
-  <Query query={getLiveStream}>
-    {({ data }) => {
-      const isLive = get(data, 'liveStream.isLive', false);
-      return (
-        <TouchableCell
-          handlePress={() => changeLivestream({ isLive: !isLive })}
-          iconName={isLive ? 'pause' : 'play'}
-          cellText={`${isLive ? 'End' : 'Start'} The Livestream`}
-        />
-      );
-    }}
-  </Query>
-);
-
-export default ChangeLivestream;
diff --git a/apolloschurchapp/src/testing-control-panel/index.js b/apolloschurchapp/src/testing-control-panel/index.js
index 6a6c16a..b988c62 100644
--- a/apolloschurchapp/src/testing-control-panel/index.js
+++ b/apolloschurchapp/src/testing-control-panel/index.js
@@ -1,7 +1,7 @@
 import React, { PureComponent } from 'react';
-import { TableView, Divider } from '@apollosproject/ui-kit';
+import { TableView } from '@apollosproject/ui-kit';
 import { UserWebBrowserConsumer } from 'apolloschurchapp/src/user-web-browser';
-import ChangeLivestream from './ChangeLivestream';
+import { WebBrowserConsumer } from 'apolloschurchapp/src/ui/WebBrowser';
 import TouchableCell from './TouchableCell';
 
 export default class TestingControlPanel extends PureComponent {
@@ -12,8 +12,6 @@ export default class TestingControlPanel extends PureComponent {
   render() {
     return (
       <TableView>
-        <ChangeLivestream />
-        <Divider />
         <UserWebBrowserConsumer>
           {(openUserWebView) => (
             <TouchableCell
@@ -28,6 +26,21 @@ export default class TestingControlPanel extends PureComponent {
             />
           )}
         </UserWebBrowserConsumer>
+        <WebBrowserConsumer>
+          {(openUrl) => (
+            <TouchableCell
+              handlePress={() =>
+                openUrl(
+                  'https://apollosrock.newspring.cc',
+                  {},
+                  { useRockToken: true }
+                )
+              }
+              iconName="share"
+              cellText={`Open InAppBrowser With Rock Token`}
+            />
+          )}
+        </WebBrowserConsumer>
         <TouchableCell
           handlePress={() => this.props.navigation.navigate('Onboarding')}
           iconName="Avatar"
diff --git a/apolloschurchapp/src/theme/theme.js b/apolloschurchapp/src/theme/theme.js
index 39e124f..532be93 100644
--- a/apolloschurchapp/src/theme/theme.js
+++ b/apolloschurchapp/src/theme/theme.js
@@ -25,6 +25,9 @@
 /* Base alpha values. These are used to keep transparent values across the app consistant */
 // export const alpha = {};
 
+/* Base overlays. These are used as configuration for LinearGradients across the app */
+// export const overlays = () => ({});
+
 /* Overrides allow you to override the styles of any component styled using the `styled` HOC.
  * For example, this component:
  * const SomeComponent = styled({ margin: 10, padding: 20 }, 'SomeComponent');
diff --git a/apolloschurchapp/src/ui/ContentCardConnected/ContentCardConnected.js b/apolloschurchapp/src/ui/ContentCardConnected/ContentCardConnected.js
new file mode 100644
index 0000000..dca9ff2
--- /dev/null
+++ b/apolloschurchapp/src/ui/ContentCardConnected/ContentCardConnected.js
@@ -0,0 +1,62 @@
+import React, { memo } from 'react';
+import PropTypes from 'prop-types';
+import { Query } from 'react-apollo';
+import { get } from 'lodash';
+
+import { ErrorCard } from '@apollosproject/ui-kit';
+
+import { LiveConsumer } from '../../live/LiveContext';
+import contentCardComponentMapper from './contentCardComponentMapper';
+import GET_CONTENT_CARD from './query';
+
+const ContentCardConnected = memo(
+  ({ Component, contentId, isLoading, tile, mapProps, ...otherProps }) => {
+    if (!contentId || isLoading)
+      return <Component {...otherProps} isLoading tile={tile} />;
+
+    return (
+      <LiveConsumer contentId={contentId}>
+        {(liveStream) => (
+          <Query query={GET_CONTENT_CARD} variables={{ contentId }}>
+            {({ data: { node = {} } = {}, loading, error }) => {
+              if (error) return <ErrorCard error={error} />;
+
+              const coverImage = get(node, 'coverImage.sources', undefined);
+              const hasMedia = !!get(node, 'videos.[0].sources[0]', null);
+              const isLive = !!liveStream;
+              const labelText = get(node, 'parentChannel.name', '');
+
+              return (
+                <Component
+                  {...node}
+                  hasAction={hasMedia}
+                  isLive={isLive}
+                  labelText={isLive ? 'Live' : labelText}
+                  {...otherProps}
+                  coverImage={coverImage}
+                  isLoading={loading}
+                />
+              );
+            }}
+          </Query>
+        )}
+      </LiveConsumer>
+    );
+  }
+);
+
+ContentCardConnected.propTypes = {
+  Component: PropTypes.func,
+  mapProps: PropTypes.func,
+  contentId: PropTypes.string,
+  isLoading: PropTypes.bool,
+  tile: PropTypes.bool,
+};
+
+ContentCardConnected.defaultProps = {
+  Component: contentCardComponentMapper,
+};
+
+ContentCardConnected.displayName = 'ContentCardConnected';
+
+export default ContentCardConnected;
diff --git a/apolloschurchapp/src/ui/ContentCardConnected/contentCardComponentMapper.js b/apolloschurchapp/src/ui/ContentCardConnected/contentCardComponentMapper.js
new file mode 100644
index 0000000..30d8e1e
--- /dev/null
+++ b/apolloschurchapp/src/ui/ContentCardConnected/contentCardComponentMapper.js
@@ -0,0 +1,19 @@
+import React from 'react';
+import { get } from 'lodash';
+
+import { DefaultCard, HighlightCard } from '@apollosproject/ui-kit';
+
+const contentCardComponentMapper = (props) => {
+  // map typename to the the card we want to render.
+  switch (get(props, '__typename')) {
+    case 'MediaContentItem':
+    case 'WeekendContentItem':
+    case 'ContentSeriesContentItem':
+    case 'DevotionalContentItem':
+      return <HighlightCard {...props} />;
+    default:
+      return <DefaultCard {...props} />;
+  }
+};
+
+export default contentCardComponentMapper;
diff --git a/apolloschurchapp/src/ui/ContentCardConnected/index.js b/apolloschurchapp/src/ui/ContentCardConnected/index.js
index b64bdc6..40047fe 100644
--- a/apolloschurchapp/src/ui/ContentCardConnected/index.js
+++ b/apolloschurchapp/src/ui/ContentCardConnected/index.js
@@ -1,55 +1,6 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-import { Query } from 'react-apollo';
-import { get } from 'lodash';
+import ContentCardConnected from './ContentCardConnected';
 
-import { ContentCard, ErrorCard } from '@apollosproject/ui-kit';
-import getContentCard from './query';
-
-export { tileCardFragment, largeCardFragment } from './query';
-
-const ContentCardConnected = ({
-  contentId,
-  isLoading,
-  tile,
-  ...otherProps
-}) => {
-  if (!contentId || isLoading)
-    return <ContentCard {...otherProps} isLoading tile={tile} />;
-
-  return (
-    <Query query={getContentCard} variables={{ contentId, tile: !!tile }}>
-      {({ data: { node = {} } = {}, loading, error }) => {
-        if (error) return <ErrorCard error={error} />;
-
-        const metrics = [
-          {
-            icon: node.isLiked ? 'like-solid' : 'like',
-            value: node.likedCount,
-          },
-        ];
-
-        const coverImage = get(node, 'coverImage.sources', undefined);
-
-        return (
-          <ContentCard
-            {...node}
-            {...otherProps}
-            coverImage={coverImage}
-            metrics={metrics}
-            tile={tile}
-            isLoading={loading}
-          />
-        );
-      }}
-    </Query>
-  );
-};
-
-ContentCardConnected.propTypes = {
-  isLoading: PropTypes.bool,
-  contentId: PropTypes.string,
-  tile: PropTypes.bool,
-};
+export { BASE_CARD_FRAGMENT } from './query';
+export contentCardComponentMapper from './contentCardComponentMapper';
 
 export default ContentCardConnected;
diff --git a/apolloschurchapp/src/ui/ContentCardConnected/query.js b/apolloschurchapp/src/ui/ContentCardConnected/query.js
index abefc12..a2e26ea 100644
--- a/apolloschurchapp/src/ui/ContentCardConnected/query.js
+++ b/apolloschurchapp/src/ui/ContentCardConnected/query.js
@@ -1,6 +1,6 @@
 import gql from 'graphql-tag';
 
-export const coverImageFragment = gql`
+export const COVER_IMAGE_FRAGMENT = gql`
   fragment coverImageFragment on ContentItem {
     coverImage {
       sources {
@@ -10,7 +10,7 @@ export const coverImageFragment = gql`
   }
 `;
 
-export const themeFragment = gql`
+export const THEME_FRAGMENT = gql`
   fragment themeFragment on ContentItem {
     theme {
       type
@@ -24,70 +24,57 @@ export const themeFragment = gql`
   }
 `;
 
-export const contentCardMetricsFragment = gql`
-  fragment contentCardMetricsFragment on ContentItem {
-    isLiked
-    likedCount
-  }
-`;
-
-export const baseCardFragment = gql`
+export const BASE_CARD_FRAGMENT = gql`
   fragment baseCardFragment on ContentItem {
     id
     __typename
-    ...contentCardMetricsFragment
     ...coverImageFragment
     ...themeFragment
     title
+    hyphenatedTitle: title(hyphenated: true)
     summary
-  }
-  ${contentCardMetricsFragment}
-  ${coverImageFragment}
-  ${themeFragment}
-`;
-
-export const tileCardFragment = gql`
-  fragment tileCardFragment on ContentItem {
-    ... on ContentSeriesContentItem {
-      id
-      ...themeFragment
-      ...coverImageFragment
-      ...contentCardMetricsFragment
+    ... on MediaContentItem {
+      videos {
+        sources {
+          uri
+        }
+      }
+      parentChannel {
+        id
+        name
+      }
     }
-    ... on UniversalContentItem {
-      ...baseCardFragment
+    ... on WeekendContentItem {
+      videos {
+        sources {
+          uri
+        }
+      }
+      parentChannel {
+        id
+        name
+      }
     }
     ... on DevotionalContentItem {
-      ...baseCardFragment
-    }
-    ... on MediaContentItem {
-      ...baseCardFragment
+      parentChannel {
+        id
+        name
+      }
     }
   }
-  ${baseCardFragment}
-  ${themeFragment}
-  ${coverImageFragment}
-  ${contentCardMetricsFragment}
+  ${COVER_IMAGE_FRAGMENT}
+  ${THEME_FRAGMENT}
 `;
 
-export const largeCardFragment = gql`
-  fragment largeCardFragment on ContentItem {
-    ...baseCardFragment
-  }
-  ${baseCardFragment}
-`;
-
-const getContentCard = gql`
-  query getContentCard($contentId: ID!, $tile: Boolean!) {
+const GET_CONTENT_CARD = gql`
+  query getContentCard($contentId: ID!) {
     node(id: $contentId) {
       id
       __typename
-      ...tileCardFragment @include(if: $tile)
-      ...largeCardFragment @skip(if: $tile)
+      ...baseCardFragment
     }
   }
-  ${tileCardFragment}
-  ${largeCardFragment}
+  ${BASE_CARD_FRAGMENT}
 `;
 
-export default getContentCard;
+export default GET_CONTENT_CARD;
diff --git a/apolloschurchapp/src/ui/ContentTableCard/ContentTableCard.stories.js b/apolloschurchapp/src/ui/ContentTableCard/ContentTableCard.stories.js
deleted file mode 100644
index 9287554..0000000
--- a/apolloschurchapp/src/ui/ContentTableCard/ContentTableCard.stories.js
+++ /dev/null
@@ -1,86 +0,0 @@
-import React from 'react';
-import { storiesOf } from '@apollosproject/ui-storybook';
-import { H3 } from '@apollosproject/ui-kit';
-import ContentTableCard from '.';
-
-const content = [
-  {
-    id: 'UniversalContentItem:9d06423a8908b7cc1e1f2db6156c1bfb',
-    title: 'Hello 1',
-    parentChannel: {
-      id: 'ContentChannel:be35f49307d7297989d3514be788ef2d',
-      name: 'NewSpring - Articles',
-    },
-    coverImage: {
-      sources: {
-        uri: 'https://picsum.photos/600/400/?image=63',
-      },
-    },
-  },
-  {
-    id: 'UniversalContentItem:9d06423a8908b7cc1e1f2db6156c1bfb',
-    title: 'Hello 2',
-    parentChannel: {
-      id: 'ContentChannel:be35f49307d7297989d3514be788ef2d',
-      name: 'NewSpring - Articles',
-    },
-    coverImage: {
-      sources: {
-        uri: 'https://picsum.photos/600/400/?image=63',
-      },
-    },
-  },
-  {
-    id: 'UniversalContentItem:9d06423a8908b7cc1e1f2db6156c1bfb',
-    title: 'Hello 3',
-    parentChannel: {
-      id: 'ContentChannel:be35f49307d7297989d3514be788ef2d',
-      name: 'NewSpring - Articles',
-    },
-    coverImage: {
-      sources: {
-        uri: 'https://picsum.photos/600/400/?image=63',
-      },
-    },
-  },
-  {
-    id: 'UniversalContentItem:9d06423a8908b7cc1e1f2db6156c1bfb',
-    title: 'Hello 4',
-    parentChannel: {
-      id: 'ContentChannel:be35f49307d7297989d3514be788ef2d',
-      name: 'NewSpring - Articles',
-    },
-    coverImage: {
-      sources: {
-        uri: 'https://picsum.photos/600/400/?image=63',
-      },
-    },
-  },
-];
-
-storiesOf('ContentTableCard', module)
-  .add('simple', () => (
-    <ContentTableCard
-      label={'FOR YOU'}
-      onPress={() => {}}
-      content={content}
-      DynamicHeader={
-        <H3 numberOfLines={3} ellipsizeMode="tail">
-          Some random text that encourages you
-        </H3>
-      }
-    />
-  ))
-  .add('isLoading', () => (
-    <ContentTableCard
-      label={'FOR YOU'}
-      onPress={() => {}}
-      isLoading
-      content={content}
-      DynamicHeader={
-        <H3 isLoading numberOfLines={3} ellipsizeMode="tail">
-          Some random text that encourages you
-        </H3>
-      }
-    />
-  ));
diff --git a/apolloschurchapp/src/ui/ContentTableCard/ContentTableCardItem.js b/apolloschurchapp/src/ui/ContentTableCard/ContentTableCardItem.js
deleted file mode 100644
index f387a41..0000000
--- a/apolloschurchapp/src/ui/ContentTableCard/ContentTableCardItem.js
+++ /dev/null
@@ -1,78 +0,0 @@
-import React, { PureComponent } from 'react';
-import { View } from 'react-native';
-import PropTypes from 'prop-types';
-
-import {
-  H6,
-  H4,
-  styled,
-  TouchableScale,
-  withIsLoading,
-  ConnectedImage,
-  FlexedView,
-} from '@apollosproject/ui-kit';
-
-const CellImage = styled(({ theme }) => ({
-  width: theme.sizing.baseUnit * 4,
-  height: theme.sizing.baseUnit * 4,
-  borderRadius: theme.sizing.baseUnit,
-  overflow: 'hidden',
-  marginRight: theme.sizing.baseUnit,
-}))(View);
-
-const StyledH6 = styled(({ theme }) => ({
-  color: theme.colors.text.tertiary,
-}))(H6);
-
-const TextContainer = styled(({ theme }) => ({
-  marginTop: theme.sizing.baseUnit / 2.5,
-  borderBottomWidth: 0.5,
-  height: theme.sizing.baseUnit * 4.25,
-  borderColor: theme.colors.shadows.default,
-}))(FlexedView);
-
-const Cell = styled(({ theme }) => ({
-  paddingHorizontal: theme.sizing.baseUnit,
-  paddingVertical: theme.sizing.baseUnit / 4,
-  backgroundColor: theme.colors.background.paper,
-  flexDirection: 'row',
-  justifyContent: 'flex-start',
-  alignItems: 'center',
-}))(View);
-
-class ContentTableCardItem extends PureComponent {
-  static propTypes = {
-    onPress: PropTypes.func,
-    imageSource: PropTypes.any, // eslint-disable-line
-    label: PropTypes.string,
-    title: PropTypes.string,
-    id: PropTypes.string,
-  };
-
-  render() {
-    return (
-      <TouchableScale
-        onPress={() =>
-          this.props.onPress({
-            id: this.props.id,
-            transitionKey: 2,
-          })
-        }
-      >
-        <Cell>
-          <CellImage>
-            <ConnectedImage source={this.props.imageSource} isLoading />
-          </CellImage>
-          <TextContainer>
-            <StyledH6>{this.props.label}</StyledH6>
-            <H4 numberOfLines={2} ellipsizeMode="tail">
-              {this.props.title}
-            </H4>
-          </TextContainer>
-        </Cell>
-      </TouchableScale>
-    );
-  }
-}
-
-export default withIsLoading(ContentTableCardItem);
diff --git a/apolloschurchapp/src/ui/ContentTableCard/ContentTableCardItem.stories.js b/apolloschurchapp/src/ui/ContentTableCard/ContentTableCardItem.stories.js
deleted file mode 100644
index 6a0d4cb..0000000
--- a/apolloschurchapp/src/ui/ContentTableCard/ContentTableCardItem.stories.js
+++ /dev/null
@@ -1,28 +0,0 @@
-import React from 'react';
-import { storiesOf } from '@apollosproject/ui-storybook';
-
-import ContentTableCardItem from './ContentTableCardItem';
-
-const item = {
-  id: 'UniversalContentItem:9d06423a8908b7cc1e1f2db6156c1bfb',
-  title: 'Hello 1',
-  parentChannel: {
-    id: 'ContentChannel:be35f49307d7297989d3514be788ef2d',
-    name: 'NewSpring - Articles',
-  },
-  coverImage: {
-    sources: {
-      uri: 'https://picsum.photos/600/400/?image=63',
-    },
-  },
-};
-
-storiesOf('ContentTableCardItem', module).add('simple', () => (
-  <ContentTableCardItem
-    onPress={() => {}}
-    imageSource={item.coverImage.sources}
-    label={item.parentChannel.name}
-    title={item.title}
-    id={item.id}
-  />
-));
diff --git a/apolloschurchapp/src/ui/ContentTableCard/index.js b/apolloschurchapp/src/ui/ContentTableCard/index.js
deleted file mode 100644
index 646b394..0000000
--- a/apolloschurchapp/src/ui/ContentTableCard/index.js
+++ /dev/null
@@ -1,56 +0,0 @@
-import React, { PureComponent } from 'react';
-// import { View } from 'react-native';
-import PropTypes from 'prop-types';
-
-import {
-  TableView,
-  Card,
-  CardContent,
-  styled,
-  withIsLoading,
-} from '@apollosproject/ui-kit';
-
-import ContentTableCardItem from './ContentTableCardItem';
-
-const Header = styled(({ theme }) => ({
-  backgroundColor: theme.colors.background.paper,
-}))(CardContent);
-
-const Content = styled(() => ({
-  borderBottomWidth: 0,
-  borderTopWidth: 0,
-}))(TableView);
-
-class ContentTableCard extends PureComponent {
-  static propTypes = {
-    onPress: PropTypes.func,
-    isLoading: PropTypes.bool, // eslint-disable-line
-    content: PropTypes.array, // eslint-disable-line
-    header: PropTypes.element,
-  };
-
-  render() {
-    const { onPress, isLoading, content, header: headerContent } = this.props;
-
-    return (
-      <Card>
-        <Header>{headerContent}</Header>
-        <Content>
-          {content.map((item) => (
-            <ContentTableCardItem
-              isLoading={isLoading}
-              key={item.id}
-              id={item.id}
-              onPress={onPress}
-              label={item.parentChannel ? item.parentChannel.name : ''}
-              title={item.title || ''}
-              imageSource={item.coverImage ? item.coverImage.sources : ''}
-            />
-          ))}
-        </Content>
-      </Card>
-    );
-  }
-}
-
-export default withIsLoading(ContentTableCard);
diff --git a/apolloschurchapp/src/ui/HorizontalContentCardConnected/horizontalContentCardComponentMapper.js b/apolloschurchapp/src/ui/HorizontalContentCardConnected/horizontalContentCardComponentMapper.js
new file mode 100644
index 0000000..433b143
--- /dev/null
+++ b/apolloschurchapp/src/ui/HorizontalContentCardConnected/horizontalContentCardComponentMapper.js
@@ -0,0 +1,32 @@
+import React from 'react';
+import { get } from 'lodash';
+import PropTypes from 'prop-types';
+
+import {
+  HorizontalDefaultCard,
+  HorizontalHighlightCard,
+} from '@apollosproject/ui-kit';
+
+const horizontalContentCardComponentMapper = ({
+  title,
+  hyphenatedTitle,
+  ...props
+}) => {
+  // map typename to the the card we want to render.
+  switch (get(props, '__typename')) {
+    case 'MediaContentItem':
+    case 'WeekendContentItem':
+    case 'ContentSeriesContentItem':
+    case 'DevotionalContentItem':
+      return <HorizontalHighlightCard title={hyphenatedTitle} {...props} />;
+    default:
+      return <HorizontalDefaultCard title={title} {...props} />;
+  }
+};
+
+horizontalContentCardComponentMapper.propTypes = {
+  hyphenatedTitle: PropTypes.string,
+  title: PropTypes.string,
+};
+
+export default horizontalContentCardComponentMapper;
diff --git a/apolloschurchapp/src/ui/HorizontalContentCardConnected/index.js b/apolloschurchapp/src/ui/HorizontalContentCardConnected/index.js
new file mode 100644
index 0000000..c0a38bc
--- /dev/null
+++ b/apolloschurchapp/src/ui/HorizontalContentCardConnected/index.js
@@ -0,0 +1,29 @@
+import React, { memo } from 'react';
+import PropTypes from 'prop-types';
+
+import ContentCardConnected from '../ContentCardConnected';
+
+import horizontalContentCardComponentMapper from './horizontalContentCardComponentMapper';
+
+const HorizontalContentCardConnected = memo(
+  ({ Component, isLoading, ...otherProps }) => (
+    <ContentCardConnected
+      Component={Component}
+      isLoading={isLoading}
+      {...otherProps}
+    />
+  )
+);
+
+HorizontalContentCardConnected.propTypes = {
+  Component: PropTypes.func,
+  isLoading: PropTypes.bool,
+};
+
+HorizontalContentCardConnected.defaultProps = {
+  Component: horizontalContentCardComponentMapper,
+};
+
+HorizontalContentCardConnected.displayName = 'HorizontalContentCardConnected';
+
+export default HorizontalContentCardConnected;
diff --git a/apolloschurchapp/src/ui/Like/Like.tests.js b/apolloschurchapp/src/ui/LikeContentButton/Like.tests.js
similarity index 91%
rename from apolloschurchapp/src/ui/Like/Like.tests.js
rename to apolloschurchapp/src/ui/LikeContentButton/Like.tests.js
index f7d40c2..1ec78ec 100644
--- a/apolloschurchapp/src/ui/Like/Like.tests.js
+++ b/apolloschurchapp/src/ui/LikeContentButton/Like.tests.js
@@ -5,7 +5,7 @@ import Providers from 'apolloschurchapp/src/Providers';
 
 import { LikeIcon } from '.';
 
-describe('the Like component', () => {
+describe('the LikeContentButton component', () => {
   it('should render a Like', () => {
     const tree = renderer.create(
       <Providers>
diff --git a/apolloschurchapp/src/ui/Like/index.js b/apolloschurchapp/src/ui/LikeContentButton/index.js
similarity index 81%
rename from apolloschurchapp/src/ui/Like/index.js
rename to apolloschurchapp/src/ui/LikeContentButton/index.js
index 7efb31a..3a58e27 100644
--- a/apolloschurchapp/src/ui/Like/index.js
+++ b/apolloschurchapp/src/ui/LikeContentButton/index.js
@@ -17,7 +17,7 @@ LikeIcon.propTypes = {
   isLiked: PropTypes.bool,
 };
 
-const Like = withNavigation(({ isLiked, toggleLike, itemId }) => (
+const LikeContentButton = withNavigation(({ isLiked, toggleLike, itemId }) => (
   <ProtectedTouchable
     onPress={() =>
       toggleLike({ itemId, operation: isLiked ? 'Unlike' : 'Like' })
@@ -27,10 +27,10 @@ const Like = withNavigation(({ isLiked, toggleLike, itemId }) => (
   </ProtectedTouchable>
 ));
 
-Like.propTypes = {
+LikeContentButton.propTypes = {
   itemId: PropTypes.string,
   isLiked: PropTypes.bool,
   toggleLike: PropTypes.func,
 };
 
-export { Like as default, LikeIcon };
+export { LikeContentButton as default, LikeIcon };
diff --git a/apolloschurchapp/src/ui/LikeButton/LikeButton.tests.js b/apolloschurchapp/src/ui/LikeContentButtonConnected/LikeButton.tests.js
similarity index 93%
rename from apolloschurchapp/src/ui/LikeButton/LikeButton.tests.js
rename to apolloschurchapp/src/ui/LikeContentButtonConnected/LikeButton.tests.js
index 76197fd..aee7385 100644
--- a/apolloschurchapp/src/ui/LikeButton/LikeButton.tests.js
+++ b/apolloschurchapp/src/ui/LikeContentButtonConnected/LikeButton.tests.js
@@ -4,9 +4,9 @@
 // import Providers from 'apolloschurchapp/src/Providers';
 // import gql from 'graphql-tag';
 
-// import LikeButton from '.';
+// import LikeContentButtonConnected from '.';
 
-describe('the LikeButton component', () => {
+describe('the LikeContentButtonConnected component', () => {
   it('should render', () => {
     //     const updateLikeEntity = {
     //       request: {
@@ -56,7 +56,7 @@ describe('the LikeButton component', () => {
     //     };
     //     const tree = renderer.create(
     //       <Providers mocks={[updateLikeEntity, getLikedContentItem]}>
-    //         <LikeButton itemId={'asdf'} />
+    //         <LikeContentButtonConnected itemId={'asdf'} />
     //       </Providers>
     //     );
     //     expect(tree).toMatchSnapshot();
@@ -106,7 +106,7 @@ describe('the LikeButton component', () => {
     //     };
     //     const tree = renderer.create(
     //       <Providers mocks={[updateLikeEntity, getLikedContentItem]}>
-    //         <LikeButton itemId={'asdf'} />
+    //         <LikeContentButtonConnected itemId={'asdf'} />
     //       </Providers>
     //     );
     //     expect(tree).toMatchSnapshot();
diff --git a/apolloschurchapp/src/ui/LikeButton/getLikedContentItem.js b/apolloschurchapp/src/ui/LikeContentButtonConnected/getLikedContentItem.js
similarity index 100%
rename from apolloschurchapp/src/ui/LikeButton/getLikedContentItem.js
rename to apolloschurchapp/src/ui/LikeContentButtonConnected/getLikedContentItem.js
diff --git a/apolloschurchapp/src/ui/LikeButton/index.js b/apolloschurchapp/src/ui/LikeContentButtonConnected/index.js
similarity index 84%
rename from apolloschurchapp/src/ui/LikeButton/index.js
rename to apolloschurchapp/src/ui/LikeContentButtonConnected/index.js
index a7c0c2d..724407e 100644
--- a/apolloschurchapp/src/ui/LikeButton/index.js
+++ b/apolloschurchapp/src/ui/LikeContentButtonConnected/index.js
@@ -4,15 +4,15 @@ import PropTypes from 'prop-types';
 import { get } from 'lodash';
 import { Query, Mutation } from 'react-apollo';
 
-import Like from 'apolloschurchapp/src/ui/Like';
+import LikeContentButton from 'apolloschurchapp/src/ui/LikeContentButton';
 import { AnalyticsConsumer } from '@apollosproject/ui-analytics';
 
-import updateLikeEntity from './updateLikeEntity';
-import getLikedContentItem from './getLikedContentItem';
+import UPDATE_LIKE_ENTITY from './updateLikeEntity';
+import GET_LIKED_CONTENT_ITEM from './getLikedContentItem';
 import updateLikedContent from './updateLikedContent';
 
 const GetLikeData = ({ itemId, children }) => (
-  <Query query={getLikedContentItem} variables={{ itemId }}>
+  <Query query={GET_LIKED_CONTENT_ITEM} variables={{ itemId }}>
     {({ data: { node = {} } = {}, loading }) => {
       const isLiked = loading ? false : get(node, 'isLiked') || false;
       return children({ isLiked, item: node });
@@ -34,7 +34,7 @@ const UpdateLikeStatus = ({
   <AnalyticsConsumer>
     {({ track }) => (
       <Mutation
-        mutation={updateLikeEntity}
+        mutation={UPDATE_LIKE_ENTITY}
         optimisticResponse={{
           updateLikeEntity: {
             id: itemId, // unknown at this time
@@ -53,7 +53,7 @@ const UpdateLikeStatus = ({
         ) => {
           updateLikedContent({ liked, cache, item });
           cache.writeQuery({
-            query: getLikedContentItem,
+            query: GET_LIKED_CONTENT_ITEM,
             data: {
               node: {
                 ...item,
@@ -100,12 +100,12 @@ UpdateLikeStatus.propTypes = {
   }),
 };
 
-const LikeButton = ({ itemId }) => (
+const LikeContentButtonConnected = ({ itemId }) => (
   <GetLikeData itemId={itemId}>
     {({ isLiked, item }) => (
       <UpdateLikeStatus itemId={itemId} item={item} isLiked={isLiked}>
         {({ toggleLike, isLiked: newLikeValue }) => (
-          <Like
+          <LikeContentButton
             itemId={itemId}
             isLiked={newLikeValue}
             toggleLike={toggleLike}
@@ -116,8 +116,8 @@ const LikeButton = ({ itemId }) => (
   </GetLikeData>
 );
 
-LikeButton.propTypes = {
+LikeContentButtonConnected.propTypes = {
   itemId: PropTypes.string,
 };
 
-export default LikeButton;
+export default LikeContentButtonConnected;
diff --git a/apolloschurchapp/src/ui/LikeButton/updateLikeEntity.js b/apolloschurchapp/src/ui/LikeContentButtonConnected/updateLikeEntity.js
similarity index 100%
rename from apolloschurchapp/src/ui/LikeButton/updateLikeEntity.js
rename to apolloschurchapp/src/ui/LikeContentButtonConnected/updateLikeEntity.js
diff --git a/apolloschurchapp/src/ui/LikeButton/updateLikedContent.js b/apolloschurchapp/src/ui/LikeContentButtonConnected/updateLikedContent.js
similarity index 79%
rename from apolloschurchapp/src/ui/LikeButton/updateLikedContent.js
rename to apolloschurchapp/src/ui/LikeContentButtonConnected/updateLikedContent.js
index c0d5978..73c0531 100644
--- a/apolloschurchapp/src/ui/LikeButton/updateLikedContent.js
+++ b/apolloschurchapp/src/ui/LikeContentButtonConnected/updateLikedContent.js
@@ -1,25 +1,29 @@
-import getAllLikedContent from 'apolloschurchapp/src/tabs/connect/getLikedContent';
-import { contentItemFragment } from 'apolloschurchapp/src/content-single/getContentItem';
+import GET_ALL_LIKED_CONTENT from 'apolloschurchapp/src/tabs/connect/getLikedContent';
+import { BASE_CARD_FRAGMENT } from 'apolloschurchapp/src/ui/ContentCardConnected';
 
 const addItemToLikedContentList = ({ cache, item, variables }) => {
   try {
     const data = cache.readQuery({
-      query: getAllLikedContent,
+      query: GET_ALL_LIKED_CONTENT,
       variables,
     });
     const fullItem = cache.readFragment({
       id: `${item.__typename}:${item.id}`,
-      fragment: contentItemFragment,
+      fragment: BASE_CARD_FRAGMENT,
+      fragmentName: 'baseCardFragment',
     });
     const newEdges = [
       fullItem,
       ...data.likedContent.edges.map(({ node }) => node),
     ].map((node) => ({
       __typename: 'ContentItemsConnectionEdge',
-      node,
+      node: {
+        ...node,
+        isLiked: true,
+      },
     }));
     cache.writeQuery({
-      query: getAllLikedContent,
+      query: GET_ALL_LIKED_CONTENT,
       variables,
       data: {
         ...data,
@@ -39,7 +43,7 @@ const addItemToLikedContentList = ({ cache, item, variables }) => {
 const removeItemFromLikedContentList = ({ cache, item, variables }) => {
   try {
     const data = cache.readQuery({
-      query: getAllLikedContent,
+      query: GET_ALL_LIKED_CONTENT,
       variables,
     });
 
@@ -48,7 +52,7 @@ const removeItemFromLikedContentList = ({ cache, item, variables }) => {
     );
 
     cache.writeQuery({
-      query: getAllLikedContent,
+      query: GET_ALL_LIKED_CONTENT,
       variables,
       data: {
         ...data,
diff --git a/apolloschurchapp/src/ui/Onboarding/Onboarding.tests.js b/apolloschurchapp/src/ui/Onboarding/Onboarding.tests.js
new file mode 100644
index 0000000..abe9746
--- /dev/null
+++ b/apolloschurchapp/src/ui/Onboarding/Onboarding.tests.js
@@ -0,0 +1,17 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from '../../Providers';
+
+import Onboarding from '.';
+
+describe('the Onboarding component', () => {
+  it('should render Onboarding', () => {
+    const tree = renderer.create(
+      <Providers>
+        <Onboarding />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/Onboarding/index.js b/apolloschurchapp/src/ui/Onboarding/index.js
index bcd6421..67d9879 100644
--- a/apolloschurchapp/src/ui/Onboarding/index.js
+++ b/apolloschurchapp/src/ui/Onboarding/index.js
@@ -1,6 +1,10 @@
 import React from 'react';
 
-import { GradientOverlayImage } from '@apollosproject/ui-kit';
+import {
+  GradientOverlayImage,
+  styled,
+  BackgroundView,
+} from '@apollosproject/ui-kit';
 import { ApolloConsumer } from 'react-apollo';
 
 import {
@@ -14,60 +18,71 @@ import {
 
 import { requestPushPermissions } from '@apollosproject/ui-notifications';
 
+const FullscreenBackgroundView = styled({
+  position: 'absolute',
+  width: '100%',
+  height: '100%',
+})(BackgroundView);
+
+const StyledGradient = styled({
+  maxHeight: '40%',
+})(GradientOverlayImage);
+
 function Onboarding({ navigation }) {
   return (
-    <OnboardingSwiper>
-      {({ swipeForward }) => (
-        <>
-          <AskNameConnected onPressPrimary={swipeForward} />
-          <FeaturesConnected
-            onPressPrimary={swipeForward}
-            BackgroundComponent={
-              <GradientOverlayImage
-                source={'https://picsum.photos/640/640/?random'}
-              />
-            }
-          />
-          <AboutYouConnected
-            onPressPrimary={swipeForward}
-            BackgroundComponent={
-              <GradientOverlayImage
-                source={'https://picsum.photos/640/640/?random'}
-              />
-            }
-          />
-          <LocationFinderConnected
-            onPressPrimary={swipeForward}
-            onNavigate={() => {
-              navigation.navigate('Location', {
-                onFinished: swipeForward,
-              });
-            }}
-            BackgroundComponent={
-              <GradientOverlayImage
-                source={'https://picsum.photos/640/640/?random'}
-              />
-            }
-          />
-          <ApolloConsumer>
-            {(client) => (
-              <AskNotificationsConnected
-                onPressPrimary={() => navigation.replace('Tabs')}
-                onRequestPushPermissions={() =>
-                  requestPushPermissions({ client })
-                }
-                primaryNavText={'Finish'}
-                BackgroundComponent={
-                  <GradientOverlayImage
-                    source={'https://picsum.photos/640/640/?random'}
-                  />
-                }
-              />
-            )}
-          </ApolloConsumer>
-        </>
-      )}
-    </OnboardingSwiper>
+    <>
+      <FullscreenBackgroundView />
+      <OnboardingSwiper>
+        {({ swipeForward }) => (
+          <>
+            <AskNameConnected onPressPrimary={swipeForward} />
+            <FeaturesConnected
+              onPressPrimary={swipeForward}
+              BackgroundComponent={
+                <StyledGradient
+                  source={'https://picsum.photos/640/640/?random'}
+                />
+              }
+            />
+            <AboutYouConnected
+              onPressPrimary={swipeForward}
+              BackgroundComponent={
+                <StyledGradient
+                  source={'https://picsum.photos/640/640/?random'}
+                />
+              }
+            />
+            <LocationFinderConnected
+              onPressPrimary={swipeForward}
+              onNavigate={() => {
+                navigation.navigate('Location');
+              }}
+              BackgroundComponent={
+                <StyledGradient
+                  source={'https://picsum.photos/640/640/?random'}
+                />
+              }
+            />
+            <ApolloConsumer>
+              {(client) => (
+                <AskNotificationsConnected
+                  onPressPrimary={() => navigation.replace('Tabs')}
+                  onRequestPushPermissions={() =>
+                    requestPushPermissions({ client })
+                  }
+                  primaryNavText={'Finish'}
+                  BackgroundComponent={
+                    <StyledGradient
+                      source={'https://picsum.photos/640/640/?random'}
+                    />
+                  }
+                />
+              )}
+            </ApolloConsumer>
+          </>
+        )}
+      </OnboardingSwiper>
+    </>
   );
 }
 
diff --git a/apolloschurchapp/src/ui/SearchCard/SearchCard.tests.js b/apolloschurchapp/src/ui/SearchCard/SearchCard.tests.js
new file mode 100644
index 0000000..c91c711
--- /dev/null
+++ b/apolloschurchapp/src/ui/SearchCard/SearchCard.tests.js
@@ -0,0 +1,70 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import SearchCard from '.';
+
+describe('The SearchCard component', () => {
+  it('should render', () => {
+    const data = {
+      title: 'How to lead people to Jesus',
+      summary:
+        'Love compels a mother to lose all dignity in public as she screams the name of her lost child.',
+      coverImage: {
+        name: null,
+        sources: [
+          {
+            uri:
+              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3Dd3a96243-2558-4c04-bf41-3aadcf41771f',
+            __typename: 'ImageMediaSource',
+          },
+        ],
+        __typename: 'ImageMedia',
+      },
+      cursor: 'b487224762b030f470967f45d7205823',
+      node: {
+        id: 'DevotionalContentItem:561dfb7dbd8a5c093fd8385c7edaadbc',
+        title: 'How to lead people to Jesus',
+        hyphenatedTitle: '-',
+        isLiked: false,
+        likedCount: 0,
+        summary:
+          'Love compels a mother to lose all dignity in public as she screams the name of her lost child.',
+        coverImage: {
+          name: 'Square Image',
+          sources: [
+            {
+              uri:
+                'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3Dd3a96243-2558-4c04-bf41-3aadcf41771f',
+              __typename: 'ImageMediaSource',
+            },
+          ],
+          __typename: 'ImageMedia',
+        },
+        theme: null,
+        parentChannel: {
+          id: 'ContentChannel:559b23fd0aa90e81b1c023e72e230fa1',
+          name: 'Devotional',
+          __typename: 'ContentChannel',
+        },
+        videos: [{ sources: [], __typename: 'VideoMedia' }],
+        audios: [],
+        __typename: 'DevotionalContentItem',
+      },
+      __typename: 'SearchResult',
+    };
+
+    const tree = renderer.create(
+      <Providers>
+        <SearchCard
+          coverImage={data.coverImage}
+          summary={data.summary}
+          title={data.title}
+          node={data.node}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/SearchCard/index.js b/apolloschurchapp/src/ui/SearchCard/index.js
new file mode 100644
index 0000000..3a73fb4
--- /dev/null
+++ b/apolloschurchapp/src/ui/SearchCard/index.js
@@ -0,0 +1,55 @@
+import React, { memo } from 'react';
+import PropTypes from 'prop-types';
+import { get } from 'lodash';
+
+import { contentCardComponentMapper } from '../ContentCardConnected';
+
+const SearchCard = memo(
+  ({
+    Component,
+    coverImage,
+    isLoading,
+    node,
+    summary,
+    title,
+    ...otherProps
+  }) => {
+    /* We don't have a way to know for certain if a particular card is true for `hasAction` without
+     * hitting Rock. While not 100% perfect we do know that these two types will have almost always
+     * have media associated with them. */
+    const hasAction = ['MediaContentItem', 'WeekendContentItem'].includes(
+      get(node, '__typename')
+    );
+
+    return (
+      <Component
+        coverImage={get(coverImage, 'sources', [])}
+        hasAction={hasAction}
+        isLoading={isLoading}
+        summary={summary}
+        title={title}
+        {...otherProps}
+        {...node}
+      />
+    );
+  }
+);
+
+SearchCard.propTypes = {
+  Component: PropTypes.func,
+  coverImage: PropTypes.shape({
+    sources: PropTypes.array,
+  }),
+  summary: PropTypes.string,
+  title: PropTypes.string,
+  node: PropTypes.shape({}),
+  isLoading: PropTypes.bool,
+};
+
+SearchCard.defaultProps = {
+  Component: contentCardComponentMapper,
+};
+
+SearchCard.displayName = 'SearchCard';
+
+export default SearchCard;
diff --git a/apolloschurchapp/src/ui/SearchInputHeader/SearchInputHeader.tests.js b/apolloschurchapp/src/ui/SearchInputHeader/SearchInputHeader.tests.js
new file mode 100644
index 0000000..ad074a3
--- /dev/null
+++ b/apolloschurchapp/src/ui/SearchInputHeader/SearchInputHeader.tests.js
@@ -0,0 +1,34 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import SearchInputHeader from '.';
+
+describe('The Onboarding LandingScreen component', () => {
+  it('should render', () => {
+    const tree = renderer.create(
+      <Providers>
+        <SearchInputHeader />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should be stylable', () => {
+    const style = { backgroundColor: 'salmon' };
+    const tree = renderer.create(
+      <Providers>
+        <SearchInputHeader style={style} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render pass props to SearchInput', () => {
+    const tree = renderer.create(
+      <Providers>
+        <SearchInputHeader cancelButtonText={'Boom'} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/SearchInputHeader/index.js b/apolloschurchapp/src/ui/SearchInputHeader/index.js
new file mode 100644
index 0000000..b2f33d9
--- /dev/null
+++ b/apolloschurchapp/src/ui/SearchInputHeader/index.js
@@ -0,0 +1,64 @@
+import React from 'react';
+import { Platform, StyleSheet, View } from 'react-native';
+
+import { styled, PaddedView, SearchInput } from '@apollosproject/ui-kit';
+
+const HeaderBorder = styled(
+  ({ theme }) => ({
+    paddingBottom: theme.sizing.baseUnit / 2,
+    /* It's unclear why this is necessary but without it the layout breaks on both platforms. Limited
+     * research suggest that without a background color the shadows don't know what to blend with so
+     * the view collapses. */
+    backgroundColor: theme.colors.background.paper,
+    // Renders the same shadows that React Navigation does.
+    ...Platform.select({
+      ios: {
+        shadowColor: 'rgba(0, 0, 0, 0.3)',
+        shadowOpacity: 0.85,
+        shadowRadius: 0,
+        shadowOffset: {
+          width: 0,
+          height: StyleSheet.hairlineWidth,
+        },
+      },
+      android: {
+        elevation: 4,
+      },
+    }),
+  }),
+  'SearchInputHeader.HeaderBorder'
+)(PaddedView);
+
+// This element is used to clip the Android shadow in every directection except the bottom.
+const AndroidClipElevationFix = styled(
+  {
+    ...Platform.select({
+      android: {
+        paddingBottom: 4,
+        overflow: 'hidden',
+      },
+    }),
+  },
+  'SearchInputHeader.AndroidClipElevationFix'
+)(View);
+
+const ReactNavigationStyleReset = StyleSheet.create({
+  header: {
+    borderBottomWidth: 0,
+    elevation: 0,
+  },
+});
+
+const SearchInputHeader = ({ style, ...props }) => (
+  <AndroidClipElevationFix style={style}>
+    <HeaderBorder vertical={false}>
+      <SearchInput {...props} />
+    </HeaderBorder>
+  </AndroidClipElevationFix>
+);
+
+SearchInputHeader.propTypes = {
+  ...SearchInput.propTypes,
+};
+
+export { SearchInputHeader as default, ReactNavigationStyleReset };
diff --git a/apolloschurchapp/src/ui/Share/Share.tests.js b/apolloschurchapp/src/ui/ShareContentButton/ShareContentButton.tests.js
similarity index 78%
rename from apolloschurchapp/src/ui/Share/Share.tests.js
rename to apolloschurchapp/src/ui/ShareContentButton/ShareContentButton.tests.js
index 1a059da..106f6b3 100644
--- a/apolloschurchapp/src/ui/Share/Share.tests.js
+++ b/apolloschurchapp/src/ui/ShareContentButton/ShareContentButton.tests.js
@@ -3,18 +3,17 @@ import renderer from 'react-test-renderer';
 
 import { Providers } from '@apollosproject/ui-kit';
 
-import Share from '.';
+import ShareContentButton from '.';
 
 describe('the Share component', () => {
   it('should render', () => {
     const shareObject = {
       title: 'Shared Object Title',
       url: 'https://github.com/ApollosProject/apollos-prototype',
-      message: 'Share this with all your friends and family',
     };
     const tree = renderer.create(
       <Providers>
-        <Share content={shareObject} />
+        <ShareContentButton content={shareObject} />
       </Providers>
     );
     expect(tree).toMatchSnapshot();
diff --git a/apolloschurchapp/src/ui/Share/index.js b/apolloschurchapp/src/ui/ShareContentButton/index.js
similarity index 81%
rename from apolloschurchapp/src/ui/Share/index.js
rename to apolloschurchapp/src/ui/ShareContentButton/index.js
index 2f979c5..4286a7f 100644
--- a/apolloschurchapp/src/ui/Share/index.js
+++ b/apolloschurchapp/src/ui/ShareContentButton/index.js
@@ -10,13 +10,13 @@ const enhance = compose(
   withTheme()
 );
 
-const Share = enhance(({ content, theme }) => (
+const ShareContentButton = enhance(({ content, theme }) => (
   <AnalyticsConsumer>
     {({ track }) => {
       const onPress = () => {
         share(content);
         track({
-          eventName: 'ShareContent',
+          eventName: 'Share',
           properties: { id: content.id, title: content.title },
         });
       };
@@ -29,12 +29,12 @@ const Share = enhance(({ content, theme }) => (
   </AnalyticsConsumer>
 ));
 
-Share.propTypes = {
+ShareContentButton.propTypes = {
   content: PropTypes.shape({
-    message: PropTypes.string,
     title: PropTypes.string,
     url: PropTypes.string,
+    id: PropTypes.string,
   }),
 };
 
-export default Share;
+export default ShareContentButton;
diff --git a/apolloschurchapp/src/ui/ShareContentButtonConnected/ShareContentButtonConnected.tests.js b/apolloschurchapp/src/ui/ShareContentButtonConnected/ShareContentButtonConnected.tests.js
new file mode 100644
index 0000000..46a3b2c
--- /dev/null
+++ b/apolloschurchapp/src/ui/ShareContentButtonConnected/ShareContentButtonConnected.tests.js
@@ -0,0 +1,50 @@
+import React from 'react';
+import Providers from 'apolloschurchapp/src/Providers';
+import { renderWithApolloData } from 'apolloschurchapp/src/utils/testUtils';
+import getShareContent from './getShareContent';
+import ShareContentButtonConnected from '.';
+
+const shareMock = {
+  request: {
+    query: getShareContent,
+    variables: { itemId: '1' },
+  },
+  result: {
+    data: {
+      node: {
+        id: '1',
+        __typename: 'ContentSeriesContentItem',
+        sharing: {
+          url: 'https://apolloschurchapp.newspring.cc',
+          title: 'Test Title ',
+          __typename: 'SharableContentItem',
+        },
+      },
+    },
+  },
+};
+
+const mocks = [shareMock];
+
+describe('the ShareContentButtonConnected', () => {
+  it('renders a share button', async () => {
+    const tree = await renderWithApolloData(
+      <Providers mocks={mocks}>
+        <ShareContentButtonConnected itemId={'1'} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('renders a share button with custom url, and title', async () => {
+    const tree = await renderWithApolloData(
+      <Providers mocks={mocks}>
+        <ShareContentButtonConnected
+          itemId={'1'}
+          url={'https://apollosrock.com'}
+          title="Some great title"
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/content-single/ActionContainer/getShareContent.js b/apolloschurchapp/src/ui/ShareContentButtonConnected/getShareContent.js
similarity index 100%
rename from apolloschurchapp/src/content-single/ActionContainer/getShareContent.js
rename to apolloschurchapp/src/ui/ShareContentButtonConnected/getShareContent.js
diff --git a/apolloschurchapp/src/ui/ShareContentButtonConnected/index.js b/apolloschurchapp/src/ui/ShareContentButtonConnected/index.js
new file mode 100644
index 0000000..95483b5
--- /dev/null
+++ b/apolloschurchapp/src/ui/ShareContentButtonConnected/index.js
@@ -0,0 +1,34 @@
+import React from 'react';
+
+import PropTypes from 'prop-types';
+import { Query } from 'react-apollo';
+import { get } from 'lodash';
+
+import ShareContentButton from 'apolloschurchapp/src/ui/ShareContentButton';
+
+import GET_SHARE_CONTENT from './getShareContent';
+
+const ShareContentButtonConnected = ({ itemId, title, message, url }) => (
+  <Query query={GET_SHARE_CONTENT} variables={{ itemId }}>
+    {({ data }) => {
+      const sharing = get(data, 'node.sharing', {});
+      const content = {
+        id: itemId,
+        title: title || sharing.title,
+        message: message || sharing.message,
+        url: url || sharing.url,
+      };
+      return <ShareContentButton content={content} />;
+    }}
+  </Query>
+);
+
+ShareContentButtonConnected.propTypes = {
+  itemId: PropTypes.string.isRequired,
+  // These props are available to override the default sharing data for a node.
+  title: PropTypes.string,
+  message: PropTypes.string,
+  url: PropTypes.string,
+};
+
+export default ShareContentButtonConnected;
diff --git a/apolloschurchapp/src/ui/UserAvatarView/AvatarForm.js b/apolloschurchapp/src/ui/UserAvatarView/AvatarForm.js
deleted file mode 100644
index 49c66b0..0000000
--- a/apolloschurchapp/src/ui/UserAvatarView/AvatarForm.js
+++ /dev/null
@@ -1,109 +0,0 @@
-import React, { PureComponent } from 'react';
-import { View } from 'react-native';
-import PropTypes from 'prop-types';
-import { get } from 'lodash';
-import { Query, ApolloConsumer } from 'react-apollo';
-
-import {
-  Touchable,
-  ButtonLink,
-  Avatar,
-  withTheme,
-  H5,
-  styled,
-} from '@apollosproject/ui-kit';
-import getUserProfile from '../../tabs/connect/getUserProfile';
-import uploadPhoto from './uploadPhoto';
-
-const GetPhotoData = ({ children }) => (
-  <Query query={getUserProfile}>
-    {({ data: { currentUser = {} } = {} }) => {
-      const photo = get(currentUser, 'profile.photo');
-      return children({ photo });
-    }}
-  </Query>
-);
-
-GetPhotoData.propTypes = {
-  children: PropTypes.func.isRequired,
-};
-
-const StyledView = styled(({ theme }) => ({
-  marginRight: 0,
-  marginBottom: theme.sizing.baseUnit * 0.75,
-  marginTop: theme.sizing.baseUnit * 0.5,
-}))(View);
-
-const RoundTouchable = withTheme(({ theme, size }) => ({
-  borderRadius: get(theme.sizing.avatar, size, theme.sizing.avatar.small),
-}))(Touchable);
-
-const Wrapper = styled({
-  justifyContent: 'center',
-  alignItems: 'center',
-})(View);
-
-export default class AvatarForm extends PureComponent {
-  state = {
-    isUploadingFile: false,
-  };
-
-  componentWillUnmount() {
-    this.setState({ isUploadingFile: false });
-  }
-
-  handleUploadPhoto = async ({ client }) => {
-    try {
-      await uploadPhoto({
-        client,
-        onUpload: () => this.setState({ isUploadingFile: true }),
-      });
-      await this.setState({ isUploadingFile: false });
-    } catch (e) {
-      console.warn(e);
-      this.setState({ isUploadingFile: false });
-    }
-  };
-
-  render() {
-    const { isUploadingFile } = this.state;
-
-    return (
-      <ApolloConsumer>
-        {(client) => (
-          <Wrapper>
-            <RoundTouchable
-              disabled={this.props.disabled}
-              onPress={() => this.handleUploadPhoto({ client })}
-              size="medium"
-            >
-              <GetPhotoData>
-                {({ photo }) => (
-                  <StyledView>
-                    <Avatar
-                      source={photo}
-                      size="medium"
-                      isLoading={isUploadingFile}
-                    />
-                  </StyledView>
-                )}
-              </GetPhotoData>
-            </RoundTouchable>
-            {this.props.text ? (
-              <H5>
-                <ButtonLink onPress={() => this.handleUploadPhoto({ client })}>
-                  Change Photo
-                </ButtonLink>
-              </H5>
-            ) : null}
-          </Wrapper>
-        )}
-      </ApolloConsumer>
-    );
-  }
-}
-
-AvatarForm.propTypes = {
-  disabled: PropTypes.bool,
-  text: PropTypes.bool,
-};
diff --git a/apolloschurchapp/src/ui/UserAvatarView/UserAvatarView.stories.js b/apolloschurchapp/src/ui/UserAvatarView/UserAvatarView.stories.js
deleted file mode 100644
index f32c776..0000000
--- a/apolloschurchapp/src/ui/UserAvatarView/UserAvatarView.stories.js
+++ /dev/null
@@ -1,23 +0,0 @@
-import React from 'react';
-import { storiesOf } from '@apollosproject/ui-storybook';
-
-import UserAvatarView from '.';
-
-storiesOf('UserAvatarView', module)
-  .add('example', () => (
-    <UserAvatarView
-      photo={'https://picsum.photos/400/400/?random'}
-      firstName={'Marty'}
-      lastName={'McFly'}
-      location={'Hill Valley'}
-    />
-  ))
-  .add('isLoading', () => (
-    <UserAvatarView
-      photo={'https://picsum.photos/400/400/?random'}
-      firstName={'Marty'}
-      lastName={'McFly'}
-      location={'Hill Valley'}
-      isLoading
-    />
-  ));
diff --git a/apolloschurchapp/src/ui/UserAvatarView/index.js b/apolloschurchapp/src/ui/UserAvatarView/index.js
deleted file mode 100644
index d18a809..0000000
--- a/apolloschurchapp/src/ui/UserAvatarView/index.js
+++ /dev/null
@@ -1,63 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-import { View } from 'react-native';
-
-import {
-  H3,
-  PaddedView,
-  ConnectedImage,
-  styled,
-  ChannelLabel,
-  withIsLoading,
-} from '@apollosproject/ui-kit';
-
-import AvatarForm from './AvatarForm';
-
-const Container = styled(({ theme }) => ({
-  backgroundColor: theme.colors.background.paper,
-  flexDirection: 'row',
-}))(View);
-
-const Content = styled(({ theme }) => ({
-  flex: 1,
-  justifyContent: 'center',
-  paddingVertical: theme.sizing.baseUnit * 0.5,
-}))(PaddedView);
-
-const UserAvatarView = withIsLoading(
-  ({
-    theme,
-    firstName,
-    lastName,
-    location,
-    isLoading,
-    disabled,
-    ...viewProps
-  }) => (
-    // todo: handle file select stuff
-    <Container {...viewProps}>
-      <AvatarForm isLoading={isLoading} text={false} disabled={disabled} />
-      <Content>
-        <H3>
-          {firstName} {lastName}
-        </H3>
-        {location && (
-          <ChannelLabel icon="pin" label={location} isLoading={isLoading} />
-        )}
-      </Content>
-    </Container>
-  )
-);
-
-UserAvatarView.propTypes = {
-  photo: ConnectedImage.propTypes.source,
-  firstName: PropTypes.string,
-  lastName: PropTypes.string,
-  location: PropTypes.string,
-  isLoading: PropTypes.bool,
-  disabled: PropTypes.bool,
-  blurIntensity: PropTypes.number,
-  ...View.propTypes,
-};
-
-export default UserAvatarView;
diff --git a/apolloschurchapp/src/ui/WebBrowser/Browser.android.js b/apolloschurchapp/src/ui/WebBrowser/Browser.android.js
deleted file mode 100644
index cc7d39d..0000000
--- a/apolloschurchapp/src/ui/WebBrowser/Browser.android.js
+++ /dev/null
@@ -1,10 +0,0 @@
-import { Linking } from 'react-native';
-
-const Browser = {
-  openURL: async (url) => {
-    if (!Linking.canOpenURL(url)) throw new Error('URL not supported');
-    Linking.openURL(url);
-  },
-};
-
-export default Browser;
diff --git a/apolloschurchapp/src/ui/WebBrowser/Browser.ios.js b/apolloschurchapp/src/ui/WebBrowser/Browser.ios.js
deleted file mode 100644
index 0716bff..0000000
--- a/apolloschurchapp/src/ui/WebBrowser/Browser.ios.js
+++ /dev/null
@@ -1,19 +0,0 @@
-import { Linking } from 'react-native';
-import SafariView from 'react-native-safari-view';
-
-const Browser = {
-  openURL: async (url, options) => {
-    try {
-      await SafariView.isAvailable();
-      SafariView.show({
-        url,
-        ...options,
-      });
-    } catch (e) {
-      if (!Linking.canOpenURL(url)) throw new Error('URL not supported');
-      Linking.openURL(url);
-    }
-  },
-};
-
-export default Browser;
diff --git a/apolloschurchapp/src/ui/WebBrowser/Browser.js b/apolloschurchapp/src/ui/WebBrowser/Browser.js
new file mode 100644
index 0000000..19ef6bc
--- /dev/null
+++ b/apolloschurchapp/src/ui/WebBrowser/Browser.js
@@ -0,0 +1,63 @@
+import { Linking } from 'react-native';
+import InAppBrowser from 'react-native-inappbrowser-reborn';
+import gql from 'graphql-tag';
+import { client } from '../../client';
+
+export const GET_ROCK_AUTH_DETAILS = gql`
+  query RockAuthDetails {
+    currentUser {
+      id
+      rock {
+        authCookie
+        authToken
+      }
+    }
+  }
+`;
+
+export const getRockAuthDetails = async () => {
+  const { data: { currentUser: { rock } = {} } = {} } = await client.query({
+    query: GET_ROCK_AUTH_DETAILS,
+    fetchPolicy: 'network-only',
+  });
+  return rock;
+};
+
+const Browser = {
+  open: async (
+    baseURL,
+    options,
+    auth = { useRockCookie: false, useRockToken: false }
+  ) => {
+    const url = new URL(baseURL);
+    // NOTE: RN adds a trailing slash
+    // https://github.com/facebook/react-native/issues/24428
+    url._url = url.toString().endsWith('/')
+      ? url.toString().slice(0, -1)
+      : url.toString();
+
+    const { authCookie, authToken } = await getRockAuthDetails();
+    let headers = {};
+    if (auth.useRockCookie && authCookie) {
+      console.warn(
+        "iOS doesn't support headers, you may want to use src/user-web-view"
+      );
+      headers = { Cookie: authCookie };
+    }
+    if (auth.useRockToken && authToken) {
+      url.searchParams.append('rckipid', authToken);
+    }
+    try {
+      if (await InAppBrowser.isAvailable()) {
+        InAppBrowser.open(url.toString(), {
+          headers,
+          ...options,
+        });
+      } else Linking.openURL(url.toString());
+    } catch (e) {
+      console.error(e);
+    }
+  },
+};
+
+export default Browser;
diff --git a/apolloschurchapp/src/ui/WebBrowser/index.js b/apolloschurchapp/src/ui/WebBrowser/index.js
index bc93c02..9e85ea5 100644
--- a/apolloschurchapp/src/ui/WebBrowser/index.js
+++ b/apolloschurchapp/src/ui/WebBrowser/index.js
@@ -6,21 +6,33 @@ import { withTheme } from '@apollosproject/ui-kit';
 
 import Browser from './Browser';
 
-const { Provider: BaseProvider, Consumer } = createContext(Browser.openURL);
+const { Provider: BaseProvider, Consumer } = createContext(Browser.open);
 
+// NOTE: don't think this is working...
 const Provider = withTheme(({ theme }) => ({
-  value: (url, options = {}) =>
-    Browser.openURL(url, {
+  value: (url, headers = {}, options = {}) =>
+    Browser.open(url, {
       ...Platform.select({
         ios: {
-          tintColor: theme.colors.primary,
-          barTintColor: theme.colors.background.paper,
+          dismissButtonStyle: 'cancel',
+          preferredBarTintColor: theme.colors.background.paper,
+          preferredControlTintColor: theme.colors.primary,
+          readerMode: false,
+          animated: true,
+          modalPresentationStyle: 'overFullScreen',
+          modalTransitionStyle: 'partialCurl',
+          modalEnabled: true,
         },
         android: {
           toolbarColor: theme.colors.background.paper,
           enableDefaultShare: true,
+          showTitle: true,
+          secondaryToolbarColor: 'black',
+          enableUrlBarHiding: true,
+          forceCloseOnRedirection: false,
         },
       }),
+      headers: { ...headers },
       ...options,
     }),
 }))(BaseProvider);
diff --git a/apolloschurchapp/src/ui/WebBrowser/index.tests.js b/apolloschurchapp/src/ui/WebBrowser/index.tests.js
index aa74598..88eb48f 100644
--- a/apolloschurchapp/src/ui/WebBrowser/index.tests.js
+++ b/apolloschurchapp/src/ui/WebBrowser/index.tests.js
@@ -1,11 +1,13 @@
 import React from 'react';
 import renderer from 'react-test-renderer';
-// TODO: how to include test for Android?
+import { Platform } from 'react-native';
 
 import Providers from 'apolloschurchapp/src/Providers';
 
 import { WebBrowserConsumer } from '.';
 
+jest.mock('Platform');
+
 describe(`WebBrowser Provider and Consumer`, () => {
   it('passes a function', async () => {
     renderer.create(
@@ -18,4 +20,16 @@ describe(`WebBrowser Provider and Consumer`, () => {
       </Providers>
     );
   });
+  it('passes a function (Android)', async () => {
+    Platform.OS = 'android';
+    renderer.create(
+      <Providers>
+        <WebBrowserConsumer>
+          {(openUrl) => {
+            expect(typeof openUrl).toBe('function');
+          }}
+        </WebBrowserConsumer>
+      </Providers>
+    );
+  });
 });
diff --git a/apolloschurchapp/src/user-settings/ChangeAvatar.js b/apolloschurchapp/src/user-settings/ChangeAvatar.js
new file mode 100644
index 0000000..ccadf1b
--- /dev/null
+++ b/apolloschurchapp/src/user-settings/ChangeAvatar.js
@@ -0,0 +1,76 @@
+import React, { PureComponent } from 'react';
+import { View } from 'react-native';
+import PropTypes from 'prop-types';
+import { get } from 'lodash';
+import { Query, ApolloConsumer } from 'react-apollo';
+
+import { PaddedView, Avatar, styled } from '@apollosproject/ui-kit';
+import GET_USER_PHOTO from './getUserPhoto';
+import uploadPhoto from './uploadPhoto';
+
+const GetPhotoData = ({ children }) => (
+  <Query query={GET_USER_PHOTO}>
+    {({ data: { currentUser = {} } = {} }) => {
+      const photo = get(currentUser, 'profile.photo');
+      return children({ photo });
+    }}
+  </Query>
+);
+
+GetPhotoData.propTypes = {
+  children: PropTypes.func.isRequired,
+};
+
+const Wrapper = styled({
+  justifyContent: 'center',
+  alignItems: 'center',
+})(View);
+
+export default class AvatarForm extends PureComponent {
+  state = {
+    isUploadingFile: false,
+  };
+
+  componentWillUnmount() {
+    this.setState({ isUploadingFile: false });
+  }
+
+  handleUploadPhoto = async ({ client }) => {
+    try {
+      await uploadPhoto({
+        client,
+        onUpload: () => this.setState({ isUploadingFile: true }),
+      });
+      await this.setState({ isUploadingFile: false });
+    } catch (e) {
+      console.warn(e);
+      this.setState({ isUploadingFile: false });
+    }
+  };
+
+  render() {
+    const { isUploadingFile } = this.state;
+
+    return (
+      <ApolloConsumer>
+        {(client) => (
+          <Wrapper>
+            <GetPhotoData>
+              {({ photo }) => (
+                <PaddedView horizontal={false}>
+                  <Avatar
+                    source={photo}
+                    size="large"
+                    buttonIcon="camera"
+                    onPressIcon={() => this.handleUploadPhoto({ client })}
+                    isLoading={isUploadingFile}
+                  />
+                </PaddedView>
+              )}
+            </GetPhotoData>
+          </Wrapper>
+        )}
+      </ApolloConsumer>
+    );
+  }
+}
diff --git a/apolloschurchapp/src/user-settings/ChangePassword.js b/apolloschurchapp/src/user-settings/ChangePassword.js
index 2938688..b8683fc 100644
--- a/apolloschurchapp/src/user-settings/ChangePassword.js
+++ b/apolloschurchapp/src/user-settings/ChangePassword.js
@@ -1,7 +1,13 @@
 import React, { PureComponent } from 'react';
 import PropTypes from 'prop-types';
-import { SafeAreaView } from 'react-native';
+import {
+  Platform,
+  KeyboardAvoidingView,
+  StyleSheet,
+  StatusBar,
+} from 'react-native';
 import { Mutation } from 'react-apollo';
+import { SafeAreaView, Header } from 'react-navigation';
 import { Formik } from 'formik';
 import * as Yup from 'yup';
 
@@ -9,14 +15,13 @@ import {
   Button,
   ButtonLink,
   TextInput,
-  BackgroundView,
   PaddedView,
   FlexedView,
   styled,
 } from '@apollosproject/ui-kit';
 
-import getAuthToken from '../store/getAuthToken';
-import changePassword from './passwordChange';
+import GET_AUTH_TOKEN from '../store/getAuthToken';
+import CHANGE_PASSWORD from './passwordChange';
 
 const Footer = styled({
   flex: 1,
@@ -43,8 +48,15 @@ class ChangePassword extends PureComponent {
   };
 
   renderForm = (props) => (
-    <FlexedView>
-      <BackgroundView>
+    <KeyboardAvoidingView
+      behavior={'padding'}
+      style={StyleSheet.absoluteFill}
+      keyboardVerticalOffset={
+        Header.HEIGHT +
+        (Platform.OS === 'android' ? StatusBar.currentHeight : 0)
+      }
+    >
+      <FlexedView>
         <PaddedView>
           <TextInput
             label="New Password"
@@ -65,27 +77,27 @@ class ChangePassword extends PureComponent {
             }
           />
         </PaddedView>
-      </BackgroundView>
-      <Footer>
-        <PaddedView>
-          <Button
-            disabled={props.isSubmitting}
-            onPress={props.handleSubmit}
-            title="Save"
-            loading={props.isSubmitting}
-          />
-        </PaddedView>
-      </Footer>
-    </FlexedView>
+        <Footer>
+          <PaddedView>
+            <Button
+              disabled={props.isSubmitting}
+              onPress={props.handleSubmit}
+              title="Save"
+              loading={props.isSubmitting}
+            />
+          </PaddedView>
+        </Footer>
+      </FlexedView>
+    </KeyboardAvoidingView>
   );
 
   render() {
     return (
       <Mutation
-        mutation={changePassword}
+        mutation={CHANGE_PASSWORD}
         update={async (cache, { data: { token } }) => {
           await cache.writeQuery({
-            query: getAuthToken,
+            query: GET_AUTH_TOKEN,
             data: { authToken: token },
           });
 
diff --git a/apolloschurchapp/src/user-settings/Locations/Locations.tests.js b/apolloschurchapp/src/user-settings/Locations/Locations.tests.js
index 627fc7f..25ebf12 100644
--- a/apolloschurchapp/src/user-settings/Locations/Locations.tests.js
+++ b/apolloschurchapp/src/user-settings/Locations/Locations.tests.js
@@ -2,11 +2,12 @@ import React from 'react';
 import { renderWithApolloData } from 'apolloschurchapp/src/utils/testUtils';
 
 import Providers from 'apolloschurchapp/src/Providers';
-import getCampusLocations from './getCampusLocations';
+import GET_CAMPUS_LOCATIONS from './getCampusLocations';
 import Location from './index';
 
 const campuses = [
   {
+    __typename: 'Campus',
     id: 'Campus:559b23fd0aa90e81b1c023e72e230fa1',
     latitude: 34.59814,
     longitude: -82.62045,
@@ -18,11 +19,13 @@ const campuses = [
     distanceFromLocation: 5,
     postalCode: '29621-3619',
     image: {
+      __typename: 'ImageMediaSource',
       uri:
         'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3Da47e8e69-9542-42de-9ed3-ff42fdc82417',
     },
   },
   {
+    __typename: 'Campus',
     id: 'Campus:965b6e6d7046a885bea4e300b5c0400d',
     latitude: 32.95103,
     longitude: -96.74738,
@@ -34,11 +37,13 @@ const campuses = [
     postalCode: '75080-5525',
     distanceFromLocation: 50,
     image: {
+      __typename: 'ImageMediaSource',
       uri:
         'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D5f9fd97a-fd6e-4ae5-ab5d-a9b95290d9b6',
     },
   },
   {
+    __typename: 'Campus',
     id: 'Campus:4f68015ba18662a7409d1219a4ce013e',
     latitude: 39.10501,
     longitude: -84.51138,
@@ -50,11 +55,13 @@ const campuses = [
     postalCode: '45202-2118',
     distanceFromLocation: 500,
     image: {
+      __typename: 'ImageMediaSource',
       uri:
         'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3Dbad9eb54-3e78-44a7-a028-3f2d6e71a36f',
     },
   },
   {
+    __typename: 'Campus',
     id: 'Campus:a0f64573eabf00a607bec911794d50fb',
     latitude: 42.09203,
     longitude: -88.13289,
@@ -66,6 +73,7 @@ const campuses = [
     postalCode: '60010-6143',
     distanceFromLocation: 5000,
     image: {
+      __typename: 'ImageMediaSource',
       uri:
         'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3Dede1fb83-968e-4bef-8d77-ad81c96e8a47',
     },
@@ -80,6 +88,10 @@ describe('Display Native Map with Locations', () => {
     latitudeDelta: 100,
     longitudeDelta: 10,
   };
+  const userLocation = {
+    latitude: 39.104797,
+    longitude: -84.511959,
+  };
   it('Render a native map view', async () => {
     const navigation = {
       navigate: jest.fn(),
@@ -89,21 +101,30 @@ describe('Display Native Map with Locations', () => {
 
     const mock = {
       request: {
-        query: getCampusLocations,
+        query: GET_CAMPUS_LOCATIONS,
         variables: {
-          latitude: initialRegion.latitude,
-          longitude: initialRegion.longitude,
+          latitude: userLocation.latitude,
+          longitude: userLocation.longitude,
         },
       },
       result: {
         data: {
           campuses,
+          currentUser: {
+            id: 'AuthenticatedUser:123',
+            __typename: 'AuthenticatedUser',
+            profile: {
+              id: 'Person:123',
+              __typename: 'Person',
+              campus: campuses[3],
+            },
+          },
         },
       },
     };
 
     const tree = await renderWithApolloData(
-      <Providers mocks={[mock]} addTypename={false}>
+      <Providers mocks={[mock]}>
         <Location navigation={navigation} initialRegion={initialRegion} />
       </Providers>
     );
diff --git a/apolloschurchapp/src/user-settings/Locations/MapView.js b/apolloschurchapp/src/user-settings/Locations/MapView.js
index b38e1d5..b44b872 100644
--- a/apolloschurchapp/src/user-settings/Locations/MapView.js
+++ b/apolloschurchapp/src/user-settings/Locations/MapView.js
@@ -1,39 +1,45 @@
 import React, { Component } from 'react';
 import PropTypes from 'prop-types';
-import { View, Animated } from 'react-native';
-import SafeAreaView from 'react-native-safe-area-view';
+import { Animated, Dimensions, Platform, PixelRatio } from 'react-native';
+import { SafeAreaView } from 'react-navigation';
 import RNMapView from 'react-native-maps';
 import { debounce } from 'lodash';
 
 import {
   Button,
+  Touchable,
   PaddedView,
+  FlexedView,
   styled,
   withTheme,
   CampusCard,
 } from '@apollosproject/ui-kit';
+import { MediaPlayerSpacer } from '@apollosproject/ui-media-player';
 
 import Marker from './Marker';
 
-const { CARD_WIDTH } = CampusCard;
+const getCampusAddress = (campus) =>
+  `${campus.street1}\n${campus.city}, ${campus.state} ${campus.postalCode}`;
 
-const ContainerView = styled({
-  flex: 1,
-})(View);
+/* TODO: remove magic number. `theme.sizing.baseUnit * 2.25` This width value is a brittle
+ * calculation of width minus `CampusCard` margins */
+const CARD_WIDTH = Dimensions.get('window').width - 36;
 
 const FlexedMapView = styled({ flex: 1 })(({ mapRef, ...props }) => (
   <RNMapView ref={mapRef} {...props} />
 ));
 
-const getCampusAddress = (campus) =>
-  `${campus.street1}\n${campus.city}, ${campus.state} ${campus.postalCode}`;
-
-const ScrollingView = styled({
+const Footer = styled({
   position: 'absolute',
   bottom: 0,
   left: 0,
   right: 0,
-})(View);
+})(SafeAreaView);
+
+const StyledCampusCard = styled(({ theme }) => ({
+  width: CARD_WIDTH,
+  marginHorizontal: theme.sizing.baseUnit / 4,
+}))(CampusCard);
 
 class MapView extends Component {
   static propTypes = {
@@ -43,6 +49,10 @@ class MapView extends Component {
         longitude: PropTypes.number.isRequired,
       })
     ),
+    currentCampus: PropTypes.shape({
+      latitude: PropTypes.number.isRequired,
+      longitude: PropTypes.number.isRequired,
+    }),
     onLocationSelect: PropTypes.func.isRequired,
     initialRegion: PropTypes.shape({
       latitude: PropTypes.number.isRequired,
@@ -64,167 +74,173 @@ class MapView extends Component {
     }),
   };
 
-  state = {
-    campus: null,
-  };
-
   animation = new Animated.Value(0);
 
+  scrollView = null;
+
   componentDidMount() {
     this.animation.addListener(debounce(this.updateCoordinates));
   }
 
   componentDidUpdate(oldProps) {
-    if (oldProps.userLocation !== this.props.userLocation) {
+    // update mapview if there are campuses and the location changes
+    if (
+      this.props.campuses.length &&
+      oldProps.userLocation !== this.props.userLocation
+    ) {
       this.updateCoordinates({ value: this.previousScrollPosition });
     }
   }
 
-  get contentContainerStyle() {
-    return { paddingHorizontal: this.props.theme.sizing.baseUnit * 0.75 }; // pad cards from edge of screen but account for card margin
+  get currentCampus() {
+    const cardIndex = Math.floor(
+      this.previousScrollPosition / CARD_WIDTH + 0.3
+    ); // animate 30% away from landing on the next item;
+    return this.sortedCampuses[cardIndex];
+  }
+
+  get sortedCampuses() {
+    const { currentCampus = null, campuses = [] } = this.props;
+    if (!this.props.currentCampus) {
+      return campuses;
+    }
+    return [
+      currentCampus,
+      ...campuses.filter(({ id }) => id !== currentCampus.id),
+    ];
   }
 
+  scrollToIndex = (index) => {
+    this.scrollView.getNode().scrollTo({
+      x: index * (CARD_WIDTH + 8),
+      y: 0,
+      animated: true,
+    });
+    this.updateCoordinates({ value: index * (CARD_WIDTH + 8) });
+  };
+
   updateCoordinates = ({ value }) => {
     this.previousScrollPosition = value;
-    const cardIndex = Math.floor(value / CARD_WIDTH + 0.3); // animate 30% away from landing on the next item;
-    const campus = this.props.campuses[cardIndex];
-    this.setState({ campus });
-    if (!campus) return;
 
     const { userLocation } = this.props;
-
-    let { latitude } = campus;
-    const { longitude } = campus;
-    let { latitudeDelta, longitudeDelta } = this.props.initialRegion;
-
-    if (userLocation) {
-      // Calculate rectangle that shows user's location in the view with campus at center
-      const minLat = Math.min(campus.latitude, userLocation.latitude);
-      const maxLat = Math.max(campus.latitude, userLocation.latitude);
-      const minLong = Math.min(campus.longitude, userLocation.longitude);
-      const mayLong = Math.max(campus.longitude, userLocation.longitude);
-
-      latitudeDelta = (maxLat - minLat) * 2.5;
-      longitudeDelta = (mayLong - minLong) * 2.5;
-    }
-
-    // Now, we need to transform the given lat/lng/delta up to make room for cards at bottom.
-    // To make this math simpler, we'll assume the cards take up roughly 20% of the vertical space
-    const maxDelta = Math.max(latitudeDelta, longitudeDelta);
-    latitude -= maxDelta * 0.2; // move the view up 20%
-    latitudeDelta *= 1.2; // include 20% more area in the view
-
-    this.map.animateToRegion(
-      {
-        latitude,
-        longitude,
-        latitudeDelta,
-        longitudeDelta,
-      },
-      350
-    );
+    // campus card height + some padding
+
+    const bottomPadding = 100 + this.props.theme.sizing.baseUnit * 12;
+    const edgePadding = {
+      top: 100,
+      left: 100,
+      right: 100,
+      bottom:
+        Platform.OS === 'android'
+          ? // NOTE: android bug
+            // https://github.com/react-native-community/react-native-maps/issues/2543
+            PixelRatio.getPixelSizeForLayoutSize(bottomPadding)
+          : bottomPadding,
+    };
+
+    const visibleCampuses = [
+      userLocation,
+      ...(this.currentCampus ? [this.currentCampus] : this.sortedCampuses),
+    ];
+
+    this.map.fitToCoordinates(visibleCampuses, {
+      edgePadding,
+    });
   };
 
   render() {
-    const { campuses = [], onLocationSelect } = this.props;
-    const interpolations = campuses.map((marker, index) => {
+    const { onLocationSelect } = this.props;
+    const interpolations = this.sortedCampuses.map((marker, index) => {
       const inputRange = [
         (index - 1) * CARD_WIDTH,
         index * CARD_WIDTH,
         (index + 1) * CARD_WIDTH,
       ];
-      const scale = this.animation.interpolate({
-        inputRange,
-        outputRange: [1, 2.5, 1],
-        extrapolate: 'clamp',
-      });
       const opacity = this.animation.interpolate({
         inputRange,
         outputRange: [0.35, 1, 0.35],
         extrapolate: 'clamp',
       });
-      return { scale, opacity };
+      return { opacity };
     });
 
     return (
-      <ContainerView>
-        <ContainerView>
-          <FlexedMapView
-            initialRegion={this.props.initialRegion}
-            showsUserLocation
-            mapRef={(map) => {
-              this.map = map;
+      <FlexedView>
+        <FlexedMapView
+          initialRegion={this.props.initialRegion}
+          showsUserLocation
+          mapRef={(map) => {
+            this.map = map;
+          }}
+        >
+          {this.sortedCampuses.map((campus, index) => {
+            const campusOpacity = {
+              opacity: interpolations[index].opacity,
+            };
+            return (
+              <Marker
+                onPress={() => this.scrollToIndex(index)}
+                key={campus.id}
+                opacityStyle={campusOpacity}
+                latitude={campus.latitude}
+                longitude={campus.longitude}
+              />
+            );
+          })}
+        </FlexedMapView>
+        <Footer>
+          <Animated.ScrollView
+            horizontal
+            showsHorizontalScrollIndicator={false}
+            snapToInterval={CARD_WIDTH + 8} // account for padding
+            snapToAlignment={'start'}
+            decelerationRate={'fast'}
+            contentContainerStyle={{
+              paddingHorizontal: this.props.theme.sizing.baseUnit * 0.75,
             }}
-          >
-            {campuses.map((campus, index) => {
-              const scaleStyle = {
-                transform: [
-                  {
-                    scale: interpolations[index].scale,
-                  },
-                ],
-              };
-              const opacityStyle = {
-                opacity: interpolations[index].opacity,
-              };
-              return (
-                <Marker
-                  key={campus.id}
-                  opacityStyle={opacityStyle}
-                  scaleStyle={scaleStyle}
-                  latitude={campus.latitude}
-                  longitude={campus.longitude}
-                />
-              );
-            })}
-          </FlexedMapView>
-          <ScrollingView>
-            <SafeAreaView forceInset={{ bottom: 'always', top: 'never' }}>
-              <Animated.ScrollView
-                horizontal
-                showsHorizontalScrollIndicator={false}
-                snapToInterval={CARD_WIDTH + 8} // account for padding
-                snapToAlignment={'start'}
-                decelerationRate={'fast'}
-                contentContainerStyle={this.contentContainerStyle} // correctly pads cards in ScrollView
-                scrollEventThrottle={16} // roughtly 1000ms/60fps = 16ms
-                onScroll={Animated.event(
-                  [
-                    {
-                      nativeEvent: {
-                        contentOffset: {
-                          x: this.animation,
-                        },
-                      },
+            ref={(ref) => (this.scrollView = ref)} // eslint-disable-line
+            scrollEventThrottle={16} // roughtly 1000ms/60fps = 16ms
+            onScroll={Animated.event(
+              [
+                {
+                  nativeEvent: {
+                    contentOffset: {
+                      x: this.animation,
                     },
-                  ],
-                  { useNativeDriver: true }
-                )}
+                  },
+                },
+              ],
+              { useNativeDriver: true }
+            )}
+          >
+            {this.sortedCampuses.map((campus) => (
+              <Touchable
+                key={campus.id}
+                onPress={() => onLocationSelect(campus)}
               >
-                {campuses.map((campus) => (
-                  <CampusCard
-                    key={campus.id}
-                    distance={campus.distanceFromLocation}
-                    title={campus.name}
-                    description={getCampusAddress(campus)}
-                    images={[campus.image]}
-                  />
-                ))}
-              </Animated.ScrollView>
-              <PaddedView>
-                <Button
-                  title="Select Campus"
-                  pill={false}
-                  type="secondary"
-                  onPress={() =>
-                    onLocationSelect(this.state.campus || campuses[0])
-                  }
+                <StyledCampusCard
+                  distance={campus.distanceFromLocation}
+                  title={campus.name}
+                  description={getCampusAddress(campus)}
+                  images={[campus.image]}
                 />
-              </PaddedView>
-            </SafeAreaView>
-          </ScrollingView>
-        </ContainerView>
-      </ContainerView>
+              </Touchable>
+            ))}
+          </Animated.ScrollView>
+          <MediaPlayerSpacer>
+            <PaddedView>
+              <Button
+                title="Select Campus"
+                pill={false}
+                type="secondary"
+                onPress={() =>
+                  onLocationSelect(this.currentCampus || this.sortedCampuses[0])
+                }
+              />
+            </PaddedView>
+          </MediaPlayerSpacer>
+        </Footer>
+      </FlexedView>
     );
   }
 }
diff --git a/apolloschurchapp/src/user-settings/Locations/Marker.js b/apolloschurchapp/src/user-settings/Locations/Marker.js
index b7c10d7..6f1fdfe 100644
--- a/apolloschurchapp/src/user-settings/Locations/Marker.js
+++ b/apolloschurchapp/src/user-settings/Locations/Marker.js
@@ -7,54 +7,41 @@ import Color from 'color';
 import { styled } from '@apollosproject/ui-kit';
 
 const MarkerView = styled(({ theme }) => ({
-  width: 8,
-  height: 8,
-  borderRadius: 4,
+  width: theme.sizing.baseUnit * 0.5,
+  height: theme.sizing.baseUnit * 0.5,
+  borderRadius: theme.sizing.baseUnit * 0.25,
   backgroundColor: Color(theme.colors.primary).fade(theme.alpha.medium),
+  zIndex: 2,
 }))(View);
 
-const MarkerWrapView = styled({
-  alignItems: 'center',
-  justifyContent: 'center',
-})(View);
-
-// This is not good. Is there a better way to prevent cascading styles?
-
 const MarkerRingView = styled(({ theme }) => ({
-  width: 24,
-  height: 24,
-  borderRadius: 12,
-  right: -8,
-  top: -8,
+  width: theme.sizing.baseUnit * 1.5,
+  height: theme.sizing.baseUnit * 1.5,
+  borderRadius: theme.sizing.baseUnit * 0.75,
   backgroundColor: Color(theme.colors.primary).fade(theme.alpha.low),
-  position: 'absolute',
   borderWidth: 1,
   borderColor: Color(theme.colors.primary).fade(theme.alpha.medium),
-  alignItems: 'stretch',
+  alignItems: 'center',
+  justifyContent: 'center',
 }))(View);
 
-const StyledMarker = memo(
-  ({ latitude, longitude, opacityStyle, scaleStyle }) => (
-    <Marker coordinate={{ latitude, longitude }}>
-      <MarkerWrapView>
-        <Animated.View style={opacityStyle}>
-          <MarkerRingView>
-            <Animated.View style={scaleStyle} />
-          </MarkerRingView>
-          <MarkerView />
-        </Animated.View>
-      </MarkerWrapView>
-    </Marker>
-  )
-);
+const StyledMarker = memo(({ latitude, longitude, opacityStyle, onPress }) => (
+  <Marker onPress={onPress} coordinate={{ latitude, longitude }}>
+    <Animated.View style={opacityStyle}>
+      <MarkerRingView>
+        <MarkerView />
+      </MarkerRingView>
+    </Animated.View>
+  </Marker>
+));
 
 StyledMarker.displayName = 'StyledMarker';
 
 StyledMarker.propTypes = {
   latitude: PropTypes.number.isRequired,
   longitude: PropTypes.number.isRequired,
+  onPress: PropTypes.func.isRequired,
   opacityStyle: PropTypes.shape({}),
-  scaleStyle: PropTypes.shape({}),
 };
 
 export default StyledMarker;
diff --git a/apolloschurchapp/src/user-settings/Locations/getCampusLocations.js b/apolloschurchapp/src/user-settings/Locations/getCampusLocations.js
index 1c98bb8..6dc73e9 100644
--- a/apolloschurchapp/src/user-settings/Locations/getCampusLocations.js
+++ b/apolloschurchapp/src/user-settings/Locations/getCampusLocations.js
@@ -6,6 +6,15 @@ export default gql`
     campuses(location: { latitude: $latitude, longitude: $longitude }) {
       ...CampusParts
     }
+    currentUser {
+      id
+      profile {
+        id
+        campus {
+          ...CampusParts
+        }
+      }
+    }
   }
   ${CampusFragment}
 `;
diff --git a/apolloschurchapp/src/user-settings/Locations/index.js b/apolloschurchapp/src/user-settings/Locations/index.js
index f8517c3..d2fcd20 100644
--- a/apolloschurchapp/src/user-settings/Locations/index.js
+++ b/apolloschurchapp/src/user-settings/Locations/index.js
@@ -2,28 +2,14 @@ import React, { PureComponent } from 'react';
 import PropTypes from 'prop-types';
 import { Query, Mutation } from 'react-apollo';
 import { Dimensions } from 'react-native';
-
+import Geolocation from 'react-native-geolocation-service';
 import { PaddedView, ButtonLink } from '@apollosproject/ui-kit';
+import { get } from 'lodash';
 
-import getUserProfile from '../../tabs/connect/getUserProfile';
+import GET_CAMPUSES from './getCampusLocations';
+import CHANGE_CAMPUS from './campusChange';
 import MapView from './MapView';
 
-import getAllCampuses from './getCampusLocations';
-
-import campusChange from './campusChange';
-
-const getCurrentLocation = () =>
-  new Promise((resolve, reject) => {
-    navigator.geolocation.getCurrentPosition(
-      (position) => resolve(position),
-      (e) => reject(e)
-    );
-  });
-
-const screen = Dimensions.get('window');
-
-const ASPECT_RATIO = screen.width / screen.height;
-
 class Location extends PureComponent {
   static propTypes = {
     navigation: PropTypes.shape({
@@ -37,7 +23,6 @@ class Location extends PureComponent {
       latitudeDelta: PropTypes.number,
       longitudeDelta: PropTypes.number,
     }),
-    onFinished: PropTypes.func,
   };
 
   static defaultProps = {
@@ -46,7 +31,9 @@ class Location extends PureComponent {
       latitude: 39.809734,
       longitude: -98.555618,
       latitudeDelta: 100,
-      longitudeDelta: 100 * ASPECT_RATIO,
+      longitudeDelta:
+        (100 * Dimensions.get('window').width) /
+        Dimensions.get('window').height,
     },
   };
 
@@ -61,78 +48,62 @@ class Location extends PureComponent {
   });
 
   state = {
-    region: this.props.initialRegion,
+    userLocation: {
+      latitude: 39.104797,
+      longitude: -84.511959,
+    },
   };
 
-  componentDidMount() {
-    return getCurrentLocation().then((position) => {
-      if (position) {
+  async componentDidMount() {
+    Geolocation.getCurrentPosition(
+      (position) => {
         this.setState({
           userLocation: {
             latitude: position.coords.latitude,
             longitude: position.coords.longitude,
           },
         });
-      }
-    });
+      },
+      (e) => console.warn('Error getting location!', e),
+      { enableHighAccuracy: true, timeout: 15000, maximumAge: 10000 }
+    );
   }
 
   render() {
-    const { navigation, onFinished } = this.props;
-    // we should use the `onFinished` from the navigation param, if it exists.
-    const handleFinished = this.props.navigation.getParam(
-      'onFinished',
-      onFinished
-    );
-
     return (
       <Query
-        query={getAllCampuses}
+        query={GET_CAMPUSES}
         variables={{
-          latitude: this.state.region.latitude,
-          longitude: this.state.region.longitude,
+          latitude: this.state.userLocation.latitude,
+          longitude: this.state.userLocation.longitude,
         }}
         fetchPolicy="cache-and-network"
       >
-        {({ loading, error, data: { campuses = [] } = {} }) => (
-          <Mutation
-            mutation={campusChange}
-            update={async (cache, { data: { updateUserCampus } }) => {
-              const { currentUser } = await cache.readQuery({
-                query: getUserProfile,
-              });
-              await cache.writeQuery({
-                query: getUserProfile,
-                data: {
-                  currentUser: {
-                    ...currentUser,
-                    profile: {
-                      ...currentUser.profile,
-                      campus: {
-                        ...updateUserCampus.campus,
-                      },
-                    },
-                  },
-                },
-              });
-            }}
-          >
+        {({ loading, error, data: { campuses, currentUser } = {} }) => (
+          <Mutation mutation={CHANGE_CAMPUS}>
             {(handlePress) => (
               <MapView
-                navigation={navigation}
+                navigation={this.props.navigation}
                 isLoading={loading}
                 error={error}
-                campuses={campuses}
+                campuses={campuses || []}
                 initialRegion={this.props.initialRegion}
                 userLocation={this.state.userLocation}
-                onLocationSelect={async ({ id }) => {
-                  await handlePress({
+                currentCampus={get(currentUser, 'profile.campus')}
+                onLocationSelect={async (campus) => {
+                  handlePress({
                     variables: {
-                      campusId: id,
+                      campusId: campus.id,
+                    },
+                    optimisticResponse: {
+                      updateUserCampus: {
+                        __typename: 'Mutation',
+                        id: currentUser.id,
+                        campus,
+                      },
                     },
                   });
-                  await navigation.goBack();
-                  if (handleFinished) handleFinished();
+                  this.props.navigation.goBack();
                 }}
               />
             )}
diff --git a/apolloschurchapp/src/user-settings/PersonDetails.tests.js b/apolloschurchapp/src/user-settings/PersonDetails.tests.js
index b55f57e..ef8d662 100644
--- a/apolloschurchapp/src/user-settings/PersonDetails.tests.js
+++ b/apolloschurchapp/src/user-settings/PersonDetails.tests.js
@@ -1,26 +1,33 @@
 import React from 'react';
-import renderer from 'react-test-renderer';
-import wait from 'waait';
 
 import Providers from 'apolloschurchapp/src/Providers';
 
-import getUserProfile from '../tabs/connect/getUserProfile';
+import GET_USER_PROFILE from '../tabs/connect/getUserProfile';
+import { renderWithApolloData } from '../utils/testUtils';
 import PersonalDetails from './PersonalDetails';
 
 describe('PersonalDetails component', () => {
   it('renders PersonalDetails when logged in', async () => {
     const mock = {
       request: {
-        query: getUserProfile,
+        query: GET_USER_PROFILE,
       },
       result: {
         data: {
           currentUser: {
+            __typename: 'AuthenticatedUser',
+            id: 'AuthenticatedUser:123',
             profile: {
+              __typename: 'Person',
+              id: 'Profile:123',
               firstName: 'Isaac',
               lastName: 'Hardy',
               nickName: 'Ike',
               email: 'isaac.hardy@newspring.cc',
+              birthDate: '2019-09-12T21:01:06.026Z',
+              gender: 'Male',
+              campus: null,
+              photo: null,
             },
           },
         },
@@ -31,12 +38,12 @@ describe('PersonalDetails component', () => {
       getParam: jest.fn(),
       goBack: jest.fn(),
     };
-    const tree = renderer.create(
+    const tree = await renderWithApolloData(
       <Providers mocks={[mock]}>
         <PersonalDetails navigation={navigation} />
       </Providers>
     );
-    await wait(0); // wait for response from graphql
+
     expect(tree).toMatchSnapshot();
   });
 });
diff --git a/apolloschurchapp/src/user-settings/PersonalDetails.js b/apolloschurchapp/src/user-settings/PersonalDetails.js
index e694002..9404206 100644
--- a/apolloschurchapp/src/user-settings/PersonalDetails.js
+++ b/apolloschurchapp/src/user-settings/PersonalDetails.js
@@ -1,6 +1,12 @@
 import React, { PureComponent } from 'react';
 import PropTypes from 'prop-types';
-import { SafeAreaView } from 'react-native';
+import {
+  KeyboardAvoidingView,
+  StyleSheet,
+  StatusBar,
+  Platform,
+} from 'react-native';
+import { SafeAreaView, Header } from 'react-navigation';
 import { Query, Mutation } from 'react-apollo';
 import { Formik } from 'formik';
 import * as Yup from 'yup';
@@ -11,12 +17,11 @@ import {
   FlexedView,
   Button,
   ButtonLink,
-  TableView,
   styled,
 } from '@apollosproject/ui-kit';
 
-import getUserProfile from '../tabs/connect/getUserProfile';
-import updateCurrentUser from './updateCurrentUser';
+import GET_USER_PROFILE from '../tabs/connect/getUserProfile';
+import UPDATE_CURRENT_USER from './updateCurrentUser';
 
 const Footer = styled({
   flex: 1,
@@ -43,8 +48,16 @@ class PersonalDetails extends PureComponent {
   };
 
   renderForm = (props) => (
-    <FlexedView>
-      <TableView>
+    // have to add the offset to account for react-navigation header
+    <KeyboardAvoidingView
+      behavior={'padding'}
+      style={StyleSheet.absoluteFill}
+      keyboardVerticalOffset={
+        Header.HEIGHT +
+        (Platform.OS === 'android' ? StatusBar.currentHeight : 0)
+      }
+    >
+      <FlexedView>
         <PaddedView>
           <TextInput
             label="First Name"
@@ -60,10 +73,6 @@ class PersonalDetails extends PureComponent {
             error={props.touched.lastName && props.errors.lastName}
             onChangeText={(text) => props.setFieldValue('lastName', text)}
           />
-        </PaddedView>
-      </TableView>
-      <TableView>
-        <PaddedView>
           <TextInput
             label="Email"
             type="email"
@@ -72,32 +81,32 @@ class PersonalDetails extends PureComponent {
             onChangeText={(text) => props.setFieldValue('email', text)}
           />
         </PaddedView>
-      </TableView>
-      <Footer>
-        <PaddedView>
-          <Button
-            disabled={!props.isValid || props.isSubmitting}
-            onPress={props.handleSubmit}
-            title="Save"
-            loading={props.isSubmitting}
-          />
-        </PaddedView>
-      </Footer>
-    </FlexedView>
+        <Footer>
+          <PaddedView>
+            <Button
+              disabled={!props.isValid || props.isSubmitting}
+              onPress={props.handleSubmit}
+              title="Save"
+              loading={props.isSubmitting}
+            />
+          </PaddedView>
+        </Footer>
+      </FlexedView>
+    </KeyboardAvoidingView>
   );
 
   render() {
     return (
-      <Query query={getUserProfile} fetchPolicy="cache-and-network">
+      <Query query={GET_USER_PROFILE} fetchPolicy="cache-and-network">
         {({ data: { currentUser = { profile: {} } } = {} }) => {
           const { firstName, lastName, email } = currentUser.profile;
 
           return (
             <Mutation
-              mutation={updateCurrentUser}
+              mutation={UPDATE_CURRENT_USER}
               update={async (cache, { data: { updateProfileFields } }) => {
                 await cache.writeQuery({
-                  query: getUserProfile,
+                  query: GET_USER_PROFILE,
                   data: {
                     currentUser: {
                       ...currentUser,
diff --git a/apolloschurchapp/src/user-settings/UserSettings.tests.js b/apolloschurchapp/src/user-settings/UserSettings.tests.js
index 5cb5377..9a1f3d3 100644
--- a/apolloschurchapp/src/user-settings/UserSettings.tests.js
+++ b/apolloschurchapp/src/user-settings/UserSettings.tests.js
@@ -4,14 +4,14 @@ import wait from 'waait';
 
 import Providers from 'apolloschurchapp/src/Providers';
 
-import getLoginState from '../tabs/connect/getLoginState';
+import GET_LOGIN_STATE from '../tabs/connect/getLoginState';
 import UserSettings from '.';
 
 describe('UserSettings component', () => {
   it('renders UserSettings when logged in', async () => {
     const mock = {
       request: {
-        query: getLoginState,
+        query: GET_LOGIN_STATE,
       },
       result: {
         data: { isLoggedIn: true },
diff --git a/apolloschurchapp/src/user-settings/getUserPhoto.js b/apolloschurchapp/src/user-settings/getUserPhoto.js
new file mode 100644
index 0000000..6235575
--- /dev/null
+++ b/apolloschurchapp/src/user-settings/getUserPhoto.js
@@ -0,0 +1,15 @@
+import gql from 'graphql-tag';
+
+export default gql`
+  query CurrentUserPhoto {
+    currentUser {
+      id
+      profile {
+        id
+        photo {
+          uri
+        }
+      }
+    }
+  }
+`;
diff --git a/apolloschurchapp/src/user-settings/index.js b/apolloschurchapp/src/user-settings/index.js
index c386327..3dfc18c 100644
--- a/apolloschurchapp/src/user-settings/index.js
+++ b/apolloschurchapp/src/user-settings/index.js
@@ -1,33 +1,24 @@
 import React, { PureComponent } from 'react';
-
+import { ScrollView } from 'react-native';
+import { StackActions, NavigationActions } from 'react-navigation';
 import PropTypes from 'prop-types';
 import { Query, Mutation } from 'react-apollo';
+import { getVersion, getBuildNumber } from 'react-native-device-info';
 
 import {
   BackgroundView,
-  PaddedView,
   TableView,
   Cell,
   CellIcon,
   CellText,
   Divider,
   Touchable,
-  styled,
   ActivityIndicator,
 } from '@apollosproject/ui-kit';
 import { WebBrowserConsumer } from 'apolloschurchapp/src/ui/WebBrowser';
-import AvatarForm from 'apolloschurchapp/src/ui/UserAvatarView/AvatarForm';
-
-import { getLoginState, logout } from '@apollosproject/ui-auth';
 
-const AvatarView = styled({
-  alignItems: 'center',
-  justifyContent: 'center',
-})(PaddedView);
-
-const BackgroundContainer = styled(({ theme }) => ({
-  paddingTop: theme.sizing.baseUnit * 1.75,
-}))(BackgroundView);
+import { GET_LOGIN_STATE, LOGOUT } from '@apollosproject/ui-auth';
+import ChangeAvatar from './ChangeAvatar';
 
 class UserSettings extends PureComponent {
   static navigationOptions = () => ({
@@ -43,112 +34,136 @@ class UserSettings extends PureComponent {
 
   render() {
     return (
-      <Query query={getLoginState} fetchPolicy="cache-and-network">
+      <Query query={GET_LOGIN_STATE} fetchPolicy="cache-and-network">
         {({ data: { isLoggedIn = false, loading } }) => {
           if (loading) return <ActivityIndicator />;
           if (!isLoggedIn) return null;
           return (
-            <BackgroundContainer>
-              <AvatarView>
-                <AvatarForm text />
-              </AvatarView>
-              <WebBrowserConsumer>
-                {(openUrl) => (
-                  <BackgroundView>
-                    <TableView>
-                      <Touchable
-                        onPress={async () => {
-                          await this.props.navigation.navigate(
-                            'PersonalDetails'
-                          );
-                        }}
-                      >
-                        <Cell>
-                          <CellText>Personal Details</CellText>
-                          <CellIcon name="arrow-next" />
-                        </Cell>
-                      </Touchable>
-                      <Divider />
-                      <Touchable
-                        onPress={async () => {
-                          await this.props.navigation.navigate('Location');
-                        }}
-                      >
-                        <Cell>
-                          <CellText>Location</CellText>
-                          <CellIcon name="arrow-next" />
-                        </Cell>
-                      </Touchable>
-                      <Divider />
-                      <Touchable
-                        onPress={async () => {
-                          await this.props.navigation.navigate(
-                            'ChangePassword'
-                          );
-                        }}
-                      >
-                        <Cell>
-                          <CellText>Change Password</CellText>
-                          <CellIcon name="arrow-next" />
-                        </Cell>
-                      </Touchable>
-                    </TableView>
-                    <TableView>
-                      <Touchable
-                        onPress={() =>
-                          openUrl('https://apollosrock.newspring.cc/')
-                        }
-                      >
-                        <Cell>
-                          <CellText>Give Feedback</CellText>
-                          <CellIcon name="arrow-next" />
-                        </Cell>
-                      </Touchable>
-                    </TableView>
-                    <TableView>
-                      <Touchable
-                        onPress={() =>
-                          openUrl('https://apollosrock.newspring.cc/')
-                        }
-                      >
-                        <Cell>
-                          <CellText>Privacy Policy</CellText>
-                          <CellIcon name="arrow-next" />
-                        </Cell>
-                      </Touchable>
-                      <Divider />
-                      <Touchable
-                        onPress={() =>
-                          openUrl('https://apollosrock.newspring.cc/')
-                        }
-                      >
+            <BackgroundView>
+              <ScrollView>
+                <ChangeAvatar />
+
+                <WebBrowserConsumer>
+                  {(openUrl) => (
+                    <>
+                      <TableView>
+                        <Touchable
+                          onPress={async () => {
+                            await this.props.navigation.navigate(
+                              'PersonalDetails'
+                            );
+                          }}
+                        >
+                          <Cell>
+                            <CellText>Personal Details</CellText>
+                            <CellIcon name="arrow-next" />
+                          </Cell>
+                        </Touchable>
+                        <Divider />
+                        <Touchable
+                          onPress={async () => {
+                            await this.props.navigation.navigate('Location');
+                          }}
+                        >
+                          <Cell>
+                            <CellText>Location</CellText>
+                            <CellIcon name="arrow-next" />
+                          </Cell>
+                        </Touchable>
+                        <Divider />
+                        <Touchable
+                          onPress={async () => {
+                            await this.props.navigation.navigate(
+                              'ChangePassword'
+                            );
+                          }}
+                        >
+                          <Cell>
+                            <CellText>Change Password</CellText>
+                            <CellIcon name="arrow-next" />
+                          </Cell>
+                        </Touchable>
+                      </TableView>
+                      <TableView>
+                        <Touchable
+                          onPress={() =>
+                            openUrl('https://apollosrock.newspring.cc/')
+                          }
+                        >
+                          <Cell>
+                            <CellText>Give Feedback</CellText>
+                            <CellIcon name="arrow-next" />
+                          </Cell>
+                        </Touchable>
+                      </TableView>
+                      <TableView>
+                        <Touchable
+                          onPress={() =>
+                            openUrl('https://apollosrock.newspring.cc/')
+                          }
+                        >
+                          <Cell>
+                            <CellText>Privacy Policy</CellText>
+                            <CellIcon name="arrow-next" />
+                          </Cell>
+                        </Touchable>
+                        <Divider />
+                        <Touchable
+                          onPress={() =>
+                            openUrl('https://apollosrock.newspring.cc/')
+                          }
+                        >
+                          <Cell>
+                            <CellText>Terms of Use</CellText>
+                            <CellIcon name="arrow-next" />
+                          </Cell>
+                        </Touchable>
+                      </TableView>
+                      <TableView>
+                        <Mutation mutation={LOGOUT}>
+                          {(handleLogout) => (
+                            <Touchable
+                              onPress={async () => {
+                                await handleLogout();
+                                // This resets the navigation stack, and the navigates to the first auth screen.
+                                // This ensures that user isn't navigated to a subscreen of Auth, like the pin entry screen.
+                                await this.props.navigation.dispatch(
+                                  StackActions.reset({
+                                    index: 0,
+                                    key: null,
+                                    actions: [
+                                      NavigationActions.navigate({
+                                        routeName: 'Auth',
+                                        action: NavigationActions.navigate({
+                                          routeName:
+                                            'AuthSMSPhoneEntryConnected',
+                                        }),
+                                      }),
+                                    ],
+                                  })
+                                );
+                              }}
+                            >
+                              <Cell>
+                                <CellText>Logout</CellText>
+                                <CellIcon name="arrow-next" />
+                              </Cell>
+                            </Touchable>
+                          )}
+                        </Mutation>
+                      </TableView>
+                      <TableView>
                         <Cell>
-                          <CellText>Terms of Use</CellText>
-                          <CellIcon name="arrow-next" />
+                          <CellText>
+                            {`App Version: ${getVersion()}.${getBuildNumber()}`}
+                          </CellText>
                         </Cell>
-                      </Touchable>
-                    </TableView>
-                    <TableView>
-                      <Mutation mutation={logout}>
-                        {(handleLogout) => (
-                          <Touchable
-                            onPress={async () => {
-                              await handleLogout();
-                              await this.props.navigation.navigate('Connect');
-                            }}
-                          >
-                            <Cell>
-                              <CellText>Logout</CellText>
-                              <CellIcon name="arrow-next" />
-                            </Cell>
-                          </Touchable>
-                        )}
-                      </Mutation>
-                    </TableView>
-                  </BackgroundView>
-                )}
-              </WebBrowserConsumer>
-            </BackgroundContainer>
+                      </TableView>
+                    </>
+                  )}
+                </WebBrowserConsumer>
+              </ScrollView>
+            </BackgroundView>
           );
         }}
       </Query>
diff --git a/apolloschurchapp/src/ui/UserAvatarView/uploadPhoto.js b/apolloschurchapp/src/user-settings/uploadPhoto.js
similarity index 66%
rename from apolloschurchapp/src/ui/UserAvatarView/uploadPhoto.js
rename to apolloschurchapp/src/user-settings/uploadPhoto.js
index cf0b4e0..b5949e8 100644
--- a/apolloschurchapp/src/ui/UserAvatarView/uploadPhoto.js
+++ b/apolloschurchapp/src/user-settings/uploadPhoto.js
@@ -1,7 +1,11 @@
+import { Platform } from 'react-native';
+
+import { ReactNativeFile } from 'apollo-upload-client';
 import gql from 'graphql-tag';
 import ImagePicker from 'react-native-image-picker';
-import { ReactNativeFile } from 'apollo-upload-client';
-import getUserProfile from '../../tabs/connect/getUserProfile';
+import { check, PERMISSIONS, request, RESULTS } from 'react-native-permissions';
+
+import GET_USER_PHOTO from './getUserPhoto';
 
 const options = {
   title: 'Select Profile Image',
@@ -9,10 +13,28 @@ const options = {
   storageOptions: {
     skipBackup: true,
     path: 'images',
+    waitUntilSaved: true,
+    cameraRoll: true,
   },
 };
 
-function showImagePicker() {
+async function handleIOSPermissions() {
+  let cameraPermissionStatus = await check(PERMISSIONS.IOS.PHOTO_LIBRARY);
+  let hasPermission = cameraPermissionStatus === RESULTS.GRANTED;
+  if (!hasPermission) {
+    cameraPermissionStatus = await request(PERMISSIONS.IOS.PHOTO_LIBRARY);
+    hasPermission = cameraPermissionStatus === RESULTS.GRANTED;
+    if (!hasPermission) {
+      return false;
+    }
+  }
+  return true;
+}
+
+async function showImagePicker() {
+  if (Platform.OS === 'ios' && !(await handleIOSPermissions())) {
+    return null;
+  }
   return new Promise((resolve, reject) => {
     ImagePicker.showImagePicker(options, (response) => {
       if (response.didCancel) {
@@ -57,10 +79,10 @@ export default async ({ client, onUpload = () => ({}) }) => {
           },
         }
       ) => {
-        const data = cache.readQuery({ query: getUserProfile });
+        const data = cache.readQuery({ query: GET_USER_PHOTO });
 
         cache.writeQuery({
-          query: getUserProfile,
+          query: GET_USER_PHOTO,
           data: {
             currentUser: {
               ...data.currentUser,
diff --git a/apolloschurchapp/src/user-web-browser/Provider.js b/apolloschurchapp/src/user-web-browser/Provider.js
index e620207..bc1ce7f 100644
--- a/apolloschurchapp/src/user-web-browser/Provider.js
+++ b/apolloschurchapp/src/user-web-browser/Provider.js
@@ -1,8 +1,8 @@
 import { createContext } from 'react';
 import NavigationService from '../NavigationService';
 
-// Can can either call the OpenUserWebView function directly, or call it using the Consuemer.
-// Your choice.
+// Can can either call the OpenUserWebView function directly, or call it using
+// the Consumer. Your choice.
 export const OpenUserWebView = ({ url }) =>
   NavigationService.navigate('UserWebBrowser', { url });
 
diff --git a/apolloschurchapp/src/user-web-browser/__tests__/BrowserWithUserCookie.tests.js b/apolloschurchapp/src/user-web-browser/__tests__/BrowserWithUserCookie.tests.js
new file mode 100644
index 0000000..5c576db
--- /dev/null
+++ b/apolloschurchapp/src/user-web-browser/__tests__/BrowserWithUserCookie.tests.js
@@ -0,0 +1,52 @@
+import React from 'react';
+import { renderWithApolloData } from '../../utils/testUtils';
+import Providers from '../../Providers';
+import BrowserWithUserCookie, { WITH_USER_COOKIE } from '../index';
+import { OpenUserWebView } from '../Provider';
+import NavigationService from '../../NavigationService';
+
+const mocks = [
+  {
+    request: { query: WITH_USER_COOKIE },
+    result: {
+      data: {
+        __typename: 'AuthenticatedUser',
+        currentUser: {
+          __typename: 'Person',
+          id: 'Person:123',
+          rockToken: 'ABC',
+        },
+      },
+    },
+  },
+];
+const navigation = { navigate: jest.fn(), getParam: jest.fn() };
+
+describe('the BrowserWithUserCookie component', () => {
+  it('renders with a user', async () => {
+    const tree = await renderWithApolloData(
+      <Providers mocks={mocks}>
+        <BrowserWithUserCookie navigation={navigation} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('renders with modal false', async () => {
+    const tree = await renderWithApolloData(
+      <Providers mocks={mocks}>
+        <BrowserWithUserCookie modal={false} navigation={navigation} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
+describe('the OpenUserWebView', () => {
+  jest.mock('NavigationService');
+  NavigationService.navigate = jest.fn();
+  it('navigtes', () => {
+    OpenUserWebView({ url: 'fake.com' });
+    expect(NavigationService.navigate).toBeCalledWith('UserWebBrowser', {
+      url: 'fake.com',
+    });
+  });
+});
diff --git a/apolloschurchapp/src/user-web-browser/index.js b/apolloschurchapp/src/user-web-browser/index.js
index d830fe5..5a41635 100644
--- a/apolloschurchapp/src/user-web-browser/index.js
+++ b/apolloschurchapp/src/user-web-browser/index.js
@@ -8,8 +8,7 @@ import { WebView } from 'react-native-webview';
 import PropTypes from 'prop-types';
 import { get } from 'lodash';
 
-const Browser = ({ url, cookie = '', modal, navigation }) => {
-  console.warn(cookie);
+const Browser = ({ url, cookie, modal, navigation }) => {
   if (modal) {
     return (
       <ModalView navigation={navigation}>
@@ -26,7 +25,7 @@ Browser.propTypes = {
   modal: PropTypes.bool.isRequired,
 };
 
-const WITH_USER_COOKIE = gql`
+export const WITH_USER_COOKIE = gql`
   query currentUserCookie {
     currentUser {
       id
diff --git a/apolloschurchapp/src/utils/__tests__/utils.tests.js b/apolloschurchapp/src/utils/__tests__/utils.tests.js
new file mode 100644
index 0000000..24fe48a
--- /dev/null
+++ b/apolloschurchapp/src/utils/__tests__/utils.tests.js
@@ -0,0 +1,68 @@
+import React from 'react';
+import { Text } from 'react-native';
+import fetchMoreResolver from '../fetchMoreResolver';
+import { renderWithApolloData } from '../testUtils';
+
+describe('the fetchMoreResolver function', () => {
+  const args = {
+    collectionName: 'userFeed',
+    variables: { first: 10, after: null },
+    fetchMore: jest.fn(),
+    data: {
+      userFeed: {
+        edges: [
+          {
+            node: { id: 'foo' },
+          },
+          {
+            node: { id: 'bar' },
+          },
+        ],
+        pageInfo: { endCursor: 'abc123' },
+      },
+    },
+  };
+  test('no endCursor', () => {
+    expect(
+      fetchMoreResolver({
+        ...args,
+        data: { userFeed: { edges: [], pageInfo: {} } },
+      })()
+    ).toBeUndefined();
+  });
+  test('combines data', () => {
+    fetchMoreResolver({ ...args })();
+    const previousResult = args.data;
+    const fetchMoreResult = {
+      userFeed: {
+        edges: [{ node: { id: 'baz' } }],
+        pageInfo: { endCursor: 'def456' },
+      },
+    };
+    expect(
+      args.fetchMore.mock.calls[0][0].updateQuery(previousResult, {
+        fetchMoreResult,
+      })
+    ).toEqual({
+      userFeed: {
+        edges: [
+          {
+            node: { id: 'foo' },
+          },
+          {
+            node: { id: 'bar' },
+          },
+          {
+            node: { id: 'baz' },
+          },
+        ],
+        pageInfo: { endCursor: 'def456' },
+      },
+    });
+  });
+});
+
+test('renderWithApolloData renders the component', async () => {
+  const tree = await renderWithApolloData(<Text>hello, world!</Text>);
+  expect(tree).toMatchSnapshot();
+});
diff --git a/apolloschurchapp/src/utils/content/__tests__/share.tests.js b/apolloschurchapp/src/utils/content/__tests__/share.tests.js
new file mode 100644
index 0000000..972edaa
--- /dev/null
+++ b/apolloschurchapp/src/utils/content/__tests__/share.tests.js
@@ -0,0 +1,38 @@
+import { Platform, Share } from 'react-native';
+import share from '../share';
+
+jest.mock('Platform');
+jest.mock('Share');
+
+describe('the share function', () => {
+  beforeAll(() => {
+    Share.share = jest.fn();
+  });
+  test('default arguments', () => {
+    Platform.OS = 'ios';
+    share({ title: 'title', url: 'http://url.com' });
+    expect(Share.share).toBeCalledWith({
+      title: 'title',
+      message: undefined,
+      url: 'http://url.com',
+    });
+  });
+  test('use message if provided', () => {
+    Platform.OS = 'ios';
+    share({ title: 'title', message: 'some message', url: 'http://url.com' });
+    expect(Share.share).toBeCalledWith({
+      title: 'title',
+      message: 'some message',
+      url: 'http://url.com',
+    });
+  });
+  test('android arguments', () => {
+    Platform.OS = 'android';
+    share({ title: 'title', url: 'http://url.com' });
+    expect(Share.share).toBeCalledWith({
+      title: 'title',
+      message: 'http://url.com',
+      url: 'http://url.com',
+    });
+  });
+});
diff --git a/apolloschurchapp/src/utils/content/share.js b/apolloschurchapp/src/utils/content/share.js
index 7a8efae..6d4326f 100644
--- a/apolloschurchapp/src/utils/content/share.js
+++ b/apolloschurchapp/src/utils/content/share.js
@@ -1,12 +1,12 @@
 import { Platform, Share } from 'react-native';
-// import { get } from 'lodash';
-// import { track, events } from 'apolloschurchapp/src/analytics';
-// import getSiteLink from './getSiteLink';
 
-const share = ({ title, url }) => {
+const share = ({ title, url, message }) => {
   Share.share({
     title,
-    message: Platform.OS === 'android' ? `${title}\n${url}` : title,
+    message:
+      Platform.OS === 'android'
+        ? [message, url].filter((s) => !!s).join('\n')
+        : message,
     url,
   });
 };
diff --git a/apolloschurchapp/src/utils/fetchMoreResolver.js b/apolloschurchapp/src/utils/fetchMoreResolver.js
index d812283..b93cb2f 100644
--- a/apolloschurchapp/src/utils/fetchMoreResolver.js
+++ b/apolloschurchapp/src/utils/fetchMoreResolver.js
@@ -6,7 +6,7 @@ export default function fetchMoreResolver({
   variables,
   fetchMore,
   data,
-} = {}) {
+}) {
   return () => {
     const pageInfoPath = `${collectionName}.pageInfo`;
     const edgePath = `${collectionName}.edges`;
