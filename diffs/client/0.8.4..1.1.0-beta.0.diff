diff --git a/apolloschurchapp/.env.production b/apolloschurchapp/.env.production
index 435f922..8f2e35f 100644
--- a/apolloschurchapp/.env.production
+++ b/apolloschurchapp/.env.production
@@ -1,4 +1,5 @@
 APP_DATA_URL=https://apollos-church-api-herokuapp-com.global.ssl.fastly.net/
 ONE_SIGNAL_KEY=$ONE_SIGNAL_KEY
 GOOGLE_MAPS_API_KEY=$GOOGLE_MAPS_API_KEY
-ANDROID_URL=doesnotmatter
+STORYBOOK=$STORYBOOK
+SCHEMA_VERSION=$SCHEMA_VERSION
\ No newline at end of file
diff --git a/apolloschurchapp/.npmignore b/apolloschurchapp/.npmignore
deleted file mode 100644
index 93f3929..0000000
--- a/apolloschurchapp/.npmignore
+++ /dev/null
@@ -1,2 +0,0 @@
-*
-!lib/**
diff --git a/apolloschurchapp/android/app/build.gradle b/apolloschurchapp/android/app/build.gradle
index 30e9267..8361e16 100644
--- a/apolloschurchapp/android/app/build.gradle
+++ b/apolloschurchapp/android/app/build.gradle
@@ -111,16 +111,20 @@ def enableProguardInReleaseBuilds = false
 
 android {
     compileSdkVersion rootProject.ext.compileSdkVersion
-    buildToolsVersion rootProject.ext.buildToolsVersion
+
+    compileOptions {
+        sourceCompatibility JavaVersion.VERSION_1_8
+        targetCompatibility JavaVersion.VERSION_1_8
+    }
 
     defaultConfig {
         applicationId "com.apolloschurch.app"
         minSdkVersion rootProject.ext.minSdkVersion
         targetSdkVersion rootProject.ext.targetSdkVersion
-        versionCode 8
-        versionName "0.8.3"
+        versionCode 15
+        versionName "1.1.0"
         ndk {
-            abiFilters "armeabi-v7a", "x86"
+            abiFilters "armeabi-v7a", "x86", "arm64-v8a", "x86_64"
         }
         resValue "string", "build_config_package", "com.apolloschurchapp"
     }
@@ -129,7 +133,7 @@ android {
             reset()
             enable enableSeparateBuildPerCPUArchitecture
             universalApk false  // If true, also generate a universal APK
-            include "armeabi-v7a", "x86", "arm64-v8a"
+            include "armeabi-v7a", "x86", "arm64-v8a", "x86_64"
         }
     }
     buildTypes {
@@ -143,7 +147,7 @@ android {
         variant.outputs.each { output ->
             // For each separate APK per architecture, set a unique version code as described here:
             // http://tools.android.com/tech-docs/new-build-system/user-guide/apk-splits
-            def versionCodes = ["armeabi-v7a":1, "x86":2, "arm64-v8a": 3]
+            def versionCodes = ["armeabi-v7a":1, "x86":2, "arm64-v8a": 3, "x86_64": 4]
             def abi = output.getFilter(OutputFile.ABI)
             if (abi != null) {  // null for the universal-debug, universal-release variants
                 output.versionCodeOverride =
@@ -151,9 +155,6 @@ android {
             }
         }
     }
-    compileOptions {
-        targetCompatibility JavaVersion.VERSION_1_8
-    }
 }
 
 dependencies {
@@ -162,8 +163,8 @@ dependencies {
       exclude group: 'com.google.android.gms', module: 'play-services-base'
       exclude group: 'com.google.android.gms', module: 'play-services-maps'
     }
-    implementation 'com.google.android.gms:play-services-base:10.0.1'
-    implementation 'com.google.android.gms:play-services-maps:10.0.1'
+    implementation 'com.google.android.gms:play-services-base:16.1.0'
+    implementation 'com.google.android.gms:play-services-maps:16.1.0'
     implementation project(':rn-fetch-blob')
     implementation project(':react-native-webview')
     implementation project(':react-native-video')
diff --git a/apolloschurchapp/android/app/src/debug/AndroidManifest.xml b/apolloschurchapp/android/app/src/debug/AndroidManifest.xml
new file mode 100644
index 0000000..fa26aa5
--- /dev/null
+++ b/apolloschurchapp/android/app/src/debug/AndroidManifest.xml
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="utf-8"?>
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools">
+
+    <uses-permission android:name="android.permission.SYSTEM_ALERT_WINDOW"/>
+
+    <application android:usesCleartextTraffic="true" tools:targetApi="28" tools:ignore="GoogleAppIndexingWarning" />
+</manifest>
diff --git a/apolloschurchapp/android/app/src/main/AndroidManifest.xml b/apolloschurchapp/android/app/src/main/AndroidManifest.xml
index 209e70c..fd72c6c 100644
--- a/apolloschurchapp/android/app/src/main/AndroidManifest.xml
+++ b/apolloschurchapp/android/app/src/main/AndroidManifest.xml
@@ -3,10 +3,9 @@
 
     <uses-permission android:name="android.permission.INTERNET" />
     <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
-    <uses-permission android:name="android.permission.SYSTEM_ALERT_WINDOW"/>
     <uses-permission android:name="android.permission.CAMERA" />
     <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION"/>
-
+    <uses-permission android:name="android.permission.FOREGROUND_SERVICE" />
 
     <application
       android:name=".MainApplication"
@@ -31,7 +30,7 @@
           <action android:name="android.intent.action.VIEW" />
           <category android:name="android.intent.category.DEFAULT" />
           <category android:name="android.intent.category.BROWSABLE" />
-          <data android:scheme="peopleapp" android:host="people" /> // A
+          <data android:scheme="peopleapp" android:host="people" />
         </intent-filter>
       </activity>
       <activity
diff --git a/apolloschurchapp/android/build.gradle b/apolloschurchapp/android/build.gradle
index 8a238c8..50a195a 100644
--- a/apolloschurchapp/android/build.gradle
+++ b/apolloschurchapp/android/build.gradle
@@ -2,10 +2,10 @@
 
 buildscript {
     ext {
-        buildToolsVersion = "28.0.2"
+        buildToolsVersion = "28.0.3"
         minSdkVersion = 16
         compileSdkVersion = 28
-        targetSdkVersion = 27
+        targetSdkVersion = 28
         supportLibVersion = "28.0.0"
     }
     repositories {
@@ -13,7 +13,7 @@ buildscript {
         jcenter()
     }
     dependencies {
-        classpath 'com.android.tools.build:gradle:3.2.1'
+        classpath 'com.android.tools.build:gradle:3.3.1'
 
         // NOTE: Do not place your application dependencies here; they belong
         // in the individual module build.gradle files
@@ -32,9 +32,3 @@ allprojects {
         maven { url "https://jitpack.io" }
     }
 }
-
-
-task wrapper(type: Wrapper) {
-    gradleVersion = '4.7'
-    distributionUrl = distributionUrl.replace("bin", "all")
-}
diff --git a/apolloschurchapp/android/gradle/wrapper/gradle-wrapper.properties b/apolloschurchapp/android/gradle/wrapper/gradle-wrapper.properties
index 73bb13d..019065d 100644
--- a/apolloschurchapp/android/gradle/wrapper/gradle-wrapper.properties
+++ b/apolloschurchapp/android/gradle/wrapper/gradle-wrapper.properties
@@ -2,4 +2,4 @@ distributionBase=GRADLE_USER_HOME
 distributionPath=wrapper/dists
 zipStoreBase=GRADLE_USER_HOME
 zipStorePath=wrapper/dists
-distributionUrl=https\://services.gradle.org/distributions/gradle-4.7-all.zip
+distributionUrl=https\://services.gradle.org/distributions/gradle-4.10.2-all.zip
diff --git a/apolloschurchapp/apollos.json b/apolloschurchapp/apollos.json
new file mode 100644
index 0000000..443bbf4
--- /dev/null
+++ b/apolloschurchapp/apollos.json
@@ -0,0 +1,4 @@
+{
+    "version": "1.1.0-beta.0",
+    "environment": "client"
+}
\ No newline at end of file
diff --git a/apolloschurchapp/appcenter-pre-build.sh b/apolloschurchapp/appcenter-pre-build.sh
index c666ab2..a9348f2 100644
--- a/apolloschurchapp/appcenter-pre-build.sh
+++ b/apolloschurchapp/appcenter-pre-build.sh
@@ -6,3 +6,4 @@ cp $droid_dir/gradle.properties.appcenter $droid_dir/gradle.properties
 
 cd ../../
 yarn
+yarn lerna run generate-stories
\ No newline at end of file
diff --git a/apolloschurchapp/index.js b/apolloschurchapp/index.js
index d009549..6bfaa01 100644
--- a/apolloschurchapp/index.js
+++ b/apolloschurchapp/index.js
@@ -1,6 +1,23 @@
+import './polyfill'; // this can be removed when we upgrade to react-native 59
 import { AppRegistry, YellowBox } from 'react-native';
+import SplashScreen from 'react-native-splash-screen';
 
-import App from './src';
+import Config from 'react-native-config';
+import Storybook from './storybook';
+import MainApp from './src';
+
+const useStorybook = Config.STORYBOOK === 'true';
+
+let App = MainApp;
+if (useStorybook) {
+  App = Storybook;
+}
+
+// If there's an error before the splash screen goes away, you never see that error.
+// This tries to hide the splash screen so you can see the error.
+// Shouldnt't do anything in Prod.
+// Depending on the error, splash screen might not go away ;)
+global.ErrorUtils.setGlobalHandler(() => SplashScreen.hide());
 
 YellowBox.ignoreWarnings([
   'Warning: isMounted(...) is deprecated',
diff --git a/apolloschurchapp/ios/apolloschurchapp-tvOS/Info.plist b/apolloschurchapp/ios/apolloschurchapp-tvOS/Info.plist
index 1cd372b..3873ea3 100644
--- a/apolloschurchapp/ios/apolloschurchapp-tvOS/Info.plist
+++ b/apolloschurchapp/ios/apolloschurchapp-tvOS/Info.plist
@@ -15,11 +15,11 @@
 	<key>CFBundlePackageType</key>
 	<string>APPL</string>
 	<key>CFBundleShortVersionString</key>
-	<string>0.8.3</string>
+	<string>1.1.0-beta.0</string>
 	<key>CFBundleSignature</key>
 	<string>????</string>
 	<key>CFBundleVersion</key>
-	<string>8</string>
+	<string>15</string>
 	<key>LSRequiresIPhoneOS</key>
 	<true />
 	<key>UILaunchStoryboardName</key>
diff --git a/apolloschurchapp/ios/apolloschurchapp-tvOSTests/Info.plist b/apolloschurchapp/ios/apolloschurchapp-tvOSTests/Info.plist
index 9712502..bff37a8 100644
--- a/apolloschurchapp/ios/apolloschurchapp-tvOSTests/Info.plist
+++ b/apolloschurchapp/ios/apolloschurchapp-tvOSTests/Info.plist
@@ -15,10 +15,10 @@
 	<key>CFBundlePackageType</key>
 	<string>BNDL</string>
 	<key>CFBundleShortVersionString</key>
-	<string>0.8.3</string>
+	<string>1.1.0-beta.0</string>
 	<key>CFBundleSignature</key>
 	<string>????</string>
 	<key>CFBundleVersion</key>
-	<string>8</string>
+	<string>15</string>
 </dict>
 </plist>
diff --git a/apolloschurchapp/ios/apolloschurchapp.xcodeproj/project.pbxproj b/apolloschurchapp/ios/apolloschurchapp.xcodeproj/project.pbxproj
index 73208f4..1329223 100644
--- a/apolloschurchapp/ios/apolloschurchapp.xcodeproj/project.pbxproj
+++ b/apolloschurchapp/ios/apolloschurchapp.xcodeproj/project.pbxproj
@@ -1945,7 +1945,7 @@
 			isa = XCBuildConfiguration;
 			buildSettings = {
 				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
-				CURRENT_PROJECT_VERSION = 4;
+				CURRENT_PROJECT_VERSION = 11;
 				DEAD_CODE_STRIPPING = NO;
 				DEVELOPMENT_TEAM = 7TM8C6252Z;
 				HEADER_SEARCH_PATHS = (
@@ -1985,7 +1985,7 @@
 			isa = XCBuildConfiguration;
 			buildSettings = {
 				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
-				CURRENT_PROJECT_VERSION = 4;
+				CURRENT_PROJECT_VERSION = 11;
 				HEADER_SEARCH_PATHS = (
 					"$(inherited)",
 					"$(SRCROOT)/../node_modules/react-native-airplay-btn/ios",
diff --git a/apolloschurchapp/ios/apolloschurchapp/AppDelegate.h b/apolloschurchapp/ios/apolloschurchapp/AppDelegate.h
index 4b5644f..2726d5e 100644
--- a/apolloschurchapp/ios/apolloschurchapp/AppDelegate.h
+++ b/apolloschurchapp/ios/apolloschurchapp/AppDelegate.h
@@ -5,9 +5,10 @@
  * LICENSE file in the root directory of this source tree.
  */
 
+#import <React/RCTBridgeDelegate.h>
 #import <UIKit/UIKit.h>
 
-@interface AppDelegate : UIResponder <UIApplicationDelegate>
+@interface AppDelegate : UIResponder <UIApplicationDelegate, RCTBridgeDelegate>
 
 @property (nonatomic, strong) UIWindow *window;
 
diff --git a/apolloschurchapp/ios/apolloschurchapp/AppDelegate.m b/apolloschurchapp/ios/apolloschurchapp/AppDelegate.m
index af4f8d1..b9f7b95 100644
--- a/apolloschurchapp/ios/apolloschurchapp/AppDelegate.m
+++ b/apolloschurchapp/ios/apolloschurchapp/AppDelegate.m
@@ -7,6 +7,8 @@
 
 #import "AppDelegate.h"
 
+
+#import <React/RCTBridge.h>
 #import <React/RCTBundleURLProvider.h>
 #import <React/RCTRootView.h>
 #import "RNSplashScreen.h"
@@ -34,14 +36,12 @@ - (BOOL)application:(UIApplication *)application continueUserActivity:(NSUserAct
 
 - (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions
 {
-  NSURL *jsCodeLocation;
 
-  jsCodeLocation = [[RCTBundleURLProvider sharedSettings] jsBundleURLForBundleRoot:@"index" fallbackResource:nil];
+  RCTBridge *bridge = [[RCTBridge alloc] initWithDelegate:self launchOptions:launchOptions];
+  RCTRootView *rootView = [[RCTRootView alloc] initWithBridge:bridge
+                                                   moduleName:@"apolloschurchapp"
+                                            initialProperties:nil];
 
-  RCTRootView *rootView = [[RCTRootView alloc] initWithBundleURL:jsCodeLocation
-                                                      moduleName:@"apolloschurchapp"
-                                               initialProperties:nil
-                                                   launchOptions:launchOptions];
   rootView.backgroundColor = [[UIColor alloc] initWithRed:1.0f green:1.0f blue:1.0f alpha:1];
 
   self.window = [[UIWindow alloc] initWithFrame:[UIScreen mainScreen].bounds];
@@ -54,4 +54,13 @@ - (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(
   return YES;
 }
 
+- (NSURL *)sourceURLForBridge:(RCTBridge *)bridge
+{
+#if DEBUG
+  return [[RCTBundleURLProvider sharedSettings] jsBundleURLForBundleRoot:@"index" fallbackResource:nil];
+#else
+  return [[NSBundle mainBundle] URLForResource:@"main" withExtension:@"jsbundle"];
+#endif
+}
+
 @end
diff --git a/apolloschurchapp/ios/apolloschurchapp/Info.plist b/apolloschurchapp/ios/apolloschurchapp/Info.plist
index 4129214..af36c51 100644
--- a/apolloschurchapp/ios/apolloschurchapp/Info.plist
+++ b/apolloschurchapp/ios/apolloschurchapp/Info.plist
@@ -17,7 +17,7 @@
 	<key>CFBundlePackageType</key>
 	<string>APPL</string>
 	<key>CFBundleShortVersionString</key>
-	<string>0.8.3</string>
+	<string>1.1.0</string>
 	<key>CFBundleSignature</key>
 	<string>????</string>
 	<key>CFBundleURLTypes</key>
@@ -30,7 +30,7 @@
 		</dict>
 	</array>
 	<key>CFBundleVersion</key>
-	<string>9</string>
+	<string>16</string>
 	<key>ITSAppUsesNonExemptEncryption</key>
 	<false />
 	<key>LSRequiresIPhoneOS</key>
diff --git a/apolloschurchapp/ios/apolloschurchappTests/Info.plist b/apolloschurchapp/ios/apolloschurchappTests/Info.plist
index 11b84fb..8451494 100644
--- a/apolloschurchapp/ios/apolloschurchappTests/Info.plist
+++ b/apolloschurchapp/ios/apolloschurchappTests/Info.plist
@@ -15,10 +15,10 @@
 	<key>CFBundlePackageType</key>
 	<string>BNDL</string>
 	<key>CFBundleShortVersionString</key>
-	<string>0.8.3</string>
+	<string>1.1.0-beta.0</string>
 	<key>CFBundleSignature</key>
 	<string>????</string>
 	<key>CFBundleVersion</key>
-	<string>8</string>
+	<string>15</string>
 </dict>
 </plist>
diff --git a/apolloschurchapp/jest.setup.js b/apolloschurchapp/jest.setup.js
index fcdc84a..d15cab6 100644
--- a/apolloschurchapp/jest.setup.js
+++ b/apolloschurchapp/jest.setup.js
@@ -1,3 +1,4 @@
+import React from 'react';
 // We ran into an issue where SafeAreaView would break jest tests.
 jest.mock('react-navigation', () => {
   const ActualNavigation = require.requireActual('react-navigation');
@@ -7,9 +8,19 @@ jest.mock('react-navigation', () => {
   };
 });
 
+jest.mock('react-native-music-control', () => ({
+  enableBackgroundMode: jest.fn(),
+  enableControl: jest.fn(),
+  on: jest.fn(),
+  setNowPlaying: jest.fn(),
+  STATE_PLAYING: false,
+  STATE_PAUSED: true,
+}));
+
 jest.mock('react-native-config', () => ({
   ONE_SIGNAL_KEY: 'doesntmatter',
 }));
+
 jest.mock('Animated', () => {
   const ActualAnimated = require.requireActual('Animated');
   return {
@@ -36,22 +47,6 @@ jest.mock('react-native-safari-view', () => ({
   show: jest.fn(),
 }));
 
-jest.mock('react-native-onesignal', () => ({
-  getPermissionSubscriptionState: (callback) =>
-    callback({ notificationsEnabled: true, subscriptionEnabled: true }),
-  promptForPushNotificationsWithUserResponse: (callback) => callback(true),
-  init: jest.fn(),
-  addEventListener: jest.fn(),
-  configure: jest.fn(),
-}));
-
-jest.mock('react-native-music-control', () => ({
-  enableBackgroundMode: jest.fn(),
-  enableControl: jest.fn(),
-  on: jest.fn(),
-  setNowPlaying: jest.fn(),
-}));
-
 jest.mock('react-native-device-info', () => ({
   getUniqueID: () => 'id-123',
   getSystemVersion: () => 'sys-version-123',
@@ -70,6 +65,19 @@ jest.mock('@apollosproject/ui-analytics', () => ({
   track: () => '',
   AnalyticsConsumer: ({ children }) => children({ test: jest.fn() }),
   AnalyticsProvider: ({ children }) => children,
+  withTrackOnPress: (Component) => (props) => <Component {...props} />,
+}));
+
+jest.mock('@apollosproject/ui-notifications', () => ({
+  NotificationsProvider: ({ children }) => children,
+}));
+
+jest.mock('@apollosproject/ui-media-player', () => ({
+  MediaPlayerSpacer: ({ children }) => children,
+  MediaPlayer: () => 'MediaPlayer',
+  MediaPlayerProvider: ({ children }) => children,
+  playVideoMutation: 'mutation { playVideo }',
+  withTabBarMediaSpacer: () => ({ children }) => children,
 }));
 
 jest.mock('react-native-video', () => 'Video');
diff --git a/apolloschurchapp/metro.config.js b/apolloschurchapp/metro.config.js
new file mode 100644
index 0000000..9b60d7a
--- /dev/null
+++ b/apolloschurchapp/metro.config.js
@@ -0,0 +1,97 @@
+/**
+ * Metro configuration for React Native
+ * https://github.com/facebook/react-native
+ *
+ * @format
+ */
+
+const path = require('path');
+const blacklist = require('metro-config/src/defaults/blacklist');
+
+const flatten = (array) =>
+  array.reduce((accum, curr) => curr.concat(accum), []);
+
+const localDeps = [
+  path.resolve('..', 'apollos-ui-kit'),
+  path.resolve('..', 'apollos-ui-passes'),
+  path.resolve('..', 'apollos-ui-auth'),
+  path.resolve('..', 'apollos-ui-htmlview'),
+  path.resolve('..', 'apollos-ui-analytics'),
+  path.resolve('..', 'apollos-ui-storybook'),
+  path.resolve('..', 'apollos-ui-onboarding'),
+  path.resolve('..', 'apollos-ui-media-player'),
+  path.resolve('..', 'apollos-ui-scripture'),
+  path.resolve('..', 'apollos-ui-notifications'),
+];
+
+const sharedNativeModules = [
+  'react-native-linear-gradient',
+  'react-native-svg',
+  'react-native-onesignal',
+  'react-native-music-control',
+  'react-native-video',
+  'react-native-video-controls',
+  'react-native-airplay-btn',
+];
+
+module.exports = {
+  resolver: {
+    extraNodeModules: {
+      'react-native': path.resolve('.', 'node_modules/react-native'),
+      ...sharedNativeModules.reduce(
+        (accum, curr) => ({
+          ...accum,
+          [curr]: path.resolve('.', `node_modules/${curr}`),
+        }),
+        {}
+      ),
+      'react-native-svg': path.resolve('.', 'node_modules/react-native-svg'),
+    },
+    blacklistRE: blacklist([
+      ...localDeps.map(
+        (depPath) => new RegExp(`${depPath}/node_modules/react-native/.*`)
+      ),
+      ...flatten(
+        localDeps.map((depPath) =>
+          sharedNativeModules.map(
+            (moduleName) =>
+              new RegExp(`${depPath}/node_modules/${moduleName}/.*`)
+          )
+        )
+      ),
+      ...sharedNativeModules.map(
+        (moduleName) =>
+          new RegExp(`${path.resolve(`../../node_modules/${moduleName}`)}/.*`)
+      ),
+      ...localDeps.map(
+        (depPath) => new RegExp(`${depPath}/node_modules/react-native-svg/.*`)
+      ),
+      ...localDeps.map(
+        (depPath) =>
+          new RegExp(`${depPath}/node_modules/.*/node_modules/react-native/.*`)
+      ),
+      new RegExp(
+        `${path.resolve('.', 'node_modules')}/.*/node_modules/react-native/.*`
+      ),
+      new RegExp(
+        `${path.resolve('..', '..', 'node_modules', 'react-native')}/.*`
+      ),
+      new RegExp(
+        `${path.resolve(
+          '..',
+          '..',
+          'node_modules'
+        )}/.*/node_modules/react-native/.*`
+      ),
+    ]),
+  },
+  watchFolders: [...localDeps, path.resolve('..', '..', 'node_modules')],
+  transformer: {
+    getTransformOptions: async () => ({
+      transform: {
+        experimentalImportSupport: false,
+        inlineRequires: false,
+      },
+    }),
+  },
+};
diff --git a/apolloschurchapp/package.json b/apolloschurchapp/package.json
index ab1938f..ebafef9 100644
--- a/apolloschurchapp/package.json
+++ b/apolloschurchapp/package.json
@@ -1,22 +1,21 @@
 {
   "name": "apolloschurchapp",
-  "version": "0.8.4",
+  "version": "1.1.0-beta.0",
   "private": true,
   "devDependencies": {
-    "@storybook/addon-actions": "4.1.16",
-    "@storybook/addon-links": "4.1.16",
-    "@storybook/addons": "4.1.16",
-    "@storybook/react-native": "4.1.1",
+    "@apollosproject/ui-storybook": "^0.8.6",
     "codecov": "3.0.2",
     "get-dev-paths": "^0.1.0",
-    "jest": "23.6.0",
+    "jest": "^24.8.0",
     "jest-react-native": "18.0.0",
+    "metro-react-native-babel-preset": "^0.54.0",
     "nodemon": "1.18.7",
+    "prettier": "1.14.2",
     "prop-types": "15.6.1",
     "react-dom": "16.6.3",
     "react-native-storybook-loader": "1.8.0",
     "react-native-version": "2.6.2",
-    "react-test-renderer": "16.6.1",
+    "react-test-renderer": "16.8.3",
     "waait": "1.0.2"
   },
   "engines": {
@@ -30,13 +29,15 @@
     "codecov": "cat ./coverage/lcov.info | codecov",
     "fixlint": "eslint ./src --fix",
     "ios": "react-native run-ios --simulator=\"iPhone X\"",
+    "storybook:enable": "sed -i '' 's/STORYBOOK=false/STORYBOOK=true/g' .env",
+    "storybook:disable": "sed -i '' 's/STORYBOOK=true/STORYBOOK=false/g' .env",
+    "generate-stories": "rnstl --searchDir ./src --pattern **/*.stories.js",
     "lint": "eslint ./src --ext .js",
+    "version": "node ../../scripts/update-apollos-version.js && git add apollos.json",
     "postversion": "react-native-version --never-amend --android android/app/build.gradle --ios ios/",
-    "prestart": "node ./scripts/get-introspection-data.js",
+    "prestart": "lerna run generate-stories & node ./scripts/get-introspection-data.js",
     "start": "react-native start",
-    "storybook": "rnstl --searchDir ../ --pattern \"apollos*/src/**/*.stories.js\" && storybook start -p 7007  | react-native start --projectRoot $PWD/storybook",
-    "test": "jest",
-    "release": "standard-version --release-as minor"
+    "test": "jest"
   },
   "jest": {
     "preset": "react-native",
@@ -55,28 +56,28 @@
     ],
     "setupFiles": [
       "./jest.setup.js"
-    ],
-    "reporters": [
-      "<rootDir>/../../scripts/fingers-crossed-reporter.js"
     ]
   },
   "dependencies": {
-    "@apollosproject/ui-analytics": "^0.8.4",
-    "@apollosproject/ui-auth": "^0.8.4",
-    "@apollosproject/ui-kit": "^0.8.4",
-    "@apollosproject/ui-passes": "^0.8.4",
+    "@apollosproject/ui-analytics": "^1.0.0",
+    "@apollosproject/ui-auth": "^1.0.0",
+    "@apollosproject/ui-htmlview": "^1.1.0-beta.0",
+    "@apollosproject/ui-kit": "^1.1.0-beta.0",
+    "@apollosproject/ui-media-player": "^1.1.0-beta.0",
+    "@apollosproject/ui-notifications": "^1.0.0",
+    "@apollosproject/ui-onboarding": "^1.1.0-beta.0",
+    "@apollosproject/ui-passes": "^1.1.0-beta.0",
+    "@apollosproject/ui-scripture": "^1.1.0-beta.0",
+    "@apollosproject/ui-storybook": "^1.1.0-beta.0",
     "apollo-cache-inmemory": "1.5.1",
     "apollo-cache-persist": "0.1.1",
     "apollo-client": "2.5.1",
     "apollo-link": "1.2.8",
-    "apollo-link-context": "1.0.14",
     "apollo-link-http": "1.5.11",
     "apollo-link-schema": "1.1.6",
     "apollo-upload-client": "9.0.0",
-    "buffer": "^5.2.1",
     "color": "3.0.0",
     "dotenv": "^6.2.0",
-    "entities": "1.1.1",
     "events": "^3.0.0",
     "formik": "^1.5.2",
     "graphql": "0.13.2",
@@ -84,41 +85,33 @@
     "graphql-tools": "3.1.1",
     "lodash": "^4.17.11",
     "memoize-one": "4.0.0",
-    "metro-react-native-babel-preset": "^0.53.1",
     "moment": "2.22.2",
     "node-fetch": "2.2.0",
-    "numeral": "^2.0.6",
-    "prettier": "1.14.2",
-    "querystring": "^0.2.0",
-    "react": "16.6.3",
-    "react-apollo": "2.5.1",
-    "react-native": "0.58.5",
+    "react": "16.8.3",
+    "react-apollo": "2.5.5",
+    "react-native": "0.59.8",
     "react-native-airplay-btn": "^1.0.6",
     "react-native-config": "^0.11.7",
-    "react-native-device-info": "0.22.5",
+    "react-native-device-info": "^2.1.2",
     "react-native-image-picker": "0.28.0",
-    "react-native-keyboard-aware-scroll-view": "0.7.0",
-    "react-native-linear-gradient": "2.5.3",
+    "react-native-linear-gradient": "^2.5.4",
     "react-native-maps": "^0.24.2",
     "react-native-music-control": "^0.10.2",
-    "react-native-onesignal": "3.2.7",
+    "react-native-onesignal": "3.2.14",
     "react-native-passkit-wallet": "^0.1.4",
     "react-native-safari-view": "2.1.0",
     "react-native-safe-area-view": "0.13.1",
-    "react-native-screens": "^1.0.0-alpha.22",
+    "react-native-screens": "^1.0.0-alpha.11",
     "react-native-splash-screen": "^3.1.1",
-    "react-native-svg": "9.2.4",
-    "react-native-swiper": "^1.5.14",
+    "react-native-svg": "^9.4.0",
     "react-native-video": "^4.4.1",
     "react-native-video-controls": "2.2.3",
     "react-native-webview": "^5.2.0",
-    "react-navigation": "2.14.0",
+    "react-navigation": "2.18.3",
     "react-navigation-tabs": "0.6.0",
     "recompose": "^0.30.0",
     "rn-fetch-blob": "^0.10.15",
-    "rn-placeholder": "1.2.0",
-    "stream": "0.0.2",
-    "url": "^0.11.0",
+    "stream": "^0.0.2",
     "yup": "0.26.6"
   },
   "rnpm": {
diff --git a/apolloschurchapp/polyfill.js b/apolloschurchapp/polyfill.js
new file mode 100644
index 0000000..e2e1ede
--- /dev/null
+++ b/apolloschurchapp/polyfill.js
@@ -0,0 +1,10 @@
+// this can be removed when we upgrade to react-native 59
+
+// symbol polyfills
+global.Symbol = require('core-js/es6/symbol');
+require('core-js/fn/symbol/iterator');
+
+// collection fn polyfills
+require('core-js/fn/map');
+require('core-js/fn/set');
+require('core-js/fn/array/find');
diff --git a/apolloschurchapp/rn-cli.config.js b/apolloschurchapp/rn-cli.config.js
deleted file mode 100644
index a604ef0..0000000
--- a/apolloschurchapp/rn-cli.config.js
+++ /dev/null
@@ -1,52 +0,0 @@
-const path = require('path');
-const blacklist = require('metro-config/src/defaults/blacklist');
-
-const localDeps = [
-  path.resolve('..', 'apollos-ui-kit'),
-  path.resolve('..', 'apollos-ui-passes'),
-  path.resolve('..', 'apollos-ui-auth'),
-  path.resolve('..', 'apollos-ui-htmlview'),
-  path.resolve('..', 'apollos-ui-analytics'),
-];
-
-module.exports = {
-  resolver: {
-    extraNodeModules: {
-      'react-native': path.resolve('.', 'node_modules/react-native'),
-      'react-native-linear-gradient': path.resolve(
-        '.',
-        'node_modules/react-native-linear-gradient'
-      ),
-    },
-    blacklistRE: blacklist([
-      ...localDeps.map(
-        (depPath) => new RegExp(`${depPath}/node_modules/react-native/.*`)
-      ),
-      ...localDeps.map(
-        (depPath) =>
-          new RegExp(`${depPath}/node_modules/react-native-linear-gradient/.*`)
-      ),
-      ...localDeps.map(
-        (depPath) =>
-          new RegExp(`${depPath}/node_modules/.*/node_modules/react-native/.*`)
-      ),
-      new RegExp(
-        `${path.resolve('.', 'node_modules')}/.*/node_modules/react-native/.*`
-      ),
-      new RegExp(
-        `${path.resolve('..', '..', 'node_modules', 'react-native')}/.*`
-      ),
-      new RegExp(
-        `${path.resolve(
-          '..',
-          '..',
-          'node_modules'
-        )}/.*/node_modules/react-native/.*`
-      ),
-      new RegExp(
-        `${path.resolve('../../node_modules/react-native-linear-gradient')}/.*`
-      ),
-    ]),
-  },
-  watchFolders: [...localDeps, path.resolve('..', '..', 'node_modules')],
-};
diff --git a/apolloschurchapp/src/Providers.js b/apolloschurchapp/src/Providers.js
index 2f9bd73..9b7e84f 100644
--- a/apolloschurchapp/src/Providers.js
+++ b/apolloschurchapp/src/Providers.js
@@ -1,23 +1,36 @@
 import React from 'react';
+import Config from 'react-native-config';
 import { Providers } from '@apollosproject/ui-kit';
 import { AuthProvider } from '@apollosproject/ui-auth';
 import { AnalyticsProvider } from '@apollosproject/ui-analytics';
+import { MediaPlayerProvider } from '@apollosproject/ui-media-player';
+import { NotificationsProvider } from '@apollosproject/ui-notifications';
+
 import NavigationService from './NavigationService';
-import { NotificationsManager } from './notifications';
 import ClientProvider from './client';
+import customTheme, { customIcons } from './theme';
 
 const AppProviders = (props) => (
   <ClientProvider {...props}>
-    <NotificationsManager>
+    <NotificationsProvider
+      oneSignalKey={Config.ONE_SIGNAL_KEY}
+      navigate={NavigationService.navigate}
+    >
       <AuthProvider
         navigateToAuth={() => NavigationService.navigate('Auth')}
         closeAuth={() => NavigationService.navigate('Onboarding')}
       >
-        <AnalyticsProvider>
-          <Providers {...props} />
-        </AnalyticsProvider>
+        <MediaPlayerProvider>
+          <AnalyticsProvider>
+            <Providers
+              themeInput={customTheme}
+              iconInput={customIcons}
+              {...props}
+            />
+          </AnalyticsProvider>
+        </MediaPlayerProvider>
       </AuthProvider>
-    </NotificationsManager>
+    </NotificationsProvider>
   </ClientProvider>
 );
 
diff --git a/apolloschurchapp/src/client/cache.js b/apolloschurchapp/src/client/cache.js
index b4d1609..5b4bfd5 100644
--- a/apolloschurchapp/src/client/cache.js
+++ b/apolloschurchapp/src/client/cache.js
@@ -3,9 +3,9 @@ import {
   IntrospectionFragmentMatcher,
 } from 'apollo-cache-inmemory';
 import { AsyncStorage } from 'react-native';
-import DeviceInfo from 'react-native-device-info';
 import { CachePersistor } from 'apollo-cache-persist';
 import gql from 'graphql-tag';
+import Config from 'react-native-config';
 import introspectionQueryResultData from './fragmentTypes.json';
 
 export const CACHE_LOADED = gql`
@@ -20,10 +20,10 @@ export const MARK_CACHE_LOADED = gql`
   }
 `;
 
-// We reset our apollo cache on every build:
-// TODO: this could be optimized by only reseting cache when our schema or client-side schema changes,
-// however there is risk for missing changes and breaking things in production, so this is safer.
-const SCHEMA_VERSION = `${DeviceInfo.getVersion()}${DeviceInfo.getBuildNumber()}`; // Must be a string.
+// We reset our apollo cache based an env value and static number.
+// In the future, we should also look at resetting the app when an error occurs related to Apollo.
+// You can also increment this number to force a manual reset of the cache.
+const SCHEMA_VERSION = `${Config.SCHEMA_VERSION}-1`; // Must be a string.
 const SCHEMA_VERSION_KEY = 'apollo-schema-version';
 
 const nodeCacheRedirect = (_, { id }, { getCacheKey }) =>
@@ -45,13 +45,26 @@ const persistor = new CachePersistor({
   storage: AsyncStorage,
 });
 
+// 1. If we are on the same schema version, restore the cache.
+// 2. If that fails, purge the cache and update the stored version so we don't try and restore agian
+// 3. If we are on a new schema version, purge the cache.
+// 4. If purging or setting AsyncStorage keys fails (or anything else) we capture the error and log it.
+
 export const ensureCacheHydration = (async () => {
+  // We wrap everything in try/catch because crashing on a cache restore is bad
+  // 😬
   try {
     const currentVersion = await AsyncStorage.getItem(SCHEMA_VERSION_KEY);
     if (currentVersion === SCHEMA_VERSION) {
       // If the current version matches the latest version,
       // we're good to go and can restore the cache.
-      await persistor.restore();
+      try {
+        await persistor.restore();
+      } catch (restoreError) {
+        // If the restore fails, we want to do our best to purge the cache.
+        await persistor.purge();
+        console.error('Error restoring cache, purging the cache', restoreError);
+      }
     } else {
       // Otherwise, we'll want to purge the outdated persisted cache
       // and mark ourselves as having updated to the latest version.
@@ -59,7 +72,7 @@ export const ensureCacheHydration = (async () => {
       await AsyncStorage.setItem(SCHEMA_VERSION_KEY, SCHEMA_VERSION);
     }
   } catch (error) {
-    console.error('Error restoring Apollo cache', error);
+    console.error('Error restoring or purging Apollo cache', error);
   }
 })();
 
diff --git a/apolloschurchapp/src/client/fragmentTypes.json b/apolloschurchapp/src/client/fragmentTypes.json
index 14cf82b..81691e8 100644
--- a/apolloschurchapp/src/client/fragmentTypes.json
+++ b/apolloschurchapp/src/client/fragmentTypes.json
@@ -1 +1 @@
-{"__schema":{"types":[{"kind":"INTERFACE","name":"Node","possibleTypes":[{"name":"ContentChannel"},{"name":"Person"},{"name":"Campus"},{"name":"Pass"},{"name":"UniversalContentItem"},{"name":"DevotionalContentItem"},{"name":"MediaContentItem"},{"name":"ContentSeriesContentItem"}]},{"kind":"INTERFACE","name":"ContentItem","possibleTypes":[{"name":"UniversalContentItem"},{"name":"DevotionalContentItem"},{"name":"MediaContentItem"},{"name":"ContentSeriesContentItem"}]},{"kind":"INTERFACE","name":"Media","possibleTypes":[{"name":"ImageMedia"},{"name":"VideoMedia"},{"name":"AudioMedia"}]},{"kind":"INTERFACE","name":"MediaSource","possibleTypes":[{"name":"ImageMediaSource"},{"name":"VideoMediaSource"},{"name":"AudioMediaSource"}]},{"kind":"INTERFACE","name":"Sharable","possibleTypes":[{"name":"SharableContentItem"}]}]}}
\ No newline at end of file
+{"__schema":{"types":[{"kind":"INTERFACE","name":"Node","possibleTypes":[{"name":"ContentChannel"},{"name":"Person"},{"name":"Campus"},{"name":"Pass"},{"name":"UniversalContentItem"},{"name":"DevotionalContentItem"},{"name":"MediaContentItem"},{"name":"ContentSeriesContentItem"},{"name":"WeekendContentItem"},{"name":"ActionListFeature"},{"name":"TextFeature"}]},{"kind":"INTERFACE","name":"ContentItem","possibleTypes":[{"name":"UniversalContentItem"},{"name":"DevotionalContentItem"},{"name":"MediaContentItem"},{"name":"ContentSeriesContentItem"},{"name":"WeekendContentItem"}]},{"kind":"INTERFACE","name":"Media","possibleTypes":[{"name":"ImageMedia"},{"name":"VideoMedia"},{"name":"AudioMedia"}]},{"kind":"INTERFACE","name":"MediaSource","possibleTypes":[{"name":"ImageMediaSource"},{"name":"VideoMediaSource"},{"name":"AudioMediaSource"}]},{"kind":"INTERFACE","name":"Sharable","possibleTypes":[{"name":"SharableContentItem"}]},{"kind":"INTERFACE","name":"Feature","possibleTypes":[{"name":"ActionListFeature"},{"name":"TextFeature"}]}]}}
\ No newline at end of file
diff --git a/apolloschurchapp/src/content-feed/content-feed.tests.js b/apolloschurchapp/src/content-feed/content-feed.tests.js
index 544d818..2f7fd1b 100644
--- a/apolloschurchapp/src/content-feed/content-feed.tests.js
+++ b/apolloschurchapp/src/content-feed/content-feed.tests.js
@@ -3,7 +3,7 @@ import renderer from 'react-test-renderer';
 
 import Providers from 'apolloschurchapp/src/Providers';
 
-import getContentFeed from './getContentFeed';
+import GET_CONTENT_FEED from './getContentFeed';
 
 import ContentFeed from './index';
 
@@ -11,7 +11,7 @@ describe('content feed query component', () => {
   it('renders a feedview after successful query', () => {
     const mock = {
       request: {
-        query: getContentFeed,
+        query: GET_CONTENT_FEED,
       },
       result: {
         data: {
diff --git a/apolloschurchapp/src/content-feed/getContentFeed.js b/apolloschurchapp/src/content-feed/getContentFeed.js
index 2e47d19..40758cb 100644
--- a/apolloschurchapp/src/content-feed/getContentFeed.js
+++ b/apolloschurchapp/src/content-feed/getContentFeed.js
@@ -1,13 +1,16 @@
 import gql from 'graphql-tag';
 
-import { largeCardFragment } from 'apolloschurchapp/src/ui/ContentCardConnected';
-import { contentItemFragment } from '../content-single/getContentItem';
+import { LARGE_CARD_FRAGMENT } from 'apolloschurchapp/src/ui/ContentCardConnected';
+import { CONTENT_ITEM_FRAGMENT } from '../content-single/getContentItem';
 
 export default gql`
-  query getContentFeed($itemId: ID!) {
+  query getContentFeed($itemId: ID!, $after: String, $first: Int) {
     node(id: $itemId) {
       ... on ContentChannel {
-        childContentItemsConnection {
+        childContentItemsConnection(after: $after, first: $first) {
+          pageInfo {
+            endCursor
+          }
           edges {
             node {
               ...contentItemFragment
@@ -18,6 +21,6 @@ export default gql`
       }
     }
   }
-  ${contentItemFragment}
-  ${largeCardFragment}
+  ${CONTENT_ITEM_FRAGMENT}
+  ${LARGE_CARD_FRAGMENT}
 `;
diff --git a/apolloschurchapp/src/content-feed/index.js b/apolloschurchapp/src/content-feed/index.js
index 8662d8a..8443086 100644
--- a/apolloschurchapp/src/content-feed/index.js
+++ b/apolloschurchapp/src/content-feed/index.js
@@ -6,8 +6,9 @@ import PropTypes from 'prop-types';
 import { BackgroundView, FeedView } from '@apollosproject/ui-kit';
 
 import ContentCardConnected from 'apolloschurchapp/src/ui/ContentCardConnected';
+import fetchMoreResolver from 'apolloschurchapp/src/utils/fetchMoreResolver';
 
-import getContentFeed from './getContentFeed';
+import GET_CONTENT_FEED from './getContentFeed';
 /**
  * This is where the component description lives
  * A FeedView wrapped in a query to pull content data.
@@ -46,11 +47,11 @@ class ContentFeed extends PureComponent {
     return (
       <BackgroundView>
         <Query
-          query={getContentFeed}
+          query={GET_CONTENT_FEED}
           variables={{ itemId }}
           fetchPolicy="cache-and-network"
         >
-          {({ loading, error, data, refetch }) => (
+          {({ loading, error, data, refetch, fetchMore, variables }) => (
             <FeedView
               ListItemComponent={ContentCardConnected}
               content={get(
@@ -58,6 +59,12 @@ class ContentFeed extends PureComponent {
                 'node.childContentItemsConnection.edges',
                 []
               ).map((edge) => edge.node)}
+              fetchMore={fetchMoreResolver({
+                collectionName: 'node.childContentItemsConnection',
+                fetchMore,
+                variables,
+                data,
+              })}
               isLoading={loading}
               error={error}
               refetch={refetch}
diff --git a/apolloschurchapp/src/content-single/ActionContainer/index.js b/apolloschurchapp/src/content-single/ActionContainer/index.js
index e1d6cb1..c6d8092 100644
--- a/apolloschurchapp/src/content-single/ActionContainer/index.js
+++ b/apolloschurchapp/src/content-single/ActionContainer/index.js
@@ -1,17 +1,11 @@
 import React from 'react';
-import { Platform } from 'react-native';
-import SafeAreaView from 'react-native-safe-area-view';
+import { Platform, View } from 'react-native';
 import PropTypes from 'prop-types';
-import { Query } from 'react-apollo';
-import { get } from 'lodash';
-
-import Share from 'apolloschurchapp/src/ui/Share';
+import ShareButton from 'apolloschurchapp/src/ui/ShareButton';
 
 import { SideBySideView, styled } from '@apollosproject/ui-kit';
 import LikeButton from 'apolloschurchapp/src/ui/LikeButton';
-import { MediaPlayerSpacer } from 'apolloschurchapp/src/ui/MediaPlayer';
-
-import getShareContent from './getShareContent';
+import { MediaPlayerSpacer } from '@apollosproject/ui-media-player';
 
 const PositioningView = styled(({ theme }) => ({
   justifyContent: 'space-around',
@@ -22,21 +16,14 @@ const PositioningView = styled(({ theme }) => ({
 const Container = styled(({ theme }) => ({
   backgroundColor: theme.colors.paper,
   ...Platform.select(theme.shadows.default),
-}))(SafeAreaView);
+}))(View);
 
 const ActionContainer = ({ itemId }) => (
   <Container>
     <MediaPlayerSpacer>
       <PositioningView>
         <LikeButton itemId={itemId} />
-        <Query query={getShareContent} variables={{ itemId }}>
-          {({ data: { node } = {}, error, loading }) => {
-            const sharing = get(node, 'sharing');
-            return loading || error || !sharing ? null : (
-              <Share content={sharing} />
-            );
-          }}
-        </Query>
+        <ShareButton itemId={itemId} />
       </PositioningView>
     </MediaPlayerSpacer>
   </Container>
diff --git a/apolloschurchapp/src/content-single/ContentSingle.js b/apolloschurchapp/src/content-single/ContentSingle.js
index eaaf244..8bed0fc 100644
--- a/apolloschurchapp/src/content-single/ContentSingle.js
+++ b/apolloschurchapp/src/content-single/ContentSingle.js
@@ -8,7 +8,7 @@ import { ErrorCard, ThemeMixin } from '@apollosproject/ui-kit';
 import { TrackEventWhenLoaded } from '@apollosproject/ui-analytics';
 
 import ActionContainer from './ActionContainer';
-import getContentItem from './getContentItem';
+import GET_CONTENT_ITEM from './getContentItem';
 
 import DevotionalContentItem from './DevotionalContentItem';
 import UniversalContentItem from './UniversalContentItem';
@@ -25,6 +25,8 @@ class ContentSingle extends PureComponent {
 
   static navigationOptions = {
     header: NavigationHeader,
+    headerTransparent: true,
+    headerMode: 'float',
   };
 
   get itemId() {
@@ -93,7 +95,7 @@ class ContentSingle extends PureComponent {
 
   render() {
     return (
-      <Query query={getContentItem} variables={this.queryVariables}>
+      <Query query={GET_CONTENT_ITEM} variables={this.queryVariables}>
         {this.renderWithData}
       </Query>
     );
diff --git a/apolloschurchapp/src/content-single/DevotionalContentItem/ContentTab.js b/apolloschurchapp/src/content-single/DevotionalContentItem/ContentTab.js
index 9a4b521..426feb3 100644
--- a/apolloschurchapp/src/content-single/DevotionalContentItem/ContentTab.js
+++ b/apolloschurchapp/src/content-single/DevotionalContentItem/ContentTab.js
@@ -2,7 +2,7 @@ import React from 'react';
 import { ScrollView } from 'react-native';
 import PropTypes from 'prop-types';
 import { PaddedView, H2, styled } from '@apollosproject/ui-kit';
-import { ScriptureList } from 'apolloschurchapp/src/ui/Scripture';
+import { ScriptureList } from '@apollosproject/ui-scripture';
 import HorizontalContentFeed from '../HorizontalContentFeed';
 import HTMLContent from '../HTMLContent';
 
diff --git a/apolloschurchapp/src/content-single/DevotionalContentItem/Devotional.stories.js b/apolloschurchapp/src/content-single/DevotionalContentItem/Devotional.stories.js
index 109a669..8bf3ffd 100644
--- a/apolloschurchapp/src/content-single/DevotionalContentItem/Devotional.stories.js
+++ b/apolloschurchapp/src/content-single/DevotionalContentItem/Devotional.stories.js
@@ -1,60 +1,62 @@
-import React from 'react';
-import { storiesOf } from '@storybook/react-native';
-
-import Devotional from '.';
-
-const scripture = [
-  {
-    id: '1CO.15.57',
-    reference: '1 Corinthians 15:57',
-    html:
-      '<p class="p"><span data-number="57" class="v">57</span>But thanks be to God, who gives us the victory through our Lord Jesus Christ. </p>',
-  },
-  {
-    id: 'EXO.17.8-EXO.17.15',
-    reference: 'Exodus 17:8-15',
-    html:
-      '<p class="p"><span data-number="8" class="v">8</span>Then Amalek came and fought with Israel in Rephidim. <span data-number="9" class="v">9</span>Moses said to Joshua, “Choose men for us, and go out to fight with Amalek. Tomorrow I will stand on the top of the hill with God’s rod in my hand.” <span data-number="10" class="v">10</span>So Joshua did as Moses had told him, and fought with Amalek; and Moses, Aaron, and Hur went up to the top of the hill. <span data-number="11" class="v">11</span>When Moses held up his hand, Israel prevailed. When he let down his hand, Amalek prevailed. <span data-number="12" class="v">12</span>But Moses’ hands were heavy; so they took a stone, and put it under him, and he sat on it. Aaron and Hur held up his hands, the one on the one side, and the other on the other side. His hands were steady until sunset. <span data-number="13" class="v">13</span>Joshua defeated Amalek and his people with the edge of the sword. <span data-number="14" class="v">14</span>Yahweh said to Moses, “Write this for a memorial in a book, and rehearse it in the ears of Joshua: that I will utterly blot out the memory of Amalek from under the sky.” <span data-number="15" class="v">15</span>Moses built an altar, and called its name “Yahweh our Banner”.</p>',
-  },
-];
-
-const content = {
-  body:
-    '<p>Sometimes God&rsquo;s promises to us involve a fight. We have to fight to keep our focus on Him, fight to move towards the promise we know God has laid on our hearts. We have a real enemy that would love nothing more than to get us sidetracked and doubt God&rsquo;s promises. So we fight saying that we are going to believe God will do what He says He will do, and we keep fighting until we see that promise come to life.</p><p>In Exodus 17:8-15 the nation of Israel, freed from great oppression in Egypt was traveling to the land God promised them. Yet, Israel was fighting, again.&nbsp;<br />&nbsp;<br />As the Israelites were fighting in the valley,&nbsp;Moses was on the hill top lifting his hands in prayer for these great fighters. Israel fought hard, and with the prayers of Moses and the help of his companions, Aaron and Hur, the Amalekites were defeated. Moses knew that it was solely because of the Lord&rsquo;s hand of protection and blessing on the Israelites that they won the battle. &ldquo;Moses built an altar and called it The Lord is my banner&rdquo; (Exodus 17:15).</p><p>In battle opposing nations would fly their own flag on a pole at each of their respective front lines. This was to give their soldiers a feeling of hope and a focal point. This is what God is to us: a banner of encouragement to give us hope and a focal point.</p><blockquote><p>The Lord protects us, covers us with love, and&nbsp;blesses us continually.</p></blockquote><p>The Lord is our banner. He protects us; He covers us with love; He blesses us continually. The Lord gives us hope and a place to focus during the tough fights when the enemy is trying to make us doubt God&rsquo;s promises.&nbsp;</p><p>When was the last time you sat and thanked Jesus for all the ways he is a banner in your life?&nbsp;</p><p>Reflect:</p><ul><li>What is one way the Lord has been your banner?</li><li>How can you focus more today on the Lord and all the things He does for you throughout the day?</li></ul>',
-  route: { jumpTo: () => {} },
-  title: 'God is Our Banner',
-};
-
-const renderItem = () => {};
-
-const loadingStateObject = {
-  node: {
-    id: 'fakeId0',
-    title: '',
-    isLoading: true,
-  },
-};
-
-const stories = storiesOf('Devotional', module);
-
-stories.add('Example', () => (
-  <Devotional
-    body={content.body}
-    title={content.title}
-    isLoading={false}
-    scripture={scripture}
-    renderItem={renderItem}
-    loadingStateObject={loadingStateObject}
-  />
-));
-
-stories.add('isLoading', () => (
-  <Devotional
-    body={content.body}
-    title={content.title}
-    isLoading
-    scripture={scripture}
-    renderItem={renderItem}
-    loadingStateObject={loadingStateObject}
-  />
-));
+// TODO: fix story
+
+// import React from 'react';
+// import { storiesOf } from '@apollosproject/ui-storybook';
+
+// import Devotional from '.';
+
+// const scripture = [
+//   {
+//     id: '1CO.15.57',
+//     reference: '1 Corinthians 15:57',
+//     html:
+//       '<p class="p"><span data-number="57" class="v">57</span>But thanks be to God, who gives us the victory through our Lord Jesus Christ. </p>',
+//   },
+//   {
+//     id: 'EXO.17.8-EXO.17.15',
+//     reference: 'Exodus 17:8-15',
+//     html:
+//       '<p class="p"><span data-number="8" class="v">8</span>Then Amalek came and fought with Israel in Rephidim. <span data-number="9" class="v">9</span>Moses said to Joshua, “Choose men for us, and go out to fight with Amalek. Tomorrow I will stand on the top of the hill with God’s rod in my hand.” <span data-number="10" class="v">10</span>So Joshua did as Moses had told him, and fought with Amalek; and Moses, Aaron, and Hur went up to the top of the hill. <span data-number="11" class="v">11</span>When Moses held up his hand, Israel prevailed. When he let down his hand, Amalek prevailed. <span data-number="12" class="v">12</span>But Moses’ hands were heavy; so they took a stone, and put it under him, and he sat on it. Aaron and Hur held up his hands, the one on the one side, and the other on the other side. His hands were steady until sunset. <span data-number="13" class="v">13</span>Joshua defeated Amalek and his people with the edge of the sword. <span data-number="14" class="v">14</span>Yahweh said to Moses, “Write this for a memorial in a book, and rehearse it in the ears of Joshua: that I will utterly blot out the memory of Amalek from under the sky.” <span data-number="15" class="v">15</span>Moses built an altar, and called its name “Yahweh our Banner”.</p>',
+//   },
+// ];
+
+// const content = {
+//   body:
+//     '<p>Sometimes God&rsquo;s promises to us involve a fight. We have to fight to keep our focus on Him, fight to move towards the promise we know God has laid on our hearts. We have a real enemy that would love nothing more than to get us sidetracked and doubt God&rsquo;s promises. So we fight saying that we are going to believe God will do what He says He will do, and we keep fighting until we see that promise come to life.</p><p>In Exodus 17:8-15 the nation of Israel, freed from great oppression in Egypt was traveling to the land God promised them. Yet, Israel was fighting, again.&nbsp;<br />&nbsp;<br />As the Israelites were fighting in the valley,&nbsp;Moses was on the hill top lifting his hands in prayer for these great fighters. Israel fought hard, and with the prayers of Moses and the help of his companions, Aaron and Hur, the Amalekites were defeated. Moses knew that it was solely because of the Lord&rsquo;s hand of protection and blessing on the Israelites that they won the battle. &ldquo;Moses built an altar and called it The Lord is my banner&rdquo; (Exodus 17:15).</p><p>In battle opposing nations would fly their own flag on a pole at each of their respective front lines. This was to give their soldiers a feeling of hope and a focal point. This is what God is to us: a banner of encouragement to give us hope and a focal point.</p><blockquote><p>The Lord protects us, covers us with love, and&nbsp;blesses us continually.</p></blockquote><p>The Lord is our banner. He protects us; He covers us with love; He blesses us continually. The Lord gives us hope and a place to focus during the tough fights when the enemy is trying to make us doubt God&rsquo;s promises.&nbsp;</p><p>When was the last time you sat and thanked Jesus for all the ways he is a banner in your life?&nbsp;</p><p>Reflect:</p><ul><li>What is one way the Lord has been your banner?</li><li>How can you focus more today on the Lord and all the things He does for you throughout the day?</li></ul>',
+//   route: { jumpTo: () => {} },
+//   title: 'God is Our Banner',
+// };
+
+// const renderItem = () => {};
+
+// const loadingStateObject = {
+//   node: {
+//     id: 'fakeId0',
+//     title: '',
+//     isLoading: true,
+//   },
+// };
+
+// const stories = storiesOf('Devotional', module);
+
+// stories.add('Example', () => (
+//   <Devotional
+//     body={content.body}
+//     title={content.title}
+//     isLoading={false}
+//     scripture={scripture}
+//     renderItem={renderItem}
+//     loadingStateObject={loadingStateObject}
+//   />
+// ));
+
+// stories.add('isLoading', () => (
+//   <Devotional
+//     body={content.body}
+//     title={content.title}
+//     isLoading
+//     scripture={scripture}
+//     renderItem={renderItem}
+//     loadingStateObject={loadingStateObject}
+//   />
+// ));
diff --git a/apolloschurchapp/src/content-single/DevotionalContentItem/Devotional.tests.js b/apolloschurchapp/src/content-single/DevotionalContentItem/Devotional.tests.js
index 59ed7e1..1021514 100644
--- a/apolloschurchapp/src/content-single/DevotionalContentItem/Devotional.tests.js
+++ b/apolloschurchapp/src/content-single/DevotionalContentItem/Devotional.tests.js
@@ -1,9 +1,9 @@
 import React from 'react';
 import renderer from 'react-test-renderer';
-import wait from 'waait';
 import Providers from 'apolloschurchapp/src/Providers';
-import getContentItemContent from '../HTMLContent/getContentItemContent';
-import getScripture from './getScripture';
+import { renderWithApolloData } from 'apolloschurchapp/src/utils/testUtils';
+import GET_CONTENT_ITEM_CONTENT from '../HTMLContent/getContentItemContent';
+import GET_SCRIPTURE from './getScripture';
 import Devotional from '.';
 
 const content = {
@@ -32,7 +32,7 @@ const scriptures = [
 
 const scriptureMock = {
   request: {
-    query: getScripture,
+    query: GET_SCRIPTURE,
     variables: { itemId: '1' },
   },
   result: {
@@ -44,7 +44,7 @@ const scriptureMock = {
 
 const contentItemHTMLMock = {
   request: {
-    query: getContentItemContent,
+    query: GET_CONTENT_ITEM_CONTENT,
     variables: { contentId: '1' },
   },
   result: {
@@ -66,7 +66,7 @@ const navigation = {
 
 describe('the Devotional component', () => {
   it('renders a devotional', async () => {
-    const tree = renderer.create(
+    const tree = await renderWithApolloData(
       <Providers mocks={mocks}>
         <Devotional
           id="1"
@@ -76,16 +76,19 @@ describe('the Devotional component', () => {
         />
       </Providers>
     );
-    await wait(0); // wait for response
     expect(tree).toMatchSnapshot();
   });
   it('renders even with empty scripture array', async () => {
-    const tree = renderer.create(
+    const tree = await renderWithApolloData(
       <Providers mocks={mocks}>
-        <Devotional id="1" content={content} loading navigation={navigation} />
+        <Devotional
+          id="1"
+          content={content}
+          loading={false}
+          navigation={navigation}
+        />
       </Providers>
     );
-    await wait(0); // wait for response
     expect(tree).toMatchSnapshot();
   });
   it('renders a loading state', async () => {
@@ -94,7 +97,6 @@ describe('the Devotional component', () => {
         <Devotional id="1" content={content} loading navigation={navigation} />
       </Providers>
     );
-    await wait(0); // wait for response
     expect(tree).toMatchSnapshot();
   });
 });
diff --git a/apolloschurchapp/src/content-single/DevotionalContentItem/ScriptureTab.js b/apolloschurchapp/src/content-single/DevotionalContentItem/ScriptureTab.js
index 9458010..79ef066 100644
--- a/apolloschurchapp/src/content-single/DevotionalContentItem/ScriptureTab.js
+++ b/apolloschurchapp/src/content-single/DevotionalContentItem/ScriptureTab.js
@@ -2,7 +2,7 @@ import React from 'react';
 import { ScrollView } from 'react-native';
 import PropTypes from 'prop-types';
 import { PaddedView } from '@apollosproject/ui-kit';
-import ScriptureItem from 'apolloschurchapp/src/ui/Scripture';
+import ScriptureItem from '@apollosproject/ui-scripture';
 import HorizontalContentFeed from '../HorizontalContentFeed';
 
 /**
diff --git a/apolloschurchapp/src/content-single/DevotionalContentItem/index.js b/apolloschurchapp/src/content-single/DevotionalContentItem/index.js
index 32cd53c..07b4938 100644
--- a/apolloschurchapp/src/content-single/DevotionalContentItem/index.js
+++ b/apolloschurchapp/src/content-single/DevotionalContentItem/index.js
@@ -13,7 +13,7 @@ import {
 import ContentTab from './ContentTab';
 import ScriptureTab from './ScriptureTab';
 
-import getScripture from './getScripture';
+import GET_SCRIPTURE from './getScripture';
 
 const FlexedSafeAreaView = styled({ flex: 1 })(SafeAreaView);
 
@@ -86,10 +86,11 @@ class DevotionalContentItem extends PureComponent {
     loading,
   }) => {
     if (error) return <ErrorCard error={error} />;
+
     // only include scriptures where the references are not null
-    const validScriptures = scriptures.filter(
-      (scripture) => scripture.reference != null
-    );
+    const validScriptures = scriptures
+      ? scriptures.filter((scripture) => scripture.reference != null)
+      : [];
 
     const hasScripture = loading || validScriptures.length;
     const tabRoutes = [{ title: 'Devotional', key: 'content' }];
@@ -109,7 +110,7 @@ class DevotionalContentItem extends PureComponent {
     return (
       <BackgroundView>
         <FlexedSafeAreaView forceInset={{ top: 'always' }}>
-          <Query query={getScripture} variables={{ itemId: this.props.id }}>
+          <Query query={GET_SCRIPTURE} variables={{ itemId: this.props.id }}>
             {this.renderTabs}
           </Query>
         </FlexedSafeAreaView>
diff --git a/apolloschurchapp/src/content-single/Features/TextFeature.js b/apolloschurchapp/src/content-single/Features/TextFeature.js
new file mode 100644
index 0000000..69fe50e
--- /dev/null
+++ b/apolloschurchapp/src/content-single/Features/TextFeature.js
@@ -0,0 +1,25 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+
+import { ActionCard, BodyText } from '@apollosproject/ui-kit';
+import ShareButton from 'apolloschurchapp/src/ui/ShareButton';
+
+const TextFeature = ({ body, contentId }) => (
+  <ActionCard action={<ShareButton message={body} itemId={contentId} />}>
+    <BodyText>{body}</BodyText>
+  </ActionCard>
+);
+
+TextFeature.propTypes = {
+  body: PropTypes.string.isRequired,
+  contentId: PropTypes.string.isRequired,
+};
+
+export const TEXT_FEATURE_FRAGMENT = `
+fragment TextFeatureFragment on TextFeature {
+  body
+  id
+}
+`;
+
+export default TextFeature;
diff --git a/apolloschurchapp/src/content-single/Features/getContentItemFeatures.js b/apolloschurchapp/src/content-single/Features/getContentItemFeatures.js
new file mode 100644
index 0000000..8521889
--- /dev/null
+++ b/apolloschurchapp/src/content-single/Features/getContentItemFeatures.js
@@ -0,0 +1,24 @@
+import gql from 'graphql-tag';
+import { TEXT_FEATURE_FRAGMENT } from './TextFeature';
+
+const FEATURES_FRAGMENT = `
+  fragment FeaturesFragment on Feature {
+    id
+    ...TextFeatureFragment
+  }
+  ${TEXT_FEATURE_FRAGMENT}
+`;
+
+export default gql`
+  query contentItemFeatures($contentId: ID!) {
+    node(id: $contentId) {
+      id
+      ... on ContentSeriesContentItem {
+        features {
+          ...FeaturesFragment
+        }
+      }
+    }
+  }
+  ${FEATURES_FRAGMENT}
+`;
diff --git a/apolloschurchapp/src/content-single/Features/index.js b/apolloschurchapp/src/content-single/Features/index.js
new file mode 100644
index 0000000..4e7fbf0
--- /dev/null
+++ b/apolloschurchapp/src/content-single/Features/index.js
@@ -0,0 +1,39 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import { Query } from 'react-apollo';
+import { ErrorCard } from '@apollosproject/ui-kit';
+import { get } from 'lodash';
+import TextFeature from './TextFeature';
+
+import GET_CONTENT_ITEM_FEATURES from './getContentItemFeatures';
+
+const FEATURE_MAP = {
+  TextFeature,
+};
+
+const Features = ({ contentId }) => {
+  if (!contentId) return null;
+
+  return (
+    <Query query={GET_CONTENT_ITEM_FEATURES} variables={{ contentId }}>
+      {({ data: { node } = {}, loading, error }) => {
+        if (error) return <ErrorCard error={error} />;
+        if (loading) return null;
+
+        const features = get(node, 'features', []);
+        return features.map(({ __typename, ...feature }) => {
+          const Feature = FEATURE_MAP[__typename];
+          return (
+            <Feature key={feature.id} {...feature} contentId={contentId} />
+          );
+        });
+      }}
+    </Query>
+  );
+};
+
+Features.propTypes = {
+  contentId: PropTypes.string,
+};
+
+export default Features;
diff --git a/apolloschurchapp/src/content-single/HTMLContent/index.js b/apolloschurchapp/src/content-single/HTMLContent/index.js
index 39c62bc..755af41 100644
--- a/apolloschurchapp/src/content-single/HTMLContent/index.js
+++ b/apolloschurchapp/src/content-single/HTMLContent/index.js
@@ -5,13 +5,13 @@ import { Query } from 'react-apollo';
 import HTMLView from '@apollosproject/ui-htmlview';
 import { ErrorCard } from '@apollosproject/ui-kit';
 
-import getContentItemContent from './getContentItemContent';
+import GET_CONTENT_ITEM_CONTENT from './getContentItemContent';
 
 const HTMLContent = ({ contentId }) => {
   if (!contentId) return <HTMLView isLoading />;
 
   return (
-    <Query query={getContentItemContent} variables={{ contentId }}>
+    <Query query={GET_CONTENT_ITEM_CONTENT} variables={{ contentId }}>
       {({ data: { node: { htmlContent } = {} } = {}, loading, error }) => {
         if (error) return <ErrorCard error={error} />;
         return (
diff --git a/apolloschurchapp/src/content-single/HorizontalContentFeed/index.js b/apolloschurchapp/src/content-single/HorizontalContentFeed/index.js
index c0a236f..d9b6aba 100644
--- a/apolloschurchapp/src/content-single/HorizontalContentFeed/index.js
+++ b/apolloschurchapp/src/content-single/HorizontalContentFeed/index.js
@@ -10,7 +10,7 @@ import {
   TouchableScale,
 } from '@apollosproject/ui-kit';
 
-import getHorizontalContent from './getHorizontalContent';
+import GET_HORIZONTAL_CONTENT from './getHorizontalContent';
 
 const loadingStateObject = {
   node: {
@@ -81,7 +81,7 @@ class HorizontalContentFeed extends Component {
 
     return (
       <Query
-        query={getHorizontalContent}
+        query={GET_HORIZONTAL_CONTENT}
         variables={{ itemId: this.props.contentId }}
       >
         {this.renderFeed}
diff --git a/apolloschurchapp/src/content-single/MediaControls/getContentMedia.js b/apolloschurchapp/src/content-single/MediaControls/getContentMedia.js
index 8ab3d1a..3bc3e34 100644
--- a/apolloschurchapp/src/content-single/MediaControls/getContentMedia.js
+++ b/apolloschurchapp/src/content-single/MediaControls/getContentMedia.js
@@ -21,6 +21,17 @@ export default gql`
           }
         }
       }
+      ... on WeekendContentItem {
+        liveStream {
+          isLive
+          media {
+            sources {
+              uri
+            }
+          }
+          webViewUrl
+        }
+      }
     }
   }
 `;
diff --git a/apolloschurchapp/src/content-single/MediaControls/index.js b/apolloschurchapp/src/content-single/MediaControls/index.js
index 994e4b0..c3918f0 100644
--- a/apolloschurchapp/src/content-single/MediaControls/index.js
+++ b/apolloschurchapp/src/content-single/MediaControls/index.js
@@ -4,9 +4,10 @@ import { Query, Mutation } from 'react-apollo';
 import { View } from 'react-native';
 import { get } from 'lodash';
 
-import { playVideoMutation } from 'apolloschurchapp/src/ui/MediaPlayer/mutations';
+import { PLAY_VIDEO } from '@apollosproject/ui-media-player';
 import { Icon, styled, Button } from '@apollosproject/ui-kit';
-import getContentMedia from './getContentMedia';
+import { WebBrowserConsumer } from 'apolloschurchapp/src/ui/WebBrowser';
+import GET_CONTENT_MEDIA from './getContentMedia';
 
 const buttonSizeDifferential = 4;
 
@@ -45,54 +46,116 @@ class MediaControls extends PureComponent {
     contentId: PropTypes.string,
   };
 
+  renderMedia = ({
+    videoSource,
+    coverImageSources,
+    title,
+    parentChannelName,
+  }) => (
+    <Mutation mutation={PLAY_VIDEO}>
+      {(play) => (
+        <Container>
+          <MediaButtonBorder>
+            <MediaButton
+              type="primary"
+              onPress={() =>
+                play({
+                  variables: {
+                    mediaSource: videoSource,
+                    posterSources: coverImageSources,
+                    title,
+                    isVideo: true,
+                    artist: parentChannelName,
+                  },
+                })
+              }
+              useForeground
+            >
+              <MediaIcon name="play" />
+            </MediaButton>
+          </MediaButtonBorder>
+        </Container>
+      )}
+    </Mutation>
+  );
+
+  renderWebView = ({ webViewUrl }) => (
+    <WebBrowserConsumer>
+      {(openUrl) => (
+        <Container>
+          <MediaButtonBorder>
+            <MediaButton
+              type="primary"
+              onPress={() => openUrl(webViewUrl)}
+              useForeground
+            >
+              <MediaIcon name="play" />
+            </MediaButton>
+          </MediaButtonBorder>
+        </Container>
+      )}
+    </WebBrowserConsumer>
+  );
+
   renderControls = ({
     loading,
     error,
     data: {
-      node: { videos, title, parentChannel = {}, coverImage = {} } = {},
+      node: {
+        videos,
+        title,
+        parentChannel = {},
+        coverImage = {},
+        liveStream = {},
+      } = {},
     } = {},
   }) => {
     if (loading || error) return null;
 
+    const isLive = get(liveStream, 'isLive', false);
+    const hasLiveStreamContent = !!(
+      get(liveStream, 'webViewUrl') || get(liveStream, 'media.sources[0]')
+    );
+
     const videoSource = get(videos, '[0].sources[0]', null);
+    const shouldRender = (isLive && hasLiveStreamContent) || videoSource;
+
+    if (!shouldRender) return null;
+
     const coverImageSources = (coverImage && coverImage.sources) || [];
 
-    return (
-      <Mutation mutation={playVideoMutation}>
-        {(play) => (
-          <Container>
-            {videoSource ? (
-              <MediaButtonBorder>
-                <MediaButton
-                  type="primary"
-                  onPress={() =>
-                    play({
-                      variables: {
-                        mediaSource: videoSource,
-                        posterSources: coverImageSources,
-                        title,
-                        isVideo: true,
-                        artist: parentChannel.name,
-                      },
-                    })
-                  }
-                  useForeground
-                >
-                  <MediaIcon name="play" />
-                </MediaButton>
-              </MediaButtonBorder>
-            ) : null}
-          </Container>
-        )}
-      </Mutation>
-    );
+    // Content is live, and we have a livestream media
+    if (isLive && get(liveStream, 'media.sources[0].uri')) {
+      return this.renderMedia({
+        coverImageSources,
+        videoSource: liveStream.media.sources[0],
+        parentChannelName: parentChannel.name,
+        title,
+      });
+    }
+
+    // Content is live, and we don't have a livestream media
+    // but we do have a webview url
+    if (isLive && get(liveStream, 'webViewUrl')) {
+      return this.renderWebView({
+        webViewUrl: liveStream.webViewUrl,
+      });
+    }
+
+    // Default case, normal media.
+    return this.renderMedia({
+      coverImageSources,
+      videoSource,
+      parentChannelName: parentChannel.name,
+      title,
+    });
   };
 
   render() {
     if (!this.props.contentId) return null;
     return (
       <Query
-        query={getContentMedia}
+        query={GET_CONTENT_MEDIA}
         variables={{ contentId: this.props.contentId }}
       >
         {this.renderControls}
diff --git a/apolloschurchapp/src/content-single/NavigationHeader.js b/apolloschurchapp/src/content-single/NavigationHeader.js
index 50a10ff..a2e3204 100644
--- a/apolloschurchapp/src/content-single/NavigationHeader.js
+++ b/apolloschurchapp/src/content-single/NavigationHeader.js
@@ -4,8 +4,7 @@ import { ModalViewHeader } from '@apollosproject/ui-kit';
 
 const NavigationHeader = ({ scene, navigation }) => {
   let onBack = null;
-  if (scene.index > 0) onBack = () => navigation.pop();
-
+  if (scene.index > 0) onBack = () => navigation.goBack();
   const onClose = () => {
     // Since we're dealing with nested navigators, we have to trigger two actions:
     // One action that pops us to the top of the modal's navigation history
@@ -16,11 +15,16 @@ const NavigationHeader = ({ scene, navigation }) => {
     // handling for calling `.pop()` at the top of a nested navigators stack.
     //
     // Because react (or redux?) chains renders, this still results in only one clean animation!
-    navigation.popToTop();
+    //
+    // This "double pop" is only needed when we are already deep in a navigation stack.
+    // In ReactNavigation, we could look at using "goBack('ContentSingle')"
+    if (scene.index > 0) {
+      navigation.popToTop();
+    }
     navigation.pop();
   };
 
-  return <ModalViewHeader onClose={onClose} onBack={onBack} />;
+  return <ModalViewHeader onClose={onClose} onBack={onBack} navigationHeader />;
 };
 
 NavigationHeader.propTypes = {
diff --git a/apolloschurchapp/src/content-single/UniversalContentItem/index.js b/apolloschurchapp/src/content-single/UniversalContentItem/index.js
index 80c9aae..ccc798e 100644
--- a/apolloschurchapp/src/content-single/UniversalContentItem/index.js
+++ b/apolloschurchapp/src/content-single/UniversalContentItem/index.js
@@ -12,6 +12,7 @@ import {
 import MediaControls from '../MediaControls';
 import HTMLContent from '../HTMLContent';
 import HorizontalContentFeed from '../HorizontalContentFeed';
+import Features from '../Features';
 
 const FlexedScrollView = styled({ flex: 1 })(ScrollView);
 
@@ -32,6 +33,7 @@ const UniversalContentItem = ({ content, loading }) => {
             {content.title}
           </H2>
           <HTMLContent contentId={content.id} />
+          <Features contentId={content.id} />
         </PaddedView>
         <HorizontalContentFeed contentId={content.id} />
       </FlexedScrollView>
diff --git a/apolloschurchapp/src/content-single/getContentItem.js b/apolloschurchapp/src/content-single/getContentItem.js
index b4ebc19..55676c9 100644
--- a/apolloschurchapp/src/content-single/getContentItem.js
+++ b/apolloschurchapp/src/content-single/getContentItem.js
@@ -1,6 +1,6 @@
 import gql from 'graphql-tag';
 
-export const contentItemFragment = gql`
+export const CONTENT_ITEM_FRAGMENT = gql`
   fragment contentItemFragment on ContentItem {
     id
     title
@@ -48,5 +48,5 @@ export default gql`
       }
     }
   }
-  ${contentItemFragment}
+  ${CONTENT_ITEM_FRAGMENT}
 `;
diff --git a/apolloschurchapp/src/index.js b/apolloschurchapp/src/index.js
index 3558249..f3e2939 100644
--- a/apolloschurchapp/src/index.js
+++ b/apolloschurchapp/src/index.js
@@ -5,7 +5,7 @@ import SplashScreen from 'react-native-splash-screen';
 
 import { BackgroundView, withTheme } from '@apollosproject/ui-kit';
 import Passes from '@apollosproject/ui-passes';
-import MediaPlayer from 'apolloschurchapp/src/ui/MediaPlayer';
+import { MediaPlayer } from '@apollosproject/ui-media-player';
 import Auth, { ProtectedRoute } from '@apollosproject/ui-auth';
 
 import Providers from './Providers';
@@ -15,7 +15,6 @@ import Tabs from './tabs';
 import PersonalDetails from './user-settings/PersonalDetails';
 import ChangePassword from './user-settings/ChangePassword';
 import Location from './user-settings/Locations';
-import { LocationFinderMapView } from './ui/Onboarding/slides/LocationFinder';
 import LandingScreen from './LandingScreen';
 import UserWebBrowser from './user-web-browser';
 import Onboarding from './ui/Onboarding';
@@ -40,7 +39,6 @@ const AppNavigator = createStackNavigator(
     PersonalDetails,
     ChangePassword,
     Location,
-    LocationFinderMapView,
     Passes,
     UserWebBrowser,
     Onboarding,
diff --git a/apolloschurchapp/src/live/LiveButton.js b/apolloschurchapp/src/live/LiveButton.js
index c5760e3..6e1fa30 100644
--- a/apolloschurchapp/src/live/LiveButton.js
+++ b/apolloschurchapp/src/live/LiveButton.js
@@ -12,7 +12,7 @@ import {
 } from '@apollosproject/ui-kit';
 import { WebBrowserConsumer } from 'apolloschurchapp/src/ui/WebBrowser';
 
-import getLiveStream from './getLiveStream';
+import GET_LIVE_STREAM from './getLiveStream';
 
 const LiveCard = styled(({ theme }) => ({
   backgroundColor: theme.colors.lightSecondary,
@@ -20,7 +20,7 @@ const LiveCard = styled(({ theme }) => ({
 
 const LiveNowButton = () => (
   <Query
-    query={getLiveStream}
+    query={GET_LIVE_STREAM}
     fetchPolicy="cache-and-network"
     pollInterval={60000}
   >
diff --git a/apolloschurchapp/src/notifications/NotificationManager.js b/apolloschurchapp/src/notifications/NotificationManager.js
deleted file mode 100644
index bdeb95d..0000000
--- a/apolloschurchapp/src/notifications/NotificationManager.js
+++ /dev/null
@@ -1,96 +0,0 @@
-import URL from 'url';
-import querystring from 'querystring';
-import { Component } from 'react';
-import { Linking } from 'react-native';
-import PropTypes from 'prop-types';
-import gql from 'graphql-tag';
-import { withApollo } from 'react-apollo';
-import OneSignal from 'react-native-onesignal';
-import Config from 'react-native-config';
-import { get } from 'lodash';
-
-import NavigationService from '../NavigationService';
-
-const UPDATE_DEVICE_PUSH_ID = gql`
-  mutation updateDevicePushId($pushId: String!) {
-    updateDevicePushId(pushId: $pushId) @client
-  }
-`;
-
-class NotificationsInit extends Component {
-  static propTypes = {
-    children: PropTypes.oneOfType([
-      PropTypes.arrayOf(PropTypes.node),
-      PropTypes.node,
-    ]).isRequired,
-  };
-
-  static navigationOptions = {};
-
-  static propTypes = {
-    client: PropTypes.shape({
-      mutate: PropTypes.func,
-    }),
-  };
-
-  componentDidMount() {
-    OneSignal.init(Config.ONE_SIGNAL_KEY, {
-      kOSSettingsKeyAutoPrompt: false,
-    });
-    OneSignal.addEventListener('received', this.onReceived);
-    OneSignal.addEventListener('opened', this.onOpened);
-    OneSignal.addEventListener('ids', this.onIds);
-    OneSignal.configure();
-    Linking.getInitialURL().then((url) => {
-      this.navigate(url);
-    });
-    Linking.addEventListener('url', ({ url }) => this.navigate(url));
-  }
-
-  componentWillUnmount() {
-    Linking.removeEventListener('url');
-    OneSignal.removeEventListener('received');
-    OneSignal.removeEventListener('opened');
-    OneSignal.removeEventListener('ids');
-  }
-
-  navigate = (rawUrl) => {
-    if (!rawUrl) return;
-    const url = URL.parse(rawUrl);
-    const route = url.pathname.substring(1);
-    const args = querystring.parse(url.query);
-    NavigationService.navigate(route, args);
-  };
-
-  onReceived = (notification) => {
-    console.log('Notification received: ', notification);
-  };
-
-  onOpened = (openResult) => {
-    console.log('Message: ', openResult.notification.payload.body);
-    console.log('Data: ', openResult.notification.payload.additionalData);
-    console.log('isActive: ', openResult.notification.isAppInFocus);
-    console.log('openResult: ', openResult);
-    // URL looks like this
-    // apolloschurchapp://AppStackNavigator/Connect
-    // apolloschurchapp://SomethingElse/Connect
-    // apolloschurchapp://SomethingElse/ContentSingle?itemId=SomeItemId:blablalba
-    const url = get(openResult, 'notification.payload.additionalData.url');
-    if (url) {
-      this.navigate(url);
-    }
-  };
-
-  onIds = (device) => {
-    this.props.client.mutate({
-      mutation: UPDATE_DEVICE_PUSH_ID,
-      variables: { pushId: device.userId },
-    });
-  };
-
-  render() {
-    return this.props.children;
-  }
-}
-
-export default withApollo(NotificationsInit);
diff --git a/apolloschurchapp/src/notifications/index.js b/apolloschurchapp/src/notifications/index.js
deleted file mode 100644
index 5a95ec1..0000000
--- a/apolloschurchapp/src/notifications/index.js
+++ /dev/null
@@ -1,7 +0,0 @@
-export NotificationsManager from './NotificationManager';
-export {
-  getPushPermissions,
-  requestPushPermissions,
-  getNotificationsEnabled,
-} from './permissionUtils';
-export updatePushId from './updatePushId';
diff --git a/apolloschurchapp/src/notifications/permissionUtils.js b/apolloschurchapp/src/notifications/permissionUtils.js
deleted file mode 100644
index 4e07b16..0000000
--- a/apolloschurchapp/src/notifications/permissionUtils.js
+++ /dev/null
@@ -1,39 +0,0 @@
-import OneSignal from 'react-native-onesignal';
-import gql from 'graphql-tag';
-
-const getPushPermissions = async () =>
-  new Promise((resolve) =>
-    OneSignal.getPermissionSubscriptionState((status) =>
-      // Ensure the client (notificationsEnabled) && OneSignal (subscriptionEnabled) are boolean values
-      resolve(!!(status.notificationsEnabled && status.subscriptionEnabled))
-    )
-  );
-
-const promptForPushNotificationsWithUserResponse = async () =>
-  new Promise((resolve) =>
-    OneSignal.promptForPushNotificationsWithUserResponse(resolve)
-  );
-
-const setNotifcationsEnabled = gql`
-  mutation updatePushPermissions($enabled: Boolean!) {
-    updatePushPermissions(enabled: $enabled) @client
-  }
-`;
-
-const getNotificationsEnabled = gql`
-  query getPushPermissions {
-    notificationsEnabled @client(always: true)
-  }
-`;
-
-const requestPushPermissions = async ({ client }) => {
-  const notificationsEnabled = await promptForPushNotificationsWithUserResponse();
-  await client.mutate({
-    mutation: setNotifcationsEnabled,
-    variables: { enabled: notificationsEnabled },
-  });
-
-  return notificationsEnabled;
-};
-
-export { getPushPermissions, requestPushPermissions, getNotificationsEnabled };
diff --git a/apolloschurchapp/src/notifications/permissionUtils.tests.js b/apolloschurchapp/src/notifications/permissionUtils.tests.js
deleted file mode 100644
index 870d597..0000000
--- a/apolloschurchapp/src/notifications/permissionUtils.tests.js
+++ /dev/null
@@ -1,29 +0,0 @@
-import { client } from '../client';
-import {
-  getPushPermissions,
-  getNotificationsEnabled,
-  requestPushPermissions,
-} from './permissionUtils';
-
-describe('getPushPermissions', () => {
-  it('should return a boolean based on the result from OneSignal', async () => {
-    const result = await getPushPermissions();
-    expect(result).toEqual(true);
-  });
-});
-
-describe('requestPushPermissions', () => {
-  it('must update the store if OneSignal returns true', async () => {
-    expect(
-      client.readQuery({ query: getNotificationsEnabled })
-    ).toMatchSnapshot('Before calling mutation');
-
-    const result = await requestPushPermissions({ client });
-    expect(result).toEqual(true);
-    // this doesn't work yet :(
-    // the result is same as above, it looks like the client state isn't loading in time
-    expect(
-      client.readQuery({ query: getNotificationsEnabled })
-    ).toMatchSnapshot('After calling mutation');
-  });
-});
diff --git a/apolloschurchapp/src/notifications/updatePushId.js b/apolloschurchapp/src/notifications/updatePushId.js
deleted file mode 100644
index a43b658..0000000
--- a/apolloschurchapp/src/notifications/updatePushId.js
+++ /dev/null
@@ -1,18 +0,0 @@
-import gql from 'graphql-tag';
-
-const UPDATE_PUSH_ID = gql`
-  mutation updateUserPushSettings($input: PushSettingsInput!) {
-    updateUserPushSettings(input: $input) {
-      id
-    }
-  }
-`;
-
-const updatePushId = async ({ pushId, client }) => {
-  await client.mutate({
-    mutation: UPDATE_PUSH_ID,
-    variables: { input: { pushProviderUserId: pushId } },
-  });
-};
-
-export { updatePushId as default };
diff --git a/apolloschurchapp/src/scripture/index.js b/apolloschurchapp/src/scripture/index.js
index 5c7e682..5b23d5d 100644
--- a/apolloschurchapp/src/scripture/index.js
+++ b/apolloschurchapp/src/scripture/index.js
@@ -2,8 +2,8 @@ import React from 'react';
 import { Query } from 'react-apollo';
 import { get } from 'lodash';
 import PropTypes from 'prop-types';
-import ScriptureItem from 'apolloschurchapp/src/ui/Scripture/ScriptureItem';
-import getScripture from './getScripture';
+import { ScriptureItem } from '@apollosproject/ui-scripture';
+import GET_SCRIPTURE from './getScripture';
 
 /**
  * This is the data-bound "connected" scripture component.
@@ -15,7 +15,7 @@ const ScriptureConnected = ({
   references,
 }) =>
   references.map((query) => (
-    <Query query={getScripture} variables={{ query }} key={query}>
+    <Query query={GET_SCRIPTURE} variables={{ query }} key={query}>
       {({ loading, data }) => (
         <ScriptureComponent
           reference={get(data, 'scripture.reference', '')}
diff --git a/apolloschurchapp/src/store/MediaPlayer.tests.js b/apolloschurchapp/src/store/MediaPlayer.tests.js
deleted file mode 100644
index 5ebf3a8..0000000
--- a/apolloschurchapp/src/store/MediaPlayer.tests.js
+++ /dev/null
@@ -1,60 +0,0 @@
-import { client } from 'apolloschurchapp/src/client';
-import gql from 'graphql-tag';
-
-import { resolvers, defaults } from '.';
-
-const query = gql`
-  query {
-    mediaPlayer @client {
-      currentTrack {
-        mediaSourceUri
-        posterSourceUri
-        title
-        artist
-      }
-      isPlaying
-      isFullscreen
-      isVisible
-    }
-  }
-`;
-
-const testTrack = {
-  parentId: 'parentId',
-  mediaSourceUri: 'mediaSourceUri',
-  posterSourceUri: 'posterSourceUri',
-  title: 'title',
-  artist: 'artist',
-};
-
-describe('MediaPlayer Store', () => {
-  beforeEach(() => {
-    client.writeData({ data: defaults });
-  });
-
-  it('plays a track', async () => {
-    resolvers.Mutation.mediaPlayerPlayNow({}, testTrack, {
-      cache: client.cache,
-      client,
-    });
-    expect(client.query({ query })).resolves.toMatchSnapshot();
-  });
-  it('updates player state', async () => {
-    resolvers.Mutation.mediaPlayerPlayNow({}, testTrack, {
-      cache: client.cache,
-      client,
-    });
-    expect(client.query({ query })).resolves.toMatchSnapshot();
-    resolvers.Mutation.mediaPlayerUpdateState(
-      {},
-      { isPlaying: false },
-      { cache: client.cache, client }
-    );
-    expect(client.query({ query })).resolves.toMatchSnapshot();
-    resolvers.Mutation.mediaPlayerUpdateState(
-      {},
-      { isPlaying: true },
-      { cache: client.cache, client }
-    );
-  });
-});
diff --git a/apolloschurchapp/src/store/index.js b/apolloschurchapp/src/store/index.js
index cee2356..66fdccb 100644
--- a/apolloschurchapp/src/store/index.js
+++ b/apolloschurchapp/src/store/index.js
@@ -1,253 +1,40 @@
-import { merge, get } from 'lodash';
 import gql from 'graphql-tag';
 
-import { track } from '@apollosproject/ui-analytics';
-import { Platform } from 'react-native';
+import { schema as mediaPlayerSchema } from '@apollosproject/ui-media-player';
+import { updatePushId } from '@apollosproject/ui-notifications';
 import { CACHE_LOADED } from '../client/cache'; // eslint-disable-line
 
-import {
-  getPushPermissions,
-  updatePushId,
-  getNotificationsEnabled,
-} from '../notifications';
 // TODO: this will require more organization...ie...not keeping everything in one file.
 // But this is simple while our needs our small.
 
 export const schema = `
   type Query {
-    mediaPlayer: MediaPlayerState
     devicePushId: String
     cacheLoaded: Boolean
     notificationsEnabled: Boolean
   }
 
   type Mutation {
-    mediaPlayerUpdateState(isPlaying: Boolean, isFullscreen: Boolean, isVisible: Boolean): Boolean
-    mediaPlayerSetPlayhead(currentTime: Float): Boolean
-    mediaPlayerPlayNow(
-      parentId: ID,
-      mediaSource: VideoMediaSource!,
-      posterSources: [ImageMediaSource],
-      title: String,
-      artist: String,
-      isVideo: Boolean,
-    ): Boolean
-
     cacheMarkLoaded
     updateDevicePushId(pushId: String!)
     updatePushPermissions(enabled: Boolean!)
   }
-
-  type MediaPlayerState {
-    currentTrack: MediaPlayerTrack
-    isPlaying: Boolean
-    isFullscreen: Boolean
-    isVisible: Boolean
-    currentTime: Float
-  }
-
-  type MediaPlayerProgress {
-    currentTime: Float
-    playableDuration: Float
-    seekableDuration: Float
-    duration: Float
-  }
-
-  type MediaPlayerTrack {
-    id: ID!
-    parentId: ID
-    mediaSource: VideoMediaSource!
-    posterSources: [ImageMediaSource]
-    title: String
-    artist: String
-    isVideo: Boolean
-  }
+${mediaPlayerSchema}
 `;
 
 export const defaults = {
   __typename: 'Query',
   cacheLoaded: false,
-  pushId: null,
-  notificationsEnabled: Platform.OS === 'android',
-  mediaPlayer: {
-    __typename: 'MediaPlayerState',
-    currentTrack: null,
-    isPlaying: false,
-    isFullscreen: false,
-    isVisible: false,
-    currentTime: 0,
-    showVideo: true,
-    muted: false,
-  },
 };
 
-let trackId = 0;
-
-const getIsLoggedIn = gql`
+const GET_LOGGED_IN = gql`
   query {
     isLoggedIn @client
   }
 `;
 
 export const resolvers = {
-  Query: {
-    notificationsEnabled: getPushPermissions,
-  },
   Mutation: {
-    mediaPlayerPlayNow: (root, trackInfo, { cache, client }) => {
-      const query = gql`
-        query {
-          mediaPlayer {
-            isFullscreen
-          }
-        }
-      `;
-      const mediaTrack = merge(
-        {
-          __typename: 'MediaPlayerTrack',
-          parentId: null,
-          mediaSource: null,
-          posterSources: null,
-          title: null,
-          artist: null,
-          isVideo: false,
-        },
-        trackInfo
-      );
-
-      const { mediaPlayer } = cache.readQuery({ query });
-
-      const newMediaPlayerState = {
-        __typename: 'MediaPlayerState',
-        isPlaying: true,
-        isVisible: true,
-        isFullscreen: mediaTrack.isVideo
-          ? true
-          : (mediaPlayer && mediaPlayer.isFullscreen) || false,
-        currentTrack: mediaTrack,
-        currentTime: 0,
-        showVideo: mediaTrack.isVideo,
-        muted: false,
-      };
-
-      if (
-        // if same track
-        mediaPlayer &&
-        mediaPlayer.currentTrack &&
-        mediaPlayer.currentTrack.mediaSource.uri === mediaTrack.mediaSource.uri
-      ) {
-        // use the same Id
-        newMediaPlayerState.currentTrack.id = mediaPlayer.currentTrack.id;
-      } else {
-        // otherwise reset progress and use new Id
-        newMediaPlayerState.currentTrack.id = trackId;
-        newMediaPlayerState.progress = null;
-        trackId += 1;
-      }
-
-      cache.writeData({
-        query,
-        data: {
-          mediaPlayer: newMediaPlayerState,
-        },
-      });
-      track({
-        client,
-        eventName: 'UserPlayedMedia',
-        properties: {
-          uri: mediaTrack.uri,
-          title: mediaTrack.title,
-          type: mediaTrack.isVideo ? 'Video' : 'Audio',
-        },
-      });
-      return null;
-    },
-    mediaPlayerUpdateState: (
-      root,
-      { isPlaying, isFullscreen, isVisible, showVideo, muted },
-      { cache }
-    ) => {
-      const query = gql`
-        query {
-          mediaPlayer @client {
-            isPlaying
-            isFullscreen
-            isVisible
-            showVideo
-            muted
-          }
-        }
-      `;
-      const { mediaPlayer } = cache.readQuery({ query });
-      cache.writeQuery({
-        query,
-        data: {
-          mediaPlayer: merge(mediaPlayer, {
-            isPlaying,
-            isFullscreen,
-            isVisible,
-            showVideo,
-            muted,
-            __typename: 'MediaPlayerState',
-          }),
-        },
-      });
-      return null;
-    },
-    mediaPlayerSetPlayhead: (root, { currentTime }, { cache }) => {
-      const query = gql`
-        query {
-          mediaPlayer @client {
-            currentTime
-          }
-        }
-      `;
-      const { mediaPlayer } = cache.readQuery({ query });
-      cache.writeQuery({
-        query,
-        data: {
-          mediaPlayer: {
-            __typename: 'MediaPlayerState',
-            currentTime:
-              currentTime || get(mediaPlayer.progress, 'currentTime') || 0,
-          },
-        },
-      });
-      return null;
-    },
-    updateDevicePushId: async (root, { pushId }, { cache, client }) => {
-      const query = gql`
-        query {
-          pushId @client
-        }
-      `;
-      cache.writeQuery({
-        query,
-        data: {
-          pushId,
-        },
-      });
-
-      const { data: { isLoggedIn } = {} } = await client.query({
-        query: getIsLoggedIn,
-      });
-
-      if (isLoggedIn) {
-        updatePushId({ pushId, client });
-      }
-      return null;
-    },
-    updatePushPermissions: (root, { enabled }, { cache }) => {
-      cache.writeQuery({
-        query: getNotificationsEnabled,
-        data: {
-          notificationsEnabled: enabled,
-        },
-      });
-
-      return null;
-    },
-
     cacheMarkLoaded: async (root, args, { cache, client }) => {
       cache.writeQuery({
         query: CACHE_LOADED,
@@ -256,7 +43,7 @@ export const resolvers = {
         },
       });
       const { data: { isLoggedIn } = {} } = await client.query({
-        query: getIsLoggedIn,
+        query: GET_LOGGED_IN,
       });
 
       const { pushId } = cache.readQuery({
diff --git a/apolloschurchapp/src/tabs/connect/Connect.js b/apolloschurchapp/src/tabs/connect/Connect.js
index 79bb6df..f3ba0e1 100644
--- a/apolloschurchapp/src/tabs/connect/Connect.js
+++ b/apolloschurchapp/src/tabs/connect/Connect.js
@@ -4,7 +4,7 @@ import { Query } from 'react-apollo';
 import { get } from 'lodash';
 import PropTypes from 'prop-types';
 
-import { LoginButton } from '@apollosproject/ui-auth';
+import { LoginButton, GET_LOGIN_STATE } from '@apollosproject/ui-auth';
 import {
   H1,
   BodyText,
@@ -19,7 +19,6 @@ import ActionTable from './ActionTable';
 import Toolbar from './Toolbar';
 import { UserAvatarHeaderConnected } from './UserAvatarHeader';
 import { RecentlyLikedTileFeedConnected } from './RecentlyLikedTileFeed';
-import getLoginState from './getLoginState';
 
 const Title = styled(({ theme }) => ({
   color: theme.colors.primary,
@@ -63,7 +62,7 @@ class Connect extends PureComponent {
   render() {
     return (
       <BackgroundView>
-        <Query query={getLoginState}>
+        <Query query={GET_LOGIN_STATE}>
           {({ data }) => {
             if (get(data, 'isLoggedIn', false))
               return (
diff --git a/apolloschurchapp/src/tabs/connect/LikedContentList/LikedContentList.tests.js b/apolloschurchapp/src/tabs/connect/LikedContentList/LikedContentList.tests.js
index 78a32c7..673817c 100644
--- a/apolloschurchapp/src/tabs/connect/LikedContentList/LikedContentList.tests.js
+++ b/apolloschurchapp/src/tabs/connect/LikedContentList/LikedContentList.tests.js
@@ -4,14 +4,14 @@ import wait from 'waait';
 
 import Providers from 'apolloschurchapp/src/Providers';
 
-import getLikedContent from '../getLikedContent';
+import GET_LIKED_CONTENT from '../getLikedContent';
 import LikedContentList from '.';
 
 describe('LikedContentList component', () => {
   it('renders LikedContentList', async () => {
     const mock = {
       request: {
-        query: getLikedContent,
+        query: GET_LIKED_CONTENT,
       },
       result: {
         data: {
diff --git a/apolloschurchapp/src/tabs/connect/LikedContentList/index.js b/apolloschurchapp/src/tabs/connect/LikedContentList/index.js
index c53c2ae..38dedb3 100644
--- a/apolloschurchapp/src/tabs/connect/LikedContentList/index.js
+++ b/apolloschurchapp/src/tabs/connect/LikedContentList/index.js
@@ -4,9 +4,10 @@ import { Query } from 'react-apollo';
 import { get } from 'lodash';
 
 import { BackgroundView, FeedView } from '@apollosproject/ui-kit';
+import fetchMoreResolver from 'apolloschurchapp/src/utils/fetchMoreResolver';
 import ContentCardConnected from '../../../ui/ContentCardConnected';
 
-import getLikedContent from '../getLikedContent';
+import GET_LIKED_CONTENT from '../getLikedContent';
 /** A FeedView wrapped in a query to pull content data. */
 class LikedContentList extends PureComponent {
   /** Function for React Navigation to set information in the header. */
@@ -37,11 +38,11 @@ class LikedContentList extends PureComponent {
     return (
       <BackgroundView>
         <Query
-          query={getLikedContent}
+          query={GET_LIKED_CONTENT}
           fetchPolicy="cache-and-network"
           variables={{ first: 20 }}
         >
-          {({ loading, error, data, refetch }) => (
+          {({ loading, error, data, refetch, fetchMore, variables }) => (
             <FeedView
               ListItemComponent={ContentCardConnected}
               content={get(data, 'likedContent.edges', []).map(
@@ -51,6 +52,12 @@ class LikedContentList extends PureComponent {
               error={error}
               refetch={refetch}
               onPressItem={this.handleOnPress}
+              fetchMore={fetchMoreResolver({
+                collectionName: 'likedContent',
+                fetchMore,
+                variables,
+                data,
+              })}
             />
           )}
         </Query>
diff --git a/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeedConnected.js b/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeedConnected.js
index 7527d53..bfccbe1 100644
--- a/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeedConnected.js
+++ b/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeedConnected.js
@@ -2,12 +2,12 @@ import React from 'react';
 import { Query } from 'react-apollo';
 import PropTypes from 'prop-types';
 
-import getLikedContent from '../getLikedContent';
+import GET_LIKED_CONTENT from '../getLikedContent';
 import RecentlyLikedTileFeed from './RecentlyLikedTileFeed';
 
 const RecentlyLikedTileFeedConnected = ({ navigation }) => (
   <Query
-    query={getLikedContent}
+    query={GET_LIKED_CONTENT}
     fetchPolicy="cache-and-network"
     variables={{ first: 3 }}
   >
diff --git a/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeedConnected.tests.js b/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeedConnected.tests.js
index 19c91cf..8463a14 100644
--- a/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeedConnected.tests.js
+++ b/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeedConnected.tests.js
@@ -4,14 +4,14 @@ import wait from 'waait';
 
 import Providers from 'apolloschurchapp/src/Providers';
 
-import getLikedContent from '../getLikedContent';
+import GET_LIKED_CONTENT from '../getLikedContent';
 import RecentlyLikedTileFeedConnected from './RecentlyLikedTileFeedConnected';
 
 describe('RecentlyLikedTileFeedConnected', () => {
   it('renders a RecentlyLikedTileFeedConnected', async () => {
     const mock = {
       request: {
-        query: getLikedContent,
+        query: GET_LIKED_CONTENT,
       },
       result: {
         data: {
@@ -87,7 +87,7 @@ describe('RecentlyLikedTileFeedConnected', () => {
   it('renders nothing if no liked content', async () => {
     const mock = {
       request: {
-        query: getLikedContent,
+        query: GET_LIKED_CONTENT,
       },
       result: {
         data: {
diff --git a/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeaderConnected.js b/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeaderConnected.js
index 397a879..9b9997c 100644
--- a/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeaderConnected.js
+++ b/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeaderConnected.js
@@ -3,11 +3,11 @@ import { Query } from 'react-apollo';
 import PropTypes from 'prop-types';
 import { get } from 'lodash';
 
-import getUserProfile from '../getUserProfile';
+import GET_USER_PROFILE from '../getUserProfile';
 import UserAvatarHeader from './UserAvatarHeader';
 
 const UserAvatarHeaderConnected = ({ navigation }) => (
-  <Query query={getUserProfile} fetchPolicy="cache-and-network">
+  <Query query={GET_USER_PROFILE} fetchPolicy="cache-and-network">
     {({
       data: {
         currentUser: {
diff --git a/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeaderConnected.tests.js b/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeaderConnected.tests.js
index b4bad0c..0395abe 100644
--- a/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeaderConnected.tests.js
+++ b/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeaderConnected.tests.js
@@ -3,14 +3,14 @@ import { renderWithApolloData } from 'apolloschurchapp/src/utils/testUtils';
 
 import Providers from 'apolloschurchapp/src/Providers';
 
-import getUserProfile from '../getUserProfile';
+import GET_USER_PROFILE from '../getUserProfile';
 import UserAvatarHeaderConnected from './UserAvatarHeaderConnected';
 
 describe('user avatar header connect', () => {
   it('renders user avatar header if logged in', async () => {
     const mock = {
       request: {
-        query: getUserProfile,
+        query: GET_USER_PROFILE,
       },
       result: {
         data: {
diff --git a/apolloschurchapp/src/tabs/connect/getLikedContent.js b/apolloschurchapp/src/tabs/connect/getLikedContent.js
index 8a903d1..67a6720 100644
--- a/apolloschurchapp/src/tabs/connect/getLikedContent.js
+++ b/apolloschurchapp/src/tabs/connect/getLikedContent.js
@@ -1,11 +1,14 @@
 import gql from 'graphql-tag';
 
-import { largeCardFragment } from 'apolloschurchapp/src/ui/ContentCardConnected';
-import { contentItemFragment } from 'apolloschurchapp/src/content-single/getContentItem';
+import { LARGE_CARD_FRAGMENT } from 'apolloschurchapp/src/ui/ContentCardConnected';
+import { CONTENT_ITEM_FRAGMENT } from 'apolloschurchapp/src/content-single/getContentItem';
 
 export default gql`
-  query getAllLikedContent($first: Int) {
-    likedContent(first: $first) {
+  query getAllLikedContent($first: Int, $after: String) {
+    likedContent(first: $first, after: $after) {
+      pageInfo {
+        endCursor
+      }
       edges {
         node {
           ... on ContentItem {
@@ -16,6 +19,6 @@ export default gql`
       }
     }
   }
-  ${contentItemFragment}
-  ${largeCardFragment}
+  ${CONTENT_ITEM_FRAGMENT}
+  ${LARGE_CARD_FRAGMENT}
 `;
diff --git a/apolloschurchapp/src/tabs/discover/Discover.js b/apolloschurchapp/src/tabs/discover/Discover.js
index 76d8b24..210c1a2 100644
--- a/apolloschurchapp/src/tabs/discover/Discover.js
+++ b/apolloschurchapp/src/tabs/discover/Discover.js
@@ -5,7 +5,7 @@ import { get } from 'lodash';
 import { FeedView, BackgroundView } from '@apollosproject/ui-kit';
 
 import TileContentFeed from './TileContentFeed';
-import getContentChannels from './getContentChannels';
+import GET_CONTENT_CHANNELS from './getContentChannels';
 
 const childContentItemLoadingState = {
   title: '',
@@ -33,7 +33,7 @@ class Discover extends PureComponent {
   render() {
     return (
       <BackgroundView>
-        <Query query={getContentChannels} fetchPolicy="cache-and-network">
+        <Query query={GET_CONTENT_CHANNELS} fetchPolicy="cache-and-network">
           {({
             error,
             loading,
diff --git a/apolloschurchapp/src/tabs/discover/discover.tests.js b/apolloschurchapp/src/tabs/discover/discover.tests.js
index 96f2fde..6e8f57b 100644
--- a/apolloschurchapp/src/tabs/discover/discover.tests.js
+++ b/apolloschurchapp/src/tabs/discover/discover.tests.js
@@ -5,13 +5,13 @@ import { createStackNavigator } from 'react-navigation';
 import Providers from 'apolloschurchapp/src/Providers';
 
 import Discover from './Discover';
-import getContentChannels from './getContentChannels';
+import GET_CONTENT_CHANNELS from './getContentChannels';
 
 describe('Test the Discover Component Query', () => {
   it('Should retrieve the Content Channel Feeds', () => {
     const mock = {
       request: {
-        query: getContentChannels,
+        query: GET_CONTENT_CHANNELS,
       },
       result: {
         data: {
diff --git a/apolloschurchapp/src/tabs/discover/getContentChannels.js b/apolloschurchapp/src/tabs/discover/getContentChannels.js
index bc9c243..be21aa9 100644
--- a/apolloschurchapp/src/tabs/discover/getContentChannels.js
+++ b/apolloschurchapp/src/tabs/discover/getContentChannels.js
@@ -1,7 +1,7 @@
 import gql from 'graphql-tag';
 
-import { contentItemFragment } from 'apolloschurchapp/src/content-single/getContentItem';
-import { tileCardFragment } from 'apolloschurchapp/src/ui/ContentCardConnected';
+import { CONTENT_ITEM_FRAGMENT } from 'apolloschurchapp/src/content-single/getContentItem';
+import { TILE_CARD_FRAGMENT } from 'apolloschurchapp/src/ui/ContentCardConnected';
 
 export default gql`
   query getContentChannels {
@@ -19,6 +19,6 @@ export default gql`
       }
     }
   }
-  ${contentItemFragment}
-  ${tileCardFragment}
+  ${CONTENT_ITEM_FRAGMENT}
+  ${TILE_CARD_FRAGMENT}
 `;
diff --git a/apolloschurchapp/src/tabs/home/Home.js b/apolloschurchapp/src/tabs/home/Home.js
index 57abba0..ffb4cc1 100644
--- a/apolloschurchapp/src/tabs/home/Home.js
+++ b/apolloschurchapp/src/tabs/home/Home.js
@@ -11,15 +11,18 @@ import {
   BackgroundView,
   H3,
   H6,
+  TouchableScale,
 } from '@apollosproject/ui-kit';
+
+import fetchMoreResolver from '../../utils/fetchMoreResolver';
 import ContentCardConnected from '../../ui/ContentCardConnected';
 
 import { LiveButton } from '../../live';
 
 import ContentTableCard from '../../ui/ContentTableCard';
-import getUserFeed from './getUserFeed';
-import getPersonaFeed from './getPersonaFeed';
-import getCampaignContentItem from './getCampaignContentItem';
+import GET_USER_FEED from './getUserFeed';
+import GET_FEED_FEATURES from './getFeedFeatures';
+import GET_CAMPAIGN_CONTENT_ITEM from './getCampaignContentItem';
 
 const LogoTitle = styled(({ theme }) => ({
   height: theme.sizing.baseUnit,
@@ -55,13 +58,26 @@ class Home extends PureComponent {
     return (
       <BackgroundView>
         <SafeAreaView>
-          <Query query={getUserFeed} fetchPolicy="cache-and-network">
-            {({ loading, error, data, refetch }) => (
+          <Query
+            query={GET_USER_FEED}
+            variables={{
+              first: 10,
+              after: null,
+            }}
+            fetchPolicy="cache-and-network"
+          >
+            {({ loading, error, data, refetch, fetchMore, variables }) => (
               <FeedView
                 ListItemComponent={ContentCardConnected}
                 content={get(data, 'userFeed.edges', []).map(
                   (edge) => edge.node
                 )}
+                fetchMore={fetchMoreResolver({
+                  collectionName: 'userFeed',
+                  fetchMore,
+                  variables,
+                  data,
+                })}
                 isLoading={loading}
                 error={error}
                 refetch={refetch}
@@ -70,7 +86,7 @@ class Home extends PureComponent {
                     <LogoTitle source={require('./wordmark.png')} />
                     <LiveButton />
                     <Query
-                      query={getCampaignContentItem}
+                      query={GET_CAMPAIGN_CONTENT_ITEM}
                       fetchPolicy="cache-and-network"
                     >
                       {({ data: featuredData, loading: isFeaturedLoading }) => {
@@ -87,45 +103,49 @@ class Home extends PureComponent {
                         );
 
                         return (
-                          <ContentCardConnected
-                            contentId={featuredItem.id}
-                            isLoading={isFeaturedLoading}
-                          />
+                          <TouchableScale
+                            onPress={() =>
+                              this.handleOnPress({ id: featuredItem.id })
+                            }
+                          >
+                            <ContentCardConnected
+                              contentId={featuredItem.id}
+                              isLoading={isFeaturedLoading}
+                            />
+                          </TouchableScale>
                         );
                       }}
                     </Query>
                     <Query
-                      query={getPersonaFeed}
+                      query={GET_FEED_FEATURES}
                       fetchPolicy="cache-and-network"
                     >
-                      {({
-                        data: personaData,
-                        loading: isContentTableLoading,
-                      }) => (
-                        <ContentTableCard
-                          isLoading={isContentTableLoading}
-                          onPress={this.handleOnPress}
-                          header={
-                            <>
-                              <StyledH6 isLoading={isContentTableLoading}>
-                                FOR YOU
-                              </StyledH6>
-                              <H3
-                                isLoading={isContentTableLoading}
-                                numberOfLines={3}
-                                ellipsizeMode="tail"
-                              >
-                                Explore what God calls you to today
-                              </H3>
-                            </>
-                          }
-                          content={get(
-                            personaData,
-                            'personaFeed.edges',
-                            []
-                          ).map((edge) => edge.node)}
-                        />
-                      )}
+                      {({ data: features, loading: featuresLoading }) =>
+                        get(features, 'userFeedFeatures', []).map(
+                          ({ title, subtitle, actions, id }) => (
+                            <ContentTableCard
+                              isLoading={featuresLoading}
+                              onPress={this.handleOnPress}
+                              key={id}
+                              header={
+                                <>
+                                  <StyledH6 isLoading={featuresLoading}>
+                                    {title}
+                                  </StyledH6>
+                                  <H3
+                                    isLoading={featuresLoading}
+                                    numberOfLines={3}
+                                    ellipsizeMode="tail"
+                                  >
+                                    {subtitle}
+                                  </H3>
+                                </>
+                              }
+                              content={actions}
+                            />
+                          )
+                        )
+                      }
                     </Query>
                   </>
                 }
diff --git a/apolloschurchapp/src/tabs/home/getCampaignContentItem.js b/apolloschurchapp/src/tabs/home/getCampaignContentItem.js
index 5bdb082..345463c 100644
--- a/apolloschurchapp/src/tabs/home/getCampaignContentItem.js
+++ b/apolloschurchapp/src/tabs/home/getCampaignContentItem.js
@@ -1,7 +1,7 @@
 import gql from 'graphql-tag';
 
-import { contentItemFragment } from 'apolloschurchapp/src/content-single/getContentItem';
-import { largeCardFragment } from 'apolloschurchapp/src/ui/ContentCardConnected';
+import { CONTENT_ITEM_FRAGMENT } from 'apolloschurchapp/src/content-single/getContentItem';
+import { LARGE_CARD_FRAGMENT } from 'apolloschurchapp/src/ui/ContentCardConnected';
 
 export default gql`
   query campaigns {
@@ -20,6 +20,6 @@ export default gql`
       }
     }
   }
-  ${contentItemFragment}
-  ${largeCardFragment}
+  ${CONTENT_ITEM_FRAGMENT}
+  ${LARGE_CARD_FRAGMENT}
 `;
diff --git a/apolloschurchapp/src/tabs/home/getFeedFeatures.js b/apolloschurchapp/src/tabs/home/getFeedFeatures.js
new file mode 100644
index 0000000..caffc10
--- /dev/null
+++ b/apolloschurchapp/src/tabs/home/getFeedFeatures.js
@@ -0,0 +1,27 @@
+import gql from 'graphql-tag';
+
+export default gql`
+  query getFeedFeatures {
+    userFeedFeatures {
+      ... on ActionListFeature {
+        id
+        title
+        subtitle
+        actions {
+          id
+          title
+          subtitle
+          action
+          image {
+            sources {
+              uri
+            }
+          }
+          relatedNode {
+            id
+          }
+        }
+      }
+    }
+  }
+`;
diff --git a/apolloschurchapp/src/tabs/home/getPersonaFeed.js b/apolloschurchapp/src/tabs/home/getPersonaFeed.js
deleted file mode 100644
index b8130e0..0000000
--- a/apolloschurchapp/src/tabs/home/getPersonaFeed.js
+++ /dev/null
@@ -1,19 +0,0 @@
-import gql from 'graphql-tag';
-
-import { contentItemFragment } from 'apolloschurchapp/src/content-single/getContentItem';
-import { largeCardFragment } from 'apolloschurchapp/src/ui/ContentCardConnected';
-
-export default gql`
-  query getPersonaFeed {
-    personaFeed(first: 4) {
-      edges {
-        node {
-          ...largeCardFragment
-          ...contentItemFragment
-        }
-      }
-    }
-  }
-  ${contentItemFragment}
-  ${largeCardFragment}
-`;
diff --git a/apolloschurchapp/src/tabs/home/getUserFeed.js b/apolloschurchapp/src/tabs/home/getUserFeed.js
index 2d7cb9a..e120403 100644
--- a/apolloschurchapp/src/tabs/home/getUserFeed.js
+++ b/apolloschurchapp/src/tabs/home/getUserFeed.js
@@ -1,11 +1,14 @@
 import gql from 'graphql-tag';
 
-import { contentItemFragment } from 'apolloschurchapp/src/content-single/getContentItem';
-import { largeCardFragment } from 'apolloschurchapp/src/ui/ContentCardConnected';
+import { CONTENT_ITEM_FRAGMENT } from 'apolloschurchapp/src/content-single/getContentItem';
+import { LARGE_CARD_FRAGMENT } from 'apolloschurchapp/src/ui/ContentCardConnected';
 
 export default gql`
-  query getUserFeed {
-    userFeed {
+  query getUserFeed($first: Int, $after: String) {
+    userFeed(first: $first, after: $after) {
+      pageInfo {
+        endCursor
+      }
       edges {
         node {
           ...largeCardFragment
@@ -14,6 +17,6 @@ export default gql`
       }
     }
   }
-  ${contentItemFragment}
-  ${largeCardFragment}
+  ${CONTENT_ITEM_FRAGMENT}
+  ${LARGE_CARD_FRAGMENT}
 `;
diff --git a/apolloschurchapp/src/tabs/home/home.tests.js b/apolloschurchapp/src/tabs/home/home.tests.js
index e9f98c5..96a5008 100644
--- a/apolloschurchapp/src/tabs/home/home.tests.js
+++ b/apolloschurchapp/src/tabs/home/home.tests.js
@@ -4,13 +4,13 @@ import renderer from 'react-test-renderer';
 import Providers from 'apolloschurchapp/src/Providers';
 
 import Home from './Home';
-import getUserFeed from './getUserFeed';
+import GET_USER_FEED from './getUserFeed';
 
 describe('User Home Feed Query', () => {
   it('should return correct query results', () => {
     const mock = {
       request: {
-        query: getUserFeed,
+        query: GET_USER_FEED,
       },
       result: {
         data: {
diff --git a/apolloschurchapp/src/tabs/tabBar.js b/apolloschurchapp/src/tabs/tabBar.js
index 0bdbfc3..80e2f0e 100644
--- a/apolloschurchapp/src/tabs/tabBar.js
+++ b/apolloschurchapp/src/tabs/tabBar.js
@@ -1,51 +1,21 @@
-import React from 'react';
 import { compose } from 'recompose';
-import { Platform, View } from 'react-native';
 import { BottomTabBar } from 'react-navigation-tabs';
-import { Query } from 'react-apollo';
-import gql from 'graphql-tag';
-import { get } from 'lodash';
 
-import { MediaPlayerSpacer } from 'apolloschurchapp/src/ui/MediaPlayer';
+import { withTabBarMediaSpacer } from '@apollosproject/ui-media-player';
 import { styled, withTheme } from '@apollosproject/ui-kit';
 
-const mediaPlayerIsVisibleQuery = gql`
-  query {
-    mediaPlayer @client {
-      isVisible
-    }
-  }
-`;
-
-const TabBarWrapper = styled(({ theme, mediaPlayerIsVisible }) => ({
-  backgroundColor: mediaPlayerIsVisible
-    ? theme.colors.screen
-    : theme.colors.paper,
-  ...Platform.select(theme.shadows.default),
-}))(View);
-
 const ThemedBottomTabBar = compose(
   withTheme(({ theme }) => ({
     showLabel: false,
     activeTintColor: theme.colors.secondary,
     inactiveTintColor: theme.colors.text.tertiary,
+    safeAreaInset: { bottom: 0 },
   })),
   styled(({ theme }) => ({
     borderTopWidth: 0,
     backgroundColor: theme.colors.transparent,
-  }))
+  })),
+  withTabBarMediaSpacer
 )(BottomTabBar);
 
-const TabBar = (props) => (
-  <Query query={mediaPlayerIsVisibleQuery}>
-    {({ data = {} }) => (
-      <TabBarWrapper mediaPlayerIsVisible={get(data, 'mediaPlayer.isVisible')}>
-        <MediaPlayerSpacer>
-          <ThemedBottomTabBar {...props} />
-        </MediaPlayerSpacer>
-      </TabBarWrapper>
-    )}
-  </Query>
-);
-
-export default TabBar;
+export default ThemedBottomTabBar;
diff --git a/apolloschurchapp/src/testing-control-panel/ChangeLivestream.js b/apolloschurchapp/src/testing-control-panel/ChangeLivestream.js
index 6723f30..6675653 100644
--- a/apolloschurchapp/src/testing-control-panel/ChangeLivestream.js
+++ b/apolloschurchapp/src/testing-control-panel/ChangeLivestream.js
@@ -4,12 +4,12 @@ import { Query } from 'react-apollo';
 import { get } from 'lodash';
 
 import { client } from 'apolloschurchapp/src/client';
-import getLiveStream from 'apolloschurchapp/src/live/getLiveStream';
+import GET_LIVE_STREAM from 'apolloschurchapp/src/live/getLiveStream';
 import TouchableCell from './TouchableCell';
 
 const changeLivestream = ({ isLive }) =>
   client.writeQuery({
-    query: getLiveStream,
+    query: GET_LIVE_STREAM,
     data: {
       liveStream: {
         __typename: 'LiveStream',
@@ -19,7 +19,7 @@ const changeLivestream = ({ isLive }) =>
   });
 
 const ChangeLivestream = () => (
-  <Query query={getLiveStream}>
+  <Query query={GET_LIVE_STREAM}>
     {({ data }) => {
       const isLive = get(data, 'liveStream.isLive', false);
       return (
diff --git a/apolloschurchapp/src/theme/icons/index.js b/apolloschurchapp/src/theme/icons/index.js
new file mode 100644
index 0000000..79e948a
--- /dev/null
+++ b/apolloschurchapp/src/theme/icons/index.js
@@ -0,0 +1,2 @@
+/* Export your custom icon components here. */
+export {};
diff --git a/apolloschurchapp/src/theme/index.js b/apolloschurchapp/src/theme/index.js
new file mode 100644
index 0000000..9ccfc4a
--- /dev/null
+++ b/apolloschurchapp/src/theme/index.js
@@ -0,0 +1,4 @@
+import theme from './theme';
+import * as customIcons from './icons';
+
+export { theme as default, customIcons };
diff --git a/apolloschurchapp/src/theme/theme.js b/apolloschurchapp/src/theme/theme.js
new file mode 100644
index 0000000..39e124f
--- /dev/null
+++ b/apolloschurchapp/src/theme/theme.js
@@ -0,0 +1,43 @@
+/* Add your custom theme definitions below. Anything that is supported in UI-Kit Theme can be
+ overridden and/or customized here! */
+
+/* Base colors.
+ * These get used by theme types (see /types directory) to color
+ * specific parts of the interface. For more control on how certain
+ * elements are colored, go there. The next level of control comes
+ * on a per-component basis with "overrides"
+ */
+// const colors = {};
+
+/* Base Typography sizing and fonts.
+ * To control speicfic styles used on different type components (like H1, H2, etc), see "overrides"
+ */
+// const typography = {};
+
+/* Responsive breakpoints */
+// export const breakpoints = {};
+
+/* Base sizing units. These are used to scale
+ * space, and size components relatively to one another.
+ */
+// export const sizing = {};
+
+/* Base alpha values. These are used to keep transparent values across the app consistant */
+// export const alpha = {};
+
+/* Overrides allow you to override the styles of any component styled using the `styled` HOC.
+ * For example, this component:
+ * const SomeComponent = styled({ margin: 10, padding: 20 }, 'SomeComponent');
+ * can have its styles overriden by including in overrides:
+ * {
+ *   overides: {
+ *     SomeComponent: {
+ *       margin: 5,
+ *       padding: 15,
+ *     },
+ *   },
+ * }
+ */
+// const overrides = {};
+
+export default {};
diff --git a/apolloschurchapp/src/ui/ContentCardConnected/index.js b/apolloschurchapp/src/ui/ContentCardConnected/index.js
index b64bdc6..8722331 100644
--- a/apolloschurchapp/src/ui/ContentCardConnected/index.js
+++ b/apolloschurchapp/src/ui/ContentCardConnected/index.js
@@ -4,9 +4,9 @@ import { Query } from 'react-apollo';
 import { get } from 'lodash';
 
 import { ContentCard, ErrorCard } from '@apollosproject/ui-kit';
-import getContentCard from './query';
+import GET_CONTENT_CARD from './query';
 
-export { tileCardFragment, largeCardFragment } from './query';
+export { TILE_CARD_FRAGMENT, LARGE_CARD_FRAGMENT } from './query';
 
 const ContentCardConnected = ({
   contentId,
@@ -18,7 +18,7 @@ const ContentCardConnected = ({
     return <ContentCard {...otherProps} isLoading tile={tile} />;
 
   return (
-    <Query query={getContentCard} variables={{ contentId, tile: !!tile }}>
+    <Query query={GET_CONTENT_CARD} variables={{ contentId, tile: !!tile }}>
       {({ data: { node = {} } = {}, loading, error }) => {
         if (error) return <ErrorCard error={error} />;
 
diff --git a/apolloschurchapp/src/ui/ContentCardConnected/query.js b/apolloschurchapp/src/ui/ContentCardConnected/query.js
index abefc12..eee426a 100644
--- a/apolloschurchapp/src/ui/ContentCardConnected/query.js
+++ b/apolloschurchapp/src/ui/ContentCardConnected/query.js
@@ -1,6 +1,6 @@
 import gql from 'graphql-tag';
 
-export const coverImageFragment = gql`
+export const COVER_IMAGE_FRAGMENT = gql`
   fragment coverImageFragment on ContentItem {
     coverImage {
       sources {
@@ -10,7 +10,7 @@ export const coverImageFragment = gql`
   }
 `;
 
-export const themeFragment = gql`
+export const THEME_FRAGMENT = gql`
   fragment themeFragment on ContentItem {
     theme {
       type
@@ -24,14 +24,14 @@ export const themeFragment = gql`
   }
 `;
 
-export const contentCardMetricsFragment = gql`
+export const CONTENT_CARD_METRICS_FRAGMENT = gql`
   fragment contentCardMetricsFragment on ContentItem {
     isLiked
     likedCount
   }
 `;
 
-export const baseCardFragment = gql`
+export const BASE_CARD_FRAGMENT = gql`
   fragment baseCardFragment on ContentItem {
     id
     __typename
@@ -41,12 +41,12 @@ export const baseCardFragment = gql`
     title
     summary
   }
-  ${contentCardMetricsFragment}
-  ${coverImageFragment}
-  ${themeFragment}
+  ${CONTENT_CARD_METRICS_FRAGMENT}
+  ${COVER_IMAGE_FRAGMENT}
+  ${THEME_FRAGMENT}
 `;
 
-export const tileCardFragment = gql`
+export const TILE_CARD_FRAGMENT = gql`
   fragment tileCardFragment on ContentItem {
     ... on ContentSeriesContentItem {
       id
@@ -64,20 +64,20 @@ export const tileCardFragment = gql`
       ...baseCardFragment
     }
   }
-  ${baseCardFragment}
-  ${themeFragment}
-  ${coverImageFragment}
-  ${contentCardMetricsFragment}
+  ${BASE_CARD_FRAGMENT}
+  ${THEME_FRAGMENT}
+  ${COVER_IMAGE_FRAGMENT}
+  ${CONTENT_CARD_METRICS_FRAGMENT}
 `;
 
-export const largeCardFragment = gql`
+export const LARGE_CARD_FRAGMENT = gql`
   fragment largeCardFragment on ContentItem {
     ...baseCardFragment
   }
-  ${baseCardFragment}
+  ${BASE_CARD_FRAGMENT}
 `;
 
-const getContentCard = gql`
+const GET_CONTENT_CARD = gql`
   query getContentCard($contentId: ID!, $tile: Boolean!) {
     node(id: $contentId) {
       id
@@ -86,8 +86,8 @@ const getContentCard = gql`
       ...largeCardFragment @skip(if: $tile)
     }
   }
-  ${tileCardFragment}
-  ${largeCardFragment}
+  ${TILE_CARD_FRAGMENT}
+  ${LARGE_CARD_FRAGMENT}
 `;
 
-export default getContentCard;
+export default GET_CONTENT_CARD;
diff --git a/apolloschurchapp/src/ui/ContentTableCard/ContentTableCard.stories.js b/apolloschurchapp/src/ui/ContentTableCard/ContentTableCard.stories.js
index 30bf74a..9287554 100644
--- a/apolloschurchapp/src/ui/ContentTableCard/ContentTableCard.stories.js
+++ b/apolloschurchapp/src/ui/ContentTableCard/ContentTableCard.stories.js
@@ -1,5 +1,5 @@
 import React from 'react';
-import { storiesOf } from '@storybook/react-native';
+import { storiesOf } from '@apollosproject/ui-storybook';
 import { H3 } from '@apollosproject/ui-kit';
 import ContentTableCard from '.';
 
diff --git a/apolloschurchapp/src/ui/ContentTableCard/ContentTableCardItem.stories.js b/apolloschurchapp/src/ui/ContentTableCard/ContentTableCardItem.stories.js
index b7ba6d2..6a0d4cb 100644
--- a/apolloschurchapp/src/ui/ContentTableCard/ContentTableCardItem.stories.js
+++ b/apolloschurchapp/src/ui/ContentTableCard/ContentTableCardItem.stories.js
@@ -1,5 +1,5 @@
 import React from 'react';
-import { storiesOf } from '@storybook/react-native';
+import { storiesOf } from '@apollosproject/ui-storybook';
 
 import ContentTableCardItem from './ContentTableCardItem';
 
diff --git a/apolloschurchapp/src/ui/ContentTableCard/index.js b/apolloschurchapp/src/ui/ContentTableCard/index.js
index 646b394..638f91c 100644
--- a/apolloschurchapp/src/ui/ContentTableCard/index.js
+++ b/apolloschurchapp/src/ui/ContentTableCard/index.js
@@ -29,8 +29,16 @@ class ContentTableCard extends PureComponent {
     header: PropTypes.element,
   };
 
+  handleOnPress = ({ action, relatedNode: { id } }) => {
+    const { onPress } = this.props;
+
+    if (action === 'READ_CONTENT') {
+      onPress({ id });
+    }
+  };
+
   render() {
-    const { onPress, isLoading, content, header: headerContent } = this.props;
+    const { isLoading, content, header: headerContent } = this.props;
 
     return (
       <Card>
@@ -41,10 +49,10 @@ class ContentTableCard extends PureComponent {
               isLoading={isLoading}
               key={item.id}
               id={item.id}
-              onPress={onPress}
-              label={item.parentChannel ? item.parentChannel.name : ''}
+              onPress={() => this.handleOnPress(item)}
+              label={item.subtitle || ''}
               title={item.title || ''}
-              imageSource={item.coverImage ? item.coverImage.sources : ''}
+              imageSource={item.image ? item.image.sources : ''}
             />
           ))}
         </Content>
diff --git a/apolloschurchapp/src/ui/LandingScreen/LandingScreen.stories.js b/apolloschurchapp/src/ui/LandingScreen/LandingScreen.stories.js
index 1d3c6e1..d9ebd3c 100644
--- a/apolloschurchapp/src/ui/LandingScreen/LandingScreen.stories.js
+++ b/apolloschurchapp/src/ui/LandingScreen/LandingScreen.stories.js
@@ -1,5 +1,5 @@
 import React from 'react';
-import { storiesOf } from '@storybook/react-native';
+import { storiesOf } from '@apollosproject/ui-storybook';
 import { GradientOverlayImage } from '@apollosproject/ui-kit';
 
 import LandingScreen from '.';
diff --git a/apolloschurchapp/src/ui/LandingScreen/index.js b/apolloschurchapp/src/ui/LandingScreen/index.js
index 9caed65..f929f81 100644
--- a/apolloschurchapp/src/ui/LandingScreen/index.js
+++ b/apolloschurchapp/src/ui/LandingScreen/index.js
@@ -11,7 +11,7 @@ import {
   BackgroundView,
 } from '@apollosproject/ui-kit';
 
-import Slide from '../Onboarding/Slide';
+import { Slide } from '@apollosproject/ui-onboarding';
 
 const Content = styled({
   flex: 1,
diff --git a/apolloschurchapp/src/ui/LikeButton/index.js b/apolloschurchapp/src/ui/LikeButton/index.js
index b6592b7..8272d96 100644
--- a/apolloschurchapp/src/ui/LikeButton/index.js
+++ b/apolloschurchapp/src/ui/LikeButton/index.js
@@ -7,12 +7,12 @@ import { Query, Mutation } from 'react-apollo';
 import Like from 'apolloschurchapp/src/ui/Like';
 import { AnalyticsConsumer } from '@apollosproject/ui-analytics';
 
-import updateLikeEntity from './updateLikeEntity';
-import getLikedContentItem from './getLikedContentItem';
+import UPDATE_LIKE_ENTITY from './updateLikeEntity';
+import GET_LIKED_CONTENT_ITEM from './getLikedContentItem';
 import updateLikedContent from './updateLikedContent';
 
 const GetLikeData = ({ itemId, children }) => (
-  <Query query={getLikedContentItem} variables={{ itemId }}>
+  <Query query={GET_LIKED_CONTENT_ITEM} variables={{ itemId }}>
     {({ data: { node = {} } = {}, loading }) => {
       const isLiked = loading ? false : get(node, 'isLiked') || false;
       return children({ isLiked, item: node });
@@ -34,11 +34,12 @@ const UpdateLikeStatus = ({
   <AnalyticsConsumer>
     {({ track }) => (
       <Mutation
-        mutation={updateLikeEntity}
+        mutation={UPDATE_LIKE_ENTITY}
         optimisticResponse={{
           updateLikeEntity: {
             id: itemId, // unknown at this time
             isLiked: !isLiked,
+            likedCount: 0, // field required but exact value is not needed
             __typename: item && item.__typename,
           },
         }}
@@ -52,7 +53,7 @@ const UpdateLikeStatus = ({
         ) => {
           updateLikedContent({ liked, cache, item });
           cache.writeQuery({
-            query: getLikedContentItem,
+            query: GET_LIKED_CONTENT_ITEM,
             data: {
               node: {
                 ...item,
diff --git a/apolloschurchapp/src/ui/LikeButton/updateLikeEntity.js b/apolloschurchapp/src/ui/LikeButton/updateLikeEntity.js
index eabd9e9..986d867 100644
--- a/apolloschurchapp/src/ui/LikeButton/updateLikeEntity.js
+++ b/apolloschurchapp/src/ui/LikeButton/updateLikeEntity.js
@@ -5,6 +5,7 @@ export default gql`
     updateLikeEntity(input: { nodeId: $itemId, operation: $operation }) {
       id
       isLiked
+      likedCount
     }
   }
 `;
diff --git a/apolloschurchapp/src/ui/LikeButton/updateLikedContent.js b/apolloschurchapp/src/ui/LikeButton/updateLikedContent.js
index c0d5978..1024864 100644
--- a/apolloschurchapp/src/ui/LikeButton/updateLikedContent.js
+++ b/apolloschurchapp/src/ui/LikeButton/updateLikedContent.js
@@ -1,15 +1,15 @@
-import getAllLikedContent from 'apolloschurchapp/src/tabs/connect/getLikedContent';
-import { contentItemFragment } from 'apolloschurchapp/src/content-single/getContentItem';
+import GET_ALL_LIKED_CONTENT from 'apolloschurchapp/src/tabs/connect/getLikedContent';
+import { CONTENT_ITEM_FRAGMENT } from 'apolloschurchapp/src/content-single/getContentItem';
 
 const addItemToLikedContentList = ({ cache, item, variables }) => {
   try {
     const data = cache.readQuery({
-      query: getAllLikedContent,
+      query: GET_ALL_LIKED_CONTENT,
       variables,
     });
     const fullItem = cache.readFragment({
       id: `${item.__typename}:${item.id}`,
-      fragment: contentItemFragment,
+      fragment: CONTENT_ITEM_FRAGMENT,
     });
     const newEdges = [
       fullItem,
@@ -19,7 +19,7 @@ const addItemToLikedContentList = ({ cache, item, variables }) => {
       node,
     }));
     cache.writeQuery({
-      query: getAllLikedContent,
+      query: GET_ALL_LIKED_CONTENT,
       variables,
       data: {
         ...data,
@@ -39,7 +39,7 @@ const addItemToLikedContentList = ({ cache, item, variables }) => {
 const removeItemFromLikedContentList = ({ cache, item, variables }) => {
   try {
     const data = cache.readQuery({
-      query: getAllLikedContent,
+      query: GET_ALL_LIKED_CONTENT,
       variables,
     });
 
@@ -48,7 +48,7 @@ const removeItemFromLikedContentList = ({ cache, item, variables }) => {
     );
 
     cache.writeQuery({
-      query: getAllLikedContent,
+      query: GET_ALL_LIKED_CONTENT,
       variables,
       data: {
         ...data,
diff --git a/apolloschurchapp/src/ui/MediaPlayer/AirPlayButton.js b/apolloschurchapp/src/ui/MediaPlayer/AirPlayButton.js
deleted file mode 100644
index f0ae504..0000000
--- a/apolloschurchapp/src/ui/MediaPlayer/AirPlayButton.js
+++ /dev/null
@@ -1,23 +0,0 @@
-import React from 'react';
-import { Platform, View } from 'react-native';
-import { AirPlayButton as AirPlayBtn } from 'react-native-airplay-btn';
-
-import { styled } from '@apollosproject/ui-kit';
-
-const Wrapper = styled(({ theme }) => ({
-  /* 40px is the size the airplay-btn package demands we use 😢 We add the same padding values to
-   * match the size of the other small icons on the screen */
-  width: 40 + theme.sizing.baseUnit * 1.25,
-  height: 40 + theme.sizing.baseUnit * 1.25,
-  justifyContent: 'center',
-  alignItems: 'center',
-}))(View);
-
-const AirPlayButton = () =>
-  Platform.OS === 'ios' ? (
-    <Wrapper>
-      <AirPlayBtn />
-    </Wrapper>
-  ) : null;
-
-export default AirPlayButton;
diff --git a/apolloschurchapp/src/ui/MediaPlayer/FullscreenControls.js b/apolloschurchapp/src/ui/MediaPlayer/FullscreenControls.js
deleted file mode 100644
index bbd9cb0..0000000
--- a/apolloschurchapp/src/ui/MediaPlayer/FullscreenControls.js
+++ /dev/null
@@ -1,291 +0,0 @@
-import React, { PureComponent } from 'react';
-import PropTypes from 'prop-types';
-import {
-  BackHandler,
-  StyleSheet,
-  Animated,
-  TouchableWithoutFeedback,
-  View,
-} from 'react-native';
-import { Query, withApollo } from 'react-apollo';
-import LinearGradient from 'react-native-linear-gradient';
-import SafeAreaView from 'react-native-safe-area-view';
-import { get } from 'lodash';
-import { compose } from 'recompose';
-
-import {
-  PaddedView,
-  withTheme,
-  withThemeMixin,
-  styled,
-  H4,
-  H6,
-  ButtonIcon,
-} from '@apollosproject/ui-kit';
-
-import { getControlState } from './queries';
-import {
-  play,
-  pause,
-  exitFullscreen,
-  showVideo,
-  hideVideo,
-  mute,
-  unmute,
-} from './mutations';
-import { ControlsConsumer } from './PlayheadState';
-import Seeker from './Seeker';
-import AirPlayButton from './AirPlayButton';
-
-const Background = withTheme(({ theme }) => ({
-  style: StyleSheet.absoluteFill,
-  colors: [
-    theme.colors.darkPrimary,
-    theme.colors.transparent,
-    theme.colors.darkPrimary,
-  ],
-  locations: [0, 0.4, 0.95],
-}))(LinearGradient);
-
-const UpperControls = styled({
-  flexDirection: 'row',
-  justifyContent: 'space-between',
-  alignItems: 'center',
-})(View);
-
-const LowerControls = styled({
-  position: 'absolute',
-  bottom: 0,
-  left: 0,
-  right: 0,
-})(PaddedView);
-
-const PlayControls = styled(({ theme }) => ({
-  flexDirection: 'row',
-  justifyContent: 'space-around',
-  alignItems: 'center',
-  paddingBottom: theme.sizing.baseUnit * 1.5,
-}))(PaddedView);
-
-const PlayHead = styled({ paddingVertical: 0 })(PaddedView);
-
-const Titles = styled({
-  flex: 1,
-  alignItems: 'center',
-  paddingVertical: 0,
-})(PaddedView);
-
-const Title = styled({ textAlign: 'center' })(H4);
-const Artist = styled({ textAlign: 'center' })(H6);
-
-const IconSm = withTheme(({ theme }) => ({
-  size: theme.sizing.baseUnit * 1.25,
-  iconPadding: theme.sizing.baseUnit * 1.25,
-}))(ButtonIcon);
-
-const IconMd = withTheme(({ theme }) => ({
-  size: theme.sizing.baseUnit * 1.875,
-  iconPadding: theme.sizing.baseUnit * 0.9375,
-}))(ButtonIcon);
-
-const IconLg = withTheme(({ theme }) => ({
-  size: theme.sizing.baseUnit * 3.125,
-  iconPadding: theme.sizing.baseUnit * 0.3125,
-}))(ButtonIcon);
-
-/**
- * FullscreenControls displays fading player controls
- */
-class FullscreenControls extends PureComponent {
-  static propTypes = {
-    client: PropTypes.shape({
-      mutate: PropTypes.func,
-    }),
-  };
-
-  state = {};
-
-  fader = new Animated.Value(1);
-
-  controlsVisible = true;
-
-  wasFullscreen = false;
-
-  open = Animated.spring(this.fader, {
-    toValue: 1,
-    useNativeDriver: true,
-  });
-
-  close = Animated.spring(this.fader, {
-    toValue: 0,
-    useNativeDriver: true,
-  });
-
-  constructor(...args) {
-    super(...args);
-    this.fader.addListener(({ value }) => {
-      this.controlsVisible = value > 0.05;
-    });
-  }
-
-  componentDidMount() {
-    this.backHandler = BackHandler.addEventListener('hardwareBackPress', () => {
-      if (this.wasFullscreen) {
-        this.handleClose();
-        return true;
-      }
-      return false;
-    });
-  }
-
-  componentWillUnmount() {
-    this.backHandler.remove();
-    if (this.closeTimeout) clearTimeout(this.closeTimeout);
-  }
-
-  handleOnScrubbing = ({ isScrubbing }) => {
-    this.setState({ isScrubbing });
-  };
-
-  handleClose = () => {
-    this.props.client.mutate({ mutation: exitFullscreen });
-  };
-
-  handlePlay = () => {
-    this.props.client.mutate({ mutation: play });
-  };
-
-  handlePause = () => {
-    this.props.client.mutate({ mutation: pause });
-  };
-
-  handleShowVideo = () => {
-    this.props.client.mutate({ mutation: showVideo });
-  };
-
-  handleHideVideo = () => {
-    this.props.client.mutate({ mutation: hideVideo });
-  };
-
-  handleMute = () => {
-    this.props.client.mutate({ mutation: mute });
-  };
-
-  handleUnMute = () => {
-    this.props.client.mutate({ mutation: unmute });
-  };
-
-  handleControlVisibility = () => {
-    if (this.closeTimeout) clearTimeout(this.closeTimeout);
-    this.open.stop();
-    this.close.stop();
-
-    if (
-      !this.state.isScrubbing &&
-      this.isVideo &&
-      this.isPlaying &&
-      this.wasFullscreen &&
-      (!this.animatingClosed && this.controlsVisible)
-    ) {
-      this.animatingClosed = true;
-      this.close.start(() => {
-        this.animatingClosed = false;
-      });
-    } else {
-      this.open.start(() => {
-        if (this.isVideo && this.isPlaying) this.queueClose();
-      });
-    }
-  };
-
-  queueClose = () => {
-    this.closeTimeout = setTimeout(this.handleControlVisibility, 5000);
-  };
-
-  renderPlayerControls = ({ isLoading, skip }) => (
-    <PlayControls>
-      <IconSm
-        onPress={this.isMuted ? this.handleUnMute : this.handleMute}
-        name={this.isMuted ? 'mute' : 'volume'}
-        disabled={isLoading}
-      />
-      <IconMd
-        onPress={() => skip(-30)}
-        name={'skip-back-thirty'}
-        disabled={isLoading}
-      />
-      <IconLg
-        onPress={this.isPlaying ? this.handlePause : this.handlePlay}
-        name={this.isPlaying ? 'pause' : 'play'}
-        disabled={isLoading}
-      />
-      <IconMd
-        onPress={() => skip(30)}
-        name={'skip-forward-thirty'}
-        disabled={isLoading}
-      />
-      <IconSm
-        onPress={this.isVideo ? this.handleHideVideo : this.handleShowVideo}
-        name={this.isVideo ? 'video' : 'video-off'}
-        disabled={isLoading}
-      />
-    </PlayControls>
-  );
-
-  renderFullscreenControls = ({ data: { mediaPlayer = {} } = {} }) => {
-    this.isVideo = get(mediaPlayer, 'showVideo');
-    this.isPlaying = mediaPlayer.isPlaying;
-    this.isMuted = mediaPlayer.muted;
-
-    if (
-      (mediaPlayer.isFullscreen && !this.wasFullscreen) ||
-      !this.isVideo ||
-      (!this.isPlaying || (this.isPlaying && !this.wasPlaying))
-    )
-      this.handleControlVisibility();
-
-    this.wasFullscreen = mediaPlayer.isFullscreen;
-    this.wasPlaying = mediaPlayer.isPlaying;
-
-    return (
-      <TouchableWithoutFeedback onPress={this.handleControlVisibility}>
-        <Animated.View
-          style={[StyleSheet.absoluteFill, { opacity: this.fader }]}
-        >
-          <Background>
-            <SafeAreaView
-              style={StyleSheet.absoluteFill}
-              forceInset={{ top: 'always', bottom: 'always' }}
-            >
-              <UpperControls>
-                <IconSm name="arrow-down" onPress={this.handleClose} />
-                <Titles>
-                  <Title>{get(mediaPlayer, 'currentTrack.title')}</Title>
-                  <Artist>{get(mediaPlayer, 'currentTrack.artist')}</Artist>
-                </Titles>
-                <AirPlayButton />
-              </UpperControls>
-              <LowerControls horizontal={false}>
-                <PlayHead>
-                  <Seeker onScrubbing={this.handleOnScrubbing} />
-                </PlayHead>
-                <ControlsConsumer>{this.renderPlayerControls}</ControlsConsumer>
-              </LowerControls>
-            </SafeAreaView>
-          </Background>
-        </Animated.View>
-      </TouchableWithoutFeedback>
-    );
-  };
-
-  render() {
-    return (
-      <Query query={getControlState}>{this.renderFullscreenControls}</Query>
-    );
-  }
-}
-
-export default compose(
-  withApollo,
-  withThemeMixin({ type: 'dark' })
-)(FullscreenControls);
diff --git a/apolloschurchapp/src/ui/MediaPlayer/FullscreenPlayer.js b/apolloschurchapp/src/ui/MediaPlayer/FullscreenPlayer.js
deleted file mode 100644
index ecc64e7..0000000
--- a/apolloschurchapp/src/ui/MediaPlayer/FullscreenPlayer.js
+++ /dev/null
@@ -1,236 +0,0 @@
-import React, { PureComponent } from 'react';
-import {
-  Animated,
-  View,
-  StyleSheet,
-  Dimensions,
-  PanResponder,
-  Platform,
-  StatusBar,
-} from 'react-native';
-import PropTypes from 'prop-types';
-import { Query, withApollo } from 'react-apollo';
-import { get } from 'lodash';
-
-import { styled } from '@apollosproject/ui-kit';
-
-import MiniControls, { MINI_PLAYER_HEIGHT } from './MiniControls';
-import FullscreenControls from './FullscreenControls';
-import VideoWindow from './VideoWindow';
-import MusicControls from './MusicControls';
-import { getFullVisibilityState } from './queries';
-import { exitFullscreen, goFullscreen } from './mutations';
-import { Provider, ControlsConsumer } from './PlayheadState';
-import MediaPlayerSafeLayout from './MediaPlayerSafeLayout';
-
-const VideoSizer = styled(({ isFullscreen, isVideo, theme }) =>
-  isFullscreen
-    ? StyleSheet.absoluteFill
-    : {
-        height: MINI_PLAYER_HEIGHT,
-        borderTopLeftRadius: theme.sizing.baseUnit / 2,
-        borderBottomLeftRadius: theme.sizing.baseUnit / 2,
-        overflow: 'hidden',
-        aspectRatio: isVideo ? 16 / 9 : 1,
-      }
-)(View);
-
-const FullscreenMediaPlayerSafeLayout = styled(({ isFullscreen, theme }) => ({
-  ...StyleSheet.absoluteFillObject,
-  margin: isFullscreen ? 0 : theme.sizing.baseUnit,
-}))(MediaPlayerSafeLayout);
-
-/**
- * FullscreenPlayer is a animating media player that transitions between
- * a mini state and a full screen state.
- * It is capable of playing any type of media that react-native-video supports.
- * It reads from local graphql state, and so you must use graphql mutations to play tracks.
- */
-class FullscreenPlayer extends PureComponent {
-  static propTypes = {
-    client: PropTypes.shape({ mutate: PropTypes.func }),
-  };
-
-  // Tracks the fullscreen animation
-  fullscreen = new Animated.Value(0);
-
-  // Tracks the measured height of the minicontrols. Used in other derived styles
-  miniControlHeight = new Animated.Value(MINI_PLAYER_HEIGHT);
-
-  // Tracks the measured height of the fullscreen cover. Used in other derived styles
-  coverHeight = new Animated.Value(Dimensions.get('window').height);
-
-  // Tracks the amount you drag the window
-  dragOffset = new Animated.Value(0);
-
-  fullScreenWithOffset = Animated.add(this.fullscreen, this.dragOffset);
-
-  // Self-invoking function because we end up with just one massic derived animated value that can be stored
-  coverTranslateY = (() => {
-    const translateYWhenCollapsed = Animated.subtract(
-      this.coverHeight,
-      this.miniControlHeight
-    );
-
-    const translateYSlope = Animated.multiply(
-      translateYWhenCollapsed,
-      Animated.multiply(this.fullScreenWithOffset, -1)
-    );
-
-    const translateY = Animated.add(translateYSlope, translateYWhenCollapsed);
-    return translateY;
-  })();
-
-  miniControlsTranslateY = (() => {
-    const translateYWhenExpanded = Animated.subtract(
-      this.coverHeight,
-      this.miniControlHeight
-    );
-    const translateYSlope = Animated.multiply(
-      translateYWhenExpanded,
-      Animated.multiply(this.fullScreenWithOffset, -1)
-    );
-    return translateYSlope;
-  })();
-
-  coverStyle = [
-    StyleSheet.absoluteFill,
-    {
-      transform: [{ translateY: this.coverTranslateY }],
-    },
-  ];
-
-  miniControlsAnimation = {
-    opacity: this.fullScreenWithOffset.interpolate({
-      inputRange: [0, 0.1],
-      outputRange: [1, 0],
-    }),
-  };
-
-  fullscreenControlsAnimation = [
-    StyleSheet.absoluteFill,
-    {
-      opacity: this.fullScreenWithOffset.interpolate({
-        inputRange: [0, 0.1],
-        outputRange: [0, 1],
-      }),
-    },
-  ];
-
-  panResponder = PanResponder.create({
-    onMoveShouldSetPanResponder: (event, { dx, dy }) =>
-      Math.abs(dy) > Math.abs(dx) && Math.abs(dy) > 10, // set pan responder only when we move enough in the Y-axis
-
-    onPanResponderMove: (event, { dy }) => {
-      // Calculate the amount you've offsetted the cover
-      const dragOffset = Math.min(0, -dy / Dimensions.get('window').height);
-      this.dragOffset.setValue(dragOffset);
-    },
-
-    onPanResponderRelease: (event, { dy, vy }) => {
-      const { height } = Dimensions.get('window');
-      const gestureVelocity = vy;
-      const gestureDistance = Math.abs(dy);
-
-      // Determine whether to continue the animation and exit fullscreen,
-      // or stay full screen and reset back up
-      let mutation = goFullscreen;
-      if (Math.abs(gestureVelocity > 0.5)) {
-        if (gestureVelocity > 0) {
-          mutation = exitFullscreen;
-        }
-      } else if (gestureDistance >= height / 2) {
-        mutation = exitFullscreen;
-      }
-
-      const dragOffset = Math.min(0, -dy / Dimensions.get('window').height);
-
-      if (mutation === goFullscreen) {
-        Animated.spring(this.dragOffset, {
-          toValue: 0,
-          useNativeDriver: true,
-        }).start();
-      } else {
-        this.dragOffset.setValue(0);
-        this.fullscreen.setValue(dragOffset);
-      }
-
-      this.props.client.mutate({ mutation });
-    },
-  });
-
-  handleCoverLayout = Animated.event([
-    { nativeEvent: { layout: { height: this.coverHeight } } },
-  ]);
-
-  handleMiniControlLayout = Animated.event([
-    { nativeEvent: { layout: { height: this.miniControlHeight } } },
-  ]);
-
-  renderCover = ({ data: { mediaPlayer = {} } = {} }) => {
-    const { isFullscreen = false } = mediaPlayer;
-
-    Animated.spring(this.fullscreen, {
-      toValue: isFullscreen ? 1 : 0,
-      useNativeDriver: true,
-      bounciness: 4,
-    }).start();
-
-    const coverFlow = [
-      <Animated.View
-        key="cover"
-        onLayout={this.handleCoverLayout}
-        style={StyleSheet.absoluteFill}
-        {...(Platform.OS !== 'android' && isFullscreen
-          ? this.panResponder.panHandlers
-          : {})}
-      >
-        <VideoSizer
-          isFullscreen={isFullscreen}
-          isVideo={get(mediaPlayer, 'currentTrack.isVideo')}
-        >
-          <ControlsConsumer>
-            {(controlHandlers) => <VideoWindow {...controlHandlers} />}
-          </ControlsConsumer>
-        </VideoSizer>
-        <Animated.View style={this.fullscreenControlsAnimation}>
-          <FullscreenControls />
-        </Animated.View>
-      </Animated.View>,
-      <MusicControls key="music-controls" />,
-    ];
-
-    if (!isFullscreen) {
-      coverFlow.push(
-        <Animated.View
-          key="mini-controls"
-          style={this.miniControlsAnimation}
-          onLayout={this.handleMiniControlLayout}
-        >
-          <MiniControls />
-        </Animated.View>
-      );
-    }
-
-    return (
-      <Animated.View style={this.coverStyle}>
-        <FullscreenMediaPlayerSafeLayout isFullscreen={isFullscreen}>
-          {isFullscreen ? <StatusBar hidden /> : null}
-          {coverFlow}
-        </FullscreenMediaPlayerSafeLayout>
-      </Animated.View>
-    );
-  };
-
-  render() {
-    return (
-      <Provider>
-        <Query query={getFullVisibilityState}>{this.renderCover}</Query>
-      </Provider>
-    );
-  }
-}
-
-const FullscreenPlayerWithData = withApollo(FullscreenPlayer);
-
-export { FullscreenPlayerWithData as default };
diff --git a/apolloschurchapp/src/ui/MediaPlayer/FullscreenPlayer.stories.js b/apolloschurchapp/src/ui/MediaPlayer/FullscreenPlayer.stories.js
deleted file mode 100644
index 6c889cc..0000000
--- a/apolloschurchapp/src/ui/MediaPlayer/FullscreenPlayer.stories.js
+++ /dev/null
@@ -1,81 +0,0 @@
-import React from 'react';
-import { storiesOf } from '@storybook/react-native';
-import { Mutation } from 'react-apollo';
-
-import {
-  ButtonLink,
-  CenteredView,
-  BackgroundView,
-  FlexedView,
-} from '@apollosproject/ui-kit';
-
-import { playVideoMutation } from './mutations';
-import MediaPlayer from '.';
-
-storiesOf('MediaPlayer', module).add('simple', () => (
-  <BackgroundView>
-    <FlexedView>
-      <CenteredView>
-        <Mutation mutation={playVideoMutation}>
-          {(play) => (
-            <ButtonLink
-              onPress={() =>
-                play({
-                  variables: {
-                    mediaSource: {
-                      uri:
-                        'http://embed.wistia.com/deliveries/0e364f7e6f6604384ece8a35905a53a864386e9f.bin',
-                      __typename: 'VideoMediaSource',
-                    },
-                    posterSources: [
-                      {
-                        uri:
-                          'https://apollosrock.newspring.cc/GetImage.ashx?guid=28ea9e81-09b4-411f-8ad5-741054837823',
-                        __typename: 'ImageMediaSource',
-                      },
-                    ],
-                    title: 'Holy Spirit',
-                    artist: 'Fuse Promos',
-                    isVideo: true,
-                  },
-                })
-              }
-            >
-              Play video
-            </ButtonLink>
-          )}
-        </Mutation>
-        <Mutation mutation={playVideoMutation}>
-          {(play) => (
-            <ButtonLink
-              onPress={() =>
-                play({
-                  variables: {
-                    mediaSource: {
-                      uri:
-                        'https://s3.amazonaws.com/ns.downloads/newspring/audio/newspring_sermons/2017/180513_HolySpirit_06-Message-AUDIO.mp3',
-                      __typename: 'AudioMediaSource',
-                    },
-                    posterSources: [
-                      {
-                        uri:
-                          'https://apollosrock.newspring.cc/GetImage.ashx?guid=28ea9e81-09b4-411f-8ad5-741054837823',
-                        __typename: 'ImageMediaSource',
-                      },
-                    ],
-                    title: 'The Greatest Evangelist',
-                    artist: 'Sermon',
-                    isVideo: false,
-                  },
-                })
-              }
-            >
-              Play audio
-            </ButtonLink>
-          )}
-        </Mutation>
-      </CenteredView>
-    </FlexedView>
-    <MediaPlayer />
-  </BackgroundView>
-));
diff --git a/apolloschurchapp/src/ui/MediaPlayer/FullscreenPlayer.tests.js b/apolloschurchapp/src/ui/MediaPlayer/FullscreenPlayer.tests.js
deleted file mode 100644
index 9cb08d3..0000000
--- a/apolloschurchapp/src/ui/MediaPlayer/FullscreenPlayer.tests.js
+++ /dev/null
@@ -1,72 +0,0 @@
-import React from 'react';
-
-import Providers from 'apolloschurchapp/src/Providers';
-import { renderWithApolloData } from 'apolloschurchapp/src/utils/testUtils';
-import { InMemoryCache } from 'apollo-cache-inmemory';
-
-import FullscreenPlayer from './FullscreenPlayer';
-
-// TODO: Get these tests to work.
-
-describe('the FullscreenPlayer component', () => {
-  it('should render miniplayer with video', async () => {
-    const cache = new InMemoryCache().restore({
-      ROOT_QUERY: {
-        mediaPlayer: {
-          currentTime: 0,
-          isFullscreen: false,
-          isVisible: false,
-          currentTrack: 'MediaPlayerTrack:0',
-          __typename: 'MediaPlayerState',
-        },
-      },
-      'MediaPlayerTrack:0': {
-        isVideo: true,
-        id: 0,
-        __typename: 'MediaPlayerTrack',
-      },
-    });
-    const tree = await renderWithApolloData(
-      <Providers cache={cache}>
-        <FullscreenPlayer />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-
-  it('should render miniplayer with audio', async () => {
-    const mediaPlayer = {
-      currentTrack: {
-        isVideo: false,
-      },
-      isVisible: true,
-      isFullscreen: false,
-    };
-    const tree = await renderWithApolloData(
-      <Providers
-        resolvers={{ Query: { mediaPlayer: Promise.resolve(mediaPlayer) } }}
-      >
-        <FullscreenPlayer />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-
-  it('should render fullscreen', async () => {
-    const mediaPlayer = {
-      currentTrack: {
-        isVideo: true,
-      },
-      isVisible: true,
-      isFullscreen: true,
-    };
-    const tree = await renderWithApolloData(
-      <Providers
-        resolvers={{ Query: { mediaPlayer: Promise.resolve(mediaPlayer) } }}
-      >
-        <FullscreenPlayer />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/ui/MediaPlayer/MediaPlayerSafeLayout.js b/apolloschurchapp/src/ui/MediaPlayer/MediaPlayerSafeLayout.js
deleted file mode 100644
index 57368b8..0000000
--- a/apolloschurchapp/src/ui/MediaPlayer/MediaPlayerSafeLayout.js
+++ /dev/null
@@ -1,20 +0,0 @@
-import React from 'react';
-import { View } from 'react-native';
-
-import { styled, LayoutConsumer } from '@apollosproject/ui-kit';
-
-const InnerView = styled(({ safeAreaInsets, isFullscreen = false, theme }) => ({
-  marginBottom: isFullscreen
-    ? 0
-    : Math.max(theme.sizing.baseUnit, safeAreaInsets.bottom * 0.75),
-}))(View);
-
-const MediaPlayerSafeLayout = (props) => (
-  <LayoutConsumer>
-    {({ safeAreaInsets }) => (
-      <InnerView safeAreaInsets={safeAreaInsets} {...props} />
-    )}
-  </LayoutConsumer>
-);
-
-export default MediaPlayerSafeLayout;
diff --git a/apolloschurchapp/src/ui/MediaPlayer/MediaPlayerSpacer.js b/apolloschurchapp/src/ui/MediaPlayer/MediaPlayerSpacer.js
deleted file mode 100644
index e88b769..0000000
--- a/apolloschurchapp/src/ui/MediaPlayer/MediaPlayerSpacer.js
+++ /dev/null
@@ -1,36 +0,0 @@
-import React from 'react';
-import { SafeAreaView } from 'react-native';
-import { Query } from 'react-apollo';
-import gql from 'graphql-tag';
-import { get } from 'lodash';
-
-import { styled } from '@apollosproject/ui-kit';
-import { MINI_PLAYER_HEIGHT } from 'apolloschurchapp/src/ui/MediaPlayer';
-
-import MediaPlayerSafeLayout from './MediaPlayerSafeLayout';
-
-const mediaPlayerIsVisibleQuery = gql`
-  query {
-    mediaPlayer @client {
-      isVisible
-    }
-  }
-`;
-
-const MediaPlayerSafeLayoutWithSpacing = styled({
-  paddingBottom: MINI_PLAYER_HEIGHT,
-})(MediaPlayerSafeLayout);
-
-const MediaPlayerSpacer = (props) => (
-  <Query query={mediaPlayerIsVisibleQuery}>
-    {({ data = {} }) =>
-      get(data, 'mediaPlayer.isVisible') ? (
-        <MediaPlayerSafeLayoutWithSpacing {...props} />
-      ) : (
-        <SafeAreaView {...props} />
-      )
-    }
-  </Query>
-);
-
-export default MediaPlayerSpacer;
diff --git a/apolloschurchapp/src/ui/MediaPlayer/MiniControls.js b/apolloschurchapp/src/ui/MediaPlayer/MiniControls.js
deleted file mode 100644
index 80bc783..0000000
--- a/apolloschurchapp/src/ui/MediaPlayer/MiniControls.js
+++ /dev/null
@@ -1,197 +0,0 @@
-import React, { Component } from 'react';
-import { Platform, View, Animated, StyleSheet } from 'react-native';
-import { Mutation, Query } from 'react-apollo';
-
-import {
-  withTheme,
-  Icon,
-  styled,
-  Touchable,
-  H5,
-  H6,
-  ButtonIcon,
-} from '@apollosproject/ui-kit';
-
-import Seeker from './Seeker';
-
-import { getControlState } from './queries';
-
-import {
-  goFullscreen as goFullscreenMutation,
-  dismiss as dismissMutation,
-  play as playMutation,
-  pause as pauseMutation,
-} from './mutations';
-
-const MINI_PLAYER_HEIGHT = 50;
-
-const DismissBackground = styled(({ theme }) => ({
-  ...StyleSheet.absoluteFillObject,
-  alignItems: 'center',
-  justifyContent: 'center',
-  backgroundColor: theme.colors.white,
-}))(View);
-
-const TrackInfoTouchable = styled({
-  flex: 1,
-})(Touchable);
-
-const TrackInfoTouchableBackground = styled(({ theme }) => ({
-  backgroundColor: theme.colors.white,
-  flex: 1,
-}))(View);
-
-const TrackInfo = styled(({ theme }) => ({
-  paddingHorizontal: theme.sizing.baseUnit / 2,
-  height: '100%',
-  justifyContent: 'center',
-  width: '100%',
-}))(View);
-
-const TrackName = styled(({ theme }) => ({
-  height: theme.sizing.baseUnit,
-  overflow: 'hidden',
-}))(H5);
-
-const TrackArtist = styled(({ theme }) => ({
-  height: theme.sizing.baseUnit,
-  marginTop: theme.helpers.rem(-0.15625),
-  color: theme.colors.text.tertiary,
-  // overflow: 'hidden',
-}))(H6);
-
-const Container = styled(({ theme }) => ({
-  height: MINI_PLAYER_HEIGHT,
-  flexDirection: 'row',
-  justifyContent: 'flex-start',
-  overflow: 'hidden',
-  borderRadius: theme.sizing.baseUnit / 2,
-}))(View);
-
-const Shadow = styled(({ theme }) => ({
-  borderRadius: theme.sizing.baseUnit / 2,
-  ...Platform.select(theme.shadows.default),
-}))(View);
-
-// ThumbnailSpacer is used to offset the text in MiniPlayer to make room for the video/music
-// thumbnail in a way that is dynamic to the MINI_PLAYER_HEIGHT
-const ThumbnailSpacer = styled(({ isVideo }) => ({
-  height: MINI_PLAYER_HEIGHT,
-  aspectRatio: isVideo ? 16 / 9 : 1,
-}))(View);
-
-const Controls = styled(({ theme }) => ({
-  position: 'absolute',
-  right: 0,
-  bottom: 0,
-  top: -1,
-  paddingHorizontal: theme.sizing.baseUnit / 2,
-  flexDirection: 'row',
-  justifyContent: 'flex-end',
-  alignItems: 'center',
-}))(View);
-
-const MiniSeeker = styled({
-  position: 'absolute',
-  left: 0,
-  right: 0,
-  bottom: 0,
-})(Seeker);
-
-const IconStyles = withTheme(({ theme }) => ({
-  fill: theme.colors.darkTertiary,
-  size: theme.sizing.baseUnit * 1.25,
-}));
-
-const StyledIcon = IconStyles(Icon);
-const StyledButtonIcon = IconStyles(ButtonIcon);
-
-/**
- * The MiniControls renders basic track info and a play/pause button.
- * Also displays a close button to close the player when the track is paused.
- */
-class MiniControls extends Component {
-  dismissAnimator = new Animated.Value(0);
-
-  shouldComponentUpdate() {
-    return false;
-  }
-
-  renderMiniControls = ({
-    data: {
-      mediaPlayer: {
-        currentTrack: { title, artist, isVideo } = {},
-        isPlaying = false,
-      } = {},
-    } = {},
-  }) => {
-    Animated.spring(this.dismissAnimator, {
-      toValue: isPlaying ? 0 : 0.8,
-      overshootClamping: true,
-      useNativeDriver: true,
-    }).start();
-    return (
-      <Mutation mutation={goFullscreenMutation}>
-        {(goFullscreen) => (
-          <Shadow>
-            <Container>
-              <Mutation mutation={dismissMutation}>
-                {(dismiss) => (
-                  <Touchable
-                    onPress={() => (isPlaying ? goFullscreen() : dismiss())}
-                  >
-                    <ThumbnailSpacer isVideo={isVideo}>
-                      <Animated.View
-                        style={[
-                          StyleSheet.absoluteFill,
-                          { opacity: this.dismissAnimator },
-                        ]}
-                      >
-                        <DismissBackground>
-                          <StyledIcon name="close" />
-                        </DismissBackground>
-                      </Animated.View>
-                    </ThumbnailSpacer>
-                  </Touchable>
-                )}
-              </Mutation>
-              <TrackInfoTouchableBackground>
-                <TrackInfoTouchable onPress={() => goFullscreen()}>
-                  <TrackInfo>
-                    <TrackName>{title}</TrackName>
-                    <TrackArtist>{artist}</TrackArtist>
-                  </TrackInfo>
-                </TrackInfoTouchable>
-              </TrackInfoTouchableBackground>
-              <Controls>
-                {isPlaying ? (
-                  <Mutation mutation={pauseMutation}>
-                    {(pause) => (
-                      <StyledButtonIcon
-                        name={'pause'}
-                        onPress={() => pause()}
-                      />
-                    )}
-                  </Mutation>
-                ) : (
-                  <Mutation mutation={playMutation}>
-                    {(play) => (
-                      <StyledButtonIcon name={'play'} onPress={() => play()} />
-                    )}
-                  </Mutation>
-                )}
-              </Controls>
-              <MiniSeeker minimal />
-            </Container>
-          </Shadow>
-        )}
-      </Mutation>
-    );
-  };
-
-  render() {
-    return <Query query={getControlState}>{this.renderMiniControls}</Query>;
-  }
-}
-
-export { MiniControls as default, MINI_PLAYER_HEIGHT };
diff --git a/apolloschurchapp/src/ui/MediaPlayer/MusicControls.js b/apolloschurchapp/src/ui/MediaPlayer/MusicControls.js
deleted file mode 100644
index 0bf66c6..0000000
--- a/apolloschurchapp/src/ui/MediaPlayer/MusicControls.js
+++ /dev/null
@@ -1,177 +0,0 @@
-import PropTypes from 'prop-types';
-import React, { Component } from 'react';
-import { Animated, Platform } from 'react-native';
-import MusicControl from 'react-native-music-control';
-import { withApollo, Query } from 'react-apollo';
-import { throttle, get } from 'lodash';
-
-import { PlayheadConsumer, ControlsConsumer } from './PlayheadState';
-import { getMusicControlState } from './queries';
-import { play, pause, updatePlayhead } from './mutations';
-
-class MusicControls extends Component {
-  static propTypes = {
-    currentTrack: PropTypes.shape({}),
-    currentTime: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
-    currentTimeAnimated: PropTypes.instanceOf(Animated.Value),
-    isPlaying: PropTypes.bool,
-    duration: PropTypes.number,
-    skip: PropTypes.func,
-    client: PropTypes.shape({ mutate: PropTypes.func }),
-  };
-
-  constructor(...args) {
-    super(...args);
-    // iOS is the only platform that displays currentTime and Android is notorious bad at handling
-    // the JS thread.
-    if (Platform.OS === 'ios') this.currentTimeSubscription();
-  }
-
-  componentDidUpdate(oldProps) {
-    if (this.props.duration > 1 && oldProps.duration !== this.props.duration) {
-      this.configureMusicControl();
-    }
-    if (this.props.currentTimeAnimated !== oldProps.currentTimeAnimated) {
-      if (this.listener) {
-        oldProps.currentTimeAnimated.removeListener(this.listener);
-      }
-      if (Platform.OS === 'ios') this.currentTimeSubscription();
-    }
-
-    if (
-      oldProps.currentTime !== this.props.currentTime ||
-      oldProps.isPlaying !== this.props.isPlaying
-    ) {
-      this.updatePlayback();
-    }
-  }
-
-  componentWillUnmount() {
-    MusicControl.enableBackgroundMode(false);
-    MusicControl.stopControl();
-    if (this.listener)
-      this.props.currentTimeAnimated.removeListener(this.listener);
-  }
-
-  currentTimeSubscription = () => {
-    this.listener = this.props.currentTimeAnimated.addListener(
-      throttle(({ value }) => {
-        MusicControl.updatePlayback({
-          state: this.props.isPlaying
-            ? MusicControl.STATE_PLAYING
-            : MusicControl.STATE_PAUSED,
-          elapsedTime: value,
-        });
-      }, 1000)
-    );
-  };
-
-  configureMusicControl = () => {
-    // Initialize MusicControl settings
-    MusicControl.enableBackgroundMode(true);
-
-    // Play
-    MusicControl.enableControl('play', true);
-    MusicControl.on('play', this.handleOnPlay);
-
-    // Pause/Stop
-    MusicControl.enableControl('pause', true);
-    MusicControl.enableControl('stop', false);
-    MusicControl.on('pause', this.handleOnPause);
-    MusicControl.on('stop', this.handleOnPause);
-
-    // Skip
-    MusicControl.enableControl('previousTrack', false);
-    MusicControl.enableControl('nextTrack', false);
-
-    // Seeking
-    if (this.props.skip) {
-      MusicControl.enableControl('skipForward', true);
-      MusicControl.enableControl('skipBackward', true);
-      MusicControl.on('skipForward', this.handleOnFastForward);
-      MusicControl.on('skipBackward', this.handleOnRewind);
-    }
-
-    // Scrubber
-    MusicControl.enableControl('seek', true); // Android
-    MusicControl.enableControl('changePlaybackPosition', true); // iOS
-    MusicControl.on('seek', this.handleOnSeek);
-    MusicControl.on('changePlaybackPosition', this.handleOnSeek);
-
-    // Remote (headphones) play/pause
-    MusicControl.enableControl('togglePlayPause', true);
-    MusicControl.on('togglePlayPause', () =>
-      this.props.isPlaying ? this.handleOnPause() : this.handleOnPlay()
-    );
-
-    // Remote (headphones) fast forward/rewind (iOS only) (disabled)
-    MusicControl.enableControl('seekForward', false);
-    MusicControl.enableControl('seekBackward', false);
-
-    // Swipe to dismiss native control (Android only)
-    MusicControl.enableControl('closeNotification', true, { when: 'paused' });
-
-    // Configure the visuals
-    const { currentTrack = {} } = this.props;
-    MusicControl.setNowPlaying({
-      title: currentTrack.title,
-      artist: currentTrack.artist,
-      artwork: get(currentTrack, 'posterSources[0].uri'),
-      elapsedTime: this.props.currentTime,
-      duration: this.props.duration,
-    });
-  };
-
-  updatePlayback = () => {
-    MusicControl.updatePlayback({
-      state: this.props.isPlaying
-        ? MusicControl.STATE_PLAYING
-        : MusicControl.STATE_PAUSED,
-      elapsedTime: this.props.currentTime,
-    });
-  };
-
-  handleOnPlay = () => this.props.client.mutate({ mutation: play });
-
-  handleOnPause = () => this.props.client.mutate({ mutation: pause });
-
-  handleOnFastForward = () => this.props.skip(15);
-
-  handleOnRewind = () => this.props.skip(-15);
-
-  handleOnSeek = (seekTo) =>
-    this.props.client.mutate({
-      mutation: updatePlayhead,
-      variables: {
-        currentTime: seekTo,
-      },
-    });
-
-  render() {
-    return null;
-  }
-}
-
-const MusicControlsState = (props) => (
-  <Query query={getMusicControlState}>
-    {({ data: { mediaPlayer = {} } = {} }) => (
-      <PlayheadConsumer>
-        {({ duration, currentTime }) => (
-          <ControlsConsumer>
-            {({ skip }) => (
-              <MusicControls
-                {...props}
-                currentTimeAnimated={currentTime}
-                duration={duration}
-                skip={skip}
-                {...mediaPlayer}
-              />
-            )}
-          </ControlsConsumer>
-        )}
-      </PlayheadConsumer>
-    )}
-  </Query>
-);
-
-export default withApollo(MusicControlsState);
diff --git a/apolloschurchapp/src/ui/MediaPlayer/PlayheadState.js b/apolloschurchapp/src/ui/MediaPlayer/PlayheadState.js
deleted file mode 100644
index ed10ed7..0000000
--- a/apolloschurchapp/src/ui/MediaPlayer/PlayheadState.js
+++ /dev/null
@@ -1,124 +0,0 @@
-import React, { createContext, Component } from 'react';
-import { Animated } from 'react-native';
-import { Query, withApollo } from 'react-apollo';
-import PropTypes from 'prop-types';
-
-import { getMediaPlayerIsPlaying } from './queries';
-import { updatePlayhead } from './mutations';
-
-const defaultState = {
-  duration: 1,
-  currentTime: new Animated.Value(0),
-  playableDuration: new Animated.Value(1),
-  seekableDuration: new Animated.Value(1),
-  isLoading: true,
-};
-
-const controlState = () => {};
-
-const PlayheadContext = createContext(defaultState);
-
-const PlayheadControls = createContext(controlState);
-
-class ProviderWithoutApollo extends Component {
-  static propTypes = {
-    client: PropTypes.shape({
-      mutate: PropTypes.func,
-    }),
-  };
-
-  state = defaultState;
-
-  get controlState() {
-    return {
-      onLoad: this.handleOnLoad,
-      onLoadStart: this.handleOnLoadStart,
-      // onBuffer: this.handleOnBuffer,
-      onProgress: this.handleOnProgress,
-      skip: this.skip,
-      isLoading: this.state.isLoading,
-      // isBuffering: this.state.isBuffering,
-    };
-  }
-
-  handleOnLoad = ({ duration }) => {
-    this.setState({ duration, isLoading: false });
-    this.state.currentTime.setValue(0);
-    this.state.playableDuration.setValue(0);
-    this.state.seekableDuration.setValue(0);
-  };
-
-  handleOnLoadStart = () => {
-    this.setState({ isLoading: true });
-  };
-
-  // handleOnBuffer = ({ isBuffering }) => {
-  //   this.setState({ isBuffering }); // bool value https://github.com/react-native-community/react-native-video/blob/2c391f580702f9579a0ebd01c6e97415feda928b/ios/Video/RCTVideo.m#L636-L643
-  // };
-
-  handleOnProgress = ({ currentTime, playableDuration, seekableDuration }) => {
-    if (!this.seekingTo || Math.abs(this.seekingTo - currentTime) < 1) {
-      // when seeking, only update `currentTime` after the seek has finished
-      this.seekingTo = null;
-      this.lastCurrentTime = currentTime;
-      this.state.currentTime.setValue(currentTime);
-    }
-    this.state.playableDuration.setValue(playableDuration);
-    this.state.seekableDuration.setValue(seekableDuration);
-  };
-
-  handlePause = () => {
-    this.props.client.mutate({
-      mutation: updatePlayhead,
-      variables: {
-        currentTime: this.lastCurrentTime,
-      },
-    });
-  };
-
-  skip = async (secondsToSkip) => {
-    if (this.lastCurrentTime === undefined) return;
-    const currentTime = Math.min(
-      Math.max(this.lastCurrentTime + secondsToSkip, 0),
-      this.state.duration
-    );
-
-    await this.props.client.mutate({
-      mutation: updatePlayhead,
-      variables: {
-        currentTime,
-      },
-    });
-
-    this.seekingTo = currentTime;
-    this.state.currentTime.setValue(currentTime); // immediately set the playhead value so progress bar doesn't jump around
-  };
-
-  renderProviders = ({
-    data: { mediaPlayer: { isPlaying = false } = {} } = {},
-  }) => {
-    if (!isPlaying && this.wasPlaying) {
-      this.handlePause();
-    }
-    this.wasPlaying = isPlaying;
-
-    return (
-      <PlayheadControls.Provider value={this.controlState}>
-        <PlayheadContext.Provider value={this.state} {...this.props} />
-      </PlayheadControls.Provider>
-    );
-  };
-
-  render() {
-    return (
-      <Query query={getMediaPlayerIsPlaying}>{this.renderProviders}</Query>
-    );
-  }
-}
-
-const Provider = withApollo(ProviderWithoutApollo);
-
-const { Consumer: PlayheadConsumer } = PlayheadContext;
-const { Consumer: ControlsConsumer } = PlayheadControls;
-
-export { Provider, PlayheadConsumer, ControlsConsumer };
diff --git a/apolloschurchapp/src/ui/MediaPlayer/Seeker/Timestamp.js b/apolloschurchapp/src/ui/MediaPlayer/Seeker/Timestamp.js
deleted file mode 100644
index ab33167..0000000
--- a/apolloschurchapp/src/ui/MediaPlayer/Seeker/Timestamp.js
+++ /dev/null
@@ -1,95 +0,0 @@
-import React, { PureComponent } from 'react';
-import { Animated } from 'react-native';
-import PropTypes from 'prop-types';
-
-import { H6, styled } from '@apollosproject/ui-kit';
-
-const TimeText = styled({
-  width: 50,
-  textAlign: 'center',
-  alignItems: 'center',
-})(H6);
-
-/**
- * Displays a MM:SS formatted timestamp from either a number or Animate.Value in seconds
- */
-class Timestamp extends PureComponent {
-  static propTypes = {
-    time: PropTypes.oneOfType([
-      PropTypes.number,
-      PropTypes.instanceOf(Animated.Value),
-    ]),
-    offset: PropTypes.instanceOf(Animated.Value),
-  };
-
-  state = {
-    time: 0,
-    offset: 0,
-  };
-
-  constructor(props) {
-    super(props);
-    if (typeof props.time === 'number') {
-      this.state.time = props.time;
-    } else {
-      this.listen(props);
-    }
-  }
-
-  componentWillUpdate(newProps) {
-    if (
-      newProps.time !== this.props.time ||
-      newProps.offset !== this.props.offset
-    ) {
-      this.listen(newProps);
-    }
-  }
-
-  listen = ({ time = 0, offset = 0 }) => {
-    if (this.listener) this.props.time.removeListener(this.listener);
-    if (this.offsetListener) {
-      this.props.offset.removeListener(this.offsetListener);
-    }
-
-    if (!time.addListener) {
-      this.setState({ time });
-    } else {
-      this.listener = time.addListener(({ value }) =>
-        this.setState({ time: value })
-      );
-    }
-
-    if (!offset.addListener) {
-      this.setState({ offset });
-    } else if (offset) {
-      this.offsetListener = offset.addListener(({ value }) =>
-        this.setState({ offset: value })
-      );
-    }
-  };
-
-  timestamp = (time) => {
-    // Hours, minutes and seconds
-    const hrs = Math.floor(time / 3600);
-    const mins = Math.floor((time % 3600) / 60);
-    const secs = time % 60;
-
-    let timestamp = '';
-
-    if (hrs > 0) {
-      timestamp += `${hrs}:${mins < 10 ? '0' : ''}`;
-    }
-
-    timestamp += `${mins}:${secs < 10 ? '0' : ''}`;
-    timestamp += `${Math.round(secs)}`;
-    return timestamp;
-  };
-
-  render() {
-    return (
-      <TimeText>{this.timestamp(this.state.time + this.state.offset)}</TimeText>
-    );
-  }
-}
-
-export default Timestamp;
diff --git a/apolloschurchapp/src/ui/MediaPlayer/Seeker/index.js b/apolloschurchapp/src/ui/MediaPlayer/Seeker/index.js
deleted file mode 100644
index 23f74ac..0000000
--- a/apolloschurchapp/src/ui/MediaPlayer/Seeker/index.js
+++ /dev/null
@@ -1,216 +0,0 @@
-import React, { PureComponent } from 'react';
-import { PanResponder, Animated, View, StyleSheet } from 'react-native';
-import PropTypes from 'prop-types';
-
-import { styled, withTheme } from '@apollosproject/ui-kit';
-
-import { PlayheadConsumer, ControlsConsumer } from '../PlayheadState';
-import Timestamp from './Timestamp';
-
-const Container = styled({
-  width: '100%',
-  flexDirection: 'row',
-  justifyContent: 'space-between',
-  alignItems: 'center',
-})(View);
-
-const TrackContainer = styled(({ minimal, knobSize }) => ({
-  height: knobSize / 2,
-  flexGrow: 1,
-  justifyContent: 'center',
-  paddingTop: minimal ? 20 : knobSize / 2,
-  paddingBottom: minimal ? 0 : knobSize / 2,
-}))(View);
-
-const Track = styled(({ theme, minimal, knobSize }) => ({
-  height: knobSize / 2,
-  overflow: 'hidden',
-  borderRadius: minimal ? 0 : knobSize / 2,
-  backgroundColor: minimal
-    ? theme.colors.transparent
-    : theme.colors.darkSecondary,
-}))(View);
-
-const ProgressBar = styled(({ theme }) => ({
-  height: theme.sizing.baseUnit,
-  backgroundColor: theme.colors.secondary,
-}))(View);
-
-const Knob = styled(({ theme, knobSize }) => ({
-  height: knobSize,
-  width: knobSize,
-  position: 'absolute',
-  right: 0,
-  elevation: 2,
-  borderRadius: knobSize,
-  backgroundColor: theme.colors.text.primary,
-}))(View);
-
-/**
- * Animated Seeker component.
- * Depends on `PlayheadState`, so you don't pass it any props directly,
- * but must be rendered within a `<MediaPlayer/>` component
- */
-class Seeker extends PureComponent {
-  static propTypes = {
-    minimal: PropTypes.bool, // The only prop you need to pass - switches to a minimal version (line instead of bar)
-    currentTime: PropTypes.any, // eslint-disable-line
-    duration: PropTypes.any, // eslint-disable-line
-    style: PropTypes.any, // eslint-disable-line
-    onScrubbing: PropTypes.func,
-    skip: PropTypes.func,
-    knobSize: PropTypes.number, // defaults to theme.sizing.baseUnit / 1.5  (12px)
-  };
-
-  isSeeking = false;
-
-  timeAtSeekingStart = 0;
-
-  state = {
-    width: 0, // the width of the seeker bar
-  };
-
-  offsetDriver = new Animated.Value(0); // Used to track pixel offset when seeking
-
-  offsetTimeDriver = new Animated.Value(0); // Used to track time offset when seeking
-
-  panResponder = PanResponder.create({
-    onStartShouldSetPanResponder: () => true,
-    onPanResponderGrant: () => {
-      // Using `stopAnimation` only to get the currentTime value
-      this.props.currentTime.stopAnimation((value) => {
-        this.isSeeking = true;
-        this.timeAtSeekingStart = value;
-      });
-    },
-    onPanResponderMove: (e, { dx }) => {
-      // Calculate the pixel offset and apply it to the offsetDriver
-      let offset = dx;
-      const progressAtStart = this.timeAtSeekingStart / this.props.duration;
-      const positionAtStart = progressAtStart * this.state.width;
-      offset = Math.min(this.state.width - positionAtStart, offset);
-      offset = Math.max(-positionAtStart, offset);
-      this.offsetDriver.setValue(offset);
-
-      // Calculate the time offset and apply it to the offsetTimeDriver
-      const moveAmount = offset / this.state.width;
-      const moveAmountInTime = moveAmount * this.props.duration;
-      this.offsetTimeDriver.setValue(moveAmountInTime);
-
-      if (this.props.onScrubbing) this.props.onScrubbing({ isScrubbing: true });
-    },
-    onPanResponderRelease: async (e, { dx }) => {
-      // Calculate the amount in time we've moved, and skip that duration
-      const moveAmount = dx / this.state.width;
-      const moveAmountInTime = moveAmount * this.props.duration;
-      await this.props.skip(moveAmountInTime);
-
-      // Reset state
-      this.offsetDriver.setValue(0);
-      this.offsetTimeDriver.setValue(0);
-      this.isSeeking = false;
-      this.timeAtSeekingStart = 0;
-
-      if (this.props.onScrubbing)
-        this.props.onScrubbing({ isScrubbing: false });
-    },
-  });
-
-  // Calculate the real offset position of the colored track bar
-  // To be able to useNativeDriver, the trackbar is always the full-width, and we animate its X position
-  get trackBarOffset() {
-    const progress = Animated.divide(
-      this.isSeeking ? this.timeAtSeekingStart : this.props.currentTime,
-      this.props.duration
-    );
-
-    const progressInvert = Animated.subtract(1, progress);
-    const widthInvert = Animated.multiply(-1, this.state.width);
-    const position = Animated.multiply(progressInvert, widthInvert);
-    return Animated.add(position, this.offsetDriver);
-  }
-
-  // the "knob" is on top of the trackbar, the piece of UI you can grab and move around
-  get knobStyles() {
-    return [
-      StyleSheet.absoluteFill,
-      {
-        transform: [{ translateX: this.trackBarOffset }],
-      },
-    ];
-  }
-
-  handleOnLayout = ({
-    nativeEvent: {
-      layout: { width },
-    },
-  }) =>
-    this.setState({
-      /*
-       * Adjust offset width to adjust for knobSize so Knob always appears on the track. Knob is
-       * hidden when in a minimal state (miniplayer) we only make this adjustment when necessary.
-       */
-      width: this.props.minimal ? width : width - this.props.knobSize,
-    });
-
-  renderProgress = () => (
-    <Animated.View
-      style={[
-        StyleSheet.absoluteFill,
-        {
-          transform: [{ translateX: this.trackBarOffset }],
-        },
-      ]}
-    >
-      <ProgressBar />
-    </Animated.View>
-  );
-
-  render() {
-    return (
-      <Container style={this.props.style}>
-        {!this.props.minimal ? (
-          <Timestamp
-            time={this.props.currentTime}
-            offset={this.offsetTimeDriver}
-          />
-        ) : null}
-        <TrackContainer
-          minimal={this.props.minimal}
-          knobSize={this.props.knobSize}
-        >
-          <Track
-            onLayout={this.handleOnLayout}
-            minimal={this.props.minimal}
-            knobSize={this.props.knobSize}
-          >
-            {this.renderProgress()}
-          </Track>
-          <Animated.View style={this.knobStyles}>
-            {!this.props.minimal ? (
-              <Knob
-                knobSize={this.props.knobSize}
-                {...this.panResponder.panHandlers}
-              />
-            ) : null}
-          </Animated.View>
-        </TrackContainer>
-        {!this.props.minimal ? <Timestamp time={this.props.duration} /> : null}
-      </Container>
-    );
-  }
-}
-
-const SeekerWithState = withTheme(({ theme: { sizing: { baseUnit } } }) => ({
-  knobSize: Math.floor(baseUnit / 1.33),
-}))((props) => (
-  <ControlsConsumer>
-    {(controls) => (
-      <PlayheadConsumer>
-        {(playhead) => <Seeker {...props} {...playhead} {...controls} />}
-      </PlayheadConsumer>
-    )}
-  </ControlsConsumer>
-));
-
-export default SeekerWithState;
diff --git a/apolloschurchapp/src/ui/MediaPlayer/VideoWindow.js b/apolloschurchapp/src/ui/MediaPlayer/VideoWindow.js
deleted file mode 100644
index 4b07c38..0000000
--- a/apolloschurchapp/src/ui/MediaPlayer/VideoWindow.js
+++ /dev/null
@@ -1,152 +0,0 @@
-import React, { PureComponent } from 'react';
-import PropTypes from 'prop-types';
-import { Query, withApollo } from 'react-apollo';
-import { get } from 'lodash';
-import Video from 'react-native-video';
-import { Animated, View, StyleSheet } from 'react-native';
-
-import { styled, ActivityIndicator } from '@apollosproject/ui-kit';
-
-import { getVideoState } from './queries';
-import { pause as pauseMutation, pauseAndRestart } from './mutations';
-
-const styles = StyleSheet.create({
-  animatedPosterImage: {
-    ...StyleSheet.absoluteFillObject,
-    resizeMode: 'cover',
-  },
-});
-
-const Background = styled(({ theme }) => ({
-  ...StyleSheet.absoluteFillObject,
-  backgroundColor: theme.colors.black,
-}))(View);
-
-/**
- * The VideoWindow displays the actual react-native-video component.
- * It's responsible for loading the video, and updating progress + duration in state.
- */
-class VideoWindow extends PureComponent {
-  static propTypes = {
-    client: PropTypes.shape({
-      mutate: PropTypes.func,
-    }),
-    onProgress: PropTypes.func,
-    onLoad: PropTypes.func,
-    onLoadStart: PropTypes.func,
-    // onBuffer: PropTypes.func,
-  };
-
-  loadingOverlay = new Animated.Value(1);
-
-  loadingStyle = [StyleSheet.absoluteFill, { opacity: this.loadingOverlay }];
-
-  handleOnEnd = async () => {
-    this.props.client.mutate({ mutation: pauseAndRestart });
-  };
-
-  handlePause = () => {
-    this.props.client.mutate({ mutation: pauseMutation });
-  };
-
-  handleOnProgress = (progress) => {
-    if (this.props.onProgress) this.props.onProgress(progress);
-  };
-
-  handleOnError = () => {
-    this.handlePause();
-  };
-
-  handleOnLoad = ({ duration }) => {
-    this.showLoadingIndicator(false);
-
-    if (this.props.onLoad) this.props.onLoad({ duration });
-  };
-
-  handleOnLoadStart = () => {
-    if (this.props.onLoadStart) this.props.onLoadStart();
-    this.showLoadingIndicator(true);
-  };
-
-  handleOnBuffer = ({ isBuffering }) => {
-    // if (this.props.onBuffer) this.props.onBuffer({ isBuffering });
-    this.showLoadingIndicator(!isBuffering);
-  };
-
-  setVideoRef = (element) => {
-    this.video = element;
-  };
-
-  showLoadingIndicator(isLoading) {
-    if (isLoading) {
-      Animated.spring(this.loadingOverlay, {
-        toValue: 1,
-        useNativeDriver: true,
-      });
-    } else {
-      Animated.spring(this.loadingOverlay, {
-        toValue: 0,
-        useNativeDriver: true,
-      }).start();
-    }
-  }
-
-  renderVideo = ({ data: { mediaPlayer = {} } = {} }) => {
-    if (!get(mediaPlayer, 'currentTrack.mediaSource')) return null;
-
-    const { currentTime } = mediaPlayer;
-    if (currentTime && currentTime !== this.lastCurrentTime && this.video) {
-      this.video.seek(currentTime);
-    }
-
-    this.lastCurrentTime = currentTime;
-
-    return [
-      <Video
-        ref={this.setVideoRef}
-        source={mediaPlayer.currentTrack.mediaSource}
-        paused={!mediaPlayer.isPlaying}
-        audioOnly={!mediaPlayer.showVideo}
-        ignoreSilentSwitch={'ignore'}
-        allowsExternalPlayback
-        playInBackground
-        playWhenInactive
-        onAudioBecomingNoisy={this.handlePause}
-        onEnd={this.handleOnEnd}
-        onError={this.handleOnError}
-        resizeMode={'contain'}
-        onLoadStart={this.handleOnLoadStart}
-        onLoad={this.handleOnLoad}
-        // onBuffer={this.handleOnBuffer}
-        onProgress={this.handleOnProgress}
-        style={StyleSheet.absoluteFill}
-        volume={mediaPlayer.muted ? 0 : 1}
-        repeat
-        key="video"
-      />,
-      // there's currently a bug on android where react-native-video's poster doesn't ever go away
-      // So we use our own image copmonent...which is nicer cuz we can show a nice fading animation too!
-      <Animated.Image
-        key="poster"
-        style={[
-          styles.animatedPosterImage,
-          mediaPlayer.showVideo ? this.loadingStyle : {},
-        ]}
-        source={mediaPlayer.currentTrack.posterSources}
-      />,
-    ];
-  };
-
-  render() {
-    return (
-      <Background>
-        <Query query={getVideoState}>{this.renderVideo}</Query>
-        <Animated.View style={this.loadingStyle}>
-          <ActivityIndicator size={'large'} />
-        </Animated.View>
-      </Background>
-    );
-  }
-}
-
-export default withApollo(VideoWindow);
diff --git a/apolloschurchapp/src/ui/MediaPlayer/index.js b/apolloschurchapp/src/ui/MediaPlayer/index.js
deleted file mode 100644
index 2264866..0000000
--- a/apolloschurchapp/src/ui/MediaPlayer/index.js
+++ /dev/null
@@ -1,29 +0,0 @@
-import React, { Component } from 'react';
-import { Query } from 'react-apollo';
-
-import FullscreenPlayer from './FullscreenPlayer';
-
-import { getMediaPlayerVisibility } from './queries';
-
-export { MINI_PLAYER_HEIGHT } from './MiniControls';
-export MediaPlayerSpacer from './MediaPlayerSpacer';
-
-/**
- * Selectively renders FullscreenPlayer component is MediaPlayer is visible
- */
-class MediaPlayer extends Component {
-  shouldComponentUpdate() {
-    return false; // 🚀
-  }
-
-  renderPlayer = ({ data = {} }) => {
-    if (!data.mediaPlayer || !data.mediaPlayer.isVisible) return null;
-    return <FullscreenPlayer />;
-  };
-
-  render() {
-    return <Query query={getMediaPlayerVisibility}>{this.renderPlayer}</Query>;
-  }
-}
-
-export default MediaPlayer;
diff --git a/apolloschurchapp/src/ui/MediaPlayer/mutations.js b/apolloschurchapp/src/ui/MediaPlayer/mutations.js
deleted file mode 100644
index 3eb3b2d..0000000
--- a/apolloschurchapp/src/ui/MediaPlayer/mutations.js
+++ /dev/null
@@ -1,101 +0,0 @@
-import gql from 'graphql-tag';
-
-const playVideoMutation = gql`
-  mutation playVideo(
-    $mediaSource: String!
-    $posterSources: String
-    $title: String
-    $artist: String
-    $isVideo: Boolean
-  ) {
-    mediaPlayerPlayNow(
-      mediaSource: $mediaSource
-      posterSources: $posterSources
-      title: $title
-      artist: $artist
-      isVideo: $isVideo
-    ) @client
-  }
-`;
-
-const goFullscreen = gql`
-  mutation {
-    mediaPlayerUpdateState(isFullscreen: true) @client
-  }
-`;
-
-const play = gql`
-  mutation {
-    mediaPlayerUpdateState(isPlaying: true) @client
-  }
-`;
-
-const pause = gql`
-  mutation {
-    mediaPlayerUpdateState(isPlaying: false) @client
-  }
-`;
-
-const dismiss = gql`
-  mutation {
-    mediaPlayerUpdateState(isPlaying: false, isVisible: false) @client
-  }
-`;
-
-const pauseAndRestart = gql`
-  mutation pause {
-    mediaPlayerUpdateState(isPlaying: false) @client
-    mediaPlayerSetPlayhead(currentTime: 0) @client
-  }
-`;
-
-const exitFullscreen = gql`
-  mutation {
-    mediaPlayerUpdateState(isFullscreen: false) @client
-  }
-`;
-
-const mute = gql`
-  mutation {
-    mediaPlayerUpdateState(muted: true) @client
-  }
-`;
-
-const unmute = gql`
-  mutation {
-    mediaPlayerUpdateState(muted: false) @client
-  }
-`;
-
-const showVideo = gql`
-  mutation {
-    mediaPlayerUpdateState(showVideo: true) @client
-  }
-`;
-
-const hideVideo = gql`
-  mutation {
-    mediaPlayerUpdateState(showVideo: false) @client
-  }
-`;
-
-const updatePlayhead = gql`
-  mutation mediaPlayerSetPlayhead($currentTime: Float) {
-    mediaPlayerSetPlayhead(currentTime: $currentTime) @client
-  }
-`;
-
-export {
-  pauseAndRestart,
-  playVideoMutation,
-  goFullscreen,
-  play,
-  pause,
-  dismiss,
-  exitFullscreen,
-  updatePlayhead,
-  mute,
-  unmute,
-  showVideo,
-  hideVideo,
-};
diff --git a/apolloschurchapp/src/ui/MediaPlayer/queries.js b/apolloschurchapp/src/ui/MediaPlayer/queries.js
deleted file mode 100644
index b56957a..0000000
--- a/apolloschurchapp/src/ui/MediaPlayer/queries.js
+++ /dev/null
@@ -1,126 +0,0 @@
-import gql from 'graphql-tag';
-
-const getMediaPlayerVisibility = gql`
-  query mediaPlayerVisibility {
-    mediaPlayer @client {
-      isVisible
-    }
-  }
-`;
-
-const getMediaPlayerIsPlaying = gql`
-  query mediaPlayerVisibility {
-    mediaPlayer @client {
-      isPlaying
-    }
-  }
-`;
-
-const getFullVisibilityState = gql`
-  query fullVisibilityState {
-    mediaPlayer @client {
-      currentTrack {
-        isVideo
-      }
-      isVisible
-      isFullscreen
-    }
-  }
-`;
-
-const getControlState = gql`
-  query {
-    mediaPlayer @client {
-      isFullscreen
-      isPlaying
-      currentTrack {
-        id
-        title
-        artist
-        isVideo
-      }
-      showVideo
-      muted
-    }
-  }
-`;
-
-const getVideoState = gql`
-  query mediaPlayer {
-    mediaPlayer @client {
-      currentTrack {
-        mediaSource {
-          uri
-        }
-        posterSources {
-          uri
-        }
-        id
-        isVideo
-      }
-      currentTime
-      isPlaying
-      showVideo
-      muted
-    }
-  }
-`;
-
-const getMusicControlState = gql`
-  query musicControlState {
-    mediaPlayer @client {
-      currentTrack {
-        posterSources {
-          uri
-        }
-        title
-        artist
-      }
-      currentTime
-      isPlaying
-    }
-  }
-`;
-
-const getElapsedTime = gql`
-  query {
-    mediaPlayer @client {
-      progress {
-        currentTime
-      }
-    }
-  }
-`;
-
-const getProgress = gql`
-  query {
-    mediaPlayer @client {
-      progress {
-        currentTime
-        duration
-      }
-    }
-  }
-`;
-
-const getTotalTime = gql`
-  query {
-    mediaPlayer @client {
-      progress {
-        duration
-      }
-    }
-  }
-`;
-
-export {
-  getMediaPlayerIsPlaying,
-  getMediaPlayerVisibility,
-  getMusicControlState,
-  getFullVisibilityState,
-  getControlState,
-  getVideoState,
-  getElapsedTime,
-  getProgress,
-  getTotalTime,
-};
diff --git a/apolloschurchapp/src/ui/Onboarding/Onboarding.stories.js b/apolloschurchapp/src/ui/Onboarding/Onboarding.stories.js
new file mode 100644
index 0000000..bf81552
--- /dev/null
+++ b/apolloschurchapp/src/ui/Onboarding/Onboarding.stories.js
@@ -0,0 +1,5 @@
+import React from 'react';
+import { storiesOf } from '@apollosproject/ui-storybook';
+import Onboarding from '.';
+
+storiesOf('Onboarding', module).add('full', () => <Onboarding />);
diff --git a/apolloschurchapp/src/ui/Onboarding/Onboarding.tests.js b/apolloschurchapp/src/ui/Onboarding/Onboarding.tests.js
new file mode 100644
index 0000000..abe9746
--- /dev/null
+++ b/apolloschurchapp/src/ui/Onboarding/Onboarding.tests.js
@@ -0,0 +1,17 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from '../../Providers';
+
+import Onboarding from '.';
+
+describe('the Onboarding component', () => {
+  it('should render Onboarding', () => {
+    const tree = renderer.create(
+      <Providers>
+        <Onboarding />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/Onboarding/Slide/Slide.js b/apolloschurchapp/src/ui/Onboarding/Slide/Slide.js
deleted file mode 100644
index 2612d10..0000000
--- a/apolloschurchapp/src/ui/Onboarding/Slide/Slide.js
+++ /dev/null
@@ -1,120 +0,0 @@
-import React, { memo } from 'react';
-import PropTypes from 'prop-types';
-import { StyleSheet, ScrollView } from 'react-native';
-
-import { SafeAreaView } from 'react-navigation';
-
-import {
-  styled,
-  withTheme,
-  PaddedView,
-  H5,
-  ButtonLink,
-  Button,
-  Icon,
-} from '@apollosproject/ui-kit';
-
-const styles = StyleSheet.create({
-  contentContainer: { minHeight: '100%' },
-});
-
-const forceInset = {
-  top: 'never',
-  bottom: 'always',
-};
-
-const NavWrapper = styled(({ theme }) => ({
-  position: 'absolute',
-  bottom: 0,
-  left: 0,
-  right: 0,
-  flexDirection: 'row-reverse', // reversed so the primary action is always on the right
-  alignItems: 'center', // centers optional back button with dots/next button
-  justifyContent: 'space-between',
-  marginVertical: theme.sizing.baseUnit * 0.5, // centers nav/button with pager dots
-}))(PaddedView);
-
-const PrimaryNavIcon = withTheme(({ theme }) => ({
-  size: theme.helpers.rem(1.25),
-  style: {
-    marginLeft: theme.sizing.baseUnit * 0.5,
-    marginRight: theme.sizing.baseUnit * -0.5,
-  },
-}))(Icon);
-
-const SkipButton = styled(({ theme }) => ({
-  color: theme.colors.text.tertiary, // this is probably not the right color
-  paddingVertical: theme.sizing.baseUnit * 0.9375, // optically centered on typographic baseline
-  paddingHorizontal: theme.sizing.baseUnit, // improves tappability
-  marginLeft: theme.sizing.baseUnit * -1, // adjusts for paddingHorizontal
-}))(ButtonLink);
-
-const FlexedScrollView = styled({ flex: 1 })(ScrollView);
-
-/* Slide uses memo = sfc PureComponent 💥 Additionally, this component when rendered in a `Slider`
- * is automatically rendered in a `View` */
-// eslint-disable-next-line react/display-name
-const Slide = memo(
-  ({
-    children,
-    onPressPrimary,
-    onPressSecondary,
-    primaryNavText,
-    primaryNavIcon,
-    secondaryNavText,
-    isLoading,
-    ...scrollViewProps
-  }) => (
-    <>
-      <FlexedScrollView
-        contentContainerStyle={styles.contentContainer}
-        overScrollMode={'auto'}
-        {...scrollViewProps}
-      >
-        {children}
-      </FlexedScrollView>
-      {onPressPrimary || onPressSecondary ? (
-        <NavWrapper vertical={false}>
-          <SafeAreaView forceInset={forceInset}>
-            {onPressPrimary ? (
-              <Button onPress={onPressPrimary} loading={isLoading}>
-                <>
-                  <H5>{primaryNavText}</H5>
-                  {primaryNavIcon ? (
-                    <PrimaryNavIcon name={primaryNavIcon} />
-                  ) : null}
-                </>
-              </Button>
-            ) : null}
-            {onPressSecondary ? (
-              <SkipButton onPress={onPressSecondary}>
-                {secondaryNavText}
-              </SkipButton>
-            ) : null}
-          </SafeAreaView>
-        </NavWrapper>
-      ) : null}
-    </>
-  )
-);
-
-Slide.propTypes = {
-  children: PropTypes.oneOfType([
-    PropTypes.arrayOf(PropTypes.node),
-    PropTypes.node,
-  ]),
-  onPressPrimary: PropTypes.func,
-  onPressSecondary: PropTypes.func,
-  primaryNavText: PropTypes.string, // colored button text
-  primaryNavIcon: PropTypes.string, // optional custom icon name or empty string for no icon at all
-  secondaryNavText: PropTypes.string, // text link
-  isLoading: PropTypes.bool,
-};
-
-Slide.defaultProps = {
-  primaryNavText: 'Next',
-  primaryNavIcon: 'arrow-next',
-  secondaryNavText: 'Skip',
-};
-
-export default Slide;
diff --git a/apolloschurchapp/src/ui/Onboarding/Slide/Slide.stories.js b/apolloschurchapp/src/ui/Onboarding/Slide/Slide.stories.js
deleted file mode 100644
index ae751f1..0000000
--- a/apolloschurchapp/src/ui/Onboarding/Slide/Slide.stories.js
+++ /dev/null
@@ -1,63 +0,0 @@
-import React from 'react';
-import { Text } from 'react-native';
-import { storiesOf } from '@storybook/react-native';
-
-import Slide from '.';
-
-storiesOf('Onboarding/Slide', module)
-  .add('default', () => (
-    <Slide>
-      <Text>Boom</Text>
-    </Slide>
-  ))
-  .add('onPressPrimary', () => (
-    <Slide onPressPrimary={() => {}}>
-      <Text>Boom</Text>
-    </Slide>
-  ))
-  .add('primaryNavText', () => (
-    <Slide onPressPrimary={() => {}} primaryNavText={'Custom button text'}>
-      <Text>Boom</Text>
-    </Slide>
-  ))
-  .add('primaryNavIcon', () => (
-    <Slide
-      onPressPrimary={() => {}}
-      primaryNavText={'Custom icon'}
-      primaryNavIcon={'umbrella'}
-    >
-      <Text>Boom</Text>
-    </Slide>
-  ))
-  .add('no icon', () => (
-    <Slide
-      onPressPrimary={() => {}}
-      primaryNavText={'No Icon!'}
-      primaryNavIcon={''}
-    >
-      <Text>Boom</Text>
-    </Slide>
-  ))
-  .add('onPressSecondary', () => (
-    <Slide onPressSecondary={() => {}}>
-      <Text>Boom</Text>
-    </Slide>
-  ))
-  .add('secondaryNavText', () => (
-    <Slide
-      onPressSecondary={() => {}}
-      secondaryNavText={'Custom skip button text'}
-    >
-      <Text>Boom</Text>
-    </Slide>
-  ))
-  .add('isLoading', () => (
-    <Slide onPressPrimary={() => {}} isLoading>
-      <Text>Boom</Text>
-    </Slide>
-  ))
-  .add('With Navigation', () => (
-    <Slide onPressPrimary={() => {}} onPressSecondary={() => {}}>
-      <Text>Boom</Text>
-    </Slide>
-  ));
diff --git a/apolloschurchapp/src/ui/Onboarding/Slide/Slide.tests.js b/apolloschurchapp/src/ui/Onboarding/Slide/Slide.tests.js
deleted file mode 100644
index 9a1a452..0000000
--- a/apolloschurchapp/src/ui/Onboarding/Slide/Slide.tests.js
+++ /dev/null
@@ -1,111 +0,0 @@
-import React from 'react';
-import { Text } from 'react-native';
-import renderer from 'react-test-renderer';
-
-import Providers from 'apolloschurchapp/src/Providers';
-
-import Slide from '.';
-
-describe('The Onboarding Slide component', () => {
-  it('should render children', () => {
-    const tree = renderer.create(
-      <Providers>
-        <Slide>
-          <Text>Boom</Text>
-        </Slide>
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render onboarding next button navigation', () => {
-    const tree = renderer.create(
-      <Providers>
-        <Slide onPressPrimary={jest.fn()}>
-          <Text>Boom</Text>
-        </Slide>
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render primary navigation button with custom text', () => {
-    const tree = renderer.create(
-      <Providers>
-        <Slide onPressPrimary={jest.fn()} primaryNavText={'Custom nav text'}>
-          <Text>Boom</Text>
-        </Slide>
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render primary navigation button with a custom icon', () => {
-    const tree = renderer.create(
-      <Providers>
-        <Slide
-          onPressPrimary={jest.fn()}
-          primaryNavText={'Custom nav text with custom icon'}
-          primaryNavIcon={'umbrella'}
-        >
-          <Text>Boom</Text>
-        </Slide>
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render primary navigation button without a custom icon', () => {
-    const tree = renderer.create(
-      <Providers>
-        <Slide
-          onPressPrimary={jest.fn()}
-          primaryNavText={'Custom nav text without an icon'}
-          primaryNavIcon={''}
-        >
-          <Text>Boom</Text>
-        </Slide>
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render onboarding skip button navigation', () => {
-    const tree = renderer.create(
-      <Providers>
-        <Slide onPressSecondary={jest.fn()}>
-          <Text>Boom</Text>
-        </Slide>
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render onboarding skip button with custom text', () => {
-    const tree = renderer.create(
-      <Providers>
-        <Slide
-          onPressSecondary={jest.fn()}
-          secondaryNavText={'Custom skip button text'}
-        >
-          <Text>Boom</Text>
-        </Slide>
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render both slide navigation buttons', () => {
-    const tree = renderer.create(
-      <Providers>
-        <Slide onPressPrimary={jest.fn()} onPressSecondary={jest.fn()}>
-          <Text>Boom</Text>
-        </Slide>
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render a loading indicator', () => {
-    const tree = renderer.create(
-      <Providers>
-        <Slide onPressPrimary={jest.fn()} isLoading>
-          <Text>Boom</Text>
-        </Slide>
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/ui/Onboarding/Slide/SlideContent/SlideContent.stories.js b/apolloschurchapp/src/ui/Onboarding/Slide/SlideContent/SlideContent.stories.js
deleted file mode 100644
index 95a9606..0000000
--- a/apolloschurchapp/src/ui/Onboarding/Slide/SlideContent/SlideContent.stories.js
+++ /dev/null
@@ -1,41 +0,0 @@
-import React from 'react';
-import { Text } from 'react-native';
-import { storiesOf } from '@storybook/react-native';
-
-import SlideContent from '.';
-
-storiesOf('Onboarding/Slide/SlideContent', module)
-  .add('example', () => (
-    <SlideContent
-      title={'Whoa, this is heavy'}
-      description={
-        'There\'s that word again: "heavy." Why are things so heavy in the future? Is there a problem with the Earth\'s gravitational pull?'
-      }
-      icon
-    />
-  ))
-  .add('icon', () => <SlideContent icon />)
-  .add('icon (custom name)', () => <SlideContent icon={'umbrella'} />)
-  .add('title', () => <SlideContent title={'Whoa, this is heavy'} />)
-  .add('description', () => (
-    <SlideContent
-      description={
-        'There\'s that word again: "heavy." Why are things so heavy in the future? Is there a problem with the Earth\'s gravitational pull?'
-      }
-    />
-  ))
-  .add('isLoading', () => (
-    <SlideContent
-      title={'Whoa, this is heavy'}
-      description={
-        'There\'s that word again: "heavy." Why are things so heavy in the future? Is there a problem with the Earth\'s gravitational pull?'
-      }
-      icon
-      isLoading
-    />
-  ))
-  .add('childen', () => (
-    <SlideContent>
-      <Text>Great Scott!</Text>
-    </SlideContent>
-  ));
diff --git a/apolloschurchapp/src/ui/Onboarding/Slide/SlideContent/SlideContent.tests.js b/apolloschurchapp/src/ui/Onboarding/Slide/SlideContent/SlideContent.tests.js
deleted file mode 100644
index ff42046..0000000
--- a/apolloschurchapp/src/ui/Onboarding/Slide/SlideContent/SlideContent.tests.js
+++ /dev/null
@@ -1,97 +0,0 @@
-import React from 'react';
-import { Text } from 'react-native';
-import renderer from 'react-test-renderer';
-
-import Providers from 'apolloschurchapp/src/Providers';
-
-import SlideContent from '.';
-
-describe('The Onboarding Slide component', () => {
-  it('should render an icon', () => {
-    const tree = renderer.create(
-      <Providers>
-        <SlideContent icon />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render a custom icon', () => {
-    const tree = renderer.create(
-      <Providers>
-        <SlideContent icon={'umbrella'} />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render a title', () => {
-    const tree = renderer.create(
-      <Providers>
-        <SlideContent title={'Whoa, this is heavy'} />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render a description', () => {
-    const tree = renderer.create(
-      <Providers>
-        <SlideContent
-          description={
-            'There\'s that word again: "heavy." Why are things so heavy in the future? Is there a problem with the Earth\'s gravitational pull?'
-          }
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render with children', () => {
-    const tree = renderer.create(
-      <Providers>
-        <SlideContent
-          title={'Whoa, this is heavy'}
-          description={
-            'There\'s that word again: "heavy." Why are things so heavy in the future? Is there a problem with the Earth\'s gravitational pull?'
-          }
-        >
-          <Text>Great Scott!</Text>
-        </SlideContent>
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render children alone', () => {
-    const tree = renderer.create(
-      <Providers>
-        <SlideContent>
-          <Text>Great Scott!</Text>
-        </SlideContent>
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render a loading state', () => {
-    const tree = renderer.create(
-      <Providers>
-        <SlideContent
-          title={'Whoa, this is heavy'}
-          description={
-            'There\'s that word again: "heavy." Why are things so heavy in the future? Is there a problem with the Earth\'s gravitational pull?'
-          }
-          icon
-          isLoading
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render accept additionall props', () => {
-    const centeredContent = { flex: 1, justifyContent: 'center' };
-    const tree = renderer.create(
-      <Providers>
-        <SlideContent style={centeredContent}>
-          <Text>Great Scott!</Text>
-        </SlideContent>
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/ui/Onboarding/Slide/SlideContent/index.js b/apolloschurchapp/src/ui/Onboarding/Slide/SlideContent/index.js
deleted file mode 100644
index 1267c45..0000000
--- a/apolloschurchapp/src/ui/Onboarding/Slide/SlideContent/index.js
+++ /dev/null
@@ -1,85 +0,0 @@
-import React from 'react';
-import { View } from 'react-native';
-import {
-  styled,
-  withTheme,
-  Icon,
-  H2,
-  H5,
-  withIsLoading,
-} from '@apollosproject/ui-kit';
-import PropTypes from 'prop-types';
-
-import { SafeAreaView } from 'react-navigation';
-
-const IconWrapper = styled(({ theme }) => ({
-  paddingBottom: theme.sizing.baseUnit, // wrapper is used to padd placeholder as well.
-}))(View);
-
-const BrandIcon = withTheme(({ theme, icon }) => ({
-  name: typeof icon === 'string' ? icon : 'brand-icon',
-  fill: theme.colors.primary,
-  size: theme.sizing.baseUnit * 3,
-}))(Icon);
-
-const TitleWrapper = styled(({ theme }) => ({
-  paddingBottom: theme.sizing.baseUnit * 0.5, // wrapper is used to padd placeholder as well.
-}))(View);
-
-const Title = styled(({ theme }) => ({
-  color: theme.colors.primary,
-}))(H2);
-
-const StyledH5 = styled(({ theme }) => ({
-  color: theme.colors.text.secondary,
-}))(H5);
-
-const Wrapper = styled(({ theme }) => ({
-  paddingTop: theme.sizing.baseUnit,
-  paddingHorizontal: theme.sizing.baseUnit,
-  marginBottom: theme.sizing.baseUnit * 3,
-}))(SafeAreaView);
-
-const SlideContent = withIsLoading(
-  ({ icon, title, description, children, isLoading, ...props }) => {
-    if (!icon && !title && !description && !children) {
-      console.warn(
-        `Warning: You need to pass at least one prop for SlideContent to render something cowboy.`
-      );
-    }
-
-    return (
-      <Wrapper forceInset={{ bottom: 'always' }} {...props}>
-        <View>
-          {icon ? (
-            <IconWrapper>
-              <BrandIcon icon={icon} isLoading={isLoading} />
-            </IconWrapper>
-          ) : null}
-          <TitleWrapper>
-            <Title>{title}</Title>
-          </TitleWrapper>
-          <StyledH5>{description}</StyledH5>
-        </View>
-        {children}
-      </Wrapper>
-    );
-  }
-);
-
-SlideContent.displayName = 'SlideContent';
-
-SlideContent.propTypes = {
-  icon: PropTypes.oneOfType([
-    PropTypes.bool, // Use default `brand-icon`
-    PropTypes.string, // Use a custom icon name
-  ]),
-  title: PropTypes.string,
-  description: PropTypes.string,
-  children: PropTypes.oneOfType([
-    PropTypes.arrayOf(PropTypes.node),
-    PropTypes.node,
-  ]),
-};
-
-export default SlideContent;
diff --git a/apolloschurchapp/src/ui/Onboarding/Slide/index.js b/apolloschurchapp/src/ui/Onboarding/Slide/index.js
deleted file mode 100644
index 568bb2a..0000000
--- a/apolloschurchapp/src/ui/Onboarding/Slide/index.js
+++ /dev/null
@@ -1,4 +0,0 @@
-import Slide from './Slide';
-
-export default Slide;
-export SlideContent from './SlideContent';
diff --git a/apolloschurchapp/src/ui/Onboarding/index.js b/apolloschurchapp/src/ui/Onboarding/index.js
index 9314696..bcd6421 100644
--- a/apolloschurchapp/src/ui/Onboarding/index.js
+++ b/apolloschurchapp/src/ui/Onboarding/index.js
@@ -1,15 +1,7 @@
-import React, { Component } from 'react';
-import { View } from 'react-native';
+import React from 'react';
 
-// import PropTypes from 'prop-types';
-import Swiper from 'react-native-swiper';
-import {
-  BackgroundView,
-  GradientOverlayImage,
-  styled,
-} from '@apollosproject/ui-kit';
-
-import { SafeAreaView } from 'react-navigation';
+import { GradientOverlayImage } from '@apollosproject/ui-kit';
+import { ApolloConsumer } from 'react-apollo';
 
 import {
   AskNotificationsConnected,
@@ -17,74 +9,19 @@ import {
   FeaturesConnected,
   AboutYouConnected,
   LocationFinderConnected,
-} from './slides';
-
-const dotStyles = ({ theme }) => ({
-  width: theme.sizing.baseUnit / 2,
-  height: theme.sizing.baseUnit / 2,
-  borderRadius: theme.sizing.baseUnit / 4,
-  margin: theme.sizing.baseUnit / 4,
-});
-
-const forceInset = {
-  bottom: 'always',
-};
-
-const PaginationDot = styled(({ theme }) => ({
-  backgroundColor: theme.colors.background.inactive,
-  ...dotStyles({ theme }),
-}))(View);
-
-const PaginationDotActive = styled(({ theme }) => ({
-  backgroundColor: theme.colors.action.primary,
-  ...dotStyles({ theme }),
-}))(View);
-
-class Onboarding extends Component {
-  static navigationOptions = () => ({
-    title: 'Onboarding',
-    header: null,
-    gesturesEnabled: false,
-  });
-
-  swiper = null;
+  OnboardingSwiper,
+} from '@apollosproject/ui-onboarding';
 
-  // Creates ref to Swiper to be passed as a prop to children.
-  setSwiperRef = (r) => {
-    this.swiper = r;
+import { requestPushPermissions } from '@apollosproject/ui-notifications';
 
-    return this.swiper;
-  };
-
-  // Advance swiper 1 slide. See Swiper documentation for scrollBy details. https://github.com/leecade/react-native-swiper#methods
-  handleOnPressPrimary = () => this.swiper.scrollBy(1);
-
-  render() {
-    return (
-      <BackgroundView>
-        <Swiper
-          loadMinimal
-          loop={false}
-          /* Disables swipe gestures. We currently we dont display a back button so this is our
-           * only back navigation option. */
-          // scrollEnabled={false}
-          showsButtons={false}
-          ref={this.setSwiperRef}
-          renderPagination={this.renderPagination}
-          activeDot={
-            <SafeAreaView forceInset={forceInset}>
-              <PaginationDotActive />
-            </SafeAreaView>
-          }
-          dot={
-            <SafeAreaView forceInset={forceInset}>
-              <PaginationDot forceInset={forceInset} />
-            </SafeAreaView>
-          }
-        >
-          <AskNameConnected onPressPrimary={this.handleOnPressPrimary} />
+function Onboarding({ navigation }) {
+  return (
+    <OnboardingSwiper>
+      {({ swipeForward }) => (
+        <>
+          <AskNameConnected onPressPrimary={swipeForward} />
           <FeaturesConnected
-            onPressPrimary={this.handleOnPressPrimary}
+            onPressPrimary={swipeForward}
             BackgroundComponent={
               <GradientOverlayImage
                 source={'https://picsum.photos/640/640/?random'}
@@ -92,7 +29,7 @@ class Onboarding extends Component {
             }
           />
           <AboutYouConnected
-            onPressPrimary={this.handleOnPressPrimary}
+            onPressPrimary={swipeForward}
             BackgroundComponent={
               <GradientOverlayImage
                 source={'https://picsum.photos/640/640/?random'}
@@ -100,26 +37,44 @@ class Onboarding extends Component {
             }
           />
           <LocationFinderConnected
-            onPressPrimary={this.handleOnPressPrimary}
+            onPressPrimary={swipeForward}
+            onNavigate={() => {
+              navigation.navigate('Location', {
+                onFinished: swipeForward,
+              });
+            }}
             BackgroundComponent={
               <GradientOverlayImage
                 source={'https://picsum.photos/640/640/?random'}
               />
             }
           />
-          <AskNotificationsConnected
-            onPressPrimary={() => this.props.navigation.navigate('Home')}
-            primaryNavText={'Finish'}
-            BackgroundComponent={
-              <GradientOverlayImage
-                source={'https://picsum.photos/640/640/?random'}
+          <ApolloConsumer>
+            {(client) => (
+              <AskNotificationsConnected
+                onPressPrimary={() => navigation.replace('Tabs')}
+                onRequestPushPermissions={() =>
+                  requestPushPermissions({ client })
+                }
+                primaryNavText={'Finish'}
+                BackgroundComponent={
+                  <GradientOverlayImage
+                    source={'https://picsum.photos/640/640/?random'}
+                  />
+                }
               />
-            }
-          />
-        </Swiper>
-      </BackgroundView>
-    );
-  }
+            )}
+          </ApolloConsumer>
+        </>
+      )}
+    </OnboardingSwiper>
+  );
 }
 
+Onboarding.navigationOptions = {
+  title: 'Onboarding',
+  header: null,
+  gesturesEnabled: false,
+};
+
 export default Onboarding;
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/AboutYou/AboutYou.js b/apolloschurchapp/src/ui/Onboarding/slides/AboutYou/AboutYou.js
deleted file mode 100644
index 1dc19e7..0000000
--- a/apolloschurchapp/src/ui/Onboarding/slides/AboutYou/AboutYou.js
+++ /dev/null
@@ -1,135 +0,0 @@
-import React, { memo } from 'react';
-import PropTypes from 'prop-types';
-import moment from 'moment';
-import { get } from 'lodash';
-
-import {
-  styled,
-  H5,
-  Radio,
-  RadioButton,
-  H6,
-  DateInput,
-} from '@apollosproject/ui-kit';
-
-import Slide, { SlideContent } from '../../Slide';
-
-const Label = styled(({ theme, padded }) => ({
-  color: 'gray',
-  opacity: 0.7,
-  ...(padded ? { marginTop: theme.sizing.baseUnit } : {}),
-}))(H6);
-
-const StyledDate = styled(({ theme }) => ({
-  marginTop: 0,
-  marginBottom: theme.sizing.baseUnit,
-}))(DateInput);
-
-const StyledRadio = styled(({ theme }) => ({
-  marginBottom: theme.sizing.baseUnit,
-  flexDirection: 'row',
-  alignItems: 'center',
-  flexWrap: 'wrap',
-}))(Radio);
-
-const RadioLabel = styled(({ theme }) => ({
-  marginLeft: theme.sizing.baseUnit * 0.5,
-}))(H5);
-
-const AboutYou = memo(
-  ({
-    slideTitle,
-    description,
-    defaultDate,
-    genderList,
-    values,
-    touched,
-    errors,
-    setFieldValue,
-    BackgroundComponent,
-    ...props
-  }) => (
-    <Slide {...props}>
-      {BackgroundComponent}
-      <SlideContent title={slideTitle} description={description}>
-        <Label padded>Gender</Label>
-        <StyledRadio
-          label="Gender"
-          type="radio"
-          value={get(values, 'gender')}
-          error={get(touched, 'gender') && get(errors, 'gender')}
-          onChange={(value) => setFieldValue('gender', value)}
-        >
-          {genderList.map((gender) => [
-            <RadioButton
-              key={gender}
-              value={gender}
-              label={() => <RadioLabel>{gender}</RadioLabel>}
-              underline={false}
-            />,
-          ])}
-        </StyledRadio>
-        <Label>Birthday</Label>
-        <StyledDate
-          type={'DateInput'}
-          placeholder={'Select a date...'}
-          value={moment
-            .utc(get(values, 'birthDate', defaultDate) || defaultDate)
-            .toDate()}
-          error={get(touched, 'birthDate') && get(errors, 'birthDate')}
-          displayValue={
-            // only show a birthday if we have one.
-            get(values, 'birthDate', '') // DatePicker shows displayValue > placeholder > label in that order
-              ? moment(values.birthDate).format('MM/DD/YYYY')
-              : '' // Pass an empty string if we don't have a birthday to show the placeholder.
-          }
-          onChange={(value) => setFieldValue('birthDate', value)}
-        />
-      </SlideContent>
-    </Slide>
-  )
-);
-
-AboutYou.propTypes = {
-  /* The `Swiper` component used in `<Onboading>` looks for and hijacks the title prop of it's
-   * children. Thus we have to use more unique name.
-   */
-  slideTitle: PropTypes.string,
-  description: PropTypes.string,
-  defaultDate: PropTypes.instanceOf(Date),
-  genderList: PropTypes.arrayOf(PropTypes.string),
-  values: PropTypes.shape({
-    gender: PropTypes.bool,
-    birthDate: PropTypes.bool,
-  }),
-  touched: PropTypes.shape({
-    gender: PropTypes.string,
-    birthDate: PropTypes.string,
-  }),
-  errors: PropTypes.shape({
-    gender: PropTypes.string,
-    birthDate: PropTypes.string,
-  }),
-  setFieldValue: PropTypes.func.isRequired,
-  /* Recommended usage:
-   * - `Image` (react-native)
-   * - `GradientOverlayImage` (@apollosproject/ui-kit) for increased readability
-   * - `Video` (react-native-video) because moving pictures!
-   */
-  BackgroundComponent: PropTypes.oneOfType([
-    PropTypes.arrayOf(PropTypes.node),
-    PropTypes.node,
-  ]),
-};
-
-AboutYou.defaultProps = {
-  slideTitle: "This one's easy.",
-  description:
-    'Help us understand who you are so we can connect you with the best ministries and events.',
-  genderList: ['Male', 'Female'],
-  defaultDate: new Date(),
-};
-
-AboutYou.displayName = 'AboutYou';
-
-export default AboutYou;
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/AboutYou/AboutYou.stories.js b/apolloschurchapp/src/ui/Onboarding/slides/AboutYou/AboutYou.stories.js
deleted file mode 100644
index 68d4d96..0000000
--- a/apolloschurchapp/src/ui/Onboarding/slides/AboutYou/AboutYou.stories.js
+++ /dev/null
@@ -1,39 +0,0 @@
-import React from 'react';
-import { storiesOf } from '@storybook/react-native';
-import { GradientOverlayImage } from '@apollosproject/ui-kit';
-
-import AboutYou from '.';
-
-storiesOf('Onboarding/slides/AboutYou', module)
-  .add('default', () => <AboutYou />)
-  .add('slideTitle', () => (
-    <AboutYou slideTitle={'Custom title text'} setFieldValue={() => {}} />
-  ))
-  .add('description', () => (
-    <AboutYou
-      description={'Custom description text'}
-      setFieldValue={() => {}}
-    />
-  ))
-  .add('genderList', () => (
-    <AboutYou genderList={['M', 'F']} setFieldValue={() => {}} />
-  ))
-  .add('values – birthDate', () => (
-    <AboutYou values={{ birthDate: '1989-02-14' }} setFieldValue={() => {}} />
-  ))
-  .add('values – gender', () => (
-    <AboutYou values={{ gender: 'Male' }} setFieldValue={() => {}} />
-  ))
-  .add('BackgroundComponent', () => (
-    <AboutYou
-      BackgroundComponent={
-        <GradientOverlayImage
-          source={'https://picsum.photos/640/640/?random'}
-        />
-      }
-      setFieldValue={() => {}}
-    />
-  ))
-  .add('Slide props', () => (
-    <AboutYou onPressPrimary={() => {}} setFieldValue={() => {}} />
-  ));
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/AboutYou/AboutYou.tests.js b/apolloschurchapp/src/ui/Onboarding/slides/AboutYou/AboutYou.tests.js
deleted file mode 100644
index d54de79..0000000
--- a/apolloschurchapp/src/ui/Onboarding/slides/AboutYou/AboutYou.tests.js
+++ /dev/null
@@ -1,138 +0,0 @@
-import React from 'react';
-import renderer from 'react-test-renderer';
-import { GradientOverlayImage } from '@apollosproject/ui-kit';
-
-import Providers from 'apolloschurchapp/src/Providers';
-
-import AboutYou from '.';
-
-describe('The Onboarding AboutYou component', () => {
-  it('should render', () => {
-    /* we have to pass in a date via defaultDate or the DateInput component will create a current date
-     * object and invalidate the snapshots every time. */
-    const tree = renderer.create(
-      <Providers>
-        <AboutYou defaultDate={'2019-02-14'} setFieldValue={jest.fn()} />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render a custom title', () => {
-    /* we have to pass in a date via defaultDate or the DateInput component will create a current date
-     * object and invalidate the snapshots every time. */
-    const tree = renderer.create(
-      <Providers>
-        <AboutYou
-          slideTitle={'Custom title text'}
-          defaultDate={'2019-02-14'}
-          setFieldValue={jest.fn()}
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render a custom description', () => {
-    /* we have to pass in a date via defaultDate or the DateInput component will create a current date
-     * object and invalidate the snapshots every time. */
-    const tree = renderer.create(
-      <Providers>
-        <AboutYou
-          description={'Custom description text'}
-          defaultDate={'2019-02-14'}
-          setFieldValue={jest.fn()}
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render a custom gender list', () => {
-    /* we have to pass in a date via defaultDate or the DateInput component will create a current date
-     * object and invalidate the snapshots every time. */
-    const tree = renderer.create(
-      <Providers>
-        <AboutYou
-          genderList={['M', 'F']}
-          defaultDate={'2019-02-14'}
-          setFieldValue={jest.fn()}
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render the selected gender', () => {
-    /* we have to pass in a date via defaultDate or the DateInput component will create a current date
-     * object and invalidate the snapshots every time. */
-    const tree = renderer.create(
-      <Providers>
-        <AboutYou
-          values={{ gender: 'Male' }}
-          defaultDate={'2019-02-14'}
-          setFieldValue={jest.fn()}
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render with a selected birthdate', () => {
-    const tree = renderer.create(
-      <Providers>
-        <AboutYou
-          values={{ birthDate: '1989-02-14' }}
-          setFieldValue={jest.fn()}
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render with errors', () => {
-    const tree = renderer.create(
-      <Providers>
-        <AboutYou
-          touched={{
-            gender: true,
-            birthDate: true,
-          }}
-          errors={{
-            gender: 'Gender errors',
-            birthDate: 'BirthDate errors',
-          }}
-          defaultDate={'2019-02-14'}
-          setFieldValue={jest.fn()}
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render a BackgroundComponent', () => {
-    /* we have to pass in a date via defaultDate or the DateInput component will create a current date
-     * object and invalidate the snapshots every time. */
-    const tree = renderer.create(
-      <Providers>
-        <AboutYou
-          BackgroundComponent={
-            <GradientOverlayImage
-              source={'https://picsum.photos/640/640/?random'}
-            />
-          }
-          defaultDate={'2019-02-14'}
-          setFieldValue={jest.fn()}
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should pass additional props to Slide', () => {
-    /* we have to pass in a date via defaultDate or the DateInput component will create a current date
-     * object and invalidate the snapshots every time. */
-    const tree = renderer.create(
-      <Providers>
-        <AboutYou
-          onPressPrimary={jest.fn()}
-          defaultDate={'2019-02-14'}
-          setFieldValue={jest.fn()}
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/AboutYou/AboutYouConnected.js b/apolloschurchapp/src/ui/Onboarding/slides/AboutYou/AboutYouConnected.js
deleted file mode 100644
index 6d65b6a..0000000
--- a/apolloschurchapp/src/ui/Onboarding/slides/AboutYou/AboutYouConnected.js
+++ /dev/null
@@ -1,100 +0,0 @@
-import React, { memo } from 'react';
-import { Query, Mutation } from 'react-apollo';
-import { Formik } from 'formik';
-import * as Yup from 'yup';
-import PropTypes from 'prop-types';
-
-import getUserProfile from '../../../../tabs/connect/getUserProfile';
-import AboutYou from './AboutYou';
-
-import updateUserDetails from './updateUserDetails';
-
-// eslint-disable-next-line react/display-name
-const AboutYouConnected = memo(
-  ({ onPressPrimary, onPressSecondary, ...props }) => (
-    <Query query={getUserProfile}>
-      {({ data: { currentUser = { profile: {} } } = {}, loading = false }) => {
-        const { gender, birthDate } = currentUser.profile;
-
-        return (
-          <Mutation mutation={updateUserDetails}>
-            {(updateDetails) => (
-              <Formik
-                initialValues={{ gender, birthDate }}
-                isInitialValid={() =>
-                  !!(['Male', 'Female'].includes(gender) || birthDate)
-                } // isInitialValid defaults to `false` this correctly checks for user data
-                validationSchema={Yup.object().shape({
-                  gender: Yup.string().oneOf(['Male', 'Female']),
-                  birthDate: Yup.string().nullable(),
-                })}
-                enableReinitialize
-                onSubmit={async (
-                  variables,
-                  { setSubmitting, setFieldError }
-                ) => {
-                  try {
-                    await updateDetails({ variables });
-                    onPressPrimary(); // advance to the next slide after submission
-                  } catch (e) {
-                    const { graphQLErrors } = e;
-                    if (
-                      graphQLErrors.length &&
-                      graphQLErrors.find(({ message }) =>
-                        message.includes('Invalid')
-                      )
-                    ) {
-                      setFieldError(
-                        'gender',
-                        'There was a problem sending your request'
-                      );
-                    } else {
-                      setFieldError(
-                        'gender',
-                        'Unknown error. Please try again later.'
-                      );
-                    }
-                  }
-                  setSubmitting(false);
-                }}
-              >
-                {({
-                  isValid,
-                  isSubmitting,
-                  submitForm,
-                  values,
-                  touched,
-                  errors,
-                  setFieldValue,
-                }) => (
-                  <AboutYou
-                    onPressPrimary={isValid ? submitForm : null} // if form `isValid` show the primary nav button (next)
-                    onPressSecondary={
-                      // if form `!isValid` show the secondary nav button (skip)
-                      isValid ? null : onPressSecondary || onPressPrimary // if onPressSecondary exists use it else default onPressPrimary
-                    }
-                    gender={gender}
-                    birthDate={birthDate}
-                    values={values}
-                    touched={touched}
-                    errors={errors}
-                    setFieldValue={setFieldValue}
-                    isLoading={loading || isSubmitting}
-                    {...props}
-                  />
-                )}
-              </Formik>
-            )}
-          </Mutation>
-        );
-      }}
-    </Query>
-  )
-);
-
-AboutYouConnected.propTypes = {
-  onPressPrimary: PropTypes.func,
-  onPressSecondary: PropTypes.func,
-};
-
-export default AboutYouConnected;
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/AboutYou/AboutYouConnected.tests.js b/apolloschurchapp/src/ui/Onboarding/slides/AboutYou/AboutYouConnected.tests.js
deleted file mode 100644
index e961e8a..0000000
--- a/apolloschurchapp/src/ui/Onboarding/slides/AboutYou/AboutYouConnected.tests.js
+++ /dev/null
@@ -1,73 +0,0 @@
-import React from 'react';
-import renderer from 'react-test-renderer';
-import Providers from 'apolloschurchapp/src/Providers';
-
-import { renderWithApolloData } from 'apolloschurchapp/src/utils/testUtils';
-import getUserProfile from '../../../../tabs/connect/getUserProfile';
-import AboutYouConnected from './AboutYouConnected';
-
-describe('AboutYouConnected component', () => {
-  it('renders in a default state', () => {
-    const tree = renderer.create(
-      <Providers>
-        <AboutYouConnected
-          onPressPrimary={jest.fn()}
-          defaultDate={'2019-02-14'}
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('renders Gender and BirthDate when logged in', async () => {
-    const mock = {
-      request: {
-        query: getUserProfile,
-      },
-      result: {
-        data: {
-          currentUser: {
-            __typename: 'AuthenticatedUser',
-            id: 'AuthenticatedUser:123',
-            profile: {
-              __typename: 'Person',
-              id: 'Person:123',
-              gender: 'Male',
-              birthDate: '1980-02-10T00:00:00',
-              firstName: 'Isaac',
-              lastName: 'Hardy',
-              campus: {
-                __typename: 'Campus',
-                id: 'Campus:a0f64573eabf00a607bec911794d50fb',
-                name: 'Chicago Campus',
-                latitude: 42.09203,
-                longitude: -88.13289,
-                distanceFromLocation: null,
-                street1: '67 Algonquin Rd',
-                street2: '',
-                city: 'South Barrington',
-                state: 'IL',
-                postalCode: '60010-6143',
-                image: {
-                  __typename: 'ImageMediaSource',
-                  uri: 'https://picsum.photos/300/300/?random',
-                },
-              },
-              email: 'isaac.hardy@newspring.cc',
-              nickName: 'Batman',
-              photo: {
-                __typename: 'ImageMediaSource',
-                uri: 'https://some-uri.com/test.jpg',
-              },
-            },
-          },
-        },
-      },
-    };
-    const tree = await renderWithApolloData(
-      <Providers mocks={[mock]}>
-        <AboutYouConnected setFieldValue={jest.fn()} />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/AboutYou/index.js b/apolloschurchapp/src/ui/Onboarding/slides/AboutYou/index.js
deleted file mode 100644
index 6b9737d..0000000
--- a/apolloschurchapp/src/ui/Onboarding/slides/AboutYou/index.js
+++ /dev/null
@@ -1,4 +0,0 @@
-import AboutYou from './AboutYou';
-
-export AboutYouConnected from './AboutYouConnected';
-export default AboutYou;
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/AboutYou/updateUserDetails.js b/apolloschurchapp/src/ui/Onboarding/slides/AboutYou/updateUserDetails.js
deleted file mode 100644
index d5beb5e..0000000
--- a/apolloschurchapp/src/ui/Onboarding/slides/AboutYou/updateUserDetails.js
+++ /dev/null
@@ -1,16 +0,0 @@
-import gql from 'graphql-tag';
-
-export default gql`
-  mutation updateDetails($gender: String!, $birthDate: String!) {
-    updateProfileFields(
-      input: [
-        { field: Gender, value: $gender }
-        { field: BirthDate, value: $birthDate }
-      ]
-    ) {
-      gender
-      birthDate
-      id
-    }
-  }
-`;
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/AskName/AskName.js b/apolloschurchapp/src/ui/Onboarding/slides/AskName/AskName.js
deleted file mode 100644
index a25e8f1..0000000
--- a/apolloschurchapp/src/ui/Onboarding/slides/AskName/AskName.js
+++ /dev/null
@@ -1,97 +0,0 @@
-import React, { memo } from 'react';
-import PropTypes from 'prop-types';
-import { get } from 'lodash';
-
-import { SafeAreaView } from 'react-navigation';
-
-import { PaddedView, TextInput } from '@apollosproject/ui-kit';
-
-import Slide, { SlideContent } from '../../Slide';
-
-// memo = sfc PureComponent 💥
-const AskName = memo(
-  ({
-    onPressPrimary,
-    slideTitle,
-    description,
-    firstName,
-    lastName,
-    values,
-    touched,
-    errors,
-    setFieldValue,
-    isLoading,
-    ...props
-  }) => {
-    let LastNameInput = null;
-
-    return (
-      <Slide onPressPrimary={onPressPrimary} isLoading={isLoading} {...props}>
-        <SafeAreaView forceInset={{ top: 'always', bottom: 'always' }}>
-          <SlideContent title={slideTitle} description={description} icon>
-            <PaddedView horizontal={false}>
-              <TextInput
-                label={'First Name'}
-                type={'text'}
-                textContentType={'givenName'} // ios autofill
-                returnKeyType={'next'}
-                value={get(values, 'firstName')}
-                error={
-                  get(touched, 'firstName', false) &&
-                  get(errors, 'firstName', null)
-                }
-                onChangeText={(text) => setFieldValue('firstName', text)}
-                onSubmitEditing={() => LastNameInput.focus()}
-                disabled={isLoading}
-                enablesReturnKeyAutomatically
-              />
-              <TextInput
-                label={'Last Name'}
-                type={'text'}
-                textContentType={'familyName'} // ios autofill
-                returnKeyType={'next'}
-                value={get(values, 'lastName')}
-                error={
-                  get(touched, 'lastName', false) &&
-                  get(errors, 'lastName', null)
-                }
-                onChangeText={(text) => setFieldValue('lastName', text)}
-                onSubmitEditing={onPressPrimary}
-                disabled={isLoading}
-                enablesReturnKeyAutomatically
-                inputRef={(r) => {
-                  LastNameInput = r;
-                }}
-              />
-            </PaddedView>
-          </SlideContent>
-        </SafeAreaView>
-      </Slide>
-    );
-  }
-);
-
-AskName.propTypes = {
-  /* The `Swiper` component used in `<Onboading>` looks for and hijacks the title prop of it's
-   * children. Thus we have to use more unique name.
-   */
-  setFieldValue: PropTypes.func.isRequired,
-  slideTitle: PropTypes.string,
-  description: PropTypes.string,
-  firstName: PropTypes.string,
-  lastName: PropTypes.string,
-  touched: PropTypes.shape({}),
-  errors: PropTypes.shape({}),
-  values: PropTypes.shape({}),
-  onPressPrimary: PropTypes.func,
-  isLoading: PropTypes.bool,
-};
-
-AskName.defaultProps = {
-  slideTitle: 'Welcome!',
-  description: "Every relationship starts with a name. What's yours?",
-};
-
-AskName.displayName = 'AskName';
-
-export default AskName;
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/AskName/AskName.stories.js b/apolloschurchapp/src/ui/Onboarding/slides/AskName/AskName.stories.js
deleted file mode 100644
index b76ecf4..0000000
--- a/apolloschurchapp/src/ui/Onboarding/slides/AskName/AskName.stories.js
+++ /dev/null
@@ -1,29 +0,0 @@
-import React from 'react';
-import { storiesOf } from '@storybook/react-native';
-
-import AskName from '.';
-
-storiesOf('Onboarding/slides/AskName', module)
-  .add('default', () => <AskName setFieldValue={() => {}} />)
-  .add('slideTitle', () => (
-    <AskName slideTitle={'Custom title text'} setFieldValue={() => {}} />
-  ))
-  .add('description', () => (
-    <AskName description={'Custom description text'} setFieldValue={() => {}} />
-  ))
-  .add('firstName and lastName', () => (
-    <AskName
-      values={{ firstName: 'Marty', lastName: 'McFly' }}
-      setFieldValue={() => {}}
-    />
-  ))
-  .add('isLoading', () => (
-    <AskName
-      values={{ firstName: 'Marty', lastName: 'McFly' }}
-      setFieldValue={() => {}}
-      isLoading
-    />
-  ))
-  .add('SlideWrapper props', () => (
-    <AskName setFieldValue={() => {}} onPressPrimary={() => {}} />
-  ));
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/AskName/AskName.tests.js b/apolloschurchapp/src/ui/Onboarding/slides/AskName/AskName.tests.js
deleted file mode 100644
index b9b98e2..0000000
--- a/apolloschurchapp/src/ui/Onboarding/slides/AskName/AskName.tests.js
+++ /dev/null
@@ -1,68 +0,0 @@
-import React from 'react';
-import renderer from 'react-test-renderer';
-
-import Providers from 'apolloschurchapp/src/Providers';
-
-import AskName from '.';
-
-describe('The Onboarding AskName component', () => {
-  it('should render', () => {
-    const tree = renderer.create(
-      <Providers>
-        <AskName setFieldValue={jest.fn()} />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render a custom title', () => {
-    const tree = renderer.create(
-      <Providers>
-        <AskName slideTitle={'Custom title text'} setFieldValue={jest.fn()} />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render a custom description', () => {
-    const tree = renderer.create(
-      <Providers>
-        <AskName
-          description={'Custom description text'}
-          setFieldValue={jest.fn()}
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should accept a firstName', () => {
-    const tree = renderer.create(
-      <Providers>
-        <AskName values={{ firstName: 'Marty' }} setFieldValue={jest.fn()} />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should accept a lastName', () => {
-    const tree = renderer.create(
-      <Providers>
-        <AskName values={{ lastName: 'McFly' }} setFieldValue={jest.fn()} />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render a loading state', () => {
-    const tree = renderer.create(
-      <Providers>
-        <AskName setFieldValue={jest.fn()} isLoading />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should pass additional props to Slide component', () => {
-    const tree = renderer.create(
-      <Providers>
-        <AskName onPressPrimary={jest.fn()} setFieldValue={jest.fn()} />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/AskName/AskNameConnected.js b/apolloschurchapp/src/ui/Onboarding/slides/AskName/AskNameConnected.js
deleted file mode 100644
index b2db1fc..0000000
--- a/apolloschurchapp/src/ui/Onboarding/slides/AskName/AskNameConnected.js
+++ /dev/null
@@ -1,102 +0,0 @@
-import React, { memo } from 'react';
-import { Query, Mutation } from 'react-apollo';
-import { Formik } from 'formik';
-import * as Yup from 'yup';
-import PropTypes from 'prop-types';
-
-import getUserProfile from '../../../../tabs/connect/getUserProfile';
-import AskName from './AskName';
-
-import updateUserName from './updateUserName';
-
-// eslint-disable-next-line react/display-name
-const AskNameConnected = memo(
-  ({ onPressPrimary, onPressSecondary, ...props }) => (
-    <Query query={getUserProfile}>
-      {({ loading, data: { currentUser = { profile: {} } } = {} }) => {
-        const { firstName, lastName } = currentUser.profile;
-
-        return (
-          <Mutation mutation={updateUserName}>
-            {(updateName) => (
-              <Formik
-                initialValues={{ firstName, lastName }}
-                isInitialValid={() => !!(firstName && lastName)} // isInitialValid defaults to `false` this correctly checks for user data
-                validationSchema={Yup.object().shape({
-                  firstName: Yup.string().required(
-                    'Your first name is required!'
-                  ),
-                  lastName: Yup.string().required(
-                    'Your last name is required!'
-                  ),
-                })}
-                enableReinitialize
-                onSubmit={async (
-                  variables,
-                  { setSubmitting, setFieldError }
-                ) => {
-                  try {
-                    await updateName({ variables });
-                    onPressPrimary();
-                  } catch (e) {
-                    const { graphQLErrors } = e;
-                    if (
-                      graphQLErrors.length &&
-                      graphQLErrors.find(({ message }) =>
-                        message.includes('User already exists')
-                      )
-                    ) {
-                      setFieldError(
-                        'firstName',
-                        'There was a problem sending your request'
-                      );
-                    } else {
-                      setFieldError(
-                        'firstName',
-                        'Unknown error. Please try again later.'
-                      );
-                    }
-                  }
-                  setSubmitting(false);
-                }}
-              >
-                {({
-                  isValid,
-                  isSubmitting,
-                  submitForm,
-                  values,
-                  touched,
-                  errors,
-                  setFieldValue,
-                }) => (
-                  <AskName
-                    onPressPrimary={loading || isValid ? submitForm : null} // if form `isValid` show the primary nav button (next)
-                    onPressSecondary={
-                      // if form `!isValid` show the secondary nav button (skip)
-                      isValid ? null : onPressSecondary || onPressPrimary // if onPressSecondary exists use it else default onPressPrimary
-                    }
-                    firstName={firstName}
-                    lastName={lastName}
-                    values={values}
-                    touched={touched}
-                    errors={errors}
-                    setFieldValue={setFieldValue}
-                    isLoading={loading || isSubmitting}
-                    {...props}
-                  />
-                )}
-              </Formik>
-            )}
-          </Mutation>
-        );
-      }}
-    </Query>
-  )
-);
-
-AskNameConnected.propTypes = {
-  onPressPrimary: PropTypes.func,
-  onPressSecondary: PropTypes.func,
-};
-
-export default AskNameConnected;
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/AskName/AskNameConnected.tests.js b/apolloschurchapp/src/ui/Onboarding/slides/AskName/AskNameConnected.tests.js
deleted file mode 100644
index c6fb08e..0000000
--- a/apolloschurchapp/src/ui/Onboarding/slides/AskName/AskNameConnected.tests.js
+++ /dev/null
@@ -1,79 +0,0 @@
-import React from 'react';
-import renderer from 'react-test-renderer';
-
-import Providers from 'apolloschurchapp/src/Providers';
-import { renderWithApolloData } from 'apolloschurchapp/src/utils/testUtils';
-
-import getUserProfile from '../../../../tabs/connect/getUserProfile';
-import AskNameConnected from './AskNameConnected';
-
-describe('The AskNameConnected component', () => {
-  it('renders in a default state', () => {
-    const tree = renderer.create(
-      <Providers>
-        <AskNameConnected onPressPrimary={jest.fn()} />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('renders User Name when logged in', async () => {
-    const mock = {
-      request: {
-        query: getUserProfile,
-      },
-      result: {
-        data: {
-          currentUser: {
-            __typename: 'AuthenticatedUser',
-            id: 'AuthenticatedUser:123',
-            profile: {
-              __typename: 'Person',
-              id: 'Person:123',
-              gender: 'Male',
-              birthDate: '1980-02-10T00:00:00',
-              firstName: 'Isaac',
-              lastName: 'Hardy',
-              campus: {
-                __typename: 'Campus',
-                id: 'Campus:a0f64573eabf00a607bec911794d50fb',
-                name: 'Chicago Campus',
-                latitude: 42.09203,
-                longitude: -88.13289,
-                distanceFromLocation: null,
-                street1: '67 Algonquin Rd',
-                street2: '',
-                city: 'South Barrington',
-                state: 'IL',
-                postalCode: '60010-6143',
-                image: {
-                  __typename: 'ImageMediaSource',
-                  uri: 'https://picsum.photos/300/300/?random',
-                },
-              },
-              email: 'isaac.hardy@newspring.cc',
-              nickName: 'Batman',
-              photo: {
-                __typename: 'ImageMediaSource',
-                uri: 'https://some-uri.com/test.jpg',
-              },
-            },
-          },
-        },
-      },
-    };
-    const tree = await renderWithApolloData(
-      <Providers mocks={[mock]}>
-        <AskNameConnected onPressPrimary={jest.fn()} />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('renders loading state when fetching data', () => {
-    const tree = renderer.create(
-      <Providers mocks={[]}>
-        <AskNameConnected onPressPrimary={jest.fn()} />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/AskName/index.js b/apolloschurchapp/src/ui/Onboarding/slides/AskName/index.js
deleted file mode 100644
index 138f0e9..0000000
--- a/apolloschurchapp/src/ui/Onboarding/slides/AskName/index.js
+++ /dev/null
@@ -1,4 +0,0 @@
-import AskName from './AskName';
-
-export AskNameConnected from './AskNameConnected';
-export default AskName;
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/AskName/updateUserName.js b/apolloschurchapp/src/ui/Onboarding/slides/AskName/updateUserName.js
deleted file mode 100644
index 70c8d49..0000000
--- a/apolloschurchapp/src/ui/Onboarding/slides/AskName/updateUserName.js
+++ /dev/null
@@ -1,16 +0,0 @@
-import gql from 'graphql-tag';
-
-export default gql`
-  mutation updateName($firstName: String!, $lastName: String!) {
-    updateProfileFields(
-      input: [
-        { field: FirstName, value: $firstName }
-        { field: LastName, value: $lastName }
-      ]
-    ) {
-      firstName
-      lastName
-      id
-    }
-  }
-`;
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/AskNotifications/AskNotifications.js b/apolloschurchapp/src/ui/Onboarding/slides/AskNotifications/AskNotifications.js
deleted file mode 100644
index 776c00e..0000000
--- a/apolloschurchapp/src/ui/Onboarding/slides/AskNotifications/AskNotifications.js
+++ /dev/null
@@ -1,65 +0,0 @@
-import React, { memo } from 'react';
-import PropTypes from 'prop-types';
-import { styled, PaddedView, Button } from '@apollosproject/ui-kit';
-
-import Slide, { SlideContent } from '../../Slide';
-
-const StyledSlideContent = styled({
-  flex: 1,
-  justifyContent: 'space-between',
-})(SlideContent);
-
-// memo = sfc PureComponent 💥
-// eslint-disable-next-line react/display-name
-const AskNotifications = memo(
-  ({
-    BackgroundComponent,
-    slideTitle,
-    description,
-    buttonText,
-    buttonDisabled,
-    onPressButton,
-    ...props
-  }) => (
-    <Slide {...props}>
-      {BackgroundComponent}
-      <StyledSlideContent title={slideTitle} description={description}>
-        {buttonDisabled || onPressButton ? (
-          <PaddedView horizontal={false}>
-            <Button
-              title={buttonText}
-              onPress={onPressButton}
-              disabled={buttonDisabled}
-              pill={false}
-            />
-          </PaddedView>
-        ) : null}
-      </StyledSlideContent>
-    </Slide>
-  )
-);
-
-AskNotifications.propTypes = {
-  BackgroundComponent: PropTypes.oneOfType([
-    PropTypes.arrayOf(PropTypes.node),
-    PropTypes.node,
-  ]),
-  /* The `Swiper` component used in `<onBoarding>` looks for and hijacks the title prop of it's
-   * children. Thus we have to use a more unique name.
-   */
-  slideTitle: PropTypes.string,
-  description: PropTypes.string,
-  buttonText: PropTypes.string,
-  buttonDisabled: PropTypes.bool,
-  onPressButton: PropTypes.func,
-};
-
-AskNotifications.defaultProps = {
-  slideTitle: 'Can we keep you informed?',
-  description:
-    "We'll let you know when important things are happening and keep you in the loop",
-  buttonText: 'Yes, enable notifications',
-  buttonDisabled: false,
-};
-
-export default AskNotifications;
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/AskNotifications/AskNotifications.stories.js b/apolloschurchapp/src/ui/Onboarding/slides/AskNotifications/AskNotifications.stories.js
deleted file mode 100644
index b4bc785..0000000
--- a/apolloschurchapp/src/ui/Onboarding/slides/AskNotifications/AskNotifications.stories.js
+++ /dev/null
@@ -1,33 +0,0 @@
-import React from 'react';
-import { storiesOf } from '@storybook/react-native';
-import { GradientOverlayImage } from '@apollosproject/ui-kit';
-
-import AskNotifications from './AskNotifications';
-
-storiesOf('Onboarding/slides/AskNotifications', module)
-  .add('default', () => <AskNotifications />)
-  .add('BackgroundComponent', () => (
-    <AskNotifications
-      BackgroundComponent={
-        <GradientOverlayImage
-          source={'https://picsum.photos/640/640/?random'}
-        />
-      }
-    />
-  ))
-  .add('slideTitle', () => (
-    <AskNotifications slideTitle={'Custom title text'} />
-  ))
-  .add('description', () => (
-    <AskNotifications description={'Custom description text'} />
-  ))
-  .add('buttonDisabled', () => <AskNotifications buttonDisabled />)
-  .add('buttonText', () => (
-    <AskNotifications
-      onPressButton={() => {}}
-      buttonText={'Custom button text'}
-    />
-  ))
-  .add('SlideWrapper props', () => (
-    <AskNotifications onPressSecondary={() => {}} />
-  ));
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/AskNotifications/AskNotifications.tests.js b/apolloschurchapp/src/ui/Onboarding/slides/AskNotifications/AskNotifications.tests.js
deleted file mode 100644
index 18aa958..0000000
--- a/apolloschurchapp/src/ui/Onboarding/slides/AskNotifications/AskNotifications.tests.js
+++ /dev/null
@@ -1,86 +0,0 @@
-import React from 'react';
-import renderer from 'react-test-renderer';
-import { GradientOverlayImage } from '@apollosproject/ui-kit';
-
-import Providers from 'apolloschurchapp/src/Providers';
-
-import AskNotifications from './AskNotifications';
-
-describe('The Onboarding AskNotifications component', () => {
-  it('should render', () => {
-    const tree = renderer.create(
-      <Providers>
-        <AskNotifications />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render a BackgroundComponent', () => {
-    const tree = renderer.create(
-      <Providers>
-        <AskNotifications
-          BackgroundComponent={
-            <GradientOverlayImage
-              source={'https://picsum.photos/640/640/?random'}
-            />
-          }
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render a custom title', () => {
-    const tree = renderer.create(
-      <Providers>
-        <AskNotifications slideTitle={'Custom title text'} />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render a custom description', () => {
-    const tree = renderer.create(
-      <Providers>
-        <AskNotifications description={'Custom description text'} />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render with a button', () => {
-    const tree = renderer.create(
-      <Providers>
-        <AskNotifications onPressButton={jest.fn()} />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render the button disabled', () => {
-    const tree = renderer.create(
-      <Providers>
-        <AskNotifications onPressButton={jest.fn()} buttonDisabled />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render a button with custom text', () => {
-    const tree = renderer.create(
-      <Providers>
-        <AskNotifications
-          onPressButton={jest.fn()}
-          buttonText={'Custom button text'}
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should pass additional props to Slide component', () => {
-    const tree = renderer.create(
-      <Providers>
-        <AskNotifications
-          onPressSecondary={jest.fn()}
-          secondaryNavText={'Later'}
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/AskNotifications/AskNotificationsConnected.js b/apolloschurchapp/src/ui/Onboarding/slides/AskNotifications/AskNotificationsConnected.js
deleted file mode 100644
index cfd6df9..0000000
--- a/apolloschurchapp/src/ui/Onboarding/slides/AskNotifications/AskNotificationsConnected.js
+++ /dev/null
@@ -1,46 +0,0 @@
-import React, { memo } from 'react';
-import { Query, ApolloConsumer } from 'react-apollo';
-import PropTypes from 'prop-types';
-
-import {
-  requestPushPermissions,
-  getNotificationsEnabled,
-} from 'apolloschurchapp/src/notifications';
-
-import AskNotifications from '.';
-
-// eslint-disable-next-line react/display-name
-const AskNotificationsConnected = memo(
-  ({ onPressPrimary, onPressSecondary, ...props }) => (
-    <ApolloConsumer>
-      {(client) => (
-        <Query query={getNotificationsEnabled}>
-          {({ data: { notificationsEnabled = false } = {} }) => (
-            <AskNotifications
-              onPressButton={() => requestPushPermissions({ client })}
-              buttonDisabled={notificationsEnabled}
-              buttonText={
-                notificationsEnabled
-                  ? 'Notifications Enabled!'
-                  : 'Yes, enable notifications'
-              }
-              onPressPrimary={notificationsEnabled ? onPressPrimary : null} // if notifications are enabled show the primary nav button (next/finish)
-              onPressSecondary={
-                // if notifications are not enabled show the secondary nav button (skip)
-                notificationsEnabled ? null : onPressSecondary || onPressPrimary // if onPressSecondary exists use it else default onPressPrimary
-              }
-              {...props}
-            />
-          )}
-        </Query>
-      )}
-    </ApolloConsumer>
-  )
-);
-
-AskNotificationsConnected.propTypes = {
-  onPressPrimary: PropTypes.func,
-  onPressSecondary: PropTypes.func,
-};
-
-export default AskNotificationsConnected;
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/AskNotifications/AskNotificationsConnected.tests.js b/apolloschurchapp/src/ui/Onboarding/slides/AskNotifications/AskNotificationsConnected.tests.js
deleted file mode 100644
index 5751dee..0000000
--- a/apolloschurchapp/src/ui/Onboarding/slides/AskNotifications/AskNotificationsConnected.tests.js
+++ /dev/null
@@ -1,53 +0,0 @@
-import React from 'react';
-import renderer from 'react-test-renderer';
-import Providers from 'apolloschurchapp/src/Providers';
-import { getNotificationsEnabled } from 'apolloschurchapp/src/notifications';
-import { renderWithApolloData } from 'apolloschurchapp/src/utils/testUtils';
-
-import AskNotificationsConnected from './AskNotificationsConnected';
-
-describe('The Onboarding AskNotificationsConnected component', () => {
-  it('should render with a user not having granted push notifications permissions', async () => {
-    const mocks = [
-      {
-        request: {
-          query: getNotificationsEnabled,
-        },
-        result: {
-          data: { notificationsEnabled: false },
-        },
-      },
-    ];
-
-    const component = (
-      <Providers mocks={mocks} addTypename={false}>
-        <AskNotificationsConnected onPressPrimary={jest.fn()} />
-      </Providers>
-    );
-
-    const tree = await renderWithApolloData(component);
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render with a user having granted push notifications permissions', async () => {
-    const component = (
-      <Providers
-        resolvers={{ Query: { notificationsEnabled: Promise.resolve(true) } }}
-        addTypename={false}
-      >
-        <AskNotificationsConnected onPressPrimary={jest.fn()} />
-      </Providers>
-    );
-
-    const tree = await renderWithApolloData(component);
-    expect(tree).toMatchSnapshot();
-  });
-
-  it('should render with no data in the cache', () => {
-    const tree = renderer.create(
-      <Providers>
-        <AskNotificationsConnected />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/AskNotifications/index.js b/apolloschurchapp/src/ui/Onboarding/slides/AskNotifications/index.js
deleted file mode 100644
index 865e500..0000000
--- a/apolloschurchapp/src/ui/Onboarding/slides/AskNotifications/index.js
+++ /dev/null
@@ -1,4 +0,0 @@
-import AskNotifications from './AskNotifications';
-
-export AskNotificationsConnected from './AskNotificationsConnected';
-export default AskNotifications;
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/Features/Features.js b/apolloschurchapp/src/ui/Onboarding/slides/Features/Features.js
deleted file mode 100644
index 5bc7a91..0000000
--- a/apolloschurchapp/src/ui/Onboarding/slides/Features/Features.js
+++ /dev/null
@@ -1,42 +0,0 @@
-import React, { memo } from 'react';
-import PropTypes from 'prop-types';
-
-import Slide, { SlideContent } from '../../Slide';
-
-const Features = memo(
-  ({ firstName, description, BackgroundComponent, ...props }) => (
-    <Slide {...props}>
-      {BackgroundComponent}
-      <SlideContent
-        title={`Hey ${firstName || 'friend'}!`}
-        description={description}
-      />
-    </Slide>
-  )
-);
-
-Features.displayName = 'Features';
-
-Features.propTypes = {
-  /* The `Swiper` component used in `<onBoarding>` looks for and hijacks the title prop of it's
-   * children. Thus we have to use more unique name.
-   */
-  firstName: PropTypes.string,
-  description: PropTypes.string,
-  /* Recommended usage:
-   * - `Image` (react-native)
-   * - `GradientOverlayImage` (@apollosproject/ui-kit) for increased readability
-   * - `Video` (react-native-video) because moving pictures!
-   */
-  BackgroundComponent: PropTypes.oneOfType([
-    PropTypes.arrayOf(PropTypes.node),
-    PropTypes.node,
-  ]),
-};
-
-Features.defaultProps = {
-  description:
-    "We'd like to help personalize your mobile experience so we can help you with every step on your journey.",
-};
-
-export default Features;
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/Features/Features.stories.js b/apolloschurchapp/src/ui/Onboarding/slides/Features/Features.stories.js
deleted file mode 100644
index cfb804a..0000000
--- a/apolloschurchapp/src/ui/Onboarding/slides/Features/Features.stories.js
+++ /dev/null
@@ -1,23 +0,0 @@
-import React from 'react';
-import { storiesOf } from '@storybook/react-native';
-import { GradientOverlayImage } from '@apollosproject/ui-kit';
-
-import Features from './Features';
-
-storiesOf('Onboarding/slides/Features', module)
-  .add('default', () => <Features isLoading />)
-  .add('firstName', () => <Features firstName={'firstName'} />)
-  .add('slideTitle', () => <Features slideTitle={'Custom title text'} />)
-  .add('description', () => (
-    <Features description={'Custom description text'} />
-  ))
-  .add('BackgroundComponent', () => (
-    <Features
-      BackgroundComponent={
-        <GradientOverlayImage
-          source={'https://picsum.photos/750/750/?random'}
-        />
-      }
-    />
-  ))
-  .add('Slide props', () => <Features onPressPrimary={() => {}} />);
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/Features/Features.tests.js b/apolloschurchapp/src/ui/Onboarding/slides/Features/Features.tests.js
deleted file mode 100644
index 56b88a5..0000000
--- a/apolloschurchapp/src/ui/Onboarding/slides/Features/Features.tests.js
+++ /dev/null
@@ -1,64 +0,0 @@
-import React from 'react';
-import renderer from 'react-test-renderer';
-import { GradientOverlayImage } from '@apollosproject/ui-kit';
-
-import Providers from 'apolloschurchapp/src/Providers';
-
-import Features from './Features';
-
-describe('The Onboarding Features component', () => {
-  it('should render', () => {
-    const tree = renderer.create(
-      <Providers>
-        <Features />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render a custom first name', () => {
-    const tree = renderer.create(
-      <Providers>
-        <Features firstName={'firstName'} />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render a custom title', () => {
-    const tree = renderer.create(
-      <Providers>
-        <Features slideTitle={'Custom title text'} />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render a custom description', () => {
-    const tree = renderer.create(
-      <Providers>
-        <Features description={'Custom description text'} />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render a BackgroundComponent', () => {
-    const tree = renderer.create(
-      <Providers>
-        <Features
-          BackgroundComponent={
-            <GradientOverlayImage
-              source={'https://picsum.photos/375/812/?random'}
-            />
-          }
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should pass additional props to Slide', () => {
-    const tree = renderer.create(
-      <Providers>
-        <Features onPressPrimary={jest.fn()} />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/Features/FeaturesConnected.js b/apolloschurchapp/src/ui/Onboarding/slides/Features/FeaturesConnected.js
deleted file mode 100644
index e38452c..0000000
--- a/apolloschurchapp/src/ui/Onboarding/slides/Features/FeaturesConnected.js
+++ /dev/null
@@ -1,20 +0,0 @@
-import React from 'react';
-import { Query } from 'react-apollo';
-
-import getUserFirstName from './getUserFirstName';
-import Features from '.';
-
-const AskNameConnected = (props) => (
-  <Query query={getUserFirstName}>
-    {({
-      loading,
-      data: {
-        currentUser: { profile: { firstName } = { campus: {} } } = {},
-      } = {},
-    }) => <Features firstName={firstName} isLoading={loading} {...props} />}
-  </Query>
-);
-
-AskNameConnected.displayName = AskNameConnected;
-
-export default AskNameConnected;
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/Features/FeaturesConnected.tests.js b/apolloschurchapp/src/ui/Onboarding/slides/Features/FeaturesConnected.tests.js
deleted file mode 100644
index adcc821..0000000
--- a/apolloschurchapp/src/ui/Onboarding/slides/Features/FeaturesConnected.tests.js
+++ /dev/null
@@ -1,34 +0,0 @@
-import React from 'react';
-import renderer from 'react-test-renderer';
-import wait from 'waait';
-
-import Providers from 'apolloschurchapp/src/Providers';
-
-import getUserFirstName from './getUserFirstName';
-import FeaturesConnected from './FeaturesConnected';
-
-describe('The Onboarding FeaturesConnected component', () => {
-  it('renders with a firstName when logged in', async () => {
-    const mock = {
-      request: {
-        query: getUserFirstName,
-      },
-      result: {
-        data: {
-          currentUser: {
-            profile: {
-              firstName: 'Marty',
-            },
-          },
-        },
-      },
-    };
-    const tree = renderer.create(
-      <Providers mocks={[mock]}>
-        <FeaturesConnected />
-      </Providers>
-    );
-    await wait(0); // wait for response from graphql
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/Features/getUserFirstName.js b/apolloschurchapp/src/ui/Onboarding/slides/Features/getUserFirstName.js
deleted file mode 100644
index 8b0e38c..0000000
--- a/apolloschurchapp/src/ui/Onboarding/slides/Features/getUserFirstName.js
+++ /dev/null
@@ -1,13 +0,0 @@
-import gql from 'graphql-tag';
-
-export default gql`
-  query getUserFirstName {
-    currentUser {
-      id
-      profile {
-        id
-        firstName
-      }
-    }
-  }
-`;
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/Features/index.js b/apolloschurchapp/src/ui/Onboarding/slides/Features/index.js
deleted file mode 100644
index 3d442b1..0000000
--- a/apolloschurchapp/src/ui/Onboarding/slides/Features/index.js
+++ /dev/null
@@ -1,4 +0,0 @@
-import Features from './Features';
-
-export FeaturesConnected from './FeaturesConnected';
-export default Features;
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/LocationFinder/LocationFinder.js b/apolloschurchapp/src/ui/Onboarding/slides/LocationFinder/LocationFinder.js
deleted file mode 100644
index 53eb8fe..0000000
--- a/apolloschurchapp/src/ui/Onboarding/slides/LocationFinder/LocationFinder.js
+++ /dev/null
@@ -1,106 +0,0 @@
-import React, { memo } from 'react';
-import PropTypes from 'prop-types';
-
-import { PaddedView, styled, Button, Touchable } from '@apollosproject/ui-kit';
-
-import CampusCard from 'apolloschurchapp/src/user-settings/Locations/CampusCard';
-
-import Slide, { SlideContent } from '../../Slide';
-
-const getCampusAddress = (campus) =>
-  `${campus.street1}\n${campus.city}, ${campus.state} ${campus.postalCode}`;
-
-const StyledCampusCard = styled(({ theme }) => ({
-  marginBottom: theme.sizing.baseUnit,
-}))(CampusCard);
-
-const StyledSlideContent = styled({
-  flex: 1,
-  justifyContent: 'space-between',
-})(SlideContent);
-
-// memo = sfc PureComponent 💥
-// eslint-disable-next-line react/display-name
-const LocationFinder = memo(
-  ({
-    onPressPrimary,
-    BackgroundComponent,
-    slideTitle,
-    description,
-    buttonText,
-    buttonDisabled,
-    onPressButton,
-    isCurrentCampus,
-    campus,
-    ...props
-  }) => (
-    <Slide
-      onPressPrimary={
-        campus /* show the primary action button (next) if we have a campus */
-          ? onPressPrimary
-          : null
-      }
-      onPressSecondary={
-        !campus /* show the secondary action button (skip) if we don't have a campus */
-          ? onPressPrimary
-          : null
-      }
-      {...props}
-    >
-      {BackgroundComponent}
-      <StyledSlideContent title={slideTitle} description={description}>
-        {campus ? (
-          <Touchable onPress={onPressButton}>
-            <StyledCampusCard
-              key={campus.id}
-              distance={campus.distanceFromLocation}
-              title={campus.name}
-              description={getCampusAddress(campus)}
-              images={[campus.image]}
-            />
-          </Touchable>
-        ) : (
-          <PaddedView horizontal={false}>
-            <Button
-              title={buttonText}
-              onPress={onPressButton}
-              disabled={buttonDisabled}
-              pill={false}
-            />
-          </PaddedView>
-        )}
-      </StyledSlideContent>
-    </Slide>
-  )
-);
-
-LocationFinder.propTypes = {
-  /* The `Swiper` component used in `<Onboarding>` looks for and hijacks the title prop of it's
-   * children. Thus we have to use a more unique name.
-   */
-  onPressPrimary: PropTypes.func,
-  BackgroundComponent: PropTypes.oneOfType([
-    PropTypes.arrayOf(PropTypes.node),
-    PropTypes.node,
-  ]),
-  slideTitle: PropTypes.string,
-  description: PropTypes.string,
-  buttonText: PropTypes.string,
-  buttonDisabled: PropTypes.bool,
-  onPressButton: PropTypes.func,
-  campus: PropTypes.oneOfType([
-    PropTypes.arrayOf(PropTypes.node),
-    PropTypes.node,
-  ]),
-  isCurrentCampus: PropTypes.bool,
-};
-
-LocationFinder.defaultProps = {
-  slideTitle: "Let's select your local campus",
-  description:
-    "We'll use your location to connect you with your nearby campus and community",
-  buttonText: 'Yes, find my local campus',
-  buttonDisabled: false,
-};
-
-export default LocationFinder;
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/LocationFinder/LocationFinder.stories.js b/apolloschurchapp/src/ui/Onboarding/slides/LocationFinder/LocationFinder.stories.js
deleted file mode 100644
index e41ed90..0000000
--- a/apolloschurchapp/src/ui/Onboarding/slides/LocationFinder/LocationFinder.stories.js
+++ /dev/null
@@ -1,50 +0,0 @@
-import React from 'react';
-import { storiesOf } from '@storybook/react-native';
-
-import { GradientOverlayImage } from '@apollosproject/ui-kit';
-
-import LocationFinder from './LocationFinder';
-
-storiesOf('Onboarding/slides/LocationFinder', module)
-  .add('default', () => <LocationFinder />)
-  .add('BackgroundComponent', () => (
-    <LocationFinder
-      BackgroundComponent={
-        <GradientOverlayImage
-          source={'https://picsum.photos/640/640/?random'}
-        />
-      }
-    />
-  ))
-  .add('slideTitle', () => <LocationFinder slideTitle={'Custom title text'} />)
-  .add('description', () => (
-    <LocationFinder description={'Custom description text'} />
-  ))
-  .add('campus', () => (
-    <LocationFinder
-      campus={{
-        id: 'Campus:a0f64573eabf00a607bec911794d50fb',
-        name: 'Lyon Estates',
-        latitude: 42.09203,
-        longitude: -88.13289,
-        distanceFromLocation: 88,
-        street1: '9303 Lyon Drive',
-        street2: '',
-        city: 'Hill Valley',
-        state: 'CA',
-        postalCode: '95420',
-        image: {
-          uri: 'https://picsum.photos/300/300/?random',
-        },
-      }}
-    />
-  ))
-  .add('buttonText', () => (
-    <LocationFinder
-      onPressButton={() => {}}
-      buttonText={'Custom button text'}
-    />
-  ))
-  .add('SlideWrapper props', () => (
-    <LocationFinder onPressSecondary={() => {}} />
-  ));
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/LocationFinder/LocationFinder.tests.js b/apolloschurchapp/src/ui/Onboarding/slides/LocationFinder/LocationFinder.tests.js
deleted file mode 100644
index 065ce4c..0000000
--- a/apolloschurchapp/src/ui/Onboarding/slides/LocationFinder/LocationFinder.tests.js
+++ /dev/null
@@ -1,106 +0,0 @@
-import React from 'react';
-import renderer from 'react-test-renderer';
-
-import { GradientOverlayImage } from '@apollosproject/ui-kit';
-import Providers from 'apolloschurchapp/src/Providers';
-
-import LocationFinder from './LocationFinder';
-
-const campus = {
-  id: 'Campus:a0f64573eabf00a607bec911794d50fb',
-  name: 'Chicago Campus',
-  latitude: 42.09203,
-  longitude: -88.13289,
-  distanceFromLocation: null,
-  street1: '67 Algonquin Rd',
-  street2: '',
-  city: 'South Barrington',
-  state: 'IL',
-  postalCode: '60010-6143',
-  image: {
-    uri: 'https://picsum.photos/300/300/?random',
-  },
-};
-
-describe('The Onboarding LocationFinder component', () => {
-  it('should render', () => {
-    const tree = renderer.create(
-      <Providers>
-        <LocationFinder />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render a BackgroundComponent', () => {
-    const tree = renderer.create(
-      <Providers>
-        <LocationFinder
-          BackgroundComponent={
-            <GradientOverlayImage
-              source={'https://picsum.photos/640/640/?random'}
-            />
-          }
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render a custom title', () => {
-    const tree = renderer.create(
-      <Providers>
-        <LocationFinder slideTitle={'Custom title text'} />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render a custom description', () => {
-    const tree = renderer.create(
-      <Providers>
-        <LocationFinder description={'Custom description text'} />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render with a button', () => {
-    const tree = renderer.create(
-      <Providers>
-        <LocationFinder onPressButton={jest.fn()} />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render the button disabled', () => {
-    const tree = renderer.create(
-      <Providers>
-        <LocationFinder
-          onPressButton={jest.fn()}
-          buttonDisabled
-          campus={campus}
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render a button with custom text', () => {
-    const tree = renderer.create(
-      <Providers>
-        <LocationFinder
-          onPressButton={jest.fn()}
-          buttonText={'Custom button text'}
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should pass additional props to Slide component', () => {
-    const tree = renderer.create(
-      <Providers>
-        <LocationFinder
-          onPressSecondary={jest.fn()}
-          secondaryNavText={'Later'}
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/LocationFinder/LocationFinderConnected.js b/apolloschurchapp/src/ui/Onboarding/slides/LocationFinder/LocationFinderConnected.js
deleted file mode 100644
index 22a66ba..0000000
--- a/apolloschurchapp/src/ui/Onboarding/slides/LocationFinder/LocationFinderConnected.js
+++ /dev/null
@@ -1,47 +0,0 @@
-import React, { PureComponent } from 'react';
-import PropTypes from 'prop-types';
-import { Query } from 'react-apollo';
-import { withNavigation } from 'react-navigation';
-import getUserCampus from './getUserCampus';
-import LocationFinder from '.';
-
-class LocationFinderConnected extends PureComponent {
-  state = { selectedCampus: false };
-
-  render() {
-    return (
-      <Query query={getUserCampus} fetchPolicy="cache-and-network">
-        {({
-          data: {
-            currentUser: {
-              profile: { campus } = {
-                campus: {},
-              },
-            } = {},
-          } = {},
-        }) => (
-          <LocationFinder
-            onPressButton={async () => {
-              this.setState({ selectedCampus: true });
-              this.props.navigation.navigate('LocationFinderMapView', {
-                onFinished: this.props.onPressPrimary,
-              });
-            }}
-            buttonText={'Yes, find my local campus'}
-            campus={this.state.selectedCampus ? campus : null}
-            onPressPrimary={this.props.onPressPrimary}
-            {...this.props}
-          />
-        )}
-      </Query>
-    );
-  }
-}
-
-LocationFinderConnected.propTypes = {
-  onPressPrimary: PropTypes.func,
-};
-
-LocationFinderConnected.displayName = 'LocationFinderConnected';
-
-export default withNavigation(LocationFinderConnected);
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/LocationFinder/LocationFinderConnected.tests.js b/apolloschurchapp/src/ui/Onboarding/slides/LocationFinder/LocationFinderConnected.tests.js
deleted file mode 100644
index 7b2cec6..0000000
--- a/apolloschurchapp/src/ui/Onboarding/slides/LocationFinder/LocationFinderConnected.tests.js
+++ /dev/null
@@ -1,81 +0,0 @@
-import React from 'react';
-import renderer from 'react-test-renderer';
-import Providers from 'apolloschurchapp/src/Providers';
-import { renderWithApolloData } from 'apolloschurchapp/src/utils/testUtils';
-
-import LocationFinderConnected from './LocationFinderConnected';
-import getUserCampus from './getUserCampus';
-
-const navigation = { navigate: jest.fn() };
-describe('The Onboarding LocationFinderConnected component', () => {
-  it('should render with a user not having a campus selected', async () => {
-    const mocks = [
-      {
-        request: {
-          query: getUserCampus,
-        },
-        result: {
-          data: { campus: null },
-        },
-      },
-    ];
-
-    const component = (
-      <Providers mocks={mocks} addTypename={false}>
-        <LocationFinderConnected navigation={navigation} />
-      </Providers>
-    );
-
-    const tree = await renderWithApolloData(component);
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render with a user having selected a campus', async () => {
-    const mocks = [
-      {
-        request: {
-          query: getUserCampus,
-        },
-        result: {
-          data: {
-            campus: {
-              campus: {
-                id: 'Campus:a0f64573eabf00a607bec911794d50fb',
-                name: 'Chicago Campus',
-                latitude: 42.09203,
-                longitude: -88.13289,
-                distanceFromLocation: null,
-                street1: '67 Algonquin Rd',
-                street2: '',
-                city: 'South Barrington',
-                state: 'IL',
-                postalCode: '60010-6143',
-                image: {
-                  uri:
-                    'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3Dede1fb83-968e-4bef-8d77-ad81c96e8a47',
-                },
-              },
-            },
-          },
-        },
-      },
-    ];
-
-    const component = (
-      <Providers mocks={mocks} addTypename={false}>
-        <LocationFinderConnected navigation={navigation} />
-      </Providers>
-    );
-
-    const tree = await renderWithApolloData(component);
-    expect(tree).toMatchSnapshot();
-  });
-
-  it('should render with no data in the cache', () => {
-    const tree = renderer.create(
-      <Providers>
-        <LocationFinderConnected navigation={navigation} />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/LocationFinder/LocationFinderMapView.js b/apolloschurchapp/src/ui/Onboarding/slides/LocationFinder/LocationFinderMapView.js
deleted file mode 100644
index 3534353..0000000
--- a/apolloschurchapp/src/ui/Onboarding/slides/LocationFinder/LocationFinderMapView.js
+++ /dev/null
@@ -1,27 +0,0 @@
-import React, { PureComponent } from 'react';
-import PropTypes from 'prop-types';
-
-import MapView from 'apolloschurchapp/src/user-settings/Locations';
-
-class LocationFinderMapView extends PureComponent {
-  static propTypes = {
-    navigation: PropTypes.shape({
-      getParam: PropTypes.func,
-      navigate: PropTypes.func,
-      goBack: PropTypes.func,
-    }),
-  };
-
-  static navigationOptions = () => ({
-    title: 'LocationFinderMapView',
-    header: null,
-  });
-
-  render() {
-    const { navigation } = this.props;
-    const onFinished = this.props.navigation.getParam('onFinished');
-    return <MapView navigation={navigation} onFinished={onFinished} />;
-  }
-}
-
-export default LocationFinderMapView;
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/LocationFinder/getUserCampus.js b/apolloschurchapp/src/ui/Onboarding/slides/LocationFinder/getUserCampus.js
deleted file mode 100644
index 7d5816a..0000000
--- a/apolloschurchapp/src/ui/Onboarding/slides/LocationFinder/getUserCampus.js
+++ /dev/null
@@ -1,16 +0,0 @@
-import gql from 'graphql-tag';
-import CampusParts from 'apolloschurchapp/src/user-settings/Locations/campusFragment';
-
-export default gql`
-  query getCurrentCampus {
-    currentUser {
-      id
-      profile {
-        campus {
-          ...CampusParts
-        }
-      }
-    }
-  }
-  ${CampusParts}
-`;
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/LocationFinder/index.js b/apolloschurchapp/src/ui/Onboarding/slides/LocationFinder/index.js
deleted file mode 100644
index 5693639..0000000
--- a/apolloschurchapp/src/ui/Onboarding/slides/LocationFinder/index.js
+++ /dev/null
@@ -1,5 +0,0 @@
-import LocationFinder from './LocationFinder';
-
-export LocationFinderConnected from './LocationFinderConnected';
-export LocationFinderMapView from './LocationFinderMapView';
-export default LocationFinder;
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/index.js b/apolloschurchapp/src/ui/Onboarding/slides/index.js
deleted file mode 100644
index 16c835a..0000000
--- a/apolloschurchapp/src/ui/Onboarding/slides/index.js
+++ /dev/null
@@ -1,10 +0,0 @@
-export AboutYou, { AboutYouConnected } from './AboutYou';
-export AskName, { AskNameConnected } from './AskName';
-export AskNotifications, {
-  AskNotificationsConnected,
-} from './AskNotifications';
-export LocationFinder, {
-  LocationFinderConnected,
-  LocationFinderMapView,
-} from './LocationFinder';
-export Features, { FeaturesConnected } from './Features';
diff --git a/apolloschurchapp/src/ui/Scripture/ScriptureHTMLView.js b/apolloschurchapp/src/ui/Scripture/ScriptureHTMLView.js
deleted file mode 100644
index 507c90b..0000000
--- a/apolloschurchapp/src/ui/Scripture/ScriptureHTMLView.js
+++ /dev/null
@@ -1,138 +0,0 @@
-import React from 'react';
-import { withProps } from 'recompose';
-import { Platform } from 'react-native';
-
-import { Paragraph, H4 } from '@apollosproject/ui-kit';
-import HTMLView, {
-  defaultRenderer,
-  wrapTextChildren,
-} from '@apollosproject/ui-htmlview';
-
-import {
-  ScriptureText,
-  VerseNumber,
-  RedLetters,
-  PoeticPause,
-} from './typography';
-
-const renderer = (node, { children, ...other }) => {
-  // the defaultRenderer support several basic elements out of the box,
-  // this function only needs to handle the cases that are unique to scripture.
-  const className = (node && node.attribs && node.attribs.class) || '';
-
-  /* Verse numbers
-   * https://github.com/americanbible/api-bible-assets/blob/master/scss/eb-scripture-style/modules/_chapters-verses.scss#L33
-   */
-  if (className.includes('v')) {
-    /* TODO: a single space before and importantly a non-breaking space (`\u00A0`) after wraps the number to
-     * temporarily space verse numbers when they are not at the beginning of a sentence or
-     * paragraph. It affects all instences (albeit less noticably in some cases) so a more procise
-     * fix in the future is prefered.
-     */
-    return (
-      <VerseNumber>
-        {' '}
-        {children}
-        {`\u00A0`}
-      </VerseNumber>
-    );
-  }
-
-  /* Speaker identification and descriptive titles ("Hebrew subtitle")
-   * https://github.com/americanbible/api-bible-assets/blob/master/scss/eb-scripture-style/modules/_titles-headings.scss#L109-L126
-   */
-  if (className.includes('sp') || className.includes('d')) {
-    return <H4 padded>{children}</H4>;
-  }
-
-  /* Indented poetic line These are sometimes seen as a quote of the OT in the NT as well.
-   * This uses spaces as a less ideal fix because we are bound by the limits of rendering HTML.
-   * https://github.com/americanbible/api-bible-assets/blob/master/scss/eb-scripture-style/modules/_poetry.scss#L2
-   */
-  if (className.includes('q1')) {
-    return (
-      <ScriptureText>
-        {'     '}
-        {children}
-      </ScriptureText>
-    );
-  }
-
-  /* Double indented poetic lines. These are sometimes seen as a quote of the OT in the NT as well.
-   * This uses spaces as a less ideal fix because we are bound by the limits of rendering HTML.
-   * https://github.com/americanbible/api-bible-assets/blob/master/scss/eb-scripture-style/modules/_poetry.scss#L7
-   */
-  if (className.includes('q2')) {
-    return (
-      <ScriptureText>
-        {'          '}
-        {children}
-      </ScriptureText>
-    );
-  }
-
-  /* Triple indented poetic lines. These are sometimes seen as a quote of the OT in the NT as well.
-   * This uses spaces as a less ideal fix because we are bound by the limits of rendering HTML.
-   * https://github.com/americanbible/api-bible-assets/blob/master/scss/eb-scripture-style/modules/_poetry.scss#L8
-   */
-  if (className.includes('q3')) {
-    return (
-      <ScriptureText>
-        {'               '}
-        {children}
-      </ScriptureText>
-    );
-  }
-
-  /* Quadruple indented poetic lines. These are sometimes seen as a quote of the OT in the NT as well.
-   * This uses spaces as a less ideal fix because we are bound by the limits of rendering HTML.
-   * https://github.com/americanbible/api-bible-assets/blob/master/scss/eb-scripture-style/modules/_poetry.scss#L9
-   */
-  if (className.includes('q4')) {
-    return (
-      <ScriptureText>
-        {'                    '}
-        {children}
-      </ScriptureText>
-    );
-  }
-
-  if (className.includes('wj')) {
-    return <RedLetters>{children}</RedLetters>;
-  }
-
-  /* Poetic pause ("Selah"). Highly conditional rendering due to Android not supporting nested text
-   * alignment (https://github.com/facebook/react-native/issues/18790) and needing to keep it
-   * somewhat attractive. TODO: revisit conditional code when issue is resolved or if we refactor
-   * the parser
-   *
-   * https://github.com/americanbible/api-bible-assets/blob/master/scss/eb-scripture-style/modules/_poetry.scss#L22
-   */
-  if (className.includes('qs')) {
-    return (
-      <PoeticPause>
-        {Platform.OS === 'ios' ? `\n` : null}
-        {children}
-        {Platform.OS === 'ios' ? `\n` : `\n\n`}
-      </PoeticPause>
-    );
-  }
-
-  if (node.name === 'p') {
-    return (
-      <Paragraph>
-        <ScriptureText>
-          {wrapTextChildren(children, ScriptureText)}
-        </ScriptureText>
-      </Paragraph>
-    );
-  }
-
-  return defaultRenderer(node, { children, ...other });
-};
-
-const ScriptureHTMLView = withProps({
-  renderer,
-})(HTMLView);
-
-export default ScriptureHTMLView;
diff --git a/apolloschurchapp/src/ui/Scripture/ScriptureItem.js b/apolloschurchapp/src/ui/Scripture/ScriptureItem.js
deleted file mode 100644
index b78993f..0000000
--- a/apolloschurchapp/src/ui/Scripture/ScriptureItem.js
+++ /dev/null
@@ -1,34 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-import { View } from 'react-native';
-
-import { Placeholder, H4, H6 } from '@apollosproject/ui-kit';
-
-import { LegalText } from './typography';
-import ScriptureHTMLView from './ScriptureHTMLView';
-
-const ScriptureItem = ({ reference, html, copyright, isLoading }) => (
-  <Placeholder.Paragraph
-    lineNumber={5}
-    onReady={!isLoading}
-    lastLineWidth="60%"
-    firstLineWidth="40%"
-  >
-    <View>
-      <H4>
-        <H4>{reference}</H4> <H6>WEB</H6>
-      </H4>
-      <ScriptureHTMLView>{html}</ScriptureHTMLView>
-      <LegalText>{copyright === 'PUBLIC DOMAIN' ? '' : copyright}</LegalText>
-    </View>
-  </Placeholder.Paragraph>
-);
-
-ScriptureItem.propTypes = {
-  reference: PropTypes.string,
-  html: PropTypes.string,
-  copyright: PropTypes.string,
-  isLoading: PropTypes.bool,
-};
-
-export default ScriptureItem;
diff --git a/apolloschurchapp/src/ui/Scripture/ScriptureItem.stories.js b/apolloschurchapp/src/ui/Scripture/ScriptureItem.stories.js
deleted file mode 100644
index c51b7ed..0000000
--- a/apolloschurchapp/src/ui/Scripture/ScriptureItem.stories.js
+++ /dev/null
@@ -1,210 +0,0 @@
-import React from 'react';
-import { ScrollView } from 'react-native';
-import { storiesOf } from '@storybook/react-native';
-import { PaddedView } from '@apollosproject/ui-kit';
-
-import ScriptureItem from './ScriptureItem';
-
-const genesis1 = {
-  scripture: {
-    reference: 'Genesis 1:1-5',
-    html:
-      '<p class="p"><span data-number="1" class="v">1</span>In the beginning, God created the heavens and the earth. <span data-number="2" class="v">2</span>The earth was formless and empty. Darkness was on the surface of the deep and God’s Spirit was hovering over the surface of the waters.</p><p class="p"><span data-number="3" class="v">3</span>God said, “Let there be light,” and there was light. <span data-number="4" class="v">4</span>God saw the light, and saw that it was good. God divided the light from the darkness. <span data-number="5" class="v">5</span>God called the light “day”, and the darkness he called “night”. There was evening and there was morning, the first day.</p>',
-    isLoading: false,
-    copyright: 'PUBLIC DOMAIN',
-  },
-};
-
-const john1 = {
-  scripture: {
-    reference: 'John 1:1',
-    html:
-      '<p class="p"><span data-number="1" class="v">1</span>In the beginning was the Word, and the Word was with God, and the Word was God. </p>',
-    isLoading: false,
-    copyright:
-      'PUBLIC DOMAIN except in the United Kingdom, where a Crown Copyright applies to printing the KJV. See http://www.cambridge.org/about-us/who-we-are/queens-printers-patent',
-  },
-};
-
-const psalm23 = {
-  scripture: {
-    reference: 'Psalm 23',
-    html:
-      '<p class="d">A Psalm by David.</p><p class="q1"><span data-number="1" class="v">1</span>Yahweh is my shepherd:</p><p class="q2">I shall lack nothing.</p><p class="q1"><span data-number="2" class="v">2</span>He makes me lie down in green pastures.</p><p class="q2">He leads me beside still waters.</p><p class="q1"><span data-number="3" class="v">3</span>He restores my soul.</p><p class="q2">He guides me in the paths of righteousness for his name’s sake.</p><p class="q1"><span data-number="4" class="v">4</span>Even though I walk through the valley of the shadow of death,</p><p class="q2">I will fear no evil, for you are with me.</p><p class="q1">Your rod and your staff,</p><p class="q2">they comfort me.</p><p class="q1"><span data-number="5" class="v">5</span>You prepare a table before me</p><p class="q2">in the presence of my enemies.</p><p class="q1">You anoint my head with oil.</p><p class="q2">My cup runs over.</p><p class="q1"><span data-number="6" class="v">6</span>Surely goodness and loving kindness shall follow me all the days of my life,</p><p class="q2">and I will dwell in Yahweh’s house forever.</p>',
-    isLoading: false,
-  },
-};
-
-const psalm32 = {
-  scripture: {
-    reference: 'Psalm 32',
-    html:
-      '<p class="d">By David. A contemplative psalm.</p><p class="q1"><span data-number="1" class="v">1</span>Blessed is he whose disobedience is forgiven,</p><p class="q2">whose sin is covered.</p><p class="q1"><span data-number="2" class="v">2</span>Blessed is the man to whom Yahweh doesn’t impute iniquity,</p><p class="q2">in whose spirit there is no deceit.</p><p class="q1"><span data-number="3" class="v">3</span>When I kept silence, my bones wasted away through my groaning all day long.</p><p class="q1"><span data-number="4" class="v">4</span>For day and night your hand was heavy on me.</p><p class="q2">My strength was sapped in the heat of summer. <span class="qs">Selah.</span></p><p class="q1"><span data-number="5" class="v">5</span>I acknowledged my sin to you.</p><p class="q2">I didn’t hide my iniquity.</p><p class="q1">I said, I will confess my transgressions to Yahweh,</p><p class="q2">and you forgave the iniquity of my sin. <span class="qs">Selah.</span></p><p class="q1"><span data-number="6" class="v">6</span>For this, let everyone who is godly pray to you in a time when you may be found.</p><p class="q2">Surely when the great waters overflow, they shall not reach to him.</p><p class="q1"><span data-number="7" class="v">7</span>You are my hiding place.</p><p class="q2">You will preserve me from trouble.</p><p class="q2">You will surround me with songs of deliverance. <span class="qs">Selah.</span></p><p class="q1"><span data-number="8" class="v">8</span>I will instruct you and teach you in the way which you shall go.</p><p class="q2">I will counsel you with my eye on you.</p><p class="q1"><span data-number="9" class="v">9</span>Don’t be like the horse, or like the mule, which have no understanding,</p><p class="q2">who are controlled by bit and bridle, or else they will not come near to you.</p><p class="q1"><span data-number="10" class="v">10</span>Many sorrows come to the wicked,</p><p class="q2">but loving kindness shall surround him who trusts in Yahweh.</p><p class="q1"><span data-number="11" class="v">11</span>Be glad in Yahweh, and rejoice, you righteous!</p><p class="q2">Shout for joy, all you who are upright in heart!</p>',
-  },
-};
-
-const psalm119 = {
-  scripture: {
-    reference: 'Psalm 119:129 - 144',
-    html:
-      '<p class="d">PEY</p><p class="q1"><span data-number="129" class="v">129</span>Your testimonies are wonderful,</p><p class="q2">therefore my soul keeps them.</p><p class="q1"><span data-number="130" class="v">130</span>The entrance of your words gives light.</p><p class="q2">It gives understanding to the simple.</p><p class="q1"><span data-number="131" class="v">131</span>I opened my mouth wide and panted,</p><p class="q2">for I longed for your commandments.</p><p class="q1"><span data-number="132" class="v">132</span>Turn to me, and have mercy on me,</p><p class="q2">as you always do to those who love your name.</p><p class="q1"><span data-number="133" class="v">133</span>Establish my footsteps in your word.</p><p class="q2">Don’t let any iniquity have dominion over me.</p><p class="q1"><span data-number="134" class="v">134</span>Redeem me from the oppression of man,</p><p class="q2">so I will observe your precepts.</p><p class="q1"><span data-number="135" class="v">135</span>Make your face shine on your servant.</p><p class="q2">Teach me your statutes.</p><p class="q1"><span data-number="136" class="v">136</span>Streams of tears run down my eyes,</p><p class="q2">because they don’t observe your law.</p><p class="d">TZADI</p><p class="q1"><span data-number="137" class="v">137</span>You are righteous, Yahweh.</p><p class="q2">Your judgments are upright.</p><p class="q1"><span data-number="138" class="v">138</span>You have commanded your statutes in righteousness.</p><p class="q2">They are fully trustworthy.</p><p class="q1"><span data-number="139" class="v">139</span>My zeal wears me out,</p><p class="q2">because my enemies ignore your words.</p><p class="q1"><span data-number="140" class="v">140</span>Your promises have been thoroughly tested,</p><p class="q2">and your servant loves them.</p><p class="q1"><span data-number="141" class="v">141</span>I am small and despised.</p><p class="q2">I don’t forget your precepts.</p><p class="q1"><span data-number="142" class="v">142</span>Your righteousness is an everlasting righteousness.</p><p class="q2">Your law is truth.</p><p class="q1"><span data-number="143" class="v">143</span>Trouble and anguish have taken hold of me.</p><p class="q2">Your commandments are my delight.</p><p class="q1"><span data-number="144" class="v">144</span>Your testimonies are righteous forever.</p><p class="q2">Give me understanding, that I may live.</p>',
-  },
-};
-
-const songOfSolomon1 = {
-  scripture: {
-    reference: 'Song of Solomon 1:1-4',
-    html:
-      '<p class="p"><span data-number="1" class="v">1</span>The Song of songs, which is Solomon’s.</p><p class="sp">Beloved</p><p class="q1"><span data-number="2" class="v">2</span>Let him kiss me with the kisses of his mouth;</p><p class="q2">for your love is better than wine.</p><p class="q1"><span data-number="3" class="v">3</span>Your oils have a pleasing fragrance.</p><p class="q2">Your name is oil poured out,</p><p class="q2">therefore the virgins love you.</p><p class="q1"><span data-number="4" class="v">4</span>Take me away with you.</p><p class="q2">Let’s hurry.</p><p class="q2">The king has brought me into his rooms.</p><p class="sp">Friends</p><p class="q1">We will be glad and rejoice in you.</p><p class="q2">We will praise your love more than wine!</p><p class="sp">Beloved</p><p class="q1">They are right to love you.</p>',
-    isLoading: false,
-  },
-};
-
-const mark1 = {
-  scripture: {
-    reference: 'Mark 1: 1-4',
-    html:
-      '<p class="p"><span data-number="1" class="v">1</span>The beginning of the Good News of Jesus Christ, the Son of God.</p><p class="p"><span data-number="2" class="v">2</span>As it is written in the prophets,</p><p class="q1">“Behold, I send my messenger before your face,</p><p class="q2">who will prepare your way before you:</p><p class="q1"><span data-number="3" class="v">3</span>the voice of one crying in the wilderness,</p><p class="q2">‘Make ready the way of the Lord!</p><p class="q2">Make his paths straight!’”</p><p class="p"><span data-number="4" class="v">4</span>John came baptizing in the wilderness and preaching the baptism of repentance for forgiveness of sins.',
-  },
-};
-
-const john3 = {
-  scripture: {
-    reference: 'John 3:16-17',
-    html:
-      '<p class="p"><span data-number="16" class="v">16</span><span class="wj">For God so loved the world, that he gave his one and only Son, that whoever believes in him should not perish, but have eternal life. </span><span data-number="17" class="v">17</span><span class="wj">For God didn’t send his Son into the world to judge the world, but that the world should be saved through him. </span></p>',
-    isLoading: false,
-  },
-};
-
-const revelation22 = {
-  scripture: {
-    reference: 'Revelation 22:20-21',
-    html:
-      '<p class="p"><span data-number="20" class="v">20</span>He who testifies these things says, <span class="wj">“Yes, I come quickly.” </span></p><p class="p">Amen! Yes, come, Lord Jesus.</p><p class="p"><span data-number="21" class="v">21</span>The grace of the Lord Jesus Christ be with all the saints. Amen.</p>',
-    isLoading: false,
-  },
-};
-
-const revelation22Loading = {
-  scripture: {
-    reference: 'Revelation 22:20-21',
-    html:
-      '<p class="p"><span data-number="20" class="v">20</span>He who testifies these things says, <span class="wj">“Yes, I come quickly.” </span></p><p class="p">Amen! Yes, come, Lord Jesus.</p><p class="p"><span data-number="21" class="v">21</span>The grace of the Lord Jesus Christ be with all the saints. Amen.</p>',
-    isLoading: true,
-  },
-};
-
-storiesOf('Scripture', module)
-  .add('Genesis 1:1-5', () => (
-    <ScrollView>
-      <PaddedView>
-        <ScriptureItem
-          reference={genesis1.scripture.reference}
-          html={genesis1.scripture.html}
-          isLoading={genesis1.scripture.isLoading}
-          copyright={genesis1.scripture.copyright}
-        />
-      </PaddedView>
-    </ScrollView>
-  ))
-  .add('John 1:1', () => (
-    <ScrollView>
-      <PaddedView>
-        <ScriptureItem
-          reference={john1.scripture.reference}
-          html={john1.scripture.html}
-          isLoading={john1.scripture.isLoading}
-          copyright={john1.scripture.copyright}
-        />
-      </PaddedView>
-    </ScrollView>
-  ))
-  .add('Psalm 23', () => (
-    <ScrollView>
-      <PaddedView>
-        <ScriptureItem
-          reference={psalm23.scripture.reference}
-          html={psalm23.scripture.html}
-          isLoading={psalm23.scripture.isLoading}
-        />
-      </PaddedView>
-    </ScrollView>
-  ))
-  .add('Psalm 32', () => (
-    <ScrollView>
-      <PaddedView>
-        <ScriptureItem
-          reference={psalm32.scripture.reference}
-          html={psalm32.scripture.html}
-          isLoading={psalm32.scripture.isLoading}
-        />
-      </PaddedView>
-    </ScrollView>
-  ))
-  .add('Psalm 119:129 - 144', () => (
-    <ScrollView>
-      <PaddedView>
-        <ScriptureItem
-          reference={psalm119.scripture.reference}
-          html={psalm119.scripture.html}
-          isLoading={psalm119.scripture.isLoading}
-        />
-      </PaddedView>
-    </ScrollView>
-  ))
-  .add('Song of Solomon 1:1-4', () => (
-    <ScrollView>
-      <PaddedView>
-        <ScriptureItem
-          reference={songOfSolomon1.scripture.reference}
-          html={songOfSolomon1.scripture.html}
-          isLoading={songOfSolomon1.scripture.isLoading}
-        />
-      </PaddedView>
-    </ScrollView>
-  ))
-  .add('Mark 1: 1-4', () => (
-    <ScrollView>
-      <PaddedView>
-        <ScriptureItem
-          reference={mark1.scripture.reference}
-          html={mark1.scripture.html}
-          isLoading={mark1.scripture.isLoading}
-        />
-      </PaddedView>
-    </ScrollView>
-  ))
-  .add('John 3:16-17', () => (
-    <ScrollView>
-      <PaddedView>
-        <ScriptureItem
-          reference={john3.scripture.reference}
-          html={john3.scripture.html}
-          isLoading={john3.scripture.isLoading}
-        />
-      </PaddedView>
-    </ScrollView>
-  ))
-  .add('Revelation 22:20-21', () => (
-    <ScrollView>
-      <PaddedView>
-        <ScriptureItem
-          reference={revelation22.scripture.reference}
-          html={revelation22.scripture.html}
-          isLoading={revelation22.scripture.isLoading}
-        />
-      </PaddedView>
-    </ScrollView>
-  ))
-  .add('Loading State', () => (
-    <ScrollView>
-      <PaddedView>
-        <ScriptureItem
-          reference={revelation22Loading.scripture.reference}
-          html={revelation22Loading.scripture.html}
-          isLoading={revelation22Loading.scripture.isLoading}
-        />
-      </PaddedView>
-    </ScrollView>
-  ));
diff --git a/apolloschurchapp/src/ui/Scripture/ScriptureItem.tests.js b/apolloschurchapp/src/ui/Scripture/ScriptureItem.tests.js
deleted file mode 100644
index b43256b..0000000
--- a/apolloschurchapp/src/ui/Scripture/ScriptureItem.tests.js
+++ /dev/null
@@ -1,198 +0,0 @@
-import React from 'react';
-import renderer from 'react-test-renderer';
-
-import Providers from 'apolloschurchapp/src/Providers';
-
-import ScriptureItem from './ScriptureItem';
-
-const genesis1 = {
-  scripture: {
-    reference: 'Genesis 1:1-5',
-    html:
-      '<p class="p"><span data-number="1" class="v">1</span>In the beginning, God created the heavens and the earth. <span data-number="2" class="v">2</span>The earth was formless and empty. Darkness was on the surface of the deep and God’s Spirit was hovering over the surface of the waters.</p><p class="p"><span data-number="3" class="v">3</span>God said, “Let there be light,” and there was light. <span data-number="4" class="v">4</span>God saw the light, and saw that it was good. God divided the light from the darkness. <span data-number="5" class="v">5</span>God called the light “day”, and the darkness he called “night”. There was evening and there was morning, the first day.</p>',
-    copyright: 'PUBLIC DOMAIN',
-  },
-};
-
-const psalm23 = {
-  scripture: {
-    reference: 'Psalm 23',
-    html:
-      '<p class="d">A Psalm by David.</p><p class="q1"><span data-number="1" class="v">1</span>Yahweh is my shepherd:</p><p class="q2">I shall lack nothing.</p><p class="q1"><span data-number="2" class="v">2</span>He makes me lie down in green pastures.</p><p class="q2">He leads me beside still waters.</p><p class="q1"><span data-number="3" class="v">3</span>He restores my soul.</p><p class="q2">He guides me in the paths of righteousness for his name’s sake.</p><p class="q1"><span data-number="4" class="v">4</span>Even though I walk through the valley of the shadow of death,</p><p class="q2">I will fear no evil, for you are with me.</p><p class="q1">Your rod and your staff,</p><p class="q2">they comfort me.</p><p class="q1"><span data-number="5" class="v">5</span>You prepare a table before me</p><p class="q2">in the presence of my enemies.</p><p class="q1">You anoint my head with oil.</p><p class="q2">My cup runs over.</p><p class="q1"><span data-number="6" class="v">6</span>Surely goodness and loving kindness shall follow me all the days of my life,</p><p class="q2">and I will dwell in Yahweh’s house forever.</p>',
-
-    copyright:
-      'PUBLIC DOMAIN except in the United Kingdom, where a Crown Copyright applies to printing the KJV. See http://www.cambridge.org/about-us/who-we-are/queens-printers-patent',
-  },
-};
-
-const psalm32 = {
-  scripture: {
-    reference: 'Psalm 32',
-    html:
-      '<p class="d">By David. A contemplative psalm.</p><p class="q1"><span data-number="1" class="v">1</span>Blessed is he whose disobedience is forgiven,</p><p class="q2">whose sin is covered.</p><p class="q1"><span data-number="2" class="v">2</span>Blessed is the man to whom Yahweh doesn’t impute iniquity,</p><p class="q2">in whose spirit there is no deceit.</p><p class="q1"><span data-number="3" class="v">3</span>When I kept silence, my bones wasted away through my groaning all day long.</p><p class="q1"><span data-number="4" class="v">4</span>For day and night your hand was heavy on me.</p><p class="q2">My strength was sapped in the heat of summer. <span class="qs">Selah.</span></p><p class="q1"><span data-number="5" class="v">5</span>I acknowledged my sin to you.</p><p class="q2">I didn’t hide my iniquity.</p><p class="q1">I said, I will confess my transgressions to Yahweh,</p><p class="q2">and you forgave the iniquity of my sin. <span class="qs">Selah.</span></p><p class="q1"><span data-number="6" class="v">6</span>For this, let everyone who is godly pray to you in a time when you may be found.</p><p class="q2">Surely when the great waters overflow, they shall not reach to him.</p><p class="q1"><span data-number="7" class="v">7</span>You are my hiding place.</p><p class="q2">You will preserve me from trouble.</p><p class="q2">You will surround me with songs of deliverance. <span class="qs">Selah.</span></p><p class="q1"><span data-number="8" class="v">8</span>I will instruct you and teach you in the way which you shall go.</p><p class="q2">I will counsel you with my eye on you.</p><p class="q1"><span data-number="9" class="v">9</span>Don’t be like the horse, or like the mule, which have no understanding,</p><p class="q2">who are controlled by bit and bridle, or else they will not come near to you.</p><p class="q1"><span data-number="10" class="v">10</span>Many sorrows come to the wicked,</p><p class="q2">but loving kindness shall surround him who trusts in Yahweh.</p><p class="q1"><span data-number="11" class="v">11</span>Be glad in Yahweh, and rejoice, you righteous!</p><p class="q2">Shout for joy, all you who are upright in heart!</p>',
-  },
-};
-
-const psalm119 = {
-  scripture: {
-    reference: 'Psalm 119:129 - 144',
-    html:
-      '<p class="d">PEY</p><p class="q1"><span data-number="129" class="v">129</span>Your testimonies are wonderful,</p><p class="q2">therefore my soul keeps them.</p><p class="q1"><span data-number="130" class="v">130</span>The entrance of your words gives light.</p><p class="q2">It gives understanding to the simple.</p><p class="q1"><span data-number="131" class="v">131</span>I opened my mouth wide and panted,</p><p class="q2">for I longed for your commandments.</p><p class="q1"><span data-number="132" class="v">132</span>Turn to me, and have mercy on me,</p><p class="q2">as you always do to those who love your name.</p><p class="q1"><span data-number="133" class="v">133</span>Establish my footsteps in your word.</p><p class="q2">Don’t let any iniquity have dominion over me.</p><p class="q1"><span data-number="134" class="v">134</span>Redeem me from the oppression of man,</p><p class="q2">so I will observe your precepts.</p><p class="q1"><span data-number="135" class="v">135</span>Make your face shine on your servant.</p><p class="q2">Teach me your statutes.</p><p class="q1"><span data-number="136" class="v">136</span>Streams of tears run down my eyes,</p><p class="q2">because they don’t observe your law.</p><p class="d">TZADI</p><p class="q1"><span data-number="137" class="v">137</span>You are righteous, Yahweh.</p><p class="q2">Your judgments are upright.</p><p class="q1"><span data-number="138" class="v">138</span>You have commanded your statutes in righteousness.</p><p class="q2">They are fully trustworthy.</p><p class="q1"><span data-number="139" class="v">139</span>My zeal wears me out,</p><p class="q2">because my enemies ignore your words.</p><p class="q1"><span data-number="140" class="v">140</span>Your promises have been thoroughly tested,</p><p class="q2">and your servant loves them.</p><p class="q1"><span data-number="141" class="v">141</span>I am small and despised.</p><p class="q2">I don’t forget your precepts.</p><p class="q1"><span data-number="142" class="v">142</span>Your righteousness is an everlasting righteousness.</p><p class="q2">Your law is truth.</p><p class="q1"><span data-number="143" class="v">143</span>Trouble and anguish have taken hold of me.</p><p class="q2">Your commandments are my delight.</p><p class="q1"><span data-number="144" class="v">144</span>Your testimonies are righteous forever.</p><p class="q2">Give me understanding, that I may live.</p>',
-  },
-};
-
-const songOfSolomon1 = {
-  scripture: {
-    reference: 'Song of Solomon 1:1-4',
-    html:
-      '<p class="p"><span data-number="1" class="v">1</span>The Song of songs, which is Solomon’s.</p><p class="sp">Beloved</p><p class="q1"><span data-number="2" class="v">2</span>Let him kiss me with the kisses of his mouth;</p><p class="q2">for your love is better than wine.</p><p class="q1"><span data-number="3" class="v">3</span>Your oils have a pleasing fragrance.</p><p class="q2">Your name is oil poured out,</p><p class="q2">therefore the virgins love you.</p><p class="q1"><span data-number="4" class="v">4</span>Take me away with you.</p><p class="q2">Let’s hurry.</p><p class="q2">The king has brought me into his rooms.</p><p class="sp">Friends</p><p class="q1">We will be glad and rejoice in you.</p><p class="q2">We will praise your love more than wine!</p><p class="sp">Beloved</p><p class="q1">They are right to love you.</p>',
-    isLoading: false,
-  },
-};
-
-const mark1 = {
-  scripture: {
-    reference: 'Mark 1:1-4',
-    html:
-      '<p class="p"><span data-number="1" class="v">1</span>The beginning of the Good News of Jesus Christ, the Son of God.</p><p class="p"><span data-number="2" class="v">2</span>As it is written in the prophets,</p><p class="q1">“Behold, I send my messenger before your face,</p><p class="q2">who will prepare your way before you:</p><p class="q1"><span data-number="3" class="v">3</span>the voice of one crying in the wilderness,</p><p class="q2">‘Make ready the way of the Lord!</p><p class="q2">Make his paths straight!’”</p><p class="p"><span data-number="4" class="v">4</span>John came baptizing in the wilderness and preaching the baptism of repentance for forgiveness of sins.',
-  },
-};
-
-const john3 = {
-  scripture: {
-    reference: 'John 3:16-17',
-    html:
-      '<p class="p"><span data-number="16" class="v">16</span><span class="wj">For God so loved the world, that he gave his one and only Son, that whoever believes in him should not perish, but have eternal life. </span><span data-number="17" class="v">17</span><span class="wj">For God didn’t send his Son into the world to judge the world, but that the world should be saved through him. </span></p>',
-    isLoading: false,
-  },
-};
-
-const revelation22 = {
-  scripture: {
-    reference: 'Revelation 22:20-21',
-    html:
-      '<p class="p"><span data-number="20" class="v">20</span>He who testifies these things says, <span class="wj">“Yes, I come quickly.” </span></p><p class="p">Amen! Yes, come, Lord Jesus.</p><p class="p"><span data-number="21" class="v">21</span>The grace of the Lord Jesus Christ be with all the saints. Amen.</p>',
-  },
-};
-
-const john3Loading = {
-  scripture: {
-    reference: 'John 3:16-17',
-    html:
-      '<p class="p"><span data-number="16" class="v">16</span><span class="wj">For God so loved the world, that he gave his one and only Son, that whoever believes in him should not perish, but have eternal life. </span><span data-number="17" class="v">17</span><span class="wj">For God didn’t send his Son into the world to judge the world, but that the world should be saved through him. </span></p>',
-    isLoading: true,
-  },
-};
-
-describe('the ScriptureItem component', () => {
-  it('renders Genesis 1:1-5', () => {
-    const tree = renderer.create(
-      <Providers>
-        <ScriptureItem
-          reference={genesis1.scripture.reference}
-          html={genesis1.scripture.html}
-          copyright={genesis1.scripture.copyright}
-          isLoading={false}
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('renders Psalm 23', () => {
-    const tree = renderer.create(
-      <Providers>
-        <ScriptureItem
-          reference={psalm23.scripture.reference}
-          html={psalm23.scripture.html}
-          copyright={psalm23.scripture.copyright}
-          isLoading={false}
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('renders Psalm 32', () => {
-    const tree = renderer.create(
-      <Providers>
-        <ScriptureItem
-          reference={psalm32.scripture.reference}
-          html={psalm32.scripture.html}
-          isLoading={false}
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('renders Psalm 119:129 - 144', () => {
-    const tree = renderer.create(
-      <Providers>
-        <ScriptureItem
-          reference={psalm119.scripture.reference}
-          html={psalm119.scripture.html}
-          isLoading={false}
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('renders Song of Solomon 1:1-4', () => {
-    const tree = renderer.create(
-      <Providers>
-        <ScriptureItem
-          reference={songOfSolomon1.scripture.reference}
-          html={songOfSolomon1.scripture.html}
-          isLoading={songOfSolomon1.scripture.isLoading}
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('renders Mark 1:1-4', () => {
-    const tree = renderer.create(
-      <Providers>
-        <ScriptureItem
-          reference={mark1.scripture.reference}
-          html={mark1.scripture.html}
-          isLoading={false}
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('renders John 3:16-17', () => {
-    const tree = renderer.create(
-      <Providers>
-        <ScriptureItem
-          reference={john3.scripture.reference}
-          html={john3.scripture.html}
-          isLoading={john3.scripture.isLoading}
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('renders Revelation 22:20-21', () => {
-    const tree = renderer.create(
-      <Providers>
-        <ScriptureItem
-          reference={revelation22.scripture.reference}
-          html={revelation22.scripture.html}
-          isLoading={false}
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('renders a loading state', () => {
-    const tree = renderer.create(
-      <Providers>
-        <ScriptureItem
-          reference={john3Loading.scripture.reference}
-          html={john3Loading.scripture.html}
-          isLoading={john3Loading.scripture.isLoading}
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/ui/Scripture/ScriptureList.js b/apolloschurchapp/src/ui/Scripture/ScriptureList.js
deleted file mode 100644
index f6d3015..0000000
--- a/apolloschurchapp/src/ui/Scripture/ScriptureList.js
+++ /dev/null
@@ -1,49 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-import { H4, styled, ButtonLink } from '@apollosproject/ui-kit';
-
-const StyledH4 = styled(({ theme }) => ({
-  color: theme.colors.primary,
-  textAlign: 'center',
-  textDecorationLine: 'underline',
-  paddingBottom: theme.sizing.baseUnit * 1.5,
-}))(H4);
-
-const ScriptureList = ({
-  references,
-  onPress,
-  tabDestination,
-  commas = true,
-}) => {
-  if (!references && commas) return '';
-  if (!references) return [];
-
-  let combo = references.map((reference) => `${reference}`);
-
-  if (commas) {
-    combo = combo.join(', ');
-  }
-
-  const handleOnPress = () => onPress(tabDestination);
-
-  return (
-    <StyledH4>
-      <ButtonLink padded onPress={handleOnPress}>
-        {combo}
-      </ButtonLink>
-    </StyledH4>
-  );
-};
-
-ScriptureList.propTypes = {
-  /** Toggles comma formating */
-  commas: PropTypes.bool,
-  /** The ButtonLink handler */
-  onPress: PropTypes.func,
-  /** An array of human readable references (i.e. '1 Corinthians 15:57') */
-  references: PropTypes.arrayOf(PropTypes.string),
-  /** The tab to go to onPress */
-  tabDestination: PropTypes.string,
-};
-
-export default ScriptureList;
diff --git a/apolloschurchapp/src/ui/Scripture/ScriptureList.tests.js b/apolloschurchapp/src/ui/Scripture/ScriptureList.tests.js
deleted file mode 100644
index d95c212..0000000
--- a/apolloschurchapp/src/ui/Scripture/ScriptureList.tests.js
+++ /dev/null
@@ -1,19 +0,0 @@
-import React from 'react';
-import renderer from 'react-test-renderer';
-
-import Providers from 'apolloschurchapp/src/Providers';
-
-import ScriptureList from './ScriptureList';
-
-const scriptureReferences = ['1 Corinthians 15:57', 'Exodus 17:8-15'];
-
-describe('the ScriptureList component', () => {
-  it('renders a scripture List', () => {
-    const tree = renderer.create(
-      <Providers>
-        <ScriptureList onPress={jest.fn()} references={scriptureReferences} />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/ui/Scripture/index.js b/apolloschurchapp/src/ui/Scripture/index.js
deleted file mode 100644
index 6458f99..0000000
--- a/apolloschurchapp/src/ui/Scripture/index.js
+++ /dev/null
@@ -1,2 +0,0 @@
-export { default } from './ScriptureItem';
-export ScriptureList from './ScriptureList';
diff --git a/apolloschurchapp/src/ui/Scripture/typography/ScriptureText/ScriptureText.stories.js b/apolloschurchapp/src/ui/Scripture/typography/ScriptureText/ScriptureText.stories.js
deleted file mode 100644
index 33ea0d2..0000000
--- a/apolloschurchapp/src/ui/Scripture/typography/ScriptureText/ScriptureText.stories.js
+++ /dev/null
@@ -1,44 +0,0 @@
-import React from 'react';
-import { View } from 'react-native';
-import { storiesOf } from '@storybook/react-native';
-
-import ScriptureText from '.';
-
-storiesOf('Scripture/typography/ScriptureText', module)
-  .add('Regular', () => (
-    <ScriptureText>
-      {`"God's commands are designed to guide you to life's very best. You will not obey Him, if you do not believe Him and trust Him. You cannot believe Him if you do not love Him. You cannot love Him unless you know Him." ― Henry Blackaby`}
-    </ScriptureText>
-  ))
-  .add('Bold', () => (
-    <ScriptureText bold>
-      {`"God's commands are designed to guide you to life's very best. You will not obey Him, if you do not believe Him and trust Him. You cannot believe Him if you do not love Him. You cannot love Him unless you know Him." ― Henry Blackaby`}
-    </ScriptureText>
-  ))
-  .add('Italic', () => (
-    <ScriptureText italic>
-      {`"God's commands are designed to guide you to life's very best. You will not obey Him, if you do not believe Him and trust Him. You cannot believe Him if you do not love Him. You cannot love Him unless you know Him." ― Henry Blackaby`}
-    </ScriptureText>
-  ))
-  .add('Bold Italic', () => (
-    <ScriptureText bold italic>
-      {`"God's commands are designed to guide you to life's very best. You will not obey Him, if you do not believe Him and trust Him. You cannot believe Him if you do not love Him. You cannot love Him unless you know Him." ― Henry Blackaby`}
-    </ScriptureText>
-  ))
-  .add('isLoading', () => (
-    <ScriptureText isLoading>
-      {`"God's commands are designed to guide you to life's very best. You will not obey Him, if you do not believe Him and trust Him. You cannot believe Him if you do not love Him. You cannot love Him unless you know Him." ― Henry Blackaby`}
-    </ScriptureText>
-  ))
-  .add('Border Box – platform testing', () => {
-    const border = { borderWidth: 1, borderStyle: 'solid' };
-
-    return (
-      <View>
-        <ScriptureText style={border}>Body Text</ScriptureText>
-        <ScriptureText style={border}>
-          {`"God's commands are designed to guide you to life's very best. You will not obey Him, if you do not believe Him and trust Him. You cannot believe Him if you do not love Him. You cannot love Him unless you know Him." ― Henry Blackaby`}
-        </ScriptureText>
-      </View>
-    );
-  });
diff --git a/apolloschurchapp/src/ui/Scripture/typography/ScriptureText/ScriptureText.tests.js b/apolloschurchapp/src/ui/Scripture/typography/ScriptureText/ScriptureText.tests.js
deleted file mode 100644
index f1c7012..0000000
--- a/apolloschurchapp/src/ui/Scripture/typography/ScriptureText/ScriptureText.tests.js
+++ /dev/null
@@ -1,72 +0,0 @@
-import React from 'react';
-import renderer from 'react-test-renderer';
-
-import Providers from 'apolloschurchapp/src/Providers';
-
-import ScriptureText from '.';
-
-describe('the ScriptureText component', () => {
-  it('should render correctly', () => {
-    const tree = renderer.create(
-      <Providers>
-        <ScriptureText>Default ScriptureText text</ScriptureText>
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render as bold', () => {
-    const tree = renderer.create(
-      <Providers>
-        <ScriptureText bold>Bold ScriptureText text</ScriptureText>
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render as italic', () => {
-    const tree = renderer.create(
-      <Providers>
-        <ScriptureText italic>Italic ScriptureText text</ScriptureText>
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render as bold italic', () => {
-    const tree = renderer.create(
-      <Providers>
-        <ScriptureText bold italic>
-          Bold italic ScriptureText text
-        </ScriptureText>
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should accept and render passed in styles', () => {
-    const salmon = { color: 'salmon' };
-    const tree = renderer.create(
-      <Providers>
-        <ScriptureText style={salmon}>Salmon text</ScriptureText>
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render a loading state', () => {
-    const tree = renderer.create(
-      <Providers>
-        <ScriptureText isLoading>Default ScriptureText text</ScriptureText>
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should accept additional props', () => {
-    const tree = renderer.create(
-      <Providers>
-        <ScriptureText accessible={false}>
-          {
-            '"True faith means holding nothing back. It means putting every hope in God\'s fidelity to His Promises." ― Francis Chan'
-          }
-        </ScriptureText>
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/ui/Scripture/typography/ScriptureText/index.js b/apolloschurchapp/src/ui/Scripture/typography/ScriptureText/index.js
deleted file mode 100644
index 6f216c7..0000000
--- a/apolloschurchapp/src/ui/Scripture/typography/ScriptureText/index.js
+++ /dev/null
@@ -1,47 +0,0 @@
-import { Text } from 'react-native';
-import PropTypes from 'prop-types';
-import { compose, pure, setDisplayName } from 'recompose';
-
-import { styled, withPlaceholder, Placeholder } from '@apollosproject/ui-kit';
-
-const { Typography } = Placeholder;
-
-const styles = styled(({ theme, bold, italic }) => {
-  let fontStack = theme.typography.serif.regular.default;
-
-  if (bold && italic) {
-    fontStack = theme.typography.serif.bold.italic;
-  } else if (bold) {
-    fontStack = theme.typography.serif.bold.default;
-  } else if (italic) {
-    fontStack = theme.typography.serif.regular.italic;
-  }
-
-  return {
-    fontSize: theme.helpers.rem(1),
-    lineHeight: theme.helpers.verticalRhythm(1, 1.625),
-    fontFamily: fontStack,
-    color: theme.colors.text.primary,
-  };
-}, 'ScriptureText');
-
-const ScriptureText = compose(
-  setDisplayName('ScriptureText'),
-  styles,
-  withPlaceholder(Typography),
-  pure
-)(Text);
-
-ScriptureText.propTypes = {
-  bold: PropTypes.bool,
-  italic: PropTypes.bool,
-  isLoading: PropTypes.bool, // display loading placeholder
-  ...Text.propTypes,
-};
-
-ScriptureText.defaultProps = {
-  bold: false,
-  italic: false,
-};
-
-export default ScriptureText;
diff --git a/apolloschurchapp/src/ui/Scripture/typography/index.js b/apolloschurchapp/src/ui/Scripture/typography/index.js
deleted file mode 100644
index b9ec8c2..0000000
--- a/apolloschurchapp/src/ui/Scripture/typography/index.js
+++ /dev/null
@@ -1,27 +0,0 @@
-import { Text } from 'react-native';
-
-import { styled } from '@apollosproject/ui-kit';
-
-import ScriptureText from './ScriptureText';
-
-const VerseNumber = styled(({ theme }) => ({
-  fontSize: theme.helpers.rem(0.6),
-  color: theme.colors.text.secondary,
-}))(ScriptureText);
-
-const RedLetters = styled(({ theme }) => ({
-  color: theme.colors.wordOfChrist,
-}))(Text);
-
-const PoeticPause = styled({
-  textAlign: 'right',
-})(ScriptureText);
-
-const LegalText = styled(({ theme }) => ({
-  fontSize: theme.helpers.rem(0.6),
-  lineHeight: theme.helpers.verticalRhythm(0.45),
-  fontFamily: theme.typography.sans.regular.default,
-  color: theme.colors.text.secondary,
-}))(ScriptureText);
-
-export { ScriptureText, VerseNumber, RedLetters, PoeticPause, LegalText };
diff --git a/apolloschurchapp/src/ui/Share/index.js b/apolloschurchapp/src/ui/Share/index.js
index 2f979c5..11e597f 100644
--- a/apolloschurchapp/src/ui/Share/index.js
+++ b/apolloschurchapp/src/ui/Share/index.js
@@ -34,6 +34,7 @@ Share.propTypes = {
     message: PropTypes.string,
     title: PropTypes.string,
     url: PropTypes.string,
+    id: PropTypes.string,
   }),
 };
 
diff --git a/apolloschurchapp/src/ui/ShareButton/ShareButton.tests.js b/apolloschurchapp/src/ui/ShareButton/ShareButton.tests.js
new file mode 100644
index 0000000..91d1cf1
--- /dev/null
+++ b/apolloschurchapp/src/ui/ShareButton/ShareButton.tests.js
@@ -0,0 +1,52 @@
+import React from 'react';
+import Providers from 'apolloschurchapp/src/Providers';
+import { renderWithApolloData } from 'apolloschurchapp/src/utils/testUtils';
+import getShareContent from './getShareContent';
+import ShareButton from '.';
+
+const shareMock = {
+  request: {
+    query: getShareContent,
+    variables: { itemId: '1' },
+  },
+  result: {
+    data: {
+      node: {
+        id: '1',
+        __typename: 'ContentSeriesContentItem',
+        sharing: {
+          url: 'https://apolloschurchapp.newspring.cc',
+          message: 'Test Message',
+          title: 'Test Title ',
+          __typename: 'SharableContentItem',
+        },
+      },
+    },
+  },
+};
+
+const mocks = [shareMock];
+
+describe('the ShareButton', () => {
+  it('renders a share button', async () => {
+    const tree = await renderWithApolloData(
+      <Providers mocks={mocks}>
+        <ShareButton itemId={'1'} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('renders a share button with custom url, message, and title', async () => {
+    const tree = await renderWithApolloData(
+      <Providers mocks={mocks}>
+        <ShareButton
+          itemId={'1'}
+          url={'https://apollosrock.com'}
+          message="Some great message"
+          title="Some great title"
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/ShareButton/getShareContent.js b/apolloschurchapp/src/ui/ShareButton/getShareContent.js
new file mode 100644
index 0000000..44718b3
--- /dev/null
+++ b/apolloschurchapp/src/ui/ShareButton/getShareContent.js
@@ -0,0 +1,16 @@
+import gql from 'graphql-tag';
+
+export default gql`
+  query getShareContent($itemId: ID!) {
+    node(id: $itemId) {
+      ... on ContentItem {
+        id
+        sharing {
+          url
+          message
+          title
+        }
+      }
+    }
+  }
+`;
diff --git a/apolloschurchapp/src/ui/ShareButton/index.js b/apolloschurchapp/src/ui/ShareButton/index.js
new file mode 100644
index 0000000..cc6d175
--- /dev/null
+++ b/apolloschurchapp/src/ui/ShareButton/index.js
@@ -0,0 +1,34 @@
+import React from 'react';
+
+import PropTypes from 'prop-types';
+import { Query } from 'react-apollo';
+import { get } from 'lodash';
+
+import Share from 'apolloschurchapp/src/ui/Share';
+
+import GET_SHARE_CONTENT from './getShareContent';
+
+const ShareButton = ({ itemId, title, message, url }) => (
+  <Query query={GET_SHARE_CONTENT} variables={{ itemId }}>
+    {({ data }) => {
+      const sharing = get(data, 'node.sharing', {});
+      const content = {
+        id: itemId,
+        title: title || sharing.title,
+        messsage: message || sharing.message,
+        url: url || sharing.url,
+      };
+      return <Share content={content} />;
+    }}
+  </Query>
+);
+
+ShareButton.propTypes = {
+  itemId: PropTypes.string.isRequired,
+  // These props are available to override the default sharing data for a node.
+  title: PropTypes.string,
+  message: PropTypes.string,
+  url: PropTypes.string,
+};
+
+export default ShareButton;
diff --git a/apolloschurchapp/src/ui/UserAvatarView/AvatarForm.js b/apolloschurchapp/src/ui/UserAvatarView/AvatarForm.js
index f4a46fe..1787f08 100644
--- a/apolloschurchapp/src/ui/UserAvatarView/AvatarForm.js
+++ b/apolloschurchapp/src/ui/UserAvatarView/AvatarForm.js
@@ -12,11 +12,11 @@ import {
   H5,
   styled,
 } from '@apollosproject/ui-kit';
-import getUserProfile from '../../tabs/connect/getUserProfile';
+import GET_USER_PROFILE from '../../tabs/connect/getUserProfile';
 import uploadPhoto from './uploadPhoto';
 
 const GetPhotoData = ({ children }) => (
-  <Query query={getUserProfile}>
+  <Query query={GET_USER_PROFILE}>
     {({ data: { currentUser = {} } = {} }) => {
       const photo = get(currentUser, 'profile.photo');
       return children({ photo });
@@ -28,10 +28,11 @@ GetPhotoData.propTypes = {
   children: PropTypes.func.isRequired,
 };
 
-const StyledAvatar = styled(({ theme }) => ({
+const StyledView = styled(({ theme }) => ({
   marginRight: 0,
-  marginBottom: theme.sizing.baseUnit / 2,
-}))(Avatar);
+  marginBottom: theme.sizing.baseUnit * 0.75,
+  marginTop: theme.sizing.baseUnit * 0.5,
+}))(View);
 
 const RoundTouchable = withTheme(({ theme, size }) => ({
   borderRadius: get(theme.sizing.avatar, size, theme.sizing.avatar.small),
@@ -78,13 +79,13 @@ export default class AvatarForm extends PureComponent {
             >
               <GetPhotoData>
                 {({ photo }) => (
-                  <View>
-                    <StyledAvatar
+                  <StyledView>
+                    <Avatar
                       source={photo}
                       size="medium"
                       isLoading={isUploadingFile}
                     />
-                  </View>
+                  </StyledView>
                 )}
               </GetPhotoData>
             </RoundTouchable>
diff --git a/apolloschurchapp/src/ui/UserAvatarView/UserAvatarView.stories.js b/apolloschurchapp/src/ui/UserAvatarView/UserAvatarView.stories.js
index 76cf42a..f32c776 100644
--- a/apolloschurchapp/src/ui/UserAvatarView/UserAvatarView.stories.js
+++ b/apolloschurchapp/src/ui/UserAvatarView/UserAvatarView.stories.js
@@ -1,5 +1,5 @@
 import React from 'react';
-import { storiesOf } from '@storybook/react-native';
+import { storiesOf } from '@apollosproject/ui-storybook';
 
 import UserAvatarView from '.';
 
diff --git a/apolloschurchapp/src/ui/UserAvatarView/uploadPhoto.js b/apolloschurchapp/src/ui/UserAvatarView/uploadPhoto.js
index cf0b4e0..4c051e5 100644
--- a/apolloschurchapp/src/ui/UserAvatarView/uploadPhoto.js
+++ b/apolloschurchapp/src/ui/UserAvatarView/uploadPhoto.js
@@ -1,7 +1,7 @@
 import gql from 'graphql-tag';
 import ImagePicker from 'react-native-image-picker';
 import { ReactNativeFile } from 'apollo-upload-client';
-import getUserProfile from '../../tabs/connect/getUserProfile';
+import GET_USER_PROFILE from '../../tabs/connect/getUserProfile';
 
 const options = {
   title: 'Select Profile Image',
@@ -57,10 +57,10 @@ export default async ({ client, onUpload = () => ({}) }) => {
           },
         }
       ) => {
-        const data = cache.readQuery({ query: getUserProfile });
+        const data = cache.readQuery({ query: GET_USER_PROFILE });
 
         cache.writeQuery({
-          query: getUserProfile,
+          query: GET_USER_PROFILE,
           data: {
             currentUser: {
               ...data.currentUser,
diff --git a/apolloschurchapp/src/user-settings/ChangePassword.js b/apolloschurchapp/src/user-settings/ChangePassword.js
index 6f5f027..6045e31 100644
--- a/apolloschurchapp/src/user-settings/ChangePassword.js
+++ b/apolloschurchapp/src/user-settings/ChangePassword.js
@@ -5,7 +5,6 @@ import { Mutation } from 'react-apollo';
 import { Formik } from 'formik';
 import * as Yup from 'yup';
 
-import { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';
 import {
   Button,
   ButtonLink,
@@ -13,10 +12,16 @@ import {
   BackgroundView,
   PaddedView,
   FlexedView,
+  styled,
 } from '@apollosproject/ui-kit';
 
-import getAuthToken from '../store/getAuthToken';
-import changePassword from './passwordChange';
+import GET_AUTH_TOKEN from '../store/getAuthToken';
+import CHANGE_PASSWORD from './passwordChange';
+
+const Footer = styled({
+  flex: 1,
+  justifyContent: 'flex-end',
+})(SafeAreaView);
 
 class ChangePassword extends PureComponent {
   static navigationOptions = ({ navigation }) => ({
@@ -39,32 +44,29 @@ class ChangePassword extends PureComponent {
 
   renderForm = (props) => (
     <FlexedView>
-      <KeyboardAwareScrollView>
-        <BackgroundView>
-          <PaddedView>
-            <TextInput
-              label="New Password"
-              type="password"
-              value={props.values.password}
-              error={props.touched.password && props.errors.password}
-              onChangeText={(text) => props.setFieldValue('password', text)}
-            />
-            <TextInput
-              label="Confirm Password"
-              type="password"
-              value={props.values.confirmPassword}
-              error={
-                props.touched.confirmPassword && props.errors.confirmPassword
-              }
-              onChangeText={(text) =>
-                props.setFieldValue('confirmPassword', text)
-              }
-            />
-          </PaddedView>
-        </BackgroundView>
-      </KeyboardAwareScrollView>
-
-      <SafeAreaView>
+      <BackgroundView>
+        <PaddedView>
+          <TextInput
+            label="New Password"
+            type="password"
+            value={props.values.password}
+            error={props.touched.password && props.errors.password}
+            onChangeText={(text) => props.setFieldValue('password', text)}
+          />
+          <TextInput
+            label="Confirm Password"
+            type="password"
+            value={props.values.confirmPassword}
+            error={
+              props.touched.confirmPassword && props.errors.confirmPassword
+            }
+            onChangeText={(text) =>
+              props.setFieldValue('confirmPassword', text)
+            }
+          />
+        </PaddedView>
+      </BackgroundView>
+      <Footer>
         <PaddedView>
           <Button
             disabled={props.isSubmitting}
@@ -73,17 +75,17 @@ class ChangePassword extends PureComponent {
             loading={props.isSubmitting}
           />
         </PaddedView>
-      </SafeAreaView>
+      </Footer>
     </FlexedView>
   );
 
   render() {
     return (
       <Mutation
-        mutation={changePassword}
+        mutation={CHANGE_PASSWORD}
         update={async (cache, { data: { token } }) => {
           await cache.writeQuery({
-            query: getAuthToken,
+            query: GET_AUTH_TOKEN,
             data: { authToken: token },
           });
 
diff --git a/apolloschurchapp/src/user-settings/Locations/CampusCard.js b/apolloschurchapp/src/user-settings/Locations/CampusCard.js
deleted file mode 100644
index d0af97d..0000000
--- a/apolloschurchapp/src/user-settings/Locations/CampusCard.js
+++ /dev/null
@@ -1,92 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-import { compose, pure } from 'recompose';
-import { Dimensions, View } from 'react-native';
-
-import {
-  Card,
-  ConnectedImage,
-  SideBySideView,
-  withIsLoading,
-  styled,
-  CardContent,
-  H5,
-  H6,
-} from '@apollosproject/ui-kit';
-
-const { width } = Dimensions.get('window');
-
-/* TODO: remove magic number. `theme.sizing.baseUnit * 2.25` This width value is a brittle
- * calculation of width minus `CampusCard` margins */
-export const CARD_WIDTH = width - 36;
-
-const enhance = compose(
-  withIsLoading,
-  pure
-);
-
-const HorizontalLayout = styled({
-  alignItems: 'center',
-})(SideBySideView);
-
-const HorizontalTextLayout = styled(({ theme }) => ({
-  height: theme.helpers.verticalRhythm(0.875),
-}))(SideBySideView);
-
-const RightColumn = styled(({ theme }) => ({
-  paddingVertical: theme.sizing.baseUnit * 0.85,
-  flex: 1,
-}))(CardContent);
-
-const CampusImage = styled({
-  aspectRatio: 1,
-  height: '100%',
-  alignSelf: 'stretch',
-  resizeMode: 'cover', // This is to make sure images smaller than the ProgressiveImage size will cover
-})(ConnectedImage);
-
-const CampusImageSizer = styled({
-  aspectRatio: 1,
-  height: '100%',
-  alignSelf: 'stretch',
-})(View);
-
-const StyledCard = styled(({ theme }) => ({
-  width: CARD_WIDTH,
-  height: theme.sizing.baseUnit * 6,
-  marginHorizontal: theme.sizing.baseUnit / 4,
-}))(Card);
-
-const CampusCard = enhance(
-  ({ title, description, distance, images, isLoading, ...otherProps }) => (
-    <StyledCard isLoading={isLoading} inHorizontalList {...otherProps}>
-      <HorizontalLayout>
-        {images ? (
-          <CampusImageSizer>
-            <CampusImage source={images} />
-          </CampusImageSizer>
-        ) : null}
-        <RightColumn>
-          <HorizontalTextLayout>
-            <H5>{title}</H5>
-            <H6>
-              {Math.round(distance)}
-              mi
-            </H6>
-          </HorizontalTextLayout>
-          {description ? <H6>{description}</H6> : null}
-        </RightColumn>
-      </HorizontalLayout>
-    </StyledCard>
-  )
-);
-
-CampusCard.propTypes = {
-  title: PropTypes.string.isRequired,
-  description: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),
-  images: PropTypes.any, // eslint-disable-line
-  category: PropTypes.string,
-  isLoading: PropTypes.bool,
-};
-
-export default CampusCard;
diff --git a/apolloschurchapp/src/user-settings/Locations/Locations.tests.js b/apolloschurchapp/src/user-settings/Locations/Locations.tests.js
index 627fc7f..53a4c91 100644
--- a/apolloschurchapp/src/user-settings/Locations/Locations.tests.js
+++ b/apolloschurchapp/src/user-settings/Locations/Locations.tests.js
@@ -2,7 +2,7 @@ import React from 'react';
 import { renderWithApolloData } from 'apolloschurchapp/src/utils/testUtils';
 
 import Providers from 'apolloschurchapp/src/Providers';
-import getCampusLocations from './getCampusLocations';
+import GET_CAMPUS_LOCATIONS from './getCampusLocations';
 import Location from './index';
 
 const campuses = [
@@ -80,6 +80,10 @@ describe('Display Native Map with Locations', () => {
     latitudeDelta: 100,
     longitudeDelta: 10,
   };
+  const userLocation = {
+    latitude: 39.104797,
+    longitude: -84.511959,
+  };
   it('Render a native map view', async () => {
     const navigation = {
       navigate: jest.fn(),
@@ -89,10 +93,10 @@ describe('Display Native Map with Locations', () => {
 
     const mock = {
       request: {
-        query: getCampusLocations,
+        query: GET_CAMPUS_LOCATIONS,
         variables: {
-          latitude: initialRegion.latitude,
-          longitude: initialRegion.longitude,
+          latitude: userLocation.latitude,
+          longitude: userLocation.longitude,
         },
       },
       result: {
diff --git a/apolloschurchapp/src/user-settings/Locations/MapView.js b/apolloschurchapp/src/user-settings/Locations/MapView.js
index ededd53..d69b876 100644
--- a/apolloschurchapp/src/user-settings/Locations/MapView.js
+++ b/apolloschurchapp/src/user-settings/Locations/MapView.js
@@ -1,18 +1,24 @@
 import React, { Component } from 'react';
 import PropTypes from 'prop-types';
-import { View, Animated } from 'react-native';
-import SafeAreaView from 'react-native-safe-area-view';
+import { View, Animated, Dimensions } from 'react-native';
+import { SafeAreaView } from 'react-navigation';
 import RNMapView from 'react-native-maps';
 import { debounce } from 'lodash';
 
-import { Button, PaddedView, styled, withTheme } from '@apollosproject/ui-kit';
+import {
+  Button,
+  PaddedView,
+  FlexedView,
+  styled,
+  withTheme,
+  CampusCard,
+} from '@apollosproject/ui-kit';
 
-import CampusCard, { CARD_WIDTH } from './CampusCard';
 import Marker from './Marker';
 
-const ContainerView = styled({
-  flex: 1,
-})(View);
+/* TODO: remove magic number. `theme.sizing.baseUnit * 2.25` This width value is a brittle
+ * calculation of width minus `CampusCard` margins */
+const CARD_WIDTH = Dimensions.get('window').width - 36;
 
 const FlexedMapView = styled({ flex: 1 })(({ mapRef, ...props }) => (
   <RNMapView ref={mapRef} {...props} />
@@ -21,13 +27,18 @@ const FlexedMapView = styled({ flex: 1 })(({ mapRef, ...props }) => (
 const getCampusAddress = (campus) =>
   `${campus.street1}\n${campus.city}, ${campus.state} ${campus.postalCode}`;
 
-const ScrollingView = styled({
+const Footer = styled({
   position: 'absolute',
   bottom: 0,
   left: 0,
   right: 0,
 })(View);
 
+const StyledCampusCard = styled(({ theme }) => ({
+  width: CARD_WIDTH,
+  marginHorizontal: theme.sizing.baseUnit / 4,
+}))(CampusCard);
+
 class MapView extends Component {
   static propTypes = {
     campuses: PropTypes.arrayOf(
@@ -82,40 +93,32 @@ class MapView extends Component {
     const cardIndex = Math.floor(value / CARD_WIDTH + 0.3); // animate 30% away from landing on the next item;
     const campus = this.props.campuses[cardIndex];
     this.setState({ campus });
-    if (!campus) return;
-
-    const { userLocation } = this.props;
-
-    let { latitude } = campus;
-    const { longitude } = campus;
-    let { latitudeDelta, longitudeDelta } = this.props.initialRegion;
-
-    if (userLocation) {
-      // Calculate rectangle that shows user's location in the view with campus at center
-      const minLat = Math.min(campus.latitude, userLocation.latitude);
-      const maxLat = Math.max(campus.latitude, userLocation.latitude);
-      const minLong = Math.min(campus.longitude, userLocation.longitude);
-      const mayLong = Math.max(campus.longitude, userLocation.longitude);
-
-      latitudeDelta = (maxLat - minLat) * 2.5;
-      longitudeDelta = (mayLong - minLong) * 2.5;
+    if (!campus) {
+      this.map.fitToCoordinates(
+        [...this.props.campuses, this.props.userLocation],
+        {
+          edgePadding: {
+            top: 100,
+            left: 100,
+            right: 100,
+            // This is higher to avoid the campus cards (baseUnit * 6) on the bottom
+            bottom: 100 + this.props.theme.sizing.baseUnit * 12,
+          },
+        }
+      );
+      return;
     }
 
-    // Now, we need to transform the given lat/lng/delta up to make room for cards at bottom.
-    // To make this math simpler, we'll assume the cards take up roughly 20% of the vertical space
-    const maxDelta = Math.max(latitudeDelta, longitudeDelta);
-    latitude -= maxDelta * 0.2; // move the view up 20%
-    latitudeDelta *= 1.2; // include 20% more area in the view
-
-    this.map.animateToRegion(
-      {
-        latitude,
-        longitude,
-        latitudeDelta,
-        longitudeDelta,
+    const { userLocation } = this.props;
+    this.map.fitToCoordinates([campus, userLocation], {
+      edgePadding: {
+        top: 100,
+        left: 100,
+        right: 100,
+        // This is higher to avoid the campus cards (baseUnit * 6) on the bottom
+        bottom: 100 + this.props.theme.sizing.baseUnit * 12,
       },
-      350
-    );
+    });
   };
 
   render() {
@@ -126,98 +129,83 @@ class MapView extends Component {
         index * CARD_WIDTH,
         (index + 1) * CARD_WIDTH,
       ];
-      const scale = this.animation.interpolate({
-        inputRange,
-        outputRange: [1, 2.5, 1],
-        extrapolate: 'clamp',
-      });
       const opacity = this.animation.interpolate({
         inputRange,
         outputRange: [0.35, 1, 0.35],
         extrapolate: 'clamp',
       });
-      return { scale, opacity };
+      return { opacity };
     });
 
     return (
-      <ContainerView>
-        <ContainerView>
-          <FlexedMapView
-            initialRegion={this.props.initialRegion}
-            showsUserLocation
-            mapRef={(map) => {
-              this.map = map;
-            }}
-          >
-            {campuses.map((campus, index) => {
-              const scaleStyle = {
-                transform: [
+      <FlexedView>
+        <FlexedMapView
+          initialRegion={this.props.initialRegion}
+          showsUserLocation
+          mapRef={(map) => {
+            this.map = map;
+          }}
+        >
+          {campuses.map((campus, index) => {
+            const campusOpacity = {
+              opacity: interpolations[index].opacity,
+            };
+            return (
+              <Marker
+                key={campus.id}
+                opacityStyle={campusOpacity}
+                latitude={campus.latitude}
+                longitude={campus.longitude}
+              />
+            );
+          })}
+        </FlexedMapView>
+        <Footer>
+          <SafeAreaView>
+            <Animated.ScrollView
+              horizontal
+              showsHorizontalScrollIndicator={false}
+              snapToInterval={CARD_WIDTH + 8} // account for padding
+              snapToAlignment={'start'}
+              decelerationRate={'fast'}
+              contentContainerStyle={this.contentContainerStyle} // correctly pads cards in ScrollView
+              scrollEventThrottle={16} // roughtly 1000ms/60fps = 16ms
+              onScroll={Animated.event(
+                [
                   {
-                    scale: interpolations[index].scale,
+                    nativeEvent: {
+                      contentOffset: {
+                        x: this.animation,
+                      },
+                    },
                   },
                 ],
-              };
-              const opacityStyle = {
-                opacity: interpolations[index].opacity,
-              };
-              return (
-                <Marker
+                { useNativeDriver: true }
+              )}
+            >
+              {campuses.map((campus) => (
+                <StyledCampusCard
                   key={campus.id}
-                  opacityStyle={opacityStyle}
-                  scaleStyle={scaleStyle}
-                  latitude={campus.latitude}
-                  longitude={campus.longitude}
-                />
-              );
-            })}
-          </FlexedMapView>
-          <ScrollingView>
-            <SafeAreaView forceInset={{ bottom: 'always', top: 'never' }}>
-              <Animated.ScrollView
-                horizontal
-                showsHorizontalScrollIndicator={false}
-                snapToInterval={CARD_WIDTH + 8} // account for padding
-                snapToAlignment={'start'}
-                decelerationRate={'fast'}
-                contentContainerStyle={this.contentContainerStyle} // correctly pads cards in ScrollView
-                scrollEventThrottle={16} // roughtly 1000ms/60fps = 16ms
-                onScroll={Animated.event(
-                  [
-                    {
-                      nativeEvent: {
-                        contentOffset: {
-                          x: this.animation,
-                        },
-                      },
-                    },
-                  ],
-                  { useNativeDriver: true }
-                )}
-              >
-                {campuses.map((campus) => (
-                  <CampusCard
-                    key={campus.id}
-                    distance={campus.distanceFromLocation}
-                    title={campus.name}
-                    description={getCampusAddress(campus)}
-                    images={[campus.image]}
-                  />
-                ))}
-              </Animated.ScrollView>
-              <PaddedView>
-                <Button
-                  title="Select Campus"
-                  pill={false}
-                  type="secondary"
-                  onPress={() =>
-                    onLocationSelect(this.state.campus || campuses[0])
-                  }
+                  distance={campus.distanceFromLocation}
+                  title={campus.name}
+                  description={getCampusAddress(campus)}
+                  images={[campus.image]}
                 />
-              </PaddedView>
-            </SafeAreaView>
-          </ScrollingView>
-        </ContainerView>
-      </ContainerView>
+              ))}
+            </Animated.ScrollView>
+            <PaddedView>
+              <Button
+                title="Select Campus"
+                pill={false}
+                type="secondary"
+                onPress={() =>
+                  onLocationSelect(this.state.campus || campuses[0])
+                }
+              />
+            </PaddedView>
+          </SafeAreaView>
+        </Footer>
+      </FlexedView>
     );
   }
 }
diff --git a/apolloschurchapp/src/user-settings/Locations/Marker.js b/apolloschurchapp/src/user-settings/Locations/Marker.js
index b7c10d7..0c98fa9 100644
--- a/apolloschurchapp/src/user-settings/Locations/Marker.js
+++ b/apolloschurchapp/src/user-settings/Locations/Marker.js
@@ -11,42 +11,29 @@ const MarkerView = styled(({ theme }) => ({
   height: 8,
   borderRadius: 4,
   backgroundColor: Color(theme.colors.primary).fade(theme.alpha.medium),
+  zIndex: 2,
 }))(View);
 
-const MarkerWrapView = styled({
-  alignItems: 'center',
-  justifyContent: 'center',
-})(View);
-
-// This is not good. Is there a better way to prevent cascading styles?
-
 const MarkerRingView = styled(({ theme }) => ({
   width: 24,
   height: 24,
   borderRadius: 12,
-  right: -8,
-  top: -8,
   backgroundColor: Color(theme.colors.primary).fade(theme.alpha.low),
-  position: 'absolute',
   borderWidth: 1,
   borderColor: Color(theme.colors.primary).fade(theme.alpha.medium),
-  alignItems: 'stretch',
+  alignItems: 'center',
+  justifyContent: 'center',
 }))(View);
 
-const StyledMarker = memo(
-  ({ latitude, longitude, opacityStyle, scaleStyle }) => (
-    <Marker coordinate={{ latitude, longitude }}>
-      <MarkerWrapView>
-        <Animated.View style={opacityStyle}>
-          <MarkerRingView>
-            <Animated.View style={scaleStyle} />
-          </MarkerRingView>
-          <MarkerView />
-        </Animated.View>
-      </MarkerWrapView>
-    </Marker>
-  )
-);
+const StyledMarker = memo(({ latitude, longitude, opacityStyle }) => (
+  <Marker coordinate={{ latitude, longitude }}>
+    <Animated.View style={opacityStyle}>
+      <MarkerRingView>
+        <MarkerView />
+      </MarkerRingView>
+    </Animated.View>
+  </Marker>
+));
 
 StyledMarker.displayName = 'StyledMarker';
 
@@ -54,7 +41,6 @@ StyledMarker.propTypes = {
   latitude: PropTypes.number.isRequired,
   longitude: PropTypes.number.isRequired,
   opacityStyle: PropTypes.shape({}),
-  scaleStyle: PropTypes.shape({}),
 };
 
 export default StyledMarker;
diff --git a/apolloschurchapp/src/user-settings/Locations/index.js b/apolloschurchapp/src/user-settings/Locations/index.js
index b4c03b8..bc2b6d6 100644
--- a/apolloschurchapp/src/user-settings/Locations/index.js
+++ b/apolloschurchapp/src/user-settings/Locations/index.js
@@ -5,13 +5,10 @@ import { Dimensions } from 'react-native';
 
 import { PaddedView, ButtonLink } from '@apollosproject/ui-kit';
 
-import getUserProfile from '../../tabs/connect/getUserProfile';
+import GET_CAMPUSES from './getCampusLocations';
+import CHANGE_CAMPUS from './campusChange';
 import MapView from './MapView';
 
-import getAllCampuses from './getCampusLocations';
-
-import campusChange from './campusChange';
-
 const getCurrentLocation = () =>
   new Promise((resolve, reject) => {
     navigator.geolocation.getCurrentPosition(
@@ -20,10 +17,6 @@ const getCurrentLocation = () =>
     );
   });
 
-const screen = Dimensions.get('window');
-
-const ASPECT_RATIO = screen.width / screen.height;
-
 class Location extends PureComponent {
   static propTypes = {
     navigation: PropTypes.shape({
@@ -46,7 +39,9 @@ class Location extends PureComponent {
       latitude: 39.809734,
       longitude: -98.555618,
       latitudeDelta: 100,
-      longitudeDelta: 100 * ASPECT_RATIO,
+      longitudeDelta:
+        (100 * Dimensions.get('window').width) /
+        Dimensions.get('window').height,
     },
   };
 
@@ -61,7 +56,10 @@ class Location extends PureComponent {
   });
 
   state = {
-    region: this.props.initialRegion,
+    userLocation: {
+      latitude: 39.104797,
+      longitude: -84.511959,
+    },
   };
 
   componentDidMount() {
@@ -79,38 +77,20 @@ class Location extends PureComponent {
 
   render() {
     const { navigation, onFinished } = this.props;
+    // we should use the `onFinished` from the navigation param, if it exists.
+    const handleFinished = navigation.getParam('onFinished', onFinished);
+
     return (
       <Query
-        query={getAllCampuses}
+        query={GET_CAMPUSES}
         variables={{
-          latitude: this.state.region.latitude,
-          longitude: this.state.region.longitude,
+          latitude: this.state.userLocation.latitude,
+          longitude: this.state.userLocation.longitude,
         }}
         fetchPolicy="cache-and-network"
       >
         {({ loading, error, data: { campuses = [] } = {} }) => (
-          <Mutation
-            mutation={campusChange}
-            update={async (cache, { data: { updateUserCampus } }) => {
-              const { currentUser } = await cache.readQuery({
-                query: getUserProfile,
-              });
-              await cache.writeQuery({
-                query: getUserProfile,
-                data: {
-                  currentUser: {
-                    ...currentUser,
-                    profile: {
-                      ...currentUser.profile,
-                      campus: {
-                        ...updateUserCampus.campus,
-                      },
-                    },
-                  },
-                },
-              });
-            }}
-          >
+          <Mutation mutation={CHANGE_CAMPUS}>
             {(handlePress) => (
               <MapView
                 navigation={navigation}
@@ -126,7 +106,7 @@ class Location extends PureComponent {
                     },
                   });
                   await navigation.goBack();
-                  if (onFinished) onFinished();
+                  if (handleFinished) handleFinished();
                 }}
               />
             )}
diff --git a/apolloschurchapp/src/user-settings/PersonDetails.tests.js b/apolloschurchapp/src/user-settings/PersonDetails.tests.js
index b55f57e..5234bf5 100644
--- a/apolloschurchapp/src/user-settings/PersonDetails.tests.js
+++ b/apolloschurchapp/src/user-settings/PersonDetails.tests.js
@@ -4,14 +4,14 @@ import wait from 'waait';
 
 import Providers from 'apolloschurchapp/src/Providers';
 
-import getUserProfile from '../tabs/connect/getUserProfile';
+import GET_USER_PROFILE from '../tabs/connect/getUserProfile';
 import PersonalDetails from './PersonalDetails';
 
 describe('PersonalDetails component', () => {
   it('renders PersonalDetails when logged in', async () => {
     const mock = {
       request: {
-        query: getUserProfile,
+        query: GET_USER_PROFILE,
       },
       result: {
         data: {
diff --git a/apolloschurchapp/src/user-settings/PersonalDetails.js b/apolloschurchapp/src/user-settings/PersonalDetails.js
index 71d7631..9404206 100644
--- a/apolloschurchapp/src/user-settings/PersonalDetails.js
+++ b/apolloschurchapp/src/user-settings/PersonalDetails.js
@@ -1,10 +1,15 @@
 import React, { PureComponent } from 'react';
 import PropTypes from 'prop-types';
-import { SafeAreaView } from 'react-native';
+import {
+  KeyboardAvoidingView,
+  StyleSheet,
+  StatusBar,
+  Platform,
+} from 'react-native';
+import { SafeAreaView, Header } from 'react-navigation';
 import { Query, Mutation } from 'react-apollo';
 import { Formik } from 'formik';
 import * as Yup from 'yup';
-import { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';
 
 import {
   TextInput,
@@ -12,11 +17,16 @@ import {
   FlexedView,
   Button,
   ButtonLink,
-  TableView,
+  styled,
 } from '@apollosproject/ui-kit';
 
-import getUserProfile from '../tabs/connect/getUserProfile';
-import updateCurrentUser from './updateCurrentUser';
+import GET_USER_PROFILE from '../tabs/connect/getUserProfile';
+import UPDATE_CURRENT_USER from './updateCurrentUser';
+
+const Footer = styled({
+  flex: 1,
+  justifyContent: 'flex-end',
+})(SafeAreaView);
 
 class PersonalDetails extends PureComponent {
   static navigationOptions = ({ navigation }) => ({
@@ -38,63 +48,65 @@ class PersonalDetails extends PureComponent {
   };
 
   renderForm = (props) => (
-    <FlexedView>
-      <KeyboardAwareScrollView>
-        <TableView>
-          <PaddedView>
-            <TextInput
-              label="First Name"
-              type="text"
-              value={props.values.firstName}
-              error={props.touched.firstName && props.errors.firstName}
-              onChangeText={(text) => props.setFieldValue('firstName', text)}
-            />
-            <TextInput
-              label="Last Name"
-              type="text"
-              value={props.values.lastName}
-              error={props.touched.lastName && props.errors.lastName}
-              onChangeText={(text) => props.setFieldValue('lastName', text)}
-            />
-          </PaddedView>
-        </TableView>
-        <TableView>
-          <PaddedView>
-            <TextInput
-              label="Email"
-              type="email"
-              value={props.values.email}
-              error={props.touched.email && props.errors.email}
-              onChangeText={(text) => props.setFieldValue('email', text)}
-            />
-          </PaddedView>
-        </TableView>
-      </KeyboardAwareScrollView>
-      <SafeAreaView>
+    // have to add the offset to account for react-navigation header
+    <KeyboardAvoidingView
+      behavior={'padding'}
+      style={StyleSheet.absoluteFill}
+      keyboardVerticalOffset={
+        Header.HEIGHT +
+        (Platform.OS === 'android' ? StatusBar.currentHeight : 0)
+      }
+    >
+      <FlexedView>
         <PaddedView>
-          <Button
-            disabled={!props.isValid || props.isSubmitting}
-            onPress={props.handleSubmit}
-            title="Save"
-            loading={props.isSubmitting}
+          <TextInput
+            label="First Name"
+            type="text"
+            value={props.values.firstName}
+            error={props.touched.firstName && props.errors.firstName}
+            onChangeText={(text) => props.setFieldValue('firstName', text)}
+          />
+          <TextInput
+            label="Last Name"
+            type="text"
+            value={props.values.lastName}
+            error={props.touched.lastName && props.errors.lastName}
+            onChangeText={(text) => props.setFieldValue('lastName', text)}
+          />
+          <TextInput
+            label="Email"
+            type="email"
+            value={props.values.email}
+            error={props.touched.email && props.errors.email}
+            onChangeText={(text) => props.setFieldValue('email', text)}
           />
         </PaddedView>
-      </SafeAreaView>
-    </FlexedView>
+        <Footer>
+          <PaddedView>
+            <Button
+              disabled={!props.isValid || props.isSubmitting}
+              onPress={props.handleSubmit}
+              title="Save"
+              loading={props.isSubmitting}
+            />
+          </PaddedView>
+        </Footer>
+      </FlexedView>
+    </KeyboardAvoidingView>
   );
 
   render() {
     return (
-      <Query query={getUserProfile} fetchPolicy="cache-and-network">
+      <Query query={GET_USER_PROFILE} fetchPolicy="cache-and-network">
         {({ data: { currentUser = { profile: {} } } = {} }) => {
           const { firstName, lastName, email } = currentUser.profile;
 
           return (
             <Mutation
-              mutation={updateCurrentUser}
+              mutation={UPDATE_CURRENT_USER}
               update={async (cache, { data: { updateProfileFields } }) => {
                 await cache.writeQuery({
-                  query: getUserProfile,
+                  query: GET_USER_PROFILE,
                   data: {
                     currentUser: {
                       ...currentUser,
diff --git a/apolloschurchapp/src/user-settings/UserSettings.tests.js b/apolloschurchapp/src/user-settings/UserSettings.tests.js
index 5cb5377..9a1f3d3 100644
--- a/apolloschurchapp/src/user-settings/UserSettings.tests.js
+++ b/apolloschurchapp/src/user-settings/UserSettings.tests.js
@@ -4,14 +4,14 @@ import wait from 'waait';
 
 import Providers from 'apolloschurchapp/src/Providers';
 
-import getLoginState from '../tabs/connect/getLoginState';
+import GET_LOGIN_STATE from '../tabs/connect/getLoginState';
 import UserSettings from '.';
 
 describe('UserSettings component', () => {
   it('renders UserSettings when logged in', async () => {
     const mock = {
       request: {
-        query: getLoginState,
+        query: GET_LOGIN_STATE,
       },
       result: {
         data: { isLoggedIn: true },
diff --git a/apolloschurchapp/src/user-settings/index.js b/apolloschurchapp/src/user-settings/index.js
index c386327..30b1044 100644
--- a/apolloschurchapp/src/user-settings/index.js
+++ b/apolloschurchapp/src/user-settings/index.js
@@ -18,7 +18,7 @@ import {
 import { WebBrowserConsumer } from 'apolloschurchapp/src/ui/WebBrowser';
 import AvatarForm from 'apolloschurchapp/src/ui/UserAvatarView/AvatarForm';
 
-import { getLoginState, logout } from '@apollosproject/ui-auth';
+import { GET_LOGIN_STATE, LOGOUT } from '@apollosproject/ui-auth';
 
 const AvatarView = styled({
   alignItems: 'center',
@@ -43,7 +43,7 @@ class UserSettings extends PureComponent {
 
   render() {
     return (
-      <Query query={getLoginState} fetchPolicy="cache-and-network">
+      <Query query={GET_LOGIN_STATE} fetchPolicy="cache-and-network">
         {({ data: { isLoggedIn = false, loading } }) => {
           if (loading) return <ActivityIndicator />;
           if (!isLoggedIn) return null;
@@ -129,7 +129,7 @@ class UserSettings extends PureComponent {
                       </Touchable>
                     </TableView>
                     <TableView>
-                      <Mutation mutation={logout}>
+                      <Mutation mutation={LOGOUT}>
                         {(handleLogout) => (
                           <Touchable
                             onPress={async () => {
diff --git a/apolloschurchapp/src/utils/fetchMoreResolver.js b/apolloschurchapp/src/utils/fetchMoreResolver.js
new file mode 100644
index 0000000..d812283
--- /dev/null
+++ b/apolloschurchapp/src/utils/fetchMoreResolver.js
@@ -0,0 +1,42 @@
+import get from 'lodash/get';
+import set from 'lodash/fp/set';
+
+export default function fetchMoreResolver({
+  collectionName,
+  variables,
+  fetchMore,
+  data,
+} = {}) {
+  return () => {
+    const pageInfoPath = `${collectionName}.pageInfo`;
+    const edgePath = `${collectionName}.edges`;
+
+    const after = get(data, `${pageInfoPath}.endCursor`);
+    if (!after) return;
+
+    fetchMore({
+      variables: { ...variables, after },
+      updateQuery: (previousResult, { fetchMoreResult }) => {
+        // combine previous data and fetchMore data
+        const newDataWithPageInfo = set(
+          pageInfoPath,
+          {
+            ...get(previousResult, pageInfoPath, {}),
+            ...get(fetchMoreResult, pageInfoPath, {}),
+          },
+          previousResult
+        );
+        const newDataWithAdditionalItems = set(
+          edgePath,
+          [
+            ...get(previousResult, edgePath, []),
+            ...get(fetchMoreResult, edgePath, []),
+          ],
+          newDataWithPageInfo
+        );
+
+        return newDataWithAdditionalItems;
+      },
+    });
+  };
+}
diff --git a/apolloschurchapp/storybook/.babelrc b/apolloschurchapp/storybook/.babelrc
deleted file mode 100644
index cfb9634..0000000
--- a/apolloschurchapp/storybook/.babelrc
+++ /dev/null
@@ -1 +0,0 @@
-{ "presets": ["module:metro-react-native-babel-preset"] }
diff --git a/apolloschurchapp/storybook/Welcome/Intro.js b/apolloschurchapp/storybook/Welcome/Intro.js
new file mode 100644
index 0000000..2e8b8d7
--- /dev/null
+++ b/apolloschurchapp/storybook/Welcome/Intro.js
@@ -0,0 +1,43 @@
+import React from 'react';
+import { Paragraph, BodyText } from '@apollosproject/ui-kit';
+
+import { Slide, SlideContent } from '@apollosproject/ui-onboarding';
+
+const Intro = () => (
+  <Slide>
+    <SlideContent title={`Welcome to ${'\n'}Apollos Storybook!`} icon>
+      <Paragraph>
+        <BodyText>
+          Storybook is the component workshop for the Apollos app platform.
+        </BodyText>
+      </Paragraph>
+      <Paragraph>
+        <BodyText>
+          A story is a single state of one or more UI components. You can have
+          as many stories as you want.
+        </BodyText>
+      </Paragraph>
+      <Paragraph>
+        <BodyText>
+          We use Storybook to help document UI and to serve as visual test cases
+          for different states.
+        </BodyText>
+      </Paragraph>
+      <Paragraph>
+        <BodyText>
+          Open the navigator using the navigation bar at the bottom of the
+          screen to navigate the available stories.
+        </BodyText>
+      </Paragraph>
+      <Paragraph>
+        <BodyText>
+          The stories defined inside of your app will be listed first, with
+          Apollos UI stories below them. If you setup a theme, all of the
+          stories will reflect your theme.
+        </BodyText>
+      </Paragraph>
+    </SlideContent>
+  </Slide>
+);
+
+export default Intro;
diff --git a/apolloschurchapp/storybook/Welcome/Welcome.stories.js b/apolloschurchapp/storybook/Welcome/Welcome.stories.js
deleted file mode 100644
index f1c9a65..0000000
--- a/apolloschurchapp/storybook/Welcome/Welcome.stories.js
+++ /dev/null
@@ -1,9 +0,0 @@
-import React from 'react';
-import { storiesOf } from '@storybook/react-native';
-import { linkTo } from '@storybook/addon-links';
-
-import Welcome from '.';
-
-storiesOf('Welcome', module).add('to Storybook', () => (
-  <Welcome showApp={linkTo('Button')} />
-));
diff --git a/apolloschurchapp/storybook/Welcome/index.js b/apolloschurchapp/storybook/Welcome/index.js
index 78f7086..6c1e852 100644
--- a/apolloschurchapp/storybook/Welcome/index.js
+++ b/apolloschurchapp/storybook/Welcome/index.js
@@ -1,57 +1,9 @@
 import React from 'react';
-import PropTypes from 'prop-types';
-import { View, Text } from 'react-native';
+import { storiesOf } from '@apollosproject/ui-storybook';
 
-export default class Welcome extends React.Component {
-  styles = {
-    wrapper: {
-      flex: 1,
-      padding: 24,
-      justifyContent: 'center',
-    },
-    header: {
-      fontSize: 18,
-      marginBottom: 18,
-    },
-    content: {
-      fontSize: 12,
-      marginBottom: 10,
-      lineHeight: 18,
-    },
-  };
+import App from '../../src';
+import Intro from './Intro';
 
-  showApp(event) {
-    event.preventDefault();
-    if (this.props.showApp) this.props.showApp();
-  }
-
-  render() {
-    return (
-      <View style={this.styles.wrapper}>
-        <Text style={this.styles.header}>
-          Welcome to React Native Storybook
-        </Text>
-        <Text style={this.styles.content}>
-          This is a UI Component development environment for your React Native
-          app. Here you can display and interact with your UI components as
-          stories. A story is a single state of one or more UI components. You
-          can have as many stories as you want. In other words a story is like a
-          visual test case.
-        </Text>
-        <Text style={this.styles.content}>
-          We have added some stories inside the &quot;storybook/stories&quot;
-          directory for examples. Try editing the
-          &quot;storybook/stories/Welcome.js&quot; file to edit this message.
-        </Text>
-      </View>
-    );
-  }
-}
-
-Welcome.defaultProps = {
-  showApp: null,
-};
-
-Welcome.propTypes = {
-  showApp: PropTypes.func,
-};
+storiesOf('Storybook', module)
+  .add('Welcome', () => <Intro />)
+  .add('App', () => <App />);
diff --git a/apolloschurchapp/storybook/addons.js b/apolloschurchapp/storybook/addons.js
deleted file mode 100644
index 6aed412..0000000
--- a/apolloschurchapp/storybook/addons.js
+++ /dev/null
@@ -1,2 +0,0 @@
-import '@storybook/addon-actions/register';
-import '@storybook/addon-links/register';
diff --git a/apolloschurchapp/storybook/index.android.js b/apolloschurchapp/storybook/index.android.js
deleted file mode 100644
index f0513c5..0000000
--- a/apolloschurchapp/storybook/index.android.js
+++ /dev/null
@@ -1,3 +0,0 @@
-import StorybookUI from './storybook';
-
-export default StorybookUI;
diff --git a/apolloschurchapp/storybook/index.ios.js b/apolloschurchapp/storybook/index.ios.js
deleted file mode 100644
index f0513c5..0000000
--- a/apolloschurchapp/storybook/index.ios.js
+++ /dev/null
@@ -1,3 +0,0 @@
-import StorybookUI from './storybook';
-
-export default StorybookUI;
diff --git a/apolloschurchapp/storybook/index.js b/apolloschurchapp/storybook/index.js
index f0513c5..bcb07cf 100644
--- a/apolloschurchapp/storybook/index.js
+++ b/apolloschurchapp/storybook/index.js
@@ -1,3 +1,21 @@
-import StorybookUI from './storybook';
+import StorybookUI, {
+  loadApollosStories,
+  addApollosProviderDecorator,
+  configure,
+} from '@apollosproject/ui-storybook';
+import SplashScreen from 'react-native-splash-screen';
+import Providers from '../src/Providers';
+
+import { loadStories } from './storyLoader';
+
+addApollosProviderDecorator(Providers);
+
+configure(() => {
+  require('./Welcome');
+  loadStories();
+  loadApollosStories();
+
+  SplashScreen.hide();
+}, module);
 
 export default StorybookUI;
diff --git a/apolloschurchapp/storybook/storybook.js b/apolloschurchapp/storybook/storybook.js
deleted file mode 100644
index 19be073..0000000
--- a/apolloschurchapp/storybook/storybook.js
+++ /dev/null
@@ -1,35 +0,0 @@
-import React, { Component } from 'react';
-import { AppRegistry } from 'react-native';
-import {
-  getStorybookUI,
-  configure,
-  addDecorator,
-} from '@storybook/react-native';
-
-import Providers from 'apolloschurchapp/src/Providers';
-
-// storyLoader.js is generated on storybook start. next line disabled for CI test.
-import { loadStories } from './storyLoader'; // eslint-disable-line
-
-addDecorator((renderStorybook) => <Providers>{renderStorybook()}</Providers>);
-
-// import stories
-configure(() => {
-  loadStories();
-}, module);
-
-// This assumes that storybook is running on the same host as your RN packager,
-// to set manually use, e.g. host: 'localhost' option
-const StorybookUIRoot = getStorybookUI({ port: 7007, onDeviceUI: true });
-
-// react-native hot module loader must take in a Class - https://github.com/facebook/react-native/issues/10991
-// https://github.com/storybooks/storybook/issues/2081
-// eslint-disable-next-line react/prefer-stateless-function
-class StorybookUIHMRRoot extends Component {
-  render() {
-    return <StorybookUIRoot />;
-  }
-}
-
-AppRegistry.registerComponent('apolloschurchapp', () => StorybookUIHMRRoot);
-export default StorybookUIHMRRoot;
