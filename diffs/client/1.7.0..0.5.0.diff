diff --git a/apolloschurchapp/.babelrc b/apolloschurchapp/.babelrc
new file mode 100644
index 0000000..5df9466
--- /dev/null
+++ b/apolloschurchapp/.babelrc
@@ -0,0 +1,9 @@
+{
+  "presets": ["react-native", "module:react-native-dotenv"],
+  "plugins": [
+    ["@babel/plugin-proposal-decorators", {
+      "legacy": true
+    }],
+    ["@babel/plugin-proposal-export-default-from"]
+  ]
+}
\ No newline at end of file
diff --git a/apolloschurchapp/.env.production b/apolloschurchapp/.env.production
index b3e62a5..16fc8f8 100644
--- a/apolloschurchapp/.env.production
+++ b/apolloschurchapp/.env.production
@@ -1,5 +1 @@
-APP_DATA_URL=https://apollos-church-api.herokuapp.com/
-ONE_SIGNAL_KEY=$ONE_SIGNAL_KEY
-GOOGLE_MAPS_API_KEY=$GOOGLE_MAPS_API_KEY
-STORYBOOK=$STORYBOOK
-SCHEMA_VERSION=$SCHEMA_VERSION
+APP_DATA_URL=https://apollos-church-api.now.sh
diff --git a/apolloschurchapp/.env.shared.enc b/apolloschurchapp/.env.shared.enc
deleted file mode 100644
index 70433a614fb9b190c1ecff496f8d672ca87521ec..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 368
zcmV-$0gwJuVQh3|WM5zKk+hJ)^3abTVpsiDM%$jM0e!1RM0WsC^b8a-%JV<NnHxj}
zY{>nCD%^Q2)C7`fZ_aUA#Eu14t?wcXlOA>5<?S(lBz;e(NHex2zuj`cWE9+t^?|$v
z@V(`h=U0E#zwv{z5eXmo`3llL(moGzuWKSrcGQ1xjpX2xK3Kb>W$MterNaw7Oz6@q
z&z@|TZC?LoxV16c({74<-vc8^^##Oq=rm6|=l03mSAKUz#KJaS;NV#%ig=6-Kbt>7
z9U=BYQ>me8#;qw%A;lJ%5l1nkp<{*OETrVbAuUBh$FW;!Cu#TJL*EdI9<8`SjQUt5
zdZyG4Dxd?JtZ!RO(TjFmO0B1x*UlqnqF@O)9G+}<1-I+8^8OVu+vP*O%qB(&g)c_S
zWMeU&{3&6%3Yy6nkmg2WtdXSiNde{Dh>hqsdmv|lW)^@&*J-?&SoDC}!5ah4i1@YO
OpX+d79h}P>8vGdGDYzd1

diff --git a/apolloschurchapp/.eslintrc.js b/apolloschurchapp/.eslintrc.js
deleted file mode 100644
index 32d9ac8..0000000
--- a/apolloschurchapp/.eslintrc.js
+++ /dev/null
@@ -1,5 +0,0 @@
-module.exports = {
-  extends: [
-    '@apollosproject/eslint-config/client',
-  ],
-}
\ No newline at end of file
diff --git a/apolloschurchapp/.flowconfig b/apolloschurchapp/.flowconfig
index 1319ea1..3c0adb5 100644
--- a/apolloschurchapp/.flowconfig
+++ b/apolloschurchapp/.flowconfig
@@ -11,37 +11,24 @@
 ; Ignore duplicate module providers
 ; For RN Apps installed via npm, "Libraries" folder is inside
 ; "node_modules/react-native" but in the source repo it is in the root
-node_modules/react-native/Libraries/react-native/React.js
+.*/Libraries/react-native/React.js
 
 ; Ignore polyfills
-node_modules/react-native/Libraries/polyfills/.*
+.*/Libraries/polyfills/.*
 
-; These should not be required directly
-; require from fbjs/lib instead: require('fbjs/lib/warning')
-node_modules/warning/.*
-
-; Flow doesn't support platforms
-.*/Libraries/Utilities/HMRLoadingView.js
-
-[untyped]
-.*/node_modules/@react-native-community/cli/.*/.*
+; Ignore metro
+.*/node_modules/metro/.*
 
 [include]
 
 [libs]
 node_modules/react-native/Libraries/react-native/react-native-interface.js
 node_modules/react-native/flow/
+node_modules/react-native/flow-github/
 
 [options]
 emoji=true
 
-esproposal.optional_chaining=enable
-esproposal.nullish_coalescing=enable
-
-module.file_ext=.js
-module.file_ext=.json
-module.file_ext=.ios.js
-
 module.system=haste
 module.system.haste.use_name_reducers=true
 # get basename
@@ -54,46 +41,27 @@ module.system.haste.name_reducers='^\(.*\)\.android$' -> '\1'
 module.system.haste.name_reducers='^\(.*\)\.native$' -> '\1'
 module.system.haste.paths.blacklist=.*/__tests__/.*
 module.system.haste.paths.blacklist=.*/__mocks__/.*
-module.system.haste.paths.whitelist=<PROJECT_ROOT>/node_modules/react-native/Libraries/.*
-module.system.haste.paths.whitelist=<PROJECT_ROOT>/node_modules/react-native/RNTester/.*
-module.system.haste.paths.whitelist=<PROJECT_ROOT>/node_modules/react-native/IntegrationTests/.*
-module.system.haste.paths.blacklist=<PROJECT_ROOT>/node_modules/react-native/Libraries/react-native/react-native-implementation.js
 module.system.haste.paths.blacklist=<PROJECT_ROOT>/node_modules/react-native/Libraries/Animated/src/polyfills/.*
+module.system.haste.paths.whitelist=<PROJECT_ROOT>/node_modules/react-native/Libraries/.*
 
 munge_underscores=true
 
 module.name_mapper='^[./a-zA-Z0-9$_-]+\.\(bmp\|gif\|jpg\|jpeg\|png\|psd\|svg\|webp\|m4v\|mov\|mp4\|mpeg\|mpg\|webm\|aac\|aiff\|caf\|m4a\|mp3\|wav\|html\|pdf\)$' -> 'RelativeImageStub'
 
+module.file_ext=.js
+module.file_ext=.jsx
+module.file_ext=.json
+module.file_ext=.native.js
+
 suppress_type=$FlowIssue
 suppress_type=$FlowFixMe
 suppress_type=$FlowFixMeProps
 suppress_type=$FlowFixMeState
 
-suppress_comment=\\(.\\|\n\\)*\\$FlowFixMe\\($\\|[^(]\\|(\\(<VERSION>\\)? *\\(site=[a-z,_]*react_native\\(_ios\\)?_\\(oss\\|fb\\)[a-z,_]*\\)?)\\)
-suppress_comment=\\(.\\|\n\\)*\\$FlowIssue\\((\\(<VERSION>\\)? *\\(site=[a-z,_]*react_native\\(_ios\\)?_\\(oss\\|fb\\)[a-z,_]*\\)?)\\)?:? #[0-9]+
+suppress_comment=\\(.\\|\n\\)*\\$FlowFixMe\\($\\|[^(]\\|(\\(<VERSION>\\)? *\\(site=[a-z,_]*react_native[a-z,_]*\\)?)\\)
+suppress_comment=\\(.\\|\n\\)*\\$FlowIssue\\((\\(<VERSION>\\)? *\\(site=[a-z,_]*react_native[a-z,_]*\\)?)\\)?:? #[0-9]+
+suppress_comment=\\(.\\|\n\\)*\\$FlowFixedInNextDeploy
 suppress_comment=\\(.\\|\n\\)*\\$FlowExpectedError
 
-[lints]
-sketchy-null-number=warn
-sketchy-null-mixed=warn
-sketchy-number=warn
-untyped-type-import=warn
-nonstrict-import=warn
-deprecated-type=warn
-unsafe-getters-setters=warn
-inexact-spread=warn
-unnecessary-invariant=warn
-signature-verification-failure=warn
-deprecated-utility=error
-
-[strict]
-deprecated-type
-nonstrict-import
-sketchy-null
-unclear-type
-unsafe-getters-setters
-untyped-import
-untyped-type-import
-
 [version]
-^0.98.0
+^0.75.0
diff --git a/apolloschurchapp/.gitignore b/apolloschurchapp/.gitignore
index 751304e..12c1116 100644
--- a/apolloschurchapp/.gitignore
+++ b/apolloschurchapp/.gitignore
@@ -1,100 +1,5 @@
 # See https://help.github.com/ignore-files/ for more about ignoring files.
 
-# Logs
-logs
-*.log
-npm-debug.log*
-yarn-debug.log*
-yarn-error.log*
-coverage*
-
-# operating system files
-.DS_Store
-.DS_Store?
-.Spotlight-V100
-.Trashes
-ehthumbs.db
-Thumbs.db
-*.swp
-
-# Runtime data
-pids
-*.pid
-*.seed
-*.pid.lock
-
-
-# Directory for instrumented libs generated by jscoverage/JSCover
-lib-cov
-
-# Coverage directory used by tools like istanbul
-coverage
-
-# nyc test coverage
-.nyc_output
-
-# node-waf configuration
-.lock-wscript
-
-# Compiled binary addons (https://nodejs.org/api/addons.html)
-build/Release
-
-# Dependency directories
-node_modules/
-jspm_packages/
-
-# TypeScript v1 declaration files
-typings/
-
-# Optional npm cache directory
-.npm
-
-# Optional terraform
-.terraform
-source-*.tar.gz
-terraform.tfstate
-terraform.tfstate.backup
-terraform.tfvars
-
-# Optional eslint cache
-.eslintcache
-
-# Optional REPL history
-.node_repl_history
-
-# Output of 'npm pack'
-*.tgz
-
-# Yarn Integrity file
-.yarn-integrity
-
-# dotenv environment variables file
-.env
-.env.storybook
-
-# next.js build output
-.next
-
-# xcode
-build/
-
-# storybook
-storyLoader.js
-*.xcworkspacedata
-
-# sublime text settings
-*.sublime-project
-*.sublime-workspace
-
-# compiled code
-
-**/lib
-
-.watchmanconfig
-
-# generated markdown docs
-packages/**/docs/generated/*
-
 # expo
 .expo/
 
@@ -140,19 +45,3 @@ project.xcworkspace
 .env.development.local
 .env.test.local
 .env.production.local
-
-# CocoaPods
-/ios/Pods/
-
-# Fastlane
-fastlane/report.xml
-
-# symbols
-apolloschurchapp.app.dSYM.zip
-
-# Google Play authentication key
-key.json
-*.keystore
-
-# shared secrets
-.env.shared
diff --git a/apolloschurchapp/Gemfile b/apolloschurchapp/Gemfile
deleted file mode 100644
index 9947ac1..0000000
--- a/apolloschurchapp/Gemfile
+++ /dev/null
@@ -1,3 +0,0 @@
-source 'https://rubygems.org'
-gem 'cocoapods', '1.8.4'
-gem 'fastlane', '2.160.0'
diff --git a/apolloschurchapp/Gemfile.lock b/apolloschurchapp/Gemfile.lock
deleted file mode 100644
index bc2021d..0000000
--- a/apolloschurchapp/Gemfile.lock
+++ /dev/null
@@ -1,236 +0,0 @@
-GEM
-  remote: https://rubygems.org/
-  specs:
-    CFPropertyList (3.0.2)
-    activesupport (4.2.11.3)
-      i18n (~> 0.7)
-      minitest (~> 5.1)
-      thread_safe (~> 0.3, >= 0.3.4)
-      tzinfo (~> 1.1)
-    addressable (2.7.0)
-      public_suffix (>= 2.0.2, < 5.0)
-    algoliasearch (1.27.3)
-      httpclient (~> 2.8, >= 2.8.3)
-      json (>= 1.5.1)
-    atomos (0.1.3)
-    aws-eventstream (1.1.0)
-    aws-partitions (1.371.0)
-    aws-sdk-core (3.107.0)
-      aws-eventstream (~> 1, >= 1.0.2)
-      aws-partitions (~> 1, >= 1.239.0)
-      aws-sigv4 (~> 1.1)
-      jmespath (~> 1.0)
-    aws-sdk-kms (1.38.0)
-      aws-sdk-core (~> 3, >= 3.99.0)
-      aws-sigv4 (~> 1.1)
-    aws-sdk-s3 (1.81.0)
-      aws-sdk-core (~> 3, >= 3.104.3)
-      aws-sdk-kms (~> 1)
-      aws-sigv4 (~> 1.1)
-    aws-sigv4 (1.2.2)
-      aws-eventstream (~> 1, >= 1.0.2)
-    babosa (1.0.3)
-    claide (1.0.3)
-    cocoapods (1.8.4)
-      activesupport (>= 4.0.2, < 5)
-      claide (>= 1.0.2, < 2.0)
-      cocoapods-core (= 1.8.4)
-      cocoapods-deintegrate (>= 1.0.3, < 2.0)
-      cocoapods-downloader (>= 1.2.2, < 2.0)
-      cocoapods-plugins (>= 1.0.0, < 2.0)
-      cocoapods-search (>= 1.0.0, < 2.0)
-      cocoapods-stats (>= 1.0.0, < 2.0)
-      cocoapods-trunk (>= 1.4.0, < 2.0)
-      cocoapods-try (>= 1.1.0, < 2.0)
-      colored2 (~> 3.1)
-      escape (~> 0.0.4)
-      fourflusher (>= 2.3.0, < 3.0)
-      gh_inspector (~> 1.0)
-      molinillo (~> 0.6.6)
-      nap (~> 1.0)
-      ruby-macho (~> 1.4)
-      xcodeproj (>= 1.11.1, < 2.0)
-    cocoapods-core (1.8.4)
-      activesupport (>= 4.0.2, < 6)
-      algoliasearch (~> 1.0)
-      concurrent-ruby (~> 1.1)
-      fuzzy_match (~> 2.0.4)
-      nap (~> 1.0)
-    cocoapods-deintegrate (1.0.4)
-    cocoapods-downloader (1.4.0)
-    cocoapods-plugins (1.0.0)
-      nap
-    cocoapods-search (1.0.0)
-    cocoapods-stats (1.1.0)
-    cocoapods-trunk (1.5.0)
-      nap (>= 0.8, < 2.0)
-      netrc (~> 0.11)
-    cocoapods-try (1.2.0)
-    colored (1.2)
-    colored2 (3.1.2)
-    commander-fastlane (4.4.6)
-      highline (~> 1.7.2)
-    concurrent-ruby (1.1.7)
-    declarative (0.0.20)
-    declarative-option (0.1.0)
-    digest-crc (0.6.1)
-      rake (~> 13.0)
-    domain_name (0.5.20190701)
-      unf (>= 0.0.5, < 1.0.0)
-    dotenv (2.7.6)
-    emoji_regex (3.0.0)
-    escape (0.0.4)
-    excon (0.76.0)
-    faraday (1.0.1)
-      multipart-post (>= 1.2, < 3)
-    faraday-cookie_jar (0.0.7)
-      faraday (>= 0.8.0)
-      http-cookie (~> 1.0.0)
-    faraday_middleware (1.0.0)
-      faraday (~> 1.0)
-    fastimage (2.2.0)
-    fastlane (2.160.0)
-      CFPropertyList (>= 2.3, < 4.0.0)
-      addressable (>= 2.3, < 3.0.0)
-      aws-sdk-s3 (~> 1.0)
-      babosa (>= 1.0.3, < 2.0.0)
-      bundler (>= 1.12.0, < 3.0.0)
-      colored
-      commander-fastlane (>= 4.4.6, < 5.0.0)
-      dotenv (>= 2.1.1, < 3.0.0)
-      emoji_regex (>= 0.1, < 4.0)
-      excon (>= 0.71.0, < 1.0.0)
-      faraday (~> 1.0)
-      faraday-cookie_jar (~> 0.0.6)
-      faraday_middleware (~> 1.0)
-      fastimage (>= 2.1.0, < 3.0.0)
-      gh_inspector (>= 1.1.2, < 2.0.0)
-      google-api-client (>= 0.37.0, < 0.39.0)
-      google-cloud-storage (>= 1.15.0, < 2.0.0)
-      highline (>= 1.7.2, < 2.0.0)
-      json (< 3.0.0)
-      jwt (>= 2.1.0, < 3)
-      mini_magick (>= 4.9.4, < 5.0.0)
-      multipart-post (~> 2.0.0)
-      plist (>= 3.1.0, < 4.0.0)
-      rubyzip (>= 2.0.0, < 3.0.0)
-      security (= 0.1.3)
-      simctl (~> 1.6.3)
-      slack-notifier (>= 2.0.0, < 3.0.0)
-      terminal-notifier (>= 2.0.0, < 3.0.0)
-      terminal-table (>= 1.4.5, < 2.0.0)
-      tty-screen (>= 0.6.3, < 1.0.0)
-      tty-spinner (>= 0.8.0, < 1.0.0)
-      word_wrap (~> 1.0.0)
-      xcodeproj (>= 1.13.0, < 2.0.0)
-      xcpretty (~> 0.3.0)
-      xcpretty-travis-formatter (>= 0.0.3)
-    fourflusher (2.3.1)
-    fuzzy_match (2.0.4)
-    gh_inspector (1.1.3)
-    google-api-client (0.38.0)
-      addressable (~> 2.5, >= 2.5.1)
-      googleauth (~> 0.9)
-      httpclient (>= 2.8.1, < 3.0)
-      mini_mime (~> 1.0)
-      representable (~> 3.0)
-      retriable (>= 2.0, < 4.0)
-      signet (~> 0.12)
-    google-cloud-core (1.5.0)
-      google-cloud-env (~> 1.0)
-      google-cloud-errors (~> 1.0)
-    google-cloud-env (1.3.3)
-      faraday (>= 0.17.3, < 2.0)
-    google-cloud-errors (1.0.1)
-    google-cloud-storage (1.28.0)
-      addressable (~> 2.5)
-      digest-crc (~> 0.4)
-      google-api-client (~> 0.33)
-      google-cloud-core (~> 1.2)
-      googleauth (~> 0.9)
-      mini_mime (~> 1.0)
-    googleauth (0.13.1)
-      faraday (>= 0.17.3, < 2.0)
-      jwt (>= 1.4, < 3.0)
-      memoist (~> 0.16)
-      multi_json (~> 1.11)
-      os (>= 0.9, < 2.0)
-      signet (~> 0.14)
-    highline (1.7.10)
-    http-cookie (1.0.3)
-      domain_name (~> 0.5)
-    httpclient (2.8.3)
-    i18n (0.9.5)
-      concurrent-ruby (~> 1.0)
-    jmespath (1.4.0)
-    json (2.3.1)
-    jwt (2.2.2)
-    memoist (0.16.2)
-    mini_magick (4.10.1)
-    mini_mime (1.0.2)
-    minitest (5.14.1)
-    molinillo (0.6.6)
-    multi_json (1.15.0)
-    multipart-post (2.0.0)
-    nanaimo (0.3.0)
-    nap (1.1.0)
-    naturally (2.2.0)
-    netrc (0.11.0)
-    os (1.1.1)
-    plist (3.5.0)
-    public_suffix (4.0.6)
-    rake (13.0.1)
-    representable (3.0.4)
-      declarative (< 0.1.0)
-      declarative-option (< 0.2.0)
-      uber (< 0.2.0)
-    retriable (3.1.2)
-    rouge (2.0.7)
-    ruby-macho (1.4.0)
-    rubyzip (2.3.0)
-    security (0.1.3)
-    signet (0.14.0)
-      addressable (~> 2.3)
-      faraday (>= 0.17.3, < 2.0)
-      jwt (>= 1.5, < 3.0)
-      multi_json (~> 1.10)
-    simctl (1.6.8)
-      CFPropertyList
-      naturally
-    slack-notifier (2.3.2)
-    terminal-notifier (2.0.0)
-    terminal-table (1.8.0)
-      unicode-display_width (~> 1.1, >= 1.1.1)
-    thread_safe (0.3.6)
-    tty-cursor (0.7.1)
-    tty-screen (0.8.1)
-    tty-spinner (0.9.3)
-      tty-cursor (~> 0.7)
-    tzinfo (1.2.7)
-      thread_safe (~> 0.1)
-    uber (0.1.0)
-    unf (0.1.4)
-      unf_ext
-    unf_ext (0.0.7.7)
-    unicode-display_width (1.7.0)
-    word_wrap (1.0.0)
-    xcodeproj (1.18.0)
-      CFPropertyList (>= 2.3.3, < 4.0)
-      atomos (~> 0.1.3)
-      claide (>= 1.0.2, < 2.0)
-      colored2 (~> 3.1)
-      nanaimo (~> 0.3.0)
-    xcpretty (0.3.0)
-      rouge (~> 2.0.7)
-    xcpretty-travis-formatter (1.0.0)
-      xcpretty (~> 0.2, >= 0.0.7)
-
-PLATFORMS
-  ruby
-
-DEPENDENCIES
-  cocoapods (= 1.8.4)
-  fastlane (= 2.160.0)
-
-BUNDLED WITH
-   2.1.4
diff --git a/apolloschurchapp/README.md b/apolloschurchapp/README.md
new file mode 100644
index 0000000..362bc28
--- /dev/null
+++ b/apolloschurchapp/README.md
@@ -0,0 +1,206 @@
+# Apollos Church App prototype
+
+[![codecov](https://codecov.io/gh/ApollosProject/apollos-prototype/branch/master/graph/badge.svg)](https://codecov.io/gh/ApollosProject/apollos-prototype)
+
+This project was bootstrapped with [Create React Native App](https://github.com/react-community/create-react-native-app).
+
+Below you'll find information about performing common tasks. The most recent version of this guide is available [here](https://github.com/react-community/create-react-native-app/blob/master/react-native-scripts/template/README.md).
+
+## Table of Contents
+
+* [Updating to New Releases](#updating-to-new-releases)
+* [Available Scripts](#available-scripts)
+  * [npm start](#npm-start)
+  * [npm test](#npm-test)
+  * [npm run ios](#npm-run-ios)
+  * [npm run android](#npm-run-android)
+  * [npm run eject](#npm-run-eject)
+* [Writing and Running Tests](#writing-and-running-tests)
+* [Environment Variables](#environment-variables)
+  * [Configuring Packager IP Address](#configuring-packager-ip-address)
+* [Customizing App Display Name and Icon](#customizing-app-display-name-and-icon)
+* [Sharing and Deployment](#sharing-and-deployment)
+  * [Publishing to Expo's React Native Community](#publishing-to-expos-react-native-community)
+  * [Building an Expo "standalone" app](#building-an-expo-standalone-app)
+  * [Ejecting from Create React Native App](#ejecting-from-create-react-native-app)
+    * [Build Dependencies (Xcode & Android Studio)](#build-dependencies-xcode-android-studio)
+    * [Should I Use ExpoKit?](#should-i-use-expokit)
+* [Troubleshooting](#troubleshooting)
+  * [Networking](#networking)
+  * [iOS Simulator won't open](#ios-simulator-wont-open)
+  * [QR Code does not scan](#qr-code-does-not-scan)
+
+## Updating to New Releases
+
+You should only need to update the global installation of `create-react-native-app` very rarely, ideally never.
+
+Updating the `react-native-scripts` dependency of your app should be as simple as bumping the version number in `package.json` and reinstalling your project's dependencies.
+
+Upgrading to a new version of React Native requires updating the `react-native`, `react`, and `expo` package versions, and setting the correct `sdkVersion` in `app.json`. See the [versioning guide](https://github.com/react-community/create-react-native-app/blob/master/VERSIONS.md) for up-to-date information about package version compatibility.
+
+## Available Scripts
+
+If Yarn was installed when the project was initialized, then dependencies will have been installed via Yarn, and you should probably use it to run these commands as well. Unlike dependency installation, command running syntax is identical for Yarn and NPM at the time of this writing.
+
+### `npm start`
+
+Runs your app in development mode.
+
+Open it in the [Expo app](https://expo.io) on your phone to view it. It will reload if you save edits to your files, and you will see build errors and logs in the terminal.
+
+Sometimes you may need to reset or clear the React Native packager's cache. To do so, you can pass the `--reset-cache` flag to the start script:
+
+```
+npm start --reset-cache
+# or
+yarn start --reset-cache
+```
+
+#### `npm test`
+
+Runs the [jest](https://github.com/facebook/jest) test runner on your tests.
+
+#### `npm run ios`
+
+Like `npm start`, but also attempts to open your app in the iOS Simulator if you're on a Mac and have it installed.
+
+#### `npm run android`
+
+Like `npm start`, but also attempts to open your app on a connected Android device or emulator. Requires an installation of Android build tools (see [React Native docs](https://facebook.github.io/react-native/docs/getting-started.html) for detailed setup). We also recommend installing Genymotion as your Android emulator. Once you've finished setting up the native build environment, there are two options for making the right copy of `adb` available to Create React Native App:
+
+##### Using Android Studio's `adb`
+
+1.  Make sure that you can run adb from your terminal.
+2.  Open Genymotion and navigate to `Settings -> ADB`. Select “Use custom Android SDK tools” and update with your [Android SDK directory](https://stackoverflow.com/questions/25176594/android-sdk-location).
+
+##### Using Genymotion's `adb`
+
+1.  Find Genymotion’s copy of adb. On macOS for example, this is normally `/Applications/Genymotion.app/Contents/MacOS/tools/`.
+2.  Add the Genymotion tools directory to your path (instructions for [Mac](http://osxdaily.com/2014/08/14/add-new-path-to-path-command-line/), [Linux](http://www.computerhope.com/issues/ch001647.htm), and [Windows](https://www.howtogeek.com/118594/how-to-edit-your-system-path-for-easy-command-line-access/)).
+3.  Make sure that you can run adb from your terminal.
+
+#### `npm run eject`
+
+This will start the process of "ejecting" from Create React Native App's build scripts. You'll be asked a couple of questions about how you'd like to build your project.
+
+**Warning:** Running eject is a permanent action (aside from whatever version control system you use). An ejected app will require you to have an [Xcode and/or Android Studio environment](https://facebook.github.io/react-native/docs/getting-started.html) set up.
+
+## Customizing App Display Name and Icon
+
+You can edit `app.json` to include [configuration keys](https://docs.expo.io/versions/latest/guides/configuration.html) under the `expo` key.
+
+To change your app's display name, set the `expo.name` key in `app.json` to an appropriate string.
+
+To set an app icon, set the `expo.icon` key in `app.json` to be either a local path or a URL. It's recommended that you use a 512x512 png file with transparency.
+
+## Writing and Running Tests
+
+This project is set up to use [jest](https://facebook.github.io/jest/) for tests. You can configure whatever testing strategy you like, but jest works out of the box. Create test files in directories called `__tests__` or with the `.test` extension to have the files loaded by jest. See the [the template project](https://github.com/react-community/create-react-native-app/blob/master/react-native-scripts/template/App.test.js) for an example test. The [jest documentation](https://facebook.github.io/jest/docs/en/getting-started.html) is also a wonderful resource, as is the [React Native testing tutorial](https://facebook.github.io/jest/docs/en/tutorial-react-native.html).
+
+## Environment Variables
+
+You can configure some of Create React Native App's behavior using environment variables.
+
+### Configuring Packager IP Address
+
+When starting your project, you'll see something like this for your project URL:
+
+```
+exp://192.168.0.2:19000
+```
+
+The "manifest" at that URL tells the Expo app how to retrieve and load your app's JavaScript bundle, so even if you load it in the app via a URL like `exp://localhost:19000`, the Expo client app will still try to retrieve your app at the IP address that the start script provides.
+
+In some cases, this is less than ideal. This might be the case if you need to run your project inside of a virtual machine and you have to access the packager via a different IP address than the one which prints by default. In order to override the IP address or hostname that is detected by Create React Native App, you can specify your own hostname via the `REACT_NATIVE_PACKAGER_HOSTNAME` environment variable:
+
+Mac and Linux:
+
+```
+REACT_NATIVE_PACKAGER_HOSTNAME='my-custom-ip-address-or-hostname' npm start
+```
+
+Windows:
+
+```
+set REACT_NATIVE_PACKAGER_HOSTNAME='my-custom-ip-address-or-hostname'
+npm start
+```
+
+The above example would cause the development server to listen on `exp://my-custom-ip-address-or-hostname:19000`.
+
+## Sharing and Deployment
+
+Create React Native App does a lot of work to make app setup and development simple and straightforward, but it's very difficult to do the same for deploying to Apple's App Store or Google's Play Store without relying on a hosted service.
+
+### Publishing to Expo's React Native Community
+
+Expo provides free hosting for the JS-only apps created by CRNA, allowing you to share your app through the Expo client app. This requires registration for an Expo account.
+
+Install the `exp` command-line tool, and run the publish command:
+
+```
+$ npm i -g exp
+$ exp publish
+```
+
+### Building an Expo "standalone" app
+
+You can also use a service like [Expo's standalone builds](https://docs.expo.io/versions/latest/guides/building-standalone-apps.html) if you want to get an IPA/APK for distribution without having to build the native code yourself.
+
+### Ejecting from Create React Native App
+
+If you want to build and deploy your app yourself, you'll need to eject from CRNA and use Xcode and Android Studio.
+
+This is usually as simple as running `npm run eject` in your project, which will walk you through the process. Make sure to install `react-native-cli` and follow the [native code getting started guide for React Native](https://facebook.github.io/react-native/docs/getting-started.html).
+
+#### Should I Use ExpoKit?
+
+If you have made use of Expo APIs while working on your project, then those API calls will stop working if you eject to a regular React Native project. If you want to continue using those APIs, you can eject to "React Native + ExpoKit" which will still allow you to build your own native code and continue using the Expo APIs. See the [ejecting guide](https://github.com/react-community/create-react-native-app/blob/master/EJECTING.md) for more details about this option.
+
+## Troubleshooting
+
+### Networking
+
+If you're unable to load your app on your phone due to a network timeout or a refused connection, a good first step is to verify that your phone and computer are on the same network and that they can reach each other. Create React Native App needs access to ports 19000 and 19001 so ensure that your network and firewall settings allow access from your device to your computer on both of these ports.
+
+Try opening a web browser on your phone and opening the URL that the packager script prints, replacing `exp://` with `http://`. So, for example, if underneath the QR code in your terminal you see:
+
+```
+exp://192.168.0.1:19000
+```
+
+Try opening Safari or Chrome on your phone and loading
+
+```
+http://192.168.0.1:19000
+```
+
+and
+
+```
+http://192.168.0.1:19001
+```
+
+If this works, but you're still unable to load your app by scanning the QR code, please open an issue on the [Create React Native App repository](https://github.com/react-community/create-react-native-app) with details about these steps and any other error messages you may have received.
+
+If you're not able to load the `http` URL in your phone's web browser, try using the tethering/mobile hotspot feature on your phone (beware of data usage, though), connecting your computer to that WiFi network, and restarting the packager. If you are using a VPN you may need to disable it.
+
+### iOS Simulator won't open
+
+If you're on a Mac, there are a few errors that users sometimes see when attempting to `npm run ios`:
+
+* "non-zero exit code: 107"
+* "You may need to install Xcode" but it is already installed
+* and others
+
+There are a few steps you may want to take to troubleshoot these kinds of errors:
+
+1.  Make sure Xcode is installed and open it to accept the license agreement if it prompts you. You can install it from the Mac App Store.
+2.  Open Xcode's Preferences, the Locations tab, and make sure that the `Command Line Tools` menu option is set to something. Sometimes when the CLI tools are first installed by Homebrew this option is left blank, which can prevent Apple utilities from finding the simulator. Make sure to re-run `npm/yarn run ios` after doing so.
+3.  If that doesn't work, open the Simulator, and under the app menu select `Reset Contents and Settings...`. After that has finished, quit the Simulator, and re-run `npm/yarn run ios`.
+
+### QR Code does not scan
+
+If you're not able to scan the QR code, make sure your phone's camera is focusing correctly, and also make sure that the contrast on the two colors in your terminal is high enough. For example, WebStorm's default themes may [not have enough contrast](https://github.com/react-community/create-react-native-app/issues/49) for terminal QR codes to be scannable with the system barcode scanners that the Expo app uses.
+
+If this causes problems for you, you may want to try changing your terminal's color theme to have more contrast, or running Create React Native App from a different terminal. You can also manually enter the URL printed by the packager script in the Expo app's search bar to load it manually.
diff --git a/apolloschurchapp/__mocks__/@react-native-community/async-storage/index.js b/apolloschurchapp/__mocks__/@react-native-community/async-storage/index.js
deleted file mode 100644
index a4bf3f4..0000000
--- a/apolloschurchapp/__mocks__/@react-native-community/async-storage/index.js
+++ /dev/null
@@ -1,23 +0,0 @@
-let cache = {};
-export default {
-  setItem: (key, value) =>
-    new Promise((resolve, reject) =>
-      typeof key !== 'string' || typeof value !== 'string'
-        ? reject(new Error('key and value must be string'))
-        : resolve((cache[key] = value))
-    ),
-  getItem: (key, value) =>
-    new Promise((resolve) =>
-      cache.hasOwnProperty(key) ? resolve(cache[key]) : resolve(null)
-    ),
-  removeItem: (key) =>
-    new Promise((resolve, reject) =>
-      cache.hasOwnProperty(key)
-        ? resolve(delete cache[key])
-        : reject('No such key!')
-    ),
-  clear: (key) => new Promise((resolve, reject) => resolve((cache = {}))),
-
-  getAllKeys: (key) =>
-    new Promise((resolve, reject) => resolve(Object.keys(cache))),
-};
diff --git a/apolloschurchapp/__mocks__/@react-native-community/geolocation/index.js b/apolloschurchapp/__mocks__/@react-native-community/geolocation/index.js
deleted file mode 100644
index 0e77776..0000000
--- a/apolloschurchapp/__mocks__/@react-native-community/geolocation/index.js
+++ /dev/null
@@ -1,3 +0,0 @@
-export default {
-  getCurrentPosition: async () => null,
-};
diff --git a/apolloschurchapp/__mocks__/react-native-permissions/index.js b/apolloschurchapp/__mocks__/react-native-permissions/index.js
deleted file mode 100644
index 4d543c8..0000000
--- a/apolloschurchapp/__mocks__/react-native-permissions/index.js
+++ /dev/null
@@ -1 +0,0 @@
-export * from 'react-native-permissions/mock.js';
diff --git a/apolloschurchapp/android/app/BUCK b/apolloschurchapp/android/app/BUCK
index 712e466..5392fca 100644
--- a/apolloschurchapp/android/app/BUCK
+++ b/apolloschurchapp/android/app/BUCK
@@ -8,13 +8,23 @@
 # - `buck install -r android/app` - compile, install and run application
 #
 
-load(":build_defs.bzl", "create_aar_targets", "create_jar_targets")
-
 lib_deps = []
 
-create_aar_targets(glob(["libs/*.aar"]))
+for jarfile in glob(['libs/*.jar']):
+  name = 'jars__' + jarfile[jarfile.rindex('/') + 1: jarfile.rindex('.jar')]
+  lib_deps.append(':' + name)
+  prebuilt_jar(
+    name = name,
+    binary_jar = jarfile,
+  )
 
-create_jar_targets(glob(["libs/*.jar"]))
+for aarfile in glob(['libs/*.aar']):
+  name = 'aars__' + aarfile[aarfile.rindex('/') + 1: aarfile.rindex('.aar')]
+  lib_deps.append(':' + name)
+  android_prebuilt_aar(
+    name = name,
+    aar = aarfile,
+  )
 
 android_library(
     name = "all-libs",
@@ -35,12 +45,12 @@ android_library(
 
 android_build_config(
     name = "build_config",
-    package = "com.differential.apollos",
+    package = "com.apolloschurchapp",
 )
 
 android_resource(
     name = "res",
-    package = "com.differential.apollos",
+    package = "com.apolloschurchapp",
     res = "src/main/res",
 )
 
diff --git a/apolloschurchapp/android/app/apollos.keystore.enc b/apolloschurchapp/android/app/apollos.keystore.enc
deleted file mode 100644
index 1792515ed25445a79a7725643f7647d5c7d90907..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 2272
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

diff --git a/apolloschurchapp/android/app/build.gradle b/apolloschurchapp/android/app/build.gradle
index c3fe532..70dcb10 100644
--- a/apolloschurchapp/android/app/build.gradle
+++ b/apolloschurchapp/android/app/build.gradle
@@ -1,21 +1,5 @@
-buildscript {
-    repositories {
-        maven { url 'https://plugins.gradle.org/m2/' } // Gradle Plugin Portal
-    }
-    dependencies {
-        classpath 'gradle.plugin.com.onesignal:onesignal-gradle-plugin:[0.10.0, 0.99.99]'
-    }
-}
-
-apply plugin: 'com.onesignal.androidsdk.onesignal-gradle-plugin'
 apply plugin: "com.android.application"
 
-project.ext.envConfigFiles = [
-    release: ".env.production",
-]
-
-apply from: project(':react-native-config').projectDir.getPath() + "/dotenv.gradle"
-
 import com.android.build.OutputFile
 
 /**
@@ -59,9 +43,6 @@ import com.android.build.OutputFile
  *   // the root of your project, i.e. where "package.json" lives
  *   root: "../../",
  *
- *   // https://facebook.github.io/react-native/docs/performance#enable-the-ram-format
- *   bundleCommand: "ram-bundle",
- *
  *   // where to put the JS bundle asset in debug mode
  *   jsBundleDirDebug: "$buildDir/intermediates/assets/debug",
  *
@@ -92,8 +73,7 @@ import com.android.build.OutputFile
  */
 
 project.ext.react = [
-    entryFile: "index.js",
-    enableHermes: false,  // clean and rebuild if changing
+    entryFile: "index.js"
 ]
 
 apply from: "../../node_modules/react-native/react.gradle"
@@ -113,53 +93,18 @@ def enableSeparateBuildPerCPUArchitecture = false
  */
 def enableProguardInReleaseBuilds = false
 
-/**
- * The preferred build flavor of JavaScriptCore.
- *
- * For example, to use the international variant, you can use:
- * `def jscFlavor = 'org.webkit:android-jsc-intl:+'`
- *
- * The international variant includes ICU i18n library and necessary data
- * allowing to use e.g. `Date.toLocaleString` and `String.localeCompare` that
- * give correct results when using with locales other than en-US.  Note that
- * this variant is about 6MiB larger per architecture than default.
- */
-def jscFlavor = 'org.webkit:android-jsc:+'
-/**
- * Whether to enable the Hermes VM.
- *
- * This should be set on project.ext.react and mirrored here.  If it is not set
- * on project.ext.react, JavaScript will not be compiled to Hermes Bytecode
- * and the benefits of using Hermes will therefore be sharply reduced.
- */
-def enableHermes = project.ext.react.get("enableHermes", false);
-
 android {
     compileSdkVersion rootProject.ext.compileSdkVersion
-
-    compileOptions {
-        sourceCompatibility JavaVersion.VERSION_1_8
-        targetCompatibility JavaVersion.VERSION_1_8
-    }
+    buildToolsVersion rootProject.ext.buildToolsVersion
 
     defaultConfig {
-        applicationId "com.differential.apollos"
+        applicationId "com.apolloschurchapp"
         minSdkVersion rootProject.ext.minSdkVersion
         targetSdkVersion rootProject.ext.targetSdkVersion
-        versionCode 331
-        versionName "1.0.0"
+        versionCode 1
+        versionName "0.4.0"
         ndk {
-            abiFilters "armeabi-v7a", "x86", "arm64-v8a", "x86_64"
-        }
-        resValue "string", "build_config_package", "com.differential.apollos"
-        multiDexEnabled true
-    }
-    signingConfigs {
-        release {
-            storeFile file(String.valueOf(System.getenv("KEYSTORE_FILE")))
-            storePassword System.getenv("KEYSTORE_PASSWORD")
-            keyAlias System.getenv("KEY_ALIAS")
-            keyPassword System.getenv("KEY_PASSWORD")
+            abiFilters "armeabi-v7a", "x86"
         }
     }
     splits {
@@ -167,14 +112,13 @@ android {
             reset()
             enable enableSeparateBuildPerCPUArchitecture
             universalApk false  // If true, also generate a universal APK
-            include "armeabi-v7a", "x86", "arm64-v8a", "x86_64"
+            include "armeabi-v7a", "x86"
         }
     }
     buildTypes {
         release {
             minifyEnabled enableProguardInReleaseBuilds
             proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
-            signingConfig signingConfigs.release
         }
     }
     // applicationVariants are e.g. debug, release
@@ -182,7 +126,7 @@ android {
         variant.outputs.each { output ->
             // For each separate APK per architecture, set a unique version code as described here:
             // http://tools.android.com/tech-docs/new-build-system/user-guide/apk-splits
-            def versionCodes = ["armeabi-v7a":1, "x86":2, "arm64-v8a": 3, "x86_64": 4]
+            def versionCodes = ["armeabi-v7a":1, "x86":2]
             def abi = output.getFilter(OutputFile.ABI)
             if (abi != null) {  // null for the universal-debug, universal-release variants
                 output.versionCodeOverride =
@@ -190,28 +134,20 @@ android {
             }
         }
     }
-    packagingOptions {
-        pickFirst '**/armeabi-v7a/libc++_shared.so'
-        pickFirst '**/x86/libc++_shared.so'
-        pickFirst '**/arm64-v8a/libc++_shared.so'
-        pickFirst '**/x86_64/libc++_shared.so'
-        pickFirst '**/x86/libjsc.so'
-        pickFirst '**/armeabi-v7a/libjsc.so'
-    }
 }
 
 dependencies {
-    implementation fileTree(dir: "libs", include: ["*.jar"])
-    implementation "com.facebook.react:react-native:+"  // From node_modules
-    implementation 'com.facebook.fresco:animated-gif:2.0.0'
-
-    if (enableHermes) {
-      def hermesPath = "../../node_modules/hermesvm/android/";
-      debugImplementation files(hermesPath + "hermes-debug.aar")
-      releaseImplementation files(hermesPath + "hermes-release.aar")
-    } else {
-      implementation jscFlavor
-    }
+    compile project(':react-native-image-picker')
+    compile project(':react-native-music-control')
+    compile project(':react-native-device-info')
+    compile project(':react-native-video')
+    compile project(':react-native-svg')
+    compile project(':react-native-splash-screen')
+    compile project(':react-native-linear-gradient')
+    compile project(':react-native-custom-tabs')
+    compile fileTree(dir: "libs", include: ["*.jar"])
+    compile "com.android.support:appcompat-v7:${rootProject.ext.supportLibVersion}"
+    compile "com.facebook.react:react-native:+"  // From node_modules
 }
 
 // Run this once to be able to run the application with BUCK
@@ -220,6 +156,3 @@ task copyDownloadableDepsToLibs(type: Copy) {
     from configurations.compile
     into 'libs'
 }
-
-
-apply from: file("../../node_modules/@react-native-community/cli-platform-android/native_modules.gradle"); applyNativeModulesAppBuildGradle(project)
diff --git a/apolloschurchapp/android/app/build_defs.bzl b/apolloschurchapp/android/app/build_defs.bzl
deleted file mode 100644
index fff270f..0000000
--- a/apolloschurchapp/android/app/build_defs.bzl
+++ /dev/null
@@ -1,19 +0,0 @@
-"""Helper definitions to glob .aar and .jar targets"""
-
-def create_aar_targets(aarfiles):
-    for aarfile in aarfiles:
-        name = "aars__" + aarfile[aarfile.rindex("/") + 1:aarfile.rindex(".aar")]
-        lib_deps.append(":" + name)
-        android_prebuilt_aar(
-            name = name,
-            aar = aarfile,
-        )
-
-def create_jar_targets(jarfiles):
-    for jarfile in jarfiles:
-        name = "jars__" + jarfile[jarfile.rindex("/") + 1:jarfile.rindex(".jar")]
-        lib_deps.append(":" + name)
-        prebuilt_jar(
-            name = name,
-            binary_jar = jarfile,
-        )
diff --git a/apolloschurchapp/android/app/proguard-rules.pro b/apolloschurchapp/android/app/proguard-rules.pro
index 11b0257..a92fa17 100644
--- a/apolloschurchapp/android/app/proguard-rules.pro
+++ b/apolloschurchapp/android/app/proguard-rules.pro
@@ -8,3 +8,10 @@
 #   http://developer.android.com/guide/developing/tools/proguard.html
 
 # Add any project specific keep options here:
+
+# If your project uses WebView with JS, uncomment the following
+# and specify the fully qualified class name to the JavaScript interface
+# class:
+#-keepclassmembers class fqcn.of.javascript.interface.for.webview {
+#   public *;
+#}
diff --git a/apolloschurchapp/android/app/src/debug/AndroidManifest.xml b/apolloschurchapp/android/app/src/debug/AndroidManifest.xml
deleted file mode 100644
index fa26aa5..0000000
--- a/apolloschurchapp/android/app/src/debug/AndroidManifest.xml
+++ /dev/null
@@ -1,8 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<manifest xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:tools="http://schemas.android.com/tools">
-
-    <uses-permission android:name="android.permission.SYSTEM_ALERT_WINDOW"/>
-
-    <application android:usesCleartextTraffic="true" tools:targetApi="28" tools:ignore="GoogleAppIndexingWarning" />
-</manifest>
diff --git a/apolloschurchapp/android/app/src/main/AndroidManifest.xml b/apolloschurchapp/android/app/src/main/AndroidManifest.xml
index 8f8f889..a1ed157 100644
--- a/apolloschurchapp/android/app/src/main/AndroidManifest.xml
+++ b/apolloschurchapp/android/app/src/main/AndroidManifest.xml
@@ -1,58 +1,34 @@
 <manifest xmlns:android="http://schemas.android.com/apk/res/android"
-    package="com.differential.apollos">
+    package="com.apolloschurchapp">
 
     <uses-permission android:name="android.permission.INTERNET" />
-    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
+    <uses-permission android:name="android.permission.SYSTEM_ALERT_WINDOW"/>
     <uses-permission android:name="android.permission.CAMERA" />
-    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION"/>
-    <uses-permission android:name="android.permission.FOREGROUND_SERVICE" />
+    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE"/>
 
     <application
       android:name=".MainApplication"
       android:label="@string/app_name"
       android:icon="@mipmap/ic_launcher"
-      android:roundIcon="@mipmap/ic_launcher_round"
       android:allowBackup="false"
       android:theme="@style/AppTheme">
-
-      <meta-data
-        android:name="com.google.android.geo.API_KEY"
-        android:value="@string/GOOGLE_MAPS_API_KEY"/>
-
-      <meta-data
-        android:name="com.google.android.gms.cast.framework.OPTIONS_PROVIDER_CLASS_NAME"
-        android:value="com.reactnative.googlecast.GoogleCastOptionsProvider" />
-
-      <activity
-        android:name=".MainActivity"
-        android:label="@string/app_name"
-        android:configChanges="keyboard|keyboardHidden|orientation|screenSize"
-        android:windowSoftInputMode="adjustPan"
-        android:exported="true"
-        android:launchMode="singleTask">
-      </activity>
-
       <activity
-        android:name="com.zoontek.rnbootsplash.RNBootSplashActivity"
-        android:theme="@style/BootTheme"
-        android:launchMode="singleTask">
+        android:name=".LaunchActivity"
+        android:theme="@style/LaunchTheme"
+        android:label="Apollos Church">
         <intent-filter>
             <action android:name="android.intent.action.MAIN" />
             <category android:name="android.intent.category.LAUNCHER" />
         </intent-filter>
-        <intent-filter android:autoVerify="true">
-          <action android:name="android.intent.action.VIEW" />
-          <category android:name="android.intent.category.DEFAULT" />
-          <category android:name="android.intent.category.BROWSABLE" />
-
-          <!-- Handle urls starting with "http://www.example.com/products" -->
-          <data android:scheme="https"
-                android:host="apollos-church-api.herokuapp.com"
-                android:pathPrefix="/app-link" />
-          <data android:scheme="http" />
-        </intent-filter>
       </activity>
-
+      <activity
+        android:name=".MainActivity"
+        android:label="@string/app_name"
+        android:configChanges="keyboard|keyboardHidden|orientation|screenSize"
+        android:windowSoftInputMode="adjustResize"
+        android:launchMode="singleTask"
+      />
       <activity android:name="com.facebook.react.devsupport.DevSettingsActivity" />
     </application>
+
 </manifest>
diff --git a/apolloschurchapp/android/app/src/main/java/com/apolloschurchapp/LaunchActivity.java b/apolloschurchapp/android/app/src/main/java/com/apolloschurchapp/LaunchActivity.java
new file mode 100644
index 0000000..6c4d404
--- /dev/null
+++ b/apolloschurchapp/android/app/src/main/java/com/apolloschurchapp/LaunchActivity.java
@@ -0,0 +1,16 @@
+package com.apolloschurchapp;
+
+import android.content.Intent;
+import android.os.Bundle;
+import android.support.v7.app.AppCompatActivity;
+
+public class LaunchActivity extends AppCompatActivity {
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+
+        Intent intent = new Intent(this, MainActivity.class);
+        startActivity(intent);
+        finish();
+    }
+}
\ No newline at end of file
diff --git a/apolloschurchapp/android/app/src/main/java/com/apolloschurchapp/MainActivity.java b/apolloschurchapp/android/app/src/main/java/com/apolloschurchapp/MainActivity.java
new file mode 100644
index 0000000..3824a3a
--- /dev/null
+++ b/apolloschurchapp/android/app/src/main/java/com/apolloschurchapp/MainActivity.java
@@ -0,0 +1,21 @@
+package com.apolloschurchapp;
+
+import android.os.Bundle;
+import com.facebook.react.ReactActivity;
+import org.devio.rn.splashscreen.SplashScreen;
+
+public class MainActivity extends ReactActivity {
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        SplashScreen.show(this, R.style.SplashScreenTheme);
+        super.onCreate(savedInstanceState);
+    }
+    /**
+     * Returns the name of the main component registered from JavaScript.
+     * This is used to schedule rendering of the component.
+     */
+    @Override
+    protected String getMainComponentName() {
+        return "apolloschurchapp";
+    }
+}
diff --git a/apolloschurchapp/android/app/src/main/java/com/differential/apollos/MainApplication.java b/apolloschurchapp/android/app/src/main/java/com/apolloschurchapp/MainApplication.java
similarity index 53%
rename from apolloschurchapp/android/app/src/main/java/com/differential/apollos/MainApplication.java
rename to apolloschurchapp/android/app/src/main/java/com/apolloschurchapp/MainApplication.java
index fe67b25..636bf2d 100644
--- a/apolloschurchapp/android/app/src/main/java/com/differential/apollos/MainApplication.java
+++ b/apolloschurchapp/android/app/src/main/java/com/apolloschurchapp/MainApplication.java
@@ -1,12 +1,16 @@
-package com.differential.apollos;
+package com.apolloschurchapp;
 
 import android.app.Application;
-import android.util.Log;
 
-import com.facebook.react.PackageList;
-import com.facebook.hermes.reactexecutor.HermesExecutorFactory;
-import com.facebook.react.bridge.JavaScriptExecutorFactory;
 import com.facebook.react.ReactApplication;
+import com.imagepicker.ImagePickerPackage;
+import com.tanguyantoine.react.MusicControl;
+import com.learnium.RNDeviceInfo.RNDeviceInfo;
+import com.brentvatne.react.ReactVideoPackage;
+import com.horcrux.svg.SvgPackage;
+import org.devio.rn.splashscreen.SplashScreenReactPackage;
+import com.BV.LinearGradient.LinearGradientPackage;
+import com.github.droibit.android.reactnative.customtabs.CustomTabsPackage;
 import com.facebook.react.ReactNativeHost;
 import com.facebook.react.ReactPackage;
 import com.facebook.react.shell.MainReactPackage;
@@ -25,11 +29,17 @@ public class MainApplication extends Application implements ReactApplication {
 
     @Override
     protected List<ReactPackage> getPackages() {
-      @SuppressWarnings("UnnecessaryLocalVariable")
-      List<ReactPackage> packages = new PackageList(this).getPackages();
-      // Packages that cannot be autolinked yet can be added manually here, for example:
-      // packages.add(new MyReactNativePackage());
-      return packages;
+      return Arrays.<ReactPackage>asList(
+          new MainReactPackage(),
+            new ImagePickerPackage(),
+            new MusicControl(),
+            new RNDeviceInfo(),
+            new ReactVideoPackage(),
+            new SvgPackage(),
+            new SplashScreenReactPackage(),
+            new LinearGradientPackage(),
+            new CustomTabsPackage()
+      );
     }
 
     @Override
diff --git a/apolloschurchapp/android/app/src/main/java/com/differential/apollos/MainActivity.java b/apolloschurchapp/android/app/src/main/java/com/differential/apollos/MainActivity.java
deleted file mode 100644
index f099ba3..0000000
--- a/apolloschurchapp/android/app/src/main/java/com/differential/apollos/MainActivity.java
+++ /dev/null
@@ -1,35 +0,0 @@
-package com.differential.apollos;
-import android.os.Bundle;
-import com.facebook.react.ReactActivity;
-import com.facebook.react.ReactActivityDelegate;
-import com.facebook.react.ReactRootView;
-import com.swmansion.gesturehandler.react.RNGestureHandlerEnabledRootView;
-import com.zoontek.rnbootsplash.RNBootSplash;
-import com.facebook.react.GoogleCastActivity;
-
-public class MainActivity extends GoogleCastActivity {
-    /**
-     * Returns the name of the main component registered from JavaScript.
-     * This is used to schedule rendering of the component.
-     */
-    @Override
-    protected String getMainComponentName() {
-        return "apolloschurchapp";
-    }
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        RNBootSplash.init(R.drawable.bootsplash, com.differential.apollos.MainActivity.this);
-    }
-
-    @Override
-    protected ReactActivityDelegate createReactActivityDelegate() {
-      return new ReactActivityDelegate(this, getMainComponentName()) {
-        @Override
-        protected ReactRootView createRootView() {
-         return new RNGestureHandlerEnabledRootView(MainActivity.this);
-        }
-      };
-    }
-}
diff --git a/apolloschurchapp/android/app/src/main/res/drawable-hdpi/ic_stat_onesignal_default.webp b/apolloschurchapp/android/app/src/main/res/drawable-hdpi/ic_stat_onesignal_default.webp
deleted file mode 100644
index b240272929702062ffea691abc6a09dce8973322..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 334
zcmV-U0kQs4Nk&FS0RRA3MM6+kP&iCE0RR9mBftm{ucDxB8^-)ew>u!_fBqe|Z6nFK
zm8E^}>VP8y000<<VR!(*00tp02q3@^L<m9LxDdi00qhd|_PGEb0ubSY5WwRgKoCNR
zo{SS>7)}5HfGkP2P1~B+wr$(C&FX(+#=>0p-uJ#E`ac2oFR!ktsi~<h)Jbr#%yMY6
zNX32VrMAQn(XkR+vHb#dud$Ctzj1))JAi4w1KC)R3%BM^8R!r?y=DO(D(qaAy)I?V
zY)<Yge7ezov-WR*A)i&bGc!ArEtkqiS&<oet@9X0`=sp~VBBLzZY_8!hYs~`vJ{$<
z&*r=dv?tW^1u&a;BsUg4k;|;sFIkLD3f(#LXjiQ1Q&w}X<k}LC<*_oY7u_38+!lt@
g)&q_^NmWl?Z}ll7xKE_)`W+=yy!(AM#QrY<02vCIEdT%j

diff --git a/apolloschurchapp/android/app/src/main/res/drawable-mdpi/ic_stat_onesignal_default.webp b/apolloschurchapp/android/app/src/main/res/drawable-mdpi/ic_stat_onesignal_default.webp
deleted file mode 100644
index aedbdbaf632c4d2195d0d160965bcfe99022b791..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 254
zcmV<a00I9}Nk&HY00012MM6+kP&iEK0000l7r+G&Co=!@KmQ8bwrx|D+`R(j0003h
zgb)D`fdJy7V&EePDi(kcqM;(F2!es&K!}cy0U<y|LjZyR1Yn_}<6>e$01*HH0L0q1
zO*=cbtsfgdc0OnSRXvT71|s?|AW4kQ<o_C3Tv}QhZDJF4nz(^>gQq*to3D2O9M^l{
zz0F7M%R`R#u~O%h!NPQx^EzL=CJ%g%R=<YBWEbnzuISGvQys1=AOGPwN$&Zbtg?kx
zl5AtI${oGAB$@o<vErF7PbqXuf1#{}i?u>$I4OHm(`V_~VI8YQ8@0PE8k?wXJpWJt
E0LON3uK)l5

diff --git a/apolloschurchapp/android/app/src/main/res/drawable-xhdpi/ic_stat_onesignal_default.webp b/apolloschurchapp/android/app/src/main/res/drawable-xhdpi/ic_stat_onesignal_default.webp
deleted file mode 100644
index 617b9bce20254332c96d4dfe0c0a766879a38a9c..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 416
zcmV;R0bl-7Nk&GP0RRA3MM6+kP&iDC0RR9mFTe{BucM%C8_E1h-;<5Q{LeqbwrwM)
zD#`b%ZQF)fQ|UKw&Hw-a+;s>bfOrsq0AUD22%rIolLg=f7=ReUA1D>>2UxaYMHp`E
zJBor3EX@dlJHbcnO8}5<+cq7Y7-h#S+qRXmZ7Vqc-^hOV-IG!`qW=>>|5A%#!IXS3
zt|^pmHXJIHEu-@Ssm>X3q%a0qai%a%RUVv$5N74(LYPupD*(s6TDnZGkzr~YaG%@?
z>WrctvC=Q_S!}rlTqo7TaFu8hjYw^ycA_x4vdGjjeD@Mrt^vnnhS4$+(Kwowxj?OX
zA@uB$h%$Wh<k2PIHi;RuL~snH1e}kk2?bH6LSGBR7Z;*4!2SBx(IOd+pgnEnY1Cj8
zK<wAm$MDH%L?>uW*DhKh#bI<~)#GDaui{6X&@+l294d5-=CxR^&>SfbqF0ZOIOC+6
z4{?W%IdpGVqeHZz!TpR5dQEPkY?Zlo79KE{k~%U~nUUgvnSK_ZFtaarXH)ZX0VdUo
Kx(YC=_MZk;NW9|!

diff --git a/apolloschurchapp/android/app/src/main/res/drawable-xxhdpi/ic_stat_onesignal_default.webp b/apolloschurchapp/android/app/src/main/res/drawable-xxhdpi/ic_stat_onesignal_default.webp
deleted file mode 100644
index 0668394cd69f44ae8416cc2c81c753387c4b397a..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 582
zcmV-M0=fNCNk&FK0ssJ4MM6+kP&iC60ssInN5ByfzoejT8_E1hZ@WD@2=hPx1d_J+
z+pfrM+a~Ljw0s8^17<=9;rO5@LI6Ps5J31OwdXm8;Sq-kg4%ngehJ4f%pgB)@8PA`
zw#RIF@8LL(8uXMkhw38%WZSlF+R=(_+qRvQZCA{)E4FQ|56-=Fuf6tLo+A1`0d!3<
zw-hY)bt#GADwiH%LoUr>M`7;dvtfrj?@j(X6S!$|ndnL#8$WPm%xu<?s8ch}apNWn
zzI9_<Vm-ix6c(*<;fc(M13vS>;6vazLSG?+l?j*LxJzF*uoX!EfdA@(w}Bp_TL33(
zYhbXPDE<O?r0p}X;ZH<=fH`F`XTV1yq8k9`>$=Tg>6O@X;DfFSV9oCe{Q@?FG^H{4
zjy!e(T&L+7QsgQ63>Z`7y9liMdZHh|X_TH42H%j^c7Si{=|c*<MV<oVYC?8_Wgl<!
z72p&tO$@#!uoZct<r|WRgr5KlK04ygfkhvLJ^@^)<1T|Q32sKZbxb1JSlBVJ6RaVF
z!Fe(q1-L=O3*@;;Bl1Oo?=q5Q5_$-n#n>xjaE^?J0ls6eA9-q4k4#t#-A6LbLiPbp
zv(>`j3<(Y*&uslf9!u0BOTKmzE|7GI;9Y=A?A&8;nnVYXK08y$Lz!x1FT_R`qp31M
z+W<G&c!eDI3a=pFE%>h@8qee8Dp>hlxj}7{Vqu5cI76z9)xVVbt#8FoCh<}qm&@E|
U2m57aTsR1o2xKQ)B(7}&01H|SRR910

diff --git a/apolloschurchapp/android/app/src/main/res/drawable-xxxhdpi/ic_stat_onesignal_default.webp b/apolloschurchapp/android/app/src/main/res/drawable-xxxhdpi/ic_stat_onesignal_default.webp
deleted file mode 100644
index fc1df4c85f09f462e869ef0e65b488cc3493dc49..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 828
zcmV-C1H=4MNk&FA0{{S5MM6+kP&iB{0{{RoU%(d-FQ%Yv8!7xr?`wMpVgBb|A%FlV
zXcV?>+a%qScL25EBO!a~2rAeQX67HL2UZh2fR)GxL8>A!I2{tD${6dhp#30l{iVf<
z*HanR{v`;>wr!iXGoNk6c{XFb*tTukwr$(CjrnO=Ypa$@ME@PRZRAMi&fS|j{s8|C
zMXC^*h=)}C&O>0@QZ)&IS*PbJ!V>pR4=WIq-UbhsA}D)J@+=Ag$^K~)c0oYK8a>>K
zfLt`omt+K^h=v9t7z<2uESxdvv1$G^Lm=AI*i-~!qj_#33<)32!)gSfFD)!b5DwVn
zMKl7C``adLL;xmGwqY1$+Yx{(l-0*8zp`(s@UB#Oo<v|XWkcZIVtq1er0k^s<<L{g
zYJu4I6#Z=h&pIj3Ba>ldI{Z?<<wXF{m9jhVE9o<3RR9q4R{g5H>QC7N007ogwh~?)
zrffa{039iN9RrV={4ra~MZcn~J3N|9*<Ji&HDx>D(RIq^m`<eM)8S1e6{Yw`)C<an
z!<%K4-GX2xWoO_^)N{&aTI@pd;e|dxuvi=opHVgoo@}G+8br$}yAMB7zS<0+4OBG1
zi$PlVLS-rWgt9g8;y7iO?S9g4<KRK_zm!eUTGdj~6CO;{nzx4L5oNpK!7a)zK(&an
zpP6v3#(EoHt@RoO=T>OFO_mQ2C_4|=qF+*W&cSA?5RP@zT91c;3a!~(IJSez>dI^f
zc28R}MZl@FZ<L*ekvUYfgHuDb&SPMtOzXBDPMy*=sHTTlw<-G&4~JT5W6}v2nngt)
zI5b0RJQ9XVw08U8&^_&pFW1qs=2s4!snb4?qcApI>o*S0tkU`pgRw%b-zB&b`$qe`
zvtaJB_9}rRJ+!umU}37(a3LJorL`Rl3;EP`osLeEGk$1OR))(1wGMD%gw}OGtW456
zZh{kMou0n6)H;4jgaZZC+`nN*JrwEZBD3k$L01<59{tX<PaAqR(LQVG*;O|e0DhI*
zrWd_iVw*km?pc(B3jp6b+hsHZu*EJH=$QNKf+7ZCfKBEx2uE!4n2x!>E{JFvh$Q?+
G1^@t4ZiHz7

diff --git a/apolloschurchapp/android/app/src/main/res/drawable/background_splash.xml b/apolloschurchapp/android/app/src/main/res/drawable/background_splash.xml
new file mode 100644
index 0000000..cee9de4
--- /dev/null
+++ b/apolloschurchapp/android/app/src/main/res/drawable/background_splash.xml
@@ -0,0 +1,13 @@
+<?xml version="1.0" encoding="utf-8"?>
+<layer-list xmlns:android="http://schemas.android.com/apk/res/android">
+
+    <item
+        android:drawable="@color/deep_water"/>
+
+    <item
+        android:width="95.28dp"
+        android:height="100dp"
+        android:drawable="@mipmap/splash_icon"
+        android:gravity="center" />
+
+</layer-list>
diff --git a/apolloschurchapp/android/app/src/main/res/drawable/bootsplash.xml b/apolloschurchapp/android/app/src/main/res/drawable/bootsplash.xml
deleted file mode 100644
index 1bf5acb..0000000
--- a/apolloschurchapp/android/app/src/main/res/drawable/bootsplash.xml
+++ /dev/null
@@ -1,9 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-
-<layer-list xmlns:android="http://schemas.android.com/apk/res/android" android:opacity="opaque">
-    <item android:drawable="@color/bootsplash_background" />
-
-    <item>
-        <bitmap android:src="@mipmap/bootsplash_logo" android:gravity="center" />
-    </item>
-</layer-list>
diff --git a/apolloschurchapp/android/app/src/main/res/layout/launch_screen.xml b/apolloschurchapp/android/app/src/main/res/layout/launch_screen.xml
new file mode 100644
index 0000000..852bd17
--- /dev/null
+++ b/apolloschurchapp/android/app/src/main/res/layout/launch_screen.xml
@@ -0,0 +1,15 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:orientation="vertical"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:background="@color/deep_water"
+    android:gravity="center">
+    <ImageView
+
+        android:layout_width="95.28dp"
+        android:layout_height="100dp"
+        android:layout_marginTop="-24dp"
+        android:src="@mipmap/splash_icon"
+    />
+</LinearLayout>
diff --git a/apolloschurchapp/android/app/src/main/res/mipmap-hdpi/bootsplash_logo.png b/apolloschurchapp/android/app/src/main/res/mipmap-hdpi/bootsplash_logo.png
deleted file mode 100644
index 91aa886e1c9ba6989d0903283a0d769a7a2ae8ed..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 3638
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

diff --git a/apolloschurchapp/android/app/src/main/res/mipmap-hdpi/ic_launcher_round.png b/apolloschurchapp/android/app/src/main/res/mipmap-hdpi/ic_launcher_round.png
new file mode 100644
index 0000000000000000000000000000000000000000..1b523998081149a985cef0cdf89045b9ed29964a
GIT binary patch
literal 5024
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

literal 0
HcmV?d00001

diff --git a/apolloschurchapp/android/app/src/main/res/mipmap-hdpi/ic_launcher_round.webp b/apolloschurchapp/android/app/src/main/res/mipmap-hdpi/ic_launcher_round.webp
deleted file mode 100644
index f77fb4bc60914a3e469a4761dacc5b047738fcca..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 1876
zcmV-a2dnr}Nk&FY2LJ$9MM6+kP&iCL2LJ#sN5Byf+ECE8jpXo$z1;&LA|^nDP?=4%
z|8b#0j?}hoPuphqn3?y9nVFfHq0IIE|4#_mkCh$!tR4+|ug2w8amIdU)pMET24qRH
zP20Ni+4dXSwr$(jzWZD#5C9Nx-nPxzwr!h9(Mq<rWZSmAH8a{a&w(UKZL`akNLGzA
z@B~S=Z5g)JP1bGOw(XK_+qP|ds{=bCPd4GJWW=}4c;6Nj000a)_qL*K+t$1#Z;jP!
zUbBtlEvkCSwrwlI4FG^(b7?%=wr$(CZCkZ%9zYNXg0;f}3+%5DBe!iF*;{Ti+`ez%
zZ&3pfzyJXlz)x?JGyou408niJnGS&c)B6V}wbKI-0l<{>0QBrGw(QTcHkZ{{oNEea
zM)a=>;Fv~D;Ve7UJLxm-2ms`797dJ@yVd2pjp$Vo{8My}`;uLU^e-JTYSL-V;Zl*^
z_2sWGS=G+(Q){w$MtD@VT<R_QlEwQ0$g)^)q-;AH^F&~~_sR*sp*XIXxZkzeDV^uv
zHcjE2O_XX1=hCrLgjXJqd|mlr6{RvoPtXJCs$`~O>d~Aar#e%r82dA^NI;b*k`;6N
zostso#cz1*yT{tmH_y5RJ-6-+jOd-ns0)E(N<^h)PhcgzbCT6iJW@o@E}c8^{||cP
z<C`f7kEqH-+NuvQmFYTa+!TC*X<E7m)s-2Q=6wLa@nC60zf``8sv<UH(|c4`amX?4
z(#txC^@R;8o*oQg>*5(3;lN{}$~ybB=^Y=vhbpSW!*v9w1tn=@+T)K9vm0t4*B5rl
zaP9pAysYlsq7I_cEjoGJd+-`SjwuQ6E-xa$sX)f1y`*6Q#G1?$8SSIswxOeijB~$>
zq>uid8F{1fMMgUh;~jW>x4eA~Mmq5H&Ip4+#dW!fUjjM$>??^J2OblSTi@1{oaTTN
zBqZ99dH)hWyBa7pnFTV~Ep!KYRZNL^M?Sy71OwwsWZqPmFu7-WC%-AYD(YAIIk2}c
zpXk95WcSzv0FM9uv8GZ`eXaSPxBz+W(p^y<;8ehUb$ykTaq(6t$jXZ#1Fv1Wd-0io
zd-9P%#(IKkf4iKN#yG6QZ(l$#zj}@gEVTu(nPFM1ol14-z|%WGZ=5{1$$JhwwL(<k
zt5{noV*+M%W}QlvkZ6PES5itD9cO}u%GxrjaJ(-j0lfOcF_mgyd<o6o1~Dn6G(@A}
zIoY{>rVmFV3jZ&Nm_XQAx+OwAeT$DXDw_Mc@L(dM42VR(BQ6j(hc_bBJroyL<|w>y
zI)_JyL_Qpo21z6OBSP(=*h9sK3Vj69zPneTIBQNJpb<ZSq>igOe9)La;JUPVMKWz@
zZ$d{#wja$X6V+IHpfR07Z$WXIWE$*OL&wD20nIp(AdqM%oRg6LZ(lt_ud|qg^JZrt
zPC_;ka_DDF0z}oB9THMRlmTkzme24cHH|eWDJst*AzQNXhZSD@jgpYQp*FWDjwcCl
z$f0EY=pN~{K3#|jK)`zVQbr*%rw|<Z{6_dV-P|~Rgp@#!3PsubpNt8pm(C(6MCZ^t
zwRntgsi-bNOH)q=MVWVF3V^V-U*Cv+2t@DDnwb;9xA>SO&~otQ(+_3jzi=r2gAOQ=
ztxE4%6FCXl1lFESrw2vgRu6`-c5nwVNvRIXO6OB2066CW2mZs?25X|C@+_gMLsKit
zN<HQz{4W4)&zzU#itFb3(LHrJ{`be0L8JKhRs5hi=Uf5~l&jJQRz!gw6?Ll+IfXGw
z%Bs|X-zF0mIUu-sQ*1@l)YG9N%(Jf0$v;lO6aVlQw;DAR@63S=QD}cug!fA2G`G0b
zC`?*dNI--1o%>32B43M?>Q&S<RPmK9138%}4p5*k>o9L9+?f*jJLM{C%2c<oG=qzr
zUe;kA`J9_vE}dnolzAlSnmFu&Zh3rDrN}okuI8o-K@e^o4QedEs+4%|dxyo+T>u`G
z&K+c{l=#};w8fqz=!rn*;p?zUfgipNwFBL910X%%&aO3m@w?8vrkpR`o+RwDh8H&5
zRU~#<$D0@??X(17L25~xb6ISYZCZbV)Gxs)21t5fUW47UuVt3$nH)%KPI90D2a;fM
z^S0fHep%IuuK3!f15Pc!KnO;MR+8!q_iR$?4?BM8z{a5gpnwgUE4ut1y-gd@pZ(eg
z!Sj=y_KprDz=84!%=gSCRwRz>ru}Q*r_hnM4<LR42h_ms&`SEN*q)tQsr%2w-(S8-
zY|L_i*Z~?~yL~eD-qTop{(<;@h+w>{<GaJ=*eDQy_zrwf0n=GEZu=KgZ{7Em#Sfdq
zxA~Z#&gs&0@7VVV^P24mZNLCYPy=Idm{sGwX(aOaX3_Pl);kY__n)U8e=H3bM?bzR
zh@3m|wZAPkgYgL#AORl%uN9Q?pbsW}U^&(I@q1pk7NWH0%YZYt1c>hdx(!GnP=WTr
O4L`T#9A8WR=9>eIC7pZ#

diff --git a/apolloschurchapp/android/app/src/main/res/mipmap-hdpi/splash_icon.png b/apolloschurchapp/android/app/src/main/res/mipmap-hdpi/splash_icon.png
new file mode 100644
index 0000000000000000000000000000000000000000..b1b851625355ccdf330cf3ed364ca0a5e691b213
GIT binary patch
literal 883
zcmeAS@N?(olHy`uVBq!ia0vp^dw}>D2Q!e2*ORgXQak}ZA+GKPK0kka1)?9{zjSR#
z-3=6HE(!7rX1JW1yZiW6AWzuS#WAGf*3(<jd3OQ?m@g(4|F1sB^yz@c(gnK&56wR&
z>MDD>!FK+1qyA5kQ(rDV^Yl|}=steq_V#?Sss7d1eYJONyt2h|%`)3H%jWLRx+N2K
zSuX7IxmeR&zSWuh{P)lGeJa1ZrF{AP|66MKR)1VR|Mb&fq1dx`UoO{}cy+^ztQzws
zsoTC@i&yP@oz^8B$lGsWbH3u~`&}=!FShM}t@bw7{O#SB&x?M3S=*6SaV+@o<ilA~
zfxPD{vMQ8TJ&atL)*u~wR{cQl8nyfPQd%GGzrb+k#Z&WLKX(ZhJm%kj!B<X%DKEv8
z|IQgJ(*wQh*>+sK%3!`tD&SuD=MTSkd-Kk?7xsBajo7N6HM@?TwV5HfW8-Q4lFtc8
zOY@%PSF!9Uya&?Nw&UZ~A9?$7K7Rhpo>v1DS;qzxNig3x>v>*Uqtt_AVa)G#OJ6B4
z-zW9%Soq`Jl3VWX$ZPWz{~F4#$9D(h#f67M3z)Akn9q`W;}&xGZbjCQzt@3uN7fE$
z-`)q$LQU`Vu4vmWc(uTM@v4t^_xv|ke%Krh(lANto!T;pshm6H3Kp+?_%wUf!#o#=
zhL2Z1=vu9ly6?O8lPOT|EU7xBa^nQGH)$-UP0~Lecd7i-18N4@2(rnu_r01AZ#giG
z%aaji2wwS-cj)@Vr^+h??*y3clU{eM+}L~B%Z;D@)NJT^m$s)|a=zVzjJs#&-M_zf
zfm_k%n6vv!K}IYF8c_pu#`?D1AAxqq^uBLf{qb%A(1d~|57_>k_AXFf(fHIo{P5i$
zSwFti^m06v1*%@&HvK)=*Sz~<KpwF%z2p0@QR+T#z~kKyfdR!F_TkQlPy3`lu-KZ{
zRNVJ<sJwf&IXKQIuFyDE{==U?JOPW<9nRi+S-i8xpJl~Ot6IJ3?<X>t*0HU)C~UAt
zKA>*#?0cREKK#D3Wbf-`(}fls;}6(;);C|(p?ALc)g5_Nx{O(7zVi=1UCv&->korz
x6;s>y=F`9Ps*D>C|ISm}?-O40SM&2v#$_E>r|&3JE(Ycn22WQ%mvv4FO#oE~!(ada

literal 0
HcmV?d00001

diff --git a/apolloschurchapp/android/app/src/main/res/mipmap-mdpi/bootsplash_logo.png b/apolloschurchapp/android/app/src/main/res/mipmap-mdpi/bootsplash_logo.png
deleted file mode 100644
index 7065a802c74262b1d4290fe4a98c7c025a95d435..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 2202
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
Lj$+){mU#OAxYp}m

diff --git a/apolloschurchapp/android/app/src/main/res/mipmap-mdpi/ic_launcher_round.png b/apolloschurchapp/android/app/src/main/res/mipmap-mdpi/ic_launcher_round.png
new file mode 100644
index 0000000000000000000000000000000000000000..115a4c768a20c9e13185c17043f4c4d12dd4632a
GIT binary patch
literal 2858
zcmV+_3)S?AP)<h;3K|Lk000e1NJLTq001xm001xu1^@s6R|5Hm000W{Nkl<Zc-qBU
z32;-#8HU6T3D5wU3}*m?By22Ge1Hiq1arg(rVu)T1Sm~92FFuuAYnQw#smdu5>6jj
zwslyNbxW4-gAj<plT7PL9Lkj;*wBFvEk_fMnt+WZZU2AYd-Bs^OBfS0^Nrryw{Q3R
zcK`q1e^(kX;Bh~M3>;v!J{u#G1>?8h`uw{1?o<0nB+tYjKOW@kQM}bUbgE7^CRD4K
zgurXDRXWsX-Q$uVZ0o5KpKdOl5?!YGV|1Cict&~YiG*r%TU43m2Hf99&})mPEvepe
z0_$L1e8*kL@h2~YPCajw6Kkw%Bh1Pp)6B|t06|1rR3xRYjBxjSEUmZk@7wX+2&-~!
z!V&EdUw!o7hqZI=T4a)^N1D|a=2scW6oZU|Q=}_)gz4pu#43{muRW1cW2WC&m-ik?
zskL0dHaVZ5X4PN*v4ZEAB9m;^6r-#eJH?TnU#SN&MO`Aj%)ybFYE+Pf8Vg^T3ybTl
zu50EU=3Q60vA7xg@YQ$UKD-7(jf%}8gWS$_9%)wD<K1WAkp#HSK#j%D4FdKNs+Vo{
z#i7sS<H}15yE`oELKDCl=q~|mxsz?1nIWC5xbGr((IBD5Y)G!Pkk~SfW2RN@m}M&^
zh<TL;vb4cQxO)z9<y!LQ=apXNh_{YZ`z^;lurIt`SzloU3IiX_oOsSN+omZ(@=Izg
zj@h<S2a@BkpxQ*1AFd$$GQ`{pJrJt$Do3pTq9&kn?CVt!f#tJI3K=INAjhT=03Fs)
zya}fgM*|!5oc1SRLT*5xNU5`8)FQ%?oDcZi{Kk2(#aPZ^aY}JierW-WbDJ5*))v_X
z($C_0Unh8W52~9vhvn@0X$WA-8OIhV^1cCT&v<fmU&<-@qW8Mvw9NVR1<*wgOsR-W
zlJ3jkbM+eim|EH3>1O2xB!_VxzcJdN!_qQ9j8#o^Kb$2+XTKxM8p>Ve{O8LcI(e2O
zeg{tPSvIFaM+_Ivk&^FEk!WiV^;s?v8fmLglKG<7EO3ezShZ_0J-`(fM;C#i5~B@w
zzx;4Hu{-SKq1{ftxbjc(dX3rj46zWzu02-kR>tAoFYDaylWMJ`>FO2QR%cfi+*^9A
z54;@nFhVJEQ{88Q7n&mUvLn33icX`a355bQ=TDRS4<C{)=-BYXIWn_ML!XIFN|FTA
zp55F;wgV3QqnYeK*-Wof8yhIZCIziK8``Y8bb+>Uud|cnpZ?a5X|cXgeBhYN7btgj
zfrwP+iKdz4?L7PUDFA_HqCI~GMy`trF@g!KZ#+y6U%p5#-nm5{bUh>vhr<m>^77p~
zq~UTK6@uhDVAQcL4g#8p-`vS4CnD9M_USvfi(M-;7nXjlk)~pr>zOI`<iuEB4J2^-
zJ;??N9Dv+Y-%wi*$hnPjr$}2!B6IirsXL@{GoUL{pa3@A^($Zom`&lC@8~G@RRF%b
z?e8aOFbG5d<)$wtQL-EjU7dO9#lUET@++K1%;zx_a^TVfei>{;$VXt;?VTNcCePv4
zgZm`^)VCx8{D<EMVo80O+daoER#osf;M^Tb#S+QTMU}cX+)3eP1middOw2I1;g=Pk
zJxOi<amjPQwhB(Sxb=ZRzvAB`w?z0}TBf};VfE?}E&;FX-Zn1Mq`V%831OJL`SU$5
z5*S(oCG4y2^?U6kzS7{|gpiY7c4KsUdWcKF_+8n8D6{I8KLKcBwu|SzIzM;wI+1+c
zNLv1L)i3#$YgcLAbN{{J^~~1#JuF%!eg(wp6}QJ`WQ29kK=z+Sfe2W2wA!cLXPr1o
z1hRu<!_it|?<FeXvy5YPM5xFiSxra1o@3i@!^VFKqz(QAjNY(b>=H2c!%Y*Sj3qbx
z3Bcvv7qRAl|BGZCts{+>FZrE;#w(Yo2z<xabLE*9B2phB7;SnKpp)Mmnf8vrC16-e
z%7`evqOCUpxZ1Yf{;A&_w<omz^dp&RfCWokK$1O@LXO)^jr7vcxVVx0bZ*chi~4Ik
zx4|47m2<%D9`20Z|LRK`@}9JSTlaq^n;`lmmg~qm=odwBTsUq^^vY)7Jea=&3!0|P
zRrfXn?;Zb~-0kRi;sWk=JRoV{OOP^v2t5&Lq|}`F3t42&r+VNVOu4hE#K5qFyEAyH
zgws<%7Oa?^kFn|o3hZMm%r=@(Vz~hX6cAA<72%|*L}?)j|M)Lkkh5DVF)=eWN^F$h
z?J1dqb%M+>D#>s3a*Bm!6<H1)aQ7TuGbqW*Dl?g5P(XbS%)6^=%g7v42?H}iMX{#7
zoXmv~J=db9n68sC0xDPmFbhIW0p%o6=Ke2a&0DXsdx9W-Iz2R8nb+7`I*o~xP?1YR
zW<*IonWK}_Yd)sH^ZCXS8Y&s&GEnA`1Zyd5(DPX2Gf?G|M4OJ93<VIU&~O5z3`!4m
zVgDifcQs+$aoY-TejxZbE0eW1ml=5_a}cA2@*Lj+pd1A(FsZ!Ay9?+hPX(0gyvS1l
zl?Hb7rI>{}vF_;i)6sl_+)pUj?b%BL!T1ELx|Q*Gi=7{Z_>n0I(uv>N^kh|~nJfab
z-B6Q6i-x>YYa_42Hv&m>NNuPj31wOaHZ2`_8f~BtbXc@`9CZpHzaE@9sme%_D-HH!
z_+C&VZ5tjE65?}X&u-D4AHRJ|7M{hR!}PYPpANP?7wnur`Z(&LFwzUmDz}m6%m#_`
zN1ihq8f|zZ&zTL92M2b-hMpPyjp;j(qwgP9x)qI?EZx@<$g#>i7(MC}@*J1VGXm6J
z<dHZP;6dIk+VIF@<e>tz1=RK@?%Qz^vmWNydd0K7oyrXw`TLb`z;fP6eV|NZ@9kKH
zIyMqzZ9Y_)PZnC#UgW6&o7RiGXSCtSQvnrvJ07P9WCuE5TE27za*L6r1qX7pIDFiP
znSaHYJF8sl^n0|3j!i{?fD%?fpQ8-}VX4%STy1t@8)G-8??Fy}j}~2_iJ79Y<9BW~
z!~)T{3Y|lwcVD5s4z^GP5M=~t`V?*W<YD9;D0tkqEoS6GIR*NwjfC+BoT^C)(t|at
z8Y)N%Z0{D=nC)C7!i_kd+wh|kj2KA<hkUobf){Oc0Y@7OFdJ+K-&uBOe;sg`j9gaq
zWcPl4;1~oDOxvApq&bOEPS~G?dj5e!54*NLL>ng7gTvC9%p>ErZpM)pQVx<pOvm?B
z1hFDQUilz>57>AIcf1j4QFg^w>YYB%MypIj2syoXw9$K!N8%s=iPIw!LE-+6v6*Rm
zvCqdN&kwI+@pEX0FTb&P)ujD9Td-sLBVV=A$;?RiFOROnT^LC^+P<TWQ>ZR*u<3yl
z7b%>viF-e48L=c`4Yhgb^U=+w7snP$R-gzx379%&<GP*U(tWM3S=HQu69c`+&#c-a
zhfsCMg(MpU14_J*hF|KiU@r0U{MIoWQg=by;n)Z5>q-0#fsMgvQlo>14~`1YOv{?^
z*^VYyiSJO8fE65P0FORgqSz#mi#9@40VO@TaPOT7pJq3WTK9*n;Niogu+4zte1FUa
zyN7rIFbaQxeK{^RC3Iu@_J~ii&CvyWn^W}4wpexHwV9>GKO$zR3a&*L9&AgL=QfA$
z+G-YMq;1D{;N38`jTdN}Pw77sDCR|$2s+->;9<jJo(~I~H)K{!0s^nG44<)eMzQY%
z|MGwK@U`$kq!3Fa&#`{O%?|$m;a4n%uw}tmhaK&H`8&b?0rlQdz)IvL`2YX_07*qo
IM6N<$f{l1_%m4rY

literal 0
HcmV?d00001

diff --git a/apolloschurchapp/android/app/src/main/res/mipmap-mdpi/ic_launcher_round.webp b/apolloschurchapp/android/app/src/main/res/mipmap-mdpi/ic_launcher_round.webp
deleted file mode 100644
index 42aa619f04951d7e857d309cb6326bc2479fe766..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 1056
zcmV+*1mF8oNk&E(1ONb6MM6+kP&iBr1ONapFTe{BH|8jkWLc@do<1N6{}NF0{xZ{b
z!~(;%Z6opaANZ|pNRcEtl49iR1f=7S;!x<Gihx_&wrXXb`vup?C8Q6EAR?s!+94<U
zA!RU#+}$0Xd`|$xA5Z}SDj>iB2oNBFItY-!AgF>WsDlKCKn+w?<9xn)E(|U<E;cp}
zM*WX87X1$!qf|CIvPojoM@G-RBx11XGy2HJrN5EHBxgMLl7*!{B{HdZu}NZdKaWK9
zK4@~1C`bK|MECPBGU{J_h7Ch~BS$v%E^cFoO@c%$4vB1RToN(3Fi?6bK!7gDK&CSB
zIoUe$O_tz76tmrA>x0n=ji>;7*kVF}1lrTJ4Q4*7AFw2#Tn&V|>Z*S<5p__2OF4yO
zf3eS_9aY6~wL8Zbv%9+|+dkW_o42hvyc9p5>+x)YnPxjI%LBcNXSq_IP`%q<_Ly#2
zEl{l38h-wZ8)08$i*0SP|DOJxeh%79JyyE>oy1yIt=s>Xn*RFO{&?>}!nSQ^-im+T
zH^qnA);-&{ZF}pi`mJqiwr$(nA4~E+NsmSJe*)<Lc=u+*t($iTN@HC`X|YmD6_-}j
zHM(}YzDzO8>TkPoqqamjSW<h#DRI42Ib3>OIFeOeq#Q4*&T`;RrE<0M4(ngJa=H8;
zLslu*tE85wQOvxYoSd9ohN=-7;#whR7644(6kZc{?>ZIp@E{X*F;wR}8*xQ(*TQlM
zM_mzCe>+%{tw!Z=I{sS7tBSh^wp%#rsx$>%W-SFUb}E25tjj^Bw{4u<(Eyfh05JFn
zr|m5f$$N^s4FGl@9Rgq-N8OV|ftOhG0E}-}vjI$DT?!=fT;LoV3Sfm&8v$S+=YogG
zcZRbb0QM?%Vkm&+oHITme-CFmfQd>eH5b5`JVuY7D71xf0035*HUq$RMoTDBSQlfZ
zX}{^@Z~zM!U13C_{dxuC08Cbv^8pMyuGb$*6mn5-2LP<L+6n+0^e%=F`S0s3GG$wx
z9tmKE-hDrj_o>#Y5dfws+l2s-t@YGP6#P+Z69BAjx7}u1rS&nG$cX9FnQ7vVZ`bIH
zF^DMiiN--Vx>Msx7!i@@eWBeNXBOKPe(;!#xJP!AoEe#K^C-?R3IEp?tM)?<+q8W3
z3lka9&#c^j7HyEV_s7|RaQ26nY-QxPZuh#sMM^sgi2dB^R_o{30MZRgeAD7i%bUa?
z(iWbiFTHN`eo68OJrbUT@8_L6_dUTQh${l4f4}T@ru*gZ=s-aZ8sRCwo;UNFpZ`h;
zH^^BT9F_L-^}{BeriZV8rbPuya$I^NlQRB%diCP*g9nday!!MfBPr4=$yFKTi-=E7
aP0!3sPfd=G@C8X4fI>=X7*a|>P67a|pzpu{

diff --git a/apolloschurchapp/android/app/src/main/res/mipmap-mdpi/splash_icon.png b/apolloschurchapp/android/app/src/main/res/mipmap-mdpi/splash_icon.png
new file mode 100644
index 0000000000000000000000000000000000000000..78e8e3296b2d76a3c5ad8e3cf20fb611a442888b
GIT binary patch
literal 460
zcmV;-0W<!IP)<h;3K|Lk000e1NJLTq003S9003hG0{{R3Z&+WB0000CP)t-sM{rE}
z`Stnu_4xPnMjB-$00003bW%=J09vp7OV4=#00C@CL_t(|0j1PIj@2*>#__*{M|#WL
zfVlxjAV*-sj>Ggiu;K{45nUpP2;x!8Q^y@uZ@!iFe#&d?G!^#9SAbt%h<P{urDM@!
zA#Z?UMdhA$2Fn=`!T#fUhOkfrXawOZlmHS}Xarkvn;`br-VDv4J`BpqkroH~8T?K_
zF^~j)*bfo5)%Rym9hhOg!;-*erNeRt4Hy`NcX?Rrm!T)1|6u^gb=Uxhf=`5DTaUn!
z!U{xaci62auw^iqL3jx_hhor^>r6Lza=0Bpd>Cpl9Evw?K)V8#6$h)nV^EL487v%T
zqJCx==mGxZVCfE43<o*DPb>l8cnynvIXj-V1GXP~(z3&+2<*@dY$neyVGYAl5F%&-
zTZF+3I)Nn6BlHLb>IAeIMuaVaHbb3(HNZMUA%Ha@N7xL!@f75n!4p6+fX{>!Ds!Zr
z0Ix#JpgsU9WYI@JQxMAS1b9Evz=s?fA9Gj=dD>sCK)iIgo&2!?0000<MNUMnLSTaD
CX}$#j

literal 0
HcmV?d00001

diff --git a/apolloschurchapp/android/app/src/main/res/mipmap-xhdpi/bootsplash_logo.png b/apolloschurchapp/android/app/src/main/res/mipmap-xhdpi/bootsplash_logo.png
deleted file mode 100644
index 8abde463f8c0ef768813aaf2923d8bdd3397f1b3..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 5175
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
Ph@c1U4}7qPb@smj4)~Vv

diff --git a/apolloschurchapp/android/app/src/main/res/mipmap-xhdpi/ic_launcher_round.png b/apolloschurchapp/android/app/src/main/res/mipmap-xhdpi/ic_launcher_round.png
new file mode 100644
index 0000000000000000000000000000000000000000..459ca609d3ae0d3943ab44cdc27feef9256dc6d7
GIT binary patch
literal 7098
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

literal 0
HcmV?d00001

diff --git a/apolloschurchapp/android/app/src/main/res/mipmap-xhdpi/ic_launcher_round.webp b/apolloschurchapp/android/app/src/main/res/mipmap-xhdpi/ic_launcher_round.webp
deleted file mode 100644
index 7a797f0543d54597689b0cc60bdbe0991041fd5d..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 2506
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
Uz23=piwDP1nn~^NeJ_6+1efmf_y7O^

diff --git a/apolloschurchapp/assets/bootsplash_logo_original.png b/apolloschurchapp/android/app/src/main/res/mipmap-xhdpi/splash_icon.png
similarity index 100%
rename from apolloschurchapp/assets/bootsplash_logo_original.png
rename to apolloschurchapp/android/app/src/main/res/mipmap-xhdpi/splash_icon.png
diff --git a/apolloschurchapp/android/app/src/main/res/mipmap-xxhdpi/bootsplash_logo.png b/apolloschurchapp/android/app/src/main/res/mipmap-xxhdpi/bootsplash_logo.png
deleted file mode 100644
index e15c3c505216e927314b583a1d36afb075fb307a..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 11284
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

diff --git a/apolloschurchapp/android/app/src/main/res/mipmap-xxhdpi/ic_launcher_round.png b/apolloschurchapp/android/app/src/main/res/mipmap-xxhdpi/ic_launcher_round.png
new file mode 100644
index 0000000000000000000000000000000000000000..8e19b410a1b15ff180f3dacac19395fe3046cdec
GIT binary patch
literal 10676
zcmV;lDNELgP)<h;3K|Lk000e1NJLTq0058x0058(1^@s6=SJeV001d_Nkl<Zc-rlq
z2V7Iv_rP(0qN0Kz2*?ae#9ghcXxm?_MXjT@wfb*sU3JwCt-Io?sJIXadxyQJ6Wpj(
zt8MMHwZp0%TK9m2`@iSrCS<%MFE4|Ld7sbugoNb1cklhabIv{Y+<Pr7%!m0fALhe+
zm=E*u#2yH>um}xpNhCM7m0FQ}4}N1lo<c}41S4ufTaT!zX+0T$&;<ni+sWj7HROC!
zz|3$pA7B6$(y$u7>z9~l<Cz)n7$8V+_sxv;_sx#!&C8DM2LgY?XYfDx4t!T5BotIL
zP)`~(5>vx)@N$zJd<6*u{W9aHJztU)8d8y;?3WdPz&A7QJeFUv+{E$_OFb457DPov
zKYK{O^DFs{ApSuA{FLNz6?vik@>8e5x#1eBfU?k4<Czb`Km%rEvH~=rpnb|R{YMsO
zzdfQPi$Ag?s}{>&SP;lt`%BTxnkw{sDSls^$yvr#7NA*&s?gZVd_>Rv*NEb*6Zkcn
zTpQm5+>7kJN$=MTQ_~#;5b!%>j&UU=HX-HtFNaj*ZO3v3%R?+kD&@Hn5iL5pzkc<}
z!}Vjz^MoN~xma>UAg`3?HmDQH_r$-+6~29-ynfB8BlXkvm55}{k7Ta<klxF7xHq^*
z*?WdEC<10ajHqqE&%h?>dH<~V$bhW)OZXK@1)CrIKcRnSY`tG*oX}4YC&HgKz~^u7
zD?#%P?L~p~dt3#y(89y}P;ij|-Z#KC;98PvlJCjf6TQbsznsL8#78n~B_kaQl}nsm
zLHr7z%-FAGd=-!e?C{q62x5i4g4hNuh)LeqTa4ynfC4h(k*e>okrBlLv;YG%yf8!6
zcN)a^5>rp^4L+myO70z(0m`D}$C(eqfV1GpzM+%$6s6$?xF>~%Gzx|$BUZ$=;f)B8
zoQUrc!zB4kT!wqSvJ=ywY-W)3364w!`U>J+49ZE`H~+{!gaM)zFV!?!H+)k8BnOj3
zGvU93auN}g?X^8c`+PFv|EH=R%m)iUN7gssWyTD~uv7prl1iRfRaCFeJUuA@$(p&K
z?D+cmhxf`n9B~!?S#d*TeLb^(q~VYS$3KhjfwfMWtZx&PlTZ(i@5HJ?of_Q)0YX99
z35b?W>?=vlb6gtK1ydcF4<@aH|Hgj8r?~QNOPx(YoKT^Xn=?Q%=1uA&-G(}mXdtsT
zQuKACS|@G@uB<bSS|?V{R6R`qNlcs6;f9ceAnvTJS$pbzqyDk6mXg1Hvf|gtm@CE}
z)l&#iW6up9CW%JIb;VSNPv4joKK#<+J$*Cd4=ZRLtt+`X1Jo#u+6d|l>W(SY(cH%%
zq+xr%bpGqOGHyw<j;5ZK86axb8nw|a-_)o#nCiA!9<oCazFBc$Y_yIUAkEqco4C!m
zN?SB*zbKRrd<N#`TKQ(i6iSC31ni^7W`Gz1k#u;3mljpTi->3=8K7;J&hp^g1UsyG
zYT24BGeGQukP?&TlOBE2H$2oH>U#E>GtI-fmc)17uc`7FRxJ3A!c%ADN^Z^oi6tYp
zjzE+a{r&jt6z^scbd(feWPVEE!lV1I4lfdLhQ|yLdx&1IEV%l1erB&H8X}3=8lIcc
z<IQ~~|ExKE6iwb+R0kE#RsL6+jaHpJgyz)jLAsm=Wd5OjXl3mo^g>CNPUis-KRbCC
z20@WYl&vVEZo!fLXxXs?{|<|Z=>0^-iX;y6{DT$lSo8b|@FZM3U$+W37(A_9<)fnq
zP~11?(AKlHI-Lh(`?-@S?(1{t16<j<oCn}Z_~uJwVr8p~zjz+aJ5X`;os?K_**1A%
zy6VFO(YDxRT?DfQng=R)0#?tU>bc7ESX->9twFP@t8_XK$XxuSFF#R(g7H(U%XvWa
zm}J>%4-suYL=gX7-_MsjD27o?I!G888fxV$koLCfOv+Da&OVTG*@(aC9lz_e>*UGS
zrX6f-45hd55ya-p_O{FbHEG%Ee9~i(H-B3RZkv`0ZDn$!>MigMZ<LAiATvNFP&UZi
zOpV46Z3!n4Yg0325-;C3gFitgPr1Pikja#dB&hL{b|a4+8>X06&y3RSk-WnL-{cM1
z1TZr|rc*Xaf|_^y&YLc4KK3<@aWfge2jARbRRg1DfJ~%pV9L_@$UADw3EXC_n%p0v
zQO*{=88K@W{T?$wCR#S!M!e+R$aDL~EzovN7pbOBvrk&&ASS=Z43No|jrc>}aXXO5
zrd1<|Qypq-h#J*iORN@8YRc&`17u=lqo&L&YV%p#hL%P*WfIfH%ZUC^o#`?IWWr?w
zQ<fBg+`~gx7}u1EBbhC{V#D0<johReaUwH7PgdC^ZRQmn{-5iTIX={swKSIR)6zFR
zCV_1_su>^?EgP7!lqlq}ZM}d*sSVz(mqeQrA_huV@M4iwXa>k+%O-ZHW44JrRxLJy
zLoHTuEqw(sMcO38n*lQ6ve97<&+Y50NNmVpW{hed@5EgrWfI~ITFJ0D(<|k<B*g(1
zgc@9s*6abARb7eRIarQn;Mb8QnZ_v_ZcD6%kW1*2F^1DZRQvSIiZ6pzGJ>)ag-~cV
z0@-#S9z8&EUfBL7C_53YJ$)2ix^)vhsH;Q&KDdwe{q{2oJ#~b@#Qr?YGHrh;`rz<>
z)F&rNr}J<to3aeZOGaU5PN0kb{*7)wdWh~levB^sbDd-;8oX?{Eqi8Qkald?ZxAg+
z6OmfXD9arP%d3FQJG{36o)|U)30IJ9x8g(%V*8u0vnSBw`g$Z1iR9$^y}Ky-tFx@n
zqe{ZhokTHTpC#Hum-BEb8<T7~TZ?Wyc%W3?8xJ3#Pmfm{wrsd9p-rb3XQOf3HjX6S
zdVOjk3Q)@l<@s^2e$AxH0wI_YwgOKPR1laVHs7DLrx2C>@}p8^N(8hLRH`=jpeT@y
z2v7WETpnG{qixxkWWyK7(3QJ)RF-$=`O^k3+oY;O;rNnl^kVc*(j(Jb_99(Dw1w;T
z4K8fsKDzn|epoWT|5{~*3bCC1>nd5;@=5lApq%3>^U<aMZmKLR$kG$l1}~d5F0?!B
zmcxu`JmL#Yp4>_gQD>5j-O@WH;uEG+4MSBjJkdgtP;JG2`S&&Sa#_w33(y<bm%DuX
zKec7N^XL)ruMA$cj2LjHg}j8F$aU?qP-t`AbB4s@BOtAPGx%r30L2;wpdMNAsPNMF
z=n;b-B&&%|UH_Bx)Sfherea6;`<wr&hv)GlVjhiEHc$?b{_44H-B-BH+mg1|WsFSX
z`}oF&50kEj%3*Cnu9f^O?zUH4{z+{m3yCJWj{4^&bFO4RK^(a^XjJ%Y8TKJQKXV-I
zzVHPR_!~ZZANxD7!u`;~G-7_ZmTgpd4*FGt=BX13(Jt)!^uoPSBR(ABz#=~!bzAnq
zC}?|~oN21UTKT3#g>yAux~lnp7>wMXzD4yy_2#Vh+7&WMkWFl9Ohq06<G}B~kl+1%
z|DM`&Gs$20H%I^c9p(IZ5hZ_nfxzeA_>ifTiMWIC(|<SAo*T68#xIVOMbM3Ip23VI
z?M80vSHwWub2nqud<D*%*TG*9dy$Lttgm3(GkGaQ6FpXA&H%7OSAN6SQVzaBJOrRw
zfBG1zx$-Oe<IZihrcqmgbNzAmHUV<=$-`(A_RADC2WYHUvBM0p9d+k=Q1=)mUOZ3Y
zGfmM!AZ?8OA&>1Fe(3n}U_0(+jGC_(1c@X4vzk6y`)qzH+WXtj>dhI3=)~1Oi0Omh
z^vp^i6<L1yN8(TD3m8pu^Wg(jaOpcV{a}SuD?z~VyPN-LG{>1ge1rO8;F~ncj_=tk
zIvnwqFB-?)jER5LdQ?Hi=Kv5dgPZx%XSjc8VLCd4yYK4E88pIi4AGWzwdmrFf6&AF
zI-`N3cpnf!Klj%)afJEC-x{^po?kDKD0@>6(}1f2xkCOMS49E?+5^<s`?4Bcl6?#S
z;<_TdzQ>EenLUrqK%EANgiQdAy8BW0e}Fvw`>)CTcvBeX6ZgjWC~(KdFE9hv+M6*t
z?loxF7N3yv+}r*v(>9DX;0V1TP3G)L5r}m~e)R<!giW*w4HT2!STFweyM5-(>O*pc
zv<WKqkDX0=UqjOPZ^E8e{*e1)Vkr+$;o!8^3G1I&c)-NPesd1>#tyehrK*U7ilRPA
zk!aAmm9v3`z|hH7+WJ41!*h~g<2G1sUubFoL9b?dbp>%)pHzUZ-n)Z)W(6jh>jY-3
zUq&n%9=<W2B;K?3gTU5_)m59|g7kx?2oNl(^7esp(j9-&P1rBDZlbsLm6C41DFFnX
zrvA7$7#tOTocKY&1S>y?`ajN7rr3`t68sL^H^MG_rUDQw2$gj4Jb8MXgAW99<?d~g
z=LBUl84Z*XD;kiOf=0$iT(ui9!j<?ztn!4!s;ZUyme779OS0+!Ab%~g4-E+r1O)Sb
z{Fe9*%>^EbKmu9*Pv4Rh3=;vUVF30sUrdj!_n0*+m?WCbo^8q2fo|;?vH3OFh4__<
zyaqNQdP4&Q+6R)%gv|^b#b|oW*XMMKLhEgy7(3D!poW*Tk`Qn4f*HUBD@U4+eOL|4
zh+hT+hl`Hx6+v(dZi=hGf|lF9JV};b<MR6{`1+9bck9u^W($u*pp1}lIYoy$hvAg1
z=W2C2#~WA^&Zw>s&Bm{THmunMOu))>8UdnTYV%TFdKB!dzN+?+5S+WYI><_z_6eDC
z+WvMv78tB-j%G_;_de;{^Q7!t>Khj7gp^izaCK?7PmUiHevBXbk=s8{114AjWHDj{
z_(0ZvDUl`5mu8_cWw}Ba6$W+4RbZ4H97I^qQrq9Yd$5A!1wSqDNaUXf_sQ%GF7*wX
zXFhfrz!d7zZiDhtgk#HcP(aukNVacB*<b}wJD=3(Q?Ms`NNKjHseB;#-51xdK6UU&
z<n;AFNgXs*vRuEMB+(e?L~UDt9y4J>*=V7u3*Xwp&aR_R8vnbd1PGG6$}j(<F%L-8
z%$@4;Uw$HW(NqA9t;j<?wr#v*(V>F_VMA?KUK~Jd?J)TjC!h3~KL|i&IYtL40AFtv
zb_DC5Vt8aT6JhF5fEI0_FM#^zCX2>a=A#}FVOKjnH_(#+q}Ggy0kU*_?=3Ifjr+H$
z0D{~ZO<8+Sll*k^U-Y6DvsCpBP|v8XH*H@U(US~mumH%)dBJRde1f|G&@1J+MvVi(
zla}?vMV%}C?xRQOryKvG8`v3bs)mPaL*v7}=z1;z?uq)tAg6HwY9Ihbhu^awAJU&S
zK#m{H4)PVmJ!}eqpy%<A4vl`l?lDUF>MRP$Pe(&D;?N7($!Oz=8uTxRyl1Wg*V=gE
z5PBge1q~I%qmY6Ol#1^O?u~P=44?CDh*GEXjSmoi`y;!_V+I2o>H!jms@u4HII9l^
z=&`W@f)v#1KQ8O!bY@+=fC3VBA@A7jQt^q~fz}*7i0(grY=jujW3=vAHS&qyN!B3*
z;l=MjJrW~O7S<xVbPB3}`x*5}iP8v>z5xp2Z?EtA`naLM239gw8Ub=%IHPY<00fb5
zozf%j+(s|urpUn~5r5pE7yi0taDcx4`#K81u*kwAk(cvQ$vx_F{wd}8h=<Sbo5nXD
zKruV&*a0L~Pi?x+o!JYY;DIp#f}mH?&)@4*xtFlN(JN^;BS0W!KYeF#fU17}fe{{%
z-dKBFx~W^|pzz0UQ6N4K<SeVwMEW;j+aB6YASSGhMgRVm8Ub>eKDCE$M(iD9_QGJh
zr0e(Z>QuRZ+`ff^GZPu%;bA#_^$&vsboSa6V!jmN0SV4dBKN4v`C)aESBtZV7J~U(
zOc3e47Zx3Ux67y(o?#7;!=y1jxEueEF#$^c_PoxG_pq)GZLU2`d>%!3rdJjkrAK!2
z!2>jNPceo_9v)xpmu)_EgxsU9*GT^QoERVik+LSzH$Z{Ax7_GFY+!HA0MSfDyXT(k
z?vob%yRiU**{7No8PKK&w77Z?8j#9IJ#hv1O^!lS%kt0<H~ukNFYHHrt*PaCs9$O{
z3QCSd&!oqoB{h5X))TyZ>n7@x79#}+R-TuINbiBfotv)O^y=kD0AkUNhrP$U_@qXE
zYpkIR$Zgi=#6Os0^$m7rt1kV3&R~;r&xn%>8xzDHk!yob^vyrl^*R$4R_u5eYdHc>
zk}^bkAIjLe{t{-Q8+D@9&dz9Q;o$+RGT7l8sx<~c5IBs*Dp_bAwqQRM2olfEe}Vk4
zc9Vt3hx$Z%0|;xNF=aW(Z*%CEm<b2UhT62&7W7ND-tjw%AtN!QG)HJifM8V(m~CnX
zLpwQh?N0==CgijbK!l-sy{bqr01e1Z7KUI3d_tE&I)@!AfSkvUZHHew_eqF|9#>g_
z-riR#1Wjb9t+D^_K$%|E`_m#&XHzQ*&~vzFCzYIJB6Ieap%urgb=%UsC<9^hC4{(B
z(3+*N>|JNdhT54KE$HT~okqq-teADE3Vn9^sA!>%+fb|98XIO<n1SFXaoCK_*;^`>
zePvP!J8>9Ao~cC(u@>UqZhO(v+C!ob_m!fdtCwsACbR*lqtAwwQ@{hCy1%pm)*>|2
z*4U}vUNFO;Lw9~?Rw9)osm$D4f)?XmUvN$e8eWjjsm+Gr-@$~6iMgqWH+%YAV1gAu
z7NbW)FU+RvtZ75ADtl<iX+7Xu9sK>W83vAW@YkP-BMr{8tV}A+L9?({@=u8(K9O&F
z4CiS*&nHDa>J}36GR;VAs~I41Kfit308jVeg0#zIVj;(cr8EHqE6<<Tu;7weRLl9l
zuAyhM64U?`O#t#qi4@Ow*9M^U7&5UiI4b-~8&7A50kx+=M2)jkTUj_dw#ToI!v%@^
zL&yS_hMC$t8lU^}t^dq0=rApMRG~l#pw~)s(d>OP0C9kbOl`)daY)$O<0J;;?A%Ve
z&#H!_rNfB84*1o6aD2oLL(Ywd^#ZTmyK9Dlqg=at2TjD<Mh+khiz<LvLxjHri!1a^
z<)dd-ElvU!C=;x<Kxm0o70_nacjM}}>GCcH@qymjUqbf4FvGxc*ap|#6x@}Ug@+NK
z6j_PV43T(wmxf+(J5kT~r++|VKw>6X0o1~R#{);Yll!>QeP1cfzTvOK0-Ndpf;nGz
znqZirxrk&)Llzz-fKnnEL_I{Lt#O<8-0}IX?!m#sfdv{wY{3p7aF*=sI^w@wUdl;1
zOaQ`8mA(OjeI_2&*O_79989c3v-g+F!6OGyYBVD}5>W|JMvMsd5c6BV0+zUQBP_6V
zpc@@&KR+A%>NFy5N0^}idafWHEjUnt=I<|KC5!NPqrW(T!j9Ll{*5Zxa^f&K*Ftjr
zawS=CfJrKpWc85)DE8bbv=YBAz#5gkRLaSR_+g6q@-*6f>L^-JT`4CEtE*JX@Z1zF
z0E&{AR0fE|??ogjZqfU3(3!I1@j9|~pd0<5UcI0vX5Z_hd1HMA@j|Yv)N2|G^GS;q
zXYi@WB9s-#b)He4kH+MtvHHF`8K0kl-oxkemC0RJl}RX;os2R(GXc%6Dn>&D@rZ}-
zPb!J(Btl-2B2W+9n6vkmpjV4Bl?F&viUK%NfXXmH_#u%8D2iDWAcFW0m@khVp9{N9
z7&DbP(1Gk7XhlD$GZqiugk2XTu>nJ*bAY;J1CcQR(gq#?Wq4+yGC*3wqY5A{@Bl2z
z0I7yYB2tLJe5Lb|+h?DCkK5jdFd$~3g?0d0ShVgG6l4p2kXQKH?S=$M3{jLui1Y>!
zz77*W+QP#K5C?de0OAUdGC-Q)A%ZOd%_kz}%W2+>L}>etfq`~pMyi$o5kJUY><4vq
zdT;7z-}KnW2H$K&gE`X+Kok~5fVjY;1Q17f6amr&9##OQG7B#?nzXIwwheWiM!)a|
zv^^L9r_m3B3^W^?E?~yI`Qf!(wU9Ow3)Pu3odJ?DRk8qag@-*r>fw<Cs5na}c*FqZ
zQGocY;h|bc1euMlD?f(SIJ{}wx6#)Bku_tMRE4>?ty;X?M?5GeGW6VdRS@X}kb<Ku
z0mv_5Cuex10PVp5VP~2vJdFUAss@N9JOrR}3=r-$Dgl(LLDKmm&xlRP;oUdGpv`Uk
z{kxFq%pA;@)QmYeIDiM<wSAyZAMeCn*JQUxH0b(34Cah8Knm~>fC>Ph0tSHC!=o7>
zcJP1%;)e#h-i!cg0S|z}2#|Ws1LjKvukP!X{cY{zF$mh+!rtD7tND^MV;y)-ur`c4
zFKkU>&&+tOw*1y*YwVu5X8==z0UVItNs(wyMIoAiwTI+0%@V;VuNP&ZIh92y2&-(k
zMi0;exUrZe67@)CmgjR)(0ttRFy~A9c}gUif~+K|%mVQAO^-$M_Lq|w4!my^J_<}z
zA?b<|Lu5*2A)0rv67|lAMLqF*s7KWjivr<Q5GM@44_o(zvvQ!VJ9s;G)x~_t^~UUY
zBr5IPZ`zbmv-cK1HpaH!5_$h%1)5P&Kr|1)v;9~NT2sB3yw@xR%!1Fi{_p{`<HR8}
z8&~#BeBPOrs-y_bs!}Dz=+o*wX!ogOXz{@+@}9^ZMJXZv4YQOI%>(f4{^A5$f4qjg
zmxyepp;Y!W2-Y|f2|IZNMV_rib8+3xIZ#3BP@Ul4G|a88M6V}A)%k~vnh0%eYirwy
zYwt@rDs5q5-M(vANBrvba>DMCi52-;ZT+q5*4X2*N*<e^PBag|^8s!UFk>nu4<wyY
z#)9B;eT*Ay&7pnRlnL<r3`QAO03uM9!bW)y1GfHXHF_6ADgG=IjVqFuS5*l%R}ulu
z1Mqx=>*&?uY&0IEM1_>fN{*6zdU!wDfFIgPxZWn<9+^rhhu0i5u{>8eHa7)5yJ`s}
z&wJ6fw${~r$vM*&uCCxryLOp0cDzs0u6k{{^!ivQ8f-O~8dg3KgU_SbRiA)C08Qiv
zzKj+=kD{M5JWJLGV(;@P`Z<k0P`1`SkD`DN1e(Ynn>kfJkBl^sz+u>GVaJz7K;+rg
z!o@{r=UEY;R%De<dwZB%#&h4ax{x?tEH|Ok*GlzZuc6V^0>lCy0#G3URLBevOL)`*
zqy;>(0F74#5KDMKCSwZ$ri&3ES$H7!lg1Z%!6v&4XYGNurEM%p9@7gz5@*`VqGLzU
zLT<J%1&{WQ+j*a@7SiWl8FR4B1{0(UJYs+{nE}!Q9tl8murDJAke2Ys0aTK$6FdNg
zN`T}wPowtPu;M|dA%iB7k#}+I$4Xb{S(O%QZ|&N}1xW3_=F=p&VK!Pw-@EmI{Z@(-
zX#o#_!U&L-@Gt_z0Uj|xeBvN00i-27Dgjc2N1}Zqw;-oE)1l|Zvv#p_CArUfa-P*i
zrrp|kc|GG9x%p3${-_~3ZHWEC<l;nH!ovs<2Y3LO;aN$I0C9u|K!I+#5<nc_VFXB7
z^T6jKUP?4_TfOAEwVT^es(tMB(REkbr6*cQOsaRcg)>+15_Xc^?TikPBx22wj=^SZ
zs}Z0G&hW4Wh|SoR5<nc`kpl>uCl&CJhu&k`der5ui5sCU4Xu6TeIXd)x3=z%U;RBc
ztv*7s+cIP7jSY}0h}ev6NdZcX;0%u}Krp$FD?Ca7=>U&BKrt%d;n#!acKLYTY21bZ
zv@JUu!uL_#BXe+Yf|!Brh+$)}DSJRnnTjC}Ljoio_TWn)VmmNO0IF00kQSrrFee?R
z7Bc~)&8WJ1fTFY-RVM%)WCn<r$`|?IYq_mm{;<Q40pK`$8LH={P76VdpkrI7&K~&H
z&-tTyn}BFl1FZ%Jh-xC976YRbi!w=+SqUI5Q!-Qmq-{zD0cd|22@dK4k6M5ry(5h;
z^4Pi#Ilet*C$t@H!;Z8~TUr?5kZ2*Yj*vy$wy*?#54W{T55SszOuaH=03=C|m4`_6
z!05!HEM<T=<nu5A#3i4H86fT9fjVFW2p+Js7@=2mIC5Sz=P0xpZ96;KmPXM&N)EL}
zyLO=dyj#1w40hkP_6oUC1&E9VkUT`{N7a=8;+PDk2oTp~Fc=J#2Z$Ryi~v!1-~o4C
z@$uEx-MT$T@_pL1b2f(KtjVG7Br#=9uf00mYj>DP(H}A<K#dTok1)#tq(dg5EI_(s
z5;g*qqZ2&J0P)3s5B}SI<0_Hus2AoD)8*L7lg#%rg5#{ol)<1|mo^R^d7u_u7tGq~
z6}^?rY?MT)jSY|(BECFC3XZZApri<$G6`7$#A0kqBS0+SQ3MFX(}3Y=aNn{P`#o>&
zhBl&Y)kS8&w1q_z9gU_85|G-ofg9`TvUE|dcg!}aDQgOV<TMe3Xa<Pgz$gI-_nu%~
z9$hjC2|x$RnE}!Q9yx&EA;PB1bI0cpZ7zkjp>5Q)DNUCuQ)WYLDoh0la$WgJ4Rotv
zl73SGB!!5ft4;u_0)Tewlu1aIlv4$e7NhEr2*wDImhcdODhmiee(7;S&)u7m^TJuj
zaGUfdZDVciLfWbcO&60EYDq)jov~-{4mK7`pYEYc&w@icvLv$}mP~63fQaCyo2Ss*
zQVo!HDH$pO(lRB35g-omfawMe^nP_^y$^poa`|Z9SFjm3X%lhVbe0*eXklR@hpazj
z*S1q9FNjjxxVQ}d->$7c!mNdD=TFtot*O#!`|xS|OHuf_lO(fI+uy#9pUO$a*#sOA
z$Rylwv>Hv8d{!)xY^h8tQ6spaLFVi$MVo35lV#;3pFwgMqm(I19?9JSfizUeB!pxz
zcn=V0Ex3&Ey6Qwt{o0znXyk^^eztLT9tLee+r-Wk{2opI5JWWXJ32UktqpML9XRs6
z#MobUojQtE)E=tWWgF@baOJ{w)?sH(aQZ!{b=ZagG!MYD6E_&Z4eyD-|6~MGQ5j`#
z30VOQ<kOmcBo%dW^<L>`vMH%@f}La~!CD6da+o0vbz|)znwna{EC<yKXr8tBUKYme
z{>?cc;6-Qy+!o+g*weOYZHn;7XD^B!GzUq~%s$X><m=H9KfnfX{+S6vuG>)e$w?x<
z)Z{%y9JjKLLjf7F$S-*}(L4YTB*B9jlapkLL@J3tktnH*$W0;n%wWo3O+r{wMM+Xs
z312FZ01r9LkcJA*uaczmNv}$!;O~IX;}g9Njo7gI5`{<7<8q*FVrk0oC=PXy=|H#u
zKz|QgXXl|oYge50=7$r<n#&AV&OQ)B7avSiqYuPAlMujpAABI(8`C9|uqW|>DoC!A
zwmuJZ)k$wFA`CfyIQN20w{F8JJU+C?)xnrU75an-ynV+u_V&K`HPF)1vY*SRA5?qo
z4wJ-*MB1#|r!Rm&z+V6}B?l0Pe4bzc2%Dl|*~vO(62cT4m?6OkkScgmqa{JY29NC<
zP`3p$kKj5U0CjC6u5(A)29~DgG_&oQS<wPGwXv~*0`<TJ?9=VTIeDHtHbPE{SR1i~
zNS^?KV~za<@qQCJWD>$!%!~kOnUbLrAa(Fytpgg!eRC*soc&G_uG_vu^N8!(Nuj&`
z#K5BpB1am;3cv;J?KETBHutTeLYRx~!*UT%eFH@HlYnR~Xd#ZtV2l89$md}MNCP~)
z#NEhk{c@q>)Yl@QPDyT$xQ-p4ba<E`>Oh=17y<6kArSxF%WmxdX1ad1<adZ#)2v3d
zCe0uKVdokW%K>CA`8-MhaZCnN0!T$BAvIYd$Ypk2y6B4Si@|dVJW!`?+j>!lxq~SM
z3ias|wWr-lH!C{=QINH>!!YMh<{ktaPS&W&jIB2|K;l(L<RM}^Fe(R-4w-~<0I5tv
z<=2Du0h5LOokMNy?Sr8Xt!!<3lALC7-L`)ceIB-&$dbk)U?8tMhNuUO&wyXl_1!63
z+&8YgM-tP(!On<L(nf{^NERY(M%ASN<s|ErNvIMa@&AdV?8V=Py02bxuj`wWwnLpk
z-O&fJJFU}p%@H1^U?W6BVf8a-Y_okW+P4n^HQaeXpI2Qzo_`FIy-7ujeIqGIh6YG7
z?BSElepH<RbfBC8Anj5zqyUxY%9yKY5lp?|;p>3bab7U{MCX3JClZr|>x|SL)S<X8
zt!dr1v}opsY(`^8>hO73*>(Um3?TLG`qsoXZfidM1G@Xto|+)Gp=VaS;Q^9D6v=9A
zD>#=4Ano&cVAicz1Lcqje*g}E<hg4T>c0HrKfAs*ZXNAq1<|_lpmo==DKZL81tN)a
z-G$7_Zqvrk!pe$hqqYtX!@JFyp6<S3<sC@FBpN6up?==sJ)((~1%?Gk5h67Mqsjnr
zO9q1_R`7X56Uy`I!IXMMZ9#5pmfmrkK2-p|4$(TeZm{^1x)Rr!#94l-;9>HMtm!DR
zlY%zt)46}pc&GU@O5HcDdK3`1gJ_^hRfR&SkCYK(7=R>uMx>}8RhI`yOL*WM)W?DK
zd0>f^F<D8-ZNu_MPIKNXx9Qz;0)y6ZqIG56-2EMGwNV=yyRfI)$k)oYeJ|+lLnYb{
z9sHK-!uKm*kB_?lN=5?hvBfn=hefmmiS5R;pbdQJzFSOj9*qF021jhB()l7DjG<wT
z^IFWV`vaFOs<IvO%rpv4FH#3$U&oc!jSa1<R!=)P>a<ZOYTw;JWm|S`4?(itP^n%+
zpPe}1qXp@1pDn%u(QN2))5aE2VFi;`I~x;-n1h4>5DbD2!_Kr?c<^^IC=K{kB<@x5
zk$1vQ<gtA{>b~leE3UKtFT;Jvph*;*-lWW8bLCF!qLW$cXy+TXr@ad&Qi)bp0anoS
zpc={A)@G=~8<RG;E}nnd{qt4#y&^Y@cjpuDFf9Vj1d07*<#h(2wB8y!J%%yP6P%Z-
z0w6IkSVXutB_z<0?8sdR20h(2thf&|L%Y28>PB3aVN#6)WyEEr;5gAbX#X_(I$X6;
zYpSX{&_t+i#6PmJ^0%_Jm6*0ZSo(JyIABWG_ol_VE?acLZPV(9(0h|=CK;f}D(n=h
zH}=5R*n3cbAWn;2{P<EhBpT^C&_LLP4b4t&z};;T{!9)SvVeO0PSTrl+qm+f>ym{R
zy1w&fY{!B9--3Im@f>2Rti&3}gO=5fmc5Nk_uLGR9zYUnB;q6423g?ViKSTj!bo(N
z;35C#KI82u-qJ<K{Wq=ot7pV!)H{9`S;Vq`P7;EBKtX04suX>4{Gf19eyVUlUW%|^
zZnCIfP7;y+_-`g5|IbPi^%ca4`U?_-{WBAUA;nq3Pmb&tjVjJW{j(BKKdjOErbeS)
zu{%)Dotu!~`sIJ|mMlEx{_fPMF3&yt4!*}{=)Lxad&l5N;yDtHBLSza865qC)RtDR
zEzNTQ$I=Twxjl$hva*tBC1{|2c0A9QyeEzMpx1&~aRXK^t{J*{-KFPtZ@v9|LL_>(
zFq5pc7*d#lFa&5!Sq>Ugk%wTXYPEvD6H=0eMi-=`m$Q@5<h*n=uP7UhP3EKFyTWci
zyK(iU{>wh937R(}&TIUbMRpz@FH=p^muMS&k8rPW&v5Uw3|(oN%o@i?AX(9{eMj0e
z=|;zbye%X!HEJd)P*|Sr9279#aqQ@Y0n?{$9=Lcxs@J0TE4-I}RLfhl^rG*&<(K_F
zUwy@Y^V+`y!q?sCv2DYDAOYd)Z}@Ln_qX4s&#w5cTltGm=(3C6OBdC;FPKx|J8x!c
z@AsyKx#Dxexm&kxJ(ymrFTJ)z(*WQ-$UTbhwHv+nPP8mmW^jxPQY+dck!Yn(GBCl|
zkS7UDcIeQPG+ujYNI(&)epEv|1C8I--hO0z57$xcyu3ne{CQ(R;BWX0{zm~B2<B4e
z_l>aNYrwV0HSx8{J;1$)?@1OKiJ7vbWif-(1RyDDC0Urd(C)7@ec}NqAJW4iP}%mf
zbm-iNbeE}?u#}fR3L^cV^!xa?mYqBIAtni6fpfz(#K5@GYdg|=k%dN4+nB*IQJC7%
zz*}ePoH|fP)rD#VciPxq#I!);i-%JJsPv!`K;iJCfOym2c+zupr{{E{*RZ44w4wK4
zhUN){sTFNBOX{3j)0j#J>OV=q>OxJ619fN}DGajWNdM<RzuQFyl#cYA?ddhz&}+6<
zFi&P^o^YUKp^|`QMH{>=ZG3C0HJC*5|F-luRx+T-!eR#IDS=86u9ga*$qLhV6wmY2
a9sdtN6eHRrdyqB&0000<MNUMnLSTYHIB(_v

literal 0
HcmV?d00001

diff --git a/apolloschurchapp/android/app/src/main/res/mipmap-xxhdpi/ic_launcher_round.webp b/apolloschurchapp/android/app/src/main/res/mipmap-xxhdpi/ic_launcher_round.webp
deleted file mode 100644
index 11057db4ed3eaf8b8d688659f3f54e90a3dfa04d..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 4034
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

diff --git a/apolloschurchapp/android/app/src/main/res/mipmap-xxhdpi/splash_icon.png b/apolloschurchapp/android/app/src/main/res/mipmap-xxhdpi/splash_icon.png
new file mode 100644
index 0000000000000000000000000000000000000000..74c040f7252c2d5230174c667841fd7e572a7f9f
GIT binary patch
literal 1281
zcmeAS@N?(olHy`uVBq!ia0y~yV3Y!4O%7(DNOiMpH<029@Ck8sFYx*K<0}yT`2MA9
zL+WmzICDvmUogYT)VtGc`4|{j7J9lkhE&{obK5Y_*^q}NaPqGIbD5XiKO}KDUha)T
z?H5fuMc=r$P2c7i|9GDIre?`hy|WL`p1wZke2D+Xwac$u3C?+~x%I2a>g6}C1!uj|
z4D;Xk_R^ANi#xvx_T^4jGp%h&{wi|2%FEaG=qt@_U#HBf>dLiUx@}$(STq+b8awMs
ziOEL0Ltvf#1#9LdMf<N@xje%5=(c%5!TuY;T9(aAy1n#e#=Z6Z1v$G-R=&&tnV{#J
z^~>ECr-s;BH_BiJZ-W^;u{vtE#)rzsVp|!G?sDbbS+QN?Q(<19w}(PtntzUo`&-T~
zqw1n=r|Ij&w*ENW7kVX$kJ+WtHZd^!>lf=qMLQKGcC2{(^@wYvZDHVIAYBQhqx@s0
zToV?53gl)2xpw|pf!!hzu7&=2fiJSREZU*Ibp_-1IquA57oK-^U#fbvIC8bR-m41R
zzvT|vpO%Q3K5+&qTC4Hy<>N(euRFUxRXtj?W!?^rPW8<zT(7SdJ!*SbpX*58b)Bq>
z;u)?V-6OQSsyB5#nkOfq`hf*(rS^v<vS&ZcJ%5%l)Ar-VH9*ItewbpdvR+;9)T_?!
zS=H0p<YQE_ZtjW(Iw~sg&g3wW?<r!YFPyeQ>^-T~RecF)Ajlc3HQssZzKUkQ=Nz?G
zUC--*=Jxxw9fhZDJb_wM9N*V>@V}_tt<tF8z2fJqNd8QaJAu}C0i6x>*`hr_E=U`~
z7c1s}RuMjGJJa>7a=Oim-_xH>;8uLAUt!c;^`fPE|BBSbhTT%nUas6K3DkB9sBIH4
zd_ZiV&E)~BfkDb?QyV_zps;x9X7$Y)6-K~d^3>tFH#1Bme%5i<wPhwTQw{{@ysPOD
zw-WE3CCyhF0E?C|{~8kz`|e9mp#MMt1`Xzu+FANhj}8k}be)Y|^dfN$(AOJRG+ti<
z4Cq+ZR~f)41lbFUN;m&M>;6RpV=D{OpDVO&DqY|90zKTg{7Rfc*SodAP<<k5`r$jb
zi|qr>vIyl5Q)V5$^}MeBgNi_D_wqZ9nl?{+-|e^lw>6)Axgc|(fXnyte~#7+!9Ok-
zbkAPJ!m_xoS+7bV>twKg)*<2iTk@YCo-Mt*W_jEdaoe|DtL9s4YrTz1cl|mq4T!^l
zxXd;7w;hP%2E=i)zBj{d&UU@BT?@p2#RDZju-Mwnx<2pM>18<wE;9#4&#Maj{>y)B
zXyD%Ev4LM*AST8BUJ(ft0AY{>jBOhDXTjf~GoK6B?>=<7s_M`pbsztTFD^$fCdl!M
z=_kID;eDps<LZCqCFf;fG26i95b3$|3~UoG3YS(LdX%xkLh8)ogNxKbO5J&}srk}!
z^kTsCiwSXuBA~{Fd}(>f**$N?W#MJZ?Oo>n)ti5w-(lDNH(C?cZUvTI44$rjF6*2U
FngCdzb!Pwo

literal 0
HcmV?d00001

diff --git a/apolloschurchapp/android/app/src/main/res/mipmap-xxxhdpi/bootsplash_logo.png b/apolloschurchapp/android/app/src/main/res/mipmap-xxxhdpi/bootsplash_logo.png
deleted file mode 100644
index d13b1b28b0fc319bfb459c4a9736406a025b0901..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 17960
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
V1KEJyB|-oI002ovPDHLkV1lI(&C~z@

diff --git a/apolloschurchapp/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.png b/apolloschurchapp/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.png
new file mode 100644
index 0000000000000000000000000000000000000000..4c19a13c239cb67b8a2134ddd5f325db1d2d5bee
GIT binary patch
literal 15523
zcmZu&byQSev_3Py&@gnDfPjP`DLFJqiULXtibx~fLnvK>bPOP+(%nO&(%r2fA>H-(
zz4z~1>*iYL?tRWZ_k8=?-?=ADTT_`3j}{LAK&YyspmTRd|F`47?v6Thw%7njTB|C^
zKKGc}$-p)u@1g1$=G5ziQhGf`pecnFHQK@{)H)R`NQF;K%92o17K-93yUfN21$b29
zQwz1oFs@r6GO|&!sP_4*_5J}y@1EmX38MLHp9O5Oe<w9pErPqvDV{c#_ifw%-z|Ug
zqc&M38l7*Mk}`-qe-0BF?VcKp^F_A=YfP!XTw|W`OJYsCtjziC-EkT0JJ_|j{Oskl
zI#Pa$wn}kQVeR@JYuc$g?iTZt=o)8@a1vLo=<UCmq=!w0Pdd37x#EHp|HiSRm)t!F
zZ?Ja*PTSuuRhAKJEWy19Uak7CR{i_AFv2ZR9_9Vyd&FC%u`&V0>0Nc6{^^wzO4l(d
z;mtZ_YZu`gPyE@_DZic*_^gGkxh<(}XliiFNpj1&`$dYO3scX$PHr^OPt}D-`w9aR
z4}a$o1nmaz>bV)|i2j5($CXJ<=V0%{^_5JXJ2~-Q=5u(R41}kRaj^33P50Hg*ot1f
z?w;RDqu}t{QQ%88FhO3t>0-Sy@ck7!K1c53XC+HJeY@B0BH+W}BTA1!ueRG49Clr?
z+R!2Jlc`n)zZ?XWaZO0BnqvRN#k{$*;dYA4UO&o_-b>h3>@8fgSjOUsv0wVwlxy0h
z{E1|}P_3K!kMbGZt_qQIF~jd+Km4P8D0dwO{+jQ1;}@_Weti;`V}a_?BkaNJA?PXD
zNGH$uRwng<4o9{nk4gW<l$VEJH)<K{ui-~Z%XC`3<QsgE=Yx17)*%#MCS$YCi_90>
z3E-`-*MB=(J%0*&SA1UclA>pLfP4H?eSsQV$G$t!uXTEio7TY9E35&?0M-ERfX4he
z{_Hb&AE`T%j8hIZEp@yBVycpvW2!bHrfxbuu6>_i<^9@?ak)9gHU*#bS~}$sGY*Fi
z=%P&i3aH%N`b;I~s8{&6uGo$>-`ukQ<8ri(6aH6p_F`Fhdi6HuacwfQn10HVL7Om1
z4aZpjatkbgjp$L5Mceab#G#C)Hr{<VwXm<QT4CfC9V_7qU;FSQZ2jJF863B9L4z7j
zx6Fqs(KkH|gK~_Uiw~XDqQ6UEPdi@{52U0^w7?FU<(Nt5ayi~wj0UAo5G|gu{CoG*
z=>^W|TJX~?B3@2buj0;kfuNTf4c3*Au~O^aj=W2$j^4okeCxh#lwexN@eam-u4dNz
zN2NIuIM4566{T&^k%4ftShcPk#=im-zXm>QWqH^0>A@?MqlDZCZ@8Wi*@tvhn5p<}
zRwFm@gz|WZp91S5Z{}tB^e9|FBg(~Ik+?&_53J6ye_QQOSJ*846~H%s#LD}|O9v9H
z1fLrrgoPo_&bs}eqEr}2en3iqAcP^>YsKiez$5-6m6(#3ZZ$@M5Ck=_Vv`QA>1A*v
z3w-nJ_;5Nc(0_%`kG91#sotIlhO!*5#|yg+Gx{V;0ty`*=Y9=jCh$l*=fE(~t}%R#
zc}iNpO)OZX`P=leQY^?^<?O>DF1w%FJh>Dkp}-o5Ig|2!6^E>|W|zc~W7gF;MtxX7
zV~UjQNsUC$EYXpN?~o{83D2c*0~7;Tm~%FRTAnnt3ln{?DcLZ=NsBY|JxwUA-6K3V
zP&#|9t#a}Q4{Sg{6v-OmjJBkCh>m)8vLNm4lStMUT$)FZeJG05A)px&o3H)5oAl9=
z31@?HyCriHcCDnt628BFN+T;U69Wl#itfvqIDBydMvOJO0Zl?go$cfG5>TK75CMj3
zakLaH3=&J0e}Xmqlav$S0>E@_Yo_V~3SiiXrw)$&!XhrHCDQ%P1BHPusuKr0LthAB
zg)mDrLy>2*yevMMOQe6fZ|)%PEb!lC^*9yaX9UMy7-v!fSICssTR|wML0Ic2BhKAq
z3<f8&&m2j=Wuf3c5jcWz#Z~iQ+V8WR|GR`1W8w%+L5t3e<K-07iwLS;x7B5e>I1X~
z7^_!M&;6Z9?br3#HU_&kfJ~%botXQkC1v<}ZZxN5q-T)|Sb2cW3WYUBbDZ`TH{!*^
zrmAeRM+(QI>D+?}guZ+dH*X)@^!O|oL69&Avbtw2^M3HP<bBo&s(;n3vG;|)af^JY
zb^jTD1^vo>(+2kV{O$^3BN1RLfrC8nwz7=VhBR%>!;7WR<~;34B_j3A{>^@e@H+Q!
zL=UNr<o<`1S(J7ArZdIHafRf2=ko;_o?ugt3(WKA1sdfzmVsA1l+xS&a;hSb=-ulM
zr&2M)=)_De*7c6lo92;R8x+JqSNFuxQD=<2?o?|BNppOj)+eSbM%3B5JEKT`{9`<|
ztL`|(>1(JvKAQLKT0b}EMn|QUWtY>!>8-t@fVj_&`~gGd{_aPy5W>0u<h4VK_6JK^
zvs=fxSE78mtdkFE*61zu$g|PJgA+@akx<Pn4>5L$zrsU^rBO=i$`#Xd*>kh)lPf}A
znNXSEl`+HlhXtylgS9(#N02A=zVV?#OF?)Gr>(HszVa+1*2VG@qYttJuXaBlzP`Pb
zX)ueu?s&}R>xI#^*r4gR?tMFi!_eeKlIM5g)Nk)Y^h=ZCR**xY>$E5knctRrq!zw?
zX{2|hwR9LXTY1)pTlKg7U4_ej{dcj2{!+1sZ6<@9^?mn)=37V)DIAvS(}S`IgFO!6
zn({?nYw`Z-@jvt@!q|5z?TI3(dx^1szSn%azAw<KYl0YfrK74z*fb$3aAi_@J!^`o
zA-T_`<Hj8P=e*UdQfi4QkU#q~GQvC*=->p>N#fk^kt|=MejKtacAs@Rdku#zT>9$s
z=m7ek)`=O7hO2n+2Uj$QUs&2EIq<NC#L6wvdM@RbY)u-<q>ycF{(L9Y#^IyxXA%R@
z&j`VAprIV~d!pH-7~zA+bjwVn3kOB3;rlg{nr&wHV12N}g^i>Upls~=z`VX>9HQ#=
zTu&luVb@_Lkz63&&^_M!6(-2^0?GCAX9XKp{O={pd|AlIMGriX6s_Jy8_q9|{5jLc
zxd1aj_ucE7Vcti#$r!s~w~W=XpaLQ}#mX`apR7^n9-d<XOi;IlJ4fmy32!)Um=AZC
zc%mFZm$5i_<}kGzgQH)YtOyVQ!3cf2O|s_Vs7wz*X=+7T<Pw`&t;CT_E2b<yyz_#3
z&kMQvOX~`MyhE5S3)2+#G|0!Tm)1}iZgV?hYZ-sdl?#vnDW}iLMPL7M`@HSdJRa2u
z8D^@Nr1qqSu&Y|Q%7hC;>3?O+adJYr*L;{c)x@REewM@vZN<Yc8q@;}AOHf40cz0R
zF-j7deqx*QZssM+=7pFt(`H~}>0njS3iE$88KHPWAkWt((OUMherUnPm?i&8@!9E@
zUW^$%CpdruZR0ohzUq-XQ$KEIB8Sjgs1+wKSUH&Y;=ee%E&O$X18{&979d~K2uJW`
zd*8awHCXb;Q>4z$B|sPNv+Zd__f6&@KmS+L`z3H1x+x|Xs7-N-iw|1C=QiJdU)f~z
z{vO4hpP`0MyqmwIHN=l?jSq>OKG6CEC#O`*blP`?>)CUWj5j1cB>%6N7;`kfZ1iQV
zam~SDB?{uyp^=vF_u|=8xn3S)L;wF8ZRZV{bezM-EH;MC91<OgIt)!LiaWkCoV)P<
zqIIp=0@+iKx^H7?`cqZz;cJfA^+h~jMTB1Y`e-bxgoH7;^wnaYSmCt;9*B*E?_f#S
zq>JQZ{KcZZ$IWJUy?SJGeGUWm6PeuO8-K2|hD~p;Ls~9Y-4lE+?|bF)XaNKUNX(K7
zBQk0Z{n>hrH-CA`bTr$6z0n@Cn9EL$XZ3=X7NopjcI<yYgc=r<3#dAFPZh}hz0|aJ
zsQm+y*@0jDolk^Eh7c>=;z<(X7-oEmK}BId=PxX*!b7Q6oL@ufd%eEPc`_la(}WkT
zKe?-YJWn^6b$^{dhdJZ)I!Kn6c}iw%o5mLDyvM7qJZ<XpL}9Sm&&>bkG<FPs<n68F
z{JL&ptTS>G?zLU;M|W;Wis|A;SuY3{_X53`+>9g^B%O4b{;^t$^;{oKHbo*CY%u91
zp#2d8Pg=I0&UX{qwr=y=o_^BLdk=KYH$=Z8+k|p8V5`<Tp!}I+biA%_Jdbd8ntU{O
z8xW2}jePoBeogC|B*p!|ejyx!8H1;DG<+jP#Ep_p9sZcU|89ln##<Km$-RL#fjc<d
zPP+=vh{gD1|IZJo3#0qEIR!w@Utc~P(b;lt3MVk)aco|q&;R`Uu*ILB)3BHPM7(Ru
z&r~KZ#9X@mtIpMTb{{YK_1%C5r6Do&W5l_lZ#0dND6TgV>ph~3b^{^NnL4m_+4zx(
zeoTt@f<$DmsB1}o%R1Hx`ToPuBl+P6cb-?uF{1!z-2WvdR4+vJ*SYTic5@gwnzu%e
zD!HF^X=$ha^#1hi*@~^nDL!HQ;MC&e+6=onaJgm-J-+|>PpmU=SIe?EQE5vJiqziw
z*K=Z%bWZz_we!qiFqE`I?#$yozNxIE7Ei;<t#9_Q2Il2<?PV|aWxSR*{7TQ0<pSgK
zG}WYbXUgAUi8)!qxPg+ge+t`9g?TiOkO8}_rFH8j>csv>++r*?)0bozFpF&oLh94u
z-2c2L`5B<slPr=pZ-V@VTTJ#A^qrrn!@ws}4IKIC%Rs-fjKdm<A2|KOW=f&Zy+|9|
zUZZ!L@%edoOvf=Vyrm_GaeTtc=UM6P0htq*Wad49{($UWxoo{1I}?|s<Wz~7SY(z$
z3b9{ESIm-^(N?`HGfU2wZcA<CP)yjk98;2y!a$=nrbSJyeJt9fuXm_?<VT|LKxmn%
zCB1+~5BnL^OixkZLNOxoR^XrRsjmwpOFyy*g3yn`Vl9|Y<1QC53{b)#6p)gexnNot
zC-&dZsye1hqXlLd(d;>arP7l>87|f)vxaT*9(!Q`2xBMZ&^JVj-|1)Tg!6OW=lk=w
zLwVlr!*<(l*L$a?ox3+%!~UIj3Ej@KD;W>1E_c)1szDi93BC;0K?drOQ>@$yi|DtT
zSir}!Yx>znf&b0KS;Lk7VKPDF@e>(qQr0%SNcGQd(p9StjqJ`QSW&c{ggF?5{d22w
zlkX%JTUq`<A(+fxdJGVbt2a`g-t7;K>;(3WSH+)WHl%qlF)iNG_?}K?ZM3cS7#u5v
zZ!apx4Apv=PWsn}eD%MI#=KA)OlNy0)l@~D^1;NC5k@|OPW3wt>WNYDN+8~+gM%E!
z$<XWGf6e2KDqfkVX2}gQZWyqt1C{7POrY@N0=xBNCc)`@%}4J%t6f6?)b;Wsr6(?>
z`Olr0;eytiK<ln*uL$F3L79X|WSkvb7>&~O*ps%KV?2vq+DhuRh*!6Ilzu>A;iMe9
zI?zug9<Hzx`fZ?quCqY~BbP{OJ&v~P+oi?EG^%v%e(va^f9_`qOsRl-?u9axGqb-H
z3*og#OBHDJ)8aUV(q8Mo8{4)1*8wBtzl44(FmC1|%9#B;V*c>nT9CI_o)O}KF_I_U
z_Cswu{<D0UQo-(`p+tVdbm=s;BN$Lg%aOD%0sz2@8Y5(`QJ-J1+()9RjY6bp%Gah)
zqUX;d((B6!M-sYj8-xBlPl$CQ5jzq6c@T!5_g9*6d<><tZ7J($A2^z=D;4tsO14HX
zie-yYe4wxLjqlPznoTqhfF;&bhwWoPw)X*h(a6x9b8|IjXub8;x*|v4Qvcs|XuE^a
z@Xz(quIAVKlkU9<_+-Y!sQ20g6|#JdA{pkDvR8GoW7jlpj!D1DuBsg9xB-8J<7~*=
zVczXh8!~FT(c1NS#gP?BrU^+Ut}Fqvb9E2d$W7VuFOF+&W|#AR&To&{SUY^`WWQeu
zKHzmbC~J3704je5Z$(eS`Fl}Dm*)ja+}844r0=qPBTf1=`Hv}HS#O0kglsE5gq5Tb
zrjGmD!~04O_X8NwK1L=p_ISwTU3`me_Bj5B*K_l`nETK6Ll&Fl0@szw*mUf~tGtg`
zjt(;ImS2D5w9+r7$#Gest4UnN7yJbQwFw(D-9!L0MB20HwO*mfbT&sndM6+;tDj!j
z8hm06rCXz63ik;-)wAfYVV`+J>)3pCYgw{eOt#E?U<lAs$3FltNz>CqBwkAugSl>5
zX?G=Ci(Lo+r3suuJezyQyDvw*<1b{rx*&ZaY2HlJ>k{Qc%IZeU43pQXw4mh!4I5>l
zZ@4$uxaPY#!*IhL4Hctn#!n#S+SiPcZP_PTd5fXf1exhFi5zf3kl`UcW2RUk)F2oF
z_og<JtrvhG$KN_6QCVk@`hMEU&GPS@WY6MRdp8EmL~$^f89#fG9}^q326aLrKc;OY
z-oCvmNR%RDjUfdG&ur)f0sm9pi}-I^)w8*MW`XqIZ9WPhl?V|A>N`{03P<h#5FYsm
zwVYQO-5ANl!h(l;Wg8i^t~KQtKy5F)<su!^FL3GeL$ATx1HlUId;yH55aWh`OLr5I
z%E~Pjq3>iseQR;fa#{Uy;jeNlJ0Sle`~;ZYhLjkuy>a^!Z_nR~`$&F?NVuIE3HX;i
zD82snwlwPb`7yE)ZA_Ndmq5zuSO1{{1}(d9u4#!Fl_|eOuxKBwOfQ*tG`VjCV$-WF
zxi0c&+w}Z)rqz{%f46@`ADP<WyL@PZbYsSaoYGL9de9)$>dGm#x)+zpT+gyfDi;_P
zR{#Ta`Mzd=putKO@5lQJO*aNy(i?}Ltwy^Z;69f|eqi#UCI1$vL!+(#mi?dK`OL$!
z3jQnx$_$+Li2<__CL@Wuk4^J7-!n3j2I4N8e#=qpir+iEQcrn3`<r-Z_N8j!Z9dWy
z^{SELrnrhQIPHudRMBTpHkxn#fL86dzr&^XL1R<ExPEpjzvA%>B4yNOd<w5BfnSBJ
zI2f<*`0eRYt7!yOH0wW9v0Q(fBfD#dOv&cO-hd*f3!n0u>1BBLEni<(tdRWE>m0I^
zt(^*Td+S3}$5rOzXy=MW>%#MN_qy%5St!>HrGZ~Fq1WKw-&kv@2TrCcPCPzY%2aO-
zN?7@+$4?&qA|uv{QH<Ww?~F~!j!dk^MB>uV)O9haZpG7Jx2f%D)7J@oWTxJ<l(RR4
z^UFAYFv~btY8q1_!SsH`tHIM>#E_YSq_6qT1tomOD?02(1otT{Hk8{?g(944>h4f%
zOJ8tzj<oYvWt;H0yIq-61!8!QVTEK`wbyB@!TCkU&PM2-;7mTEzhB&?%tejhG8Q;W
zetQbQZ;9Z@m{%jYj&^kTpye@FuYlFHMrDni1R1Z*XS_GS>ecV{x2uWde&6oAP)*({
zFkW0Q%gdI*9@W)oKO65DgP<3F_BIKvRXLAR?Z61&0g2TR6mEZ7O<ATuKOx4Rh6Mm$
zg?!FNi37C>ZK?dP7zukdg?s_tNZeuOsh^e1Tmdlz5rIg?LcK|%aQ1FsSDv#W0EnHd
z9<BX8O$!>M)p;gAL_R~Z5cojTdwy+qDsd6R01Vtxmq&FhfPz{wxmB$${zW~z@{Ro_
zK#y5^KqIp!#@or>GD`c+aZ(PV1=`Eo1?a55p6a*WepFgxvmp!^2518YEU-;{F}fLr
zD~)=S0m=+px3TUN8-El}Xb}{2ET*_i3-|WlY@V7vr6#&cOr*+oS9?GF?@)K6op>>o
z4af0@%KwaLr`{3P&)474<3rDMsd!IM-bepWfhfuMmJt}#0%PgDSx*q(s0m%ZFgWTj
zwwvH%2!(i9{RHX~FVUB5qHvF{+ZF}+(bZVPG1)a*Ph>KV;cYNK^aB@R#dS~&`^60V
zn2Z24Y{{djzK33}<I(Dm`aMG41dVhzNxJ$jhGA-GE>t@q%!v5k)u7jAXB_H{#4Ut2
z1}0j5$RXcTyfazqL9=^Qe%GL`G)=!lirv7AgVRf^=XyEM&kiOe_%JD!O?sXK&hrDo
zF}m9B68im!oGshuZluy2H#T$`XPZQu@zf;(nBCZB-cjQ&w*p@Tm_$pe^MTN3EauI)
zJG&G^H-4S|1OCd#@A6jO+IcAXG#5M-d9E!^YNmV7Z(=F^?8bfrYf&mLMnRd_22&Q}
z2*msbLsrI!XPeOK@|V?n>`kNC`8eSFmekELLr|!-wQRltxZnuRedup<7VflowJ+gC
z)F}P6lUSsh^B41?=~0*68YA6z63lKG`W$@{GV!cC2FCl0s<7yz6!3JWoBbUDTgpg%
z4VNUk%xblMy7PjLF2We*3XY<P<wZ46=!s&}f7yQ2O1djlicE4A&N>7K*N(*9Yx!_M
zjU$&JXLiNxaTzoa&k@NSbzbLJTn$6bu6SPWYx)Zc1Li~Lqj($GuWsA#;zg85eH{yx
zz3IIOea3A4QFGmJCfn7N_d$8a77j+T^W}Sr%0XdVLFf&zJ$s^D5Vrc!iV&GXyb5*A
z6mG8d*6EDN7a;=dgVjYI--~4@Fe{{fcJ4B|;_Qg~&%6#?I(?X_$S4r<Ih?6Np29#{
z<O$v7$)L=T+TU^=kRWTe9l)Q|9MI}Q{dk-G5vvQ5k`IoL{M?!qVrYIgnGZuNVMGuI
z&JJ-?#bQ&&+yj5II1w`Mp1Mv`Q!r4b^E~Ig`S&7{pV4ds>Dw{=>=8iZS=M^I#EF!m
zXn%K_xXWwmm7R40LKXPo6ZzNZfN1-$S6RuVU=JlC|3#Xjo-%ebJvvC4n%IM)Q8NDh
zGXd)L;ay_J<Ryh_Y|I%|&vzTTbF}g|x5cYHDzVm)=HQL#qO8e&w$6TK_Xl(`IQx@#
zFT`$Zw`ym&BOWZRjp;ap4RdPSi8D;TR8qjdv;0fOPcXI2%x*hl@n5c%W7+wy*4tzk
z_Qzr(VoG9qVwM)teHh&|W<=8ZSC8P--ckt7NAGcroH1;s60N3ZXN?R2vsKx9DO#VA
z1n?rP(coEcE56>Mozc^mU*Uifnp=#+if>LD*O9MV#@wB1l``z|tlu(7PJqS6rm)0@
zJzP50{0Vpa`_?92oB;*i(?i225a6tZgT+9Dg?vTh)N4OKA~(c8{$8-ZKz=mb@$4<f
zWUSQXM(Pp_8zipHkFU_w2GUF}IjKvLwv(TNa^+a>IT9g8>;k11WIT+Y=%Z})`y#OJ
zK-~rlEy!T%0h!Qo+jjPF2RQz2Z^B;dbvYg2JS`+@D~OWH{2-EEs^BdnuJskh>CKeT
z1b;%8dU6QU%i@z?^6Q-{XESe^qRiw`ka+k!d-{c%&lXM}vCX^T=|?|;t6r?N*h-W4
z?o4Hy%BWqW<M%_#PWA)rb33@P-J5Y;14N9)qTEbM5`|tHqvjsk%Zw9OSrOQfR5<vn
z=bNkTJTD(hd^PLbg4boz931#ni!Pr}+cod??l}HNMx=u3?gwY8ppV5c!iphUBww?a
zEM;M{)sJ-jklzJ2k4wLj_e&Y`oODRfiK)|Mi9mLp1??$LRxz>+5=+md#5^8|49zjM
zon_Do@rhzZ4XAb}-m|bM<K=rO*I0J8$lEV(aX9KRIbtKGXY5r&5EVsq^ULp`ZXfl^
z#$mT+20Ap>H$Vg<;^Bo6A8cfhUQ>|wFk~j(`>1NgD3sTg)He1pWrUj9WZ8R(Wn5Rr
zhc&dXvv_m%Hrww<T;$-xw~S6Ky$>Ho9l_))NgdVUff%d&@4^$Pc=MDZdZ^xHL$KX^
z7W1{3UJ%>9v$W{Y3>vBvflE-soDj8{`>#F|8Z$EF%lN$NylORTn5JsI4mTMHWd*%-
z2sD(RO(H-&i8&Ge)5i12slI5VekYCZ)s8rv&_)194;vKY2m8DIC2{4<&xTM3HHxwT
zd(42n)gCJ$O4I|8sJq07#0U7Yk7PjPK&bMdy-5b)OdhSsBo^|IB_H43@&F@tpdJR0
z#~)=UJdP|=)O{0(rVZnjbTtwHV^}&kfLJQP@R6rda;K;O>9J9bnW$BgbzOZ8aO{D8
zPuJ%=Nqg~rdzk-IW0ZC5I%cc;ek5~=lDXl4?gMOQQ!KE5Aq$9qeGFM6jFP;Xy6)%N
zjg{q(E6fnF02P3L*tutbHRR-gyYK3g<o(a<1)Vl{;B_dblQ7Y&`(Gnpz`Uf3g^=uV
z2|%Vea-6iwm_Dw%lt_aN5@POHOW@p($IDAWo$zN{*}9o?9ip}iVV;_fM?LyjPQs)S
z4Sw~RXSz^$DZ1(dQks)4-=7#~2GbcyALf=qFeKOjh7uAIEEt6*>^y9H?GMtIs;ojG
zY~3*C>qD)(8jz}89w|xfb7L`^d>AG#%D-uq=qz}(o9kzzrx0LS<Ys7<2L1d4^W}-l
z1{gj<o{Ff`>BX90ykr*5oM+YmoTRWe+Cj6aq^xnWRymLmE>krCpoC9K%2LT0aK0Y<
zt@kUUrrj1WL9rmBB8B;WXqg-BztOiUZX-!`*a&-75+!WZ!R0OPiZz?w`Of4q#+(;m
z`${Ea6GnTCY3`V2R8w*}knf)*`<k{Ynud8ALG8ndAE9~XeyRVd-5CJ&FT;=*dY(`_
z8U3P4tW`A6<piP2(PoHM2;=2bONnn<xm9WUKitt?uRiaV>RA@(8k{Lp4VP;<<fw>+
z9O_z0_{3=H<qf$RO9oXqEV8{JUOwHS`nowCjsJFxc8+@-B%rc;NQKE-@56@xb>cVi
z5)&QGEB_&$)mu@)(Z8zuw#>Gc6C>^O-FUZEo;TO1@$>-xu%`v`tMS3V-8R1pb5<tB
z=MLq3k`$8WR?VMdF@<e~yrs0vR?PG475r1Cp8dd8@mrmZhwk)VpGVb~@9?O=2{Oty
z?uy*h7mmIWgi0nag82=d7s8-xVgC9;c`u8(;4PLQ_^aq|IPx|oo%kO@q%vRrW--55
z<+Vm8d8s_$VZuqPb$=hIuB|_OB<eFq+Ts84;p!;ih=(iz0<1jJ1>w&zP%&rAP2*5h
z$k{jqReFXCJhJ?-{x(2j5gH_zQ>;#Ec*@bUqF0u}XB09+U-K}+jQd>)k#AOkr6M8x
zHyhrfJ`99@Vzr_B@*p@`DxeJ#`jimavZ9ZV%v{mO0!%9$TY(f%_}BU~3R%QxmSdD1
z2Bp45R0C=8qtx-~+oULrzCMHMof!&H<~~>BhOu9t%ti7ERzy&MfeFI`yIK^$C)AW3
zNQRoy0G}{Z0U#b~iYF^Jc^xOlG#4#C=;O>}m0(@{S^B2chkhuBA^ur)c`E;iGC9@z
z7%fqif|WXh26-3;GTi8YpXUOSVWuR&C%jb}s5V4o;X~?V>XaR)8gBIQvmh3-xs)|E
z8CExUnh>Ngjb^6YLgG<<Z(rXuyN5eu%UgKk5K^^)O8^B0pY<_8)`~t3h*?R(2G&=5
zTz-7u7q{9tMl33u{X>K?>j`V4Zp4G4%h8vUG^ouv)P!AnMkAWurg1zX2{E)hFp5ex
ziBTDWLl+>ihx>1Um{+p<{v-zS?fx&Ioeu#9;aON_P4|J-J)gPF2-0?yt=+nHsn^1G
z2bM#YbR1hHRbR9Or49U3T&x=1c0%dKX4H<p+Z?sczQ&Bk7FF2|S$nrcw2y}jBp{{&
z5A(nVpWhB-Nb|}SkiP<Wx)`XSGa4W#0BF8KhP1Da3Z^Jb1uu`eTkL<Y9YL+)qhD69
z{ko2G4eIOTF_<-+M$)}*^<5>I!55MQv`3gt5ENVMAhhgEp@kG2k+qT|<5K~u`9G7x
z?eB%b2B#mq)&K}m$lwDv|MU~=Y(D2jO{j*Box$GUn=$90z6O^7F?7pn=P;{r4C8qa
zv1n*5N7uIvTn`8$>}(74>Oqk=E7){#pHUFd5XRJ5ObMhqODTa}=V0;+a(7JZR-4<3
zBTvsqRwLh?*ZF)JWsWOkEq7*XMQ!G3Rmkdh7ZbM#v1~?jt((e2y}u}Ky>1qa&Y7m@
zveIzH@?5Gexr79*?sbZGkVS;s1U<7D(%~7HjAmzj$aDYv_FGl5JX@LW8>w=HCDl6W
z%?rsr0)bErYJ5G1v&zjr{8=lW)ZYcstgZAuL}!0~8HAcgOm@nJ9cvOOtL@)Fpl2Dr
z8876Lt<|1eF88Jx#C*XyGI)C5z_o!Os!t=X<zL2^fVTI_)+T%IPZXlOdl}cteEz8p
z-5X}JitpKuS&<bGyvr!RtD=^LUXPE|QYKK0@!g{6c_j?*o4Ea98|l(Z=T-i1YV(Vh
z1L}DEv&!VPO7T|$-cGsn7_1*N4F~4re#<;Feiv*v68eAqt&0^hew#1KFk$Iu$;MF)
zW_O*Pp68uOI7*^^QZAkHie+bi{+)~d`kvhPToO;*886Ee;z>y0$Kj^4fG1pb@16%g
z+<)zJ1n1QO78g#$3yHj+(Smv`HW5y_-PP<A>{h2A1UXMG-c%hMvHLbF6t}G>KA)H#
z`AWL~>8JUT(iq7;zJr!Aj)AS+n{mRbA3aM+Gj}b#PhHdTM_Nkw<VenkAOG7E8!Ful
zM8njG;G2!!V>Qm330EC9waM$=slPfxR1vmr!vf~t_M?a%`@`&tdE}ipY-p#Q#zhLK
zd9eFC;PjIEAKLkRkO94{rTuNFqKbNUGtaNZRRbax9;|%2WbnGu!44#64RriY5u0O}
z05G^e&JB?Wb*8^g)aM`yt|}~QJkKCipFNeyex~P~SFPVEa<QmCeK5k{=MJ}d`{zr}
zu&kkUC+)UoRWD|1F~Rc9SQ;H>fD(73rncKmm)m~&`O<r|fqLN&=<lNHYLl}{S3Yg%
z$QvfSs0R7@a=KM{W0dL`R^a3qZIjlA@%qOVeA*9JpnrEyJi33(SZ!Yh;R{7KAo{jg
zj(JU*f7FTM8KF#;pnsQ7I3GE>*YUyY9z7tO%ec7z@wWcoOr-eb<sEyhso1gNpt_>P
z1k+|y?d{>1jLC=s4B2tEhiTtu->WVJno&%%6bG46KuU9D`GEN!C!9chM>zd=cl0+-
z^k>4rpkq7_iWGHtBvy$Q`dja2;1ZdYmF6cANU6{v>l1=fSKRpsTRonp@alC%p{bhU
z>g+(%-)&_nDQ~#bq5;xo^06RggA&uH4RMVb6wt;oQI+`m_zt>SiI5hXkfEnn6@ZNk
zh9KUr1jtt6lBg$O#TAoTRvwUtWeMP3EjnGoRPQppiNF(sX%|Q4@kIjas|WZWXSENO
zfF#2yOb;%XO*LeOoAwlf{u7_39$x(w3xT~)2BNJ2l5u4n3a0NkNLT4yT);7fA?1Vt
zCz*`hbw-doYa09E!05zcfOT0EOOR<EYsc$xU*#45FmbJ{s~VfN8|As<lzdF|QWJUA
zf$ihe<fMFhz|b`)9jVC<y#B*pE=nsY-~pF`fC$D4@h6ZW`KvEKgTz5X?UnihlYf%@
z(u^`g_r(B5(O`5Z#yf}5IMb+SIl<^e-VA0+$GI97Lvrun6t)7zhh{u?(qg>Y``E@D
z5{v%@F~&|UfNt@>vrj66W5f>jy+G_8&VB9D0*>N!7_Nr=-x6N?A)M8>1~q(X34sXp
zpA%@w&c};L7u*G3;(Qe=LFL}NbTF$|aX#A%P(h`-N=ZRxCvlG<F<|`fTFTI`8WfVY
zxC{)wdR_af>$>Klv}jo0MS|UR8qKq-1FokBJmrbTJjQ!k#Is0tY+0c)m4Gp80YzYD
zEGXd~ihaihk;?xUknXNH?rssjzaF+l6?HnDQjVP$i=q}{lp_WbOTKKg<VrbP)ZT=f
zL)0quifwUI>}HPKW)2sW`L#NvgmaY0^b2Ldk|t{P6{L{>ym;Xgao1PrudBgEMRFb^
zkPJ6v0h^tJ>K@;maHk_|6Z>yFzq@YvDOeO6Ob_?P4Ey>kHiJv`Wlh_MX4fBY36f%^
zV#2t;$Rg&<KpDIfw$=Pm-v+oO4-NuHBVN!@vi1qWED))`{|kekNAxAeB!>}!Kwifm
z;TVZXMxw3~$--{&A8-6<F_B)Y&@$S^?~3>vnUZ#s4`Z-zQ#+y7UI8#Hgsc|ompLUc
zqlAG!Ti>t{JzYF^5pM925*PUWUvDuYDGKhC4FMx45c`L#V7%V+88@|khLj|V=J9Un
zJEcP5qVCzR6p{FK!nIY~TXo)tJ!{>CG;~&u;EPlnNrwJ=5)ke@hJosN!siM$8b2mM
zmc&weo-rY{n<w`gR(&;xFoDOIwYdVXlW*d~vnJ0*x51$NK7$$;Hd>1+%c`c<{AT3i
zjF{p253Ul-)s5A+!8Dp7?viXAdH1+qlY%mK5pp?{pS1t!3qmmDOq2TnoV`F3<>(XK
z1=gfH39N_~8O+~({MZX~+QHyB>vtgwK0@uqGkX^eaf$UFHiO#>LB*7@=c0o6`0muj
zmH00_F#p)s3E*$A-zP+p2bvXARTg3)Lxh`tf~9X>7!Z^kHV`uE%V9+BiBG=mxj*)M
zr%3rn=)>GR`{#zmwD)$3ToLMx++uqsCx(+50Uk*5QJp2c6msxLD&P-y{c|XK6zZl3
z_Fgu8kp|gKVWv`GS!c56FWPO)ZrC<?b1uy)l*URp1+5>CtYh#*yp-ssus)ot>_~UB
zyGfjTjz#fXod{^KEQK1~@jN|;SZw5OgH#0wK78Oe4#vV3*|&XPQ<a^COh`#7$CH>U
z$r~5u8ziT0<#ICrX^<1){mvtaqT9OqlW?wiSu4X#rOC(0uL{Ownb%i1F_G&d>=l51
zx!FEO4_LK+)W^N6UF+f<Yif*w5Eox56+`>Accyyp{t)TE`;vF@1irbNjcXF8b?yFh
zl5UEB>@;wO`~gMF!QB;h<``+f(lxAb_8B$;&vT7)(bXG(7x_5f%AZ5;h#3WjHisX{
zLTSguapAADXMwWZ&jsD0+K!+8#*6z7-(T+QUk>(~!Q|0&!d)PgEw8F6RK;LkB;!<d
zuqH;H9G>HXg79$+l*KU&-fRF|$o+kR4mJ36k9p&>*uS~RhCV+*Y$3U-k%~M)jxCFW
zl9;bQ-fx4HPy)*(bhrKL!81M<Zxv&z<cF^hfTK6m6{L@0f_ciyNU_8(j6mv1lE*iU
zJ5awPs=D1!^lP6Jdqt6mg==7w8xsgAP0UX|9`2?Hl#L*&vZe~dHkfwv9QOOQ$<6ob
zQbl`?6U55Fb2val>6*@6p5W?z*W`jb;@JKMFw<mR&&KVH)QcKUzi3r>mic{gQPv*)
z?I{Fh)y)}(-6uh^I52xKo!LRZV0c*1X)Z(g+GVFN{2n<H>%vD*@&IkVI{R_0;M28M
z8vu?M+xVF-&<{l@1g{PA#hnyAq(gudz4WKSFL5YOr3q!|qrxa7z~F~rEJ29VQKgNe
z1*L^m9&acg2p7&`u&V%oY|AKF(Xpv=)wf&j#n|<idrD~#2BD5i(%E`%MO9%~zVyw_
z#3UC%_9tV;>;2UYEaUIHLJuTQw$SbrNn+)38PlfV^0<6s>)|hT#IAAS*T)_^_q@I}
z0S%tV-HrX<cx20NtH&v<blye#U2+fHkGY_6=Se9~e=Wo!O3|#Z8|{|$O(A}7caL`R
z$}vKJQD@wc@dd3w;cDf&4~2n|37fBm^||$T=H|>OjzkvW!YSbDjdH=g;=4A@whsDB
zI8^aX6n=|ab(?!Ay!)CxH(<B8)keaR`MK+stne~Ic!cxXPh$mA)7fA#%V+F`K##u7
z$+|t-7;3y6)I%j`IgHtg`={1D@R^NPV?rg&iViQ^Fs)>w<nE?%4xV_-u+&MK{VM0|
zkd_RIHmOJIB`_tm5W$`$Z_PR#e>C(iX~Q@%FEx>C{Hmp98f2ku$Bsw%lk6v50(U@;
zu68Z9U&za}O#-Mv^+!V=eyj6S)5oS{My`1MVs)nlnYl_$xU^QId1_jMf7&K8ij)jQ
zJ|+~@l)xpV%~Y{P()$`+nBihkjE|3t3t8PoKU3wZ_Eg%0P<>%(A@oW#*8i$X!nfG&
z;&&2ZIKlD~*Gff+p3A7QB!}Ei>RGhUUz^UoEpeJ{`2ov>wH!O@1$VW>A#D#{i2z9l
z{d)FK9OYxRY#(6NUMO=q^5Ve7R|72%f}ZDlsm0BN&LzyaSHurXV4p5HGf7|Z)}8)g
z5J#S6h{-+_U0m$k#+|N{6_8MYactWzWb+1~ea8wX3zX<@O0>pU*q($J{=R&7)P&jg
z6Kb)o=HAnC_MP;cIeBq}{gG^0CZzOUJZ|7C-VjE}!?*UtKTcwwF33v^BYC&}Rq)C*
zpAJ07-!{`f<j}bK`bd7B8b^hD=oeWJW~Sk!uVyzcX-B7zoEbmh#LUEfMGxdWs9Fg?
zy)_teVyD7Dgn8X1Wd3s0@#|VRtZ({u?gH(I+Y<iL;c5G66BUJjEeFeLuBq2pUtgZa
z`hcUX*UOV5ddo(?X^M4uiDXFuVl9+_7?^6>lYX1@n;ZK-=x4)!o(%(1UqulVmes(D
z^`_HNfM#umEYy~=zh$9&+?8$4!l(4rr?d#8hS4iks@9w%E4l`BKmhUtvsm1X-mKC3
z>4(u4yS45OgZIOQ;EQ6s`sjNelo!~mLe7gS69TW2WnFwE<qCF^a&Qc8zOZ|m=%MX5
zA_ka~fuG(LLlG>KcAwioq2mLXV<9CIa#(0`sQpl>vwW`A$D?!2%nt*HEb;Ga=o?92
zHAOICmXHEQ%Cc{m2>dLjPU1J}^w7zilFIxy9nG(OZbYPtW?3KJyv@A7|1A*NiD_v!
zTLC}%E4kI*d?$lQBRL==MPsD#FyN0ZSr`;aeQ4C6a2INH9klU~_gCH;G2%8R4EuHb
z44Ej^6301>?c06FP3X~xyP{77p`-3td;HKAGf<OE`C-Lk)d3wT725|j7f;D=<q)$<
zd7nhSr+0Efo*Fq6Reu)Nx?A-S=YgpIq|;d0Z-uKf#!ucqzKBmF_2I4I=wyvJ@ziRo
z<>4mZw1qRd6Z^^L#?qaiAKv~px)*jAV^re~beps9m{kJzb6n(oS8uCt#Lnjofg;Rl
z=apY)JsV;^dVkzCW)jDrii_WTT`3iKri(xmCC1^AO}Vqt-1B*wwIlBAmE1AmdRtMc
zD!fB@mtwHPHyV-^VIVU??*~*{olz-Ub)NCX941BDj_CKZ+QYQ?+``tyhy_7WFXF}_
z?~CVO#LsDYD!&}cp<rKnzZ2r3a4>h22{PZ*TK?$K^u`E7%{^na89Rm%!jSZs7vI-D
zL1POD!1cu56G)*p1gui3-i^JZPX3tI*_Fq&JRwbz*#8LUSiMRWjuu`zD|uk;+X&d@
zuxF5C2{Zp#O?GtOB+R2~tF>MDI(}%p-W<PF=Q@v(#M(&WY3USxAP@w@LSh6+|DvV=
zPxwL6oydh^1j&RA+9berADmtEp6~IIZn&ih@M0}SP=&R|>=M>1tEY}8E=b_l*WbOO
zY9tCPgL3vMEqz)_eWeqmN{qobq_4)XdXJSe6Hj;Eie0??2ZZ?p;*_K8@(&v~1evu-
zxQC<TfoCBFHsp&`KmX|sVyktid_7Q2ByW;Qe2UoI71Twfi=|}N95LdpOp-wDKNd<I
zv(qH?&NYQpiCQf*`6tyDz$|2rI0~+3;pBf@)mUUJroI4etN@s^w~sRg1a12FlNT5o
zS=)O}>A2YYvv@qhzamqdi`?{Z{c*7$arCdz4-4G(`O5It%y&8>d{#Y9Vax^FZ99ZK
zUdIPpkNhp8uP3T+W4lhvUIYaoY##y6KtxBFoj3&5^@Q(^{677%C#3YJh$p-Ee2M6F
ztJAoQv1N0L!|<pxv|v1hi;(fiq>N8XBD(eAYcB#gRaIX7T8U5xXbx~cJSon~YnC<r
zMIycHW++lHayM0O@u-|=agD{3s~R$1(0LyMgzri7TDty(q8)}GoH6KR?ZK@*h)Oy3
z58dyD@P1=*Pm}rf^I$ybPkS}{B(<r{=2pap)W(xtRl~ML(P*{K{3rFz0TTbBy;B6>
zaJYE%zOj9y?E==_B$*9NiAm{~)2Z}t1$$l?qOYct5Ep5HvqFKvuSE7A5YF$K@2>UE
zbQOdTNzjD#zS(L>wa2$K-WK!Pc%pY^8To58;^JaXZ}F30wuYl;WWs~rCoo&vrEtUh
zTBLMU??yx1#;-weCPZyOJ%Yeb?14z+OXW0L_E+<)(q=;xz<pwJ!pxo+0PfoEwY(x2
zB4h8B|MR2HPwnhwer-Eww>74U-Q~R~n*oC;MxyrJo(74r$y2t;x`D~{nhUw`N{Bbc
zo`l5kb`Yy;L=&@MTQ~Ml_%V%){mCIj4WC}5q=A_ACx2^by!4w1rVX6H0ifayJsw;;
z=+}5kjC?RG*q)^FA;udd?fK$7vU1x>y0w;A-)YbE%l$J%nRRjAIlrItFPgQvJ7Ytb
z%HSFnjF2||X&L_g-Q>1{(mholW_-EJmSzsO%*VVVB4)#OAv<(kOIx2H!f<orlh6QJ
zdFCT5#3oTu@&dmO1Nf?t1%E)v9y|`+8=C28dJuwgt*-gC?rSOK`=m;7myztv2d#Vo
zkI`Wx4lj-3$25%RNBPV*uz!SW^Em_QXGjRdeYMyy-Yf+<)YopV%^|ZWJT=K%zF4+W
zLS~QqN;^t&kwD=`C!V<matQ-K1KK$%`Jwu_NN5{bF0a%WUmzDgk%TBqqpRAkTgIiP
zYJot<WV>)I9#e_Nyjdb$&*1KN^gM}yFIhi%%BWB}7Ke0M{0WY>CxJQUuL<9GW$I>S
z8~;QmE{^wS?I`=DyV^l+MozMPWLoFz=uSLu99tiVHdCN>7jRs~vd13`&Gey!!7_+<
z6o@25%!eN~+Eki#7iq@#{Hxl7pF0^`N;~p~#tc6HXJP0g5xvK|AuLSwNHVI2_Y-!&
z4hemc%vOM5!ySDypyEGe=lAeFbIp`w8FIUcTqUwens>sTIV-jDhrcKGX7XHFXyazb
z^DO8=ZgefY6R6&+)c1<?7)~Kuxm$q2?)xbE6Z@y|KDv(VfnIL`m%ZM5B~krqpTD;+
z3JAy;Z-1s{IZ=-+?Aj&kKv9s_>_i*WoenjtR5@_JU#Ph;4M8fpmznxE9R`=r@-#_y
zkD?Muq|*gg7f*BQeI|Np#}Q|NXLJHM6GE{;SJn8ce`V1Gehym~{8c+M<2~=HcCRuk
z-v&$8dc8YG+tK}NYVhwdm1iZ&A#r+T<>Ez88)Eq9j+G5h5D(_u{WQdUTOs+QbA(=?
z{F6n6UV8D2*lvb)0vDrca$729KG$xO2aH$jWoWl0drlmefYsTswh)`GjMtmR=vEkJ
zN$aTp_@@KL%KQ-VDB2ppbZK@X`6cJA5n`g>sbCTvU_xdid!{9gWA|>Mfs6rtHx6s`
z_wMt*FgUTBZ@I2C62&zbs?pPvK9TpatkXzqDqe4YTr^nnQg8gWxjKt*s&eOMEp!Qc
zG~PT`>xg76Xqh^dKI-Eu#K*VnvEf9qT{L0yNpV<zBPlG$Xs$A{KKdN$42Pz_*1`3%
zQlh6#C;wm~MH^^BB!g5^W>j)eVD#kQzGgVRbTB!5nWY=?t!cggiEGBAcWM2xNtW&9
zZB_6RZ}|a87CuEYRYCRJ`Sg+_gBK$<tT?y0*a3uz(??vj`ejK05Fhgi4ReLg_C210
zH#>_J@*zoWcJJw>eBw?G9WY(Jw~qN|A3MBR^~jm?>k5oGv7z+0jWOox(co@%nya|*
zE-2peyX)#@svgwwDMPJ89dT=iO>}@wtNR@NUQ|cJZ};s<o_gG@>X(w2uWP4AE5)@A
ziJgy_TIZ+T&vG<POjZqR9B%QHw|yV?jEB(MWO%P~ad>&xPh@Jmt!OJ|zA6C0ZxfF2
z7>aIZqecbmM$lyvDMwg2?Ipo9b)-WL6K_7(X_rmJgdd$-Qc^ywEw4SThChz6*_yu=
z{v~a4V|RJtH-GThc2C0Z|JHPl{II-!?B~7cWnRz&dgP*UqoY!iCo&i-xeM}kl?ID*
zKTX`w+;z0+MCdGcl{N?xb|tYb%Id=k++k_@(V%bTS&n09`0{S0)|>IH_F;V@_zr<I
z{w4bI-epzQHu2&sz1oS1w9$5FtX)J*J+~CL=WuPT&CZAK(L>xS-dKDDc7+i`nHN8J
z;38w69lzAS*WWa+dnVvk(0-KD3<D#xkr_GwRxC0(H937M0Ns^6Y1{rLF<&cj&8L4c
zAAR(~RxEH=A*P<;Kg;;V&1LThf*x~Nngy77<8W{4x#aPE<fX{PpvWhqD8k1kotRsT
zyp++upn2OstlXgGeZerl;qI2-gRa^8zVtF{!3f@5_7^|s9`h7qj<72?Pa&8cMOTnf
z<O@^0qk8ayl6=Cp(8<(daq@%TMC!k9Wb^Lc7sixFjfTz!9*Tif3J-0Y(9Fca_c#r7
z1Zq}}sO=udR;?Z}heuwwVy!#diQRKhY?Y6jqQEt|b3{Xk=gI#<EY+D=U>%*)TerLH
zSCc}Tjc-mR5|1HAL$C1}oue|Qp&M!hmyDUcg)Cz>GXPEyeYf}+s48kIl*pL{{treP
BIP(Ai

literal 0
HcmV?d00001

diff --git a/apolloschurchapp/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.webp b/apolloschurchapp/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.webp
deleted file mode 100644
index 68d16b3bccc675e0cfb4171dc0bf1f5d5a0714eb..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 5496
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

diff --git a/apolloschurchapp/android/app/src/main/res/mipmap-xxxhdpi/splash_icon.png b/apolloschurchapp/android/app/src/main/res/mipmap-xxxhdpi/splash_icon.png
new file mode 100644
index 0000000000000000000000000000000000000000..720ea33a6018381e6d1bcb89a270230d188aae59
GIT binary patch
literal 1701
zcmZuy3rtg2818hbqUDja>gZI)t3D7Bd#jRR5vb5&ZwumsVzw&JUAw7aI;$|u)&K%_
zr4&<pL0Gg@lNIQ!&dCr&1xsCNxQ%yn5-^G|rwP!Cw4sBY-pVj@NpJq1|NiIuzW+bp
z$t_P6B>OI+FCvjhzC12xCyDf)6g+1Z&Ig&1ZM<3#D5?Bi+mny*UCs&cb56dhFy#IM
z^7D`G6r__(htkCl?vY63?L1EWF6kdH`_m3CkEU_buAQ7I{3#)e;Yu|nOAhT9d~qw4
zHsbU7WPnJsikYK6(eP{4C(Tni{NmcF&zghxAsJNO9W;rKb1(y=x|Ah{^yS(EaG0+I
z?KCph4h&WHSB#QJ+m?3K7BS=wlv2;?3$1^vjP6C?(s9U((Dztm1666`dISJLQXEo9
zRl<UZc2)O@NNu!>Pak0^OIb>Ycn^p|kPI954hj%BvV52+#W`I@9jNdC#Xf=AJxxvl
zedJnI_mHZ;q6J`v%6rN%sd<5y&+=GAU1CN5yn00!7%RD8Gr!Y~<<br#LrCxHh^LQC
z*cwHuRdUD43_AXSTfvv*Tl$`e643??*^0^(QoL&TV-=*2Vfae84l_{K%gwfHU7;$d
z_k|C_XZIN4HEiWDU5}9C`0SXbY`)ONK|9eTG<rQw!wfp<-Ii)%rU_^a5j}l@ytie~
zY(KJ$hB%Lz3Kv+>R_F7!=}4ja4k{gsP&-<!6GzAOJ&l1XRtXd_U19&)yRihSoQKz7
zZ3RCLZ}m1kH@%8ZYjg&cQoQ>%`YF2Cy(%-<V$QW+YCHgspB8(I%b`a=rO~?}4)|gI
z6<t+c*Ke_YDc->Y9#vjLC9A_O_1CW<$KBfxhx$r(BCj=!Q@|Xw!E^3QLC@RjtKL4i
zlgR7wtuyxk)!Zp&jY+=JyE+;J9mXb~y~pELV1_)EYS1Se4znyPJbtF18!$gUfa#oR
zcqYE9`2nkT%{v%i2^;!el+L5BuTevC)(+H!PMybIQasKe+==$1iFDkp^IC=`#c7Az
znS_0m*O){Dw88N}!op{DLGEx^<_?yd;-ci8BiJi^9fFn=L?IcDtAw{LuRyMDbfLS~
zpyU3oA;iBi@sqR1-@XBJ)(*qm4?0IZxZyC(CG-P(8PyEKa7kQC{N>h?0-j?6k3F)X
z;s0F?h8tt(Aq?(4130nsL%rx5h5iOP2zW1VEMm;Zer!lMQOCBAT+}}FwxSviU;Hc>
z&hbUoO1M-|=Woz8w`LJ{vlb<;>Cw#^a1~pO!_|x{rNro#?X!uy^F1{{y^8C=I)gCC
z6g3NBqGN3s+Ww-9mA3eONdhw9vc3rSP_X+^$1QO$%0>6?GiuBAH^4K?ZOizQ;5XAT
z4qoM9>U%shLt!!HEVE$ccd^KH4XahKQoP#V^RMD={q<5v$<iWA%{K{@Y|Hdi@L!LL
z@Bh31EO@Jr@e54`aK@y*q-<X#M8Zu6JpzG{OuRb<RJ;*zp~Oyfr(~($poYV_@;$xX
z=*5;upk=mFKJaW#;B1nZosBY0sP?duI|yB^w?iaXr<3q19YC-ooM^vU#xy3~KbA`f
zp^6-~ffeUB1#sd6+BU0C_4?gTicDOxXxqAr1AnWqT}^4|Wmbynx^AXS(!^`Oe{=GD
z!(?HmQ9ZP*II3flOtHmzis@2!Y>+8_&J0aQyK5L1AmtkP>ANv&Oc_}8ba@d631K=<
zCl}?U*v?^`8pg&(r0(5FVQ-Wju9GQN!#U)^EefZpMi<>!4p#r&MN|Q9rnCD-W@rjk
rgFyl$#1p;PeD6Xlbgc+_9c%Tcz1$<+5u@>Zen`CS0#0+n{%`*Q5P&AG

literal 0
HcmV?d00001

diff --git a/apolloschurchapp/android/app/src/main/res/values-v21/styles.xml b/apolloschurchapp/android/app/src/main/res/values-v21/styles.xml
index 9d05c85..fa5365c 100644
--- a/apolloschurchapp/android/app/src/main/res/values-v21/styles.xml
+++ b/apolloschurchapp/android/app/src/main/res/values-v21/styles.xml
@@ -3,11 +3,17 @@
     <!-- Base application theme. -->
     <style name="AppTheme" parent="Theme.AppCompat.Light.NoActionBar">
         <!-- Customize your theme here. -->
+        <item name="android:statusBarColor">@color/deep_water</item>
     </style>
 
-    <style name="BootTheme" parent="Theme.AppCompat.Light.NoActionBar">
-        <item name="android:windowBackground">@drawable/bootsplash</item>
-        <item name="android:statusBarColor">@android:color/transparent</item>
+    <style name="LaunchTheme" parent="Theme.AppCompat.Light.NoActionBar">
+        <item name="android:windowBackground">@drawable/background_splash</item>
+        <item name="android:statusBarColor">@color/deep_water</item>
+    </style>
+
+    <style name="SplashScreenTheme" parent="SplashScreen_SplashTheme">
+        <item name="android:statusBarColor">@color/deep_water</item>
+        <item name="colorPrimaryDark">@color/deep_water</item>
     </style>
 
 </resources>
diff --git a/apolloschurchapp/android/app/src/main/res/values/colors.xml b/apolloschurchapp/android/app/src/main/res/values/colors.xml
index 32f27df..348fc25 100644
--- a/apolloschurchapp/android/app/src/main/res/values/colors.xml
+++ b/apolloschurchapp/android/app/src/main/res/values/colors.xml
@@ -1,5 +1,4 @@
 <?xml version="1.0" encoding="utf-8"?>
 <resources>
-    <color name="primary">#00676D</color>
-    <color name="bootsplash_background">#00676D</color>
-</resources>
+    <color name="deep_water">#00676D</color>
+</resources>
\ No newline at end of file
diff --git a/apolloschurchapp/android/app/src/main/res/values/styles.xml b/apolloschurchapp/android/app/src/main/res/values/styles.xml
index b6325b7..328c4be 100644
--- a/apolloschurchapp/android/app/src/main/res/values/styles.xml
+++ b/apolloschurchapp/android/app/src/main/res/values/styles.xml
@@ -5,8 +5,12 @@
         <!-- Customize your theme here. -->
     </style>
 
-    <style name="BootTheme" parent="Theme.AppCompat.Light.NoActionBar">
-        <item name="android:windowBackground">@drawable/bootsplash</item>
+    <style name="LaunchTheme" parent="Theme.AppCompat.Light.NoActionBar">
+        <item name="android:windowBackground">@drawable/background_splash</item>
+    </style>
+
+    <style name="SplashScreenTheme" parent="SplashScreen_SplashTheme">
+        <item name="android:windowIsTranslucent">true</item>
     </style>
 
 </resources>
diff --git a/apolloschurchapp/android/build.gradle b/apolloschurchapp/android/build.gradle
index 92231c6..00525dc 100644
--- a/apolloschurchapp/android/build.gradle
+++ b/apolloschurchapp/android/build.gradle
@@ -1,19 +1,15 @@
 // Top-level build file where you can add configuration options common to all sub-projects/modules.
 
 buildscript {
-    ext {
-        buildToolsVersion = "28.0.3"
-        minSdkVersion = 16
-        compileSdkVersion = 29
-        targetSdkVersion = 29
-        supportLibVersion = "28.0.0"
-    }
     repositories {
-        google()
         jcenter()
+        maven {
+            url 'https://maven.google.com/'
+            name 'Google'
+        }
     }
     dependencies {
-        classpath("com.android.tools.build:gradle:3.4.1")
+        classpath 'com.android.tools.build:gradle:2.3.3'
 
         // NOTE: Do not place your application dependencies here; they belong
         // in the individual module build.gradle files
@@ -23,16 +19,34 @@ buildscript {
 allprojects {
     repositories {
         mavenLocal()
-        google()
         jcenter()
         maven {
             // All of React Native (JS, Obj-C sources, Android binaries) is installed from npm
-            url("$rootDir/../node_modules/react-native/android")
+            url "$rootDir/../node_modules/react-native/android"
         }
         maven {
-            // Android JSC is installed from npm
-            url("$rootDir/../node_modules/jsc-android/dist")
+            url 'https://maven.google.com/'
+            name 'Google'
         }
         maven { url "https://jitpack.io" }
     }
 }
+
+ext {
+    buildToolsVersion = "26.0.3"
+    minSdkVersion = 16
+    compileSdkVersion = 26
+    targetSdkVersion = 26
+    supportLibVersion = "26.1.0"
+}
+
+subprojects {
+    afterEvaluate {project ->
+        if (project.hasProperty("android")) {
+            android {
+                compileSdkVersion rootProject.ext.compileSdkVersion
+                buildToolsVersion rootProject.ext.buildToolsVersion
+            }
+        }
+    }
+}
diff --git a/apolloschurchapp/android/gradle.properties b/apolloschurchapp/android/gradle.properties
index 1f9599e..1fd964e 100644
--- a/apolloschurchapp/android/gradle.properties
+++ b/apolloschurchapp/android/gradle.properties
@@ -1,16 +1,20 @@
-## For more details on how to configure your build environment visit
+# Project-wide Gradle settings.
+
+# IDE (e.g. Android Studio) users:
+# Gradle settings configured through the IDE *will override*
+# any settings specified in this file.
+
+# For more details on how to configure your build environment visit
 # http://www.gradle.org/docs/current/userguide/build_environment.html
-#
+
 # Specifies the JVM arguments used for the daemon process.
 # The setting is particularly useful for tweaking memory settings.
-# Default value: -Xmx1024m -XX:MaxPermSize=256m
+# Default value: -Xmx10248m -XX:MaxPermSize=256m
 # org.gradle.jvmargs=-Xmx2048m -XX:MaxPermSize=512m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8
-#
+
 # When configured, Gradle will run in incubating parallel mode.
 # This option should only be used with decoupled projects. More details, visit
 # http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects
 # org.gradle.parallel=true
-#Tue Sep 15 14:49:56 EDT 2020
-android.enableJetifier=true
-android.useAndroidX=true
-org.gradle.jvmargs=-Xmx1536M -Dkotlin.daemon.jvm.options\="-Xmx1536M"
+
+android.useDeprecatedNdk=true
diff --git a/apolloschurchapp/android/gradle.properties.appcenter b/apolloschurchapp/android/gradle.properties.appcenter
index a50dbd7..f8c9d46 100644
--- a/apolloschurchapp/android/gradle.properties.appcenter
+++ b/apolloschurchapp/android/gradle.properties.appcenter
@@ -19,5 +19,3 @@
 
 android.useDeprecatedNdk=true
 android.enableAapt2=false
-android.useAndroidX=true
-android.enableJetifier=true
diff --git a/apolloschurchapp/android/gradle/wrapper/gradle-wrapper.jar b/apolloschurchapp/android/gradle/wrapper/gradle-wrapper.jar
index 01b8bf6b1f99cad9213fc495b33ad5bbab8efd20..b5166dad4d90021f6a0b45268c0755719f1d5cd4 100644
GIT binary patch
delta 40346
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
MR6yud!{M+00Sm=Wj{pDw

delta 42314
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
Bz<B@w

diff --git a/apolloschurchapp/android/gradle/wrapper/gradle-wrapper.properties b/apolloschurchapp/android/gradle/wrapper/gradle-wrapper.properties
index 3c7a7c8..81a86e2 100644
--- a/apolloschurchapp/android/gradle/wrapper/gradle-wrapper.properties
+++ b/apolloschurchapp/android/gradle/wrapper/gradle-wrapper.properties
@@ -2,4 +2,4 @@ distributionBase=GRADLE_USER_HOME
 distributionPath=wrapper/dists
 zipStoreBase=GRADLE_USER_HOME
 zipStorePath=wrapper/dists
-distributionUrl=https\://services.gradle.org/distributions/gradle-5.4.1-all.zip
\ No newline at end of file
+distributionUrl=https\://services.gradle.org/distributions/gradle-3.5.1-all.zip
diff --git a/apolloschurchapp/android/gradlew b/apolloschurchapp/android/gradlew
index 3e84efe..91a7e26 100755
--- a/apolloschurchapp/android/gradlew
+++ b/apolloschurchapp/android/gradlew
@@ -1,4 +1,4 @@
-#!/usr/bin/env sh
+#!/usr/bin/env bash
 
 ##############################################################################
 ##
@@ -6,38 +6,20 @@
 ##
 ##############################################################################
 
-# Attempt to set APP_HOME
-# Resolve links: $0 may be a link
-PRG="$0"
-# Need this for relative symlinks.
-while [ -h "$PRG" ] ; do
-    ls=`ls -ld "$PRG"`
-    link=`expr "$ls" : '.*-> \(.*\)$'`
-    if expr "$link" : '/.*' > /dev/null; then
-        PRG="$link"
-    else
-        PRG=`dirname "$PRG"`"/$link"
-    fi
-done
-SAVED="`pwd`"
-cd "`dirname \"$PRG\"`/" >/dev/null
-APP_HOME="`pwd -P`"
-cd "$SAVED" >/dev/null
+# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
+DEFAULT_JVM_OPTS=""
 
 APP_NAME="Gradle"
 APP_BASE_NAME=`basename "$0"`
 
-# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
-DEFAULT_JVM_OPTS='"-Xmx64m" "-Xms64m"'
-
 # Use the maximum available, or set MAX_FD != -1 to use that value.
 MAX_FD="maximum"
 
-warn () {
+warn ( ) {
     echo "$*"
 }
 
-die () {
+die ( ) {
     echo
     echo "$*"
     echo
@@ -48,7 +30,6 @@ die () {
 cygwin=false
 msys=false
 darwin=false
-nonstop=false
 case "`uname`" in
   CYGWIN* )
     cygwin=true
@@ -59,11 +40,31 @@ case "`uname`" in
   MINGW* )
     msys=true
     ;;
-  NONSTOP* )
-    nonstop=true
-    ;;
 esac
 
+# For Cygwin, ensure paths are in UNIX format before anything is touched.
+if $cygwin ; then
+    [ -n "$JAVA_HOME" ] && JAVA_HOME=`cygpath --unix "$JAVA_HOME"`
+fi
+
+# Attempt to set APP_HOME
+# Resolve links: $0 may be a link
+PRG="$0"
+# Need this for relative symlinks.
+while [ -h "$PRG" ] ; do
+    ls=`ls -ld "$PRG"`
+    link=`expr "$ls" : '.*-> \(.*\)$'`
+    if expr "$link" : '/.*' > /dev/null; then
+        PRG="$link"
+    else
+        PRG=`dirname "$PRG"`"/$link"
+    fi
+done
+SAVED="`pwd`"
+cd "`dirname \"$PRG\"`/" >&-
+APP_HOME="`pwd -P`"
+cd "$SAVED" >&-
+
 CLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar
 
 # Determine the Java command to use to start the JVM.
@@ -89,7 +90,7 @@ location of your Java installation."
 fi
 
 # Increase the maximum file descriptors if we can.
-if [ "$cygwin" = "false" -a "$darwin" = "false" -a "$nonstop" = "false" ] ; then
+if [ "$cygwin" = "false" -a "$darwin" = "false" ] ; then
     MAX_FD_LIMIT=`ulimit -H -n`
     if [ $? -eq 0 ] ; then
         if [ "$MAX_FD" = "maximum" -o "$MAX_FD" = "max" ] ; then
@@ -113,7 +114,6 @@ fi
 if $cygwin ; then
     APP_HOME=`cygpath --path --mixed "$APP_HOME"`
     CLASSPATH=`cygpath --path --mixed "$CLASSPATH"`
-    JAVACMD=`cygpath --unix "$JAVACMD"`
 
     # We build the pattern for arguments to be converted via cygpath
     ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`
@@ -154,19 +154,11 @@ if $cygwin ; then
     esac
 fi
 
-# Escape application args
-save () {
-    for i do printf %s\\n "$i" | sed "s/'/'\\\\''/g;1s/^/'/;\$s/\$/' \\\\/" ; done
-    echo " "
+# Split up the JVM_OPTS And GRADLE_OPTS values into an array, following the shell quoting and substitution rules
+function splitJvmOpts() {
+    JVM_OPTS=("$@")
 }
-APP_ARGS=$(save "$@")
-
-# Collect all arguments for the java command, following the shell quoting and substitution rules
-eval set -- $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS "\"-Dorg.gradle.appname=$APP_BASE_NAME\"" -classpath "\"$CLASSPATH\"" org.gradle.wrapper.GradleWrapperMain "$APP_ARGS"
-
-# by default we should be in the correct project dir, but when run from Finder on Mac, the cwd is wrong
-if [ "$(uname)" = "Darwin" ] && [ "$HOME" = "$PWD" ]; then
-  cd "$(dirname "$0")"
-fi
+eval splitJvmOpts $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS
+JVM_OPTS[${#JVM_OPTS[*]}]="-Dorg.gradle.appname=$APP_BASE_NAME"
 
-exec "$JAVACMD" "$@"
+exec "$JAVACMD" "${JVM_OPTS[@]}" -classpath "$CLASSPATH" org.gradle.wrapper.GradleWrapperMain "$@"
diff --git a/apolloschurchapp/android/gradlew.bat b/apolloschurchapp/android/gradlew.bat
index 1688408..aec9973 100644
--- a/apolloschurchapp/android/gradlew.bat
+++ b/apolloschurchapp/android/gradlew.bat
@@ -8,14 +8,14 @@
 @rem Set local scope for the variables with windows NT shell
 if "%OS%"=="Windows_NT" setlocal
 
+@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
+set DEFAULT_JVM_OPTS=
+
 set DIRNAME=%~dp0
 if "%DIRNAME%" == "" set DIRNAME=.
 set APP_BASE_NAME=%~n0
 set APP_HOME=%DIRNAME%
 
-@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
-set DEFAULT_JVM_OPTS="-Xmx64m" "-Xms64m"
-
 @rem Find java.exe
 if defined JAVA_HOME goto findJavaFromJavaHome
 
@@ -46,9 +46,10 @@ echo location of your Java installation.
 goto fail
 
 :init
-@rem Get command-line arguments, handling Windows variants
+@rem Get command-line arguments, handling Windowz variants
 
 if not "%OS%" == "Windows_NT" goto win9xME_args
+if "%@eval[2+2]" == "4" goto 4NT_args
 
 :win9xME_args
 @rem Slurp the command line arguments.
@@ -59,6 +60,11 @@ set _SKIP=2
 if "x%~1" == "x" goto execute
 
 set CMD_LINE_ARGS=%*
+goto execute
+
+:4NT_args
+@rem Get arguments from the 4NT Shell from JP Software
+set CMD_LINE_ARGS=%$
 
 :execute
 @rem Setup the command line
diff --git a/apolloschurchapp/android/key.json.enc b/apolloschurchapp/android/key.json.enc
deleted file mode 100644
index 2f384e868f55131f70a190fbac905a5af5ce23b2..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 2384
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
CgQfid

diff --git a/apolloschurchapp/android/settings.gradle b/apolloschurchapp/android/settings.gradle
index 1ae2310..50bbf55 100644
--- a/apolloschurchapp/android/settings.gradle
+++ b/apolloschurchapp/android/settings.gradle
@@ -1,3 +1,19 @@
 rootProject.name = 'apolloschurchapp'
-apply from: file("../node_modules/@react-native-community/cli-platform-android/native_modules.gradle"); applyNativeModulesSettingsGradle(settings)
+include ':react-native-image-picker'
+project(':react-native-image-picker').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-image-picker/android')
+include ':react-native-music-control'
+project(':react-native-music-control').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-music-control/android')
+include ':react-native-device-info'
+project(':react-native-device-info').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-device-info/android')
+include ':react-native-video'
+project(':react-native-video').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-video/android-exoplayer')
+include ':react-native-svg'
+project(':react-native-svg').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-svg/android')
+include ':react-native-splash-screen'
+project(':react-native-splash-screen').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-splash-screen/android')
+include ':react-native-linear-gradient'
+project(':react-native-linear-gradient').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-linear-gradient/android')
+include ':react-native-custom-tabs'
+project(':react-native-custom-tabs').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-custom-tabs/android')
+
 include ':app'
diff --git a/apolloschurchapp/apollos.json b/apolloschurchapp/apollos.json
deleted file mode 100644
index 982384f..0000000
--- a/apolloschurchapp/apollos.json
+++ /dev/null
@@ -1,4 +0,0 @@
-{
-    "version": "1.7.0",
-    "environment": "client"
-}
diff --git a/apolloschurchapp/app.json b/apolloschurchapp/app.json
new file mode 100644
index 0000000..f599c1e
--- /dev/null
+++ b/apolloschurchapp/app.json
@@ -0,0 +1,4 @@
+{
+  "name": "apolloschurchapp",
+  "displayName": "apolloschurchapp"
+}
\ No newline at end of file
diff --git a/apolloschurchapp/appcenter-post-clone.sh b/apolloschurchapp/appcenter-post-clone.sh
index 7256dc5..29439c1 100755
--- a/apolloschurchapp/appcenter-post-clone.sh
+++ b/apolloschurchapp/appcenter-post-clone.sh
@@ -1,16 +1,9 @@
 #!/usr/bin/env bash
 set -ex
+brew uninstall node@6
+NODE_VERSION="8.11.3"
+curl "https://nodejs.org/dist/v${NODE_VERSION}/node-v${NODE_VERSION}.pkg" > "$HOME/Downloads/node-installer.pkg"
+sudo installer -store -pkg "$HOME/Downloads/node-installer.pkg" -target "/"
 
-# Swaps out all placeholder env variables w/ their real values
-# Placeholders look like "$ONE_SIGNAL_KEY"
-grep -o '\$.*' .env.production | sed 's/\$\(.*\)/\1/' | xargs -I {} sh -c "sed -i -e 's/\$"{}"/'$"{}"'/' .env.production"
-# Make sure ReactNativeConfig picks up values from prod env file.
-cp .env.production .env
-
-echo "Uninstalling all CocoaPods versions"
-sudo gem uninstall cocoapods --all --executables
-
-COCOAPODS_VER=`sed -n -e 's/^COCOAPODS: \([0-9.]*\)/\1/p' ios/Podfile.lock`
-
-echo "Installing CocoaPods version $COCOAPODS_VER"
-sudo gem install cocoapods -v $COCOAPODS_VER
\ No newline at end of file
+# Appcenter needs a yarn.lock file to exist next to the package.json to detect yarn:
+cp $(pwd)/../../yarn.lock $(pwd)/yarn.lock
\ No newline at end of file
diff --git a/apolloschurchapp/appcenter-pre-build.sh b/apolloschurchapp/appcenter-pre-build.sh
index ecc013e..492aef8 100644
--- a/apolloschurchapp/appcenter-pre-build.sh
+++ b/apolloschurchapp/appcenter-pre-build.sh
@@ -3,18 +3,3 @@
 droid_dir=$(pwd)/android
 
 cp $droid_dir/gradle.properties.appcenter $droid_dir/gradle.properties
-
-cd ios
-pod install
-cd ..
-
-# You can comment this out if your app doesn't have an existing build number.
-VERSION_CODE=$((VERSION_CODE_SHIFT + APPCENTER_BUILD_ID))
-
-echo Using "$VERSION_CODE" as build number
-
-echo $VERSION_CODE
-plutil -replace CFBundleVersion -string "$VERSION_CODE" $(pwd)/ios/apolloschurchapp/Info.plist
-sed -i "" 's/versionCode [^"]*/versionCode '$VERSION_CODE'/' $(pwd)/android/app/build.gradle
-
-yarn generate-stories
\ No newline at end of file
diff --git a/apolloschurchapp/assets/bootsplash_logo.png b/apolloschurchapp/assets/bootsplash_logo.png
deleted file mode 100644
index 7065a802c74262b1d4290fe4a98c7c025a95d435..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 2202
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
Lj$+){mU#OAxYp}m

diff --git a/apolloschurchapp/assets/bootsplash_logo@1,5x.png b/apolloschurchapp/assets/bootsplash_logo@1,5x.png
deleted file mode 100644
index 91aa886e1c9ba6989d0903283a0d769a7a2ae8ed..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 3638
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

diff --git a/apolloschurchapp/assets/bootsplash_logo@2x.png b/apolloschurchapp/assets/bootsplash_logo@2x.png
deleted file mode 100644
index 8abde463f8c0ef768813aaf2923d8bdd3397f1b3..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 5175
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
Ph@c1U4}7qPb@smj4)~Vv

diff --git a/apolloschurchapp/assets/bootsplash_logo@3x.png b/apolloschurchapp/assets/bootsplash_logo@3x.png
deleted file mode 100644
index e15c3c505216e927314b583a1d36afb075fb307a..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 11284
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

diff --git a/apolloschurchapp/assets/bootsplash_logo@4x.png b/apolloschurchapp/assets/bootsplash_logo@4x.png
deleted file mode 100644
index d13b1b28b0fc319bfb459c4a9736406a025b0901..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 17960
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
V1KEJyB|-oI002ovPDHLkV1lI(&C~z@

diff --git a/apolloschurchapp/babel.config.js b/apolloschurchapp/babel.config.js
deleted file mode 100644
index 6403cbe..0000000
--- a/apolloschurchapp/babel.config.js
+++ /dev/null
@@ -1,3 +0,0 @@
-module.exports = {
-  presets: ['module:metro-react-native-babel-preset']
-};
diff --git a/apolloschurchapp/fastlane/Appfile b/apolloschurchapp/fastlane/Appfile
deleted file mode 100644
index b647b9f..0000000
--- a/apolloschurchapp/fastlane/Appfile
+++ /dev/null
@@ -1,10 +0,0 @@
-# iOS
-app_identifier("com.differential.apollos") # The bundle identifier of your app
-apple_id("fastlane@differential.com") # Your Apple email address
-
-itc_team_id("121565707") # App Store Connect Team ID
-team_id("7KS82J74VW") # Developer Portal Team ID
-
-# Android
-json_key_file("android/key.json") # Path to the json secret file - Follow https://docs.fastlane.tools/actions/supply/#setup to get one
-package_name("com.differential.apollos") # e.g. com.krausefx.app
diff --git a/apolloschurchapp/fastlane/Fastfile b/apolloschurchapp/fastlane/Fastfile
deleted file mode 100644
index 45aacb6..0000000
--- a/apolloschurchapp/fastlane/Fastfile
+++ /dev/null
@@ -1,63 +0,0 @@
-# This file contains the fastlane.tools configuration
-# You can find the documentation at https://docs.fastlane.tools
-#
-# For a list of all available actions, check out
-#
-#     https://docs.fastlane.tools/actions
-#
-# For a list of all available plugins, check out
-#
-#     https://docs.fastlane.tools/plugins/available-plugins
-#
-
-# Uncomment the line if you want fastlane to automatically update itself
-#update_fastlane
-
-before_all do
-  ensure_git_branch
-  ensure_git_status_clean
-  git_pull
-end
-
-platform :ios do
-  desc 'Fetch certificates and provisioning profiles'
-  lane :certificates do
-    match(app_identifier: 'com.differential.apollos', type: 'development', readonly: true)
-    match(app_identifier: 'com.differential.apollos', type: 'appstore', readonly: true)
-  end
-
-  desc "Push a new beta build to TestFlight"
-  lane :deploy do
-    setup_ci
-    certificates
-    increment_build_number(build_number: number_of_commits, xcodeproj: "ios/apolloschurchapp.xcodeproj")
-    build_app(workspace: "ios/apolloschurchapp.xcworkspace", scheme: "apolloschurchappprod")
-    upload_to_testflight
-  end
-end
-
-platform :android do
-
-  # necessary because setting gradle properties doesn't seem to be working
-  desc "Bumps Android versionCode"
-  lane :bump_version_code do
-    path = '../android/app/build.gradle'
-    re = /versionCode\s+(\d+)/
-
-    s = File.read(path)
-    versionCode = number_of_commits
-    s[re, 1] = (versionCode).to_s
-
-    f = File.new(path, 'w')
-    f.write(s)
-    f.close
-  end
-
-  desc "Deploy a new version to the Google Play"
-  lane :deploy do
-    bump_version_code
-    gradle(task: 'clean', project_dir: 'android')
-    gradle(task: 'bundle', build_type: 'Release', project_dir: 'android')
-    upload_to_play_store(track: "internal")
-  end
-end
diff --git a/apolloschurchapp/fastlane/Matchfile b/apolloschurchapp/fastlane/Matchfile
deleted file mode 100644
index 238d86b..0000000
--- a/apolloschurchapp/fastlane/Matchfile
+++ /dev/null
@@ -1,6 +0,0 @@
-git_url("https://github.com/ApollosProject/certificates")
-
-storage_mode("git")
-
-app_identifier(["com.differential.apollos"])
-username("apps@apollos.app")
diff --git a/apolloschurchapp/fastlane/README.md b/apolloschurchapp/fastlane/README.md
deleted file mode 100644
index 026e108..0000000
--- a/apolloschurchapp/fastlane/README.md
+++ /dev/null
@@ -1,48 +0,0 @@
-fastlane documentation
-================
-# Installation
-
-Make sure you have the latest version of the Xcode command line tools installed:
-
-```
-xcode-select --install
-```
-
-Install _fastlane_ using
-```
-[sudo] gem install fastlane -NV
-```
-or alternatively using `brew install fastlane`
-
-# Available Actions
-## iOS
-### ios certificates
-```
-fastlane ios certificates
-```
-Fetch certificates and provisioning profiles
-### ios deploy
-```
-fastlane ios deploy
-```
-Push a new beta build to TestFlight
-
-----
-
-## Android
-### android bump_version_code
-```
-fastlane android bump_version_code
-```
-Bumps Android versionCode
-### android deploy
-```
-fastlane android deploy
-```
-Deploy a new version to the Google Play
-
-----
-
-This README.md is auto-generated and will be re-generated every time [fastlane](https://fastlane.tools) is run.
-More information about fastlane can be found on [fastlane.tools](https://fastlane.tools).
-The documentation of fastlane can be found on [docs.fastlane.tools](https://docs.fastlane.tools).
diff --git a/apolloschurchapp/fastlane/metadata/android/en-US/full_description.txt b/apolloschurchapp/fastlane/metadata/android/en-US/full_description.txt
deleted file mode 100644
index d33b2ce..0000000
--- a/apolloschurchapp/fastlane/metadata/android/en-US/full_description.txt
+++ /dev/null
@@ -1 +0,0 @@
-Template app for the Apollos Project
\ No newline at end of file
diff --git a/apolloschurchapp/fastlane/metadata/android/en-US/images/featureGraphic.png b/apolloschurchapp/fastlane/metadata/android/en-US/images/featureGraphic.png
deleted file mode 100644
index 5babe833387ce0640fdb761397a0974a62f880c4..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 13200
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
TOXc#Jp?#`lpjq>;!|VS8oVPu<

diff --git a/apolloschurchapp/fastlane/metadata/android/en-US/images/icon.png b/apolloschurchapp/fastlane/metadata/android/en-US/images/icon.png
deleted file mode 100644
index a88c38d246869b6006a9f01195d30a98e43b2d48..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 8119
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

diff --git a/apolloschurchapp/fastlane/metadata/android/en-US/images/phoneScreenshots/1_en-US.png b/apolloschurchapp/fastlane/metadata/android/en-US/images/phoneScreenshots/1_en-US.png
deleted file mode 100644
index ad1e78d00cb9be87a90b68998ace20c255d8ebbd..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 57185
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
Ao&W#<

diff --git a/apolloschurchapp/fastlane/metadata/android/en-US/images/phoneScreenshots/2_en-US.png b/apolloschurchapp/fastlane/metadata/android/en-US/images/phoneScreenshots/2_en-US.png
deleted file mode 100644
index 872ef1b71c7129b97d88e9e093518093fbfa9a04..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 114731
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%0DQIQV(bFOlGL@efG?g+X<+r8+E!I5Fb@xPi<O%#
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%0DV3lhn<wXGQF9rKd7&=Xd;fBiIWIQRz
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
O2VYmyP@`1MKIY%PGrF_@

diff --git a/apolloschurchapp/fastlane/metadata/android/en-US/images/phoneScreenshots/3_en-US.png b/apolloschurchapp/fastlane/metadata/android/en-US/images/phoneScreenshots/3_en-US.png
deleted file mode 100644
index f2fac75a439f674e07aa8ec516b67bf878b596d7..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 119034
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
SQOA8mtI9=7U5+~kCj1A2YQBsB

diff --git a/apolloschurchapp/fastlane/metadata/android/en-US/short_description.txt b/apolloschurchapp/fastlane/metadata/android/en-US/short_description.txt
deleted file mode 100644
index d33b2ce..0000000
--- a/apolloschurchapp/fastlane/metadata/android/en-US/short_description.txt
+++ /dev/null
@@ -1 +0,0 @@
-Template app for the Apollos Project
\ No newline at end of file
diff --git a/apolloschurchapp/fastlane/metadata/android/en-US/title.txt b/apolloschurchapp/fastlane/metadata/android/en-US/title.txt
deleted file mode 100644
index 0e11ca4..0000000
--- a/apolloschurchapp/fastlane/metadata/android/en-US/title.txt
+++ /dev/null
@@ -1 +0,0 @@
-Apollos Church
\ No newline at end of file
diff --git a/apolloschurchapp/fastlane/metadata/android/en-US/video.txt b/apolloschurchapp/fastlane/metadata/android/en-US/video.txt
deleted file mode 100644
index e69de29..0000000
diff --git a/apolloschurchapp/index.js b/apolloschurchapp/index.js
index f929e67..d009549 100644
--- a/apolloschurchapp/index.js
+++ b/apolloschurchapp/index.js
@@ -1,16 +1,6 @@
-import './loadConfig';
 import { AppRegistry, YellowBox } from 'react-native';
-import ApollosConfig from '@apollosproject/config';
-import Storybook from './storybook';
 
-const useStorybook = ApollosConfig.STORYBOOK === 'true';
-
-const MainApp = require('./src').default;
-
-let App = MainApp;
-if (useStorybook) {
-  App = Storybook;
-}
+import App from './src';
 
 YellowBox.ignoreWarnings([
   'Warning: isMounted(...) is deprecated',
diff --git a/apolloschurchapp/ios/Podfile b/apolloschurchapp/ios/Podfile
deleted file mode 100644
index ad5dbc0..0000000
--- a/apolloschurchapp/ios/Podfile
+++ /dev/null
@@ -1,66 +0,0 @@
-platform :ios, '9.0'
-require_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'
-
-target 'apolloschurchapp' do
-  permissions_path = '../node_modules/react-native-permissions/ios'
-
-  # Pods for apolloschurchapp
-  pod 'React', :path => '../node_modules/react-native/'
-  pod 'React-Core', :path => '../node_modules/react-native/React'
-  pod 'React-DevSupport', :path => '../node_modules/react-native/React'
-  pod 'React-RCTActionSheet', :path => '../node_modules/react-native/Libraries/ActionSheetIOS'
-  pod 'React-RCTAnimation', :path => '../node_modules/react-native/Libraries/NativeAnimation'
-  pod 'React-RCTBlob', :path => '../node_modules/react-native/Libraries/Blob'
-  pod 'React-RCTImage', :path => '../node_modules/react-native/Libraries/Image'
-  pod 'React-RCTLinking', :path => '../node_modules/react-native/Libraries/LinkingIOS'
-  pod 'React-RCTNetwork', :path => '../node_modules/react-native/Libraries/Network'
-  pod 'React-RCTSettings', :path => '../node_modules/react-native/Libraries/Settings'
-  pod 'React-RCTText', :path => '../node_modules/react-native/Libraries/Text'
-  pod 'React-RCTVibration', :path => '../node_modules/react-native/Libraries/Vibration'
-  pod 'React-RCTWebSocket', :path => '../node_modules/react-native/Libraries/WebSocket'
-
-  pod 'React-cxxreact', :path => '../node_modules/react-native/ReactCommon/cxxreact'
-  pod 'React-jsi', :path => '../node_modules/react-native/ReactCommon/jsi'
-  pod 'React-jsiexecutor', :path => '../node_modules/react-native/ReactCommon/jsiexecutor'
-  pod 'React-jsinspector', :path => '../node_modules/react-native/ReactCommon/jsinspector'
-  pod 'yoga', :path => '../node_modules/react-native/ReactCommon/yoga'
-
-  pod 'DoubleConversion', :podspec => '../node_modules/react-native/third-party-podspecs/DoubleConversion.podspec'
-  pod 'glog', :podspec => '../node_modules/react-native/third-party-podspecs/glog.podspec'
-  pod 'Folly', :podspec => '../node_modules/react-native/third-party-podspecs/Folly.podspec'
-  pod 'Permission-PhotoLibrary', :path => "#{permissions_path}/PhotoLibrary.podspec"
-  pod 'Permission-Notifications', :path => "#{permissions_path}/Notifications.podspec"
-  pod 'react-native-google-cast/NoBluetooth', path: '../node_modules/react-native-google-cast/ios/'
-
-  target 'apolloschurchappTests' do
-    inherit! :search_paths
-    # Pods for testing
-  end
-
-  use_native_modules!
-end
-
-target 'apolloschurchapp-tvOS' do
-  # Pods for apolloschurchapp-tvOS
-
-  target 'apolloschurchapp-tvOSTests' do
-    inherit! :search_paths
-    # Pods for testing
-  end
-
-end
-
-post_install do |installer|
- installer.pods_project.targets.each do |target|
-   if target.name == 'react-native-config'
-     phase = target.project.new(Xcodeproj::Project::Object::PBXShellScriptBuildPhase)
-     phase.shell_script = "cd ../../"\
-     " && RNC_ROOT=./node_modules/react-native-config/"\
-     " && export SYMROOT=$RNC_ROOT/ios/ReactNativeConfig"\
-     " && ruby $RNC_ROOT/ios/ReactNativeConfig/BuildDotenvConfig.ruby"
-
-     target.build_phases << phase
-     target.build_phases.move(phase,0)
-   end
- end
-end
diff --git a/apolloschurchapp/ios/Podfile.lock b/apolloschurchapp/ios/Podfile.lock
deleted file mode 100644
index 85959de..0000000
--- a/apolloschurchapp/ios/Podfile.lock
+++ /dev/null
@@ -1,373 +0,0 @@
-PODS:
-  - AstronomerAnalytics (3.6.9)
-  - boost-for-react-native (1.63.0)
-  - BVLinearGradient (2.5.6):
-    - React
-  - DoubleConversion (1.1.6)
-  - Folly (2018.10.22.00):
-    - boost-for-react-native
-    - DoubleConversion
-    - Folly/Default (= 2018.10.22.00)
-    - glog
-  - Folly/Default (2018.10.22.00):
-    - boost-for-react-native
-    - DoubleConversion
-    - glog
-  - glog (0.3.5)
-  - google-cast-sdk-no-bluetooth (4.5.2):
-    - google-cast-sdk-no-bluetooth/Core (= 4.5.2)
-    - GTMSessionFetcher/Core (~> 1.1)
-    - Protobuf (~> 3.13)
-  - google-cast-sdk-no-bluetooth/Core (4.5.2):
-    - GTMSessionFetcher/Core (~> 1.1)
-    - Protobuf (~> 3.13)
-  - GTMSessionFetcher/Core (1.5.0)
-  - OneSignal (2.15.2)
-  - Permission-Notifications (2.0.10):
-    - RNPermissions
-  - Permission-PhotoLibrary (2.0.10):
-    - RNPermissions
-  - Protobuf (3.13.0)
-  - React (0.60.5):
-    - React-Core (= 0.60.5)
-    - React-DevSupport (= 0.60.5)
-    - React-RCTActionSheet (= 0.60.5)
-    - React-RCTAnimation (= 0.60.5)
-    - React-RCTBlob (= 0.60.5)
-    - React-RCTImage (= 0.60.5)
-    - React-RCTLinking (= 0.60.5)
-    - React-RCTNetwork (= 0.60.5)
-    - React-RCTSettings (= 0.60.5)
-    - React-RCTText (= 0.60.5)
-    - React-RCTVibration (= 0.60.5)
-    - React-RCTWebSocket (= 0.60.5)
-  - React-Core (0.60.5):
-    - Folly (= 2018.10.22.00)
-    - React-cxxreact (= 0.60.5)
-    - React-jsiexecutor (= 0.60.5)
-    - yoga (= 0.60.5.React)
-  - React-cxxreact (0.60.5):
-    - boost-for-react-native (= 1.63.0)
-    - DoubleConversion
-    - Folly (= 2018.10.22.00)
-    - glog
-    - React-jsinspector (= 0.60.5)
-  - React-DevSupport (0.60.5):
-    - React-Core (= 0.60.5)
-    - React-RCTWebSocket (= 0.60.5)
-  - React-jsi (0.60.5):
-    - boost-for-react-native (= 1.63.0)
-    - DoubleConversion
-    - Folly (= 2018.10.22.00)
-    - glog
-    - React-jsi/Default (= 0.60.5)
-  - React-jsi/Default (0.60.5):
-    - boost-for-react-native (= 1.63.0)
-    - DoubleConversion
-    - Folly (= 2018.10.22.00)
-    - glog
-  - React-jsiexecutor (0.60.5):
-    - DoubleConversion
-    - Folly (= 2018.10.22.00)
-    - glog
-    - React-cxxreact (= 0.60.5)
-    - React-jsi (= 0.60.5)
-  - React-jsinspector (0.60.5)
-  - react-native-config (0.11.7):
-    - React
-  - react-native-geolocation (2.0.2):
-    - React
-  - react-native-google-cast/NoBluetooth (3.3.0):
-    - google-cast-sdk-no-bluetooth
-    - React
-    - react-native-google-cast/RNGoogleCast
-  - react-native-google-cast/RNGoogleCast (3.3.0):
-    - React
-  - react-native-image-picker (0.28.0):
-    - React
-  - react-native-maps (0.26.1):
-    - React
-  - react-native-music-control (0.10.8):
-    - React
-  - react-native-onesignal (3.9.1):
-    - OneSignal (= 2.15.2)
-    - React (< 1.0.0, >= 0.13.0)
-  - react-native-passkit-wallet (0.1.4):
-    - React
-  - react-native-safari-view (1.0.0):
-    - React
-  - react-native-safe-area-context (0.3.6):
-    - React
-  - react-native-video (5.0.2):
-    - React
-    - react-native-video/Video (= 5.0.2)
-  - react-native-video/Video (5.0.2):
-    - React
-  - react-native-webview (7.6.0):
-    - React
-  - React-RCTActionSheet (0.60.5):
-    - React-Core (= 0.60.5)
-  - React-RCTAnimation (0.60.5):
-    - React-Core (= 0.60.5)
-  - React-RCTBlob (0.60.5):
-    - React-Core (= 0.60.5)
-    - React-RCTNetwork (= 0.60.5)
-    - React-RCTWebSocket (= 0.60.5)
-  - React-RCTImage (0.60.5):
-    - React-Core (= 0.60.5)
-    - React-RCTNetwork (= 0.60.5)
-  - React-RCTLinking (0.60.5):
-    - React-Core (= 0.60.5)
-  - React-RCTNetwork (0.60.5):
-    - React-Core (= 0.60.5)
-  - React-RCTSettings (0.60.5):
-    - React-Core (= 0.60.5)
-  - React-RCTText (0.60.5):
-    - React-Core (= 0.60.5)
-  - React-RCTVibration (0.60.5):
-    - React-Core (= 0.60.5)
-  - React-RCTWebSocket (0.60.5):
-    - React-Core (= 0.60.5)
-  - rn-fetch-blob (0.10.16):
-    - React-Core
-  - RNAirplay (1.0.0):
-    - React
-  - RNAnalytics (1.1.5):
-    - AstronomerAnalytics
-    - React
-  - RNBootSplash (2.1.0):
-    - React
-  - RNCAsyncStorage (1.9.0):
-    - React
-  - RNDateTimePicker (3.0.3):
-    - React-Core
-  - RNDeviceInfo (4.0.1):
-    - React
-  - RNGestureHandler (1.6.1):
-    - React
-  - RNInAppBrowser (3.4.0):
-    - React
-  - RNPermissions (2.0.10):
-    - React
-  - RNScreens (1.0.0-alpha.23):
-    - React
-  - RNSVG (9.13.6):
-    - React
-  - yoga (0.60.5.React)
-
-DEPENDENCIES:
-  - BVLinearGradient (from `../node_modules/react-native-linear-gradient`)
-  - DoubleConversion (from `../node_modules/react-native/third-party-podspecs/DoubleConversion.podspec`)
-  - Folly (from `../node_modules/react-native/third-party-podspecs/Folly.podspec`)
-  - glog (from `../node_modules/react-native/third-party-podspecs/glog.podspec`)
-  - Permission-Notifications (from `../node_modules/react-native-permissions/ios/Notifications.podspec`)
-  - Permission-PhotoLibrary (from `../node_modules/react-native-permissions/ios/PhotoLibrary.podspec`)
-  - React (from `../node_modules/react-native/`)
-  - React-Core (from `../node_modules/react-native/React`)
-  - React-cxxreact (from `../node_modules/react-native/ReactCommon/cxxreact`)
-  - React-DevSupport (from `../node_modules/react-native/React`)
-  - React-jsi (from `../node_modules/react-native/ReactCommon/jsi`)
-  - React-jsiexecutor (from `../node_modules/react-native/ReactCommon/jsiexecutor`)
-  - React-jsinspector (from `../node_modules/react-native/ReactCommon/jsinspector`)
-  - react-native-config (from `../node_modules/react-native-config`)
-  - "react-native-geolocation (from `../node_modules/@react-native-community/geolocation`)"
-  - react-native-google-cast/NoBluetooth (from `../node_modules/react-native-google-cast/ios/`)
-  - react-native-image-picker (from `../node_modules/react-native-image-picker`)
-  - react-native-maps (from `../node_modules/react-native-maps`)
-  - react-native-music-control (from `../node_modules/react-native-music-control`)
-  - react-native-onesignal (from `../node_modules/react-native-onesignal`)
-  - react-native-passkit-wallet (from `../node_modules/react-native-passkit-wallet`)
-  - react-native-safari-view (from `../node_modules/react-native-safari-view`)
-  - react-native-safe-area-context (from `../node_modules/react-native-safe-area-context`)
-  - react-native-video (from `../node_modules/react-native-video`)
-  - react-native-webview (from `../node_modules/react-native-webview`)
-  - React-RCTActionSheet (from `../node_modules/react-native/Libraries/ActionSheetIOS`)
-  - React-RCTAnimation (from `../node_modules/react-native/Libraries/NativeAnimation`)
-  - React-RCTBlob (from `../node_modules/react-native/Libraries/Blob`)
-  - React-RCTImage (from `../node_modules/react-native/Libraries/Image`)
-  - React-RCTLinking (from `../node_modules/react-native/Libraries/LinkingIOS`)
-  - React-RCTNetwork (from `../node_modules/react-native/Libraries/Network`)
-  - React-RCTSettings (from `../node_modules/react-native/Libraries/Settings`)
-  - React-RCTText (from `../node_modules/react-native/Libraries/Text`)
-  - React-RCTVibration (from `../node_modules/react-native/Libraries/Vibration`)
-  - React-RCTWebSocket (from `../node_modules/react-native/Libraries/WebSocket`)
-  - rn-fetch-blob (from `../node_modules/rn-fetch-blob`)
-  - "RNAirplay (from `../node_modules/@apollosproject/react-native-airplay-btn`)"
-  - "RNAnalytics (from `../node_modules/@metarouter/analytics-react-native`)"
-  - RNBootSplash (from `../node_modules/react-native-bootsplash`)
-  - "RNCAsyncStorage (from `../node_modules/@react-native-community/async-storage`)"
-  - "RNDateTimePicker (from `../node_modules/@react-native-community/datetimepicker`)"
-  - RNDeviceInfo (from `../node_modules/react-native-device-info`)
-  - RNGestureHandler (from `../node_modules/react-native-gesture-handler`)
-  - RNInAppBrowser (from `../node_modules/react-native-inappbrowser-reborn`)
-  - RNPermissions (from `../node_modules/react-native-permissions`)
-  - RNScreens (from `../node_modules/react-native-screens`)
-  - RNSVG (from `../node_modules/react-native-svg`)
-  - yoga (from `../node_modules/react-native/ReactCommon/yoga`)
-
-SPEC REPOS:
-  trunk:
-    - AstronomerAnalytics
-    - boost-for-react-native
-    - google-cast-sdk-no-bluetooth
-    - GTMSessionFetcher
-    - OneSignal
-    - Protobuf
-
-EXTERNAL SOURCES:
-  BVLinearGradient:
-    :path: "../node_modules/react-native-linear-gradient"
-  DoubleConversion:
-    :podspec: "../node_modules/react-native/third-party-podspecs/DoubleConversion.podspec"
-  Folly:
-    :podspec: "../node_modules/react-native/third-party-podspecs/Folly.podspec"
-  glog:
-    :podspec: "../node_modules/react-native/third-party-podspecs/glog.podspec"
-  Permission-Notifications:
-    :path: "../node_modules/react-native-permissions/ios/Notifications.podspec"
-  Permission-PhotoLibrary:
-    :path: "../node_modules/react-native-permissions/ios/PhotoLibrary.podspec"
-  React:
-    :path: "../node_modules/react-native/"
-  React-Core:
-    :path: "../node_modules/react-native/React"
-  React-cxxreact:
-    :path: "../node_modules/react-native/ReactCommon/cxxreact"
-  React-DevSupport:
-    :path: "../node_modules/react-native/React"
-  React-jsi:
-    :path: "../node_modules/react-native/ReactCommon/jsi"
-  React-jsiexecutor:
-    :path: "../node_modules/react-native/ReactCommon/jsiexecutor"
-  React-jsinspector:
-    :path: "../node_modules/react-native/ReactCommon/jsinspector"
-  react-native-config:
-    :path: "../node_modules/react-native-config"
-  react-native-geolocation:
-    :path: "../node_modules/@react-native-community/geolocation"
-  react-native-google-cast:
-    :path: "../node_modules/react-native-google-cast/ios/"
-  react-native-image-picker:
-    :path: "../node_modules/react-native-image-picker"
-  react-native-maps:
-    :path: "../node_modules/react-native-maps"
-  react-native-music-control:
-    :path: "../node_modules/react-native-music-control"
-  react-native-onesignal:
-    :path: "../node_modules/react-native-onesignal"
-  react-native-passkit-wallet:
-    :path: "../node_modules/react-native-passkit-wallet"
-  react-native-safari-view:
-    :path: "../node_modules/react-native-safari-view"
-  react-native-safe-area-context:
-    :path: "../node_modules/react-native-safe-area-context"
-  react-native-video:
-    :path: "../node_modules/react-native-video"
-  react-native-webview:
-    :path: "../node_modules/react-native-webview"
-  React-RCTActionSheet:
-    :path: "../node_modules/react-native/Libraries/ActionSheetIOS"
-  React-RCTAnimation:
-    :path: "../node_modules/react-native/Libraries/NativeAnimation"
-  React-RCTBlob:
-    :path: "../node_modules/react-native/Libraries/Blob"
-  React-RCTImage:
-    :path: "../node_modules/react-native/Libraries/Image"
-  React-RCTLinking:
-    :path: "../node_modules/react-native/Libraries/LinkingIOS"
-  React-RCTNetwork:
-    :path: "../node_modules/react-native/Libraries/Network"
-  React-RCTSettings:
-    :path: "../node_modules/react-native/Libraries/Settings"
-  React-RCTText:
-    :path: "../node_modules/react-native/Libraries/Text"
-  React-RCTVibration:
-    :path: "../node_modules/react-native/Libraries/Vibration"
-  React-RCTWebSocket:
-    :path: "../node_modules/react-native/Libraries/WebSocket"
-  rn-fetch-blob:
-    :path: "../node_modules/rn-fetch-blob"
-  RNAirplay:
-    :path: "../node_modules/@apollosproject/react-native-airplay-btn"
-  RNAnalytics:
-    :path: "../node_modules/@metarouter/analytics-react-native"
-  RNBootSplash:
-    :path: "../node_modules/react-native-bootsplash"
-  RNCAsyncStorage:
-    :path: "../node_modules/@react-native-community/async-storage"
-  RNDateTimePicker:
-    :path: "../node_modules/@react-native-community/datetimepicker"
-  RNDeviceInfo:
-    :path: "../node_modules/react-native-device-info"
-  RNGestureHandler:
-    :path: "../node_modules/react-native-gesture-handler"
-  RNInAppBrowser:
-    :path: "../node_modules/react-native-inappbrowser-reborn"
-  RNPermissions:
-    :path: "../node_modules/react-native-permissions"
-  RNScreens:
-    :path: "../node_modules/react-native-screens"
-  RNSVG:
-    :path: "../node_modules/react-native-svg"
-  yoga:
-    :path: "../node_modules/react-native/ReactCommon/yoga"
-
-SPEC CHECKSUMS:
-  AstronomerAnalytics: 36f48678a387e41481650edd6247c6c95d994131
-  boost-for-react-native: 39c7adb57c4e60d6c5479dd8623128eb5b3f0f2c
-  BVLinearGradient: e3aad03778a456d77928f594a649e96995f1c872
-  DoubleConversion: 5805e889d232975c086db112ece9ed034df7a0b2
-  Folly: 30e7936e1c45c08d884aa59369ed951a8e68cf51
-  glog: 1f3da668190260b06b429bb211bfbee5cd790c28
-  google-cast-sdk-no-bluetooth: 622cfa34fc9a42ad87b9e009b72dbb02b08c1307
-  GTMSessionFetcher: b3503b20a988c4e20cc189aa798fd18220133f52
-  OneSignal: 9531e385388565f4d31797ddadbe0fcc786430ec
-  Permission-Notifications: c9eb3a2da68dc0f37a8dc67d37bd28d150c5041d
-  Permission-PhotoLibrary: e59a7a687e002e8c8c46946c26520934ba85a688
-  Protobuf: 3dac39b34a08151c6d949560efe3f86134a3f748
-  React: 53c53c4d99097af47cf60594b8706b4e3321e722
-  React-Core: ba421f6b4f4cbe2fb17c0b6fc675f87622e78a64
-  React-cxxreact: 8384287780c4999351ad9b6e7a149d9ed10a2395
-  React-DevSupport: 197fb409737cff2c4f9986e77c220d7452cb9f9f
-  React-jsi: 4d8c9efb6312a9725b18d6fc818ffc103f60fec2
-  React-jsiexecutor: 90ad2f9db09513fc763bc757fdc3c4ff8bde2a30
-  React-jsinspector: e08662d1bf5b129a3d556eb9ea343a3f40353ae4
-  react-native-config: 55548054279d92e0e4566ea15a8b9b81028ec342
-  react-native-geolocation: c956aeb136625c23e0dce0467664af2c437888c9
-  react-native-google-cast: 410619ef162b8b91815ecf7271502224998dee8e
-  react-native-image-picker: e6e06d4315e3c85bad17e4b2002cd29f11d202c8
-  react-native-maps: 6e499eee4eabf422ba8b6f94e993cc768bf35153
-  react-native-music-control: dcfe5b61e56a15898c4618579cb8ce612c9d21a8
-  react-native-onesignal: ad2eaab1517951e50d19fa3eccd16d3048167181
-  react-native-passkit-wallet: 51e3babdaeec4c10b5736786ebd1bfb470fcaa36
-  react-native-safari-view: 955d7160d159241b8e9395d12d10ea0ef863dcdd
-  react-native-safe-area-context: e380a6f783ccaec848e2f3cc8eb205a62362950d
-  react-native-video: d01ed7ff1e38fa7dcc6c15c94cf505e661b7bfd0
-  react-native-webview: db4682f1698ab4b17a5e88f951031d203ff8aea8
-  React-RCTActionSheet: b0f1ea83f4bf75fb966eae9bfc47b78c8d3efd90
-  React-RCTAnimation: 359ba1b5690b1e87cc173558a78e82d35919333e
-  React-RCTBlob: 5e2b55f76e9a1c7ae52b826923502ddc3238df24
-  React-RCTImage: f5f1c50922164e89bdda67bcd0153952a5cfe719
-  React-RCTLinking: d0ecbd791e9ddddc41fa1f66b0255de90e8ee1e9
-  React-RCTNetwork: e26946300b0ab7bb6c4a6348090e93fa21f33a9d
-  React-RCTSettings: d0d37cb521b7470c998595a44f05847777cc3f42
-  React-RCTText: b074d89033583d4f2eb5faf7ea2db3a13c7553a2
-  React-RCTVibration: 2105b2e0e2b66a6408fc69a46c8a7fb5b2fdade0
-  React-RCTWebSocket: cd932a16b7214898b6b7f788c8bddb3637246ac4
-  rn-fetch-blob: 651b8d076b43d0d7aa294a3d9ec16c00aab8bef9
-  RNAirplay: 75777dd55dafbd3687703c3eb9c290ea6cc43248
-  RNAnalytics: 360b0680753d0e1d37152a25d47aa34a015cab72
-  RNBootSplash: fbf76a4bf1c03e9acd1dd08ce064847f26d6d8bf
-  RNCAsyncStorage: 453cd7c335ec9ba3b877e27d02238956b76f3268
-  RNDateTimePicker: 6f62fd42ac8b58bcc30c43ac3620e5097e8a227f
-  RNDeviceInfo: 687c1b2ab6d86ff1ca1208783320cd144138c7f2
-  RNGestureHandler: 8f09cd560f8d533eb36da5a6c5a843af9f056b38
-  RNInAppBrowser: c1a0dad2734458d79bcb6c8f4297ba8658a1da9f
-  RNPermissions: 1008d3511fee0e25739cf81c4af0d1b2248f1053
-  RNScreens: f28b48b8345f2f5f39ed6195518291515032a788
-  RNSVG: 8ba35cbeb385a52fd960fd28db9d7d18b4c2974f
-  yoga: 312528f5bbbba37b4dcea5ef00e8b4033fdd9411
-
-PODFILE CHECKSUM: 4565ebd278dbfcfe1075b51288219122c2ebd8fc
-
-COCOAPODS: 1.8.4
diff --git a/apolloschurchapp/ios/apolloschurchapp-tvOS/Info.plist b/apolloschurchapp/ios/apolloschurchapp-tvOS/Info.plist
index facf021..4ea56fe 100644
--- a/apolloschurchapp/ios/apolloschurchapp-tvOS/Info.plist
+++ b/apolloschurchapp/ios/apolloschurchapp-tvOS/Info.plist
@@ -15,13 +15,13 @@
 	<key>CFBundlePackageType</key>
 	<string>APPL</string>
 	<key>CFBundleShortVersionString</key>
-	<string>1.3.1</string>
+	<string>0.4.0</string>
 	<key>CFBundleSignature</key>
 	<string>????</string>
 	<key>CFBundleVersion</key>
-	<string>274</string>
+	<string>1</string>
 	<key>LSRequiresIPhoneOS</key>
-	<true />
+	<true/>
 	<key>UILaunchStoryboardName</key>
 	<string>LaunchScreen</string>
 	<key>UIRequiredDeviceCapabilities</key>
@@ -35,17 +35,18 @@
 		<string>UIInterfaceOrientationLandscapeRight</string>
 	</array>
 	<key>UIViewControllerBasedStatusBarAppearance</key>
-	<false />
+	<false/>
 	<key>NSLocationWhenInUseUsageDescription</key>
-	<string />
+	<string></string>
 	<key>NSAppTransportSecurity</key>
+	<!--See http://ste.vn/2015/06/10/configuring-app-transport-security-ios-9-osx-10-11/ -->
 	<dict>
 		<key>NSExceptionDomains</key>
 		<dict>
 			<key>localhost</key>
 			<dict>
 				<key>NSExceptionAllowsInsecureHTTPLoads</key>
-				<true />
+				<true/>
 			</dict>
 		</dict>
 	</dict>
diff --git a/apolloschurchapp/ios/apolloschurchapp-tvOSTests/Info.plist b/apolloschurchapp/ios/apolloschurchapp-tvOSTests/Info.plist
index 9433cce..3bbe4e6 100644
--- a/apolloschurchapp/ios/apolloschurchapp-tvOSTests/Info.plist
+++ b/apolloschurchapp/ios/apolloschurchapp-tvOSTests/Info.plist
@@ -15,10 +15,10 @@
 	<key>CFBundlePackageType</key>
 	<string>BNDL</string>
 	<key>CFBundleShortVersionString</key>
-	<string>1.3.1</string>
+	<string>0.4.0</string>
 	<key>CFBundleSignature</key>
 	<string>????</string>
 	<key>CFBundleVersion</key>
-	<string>274</string>
+	<string>1</string>
 </dict>
 </plist>
diff --git a/apolloschurchapp/ios/apolloschurchapp.xcodeproj/project.pbxproj b/apolloschurchapp/ios/apolloschurchapp.xcodeproj/project.pbxproj
index f5d75d6..e30d511 100644
--- a/apolloschurchapp/ios/apolloschurchapp.xcodeproj/project.pbxproj
+++ b/apolloschurchapp/ios/apolloschurchapp.xcodeproj/project.pbxproj
@@ -7,42 +7,101 @@
 	objects = {
 
 /* Begin PBXBuildFile section */
+		00C302E51ABCBA2D00DB3ED1 /* libRCTActionSheet.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 00C302AC1ABCB8CE00DB3ED1 /* libRCTActionSheet.a */; };
+		00C302E71ABCBA2D00DB3ED1 /* libRCTGeolocation.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 00C302BA1ABCB90400DB3ED1 /* libRCTGeolocation.a */; };
+		00C302E81ABCBA2D00DB3ED1 /* libRCTImage.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 00C302C01ABCB91800DB3ED1 /* libRCTImage.a */; };
+		00C302E91ABCBA2D00DB3ED1 /* libRCTNetwork.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 00C302DC1ABCB9D200DB3ED1 /* libRCTNetwork.a */; };
+		00C302EA1ABCBA2D00DB3ED1 /* libRCTVibration.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 00C302E41ABCB9EE00DB3ED1 /* libRCTVibration.a */; };
 		00E356F31AD99517003FC87E /* apolloschurchappTests.m in Sources */ = {isa = PBXBuildFile; fileRef = 00E356F21AD99517003FC87E /* apolloschurchappTests.m */; };
-		01F091B02048490A8F9EF4FE /* Inter-UI-Italic.otf in Resources */ = {isa = PBXBuildFile; fileRef = 63F6EE53A9B44B4388B5F1C2 /* Inter-UI-Italic.otf */; };
-		08CE105F17284254AD54AF84 /* DroidSerif-Bold.ttf in Resources */ = {isa = PBXBuildFile; fileRef = E3B8A0AC5A6B4FABB3BDF6CB /* DroidSerif-Bold.ttf */; };
+		0D4EDF6EBA274F9D93DDED76 /* Inter-UI-MediumItalic.otf in Resources */ = {isa = PBXBuildFile; fileRef = F79112193F3548D284406ABF /* Inter-UI-MediumItalic.otf */; };
+		133E29F31AD74F7200F7D852 /* libRCTLinking.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 78C398B91ACF4ADC00677621 /* libRCTLinking.a */; };
+		139105C61AF99C1200B5F7CC /* libRCTSettings.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 139105C11AF99BAD00B5F7CC /* libRCTSettings.a */; };
+		139FDEF61B0652A700C62182 /* libRCTWebSocket.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 139FDEF41B06529B00C62182 /* libRCTWebSocket.a */; };
 		13B07FBC1A68108700A75B9A /* AppDelegate.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB01A68108700A75B9A /* AppDelegate.m */; };
+		13B07FBD1A68108700A75B9A /* LaunchScreen.xib in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB11A68108700A75B9A /* LaunchScreen.xib */; };
 		13B07FBF1A68108700A75B9A /* Images.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB51A68108700A75B9A /* Images.xcassets */; };
 		13B07FC11A68108700A75B9A /* main.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB71A68108700A75B9A /* main.m */; };
-		1C48DCDE11AC47C48E918489 /* Inter-UI-Medium.otf in Resources */ = {isa = PBXBuildFile; fileRef = DC74A378C1CC40E4B6192D7F /* Inter-UI-Medium.otf */; };
-		25B9E67E3B46D33F45473A84 /* libPods-apolloschurchapp-tvOSTests.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 4F64CCA987A0419EB9C02236 /* libPods-apolloschurchapp-tvOSTests.a */; };
+		140ED2AC1D01E1AD002B40FF /* libReact.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 146834041AC3E56700842450 /* libReact.a */; };
+		146834051AC3E58100842450 /* libReact.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 146834041AC3E56700842450 /* libReact.a */; };
+		1680179655164C96985B5731 /* libMusicControl.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 643D51DCF8F14993B9AA6990 /* libMusicControl.a */; };
+		1C1FD8B313AB4A6583A0D31B /* libRNDeviceInfo.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 14D838A2FAE743C7B1DA5E31 /* libRNDeviceInfo.a */; };
 		2D02E4BC1E0B4A80006451C7 /* AppDelegate.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB01A68108700A75B9A /* AppDelegate.m */; };
 		2D02E4BD1E0B4A84006451C7 /* Images.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB51A68108700A75B9A /* Images.xcassets */; };
 		2D02E4BF1E0B4AB3006451C7 /* main.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB71A68108700A75B9A /* main.m */; };
+		2D02E4C21E0B4AEC006451C7 /* libRCTAnimation.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 5E9157351DD0AC6500FF2AA8 /* libRCTAnimation.a */; };
+		2D02E4C31E0B4AEC006451C7 /* libRCTImage-tvOS.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 3DAD3E841DF850E9000B6D8A /* libRCTImage-tvOS.a */; };
+		2D02E4C41E0B4AEC006451C7 /* libRCTLinking-tvOS.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 3DAD3E881DF850E9000B6D8A /* libRCTLinking-tvOS.a */; };
+		2D02E4C51E0B4AEC006451C7 /* libRCTNetwork-tvOS.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 3DAD3E8C1DF850E9000B6D8A /* libRCTNetwork-tvOS.a */; };
+		2D02E4C61E0B4AEC006451C7 /* libRCTSettings-tvOS.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 3DAD3E901DF850E9000B6D8A /* libRCTSettings-tvOS.a */; };
+		2D02E4C71E0B4AEC006451C7 /* libRCTText-tvOS.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 3DAD3E941DF850E9000B6D8A /* libRCTText-tvOS.a */; };
+		2D02E4C81E0B4AEC006451C7 /* libRCTWebSocket-tvOS.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 3DAD3E991DF850E9000B6D8A /* libRCTWebSocket-tvOS.a */; };
 		2D16E6881FA4F8E400B85C8A /* libReact.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 2D16E6891FA4F8E400B85C8A /* libReact.a */; };
 		2DCD954D1E0B4F2C00145EB5 /* apolloschurchappTests.m in Sources */ = {isa = PBXBuildFile; fileRef = 00E356F21AD99517003FC87E /* apolloschurchappTests.m */; };
-		578FFEC1D7D54C9B871A9E5B /* Inter-UI-BlackItalic.otf in Resources */ = {isa = PBXBuildFile; fileRef = 5A5A2BC2998547F4816B82E4 /* Inter-UI-BlackItalic.otf */; };
-		68D1351E80AA4A2C96288FD9 /* Inter-UI-Black.otf in Resources */ = {isa = PBXBuildFile; fileRef = EC21254B449443F99016EBFD /* Inter-UI-Black.otf */; };
-		7FBC6BC3CE8D48298F9850A9 /* Inter-UI-Bold.otf in Resources */ = {isa = PBXBuildFile; fileRef = D5157D807E164356ADE87867 /* Inter-UI-Bold.otf */; };
-		82AAE52E24187BB500D1EEC7 /* BootSplash.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = 82AAE52D24187BB500D1EEC7 /* BootSplash.storyboard */; };
-		82AAE52F24187BB500D1EEC7 /* BootSplash.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = 82AAE52D24187BB500D1EEC7 /* BootSplash.storyboard */; };
-		82AAE53024187BB500D1EEC7 /* BootSplash.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = 82AAE52D24187BB500D1EEC7 /* BootSplash.storyboard */; };
-		82AAE53124187BB500D1EEC7 /* BootSplash.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = 82AAE52D24187BB500D1EEC7 /* BootSplash.storyboard */; };
-		82AAE537241888D100D1EEC7 /* Images.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB51A68108700A75B9A /* Images.xcassets */; };
-		82AAE538241888D200D1EEC7 /* Images.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB51A68108700A75B9A /* Images.xcassets */; };
-		894732A70B4740678E85B593 /* Inter-UI-BoldItalic.otf in Resources */ = {isa = PBXBuildFile; fileRef = 2F5410F239E9477B9C2E86BD /* Inter-UI-BoldItalic.otf */; };
-		8EA9BDE542E09F685A47D9BE /* libPods-apolloschurchapp-tvOS.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 38B9762ACA099D28C28DBB31 /* libPods-apolloschurchapp-tvOS.a */; };
-		90743C40BF544F10A810C43C /* DroidSerif-Italic.ttf in Resources */ = {isa = PBXBuildFile; fileRef = ADC3D2DB245545ADB1CAB3FE /* DroidSerif-Italic.ttf */; };
-		93A2B0A9328A46A4B7DD5EFA /* DroidSerif-Regular.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 4E007B33EDD74B82AEF02C24 /* DroidSerif-Regular.ttf */; };
-		A415698B9815C7305EDB7AA7 /* libPods-apolloschurchappTests.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 560CBCD50AE7D282715D134E /* libPods-apolloschurchappTests.a */; };
-		AB3BD177B8A14193A5EEDDF8 /* Inter-UI-Regular.otf in Resources */ = {isa = PBXBuildFile; fileRef = A613256118404CB691DE2C8E /* Inter-UI-Regular.otf */; };
-		B02F194A3F6A4FE29AC799B4 /* DroidSerif-BoldItalic.ttf in Resources */ = {isa = PBXBuildFile; fileRef = A93F9D112A034626A9421759 /* DroidSerif-BoldItalic.ttf */; };
-		E875558F3FB8FA2024EF7DC2 /* libPods-apolloschurchapp.a in Frameworks */ = {isa = PBXBuildFile; fileRef = DDB6B5B7B6A0D1ECB68CF0DD /* libPods-apolloschurchapp.a */; };
-		ED297163215061F000B7C4FE /* JavaScriptCore.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = ED297162215061F000B7C4FE /* JavaScriptCore.framework */; };
-		ED2971652150620600B7C4FE /* JavaScriptCore.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = ED2971642150620600B7C4FE /* JavaScriptCore.framework */; };
-		FCB3069DB5DD4170B2CAEFC4 /* Inter-UI-MediumItalic.otf in Resources */ = {isa = PBXBuildFile; fileRef = A460FD7884FD4574A818005A /* Inter-UI-MediumItalic.otf */; };
+		2DF0FFEE2056DD460020B375 /* libReact.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 3DAD3EA31DF850E9000B6D8A /* libReact.a */; };
+		3CAA28FFFCCF46518672AC8F /* libDBCustomTabs.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 71E6499CCC9D4DB2ADD365D8 /* libDBCustomTabs.a */; };
+		417027FD83CA4902AB4DB2B4 /* Inter-UI-Black.otf in Resources */ = {isa = PBXBuildFile; fileRef = 8E13C8F9AE60487C9ED95C21 /* Inter-UI-Black.otf */; };
+		4B29B8AACC2A4FB7BA6A8EEB /* libSafariViewManager.a in Frameworks */ = {isa = PBXBuildFile; fileRef = BF5A2B416EB74A44923FED7B /* libSafariViewManager.a */; };
+		59D8DFA78CDF4642892CC142 /* DroidSerif-BoldItalic.ttf in Resources */ = {isa = PBXBuildFile; fileRef = D979B537509247C099CE3F24 /* DroidSerif-BoldItalic.ttf */; };
+		5CA1D8E805684478B04ABB60 /* Inter-UI-Italic.otf in Resources */ = {isa = PBXBuildFile; fileRef = 8CA3C04F98954FB2895CD36D /* Inter-UI-Italic.otf */; };
+		5E9157361DD0AC6A00FF2AA8 /* libRCTAnimation.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 5E9157331DD0AC6500FF2AA8 /* libRCTAnimation.a */; };
+		6E4442FB39BE4F898DE4C454 /* Inter-UI-BlackItalic.otf in Resources */ = {isa = PBXBuildFile; fileRef = 22246A6BC58E4CF09A22A4DF /* Inter-UI-BlackItalic.otf */; };
+		7D060CA312AB4E828CD60DDC /* Inter-UI-Regular.otf in Resources */ = {isa = PBXBuildFile; fileRef = 10F42B11F27E467A8C71C280 /* Inter-UI-Regular.otf */; };
+		832341BD1AAA6AB300B99B32 /* libRCTText.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 832341B51AAA6A8300B99B32 /* libRCTText.a */; };
+		86D0B47B5BF143E797822EF1 /* libRCTVideo.a in Frameworks */ = {isa = PBXBuildFile; fileRef = FC8FFB7C37BB4499AEB6FA37 /* libRCTVideo.a */; };
+		89331B8BDAF24EF5BE08A485 /* libRNSVG.a in Frameworks */ = {isa = PBXBuildFile; fileRef = CFAF46FBA8B44C7B8DCA7707 /* libRNSVG.a */; };
+		9388C44B949C4DBAAA7256D5 /* libBVLinearGradient.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 60E52391C9744A46B3925A78 /* libBVLinearGradient.a */; };
+		9ACBD642B18D41C9BB1E4D9E /* DroidSerif-Italic.ttf in Resources */ = {isa = PBXBuildFile; fileRef = F9CFD638A5414DFF961A8D11 /* DroidSerif-Italic.ttf */; };
+		A173C226549E48B991AC5D98 /* Inter-UI-Medium.otf in Resources */ = {isa = PBXBuildFile; fileRef = 9FD7D997F4F14C439AC699B3 /* Inter-UI-Medium.otf */; };
+		AB7B2136E56C4B40B64F9C87 /* libMusicControl-tvOS.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 67E66409EF8A4BC7A1B9E054 /* libMusicControl-tvOS.a */; };
+		AC4174D90AD644A28D0CA9D9 /* libRNDeviceInfo-tvOS.a in Frameworks */ = {isa = PBXBuildFile; fileRef = A574C961754742F688E43151 /* libRNDeviceInfo-tvOS.a */; };
+		ADBDB9381DFEBF1600ED6528 /* libRCTBlob.a in Frameworks */ = {isa = PBXBuildFile; fileRef = ADBDB9271DFEBF0700ED6528 /* libRCTBlob.a */; };
+		B5DE58C6CF1E4E7ABDD1B48D /* libRNImagePicker.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 3F58D699A37B432BA1C0F092 /* libRNImagePicker.a */; };
+		C87CA8735EEB43C4A55CB285 /* DroidSerif-Bold.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 4629759169AB4756B447B16A /* DroidSerif-Bold.ttf */; };
+		D5744BF3B41D4BC49F93CD68 /* DroidSerif-Regular.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 76E6AD5294554A5FA53DB415 /* DroidSerif-Regular.ttf */; };
+		DEF13113111A40DF8F4FEB13 /* libRNSVG-tvOS.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 84716CBFF56347BA880A16C6 /* libRNSVG-tvOS.a */; };
+		E374C61F2AAF41D3B615AB44 /* Inter-UI-BoldItalic.otf in Resources */ = {isa = PBXBuildFile; fileRef = 32A467E2C3364ABDBB7BD0D1 /* Inter-UI-BoldItalic.otf */; };
+		F3F4A3D13570438F9562746F /* libSplashScreen.a in Frameworks */ = {isa = PBXBuildFile; fileRef = F08D1EBF0C2A4E6798AA8F36 /* libSplashScreen.a */; };
+		F8FAD93CCE5641A8B87611EA /* Inter-UI-Bold.otf in Resources */ = {isa = PBXBuildFile; fileRef = FB25CB02F40D4CC39DDA3C74 /* Inter-UI-Bold.otf */; };
+		13FE6F3652044DDCABABA38C /* libRNDeviceInfo.a in Frameworks */ = {isa = PBXBuildFile; fileRef = DFDDD075C3884791ABF84D1F /* libRNDeviceInfo.a */; };
+		5C09A4CCB793479496045758 /* libRNDeviceInfo-tvOS.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 57A2A2F0E39F43CEA828D603 /* libRNDeviceInfo-tvOS.a */; };
 /* End PBXBuildFile section */
 
 /* Begin PBXContainerItemProxy section */
+		00C302AB1ABCB8CE00DB3ED1 /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 00C302A71ABCB8CE00DB3ED1 /* RCTActionSheet.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 134814201AA4EA6300B7C361;
+			remoteInfo = RCTActionSheet;
+		};
+		00C302B91ABCB90400DB3ED1 /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 00C302B51ABCB90400DB3ED1 /* RCTGeolocation.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 134814201AA4EA6300B7C361;
+			remoteInfo = RCTGeolocation;
+		};
+		00C302BF1ABCB91800DB3ED1 /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 00C302BB1ABCB91800DB3ED1 /* RCTImage.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 58B5115D1A9E6B3D00147676;
+			remoteInfo = RCTImage;
+		};
+		00C302DB1ABCB9D200DB3ED1 /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 00C302D31ABCB9D200DB3ED1 /* RCTNetwork.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 58B511DB1A9E6C8500147676;
+			remoteInfo = RCTNetwork;
+		};
+		00C302E31ABCB9EE00DB3ED1 /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 00C302DF1ABCB9EE00DB3ED1 /* RCTVibration.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 832C81801AAF6DEF007FA2F7;
+			remoteInfo = RCTVibration;
+		};
 		00E356F41AD99517003FC87E /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
 			containerPortal = 83CBB9F71A601CBA00E9B192 /* Project object */;
@@ -50,6 +109,27 @@
 			remoteGlobalIDString = 13B07F861A680F5B00A75B9A;
 			remoteInfo = apolloschurchapp;
 		};
+		139105C01AF99BAD00B5F7CC /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 139105B61AF99BAD00B5F7CC /* RCTSettings.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 134814201AA4EA6300B7C361;
+			remoteInfo = RCTSettings;
+		};
+		139FDEF31B06529B00C62182 /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 139FDEE61B06529A00C62182 /* RCTWebSocket.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 3C86DF461ADF2C930047B81A;
+			remoteInfo = RCTWebSocket;
+		};
+		146834031AC3E56700842450 /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 83CBBA2E1A601D0E00E9B192;
+			remoteInfo = React;
+		};
 		2D02E4911E0B4A5D006451C7 /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
 			containerPortal = 83CBB9F71A601CBA00E9B192 /* Project object */;
@@ -57,51 +137,372 @@
 			remoteGlobalIDString = 2D02E47A1E0B4A5D006451C7;
 			remoteInfo = "apolloschurchapp-tvOS";
 		};
+		2D16E6711FA4F8DC00B85C8A /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = ADBDB91F1DFEBF0600ED6528 /* RCTBlob.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = ADD01A681E09402E00F6D226;
+			remoteInfo = "RCTBlob-tvOS";
+		};
+		2D16E6831FA4F8DC00B85C8A /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 139FDEE61B06529A00C62182 /* RCTWebSocket.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 3DBE0D001F3B181A0099AA32;
+			remoteInfo = fishhook;
+		};
+		2D16E6851FA4F8DC00B85C8A /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 139FDEE61B06529A00C62182 /* RCTWebSocket.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 3DBE0D0D1F3B181C0099AA32;
+			remoteInfo = "fishhook-tvOS";
+		};
+		2DF0FFDE2056DD460020B375 /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = EBF21BDC1FC498900052F4D5;
+			remoteInfo = jsinspector;
+		};
+		2DF0FFE02056DD460020B375 /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = EBF21BFA1FC4989A0052F4D5;
+			remoteInfo = "jsinspector-tvOS";
+		};
+		2DF0FFE22056DD460020B375 /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 139D7ECE1E25DB7D00323FB7;
+			remoteInfo = "third-party";
+		};
+		2DF0FFE42056DD460020B375 /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 3D383D3C1EBD27B6005632C8;
+			remoteInfo = "third-party-tvOS";
+		};
+		2DF0FFE62056DD460020B375 /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 139D7E881E25C6D100323FB7;
+			remoteInfo = "double-conversion";
+		};
+		2DF0FFE82056DD460020B375 /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 3D383D621EBD27B9005632C8;
+			remoteInfo = "double-conversion-tvOS";
+		};
+		2DF0FFEA2056DD460020B375 /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 9936F3131F5F2E4B0010BF04;
+			remoteInfo = privatedata;
+		};
+		2DF0FFEC2056DD460020B375 /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 9936F32F1F5F2E5B0010BF04;
+			remoteInfo = "privatedata-tvOS";
+		};
+		3DAD3E831DF850E9000B6D8A /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 00C302BB1ABCB91800DB3ED1 /* RCTImage.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 2D2A283A1D9B042B00D4039D;
+			remoteInfo = "RCTImage-tvOS";
+		};
+		3DAD3E871DF850E9000B6D8A /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 78C398B01ACF4ADC00677621 /* RCTLinking.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 2D2A28471D9B043800D4039D;
+			remoteInfo = "RCTLinking-tvOS";
+		};
+		3DAD3E8B1DF850E9000B6D8A /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 00C302D31ABCB9D200DB3ED1 /* RCTNetwork.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 2D2A28541D9B044C00D4039D;
+			remoteInfo = "RCTNetwork-tvOS";
+		};
+		3DAD3E8F1DF850E9000B6D8A /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 139105B61AF99BAD00B5F7CC /* RCTSettings.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 2D2A28611D9B046600D4039D;
+			remoteInfo = "RCTSettings-tvOS";
+		};
+		3DAD3E931DF850E9000B6D8A /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 832341B01AAA6A8300B99B32 /* RCTText.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 2D2A287B1D9B048500D4039D;
+			remoteInfo = "RCTText-tvOS";
+		};
+		3DAD3E981DF850E9000B6D8A /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 139FDEE61B06529A00C62182 /* RCTWebSocket.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 2D2A28881D9B049200D4039D;
+			remoteInfo = "RCTWebSocket-tvOS";
+		};
+		3DAD3EA21DF850E9000B6D8A /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 2D2A28131D9B038B00D4039D;
+			remoteInfo = "React-tvOS";
+		};
+		3DAD3EA41DF850E9000B6D8A /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 3D3C059A1DE3340900C268FA;
+			remoteInfo = yoga;
+		};
+		3DAD3EA61DF850E9000B6D8A /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 3D3C06751DE3340C00C268FA;
+			remoteInfo = "yoga-tvOS";
+		};
+		3DAD3EA81DF850E9000B6D8A /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 3D3CD9251DE5FBEC00167DC4;
+			remoteInfo = cxxreact;
+		};
+		3DAD3EAA1DF850E9000B6D8A /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 3D3CD9321DE5FBEE00167DC4;
+			remoteInfo = "cxxreact-tvOS";
+		};
+		3DAD3EAC1DF850E9000B6D8A /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 3D3CD90B1DE5FBD600167DC4;
+			remoteInfo = jschelpers;
+		};
+		3DAD3EAE1DF850E9000B6D8A /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 3D3CD9181DE5FBD800167DC4;
+			remoteInfo = "jschelpers-tvOS";
+		};
+		5E9157321DD0AC6500FF2AA8 /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 5E91572D1DD0AC6500FF2AA8 /* RCTAnimation.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 134814201AA4EA6300B7C361;
+			remoteInfo = RCTAnimation;
+		};
+		5E9157341DD0AC6500FF2AA8 /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 5E91572D1DD0AC6500FF2AA8 /* RCTAnimation.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 2D2A28201D9B03D100D4039D;
+			remoteInfo = "RCTAnimation-tvOS";
+		};
+		78C398B81ACF4ADC00677621 /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 78C398B01ACF4ADC00677621 /* RCTLinking.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 134814201AA4EA6300B7C361;
+			remoteInfo = RCTLinking;
+		};
+		791434762126017B006F13B7 /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 46704FC4FCEB45B6B9DD92BB /* BVLinearGradient.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 134814201AA4EA6300B7C361;
+			remoteInfo = BVLinearGradient;
+		};
+		791434782126017B006F13B7 /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 46704FC4FCEB45B6B9DD92BB /* BVLinearGradient.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 64AA15081EF7F30100718508;
+			remoteInfo = "BVLinearGradient-tvOS";
+		};
+		7914347C2126017B006F13B7 /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 2F8741F0746D4C8A89970C4D /* RCTVideo.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 134814201AA4EA6300B7C361;
+			remoteInfo = RCTVideo;
+		};
+		7914347E2126017B006F13B7 /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 2F8741F0746D4C8A89970C4D /* RCTVideo.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 641E28441F0EEC8500443AF6;
+			remoteInfo = "RCTVideo-tvOS";
+		};
+		791434812126017B006F13B7 /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 6BAAC994942548609D0EEECA /* ReactNativeCustomTabs.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = DA7118681CC9158A0087DF95;
+			remoteInfo = DBCustomTabs;
+		};
+		791434852126017B006F13B7 /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 01441BF099BE44EE8BA8E390 /* RNSVG.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 0CF68AC11AF0540F00FF9E5C;
+			remoteInfo = RNSVG;
+		};
+		791434872126017B006F13B7 /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 01441BF099BE44EE8BA8E390 /* RNSVG.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 94DDAC5C1F3D024300EED511;
+			remoteInfo = "RNSVG-tvOS";
+		};
+		7914348A2126017B006F13B7 /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 6B6E5A404A4B4A34B18D7D34 /* SafariViewManager.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 134814201AA4EA6300B7C361;
+			remoteInfo = SafariViewManager;
+		};
+		7914348D2126017B006F13B7 /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = A64D00F181AE4927A4632B6E /* SplashScreen.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 3D7682761D8E76B80014119E;
+			remoteInfo = SplashScreen;
+		};
+		796F2532212CAD5D00C6935E /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 239ECFF08FA841B99DB1CAFA /* RNDeviceInfo.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = DA5891D81BA9A9FC002B4DB2;
+			remoteInfo = RNDeviceInfo;
+		};
+		796F2534212CAD5D00C6935E /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 239ECFF08FA841B99DB1CAFA /* RNDeviceInfo.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = E72EC1401F7ABB5A0001BC90;
+			remoteInfo = "RNDeviceInfo-tvOS";
+		};
+		797304182146322D00F6E05B /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 4BD3C4E6742F4F6380640CA9 /* MusicControl.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 134814201AA4EA6300B7C361;
+			remoteInfo = MusicControl;
+		};
+		7973041A2146322D00F6E05B /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 4BD3C4E6742F4F6380640CA9 /* MusicControl.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = A3FC285E1EA7A8350097B6A9;
+			remoteInfo = "MusicControl-tvOS";
+		};
+		832341B41AAA6A8300B99B32 /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 832341B01AAA6A8300B99B32 /* RCTText.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 58B5119B1A9E6C1200147676;
+			remoteInfo = RCTText;
+		};
+		ADBDB9261DFEBF0700ED6528 /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = ADBDB91F1DFEBF0600ED6528 /* RCTBlob.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 358F4ED71D1E81A9004DF814;
+			remoteInfo = RCTBlob;
+		};
+		BF9931702138673B0077FD20 /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 3BD7DCDF7B194D7BB9BE3C6C /* RNImagePicker.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 014A3B5C1C6CF33500B6D375;
+			remoteInfo = RNImagePicker;
+		};
 /* End PBXContainerItemProxy section */
 
 /* Begin PBXFileReference section */
 		008F07F21AC5B25A0029DE68 /* main.jsbundle */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = main.jsbundle; sourceTree = "<group>"; };
+		00C302A71ABCB8CE00DB3ED1 /* RCTActionSheet.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = RCTActionSheet.xcodeproj; path = "../node_modules/react-native/Libraries/ActionSheetIOS/RCTActionSheet.xcodeproj"; sourceTree = "<group>"; };
+		00C302B51ABCB90400DB3ED1 /* RCTGeolocation.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = RCTGeolocation.xcodeproj; path = "../node_modules/react-native/Libraries/Geolocation/RCTGeolocation.xcodeproj"; sourceTree = "<group>"; };
+		00C302BB1ABCB91800DB3ED1 /* RCTImage.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = RCTImage.xcodeproj; path = "../node_modules/react-native/Libraries/Image/RCTImage.xcodeproj"; sourceTree = "<group>"; };
+		00C302D31ABCB9D200DB3ED1 /* RCTNetwork.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = RCTNetwork.xcodeproj; path = "../node_modules/react-native/Libraries/Network/RCTNetwork.xcodeproj"; sourceTree = "<group>"; };
+		00C302DF1ABCB9EE00DB3ED1 /* RCTVibration.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = RCTVibration.xcodeproj; path = "../node_modules/react-native/Libraries/Vibration/RCTVibration.xcodeproj"; sourceTree = "<group>"; };
 		00E356EE1AD99517003FC87E /* apolloschurchappTests.xctest */ = {isa = PBXFileReference; explicitFileType = wrapper.cfbundle; includeInIndex = 0; path = apolloschurchappTests.xctest; sourceTree = BUILT_PRODUCTS_DIR; };
 		00E356F11AD99517003FC87E /* Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; path = Info.plist; sourceTree = "<group>"; };
 		00E356F21AD99517003FC87E /* apolloschurchappTests.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; path = apolloschurchappTests.m; sourceTree = "<group>"; };
-		0D480D95FC7F4569B8B934E3 /* libRCTOneSignal.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libRCTOneSignal.a; sourceTree = "<group>"; };
+		01441BF099BE44EE8BA8E390 /* RNSVG.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = RNSVG.xcodeproj; path = "../node_modules/react-native-svg/ios/RNSVG.xcodeproj"; sourceTree = "<group>"; };
+		10F42B11F27E467A8C71C280 /* Inter-UI-Regular.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-Regular.otf"; path = "../assets/fonts/Inter-UI-Regular.otf"; sourceTree = "<group>"; };
+		139105B61AF99BAD00B5F7CC /* RCTSettings.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = RCTSettings.xcodeproj; path = "../node_modules/react-native/Libraries/Settings/RCTSettings.xcodeproj"; sourceTree = "<group>"; };
+		139FDEE61B06529A00C62182 /* RCTWebSocket.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = RCTWebSocket.xcodeproj; path = "../node_modules/react-native/Libraries/WebSocket/RCTWebSocket.xcodeproj"; sourceTree = "<group>"; };
 		13B07F961A680F5B00A75B9A /* apolloschurchapp.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = apolloschurchapp.app; sourceTree = BUILT_PRODUCTS_DIR; };
 		13B07FAF1A68108700A75B9A /* AppDelegate.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = AppDelegate.h; path = apolloschurchapp/AppDelegate.h; sourceTree = "<group>"; };
 		13B07FB01A68108700A75B9A /* AppDelegate.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; name = AppDelegate.m; path = apolloschurchapp/AppDelegate.m; sourceTree = "<group>"; };
+		13B07FB21A68108700A75B9A /* Base */ = {isa = PBXFileReference; lastKnownFileType = file.xib; name = Base; path = Base.lproj/LaunchScreen.xib; sourceTree = "<group>"; };
 		13B07FB51A68108700A75B9A /* Images.xcassets */ = {isa = PBXFileReference; lastKnownFileType = folder.assetcatalog; name = Images.xcassets; path = apolloschurchapp/Images.xcassets; sourceTree = "<group>"; };
 		13B07FB61A68108700A75B9A /* Info.plist */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.xml; name = Info.plist; path = apolloschurchapp/Info.plist; sourceTree = "<group>"; };
 		13B07FB71A68108700A75B9A /* main.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; name = main.m; path = apolloschurchapp/main.m; sourceTree = "<group>"; };
-		1F8F5BC4745C8F22C695573D /* Pods-apolloschurchapp.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-apolloschurchapp.release.xcconfig"; path = "Target Support Files/Pods-apolloschurchapp/Pods-apolloschurchapp.release.xcconfig"; sourceTree = "<group>"; };
+		146833FF1AC3E56700842450 /* React.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = React.xcodeproj; path = "../node_modules/react-native/React/React.xcodeproj"; sourceTree = "<group>"; };
+		14D838A2FAE743C7B1DA5E31 /* libRNDeviceInfo.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libRNDeviceInfo.a; sourceTree = "<group>"; };
+		22246A6BC58E4CF09A22A4DF /* Inter-UI-BlackItalic.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-BlackItalic.otf"; path = "../assets/fonts/Inter-UI-BlackItalic.otf"; sourceTree = "<group>"; };
+		239ECFF08FA841B99DB1CAFA /* RNDeviceInfo.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = RNDeviceInfo.xcodeproj; path = "../node_modules/react-native-device-info/ios/RNDeviceInfo.xcodeproj"; sourceTree = "<group>"; };
 		2D02E47B1E0B4A5D006451C7 /* apolloschurchapp-tvOS.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = "apolloschurchapp-tvOS.app"; sourceTree = BUILT_PRODUCTS_DIR; };
 		2D02E4901E0B4A5D006451C7 /* apolloschurchapp-tvOSTests.xctest */ = {isa = PBXFileReference; explicitFileType = wrapper.cfbundle; includeInIndex = 0; path = "apolloschurchapp-tvOSTests.xctest"; sourceTree = BUILT_PRODUCTS_DIR; };
 		2D16E6891FA4F8E400B85C8A /* libReact.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; path = libReact.a; sourceTree = BUILT_PRODUCTS_DIR; };
-		2F5410F239E9477B9C2E86BD /* Inter-UI-BoldItalic.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-BoldItalic.otf"; path = "../assets/fonts/Inter-UI-BoldItalic.otf"; sourceTree = "<group>"; };
-		38B9762ACA099D28C28DBB31 /* libPods-apolloschurchapp-tvOS.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-apolloschurchapp-tvOS.a"; sourceTree = BUILT_PRODUCTS_DIR; };
-		4E007B33EDD74B82AEF02C24 /* DroidSerif-Regular.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "DroidSerif-Regular.ttf"; path = "../assets/fonts/DroidSerif-Regular.ttf"; sourceTree = "<group>"; };
-		4F64CCA987A0419EB9C02236 /* libPods-apolloschurchapp-tvOSTests.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-apolloschurchapp-tvOSTests.a"; sourceTree = BUILT_PRODUCTS_DIR; };
-		54F271B8EB67A4997A2C7D96 /* Pods-apolloschurchapp.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-apolloschurchapp.debug.xcconfig"; path = "Target Support Files/Pods-apolloschurchapp/Pods-apolloschurchapp.debug.xcconfig"; sourceTree = "<group>"; };
-		560CBCD50AE7D282715D134E /* libPods-apolloschurchappTests.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-apolloschurchappTests.a"; sourceTree = BUILT_PRODUCTS_DIR; };
-		5A5A2BC2998547F4816B82E4 /* Inter-UI-BlackItalic.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-BlackItalic.otf"; path = "../assets/fonts/Inter-UI-BlackItalic.otf"; sourceTree = "<group>"; };
-		63F6EE53A9B44B4388B5F1C2 /* Inter-UI-Italic.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-Italic.otf"; path = "../assets/fonts/Inter-UI-Italic.otf"; sourceTree = "<group>"; };
-		745C835CA2F1E1EC2425152A /* Pods-apolloschurchapp-tvOS.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-apolloschurchapp-tvOS.debug.xcconfig"; path = "Target Support Files/Pods-apolloschurchapp-tvOS/Pods-apolloschurchapp-tvOS.debug.xcconfig"; sourceTree = "<group>"; };
-		82AAE52D24187BB500D1EEC7 /* BootSplash.storyboard */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = file.storyboard; name = BootSplash.storyboard; path = apolloschurchapp/BootSplash.storyboard; sourceTree = "<group>"; };
-		A460FD7884FD4574A818005A /* Inter-UI-MediumItalic.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-MediumItalic.otf"; path = "../assets/fonts/Inter-UI-MediumItalic.otf"; sourceTree = "<group>"; };
-		A613256118404CB691DE2C8E /* Inter-UI-Regular.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-Regular.otf"; path = "../assets/fonts/Inter-UI-Regular.otf"; sourceTree = "<group>"; };
-		A93F9D112A034626A9421759 /* DroidSerif-BoldItalic.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "DroidSerif-BoldItalic.ttf"; path = "../assets/fonts/DroidSerif-BoldItalic.ttf"; sourceTree = "<group>"; };
-		AB44FC16DED929081698EDFD /* Pods-apolloschurchappTests.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-apolloschurchappTests.debug.xcconfig"; path = "Target Support Files/Pods-apolloschurchappTests/Pods-apolloschurchappTests.debug.xcconfig"; sourceTree = "<group>"; };
-		ADC3D2DB245545ADB1CAB3FE /* DroidSerif-Italic.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "DroidSerif-Italic.ttf"; path = "../assets/fonts/DroidSerif-Italic.ttf"; sourceTree = "<group>"; };
-		AE85030F59F256E90D5A4C2B /* Pods-apolloschurchapp-tvOS.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-apolloschurchapp-tvOS.release.xcconfig"; path = "Target Support Files/Pods-apolloschurchapp-tvOS/Pods-apolloschurchapp-tvOS.release.xcconfig"; sourceTree = "<group>"; };
-		D394E3064D75710E81C51EB0 /* Pods-apolloschurchapp-tvOSTests.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-apolloschurchapp-tvOSTests.debug.xcconfig"; path = "Target Support Files/Pods-apolloschurchapp-tvOSTests/Pods-apolloschurchapp-tvOSTests.debug.xcconfig"; sourceTree = "<group>"; };
-		D5157D807E164356ADE87867 /* Inter-UI-Bold.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-Bold.otf"; path = "../assets/fonts/Inter-UI-Bold.otf"; sourceTree = "<group>"; };
-		DA9745795726553C6FA9E7A8 /* Pods-apolloschurchapp-tvOSTests.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-apolloschurchapp-tvOSTests.release.xcconfig"; path = "Target Support Files/Pods-apolloschurchapp-tvOSTests/Pods-apolloschurchapp-tvOSTests.release.xcconfig"; sourceTree = "<group>"; };
-		DC74A378C1CC40E4B6192D7F /* Inter-UI-Medium.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-Medium.otf"; path = "../assets/fonts/Inter-UI-Medium.otf"; sourceTree = "<group>"; };
-		DCB1270C2429347200079762 /* apolloschurchapp.entitlements */ = {isa = PBXFileReference; lastKnownFileType = text.plist.entitlements; name = apolloschurchapp.entitlements; path = apolloschurchapp/apolloschurchapp.entitlements; sourceTree = "<group>"; };
-		DDB6B5B7B6A0D1ECB68CF0DD /* libPods-apolloschurchapp.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-apolloschurchapp.a"; sourceTree = BUILT_PRODUCTS_DIR; };
-		E3B8A0AC5A6B4FABB3BDF6CB /* DroidSerif-Bold.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "DroidSerif-Bold.ttf"; path = "../assets/fonts/DroidSerif-Bold.ttf"; sourceTree = "<group>"; };
-		E98AC9782C338F13632EF710 /* Pods-apolloschurchappTests.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-apolloschurchappTests.release.xcconfig"; path = "Target Support Files/Pods-apolloschurchappTests/Pods-apolloschurchappTests.release.xcconfig"; sourceTree = "<group>"; };
-		EC21254B449443F99016EBFD /* Inter-UI-Black.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-Black.otf"; path = "../assets/fonts/Inter-UI-Black.otf"; sourceTree = "<group>"; };
-		ED297162215061F000B7C4FE /* JavaScriptCore.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = JavaScriptCore.framework; path = System/Library/Frameworks/JavaScriptCore.framework; sourceTree = SDKROOT; };
-		ED2971642150620600B7C4FE /* JavaScriptCore.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = JavaScriptCore.framework; path = Platforms/AppleTVOS.platform/Developer/SDKs/AppleTVOS12.0.sdk/System/Library/Frameworks/JavaScriptCore.framework; sourceTree = DEVELOPER_DIR; };
+		2F8741F0746D4C8A89970C4D /* RCTVideo.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = RCTVideo.xcodeproj; path = "../node_modules/react-native-video/ios/RCTVideo.xcodeproj"; sourceTree = "<group>"; };
+		32A467E2C3364ABDBB7BD0D1 /* Inter-UI-BoldItalic.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-BoldItalic.otf"; path = "../assets/fonts/Inter-UI-BoldItalic.otf"; sourceTree = "<group>"; };
+		3BD7DCDF7B194D7BB9BE3C6C /* RNImagePicker.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = RNImagePicker.xcodeproj; path = "../node_modules/react-native-image-picker/ios/RNImagePicker.xcodeproj"; sourceTree = "<group>"; };
+		3F58D699A37B432BA1C0F092 /* libRNImagePicker.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libRNImagePicker.a; sourceTree = "<group>"; };
+		4629759169AB4756B447B16A /* DroidSerif-Bold.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "DroidSerif-Bold.ttf"; path = "../assets/fonts/DroidSerif-Bold.ttf"; sourceTree = "<group>"; };
+		46704FC4FCEB45B6B9DD92BB /* BVLinearGradient.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = BVLinearGradient.xcodeproj; path = "../node_modules/react-native-linear-gradient/BVLinearGradient.xcodeproj"; sourceTree = "<group>"; };
+		4BD3C4E6742F4F6380640CA9 /* MusicControl.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = MusicControl.xcodeproj; path = "../node_modules/react-native-music-control/ios/MusicControl.xcodeproj"; sourceTree = "<group>"; };
+		5E91572D1DD0AC6500FF2AA8 /* RCTAnimation.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = RCTAnimation.xcodeproj; path = "../node_modules/react-native/Libraries/NativeAnimation/RCTAnimation.xcodeproj"; sourceTree = "<group>"; };
+		60E52391C9744A46B3925A78 /* libBVLinearGradient.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libBVLinearGradient.a; sourceTree = "<group>"; };
+		643D51DCF8F14993B9AA6990 /* libMusicControl.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libMusicControl.a; sourceTree = "<group>"; };
+		67E66409EF8A4BC7A1B9E054 /* libMusicControl-tvOS.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = "libMusicControl-tvOS.a"; sourceTree = "<group>"; };
+		6B6E5A404A4B4A34B18D7D34 /* SafariViewManager.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = SafariViewManager.xcodeproj; path = "../node_modules/react-native-safari-view/SafariViewManager.xcodeproj"; sourceTree = "<group>"; };
+		6BAAC994942548609D0EEECA /* ReactNativeCustomTabs.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = ReactNativeCustomTabs.xcodeproj; path = "../node_modules/react-native-custom-tabs/ios/ReactNativeCustomTabs.xcodeproj"; sourceTree = "<group>"; };
+		71E6499CCC9D4DB2ADD365D8 /* libDBCustomTabs.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libDBCustomTabs.a; sourceTree = "<group>"; };
+		76E6AD5294554A5FA53DB415 /* DroidSerif-Regular.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "DroidSerif-Regular.ttf"; path = "../assets/fonts/DroidSerif-Regular.ttf"; sourceTree = "<group>"; };
+		78C398B01ACF4ADC00677621 /* RCTLinking.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = RCTLinking.xcodeproj; path = "../node_modules/react-native/Libraries/LinkingIOS/RCTLinking.xcodeproj"; sourceTree = "<group>"; };
+		832341B01AAA6A8300B99B32 /* RCTText.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = RCTText.xcodeproj; path = "../node_modules/react-native/Libraries/Text/RCTText.xcodeproj"; sourceTree = "<group>"; };
+		84716CBFF56347BA880A16C6 /* libRNSVG-tvOS.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = "libRNSVG-tvOS.a"; sourceTree = "<group>"; };
+		8CA3C04F98954FB2895CD36D /* Inter-UI-Italic.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-Italic.otf"; path = "../assets/fonts/Inter-UI-Italic.otf"; sourceTree = "<group>"; };
+		8E13C8F9AE60487C9ED95C21 /* Inter-UI-Black.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-Black.otf"; path = "../assets/fonts/Inter-UI-Black.otf"; sourceTree = "<group>"; };
+		9FD7D997F4F14C439AC699B3 /* Inter-UI-Medium.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-Medium.otf"; path = "../assets/fonts/Inter-UI-Medium.otf"; sourceTree = "<group>"; };
+		A574C961754742F688E43151 /* libRNDeviceInfo-tvOS.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = "libRNDeviceInfo-tvOS.a"; sourceTree = "<group>"; };
+		A64D00F181AE4927A4632B6E /* SplashScreen.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = SplashScreen.xcodeproj; path = "../node_modules/react-native-splash-screen/ios/SplashScreen.xcodeproj"; sourceTree = "<group>"; };
+		ADBDB91F1DFEBF0600ED6528 /* RCTBlob.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = RCTBlob.xcodeproj; path = "../node_modules/react-native/Libraries/Blob/RCTBlob.xcodeproj"; sourceTree = "<group>"; };
+		BF5A2B416EB74A44923FED7B /* libSafariViewManager.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libSafariViewManager.a; sourceTree = "<group>"; };
+		CFAF46FBA8B44C7B8DCA7707 /* libRNSVG.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libRNSVG.a; sourceTree = "<group>"; };
+		D979B537509247C099CE3F24 /* DroidSerif-BoldItalic.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "DroidSerif-BoldItalic.ttf"; path = "../assets/fonts/DroidSerif-BoldItalic.ttf"; sourceTree = "<group>"; };
+		F08D1EBF0C2A4E6798AA8F36 /* libSplashScreen.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libSplashScreen.a; sourceTree = "<group>"; };
+		F79112193F3548D284406ABF /* Inter-UI-MediumItalic.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-MediumItalic.otf"; path = "../assets/fonts/Inter-UI-MediumItalic.otf"; sourceTree = "<group>"; };
+		F9CFD638A5414DFF961A8D11 /* DroidSerif-Italic.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "DroidSerif-Italic.ttf"; path = "../assets/fonts/DroidSerif-Italic.ttf"; sourceTree = "<group>"; };
+		FB25CB02F40D4CC39DDA3C74 /* Inter-UI-Bold.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-Bold.otf"; path = "../assets/fonts/Inter-UI-Bold.otf"; sourceTree = "<group>"; };
+		FC8FFB7C37BB4499AEB6FA37 /* libRCTVideo.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libRCTVideo.a; sourceTree = "<group>"; };
+		95B9E71966CF436CA52F0026 /* RNDeviceInfo.xcodeproj */ = {isa = PBXFileReference; name = "RNDeviceInfo.xcodeproj"; path = "../node_modules/react-native-device-info/ios/RNDeviceInfo.xcodeproj"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = wrapper.pb-project; explicitFileType = undefined; includeInIndex = 0; };
+		DFDDD075C3884791ABF84D1F /* libRNDeviceInfo.a */ = {isa = PBXFileReference; name = "libRNDeviceInfo.a"; path = "libRNDeviceInfo.a"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = archive.ar; explicitFileType = undefined; includeInIndex = 0; };
+		57A2A2F0E39F43CEA828D603 /* libRNDeviceInfo-tvOS.a */ = {isa = PBXFileReference; name = "libRNDeviceInfo-tvOS.a"; path = "libRNDeviceInfo-tvOS.a"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = archive.ar; explicitFileType = undefined; includeInIndex = 0; };
 /* End PBXFileReference section */
 
 /* Begin PBXFrameworksBuildPhase section */
@@ -109,7 +510,7 @@
 			isa = PBXFrameworksBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
-				A415698B9815C7305EDB7AA7 /* libPods-apolloschurchappTests.a in Frameworks */,
+				140ED2AC1D01E1AD002B40FF /* libReact.a in Frameworks */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
@@ -117,8 +518,28 @@
 			isa = PBXFrameworksBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
-				ED297163215061F000B7C4FE /* JavaScriptCore.framework in Frameworks */,
-				E875558F3FB8FA2024EF7DC2 /* libPods-apolloschurchapp.a in Frameworks */,
+				ADBDB9381DFEBF1600ED6528 /* libRCTBlob.a in Frameworks */,
+				5E9157361DD0AC6A00FF2AA8 /* libRCTAnimation.a in Frameworks */,
+				146834051AC3E58100842450 /* libReact.a in Frameworks */,
+				5E9157361DD0AC6A00FF2AA8 /* libRCTAnimation.a in Frameworks */,
+				00C302E51ABCBA2D00DB3ED1 /* libRCTActionSheet.a in Frameworks */,
+				00C302E71ABCBA2D00DB3ED1 /* libRCTGeolocation.a in Frameworks */,
+				00C302E81ABCBA2D00DB3ED1 /* libRCTImage.a in Frameworks */,
+				133E29F31AD74F7200F7D852 /* libRCTLinking.a in Frameworks */,
+				00C302E91ABCBA2D00DB3ED1 /* libRCTNetwork.a in Frameworks */,
+				139105C61AF99C1200B5F7CC /* libRCTSettings.a in Frameworks */,
+				832341BD1AAA6AB300B99B32 /* libRCTText.a in Frameworks */,
+				00C302EA1ABCBA2D00DB3ED1 /* libRCTVibration.a in Frameworks */,
+				139FDEF61B0652A700C62182 /* libRCTWebSocket.a in Frameworks */,
+				3CAA28FFFCCF46518672AC8F /* libDBCustomTabs.a in Frameworks */,
+				9388C44B949C4DBAAA7256D5 /* libBVLinearGradient.a in Frameworks */,
+				4B29B8AACC2A4FB7BA6A8EEB /* libSafariViewManager.a in Frameworks */,
+				F3F4A3D13570438F9562746F /* libSplashScreen.a in Frameworks */,
+				89331B8BDAF24EF5BE08A485 /* libRNSVG.a in Frameworks */,
+				86D0B47B5BF143E797822EF1 /* libRCTVideo.a in Frameworks */,
+				B5DE58C6CF1E4E7ABDD1B48D /* libRNImagePicker.a in Frameworks */,
+				1C1FD8B313AB4A6583A0D31B /* libRNDeviceInfo.a in Frameworks */,
+				1680179655164C96985B5731 /* libMusicControl.a in Frameworks */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
@@ -126,9 +547,17 @@
 			isa = PBXFrameworksBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
-				ED2971652150620600B7C4FE /* JavaScriptCore.framework in Frameworks */,
 				2D16E6881FA4F8E400B85C8A /* libReact.a in Frameworks */,
-				8EA9BDE542E09F685A47D9BE /* libPods-apolloschurchapp-tvOS.a in Frameworks */,
+				2D02E4C21E0B4AEC006451C7 /* libRCTAnimation.a in Frameworks */,
+				2D02E4C31E0B4AEC006451C7 /* libRCTImage-tvOS.a in Frameworks */,
+				2D02E4C41E0B4AEC006451C7 /* libRCTLinking-tvOS.a in Frameworks */,
+				2D02E4C51E0B4AEC006451C7 /* libRCTNetwork-tvOS.a in Frameworks */,
+				2D02E4C61E0B4AEC006451C7 /* libRCTSettings-tvOS.a in Frameworks */,
+				2D02E4C71E0B4AEC006451C7 /* libRCTText-tvOS.a in Frameworks */,
+				2D02E4C81E0B4AEC006451C7 /* libRCTWebSocket-tvOS.a in Frameworks */,
+				DEF13113111A40DF8F4FEB13 /* libRNSVG-tvOS.a in Frameworks */,
+				AC4174D90AD644A28D0CA9D9 /* libRNDeviceInfo-tvOS.a in Frameworks */,
+				AB7B2136E56C4B40B64F9C87 /* libMusicControl-tvOS.a in Frameworks */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
@@ -136,13 +565,55 @@
 			isa = PBXFrameworksBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
-				25B9E67E3B46D33F45473A84 /* libPods-apolloschurchapp-tvOSTests.a in Frameworks */,
+				2DF0FFEE2056DD460020B375 /* libReact.a in Frameworks */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
 /* End PBXFrameworksBuildPhase section */
 
 /* Begin PBXGroup section */
+		00C302A81ABCB8CE00DB3ED1 /* Products */ = {
+			isa = PBXGroup;
+			children = (
+				00C302AC1ABCB8CE00DB3ED1 /* libRCTActionSheet.a */,
+			);
+			name = Products;
+			sourceTree = "<group>";
+		};
+		00C302B61ABCB90400DB3ED1 /* Products */ = {
+			isa = PBXGroup;
+			children = (
+				00C302BA1ABCB90400DB3ED1 /* libRCTGeolocation.a */,
+			);
+			name = Products;
+			sourceTree = "<group>";
+		};
+		00C302BC1ABCB91800DB3ED1 /* Products */ = {
+			isa = PBXGroup;
+			children = (
+				00C302C01ABCB91800DB3ED1 /* libRCTImage.a */,
+				3DAD3E841DF850E9000B6D8A /* libRCTImage-tvOS.a */,
+			);
+			name = Products;
+			sourceTree = "<group>";
+		};
+		00C302D41ABCB9D200DB3ED1 /* Products */ = {
+			isa = PBXGroup;
+			children = (
+				00C302DC1ABCB9D200DB3ED1 /* libRCTNetwork.a */,
+				3DAD3E8C1DF850E9000B6D8A /* libRCTNetwork-tvOS.a */,
+			);
+			name = Products;
+			sourceTree = "<group>";
+		};
+		00C302E01ABCB9EE00DB3ED1 /* Products */ = {
+			isa = PBXGroup;
+			children = (
+				00C302E41ABCB9EE00DB3ED1 /* libRCTVibration.a */,
+			);
+			name = Products;
+			sourceTree = "<group>";
+		};
 		00E356EF1AD99517003FC87E /* apolloschurchappTests */ = {
 			isa = PBXGroup;
 			children = (
@@ -160,84 +631,233 @@
 			name = "Supporting Files";
 			sourceTree = "<group>";
 		};
+		139105B71AF99BAD00B5F7CC /* Products */ = {
+			isa = PBXGroup;
+			children = (
+				139105C11AF99BAD00B5F7CC /* libRCTSettings.a */,
+				3DAD3E901DF850E9000B6D8A /* libRCTSettings-tvOS.a */,
+			);
+			name = Products;
+			sourceTree = "<group>";
+		};
+		139FDEE71B06529A00C62182 /* Products */ = {
+			isa = PBXGroup;
+			children = (
+				139FDEF41B06529B00C62182 /* libRCTWebSocket.a */,
+				3DAD3E991DF850E9000B6D8A /* libRCTWebSocket-tvOS.a */,
+				2D16E6841FA4F8DC00B85C8A /* libfishhook.a */,
+				2D16E6861FA4F8DC00B85C8A /* libfishhook-tvOS.a */,
+			);
+			name = Products;
+			sourceTree = "<group>";
+		};
 		13B07FAE1A68108700A75B9A /* apolloschurchapp */ = {
 			isa = PBXGroup;
 			children = (
-				DCB1270C2429347200079762 /* apolloschurchapp.entitlements */,
 				008F07F21AC5B25A0029DE68 /* main.jsbundle */,
 				13B07FAF1A68108700A75B9A /* AppDelegate.h */,
 				13B07FB01A68108700A75B9A /* AppDelegate.m */,
 				13B07FB51A68108700A75B9A /* Images.xcassets */,
-				82AAE52D24187BB500D1EEC7 /* BootSplash.storyboard */,
 				13B07FB61A68108700A75B9A /* Info.plist */,
+				13B07FB11A68108700A75B9A /* LaunchScreen.xib */,
 				13B07FB71A68108700A75B9A /* main.m */,
 			);
 			name = apolloschurchapp;
 			sourceTree = "<group>";
 		};
+		146834001AC3E56700842450 /* Products */ = {
+			isa = PBXGroup;
+			children = (
+				146834041AC3E56700842450 /* libReact.a */,
+				3DAD3EA31DF850E9000B6D8A /* libReact.a */,
+				3DAD3EA51DF850E9000B6D8A /* libyoga.a */,
+				3DAD3EA71DF850E9000B6D8A /* libyoga.a */,
+				3DAD3EA91DF850E9000B6D8A /* libcxxreact.a */,
+				3DAD3EAB1DF850E9000B6D8A /* libcxxreact.a */,
+				3DAD3EAD1DF850E9000B6D8A /* libjschelpers.a */,
+				3DAD3EAF1DF850E9000B6D8A /* libjschelpers.a */,
+				2DF0FFDF2056DD460020B375 /* libjsinspector.a */,
+				2DF0FFE12056DD460020B375 /* libjsinspector-tvOS.a */,
+				2DF0FFE32056DD460020B375 /* libthird-party.a */,
+				2DF0FFE52056DD460020B375 /* libthird-party.a */,
+				2DF0FFE72056DD460020B375 /* libdouble-conversion.a */,
+				2DF0FFE92056DD460020B375 /* libdouble-conversion.a */,
+				2DF0FFEB2056DD460020B375 /* libprivatedata.a */,
+				2DF0FFED2056DD460020B375 /* libprivatedata-tvOS.a */,
+			);
+			name = Products;
+			sourceTree = "<group>";
+		};
 		2D16E6871FA4F8E400B85C8A /* Frameworks */ = {
 			isa = PBXGroup;
 			children = (
-				ED297162215061F000B7C4FE /* JavaScriptCore.framework */,
-				ED2971642150620600B7C4FE /* JavaScriptCore.framework */,
 				2D16E6891FA4F8E400B85C8A /* libReact.a */,
-				DDB6B5B7B6A0D1ECB68CF0DD /* libPods-apolloschurchapp.a */,
-				38B9762ACA099D28C28DBB31 /* libPods-apolloschurchapp-tvOS.a */,
-				4F64CCA987A0419EB9C02236 /* libPods-apolloschurchapp-tvOSTests.a */,
-				560CBCD50AE7D282715D134E /* libPods-apolloschurchappTests.a */,
 			);
 			name = Frameworks;
 			sourceTree = "<group>";
 		};
-		58D6A3E05A234CD89DC0BCE1 /* Resources */ = {
+		4446111C6E474E038489E599 /* Resources */ = {
 			isa = PBXGroup;
 			children = (
-				E3B8A0AC5A6B4FABB3BDF6CB /* DroidSerif-Bold.ttf */,
-				A93F9D112A034626A9421759 /* DroidSerif-BoldItalic.ttf */,
-				ADC3D2DB245545ADB1CAB3FE /* DroidSerif-Italic.ttf */,
-				4E007B33EDD74B82AEF02C24 /* DroidSerif-Regular.ttf */,
-				EC21254B449443F99016EBFD /* Inter-UI-Black.otf */,
-				5A5A2BC2998547F4816B82E4 /* Inter-UI-BlackItalic.otf */,
-				D5157D807E164356ADE87867 /* Inter-UI-Bold.otf */,
-				2F5410F239E9477B9C2E86BD /* Inter-UI-BoldItalic.otf */,
-				63F6EE53A9B44B4388B5F1C2 /* Inter-UI-Italic.otf */,
-				DC74A378C1CC40E4B6192D7F /* Inter-UI-Medium.otf */,
-				A460FD7884FD4574A818005A /* Inter-UI-MediumItalic.otf */,
-				A613256118404CB691DE2C8E /* Inter-UI-Regular.otf */,
+				4629759169AB4756B447B16A /* DroidSerif-Bold.ttf */,
+				D979B537509247C099CE3F24 /* DroidSerif-BoldItalic.ttf */,
+				F9CFD638A5414DFF961A8D11 /* DroidSerif-Italic.ttf */,
+				76E6AD5294554A5FA53DB415 /* DroidSerif-Regular.ttf */,
+				8E13C8F9AE60487C9ED95C21 /* Inter-UI-Black.otf */,
+				22246A6BC58E4CF09A22A4DF /* Inter-UI-BlackItalic.otf */,
+				FB25CB02F40D4CC39DDA3C74 /* Inter-UI-Bold.otf */,
+				32A467E2C3364ABDBB7BD0D1 /* Inter-UI-BoldItalic.otf */,
+				8CA3C04F98954FB2895CD36D /* Inter-UI-Italic.otf */,
+				9FD7D997F4F14C439AC699B3 /* Inter-UI-Medium.otf */,
+				F79112193F3548D284406ABF /* Inter-UI-MediumItalic.otf */,
+				10F42B11F27E467A8C71C280 /* Inter-UI-Regular.otf */,
 			);
 			name = Resources;
 			sourceTree = "<group>";
 		};
-		76EC01CF690166B3232686FE /* Pods */ = {
+		5E91572E1DD0AC6500FF2AA8 /* Products */ = {
 			isa = PBXGroup;
 			children = (
-				54F271B8EB67A4997A2C7D96 /* Pods-apolloschurchapp.debug.xcconfig */,
-				1F8F5BC4745C8F22C695573D /* Pods-apolloschurchapp.release.xcconfig */,
-				745C835CA2F1E1EC2425152A /* Pods-apolloschurchapp-tvOS.debug.xcconfig */,
-				AE85030F59F256E90D5A4C2B /* Pods-apolloschurchapp-tvOS.release.xcconfig */,
-				D394E3064D75710E81C51EB0 /* Pods-apolloschurchapp-tvOSTests.debug.xcconfig */,
-				DA9745795726553C6FA9E7A8 /* Pods-apolloschurchapp-tvOSTests.release.xcconfig */,
-				AB44FC16DED929081698EDFD /* Pods-apolloschurchappTests.debug.xcconfig */,
-				E98AC9782C338F13632EF710 /* Pods-apolloschurchappTests.release.xcconfig */,
-			);
-			path = Pods;
+				5E9157331DD0AC6500FF2AA8 /* libRCTAnimation.a */,
+				5E9157351DD0AC6500FF2AA8 /* libRCTAnimation.a */,
+			);
+			name = Products;
 			sourceTree = "<group>";
 		};
-		79CEBF9D223011FC00D8F685 /* Recovered References */ = {
+		78C398B11ACF4ADC00677621 /* Products */ = {
 			isa = PBXGroup;
 			children = (
-				0D480D95FC7F4569B8B934E3 /* libRCTOneSignal.a */,
+				78C398B91ACF4ADC00677621 /* libRCTLinking.a */,
+				3DAD3E881DF850E9000B6D8A /* libRCTLinking-tvOS.a */,
+			);
+			name = Products;
+			sourceTree = "<group>";
+		};
+		7914344221260177006F13B7 /* Recovered References */ = {
+			isa = PBXGroup;
+			children = (
+				71E6499CCC9D4DB2ADD365D8 /* libDBCustomTabs.a */,
+				60E52391C9744A46B3925A78 /* libBVLinearGradient.a */,
+				BF5A2B416EB74A44923FED7B /* libSafariViewManager.a */,
+				F08D1EBF0C2A4E6798AA8F36 /* libSplashScreen.a */,
+				CFAF46FBA8B44C7B8DCA7707 /* libRNSVG.a */,
+				FC8FFB7C37BB4499AEB6FA37 /* libRCTVideo.a */,
+				84716CBFF56347BA880A16C6 /* libRNSVG-tvOS.a */,
+				3F58D699A37B432BA1C0F092 /* libRNImagePicker.a */,
+				14D838A2FAE743C7B1DA5E31 /* libRNDeviceInfo.a */,
+				A574C961754742F688E43151 /* libRNDeviceInfo-tvOS.a */,
+				643D51DCF8F14993B9AA6990 /* libMusicControl.a */,
+				67E66409EF8A4BC7A1B9E054 /* libMusicControl-tvOS.a */,
 			);
 			name = "Recovered References";
 			sourceTree = "<group>";
 		};
+		791434682126017A006F13B7 /* Products */ = {
+			isa = PBXGroup;
+			children = (
+				7914348B2126017B006F13B7 /* libSafariViewManager.a */,
+			);
+			name = Products;
+			sourceTree = "<group>";
+		};
+		7914346A2126017A006F13B7 /* Products */ = {
+			isa = PBXGroup;
+			children = (
+				791434822126017B006F13B7 /* libDBCustomTabs.a */,
+			);
+			name = Products;
+			sourceTree = "<group>";
+		};
+		7914346C2126017A006F13B7 /* Products */ = {
+			isa = PBXGroup;
+			children = (
+				7914348E2126017B006F13B7 /* libSplashScreen.a */,
+			);
+			name = Products;
+			sourceTree = "<group>";
+		};
+		7914346E2126017A006F13B7 /* Products */ = {
+			isa = PBXGroup;
+			children = (
+				791434772126017B006F13B7 /* libBVLinearGradient.a */,
+				791434792126017B006F13B7 /* libBVLinearGradient.a */,
+			);
+			name = Products;
+			sourceTree = "<group>";
+		};
+		791434702126017A006F13B7 /* Products */ = {
+			isa = PBXGroup;
+			children = (
+				791434862126017B006F13B7 /* libRNSVG.a */,
+				791434882126017B006F13B7 /* libRNSVG-tvOS.a */,
+			);
+			name = Products;
+			sourceTree = "<group>";
+		};
+		791434722126017A006F13B7 /* Products */ = {
+			isa = PBXGroup;
+			children = (
+				7914347D2126017B006F13B7 /* libRCTVideo.a */,
+				7914347F2126017B006F13B7 /* libRCTVideo.a */,
+			);
+			name = Products;
+			sourceTree = "<group>";
+		};
+		796F252E212CAD5D00C6935E /* Products */ = {
+			isa = PBXGroup;
+			children = (
+				796F2533212CAD5D00C6935E /* libRNDeviceInfo.a */,
+				796F2535212CAD5D00C6935E /* libRNDeviceInfo-tvOS.a */,
+			);
+			name = Products;
+			sourceTree = "<group>";
+		};
+		797304142146322D00F6E05B /* Products */ = {
+			isa = PBXGroup;
+			children = (
+				797304192146322D00F6E05B /* libMusicControl.a */,
+				7973041B2146322D00F6E05B /* libMusicControl-tvOS.a */,
+			);
+			name = Products;
+			sourceTree = "<group>";
+		};
 		832341AE1AAA6A7D00B99B32 /* Libraries */ = {
 			isa = PBXGroup;
 			children = (
+				5E91572D1DD0AC6500FF2AA8 /* RCTAnimation.xcodeproj */,
+				146833FF1AC3E56700842450 /* React.xcodeproj */,
+				00C302A71ABCB8CE00DB3ED1 /* RCTActionSheet.xcodeproj */,
+				ADBDB91F1DFEBF0600ED6528 /* RCTBlob.xcodeproj */,
+				00C302B51ABCB90400DB3ED1 /* RCTGeolocation.xcodeproj */,
+				00C302BB1ABCB91800DB3ED1 /* RCTImage.xcodeproj */,
+				78C398B01ACF4ADC00677621 /* RCTLinking.xcodeproj */,
+				00C302D31ABCB9D200DB3ED1 /* RCTNetwork.xcodeproj */,
+				139105B61AF99BAD00B5F7CC /* RCTSettings.xcodeproj */,
+				832341B01AAA6A8300B99B32 /* RCTText.xcodeproj */,
+				00C302DF1ABCB9EE00DB3ED1 /* RCTVibration.xcodeproj */,
+				139FDEE61B06529A00C62182 /* RCTWebSocket.xcodeproj */,
+				6BAAC994942548609D0EEECA /* ReactNativeCustomTabs.xcodeproj */,
+				46704FC4FCEB45B6B9DD92BB /* BVLinearGradient.xcodeproj */,
+				6B6E5A404A4B4A34B18D7D34 /* SafariViewManager.xcodeproj */,
+				A64D00F181AE4927A4632B6E /* SplashScreen.xcodeproj */,
+				01441BF099BE44EE8BA8E390 /* RNSVG.xcodeproj */,
+				2F8741F0746D4C8A89970C4D /* RCTVideo.xcodeproj */,
+				3BD7DCDF7B194D7BB9BE3C6C /* RNImagePicker.xcodeproj */,
+				239ECFF08FA841B99DB1CAFA /* RNDeviceInfo.xcodeproj */,
+				4BD3C4E6742F4F6380640CA9 /* MusicControl.xcodeproj */,
 			);
 			name = Libraries;
 			sourceTree = "<group>";
 		};
+		832341B11AAA6A8300B99B32 /* Products */ = {
+			isa = PBXGroup;
+			children = (
+				832341B51AAA6A8300B99B32 /* libRCTText.a */,
+				3DAD3E941DF850E9000B6D8A /* libRCTText-tvOS.a */,
+			);
+			name = Products;
+			sourceTree = "<group>";
+		};
 		83CBB9F61A601CBA00E9B192 = {
 			isa = PBXGroup;
 			children = (
@@ -246,9 +866,8 @@
 				00E356EF1AD99517003FC87E /* apolloschurchappTests */,
 				83CBBA001A601CBA00E9B192 /* Products */,
 				2D16E6871FA4F8E400B85C8A /* Frameworks */,
-				58D6A3E05A234CD89DC0BCE1 /* Resources */,
-				79CEBF9D223011FC00D8F685 /* Recovered References */,
-				76EC01CF690166B3232686FE /* Pods */,
+				4446111C6E474E038489E599 /* Resources */,
+				7914344221260177006F13B7 /* Recovered References */,
 			);
 			indentWidth = 2;
 			sourceTree = "<group>";
@@ -266,6 +885,23 @@
 			name = Products;
 			sourceTree = "<group>";
 		};
+		ADBDB9201DFEBF0600ED6528 /* Products */ = {
+			isa = PBXGroup;
+			children = (
+				ADBDB9271DFEBF0700ED6528 /* libRCTBlob.a */,
+				2D16E6721FA4F8DC00B85C8A /* libRCTBlob-tvOS.a */,
+			);
+			name = Products;
+			sourceTree = "<group>";
+		};
+		BF99316D2138673B0077FD20 /* Products */ = {
+			isa = PBXGroup;
+			children = (
+				BF9931712138673B0077FD20 /* libRNImagePicker.a */,
+			);
+			name = Products;
+			sourceTree = "<group>";
+		};
 /* End PBXGroup section */
 
 /* Begin PBXNativeTarget section */
@@ -273,7 +909,6 @@
 			isa = PBXNativeTarget;
 			buildConfigurationList = 00E357021AD99517003FC87E /* Build configuration list for PBXNativeTarget "apolloschurchappTests" */;
 			buildPhases = (
-				2C62ED438C51D0F43EC7017B /* [CP] Check Pods Manifest.lock */,
 				00E356EA1AD99517003FC87E /* Sources */,
 				00E356EB1AD99517003FC87E /* Frameworks */,
 				00E356EC1AD99517003FC87E /* Resources */,
@@ -292,12 +927,10 @@
 			isa = PBXNativeTarget;
 			buildConfigurationList = 13B07F931A680F5B00A75B9A /* Build configuration list for PBXNativeTarget "apolloschurchapp" */;
 			buildPhases = (
-				DEEF24CE4F76789E5E8C369D /* [CP] Check Pods Manifest.lock */,
 				13B07F871A680F5B00A75B9A /* Sources */,
 				13B07F8C1A680F5B00A75B9A /* Frameworks */,
 				13B07F8E1A680F5B00A75B9A /* Resources */,
 				00DD1BFF1BD5951E006B06BC /* Bundle React Native code and images */,
-				43D579D8398224D7B09F58F6 /* [CP] Copy Pods Resources */,
 			);
 			buildRules = (
 			);
@@ -312,7 +945,6 @@
 			isa = PBXNativeTarget;
 			buildConfigurationList = 2D02E4BA1E0B4A5E006451C7 /* Build configuration list for PBXNativeTarget "apolloschurchapp-tvOS" */;
 			buildPhases = (
-				9C20354F160AAF86C8281F23 /* [CP] Check Pods Manifest.lock */,
 				2D02E4771E0B4A5D006451C7 /* Sources */,
 				2D02E4781E0B4A5D006451C7 /* Frameworks */,
 				2D02E4791E0B4A5D006451C7 /* Resources */,
@@ -331,7 +963,6 @@
 			isa = PBXNativeTarget;
 			buildConfigurationList = 2D02E4BB1E0B4A5E006451C7 /* Build configuration list for PBXNativeTarget "apolloschurchapp-tvOSTests" */;
 			buildPhases = (
-				A85CD736CDC3356677735901 /* [CP] Check Pods Manifest.lock */,
 				2D02E48C1E0B4A5D006451C7 /* Sources */,
 				2D02E48D1E0B4A5D006451C7 /* Frameworks */,
 				2D02E48E1E0B4A5D006451C7 /* Resources */,
@@ -352,7 +983,7 @@
 		83CBB9F71A601CBA00E9B192 /* Project object */ = {
 			isa = PBXProject;
 			attributes = {
-				LastUpgradeCheck = 940;
+				LastUpgradeCheck = 610;
 				ORGANIZATIONNAME = Facebook;
 				TargetAttributes = {
 					00E356ED1AD99517003FC87E = {
@@ -360,8 +991,7 @@
 						TestTargetID = 13B07F861A680F5B00A75B9A;
 					};
 					13B07F861A680F5B00A75B9A = {
-						DevelopmentTeam = 7KS82J74VW;
-						ProvisioningStyle = Manual;
+						DevelopmentTeam = 7TM8C6252Z;
 					};
 					2D02E47A1E0B4A5D006451C7 = {
 						CreatedOnToolsVersion = 8.2.1;
@@ -379,13 +1009,98 @@
 			developmentRegion = English;
 			hasScannedForEncodings = 0;
 			knownRegions = (
-				English,
 				en,
 				Base,
 			);
 			mainGroup = 83CBB9F61A601CBA00E9B192;
 			productRefGroup = 83CBBA001A601CBA00E9B192 /* Products */;
 			projectDirPath = "";
+			projectReferences = (
+				{
+					ProductGroup = 7914346E2126017A006F13B7 /* Products */;
+					ProjectRef = 46704FC4FCEB45B6B9DD92BB /* BVLinearGradient.xcodeproj */;
+				},
+				{
+					ProductGroup = 797304142146322D00F6E05B /* Products */;
+					ProjectRef = 4BD3C4E6742F4F6380640CA9 /* MusicControl.xcodeproj */;
+				},
+				{
+					ProductGroup = 00C302A81ABCB8CE00DB3ED1 /* Products */;
+					ProjectRef = 00C302A71ABCB8CE00DB3ED1 /* RCTActionSheet.xcodeproj */;
+				},
+				{
+					ProductGroup = 5E91572E1DD0AC6500FF2AA8 /* Products */;
+					ProjectRef = 5E91572D1DD0AC6500FF2AA8 /* RCTAnimation.xcodeproj */;
+				},
+				{
+					ProductGroup = ADBDB9201DFEBF0600ED6528 /* Products */;
+					ProjectRef = ADBDB91F1DFEBF0600ED6528 /* RCTBlob.xcodeproj */;
+				},
+				{
+					ProductGroup = 00C302B61ABCB90400DB3ED1 /* Products */;
+					ProjectRef = 00C302B51ABCB90400DB3ED1 /* RCTGeolocation.xcodeproj */;
+				},
+				{
+					ProductGroup = 00C302BC1ABCB91800DB3ED1 /* Products */;
+					ProjectRef = 00C302BB1ABCB91800DB3ED1 /* RCTImage.xcodeproj */;
+				},
+				{
+					ProductGroup = 78C398B11ACF4ADC00677621 /* Products */;
+					ProjectRef = 78C398B01ACF4ADC00677621 /* RCTLinking.xcodeproj */;
+				},
+				{
+					ProductGroup = 00C302D41ABCB9D200DB3ED1 /* Products */;
+					ProjectRef = 00C302D31ABCB9D200DB3ED1 /* RCTNetwork.xcodeproj */;
+				},
+				{
+					ProductGroup = 139105B71AF99BAD00B5F7CC /* Products */;
+					ProjectRef = 139105B61AF99BAD00B5F7CC /* RCTSettings.xcodeproj */;
+				},
+				{
+					ProductGroup = 832341B11AAA6A8300B99B32 /* Products */;
+					ProjectRef = 832341B01AAA6A8300B99B32 /* RCTText.xcodeproj */;
+				},
+				{
+					ProductGroup = 00C302E01ABCB9EE00DB3ED1 /* Products */;
+					ProjectRef = 00C302DF1ABCB9EE00DB3ED1 /* RCTVibration.xcodeproj */;
+				},
+				{
+					ProductGroup = 791434722126017A006F13B7 /* Products */;
+					ProjectRef = 2F8741F0746D4C8A89970C4D /* RCTVideo.xcodeproj */;
+				},
+				{
+					ProductGroup = 139FDEE71B06529A00C62182 /* Products */;
+					ProjectRef = 139FDEE61B06529A00C62182 /* RCTWebSocket.xcodeproj */;
+				},
+				{
+					ProductGroup = 146834001AC3E56700842450 /* Products */;
+					ProjectRef = 146833FF1AC3E56700842450 /* React.xcodeproj */;
+				},
+				{
+					ProductGroup = 7914346A2126017A006F13B7 /* Products */;
+					ProjectRef = 6BAAC994942548609D0EEECA /* ReactNativeCustomTabs.xcodeproj */;
+				},
+				{
+					ProductGroup = BF99316D2138673B0077FD20 /* Products */;
+					ProjectRef = 3BD7DCDF7B194D7BB9BE3C6C /* RNImagePicker.xcodeproj */;
+        },
+        {
+					ProductGroup = 796F252E212CAD5D00C6935E /* Products */;
+					ProjectRef = 239ECFF08FA841B99DB1CAFA /* RNDeviceInfo.xcodeproj */;
+				},
+				{
+					ProductGroup = 791434702126017A006F13B7 /* Products */;
+					ProjectRef = 01441BF099BE44EE8BA8E390 /* RNSVG.xcodeproj */;
+				},
+				{
+					ProductGroup = 791434682126017A006F13B7 /* Products */;
+					ProjectRef = 6B6E5A404A4B4A34B18D7D34 /* SafariViewManager.xcodeproj */;
+				},
+				{
+					ProductGroup = 7914346C2126017A006F13B7 /* Products */;
+					ProjectRef = A64D00F181AE4927A4632B6E /* SplashScreen.xcodeproj */;
+				},
+			);
 			projectRoot = "";
 			targets = (
 				13B07F861A680F5B00A75B9A /* apolloschurchapp */,
@@ -396,13 +1111,371 @@
 		};
 /* End PBXProject section */
 
+/* Begin PBXReferenceProxy section */
+		00C302AC1ABCB8CE00DB3ED1 /* libRCTActionSheet.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libRCTActionSheet.a;
+			remoteRef = 00C302AB1ABCB8CE00DB3ED1 /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		00C302BA1ABCB90400DB3ED1 /* libRCTGeolocation.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libRCTGeolocation.a;
+			remoteRef = 00C302B91ABCB90400DB3ED1 /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		00C302C01ABCB91800DB3ED1 /* libRCTImage.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libRCTImage.a;
+			remoteRef = 00C302BF1ABCB91800DB3ED1 /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		00C302DC1ABCB9D200DB3ED1 /* libRCTNetwork.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libRCTNetwork.a;
+			remoteRef = 00C302DB1ABCB9D200DB3ED1 /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		00C302E41ABCB9EE00DB3ED1 /* libRCTVibration.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libRCTVibration.a;
+			remoteRef = 00C302E31ABCB9EE00DB3ED1 /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		139105C11AF99BAD00B5F7CC /* libRCTSettings.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libRCTSettings.a;
+			remoteRef = 139105C01AF99BAD00B5F7CC /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		139FDEF41B06529B00C62182 /* libRCTWebSocket.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libRCTWebSocket.a;
+			remoteRef = 139FDEF31B06529B00C62182 /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		146834041AC3E56700842450 /* libReact.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libReact.a;
+			remoteRef = 146834031AC3E56700842450 /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		2D16E6721FA4F8DC00B85C8A /* libRCTBlob-tvOS.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = "libRCTBlob-tvOS.a";
+			remoteRef = 2D16E6711FA4F8DC00B85C8A /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		2D16E6841FA4F8DC00B85C8A /* libfishhook.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libfishhook.a;
+			remoteRef = 2D16E6831FA4F8DC00B85C8A /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		2D16E6861FA4F8DC00B85C8A /* libfishhook-tvOS.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = "libfishhook-tvOS.a";
+			remoteRef = 2D16E6851FA4F8DC00B85C8A /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		2DF0FFDF2056DD460020B375 /* libjsinspector.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libjsinspector.a;
+			remoteRef = 2DF0FFDE2056DD460020B375 /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		2DF0FFE12056DD460020B375 /* libjsinspector-tvOS.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = "libjsinspector-tvOS.a";
+			remoteRef = 2DF0FFE02056DD460020B375 /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		2DF0FFE32056DD460020B375 /* libthird-party.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = "libthird-party.a";
+			remoteRef = 2DF0FFE22056DD460020B375 /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		2DF0FFE52056DD460020B375 /* libthird-party.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = "libthird-party.a";
+			remoteRef = 2DF0FFE42056DD460020B375 /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		2DF0FFE72056DD460020B375 /* libdouble-conversion.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = "libdouble-conversion.a";
+			remoteRef = 2DF0FFE62056DD460020B375 /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		2DF0FFE92056DD460020B375 /* libdouble-conversion.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = "libdouble-conversion.a";
+			remoteRef = 2DF0FFE82056DD460020B375 /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		2DF0FFEB2056DD460020B375 /* libprivatedata.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libprivatedata.a;
+			remoteRef = 2DF0FFEA2056DD460020B375 /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		2DF0FFED2056DD460020B375 /* libprivatedata-tvOS.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = "libprivatedata-tvOS.a";
+			remoteRef = 2DF0FFEC2056DD460020B375 /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		3DAD3E841DF850E9000B6D8A /* libRCTImage-tvOS.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = "libRCTImage-tvOS.a";
+			remoteRef = 3DAD3E831DF850E9000B6D8A /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		3DAD3E881DF850E9000B6D8A /* libRCTLinking-tvOS.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = "libRCTLinking-tvOS.a";
+			remoteRef = 3DAD3E871DF850E9000B6D8A /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		3DAD3E8C1DF850E9000B6D8A /* libRCTNetwork-tvOS.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = "libRCTNetwork-tvOS.a";
+			remoteRef = 3DAD3E8B1DF850E9000B6D8A /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		3DAD3E901DF850E9000B6D8A /* libRCTSettings-tvOS.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = "libRCTSettings-tvOS.a";
+			remoteRef = 3DAD3E8F1DF850E9000B6D8A /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		3DAD3E941DF850E9000B6D8A /* libRCTText-tvOS.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = "libRCTText-tvOS.a";
+			remoteRef = 3DAD3E931DF850E9000B6D8A /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		3DAD3E991DF850E9000B6D8A /* libRCTWebSocket-tvOS.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = "libRCTWebSocket-tvOS.a";
+			remoteRef = 3DAD3E981DF850E9000B6D8A /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		3DAD3EA31DF850E9000B6D8A /* libReact.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libReact.a;
+			remoteRef = 3DAD3EA21DF850E9000B6D8A /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		3DAD3EA51DF850E9000B6D8A /* libyoga.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libyoga.a;
+			remoteRef = 3DAD3EA41DF850E9000B6D8A /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		3DAD3EA71DF850E9000B6D8A /* libyoga.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libyoga.a;
+			remoteRef = 3DAD3EA61DF850E9000B6D8A /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		3DAD3EA91DF850E9000B6D8A /* libcxxreact.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libcxxreact.a;
+			remoteRef = 3DAD3EA81DF850E9000B6D8A /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		3DAD3EAB1DF850E9000B6D8A /* libcxxreact.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libcxxreact.a;
+			remoteRef = 3DAD3EAA1DF850E9000B6D8A /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		3DAD3EAD1DF850E9000B6D8A /* libjschelpers.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libjschelpers.a;
+			remoteRef = 3DAD3EAC1DF850E9000B6D8A /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		3DAD3EAF1DF850E9000B6D8A /* libjschelpers.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libjschelpers.a;
+			remoteRef = 3DAD3EAE1DF850E9000B6D8A /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		5E9157331DD0AC6500FF2AA8 /* libRCTAnimation.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libRCTAnimation.a;
+			remoteRef = 5E9157321DD0AC6500FF2AA8 /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		5E9157351DD0AC6500FF2AA8 /* libRCTAnimation.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libRCTAnimation.a;
+			remoteRef = 5E9157341DD0AC6500FF2AA8 /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		78C398B91ACF4ADC00677621 /* libRCTLinking.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libRCTLinking.a;
+			remoteRef = 78C398B81ACF4ADC00677621 /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		791434772126017B006F13B7 /* libBVLinearGradient.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libBVLinearGradient.a;
+			remoteRef = 791434762126017B006F13B7 /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		791434792126017B006F13B7 /* libBVLinearGradient.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libBVLinearGradient.a;
+			remoteRef = 791434782126017B006F13B7 /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		7914347D2126017B006F13B7 /* libRCTVideo.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libRCTVideo.a;
+			remoteRef = 7914347C2126017B006F13B7 /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		7914347F2126017B006F13B7 /* libRCTVideo.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libRCTVideo.a;
+			remoteRef = 7914347E2126017B006F13B7 /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		791434822126017B006F13B7 /* libDBCustomTabs.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libDBCustomTabs.a;
+			remoteRef = 791434812126017B006F13B7 /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		791434862126017B006F13B7 /* libRNSVG.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libRNSVG.a;
+			remoteRef = 791434852126017B006F13B7 /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		791434882126017B006F13B7 /* libRNSVG-tvOS.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = "libRNSVG-tvOS.a";
+			remoteRef = 791434872126017B006F13B7 /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		7914348B2126017B006F13B7 /* libSafariViewManager.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libSafariViewManager.a;
+			remoteRef = 7914348A2126017B006F13B7 /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		7914348E2126017B006F13B7 /* libSplashScreen.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libSplashScreen.a;
+			remoteRef = 7914348D2126017B006F13B7 /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		796F2533212CAD5D00C6935E /* libRNDeviceInfo.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libRNDeviceInfo.a;
+			remoteRef = 796F2532212CAD5D00C6935E /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		796F2535212CAD5D00C6935E /* libRNDeviceInfo-tvOS.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = "libRNDeviceInfo-tvOS.a";
+			remoteRef = 796F2534212CAD5D00C6935E /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		797304192146322D00F6E05B /* libMusicControl.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libMusicControl.a;
+			remoteRef = 797304182146322D00F6E05B /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		7973041B2146322D00F6E05B /* libMusicControl-tvOS.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = "libMusicControl-tvOS.a";
+			remoteRef = 7973041A2146322D00F6E05B /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		832341B51AAA6A8300B99B32 /* libRCTText.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libRCTText.a;
+			remoteRef = 832341B41AAA6A8300B99B32 /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		ADBDB9271DFEBF0700ED6528 /* libRCTBlob.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libRCTBlob.a;
+			remoteRef = ADBDB9261DFEBF0700ED6528 /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		BF9931712138673B0077FD20 /* libRNImagePicker.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libRNImagePicker.a;
+			remoteRef = BF9931702138673B0077FD20 /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+/* End PBXReferenceProxy section */
+
 /* Begin PBXResourcesBuildPhase section */
 		00E356EC1AD99517003FC87E /* Resources */ = {
 			isa = PBXResourcesBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
-				82AAE537241888D100D1EEC7 /* Images.xcassets in Resources */,
-				82AAE52F24187BB500D1EEC7 /* BootSplash.storyboard in Resources */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
@@ -411,19 +1484,19 @@
 			buildActionMask = 2147483647;
 			files = (
 				13B07FBF1A68108700A75B9A /* Images.xcassets in Resources */,
-				08CE105F17284254AD54AF84 /* DroidSerif-Bold.ttf in Resources */,
-				B02F194A3F6A4FE29AC799B4 /* DroidSerif-BoldItalic.ttf in Resources */,
-				90743C40BF544F10A810C43C /* DroidSerif-Italic.ttf in Resources */,
-				93A2B0A9328A46A4B7DD5EFA /* DroidSerif-Regular.ttf in Resources */,
-				68D1351E80AA4A2C96288FD9 /* Inter-UI-Black.otf in Resources */,
-				578FFEC1D7D54C9B871A9E5B /* Inter-UI-BlackItalic.otf in Resources */,
-				7FBC6BC3CE8D48298F9850A9 /* Inter-UI-Bold.otf in Resources */,
-				894732A70B4740678E85B593 /* Inter-UI-BoldItalic.otf in Resources */,
-				01F091B02048490A8F9EF4FE /* Inter-UI-Italic.otf in Resources */,
-				1C48DCDE11AC47C48E918489 /* Inter-UI-Medium.otf in Resources */,
-				FCB3069DB5DD4170B2CAEFC4 /* Inter-UI-MediumItalic.otf in Resources */,
-				AB3BD177B8A14193A5EEDDF8 /* Inter-UI-Regular.otf in Resources */,
-				82AAE52E24187BB500D1EEC7 /* BootSplash.storyboard in Resources */,
+				13B07FBD1A68108700A75B9A /* LaunchScreen.xib in Resources */,
+				C87CA8735EEB43C4A55CB285 /* DroidSerif-Bold.ttf in Resources */,
+				59D8DFA78CDF4642892CC142 /* DroidSerif-BoldItalic.ttf in Resources */,
+				9ACBD642B18D41C9BB1E4D9E /* DroidSerif-Italic.ttf in Resources */,
+				D5744BF3B41D4BC49F93CD68 /* DroidSerif-Regular.ttf in Resources */,
+				417027FD83CA4902AB4DB2B4 /* Inter-UI-Black.otf in Resources */,
+				6E4442FB39BE4F898DE4C454 /* Inter-UI-BlackItalic.otf in Resources */,
+				F8FAD93CCE5641A8B87611EA /* Inter-UI-Bold.otf in Resources */,
+				E374C61F2AAF41D3B615AB44 /* Inter-UI-BoldItalic.otf in Resources */,
+				5CA1D8E805684478B04ABB60 /* Inter-UI-Italic.otf in Resources */,
+				A173C226549E48B991AC5D98 /* Inter-UI-Medium.otf in Resources */,
+				0D4EDF6EBA274F9D93DDED76 /* Inter-UI-MediumItalic.otf in Resources */,
+				7D060CA312AB4E828CD60DDC /* Inter-UI-Regular.otf in Resources */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
@@ -432,7 +1505,6 @@
 			buildActionMask = 2147483647;
 			files = (
 				2D02E4BD1E0B4A84006451C7 /* Images.xcassets in Resources */,
-				82AAE53024187BB500D1EEC7 /* BootSplash.storyboard in Resources */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
@@ -440,8 +1512,6 @@
 			isa = PBXResourcesBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
-				82AAE538241888D200D1EEC7 /* Images.xcassets in Resources */,
-				82AAE53124187BB500D1EEC7 /* BootSplash.storyboard in Resources */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
@@ -462,28 +1532,6 @@
 			shellPath = /bin/sh;
 			shellScript = "export NODE_BINARY=node\n../node_modules/react-native/scripts/react-native-xcode.sh";
 		};
-		2C62ED438C51D0F43EC7017B /* [CP] Check Pods Manifest.lock */ = {
-			isa = PBXShellScriptBuildPhase;
-			buildActionMask = 2147483647;
-			files = (
-			);
-			inputFileListPaths = (
-			);
-			inputPaths = (
-				"${PODS_PODFILE_DIR_PATH}/Podfile.lock",
-				"${PODS_ROOT}/Manifest.lock",
-			);
-			name = "[CP] Check Pods Manifest.lock";
-			outputFileListPaths = (
-			);
-			outputPaths = (
-				"$(DERIVED_FILE_DIR)/Pods-apolloschurchappTests-checkManifestLockResult.txt",
-			);
-			runOnlyForDeploymentPostprocessing = 0;
-			shellPath = /bin/sh;
-			shellScript = "diff \"${PODS_PODFILE_DIR_PATH}/Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null\nif [ $? != 0 ] ; then\n    # print error to STDERR\n    echo \"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\" >&2\n    exit 1\nfi\n# This output is used by Xcode 'outputs' to avoid re-running this script phase.\necho \"SUCCESS\" > \"${SCRIPT_OUTPUT_FILE_0}\"\n";
-			showEnvVarsInLog = 0;
-		};
 		2D02E4CB1E0B4B27006451C7 /* Bundle React Native Code And Images */ = {
 			isa = PBXShellScriptBuildPhase;
 			buildActionMask = 2147483647;
@@ -498,92 +1546,6 @@
 			shellPath = /bin/sh;
 			shellScript = "export NODE_BINARY=node\n../node_modules/react-native/scripts/react-native-xcode.sh";
 		};
-		43D579D8398224D7B09F58F6 /* [CP] Copy Pods Resources */ = {
-			isa = PBXShellScriptBuildPhase;
-			buildActionMask = 2147483647;
-			files = (
-			);
-			inputPaths = (
-				"${PODS_ROOT}/Target Support Files/Pods-apolloschurchapp/Pods-apolloschurchapp-resources.sh",
-				"${PODS_ROOT}/google-cast-sdk-no-bluetooth/GoogleCastSDK-ios-4.5.1_static/GoogleCast.framework/GoogleCastCoreResources.bundle",
-				"${PODS_ROOT}/google-cast-sdk-no-bluetooth/GoogleCastSDK-ios-4.5.1_static/GoogleCast.framework/GoogleCastUIResources.bundle",
-			);
-			name = "[CP] Copy Pods Resources";
-			outputPaths = (
-				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/GoogleCastCoreResources.bundle",
-				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/GoogleCastUIResources.bundle",
-			);
-			runOnlyForDeploymentPostprocessing = 0;
-			shellPath = /bin/sh;
-			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-apolloschurchapp/Pods-apolloschurchapp-resources.sh\"\n";
-			showEnvVarsInLog = 0;
-		};
-		9C20354F160AAF86C8281F23 /* [CP] Check Pods Manifest.lock */ = {
-			isa = PBXShellScriptBuildPhase;
-			buildActionMask = 2147483647;
-			files = (
-			);
-			inputFileListPaths = (
-			);
-			inputPaths = (
-				"${PODS_PODFILE_DIR_PATH}/Podfile.lock",
-				"${PODS_ROOT}/Manifest.lock",
-			);
-			name = "[CP] Check Pods Manifest.lock";
-			outputFileListPaths = (
-			);
-			outputPaths = (
-				"$(DERIVED_FILE_DIR)/Pods-apolloschurchapp-tvOS-checkManifestLockResult.txt",
-			);
-			runOnlyForDeploymentPostprocessing = 0;
-			shellPath = /bin/sh;
-			shellScript = "diff \"${PODS_PODFILE_DIR_PATH}/Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null\nif [ $? != 0 ] ; then\n    # print error to STDERR\n    echo \"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\" >&2\n    exit 1\nfi\n# This output is used by Xcode 'outputs' to avoid re-running this script phase.\necho \"SUCCESS\" > \"${SCRIPT_OUTPUT_FILE_0}\"\n";
-			showEnvVarsInLog = 0;
-		};
-		A85CD736CDC3356677735901 /* [CP] Check Pods Manifest.lock */ = {
-			isa = PBXShellScriptBuildPhase;
-			buildActionMask = 2147483647;
-			files = (
-			);
-			inputFileListPaths = (
-			);
-			inputPaths = (
-				"${PODS_PODFILE_DIR_PATH}/Podfile.lock",
-				"${PODS_ROOT}/Manifest.lock",
-			);
-			name = "[CP] Check Pods Manifest.lock";
-			outputFileListPaths = (
-			);
-			outputPaths = (
-				"$(DERIVED_FILE_DIR)/Pods-apolloschurchapp-tvOSTests-checkManifestLockResult.txt",
-			);
-			runOnlyForDeploymentPostprocessing = 0;
-			shellPath = /bin/sh;
-			shellScript = "diff \"${PODS_PODFILE_DIR_PATH}/Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null\nif [ $? != 0 ] ; then\n    # print error to STDERR\n    echo \"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\" >&2\n    exit 1\nfi\n# This output is used by Xcode 'outputs' to avoid re-running this script phase.\necho \"SUCCESS\" > \"${SCRIPT_OUTPUT_FILE_0}\"\n";
-			showEnvVarsInLog = 0;
-		};
-		DEEF24CE4F76789E5E8C369D /* [CP] Check Pods Manifest.lock */ = {
-			isa = PBXShellScriptBuildPhase;
-			buildActionMask = 2147483647;
-			files = (
-			);
-			inputFileListPaths = (
-			);
-			inputPaths = (
-				"${PODS_PODFILE_DIR_PATH}/Podfile.lock",
-				"${PODS_ROOT}/Manifest.lock",
-			);
-			name = "[CP] Check Pods Manifest.lock";
-			outputFileListPaths = (
-			);
-			outputPaths = (
-				"$(DERIVED_FILE_DIR)/Pods-apolloschurchapp-checkManifestLockResult.txt",
-			);
-			runOnlyForDeploymentPostprocessing = 0;
-			shellPath = /bin/sh;
-			shellScript = "diff \"${PODS_PODFILE_DIR_PATH}/Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null\nif [ $? != 0 ] ; then\n    # print error to STDERR\n    echo \"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\" >&2\n    exit 1\nfi\n# This output is used by Xcode 'outputs' to avoid re-running this script phase.\necho \"SUCCESS\" > \"${SCRIPT_OUTPUT_FILE_0}\"\n";
-			showEnvVarsInLog = 0;
-		};
 /* End PBXShellScriptBuildPhase section */
 
 /* Begin PBXSourcesBuildPhase section */
@@ -636,10 +1598,21 @@
 		};
 /* End PBXTargetDependency section */
 
+/* Begin PBXVariantGroup section */
+		13B07FB11A68108700A75B9A /* LaunchScreen.xib */ = {
+			isa = PBXVariantGroup;
+			children = (
+				13B07FB21A68108700A75B9A /* Base */,
+			);
+			name = LaunchScreen.xib;
+			path = apolloschurchapp;
+			sourceTree = "<group>";
+		};
+/* End PBXVariantGroup section */
+
 /* Begin XCBuildConfiguration section */
 		00E356F61AD99517003FC87E /* Debug */ = {
 			isa = XCBuildConfiguration;
-			baseConfigurationReference = AB44FC16DED929081698EDFD /* Pods-apolloschurchappTests.debug.xcconfig */;
 			buildSettings = {
 				BUNDLE_LOADER = "$(TEST_HOST)";
 				GCC_PREPROCESSOR_DEFINITIONS = (
@@ -648,17 +1621,37 @@
 				);
 				HEADER_SEARCH_PATHS = (
 					"$(inherited)",
+					"$(SRCROOT)/../node_modules/react-native-custom-tabs/ios/ReactNativeCustomTabs",
+					"$(SRCROOT)/../node_modules/react-native-linear-gradient/BVLinearGradient",
+					"$(SRCROOT)/../node_modules/react-native-safari-view",
+					"$(SRCROOT)/../node_modules/react-native-splash-screen/ios",
+					"$(SRCROOT)/../node_modules/react-native-svg/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-video/ios",
+					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
+					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
+					"$(SRCROOT)/../node_modules/react-native-music-control/ios",
 				);
 				INFOPLIST_FILE = apolloschurchappTests/Info.plist;
 				IPHONEOS_DEPLOYMENT_TARGET = 9.0;
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @loader_path/Frameworks";
-				LIBRARY_SEARCH_PATHS = "$(inherited)";
+				LIBRARY_SEARCH_PATHS = (
+					"$(inherited)",
+					"\"$(SRCROOT)/$(TARGET_NAME)\"",
+					"\"$(SRCROOT)/$(TARGET_NAME)\"",
+					"\"$(SRCROOT)/$(TARGET_NAME)\"",
+					"\"$(SRCROOT)/$(TARGET_NAME)\"",
+					"\"$(SRCROOT)/$(TARGET_NAME)\"",
+					"\"$(SRCROOT)/$(TARGET_NAME)\"",
+					"\"$(SRCROOT)/$(TARGET_NAME)\"",
+					"\"$(SRCROOT)/$(TARGET_NAME)\"",
+					"\"$(SRCROOT)/$(TARGET_NAME)\"",
+					"\"$(SRCROOT)/$(TARGET_NAME)\"",
+					"\"$(SRCROOT)/$(TARGET_NAME)\"",
+				);
 				OTHER_LDFLAGS = (
 					"-ObjC",
 					"-lc++",
 				);
-				PRODUCT_BUNDLE_IDENTIFIER = "org.reactjs.native.example.$(PRODUCT_NAME:rfc1034identifier)";
 				PRODUCT_NAME = "$(TARGET_NAME)";
 				TEST_HOST = "$(BUILT_PRODUCTS_DIR)/apolloschurchapp.app/apolloschurchapp";
 			};
@@ -666,23 +1659,42 @@
 		};
 		00E356F71AD99517003FC87E /* Release */ = {
 			isa = XCBuildConfiguration;
-			baseConfigurationReference = E98AC9782C338F13632EF710 /* Pods-apolloschurchappTests.release.xcconfig */;
 			buildSettings = {
 				BUNDLE_LOADER = "$(TEST_HOST)";
 				COPY_PHASE_STRIP = NO;
 				HEADER_SEARCH_PATHS = (
 					"$(inherited)",
+					"$(SRCROOT)/../node_modules/react-native-custom-tabs/ios/ReactNativeCustomTabs",
+					"$(SRCROOT)/../node_modules/react-native-linear-gradient/BVLinearGradient",
+					"$(SRCROOT)/../node_modules/react-native-safari-view",
+					"$(SRCROOT)/../node_modules/react-native-splash-screen/ios",
+					"$(SRCROOT)/../node_modules/react-native-svg/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-video/ios",
+					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
+					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
+					"$(SRCROOT)/../node_modules/react-native-music-control/ios",
 				);
 				INFOPLIST_FILE = apolloschurchappTests/Info.plist;
 				IPHONEOS_DEPLOYMENT_TARGET = 9.0;
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @loader_path/Frameworks";
-				LIBRARY_SEARCH_PATHS = "$(inherited)";
+				LIBRARY_SEARCH_PATHS = (
+					"$(inherited)",
+					"\"$(SRCROOT)/$(TARGET_NAME)\"",
+					"\"$(SRCROOT)/$(TARGET_NAME)\"",
+					"\"$(SRCROOT)/$(TARGET_NAME)\"",
+					"\"$(SRCROOT)/$(TARGET_NAME)\"",
+					"\"$(SRCROOT)/$(TARGET_NAME)\"",
+					"\"$(SRCROOT)/$(TARGET_NAME)\"",
+					"\"$(SRCROOT)/$(TARGET_NAME)\"",
+					"\"$(SRCROOT)/$(TARGET_NAME)\"",
+					"\"$(SRCROOT)/$(TARGET_NAME)\"",
+					"\"$(SRCROOT)/$(TARGET_NAME)\"",
+					"\"$(SRCROOT)/$(TARGET_NAME)\"",
+				);
 				OTHER_LDFLAGS = (
 					"-ObjC",
 					"-lc++",
 				);
-				PRODUCT_BUNDLE_IDENTIFIER = "org.reactjs.native.example.$(PRODUCT_NAME:rfc1034identifier)";
 				PRODUCT_NAME = "$(TARGET_NAME)";
 				TEST_HOST = "$(BUILT_PRODUCTS_DIR)/apolloschurchapp.app/apolloschurchapp";
 			};
@@ -690,18 +1702,22 @@
 		};
 		13B07F941A680F5B00A75B9A /* Debug */ = {
 			isa = XCBuildConfiguration;
-			baseConfigurationReference = 54F271B8EB67A4997A2C7D96 /* Pods-apolloschurchapp.debug.xcconfig */;
 			buildSettings = {
 				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
-				CODE_SIGN_ENTITLEMENTS = apolloschurchapp/apolloschurchapp.entitlements;
-				CODE_SIGN_IDENTITY = "Apple Development: Apollos Apps (58685TNK9H)";
-				CODE_SIGN_STYLE = Manual;
-				CURRENT_PROJECT_VERSION = 274;
+				CURRENT_PROJECT_VERSION = 1;
 				DEAD_CODE_STRIPPING = NO;
-				DEVELOPMENT_TEAM = 7KS82J74VW;
+				DEVELOPMENT_TEAM = 7TM8C6252Z;
 				HEADER_SEARCH_PATHS = (
 					"$(inherited)",
+					"$(SRCROOT)/../node_modules/react-native-custom-tabs/ios/ReactNativeCustomTabs",
+					"$(SRCROOT)/../node_modules/react-native-linear-gradient/BVLinearGradient",
+					"$(SRCROOT)/../node_modules/react-native-safari-view",
+					"$(SRCROOT)/../node_modules/react-native-splash-screen/ios",
+					"$(SRCROOT)/../node_modules/react-native-svg/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-video/ios",
+					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
+					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
+					"$(SRCROOT)/../node_modules/react-native-music-control/ios",
 				);
 				INFOPLIST_FILE = apolloschurchapp/Info.plist;
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
@@ -710,26 +1726,28 @@
 					"-ObjC",
 					"-lc++",
 				);
-				PRODUCT_BUNDLE_IDENTIFIER = com.differential.apollos;
 				PRODUCT_NAME = apolloschurchapp;
-				PROVISIONING_PROFILE_SPECIFIER = "match Development com.differential.apollos";
 				VERSIONING_SYSTEM = "apple-generic";
 			};
 			name = Debug;
 		};
 		13B07F951A680F5B00A75B9A /* Release */ = {
 			isa = XCBuildConfiguration;
-			baseConfigurationReference = 1F8F5BC4745C8F22C695573D /* Pods-apolloschurchapp.release.xcconfig */;
 			buildSettings = {
 				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
-				CODE_SIGN_ENTITLEMENTS = apolloschurchapp/apolloschurchapp.entitlements;
-				CODE_SIGN_IDENTITY = "Apple Distribution: Differential Dev Shop, LLC (7KS82J74VW)";
-				CODE_SIGN_STYLE = Manual;
-				CURRENT_PROJECT_VERSION = 274;
-				DEVELOPMENT_TEAM = 7KS82J74VW;
+				CURRENT_PROJECT_VERSION = 1;
+				DEVELOPMENT_TEAM = 7TM8C6252Z;
 				HEADER_SEARCH_PATHS = (
 					"$(inherited)",
+					"$(SRCROOT)/../node_modules/react-native-custom-tabs/ios/ReactNativeCustomTabs",
+					"$(SRCROOT)/../node_modules/react-native-linear-gradient/BVLinearGradient",
+					"$(SRCROOT)/../node_modules/react-native-safari-view",
+					"$(SRCROOT)/../node_modules/react-native-splash-screen/ios",
+					"$(SRCROOT)/../node_modules/react-native-svg/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-video/ios",
+					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
+					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
+					"$(SRCROOT)/../node_modules/react-native-music-control/ios",
 				);
 				INFOPLIST_FILE = apolloschurchapp/Info.plist;
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
@@ -738,16 +1756,13 @@
 					"-ObjC",
 					"-lc++",
 				);
-				PRODUCT_BUNDLE_IDENTIFIER = com.differential.apollos;
 				PRODUCT_NAME = apolloschurchapp;
-				PROVISIONING_PROFILE_SPECIFIER = "match AppStore com.differential.apollos";
 				VERSIONING_SYSTEM = "apple-generic";
 			};
 			name = Release;
 		};
 		2D02E4971E0B4A5E006451C7 /* Debug */ = {
 			isa = XCBuildConfiguration;
-			baseConfigurationReference = 745C835CA2F1E1EC2425152A /* Pods-apolloschurchapp-tvOS.debug.xcconfig */;
 			buildSettings = {
 				ASSETCATALOG_COMPILER_APPICON_NAME = "App Icon & Top Shelf Image";
 				ASSETCATALOG_COMPILER_LAUNCHIMAGE_NAME = LaunchImage;
@@ -760,16 +1775,37 @@
 				GCC_NO_COMMON_BLOCKS = YES;
 				HEADER_SEARCH_PATHS = (
 					"$(inherited)",
+					"$(SRCROOT)/../node_modules/react-native-custom-tabs/ios/ReactNativeCustomTabs",
+					"$(SRCROOT)/../node_modules/react-native-linear-gradient/BVLinearGradient",
+					"$(SRCROOT)/../node_modules/react-native-safari-view",
+					"$(SRCROOT)/../node_modules/react-native-splash-screen/ios",
+					"$(SRCROOT)/../node_modules/react-native-svg/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-video/ios",
+					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
+					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
+					"$(SRCROOT)/../node_modules/react-native-music-control/ios",
 				);
 				INFOPLIST_FILE = "apolloschurchapp-tvOS/Info.plist";
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
-				LIBRARY_SEARCH_PATHS = "$(inherited)";
+				LIBRARY_SEARCH_PATHS = (
+					"$(inherited)",
+					"\"$(SRCROOT)/$(TARGET_NAME)\"",
+					"\"$(SRCROOT)/$(TARGET_NAME)\"",
+					"\"$(SRCROOT)/$(TARGET_NAME)\"",
+					"\"$(SRCROOT)/$(TARGET_NAME)\"",
+					"\"$(SRCROOT)/$(TARGET_NAME)\"",
+					"\"$(SRCROOT)/$(TARGET_NAME)\"",
+					"\"$(SRCROOT)/$(TARGET_NAME)\"",
+					"\"$(SRCROOT)/$(TARGET_NAME)\"",
+					"\"$(SRCROOT)/$(TARGET_NAME)\"",
+					"\"$(SRCROOT)/$(TARGET_NAME)\"",
+					"\"$(SRCROOT)/$(TARGET_NAME)\"",
+				);
 				OTHER_LDFLAGS = (
 					"-ObjC",
 					"-lc++",
 				);
-				PRODUCT_BUNDLE_IDENTIFIER = "com.facebook.REACT.apolloschurchapp-tvOS";
+				PRODUCT_BUNDLE_IDENTIFIER = "org.reactjs.native.apolloschurchapp-tvOS";
 				PRODUCT_NAME = "$(TARGET_NAME)";
 				SDKROOT = appletvos;
 				TARGETED_DEVICE_FAMILY = 3;
@@ -779,7 +1815,6 @@
 		};
 		2D02E4981E0B4A5E006451C7 /* Release */ = {
 			isa = XCBuildConfiguration;
-			baseConfigurationReference = AE85030F59F256E90D5A4C2B /* Pods-apolloschurchapp-tvOS.release.xcconfig */;
 			buildSettings = {
 				ASSETCATALOG_COMPILER_APPICON_NAME = "App Icon & Top Shelf Image";
 				ASSETCATALOG_COMPILER_LAUNCHIMAGE_NAME = LaunchImage;
@@ -792,16 +1827,37 @@
 				GCC_NO_COMMON_BLOCKS = YES;
 				HEADER_SEARCH_PATHS = (
 					"$(inherited)",
+					"$(SRCROOT)/../node_modules/react-native-custom-tabs/ios/ReactNativeCustomTabs",
+					"$(SRCROOT)/../node_modules/react-native-linear-gradient/BVLinearGradient",
+					"$(SRCROOT)/../node_modules/react-native-safari-view",
+					"$(SRCROOT)/../node_modules/react-native-splash-screen/ios",
+					"$(SRCROOT)/../node_modules/react-native-svg/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-video/ios",
+					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
+					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
+					"$(SRCROOT)/../node_modules/react-native-music-control/ios",
 				);
 				INFOPLIST_FILE = "apolloschurchapp-tvOS/Info.plist";
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
-				LIBRARY_SEARCH_PATHS = "$(inherited)";
+				LIBRARY_SEARCH_PATHS = (
+					"$(inherited)",
+					"\"$(SRCROOT)/$(TARGET_NAME)\"",
+					"\"$(SRCROOT)/$(TARGET_NAME)\"",
+					"\"$(SRCROOT)/$(TARGET_NAME)\"",
+					"\"$(SRCROOT)/$(TARGET_NAME)\"",
+					"\"$(SRCROOT)/$(TARGET_NAME)\"",
+					"\"$(SRCROOT)/$(TARGET_NAME)\"",
+					"\"$(SRCROOT)/$(TARGET_NAME)\"",
+					"\"$(SRCROOT)/$(TARGET_NAME)\"",
+					"\"$(SRCROOT)/$(TARGET_NAME)\"",
+					"\"$(SRCROOT)/$(TARGET_NAME)\"",
+					"\"$(SRCROOT)/$(TARGET_NAME)\"",
+				);
 				OTHER_LDFLAGS = (
 					"-ObjC",
 					"-lc++",
 				);
-				PRODUCT_BUNDLE_IDENTIFIER = "com.facebook.REACT.apolloschurchapp-tvOS";
+				PRODUCT_BUNDLE_IDENTIFIER = "org.reactjs.native.apolloschurchapp-tvOS";
 				PRODUCT_NAME = "$(TARGET_NAME)";
 				SDKROOT = appletvos;
 				TARGETED_DEVICE_FAMILY = 3;
@@ -811,7 +1867,6 @@
 		};
 		2D02E4991E0B4A5E006451C7 /* Debug */ = {
 			isa = XCBuildConfiguration;
-			baseConfigurationReference = D394E3064D75710E81C51EB0 /* Pods-apolloschurchapp-tvOSTests.debug.xcconfig */;
 			buildSettings = {
 				BUNDLE_LOADER = "$(TEST_HOST)";
 				CLANG_ANALYZER_NONNULL = YES;
@@ -823,16 +1878,37 @@
 				GCC_NO_COMMON_BLOCKS = YES;
 				HEADER_SEARCH_PATHS = (
 					"$(inherited)",
+					"$(SRCROOT)/../node_modules/react-native-custom-tabs/ios/ReactNativeCustomTabs",
+					"$(SRCROOT)/../node_modules/react-native-linear-gradient/BVLinearGradient",
+					"$(SRCROOT)/../node_modules/react-native-safari-view",
+					"$(SRCROOT)/../node_modules/react-native-splash-screen/ios",
+					"$(SRCROOT)/../node_modules/react-native-svg/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-video/ios",
+					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
+					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
+					"$(SRCROOT)/../node_modules/react-native-music-control/ios",
 				);
 				INFOPLIST_FILE = "apolloschurchapp-tvOSTests/Info.plist";
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @loader_path/Frameworks";
-				LIBRARY_SEARCH_PATHS = "$(inherited)";
+				LIBRARY_SEARCH_PATHS = (
+					"$(inherited)",
+					"\"$(SRCROOT)/$(TARGET_NAME)\"",
+					"\"$(SRCROOT)/$(TARGET_NAME)\"",
+					"\"$(SRCROOT)/$(TARGET_NAME)\"",
+					"\"$(SRCROOT)/$(TARGET_NAME)\"",
+					"\"$(SRCROOT)/$(TARGET_NAME)\"",
+					"\"$(SRCROOT)/$(TARGET_NAME)\"",
+					"\"$(SRCROOT)/$(TARGET_NAME)\"",
+					"\"$(SRCROOT)/$(TARGET_NAME)\"",
+					"\"$(SRCROOT)/$(TARGET_NAME)\"",
+					"\"$(SRCROOT)/$(TARGET_NAME)\"",
+					"\"$(SRCROOT)/$(TARGET_NAME)\"",
+				);
 				OTHER_LDFLAGS = (
 					"-ObjC",
 					"-lc++",
 				);
-				PRODUCT_BUNDLE_IDENTIFIER = "com.facebook.REACT.apolloschurchapp-tvOSTests";
+				PRODUCT_BUNDLE_IDENTIFIER = "org.reactjs.native.apolloschurchapp-tvOSTests";
 				PRODUCT_NAME = "$(TARGET_NAME)";
 				SDKROOT = appletvos;
 				TEST_HOST = "$(BUILT_PRODUCTS_DIR)/apolloschurchapp-tvOS.app/apolloschurchapp-tvOS";
@@ -842,7 +1918,6 @@
 		};
 		2D02E49A1E0B4A5E006451C7 /* Release */ = {
 			isa = XCBuildConfiguration;
-			baseConfigurationReference = DA9745795726553C6FA9E7A8 /* Pods-apolloschurchapp-tvOSTests.release.xcconfig */;
 			buildSettings = {
 				BUNDLE_LOADER = "$(TEST_HOST)";
 				CLANG_ANALYZER_NONNULL = YES;
@@ -854,16 +1929,37 @@
 				GCC_NO_COMMON_BLOCKS = YES;
 				HEADER_SEARCH_PATHS = (
 					"$(inherited)",
+					"$(SRCROOT)/../node_modules/react-native-custom-tabs/ios/ReactNativeCustomTabs",
+					"$(SRCROOT)/../node_modules/react-native-linear-gradient/BVLinearGradient",
+					"$(SRCROOT)/../node_modules/react-native-safari-view",
+					"$(SRCROOT)/../node_modules/react-native-splash-screen/ios",
+					"$(SRCROOT)/../node_modules/react-native-svg/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-video/ios",
+					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
+					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
+					"$(SRCROOT)/../node_modules/react-native-music-control/ios",
 				);
 				INFOPLIST_FILE = "apolloschurchapp-tvOSTests/Info.plist";
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @loader_path/Frameworks";
-				LIBRARY_SEARCH_PATHS = "$(inherited)";
+				LIBRARY_SEARCH_PATHS = (
+					"$(inherited)",
+					"\"$(SRCROOT)/$(TARGET_NAME)\"",
+					"\"$(SRCROOT)/$(TARGET_NAME)\"",
+					"\"$(SRCROOT)/$(TARGET_NAME)\"",
+					"\"$(SRCROOT)/$(TARGET_NAME)\"",
+					"\"$(SRCROOT)/$(TARGET_NAME)\"",
+					"\"$(SRCROOT)/$(TARGET_NAME)\"",
+					"\"$(SRCROOT)/$(TARGET_NAME)\"",
+					"\"$(SRCROOT)/$(TARGET_NAME)\"",
+					"\"$(SRCROOT)/$(TARGET_NAME)\"",
+					"\"$(SRCROOT)/$(TARGET_NAME)\"",
+					"\"$(SRCROOT)/$(TARGET_NAME)\"",
+				);
 				OTHER_LDFLAGS = (
 					"-ObjC",
 					"-lc++",
 				);
-				PRODUCT_BUNDLE_IDENTIFIER = "com.facebook.REACT.apolloschurchapp-tvOSTests";
+				PRODUCT_BUNDLE_IDENTIFIER = "org.reactjs.native.apolloschurchapp-tvOSTests";
 				PRODUCT_NAME = "$(TARGET_NAME)";
 				SDKROOT = appletvos;
 				TEST_HOST = "$(BUILT_PRODUCTS_DIR)/apolloschurchapp-tvOS.app/apolloschurchapp-tvOS";
@@ -879,32 +1975,20 @@
 				CLANG_CXX_LIBRARY = "libc++";
 				CLANG_ENABLE_MODULES = YES;
 				CLANG_ENABLE_OBJC_ARC = YES;
-				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
 				CLANG_WARN_BOOL_CONVERSION = YES;
-				CLANG_WARN_COMMA = YES;
 				CLANG_WARN_CONSTANT_CONVERSION = YES;
-				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
 				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
 				CLANG_WARN_EMPTY_BODY = YES;
 				CLANG_WARN_ENUM_CONVERSION = YES;
-				CLANG_WARN_INFINITE_RECURSION = YES;
 				CLANG_WARN_INT_CONVERSION = YES;
-				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
-				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
-				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
 				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
-				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
-				CLANG_WARN_STRICT_PROTOTYPES = YES;
-				CLANG_WARN_SUSPICIOUS_MOVE = YES;
 				CLANG_WARN_UNREACHABLE_CODE = YES;
 				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
 				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "iPhone Developer";
 				COPY_PHASE_STRIP = NO;
 				ENABLE_STRICT_OBJC_MSGSEND = YES;
-				ENABLE_TESTABILITY = YES;
 				GCC_C_LANGUAGE_STANDARD = gnu99;
 				GCC_DYNAMIC_NO_PIC = NO;
-				GCC_NO_COMMON_BLOCKS = YES;
 				GCC_OPTIMIZATION_LEVEL = 0;
 				GCC_PREPROCESSOR_DEFINITIONS = (
 					"DEBUG=1",
@@ -932,23 +2016,13 @@
 				CLANG_CXX_LIBRARY = "libc++";
 				CLANG_ENABLE_MODULES = YES;
 				CLANG_ENABLE_OBJC_ARC = YES;
-				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
 				CLANG_WARN_BOOL_CONVERSION = YES;
-				CLANG_WARN_COMMA = YES;
 				CLANG_WARN_CONSTANT_CONVERSION = YES;
-				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
 				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
 				CLANG_WARN_EMPTY_BODY = YES;
 				CLANG_WARN_ENUM_CONVERSION = YES;
-				CLANG_WARN_INFINITE_RECURSION = YES;
 				CLANG_WARN_INT_CONVERSION = YES;
-				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
-				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
-				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
 				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
-				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
-				CLANG_WARN_STRICT_PROTOTYPES = YES;
-				CLANG_WARN_SUSPICIOUS_MOVE = YES;
 				CLANG_WARN_UNREACHABLE_CODE = YES;
 				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
 				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "iPhone Developer";
@@ -956,7 +2030,6 @@
 				ENABLE_NS_ASSERTIONS = NO;
 				ENABLE_STRICT_OBJC_MSGSEND = YES;
 				GCC_C_LANGUAGE_STANDARD = gnu99;
-				GCC_NO_COMMON_BLOCKS = YES;
 				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
 				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
 				GCC_WARN_UNDECLARED_SELECTOR = YES;
diff --git a/apolloschurchapp/ios/apolloschurchapp.xcworkspace/xcshareddata/xcschemes/apolloschurchappprod.xcscheme b/apolloschurchapp/ios/apolloschurchapp.xcodeproj/xcshareddata/xcschemes/apolloschurchapp-tvOS.xcscheme
similarity index 71%
rename from apolloschurchapp/ios/apolloschurchapp.xcworkspace/xcshareddata/xcschemes/apolloschurchappprod.xcscheme
rename to apolloschurchapp/ios/apolloschurchapp.xcodeproj/xcshareddata/xcschemes/apolloschurchapp-tvOS.xcscheme
index cb89197..d6df8e6 100644
--- a/apolloschurchapp/ios/apolloschurchapp.xcworkspace/xcshareddata/xcschemes/apolloschurchappprod.xcscheme
+++ b/apolloschurchapp/ios/apolloschurchapp.xcodeproj/xcshareddata/xcschemes/apolloschurchapp-tvOS.xcscheme
@@ -1,19 +1,10 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <Scheme
-   LastUpgradeVersion = "0940"
+   LastUpgradeVersion = "0820"
    version = "1.3">
    <BuildAction
       parallelizeBuildables = "NO"
       buildImplicitDependencies = "YES">
-      <PreActions>
-         <ExecutionAction
-            ActionType = "Xcode.IDEStandardExecutionActionsCore.ExecutionActionType.ShellScriptAction">
-            <ActionContent
-               title = "Run Script"
-               scriptText = "echo &quot;.env.production&quot; &gt; /tmp/envfile&#10;">
-            </ActionContent>
-         </ExecutionAction>
-      </PreActions>
       <BuildActionEntries>
          <BuildActionEntry
             buildForTesting = "YES"
@@ -23,9 +14,9 @@
             buildForAnalyzing = "YES">
             <BuildableReference
                BuildableIdentifier = "primary"
-               BlueprintIdentifier = "83CBBA2D1A601D0E00E9B192"
+               BlueprintIdentifier = "2D2A28121D9B038B00D4039D"
                BuildableName = "libReact.a"
-               BlueprintName = "React"
+               BlueprintName = "React-tvOS"
                ReferencedContainer = "container:../node_modules/react-native/React/React.xcodeproj">
             </BuildableReference>
          </BuildActionEntry>
@@ -37,9 +28,9 @@
             buildForAnalyzing = "YES">
             <BuildableReference
                BuildableIdentifier = "primary"
-               BlueprintIdentifier = "13B07F861A680F5B00A75B9A"
-               BuildableName = "apolloschurchapp.app"
-               BlueprintName = "apolloschurchapp"
+               BlueprintIdentifier = "2D02E47A1E0B4A5D006451C7"
+               BuildableName = "apolloschurchapp-tvOS.app"
+               BlueprintName = "apolloschurchapp-tvOS"
                ReferencedContainer = "container:apolloschurchapp.xcodeproj">
             </BuildableReference>
          </BuildActionEntry>
@@ -51,9 +42,9 @@
             buildForAnalyzing = "YES">
             <BuildableReference
                BuildableIdentifier = "primary"
-               BlueprintIdentifier = "00E356ED1AD99517003FC87E"
-               BuildableName = "apolloschurchappTests.xctest"
-               BlueprintName = "apolloschurchappTests"
+               BlueprintIdentifier = "2D02E48F1E0B4A5D006451C7"
+               BuildableName = "apolloschurchapp-tvOSTests.xctest"
+               BlueprintName = "apolloschurchapp-tvOSTests"
                ReferencedContainer = "container:apolloschurchapp.xcodeproj">
             </BuildableReference>
          </BuildActionEntry>
@@ -69,9 +60,9 @@
             skipped = "NO">
             <BuildableReference
                BuildableIdentifier = "primary"
-               BlueprintIdentifier = "00E356ED1AD99517003FC87E"
-               BuildableName = "apolloschurchappTests.xctest"
-               BlueprintName = "apolloschurchappTests"
+               BlueprintIdentifier = "2D02E48F1E0B4A5D006451C7"
+               BuildableName = "apolloschurchapp-tvOSTests.xctest"
+               BlueprintName = "apolloschurchapp-tvOSTests"
                ReferencedContainer = "container:apolloschurchapp.xcodeproj">
             </BuildableReference>
          </TestableReference>
@@ -79,9 +70,9 @@
       <MacroExpansion>
          <BuildableReference
             BuildableIdentifier = "primary"
-            BlueprintIdentifier = "13B07F861A680F5B00A75B9A"
-            BuildableName = "apolloschurchapp.app"
-            BlueprintName = "apolloschurchapp"
+            BlueprintIdentifier = "2D02E47A1E0B4A5D006451C7"
+            BuildableName = "apolloschurchapp-tvOS.app"
+            BlueprintName = "apolloschurchapp-tvOS"
             ReferencedContainer = "container:apolloschurchapp.xcodeproj">
          </BuildableReference>
       </MacroExpansion>
@@ -89,7 +80,7 @@
       </AdditionalOptions>
    </TestAction>
    <LaunchAction
-      buildConfiguration = "Release"
+      buildConfiguration = "Debug"
       selectedDebuggerIdentifier = "Xcode.DebuggerFoundation.Debugger.LLDB"
       selectedLauncherIdentifier = "Xcode.DebuggerFoundation.Launcher.LLDB"
       launchStyle = "0"
@@ -102,9 +93,9 @@
          runnableDebuggingMode = "0">
          <BuildableReference
             BuildableIdentifier = "primary"
-            BlueprintIdentifier = "13B07F861A680F5B00A75B9A"
-            BuildableName = "apolloschurchapp.app"
-            BlueprintName = "apolloschurchapp"
+            BlueprintIdentifier = "2D02E47A1E0B4A5D006451C7"
+            BuildableName = "apolloschurchapp-tvOS.app"
+            BlueprintName = "apolloschurchapp-tvOS"
             ReferencedContainer = "container:apolloschurchapp.xcodeproj">
          </BuildableReference>
       </BuildableProductRunnable>
@@ -121,9 +112,9 @@
          runnableDebuggingMode = "0">
          <BuildableReference
             BuildableIdentifier = "primary"
-            BlueprintIdentifier = "13B07F861A680F5B00A75B9A"
-            BuildableName = "apolloschurchapp.app"
-            BlueprintName = "apolloschurchapp"
+            BlueprintIdentifier = "2D02E47A1E0B4A5D006451C7"
+            BuildableName = "apolloschurchapp-tvOS.app"
+            BlueprintName = "apolloschurchapp-tvOS"
             ReferencedContainer = "container:apolloschurchapp.xcodeproj">
          </BuildableReference>
       </BuildableProductRunnable>
diff --git a/apolloschurchapp/ios/apolloschurchapp.xcworkspace/xcshareddata/xcschemes/apolloschurchapp.xcscheme b/apolloschurchapp/ios/apolloschurchapp.xcodeproj/xcshareddata/xcschemes/apolloschurchapp.xcscheme
similarity index 99%
rename from apolloschurchapp/ios/apolloschurchapp.xcworkspace/xcshareddata/xcschemes/apolloschurchapp.xcscheme
rename to apolloschurchapp/ios/apolloschurchapp.xcodeproj/xcshareddata/xcschemes/apolloschurchapp.xcscheme
index 8fd35ce..37bdc76 100644
--- a/apolloschurchapp/ios/apolloschurchapp.xcworkspace/xcshareddata/xcschemes/apolloschurchapp.xcscheme
+++ b/apolloschurchapp/ios/apolloschurchapp.xcodeproj/xcshareddata/xcschemes/apolloschurchapp.xcscheme
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <Scheme
-   LastUpgradeVersion = "0940"
+   LastUpgradeVersion = "0620"
    version = "1.3">
    <BuildAction
       parallelizeBuildables = "NO"
diff --git a/apolloschurchapp/ios/apolloschurchapp.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist b/apolloschurchapp/ios/apolloschurchapp.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist
deleted file mode 100644
index 18d9810..0000000
--- a/apolloschurchapp/ios/apolloschurchapp.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist
+++ /dev/null
@@ -1,8 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
-<plist version="1.0">
-<dict>
-	<key>IDEDidComputeMac32BitWarning</key>
-	<true/>
-</dict>
-</plist>
diff --git a/apolloschurchapp/ios/apolloschurchapp/AppDelegate.h b/apolloschurchapp/ios/apolloschurchapp/AppDelegate.h
index 2726d5e..d4f2580 100644
--- a/apolloschurchapp/ios/apolloschurchapp/AppDelegate.h
+++ b/apolloschurchapp/ios/apolloschurchapp/AppDelegate.h
@@ -1,14 +1,13 @@
 /**
- * Copyright (c) Facebook, Inc. and its affiliates.
+ * Copyright (c) 2015-present, Facebook, Inc.
  *
  * This source code is licensed under the MIT license found in the
  * LICENSE file in the root directory of this source tree.
  */
 
-#import <React/RCTBridgeDelegate.h>
 #import <UIKit/UIKit.h>
 
-@interface AppDelegate : UIResponder <UIApplicationDelegate, RCTBridgeDelegate>
+@interface AppDelegate : UIResponder <UIApplicationDelegate>
 
 @property (nonatomic, strong) UIWindow *window;
 
diff --git a/apolloschurchapp/ios/apolloschurchapp/AppDelegate.m b/apolloschurchapp/ios/apolloschurchapp/AppDelegate.m
index 2bf071d..9df5510 100644
--- a/apolloschurchapp/ios/apolloschurchapp/AppDelegate.m
+++ b/apolloschurchapp/ios/apolloschurchapp/AppDelegate.m
@@ -1,5 +1,5 @@
 /**
- * Copyright (c) Facebook, Inc. and its affiliates.
+ * Copyright (c) 2015-present, Facebook, Inc.
  *
  * This source code is licensed under the MIT license found in the
  * LICENSE file in the root directory of this source tree.
@@ -7,70 +7,32 @@
 
 #import "AppDelegate.h"
 
-
-#import <React/RCTBridge.h>
 #import <React/RCTBundleURLProvider.h>
 #import <React/RCTRootView.h>
-#import <React/RCTLinkingManager.h>
-#import "RNBootSplash.h"
-#import <GoogleCast/GoogleCast.h>
+#import "RNSplashScreen.h"
 
 @implementation AppDelegate
 
-#import <React/RCTLinkingManager.h>
-
-- (BOOL)application:(UIApplication *)application
-   openURL:(NSURL *)url
-   options:(NSDictionary<UIApplicationOpenURLOptionsKey,id> *)options
-{
-  return [RCTLinkingManager application:application openURL:url options:options];
-}
-
-// Only if your app is using [Universal Links](https://developer.apple.com/library/prerelease/ios/documentation/General/Conceptual/AppSearch/UniversalLinks.html).
-- (BOOL)application:(UIApplication *)application continueUserActivity:(nonnull NSUserActivity *)userActivity
- restorationHandler:(nonnull void (^)(NSArray<id<UIUserActivityRestoring>> * _Nullable))restorationHandler
-{
- return [RCTLinkingManager application:application
-                  continueUserActivity:userActivity
-                    restorationHandler:restorationHandler];
-}
-
 - (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions
 {
+  NSURL *jsCodeLocation;
 
-  RCTBridge *bridge = [[RCTBridge alloc] initWithDelegate:self launchOptions:launchOptions];
-  RCTRootView *rootView = [[RCTRootView alloc] initWithBridge:bridge
-                                                   moduleName:@"apolloschurchapp"
-                                            initialProperties:nil];
-
-  // Initialize Google Cast
-  GCKDiscoveryCriteria *criteria = [[GCKDiscoveryCriteria alloc] initWithApplicationID:kGCKDefaultMediaReceiverApplicationID];
-  GCKCastOptions* options = [[GCKCastOptions alloc] initWithDiscoveryCriteria:criteria];
-  options.physicalVolumeButtonsWillControlDeviceVolume = YES;
-  [GCKCastContext setSharedInstanceWithOptions:options];
+  jsCodeLocation = [[RCTBundleURLProvider sharedSettings] jsBundleURLForBundleRoot:@"index" fallbackResource:nil];
 
+  RCTRootView *rootView = [[RCTRootView alloc] initWithBundleURL:jsCodeLocation
+                                                      moduleName:@"apolloschurchapp"
+                                               initialProperties:nil
+                                                   launchOptions:launchOptions];
   rootView.backgroundColor = [[UIColor alloc] initWithRed:1.0f green:1.0f blue:1.0f alpha:1];
 
   self.window = [[UIWindow alloc] initWithFrame:[UIScreen mainScreen].bounds];
   UIViewController *rootViewController = [UIViewController new];
   rootViewController.view = rootView;
-
-  [RNBootSplash initWithStoryboard:@"BootSplash" rootView:rootView];
-
   self.window.rootViewController = rootViewController;
   [self.window makeKeyAndVisible];
 
-  [RNBootSplash initialShow];
+  [RNSplashScreen show];
   return YES;
 }
 
-- (NSURL *)sourceURLForBridge:(RCTBridge *)bridge
-{
-#if DEBUG
-  return [[RCTBundleURLProvider sharedSettings] jsBundleURLForBundleRoot:@"index" fallbackResource:nil];
-#else
-  return [[NSBundle mainBundle] URLForResource:@"main" withExtension:@"jsbundle"];
-#endif
-}
-
 @end
diff --git a/apolloschurchapp/ios/apolloschurchapp/Base.lproj/LaunchScreen.xib b/apolloschurchapp/ios/apolloschurchapp/Base.lproj/LaunchScreen.xib
index 4ca705c..ce50ff1 100644
--- a/apolloschurchapp/ios/apolloschurchapp/Base.lproj/LaunchScreen.xib
+++ b/apolloschurchapp/ios/apolloschurchapp/Base.lproj/LaunchScreen.xib
@@ -1,11 +1,11 @@
 <?xml version="1.0" encoding="UTF-8"?>
-<document type="com.apple.InterfaceBuilder3.CocoaTouch.XIB" version="3.0" toolsVersion="14490.70" targetRuntime="iOS.CocoaTouch" propertyAccessControl="none" useAutolayout="YES" launchScreen="YES" useTraitCollections="YES" colorMatched="YES">
+<document type="com.apple.InterfaceBuilder3.CocoaTouch.XIB" version="3.0" toolsVersion="14113" targetRuntime="iOS.CocoaTouch" propertyAccessControl="none" useAutolayout="YES" launchScreen="YES" useTraitCollections="YES" colorMatched="YES">
     <device id="retina5_5" orientation="portrait">
         <adaptation id="fullscreen"/>
     </device>
     <dependencies>
         <deployment identifier="iOS"/>
-        <plugIn identifier="com.apple.InterfaceBuilder.IBCocoaTouchPlugin" version="14490.49"/>
+        <plugIn identifier="com.apple.InterfaceBuilder.IBCocoaTouchPlugin" version="14088"/>
         <capability name="documents saved in the Xcode 8 format" minToolsVersion="8.0"/>
     </dependencies>
     <objects>
@@ -15,22 +15,18 @@
             <rect key="frame" x="0.0" y="0.0" width="414" height="736"/>
             <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
             <subviews>
-                <imageView clipsSubviews="YES" userInteractionEnabled="NO" contentMode="scaleToFill" horizontalHuggingPriority="251" verticalHuggingPriority="251" fixedFrame="YES" image="splash_bg" translatesAutoresizingMaskIntoConstraints="NO" id="iGM-E3-lqn">
-                    <rect key="frame" x="-12" y="-10" width="437" height="758"/>
-                    <autoresizingMask key="autoresizingMask" flexibleMinX="YES" widthSizable="YES" flexibleMaxX="YES" flexibleMinY="YES" heightSizable="YES" flexibleMaxY="YES"/>
-                </imageView>
                 <imageView userInteractionEnabled="NO" contentMode="scaleAspectFit" horizontalHuggingPriority="251" verticalHuggingPriority="251" fixedFrame="YES" image="splash-icon" translatesAutoresizingMaskIntoConstraints="NO" id="6Je-Yv-1Zj">
                     <rect key="frame" x="157" y="288" width="100" height="100"/>
                     <autoresizingMask key="autoresizingMask" flexibleMinX="YES" widthSizable="YES" flexibleMaxX="YES" flexibleMinY="YES" heightSizable="YES" flexibleMaxY="YES"/>
                 </imageView>
             </subviews>
+            <color key="backgroundColor" red="0.0" green="0.40392156862745099" blue="0.42745098039215684" alpha="1" colorSpace="custom" customColorSpace="sRGB"/>
             <nil key="simulatedStatusBarMetrics"/>
             <modalPageSheetSimulatedSizeMetrics key="simulatedDestinationMetrics"/>
-            <point key="canvasLocation" x="544.92753623188412" y="453.26086956521743"/>
+            <point key="canvasLocation" x="546" y="454"/>
         </view>
     </objects>
     <resources>
         <image name="splash-icon" width="94" height="99"/>
-        <image name="splash_bg" width="721" height="721"/>
     </resources>
 </document>
diff --git a/apolloschurchapp/ios/apolloschurchapp/BootSplash.storyboard b/apolloschurchapp/ios/apolloschurchapp/BootSplash.storyboard
deleted file mode 100644
index 03385b3..0000000
--- a/apolloschurchapp/ios/apolloschurchapp/BootSplash.storyboard
+++ /dev/null
@@ -1,45 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<document type="com.apple.InterfaceBuilder3.CocoaTouch.Storyboard.XIB" version="3.0" toolsVersion="15505" targetRuntime="iOS.CocoaTouch" propertyAccessControl="none" useAutolayout="YES" launchScreen="YES" useTraitCollections="YES" useSafeAreas="YES" colorMatched="YES" initialViewController="Dtp-p8-LvN">
-    <device id="retina6_1" orientation="portrait" appearance="light"/>
-    <dependencies>
-        <deployment identifier="iOS"/>
-        <plugIn identifier="com.apple.InterfaceBuilder.IBCocoaTouchPlugin" version="15509"/>
-        <capability name="Safe area layout guides" minToolsVersion="9.0"/>
-        <capability name="documents saved in the Xcode 8 format" minToolsVersion="8.0"/>
-    </dependencies>
-    <scenes>
-        <!--View Controller-->
-        <scene sceneID="Fnd-62-7zz">
-            <objects>
-                <viewController id="Dtp-p8-LvN" sceneMemberID="viewController">
-                    <view key="view" autoresizesSubviews="NO" userInteractionEnabled="NO" contentMode="scaleToFill" id="guO-oA-Nhw">
-                        <rect key="frame" x="0.0" y="0.0" width="414" height="896"/>
-                        <autoresizingMask key="autoresizingMask"/>
-                        <subviews>
-                            <imageView autoresizesSubviews="NO" clipsSubviews="YES" userInteractionEnabled="NO" contentMode="scaleAspectFit" image="BootSplashLogo" translatesAutoresizingMaskIntoConstraints="NO" id="3lX-Ut-9ad">
-                                <rect key="frame" x="157" y="395" width="100" height="106"/>
-                                <accessibility key="accessibilityConfiguration">
-                                    <accessibilityTraits key="traits" image="YES" notEnabled="YES"/>
-                                </accessibility>
-                            </imageView>
-                        </subviews>
-                        <color key="backgroundColor" red="0.00000000000000" green="0.403921568627451" blue="0.427450980392157" alpha="1" colorSpace="calibratedRGB"/>
-                        <accessibility key="accessibilityConfiguration">
-                            <accessibilityTraits key="traits" notEnabled="YES"/>
-                        </accessibility>
-                        <constraints>
-                            <constraint firstItem="3lX-Ut-9ad" firstAttribute="centerX" secondItem="eg9-kz-Dhh" secondAttribute="centerX" id="Fh9-Fy-1nT"/>
-                            <constraint firstItem="3lX-Ut-9ad" firstAttribute="centerY" secondItem="guO-oA-Nhw" secondAttribute="centerY" id="nvB-Ic-PnI"/>
-                        </constraints>
-                        <viewLayoutGuide key="safeArea" id="eg9-kz-Dhh"/>
-                    </view>
-                </viewController>
-                <placeholder placeholderIdentifier="IBFirstResponder" id="Lvb-Jr-bCV" userLabel="First Responder" customClass="UIResponder" sceneMemberID="firstResponder"/>
-            </objects>
-            <point key="canvasLocation" x="0.0" y="0.0"/>
-        </scene>
-    </scenes>
-    <resources>
-        <image name="BootSplashLogo" width="100" height="106"/>
-    </resources>
-</document>
diff --git a/apolloschurchapp/ios/apolloschurchapp/Images.xcassets/BootSplashLogo.imageset/Contents.json b/apolloschurchapp/ios/apolloschurchapp/Images.xcassets/BootSplashLogo.imageset/Contents.json
deleted file mode 100644
index 570652d..0000000
--- a/apolloschurchapp/ios/apolloschurchapp/Images.xcassets/BootSplashLogo.imageset/Contents.json
+++ /dev/null
@@ -1,23 +0,0 @@
-{
-  "images": [
-    {
-      "idiom": "universal",
-      "filename": "bootsplash_logo.png",
-      "scale": "1x"
-    },
-    {
-      "idiom": "universal",
-      "filename": "bootsplash_logo@2x.png",
-      "scale": "2x"
-    },
-    {
-      "idiom": "universal",
-      "filename": "bootsplash_logo@3x.png",
-      "scale": "3x"
-    }
-  ],
-  "info": {
-    "version": 1,
-    "author": "xcode"
-  }
-}
diff --git a/apolloschurchapp/ios/apolloschurchapp/Images.xcassets/BootSplashLogo.imageset/bootsplash_logo.png b/apolloschurchapp/ios/apolloschurchapp/Images.xcassets/BootSplashLogo.imageset/bootsplash_logo.png
deleted file mode 100644
index 7065a802c74262b1d4290fe4a98c7c025a95d435..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 2202
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
Lj$+){mU#OAxYp}m

diff --git a/apolloschurchapp/ios/apolloschurchapp/Images.xcassets/BootSplashLogo.imageset/bootsplash_logo@2x.png b/apolloschurchapp/ios/apolloschurchapp/Images.xcassets/BootSplashLogo.imageset/bootsplash_logo@2x.png
deleted file mode 100644
index 8abde463f8c0ef768813aaf2923d8bdd3397f1b3..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 5175
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
Ph@c1U4}7qPb@smj4)~Vv

diff --git a/apolloschurchapp/ios/apolloschurchapp/Images.xcassets/BootSplashLogo.imageset/bootsplash_logo@3x.png b/apolloschurchapp/ios/apolloschurchapp/Images.xcassets/BootSplashLogo.imageset/bootsplash_logo@3x.png
deleted file mode 100644
index e15c3c505216e927314b583a1d36afb075fb307a..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 11284
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

diff --git a/apolloschurchapp/ios/apolloschurchapp/Images.xcassets/splash-icon.imageset/Contents.json b/apolloschurchapp/ios/apolloschurchapp/Images.xcassets/splash-icon.imageset/Contents.json
new file mode 100644
index 0000000..1de4619
--- /dev/null
+++ b/apolloschurchapp/ios/apolloschurchapp/Images.xcassets/splash-icon.imageset/Contents.json
@@ -0,0 +1,23 @@
+{
+  "images" : [
+    {
+      "idiom" : "universal",
+      "filename" : "splash-icon.png",
+      "scale" : "1x"
+    },
+    {
+      "idiom" : "universal",
+      "filename" : "splash-icon@2x.png",
+      "scale" : "2x"
+    },
+    {
+      "idiom" : "universal",
+      "filename" : "splash-icon@3x.png",
+      "scale" : "3x"
+    }
+  ],
+  "info" : {
+    "version" : 1,
+    "author" : "xcode"
+  }
+}
\ No newline at end of file
diff --git a/apolloschurchapp/ios/apolloschurchapp/Images.xcassets/splash-icon.imageset/splash-icon.png b/apolloschurchapp/ios/apolloschurchapp/Images.xcassets/splash-icon.imageset/splash-icon.png
new file mode 100644
index 0000000000000000000000000000000000000000..78e8e3296b2d76a3c5ad8e3cf20fb611a442888b
GIT binary patch
literal 460
zcmV;-0W<!IP)<h;3K|Lk000e1NJLTq003S9003hG0{{R3Z&+WB0000CP)t-sM{rE}
z`Stnu_4xPnMjB-$00003bW%=J09vp7OV4=#00C@CL_t(|0j1PIj@2*>#__*{M|#WL
zfVlxjAV*-sj>Ggiu;K{45nUpP2;x!8Q^y@uZ@!iFe#&d?G!^#9SAbt%h<P{urDM@!
zA#Z?UMdhA$2Fn=`!T#fUhOkfrXawOZlmHS}Xarkvn;`br-VDv4J`BpqkroH~8T?K_
zF^~j)*bfo5)%Rym9hhOg!;-*erNeRt4Hy`NcX?Rrm!T)1|6u^gb=Uxhf=`5DTaUn!
z!U{xaci62auw^iqL3jx_hhor^>r6Lza=0Bpd>Cpl9Evw?K)V8#6$h)nV^EL487v%T
zqJCx==mGxZVCfE43<o*DPb>l8cnynvIXj-V1GXP~(z3&+2<*@dY$neyVGYAl5F%&-
zTZF+3I)Nn6BlHLb>IAeIMuaVaHbb3(HNZMUA%Ha@N7xL!@f75n!4p6+fX{>!Ds!Zr
z0Ix#JpgsU9WYI@JQxMAS1b9Evz=s?fA9Gj=dD>sCK)iIgo&2!?0000<MNUMnLSTaD
CX}$#j

literal 0
HcmV?d00001

diff --git a/apolloschurchapp/ios/apolloschurchapp/Images.xcassets/splash-icon.imageset/splash-icon@2x.png b/apolloschurchapp/ios/apolloschurchapp/Images.xcassets/splash-icon.imageset/splash-icon@2x.png
new file mode 100644
index 0000000000000000000000000000000000000000..b1b851625355ccdf330cf3ed364ca0a5e691b213
GIT binary patch
literal 883
zcmeAS@N?(olHy`uVBq!ia0vp^dw}>D2Q!e2*ORgXQak}ZA+GKPK0kka1)?9{zjSR#
z-3=6HE(!7rX1JW1yZiW6AWzuS#WAGf*3(<jd3OQ?m@g(4|F1sB^yz@c(gnK&56wR&
z>MDD>!FK+1qyA5kQ(rDV^Yl|}=steq_V#?Sss7d1eYJONyt2h|%`)3H%jWLRx+N2K
zSuX7IxmeR&zSWuh{P)lGeJa1ZrF{AP|66MKR)1VR|Mb&fq1dx`UoO{}cy+^ztQzws
zsoTC@i&yP@oz^8B$lGsWbH3u~`&}=!FShM}t@bw7{O#SB&x?M3S=*6SaV+@o<ilA~
zfxPD{vMQ8TJ&atL)*u~wR{cQl8nyfPQd%GGzrb+k#Z&WLKX(ZhJm%kj!B<X%DKEv8
z|IQgJ(*wQh*>+sK%3!`tD&SuD=MTSkd-Kk?7xsBajo7N6HM@?TwV5HfW8-Q4lFtc8
zOY@%PSF!9Uya&?Nw&UZ~A9?$7K7Rhpo>v1DS;qzxNig3x>v>*Uqtt_AVa)G#OJ6B4
z-zW9%Soq`Jl3VWX$ZPWz{~F4#$9D(h#f67M3z)Akn9q`W;}&xGZbjCQzt@3uN7fE$
z-`)q$LQU`Vu4vmWc(uTM@v4t^_xv|ke%Krh(lANto!T;pshm6H3Kp+?_%wUf!#o#=
zhL2Z1=vu9ly6?O8lPOT|EU7xBa^nQGH)$-UP0~Lecd7i-18N4@2(rnu_r01AZ#giG
z%aaji2wwS-cj)@Vr^+h??*y3clU{eM+}L~B%Z;D@)NJT^m$s)|a=zVzjJs#&-M_zf
zfm_k%n6vv!K}IYF8c_pu#`?D1AAxqq^uBLf{qb%A(1d~|57_>k_AXFf(fHIo{P5i$
zSwFti^m06v1*%@&HvK)=*Sz~<KpwF%z2p0@QR+T#z~kKyfdR!F_TkQlPy3`lu-KZ{
zRNVJ<sJwf&IXKQIuFyDE{==U?JOPW<9nRi+S-i8xpJl~Ot6IJ3?<X>t*0HU)C~UAt
zKA>*#?0cREKK#D3Wbf-`(}fls;}6(;);C|(p?ALc)g5_Nx{O(7zVi=1UCv&->korz
x6;s>y=F`9Ps*D>C|ISm}?-O40SM&2v#$_E>r|&3JE(Ycn22WQ%mvv4FO#oE~!(ada

literal 0
HcmV?d00001

diff --git a/apolloschurchapp/ios/apolloschurchapp/Images.xcassets/splash-icon.imageset/splash-icon@3x.png b/apolloschurchapp/ios/apolloschurchapp/Images.xcassets/splash-icon.imageset/splash-icon@3x.png
new file mode 100644
index 0000000000000000000000000000000000000000..74c040f7252c2d5230174c667841fd7e572a7f9f
GIT binary patch
literal 1281
zcmeAS@N?(olHy`uVBq!ia0y~yV3Y!4O%7(DNOiMpH<029@Ck8sFYx*K<0}yT`2MA9
zL+WmzICDvmUogYT)VtGc`4|{j7J9lkhE&{obK5Y_*^q}NaPqGIbD5XiKO}KDUha)T
z?H5fuMc=r$P2c7i|9GDIre?`hy|WL`p1wZke2D+Xwac$u3C?+~x%I2a>g6}C1!uj|
z4D;Xk_R^ANi#xvx_T^4jGp%h&{wi|2%FEaG=qt@_U#HBf>dLiUx@}$(STq+b8awMs
ziOEL0Ltvf#1#9LdMf<N@xje%5=(c%5!TuY;T9(aAy1n#e#=Z6Z1v$G-R=&&tnV{#J
z^~>ECr-s;BH_BiJZ-W^;u{vtE#)rzsVp|!G?sDbbS+QN?Q(<19w}(PtntzUo`&-T~
zqw1n=r|Ij&w*ENW7kVX$kJ+WtHZd^!>lf=qMLQKGcC2{(^@wYvZDHVIAYBQhqx@s0
zToV?53gl)2xpw|pf!!hzu7&=2fiJSREZU*Ibp_-1IquA57oK-^U#fbvIC8bR-m41R
zzvT|vpO%Q3K5+&qTC4Hy<>N(euRFUxRXtj?W!?^rPW8<zT(7SdJ!*SbpX*58b)Bq>
z;u)?V-6OQSsyB5#nkOfq`hf*(rS^v<vS&ZcJ%5%l)Ar-VH9*ItewbpdvR+;9)T_?!
zS=H0p<YQE_ZtjW(Iw~sg&g3wW?<r!YFPyeQ>^-T~RecF)Ajlc3HQssZzKUkQ=Nz?G
zUC--*=Jxxw9fhZDJb_wM9N*V>@V}_tt<tF8z2fJqNd8QaJAu}C0i6x>*`hr_E=U`~
z7c1s}RuMjGJJa>7a=Oim-_xH>;8uLAUt!c;^`fPE|BBSbhTT%nUas6K3DkB9sBIH4
zd_ZiV&E)~BfkDb?QyV_zps;x9X7$Y)6-K~d^3>tFH#1Bme%5i<wPhwTQw{{@ysPOD
zw-WE3CCyhF0E?C|{~8kz`|e9mp#MMt1`Xzu+FANhj}8k}be)Y|^dfN$(AOJRG+ti<
z4Cq+ZR~f)41lbFUN;m&M>;6RpV=D{OpDVO&DqY|90zKTg{7Rfc*SodAP<<k5`r$jb
zi|qr>vIyl5Q)V5$^}MeBgNi_D_wqZ9nl?{+-|e^lw>6)Axgc|(fXnyte~#7+!9Ok-
zbkAPJ!m_xoS+7bV>twKg)*<2iTk@YCo-Mt*W_jEdaoe|DtL9s4YrTz1cl|mq4T!^l
zxXd;7w;hP%2E=i)zBj{d&UU@BT?@p2#RDZju-Mwnx<2pM>18<wE;9#4&#Maj{>y)B
zXyD%Ev4LM*AST8BUJ(ft0AY{>jBOhDXTjf~GoK6B?>=<7s_M`pbsztTFD^$fCdl!M
z=_kID;eDps<LZCqCFf;fG26i95b3$|3~UoG3YS(LdX%xkLh8)ogNxKbO5J&}srk}!
z^kTsCiwSXuBA~{Fd}(>f**$N?W#MJZ?Oo>n)ti5w-(lDNH(C?cZUvTI44$rjF6*2U
FngCdzb!Pwo

literal 0
HcmV?d00001

diff --git a/apolloschurchapp/ios/apolloschurchapp/Info.plist b/apolloschurchapp/ios/apolloschurchapp/Info.plist
index 4eea809..6d5e74e 100644
--- a/apolloschurchapp/ios/apolloschurchapp/Info.plist
+++ b/apolloschurchapp/ios/apolloschurchapp/Info.plist
@@ -9,7 +9,7 @@
 	<key>CFBundleExecutable</key>
 	<string>$(EXECUTABLE_NAME)</string>
 	<key>CFBundleIdentifier</key>
-	<string>$(PRODUCT_BUNDLE_IDENTIFIER)</string>
+	<string>org.reactjs.native.$(PRODUCT_NAME:rfc1034identifier)</string>
 	<key>CFBundleInfoDictionaryVersion</key>
 	<string>6.0</string>
 	<key>CFBundleName</key>
@@ -17,28 +17,17 @@
 	<key>CFBundlePackageType</key>
 	<string>APPL</string>
 	<key>CFBundleShortVersionString</key>
-	<string>1.0.0</string>
+	<string>0.4.0</string>
 	<key>CFBundleSignature</key>
 	<string>????</string>
-	<key>CFBundleURLTypes</key>
-	<array>
-		<dict>
-			<key>CFBundleURLSchemes</key>
-			<array>
-				<string>apolloschurchapp</string>
-			</array>
-		</dict>
-	</array>
 	<key>CFBundleVersion</key>
-	<string>274</string>
+	<string>1</string>
 	<key>ITSAppUsesNonExemptEncryption</key>
 	<false/>
 	<key>LSRequiresIPhoneOS</key>
 	<true/>
 	<key>NSAppTransportSecurity</key>
 	<dict>
-		<key>NSAllowsArbitraryLoads</key>
-		<true/>
 		<key>NSExceptionDomains</key>
 		<dict>
 			<key>embed.wistia.com</key>
@@ -53,20 +42,8 @@
 			</dict>
 		</dict>
 	</dict>
-	<key>NSBluetoothAlwaysUsageDescription</key>
-	<string>$(PRODUCT_NAME) would like access to bluetooth (for playing audio)</string>
-	<key>NSCameraUsageDescription</key>
-	<string>$(PRODUCT_NAME) would like to use your camera (for uploading profile pictures)</string>
-	<key>NSLocationAlwaysUsageDescription</key>
-	<string>$(PRODUCT_NAME) would like to use your location for determining your closest campus</string>
 	<key>NSLocationWhenInUseUsageDescription</key>
-	<string>$(PRODUCT_NAME) would like to use your location for determining your closest campus</string>
-	<key>NSMicrophoneUsageDescription</key>
-	<string>$(PRODUCT_NAME) would like to your microphone (for videos)</string>
-	<key>NSPhotoLibraryAddUsageDescription</key>
-	<string>$(PRODUCT_NAME) would like to save photos to your photo gallery (for uploading profile pictures)</string>
-	<key>NSPhotoLibraryUsageDescription</key>
-	<string>$(PRODUCT_NAME) would like access to your photo gallery (for uploading profile pictures)</string>
+	<string/>
 	<key>UIAppFonts</key>
 	<array>
 		<string>DroidSerif-Bold.ttf</string>
@@ -82,8 +59,12 @@
 		<string>Inter-UI-MediumItalic.otf</string>
 		<string>Inter-UI-Regular.otf</string>
 	</array>
+	<key>UIBackgroundModes</key>
+	<array>
+		<string>audio</string>
+	</array>
 	<key>UILaunchStoryboardName</key>
-	<string>BootSplash</string>
+	<string>LaunchScreen</string>
 	<key>UIRequiredDeviceCapabilities</key>
 	<array>
 		<string>armv7</string>
@@ -98,5 +79,13 @@
 	</array>
 	<key>UIViewControllerBasedStatusBarAppearance</key>
 	<false/>
+  <key>NSPhotoLibraryUsageDescription</key>
+  <string>$(PRODUCT_NAME) would like access to your photo gallery (for uploading profile pictures)</string>
+  <key>NSCameraUsageDescription</key>
+  <string>$(PRODUCT_NAME) would like to use your camera (for uploading profile pictures)</string>
+  <key>NSPhotoLibraryAddUsageDescription</key>
+  <string>$(PRODUCT_NAME) would like to save photos to your photo gallery (for uploading profile pictures)</string>
+  <key>NSMicrophoneUsageDescription</key>
+  <string>$(PRODUCT_NAME) would like to your microphone (for videos)</string>
 </dict>
 </plist>
diff --git a/apolloschurchapp/ios/apolloschurchapp/apolloschurchapp.entitlements b/apolloschurchapp/ios/apolloschurchapp/apolloschurchapp.entitlements
deleted file mode 100644
index 984fdb2..0000000
--- a/apolloschurchapp/ios/apolloschurchapp/apolloschurchapp.entitlements
+++ /dev/null
@@ -1,14 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
-<plist version="1.0">
-<dict>
-	<key>aps-environment</key>
-	<string>development</string>
-	<key>com.apple.developer.networking.wifi-info</key>
-	<true/>
-	<key>com.apple.developer.associated-domains</key>
-	<array>
-		<string>applink:apollos-church-api.herokuapp.com</string>
-	</array>
-</dict>
-</plist>
diff --git a/apolloschurchapp/ios/apolloschurchapp/main.m b/apolloschurchapp/ios/apolloschurchapp/main.m
index d9c4112..c73e006 100644
--- a/apolloschurchapp/ios/apolloschurchapp/main.m
+++ b/apolloschurchapp/ios/apolloschurchapp/main.m
@@ -1,5 +1,5 @@
 /**
- * Copyright (c) Facebook, Inc. and its affiliates.
+ * Copyright (c) 2015-present, Facebook, Inc.
  *
  * This source code is licensed under the MIT license found in the
  * LICENSE file in the root directory of this source tree.
@@ -14,4 +14,3 @@ int main(int argc, char * argv[]) {
     return UIApplicationMain(argc, argv, nil, NSStringFromClass([AppDelegate class]));
   }
 }
-          
diff --git a/apolloschurchapp/ios/apolloschurchappTests/Info.plist b/apolloschurchapp/ios/apolloschurchappTests/Info.plist
index bb87423..3bbe4e6 100644
--- a/apolloschurchapp/ios/apolloschurchappTests/Info.plist
+++ b/apolloschurchapp/ios/apolloschurchappTests/Info.plist
@@ -7,7 +7,7 @@
 	<key>CFBundleExecutable</key>
 	<string>$(EXECUTABLE_NAME)</string>
 	<key>CFBundleIdentifier</key>
-	<string>$(PRODUCT_BUNDLE_IDENTIFIER)</string>
+	<string>org.reactjs.native.example.$(PRODUCT_NAME:rfc1034identifier)</string>
 	<key>CFBundleInfoDictionaryVersion</key>
 	<string>6.0</string>
 	<key>CFBundleName</key>
@@ -15,10 +15,10 @@
 	<key>CFBundlePackageType</key>
 	<string>BNDL</string>
 	<key>CFBundleShortVersionString</key>
-	<string>1.3.1</string>
+	<string>0.4.0</string>
 	<key>CFBundleSignature</key>
 	<string>????</string>
 	<key>CFBundleVersion</key>
-	<string>274</string>
+	<string>1</string>
 </dict>
 </plist>
diff --git a/apolloschurchapp/ios/apolloschurchappTests/apolloschurchappTests.m b/apolloschurchapp/ios/apolloschurchappTests/apolloschurchappTests.m
index 8b9d30b..5b96cea 100644
--- a/apolloschurchapp/ios/apolloschurchappTests/apolloschurchappTests.m
+++ b/apolloschurchapp/ios/apolloschurchappTests/apolloschurchappTests.m
@@ -1,5 +1,5 @@
 /**
- * Copyright (c) Facebook, Inc. and its affiliates.
+ * Copyright (c) 2015-present, Facebook, Inc.
  *
  * This source code is licensed under the MIT license found in the
  * LICENSE file in the root directory of this source tree.
diff --git a/apolloschurchapp/jest.setup.js b/apolloschurchapp/jest.setup.js
index 2472b29..71e1e93 100644
--- a/apolloschurchapp/jest.setup.js
+++ b/apolloschurchapp/jest.setup.js
@@ -1,132 +1,28 @@
-import React from 'react';
-import { NativeModules } from 'react-native';
-import ApollosConfig from '@apollosproject/config';
-import FRAGMENTS from '@apollosproject/ui-fragments';
-
-ApollosConfig.loadJs({ FRAGMENTS });
-
-// We ran into an issue where SafeAreaView would break jest tests.
-jest.mock('react-native-safe-area-context', () => ({
-  SafeAreaConsumer: ({ children }) =>
-    children({ top: 0, bottom: 0, left: 0, right: 0 }),
-  SafeAreaProvider: ({ children }) => children,
+jest.mock('./src/client/index');
+jest.mock('react-native-custom-tabs', () => ({
+  CustomTabs: {
+    openURL: jest.fn(),
+  },
 }));
 
-jest.mock('@react-native-community/datetimepicker', () => 'DateTimePicker');
-
-jest.mock('react-navigation', () => {
-  const ActualNavigation = require.requireActual('react-navigation');
-  return {
-    ...ActualNavigation,
-    SafeAreaView: require.requireActual('SafeAreaView'),
-  };
-});
-
-jest.mock('@react-navigation/native', () => {
-  const ActualNavigation = require.requireActual('@react-navigation/native');
-  return {
-    ...ActualNavigation,
-    SafeAreaView: require.requireActual('SafeAreaView'),
-  };
-});
+jest.mock('react-native-safari-view', () => ({
+  isAvailable: jest.fn().mockImplementation(() => Promise.resolve(true)),
+  show: jest.fn(),
+}));
 
 jest.mock('react-native-music-control', () => ({
   enableBackgroundMode: jest.fn(),
   enableControl: jest.fn(),
   on: jest.fn(),
   setNowPlaying: jest.fn(),
-  STATE_PLAYING: false,
-  STATE_PAUSED: true,
-}));
-
-ApollosConfig.loadJs({
-  ONE_SIGNAL_KEY: 'doesntmatter',
-});
-
-jest.mock('Animated', () => {
-  const ActualAnimated = require.requireActual('Animated');
-  return {
-    ...ActualAnimated,
-    timing: (value, config) => ({
-      start: (callback) => {
-        value.setValue(config.toValue);
-        callback && callback();
-      },
-      stop: () => ({}),
-    }),
-    spring: (value, config) => ({
-      start: (callback) => {
-        value.setValue(config.toValue);
-        callback && callback();
-      },
-      stop: () => ({}),
-    }),
-  };
-});
-
-jest.mock('NativeAnimatedHelper');
-
-jest.mock('react-native-safari-view', () => ({
-  isAvailable: jest.fn().mockImplementation(() => Promise.resolve(true)),
-  show: jest.fn(),
 }));
 
 jest.mock('react-native-device-info', () => ({
-  getUniqueId: () => 'id-123',
+  getUniqueID: () => 'id-123',
   getSystemVersion: () => 'sys-version-123',
   getModel: () => 'ios',
   getVersion: () => 'version-123',
   getBuildNumber: () => 0,
 }));
 
-jest.mock('rn-fetch-blob', () => 'Fetch');
-
-jest.mock('@apollosproject/ui-analytics', () => ({
-  track: () => '',
-  AnalyticsConsumer: ({ children }) => children({ test: jest.fn() }),
-  AnalyticsProvider: ({ children }) => children,
-  CoreNavigationAnalytics: ({ children }) =>
-    children({ onNavigationStateChange: jest.fn() }),
-  TrackEventWhenLoaded: () => null,
-  withTrackOnPress: (Component) => (props) => <Component {...props} />,
-}));
-
-jest.mock('@apollosproject/ui-kit', () => ({
-  ...require.requireActual('@apollosproject/ui-kit'),
-  NavigationService: {
-    navigate: jest.fn(),
-    setTopLevelNavigator: jest.fn(),
-  },
-}));
-
-jest.mock('@apollosproject/ui-notifications', () => ({
-  NotificationsProvider: ({ children }) => children,
-}));
-
-jest.mock('@apollosproject/ui-mapview', () => ({
-  MapViewConnected: 'MapViewConnected',
-}));
-
-jest.mock('@apollosproject/ui-media-player', () => ({
-  MediaPlayerSpacer: ({ children }) => children,
-  MediaPlayer: () => 'MediaPlayer',
-  MediaPlayerProvider: ({ children }) => children,
-  playVideoMutation: 'mutation { playVideo }',
-  withTabBarMediaSpacer: () => ({ children }) => children,
-}));
-
 jest.mock('react-native-video', () => 'Video');
-
-jest.mock('NativeEventEmitter');
-
-jest.mock('DatePickerIOS', () => 'DatePicker');
-jest.mock('./src/client/index');
-
-NativeModules.RNGestureHandlerModule = {
-  attachGestureHandler: jest.fn(),
-  createGestureHandler: jest.fn(),
-  dropGestureHandler: jest.fn(),
-  updateGestureHandler: jest.fn(),
-  State: {},
-  Directions: {},
-};
diff --git a/apolloschurchapp/loadConfig.js b/apolloschurchapp/loadConfig.js
deleted file mode 100644
index 922e5d0..0000000
--- a/apolloschurchapp/loadConfig.js
+++ /dev/null
@@ -1,4 +0,0 @@
-import ApollosConfig from '@apollosproject/config';
-import FRAGMENTS from '@apollosproject/ui-fragments';
-
-ApollosConfig.loadJs({ FRAGMENTS });
diff --git a/apolloschurchapp/package.json b/apolloschurchapp/package.json
index 32aadae..8805fc0 100644
--- a/apolloschurchapp/package.json
+++ b/apolloschurchapp/package.json
@@ -1,7 +1,32 @@
 {
   "name": "apolloschurchapp",
-  "version": "1.0.0",
+  "version": "0.5.0",
   "private": true,
+  "workspaces": {
+    "nohoist": [
+      "*"
+    ]
+  },
+  "devDependencies": {
+    "@storybook/addon-actions": "4.0.0-alpha.2",
+    "@storybook/addon-links": "4.0.0-alpha.2",
+    "@storybook/addons": "4.0.0-alpha.2",
+    "@storybook/react-native": "4.0.0-alpha.2",
+    "apollos-church-api": "link:../apollos-church-api",
+    "babel-preset-apollos": "link:../babel-preset-apollos",
+    "babel-preset-react-native": "5",
+    "codecov": "3.0.2",
+    "get-yarn-workspaces": "1.0.2",
+    "jest-react-native": "18.0.0",
+    "nodemon": "1.17.5",
+    "prop-types": "15.6.1",
+    "react-dom": "16.3.1",
+    "react-native-dotenv": "0.2.0",
+    "react-native-storybook-loader": "1.8.0",
+    "react-native-version": "2.6.2",
+    "react-test-renderer": "16.4.1",
+    "waait": "1.0.2"
+  },
   "engines": {
     "node": ">=8.11.x"
   },
@@ -9,31 +34,23 @@
     "src"
   ],
   "scripts": {
-    "setup": "./scripts/init.sh",
-    "android": "SIM=\"$($HOME/Library/Android/sdk/emulator/emulator -list-avds | sed -n 1p)\" && $HOME/Library/Android/sdk/emulator/emulator -avd \"${SIM}\" & react-native run-android --appId com.differential.apollos",
+    "android": "react-native run-android",
     "codecov": "cat ./coverage/lcov.info | codecov",
-    "ios": "react-native run-ios --simulator=\"iPhone 11\"",
-    "link-packages": "yarn --check-files --ignore-scripts && node ./scripts/link-packages",
-    "unlink-packages": "rm -rf ./node_modules/@apollosproject/* && ../node_modules/.bin/wml rm all",
-    "generate-stories": "rnstl --searchDir ./src --pattern **/*.stories.js",
+    "fixlint": "eslint ./src --fix",
+    "ios": "react-native run-ios --simulator=\"iPhone X\"",
     "lint": "eslint ./src --ext .js",
-    "get-schema": "eval $(grep ^APP_DATA_URL .env) && sleep 5 && get-graphql-schema $APP_DATA_URL > schema.graphql",
-    "prestart": "yarn generate-stories & yarn get-schema && node ./scripts/get-introspection-data.js",
-    "postinstall": "jetify && yarn pods",
-    "pods": "(bundle install && cd ios && bundle exec pod install --repo-update)",
-    "start": "yarn start:dev",
-    "start:dev": "react-native start",
-    "test": "TZ=UTC jest",
-    "upgrade": "npx @apollosproject/upgrade-tools upgrade",
-    "latest": "./scripts/add-packages.sh latest",
-    "beta": "./scripts/add-packages.sh beta",
-    "canary": "./scripts/add-packages.sh canary"
+    "postversion": "react-native-version --never-amend --android android/app/build.gradle --ios ios/",
+    "prestart": "node ./scripts/get-introspection-data.js",
+    "start": "react-native start",
+    "storybook": "rnstl --searchDir ./storybook ./src --pattern \"**/*.stories.js\" && storybook start -p 7007 --root ../../",
+    "test": "jest",
+    "release": "standard-version --release-as minor"
   },
   "jest": {
     "preset": "react-native",
     "collectCoverage": true,
     "transformIgnorePatterns": [
-      "node_modules/(?!((jest-)?react-native|rn-*|react-clone-referenced-element|react-navigation|@react-navigation|@apollosproject))"
+      "node_modules/(?!((jest-)?react-native|rn-*|react-clone-referenced-element|react-navigation))"
     ],
     "testMatch": [
       "<rootDir>/src/**/?(*.)(test|tests).{js,jsx,mjs}"
@@ -41,119 +58,57 @@
     "modulePaths": [
       "<rootDir>/src/"
     ],
-    "modulePathIgnorePatterns": [
-      "node_modules/.*/node_modules/react-native"
-    ],
     "setupFiles": [
       "./jest.setup.js"
-    ]
+    ],
+    "transform": {
+      ".+\\.js$": "<rootDir>/node_modules/react-native/jest/preprocessor.js"
+    }
   },
   "dependencies": {
-    "@apollo/react-hooks": "^3.1.3",
-    "@apollosproject/config": "^1.7.0",
-    "@apollosproject/react-native-airplay-btn": "^0.2.0",
-    "@apollosproject/ui-analytics": "^1.7.0",
-    "@apollosproject/ui-auth": "^1.7.0",
-    "@apollosproject/ui-connected": "^1.7.0",
-    "@apollosproject/ui-fragments": "^1.7.0",
-    "@apollosproject/ui-htmlview": "^1.7.0",
-    "@apollosproject/ui-kit": "^1.7.0",
-    "@apollosproject/ui-mapview": "^1.7.0",
-    "@apollosproject/ui-media-player": "^1.7.0",
-    "@apollosproject/ui-notifications": "^1.7.0",
-    "@apollosproject/ui-onboarding": "^1.7.0",
-    "@apollosproject/ui-passes": "^1.7.0",
-    "@apollosproject/ui-prayer": "^1.7.0",
-    "@apollosproject/ui-scripture": "^1.7.0",
-    "@apollosproject/ui-storybook": "^1.7.0",
-    "@metarouter/analytics-react-native": "^1.1.5",
-    "@react-native-community/async-storage": "^1.5.1",
-    "@react-native-community/datetimepicker": "^3.0.0",
-    "@react-native-community/geolocation": "^2.0.2",
-    "apollo-cache-inmemory": "1.5.1",
+    "apollo-cache-inmemory": "1.2.2",
     "apollo-cache-persist": "0.1.1",
-    "apollo-client": "2.6.8",
-    "apollo-link": "1.2.8",
-    "apollo-link-http": "1.5.11",
-    "apollo-link-schema": "1.1.6",
-    "apollo-storybook-react-native": "0.2.12",
-    "apollo-upload-client": "9.0.0",
-    "buffer": "^5.4.3",
+    "apollo-client": "2.3.2",
+    "apollo-link": "1.2.2",
+    "apollo-link-context": "1.0.8",
+    "apollo-link-http": "1.5.4",
+    "apollo-link-schema": "1.1.0",
+    "apollo-link-state": "0.4.1",
+    "apollo-upload-client": "^8.1.0",
     "color": "3.0.0",
-    "dotenv": "^6.2.0",
-    "events": "^3.0.0",
-    "formik": "^1.5.2",
-    "graphql": "14.7.0",
+    "entities": "1.1.1",
+    "formik": "0.11.11",
+    "graphql": "0.13.2",
     "graphql-tag": "2.9.2",
     "graphql-tools": "3.1.1",
-    "lodash": "^4.17.11",
-    "memoize-one": "4.0.0",
+    "htmlparser2": "3.9.2",
+    "lodash": "4.17.10",
+    "memoize-one": "^4.0.0",
     "moment": "2.22.2",
-    "node-fetch": "2.6.1",
-    "react": "16.8.6",
-    "react-apollo": "2.5.5",
-    "react-native": "0.60.5",
-    "react-native-bootsplash": "^2.0.5",
-    "react-native-config": "^0.11.7",
-    "react-native-device-info": "^4.0.1",
-    "react-native-geolocation-service": "^3.0.0",
-    "react-native-gesture-handler": "^1.3.1",
-    "react-native-google-cast": "^3.3.0",
-    "react-native-image-picker": "0.28.0",
-    "react-native-inappbrowser-reborn": "^3.0.0",
-    "react-native-linear-gradient": "^2.5.4",
-    "react-native-maps": "0.26.1",
-    "react-native-modal-datetime-picker": "9.0.0",
-    "react-native-music-control": "0.10.8",
-    "react-native-onesignal": "3.9.1",
-    "react-native-passkit-wallet": "^0.1.4",
-    "react-native-permissions": "^2.0.5",
+    "node-fetch": "^2.2.0",
+    "prettier": "^1.14.2",
+    "react": "16.4.1",
+    "react-apollo": "2.1.11",
+    "react-native": "0.56.0",
+    "react-native-custom-tabs": "0.1.7",
+    "react-native-device-info": "0.22.5",
+    "react-native-image-picker": "^0.26.10",
+    "react-native-keyboard-aware-scroll-view": "0.7.0",
+    "react-native-linear-gradient": "2.4.0",
+    "react-native-modal-datetime-picker": "6.0.0",
+    "react-native-music-control": "^0.7.3",
     "react-native-safari-view": "2.1.0",
-    "react-native-safe-area-context": "^0.3.6",
-    "react-native-safe-area-view": "0.13.1",
-    "react-native-screens": "^1.0.0-alpha.23",
-    "react-native-svg": "^9.4.0",
-    "react-native-video": "^5.0.0",
+    "react-native-safe-area-view": "^0.9.0",
+    "react-native-splash-screen": "3.1.1",
+    "react-native-svg": "6.5.2",
+    "react-native-tab-view": "1.0.2",
+    "react-native-video": "3.2.0",
     "react-native-video-controls": "2.2.3",
-    "react-native-webview": "^7.0.0",
-    "react-navigation": "^3.11.0",
-    "recompose": "^0.30.0",
-    "rn-fetch-blob": "^0.10.16",
-    "stream": "^0.0.2",
-    "wml": "^0.0.83",
-    "yup": "0.26.6"
-  },
-  "devDependencies": {
-    "@apollosproject/eslint-config": "^1.7.0",
-    "babel-eslint": "10.0.1",
-    "babel-plugin-module-resolver": "^4.0.0",
-    "codecov": "3.7.2",
-    "eslint": "^4.19.1",
-    "eslint-config-airbnb": "^17.0.0",
-    "eslint-config-prettier": "^2.9.0",
-    "eslint-import-resolver-babel-module": "^5.0.0-beta.0",
-    "eslint-plugin-babel": "^5.1.0",
-    "eslint-plugin-import": "^2.12.0",
-    "eslint-plugin-jest": "^21.15.2",
-    "eslint-plugin-jsx-a11y": "^6.0.3",
-    "eslint-plugin-prettier": "^2.6.0",
-    "eslint-plugin-react": "^7.10.0",
-    "eslint-plugin-react-hooks": "^4.0.2",
-    "eslint-plugin-react-native": "^3.2.1",
-    "get-dev-paths": "^0.1.0",
-    "get-graphql-schema": "^2.1.2",
-    "graphql-import": "^0.7.1",
-    "jest": "^25.1.0",
-    "jetifier": "^1.6.4",
-    "metro-react-native-babel-preset": "^0.56.0",
-    "nodemon": "1.18.7",
-    "prettier": "1.14.2",
-    "prop-types": "15.6.1",
-    "react-dom": "16.6.3",
-    "react-native-storybook-loader": "1.8.0",
-    "react-native-version": "2.6.2",
-    "react-test-renderer": "16.8.6",
-    "waait": "1.0.2"
+    "react-navigation": "2.11.2",
+    "recompose": "0.27.1",
+    "rn-placeholder": "1.2.0",
+    "stream": "0.0.2",
+    "yup": "0.26.2"
   },
   "rnpm": {
     "assets": [
diff --git a/apolloschurchapp/rn-cli.config.js b/apolloschurchapp/rn-cli.config.js
new file mode 100644
index 0000000..40501d8
--- /dev/null
+++ b/apolloschurchapp/rn-cli.config.js
@@ -0,0 +1,77 @@
+/**
+ * This file is mainly copy-pasta scattered throughout the interwebs.
+ * I'll try and leave comments to make it easier to understand what's going on,
+ * but essentially this file is currently required to get react-native to play nice
+ * with yarn workspaces.
+ */
+const path = require('path');
+const fs = require('fs');
+const blacklist = require('metro/src/blacklist');
+const getWorkspaces = require('get-yarn-workspaces');
+
+/**
+ * used to resolve node_modules that might be symlinked by yarn
+ */
+function getNodeModulesForDirectory(rootPath) {
+  const nodeModulePath = path.join(rootPath, 'node_modules');
+  const folders = fs.readdirSync(nodeModulePath);
+  return folders.reduce((modules, folderName) => {
+    const folderPath = path.join(nodeModulePath, folderName);
+    if (folderName.startsWith('@')) {
+      const scopedModuleFolders = fs.readdirSync(folderPath);
+      const scopedModules = scopedModuleFolders.reduce(
+        (scopedModules, scopedFolderName) => {
+          scopedModules[
+            `${folderName}/${scopedFolderName}`
+          ] = maybeResolveSymlink(path.join(folderPath, scopedFolderName));
+          return scopedModules;
+        },
+        {}
+      );
+      return Object.assign({}, modules, scopedModules);
+    }
+    modules[folderName] = maybeResolveSymlink(folderPath);
+    return modules;
+  }, {});
+}
+
+function maybeResolveSymlink(maybeSymlinkPath) {
+  if (fs.lstatSync(maybeSymlinkPath).isSymbolicLink()) {
+    const resolved = path.resolve(
+      path.dirname(maybeSymlinkPath),
+      fs.readlinkSync(maybeSymlinkPath)
+    );
+    return resolved;
+  }
+  return maybeSymlinkPath;
+}
+
+const workspaces = getWorkspaces(path.resolve('.'));
+
+/**
+ * Options used by Metro builder
+ */
+module.exports = {
+  extraNodeModules: getNodeModulesForDirectory(path.resolve('.')),
+  getBlacklistRE() {
+    return blacklist(
+      workspaces.map(
+        (workspacePath) =>
+          `/${workspacePath.replace(
+            /\//g,
+            '[/\\\\]'
+          )}[/\\\\]node_modules[/\\\\]react-native[/\\\\].*/`
+      )
+    );
+  },
+  // I think this is the most important bit here - without this, a lot of modules aren't resolving
+  getProjectRoots() {
+    return [
+      // Keep your project directory.
+      path.resolve(path.resolve('.')),
+
+      // Include your forked package as a new root.
+      path.resolve('..', '..', 'node_modules'),
+    ].concat(workspaces);
+  },
+};
diff --git a/apolloschurchapp/schema.graphql b/apolloschurchapp/schema.graphql
deleted file mode 100644
index ff6a9f6..0000000
--- a/apolloschurchapp/schema.graphql
+++ /dev/null
@@ -1,742 +0,0 @@
-directive @cacheControl(maxAge: Int, scope: CacheControlScope) on FIELD_DEFINITION | OBJECT | INTERFACE
-
-enum ACTION_FEATURE_ACTION {
-  READ_CONTENT
-  READ_EVENT
-  OPEN_URL
-  OPEN_NODE
-  OPEN_CHANNEL
-}
-
-type ActionBarAction {
-  id: ID!
-  icon: String
-  title: String
-  action: ACTION_FEATURE_ACTION
-  relatedNode: Node
-}
-
-type ActionBarFeature implements Feature & Node {
-  id: ID!
-  order: Int
-  title: String
-  actions: [ActionBarAction]
-}
-
-type ActionListAction {
-  id: ID!
-  title: String
-  subtitle: String
-  image: ImageMedia
-  relatedNode: Node
-  action: ACTION_FEATURE_ACTION
-}
-
-type ActionListFeature implements Feature & Node {
-  id: ID!
-  order: Int
-  title: String
-  subtitle: String
-  actions: [ActionListAction]
-  primaryAction: FeatureAction
-}
-
-input AnalyticsDeviceInfo {
-  platform: AnalyticsPlatform
-  deviceId: String
-  deviceModel: String
-  osVersion: String
-  appVersion: String
-}
-
-input AnalyticsIdentifyInput {
-  traits: [AnalyticsMetaField]
-  anonymousId: String!
-  deviceInfo: AnalyticsDeviceInfo
-}
-
-input AnalyticsMetaField {
-  field: String!
-  value: AnalyticsValue
-}
-
-enum AnalyticsPlatform {
-  iOS
-  Android
-}
-
-type AnalyticsResult {
-  success: Boolean
-}
-
-input AnalyticsTrackInput {
-  eventName: String!
-  properties: [AnalyticsMetaField]
-  anonymousId: String
-  deviceInfo: AnalyticsDeviceInfo
-}
-
-scalar AnalyticsValue
-
-type AudioMedia implements Media {
-  name: String
-  key: String
-  sources: [AudioMediaSource]
-}
-
-type AudioMediaSource implements MediaSource {
-  uri: String
-}
-
-interface AudioNode {
-  audios: [AudioMedia]
-}
-
-type AuthenticatedUser {
-  id: ID!
-  profile: Person
-  rock: RockPersonDetails
-  rockToken: String @deprecated(reason: "Use rock.authCookie instead")
-}
-
-type Authentication {
-  user: AuthenticatedUser
-  token: String
-}
-
-enum CacheControlScope {
-  PUBLIC
-  PRIVATE
-}
-
-type Campus implements Node {
-  id: ID!
-  name: String
-  street1: String
-  street2: String
-  city: String
-  state: String
-  postalCode: String
-  latitude: Float
-  longitude: Float
-  image: ImageMediaSource
-  distanceFromLocation(location: CampusLocationInput): Float
-  events: [Event]
-}
-
-input CampusLocationInput {
-  latitude: Float
-  longitude: Float
-}
-
-interface Card {
-  title(hyphenated: Boolean): String
-  coverImage: ImageMedia
-  summary: String
-}
-
-type CardListItem {
-  id: ID!
-  hasAction: Boolean
-  actionIcon: String
-  labelText: String
-  summary: String
-  coverImage: ImageMedia
-  title(hyphenated: Boolean): String
-  relatedNode: Node
-  action: ACTION_FEATURE_ACTION
-}
-
-"""A rgb color string"""
-scalar Color
-
-type ContentChannel implements Node {
-  id: ID!
-  name: String
-  description: String
-  childContentChannels: [ContentChannel]
-  childContentItemsConnection(first: Int, after: String): ContentItemsConnection
-  iconName: String
-}
-
-interface ContentChildNode {
-  parentChannel: ContentChannel
-  siblingContentItemsConnection(first: Int, after: String): ContentItemsConnection
-}
-
-interface ContentItem {
-  id: ID!
-  title(hyphenated: Boolean): String
-  coverImage: ImageMedia
-  images: [ImageMedia]
-  videos: [VideoMedia]
-  audios: [AudioMedia]
-  htmlContent: String
-  summary: String
-  childContentItemsConnection(first: Int, after: String): ContentItemsConnection
-  siblingContentItemsConnection(first: Int, after: String): ContentItemsConnection
-  parentChannel: ContentChannel
-  theme: Theme
-  isLiked: Boolean
-  likedCount: Int
-  sharing: SharableContentItem
-}
-
-type ContentItemsConnection {
-  edges: [ContentItemsConnectionEdge]
-  totalCount: Int
-  pageInfo: PaginationInfo
-}
-
-type ContentItemsConnectionEdge {
-  node: ContentItem
-  cursor: String
-}
-
-input ContentItemsConnectionInput {
-  first: Int
-  after: String
-}
-
-interface ContentNode {
-  title(hyphenated: Boolean): String
-  coverImage: ImageMedia
-  htmlContent: String
-}
-
-interface ContentParentNode {
-  childContentItemsConnection(first: Int, after: String): ContentItemsConnection
-}
-
-type ContentSeriesContentItem implements ContentItem & Node & ContentNode & Card & VideoNode & AudioNode & ContentChildNode & ContentParentNode & ThemedNode & ProgressNode & LikableNode & ShareableNode & FeaturesNode {
-  id: ID!
-  title(hyphenated: Boolean): String
-  coverImage: ImageMedia
-  images: [ImageMedia]
-  videos: [VideoMedia]
-  audios: [AudioMedia]
-  htmlContent: String
-  summary: String
-  childContentItemsConnection(first: Int, after: String): ContentItemsConnection
-  siblingContentItemsConnection(first: Int, after: String): ContentItemsConnection
-  parentChannel: ContentChannel
-  theme: Theme
-  percentComplete: Float
-  upNext: ContentItem
-  scriptures: [Scripture]
-  isLiked: Boolean
-  likedCount: Int
-  sharing: SharableContentItem
-  features: [Feature] @deprecated(reason: "Use featureFeed")
-  featureFeed: FeatureFeed
-}
-
-type Device implements Node {
-  id: ID!
-  pushId: String!
-  notificationsEnabled: Boolean!
-}
-
-type DevotionalContentItem implements ContentItem & Node & ContentNode & Card & VideoNode & AudioNode & ContentChildNode & ContentParentNode & ThemedNode & ScriptureNode & LikableNode & ShareableNode {
-  id: ID!
-  title(hyphenated: Boolean): String
-  coverImage: ImageMedia
-  images: [ImageMedia]
-  videos: [VideoMedia]
-  audios: [AudioMedia]
-  htmlContent: String
-  summary: String
-  childContentItemsConnection(first: Int, after: String): ContentItemsConnection
-  siblingContentItemsConnection(first: Int, after: String): ContentItemsConnection
-  parentChannel: ContentChannel
-  theme: Theme
-  scriptures: [Scripture]
-  isLiked: Boolean
-  likedCount: Int
-  sharing: SharableContentItem
-}
-
-type Event implements Node {
-  id: ID!
-  name: String
-  description: String
-  location: String
-  start: String
-  end: String
-  image: ImageMedia
-}
-
-interface Feature {
-  id: ID!
-  order: Int
-}
-
-type FeatureAction {
-  relatedNode: Node
-  action: ACTION_FEATURE_ACTION
-  title: String
-}
-
-type FeatureFeed implements Node {
-  id: ID!
-  features: [Feature]
-}
-
-interface FeaturesNode {
-  features: [Feature] @deprecated(reason: "Use featureFeed")
-  featureFeed: FeatureFeed
-}
-
-enum GENDER {
-  Male
-  Female
-  Unknown
-}
-
-type Group implements Node {
-  id: ID!
-  name: String
-  leader: Person @deprecated(reason: "No longer used, use 'leaders' instead")
-  leaders: [Person]
-  members: [Person]
-}
-
-enum GROUP_TYPE {
-  Serving
-  Community
-  Family
-}
-
-type HeroListFeature implements Feature & Node {
-  id: ID!
-  order: Int
-  title: String
-  subtitle: String
-  actions: [ActionListAction]
-  heroCard: CardListItem
-  primaryAction: FeatureAction
-}
-
-type HorizontalCardListFeature implements Feature & Node {
-  id: ID!
-  order: Int
-  title: String
-  subtitle: String
-  cards: [CardListItem]
-  primaryAction: FeatureAction
-}
-
-type ImageMedia implements Media {
-  name: String
-  key: String
-  sources: [ImageMediaSource]
-}
-
-type ImageMediaSource implements MediaSource {
-  uri: String
-}
-
-enum InteractionAction {
-  VIEW
-  COMPLETE
-  PRAY
-}
-
-input InteractionDataField {
-  field: String!
-  value: InteractionValue
-}
-
-type InteractionResult {
-  success: Boolean
-  node: Node
-}
-
-scalar InteractionValue
-
-interface LikableNode {
-  isLiked: Boolean
-  likedCount: Int
-}
-
-enum LIKE_OPERATION {
-  Like
-  Unlike
-}
-
-input LikeEntityInput {
-  nodeId: ID!
-  operation: LIKE_OPERATION!
-}
-
-interface LiveNode {
-  liveStream: LiveStream
-}
-
-type LiveStream {
-  isLive: Boolean
-  eventStartTime: String
-  media: VideoMedia
-  webViewUrl: String
-  contentItem: ContentItem
-}
-
-interface Media {
-  name: String
-  key: String
-  sources: [MediaSource]
-}
-
-type MediaContentItem implements ContentItem & Node & ContentNode & Card & VideoNode & AudioNode & ContentChildNode & ContentParentNode & ThemedNode & ScriptureNode & LikableNode & ShareableNode {
-  id: ID!
-  title(hyphenated: Boolean): String
-  coverImage: ImageMedia
-  images: [ImageMedia]
-  videos: [VideoMedia]
-  audios: [AudioMedia]
-  htmlContent: String
-  summary: String
-  childContentItemsConnection(first: Int, after: String): ContentItemsConnection
-  siblingContentItemsConnection(first: Int, after: String): ContentItemsConnection
-  parentChannel: ContentChannel
-  theme: Theme
-  scriptures: [Scripture]
-  isLiked: Boolean
-  likedCount: Int
-  sharing: SharableContentItem
-}
-
-enum MediaInputType {
-  IMAGE
-  VIDEO
-  AUDIO
-}
-
-interface MediaSource {
-  uri: String
-}
-
-type Mutation {
-  _placeholder: Boolean
-  updateLikeEntity(input: LikeEntityInput!): ContentItem @deprecated(reason: "Use the more general updateLikeNode instead")
-  updateLikeNode(input: LikeEntityInput!): Node
-  updateProfileField(input: UpdateProfileInput!): Person
-  updateProfileFields(input: [UpdateProfileInput]!): Person
-  uploadProfileImage(file: Upload!, size: Int!): Person
-  authenticate(identity: String!, password: String!): Authentication
-  changePassword(password: String!): Authentication
-  registerPerson(email: String!, password: String!, userProfile: [UpdateProfileInput]): Authentication
-  requestSmsLoginPin(phoneNumber: String!): SmsPinResult
-  authenticateWithSms(phoneNumber: String!, pin: String!): Authentication
-  registerWithSms(phoneNumber: String!, pin: String!, userProfile: [UpdateProfileInput]): Authentication
-  interactWithNode(action: InteractionAction!, nodeId: ID!, data: [InteractionDataField]): InteractionResult
-  identifySelf(input: AnalyticsIdentifyInput!): AnalyticsResult
-  trackEvent(input: AnalyticsTrackInput!): AnalyticsResult
-  updateUserPushSettings(input: PushSettingsInput!): Person
-  updateUserCampus(campusId: String!): Person
-  addPrayer(text: String!, isAnonymous: Boolean): PrayerRequest
-}
-
-interface Node {
-  id: ID!
-}
-
-type PaginationInfo {
-  startCursor: String
-  endCursor: String
-}
-
-type Pass implements Node {
-  id: ID!
-  type: PassType
-  description: String
-  logo: ImageMediaSource
-  thumbnail: ImageMediaSource
-  barcode: ImageMediaSource
-  primaryFields: [PassField]
-  secondaryFields: [PassField]
-  backgroundColor: Color
-  foregroundColor: Color
-  labelColor: Color
-  logoText: String
-  passkitFileUrl: String
-}
-
-type PassField {
-  key: String!
-  label: String
-  value: String!
-  textAlignment: PassFieldTextAlignment
-}
-
-enum PassFieldTextAlignment {
-  LEFT
-  CENTER
-  RIGHT
-  NATURAL
-}
-
-enum PassType {
-  GENERIC
-}
-
-type Person implements Node {
-  id: ID!
-  firstName: String
-  lastName: String
-  nickName: String
-  email: String
-  gender: GENDER
-  birthDate: String
-  photo: ImageMediaSource
-  devices: [Device]
-  campus: Campus
-  groups(type: GROUP_TYPE, asLeader: Boolean): [Group]
-}
-
-type PrayerListFeature implements Feature & Node {
-  id: ID!
-  order: Int
-  isCard: Boolean
-  title: String
-  subtitle: String
-  prayers: [PrayerRequest]
-}
-
-type PrayerRequest implements Node {
-  id: ID!
-  text: String!
-  requestor: Person
-  isAnonymous: Boolean
-  isPrayed: Boolean
-}
-
-interface ProgressNode {
-  percentComplete: Float
-  upNext: ContentItem
-}
-
-input PushSettingsInput {
-  enabled: Boolean
-  pushProviderUserId: String
-}
-
-type Query {
-  _placeholder: Boolean
-  node(id: ID!): Node
-  likedContent(first: Int, after: String): ContentItemsConnection
-  contentChannels: [ContentChannel]
-  campaigns: ContentItemsConnection
-  userFeed(first: Int, after: String): ContentItemsConnection
-  personaFeed(first: Int, after: String): ContentItemsConnection
-  currentUser: AuthenticatedUser
-  userExists(identity: String): USER_AUTH_STATUS
-  liveStream: LiveStream @deprecated(reason: "Use liveStreams, there may be multiple.")
-  liveStreams: [LiveStream]
-  scripture(query: String!, version: VERSION): Scripture @deprecated(reason: "Use 'scriptures' instead.")
-  scriptures(query: String!, version: VERSION): [Scripture]
-  userPass: Pass
-  search(query: String!, first: Int, after: String): SearchResultsConnection
-  campuses(location: CampusLocationInput): [Campus]
-  userFeedFeatures: [Feature] @deprecated(reason: "Use homeFeedFeatures or discoverFeedFeatures")
-  homeFeedFeatures(campusId: ID): FeatureFeed
-  discoverFeedFeatures: FeatureFeed
-}
-
-type RockPersonDetails {
-  authToken: String
-  authCookie: String
-}
-
-type Scripture implements Node {
-  id: ID!
-  html: String
-  reference: String
-  copyright: String
-  version: String
-}
-
-type ScriptureFeature implements Feature & Node {
-  id: ID!
-  order: Int
-  scriptures: [Scripture]
-  sharing: SharableFeature
-}
-
-interface ScriptureNode {
-  scriptures: [Scripture]
-}
-
-type SearchResult {
-  cursor: String
-  title: String
-  summary: String
-  coverImage: ImageMedia
-  node: Node
-}
-
-type SearchResultsConnection {
-  edges: [SearchResult]
-  pageInfo: PaginationInfo
-}
-
-interface Sharable {
-  message: String
-  title: String
-  url: String @deprecated(reason: "Not supported on the interface")
-}
-
-type SharableContentItem implements Sharable {
-  message: String
-  title: String
-  url: String
-}
-
-type SharableFeature implements Sharable {
-  message: String
-  title: String
-  url: String @deprecated(reason: "Not supported on a feature")
-}
-
-interface ShareableNode {
-  sharing: SharableContentItem
-}
-
-type SmsPinResult {
-  success: Boolean
-  userAuthStatus: USER_AUTH_STATUS
-}
-
-type TextFeature implements Feature & Node {
-  id: ID!
-  order: Int
-  body: String
-  sharing: SharableFeature
-}
-
-type Theme {
-  type: ThemeType
-  colors: ThemeColors
-}
-
-type ThemeColors {
-  primary: Color
-  secondary: Color
-  screen: Color
-  paper: Color
-  alert: Color
-}
-
-interface ThemedNode {
-  theme: Theme
-}
-
-enum ThemeType {
-  LIGHT
-  DARK
-}
-
-type UniversalContentItem implements ContentItem & Node & ContentNode & Card & VideoNode & AudioNode & ContentChildNode & ContentParentNode & ThemedNode & LikableNode & ShareableNode {
-  id: ID!
-  title(hyphenated: Boolean): String
-  coverImage: ImageMedia
-  images: [ImageMedia]
-  videos: [VideoMedia]
-  audios: [AudioMedia]
-  htmlContent: String
-  summary: String
-  childContentItemsConnection(first: Int, after: String): ContentItemsConnection
-  siblingContentItemsConnection(first: Int, after: String): ContentItemsConnection
-  parentChannel: ContentChannel
-  theme: Theme
-  isLiked: Boolean
-  likedCount: Int
-  sharing: SharableContentItem
-}
-
-enum UPDATEABLE_PROFILE_FIELDS {
-  FirstName
-  LastName
-  Email
-  NickName
-  Gender
-  BirthDate
-}
-
-input UpdateProfileInput {
-  field: UPDATEABLE_PROFILE_FIELDS!
-  value: String!
-}
-
-"""The `Upload` scalar type represents a file upload."""
-scalar Upload
-
-type Url implements Node {
-  url: String
-  id: ID!
-}
-
-enum USER_AUTH_STATUS {
-  NONE
-  NEW_APP_USER
-  EXISTING_APP_USER
-}
-
-enum VERSION {
-  WEB
-  KJV
-}
-
-type VerticalCardListFeature implements Feature & Node {
-  id: ID!
-  order: Int
-  title: String
-  subtitle: String
-  isFeatured: Boolean
-  cards: [CardListItem]
-}
-
-type VideoMedia implements Media {
-  name: String
-  key: String
-  sources: [VideoMediaSource]
-  embedHtml: String
-}
-
-type VideoMediaSource implements MediaSource {
-  uri: String
-}
-
-interface VideoNode {
-  videos: [VideoMedia]
-}
-
-type WebviewFeature implements Feature & Node {
-  id: ID!
-  order: Int
-  linkText: String
-  title: String
-  url: String
-}
-
-type WeekendContentItem implements ContentItem & Node & ContentNode & Card & VideoNode & AudioNode & ContentChildNode & ContentParentNode & ThemedNode & LikableNode & LiveNode & ShareableNode & FeaturesNode {
-  id: ID!
-  title(hyphenated: Boolean): String
-  coverImage: ImageMedia
-  images: [ImageMedia]
-  videos: [VideoMedia]
-  audios: [AudioMedia]
-  htmlContent: String
-  summary: String
-  childContentItemsConnection(first: Int, after: String): ContentItemsConnection
-  siblingContentItemsConnection(first: Int, after: String): ContentItemsConnection
-  parentChannel: ContentChannel
-  theme: Theme
-  isLiked: Boolean
-  likedCount: Int
-  liveStream: LiveStream
-  sharing: SharableContentItem
-  features: [Feature] @deprecated(reason: "Use featureFeed")
-  featureFeed: FeatureFeed
-}
-
diff --git a/apolloschurchapp/scripts/get-introspection-data.js b/apolloschurchapp/scripts/get-introspection-data.js
index 80ae562..8acfcf3 100755
--- a/apolloschurchapp/scripts/get-introspection-data.js
+++ b/apolloschurchapp/scripts/get-introspection-data.js
@@ -1,15 +1,11 @@
 const fs = require('fs');
 const Path = require('path');
-require('dotenv/config');
-const fetch = require('node-fetch');
 
-const attempts = 0;
-const maxAttempts = 3;
-const timeBetweenAttempts = 5 * 1000;
+const fetch = require('node-fetch');
 
-const getIntrospectionData = async () => {
+(async () => {
   try {
-    const query = await fetch(process.env.APP_DATA_URL, {
+    const query = await fetch(`https://apollos-church-api.now.sh/graphql`, {
       method: 'POST',
       headers: { 'Content-Type': 'application/json' },
       body: JSON.stringify({
@@ -40,20 +36,7 @@ const getIntrospectionData = async () => {
       Path.resolve(__dirname, '../src/client/fragmentTypes.json'),
       JSON.stringify(data)
     );
-
-    console.log('Successfully wrote fragmentTypes!');
   } catch (e) {
-    if (attempts < maxAttempts) {
-      console.log(
-        `Error writing fragmentTypes (-api probably hasn't started yet). Trying again after wait. Attempt: ${attempts +
-          1} of ${maxAttempts}`
-      );
-      await new Promise((resolve) => setTimeout(resolve, timeBetweenAttempts)); // try again after waiting
-      getIntrospectionData();
-    } else {
-      // throw new Error('Error writing fragmentTypes file', e);
-    }
+    throw new Error('Error writing fragmentTypes file', e);
   }
-};
-
-getIntrospectionData();
+})();
diff --git a/apolloschurchapp/scripts/init.sh b/apolloschurchapp/scripts/init.sh
deleted file mode 100755
index 9d87ad1..0000000
--- a/apolloschurchapp/scripts/init.sh
+++ /dev/null
@@ -1,6 +0,0 @@
-# create .env file
-if test -f .env; then
-	echo ".env file already exists!"
-	exit 1
-fi
-echo "APP_DATA_URL=http://localhost:4000" > .env
diff --git a/apolloschurchapp/scripts/link-packages.js b/apolloschurchapp/scripts/link-packages.js
deleted file mode 100644
index be27903..0000000
--- a/apolloschurchapp/scripts/link-packages.js
+++ /dev/null
@@ -1,61 +0,0 @@
-const fs = require('fs');
-const { execSync } = require('child_process');
-const chalk = require('chalk');
-
-let apollosAppsLocation = null;
-const apollosAppsLocationFromEnv = fs
-  .readFileSync(`${__dirname}/../.env`, 'utf8')
-  .match(/APOLLOS_APPS_LOCATION=(.*)/);
-
-if (apollosAppsLocationFromEnv && apollosAppsLocationFromEnv.length >= 2) {
-  apollosAppsLocation = apollosAppsLocationFromEnv[1];
-}
-
-if (!apollosAppsLocation) {
-  console.error(
-    chalk.red(
-      'In order to link the Apollos React Native packages to your local dev environment'
-    )
-  );
-  console.error(
-    chalk.red(
-      'you must configure the APOLLOS_APPS_LOCATION variable in your .env '
-    )
-  );
-  console.error(
-    chalk.red('to point at your local copy of the apollos-apps repo')
-  );
-  process.exit(1);
-}
-
-const packageJson = JSON.parse(fs.readFileSync(`${__dirname}/../package.json`));
-const dependencies = [
-  ...Object.keys(packageJson.dependencies),
-  ...Object.keys(packageJson.devDependencies),
-].filter((d) => d.includes('@apollosproject'));
-
-dependencies.forEach((dep) => {
-  const folderName = dep.split('@apollosproject/')[1];
-
-  if (
-    fs.existsSync(
-      `${apollosAppsLocation}/packages/apollos-${folderName}/package.json`
-    )
-  ) {
-    const output = execSync(
-      `printf 'y\n' | yarn wml add ${apollosAppsLocation}/packages/apollos-${folderName} ${__dirname}/../node_modules/${dep}`,
-      { encoding: 'utf8' }
-    );
-    const watchmanConfig = JSON.parse(
-      fs.readFileSync(
-        `${apollosAppsLocation}/packages/apollos-${folderName}/.watchmanconfig`
-      )
-    );
-    watchmanConfig.ignore_dirs = [...watchmanConfig.ignore_dirs, 'coverage'];
-    fs.writeFileSync(
-      `${apollosAppsLocation}/packages/apollos-${folderName}/.watchmanconfig`,
-      JSON.stringify(watchmanConfig, null, 2)
-    );
-    console.log(output);
-  }
-});
diff --git a/apolloschurchapp/src/Providers.js b/apolloschurchapp/src/Providers.js
index 67b6f44..cf42144 100644
--- a/apolloschurchapp/src/Providers.js
+++ b/apolloschurchapp/src/Providers.js
@@ -1,46 +1,7 @@
-import React from 'react';
-import ApollosConfig from '@apollosproject/config';
-import { Providers, NavigationService } from '@apollosproject/ui-kit';
-import { AuthProvider } from '@apollosproject/ui-auth';
-import { AnalyticsProvider } from '@apollosproject/ui-analytics';
-import { MediaPlayerProvider } from '@apollosproject/ui-media-player';
-import { NotificationsProvider } from '@apollosproject/ui-notifications';
-import { LiveProvider } from '@apollosproject/ui-connected';
-import { checkOnboardingStatusAndNavigate } from '@apollosproject/ui-onboarding';
+import { nest } from 'recompose';
 
-import ClientProvider, { client } from './client';
-import customTheme, { customIcons } from './theme';
+import ClientProvider from 'apolloschurchapp/src/client';
+import { ThemeProvider } from 'apolloschurchapp/src/ui/theme';
+import { WebBrowserProvider } from 'apolloschurchapp/src/ui/WebBrowser';
 
-const AppProviders = (props) => (
-  <ClientProvider {...props}>
-    <NotificationsProvider
-      oneSignalKey={ApollosConfig.ONE_SIGNAL_KEY}
-      navigate={NavigationService.navigate}
-    >
-      <AuthProvider
-        navigateToAuth={() => NavigationService.navigate('Auth')}
-        navigate={NavigationService.navigate}
-        closeAuth={() =>
-          checkOnboardingStatusAndNavigate({
-            client,
-            navigation: NavigationService,
-          })
-        }
-      >
-        <MediaPlayerProvider>
-          <AnalyticsProvider>
-            <LiveProvider>
-              <Providers
-                themeInput={customTheme}
-                iconInput={customIcons}
-                {...props}
-              />
-            </LiveProvider>
-          </AnalyticsProvider>
-        </MediaPlayerProvider>
-      </AuthProvider>
-    </NotificationsProvider>
-  </ClientProvider>
-);
-
-export default AppProviders;
+export default nest(ClientProvider, ThemeProvider, WebBrowserProvider);
diff --git a/apolloschurchapp/src/analytics/index.js b/apolloschurchapp/src/analytics/index.js
new file mode 100644
index 0000000..6b410b2
--- /dev/null
+++ b/apolloschurchapp/src/analytics/index.js
@@ -0,0 +1,61 @@
+import gql from 'graphql-tag';
+import DeviceInfo from 'react-native-device-info';
+import { Platform } from 'react-native';
+
+import { client } from '../client';
+
+const anonymousId = DeviceInfo.getUniqueID();
+
+const deviceInfo = {
+  platform: Platform.OS === 'ios' ? 'iOS' : 'Android',
+  deviceId: anonymousId,
+  deviceModel: DeviceInfo.getModel(),
+  osVersion: DeviceInfo.getSystemVersion(),
+  appVersion: DeviceInfo.getVersion(),
+};
+
+const trackMutation = gql`
+  mutation track($input: AnalyticsTrackInput!) {
+    trackEvent(input: $input) {
+      success
+    }
+  }
+`;
+
+const identifyMutation = gql`
+  mutation identify($input: AnalyticsIdentifyInput!) {
+    identifySelf(input: $input) {
+      success
+    }
+  }
+`;
+
+const propertiesToGqlInput = (props = []) =>
+  Object.keys(props).map((key) => ({
+    field: key,
+    value: props[key],
+  }));
+
+export const track = ({ eventName, properties }) =>
+  client.mutate({
+    mutation: trackMutation,
+    variables: {
+      input: {
+        anonymousId,
+        deviceInfo,
+        eventName,
+        properties: propertiesToGqlInput(properties),
+      },
+    },
+  });
+
+export const identify = () =>
+  client.mutate({
+    mutation: identifyMutation,
+    variables: {
+      input: {
+        anonymousId,
+        deviceInfo,
+      },
+    },
+  });
diff --git a/apolloschurchapp/src/auth/LoginButton.js b/apolloschurchapp/src/auth/LoginButton.js
new file mode 100644
index 0000000..30e8acb
--- /dev/null
+++ b/apolloschurchapp/src/auth/LoginButton.js
@@ -0,0 +1,45 @@
+import React, { PureComponent } from 'react';
+import { withNavigation } from 'react-navigation';
+import { Query, Mutation } from 'react-apollo';
+import PropTypes from 'prop-types';
+
+import { ButtonLink } from 'apolloschurchapp/src/ui/Button';
+import styled from 'apolloschurchapp/src/ui/styled';
+import ActivityIndicator from 'apolloschurchapp/src/ui/ActivityIndicator';
+
+import logout from './logout';
+import getLoginState from './getLoginState';
+
+const Button = styled(({ theme }) => ({
+  paddingHorizontal: theme.sizing.baseUnit,
+}))(ButtonLink);
+
+class LoginButton extends PureComponent {
+  static propTypes = {
+    navigation: PropTypes.shape({
+      push: PropTypes.func,
+    }),
+  };
+
+  handleLoginPress = () => this.props.navigation.push('Auth');
+
+  renderLogoutButton = () => (
+    <Mutation mutation={logout}>
+      {(handleLogout) => <Button onPress={() => handleLogout()}>Logout</Button>}
+    </Mutation>
+  );
+
+  render() {
+    return (
+      <Query query={getLoginState}>
+        {({ data: { isLoggedIn = false, loading } }) => {
+          if (loading) return <ActivityIndicator />;
+          if (isLoggedIn) return this.renderLogoutButton();
+          return <Button onPress={this.handleLoginPress}>Login</Button>;
+        }}
+      </Query>
+    );
+  }
+}
+
+export default withNavigation(LoginButton);
diff --git a/apolloschurchapp/src/auth/LoginButton.tests.js b/apolloschurchapp/src/auth/LoginButton.tests.js
new file mode 100644
index 0000000..364379e
--- /dev/null
+++ b/apolloschurchapp/src/auth/LoginButton.tests.js
@@ -0,0 +1,49 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+import wait from 'waait';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import LoginButton from './LoginButton';
+import getLoginState from './getLoginState';
+
+describe('LoginButton component', () => {
+  it('renders a LoginButton when logged out', async () => {
+    const mock = {
+      request: {
+        query: getLoginState,
+      },
+      result: {
+        data: { isLoggedIn: null },
+      },
+    };
+
+    const navigation = { navigate: jest.fn() };
+    const tree = renderer.create(
+      <Providers mocks={[mock]}>
+        <LoginButton navigation={navigation} />
+      </Providers>
+    );
+    await wait(0); // wait for response from graphql
+    expect(tree).toMatchSnapshot();
+  });
+
+  it('renders a LogoutButton when logged in', async () => {
+    const mock = {
+      request: {
+        query: getLoginState,
+      },
+      result: {
+        data: { isLoggedIn: 'some-auth-token' },
+      },
+    };
+    const navigation = { navigate: jest.fn() };
+    const tree = renderer.create(
+      <Providers mocks={[mock]}>
+        <LoginButton navigation={navigation} />
+      </Providers>
+    );
+    await wait(0); // wait for response from graphql
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/auth/ProtectedAction.js b/apolloschurchapp/src/auth/ProtectedAction.js
new file mode 100644
index 0000000..f38ae15
--- /dev/null
+++ b/apolloschurchapp/src/auth/ProtectedAction.js
@@ -0,0 +1,66 @@
+import React, { PureComponent } from 'react';
+import { Query } from 'react-apollo';
+import PropTypes from 'prop-types';
+import { withNavigation } from 'react-navigation';
+
+import getLoginState from './getLoginState';
+
+class ProtectedAction extends PureComponent {
+  queuedActionsToTriggerOnLogin = [];
+
+  static propTypes = {
+    children: PropTypes.func,
+    navigation: PropTypes.shape({
+      push: PropTypes.func,
+    }),
+    loading: PropTypes.bool,
+    isLoggedIn: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),
+  };
+
+  componentDidUpdate(oldProps) {
+    if (!oldProps.isLoggedIn && this.props.isLoggedIn) {
+      this.handleLogin();
+    }
+
+    if (
+      oldProps.loading &&
+      !this.props.loading &&
+      !this.props.isLoggedIn &&
+      this.queuedActionsToTriggerOnLogin.length
+    ) {
+      this.triggerLogin();
+    }
+  }
+
+  handleLogin = () => {
+    this.queuedActionsToTriggerOnLogin.forEach((action) => action());
+    this.queuedActionsToTriggerOnLogin = [];
+  };
+
+  triggerLogin = () => this.props.navigation.push('Auth');
+
+  protectedActionHandler = (action) => (...args) => {
+    if (this.props.isLoggedIn) {
+      action(...args);
+    } else {
+      this.queuedActionsToTriggerOnLogin.push(action.bind(this, ...args));
+      if (!this.props.loading) this.triggerLogin();
+    }
+  };
+
+  render() {
+    return typeof this.props.children === 'function'
+      ? this.props.children(this.protectedActionHandler)
+      : this.props.children;
+  }
+}
+
+const ProtectedActionWithQuery = (props) => (
+  <Query query={getLoginState}>
+    {({ data: { isLoggedIn = false } = {}, loading }) => (
+      <ProtectedAction isLoggedIn={isLoggedIn} loading={loading} {...props} />
+    )}
+  </Query>
+);
+
+export default withNavigation(ProtectedActionWithQuery);
diff --git a/apolloschurchapp/src/client/getCacheLoaded.js b/apolloschurchapp/src/auth/getLoginState.js
similarity index 66%
rename from apolloschurchapp/src/client/getCacheLoaded.js
rename to apolloschurchapp/src/auth/getLoginState.js
index d50b351..da75449 100644
--- a/apolloschurchapp/src/client/getCacheLoaded.js
+++ b/apolloschurchapp/src/auth/getLoginState.js
@@ -2,6 +2,6 @@ import gql from 'graphql-tag';
 
 export default gql`
   query {
-    cacheLoaded @client
+    isLoggedIn: authToken @client
   }
 `;
diff --git a/apolloschurchapp/src/auth/handleLogin.js b/apolloschurchapp/src/auth/handleLogin.js
new file mode 100644
index 0000000..417dde0
--- /dev/null
+++ b/apolloschurchapp/src/auth/handleLogin.js
@@ -0,0 +1,7 @@
+import gql from 'graphql-tag';
+
+export default gql`
+  mutation handleLogin($authToken: String!) {
+    handleLogin(authToken: $authToken) @client
+  }
+`;
diff --git a/apolloschurchapp/src/auth/index.js b/apolloschurchapp/src/auth/index.js
new file mode 100644
index 0000000..55c6e08
--- /dev/null
+++ b/apolloschurchapp/src/auth/index.js
@@ -0,0 +1,93 @@
+import React, { PureComponent } from 'react';
+import PropTypes from 'prop-types';
+import { View, SafeAreaView } from 'react-native';
+
+import { withTheme } from 'apolloschurchapp/src/ui/theme';
+import FlexedView from 'apolloschurchapp/src/ui/FlexedView';
+import TabView, { SceneMap } from 'apolloschurchapp/src/ui/TabView';
+import { H1, H5 } from 'apolloschurchapp/src/ui/typography';
+import styled from 'apolloschurchapp/src/ui/styled';
+import Icon from 'apolloschurchapp/src/ui/Icon';
+import { ButtonLink } from 'apolloschurchapp/src/ui/Button';
+import { track } from 'apolloschurchapp/src/analytics';
+
+import LoginForm from './login';
+import SignUpForm from './signup';
+
+export LoginButton from './LoginButton';
+export ProtectedAction from './ProtectedAction';
+
+const Title = styled(({ theme }) => ({ color: theme.colors.primary }))(H1);
+
+const BrandIcon = withTheme(({ theme }) => ({
+  name: 'brand-icon',
+  size: theme.sizing.baseUnit * 2.25,
+  marginVertical: theme.sizing.baseUnit,
+  fill: theme.colors.primary,
+}))(Icon);
+
+const HeaderContainer = styled(({ theme }) => ({
+  backgroundColor: theme.colors.background.paper,
+}))(SafeAreaView);
+
+const Header = styled(({ theme }) => ({
+  paddingHorizontal: theme.sizing.baseUnit,
+  paddingBottom: theme.sizing.baseUnit * 1.5,
+}))(View);
+
+const CancelButton = styled(({ theme }) => ({
+  alignSelf: 'flex-end',
+  marginTop: theme.sizing.baseUnit * 0.75,
+  marginRight: theme.sizing.baseUnit,
+}))(ButtonLink);
+
+class Auth extends PureComponent {
+  static navigationOptions = {
+    title: 'Login',
+  };
+
+  tabRoutes = [
+    { title: 'Sign In', key: 'login' },
+    { title: 'Register', key: 'signup' },
+  ];
+
+  static propTypes = {
+    navigation: PropTypes.shape({
+      goBack: PropTypes.func,
+    }),
+  };
+
+  handleFinish = () => {
+    // trigger the auth modal to close
+    track({ eventName: 'UserLogin' });
+    this.props.navigation.goBack();
+  };
+
+  renderLogin = () => <LoginForm onLogin={this.handleFinish} />;
+
+  renderSignup = () => <SignUpForm onSignup={this.handleFinish} />;
+
+  render() {
+    return (
+      <FlexedView>
+        <HeaderContainer>
+          <CancelButton onPress={this.handleFinish}>Cancel</CancelButton>
+          <Header>
+            <BrandIcon />
+            <Title>Welcome!</Title>
+            <H5>Please sign in to continue</H5>
+          </Header>
+        </HeaderContainer>
+        <TabView
+          routes={this.tabRoutes}
+          renderScene={SceneMap({
+            login: this.renderLogin,
+            signup: this.renderSignup,
+          })}
+        />
+      </FlexedView>
+    );
+  }
+}
+
+export default Auth;
diff --git a/apolloschurchapp/src/auth/login/Form.js b/apolloschurchapp/src/auth/login/Form.js
new file mode 100644
index 0000000..aa0ed89
--- /dev/null
+++ b/apolloschurchapp/src/auth/login/Form.js
@@ -0,0 +1,100 @@
+import React, { PureComponent } from 'react';
+import { View, SafeAreaView } from 'react-native';
+import PropTypes from 'prop-types';
+import { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';
+
+import { WebBrowserConsumer } from 'apolloschurchapp/src/ui/WebBrowser';
+import FlexedView from 'apolloschurchapp/src/ui/FlexedView';
+import PaddedView from 'apolloschurchapp/src/ui/PaddedView';
+import { Text as TextInput } from 'apolloschurchapp/src/ui/inputs';
+import Button, { ButtonLink } from 'apolloschurchapp/src/ui/Button';
+import styled from 'apolloschurchapp/src/ui/styled';
+
+const BottomSafeAreaView = styled({
+  position: 'absolute',
+  bottom: 0,
+  left: 0,
+  right: 0,
+})(SafeAreaView);
+
+class Form extends PureComponent {
+  static propTypes = {
+    setFieldValue: PropTypes.func,
+    touched: PropTypes.shape({}),
+    errors: PropTypes.shape({}),
+    values: PropTypes.shape({}),
+    handleSubmit: PropTypes.func,
+    isSubmitting: PropTypes.bool,
+    isValid: PropTypes.bool,
+  };
+
+  render() {
+    const {
+      values,
+      touched,
+      errors,
+      handleSubmit,
+      setFieldValue,
+      isValid,
+      isSubmitting,
+    } = this.props;
+    return (
+      <FlexedView>
+        <KeyboardAwareScrollView>
+          <PaddedView>
+            <View>
+              <TextInput
+                label="Email"
+                type="email"
+                value={values.email}
+                error={touched.email && errors.email}
+                onChangeText={(text) => setFieldValue('email', text)}
+                onSubmitEditing={() => this.passwordInput.focus()}
+                returnKeyType="next"
+                textContentType="username"
+                enablesReturnKeyAutomatically
+              />
+              <TextInput
+                label="Password"
+                type="password"
+                value={values.password}
+                error={touched.password && errors.password}
+                onChangeText={(text) => setFieldValue('password', text)}
+                onSubmitEditing={handleSubmit}
+                returnKeyType="go"
+                textContentType="password"
+                enablesReturnKeyAutomatically
+                inputRef={(r) => {
+                  this.passwordInput = r;
+                }}
+              />
+              <WebBrowserConsumer>
+                {(openUrl) => (
+                  <ButtonLink
+                    onPress={() =>
+                      openUrl('https://apollosrock.newspring.cc/page/56/')
+                    }
+                  >
+                    Forgot your password?
+                  </ButtonLink>
+                )}
+              </WebBrowserConsumer>
+            </View>
+          </PaddedView>
+        </KeyboardAwareScrollView>
+        <BottomSafeAreaView>
+          <PaddedView vertical={false}>
+            <Button
+              onPress={handleSubmit}
+              title="Sign in"
+              disabled={!isValid}
+              loading={isSubmitting}
+            />
+          </PaddedView>
+        </BottomSafeAreaView>
+      </FlexedView>
+    );
+  }
+}
+
+export default Form;
diff --git a/apolloschurchapp/src/auth/login/Form.stories.js b/apolloschurchapp/src/auth/login/Form.stories.js
new file mode 100644
index 0000000..54cc3f8
--- /dev/null
+++ b/apolloschurchapp/src/auth/login/Form.stories.js
@@ -0,0 +1,12 @@
+import React from 'react';
+import { storiesOf } from '@storybook/react-native';
+
+import LoginForm from './Form';
+
+storiesOf('Auth/LoginForm', module).add('Example', () => (
+  <LoginForm
+    values={{ email: '', password: '' }}
+    touched={{ email: false, password: false }}
+    errors={{ email: null, password: null }}
+  />
+));
diff --git a/apolloschurchapp/src/auth/login/Form.tests.js b/apolloschurchapp/src/auth/login/Form.tests.js
new file mode 100644
index 0000000..0e352e3
--- /dev/null
+++ b/apolloschurchapp/src/auth/login/Form.tests.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import LoginForm from './Form';
+
+describe('The LoginForm component', () => {
+  it('should render', () => {
+    const tree = renderer.create(
+      <Providers>
+        <LoginForm
+          values={{ email: '', password: '' }}
+          touched={{ email: false, password: false }}
+          errors={{ email: null, password: null }}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/auth/login/authenticate.js b/apolloschurchapp/src/auth/login/authenticate.js
new file mode 100644
index 0000000..94d4e74
--- /dev/null
+++ b/apolloschurchapp/src/auth/login/authenticate.js
@@ -0,0 +1,9 @@
+import gql from 'graphql-tag';
+
+export default gql`
+  mutation authenticate($email: String!, $password: String!) {
+    authenticate(identity: $email, password: $password) {
+      token
+    }
+  }
+`;
diff --git a/apolloschurchapp/src/auth/login/index.js b/apolloschurchapp/src/auth/login/index.js
new file mode 100644
index 0000000..45bcb63
--- /dev/null
+++ b/apolloschurchapp/src/auth/login/index.js
@@ -0,0 +1,67 @@
+import React from 'react';
+import { Mutation } from 'react-apollo';
+import { Formik } from 'formik';
+import * as Yup from 'yup';
+import PropTypes from 'prop-types';
+
+import handleLogin from '../handleLogin';
+import { client } from '../../client'; //eslint-disable-line
+import authenticateMutation from './authenticate';
+import LoginForm from './Form';
+
+const Login = ({ onLogin }) => (
+  <Mutation
+    mutation={authenticateMutation}
+    update={(cache, { data: { authenticate } }) => {
+      client.mutate({
+        mutation: handleLogin,
+        variables: {
+          authToken: authenticate.token,
+        },
+      });
+    }}
+  >
+    {(authenticate) => (
+      <Formik
+        validationSchema={Yup.object().shape({
+          email: Yup.string()
+            .email('Invalid email address')
+            .required('Email is required!'),
+          password: Yup.string().required('Password is required!'),
+        })}
+        onSubmit={async (variables, { setSubmitting, setFieldError }) => {
+          try {
+            await authenticate({ variables });
+            if (onLogin) onLogin();
+          } catch (e) {
+            console.log(e);
+            const graphQLErrors = [];
+            if (
+              graphQLErrors.length &&
+              graphQLErrors.find(
+                ({ extensions }) => extensions.code === 'UNAUTHENTICATED'
+              )
+            ) {
+              setFieldError('email', true);
+              setFieldError('password', 'Your email or password is incorrect.');
+            } else {
+              setFieldError(
+                'password',
+                'Unknown error. Please try again later.'
+              );
+            }
+          }
+          setSubmitting(false);
+        }}
+      >
+        {(formikBag) => <LoginForm {...formikBag} />}
+      </Formik>
+    )}
+  </Mutation>
+);
+
+Login.propTypes = {
+  onLogin: PropTypes.func,
+};
+
+export default Login;
diff --git a/apolloschurchapp/src/client/markCacheLoaded.js b/apolloschurchapp/src/auth/logout.js
similarity index 50%
rename from apolloschurchapp/src/client/markCacheLoaded.js
rename to apolloschurchapp/src/auth/logout.js
index 773a809..8dbff04 100644
--- a/apolloschurchapp/src/client/markCacheLoaded.js
+++ b/apolloschurchapp/src/auth/logout.js
@@ -1,7 +1,7 @@
 import gql from 'graphql-tag';
 
 export default gql`
-  mutation markCacheLoaded {
-    cacheMarkLoaded @client
+  mutation {
+    logout @client
   }
 `;
diff --git a/apolloschurchapp/src/auth/signup/Form.js b/apolloschurchapp/src/auth/signup/Form.js
new file mode 100644
index 0000000..6f219d8
--- /dev/null
+++ b/apolloschurchapp/src/auth/signup/Form.js
@@ -0,0 +1,88 @@
+import React, { PureComponent } from 'react';
+import { View, SafeAreaView } from 'react-native';
+import PropTypes from 'prop-types';
+import { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';
+
+import FlexedView from 'apolloschurchapp/src/ui/FlexedView';
+import PaddedView from 'apolloschurchapp/src/ui/PaddedView';
+import { Text as TextInput } from 'apolloschurchapp/src/ui/inputs';
+import Button from 'apolloschurchapp/src/ui/Button';
+import styled from 'apolloschurchapp/src/ui/styled';
+
+const BottomSafeAreaView = styled({
+  position: 'absolute',
+  bottom: 0,
+  left: 0,
+  right: 0,
+})(SafeAreaView);
+
+class Form extends PureComponent {
+  static propTypes = {
+    setFieldValue: PropTypes.func,
+    touched: PropTypes.shape({}),
+    errors: PropTypes.shape({}),
+    values: PropTypes.shape({}),
+    handleSubmit: PropTypes.func,
+    isSubmitting: PropTypes.bool,
+    isValid: PropTypes.bool,
+  };
+
+  render() {
+    const {
+      values,
+      touched,
+      errors,
+      handleSubmit,
+      setFieldValue,
+      isValid,
+      isSubmitting,
+    } = this.props;
+    return (
+      <FlexedView>
+        <KeyboardAwareScrollView>
+          <PaddedView>
+            <View>
+              <TextInput
+                label="Email"
+                type="email"
+                value={values.email}
+                error={touched.email && errors.email}
+                onChangeText={(text) => setFieldValue('email', text)}
+                onSubmitEditing={() => this.passwordInput.focus()}
+                returnKeyType="next"
+                textContentType="username"
+                enablesReturnKeyAutomatically
+              />
+              <TextInput
+                label="Password"
+                type="password"
+                value={values.password}
+                error={touched.password && errors.password}
+                onChangeText={(text) => setFieldValue('password', text)}
+                onSubmitEditing={handleSubmit}
+                returnKeyType="go"
+                textContentType="password"
+                enablesReturnKeyAutomatically
+                inputRef={(r) => {
+                  this.passwordInput = r;
+                }}
+              />
+            </View>
+          </PaddedView>
+        </KeyboardAwareScrollView>
+        <BottomSafeAreaView>
+          <PaddedView vertical={false}>
+            <Button
+              onPress={handleSubmit}
+              title="Register"
+              disabled={!isValid}
+              loading={isSubmitting}
+            />
+          </PaddedView>
+        </BottomSafeAreaView>
+      </FlexedView>
+    );
+  }
+}
+
+export default Form;
diff --git a/apolloschurchapp/src/auth/signup/Form.stories.js b/apolloschurchapp/src/auth/signup/Form.stories.js
new file mode 100644
index 0000000..da0e764
--- /dev/null
+++ b/apolloschurchapp/src/auth/signup/Form.stories.js
@@ -0,0 +1,12 @@
+import React from 'react';
+import { storiesOf } from '@storybook/react-native';
+
+import LoginForm from './Form';
+
+storiesOf('Auth/SignupForm', module).add('Example', () => (
+  <LoginForm
+    values={{ email: '', password: '' }}
+    touched={{ email: false, password: false }}
+    errors={{ email: null, password: null }}
+  />
+));
diff --git a/apolloschurchapp/src/auth/signup/Form.tests.js b/apolloschurchapp/src/auth/signup/Form.tests.js
new file mode 100644
index 0000000..5d9601f
--- /dev/null
+++ b/apolloschurchapp/src/auth/signup/Form.tests.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import LoginForm from './Form';
+
+describe('The SignupForm component', () => {
+  it('should render', () => {
+    const tree = renderer.create(
+      <Providers>
+        <LoginForm
+          values={{ email: '', password: '' }}
+          touched={{ email: false, password: false }}
+          errors={{ email: null, password: null }}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/auth/signup/index.js b/apolloschurchapp/src/auth/signup/index.js
new file mode 100644
index 0000000..63d8ebd
--- /dev/null
+++ b/apolloschurchapp/src/auth/signup/index.js
@@ -0,0 +1,64 @@
+import React from 'react';
+import { Mutation } from 'react-apollo';
+import { Formik } from 'formik';
+import * as Yup from 'yup';
+import PropTypes from 'prop-types';
+
+import handleLogin from '../handleLogin';
+import { client } from '../../client'; //eslint-disable-line
+import registerPersonMutation from './registerPerson';
+import SignupForm from './Form';
+
+const Signup = ({ onSignup }) => (
+  <Mutation
+    mutation={registerPersonMutation}
+    update={(cache, { data: { registerPerson } }) => {
+      client.mutate({
+        mutation: handleLogin,
+        variables: {
+          authToken: registerPerson.token,
+        },
+      });
+    }}
+  >
+    {(authenticate) => (
+      <Formik
+        validationSchema={Yup.object().shape({
+          email: Yup.string()
+            .email('Invalid email address')
+            .required('Email is required!'),
+          password: Yup.string().required('Password is required!'),
+        })}
+        onSubmit={async (variables, { setSubmitting, setFieldError }) => {
+          try {
+            await authenticate({ variables });
+            if (onSignup) onSignup();
+          } catch ({ graphQLErrors = [], ...e }) {
+            if (
+              graphQLErrors.length &&
+              graphQLErrors.find(({ message }) =>
+                message.includes('User already exists')
+              )
+            ) {
+              setFieldError('email', 'There is already a user with this email');
+            } else {
+              setFieldError(
+                'password',
+                'Unknown error. Please try again later.'
+              );
+            }
+          }
+          setSubmitting(false);
+        }}
+      >
+        {(formikBag) => <SignupForm {...formikBag} />}
+      </Formik>
+    )}
+  </Mutation>
+);
+
+Signup.propTypes = {
+  onSignup: PropTypes.func,
+};
+
+export default Signup;
diff --git a/apolloschurchapp/src/auth/signup/registerPerson.js b/apolloschurchapp/src/auth/signup/registerPerson.js
new file mode 100644
index 0000000..77fc892
--- /dev/null
+++ b/apolloschurchapp/src/auth/signup/registerPerson.js
@@ -0,0 +1,9 @@
+import gql from 'graphql-tag';
+
+export default gql`
+  mutation registerPerson($email: String!, $password: String!) {
+    registerPerson(email: $email, password: $password) {
+      token
+    }
+  }
+`;
diff --git a/apolloschurchapp/src/client/__mocks__/cache.js b/apolloschurchapp/src/client/__mocks__/cache.js
deleted file mode 100644
index 29756d2..0000000
--- a/apolloschurchapp/src/client/__mocks__/cache.js
+++ /dev/null
@@ -1,21 +0,0 @@
-import {
-  InMemoryCache,
-  IntrospectionFragmentMatcher,
-} from 'apollo-cache-inmemory';
-import introspectionQueryResultData from '../fragmentTypes.json';
-
-const nodeCacheRedirect = (_, { id }, { getCacheKey }) =>
-  id ? getCacheKey({ __typename: id.split(':')[0], id }) : null;
-
-const cache = new InMemoryCache({
-  fragmentMatcher: new IntrospectionFragmentMatcher({
-    introspectionQueryResultData,
-  }),
-  cacheRedirects: {
-    Query: {
-      node: nodeCacheRedirect,
-    },
-  },
-});
-
-export default cache;
diff --git a/apolloschurchapp/src/client/__mocks__/index.js b/apolloschurchapp/src/client/__mocks__/index.js
index c982817..ca96910 100644
--- a/apolloschurchapp/src/client/__mocks__/index.js
+++ b/apolloschurchapp/src/client/__mocks__/index.js
@@ -1,38 +1,24 @@
-import React from 'react';
 import { MockedProvider } from 'react-apollo/test-utils';
 import ApolloClient from 'apollo-client';
 import { makeExecutableSchema, addMockFunctionsToSchema } from 'graphql-tools';
 import { SchemaLink } from 'apollo-link-schema';
-import { importSchema } from 'graphql-import';
+import { ApolloLink } from 'apollo-link';
+import { testSchema as typeDefs } from 'apollos-church-api';
 
-import { resolvers, schema, defaults } from '../../store';
-import cache from './cache';
+import cache from '../cache';
+import clientStateLink from '../clientStateLink';
 
-// eslint-disable-next-line
-export default (props) => {
-  let finalProps = props;
-  // eslint-disable-next-line
-  if (!props.mocks) {
-    // eslint-disable-next-line
-    finalProps = { ...props, resolvers };
-  }
-  return <MockedProvider cache={cache} {...finalProps} />;
-};
+export default MockedProvider;
 
-const serverSchema = makeExecutableSchema({
-  typeDefs: importSchema(`${process.cwd()}/schema.graphql`),
-  resolverValidationOptions: {
-    requireResolversForResolveType: false,
-  },
-});
-addMockFunctionsToSchema({ schema: serverSchema });
+const schema = makeExecutableSchema({ typeDefs });
+addMockFunctionsToSchema({ schema });
 
-const link = new SchemaLink({ schema: serverSchema });
-cache.writeData({ data: defaults });
+let link = new SchemaLink({ schema });
+if (clientStateLink) {
+  link = ApolloLink.from([clientStateLink, link]);
+}
 
 export const client = new ApolloClient({
-  link,
   cache,
-  resolvers,
-  typeDefs: schema,
+  link,
 });
diff --git a/apolloschurchapp/src/client/authLink.js b/apolloschurchapp/src/client/authLink.js
new file mode 100644
index 0000000..407934b
--- /dev/null
+++ b/apolloschurchapp/src/client/authLink.js
@@ -0,0 +1,35 @@
+import { setContext } from 'apollo-link-context';
+import gql from 'graphql-tag';
+
+import { ensureCacheHydration } from './cache';
+
+import { client } from './'; // eslint-disable-line
+
+export default setContext(async (request, { headers }) => {
+  try {
+    await ensureCacheHydration;
+
+    const {
+      data: { authToken },
+    } = await client.query({
+      query: gql`
+        query {
+          authToken @client
+        }
+      `,
+    });
+    if (!authToken) return {};
+
+    // return the headers to the context so httpLink can read them
+    return {
+      headers: {
+        ...headers,
+        authorization: authToken,
+      },
+    };
+  } catch (err) {
+    // eslint-disable-next-line
+    console.warn('Authorization Failed', err);
+    return {};
+  }
+});
diff --git a/apolloschurchapp/src/client/cache.js b/apolloschurchapp/src/client/cache.js
index 80ba332..84f792e 100644
--- a/apolloschurchapp/src/client/cache.js
+++ b/apolloschurchapp/src/client/cache.js
@@ -2,28 +2,26 @@ import {
   InMemoryCache,
   IntrospectionFragmentMatcher,
 } from 'apollo-cache-inmemory';
-import AsyncStorage from '@react-native-community/async-storage';
+import { AsyncStorage } from 'react-native';
+import DeviceInfo from 'react-native-device-info';
 import { CachePersistor } from 'apollo-cache-persist';
-import ApollosConfig from '@apollosproject/config';
 
 import introspectionQueryResultData from './fragmentTypes.json';
 
-// We reset our apollo cache based an env value and static number.
-// In the future, we should also look at resetting the app when an error occurs related to Apollo.
-// You can also increment this number to force a manual reset of the cache.
-const SCHEMA_VERSION = `${ApollosConfig.SCHEMA_VERSION}-1`; // Must be a string.
+// We reset our apollo cache on every build:
+// TODO: this could be optimized by only reseting cache when our schema or client-side schema changes,
+// however there is risk for missing changes and breaking things in production, so this is safer.
+const SCHEMA_VERSION = `${DeviceInfo.getVersion()}${DeviceInfo.getBuildNumber()}`; // Must be a string.
 const SCHEMA_VERSION_KEY = 'apollo-schema-version';
 
-const nodeCacheRedirect = (_, { id }, { getCacheKey }) =>
-  id ? getCacheKey({ __typename: id.split(':')[0], id }) : null;
-
 const cache = new InMemoryCache({
   fragmentMatcher: new IntrospectionFragmentMatcher({
     introspectionQueryResultData,
   }),
   cacheRedirects: {
     Query: {
-      node: nodeCacheRedirect,
+      node: (_, { id }, { getCacheKey }) =>
+        getCacheKey({ __typename: id.split(':')[0], id }),
     },
   },
 });
@@ -33,26 +31,14 @@ const persistor = new CachePersistor({
   storage: AsyncStorage,
 });
 
-// 1. If we are on the same schema version, restore the cache.
-// 2. If that fails, purge the cache and update the stored version so we don't try and restore agian
-// 3. If we are on a new schema version, purge the cache.
-// 4. If purging or setting AsyncStorage keys fails (or anything else) we capture the error and log it.
-
 export const ensureCacheHydration = (async () => {
-  // We wrap everything in try/catch because crashing on a cache restore is bad
-  // 😬
   try {
     const currentVersion = await AsyncStorage.getItem(SCHEMA_VERSION_KEY);
     if (currentVersion === SCHEMA_VERSION) {
       // If the current version matches the latest version,
       // we're good to go and can restore the cache.
-      try {
-        await persistor.restore();
-      } catch (restoreError) {
-        // If the restore fails, we want to do our best to purge the cache.
-        await persistor.purge();
-        console.error('Error restoring cache, purging the cache', restoreError);
-      }
+      console.log('Restoring cache...');
+      await persistor.restore();
     } else {
       // Otherwise, we'll want to purge the outdated persisted cache
       // and mark ourselves as having updated to the latest version.
@@ -60,7 +46,7 @@ export const ensureCacheHydration = (async () => {
       await AsyncStorage.setItem(SCHEMA_VERSION_KEY, SCHEMA_VERSION);
     }
   } catch (error) {
-    console.error('Error restoring or purging Apollo cache', error);
+    console.error('Error restoring Apollo cache', error);
   }
 })();
 
diff --git a/apolloschurchapp/src/client/clientStateLink.js b/apolloschurchapp/src/client/clientStateLink.js
new file mode 100644
index 0000000..0c45da8
--- /dev/null
+++ b/apolloschurchapp/src/client/clientStateLink.js
@@ -0,0 +1,11 @@
+import { withClientState } from 'apollo-link-state';
+
+import { resolvers, defaults, schema } from '../store';
+import cache from './cache';
+
+export default withClientState({
+  resolvers,
+  defaults,
+  cache,
+  typeDefs: schema,
+});
diff --git a/apolloschurchapp/src/client/fragmentTypes.json b/apolloschurchapp/src/client/fragmentTypes.json
index 6d2775f..c78600d 100644
--- a/apolloschurchapp/src/client/fragmentTypes.json
+++ b/apolloschurchapp/src/client/fragmentTypes.json
@@ -1 +1 @@
-{"__schema":{"types":[{"kind":"INTERFACE","name":"Node","possibleTypes":[{"name":"ContentChannel"},{"name":"Person"},{"name":"Device"},{"name":"Campus"},{"name":"Event"},{"name":"Group"},{"name":"Scripture"},{"name":"Pass"},{"name":"FeatureFeed"},{"name":"PrayerRequest"},{"name":"UniversalContentItem"},{"name":"DevotionalContentItem"},{"name":"MediaContentItem"},{"name":"ContentSeriesContentItem"},{"name":"WeekendContentItem"},{"name":"Url"},{"name":"ActionListFeature"},{"name":"ActionBarFeature"},{"name":"HeroListFeature"},{"name":"VerticalCardListFeature"},{"name":"HorizontalCardListFeature"},{"name":"TextFeature"},{"name":"ScriptureFeature"},{"name":"WebviewFeature"},{"name":"PrayerListFeature"}]},{"kind":"INTERFACE","name":"ContentItem","possibleTypes":[{"name":"UniversalContentItem"},{"name":"DevotionalContentItem"},{"name":"MediaContentItem"},{"name":"ContentSeriesContentItem"},{"name":"WeekendContentItem"}]},{"kind":"INTERFACE","name":"Media","possibleTypes":[{"name":"ImageMedia"},{"name":"VideoMedia"},{"name":"AudioMedia"}]},{"kind":"INTERFACE","name":"MediaSource","possibleTypes":[{"name":"ImageMediaSource"},{"name":"VideoMediaSource"},{"name":"AudioMediaSource"}]},{"kind":"INTERFACE","name":"Sharable","possibleTypes":[{"name":"SharableContentItem"},{"name":"SharableFeature"}]},{"kind":"INTERFACE","name":"Feature","possibleTypes":[{"name":"ActionListFeature"},{"name":"ActionBarFeature"},{"name":"HeroListFeature"},{"name":"VerticalCardListFeature"},{"name":"HorizontalCardListFeature"},{"name":"TextFeature"},{"name":"ScriptureFeature"},{"name":"WebviewFeature"},{"name":"PrayerListFeature"}]},{"kind":"INTERFACE","name":"ContentNode","possibleTypes":[{"name":"UniversalContentItem"},{"name":"DevotionalContentItem"},{"name":"MediaContentItem"},{"name":"ContentSeriesContentItem"},{"name":"WeekendContentItem"}]},{"kind":"INTERFACE","name":"Card","possibleTypes":[{"name":"UniversalContentItem"},{"name":"DevotionalContentItem"},{"name":"MediaContentItem"},{"name":"ContentSeriesContentItem"},{"name":"WeekendContentItem"}]},{"kind":"INTERFACE","name":"VideoNode","possibleTypes":[{"name":"UniversalContentItem"},{"name":"DevotionalContentItem"},{"name":"MediaContentItem"},{"name":"ContentSeriesContentItem"},{"name":"WeekendContentItem"}]},{"kind":"INTERFACE","name":"AudioNode","possibleTypes":[{"name":"UniversalContentItem"},{"name":"DevotionalContentItem"},{"name":"MediaContentItem"},{"name":"ContentSeriesContentItem"},{"name":"WeekendContentItem"}]},{"kind":"INTERFACE","name":"ContentParentNode","possibleTypes":[{"name":"UniversalContentItem"},{"name":"DevotionalContentItem"},{"name":"MediaContentItem"},{"name":"ContentSeriesContentItem"},{"name":"WeekendContentItem"}]},{"kind":"INTERFACE","name":"ContentChildNode","possibleTypes":[{"name":"UniversalContentItem"},{"name":"DevotionalContentItem"},{"name":"MediaContentItem"},{"name":"ContentSeriesContentItem"},{"name":"WeekendContentItem"}]},{"kind":"INTERFACE","name":"ThemedNode","possibleTypes":[{"name":"UniversalContentItem"},{"name":"DevotionalContentItem"},{"name":"MediaContentItem"},{"name":"ContentSeriesContentItem"},{"name":"WeekendContentItem"}]},{"kind":"INTERFACE","name":"ProgressNode","possibleTypes":[{"name":"ContentSeriesContentItem"}]},{"kind":"INTERFACE","name":"ScriptureNode","possibleTypes":[{"name":"DevotionalContentItem"},{"name":"MediaContentItem"}]},{"kind":"INTERFACE","name":"LikableNode","possibleTypes":[{"name":"UniversalContentItem"},{"name":"DevotionalContentItem"},{"name":"MediaContentItem"},{"name":"ContentSeriesContentItem"},{"name":"WeekendContentItem"}]},{"kind":"INTERFACE","name":"ShareableNode","possibleTypes":[{"name":"UniversalContentItem"},{"name":"DevotionalContentItem"},{"name":"MediaContentItem"},{"name":"ContentSeriesContentItem"},{"name":"WeekendContentItem"}]},{"kind":"INTERFACE","name":"FeaturesNode","possibleTypes":[{"name":"ContentSeriesContentItem"},{"name":"WeekendContentItem"}]},{"kind":"INTERFACE","name":"LiveNode","possibleTypes":[{"name":"WeekendContentItem"}]}]}}
\ No newline at end of file
+{"__schema":{"types":[{"kind":"INTERFACE","name":"Node","possibleTypes":[{"name":"Person"},{"name":"ContentChannel"},{"name":"Interaction"},{"name":"Session"},{"name":"UniversalContentItem"},{"name":"DevotionalContentItem"}]},{"kind":"INTERFACE","name":"MediaSource","possibleTypes":[{"name":"ImageMediaSource"},{"name":"VideoMediaSource"},{"name":"AudioMediaSource"}]},{"kind":"INTERFACE","name":"ContentItem","possibleTypes":[{"name":"UniversalContentItem"},{"name":"DevotionalContentItem"}]},{"kind":"INTERFACE","name":"Media","possibleTypes":[{"name":"ImageMedia"},{"name":"VideoMedia"},{"name":"AudioMedia"}]},{"kind":"INTERFACE","name":"Sharable","possibleTypes":[{"name":"SharableContentItem"}]}]}}
\ No newline at end of file
diff --git a/apolloschurchapp/src/client/httpLink.js b/apolloschurchapp/src/client/httpLink.js
index 2d44a9b..39a48f0 100644
--- a/apolloschurchapp/src/client/httpLink.js
+++ b/apolloschurchapp/src/client/httpLink.js
@@ -1,30 +1,10 @@
 import { Platform } from 'react-native';
 import { createUploadLink } from 'apollo-upload-client';
-import ApollosConfig from '@apollosproject/config';
-import { split } from 'apollo-link';
-import { createHttpLink } from 'apollo-link-http';
-import { getMainDefinition } from 'apollo-utilities';
+import { APP_DATA_URL } from 'react-native-dotenv';
 
-let uri = ApollosConfig.APP_DATA_URL;
-const androidUri = ApollosConfig.ANDROID_URL || '10.0.2.2';
+let uri = APP_DATA_URL;
 
 // Android's emulator requires localhost network traffic to go through 10.0.2.2
-if (Platform.OS === 'android') uri = uri.replace('localhost', androidUri);
+if (Platform.OS === 'android') uri = uri.replace('localhost', '10.0.2.2');
 
-export default split(
-  ({ query }) => {
-    const { kind, operation } = getMainDefinition(query);
-    return kind === 'OperationDefinition' && operation === 'mutation';
-  },
-  createUploadLink({ uri }),
-  createHttpLink({
-    uri,
-    useGETForQueries: true,
-    headers: {
-      // We can safely send these headers.
-      // Fastly does not currently respect no-store or no-cache directives. Including either or both of these in a Cache-Control header has no effect on Fastly's caching decision
-      // https://docs.fastly.com/en/guides/configuring-caching#do-not-cache
-      'Cache-Control': 'no-cache, no-store',
-    },
-  })
-);
+export default createUploadLink({ uri });
diff --git a/apolloschurchapp/src/client/index.js b/apolloschurchapp/src/client/index.js
index 302fc47..913f977 100644
--- a/apolloschurchapp/src/client/index.js
+++ b/apolloschurchapp/src/client/index.js
@@ -1,67 +1,28 @@
 import React, { PureComponent } from 'react';
 import PropTypes from 'prop-types';
 import { ApolloProvider } from 'react-apollo';
-import { ApolloProvider as ApolloHookProvider } from '@apollo/react-hooks';
 import { ApolloClient } from 'apollo-client';
 import { ApolloLink } from 'apollo-link';
-import { getVersion, getApplicationName } from 'react-native-device-info';
-
-import { authLink, buildErrorLink } from '@apollosproject/ui-auth';
-
-import { NavigationService } from '@apollosproject/ui-kit';
-import { resolvers, schema, defaults } from '../store';
+import SplashScreen from 'react-native-splash-screen';
 
 import httpLink from './httpLink';
+import clientStateLink from './clientStateLink';
+import authLink from './authLink'; // eslint-disable-line
 import cache, { ensureCacheHydration } from './cache';
-import MARK_CACHE_LOADED from './markCacheLoaded';
-
-const goToAuth = () => NavigationService.resetToAuth();
-const wipeData = () => cache.writeData({ data: defaults });
-
-let clearStore;
-let storeIsResetting = false;
-const onAuthError = async () => {
-  if (!storeIsResetting) {
-    storeIsResetting = true;
-    await clearStore();
-  }
-  storeIsResetting = false;
-  goToAuth();
-};
-
-const errorLink = buildErrorLink(onAuthError);
 
-const link = ApolloLink.from([authLink, errorLink, httpLink]);
+const link = clientStateLink.concat(ApolloLink.from([authLink, httpLink]));
 
 export const client = new ApolloClient({
   link,
   cache,
-  queryDeduplication: false,
-  shouldBatch: true,
-  resolvers,
-  typeDefs: schema,
-  name: getApplicationName(),
-  version: getVersion(),
+  queryDeduplication: true,
 });
 
-// Hack to give auth link access to method on client;
-// eslint-disable-next-line prefer-destructuring
-clearStore = client.clearStore;
-
-wipeData();
-// Ensure that media player still works after logout.
-client.onClearStore(() => wipeData());
-
 class ClientProvider extends PureComponent {
   static propTypes = {
     client: PropTypes.shape({
       cache: PropTypes.shape({}),
     }),
-    children: PropTypes.oneOfType([
-      PropTypes.arrayOf(PropTypes.node),
-      PropTypes.node,
-      PropTypes.object, // covers Fragments
-    ]).isRequired,
   };
 
   static defaultProps = {
@@ -74,19 +35,12 @@ class ClientProvider extends PureComponent {
     } catch (e) {
       throw e;
     } finally {
-      client.mutate({ mutation: MARK_CACHE_LOADED });
+      if (SplashScreen && SplashScreen.hide) SplashScreen.hide();
     }
   }
 
   render() {
-    const { children, ...otherProps } = this.props;
-    return (
-      <ApolloProvider {...otherProps} client={client}>
-        <ApolloHookProvider {...otherProps} client={client}>
-          {children}
-        </ApolloHookProvider>
-      </ApolloProvider>
-    );
+    return <ApolloProvider {...this.props} client={client} />;
   }
 }
 
diff --git a/apolloschurchapp/src/content-feed/content-feed.tests.js b/apolloschurchapp/src/content-feed/content-feed.tests.js
index 345ff12..544d818 100644
--- a/apolloschurchapp/src/content-feed/content-feed.tests.js
+++ b/apolloschurchapp/src/content-feed/content-feed.tests.js
@@ -1,32 +1,24 @@
 import React from 'react';
+import renderer from 'react-test-renderer';
 
-import Providers from '../Providers';
+import Providers from 'apolloschurchapp/src/Providers';
 
-import { renderWithApolloData } from '../utils/testUtils';
-import GET_CONTENT_FEED from './getContentFeed';
+import getContentFeed from './getContentFeed';
 
 import ContentFeed from './index';
 
 describe('content feed query component', () => {
-  it('renders a feedview after successful query', async () => {
+  it('renders a feedview after successful query', () => {
     const mock = {
       request: {
-        query: GET_CONTENT_FEED,
-        variables: { itemId: 'ContentChannel:123' },
+        query: getContentFeed,
       },
       result: {
         data: {
           node: {
-            __typename: 'ContentChannel',
             childContentItemsConnection: {
-              pageInfo: {
-                endCursor: 'blablalba',
-                __typename: 'PaginationInfo',
-              },
-              __typename: 'ContentItemsConnection',
               edges: [
                 {
-                  __typename: 'ContentItemsConnectionEdge',
                   node: {
                     __typename: 'UniversalContentItem',
                     id: 'UniversalContentItem:d57994350b9d213866b24dea3a97433d',
@@ -35,20 +27,11 @@ describe('content feed query component', () => {
                       id: 'ContentChannel:4f68015ba18662a7409d1219a4ce013e',
                       name: 'Editorial',
                       iconName: 'text',
-                      __typename: 'ContentChannel',
                     },
                     title: 'Mea Animal Aperiam Ornatus Eu',
-                    hyphenatedTitle: 'Mea Animal Aperiam Ornatus Eu',
-                    summary: 'Bla bla bla',
-                    theme: null,
-                    isLiked: false,
-                    likedCount: 0,
-                    videos: [],
-                    audios: [],
                   },
                 },
                 {
-                  __typename: 'ContentItemsConnectionEdge',
                   node: {
                     __typename: 'UniversalContentItem',
                     id: 'UniversalContentItem:b36e55d803443431e96bb4b5068147ec',
@@ -57,17 +40,8 @@ describe('content feed query component', () => {
                       id: 'ContentChannel:4f68015ba18662a7409d1219a4ce013e',
                       name: 'Editorial',
                       iconName: 'text',
-                      __typename: 'ContentChannel',
                     },
                     title: 'Probo Senserit Id Mea, Ut Sed Malis Postea,',
-                    hyphenatedTitle:
-                      'Probo Senserit Id Mea, Ut Sed Malis Postea,',
-                    summary: 'Bla bla bla',
-                    theme: null,
-                    isLiked: false,
-                    likedCount: 0,
-                    videos: [],
-                    audios: [],
                   },
                 },
               ],
@@ -78,10 +52,10 @@ describe('content feed query component', () => {
     };
 
     const navigation = {
-      getParam: () => 'ContentChannel:123',
+      getParam: jest.fn(),
       navigate: jest.fn(),
     };
-    const tree = await renderWithApolloData(
+    const tree = renderer.create(
       <Providers mocks={[mock]}>
         <ContentFeed navigation={navigation} />
       </Providers>
diff --git a/apolloschurchapp/src/content-feed/getContentFeed.js b/apolloschurchapp/src/content-feed/getContentFeed.js
index 38ed31f..d6082c2 100644
--- a/apolloschurchapp/src/content-feed/getContentFeed.js
+++ b/apolloschurchapp/src/content-feed/getContentFeed.js
@@ -1,22 +1,36 @@
 import gql from 'graphql-tag';
-import ApollosConfig from '@apollosproject/config';
 
 export default gql`
-  query getContentFeed($itemId: ID!, $after: String, $first: Int) {
+  query getContentFeed($itemId: ID!) {
     node(id: $itemId) {
       ... on ContentChannel {
-        childContentItemsConnection(after: $after, first: $first) {
-          pageInfo {
-            endCursor
-          }
+        childContentItemsConnection {
           edges {
             node {
-              ...contentCardFragment
+              __typename
+              id
+              coverImage {
+                name
+                sources {
+                  uri
+                }
+              }
+              isLiked
+              parentChannel {
+                id
+                name
+                iconName
+              }
+              sharing {
+                title
+                message
+                url
+              }
+              title
             }
           }
         }
       }
     }
   }
-  ${ApollosConfig.FRAGMENTS.CONTENT_CARD_FRAGMENT}
 `;
diff --git a/apolloschurchapp/src/content-feed/index.js b/apolloschurchapp/src/content-feed/index.js
index 9e6ff30..2546f1a 100644
--- a/apolloschurchapp/src/content-feed/index.js
+++ b/apolloschurchapp/src/content-feed/index.js
@@ -3,29 +3,21 @@ import { Query } from 'react-apollo';
 import { get } from 'lodash';
 import PropTypes from 'prop-types';
 
-import {
-  ContentCardConnected,
-  fetchMoreResolver,
-} from '@apollosproject/ui-connected';
+import BackgroundView from 'apolloschurchapp/src/ui/BackgroundView';
+import FeedView from 'apolloschurchapp/src/ui/FeedView';
 
-import { BackgroundView, FeedView } from '@apollosproject/ui-kit';
+import getContentFeed from './getContentFeed';
 
-import GET_CONTENT_FEED from './getContentFeed';
 /**
  * This is where the component description lives
  * A FeedView wrapped in a query to pull content data.
  */
 class ContentFeed extends PureComponent {
   /** Function for React Navigation to set information in the header. */
-  static navigationOptions = ({ navigation, screenProps }) => {
+  static navigationOptions = ({ navigation }) => {
     const itemTitle = navigation.getParam('itemTitle', 'Content Channel');
     return {
       title: itemTitle,
-      headerStyle: {
-        backgroundColor: screenProps.headerBackgroundColor,
-        borderBottomWidth: 0,
-        elevation: 0,
-      },
     };
   };
 
@@ -54,24 +46,17 @@ class ContentFeed extends PureComponent {
     return (
       <BackgroundView>
         <Query
-          query={GET_CONTENT_FEED}
+          query={getContentFeed}
           variables={{ itemId }}
           fetchPolicy="cache-and-network"
         >
-          {({ loading, error, data, refetch, fetchMore, variables }) => (
+          {({ loading, error, data, refetch }) => (
             <FeedView
-              ListItemComponent={ContentCardConnected}
               content={get(
                 data,
                 'node.childContentItemsConnection.edges',
                 []
               ).map((edge) => edge.node)}
-              fetchMore={fetchMoreResolver({
-                collectionName: 'node.childContentItemsConnection',
-                fetchMore,
-                variables,
-                data,
-              })}
               isLoading={loading}
               error={error}
               refetch={refetch}
diff --git a/apolloschurchapp/src/content-single/ActionContainer.js b/apolloschurchapp/src/content-single/ActionContainer.js
new file mode 100644
index 0000000..c73ec22
--- /dev/null
+++ b/apolloschurchapp/src/content-single/ActionContainer.js
@@ -0,0 +1,86 @@
+import React from 'react';
+import { Query, Mutation } from 'react-apollo';
+
+import PropTypes from 'prop-types';
+
+import Share from 'apolloschurchapp/src/ui/Share';
+import Like from 'apolloschurchapp/src/ui/Like';
+import getSessionId from 'apolloschurchapp/src/store/getSessionId';
+import SideBySideView from 'apolloschurchapp/src/ui/SideBySideView';
+
+import updateLikeEntity from './updateLikeEntity';
+import getLikedContentItem from './getLikedContentItem';
+
+const ActionContainer = ({ content, itemId }) => (
+  <SideBySideView>
+    <Query query={getSessionId} fetchPolicy="cache-only">
+      {({ data: { sessionId } }) =>
+        sessionId ? (
+          <Query query={getLikedContentItem} variables={{ itemId }}>
+            {({
+              data: {
+                node: { isLiked, ...node },
+              },
+              refetch,
+            }) => (
+              <Mutation
+                mutation={updateLikeEntity}
+                optimisticResponse={{
+                  updateLikeEntity: {
+                    operation: isLiked ? 'Unlike' : 'Like',
+                    id: null, // unknown at this time
+                    interactionDateTime: new Date().toJSON(),
+                    __typename: 'Interaction',
+                  },
+                }}
+                update={(
+                  cache,
+                  {
+                    data: {
+                      updateLikeEntity: { operation },
+                    },
+                  }
+                ) => {
+                  cache.writeQuery({
+                    query: getLikedContentItem,
+                    data: {
+                      node: {
+                        ...node,
+                        isLiked: operation === 'Like',
+                      },
+                    },
+                  });
+                }}
+              >
+                {(createNewInteraction) => (
+                  <Like
+                    itemId={itemId}
+                    sessionId={sessionId}
+                    isLiked={isLiked}
+                    operation={isLiked ? 'Unlike' : 'Like'}
+                    toggleLike={async (variables) => {
+                      try {
+                        await createNewInteraction({ variables });
+                        await refetch();
+                      } catch (e) {
+                        console.log(e);
+                      }
+                    }}
+                  />
+                )}
+              </Mutation>
+            )}
+          </Query>
+        ) : null
+      }
+    </Query>
+    <Share content={content} />
+  </SideBySideView>
+);
+
+ActionContainer.propTypes = {
+  content: PropTypes.shape({}),
+  itemId: PropTypes.string,
+};
+
+export default ActionContainer;
diff --git a/apolloschurchapp/src/content-single/ActionContainer.tests.js b/apolloschurchapp/src/content-single/ActionContainer.tests.js
new file mode 100644
index 0000000..bbb6af0
--- /dev/null
+++ b/apolloschurchapp/src/content-single/ActionContainer.tests.js
@@ -0,0 +1,23 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import ActionContainer from './ActionContainer';
+
+describe('action container', () => {
+  it('renders the like and share buttons on successful load', () => {
+    const shareObject = {
+      message: '',
+      title: 'The surprising journey that changed me and my dad',
+      url: 'https://apollosrock.newspring.cc/',
+    };
+
+    const tree = renderer.create(
+      <Providers>
+        <ActionContainer content={shareObject} itemId={'fakeid'} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/content-single/ActionContainer/ActionContainer.tests.js b/apolloschurchapp/src/content-single/ActionContainer/ActionContainer.tests.js
deleted file mode 100644
index 2222b55..0000000
--- a/apolloschurchapp/src/content-single/ActionContainer/ActionContainer.tests.js
+++ /dev/null
@@ -1,22 +0,0 @@
-// import React from 'react';
-// import renderer from 'react-test-renderer';
-
-// import Providers from '../Providers';
-
-// import ActionContainer from './ActionContainer';
-
-describe('action container', () => {
-  it('renders the like and share buttons on successful load', () => {
-    //     const shareObject = {
-    //       message: '',
-    //       title: 'The surprising journey that changed me and my dad',
-    //       url: 'https://apollosrock.newspring.cc/',
-    //     };
-    //     const tree = renderer.create(
-    //       <Providers>
-    //         <ActionContainer content={shareObject} itemId={'fakeid'} />
-    //       </Providers>
-    //     );
-    //     expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/content-single/ActionContainer/index.js b/apolloschurchapp/src/content-single/ActionContainer/index.js
deleted file mode 100644
index 9bd8c97..0000000
--- a/apolloschurchapp/src/content-single/ActionContainer/index.js
+++ /dev/null
@@ -1,38 +0,0 @@
-import React from 'react';
-import { Platform, View } from 'react-native';
-import PropTypes from 'prop-types';
-import { SideBySideView, styled } from '@apollosproject/ui-kit';
-import { MediaPlayerSpacer } from '@apollosproject/ui-media-player';
-import {
-  LikeButtonConnected,
-  ShareButtonConnected,
-} from '@apollosproject/ui-connected';
-
-const PositioningView = styled(({ theme }) => ({
-  justifyContent: 'space-around',
-  paddingVertical: theme.sizing.baseUnit / 2,
-  paddingHorizontal: theme.sizing.baseUnit,
-}))(SideBySideView);
-
-const Container = styled(({ theme }) => ({
-  backgroundColor: theme.colors.background.paper,
-  ...Platform.select(theme.shadows.default),
-}))(View);
-
-const ActionContainer = ({ itemId }) => (
-  <Container>
-    <MediaPlayerSpacer>
-      <PositioningView>
-        <LikeButtonConnected itemId={itemId} />
-        <ShareButtonConnected itemId={itemId} />
-      </PositioningView>
-    </MediaPlayerSpacer>
-  </Container>
-);
-
-ActionContainer.propTypes = {
-  content: PropTypes.shape({}),
-  itemId: PropTypes.string,
-};
-
-export default ActionContainer;
diff --git a/apolloschurchapp/src/content-single/ContentSingle.js b/apolloschurchapp/src/content-single/ContentSingle.js
deleted file mode 100644
index 92f9a6c..0000000
--- a/apolloschurchapp/src/content-single/ContentSingle.js
+++ /dev/null
@@ -1,121 +0,0 @@
-import React, { PureComponent } from 'react';
-import { Query } from 'react-apollo';
-import { get } from 'lodash';
-import PropTypes from 'prop-types';
-
-import { ErrorCard, ThemeMixin } from '@apollosproject/ui-kit';
-
-import { TrackEventWhenLoaded } from '@apollosproject/ui-analytics';
-import { InteractWhenLoadedConnected } from '@apollosproject/ui-connected';
-
-import NavigationHeader from '../ui/NavigationHeader';
-import ActionContainer from './ActionContainer';
-import GET_CONTENT_ITEM from './getContentItem';
-
-import DevotionalContentItem from './DevotionalContentItem';
-import UniversalContentItem from './UniversalContentItem';
-import WeekendContentItem from './WeekendContentItem';
-
-class ContentSingle extends PureComponent {
-  static propTypes = {
-    navigation: PropTypes.shape({
-      getParam: PropTypes.func,
-      push: PropTypes.func,
-    }),
-  };
-
-  get itemId() {
-    return this.props.navigation.getParam('itemId', []);
-  }
-
-  get queryVariables() {
-    return { itemId: this.itemId };
-  }
-
-  static navigationOptions = {
-    header: NavigationHeader,
-    headerTransparent: true,
-    headerMode: 'float',
-  };
-
-  renderContent = ({ content, loading, error }) => {
-    let { __typename } = content;
-    if (!__typename && this.itemId) {
-      [__typename] = this.itemId.split(':');
-    }
-
-    switch (__typename) {
-      case 'DevotionalContentItem':
-        return (
-          <DevotionalContentItem
-            id={this.itemId}
-            content={content}
-            loading={loading}
-            error={error}
-          />
-        );
-      case 'WeekendContentItem':
-        return (
-          <WeekendContentItem
-            id={this.itemId}
-            content={content}
-            loading={loading}
-            error={error}
-          />
-        );
-      case 'UniversalContentItem':
-      default:
-        return (
-          <UniversalContentItem
-            id={this.itemId}
-            content={content}
-            loading={loading}
-            error={error}
-          />
-        );
-    }
-  };
-
-  renderWithData = ({ loading, error, data }) => {
-    if (error) return <ErrorCard error={error} />;
-
-    const content = data.node || {};
-
-    const { theme = {}, id } = content;
-
-    return (
-      <ThemeMixin
-        mixin={{
-          type: get(theme, 'type'),
-          colors: get(theme, 'colors'),
-        }}
-      >
-        <InteractWhenLoadedConnected
-          isLoading={loading}
-          nodeId={this.itemId}
-          action={'COMPLETE'}
-        />
-        <TrackEventWhenLoaded
-          isLoading={loading}
-          eventName={'View Content'}
-          properties={{
-            title: content.title,
-            itemId: this.itemId,
-          }}
-        />
-        {this.renderContent({ content, loading, error })}
-        <ActionContainer itemId={id} />
-      </ThemeMixin>
-    );
-  };
-
-  render() {
-    return (
-      <Query query={GET_CONTENT_ITEM} variables={this.queryVariables}>
-        {this.renderWithData}
-      </Query>
-    );
-  }
-}
-
-export default ContentSingle;
diff --git a/apolloschurchapp/src/content-single/DevotionalContentItem/ContentTab.js b/apolloschurchapp/src/content-single/DevotionalContentItem/ContentTab.js
deleted file mode 100644
index e1f6ae5..0000000
--- a/apolloschurchapp/src/content-single/DevotionalContentItem/ContentTab.js
+++ /dev/null
@@ -1,67 +0,0 @@
-import React from 'react';
-import { ScrollView } from 'react-native';
-import PropTypes from 'prop-types';
-import {
-  ContentHTMLViewConnected,
-  HorizontalContentSeriesFeedConnected,
-} from '@apollosproject/ui-connected';
-import { PaddedView, H2, styled, withIsLoading } from '@apollosproject/ui-kit';
-import { ScriptureList } from '@apollosproject/ui-scripture';
-
-const ContentContainer = withIsLoading(
-  styled({ paddingVertical: 0 })(PaddedView)
-);
-
-/**
- * This is the Content side of the Devotional tabbed component.
- * Displays a header, scripture list (using the ScriptureList component),
- * and the body text of the devo.
- */
-const ContentTab = ({
-  id,
-  title,
-  references,
-  isLoading,
-  navigationState,
-  navigation,
-}) => (
-  <ScrollView>
-    <ContentContainer isLoading={isLoading}>
-      <H2 padded>{title}</H2>
-      {references && references.length ? (
-        <ScriptureList
-          references={references}
-          onPress={navigationState.route.jumpTo} // eslint-disable-line react/jsx-handler-names
-          tabDestination={'scripture'}
-        />
-      ) : null}
-      <ContentHTMLViewConnected contentId={id} />
-    </ContentContainer>
-    <HorizontalContentSeriesFeedConnected
-      contentId={id}
-      navigation={navigation}
-    />
-  </ScrollView>
-);
-
-ContentTab.propTypes = {
-  /** The id of the devotional item */
-  id: PropTypes.string,
-  /** Toggles placeholders */
-  isLoading: PropTypes.bool,
-  /**
-   * The state of the TabView component (of which the ContentTab is one child component). Mostly used
-   * for the ScriptureList component to be able to jump to the ScriptureTab when the scripture
-   * reference link is tapped.
-   */
-  navigationState: PropTypes.shape({
-    route: PropTypes.shape({ jumpTo: PropTypes.func }),
-  }),
-  /** An array of human readable references (i.e. '1 Corinthians 15:57') */
-  references: PropTypes.arrayOf(PropTypes.string),
-  /** The devotional title */
-  title: PropTypes.string,
-  navigation: PropTypes.shape({ navigate: PropTypes.func }).isRequired,
-};
-
-export default ContentTab;
diff --git a/apolloschurchapp/src/content-single/DevotionalContentItem/Devotional.stories.js b/apolloschurchapp/src/content-single/DevotionalContentItem/Devotional.stories.js
deleted file mode 100644
index 8bf3ffd..0000000
--- a/apolloschurchapp/src/content-single/DevotionalContentItem/Devotional.stories.js
+++ /dev/null
@@ -1,62 +0,0 @@
-// TODO: fix story
-
-// import React from 'react';
-// import { storiesOf } from '@apollosproject/ui-storybook';
-
-// import Devotional from '.';
-
-// const scripture = [
-//   {
-//     id: '1CO.15.57',
-//     reference: '1 Corinthians 15:57',
-//     html:
-//       '<p class="p"><span data-number="57" class="v">57</span>But thanks be to God, who gives us the victory through our Lord Jesus Christ. </p>',
-//   },
-//   {
-//     id: 'EXO.17.8-EXO.17.15',
-//     reference: 'Exodus 17:8-15',
-//     html:
-//       '<p class="p"><span data-number="8" class="v">8</span>Then Amalek came and fought with Israel in Rephidim. <span data-number="9" class="v">9</span>Moses said to Joshua, “Choose men for us, and go out to fight with Amalek. Tomorrow I will stand on the top of the hill with God’s rod in my hand.” <span data-number="10" class="v">10</span>So Joshua did as Moses had told him, and fought with Amalek; and Moses, Aaron, and Hur went up to the top of the hill. <span data-number="11" class="v">11</span>When Moses held up his hand, Israel prevailed. When he let down his hand, Amalek prevailed. <span data-number="12" class="v">12</span>But Moses’ hands were heavy; so they took a stone, and put it under him, and he sat on it. Aaron and Hur held up his hands, the one on the one side, and the other on the other side. His hands were steady until sunset. <span data-number="13" class="v">13</span>Joshua defeated Amalek and his people with the edge of the sword. <span data-number="14" class="v">14</span>Yahweh said to Moses, “Write this for a memorial in a book, and rehearse it in the ears of Joshua: that I will utterly blot out the memory of Amalek from under the sky.” <span data-number="15" class="v">15</span>Moses built an altar, and called its name “Yahweh our Banner”.</p>',
-//   },
-// ];
-
-// const content = {
-//   body:
-//     '<p>Sometimes God&rsquo;s promises to us involve a fight. We have to fight to keep our focus on Him, fight to move towards the promise we know God has laid on our hearts. We have a real enemy that would love nothing more than to get us sidetracked and doubt God&rsquo;s promises. So we fight saying that we are going to believe God will do what He says He will do, and we keep fighting until we see that promise come to life.</p><p>In Exodus 17:8-15 the nation of Israel, freed from great oppression in Egypt was traveling to the land God promised them. Yet, Israel was fighting, again.&nbsp;<br />&nbsp;<br />As the Israelites were fighting in the valley,&nbsp;Moses was on the hill top lifting his hands in prayer for these great fighters. Israel fought hard, and with the prayers of Moses and the help of his companions, Aaron and Hur, the Amalekites were defeated. Moses knew that it was solely because of the Lord&rsquo;s hand of protection and blessing on the Israelites that they won the battle. &ldquo;Moses built an altar and called it The Lord is my banner&rdquo; (Exodus 17:15).</p><p>In battle opposing nations would fly their own flag on a pole at each of their respective front lines. This was to give their soldiers a feeling of hope and a focal point. This is what God is to us: a banner of encouragement to give us hope and a focal point.</p><blockquote><p>The Lord protects us, covers us with love, and&nbsp;blesses us continually.</p></blockquote><p>The Lord is our banner. He protects us; He covers us with love; He blesses us continually. The Lord gives us hope and a place to focus during the tough fights when the enemy is trying to make us doubt God&rsquo;s promises.&nbsp;</p><p>When was the last time you sat and thanked Jesus for all the ways he is a banner in your life?&nbsp;</p><p>Reflect:</p><ul><li>What is one way the Lord has been your banner?</li><li>How can you focus more today on the Lord and all the things He does for you throughout the day?</li></ul>',
-//   route: { jumpTo: () => {} },
-//   title: 'God is Our Banner',
-// };
-
-// const renderItem = () => {};
-
-// const loadingStateObject = {
-//   node: {
-//     id: 'fakeId0',
-//     title: '',
-//     isLoading: true,
-//   },
-// };
-
-// const stories = storiesOf('Devotional', module);
-
-// stories.add('Example', () => (
-//   <Devotional
-//     body={content.body}
-//     title={content.title}
-//     isLoading={false}
-//     scripture={scripture}
-//     renderItem={renderItem}
-//     loadingStateObject={loadingStateObject}
-//   />
-// ));
-
-// stories.add('isLoading', () => (
-//   <Devotional
-//     body={content.body}
-//     title={content.title}
-//     isLoading
-//     scripture={scripture}
-//     renderItem={renderItem}
-//     loadingStateObject={loadingStateObject}
-//   />
-// ));
diff --git a/apolloschurchapp/src/content-single/DevotionalContentItem/Devotional.tests.js b/apolloschurchapp/src/content-single/DevotionalContentItem/Devotional.tests.js
deleted file mode 100644
index 4b7de0a..0000000
--- a/apolloschurchapp/src/content-single/DevotionalContentItem/Devotional.tests.js
+++ /dev/null
@@ -1,79 +0,0 @@
-import React from 'react';
-import { createStackNavigator, createAppContainer } from 'react-navigation';
-import { GET_CONTENT_ITEM_CONTENT } from '@apollosproject/ui-connected';
-
-import Providers from '../../Providers';
-import { renderWithApolloData } from '../../utils/testUtils';
-import GET_SCRIPTURE from './getScripture';
-import Devotional from '.';
-
-const contentScriptureMock = {
-  request: {
-    query: GET_SCRIPTURE,
-    variables: { itemId: '1' },
-  },
-  result: {
-    data: {
-      node: {
-        __typename: 'DevotionalContentItem',
-        id: '1',
-        scriptures: [
-          {
-            __typename: 'Scripture',
-            id: '1CO.15.57',
-            reference: '1 Corinthians 15:57',
-            html:
-              '<p class="p"><span data-number="57" class="v">57</span>But thanks be to God, who gives us the victory through our Lord Jesus Christ. </p>',
-            copyright: 'PUBLIC DOMAIN',
-            version: 'WEB',
-          },
-          {
-            __typename: 'Scripture',
-            id: 'EXO.17.8-EXO.17.15',
-            reference: 'Exodus 17:8-15',
-            html:
-              '<p class="p"><span data-number="8" class="v">8</span>Then Amalek came and fought with Israel in Rephidim. <span data-number="9" class="v">9</span>Moses said to Joshua, “Choose men for us, and go out to fight with Amalek. Tomorrow I will stand on the top of the hill with God’s rod in my hand.” <span data-number="10" class="v">10</span>So Joshua did as Moses had told him, and fought with Amalek; and Moses, Aaron, and Hur went up to the top of the hill. <span data-number="11" class="v">11</span>When Moses held up his hand, Israel prevailed. When he let down his hand, Amalek prevailed. <span data-number="12" class="v">12</span>But Moses’ hands were heavy; so they took a stone, and put it under him, and he sat on it. Aaron and Hur held up his hands, the one on the one side, and the other on the other side. His hands were steady until sunset. <span data-number="13" class="v">13</span>Joshua defeated Amalek and his people with the edge of the sword. <span data-number="14" class="v">14</span>Yahweh said to Moses, “Write this for a memorial in a book, and rehearse it in the ears of Joshua: that I will utterly blot out the memory of Amalek from under the sky.” <span data-number="15" class="v">15</span>Moses built an altar, and called its name “Yahweh our Banner”.</p>',
-            copyright: 'PUBLIC DOMAIN',
-            version: 'WEB',
-          },
-        ],
-      },
-    },
-  },
-};
-
-const contentHTMLMock = {
-  request: {
-    query: GET_CONTENT_ITEM_CONTENT,
-    variables: { contentId: '1' },
-  },
-  result: {
-    data: {
-      node: {
-        __typename: 'DevotionalContentItem',
-        id: '1',
-        htmlContent: '<b>Some content!</b>',
-      },
-    },
-  },
-};
-
-const mocks = [contentScriptureMock, contentHTMLMock];
-
-describe('the Devotional component', () => {
-  it('renders a devotional', async () => {
-    const DevotionalStack = createStackNavigator({
-      // eslint-disable-next-line
-      Devotional: (props) => (
-        <Devotional id={'1'} content={{ title: 'Title' }} {...props} />
-      ),
-    });
-    const DevotionalWithNavigation = createAppContainer(DevotionalStack);
-    const tree = await renderWithApolloData(
-      <Providers mocks={mocks}>
-        <DevotionalWithNavigation />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/content-single/DevotionalContentItem/ScriptureTab.js b/apolloschurchapp/src/content-single/DevotionalContentItem/ScriptureTab.js
deleted file mode 100644
index 98fb169..0000000
--- a/apolloschurchapp/src/content-single/DevotionalContentItem/ScriptureTab.js
+++ /dev/null
@@ -1,59 +0,0 @@
-import React from 'react';
-import { ScrollView } from 'react-native';
-import PropTypes from 'prop-types';
-import { PaddedView } from '@apollosproject/ui-kit';
-import ScriptureItem from '@apollosproject/ui-scripture';
-import { HorizontalContentSeriesFeedConnected } from '@apollosproject/ui-connected';
-
-/**
- * This is the Scripture side of the Devotional tabbed component.
- * Maps over an array of scripture references and renders them
- * using the ScriptureItem component.
- */
-const ScriptureTab = ({ id, scripture, isLoading, navigation }) => (
-  <ScrollView>
-    <PaddedView>
-      {scripture.map((ref, i) => (
-        <ScriptureItem
-          key={ref.id}
-          reference={ref.reference}
-          html={ref.html}
-          isLoading={isLoading}
-          copyright={
-            // only show last copyright
-            scripture.length - 1 === i ? ref.copyright : null
-          }
-          version={ref.version}
-        />
-      ))}
-    </PaddedView>
-    <HorizontalContentSeriesFeedConnected
-      contentId={id}
-      navigation={navigation}
-    />
-  </ScrollView>
-);
-
-ScriptureTab.propTypes = {
-  /** The id of the devotional content item */
-  id: PropTypes.string,
-  /** Toggles placeholders */
-  isLoading: PropTypes.bool,
-  /** An array of scripture objects */
-  scripture: PropTypes.arrayOf(
-    PropTypes.shape({
-      /** The ID of the verse (i.e. '1CO.15.57') */
-      id: PropTypes.string,
-      /** A human readable reference (i.e. '1 Corinthians 15:57') */
-      reference: PropTypes.string,
-      /** The scripture source to render */
-      html: PropTypes.string,
-      /** The copyright of the Bible version */
-      copyright: PropTypes.string,
-      /** The Bible version abbreviation */
-      version: PropTypes.string,
-    })
-  ),
-};
-
-export default ScriptureTab;
diff --git a/apolloschurchapp/src/content-single/DevotionalContentItem/getScripture.js b/apolloschurchapp/src/content-single/DevotionalContentItem/getScripture.js
deleted file mode 100644
index f641711..0000000
--- a/apolloschurchapp/src/content-single/DevotionalContentItem/getScripture.js
+++ /dev/null
@@ -1,17 +0,0 @@
-import gql from 'graphql-tag';
-import ApollosConfig from '@apollosproject/config';
-
-export default gql`
-  query getScripture($itemId: ID!) {
-    node(id: $itemId) {
-      __typename
-      id
-      ... on DevotionalContentItem {
-        scriptures {
-          ...ScriptureFragment
-        }
-      }
-    }
-  }
-  ${ApollosConfig.FRAGMENTS.SCRIPTURE_FRAGMENT}
-`;
diff --git a/apolloschurchapp/src/content-single/DevotionalContentItem/index.js b/apolloschurchapp/src/content-single/DevotionalContentItem/index.js
deleted file mode 100644
index 9d39893..0000000
--- a/apolloschurchapp/src/content-single/DevotionalContentItem/index.js
+++ /dev/null
@@ -1,131 +0,0 @@
-import React, { PureComponent } from 'react';
-import PropTypes from 'prop-types';
-import { SafeAreaView } from 'react-navigation';
-import { Query } from 'react-apollo';
-import { get } from 'lodash';
-
-import {
-  ErrorCard,
-  TabView,
-  TabSceneMap as SceneMap,
-  BackgroundView,
-  styled,
-} from '@apollosproject/ui-kit';
-import ContentTab from './ContentTab';
-import ScriptureTab from './ScriptureTab';
-
-import GET_SCRIPTURE from './getScripture';
-
-const FlexedSafeAreaView = styled({ flex: 1 })(SafeAreaView);
-
-/**
- * The devotional component.
- * Displays a TabView with two tabs: ContentTab and ScriptureTab.
- */
-class DevotionalContentItem extends PureComponent {
-  static propTypes = {
-    /** The id of the devotional item */
-    id: PropTypes.string.isRequired,
-    content: PropTypes.shape({
-      /** The devotional title */
-      title: PropTypes.string,
-    }),
-    /** Toggles placeholders */
-    loading: PropTypes.bool,
-    navigation: PropTypes.shape({}),
-  };
-
-  /**
-   * Function to get the scripture references from the larger scripture object.
-   * Props: full scripture array of objects
-   * Returns: an array of scripture references.
-   */
-  getScriptureReferences = (scripture) => {
-    let arrayOfRefrences = null;
-
-    if (scripture) {
-      arrayOfRefrences = scripture.map(
-        (ref) =>
-          // only add refs to the array if they exist
-          ref.reference || ''
-      );
-    }
-
-    return arrayOfRefrences;
-  };
-
-  /**
-   * The route that TabView uses to render the ContentTab.
-   * Note: navigationState gets passed down automatically from the TabView.
-   */
-  contentRoute = ({ scriptures, loading }) => (navigationState) => (
-    <ContentTab
-      id={this.props.id}
-      references={this.getScriptureReferences(scriptures)}
-      title={this.props.content.title}
-      navigationState={navigationState}
-      navigation={this.props.navigation}
-      isLoading={this.props.loading || loading}
-    />
-  );
-
-  /**
-   * The route that TabView uses to render the ScriptureTab
-   */
-  scriptureRoute = ({ scriptures, loading }) => () => (
-    <ScriptureTab
-      id={this.props.id}
-      scripture={scriptures}
-      navigation={this.props.navigation}
-      isLoading={this.props.loading || loading}
-    />
-  );
-
-  renderLoading = () => (
-    <ContentTab title={''} isLoading navigation={this.props.navigation} />
-  );
-
-  renderTabs = ({ data, error, loading }) => {
-    if (error) return <ErrorCard error={error} />;
-
-    const scriptures = get(data, 'node.scriptures', []);
-
-    // only include scriptures where the references are not null
-    const validScriptures = scriptures
-      ? scriptures.filter((scripture) => scripture.reference != null)
-      : [];
-
-    const hasScripture = loading || validScriptures.length;
-    const tabRoutes = [{ title: 'Devotional', key: 'content' }];
-    const map = {
-      content: this.contentRoute({ scriptures, loading }),
-    };
-    if (hasScripture) {
-      tabRoutes.push({ title: 'Scripture', key: 'scripture' });
-      map.scripture = this.scriptureRoute({ scriptures, loading });
-    }
-    return tabRoutes.length < 2 ? (
-      map[tabRoutes[0].key]()
-    ) : (
-      <TabView routes={tabRoutes} renderScene={SceneMap(map)} />
-    );
-  };
-
-  render() {
-    return (
-      <BackgroundView>
-        <FlexedSafeAreaView forceInset={{ top: 'always' }}>
-          <Query query={GET_SCRIPTURE} variables={{ itemId: this.props.id }}>
-            {({ data, loading, error }) =>
-              loading
-                ? this.renderLoading()
-                : this.renderTabs({ data, loading, error })
-            }
-          </Query>
-        </FlexedSafeAreaView>
-      </BackgroundView>
-    );
-  }
-}
-
-export default DevotionalContentItem;
diff --git a/apolloschurchapp/src/content-single/UniversalContentItem/index.js b/apolloschurchapp/src/content-single/UniversalContentItem/index.js
deleted file mode 100644
index c2e2029..0000000
--- a/apolloschurchapp/src/content-single/UniversalContentItem/index.js
+++ /dev/null
@@ -1,83 +0,0 @@
-import React from 'react';
-import { Animated } from 'react-native';
-import { get } from 'lodash';
-import PropTypes from 'prop-types';
-import {
-  ContentHTMLViewConnected,
-  HorizontalContentSeriesFeedConnected,
-  MediaControlsConnected,
-  ContentSingleFeaturesConnected,
-  UpNextButtonConnected,
-} from '@apollosproject/ui-connected';
-import {
-  styled,
-  GradientOverlayImage,
-  BackgroundView,
-  PaddedView,
-  H2,
-  StretchyView,
-} from '@apollosproject/ui-kit';
-
-const FlexedScrollView = styled({ flex: 1 })(Animated.ScrollView);
-
-const StyledMediaControlsConnected = styled(({ theme }) => ({
-  marginTop: -(theme.sizing.baseUnit * 2.5),
-}))(MediaControlsConnected);
-
-const UniversalContentItem = ({ content, loading }) => {
-  const coverImageSources = get(content, 'coverImage.sources', []);
-  return (
-    <BackgroundView>
-      <StretchyView>
-        {({ Stretchy, ...scrollViewProps }) => (
-          <FlexedScrollView {...scrollViewProps}>
-            {coverImageSources.length || loading ? (
-              <Stretchy>
-                <GradientOverlayImage
-                  isLoading={!coverImageSources.length && loading}
-                  source={coverImageSources}
-                />
-              </Stretchy>
-            ) : null}
-            <StyledMediaControlsConnected contentId={content.id} />
-            {/* fixes text/navigation spacing by adding vertical padding if we dont have an image */}
-            <PaddedView vertical={!coverImageSources.length}>
-              <H2 padded isLoading={!content.title && loading}>
-                {content.title}
-              </H2>
-              <ContentHTMLViewConnected contentId={content.id} />
-            </PaddedView>
-            <ContentSingleFeaturesConnected contentId={content.id} />
-            <UpNextButtonConnected contentId={content.id} />
-            <HorizontalContentSeriesFeedConnected contentId={content.id} />
-          </FlexedScrollView>
-        )}
-      </StretchyView>
-    </BackgroundView>
-  );
-};
-
-UniversalContentItem.propTypes = {
-  content: PropTypes.shape({
-    __typename: PropTypes.string,
-    parentChannel: PropTypes.shape({
-      name: PropTypes.string,
-    }),
-    id: PropTypes.string,
-    htmlContent: PropTypes.string,
-    title: PropTypes.string,
-    scriptures: PropTypes.arrayOf(
-      PropTypes.shape({
-        /** The ID of the verse (i.e. '1CO.15.57') */
-        id: PropTypes.string,
-        /** A human readable reference (i.e. '1 Corinthians 15:57') */
-        reference: PropTypes.string,
-        /** The scripture source to render */
-        html: PropTypes.string,
-      })
-    ),
-  }),
-  loading: PropTypes.bool,
-};
-
-export default UniversalContentItem;
diff --git a/apolloschurchapp/src/content-single/WeekendContentItem/index.js b/apolloschurchapp/src/content-single/WeekendContentItem/index.js
deleted file mode 100644
index f917834..0000000
--- a/apolloschurchapp/src/content-single/WeekendContentItem/index.js
+++ /dev/null
@@ -1,125 +0,0 @@
-import React from 'react';
-import { Animated, Dimensions } from 'react-native';
-import { get } from 'lodash';
-import PropTypes from 'prop-types';
-import {
-  ContentHTMLViewConnected,
-  HorizontalContentSeriesFeedConnected,
-  LiveConsumer,
-  MediaControlsConnected,
-  FeaturesFeedConnected,
-} from '@apollosproject/ui-connected';
-import {
-  styled,
-  GradientOverlayImage,
-  BackgroundView,
-  PaddedView,
-  H2,
-  StretchyView,
-  ThemeMixin,
-  ThemeConsumer,
-  CardLabel,
-  withTheme,
-} from '@apollosproject/ui-kit';
-
-const FlexedScrollView = styled({ flex: 1 })(Animated.ScrollView);
-
-const Header = styled(({ hasMedia, theme }) => ({
-  paddingTop: Dimensions.get('window').width * 0.5, // for some reason % based padding still is buggy
-  alignItems: 'flex-start',
-  paddingBottom: hasMedia ? theme.sizing.baseUnit : theme.sizing.baseUnit * 2,
-  // backgroundColor: theme.colors.primary,
-}))(PaddedView);
-
-const StyledMediaControlsConnected = styled(({ theme }) => ({
-  marginTop: -(theme.sizing.baseUnit * 2.5),
-}))(MediaControlsConnected);
-
-const LiveAwareLabel = withTheme(({ isLive, title, theme }) => ({
-  ...(isLive
-    ? {
-        title: 'Live',
-        type: 'secondary',
-        icon: 'live-dot',
-        iconSize: theme.helpers.rem(0.4375), // using our typographic size unit based on fontSize so that the icon scales correctly with font size changes.
-      }
-    : {
-        title,
-      }),
-}))(CardLabel);
-
-const WeekendContentItem = ({ content, loading }) => {
-  const coverImageSources = get(content, 'coverImage.sources', []);
-  return (
-    <ThemeConsumer>
-      {(theme) => (
-        <BackgroundView>
-          <StretchyView>
-            {({ Stretchy, ...scrollViewProps }) => (
-              <FlexedScrollView {...scrollViewProps}>
-                <Header hasMedia={content.videos && content.videos.sources}>
-                  <ThemeMixin mixin={{ type: 'dark' }}>
-                    {coverImageSources.length || loading ? (
-                      <Stretchy
-                        background
-                        style={{ backgroundColor: theme.colors.primary }}
-                      >
-                        <GradientOverlayImage
-                          isLoading={!coverImageSources.length && loading}
-                          overlayColor={theme.colors.primary}
-                          overlayType="featured"
-                          source={coverImageSources}
-                        />
-                      </Stretchy>
-                    ) : null}
-                    <LiveConsumer contentId={content.id}>
-                      {(liveStream) => (
-                        <LiveAwareLabel
-                          isLive={!!liveStream}
-                          title={
-                            content.parentChannel && content.parentChannel.name
-                          }
-                        />
-                      )}
-                    </LiveConsumer>
-                    <H2 padded isLoading={!content.title && loading}>
-                      {content.title}
-                    </H2>
-                    <ContentHTMLViewConnected contentId={content.id} />
-                  </ThemeMixin>
-                </Header>
-                <StyledMediaControlsConnected contentId={content.id} />
-                <FeaturesFeedConnected
-                  featureFeedId={content.featureFeed?.id}
-                />
-                <HorizontalContentSeriesFeedConnected contentId={content.id} />
-              </FlexedScrollView>
-            )}
-          </StretchyView>
-        </BackgroundView>
-      )}
-    </ThemeConsumer>
-  );
-};
-
-WeekendContentItem.propTypes = {
-  content: PropTypes.shape({
-    __typename: PropTypes.string,
-    parentChannel: PropTypes.shape({
-      name: PropTypes.string,
-    }),
-    id: PropTypes.string,
-    title: PropTypes.string,
-    videos: PropTypes.arrayOf(
-      PropTypes.shape({
-        sources: PropTypes.arrayOf(PropTypes.shape({ uri: PropTypes.string })),
-      })
-    ),
-    featureFeed: PropTypes.shape({
-      id: PropTypes.string,
-    }),
-  }),
-  loading: PropTypes.bool,
-};
-
-export default WeekendContentItem;
diff --git a/apolloschurchapp/src/content-single/getContentItem.js b/apolloschurchapp/src/content-single/getContentItem.js
index 370dc1f..1106dc0 100644
--- a/apolloschurchapp/src/content-single/getContentItem.js
+++ b/apolloschurchapp/src/content-single/getContentItem.js
@@ -1,24 +1,96 @@
 import gql from 'graphql-tag';
-import ApollosConfig from '@apollosproject/config';
 
 export default gql`
   query getContentItem($itemId: ID!) {
     node(id: $itemId) {
-      __typename
       ... on ContentItem {
-        ...contentCardFragment
-      }
-      ... on WeekendContentItem {
-        featureFeed {
-          id
+        id
+        title
+        isLiked
+        htmlContent
+        coverImage {
+          name
+          sources {
+            uri
+          }
         }
-      }
-      ... on ContentSeriesContentItem {
-        featureFeed {
+        theme {
+          type
+          colors {
+            primary
+            secondary
+            screen
+            paper
+          }
+        }
+        videos {
+          sources {
+            uri
+          }
+        }
+        audios {
+          sources {
+            uri
+          }
+        }
+        parentChannel {
           id
+          name
+        }
+        sharing {
+          url
+          message
+          title
+        }
+        childContentItemsConnection {
+          edges {
+            node {
+              id
+              coverImage {
+                name
+                sources {
+                  uri
+                }
+              }
+              parentChannel {
+                id
+                name
+                iconName
+              }
+              title
+              sharing {
+                url
+                message
+                title
+              }
+            }
+          }
+        }
+        siblingContentItemsConnection {
+          edges {
+            node {
+              id
+              coverImage {
+                name
+                sources {
+                  uri
+                }
+              }
+              parentChannel {
+                id
+                name
+                iconName
+              }
+              title
+              sharing {
+                url
+                message
+                title
+              }
+            }
+          }
         }
       }
     }
   }
-  ${ApollosConfig.FRAGMENTS.CONTENT_CARD_FRAGMENT}
 `;
diff --git a/apolloschurchapp/src/content-single/getContentItemMinimalState.js b/apolloschurchapp/src/content-single/getContentItemMinimalState.js
new file mode 100644
index 0000000..762a3ff
--- /dev/null
+++ b/apolloschurchapp/src/content-single/getContentItemMinimalState.js
@@ -0,0 +1,19 @@
+import gql from 'graphql-tag';
+
+export default gql`
+  # This query is likely to get a cache hit, making it sooner to render content
+  query getContentItemMinimalState($itemId: ID!) {
+    node(id: $itemId) {
+      ... on ContentItem {
+        id
+        title
+        coverImage {
+          name
+          sources {
+            uri
+          }
+        }
+      }
+    }
+  }
+`;
diff --git a/apolloschurchapp/src/content-single/getLikedContentItem.js b/apolloschurchapp/src/content-single/getLikedContentItem.js
new file mode 100644
index 0000000..1ddaa3a
--- /dev/null
+++ b/apolloschurchapp/src/content-single/getLikedContentItem.js
@@ -0,0 +1,12 @@
+import gql from 'graphql-tag';
+
+export default gql`
+  query getLikedContentItem($itemId: ID!) {
+    node(id: $itemId) {
+      ... on ContentItem {
+        id
+        isLiked
+      }
+    }
+  }
+`;
diff --git a/apolloschurchapp/src/content-single/index.js b/apolloschurchapp/src/content-single/index.js
index 1e5b838..cc55cf4 100644
--- a/apolloschurchapp/src/content-single/index.js
+++ b/apolloschurchapp/src/content-single/index.js
@@ -1,17 +1,240 @@
-import { createStackNavigator } from 'react-navigation';
-
-import ContentSingle from './ContentSingle';
-
-const ContentSingleNavigator = createStackNavigator(
-  {
-    ContentSingle,
-  },
-  {
-    initialRouteName: 'ContentSingle',
-    headerMode: 'float',
-    headerTransitionPreset: 'fade-in-place',
-    navigationOptions: { header: null },
+import React, { PureComponent } from 'react';
+import { Query, Mutation } from 'react-apollo';
+import {
+  StyleSheet,
+  View,
+  ScrollView,
+  TouchableWithoutFeedback,
+} from 'react-native';
+import { get } from 'lodash';
+import PropTypes from 'prop-types';
+
+import { ErrorCard } from 'apolloschurchapp/src/ui/Card';
+import CardTile from 'apolloschurchapp/src/ui/CardTile';
+import GradientOverlayImage from 'apolloschurchapp/src/ui/GradientOverlayImage';
+import HorizontalTileFeed from 'apolloschurchapp/src/ui/HorizontalTileFeed';
+import HTMLView from 'apolloschurchapp/src/ui/HTMLView';
+import PaddedView from 'apolloschurchapp/src/ui/PaddedView';
+import { H2 } from 'apolloschurchapp/src/ui/typography';
+import BackgroundView from 'apolloschurchapp/src/ui/BackgroundView';
+import styled from 'apolloschurchapp/src/ui/styled';
+import { ThemeMixin, withTheme } from 'apolloschurchapp/src/ui/theme';
+import Icon from 'apolloschurchapp/src/ui/Icon';
+import Touchable from 'apolloschurchapp/src/ui/Touchable';
+
+import { playVideoMutation } from 'apolloschurchapp/src/ui/MediaPlayer/mutations';
+
+import getContentItem from './getContentItem';
+import getContentItemMinimalState from './getContentItemMinimalState';
+import ActionContainer from './ActionContainer';
+
+const FeedContainer = styled({
+  paddingHorizontal: 0,
+})(PaddedView);
+
+const MediaButtonsContainer = styled({
+  ...StyleSheet.absoluteFillObject,
+  justifyContent: 'center',
+  alignItems: 'center',
+  flexDirection: 'row',
+})(PaddedView);
+
+const MediaIcon = withTheme(
+  ({ theme: { colors: { lightPrimary } = {} } = {} }) => ({
+    size: 50, // TODO: should this be set in a typographic unit?
+    fill: lightPrimary, // TODO: should this reference a text color?
+  })
+)(Icon);
+
+const MediaHeader = styled({ width: '100%' })(View);
+
+const ContentContainer = styled({ paddingVertical: 0 })(PaddedView);
+
+class ContentSingle extends PureComponent {
+  static navigationOptions = ({ navigation }) => {
+    const shareObject = navigation.getParam('sharing', 'Content');
+    const itemId = navigation.getParam('itemId', []);
+    return {
+      title: shareObject.title,
+      headerRight: <ActionContainer itemId={itemId} content={shareObject} />,
+    };
+  };
+
+  static propTypes = {
+    navigation: PropTypes.shape({
+      getParam: PropTypes.func,
+      push: PropTypes.func,
+    }),
+  };
+
+  constructor(props) {
+    super(props);
+
+    this.itemId = { itemId: props.navigation.getParam('itemId', []) };
+    this.loadingStateObject = {
+      node: {
+        id: 'fakeId0',
+        title: '',
+        isLoading: true,
+      },
+    };
+  }
+
+  handleOnPressItem(item) {
+    this.props.navigation.push('ContentSingle', {
+      itemId: item.id,
+      sharing: item.sharing,
+    });
+  }
+
+  renderItem = ({ item, index }) => (
+    <TouchableWithoutFeedback onPress={() => this.handleOnPressItem(item)}>
+      <CardTile
+        number={index + 1}
+        title={get(item, 'title', '')}
+        /*
+          * These are props that are not yet being passed in the data.
+          * We will need to make sure they get added back when that data is available.
+          * byLine={item.content.speaker}
+          * date={item.meta.date}
+          */
+        isLoading={item.isLoading}
+      />
+    </TouchableWithoutFeedback>
+  );
+
+  render() {
+    return (
+      <Query
+        query={getContentItemMinimalState}
+        variables={this.itemId}
+        fetchPolicy="cache-only"
+      >
+        {({ data: cachedData }) => (
+          <Query
+            query={getContentItem}
+            variables={this.itemId}
+            fetchPolicy="cache-and-network"
+          >
+            {({ loading, error, data }) => {
+              if (error) return <ErrorCard error={error} />;
+
+              const content = {
+                ...((cachedData && cachedData.node) || {}),
+                ...((data && data.node) || {}),
+              };
+
+              const childContent = get(
+                data,
+                'node.childContentItemsConnection.edges',
+                []
+              ).map((edge) => edge.node);
+
+              const siblingContent = get(
+                data,
+                'node.siblingContentItemsConnection.edges',
+                []
+              ).map((edge) => edge.node);
+
+              const horizontalContent = siblingContent.length
+                ? siblingContent
+                : childContent;
+
+              const videoSource = get(content, 'videos[0].sources[0]', null);
+              const audioSource = get(content, 'audios[0].sources[0]', null);
+              const coverImageSources = get(content, 'coverImage.sources', []);
+
+              return (
+                <ThemeMixin
+                  mixin={{
+                    type: get(content, 'theme.type', 'light').toLowerCase(),
+                    colors: get(content, 'theme.colors'),
+                  }}
+                >
+                  <ScrollView>
+                    <MediaHeader>
+                      <GradientOverlayImage
+                        source={coverImageSources}
+                        overlayColor={get(content, 'theme.colors.paper')}
+                      />
+
+                      <Mutation mutation={playVideoMutation}>
+                        {(play) => (
+                          <MediaButtonsContainer>
+                            {videoSource ? (
+                              <Touchable
+                                onPress={() =>
+                                  play({
+                                    variables: {
+                                      mediaSource: videoSource,
+                                      posterSources: coverImageSources,
+                                      title: content.title,
+                                      isVideo: true,
+                                      artist: get(
+                                        content,
+                                        'parentChannel.name'
+                                      ),
+                                    },
+                                  })
+                                }
+                              >
+                                <MediaIcon name="video" />
+                              </Touchable>
+                            ) : null}
+                            {audioSource ? (
+                              <Touchable
+                                onPress={() =>
+                                  play({
+                                    variables: {
+                                      mediaSource: audioSource,
+                                      posterSources: coverImageSources,
+                                      title: content.title,
+                                      isVideo: false,
+                                      artist: get(
+                                        content,
+                                        'parentChannel.name'
+                                      ),
+                                    },
+                                  })
+                                }
+                              >
+                                <MediaIcon name="audio" />
+                              </Touchable>
+                            ) : null}
+                          </MediaButtonsContainer>
+                        )}
+                      </Mutation>
+                    </MediaHeader>
+                    <BackgroundView>
+                      <ContentContainer>
+                        <H2 padded isLoading={!content.title && loading}>
+                          {content.title}
+                        </H2>
+                        <HTMLView isLoading={!content.htmlContent && loading}>
+                          {content.htmlContent}
+                        </HTMLView>
+                      </ContentContainer>
+                    </BackgroundView>
+                    {(horizontalContent && horizontalContent.length) ||
+                    loading ? (
+                      <FeedContainer>
+                        <HorizontalTileFeed
+                          content={horizontalContent}
+                          isLoading={loading}
+                          loadingStateObject={this.loadingStateObject}
+                          renderItem={this.renderItem}
+                        />
+                      </FeedContainer>
+                    ) : null}
+                  </ScrollView>
+                </ThemeMixin>
+              );
+            }}
+          </Query>
+        )}
+      </Query>
+    );
   }
-);
+}
 
-export default ContentSingleNavigator;
+export default ContentSingle;
diff --git a/apolloschurchapp/src/content-single/updateLikeEntity.js b/apolloschurchapp/src/content-single/updateLikeEntity.js
new file mode 100644
index 0000000..155511a
--- /dev/null
+++ b/apolloschurchapp/src/content-single/updateLikeEntity.js
@@ -0,0 +1,17 @@
+import gql from 'graphql-tag';
+
+export default gql`
+  mutation updateLikeEntity(
+    $itemId: ID!
+    $sessionId: ID!
+    $operation: LIKE_OPERATION!
+  ) {
+    updateLikeEntity(
+      input: { nodeId: $itemId, sessionId: $sessionId, operation: $operation }
+    ) {
+      id
+      operation
+      interactionDateTime
+    }
+  }
+`;
diff --git a/apolloschurchapp/src/event/Event.js b/apolloschurchapp/src/event/Event.js
deleted file mode 100644
index be51790..0000000
--- a/apolloschurchapp/src/event/Event.js
+++ /dev/null
@@ -1,75 +0,0 @@
-import React from 'react';
-import { get } from 'lodash';
-import PropTypes from 'prop-types';
-import moment from 'moment';
-import InAppBrowser from 'react-native-inappbrowser-reborn';
-import {
-  GradientOverlayImage,
-  BackgroundView,
-  PaddedView,
-  H2,
-  Paragraph,
-  StretchyView,
-} from '@apollosproject/ui-kit';
-import HTMLView from '@apollosproject/ui-htmlview';
-
-import { FlexedScrollView, EventInfoItem } from './components';
-
-const handlePressAnchor = (url) => {
-  InAppBrowser.open(url);
-};
-
-const Event = ({ event, loading }) => {
-  const coverImageSources = get(event, 'image.sources', []);
-  return (
-    <BackgroundView>
-      <StretchyView>
-        {({ Stretchy, ...scrollViewProps }) => (
-          <FlexedScrollView {...scrollViewProps}>
-            {coverImageSources.length || loading ? (
-              <Stretchy>
-                <GradientOverlayImage
-                  isLoading={!coverImageSources.length && loading}
-                  source={coverImageSources}
-                />
-              </Stretchy>
-            ) : null}
-            <PaddedView vertical={false}>
-              <H2 padded isLoading={!event.name && loading}>
-                {event.name}
-              </H2>
-              <Paragraph>
-                <EventInfoItem
-                  icon={'time'}
-                  title={moment(event.start).format('ddd, MMMM Do, YYYY')}
-                  subtitle={`${moment(event.start).format('LT')} — ${moment(
-                    event.end
-                  ).format('LT')}`}
-                />
-                <EventInfoItem icon={'pin'} title={event.location} />
-              </Paragraph>
-              <HTMLView isLoading={loading} onPressAnchor={handlePressAnchor}>
-                {event.description}
-              </HTMLView>
-            </PaddedView>
-          </FlexedScrollView>
-        )}
-      </StretchyView>
-    </BackgroundView>
-  );
-};
-
-Event.propTypes = {
-  event: PropTypes.shape({
-    __typename: PropTypes.string,
-    id: PropTypes.string,
-    name: PropTypes.string,
-    description: PropTypes.string,
-    start: PropTypes.string,
-    end: PropTypes.string,
-    location: PropTypes.string,
-  }),
-  loading: PropTypes.bool,
-};
-
-export default Event;
diff --git a/apolloschurchapp/src/event/Event.tests.js b/apolloschurchapp/src/event/Event.tests.js
deleted file mode 100644
index 03e543f..0000000
--- a/apolloschurchapp/src/event/Event.tests.js
+++ /dev/null
@@ -1,31 +0,0 @@
-import React from 'react';
-import renderer from 'react-test-renderer';
-import moment from 'moment';
-
-import Providers from '../Providers';
-
-import Event from './Event';
-
-describe('The Event component', () => {
-  it('should render', () => {
-    const tree = renderer.create(
-      <Providers>
-        <Event
-          event={{
-            __typename: 'Event',
-            id: 'Event:123',
-            start: moment('2019-09-26T15:10:51.200Z')
-              .utc()
-              .toJSON(),
-            end: moment('2019-09-26T17:10:51.200Z')
-              .utc()
-              .toJSON(),
-            location: 'Willow Creek, Chicago',
-            image: { sources: [{ url: 'https://url.com/image.jpg' }] },
-          }}
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/event/EventConnected.js b/apolloschurchapp/src/event/EventConnected.js
deleted file mode 100644
index ee76b48..0000000
--- a/apolloschurchapp/src/event/EventConnected.js
+++ /dev/null
@@ -1,81 +0,0 @@
-import React, { PureComponent } from 'react';
-import { Query } from 'react-apollo';
-import { get } from 'lodash';
-import PropTypes from 'prop-types';
-
-import { ErrorCard, ThemeMixin } from '@apollosproject/ui-kit';
-
-import { TrackEventWhenLoaded } from '@apollosproject/ui-analytics';
-
-import NavigationHeader from '../ui/NavigationHeader';
-import Event from './Event';
-import GET_EVENT from './getEvent';
-
-class EventConnected extends PureComponent {
-  static propTypes = {
-    navigation: PropTypes.shape({
-      getParam: PropTypes.func,
-      push: PropTypes.func,
-    }),
-  };
-
-  get eventId() {
-    return this.props.navigation.getParam('eventId', []);
-  }
-
-  get queryVariables() {
-    return { eventId: this.eventId };
-  }
-
-  static navigationOptions = {
-    header: NavigationHeader,
-    headerTransparent: true,
-    headerMode: 'float',
-  };
-
-  renderWithData = ({ loading, error, data }) => {
-    if (error) return <ErrorCard error={error} />;
-
-    const event = data.node || {};
-
-    const { theme = {} } = event;
-
-    return (
-      <ThemeMixin
-        mixin={{
-          type: get(theme, 'type', 'light').toLowerCase(),
-          colors: get(theme, 'colors'),
-        }}
-      >
-        <TrackEventWhenLoaded
-          loaded={!!(!loading && event.name)}
-          eventName={'View Event'}
-          properties={{
-            title: event.name,
-            eventId: this.eventId,
-          }}
-        />
-        <Event
-          id={this.eventId}
-          event={event}
-          loading={loading}
-          error={error}
-        />
-      </ThemeMixin>
-    );
-  };
-
-  render() {
-    return (
-      <Query
-        query={GET_EVENT}
-        fetchPolicy="network-only"
-        variables={this.queryVariables}
-      >
-        {this.renderWithData}
-      </Query>
-    );
-  }
-}
-
-export default EventConnected;
diff --git a/apolloschurchapp/src/event/EventConnected.tests.js b/apolloschurchapp/src/event/EventConnected.tests.js
deleted file mode 100644
index c32b77e..0000000
--- a/apolloschurchapp/src/event/EventConnected.tests.js
+++ /dev/null
@@ -1,53 +0,0 @@
-import React from 'react';
-
-import moment from 'moment';
-import Providers from '../Providers';
-
-import { renderWithApolloData } from '../utils/testUtils';
-import getEvent from './getEvent';
-import EventConnected from './EventConnected';
-
-const mocks = {
-  request: {
-    query: getEvent,
-    variables: { eventId: 'Event:123' },
-  },
-  result: {
-    data: {
-      node: {
-        __typename: 'Event',
-        id: 'Event:123',
-        start: moment('2019-09-26T15:10:51.200Z')
-          .utc()
-          .toJSON(),
-        end: moment('2019-09-26T17:10:51.200Z')
-          .utc()
-          .toJSON(),
-        location: 'Willow Creek, Chicago',
-        name: 'Cookout',
-        description: 'Some detailed description',
-        image: {
-          __typename: 'ImageMedia',
-          sources: [
-            {
-              uri: 'https://url.com/image.jpg',
-              __typename: 'ImageMediaSource',
-            },
-          ],
-        },
-      },
-    },
-  },
-};
-
-describe('EventConnected component', () => {
-  it('renders without errors', async () => {
-    const tree = await renderWithApolloData(
-      <Providers mocks={[mocks]}>
-        <EventConnected navigation={{ getParam: () => 'Event:123' }} />
-      </Providers>
-    );
-
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/event/components.js b/apolloschurchapp/src/event/components.js
deleted file mode 100644
index f227415..0000000
--- a/apolloschurchapp/src/event/components.js
+++ /dev/null
@@ -1,44 +0,0 @@
-import React from 'react';
-import { Animated, View } from 'react-native';
-import PropTypes from 'prop-types';
-import { styled, withTheme, H6, H4, Icon } from '@apollosproject/ui-kit';
-
-const FlexedScrollView = styled({ flex: 1 })(Animated.ScrollView);
-
-const StyledIcon = withTheme(({ theme: { colors, sizing } }) => ({
-  fill: colors.text.tertiary,
-  size: sizing.baseUnit * 1.5,
-  style: {
-    marginRight: 8,
-  },
-}))(Icon);
-
-const StyledH6 = styled(({ theme: { colors, sizing } }) => ({
-  color: colors.text.tertiary,
-  fontSize: sizing.baseUnit * 0.875,
-  marginTop: sizing.baseUnit / 4,
-}))(H6);
-
-const EventInfoContainer = styled({ marginBottom: 24, flexDirection: 'row' })(
-  View
-);
-
-const TextContainer = styled({ flexDirection: 'column' })(View);
-
-const EventInfoItem = ({ icon, title, subtitle }) => (
-  <EventInfoContainer>
-    <StyledIcon name={icon} />
-    <TextContainer>
-      <H4 bold>{title}</H4>
-      <StyledH6>{subtitle}</StyledH6>
-    </TextContainer>
-  </EventInfoContainer>
-);
-
-EventInfoItem.propTypes = {
-  icon: PropTypes.string.isRequired,
-  title: PropTypes.string,
-  subtitle: PropTypes.string,
-};
-
-export { FlexedScrollView, EventInfoItem };
diff --git a/apolloschurchapp/src/event/getEvent.js b/apolloschurchapp/src/event/getEvent.js
deleted file mode 100644
index 059cb9f..0000000
--- a/apolloschurchapp/src/event/getEvent.js
+++ /dev/null
@@ -1,29 +0,0 @@
-import gql from 'graphql-tag';
-
-export const EVENT_FRAGMENT = gql`
-  fragment eventFragment on Event {
-    id
-    name
-    location
-    start
-    end
-    description
-    image {
-      sources {
-        uri
-      }
-    }
-  }
-`;
-
-export default gql`
-  query getEvent($eventId: ID!) {
-    node(id: $eventId) {
-      __typename
-      ... on Event {
-        ...eventFragment
-      }
-    }
-  }
-  ${EVENT_FRAGMENT}
-`;
diff --git a/apolloschurchapp/src/event/index.js b/apolloschurchapp/src/event/index.js
deleted file mode 100644
index b065c4c..0000000
--- a/apolloschurchapp/src/event/index.js
+++ /dev/null
@@ -1,17 +0,0 @@
-import { createStackNavigator } from 'react-navigation';
-
-import Event from './EventConnected';
-
-const EventNavigator = createStackNavigator(
-  {
-    Event,
-  },
-  {
-    initialRouteName: 'Event',
-    headerMode: 'float',
-    headerTransitionPreset: 'fade-in-place',
-    navigationOptions: { header: null },
-  }
-);
-
-export default EventNavigator;
diff --git a/apolloschurchapp/src/index.js b/apolloschurchapp/src/index.js
index a1b79b7..2bab565 100644
--- a/apolloschurchapp/src/index.js
+++ b/apolloschurchapp/src/index.js
@@ -1,84 +1,45 @@
-import hoistNonReactStatic from 'hoist-non-react-statics';
 import React from 'react';
-import { StatusBar } from 'react-native';
-import { createStackNavigator, createAppContainer } from 'react-navigation';
-import RNBootSplash from 'react-native-bootsplash';
+import { createStackNavigator } from 'react-navigation';
+// import { Sentry } from 'react-native-sentry';
 
-import {
-  BackgroundView,
-  withTheme,
-  NavigationService,
-} from '@apollosproject/ui-kit';
-import Passes from '@apollosproject/ui-passes';
-import { CoreNavigationAnalytics } from '@apollosproject/ui-analytics';
-import { MapViewConnected as Location } from '@apollosproject/ui-mapview';
-import { MediaPlayer } from '@apollosproject/ui-media-player';
-import Auth, { ProtectedRoute } from '@apollosproject/ui-auth';
+import BackgroundView from 'apolloschurchapp/src/ui/BackgroundView';
+import MediaPlayer from 'apolloschurchapp/src/ui/MediaPlayer';
 
 import Providers from './Providers';
 import ContentSingle from './content-single';
-import NodeSingle from './node-single';
-import Event from './event';
 import Tabs from './tabs';
-import PersonalDetails from './user-settings/PersonalDetails';
-import ChangePassword from './user-settings/ChangePassword';
-import LandingScreen from './ui/LandingScreen';
-import Onboarding from './ui/Onboarding';
+import Auth from './auth';
 
-const AppStatusBar = withTheme(({ theme }) => ({
-  barStyle: theme.barStyle,
-  backgroundColor: theme.colors.background.paper,
-}))(StatusBar);
+// Sentry.config(
+//   'https://5908fa19ed37447f86b2717423cadec5:45dd3b58792b413cb67109c5e63a0bb7@sentry.io/1241658'
+// ).install();
 
-const ProtectedRouteWithSplashScreen = (props) => {
-  const handleOnRouteChange = () => RNBootSplash.hide({ duration: 250 });
-
-  return <ProtectedRoute {...props} onRouteChange={handleOnRouteChange} />;
-};
-
-// Hack to avoid needing to pass emailRequired through the navigator.navigate
-const EnhancedAuth = (props) => <Auth {...props} emailRequired />;
-// 😑
-hoistNonReactStatic(EnhancedAuth, Auth);
-
-const AppNavigator = createStackNavigator(
+const AppStackNavigator = createStackNavigator(
   {
-    ProtectedRoute: ProtectedRouteWithSplashScreen,
     Tabs,
     ContentSingle,
-    NodeSingle,
-    Event,
-    Auth: EnhancedAuth,
-    PersonalDetails,
-    ChangePassword,
-    Location,
-    Passes,
-    Onboarding,
-    LandingScreen,
   },
   {
-    initialRouteName: 'ProtectedRoute',
-    mode: 'modal',
-    headerMode: 'screen',
+    initialRouteName: 'Tabs',
   }
 );
 
-const AppContainer = createAppContainer(AppNavigator);
+const AppModalNavigator = createStackNavigator(
+  {
+    AppStackNavigator,
+    Auth,
+  },
+  {
+    initialRouteName: 'AppStackNavigator',
+    mode: 'modal',
+    headerMode: 'none',
+  }
+);
 
 const App = () => (
   <Providers>
     <BackgroundView>
-      <AppStatusBar />
-      <CoreNavigationAnalytics>
-        {(props) => (
-          <AppContainer
-            ref={(navigatorRef) => {
-              NavigationService.setTopLevelNavigator(navigatorRef);
-            }}
-            {...props}
-          />
-        )}
-      </CoreNavigationAnalytics>
+      <AppModalNavigator />
       <MediaPlayer />
     </BackgroundView>
   </Providers>
diff --git a/apolloschurchapp/src/index.test.js b/apolloschurchapp/src/index.test.js
new file mode 100644
index 0000000..dcea081
--- /dev/null
+++ b/apolloschurchapp/src/index.test.js
@@ -0,0 +1,9 @@
+import renderer from 'react-test-renderer';
+import React from 'react';
+
+import App from '.';
+
+it('renders without crashing', () => {
+  const rendered = renderer.create(<App />).toJSON();
+  expect(rendered).toBeTruthy();
+});
diff --git a/apolloschurchapp/src/live/LiveButton.js b/apolloschurchapp/src/live/LiveButton.js
new file mode 100644
index 0000000..5604424
--- /dev/null
+++ b/apolloschurchapp/src/live/LiveButton.js
@@ -0,0 +1,54 @@
+import React from 'react';
+import { Query } from 'react-apollo';
+import { get } from 'lodash';
+
+import { UIText } from 'apolloschurchapp/src/ui/typography';
+import Card, { CardContent } from 'apolloschurchapp/src/ui/Card';
+import Touchable from 'apolloschurchapp/src/ui/Touchable';
+import styled from 'apolloschurchapp/src/ui/styled';
+import ChannelLabel from 'apolloschurchapp/src/ui/ChannelLabel';
+import { WebBrowserConsumer } from 'apolloschurchapp/src/ui/WebBrowser';
+
+import getLiveStream from './getLiveStream';
+
+const LiveCard = styled(({ theme }) => ({
+  backgroundColor: theme.colors.lightSecondary,
+}))(Card);
+
+const LiveNowButton = () => (
+  <Query
+    query={getLiveStream}
+    fetchPolicy="cache-and-network"
+    pollInterval={60000}
+  >
+    {({ loading, data }) => {
+      const isLive = get(data, 'liveStream.isLive', false);
+
+      return isLive ? (
+        <WebBrowserConsumer>
+          {(openUrl) => (
+            <Touchable
+              onPress={() => openUrl('https://apollos.churchonline.org/')}
+            >
+              <LiveCard isLoading={loading}>
+                <CardContent>
+                  <ChannelLabel
+                    icon="video"
+                    label={
+                      <UIText>
+                        <UIText bold>{`We're live.`} </UIText>
+                        Watch now!
+                      </UIText>
+                    }
+                  />
+                </CardContent>
+              </LiveCard>
+            </Touchable>
+          )}
+        </WebBrowserConsumer>
+      ) : null;
+    }}
+  </Query>
+);
+
+export default LiveNowButton;
diff --git a/apolloschurchapp/src/live/LiveButton.tests.js b/apolloschurchapp/src/live/LiveButton.tests.js
new file mode 100644
index 0000000..0ac2b75
--- /dev/null
+++ b/apolloschurchapp/src/live/LiveButton.tests.js
@@ -0,0 +1,32 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import LiveNowButton from './LiveButton';
+import getLiveStream from './getLiveStream';
+
+const mocks = [
+  {
+    request: {
+      query: getLiveStream,
+      variables: {
+        isLive: true,
+      },
+    },
+    result: {
+      data: {
+        liveStream: { isLive: true },
+      },
+    },
+  },
+];
+
+it('renders without error', () => {
+  const tree = renderer.create(
+    <Providers mocks={mocks} addTypename={false}>
+      <LiveNowButton isLive />
+    </Providers>
+  );
+  expect(tree).toMatchSnapshot();
+});
diff --git a/apolloschurchapp/src/live/getLiveStream.js b/apolloschurchapp/src/live/getLiveStream.js
new file mode 100644
index 0000000..55ae4e5
--- /dev/null
+++ b/apolloschurchapp/src/live/getLiveStream.js
@@ -0,0 +1,9 @@
+import gql from 'graphql-tag';
+
+export default gql`
+  query getLiveStream {
+    liveStream {
+      isLive
+    }
+  }
+`;
diff --git a/apolloschurchapp/src/live/index.js b/apolloschurchapp/src/live/index.js
new file mode 100644
index 0000000..1612958
--- /dev/null
+++ b/apolloschurchapp/src/live/index.js
@@ -0,0 +1 @@
+export LiveButton from './LiveButton';
diff --git a/apolloschurchapp/src/node-single/NodeSingle.js b/apolloschurchapp/src/node-single/NodeSingle.js
deleted file mode 100644
index 10ce650..0000000
--- a/apolloschurchapp/src/node-single/NodeSingle.js
+++ /dev/null
@@ -1,47 +0,0 @@
-import React, { PureComponent } from 'react';
-import { get } from 'lodash';
-import PropTypes from 'prop-types';
-
-import { ThemeMixin } from '@apollosproject/ui-kit';
-
-import {
-  InteractWhenLoadedConnected,
-  NodeSingleConnected,
-} from '@apollosproject/ui-connected';
-
-import NavigationHeader from '../ui/NavigationHeader';
-
-class NodeSingle extends PureComponent {
-  static propTypes = {
-    navigation: PropTypes.shape({
-      getParam: PropTypes.func,
-      push: PropTypes.func,
-    }),
-  };
-
-  get nodeId() {
-    return this.props.navigation.getParam('nodeId', []);
-  }
-
-  static navigationOptions = {
-    header: NavigationHeader,
-    headerTransparent: true,
-    headerMode: 'float',
-  };
-
-  render() {
-    return (
-      <ThemeMixin
-        mixin={{
-          type: get(this.props, 'theme.type'),
-          colors: get(this.props, 'theme.colors'),
-        }}
-      >
-        <InteractWhenLoadedConnected nodeId={this.nodeId} action={'COMPLETE'} />
-        <NodeSingleConnected nodeId={this.nodeId} />
-      </ThemeMixin>
-    );
-  }
-}
-
-export default NodeSingle;
diff --git a/apolloschurchapp/src/node-single/index.js b/apolloschurchapp/src/node-single/index.js
deleted file mode 100644
index bdc8147..0000000
--- a/apolloschurchapp/src/node-single/index.js
+++ /dev/null
@@ -1,17 +0,0 @@
-import { createStackNavigator } from 'react-navigation';
-
-import NodeSingle from './NodeSingle';
-
-const NodeSingleNavigator = createStackNavigator(
-  {
-    NodeSingle,
-  },
-  {
-    initialRouteName: 'NodeSingle',
-    headerMode: 'float',
-    headerTransitionPreset: 'fade-in-place',
-    navigationOptions: { header: null },
-  }
-);
-
-export default NodeSingleNavigator;
diff --git a/apolloschurchapp/src/store/Auth.tests.js b/apolloschurchapp/src/store/Auth.tests.js
new file mode 100644
index 0000000..da6b401
--- /dev/null
+++ b/apolloschurchapp/src/store/Auth.tests.js
@@ -0,0 +1,11 @@
+import { client } from 'apolloschurchapp/src/client';
+
+import { resolvers } from '.';
+
+describe('Auth Store', () => {
+  it('logs a user out', async () => {
+    client.cache.writeData({ data: { authToken: 'some-auth-token' } });
+    resolvers.Mutation.logout({}, {}, { cache: client.cache });
+    expect(client.cache).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/store/MediaPlayer.tests.js b/apolloschurchapp/src/store/MediaPlayer.tests.js
new file mode 100644
index 0000000..68724b9
--- /dev/null
+++ b/apolloschurchapp/src/store/MediaPlayer.tests.js
@@ -0,0 +1,58 @@
+import { client } from 'apolloschurchapp/src/client';
+import gql from 'graphql-tag';
+
+import { resolvers, defaults } from '.';
+
+const query = gql`
+  query {
+    mediaPlayer @client {
+      currentTrack {
+        mediaSourceUri
+        posterSourceUri
+        title
+        artist
+      }
+      isPlaying
+      isFullscreen
+      isVisible
+    }
+  }
+`;
+
+const testTrack = {
+  parentId: 'parentId',
+  mediaSourceUri: 'mediaSourceUri',
+  posterSourceUri: 'posterSourceUri',
+  title: 'title',
+  artist: 'artist',
+};
+
+describe('MediaPlayer Store', () => {
+  beforeEach(() => {
+    client.writeData({ data: defaults });
+  });
+
+  it('plays a track', async () => {
+    resolvers.Mutation.mediaPlayerPlayNow({}, testTrack, {
+      cache: client.cache,
+    });
+    expect(client.query({ query })).resolves.toMatchSnapshot();
+  });
+  it('updates player state', async () => {
+    resolvers.Mutation.mediaPlayerPlayNow({}, testTrack, {
+      cache: client.cache,
+    });
+    expect(client.query({ query })).resolves.toMatchSnapshot();
+    resolvers.Mutation.mediaPlayerUpdateState(
+      {},
+      { isPlaying: false },
+      { cache: client.cache }
+    );
+    expect(client.query({ query })).resolves.toMatchSnapshot();
+    resolvers.Mutation.mediaPlayerUpdateState(
+      {},
+      { isPlaying: true },
+      { cache: client.cache }
+    );
+  });
+});
diff --git a/apolloschurchapp/src/store/getSessionId.js b/apolloschurchapp/src/store/getSessionId.js
new file mode 100644
index 0000000..4e31262
--- /dev/null
+++ b/apolloschurchapp/src/store/getSessionId.js
@@ -0,0 +1,7 @@
+import gql from 'graphql-tag';
+
+export default gql`
+  query sessionId {
+    sessionId @client
+  }
+`;
diff --git a/apolloschurchapp/src/store/index.js b/apolloschurchapp/src/store/index.js
index 153b2ea..fcf775f 100644
--- a/apolloschurchapp/src/store/index.js
+++ b/apolloschurchapp/src/store/index.js
@@ -1,62 +1,216 @@
+import { merge, get } from 'lodash';
 import gql from 'graphql-tag';
-
-import { schema as mediaPlayerSchema } from '@apollosproject/ui-media-player';
-import { updatePushId } from '@apollosproject/ui-notifications';
-import CACHE_LOADED from '../client/getCacheLoaded'; // eslint-disable-line
-
+import { client } from '../client'; // eslint-disable-line
+import getAuthToken from './getAuthToken';
+import getSessionId from './getSessionId';
 // TODO: this will require more organization...ie...not keeping everything in one file.
 // But this is simple while our needs our small.
 
 export const schema = `
   type Query {
-    devicePushId: String
-    cacheLoaded: Boolean
-    notificationsEnabled: Boolean
+    authToken: String
+    sessionId: String
+    mediaPlayer: MediaPlayerState
   }
 
   type Mutation {
-    cacheMarkLoaded
-    updateDevicePushId(pushId: String!)
-    updatePushPermissions(enabled: Boolean!)
+    logout
+    mediaPlayerUpdateState(isPlaying: Boolean, isFullscreen: Boolean, isVisible: Boolean): Boolean
+    mediaPlayerSetPlayhead(currentTime: Float): Boolean
+    mediaPlayerPlayNow(
+      parentId: ID,
+      mediaSource: VideoMediaSource!,
+      posterSources: [ImageMediaSource],
+      title: String,
+      artist: String,
+      isVideo: Boolean,
+    ): Boolean
+
+    handleLogin(authToken: String!)
+  }
+
+  type MediaPlayerState {
+    currentTrack: MediaPlayerTrack
+    isPlaying: Boolean
+    isFullscreen: Boolean
+    isVisible: Boolean
+    currentTime: Float
+  }
+
+  type MediaPlayerProgress {
+    currentTime: Float
+    playableDuration: Float
+    seekableDuration: Float
+    duration: Float
+  }
+
+  type MediaPlayerTrack {
+    id: ID!
+    parentId: ID
+    mediaSource: VideoMediaSource!
+    posterSources: [ImageMediaSource]
+    title: String
+    artist: String
+    isVideo: Boolean
   }
-${mediaPlayerSchema}
 `;
 
 export const defaults = {
-  __typename: 'Query',
-  cacheLoaded: false,
+  authToken: null,
+  sessionId: null,
+  mediaPlayer: {
+    __typename: 'MediaPlayerState',
+    currentTrack: null,
+    isPlaying: false,
+    isFullscreen: false,
+    isVisible: false,
+    currentTime: 0,
+  },
 };
 
-const GET_LOGGED_IN = gql`
-  query {
-    isLoggedIn @client
-  }
-`;
+let trackId = 0;
 
 export const resolvers = {
   Mutation: {
-    cacheMarkLoaded: async (root, args, { cache, client }) => {
-      cache.writeQuery({
-        query: CACHE_LOADED,
+    logout: (root, variables, { cache }) => {
+      client.resetStore();
+      cache.writeData({ data: { authToken: null, sessionId: null } });
+      return null;
+    },
+
+    handleLogin: async (root, { authToken }, { cache }) => {
+      const createSessionMutation = gql`
+        mutation {
+          createSession {
+            id
+          }
+        }
+      `;
+
+      try {
+        await cache.writeQuery({
+          query: getAuthToken,
+          data: { authToken },
+        });
+
+        const {
+          data: { createSession },
+        } = await client.mutate({
+          mutation: createSessionMutation,
+        });
+
+        await cache.writeQuery({
+          query: getSessionId,
+          data: { sessionId: createSession.id },
+        });
+      } catch (e) {
+        console.log(e);
+      }
+    },
+    mediaPlayerPlayNow: (root, trackInfo, { cache }) => {
+      const query = gql`
+        query {
+          mediaPlayer {
+            isFullscreen
+          }
+        }
+      `;
+      const track = merge(
+        {
+          __typename: 'MediaPlayerTrack',
+          parentId: null,
+          mediaSource: null,
+          posterSources: null,
+          title: null,
+          artist: null,
+          isVideo: false,
+        },
+        trackInfo
+      );
+
+      const { mediaPlayer } = cache.readQuery({ query });
+
+      const newMediaPlayerState = {
+        __typename: 'MediaPlayerState',
+        isPlaying: true,
+        isVisible: true,
+        isFullscreen: track.isVideo
+          ? true
+          : (mediaPlayer && mediaPlayer.isFullscreen) || false,
+        currentTrack: track,
+        currentTime: 0,
+      };
+
+      if (
+        // if same track
+        mediaPlayer &&
+        mediaPlayer.currentTrack &&
+        mediaPlayer.currentTrack.mediaSource.uri === track.mediaSource.uri
+      ) {
+        // use the same Id
+        newMediaPlayerState.currentTrack.id = mediaPlayer.currentTrack.id;
+      } else {
+        // otherwise reset progress and use new Id
+        newMediaPlayerState.currentTrack.id = trackId;
+        newMediaPlayerState.progress = null;
+        trackId += 1;
+      }
+
+      cache.writeData({
+        query,
         data: {
-          cacheLoaded: true,
+          mediaPlayer: newMediaPlayerState,
         },
       });
-      const { data: { isLoggedIn } = {} } = await client.query({
-        query: GET_LOGGED_IN,
+      return null;
+    },
+    mediaPlayerUpdateState: (
+      root,
+      { isPlaying, isFullscreen, isVisible },
+      { cache }
+    ) => {
+      const query = gql`
+        query {
+          mediaPlayer @client {
+            isPlaying
+            isFullscreen
+            isVisible
+          }
+        }
+      `;
+      const { mediaPlayer } = cache.readQuery({ query });
+      cache.writeQuery({
+        query,
+        data: {
+          mediaPlayer: merge(mediaPlayer, {
+            isPlaying,
+            isFullscreen,
+            isVisible,
+            __typename: 'MediaPlayerState',
+          }),
+        },
       });
-
-      const { pushId } = cache.readQuery({
-        query: gql`
-          query {
-            pushId @client
+      return null;
+    },
+    mediaPlayerSetPlayhead: (root, { currentTime }, { cache }) => {
+      const query = gql`
+        query {
+          mediaPlayer @client {
+            currentTime
           }
-        `,
+        }
+      `;
+      const { mediaPlayer } = cache.readQuery({ query });
+      cache.writeQuery({
+        query,
+        data: {
+          mediaPlayer: {
+            __typename: 'MediaPlayerState',
+            currentTime:
+              currentTime || get(mediaPlayer.progress, 'currentTime') || 0,
+          },
+        },
       });
-
-      if (isLoggedIn && pushId) {
-        updatePushId({ pushId, client });
-      }
       return null;
     },
   },
diff --git a/apolloschurchapp/src/tabs/connect/ActionBar.js b/apolloschurchapp/src/tabs/connect/ActionBar.js
deleted file mode 100644
index 12f4564..0000000
--- a/apolloschurchapp/src/tabs/connect/ActionBar.js
+++ /dev/null
@@ -1,37 +0,0 @@
-import React from 'react';
-import { ActionBar, ActionBarItem } from '@apollosproject/ui-kit';
-import { withNavigation } from 'react-navigation';
-import PropTypes from 'prop-types';
-import { RockAuthedWebBrowser } from '@apollosproject/ui-connected';
-
-const Toolbar = ({ navigation }) => (
-  <RockAuthedWebBrowser>
-    {(openUrl) => (
-      <ActionBar>
-        <ActionBarItem
-          onPress={() => navigation.navigate('Passes')}
-          icon="check"
-          label="Check-in"
-        />
-        <ActionBarItem
-          onPress={() => openUrl('https://apollosrock.newspring.cc/page/186')}
-          icon="download"
-          label="Give"
-        />
-        <ActionBarItem
-          onPress={() => navigation.navigate('TestingControlPanel')}
-          icon="information"
-          label="Test"
-        />
-      </ActionBar>
-    )}
-  </RockAuthedWebBrowser>
-);
-
-Toolbar.propTypes = {
-  navigation: PropTypes.shape({
-    navigate: PropTypes.func.isRequired,
-  }).isRequired,
-};
-
-export default withNavigation(Toolbar);
diff --git a/apolloschurchapp/src/tabs/connect/ActionTable/index.js b/apolloschurchapp/src/tabs/connect/ActionTable/index.js
deleted file mode 100644
index 329fc23..0000000
--- a/apolloschurchapp/src/tabs/connect/ActionTable/index.js
+++ /dev/null
@@ -1,86 +0,0 @@
-import React from 'react';
-import { View } from 'react-native';
-
-import {
-  TableView,
-  Cell,
-  CellIcon,
-  CellText,
-  Divider,
-  Touchable,
-  styled,
-  PaddedView,
-  H4,
-  NavigationService,
-} from '@apollosproject/ui-kit';
-import { RockAuthedWebBrowser } from '@apollosproject/ui-connected';
-
-const RowHeader = styled(({ theme }) => ({
-  flexDirection: 'row',
-  justifyContent: 'space-between',
-  alignItems: 'center',
-  paddingVertical: theme.sizing.baseUnit,
-}))(PaddedView);
-
-const Name = styled({
-  flexGrow: 1,
-})(View);
-
-const ActionTable = () => (
-  <RockAuthedWebBrowser>
-    {(openUrl) => (
-      <View>
-        <RowHeader>
-          <Name>
-            <H4>{'Connect with Apollos'}</H4>
-          </Name>
-        </RowHeader>
-        <TableView>
-          <Touchable
-            onPress={() => openUrl('https://apollosrock.newspring.cc/page/235')}
-          >
-            <Cell>
-              <CellText>Find a serving opportunity</CellText>
-              <CellIcon name="arrow-next" />
-            </Cell>
-          </Touchable>
-          <Divider />
-          <Touchable
-            onPress={() => openUrl('https://apollosrock.newspring.cc/page/236')}
-          >
-            <Cell>
-              <CellText>Join a small group</CellText>
-              <CellIcon name="arrow-next" />
-            </Cell>
-          </Touchable>
-          <Divider />
-          <Touchable
-            onPress={() => openUrl('https://apollosrock.newspring.cc/page/233')}
-          >
-            <Cell>
-              <CellText>I need prayer</CellText>
-              <CellIcon name="arrow-next" />
-            </Cell>
-          </Touchable>
-        </TableView>
-        <TableView>
-          <Touchable
-            onPress={() => NavigationService.navigate('TestingControlPanel')}
-          >
-            <Cell>
-              <CellIcon name="settings" />
-              <CellText>Open Testing Panel</CellText>
-              <CellIcon name="arrow-next" />
-            </Cell>
-          </Touchable>
-        </TableView>
-      </View>
-    )}
-  </RockAuthedWebBrowser>
-);
-
-const StyledActionTable = styled(({ theme }) => ({
-  paddingBottom: theme.sizing.baseUnit * 100,
-}))(ActionTable);
-
-export default StyledActionTable;
diff --git a/apolloschurchapp/src/tabs/connect/Connect.js b/apolloschurchapp/src/tabs/connect/Connect.js
index 461e03e..5c41b95 100644
--- a/apolloschurchapp/src/tabs/connect/Connect.js
+++ b/apolloschurchapp/src/tabs/connect/Connect.js
@@ -1,39 +1,112 @@
 import React, { PureComponent } from 'react';
 import { ScrollView } from 'react-native';
-import { SafeAreaView } from 'react-navigation';
-import PropTypes from 'prop-types';
+import { Query } from 'react-apollo';
 
-import { HorizontalLikedContentFeedConnected } from '@apollosproject/ui-connected';
-import { BackgroundView } from '@apollosproject/ui-kit';
+import { LoginButton } from 'apolloschurchapp/src/auth';
+import BackgroundView from 'apolloschurchapp/src/ui/BackgroundView';
+import TableView, {
+  Cell,
+  CellIcon,
+  CellText,
+  Divider,
+} from 'apolloschurchapp/src/ui/TableView';
+import { WebBrowserConsumer } from 'apolloschurchapp/src/ui/WebBrowser';
+import Touchable from 'apolloschurchapp/src/ui/Touchable';
+import UserAvatarView from 'apolloschurchapp/src/ui/UserAvatarView';
 
-import ActionTable from './ActionTable';
-import ActionBar from './ActionBar';
-import UserAvatarHeader from './UserAvatarHeader';
+import getLoginState from './getLoginState';
+import getUserProfile from './getUserProfile';
 
 class Connect extends PureComponent {
   static navigationOptions = () => ({
     title: 'Connect',
-    header: null,
+    headerRight: <LoginButton />,
   });
 
-  static propTypes = {
-    navigation: PropTypes.shape({
-      getParam: PropTypes.func,
-      navigate: PropTypes.func,
-    }),
-  };
-
   render() {
     return (
       <BackgroundView>
-        <SafeAreaView>
-          <ScrollView>
-            <UserAvatarHeader />
-            <ActionBar />
-            <HorizontalLikedContentFeedConnected />
-            <ActionTable />
-          </ScrollView>
-        </SafeAreaView>
+        <WebBrowserConsumer>
+          {(openUrl) => (
+            <BackgroundView>
+              <ScrollView>
+                <Query query={getLoginState}>
+                  {({ data: { isLoggedIn = null } }) => {
+                    if (isLoggedIn)
+                      return (
+                        <Query
+                          query={getUserProfile}
+                          fetchPolicy="cache-and-network"
+                        >
+                          {({
+                            data: {
+                              currentUser: {
+                                profile: { photo, firstName, lastName } = {},
+                              } = {},
+                            } = {},
+                            refetch,
+                          }) => (
+                            <UserAvatarView
+                              firstName={firstName}
+                              lastName={lastName}
+                              photo={photo}
+                              refetch={refetch}
+                            />
+                          )}
+                        </Query>
+                      );
+                    return null;
+                  }}
+                </Query>
+                <TableView>
+                  <Touchable
+                    onPress={() =>
+                      openUrl('https://apollosrock.newspring.cc/page/235')
+                    }
+                  >
+                    <Cell>
+                      <CellIcon name="check" />
+                      <CellText>Find a serving opportunity</CellText>
+                    </Cell>
+                  </Touchable>
+                  <Divider />
+                  <Touchable
+                    onPress={() =>
+                      openUrl('https://apollosrock.newspring.cc/page/236')
+                    }
+                  >
+                    <Cell>
+                      <CellIcon name="groups" />
+                      <CellText>Join a small group</CellText>
+                    </Cell>
+                  </Touchable>
+                  <Divider />
+                  <Touchable
+                    onPress={() =>
+                      openUrl('https://apollosrock.newspring.cc/page/233')
+                    }
+                  >
+                    <Cell>
+                      <CellIcon name="share" />
+                      <CellText>I need prayer</CellText>
+                    </Cell>
+                  </Touchable>
+                  <Divider />
+                  <Touchable
+                    onPress={() =>
+                      openUrl('https://apollosrock.newspring.cc/page/186')
+                    }
+                  >
+                    <Cell>
+                      <CellIcon name="download" />
+                      <CellText>I would like to give</CellText>
+                    </Cell>
+                  </Touchable>
+                </TableView>
+              </ScrollView>
+            </BackgroundView>
+          )}
+        </WebBrowserConsumer>
       </BackgroundView>
     );
   }
diff --git a/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeader.js b/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeader.js
deleted file mode 100644
index 5c5e2fa..0000000
--- a/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeader.js
+++ /dev/null
@@ -1,74 +0,0 @@
-import React from 'react';
-import { Query } from 'react-apollo';
-import PropTypes from 'prop-types';
-import { withNavigation } from 'react-navigation';
-import { get } from 'lodash';
-
-import { H3, styled, PaddedView } from '@apollosproject/ui-kit';
-import { UserAvatarConnected } from '@apollosproject/ui-connected';
-import GET_USER_PROFILE from './getUserProfile';
-
-const GetUserProfile = ({ children }) => (
-  <Query query={GET_USER_PROFILE}>
-    {({ data: { currentUser = {} } = {} }) => {
-      const firstName = get(currentUser, 'profile.firstName');
-      return children({ firstName });
-    }}
-  </Query>
-);
-
-GetUserProfile.propTypes = {
-  children: PropTypes.func.isRequired,
-};
-
-const Container = styled({
-  alignItems: 'center',
-  justifyContent: 'center',
-})(PaddedView);
-
-const UserAvatarHeader = ({
-  buttonIcon,
-  message,
-  navigation,
-  onPressIcon,
-  size,
-  ...props
-}) => (
-  <Container>
-    <PaddedView horizontal={false}>
-      <UserAvatarConnected
-        size={size}
-        buttonIcon={buttonIcon}
-        onPressIcon={() => navigation.navigate('UserSettings')}
-        {...props}
-      />
-    </PaddedView>
-    <GetUserProfile>
-      {({ firstName }) => (
-        <H3>
-          {message}
-          {firstName ? ` ${firstName}` : ''}!
-        </H3>
-      )}
-    </GetUserProfile>
-  </Container>
-);
-
-UserAvatarHeader.propTypes = {
-  buttonIcon: PropTypes.string,
-  message: PropTypes.string,
-  navigation: PropTypes.shape({
-    getParam: PropTypes.func,
-    navigate: PropTypes.func,
-  }).isRequired,
-  onPressIcon: PropTypes.func,
-  size: PropTypes.string,
-};
-
-UserAvatarHeader.defaultProps = {
-  buttonIcon: 'settings',
-  message: 'Hello',
-  size: 'large',
-};
-
-export default withNavigation(UserAvatarHeader);
diff --git a/apolloschurchapp/src/tabs/connect/UserAvatarHeader/getUserProfile.js b/apolloschurchapp/src/tabs/connect/UserAvatarHeader/getUserProfile.js
deleted file mode 100644
index e5aa7e0..0000000
--- a/apolloschurchapp/src/tabs/connect/UserAvatarHeader/getUserProfile.js
+++ /dev/null
@@ -1,18 +0,0 @@
-import gql from 'graphql-tag';
-import ApollosConfig from '@apollosproject/config';
-
-export default gql`
-  query CurrentUserProfile {
-    currentUser {
-      id
-      profile {
-        ...UserProfileParts
-        campus {
-          ...CampusParts
-        }
-      }
-    }
-  }
-  ${ApollosConfig.FRAGMENTS.CAMPUS_PARTS_FRAGMENT}
-  ${ApollosConfig.FRAGMENTS.USER_PROFILE_PARTS_FRAGMENT}
-`;
diff --git a/apolloschurchapp/src/tabs/connect/UserAvatarHeader/index.js b/apolloschurchapp/src/tabs/connect/UserAvatarHeader/index.js
deleted file mode 100644
index 01d8628..0000000
--- a/apolloschurchapp/src/tabs/connect/UserAvatarHeader/index.js
+++ /dev/null
@@ -1,5 +0,0 @@
-import UserAvatarHeader from './UserAvatarHeader';
-
-export GET_USER_PROFILE from './getUserProfile';
-
-export default UserAvatarHeader;
diff --git a/apolloschurchapp/src/tabs/connect/getLoginState.js b/apolloschurchapp/src/tabs/connect/getLoginState.js
new file mode 100644
index 0000000..da75449
--- /dev/null
+++ b/apolloschurchapp/src/tabs/connect/getLoginState.js
@@ -0,0 +1,7 @@
+import gql from 'graphql-tag';
+
+export default gql`
+  query {
+    isLoggedIn: authToken @client
+  }
+`;
diff --git a/apolloschurchapp/src/tabs/connect/getUserProfile.js b/apolloschurchapp/src/tabs/connect/getUserProfile.js
new file mode 100644
index 0000000..fb9facf
--- /dev/null
+++ b/apolloschurchapp/src/tabs/connect/getUserProfile.js
@@ -0,0 +1,17 @@
+import gql from 'graphql-tag';
+
+export default gql`
+  query {
+    currentUser {
+      id
+      profile {
+        firstName
+        lastName
+        email
+        photo {
+          uri
+        }
+      }
+    }
+  }
+`;
diff --git a/apolloschurchapp/src/tabs/connect/index.js b/apolloschurchapp/src/tabs/connect/index.js
index 8e98a1e..6837cb4 100644
--- a/apolloschurchapp/src/tabs/connect/index.js
+++ b/apolloschurchapp/src/tabs/connect/index.js
@@ -1,40 +1,20 @@
 import { createStackNavigator } from 'react-navigation';
-import { withTheme } from '@apollosproject/ui-kit';
-import { LikedContentFeedConnected } from '@apollosproject/ui-connected';
-
-import UserSettings from '../../user-settings';
-import TestingControlPanel from '../../testing-control-panel';
 
 import tabBarIcon from '../tabBarIcon';
+
 import Connect from './Connect';
 
 const ConnectNavigator = createStackNavigator(
   {
     Connect,
-    TestingControlPanel,
-    UserSettings,
-    LikedContentFeedConnected,
   },
   {
     initialRouteName: 'Connect',
-    headerMode: 'screen',
-    defaultNavigationOptions: ({ screenProps }) => ({
-      headerTintColor: screenProps.headerTintColor,
-      headerTitleStyle: screenProps.headerTitleStyle,
-    }),
-    navigationOptions: { tabBarIcon: tabBarIcon('profile') },
   }
 );
 
-const EnhancedConnect = withTheme(({ theme, ...props }) => ({
-  ...props,
-  screenProps: {
-    headerTintColor: theme.colors.action.secondary,
-    headerTitleStyle: {
-      color: theme.colors.text.primary,
-    },
-    headerBackgroundColor: theme.colors.background.paper,
-  },
-}))(ConnectNavigator);
+ConnectNavigator.navigationOptions = {
+  tabBarIcon: tabBarIcon('profile'),
+};
 
-export default EnhancedConnect;
+export default ConnectNavigator;
diff --git a/apolloschurchapp/src/tabs/discover/Discover.js b/apolloschurchapp/src/tabs/discover/Discover.js
index bb93dad..6bb4545 100644
--- a/apolloschurchapp/src/tabs/discover/Discover.js
+++ b/apolloschurchapp/src/tabs/discover/Discover.js
@@ -1,85 +1,63 @@
-import React, { useState } from 'react';
-
-import SafeAreaView from 'react-native-safe-area-view';
-import PropTypes from 'prop-types';
-import gql from 'graphql-tag';
+import React, { PureComponent } from 'react';
 import { Query } from 'react-apollo';
+import { get } from 'lodash';
 
-import { throttle } from 'lodash';
-
-import { BackgroundView } from '@apollosproject/ui-kit';
-import {
-  FeaturesFeedConnected,
-  FEATURE_FEED_ACTION_MAP,
-  RockAuthedWebBrowser,
-  SearchInputHeader,
-  SearchFeedConnected,
-} from '@apollosproject/ui-connected';
+import FeedView from 'apolloschurchapp/src/ui/FeedView';
+import BackgroundView from 'apolloschurchapp/src/ui/BackgroundView';
 
-function handleOnPress({ action, ...props }) {
-  if (FEATURE_FEED_ACTION_MAP[action]) {
-    FEATURE_FEED_ACTION_MAP[action]({ action, ...props });
-  }
-  // If you add additional actions, you can handle them here.
-  // Or add them to the FEATURE_FEED_ACTION_MAP, with the syntax
-  // { [ActionName]: function({ relatedNode, action, ...FeatureFeedConnectedProps}) }
-}
+import TileContentFeed from './TileContentFeed';
+import getContentChannels from './getContentChannels';
 
-// getHomeFeed uses the HOME_FEATURES in the config.yml
-// You can also hardcode an ID if you are confident it will never change
-// Or use some other strategy to get a FeatureFeed.id
-export const GET_DISCOVER_FEED = gql`
-  query getDiscoverFeatureFeed {
-    discoverFeedFeatures {
-      id
-    }
-  }
-`;
+const childContentItemLoadingState = {
+  title: '',
+  isLoading: true,
+};
 
-function Discover({ navigation }) {
-  const [searchText, setSearchText] = useState('');
-  const [isFocused, setIsFocused] = useState(false);
+const feedItemLoadingState = {
+  name: '',
+  isLoading: true,
+};
 
-  return (
-    <RockAuthedWebBrowser>
-      {(openUrl) => (
-        <BackgroundView>
-          <SafeAreaView>
-            <SearchInputHeader
-              onChangeText={throttle(setSearchText, 300)}
-              onFocus={setIsFocused}
-            />
-            {isFocused || searchText ? (
-              <SearchFeedConnected searchText={searchText} />
-            ) : (
-              <Query query={GET_DISCOVER_FEED}>
-                {({ data }) => (
-                  <FeaturesFeedConnected
-                    openUrl={openUrl}
-                    navigation={navigation}
-                    featureFeedId={data?.discoverFeedFeatures?.id}
-                    onPressActionItem={handleOnPress}
-                  />
-                )}
-              </Query>
-            )}
-          </SafeAreaView>
-        </BackgroundView>
+class Discover extends PureComponent {
+  renderItem = ({ item }) => (
+    <TileContentFeed
+      id={item.id}
+      name={item.name}
+      content={get(item, 'childContentItemsConnection.edges', []).map(
+        (edge) => edge.node
       )}
-    </RockAuthedWebBrowser>
+      isLoading={item.isLoading}
+      loadingStateObject={childContentItemLoadingState}
+    />
   );
-}
 
-Discover.navigationOptions = () => ({
-  header: null,
-});
+  render() {
+    return (
+      <BackgroundView>
+        <Query query={getContentChannels} fetchPolicy="cache-and-network">
+          {({
+            error,
+            loading,
+            data: { contentChannels = [] } = {},
+            refetch,
+          }) => (
+            <FeedView
+              error={error}
+              content={contentChannels}
+              isLoading={loading}
+              refetch={refetch}
+              renderItem={this.renderItem}
+              loadingStateObject={feedItemLoadingState}
+            />
+          )}
+        </Query>
+      </BackgroundView>
+    );
+  }
+}
 
-Discover.propTypes = {
-  navigation: PropTypes.shape({
-    getParam: PropTypes.func,
-    setParams: PropTypes.func,
-    navigate: PropTypes.func,
-  }),
+Discover.navigationOptions = {
+  title: 'Discover',
 };
 
 export default Discover;
diff --git a/apolloschurchapp/src/tabs/discover/TileContentFeed.js b/apolloschurchapp/src/tabs/discover/TileContentFeed.js
new file mode 100644
index 0000000..973eef1
--- /dev/null
+++ b/apolloschurchapp/src/tabs/discover/TileContentFeed.js
@@ -0,0 +1,68 @@
+import React from 'react';
+import { withNavigation } from 'react-navigation';
+import PropTypes from 'prop-types';
+
+import PaddedView from 'apolloschurchapp/src/ui/PaddedView';
+import { H4 } from 'apolloschurchapp/src/ui/typography';
+import HorizontalTileFeed from 'apolloschurchapp/src/ui/HorizontalTileFeed';
+import styled from 'apolloschurchapp/src/ui/styled';
+import { ButtonLink } from 'apolloschurchapp/src/ui/Button';
+
+import TileImageItem from './TileImageItem';
+
+const RowHeader = styled({
+  flexDirection: 'row',
+  justifyContent: 'space-between',
+  alignItems: 'center',
+  paddingVertical: 0,
+})(PaddedView);
+
+const TileContentFeed = ({ isLoading, id, name, navigation, content = [] }) => (
+  <PaddedView horizontal={false}>
+    <RowHeader>
+      <H4 isLoading={isLoading}>{name}</H4>
+      {!isLoading ? (
+        <ButtonLink
+          onPress={() => {
+            navigation.navigate('ContentFeed', {
+              itemId: id,
+              itemTitle: name,
+            });
+          }}
+        >
+          View All
+        </ButtonLink>
+      ) : null}
+    </RowHeader>
+    <HorizontalTileFeed
+      content={content}
+      renderItem={({ item }) => (
+        <TileImageItem
+          item={item}
+          isLoading={isLoading}
+          navigation={navigation}
+        />
+      )}
+      loadingStateObject={{
+        id: 'fake_id',
+        title: '',
+        coverImage: [],
+      }}
+      isLoading={isLoading}
+    />
+  </PaddedView>
+);
+
+TileContentFeed.propTypes = {
+  navigation: PropTypes.shape({
+    navigate: PropTypes.func,
+  }),
+  isLoading: PropTypes.bool,
+  id: PropTypes.string,
+  name: PropTypes.string,
+  content: PropTypes.arrayOf(
+    PropTypes.any // this component doesn't care about the shape of `node`, just that it exists
+  ),
+};
+
+export default withNavigation(TileContentFeed);
diff --git a/apolloschurchapp/src/tabs/discover/TileImageItem.js b/apolloschurchapp/src/tabs/discover/TileImageItem.js
new file mode 100644
index 0000000..6cb2af2
--- /dev/null
+++ b/apolloschurchapp/src/tabs/discover/TileImageItem.js
@@ -0,0 +1,42 @@
+import React from 'react';
+import { View } from 'react-native';
+import PropTypes from 'prop-types';
+
+import TileImage from 'apolloschurchapp/src/ui/TileImage';
+import styled from 'apolloschurchapp/src/ui/styled';
+
+const Container = styled(({ theme }) => ({
+  flex: 1,
+  padding: theme.sizing.baseUnit / 2,
+}))(View);
+
+const TileImageItem = ({
+  item: { id, title, coverImage = {}, sharing } = {},
+  isLoading,
+  navigation,
+}) => (
+  <Container>
+    <TileImage
+      onPressItem={() =>
+        navigation.navigate('ContentSingle', {
+          itemId: id,
+          sharing,
+        })
+      }
+      isLoading={isLoading}
+      key={id}
+      text={title}
+      image={coverImage && coverImage.sources}
+    />
+  </Container>
+);
+
+TileImageItem.propTypes = {
+  item: PropTypes.shape({}),
+  navigation: PropTypes.shape({
+    navigate: PropTypes.func,
+  }),
+  isLoading: PropTypes.bool,
+};
+
+export default TileImageItem;
diff --git a/apolloschurchapp/src/tabs/discover/discover.tests.js b/apolloschurchapp/src/tabs/discover/discover.tests.js
new file mode 100644
index 0000000..96f2fde
--- /dev/null
+++ b/apolloschurchapp/src/tabs/discover/discover.tests.js
@@ -0,0 +1,170 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+import { createStackNavigator } from 'react-navigation';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import Discover from './Discover';
+import getContentChannels from './getContentChannels';
+
+describe('Test the Discover Component Query', () => {
+  it('Should retrieve the Content Channel Feeds', () => {
+    const mock = {
+      request: {
+        query: getContentChannels,
+      },
+      result: {
+        data: {
+          contentChannels: [
+            {
+              id: 'ContentChannel:4f68015ba18662a7409d1219a4ce013e',
+              name: 'Editorial',
+              childContentItemsConnection: {
+                edges: [
+                  {
+                    node: {
+                      id:
+                        'UniversalContentItem:d57994350b9d213866b24dea3a97433d',
+                      title: 'Mea Animal Aperiam Ornatus Eu',
+                      coverImage: null,
+                    },
+                  },
+                  {
+                    node: {
+                      id:
+                        'UniversalContentItem:b36e55d803443431e96bb4b5068147ec',
+                      title: 'Probo Senserit Id Mea, Ut Sed Malis Postea,',
+                      coverImage: null,
+                    },
+                  },
+                  {
+                    node: {
+                      id:
+                        'UniversalContentItem:57c465ee3cd69524d729569b338607de',
+                      title: 'Ea Harum Albucius Mel',
+                      coverImage: null,
+                    },
+                  },
+                ],
+              },
+            },
+            {
+              id: 'ContentChannel:a0f64573eabf00a607bec911794d50fb',
+              name: 'Sermon Series',
+              childContentItemsConnection: {
+                edges: [
+                  {
+                    node: {
+                      id:
+                        'UniversalContentItem:1c627c20911791321f819125a65c3c9d',
+                      title: 'Money Wise',
+                      coverImage: {
+                        sources: [
+                          {
+                            uri:
+                              'https://apollosrock.newspring.cc/GetImage.ashx?guid=33e4c568-a456-4250-a8dc-6a4ceb548455',
+                          },
+                        ],
+                      },
+                    },
+                  },
+                  {
+                    node: {
+                      id:
+                        'UniversalContentItem:66a4d75b02b447556e4e3806430a9946',
+                      title: 'Momentum',
+                      coverImage: {
+                        sources: [
+                          {
+                            uri:
+                              'https://apollosrock.newspring.cc/GetImage.ashx?guid=F3F2E438-2AE8-4EF4-980B-709463691296',
+                          },
+                        ],
+                      },
+                    },
+                  },
+                  {
+                    node: {
+                      id:
+                        'UniversalContentItem:22c861a5d54d09634018f7eb132c452e',
+                      title: 'Miracles in Luke',
+                      coverImage: {
+                        sources: [
+                          {
+                            uri:
+                              'https://apollosrock.newspring.cc/GetImage.ashx?guid=EDFDBD47-BBE8-4BE9-8D3F-CC0059BD4CCC',
+                          },
+                        ],
+                      },
+                    },
+                  },
+                ],
+              },
+            },
+            {
+              id: 'ContentChannel:7fba1b1ee253e0fd5f0795b4b8b1175e',
+              name: 'Devotion Series',
+              childContentItemsConnection: {
+                edges: [
+                  {
+                    node: {
+                      id:
+                        'UniversalContentItem:678b4a38968fc6004dd8b23e586c923e',
+                      title: 'Psalms: A 28-Day Devotional',
+                      coverImage: {
+                        sources: [
+                          {
+                            uri:
+                              'https://apollosrock.newspring.cc/GetImage.ashx?guid=ed857076-2623-4fdc-8476-50b3a60e0b68',
+                          },
+                        ],
+                      },
+                    },
+                  },
+                  {
+                    node: {
+                      id:
+                        'UniversalContentItem:0f361c619b7e5dd511da181069498250',
+                      title: '2 Samuel: A 5-Week Devotional',
+                      coverImage: {
+                        sources: [
+                          {
+                            uri:
+                              'https://apollosrock.newspring.cc/GetImage.ashx?guid=aa68b674-9cf4-4f8a-8702-9564a4a9fa7b',
+                          },
+                        ],
+                      },
+                    },
+                  },
+                  {
+                    node: {
+                      id:
+                        'UniversalContentItem:bc1002007d482c412962ad6b1f24901a',
+                      title: '#MomLife: An 8-Day Devotional',
+                      coverImage: {
+                        sources: [
+                          {
+                            uri:
+                              'https://apollosrock.newspring.cc/GetImage.ashx?guid=65dfddf1-c146-4599-bdb7-a8f53bf8fed2',
+                          },
+                        ],
+                      },
+                    },
+                  },
+                ],
+              },
+            },
+          ],
+        },
+      },
+    };
+
+    const DiscoverWithNavigation = createStackNavigator({ Discover });
+    const tree = renderer.create(
+      <Providers mocks={[mock]}>
+        <DiscoverWithNavigation />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/tabs/discover/getContentChannels.js b/apolloschurchapp/src/tabs/discover/getContentChannels.js
new file mode 100644
index 0000000..c5d2793
--- /dev/null
+++ b/apolloschurchapp/src/tabs/discover/getContentChannels.js
@@ -0,0 +1,28 @@
+import gql from 'graphql-tag';
+
+export default gql`
+  query getContentChannels {
+    contentChannels {
+      id
+      name
+      childContentItemsConnection(first: 3) {
+        edges {
+          node {
+            id
+            title
+            coverImage {
+              sources {
+                uri
+              }
+            }
+            sharing {
+              title
+              message
+              url
+            }
+          }
+        }
+      }
+    }
+  }
+`;
diff --git a/apolloschurchapp/src/tabs/discover/index.js b/apolloschurchapp/src/tabs/discover/index.js
index ef97b0a..bcfae50 100644
--- a/apolloschurchapp/src/tabs/discover/index.js
+++ b/apolloschurchapp/src/tabs/discover/index.js
@@ -1,36 +1,23 @@
 import { createStackNavigator } from 'react-navigation';
-import { withTheme } from '@apollosproject/ui-kit';
 
-import ContentFeed from '../../content-feed';
+import ContentFeed from 'apolloschurchapp/src/content-feed';
 
 import tabBarIcon from '../tabBarIcon';
 
 import Discover from './Discover';
 
-const DiscoverNavigator = createStackNavigator(
+export const DiscoverNavigator = createStackNavigator(
   {
     Discover,
     ContentFeed,
   },
   {
     initialRouteName: 'Discover',
-    defaultNavigationOptions: ({ screenProps }) => ({
-      headerTintColor: screenProps.headerTintColor,
-      headerTitleStyle: screenProps.headerTitleStyle,
-    }),
-    navigationOptions: { tabBarIcon: tabBarIcon('sections') },
   }
 );
 
-const EnhancedDiscover = withTheme(({ theme, ...props }) => ({
-  ...props,
-  screenProps: {
-    headerTintColor: theme.colors.action.secondary,
-    headerTitleStyle: {
-      color: theme.colors.text.primary,
-    },
-    headerBackgroundColor: theme.colors.background.paper,
-  },
-}))(DiscoverNavigator);
+DiscoverNavigator.navigationOptions = {
+  tabBarIcon: tabBarIcon('sections'),
+};
 
-export default EnhancedDiscover;
+export default DiscoverNavigator;
diff --git a/apolloschurchapp/src/tabs/home/Home.js b/apolloschurchapp/src/tabs/home/Home.js
index d9fa499..4794458 100644
--- a/apolloschurchapp/src/tabs/home/Home.js
+++ b/apolloschurchapp/src/tabs/home/Home.js
@@ -1,47 +1,23 @@
 import React, { PureComponent } from 'react';
-import { Image } from 'react-native';
-import SafeAreaView from 'react-native-safe-area-view';
-import PropTypes from 'prop-types';
-import gql from 'graphql-tag';
 import { Query } from 'react-apollo';
+import { get } from 'lodash';
+import PropTypes from 'prop-types';
 
-import { styled, BackgroundView } from '@apollosproject/ui-kit';
-import {
-  FeaturesFeedConnected,
-  FEATURE_FEED_ACTION_MAP,
-  RockAuthedWebBrowser,
-} from '@apollosproject/ui-connected';
-
-const LogoTitle = styled(({ theme }) => ({
-  height: theme.sizing.baseUnit,
-  margin: theme.sizing.baseUnit,
-  alignSelf: 'center',
-  resizeMode: 'contain',
-}))(Image);
+import { withTheme } from 'apolloschurchapp/src/ui/theme';
+import FeedView from 'apolloschurchapp/src/ui/FeedView';
+import BackgroundView from 'apolloschurchapp/src/ui/BackgroundView';
 
-function handleOnPress({ action, ...props }) {
-  if (FEATURE_FEED_ACTION_MAP[action]) {
-    FEATURE_FEED_ACTION_MAP[action]({ action, ...props });
-  }
-  // If you add additional actions, you can handle them here.
-  // Or add them to the FEATURE_FEED_ACTION_MAP, with the syntax
-  // { [ActionName]: function({ relatedNode, action, ...FeatureFeedConnectedProps}) }
-}
+import { LiveButton } from '../../live';
 
-// getHomeFeed uses the HOME_FEATURES in the config.yml
-// You can also hardcode an ID if you are confident it will never change
-// Or use some other strategy to get a FeatureFeed.id
-export const GET_HOME_FEED = gql`
-  query getHomeFeatureFeed {
-    homeFeedFeatures {
-      id
-    }
-  }
-`;
+import getUserFeed from './getUserFeed';
 
 class Home extends PureComponent {
-  static navigationOptions = () => ({
-    header: null,
+  static navigationOptions = ({ navigation }) => ({
+    title: 'Apollos Church',
+    headerStyle: {
+      backgroundColor: navigation.getParam('backgroundColor'),
+    },
+    headerTintColor: navigation.getParam('tintColor'),
   });
 
   static propTypes = {
@@ -50,33 +26,47 @@ class Home extends PureComponent {
       setParams: PropTypes.func,
       navigate: PropTypes.func,
     }),
+    headerBackgroundColor: PropTypes.string,
+    headerTintColor: PropTypes.string,
   };
 
+  constructor(props) {
+    super(props);
+
+    props.navigation.setParams({
+      backgroundColor: props.headerBackgroundColor,
+      tintColor: props.headerTintColor,
+    });
+  }
+
+  handleOnPress = (item) =>
+    this.props.navigation.navigate('ContentSingle', {
+      itemId: item.id,
+      sharing: item.sharing,
+    });
+
   render() {
     return (
-      <RockAuthedWebBrowser>
-        {(openUrl) => (
-          <BackgroundView>
-            <SafeAreaView>
-              <Query query={GET_HOME_FEED}>
-                {({ data }) => (
-                  <FeaturesFeedConnected
-                    openUrl={openUrl}
-                    navigation={this.props.navigation}
-                    featureFeedId={data?.homeFeedFeatures?.id}
-                    onPressActionItem={handleOnPress}
-                    ListHeaderComponent={
-                      <LogoTitle source={require('./wordmark.png')} />
-                    }
-                  />
-                )}
-              </Query>
-            </SafeAreaView>
-          </BackgroundView>
-        )}
-      </RockAuthedWebBrowser>
+      <BackgroundView>
+        <Query query={getUserFeed} fetchPolicy="cache-and-network">
+          {({ loading, error, data, refetch }) => (
+            <FeedView
+              content={get(data, 'userFeed.edges', []).map((edge) => edge.node)}
+              isLoading={loading}
+              error={error}
+              refetch={refetch}
+              ListHeaderComponent={LiveButton}
+              onPressItem={this.handleOnPress}
+            />
+          )}
+        </Query>
+      </BackgroundView>
     );
   }
 }
 
-export default Home;
+export default withTheme(({ theme, ...otherProps }) => ({
+  headerBackgroundColor: theme.colors.primary,
+  headerTintColor: theme.colors.background.paper,
+  ...otherProps,
+}))(Home);
diff --git a/apolloschurchapp/src/tabs/home/getUserFeed.js b/apolloschurchapp/src/tabs/home/getUserFeed.js
new file mode 100644
index 0000000..4c70a22
--- /dev/null
+++ b/apolloschurchapp/src/tabs/home/getUserFeed.js
@@ -0,0 +1,32 @@
+import gql from 'graphql-tag';
+
+export default gql`
+  query getUserFeed {
+    userFeed {
+      edges {
+        node {
+          __typename
+          id
+          coverImage {
+            name
+            sources {
+              uri
+            }
+          }
+          parentChannel {
+            id
+            name
+            iconName
+          }
+          sharing {
+            title
+            message
+            url
+          }
+          isLiked
+          title
+        }
+      }
+    }
+  }
+`;
diff --git a/apolloschurchapp/src/tabs/home/home.tests.js b/apolloschurchapp/src/tabs/home/home.tests.js
new file mode 100644
index 0000000..e9f98c5
--- /dev/null
+++ b/apolloschurchapp/src/tabs/home/home.tests.js
@@ -0,0 +1,79 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import Home from './Home';
+import getUserFeed from './getUserFeed';
+
+describe('User Home Feed Query', () => {
+  it('should return correct query results', () => {
+    const mock = {
+      request: {
+        query: getUserFeed,
+      },
+      result: {
+        data: {
+          userFeed: {
+            edges: [
+              {
+                node: {
+                  __typename: 'UniversalContentItem',
+                  id: 'UniversalContentItem:678b4a38968fc6004dd8b23e586c923e',
+                  coverImage: {
+                    name: 'Square Image',
+                    sources: [
+                      {
+                        uri:
+                          'https://apollosrock.newspring.cc/GetImage.ashx?guid=ed857076-2623-4fdc-8476-50b3a60e0b68',
+                      },
+                    ],
+                  },
+                  parentChannel: {
+                    id: 'ContentChannel:7fba1b1ee253e0fd5f0795b4b8b1175e',
+                    name: 'Devotion Series',
+                    iconName: 'text',
+                  },
+                  title: 'Psalms: A 28-Day Devotional',
+                },
+              },
+              {
+                node: {
+                  __typename: 'UniversalContentItem',
+                  id: 'UniversalContentItem:0f361c619b7e5dd511da181069498250',
+                  coverImage: {
+                    name: 'Square Image',
+                    sources: [
+                      {
+                        uri:
+                          'https://apollosrock.newspring.cc/GetImage.ashx?guid=aa68b674-9cf4-4f8a-8702-9564a4a9fa7b',
+                      },
+                    ],
+                  },
+                  parentChannel: {
+                    id: 'ContentChannel:7fba1b1ee253e0fd5f0795b4b8b1175e',
+                    name: 'Devotion Series',
+                    iconName: 'text',
+                  },
+                  title: '2 Samuel: A 5-Week Devotional',
+                },
+              },
+            ],
+          },
+        },
+      },
+    };
+
+    const navigation = {
+      getParam: jest.fn(),
+      setParams: jest.fn(),
+      navigate: jest.fn(),
+    };
+    const tree = renderer.create(
+      <Providers mocks={[mock]} addTypename={false}>
+        <Home navigation={navigation} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/tabs/home/wordmark.png b/apolloschurchapp/src/tabs/home/wordmark.png
deleted file mode 100644
index 93229c35ef61c3842a7bf0acb5c9ed910093adb0..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 8241
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

diff --git a/apolloschurchapp/src/tabs/index.js b/apolloschurchapp/src/tabs/index.js
index ff11787..61d8673 100644
--- a/apolloschurchapp/src/tabs/index.js
+++ b/apolloschurchapp/src/tabs/index.js
@@ -14,10 +14,11 @@ const TabNavigator = createBottomTabNavigator(
   },
   {
     tabBarComponent: TabBar,
-    lazy: true,
-    removeClippedSubviews: true,
-    navigationOptions: { header: null },
   }
 );
 
+TabNavigator.navigationOptions = {
+  header: null,
+};
+
 export default TabNavigator;
diff --git a/apolloschurchapp/src/tabs/tabBar.js b/apolloschurchapp/src/tabs/tabBar.js
index 636293d..effdefc 100644
--- a/apolloschurchapp/src/tabs/tabBar.js
+++ b/apolloschurchapp/src/tabs/tabBar.js
@@ -1,22 +1,57 @@
+import React from 'react';
 import { compose } from 'recompose';
-import { BottomTabBar } from 'react-navigation';
+import { Platform, View } from 'react-native';
+import { BottomTabBar } from 'react-navigation-tabs';
+import { Query } from 'react-apollo';
+import gql from 'graphql-tag';
+import { get } from 'lodash';
+import DeviceInfo from 'react-native-device-info';
 
-import { withTabBarMediaSpacer } from '@apollosproject/ui-media-player';
-import { styled, withTheme } from '@apollosproject/ui-kit';
+import { MINI_PLAYER_HEIGHT } from 'apolloschurchapp/src/ui/MediaPlayer';
+import styled from 'apolloschurchapp/src/ui/styled';
+import { withTheme } from 'apolloschurchapp/src/ui/theme';
+
+const mediaPlayerIsVisibleQuery = gql`
+  query {
+    mediaPlayer @client {
+      isVisible
+    }
+  }
+`;
+
+const isPhoneX = DeviceInfo.getModel() === 'iPhone X';
+
+// Some devices need more "spacing" at the bottom of the screen. This helps account for that
+const DEVICE_OFFSET = isPhoneX ? 10 : 0;
+
+const TabBarWrapper = styled(({ theme, mediaPlayerIsVisible }) => ({
+  paddingBottom: mediaPlayerIsVisible ? MINI_PLAYER_HEIGHT - DEVICE_OFFSET : 0,
+  backgroundColor: mediaPlayerIsVisible
+    ? theme.colors.screen
+    : theme.colors.paper,
+  ...Platform.select(theme.shadows.default),
+}))(View);
 
 const ThemedBottomTabBar = compose(
   withTheme(({ theme }) => ({
-    showLabel: true,
+    showLabel: false,
     activeTintColor: theme.colors.secondary,
     inactiveTintColor: theme.colors.text.tertiary,
-    safeAreaInset: { bottom: 0 },
   })),
   styled(({ theme }) => ({
     borderTopWidth: 0,
-    backgroundColor: theme.colors.background.paper,
-    marginTop: theme.sizing.baseUnit * 0.3125,
-  })),
-  withTabBarMediaSpacer
+    backgroundColor: theme.colors.transparent,
+  }))
 )(BottomTabBar);
 
-export default ThemedBottomTabBar;
+const TabBar = (props) => (
+  <Query query={mediaPlayerIsVisibleQuery}>
+    {({ data = {} }) => (
+      <TabBarWrapper mediaPlayerIsVisible={get(data, 'mediaPlayer.isVisible')}>
+        <ThemedBottomTabBar {...props} />
+      </TabBarWrapper>
+    )}
+  </Query>
+);
+
+export default TabBar;
diff --git a/apolloschurchapp/src/tabs/tabBarIcon.js b/apolloschurchapp/src/tabs/tabBarIcon.js
index 0d6e4ca..411c446 100644
--- a/apolloschurchapp/src/tabs/tabBarIcon.js
+++ b/apolloschurchapp/src/tabs/tabBarIcon.js
@@ -1,7 +1,7 @@
 import React from 'react';
 import PropTypes from 'prop-types';
 
-import { Icon } from '@apollosproject/ui-kit';
+import Icon from 'apolloschurchapp/src/ui/Icon';
 
 const tabBarIcon = (name) => {
   function TabBarIcon({ tintColor }) {
diff --git a/apolloschurchapp/src/testing-control-panel/TouchableCell.js b/apolloschurchapp/src/testing-control-panel/TouchableCell.js
deleted file mode 100644
index bfe51df..0000000
--- a/apolloschurchapp/src/testing-control-panel/TouchableCell.js
+++ /dev/null
@@ -1,20 +0,0 @@
-import React from 'react';
-import PropType from 'prop-types';
-import { Touchable, Cell, CellIcon, CellText } from '@apollosproject/ui-kit';
-
-const TouchableCell = ({ iconName, cellText, handlePress }) => (
-  <Touchable onPress={handlePress}>
-    <Cell>
-      <CellIcon name={iconName} />
-      <CellText>{cellText}</CellText>
-    </Cell>
-  </Touchable>
-);
-
-TouchableCell.propTypes = {
-  iconName: PropType.string.isRequired,
-  cellText: PropType.string.isRequired,
-  handlePress: PropType.func.isRequired,
-};
-
-export default TouchableCell;
diff --git a/apolloschurchapp/src/testing-control-panel/TouchableCell.tests.js b/apolloschurchapp/src/testing-control-panel/TouchableCell.tests.js
deleted file mode 100644
index e187cb0..0000000
--- a/apolloschurchapp/src/testing-control-panel/TouchableCell.tests.js
+++ /dev/null
@@ -1,21 +0,0 @@
-import React from 'react';
-import renderer from 'react-test-renderer';
-
-import Providers from '../Providers';
-
-import TouchableCell from './TouchableCell';
-
-describe('touchable cell', () => {
-  it('renders the cell, icon, and text', () => {
-    const tree = renderer.create(
-      <Providers>
-        <TouchableCell
-          cellText="This is a cell"
-          iconName="play"
-          handlePress={() => ({})}
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/testing-control-panel/index.js b/apolloschurchapp/src/testing-control-panel/index.js
deleted file mode 100644
index f7027a1..0000000
--- a/apolloschurchapp/src/testing-control-panel/index.js
+++ /dev/null
@@ -1,26 +0,0 @@
-import React, { PureComponent } from 'react';
-import { TableView } from '@apollosproject/ui-kit';
-import TouchableCell from './TouchableCell';
-
-export default class TestingControlPanel extends PureComponent {
-  static navigationOptions = ({ screenProps }) => ({
-    title: 'Testing Control Panel',
-    headerStyle: {
-      backgroundColor: screenProps.headerBackgroundColor,
-      borderBottomWidth: 0,
-      elevation: 0,
-    },
-  });
-
-  render() {
-    return (
-      <TableView>
-        <TouchableCell
-          handlePress={() => this.props.navigation.navigate('Onboarding')}
-          iconName="Avatar"
-          cellText={`Launch Onboarding`}
-        />
-      </TableView>
-    );
-  }
-}
diff --git a/apolloschurchapp/src/theme/icons/index.js b/apolloschurchapp/src/theme/icons/index.js
deleted file mode 100644
index 79e948a..0000000
--- a/apolloschurchapp/src/theme/icons/index.js
+++ /dev/null
@@ -1,2 +0,0 @@
-/* Export your custom icon components here. */
-export {};
diff --git a/apolloschurchapp/src/theme/index.js b/apolloschurchapp/src/theme/index.js
deleted file mode 100644
index 9ccfc4a..0000000
--- a/apolloschurchapp/src/theme/index.js
+++ /dev/null
@@ -1,4 +0,0 @@
-import theme from './theme';
-import * as customIcons from './icons';
-
-export { theme as default, customIcons };
diff --git a/apolloschurchapp/src/theme/propOverrides.js b/apolloschurchapp/src/theme/propOverrides.js
deleted file mode 100644
index 6d46cc8..0000000
--- a/apolloschurchapp/src/theme/propOverrides.js
+++ /dev/null
@@ -1,2 +0,0 @@
-/* Export your custom prop overrides here. */
-export {};
diff --git a/apolloschurchapp/src/theme/styleOverrides.js b/apolloschurchapp/src/theme/styleOverrides.js
deleted file mode 100644
index 3599e30..0000000
--- a/apolloschurchapp/src/theme/styleOverrides.js
+++ /dev/null
@@ -1,2 +0,0 @@
-/* Export your custom style overrides here. */
-export {};
diff --git a/apolloschurchapp/src/theme/theme.js b/apolloschurchapp/src/theme/theme.js
deleted file mode 100644
index b2aeb3c..0000000
--- a/apolloschurchapp/src/theme/theme.js
+++ /dev/null
@@ -1,59 +0,0 @@
-// import styleOverrides from './styleOverrides';
-// import propOverrides from './propOverrides';
-
-/* Add your custom theme definitions below. Anything that is supported in UI-Kit Theme can be
- overridden and/or customized here! */
-
-/* Base colors.
- * These get used by theme types (see /types directory) to color
- * specific parts of the interface. For more control on how certain
- * elements are colored, go there. The next level of control comes
- * on a per-component basis with "overrides"
- */
-// const colors = {};
-
-/* Base Typography sizing and fonts.
- * To control speicfic styles used on different type components (like H1, H2, etc), see "overrides"
- */
-// const typography = {};
-
-/* Responsive breakpoints */
-// export const breakpoints = {};
-
-/* Base sizing units. These are used to scale
- * space, and size components relatively to one another.
- */
-// export const sizing = {};
-
-/* Base alpha values. These are used to keep transparent values across the app consistant */
-// export const alpha = {};
-
-/* Base overlays. These are used as configuration for LinearGradients across the app */
-// export const overlays = () => ({});
-
-/* Overrides allow you to override the styles of any component styled using the `styled` HOC. You
- * can also override the props of any component using the `withTheme` HOC. See examples below:
- * ```const StyledComponent = styled({ margin: 10, padding: 20 }, 'StyledComponent');
- *    const PropsComponent = withTheme(({ theme }) => ({ fill: theme.colors.primary }), 'PropsComponent');
- * ```
- * These componnents can have their styles/props overriden by including the following overrides:
- * ```{
- *   overides: {
- *     StyledComponent: {
- *       margin: 5,
- *       padding: 15,
- *     },
- *     // #protip: you even have access 👇to component props! This applies to style overrides too 💥
- *     PropsComponent: () => ({ theme, isActive }) => ({
- *       fill: isActive ? theme.colors.secondary : theme.colors.primary,
- *     }),
- *   },
- * }
- * ```
- */
-// const overrides = {
-//   ...styleOverrides,
-//   ...propOverrides,
-// };
-
-export default {};
diff --git a/apolloschurchapp/src/ui/ActivityIndicator/index.js b/apolloschurchapp/src/ui/ActivityIndicator/index.js
new file mode 100644
index 0000000..434201d
--- /dev/null
+++ b/apolloschurchapp/src/ui/ActivityIndicator/index.js
@@ -0,0 +1,20 @@
+import {
+  ActivityIndicator as NativeActivityIndicator,
+  StyleSheet,
+} from 'react-native';
+
+import styled from 'apolloschurchapp/src/ui/styled';
+
+const ActivityIndicator = styled(
+  {
+    flex: 1,
+    ...StyleSheet.absoluteFillObject,
+    alignSelf: 'center',
+  },
+  'ActivityIndicator'
+)(NativeActivityIndicator);
+
+export {
+  ActivityIndicator as default,
+  NativeActivityIndicator as InlineActivityIndicator,
+};
diff --git a/apolloschurchapp/src/ui/Avatar/Avatar.stories.js b/apolloschurchapp/src/ui/Avatar/Avatar.stories.js
new file mode 100644
index 0000000..7d7f7bb
--- /dev/null
+++ b/apolloschurchapp/src/ui/Avatar/Avatar.stories.js
@@ -0,0 +1,19 @@
+import React from 'react';
+import { storiesOf } from '@storybook/react-native';
+
+import FlexedView from 'apolloschurchapp/src/ui/FlexedView';
+
+import Avatar from '.';
+
+const source = {
+  uri:
+    'https://dg0ddngxdz549.cloudfront.net/images/cached/images/remote/http_s3.amazonaws.com/ns.images/all/member_images/members.nophoto_1000_1000_90_c1.jpg',
+};
+/* eslint-disable react-native/no-inline-styles */
+storiesOf('Avatar', module).add('default', () => (
+  <FlexedView style={{ flexWrap: 'wrap', flexDirection: 'row' }}>
+    <Avatar source={source} size="small" />
+    <Avatar source={source} size="medium" />
+    <Avatar source={source} size="large" />
+  </FlexedView>
+));
diff --git a/apolloschurchapp/src/ui/Avatar/Avatar.tests.js b/apolloschurchapp/src/ui/Avatar/Avatar.tests.js
new file mode 100644
index 0000000..da1bd21
--- /dev/null
+++ b/apolloschurchapp/src/ui/Avatar/Avatar.tests.js
@@ -0,0 +1,38 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import { ThemeProvider } from 'apolloschurchapp/src/ui/theme';
+
+import Avatar from '.';
+
+const source = {
+  uri:
+    'https://dg0ddngxdz549.cloudfront.net/images/cached/images/remote/http_s3.amazonaws.com/ns.images/all/member_images/members.nophoto_1000_1000_90_c1.jpg',
+};
+
+describe('The Avatar component', () => {
+  it('should render small', () => {
+    const tree = renderer.create(
+      <ThemeProvider>
+        <Avatar source={source} size="small" />
+      </ThemeProvider>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render medium', () => {
+    const tree = renderer.create(
+      <ThemeProvider>
+        <Avatar source={source} size="medium" />
+      </ThemeProvider>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render large', () => {
+    const tree = renderer.create(
+      <ThemeProvider>
+        <Avatar source={source} size="large" />
+      </ThemeProvider>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/Avatar/List.js b/apolloschurchapp/src/ui/Avatar/List.js
new file mode 100644
index 0000000..ef6596e
--- /dev/null
+++ b/apolloschurchapp/src/ui/Avatar/List.js
@@ -0,0 +1,14 @@
+import { View } from 'react-native';
+
+import styled from 'apolloschurchapp/src/ui/styled';
+
+const AvatarList = styled(
+  {
+    flexDirection: 'row',
+    flexWrap: 'wrap',
+    maxWidth: '100%',
+  },
+  'Avatar.List'
+)(View);
+
+export default AvatarList;
diff --git a/apolloschurchapp/src/ui/Avatar/index.js b/apolloschurchapp/src/ui/Avatar/index.js
new file mode 100644
index 0000000..3cb204a
--- /dev/null
+++ b/apolloschurchapp/src/ui/Avatar/index.js
@@ -0,0 +1,74 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import { View } from 'react-native';
+import { get } from 'lodash';
+import { compose, pure } from 'recompose';
+
+import ConnectedImage from 'apolloschurchapp/src/ui/ConnectedImage';
+import styled from 'apolloschurchapp/src/ui/styled';
+import { withTheme } from 'apolloschurchapp/src/ui/theme';
+import ActivityIndicator from 'apolloschurchapp/src/ui/ActivityIndicator';
+
+export { default as AvatarList } from './List';
+
+const enhance = compose(
+  pure,
+  withTheme(({ theme, size }) => ({
+    themeSize: get(theme.sizing.avatar, size, theme.sizing.avatar.small),
+  }))
+);
+
+const Container = styled(
+  ({ theme, themeSize }) => ({
+    width: themeSize,
+    height: themeSize,
+    backgroundColor: theme.colors.background.inactive,
+    borderRadius: themeSize / 2,
+    marginRight: themeSize / 4,
+    marginBottom: themeSize / 4,
+    overflow: 'hidden',
+  }),
+  'Avatar'
+)(View);
+
+const LoadingIcon = compose(
+  withTheme(({ theme: { colors } = {} }) => ({ color: colors.white })),
+  styled({
+    zIndex: 1,
+  })
+)(ActivityIndicator);
+
+const Image = styled(({ themeSize }) => ({
+  width: '100%',
+  height: '100%',
+  position: 'absolute',
+  top: 0,
+  left: 0,
+  right: 0,
+  bottom: 0,
+  borderRadius: themeSize / 2,
+}))(ConnectedImage);
+
+const Avatar = enhance(
+  ({ themeSize, containerStyle, source, isLoading, ...imageProps }) => (
+    <Container style={containerStyle} themeSize={themeSize}>
+      {isLoading ? <LoadingIcon /> : null}
+      {source && source.uri ? (
+        <Image
+          source={source}
+          {...imageProps}
+          themeSize={themeSize}
+          isLoading={isLoading}
+        />
+      ) : null}
+    </Container>
+  )
+);
+
+Avatar.propTypes = {
+  size: PropTypes.oneOf(['small', 'medium', 'large']),
+  containerStyle: PropTypes.any, // eslint-disable-line
+  ...ConnectedImage.propTypes,
+};
+
+export default Avatar;
diff --git a/apolloschurchapp/src/ui/BackgroundView/BackgroundView.tests.js b/apolloschurchapp/src/ui/BackgroundView/BackgroundView.tests.js
new file mode 100644
index 0000000..01632b9
--- /dev/null
+++ b/apolloschurchapp/src/ui/BackgroundView/BackgroundView.tests.js
@@ -0,0 +1,17 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import BackgroundView from '.';
+
+describe('The BackgroundView component', () => {
+  it('should render', () => {
+    const tree = renderer.create(
+      <Providers>
+        <BackgroundView />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/BackgroundView/index.js b/apolloschurchapp/src/ui/BackgroundView/index.js
new file mode 100644
index 0000000..cfc47da
--- /dev/null
+++ b/apolloschurchapp/src/ui/BackgroundView/index.js
@@ -0,0 +1,14 @@
+import LinearGradient from 'react-native-linear-gradient';
+import { compose } from 'recompose';
+
+import styled from 'apolloschurchapp/src/ui/styled';
+import { withTheme } from 'apolloschurchapp/src/ui/theme';
+
+const BackgroundView = compose(
+  withTheme(({ theme }) => ({
+    colors: [theme.colors.background.paper, theme.colors.background.screen],
+  })),
+  styled({ flex: 1 })
+)(LinearGradient);
+
+export default BackgroundView;
diff --git a/apolloschurchapp/src/ui/Button/Button.js b/apolloschurchapp/src/ui/Button/Button.js
new file mode 100644
index 0000000..8419a69
--- /dev/null
+++ b/apolloschurchapp/src/ui/Button/Button.js
@@ -0,0 +1,154 @@
+import React from 'react';
+import { View } from 'react-native';
+import PropTypes from 'prop-types';
+import { compose } from 'recompose';
+import { get } from 'lodash';
+
+import { withTheme, withThemeMixin } from 'apolloschurchapp/src/ui/theme';
+import styled from 'apolloschurchapp/src/ui/styled';
+import Touchable from 'apolloschurchapp/src/ui/Touchable';
+import { H4 } from 'apolloschurchapp/src/ui/typography';
+import { InlineActivityIndicator } from 'apolloschurchapp/src/ui/ActivityIndicator';
+import { withPlaceholder, Line } from 'apolloschurchapp/src/ui/Placeholder';
+
+const ButtonStyles = styled(
+  ({ theme, disabled, bordered, pill }) => ({
+    paddingHorizontal: theme.sizing.baseUnit,
+    overflow: 'hidden',
+    borderRadius: pill ? theme.sizing.baseUnit * 3 : theme.sizing.borderRadius,
+    flexDirection: 'row',
+    height: theme.sizing.baseUnit * 3,
+    alignItems: 'center',
+    justifyContent: 'center',
+    opacity: disabled ? 0.5 : 1,
+    borderWidth: 2,
+    ...(bordered
+      ? {
+          backgroundColor: theme.colors.transparent,
+          borderColor: theme.colors.primary,
+        }
+      : {
+          backgroundColor: theme.colors.background.screen,
+          borderColor: theme.colors.background.screen,
+          elevation: 2,
+        }),
+  }),
+  'Button'
+)(View);
+
+const ButtonPlaceholder = styled(
+  ({ theme }) => ({
+    width: theme.sizing.baseUnit * 4,
+    height: theme.sizing.baseUnit + theme.helpers.rem(1),
+  }),
+  'Button.Placeholder'
+)(Line);
+
+export const withButtonPlaceholder = withPlaceholder(ButtonPlaceholder);
+
+const enhance = compose(
+  withButtonPlaceholder,
+  withTheme(({ theme, type = 'default' }) => ({
+    fill: get(theme, `buttons.${type}.fill`, theme.colors.action.default),
+    accent: get(theme, `buttons.${type}.accent`, theme.colors.text.primary),
+  })),
+  // makes non-text children inherit button styles by default :-D
+  withThemeMixin(({ fill, accent, bordered }) => {
+    const textColor = bordered ? fill : accent;
+    return {
+      colors: {
+        primary: bordered ? fill : accent,
+        text: {
+          primary: textColor,
+          secondary: textColor,
+          tertiary: textColor,
+        },
+        screen: fill,
+      },
+    };
+  }),
+  withTheme()
+);
+
+// API-Compatible to React-Native's base <Button> component,
+// except it supports the rendering of children, which will take precedence over the title prop,
+// so you can handle non text children.
+const Button = enhance(
+  ({
+    children,
+    disabled,
+    title,
+    to,
+    onPress,
+    style,
+    bordered,
+    loading,
+    accent,
+    pill,
+    TouchableComponent = Touchable,
+    theme,
+    ...touchableProps
+  }) => {
+    const accessibilityTraits = ['button'];
+    if (disabled || loading) accessibilityTraits.push('disabled');
+
+    const buttonContent = (
+      <ButtonStyles
+        style={style}
+        disabled={disabled}
+        bordered={bordered}
+        pill={pill}
+      >
+        {loading ? (
+          <InlineActivityIndicator color={accent} />
+        ) : (
+          children || <H4>{title}</H4>
+        )}
+      </ButtonStyles>
+    );
+
+    if (onPress) {
+      return (
+        <TouchableComponent
+          onPress={onPress}
+          disabled={disabled || loading}
+          accessibilityTraits={accessibilityTraits}
+          {...touchableProps}
+        >
+          {buttonContent}
+        </TouchableComponent>
+      );
+    }
+
+    return buttonContent;
+  }
+);
+
+Button.defaultProps = {
+  disabled: false,
+  bordered: false,
+  pill: true,
+  title: '',
+  accessibilityComponentType: 'button',
+  type: 'primary',
+};
+
+Button.propTypes = {
+  disabled: PropTypes.bool,
+  children: PropTypes.node,
+  title: PropTypes.string,
+  bordered: PropTypes.bool,
+  pill: PropTypes.bool,
+  to: PropTypes.string,
+  type: PropTypes.oneOf([
+    'default',
+    'primary',
+    'secondary',
+    'tertiary',
+    'ghost',
+    'alert',
+  ]), // keys in theme.colors.action
+  ...Touchable.propTypes,
+};
+
+export default Button;
diff --git a/apolloschurchapp/src/ui/Button/Button.stories.js b/apolloschurchapp/src/ui/Button/Button.stories.js
new file mode 100644
index 0000000..14548a6
--- /dev/null
+++ b/apolloschurchapp/src/ui/Button/Button.stories.js
@@ -0,0 +1,169 @@
+import React from 'react';
+import { View } from 'react-native';
+import { nest } from 'recompose';
+import { storiesOf } from '@storybook/react-native';
+
+import FlexedView from 'apolloschurchapp/src/ui/FlexedView';
+import { H4 } from 'apolloschurchapp/src/ui/typography';
+import Icon from 'apolloschurchapp/src/ui/Icon';
+import styled from 'apolloschurchapp/src/ui/styled';
+
+import Button from '.';
+
+const ViewWithMargin = styled({ margin: 10 })(View);
+const ButtonWithMargin = nest(ViewWithMargin, Button);
+
+storiesOf('Buttons/Pill (default)', module)
+  .add('default', () => (
+    <FlexedView>
+      <ButtonWithMargin onPress={() => {}} title="Just a plain 'ole Button" />
+    </FlexedView>
+  ))
+  .add('Types', () => (
+    <FlexedView>
+      <ButtonWithMargin onPress={() => {}} title="Default" type="default" />
+      <ButtonWithMargin
+        onPress={() => {}}
+        title="Primary Action"
+        type="primary"
+      />
+      <ButtonWithMargin
+        onPress={() => {}}
+        title="Secondary Action"
+        type="secondary"
+      />
+      <ButtonWithMargin
+        onPress={() => {}}
+        title="Tertiary Action"
+        type="tertiary"
+      />
+    </FlexedView>
+  ))
+  .add('Disabled', () => (
+    <FlexedView>
+      <ButtonWithMargin
+        onPress={() => {}}
+        title="Disabled Button 😭"
+        disabled
+      />
+    </FlexedView>
+  ))
+  .add('Bordered', () => (
+    <FlexedView>
+      <ButtonWithMargin onPress={() => {}} title="Bordered Button" bordered />
+    </FlexedView>
+  ))
+  .add('Ghost', () => (
+    <FlexedView>
+      <ButtonWithMargin
+        onPress={() => {}}
+        title="Ghost Pill"
+        type={'ghost'}
+        bordered
+      />
+    </FlexedView>
+  ))
+  .add('With Children', () => (
+    <FlexedView>
+      <ButtonWithMargin onPress={() => {}} type="primary">
+        <H4>Non-Text Children</H4>
+        <Icon name="like" />
+      </ButtonWithMargin>
+    </FlexedView>
+  ))
+  .add('loading', () => (
+    <FlexedView>
+      <ButtonWithMargin
+        onPress={() => {}}
+        title="Just a plain 'ole Button"
+        loading
+      />
+    </FlexedView>
+  ));
+storiesOf('Buttons/Square', module)
+  .add('default', () => (
+    <FlexedView>
+      <ButtonWithMargin
+        onPress={() => {}}
+        title="Just a plain 'ole Square Button"
+        pill={false}
+      />
+    </FlexedView>
+  ))
+  .add('Types', () => (
+    <FlexedView>
+      <ButtonWithMargin
+        onPress={() => {}}
+        title="Default"
+        type="default"
+        pill={false}
+      />
+      <ButtonWithMargin
+        onPress={() => {}}
+        title="Primary Action"
+        type="primary"
+        pill={false}
+      />
+      <ButtonWithMargin
+        onPress={() => {}}
+        title="Secondary Action"
+        type="secondary"
+        pill={false}
+      />
+      <ButtonWithMargin
+        onPress={() => {}}
+        title="Tertiary Action"
+        type="tertiary"
+        pill={false}
+      />
+    </FlexedView>
+  ))
+  .add('Disabled', () => (
+    <FlexedView>
+      <ButtonWithMargin
+        onPress={() => {}}
+        title="Disabled Button 😭"
+        disabled
+        pill={false}
+      />
+    </FlexedView>
+  ))
+  .add('Bordered', () => (
+    <FlexedView>
+      <ButtonWithMargin
+        onPress={() => {}}
+        title="Bordered Button"
+        bordered
+        pill={false}
+      />
+    </FlexedView>
+  ))
+  .add('Ghost', () => (
+    <FlexedView>
+      <ButtonWithMargin
+        onPress={() => {}}
+        title="Ghost Square"
+        type={'ghost'}
+        bordered
+        pill={false}
+      />
+    </FlexedView>
+  ))
+  .add('With Children', () => (
+    <FlexedView>
+      <ButtonWithMargin onPress={() => {}} type="primary" pill={false}>
+        <H4>Non-Text Children</H4>
+        <Icon name="like" />
+      </ButtonWithMargin>
+    </FlexedView>
+  ))
+  .add('loading', () => (
+    <FlexedView>
+      <ButtonWithMargin
+        onPress={() => {}}
+        title="Just a plain 'ole Square Button"
+        pill={false}
+        loading
+      />
+    </FlexedView>
+  ));
diff --git a/apolloschurchapp/src/ui/Button/Button.tests.js b/apolloschurchapp/src/ui/Button/Button.tests.js
new file mode 100644
index 0000000..209796d
--- /dev/null
+++ b/apolloschurchapp/src/ui/Button/Button.tests.js
@@ -0,0 +1,119 @@
+import React from 'react';
+import { View } from 'react-native';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import Button from '.';
+
+describe('The Button component', () => {
+  it('should render', () => {
+    const tree = renderer.create(
+      <Providers>
+        <Button title="My Button!" onPress={() => {}} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render as default type', () => {
+    const tree = renderer.create(
+      <Providers>
+        <Button title="My Button!" type="default" onPress={() => {}} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a primary button', () => {
+    const tree = renderer.create(
+      <Providers>
+        <Button onPress={() => {}} title="Primary Action" type="primary" />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a secondary button', () => {
+    const tree = renderer.create(
+      <Providers>
+        <Button onPress={() => {}} title="Secondary Action" type="secondary" />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a Tertiary button', () => {
+    const tree = renderer.create(
+      <Providers>
+        <Button onPress={() => {}} title="Tertiary Action" type="tertiary" />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a disabled button', () => {
+    const tree = renderer.create(
+      <Providers>
+        <Button onPress={() => {}} title="Disabled Button 😭" disabled />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a bordered button', () => {
+    const tree = renderer.create(
+      <Providers>
+        <Button onPress={() => {}} title="Ghost Button" bordered />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a pill button', () => {
+    const tree = renderer.create(
+      <Providers>
+        <Button onPress={() => {}} title="Pill Button" pill />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a ghost button', () => {
+    const tree = renderer.create(
+      <Providers>
+        <Button
+          onPress={() => {}}
+          title="Ghost Button"
+          type={'ghost'}
+          bordered
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a ghost pill button', () => {
+    const tree = renderer.create(
+      <Providers>
+        <Button
+          onPress={() => {}}
+          title="Ghost Button"
+          type={'ghost'}
+          bordered
+          pill
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render with children', () => {
+    const tree = renderer.create(
+      <Providers>
+        <Button>
+          <View />
+        </Button>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a loading state', () => {
+    const tree = renderer.create(
+      <Providers>
+        <Button title="My Button!" onPress={() => {}} loading />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/Button/ButtonLink.js b/apolloschurchapp/src/ui/Button/ButtonLink.js
new file mode 100644
index 0000000..ea36124
--- /dev/null
+++ b/apolloschurchapp/src/ui/Button/ButtonLink.js
@@ -0,0 +1,12 @@
+import { Text } from 'react-native';
+
+import styled from 'apolloschurchapp/src/ui/styled';
+
+const ButtonLink = styled(
+  ({ theme }) => ({
+    color: theme.colors.text.link,
+  }),
+  'Button.Link'
+)(Text);
+
+export default ButtonLink;
diff --git a/apolloschurchapp/src/ui/Button/ButtonLink.stories.js b/apolloschurchapp/src/ui/Button/ButtonLink.stories.js
new file mode 100644
index 0000000..b641336
--- /dev/null
+++ b/apolloschurchapp/src/ui/Button/ButtonLink.stories.js
@@ -0,0 +1,14 @@
+import React from 'react';
+import { storiesOf } from '@storybook/react-native';
+
+import { BodyText } from 'apolloschurchapp/src/ui/typography';
+
+import ButtonLink from './ButtonLink';
+
+storiesOf('Buttons/Link', module)
+  .add('default', () => <ButtonLink onPress={() => {}}>Boom</ButtonLink>)
+  .add('Inherits typographic styles', () => (
+    <BodyText>
+      <ButtonLink onPress={() => {}}>Boom</ButtonLink>
+    </BodyText>
+  ));
diff --git a/apolloschurchapp/src/ui/Button/ButtonLink.tests.js b/apolloschurchapp/src/ui/Button/ButtonLink.tests.js
new file mode 100644
index 0000000..cb40e32
--- /dev/null
+++ b/apolloschurchapp/src/ui/Button/ButtonLink.tests.js
@@ -0,0 +1,28 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+import { BodyText } from 'apolloschurchapp/src/ui/typography';
+
+import ButtonLink from './ButtonLink';
+
+describe('The Button component', () => {
+  it('should render', () => {
+    const tree = renderer.create(
+      <Providers>
+        <ButtonLink onPress={() => {}}>Boom</ButtonLink>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render inherit typographic styles', () => {
+    const tree = renderer.create(
+      <Providers>
+        <BodyText>
+          <ButtonLink onPress={() => {}}>Boom</ButtonLink>
+        </BodyText>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/Button/index.js b/apolloschurchapp/src/ui/Button/index.js
new file mode 100644
index 0000000..cda1fc4
--- /dev/null
+++ b/apolloschurchapp/src/ui/Button/index.js
@@ -0,0 +1,2 @@
+export default from './Button';
+export ButtonLink from './ButtonLink';
diff --git a/apolloschurchapp/src/ui/Card/Actions.js b/apolloschurchapp/src/ui/Card/Actions.js
new file mode 100644
index 0000000..28df7cb
--- /dev/null
+++ b/apolloschurchapp/src/ui/Card/Actions.js
@@ -0,0 +1,15 @@
+import PaddedView from 'apolloschurchapp/src/ui/PaddedView';
+import styled from 'apolloschurchapp/src/ui/styled';
+
+const Actions = styled(
+  ({ theme }) => ({
+    flexWrap: 'wrap',
+    flexDirection: 'row',
+    alignItems: 'center',
+    justifyContent: 'space-between',
+    paddingTop: theme.sizing.baseUnit / 4,
+  }),
+  'Card.Actions'
+)(PaddedView);
+
+export default Actions;
diff --git a/apolloschurchapp/src/ui/Card/Card.stories.js b/apolloschurchapp/src/ui/Card/Card.stories.js
new file mode 100644
index 0000000..3b64033
--- /dev/null
+++ b/apolloschurchapp/src/ui/Card/Card.stories.js
@@ -0,0 +1,50 @@
+import React from 'react';
+import { storiesOf } from '@storybook/react-native';
+
+import {
+  H3,
+  H6,
+  BodyText,
+  Paragraph,
+} from 'apolloschurchapp/src/ui/typography';
+import Button, { ButtonLink } from 'apolloschurchapp/src/ui/Button';
+
+import Card, { CardActions, CardContent, CardImage } from '.';
+
+storiesOf('Card', module)
+  .add('simple', () => (
+    <Card>
+      <CardImage source={'https://picsum.photos/600/400/?image=63'} />
+      <CardContent>
+        <H3>Coffee</H3>
+        <H6 padded>noun</H6>
+        <Paragraph>
+          <BodyText>
+            {
+              'A dark substance that turns "leave me alone" into "good morning!"'
+            }
+          </BodyText>
+        </Paragraph>
+      </CardContent>
+      <CardActions>
+        <Button title="Learn More" pill={false} />
+        <ButtonLink>Share</ButtonLink>
+      </CardActions>
+    </Card>
+  ))
+  .add('loading', () => (
+    <Card isLoading>
+      <CardImage />
+      <CardContent>
+        <H3 />
+        <H6 padded />
+        <Paragraph>
+          <BodyText />
+        </Paragraph>
+      </CardContent>
+      <CardActions>
+        <Button pill={false} />
+        <ButtonLink />
+      </CardActions>
+    </Card>
+  ));
diff --git a/apolloschurchapp/src/ui/Card/Card.tests.js b/apolloschurchapp/src/ui/Card/Card.tests.js
new file mode 100644
index 0000000..90fc0da
--- /dev/null
+++ b/apolloschurchapp/src/ui/Card/Card.tests.js
@@ -0,0 +1,61 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+import {
+  H3,
+  H6,
+  BodyText,
+  Paragraph,
+} from 'apolloschurchapp/src/ui/typography';
+import Button, { ButtonLink } from 'apolloschurchapp/src/ui/Button';
+
+import Card, { CardImage, CardContent, CardActions } from '.';
+
+describe('the Card component', () => {
+  it('should render', () => {
+    const tree = renderer.create(
+      <Providers>
+        <Card>
+          <CardImage source={'https://picsum.photos/600/400/?image=63'} />
+          <CardContent>
+            <H3>Coffee</H3>
+            <H6 padded>noun</H6>
+            <Paragraph>
+              <BodyText>
+                {
+                  'A dark substance that turns "leave me alone" into "good morning!"'
+                }
+              </BodyText>
+            </Paragraph>
+          </CardContent>
+          <CardActions>
+            <Button title="Learn More" pill={false} />
+            <ButtonLink>Share</ButtonLink>
+          </CardActions>
+        </Card>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('it should render a placeholder', () => {
+    const tree = renderer.create(
+      <Providers>
+        <Card isLoading>
+          <CardContent>
+            <H3 />
+            <H6 padded />
+            <Paragraph>
+              <BodyText />
+            </Paragraph>
+          </CardContent>
+          <CardActions>
+            <Button pill={false} />
+            <ButtonLink />
+          </CardActions>
+        </Card>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/Card/CardWrapper/CardWrapper.stories.js b/apolloschurchapp/src/ui/Card/CardWrapper/CardWrapper.stories.js
new file mode 100644
index 0000000..71f9ea0
--- /dev/null
+++ b/apolloschurchapp/src/ui/Card/CardWrapper/CardWrapper.stories.js
@@ -0,0 +1,49 @@
+import React from 'react';
+import { View, Text } from 'react-native';
+import { storiesOf } from '@storybook/react-native';
+
+import CardWrapper from '.';
+
+storiesOf('Card/CardWrapper', module)
+  .add('Default', () => {
+    const centered = {
+      justifyContent: 'center',
+      alignItems: 'center',
+      flex: 1,
+      backgroundColor: '#f7f7f7',
+    };
+
+    const cardDimensions = {
+      height: 400,
+      width: '92%',
+    };
+
+    return (
+      <View style={centered}>
+        <CardWrapper style={cardDimensions}>
+          <Text>Boom!</Text>
+        </CardWrapper>
+      </View>
+    );
+  })
+  .add('With backgroundColor', () => {
+    const centered = {
+      justifyContent: 'center',
+      alignItems: 'center',
+      flex: 1,
+      backgroundColor: '#f7f7f7',
+    };
+
+    const cardDimensions = {
+      height: 400,
+      width: '92%',
+    };
+
+    return (
+      <View style={centered}>
+        <CardWrapper style={cardDimensions} cardColor={'salmon'}>
+          <Text>Boom!</Text>
+        </CardWrapper>
+      </View>
+    );
+  });
diff --git a/apolloschurchapp/src/ui/Card/CardWrapper/CardWrapper.tests.js b/apolloschurchapp/src/ui/Card/CardWrapper/CardWrapper.tests.js
new file mode 100644
index 0000000..efcd5ee
--- /dev/null
+++ b/apolloschurchapp/src/ui/Card/CardWrapper/CardWrapper.tests.js
@@ -0,0 +1,59 @@
+import React from 'react';
+import { Text } from 'react-native';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import CardWrapper from '.';
+
+describe('the CardWrapper component', () => {
+  it('should render', () => {
+    const tree = renderer.create(
+      <Providers>
+        <CardWrapper />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render children', () => {
+    const tree = renderer.create(
+      <Providers>
+        <CardWrapper>
+          <Text>Boom!</Text>
+        </CardWrapper>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should accept a backgroundColor', () => {
+    const tree = renderer.create(
+      <Providers>
+        <CardWrapper backgroundColor={'salmon'}>
+          <Text>Boom!</Text>
+        </CardWrapper>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should accept and render passed in styles', () => {
+    const cardDimensions = {
+      height: 400,
+      width: '92%',
+    };
+
+    const tree = renderer.create(
+      <Providers>
+        <CardWrapper style={cardDimensions} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should accept additional props', () => {
+    const tree = renderer.create(
+      <Providers>
+        <CardWrapper accessible={false} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/Card/CardWrapper/index.js b/apolloschurchapp/src/ui/Card/CardWrapper/index.js
new file mode 100644
index 0000000..9dc11b0
--- /dev/null
+++ b/apolloschurchapp/src/ui/Card/CardWrapper/index.js
@@ -0,0 +1,55 @@
+import { compose, pure } from 'recompose';
+import React from 'react';
+import { Platform, View } from 'react-native';
+import PropTypes from 'prop-types';
+
+import { withIsLoading } from 'apolloschurchapp/src/ui/isLoading';
+import styled from 'apolloschurchapp/src/ui/styled';
+import { enhancer as mediaQuery } from 'apolloschurchapp/src/ui/MediaQuery';
+
+const StyledCard = compose(
+  withIsLoading,
+  styled(({ theme, cardColor }) => ({
+    // card styles
+    backgroundColor: cardColor || theme.colors.background.paper,
+    borderRadius: theme.sizing.borderRadius,
+    ...Platform.select(theme.shadows.default),
+  })),
+  mediaQuery(
+    // responsive styles
+    ({ md }) => ({ maxWidth: md }),
+    styled(({ theme }) => ({
+      // mobile
+      marginHorizontal: theme.sizing.baseUnit / 2,
+      marginVertical: theme.sizing.baseUnit / 4,
+    })),
+    styled(({ theme }) => ({
+      // tablet
+      marginHorizontal: theme.sizing.baseUnit,
+      marginVertical: theme.sizing.baseUnit / 4,
+    }))
+  )
+)(View);
+
+/*
+ * Overflow on iOS, when declared on the same element as a shadow, clips the shadow so overflow must
+ * live on a child wrapper. https://github.com/facebook/react-native/issues/449
+ */
+const OverflowFix = styled(({ theme }) => ({
+  borderRadius: theme.sizing.borderRadius,
+  overflow: 'hidden',
+}))(View);
+
+const Card = pure(({ children, isLoading, ...otherProps }) => (
+  <StyledCard {...otherProps}>
+    <OverflowFix>{children}</OverflowFix>
+  </StyledCard>
+));
+
+Card.propTypes = {
+  backgroundColor: PropTypes.string,
+  children: PropTypes.node,
+  style: PropTypes.any, // eslint-disable-line
+};
+
+export default Card;
diff --git a/apolloschurchapp/src/ui/Card/Content.js b/apolloschurchapp/src/ui/Card/Content.js
new file mode 100644
index 0000000..92584c5
--- /dev/null
+++ b/apolloschurchapp/src/ui/Card/Content.js
@@ -0,0 +1,11 @@
+import PaddedView from 'apolloschurchapp/src/ui/PaddedView';
+import styled from 'apolloschurchapp/src/ui/styled';
+
+const Content = styled(
+  ({ theme }) => ({
+    paddingVertical: theme.sizing.baseUnit * 0.75,
+  }),
+  'Card.Content'
+)(PaddedView);
+
+export default Content;
diff --git a/apolloschurchapp/src/ui/Card/ErrorCard/ErrorCard.stories.js b/apolloschurchapp/src/ui/Card/ErrorCard/ErrorCard.stories.js
new file mode 100644
index 0000000..b0eb03d
--- /dev/null
+++ b/apolloschurchapp/src/ui/Card/ErrorCard/ErrorCard.stories.js
@@ -0,0 +1,8 @@
+import React from 'react';
+import { storiesOf } from '@storybook/react-native';
+
+import ErrorCard from '.';
+
+storiesOf('Card/ErrorCard', module).add('Example', () => (
+  <ErrorCard message={'Boom!'} error={'What?'} />
+));
diff --git a/apolloschurchapp/src/ui/Card/ErrorCard/ErrorCard.tests.js b/apolloschurchapp/src/ui/Card/ErrorCard/ErrorCard.tests.js
new file mode 100644
index 0000000..1293044
--- /dev/null
+++ b/apolloschurchapp/src/ui/Card/ErrorCard/ErrorCard.tests.js
@@ -0,0 +1,42 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import ErrorCard from '.';
+
+describe('the Card component', () => {
+  it('should render', () => {
+    const tree = renderer.create(
+      <Providers>
+        <ErrorCard message={'Boom!'} error={'What?'} />
+      </Providers>
+    );
+
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render with an error message inside an object', () => {
+    const errorObject = {
+      message: 'You have discovered an error message. Do you open it?',
+    };
+    const tree = renderer.create(
+      <Providers>
+        <ErrorCard error={errorObject} />
+      </Providers>
+    );
+
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render with an error inside an object', () => {
+    const errorObject = {
+      error: 'Errors, errors, and more errors',
+    };
+    const tree = renderer.create(
+      <Providers>
+        <ErrorCard error={errorObject} />
+      </Providers>
+    );
+
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/Card/ErrorCard/index.js b/apolloschurchapp/src/ui/Card/ErrorCard/index.js
new file mode 100644
index 0000000..ee0167b
--- /dev/null
+++ b/apolloschurchapp/src/ui/Card/ErrorCard/index.js
@@ -0,0 +1,40 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+
+import styled from 'apolloschurchapp/src/ui/styled';
+import { H4, H6 } from 'apolloschurchapp/src/ui/typography';
+import Card, { CardContent } from 'apolloschurchapp/src/ui/Card';
+
+const Header = styled({ textAlign: 'center' }, 'Error.Header')(H4);
+const ErrorText = styled({ textAlign: 'center' }, 'Error.Text')(H6);
+
+const Err = ({ message = 'Uh oh!', error }) => {
+  let errorMessage;
+  if (typeof error !== 'string') {
+    if (error && error.message) {
+      errorMessage = error.message;
+    } else if (error && error.error && typeof error.error === 'string') {
+      errorMessage = error.error;
+    } else {
+      errorMessage = 'An unexpected error occured';
+    }
+  } else {
+    errorMessage = error;
+  }
+
+  return (
+    <Card>
+      <CardContent>
+        <Header>{message}</Header>
+        <ErrorText>{errorMessage}</ErrorText>
+      </CardContent>
+    </Card>
+  );
+};
+
+Err.propTypes = {
+  message: PropTypes.string,
+  error: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),
+};
+
+export default Err;
diff --git a/apolloschurchapp/src/ui/Card/Image.js b/apolloschurchapp/src/ui/Card/Image.js
new file mode 100644
index 0000000..5c26499
--- /dev/null
+++ b/apolloschurchapp/src/ui/Card/Image.js
@@ -0,0 +1,28 @@
+import { Platform } from 'react-native';
+import { compose } from 'recompose';
+
+import styled from 'apolloschurchapp/src/ui/styled';
+import ProgressiveImage from 'apolloschurchapp/src/ui/ProgressiveImage';
+import { getIsLoading } from 'apolloschurchapp/src/ui/isLoading';
+
+const Image = compose(
+  getIsLoading,
+  styled(
+    ({ theme }) => ({
+      aspectRatio: 1,
+      width: '100%',
+      ...Platform.select({
+        android: {
+          // fixes android borderRadius overflow display issue
+          borderTopRightRadius: theme.sizing.borderRadius,
+          borderTopLeftRadius: theme.sizing.borderRadius,
+        },
+      }),
+    }),
+    'Card.Image'
+  )
+)(ProgressiveImage);
+
+Image.propTypes = ProgressiveImage.propTypes;
+
+export default Image;
diff --git a/apolloschurchapp/src/ui/Card/index.js b/apolloschurchapp/src/ui/Card/index.js
new file mode 100644
index 0000000..9efd6dc
--- /dev/null
+++ b/apolloschurchapp/src/ui/Card/index.js
@@ -0,0 +1,5 @@
+export { default } from './CardWrapper';
+export CardImage from './Image';
+export CardContent from './Content';
+export CardActions from './Actions';
+export ErrorCard from './ErrorCard';
diff --git a/apolloschurchapp/src/ui/CardTile/CardTile.stories.js b/apolloschurchapp/src/ui/CardTile/CardTile.stories.js
new file mode 100644
index 0000000..8699605
--- /dev/null
+++ b/apolloschurchapp/src/ui/CardTile/CardTile.stories.js
@@ -0,0 +1,61 @@
+import React from 'react';
+import { View, Text } from 'react-native';
+import { storiesOf } from '@storybook/react-native';
+
+import CardTile from '.';
+
+const containerStyles = {
+  height: 300,
+  justifyContent: 'center',
+  alignItems: 'center',
+  backgroundColor: '#f7f7f7',
+};
+
+storiesOf('CardTile', module)
+  .add('Default', () => (
+    <View style={containerStyles}>
+      <CardTile title={'Why Jesus is Timeless'} />
+    </View>
+  ))
+  .add('Skeleton', () => (
+    <View style={containerStyles}>
+      <CardTile
+        number={7}
+        title={'Why Jesus is Timeless'}
+        byLine={'Marty McFly'}
+        date={'Sat Oct 26 1985 01:24:00 GMT+0008 (UTC)'}
+        isLoading
+      />
+    </View>
+  ))
+  .add('With Number Box', () => (
+    <View style={containerStyles}>
+      <CardTile number={7} title={'Why Jesus is Timeless'} />
+    </View>
+  ))
+  .add('With byLine', () => (
+    <View style={containerStyles}>
+      <CardTile
+        number={7}
+        title={'Why Jesus is Timeless'}
+        byLine={'Marty McFly'}
+      />
+    </View>
+  ))
+  .add('With date', () => (
+    <View style={containerStyles}>
+      <CardTile
+        number={7}
+        title={'Why Jesus is Timeless'}
+        byLine={'Marty McFly'}
+        date={'Sat Oct 26 1985 01:24:00 GMT+0008 (UTC)'} // this snapshot will expire in a year
+      />
+    </View>
+  ))
+  .add('With Children', () => (
+    <View style={containerStyles}>
+      <CardTile>
+        <Text>Biff Tannen was here</Text>
+      </CardTile>
+    </View>
+  ));
diff --git a/apolloschurchapp/src/ui/CardTile/CardTile.tests.js b/apolloschurchapp/src/ui/CardTile/CardTile.tests.js
new file mode 100644
index 0000000..28b9c14
--- /dev/null
+++ b/apolloschurchapp/src/ui/CardTile/CardTile.tests.js
@@ -0,0 +1,94 @@
+import React from 'react';
+import { Text } from 'react-native';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import CardTile from '.';
+
+describe('the CardTile component', () => {
+  it('should render', () => {
+    const tree = renderer.create(
+      <Providers>
+        <CardTile title={'Why Jesus is Timeless'} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a loading skeleton', () => {
+    const tree = renderer.create(
+      <Providers>
+        <CardTile title={'Why Jesus is Timeless'} isLoading />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a number box', () => {
+    const tree = renderer.create(
+      <Providers>
+        <CardTile number={7} title={'Why Jesus is Timeless'} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('number box should grow elegantly with larger numbers', () => {
+    const tree = renderer.create(
+      <Providers>
+        <CardTile number={7777} title={'Why Jesus is Timeless'} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render card details', () => {
+    const tree = renderer.create(
+      <Providers>
+        <CardTile
+          number={7}
+          title={'Why Jesus is Timeless'}
+          showDetails
+          byLine={'Marty McFly'}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render card details with date', () => {
+    const tree = renderer.create(
+      <Providers>
+        <CardTile
+          number={7}
+          title={'Why Jesus is Timeless'}
+          showDetails
+          byLine={'Marty McFly'}
+          date={'Sat Oct 26 1985 01:24:00 GMT+0008 (UTC)'} // this snapshot will expire in a year
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render children', () => {
+    const tree = renderer.create(
+      <Providers>
+        <CardTile>
+          <Text>Biff Tannen was here</Text>
+        </CardTile>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a loading skeleton for all available props', () => {
+    const tree = renderer.create(
+      <Providers>
+        <CardTile
+          number={7}
+          title={'Why Jesus is Timeless'}
+          showDetails
+          byLine={'Marty McFly'}
+          date={'Sat Oct 26 1985 01:24:00 GMT+0008 (UTC)'}
+          isLoading
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/CardTile/index.js b/apolloschurchapp/src/ui/CardTile/index.js
new file mode 100644
index 0000000..c0710f8
--- /dev/null
+++ b/apolloschurchapp/src/ui/CardTile/index.js
@@ -0,0 +1,154 @@
+import React from 'react';
+import { View, StyleSheet } from 'react-native';
+import PropTypes from 'prop-types';
+import { compose, pure } from 'recompose';
+import moment from 'moment';
+
+import Placeholder from 'apolloschurchapp/src/ui/Placeholder';
+import { withIsLoading } from 'apolloschurchapp/src/ui/isLoading';
+import { withTheme, withThemeMixin } from 'apolloschurchapp/src/ui/theme';
+import styled from 'apolloschurchapp/src/ui/styled';
+import { H3, H5, H6 } from 'apolloschurchapp/src/ui/typography';
+import { CardContent, CardActions } from 'apolloschurchapp/src/ui/Card';
+import ChannelLabel from 'apolloschurchapp/src/ui/ChannelLabel';
+
+const enhance = compose(
+  withIsLoading,
+  withThemeMixin(({ theme }) => ({
+    type: 'light',
+    colors: {
+      background: {
+        inactive: theme.colors.lightSecondary,
+      },
+    },
+  })),
+  withTheme(),
+  pure
+);
+
+const TileSpacer = styled(({ theme }) => ({
+  padding: theme.sizing.baseUnit / 2,
+}))(View);
+
+const Tile = styled(({ theme }) => ({
+  height: '100%',
+  aspectRatio: 1,
+  borderRadius: theme.sizing.borderRadius,
+  backgroundColor: theme.colors.lightTertiary,
+}))(View);
+
+const PlaceholderOverflowFix = styled(({ theme }) => ({
+  ...StyleSheet.absoluteFillObject,
+  justifyContent: 'center',
+  borderRadius: theme.sizing.borderRadius,
+  overflow: 'hidden',
+}))(View);
+
+const TileNumber = styled(({ theme, size }) => ({
+  position: 'absolute',
+  top: 0,
+  left: 0,
+  width: theme.helpers.rem(1 * (size < 2 ? 2 : size)),
+  height: theme.helpers.rem(1 * (size < 2 ? 2 : size)),
+  justifyContent: 'center',
+  alignItems: 'center',
+  borderTopLeftRadius: theme.sizing.borderRadius,
+  borderBottomRightRadius: theme.sizing.borderRadius,
+  backgroundColor: theme.colors.white,
+}))(View);
+
+const relativeTime = (date) => {
+  if (moment.updateLocale) {
+    moment.updateLocale('en', {
+      relativeTime: {
+        future: 'in %s',
+        past: '%s ago',
+        s: 's',
+        m: 'm',
+        mm: '%dm',
+        h: '1h',
+        hh: '%dh',
+        d: '1d',
+        dd: '%dd',
+        M: '1mo',
+        MM: '%dmo',
+        y: '1y',
+        yy: '%dy',
+      },
+    });
+  }
+
+  const time = moment(new Date(date));
+  return time.fromNow(true); // true omits 'ago'
+};
+
+export const CardTile = enhance(
+  ({
+    number,
+    title,
+    byLine,
+    date,
+    style: styleProp = {},
+    isLoading,
+    theme,
+    children,
+    ...otherProps
+  }) => (
+    <TileSpacer collapsable={false}>
+      <Tile style={styleProp} {...otherProps}>
+        <PlaceholderOverflowFix>
+          {typeof number === 'undefined' ? null : (
+            <TileNumber size={number.toString().length}>
+              <Placeholder.Media
+                size={theme.helpers.rem(
+                  1.25 *
+                    (number.toString().length < 2
+                      ? 2
+                      : number.toString().length)
+                )}
+                onReady={!isLoading}
+              >
+                <View>
+                  <H5>{number}</H5>
+                </View>
+              </Placeholder.Media>
+            </TileNumber>
+          )}
+
+          {typeof title === 'undefined' ? null : (
+            <CardContent>
+              <H3>{title}</H3>
+            </CardContent>
+          )}
+
+          {byLine ? (
+            <CardActions>
+              <ChannelLabel
+                label={byLine}
+                icon={'video'}
+                isLoading={isLoading}
+                withFlex
+              />
+              {typeof date === 'undefined' ? null : (
+                <H6>{relativeTime(date)}</H6>
+              )}
+            </CardActions>
+          ) : null}
+
+          {children}
+        </PlaceholderOverflowFix>
+      </Tile>
+    </TileSpacer>
+  )
+);
+
+CardTile.propTypes = {
+  title: PropTypes.string,
+  number: PropTypes.number,
+  byLine: PropTypes.string,
+  date: PropTypes.string,
+  style: PropTypes.any, // eslint-disable-line
+  isLoading: PropTypes.bool,
+};
+
+export default CardTile;
diff --git a/apolloschurchapp/src/ui/CenteredView/CenteredView.stories.js b/apolloschurchapp/src/ui/CenteredView/CenteredView.stories.js
new file mode 100644
index 0000000..a100ccb
--- /dev/null
+++ b/apolloschurchapp/src/ui/CenteredView/CenteredView.stories.js
@@ -0,0 +1,12 @@
+import React from 'react';
+import { storiesOf } from '@storybook/react-native';
+
+import { H1 } from 'apolloschurchapp/src/ui/typography';
+
+import CenteredView from '.';
+
+storiesOf('CenteredView', module).add('Example', () => (
+  <CenteredView>
+    <H1>This text is in a CenteredView</H1>
+  </CenteredView>
+));
diff --git a/apolloschurchapp/src/ui/CenteredView/CenteredView.tests.js b/apolloschurchapp/src/ui/CenteredView/CenteredView.tests.js
new file mode 100644
index 0000000..083f568
--- /dev/null
+++ b/apolloschurchapp/src/ui/CenteredView/CenteredView.tests.js
@@ -0,0 +1,17 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import CenteredView from '.';
+
+describe('the CenteredView component', () => {
+  it('should render', () => {
+    const tree = renderer.create(
+      <Providers>
+        <CenteredView />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/CenteredView/index.js b/apolloschurchapp/src/ui/CenteredView/index.js
new file mode 100644
index 0000000..385da74
--- /dev/null
+++ b/apolloschurchapp/src/ui/CenteredView/index.js
@@ -0,0 +1,21 @@
+import PropTypes from 'prop-types';
+import { View } from 'react-native';
+
+import styled from 'apolloschurchapp/src/ui/styled';
+
+const CenteredView = styled(({ theme }) => ({
+  flex: 1,
+  justifyContent: 'center',
+  alignItems: 'center',
+  backgroundColor: theme.colors.background.screen,
+}))(View);
+
+CenteredView.defaultProps = {
+  children: null,
+};
+
+CenteredView.propTypes = {
+  children: PropTypes.node,
+};
+
+export default CenteredView;
diff --git a/apolloschurchapp/src/ui/ChannelLabel/ChannelLabel.stories.js b/apolloschurchapp/src/ui/ChannelLabel/ChannelLabel.stories.js
new file mode 100644
index 0000000..6bc2106
--- /dev/null
+++ b/apolloschurchapp/src/ui/ChannelLabel/ChannelLabel.stories.js
@@ -0,0 +1,35 @@
+import React from 'react';
+import { View } from 'react-native';
+import { storiesOf } from '@storybook/react-native';
+
+import CenteredView from 'apolloschurchapp/src/ui/CenteredView';
+import styled from 'apolloschurchapp/src/ui/styled';
+
+import ChannelLabel from '.';
+
+storiesOf('ChannelLabel', module)
+  .addDecorator((getStory) => <CenteredView>{getStory()}</CenteredView>)
+  .add('Default', () => <ChannelLabel label={'Default'} />)
+  .add('isLoading', () => <ChannelLabel label={'Default'} isLoading />)
+  .add('With Icon', () => <ChannelLabel label={'Albums'} icon={'like-solid'} />)
+  .add('isLoading With Icon', () => (
+    <ChannelLabel label={'Albums'} icon={'like-solid'} isLoading />
+  ))
+  .add('withFlex', () => {
+    const Wrapper = styled({
+      flex: 1,
+      width: '100%',
+    })(View);
+
+    const Box = styled({
+      flex: 3,
+      backgroundColor: 'salmon',
+    })(View);
+
+    return (
+      <Wrapper>
+        <ChannelLabel label={'Albums'} icon={'arrow-back'} withFlex />
+        <Box />
+      </Wrapper>
+    );
+  });
diff --git a/apolloschurchapp/src/ui/ChannelLabel/ChannelLabel.tests.js b/apolloschurchapp/src/ui/ChannelLabel/ChannelLabel.tests.js
new file mode 100644
index 0000000..1bb50f2
--- /dev/null
+++ b/apolloschurchapp/src/ui/ChannelLabel/ChannelLabel.tests.js
@@ -0,0 +1,49 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import ChannelLabel from '.';
+
+describe('the ChannelLabel component', () => {
+  it('should render', () => {
+    const tree = renderer.create(
+      <Providers>
+        <ChannelLabel label={'Default'} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a skeleton view', () => {
+    const tree = renderer.create(
+      <Providers>
+        <ChannelLabel label={'Default'} isLoading />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render with an icon', () => {
+    const tree = renderer.create(
+      <Providers>
+        <ChannelLabel label={'Default'} icon={'like'} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a skeleton view that supports an icon', () => {
+    const tree = renderer.create(
+      <Providers>
+        <ChannelLabel label={'Default'} icon={'like'} isLoading />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render flexed', () => {
+    const tree = renderer.create(
+      <Providers>
+        <ChannelLabel label={'Default'} withFlex />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/ChannelLabel/index.js b/apolloschurchapp/src/ui/ChannelLabel/index.js
new file mode 100644
index 0000000..aa70c08
--- /dev/null
+++ b/apolloschurchapp/src/ui/ChannelLabel/index.js
@@ -0,0 +1,64 @@
+import React from 'react';
+import { View } from 'react-native';
+import PropTypes from 'prop-types';
+import { compose, pure } from 'recompose';
+import { kebabCase } from 'lodash';
+
+import { withIsLoading } from 'apolloschurchapp/src/ui/isLoading';
+import { withTheme } from 'apolloschurchapp/src/ui/theme';
+import styled from 'apolloschurchapp/src/ui/styled';
+import { H6 } from 'apolloschurchapp/src/ui/typography';
+import Icon from 'apolloschurchapp/src/ui/Icon';
+import * as Icons from 'apolloschurchapp/src/ui/Icon/icons';
+
+const enhance = compose(
+  withIsLoading,
+  pure,
+  withTheme()
+);
+
+const Wrapper = styled(({ flexed }) => ({
+  flex: flexed ? 1 : null,
+  flexDirection: 'row',
+  alignItems: 'center',
+}))(View);
+
+const PlaceholderWrapper = styled(({ theme, withIcon }) => ({
+  flex: 1,
+  ...(withIcon
+    ? { paddingHorizontal: theme.sizing.baseUnit / 2 }
+    : { paddingRight: theme.sizing.baseUnit / 2 }),
+}))(View);
+
+const StyledH6 = styled(({ theme }) => ({
+  color: theme.colors.text.secondary,
+}))(H6);
+
+const ChannelLabel = enhance(({ label, icon, withFlex, isLoading, theme }) => (
+  <Wrapper flexed={withFlex}>
+    {icon ? (
+      <Icon
+        name={icon}
+        size={theme.helpers.rem(1.2)}
+        fill={theme.colors.text.secondary}
+        isLoading={isLoading}
+      />
+    ) : null}
+    <PlaceholderWrapper withIcon={icon}>
+      <StyledH6>{label}</StyledH6>
+    </PlaceholderWrapper>
+  </Wrapper>
+));
+
+ChannelLabel.propTypes = {
+  label: PropTypes.oneOfType([PropTypes.string, PropTypes.element]).isRequired,
+  icon: PropTypes.oneOf(Object.keys(Icons).map(kebabCase)),
+  isLoading: PropTypes.bool,
+  withFlex: PropTypes.bool,
+};
+
+ChannelLabel.defaultProps = {
+  withFlex: false,
+};
+
+export default ChannelLabel;
diff --git a/apolloschurchapp/src/ui/Chip/Chip.stories.js b/apolloschurchapp/src/ui/Chip/Chip.stories.js
new file mode 100644
index 0000000..d730e1d
--- /dev/null
+++ b/apolloschurchapp/src/ui/Chip/Chip.stories.js
@@ -0,0 +1,32 @@
+import React from 'react';
+import { storiesOf } from '@storybook/react-native';
+
+import ChipList from './List';
+
+import Chip from '.';
+
+storiesOf('Chip', module)
+  .add('default', () => (
+    <Chip onPress={() => {}} title="I'm just a poor chip" />
+  ))
+  .add('With Icon', () => (
+    <Chip onPress={() => {}} icon="close" title="I need no sympathy" />
+  ))
+  .add('Selected', () => <Chip onPress={() => {}} selected title="Easy come" />)
+  .add('List', () => (
+    <ChipList>
+      <Chip onPress={() => {}} title="I'm just a poor chip" />
+      <Chip onPress={() => {}} icon="close" title="I need no sympathy" />
+      <Chip onPress={() => {}} selected title="Easy come" />
+      <Chip onPress={() => {}} icon="close" selected title="Easy go" />
+      <Chip onPress={() => {}} icon="arrow-up" title="Litte high" />
+      <Chip
+        onPress={() => {}}
+        type="secondary"
+        icon="arrow-down"
+        title="Litte low"
+      />
+      <Chip title="📍💨?" />
+      <Chip selected title="¯\_(ツ)_/¯" />
+    </ChipList>
+  ));
diff --git a/apolloschurchapp/src/ui/Chip/Chip.tests.js b/apolloschurchapp/src/ui/Chip/Chip.tests.js
new file mode 100644
index 0000000..50d2a08
--- /dev/null
+++ b/apolloschurchapp/src/ui/Chip/Chip.tests.js
@@ -0,0 +1,33 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import Chip from '.';
+
+describe('The Chip component', () => {
+  it('should render correctly', () => {
+    const tree = renderer.create(
+      <Providers>
+        <Chip title="My Button!" onPress={() => {}} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render an icon', () => {
+    const tree = renderer.create(
+      <Providers>
+        <Chip icon="like" title="Heart!!!" />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should be selected', () => {
+    const tree = renderer.create(
+      <Providers>
+        <Chip title="My Button!" selected />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/Chip/List.js b/apolloschurchapp/src/ui/Chip/List.js
new file mode 100644
index 0000000..98f9118
--- /dev/null
+++ b/apolloschurchapp/src/ui/Chip/List.js
@@ -0,0 +1,14 @@
+import { View } from 'react-native';
+
+import styled from 'apolloschurchapp/src/ui/styled';
+
+const ChipList = styled(
+  {
+    flexDirection: 'row',
+    alignItems: 'center',
+    flexWrap: 'wrap',
+  },
+  'Chip.List'
+)(View);
+
+export default ChipList;
diff --git a/apolloschurchapp/src/ui/Chip/index.js b/apolloschurchapp/src/ui/Chip/index.js
new file mode 100644
index 0000000..cb8eb77
--- /dev/null
+++ b/apolloschurchapp/src/ui/Chip/index.js
@@ -0,0 +1,80 @@
+import React from 'react';
+import { compose, mapProps } from 'recompose';
+import PropTypes from 'prop-types';
+/* touchable native feedback currently is having flex layout issues on react-native android, so we
+ * fall back to TouchableOpacity
+ */
+import { TouchableOpacity } from 'react-native';
+
+import { H6 } from 'apolloschurchapp/src/ui/typography';
+import Button from 'apolloschurchapp/src/ui/Button';
+import Icon from 'apolloschurchapp/src/ui/Icon';
+import { withTheme } from 'apolloschurchapp/src/ui/theme';
+import styled from 'apolloschurchapp/src/ui/styled';
+
+export { default as ChipList } from './List';
+
+const enhance = compose(
+  withTheme(),
+  mapProps(({ theme, selected, ...otherProps }) => ({
+    type: selected ? 'primary' : 'default',
+    iconSize: theme.sizing.baseUnit,
+    ...otherProps,
+  }))
+);
+
+const TitleText = styled(({ withIcon = false }) => ({
+  ...(withIcon ? { flexGrow: 1 } : {}),
+  textAlign: 'center',
+  alignItems: 'center',
+  justifyContent: 'center',
+  paddingHorizontal: 6,
+}))(H6);
+
+const StyledButton = styled(
+  ({ theme, withIcon = false }) => ({
+    justifyContent: withIcon ? 'flex-end' : 'center',
+    paddingHorizontal: theme.sizing.baseUnit / 4,
+    paddingVertical: theme.sizing.baseUnit / 4,
+    height: theme.sizing.baseUnit * 2,
+    /* these margins are only used when a chip is in a list.
+     * TODO: consider removing or making conditional for use outside of lists
+     */
+    marginRight: theme.sizing.baseUnit / 2,
+    marginBottom: theme.sizing.baseUnit / 2,
+  }),
+  'Chip'
+)(Button);
+
+const Chip = enhance(
+  ({
+    icon,
+    iconStyles = {},
+    iconSize,
+    selected,
+    title,
+    pill = false,
+    ...buttonProps
+  }) => (
+    <StyledButton
+      withIcon={icon}
+      TouchableComponent={TouchableOpacity}
+      pill={pill}
+      {...buttonProps}
+    >
+      {title ? <TitleText withIcon={icon}>{title}</TitleText> : null}
+      {icon ? <Icon name={icon} style={iconStyles} size={iconSize} /> : null}
+    </StyledButton>
+  )
+);
+
+Chip.propTypes = {
+  icon: PropTypes.string,
+  iconStyles: PropTypes.object, // eslint-disable-line react/forbid-prop-types
+  iconSize: PropTypes.number,
+  selected: PropTypes.bool,
+  title: PropTypes.string,
+  pill: PropTypes.bool,
+};
+
+export default Chip;
diff --git a/apolloschurchapp/src/ui/ConnectedImage/ConnectedImage.tests.js b/apolloschurchapp/src/ui/ConnectedImage/ConnectedImage.tests.js
new file mode 100644
index 0000000..d90cab3
--- /dev/null
+++ b/apolloschurchapp/src/ui/ConnectedImage/ConnectedImage.tests.js
@@ -0,0 +1,55 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import ConnectedImage, { getCachedSources, updateCache } from '.';
+
+describe('the ConnectedImage component', () => {
+  it('should render immediately with a network image with a known width and height', () => {
+    const tree = renderer.create(
+      <Providers>
+        <ConnectedImage
+          source={{
+            uri: 'https://placeholdit.co/i/150x150?bg=eeeeee&fc=577084',
+            width: 150,
+            height: 150,
+          }}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should maintain aspect ratio', () => {
+    const tree = renderer.create(
+      <Providers>
+        <ConnectedImage
+          source={{
+            uri: 'https://placeholdit.co/i/150x150?bg=eeeeee&fc=577084',
+            width: 150,
+            height: 150,
+          }}
+          maintainAspectRatio
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  describe('updateCache', () => {
+    it('updates cache with image uri and sizes', async () => {
+      const source = {
+        url: '//via.placeholder.com/320x240',
+      };
+      await updateCache(source);
+
+      expect(getCachedSources(source)).toContainEqual(
+        expect.objectContaining({
+          uri: 'https://via.placeholder.com/320x240',
+          url: '//via.placeholder.com/320x240',
+          width: 320,
+          height: 240,
+        })
+      );
+    });
+  });
+});
diff --git a/apolloschurchapp/src/ui/ConnectedImage/SkeletonImage.js b/apolloschurchapp/src/ui/ConnectedImage/SkeletonImage.js
new file mode 100644
index 0000000..ba9230e
--- /dev/null
+++ b/apolloschurchapp/src/ui/ConnectedImage/SkeletonImage.js
@@ -0,0 +1,12 @@
+import { View } from 'react-native';
+import Placeholder from 'rn-placeholder';
+
+import styled from 'apolloschurchapp/src/ui/styled';
+
+const SkeletonImage = styled(({ theme }) => ({
+  width: '100%',
+  aspectRatio: 1,
+  backgroundColor: theme.colors.background.inactive,
+}))(View);
+
+export default Placeholder.connect(SkeletonImage);
diff --git a/apolloschurchapp/src/ui/ConnectedImage/SkeletonImage.tests.js b/apolloschurchapp/src/ui/ConnectedImage/SkeletonImage.tests.js
new file mode 100644
index 0000000..c4a1e87
--- /dev/null
+++ b/apolloschurchapp/src/ui/ConnectedImage/SkeletonImage.tests.js
@@ -0,0 +1,17 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import { ThemeProvider } from 'apolloschurchapp/src/ui/theme';
+
+import SkeletonImage from './SkeletonImage';
+
+describe('the SkeletonImage component', () => {
+  it('should render a loading state', () => {
+    const tree = renderer.create(
+      <ThemeProvider>
+        <SkeletonImage onReady={false} />
+      </ThemeProvider>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/ConnectedImage/index.js b/apolloschurchapp/src/ui/ConnectedImage/index.js
new file mode 100644
index 0000000..0634f54
--- /dev/null
+++ b/apolloschurchapp/src/ui/ConnectedImage/index.js
@@ -0,0 +1,223 @@
+import React, { PureComponent } from 'react';
+import { Animated, Image } from 'react-native';
+import PropTypes from 'prop-types';
+import { every } from 'lodash';
+
+import styled from 'apolloschurchapp/src/ui/styled';
+
+import SkeletonImage from './SkeletonImage';
+
+// This mirrors the File resource we get from Heighliner:
+const ImageSourceType = PropTypes.oneOfType([
+  PropTypes.shape({
+    uri: PropTypes.string,
+    label: PropTypes.string,
+    width: PropTypes.number,
+    height: PropTypes.number,
+  }),
+  PropTypes.string,
+]);
+
+const sizeCache = {};
+
+const getCacheKey = (source) => {
+  if (source.size && source.fileLabel)
+    return `${source.size}-${source.fileLabel}`;
+  if (source.url) return source.url;
+  if (source.uri) return source.uri;
+  return undefined;
+};
+
+const getCachedSources = (_sources = []) => {
+  let sources = _sources;
+  if (!Array.isArray(sources)) sources = [sources];
+  sources = sources.map((source) => {
+    if (typeof source === 'string') return { url: source };
+    return source;
+  });
+
+  return sources.map((source) => ({
+    uri: (source.url || '').replace(/^http:\/\/|^\/\//i, 'https://'),
+    ...source,
+    ...(sizeCache[getCacheKey(source)] || {}),
+  }));
+};
+
+const updateCache = (sources) =>
+  Promise.all(
+    getCachedSources(sources).map((source) => {
+      const key = getCacheKey(source);
+      if (sizeCache[key] || !key) return Promise.resolve(source);
+      return new Promise((resolve, reject) => {
+        Image.getSize(
+          source.uri,
+          (width, height) =>
+            resolve({
+              width,
+              height,
+            }),
+          reject
+        );
+      }).then((sizeForCache) => {
+        if (key) sizeCache[key] = sizeForCache;
+      });
+    })
+  );
+
+const withBackgroundColor = styled(({ theme }) => ({
+  backgroundColor: theme.colors.background.inactive,
+}));
+
+class ConnectedImage extends PureComponent {
+  static propTypes = {
+    source: PropTypes.oneOfType([
+      PropTypes.arrayOf(ImageSourceType),
+      ImageSourceType,
+    ]),
+    ImageComponent: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),
+    maintainAspectRatio: PropTypes.bool,
+    isLoading: PropTypes.bool,
+    onLoad: PropTypes.func,
+    style: PropTypes.any, // eslint-disable-line
+  };
+
+  static defaultProps = {
+    ImageComponent: Animated.Image,
+    maintainAspectRatio: false,
+  };
+
+  constructor(props) {
+    super(props);
+
+    this.state = {
+      source: getCachedSources(this.props.source),
+    };
+
+    this.imageOpacity = new Animated.Value(0);
+  }
+
+  componentWillMount() {
+    this.updateCache(this.props.source);
+  }
+
+  componentWillReceiveProps(newProps) {
+    this.updateCache(newProps.source);
+  }
+
+  componentWillUnmount() {
+    if (this.cacheUpdater) this.cacheUpdater.cancel();
+  }
+
+  get aspectRatio() {
+    const style = {};
+    if (this.props.maintainAspectRatio) {
+      const firstSource = this.state.source[0];
+      if (firstSource && firstSource.width && firstSource.height) {
+        style.aspectRatio = firstSource.width / firstSource.height;
+      }
+    }
+    if (this.props.isLoading && !style.aspectRatio) {
+      style.aspectRatio = 1;
+    }
+    return style;
+  }
+
+  get isLoading() {
+    return (
+      this.props.isLoading ||
+      !every(this.state.source, (image) => image.width && image.height)
+    );
+  }
+
+  handleOnLoad = (...args) => {
+    Animated.timing(this.imageOpacity, {
+      toValue: 1,
+      duration: 250,
+    }).start();
+    if (this.props.onLoad) this.props.onLoad(...args);
+  };
+
+  cancleCacheUpdater = (promise) => {
+    let hasCanceled = false;
+
+    const wrappedPromise = new Promise((resolve, reject) => {
+      promise.then(
+        (val) => (hasCanceled ? reject({ isCanceled: true }) : resolve(val)), // eslint-disable-line
+        (error) => (hasCanceled ? reject({ isCanceled: true }) : reject(error)) // eslint-disable-line
+      );
+    });
+
+    return {
+      promise: wrappedPromise,
+      cancel() {
+        hasCanceled = true;
+      },
+    };
+  };
+
+  updateCache(sources) {
+    this.cacheUpdater = this.cancleCacheUpdater(updateCache(sources));
+    this.cacheUpdater.promise
+      .then(() => {
+        const newSource = getCachedSources(sources);
+        const oldSource = this.state.source || [];
+
+        if (
+          newSource.length !== oldSource.length ||
+          newSource.find(
+            (source, i) =>
+              !oldSource[i] ||
+              getCacheKey(source) !== getCacheKey(oldSource[i]) ||
+              source.width !== oldSource[i].width ||
+              source.height !== oldSource[i].height
+          )
+        ) {
+          this.setState({ source: getCachedSources(sources) });
+        }
+      })
+      .catch(() => {
+        // todo: Right now, if there's an error on connected image that means one of two things:
+        // 1) the image component was unmounted before load...we should do nothing
+        // 2) the image failed to load. Our "empty" state for images is a graybox.
+        //    We could make this better by showing an alert icon or something on error,
+        //    But a gray box is better then nothing. so, we do nothing currently :)
+        //    However, we still need this empty catch function as uncaught promise errors
+        //    will throw an error up the food chain.
+      });
+  }
+
+  render() {
+    let { source } = this.state;
+    if (!Array.isArray(source)) source = [source];
+
+    const {
+      ImageComponent = Animated.Image,
+      style,
+      isLoading,
+      maintainAspectRatio,
+      ...otherProps
+    } = this.props;
+    return (
+      <SkeletonImage onReady={!this.isLoading}>
+        <ImageComponent
+          {...otherProps}
+          source={source}
+          onLoad={this.handleOnLoad}
+          style={[this.aspectRatio, { opacity: this.imageOpacity }, style]}
+        />
+      </SkeletonImage>
+    );
+  }
+}
+
+const enhanced = withBackgroundColor(ConnectedImage);
+
+enhanced.propTypes = ConnectedImage.propTypes;
+
+export {
+  sizeCache,
+  getCacheKey,
+  getCachedSources,
+  updateCache,
+  enhanced as default,
+};
diff --git a/apolloschurchapp/src/ui/FeedItemCard/FeedItemCard.stories.js b/apolloschurchapp/src/ui/FeedItemCard/FeedItemCard.stories.js
new file mode 100644
index 0000000..6336b1d
--- /dev/null
+++ b/apolloschurchapp/src/ui/FeedItemCard/FeedItemCard.stories.js
@@ -0,0 +1,151 @@
+import React from 'react';
+import { View } from 'react-native';
+import { storiesOf } from '@storybook/react-native';
+
+import FeedItemCard from '.';
+
+storiesOf('FeedItemCard', module)
+  .add('Default', () => {
+    const centered = {
+      justifyContent: 'center',
+      flex: 1,
+      backgroundColor: '#f7f7f7',
+    };
+
+    return (
+      <View style={centered}>
+        <FeedItemCard
+          title={'Promised Land'}
+          channelType={'Series'}
+          images={'https://picsum.photos/600/400/?random'}
+        />
+      </View>
+    );
+  })
+  .add('isLoading', () => {
+    const centered = {
+      justifyContent: 'center',
+      flex: 1,
+      backgroundColor: '#f7f7f7',
+    };
+
+    return (
+      <View style={centered}>
+        <FeedItemCard
+          title={'Promised Land'}
+          channelType={'Series'}
+          images={'https://picsum.photos/600/400/?random'}
+          isLoading
+        />
+      </View>
+    );
+  })
+  .add('With icon', () => {
+    const centered = {
+      justifyContent: 'center',
+      flex: 1,
+      backgroundColor: '#f7f7f7',
+    };
+    return (
+      <View style={centered}>
+        <FeedItemCard
+          title={'Promised Land'}
+          channelType={'Series'}
+          channelTypeIcon={'video'}
+          images={'https://picsum.photos/600/400/?random'}
+          backgroundColor={'salmon'}
+        />
+      </View>
+    );
+  })
+  .add('With dark backgroundColor', () => {
+    const centered = {
+      justifyContent: 'center',
+      flex: 1,
+      backgroundColor: '#f7f7f7',
+    };
+    return (
+      <View style={centered}>
+        <FeedItemCard
+          title={'Promised Land'}
+          channelType={'Series'}
+          images={'https://picsum.photos/600/400/?random'}
+          backgroundColor={'salmon'}
+          isLight={false}
+        />
+      </View>
+    );
+  })
+  .add('With isLight and light backgroundColor', () => {
+    const centered = {
+      justifyContent: 'center',
+      flex: 1,
+      backgroundColor: '#f7f7f7',
+    };
+    return (
+      <View style={centered}>
+        <FeedItemCard
+          title={'Promised Land'}
+          channelType={'Series'}
+          images={'https://picsum.photos/600/400/?random'}
+          backgroundColor={'papayawhip'}
+          isLight
+        />
+      </View>
+    );
+  });
+// .add('As liked', () => {
+//   const centered = {
+//     justifyContent: 'center',
+//     flex: 1,
+//     backgroundColor: '#f7f7f7',
+//   };
+//   return (
+//     <View style={centered}>
+//       <FeedItemCard
+//         title={'Promised Land'}
+//         category={'Series'}
+//         images={'https://picsum.photos/600/400/?random'}
+//         isLiked
+//       />
+//     </View>
+//   );
+// })
+// .add('As liked with backgroundColor', () => {
+//   const centered = {
+//     justifyContent: 'center',
+//     flex: 1,
+//     backgroundColor: '#f7f7f7',
+//   };
+//   return (
+//     <View style={centered}>
+//       <FeedItemCard
+//         title={'Promised Land'}
+//         category={'Series'}
+//         images={'https://picsum.photos/600/400/?random'}
+//         backgroundColor={'salmon'}
+//         isLight={false}
+//         isLiked
+//       />
+//     </View>
+//   );
+// })
+// .add('As liked with isLight and light backgroundColor', () => {
+//   const centered = {
+//     justifyContent: 'center',
+//     flex: 1,
+//     backgroundColor: '#f7f7f7',
+//   };
+//   return (
+//     <View style={centered}>
+//       <FeedItemCard
+//         title={'Promised Land'}
+//         category={'Series'}
+//         images={'https://picsum.photos/600/400/?random'}
+//         backgroundColor={'papayawhip'}
+//         isLight
+//         isLiked
+//       />
+//     </View>
+//   );
+// });
diff --git a/apolloschurchapp/src/ui/FeedItemCard/FeedItemCard.tests.js b/apolloschurchapp/src/ui/FeedItemCard/FeedItemCard.tests.js
new file mode 100644
index 0000000..9371bfe
--- /dev/null
+++ b/apolloschurchapp/src/ui/FeedItemCard/FeedItemCard.tests.js
@@ -0,0 +1,146 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import FeedItemCard from '.';
+
+describe('the FeedItemCard component', () => {
+  it('should render', () => {
+    const tree = renderer.create(
+      <Providers>
+        <FeedItemCard
+          title={'Boom'}
+          channelType={'What'}
+          images={[
+            {
+              uri: 'https://picsum.photos/600/400/?random',
+              width: 600,
+              height: 400,
+            },
+          ]}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render with an icon', () => {
+    const tree = renderer.create(
+      <Providers>
+        <FeedItemCard
+          title={'Boom'}
+          channelType={'What'}
+          channelTypeIcon={'play'}
+          images={[
+            {
+              uri: 'https://picsum.photos/600/400/?random',
+              width: 600,
+              height: 400,
+            },
+          ]}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render with inverted (light) font colors', () => {
+    const tree = renderer.create(
+      <Providers>
+        <FeedItemCard
+          title={'Boom'}
+          channelType={'What'}
+          images={[
+            {
+              uri: 'https://picsum.photos/600/400/?random',
+              width: 600,
+              height: 400,
+            },
+          ]}
+          isLight={false}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should accept a different backgroundColor', () => {
+    const tree = renderer.create(
+      <Providers>
+        <FeedItemCard
+          title={'Boom'}
+          channelType={'What'}
+          images={[
+            {
+              uri: 'https://picsum.photos/600/400/?random',
+              width: 600,
+              height: 400,
+            },
+          ]}
+          backgroundColor={'salmon'}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render text correctly with isLight', () => {
+    const tree = renderer.create(
+      <Providers>
+        <FeedItemCard
+          title={'Boom'}
+          channelType={'What'}
+          images={[
+            {
+              uri: 'https://picsum.photos/600/400/?random',
+              width: 600,
+              height: 400,
+            },
+          ]}
+          isLight
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  // it('should render as liked', () => {
+  //   const tree = renderer.create(
+  //     <Providers>
+  //       <FeedItemCard
+  //         title={'Boom'}
+  //         category={'What'}
+  //         images={[
+  //           {
+  //             uri: 'https://picsum.photos/600/400/?random',
+  //             width: 600,
+  //             height: 400,
+  //           },
+  //         ]}
+  //         isLiked
+  //       />
+  //     </Providers>
+  //   );
+  //   expect(tree).toMatchSnapshot();
+  // });
+  it('should accept and render passed in styles', () => {
+    const cardDimensions = {
+      height: 400,
+      width: '92%',
+    };
+
+    const tree = renderer.create(
+      <Providers>
+        <FeedItemCard
+          title={'Boom'}
+          channelType={'What'}
+          images={[
+            {
+              uri: 'https://picsum.photos/600/400/?random',
+              width: 600,
+              height: 400,
+            },
+          ]}
+          style={cardDimensions}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/FeedItemCard/LikeButton.js b/apolloschurchapp/src/ui/FeedItemCard/LikeButton.js
new file mode 100644
index 0000000..cdb41c7
--- /dev/null
+++ b/apolloschurchapp/src/ui/FeedItemCard/LikeButton.js
@@ -0,0 +1,13 @@
+import { TouchableOpacity } from 'react-native';
+import { compose, mapProps } from 'recompose';
+// import withToggleLike from '@data/likes/withToggleLike';
+
+const enhance = compose(
+  // withToggleLike,
+  mapProps(({ toggleLike, id, ...otherProps }) => ({
+    onPress: () => toggleLike(id),
+    ...otherProps,
+  }))
+);
+
+export default enhance(TouchableOpacity);
diff --git a/apolloschurchapp/src/ui/FeedItemCard/index.js b/apolloschurchapp/src/ui/FeedItemCard/index.js
new file mode 100644
index 0000000..8e8dd74
--- /dev/null
+++ b/apolloschurchapp/src/ui/FeedItemCard/index.js
@@ -0,0 +1,92 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import { compose, pure } from 'recompose';
+import { startCase, toLower } from 'lodash';
+
+import { withThemeMixin, withTheme } from 'apolloschurchapp/src/ui/theme';
+import Icon from 'apolloschurchapp/src/ui/Icon';
+import ChannelLabel from 'apolloschurchapp/src/ui/ChannelLabel';
+import GradientOverlayImage from 'apolloschurchapp/src/ui/GradientOverlayImage';
+import Card, { CardContent, CardActions } from 'apolloschurchapp/src/ui/Card';
+import { H3 } from 'apolloschurchapp/src/ui/typography';
+// import ConnectedImage from 'apolloschurchapp/src/ui/ConnectedImage';
+// import ProgressiveImage from 'apolloschurchapp/src/ui/ProgressiveImage';
+
+// import LikeButton from './LikeButton';
+
+const enhance = compose(
+  pure,
+  withThemeMixin(({ isLight }) => ({
+    type: isLight ? 'light' : 'dark',
+  })),
+  withTheme()
+);
+
+const FeedItemCard = enhance(
+  ({
+    images,
+    title,
+    channelType,
+    channelTypeIcon,
+    isLoading,
+    isLight,
+    isLiked,
+    backgroundColor,
+    theme,
+    id,
+    ...otherProps
+  }) => (
+    <Card isLoading={isLoading} cardColor={backgroundColor} {...otherProps}>
+      <GradientOverlayImage
+        isLoading={isLoading}
+        source={images}
+        overlayColor={backgroundColor}
+      />
+      <CardContent>
+        <H3 isLoading={isLoading}>{title}</H3>
+      </CardContent>
+      <CardActions>
+        <ChannelLabel
+          label={startCase(toLower(channelType))}
+          icon={channelTypeIcon}
+          isLoading={isLoading}
+          withFlex
+        />
+        <Icon
+          name={isLiked ? 'like-solid' : 'like'}
+          size={theme.helpers.rem(1.2)}
+          fill={theme.colors.text.primary}
+          isLoading={isLoading}
+        />
+      </CardActions>
+    </Card>
+  )
+);
+
+const sourcePropType = PropTypes.oneOfType([
+  PropTypes.arrayOf(
+    PropTypes.shape({
+      uri: PropTypes.string,
+    })
+  ),
+  PropTypes.string,
+]);
+
+FeedItemCard.propTypes = {
+  title: PropTypes.string.isRequired,
+  images: sourcePropType,
+  channelType: PropTypes.string,
+  channelTypeIcon: PropTypes.string,
+  isLoading: PropTypes.bool,
+  isLiked: PropTypes.bool,
+  isLight: PropTypes.bool,
+  backgroundColor: PropTypes.string,
+  style: PropTypes.any, // eslint-disable-line
+};
+
+FeedItemCard.defaultProps = {
+  isLight: true,
+  channelTypeIcon: null,
+};
+
+export default FeedItemCard;
diff --git a/apolloschurchapp/src/ui/FeedView/FeedView.stories.js b/apolloschurchapp/src/ui/FeedView/FeedView.stories.js
new file mode 100644
index 0000000..e1f3cb6
--- /dev/null
+++ b/apolloschurchapp/src/ui/FeedView/FeedView.stories.js
@@ -0,0 +1,63 @@
+import React from 'react';
+import { storiesOf } from '@storybook/react-native';
+
+import FeedView from '.';
+
+storiesOf('FeedView', module).add('Example', () => (
+  <FeedView
+    content={[
+      {
+        node: {
+          id: '1',
+          title: "Will I get to shake Jesus' hand?",
+          coverImage: [
+            {
+              uri: 'https://picsum.photos/600/400/?random',
+              width: 600,
+              height: 400,
+            },
+          ],
+          theme: {
+            isLight: true,
+            colors: {
+              background: {
+                paper: '#fa8072',
+              },
+            },
+          },
+          parentChannel: {
+            id: '01',
+            name: 'eschatology',
+            iconName: 'like',
+          },
+        },
+      },
+      {
+        node: {
+          id: '2',
+          title: 'Where is the new Jerusalem anyways?',
+          coverImage: [
+            {
+              uri: 'https://picsum.photos/600/400/?random',
+              width: 600,
+              height: 400,
+            },
+          ],
+          theme: {
+            isLight: true,
+            colors: {
+              background: {
+                paper: '#e9967a',
+              },
+            },
+          },
+          parentChannel: {
+            id: '02',
+            name: 'eschatology',
+            iconName: 'like',
+          },
+        },
+      },
+    ]}
+  />
+));
diff --git a/apolloschurchapp/src/ui/FeedView/FeedView.tests.js b/apolloschurchapp/src/ui/FeedView/FeedView.tests.js
new file mode 100644
index 0000000..ce1b3f5
--- /dev/null
+++ b/apolloschurchapp/src/ui/FeedView/FeedView.tests.js
@@ -0,0 +1,147 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+import { TouchableWithoutFeedback } from 'react-native';
+import { get } from 'lodash';
+
+import Providers from 'apolloschurchapp/src/Providers';
+import FeedItemCard from 'apolloschurchapp/src/ui/FeedItemCard';
+
+import FeedView from '.';
+
+describe('The FeedView component', () => {
+  it('renders correctly', () => {
+    const tree = renderer.create(
+      <Providers>
+        <FeedView
+          content={[
+            {
+              node: {
+                id: '1',
+                title: "Will I get to shake Jesus' hand?",
+                coverImage: [
+                  {
+                    uri: 'https://picsum.photos/600/400/?random',
+                    width: 600,
+                    height: 400,
+                  },
+                ],
+                theme: {
+                  isLight: true,
+                  colors: {
+                    background: {
+                      paper: '#fa8072',
+                    },
+                  },
+                },
+                parentChannel: {
+                  id: '01',
+                  name: 'eschatology',
+                  iconName: 'like',
+                },
+              },
+            },
+            {
+              node: {
+                id: '2',
+                title: 'Where is the new Jerusalem anyways?',
+                coverImage: [
+                  {
+                    uri: 'https://picsum.photos/600/400/?random',
+                    width: 600,
+                    height: 400,
+                  },
+                ],
+                theme: {
+                  isLight: true,
+                  colors: {
+                    background: {
+                      paper: '#e9967a',
+                    },
+                  },
+                },
+                parentChannel: {
+                  id: '02',
+                  name: 'eschatology',
+                  iconName: 'like',
+                },
+              },
+            },
+          ]}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('renders empty state', () => {
+    const tree = renderer.create(
+      <Providers>
+        <FeedView isLoading content={[]} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('handles a renderItem prop', () => {
+    const renderItem = (item) => {
+      const theItem = get(item, 'item', {});
+      return (
+        <TouchableWithoutFeedback>
+          <FeedItemCard
+            id={theItem.node.id}
+            title={theItem.node.title || theItem.node.name || ' '}
+            channelType={theItem.node.parentChannel.name}
+            channelTypeIcon={theItem.node.parentChannel.iconName}
+            images={theItem.node.coverImage.sources}
+            isLoading={theItem.node.isLoading}
+          />
+        </TouchableWithoutFeedback>
+      );
+    };
+
+    const tree = renderer.create(
+      <Providers>
+        <FeedView
+          isLoading
+          content={[
+            {
+              node: {
+                id: '1',
+                title: "Will I get to shake Jesus' hand?",
+                coverImage: [
+                  {
+                    uri: 'https://picsum.photos/600/400/?random',
+                    width: 600,
+                    height: 400,
+                  },
+                ],
+                theme: {
+                  isLight: true,
+                  colors: {
+                    background: {
+                      paper: '#fa8072',
+                    },
+                  },
+                },
+                parentChannel: {
+                  id: '01',
+                  name: 'eschatology',
+                  iconName: 'like',
+                },
+              },
+            },
+          ]}
+          renderItem={renderItem}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('passes an onPressItem prop', () => {
+    const onPress = () => {};
+    const tree = renderer.create(
+      <Providers>
+        <FeedView isLoading content={[]} onPressItem={onPress} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/FeedView/index.js b/apolloschurchapp/src/ui/FeedView/index.js
new file mode 100644
index 0000000..da91622
--- /dev/null
+++ b/apolloschurchapp/src/ui/FeedView/index.js
@@ -0,0 +1,170 @@
+import React, { Component } from 'react';
+import { FlatList, TouchableWithoutFeedback } from 'react-native';
+import PropTypes from 'prop-types';
+import { pure, compose, branch, withProps, defaultProps } from 'recompose';
+import { get } from 'lodash';
+
+import FeedItemCard from 'apolloschurchapp/src/ui/FeedItemCard';
+import { enhancer as mediaQuery } from 'apolloschurchapp/src/ui/MediaQuery';
+import { withTheme } from 'apolloschurchapp/src/ui/theme';
+import { ErrorCard } from 'apolloschurchapp/src/ui/Card';
+
+const StyledFlatList = compose(
+  withTheme(({ theme: { helpers: { verticalRhythm } } } = {}) => ({
+    contentContainerStyle: { paddingVertical: verticalRhythm(0.3125) }, // Android padding fix 😩
+  }))
+)(FlatList);
+
+class FeedView extends Component {
+  static propTypes = {
+    content: PropTypes.array, // eslint-disable-line
+    error: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),
+    fetchMore: PropTypes.func,
+    isLoading: PropTypes.bool,
+    keyExtractor: PropTypes.func,
+    ListEmptyComponent: PropTypes.func,
+    numColumns: PropTypes.number,
+    onEndReachedThreshold: PropTypes.number,
+    onPressItem: PropTypes.func,
+    refetch: PropTypes.func,
+    renderEmptyState: PropTypes.func,
+    renderItem: PropTypes.func,
+  };
+
+  static defaultProps = {
+    isLoading: false,
+    // renderItem: this.defaultFeedItemRenderer,
+    onEndReachedThreshold: 0.7,
+    keyExtractor: (item) => item && item.id,
+    content: [],
+    refetch: undefined,
+    fetchMore: undefined,
+  };
+
+  refetchHandler = ({ isLoading, refetch }) =>
+    refetch && ((...args) => !isLoading && refetch(...args));
+
+  fetchMoreHandler = ({ fetchMore, error, isLoading }) =>
+    fetchMore && ((...args) => !isLoading && !error && fetchMore(...args));
+
+  renderItem = ({ item }) => {
+    if (this.props.renderItem) {
+      return this.props.renderItem({ item });
+    }
+    return (
+      // These are all props of FeedItemCard but they do not have data coming
+      // back yet. So I moved them here for safe keeping.
+      // TODO: Move them back when the data is ready.
+      // backgroundColor={item.theme.colors.background.paper}
+      // isLight={item.theme.isLight}
+      // isLiked={item.isLiked}
+      <TouchableWithoutFeedback
+        onPress={() => this.props.onPressItem({ ...item })}
+      >
+        <FeedItemCard
+          id={get(item, 'id')}
+          title={get(item, 'title') || get(item, 'name') || ' '}
+          isLiked={get(item, 'isLiked')}
+          channelType={get(item, 'parentChannel.name')}
+          channelTypeIcon={get(item, 'parentChannel.iconName')}
+          images={get(item, 'coverImage.sources')}
+          isLoading={get(item, 'isLoading')}
+        />
+      </TouchableWithoutFeedback>
+    );
+  };
+
+  render() {
+    const {
+      content,
+      error,
+      fetchMore,
+      isLoading,
+      keyExtractor,
+      ListEmptyComponent,
+      numColumns,
+      onEndReachedThreshold,
+      refetch,
+      renderEmptyState,
+      renderItem,
+      ...otherProps
+    } = this.props;
+
+    return (
+      <StyledFlatList
+        {...otherProps}
+        data={content}
+        keyExtractor={keyExtractor}
+        ListEmptyComponent={
+          error && !isLoading && (!content || !content.length) ? (
+            <ErrorCard error={error} />
+          ) : (
+            ListEmptyComponent
+          )
+        }
+        numColumns={numColumns}
+        onEndReached={this.fetchMoreHandler({ fetchMore, error, isLoading })}
+        onEndReachedThreshold={onEndReachedThreshold}
+        onRefresh={this.refetchHandler({ isLoading, refetch })}
+        refreshing={isLoading}
+        renderItem={this.renderItem}
+      />
+    );
+  }
+}
+
+const defaultLoadingState = {
+  id: 'fakeId0',
+  isLoading: true,
+  title: '',
+  channelType: '',
+  coverImage: [],
+  theme: {
+    isLight: '',
+    colors: {
+      background: {
+        paper: '',
+      },
+    },
+  },
+  parentChannel: {
+    id: '',
+    name: '',
+  },
+};
+
+const generateLoadingStateData = (
+  numberOfItems = 1,
+  loadingStateObject = defaultLoadingState
+) => {
+  const itemData = () => ({ ...loadingStateObject });
+
+  const loadingStateData = [];
+
+  while (loadingStateData.length < numberOfItems) {
+    const newData = itemData();
+    newData.id = `fakeId${loadingStateData.length}`;
+    loadingStateData.push(newData);
+  }
+
+  return loadingStateData;
+};
+
+const enhance = compose(
+  pure,
+  branch(
+    ({ isLoading, content }) => isLoading && !content.length,
+    withProps(({ loadingStateObject }) => ({
+      isLoading: true,
+      content: generateLoadingStateData(10, loadingStateObject),
+      fetchMore: () => {},
+    }))
+  ),
+  mediaQuery(
+    ({ md }) => ({ maxWidth: md }),
+    defaultProps({ numColumns: 1 }),
+    defaultProps({ numColumns: 2 })
+  )
+);
+
+export default enhance(FeedView);
diff --git a/apolloschurchapp/src/ui/FlexedView/FlexedView.stories.js b/apolloschurchapp/src/ui/FlexedView/FlexedView.stories.js
new file mode 100644
index 0000000..32290a0
--- /dev/null
+++ b/apolloschurchapp/src/ui/FlexedView/FlexedView.stories.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import { storiesOf } from '@storybook/react-native';
+
+import { H1 } from 'apolloschurchapp/src/ui/typography';
+import styled from 'apolloschurchapp/src/ui/styled';
+
+import FlexedView from '.';
+
+storiesOf('FlexedView', module).add('Example', () => {
+  const FlexedSalmonView = styled({
+    backgroundColor: 'salmon',
+  })(FlexedView);
+
+  return (
+    <FlexedView>
+      <FlexedSalmonView>
+        <H1>This box is in a FlexedView</H1>
+      </FlexedSalmonView>
+    </FlexedView>
+  );
+});
diff --git a/apolloschurchapp/src/ui/Onboarding/Onboarding.tests.js b/apolloschurchapp/src/ui/FlexedView/FlexedView.tests.js
similarity index 52%
rename from apolloschurchapp/src/ui/Onboarding/Onboarding.tests.js
rename to apolloschurchapp/src/ui/FlexedView/FlexedView.tests.js
index abe9746..b248969 100644
--- a/apolloschurchapp/src/ui/Onboarding/Onboarding.tests.js
+++ b/apolloschurchapp/src/ui/FlexedView/FlexedView.tests.js
@@ -1,15 +1,15 @@
 import React from 'react';
 import renderer from 'react-test-renderer';
 
-import Providers from '../../Providers';
+import Providers from 'apolloschurchapp/src/Providers';
 
-import Onboarding from '.';
+import FlexedView from '.';
 
-describe('the Onboarding component', () => {
-  it('should render Onboarding', () => {
+describe('the FlexedView component', () => {
+  it('should render', () => {
     const tree = renderer.create(
       <Providers>
-        <Onboarding />
+        <FlexedView />
       </Providers>
     );
     expect(tree).toMatchSnapshot();
diff --git a/apolloschurchapp/src/ui/FlexedView/index.js b/apolloschurchapp/src/ui/FlexedView/index.js
new file mode 100644
index 0000000..e1fe7aa
--- /dev/null
+++ b/apolloschurchapp/src/ui/FlexedView/index.js
@@ -0,0 +1,12 @@
+import { View } from 'react-native';
+
+import styled from 'apolloschurchapp/src/ui/styled';
+
+const FlexedView = styled(
+  {
+    flex: 1,
+  },
+  'FlexedView'
+)(View);
+
+export default FlexedView;
diff --git a/apolloschurchapp/src/ui/GradientOverlayImage/GradientOverlayImage.stories.js b/apolloschurchapp/src/ui/GradientOverlayImage/GradientOverlayImage.stories.js
new file mode 100644
index 0000000..b8dd80b
--- /dev/null
+++ b/apolloschurchapp/src/ui/GradientOverlayImage/GradientOverlayImage.stories.js
@@ -0,0 +1,15 @@
+import React from 'react';
+import { storiesOf } from '@storybook/react-native';
+
+import GradientOverlayImage from '.';
+
+storiesOf('GradientOverlayImage', module)
+  .add('Default', () => (
+    <GradientOverlayImage source={'https://picsum.photos/600/400/?random'} />
+  ))
+  .add('With Overlay', () => (
+    <GradientOverlayImage
+      source={'https://picsum.photos/600/400/?random'}
+      overlayColor={'salmon'}
+    />
+  ));
diff --git a/apolloschurchapp/src/ui/GradientOverlayImage/GradientOverlayImage.tests.js b/apolloschurchapp/src/ui/GradientOverlayImage/GradientOverlayImage.tests.js
new file mode 100644
index 0000000..0a86354
--- /dev/null
+++ b/apolloschurchapp/src/ui/GradientOverlayImage/GradientOverlayImage.tests.js
@@ -0,0 +1,42 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import GradientOverlayImage from '.';
+
+describe('the GradientOverlayImage component', () => {
+  it('should render', () => {
+    const tree = renderer.create(
+      <Providers>
+        <GradientOverlayImage
+          source={[
+            {
+              uri: 'https://picsum.photos/600/400/?random',
+              width: 600,
+              height: 400,
+            },
+          ]}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render with an overlayColor', () => {
+    const tree = renderer.create(
+      <Providers>
+        <GradientOverlayImage
+          source={[
+            {
+              uri: 'https://picsum.photos/600/400/?random',
+              width: 600,
+              height: 400,
+            },
+          ]}
+          overlayColor={'salmon'}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/GradientOverlayImage/index.js b/apolloschurchapp/src/ui/GradientOverlayImage/index.js
new file mode 100644
index 0000000..01be2b1
--- /dev/null
+++ b/apolloschurchapp/src/ui/GradientOverlayImage/index.js
@@ -0,0 +1,101 @@
+import React from 'react';
+import { StyleSheet, View } from 'react-native';
+import LinearGradient from 'react-native-linear-gradient';
+import PropTypes from 'prop-types';
+import { pure } from 'recompose';
+import Color from 'color';
+
+import styled from 'apolloschurchapp/src/ui/styled';
+import ConnectedImage from 'apolloschurchapp/src/ui/ConnectedImage';
+
+const Overlay = styled(StyleSheet.absoluteFillObject)(LinearGradient);
+
+const getGradientValues = (overlayColor) => {
+  const values = {
+    colors: [
+      `${Color(overlayColor)
+        .fade(1)
+        .string()}`,
+      overlayColor,
+    ],
+    start: { x: 0, y: 0 },
+    end: { x: 0, y: 1 },
+    locations: [0.3, 1],
+  };
+
+  return values;
+};
+
+const Container = styled(({ theme }) => ({
+  width: '100%',
+  backgroundColor: theme.colors.background.inactive,
+}))(View);
+
+const DefaultImageComponent = styled({
+  width: '100%',
+  resizeMode: 'cover',
+})(ConnectedImage);
+
+const NoImagePlaceholder = styled(({ theme }) => ({
+  width: '100%',
+  aspectRatio: 1,
+  backgroundColor: theme.colors.background.inactive,
+}))(View);
+
+const GradientOverlayImage = pure(
+  ({
+    source: imageSource,
+    overlayColor,
+    ImageComponent: ComponentProp,
+    isLoading,
+    ...otherProps
+  }) => {
+    const Component = ComponentProp || DefaultImageComponent;
+    return (
+      <Container>
+        {imageSource || isLoading ? (
+          <Component
+            source={imageSource}
+            isLoading={isLoading}
+            {...otherProps}
+          />
+        ) : (
+          <NoImagePlaceholder />
+        )}
+        {overlayColor ? (
+          <Overlay
+            colors={getGradientValues(overlayColor).colors}
+            start={getGradientValues(overlayColor).start}
+            end={getGradientValues(overlayColor).end}
+            locations={getGradientValues(overlayColor).locations}
+          />
+        ) : null}
+      </Container>
+    );
+  }
+);
+
+const source = PropTypes.oneOfType([
+  PropTypes.arrayOf(
+    PropTypes.shape({
+      uri: PropTypes.string,
+      label: PropTypes.string,
+      width: PropTypes.number,
+      height: PropTypes.number,
+    })
+  ),
+  PropTypes.string,
+]);
+
+GradientOverlayImage.propTypes = {
+  source,
+  overlayColor: PropTypes.string,
+  ImageComponent: PropTypes.func,
+  maintainAspectRatio: PropTypes.bool,
+};
+
+GradientOverlayImage.defaultProps = {
+  maintainAspectRatio: true,
+};
+
+export default GradientOverlayImage;
diff --git a/apolloschurchapp/src/ui/HTMLView/HTMLView.stories.js b/apolloschurchapp/src/ui/HTMLView/HTMLView.stories.js
new file mode 100644
index 0000000..0d69e14
--- /dev/null
+++ b/apolloschurchapp/src/ui/HTMLView/HTMLView.stories.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import { ScrollView } from 'react-native';
+import { storiesOf } from '@storybook/react-native';
+
+import HTMLView from '.';
+
+storiesOf('HTMLView', module)
+  .add('Example', () => (
+    <ScrollView>
+      <HTMLView>
+        {
+          "<p>I sat on my couch next to my high school <a href='https://newspringfuse.com/groups' target='_blank'>Fuse Group</a>, silently fuming at their inability to put their phones down during Bible study. Finally, I spoke up, teasing one of the girls in a tone that clearly said, &ldquo;I&rsquo;m not actually kidding.&rdquo;&nbsp;</p>\n\n<p>A few days later, I was in the car with my sister, and as I sat in the passenger seat responding to emails, I heard her laugh and say, &ldquo;You always mumble when you are typing. Stop doing that.&rdquo;&nbsp;</p>\n\n<p>&ldquo;Sorry,&rdquo; I responded. &ldquo;I just don&rsquo;t want people to think I&rsquo;m ignoring them when I&rsquo;m typing.&rdquo;</p>\n\n<p>But the truth is, I am ignoring them! In my head, this behavior is totally acceptable. I tell myself I&rsquo;m tending to my priorities in order, and in doing so, I send a message to the person in front of me that she is of lesser importance.</p>\n\n<blockquote>\n<p>My phone is the primary outlet that distracts me from people who need my attention.</p>\n</blockquote>\n\n<p>I quickly get frustrated when I am the one on the outside, but how often to I shut others out during my own social media binges or email frenzies? Just like my girls, I&rsquo;m learning that my phone is the primary outlet that distracts me from people who need my attention.</p>\n\n<h3>Why Being Present Matters</h3>\n\n<p>There is nothing wrong with using our phones &mdash; as long as we remember that the best investment we can make is to invest in our relationships with Jesus and each other. We were created for <a href='http://newspring.cc/community' target='_blank'>community</a> by God, who exists in community as Father, Son, and Holy Spirit (John 1:1-2, Genesis 2:18).&nbsp;</p>\n\n<p>Our phones help us stay connected, but they are not the foundation of all connection. If we&rsquo;re honest, our phones are much quicker to distract and disengage us from the people right in front of us.&nbsp;</p>\n\n<p>Jesus said loving God and loving others is greatest of all God&rsquo;s commandments (Matthew 22:38-40). And, after trying everything the world had to offer, King Solomon reminded his people that their relationships with God and others are the only things that really matter (Ecclesiastes 2:24-26, Ecclesiastes 3:9).&nbsp;</p>\n\n<blockquote>\n<p>Greater love has no one than this: to lay down one&rsquo;s phone for one&rsquo;s loved ones.</p>\n</blockquote>\n\n<p>So the next time we feel like we have to text back immediately or tweet before someone else does, consider:&nbsp;</p>\n\n<ul>\n\t<li>Am I putting others before myself right now?</li>\n\t<li>How can I love the people around me if I&rsquo;m not even paying attention to them?</li>\n\t<li>What if Jesus wants to speak through me, but I&rsquo;ve got my nose stuck in my phone?&nbsp;</li>\n</ul>\n\n<p>The world won&rsquo;t implode if we don&rsquo;t reply to every text or email immediately. And that Instagram picture doesn&rsquo;t need to go up ASAP. If it&rsquo;s already been a week between posts, what&rsquo;s a few more hours? We love everyone better &mdash; our friends to our coworkers to our social media followers &mdash; when we give them the gift of our full attention.&nbsp;</p>\n\n<p>I can almost hear Jesus saying, &ldquo;Greater love has no one than this: to lay down one&rsquo;s phone for one&rsquo;s loved ones&rdquo;&nbsp; (John 15:13).&nbsp;</p>\n\n<h3>Four Ways To Stay Away From Your Phone And Be Intentionally Present</h3>\n\n<p><a href='http://newspring.cc/christmas' target='_blank'>This holiday season</a>, we will have more opportunities to be around friends and family than usual. So let&rsquo;s make the most of each minute. The following are some tips can help us all be a little more present.&nbsp;&nbsp;</p>\n\n<ol>\n\t<li>Turn your phone off, leave it in the car, or put it in airplane mode. Habitual notification checks can take a break.</li>\n\t<li>Talk about something other than yourself. Ask someone else about their life (job, school, kids).</li>\n\t<li>Look for opportunities to encourage someone. Ask the Holy Spirit to speak through you and help you love people.</li>\n\t<li>Ask Jesus to keep your heart interested and engaged in what really matters. He wants to help!</li>\n</ol>\n\n<p>Intentionally taking advantage of time with loved ones sometimes does require sacrificing our own immediate desires or comforts, but that&rsquo;s what we are commanded to do (Philippians 2:3).&nbsp;</p>\n\n<p>Take pictures, but don&rsquo;t let the only memory be a digital one. The positive outcome of interactions should be more than Instagram likes. Unplug from social media, choose to be present, and you will be surprised at the good it does for your heart and the hearts of those around you.&nbsp;</p>"
+        }
+      </HTMLView>
+    </ScrollView>
+  ))
+  .add('isLoading', () => (
+    <ScrollView>
+      <HTMLView isLoading />
+    </ScrollView>
+  ));
diff --git a/apolloschurchapp/src/ui/HTMLView/HTMLView.tests.js b/apolloschurchapp/src/ui/HTMLView/HTMLView.tests.js
new file mode 100644
index 0000000..a0eb6ec
--- /dev/null
+++ b/apolloschurchapp/src/ui/HTMLView/HTMLView.tests.js
@@ -0,0 +1,191 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import HTMLView from '.';
+
+describe('the HTMLView component', () => {
+  it('should render an H1', () => {
+    const tree = renderer.create(
+      <Providers>
+        <HTMLView>{'<h1>Testings</h1>'}</HTMLView>
+      </Providers>
+    );
+
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render an H2', () => {
+    const tree = renderer.create(
+      <Providers>
+        <HTMLView>{'<h2>Testings</h2>'}</HTMLView>
+      </Providers>
+    );
+
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render an H3', () => {
+    const tree = renderer.create(
+      <Providers>
+        <HTMLView>{'<h3>Testings</h3>'}</HTMLView>
+      </Providers>
+    );
+
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render an H4', () => {
+    const tree = renderer.create(
+      <Providers>
+        <HTMLView>{'<h4>Testings</h4>'}</HTMLView>
+      </Providers>
+    );
+
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render an H5', () => {
+    const tree = renderer.create(
+      <Providers>
+        <HTMLView>{'<h5>Testings</h5>'}</HTMLView>
+      </Providers>
+    );
+
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render an H6', () => {
+    const tree = renderer.create(
+      <Providers>
+        <HTMLView>{'<h6>Testings</h6>'}</HTMLView>
+      </Providers>
+    );
+
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a paragraph', () => {
+    const tree = renderer.create(
+      <Providers>
+        <HTMLView>{'<p>Testings</p>'}</HTMLView>
+      </Providers>
+    );
+
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render italic text', () => {
+    const tree = renderer.create(
+      <Providers>
+        <HTMLView>{'<p><em>Testings</em></p>'}</HTMLView>
+      </Providers>
+    );
+
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render bold text', () => {
+    const tree = renderer.create(
+      <Providers>
+        <HTMLView>{'<p><strong>Testings</strong></p>'}</HTMLView>
+      </Providers>
+    );
+
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a block quote', () => {
+    const tree = renderer.create(
+      <Providers>
+        <HTMLView>
+          {'<p>Testings</p><blockquote>Testings</blockquote>'}
+        </HTMLView>
+      </Providers>
+    );
+
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a list', () => {
+    const tree = renderer.create(
+      <Providers>
+        <HTMLView>{'<ul><li>Testings</li><li>Testings</li></ul>'}</HTMLView>
+      </Providers>
+    );
+
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a link', () => {
+    const tree = renderer.create(
+      <Providers>
+        <HTMLView>
+          {'<p>Testings <a href="http://wwww.google.com">Google</a></p>'}
+        </HTMLView>
+      </Providers>
+    );
+
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render handle relative links', () => {
+    const tree = renderer.create(
+      <Providers>
+        <HTMLView>
+          {'<p>Testings <a href="//google.com">Google</a></p>'}
+        </HTMLView>
+      </Providers>
+    );
+
+    expect(tree).toMatchSnapshot();
+  });
+  it('strips out badly formatted links', () => {
+    const tree = renderer.create(
+      <Providers>
+        <HTMLView>{"<p><a href='{page_536525}'>Bad link</a></p>"}</HTMLView>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render an image', () => {
+    const tree = renderer.create(
+      <Providers>
+        <HTMLView>
+          {'<img src="https://placeholdit.co/i/150x150?bg=eeeeee&fc=577084" />'}
+        </HTMLView>
+      </Providers>
+    );
+
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a line break (br)', () => {
+    const tree = renderer.create(
+      <Providers>
+        <HTMLView>{'<p>Testings</p><br>'}</HTMLView>
+      </Providers>
+    );
+
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a loading state', () => {
+    const tree = renderer.create(
+      <Providers>
+        <HTMLView isLoading />
+      </Providers>
+    );
+
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render example HTML', () => {
+    const tree = renderer.create(
+      <Providers>
+        <HTMLView>
+          {
+            "<p>I sat on my couch next to my high school <a href='https://newspringfuse.com/groups' target='_blank'>Fuse Group</a>, silently fuming at their inability to put their phones down during Bible study. Finally, I spoke up, teasing one of the girls in a tone that clearly said, &ldquo;I&rsquo;m not actually kidding.&rdquo;&nbsp;</p>\n\n<p>A few days later, I was in the car with my sister, and as I sat in the passenger seat responding to emails, I heard her laugh and say, &ldquo;You always mumble when you are typing. Stop doing that.&rdquo;&nbsp;</p>\n\n<p>&ldquo;Sorry,&rdquo; I responded. &ldquo;I just don&rsquo;t want people to think I&rsquo;m ignoring them when I&rsquo;m typing.&rdquo;</p>\n\n<p>But the truth is, I am ignoring them! In my head, this behavior is totally acceptable. I tell myself I&rsquo;m tending to my priorities in order, and in doing so, I send a message to the person in front of me that she is of lesser importance.</p>\n\n<blockquote>\n<p>My phone is the primary outlet that distracts me from people who need my attention.</p>\n</blockquote>\n\n<p>I quickly get frustrated when I am the one on the outside, but how often to I shut others out during my own social media binges or email frenzies? Just like my girls, I&rsquo;m learning that my phone is the primary outlet that distracts me from people who need my attention.</p>\n\n<h3>Why Being Present Matters</h3>\n\n<p>There is nothing wrong with using our phones &mdash; as long as we remember that the best investment we can make is to invest in our relationships with Jesus and each other. We were created for <a href='http://newspring.cc/community' target='_blank'>community</a> by God, who exists in community as Father, Son, and Holy Spirit (John 1:1-2, Genesis 2:18).&nbsp;</p>\n\n<p>Our phones help us stay connected, but they are not the foundation of all connection. If we&rsquo;re honest, our phones are much quicker to distract and disengage us from the people right in front of us.&nbsp;</p>\n\n<p>Jesus said loving God and loving others is greatest of all God&rsquo;s commandments (Matthew 22:38-40). And, after trying everything the world had to offer, King Solomon reminded his people that their relationships with God and others are the only things that really matter (Ecclesiastes 2:24-26, Ecclesiastes 3:9).&nbsp;</p>\n\n<blockquote>\n<p>Greater love has no one than this: to lay down one&rsquo;s phone for one&rsquo;s loved ones.</p>\n</blockquote>\n\n<p>So the next time we feel like we have to text back immediately or tweet before someone else does, consider:&nbsp;</p>\n\n<ul>\n\t<li>Am I putting others before myself right now?</li>\n\t<li>How can I love the people around me if I&rsquo;m not even paying attention to them?</li>\n\t<li>What if Jesus wants to speak through me, but I&rsquo;ve got my nose stuck in my phone?&nbsp;</li>\n</ul>\n\n<p>The world won&rsquo;t implode if we don&rsquo;t reply to every text or email immediately. And that Instagram picture doesn&rsquo;t need to go up ASAP. If it&rsquo;s already been a week between posts, what&rsquo;s a few more hours? We love everyone better &mdash; our friends to our coworkers to our social media followers &mdash; when we give them the gift of our full attention.&nbsp;</p>\n\n<p>I can almost hear Jesus saying, &ldquo;Greater love has no one than this: to lay down one&rsquo;s phone for one&rsquo;s loved ones&rdquo;&nbsp; (John 15:13).&nbsp;</p>\n\n<h3>Four Ways To Stay Away From Your Phone And Be Intentionally Present</h3>\n\n<p><a href='http://newspring.cc/christmas' target='_blank'>This holiday season</a>, we will have more opportunities to be around friends and family than usual. So let&rsquo;s make the most of each minute. The following are some tips can help us all be a little more present.&nbsp;&nbsp;</p>\n\n<ol>\n\t<li>Turn your phone off, leave it in the car, or put it in airplane mode. Habitual notification checks can take a break.</li>\n\t<li>Talk about something other than yourself. Ask someone else about their life (job, school, kids).</li>\n\t<li>Look for opportunities to encourage someone. Ask the Holy Spirit to speak through you and help you love people.</li>\n\t<li>Ask Jesus to keep your heart interested and engaged in what really matters. He wants to help!</li>\n</ol>\n\n<p>Intentionally taking advantage of time with loved ones sometimes does require sacrificing our own immediate desires or comforts, but that&rsquo;s what we are commanded to do (Philippians 2:3).&nbsp;</p>\n\n<p>Take pictures, but don&rsquo;t let the only memory be a digital one. The positive outcome of interactions should be more than Instagram likes. Unplug from social media, choose to be present, and you will be surprised at the good it does for your heart and the hearts of those around you.</p>"
+          }
+        </HTMLView>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should accept an alternative render', () => {
+    const testRenderer = jest.fn();
+    renderer.create(
+      <Providers>
+        <HTMLView renderer={testRenderer}>{'<p>Testings</p>'}</HTMLView>
+      </Providers>
+    );
+
+    expect(testRenderer).toBeCalled();
+  });
+});
diff --git a/apolloschurchapp/src/ui/HTMLView/defaultRenderer.js b/apolloschurchapp/src/ui/HTMLView/defaultRenderer.js
new file mode 100644
index 0000000..6e17c65
--- /dev/null
+++ b/apolloschurchapp/src/ui/HTMLView/defaultRenderer.js
@@ -0,0 +1,128 @@
+import React, { Children } from 'react';
+import { Text, Linking } from 'react-native';
+import { decodeHTML } from 'entities';
+
+import {
+  BodyText,
+  H1,
+  H2,
+  H3,
+  H4,
+  H5,
+  H6,
+  Paragraph,
+  BlockQuote,
+  BulletListItem,
+} from 'apolloschurchapp/src/ui/typography';
+import { ButtonLink } from 'apolloschurchapp/src/ui/Button';
+import ConnectedImage from 'apolloschurchapp/src/ui/ConnectedImage';
+
+const LINE_BREAK = '\n';
+const TEXT_TYPES_THAT_SHOULD_WRAP = [Text, BodyText, ButtonLink];
+
+export const wrapTextChildren = (children, Component = BodyText) => {
+  const newChildren = [];
+  let currentTextChildren = [];
+  Children.toArray(children).forEach((child, i) => {
+    if (TEXT_TYPES_THAT_SHOULD_WRAP.includes(child.type)) {
+      currentTextChildren.push(child);
+    } else {
+      if (currentTextChildren.length) {
+        newChildren.push(
+          // eslint-disable-next-line
+          <Component key={`composed-children-${i}`}>
+            {currentTextChildren}
+          </Component>
+        );
+        currentTextChildren = [];
+      }
+      newChildren.push(child);
+    }
+  });
+  if (currentTextChildren.length) {
+    newChildren.push(
+      <Component key="composed-children">{currentTextChildren}</Component>
+    );
+  }
+  return newChildren;
+};
+
+const defaultRenderer = (node, { children }) => {
+  if (node.type === 'text' && node.data && node.data.trim()) {
+    const text = decodeHTML(node.data);
+    if (!node.parent) {
+      return (
+        <Paragraph>
+          <BodyText>{text}</BodyText>
+        </Paragraph>
+      );
+    }
+    return <Text>{text}</Text>;
+  }
+
+  switch (node.name) {
+    case 'p':
+      return <Paragraph>{wrapTextChildren(children)}</Paragraph>;
+    case 'strong':
+      return <BodyText bold>{children}</BodyText>;
+    case 'em':
+      return <BodyText italic>{children}</BodyText>;
+    case 'blockquote':
+      return <BlockQuote>{wrapTextChildren(children, Text)}</BlockQuote>;
+    case 'h1':
+      return <H1 padded>{wrapTextChildren(children, Text)}</H1>;
+    case 'h2':
+      return <H2 padded>{wrapTextChildren(children, Text)}</H2>;
+    case 'h3':
+      return <H3 padded>{wrapTextChildren(children, Text)}</H3>;
+    case 'h4':
+      return <H4 padded>{wrapTextChildren(children, Text)}</H4>;
+    case 'h5':
+      return <H5 padded>{wrapTextChildren(children, Text)}</H5>;
+    case 'h6':
+      return <H6 padded>{wrapTextChildren(children, Text)}</H6>;
+    case 'ul':
+      return <Paragraph>{children}</Paragraph>;
+    case 'li':
+      return <BulletListItem>{wrapTextChildren(children)}</BulletListItem>;
+    case 'a': {
+      let url = node.attribs && node.attribs.href;
+      url = decodeHTML(url);
+
+      if (url && url.startsWith('//')) {
+        url = `http:${url}`;
+      }
+      if (!url.startsWith('http')) {
+        // we can't currently handle non web-links, so just return regular text instead:
+        return children;
+      }
+      const onPress = () => Linking.openURL(url);
+      if (url) {
+        return <ButtonLink onPress={onPress}>{children}</ButtonLink>;
+      }
+    }
+    /* ignoring fallthrough on the next line because of the conditional return above,
+     * so we handle the edge-case of an <a> tag used w/o a href
+     */
+    case 'img': {
+      const source = {
+        url: node.attribs.src,
+      };
+
+      const imgStyles = {
+        resizeMode: 'contain',
+        width: '100%',
+      };
+
+      return (
+        <ConnectedImage maintainAspectRatio source={source} style={imgStyles} />
+      );
+    }
+    case 'br':
+      return <BodyText>{LINE_BREAK}</BodyText>;
+    default:
+      return children;
+  }
+};
+
+export default defaultRenderer;
diff --git a/apolloschurchapp/src/ui/HTMLView/index.js b/apolloschurchapp/src/ui/HTMLView/index.js
new file mode 100644
index 0000000..ba9cc7c
--- /dev/null
+++ b/apolloschurchapp/src/ui/HTMLView/index.js
@@ -0,0 +1,75 @@
+import React, { PureComponent, cloneElement } from 'react';
+import PropTypes from 'prop-types';
+import { View } from 'react-native';
+import { Parser, DomHandler } from 'htmlparser2';
+
+import { Paragraph as ParagraphPlaceholder } from 'apolloschurchapp/src/ui/Placeholder';
+
+import defaultRenderer from './defaultRenderer';
+
+class HTMLView extends PureComponent {
+  static propTypes = {
+    children: PropTypes.string,
+    renderer: PropTypes.func,
+    isLoading: PropTypes.bool,
+  };
+
+  static defaultProps = {
+    renderer: defaultRenderer,
+  };
+
+  constructor(...args) {
+    super(...args);
+    this.parser = new Parser(
+      new DomHandler(
+        (err, dom) => {
+          this.parsed = this.renderDom(dom);
+        },
+        { normalizeWhitespace: true }
+      )
+    );
+    if (this.props.children) this.parse(this.props.children);
+  }
+
+  componentWillUpdate(props) {
+    this.parse(props.children);
+  }
+
+  parse(html = '') {
+    this.parser.write(html);
+    this.parser.done();
+  }
+
+  renderDom(dom) {
+    return dom
+      .map((node, index) => {
+        let children = [];
+        if (node.children) children = this.renderDom(node.children);
+
+        let renderedNode = this.props.renderer(node, { children });
+        if (
+          !renderedNode &&
+          renderedNode !== null &&
+          this.props.renderer !== defaultRenderer
+        ) {
+          renderedNode = defaultRenderer(node, { children });
+        }
+
+        if (renderedNode && !Array.isArray(renderedNode)) {
+          renderedNode = cloneElement(renderedNode, { key: index });
+        }
+        return renderedNode;
+      })
+      .filter((e) => e !== undefined);
+  }
+
+  render() {
+    return (
+      <ParagraphPlaceholder lineNumber={8} onReady={!this.props.isLoading}>
+        <View>{this.parsed}</View>
+      </ParagraphPlaceholder>
+    );
+  }
+}
+
+export default HTMLView;
diff --git a/apolloschurchapp/src/ui/HorizontalTileFeed/HorizontalTileFeed.stories.js b/apolloschurchapp/src/ui/HorizontalTileFeed/HorizontalTileFeed.stories.js
new file mode 100644
index 0000000..8ebfe1e
--- /dev/null
+++ b/apolloschurchapp/src/ui/HorizontalTileFeed/HorizontalTileFeed.stories.js
@@ -0,0 +1,141 @@
+import React from 'react';
+import { View } from 'react-native';
+import { storiesOf } from '@storybook/react-native';
+
+import styled from 'apolloschurchapp/src/ui/styled';
+import CardTile from 'apolloschurchapp/src/ui/CardTile';
+import TileImage from 'apolloschurchapp/src/ui/TileImage';
+
+import HorizontalTileFeed from '.';
+
+storiesOf('HorizontalTileFeed', module)
+  .add('With CardTile', () => {
+    const CardTileData = [
+      {
+        node: {
+          id: 'fakeId0',
+          title: 'Why Jesus is Timeless',
+        },
+      },
+      {
+        node: {
+          id: 'fakeId1',
+          title: 'Tall Hat Tales',
+        },
+      },
+    ];
+
+    const loadingStateObject = {
+      node: {
+        id: 'fakeId0',
+        title: '',
+        isLoading: true,
+      },
+    };
+
+    const renderCardTile = (
+      { item, index } //eslint-disable-line
+    ) => (
+      <CardTile
+        number={index + 1}
+        title={item.node.title}
+        isLoading={item.node.isLoading}
+      />
+    );
+
+    return (
+      <View>
+        <HorizontalTileFeed
+          content={CardTileData}
+          renderItem={renderCardTile}
+          loadingStateObject={loadingStateObject}
+        />
+      </View>
+    );
+  })
+  .add('CardTile Skeleton', () => {
+    const loadingStateObject = {
+      node: {
+        id: 'fakeId0',
+        title: '',
+        isLoading: true,
+      },
+    };
+
+    const renderCardTile = (
+      { item, index } //eslint-disable-line
+    ) => (
+      <CardTile
+        number={index + 1}
+        title={item.node.title}
+        isLoading={item.node.isLoading}
+      />
+    );
+
+    return (
+      <View>
+        <HorizontalTileFeed
+          content={[]}
+          renderItem={renderCardTile}
+          loadingStateObject={loadingStateObject}
+          isLoading
+        />
+      </View>
+    );
+  })
+  .add('With TileImage', () => {
+    const imageData = [
+      {
+        node: {
+          id: 'fakeId0',
+          source: 'https://picsum.photos/900/900/?random',
+          link: 'https://github.com',
+        },
+      },
+      {
+        node: {
+          id: 'fakeId1',
+          source: 'https://picsum.photos/900/900/?random',
+          link: 'https://github.com',
+        },
+      },
+      {
+        node: {
+          id: 'fakeId2',
+          source: 'https://picsum.photos/900/900/?random',
+          link: 'https://github.com',
+        },
+      },
+    ];
+
+    const loadingStateImageObject = {
+      node: {
+        id: 'fakeId1',
+        source: '',
+        link: '',
+      },
+    };
+
+    const Spacer = styled({
+      flex: 1,
+      paddingHorizontal: 10,
+    })(View);
+
+    const renderTileImage = (
+      { item, index } //eslint-disable-line
+    ) => (
+      <Spacer>
+        <TileImage image={item.node.source} link={item.node.link} />
+      </Spacer>
+    );
+
+    return (
+      <View>
+        <HorizontalTileFeed
+          content={imageData}
+          renderItem={renderTileImage}
+          loadingStateObject={loadingStateImageObject}
+        />
+      </View>
+    );
+  });
diff --git a/apolloschurchapp/src/ui/HorizontalTileFeed/HorizontalTileFeed.tests.js b/apolloschurchapp/src/ui/HorizontalTileFeed/HorizontalTileFeed.tests.js
new file mode 100644
index 0000000..b98a6bf
--- /dev/null
+++ b/apolloschurchapp/src/ui/HorizontalTileFeed/HorizontalTileFeed.tests.js
@@ -0,0 +1,68 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+import CardTile from 'apolloschurchapp/src/ui/CardTile';
+
+import HorizontalTileFeed from '.';
+
+const loadingStateObject = {
+  node: {
+    id: 'fakeId0',
+    title: '',
+    isLoading: true,
+  },
+};
+
+describe('The HorizontalTileFeed component', () => {
+  it('renders correctly', () => {
+    const tree = renderer.create(
+      <Providers>
+        <HorizontalTileFeed
+          content={[
+            {
+              node: {
+                id: 'fakeId0',
+                title: 'Why Jesus is Timeless',
+              },
+            },
+            {
+              node: {
+                id: 'fakeId1',
+                title: 'Why Jesus is Timeless',
+              },
+            },
+          ]}
+          renderItem={({ item, index }) => (
+            <CardTile
+              number={index + 1}
+              title={item.node.title}
+              isLoading={item.node.isLoading}
+            />
+          )}
+          loadingStateObject={loadingStateObject}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('renders empty state', () => {
+    const tree = renderer.create(
+      <Providers>
+        <HorizontalTileFeed
+          isLoading
+          content={[]}
+          renderItem={({ item, index }) => (
+            <CardTile
+              number={index + 1}
+              title={item.node.title}
+              isLoading={item.node.isLoading}
+            />
+          )}
+          loadingStateObject={loadingStateObject}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/HorizontalTileFeed/TileFeed.js b/apolloschurchapp/src/ui/HorizontalTileFeed/TileFeed.js
new file mode 100644
index 0000000..1f2eadf
--- /dev/null
+++ b/apolloschurchapp/src/ui/HorizontalTileFeed/TileFeed.js
@@ -0,0 +1,11 @@
+import { FlatList } from 'react-native';
+
+import styled from 'apolloschurchapp/src/ui/styled';
+
+const TileFeed = styled(({ theme, tileHeight }) => ({
+  height: tileHeight,
+  paddingHorizontal: theme.sizing.baseUnit / 2,
+  paddingBottom: theme.sizing.baseUnit / 2,
+}))(FlatList);
+
+export default TileFeed;
diff --git a/apolloschurchapp/src/ui/HorizontalTileFeed/TileFeed.tests.js b/apolloschurchapp/src/ui/HorizontalTileFeed/TileFeed.tests.js
new file mode 100644
index 0000000..81aae8f
--- /dev/null
+++ b/apolloschurchapp/src/ui/HorizontalTileFeed/TileFeed.tests.js
@@ -0,0 +1,68 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+import CardTile from 'apolloschurchapp/src/ui/CardTile';
+
+import TileFeed from '.';
+
+describe('The TileFeed component', () => {
+  it('renders correctly', () => {
+    const tree = renderer.create(
+      <Providers>
+        <TileFeed
+          content={[
+            {
+              node: {
+                id: 'fakeId0',
+                title: 'Why Jesus is Timeless',
+              },
+            },
+            {
+              node: {
+                id: 'fakeId1',
+                title: 'Why Jesus is Timeless',
+              },
+            },
+          ]}
+          loadingStateObject={{
+            id: 'fakeId0',
+            title: '',
+            isLoading: false,
+          }}
+          renderItem={({ item, index }) => (
+            <CardTile
+              number={index + 1}
+              title={item.title}
+              isLoading={item.isLoading}
+            />
+          )}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('renders empty state', () => {
+    const tree = renderer.create(
+      <Providers>
+        <TileFeed
+          refreshing
+          content={[]}
+          loadingStateObject={{
+            id: 'fakeId0',
+            title: '',
+            isLoading: true,
+          }}
+          renderItem={({ item, index }) => (
+            <CardTile
+              number={index + 1}
+              title={item.title}
+              isLoading={item.isLoading}
+            />
+          )}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/HorizontalTileFeed/index.js b/apolloschurchapp/src/ui/HorizontalTileFeed/index.js
new file mode 100644
index 0000000..631a1c9
--- /dev/null
+++ b/apolloschurchapp/src/ui/HorizontalTileFeed/index.js
@@ -0,0 +1,93 @@
+import React, { PureComponent } from 'react';
+import { Dimensions } from 'react-native';
+import PropTypes from 'prop-types';
+import { compose, withProps } from 'recompose';
+
+import { withTheme } from 'apolloschurchapp/src/ui/theme';
+
+import TileFeed from './TileFeed';
+
+export class HorizontalTileFeed extends PureComponent {
+  static propTypes = {
+    content: PropTypes.array, // eslint-disable-line
+    loadingStateObject: PropTypes.shape({}).isRequired,
+    renderItem: PropTypes.func.isRequired,
+    fetchMore: PropTypes.func,
+    isLoading: PropTypes.bool,
+    keyExtractor: PropTypes.func,
+    theme: PropTypes.shape({}),
+  };
+
+  static defaultProps = {
+    keyExtractor: (item) => item && item.id,
+    content: [],
+    isLoading: false,
+  };
+
+  constructor(props) {
+    super(props);
+
+    this.snapToInterval = this.getTileWidth() - this.props.theme.baseUnit / 2; //eslint-disable-line
+  }
+
+  getTileWidth = () => {
+    const { width } = Dimensions.get('window');
+    return width * 0.8; // 80% of width
+  };
+
+  render() {
+    const { content, isLoading, renderItem, theme, ...otherProps } = this.props;
+
+    return (
+      <TileFeed
+        data={content}
+        horizontal
+        initialScrollIndex={0}
+        refreshing={isLoading}
+        renderItem={renderItem}
+        showsHorizontalScrollIndicator={false}
+        tileHeight={this.getTileWidth()} // passed into TileFeed styles. Height is equal to 80% of width
+        /*
+         * `(80% of width - baseUnit / 2)` which is used for padding on the tile. This padding was added
+         * to fix a shadow clipping bug on Android. `snapToInterval` below is adjusted to account for
+         * that padding on each swipe. TODO: find better shadow clipping fix that simplifies this math.
+         */
+        snapToInterval={this.snapToInterval} // passed down to rendered ScrollView.
+        snapToAlignment={'start'} // passed down to rendered ScrollView
+        decelerationRate={'fast'} // passed down to rendered ScrollView
+        {...otherProps}
+      />
+    );
+  }
+}
+
+const generateLoadingStateData = (loadingStateObject, numberOfItems) => {
+  const itemData = () => JSON.parse(JSON.stringify(loadingStateObject));
+
+  const loadingStateData = [];
+
+  while (loadingStateData.length < numberOfItems) {
+    const newData = itemData();
+    newData.id = `fakeId${loadingStateData.length}`;
+    loadingStateData.push(newData);
+  }
+
+  return loadingStateData;
+};
+
+const enhance = compose(
+  withProps(
+    ({ isLoading, content, loadingStateObject } = {}) =>
+      isLoading && (!content || !content.length)
+        ? {
+            content: generateLoadingStateData(loadingStateObject, 5),
+            fetchMore: () => {},
+          }
+        : {}
+  ),
+  withTheme(({ theme: { sizing: { baseUnit } = {} } = {} } = {}) => ({
+    theme: { baseUnit },
+  }))
+);
+
+export default enhance(HorizontalTileFeed);
diff --git a/apolloschurchapp/src/ui/Icon/Icon.stories.js b/apolloschurchapp/src/ui/Icon/Icon.stories.js
new file mode 100644
index 0000000..ef0df2a
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/Icon.stories.js
@@ -0,0 +1,19 @@
+import React from 'react';
+import { storiesOf } from '@storybook/react-native';
+import { kebabCase } from 'lodash';
+
+import CenteredView from 'apolloschurchapp/src/ui/CenteredView';
+
+import * as icons from './icons';
+
+import Icon from '.';
+
+const stories = storiesOf('Icon', module).addDecorator((getStory) => (
+  <CenteredView>{getStory()}</CenteredView>
+));
+
+Object.keys(icons).forEach((iconName) => {
+  stories.add(iconName, () => <Icon name={kebabCase(iconName)} />);
+});
+
+stories.add('isLoading', () => <Icon name={'umbrella'} isLoading />);
diff --git a/apolloschurchapp/src/ui/Icon/Icon.tests.js b/apolloschurchapp/src/ui/Icon/Icon.tests.js
new file mode 100644
index 0000000..6f794dd
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/Icon.tests.js
@@ -0,0 +1,22 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+import { kebabCase } from 'lodash';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import * as icons from './icons';
+
+import Icon from '.';
+
+Object.keys(icons).forEach((iconName) => {
+  describe(`The ${iconName} icon`, () => {
+    it('renders correctly', () => {
+      const tree = renderer.create(
+        <Providers>
+          <Icon name={kebabCase(iconName)} />
+        </Providers>
+      );
+      expect(tree).toMatchSnapshot();
+    });
+  });
+});
diff --git a/apolloschurchapp/src/ui/Icon/icons/ArrowBack.js b/apolloschurchapp/src/ui/Icon/icons/ArrowBack.js
new file mode 100644
index 0000000..ea4d039
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/ArrowBack.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Svg, { Path } from 'react-native-svg';
+
+import makeIcon from './makeIcon';
+
+const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
+  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
+    <Path
+      d="M14.35 21L6.2 12.46c-.26-.28-.26-.64 0-.92L14.34 3l1.65.9L8.27 12 16 20.1l-1.65.9z"
+      fill={fill}
+    />
+  </Svg>
+));
+
+Icon.propTypes = {
+  size: PropTypes.number,
+  fill: PropTypes.string,
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/ArrowDown.js b/apolloschurchapp/src/ui/Icon/icons/ArrowDown.js
new file mode 100644
index 0000000..81e83f1
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/ArrowDown.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Svg, { Path } from 'react-native-svg';
+
+import makeIcon from './makeIcon';
+
+const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
+  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
+    <Path
+      d="M12 18c-.16 0-.32-.06-.46-.2L3 9.66 3.9 8l8.1 7.72L20.1 8l.9 1.65-8.54 8.16c-.14.15-.3.2-.46.2z"
+      fill={fill}
+    />
+  </Svg>
+));
+
+Icon.propTypes = {
+  size: PropTypes.number,
+  fill: PropTypes.string,
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/ArrowNext.js b/apolloschurchapp/src/ui/Icon/icons/ArrowNext.js
new file mode 100644
index 0000000..1371ca4
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/ArrowNext.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Svg, { Path } from 'react-native-svg';
+
+import makeIcon from './makeIcon';
+
+const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
+  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
+    <Path
+      d="M9.65 21L8 20.1l7.72-8.1L8 3.9 9.65 3l8.16 8.54c.27.28.27.64 0 .92L9.67 21z"
+      fill={fill}
+    />
+  </Svg>
+));
+
+Icon.propTypes = {
+  size: PropTypes.number,
+  fill: PropTypes.string,
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/ArrowUp.js b/apolloschurchapp/src/ui/Icon/icons/ArrowUp.js
new file mode 100644
index 0000000..f434de5
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/ArrowUp.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Svg, { Path } from 'react-native-svg';
+
+import makeIcon from './makeIcon';
+
+const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
+  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
+    <Path
+      d="M20.1 16L12 8.28 3.9 16 3 14.35l8.54-8.15c.28-.27.64-.27.92 0L21 14.35 20.1 16z"
+      fill={fill}
+    />
+  </Svg>
+));
+
+Icon.propTypes = {
+  size: PropTypes.number,
+  fill: PropTypes.string,
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/Audio.js b/apolloschurchapp/src/ui/Icon/icons/Audio.js
new file mode 100644
index 0000000..da2b1fb
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/Audio.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Svg, { Path } from 'react-native-svg';
+
+import makeIcon from './makeIcon';
+
+const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
+  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
+    <Path
+      d="M3.82 13.5H2v-.32C2 6.54 5.22 2 12 2c6.5 0 9.64 4.16 9.98 10.42v1.07h-1.82v-1c-.3-5.8-3.02-8.8-8.16-8.8-5.37 0-8.18 3.32-8.18 9.45v.3zm0 1.7h1.6c.87 0 1.58.66 1.58 1.48v2.13c0 .86-.7 1.5-1.6 1.5-.87 0-1.58-.64-1.58-1.5v-3.6zm0-1.7h1.6c1.87 0 3.4 1.42 3.4 3.18v2.13c0 1.8-1.53 3.2-3.4 3.2C3.5 22 2 20.6 2 18.8v-5.3h1.82zm16.36 1.7v3.6c0 .83-.7 1.5-1.6 1.5-.87 0-1.58-.67-1.58-1.5v-2.1c0-.82.7-1.5 1.6-1.5h1.58zm0-1.7H22v5.3c0 1.77-1.53 3.2-3.4 3.2-1.9 0-3.42-1.43-3.42-3.2v-2.1c0-1.76 1.53-3.2 3.4-3.2h1.6z"
+      fill={fill}
+    />
+  </Svg>
+));
+
+Icon.propTypes = {
+  size: PropTypes.number,
+  fill: PropTypes.string,
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/Bank.js b/apolloschurchapp/src/ui/Icon/icons/Bank.js
new file mode 100644
index 0000000..98f8791
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/Bank.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Svg, { Path } from 'react-native-svg';
+
+import makeIcon from './makeIcon';
+
+const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
+  <Svg width={size} height={size} viewBox="0 0 24 17" {...otherProps}>
+    <Path
+      d="M1.3,0 L22.7,0 C23.42,0 24,0.57 24,1.28 L24,15.88 C24,16.58 23.42,17.16 22.7,17.16 L1.3,17.16 C0.57,17.15 0,16.57 0,15.87 L0,1.27 C0,0.57 0.58,0 1.3,0 Z M22.2,15.43 L22.2,1.71 L1.8,1.71 L1.8,15.43 L22.2,15.43 Z M11.4,12 L4.2,12 L4.2,9.7 L11.4,9.7 L11.4,12 Z M19.8,6.86 L4.2,6.86 L4.2,4.57 L19.8,4.57 L19.8,6.87 L19.8,6.86 Z"
+      fill={fill}
+    />
+  </Svg>
+));
+
+Icon.propTypes = {
+  size: PropTypes.number,
+  fill: PropTypes.string,
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/BrandIcon.js b/apolloschurchapp/src/ui/Icon/icons/BrandIcon.js
new file mode 100644
index 0000000..e46ffed
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/BrandIcon.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Svg, { Path } from 'react-native-svg';
+
+import makeIcon from './makeIcon';
+
+const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
+  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
+    <Path
+      d="M8.84799129,0 L13.7577354,0 L22.6057267,24 L0,24 L8.84799129,0 Z M6.52559608,19.4398694 L16.0921502,19.4398694 L11.4494502,5.83629831 L11.1682961,5.83629831 L6.52559608,19.4398694 Z"
+      fill={fill}
+    />
+  </Svg>
+));
+
+Icon.propTypes = {
+  size: PropTypes.number,
+  fill: PropTypes.string,
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/Building.js b/apolloschurchapp/src/ui/Icon/icons/Building.js
new file mode 100644
index 0000000..3f5bf3e
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/Building.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Svg, { Path } from 'react-native-svg';
+
+import makeIcon from './makeIcon';
+
+const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
+  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
+    <Path
+      d="M19.5 21v-8.25h.75c.45 0 .75.3.75.75v6.75c0 .45-.3.75-.75.75h-.75zm-15-.75V21h-.75c-.45 0-.75-.3-.75-.75V13.5c0-.45.3-.75.75-.75h.75v7.5zM17.25 3c.45 0 .75.3.75.75v16.5c0 .45-.3.75-.75.75h-4.5v-3h-1.5v3h-4.5c-.45 0-.75-.3-.75-.75V3.75c0-.45.3-.75.75-.75h10.5zM10.5 15.75v-1.5H8.25v1.5h2.25zm0-3v-1.5H8.25v1.5h2.25zm0-3v-1.5H8.25v1.5h2.25zm0-3v-1.5H8.25v1.5h2.25zm5.25 9v-1.5H13.5v1.5h2.25zm0-3v-1.5H13.5v1.5h2.25zm0-3v-1.5H13.5v1.5h2.25zm0-3v-1.5H13.5v1.5h2.25z"
+      fill={fill}
+    />
+  </Svg>
+));
+
+Icon.propTypes = {
+  size: PropTypes.number,
+  fill: PropTypes.string,
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/Calendar.js b/apolloschurchapp/src/ui/Icon/icons/Calendar.js
new file mode 100644
index 0000000..eb78cab
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/Calendar.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Svg, { Path } from 'react-native-svg';
+
+import makeIcon from './makeIcon';
+
+const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
+  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
+    <Path
+      d="M4.4 20.57h15.52V9.14H4.42v11.43zM8.65 7V3.8c0-.12-.03-.2-.1-.27-.06-.07-.15-.1-.25-.1h-.72c-.1 0-.18.03-.25.1s-.1.15-.1.26V7c0 .1.03.2.1.26s.15.1.25.1h.7c.1 0 .2-.04.26-.1.07-.07.1-.16.1-.26zm8.46 0V3.8c0-.12 0-.2-.1-.27 0-.07-.1-.1-.2-.1h-.7c-.1 0-.2.03-.22.1s-.1.15-.1.26V7c0 .1.04.2.1.26.07.06.15.1.25.1h.7c.1 0 .2-.04.26-.1.07-.07.1-.16.1-.26zm4.3-.7v14.27c0 .4-.12.72-.4 1-.26.3-.6.43-1 .43H4.4c-.4 0-.72-.14-1-.42-.28-.3-.42-.62-.42-1V6.28c0-.4.14-.73.42-1 .28-.3.6-.43 1-.43h1.4V3.8c0-.5.17-.93.52-1.28.34-.35.76-.52 1.24-.52h.7c.5 0 .9.17 1.25.52s.55.77.55 1.27v1h4.23v-1c0-.5.17-.97.52-1.3s.75-.5 1.23-.5h.7c.5 0 .9.14 1.25.5.3.34.5.76.5 1.26v1h1.4c.4 0 .7.13 1 .4.23.3.4.63.4 1z"
+      fill={fill}
+    />
+  </Svg>
+));
+
+Icon.propTypes = {
+  size: PropTypes.number,
+  fill: PropTypes.string,
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/Camera.js b/apolloschurchapp/src/ui/Icon/icons/Camera.js
new file mode 100644
index 0000000..0572a9e
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/Camera.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Svg, { Path } from 'react-native-svg';
+
+import makeIcon from './makeIcon';
+
+const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
+  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
+    <Path
+      d="M6.24 5.7l.52-1.23C7.18 3.67 8.2 3 9.1 3h5.8c1 0 2 .65 2.34 1.47l.52 1.23H20c1.16 0 2.06.86 2 1.88V19.1c.06 1.12-.84 1.97-2 1.9H4c-1.07.07-1.97-.78-2-1.9V7.6c.03-1.03.92-1.87 2-1.88h2.24zm2.17-.58l-.7 1.7-.22.5H4.02c-.16 0-.3.13-.3.28v11.58c0 .14.14.26.3.26h16.02c.16 0 .3-.1.3-.26V7.6c0-.14-.14-.27-.3-.27H16.6l-.2-.5-.72-1.7c-.1-.26-.5-.5-.78-.5H9.18c-.28 0-.67.25-.77.5zm3.65 12.16c-2.68 0-4.86-2.06-4.86-4.6 0-2.53 2.17-4.6 4.85-4.6 2.7 0 4.87 2.07 4.87 4.6 0 2.54-2.17 4.6-4.86 4.6zm0-1.62c1.74 0 3.15-1.33 3.15-2.97 0-1.67-1.42-3-3.16-3-1.74 0-3.15 1.33-3.15 3 0 1.62 1.4 2.95 3.13 2.95z"
+      fill={fill}
+    />
+  </Svg>
+));
+
+Icon.propTypes = {
+  size: PropTypes.number,
+  fill: PropTypes.string,
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/Check.js b/apolloschurchapp/src/ui/Icon/icons/Check.js
new file mode 100644
index 0000000..05fc873
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/Check.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Svg, { Path } from 'react-native-svg';
+
+import makeIcon from './makeIcon';
+
+const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
+  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
+    <Path
+      d="M19.18 6.32l-9.9 9.65-4.46-4.3c-.22-.23-.48-.33-.76-.33-.3 0-.54.1-.76.32-.2.2-.3.43-.3.7 0 .3.1.54.3.73l5.25 5.03c.2.22.44.32.74.32s.53-.1.72-.32l.14-.13L20.7 7.77c.2-.2.3-.43.3-.72 0-.3-.1-.53-.3-.72-.22-.2-.47-.32-.76-.32-.28 0-.54.1-.76.33z"
+      fill={fill}
+    />
+  </Svg>
+));
+
+Icon.propTypes = {
+  size: PropTypes.number,
+  fill: PropTypes.string,
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/CheckboxChecked.js b/apolloschurchapp/src/ui/Icon/icons/CheckboxChecked.js
new file mode 100644
index 0000000..53bff59
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/CheckboxChecked.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Svg, { Path } from 'react-native-svg';
+
+import makeIcon from './makeIcon';
+
+const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
+  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
+    <Path
+      d="M2.57,0 L19.43,0 C20.85,0 22,1.15 22,2.57 L22,19.43 C22,20.85 20.85,22 19.43,22 L2.57,22 C1.15,22 0,20.85 0,19.43 L0,2.57 C0,1.15 1.15,0 2.57,0 Z M17.75,4.56 L8.45,14.38 L4.25,9.98 C4.05,9.78 3.8,9.68 3.53,9.68 C3.26,9.68 3.03,9.78 2.83,9.98 C2.63,10.18 2.53,10.43 2.53,10.72 C2.53,11.02 2.63,11.26 2.83,11.46 L7.76,16.6 C7.94,16.8 8.16,16.92 8.46,16.92 C8.73,16.92 8.96,16.82 9.16,16.6 L9.28,16.47 L19.18,6.02 C19.38,5.82 19.46,5.58 19.46,5.29 C19.46,4.99 19.36,4.73 19.18,4.54 C18.98,4.32 18.74,4.21 18.48,4.21 C18.2,4.21 17.96,4.31 17.75,4.54 L17.75,4.56 Z"
+      fill={fill}
+    />
+  </Svg>
+));
+
+Icon.propTypes = {
+  size: PropTypes.number,
+  fill: PropTypes.string,
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/CheckboxUnchecked.js b/apolloschurchapp/src/ui/Icon/icons/CheckboxUnchecked.js
new file mode 100644
index 0000000..ac7c319
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/CheckboxUnchecked.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Svg, { Path } from 'react-native-svg';
+
+import makeIcon from './makeIcon';
+
+const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
+  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
+    <Path
+      d="M3.75 20.25h16.5V3.75H3.75v16.5zM1 3.75C1 2.22 2.23 1 3.74 1h16.52C21.76 1 23 2.23 23 3.74v16.52c0 1.5-1.23 2.74-2.74 2.74H3.74C2.24 23 1 21.77 1 20.26V3.74z"
+      fill={fill}
+    />
+  </Svg>
+));
+
+Icon.propTypes = {
+  size: PropTypes.number,
+  fill: PropTypes.string,
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/Chromecast.js b/apolloschurchapp/src/ui/Icon/icons/Chromecast.js
new file mode 100644
index 0000000..c312fdb
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/Chromecast.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Svg, { Path } from 'react-native-svg';
+
+import makeIcon from './makeIcon';
+
+const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
+  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
+    <Path
+      d="M3 17.27v2.46h2.45c0-1.36-1.1-2.46-2.45-2.46zM3 14v1.64c2.26 0 4.1 1.83 4.1 4.1h1.63C8.73 16.54 6.17 14 3 14zm0-3.27v1.63c4.07 0 7.36 3.3 7.36 7.37H12c0-4.98-4.03-9-9-9zM19.36 5H4.64C3.74 5 3 5.74 3 6.64V9.1h1.64V6.63h14.72V18.1h-5.72v1.63h5.72c.9 0 1.64-.74 1.64-1.64V6.62c0-.9-.74-1.64-1.64-1.64z"
+      fill={fill}
+    />
+  </Svg>
+));
+
+Icon.propTypes = {
+  size: PropTypes.number,
+  fill: PropTypes.string,
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/CircleOutlineCheckMark.js b/apolloschurchapp/src/ui/Icon/icons/CircleOutlineCheckMark.js
new file mode 100644
index 0000000..b8bfa94
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/CircleOutlineCheckMark.js
@@ -0,0 +1,25 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Svg, { Path, Polygon } from 'react-native-svg';
+
+import makeIcon from './makeIcon';
+
+const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
+  <Svg width={size} height={size} viewBox="0 0 60 61" {...otherProps}>
+    <Polygon
+      fill={fill}
+      points="25.9570657 39.7210789 26.6666667 40.4357125 27.3762676 39.7210789 40.709601 26.293183 41.4092427 25.5885792 40.709601 24.8839754 38.0429343 22.1983962 37.3333333 21.4837626 36.6237324 22.1983962 25.9570657 32.940713 27.3762676 32.940713 23.3762676 28.9123442 22.6666667 28.1977106 21.9570657 28.9123442 19.290399 31.5979234 18.5907573 32.3025272 19.290399 33.007131"
+    />
+    <Path
+      fill={fill}
+      d="M30,54.903 L30,54.903 C43.254834,54.903 54,44.157834 54,30.903 C54,17.648166 43.254834,6.903 30,6.903 C16.745166,6.903 6,17.648166 6,30.903 C6,44.157834 16.745166,54.903 30,54.903 L30,54.903 Z M30,60.903 L30,60.903 C13.4314575,60.903 0,47.4715425 0,30.903 C0,14.3344575 13.4314575,0.903 30,0.903 C46.5685425,0.903 60,14.3344575 60,30.903 C60,47.4715425 46.5685425,60.903 30,60.903 L30,60.903 Z"
+    />
+  </Svg>
+));
+
+Icon.propTypes = {
+  size: PropTypes.number,
+  fill: PropTypes.string,
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/CircleOutlineXMark.js b/apolloschurchapp/src/ui/Icon/icons/CircleOutlineXMark.js
new file mode 100644
index 0000000..6ab39b4
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/CircleOutlineXMark.js
@@ -0,0 +1,25 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Svg, { Path } from 'react-native-svg';
+
+import makeIcon from './makeIcon';
+
+const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
+  <Svg width={size} height={size} viewBox="0 0 60 61" {...otherProps}>
+    <Path
+      fill={fill}
+      d="M30,54.33 L30,54.33 C43.254834,54.33 54,43.584834 54,30.33 C54,17.075166 43.254834,6.33 30,6.33 C16.745166,6.33 6,17.075166 6,30.33 C6,43.584834 16.745166,54.33 30,54.33 L30,54.33 Z M30,60.33 L30,60.33 C13.4314575,60.33 0,46.8985425 0,30.33 C0,13.7614575 13.4314575,0.33 30,0.33 C46.5685425,0.33 60,13.7614575 60,30.33 C60,46.8985425 46.5685425,60.33 30,60.33 L30,60.33 Z"
+    />
+    <Path
+      fill={fill}
+      d="M28.784,33.438 L28.784,33.438 L27.9222343,33.438 L27.7949654,32.5856839 L26.7389654,25.5136839 L26.728,25.366 L26.728,16.502 L26.728,15.502 L27.728,15.502 L32.272,15.502 L33.272,15.502 L33.272,16.502 L33.272,25.366 L33.2610346,25.5136839 L32.2050346,32.5856839 L32.0777657,33.438 L31.216,33.438 L28.784,33.438 Z M26.504,41.662 L26.504,41.662 C26.504,39.6282997 27.9530061,38.166 30,38.166 C32.0469939,38.166 33.496,39.6282997 33.496,41.662 C33.496,43.6957003 32.0469939,45.158 30,45.158 C27.9530061,45.158 26.504,43.6957003 26.504,41.662 L26.504,41.662 Z"
+    />
+  </Svg>
+));
+
+Icon.propTypes = {
+  size: PropTypes.number,
+  fill: PropTypes.string,
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/Close.js b/apolloschurchapp/src/ui/Icon/icons/Close.js
new file mode 100644
index 0000000..75d4164
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/Close.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Svg, { Path } from 'react-native-svg';
+
+import makeIcon from './makeIcon';
+
+const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
+  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
+    <Path
+      d="M13.07 12l7.2-7.2.5-.5c.3-.3.3-.78 0-1.08-.3-.3-.76-.3-1.06 0l-.5.5-7.2 7.2-7.2-7.2-.5-.5c-.3-.3-.77-.3-1.07 0-.3.3-.3.77 0 1.07l.5.5 7.2 7.2-7.7 7.7c-.3.3-.3.77 0 1.07.3.3.77.3 1.07 0l7.7-7.7 7.7 7.7c.3.3.78.3 1.08 0 .3-.3.3-.77 0-1.07l-7.7-7.7z"
+      fill={fill}
+    />
+  </Svg>
+));
+
+Icon.propTypes = {
+  size: PropTypes.number,
+  fill: PropTypes.string,
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/Credit.js b/apolloschurchapp/src/ui/Icon/icons/Credit.js
new file mode 100644
index 0000000..228ea79
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/Credit.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Svg, { Path } from 'react-native-svg';
+
+import makeIcon from './makeIcon';
+
+const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
+  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
+    <Path
+      d="M1.7 3.43c-.84 0-1.7.86-1.7 1.7v13.73c0 .85.86 1.7 1.7 1.7h20.6c.84 0 1.7-.85 1.7-1.7V5.14c0-.85-.86-1.7-1.7-1.7H1.7zm0 15.43v-6h20.6v6H1.7zm0-10.65V5.16h20.6V8.2H1.7z"
+      fill={fill}
+    />
+  </Svg>
+));
+
+Icon.propTypes = {
+  size: PropTypes.number,
+  fill: PropTypes.string,
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/Download.js b/apolloschurchapp/src/ui/Icon/icons/Download.js
new file mode 100644
index 0000000..efe61ba
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/Download.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Svg, { Path } from 'react-native-svg';
+
+import makeIcon from './makeIcon';
+
+const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
+  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
+    <Path
+      d="M13 13.34l3.2-3.2c.4-.4 1.04-.4 1.43 0 .4.38.4 1 0 1.4l-4.92 4.92c-.2.2-.46.3-.73.3s-.54-.1-.75-.3l-4.9-4.92c-.4-.4-.4-1.02 0-1.4.38-.4 1.02-.4 1.4 0L11 13.4V3.02c0-.57.44-1.02 1-1.02.55 0 1 .45 1 1v10.34zm-9 .7v5.93c0 .33.4.7 1 .7h14c.6 0 1-.37 1-.7v-5.94c0-.33 2-1.5 2 0v5.94c0 1.5-1.34 2.7-3 2.7H5c-1.66 0-3-1.2-3-2.7v-5.94c0-1.5 2-.33 2 0z"
+      fill={fill}
+    />
+  </Svg>
+));
+
+Icon.propTypes = {
+  size: PropTypes.number,
+  fill: PropTypes.string,
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/Dropdown.js b/apolloschurchapp/src/ui/Icon/icons/Dropdown.js
new file mode 100644
index 0000000..de47137
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/Dropdown.js
@@ -0,0 +1,18 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Svg, { Path } from 'react-native-svg';
+
+import makeIcon from './makeIcon';
+
+const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
+  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
+    <Path d="M7 10l5 5 5-5z" fill={fill} />
+  </Svg>
+));
+
+Icon.propTypes = {
+  size: PropTypes.number,
+  fill: PropTypes.string,
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/Empty.js b/apolloschurchapp/src/ui/Icon/icons/Empty.js
new file mode 100644
index 0000000..503bc97
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/Empty.js
@@ -0,0 +1,16 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Svg from 'react-native-svg';
+
+import makeIcon from './makeIcon';
+
+const Icon = makeIcon(({ size = 32, ...otherProps } = {}) => (
+  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps} />
+));
+
+Icon.propTypes = {
+  size: PropTypes.number,
+  fill: PropTypes.string,
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/Failed.js b/apolloschurchapp/src/ui/Icon/icons/Failed.js
new file mode 100644
index 0000000..e917a5a
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/Failed.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Svg, { Path } from 'react-native-svg';
+
+import makeIcon from './makeIcon';
+
+const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
+  <Svg width={size} height={size} viewBox="0 0 512 512" {...otherProps}>
+    <Path
+      d="M256 51c113 0 205 92 205 205 0 113-92 205-205 205-113 0-205-92-205-205 0-113 92-205 205-205z m0-51c-141 0-256 115-256 256 0 141 115 256 256 256 141 0 256-115 256-256 0-141-115-256-256-256z m109 188l-41-41-68 68-68-68-41 41 68 68-68 68 41 41 68-68 68 68 41-41-68-68z"
+      fill={fill}
+    />
+  </Svg>
+));
+
+Icon.propTypes = {
+  size: PropTypes.number,
+  fill: PropTypes.string,
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/Filter.js b/apolloschurchapp/src/ui/Icon/icons/Filter.js
new file mode 100644
index 0000000..ebe4d5e
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/Filter.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Svg, { Path } from 'react-native-svg';
+
+import makeIcon from './makeIcon';
+
+const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
+  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
+    <Path
+      d="M14.07 18.6c0-.42-.33-.75-.74-.75h-2.66c-.4 0-.74.33-.74.74 0 .4.33.7.74.7h2.66c.4 0 .74-.35.74-.76zM2.74 7.47h18.52c.4 0 .74-.33.74-.74 0-.4-.33-.74-.74-.74H2.74c-.4 0-.74.3-.74.7 0 .4.33.73.74.73zm15.8 5.2c0-.42-.32-.75-.73-.75H6.2c-.42 0-.75.33-.75.74 0 .4.33.74.74.74h11.6c.4 0 .7-.32.7-.73z"
+      fill={fill}
+    />
+  </Svg>
+));
+
+Icon.propTypes = {
+  size: PropTypes.number,
+  fill: PropTypes.string,
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/Fullscreen.js b/apolloschurchapp/src/ui/Icon/icons/Fullscreen.js
new file mode 100644
index 0000000..7258643
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/Fullscreen.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Svg, { Path } from 'react-native-svg';
+
+import makeIcon from './makeIcon';
+
+const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
+  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
+    <Path
+      d="M22 2.83V9.5h-1.67V3.67H14.5V2H22v.83zM21.17 22H22v-7.5h-1.67v5.83H14.5V22h6.67zm-17.5-1.67V14.5H2V22h7.5v-1.67H3.67zM2.83 2H2v7.5h1.67V3.67H9.5V2H2.83z"
+      fill={fill}
+    />
+  </Svg>
+));
+
+Icon.propTypes = {
+  size: PropTypes.number,
+  fill: PropTypes.string,
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/Groups.js b/apolloschurchapp/src/ui/Icon/icons/Groups.js
new file mode 100644
index 0000000..f65dcb6
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/Groups.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Svg, { Path } from 'react-native-svg';
+
+import makeIcon from './makeIcon';
+
+const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
+  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
+    <Path
+      d="M15.6 4c1.77 0 3.2 1.43 3.2 3.2V8c0 1.77-1.43 3.2-3.2 3.2-.44 0-.85-.1-1.23-.25.28-.66.43-1.4.43-2.15V8c0-1.26-.42-2.4-1.12-3.35.54-.4 1.2-.65 1.92-.65zm-6.4 8.8c-2.2 0-4-1.8-4-4V8c0-2.2 1.8-4 4-4s4 1.8 4 4v.8c0 2.2-1.8 4-4 4zm11.07 1.12c.57.26.93.83.93 1.46v2.22c0 .44-.36.8-.8.8h-2.44c-.17-2.38-1.82-4.4-4.15-5-.3-.08-.6-.14-.9-.2.85-.23 1.77-.4 2.7-.4 1.9 0 3.67.65 4.7 1.12zM15.6 20H2.8c-.44 0-.8-.36-.8-.8v-.38C2 17 3.22 15.4 4.98 14.95c1.18-.3 2.64-.55 4.22-.55 1.58 0 3.04.25 4.22.55 1.76.45 2.98 2.05 2.98 3.87v.38c0 .44-.36.8-.8.8z"
+      fill={fill}
+    />
+  </Svg>
+));
+
+Icon.propTypes = {
+  size: PropTypes.number,
+  fill: PropTypes.string,
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/Home.js b/apolloschurchapp/src/ui/Icon/icons/Home.js
new file mode 100644
index 0000000..b015a25
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/Home.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Svg, { Path } from 'react-native-svg';
+
+import makeIcon from './makeIcon';
+
+const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
+  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
+    <Path
+      d="M19,2.5 L16.5,2.5 C15.9477153,2.5 15.5,2.05228475 15.5,1.5 C15.5,0.94771525 15.9477153,0.5 16.5,0.5 L20,0.5 C20.5522847,0.5 21,0.94771525 21,1.5 L21,5 C21,5.55228475 20.5522847,6 20,6 C19.4477153,6 19,5.55228475 19,5 L19,2.5 Z M21,22 C21,22.5522847 20.5522847,23 20,23 L14,23 C13.4477153,23 13,22.5522847 13,22 L13,17 L10,17 L10,22 C10,22.5522847 9.55228475,23 9,23 L4,23 C3.44771525,23 3,22.5522847 3,22 L3,13 C3,12.4477153 3.44771525,12 4,12 C4.55228475,12 5,12.4477153 5,13 L5,21 L8,21 L8,16 C8,15.4477153 8.44771525,15 9,15 L14,15 C14.5522847,15 15,15.4477153 15,16 L15,21 L19,21 L19,13 C19,12.4477153 19.4477153,12 20,12 C20.5522847,12 21,12.4477153 21,13 L21,22 Z M12.7071068,0.292893219 L23.7071068,11.2928932 C24.0976311,11.6834175 24.0976311,12.3165825 23.7071068,12.7071068 C23.3165825,13.0976311 22.6834175,13.0976311 22.2928932,12.7071068 L12,2.41421356 L1.70710678,12.7071068 C1.31658249,13.0976311 0.683417511,13.0976311 0.292893219,12.7071068 C-0.0976310729,12.3165825 -0.0976310729,11.6834175 0.292893219,11.2928932 L11.2928932,0.292893219 C11.6834175,-0.0976310729 12.3165825,-0.0976310729 12.7071068,0.292893219 Z"
+      fill={fill}
+    />
+  </Svg>
+));
+
+Icon.propTypes = {
+  size: PropTypes.number,
+  fill: PropTypes.string,
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/Information.js b/apolloschurchapp/src/ui/Icon/icons/Information.js
new file mode 100644
index 0000000..5508914
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/Information.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Svg, { Path } from 'react-native-svg';
+
+import makeIcon from './makeIcon';
+
+const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
+  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
+    <Path
+      d="M12 2C6.5 2 2 6.5 2 12s4.5 10 10 10 10-4.5 10-10S17.5 2 12 2zm2.2 15.24c-.54.2-2.44 1.13-3.54.16-.33-.3-.5-.66-.5-1.1 0-.83.28-1.56.77-3.3.1-.33.2-.76.2-1.1 0-.58-.23-.73-.83-.73-.3 0-.62.1-.9.2l.15-.65c.65-.27 1.48-.6 2.18-.6 1.06 0 1.84.53 1.84 1.53 0 .3-.05.8-.16 1.15l-.6 2.15c-.1.44-.3 1.4 0 1.68s1.2.13 1.6-.06l-.14.67zm-1-8.57c-.68 0-1.24-.56-1.24-1.25 0-.7.56-1.25 1.25-1.25.7 0 1.3.56 1.3 1.25 0 .7-.55 1.25-1.24 1.25z"
+      fill={fill}
+    />
+  </Svg>
+));
+
+Icon.propTypes = {
+  size: PropTypes.number,
+  fill: PropTypes.string,
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/Like.js b/apolloschurchapp/src/ui/Icon/icons/Like.js
new file mode 100644
index 0000000..d56487f
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/Like.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Svg, { Path } from 'react-native-svg';
+
+import makeIcon from './makeIcon';
+
+const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
+  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
+    <Path
+      d="M13.13 20.2h-2.26l1.4-1.4.03-.02.03-.03c6.37-5.6 8.06-7.67 8.06-10.27 0-2.2-1.7-3.9-3.9-3.9-1.23 0-2.48.6-3.28 1.54L12 7.57l-1.23-1.45C9.97 5.18 8.72 4.6 7.5 4.6c-2.2 0-3.9 1.67-3.9 3.88 0 2.6 1.7 4.66 8.07 10.27l.03.03.04.03 1.4 1.4zM10.8 4.03l-.03.03h.1c.4.3.8.64 1.13 1.03.33-.4.72-.75 1.14-1.05h.1c-.02 0-.03-.02-.04-.03.97-.66 2.13-1.03 3.3-1.03C19.6 3 22 5.4 22 8.47c0 3.8-3.4 6.88-8.6 11.46l-1.4 1.4-1.4-1.4C5.4 15.36 2 12.27 2 8.48 2 5.38 4.4 3 7.5 3c1.17 0 2.33.37 3.3 1.03z"
+      fill={fill}
+    />
+  </Svg>
+));
+
+Icon.propTypes = {
+  size: PropTypes.number,
+  fill: PropTypes.string,
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/LikeSolid.js b/apolloschurchapp/src/ui/Icon/icons/LikeSolid.js
new file mode 100644
index 0000000..3ecc3a4
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/LikeSolid.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Svg, { Path } from 'react-native-svg';
+
+import makeIcon from './makeIcon';
+
+const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
+  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
+    <Path
+      d="M10.8 4.03l-.03.03h.1c.4.3.8.64 1.13 1.03.33-.4.72-.75 1.14-1.05h.1c-.02 0-.03-.02-.04-.03.97-.66 2.13-1.03 3.3-1.03C19.6 3 22 5.4 22 8.47c0 3.8-3.4 6.88-8.6 11.46l-1.4 1.4-1.4-1.4C5.4 15.36 2 12.27 2 8.48 2 5.38 4.4 3 7.5 3c1.17 0 2.33.37 3.3 1.03z"
+      fill={fill}
+    />
+  </Svg>
+));
+
+Icon.propTypes = {
+  size: PropTypes.number,
+  fill: PropTypes.string,
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/Locate.js b/apolloschurchapp/src/ui/Icon/icons/Locate.js
new file mode 100644
index 0000000..9506ea1
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/Locate.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Svg, { Path } from 'react-native-svg';
+
+import makeIcon from './makeIcon';
+
+const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
+  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
+    <Path
+      d="M12 8.36C10 8.36 8.36 10 8.36 12S10 15.64 12 15.64 15.64 14 15.64 12 14 8.36 12 8.36zm8.13 2.73c-.43-3.8-3.43-6.8-7.23-7.3V2h-1.8v1.87C7.3 4.3 4.3 7.3 3.9 11.1H2v1.8h1.87c.42 3.8 3.43 6.8 7.22 7.23V22h1.8v-1.87c3.8-.42 6.8-3.43 7.2-7.22H22v-1.8h-1.87zM12 18.3c-3.52 0-6.36-2.84-6.36-6.36 0-3.5 2.84-6.36 6.36-6.36 3.52 0 6.36 2.85 6.36 6.37 0 3.5-2.84 6.35-6.36 6.35z"
+      fill={fill}
+    />
+  </Svg>
+));
+
+Icon.propTypes = {
+  size: PropTypes.number,
+  fill: PropTypes.string,
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/Lock.js b/apolloschurchapp/src/ui/Icon/icons/Lock.js
new file mode 100644
index 0000000..b6d1591
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/Lock.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Svg, { Path } from 'react-native-svg';
+
+import makeIcon from './makeIcon';
+
+const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
+  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
+    <Path
+      d="M9 11.18h6.4V8.73c0-.9-.3-1.68-.94-2.32-.62-.6-1.38-.9-2.26-.9-.88 0-1.64.3-2.26.97C9.3 7.1 9 7.87 9 8.77v2.45zm10.4 1.23v7.4c0 .37-.12.66-.35.9-.23.24-.52.36-.85.36h-12c-.33 0-.62-.1-.85-.35-.23-.24-.35-.53-.35-.87v-7.4c0-.32.12-.6.35-.85.23-.24.52-.36.85-.36h.4V8.74c0-1.57.55-2.92 1.65-4.04C9.35 3.5 10.67 3 12.2 3c1.53 0 2.85.56 3.95 1.7 1.1 1.1 1.65 2.46 1.65 4.03v2.45h.4c.33 0 .62.12.85.36.23.24.35.53.35.87z"
+      fill={fill}
+    />
+  </Svg>
+));
+
+Icon.propTypes = {
+  size: PropTypes.number,
+  fill: PropTypes.string,
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/Pause.js b/apolloschurchapp/src/ui/Icon/icons/Pause.js
new file mode 100644
index 0000000..72c6a11
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/Pause.js
@@ -0,0 +1,18 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Svg, { Path } from 'react-native-svg';
+
+import makeIcon from './makeIcon';
+
+const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
+  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
+    <Path d="M7 3h1.67v18H7V3zm8.33 0H17v18h-1.67V3z" fill={fill} />
+  </Svg>
+));
+
+Icon.propTypes = {
+  size: PropTypes.number,
+  fill: PropTypes.string,
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/Pin.js b/apolloschurchapp/src/ui/Icon/icons/Pin.js
new file mode 100644
index 0000000..b2fedda
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/Pin.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Svg, { Path } from 'react-native-svg';
+
+import makeIcon from './makeIcon';
+
+const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
+  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
+    <Path
+      d="M11.83 2C8 2 4 4.96 4 9.83c0 4.6 6.96 11.65 7.22 11.9.17.18.35.27.6.27.27 0 .44-.1.6-.26.28-.26 7.23-7.3 7.23-11.9 0-4.88-4-7.84-7.82-7.84zm0 10.43c-1.48 0-2.6-1.13-2.6-2.6 0-1.48 1.12-2.6 2.6-2.6 1.47 0 2.6 1.12 2.6 2.6 0 1.47-1.13 2.6-2.6 2.6z"
+      fill={fill}
+    />
+  </Svg>
+));
+
+Icon.propTypes = {
+  size: PropTypes.number,
+  fill: PropTypes.string,
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/Play.js b/apolloschurchapp/src/ui/Icon/icons/Play.js
new file mode 100644
index 0000000..f9e4b24
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/Play.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Svg, { Path } from 'react-native-svg';
+
+import makeIcon from './makeIcon';
+
+const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
+  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
+    <Path
+      d="M7.63 3.34v17.5c-.04-.12-.17-.25-.35-.33-.18-.06-.37-.1-.5-.04l.14-.1 11.13-8.4c.22-.17.22-.2 0-.36L7 3.65l-.14-.1c.1.03.28.02.45-.07.2-.1.3-.2.36-.3v.13zM6 3.34c0-1.3.88-1.73 1.97-.95l11.05 7.9c1.1.8 1.1 2.06.04 2.86l-11.13 8.4C6.86 22.4 6 22 6 20.7V3.34z"
+      fill={fill}
+    />
+  </Svg>
+));
+
+Icon.propTypes = {
+  size: PropTypes.number,
+  fill: PropTypes.string,
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/Print.js b/apolloschurchapp/src/ui/Icon/icons/Print.js
new file mode 100644
index 0000000..6f774d0
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/Print.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Svg, { Path } from 'react-native-svg';
+
+import makeIcon from './makeIcon';
+
+const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
+  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
+    <Path
+      d="M6.42 8.25H4.58c-.7 0-1.3.57-1.3 1.27v5.1c0 .44.2.73.66.73h3.22v3.78h9.68v-6.45H7.16v2.67h-1.3V11.4h12.27v9.02H5.86v-3.78H3.94C2.77 16.64 2 15.5 2 14.6V9.53c0-1.4 1.16-2.56 2.58-2.56h14.76c1.5 0 2.66 1.15 2.66 2.56v5.1c0 1.14-.87 2-2.03 2.02h-1.84v-1.3h1.84c.44 0 .74-.28.74-.73v-5.1c0-.7-.55-1.27-1.26-1.26h-13zm9.13 6.92v-.74h-7.1v.74h7.1zm0 2.4h-7.1v-.75h7.1v.74zm-8.4-10.6H5.88V3h12.26v3.96h-1.3V4.3H7.17v2.66z"
+      fill={fill}
+    />
+  </Svg>
+));
+
+Icon.propTypes = {
+  size: PropTypes.number,
+  fill: PropTypes.string,
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/Profile.js b/apolloschurchapp/src/ui/Icon/icons/Profile.js
new file mode 100644
index 0000000..24e12d6
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/Profile.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Svg, { Path } from 'react-native-svg';
+
+import makeIcon from './makeIcon';
+
+const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
+  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
+    <Path
+      d="M22,22.8 C22,23.4627417 21.4527925,24 20.7777778,24 C20.1027631,24 19.5555556,23.4627417 19.5555556,22.8 L19.5555556,20.4 C19.5555556,18.4117749 17.913933,16.8 15.8888889,16.8 L6.11111111,16.8 C4.08606703,16.8 2.44444444,18.4117749 2.44444444,20.4 L2.44444444,22.8 C2.44444444,23.4627417 1.89723692,24 1.22222222,24 C0.547207528,24 0,23.4627417 0,22.8 L0,20.4 C0,17.0862915 2.73603764,14.4 6.11111111,14.4 L15.8888889,14.4 C19.2639624,14.4 22,17.0862915 22,20.4 L22,22.8 Z M11,12 C7.62492653,12 4.88888889,9.3137085 4.88888889,6 C4.88888889,2.6862915 7.62492653,0 11,0 C14.3750735,0 17.1111111,2.6862915 17.1111111,6 C17.1111111,9.3137085 14.3750735,12 11,12 Z M11,9.6 C13.0250441,9.6 14.6666667,7.9882251 14.6666667,6 C14.6666667,4.0117749 13.0250441,2.4 11,2.4 C8.97495592,2.4 7.33333333,4.0117749 7.33333333,6 C7.33333333,7.9882251 8.97495592,9.6 11,9.6 Z"
+      fill={fill}
+    />
+  </Svg>
+));
+
+Icon.propTypes = {
+  size: PropTypes.number,
+  fill: PropTypes.string,
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/RadioChecked.js b/apolloschurchapp/src/ui/Icon/icons/RadioChecked.js
new file mode 100644
index 0000000..a01a630
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/RadioChecked.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Svg, { Path } from 'react-native-svg';
+
+import makeIcon from './makeIcon';
+
+const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
+  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
+    <Path
+      d="M12 24C5.37 24 0 18.63 0 12S5.37 0 12 0s12 5.37 12 12-5.37 12-12 12zm0-2.4c5.3 0 9.6-4.3 9.6-9.6S17.3 2.4 12 2.4 2.4 6.7 2.4 12s4.3 9.6 9.6 9.6zm0-2.4c-3.98 0-7.2-3.22-7.2-7.2S8.02 4.8 12 4.8s7.2 3.22 7.2 7.2-3.22 7.2-7.2 7.2z"
+      fill={fill}
+    />
+  </Svg>
+));
+
+Icon.propTypes = {
+  size: PropTypes.number,
+  fill: PropTypes.string,
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/RadioUnchecked.js b/apolloschurchapp/src/ui/Icon/icons/RadioUnchecked.js
new file mode 100644
index 0000000..873beab
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/RadioUnchecked.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Svg, { Path } from 'react-native-svg';
+
+import makeIcon from './makeIcon';
+
+const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
+  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
+    <Path
+      d="M12 24C5.37 24 0 18.63 0 12S5.37 0 12 0s12 5.37 12 12-5.37 12-12 12zm0-2.4c5.3 0 9.6-4.3 9.6-9.6S17.3 2.4 12 2.4 2.4 6.7 2.4 12s4.3 9.6 9.6 9.6z"
+      fill={fill}
+    />
+  </Svg>
+));
+
+Icon.propTypes = {
+  size: PropTypes.number,
+  fill: PropTypes.string,
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/Repeat.js b/apolloschurchapp/src/ui/Icon/icons/Repeat.js
new file mode 100644
index 0000000..718ee4d
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/Repeat.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Svg, { Path } from 'react-native-svg';
+
+import makeIcon from './makeIcon';
+
+const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
+  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
+    <Path
+      d="M6.22 16.55h11.45l-.3.04c1.32-.5 2.1-1.1 2.52-2 .3-.8.4-1.6.3-2.3l-.1-.2 1.7-.4v.3c.14 1 .05 2.06-.43 3.1-.6 1.33-1.8 2.34-3.56 2.9l-.13.06H6.04l2.9 2.9-1.3 1.3-4.9-4.9.1-.1v-.1l.7-.66v-.1h.1l4.26-3.9 1.22 1.4-2.8 2.62zm11.56-9.1H6.33l.3-.04c-1.32.5-2.1 1.1-2.52 2-.3.8-.4 1.6-.3 2.3l.1.2-1.7.4V12c-.14-1-.05-2.06.43-3.1.6-1.33 1.8-2.34 3.56-2.9l.13-.06H18L15.1 3l1.3-1.3 4.9 4.9-.08.1.08.1-.72.65v.1h-.1l-4.26 3.95-1.25-1.35 2.8-2.62z"
+      fill={fill}
+    />
+  </Svg>
+));
+
+Icon.propTypes = {
+  size: PropTypes.number,
+  fill: PropTypes.string,
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/RepeatAll.js b/apolloschurchapp/src/ui/Icon/icons/RepeatAll.js
new file mode 100644
index 0000000..ab0c962
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/RepeatAll.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Svg, { Path } from 'react-native-svg';
+
+import makeIcon from './makeIcon';
+
+const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
+  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
+    <Path
+      d="M2 12l3.87-5H22v10H5.87L2 12zm7.5-1.53l.55 1.73h-1.1l.56-1.73zm1.08 3.4h1.1L10.1 9.5H8.94l-1.6 4.38h1.1l.25-.82h1.6l.26.8zm5.47-4.37v4.38h3.1v-.9h-2V9.5h-1.1zm-3.78 0v4.38h3.1v-.9h-2V9.5h-1.1z"
+      fill={fill}
+    />
+  </Svg>
+));
+
+Icon.propTypes = {
+  size: PropTypes.number,
+  fill: PropTypes.string,
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/RepeatOne.js b/apolloschurchapp/src/ui/Icon/icons/RepeatOne.js
new file mode 100644
index 0000000..65be25d
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/RepeatOne.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Svg, { Path } from 'react-native-svg';
+
+import makeIcon from './makeIcon';
+
+const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
+  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
+    <Path
+      d="M2 12l3.87-5H22v10H5.87L2 12zm7.55-.56v.67c0 .7-.32 1.1-.96 1.1-.7 0-1-.4-1-1.03v-.66c0-.63.3-1.05.93-1.05.63 0 .95.4.95 1.05zm1.1.62v-.57c0-1.2-.7-2-2.06-2-1.4 0-2.1.8-2.1 2v.5c0 1.13.7 2 2.03 2 1.35 0 2.06-.87 2.06-2zm5.5 1.9h3.28v-.9h-2.17v-.87h1.97v-.9h-1.97v-.88h2.17v-.9h-3.28v4.38zm-.9 0V9.6h-1.08v2.54l-1.7-2.55h-1.05v4.3h1.08v-2.5l1.7 2.55h1.05z"
+      fill={fill}
+    />
+  </Svg>
+));
+
+Icon.propTypes = {
+  size: PropTypes.number,
+  fill: PropTypes.string,
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/Search.js b/apolloschurchapp/src/ui/Icon/icons/Search.js
new file mode 100644
index 0000000..ce17480
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/Search.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Svg, { Path } from 'react-native-svg';
+
+import makeIcon from './makeIcon';
+
+const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
+  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
+    <Path
+      d="M20.77 18.56l-3.42-3.42c.82-1.24 1.3-2.72 1.3-4.3 0-4.33-3.5-7.84-7.82-7.84S3 6.5 3 10.83c0 4.3 3.5 7.82 7.83 7.82 1.6 0 3.07-.48 4.3-1.3l3.43 3.42c.3.3.8.3 1.1 0l1.1-1.1c.32-.3.32-.8 0-1.1zm-16.2-7.73c0-3.46 2.8-6.26 6.26-6.26 3.45 0 6.26 2.8 6.26 6.26 0 3.45-2.83 6.26-6.28 6.26-3.46 0-6.26-2.83-6.26-6.28z"
+      fill={fill}
+    />
+  </Svg>
+));
+
+Icon.propTypes = {
+  size: PropTypes.number,
+  fill: PropTypes.string,
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/Sections.js b/apolloschurchapp/src/ui/Icon/icons/Sections.js
new file mode 100644
index 0000000..ecbe137
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/Sections.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Svg, { Path } from 'react-native-svg';
+
+import makeIcon from './makeIcon';
+
+const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
+  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
+    <Path
+      d="M2.4,2.4 L2.4,8.4 L8.4,8.4 L8.4,2.4 L2.4,2.4 Z M1.2,0 L9.6,0 C10.2627417,0 10.8,0.5372583 10.8,1.2 L10.8,9.6 C10.8,10.2627417 10.2627417,10.8 9.6,10.8 L1.2,10.8 C0.5372583,10.8 0,10.2627417 0,9.6 L0,1.2 C0,0.5372583 0.5372583,0 1.2,0 Z M14.4,0 L22.8,0 C23.4627417,0 24,0.5372583 24,1.2 L24,9.6 C24,10.2627417 23.4627417,10.8 22.8,10.8 L14.4,10.8 C13.7372583,10.8 13.2,10.2627417 13.2,9.6 L13.2,1.2 C13.2,0.5372583 13.7372583,0 14.4,0 Z M15.6,2.4 L15.6,8.4 L21.6,8.4 L21.6,2.4 L15.6,2.4 Z M14.4,13.2 L22.8,13.2 C23.4627417,13.2 24,13.7372583 24,14.4 L24,22.8 C24,23.4627417 23.4627417,24 22.8,24 L14.4,24 C13.7372583,24 13.2,23.4627417 13.2,22.8 L13.2,14.4 C13.2,13.7372583 13.7372583,13.2 14.4,13.2 Z M15.6,15.6 L15.6,21.6 L21.6,21.6 L21.6,15.6 L15.6,15.6 Z M1.2,13.2 L9.6,13.2 C10.2627417,13.2 10.8,13.7372583 10.8,14.4 L10.8,22.8 C10.8,23.4627417 10.2627417,24 9.6,24 L1.2,24 C0.5372583,24 0,23.4627417 0,22.8 L0,14.4 C0,13.7372583 0.5372583,13.2 1.2,13.2 Z M2.4,15.6 L2.4,21.6 L8.4,21.6 L8.4,15.6 L2.4,15.6 Z"
+      fill={fill}
+    />
+  </Svg>
+));
+
+Icon.propTypes = {
+  size: PropTypes.number,
+  fill: PropTypes.string,
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/Settings.js b/apolloschurchapp/src/ui/Icon/icons/Settings.js
new file mode 100644
index 0000000..8a5674e
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/Settings.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Svg, { Path } from 'react-native-svg';
+
+import makeIcon from './makeIcon';
+
+const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
+  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
+    <Path
+      d="M18.9108 12.8764c0-.0527.0054-.0964.034-.2803.035-.224.0505-.369.0505-.554 0-.535-.0164-.745-.1206-1.054l-.0246-.062-.643.283.443.541 1.775-1.419.055-.048c.379-.374.441-.861.217-1.303l-.018-.034-1.69-2.921-.046-.0803-.066-.066c-.299-.295-.754-.4074-1.228-.2514l-.039.014-2.113.8345.262.646.44-.543c-.4042-.3196-.756-.516-1.562-.914l-.315.622.6965-.1053-.338-2.17-.697.106.668.22C14.895 3.602 14.2855 3 13.642 3h-3.3812c-.5353 0-1.127.4382-1.127 1.0294h.7044l-.6968-.102-.338 2.2535.6967.101-.222-.66c-.293.096-.565.233-.874.427-.16.101-.687.459-.731.488l.391.578.271-.642-2.029-.834-.048-.018c-.512-.169-.948-.025-1.312.335l-.066.065-.047.081-1.691 2.922.612.345-.498-.492c-.454.448-.24 1.08.169 1.484l.033.033.038.0283 1.775 1.3353.427-.5534h-.705c0 .053-.005.0967-.034.2806-.035.224-.05.3693-.05.554 0 .5354.0167.7457.121 1.0546l.669-.22-.443-.541-1.775 1.419-.055.049c-.379.3742-.44.861-.216 1.3035l.019.034 1.69 2.921.047.081.067.066c.299.295.754.408 1.228.252l.039-.014 2.113-.835-.2616-.646-.44.543c.404.32.756.516 1.562.914l.315-.622-.6966.106.338 2.17.696-.1055H9.22c0 .589.5207 1.0298 1.127 1.0298h3.3813c.5355 0 1.127-.438 1.127-1.03h-.704l.6966.106.338-2.17-.696-.106.315.622c.806-.3974 1.157-.594 1.562-.913l-.44-.543-.262.646 2.113.8343.261-.645-.315.622c.517.2557 1.1934.033 1.452-.478l-.63-.311.6115.3455 1.6907-2.9214.018-.034c.249-.491.174-1.1504-.4-1.434l-.315.622.402-.5707-1.944-1.3355-.402.571h.7045zm-1.4088 0v.3634l.3022.2075 1.944 1.3354.0418.0287.0455.0224c-.1554-.0767-.2346-.21-.2477-.3262-.005-.0438.0008-.0737.0172-.106l.63.311-.6115-.3452-1.6906 2.9212-.019.034c.089-.1766.259-.2324.438-.144l-.054-.0238-2.114-.8346-.381-.1505-.321.2532c-.3.236-.596.402-1.312.755l-.326.161-.056.355-.338 2.17-.009.052v.053c0-.279.112-.362.282-.362h-3.381c.127 0 .281.13.281.361v-.054l-.008-.053-.338-2.17-.0558-.3557-.326-.161c-.7157-.353-1.012-.518-1.312-.755l-.3206-.253-.381.1502-2.113.834.262.646-.2225-.66c.0393-.013.14.012.2137.0846l-.498.492.6116-.345-1.69-2.921-.6116.345.63-.311c.038.0754.0178.2377-.0473.302l-.498-.492.443.5406 1.775-1.419.379-.303-.1548-.4574c-.04-.117-.049-.232-.049-.615 0-.097.009-.183.034-.3424.041-.2638.0505-.3394.0505-.492v-.344l-.278-.209-1.773-1.335-.427.553.498-.492c-.005-.0047-.011-.015-.0097-.01.0083.0262.015.0622.013.115-.0045.1236-.053.2596-.173.3777l.067-.066.0464-.081 1.691-2.921-.611-.345.498.4917c.022-.021.019-.019-.011-.009-.052.017-.101.016-.118.01l.223-.66-.271.642 2.029.8345.348.143.314-.2064c.062-.041.571-.3874.706-.472.22-.138.394-.226.563-.2816l.411-.135.0635-.4226.338-2.2535.0075-.0505v-.05c0 .278-.113.3615-.282.3615h3.381c-.221 0-.429-.2053-.33-.498l-.054.1595.026.1662.338 2.17.0553.3554.326.161c.716.353 1.0125.5186 1.312.7555l.321.253.381-.151 2.113-.8345-.2613-.646.223.66c-.039.013-.14-.012-.2137-.0848l.498-.492-.611.345 1.69 2.9213.6117-.345-.63.311c-.0385-.0756-.018-.238.0472-.302l.498.492-.443-.541-1.775 1.419-.379.304.1542.458.0245.063c.015.054.024.1694.024.552 0 .097-.009.183-.034.343-.041.2637-.0508.339-.0508.492zm-5.5506 1.391c-1.217 0-2.254-1.024-2.254-2.2257 0-1.2016 1.037-2.2256 2.254-2.2256s2.254 1.024 2.254 2.226-1.037 2.226-2.254 2.226zm0 1.391c1.995 0 3.6628-1.6468 3.6628-3.6167 0-1.97-1.6678-3.6167-3.6628-3.6167-1.995 0-3.663 1.6468-3.663 3.6167 0 1.97 1.668 3.6167 3.663 3.6167z"
+      fill={fill}
+    />
+  </Svg>
+));
+
+Icon.propTypes = {
+  size: PropTypes.number,
+  fill: PropTypes.string,
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/Share.js b/apolloschurchapp/src/ui/Icon/icons/Share.js
new file mode 100644
index 0000000..2691126
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/Share.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Svg, { Path } from 'react-native-svg';
+
+import makeIcon from './makeIcon';
+
+const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
+  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
+    <Path
+      d="M12.8 3.621v8.6568h-1.6V3.5545L8.6046 6.224c-.3037.3124-.7962.3124-1.1 0-.3037-.3124-.3037-.819 0-1.1314l3.826-3.9352c.174-.179.41-.2554.637-.2293.227-.026.463.0505.637.2295l3.826 3.9352c.3037.3125.3037.819 0 1.1314-.3038.3125-.7963.3125-1.1 0L12.8 3.621zM8.0338 8v1.5556H6.4012c-.4785 0-.8012.2822-.8012.544v9.8007c0 .2617.3228.544.7997.544h11.2006c.477 0 .7997-.2823.7997-.544v-9.8006c0-.2623-.3216-.544-.796-.544h-1.623V8h1.623C18.927 8 20 8.9403 20 10.0997v9.8006C20 21.06 18.9254 22 17.6003 22H6.3997C5.0744 22 4 21.0597 4 19.9003v-9.8006C4 8.94 5.0743 8 6.4012 8h1.6326z"
+      fill={fill}
+    />
+  </Svg>
+));
+
+Icon.propTypes = {
+  size: PropTypes.number,
+  fill: PropTypes.string,
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/Shuffle.js b/apolloschurchapp/src/ui/Icon/icons/Shuffle.js
new file mode 100644
index 0000000..0b521f6
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/Shuffle.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Svg, { Path } from 'react-native-svg';
+
+import makeIcon from './makeIcon';
+
+const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
+  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
+    <Path
+      d="M18.81 16.6543l-3.0324-3.0325 1.2128-1.2127 3.8464 3.8467.0167-.0156.4454.4778.7214.7215-.0252.0252.028.03-.8566.7986-.359.359-.0125-.0125-3.9745 3.7064-1.1697-1.2544 2.851-2.6588h-3.639c-1.3287 0-2.3808-.7553-3.2627-2.112-.6044-.9298.659-2.4274 1.0328-1.6996.7637 1.487 1.3937 2.0333 2.23 2.0333h3.947zm.1715-10.9927l-2.796-2.7958 1.213-1.2127 3.8463 3.8466.0167-.0155.4455.4777.7215.7216-.0252.0252.028.03-.8566.7986-.359.359-.0125-.0125-3.9746 3.7064-1.1697-1.2544L19.164 7.44h-4.301c-1.2457 0-2.0337 1.2122-3.4872 4.9388-.828 2.123-1.221 3.012-1.8256 3.942-.882 1.3566-1.934 2.112-3.2626 2.112H2v-1.7785h4.2876c1.2456 0 2.0336-1.2122 3.487-4.9388.8282-2.123 1.2212-3.012 1.8257-3.942.882-1.3566 1.934-2.112 3.2626-2.112h4.1184zM6.2875 7.44H2V5.6617h4.2876c1.3286 0 2.3807.7553 3.2626 2.112.6045.9298-.3475 2.6184-.7595 1.8623-.703-1.2902-1.7178-2.196-2.503-2.196z"
+      fill={fill}
+    />
+  </Svg>
+));
+
+Icon.propTypes = {
+  size: PropTypes.number,
+  fill: PropTypes.string,
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/SkipNext.js b/apolloschurchapp/src/ui/Icon/icons/SkipNext.js
new file mode 100644
index 0000000..7cdfe6e
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/SkipNext.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Svg, { Path } from 'react-native-svg';
+
+import makeIcon from './makeIcon';
+
+const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
+  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
+    <Path
+      d="M13.78 4.168v15.67c0 .116.01.173.004.16-.07-.15-.238-.318-.502-.42-.265-.1-.512-.09-.678-.03-.013.006.038-.028.127-.11l7.404-6.805c.322-.296.325-.784.006-1.083l-7.437-6.977c-.09-.084-.142-.12-.13-.114.17.062.424.074.697-.028.272-.103.442-.276.514-.43.005-.012-.005.046-.005.164zm-1.626 0c0-1.24.763-1.528 1.707-.642l7.44 6.977c.943.885.935 2.31-.02 3.188l-7.4 6.808c-.952.876-1.724.58-1.724-.657V4.168zM2 4.168c0-1.24.78-1.54 1.737-.674l7.377 6.667c.96.87.978 2.297.048 3.185L3.69 20.47c-.934.89-1.69.606-1.69-.63V4.167zm1.625 0v15.67c0 .12.01.178.005.166-.072-.157-.245-.332-.522-.436-.28-.105-.54-.09-.712-.022-.015.005.036-.03.124-.113l7.472-7.13c.313-.297.306-.784-.017-1.075L2.6 4.56c-.09-.078-.14-.11-.126-.106.164.06.407.066.665-.033.255-.1.42-.262.49-.41.003-.01-.007.045-.007.16z"
+      fill={fill}
+    />
+  </Svg>
+));
+
+Icon.propTypes = {
+  size: PropTypes.number,
+  fill: PropTypes.string,
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/SkipPrevious.js b/apolloschurchapp/src/ui/Icon/icons/SkipPrevious.js
new file mode 100644
index 0000000..818867d
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/SkipPrevious.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Svg, { Path } from 'react-native-svg';
+
+import makeIcon from './makeIcon';
+
+const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
+  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
+    <Path
+      d="M11.846 4.168v15.67c0 1.238-.772 1.534-1.725.658l-7.4-6.805c-.95-.87-.96-2.3-.01-3.18l7.44-6.97c.95-.88 1.71-.59 1.71.64zm-1.625 0c0-.118-.01-.176 0-.165.07.155.24.328.52.43.28.103.53.09.7.026.02-.01-.04.03-.13.11l-7.44 6.98c-.32.3-.31.78.01 1.08l7.4 6.8c.09.08.14.11.13.11-.162-.06-.41-.07-.68.03-.26.1-.43.27-.5.42-.002.01.008-.05.008-.16V4.17zm11.78 0v15.67c0 1.238-.75 1.523-1.69.633l-7.47-7.12c-.93-.89-.91-2.31.05-3.18l7.38-6.67c.95-.87 1.73-.57 1.73.67zm-1.62 0c0-.115-.01-.17 0-.16.07.148.24.313.49.413.26.1.51.1.67.04.02 0-.03.03-.12.11l-7.38 6.66c-.32.29-.33.78-.012 1.08l7.47 7.13c.09.09.14.12.125.11-.173-.07-.433-.09-.712.02-.274.1-.45.28-.52.44-.004.01.006-.04.006-.16V4.17z"
+      fill={fill}
+    />
+  </Svg>
+));
+
+Icon.propTypes = {
+  size: PropTypes.number,
+  fill: PropTypes.string,
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/Text.js b/apolloschurchapp/src/ui/Icon/icons/Text.js
new file mode 100644
index 0000000..c9f763d
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/Text.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Svg, { Path } from 'react-native-svg';
+
+import makeIcon from './makeIcon';
+
+const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
+  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
+    <Path
+      d="M4.6 3.64v16.356c0 .004 0 .004-.003.004h14.806c-.004 0-.003 0-.003-.004V3.64c0-.004 0-.004.003-.004H4.597c.004 0 .003 0 .003.004zm-1.6 0C3 2.734 3.717 2 4.597 2h14.806C20.285 2 21 2.734 21 3.64v16.356c0 .906-.717 1.64-1.597 1.64H4.597c-.882 0-1.597-.734-1.597-1.64V3.64zm4 3.27c0 .45.366.817.818.817h8.364c.452 0 .818-.366.818-.818 0-.454-.366-.82-.818-.82H7.818c-.452 0-.818.366-.818.82zm0 4.908c0 .452.366.818.818.818h8.364c.452 0 .818-.366.818-.818 0-.452-.366-.818-.818-.818H7.818c-.452 0-.818.366-.818.818zm0 4.91c0 .45.366.817.818.817h4.764c.452 0 .818-.366.818-.818 0-.452-.366-.818-.818-.818H7.818c-.452 0-.818.364-.818.816z"
+      fill={fill}
+    />
+  </Svg>
+));
+
+Icon.propTypes = {
+  size: PropTypes.number,
+  fill: PropTypes.string,
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/Time.js b/apolloschurchapp/src/ui/Icon/icons/Time.js
new file mode 100644
index 0000000..03096b9
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/Time.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Svg, { Path } from 'react-native-svg';
+
+import makeIcon from './makeIcon';
+
+const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
+  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
+    <Path
+      d="M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8zm.5-13H11v6l5.25 3.15.75-1.23-4.5-2.67V7z"
+      fill={fill}
+    />
+  </Svg>
+));
+
+Icon.propTypes = {
+  size: PropTypes.number,
+  fill: PropTypes.string,
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/Umbrella.js b/apolloschurchapp/src/ui/Icon/icons/Umbrella.js
new file mode 100644
index 0000000..c146811
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/Umbrella.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Svg, { Path } from 'react-native-svg';
+
+import makeIcon from './makeIcon';
+
+const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
+  <Svg width={size} height={size} viewBox="0 0 32 32" {...otherProps}>
+    <Path
+      d="M27 14h5c0-1.105-1.119-2-2.5-2s-2.5 0.895-2.5 2v0zM27 14c0-1.105-1.119-2-2.5-2s-2.5 0.895-2.5 2c0-1.105-1.119-2-2.5-2s-2.5 0.895-2.5 2v0 14c0 1.112-0.895 2-2 2-1.112 0-2-0.896-2-2.001v-1.494c0-0.291 0.224-0.505 0.5-0.505 0.268 0 0.5 0.226 0.5 0.505v1.505c0 0.547 0.444 0.991 1 0.991 0.552 0 1-0.451 1-0.991v-14.009c0-1.105-1.119-2-2.5-2s-2.5 0.895-2.5 2c0-1.105-1.119-2-2.5-2s-2.5 0.895-2.5 2c0-1.105-1.119-2-2.5-2s-2.5 0.895-2.5 2c0-5.415 6.671-9.825 15-9.995v-1.506c0-0.283 0.224-0.499 0.5-0.499 0.268 0 0.5 0.224 0.5 0.499v1.506c8.329 0.17 15 4.58 15 9.995h-5z"
+      fill={fill}
+    />
+  </Svg>
+));
+
+Icon.propTypes = {
+  size: PropTypes.number,
+  fill: PropTypes.string,
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/Video.js b/apolloschurchapp/src/ui/Icon/icons/Video.js
new file mode 100644
index 0000000..702bed5
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/Video.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Svg, { Path } from 'react-native-svg';
+
+import makeIcon from './makeIcon';
+
+const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
+  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
+    <Path
+      d="M3.8182 5.7778v12.4444H14.2V5.7778H3.8182zM16 6v12c0 1.1046-.8954 2-2 2H4c-1.1046 0-2-.8954-2-2V6c0-1.1046.8954-2 2-2h10c1.1046 0 2 .8954 2 2zm4.1818 2.6952L16 11.8084v.3832l4.1818 3.251V8.695zM16 14.4957V9.4253l6-4.2178v13.585l-6-4.2968z"
+      fill={fill}
+    />
+  </Svg>
+));
+
+Icon.propTypes = {
+  size: PropTypes.number,
+  fill: PropTypes.string,
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/Warning.js b/apolloschurchapp/src/ui/Icon/icons/Warning.js
new file mode 100644
index 0000000..abd015a
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/Warning.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Svg, { Path } from 'react-native-svg';
+
+import makeIcon from './makeIcon';
+
+const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
+  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
+    <Path
+      d="M21.8955 19.741l-9.091-16.3178c-.3145-.5643-1.2945-.5643-1.609 0L2.1045 19.741c-.148.2662-.138.5865.0255.8433.1655.2585.46.4157.779.4157h18.182c.319 0 .6136-.1572.778-.4148.1647-.2577.1747-.578.0265-.8442zM12 18.4235c-.5018 0-.909-.3847-.909-.8588 0-.474.4072-.8588.909-.8588.502 0 .909.3845.909.8586 0 .474-.407.8588-.909.8588zm.909-3.4353h-1.818V8.9764h1.818v6.0118z"
+      fill={fill}
+    />
+  </Svg>
+));
+
+Icon.propTypes = {
+  size: PropTypes.number,
+  fill: PropTypes.string,
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/index.js b/apolloschurchapp/src/ui/Icon/icons/index.js
new file mode 100644
index 0000000..b4385c6
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/index.js
@@ -0,0 +1,53 @@
+export { default as ArrowBack } from './ArrowBack';
+export { default as ArrowDown } from './ArrowDown';
+export { default as ArrowNext } from './ArrowNext';
+export { default as ArrowUp } from './ArrowUp';
+export { default as Audio } from './Audio';
+export { default as Bank } from './Bank';
+export { default as Building } from './Building';
+export { default as BrandIcon } from './BrandIcon';
+export { default as Calendar } from './Calendar';
+export { default as Camera } from './Camera';
+export { default as Check } from './Check';
+export { default as CheckboxChecked } from './CheckboxChecked';
+export { default as CheckboxUnchecked } from './CheckboxUnchecked';
+export { default as Chromecast } from './Chromecast';
+export { default as Close } from './Close';
+export { default as Credit } from './Credit';
+export { default as Download } from './Download';
+export { default as Dropdown } from './Dropdown';
+export { default as Empty } from './Empty';
+export { default as Failed } from './Failed';
+export { default as Filter } from './Filter';
+export { default as Fullscreen } from './Fullscreen';
+export { default as Groups } from './Groups';
+export { default as Home } from './Home';
+export { default as Information } from './Information';
+export { default as Like } from './Like';
+export { default as LikeSolid } from './LikeSolid';
+export { default as Locate } from './Locate';
+export { default as Lock } from './Lock';
+export { default as Pause } from './Pause';
+export { default as Pin } from './Pin';
+export { default as Play } from './Play';
+export { default as Print } from './Print';
+export { default as Profile } from './Profile';
+export { default as RadioChecked } from './RadioChecked';
+export { default as RadioUnchecked } from './RadioUnchecked';
+export { default as Repeat } from './Repeat';
+export { default as RepeatAll } from './RepeatAll';
+export { default as RepeatOne } from './RepeatOne';
+export { default as Search } from './Search';
+export { default as Sections } from './Sections';
+export { default as Settings } from './Settings';
+export { default as Share } from './Share';
+export { default as Shuffle } from './Shuffle';
+export { default as SkipNext } from './SkipNext';
+export { default as SkipPrevious } from './SkipPrevious';
+export { default as Text } from './Text';
+export { default as Time } from './Time';
+export { default as Umbrella } from './Umbrella';
+export { default as Video } from './Video';
+export { default as Warning } from './Warning';
+export { default as CircleOutlineCheckMark } from './CircleOutlineCheckMark';
+export { default as CircleOutlineXMark } from './CircleOutlineXMark';
diff --git a/apolloschurchapp/src/ui/Icon/icons/makeIcon.js b/apolloschurchapp/src/ui/Icon/icons/makeIcon.js
new file mode 100644
index 0000000..ead36b1
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/makeIcon.js
@@ -0,0 +1,10 @@
+import { withTheme } from 'apolloschurchapp/src/ui/theme';
+
+// Currently used to inject default fill color to icons.
+// Eventually can be used for other shared functionality between icons
+const makeIcon = withTheme(({ theme, fill, ...otherProps } = {}) => ({
+  fill: fill || theme.colors.text.primary,
+  ...otherProps,
+}));
+
+export default makeIcon;
diff --git a/apolloschurchapp/src/ui/Icon/index.js b/apolloschurchapp/src/ui/Icon/index.js
new file mode 100644
index 0000000..f213544
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/index.js
@@ -0,0 +1,45 @@
+import PropTypes from 'prop-types';
+import React from 'react';
+import { compose, pure } from 'recompose';
+import { flow, camelCase, upperFirst, kebabCase } from 'lodash';
+
+import Placeholder from 'apolloschurchapp/src/ui/Placeholder';
+
+import * as Icons from './icons';
+
+const pascalCase = (string) =>
+  flow(
+    camelCase,
+    upperFirst
+  )(string);
+
+// Convenience component to render icons based on the icon's string name, like:
+// <Icon name="skip-next" {...allOtherPropsPassedToComponent} />
+//
+// Can also import the icon directly:
+// import { SkipNext } from 'Icon/icons';
+// <SkipNext />
+
+const enhance = compose(pure);
+
+const Icon = enhance(({ name, size, isLoading = false, ...otherProps }) => {
+  const IconComponent = Icons[pascalCase(name)];
+  return (
+    <Placeholder.Media size={size} hasRadius onReady={!isLoading}>
+      <IconComponent size={size} {...otherProps} />
+    </Placeholder.Media>
+  );
+});
+
+Icon.propTypes = {
+  name: PropTypes.oneOf(Object.keys(Icons).map(kebabCase)).isRequired,
+  size: PropTypes.number,
+  fill: PropTypes.string,
+  isLoading: PropTypes.bool,
+};
+
+Icon.defaultProps = {
+  size: 32, // 32 is the default size used within the svg component
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/LandingScreen/LandingScreen.js b/apolloschurchapp/src/ui/LandingScreen/LandingScreen.js
deleted file mode 100644
index d803a8d..0000000
--- a/apolloschurchapp/src/ui/LandingScreen/LandingScreen.js
+++ /dev/null
@@ -1,86 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-
-import {
-  styled,
-  withTheme,
-  Icon,
-  H1,
-  H4,
-  PaddedView,
-  BackgroundView,
-} from '@apollosproject/ui-kit';
-
-import { Slide } from '@apollosproject/ui-onboarding';
-
-const Content = styled({
-  flex: 1,
-  justifyContent: 'center',
-})(PaddedView);
-
-const BrandIcon = withTheme(({ theme, color }) => ({
-  name: 'brand-icon',
-  size: theme.sizing.baseUnit * 3,
-  ...(color ? { fill: color } : {}),
-  style: {
-    marginBottom: theme.sizing.baseUnit,
-  },
-}))(Icon);
-
-const Title = styled(({ theme, color }) => ({
-  marginBottom: theme.sizing.baseUnit,
-  ...(color ? { color } : {}),
-}))(H1);
-
-const StyledH4 = styled(({ color }) => ({
-  ...(color ? { color } : {}),
-}))(H4);
-
-const LandingScreen = ({
-  slideTitle,
-  description,
-  textColor,
-  BackgroundComponent,
-  ...props
-}) => (
-  <BackgroundView>
-    <Slide {...props} scrollEnabled={false}>
-      {BackgroundComponent}
-      <Content>
-        <BrandIcon color={textColor} />
-        <Title color={textColor}>{slideTitle}</Title>
-        <StyledH4 color={textColor}>{description}</StyledH4>
-      </Content>
-    </Slide>
-  </BackgroundView>
-);
-
-LandingScreen.propTypes = {
-  /* The `Swiper` component used in `<onBoarding>` looks for and hijacks the title prop of it's
-   * children. Thus we have to use more unique name.
-   */
-  slideTitle: PropTypes.string,
-  description: PropTypes.string,
-  textColor: PropTypes.string, // Use for custom text and `BrandIcon` color when overlaying text on an image or video needs more clarity. Defaults to theme driven colors.
-  /* Recommended usage:
-   * - `Image` (react-native)
-   * - `GradientOverlayImage` (@apollosproject/ui-kit) for increased readability
-   * - `Video` (react-native-video) because moving pictures!
-   */
-  BackgroundComponent: PropTypes.oneOfType([
-    PropTypes.arrayOf(PropTypes.node),
-    PropTypes.node,
-  ]),
-};
-
-LandingScreen.defaultProps = {
-  slideTitle: "We're glad you're here.",
-  description:
-    "We're not just a building you go to, but a family to belong to.",
-};
-
-LandingScreen.navigationOptions = {
-  header: null,
-};
-
-export default LandingScreen;
diff --git a/apolloschurchapp/src/ui/LandingScreen/LandingScreen.stories.js b/apolloschurchapp/src/ui/LandingScreen/LandingScreen.stories.js
deleted file mode 100644
index b6c5638..0000000
--- a/apolloschurchapp/src/ui/LandingScreen/LandingScreen.stories.js
+++ /dev/null
@@ -1,23 +0,0 @@
-import React from 'react';
-import { storiesOf } from '@apollosproject/ui-storybook';
-import { GradientOverlayImage } from '@apollosproject/ui-kit';
-
-import LandingScreen from './LandingScreen';
-
-storiesOf('LandingScreen', module)
-  .add('default', () => <LandingScreen />)
-  .add('slideTitle', () => <LandingScreen slideTitle={'Custom title text'} />)
-  .add('description', () => (
-    <LandingScreen description={'Custom description text'} />
-  ))
-  .add('textColor', () => <LandingScreen textColor={'salmon'} />)
-  .add('ImageComponent', () => (
-    <LandingScreen
-      BackgroundComponent={
-        <GradientOverlayImage
-          source={'https://picsum.photos/375/812/?random'}
-        />
-      }
-    />
-  ))
-  .add('Slide props', () => <LandingScreen onPressPrimary={() => {}} />);
diff --git a/apolloschurchapp/src/ui/LandingScreen/LandingScreen.tests.js b/apolloschurchapp/src/ui/LandingScreen/LandingScreen.tests.js
deleted file mode 100644
index 81c6304..0000000
--- a/apolloschurchapp/src/ui/LandingScreen/LandingScreen.tests.js
+++ /dev/null
@@ -1,64 +0,0 @@
-import React from 'react';
-import renderer from 'react-test-renderer';
-import { GradientOverlayImage } from '@apollosproject/ui-kit';
-
-import Providers from '../../Providers';
-
-import LandingScreen from './LandingScreen';
-
-describe('The Onboarding LandingScreen component', () => {
-  it('should render', () => {
-    const tree = renderer.create(
-      <Providers>
-        <LandingScreen />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render a custom title', () => {
-    const tree = renderer.create(
-      <Providers>
-        <LandingScreen slideTitle={'Custom title text'} />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render a custom description', () => {
-    const tree = renderer.create(
-      <Providers>
-        <LandingScreen description={'Custom description text'} />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render with a custom text color', () => {
-    const tree = renderer.create(
-      <Providers>
-        <LandingScreen textColor={'salmon'} />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render with an ImageComponent', () => {
-    const tree = renderer.create(
-      <Providers>
-        <LandingScreen
-          BackgroundComponent={
-            <GradientOverlayImage
-              source={'https://picsum.photos/375/812/?random'}
-            />
-          }
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should pass additional props to Slide', () => {
-    const tree = renderer.create(
-      <Providers>
-        <LandingScreen onPressPrimary={jest.fn()} />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/ui/LandingScreen/index.js b/apolloschurchapp/src/ui/LandingScreen/index.js
deleted file mode 100644
index 58634ce..0000000
--- a/apolloschurchapp/src/ui/LandingScreen/index.js
+++ /dev/null
@@ -1,27 +0,0 @@
-import React from 'react';
-import { StyleSheet } from 'react-native';
-import { styled, ConnectedImage } from '@apollosproject/ui-kit';
-
-import LandingScreen from './LandingScreen';
-
-const FullScreenImage = styled({
-  resizeMode: 'cover',
-  ...StyleSheet.absoluteFill,
-})(ConnectedImage);
-
-const LandingScreenSlide = ({ navigation }) => (
-  <LandingScreen
-    onPressPrimary={() => navigation.push('Auth')}
-    textColor={'white'}
-    BackgroundComponent={
-      <FullScreenImage source={'https://picsum.photos/375/812/?random'} />
-    }
-    primaryNavText={"Let's go!"}
-  />
-);
-
-LandingScreenSlide.navigationOptions = {
-  header: null,
-};
-
-export default LandingScreenSlide;
diff --git a/apolloschurchapp/src/ui/Like/Like.tests.js b/apolloschurchapp/src/ui/Like/Like.tests.js
new file mode 100644
index 0000000..6c9cf26
--- /dev/null
+++ b/apolloschurchapp/src/ui/Like/Like.tests.js
@@ -0,0 +1,38 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import Like from '.';
+
+describe('the Share component', () => {
+  it('should render a Like', () => {
+    const tree = renderer.create(
+      <Providers>
+        <Like
+          itemId={'abc'}
+          sessionId={'123'}
+          isLiked={false}
+          operation={'Like'}
+          toggleLike={(data) => data}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+
+  it('should render a UnLike', () => {
+    const tree = renderer.create(
+      <Providers>
+        <Like
+          itemId={'abc'}
+          sessionId={'123'}
+          isLiked
+          operation={'Unlike'}
+          toggleLike={(data) => data}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/Like/index.js b/apolloschurchapp/src/ui/Like/index.js
new file mode 100644
index 0000000..40c8904
--- /dev/null
+++ b/apolloschurchapp/src/ui/Like/index.js
@@ -0,0 +1,30 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import { compose, pure } from 'recompose';
+import Icon from 'apolloschurchapp/src/ui/Icon';
+import Touchable from 'apolloschurchapp/src/ui/Touchable';
+import { withTheme } from 'apolloschurchapp/src/ui/theme';
+
+const enhance = compose(
+  pure,
+  withTheme()
+);
+
+const Like = enhance(
+  ({ isLiked, toggleLike, itemId, sessionId, operation, theme }) => (
+    <Touchable onPress={() => toggleLike({ itemId, sessionId, operation })}>
+      <Icon
+        name={isLiked ? 'like-solid' : 'like'}
+        fill={theme.colors.secondary}
+      />
+    </Touchable>
+  )
+);
+
+Like.propTypes = {
+  id: PropTypes.string,
+  isLike: PropTypes.bool,
+  toggleLike: PropTypes.func,
+};
+
+export default Like;
diff --git a/apolloschurchapp/src/ui/MediaPlayer/FullscreenControls.js b/apolloschurchapp/src/ui/MediaPlayer/FullscreenControls.js
new file mode 100644
index 0000000..5e86a59
--- /dev/null
+++ b/apolloschurchapp/src/ui/MediaPlayer/FullscreenControls.js
@@ -0,0 +1,259 @@
+import React, { PureComponent } from 'react';
+import PropTypes from 'prop-types';
+import {
+  BackHandler,
+  StyleSheet,
+  Animated,
+  TouchableWithoutFeedback,
+} from 'react-native';
+import { Query, withApollo } from 'react-apollo';
+import LinearGradient from 'react-native-linear-gradient';
+import SafeAreaView from 'react-native-safe-area-view';
+import { get } from 'lodash';
+import { compose } from 'recompose';
+
+import PaddedView from 'apolloschurchapp/src/ui/PaddedView';
+import { withTheme, withThemeMixin } from 'apolloschurchapp/src/ui/theme';
+import styled from 'apolloschurchapp/src/ui/styled';
+import { H4, H6 } from 'apolloschurchapp/src/ui/typography';
+import Icon from 'apolloschurchapp/src/ui/Icon';
+import Touchable from 'apolloschurchapp/src/ui/Touchable';
+
+import Seeker from './Seeker';
+import { getControlState } from './queries';
+import { play, pause, exitFullscreen } from './mutations';
+
+import { ControlsConsumer } from './PlayheadState';
+
+const Background = withTheme(({ theme }) => ({
+  style: StyleSheet.absoluteFill,
+  colors: [
+    theme.colors.darkPrimary,
+    theme.colors.transparent,
+    theme.colors.darkPrimary,
+  ],
+  locations: [0, 0.4, 0.95],
+}))(LinearGradient);
+
+const UpperControl = styled({
+  flexDirection: 'row',
+  justifyContent: 'space-between',
+  alignItems: 'center',
+})(PaddedView);
+
+const LowerControl = styled({
+  position: 'absolute',
+  bottom: 0,
+  left: 0,
+  right: 0,
+})(PaddedView);
+
+const PlayControls = styled(({ theme }) => ({
+  flexDirection: 'row',
+  justifyContent: 'space-around',
+  alignItems: 'center',
+  paddingBottom: theme.sizing.baseUnit * 1.5,
+}))(PaddedView);
+
+const PlayHead = styled({ paddingVertical: 0 })(PaddedView);
+
+const Titles = styled({
+  alignItems: 'center',
+  paddingVertical: 0,
+})(PaddedView);
+
+const Title = styled({ textAlign: 'center' })(H4);
+const Artist = styled({ textAlign: 'center' })(H6);
+
+const IconSm = withTheme(({ theme, disabled }) => ({
+  size: theme.sizing.baseUnit,
+  opacity: disabled ? 0.5 : 1,
+}))(Icon);
+
+const IconMd = withTheme(({ theme, disabled }) => ({
+  size: theme.sizing.baseUnit * 1.5,
+  opacity: disabled ? 0.5 : 1,
+}))(Icon);
+
+const IconLg = withTheme(({ theme, disabled }) => ({
+  size: theme.sizing.baseUnit * 2.5,
+  opacity: disabled ? 0.5 : 1,
+}))(Icon);
+
+/**
+ * FullscreenControls displays fading player controls
+ */
+class FullscreenControls extends PureComponent {
+  static propTypes = {
+    client: PropTypes.shape({
+      mutate: PropTypes.func,
+    }),
+  };
+
+  state = {};
+
+  fader = new Animated.Value(1);
+
+  controlsVisible = true;
+
+  wasFullscreen = false;
+
+  open = Animated.spring(this.fader, {
+    toValue: 1,
+    useNativeDriver: true,
+  });
+
+  close = Animated.spring(this.fader, {
+    toValue: 0,
+    useNativeDriver: true,
+  });
+
+  constructor(...args) {
+    super(...args);
+    this.fader.addListener(({ value }) => {
+      this.controlsVisible = value > 0.05;
+    });
+  }
+
+  componentDidMount() {
+    this.backHandler = BackHandler.addEventListener('hardwareBackPress', () => {
+      if (this.wasFullscreen) {
+        this.handleClose();
+        return true;
+      }
+      return false;
+    });
+  }
+
+  componentWillUnmount() {
+    this.backHandler.remove();
+    if (this.closeTimeout) clearTimeout(this.closeTimeout);
+  }
+
+  handleOnScrubbing = ({ isScrubbing }) => {
+    this.setState({ isScrubbing });
+  };
+
+  handleClose = () => {
+    this.props.client.mutate({ mutation: exitFullscreen });
+  };
+
+  handlePlay = () => {
+    this.props.client.mutate({ mutation: play });
+  };
+
+  handlePause = () => {
+    this.props.client.mutate({ mutation: pause });
+  };
+
+  handleControlVisibility = () => {
+    if (this.closeTimeout) clearTimeout(this.closeTimeout);
+    this.open.stop();
+    this.close.stop();
+
+    if (
+      !this.state.isScrubbing &&
+      this.isVideo &&
+      this.isPlaying &&
+      this.wasFullscreen &&
+      (!this.animatingClosed && this.controlsVisible)
+    ) {
+      this.animatingClosed = true;
+      this.close.start(() => {
+        this.animatingClosed = false;
+      });
+    } else {
+      this.open.start(() => {
+        if (this.isVideo && this.isPlaying) this.queueClose();
+      });
+    }
+  };
+
+  queueClose = () => {
+    this.closeTimeout = setTimeout(this.handleControlVisibility, 5000);
+  };
+
+  renderSkipForward = ({ skip }) => (
+    <Touchable onPress={() => skip(30)}>
+      <IconMd name="skip-next" />
+    </Touchable>
+  );
+
+  renderSkipBack = ({ skip }) => (
+    <Touchable onPress={() => skip(-30)}>
+      <IconMd name="skip-previous" />
+    </Touchable>
+  );
+
+  renderFullscreenControls = ({ data: { mediaPlayer = {} } = {} }) => {
+    this.isVideo = get(mediaPlayer, 'currentTrack.isVideo');
+    this.isPlaying = mediaPlayer.isPlaying;
+
+    if (
+      (mediaPlayer.isFullscreen && !this.wasFullscreen) ||
+      !this.isVideo ||
+      (!this.isPlaying || (this.isPlaying && !this.wasPlaying))
+    )
+      this.handleControlVisibility();
+
+    this.wasFullscreen = mediaPlayer.isFullscreen;
+    this.wasPlaying = mediaPlayer.isPlaying;
+
+    return (
+      <TouchableWithoutFeedback onPress={this.handleControlVisibility}>
+        <Animated.View
+          style={[StyleSheet.absoluteFill, { opacity: this.fader }]}
+        >
+          <Background>
+            <SafeAreaView
+              style={StyleSheet.absoluteFill}
+              forceInset={{ top: 'always', bottom: 'always' }}
+            >
+              <Touchable onPress={this.handleClose}>
+                <UpperControl>
+                  <IconSm name="arrow-down" />
+                  <Titles>
+                    <Title>{get(mediaPlayer, 'currentTrack.title')}</Title>
+                    <Artist>{get(mediaPlayer, 'currentTrack.artist')}</Artist>
+                  </Titles>
+                  <IconSm name="empty" />
+                </UpperControl>
+              </Touchable>
+              <LowerControl>
+                <PlayHead>
+                  <Seeker onScrubbing={this.handleOnScrubbing} />
+                </PlayHead>
+                <PlayControls>
+                  <IconSm disabled name="shuffle" />
+                  <ControlsConsumer>{this.renderSkipBack}</ControlsConsumer>
+                  {mediaPlayer.isPlaying ? (
+                    <Touchable onPress={this.handlePause}>
+                      <IconLg name="pause" />
+                    </Touchable>
+                  ) : (
+                    <Touchable onPress={this.handlePlay}>
+                      <IconLg name="play" />
+                    </Touchable>
+                  )}
+                  <ControlsConsumer>{this.renderSkipForward}</ControlsConsumer>
+                  <IconSm disabled name="repeat" />
+                </PlayControls>
+              </LowerControl>
+            </SafeAreaView>
+          </Background>
+        </Animated.View>
+      </TouchableWithoutFeedback>
+    );
+  };
+
+  render() {
+    return (
+      <Query query={getControlState}>{this.renderFullscreenControls}</Query>
+    );
+  }
+}
+
+export default compose(
+  withApollo,
+  withThemeMixin({ type: 'dark' })
+)(FullscreenControls);
diff --git a/apolloschurchapp/src/ui/MediaPlayer/FullscreenPlayer.js b/apolloschurchapp/src/ui/MediaPlayer/FullscreenPlayer.js
new file mode 100644
index 0000000..feac512
--- /dev/null
+++ b/apolloschurchapp/src/ui/MediaPlayer/FullscreenPlayer.js
@@ -0,0 +1,236 @@
+import React, { PureComponent } from 'react';
+import {
+  Animated,
+  View,
+  StyleSheet,
+  Dimensions,
+  PanResponder,
+  Platform,
+} from 'react-native';
+import PropTypes from 'prop-types';
+import { Query, withApollo } from 'react-apollo';
+import { get } from 'lodash';
+import DeviceInfo from 'react-native-device-info';
+
+import styled from 'apolloschurchapp/src/ui/styled';
+
+import MiniControls, { MINI_PLAYER_HEIGHT } from './MiniControls';
+import FullscreenControls from './FullscreenControls';
+import VideoWindow from './VideoWindow';
+import MusicControls from './MusicControls';
+import { getFullVisibilityState } from './queries';
+import { exitFullscreen, goFullscreen } from './mutations';
+import { Provider, ControlsConsumer } from './PlayheadState';
+
+const VideoSizer = styled(
+  ({ isFullscreen, isVideo, theme }) =>
+    isFullscreen
+      ? StyleSheet.absoluteFill
+      : {
+          height: MINI_PLAYER_HEIGHT,
+          borderTopLeftRadius: theme.sizing.borderRadius,
+          borderBottomLeftRadius: theme.sizing.borderRadius,
+          overflow: 'hidden',
+          aspectRatio: isVideo ? 16 / 9 : 1,
+        }
+)(View);
+
+const isPhoneX = DeviceInfo.getModel() === 'iPhone X';
+const BOTTOM_OFFSET = isPhoneX ? 25 : 10; // Some devices need more "spacing" at the bottom of the screen. This helps account for that
+
+/**
+ * FullscreenPlayer is a animating media player that transitions between
+ * a mini state and a full screen state.
+ * It is capable of playing any type of media that react-native-video supports.
+ * It reads from local graphql state, and so you must use graphql mutations to play tracks.
+ */
+class FullscreenPlayer extends PureComponent {
+  static propTypes = {
+    client: PropTypes.shape({ mutate: PropTypes.func }),
+  };
+
+  // Tracks the fullscreen animation
+  fullscreen = new Animated.Value(0);
+
+  // Tracks the measured height of the minicontrols. Used in other derived styles
+  miniControlHeight = new Animated.Value(MINI_PLAYER_HEIGHT);
+
+  // Tracks the measured height of the fullscreen cover. Used in other derived styles
+  coverHeight = new Animated.Value(Dimensions.get('window').height);
+
+  // Tracks the amount you drag the window
+  dragOffset = new Animated.Value(0);
+
+  fullScreenWithOffset = Animated.add(this.fullscreen, this.dragOffset);
+
+  // Self-invoking function because we end up with just one massic derived animated value that can be stored
+  coverTranslateY = (() => {
+    const translateYWhenCollapsed = Animated.subtract(
+      this.coverHeight,
+      this.miniControlHeight
+    );
+
+    const translateYSlope = Animated.multiply(
+      translateYWhenCollapsed,
+      Animated.multiply(this.fullScreenWithOffset, -1)
+    );
+
+    const translateY = Animated.add(translateYSlope, translateYWhenCollapsed);
+    return translateY;
+  })();
+
+  miniControlsTranslateY = (() => {
+    const translateYWhenExpanded = Animated.subtract(
+      this.coverHeight,
+      this.miniControlHeight
+    );
+    const translateYSlope = Animated.multiply(
+      translateYWhenExpanded,
+      Animated.multiply(this.fullScreenWithOffset, -1)
+    );
+    return translateYSlope;
+  })();
+
+  coverStyle = [
+    StyleSheet.absoluteFill,
+    {
+      transform: [{ translateY: this.coverTranslateY }],
+    },
+  ];
+
+  miniControlsAnimation = {
+    opacity: this.fullScreenWithOffset.interpolate({
+      inputRange: [0, 0.1],
+      outputRange: [1, 0],
+    }),
+  };
+
+  fullscreenControlsAnimation = [
+    StyleSheet.absoluteFill,
+    {
+      opacity: this.fullScreenWithOffset.interpolate({
+        inputRange: [0, 0.1],
+        outputRange: [0, 1],
+      }),
+    },
+  ];
+
+  panResponder = PanResponder.create({
+    onMoveShouldSetPanResponder: (event, { dx, dy }) =>
+      Math.abs(dy) > Math.abs(dx) && Math.abs(dy) > 10, // set pan responder only when we move enough in the Y-axis
+
+    onPanResponderMove: (event, { dy }) => {
+      // Calculate the amount you've offsetted the cover
+      const dragOffset = Math.min(0, -dy / Dimensions.get('window').height);
+      this.dragOffset.setValue(dragOffset);
+    },
+
+    onPanResponderRelease: (event, { dy, vy }) => {
+      const { height } = Dimensions.get('window');
+      const gestureVelocity = vy;
+      const gestureDistance = Math.abs(dy);
+
+      // Determine whether to continue the animation and exit fullscreen,
+      // or stay full screen and reset back up
+      let mutation = goFullscreen;
+      if (Math.abs(gestureVelocity > 0.5)) {
+        if (gestureVelocity > 0) {
+          mutation = exitFullscreen;
+        }
+      } else if (gestureDistance >= height / 2) {
+        mutation = exitFullscreen;
+      }
+
+      const dragOffset = Math.min(0, -dy / Dimensions.get('window').height);
+
+      if (mutation === goFullscreen) {
+        Animated.spring(this.dragOffset, {
+          toValue: 0,
+          useNativeDriver: true,
+        }).start();
+      } else {
+        this.dragOffset.setValue(0);
+        this.fullscreen.setValue(dragOffset);
+      }
+
+      this.props.client.mutate({ mutation });
+    },
+  });
+
+  handleCoverLayout = Animated.event([
+    { nativeEvent: { layout: { height: this.coverHeight } } },
+  ]);
+
+  handleMiniControlLayout = Animated.event([
+    { nativeEvent: { layout: { height: this.miniControlHeight } } },
+  ]);
+
+  renderCover = ({ data: { mediaPlayer = {} } = {} }) => {
+    const { isFullscreen = false } = mediaPlayer;
+
+    const fullscreenStyles = {
+      margin: isFullscreen ? 0 : 10,
+      marginBottom: isFullscreen ? 0 : BOTTOM_OFFSET,
+    };
+
+    Animated.spring(this.fullscreen, {
+      toValue: isFullscreen ? 1 : 0,
+      useNativeDriver: true,
+      bounciness: 4,
+    }).start();
+
+    const coverFlow = [
+      <Animated.View
+        key="cover"
+        onLayout={this.handleCoverLayout}
+        style={StyleSheet.absoluteFill}
+        {...(Platform.OS !== 'android' && isFullscreen
+          ? this.panResponder.panHandlers
+          : {})}
+      >
+        <VideoSizer
+          isFullscreen={isFullscreen}
+          isVideo={get(mediaPlayer, 'currentTrack.isVideo')}
+        >
+          <ControlsConsumer>
+            {(controlHandlers) => <VideoWindow {...controlHandlers} />}
+          </ControlsConsumer>
+        </VideoSizer>
+        <Animated.View style={this.fullscreenControlsAnimation}>
+          <FullscreenControls />
+        </Animated.View>
+      </Animated.View>,
+      <MusicControls key="music-controls" />,
+    ];
+
+    if (!isFullscreen) {
+      coverFlow.push(
+        <Animated.View
+          key="mini-controls"
+          style={this.miniControlsAnimation}
+          onLayout={this.handleMiniControlLayout}
+        >
+          <MiniControls />
+        </Animated.View>
+      );
+    }
+
+    return (
+      <Animated.View style={[this.coverStyle, fullscreenStyles]}>
+        {coverFlow}
+      </Animated.View>
+    );
+  };
+
+  render() {
+    return (
+      <Provider>
+        <Query query={getFullVisibilityState}>{this.renderCover}</Query>
+      </Provider>
+    );
+  }
+}
+
+const FullscreenPlayerWithData = withApollo(FullscreenPlayer);
+
+export { FullscreenPlayerWithData as default, BOTTOM_OFFSET };
diff --git a/apolloschurchapp/src/ui/MediaPlayer/FullscreenPlayer.stories.js b/apolloschurchapp/src/ui/MediaPlayer/FullscreenPlayer.stories.js
new file mode 100644
index 0000000..869d9c2
--- /dev/null
+++ b/apolloschurchapp/src/ui/MediaPlayer/FullscreenPlayer.stories.js
@@ -0,0 +1,79 @@
+import React from 'react';
+import { storiesOf } from '@storybook/react-native';
+import { Mutation } from 'react-apollo';
+
+import { ButtonLink } from 'apolloschurchapp/src/ui/Button';
+import CenteredView from 'apolloschurchapp/src/ui/CenteredView';
+import BackgroundView from 'apolloschurchapp/src/ui/BackgroundView';
+import FlexedView from 'apolloschurchapp/src/ui/FlexedView';
+
+import { playVideoMutation } from './mutations';
+import MediaPlayer from '.';
+
+storiesOf('MediaPlayer', module).add('simple', () => (
+  <BackgroundView>
+    <FlexedView>
+      <CenteredView>
+        <Mutation mutation={playVideoMutation}>
+          {(play) => (
+            <ButtonLink
+              onPress={() =>
+                play({
+                  variables: {
+                    mediaSource: {
+                      uri:
+                        'http://embed.wistia.com/deliveries/0e364f7e6f6604384ece8a35905a53a864386e9f.bin',
+                      __typename: 'VideoMediaSource',
+                    },
+                    posterSources: [
+                      {
+                        uri:
+                          'https://apollosrock.newspring.cc/GetImage.ashx?guid=28ea9e81-09b4-411f-8ad5-741054837823',
+                        __typename: 'ImageMediaSource',
+                      },
+                    ],
+                    title: 'Holy Spirit',
+                    artist: 'Fuse Promos',
+                    isVideo: true,
+                  },
+                })
+              }
+            >
+              Play video
+            </ButtonLink>
+          )}
+        </Mutation>
+        <Mutation mutation={playVideoMutation}>
+          {(play) => (
+            <ButtonLink
+              onPress={() =>
+                play({
+                  variables: {
+                    mediaSource: {
+                      uri:
+                        'https://s3.amazonaws.com/ns.downloads/newspring/audio/newspring_sermons/2017/180513_HolySpirit_06-Message-AUDIO.mp3',
+                      __typename: 'AudioMediaSource',
+                    },
+                    posterSources: [
+                      {
+                        uri:
+                          'https://apollosrock.newspring.cc/GetImage.ashx?guid=28ea9e81-09b4-411f-8ad5-741054837823',
+                        __typename: 'ImageMediaSource',
+                      },
+                    ],
+                    title: 'The Greatest Evangelist',
+                    artist: 'Sermon',
+                    isVideo: false,
+                  },
+                })
+              }
+            >
+              Play audio
+            </ButtonLink>
+          )}
+        </Mutation>
+      </CenteredView>
+    </FlexedView>
+    <MediaPlayer />
+  </BackgroundView>
+));
diff --git a/apolloschurchapp/src/ui/MediaPlayer/FullscreenPlayer.tests.js b/apolloschurchapp/src/ui/MediaPlayer/FullscreenPlayer.tests.js
new file mode 100644
index 0000000..6fb0aa5
--- /dev/null
+++ b/apolloschurchapp/src/ui/MediaPlayer/FullscreenPlayer.tests.js
@@ -0,0 +1,108 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import { client } from 'apolloschurchapp/src/client';
+import Providers from 'apolloschurchapp/src/Providers';
+
+import FullscreenPlayer from './FullscreenPlayer';
+
+describe('the FullscreenPlayer component', () => {
+  it('should render miniplayer with video', async () => {
+    client.cache.writeData({
+      data: {
+        mediaPlayer: {
+          __typename: 'MediaPlayerState',
+          currentTrack: {
+            __typename: 'MediaPlayerTrack',
+            id: 1,
+            mediaSource: { uri: 'some-source' },
+            posterSources: [{ uri: 'some-poster-source' }],
+            title: 'Some Title',
+            artist: 'some artist',
+            isVideo: true,
+          },
+          isVisible: true,
+          isFullscreen: false,
+          isPlaying: true,
+          progress: {
+            __typename: 'MediaPlayerProgress',
+            currentTime: 12,
+            duration: 56,
+          },
+        },
+      },
+    });
+    const tree = renderer.create(
+      <Providers>
+        <FullscreenPlayer />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+
+  it('should render miniplayer with audio', async () => {
+    client.cache.writeData({
+      data: {
+        mediaPlayer: {
+          __typename: 'MediaPlayerState',
+          currentTrack: {
+            __typename: 'MediaPlayerTrack',
+            id: 1,
+            mediaSource: { uri: 'some-source' },
+            posterSources: [{ uri: 'some-poster-source' }],
+            title: 'Some Title',
+            artist: 'some artist',
+            isVideo: false,
+          },
+          isVisible: true,
+          isFullscreen: false,
+          isPlaying: true,
+          progress: {
+            __typename: 'MediaPlayerProgress',
+            currentTime: 12,
+            duration: 56,
+          },
+        },
+      },
+    });
+    const tree = renderer.create(
+      <Providers>
+        <FullscreenPlayer />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+
+  it('should render fullscreen', async () => {
+    client.cache.writeData({
+      data: {
+        mediaPlayer: {
+          __typename: 'MediaPlayerState',
+          currentTrack: {
+            __typename: 'MediaPlayerTrack',
+            id: 1,
+            mediaSource: { uri: 'some-source' },
+            posterSources: [{ uri: 'some-poster-source' }],
+            title: 'Some Title',
+            artist: 'some artist',
+            isVideo: false,
+          },
+          isVisible: true,
+          isFullscreen: true,
+          isPlaying: true,
+          progress: {
+            __typename: 'MediaPlayerProgress',
+            currentTime: 12,
+            duration: 56,
+          },
+        },
+      },
+    });
+    const tree = renderer.create(
+      <Providers>
+        <FullscreenPlayer />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/MediaPlayer/MiniControls.js b/apolloschurchapp/src/ui/MediaPlayer/MiniControls.js
new file mode 100644
index 0000000..e6a4662
--- /dev/null
+++ b/apolloschurchapp/src/ui/MediaPlayer/MiniControls.js
@@ -0,0 +1,191 @@
+import React, { Component } from 'react';
+import { Platform, View, Animated, StyleSheet } from 'react-native';
+import { Mutation, Query } from 'react-apollo';
+
+import styled from 'apolloschurchapp/src/ui/styled';
+import Touchable from 'apolloschurchapp/src/ui/Touchable';
+import { H5, H6 } from 'apolloschurchapp/src/ui/typography';
+import Icon from 'apolloschurchapp/src/ui/Icon';
+import { withTheme } from 'apolloschurchapp/src/ui/theme';
+
+import Seeker from './Seeker';
+
+import { getControlState } from './queries';
+
+import {
+  goFullscreen as goFullscreenMutation,
+  dismiss as dismissMutation,
+  play as playMutation,
+  pause as pauseMutation,
+} from './mutations';
+
+const MINI_PLAYER_HEIGHT = 50;
+
+const DismissBackground = styled(({ theme }) => ({
+  ...StyleSheet.absoluteFillObject,
+  alignItems: 'center',
+  justifyContent: 'center',
+  backgroundColor: theme.colors.white,
+}))(View);
+
+const TrackInfoTouchable = styled({
+  flex: 1,
+})(Touchable);
+
+const TrackInfoTouchableBackground = styled(({ theme }) => ({
+  backgroundColor: theme.colors.white,
+  flex: 1,
+}))(View);
+
+const TrackInfo = styled(({ theme }) => ({
+  paddingHorizontal: theme.sizing.baseUnit / 2,
+  height: '100%',
+  justifyContent: 'center',
+  width: '100%',
+}))(View);
+
+const TrackName = styled(({ theme }) => ({
+  height: theme.sizing.baseUnit,
+  overflow: 'hidden',
+}))(H5);
+
+const TrackArtist = styled(({ theme }) => ({
+  height: theme.sizing.baseUnit,
+  marginTop: theme.helpers.rem(-0.15625),
+  color: theme.colors.text.tertiary,
+  // overflow: 'hidden',
+}))(H6);
+
+const Container = styled(({ theme }) => ({
+  height: MINI_PLAYER_HEIGHT,
+  flexDirection: 'row',
+  justifyContent: 'flex-start',
+  overflow: 'hidden',
+  borderRadius: theme.sizing.borderRadius,
+}))(View);
+
+const Shadow = styled(({ theme }) => ({
+  borderRadius: theme.sizing.borderRadius,
+  ...Platform.select(theme.shadows.default),
+}))(View);
+
+// ThumbnailSpacer is used to offset the text in MiniPlayer to make room for the video/music
+// thumbnail in a way that is dynamic to the MINI_PLAYER_HEIGHT
+const ThumbnailSpacer = styled(({ isVideo }) => ({
+  height: MINI_PLAYER_HEIGHT,
+  aspectRatio: isVideo ? 16 / 9 : 1,
+}))(View);
+
+const Controls = styled(({ theme }) => ({
+  position: 'absolute',
+  right: 0,
+  bottom: 0,
+  top: -1,
+  paddingHorizontal: theme.sizing.baseUnit / 2,
+  flexDirection: 'row',
+  justifyContent: 'flex-end',
+  alignItems: 'center',
+}))(View);
+
+const MiniSeeker = styled({
+  position: 'absolute',
+  left: 0,
+  right: 0,
+  bottom: 0,
+})(Seeker);
+
+const StyledIcon = withTheme(({ theme }) => ({
+  fill: theme.colors.darkTertiary,
+  size: theme.sizing.baseUnit * 1.25,
+}))(Icon);
+
+/**
+ * The MiniControls renders basic track info and a play/pause button.
+ * Also displays a close button to close the player when the track is paused.
+ */
+class MiniControls extends Component {
+  dismissAnimator = new Animated.Value(0);
+
+  shouldComponentUpdate() {
+    return false;
+  }
+
+  renderMiniControls = ({
+    data: {
+      mediaPlayer: {
+        currentTrack: { title, artist, isVideo } = {},
+        isPlaying = false,
+      } = {},
+    } = {},
+  }) => {
+    Animated.spring(this.dismissAnimator, {
+      toValue: isPlaying ? 0 : 0.8,
+      overshootClamping: true,
+      useNativeDriver: true,
+    }).start();
+    return (
+      <Mutation mutation={goFullscreenMutation}>
+        {(goFullscreen) => (
+          <Shadow>
+            <Container>
+              <Mutation mutation={dismissMutation}>
+                {(dismiss) => (
+                  <Touchable
+                    onPress={() => (isPlaying ? goFullscreen() : dismiss())}
+                  >
+                    <ThumbnailSpacer isVideo={isVideo}>
+                      <Animated.View
+                        style={[
+                          StyleSheet.absoluteFill,
+                          { opacity: this.dismissAnimator },
+                        ]}
+                      >
+                        <DismissBackground>
+                          <StyledIcon name="close" />
+                        </DismissBackground>
+                      </Animated.View>
+                    </ThumbnailSpacer>
+                  </Touchable>
+                )}
+              </Mutation>
+              <TrackInfoTouchableBackground>
+                <TrackInfoTouchable onPress={() => goFullscreen()}>
+                  <TrackInfo>
+                    <TrackName>{title}</TrackName>
+                    <TrackArtist>{artist}</TrackArtist>
+                  </TrackInfo>
+                </TrackInfoTouchable>
+              </TrackInfoTouchableBackground>
+              <Controls>
+                {isPlaying ? (
+                  <Mutation mutation={pauseMutation}>
+                    {(pause) => (
+                      <Touchable onPress={() => pause()}>
+                        <StyledIcon name="pause" />
+                      </Touchable>
+                    )}
+                  </Mutation>
+                ) : (
+                  <Mutation mutation={playMutation}>
+                    {(play) => (
+                      <Touchable onPress={() => play()}>
+                        <StyledIcon name="play" />
+                      </Touchable>
+                    )}
+                  </Mutation>
+                )}
+              </Controls>
+              <MiniSeeker minimal />
+            </Container>
+          </Shadow>
+        )}
+      </Mutation>
+    );
+  };
+
+  render() {
+    return <Query query={getControlState}>{this.renderMiniControls}</Query>;
+  }
+}
+
+export { MiniControls as default, MINI_PLAYER_HEIGHT };
diff --git a/apolloschurchapp/src/ui/MediaPlayer/MusicControls.js b/apolloschurchapp/src/ui/MediaPlayer/MusicControls.js
new file mode 100644
index 0000000..677c364
--- /dev/null
+++ b/apolloschurchapp/src/ui/MediaPlayer/MusicControls.js
@@ -0,0 +1,178 @@
+import PropTypes from 'prop-types';
+import React, { Component } from 'react';
+import { Animated, Platform } from 'react-native';
+import MusicControl from 'react-native-music-control';
+import { withApollo, Query } from 'react-apollo';
+import { throttle, get } from 'lodash';
+
+import { PlayheadConsumer, ControlsConsumer } from './PlayheadState';
+import { getMusicControlState } from './queries';
+import { play, pause, updatePlayhead } from './mutations';
+
+class MusicControls extends Component {
+  static propTypes = {
+    currentTrack: PropTypes.shape({}),
+    currentTime: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
+    currentTimeAnimated: PropTypes.instanceOf(Animated.Value),
+    isPlaying: PropTypes.bool,
+    duration: PropTypes.number,
+    skip: PropTypes.func,
+    client: PropTypes.shape({ mutate: PropTypes.func }),
+  };
+
+  constructor(...args) {
+    super(...args);
+    // iOS is the only platform that displays currentTime and Android is notorious bad at handling
+    // the JS thread.
+    if (Platform.OS === 'ios') this.currentTimeSubscription();
+  }
+
+  componentDidUpdate(oldProps) {
+    if (this.props.duration > 1 && oldProps.duration !== this.props.duration) {
+      this.configureMusicControl();
+    }
+    if (this.props.currentTimeAnimated !== oldProps.currentTimeAnimated) {
+      if (this.listener) {
+        oldProps.currentTimeAnimated.removeListener(this.listener);
+      }
+      if (Platform.OS === 'ios') this.currentTimeSubscription();
+    }
+
+    if (
+      oldProps.currentTime !== this.props.currentTime ||
+      oldProps.isPlaying !== this.props.isPlaying
+    ) {
+      this.updatePlayback();
+    }
+  }
+
+  componentWillUnmount() {
+    MusicControl.enableBackgroundMode(false);
+    MusicControl.stopControl();
+    if (this.listener)
+      this.props.currentTimeAnimated.removeListener(this.listener);
+  }
+
+  currentTimeSubscription = () => {
+    this.listener = this.props.currentTimeAnimated.addListener(
+      throttle(({ value }) => {
+        MusicControl.updatePlayback({
+          state: this.props.isPlaying
+            ? MusicControl.STATE_PLAYING
+            : MusicControl.STATE_PAUSED,
+          elapsedTime: value,
+        });
+      }, 1000)
+    );
+  };
+
+  configureMusicControl = () => {
+    // Initialize MusicControl settings
+    MusicControl.enableBackgroundMode(true);
+
+    // Play
+    MusicControl.enableControl('play', true);
+    MusicControl.on('play', this.handleOnPlay);
+
+    // Pause/Stop
+    MusicControl.enableControl('pause', true);
+    MusicControl.enableControl('stop', false);
+    MusicControl.on('pause', this.handleOnPause);
+    MusicControl.on('stop', this.handleOnPause);
+
+    // Skip
+    MusicControl.enableControl('previousTrack', false);
+    MusicControl.enableControl('nextTrack', false);
+
+    // Seeking
+    if (this.props.skip) {
+      MusicControl.enableControl('skipForward', true);
+      MusicControl.enableControl('skipBackward', true);
+      MusicControl.on('skipForward', this.handleOnFastForward);
+      MusicControl.on('skipBackward', this.handleOnRewind);
+    }
+
+    // Scrubber
+    MusicControl.enableControl('seek', true); // Android
+    MusicControl.enableControl('changePlaybackPosition', true); // iOS
+    MusicControl.on('seek', this.handleOnSeek);
+    MusicControl.on('changePlaybackPosition', this.handleOnSeek);
+
+    // Remote (headphones) play/pause
+    MusicControl.enableControl('togglePlayPause', true);
+    MusicControl.on(
+      'togglePlayPause',
+      () => (this.props.isPlaying ? this.handleOnPause() : this.handleOnPlay())
+    );
+
+    // Remote (headphones) fast forward/rewind (iOS only) (disabled)
+    MusicControl.enableControl('seekForward', false);
+    MusicControl.enableControl('seekBackward', false);
+
+    // Swipe to dismiss native control (Android only)
+    MusicControl.enableControl('closeNotification', true, { when: 'paused' });
+
+    // Configure the visuals
+    const { currentTrack = {} } = this.props;
+    MusicControl.setNowPlaying({
+      title: currentTrack.title,
+      artist: currentTrack.artist,
+      artwork: get(currentTrack, 'posterSources[0].uri'),
+      elapsedTime: this.props.currentTime,
+      duration: this.props.duration,
+    });
+  };
+
+  updatePlayback = () => {
+    MusicControl.updatePlayback({
+      state: this.props.isPlaying
+        ? MusicControl.STATE_PLAYING
+        : MusicControl.STATE_PAUSED,
+      elapsedTime: this.props.currentTime,
+    });
+  };
+
+  handleOnPlay = () => this.props.client.mutate({ mutation: play });
+
+  handleOnPause = () => this.props.client.mutate({ mutation: pause });
+
+  handleOnFastForward = () => this.props.skip(15);
+
+  handleOnRewind = () => this.props.skip(-15);
+
+  handleOnSeek = (seekTo) =>
+    this.props.client.mutate({
+      mutation: updatePlayhead,
+      variables: {
+        currentTime: seekTo,
+      },
+    });
+
+  render() {
+    return null;
+  }
+}
+
+const MusicControlsState = (props) => (
+  <Query query={getMusicControlState}>
+    {({ data: { mediaPlayer = {} } = {} }) => (
+      <PlayheadConsumer>
+        {({ duration, currentTime }) => (
+          <ControlsConsumer>
+            {({ skip }) => (
+              <MusicControls
+                {...props}
+                currentTimeAnimated={currentTime}
+                duration={duration}
+                skip={skip}
+                {...mediaPlayer}
+              />
+            )}
+          </ControlsConsumer>
+        )}
+      </PlayheadConsumer>
+    )}
+  </Query>
+);
+
+export default withApollo(MusicControlsState);
diff --git a/apolloschurchapp/src/ui/MediaPlayer/PlayheadState.js b/apolloschurchapp/src/ui/MediaPlayer/PlayheadState.js
new file mode 100644
index 0000000..0d5b33d
--- /dev/null
+++ b/apolloschurchapp/src/ui/MediaPlayer/PlayheadState.js
@@ -0,0 +1,110 @@
+import React, { createContext, Component } from 'react';
+import { Animated } from 'react-native';
+import { Query, withApollo } from 'react-apollo';
+import PropTypes from 'prop-types';
+
+import { getMediaPlayerIsPlaying } from './queries';
+import { updatePlayhead } from './mutations';
+
+const defaultState = {
+  duration: 1,
+  currentTime: new Animated.Value(0),
+  playableDuration: new Animated.Value(1),
+  seekableDuration: new Animated.Value(1),
+};
+
+const controlState = () => {};
+
+const PlayheadContext = createContext(defaultState);
+
+const PlayheadControls = createContext(controlState);
+
+class ProviderWithoutApollo extends Component {
+  static propTypes = {
+    client: PropTypes.shape({
+      mutate: PropTypes.func,
+    }),
+  };
+
+  state = defaultState;
+
+  get controlState() {
+    return {
+      onLoad: this.handleOnLoad,
+      onProgress: this.handleOnProgress,
+      skip: this.skip,
+    };
+  }
+
+  handleOnLoad = ({ duration }) => {
+    this.setState({ duration });
+    this.state.currentTime.setValue(0);
+    this.state.playableDuration.setValue(0);
+    this.state.seekableDuration.setValue(0);
+  };
+
+  handleOnProgress = ({ currentTime, playableDuration, seekableDuration }) => {
+    if (!this.seekingTo || Math.abs(this.seekingTo - currentTime) < 1) {
+      // when seeking, only update `currentTime` after the seek has finished
+      this.seekingTo = null;
+      this.lastCurrentTime = currentTime;
+      this.state.currentTime.setValue(currentTime);
+    }
+    this.state.playableDuration.setValue(playableDuration);
+    this.state.seekableDuration.setValue(seekableDuration);
+  };
+
+  handlePause = () => {
+    this.props.client.mutate({
+      mutation: updatePlayhead,
+      variables: {
+        currentTime: this.lastCurrentTime,
+      },
+    });
+  };
+
+  skip = async (secondsToSkip) => {
+    const currentTime = Math.min(
+      Math.max(this.lastCurrentTime + secondsToSkip, 0),
+      this.state.duration
+    );
+
+    await this.props.client.mutate({
+      mutation: updatePlayhead,
+      variables: {
+        currentTime,
+      },
+    });
+
+    this.seekingTo = currentTime;
+    this.state.currentTime.setValue(currentTime); // immediately set the playhead value so progress bar doesn't jump around
+  };
+
+  renderProviders = ({
+    data: { mediaPlayer: { isPlaying = false } = {} } = {},
+  }) => {
+    if (!isPlaying && this.wasPlaying) {
+      this.handlePause();
+    }
+    this.wasPlaying = isPlaying;
+
+    return (
+      <PlayheadControls.Provider value={this.controlState}>
+        <PlayheadContext.Provider value={this.state} {...this.props} />
+      </PlayheadControls.Provider>
+    );
+  };
+
+  render() {
+    return (
+      <Query query={getMediaPlayerIsPlaying}>{this.renderProviders}</Query>
+    );
+  }
+}
+
+const Provider = withApollo(ProviderWithoutApollo);
+
+const { Consumer: PlayheadConsumer } = PlayheadContext;
+const { Consumer: ControlsConsumer } = PlayheadControls;
+
+export { Provider, PlayheadConsumer, ControlsConsumer };
diff --git a/apolloschurchapp/src/ui/MediaPlayer/Seeker/Timestamp.js b/apolloschurchapp/src/ui/MediaPlayer/Seeker/Timestamp.js
new file mode 100644
index 0000000..8b6de0b
--- /dev/null
+++ b/apolloschurchapp/src/ui/MediaPlayer/Seeker/Timestamp.js
@@ -0,0 +1,98 @@
+import React, { PureComponent } from 'react';
+import { Animated } from 'react-native';
+import PropTypes from 'prop-types';
+
+import { H6 } from 'apolloschurchapp/src/ui/typography';
+import styled from 'apolloschurchapp/src/ui/styled';
+
+const TIME_TEXT_WIDTH = 50;
+
+const TimeText = styled({
+  width: TIME_TEXT_WIDTH,
+  textAlign: 'center',
+  alignItems: 'center',
+})(H6);
+
+/**
+ * Displays a MM:SS formatted timestamp from either a number or Animate.Value in seconds
+ */
+class Timestamp extends PureComponent {
+  static propTypes = {
+    time: PropTypes.oneOfType([
+      PropTypes.number,
+      PropTypes.instanceOf(Animated.Value),
+    ]),
+    offset: PropTypes.instanceOf(Animated.Value),
+  };
+
+  state = {
+    time: 0,
+    offset: 0,
+  };
+
+  constructor(props) {
+    super(props);
+    if (typeof props.time === 'number') {
+      this.state.time = props.time;
+    } else {
+      this.listen(props);
+    }
+  }
+
+  componentWillUpdate(newProps) {
+    if (
+      newProps.time !== this.props.time ||
+      newProps.offset !== this.props.offset
+    ) {
+      this.listen(newProps);
+    }
+  }
+
+  listen = ({ time = 0, offset = 0 }) => {
+    if (this.listener) this.props.time.removeListener(this.listener);
+    if (this.offsetListener) {
+      this.props.offset.removeListener(this.offsetListener);
+    }
+
+    if (!time.addListener) {
+      this.setState({ time });
+    } else {
+      this.listener = time.addListener(({ value }) =>
+        this.setState({ time: value })
+      );
+    }
+
+    if (!offset.addListener) {
+      this.setState({ offset });
+    } else if (offset) {
+      this.offsetListener = offset.addListener(({ value }) =>
+        this.setState({ offset: value })
+      );
+    }
+  };
+
+  timestamp = (time) => {
+    // Hours, minutes and seconds
+    const hrs = Math.floor(time / 3600);
+    const mins = Math.floor((time % 3600) / 60);
+    const secs = time % 60;
+
+    let timestamp = '';
+
+    if (hrs > 0) {
+      timestamp += `${hrs}:${mins < 10 ? '0' : ''}`;
+    }
+
+    timestamp += `${mins}:${secs < 10 ? '0' : ''}`;
+    timestamp += `${Math.round(secs)}`;
+    return timestamp;
+  };
+
+  render() {
+    return (
+      <TimeText>{this.timestamp(this.state.time + this.state.offset)}</TimeText>
+    );
+  }
+}
+
+export { Timestamp as default, TIME_TEXT_WIDTH };
diff --git a/apolloschurchapp/src/ui/MediaPlayer/Seeker/index.js b/apolloschurchapp/src/ui/MediaPlayer/Seeker/index.js
new file mode 100644
index 0000000..3aa9674
--- /dev/null
+++ b/apolloschurchapp/src/ui/MediaPlayer/Seeker/index.js
@@ -0,0 +1,220 @@
+import React, { PureComponent } from 'react';
+import { PanResponder, Animated, View, StyleSheet } from 'react-native';
+import PropTypes from 'prop-types';
+
+import styled from 'apolloschurchapp/src/ui/styled';
+
+import { PlayheadConsumer, ControlsConsumer } from '../PlayheadState';
+import Timestamp, { TIME_TEXT_WIDTH } from './Timestamp';
+
+const Container = styled({
+  width: '100%',
+  flexDirection: 'row',
+  justifyContent: 'space-between',
+  alignItems: 'center',
+})(View);
+
+const Track = styled(({ theme, minimal }) => ({
+  backgroundColor: minimal
+    ? theme.colors.transparent
+    : theme.colors.darkSecondary,
+  borderRadius: minimal ? 0 : theme.sizing.borderRadius,
+  overflow: 'hidden',
+  position: 'absolute',
+  left: 0,
+  right: 0,
+  top: 0,
+  bottom: 0,
+}))(View);
+
+const TrackContainer = styled(({ theme, minimal }) => ({
+  position: 'absolute',
+  left: minimal ? 0 : TIME_TEXT_WIDTH,
+  right: minimal ? 0 : TIME_TEXT_WIDTH,
+  height: theme.sizing.borderRadius,
+}))(View);
+
+const Knob = styled(({ theme, minimal }) => {
+  const size = minimal ? 0 : theme.sizing.borderRadius * 2;
+  return {
+    backgroundColor: theme.colors.text.primary,
+    borderRadius: size,
+    position: 'absolute',
+    top: -(size / 2) + theme.sizing.borderRadius / 2,
+    right: -(size / 2),
+    height: size,
+    width: size,
+    elevation: 2,
+  };
+})(View);
+
+const ProgressBar = styled(({ theme }) => ({
+  backgroundColor: theme.colors.secondary,
+  ...StyleSheet.absoluteFillObject,
+}))(View);
+
+/**
+ * Animated Seeker component.
+ * Depends on `PlayheadState`, so you don't pass it any props directly,
+ * but must be rendered within a `<MediaPlayer/>` component
+ */
+class Seeker extends PureComponent {
+  static propTypes = {
+    minimal: PropTypes.bool, // The only prop you need to pass - switches to a minimal version (line instead of bar)
+    currentTime: PropTypes.any, // eslint-disable-line
+    duration: PropTypes.any, // eslint-disable-line
+    style: PropTypes.any, // eslint-disable-line
+    onScrubbing: PropTypes.func,
+  };
+
+  state = {
+    width: 0, // the width of the seeker bar
+    isSeeking: false,
+    timeAtSeekingStart: 0,
+  };
+
+  offsetDriver = new Animated.Value(0); // Used to track pixel offset when seeking
+
+  offsetTimeDriver = new Animated.Value(0); // Used to track time offset when seeking
+
+  panResponder = PanResponder.create({
+    onStartShouldSetPanResponder: () => true,
+    onPanResponderGrant: () => {
+      // Using `stopAnimation` only to get the currentTime value
+      this.props.currentTime.stopAnimation((value) => {
+        this.setState({
+          isSeeking: true,
+          timeAtSeekingStart: value,
+        });
+      });
+    },
+    onPanResponderMove: (e, { dx }) => {
+      // Calculate the pixel offset and apply it to the offsetDriver
+      let offset = dx;
+      const progressAtStart =
+        this.state.timeAtSeekingStart / this.props.duration;
+      const positionAtStart = progressAtStart * this.state.width;
+      offset = Math.min(this.state.width - positionAtStart, offset);
+      offset = Math.max(-positionAtStart, offset);
+      this.offsetDriver.setValue(offset);
+
+      // Calculate the time offset and apply it to the offsetTimeDriver
+      const moveAmount = offset / this.state.width;
+      const moveAmountInTime = moveAmount * this.props.duration;
+      this.offsetTimeDriver.setValue(moveAmountInTime);
+
+      if (this.props.onScrubbing) this.props.onScrubbing({ isScrubbing: true });
+    },
+    onPanResponderRelease: async (e, { dx }) => {
+      // Calculate the amount in time we've moved, and skip that duration
+      const moveAmount = dx / this.state.width;
+      const moveAmountInTime = moveAmount * this.props.duration;
+      await this.props.skip(moveAmountInTime);
+
+      // Reset state
+      this.offsetDriver.setValue(0);
+      this.offsetTimeDriver.setValue(0);
+      this.setState({
+        isSeeking: false,
+        timeAtSeekingStart: 0,
+      });
+
+      if (this.props.onScrubbing)
+        this.props.onScrubbing({ isScrubbing: false });
+    },
+  });
+
+  // Calculate the real offset position of the colored track bar
+  // To be able to useNativeDriver, the trackbar is always the full-width, and we animate its X position
+  get trackBarOffset() {
+    const progress = Animated.divide(
+      this.state.isSeeking
+        ? this.state.timeAtSeekingStart
+        : this.props.currentTime,
+      this.props.duration
+    );
+
+    const progressInvert = Animated.subtract(1, progress);
+    const widthInvert = Animated.multiply(-1, this.state.width);
+    const position = Animated.multiply(progressInvert, widthInvert);
+    return Animated.add(position, this.offsetDriver);
+  }
+
+  // the "knob" is on top of the trackbar, the piece of UI you can grab and move around
+  get knobStyles() {
+    return [
+      StyleSheet.absoluteFill,
+      {
+        overflow: 'visible',
+        transform: [{ translateX: this.trackBarOffset }],
+      },
+    ];
+  }
+
+  get progressBarStyles() {
+    return [
+      StyleSheet.absoluteFill,
+      {
+        transform: [{ translateX: this.trackBarOffset }],
+      },
+    ];
+  }
+
+  handleOnLayout = ({
+    nativeEvent: {
+      layout: { width },
+    },
+  }) => {
+    this.setState({ width });
+  };
+
+  renderProgress = () => (
+    <Animated.View
+      style={[
+        StyleSheet.absoluteFill,
+        {
+          transform: [{ translateX: this.trackBarOffset }],
+        },
+      ]}
+    >
+      <ProgressBar />
+    </Animated.View>
+  );
+
+  render() {
+    return (
+      <Container style={this.props.style}>
+        {!this.props.minimal ? (
+          <Timestamp
+            time={this.props.currentTime}
+            offset={this.offsetTimeDriver}
+          />
+        ) : null}
+        <TrackContainer minimal={this.props.minimal}>
+          <Track onLayout={this.handleOnLayout} minimal={this.props.minimal}>
+            {this.renderProgress()}
+          </Track>
+          <Animated.View style={this.knobStyles}>
+            <Knob
+              minimal={this.props.minimal}
+              {...this.panResponder.panHandlers}
+            />
+          </Animated.View>
+        </TrackContainer>
+        {!this.props.minimal ? <Timestamp time={this.props.duration} /> : null}
+      </Container>
+    );
+  }
+}
+
+const SeekerWithState = (props) => (
+  <ControlsConsumer>
+    {(controls) => (
+      <PlayheadConsumer>
+        {(playhead) => <Seeker {...props} {...playhead} {...controls} />}
+      </PlayheadConsumer>
+    )}
+  </ControlsConsumer>
+);
+
+export default SeekerWithState;
diff --git a/apolloschurchapp/src/ui/MediaPlayer/VideoWindow.js b/apolloschurchapp/src/ui/MediaPlayer/VideoWindow.js
new file mode 100644
index 0000000..b93ccb1
--- /dev/null
+++ b/apolloschurchapp/src/ui/MediaPlayer/VideoWindow.js
@@ -0,0 +1,135 @@
+import React, { PureComponent } from 'react';
+import PropTypes from 'prop-types';
+import { Query, withApollo } from 'react-apollo';
+import { get } from 'lodash';
+import Video from 'react-native-video';
+import { Animated, View, StyleSheet } from 'react-native';
+
+import styled from 'apolloschurchapp/src/ui/styled';
+import ActivityIndicator from 'apolloschurchapp/src/ui/ActivityIndicator';
+
+import { getVideoState } from './queries';
+import { pause as pauseMutation, pauseAndRestart } from './mutations';
+
+const styles = StyleSheet.create({
+  animatedPosterImage: {
+    ...StyleSheet.absoluteFillObject,
+    resizeMode: 'cover',
+  },
+});
+
+const Background = styled(({ theme }) => ({
+  ...StyleSheet.absoluteFillObject,
+  backgroundColor: theme.colors.black,
+}))(View);
+
+/**
+ * The VideoWindow displays the actual react-native-video component.
+ * It's responsible for loading the video, and updating progress + duration in state.
+ */
+class VideoWindow extends PureComponent {
+  static propTypes = {
+    client: PropTypes.shape({
+      mutate: PropTypes.func,
+    }),
+    onProgress: PropTypes.func,
+    onLoad: PropTypes.func,
+  };
+
+  loadingOverlay = new Animated.Value(1);
+
+  loadingStyle = [StyleSheet.absoluteFill, { opacity: this.loadingOverlay }];
+
+  handleOnEnd = async () => {
+    this.props.client.mutate({ mutation: pauseAndRestart });
+  };
+
+  handlePause = () => {
+    this.props.client.mutate({ mutation: pauseMutation });
+  };
+
+  handleOnProgress = (progress) => {
+    if (this.props.onProgress) this.props.onProgress(progress);
+  };
+
+  handleOnError = () => {
+    this.handlePause();
+  };
+
+  handleOnLoad = ({ duration }) => {
+    Animated.spring(this.loadingOverlay, {
+      toValue: 0,
+      useNativeDriver: true,
+    }).start();
+
+    if (this.props.onLoad) this.props.onLoad({ duration });
+  };
+
+  handleOnLoadStart = () => {
+    Animated.spring(this.loadingOverlay, {
+      toValue: 1,
+      useNativeDriver: true,
+    });
+  };
+
+  setVideoRef = (element) => {
+    this.video = element;
+  };
+
+  renderVideo = ({ data: { mediaPlayer = {} } = {} }) => {
+    if (!get(mediaPlayer, 'currentTrack.mediaSource')) return null;
+
+    const { currentTime } = mediaPlayer;
+    if (currentTime && currentTime !== this.lastCurrentTime && this.video) {
+      this.video.seek(currentTime);
+    }
+
+    this.lastCurrentTime = currentTime;
+
+    return [
+      <Video
+        ref={this.setVideoRef}
+        source={mediaPlayer.currentTrack.mediaSource}
+        paused={!mediaPlayer.isPlaying}
+        audioOnly={!mediaPlayer.currentTrack.isVideo}
+        ignoreSilentSwitch={'ignore'}
+        allowsExternalPlayback
+        playInBackground
+        playWhenInactive
+        onAudioBecomingNoisy={this.handlePause}
+        onEnd={this.handleOnEnd}
+        onError={this.handleOnError}
+        resizeMode={'contain'}
+        onLoadStart={this.handleOnLoadStart}
+        onLoad={this.handleOnLoad}
+        onProgress={this.handleOnProgress}
+        style={StyleSheet.absoluteFill}
+        repeat
+        key="video"
+      />,
+      // there's currently a bug on android where react-native-video's poster doesn't ever go away
+      // So we use our own image copmonent...which is nicer cuz we can show a nice fading animation too!
+      <Animated.Image
+        key="poster"
+        style={[
+          styles.animatedPosterImage,
+          mediaPlayer.currentTrack.isVideo ? this.loadingStyle : {},
+        ]}
+        source={mediaPlayer.currentTrack.posterSources}
+      />,
+    ];
+  };
+
+  render() {
+    return (
+      <Background>
+        <Query query={getVideoState}>{this.renderVideo}</Query>
+        <Animated.View style={this.loadingStyle}>
+          <ActivityIndicator />
+        </Animated.View>
+      </Background>
+    );
+  }
+}
+
+export default withApollo(VideoWindow);
diff --git a/apolloschurchapp/src/ui/MediaPlayer/index.js b/apolloschurchapp/src/ui/MediaPlayer/index.js
new file mode 100644
index 0000000..8b6b8a6
--- /dev/null
+++ b/apolloschurchapp/src/ui/MediaPlayer/index.js
@@ -0,0 +1,28 @@
+import React, { Component } from 'react';
+import { Query } from 'react-apollo';
+
+import FullscreenPlayer from './FullscreenPlayer';
+
+import { getMediaPlayerVisibility } from './queries';
+
+export { MINI_PLAYER_HEIGHT } from './MiniControls';
+
+/**
+ * Selectively renders FullscreenPlayer component is MediaPlayer is visible
+ */
+class MediaPlayer extends Component {
+  shouldComponentUpdate() {
+    return false; // 🚀
+  }
+
+  renderPlayer = ({ data = {} }) => {
+    if (!data.mediaPlayer || !data.mediaPlayer.isVisible) return null;
+    return <FullscreenPlayer />;
+  };
+
+  render() {
+    return <Query query={getMediaPlayerVisibility}>{this.renderPlayer}</Query>;
+  }
+}
+
+export default MediaPlayer;
diff --git a/apolloschurchapp/src/ui/MediaPlayer/mutations.js b/apolloschurchapp/src/ui/MediaPlayer/mutations.js
new file mode 100644
index 0000000..95a0ae8
--- /dev/null
+++ b/apolloschurchapp/src/ui/MediaPlayer/mutations.js
@@ -0,0 +1,73 @@
+import gql from 'graphql-tag';
+
+const playVideoMutation = gql`
+  mutation playVideo(
+    $mediaSource: String!
+    $posterSources: String
+    $title: String
+    $artist: String
+    $isVideo: Boolean
+  ) {
+    mediaPlayerPlayNow(
+      mediaSource: $mediaSource
+      posterSources: $posterSources
+      title: $title
+      artist: $artist
+      isVideo: $isVideo
+    ) @client
+  }
+`;
+
+const goFullscreen = gql`
+  mutation {
+    mediaPlayerUpdateState(isFullscreen: true) @client
+  }
+`;
+
+const play = gql`
+  mutation {
+    mediaPlayerUpdateState(isPlaying: true) @client
+  }
+`;
+
+const pause = gql`
+  mutation {
+    mediaPlayerUpdateState(isPlaying: false) @client
+  }
+`;
+
+const dismiss = gql`
+  mutation {
+    mediaPlayerUpdateState(isPlaying: false, isVisible: false) @client
+  }
+`;
+
+const pauseAndRestart = gql`
+  mutation pause {
+    mediaPlayerUpdateState(isPlaying: false) @client
+    mediaPlayerSetPlayhead(currentTime: 0) @client
+  }
+`;
+
+const exitFullscreen = gql`
+  mutation {
+    mediaPlayerUpdateState(isFullscreen: false) @client
+  }
+`;
+
+const updatePlayhead = gql`
+  mutation mediaPlayerSetPlayhead($currentTime: Float) {
+    mediaPlayerSetPlayhead(currentTime: $currentTime) @client
+  }
+`;
+
+export {
+  pauseAndRestart,
+  playVideoMutation,
+  goFullscreen,
+  play,
+  pause,
+  dismiss,
+  exitFullscreen,
+  updatePlayhead,
+};
diff --git a/apolloschurchapp/src/ui/MediaPlayer/queries.js b/apolloschurchapp/src/ui/MediaPlayer/queries.js
new file mode 100644
index 0000000..83290f5
--- /dev/null
+++ b/apolloschurchapp/src/ui/MediaPlayer/queries.js
@@ -0,0 +1,122 @@
+import gql from 'graphql-tag';
+
+const getMediaPlayerVisibility = gql`
+  query mediaPlayerVisibility {
+    mediaPlayer @client {
+      isVisible
+    }
+  }
+`;
+
+const getMediaPlayerIsPlaying = gql`
+  query mediaPlayerVisibility {
+    mediaPlayer @client {
+      isPlaying
+    }
+  }
+`;
+
+const getFullVisibilityState = gql`
+  query fullVisibilityState {
+    mediaPlayer @client {
+      currentTrack {
+        isVideo
+      }
+      isVisible
+      isFullscreen
+    }
+  }
+`;
+
+const getControlState = gql`
+  query {
+    mediaPlayer @client {
+      isFullscreen
+      isPlaying
+      currentTrack {
+        id
+        title
+        artist
+        isVideo
+      }
+    }
+  }
+`;
+
+const getVideoState = gql`
+  query mediaPlayer {
+    mediaPlayer @client {
+      currentTrack {
+        mediaSource {
+          uri
+        }
+        posterSources {
+          uri
+        }
+        id
+        isVideo
+      }
+      currentTime
+      isPlaying
+    }
+  }
+`;
+
+const getMusicControlState = gql`
+  query musicControlState {
+    mediaPlayer @client {
+      currentTrack {
+        posterSources {
+          uri
+        }
+        title
+        artist
+      }
+      currentTime
+      isPlaying
+    }
+  }
+`;
+
+const getElapsedTime = gql`
+  query {
+    mediaPlayer @client {
+      progress {
+        currentTime
+      }
+    }
+  }
+`;
+
+const getProgress = gql`
+  query {
+    mediaPlayer @client {
+      progress {
+        currentTime
+        duration
+      }
+    }
+  }
+`;
+
+const getTotalTime = gql`
+  query {
+    mediaPlayer @client {
+      progress {
+        duration
+      }
+    }
+  }
+`;
+
+export {
+  getMediaPlayerIsPlaying,
+  getMediaPlayerVisibility,
+  getMusicControlState,
+  getFullVisibilityState,
+  getControlState,
+  getVideoState,
+  getElapsedTime,
+  getProgress,
+  getTotalTime,
+};
diff --git a/apolloschurchapp/src/ui/MediaQuery/MediaQuery.js b/apolloschurchapp/src/ui/MediaQuery/MediaQuery.js
new file mode 100644
index 0000000..10557b3
--- /dev/null
+++ b/apolloschurchapp/src/ui/MediaQuery/MediaQuery.js
@@ -0,0 +1,67 @@
+import { Component } from 'react';
+import PropTypes from 'prop-types';
+import { get, every } from 'lodash';
+import { pick, mapValues, flow } from 'lodash/fp';
+import { compose } from 'recompose';
+
+import { withTheme } from 'apolloschurchapp/src/ui/theme';
+
+import withWindow from './withWindow';
+import queryMatcher from './queryMatcher';
+
+const supportedMediaQueryTypes = {
+  minWidth: PropTypes.string,
+  maxWidth: PropTypes.string,
+  minHeight: PropTypes.string,
+  maxHeight: PropTypes.string,
+  minDeviceAspectRatio: PropTypes.string,
+  maxDeviceAspectRatio: PropTypes.string,
+};
+
+// <MediaQuery maxWidth="md" minWidth="sm">I render on screens sm to md</MediaQuery>
+// <MediaQuery maxWidth="xs">I render only on xs screens</MediaQuery>
+// <MediaQuery minWidth="md">I render on screens md or above</MediaQuery>
+class MediaQuery extends Component {
+  static propTypes = {
+    ...supportedMediaQueryTypes,
+    children: PropTypes.node,
+
+    // These props are passed in through HOCs (withTheme and withWindow)
+    breakpoints: PropTypes.shape({
+      xs: PropTypes.number,
+      sm: PropTypes.number,
+      md: PropTypes.number,
+      lg: PropTypes.number,
+    }),
+    window: PropTypes.shape({
+      width: PropTypes.number,
+      height: PropTypes.number,
+    }).isRequired,
+  };
+
+  static defaultProps = {
+    ...mapValues(supportedMediaQueryTypes, () => null),
+    breakpoints: {},
+  };
+
+  get shouldBeVisible() {
+    const mediaQuery = flow(
+      pick(Object.keys(supportedMediaQueryTypes)),
+      mapValues((breakpoint) => get(this.props.breakpoints, breakpoint))
+    )(this.props);
+
+    const {
+      window: { width, height },
+    } = this.props; // destructuring just to make below line clean
+    return every(mediaQuery, queryMatcher({ width, height }));
+  }
+
+  render() {
+    return this.shouldBeVisible ? this.props.children : null;
+  }
+}
+
+export default compose(
+  withTheme(({ theme: { breakpoints } = {} } = {}) => ({ breakpoints })),
+  withWindow
+)(MediaQuery);
diff --git a/apolloschurchapp/src/ui/MediaQuery/enhancer.js b/apolloschurchapp/src/ui/MediaQuery/enhancer.js
new file mode 100644
index 0000000..617a1f4
--- /dev/null
+++ b/apolloschurchapp/src/ui/MediaQuery/enhancer.js
@@ -0,0 +1,42 @@
+import { branch, compose, mapProps } from 'recompose';
+import { every } from 'lodash';
+
+import { withTheme } from 'apolloschurchapp/src/ui/theme';
+
+import withWindow from './withWindow';
+import queryMatcher from './queryMatcher';
+
+// Make it easy to do breakpoint-based component branching, a-la recompose's branch method.
+// The "test" function should return an object that mirrors what you'd do in a css mediaQuery:
+// import { enhancer as mediaQuery } from 'MediaQuery';
+// mediaQuery(
+//   ({ xs, lg }) => ({ minWidth: xs, maxWidth: lg }),
+//   HigherOrderComponent,
+//   ?HigherOrderComponent
+// ): HigherOrderComponent
+const enhancer = (getMediaQuery, ...args) =>
+  compose(
+    withTheme(({ theme: { breakpoints = {} } = {} }) => ({ breakpoints })),
+    withWindow,
+    branch(({ breakpoints, window: { width, height }, ...ownProps }) => {
+      const mediaQuery = getMediaQuery(
+        { ...breakpoints, width, height },
+        ownProps
+      );
+
+      // We should only interpret `mediaQuery` if we have an object.
+      // This allows the function you pass in to utilize more complex query logic, like:
+      // mediaQuery(({ sm, lg, width }) => width < sm || width > lg, styles)
+      // mediaQuery(({ sm }, ownProps) => ownProps.size < sm, styles)
+      if (typeof mediaQuery !== 'object') {
+        return mediaQuery;
+      }
+
+      return every(mediaQuery, queryMatcher({ width, height }));
+    }, ...args),
+
+    // clean up props
+    mapProps(({ breakpoints, window, ...ownProps }) => ownProps)
+  );
+
+export default enhancer;
diff --git a/apolloschurchapp/src/ui/MediaQuery/enhancer.tests.js b/apolloschurchapp/src/ui/MediaQuery/enhancer.tests.js
new file mode 100644
index 0000000..9438e27
--- /dev/null
+++ b/apolloschurchapp/src/ui/MediaQuery/enhancer.tests.js
@@ -0,0 +1,163 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+import { View, Dimensions } from 'react-native';
+
+import Providers from 'apolloschurchapp/src/Providers';
+import { breakpoints as defaultBreakPoints } from 'apolloschurchapp/src/ui/theme/defaultTheme';
+
+import enhancer from './enhancer';
+
+const TestHOC = (mock) => (Component) => {
+  mock();
+  return Component;
+};
+
+const mediaQueryThatPasses = () => true;
+const mediaQueryThatFails = () => false;
+
+describe('The mediaQuery enhancer', () => {
+  it('uses the first HOC (and renders the root View) with a passing media query', () => {
+    const firstMock = jest.fn();
+    const secondMock = jest.fn();
+
+    const Component = enhancer(
+      mediaQueryThatPasses,
+      TestHOC(firstMock),
+      TestHOC(secondMock)
+    )(View);
+    const tree = renderer.create(
+      <Providers>
+        <Component />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+    expect(firstMock.mock.calls.length).toBe(1);
+    expect(secondMock.mock.calls.length).toBe(0);
+  });
+  it('uses the second HOC (and renders the root View) with a failing media query', () => {
+    const firstMock = jest.fn();
+    const secondMock = jest.fn();
+
+    const Component = enhancer(
+      mediaQueryThatFails,
+      TestHOC(firstMock),
+      TestHOC(secondMock)
+    )(View);
+    const tree = renderer.create(
+      <Providers>
+        <Component />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+    expect(firstMock.mock.calls.length).toBe(0);
+    expect(secondMock.mock.calls.length).toBe(1);
+  });
+
+  const testWindow = Dimensions.get('window');
+  it('works with a simple media query', () => {
+    const firstMock = jest.fn();
+
+    const Component = enhancer(
+      () => ({ maxWidth: testWindow.width + 1 }),
+      TestHOC(firstMock)
+    )(View);
+
+    const tree = renderer.create(
+      <Providers>
+        <Component />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+    expect(firstMock.mock.calls.length).toBe(1);
+  });
+
+  it('works with a complex media query', () => {
+    const firstMock = jest.fn();
+
+    const Component = enhancer(
+      () => ({
+        maxWidth: testWindow.width + 1,
+        minWidth: testWindow.width - 1,
+        maxHeight: testWindow.height + 1,
+        minHeight: testWindow.height - 1,
+        minDeviceAspectRatio: testWindow.width / testWindow.height - 1,
+        maxDeviceAspectRatio: testWindow.width / testWindow.height + 1,
+      }),
+      TestHOC(firstMock)
+    )(View);
+
+    const tree = renderer.create(
+      <Providers>
+        <Component />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+    expect(firstMock.mock.calls.length).toBe(1);
+  });
+
+  it('uses second HOC when provided with a complex media query that doesnt match', () => {
+    const firstMock = jest.fn();
+    const secondMock = jest.fn();
+
+    const Component = enhancer(
+      () => ({
+        maxWidth: testWindow.width - 1,
+        minWidth: testWindow.width + 1,
+        maxHeight: testWindow.height - 1,
+        minHeight: testWindow.height + 1,
+        minDeviceAspectRatio: testWindow.width / testWindow.height + 1,
+        maxDeviceAspectRatio: testWindow.width / testWindow.height - 1,
+      }),
+      TestHOC(firstMock),
+      TestHOC(secondMock)
+    )(View);
+
+    const tree = renderer.create(
+      <Providers>
+        <Component />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+    expect(firstMock.mock.calls.length).toBe(0);
+    expect(secondMock.mock.calls.length).toBe(1);
+  });
+
+  it('passes in breakpoints to the test function', () => {
+    const firstMock = jest.fn();
+
+    const testFunction = ({ height, width, ...breakpoints }) => {
+      expect(breakpoints).toEqual(defaultBreakPoints);
+      return true;
+    };
+
+    const Component = enhancer(testFunction, TestHOC(firstMock))(View);
+
+    const tree = renderer.create(
+      <Providers>
+        <Component />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+    expect(firstMock.mock.calls.length).toBe(1);
+  });
+
+  it('passes in window width and height to the test function', () => {
+    const firstMock = jest.fn();
+
+    const testFunction = ({ height, width }) => {
+      expect(width).toBeGreaterThan(0);
+      expect(height).toBeGreaterThan(0);
+      return true;
+    };
+
+    const Component = enhancer(testFunction, TestHOC(firstMock))(View);
+
+    const tree = renderer.create(
+      <Providers>
+        <Component />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+    expect(firstMock.mock.calls.length).toBe(1);
+  });
+});
diff --git a/apolloschurchapp/src/ui/MediaQuery/index.js b/apolloschurchapp/src/ui/MediaQuery/index.js
new file mode 100644
index 0000000..c38c7f0
--- /dev/null
+++ b/apolloschurchapp/src/ui/MediaQuery/index.js
@@ -0,0 +1,3 @@
+export { default as enhancer } from './enhancer';
+export { default as withWindow } from './withWindow';
+export { default } from './MediaQuery';
diff --git a/apolloschurchapp/src/ui/MediaQuery/queryMatcher.js b/apolloschurchapp/src/ui/MediaQuery/queryMatcher.js
new file mode 100644
index 0000000..25e95c3
--- /dev/null
+++ b/apolloschurchapp/src/ui/MediaQuery/queryMatcher.js
@@ -0,0 +1,20 @@
+const queryMatcher = ({ width, height }) => (selector, query) => {
+  switch (query) {
+    case 'maxWidth':
+      return width < selector;
+    case 'minWidth':
+      return width > selector;
+    case 'maxHeight':
+      return height < selector;
+    case 'minHeight':
+      return height > selector;
+    case 'minDeviceAspectRatio':
+      return width / height > selector;
+    case 'maxDeviceAspectRatio':
+      return width / height < selector;
+    default:
+      return true;
+  }
+};
+
+export default queryMatcher;
diff --git a/apolloschurchapp/src/ui/MediaQuery/withWindow.js b/apolloschurchapp/src/ui/MediaQuery/withWindow.js
new file mode 100644
index 0000000..0ee9583
--- /dev/null
+++ b/apolloschurchapp/src/ui/MediaQuery/withWindow.js
@@ -0,0 +1,36 @@
+import React, { PureComponent } from 'react';
+import { Dimensions } from 'react-native';
+
+export default function withWindow(ComponentToWrap) {
+  return class WithWindow extends PureComponent {
+    state = {
+      window: {
+        height: Dimensions.get('window').height,
+        width: Dimensions.get('window').width,
+      },
+    };
+
+    componentWillMount() {
+      Dimensions.addEventListener('change', this.handler);
+    }
+
+    componentWillUnmount() {
+      Dimensions.removeEventListener('change', this.handler);
+    }
+
+    handler = ({ window }) => {
+      if (
+        // detect orientation change
+        window.width === this.state.window.height &&
+        window.height === this.state.window.width
+      ) {
+        return;
+      }
+      this.setState({ window });
+    };
+
+    render() {
+      return <ComponentToWrap {...this.state} {...this.props} />;
+    }
+  };
+}
diff --git a/apolloschurchapp/src/ui/NavigationHeader/index.js b/apolloschurchapp/src/ui/NavigationHeader/index.js
deleted file mode 100644
index 15b9d7b..0000000
--- a/apolloschurchapp/src/ui/NavigationHeader/index.js
+++ /dev/null
@@ -1,25 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-import { ModalViewHeader } from '@apollosproject/ui-kit';
-
-const NavigationHeader = ({ scene, navigation }) => {
-  let onBack = null;
-  if (scene.index > 0) onBack = () => navigation.pop();
-  const onClose = () => {
-    navigation.goBack();
-  };
-
-  return <ModalViewHeader onClose={onClose} onBack={onBack} navigationHeader />;
-};
-
-NavigationHeader.propTypes = {
-  scene: PropTypes.shape({
-    index: PropTypes.number,
-  }),
-  navigation: PropTypes.shape({
-    pop: PropTypes.func,
-    popToTop: PropTypes.func,
-  }),
-};
-
-export default NavigationHeader;
diff --git a/apolloschurchapp/src/ui/Onboarding/Onboarding.stories.js b/apolloschurchapp/src/ui/Onboarding/Onboarding.stories.js
deleted file mode 100644
index bf81552..0000000
--- a/apolloschurchapp/src/ui/Onboarding/Onboarding.stories.js
+++ /dev/null
@@ -1,5 +0,0 @@
-import React from 'react';
-import { storiesOf } from '@apollosproject/ui-storybook';
-import Onboarding from '.';
-
-storiesOf('Onboarding', module).add('full', () => <Onboarding />);
diff --git a/apolloschurchapp/src/ui/Onboarding/index.js b/apolloschurchapp/src/ui/Onboarding/index.js
deleted file mode 100644
index 7ba75e6..0000000
--- a/apolloschurchapp/src/ui/Onboarding/index.js
+++ /dev/null
@@ -1,120 +0,0 @@
-import React from 'react';
-import { Query } from 'react-apollo';
-import {
-  checkNotifications,
-  openSettings,
-  requestNotifications,
-  RESULTS,
-} from 'react-native-permissions';
-import {
-  GradientOverlayImage,
-  styled,
-  BackgroundView,
-  NavigationService,
-} from '@apollosproject/ui-kit';
-import {
-  AskNotificationsConnected,
-  AskNameConnected,
-  FeaturesConnected,
-  AboutYouConnected,
-  LocationFinderConnected,
-  OnboardingSwiper,
-  onboardingComplete,
-  WITH_USER_ID,
-} from '@apollosproject/ui-onboarding';
-
-const FullscreenBackgroundView = styled({
-  position: 'absolute',
-  width: '100%',
-  height: '100%',
-})(BackgroundView);
-
-const StyledGradient = styled({
-  maxHeight: '40%',
-})(GradientOverlayImage);
-
-function Onboarding({ navigation }) {
-  return (
-    <>
-      <FullscreenBackgroundView />
-      <OnboardingSwiper>
-        {({ swipeForward }) => (
-          <>
-            <AskNameConnected onPressPrimary={swipeForward} />
-            <FeaturesConnected
-              onPressPrimary={swipeForward}
-              BackgroundComponent={
-                <StyledGradient
-                  source={'https://picsum.photos/640/640/?random'}
-                />
-              }
-            />
-            <AboutYouConnected
-              onPressPrimary={swipeForward}
-              BackgroundComponent={
-                <StyledGradient
-                  source={'https://picsum.photos/640/640/?random'}
-                />
-              }
-            />
-            <LocationFinderConnected
-              onPressPrimary={swipeForward}
-              onNavigate={() => {
-                navigation.navigate('Location');
-              }}
-              BackgroundComponent={
-                <StyledGradient
-                  source={'https://picsum.photos/640/640/?random'}
-                />
-              }
-            />
-            <Query query={WITH_USER_ID} fetchPolicy="network-only">
-              {({
-                data: { currentUser: { id } = { currentUser: { id: null } } },
-              }) => (
-                <AskNotificationsConnected
-                  onPressPrimary={() => {
-                    onboardingComplete({ userId: id });
-                    navigation.dispatch(
-                      NavigationService.resetAction({
-                        navigatorName: 'Tabs',
-                        routeName: 'Home',
-                      })
-                    );
-                  }}
-                  onRequestPushPermissions={(update) => {
-                    checkNotifications().then((checkRes) => {
-                      if (checkRes.status === RESULTS.DENIED) {
-                        requestNotifications(['alert', 'badge', 'sound']).then(
-                          () => {
-                            update();
-                          }
-                        );
-                      } else {
-                        openSettings();
-                      }
-                    });
-                  }}
-                  primaryNavText={'Finish'}
-                  BackgroundComponent={
-                    <StyledGradient
-                      source={'http://picsum.photos/640/640/?random'}
-                    />
-                  }
-                />
-              )}
-            </Query>
-          </>
-        )}
-      </OnboardingSwiper>
-    </>
-  );
-}
-
-Onboarding.navigationOptions = {
-  title: 'Onboarding',
-  header: null,
-  gesturesEnabled: false,
-};
-
-export default Onboarding;
diff --git a/apolloschurchapp/src/ui/PaddedView/PaddedView.stories.js b/apolloschurchapp/src/ui/PaddedView/PaddedView.stories.js
new file mode 100644
index 0000000..c22d2c1
--- /dev/null
+++ b/apolloschurchapp/src/ui/PaddedView/PaddedView.stories.js
@@ -0,0 +1,12 @@
+import React from 'react';
+import { storiesOf } from '@storybook/react-native';
+
+import { H1 } from 'apolloschurchapp/src/ui/typography';
+
+import PaddedView from '.';
+
+storiesOf('PaddedView', module).add('Example', () => (
+  <PaddedView>
+    <H1>This text is in a PaddedView</H1>
+  </PaddedView>
+));
diff --git a/apolloschurchapp/src/ui/PaddedView/PaddedView.tests.js b/apolloschurchapp/src/ui/PaddedView/PaddedView.tests.js
new file mode 100644
index 0000000..3e1f918
--- /dev/null
+++ b/apolloschurchapp/src/ui/PaddedView/PaddedView.tests.js
@@ -0,0 +1,17 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import PaddedView from '.';
+
+describe('the PaddedView component', () => {
+  it('should render', () => {
+    const tree = renderer.create(
+      <Providers>
+        <PaddedView />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/PaddedView/index.js b/apolloschurchapp/src/ui/PaddedView/index.js
new file mode 100644
index 0000000..ea72d31
--- /dev/null
+++ b/apolloschurchapp/src/ui/PaddedView/index.js
@@ -0,0 +1,13 @@
+import { View } from 'react-native';
+
+import styled from 'apolloschurchapp/src/ui/styled';
+
+const PaddedView = styled(
+  ({ theme, horizontal = true, vertical = true }) => ({
+    paddingHorizontal: horizontal ? theme.sizing.baseUnit : 0,
+    paddingVertical: vertical ? theme.sizing.baseUnit : 0,
+  }),
+  'PaddedView'
+)(View);
+
+export default PaddedView;
diff --git a/apolloschurchapp/src/ui/Placeholder/Line.js b/apolloschurchapp/src/ui/Placeholder/Line.js
new file mode 100644
index 0000000..340dabb
--- /dev/null
+++ b/apolloschurchapp/src/ui/Placeholder/Line.js
@@ -0,0 +1,18 @@
+import React from 'react';
+import { View } from 'react-native';
+import Placeholder from 'rn-placeholder';
+
+import styled from 'apolloschurchapp/src/ui/styled';
+
+export const Line = styled(
+  ({ theme, width = '100%' }) => ({
+    borderRadius: theme.sizing.borderRadius,
+    backgroundColor: theme.colors.background.inactive,
+    height: theme.helpers.rem(1),
+    width,
+    alignSelf: 'stretch',
+  }),
+  'Placeholder.Line'
+)(({ style }) => <View style={style} />);
+
+export default Placeholder.connect(Line);
diff --git a/apolloschurchapp/src/ui/Placeholder/Line.tests.js b/apolloschurchapp/src/ui/Placeholder/Line.tests.js
new file mode 100644
index 0000000..598a1b0
--- /dev/null
+++ b/apolloschurchapp/src/ui/Placeholder/Line.tests.js
@@ -0,0 +1,35 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import { Line } from './Line';
+
+describe('The Line placeholder', () => {
+  it('renders correctly', () => {
+    const tree = renderer.create(
+      <Providers>
+        <Line />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('accepts width', () => {
+    const tree = renderer.create(
+      <Providers>
+        <Line width="50%" />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('accepts custom styles', () => {
+    const customStyle = { backgroundColor: 'salmon' };
+
+    const tree = renderer.create(
+      <Providers>
+        <Line width="50%" style={customStyle} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/Placeholder/Media.js b/apolloschurchapp/src/ui/Placeholder/Media.js
new file mode 100644
index 0000000..a702cd3
--- /dev/null
+++ b/apolloschurchapp/src/ui/Placeholder/Media.js
@@ -0,0 +1,17 @@
+import React from 'react';
+import { View } from 'react-native';
+import Placeholder from 'rn-placeholder';
+
+import styled from 'apolloschurchapp/src/ui/styled';
+
+export const Media = styled(
+  ({ borderRadius, theme, size = '100%' }) => ({
+    height: size,
+    width: size,
+    borderRadius: borderRadius || theme.sizing.borderRadius,
+    backgroundColor: theme.colors.background.inactive,
+  }),
+  'Placeholder.Media'
+)(({ style }) => <View style={style} />);
+
+export default Placeholder.connect(Media);
diff --git a/apolloschurchapp/src/ui/Placeholder/Media.tests.js b/apolloschurchapp/src/ui/Placeholder/Media.tests.js
new file mode 100644
index 0000000..adb247d
--- /dev/null
+++ b/apolloschurchapp/src/ui/Placeholder/Media.tests.js
@@ -0,0 +1,35 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import { Media } from './Media';
+
+describe('The Media placeholder', () => {
+  it('renders correctly', () => {
+    const tree = renderer.create(
+      <Providers>
+        <Media />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('accepts size', () => {
+    const tree = renderer.create(
+      <Providers>
+        <Media size="50%" />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('accepts custom styles', () => {
+    const customStyle = { backgroundColor: 'salmon' };
+
+    const tree = renderer.create(
+      <Providers>
+        <Media style={customStyle} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/Placeholder/Paragraph.js b/apolloschurchapp/src/ui/Placeholder/Paragraph.js
new file mode 100644
index 0000000..0fa7695
--- /dev/null
+++ b/apolloschurchapp/src/ui/Placeholder/Paragraph.js
@@ -0,0 +1,47 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import { View } from 'react-native';
+import Placeholder from 'rn-placeholder';
+import { times } from 'lodash';
+
+import styled from 'apolloschurchapp/src/ui/styled';
+
+import { Line } from './Line';
+
+const ParagraphLine = styled(
+  ({ theme }) => ({
+    height: theme.helpers.rem(1),
+    marginVertical:
+      (theme.helpers.verticalRhythm(1, 1.625) - theme.helpers.rem(1)) / 2,
+  }),
+  'Placeholder.Paragraph.line'
+)(Line);
+
+export const Paragraph = ({
+  lineNumber = 3,
+  width = '100%',
+  lastLineWidth = '75%',
+  firstLineWidth = '85%',
+  lineStyle,
+  style,
+}) => (
+  <View style={style}>
+    {times(lineNumber, (i) => {
+      let lineWidth = width;
+      if (i === 0 && firstLineWidth) lineWidth = firstLineWidth;
+      if (i === lineNumber - 1 && lastLineWidth) lineWidth = lastLineWidth;
+      return <ParagraphLine key={i} width={lineWidth} style={lineStyle} />;
+    })}
+  </View>
+);
+
+Paragraph.propTypes = {
+  lineNumber: PropTypes.number,
+  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
+  lastLineWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
+  firstLineWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
+  lineStyle: PropTypes.any, // eslint-disable-line
+  style: PropTypes.any, // eslint-disable-line
+};
+
+export default Placeholder.connect(Paragraph);
diff --git a/apolloschurchapp/src/ui/Placeholder/Paragraph.tests.js b/apolloschurchapp/src/ui/Placeholder/Paragraph.tests.js
new file mode 100644
index 0000000..ab72f64
--- /dev/null
+++ b/apolloschurchapp/src/ui/Placeholder/Paragraph.tests.js
@@ -0,0 +1,53 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import { Paragraph } from './Paragraph';
+
+describe('The Paragraph placeholder', () => {
+  it('renders correctly', () => {
+    const tree = renderer.create(
+      <Providers>
+        <Paragraph />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('renders multiple lines', () => {
+    const tree = renderer.create(
+      <Providers>
+        <Paragraph lineNumber={50} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('has varying width lines', () => {
+    const tree = renderer.create(
+      <Providers>
+        <Paragraph lastLineWidth={33} firstLineWidth={'23%'} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('accepts custom line styles', () => {
+    const customStyle = { height: 33 };
+
+    const tree = renderer.create(
+      <Providers>
+        <Paragraph lineStyle={customStyle} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('accepts custom styles', () => {
+    const customStyle = { backgroundColor: 'salmon' };
+
+    const tree = renderer.create(
+      <Providers>
+        <Paragraph style={customStyle} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/Placeholder/Typography.js b/apolloschurchapp/src/ui/Placeholder/Typography.js
new file mode 100644
index 0000000..0a2934e
--- /dev/null
+++ b/apolloschurchapp/src/ui/Placeholder/Typography.js
@@ -0,0 +1,44 @@
+import { compose, mapProps } from 'recompose';
+import { StyleSheet } from 'react-native';
+import Placeholder from 'rn-placeholder';
+
+import styled from 'apolloschurchapp/src/ui/styled';
+
+import { Line } from './Line';
+
+export const Typography = compose(
+  mapProps(({ style, ...otherProps }) => ({
+    flattenedStyles: StyleSheet.flatten(style),
+    ...otherProps,
+  })),
+  styled(
+    ({
+      flattenedStyles: {
+        fontSize,
+        lineHeight,
+        paddingTop,
+        paddingBottom,
+        paddingVertical,
+      } = {},
+    }) => {
+      const styles = {};
+      if (fontSize && lineHeight) {
+        styles.height = fontSize;
+        styles.marginVertical = (lineHeight - fontSize) / 2;
+      }
+      if (paddingTop) {
+        styles.marginTop = paddingTop;
+      }
+      if (paddingBottom) {
+        styles.marginBottom = paddingBottom;
+      }
+      if (paddingVertical) {
+        styles.marginVertical = paddingVertical;
+      }
+      return styles;
+    },
+    'Placeholder.Typography'
+  )
+)(Line);
+
+export default Placeholder.connect(Typography);
diff --git a/apolloschurchapp/src/ui/Placeholder/Typography.tests.js b/apolloschurchapp/src/ui/Placeholder/Typography.tests.js
new file mode 100644
index 0000000..42aa841
--- /dev/null
+++ b/apolloschurchapp/src/ui/Placeholder/Typography.tests.js
@@ -0,0 +1,27 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import { Typography } from './Typography';
+
+describe('The Typography placeholder', () => {
+  it('renders correctly', () => {
+    const tree = renderer.create(
+      <Providers>
+        <Typography />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('translates type styles', () => {
+    const customTypeStyles = { fontSize: 24, lineHeight: 32 };
+
+    const tree = renderer.create(
+      <Providers>
+        <Typography style={customTypeStyles} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/Placeholder/index.js b/apolloschurchapp/src/ui/Placeholder/index.js
new file mode 100644
index 0000000..82f6577
--- /dev/null
+++ b/apolloschurchapp/src/ui/Placeholder/index.js
@@ -0,0 +1,14 @@
+import Line from './Line';
+import Typography from './Typography';
+import Media from './Media';
+import Paragraph from './Paragraph';
+
+export withPlaceholder from './withPlaceholder';
+export { Line, Typography, Media, Paragraph };
+
+export default {
+  Line,
+  Typography,
+  Media,
+  Paragraph,
+};
diff --git a/apolloschurchapp/src/ui/Placeholder/withPlaceholder.js b/apolloschurchapp/src/ui/Placeholder/withPlaceholder.js
new file mode 100644
index 0000000..6920bd5
--- /dev/null
+++ b/apolloschurchapp/src/ui/Placeholder/withPlaceholder.js
@@ -0,0 +1,20 @@
+import React from 'react';
+
+import { getIsLoading } from 'apolloschurchapp/src/ui/isLoading';
+
+import { Line } from '.';
+
+const withPlaceholder = (PlaceholderComponent = Line, getProps = {}) => (
+  Component
+) =>
+  getIsLoading(({ isLoading = false, style, ...props }) => {
+    const propInput =
+      typeof getProps === 'function' ? getProps(props) : getProps;
+    return (
+      <PlaceholderComponent onReady={!isLoading} style={style} {...propInput}>
+        <Component style={style} {...props} />
+      </PlaceholderComponent>
+    );
+  });
+
+export default withPlaceholder;
diff --git a/apolloschurchapp/src/ui/ProgressiveImage/ProgressiveImage.tests.js b/apolloschurchapp/src/ui/ProgressiveImage/ProgressiveImage.tests.js
new file mode 100644
index 0000000..9f13fc2
--- /dev/null
+++ b/apolloschurchapp/src/ui/ProgressiveImage/ProgressiveImage.tests.js
@@ -0,0 +1,28 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import { ThemeProvider } from 'apolloschurchapp/src/ui/theme';
+
+import ProgressiveImage from '.';
+
+describe('the ProgressiveImage component', () => {
+  it('should render', () => {
+    const tree = renderer.create(
+      <ThemeProvider>
+        <ProgressiveImage
+          source={{
+            uri: 'https://placeholdit.co/i/1500x1500',
+            width: 1500,
+            height: 1500,
+          }}
+          thumbnail={{
+            uri: 'https://placeholdit.co/i/50x50',
+            width: 50,
+            height: 50,
+          }}
+        />
+      </ThemeProvider>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/ProgressiveImage/index.js b/apolloschurchapp/src/ui/ProgressiveImage/index.js
new file mode 100644
index 0000000..3ce2c5f
--- /dev/null
+++ b/apolloschurchapp/src/ui/ProgressiveImage/index.js
@@ -0,0 +1,68 @@
+import React, { PureComponent } from 'react';
+import PropTypes from 'prop-types';
+import { View, StyleSheet } from 'react-native';
+
+import styled from 'apolloschurchapp/src/ui/styled';
+import ConnectedImage from 'apolloschurchapp/src/ui/ConnectedImage';
+
+const Wrapper = styled(({ theme }) => ({
+  width: '100%',
+  aspectRatio: 1,
+  backgroundColor: theme.colors.background.inactive,
+}))(View);
+
+const styles = StyleSheet.create({
+  imageStyles: {
+    width: '100%',
+    height: '100%',
+    resizeMode: 'cover',
+  },
+});
+
+class ProgressiveImage extends PureComponent {
+  static propTypes = {
+    source: ConnectedImage.propTypes.source,
+    thumbnail: ConnectedImage.propTypes.source,
+    thumbnailBlurRadius: PropTypes.number,
+    imageStyle: PropTypes.any, // eslint-disable-line
+    ...ConnectedImage.propTypes,
+  };
+
+  static defaultProps = {
+    thumbnailBlurRadius: 2,
+  };
+
+  render() {
+    const {
+      source,
+      thumbnail,
+      thumbnailFadeDuration,
+      imageFadeDuration,
+      thumbnailBlurRadius,
+      onLoadThumbnail,
+      onLoadImage,
+      imageStyle,
+      style,
+      ...imageProps
+    } = this.props;
+    return (
+      <Wrapper style={style}>
+        {thumbnail ? (
+          <ConnectedImage
+            {...imageProps}
+            blurRadius={thumbnailBlurRadius}
+            style={[styles.imageStyles, imageStyle]}
+            source={thumbnail}
+          />
+        ) : null}
+        <ConnectedImage
+          {...imageProps}
+          style={[styles.imageStyles, imageStyle]}
+          source={source}
+        />
+      </Wrapper>
+    );
+  }
+}
+
+export default ProgressiveImage;
diff --git a/apolloschurchapp/src/ui/Scripture/Item.js b/apolloschurchapp/src/ui/Scripture/Item.js
new file mode 100644
index 0000000..2d7a8ed
--- /dev/null
+++ b/apolloschurchapp/src/ui/Scripture/Item.js
@@ -0,0 +1,32 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import { View } from 'react-native';
+import Placeholder from 'rn-placeholder';
+
+import { H4, H6 } from 'apolloschurchapp/src/ui/typography';
+
+import ScriptureHTMLView from './ScriptureHTMLView';
+
+const Item = ({ reference, html, isLoading }) => (
+  <View>
+    <H4>
+      <H4>{reference}</H4> <H6>WEB</H6>
+    </H4>
+    <Placeholder.Paragraph
+      lineNumber={5}
+      onReady={!isLoading}
+      lastLineWidth="60%"
+      firstLineWidth="40%"
+    >
+      <ScriptureHTMLView>{html}</ScriptureHTMLView>
+    </Placeholder.Paragraph>
+  </View>
+);
+
+Item.propTypes = {
+  reference: PropTypes.string,
+  html: PropTypes.string,
+  isLoading: PropTypes.bool,
+};
+
+export default Item;
diff --git a/apolloschurchapp/src/ui/Scripture/Scripture.stories.js b/apolloschurchapp/src/ui/Scripture/Scripture.stories.js
new file mode 100644
index 0000000..2d985ee
--- /dev/null
+++ b/apolloschurchapp/src/ui/Scripture/Scripture.stories.js
@@ -0,0 +1,108 @@
+import React from 'react';
+import { ScrollView } from 'react-native';
+import { storiesOf } from '@storybook/react-native';
+import PaddedView from 'apolloschurchapp/src/ui/PaddedView';
+
+import Item from './Item';
+
+const genesis1 = {
+  scripture: {
+    reference: 'Genesis 1:1-5',
+    html:
+      '<p class="p"><span data-number="1" class="v">1</span>In the beginning, God created the heavens and the earth. <span data-number="2" class="v">2</span>The earth was formless and empty. Darkness was on the surface of the deep and God’s Spirit was hovering over the surface of the waters.</p><p class="p"><span data-number="3" class="v">3</span>God said, “Let there be light,” and there was light. <span data-number="4" class="v">4</span>God saw the light, and saw that it was good. God divided the light from the darkness. <span data-number="5" class="v">5</span>God called the light “day”, and the darkness he called “night”. There was evening and there was morning, the first day.</p>',
+  },
+};
+
+const psalm23 = {
+  scripture: {
+    reference: 'Psalm 23',
+    html:
+      '<p class="d">A Psalm by David.</p><p class="q1"><span data-number="1" class="v">1</span>Yahweh is my shepherd:</p><p class="q2">I shall lack nothing.</p><p class="q1"><span data-number="2" class="v">2</span>He makes me lie down in green pastures.</p><p class="q2">He leads me beside still waters.</p><p class="q1"><span data-number="3" class="v">3</span>He restores my soul.</p><p class="q2">He guides me in the paths of righteousness for his name’s sake.</p><p class="q1"><span data-number="4" class="v">4</span>Even though I walk through the valley of the shadow of death,</p><p class="q2">I will fear no evil, for you are with me.</p><p class="q1">Your rod and your staff,</p><p class="q2">they comfort me.</p><p class="q1"><span data-number="5" class="v">5</span>You prepare a table before me</p><p class="q2">in the presence of my enemies.</p><p class="q1">You anoint my head with oil.</p><p class="q2">My cup runs over.</p><p class="q1"><span data-number="6" class="v">6</span>Surely goodness and loving kindness shall follow me all the days of my life,</p><p class="q2">and I will dwell in Yahweh’s house forever.</p>',
+  },
+};
+
+const songOfSolomon1 = {
+  scripture: {
+    reference: 'Song of Solomon 1:1-4',
+    html:
+      '<p class="p"><span data-number="1" class="v">1</span>The Song of songs, which is Solomon’s.</p><p class="sp">Beloved</p><p class="q1"><span data-number="2" class="v">2</span>Let him kiss me with the kisses of his mouth;</p><p class="q2">for your love is better than wine.</p><p class="q1"><span data-number="3" class="v">3</span>Your oils have a pleasing fragrance.</p><p class="q2">Your name is oil poured out,</p><p class="q2">therefore the virgins love you.</p><p class="q1"><span data-number="4" class="v">4</span>Take me away with you.</p><p class="q2">Let’s hurry.</p><p class="q2">The king has brought me into his rooms.</p><p class="sp">Friends</p><p class="q1">We will be glad and rejoice in you.</p><p class="q2">We will praise your love more than wine!</p><p class="sp">Beloved</p><p class="q1">They are right to love you.</p>',
+  },
+};
+
+const john3 = {
+  scripture: {
+    reference: 'John 3:16-17',
+    html:
+      '<p class="p"><span data-number="16" class="v">16</span><span class="wj">For God so loved the world, that he gave his one and only Son, that whoever believes in him should not perish, but have eternal life. </span><span data-number="17" class="v">17</span><span class="wj">For God didn’t send his Son into the world to judge the world, but that the world should be saved through him. </span></p>',
+  },
+};
+
+const revelation22 = {
+  scripture: {
+    reference: 'Revelation 22:20-21',
+    html:
+      '<p class="p"><span data-number="20" class="v">20</span>He who testifies these things says, <span class="wj">“Yes, I come quickly.” </span></p><p class="p">Amen! Yes, come, Lord Jesus.</p><p class="p"><span data-number="21" class="v">21</span>The grace of the Lord Jesus Christ be with all the saints. Amen.</p>',
+  },
+};
+
+const stories = storiesOf('Scripture', module);
+
+stories.add('Genesis 1:1-5', () => (
+  <ScrollView>
+    <PaddedView>
+      <Item
+        reference={genesis1.scripture.reference}
+        html={genesis1.scripture.html}
+        isLoading={false}
+      />
+    </PaddedView>
+  </ScrollView>
+));
+
+stories.add('Psalm 23', () => (
+  <ScrollView>
+    <PaddedView>
+      <Item
+        reference={psalm23.scripture.reference}
+        html={psalm23.scripture.html}
+        isLoading={false}
+      />
+    </PaddedView>
+  </ScrollView>
+));
+
+stories.add('Song of Solomon 1:1-4', () => (
+  <ScrollView>
+    <PaddedView>
+      <Item
+        reference={songOfSolomon1.scripture.reference}
+        html={songOfSolomon1.scripture.html}
+        isLoading={false}
+      />
+    </PaddedView>
+  </ScrollView>
+));
+
+stories.add('John 3:16-17', () => (
+  <ScrollView>
+    <PaddedView>
+      <Item
+        reference={john3.scripture.reference}
+        html={john3.scripture.html}
+        isLoading={false}
+      />
+    </PaddedView>
+  </ScrollView>
+));
+
+stories.add('Revelation 22:20-21', () => (
+  <ScrollView>
+    <PaddedView>
+      <Item
+        reference={revelation22.scripture.reference}
+        html={revelation22.scripture.html}
+        isLoading={false}
+      />
+    </PaddedView>
+  </ScrollView>
+));
diff --git a/apolloschurchapp/src/ui/Scripture/Scripture.tests.js b/apolloschurchapp/src/ui/Scripture/Scripture.tests.js
new file mode 100644
index 0000000..080c38e
--- /dev/null
+++ b/apolloschurchapp/src/ui/Scripture/Scripture.tests.js
@@ -0,0 +1,40 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+import Item from './Item';
+
+const songOfSolomon1 = {
+  reference: 'Song of Solomon 1:1-4',
+  html:
+    '<p class="p"><span data-number="1" class="v">1</span>The Song of songs, which is Solomon’s.</p><p class="sp">Beloved</p><p class="q1"><span data-number="2" class="v">2</span>Let him kiss me with the kisses of his mouth;</p><p class="q2">for your love is better than wine.</p><p class="q1"><span data-number="3" class="v">3</span>Your oils have a pleasing fragrance.</p><p class="q2">Your name is oil poured out,</p><p class="q2">therefore the virgins love you.</p><p class="q1"><span data-number="4" class="v">4</span>Take me away with you.</p><p class="q2">Let’s hurry.</p><p class="q2">The king has brought me into his rooms.</p><p class="sp">Friends</p><p class="q1">We will be glad and rejoice in you.</p><p class="q2">We will praise your love more than wine!</p><p class="sp">Beloved</p><p class="q1">They are right to love you.</p>',
+};
+
+const john3 = {
+  reference: 'John 3:16-17',
+  html:
+    '<p class="p"><span data-number="16" class="v">16</span><span class="wj">For God so loved the world, that he gave his one and only Son, that whoever believes in him should not perish, but have eternal life. </span><span data-number="17" class="v">17</span><span class="wj">For God didn’t send his Son into the world to judge the world, but that the world should be saved through him. </span></p>',
+};
+
+describe('the ScriptureItem component', () => {
+  it('renders Song of Solomon 1:1-4', () => {
+    const tree = renderer.create(
+      <Providers>
+        <Item
+          reference={songOfSolomon1.reference}
+          html={songOfSolomon1.html}
+          isLoading={false}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('renders John 3:16-17', () => {
+    const tree = renderer.create(
+      <Providers>
+        <Item reference={john3.reference} html={john3.html} isLoading={false} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/Scripture/ScriptureHTMLView.js b/apolloschurchapp/src/ui/Scripture/ScriptureHTMLView.js
new file mode 100644
index 0000000..9cb7462
--- /dev/null
+++ b/apolloschurchapp/src/ui/Scripture/ScriptureHTMLView.js
@@ -0,0 +1,75 @@
+import React from 'react';
+import { withProps } from 'recompose';
+import { Text } from 'react-native';
+
+import HTMLView from 'apolloschurchapp/src/ui/HTMLView';
+import defaultRenderer, {
+  wrapTextChildren,
+} from 'apolloschurchapp/src/ui/HTMLView/defaultRenderer';
+import Paragraph from 'apolloschurchapp/src/ui/typography/Paragraph';
+import { H4, H6, BodyText } from 'apolloschurchapp/src/ui/typography';
+import styled from 'apolloschurchapp/src/ui/styled';
+
+const RedLetters = styled(({ theme }) => ({
+  color: theme.colors.wordOfChrist,
+}))(Text);
+
+const NumText = styled(({ theme }) => ({
+  color: theme.colors.text.tertiary,
+  lineHeight: theme.helpers.verticalRhythm(1, 1.625),
+}))(H6);
+
+const HeavyText = styled(({ theme }) => ({
+  lineHeight: theme.helpers.verticalRhythm(2),
+}))(H4);
+
+const renderer = (node, { children, ...other }) => {
+  // the defaultRenderer support several basic elements out of the box,
+  // this function only needs to handle the cases that are unique to scripture.
+  const className = (node && node.attribs && node.attribs.class) || '';
+
+  if (className.includes('v')) {
+    /* TODO: a single space lives here to temporarily space verse numbers when they are not at the
+     * beginning of a sentence or paragraph. It affects all instences (albeit less noticably in
+     * somecases) so a more procise fix in the future is prefered.
+     */
+    return <NumText> {children} </NumText>;
+  }
+
+  if (className.includes('sp') || className.includes('d')) {
+    return <HeavyText>{children}</HeavyText>;
+  }
+
+  if (className.includes('q1')) {
+    return <BodyText>{children}</BodyText>;
+  }
+
+  if (className.includes('q2')) {
+    return (
+      <BodyText>
+        {'     '}
+        {children}
+      </BodyText>
+    );
+  }
+
+  if (className.includes('wj')) {
+    return <RedLetters>{children}</RedLetters>;
+  }
+
+  if (node.name === 'p') {
+    return (
+      <Paragraph>
+        <BodyText>{wrapTextChildren(children)}</BodyText>
+      </Paragraph>
+    );
+  }
+
+  return defaultRenderer(node, { children, ...other });
+};
+
+const ScriptureHTMLView = withProps({
+  renderer,
+})(HTMLView);
+
+export default ScriptureHTMLView;
diff --git a/apolloschurchapp/src/ui/Scripture/getScripture.js b/apolloschurchapp/src/ui/Scripture/getScripture.js
new file mode 100644
index 0000000..871ef03
--- /dev/null
+++ b/apolloschurchapp/src/ui/Scripture/getScripture.js
@@ -0,0 +1,10 @@
+import gql from 'graphql-tag';
+
+export default gql`
+  query GetScripture($query: String!) {
+    scripture(query: $query) {
+      reference
+      html
+    }
+  }
+`;
diff --git a/apolloschurchapp/src/ui/Scripture/index.js b/apolloschurchapp/src/ui/Scripture/index.js
new file mode 100644
index 0000000..1c5fb67
--- /dev/null
+++ b/apolloschurchapp/src/ui/Scripture/index.js
@@ -0,0 +1,38 @@
+import React from 'react';
+import { Query } from 'react-apollo';
+import { get } from 'lodash';
+import PropTypes from 'prop-types';
+import { View } from 'react-native';
+
+// import HTMLView from 'apolloschurchapp/src/ui/HTMLView';
+import Spacer from 'apolloschurchapp/src/ui/Spacer';
+
+import Item from './Item';
+import getScripture from './getScripture';
+
+// const copyright =
+//   '<h6>Scripture taken from The Holy Bible, English Standard Version. Copyright &copy;2001 by <a href="http://www.crosswaybibles.org">Crossway Bibles</a>, a publishing ministry of Good News Publishers. Used by permission. All rights reserved. Text provided by the <a href="http://www.gnpcb.org/esv/share/services/">Crossway Bibles Web Service</a><h6>';
+
+const Scripture = ({ references = [] }) => (
+  <View>
+    {references.map((query) => (
+      <Query query={getScripture} variables={{ query }} key={query}>
+        {({ loading, data }) => (
+          <Item
+            reference={get(data, 'scripture.reference', '')}
+            html={get(data, 'scripture.html', '')}
+            isLoading={loading}
+          />
+        )}
+      </Query>
+    ))}
+    <Spacer byHeight />
+    {/* <HTMLView>{copyright}</HTMLView> */}
+  </View>
+);
+
+Scripture.propTypes = {
+  references: PropTypes.arrayOf(PropTypes.string),
+};
+
+export default Scripture;
diff --git a/apolloschurchapp/src/ui/Share/Share.tests.js b/apolloschurchapp/src/ui/Share/Share.tests.js
new file mode 100644
index 0000000..2411ac0
--- /dev/null
+++ b/apolloschurchapp/src/ui/Share/Share.tests.js
@@ -0,0 +1,22 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import { ThemeProvider } from 'apolloschurchapp/src/ui/theme';
+
+import Share from '.';
+
+describe('the Share component', () => {
+  it('should render', () => {
+    const shareObject = {
+      title: 'Shared Object Title',
+      url: 'https://github.com/ApollosProject/apollos-prototype',
+      message: 'Share this with all your friends and family',
+    };
+    const tree = renderer.create(
+      <ThemeProvider>
+        <Share content={shareObject} />
+      </ThemeProvider>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/Share/index.js b/apolloschurchapp/src/ui/Share/index.js
new file mode 100644
index 0000000..2a5fddb
--- /dev/null
+++ b/apolloschurchapp/src/ui/Share/index.js
@@ -0,0 +1,28 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import { compose, pure } from 'recompose';
+import Icon from 'apolloschurchapp/src/ui/Icon';
+import Touchable from 'apolloschurchapp/src/ui/Touchable';
+import share from 'apolloschurchapp/src/utils/content/share';
+import { withTheme } from 'apolloschurchapp/src/ui/theme';
+
+const enhance = compose(
+  pure,
+  withTheme()
+);
+
+const Share = enhance(({ content, theme }) => (
+  <Touchable onPress={() => share(content)}>
+    <Icon name={'share'} fill={theme.colors.secondary} />
+  </Touchable>
+));
+
+Share.propTypes = {
+  content: PropTypes.shape({
+    message: PropTypes.string,
+    title: PropTypes.string,
+    url: PropTypes.string,
+  }),
+};
+
+export default Share;
diff --git a/apolloschurchapp/src/ui/SideBySideView/Left.js b/apolloschurchapp/src/ui/SideBySideView/Left.js
new file mode 100644
index 0000000..81b5fb6
--- /dev/null
+++ b/apolloschurchapp/src/ui/SideBySideView/Left.js
@@ -0,0 +1,16 @@
+import { View } from 'react-native';
+import { compose } from 'recompose';
+
+import { enhancer as mediaQuery } from 'apolloschurchapp/src/ui/MediaQuery';
+import styled from 'apolloschurchapp/src/ui/styled';
+
+export default compose(
+  mediaQuery(
+    ({ md }) => ({ minWidth: md }),
+    styled({
+      width: `${100 - 41.6666666}%`,
+      height: '100%',
+      overflow: 'hidden',
+    })
+  )
+)(View);
diff --git a/apolloschurchapp/src/ui/SideBySideView/Right.js b/apolloschurchapp/src/ui/SideBySideView/Right.js
new file mode 100644
index 0000000..9d80e02
--- /dev/null
+++ b/apolloschurchapp/src/ui/SideBySideView/Right.js
@@ -0,0 +1,19 @@
+import { View } from 'react-native';
+import { compose } from 'recompose';
+
+import { enhancer as mediaQuery } from 'apolloschurchapp/src/ui/MediaQuery';
+import styled from 'apolloschurchapp/src/ui/styled';
+
+export default compose(
+  mediaQuery(
+    ({ md }) => ({ minWidth: md }),
+    styled(
+      {
+        width: '41.6666666%',
+        height: '100%',
+        overflow: 'hidden',
+      },
+      'SideBySideView.Right'
+    )
+  )
+)(View);
diff --git a/apolloschurchapp/src/ui/SideBySideView/SideBySideView.tests.js b/apolloschurchapp/src/ui/SideBySideView/SideBySideView.tests.js
new file mode 100644
index 0000000..d701831
--- /dev/null
+++ b/apolloschurchapp/src/ui/SideBySideView/SideBySideView.tests.js
@@ -0,0 +1,53 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+import { View } from 'react-native';
+
+import SideBySide, { ResponsiveSideBySideView, Left, Right } from '.';
+
+describe('The SideBySide component', () => {
+  it('should render correctly', () => {
+    const tree = renderer.create(
+      <SideBySide>
+        <View />
+        <View />
+      </SideBySide>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
+
+describe('The ResponsiveSideBySideView component', () => {
+  it('should render correctly', () => {
+    const tree = renderer.create(
+      <ResponsiveSideBySideView>
+        <View />
+        <View />
+      </ResponsiveSideBySideView>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
+
+describe('The Right component', () => {
+  it('should render correctly', () => {
+    const tree = renderer.create(
+      <Right>
+        <View />
+        <View />
+      </Right>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
+
+describe('The Left component', () => {
+  it('should render correctly', () => {
+    const tree = renderer.create(
+      <Left>
+        <View />
+        <View />
+      </Left>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/SideBySideView/index.js b/apolloschurchapp/src/ui/SideBySideView/index.js
new file mode 100644
index 0000000..25c289d
--- /dev/null
+++ b/apolloschurchapp/src/ui/SideBySideView/index.js
@@ -0,0 +1,21 @@
+import { View } from 'react-native';
+import { compose, renderComponent } from 'recompose';
+
+import styled from 'apolloschurchapp/src/ui/styled';
+import { enhancer as mediaQuery } from 'apolloschurchapp/src/ui/MediaQuery';
+
+export { default as Right } from './Right';
+export { default as Left } from './Left';
+
+const SideBySideView = styled(({ reversed = false, stretched = true }) => ({
+  flexDirection: reversed ? 'row-reverse' : 'row',
+  flexWrap: 'nowrap',
+  justifyContent: 'space-between',
+  alignItems: stretched ? 'stretch' : 'center',
+}))(View);
+
+const ResponsiveSideBySideView = compose(
+  mediaQuery(({ md }) => ({ minWidth: md }), renderComponent(SideBySideView))
+)(View);
+
+export { SideBySideView as default, ResponsiveSideBySideView };
diff --git a/apolloschurchapp/src/ui/Spacer.js b/apolloschurchapp/src/ui/Spacer.js
new file mode 100644
index 0000000..f3f6fef
--- /dev/null
+++ b/apolloschurchapp/src/ui/Spacer.js
@@ -0,0 +1,7 @@
+import { View } from 'react-native';
+import styled from 'apolloschurchapp/src/ui/styled';
+
+export default styled(({ theme, byWidth }) => ({
+  width: byWidth ? theme.sizing.baseUnit / 2 : null,
+  height: byWidth ? null : theme.sizing.baseUnit / 2,
+}))(View);
diff --git a/apolloschurchapp/src/ui/TabView/TabBar/Indicator.js b/apolloschurchapp/src/ui/TabView/TabBar/Indicator.js
new file mode 100644
index 0000000..64300fe
--- /dev/null
+++ b/apolloschurchapp/src/ui/TabView/TabBar/Indicator.js
@@ -0,0 +1,45 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import { Animated } from 'react-native';
+
+const wrapperStyles = {
+  position: 'absolute',
+  left: 0,
+  bottom: 0,
+  height: 3,
+};
+
+const Indicator = ({
+  width,
+  position,
+  navigationState,
+  indicatorColor: backgroundColor,
+}) => {
+  const translateX = Animated.multiply(
+    position.interpolate({
+      inputRange: [0, navigationState.routes.length - 1],
+      outputRange: [0, navigationState.routes.length - 1],
+      extrapolate: 'clamp',
+    }),
+    width
+  );
+  return (
+    <Animated.View
+      style={{
+        width,
+        backgroundColor,
+        transform: [{ translateX }],
+        ...wrapperStyles,
+      }}
+    />
+  );
+};
+
+Indicator.propTypes = {
+  width: PropTypes.number,
+  position: PropTypes.shape({ interpolate: PropTypes.func }),
+  navigationState: PropTypes.shape({ routes: PropTypes.array }),
+  indicatorColor: PropTypes.string,
+};
+
+export default Indicator;
diff --git a/apolloschurchapp/src/ui/TabView/TabBar/Label.js b/apolloschurchapp/src/ui/TabView/TabBar/Label.js
new file mode 100644
index 0000000..f08eb4a
--- /dev/null
+++ b/apolloschurchapp/src/ui/TabView/TabBar/Label.js
@@ -0,0 +1,13 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+
+import { H4 } from 'apolloschurchapp/src/ui/typography';
+
+const Label = ({ route }) => {
+  const labelText = route.title;
+  return <H4 padded>{labelText}</H4>;
+};
+
+Label.propTypes = { route: PropTypes.shape({ title: PropTypes.string }) };
+
+export default Label;
diff --git a/apolloschurchapp/src/ui/TabView/TabBar/index.js b/apolloschurchapp/src/ui/TabView/TabBar/index.js
new file mode 100644
index 0000000..63387b6
--- /dev/null
+++ b/apolloschurchapp/src/ui/TabView/TabBar/index.js
@@ -0,0 +1,28 @@
+import { TabBar } from 'react-native-tab-view';
+import { compose, withProps } from 'recompose';
+
+import styled from 'apolloschurchapp/src/ui/styled';
+import { withTheme } from 'apolloschurchapp/src/ui/theme';
+
+import Label from './Label';
+import Indicator from './Indicator';
+
+const withStyles = compose(
+  styled(
+    ({ theme }) => ({
+      backgroundColor: theme.colors.background.paper,
+    }),
+    'TabBar'
+  ),
+  withTheme(({ theme, indicatorColor }) => ({
+    indicatorColor: indicatorColor || theme.colors.tertiary,
+  }))
+);
+
+export default compose(
+  withStyles,
+  withProps({
+    renderLabel: Label,
+    renderIndicator: Indicator,
+  })
+)(TabBar);
diff --git a/apolloschurchapp/src/ui/TabView/TabView.stories.js b/apolloschurchapp/src/ui/TabView/TabView.stories.js
new file mode 100644
index 0000000..a2e8f4b
--- /dev/null
+++ b/apolloschurchapp/src/ui/TabView/TabView.stories.js
@@ -0,0 +1,28 @@
+import React from 'react';
+import { View, StyleSheet } from 'react-native';
+import { storiesOf } from '@storybook/react-native';
+
+import TabView, { SceneMap } from '.';
+
+const styles = StyleSheet.create({
+  firstRoute: { flex: 1, backgroundColor: '#ff4081' }, // eslint-disable-line
+  secondRoute: { flex: 1, backgroundColor: '#673ab7' }, // eslint-disable-line
+});
+
+const FirstRoute = () => <View style={styles.firstRoute} />;
+const SecondRoute = () => <View style={styles.SecondRoute} />;
+
+storiesOf('TabView', module).add('default', () => (
+  <View style={StyleSheet.absoluteFill}>
+    <TabView
+      routes={[
+        { key: 'first', title: 'First' },
+        { key: 'second', title: 'Second' },
+      ]}
+      renderScene={SceneMap({
+        first: FirstRoute,
+        second: SecondRoute,
+      })}
+    />
+  </View>
+));
diff --git a/apolloschurchapp/src/ui/TabView/TabView.tests.js b/apolloschurchapp/src/ui/TabView/TabView.tests.js
new file mode 100644
index 0000000..8a2158b
--- /dev/null
+++ b/apolloschurchapp/src/ui/TabView/TabView.tests.js
@@ -0,0 +1,36 @@
+import React from 'react';
+import { View } from 'react-native';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import TabView, { SceneMap } from '.';
+
+const FirstRoute = () => (
+  // eslint-disable-next-line
+  <View style={[{ flex: 1, backgroundColor: '#ff4081' }]} />
+);
+const SecondRoute = () => (
+  // eslint-disable-next-line
+  <View style={[{ flex: 1, backgroundColor: '#673ab7' }]} />
+);
+
+describe('TabView Component', () => {
+  it('renders', () => {
+    const tree = renderer.create(
+      <Providers>
+        <TabView
+          routes={[
+            { key: 'first', title: 'First' },
+            { key: 'second', title: 'Second' },
+          ]}
+          renderScene={SceneMap({
+            first: FirstRoute,
+            second: SecondRoute,
+          })}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/TabView/index.js b/apolloschurchapp/src/ui/TabView/index.js
new file mode 100644
index 0000000..21777cd
--- /dev/null
+++ b/apolloschurchapp/src/ui/TabView/index.js
@@ -0,0 +1,69 @@
+import PropTypes from 'prop-types';
+import { Dimensions, Platform } from 'react-native';
+import { TabView as RNTabView, SceneMap } from 'react-native-tab-view';
+import { branch, compose, withProps, withState } from 'recompose';
+import isFunction from 'lodash/isFunction';
+
+import styled from 'apolloschurchapp/src/ui/styled';
+
+import TabBar from './TabBar';
+
+const initialLayout = {
+  height: 0,
+  width: Dimensions.get('window').width,
+};
+
+const withStyles = styled({ flex: 1 }, 'TabView');
+
+const TabView = compose(
+  withStyles,
+  branch(
+    ({ index }) => typeof index !== 'number',
+    withState('index', 'onIndexChange', ({ initialIndex }) => initialIndex)
+  ),
+  withProps((props) => {
+    function onIndexChange(index) {
+      if (isFunction(props.onIndexChange)) props.onIndexChange(index);
+      if (isFunction(props.onChange)) props.onChange(index);
+    }
+
+    return {
+      navigationState: {
+        index: props.index,
+        routes: props.routes.map((routeProps) => ({
+          ...routeProps,
+          jumpTo(key) {
+            const index = props.routes.findIndex((r) => r.key === key);
+            return onIndexChange(index);
+          },
+        })),
+      },
+      initialLayout,
+      renderTabBar: props.renderTabBar ? props.renderTabBar : TabBar,
+      onIndexChange,
+    };
+  })
+)(RNTabView);
+
+TabView.propTypes = {
+  initialIndex: PropTypes.number,
+  routes: PropTypes.arrayOf(
+    PropTypes.shape({
+      key: PropTypes.string.isRequired,
+      title: PropTypes.string.isRequired,
+    })
+  ).isRequired,
+  renderScene: PropTypes.func.isRequired,
+  renderTabBar: PropTypes.func,
+  swipeEnabled: PropTypes.bool,
+  autoHeightEnabled: PropTypes.bool,
+};
+
+TabView.defaultProps = {
+  initialIndex: 0,
+  swipeEnabled: Platform.OS !== 'web',
+  autoHeightEnabled: false,
+};
+
+export { SceneMap, TabBar };
+export default TabView;
diff --git a/apolloschurchapp/src/ui/TableView/Cell.js b/apolloschurchapp/src/ui/TableView/Cell.js
new file mode 100644
index 0000000..2d66bb2
--- /dev/null
+++ b/apolloschurchapp/src/ui/TableView/Cell.js
@@ -0,0 +1,38 @@
+import React, { Children, cloneElement } from 'react';
+import PropTypes from 'prop-types';
+import { View } from 'react-native';
+
+import styled from 'apolloschurchapp/src/ui/styled';
+
+const asFirstChild = (child) =>
+  cloneElement(child, {
+    style: { paddingLeft: 0 },
+  });
+
+const Container = styled(
+  ({ theme }) => ({
+    padding: theme.sizing.baseUnit / 2,
+    paddingLeft: theme.sizing.baseUnit / 1.5,
+    backgroundColor: theme.colors.background.paper,
+    flexDirection: 'row',
+    justifyContent: 'flex-start',
+    alignItems: 'center',
+    height: theme.sizing.baseUnit * 2.5,
+  }),
+  'TableView.Cell.Container'
+)(View);
+
+const Cell = ({ children, ...otherProps }) => (
+  <Container {...otherProps}>
+    {Children.map(children, (child, i) => {
+      if (i === 0) return asFirstChild(child);
+      return child;
+    })}
+  </Container>
+);
+
+Cell.propTypes = {
+  children: PropTypes.node,
+};
+
+export default Cell;
diff --git a/apolloschurchapp/src/ui/TableView/CellIcon.js b/apolloschurchapp/src/ui/TableView/CellIcon.js
new file mode 100644
index 0000000..3b68306
--- /dev/null
+++ b/apolloschurchapp/src/ui/TableView/CellIcon.js
@@ -0,0 +1,9 @@
+import { defaultProps } from 'recompose';
+
+import Icon from 'apolloschurchapp/src/ui/Icon';
+
+const CellIcon = defaultProps({
+  size: 20,
+})(Icon);
+
+export default CellIcon;
diff --git a/apolloschurchapp/src/ui/TableView/CellText.js b/apolloschurchapp/src/ui/TableView/CellText.js
new file mode 100644
index 0000000..6ab6214
--- /dev/null
+++ b/apolloschurchapp/src/ui/TableView/CellText.js
@@ -0,0 +1,11 @@
+import { H5 } from 'apolloschurchapp/src/ui/typography';
+import styled from 'apolloschurchapp/src/ui/styled';
+
+const CellText = styled(({ theme }) => ({
+  flexGrow: 1,
+  flexShrink: 1,
+  paddingLeft: theme.sizing.baseUnit / 2,
+  paddingRight: theme.sizing.baseUnit / 2,
+}))(H5);
+
+export default CellText;
diff --git a/apolloschurchapp/src/ui/TableView/Divider.js b/apolloschurchapp/src/ui/TableView/Divider.js
new file mode 100644
index 0000000..034fd93
--- /dev/null
+++ b/apolloschurchapp/src/ui/TableView/Divider.js
@@ -0,0 +1,12 @@
+import { View, StyleSheet } from 'react-native';
+
+import styled from 'apolloschurchapp/src/ui/styled';
+
+const Divider = styled(({ theme }) => ({
+  height: StyleSheet.hairlineWidth,
+  marginLeft: theme.sizing.baseUnit / 1.5,
+  backgroundColor: theme.colors.shadows.default,
+  width: '100%',
+}))(View);
+
+export default Divider;
diff --git a/apolloschurchapp/src/ui/TableView/FormFields.js b/apolloschurchapp/src/ui/TableView/FormFields.js
new file mode 100644
index 0000000..8550d26
--- /dev/null
+++ b/apolloschurchapp/src/ui/TableView/FormFields.js
@@ -0,0 +1,9 @@
+import PaddedView from 'apolloschurchapp/src/ui/PaddedView';
+import styled from 'apolloschurchapp/src/ui/styled';
+
+const FormFields = styled(({ theme }) => ({
+  paddingTop: theme.sizing.baseUnit * 0.6,
+  paddingBottom: theme.sizing.baseUnit / 2,
+}))(PaddedView);
+
+export default FormFields;
diff --git a/apolloschurchapp/src/ui/TableView/TableView.stories.js b/apolloschurchapp/src/ui/TableView/TableView.stories.js
new file mode 100644
index 0000000..4bdfb67
--- /dev/null
+++ b/apolloschurchapp/src/ui/TableView/TableView.stories.js
@@ -0,0 +1,34 @@
+import React from 'react';
+import { storiesOf } from '@storybook/react-native';
+
+import FlexedView from 'apolloschurchapp/src/ui/FlexedView';
+import Icon from 'apolloschurchapp/src/ui/Icon';
+import { Switch } from 'apolloschurchapp/src/ui/inputs';
+
+import TableView, { Cell, CellText, Divider } from '.';
+
+storiesOf('TableView', module).add('default', () => (
+  <FlexedView>
+    <TableView>
+      <Cell>
+        <Icon name="arrow-back" />
+        <CellText>Line Item</CellText>
+      </Cell>
+      <Divider />
+      <Cell>
+        <Icon name="camera" />
+        <CellText>A toggle!</CellText>
+        <Switch />
+      </Cell>
+      <Divider />
+      <Cell>
+        <CellText>Just a row</CellText>
+      </Cell>
+      <Divider />
+      <Cell>
+        <CellText>This be some button!</CellText>
+        <Icon name="arrow-next" />
+      </Cell>
+    </TableView>
+  </FlexedView>
+));
diff --git a/apolloschurchapp/src/ui/TableView/TableView.tests.js b/apolloschurchapp/src/ui/TableView/TableView.tests.js
new file mode 100644
index 0000000..c6f2db9
--- /dev/null
+++ b/apolloschurchapp/src/ui/TableView/TableView.tests.js
@@ -0,0 +1,42 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import FlexedView from 'apolloschurchapp/src/ui/FlexedView';
+import Providers from 'apolloschurchapp/src/Providers';
+import Icon from 'apolloschurchapp/src/ui/Icon';
+import { Switch } from 'apolloschurchapp/src/ui/inputs';
+
+import TableView, { Cell, CellText, Divider } from '.';
+
+describe('the TableView Component', () => {
+  it('should render', () => {
+    const tree = renderer.create(
+      <Providers>
+        <FlexedView>
+          <TableView>
+            <Cell>
+              <Icon name="arrow-back" />
+              <CellText>Line Item</CellText>
+            </Cell>
+            <Divider />
+            <Cell>
+              <Icon name="camera" />
+              <CellText>A toggle!</CellText>
+              <Switch />
+            </Cell>
+            <Divider />
+            <Cell>
+              <CellText>Just a row</CellText>
+            </Cell>
+            <Divider />
+            <Cell>
+              <CellText>This be some button!</CellText>
+              <Icon name="arrow-next" />
+            </Cell>
+          </TableView>
+        </FlexedView>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/TableView/index.js b/apolloschurchapp/src/ui/TableView/index.js
new file mode 100644
index 0000000..c9c1f01
--- /dev/null
+++ b/apolloschurchapp/src/ui/TableView/index.js
@@ -0,0 +1,38 @@
+import { StyleSheet, View } from 'react-native';
+import PropTypes from 'prop-types';
+import { compose, renderComponent } from 'recompose';
+
+import styled from 'apolloschurchapp/src/ui/styled';
+import { enhancer as mediaQuery } from 'apolloschurchapp/src/ui/MediaQuery';
+import Card from 'apolloschurchapp/src/ui/Card';
+
+export { default as Cell } from './Cell';
+export { default as CellText } from './CellText';
+export { default as CellIcon } from './CellIcon';
+export { default as Divider } from './Divider';
+export { default as FormFields } from './FormFields';
+
+const TableView = compose(
+  styled(
+    ({ theme }) => ({
+      marginBottom: theme.sizing.baseUnit,
+      backgroundColor: theme.colors.background.paper,
+      borderColor: theme.colors.shadows.default,
+      borderTopWidth: StyleSheet.hairlineWidth,
+      borderBottomWidth: StyleSheet.hairlineWidth,
+      borderLeftWidth: 0,
+      borderRightWidth: 0,
+    }),
+    'TableView'
+  ),
+  mediaQuery(
+    ({ md, width }, { responsive = true }) => responsive && width > md,
+    renderComponent(Card)
+  )
+)(View);
+
+TableView.proptypes = {
+  responsive: PropTypes.bool,
+};
+
+export default TableView;
diff --git a/apolloschurchapp/src/ui/ThumbnailCard/Thumbnail.js b/apolloschurchapp/src/ui/ThumbnailCard/Thumbnail.js
new file mode 100644
index 0000000..b0a78c0
--- /dev/null
+++ b/apolloschurchapp/src/ui/ThumbnailCard/Thumbnail.js
@@ -0,0 +1,24 @@
+import { StyleSheet } from 'react-native';
+import { compose } from 'recompose';
+
+import styled from 'apolloschurchapp/src/ui/styled';
+import ProgressiveImage from 'apolloschurchapp/src/ui/ProgressiveImage';
+import { getIsLoading } from 'apolloschurchapp/src/ui/isLoading';
+
+const Image = compose(
+  getIsLoading,
+  styled(
+    {
+      ...StyleSheet.absoluteFillObject,
+      height: '100%',
+      paddingTop: 0,
+      alignItems: 'center',
+      justifyContent: 'center',
+    },
+    'Card.Image'
+  )
+)(ProgressiveImage);
+
+Image.propTypes = ProgressiveImage.propTypes;
+
+export default Image;
diff --git a/apolloschurchapp/src/ui/ThumbnailCard/ThumbnailCard.stories.js b/apolloschurchapp/src/ui/ThumbnailCard/ThumbnailCard.stories.js
new file mode 100644
index 0000000..a951cca
--- /dev/null
+++ b/apolloschurchapp/src/ui/ThumbnailCard/ThumbnailCard.stories.js
@@ -0,0 +1,60 @@
+import React from 'react';
+import { View } from 'react-native';
+import { storiesOf } from '@storybook/react-native';
+
+import ThumbnailCard from '.';
+
+const containerStyles = {
+  flex: 1,
+  justifyContent: 'center',
+  backgroundColor: '#f7f7f7',
+};
+
+storiesOf('ThumbnailCard', module)
+  .add('Default', () => (
+    <View style={containerStyles}>
+      <ThumbnailCard title={'Why Jesus is Timeless'} />
+    </View>
+  ))
+  .add('With Description', () => (
+    <View style={containerStyles}>
+      <ThumbnailCard
+        title={'Why Jesus is Timeless'}
+        description={
+          'This is the story of a God, who made a flood and drowned the whole world. He gave up His son for everybody, and we absolutely love Him, all the time.'
+        }
+      />
+    </View>
+  ))
+  .add('With images', () => (
+    <View style={containerStyles}>
+      <ThumbnailCard
+        title={'Why Jesus is Timeless'}
+        images={'https://picsum.photos/400/400/?random'}
+      />
+    </View>
+  ))
+  .add('With Category', () => (
+    <View style={containerStyles}>
+      <ThumbnailCard title={'Why Jesus is Timeless'} category={'Time Travel'} />
+    </View>
+  ))
+  .add('With Category and images', () => (
+    <View style={containerStyles}>
+      <ThumbnailCard
+        title={'Why Jesus is Timeless'}
+        category={'Time Travel'}
+        images={'https://picsum.photos/400/400/?random'}
+      />
+    </View>
+  ))
+  .add('Skeleton', () => (
+    <View style={containerStyles}>
+      <ThumbnailCard
+        title={'Why Jesus is Timeless'}
+        images={'https://picsum.photos/400/400/?random'}
+        category={'Time Travel'}
+        isLoading
+      />
+    </View>
+  ));
diff --git a/apolloschurchapp/src/ui/ThumbnailCard/ThumbnailCard.tests.js b/apolloschurchapp/src/ui/ThumbnailCard/ThumbnailCard.tests.js
new file mode 100644
index 0000000..bbe5e56
--- /dev/null
+++ b/apolloschurchapp/src/ui/ThumbnailCard/ThumbnailCard.tests.js
@@ -0,0 +1,77 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import ThumbnailCard from '.';
+
+describe('the ThumbnailCard component', () => {
+  it('should render', () => {
+    const tree = renderer.create(
+      <Providers>
+        <ThumbnailCard title={'Why Jesus is Timeless'} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render with a description', () => {
+    const tree = renderer.create(
+      <Providers>
+        <ThumbnailCard
+          title={'Why Jesus is Timeless'}
+          description={
+            'This is the story of a God, who made a flood and drowned the whole world. He gave up His son for everybody, and we absolutely love Him, all the time.'
+          }
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render with an images', () => {
+    const tree = renderer.create(
+      <Providers>
+        <ThumbnailCard
+          title={'Why Jesus is Timeless'}
+          images={'https://picsum.photos/100/100/?random'}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render with a category', () => {
+    const tree = renderer.create(
+      <Providers>
+        <ThumbnailCard
+          title={'Why Jesus is Timeless'}
+          category={'Time Travel'}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render with a category and images', () => {
+    const tree = renderer.create(
+      <Providers>
+        <ThumbnailCard
+          title={'Why Jesus is Timeless'}
+          images={'https://picsum.photos/100/100/?random'}
+          category={'Time Travel'}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a loading state', () => {
+    const tree = renderer.create(
+      <Providers>
+        <ThumbnailCard
+          title={'Why Jesus is Timeless'}
+          images={'https://picsum.photos/100/100/?random'}
+          category={'Time Travel'}
+          isLoading
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/ThumbnailCard/index.js b/apolloschurchapp/src/ui/ThumbnailCard/index.js
new file mode 100644
index 0000000..5bcb6cc
--- /dev/null
+++ b/apolloschurchapp/src/ui/ThumbnailCard/index.js
@@ -0,0 +1,93 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import { TouchableWithoutFeedback } from 'react-native';
+import { compose, pure } from 'recompose';
+import { startCase, toLower } from 'lodash';
+
+import { withIsLoading } from 'apolloschurchapp/src/ui/isLoading';
+import styled from 'apolloschurchapp/src/ui/styled';
+import Card, { CardContent } from 'apolloschurchapp/src/ui/Card';
+import SideBySideView from 'apolloschurchapp/src/ui/SideBySideView';
+import FlexedView from 'apolloschurchapp/src/ui/FlexedView';
+import { H5, BodyText, Paragraph } from 'apolloschurchapp/src/ui/typography';
+import { enhancer as mediaQuery } from 'apolloschurchapp/src/ui/MediaQuery';
+import ChannelLabel from 'apolloschurchapp/src/ui/ChannelLabel';
+
+import Thumbnail from './Thumbnail';
+
+const enhance = compose(
+  withIsLoading,
+  pure
+);
+
+const HorizontalLayout = styled({
+  alignItems: 'center',
+  minHeight: 110, // kind of the best middle ground for various title lengths.
+})(SideBySideView);
+
+const LeftColumn = compose(
+  styled({ flex: 1.66 }),
+  mediaQuery(
+    ({ md }) => ({ maxWidth: md }),
+    styled(({ theme }) => ({
+      paddingVertical: theme.sizing.baseUnit * 0.75,
+    })),
+    styled(({ theme }) => ({
+      paddingVertical: theme.sizing.baseUnit * 2,
+      paddingHorizontal: theme.sizing.baseUnit * 1.5,
+    }))
+  )
+)(CardContent);
+
+const RightColumn = styled({
+  alignSelf: 'stretch',
+})(FlexedView);
+
+const ThumbnailCard = enhance(
+  ({
+    title,
+    description,
+    images,
+    thumbnailImage,
+    category,
+    isLoading,
+    onPressItem,
+    ...otherProps
+  }) => (
+    <TouchableWithoutFeedback onPress={() => onPressItem()}>
+      <Card isLoading={isLoading} {...otherProps}>
+        <HorizontalLayout>
+          <LeftColumn>
+            <H5>{title}</H5>
+            {description ? (
+              <Paragraph>
+                <BodyText>{description}</BodyText>
+              </Paragraph>
+            ) : null}
+            {typeof category !== 'undefined' ? (
+              <ChannelLabel
+                label={startCase(toLower(category))}
+                isLoading={isLoading}
+              />
+            ) : null}
+          </LeftColumn>
+          {images ? (
+            <RightColumn>
+              <Thumbnail source={images} thumbnail={thumbnailImage} />
+            </RightColumn>
+          ) : null}
+        </HorizontalLayout>
+      </Card>
+    </TouchableWithoutFeedback>
+  )
+);
+
+ThumbnailCard.propTypes = {
+  title: PropTypes.string.isRequired,
+  description: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),
+  images: Thumbnail.propTypes.source,
+  category: PropTypes.string,
+  isLoading: PropTypes.bool,
+};
+
+export default ThumbnailCard;
diff --git a/apolloschurchapp/src/ui/TileImage/TileImage.stories.js b/apolloschurchapp/src/ui/TileImage/TileImage.stories.js
new file mode 100644
index 0000000..b535875
--- /dev/null
+++ b/apolloschurchapp/src/ui/TileImage/TileImage.stories.js
@@ -0,0 +1,37 @@
+import React from 'react';
+import { storiesOf } from '@storybook/react-native';
+import { View } from 'react-native';
+
+import styled from 'apolloschurchapp/src/ui/styled';
+
+import TileImage from '.';
+
+const Square = styled({ aspectRatio: 1 })(View);
+
+storiesOf('TileImage', module)
+  .add('Default', () => (
+    <Square>
+      <TileImage
+        image={'https://picsum.photos/600/400/?random'}
+        link={'https://github.com'}
+        text={'So cool!'}
+      />
+    </Square>
+  ))
+  .add('Without text', () => (
+    <Square>
+      <TileImage
+        image={'https://picsum.photos/600/400/?random'}
+        link={'https://github.com'}
+      />
+    </Square>
+  ))
+  .add('isLoading', () => (
+    <Square>
+      <TileImage
+        image={'https://picsum.photos/600/400/?random'}
+        link={'https://github.com'}
+        isLoading
+      />
+    </Square>
+  ));
diff --git a/apolloschurchapp/src/ui/TileImage/TileImage.tests.js b/apolloschurchapp/src/ui/TileImage/TileImage.tests.js
new file mode 100644
index 0000000..b4d1332
--- /dev/null
+++ b/apolloschurchapp/src/ui/TileImage/TileImage.tests.js
@@ -0,0 +1,57 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import TileImage from '.';
+
+describe('the TileImage component', () => {
+  it('should render', () => {
+    const tree = renderer.create(
+      <Providers>
+        <TileImage
+          image={'https://picsum.photos/600/400/?random'}
+          link={'https://github.com'}
+          text={'So cool!'}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render without text', () => {
+    const tree = renderer.create(
+      <Providers>
+        <TileImage
+          image={'https://picsum.photos/600/400/?random'}
+          link={'https://github.com'}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a loading state', () => {
+    const tree = renderer.create(
+      <Providers>
+        <TileImage
+          image={'https://picsum.photos/600/400/?random'}
+          link={'https://github.com'}
+          isLoading
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('passes an onPressItem prop', () => {
+    const handleOnPressItem = jest.fn;
+    const tree = renderer.create(
+      <Providers>
+        <TileImage
+          image={'https://picsum.photos/600/400/?random'}
+          link={'https://github.com'}
+          onPressItem={handleOnPressItem}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/TileImage/index.js b/apolloschurchapp/src/ui/TileImage/index.js
new file mode 100644
index 0000000..524bb16
--- /dev/null
+++ b/apolloschurchapp/src/ui/TileImage/index.js
@@ -0,0 +1,73 @@
+import React from 'react';
+import { TouchableWithoutFeedback, View } from 'react-native';
+import PropTypes from 'prop-types';
+import { pure, compose } from 'recompose';
+
+import { H4 } from 'apolloschurchapp/src/ui/typography';
+import styled from 'apolloschurchapp/src/ui/styled';
+import { withTheme } from 'apolloschurchapp/src/ui/theme';
+import GradientOverlayImage from 'apolloschurchapp/src/ui/GradientOverlayImage';
+
+const CardView = styled(
+  ({ theme }) => ({
+    borderRadius: theme.sizing.borderRadius,
+    overflow: 'hidden',
+    width: '100%',
+    height: '100%',
+    aspectRatio: 1,
+  }),
+  'TileImage'
+)(View);
+
+const Title = styled(
+  ({ theme }) => ({
+    position: 'absolute',
+    bottom: theme.sizing.baseUnit,
+    left: theme.sizing.baseUnit,
+    right: theme.sizing.baseUnit,
+    backgroundColor: theme.colors.transparent,
+    color: theme.colors.lightPrimary,
+  }),
+  'TileImage.Text'
+)(H4);
+
+const SquareGradientOverlayImage = styled({
+  aspectRatio: 1,
+})(GradientOverlayImage);
+
+const enhance = compose(
+  withTheme(({ theme: { colors } = {} } = {}) => ({ theme: { colors } })),
+  pure
+);
+
+const TileImage = enhance(
+  ({ image, link, onPressItem, text, theme, isLoading }) => (
+    <TouchableWithoutFeedback
+      onPress={() => !isLoading && onPressItem({ ...link })}
+    >
+      <CardView>
+        <SquareGradientOverlayImage
+          source={image}
+          isLoading={isLoading}
+          maintainAspectRatio={false}
+          overlayColor={text ? theme.colors.black : null}
+        />
+        <Title isLoading={isLoading}>{text}</Title>
+      </CardView>
+    </TouchableWithoutFeedback>
+  )
+);
+
+TileImage.propTypes = {
+  image: GradientOverlayImage.propTypes.source,
+  link: PropTypes.string,
+  onPressItem: PropTypes.func,
+  text: PropTypes.string,
+  isLoading: PropTypes.bool,
+};
+
+TileImage.defaultProps = {
+  text: '',
+};
+
+export default TileImage;
diff --git a/apolloschurchapp/src/ui/Touchable/index.js b/apolloschurchapp/src/ui/Touchable/index.js
new file mode 100644
index 0000000..cef6121
--- /dev/null
+++ b/apolloschurchapp/src/ui/Touchable/index.js
@@ -0,0 +1,16 @@
+import {
+  Platform,
+  TouchableNativeFeedback,
+  TouchableOpacity,
+} from 'react-native';
+
+const IOSTouchable = TouchableOpacity;
+
+IOSTouchable.defaultProps = {
+  activeOpacity: 0.5,
+};
+
+const Touchable =
+  Platform.OS === 'android' ? TouchableNativeFeedback : IOSTouchable;
+
+export default Touchable;
diff --git a/apolloschurchapp/src/ui/UserAvatarView/AvatarForm.js b/apolloschurchapp/src/ui/UserAvatarView/AvatarForm.js
new file mode 100644
index 0000000..f62198e
--- /dev/null
+++ b/apolloschurchapp/src/ui/UserAvatarView/AvatarForm.js
@@ -0,0 +1,46 @@
+import React, { PureComponent } from 'react';
+import PropTypes from 'prop-types';
+
+import ConnectedImage from 'apolloschurchapp/src/ui/ConnectedImage';
+import Touchable from 'apolloschurchapp/src/ui/Touchable';
+import Avatar from 'apolloschurchapp/src/ui/Avatar';
+import { withTheme } from 'apolloschurchapp/src/ui/theme';
+
+import uploadPhoto from './uploadPhoto';
+
+const StyledAvatar = withTheme(({ theme }) => ({
+  containerStyle: {
+    marginRight: 0,
+    marginBottom: theme.sizing.baseUnit / 2,
+  },
+}))(Avatar);
+
+export default class AvatarForm extends PureComponent {
+  state = {
+    isUploadingFile: false,
+  };
+
+  handleUploadPhoto = async () => {
+    await uploadPhoto({
+      onUpload: () => this.setState({ isUploadingFile: true }),
+    });
+    await this.props.refetch();
+    this.setState({ isUploadingFile: false });
+  };
+
+  render() {
+    const { photo } = this.props;
+    const { isUploadingFile } = this.state;
+
+    return (
+      <Touchable onPress={this.handleUploadPhoto}>
+        <StyledAvatar source={photo} size="large" isLoading={isUploadingFile} />
+      </Touchable>
+    );
+  }
+}
+
+AvatarForm.propTypes = {
+  refetch: PropTypes.func.isRequired,
+  photo: ConnectedImage.propTypes.source,
+};
diff --git a/apolloschurchapp/src/ui/UserAvatarView/UserAvatarView.stories.js b/apolloschurchapp/src/ui/UserAvatarView/UserAvatarView.stories.js
new file mode 100644
index 0000000..aae6b43
--- /dev/null
+++ b/apolloschurchapp/src/ui/UserAvatarView/UserAvatarView.stories.js
@@ -0,0 +1,22 @@
+import React from 'react';
+import { storiesOf } from '@storybook/react-native';
+
+import FlexedView from 'apolloschurchapp/src/ui/FlexedView';
+
+import UserAvatarView from '.';
+
+const photo = {
+  url:
+    'https://dg0ddngxdz549.cloudfront.net/images/cached/images/remote/http_s3.amazonaws.com/ns.images/all/member_images/members.nophoto_1000_1000_90_c1.jpg',
+};
+
+storiesOf('UserAvatarView', module).add('default', () => (
+  <FlexedView>
+    <UserAvatarView
+      photo={photo}
+      firstName="John"
+      lastName="Doe"
+      home={{ city: 'Hometown' }}
+    />
+  </FlexedView>
+));
diff --git a/apolloschurchapp/src/ui/UserAvatarView/index.js b/apolloschurchapp/src/ui/UserAvatarView/index.js
new file mode 100644
index 0000000..5daec23
--- /dev/null
+++ b/apolloschurchapp/src/ui/UserAvatarView/index.js
@@ -0,0 +1,63 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import { View } from 'react-native';
+
+import { H4, BodyText } from 'apolloschurchapp/src/ui/typography';
+import PaddedView from 'apolloschurchapp/src/ui/PaddedView';
+import ConnectedImage from 'apolloschurchapp/src/ui/ConnectedImage';
+import styled from 'apolloschurchapp/src/ui/styled';
+import AvatarForm from './AvatarForm';
+
+const Container = styled({
+  alignItems: 'center',
+  justifyContent: 'center',
+  overflow: 'hidden',
+})(View);
+
+const Content = styled({ alignItems: 'center', justifyContent: 'center' })(
+  PaddedView
+);
+
+const Name = H4;
+const City = BodyText;
+
+const UserAvatarView = ({
+  photo,
+  firstName,
+  lastName,
+  home,
+  isLoading,
+  refetch,
+  onPhotoPress,
+  setIsUploadingFile,
+  isUploadingFile,
+  ...viewProps
+}) => (
+  // todo: handle file select stuff
+  <Container {...viewProps}>
+    <Content>
+      <AvatarForm photo={photo} refetch={refetch} />
+      <Name>
+        {firstName} {lastName}
+      </Name>
+      {home ? <City>{home.city}</City> : null}
+    </Content>
+  </Container>
+);
+
+UserAvatarView.propTypes = {
+  photo: ConnectedImage.propTypes.source,
+  firstName: PropTypes.string,
+  lastName: PropTypes.string,
+  home: PropTypes.shape({
+    city: PropTypes.string,
+  }),
+  isLoading: PropTypes.bool,
+  refetch: PropTypes.func,
+  onPhotoPress: PropTypes.func,
+  blurIntensity: PropTypes.number,
+  allowProfileImageChange: PropTypes.bool,
+  ...View.propTypes,
+};
+
+export default UserAvatarView;
diff --git a/apolloschurchapp/src/ui/UserAvatarView/uploadPhoto.js b/apolloschurchapp/src/ui/UserAvatarView/uploadPhoto.js
new file mode 100644
index 0000000..700b9e5
--- /dev/null
+++ b/apolloschurchapp/src/ui/UserAvatarView/uploadPhoto.js
@@ -0,0 +1,47 @@
+import gql from 'graphql-tag';
+import ImagePicker from 'react-native-image-picker';
+import { client } from 'apolloschurchapp/src/client';
+import { ReactNativeFile } from 'apollo-upload-client';
+
+const options = {
+  title: 'Select Profile Image',
+  storageOptions: {
+    skipBackup: true,
+    path: 'images',
+  },
+};
+
+function showImagePicker() {
+  return new Promise((resolve, reject) => {
+    ImagePicker.showImagePicker(options, (response) => {
+      if (response.didCancel) {
+        resolve({ cancelled: true });
+      } else if (response.error) {
+        reject(response.error);
+      } else {
+        resolve(response);
+      }
+    });
+  });
+}
+
+export default async ({ onUpload = () => ({}) }) => {
+  const image = await showImagePicker();
+  const file = new ReactNativeFile({
+    uri: image.uri,
+    name: image.fileName,
+    type: 'image/jpeg',
+  });
+  onUpload();
+  return client.mutate({
+    mutation: gql`
+      mutation uploadProfileImage($file: Upload!, $size: Int!) {
+        uploadProfileImage(file: $file, size: $size) {
+          firstName
+          lastName
+        }
+      }
+    `,
+    variables: { file, size: image.fileSize },
+  });
+};
diff --git a/apolloschurchapp/src/ui/WebBrowser/Browser.android.js b/apolloschurchapp/src/ui/WebBrowser/Browser.android.js
new file mode 100644
index 0000000..49dc211
--- /dev/null
+++ b/apolloschurchapp/src/ui/WebBrowser/Browser.android.js
@@ -0,0 +1,15 @@
+import { Linking } from 'react-native';
+import { CustomTabs } from 'react-native-custom-tabs';
+
+const Browser = {
+  openURL: async (url, options = {}) => {
+    try {
+      await CustomTabs.openURL(url, options);
+    } catch (e) {
+      if (!Linking.canOpenURL()) throw new Error('URL not supported');
+      Linking.openURL(url);
+    }
+  },
+};
+
+export default Browser;
diff --git a/apolloschurchapp/src/ui/WebBrowser/Browser.ios.js b/apolloschurchapp/src/ui/WebBrowser/Browser.ios.js
new file mode 100644
index 0000000..7de160f
--- /dev/null
+++ b/apolloschurchapp/src/ui/WebBrowser/Browser.ios.js
@@ -0,0 +1,19 @@
+import { Linking } from 'react-native';
+import SafariView from 'react-native-safari-view';
+
+const Browser = {
+  openURL: async (url, options) => {
+    try {
+      await SafariView.isAvailable();
+      SafariView.show({
+        url,
+        ...options,
+      });
+    } catch (e) {
+      if (!Linking.canOpenURL()) throw new Error('URL not supported');
+      Linking.openURL(url);
+    }
+  },
+};
+
+export default Browser;
diff --git a/apolloschurchapp/src/ui/WebBrowser/index.js b/apolloschurchapp/src/ui/WebBrowser/index.js
new file mode 100644
index 0000000..70260fc
--- /dev/null
+++ b/apolloschurchapp/src/ui/WebBrowser/index.js
@@ -0,0 +1,29 @@
+// Provider API for WebBrowser that injects theme values and defaults to the web browser:
+import { Platform } from 'react-native';
+import { createContext } from 'react';
+
+import { withTheme } from 'apolloschurchapp/src/ui/theme';
+
+import Browser from './Browser';
+
+const { Provider: BaseProvider, Consumer } = createContext(Browser.openURL);
+
+const Provider = withTheme(({ theme }) => ({
+  value: (url, options = {}) =>
+    Browser.openURL(url, {
+      ...Platform.select({
+        ios: {
+          tintColor: theme.colors.primary,
+          barTintColor: theme.colors.background.paper,
+        },
+        android: {
+          toolbarColor: theme.colors.background.paper,
+          enableDefaultShare: true,
+        },
+      }),
+      ...options,
+    }),
+}))(BaseProvider);
+
+export default Browser;
+export { Provider as WebBrowserProvider, Consumer as WebBrowserConsumer };
diff --git a/apolloschurchapp/src/ui/WebBrowser/index.tests.js b/apolloschurchapp/src/ui/WebBrowser/index.tests.js
new file mode 100644
index 0000000..aa74598
--- /dev/null
+++ b/apolloschurchapp/src/ui/WebBrowser/index.tests.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+// TODO: how to include test for Android?
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import { WebBrowserConsumer } from '.';
+
+describe(`WebBrowser Provider and Consumer`, () => {
+  it('passes a function', async () => {
+    renderer.create(
+      <Providers>
+        <WebBrowserConsumer>
+          {(openUrl) => {
+            expect(typeof openUrl).toBe('function');
+          }}
+        </WebBrowserConsumer>
+      </Providers>
+    );
+  });
+});
diff --git a/apolloschurchapp/src/ui/inputs/DateInput/DateInput.tests.js b/apolloschurchapp/src/ui/inputs/DateInput/DateInput.tests.js
new file mode 100644
index 0000000..52ba67a
--- /dev/null
+++ b/apolloschurchapp/src/ui/inputs/DateInput/DateInput.tests.js
@@ -0,0 +1,52 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+import moment from 'moment';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import DateInput from '.';
+
+describe('The DateInput component', () => {
+  it('should render', () => {
+    const tree = renderer.create(
+      <Providers>
+        <DateInput value={moment.utc('1/1/2015').toDate()} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render with a displayValue', () => {
+    const tree = renderer.create(
+      <Providers>
+        <DateInput
+          value={moment.utc('1/1/2015').toDate()}
+          displayValue={moment.utc('1/1/2015').format('YYYY/MM/DD')}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render with a placeholder', () => {
+    const tree = renderer.create(
+      <Providers>
+        <DateInput
+          placeholder={'mm/dd/yyyy'}
+          value={moment.utc('1/1/2015').toDate()}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render with a label', () => {
+    const tree = renderer.create(
+      <Providers>
+        <DateInput
+          value={moment.utc('1/1/2015').toDate()}
+          displayValue={moment.utc('1/1/2015').format('YYYY/MM/DD')}
+          label={'Date Label'}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/inputs/DateInput/index.js b/apolloschurchapp/src/ui/inputs/DateInput/index.js
new file mode 100644
index 0000000..a92ab5d
--- /dev/null
+++ b/apolloschurchapp/src/ui/inputs/DateInput/index.js
@@ -0,0 +1,75 @@
+import React, { PureComponent } from 'react';
+import PropTypes from 'prop-types';
+import moment from 'moment';
+import { Animated } from 'react-native';
+import DateTimePicker from 'react-native-modal-datetime-picker';
+
+import Chip from 'apolloschurchapp/src/ui/Chip';
+
+import InputWrapper from '../InputWrapper';
+import FloatingLabel from '../FloatingLabel';
+
+const chipStyle = { marginTop: 5 };
+
+class DateInput extends PureComponent {
+  static propTypes = {
+    label: PropTypes.string,
+    placeholder: PropTypes.string,
+    value: PropTypes.any, // eslint-disable-line
+    displayValue: PropTypes.string,
+    onChange: PropTypes.func,
+    onChangeText: PropTypes.func,
+    onBlur: PropTypes.func,
+    error: PropTypes.any, // eslint-disable-line
+  };
+
+  state = {
+    isVisible: false,
+  };
+
+  handleOpen = () => this.setState({ isVisible: true });
+
+  handleClose = () => {
+    this.setState({ isVisible: false });
+    if (this.props.onBlur) this.props.onBlur();
+  };
+
+  handleConfirm = (value) => {
+    if (this.props.onChange) this.props.onChange(value);
+    if (this.props.onChangeText) {
+      this.props.onChangeText(moment(value).format('MM/DD/YYYY'));
+    }
+    this.handleClose();
+  };
+
+  render() {
+    let date = this.props.value;
+    if (typeof date === 'string') date = moment(date).toDate();
+    return (
+      <InputWrapper>
+        <Chip
+          style={chipStyle}
+          title={
+            this.props.displayValue ||
+            this.props.placeholder ||
+            this.props.label
+          }
+          onPress={this.handleOpen}
+        />
+        <DateTimePicker
+          date={date || new Date()}
+          isVisible={this.state.isVisible}
+          onConfirm={this.handleConfirm}
+          onCancel={this.handleClose}
+        />
+        {this.props.displayValue || this.props.placeholder ? (
+          <FloatingLabel animation={new Animated.Value(1)}>
+            {this.props.label}
+          </FloatingLabel>
+        ) : null}
+      </InputWrapper>
+    );
+  }
+}
+
+export default DateInput;
diff --git a/apolloschurchapp/src/ui/inputs/ErrorText.js b/apolloschurchapp/src/ui/inputs/ErrorText.js
new file mode 100644
index 0000000..3368ee0
--- /dev/null
+++ b/apolloschurchapp/src/ui/inputs/ErrorText.js
@@ -0,0 +1,9 @@
+import { H6 } from 'apolloschurchapp/src/ui/typography';
+import styled from 'apolloschurchapp/src/ui/styled';
+
+const ErrorText = styled(({ theme }) => ({
+  color: theme.colors.alert,
+  paddingTop: theme.sizing.baseUnit / 2,
+}))(H6);
+
+export default ErrorText;
diff --git a/apolloschurchapp/src/ui/inputs/FloatingLabel.js b/apolloschurchapp/src/ui/inputs/FloatingLabel.js
new file mode 100644
index 0000000..3e45f9b
--- /dev/null
+++ b/apolloschurchapp/src/ui/inputs/FloatingLabel.js
@@ -0,0 +1,90 @@
+import React, { PureComponent } from 'react';
+import PropTypes from 'prop-types';
+import { Animated, StyleSheet } from 'react-native';
+
+import { H6 } from 'apolloschurchapp/src/ui/typography';
+import styled from 'apolloschurchapp/src/ui/styled';
+
+export const LabelText = styled(
+  ({ theme }) => ({
+    color: theme.colors.text.secondary,
+    backgroundColor: 'transparent',
+    paddingVertical: theme.sizing.baseUnit / 4,
+  }),
+  'FloatingLabel.LabelText'
+)(H6);
+
+const styles = StyleSheet.create({
+  floatLabelView: {
+    position: 'absolute',
+    bottom: 0,
+    top: 0,
+    justifyContent: 'center',
+  },
+});
+
+class FloatingLabel extends PureComponent {
+  static propTypes = {
+    children: PropTypes.node,
+    animation: PropTypes.shape({
+      interpolate: PropTypes.func,
+    }),
+    scaleSize: PropTypes.number, // how much smaller to make label when focused
+    floatingOpacity: PropTypes.number,
+  };
+
+  static defaultProps = {
+    animation: new Animated.Value(0),
+    scaleSize: 0.8,
+    floatingOpacity: 0.8,
+  };
+
+  state = {
+    labelWidth: 0,
+    labelHeight: 0,
+  };
+
+  handleLayout = ({ nativeEvent: { layout } }) => {
+    this.setState({
+      labelWidth: layout.width,
+      labelHeight: layout.height,
+    });
+  };
+
+  render() {
+    const scaledWidth = this.state.labelWidth * (1.05 - this.props.scaleSize);
+    const sideScaledWidth = scaledWidth / 2;
+    const scale = this.props.animation.interpolate({
+      inputRange: [0, 1],
+      outputRange: [1, this.props.scaleSize],
+    });
+    const opacity = this.props.animation.interpolate({
+      inputRange: [0, 1],
+      outputRange: [1, this.props.floatingOpacity],
+    });
+    const translateY = this.props.animation.interpolate({
+      inputRange: [0, 1],
+      outputRange: [0, -(this.state.labelHeight * 0.7)],
+    });
+    const translateX = this.props.animation.interpolate({
+      inputRange: [0, 1],
+      outputRange: [0, -sideScaledWidth],
+    });
+    const wrapperStyles = {
+      transform: [{ scale }, { translateX }, { translateY }],
+      opacity,
+    };
+
+    return (
+      <Animated.View
+        pointerEvents="none"
+        onLayout={this.handleLayout}
+        style={[styles.floatLabelView, wrapperStyles]}
+      >
+        <LabelText>{this.props.children}</LabelText>
+      </Animated.View>
+    );
+  }
+}
+
+export default FloatingLabel;
diff --git a/apolloschurchapp/src/ui/inputs/InputAddon.js b/apolloschurchapp/src/ui/inputs/InputAddon.js
new file mode 100644
index 0000000..01e4ee7
--- /dev/null
+++ b/apolloschurchapp/src/ui/inputs/InputAddon.js
@@ -0,0 +1,21 @@
+import { View } from 'react-native';
+
+import styled from 'apolloschurchapp/src/ui/styled';
+
+const InputAddon = styled(
+  {
+    justifyContent: 'center',
+    alignItems: 'center',
+  },
+  'InputAddon'
+)(View);
+
+const AddonRow = styled(
+  {
+    flexDirection: 'row',
+    justifyContent: 'center',
+  },
+  'InputWrapper.Row'
+)(View);
+
+export { InputAddon as default, AddonRow };
diff --git a/apolloschurchapp/src/ui/inputs/InputUnderline.js b/apolloschurchapp/src/ui/inputs/InputUnderline.js
new file mode 100644
index 0000000..378a2b3
--- /dev/null
+++ b/apolloschurchapp/src/ui/inputs/InputUnderline.js
@@ -0,0 +1,62 @@
+import React from 'react';
+import { Animated, StyleSheet, View } from 'react-native';
+import PropTypes from 'prop-types';
+
+import styled from 'apolloschurchapp/src/ui/styled';
+
+const FocusedUnderline = styled(
+  ({ theme, hasError }) => ({
+    height: StyleSheet.hairlineWidth,
+    backgroundColor: hasError ? theme.colors.alert : theme.colors.primary,
+    bottom: 0,
+  }),
+  'InputUnderline.focused'
+)(View);
+
+const BluredUnderline = styled(
+  ({ theme }) => ({
+    height: StyleSheet.hairlineWidth,
+    backgroundColor: theme.colors.background.inactive,
+    bottom: -StyleSheet.hairlineWidth,
+  }),
+  'InputUnderline.blurred'
+)(View);
+
+const styles = StyleSheet.create({
+  wrapper: {
+    bottom: 0,
+    left: 0,
+    right: 0,
+  },
+});
+
+const InputUnderline = ({
+  animation = new Animated.Value(0),
+  hasError = false,
+}) => {
+  let scaleX = animation.interpolate({
+    inputRange: [0, 1],
+    outputRange: [0.0001, 1],
+  });
+  if (hasError) scaleX = 1;
+
+  const transform = [{ scaleX }];
+
+  return (
+    <View style={styles.wrapper}>
+      <BluredUnderline />
+      <Animated.View style={[styles.wrapper, { transform }]}>
+        <FocusedUnderline hasError={hasError} />
+      </Animated.View>
+    </View>
+  );
+};
+
+InputUnderline.propTypes = {
+  animation: PropTypes.shape({
+    interpolate: PropTypes.func,
+  }),
+  hasError: PropTypes.bool,
+};
+
+export default InputUnderline;
diff --git a/apolloschurchapp/src/ui/inputs/InputWrapper.js b/apolloschurchapp/src/ui/inputs/InputWrapper.js
new file mode 100644
index 0000000..fe23b94
--- /dev/null
+++ b/apolloschurchapp/src/ui/inputs/InputWrapper.js
@@ -0,0 +1,13 @@
+import { View } from 'react-native';
+
+import styled from 'apolloschurchapp/src/ui/styled';
+
+const InputWrapper = styled(
+  ({ theme, disabled }) => ({
+    marginVertical: theme.sizing.baseUnit,
+    ...(disabled ? { opacity: 0.5 } : {}),
+  }),
+  'InputWrapper'
+)(View);
+
+export default InputWrapper;
diff --git a/apolloschurchapp/src/ui/inputs/Picker/Picker.stories.js b/apolloschurchapp/src/ui/inputs/Picker/Picker.stories.js
new file mode 100644
index 0000000..79ce6b8
--- /dev/null
+++ b/apolloschurchapp/src/ui/inputs/Picker/Picker.stories.js
@@ -0,0 +1,15 @@
+import React from 'react';
+import { storiesOf } from '@storybook/react-native';
+
+import FlexedView from 'apolloschurchapp/src/ui/FlexedView';
+
+import Picker, { Item } from '.';
+
+storiesOf('Inputs', module).add('Picker', () => (
+  <FlexedView>
+    <Picker placeholder="Select a language..." label="Languages">
+      <Item label="Java" value="java" />
+      <Item label="JavaScript" value="js" />
+    </Picker>
+  </FlexedView>
+));
diff --git a/apolloschurchapp/src/ui/inputs/Picker/Picker.tests.js b/apolloschurchapp/src/ui/inputs/Picker/Picker.tests.js
new file mode 100644
index 0000000..f2f66a1
--- /dev/null
+++ b/apolloschurchapp/src/ui/inputs/Picker/Picker.tests.js
@@ -0,0 +1,48 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+import { Text, Animated } from 'react-native';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import Picker, { Item, Picker as UnwrappedPicker } from '.';
+
+describe('The Picker Input component', () => {
+  it('should render correctly', () => {
+    const tree = renderer.create(
+      <Providers>
+        <Picker
+          placeholder="Select a language..."
+          label="Languages"
+          displayValue="Display Value"
+          prefix={<Text>Hello there!</Text>}
+          suffix={<Text>Goodbye now.</Text>}
+        >
+          <Item label="Java" value="java" />
+          <Item label="JavaScript" value="js" />
+        </Picker>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+
+  it('focuses and blurs', () => {
+    const focus = jest.fn();
+    const blur = jest.fn();
+    const tree = renderer.create(
+      <Providers>
+        <UnwrappedPicker
+          focusAnimation={new Animated.Value(0)}
+          onFocus={focus}
+          onBlur={blur}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+    tree.root.findByType(UnwrappedPicker).instance.handleOnPress();
+    expect(tree).toMatchSnapshot();
+    expect(focus).toHaveBeenCalled();
+    tree.root.findByType(UnwrappedPicker).instance.handleOnPress();
+    expect(tree).toMatchSnapshot();
+    expect(blur).toHaveBeenCalled();
+  });
+});
diff --git a/apolloschurchapp/src/ui/inputs/Picker/PickerList.js b/apolloschurchapp/src/ui/inputs/Picker/PickerList.js
new file mode 100644
index 0000000..d3c846f
--- /dev/null
+++ b/apolloschurchapp/src/ui/inputs/Picker/PickerList.js
@@ -0,0 +1,62 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import { Modal, StyleSheet, View, Picker as NativePicker } from 'react-native';
+
+import styled from 'apolloschurchapp/src/ui/styled';
+import { ButtonLink } from 'apolloschurchapp/src/ui/Button';
+
+const StyledPicker = styled(
+  ({ theme }) => ({
+    borderTopWidth: StyleSheet.hairlineWidth,
+    borderTopColor: theme.colors.background.inactive,
+  }),
+  'Inputs.Picker.List'
+)(NativePicker);
+
+const PickerKeyboardView = styled(
+  ({ theme }) => ({
+    backgroundColor: theme.colors.background.paper,
+    position: 'absolute',
+    bottom: 0,
+    left: 0,
+    right: 0,
+    borderTopColor: theme.colors.shadows.default,
+    borderTopWidth: StyleSheet.hairlineWidth,
+  }),
+  'Inputs.Picker.List.Keyboard'
+)(View);
+
+const Toolbar = styled(
+  ({ theme }) => ({
+    alignItems: 'flex-end',
+    padding: theme.sizing.baseUnit / 2,
+    backgroundColor: theme.colors.background.accent,
+  }),
+  'Inputs.Picker.List.Toolbar'
+)(View);
+
+const PickerList = ({ focused, onRequestClose, value, ...pickerProps }) => (
+  <Modal
+    visible={focused}
+    onRequestClose={onRequestClose}
+    animationType="slide"
+    transparent
+  >
+    <PickerKeyboardView>
+      <Toolbar>
+        <ButtonLink onPress={onRequestClose}>Done</ButtonLink>
+      </Toolbar>
+      <StyledPicker selectedValue={value} {...pickerProps} />
+    </PickerKeyboardView>
+  </Modal>
+);
+
+PickerList.propTypes = {
+  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
+  children: PropTypes.node,
+  focused: PropTypes.bool,
+  onRequestClose: PropTypes.func,
+  mode: PropTypes.string,
+};
+
+export default PickerList;
diff --git a/apolloschurchapp/src/ui/inputs/Picker/index.android.js b/apolloschurchapp/src/ui/inputs/Picker/index.android.js
new file mode 100644
index 0000000..8703f8c
--- /dev/null
+++ b/apolloschurchapp/src/ui/inputs/Picker/index.android.js
@@ -0,0 +1,34 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import { Animated, Picker as NativePicker } from 'react-native';
+import { mapProps } from 'recompose';
+
+import InputUnderline from '../InputUnderline';
+import InputWrapper from '../InputWrapper';
+import FloatingLabel from '../FloatingLabel';
+
+const MappedNativePicker = mapProps(
+  ({ placeholder: prompt, value: selectedValue, ...otherProps }) => ({
+    prompt,
+    selectedValue,
+    ...otherProps,
+  })
+)(NativePicker);
+
+const Picker = ({ wrapperStyle, ...props }) => (
+  <InputWrapper style={wrapperStyle}>
+    <MappedNativePicker {...props} />
+    <FloatingLabel animation={new Animated.Value(1)}>
+      {props.label}
+    </FloatingLabel>
+    <InputUnderline />
+  </InputWrapper>
+);
+
+Picker.propTypes = {
+  label: PropTypes.string,
+  wrapperStyle: PropTypes.any, // eslint-disable-line
+};
+
+export default Picker;
+export const { Item } = NativePicker;
diff --git a/apolloschurchapp/src/ui/inputs/Picker/index.js b/apolloschurchapp/src/ui/inputs/Picker/index.js
new file mode 100644
index 0000000..a559d8c
--- /dev/null
+++ b/apolloschurchapp/src/ui/inputs/Picker/index.js
@@ -0,0 +1,116 @@
+import React, { PureComponent } from 'react';
+import PropTypes from 'prop-types';
+import {
+  Animated,
+  Picker as NativePicker,
+  TouchableOpacity,
+} from 'react-native';
+
+import styled from 'apolloschurchapp/src/ui/styled';
+import { H6 } from 'apolloschurchapp/src/ui/typography';
+import Icon from 'apolloschurchapp/src/ui/Icon';
+
+import FloatingLabel from '../FloatingLabel';
+import InputUnderline from '../InputUnderline';
+import InputWrapper from '../InputWrapper';
+import withFocusAnimation from '../withFocusAnimation';
+import InputAddon, { AddonRow } from '../InputAddon';
+import withInputControlStyles from '../withInputControlStyles';
+
+import PickerList from './PickerList';
+
+const StyledH6 = withInputControlStyles(H6);
+const Placeholder = styled(
+  ({ theme }) => ({
+    color: theme.colors.text.tertiary,
+  }),
+  'Inputs.Picker.Placeholder'
+)(H6);
+
+export class Picker extends PureComponent {
+  static propTypes = {
+    placeholder: PropTypes.string,
+    displayValue: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
+    focusAnimation: PropTypes.any, // eslint-disable-line
+    prefix: PropTypes.node,
+    suffix: PropTypes.node,
+    onFocus: PropTypes.func,
+    onBlur: PropTypes.func,
+    label: PropTypes.string,
+    value: PropTypes.any, // eslint-disable-line
+    wrapperStyle: PropTypes.any, // eslint-disable-line
+    style: PropTypes.any, // eslint-disable-line
+  };
+
+  state = {
+    focused: false,
+  };
+
+  handleOnPress = () => {
+    this.setState(
+      (previousState) => ({ focused: !previousState.focused }),
+      () => {
+        if (this.state.focused) {
+          this.props.onFocus();
+        } else {
+          this.props.onBlur();
+        }
+      }
+    );
+  };
+
+  render() {
+    const {
+      displayValue,
+      focusAnimation, // from createInput
+      placeholder,
+      label,
+      value,
+      style,
+      wrapperStyle,
+      ...pickerProps
+    } = this.props;
+    const rotate = focusAnimation.interpolate({
+      inputRange: [0, 1],
+      outputRange: ['0deg', '180deg'],
+    });
+    const labelAnimation = value ? new Animated.Value(1) : focusAnimation;
+
+    const animatedStyle = { opacity: labelAnimation, flex: 1 };
+
+    return (
+      <InputWrapper style={wrapperStyle}>
+        <TouchableOpacity onPress={this.handleOnPress}>
+          <AddonRow>
+            <Animated.View style={animatedStyle}>
+              <StyledH6 style={style}>
+                {displayValue || <Placeholder>{placeholder}</Placeholder>}
+              </StyledH6>
+            </Animated.View>
+            <InputAddon>
+              <Animated.View style={{ transform: [{ rotate }] }}>
+                <Icon name="arrow-down" size={18} />
+              </Animated.View>
+            </InputAddon>
+          </AddonRow>
+        </TouchableOpacity>
+
+        <PickerList
+          {...pickerProps}
+          value={value}
+          focused={this.state.focused}
+          onRequestClose={this.handleOnPress}
+        />
+
+        <FloatingLabel animation={labelAnimation}>{label}</FloatingLabel>
+        <InputUnderline animation={focusAnimation} />
+      </InputWrapper>
+    );
+  }
+}
+
+const EnhancedComponent = withFocusAnimation(Picker);
+EnhancedComponent.propTypes = Picker.propTypes;
+
+export default EnhancedComponent;
+export const { Item } = NativePicker;
diff --git a/apolloschurchapp/src/ui/inputs/Radio/RadioButton.js b/apolloschurchapp/src/ui/inputs/Radio/RadioButton.js
new file mode 100644
index 0000000..d45d6ee
--- /dev/null
+++ b/apolloschurchapp/src/ui/inputs/Radio/RadioButton.js
@@ -0,0 +1,73 @@
+import React, { PureComponent } from 'react';
+import { View, TouchableWithoutFeedback } from 'react-native';
+import PropTypes from 'prop-types';
+import { compose, getContext } from 'recompose';
+import isString from 'lodash/isString';
+
+import { H6 } from 'apolloschurchapp/src/ui/typography';
+import styled from 'apolloschurchapp/src/ui/styled';
+
+import RadioButtonIndicator from './RadioButtonIndicator';
+
+const Row = styled(({ theme }) => ({
+  padding: theme.sizing.baseUnit / 2,
+  borderBottomWidth: 1,
+  borderBottomColor: theme.colors.background.accent,
+  flexDirection: 'row',
+  justifyContent: 'space-between',
+  alignItems: 'center',
+}))(View);
+
+class RadioButton extends PureComponent {
+  static propTypes = {
+    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,
+    currentValue: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
+    Label: PropTypes.oneOfType([
+      PropTypes.string,
+      PropTypes.element,
+      PropTypes.func,
+    ]),
+    onSelectValue: PropTypes.func,
+    RadioButtonIndicator: PropTypes.oneOfType([
+      PropTypes.element,
+      PropTypes.func,
+    ]),
+  };
+
+  static defaultProps = {
+    Label: '',
+    onSelectValue() {},
+    RadioButtonIndicator,
+  };
+
+  handleOnPress = () => {
+    this.props.onSelectValue(this.props.value);
+  };
+
+  render() {
+    const Indicator = this.props.RadioButtonIndicator;
+    return (
+      <TouchableWithoutFeedback onPress={this.handleOnPress}>
+        <Row>
+          <Indicator
+            isSelected={this.props.currentValue === this.props.value}
+          />
+          {isString(this.props.Label) ? (
+            <H6>{this.props.Label}</H6>
+          ) : (
+            <this.props.Label />
+          )}
+        </Row>
+      </TouchableWithoutFeedback>
+    );
+  }
+}
+
+const enhance = compose(
+  getContext({
+    onSelectValue: PropTypes.func,
+    currentValue: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
+  })
+);
+
+export default enhance(RadioButton);
diff --git a/apolloschurchapp/src/ui/inputs/Radio/RadioButtonIndicator.js b/apolloschurchapp/src/ui/inputs/Radio/RadioButtonIndicator.js
new file mode 100644
index 0000000..a3d0576
--- /dev/null
+++ b/apolloschurchapp/src/ui/inputs/Radio/RadioButtonIndicator.js
@@ -0,0 +1,43 @@
+import React, { PureComponent } from 'react';
+import { View } from 'react-native';
+import PropTypes from 'prop-types';
+
+import styled from 'apolloschurchapp/src/ui/styled';
+
+const OutlinedCircle = styled(({ theme, isSelected }) => ({
+  height: 20,
+  width: 20,
+  borderRadius: 99,
+  borderWidth: 2,
+  borderColor: isSelected ? theme.colors.primary : theme.colors.darkTertiary,
+  alignItems: 'center',
+  justifyContent: 'center',
+}))(View);
+
+const FilledCircle = styled(({ theme }) => ({
+  height: 12,
+  width: 12,
+  borderRadius: 99,
+  backgroundColor: theme.colors.primary,
+}))(View);
+
+export default class RadioButtonIndicator extends PureComponent {
+  static propTypes = {
+    isSelected: PropTypes.bool,
+  };
+
+  static defaultProps = {
+    isSelected: false,
+  };
+
+  render() {
+    if (this.props.isSelected) {
+      return (
+        <OutlinedCircle isSelected>
+          <FilledCircle />
+        </OutlinedCircle>
+      );
+    }
+    return <OutlinedCircle />;
+  }
+}
diff --git a/apolloschurchapp/src/ui/inputs/Radio/index.js b/apolloschurchapp/src/ui/inputs/Radio/index.js
new file mode 100644
index 0000000..fc8a94e
--- /dev/null
+++ b/apolloschurchapp/src/ui/inputs/Radio/index.js
@@ -0,0 +1,66 @@
+import React, { Component } from 'react';
+import { View } from 'react-native';
+import PropTypes from 'prop-types';
+
+import RadioButton from './RadioButton';
+
+export default class Radio extends Component {
+  static Button = RadioButton;
+
+  static propTypes = {
+    children: PropTypes.node,
+    onChange: PropTypes.func,
+    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
+    style: PropTypes.any, // eslint-disable-line
+  };
+
+  static childContextTypes = {
+    onSelectValue: PropTypes.func,
+    currentValue: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
+  };
+
+  static defaultProps = {
+    children: null,
+    onChange() {},
+    value: null,
+  };
+
+  state = {
+    value: this.props.value,
+  };
+
+  getChildContext() {
+    return {
+      onSelectValue: this.selectValue,
+      currentValue: this.state.value,
+    };
+  }
+
+  componentWillReceiveProps(nextProps) {
+    if (nextProps.value !== this.props.value) {
+      this.setState(
+        {
+          value: nextProps.value,
+        },
+        this.notifyValueChanged
+      );
+    }
+  }
+
+  selectValue = (value) => {
+    this.setState(
+      {
+        value,
+      },
+      this.notifyValueChanged
+    );
+  };
+
+  notifyValueChanged = () => {
+    this.props.onChange(this.state.value);
+  };
+
+  render() {
+    return <View style={this.props.style}>{this.props.children}</View>;
+  }
+}
diff --git a/apolloschurchapp/src/ui/inputs/Switch/Switch.stories.js b/apolloschurchapp/src/ui/inputs/Switch/Switch.stories.js
new file mode 100644
index 0000000..724225a
--- /dev/null
+++ b/apolloschurchapp/src/ui/inputs/Switch/Switch.stories.js
@@ -0,0 +1,12 @@
+import React from 'react';
+import { storiesOf } from '@storybook/react-native';
+
+import FlexedView from 'apolloschurchapp/src/ui/FlexedView';
+
+import Switch from '.';
+
+storiesOf('Inputs', module).add('Switch', () => (
+  <FlexedView>
+    <Switch label="Some label text" />
+  </FlexedView>
+));
diff --git a/apolloschurchapp/src/ui/inputs/Switch/Switch.tests.js b/apolloschurchapp/src/ui/inputs/Switch/Switch.tests.js
new file mode 100644
index 0000000..b8a7e7a
--- /dev/null
+++ b/apolloschurchapp/src/ui/inputs/Switch/Switch.tests.js
@@ -0,0 +1,17 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import Switch from '.';
+
+describe('The Picker Input component', () => {
+  it('should render correctly', () => {
+    const tree = renderer.create(
+      <Providers>
+        <Switch label="Some label text" />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/inputs/Switch/index.js b/apolloschurchapp/src/ui/inputs/Switch/index.js
new file mode 100644
index 0000000..b6ec5ac
--- /dev/null
+++ b/apolloschurchapp/src/ui/inputs/Switch/index.js
@@ -0,0 +1,78 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import { compose, pure } from 'recompose';
+import { Platform, Switch, View } from 'react-native';
+
+import { withTheme } from 'apolloschurchapp/src/ui/theme';
+import FlexedView from 'apolloschurchapp/src/ui/FlexedView';
+import styled from 'apolloschurchapp/src/ui/styled';
+import Touchable from 'apolloschurchapp/src/ui/Touchable';
+
+import InputAddon, { AddonRow } from '../InputAddon';
+import { LabelText } from '../FloatingLabel';
+import InputWrapper from '../InputWrapper';
+import { withInputControlViewStyles } from '../withInputControlStyles';
+import ErrorText from '../ErrorText';
+
+const ControlWrapper = withInputControlViewStyles(View);
+
+const enhance = compose(
+  pure,
+  withTheme(({ theme }) => ({
+    onTintColor: theme.colors.primary,
+    activeTrackColor: theme.colors.primary,
+    trackColor: theme.colors.background.inactive,
+    tintColor: theme.colors.background.inactive,
+    activeThumbColor: theme.colors.background.paper,
+    ...Platform.select({
+      android: { thumbTintColor: theme.colors.background.paper },
+    }),
+  }))
+);
+
+const LabelContainer = styled({
+  justifyContent: 'center',
+})(FlexedView);
+
+const Text = enhance(
+  ({
+    label,
+    prefix,
+    error,
+    wrapperStyle,
+    onValueChange,
+    value,
+    ...switchProps
+  }) => (
+    <InputWrapper style={wrapperStyle}>
+      <ControlWrapper>
+        <AddonRow>
+          <InputAddon>{prefix}</InputAddon>
+          <LabelContainer>
+            <Touchable onPress={() => onValueChange(!value)}>
+              <LabelText>{label}</LabelText>
+            </Touchable>
+          </LabelContainer>
+          <InputAddon>
+            <Switch
+              value={value}
+              onValueChange={onValueChange}
+              {...switchProps}
+            />
+          </InputAddon>
+        </AddonRow>
+      </ControlWrapper>
+
+      {error && typeof error === 'string' ? (
+        <ErrorText>{error}</ErrorText>
+      ) : null}
+    </InputWrapper>
+  )
+);
+
+Text.propTypes = {
+  label: PropTypes.node,
+  error: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),
+};
+
+export default Text;
diff --git a/apolloschurchapp/src/ui/inputs/Text/Text.stories.js b/apolloschurchapp/src/ui/inputs/Text/Text.stories.js
new file mode 100644
index 0000000..ece7b9e
--- /dev/null
+++ b/apolloschurchapp/src/ui/inputs/Text/Text.stories.js
@@ -0,0 +1,33 @@
+import React from 'react';
+import { storiesOf } from '@storybook/react-native';
+
+import Icon from 'apolloschurchapp/src/ui/Icon';
+import FlexedView from 'apolloschurchapp/src/ui/FlexedView';
+
+import Text from '.';
+
+storiesOf('Inputs', module).add('Text', () => (
+  <FlexedView>
+    <Text editable label="Some label text" placeholder="Some placeholder" />
+    <Text
+      editable
+      type="password"
+      label="Password"
+      placeholder="Some placeholder"
+      suffix={<Icon name="lock" size={18} />}
+    />
+    <Text editable type="email" label="Email" placeholder="Some placeholder" />
+    <Text
+      editable
+      type="numeric"
+      label="Numeric"
+      placeholder="Some placeholder"
+    />
+    <Text
+      editable
+      type="phone"
+      label="Phone Number"
+      placeholder="Some placeholder"
+    />
+  </FlexedView>
+));
diff --git a/apolloschurchapp/src/ui/inputs/Text/Text.tests.js b/apolloschurchapp/src/ui/inputs/Text/Text.tests.js
new file mode 100644
index 0000000..10c0300
--- /dev/null
+++ b/apolloschurchapp/src/ui/inputs/Text/Text.tests.js
@@ -0,0 +1,70 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+import Icon from 'apolloschurchapp/src/ui/Icon';
+
+import Text from '.';
+
+describe('The Text Input component', () => {
+  it('should render correctly', () => {
+    const tree = renderer.create(
+      <Providers>
+        <Text editable label="Some label text" placeholder="Some placeholder" />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render as a password field with an icon', () => {
+    const tree = renderer.create(
+      <Providers>
+        <Text
+          editable
+          type="password"
+          label="Password"
+          placeholder="Some placeholder"
+          suffix={<Icon name="lock" size={18} />}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render as an email field', () => {
+    const tree = renderer.create(
+      <Providers>
+        <Text
+          editable
+          type="email"
+          label="Email"
+          placeholder="Some placeholder"
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render as a numeric field', () => {
+    const tree = renderer.create(
+      <Providers>
+        <Text
+          editable
+          type="numeric"
+          label="Numeric"
+          placeholder="Some placeholder"
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render as a phone number field', () => {
+    const tree = renderer.create(
+      <Providers>
+        <Text
+          type="phone"
+          label="Phone Number"
+          placeholder="Some placeholder"
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/inputs/Text/index.js b/apolloschurchapp/src/ui/inputs/Text/index.js
new file mode 100644
index 0000000..4264b20
--- /dev/null
+++ b/apolloschurchapp/src/ui/inputs/Text/index.js
@@ -0,0 +1,133 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import { get } from 'lodash';
+import { compose, withProps, pure } from 'recompose';
+import { View, Platform, TextInput, Animated } from 'react-native';
+import Color from 'color';
+
+import { withTheme } from 'apolloschurchapp/src/ui/theme';
+
+import FloatingLabel from '../FloatingLabel';
+import InputUnderline from '../InputUnderline';
+import InputWrapper from '../InputWrapper';
+import ErrorText from '../ErrorText';
+import withFocusAnimation from '../withFocusAnimation';
+import InputAddon, { AddonRow } from '../InputAddon';
+import { textStyle } from '../withInputControlStyles';
+
+const propsForInputType = {
+  password: {
+    secureTextEntry: true,
+    autoCapitalize: 'none',
+    autoCorrect: false,
+  },
+  email: {
+    keyboardType: 'email-address',
+    autoCapitalize: 'none',
+    autoCorrect: false,
+  },
+  numeric: {
+    keyboardType: 'numeric',
+  },
+  numericKeyboard: {
+    ...Platform.select({
+      ios: { keyboardType: 'numeric' },
+      android: { keyboardType: 'numeric' },
+      web: { type: 'text' },
+    }),
+  },
+  phone: {
+    keyboardType: 'phone-pad',
+  },
+  date: {
+    ...Platform.select({
+      ios: { keyboardType: 'numeric' },
+      android: { keyboardType: 'numeric' },
+      web: { type: 'date' },
+    }),
+  },
+};
+
+const enhance = compose(
+  withTheme(),
+  pure,
+  withFocusAnimation,
+  withProps(({ type, ...props }) => ({
+    ...get(propsForInputType, type, {}),
+    ...props,
+  }))
+);
+
+const Text = enhance(
+  ({
+    label,
+    prefix,
+    suffix,
+    value,
+    wrapperStyle,
+    error,
+    disabled = false,
+    theme,
+    inputRef,
+    focusAnimation: focusAnimationInput, // from withFocusAnimation
+    ...textInputProps
+  }) => {
+    const focusAnimation =
+      value || !label ? new Animated.Value(1) : focusAnimationInput;
+
+    const animatedStyle = { opacity: focusAnimation, flex: 1 };
+
+    return (
+      <InputWrapper style={wrapperStyle} disabled={disabled}>
+        <View>
+          <AddonRow>
+            <InputAddon>{prefix}</InputAddon>
+            <Animated.View style={animatedStyle}>
+              <TextInput
+                style={textStyle({ theme })}
+                ref={inputRef}
+                placeholderTextColor={Color(theme.colors.text.primary)
+                  .fade(theme.alpha.low)
+                  .string()}
+                {...textInputProps}
+                editable={!disabled}
+                value={`${value || ''}`}
+              />
+            </Animated.View>
+            <InputAddon>{suffix}</InputAddon>
+          </AddonRow>
+
+          <FloatingLabel animation={focusAnimation}>{label}</FloatingLabel>
+          <InputUnderline
+            animation={focusAnimation}
+            hasError={Boolean(error)}
+          />
+        </View>
+
+        {error && typeof error === 'string' ? (
+          <ErrorText>{error}</ErrorText>
+        ) : null}
+      </InputWrapper>
+    );
+  }
+);
+
+Text.defaultProps = {
+  returnKeyType: 'done',
+  underlineColorAndroid: 'transparent',
+};
+
+Text.propTypes = {
+  disabled: PropTypes.bool,
+  prefix: PropTypes.node,
+  suffix: PropTypes.node,
+  label: PropTypes.string,
+  value: PropTypes.any, // eslint-disable-line
+  wrapperStyle: PropTypes.any, // eslint-disable-line
+  returnKeyType: PropTypes.string,
+  error: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),
+  underlineColorAndroid: PropTypes.string,
+  inputRef: PropTypes.func,
+};
+
+export default Text;
diff --git a/apolloschurchapp/src/ui/inputs/index.js b/apolloschurchapp/src/ui/inputs/index.js
new file mode 100644
index 0000000..d8ada5e
--- /dev/null
+++ b/apolloschurchapp/src/ui/inputs/index.js
@@ -0,0 +1,4 @@
+export Picker, { Item as PickerItem } from './Picker';
+export Switch from './Switch';
+export Text from './Text';
+export DateInput from './DateInput';
diff --git a/apolloschurchapp/src/ui/inputs/withFocusAnimation.js b/apolloschurchapp/src/ui/inputs/withFocusAnimation.js
new file mode 100644
index 0000000..5afa6d0
--- /dev/null
+++ b/apolloschurchapp/src/ui/inputs/withFocusAnimation.js
@@ -0,0 +1,61 @@
+import React, { PureComponent } from 'react';
+import { Animated, Easing } from 'react-native';
+import PropTypes from 'prop-types';
+
+// helper HOC to wrap an Input in a floating label and animated underline
+const withFocusAnimation = (Component) =>
+  class WrappedInput extends PureComponent {
+    focusAnimation = new Animated.Value(0);
+
+    static propTypes = {
+      focusAnimationDuration: PropTypes.number,
+      focusAnimationEasing: PropTypes.func,
+      onFocus: PropTypes.func,
+      onBlur: PropTypes.func,
+      value: PropTypes.any, // eslint-disable-line
+    };
+
+    static defaultProps = {
+      focusAnimationDuration: 450,
+      focusAnimationEasing: Easing.in(Easing.bezier(0.23, 1, 0.32, 1)),
+    };
+
+    playAnimation = (toValue) => {
+      Animated.timing(this.focusAnimation, {
+        toValue,
+        duration: this.props.focusAnimationDuration,
+        easing: this.props.focusAnimationEasing,
+        // useNativeDriver: true,
+      }).start();
+    };
+
+    handleFocus = (...args) => {
+      if (this.props.onFocus) this.props.onFocus(...args);
+      this.focused = true;
+      this.playAnimation(1);
+    };
+
+    handleBlur = (event, ...other) => {
+      if (this.props.onBlur) this.props.onBlur(event, ...other);
+      this.focused = false;
+      this.playAnimation(0);
+    };
+
+    render() {
+      const {
+        focusAnimationDuration,
+        focusAnimationEasing,
+        ...otherProps
+      } = this.props;
+      return (
+        <Component
+          {...otherProps}
+          onFocus={this.handleFocus}
+          onBlur={this.handleBlur}
+          focusAnimation={this.focusAnimation}
+        />
+      );
+    }
+  };
+
+export default withFocusAnimation;
diff --git a/apolloschurchapp/src/ui/inputs/withInputControlStyles.js b/apolloschurchapp/src/ui/inputs/withInputControlStyles.js
new file mode 100644
index 0000000..8dc7e0d
--- /dev/null
+++ b/apolloschurchapp/src/ui/inputs/withInputControlStyles.js
@@ -0,0 +1,19 @@
+import styled from 'apolloschurchapp/src/ui/styled';
+
+export const baseStyle = ({ theme }) => ({
+  paddingVertical: theme.sizing.baseUnit / 4,
+  height: 30 + theme.sizing.baseUnit / 2,
+});
+
+export const textStyle = ({ theme }) => ({
+  ...baseStyle({ theme }),
+  paddingVertical: 0,
+  fontSize: theme.helpers.rem(0.875),
+  fontFamily: theme.typography.sans.bold.default,
+  color: theme.colors.text.primary,
+});
+
+const withInputControlTextStyles = styled(textStyle, 'Input.Control');
+const withInputControlViewStyles = styled(baseStyle);
+
+export { withInputControlTextStyles as default, withInputControlViewStyles };
diff --git a/apolloschurchapp/src/ui/isLoading.js b/apolloschurchapp/src/ui/isLoading.js
new file mode 100644
index 0000000..7fc3c37
--- /dev/null
+++ b/apolloschurchapp/src/ui/isLoading.js
@@ -0,0 +1,21 @@
+import { branch, getContext, withContext } from 'recompose';
+import PropTypes from 'prop-types';
+
+// Both of these HOCs deal with context, therefore they should be used
+// above "pure" in a recompose `compose` chain.
+
+// Checks if the component has an "isLoading" prop.
+// If it doesn't it, it passes in context.
+// This makes easy to build components that respond to either props
+// or context for rendering placeholder / loading state.
+export const getIsLoading = branch(
+  (props) => !Object.hasOwnProperty.call(props, 'isLoading'),
+  getContext({ isLoading: PropTypes.bool })
+);
+
+// Allows a component to accept an "isLoading" prop to pass down
+// into context.
+export const withIsLoading = withContext(
+  { isLoading: PropTypes.bool },
+  ({ isLoading }) => ({ isLoading })
+);
diff --git a/apolloschurchapp/src/ui/styled/createStyleSheet.js b/apolloschurchapp/src/ui/styled/createStyleSheet.js
new file mode 100644
index 0000000..933bbb7
--- /dev/null
+++ b/apolloschurchapp/src/ui/styled/createStyleSheet.js
@@ -0,0 +1,45 @@
+import { StyleSheet } from 'react-native';
+import { flatten } from 'lodash';
+
+export const cachedStyles = {};
+export const styleHasher = JSON.stringify; // todo: how bad is this?
+
+// Uses cached or generates a new StyleSheet for a given style prop
+const createStyleSheet = (stylesToGenerate) => {
+  let styles = flatten([stylesToGenerate]); // Need to make sure we're working with a flat array
+  const styleSheet = {}; // passed to StyleSheet.create later
+
+  // Load style from cache or add style to stylesheet
+  styles.forEach((style, index) => {
+    if (typeof style !== 'object' || !style) return;
+    const hash = styleHasher(style);
+    if (cachedStyles[hash]) {
+      styles[index] = cachedStyles[hash];
+    } else {
+      styleSheet[`${index}`] = style;
+    }
+  });
+
+  if (Object.keys(styleSheet).length) {
+    // Generate the new stylesheet
+    const generatedStyleSheet = StyleSheet.create(styleSheet);
+
+    // Process the generated stylesheet
+    Object.keys(generatedStyleSheet).forEach((key) => {
+      const index = parseInt(key, 0);
+      const generatedStyle = generatedStyleSheet[key];
+      const hash = styleHasher(styles[index]);
+
+      // add generated style to cache
+      cachedStyles[hash] = generatedStyle;
+
+      // swap generated style into result list
+      styles[index] = generatedStyle;
+    });
+  }
+
+  if (styles.length === 1) styles = styles[0]; // eslint-disable-line
+  return styles;
+};
+
+export default createStyleSheet;
diff --git a/apolloschurchapp/src/ui/styled/createStyleSheet.tests.js b/apolloschurchapp/src/ui/styled/createStyleSheet.tests.js
new file mode 100644
index 0000000..34950f3
--- /dev/null
+++ b/apolloschurchapp/src/ui/styled/createStyleSheet.tests.js
@@ -0,0 +1,28 @@
+import React from 'react';
+import { View } from 'react-native';
+import renderer from 'react-test-renderer';
+
+import createStyleSheet, { cachedStyles } from './createStyleSheet';
+
+describe('the createStyleSheet function', () => {
+  it('returns styles that work on components', () => {
+    const style = createStyleSheet({ backgroundColor: 'red' });
+    const tree = renderer.create(<View style={style} />);
+    expect(tree).toMatchSnapshot();
+  });
+  it('uses a style cache when using same style twice', () => {
+    const style = { backgroundColor: 'red' };
+    const a = createStyleSheet(style);
+    const b = createStyleSheet(style);
+    expect(a).toEqual(b);
+    expect(Object.keys(cachedStyles)).toHaveLength(1);
+  });
+  it('doesnt fail when passed an already generated style', () => {
+    const style = createStyleSheet(0); // simulating StyleSheet.create() used elsewhere
+    expect(style).toEqual(0);
+  });
+  it('returns a single style if possible', () => {
+    const style = createStyleSheet([{ backgroundColor: 'red' }]);
+    expect(Array.isArray(style)).toBeFalsy();
+  });
+});
diff --git a/apolloschurchapp/src/ui/styled/index.js b/apolloschurchapp/src/ui/styled/index.js
new file mode 100644
index 0000000..376f9b9
--- /dev/null
+++ b/apolloschurchapp/src/ui/styled/index.js
@@ -0,0 +1,74 @@
+import { withPropsOnChange, compose, mapProps } from 'recompose';
+import { isEqual, get } from 'lodash';
+
+import { withTheme } from 'apolloschurchapp/src/ui/theme';
+
+import mergeStyles from './mergeStyles';
+import createStyleSheet from './createStyleSheet';
+
+// HOC to make composing component style easy.
+// Use similar to how you'd use `styled` in styled-components:
+// StyledView = styled({ backgroundColor: 'red' })(View)
+//
+// Can base style off of props:
+// StyledView = styled((props) => ({ backgroundColor: props.color }))(View)
+//
+// Or theme:
+// StyledView = styled(({ theme, ...ownProps }) => ({ backgroundColor: theme.primaryColor }))(View)
+//
+// Also allows for style overriding:
+// <StyledView style={{ borderColor: 'red' }} />
+//
+// Or using with ReactNative.StyleSheet:
+// const styles = StyleSheet.create({ myStyle: { backgroundColor: 'red' }});
+// StyledView = styled(styles.myStyle)(View)
+//
+// However - `styled` uses ReactNative.StyleSheet under the hood, so no need to create
+// separate stylesheets:
+// StyledView = styled((props) => ({ backgroundColor: props.color }))(View)
+// Will create a stylesheet for { backgroundColor: props.color } internally and cache it!
+
+// Generates a style object from a given styleInput.
+// styleInput is the argument passed to `styled`
+const getStyleLiteralFromStyledInput = (
+  styleInput,
+  { ownProps = {}, theme = {} }
+) => {
+  let generatedStyle = styleInput;
+  if (typeof generatedStyle === 'function')
+    generatedStyle = generatedStyle({ theme, ...ownProps });
+  return generatedStyle;
+};
+
+const styled = (styleInput, fqn) =>
+  compose(
+    mapProps((props) => ({ ownProps: props })),
+    withTheme(({ theme }) => ({ theme })),
+    withPropsOnChange(
+      // Only re-eval styles if style prop changes, or the generated style from
+      // styleInput is different. Both of these checks should be exteremely cheap.
+      (props, nextProps) =>
+        props.ownProps.style !== nextProps.ownProps.style ||
+        !isEqual(
+          getStyleLiteralFromStyledInput(styleInput, props),
+          getStyleLiteralFromStyledInput(styleInput, nextProps)
+        ),
+      ({ ownProps, theme }) => {
+        let style = getStyleLiteralFromStyledInput(styleInput, {
+          ownProps,
+          theme,
+        });
+
+        const themeOverrides = fqn ? get(theme, `overrides['${fqn}']`, {}) : {};
+        const { style: ownPropsStyle = {} } = ownProps;
+
+        style = mergeStyles(style, themeOverrides, ownPropsStyle);
+        style = createStyleSheet(style);
+
+        return { style };
+      }
+    ),
+    mapProps(({ ownProps, style }) => ({ ...ownProps, style }))
+  );
+
+export default styled;
diff --git a/apolloschurchapp/src/ui/styled/mergeStyles.js b/apolloschurchapp/src/ui/styled/mergeStyles.js
new file mode 100644
index 0000000..d068b56
--- /dev/null
+++ b/apolloschurchapp/src/ui/styled/mergeStyles.js
@@ -0,0 +1,35 @@
+import { flattenDeep } from 'lodash';
+
+// Merges two or more styles into one style object or array
+const mergeStyles = (...stylesToMerge) =>
+  flattenDeep(stylesToMerge).reduce((accumulatedStyle, currentStyle) => {
+    let style = accumulatedStyle;
+    const styleRight = currentStyle;
+
+    if (!styleRight && typeof styleRight !== 'number') return accumulatedStyle;
+
+    // both styles are objects, we should turn them into a single object:
+    if (
+      typeof style === 'object' &&
+      !Array.isArray(style) &&
+      !Array.isArray(styleRight) &&
+      typeof styleRight === 'object'
+    ) {
+      style = Object.assign({}, style, styleRight);
+
+      // styles can't be merged automatically, result to joining them in an array
+    } else {
+      if (!Array.isArray(style)) {
+        style = [style];
+      }
+
+      if (Array.isArray(styleRight)) {
+        style = style.concat(styleRight);
+      } else {
+        style.push(styleRight);
+      }
+    }
+    return style;
+  });
+
+export default mergeStyles;
diff --git a/apolloschurchapp/src/ui/styled/mergeStyles.tests.js b/apolloschurchapp/src/ui/styled/mergeStyles.tests.js
new file mode 100644
index 0000000..4719577
--- /dev/null
+++ b/apolloschurchapp/src/ui/styled/mergeStyles.tests.js
@@ -0,0 +1,42 @@
+import mergeStyles from './mergeStyles';
+
+describe('the mergeStyles function', () => {
+  it('merges two style objects into one array', () => {
+    const styleOne = { a: '1' };
+    const styleTwo = { b: '2' };
+    const merged = mergeStyles(styleOne, styleTwo);
+    expect(merged).toEqual({ a: '1', b: '2' });
+  });
+  it('maintains expected order', () => {
+    const merged = mergeStyles(1, 2, 3);
+    expect(merged).toEqual([1, 2, 3]);
+  });
+  it('handles null styles', () => {
+    const merged = mergeStyles(43, null);
+    expect(merged).toEqual(43);
+  });
+  it('merges mixed array of objects and objects to one style object', () => {
+    const styleOne = [{ c: '2' }, { a: '1' }];
+    const styleTwo = { b: '1' };
+    const merged = mergeStyles(styleOne, styleTwo);
+    expect(merged).toEqual({ c: '2', a: '1', b: '1' });
+  });
+  it('merges mixed types and maintains correct style order', () => {
+    const styleOne = [{ a: '1' }, { a: '2' }];
+    const styleTwo = { a: '3' };
+    const merged = mergeStyles(styleOne, styleTwo);
+    expect(merged).toEqual({ a: '3' });
+  });
+  it('results in a flat array of styles', () => {
+    const styleOne = [[[1, 2]], { a: '1' }, [3, 4]];
+    const styleTwo = [{ b: '2' }, [[5, 6]]];
+    const merged = mergeStyles(styleOne, styleTwo);
+    expect(merged).toEqual([1, 2, { a: '1' }, 3, 4, { b: '2' }, 5, 6]);
+  });
+  it('handles triple nested arrays', () => {
+    const styleOne = [[[{ a: '1' }, { a: '2' }]]];
+    const styleTwo = [[[{ b: '1' }, { b: '2' }]]];
+    const merged = mergeStyles(styleOne, styleTwo);
+    expect(merged).toEqual({ a: '2', b: '2' });
+  });
+});
diff --git a/apolloschurchapp/src/ui/styled/styled.tests.js b/apolloschurchapp/src/ui/styled/styled.tests.js
new file mode 100644
index 0000000..e165fb3
--- /dev/null
+++ b/apolloschurchapp/src/ui/styled/styled.tests.js
@@ -0,0 +1,57 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+import { compose } from 'recompose';
+import { View } from 'react-native';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import styled from '.';
+
+describe('the styled HOC', () => {
+  it('passes style literal to the base component', () => {
+    const StyledView = styled({ backgroundColor: 'red' })(View);
+    const tree = renderer.create(<StyledView />);
+    expect(tree).toMatchSnapshot();
+  });
+  it('supports multiple styles, and keeps the correct order', () => {
+    const StyledView = compose(
+      styled({ backgroundColor: 'red' }),
+      styled({ borderColor: 'green' })
+    )(View);
+
+    const customStyle = { height: 100 };
+
+    const tree = renderer.create(<StyledView style={customStyle} />);
+    expect(tree).toMatchSnapshot();
+  });
+  it('should accept a function, works with props', () => {
+    const StyledView = styled(({ color }) => ({ backgroundColor: color }))(
+      View
+    );
+    const tree = renderer.create(<StyledView color="green" />);
+    expect(tree).toMatchSnapshot();
+  });
+  it('provides a theme', () => {
+    const StyledView = styled(({ theme }) => ({
+      backgroundColor: theme.colors.primary,
+    }))(View);
+    const tree = renderer.create(
+      <Providers>
+        <StyledView />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('allows a theme to supply overrides', () => {
+    const StyledView = styled(() => ({ backgroundColor: 'red' }), 'StyledView')(
+      View
+    );
+    const overrides = { StyledView: { backgroundColor: 'green' } };
+    const tree = renderer.create(
+      <Providers themeInput={{ overrides }}>
+        <StyledView />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/theme/ThemeProvider.js b/apolloschurchapp/src/ui/theme/ThemeProvider.js
new file mode 100644
index 0000000..4dd21e7
--- /dev/null
+++ b/apolloschurchapp/src/ui/theme/ThemeProvider.js
@@ -0,0 +1,30 @@
+import { PureComponent, Children } from 'react';
+import PropTypes from 'prop-types';
+
+import createTheme, { THEME_PROPS } from './createTheme';
+
+export default class ThemeProvider extends PureComponent {
+  static propTypes = {
+    children: PropTypes.node,
+    themeInput: PropTypes.shape(THEME_PROPS),
+  };
+
+  static childContextTypes = {
+    theme: PropTypes.shape(THEME_PROPS),
+    themeInput: PropTypes.shape(THEME_PROPS),
+  };
+
+  static defaultProps = {
+    children: null,
+    themeInput: {},
+  };
+
+  getChildContext = () => ({
+    theme: createTheme(this.props.themeInput),
+    themeInput: this.props.themeInput,
+  });
+
+  render() {
+    return Children.only(this.props.children);
+  }
+}
diff --git a/apolloschurchapp/src/ui/theme/createTheme.js b/apolloschurchapp/src/ui/theme/createTheme.js
new file mode 100644
index 0000000..2192c7e
--- /dev/null
+++ b/apolloschurchapp/src/ui/theme/createTheme.js
@@ -0,0 +1,80 @@
+import { merge, mapValues } from 'lodash';
+import PropTypes from 'prop-types';
+
+import * as defaultTheme from './defaultTheme';
+
+const {
+  colors,
+  typography,
+  breakpoints,
+  sizing,
+  type,
+  types,
+  alpha,
+  ...otherThemeDefaults
+} = defaultTheme;
+
+// Some parts of the theme are stored as functions (such as `shadows` and `helpers`),
+// that depend on the given theme to compute. This processes these parts into objects
+// so we can merge a clean object. It's recursive and fairly abstract for flexibility.
+export const getDynamicThemePart = (part, theme) => {
+  if (typeof part === 'function') return part(theme);
+  if (Array.isArray(part))
+    return part.map((item) => getDynamicThemePart(item, theme));
+  if (typeof part === 'object')
+    return mapValues(part, (value) => getDynamicThemePart(value, theme));
+  return part;
+};
+
+const createTheme = ({
+  colors: colorsInput = {},
+  typography: typographyInput = {},
+  breakpoints: breakpointsInput = {},
+  sizing: sizingInput = {},
+  type: typeInput = type,
+  types: typesInput = {},
+  alpha: alphaInput = {},
+  ...other
+} = {}) => {
+  // compose base theme
+  const theme = {
+    colors: merge({}, colors, colorsInput),
+    typography: merge({}, typography, typographyInput),
+    breakpoints: merge({}, breakpoints, breakpointsInput),
+    sizing: merge({}, sizing, sizingInput),
+    alpha: merge({}, alpha, alphaInput),
+    type: typeInput.toLowerCase(),
+  };
+
+  // inject theme type
+  merge(theme, getDynamicThemePart({ types }, theme));
+  merge(theme, getDynamicThemePart({ types: typesInput }, theme));
+  const availableTypes = theme.types;
+  if (!availableTypes[theme.type])
+    throw new Error(`The theme type ${theme.type} is not supported`);
+
+  merge(theme, availableTypes[typeInput], { colors: colorsInput });
+
+  // mixin other theme defaults (that might depend on base theme)
+  merge(theme, getDynamicThemePart(otherThemeDefaults, theme));
+
+  // mixin other theme inputs (that might depend on base theme)
+  merge(theme, getDynamicThemePart(other, theme));
+  return theme;
+};
+
+export const THEME_PROPS = {
+  colors: PropTypes.object,
+  typography: PropTypes.object,
+  breakpoints: PropTypes.shape({
+    xs: PropTypes.number,
+    sm: PropTypes.number,
+    md: PropTypes.number,
+    lg: PropTypes.number,
+  }),
+  sizing: PropTypes.object,
+  helpers: PropTypes.object,
+  overrides: PropTypes.object,
+};
+
+export default createTheme;
diff --git a/apolloschurchapp/src/ui/theme/createTheme.tests.js b/apolloschurchapp/src/ui/theme/createTheme.tests.js
new file mode 100644
index 0000000..a01712e
--- /dev/null
+++ b/apolloschurchapp/src/ui/theme/createTheme.tests.js
@@ -0,0 +1,73 @@
+import createTheme, { getDynamicThemePart } from './createTheme';
+import * as defaultTheme from './defaultTheme';
+
+describe('createTheme', () => {
+  it('has a colors', () => {
+    const theme = createTheme();
+    expect(theme).toHaveProperty('colors');
+  });
+
+  it('has a custom colors', () => {
+    const customColors = { primary: 'red', otherColor: 'green' };
+    const theme = createTheme({ colors: customColors });
+    expect(theme.colors).toMatchSnapshot();
+  });
+
+  it('has typography', () => {
+    const theme = createTheme();
+    expect(theme).toHaveProperty('typography');
+  });
+
+  it('has custom typography', () => {
+    const custom = { baseFontSize: '24', otherProp: true };
+    const theme = createTheme({ typography: custom });
+    expect(theme.typography).toMatchSnapshot();
+  });
+
+  it('has helper functions and allows for custom helper functions', () => {
+    const custom = { myFunc: () => () => 'yay!' };
+    const theme = createTheme({ helpers: custom });
+    expect(theme.helpers.rem(1)).toEqual(defaultTheme.typography.baseFontSize);
+    expect(theme.helpers.verticalRhythm(1)).toEqual(
+      defaultTheme.typography.baseLineHeight
+    );
+    expect(theme.helpers.myFunc()).toEqual('yay!');
+  });
+
+  it('allows adding in custom theme properties', () => {
+    const custom = {
+      overrides: { MyComponent: { some: 'style' } },
+    };
+    const theme = createTheme(custom);
+    expect(theme).toMatchSnapshot();
+  });
+
+  it('switches to a dark theme', () => {
+    const theme = createTheme({ type: 'dark' });
+    expect(theme).toMatchSnapshot();
+  });
+  it('throws an error for an unsupported theme type', () => {
+    const theme = () => createTheme({ type: 'Boom' });
+    expect(theme).toThrowErrorMatchingSnapshot();
+  });
+
+  describe('getDynamicThemePart', () => {
+    it('parses types in theme object', () => {
+      const result = getDynamicThemePart(
+        { types: defaultTheme.types },
+        defaultTheme
+      );
+      expect(result.types).toEqual(
+        expect.objectContaining({
+          light: expect.objectContaining({
+            colors: expect.objectContaining({
+              text: expect.objectContaining({
+                primary: expect.any(String),
+              }),
+            }),
+          }),
+        })
+      );
+    });
+  });
+});
diff --git a/apolloschurchapp/src/ui/theme/defaultTheme.js b/apolloschurchapp/src/ui/theme/defaultTheme.js
new file mode 100644
index 0000000..0ea5632
--- /dev/null
+++ b/apolloschurchapp/src/ui/theme/defaultTheme.js
@@ -0,0 +1,189 @@
+import fontStack from './fontStack';
+import * as types from './types';
+
+/**
+ * There are two parts to a theme:
+ * 1. The `input` that is used to generate a theme,
+ * 2. The generated `theme` that is consumed by components
+ *
+ * The structure of both parts are essentially the same, except
+ * with the generated `theme` having more detail.
+ *
+ * This file exposes the default values that are used in
+ * theme generation that you might want to customize.
+ *
+ * To customize these values, provide theme as options in the `themeInput`
+ * prop in <ThemeProvider>, like:
+ * <ThemeProvider themeInput={{ colors: { primary: 'blue' }, type: 'dark' }} />
+ *
+ * For more detail on how to customize a theme, see (TODO: should be on storybook)
+ */
+
+// Base colors.
+// These get used by theme types (see /types directory) to color
+// specific parts of the interface. For more control on how certain
+// elements are colored, go there. The next level of control comes
+// on a per-component basis with "overrides"
+export const colors = {
+  primary: '#00676D',
+  secondary: '#17B582',
+  tertiary: '#6EC5B8',
+  screen: '#F8F7F4',
+  paper: '#FFFFFF',
+  alert: '#c64f55',
+
+  // Dark shades
+  darkPrimary: '#303030',
+  darkSecondary: '#505050',
+  darkTertiary: '#A5A5A5',
+
+  // Light shades
+  lightPrimary: '#F8F7F4',
+  lightSecondary: '#DBDBD9',
+  lightTertiary: '#A5A5A5',
+
+  // Statics
+  black: '#000000',
+  white: '#FFFFFF',
+  transparent: 'transparent',
+  wordOfChrist: '#8b0000', // only used in Scripture.
+};
+
+/* Base Typography sizing and fonts.
+ *
+ * To control speicfic styles used on different type components (like H1, H2, etc), see "overrides"
+ */
+export const typography = {
+  baseFontSize: 16,
+  baseLineHeight: 23.04, // 1.44 ratio
+  ...fontStack,
+};
+
+// Responsive breakpoints
+export const breakpoints = {
+  xs: 320,
+  sm: 496,
+  md: 800,
+  lg: 1200,
+};
+
+// Base sizing units. These are used to scale
+// space, and size components relatively to one another.
+export const sizing = {
+  baseUnit: 20,
+  borderRadius: 6,
+  avatar: {
+    small: 40,
+    medium: 80,
+    large: 160,
+  },
+};
+
+export const alpha = {
+  high: 0.9,
+  medium: 0.7,
+  low: 0.4,
+};
+
+/**
+ * Dynamic theme parts
+ * The sections below define some of the dynamic
+ * components to a theme. You can still override them,
+ * but if you modify only the values above, the values below
+ * will be updated to reflect your customizations.
+ *
+ * The available theme types get included into the theme, and the active theme type gets merged into
+ * the theme. This allows for switching of theme values between different color palettes. The theme
+ * types included by default are "light" and "dark". But, you could add your own theme types
+ * (ex: "kids", with a more vibrant set of colors). Most of the colors that a component uses should
+ * come from the active type, not from the base colors above. For example, notice below how
+ * `shadows` gets the shadowColor from `colors.shadows`, which is provided by the active theme type.
+ */
+export const type = 'light';
+export { types };
+
+export const shadows = ({ colors: themeColors }) => ({
+  default: {
+    ios: {
+      shadowColor: themeColors.shadows.default,
+      shadowOffset: {
+        width: 0,
+        height: 1,
+      },
+      shadowOpacity: 1,
+      shadowRadius: 3,
+    },
+    android: {
+      elevation: 3,
+    },
+  },
+});
+
+export const buttons = ({ colors: themeColors }) => ({
+  default: {
+    fill: themeColors.action.default,
+    accent: themeColors.text.primary,
+  },
+  primary: {
+    fill: themeColors.action.primary,
+    accent: themeColors.white,
+  },
+  secondary: {
+    fill: themeColors.action.secondary,
+    accent: themeColors.white,
+  },
+  tertiary: {
+    fill: themeColors.action.tertiary,
+    accent: themeColors.white,
+  },
+  ghost: {
+    fill: themeColors.text.primary,
+    accent: themeColors.text.primary,
+  },
+  alert: {
+    fill: themeColors.alert,
+    accent: themeColors.white,
+  },
+});
+
+/*
+ * Helpers make it easy to expose simple utils in your theme that rely on the current theme to
+ * compute its value. They should be a function that takes a single argument - the current theme,
+ * and returns a function that gets injected into the theme.
+ */
+export const helpers = {};
+
+helpers.rem = (theme) => (units) => {
+  const value = units * theme.typography.baseFontSize;
+  return +value.toFixed(2);
+};
+
+/*
+* Vertical rhythm method of spacing objects (typically typographic elements) based on a predefined
+* ratio. A popular ratio that is often used would be something like the Golden Ratio. With the
+* Golden Ratio as an example, all elment spacing on the page is a multiplied derivitive of that
+* ratio resulting in a rhthmic spacing. This is often used in typography to set line heights and
+* vertical paddings. The helper function below takes a `rem` unit (often a font size but not always)
+* and multiplies it by either a custom ratio or a derrived ratio from the themes `baseLineHeight`
+* devided by the `baseFontSize`.
+*/
+helpers.verticalRhythm = (theme) => (units, customRatio) => {
+  const verticalRatio =
+    customRatio ||
+    theme.typography.baseLineHeight / theme.typography.baseFontSize;
+  return helpers.rem(theme)(verticalRatio * units);
+};
+
+// Overrides allow you to override the styles of any component styled using the `styled` HOC.
+// For example, this component:
+// const SomeComponent = styled({ margin: 10, padding: 20 }, 'SomeComponent');
+// can have its styles overriden by including in overrides:
+// {
+//   overides: {
+//     SomeComponent: {
+//       margin: 5,
+//       padding: 15,
+//     },
+//   },
+// }
+export const overrides = {};
diff --git a/apolloschurchapp/src/ui/theme/fontStack/index.android.js b/apolloschurchapp/src/ui/theme/fontStack/index.android.js
new file mode 100644
index 0000000..097c09d
--- /dev/null
+++ b/apolloschurchapp/src/ui/theme/fontStack/index.android.js
@@ -0,0 +1,35 @@
+const fontStack = {
+  sans: {
+    regular: {
+      default: 'Inter-UI-Regular',
+      italic: 'Inter-UI-Italic',
+    },
+    medium: {
+      default: 'Inter-UI-Medium',
+      italic: 'Inter-UI-MediumItalic',
+    },
+    bold: {
+      default: 'Inter-UI-Bold',
+      italic: 'Inter-UI-BoldItalic',
+    },
+    black: {
+      default: 'Inter-UI-Black',
+      italic: 'Inter-UI-BlackItalic',
+    },
+  },
+  serif: {
+    regular: {
+      default: 'DroidSerif-Regular',
+      italic: 'DroidSerif-Italic',
+    },
+    bold: {
+      default: 'DroidSerif-Bold',
+      italic: 'DroidSerif-BoldItalic',
+    },
+  },
+  ui: {
+    regular: 'sans-serif',
+  },
+};
+
+export default fontStack;
diff --git a/apolloschurchapp/src/ui/theme/fontStack/index.ios.js b/apolloschurchapp/src/ui/theme/fontStack/index.ios.js
new file mode 100644
index 0000000..7242fe0
--- /dev/null
+++ b/apolloschurchapp/src/ui/theme/fontStack/index.ios.js
@@ -0,0 +1,35 @@
+const fontStack = {
+  sans: {
+    regular: {
+      default: 'InterUI-Regular',
+      italic: 'InterUI-Italic',
+    },
+    medium: {
+      default: 'InterUI-Medium',
+      italic: 'InterUI-MediumItalic',
+    },
+    bold: {
+      default: 'InterUI-Bold',
+      italic: 'InterUI-BoldItalic',
+    },
+    black: {
+      default: 'InterUI-Black',
+      italic: 'InterUI-BlackItalic',
+    },
+  },
+  serif: {
+    regular: {
+      default: 'DroidSerif',
+      italic: 'DroidSerif-Italic',
+    },
+    bold: {
+      default: 'DroidSerif-Bold',
+      italic: 'DroidSerif-BoldItalic',
+    },
+  },
+  ui: {
+    regular: 'System',
+  },
+};
+
+export default fontStack;
diff --git a/apolloschurchapp/src/ui/theme/index.js b/apolloschurchapp/src/ui/theme/index.js
new file mode 100644
index 0000000..5c0bbd7
--- /dev/null
+++ b/apolloschurchapp/src/ui/theme/index.js
@@ -0,0 +1,3 @@
+export { default as ThemeProvider } from './ThemeProvider';
+export { default as withTheme } from './withTheme';
+export { ThemeMixin, withThemeMixin } from './mixins';
diff --git a/apolloschurchapp/src/ui/theme/mixins.js b/apolloschurchapp/src/ui/theme/mixins.js
new file mode 100644
index 0000000..a9739aa
--- /dev/null
+++ b/apolloschurchapp/src/ui/theme/mixins.js
@@ -0,0 +1,38 @@
+import { compose, mapProps, withContext } from 'recompose';
+import PropTypes from 'prop-types';
+import { merge } from 'lodash';
+
+import withTheme from './withTheme';
+import createTheme, { THEME_PROPS } from './createTheme';
+
+const withThemeMixin = (themeInput) =>
+  compose(
+    mapProps((props) => ({ ownProps: props })),
+    withTheme(),
+    withContext(
+      {
+        theme: PropTypes.shape(THEME_PROPS),
+        themeInput: PropTypes.shape(THEME_PROPS),
+      },
+      ({ theme, themeInput: originalThemeInput, ownProps }) => {
+        let themeInputAsObject = themeInput;
+        if (typeof themeInput === 'function') {
+          themeInputAsObject = themeInput({ ...ownProps, theme });
+        }
+        themeInputAsObject = merge(originalThemeInput, themeInputAsObject);
+
+        const themeWithMixin = createTheme(themeInputAsObject);
+        return {
+          theme: themeWithMixin,
+          themeInput: themeInputAsObject,
+        };
+      }
+    ),
+    mapProps(({ ownProps }) => ownProps)
+  );
+
+const ThemeMixin = withThemeMixin(({ mixin = {} } = {}) => mixin)(
+  ({ children }) => children
+);
+
+export { withThemeMixin, ThemeMixin };
diff --git a/apolloschurchapp/src/ui/theme/mixins.tests.js b/apolloschurchapp/src/ui/theme/mixins.tests.js
new file mode 100644
index 0000000..7b76e92
--- /dev/null
+++ b/apolloschurchapp/src/ui/theme/mixins.tests.js
@@ -0,0 +1,58 @@
+/* eslint-disable */
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import FlexedView from 'apolloschurchapp/src/ui/FlexedView';
+import { H3, H6, BodyText } from 'apolloschurchapp/src/ui/typography';
+
+import { ThemeProvider } from './';
+import { withThemeMixin } from './mixins';
+
+const TypeExample = () => (
+  <FlexedView>
+    <H3>Hi there!</H3>
+    <H6>Lorem ipsum dolor sit amet.</H6>
+    <BodyText>
+      Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque sodales
+      sit amet ante eu lobortis. In vitae faucibus lectus, at interdum nibh.
+      Fusce suscipit tincidunt justo, vitae cursus mi fermentum eget.
+    </BodyText>
+  </FlexedView>
+);
+
+const DarkTypeExample = withThemeMixin({
+  type: 'dark',
+})(TypeExample);
+
+const TypeExampleWithProps = withThemeMixin(({ color, isLight = true }) => ({
+  type: isLight ? 'light' : 'dark',
+  colors: {
+    primary: color,
+  },
+}))(TypeExample);
+
+describe('withThemeMixin', () => {
+  it('overrides styles without affecting siblings', () => {
+    const tree = renderer.create(
+      <ThemeProvider>
+        <FlexedView>
+          <TypeExample />
+          <DarkTypeExample />
+          <TypeExample />
+        </FlexedView>
+      </ThemeProvider>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('works with dynamic props', () => {
+    const tree = renderer.create(
+      <ThemeProvider>
+        <FlexedView>
+          <TypeExampleWithProps isLight color="red" />
+          <TypeExampleWithProps isLight={false} color="blue" />
+        </FlexedView>
+      </ThemeProvider>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/theme/theme.stories.js b/apolloschurchapp/src/ui/theme/theme.stories.js
new file mode 100644
index 0000000..0127758
--- /dev/null
+++ b/apolloschurchapp/src/ui/theme/theme.stories.js
@@ -0,0 +1,73 @@
+/* eslint-disable */
+import React from 'react';
+import { storiesOf } from '@storybook/react-native';
+
+import FlexedView from 'apolloschurchapp/src/ui/FlexedView';
+import { H3, H6, BodyText } from 'apolloschurchapp/src/ui/typography';
+
+import { ThemeProvider, ThemeMixin, withThemeMixin } from './';
+
+const TypeExample = () => (
+  <FlexedView>
+    <H3>Hi there!</H3>
+    <H6>Lorem ipsum dolor sit amet.</H6>
+    <BodyText>
+      Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque sodales
+      sit amet ante eu lobortis. In vitae faucibus lectus, at interdum nibh.
+      Fusce suscipit tincidunt justo, vitae cursus mi fermentum eget.
+    </BodyText>
+  </FlexedView>
+);
+
+const DarkTypeExample = withThemeMixin({
+  type: 'dark',
+})(TypeExample);
+
+const TypeExampleWithProps = withThemeMixin(({ color, isLight = true }) => ({
+  type: isLight ? 'light' : 'dark',
+  colors: {
+    primary: color,
+  },
+}))(TypeExample);
+
+storiesOf('Theming', module)
+  .add('ThemeProvider - default', () => (
+    <ThemeProvider>
+      <TypeExample />
+    </ThemeProvider>
+  ))
+  .add('ThemeProvider - dark theme', () => (
+    <ThemeProvider
+      themeInput={{
+        type: 'dark',
+      }}
+    >
+      <TypeExample />
+    </ThemeProvider>
+  ))
+  .add('ThemeMixin', () => (
+    <ThemeProvider>
+      <FlexedView>
+        <TypeExample />
+        <ThemeMixin mixin={{ type: 'dark' }}>
+          <TypeExample />
+        </ThemeMixin>
+      </FlexedView>
+    </ThemeProvider>
+  ))
+  .add('withThemeMixin', () => (
+    <ThemeProvider>
+      <FlexedView>
+        <TypeExample />
+        <DarkTypeExample />
+      </FlexedView>
+    </ThemeProvider>
+  ))
+  .add('withThemeMixin using props', () => (
+    <ThemeProvider>
+      <FlexedView>
+        <TypeExampleWithProps isLight color="red" />
+        <TypeExampleWithProps isLight={false} color="blue" />
+      </FlexedView>
+    </ThemeProvider>
+  ));
diff --git a/apolloschurchapp/src/ui/theme/types/dark.js b/apolloschurchapp/src/ui/theme/types/dark.js
new file mode 100644
index 0000000..d1bf211
--- /dev/null
+++ b/apolloschurchapp/src/ui/theme/types/dark.js
@@ -0,0 +1,33 @@
+import Color from 'color';
+
+const dark = ({ colors, alpha }) => ({
+  colors: {
+    text: {
+      primary: colors.lightPrimary,
+      secondary: colors.lightSecondary,
+      tertiary: colors.lightTertiary,
+      link: colors.secondary,
+    },
+    background: {
+      screen: colors.screen,
+      paper: colors.paper,
+      accent: Color(colors.darkTertiary)
+        .fade(alpha.high)
+        .string(),
+      inactive: colors.darkTertiary,
+    },
+    shadows: {
+      default: Color(colors.darkTertiary)
+        .fade(alpha.medium)
+        .string(),
+    },
+    action: {
+      default: colors.darkTertiary,
+      primary: colors.primary,
+      secondary: colors.secondary,
+      tertiary: colors.tertiary,
+    },
+  },
+});
+
+export default dark;
diff --git a/apolloschurchapp/src/ui/theme/types/index.js b/apolloschurchapp/src/ui/theme/types/index.js
new file mode 100644
index 0000000..0593895
--- /dev/null
+++ b/apolloschurchapp/src/ui/theme/types/index.js
@@ -0,0 +1,2 @@
+export { default as dark } from './dark';
+export { default as light } from './light';
diff --git a/apolloschurchapp/src/ui/theme/types/light.js b/apolloschurchapp/src/ui/theme/types/light.js
new file mode 100644
index 0000000..d343f2a
--- /dev/null
+++ b/apolloschurchapp/src/ui/theme/types/light.js
@@ -0,0 +1,33 @@
+import Color from 'color';
+
+const light = ({ colors, alpha }) => ({
+  colors: {
+    text: {
+      primary: colors.darkPrimary,
+      secondary: colors.darkSecondary,
+      tertiary: colors.darkTertiary,
+      link: colors.secondary,
+    },
+    background: {
+      screen: colors.screen,
+      paper: colors.paper,
+      accent: Color(colors.lightTertiary)
+        .fade(alpha.high)
+        .string(),
+      inactive: colors.lightTertiary,
+    },
+    shadows: {
+      default: Color(colors.darkTertiary)
+        .fade(alpha.medium)
+        .string(),
+    },
+    action: {
+      default: colors.lightTertiary,
+      primary: colors.primary,
+      secondary: colors.secondary,
+      tertiary: colors.tertiary,
+    },
+  },
+});
+
+export default light;
diff --git a/apolloschurchapp/src/ui/theme/withTheme.js b/apolloschurchapp/src/ui/theme/withTheme.js
new file mode 100644
index 0000000..4208ffd
--- /dev/null
+++ b/apolloschurchapp/src/ui/theme/withTheme.js
@@ -0,0 +1,20 @@
+import PropTypes from 'prop-types';
+import { compose, mapProps, getContext, hoistStatics } from 'recompose';
+
+import { THEME_PROPS } from './createTheme';
+
+const DEFAULT_MAPPER_FN = ({ theme } = {}) => ({ theme });
+
+export default function(mapperFn = DEFAULT_MAPPER_FN) {
+  return hoistStatics(
+    compose(
+      getContext({
+        theme: PropTypes.shape(THEME_PROPS),
+      }),
+      mapProps(({ theme, ...otherProps }) => ({
+        ...otherProps,
+        ...mapperFn({ theme, ...otherProps }),
+      }))
+    )
+  );
+}
diff --git a/apolloschurchapp/src/ui/typography/BlockQuote/BlockQuote.stories.js b/apolloschurchapp/src/ui/typography/BlockQuote/BlockQuote.stories.js
new file mode 100644
index 0000000..901a99c
--- /dev/null
+++ b/apolloschurchapp/src/ui/typography/BlockQuote/BlockQuote.stories.js
@@ -0,0 +1,31 @@
+import React from 'react';
+import { storiesOf } from '@storybook/react-native';
+
+import { withIsLoading } from 'apolloschurchapp/src/ui/isLoading';
+import PaddedView from 'apolloschurchapp/src/ui/PaddedView';
+
+import BlockQuote from '.';
+
+storiesOf('typography/BlockQuote', module)
+  .add('Default', () => (
+    <PaddedView>
+      <BlockQuote>
+        {
+          '"You are the only Bible some unbelievers will ever read." – John MacArthur'
+        }
+      </BlockQuote>
+    </PaddedView>
+  ))
+  .add('isLoading', () => {
+    const SetIsLoading = withIsLoading(PaddedView);
+
+    return (
+      <SetIsLoading isLoading>
+        <BlockQuote>
+          {
+            '"You are the only Bible some unbelievers will ever read." – John MacArthur'
+          }
+        </BlockQuote>
+      </SetIsLoading>
+    );
+  });
diff --git a/apolloschurchapp/src/ui/typography/BlockQuote/BlockQuote.tests.js b/apolloschurchapp/src/ui/typography/BlockQuote/BlockQuote.tests.js
new file mode 100644
index 0000000..071031c
--- /dev/null
+++ b/apolloschurchapp/src/ui/typography/BlockQuote/BlockQuote.tests.js
@@ -0,0 +1,50 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+import { H5 } from 'apolloschurchapp/src/ui/typography';
+import { withIsLoading } from 'apolloschurchapp/src/ui/isLoading';
+
+import BlockQuote from '.';
+
+describe('the BlockQuote component', () => {
+  it('should render a string', () => {
+    const tree = renderer.create(
+      <Providers>
+        <BlockQuote>
+          {
+            '"You are the only Bible some unbelievers will ever read." – John MacArthur'
+          }
+        </BlockQuote>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render child components', () => {
+    const tree = renderer.create(
+      <Providers>
+        <BlockQuote>
+          <H5>
+            {
+              '"You are the only Bible some unbelievers will ever read." – John MacArthur'
+            }
+          </H5>
+        </BlockQuote>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a loading state', () => {
+    const BlockQuoteLoadingState = withIsLoading(BlockQuote);
+    const tree = renderer.create(
+      <Providers>
+        <BlockQuoteLoadingState isLoading>
+          {
+            '"You are the only Bible some unbelievers will ever read." – John MacArthur'
+          }
+        </BlockQuoteLoadingState>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/typography/BlockQuote/index.js b/apolloschurchapp/src/ui/typography/BlockQuote/index.js
new file mode 100644
index 0000000..6b02d31
--- /dev/null
+++ b/apolloschurchapp/src/ui/typography/BlockQuote/index.js
@@ -0,0 +1,45 @@
+import React from 'react';
+import { compose, setDisplayName, pure } from 'recompose';
+import PropTypes from 'prop-types';
+import { StyleSheet, View } from 'react-native';
+
+import styled from 'apolloschurchapp/src/ui/styled';
+import { withThemeMixin } from 'apolloschurchapp/src/ui/theme';
+import { BodyText } from 'apolloschurchapp/src/ui/typography';
+
+const Block = compose(
+  setDisplayName('BlockQuote'),
+  styled(({ theme }) => ({
+    alignSelf: 'stretch',
+    marginVertical: theme.helpers.verticalRhythm(2),
+    paddingVertical: theme.helpers.verticalRhythm(1.5),
+    paddingHorizontal: theme.sizing.baseUnit,
+    borderTopWidth: StyleSheet.hairlineWidth,
+    borderBottomWidth: StyleSheet.hairlineWidth,
+    borderColor: theme.colors.text.tertiary,
+  })),
+  // Forced <BodyText> to inherit QuoteText styles.
+  // This is necessary for HTMLView to properly style <blockquote>'s 😥
+  withThemeMixin(({ theme }) => ({
+    overrides: {
+      BodyText: {
+        fontFamily: theme.typography.sans.regular.italic,
+        textAlign: 'center',
+        color: theme.colors.text.primary,
+      },
+    },
+  }))
+)(View);
+
+const BlockQuote = pure(({ children }) => (
+  <Block>
+    {typeof children === 'string' ? <BodyText>{children}</BodyText> : children}
+  </Block>
+));
+
+BlockQuote.propTypes = {
+  children: PropTypes.node,
+  isLoading: PropTypes.bool,
+};
+
+export default BlockQuote;
diff --git a/apolloschurchapp/src/ui/typography/BodyText/BodyText.stories.js b/apolloschurchapp/src/ui/typography/BodyText/BodyText.stories.js
new file mode 100644
index 0000000..8782907
--- /dev/null
+++ b/apolloschurchapp/src/ui/typography/BodyText/BodyText.stories.js
@@ -0,0 +1,56 @@
+import React from 'react';
+import { View } from 'react-native';
+import { storiesOf } from '@storybook/react-native';
+
+import BodyText from '.';
+
+storiesOf('typography/BodyText', module)
+  .add('Regular', () => (
+    <BodyText>
+      {
+        '"True faith means holding nothing back. It means putting every hope in God\'s fidelity to His Promises." ― Francis Chan'
+      }
+    </BodyText>
+  ))
+  .add('Bold', () => (
+    <BodyText bold>
+      {
+        '"True faith means holding nothing back. It means putting every hope in God\'s fidelity to His Promises." ― Francis Chan'
+      }
+    </BodyText>
+  ))
+  .add('Italic', () => (
+    <BodyText italic>
+      {
+        '"True faith means holding nothing back. It means putting every hope in God\'s fidelity to His Promises." ― Francis Chan'
+      }
+    </BodyText>
+  ))
+  .add('Bold Italic', () => (
+    <BodyText bold italic>
+      {
+        '"True faith means holding nothing back. It means putting every hope in God\'s fidelity to His Promises." ― Francis Chan'
+      }
+    </BodyText>
+  ))
+  .add('isLoading', () => (
+    <BodyText isLoading>
+      {
+        '"True faith means holding nothing back. It means putting every hope in God\'s fidelity to His Promises." ― Francis Chan'
+      }
+    </BodyText>
+  ))
+  .add('Border Box – platform testing', () => {
+    const border = { borderWidth: 1, borderStyle: 'solid' };
+
+    return (
+      <View>
+        <BodyText style={border}>Body Text</BodyText>
+        <BodyText style={border}>
+          {
+            '"True faith means holding nothing\nback. It means putting every\nhope in God\'s fidelity to His Promises." ― Francis Chan'
+          }
+        </BodyText>
+      </View>
+    );
+  });
diff --git a/apolloschurchapp/src/ui/typography/BodyText/BodyText.tests.js b/apolloschurchapp/src/ui/typography/BodyText/BodyText.tests.js
new file mode 100644
index 0000000..f1e30ef
--- /dev/null
+++ b/apolloschurchapp/src/ui/typography/BodyText/BodyText.tests.js
@@ -0,0 +1,72 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import BodyText from '.';
+
+describe('the BodyText component', () => {
+  it('should render correctly', () => {
+    const tree = renderer.create(
+      <Providers>
+        <BodyText>Default BodyText text</BodyText>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render as bold', () => {
+    const tree = renderer.create(
+      <Providers>
+        <BodyText bold>Bold BodyText text</BodyText>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render as italic', () => {
+    const tree = renderer.create(
+      <Providers>
+        <BodyText italic>Italic BodyText text</BodyText>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render as bold italic', () => {
+    const tree = renderer.create(
+      <Providers>
+        <BodyText bold italic>
+          Bold italic BodyText text
+        </BodyText>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should accept and render passed in styles', () => {
+    const salmon = { color: 'salmon' };
+    const tree = renderer.create(
+      <Providers>
+        <BodyText style={salmon}>Salmon text</BodyText>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a loading state', () => {
+    const tree = renderer.create(
+      <Providers>
+        <BodyText isLoading>Default BodyText text</BodyText>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should accept additional props', () => {
+    const tree = renderer.create(
+      <Providers>
+        <BodyText accessible={false}>
+          {
+            '"True faith means holding nothing back. It means putting every hope in God\'s fidelity to His Promises." ― Francis Chan'
+          }
+        </BodyText>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/typography/BodyText/index.js b/apolloschurchapp/src/ui/typography/BodyText/index.js
new file mode 100644
index 0000000..f6da80a
--- /dev/null
+++ b/apolloschurchapp/src/ui/typography/BodyText/index.js
@@ -0,0 +1,49 @@
+import { Text } from 'react-native';
+import PropTypes from 'prop-types';
+import { compose, pure, setDisplayName } from 'recompose';
+
+import styled from 'apolloschurchapp/src/ui/styled';
+import {
+  withPlaceholder,
+  Typography,
+} from 'apolloschurchapp/src/ui/Placeholder';
+
+const styles = styled(({ theme, bold, italic }) => {
+  let fontStack = theme.typography.sans.regular.default;
+
+  if (bold && italic) {
+    fontStack = theme.typography.sans.bold.italic;
+  } else if (bold) {
+    fontStack = theme.typography.sans.bold.default;
+  } else if (italic) {
+    fontStack = theme.typography.sans.regular.italic;
+  }
+
+  return {
+    fontSize: theme.helpers.rem(1),
+    lineHeight: theme.helpers.verticalRhythm(1, 1.625),
+    fontFamily: fontStack,
+    color: theme.colors.text.primary,
+  };
+}, 'BodyText');
+
+const BodyText = compose(
+  setDisplayName('BodyText'),
+  styles,
+  withPlaceholder(Typography),
+  pure
+)(Text);
+
+BodyText.propTypes = {
+  bold: PropTypes.bool,
+  italic: PropTypes.bool,
+  isLoading: PropTypes.bool, // display loading placeholder
+  ...Text.propTypes,
+};
+
+BodyText.defaultProps = {
+  bold: false,
+  italic: false,
+};
+
+export default BodyText;
diff --git a/apolloschurchapp/src/ui/typography/BulletListItem/BulletListItem.stories.js b/apolloschurchapp/src/ui/typography/BulletListItem/BulletListItem.stories.js
new file mode 100644
index 0000000..c69c3cb
--- /dev/null
+++ b/apolloschurchapp/src/ui/typography/BulletListItem/BulletListItem.stories.js
@@ -0,0 +1,27 @@
+import React from 'react';
+import { storiesOf } from '@storybook/react-native';
+
+import { withIsLoading } from 'apolloschurchapp/src/ui/isLoading';
+import PaddedView from 'apolloschurchapp/src/ui/PaddedView';
+
+import BulletListItem from '.';
+
+storiesOf('typography/BulletListItem', module)
+  .add('Default', () => (
+    <PaddedView>
+      <BulletListItem>
+        {`"God's work done in God's way will never lack God's supplies." – Hudson Taylor`}
+      </BulletListItem>
+    </PaddedView>
+  ))
+  .add('isLoading', () => {
+    const SetIsLoading = withIsLoading(PaddedView);
+
+    return (
+      <SetIsLoading isLoading>
+        <BulletListItem>
+          {`"God's work done in God's way will never lack God's supplies." – Hudson Taylor`}
+        </BulletListItem>
+      </SetIsLoading>
+    );
+  });
diff --git a/apolloschurchapp/src/ui/typography/BulletListItem/BulletListItem.tests.js b/apolloschurchapp/src/ui/typography/BulletListItem/BulletListItem.tests.js
new file mode 100644
index 0000000..d9cd08b
--- /dev/null
+++ b/apolloschurchapp/src/ui/typography/BulletListItem/BulletListItem.tests.js
@@ -0,0 +1,44 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+import { withIsLoading } from 'apolloschurchapp/src/ui/isLoading';
+import { H5 } from 'apolloschurchapp/src/ui/typography';
+
+import BulletListItem from '.';
+
+describe('the BulletListItem component', () => {
+  it('should render a string', () => {
+    const tree = renderer.create(
+      <Providers>
+        <BulletListItem>
+          {`"God's work done in God's way will never lack God's supplies." – Hudson Taylor`}
+        </BulletListItem>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render render child components', () => {
+    const tree = renderer.create(
+      <Providers>
+        <BulletListItem>
+          <H5>
+            {`"God's work done in God's way will never lack God's supplies." – Hudson Taylor`}
+          </H5>
+        </BulletListItem>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a loading state', () => {
+    const BulletListLoadingState = withIsLoading(BulletListItem);
+    const tree = renderer.create(
+      <Providers>
+        <BulletListLoadingState isLoading>
+          {`"God's work done in God's way will never lack God's supplies." – Hudson Taylor`}
+        </BulletListLoadingState>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/typography/BulletListItem/index.js b/apolloschurchapp/src/ui/typography/BulletListItem/index.js
new file mode 100644
index 0000000..6be20c1
--- /dev/null
+++ b/apolloschurchapp/src/ui/typography/BulletListItem/index.js
@@ -0,0 +1,55 @@
+import React from 'react';
+import { compose, setDisplayName, pure } from 'recompose';
+import PropTypes from 'prop-types';
+import { View } from 'react-native';
+
+import styled from 'apolloschurchapp/src/ui/styled';
+import { BodyText } from 'apolloschurchapp/src/ui/typography';
+
+const enhance = compose(
+  setDisplayName('BulletListItem'),
+  pure
+);
+
+const Wrapper = styled(({ theme }) => ({
+  flexDirection: 'row',
+  paddingBottom: theme.helpers.verticalRhythm(0.375),
+}))(View);
+
+const Bullet = styled(({ theme }) => ({
+  // Set in a typographic unit to reflect changes in the default type size.
+  paddingRight: theme.helpers.rem(1) / 2,
+}))(View);
+
+const IosTextWrapFix = styled({
+  // 😢
+  flexShrink: 1,
+})(View);
+
+const BulletListItem = enhance(({ children }) => (
+  <Wrapper>
+    <Bullet>
+      <BodyText>•</BodyText>
+    </Bullet>
+    <IosTextWrapFix>
+      {typeof children === 'string' ? (
+        <BodyText>{children}</BodyText>
+      ) : (
+        children
+      )}
+    </IosTextWrapFix>
+  </Wrapper>
+));
+
+BulletListItem.propTypes = {
+  children: PropTypes.oneOfType([
+    /*
+     * There is no way to type check against known text nodes but expect problems if you try to
+     * pass something other than a string or text elements (this includes children of children).
+     */
+    PropTypes.string,
+    PropTypes.node,
+  ]),
+};
+
+export default BulletListItem;
diff --git a/apolloschurchapp/src/ui/typography/H1/H1.stories.js b/apolloschurchapp/src/ui/typography/H1/H1.stories.js
new file mode 100644
index 0000000..14a038b
--- /dev/null
+++ b/apolloschurchapp/src/ui/typography/H1/H1.stories.js
@@ -0,0 +1,66 @@
+import React from 'react';
+import { ScrollView } from 'react-native';
+import { storiesOf } from '@storybook/react-native';
+
+import { Paragraph, H2, BodyText } from 'apolloschurchapp/src/ui/typography';
+import PaddedView from 'apolloschurchapp/src/ui/PaddedView';
+
+import H1 from '.';
+
+storiesOf('typography/H1', module)
+  .add('Default', () => (
+    <ScrollView>
+      <H1>
+        {
+          '"Do all the good you can. By all the means you can. In all the ways you can. In all the places you can. At all the times you can. To all the people you can. As long as ever you can." ― John Wesley'
+        }
+      </H1>
+    </ScrollView>
+  ))
+  .add('padded', () => (
+    <ScrollView>
+      <PaddedView>
+        <H1 padded>Padded Heading Big and Long</H1>
+        <Paragraph>
+          <BodyText>
+            <BodyText italic>Paragraph</BodyText>
+            {
+              " why do the nations rage, and the peoples plot a vain thing? The kings of the earth take a stand, and the rulers take counsel together, against Yahweh, and against his Anointed, saying, «Let's break their bonds apart, and cast their cords from us. He who sits in the heavens will laugh. The LORD will have them in derision. Then he will speak to them in his anger, and terrify them in his wrath: Yet I have set my King on my holy hill of Zion.» I will tell of the decree. Yahweh said to me, You are my son. Today I have become your father. Ask of me, and I will give the nations for your inheritance, the uttermost parts of the earth for your possession. You shall break them with a rod of iron. You shall dash them in pieces like a potter's vessel. Now therefore be wise, you kings. Be instructed, you judges of the earth. Serve Yahweh with fear, and rejoice with trembling. Give sincere homage to the Son, lest he be angry, and you perish in the way, for his wrath will soon be kindled. Blessed are all those who take refuge in him."
+            }
+          </BodyText>
+        </Paragraph>
+        <H2 padded>Padded Heading Big and Long</H2>
+        <Paragraph>
+          <BodyText>
+            <BodyText italic>Paragraph</BodyText>
+            {
+              " blessed is the man who doesn't walk in the counsel of the wicked, nor stand in the way of sinners, nor sit in the seat of scoffers; but his delight is in Yahweh's law. On his law he meditates day and night. He will be like a tree planted by the streams of water, that brings forth its fruit in its season, whose leaf also does not wither. Whatever he does shall prosper. The wicked are not so, but are like the chaff which the wind drives away. Therefore the wicked shall not stand in the judgment, nor sinners in the congregation of the righteous. For Yahweh knows the way of the righteous, but the way of the wicked shall perish."
+            }
+          </BodyText>
+        </Paragraph>
+      </PaddedView>
+    </ScrollView>
+  ))
+  .add('isLoading', () => (
+    <ScrollView>
+      <H1 isLoading>
+        {
+          '"Do all the good you can. By all the means you can. In all the ways you can. In all the places you can. At all the times you can. To all the people you can. As long as ever you can." ― John Wesley'
+        }
+      </H1>
+    </ScrollView>
+  ))
+  .add('Border Box – platform testing', () => {
+    const border = { borderWidth: 1, borderStyle: 'solid' };
+
+    return (
+      <ScrollView>
+        <H1 style={border}>Heading 1</H1>
+        <H1 style={border}>
+          {
+            '"Do all the\ngood you can.\nBy all the means you can. In all the ways you can. In all the places you can. At all the times you can. To all the people you can. As long as ever you can." ― John Wesley'
+          }
+        </H1>
+      </ScrollView>
+    );
+  });
diff --git a/apolloschurchapp/src/ui/typography/H1/H1.tests.js b/apolloschurchapp/src/ui/typography/H1/H1.tests.js
new file mode 100644
index 0000000..79088b9
--- /dev/null
+++ b/apolloschurchapp/src/ui/typography/H1/H1.tests.js
@@ -0,0 +1,64 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import H1 from '.';
+
+describe('the H1 component', () => {
+  it('should render correctly', () => {
+    const tree = renderer.create(
+      <Providers>
+        <H1>Default H1 text</H1>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should accept and render passed in styles', () => {
+    const salmon = { color: 'salmon' };
+    const tree = renderer.create(
+      <Providers>
+        <H1 style={salmon}>Salmon text</H1>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render with correct padding', () => {
+    const tree = renderer.create(
+      <Providers>
+        <H1 padded>Padded H1 text</H1>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a loading state', () => {
+    const tree = renderer.create(
+      <Providers>
+        <H1 isLoading>Default H1 text</H1>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a loading state with correct positioning (margins)', () => {
+    const tree = renderer.create(
+      <Providers>
+        <H1 padded isLoading>
+          Padded H1 text
+        </H1>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should accept additional props', () => {
+    const tree = renderer.create(
+      <Providers>
+        <H1 accessible={false}>
+          {
+            '"Do all the good you can. By all the means you can. In all the ways you can. In all theplaces you can. At all the times you can. To all the people you can. As long as ever you can." ― John Wesley'
+          }
+        </H1>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/typography/H1/index.js b/apolloschurchapp/src/ui/typography/H1/index.js
new file mode 100644
index 0000000..15d7ac7
--- /dev/null
+++ b/apolloschurchapp/src/ui/typography/H1/index.js
@@ -0,0 +1,39 @@
+import { Text } from 'react-native';
+import PropTypes from 'prop-types';
+import { compose, setDisplayName, pure } from 'recompose';
+
+import styled from 'apolloschurchapp/src/ui/styled';
+import {
+  withPlaceholder,
+  Typography,
+} from 'apolloschurchapp/src/ui/Placeholder';
+
+const styles = styled(
+  ({ theme, padded }) => ({
+    fontSize: theme.helpers.rem(2.6875),
+    lineHeight: theme.helpers.verticalRhythm(2.6875, 1.15),
+    fontFamily: theme.typography.sans.black.default,
+    color: theme.colors.text.primary,
+    ...(padded
+      ? {
+          paddingVertical: theme.helpers.verticalRhythm(2.015625),
+        }
+      : {}),
+  }),
+  'H1'
+);
+
+const H1 = compose(
+  setDisplayName('H1'),
+  styles,
+  withPlaceholder(Typography, { width: '100%' }),
+  pure
+)(Text);
+
+H1.propTypes = {
+  padded: PropTypes.bool,
+  isLoading: PropTypes.bool, // display loading placeholder
+  ...Text.propTypes,
+};
+
+export default H1;
diff --git a/apolloschurchapp/src/ui/typography/H2/H2.stories.js b/apolloschurchapp/src/ui/typography/H2/H2.stories.js
new file mode 100644
index 0000000..4dea901
--- /dev/null
+++ b/apolloschurchapp/src/ui/typography/H2/H2.stories.js
@@ -0,0 +1,51 @@
+import React from 'react';
+import { View } from 'react-native';
+import { storiesOf } from '@storybook/react-native';
+
+import { Paragraph, BodyText } from 'apolloschurchapp/src/ui/typography';
+import PaddedView from 'apolloschurchapp/src/ui/PaddedView';
+
+import H2 from '.';
+
+storiesOf('typography/H2', module)
+  .add('Default', () => (
+    <H2>
+      {
+        '"God is most glorified in us when we are most satisfied in Him" ― John Piper'
+      }
+    </H2>
+  ))
+  .add('padded', () => (
+    <PaddedView>
+      <H2 padded>Padded Heading Big and Long</H2>
+      <Paragraph>
+        <BodyText>
+          <BodyText italic>Paragraph</BodyText>
+          {
+            " why do the nations rage, and the peoples plot a vain thing? The kings of the earth take a stand, and the rulers take counsel together, against Yahweh, and against his Anointed, saying, «Let's break their bonds apart, and cast their cords from us. He who sits in the heavens will laugh. The LORD will have them in derision. Then he will speak to them in his anger, and terrify them in his wrath: Yet I have set my King on my holy hill of Zion.» I will tell of the decree. Yahweh said to me, You are my son. Today I have become your father. Ask of me, and I will give the nations for your inheritance, the uttermost parts of the earth for your possession. You shall break them with a rod of iron. You shall dash them in pieces like a potter's vessel. Now therefore be wise, you kings. Be instructed, you judges of the earth. Serve Yahweh with fear, and rejoice with trembling. Give sincere homage to the Son, lest he be angry, and you perish in the way, for his wrath will soon be kindled. Blessed are all those who take refuge in him."
+          }
+        </BodyText>
+      </Paragraph>
+    </PaddedView>
+  ))
+  .add('isLoading', () => (
+    <H2 isLoading>
+      {
+        '"God is most glorified in us when we are most satisfied in Him" ― John Piper'
+      }
+    </H2>
+  ))
+  .add('Border Box – platform testing', () => {
+    const border = { borderWidth: 1, borderStyle: 'solid' };
+
+    return (
+      <View>
+        <H2 style={border}>Heading 2</H2>
+        <H2 style={border}>
+          {
+            '"God is most glorified in us when we are most satisfied in Him" ― John Piper'
+          }
+        </H2>
+      </View>
+    );
+  });
diff --git a/apolloschurchapp/src/ui/typography/H2/H2.tests.js b/apolloschurchapp/src/ui/typography/H2/H2.tests.js
new file mode 100644
index 0000000..4d27da7
--- /dev/null
+++ b/apolloschurchapp/src/ui/typography/H2/H2.tests.js
@@ -0,0 +1,64 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import H2 from '.';
+
+describe('the H2 component', () => {
+  it('should render correctly', () => {
+    const tree = renderer.create(
+      <Providers>
+        <H2>Default H2 text</H2>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should accept and render passed in styles', () => {
+    const salmon = { color: 'salmon' };
+    const tree = renderer.create(
+      <Providers>
+        <H2 style={salmon}>Salmon text</H2>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render with correct padding', () => {
+    const tree = renderer.create(
+      <Providers>
+        <H2 padded>Padded H2 text</H2>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a loading state', () => {
+    const tree = renderer.create(
+      <Providers>
+        <H2 isLoading>Default H2 text</H2>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a loading state with correct positioning (margins)', () => {
+    const tree = renderer.create(
+      <Providers>
+        <H2 padded isLoading>
+          Padded H2 text
+        </H2>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should accept additional props', () => {
+    const tree = renderer.create(
+      <Providers>
+        <H2 accessible={false}>
+          {
+            '"God is most glorified in us when we are most satisfied in Him" ― John Piper'
+          }
+        </H2>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/typography/H2/index.js b/apolloschurchapp/src/ui/typography/H2/index.js
new file mode 100644
index 0000000..19fba61
--- /dev/null
+++ b/apolloschurchapp/src/ui/typography/H2/index.js
@@ -0,0 +1,40 @@
+import { Text } from 'react-native';
+import PropTypes from 'prop-types';
+import { compose, setDisplayName, pure } from 'recompose';
+
+import styled from 'apolloschurchapp/src/ui/styled';
+import {
+  withPlaceholder,
+  Typography,
+} from 'apolloschurchapp/src/ui/Placeholder';
+
+const styles = styled(
+  ({ theme, padded }) => ({
+    fontSize: theme.helpers.rem(2.25),
+    lineHeight: theme.helpers.verticalRhythm(2.25, 1.15),
+    fontFamily: theme.typography.sans.black.default,
+    color: theme.colors.text.primary,
+    ...(padded
+      ? {
+          paddingTop: theme.helpers.verticalRhythm(1.6875),
+          paddingBottom: theme.helpers.verticalRhythm(1.125),
+        }
+      : {}),
+  }),
+  'H2'
+);
+
+const H2 = compose(
+  setDisplayName('H2'),
+  styles,
+  withPlaceholder(Typography, { width: '100%' }),
+  pure
+)(Text);
+
+H2.propTypes = {
+  padded: PropTypes.bool,
+  isLoading: PropTypes.bool, // display loading placeholder
+  ...Text.propTypes,
+};
+
+export default H2;
diff --git a/apolloschurchapp/src/ui/typography/H3/H3.stories.js b/apolloschurchapp/src/ui/typography/H3/H3.stories.js
new file mode 100644
index 0000000..42c966f
--- /dev/null
+++ b/apolloschurchapp/src/ui/typography/H3/H3.stories.js
@@ -0,0 +1,59 @@
+import React from 'react';
+import { View } from 'react-native';
+import { storiesOf } from '@storybook/react-native';
+
+import PaddedView from 'apolloschurchapp/src/ui/PaddedView';
+import { Paragraph, BodyText } from 'apolloschurchapp/src/ui/typography';
+
+import H3 from '.';
+
+storiesOf('typography/H3', module)
+  .add('Default', () => (
+    <H3>
+      {
+        '"The Christian shoemaker does his duty not by putting little crosses on the shoes, but by making good shoes, because God is interested in good craftsmanship." ― Martin Luther'
+      }
+    </H3>
+  ))
+  .add('padded', () => (
+    <PaddedView>
+      <Paragraph>
+        <BodyText>
+          <BodyText italic>Paragraph</BodyText>
+          {
+            " blessed is the man who doesn't walk in the counsel of the wicked, nor stand in the way of sinners, nor sit in the seat of scoffers; but his delight is in Yahweh's law. On his law he meditates day and night. He will be like a tree planted by the streams of water, that brings forth its fruit in its season, whose leaf also does not wither. Whatever he does shall prosper. The wicked are not so, but are like the chaff which the wind drives away. Therefore the wicked shall not stand in the judgment, nor sinners in the congregation of the righteous. For Yahweh knows the way of the righteous, but the way of the wicked shall perish."
+          }
+        </BodyText>
+      </Paragraph>
+      <H3 padded>Padded Heading The Story of The Longest Heading Ever</H3>
+      <Paragraph>
+        <BodyText>
+          <BodyText italic>Paragraph</BodyText>
+          {
+            " why do the nations rage, and the peoples plot a vain thing? The kings of the earth take a stand, and the rulers take counsel together, against Yahweh, and against his Anointed, saying, «Let's break their bonds apart, and cast their cords from us. He who sits in the heavens will laugh. The LORD will have them in derision. Then he will speak to them in his anger, and terrify them in his wrath: Yet I have set my King on my holy hill of Zion.» I will tell of the decree. Yahweh said to me, You are my son. Today I have become your father. Ask of me, and I will give the nations for your inheritance, the uttermost parts of the earth for your possession. You shall break them with a rod of iron. You shall dash them in pieces like a potter's vessel. Now therefore be wise, you kings. Be instructed, you judges of the earth. Serve Yahweh with fear, and rejoice with trembling. Give sincere homage to the Son, lest he be angry, and you perish in the way, for his wrath will soon be kindled. Blessed are all those who take refuge in him."
+          }
+        </BodyText>
+      </Paragraph>
+    </PaddedView>
+  ))
+  .add('isLoading', () => (
+    <H3 isLoading>
+      {
+        '"The Christian shoemaker does his duty not by putting little crosses on the shoes, but by making good shoes, because God is interested in good craftsmanship." ― Martin Luther'
+      }
+    </H3>
+  ))
+  .add('Border Box – platform testing', () => {
+    const border = { borderWidth: 1, borderStyle: 'solid' };
+
+    return (
+      <View>
+        <H3 style={border}>Heading 3</H3>
+        <H3 style={border}>
+          {
+            '"The Christian shoemaker does his duty not by putting little crosses on the shoes, but by making good shoes, because God is interested in good craftsmanship." ― Martin Luther'
+          }
+        </H3>
+      </View>
+    );
+  });
diff --git a/apolloschurchapp/src/ui/typography/H3/H3.tests.js b/apolloschurchapp/src/ui/typography/H3/H3.tests.js
new file mode 100644
index 0000000..cdbd69a
--- /dev/null
+++ b/apolloschurchapp/src/ui/typography/H3/H3.tests.js
@@ -0,0 +1,64 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import H3 from '.';
+
+describe('the H3 component', () => {
+  it('should render correctly', () => {
+    const tree = renderer.create(
+      <Providers>
+        <H3>Default H3 text</H3>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should accept and render passed in styles', () => {
+    const salmon = { color: 'salmon' };
+    const tree = renderer.create(
+      <Providers>
+        <H3 style={salmon}>Salmon text</H3>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render with correct padding', () => {
+    const tree = renderer.create(
+      <Providers>
+        <H3 padded>Padded H3 text</H3>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a loading state', () => {
+    const tree = renderer.create(
+      <Providers>
+        <H3 isLoading>Default H3 text</H3>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a loading state with correct positioning (margins)', () => {
+    const tree = renderer.create(
+      <Providers>
+        <H3 padded isLoading>
+          Padded H3 text
+        </H3>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should accept additional props', () => {
+    const tree = renderer.create(
+      <Providers>
+        <H3 accessible={false}>
+          {
+            '"The Christian shoemaker does his duty not by putting little crosses on the shoes, but by making good shoes, because God is interested in good craftsmanship." ― Martin Luther'
+          }
+        </H3>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/typography/H3/index.js b/apolloschurchapp/src/ui/typography/H3/index.js
new file mode 100644
index 0000000..b4d22bd
--- /dev/null
+++ b/apolloschurchapp/src/ui/typography/H3/index.js
@@ -0,0 +1,40 @@
+import { Text } from 'react-native';
+import PropTypes from 'prop-types';
+import { compose, setDisplayName, pure } from 'recompose';
+
+import styled from 'apolloschurchapp/src/ui/styled';
+import {
+  withPlaceholder,
+  Typography,
+} from 'apolloschurchapp/src/ui/Placeholder';
+
+const styles = styled(
+  ({ theme, padded }) => ({
+    fontSize: theme.helpers.rem(1.5),
+    lineHeight: theme.helpers.verticalRhythm(1.5, 1.15),
+    fontFamily: theme.typography.sans.black.default,
+    color: theme.colors.text.primary,
+    ...(padded
+      ? {
+          paddingTop: theme.helpers.verticalRhythm(1.125),
+          paddingBottom: theme.helpers.verticalRhythm(0.75),
+        }
+      : {}),
+  }),
+  'H3'
+);
+
+const H3 = compose(
+  setDisplayName('H3'),
+  styles,
+  withPlaceholder(Typography, { width: '100%' }),
+  pure
+)(Text);
+
+H3.propTypes = {
+  padded: PropTypes.bool,
+  isLoading: PropTypes.bool, // display loading placeholder
+  ...Text.propTypes,
+};
+
+export default H3;
diff --git a/apolloschurchapp/src/ui/typography/H4/H4.stories.js b/apolloschurchapp/src/ui/typography/H4/H4.stories.js
new file mode 100644
index 0000000..82dcd6f
--- /dev/null
+++ b/apolloschurchapp/src/ui/typography/H4/H4.stories.js
@@ -0,0 +1,59 @@
+import React from 'react';
+import { View } from 'react-native';
+import { storiesOf } from '@storybook/react-native';
+
+import { Paragraph, BodyText } from 'apolloschurchapp/src/ui/typography';
+import PaddedView from 'apolloschurchapp/src/ui/PaddedView';
+
+import H4 from '.';
+
+storiesOf('typography/H4', module)
+  .add('Default', () => (
+    <H4>
+      {
+        '"What you are is God\'s gift to you, what you become is your gift to God." ― Hans Urs von Balthasar'
+      }
+    </H4>
+  ))
+  .add('padded', () => (
+    <PaddedView>
+      <Paragraph>
+        <BodyText>
+          <BodyText italic>Paragraph</BodyText>
+          {
+            " blessed is the man who doesn't walk in the counsel of the wicked, nor stand in the way of sinners, nor sit in the seat of scoffers; but his delight is in Yahweh's law. On his law he meditates day and night. He will be like a tree planted by the streams of water, that brings forth its fruit in its season, whose leaf also does not wither. Whatever he does shall prosper. The wicked are not so, but are like the chaff which the wind drives away. Therefore the wicked shall not stand in the judgment, nor sinners in the congregation of the righteous. For Yahweh knows the way of the righteous, but the way of the wicked shall perish."
+          }
+        </BodyText>
+      </Paragraph>
+      <H4 padded>Padded Heading The Story of The Longest Heading Ever</H4>
+      <Paragraph>
+        <BodyText>
+          <BodyText italic>Paragraph</BodyText>
+          {
+            " why do the nations rage, and the peoples plot a vain thing? The kings of the earth take a stand, and the rulers take counsel together, against Yahweh, and against his Anointed, saying, «Let's break their bonds apart, and cast their cords from us. He who sits in the heavens will laugh. The LORD will have them in derision. Then he will speak to them in his anger, and terrify them in his wrath: Yet I have set my King on my holy hill of Zion.» I will tell of the decree. Yahweh said to me, You are my son. Today I have become your father. Ask of me, and I will give the nations for your inheritance, the uttermost parts of the earth for your possession. You shall break them with a rod of iron. You shall dash them in pieces like a potter's vessel. Now therefore be wise, you kings. Be instructed, you judges of the earth. Serve Yahweh with fear, and rejoice with trembling. Give sincere homage to the Son, lest he be angry, and you perish in the way, for his wrath will soon be kindled. Blessed are all those who take refuge in him."
+          }
+        </BodyText>
+      </Paragraph>
+    </PaddedView>
+  ))
+  .add('isLoading', () => (
+    <H4 isLoading>
+      {
+        '"What you are is God\'s gift to you, what you become is your gift to God." ― Hans Urs von Balthasar'
+      }
+    </H4>
+  ))
+  .add('Border Box – platform testing', () => {
+    const border = { borderWidth: 1, borderStyle: 'solid' };
+
+    return (
+      <View>
+        <H4 style={border}>Heading 4</H4>
+        <H4 style={border}>
+          {
+            '"What you are is God\'s gift to you, what you become is your gift to God." ― Hans Urs von Balthasar'
+          }
+        </H4>
+      </View>
+    );
+  });
diff --git a/apolloschurchapp/src/ui/typography/H4/H4.tests.js b/apolloschurchapp/src/ui/typography/H4/H4.tests.js
new file mode 100644
index 0000000..f03f6a9
--- /dev/null
+++ b/apolloschurchapp/src/ui/typography/H4/H4.tests.js
@@ -0,0 +1,64 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import H4 from '.';
+
+describe('the H4 component', () => {
+  it('should render correctly', () => {
+    const tree = renderer.create(
+      <Providers>
+        <H4>Default H4 text</H4>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should accept and render passed in styles', () => {
+    const salmon = { color: 'salmon' };
+    const tree = renderer.create(
+      <Providers>
+        <H4 style={salmon}>Salmon text</H4>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render with correct padding', () => {
+    const tree = renderer.create(
+      <Providers>
+        <H4 padded>Padded H4 text</H4>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a loading state', () => {
+    const tree = renderer.create(
+      <Providers>
+        <H4 isLoading>Default H4 text</H4>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a loading state with correct positioning (margins)', () => {
+    const tree = renderer.create(
+      <Providers>
+        <H4 padded isLoading>
+          Padded H4 text
+        </H4>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should accept additional props', () => {
+    const tree = renderer.create(
+      <Providers>
+        <H4 accessible={false}>
+          {
+            '"What you are is God\'s gift to you, what you become is your gift to God." ― Hans Urs von Balthasar'
+          }
+        </H4>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/typography/H4/index.js b/apolloschurchapp/src/ui/typography/H4/index.js
new file mode 100644
index 0000000..04589a1
--- /dev/null
+++ b/apolloschurchapp/src/ui/typography/H4/index.js
@@ -0,0 +1,37 @@
+import { Text } from 'react-native';
+import PropTypes from 'prop-types';
+import { compose, setDisplayName, pure } from 'recompose';
+
+import styled from 'apolloschurchapp/src/ui/styled';
+import {
+  withPlaceholder,
+  Typography,
+} from 'apolloschurchapp/src/ui/Placeholder';
+
+const H4 = compose(
+  setDisplayName('H4'),
+  styled(
+    ({ theme, padded }) => ({
+      fontSize: theme.helpers.rem(1),
+      lineHeight: theme.helpers.verticalRhythm(1),
+      fontFamily: theme.typography.sans.bold.default,
+      color: theme.colors.text.primary,
+      ...(padded
+        ? {
+            paddingTop: theme.helpers.verticalRhythm(0.66),
+            paddingBottom: theme.helpers.verticalRhythm(0.5),
+          }
+        : {}),
+    }),
+    'H4'
+  ),
+  withPlaceholder(Typography, { width: '80%' }),
+  pure
+)(Text);
+
+H4.propTypes = {
+  isLoading: PropTypes.bool, // display loading placeholder
+  ...Text.propTypes,
+};
+
+export default H4;
diff --git a/apolloschurchapp/src/ui/typography/H5/H5.stories.js b/apolloschurchapp/src/ui/typography/H5/H5.stories.js
new file mode 100644
index 0000000..d7655d4
--- /dev/null
+++ b/apolloschurchapp/src/ui/typography/H5/H5.stories.js
@@ -0,0 +1,59 @@
+import React from 'react';
+import { View } from 'react-native';
+import { storiesOf } from '@storybook/react-native';
+
+import { Paragraph, BodyText } from 'apolloschurchapp/src/ui/typography';
+import PaddedView from 'apolloschurchapp/src/ui/PaddedView';
+
+import H5 from '.';
+
+storiesOf('typography/H5', module)
+  .add('Default', () => (
+    <H5>
+      {
+        '"Faith does not eliminate questions. But faith knows where to take them." ― Elisabeth Elliot'
+      }
+    </H5>
+  ))
+  .add('padded', () => (
+    <PaddedView>
+      <Paragraph>
+        <BodyText>
+          <BodyText italic>Paragraph</BodyText>
+          {
+            " blessed is the man who doesn't walk in the counsel of the wicked, nor stand in the way of sinners, nor sit in the seat of scoffers; but his delight is in Yahweh's law. On his law he meditates day and night. He will be like a tree planted by the streams of water, that brings forth its fruit in its season, whose leaf also does not wither. Whatever he does shall prosper. The wicked are not so, but are like the chaff which the wind drives away. Therefore the wicked shall not stand in the judgment, nor sinners in the congregation of the righteous. For Yahweh knows the way of the righteous, but the way of the wicked shall perish."
+          }
+        </BodyText>
+      </Paragraph>
+      <H5 padded>Padded Heading The Story of The Longest Heading Ever</H5>
+      <Paragraph>
+        <BodyText>
+          <BodyText italic>Paragraph</BodyText>
+          {
+            " why do the nations rage, and the peoples plot a vain thing? The kings of the earth take a stand, and the rulers take counsel together, against Yahweh, and against his Anointed, saying, «Let's break their bonds apart, and cast their cords from us. He who sits in the heavens will laugh. The LORD will have them in derision. Then he will speak to them in his anger, and terrify them in his wrath: Yet I have set my King on my holy hill of Zion.» I will tell of the decree. Yahweh said to me, You are my son. Today I have become your father. Ask of me, and I will give the nations for your inheritance, the uttermost parts of the earth for your possession. You shall break them with a rod of iron. You shall dash them in pieces like a potter's vessel. Now therefore be wise, you kings. Be instructed, you judges of the earth. Serve Yahweh with fear, and rejoice with trembling. Give sincere homage to the Son, lest he be angry, and you perish in the way, for his wrath will soon be kindled. Blessed are all those who take refuge in him."
+          }
+        </BodyText>
+      </Paragraph>
+    </PaddedView>
+  ))
+  .add('isLoading', () => (
+    <H5 isLoading>
+      {
+        '"Faith does not eliminate questions. But faith knows where to take them." ― Elisabeth Elliot'
+      }
+    </H5>
+  ))
+  .add('Border Box – platform testing', () => {
+    const border = { borderWidth: 1, borderStyle: 'solid' };
+
+    return (
+      <View>
+        <H5 style={border}>Heading 5</H5>
+        <H5 style={border}>
+          {
+            '"Faith does not eliminate questions. But faith knows where to take them." ― Elisabeth Elliot'
+          }
+        </H5>
+      </View>
+    );
+  });
diff --git a/apolloschurchapp/src/ui/typography/H5/H5.tests.js b/apolloschurchapp/src/ui/typography/H5/H5.tests.js
new file mode 100644
index 0000000..1c36f36
--- /dev/null
+++ b/apolloschurchapp/src/ui/typography/H5/H5.tests.js
@@ -0,0 +1,64 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import H5 from '.';
+
+describe('the H5 component', () => {
+  it('should render correctly', () => {
+    const tree = renderer.create(
+      <Providers>
+        <H5>Default H5 text</H5>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should accept and render passed in styles', () => {
+    const salmon = { color: 'salmon' };
+    const tree = renderer.create(
+      <Providers>
+        <H5 style={salmon}>Salmon text</H5>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render with correct padding', () => {
+    const tree = renderer.create(
+      <Providers>
+        <H5 padded>Padded H5 text</H5>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a loading state', () => {
+    const tree = renderer.create(
+      <Providers>
+        <H5 isLoading>Default H5 text</H5>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a loading state with correct positioning (margins)', () => {
+    const tree = renderer.create(
+      <Providers>
+        <H5 padded isLoading>
+          Padded H5 text
+        </H5>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should accept additional props', () => {
+    const tree = renderer.create(
+      <Providers>
+        <H5 accessible={false}>
+          {
+            '"Faith does not eliminate questions. But faith knows where to take them." ― Elisabeth Elliot'
+          }
+        </H5>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/typography/H5/index.js b/apolloschurchapp/src/ui/typography/H5/index.js
new file mode 100644
index 0000000..04caa52
--- /dev/null
+++ b/apolloschurchapp/src/ui/typography/H5/index.js
@@ -0,0 +1,40 @@
+import { Text } from 'react-native';
+import PropTypes from 'prop-types';
+import { compose, setDisplayName, pure } from 'recompose';
+
+import styled from 'apolloschurchapp/src/ui/styled';
+import {
+  withPlaceholder,
+  Typography,
+} from 'apolloschurchapp/src/ui/Placeholder';
+
+const styles = styled(
+  ({ theme, padded }) => ({
+    fontSize: theme.helpers.rem(0.875),
+    lineHeight: theme.helpers.verticalRhythm(0.875),
+    fontFamily: theme.typography.sans.medium.default,
+    color: theme.colors.text.primary,
+    ...(padded
+      ? {
+          paddingTop: theme.helpers.verticalRhythm(0.5775),
+          paddingBottom: theme.helpers.verticalRhythm(0.4375),
+        }
+      : {}),
+  }),
+  'H5'
+);
+
+const H5 = compose(
+  setDisplayName('H5'),
+  styles,
+  withPlaceholder(Typography, { width: '60%' }),
+  pure
+)(Text);
+
+H5.propTypes = {
+  padded: PropTypes.bool,
+  isLoading: PropTypes.bool, // display loading placeholder
+  ...Text.propTypes,
+};
+
+export default H5;
diff --git a/apolloschurchapp/src/ui/typography/H6/H6.stories.js b/apolloschurchapp/src/ui/typography/H6/H6.stories.js
new file mode 100644
index 0000000..ef14964
--- /dev/null
+++ b/apolloschurchapp/src/ui/typography/H6/H6.stories.js
@@ -0,0 +1,59 @@
+import React from 'react';
+import { View } from 'react-native';
+import { storiesOf } from '@storybook/react-native';
+
+import { Paragraph, BodyText } from 'apolloschurchapp/src/ui/typography';
+import PaddedView from 'apolloschurchapp/src/ui/PaddedView';
+
+import H6 from '.';
+
+storiesOf('typography/H6', module)
+  .add('Default', () => (
+    <H6>
+      {
+        '"Radical obedience to Christ is not easy... It\'s not comfort, not health, not wealth, and not prosperity in this world. Radical obedience to Christ risks losing all these things. But in the end, such risk finds its reward in Christ. And He is more than enough for us." ― David Platt'
+      }
+    </H6>
+  ))
+  .add('padded', () => (
+    <PaddedView>
+      <Paragraph>
+        <BodyText>
+          <BodyText italic>Paragraph</BodyText>
+          {
+            " blessed is the man who doesn't walk in the counsel of the wicked, nor stand in the way of sinners, nor sit in the seat of scoffers; but his delight is in Yahweh's law. On his law he meditates day and night. He will be like a tree planted by the streams of water, that brings forth its fruit in its season, whose leaf also does not wither. Whatever he does shall prosper. The wicked are not so, but are like the chaff which the wind drives away. Therefore the wicked shall not stand in the judgment, nor sinners in the congregation of the righteous. For Yahweh knows the way of the righteous, but the way of the wicked shall perish."
+          }
+        </BodyText>
+      </Paragraph>
+      <H6 padded>Padded Heading The Story of The Longest Heading Ever</H6>
+      <Paragraph>
+        <BodyText>
+          <BodyText italic>Paragraph</BodyText>
+          {
+            " why do the nations rage, and the peoples plot a vain thing? The kings of the earth take a stand, and the rulers take counsel together, against Yahweh, and against his Anointed, saying, «Let's break their bonds apart, and cast their cords from us. He who sits in the heavens will laugh. The LORD will have them in derision. Then he will speak to them in his anger, and terrify them in his wrath: Yet I have set my King on my holy hill of Zion.» I will tell of the decree. Yahweh said to me, You are my son. Today I have become your father. Ask of me, and I will give the nations for your inheritance, the uttermost parts of the earth for your possession. You shall break them with a rod of iron. You shall dash them in pieces like a potter's vessel. Now therefore be wise, you kings. Be instructed, you judges of the earth. Serve Yahweh with fear, and rejoice with trembling. Give sincere homage to the Son, lest he be angry, and you perish in the way, for his wrath will soon be kindled. Blessed are all those who take refuge in him."
+          }
+        </BodyText>
+      </Paragraph>
+    </PaddedView>
+  ))
+  .add('isLoading', () => (
+    <H6 isLoading>
+      {
+        '"Radical obedience to Christ is not easy... It\'s not comfort, not health, not wealth, and not prosperity in this world. Radical obedience to Christ risks losing all these things. But in the end, such risk finds its reward in Christ. And He is more than enough for us." ― David Platt'
+      }
+    </H6>
+  ))
+  .add('Border Box – platform testing', () => {
+    const border = { borderWidth: 1, borderStyle: 'solid' };
+
+    return (
+      <View>
+        <H6 style={border}>Heading 6</H6>
+        <H6 style={border}>
+          {
+            '"Radical obedience to Christ is not easy... It\'s not comfort, not health, not wealth, and not prosperity in this world. Radical obedience to Christ risks losing all these things. But in the end, such risk finds its reward in Christ. And He is more than enough for us." ― David Platt'
+          }
+        </H6>
+      </View>
+    );
+  });
diff --git a/apolloschurchapp/src/ui/typography/H6/H6.tests.js b/apolloschurchapp/src/ui/typography/H6/H6.tests.js
new file mode 100644
index 0000000..849c9c1
--- /dev/null
+++ b/apolloschurchapp/src/ui/typography/H6/H6.tests.js
@@ -0,0 +1,64 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import H6 from '.';
+
+describe('the H6 component', () => {
+  it('should render correctly', () => {
+    const tree = renderer.create(
+      <Providers>
+        <H6>Default H6 text</H6>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should accept and render passed in styles', () => {
+    const salmon = { color: 'salmon' };
+    const tree = renderer.create(
+      <Providers>
+        <H6 style={salmon}>Salmon text</H6>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render with correct padding', () => {
+    const tree = renderer.create(
+      <Providers>
+        <H6 padded>Padded H6 text</H6>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a loading state', () => {
+    const tree = renderer.create(
+      <Providers>
+        <H6 isLoading>Default H6 text</H6>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a loading state with correct positioning (margins)', () => {
+    const tree = renderer.create(
+      <Providers>
+        <H6 padded isLoading>
+          Padded H6 text
+        </H6>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should accept additional props', () => {
+    const tree = renderer.create(
+      <Providers>
+        <H6 accessible={false}>
+          {
+            '"Radical obedience to Christ is not easy... It\'s not comfort, not health, not wealth, and not prosperity in this world. Radical obedience to Christ risks losing all these things. But in the end, such risk finds its reward in Christ. And he is more than enough for us." ― David Platt'
+          }
+        </H6>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/typography/H6/index.js b/apolloschurchapp/src/ui/typography/H6/index.js
new file mode 100644
index 0000000..9084ba1
--- /dev/null
+++ b/apolloschurchapp/src/ui/typography/H6/index.js
@@ -0,0 +1,40 @@
+import { Text } from 'react-native';
+import PropTypes from 'prop-types';
+import { compose, setDisplayName, pure } from 'recompose';
+
+import styled from 'apolloschurchapp/src/ui/styled';
+import {
+  withPlaceholder,
+  Typography,
+} from 'apolloschurchapp/src/ui/Placeholder';
+
+const styles = styled(
+  ({ theme, padded }) => ({
+    fontSize: theme.helpers.rem(0.75),
+    lineHeight: theme.helpers.verticalRhythm(0.75),
+    fontFamily: theme.typography.sans.bold.default,
+    color: theme.colors.text.secondary,
+    ...(padded
+      ? {
+          // paddingTop: theme.helpers.verticalRhythm(0.495),
+          paddingBottom: theme.helpers.verticalRhythm(0.375),
+        }
+      : {}),
+  }),
+  'H6'
+);
+
+const H6 = compose(
+  setDisplayName('H6'),
+  styles,
+  withPlaceholder(Typography, { width: '50%' }),
+  pure
+)(Text);
+
+H6.propTypes = {
+  padded: PropTypes.bool,
+  isLoading: PropTypes.bool, // display loading placeholder
+  ...Text.propTypes,
+};
+
+export default H6;
diff --git a/apolloschurchapp/src/ui/typography/Paragraph/Paragraph.stories.js b/apolloschurchapp/src/ui/typography/Paragraph/Paragraph.stories.js
new file mode 100644
index 0000000..fc68b44
--- /dev/null
+++ b/apolloschurchapp/src/ui/typography/Paragraph/Paragraph.stories.js
@@ -0,0 +1,81 @@
+import React from 'react';
+import { storiesOf } from '@storybook/react-native';
+import { ScrollView } from 'react-native';
+
+import { BodyText } from 'apolloschurchapp/src/ui/typography';
+import PaddedView from 'apolloschurchapp/src/ui/PaddedView';
+
+import Paragraph from '.';
+
+storiesOf('typography/Paragraph', module)
+  .add('Default', () => (
+    <ScrollView>
+      <PaddedView>
+        <Paragraph>
+          <BodyText>
+            {`But I, brothers, could not address you as spiritual people, but as people of the flesh, as infants in Christ. I fed you with milk, not solid food, for you were not ready for it. And even now you are not yet ready, for you are still of the flesh. For while there is jealousy and strife among you, are you not of the flesh and behaving only in a human way? For when one says, "I follow Paul," and another, "I follow Apollos," are you not being merely human?`}
+          </BodyText>
+        </Paragraph>
+
+        <Paragraph>
+          <BodyText>
+            {`What then is Apollos? What is Paul? Servants through whom you believed, as the Lord assigned to each. I planted, Apollos watered, but God gave the growth. So neither he who plants nor he who waters is anything, but only God who gives the growth. He who plants and he who waters are one, and each will receive his wages according to his labor. For we are God's fellow workers. You are God's field, God's building.`}
+          </BodyText>
+        </Paragraph>
+
+        <Paragraph>
+          <BodyText>
+            {`According to the grace of God given to me, like a skilled[b] master builder I laid a foundation, and someone else is building upon it. Let each one take care how he builds upon it. For no one can lay a foundation other than that which is laid, which is Jesus Christ. Now if anyone builds on the foundation with gold, silver, precious stones, wood, hay, straw— each one's work will become manifest, for the Day will disclose it, because it will be revealed by fire, and the fire will test what sort of work each one has done. If the work that anyone has built on the foundation survives, he will receive a reward. If anyone's work is burned up, he will suffer loss, though he himself will be saved, but only as through fire.`}
+          </BodyText>
+        </Paragraph>
+      </PaddedView>
+    </ScrollView>
+  ))
+  .add('isLoading', () => (
+    <ScrollView>
+      <PaddedView>
+        <Paragraph isLoading>
+          <BodyText>
+            {`But I, brothers, could not address you as spiritual people, but as people of the flesh, as infants in Christ. I fed you with milk, not solid food, for you were not ready for it. And even now you are not yet ready, for you are still of the flesh. For while there is jealousy and strife among you, are you not of the flesh and behaving only in a human way? For when one says, "I follow Paul," and another, "I follow Apollos," are you not being merely human?`}
+          </BodyText>
+        </Paragraph>
+
+        <Paragraph isLoading>
+          <BodyText>
+            {`What then is Apollos? What is Paul? Servants through whom you believed, as the Lord assigned to each. I planted, Apollos watered, but God gave the growth. So neither he who plants nor he who waters is anything, but only God who gives the growth. He who plants and he who waters are one, and each will receive his wages according to his labor. For we are God's fellow workers. You are God's field, God's building.`}
+          </BodyText>
+        </Paragraph>
+
+        <Paragraph isLoading>
+          <BodyText>
+            {`According to the grace of God given to me, like a skilled[b] master builder I laid a foundation, and someone else is building upon it. Let each one take care how he builds upon it. For no one can lay a foundation other than that which is laid, which is Jesus Christ. Now if anyone builds on the foundation with gold, silver, precious stones, wood, hay, straw— each one's work will become manifest, for the Day will disclose it, because it will be revealed by fire, and the fire will test what sort of work each one has done. If the work that anyone has built on the foundation survives, he will receive a reward. If anyone's work is burned up, he will suffer loss, though he himself will be saved, but only as through fire.`}
+          </BodyText>
+        </Paragraph>
+      </PaddedView>
+    </ScrollView>
+  ))
+  .add('Border Box – platform testing', () => {
+    const border = { borderWidth: 1, borderStyle: 'solid' };
+
+    return (
+      <ScrollView>
+        <Paragraph style={border}>
+          <BodyText>
+            {`But I, brothers, could not address you as spiritual people, but as people of the flesh, as infants in Christ. I fed you with milk, not solid food, for you were not ready for it. And even now you are not yet ready, for you are still of the flesh. For while there is jealousy and strife among you, are you not of the flesh and behaving only in a human way? For when one says, "I follow Paul," and another, "I follow Apollos," are you not being merely human?`}
+          </BodyText>
+        </Paragraph>
+
+        <Paragraph style={border}>
+          <BodyText>
+            {`What then is Apollos? What is Paul? Servants through whom you believed, as the Lord assigned to each. I planted, Apollos watered, but God gave the growth. So neither he who plants nor he who waters is anything, but only God who gives the growth. He who plants and he who waters are one, and each will receive his wages according to his labor. For we are God's fellow workers. You are God's field, God's building.`}
+          </BodyText>
+        </Paragraph>
+
+        <Paragraph style={border}>
+          <BodyText>
+            {`According to the grace of God given to me, like a skilled[b] master builder I laid a foundation, and someone else is building upon it. Let each one take care how he builds upon it. For no one can lay a foundation other than that which is laid, which is Jesus Christ. Now if anyone builds on the foundation with gold, silver, precious stones, wood, hay, straw— each one's work will become manifest, for the Day will disclose it, because it will be revealed by fire, and the fire will test what sort of work each one has done. If the work that anyone has built on the foundation survives, he will receive a reward. If anyone's work is burned up, he will suffer loss, though he himself will be saved, but only as through fire.`}
+          </BodyText>
+        </Paragraph>
+      </ScrollView>
+    );
+  });
diff --git a/apolloschurchapp/src/ui/typography/Paragraph/Paragraph.tests.js b/apolloschurchapp/src/ui/typography/Paragraph/Paragraph.tests.js
new file mode 100644
index 0000000..14f295c
--- /dev/null
+++ b/apolloschurchapp/src/ui/typography/Paragraph/Paragraph.tests.js
@@ -0,0 +1,46 @@
+import React from 'react';
+import { Text } from 'react-native';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import Paragraph from '.';
+
+describe('the UIText component', () => {
+  it('should render correctly', () => {
+    const tree = renderer.create(
+      <Providers>
+        <Paragraph>
+          <Text>
+            {`But I, brothers, could not address you as spiritual people, but as
+              people of the flesh, as infants in Christ. I fed you with milk, not
+              solid food, for you were not ready for it. And even now you are not
+              yet ready, for you are still of the flesh. For while there is jealousy
+              and strife among you, are you not of the flesh and behaving only in a
+              human way? For when one says, "I follow Paul," and another, "I follow
+              Apollos," are you not being merely human?`}
+          </Text>
+        </Paragraph>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a loading state', () => {
+    const tree = renderer.create(
+      <Providers>
+        <Paragraph isLoading>
+          <Text>
+            {`But I, brothers, could not address you as spiritual people, but as
+              people of the flesh, as infants in Christ. I fed you with milk, not
+              solid food, for you were not ready for it. And even now you are not
+              yet ready, for you are still of the flesh. For while there is jealousy
+              and strife among you, are you not of the flesh and behaving only in a
+              human way? For when one says, "I follow Paul," and another, "I follow
+              Apollos," are you not being merely human?`}
+          </Text>
+        </Paragraph>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/typography/Paragraph/index.js b/apolloschurchapp/src/ui/typography/Paragraph/index.js
new file mode 100644
index 0000000..ed68326
--- /dev/null
+++ b/apolloschurchapp/src/ui/typography/Paragraph/index.js
@@ -0,0 +1,23 @@
+import { compose, setDisplayName } from 'recompose';
+import PropTypes from 'prop-types';
+import { View } from 'react-native';
+
+import {
+  withPlaceholder,
+  Paragraph as ParagraphPlaceholder,
+} from 'apolloschurchapp/src/ui/Placeholder';
+import styled from 'apolloschurchapp/src/ui/styled';
+
+const Paragraph = compose(
+  setDisplayName('Paragraph'),
+  styled(({ theme }) => ({
+    paddingBottom: theme.helpers.verticalRhythm(0.75),
+  })),
+  withPlaceholder(ParagraphPlaceholder)
+)(View);
+
+Paragraph.propTypes = {
+  isLoading: PropTypes.bool, // display loading placeholder
+};
+
+export default Paragraph;
diff --git a/apolloschurchapp/src/ui/typography/UIText/UIText.stories.js b/apolloschurchapp/src/ui/typography/UIText/UIText.stories.js
new file mode 100644
index 0000000..62ac32e
--- /dev/null
+++ b/apolloschurchapp/src/ui/typography/UIText/UIText.stories.js
@@ -0,0 +1,56 @@
+import React from 'react';
+import { View } from 'react-native';
+import { storiesOf } from '@storybook/react-native';
+
+import UIText from '.';
+
+storiesOf('typography/UIText', module)
+  .add('Normal', () => (
+    <UIText>
+      {
+        '"You are the only Bible some unbelievers will ever read." – John MacArthur'
+      }
+    </UIText>
+  ))
+  .add('Bold', () => (
+    <UIText bold>
+      {
+        '"You are the only Bible some unbelievers will ever read." – John MacArthur'
+      }
+    </UIText>
+  ))
+  .add('Italic', () => (
+    <UIText italic>
+      {
+        '"You are the only Bible some unbelievers will ever read." – John MacArthur'
+      }
+    </UIText>
+  ))
+  .add('Bold Italic', () => (
+    <UIText bold italic>
+      {
+        '"You are the only Bible some unbelievers will ever read." – John MacArthur'
+      }
+    </UIText>
+  ))
+  .add('isLoading', () => (
+    <UIText isLoading>
+      {
+        '"You are the only Bible some unbelievers will ever read." – John MacArthur'
+      }
+    </UIText>
+  ))
+  .add('Border Box – platform testing', () => {
+    const border = { borderWidth: 1, borderStyle: 'solid' };
+
+    return (
+      <View>
+        <UIText style={border}>UI Text</UIText>
+        <UIText style={border}>
+          {
+            '"You are the only Bible some unbelievers will ever read." – John MacArthur'
+          }
+        </UIText>
+      </View>
+    );
+  });
diff --git a/apolloschurchapp/src/ui/typography/UIText/UIText.tests.js b/apolloschurchapp/src/ui/typography/UIText/UIText.tests.js
new file mode 100644
index 0000000..646447e
--- /dev/null
+++ b/apolloschurchapp/src/ui/typography/UIText/UIText.tests.js
@@ -0,0 +1,72 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import UIText from '.';
+
+describe('the UIText component', () => {
+  it('should render correctly', () => {
+    const tree = renderer.create(
+      <Providers>
+        <UIText>Default UIText text</UIText>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render as bold', () => {
+    const tree = renderer.create(
+      <Providers>
+        <UIText bold>Bold UIText text</UIText>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render as italic', () => {
+    const tree = renderer.create(
+      <Providers>
+        <UIText italic>Italic UIText text</UIText>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render as bold italic', () => {
+    const tree = renderer.create(
+      <Providers>
+        <UIText bold italic>
+          Bold italic UIText text
+        </UIText>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should accept and render passed in styles', () => {
+    const salmon = { color: 'salmon' };
+    const tree = renderer.create(
+      <Providers>
+        <UIText style={salmon}>Salmon text</UIText>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a loading state', () => {
+    const tree = renderer.create(
+      <Providers>
+        <UIText isLoading>Default UIText text</UIText>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should accept additional props', () => {
+    const tree = renderer.create(
+      <Providers>
+        <UIText accessible={false}>
+          {
+            '"You are the only Bible some unbelievers will ever read." – John MacArthur'
+          }
+        </UIText>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/typography/UIText/index.js b/apolloschurchapp/src/ui/typography/UIText/index.js
new file mode 100644
index 0000000..3e7e5ce
--- /dev/null
+++ b/apolloschurchapp/src/ui/typography/UIText/index.js
@@ -0,0 +1,35 @@
+import { Text } from 'react-native';
+import PropTypes from 'prop-types';
+import { compose, setDisplayName, pure } from 'recompose';
+
+import styled from 'apolloschurchapp/src/ui/styled';
+import {
+  withPlaceholder,
+  Typography,
+} from 'apolloschurchapp/src/ui/Placeholder';
+
+const UIText = compose(
+  setDisplayName('UIText'),
+  styled(
+    ({ theme, bold, italic }) => ({
+      fontSize: theme.helpers.rem(0.875),
+      lineHeight: theme.helpers.verticalRhythm(0.875),
+      fontFamily: theme.typography.ui.regular,
+      fontStyle: italic ? 'italic' : null,
+      fontWeight: bold ? '700' : null,
+      color: theme.colors.text.primary,
+    }),
+    'UIText'
+  ),
+  withPlaceholder(Typography, { width: '40%' }),
+  pure
+)(Text);
+
+UIText.propTypes = {
+  bold: PropTypes.bool,
+  italic: PropTypes.bool,
+  isLoading: PropTypes.bool, // display loading placeholder
+  ...Text.propTypes,
+};
+
+export default UIText;
diff --git a/apolloschurchapp/src/ui/typography/headings.stories.js b/apolloschurchapp/src/ui/typography/headings.stories.js
new file mode 100644
index 0000000..efbe852
--- /dev/null
+++ b/apolloschurchapp/src/ui/typography/headings.stories.js
@@ -0,0 +1,31 @@
+import React from 'react';
+import { View } from 'react-native';
+import { storiesOf } from '@storybook/react-native';
+
+import { withIsLoading } from 'apolloschurchapp/src/ui/isLoading';
+
+import { H1, H2, H3, H4, H5, H6 } from '.';
+
+const SetLoading = withIsLoading(View);
+
+storiesOf('typography', module)
+  .add('headings', () => (
+    <View>
+      <H1>Heading 1</H1>
+      <H2>Heading 2</H2>
+      <H3>Heading 3</H3>
+      <H4>Heading 4</H4>
+      <H5>Heading 5</H5>
+      <H6>Heading 6</H6>
+    </View>
+  ))
+  .add('placeholders', () => (
+    <SetLoading isLoading>
+      <H1>Heading 1</H1>
+      <H2>Heading 2</H2>
+      <H3>Heading 3</H3>
+      <H4>Heading 4</H4>
+      <H5>Heading 5</H5>
+      <H6>Heading 6</H6>
+    </SetLoading>
+  ));
diff --git a/apolloschurchapp/src/ui/typography/index.js b/apolloschurchapp/src/ui/typography/index.js
new file mode 100644
index 0000000..fb53054
--- /dev/null
+++ b/apolloschurchapp/src/ui/typography/index.js
@@ -0,0 +1,11 @@
+export H1 from './H1';
+export H2 from './H2';
+export H3 from './H3';
+export H4 from './H4';
+export H5 from './H5';
+export H6 from './H6';
+export UIText from './UIText';
+export BodyText from './BodyText';
+export Paragraph from './Paragraph';
+export BlockQuote from './BlockQuote';
+export BulletListItem from './BulletListItem';
diff --git a/apolloschurchapp/src/user-settings/ChangePassword.js b/apolloschurchapp/src/user-settings/ChangePassword.js
deleted file mode 100644
index 2623a2f..0000000
--- a/apolloschurchapp/src/user-settings/ChangePassword.js
+++ /dev/null
@@ -1,155 +0,0 @@
-import React, { PureComponent } from 'react';
-import PropTypes from 'prop-types';
-import {
-  Platform,
-  KeyboardAvoidingView,
-  StyleSheet,
-  StatusBar,
-} from 'react-native';
-import { Mutation } from 'react-apollo';
-import { SafeAreaView, Header } from 'react-navigation';
-import { Formik } from 'formik';
-import * as Yup from 'yup';
-
-import {
-  Button,
-  ButtonLink,
-  TextInput,
-  PaddedView,
-  FlexedView,
-  styled,
-} from '@apollosproject/ui-kit';
-
-import GET_AUTH_TOKEN from '../store/getAuthToken';
-import CHANGE_PASSWORD from './passwordChange';
-
-const Footer = styled({
-  flex: 1,
-  justifyContent: 'flex-end',
-})(SafeAreaView);
-
-const StyledKeyboardAvoidingView = styled(({ theme }) => ({
-  ...StyleSheet.absoluteFill,
-  backgroundColor: theme.colors.background.paper,
-}))(KeyboardAvoidingView);
-
-class ChangePassword extends PureComponent {
-  static navigationOptions = ({ navigation }) => ({
-    title: 'Change Password',
-    headerLeft: null,
-    headerRight: (
-      <PaddedView vertical={false}>
-        <ButtonLink onPress={() => navigation.goBack()}>Cancel</ButtonLink>
-      </PaddedView>
-    ),
-    headerStyle: {
-      backgroundColor: navigation.getParam('backgroundColor', []),
-    },
-    headerTitleStyle: {
-      color: navigation.getParam('headerTitleColor', []),
-    },
-  });
-
-  static propTypes = {
-    navigation: PropTypes.shape({
-      getParam: PropTypes.func,
-      navigate: PropTypes.func,
-      goBack: PropTypes.func,
-    }),
-  };
-
-  renderForm = (props) => (
-    <StyledKeyboardAvoidingView
-      behavior={'padding'}
-      keyboardVerticalOffset={
-        Header.HEIGHT +
-        (Platform.OS === 'android' ? StatusBar.currentHeight : 0)
-      }
-    >
-      <FlexedView>
-        <PaddedView>
-          <TextInput
-            label="New Password"
-            type="password"
-            value={props.values.password}
-            error={props.touched.password && props.errors.password}
-            onChangeText={(text) => props.setFieldValue('password', text)}
-          />
-          <TextInput
-            label="Confirm Password"
-            type="password"
-            value={props.values.confirmPassword}
-            error={
-              props.touched.confirmPassword && props.errors.confirmPassword
-            }
-            onChangeText={(text) =>
-              props.setFieldValue('confirmPassword', text)
-            }
-          />
-        </PaddedView>
-        <Footer>
-          <PaddedView>
-            <Button
-              disabled={props.isSubmitting}
-              onPress={props.handleSubmit}
-              title="Save"
-              loading={props.isSubmitting}
-            />
-          </PaddedView>
-        </Footer>
-      </FlexedView>
-    </StyledKeyboardAvoidingView>
-  );
-
-  render() {
-    return (
-      <Mutation
-        mutation={CHANGE_PASSWORD}
-        update={async (cache, { data: { token } }) => {
-          await cache.writeQuery({
-            query: GET_AUTH_TOKEN,
-            data: { authToken: token },
-          });
-
-          await cache.writeData({
-            data: { authToken: token },
-          });
-        }}
-      >
-        {(updatePassword) => (
-          <Formik
-            validationSchema={Yup.object().shape({
-              password: Yup.string()
-                .min(6, 'Password must be at least 6 characters')
-                .required('Password is required'),
-              confirmPassword: Yup.string()
-                .min(6, 'Password must be at least 6 characters')
-                .oneOf([Yup.ref('password')], 'Passwords must match.')
-                .required('Password confirm is required'),
-            })}
-            onSubmit={async (variables, { setSubmitting, setFieldError }) => {
-              try {
-                await updatePassword({ variables });
-
-                await this.props.navigation.goBack();
-              } catch (e) {
-                const { graphQLErrors } = e;
-                if (graphQLErrors.length) {
-                  setFieldError(
-                    'confirmPassword',
-                    'Unknown error. Please try again later.'
-                  );
-                }
-              }
-              setSubmitting(false);
-            }}
-          >
-            {this.renderForm}
-          </Formik>
-        )}
-      </Mutation>
-    );
-  }
-}
-
-export default ChangePassword;
diff --git a/apolloschurchapp/src/user-settings/ChangePassword.tests.js b/apolloschurchapp/src/user-settings/ChangePassword.tests.js
deleted file mode 100644
index 85ff133..0000000
--- a/apolloschurchapp/src/user-settings/ChangePassword.tests.js
+++ /dev/null
@@ -1,24 +0,0 @@
-import React from 'react';
-import renderer from 'react-test-renderer';
-import wait from 'waait';
-
-import Providers from '../Providers';
-
-import ChangePassword from './ChangePassword';
-
-describe('Change Password component', () => {
-  it('renders a change password form', async () => {
-    const navigation = {
-      navigate: jest.fn(),
-      getParam: jest.fn(),
-      goBack: jest.fn(),
-    };
-    const tree = renderer.create(
-      <Providers>
-        <ChangePassword navigation={navigation} />
-      </Providers>
-    );
-    await wait(0); // wait for response from graphql
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/user-settings/PersonDetails.tests.js b/apolloschurchapp/src/user-settings/PersonDetails.tests.js
deleted file mode 100644
index e1f814d..0000000
--- a/apolloschurchapp/src/user-settings/PersonDetails.tests.js
+++ /dev/null
@@ -1,49 +0,0 @@
-import React from 'react';
-import { GET_USER_PROFILE } from '../tabs/connect/UserAvatarHeader';
-
-import Providers from '../Providers';
-
-import { renderWithApolloData } from '../utils/testUtils';
-import PersonalDetails from './PersonalDetails';
-
-describe('PersonalDetails component', () => {
-  it('renders PersonalDetails when logged in', async () => {
-    const mock = {
-      request: {
-        query: GET_USER_PROFILE,
-      },
-      result: {
-        data: {
-          currentUser: {
-            __typename: 'AuthenticatedUser',
-            id: 'AuthenticatedUser:123',
-            profile: {
-              __typename: 'Person',
-              id: 'Profile:123',
-              firstName: 'Isaac',
-              lastName: 'Hardy',
-              nickName: 'Ike',
-              email: 'isaac.hardy@newspring.cc',
-              birthDate: '2019-09-12T21:01:06.026Z',
-              gender: 'Male',
-              campus: null,
-              photo: null,
-            },
-          },
-        },
-      },
-    };
-    const navigation = {
-      navigate: jest.fn(),
-      getParam: jest.fn(),
-      goBack: jest.fn(),
-    };
-    const tree = await renderWithApolloData(
-      <Providers mocks={[mock]}>
-        <PersonalDetails navigation={navigation} />
-      </Providers>
-    );
-
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/user-settings/PersonalDetails.js b/apolloschurchapp/src/user-settings/PersonalDetails.js
deleted file mode 100644
index 605efb9..0000000
--- a/apolloschurchapp/src/user-settings/PersonalDetails.js
+++ /dev/null
@@ -1,184 +0,0 @@
-import React, { PureComponent } from 'react';
-import PropTypes from 'prop-types';
-import {
-  KeyboardAvoidingView,
-  StyleSheet,
-  StatusBar,
-  Platform,
-} from 'react-native';
-import { SafeAreaView, Header } from 'react-navigation';
-import { Query, Mutation } from 'react-apollo';
-import { Formik } from 'formik';
-import * as Yup from 'yup';
-
-import {
-  TextInput,
-  PaddedView,
-  FlexedView,
-  Button,
-  ButtonLink,
-  styled,
-} from '@apollosproject/ui-kit';
-
-import { GET_USER_PROFILE } from '../tabs/connect/UserAvatarHeader';
-import UPDATE_CURRENT_USER from './updateCurrentUser';
-
-const Footer = styled({
-  flex: 1,
-  justifyContent: 'flex-end',
-})(SafeAreaView);
-
-const StyledKeyboardAvoidingView = styled(({ theme }) => ({
-  ...StyleSheet.absoluteFill,
-  backgroundColor: theme.colors.background.paper,
-}))(KeyboardAvoidingView);
-
-class PersonalDetails extends PureComponent {
-  static navigationOptions = ({ navigation }) => ({
-    title: 'Personal Details',
-    headerLeft: null,
-    headerRight: (
-      <PaddedView vertical={false}>
-        <ButtonLink onPress={() => navigation.goBack()}>Cancel</ButtonLink>
-      </PaddedView>
-    ),
-    headerStyle: {
-      backgroundColor: navigation.getParam('backgroundColor', []),
-    },
-    headerTitleStyle: {
-      color: navigation.getParam('headerTitleColor', []),
-    },
-  });
-
-  static propTypes = {
-    navigation: PropTypes.shape({
-      getParam: PropTypes.func,
-      navigate: PropTypes.func,
-      goBack: PropTypes.func,
-    }),
-  };
-
-  renderForm = (props) => (
-    // have to add the offset to account for react-navigation header
-    <StyledKeyboardAvoidingView
-      behavior={'padding'}
-      keyboardVerticalOffset={
-        Header.HEIGHT +
-        (Platform.OS === 'android' ? StatusBar.currentHeight : 0)
-      }
-    >
-      <FlexedView>
-        <PaddedView>
-          <TextInput
-            label="First Name"
-            type="text"
-            value={props.values.firstName}
-            error={props.touched.firstName && props.errors.firstName}
-            onChangeText={(text) => props.setFieldValue('firstName', text)}
-          />
-          <TextInput
-            label="Last Name"
-            type="text"
-            value={props.values.lastName}
-            error={props.touched.lastName && props.errors.lastName}
-            onChangeText={(text) => props.setFieldValue('lastName', text)}
-          />
-          <TextInput
-            label="Email"
-            type="email"
-            value={props.values.email}
-            error={props.touched.email && props.errors.email}
-            onChangeText={(text) => props.setFieldValue('email', text)}
-          />
-        </PaddedView>
-        <Footer>
-          <PaddedView>
-            <Button
-              disabled={!props.isValid || props.isSubmitting}
-              onPress={props.handleSubmit}
-              title="Save"
-              loading={props.isSubmitting}
-            />
-          </PaddedView>
-        </Footer>
-      </FlexedView>
-    </StyledKeyboardAvoidingView>
-  );
-
-  render() {
-    return (
-      <Query query={GET_USER_PROFILE} fetchPolicy="cache-and-network">
-        {({ data: { currentUser = { profile: {} } } = {} }) => {
-          const { firstName, lastName, email } = currentUser.profile;
-
-          return (
-            <Mutation
-              mutation={UPDATE_CURRENT_USER}
-              update={async (cache, { data: { updateProfileFields } }) => {
-                await cache.writeQuery({
-                  query: GET_USER_PROFILE,
-                  data: {
-                    currentUser: {
-                      ...currentUser,
-                      profile: {
-                        ...currentUser.profile,
-                        firstName: updateProfileFields.firstName,
-                        lastName: updateProfileFields.lastName,
-                        email: updateProfileFields.email,
-                      },
-                    },
-                  },
-                });
-              }}
-            >
-              {(updateDetails) => (
-                <Formik
-                  initialValues={{ firstName, lastName, email }}
-                  validationSchema={Yup.object().shape({
-                    firstName: Yup.string().required('First Name is required!'),
-                    lastName: Yup.string().required('Last Name is required!'),
-                    email: Yup.string()
-                      .email('Invalid email address')
-                      .required('Email is required!'),
-                  })}
-                  onSubmit={async (
-                    variables,
-                    { setSubmitting, setFieldError }
-                  ) => {
-                    try {
-                      await updateDetails({ variables });
-                      await this.props.navigation.goBack();
-                    } catch (e) {
-                      const { graphQLErrors } = e;
-                      if (
-                        graphQLErrors.length &&
-                        graphQLErrors.find(({ message }) =>
-                          message.includes('User already exists')
-                        )
-                      ) {
-                        setFieldError(
-                          'email',
-                          'There is already a user with this email'
-                        );
-                      } else {
-                        setFieldError(
-                          'email',
-                          'Unknown error. Please try again later.'
-                        );
-                      }
-                    }
-                    setSubmitting(false);
-                  }}
-                >
-                  {this.renderForm}
-                </Formik>
-              )}
-            </Mutation>
-          );
-        }}
-      </Query>
-    );
-  }
-}
-
-export default PersonalDetails;
diff --git a/apolloschurchapp/src/user-settings/UserSettings.tests.js b/apolloschurchapp/src/user-settings/UserSettings.tests.js
deleted file mode 100644
index d57af4f..0000000
--- a/apolloschurchapp/src/user-settings/UserSettings.tests.js
+++ /dev/null
@@ -1,29 +0,0 @@
-import React from 'react';
-import renderer from 'react-test-renderer';
-import wait from 'waait';
-
-import { GET_LOGIN_STATE } from '@apollosproject/ui-auth';
-import Providers from '../Providers';
-
-import UserSettings from '.';
-
-describe('UserSettings component', () => {
-  it('renders UserSettings when logged in', async () => {
-    const mock = {
-      request: {
-        query: GET_LOGIN_STATE,
-      },
-      result: {
-        data: { isLoggedIn: true },
-      },
-    };
-    const navigation = { navigate: jest.fn(), getParam: jest.fn() };
-    const tree = renderer.create(
-      <Providers mocks={[mock]}>
-        <UserSettings navigation={navigation} />
-      </Providers>
-    );
-    await wait(0); // wait for response from graphql
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/user-settings/index.js b/apolloschurchapp/src/user-settings/index.js
deleted file mode 100644
index 38ab901..0000000
--- a/apolloschurchapp/src/user-settings/index.js
+++ /dev/null
@@ -1,186 +0,0 @@
-import React, { PureComponent } from 'react';
-import { ScrollView } from 'react-native';
-import PropTypes from 'prop-types';
-import { Query, Mutation } from 'react-apollo';
-import { getVersion, getBuildNumber } from 'react-native-device-info';
-
-import {
-  BackgroundView,
-  TableView,
-  Cell,
-  CellIcon,
-  CellText,
-  Divider,
-  Touchable,
-  ActivityIndicator,
-  NavigationService,
-} from '@apollosproject/ui-kit';
-
-import { GET_LOGIN_STATE, LOGOUT } from '@apollosproject/ui-auth';
-import {
-  RockAuthedWebBrowser,
-  UserAvatarUpdate,
-} from '@apollosproject/ui-connected';
-
-class UserSettings extends PureComponent {
-  static navigationOptions = (props) => ({
-    title: 'Settings',
-    headerStyle: { backgroundColor: props.screenProps.headerBackgroundColor },
-  });
-
-  static propTypes = {
-    navigation: PropTypes.shape({
-      getParam: PropTypes.func,
-      navigate: PropTypes.func,
-    }),
-    screenProps: PropTypes.shape({
-      headerBackgroundColor: PropTypes.string,
-      headerTitleStyle: PropTypes.shape({
-        color: PropTypes.string,
-      }),
-    }),
-  };
-
-  render() {
-    return (
-      <Query query={GET_LOGIN_STATE} fetchPolicy="cache-and-network">
-        {({ data: { isLoggedIn = false, loading } }) => {
-          if (loading) return <ActivityIndicator />;
-          if (!isLoggedIn) return null;
-          return (
-            <BackgroundView>
-              <ScrollView>
-                <UserAvatarUpdate />
-
-                <RockAuthedWebBrowser>
-                  {(openUrl) => (
-                    <>
-                      <TableView>
-                        <Touchable
-                          onPress={async () => {
-                            await this.props.navigation.navigate(
-                              'PersonalDetails',
-                              {
-                                backgroundColor: this.props.screenProps
-                                  .headerBackgroundColor,
-                                headerTitleColor: this.props.screenProps
-                                  .headerTitleStyle.color,
-                              }
-                            );
-                          }}
-                        >
-                          <Cell>
-                            <CellText>Personal Details</CellText>
-                            <CellIcon name="arrow-next" />
-                          </Cell>
-                        </Touchable>
-                        <Divider />
-                        <Touchable
-                          onPress={async () => {
-                            await this.props.navigation.navigate('Location', {
-                              backgroundColor: this.props.screenProps
-                                .headerBackgroundColor,
-                              headerTitleColor: this.props.screenProps
-                                .headerTitleStyle.color,
-                            });
-                          }}
-                        >
-                          <Cell>
-                            <CellText>Location</CellText>
-                            <CellIcon name="arrow-next" />
-                          </Cell>
-                        </Touchable>
-                        <Divider />
-                        <Touchable
-                          onPress={async () => {
-                            await this.props.navigation.navigate(
-                              'ChangePassword',
-                              {
-                                backgroundColor: this.props.screenProps
-                                  .headerBackgroundColor,
-                                headerTitleColor: this.props.screenProps
-                                  .headerTitleStyle.color,
-                              }
-                            );
-                          }}
-                        >
-                          <Cell>
-                            <CellText>Change Password</CellText>
-                            <CellIcon name="arrow-next" />
-                          </Cell>
-                        </Touchable>
-                      </TableView>
-                      <TableView>
-                        <Touchable
-                          onPress={() =>
-                            openUrl('https://apollosrock.newspring.cc/')
-                          }
-                        >
-                          <Cell>
-                            <CellText>Give Feedback</CellText>
-                            <CellIcon name="arrow-next" />
-                          </Cell>
-                        </Touchable>
-                      </TableView>
-                      <TableView>
-                        <Touchable
-                          onPress={() =>
-                            openUrl('https://apollosrock.newspring.cc/')
-                          }
-                        >
-                          <Cell>
-                            <CellText>Privacy Policy</CellText>
-                            <CellIcon name="arrow-next" />
-                          </Cell>
-                        </Touchable>
-                        <Divider />
-                        <Touchable
-                          onPress={() =>
-                            openUrl('https://apollosrock.newspring.cc/')
-                          }
-                        >
-                          <Cell>
-                            <CellText>Terms of Use</CellText>
-                            <CellIcon name="arrow-next" />
-                          </Cell>
-                        </Touchable>
-                      </TableView>
-                      <TableView>
-                        <Mutation mutation={LOGOUT}>
-                          {(handleLogout) => (
-                            <Touchable
-                              onPress={async () => {
-                                await handleLogout();
-                                // This resets the navigation stack, and the navigates to the first auth screen.
-                                // This ensures that user isn't navigated to a subscreen of Auth, like the pin entry screen.
-                                await NavigationService.resetToAuth();
-                              }}
-                            >
-                              <Cell>
-                                <CellText>Logout</CellText>
-                                <CellIcon name="arrow-next" />
-                              </Cell>
-                            </Touchable>
-                          )}
-                        </Mutation>
-                      </TableView>
-                      <TableView>
-                        <Cell>
-                          <CellText>
-                            {`App Version: ${getVersion()}.${getBuildNumber()}`}
-                          </CellText>
-                        </Cell>
-                      </TableView>
-                    </>
-                  )}
-                </RockAuthedWebBrowser>
-              </ScrollView>
-            </BackgroundView>
-          );
-        }}
-      </Query>
-    );
-  }
-}
-
-export default UserSettings;
diff --git a/apolloschurchapp/src/user-settings/passwordChange.js b/apolloschurchapp/src/user-settings/passwordChange.js
deleted file mode 100644
index 2bd714a..0000000
--- a/apolloschurchapp/src/user-settings/passwordChange.js
+++ /dev/null
@@ -1,9 +0,0 @@
-import gql from 'graphql-tag';
-
-export default gql`
-  mutation changePassword($password: String!) {
-    changePassword(password: $password) {
-      token
-    }
-  }
-`;
diff --git a/apolloschurchapp/src/user-settings/updateCurrentUser.js b/apolloschurchapp/src/user-settings/updateCurrentUser.js
deleted file mode 100644
index 5efd459..0000000
--- a/apolloschurchapp/src/user-settings/updateCurrentUser.js
+++ /dev/null
@@ -1,22 +0,0 @@
-import gql from 'graphql-tag';
-
-export default gql`
-  mutation updateDetails(
-    $firstName: String!
-    $lastName: String!
-    $email: String!
-  ) {
-    updateProfileFields(
-      input: [
-        { field: FirstName, value: $firstName }
-        { field: LastName, value: $lastName }
-        { field: Email, value: $email }
-      ]
-    ) {
-      firstName
-      lastName
-      email
-      id
-    }
-  }
-`;
diff --git a/apolloschurchapp/src/utils/analytics/index.js b/apolloschurchapp/src/utils/analytics/index.js
new file mode 100644
index 0000000..2be6dca
--- /dev/null
+++ b/apolloschurchapp/src/utils/analytics/index.js
@@ -0,0 +1,86 @@
+// import Settings from '@utils/Settings';
+
+// import { Sentry } from 'react-native-sentry';
+
+// import instance from './instance';
+
+// Events
+const AppBecameInactive = 'AppBecameInactive';
+const AppBecameActive = 'AppBecameActive';
+const AppBecameBackgrounded = 'AppBecameBackgrounded';
+const OutboundLink = 'OutboundLink';
+const ScreenView = 'ScreenView';
+const Liked = 'Liked';
+const Shared = 'Shared';
+const Login = 'Login';
+const Register = 'Register';
+const ForgotPassword = 'ForgotPassword';
+const ContactedGroup = 'ContactedGroup';
+const GivingStarted = 'GivingStarted';
+const AudioPlayed = 'AudioPlayed';
+const AudioPaused = 'AudioPaused';
+
+export const events = {
+  AppBecameInactive,
+  AppBecameActive,
+  AppBecameBackgrounded,
+  OutboundLink,
+  ScreenView,
+  Liked,
+  Shared,
+  Login,
+  Register,
+  ForgotPassword,
+  ContactedGroup,
+  GivingStarted,
+  AudioPlayed,
+  AudioPaused,
+};
+
+// const nativeOnlyEvents = {
+//   AppBecameInactive,
+//   AppBecameActive,
+//   AppBecameBackgrounded,
+// };
+
+// thin wrappers over our client events so we have a consistent API
+// if we want to move away from Amplitude in the future:
+// export const track = (eventName, properties) => {
+//   if (Settings.NODE_ENV === 'development' || Settings.NODE_ENV === 'testing')
+//     return;
+//   if (Platform.OS === 'web' && nativeOnlyEvents[eventName]) return;
+//   if (properties) {
+//     instance.logEventWithProperties(eventName, properties);
+//   } else {
+//     instance.logEvent(eventName);
+//   }
+// };
+
+// export const identify = (userId, userProperties) => {
+//   if (Settings.NODE_ENV === 'development' || Settings.NODE_ENV === 'testing')
+//     return;
+//   instance.setUserId(userId);
+//   if (userProperties) instance.setUserProperties(userProperties);
+// };
+
+// export const trackScreen = (screenName, screenProperties) => {
+export const trackScreen = () => {
+  // (screenName) => {
+  // track(events.ScreenView, {
+  //   screen: screenName,
+  //   ...screenProperties,
+  // });
+  // Sentry.captureBreadcrumb({
+  //   message: 'ScreenView',
+  //   data: { screenName },
+  //   level: 'info',
+  // });
+};
+
+const Analytics = {
+  // track,
+  trackScreen,
+  // identify,
+};
+
+export default Analytics;
diff --git a/apolloschurchapp/src/utils/content/share.js b/apolloschurchapp/src/utils/content/share.js
new file mode 100644
index 0000000..2d94889
--- /dev/null
+++ b/apolloschurchapp/src/utils/content/share.js
@@ -0,0 +1,22 @@
+import { Share } from 'react-native';
+// import { get } from 'lodash';
+// import { track, events } from '@utils/analytics';
+// import getSiteLink from './getSiteLink';
+
+const share = ({ title, message, url }) => {
+  Share.share({
+    title,
+    message,
+    url,
+  });
+
+  // track(events.Shared, {
+  //   channel: get(content, 'channelName'),
+  //   isLiked: get(content, 'content.isLiked'),
+  //   contentId: get(content, 'id'),
+  //   meta: get(content, 'meta'),
+  //   title: content.title || content.name,
+  // });
+};
+
+export default share;
diff --git a/apolloschurchapp/src/utils/testUtils.js b/apolloschurchapp/src/utils/testUtils.js
deleted file mode 100644
index 38d20f7..0000000
--- a/apolloschurchapp/src/utils/testUtils.js
+++ /dev/null
@@ -1,10 +0,0 @@
-/* eslint-disable import/prefer-default-export */
-import renderer from 'react-test-renderer';
-import wait from 'waait';
-
-export const renderWithApolloData = async (component) => {
-  const tree = renderer.create(component);
-  await wait(1);
-  tree.update(component);
-  return tree;
-};
diff --git a/apolloschurchapp/storybook/Welcome/Intro.js b/apolloschurchapp/storybook/Welcome/Intro.js
deleted file mode 100644
index 2e8b8d7..0000000
--- a/apolloschurchapp/storybook/Welcome/Intro.js
+++ /dev/null
@@ -1,43 +0,0 @@
-import React from 'react';
-import { Paragraph, BodyText } from '@apollosproject/ui-kit';
-
-import { Slide, SlideContent } from '@apollosproject/ui-onboarding';
-
-const Intro = () => (
-  <Slide>
-    <SlideContent title={`Welcome to ${'\n'}Apollos Storybook!`} icon>
-      <Paragraph>
-        <BodyText>
-          Storybook is the component workshop for the Apollos app platform.
-        </BodyText>
-      </Paragraph>
-      <Paragraph>
-        <BodyText>
-          A story is a single state of one or more UI components. You can have
-          as many stories as you want.
-        </BodyText>
-      </Paragraph>
-      <Paragraph>
-        <BodyText>
-          We use Storybook to help document UI and to serve as visual test cases
-          for different states.
-        </BodyText>
-      </Paragraph>
-      <Paragraph>
-        <BodyText>
-          Open the navigator using the navigation bar at the bottom of the
-          screen to navigate the available stories.
-        </BodyText>
-      </Paragraph>
-      <Paragraph>
-        <BodyText>
-          The stories defined inside of your app will be listed first, with
-          Apollos UI stories below them. If you setup a theme, all of the
-          stories will reflect your theme.
-        </BodyText>
-      </Paragraph>
-    </SlideContent>
-  </Slide>
-);
-
-export default Intro;
diff --git a/apolloschurchapp/storybook/Welcome/Welcome.stories.js b/apolloschurchapp/storybook/Welcome/Welcome.stories.js
new file mode 100644
index 0000000..f1c9a65
--- /dev/null
+++ b/apolloschurchapp/storybook/Welcome/Welcome.stories.js
@@ -0,0 +1,9 @@
+import React from 'react';
+import { storiesOf } from '@storybook/react-native';
+import { linkTo } from '@storybook/addon-links';
+
+import Welcome from '.';
+
+storiesOf('Welcome', module).add('to Storybook', () => (
+  <Welcome showApp={linkTo('Button')} />
+));
diff --git a/apolloschurchapp/storybook/Welcome/index.js b/apolloschurchapp/storybook/Welcome/index.js
index 6c1e852..78f7086 100644
--- a/apolloschurchapp/storybook/Welcome/index.js
+++ b/apolloschurchapp/storybook/Welcome/index.js
@@ -1,9 +1,57 @@
 import React from 'react';
-import { storiesOf } from '@apollosproject/ui-storybook';
+import PropTypes from 'prop-types';
+import { View, Text } from 'react-native';
 
-import App from '../../src';
-import Intro from './Intro';
+export default class Welcome extends React.Component {
+  styles = {
+    wrapper: {
+      flex: 1,
+      padding: 24,
+      justifyContent: 'center',
+    },
+    header: {
+      fontSize: 18,
+      marginBottom: 18,
+    },
+    content: {
+      fontSize: 12,
+      marginBottom: 10,
+      lineHeight: 18,
+    },
+  };
 
-storiesOf('Storybook', module)
-  .add('Welcome', () => <Intro />)
-  .add('App', () => <App />);
+  showApp(event) {
+    event.preventDefault();
+    if (this.props.showApp) this.props.showApp();
+  }
+
+  render() {
+    return (
+      <View style={this.styles.wrapper}>
+        <Text style={this.styles.header}>
+          Welcome to React Native Storybook
+        </Text>
+        <Text style={this.styles.content}>
+          This is a UI Component development environment for your React Native
+          app. Here you can display and interact with your UI components as
+          stories. A story is a single state of one or more UI components. You
+          can have as many stories as you want. In other words a story is like a
+          visual test case.
+        </Text>
+        <Text style={this.styles.content}>
+          We have added some stories inside the &quot;storybook/stories&quot;
+          directory for examples. Try editing the
+          &quot;storybook/stories/Welcome.js&quot; file to edit this message.
+        </Text>
+      </View>
+    );
+  }
+}
+
+Welcome.defaultProps = {
+  showApp: null,
+};
+
+Welcome.propTypes = {
+  showApp: PropTypes.func,
+};
diff --git a/apolloschurchapp/storybook/addons.js b/apolloschurchapp/storybook/addons.js
new file mode 100644
index 0000000..6aed412
--- /dev/null
+++ b/apolloschurchapp/storybook/addons.js
@@ -0,0 +1,2 @@
+import '@storybook/addon-actions/register';
+import '@storybook/addon-links/register';
diff --git a/apolloschurchapp/storybook/index.android.js b/apolloschurchapp/storybook/index.android.js
new file mode 100644
index 0000000..f0513c5
--- /dev/null
+++ b/apolloschurchapp/storybook/index.android.js
@@ -0,0 +1,3 @@
+import StorybookUI from './storybook';
+
+export default StorybookUI;
diff --git a/apolloschurchapp/storybook/index.ios.js b/apolloschurchapp/storybook/index.ios.js
new file mode 100644
index 0000000..f0513c5
--- /dev/null
+++ b/apolloschurchapp/storybook/index.ios.js
@@ -0,0 +1,3 @@
+import StorybookUI from './storybook';
+
+export default StorybookUI;
diff --git a/apolloschurchapp/storybook/index.js b/apolloschurchapp/storybook/index.js
index ba240dd..f0513c5 100644
--- a/apolloschurchapp/storybook/index.js
+++ b/apolloschurchapp/storybook/index.js
@@ -1,21 +1,3 @@
-import StorybookUI, {
-  loadApollosStories,
-  addApollosProviderDecorator,
-  configure,
-} from '@apollosproject/ui-storybook';
-import RNBootSplash from 'react-native-bootsplash';
-import Providers from '../src/Providers';
-
-import { loadStories } from './storyLoader';
-
-addApollosProviderDecorator(Providers);
-
-configure(() => {
-  require('./Welcome');
-  loadStories();
-  loadApollosStories();
-
-  RNBootSplash.hide({ duration: 250 });
-}, module);
+import StorybookUI from './storybook';
 
 export default StorybookUI;
diff --git a/apolloschurchapp/storybook/storybook.js b/apolloschurchapp/storybook/storybook.js
new file mode 100644
index 0000000..19be073
--- /dev/null
+++ b/apolloschurchapp/storybook/storybook.js
@@ -0,0 +1,35 @@
+import React, { Component } from 'react';
+import { AppRegistry } from 'react-native';
+import {
+  getStorybookUI,
+  configure,
+  addDecorator,
+} from '@storybook/react-native';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+// storyLoader.js is generated on storybook start. next line disabled for CI test.
+import { loadStories } from './storyLoader'; // eslint-disable-line
+
+addDecorator((renderStorybook) => <Providers>{renderStorybook()}</Providers>);
+
+// import stories
+configure(() => {
+  loadStories();
+}, module);
+
+// This assumes that storybook is running on the same host as your RN packager,
+// to set manually use, e.g. host: 'localhost' option
+const StorybookUIRoot = getStorybookUI({ port: 7007, onDeviceUI: true });
+
+// react-native hot module loader must take in a Class - https://github.com/facebook/react-native/issues/10991
+// https://github.com/storybooks/storybook/issues/2081
+// eslint-disable-next-line react/prefer-stateless-function
+class StorybookUIHMRRoot extends Component {
+  render() {
+    return <StorybookUIRoot />;
+  }
+}
+
+AppRegistry.registerComponent('apolloschurchapp', () => StorybookUIHMRRoot);
+export default StorybookUIHMRRoot;
