diff --git a/apolloschurchapp/.babelrc b/apolloschurchapp/.babelrc
new file mode 100644
index 0000000..25c8292
--- /dev/null
+++ b/apolloschurchapp/.babelrc
@@ -0,0 +1,9 @@
+{
+  "presets": ["module:metro-react-native-babel-preset", "module:react-native-dotenv"],
+  "plugins": [
+    ["@babel/plugin-proposal-decorators", {
+      "legacy": true
+    }],
+    ["@babel/plugin-proposal-export-default-from"]
+  ]
+}
\ No newline at end of file
diff --git a/apolloschurchapp/.env.production b/apolloschurchapp/.env.production
index 8f2e35f..4f37d9c 100644
--- a/apolloschurchapp/.env.production
+++ b/apolloschurchapp/.env.production
@@ -1,5 +1,3 @@
-APP_DATA_URL=https://apollos-church-api-herokuapp-com.global.ssl.fastly.net/
+APP_DATA_URL=https://apollos-church-api.herokuapp.com/
 ONE_SIGNAL_KEY=$ONE_SIGNAL_KEY
-GOOGLE_MAPS_API_KEY=$GOOGLE_MAPS_API_KEY
-STORYBOOK=$STORYBOOK
-SCHEMA_VERSION=$SCHEMA_VERSION
\ No newline at end of file
+ANDROID_URL=doesnotmatter
\ No newline at end of file
diff --git a/apolloschurchapp/.flowconfig b/apolloschurchapp/.flowconfig
index 9bded78..1043c82 100644
--- a/apolloschurchapp/.flowconfig
+++ b/apolloschurchapp/.flowconfig
@@ -67,4 +67,4 @@ suppress_comment=\\(.\\|\n\\)*\\$FlowFixedInNextDeploy
 suppress_comment=\\(.\\|\n\\)*\\$FlowExpectedError
 
 [version]
-^0.86.0
+^0.78.0
diff --git a/apolloschurchapp/.npmignore b/apolloschurchapp/.npmignore
new file mode 100644
index 0000000..93f3929
--- /dev/null
+++ b/apolloschurchapp/.npmignore
@@ -0,0 +1,2 @@
+*
+!lib/**
diff --git a/apolloschurchapp/android/app/BUCK b/apolloschurchapp/android/app/BUCK
index de2c2e2..5392fca 100644
--- a/apolloschurchapp/android/app/BUCK
+++ b/apolloschurchapp/android/app/BUCK
@@ -8,13 +8,23 @@
 # - `buck install -r android/app` - compile, install and run application
 #
 
-load(":build_defs.bzl", "create_aar_targets", "create_jar_targets")
-
 lib_deps = []
 
-create_aar_targets(glob(["libs/*.aar"]))
+for jarfile in glob(['libs/*.jar']):
+  name = 'jars__' + jarfile[jarfile.rindex('/') + 1: jarfile.rindex('.jar')]
+  lib_deps.append(':' + name)
+  prebuilt_jar(
+    name = name,
+    binary_jar = jarfile,
+  )
 
-create_jar_targets(glob(["libs/*.jar"]))
+for aarfile in glob(['libs/*.aar']):
+  name = 'aars__' + aarfile[aarfile.rindex('/') + 1: aarfile.rindex('.aar')]
+  lib_deps.append(':' + name)
+  android_prebuilt_aar(
+    name = name,
+    aar = aarfile,
+  )
 
 android_library(
     name = "all-libs",
diff --git a/apolloschurchapp/android/app/build.gradle b/apolloschurchapp/android/app/build.gradle
index 12def44..6be0c59 100644
--- a/apolloschurchapp/android/app/build.gradle
+++ b/apolloschurchapp/android/app/build.gradle
@@ -10,12 +10,6 @@ buildscript {
 apply plugin: 'com.onesignal.androidsdk.onesignal-gradle-plugin'
 apply plugin: "com.android.application"
 
-project.ext.envConfigFiles = [
-    release: ".env.production",
-]
-
-apply from: project(':react-native-config').projectDir.getPath() + "/dotenv.gradle"
-
 import com.android.build.OutputFile
 
 /**
@@ -111,29 +105,24 @@ def enableProguardInReleaseBuilds = false
 
 android {
     compileSdkVersion rootProject.ext.compileSdkVersion
-
-    compileOptions {
-        sourceCompatibility JavaVersion.VERSION_1_8
-        targetCompatibility JavaVersion.VERSION_1_8
-    }
+    buildToolsVersion rootProject.ext.buildToolsVersion
 
     defaultConfig {
         applicationId "com.apolloschurch.app"
         minSdkVersion rootProject.ext.minSdkVersion
         targetSdkVersion rootProject.ext.targetSdkVersion
-        versionCode 11
-        versionName "0.8.6"
+        versionCode 5
+        versionName "0.7.0"
         ndk {
             abiFilters "armeabi-v7a", "x86"
         }
-        resValue "string", "build_config_package", "com.apolloschurchapp"
     }
     splits {
         abi {
             reset()
             enable enableSeparateBuildPerCPUArchitecture
             universalApk false  // If true, also generate a universal APK
-            include "armeabi-v7a", "x86", "arm64-v8a", "x86_64"
+            include "armeabi-v7a", "x86"
         }
     }
     buildTypes {
@@ -147,7 +136,7 @@ android {
         variant.outputs.each { output ->
             // For each separate APK per architecture, set a unique version code as described here:
             // http://tools.android.com/tech-docs/new-build-system/user-guide/apk-splits
-            def versionCodes = ["armeabi-v7a":1, "x86":2, "arm64-v8a": 3, "x86_64": 4]
+            def versionCodes = ["armeabi-v7a":1, "x86":2]
             def abi = output.getFilter(OutputFile.ABI)
             if (abi != null) {  // null for the universal-debug, universal-release variants
                 output.versionCodeOverride =
@@ -158,25 +147,16 @@ android {
 }
 
 dependencies {
-       // added this and the two google play packages below when upgraded rn-maps to 0.24.2
-    implementation(project(':react-native-maps')){
-      exclude group: 'com.google.android.gms', module: 'play-services-base'
-      exclude group: 'com.google.android.gms', module: 'play-services-maps'
-    }
-    implementation 'com.google.android.gms:play-services-base:10.0.1'
-    implementation 'com.google.android.gms:play-services-maps:10.0.1'
-    implementation project(':rn-fetch-blob')
-    implementation project(':react-native-webview')
-    implementation project(':react-native-video')
-    implementation project(':react-native-svg')
-    implementation project(':react-native-splash-screen')
-    implementation project(':react-native-screens')
-    implementation project(':react-native-onesignal')
-    implementation project(':react-native-music-control')
-    implementation project(':react-native-linear-gradient')
-    implementation project(':react-native-image-picker')
-    implementation project(':react-native-device-info')
-    implementation project(':react-native-config')
+    compile project(':react-native-screens')
+    compile project(':react-native-onesignal')
+    compile project(':react-native-image-picker')
+    compile project(':react-native-music-control')
+    compile project(':react-native-device-info')
+    compile project(':react-native-video')
+    compile project(':react-native-svg')
+    compile project(':react-native-splash-screen')
+    compile project(':react-native-linear-gradient')
+    compile project(':react-native-custom-tabs')
     implementation fileTree(dir: "libs", include: ["*.jar"])
     implementation "com.android.support:appcompat-v7:${rootProject.ext.supportLibVersion}"
     implementation "com.facebook.react:react-native:+"  // From node_modules
diff --git a/apolloschurchapp/android/app/build_defs.bzl b/apolloschurchapp/android/app/build_defs.bzl
deleted file mode 100644
index fff270f..0000000
--- a/apolloschurchapp/android/app/build_defs.bzl
+++ /dev/null
@@ -1,19 +0,0 @@
-"""Helper definitions to glob .aar and .jar targets"""
-
-def create_aar_targets(aarfiles):
-    for aarfile in aarfiles:
-        name = "aars__" + aarfile[aarfile.rindex("/") + 1:aarfile.rindex(".aar")]
-        lib_deps.append(":" + name)
-        android_prebuilt_aar(
-            name = name,
-            aar = aarfile,
-        )
-
-def create_jar_targets(jarfiles):
-    for jarfile in jarfiles:
-        name = "jars__" + jarfile[jarfile.rindex("/") + 1:jarfile.rindex(".jar")]
-        lib_deps.append(":" + name)
-        prebuilt_jar(
-            name = name,
-            binary_jar = jarfile,
-        )
diff --git a/apolloschurchapp/android/app/src/debug/AndroidManifest.xml b/apolloschurchapp/android/app/src/debug/AndroidManifest.xml
deleted file mode 100644
index fa26aa5..0000000
--- a/apolloschurchapp/android/app/src/debug/AndroidManifest.xml
+++ /dev/null
@@ -1,8 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<manifest xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:tools="http://schemas.android.com/tools">
-
-    <uses-permission android:name="android.permission.SYSTEM_ALERT_WINDOW"/>
-
-    <application android:usesCleartextTraffic="true" tools:targetApi="28" tools:ignore="GoogleAppIndexingWarning" />
-</manifest>
diff --git a/apolloschurchapp/android/app/src/main/AndroidManifest.xml b/apolloschurchapp/android/app/src/main/AndroidManifest.xml
index 5e6aee9..988588b 100644
--- a/apolloschurchapp/android/app/src/main/AndroidManifest.xml
+++ b/apolloschurchapp/android/app/src/main/AndroidManifest.xml
@@ -2,10 +2,9 @@
     package="com.apolloschurchapp">
 
     <uses-permission android:name="android.permission.INTERNET" />
-    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
+    <uses-permission android:name="android.permission.SYSTEM_ALERT_WINDOW"/>
     <uses-permission android:name="android.permission.CAMERA" />
-    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION"/>
-
+    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE"/>
 
     <application
       android:name=".MainApplication"
@@ -14,17 +13,13 @@
       android:roundIcon="@mipmap/ic_launcher_round"
       android:allowBackup="false"
       android:theme="@style/AppTheme">
-      <meta-data
-        android:name="com.google.android.geo.API_KEY"
-        android:value="@string/GOOGLE_MAPS_API_KEY"/>
       <activity
         android:name=".LaunchActivity"
         android:theme="@style/LaunchTheme"
-        android:label="@string/app_name">
+        android:label="Apollos Church">
         <intent-filter>
             <action android:name="android.intent.action.MAIN" />
             <category android:name="android.intent.category.LAUNCHER" />
-     <action android:name="android.intent.action.DOWNLOAD_COMPLETE"/>
         </intent-filter>
         <intent-filter android:label="filter_react_native">
           <action android:name="android.intent.action.VIEW" />
diff --git a/apolloschurchapp/android/app/src/main/java/com/apolloschurchapp/MainApplication.java b/apolloschurchapp/android/app/src/main/java/com/apolloschurchapp/MainApplication.java
index aa318e0..95e9084 100644
--- a/apolloschurchapp/android/app/src/main/java/com/apolloschurchapp/MainApplication.java
+++ b/apolloschurchapp/android/app/src/main/java/com/apolloschurchapp/MainApplication.java
@@ -3,19 +3,16 @@ package com.apolloschurchapp;
 import android.app.Application;
 
 import com.facebook.react.ReactApplication;
-import com.airbnb.android.react.maps.MapsPackage;
-import com.RNFetchBlob.RNFetchBlobPackage;
-import com.reactnativecommunity.webview.RNCWebViewPackage;
+import com.swmansion.rnscreens.RNScreenPackage;
+import com.geektime.rnonesignalandroid.ReactNativeOneSignalPackage;
+import com.imagepicker.ImagePickerPackage;
+import com.tanguyantoine.react.MusicControl;
+import com.learnium.RNDeviceInfo.RNDeviceInfo;
 import com.brentvatne.react.ReactVideoPackage;
 import com.horcrux.svg.SvgPackage;
 import org.devio.rn.splashscreen.SplashScreenReactPackage;
-import com.swmansion.rnscreens.RNScreensPackage;
-import com.geektime.rnonesignalandroid.ReactNativeOneSignalPackage;
-import com.tanguyantoine.react.MusicControl;
 import com.BV.LinearGradient.LinearGradientPackage;
-import com.imagepicker.ImagePickerPackage;
-import com.learnium.RNDeviceInfo.RNDeviceInfo;
-import com.lugg.ReactNativeConfig.ReactNativeConfigPackage;
+import com.github.droibit.android.reactnative.customtabs.CustomTabsPackage;
 import com.facebook.react.ReactNativeHost;
 import com.facebook.react.ReactPackage;
 import com.facebook.react.shell.MainReactPackage;
@@ -36,19 +33,16 @@ public class MainApplication extends Application implements ReactApplication {
     protected List<ReactPackage> getPackages() {
       return Arrays.<ReactPackage>asList(
           new MainReactPackage(),
-            new MapsPackage(),
-            new RNFetchBlobPackage(),
-            new RNCWebViewPackage(),
+            new RNScreenPackage(),
+            new ReactNativeOneSignalPackage(),
+            new ImagePickerPackage(),
+            new MusicControl(),
+            new RNDeviceInfo(),
             new ReactVideoPackage(),
             new SvgPackage(),
             new SplashScreenReactPackage(),
-            new RNScreensPackage(),
-            new ReactNativeOneSignalPackage(),
-            new MusicControl(),
             new LinearGradientPackage(),
-            new ImagePickerPackage(),
-            new RNDeviceInfo(),
-            new ReactNativeConfigPackage()
+            new CustomTabsPackage()
       );
     }
 
diff --git a/apolloschurchapp/android/app/src/main/res/drawable/background_splash.xml b/apolloschurchapp/android/app/src/main/res/drawable/background_splash.xml
index 19383f0..4f85728 100644
--- a/apolloschurchapp/android/app/src/main/res/drawable/background_splash.xml
+++ b/apolloschurchapp/android/app/src/main/res/drawable/background_splash.xml
@@ -2,7 +2,7 @@
 <layer-list xmlns:android="http://schemas.android.com/apk/res/android">
 
     <item
-        android:drawable="@color/primary"/>
+        android:drawable="@color/deep_water"/>
 
     <item
         android:width="95.28dp"
diff --git a/apolloschurchapp/android/app/src/main/res/layout/launch_screen.xml b/apolloschurchapp/android/app/src/main/res/layout/launch_screen.xml
index 6e78d8b..0009481 100644
--- a/apolloschurchapp/android/app/src/main/res/layout/launch_screen.xml
+++ b/apolloschurchapp/android/app/src/main/res/layout/launch_screen.xml
@@ -3,7 +3,7 @@
     android:orientation="vertical"
     android:layout_width="match_parent"
     android:layout_height="match_parent"
-    android:background="@color/primary"
+    android:background="@color/deep_water"
     android:gravity="center">
 
     <ImageView
diff --git a/apolloschurchapp/android/app/src/main/res/values-v21/styles.xml b/apolloschurchapp/android/app/src/main/res/values-v21/styles.xml
index 8cfc536..5a4019d 100644
--- a/apolloschurchapp/android/app/src/main/res/values-v21/styles.xml
+++ b/apolloschurchapp/android/app/src/main/res/values-v21/styles.xml
@@ -7,12 +7,12 @@
 
     <style name="LaunchTheme" parent="Theme.AppCompat.Light.NoActionBar">
         <item name="android:windowBackground">@drawable/background_splash</item>
-        <item name="android:statusBarColor">@color/primary</item>
+        <item name="android:statusBarColor">@color/deep_water</item>
     </style>
 
     <style name="SplashScreenTheme" parent="SplashScreen_SplashTheme">
-        <item name="android:statusBarColor">@color/primary</item>
-        <item name="colorPrimaryDark">@color/primary</item>
+        <item name="android:statusBarColor">@color/deep_water</item>
+        <item name="colorPrimaryDark">@color/deep_water</item>
     </style>
 
 </resources>
diff --git a/apolloschurchapp/android/app/src/main/res/values/colors.xml b/apolloschurchapp/android/app/src/main/res/values/colors.xml
index 62a0e92..348fc25 100644
--- a/apolloschurchapp/android/app/src/main/res/values/colors.xml
+++ b/apolloschurchapp/android/app/src/main/res/values/colors.xml
@@ -1,4 +1,4 @@
 <?xml version="1.0" encoding="utf-8"?>
 <resources>
-    <color name="primary">#00676D</color>
-</resources>
+    <color name="deep_water">#00676D</color>
+</resources>
\ No newline at end of file
diff --git a/apolloschurchapp/android/build.gradle b/apolloschurchapp/android/build.gradle
index 50a195a..dea1a1c 100644
--- a/apolloschurchapp/android/build.gradle
+++ b/apolloschurchapp/android/build.gradle
@@ -2,18 +2,22 @@
 
 buildscript {
     ext {
-        buildToolsVersion = "28.0.3"
+        buildToolsVersion = "27.0.3"
         minSdkVersion = 16
-        compileSdkVersion = 28
-        targetSdkVersion = 28
-        supportLibVersion = "28.0.0"
+        compileSdkVersion = 27
+        targetSdkVersion = 26
+        supportLibVersion = "27.1.1"
     }
     repositories {
-        google()
         jcenter()
+        maven {
+            url 'https://maven.google.com/'
+            name 'Google'
+        }
+        google()
     }
     dependencies {
-        classpath 'com.android.tools.build:gradle:3.3.1'
+        classpath 'com.android.tools.build:gradle:3.1.4'
 
         // NOTE: Do not place your application dependencies here; they belong
         // in the individual module build.gradle files
@@ -23,8 +27,12 @@ buildscript {
 allprojects {
     repositories {
         mavenLocal()
-        google()
+        maven {
+            url 'https://maven.google.com/'
+            name 'Google'
+        }
         jcenter()
+        google()
         maven {
             // All of React Native (JS, Obj-C sources, Android binaries) is installed from npm
             url "$rootDir/../node_modules/react-native/android"
@@ -32,3 +40,27 @@ allprojects {
         maven { url "https://jitpack.io" }
     }
 }
+
+ext {
+    buildToolsVersion = "26.0.3"
+    minSdkVersion = 16
+    compileSdkVersion = 26
+    targetSdkVersion = 26
+    supportLibVersion = "26.1.0"
+}
+
+subprojects {
+    afterEvaluate { project ->
+        if (project.hasProperty("android")) {
+            android {
+                compileSdkVersion rootProject.ext.compileSdkVersion
+                buildToolsVersion rootProject.ext.buildToolsVersion
+            }
+        }
+    }
+}
+
+task wrapper(type: Wrapper) {
+    gradleVersion = '4.4'
+    distributionUrl = distributionUrl.replace("bin", "all")
+}
diff --git a/apolloschurchapp/android/gradle/wrapper/gradle-wrapper.properties b/apolloschurchapp/android/gradle/wrapper/gradle-wrapper.properties
index 019065d..b6517bb 100644
--- a/apolloschurchapp/android/gradle/wrapper/gradle-wrapper.properties
+++ b/apolloschurchapp/android/gradle/wrapper/gradle-wrapper.properties
@@ -2,4 +2,4 @@ distributionBase=GRADLE_USER_HOME
 distributionPath=wrapper/dists
 zipStoreBase=GRADLE_USER_HOME
 zipStorePath=wrapper/dists
-distributionUrl=https\://services.gradle.org/distributions/gradle-4.10.2-all.zip
+distributionUrl=https\://services.gradle.org/distributions/gradle-4.4-all.zip
diff --git a/apolloschurchapp/android/settings.gradle b/apolloschurchapp/android/settings.gradle
index d705770..e1ecbb9 100644
--- a/apolloschurchapp/android/settings.gradle
+++ b/apolloschurchapp/android/settings.gradle
@@ -1,29 +1,23 @@
 rootProject.name = 'apolloschurchapp'
-include ':react-native-maps'
-project(':react-native-maps').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-maps/lib/android')
-include ':rn-fetch-blob'
-project(':rn-fetch-blob').projectDir = new File(rootProject.projectDir, '../node_modules/rn-fetch-blob/android')
-include ':react-native-webview'
-project(':react-native-webview').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-webview/android')
-include ':react-native-video'
-project(':react-native-video').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-video/android-exoplayer')
-include ':react-native-svg'
-project(':react-native-svg').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-svg/android')
-include ':react-native-splash-screen'
-project(':react-native-splash-screen').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-splash-screen/android')
 include ':react-native-screens'
 project(':react-native-screens').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-screens/android')
 include ':react-native-onesignal'
 project(':react-native-onesignal').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-onesignal/android')
-include ':react-native-music-control'
-project(':react-native-music-control').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-music-control/android')
-include ':react-native-linear-gradient'
-project(':react-native-linear-gradient').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-linear-gradient/android')
 include ':react-native-image-picker'
 project(':react-native-image-picker').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-image-picker/android')
+include ':react-native-music-control'
+project(':react-native-music-control').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-music-control/android')
 include ':react-native-device-info'
 project(':react-native-device-info').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-device-info/android')
-include ':react-native-config'
-project(':react-native-config').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-config/android')
+include ':react-native-video'
+project(':react-native-video').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-video/android-exoplayer')
+include ':react-native-svg'
+project(':react-native-svg').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-svg/android')
+include ':react-native-splash-screen'
+project(':react-native-splash-screen').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-splash-screen/android')
+include ':react-native-linear-gradient'
+project(':react-native-linear-gradient').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-linear-gradient/android')
+include ':react-native-custom-tabs'
+project(':react-native-custom-tabs').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-custom-tabs/android')
 
 include ':app'
diff --git a/apolloschurchapp/apollos.json b/apolloschurchapp/apollos.json
deleted file mode 100644
index 614d45e..0000000
--- a/apolloschurchapp/apollos.json
+++ /dev/null
@@ -1,4 +0,0 @@
-{
-    "version": "0.8.6",
-    "environment": "client"
-}
\ No newline at end of file
diff --git a/apolloschurchapp/appcenter-post-clone.sh b/apolloschurchapp/appcenter-post-clone.sh
index 268f281..97b3e73 100755
--- a/apolloschurchapp/appcenter-post-clone.sh
+++ b/apolloschurchapp/appcenter-post-clone.sh
@@ -10,6 +10,4 @@ cp $(pwd)/../../yarn.lock $(pwd)/yarn.lock
 
 # Swaps out all placeholder env variables w/ their real values
 # Placeholders look like "$ONE_SIGNAL_KEY"
-grep -o '\$.*' .env.production | sed 's/\$\(.*\)/\1/' | xargs -I {} sh -c "sed -i -e 's/\$"{}"/'$"{}"'/' .env.production"
-# Make sure ReactNativeConfig picks up values from prod env file.
-cp .env.production .env
\ No newline at end of file
+grep -o '\$.*' .env.production | sed 's/\$\(.*\)/\1/' | xargs -I {} sh -c "sed -i -e 's/\$"{}"/'$"{}"'/' .env.production"
\ No newline at end of file
diff --git a/apolloschurchapp/appcenter-pre-build.sh b/apolloschurchapp/appcenter-pre-build.sh
index a9348f2..c666ab2 100644
--- a/apolloschurchapp/appcenter-pre-build.sh
+++ b/apolloschurchapp/appcenter-pre-build.sh
@@ -6,4 +6,3 @@ cp $droid_dir/gradle.properties.appcenter $droid_dir/gradle.properties
 
 cd ../../
 yarn
-yarn lerna run generate-stories
\ No newline at end of file
diff --git a/apolloschurchapp/babel.config.js b/apolloschurchapp/babel.config.js
deleted file mode 100644
index bd83dde..0000000
--- a/apolloschurchapp/babel.config.js
+++ /dev/null
@@ -1,12 +0,0 @@
-module.exports = {
-  presets: ['module:metro-react-native-babel-preset'],
-  plugins: [
-    [
-      '@babel/plugin-proposal-decorators',
-      {
-        legacy: true,
-      },
-    ],
-    ['@babel/plugin-proposal-export-default-from'],
-  ],
-};
diff --git a/apolloschurchapp/index.js b/apolloschurchapp/index.js
index 6bfaa01..d009549 100644
--- a/apolloschurchapp/index.js
+++ b/apolloschurchapp/index.js
@@ -1,23 +1,6 @@
-import './polyfill'; // this can be removed when we upgrade to react-native 59
 import { AppRegistry, YellowBox } from 'react-native';
-import SplashScreen from 'react-native-splash-screen';
 
-import Config from 'react-native-config';
-import Storybook from './storybook';
-import MainApp from './src';
-
-const useStorybook = Config.STORYBOOK === 'true';
-
-let App = MainApp;
-if (useStorybook) {
-  App = Storybook;
-}
-
-// If there's an error before the splash screen goes away, you never see that error.
-// This tries to hide the splash screen so you can see the error.
-// Shouldnt't do anything in Prod.
-// Depending on the error, splash screen might not go away ;)
-global.ErrorUtils.setGlobalHandler(() => SplashScreen.hide());
+import App from './src';
 
 YellowBox.ignoreWarnings([
   'Warning: isMounted(...) is deprecated',
diff --git a/apolloschurchapp/ios/apolloschurchapp-tvOS/Info.plist b/apolloschurchapp/ios/apolloschurchapp-tvOS/Info.plist
index 9bfe7a7..aed24ed 100644
--- a/apolloschurchapp/ios/apolloschurchapp-tvOS/Info.plist
+++ b/apolloschurchapp/ios/apolloschurchapp-tvOS/Info.plist
@@ -15,11 +15,11 @@
 	<key>CFBundlePackageType</key>
 	<string>APPL</string>
 	<key>CFBundleShortVersionString</key>
-	<string>0.8.6</string>
+	<string>0.7.0</string>
 	<key>CFBundleSignature</key>
 	<string>????</string>
 	<key>CFBundleVersion</key>
-	<string>11</string>
+	<string>5</string>
 	<key>LSRequiresIPhoneOS</key>
 	<true />
 	<key>UILaunchStoryboardName</key>
diff --git a/apolloschurchapp/ios/apolloschurchapp-tvOSTests/Info.plist b/apolloschurchapp/ios/apolloschurchapp-tvOSTests/Info.plist
index 81df5aa..e358b6d 100644
--- a/apolloschurchapp/ios/apolloschurchapp-tvOSTests/Info.plist
+++ b/apolloschurchapp/ios/apolloschurchapp-tvOSTests/Info.plist
@@ -15,10 +15,10 @@
 	<key>CFBundlePackageType</key>
 	<string>BNDL</string>
 	<key>CFBundleShortVersionString</key>
-	<string>0.8.6</string>
+	<string>0.7.0</string>
 	<key>CFBundleSignature</key>
 	<string>????</string>
 	<key>CFBundleVersion</key>
-	<string>11</string>
+	<string>5</string>
 </dict>
 </plist>
diff --git a/apolloschurchapp/ios/apolloschurchapp.xcodeproj/project.pbxproj b/apolloschurchapp/ios/apolloschurchapp.xcodeproj/project.pbxproj
index 70fcb47..a1d174c 100644
--- a/apolloschurchapp/ios/apolloschurchapp.xcodeproj/project.pbxproj
+++ b/apolloschurchapp/ios/apolloschurchapp.xcodeproj/project.pbxproj
@@ -5,6 +5,7 @@
 	};
 	objectVersion = 46;
 	objects = {
+
 /* Begin PBXBuildFile section */
 		00C302E51ABCBA2D00DB3ED1 /* libRCTActionSheet.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 00C302AC1ABCB8CE00DB3ED1 /* libRCTActionSheet.a */; };
 		00C302E71ABCBA2D00DB3ED1 /* libRCTGeolocation.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 00C302BA1ABCB90400DB3ED1 /* libRCTGeolocation.a */; };
@@ -12,10 +13,7 @@
 		00C302E91ABCBA2D00DB3ED1 /* libRCTNetwork.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 00C302DC1ABCB9D200DB3ED1 /* libRCTNetwork.a */; };
 		00C302EA1ABCBA2D00DB3ED1 /* libRCTVibration.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 00C302E41ABCB9EE00DB3ED1 /* libRCTVibration.a */; };
 		00E356F31AD99517003FC87E /* apolloschurchappTests.m in Sources */ = {isa = PBXBuildFile; fileRef = 00E356F21AD99517003FC87E /* apolloschurchappTests.m */; };
-		01F091B02048490A8F9EF4FE /* Inter-UI-Italic.otf in Resources */ = {isa = PBXBuildFile; fileRef = 63F6EE53A9B44B4388B5F1C2 /* Inter-UI-Italic.otf */; };
-		08CE105F17284254AD54AF84 /* DroidSerif-Bold.ttf in Resources */ = {isa = PBXBuildFile; fileRef = E3B8A0AC5A6B4FABB3BDF6CB /* DroidSerif-Bold.ttf */; };
-		0CB759F558AA42908EEA1EAB /* libRNDeviceInfo-tvOS.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 7A505BEDA0674A7F9DD875ED /* libRNDeviceInfo-tvOS.a */; };
-		11D1A2F320CAFA9E000508D9 /* libRCTAnimation.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 5E9157331DD0AC6500FF2AA8 /* libRCTAnimation.a */; };
+		0D4EDF6EBA274F9D93DDED76 /* Inter-UI-MediumItalic.otf in Resources */ = {isa = PBXBuildFile; fileRef = F79112193F3548D284406ABF /* Inter-UI-MediumItalic.otf */; };
 		133E29F31AD74F7200F7D852 /* libRCTLinking.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 78C398B91ACF4ADC00677621 /* libRCTLinking.a */; };
 		139105C61AF99C1200B5F7CC /* libRCTSettings.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 139105C11AF99BAD00B5F7CC /* libRCTSettings.a */; };
 		139FDEF61B0652A700C62182 /* libRCTWebSocket.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 139FDEF41B06529B00C62182 /* libRCTWebSocket.a */; };
@@ -25,8 +23,8 @@
 		13B07FC11A68108700A75B9A /* main.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB71A68108700A75B9A /* main.m */; };
 		140ED2AC1D01E1AD002B40FF /* libReact.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 146834041AC3E56700842450 /* libReact.a */; };
 		146834051AC3E58100842450 /* libReact.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 146834041AC3E56700842450 /* libReact.a */; };
-		1C48DCDE11AC47C48E918489 /* Inter-UI-Medium.otf in Resources */ = {isa = PBXBuildFile; fileRef = DC74A378C1CC40E4B6192D7F /* Inter-UI-Medium.otf */; };
-		1E6618B697C649BB9FCD362E /* libBVLinearGradient.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 9F0EC3F23A3F4FFBBBC6583A /* libBVLinearGradient.a */; };
+		1680179655164C96985B5731 /* libMusicControl.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 643D51DCF8F14993B9AA6990 /* libMusicControl.a */; };
+		1C1FD8B313AB4A6583A0D31B /* libRNDeviceInfo.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 14D838A2FAE743C7B1DA5E31 /* libRNDeviceInfo.a */; };
 		2D02E4BC1E0B4A80006451C7 /* AppDelegate.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB01A68108700A75B9A /* AppDelegate.m */; };
 		2D02E4BD1E0B4A84006451C7 /* Images.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB51A68108700A75B9A /* Images.xcassets */; };
 		2D02E4BF1E0B4AB3006451C7 /* main.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB71A68108700A75B9A /* main.m */; };
@@ -40,37 +38,32 @@
 		2D16E6881FA4F8E400B85C8A /* libReact.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 2D16E6891FA4F8E400B85C8A /* libReact.a */; };
 		2DCD954D1E0B4F2C00145EB5 /* apolloschurchappTests.m in Sources */ = {isa = PBXBuildFile; fileRef = 00E356F21AD99517003FC87E /* apolloschurchappTests.m */; };
 		2DF0FFEE2056DD460020B375 /* libReact.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 3DAD3EA31DF850E9000B6D8A /* libReact.a */; };
-		4994C0DA2471456ABE1D0174 /* libRNAirplay.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 0BE434FF7E9549F392208DEF /* libRNAirplay.a */; };
-		4C19EE32F0B441CD93BB0172 /* libRCTOneSignal.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 0D480D95FC7F4569B8B934E3 /* libRCTOneSignal.a */; };
-		578FFEC1D7D54C9B871A9E5B /* Inter-UI-BlackItalic.otf in Resources */ = {isa = PBXBuildFile; fileRef = 5A5A2BC2998547F4816B82E4 /* Inter-UI-BlackItalic.otf */; };
-		5CAC55FAB9964618918A0056 /* libSafariViewManager.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 349D96BF833B4B1C88D02412 /* libSafariViewManager.a */; };
-		62236B4E7E814A95BC3A3B19 /* libRNScreens.a in Frameworks */ = {isa = PBXBuildFile; fileRef = A44246D0E44E48C4B8335DBD /* libRNScreens.a */; };
-		62BCE95D7F6B4F37B3CB4265 /* libRNImagePicker.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 605AEFB6B1BB4611BDCFE95C /* libRNImagePicker.a */; };
-		68D1351E80AA4A2C96288FD9 /* Inter-UI-Black.otf in Resources */ = {isa = PBXBuildFile; fileRef = EC21254B449443F99016EBFD /* Inter-UI-Black.otf */; };
-		6FFC53D62D7D482A9A92B721 /* libRNSVG-tvOS.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 67356E00D116467DA58DF3CC /* libRNSVG-tvOS.a */; };
-		7FBC6BC3CE8D48298F9850A9 /* Inter-UI-Bold.otf in Resources */ = {isa = PBXBuildFile; fileRef = D5157D807E164356ADE87867 /* Inter-UI-Bold.otf */; };
-		80E20D1B9CC74EB4A9A4CE7B /* libRNFetchBlob.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 0174E356BAEC413288BF654B /* libRNFetchBlob.a */; };
-		820E9220ECAC4A83A15D589F /* libReactNativeConfig-tvOS.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 97222E2EB5E54C7FA6104218 /* libReactNativeConfig-tvOS.a */; };
-		82A2FF1E6E114D3D962D533D /* libRNPassKit.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 3AB4C6D7F52C428FA62777F1 /* libRNPassKit.a */; };
+		3CAA28FFFCCF46518672AC8F /* libDBCustomTabs.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 71E6499CCC9D4DB2ADD365D8 /* libDBCustomTabs.a */; };
+		417027FD83CA4902AB4DB2B4 /* Inter-UI-Black.otf in Resources */ = {isa = PBXBuildFile; fileRef = 8E13C8F9AE60487C9ED95C21 /* Inter-UI-Black.otf */; };
+		4B29B8AACC2A4FB7BA6A8EEB /* libSafariViewManager.a in Frameworks */ = {isa = PBXBuildFile; fileRef = BF5A2B416EB74A44923FED7B /* libSafariViewManager.a */; };
+		59D8DFA78CDF4642892CC142 /* DroidSerif-BoldItalic.ttf in Resources */ = {isa = PBXBuildFile; fileRef = D979B537509247C099CE3F24 /* DroidSerif-BoldItalic.ttf */; };
+		5C862E57737C4032A378868D /* libRNScreens.a in Frameworks */ = {isa = PBXBuildFile; fileRef = B16900D1DAC94F96B742B4EA /* libRNScreens.a */; };
+		5CA1D8E805684478B04ABB60 /* Inter-UI-Italic.otf in Resources */ = {isa = PBXBuildFile; fileRef = 8CA3C04F98954FB2895CD36D /* Inter-UI-Italic.otf */; };
+		5E9157361DD0AC6A00FF2AA8 /* libRCTAnimation.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 5E9157331DD0AC6500FF2AA8 /* libRCTAnimation.a */; };
+		6C6BE3C2189E4FBA9FB66BE5 /* libRCTOneSignal.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 828255630B3246AEA19CF24D /* libRCTOneSignal.a */; };
+		6E4442FB39BE4F898DE4C454 /* Inter-UI-BlackItalic.otf in Resources */ = {isa = PBXBuildFile; fileRef = 22246A6BC58E4CF09A22A4DF /* Inter-UI-BlackItalic.otf */; };
+		7D060CA312AB4E828CD60DDC /* Inter-UI-Regular.otf in Resources */ = {isa = PBXBuildFile; fileRef = 10F42B11F27E467A8C71C280 /* Inter-UI-Regular.otf */; };
 		832341BD1AAA6AB300B99B32 /* libRCTText.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 832341B51AAA6A8300B99B32 /* libRCTText.a */; };
-		834122CBBA8E476A8652994F /* libRNCWebView.a in Frameworks */ = {isa = PBXBuildFile; fileRef = AE039A0F55BB4B989835F759 /* libRNCWebView.a */; };
-		894732A70B4740678E85B593 /* Inter-UI-BoldItalic.otf in Resources */ = {isa = PBXBuildFile; fileRef = 2F5410F239E9477B9C2E86BD /* Inter-UI-BoldItalic.otf */; };
-		90743C40BF544F10A810C43C /* DroidSerif-Italic.ttf in Resources */ = {isa = PBXBuildFile; fileRef = ADC3D2DB245545ADB1CAB3FE /* DroidSerif-Italic.ttf */; };
-		93A2B0A9328A46A4B7DD5EFA /* DroidSerif-Regular.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 4E007B33EDD74B82AEF02C24 /* DroidSerif-Regular.ttf */; };
-		A975E0B94A5D44AEB410E546 /* libReactNativeConfig.a in Frameworks */ = {isa = PBXBuildFile; fileRef = CF3175A44C4B4612AD79C04E /* libReactNativeConfig.a */; };
-		AB3BD177B8A14193A5EEDDF8 /* Inter-UI-Regular.otf in Resources */ = {isa = PBXBuildFile; fileRef = A613256118404CB691DE2C8E /* Inter-UI-Regular.otf */; };
+		86D0B47B5BF143E797822EF1 /* libRCTVideo.a in Frameworks */ = {isa = PBXBuildFile; fileRef = FC8FFB7C37BB4499AEB6FA37 /* libRCTVideo.a */; };
+		89331B8BDAF24EF5BE08A485 /* libRNSVG.a in Frameworks */ = {isa = PBXBuildFile; fileRef = CFAF46FBA8B44C7B8DCA7707 /* libRNSVG.a */; };
+		9388C44B949C4DBAAA7256D5 /* libBVLinearGradient.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 60E52391C9744A46B3925A78 /* libBVLinearGradient.a */; };
+		9ACBD642B18D41C9BB1E4D9E /* DroidSerif-Italic.ttf in Resources */ = {isa = PBXBuildFile; fileRef = F9CFD638A5414DFF961A8D11 /* DroidSerif-Italic.ttf */; };
+		A173C226549E48B991AC5D98 /* Inter-UI-Medium.otf in Resources */ = {isa = PBXBuildFile; fileRef = 9FD7D997F4F14C439AC699B3 /* Inter-UI-Medium.otf */; };
+		AB7B2136E56C4B40B64F9C87 /* libMusicControl-tvOS.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 67E66409EF8A4BC7A1B9E054 /* libMusicControl-tvOS.a */; };
+		AC4174D90AD644A28D0CA9D9 /* libRNDeviceInfo-tvOS.a in Frameworks */ = {isa = PBXBuildFile; fileRef = A574C961754742F688E43151 /* libRNDeviceInfo-tvOS.a */; };
 		ADBDB9381DFEBF1600ED6528 /* libRCTBlob.a in Frameworks */ = {isa = PBXBuildFile; fileRef = ADBDB9271DFEBF0700ED6528 /* libRCTBlob.a */; };
-		B02F194A3F6A4FE29AC799B4 /* DroidSerif-BoldItalic.ttf in Resources */ = {isa = PBXBuildFile; fileRef = A93F9D112A034626A9421759 /* DroidSerif-BoldItalic.ttf */; };
-		B0D490A62BC143209FD3BFE8 /* libMusicControl.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 393EA40CFC2843BF9BB667B3 /* libMusicControl.a */; };
-		B6899815EB024B7987617799 /* libRNSVG.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 430F3786C56541B198E03A02 /* libRNSVG.a */; };
-		CB1584B0772D4A67A81FC83F /* libMusicControl-tvOS.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 74625A1E54234FB7BE12070D /* libMusicControl-tvOS.a */; };
-		CE33B866C2DE49DEBE1AF23F /* libSplashScreen.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 1398ECED9AE14FD19B92232D /* libSplashScreen.a */; };
-		CFE4716D4F6D4ABF9ED485AC /* libRNDeviceInfo.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 0F155E84A5784CBE8D95A974 /* libRNDeviceInfo.a */; };
-		D2F560374F3341308A1579E7 /* libRCTVideo.a in Frameworks */ = {isa = PBXBuildFile; fileRef = C7FE26CDA2DC4CDBAB580A2F /* libRCTVideo.a */; };
-		E28D37FEDA0245DBAC6552D3 /* libAirMaps.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 9862436C289A498D8B2E6201 /* libAirMaps.a */; };
-		ED297163215061F000B7C4FE /* JavaScriptCore.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = ED297162215061F000B7C4FE /* JavaScriptCore.framework */; };
-		ED2971652150620600B7C4FE /* JavaScriptCore.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = ED2971642150620600B7C4FE /* JavaScriptCore.framework */; };
-		FCB3069DB5DD4170B2CAEFC4 /* Inter-UI-MediumItalic.otf in Resources */ = {isa = PBXBuildFile; fileRef = A460FD7884FD4574A818005A /* Inter-UI-MediumItalic.otf */; };
+		B5DE58C6CF1E4E7ABDD1B48D /* libRNImagePicker.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 3F58D699A37B432BA1C0F092 /* libRNImagePicker.a */; };
+		C87CA8735EEB43C4A55CB285 /* DroidSerif-Bold.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 4629759169AB4756B447B16A /* DroidSerif-Bold.ttf */; };
+		D5744BF3B41D4BC49F93CD68 /* DroidSerif-Regular.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 76E6AD5294554A5FA53DB415 /* DroidSerif-Regular.ttf */; };
+		DEF13113111A40DF8F4FEB13 /* libRNSVG-tvOS.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 84716CBFF56347BA880A16C6 /* libRNSVG-tvOS.a */; };
+		E374C61F2AAF41D3B615AB44 /* Inter-UI-BoldItalic.otf in Resources */ = {isa = PBXBuildFile; fileRef = 32A467E2C3364ABDBB7BD0D1 /* Inter-UI-BoldItalic.otf */; };
+		F3F4A3D13570438F9562746F /* libSplashScreen.a in Frameworks */ = {isa = PBXBuildFile; fileRef = F08D1EBF0C2A4E6798AA8F36 /* libSplashScreen.a */; };
+		F8FAD93CCE5641A8B87611EA /* Inter-UI-Bold.otf in Resources */ = {isa = PBXBuildFile; fileRef = FB25CB02F40D4CC39DDA3C74 /* Inter-UI-Bold.otf */; };
 /* End PBXBuildFile section */
 
 /* Begin PBXContainerItemProxy section */
@@ -207,6 +200,20 @@
 			remoteGlobalIDString = 3D383D621EBD27B9005632C8;
 			remoteInfo = "double-conversion-tvOS";
 		};
+		2DF0FFEA2056DD460020B375 /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 9936F3131F5F2E4B0010BF04;
+			remoteInfo = privatedata;
+		};
+		2DF0FFEC2056DD460020B375 /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 9936F32F1F5F2E5B0010BF04;
+			remoteInfo = "privatedata-tvOS";
+		};
 		3DAD3E831DF850E9000B6D8A /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
 			containerPortal = 00C302BB1ABCB91800DB3ED1 /* RCTImage.xcodeproj */;
@@ -284,6 +291,34 @@
 			remoteGlobalIDString = 3D3CD9321DE5FBEE00167DC4;
 			remoteInfo = "cxxreact-tvOS";
 		};
+		3DAD3EAC1DF850E9000B6D8A /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 3D3CD90B1DE5FBD600167DC4;
+			remoteInfo = jschelpers;
+		};
+		3DAD3EAE1DF850E9000B6D8A /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 3D3CD9181DE5FBD800167DC4;
+			remoteInfo = "jschelpers-tvOS";
+		};
+		427787EC2149B96A0045AD7F /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 84B340CC6C3940A782834F00 /* RCTOneSignal.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 3245CDED1BFEE35C00EABF68;
+			remoteInfo = RCTOneSignal;
+		};
+		42B4B6CB219DD7CB00162F25 /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 59AF37DEFAA847DBAB3A0526 /* RNScreens.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 134814201AA4EA6300B7C361;
+			remoteInfo = RNScreens;
+		};
 		5E9157321DD0AC6500FF2AA8 /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
 			containerPortal = 5E91572D1DD0AC6500FF2AA8 /* RCTAnimation.xcodeproj */;
@@ -305,145 +340,103 @@
 			remoteGlobalIDString = 134814201AA4EA6300B7C361;
 			remoteInfo = RCTLinking;
 		};
-		79CEBFDB223011FE00D8F685 /* PBXContainerItemProxy */ = {
+		791434762126017B006F13B7 /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
-			containerPortal = 43F1D28CACD04757A0FB29A6 /* BVLinearGradient.xcodeproj */;
+			containerPortal = 46704FC4FCEB45B6B9DD92BB /* BVLinearGradient.xcodeproj */;
 			proxyType = 2;
 			remoteGlobalIDString = 134814201AA4EA6300B7C361;
 			remoteInfo = BVLinearGradient;
 		};
-		79CEBFDD223011FE00D8F685 /* PBXContainerItemProxy */ = {
+		791434782126017B006F13B7 /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
-			containerPortal = 43F1D28CACD04757A0FB29A6 /* BVLinearGradient.xcodeproj */;
+			containerPortal = 46704FC4FCEB45B6B9DD92BB /* BVLinearGradient.xcodeproj */;
 			proxyType = 2;
 			remoteGlobalIDString = 64AA15081EF7F30100718508;
 			remoteInfo = "BVLinearGradient-tvOS";
 		};
-		79CEBFE1223011FE00D8F685 /* PBXContainerItemProxy */ = {
+		7914347C2126017B006F13B7 /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
-			containerPortal = BD872E89C275480496010898 /* MusicControl.xcodeproj */;
+			containerPortal = 2F8741F0746D4C8A89970C4D /* RCTVideo.xcodeproj */;
 			proxyType = 2;
 			remoteGlobalIDString = 134814201AA4EA6300B7C361;
-			remoteInfo = MusicControl;
-		};
-		79CEBFE3223011FE00D8F685 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = BD872E89C275480496010898 /* MusicControl.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = A3FC285E1EA7A8350097B6A9;
-			remoteInfo = "MusicControl-tvOS";
+			remoteInfo = RCTVideo;
 		};
-		79CEBFE6223011FE00D8F685 /* PBXContainerItemProxy */ = {
+		7914347E2126017B006F13B7 /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
-			containerPortal = 34667F4711264343B035ACD0 /* RCTOneSignal.xcodeproj */;
+			containerPortal = 2F8741F0746D4C8A89970C4D /* RCTVideo.xcodeproj */;
 			proxyType = 2;
-			remoteGlobalIDString = 3245CDED1BFEE35C00EABF68;
-			remoteInfo = RCTOneSignal;
+			remoteGlobalIDString = 641E28441F0EEC8500443AF6;
+			remoteInfo = "RCTVideo-tvOS";
 		};
-		79CEBFEA223011FE00D8F685 /* PBXContainerItemProxy */ = {
+		791434812126017B006F13B7 /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
-			containerPortal = 63998175DB3B4506ACF27B92 /* ReactNativeConfig.xcodeproj */;
+			containerPortal = 6BAAC994942548609D0EEECA /* ReactNativeCustomTabs.xcodeproj */;
 			proxyType = 2;
-			remoteGlobalIDString = EB2648DF1C7BE17A00B8F155;
-			remoteInfo = ReactNativeConfig;
+			remoteGlobalIDString = DA7118681CC9158A0087DF95;
+			remoteInfo = DBCustomTabs;
 		};
-		79CEBFEC223011FE00D8F685 /* PBXContainerItemProxy */ = {
+		791434852126017B006F13B7 /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
-			containerPortal = 63998175DB3B4506ACF27B92 /* ReactNativeConfig.xcodeproj */;
+			containerPortal = 01441BF099BE44EE8BA8E390 /* RNSVG.xcodeproj */;
 			proxyType = 2;
-			remoteGlobalIDString = 3DF7F6AC203AA09B00D0EAB7;
-			remoteInfo = "ReactNativeConfig-tvOS";
+			remoteGlobalIDString = 0CF68AC11AF0540F00FF9E5C;
+			remoteInfo = RNSVG;
 		};
-		79CEBFF2223011FE00D8F685 /* PBXContainerItemProxy */ = {
+		791434872126017B006F13B7 /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
-			containerPortal = 3923D6EFF26D4A53B8BDF8C6 /* RNAirplay.xcodeproj */;
+			containerPortal = 01441BF099BE44EE8BA8E390 /* RNSVG.xcodeproj */;
 			proxyType = 2;
-			remoteGlobalIDString = 134814201AA4EA6300B7C361;
-			remoteInfo = RNAirplay;
+			remoteGlobalIDString = 94DDAC5C1F3D024300EED511;
+			remoteInfo = "RNSVG-tvOS";
 		};
-		79CEBFF5223011FE00D8F685 /* PBXContainerItemProxy */ = {
+		7914348A2126017B006F13B7 /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
-			containerPortal = 4ED51CB73778472686A7279B /* RNCWebView.xcodeproj */;
+			containerPortal = 6B6E5A404A4B4A34B18D7D34 /* SafariViewManager.xcodeproj */;
 			proxyType = 2;
 			remoteGlobalIDString = 134814201AA4EA6300B7C361;
-			remoteInfo = RNCWebView;
-		};
-		79CEBFF9223011FE00D8F685 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 39E16D6487A34F4D9B8C6EC1 /* RNDeviceInfo.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = DA5891D81BA9A9FC002B4DB2;
-			remoteInfo = RNDeviceInfo;
-		};
-		79CEBFFB223011FE00D8F685 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 39E16D6487A34F4D9B8C6EC1 /* RNDeviceInfo.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = E72EC1401F7ABB5A0001BC90;
-			remoteInfo = "RNDeviceInfo-tvOS";
-		};
-		79CEBFFE223011FE00D8F685 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 629FCAAD128E41B4BAE2BCF4 /* RNImagePicker.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 014A3B5C1C6CF33500B6D375;
-			remoteInfo = RNImagePicker;
+			remoteInfo = SafariViewManager;
 		};
-		79CEC004223011FE00D8F685 /* PBXContainerItemProxy */ = {
+		7914348D2126017B006F13B7 /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
-			containerPortal = 0C974B3AFB5446819A990A78 /* SplashScreen.xcodeproj */;
+			containerPortal = A64D00F181AE4927A4632B6E /* SplashScreen.xcodeproj */;
 			proxyType = 2;
 			remoteGlobalIDString = 3D7682761D8E76B80014119E;
 			remoteInfo = SplashScreen;
 		};
-		79CEC009223011FE00D8F685 /* PBXContainerItemProxy */ = {
+		794FE987219DF8880046142B /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
-			containerPortal = F4FDE4F3C6704DA2A3E04D18 /* SafariViewManager.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 134814201AA4EA6300B7C361;
-			remoteInfo = SafariViewManager;
-		};
-		79CEC00E223011FE00D8F685 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 00F25A7E17B94370985B32E7 /* RNScreens.xcodeproj */;
+			containerPortal = 59AF37DEFAA847DBAB3A0526 /* RNScreens.xcodeproj */;
 			proxyType = 2;
 			remoteGlobalIDString = 134814201AA4EA6300B7C361;
 			remoteInfo = RNScreens;
 		};
-		79CEC014223011FE00D8F685 /* PBXContainerItemProxy */ = {
+		796F2532212CAD5D00C6935E /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
-			containerPortal = 2130E622CDAD43DF896EFF80 /* RNSVG.xcodeproj */;
+			containerPortal = 239ECFF08FA841B99DB1CAFA /* RNDeviceInfo.xcodeproj */;
 			proxyType = 2;
-			remoteGlobalIDString = 0CF68AC11AF0540F00FF9E5C;
-			remoteInfo = RNSVG;
+			remoteGlobalIDString = DA5891D81BA9A9FC002B4DB2;
+			remoteInfo = RNDeviceInfo;
 		};
-		79CEC016223011FE00D8F685 /* PBXContainerItemProxy */ = {
+		796F2534212CAD5D00C6935E /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
-			containerPortal = 2130E622CDAD43DF896EFF80 /* RNSVG.xcodeproj */;
+			containerPortal = 239ECFF08FA841B99DB1CAFA /* RNDeviceInfo.xcodeproj */;
 			proxyType = 2;
-			remoteGlobalIDString = 94DDAC5C1F3D024300EED511;
-			remoteInfo = "RNSVG-tvOS";
+			remoteGlobalIDString = E72EC1401F7ABB5A0001BC90;
+			remoteInfo = "RNDeviceInfo-tvOS";
 		};
-		79CEC01C223011FE00D8F685 /* PBXContainerItemProxy */ = {
+		797304182146322D00F6E05B /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
-			containerPortal = F617FE53F3334D93B2EEAA64 /* RCTVideo.xcodeproj */;
+			containerPortal = 4BD3C4E6742F4F6380640CA9 /* MusicControl.xcodeproj */;
 			proxyType = 2;
 			remoteGlobalIDString = 134814201AA4EA6300B7C361;
-			remoteInfo = RCTVideo;
-		};
-		79CEC01E223011FE00D8F685 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = F617FE53F3334D93B2EEAA64 /* RCTVideo.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 641E28441F0EEC8500443AF6;
-			remoteInfo = "RCTVideo-tvOS";
+			remoteInfo = MusicControl;
 		};
-		79CEC023223011FF00D8F685 /* PBXContainerItemProxy */ = {
+		7973041A2146322D00F6E05B /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
-			containerPortal = 10B0392307184C498573F1A2 /* RNFetchBlob.xcodeproj */;
+			containerPortal = 4BD3C4E6742F4F6380640CA9 /* MusicControl.xcodeproj */;
 			proxyType = 2;
-			remoteGlobalIDString = A15C300E1CD25C330074CB35;
-			remoteInfo = RNFetchBlob;
+			remoteGlobalIDString = A3FC285E1EA7A8350097B6A9;
+			remoteInfo = "MusicControl-tvOS";
 		};
 		832341B41AAA6A8300B99B32 /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
@@ -459,50 +452,28 @@
 			remoteGlobalIDString = 358F4ED71D1E81A9004DF814;
 			remoteInfo = RCTBlob;
 		};
-		BF08F42F22429D0700FFB1DC /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = EDEBC6D6214B3E7000DD5AC8;
-			remoteInfo = jsi;
-		};
-		BF08F43122429D0700FFB1DC /* PBXContainerItemProxy */ = {
+		BF9931702138673B0077FD20 /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
-			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
+			containerPortal = 3BD7DCDF7B194D7BB9BE3C6C /* RNImagePicker.xcodeproj */;
 			proxyType = 2;
-			remoteGlobalIDString = EDEBC73B214B45A300DD5AC8;
-			remoteInfo = jsiexecutor;
-		};
-		BF08F43322429D0700FFB1DC /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = ED296FB6214C9A0900B7C4FE;
-			remoteInfo = "jsi-tvOS";
-		};
-		BF08F43522429D0700FFB1DC /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = ED296FEE214C9CF800B7C4FE;
-			remoteInfo = "jsiexecutor-tvOS";
-		};
-		BF08F44922429D0700FFB1DC /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 1C0ED1C4FB474DC8A829950D /* AirMaps.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 11FA5C511C4A1296003AC2EE;
-			remoteInfo = AirMaps;
-		};
-		BF08F5182242B97A00FFB1DC /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = D3BA7667091546469A730845 /* RNPassKit.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = 6D42A7D820341E6800A0D1AE;
-			remoteInfo = RNPassKit;
+			remoteGlobalIDString = 014A3B5C1C6CF33500B6D375;
+			remoteInfo = RNImagePicker;
 		};
 /* End PBXContainerItemProxy section */
 
+/* Begin PBXCopyFilesBuildPhase section */
+		4217B141214ADBC00034808C /* Embed App Extensions */ = {
+			isa = PBXCopyFilesBuildPhase;
+			buildActionMask = 2147483647;
+			dstPath = "";
+			dstSubfolderSpec = 13;
+			files = (
+			);
+			name = "Embed App Extensions";
+			runOnlyForDeploymentPostprocessing = 0;
+		};
+/* End PBXCopyFilesBuildPhase section */
+
 /* Begin PBXFileReference section */
 		008F07F21AC5B25A0029DE68 /* main.jsbundle */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = main.jsbundle; sourceTree = "<group>"; };
 		00C302A71ABCB8CE00DB3ED1 /* RCTActionSheet.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = RCTActionSheet.xcodeproj; path = "../node_modules/react-native/Libraries/ActionSheetIOS/RCTActionSheet.xcodeproj"; sourceTree = "<group>"; };
@@ -513,15 +484,9 @@
 		00E356EE1AD99517003FC87E /* apolloschurchappTests.xctest */ = {isa = PBXFileReference; explicitFileType = wrapper.cfbundle; includeInIndex = 0; path = apolloschurchappTests.xctest; sourceTree = BUILT_PRODUCTS_DIR; };
 		00E356F11AD99517003FC87E /* Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; path = Info.plist; sourceTree = "<group>"; };
 		00E356F21AD99517003FC87E /* apolloschurchappTests.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; path = apolloschurchappTests.m; sourceTree = "<group>"; };
-		00F25A7E17B94370985B32E7 /* RNScreens.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = RNScreens.xcodeproj; path = "../node_modules/react-native-screens/ios/RNScreens.xcodeproj"; sourceTree = "<group>"; };
-		0174E356BAEC413288BF654B /* libRNFetchBlob.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libRNFetchBlob.a; sourceTree = "<group>"; };
-		0BE434FF7E9549F392208DEF /* libRNAirplay.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libRNAirplay.a; sourceTree = "<group>"; };
-		0C974B3AFB5446819A990A78 /* SplashScreen.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = SplashScreen.xcodeproj; path = "../node_modules/react-native-splash-screen/ios/SplashScreen.xcodeproj"; sourceTree = "<group>"; };
-		0D480D95FC7F4569B8B934E3 /* libRCTOneSignal.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libRCTOneSignal.a; sourceTree = "<group>"; };
-		0F155E84A5784CBE8D95A974 /* libRNDeviceInfo.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libRNDeviceInfo.a; sourceTree = "<group>"; };
-		10B0392307184C498573F1A2 /* RNFetchBlob.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = RNFetchBlob.xcodeproj; path = "../node_modules/rn-fetch-blob/ios/RNFetchBlob.xcodeproj"; sourceTree = "<group>"; };
+		01441BF099BE44EE8BA8E390 /* RNSVG.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = RNSVG.xcodeproj; path = "../node_modules/react-native-svg/ios/RNSVG.xcodeproj"; sourceTree = "<group>"; };
+		10F42B11F27E467A8C71C280 /* Inter-UI-Regular.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-Regular.otf"; path = "../assets/fonts/Inter-UI-Regular.otf"; sourceTree = "<group>"; };
 		139105B61AF99BAD00B5F7CC /* RCTSettings.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = RCTSettings.xcodeproj; path = "../node_modules/react-native/Libraries/Settings/RCTSettings.xcodeproj"; sourceTree = "<group>"; };
-		1398ECED9AE14FD19B92232D /* libSplashScreen.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libSplashScreen.a; sourceTree = "<group>"; };
 		139FDEE61B06529A00C62182 /* RCTWebSocket.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = RCTWebSocket.xcodeproj; path = "../node_modules/react-native/Libraries/WebSocket/RCTWebSocket.xcodeproj"; sourceTree = "<group>"; };
 		13B07F961A680F5B00A75B9A /* apolloschurchapp.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = apolloschurchapp.app; sourceTree = BUILT_PRODUCTS_DIR; };
 		13B07FAF1A68108700A75B9A /* AppDelegate.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = AppDelegate.h; path = apolloschurchapp/AppDelegate.h; sourceTree = "<group>"; };
@@ -531,55 +496,51 @@
 		13B07FB61A68108700A75B9A /* Info.plist */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.xml; name = Info.plist; path = apolloschurchapp/Info.plist; sourceTree = "<group>"; };
 		13B07FB71A68108700A75B9A /* main.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; name = main.m; path = apolloschurchapp/main.m; sourceTree = "<group>"; };
 		146833FF1AC3E56700842450 /* React.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = React.xcodeproj; path = "../node_modules/react-native/React/React.xcodeproj"; sourceTree = "<group>"; };
-		1C0ED1C4FB474DC8A829950D /* AirMaps.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = AirMaps.xcodeproj; path = "../node_modules/react-native-maps/lib/ios/AirMaps.xcodeproj"; sourceTree = "<group>"; };
-		2130E622CDAD43DF896EFF80 /* RNSVG.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = RNSVG.xcodeproj; path = "../node_modules/react-native-svg/ios/RNSVG.xcodeproj"; sourceTree = "<group>"; };
+		14D838A2FAE743C7B1DA5E31 /* libRNDeviceInfo.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libRNDeviceInfo.a; sourceTree = "<group>"; };
+		22246A6BC58E4CF09A22A4DF /* Inter-UI-BlackItalic.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-BlackItalic.otf"; path = "../assets/fonts/Inter-UI-BlackItalic.otf"; sourceTree = "<group>"; };
+		239ECFF08FA841B99DB1CAFA /* RNDeviceInfo.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = RNDeviceInfo.xcodeproj; path = "../node_modules/react-native-device-info/ios/RNDeviceInfo.xcodeproj"; sourceTree = "<group>"; };
 		2D02E47B1E0B4A5D006451C7 /* apolloschurchapp-tvOS.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = "apolloschurchapp-tvOS.app"; sourceTree = BUILT_PRODUCTS_DIR; };
 		2D02E4901E0B4A5D006451C7 /* apolloschurchapp-tvOSTests.xctest */ = {isa = PBXFileReference; explicitFileType = wrapper.cfbundle; includeInIndex = 0; path = "apolloschurchapp-tvOSTests.xctest"; sourceTree = BUILT_PRODUCTS_DIR; };
 		2D16E6891FA4F8E400B85C8A /* libReact.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; path = libReact.a; sourceTree = BUILT_PRODUCTS_DIR; };
-		2F5410F239E9477B9C2E86BD /* Inter-UI-BoldItalic.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-BoldItalic.otf"; path = "../assets/fonts/Inter-UI-BoldItalic.otf"; sourceTree = "<group>"; };
-		34667F4711264343B035ACD0 /* RCTOneSignal.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = RCTOneSignal.xcodeproj; path = "../node_modules/react-native-onesignal/ios/RCTOneSignal.xcodeproj"; sourceTree = "<group>"; };
-		349D96BF833B4B1C88D02412 /* libSafariViewManager.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libSafariViewManager.a; sourceTree = "<group>"; };
-		3923D6EFF26D4A53B8BDF8C6 /* RNAirplay.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = RNAirplay.xcodeproj; path = "../node_modules/react-native-airplay-btn/ios/RNAirplay.xcodeproj"; sourceTree = "<group>"; };
-		393EA40CFC2843BF9BB667B3 /* libMusicControl.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libMusicControl.a; sourceTree = "<group>"; };
-		39E16D6487A34F4D9B8C6EC1 /* RNDeviceInfo.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = RNDeviceInfo.xcodeproj; path = "../node_modules/react-native-device-info/ios/RNDeviceInfo.xcodeproj"; sourceTree = "<group>"; };
-		3AB4C6D7F52C428FA62777F1 /* libRNPassKit.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libRNPassKit.a; sourceTree = "<group>"; };
-		430F3786C56541B198E03A02 /* libRNSVG.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libRNSVG.a; sourceTree = "<group>"; };
-		43F1D28CACD04757A0FB29A6 /* BVLinearGradient.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = BVLinearGradient.xcodeproj; path = "../node_modules/react-native-linear-gradient/BVLinearGradient.xcodeproj"; sourceTree = "<group>"; };
-		4E007B33EDD74B82AEF02C24 /* DroidSerif-Regular.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "DroidSerif-Regular.ttf"; path = "../assets/fonts/DroidSerif-Regular.ttf"; sourceTree = "<group>"; };
-		4ED51CB73778472686A7279B /* RNCWebView.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = RNCWebView.xcodeproj; path = "../node_modules/react-native-webview/ios/RNCWebView.xcodeproj"; sourceTree = "<group>"; };
-		5A5A2BC2998547F4816B82E4 /* Inter-UI-BlackItalic.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-BlackItalic.otf"; path = "../assets/fonts/Inter-UI-BlackItalic.otf"; sourceTree = "<group>"; };
+		2F8741F0746D4C8A89970C4D /* RCTVideo.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = RCTVideo.xcodeproj; path = "../node_modules/react-native-video/ios/RCTVideo.xcodeproj"; sourceTree = "<group>"; };
+		32A467E2C3364ABDBB7BD0D1 /* Inter-UI-BoldItalic.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-BoldItalic.otf"; path = "../assets/fonts/Inter-UI-BoldItalic.otf"; sourceTree = "<group>"; };
+		3BD7DCDF7B194D7BB9BE3C6C /* RNImagePicker.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = RNImagePicker.xcodeproj; path = "../node_modules/react-native-image-picker/ios/RNImagePicker.xcodeproj"; sourceTree = "<group>"; };
+		3F58D699A37B432BA1C0F092 /* libRNImagePicker.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libRNImagePicker.a; sourceTree = "<group>"; };
+		4217B130214ADB740034808C /* apolloschurchapp.entitlements */ = {isa = PBXFileReference; lastKnownFileType = text.plist.entitlements; name = apolloschurchapp.entitlements; path = apolloschurchapp/apolloschurchapp.entitlements; sourceTree = "<group>"; };
+		4217B142214ADCD50034808C /* UIKit.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = UIKit.framework; path = System/Library/Frameworks/UIKit.framework; sourceTree = SDKROOT; };
+		4217B144214ADCE10034808C /* SystemConfiguration.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = SystemConfiguration.framework; path = System/Library/Frameworks/SystemConfiguration.framework; sourceTree = SDKROOT; };
+		4629759169AB4756B447B16A /* DroidSerif-Bold.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "DroidSerif-Bold.ttf"; path = "../assets/fonts/DroidSerif-Bold.ttf"; sourceTree = "<group>"; };
+		46704FC4FCEB45B6B9DD92BB /* BVLinearGradient.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = BVLinearGradient.xcodeproj; path = "../node_modules/react-native-linear-gradient/BVLinearGradient.xcodeproj"; sourceTree = "<group>"; };
+		4BD3C4E6742F4F6380640CA9 /* MusicControl.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = MusicControl.xcodeproj; path = "../node_modules/react-native-music-control/ios/MusicControl.xcodeproj"; sourceTree = "<group>"; };
+		59AF37DEFAA847DBAB3A0526 /* RNScreens.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = RNScreens.xcodeproj; path = "../node_modules/react-native-screens/ios/RNScreens.xcodeproj"; sourceTree = "<group>"; };
 		5E91572D1DD0AC6500FF2AA8 /* RCTAnimation.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = RCTAnimation.xcodeproj; path = "../node_modules/react-native/Libraries/NativeAnimation/RCTAnimation.xcodeproj"; sourceTree = "<group>"; };
-		605AEFB6B1BB4611BDCFE95C /* libRNImagePicker.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libRNImagePicker.a; sourceTree = "<group>"; };
-		629FCAAD128E41B4BAE2BCF4 /* RNImagePicker.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = RNImagePicker.xcodeproj; path = "../node_modules/react-native-image-picker/ios/RNImagePicker.xcodeproj"; sourceTree = "<group>"; };
-		63998175DB3B4506ACF27B92 /* ReactNativeConfig.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = ReactNativeConfig.xcodeproj; path = "../node_modules/react-native-config/ios/ReactNativeConfig.xcodeproj"; sourceTree = "<group>"; };
-		63F6EE53A9B44B4388B5F1C2 /* Inter-UI-Italic.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-Italic.otf"; path = "../assets/fonts/Inter-UI-Italic.otf"; sourceTree = "<group>"; };
-		67356E00D116467DA58DF3CC /* libRNSVG-tvOS.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = "libRNSVG-tvOS.a"; sourceTree = "<group>"; };
-		74625A1E54234FB7BE12070D /* libMusicControl-tvOS.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = "libMusicControl-tvOS.a"; sourceTree = "<group>"; };
+		60E52391C9744A46B3925A78 /* libBVLinearGradient.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libBVLinearGradient.a; sourceTree = "<group>"; };
+		643D51DCF8F14993B9AA6990 /* libMusicControl.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libMusicControl.a; sourceTree = "<group>"; };
+		67E66409EF8A4BC7A1B9E054 /* libMusicControl-tvOS.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = "libMusicControl-tvOS.a"; sourceTree = "<group>"; };
+		6B6E5A404A4B4A34B18D7D34 /* SafariViewManager.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = SafariViewManager.xcodeproj; path = "../node_modules/react-native-safari-view/SafariViewManager.xcodeproj"; sourceTree = "<group>"; };
+		6BAAC994942548609D0EEECA /* ReactNativeCustomTabs.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = ReactNativeCustomTabs.xcodeproj; path = "../node_modules/react-native-custom-tabs/ios/ReactNativeCustomTabs.xcodeproj"; sourceTree = "<group>"; };
+		71E6499CCC9D4DB2ADD365D8 /* libDBCustomTabs.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libDBCustomTabs.a; sourceTree = "<group>"; };
+		76E6AD5294554A5FA53DB415 /* DroidSerif-Regular.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "DroidSerif-Regular.ttf"; path = "../assets/fonts/DroidSerif-Regular.ttf"; sourceTree = "<group>"; };
 		78C398B01ACF4ADC00677621 /* RCTLinking.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = RCTLinking.xcodeproj; path = "../node_modules/react-native/Libraries/LinkingIOS/RCTLinking.xcodeproj"; sourceTree = "<group>"; };
-		7A505BEDA0674A7F9DD875ED /* libRNDeviceInfo-tvOS.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = "libRNDeviceInfo-tvOS.a"; sourceTree = "<group>"; };
+		828255630B3246AEA19CF24D /* libRCTOneSignal.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libRCTOneSignal.a; sourceTree = "<group>"; };
 		832341B01AAA6A8300B99B32 /* RCTText.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = RCTText.xcodeproj; path = "../node_modules/react-native/Libraries/Text/RCTText.xcodeproj"; sourceTree = "<group>"; };
-		97222E2EB5E54C7FA6104218 /* libReactNativeConfig-tvOS.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = "libReactNativeConfig-tvOS.a"; sourceTree = "<group>"; };
-		9862436C289A498D8B2E6201 /* libAirMaps.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libAirMaps.a; sourceTree = "<group>"; };
-		9F0EC3F23A3F4FFBBBC6583A /* libBVLinearGradient.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libBVLinearGradient.a; sourceTree = "<group>"; };
-		A44246D0E44E48C4B8335DBD /* libRNScreens.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libRNScreens.a; sourceTree = "<group>"; };
-		A460FD7884FD4574A818005A /* Inter-UI-MediumItalic.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-MediumItalic.otf"; path = "../assets/fonts/Inter-UI-MediumItalic.otf"; sourceTree = "<group>"; };
-		A613256118404CB691DE2C8E /* Inter-UI-Regular.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-Regular.otf"; path = "../assets/fonts/Inter-UI-Regular.otf"; sourceTree = "<group>"; };
-		A93F9D112A034626A9421759 /* DroidSerif-BoldItalic.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "DroidSerif-BoldItalic.ttf"; path = "../assets/fonts/DroidSerif-BoldItalic.ttf"; sourceTree = "<group>"; };
+		84716CBFF56347BA880A16C6 /* libRNSVG-tvOS.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = "libRNSVG-tvOS.a"; sourceTree = "<group>"; };
+		84B340CC6C3940A782834F00 /* RCTOneSignal.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = RCTOneSignal.xcodeproj; path = "../node_modules/react-native-onesignal/ios/RCTOneSignal.xcodeproj"; sourceTree = "<group>"; };
+		8CA3C04F98954FB2895CD36D /* Inter-UI-Italic.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-Italic.otf"; path = "../assets/fonts/Inter-UI-Italic.otf"; sourceTree = "<group>"; };
+		8E13C8F9AE60487C9ED95C21 /* Inter-UI-Black.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-Black.otf"; path = "../assets/fonts/Inter-UI-Black.otf"; sourceTree = "<group>"; };
+		9FD7D997F4F14C439AC699B3 /* Inter-UI-Medium.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-Medium.otf"; path = "../assets/fonts/Inter-UI-Medium.otf"; sourceTree = "<group>"; };
+		A574C961754742F688E43151 /* libRNDeviceInfo-tvOS.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = "libRNDeviceInfo-tvOS.a"; sourceTree = "<group>"; };
+		A64D00F181AE4927A4632B6E /* SplashScreen.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = SplashScreen.xcodeproj; path = "../node_modules/react-native-splash-screen/ios/SplashScreen.xcodeproj"; sourceTree = "<group>"; };
 		ADBDB91F1DFEBF0600ED6528 /* RCTBlob.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = RCTBlob.xcodeproj; path = "../node_modules/react-native/Libraries/Blob/RCTBlob.xcodeproj"; sourceTree = "<group>"; };
-		ADC3D2DB245545ADB1CAB3FE /* DroidSerif-Italic.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "DroidSerif-Italic.ttf"; path = "../assets/fonts/DroidSerif-Italic.ttf"; sourceTree = "<group>"; };
-		AE039A0F55BB4B989835F759 /* libRNCWebView.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libRNCWebView.a; sourceTree = "<group>"; };
-		BD872E89C275480496010898 /* MusicControl.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = MusicControl.xcodeproj; path = "../node_modules/react-native-music-control/ios/MusicControl.xcodeproj"; sourceTree = "<group>"; };
-		C7FE26CDA2DC4CDBAB580A2F /* libRCTVideo.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libRCTVideo.a; sourceTree = "<group>"; };
-		CF3175A44C4B4612AD79C04E /* libReactNativeConfig.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libReactNativeConfig.a; sourceTree = "<group>"; };
-		D3BA7667091546469A730845 /* RNPassKit.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = RNPassKit.xcodeproj; path = "../node_modules/react-native-passkit-wallet/ios/RNPassKit.xcodeproj"; sourceTree = "<group>"; };
-		D5157D807E164356ADE87867 /* Inter-UI-Bold.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-Bold.otf"; path = "../assets/fonts/Inter-UI-Bold.otf"; sourceTree = "<group>"; };
-		DC74A378C1CC40E4B6192D7F /* Inter-UI-Medium.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-Medium.otf"; path = "../assets/fonts/Inter-UI-Medium.otf"; sourceTree = "<group>"; };
-		E3B8A0AC5A6B4FABB3BDF6CB /* DroidSerif-Bold.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "DroidSerif-Bold.ttf"; path = "../assets/fonts/DroidSerif-Bold.ttf"; sourceTree = "<group>"; };
-		EC21254B449443F99016EBFD /* Inter-UI-Black.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-Black.otf"; path = "../assets/fonts/Inter-UI-Black.otf"; sourceTree = "<group>"; };
-		ED297162215061F000B7C4FE /* JavaScriptCore.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = JavaScriptCore.framework; path = System/Library/Frameworks/JavaScriptCore.framework; sourceTree = SDKROOT; };
-		ED2971642150620600B7C4FE /* JavaScriptCore.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = JavaScriptCore.framework; path = Platforms/AppleTVOS.platform/Developer/SDKs/AppleTVOS12.0.sdk/System/Library/Frameworks/JavaScriptCore.framework; sourceTree = DEVELOPER_DIR; };
-		F4FDE4F3C6704DA2A3E04D18 /* SafariViewManager.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = SafariViewManager.xcodeproj; path = "../node_modules/react-native-safari-view/SafariViewManager.xcodeproj"; sourceTree = "<group>"; };
-		F617FE53F3334D93B2EEAA64 /* RCTVideo.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = RCTVideo.xcodeproj; path = "../node_modules/react-native-video/ios/RCTVideo.xcodeproj"; sourceTree = "<group>"; };
+		B16900D1DAC94F96B742B4EA /* libRNScreens.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libRNScreens.a; sourceTree = "<group>"; };
+		BF5A2B416EB74A44923FED7B /* libSafariViewManager.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libSafariViewManager.a; sourceTree = "<group>"; };
+		CFAF46FBA8B44C7B8DCA7707 /* libRNSVG.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libRNSVG.a; sourceTree = "<group>"; };
+		D979B537509247C099CE3F24 /* DroidSerif-BoldItalic.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "DroidSerif-BoldItalic.ttf"; path = "../assets/fonts/DroidSerif-BoldItalic.ttf"; sourceTree = "<group>"; };
+		F08D1EBF0C2A4E6798AA8F36 /* libSplashScreen.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libSplashScreen.a; sourceTree = "<group>"; };
+		F79112193F3548D284406ABF /* Inter-UI-MediumItalic.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-MediumItalic.otf"; path = "../assets/fonts/Inter-UI-MediumItalic.otf"; sourceTree = "<group>"; };
+		F9CFD638A5414DFF961A8D11 /* DroidSerif-Italic.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "DroidSerif-Italic.ttf"; path = "../assets/fonts/DroidSerif-Italic.ttf"; sourceTree = "<group>"; };
+		FB25CB02F40D4CC39DDA3C74 /* Inter-UI-Bold.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-Bold.otf"; path = "../assets/fonts/Inter-UI-Bold.otf"; sourceTree = "<group>"; };
+		FC8FFB7C37BB4499AEB6FA37 /* libRCTVideo.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libRCTVideo.a; sourceTree = "<group>"; };
 /* End PBXFileReference section */
 
 /* Begin PBXFrameworksBuildPhase section */
@@ -595,10 +556,10 @@
 			isa = PBXFrameworksBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
-				ED297163215061F000B7C4FE /* JavaScriptCore.framework in Frameworks */,
 				ADBDB9381DFEBF1600ED6528 /* libRCTBlob.a in Frameworks */,
-				11D1A2F320CAFA9E000508D9 /* libRCTAnimation.a in Frameworks */,
+				5E9157361DD0AC6A00FF2AA8 /* libRCTAnimation.a in Frameworks */,
 				146834051AC3E58100842450 /* libReact.a in Frameworks */,
+				5E9157361DD0AC6A00FF2AA8 /* libRCTAnimation.a in Frameworks */,
 				00C302E51ABCBA2D00DB3ED1 /* libRCTActionSheet.a in Frameworks */,
 				00C302E71ABCBA2D00DB3ED1 /* libRCTGeolocation.a in Frameworks */,
 				00C302E81ABCBA2D00DB3ED1 /* libRCTImage.a in Frameworks */,
@@ -608,22 +569,17 @@
 				832341BD1AAA6AB300B99B32 /* libRCTText.a in Frameworks */,
 				00C302EA1ABCBA2D00DB3ED1 /* libRCTVibration.a in Frameworks */,
 				139FDEF61B0652A700C62182 /* libRCTWebSocket.a in Frameworks */,
-				4994C0DA2471456ABE1D0174 /* libRNAirplay.a in Frameworks */,
-				A975E0B94A5D44AEB410E546 /* libReactNativeConfig.a in Frameworks */,
-				CFE4716D4F6D4ABF9ED485AC /* libRNDeviceInfo.a in Frameworks */,
-				62BCE95D7F6B4F37B3CB4265 /* libRNImagePicker.a in Frameworks */,
-				1E6618B697C649BB9FCD362E /* libBVLinearGradient.a in Frameworks */,
-				B0D490A62BC143209FD3BFE8 /* libMusicControl.a in Frameworks */,
-				4C19EE32F0B441CD93BB0172 /* libRCTOneSignal.a in Frameworks */,
-				5CAC55FAB9964618918A0056 /* libSafariViewManager.a in Frameworks */,
-				62236B4E7E814A95BC3A3B19 /* libRNScreens.a in Frameworks */,
-				CE33B866C2DE49DEBE1AF23F /* libSplashScreen.a in Frameworks */,
-				B6899815EB024B7987617799 /* libRNSVG.a in Frameworks */,
-				D2F560374F3341308A1579E7 /* libRCTVideo.a in Frameworks */,
-				834122CBBA8E476A8652994F /* libRNCWebView.a in Frameworks */,
-				80E20D1B9CC74EB4A9A4CE7B /* libRNFetchBlob.a in Frameworks */,
-				E28D37FEDA0245DBAC6552D3 /* libAirMaps.a in Frameworks */,
-				82A2FF1E6E114D3D962D533D /* libRNPassKit.a in Frameworks */,
+				3CAA28FFFCCF46518672AC8F /* libDBCustomTabs.a in Frameworks */,
+				9388C44B949C4DBAAA7256D5 /* libBVLinearGradient.a in Frameworks */,
+				4B29B8AACC2A4FB7BA6A8EEB /* libSafariViewManager.a in Frameworks */,
+				F3F4A3D13570438F9562746F /* libSplashScreen.a in Frameworks */,
+				89331B8BDAF24EF5BE08A485 /* libRNSVG.a in Frameworks */,
+				86D0B47B5BF143E797822EF1 /* libRCTVideo.a in Frameworks */,
+				6C6BE3C2189E4FBA9FB66BE5 /* libRCTOneSignal.a in Frameworks */,
+				B5DE58C6CF1E4E7ABDD1B48D /* libRNImagePicker.a in Frameworks */,
+				1C1FD8B313AB4A6583A0D31B /* libRNDeviceInfo.a in Frameworks */,
+				1680179655164C96985B5731 /* libMusicControl.a in Frameworks */,
+				5C862E57737C4032A378868D /* libRNScreens.a in Frameworks */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
@@ -631,7 +587,6 @@
 			isa = PBXFrameworksBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
-				ED2971652150620600B7C4FE /* JavaScriptCore.framework in Frameworks */,
 				2D16E6881FA4F8E400B85C8A /* libReact.a in Frameworks */,
 				2D02E4C21E0B4AEC006451C7 /* libRCTAnimation.a in Frameworks */,
 				2D02E4C31E0B4AEC006451C7 /* libRCTImage-tvOS.a in Frameworks */,
@@ -640,10 +595,9 @@
 				2D02E4C61E0B4AEC006451C7 /* libRCTSettings-tvOS.a in Frameworks */,
 				2D02E4C71E0B4AEC006451C7 /* libRCTText-tvOS.a in Frameworks */,
 				2D02E4C81E0B4AEC006451C7 /* libRCTWebSocket-tvOS.a in Frameworks */,
-				820E9220ECAC4A83A15D589F /* libReactNativeConfig-tvOS.a in Frameworks */,
-				0CB759F558AA42908EEA1EAB /* libRNDeviceInfo-tvOS.a in Frameworks */,
-				CB1584B0772D4A67A81FC83F /* libMusicControl-tvOS.a in Frameworks */,
-				6FFC53D62D7D482A9A92B721 /* libRNSVG-tvOS.a in Frameworks */,
+				DEF13113111A40DF8F4FEB13 /* libRNSVG-tvOS.a in Frameworks */,
+				AC4174D90AD644A28D0CA9D9 /* libRNDeviceInfo-tvOS.a in Frameworks */,
+				AB7B2136E56C4B40B64F9C87 /* libMusicControl-tvOS.a in Frameworks */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
@@ -740,6 +694,7 @@
 		13B07FAE1A68108700A75B9A /* apolloschurchapp */ = {
 			isa = PBXGroup;
 			children = (
+				4217B130214ADB740034808C /* apolloschurchapp.entitlements */,
 				008F07F21AC5B25A0029DE68 /* main.jsbundle */,
 				13B07FAF1A68108700A75B9A /* AppDelegate.h */,
 				13B07FB01A68108700A75B9A /* AppDelegate.m */,
@@ -760,16 +715,16 @@
 				3DAD3EA71DF850E9000B6D8A /* libyoga.a */,
 				3DAD3EA91DF850E9000B6D8A /* libcxxreact.a */,
 				3DAD3EAB1DF850E9000B6D8A /* libcxxreact.a */,
+				3DAD3EAD1DF850E9000B6D8A /* libjschelpers.a */,
+				3DAD3EAF1DF850E9000B6D8A /* libjschelpers.a */,
 				2DF0FFDF2056DD460020B375 /* libjsinspector.a */,
 				2DF0FFE12056DD460020B375 /* libjsinspector-tvOS.a */,
 				2DF0FFE32056DD460020B375 /* libthird-party.a */,
 				2DF0FFE52056DD460020B375 /* libthird-party.a */,
 				2DF0FFE72056DD460020B375 /* libdouble-conversion.a */,
 				2DF0FFE92056DD460020B375 /* libdouble-conversion.a */,
-				BF08F43022429D0700FFB1DC /* libjsi.a */,
-				BF08F43222429D0700FFB1DC /* libjsiexecutor.a */,
-				BF08F43422429D0700FFB1DC /* libjsi-tvOS.a */,
-				BF08F43622429D0700FFB1DC /* libjsiexecutor-tvOS.a */,
+				2DF0FFEB2056DD460020B375 /* libprivatedata.a */,
+				2DF0FFED2056DD460020B375 /* libprivatedata-tvOS.a */,
 			);
 			name = Products;
 			sourceTree = "<group>";
@@ -777,192 +732,160 @@
 		2D16E6871FA4F8E400B85C8A /* Frameworks */ = {
 			isa = PBXGroup;
 			children = (
-				ED297162215061F000B7C4FE /* JavaScriptCore.framework */,
-				ED2971642150620600B7C4FE /* JavaScriptCore.framework */,
+				4217B144214ADCE10034808C /* SystemConfiguration.framework */,
+				4217B142214ADCD50034808C /* UIKit.framework */,
 				2D16E6891FA4F8E400B85C8A /* libReact.a */,
 			);
 			name = Frameworks;
 			sourceTree = "<group>";
 		};
-		58D6A3E05A234CD89DC0BCE1 /* Resources */ = {
-			isa = PBXGroup;
-			children = (
-				E3B8A0AC5A6B4FABB3BDF6CB /* DroidSerif-Bold.ttf */,
-				A93F9D112A034626A9421759 /* DroidSerif-BoldItalic.ttf */,
-				ADC3D2DB245545ADB1CAB3FE /* DroidSerif-Italic.ttf */,
-				4E007B33EDD74B82AEF02C24 /* DroidSerif-Regular.ttf */,
-				EC21254B449443F99016EBFD /* Inter-UI-Black.otf */,
-				5A5A2BC2998547F4816B82E4 /* Inter-UI-BlackItalic.otf */,
-				D5157D807E164356ADE87867 /* Inter-UI-Bold.otf */,
-				2F5410F239E9477B9C2E86BD /* Inter-UI-BoldItalic.otf */,
-				63F6EE53A9B44B4388B5F1C2 /* Inter-UI-Italic.otf */,
-				DC74A378C1CC40E4B6192D7F /* Inter-UI-Medium.otf */,
-				A460FD7884FD4574A818005A /* Inter-UI-MediumItalic.otf */,
-				A613256118404CB691DE2C8E /* Inter-UI-Regular.otf */,
-			);
-			name = Resources;
-			sourceTree = "<group>";
-		};
-		5E91572E1DD0AC6500FF2AA8 /* Products */ = {
-			isa = PBXGroup;
-			children = (
-				5E9157331DD0AC6500FF2AA8 /* libRCTAnimation.a */,
-				5E9157351DD0AC6500FF2AA8 /* libRCTAnimation.a */,
-			);
-			name = Products;
-			sourceTree = "<group>";
-		};
-		78C398B11ACF4ADC00677621 /* Products */ = {
+		427787E92149B9690045AD7F /* Products */ = {
 			isa = PBXGroup;
 			children = (
-				78C398B91ACF4ADC00677621 /* libRCTLinking.a */,
-				3DAD3E881DF850E9000B6D8A /* libRCTLinking-tvOS.a */,
+				427787ED2149B96A0045AD7F /* libRCTOneSignal.a */,
 			);
 			name = Products;
 			sourceTree = "<group>";
 		};
-		79CEBF9D223011FC00D8F685 /* Recovered References */ = {
+		42B4B698219DD7CA00162F25 /* Products */ = {
 			isa = PBXGroup;
 			children = (
-				0BE434FF7E9549F392208DEF /* libRNAirplay.a */,
-				CF3175A44C4B4612AD79C04E /* libReactNativeConfig.a */,
-				9DA3750D49B0422F9A4B45BE /* libDBCustomTabs.a */,
-				0F155E84A5784CBE8D95A974 /* libRNDeviceInfo.a */,
-				605AEFB6B1BB4611BDCFE95C /* libRNImagePicker.a */,
-				9F0EC3F23A3F4FFBBBC6583A /* libBVLinearGradient.a */,
-				393EA40CFC2843BF9BB667B3 /* libMusicControl.a */,
-				0D480D95FC7F4569B8B934E3 /* libRCTOneSignal.a */,
-				349D96BF833B4B1C88D02412 /* libSafariViewManager.a */,
-				A44246D0E44E48C4B8335DBD /* libRNScreens.a */,
-				1398ECED9AE14FD19B92232D /* libSplashScreen.a */,
-				430F3786C56541B198E03A02 /* libRNSVG.a */,
-				C7FE26CDA2DC4CDBAB580A2F /* libRCTVideo.a */,
-				AE039A0F55BB4B989835F759 /* libRNCWebView.a */,
-				0174E356BAEC413288BF654B /* libRNFetchBlob.a */,
-				97222E2EB5E54C7FA6104218 /* libReactNativeConfig-tvOS.a */,
-				7A505BEDA0674A7F9DD875ED /* libRNDeviceInfo-tvOS.a */,
-				74625A1E54234FB7BE12070D /* libMusicControl-tvOS.a */,
-				67356E00D116467DA58DF3CC /* libRNSVG-tvOS.a */,
-				9862436C289A498D8B2E6201 /* libAirMaps.a */,
-				3AB4C6D7F52C428FA62777F1 /* libRNPassKit.a */,
-			);
-			name = "Recovered References";
-			sourceTree = "<group>";
-		};
-		79CEBFC5223011FD00D8F685 /* Products */ = {
-			isa = PBXGroup;
-			children = (
-				79CEC005223011FE00D8F685 /* libSplashScreen.a */,
+				42B4B6CC219DD7CB00162F25 /* libRNScreens.a */,
 			);
 			name = Products;
 			sourceTree = "<group>";
 		};
-		79CEBFC7223011FD00D8F685 /* Products */ = {
+		4446111C6E474E038489E599 /* Resources */ = {
 			isa = PBXGroup;
 			children = (
-				79CEBFF6223011FE00D8F685 /* libRNCWebView.a */,
+				4629759169AB4756B447B16A /* DroidSerif-Bold.ttf */,
+				D979B537509247C099CE3F24 /* DroidSerif-BoldItalic.ttf */,
+				F9CFD638A5414DFF961A8D11 /* DroidSerif-Italic.ttf */,
+				76E6AD5294554A5FA53DB415 /* DroidSerif-Regular.ttf */,
+				8E13C8F9AE60487C9ED95C21 /* Inter-UI-Black.otf */,
+				22246A6BC58E4CF09A22A4DF /* Inter-UI-BlackItalic.otf */,
+				FB25CB02F40D4CC39DDA3C74 /* Inter-UI-Bold.otf */,
+				32A467E2C3364ABDBB7BD0D1 /* Inter-UI-BoldItalic.otf */,
+				8CA3C04F98954FB2895CD36D /* Inter-UI-Italic.otf */,
+				9FD7D997F4F14C439AC699B3 /* Inter-UI-Medium.otf */,
+				F79112193F3548D284406ABF /* Inter-UI-MediumItalic.otf */,
+				10F42B11F27E467A8C71C280 /* Inter-UI-Regular.otf */,
 			);
-			name = Products;
+			name = Resources;
 			sourceTree = "<group>";
 		};
-		79CEBFC9223011FD00D8F685 /* Products */ = {
+		5E91572E1DD0AC6500FF2AA8 /* Products */ = {
 			isa = PBXGroup;
 			children = (
-				79CEBFFA223011FE00D8F685 /* libRNDeviceInfo.a */,
-				79CEBFFC223011FE00D8F685 /* libRNDeviceInfo-tvOS.a */,
+				5E9157331DD0AC6500FF2AA8 /* libRCTAnimation.a */,
+				5E9157351DD0AC6500FF2AA8 /* libRCTAnimation.a */,
 			);
 			name = Products;
 			sourceTree = "<group>";
 		};
-		79CEBFCB223011FD00D8F685 /* Products */ = {
+		78C398B11ACF4ADC00677621 /* Products */ = {
 			isa = PBXGroup;
 			children = (
-				79CEBFE2223011FE00D8F685 /* libMusicControl.a */,
-				79CEBFE4223011FE00D8F685 /* libMusicControl-tvOS.a */,
+				78C398B91ACF4ADC00677621 /* libRCTLinking.a */,
+				3DAD3E881DF850E9000B6D8A /* libRCTLinking-tvOS.a */,
 			);
 			name = Products;
 			sourceTree = "<group>";
 		};
-		79CEBFCD223011FE00D8F685 /* Products */ = {
+		7914344221260177006F13B7 /* Recovered References */ = {
 			isa = PBXGroup;
 			children = (
-				79CEBFF3223011FE00D8F685 /* libRNAirplay.a */,
+				71E6499CCC9D4DB2ADD365D8 /* libDBCustomTabs.a */,
+				60E52391C9744A46B3925A78 /* libBVLinearGradient.a */,
+				BF5A2B416EB74A44923FED7B /* libSafariViewManager.a */,
+				F08D1EBF0C2A4E6798AA8F36 /* libSplashScreen.a */,
+				CFAF46FBA8B44C7B8DCA7707 /* libRNSVG.a */,
+				FC8FFB7C37BB4499AEB6FA37 /* libRCTVideo.a */,
+				84716CBFF56347BA880A16C6 /* libRNSVG-tvOS.a */,
+				828255630B3246AEA19CF24D /* libRCTOneSignal.a */,
+				3F58D699A37B432BA1C0F092 /* libRNImagePicker.a */,
+				14D838A2FAE743C7B1DA5E31 /* libRNDeviceInfo.a */,
+				A574C961754742F688E43151 /* libRNDeviceInfo-tvOS.a */,
+				643D51DCF8F14993B9AA6990 /* libMusicControl.a */,
+				67E66409EF8A4BC7A1B9E054 /* libMusicControl-tvOS.a */,
+				B16900D1DAC94F96B742B4EA /* libRNScreens.a */,
 			);
-			name = Products;
+			name = "Recovered References";
 			sourceTree = "<group>";
 		};
-		79CEBFCF223011FE00D8F685 /* Products */ = {
+		791434682126017A006F13B7 /* Products */ = {
 			isa = PBXGroup;
 			children = (
-				79CEBFEB223011FE00D8F685 /* libReactNativeConfig.a */,
-				79CEBFED223011FE00D8F685 /* libReactNativeConfig-tvOS.a */,
+				7914348B2126017B006F13B7 /* libSafariViewManager.a */,
 			);
 			name = Products;
 			sourceTree = "<group>";
 		};
-		79CEBFD3223011FE00D8F685 /* Products */ = {
+		7914346A2126017A006F13B7 /* Products */ = {
 			isa = PBXGroup;
 			children = (
-				79CEBFFF223011FE00D8F685 /* libRNImagePicker.a */,
+				791434822126017B006F13B7 /* libDBCustomTabs.a */,
 			);
 			name = Products;
 			sourceTree = "<group>";
 		};
-		79CEBFD5223011FE00D8F685 /* Products */ = {
+		7914346C2126017A006F13B7 /* Products */ = {
 			isa = PBXGroup;
 			children = (
-				79CEBFDC223011FE00D8F685 /* libBVLinearGradient.a */,
-				79CEBFDE223011FE00D8F685 /* libBVLinearGradient.a */,
+				7914348E2126017B006F13B7 /* libSplashScreen.a */,
 			);
 			name = Products;
 			sourceTree = "<group>";
 		};
-		79CEBFD7223011FE00D8F685 /* Products */ = {
+		7914346E2126017A006F13B7 /* Products */ = {
 			isa = PBXGroup;
 			children = (
-				79CEBFE7223011FE00D8F685 /* libRCTOneSignal.a */,
+				791434772126017B006F13B7 /* libBVLinearGradient.a */,
+				791434792126017B006F13B7 /* libBVLinearGradient.a */,
 			);
 			name = Products;
 			sourceTree = "<group>";
 		};
-		79CEC006223011FE00D8F685 /* Products */ = {
+		791434702126017A006F13B7 /* Products */ = {
 			isa = PBXGroup;
 			children = (
-				79CEC00A223011FE00D8F685 /* libSafariViewManager.a */,
+				791434862126017B006F13B7 /* libRNSVG.a */,
+				791434882126017B006F13B7 /* libRNSVG-tvOS.a */,
 			);
 			name = Products;
 			sourceTree = "<group>";
 		};
-		79CEC00B223011FE00D8F685 /* Products */ = {
+		791434722126017A006F13B7 /* Products */ = {
 			isa = PBXGroup;
 			children = (
-				79CEC00F223011FE00D8F685 /* libRNScreens.a */,
+				7914347D2126017B006F13B7 /* libRCTVideo.a */,
+				7914347F2126017B006F13B7 /* libRCTVideo.a */,
 			);
 			name = Products;
 			sourceTree = "<group>";
 		};
-		79CEC010223011FE00D8F685 /* Products */ = {
+		794FE954219DF8880046142B /* Products */ = {
 			isa = PBXGroup;
 			children = (
-				79CEC015223011FE00D8F685 /* libRNSVG.a */,
-				79CEC017223011FE00D8F685 /* libRNSVG-tvOS.a */,
+				794FE988219DF8880046142B /* libRNScreens.a */,
 			);
 			name = Products;
 			sourceTree = "<group>";
 		};
-		79CEC018223011FE00D8F685 /* Products */ = {
+		796F252E212CAD5D00C6935E /* Products */ = {
 			isa = PBXGroup;
 			children = (
-				79CEC01D223011FE00D8F685 /* libRCTVideo.a */,
-				79CEC01F223011FE00D8F685 /* libRCTVideo.a */,
+				796F2533212CAD5D00C6935E /* libRNDeviceInfo.a */,
+				796F2535212CAD5D00C6935E /* libRNDeviceInfo-tvOS.a */,
 			);
 			name = Products;
 			sourceTree = "<group>";
 		};
-		79CEC020223011FF00D8F685 /* Products */ = {
+		797304142146322D00F6E05B /* Products */ = {
 			isa = PBXGroup;
 			children = (
-				79CEC024223011FF00D8F685 /* libRNFetchBlob.a */,
+				797304192146322D00F6E05B /* libMusicControl.a */,
+				7973041B2146322D00F6E05B /* libMusicControl-tvOS.a */,
 			);
 			name = Products;
 			sourceTree = "<group>";
@@ -982,22 +905,17 @@
 				832341B01AAA6A8300B99B32 /* RCTText.xcodeproj */,
 				00C302DF1ABCB9EE00DB3ED1 /* RCTVibration.xcodeproj */,
 				139FDEE61B06529A00C62182 /* RCTWebSocket.xcodeproj */,
-				3923D6EFF26D4A53B8BDF8C6 /* RNAirplay.xcodeproj */,
-				63998175DB3B4506ACF27B92 /* ReactNativeConfig.xcodeproj */,
-				39E16D6487A34F4D9B8C6EC1 /* RNDeviceInfo.xcodeproj */,
-				629FCAAD128E41B4BAE2BCF4 /* RNImagePicker.xcodeproj */,
-				43F1D28CACD04757A0FB29A6 /* BVLinearGradient.xcodeproj */,
-				BD872E89C275480496010898 /* MusicControl.xcodeproj */,
-				34667F4711264343B035ACD0 /* RCTOneSignal.xcodeproj */,
-				F4FDE4F3C6704DA2A3E04D18 /* SafariViewManager.xcodeproj */,
-				00F25A7E17B94370985B32E7 /* RNScreens.xcodeproj */,
-				0C974B3AFB5446819A990A78 /* SplashScreen.xcodeproj */,
-				2130E622CDAD43DF896EFF80 /* RNSVG.xcodeproj */,
-				F617FE53F3334D93B2EEAA64 /* RCTVideo.xcodeproj */,
-				4ED51CB73778472686A7279B /* RNCWebView.xcodeproj */,
-				10B0392307184C498573F1A2 /* RNFetchBlob.xcodeproj */,
-				1C0ED1C4FB474DC8A829950D /* AirMaps.xcodeproj */,
-				D3BA7667091546469A730845 /* RNPassKit.xcodeproj */,
+				6BAAC994942548609D0EEECA /* ReactNativeCustomTabs.xcodeproj */,
+				46704FC4FCEB45B6B9DD92BB /* BVLinearGradient.xcodeproj */,
+				6B6E5A404A4B4A34B18D7D34 /* SafariViewManager.xcodeproj */,
+				A64D00F181AE4927A4632B6E /* SplashScreen.xcodeproj */,
+				01441BF099BE44EE8BA8E390 /* RNSVG.xcodeproj */,
+				2F8741F0746D4C8A89970C4D /* RCTVideo.xcodeproj */,
+				84B340CC6C3940A782834F00 /* RCTOneSignal.xcodeproj */,
+				3BD7DCDF7B194D7BB9BE3C6C /* RNImagePicker.xcodeproj */,
+				239ECFF08FA841B99DB1CAFA /* RNDeviceInfo.xcodeproj */,
+				4BD3C4E6742F4F6380640CA9 /* MusicControl.xcodeproj */,
+				59AF37DEFAA847DBAB3A0526 /* RNScreens.xcodeproj */,
 			);
 			name = Libraries;
 			sourceTree = "<group>";
@@ -1019,8 +937,8 @@
 				00E356EF1AD99517003FC87E /* apolloschurchappTests */,
 				83CBBA001A601CBA00E9B192 /* Products */,
 				2D16E6871FA4F8E400B85C8A /* Frameworks */,
-				58D6A3E05A234CD89DC0BCE1 /* Resources */,
-				79CEBF9D223011FC00D8F685 /* Recovered References */,
+				4446111C6E474E038489E599 /* Resources */,
+				7914344221260177006F13B7 /* Recovered References */,
 			);
 			indentWidth = 2;
 			sourceTree = "<group>";
@@ -1047,18 +965,10 @@
 			name = Products;
 			sourceTree = "<group>";
 		};
-		BF08F44622429D0700FFB1DC /* Products */ = {
+		BF99316D2138673B0077FD20 /* Products */ = {
 			isa = PBXGroup;
 			children = (
-				BF08F44A22429D0700FFB1DC /* libAirMaps.a */,
-			);
-			name = Products;
-			sourceTree = "<group>";
-		};
-		BF08F5152242B97900FFB1DC /* Products */ = {
-			isa = PBXGroup;
-			children = (
-				BF08F5192242B97A00FFB1DC /* libRNPassKit.a */,
+				BF9931712138673B0077FD20 /* libRNImagePicker.a */,
 			);
 			name = Products;
 			sourceTree = "<group>";
@@ -1092,6 +1002,7 @@
 				13B07F8C1A680F5B00A75B9A /* Frameworks */,
 				13B07F8E1A680F5B00A75B9A /* Resources */,
 				00DD1BFF1BD5951E006B06BC /* Bundle React Native code and images */,
+				4217B141214ADBC00034808C /* Embed App Extensions */,
 			);
 			buildRules = (
 			);
@@ -1144,7 +1055,7 @@
 		83CBB9F71A601CBA00E9B192 /* Project object */ = {
 			isa = PBXProject;
 			attributes = {
-				LastUpgradeCheck = 940;
+				LastUpgradeCheck = 610;
 				ORGANIZATIONNAME = Facebook;
 				TargetAttributes = {
 					00E356ED1AD99517003FC87E = {
@@ -1153,7 +1064,11 @@
 					};
 					13B07F861A680F5B00A75B9A = {
 						DevelopmentTeam = 7TM8C6252Z;
-						ProvisioningStyle = Automatic;
+						SystemCapabilities = {
+							com.apple.Push = {
+								enabled = 1;
+							};
+						};
 					};
 					2D02E47A1E0B4A5D006451C7 = {
 						CreatedOnToolsVersion = 8.2.1;
@@ -1171,7 +1086,6 @@
 			developmentRegion = English;
 			hasScannedForEncodings = 0;
 			knownRegions = (
-				English,
 				en,
 				Base,
 			);
@@ -1180,16 +1094,12 @@
 			projectDirPath = "";
 			projectReferences = (
 				{
-					ProductGroup = BF08F44622429D0700FFB1DC /* Products */;
-					ProjectRef = 1C0ED1C4FB474DC8A829950D /* AirMaps.xcodeproj */;
+					ProductGroup = 7914346E2126017A006F13B7 /* Products */;
+					ProjectRef = 46704FC4FCEB45B6B9DD92BB /* BVLinearGradient.xcodeproj */;
 				},
 				{
-					ProductGroup = 79CEBFD5223011FE00D8F685 /* Products */;
-					ProjectRef = 43F1D28CACD04757A0FB29A6 /* BVLinearGradient.xcodeproj */;
-				},
-				{
-					ProductGroup = 79CEBFCB223011FD00D8F685 /* Products */;
-					ProjectRef = BD872E89C275480496010898 /* MusicControl.xcodeproj */;
+					ProductGroup = 797304142146322D00F6E05B /* Products */;
+					ProjectRef = 4BD3C4E6742F4F6380640CA9 /* MusicControl.xcodeproj */;
 				},
 				{
 					ProductGroup = 00C302A81ABCB8CE00DB3ED1 /* Products */;
@@ -1220,8 +1130,8 @@
 					ProjectRef = 00C302D31ABCB9D200DB3ED1 /* RCTNetwork.xcodeproj */;
 				},
 				{
-					ProductGroup = 79CEBFD7223011FE00D8F685 /* Products */;
-					ProjectRef = 34667F4711264343B035ACD0 /* RCTOneSignal.xcodeproj */;
+					ProductGroup = 427787E92149B9690045AD7F /* Products */;
+					ProjectRef = 84B340CC6C3940A782834F00 /* RCTOneSignal.xcodeproj */;
 				},
 				{
 					ProductGroup = 139105B71AF99BAD00B5F7CC /* Products */;
@@ -1236,8 +1146,8 @@
 					ProjectRef = 00C302DF1ABCB9EE00DB3ED1 /* RCTVibration.xcodeproj */;
 				},
 				{
-					ProductGroup = 79CEC018223011FE00D8F685 /* Products */;
-					ProjectRef = F617FE53F3334D93B2EEAA64 /* RCTVideo.xcodeproj */;
+					ProductGroup = 791434722126017A006F13B7 /* Products */;
+					ProjectRef = 2F8741F0746D4C8A89970C4D /* RCTVideo.xcodeproj */;
 				},
 				{
 					ProductGroup = 139FDEE71B06529A00C62182 /* Products */;
@@ -1248,48 +1158,32 @@
 					ProjectRef = 146833FF1AC3E56700842450 /* React.xcodeproj */;
 				},
 				{
-					ProductGroup = 79CEBFCF223011FE00D8F685 /* Products */;
-					ProjectRef = 63998175DB3B4506ACF27B92 /* ReactNativeConfig.xcodeproj */;
-				},
-				{
-					ProductGroup = 79CEBFCD223011FE00D8F685 /* Products */;
-					ProjectRef = 3923D6EFF26D4A53B8BDF8C6 /* RNAirplay.xcodeproj */;
-				},
-				{
-					ProductGroup = 79CEBFC7223011FD00D8F685 /* Products */;
-					ProjectRef = 4ED51CB73778472686A7279B /* RNCWebView.xcodeproj */;
-				},
-				{
-					ProductGroup = 79CEBFC9223011FD00D8F685 /* Products */;
-					ProjectRef = 39E16D6487A34F4D9B8C6EC1 /* RNDeviceInfo.xcodeproj */;
-				},
-				{
-					ProductGroup = 79CEC020223011FF00D8F685 /* Products */;
-					ProjectRef = 10B0392307184C498573F1A2 /* RNFetchBlob.xcodeproj */;
+					ProductGroup = 7914346A2126017A006F13B7 /* Products */;
+					ProjectRef = 6BAAC994942548609D0EEECA /* ReactNativeCustomTabs.xcodeproj */;
 				},
 				{
-					ProductGroup = 79CEBFD3223011FE00D8F685 /* Products */;
-					ProjectRef = 629FCAAD128E41B4BAE2BCF4 /* RNImagePicker.xcodeproj */;
+					ProductGroup = 796F252E212CAD5D00C6935E /* Products */;
+					ProjectRef = 239ECFF08FA841B99DB1CAFA /* RNDeviceInfo.xcodeproj */;
 				},
 				{
-					ProductGroup = BF08F5152242B97900FFB1DC /* Products */;
-					ProjectRef = D3BA7667091546469A730845 /* RNPassKit.xcodeproj */;
+					ProductGroup = BF99316D2138673B0077FD20 /* Products */;
+					ProjectRef = 3BD7DCDF7B194D7BB9BE3C6C /* RNImagePicker.xcodeproj */;
 				},
 				{
-					ProductGroup = 79CEC00B223011FE00D8F685 /* Products */;
-					ProjectRef = 00F25A7E17B94370985B32E7 /* RNScreens.xcodeproj */;
+					ProductGroup = 42B4B698219DD7CA00162F25 /* Products */;
+					ProjectRef = 59AF37DEFAA847DBAB3A0526 /* RNScreens.xcodeproj */;
 				},
 				{
-					ProductGroup = 79CEC010223011FE00D8F685 /* Products */;
-					ProjectRef = 2130E622CDAD43DF896EFF80 /* RNSVG.xcodeproj */;
+					ProductGroup = 791434702126017A006F13B7 /* Products */;
+					ProjectRef = 01441BF099BE44EE8BA8E390 /* RNSVG.xcodeproj */;
 				},
 				{
-					ProductGroup = 79CEC006223011FE00D8F685 /* Products */;
-					ProjectRef = F4FDE4F3C6704DA2A3E04D18 /* SafariViewManager.xcodeproj */;
+					ProductGroup = 791434682126017A006F13B7 /* Products */;
+					ProjectRef = 6B6E5A404A4B4A34B18D7D34 /* SafariViewManager.xcodeproj */;
 				},
 				{
-					ProductGroup = 79CEBFC5223011FD00D8F685 /* Products */;
-					ProjectRef = 0C974B3AFB5446819A990A78 /* SplashScreen.xcodeproj */;
+					ProductGroup = 7914346C2126017A006F13B7 /* Products */;
+					ProjectRef = A64D00F181AE4927A4632B6E /* SplashScreen.xcodeproj */;
 				},
 			);
 			projectRoot = "";
@@ -1422,6 +1316,20 @@
 			remoteRef = 2DF0FFE82056DD460020B375 /* PBXContainerItemProxy */;
 			sourceTree = BUILT_PRODUCTS_DIR;
 		};
+		2DF0FFEB2056DD460020B375 /* libprivatedata.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libprivatedata.a;
+			remoteRef = 2DF0FFEA2056DD460020B375 /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		2DF0FFED2056DD460020B375 /* libprivatedata-tvOS.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = "libprivatedata-tvOS.a";
+			remoteRef = 2DF0FFEC2056DD460020B375 /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
 		3DAD3E841DF850E9000B6D8A /* libRCTImage-tvOS.a */ = {
 			isa = PBXReferenceProxy;
 			fileType = archive.ar;
@@ -1499,165 +1407,151 @@
 			remoteRef = 3DAD3EAA1DF850E9000B6D8A /* PBXContainerItemProxy */;
 			sourceTree = BUILT_PRODUCTS_DIR;
 		};
-		5E9157331DD0AC6500FF2AA8 /* libRCTAnimation.a */ = {
+		3DAD3EAD1DF850E9000B6D8A /* libjschelpers.a */ = {
 			isa = PBXReferenceProxy;
 			fileType = archive.ar;
-			path = libRCTAnimation.a;
-			remoteRef = 5E9157321DD0AC6500FF2AA8 /* PBXContainerItemProxy */;
+			path = libjschelpers.a;
+			remoteRef = 3DAD3EAC1DF850E9000B6D8A /* PBXContainerItemProxy */;
 			sourceTree = BUILT_PRODUCTS_DIR;
 		};
-		5E9157351DD0AC6500FF2AA8 /* libRCTAnimation.a */ = {
+		3DAD3EAF1DF850E9000B6D8A /* libjschelpers.a */ = {
 			isa = PBXReferenceProxy;
 			fileType = archive.ar;
-			path = libRCTAnimation.a;
-			remoteRef = 5E9157341DD0AC6500FF2AA8 /* PBXContainerItemProxy */;
+			path = libjschelpers.a;
+			remoteRef = 3DAD3EAE1DF850E9000B6D8A /* PBXContainerItemProxy */;
 			sourceTree = BUILT_PRODUCTS_DIR;
 		};
-		78C398B91ACF4ADC00677621 /* libRCTLinking.a */ = {
+		427787ED2149B96A0045AD7F /* libRCTOneSignal.a */ = {
 			isa = PBXReferenceProxy;
 			fileType = archive.ar;
-			path = libRCTLinking.a;
-			remoteRef = 78C398B81ACF4ADC00677621 /* PBXContainerItemProxy */;
+			path = libRCTOneSignal.a;
+			remoteRef = 427787EC2149B96A0045AD7F /* PBXContainerItemProxy */;
 			sourceTree = BUILT_PRODUCTS_DIR;
 		};
-		79CEBFDC223011FE00D8F685 /* libBVLinearGradient.a */ = {
+		42B4B6CC219DD7CB00162F25 /* libRNScreens.a */ = {
 			isa = PBXReferenceProxy;
 			fileType = archive.ar;
-			path = libBVLinearGradient.a;
-			remoteRef = 79CEBFDB223011FE00D8F685 /* PBXContainerItemProxy */;
+			path = libRNScreens.a;
+			remoteRef = 42B4B6CB219DD7CB00162F25 /* PBXContainerItemProxy */;
 			sourceTree = BUILT_PRODUCTS_DIR;
 		};
-		79CEBFDE223011FE00D8F685 /* libBVLinearGradient.a */ = {
+		5E9157331DD0AC6500FF2AA8 /* libRCTAnimation.a */ = {
 			isa = PBXReferenceProxy;
 			fileType = archive.ar;
-			path = libBVLinearGradient.a;
-			remoteRef = 79CEBFDD223011FE00D8F685 /* PBXContainerItemProxy */;
+			path = libRCTAnimation.a;
+			remoteRef = 5E9157321DD0AC6500FF2AA8 /* PBXContainerItemProxy */;
 			sourceTree = BUILT_PRODUCTS_DIR;
 		};
-		79CEBFE2223011FE00D8F685 /* libMusicControl.a */ = {
+		5E9157351DD0AC6500FF2AA8 /* libRCTAnimation.a */ = {
 			isa = PBXReferenceProxy;
 			fileType = archive.ar;
-			path = libMusicControl.a;
-			remoteRef = 79CEBFE1223011FE00D8F685 /* PBXContainerItemProxy */;
+			path = libRCTAnimation.a;
+			remoteRef = 5E9157341DD0AC6500FF2AA8 /* PBXContainerItemProxy */;
 			sourceTree = BUILT_PRODUCTS_DIR;
 		};
-		79CEBFE4223011FE00D8F685 /* libMusicControl-tvOS.a */ = {
+		78C398B91ACF4ADC00677621 /* libRCTLinking.a */ = {
 			isa = PBXReferenceProxy;
 			fileType = archive.ar;
-			path = "libMusicControl-tvOS.a";
-			remoteRef = 79CEBFE3223011FE00D8F685 /* PBXContainerItemProxy */;
+			path = libRCTLinking.a;
+			remoteRef = 78C398B81ACF4ADC00677621 /* PBXContainerItemProxy */;
 			sourceTree = BUILT_PRODUCTS_DIR;
 		};
-		79CEBFE7223011FE00D8F685 /* libRCTOneSignal.a */ = {
+		791434772126017B006F13B7 /* libBVLinearGradient.a */ = {
 			isa = PBXReferenceProxy;
 			fileType = archive.ar;
-			path = libRCTOneSignal.a;
-			remoteRef = 79CEBFE6223011FE00D8F685 /* PBXContainerItemProxy */;
+			path = libBVLinearGradient.a;
+			remoteRef = 791434762126017B006F13B7 /* PBXContainerItemProxy */;
 			sourceTree = BUILT_PRODUCTS_DIR;
 		};
-		79CEBFEB223011FE00D8F685 /* libReactNativeConfig.a */ = {
+		791434792126017B006F13B7 /* libBVLinearGradient.a */ = {
 			isa = PBXReferenceProxy;
 			fileType = archive.ar;
-			path = libReactNativeConfig.a;
-			remoteRef = 79CEBFEA223011FE00D8F685 /* PBXContainerItemProxy */;
+			path = libBVLinearGradient.a;
+			remoteRef = 791434782126017B006F13B7 /* PBXContainerItemProxy */;
 			sourceTree = BUILT_PRODUCTS_DIR;
 		};
-		79CEBFED223011FE00D8F685 /* libReactNativeConfig-tvOS.a */ = {
+		7914347D2126017B006F13B7 /* libRCTVideo.a */ = {
 			isa = PBXReferenceProxy;
 			fileType = archive.ar;
-			path = "libReactNativeConfig-tvOS.a";
-			remoteRef = 79CEBFEC223011FE00D8F685 /* PBXContainerItemProxy */;
+			path = libRCTVideo.a;
+			remoteRef = 7914347C2126017B006F13B7 /* PBXContainerItemProxy */;
 			sourceTree = BUILT_PRODUCTS_DIR;
 		};
-		79CEBFF3223011FE00D8F685 /* libRNAirplay.a */ = {
+		7914347F2126017B006F13B7 /* libRCTVideo.a */ = {
 			isa = PBXReferenceProxy;
 			fileType = archive.ar;
-			path = libRNAirplay.a;
-			remoteRef = 79CEBFF2223011FE00D8F685 /* PBXContainerItemProxy */;
+			path = libRCTVideo.a;
+			remoteRef = 7914347E2126017B006F13B7 /* PBXContainerItemProxy */;
 			sourceTree = BUILT_PRODUCTS_DIR;
 		};
-		79CEBFF6223011FE00D8F685 /* libRNCWebView.a */ = {
+		791434822126017B006F13B7 /* libDBCustomTabs.a */ = {
 			isa = PBXReferenceProxy;
 			fileType = archive.ar;
-			path = libRNCWebView.a;
-			remoteRef = 79CEBFF5223011FE00D8F685 /* PBXContainerItemProxy */;
+			path = libDBCustomTabs.a;
+			remoteRef = 791434812126017B006F13B7 /* PBXContainerItemProxy */;
 			sourceTree = BUILT_PRODUCTS_DIR;
 		};
-		79CEBFFA223011FE00D8F685 /* libRNDeviceInfo.a */ = {
+		791434862126017B006F13B7 /* libRNSVG.a */ = {
 			isa = PBXReferenceProxy;
 			fileType = archive.ar;
-			path = libRNDeviceInfo.a;
-			remoteRef = 79CEBFF9223011FE00D8F685 /* PBXContainerItemProxy */;
+			path = libRNSVG.a;
+			remoteRef = 791434852126017B006F13B7 /* PBXContainerItemProxy */;
 			sourceTree = BUILT_PRODUCTS_DIR;
 		};
-		79CEBFFC223011FE00D8F685 /* libRNDeviceInfo-tvOS.a */ = {
+		791434882126017B006F13B7 /* libRNSVG-tvOS.a */ = {
 			isa = PBXReferenceProxy;
 			fileType = archive.ar;
-			path = "libRNDeviceInfo-tvOS.a";
-			remoteRef = 79CEBFFB223011FE00D8F685 /* PBXContainerItemProxy */;
+			path = "libRNSVG-tvOS.a";
+			remoteRef = 791434872126017B006F13B7 /* PBXContainerItemProxy */;
 			sourceTree = BUILT_PRODUCTS_DIR;
 		};
-		79CEBFFF223011FE00D8F685 /* libRNImagePicker.a */ = {
+		7914348B2126017B006F13B7 /* libSafariViewManager.a */ = {
 			isa = PBXReferenceProxy;
 			fileType = archive.ar;
-			path = libRNImagePicker.a;
-			remoteRef = 79CEBFFE223011FE00D8F685 /* PBXContainerItemProxy */;
+			path = libSafariViewManager.a;
+			remoteRef = 7914348A2126017B006F13B7 /* PBXContainerItemProxy */;
 			sourceTree = BUILT_PRODUCTS_DIR;
 		};
-		79CEC005223011FE00D8F685 /* libSplashScreen.a */ = {
+		7914348E2126017B006F13B7 /* libSplashScreen.a */ = {
 			isa = PBXReferenceProxy;
 			fileType = archive.ar;
 			path = libSplashScreen.a;
-			remoteRef = 79CEC004223011FE00D8F685 /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		79CEC00A223011FE00D8F685 /* libSafariViewManager.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libSafariViewManager.a;
-			remoteRef = 79CEC009223011FE00D8F685 /* PBXContainerItemProxy */;
+			remoteRef = 7914348D2126017B006F13B7 /* PBXContainerItemProxy */;
 			sourceTree = BUILT_PRODUCTS_DIR;
 		};
-		79CEC00F223011FE00D8F685 /* libRNScreens.a */ = {
+		794FE988219DF8880046142B /* libRNScreens.a */ = {
 			isa = PBXReferenceProxy;
 			fileType = archive.ar;
 			path = libRNScreens.a;
-			remoteRef = 79CEC00E223011FE00D8F685 /* PBXContainerItemProxy */;
+			remoteRef = 794FE987219DF8880046142B /* PBXContainerItemProxy */;
 			sourceTree = BUILT_PRODUCTS_DIR;
 		};
-		79CEC015223011FE00D8F685 /* libRNSVG.a */ = {
+		796F2533212CAD5D00C6935E /* libRNDeviceInfo.a */ = {
 			isa = PBXReferenceProxy;
 			fileType = archive.ar;
-			path = libRNSVG.a;
-			remoteRef = 79CEC014223011FE00D8F685 /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		79CEC017223011FE00D8F685 /* libRNSVG-tvOS.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = "libRNSVG-tvOS.a";
-			remoteRef = 79CEC016223011FE00D8F685 /* PBXContainerItemProxy */;
+			path = libRNDeviceInfo.a;
+			remoteRef = 796F2532212CAD5D00C6935E /* PBXContainerItemProxy */;
 			sourceTree = BUILT_PRODUCTS_DIR;
 		};
-		79CEC01D223011FE00D8F685 /* libRCTVideo.a */ = {
+		796F2535212CAD5D00C6935E /* libRNDeviceInfo-tvOS.a */ = {
 			isa = PBXReferenceProxy;
 			fileType = archive.ar;
-			path = libRCTVideo.a;
-			remoteRef = 79CEC01C223011FE00D8F685 /* PBXContainerItemProxy */;
+			path = "libRNDeviceInfo-tvOS.a";
+			remoteRef = 796F2534212CAD5D00C6935E /* PBXContainerItemProxy */;
 			sourceTree = BUILT_PRODUCTS_DIR;
 		};
-		79CEC01F223011FE00D8F685 /* libRCTVideo.a */ = {
+		797304192146322D00F6E05B /* libMusicControl.a */ = {
 			isa = PBXReferenceProxy;
 			fileType = archive.ar;
-			path = libRCTVideo.a;
-			remoteRef = 79CEC01E223011FE00D8F685 /* PBXContainerItemProxy */;
+			path = libMusicControl.a;
+			remoteRef = 797304182146322D00F6E05B /* PBXContainerItemProxy */;
 			sourceTree = BUILT_PRODUCTS_DIR;
 		};
-		79CEC024223011FF00D8F685 /* libRNFetchBlob.a */ = {
+		7973041B2146322D00F6E05B /* libMusicControl-tvOS.a */ = {
 			isa = PBXReferenceProxy;
 			fileType = archive.ar;
-			path = libRNFetchBlob.a;
-			remoteRef = 79CEC023223011FF00D8F685 /* PBXContainerItemProxy */;
+			path = "libMusicControl-tvOS.a";
+			remoteRef = 7973041A2146322D00F6E05B /* PBXContainerItemProxy */;
 			sourceTree = BUILT_PRODUCTS_DIR;
 		};
 		832341B51AAA6A8300B99B32 /* libRCTText.a */ = {
@@ -1674,46 +1568,11 @@
 			remoteRef = ADBDB9261DFEBF0700ED6528 /* PBXContainerItemProxy */;
 			sourceTree = BUILT_PRODUCTS_DIR;
 		};
-		BF08F43022429D0700FFB1DC /* libjsi.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libjsi.a;
-			remoteRef = BF08F42F22429D0700FFB1DC /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		BF08F43222429D0700FFB1DC /* libjsiexecutor.a */ = {
+		BF9931712138673B0077FD20 /* libRNImagePicker.a */ = {
 			isa = PBXReferenceProxy;
 			fileType = archive.ar;
-			path = libjsiexecutor.a;
-			remoteRef = BF08F43122429D0700FFB1DC /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		BF08F43422429D0700FFB1DC /* libjsi-tvOS.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = "libjsi-tvOS.a";
-			remoteRef = BF08F43322429D0700FFB1DC /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		BF08F43622429D0700FFB1DC /* libjsiexecutor-tvOS.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = "libjsiexecutor-tvOS.a";
-			remoteRef = BF08F43522429D0700FFB1DC /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		BF08F44A22429D0700FFB1DC /* libAirMaps.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libAirMaps.a;
-			remoteRef = BF08F44922429D0700FFB1DC /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
-		BF08F5192242B97A00FFB1DC /* libRNPassKit.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libRNPassKit.a;
-			remoteRef = BF08F5182242B97A00FFB1DC /* PBXContainerItemProxy */;
+			path = libRNImagePicker.a;
+			remoteRef = BF9931702138673B0077FD20 /* PBXContainerItemProxy */;
 			sourceTree = BUILT_PRODUCTS_DIR;
 		};
 /* End PBXReferenceProxy section */
@@ -1732,18 +1591,18 @@
 			files = (
 				13B07FBF1A68108700A75B9A /* Images.xcassets in Resources */,
 				13B07FBD1A68108700A75B9A /* LaunchScreen.xib in Resources */,
-				08CE105F17284254AD54AF84 /* DroidSerif-Bold.ttf in Resources */,
-				B02F194A3F6A4FE29AC799B4 /* DroidSerif-BoldItalic.ttf in Resources */,
-				90743C40BF544F10A810C43C /* DroidSerif-Italic.ttf in Resources */,
-				93A2B0A9328A46A4B7DD5EFA /* DroidSerif-Regular.ttf in Resources */,
-				68D1351E80AA4A2C96288FD9 /* Inter-UI-Black.otf in Resources */,
-				578FFEC1D7D54C9B871A9E5B /* Inter-UI-BlackItalic.otf in Resources */,
-				7FBC6BC3CE8D48298F9850A9 /* Inter-UI-Bold.otf in Resources */,
-				894732A70B4740678E85B593 /* Inter-UI-BoldItalic.otf in Resources */,
-				01F091B02048490A8F9EF4FE /* Inter-UI-Italic.otf in Resources */,
-				1C48DCDE11AC47C48E918489 /* Inter-UI-Medium.otf in Resources */,
-				FCB3069DB5DD4170B2CAEFC4 /* Inter-UI-MediumItalic.otf in Resources */,
-				AB3BD177B8A14193A5EEDDF8 /* Inter-UI-Regular.otf in Resources */,
+				C87CA8735EEB43C4A55CB285 /* DroidSerif-Bold.ttf in Resources */,
+				59D8DFA78CDF4642892CC142 /* DroidSerif-BoldItalic.ttf in Resources */,
+				9ACBD642B18D41C9BB1E4D9E /* DroidSerif-Italic.ttf in Resources */,
+				D5744BF3B41D4BC49F93CD68 /* DroidSerif-Regular.ttf in Resources */,
+				417027FD83CA4902AB4DB2B4 /* Inter-UI-Black.otf in Resources */,
+				6E4442FB39BE4F898DE4C454 /* Inter-UI-BlackItalic.otf in Resources */,
+				F8FAD93CCE5641A8B87611EA /* Inter-UI-Bold.otf in Resources */,
+				E374C61F2AAF41D3B615AB44 /* Inter-UI-BoldItalic.otf in Resources */,
+				5CA1D8E805684478B04ABB60 /* Inter-UI-Italic.otf in Resources */,
+				A173C226549E48B991AC5D98 /* Inter-UI-Medium.otf in Resources */,
+				0D4EDF6EBA274F9D93DDED76 /* Inter-UI-MediumItalic.otf in Resources */,
+				7D060CA312AB4E828CD60DDC /* Inter-UI-Regular.otf in Resources */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
@@ -1868,34 +1727,29 @@
 				);
 				HEADER_SEARCH_PATHS = (
 					"$(inherited)",
-					"$(SRCROOT)/../node_modules/react-native-airplay-btn/ios",
-					"$(SRCROOT)/../node_modules/react-native-config/ios/ReactNativeConfig",
-					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
-					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
+					"$(SRCROOT)/../node_modules/react-native-custom-tabs/ios/ReactNativeCustomTabs",
 					"$(SRCROOT)/../node_modules/react-native-linear-gradient/BVLinearGradient",
-					"$(SRCROOT)/../node_modules/react-native-music-control/ios",
-					"$(SRCROOT)/../node_modules/react-native-onesignal/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-safari-view",
-					"$(SRCROOT)/../node_modules/react-native-screens/ios",
 					"$(SRCROOT)/../node_modules/react-native-splash-screen/ios",
 					"$(SRCROOT)/../node_modules/react-native-svg/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-video/ios",
-					"$(SRCROOT)/../node_modules/react-native-webview/ios",
-					"$(SRCROOT)/../node_modules/rn-fetch-blob/ios/**",
-					"$(SRCROOT)/../node_modules/react-native-maps/lib/ios/**",
-					"$(SRCROOT)/../node_modules/react-native-passkit-wallet/ios/RNPassKit",
+					"$(SRCROOT)/../node_modules/react-native-onesignal/ios/**",
+					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
+					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
+					"$(SRCROOT)/../node_modules/react-native-music-control/ios",
+					"$(SRCROOT)/../node_modules/react-native-screens/ios",
 				);
 				INFOPLIST_FILE = apolloschurchappTests/Info.plist;
 				IPHONEOS_DEPLOYMENT_TARGET = 9.0;
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @loader_path/Frameworks";
 				LIBRARY_SEARCH_PATHS = (
 					"$(inherited)",
+					"\"$(SRCROOT)/$(TARGET_NAME)\"",
 				);
 				OTHER_LDFLAGS = (
 					"-ObjC",
 					"-lc++",
 				);
-				PRODUCT_BUNDLE_IDENTIFIER = "org.reactjs.native.example.$(PRODUCT_NAME:rfc1034identifier)";
 				PRODUCT_NAME = "$(TARGET_NAME)";
 				TEST_HOST = "$(BUILT_PRODUCTS_DIR)/apolloschurchapp.app/apolloschurchapp";
 			};
@@ -1908,34 +1762,29 @@
 				COPY_PHASE_STRIP = NO;
 				HEADER_SEARCH_PATHS = (
 					"$(inherited)",
-					"$(SRCROOT)/../node_modules/react-native-airplay-btn/ios",
-					"$(SRCROOT)/../node_modules/react-native-config/ios/ReactNativeConfig",
-					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
-					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
+					"$(SRCROOT)/../node_modules/react-native-custom-tabs/ios/ReactNativeCustomTabs",
 					"$(SRCROOT)/../node_modules/react-native-linear-gradient/BVLinearGradient",
-					"$(SRCROOT)/../node_modules/react-native-music-control/ios",
-					"$(SRCROOT)/../node_modules/react-native-onesignal/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-safari-view",
-					"$(SRCROOT)/../node_modules/react-native-screens/ios",
 					"$(SRCROOT)/../node_modules/react-native-splash-screen/ios",
 					"$(SRCROOT)/../node_modules/react-native-svg/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-video/ios",
-					"$(SRCROOT)/../node_modules/react-native-webview/ios",
-					"$(SRCROOT)/../node_modules/rn-fetch-blob/ios/**",
-					"$(SRCROOT)/../node_modules/react-native-maps/lib/ios/**",
-					"$(SRCROOT)/../node_modules/react-native-passkit-wallet/ios/RNPassKit",
+					"$(SRCROOT)/../node_modules/react-native-onesignal/ios/**",
+					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
+					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
+					"$(SRCROOT)/../node_modules/react-native-music-control/ios",
+					"$(SRCROOT)/../node_modules/react-native-screens/ios",
 				);
 				INFOPLIST_FILE = apolloschurchappTests/Info.plist;
 				IPHONEOS_DEPLOYMENT_TARGET = 9.0;
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @loader_path/Frameworks";
 				LIBRARY_SEARCH_PATHS = (
 					"$(inherited)",
+					"\"$(SRCROOT)/$(TARGET_NAME)\"",
 				);
 				OTHER_LDFLAGS = (
 					"-ObjC",
 					"-lc++",
 				);
-				PRODUCT_BUNDLE_IDENTIFIER = "org.reactjs.native.example.$(PRODUCT_NAME:rfc1034identifier)";
 				PRODUCT_NAME = "$(TARGET_NAME)";
 				TEST_HOST = "$(BUILT_PRODUCTS_DIR)/apolloschurchapp.app/apolloschurchapp";
 			};
@@ -1945,27 +1794,24 @@
 			isa = XCBuildConfiguration;
 			buildSettings = {
 				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
-				CURRENT_PROJECT_VERSION = 7;
+				CODE_SIGN_ENTITLEMENTS = apolloschurchapp/apolloschurchapp.entitlements;
+				CODE_SIGN_IDENTITY = "iPhone Developer";
+				CURRENT_PROJECT_VERSION = 5;
 				DEAD_CODE_STRIPPING = NO;
 				DEVELOPMENT_TEAM = 7TM8C6252Z;
 				HEADER_SEARCH_PATHS = (
 					"$(inherited)",
-					"$(SRCROOT)/../node_modules/react-native-airplay-btn/ios",
-					"$(SRCROOT)/../node_modules/react-native-config/ios/ReactNativeConfig",
-					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
-					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
+					"$(SRCROOT)/../node_modules/react-native-custom-tabs/ios/ReactNativeCustomTabs",
 					"$(SRCROOT)/../node_modules/react-native-linear-gradient/BVLinearGradient",
-					"$(SRCROOT)/../node_modules/react-native-music-control/ios",
-					"$(SRCROOT)/../node_modules/react-native-onesignal/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-safari-view",
-					"$(SRCROOT)/../node_modules/react-native-screens/ios",
 					"$(SRCROOT)/../node_modules/react-native-splash-screen/ios",
 					"$(SRCROOT)/../node_modules/react-native-svg/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-video/ios",
-					"$(SRCROOT)/../node_modules/react-native-webview/ios",
-					"$(SRCROOT)/../node_modules/rn-fetch-blob/ios/**",
-					"$(SRCROOT)/../node_modules/react-native-maps/lib/ios/**",
-					"$(SRCROOT)/../node_modules/react-native-passkit-wallet/ios/RNPassKit",
+					"$(SRCROOT)/../node_modules/react-native-onesignal/ios/**",
+					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
+					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
+					"$(SRCROOT)/../node_modules/react-native-music-control/ios",
+					"$(SRCROOT)/../node_modules/react-native-screens/ios",
 				);
 				INFOPLIST_FILE = apolloschurchapp/Info.plist;
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
@@ -1974,9 +1820,7 @@
 					"-ObjC",
 					"-lc++",
 				);
-				PRODUCT_BUNDLE_IDENTIFIER = "org.reactjs.native.example.$(PRODUCT_NAME:rfc1034identifier)";
 				PRODUCT_NAME = apolloschurchapp;
-				PROVISIONING_PROFILE_SPECIFIER = "";
 				VERSIONING_SYSTEM = "apple-generic";
 			};
 			name = Debug;
@@ -1985,25 +1829,23 @@
 			isa = XCBuildConfiguration;
 			buildSettings = {
 				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
-				CURRENT_PROJECT_VERSION = 7;
+				CODE_SIGN_ENTITLEMENTS = apolloschurchapp/apolloschurchapp.entitlements;
+				CODE_SIGN_IDENTITY = "iPhone Developer";
+				CURRENT_PROJECT_VERSION = 5;
+				DEVELOPMENT_TEAM = 7TM8C6252Z;
 				HEADER_SEARCH_PATHS = (
 					"$(inherited)",
-					"$(SRCROOT)/../node_modules/react-native-airplay-btn/ios",
-					"$(SRCROOT)/../node_modules/react-native-config/ios/ReactNativeConfig",
-					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
-					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
+					"$(SRCROOT)/../node_modules/react-native-custom-tabs/ios/ReactNativeCustomTabs",
 					"$(SRCROOT)/../node_modules/react-native-linear-gradient/BVLinearGradient",
-					"$(SRCROOT)/../node_modules/react-native-music-control/ios",
-					"$(SRCROOT)/../node_modules/react-native-onesignal/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-safari-view",
-					"$(SRCROOT)/../node_modules/react-native-screens/ios",
 					"$(SRCROOT)/../node_modules/react-native-splash-screen/ios",
 					"$(SRCROOT)/../node_modules/react-native-svg/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-video/ios",
-					"$(SRCROOT)/../node_modules/react-native-webview/ios",
-					"$(SRCROOT)/../node_modules/rn-fetch-blob/ios/**",
-					"$(SRCROOT)/../node_modules/react-native-maps/lib/ios/**",
-					"$(SRCROOT)/../node_modules/react-native-passkit-wallet/ios/RNPassKit",
+					"$(SRCROOT)/../node_modules/react-native-onesignal/ios/**",
+					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
+					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
+					"$(SRCROOT)/../node_modules/react-native-music-control/ios",
+					"$(SRCROOT)/../node_modules/react-native-screens/ios",
 				);
 				INFOPLIST_FILE = apolloschurchapp/Info.plist;
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
@@ -2012,9 +1854,7 @@
 					"-ObjC",
 					"-lc++",
 				);
-				PRODUCT_BUNDLE_IDENTIFIER = "org.reactjs.native.example.$(PRODUCT_NAME:rfc1034identifier)";
 				PRODUCT_NAME = apolloschurchapp;
-				PROVISIONING_PROFILE_SPECIFIER = "";
 				VERSIONING_SYSTEM = "apple-generic";
 			};
 			name = Release;
@@ -2033,33 +1873,29 @@
 				GCC_NO_COMMON_BLOCKS = YES;
 				HEADER_SEARCH_PATHS = (
 					"$(inherited)",
-					"$(SRCROOT)/../node_modules/react-native-airplay-btn/ios",
-					"$(SRCROOT)/../node_modules/react-native-config/ios/ReactNativeConfig",
-					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
-					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
+					"$(SRCROOT)/../node_modules/react-native-custom-tabs/ios/ReactNativeCustomTabs",
 					"$(SRCROOT)/../node_modules/react-native-linear-gradient/BVLinearGradient",
-					"$(SRCROOT)/../node_modules/react-native-music-control/ios",
-					"$(SRCROOT)/../node_modules/react-native-onesignal/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-safari-view",
-					"$(SRCROOT)/../node_modules/react-native-screens/ios",
 					"$(SRCROOT)/../node_modules/react-native-splash-screen/ios",
 					"$(SRCROOT)/../node_modules/react-native-svg/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-video/ios",
-					"$(SRCROOT)/../node_modules/react-native-webview/ios",
-					"$(SRCROOT)/../node_modules/rn-fetch-blob/ios/**",
-					"$(SRCROOT)/../node_modules/react-native-maps/lib/ios/**",
-					"$(SRCROOT)/../node_modules/react-native-passkit-wallet/ios/RNPassKit",
+					"$(SRCROOT)/../node_modules/react-native-onesignal/ios/**",
+					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
+					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
+					"$(SRCROOT)/../node_modules/react-native-music-control/ios",
+					"$(SRCROOT)/../node_modules/react-native-screens/ios",
 				);
 				INFOPLIST_FILE = "apolloschurchapp-tvOS/Info.plist";
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
 				LIBRARY_SEARCH_PATHS = (
 					"$(inherited)",
+					"\"$(SRCROOT)/$(TARGET_NAME)\"",
 				);
 				OTHER_LDFLAGS = (
 					"-ObjC",
 					"-lc++",
 				);
-				PRODUCT_BUNDLE_IDENTIFIER = "com.facebook.REACT.apolloschurchapp-tvOS";
+				PRODUCT_BUNDLE_IDENTIFIER = "org.reactjs.native.apolloschurchapp-tvOS";
 				PRODUCT_NAME = "$(TARGET_NAME)";
 				SDKROOT = appletvos;
 				TARGETED_DEVICE_FAMILY = 3;
@@ -2081,33 +1917,29 @@
 				GCC_NO_COMMON_BLOCKS = YES;
 				HEADER_SEARCH_PATHS = (
 					"$(inherited)",
-					"$(SRCROOT)/../node_modules/react-native-airplay-btn/ios",
-					"$(SRCROOT)/../node_modules/react-native-config/ios/ReactNativeConfig",
-					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
-					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
+					"$(SRCROOT)/../node_modules/react-native-custom-tabs/ios/ReactNativeCustomTabs",
 					"$(SRCROOT)/../node_modules/react-native-linear-gradient/BVLinearGradient",
-					"$(SRCROOT)/../node_modules/react-native-music-control/ios",
-					"$(SRCROOT)/../node_modules/react-native-onesignal/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-safari-view",
-					"$(SRCROOT)/../node_modules/react-native-screens/ios",
 					"$(SRCROOT)/../node_modules/react-native-splash-screen/ios",
 					"$(SRCROOT)/../node_modules/react-native-svg/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-video/ios",
-					"$(SRCROOT)/../node_modules/react-native-webview/ios",
-					"$(SRCROOT)/../node_modules/rn-fetch-blob/ios/**",
-					"$(SRCROOT)/../node_modules/react-native-maps/lib/ios/**",
-					"$(SRCROOT)/../node_modules/react-native-passkit-wallet/ios/RNPassKit",
+					"$(SRCROOT)/../node_modules/react-native-onesignal/ios/**",
+					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
+					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
+					"$(SRCROOT)/../node_modules/react-native-music-control/ios",
+					"$(SRCROOT)/../node_modules/react-native-screens/ios",
 				);
 				INFOPLIST_FILE = "apolloschurchapp-tvOS/Info.plist";
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
 				LIBRARY_SEARCH_PATHS = (
 					"$(inherited)",
+					"\"$(SRCROOT)/$(TARGET_NAME)\"",
 				);
 				OTHER_LDFLAGS = (
 					"-ObjC",
 					"-lc++",
 				);
-				PRODUCT_BUNDLE_IDENTIFIER = "com.facebook.REACT.apolloschurchapp-tvOS";
+				PRODUCT_BUNDLE_IDENTIFIER = "org.reactjs.native.apolloschurchapp-tvOS";
 				PRODUCT_NAME = "$(TARGET_NAME)";
 				SDKROOT = appletvos;
 				TARGETED_DEVICE_FAMILY = 3;
@@ -2128,33 +1960,29 @@
 				GCC_NO_COMMON_BLOCKS = YES;
 				HEADER_SEARCH_PATHS = (
 					"$(inherited)",
-					"$(SRCROOT)/../node_modules/react-native-airplay-btn/ios",
-					"$(SRCROOT)/../node_modules/react-native-config/ios/ReactNativeConfig",
-					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
-					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
+					"$(SRCROOT)/../node_modules/react-native-custom-tabs/ios/ReactNativeCustomTabs",
 					"$(SRCROOT)/../node_modules/react-native-linear-gradient/BVLinearGradient",
-					"$(SRCROOT)/../node_modules/react-native-music-control/ios",
-					"$(SRCROOT)/../node_modules/react-native-onesignal/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-safari-view",
-					"$(SRCROOT)/../node_modules/react-native-screens/ios",
 					"$(SRCROOT)/../node_modules/react-native-splash-screen/ios",
 					"$(SRCROOT)/../node_modules/react-native-svg/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-video/ios",
-					"$(SRCROOT)/../node_modules/react-native-webview/ios",
-					"$(SRCROOT)/../node_modules/rn-fetch-blob/ios/**",
-					"$(SRCROOT)/../node_modules/react-native-maps/lib/ios/**",
-					"$(SRCROOT)/../node_modules/react-native-passkit-wallet/ios/RNPassKit",
+					"$(SRCROOT)/../node_modules/react-native-onesignal/ios/**",
+					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
+					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
+					"$(SRCROOT)/../node_modules/react-native-music-control/ios",
+					"$(SRCROOT)/../node_modules/react-native-screens/ios",
 				);
 				INFOPLIST_FILE = "apolloschurchapp-tvOSTests/Info.plist";
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @loader_path/Frameworks";
 				LIBRARY_SEARCH_PATHS = (
 					"$(inherited)",
+					"\"$(SRCROOT)/$(TARGET_NAME)\"",
 				);
 				OTHER_LDFLAGS = (
 					"-ObjC",
 					"-lc++",
 				);
-				PRODUCT_BUNDLE_IDENTIFIER = "com.facebook.REACT.apolloschurchapp-tvOSTests";
+				PRODUCT_BUNDLE_IDENTIFIER = "org.reactjs.native.apolloschurchapp-tvOSTests";
 				PRODUCT_NAME = "$(TARGET_NAME)";
 				SDKROOT = appletvos;
 				TEST_HOST = "$(BUILT_PRODUCTS_DIR)/apolloschurchapp-tvOS.app/apolloschurchapp-tvOS";
@@ -2175,33 +2003,29 @@
 				GCC_NO_COMMON_BLOCKS = YES;
 				HEADER_SEARCH_PATHS = (
 					"$(inherited)",
-					"$(SRCROOT)/../node_modules/react-native-airplay-btn/ios",
-					"$(SRCROOT)/../node_modules/react-native-config/ios/ReactNativeConfig",
-					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
-					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
+					"$(SRCROOT)/../node_modules/react-native-custom-tabs/ios/ReactNativeCustomTabs",
 					"$(SRCROOT)/../node_modules/react-native-linear-gradient/BVLinearGradient",
-					"$(SRCROOT)/../node_modules/react-native-music-control/ios",
-					"$(SRCROOT)/../node_modules/react-native-onesignal/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-safari-view",
-					"$(SRCROOT)/../node_modules/react-native-screens/ios",
 					"$(SRCROOT)/../node_modules/react-native-splash-screen/ios",
 					"$(SRCROOT)/../node_modules/react-native-svg/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-video/ios",
-					"$(SRCROOT)/../node_modules/react-native-webview/ios",
-					"$(SRCROOT)/../node_modules/rn-fetch-blob/ios/**",
-					"$(SRCROOT)/../node_modules/react-native-maps/lib/ios/**",
-					"$(SRCROOT)/../node_modules/react-native-passkit-wallet/ios/RNPassKit",
+					"$(SRCROOT)/../node_modules/react-native-onesignal/ios/**",
+					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
+					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
+					"$(SRCROOT)/../node_modules/react-native-music-control/ios",
+					"$(SRCROOT)/../node_modules/react-native-screens/ios",
 				);
 				INFOPLIST_FILE = "apolloschurchapp-tvOSTests/Info.plist";
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @loader_path/Frameworks";
 				LIBRARY_SEARCH_PATHS = (
 					"$(inherited)",
+					"\"$(SRCROOT)/$(TARGET_NAME)\"",
 				);
 				OTHER_LDFLAGS = (
 					"-ObjC",
 					"-lc++",
 				);
-				PRODUCT_BUNDLE_IDENTIFIER = "com.facebook.REACT.apolloschurchapp-tvOSTests";
+				PRODUCT_BUNDLE_IDENTIFIER = "org.reactjs.native.apolloschurchapp-tvOSTests";
 				PRODUCT_NAME = "$(TARGET_NAME)";
 				SDKROOT = appletvos;
 				TEST_HOST = "$(BUILT_PRODUCTS_DIR)/apolloschurchapp-tvOS.app/apolloschurchapp-tvOS";
@@ -2217,32 +2041,20 @@
 				CLANG_CXX_LIBRARY = "libc++";
 				CLANG_ENABLE_MODULES = YES;
 				CLANG_ENABLE_OBJC_ARC = YES;
-				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
 				CLANG_WARN_BOOL_CONVERSION = YES;
-				CLANG_WARN_COMMA = YES;
 				CLANG_WARN_CONSTANT_CONVERSION = YES;
-				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
 				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
 				CLANG_WARN_EMPTY_BODY = YES;
 				CLANG_WARN_ENUM_CONVERSION = YES;
-				CLANG_WARN_INFINITE_RECURSION = YES;
 				CLANG_WARN_INT_CONVERSION = YES;
-				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
-				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
-				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
 				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
-				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
-				CLANG_WARN_STRICT_PROTOTYPES = YES;
-				CLANG_WARN_SUSPICIOUS_MOVE = YES;
 				CLANG_WARN_UNREACHABLE_CODE = YES;
 				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
 				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "iPhone Developer";
 				COPY_PHASE_STRIP = NO;
 				ENABLE_STRICT_OBJC_MSGSEND = YES;
-				ENABLE_TESTABILITY = YES;
 				GCC_C_LANGUAGE_STANDARD = gnu99;
 				GCC_DYNAMIC_NO_PIC = NO;
-				GCC_NO_COMMON_BLOCKS = YES;
 				GCC_OPTIMIZATION_LEVEL = 0;
 				GCC_PREPROCESSOR_DEFINITIONS = (
 					"DEBUG=1",
@@ -2270,23 +2082,13 @@
 				CLANG_CXX_LIBRARY = "libc++";
 				CLANG_ENABLE_MODULES = YES;
 				CLANG_ENABLE_OBJC_ARC = YES;
-				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
 				CLANG_WARN_BOOL_CONVERSION = YES;
-				CLANG_WARN_COMMA = YES;
 				CLANG_WARN_CONSTANT_CONVERSION = YES;
-				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
 				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
 				CLANG_WARN_EMPTY_BODY = YES;
 				CLANG_WARN_ENUM_CONVERSION = YES;
-				CLANG_WARN_INFINITE_RECURSION = YES;
 				CLANG_WARN_INT_CONVERSION = YES;
-				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
-				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
-				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
 				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
-				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
-				CLANG_WARN_STRICT_PROTOTYPES = YES;
-				CLANG_WARN_SUSPICIOUS_MOVE = YES;
 				CLANG_WARN_UNREACHABLE_CODE = YES;
 				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
 				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "iPhone Developer";
@@ -2294,7 +2096,6 @@
 				ENABLE_NS_ASSERTIONS = NO;
 				ENABLE_STRICT_OBJC_MSGSEND = YES;
 				GCC_C_LANGUAGE_STANDARD = gnu99;
-				GCC_NO_COMMON_BLOCKS = YES;
 				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
 				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
 				GCC_WARN_UNDECLARED_SELECTOR = YES;
diff --git a/apolloschurchapp/ios/apolloschurchapp/AppDelegate.h b/apolloschurchapp/ios/apolloschurchapp/AppDelegate.h
index 2726d5e..d4f2580 100644
--- a/apolloschurchapp/ios/apolloschurchapp/AppDelegate.h
+++ b/apolloschurchapp/ios/apolloschurchapp/AppDelegate.h
@@ -1,14 +1,13 @@
 /**
- * Copyright (c) Facebook, Inc. and its affiliates.
+ * Copyright (c) 2015-present, Facebook, Inc.
  *
  * This source code is licensed under the MIT license found in the
  * LICENSE file in the root directory of this source tree.
  */
 
-#import <React/RCTBridgeDelegate.h>
 #import <UIKit/UIKit.h>
 
-@interface AppDelegate : UIResponder <UIApplicationDelegate, RCTBridgeDelegate>
+@interface AppDelegate : UIResponder <UIApplicationDelegate>
 
 @property (nonatomic, strong) UIWindow *window;
 
diff --git a/apolloschurchapp/ios/apolloschurchapp/AppDelegate.m b/apolloschurchapp/ios/apolloschurchapp/AppDelegate.m
index b9f7b95..9d889ed 100644
--- a/apolloschurchapp/ios/apolloschurchapp/AppDelegate.m
+++ b/apolloschurchapp/ios/apolloschurchapp/AppDelegate.m
@@ -1,5 +1,5 @@
 /**
- * Copyright (c) Facebook, Inc. and its affiliates.
+ * Copyright (c) 2015-present, Facebook, Inc.
  *
  * This source code is licensed under the MIT license found in the
  * LICENSE file in the root directory of this source tree.
@@ -7,8 +7,6 @@
 
 #import "AppDelegate.h"
 
-
-#import <React/RCTBridge.h>
 #import <React/RCTBundleURLProvider.h>
 #import <React/RCTRootView.h>
 #import "RNSplashScreen.h"
@@ -36,12 +34,14 @@ - (BOOL)application:(UIApplication *)application continueUserActivity:(NSUserAct
 
 - (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions
 {
+  NSURL *jsCodeLocation;
 
-  RCTBridge *bridge = [[RCTBridge alloc] initWithDelegate:self launchOptions:launchOptions];
-  RCTRootView *rootView = [[RCTRootView alloc] initWithBridge:bridge
-                                                   moduleName:@"apolloschurchapp"
-                                            initialProperties:nil];
+  jsCodeLocation = [[RCTBundleURLProvider sharedSettings] jsBundleURLForBundleRoot:@"index" fallbackResource:nil];
 
+  RCTRootView *rootView = [[RCTRootView alloc] initWithBundleURL:jsCodeLocation
+                                                      moduleName:@"apolloschurchapp"
+                                               initialProperties:nil
+                                                   launchOptions:launchOptions];
   rootView.backgroundColor = [[UIColor alloc] initWithRed:1.0f green:1.0f blue:1.0f alpha:1];
 
   self.window = [[UIWindow alloc] initWithFrame:[UIScreen mainScreen].bounds];
@@ -54,13 +54,4 @@ - (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(
   return YES;
 }
 
-- (NSURL *)sourceURLForBridge:(RCTBridge *)bridge
-{
-#if DEBUG
-  return [[RCTBundleURLProvider sharedSettings] jsBundleURLForBundleRoot:@"index" fallbackResource:nil];
-#else
-  return [[NSBundle mainBundle] URLForResource:@"main" withExtension:@"jsbundle"];
-#endif
-}
-
 @end
diff --git a/apolloschurchapp/ios/apolloschurchapp/Base.lproj/LaunchScreen.xib b/apolloschurchapp/ios/apolloschurchapp/Base.lproj/LaunchScreen.xib
index 4ca705c..035b378 100644
--- a/apolloschurchapp/ios/apolloschurchapp/Base.lproj/LaunchScreen.xib
+++ b/apolloschurchapp/ios/apolloschurchapp/Base.lproj/LaunchScreen.xib
@@ -1,11 +1,11 @@
 <?xml version="1.0" encoding="UTF-8"?>
-<document type="com.apple.InterfaceBuilder3.CocoaTouch.XIB" version="3.0" toolsVersion="14490.70" targetRuntime="iOS.CocoaTouch" propertyAccessControl="none" useAutolayout="YES" launchScreen="YES" useTraitCollections="YES" colorMatched="YES">
+<document type="com.apple.InterfaceBuilder3.CocoaTouch.XIB" version="3.0" toolsVersion="14113" targetRuntime="iOS.CocoaTouch" propertyAccessControl="none" useAutolayout="YES" launchScreen="YES" useTraitCollections="YES" colorMatched="YES">
     <device id="retina5_5" orientation="portrait">
         <adaptation id="fullscreen"/>
     </device>
     <dependencies>
         <deployment identifier="iOS"/>
-        <plugIn identifier="com.apple.InterfaceBuilder.IBCocoaTouchPlugin" version="14490.49"/>
+        <plugIn identifier="com.apple.InterfaceBuilder.IBCocoaTouchPlugin" version="14088"/>
         <capability name="documents saved in the Xcode 8 format" minToolsVersion="8.0"/>
     </dependencies>
     <objects>
@@ -15,22 +15,18 @@
             <rect key="frame" x="0.0" y="0.0" width="414" height="736"/>
             <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
             <subviews>
-                <imageView clipsSubviews="YES" userInteractionEnabled="NO" contentMode="scaleToFill" horizontalHuggingPriority="251" verticalHuggingPriority="251" fixedFrame="YES" image="splash_bg" translatesAutoresizingMaskIntoConstraints="NO" id="iGM-E3-lqn">
-                    <rect key="frame" x="-12" y="-10" width="437" height="758"/>
-                    <autoresizingMask key="autoresizingMask" flexibleMinX="YES" widthSizable="YES" flexibleMaxX="YES" flexibleMinY="YES" heightSizable="YES" flexibleMaxY="YES"/>
-                </imageView>
                 <imageView userInteractionEnabled="NO" contentMode="scaleAspectFit" horizontalHuggingPriority="251" verticalHuggingPriority="251" fixedFrame="YES" image="splash-icon" translatesAutoresizingMaskIntoConstraints="NO" id="6Je-Yv-1Zj">
                     <rect key="frame" x="157" y="288" width="100" height="100"/>
                     <autoresizingMask key="autoresizingMask" flexibleMinX="YES" widthSizable="YES" flexibleMaxX="YES" flexibleMinY="YES" heightSizable="YES" flexibleMaxY="YES"/>
                 </imageView>
             </subviews>
+            <color key="backgroundColor" red="0.0" green="0.40392156862745099" blue="0.42745098039215684" alpha="1" colorSpace="custom" customColorSpace="sRGB"/>
             <nil key="simulatedStatusBarMetrics"/>
             <modalPageSheetSimulatedSizeMetrics key="simulatedDestinationMetrics"/>
-            <point key="canvasLocation" x="544.92753623188412" y="453.26086956521743"/>
+            <point key="canvasLocation" x="546" y="454"/>
         </view>
     </objects>
     <resources>
         <image name="splash-icon" width="94" height="99"/>
-        <image name="splash_bg" width="721" height="721"/>
     </resources>
-</document>
+</document>
\ No newline at end of file
diff --git a/apolloschurchapp/ios/apolloschurchapp/Images.xcassets/Contents.json b/apolloschurchapp/ios/apolloschurchapp/Images.xcassets/Contents.json
index da4a164..2d92bd5 100644
--- a/apolloschurchapp/ios/apolloschurchapp/Images.xcassets/Contents.json
+++ b/apolloschurchapp/ios/apolloschurchapp/Images.xcassets/Contents.json
@@ -3,4 +3,4 @@
     "version" : 1,
     "author" : "xcode"
   }
-}
\ No newline at end of file
+}
diff --git a/apolloschurchapp/ios/apolloschurchapp/Images.xcassets/splash_bg.imageset/Contents.json b/apolloschurchapp/ios/apolloschurchapp/Images.xcassets/splash_bg.imageset/Contents.json
deleted file mode 100644
index 8939b14..0000000
--- a/apolloschurchapp/ios/apolloschurchapp/Images.xcassets/splash_bg.imageset/Contents.json
+++ /dev/null
@@ -1,21 +0,0 @@
-{
-  "images" : [
-    {
-      "idiom" : "universal",
-      "filename" : "splash_bg.png",
-      "scale" : "1x"
-    },
-    {
-      "idiom" : "universal",
-      "scale" : "2x"
-    },
-    {
-      "idiom" : "universal",
-      "scale" : "3x"
-    }
-  ],
-  "info" : {
-    "version" : 1,
-    "author" : "xcode"
-  }
-}
\ No newline at end of file
diff --git a/apolloschurchapp/ios/apolloschurchapp/Images.xcassets/splash_bg.imageset/splash_bg.png b/apolloschurchapp/ios/apolloschurchapp/Images.xcassets/splash_bg.imageset/splash_bg.png
deleted file mode 100644
index 315d8e09ac4fd5f51176da24982baad2115fa027..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 11471
zcmeAS@N?(olHy`uVBq!ia0y~yV7dsx9Be?5xhMa#GcYJHc)B=-RK&f#rYOYZDB^tZ
z=H*2eyj_=_M49$pT<`AhvTNUo(sMs$`WYCRSU3a}92yuJZ!=xbcd?(ho!L$Z#0N`w
zaPNsf-r*PD@CmAlk!f>-pzUN%uojS#E37>)ezCsrhiXtT;Fh>(JQHrLL+pW$b@2`V
zMzsTjWHjhTlg((B87(fLrQ>K(Ia*BsYueE&a<q8>Zf}h?4@R2@qs@cS=D}$5V6+!G
z+Jgqw1*1))(WcR8(`a<S4K^M*I@mZm&<Yw!9vwLu9XT0o9*j<`KxVE+Css!1<G|(N
zX!BsSc`({MK+L~8to{|vz`)Z5S_?2*U5-|lqt)eTQ(?5JFxpfYU9vU0Ty1m|WptS$
xWKrhmB+KX|3r!|j{weR`TWF71VC?vS+x%;O<pqA37~n!>22WQ%mvv4FO#m9H?QQ@7

diff --git a/apolloschurchapp/ios/apolloschurchapp/Info.plist b/apolloschurchapp/ios/apolloschurchapp/Info.plist
index 37e0ab4..0d5c926 100644
--- a/apolloschurchapp/ios/apolloschurchapp/Info.plist
+++ b/apolloschurchapp/ios/apolloschurchapp/Info.plist
@@ -2,6 +2,15 @@
 <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
 <plist version="1.0">
 <dict>
+	<key>CFBundleURLTypes</key>
+	<array>
+		<dict>
+			<key>CFBundleURLSchemes</key>
+			<array>
+				<string>apolloschurchapp</string>
+			</array>
+		</dict>
+	</array>
 	<key>CFBundleDevelopmentRegion</key>
 	<string>en</string>
 	<key>CFBundleDisplayName</key>
@@ -9,7 +18,7 @@
 	<key>CFBundleExecutable</key>
 	<string>$(EXECUTABLE_NAME)</string>
 	<key>CFBundleIdentifier</key>
-	<string>$(PRODUCT_BUNDLE_IDENTIFIER)</string>
+	<string>org.reactjs.native.$(PRODUCT_NAME:rfc1034identifier)</string>
 	<key>CFBundleInfoDictionaryVersion</key>
 	<string>6.0</string>
 	<key>CFBundleName</key>
@@ -17,28 +26,17 @@
 	<key>CFBundlePackageType</key>
 	<string>APPL</string>
 	<key>CFBundleShortVersionString</key>
-	<string>0.8.6</string>
+	<string>0.7.0</string>
 	<key>CFBundleSignature</key>
 	<string>????</string>
-	<key>CFBundleURLTypes</key>
-	<array>
-		<dict>
-			<key>CFBundleURLSchemes</key>
-			<array>
-				<string>apolloschurchapp</string>
-			</array>
-		</dict>
-	</array>
 	<key>CFBundleVersion</key>
-	<string>12</string>
+	<string>5</string>
 	<key>ITSAppUsesNonExemptEncryption</key>
 	<false />
 	<key>LSRequiresIPhoneOS</key>
 	<true />
 	<key>NSAppTransportSecurity</key>
 	<dict>
-		<key>NSAllowsArbitraryLoads</key>
-		<true />
 		<key>NSExceptionDomains</key>
 		<dict>
 			<key>embed.wistia.com</key>
@@ -53,16 +51,8 @@
 			</dict>
 		</dict>
 	</dict>
-	<key>NSCameraUsageDescription</key>
-	<string>$(PRODUCT_NAME) would like to use your camera (for uploading profile pictures)</string>
 	<key>NSLocationWhenInUseUsageDescription</key>
 	<string />
-	<key>NSMicrophoneUsageDescription</key>
-	<string>$(PRODUCT_NAME) would like to your microphone (for videos)</string>
-	<key>NSPhotoLibraryAddUsageDescription</key>
-	<string>$(PRODUCT_NAME) would like to save photos to your photo gallery (for uploading profile pictures)</string>
-	<key>NSPhotoLibraryUsageDescription</key>
-	<string>$(PRODUCT_NAME) would like access to your photo gallery (for uploading profile pictures)</string>
 	<key>UIAppFonts</key>
 	<array>
 		<string>DroidSerif-Bold.ttf</string>
@@ -78,6 +68,11 @@
 		<string>Inter-UI-MediumItalic.otf</string>
 		<string>Inter-UI-Regular.otf</string>
 	</array>
+	<key>UIBackgroundModes</key>
+	<array>
+		<string>audio</string>
+		<string>remote-notification</string>
+	</array>
 	<key>UILaunchStoryboardName</key>
 	<string>LaunchScreen</string>
 	<key>UIRequiredDeviceCapabilities</key>
@@ -94,5 +89,13 @@
 	</array>
 	<key>UIViewControllerBasedStatusBarAppearance</key>
 	<false />
+	<key>NSPhotoLibraryUsageDescription</key>
+	<string>$(PRODUCT_NAME) would like access to your photo gallery (for uploading profile pictures)</string>
+	<key>NSCameraUsageDescription</key>
+	<string>$(PRODUCT_NAME) would like to use your camera (for uploading profile pictures)</string>
+	<key>NSPhotoLibraryAddUsageDescription</key>
+	<string>$(PRODUCT_NAME) would like to save photos to your photo gallery (for uploading profile pictures)</string>
+	<key>NSMicrophoneUsageDescription</key>
+	<string>$(PRODUCT_NAME) would like to your microphone (for videos)</string>
 </dict>
 </plist>
diff --git a/apolloschurchapp/ios/apolloschurchapp/main.m b/apolloschurchapp/ios/apolloschurchapp/main.m
index d9c4112..c73e006 100644
--- a/apolloschurchapp/ios/apolloschurchapp/main.m
+++ b/apolloschurchapp/ios/apolloschurchapp/main.m
@@ -1,5 +1,5 @@
 /**
- * Copyright (c) Facebook, Inc. and its affiliates.
+ * Copyright (c) 2015-present, Facebook, Inc.
  *
  * This source code is licensed under the MIT license found in the
  * LICENSE file in the root directory of this source tree.
@@ -14,4 +14,3 @@ int main(int argc, char * argv[]) {
     return UIApplicationMain(argc, argv, nil, NSStringFromClass([AppDelegate class]));
   }
 }
-          
diff --git a/apolloschurchapp/ios/apolloschurchappTests/Info.plist b/apolloschurchapp/ios/apolloschurchappTests/Info.plist
index ea797d5..e358b6d 100644
--- a/apolloschurchapp/ios/apolloschurchappTests/Info.plist
+++ b/apolloschurchapp/ios/apolloschurchappTests/Info.plist
@@ -7,7 +7,7 @@
 	<key>CFBundleExecutable</key>
 	<string>$(EXECUTABLE_NAME)</string>
 	<key>CFBundleIdentifier</key>
-	<string>$(PRODUCT_BUNDLE_IDENTIFIER)</string>
+	<string>org.reactjs.native.example.$(PRODUCT_NAME:rfc1034identifier)</string>
 	<key>CFBundleInfoDictionaryVersion</key>
 	<string>6.0</string>
 	<key>CFBundleName</key>
@@ -15,10 +15,10 @@
 	<key>CFBundlePackageType</key>
 	<string>BNDL</string>
 	<key>CFBundleShortVersionString</key>
-	<string>0.8.6</string>
+	<string>0.7.0</string>
 	<key>CFBundleSignature</key>
 	<string>????</string>
 	<key>CFBundleVersion</key>
-	<string>11</string>
+	<string>5</string>
 </dict>
 </plist>
diff --git a/apolloschurchapp/ios/apolloschurchappTests/apolloschurchappTests.m b/apolloschurchapp/ios/apolloschurchappTests/apolloschurchappTests.m
index 8b9d30b..5b96cea 100644
--- a/apolloschurchapp/ios/apolloschurchappTests/apolloschurchappTests.m
+++ b/apolloschurchapp/ios/apolloschurchappTests/apolloschurchappTests.m
@@ -1,5 +1,5 @@
 /**
- * Copyright (c) Facebook, Inc. and its affiliates.
+ * Copyright (c) 2015-present, Facebook, Inc.
  *
  * This source code is licensed under the MIT license found in the
  * LICENSE file in the root directory of this source tree.
diff --git a/apolloschurchapp/jest.setup.js b/apolloschurchapp/jest.setup.js
index d15cab6..03cd103 100644
--- a/apolloschurchapp/jest.setup.js
+++ b/apolloschurchapp/jest.setup.js
@@ -1,52 +1,26 @@
-import React from 'react';
-// We ran into an issue where SafeAreaView would break jest tests.
-jest.mock('react-navigation', () => {
-  const ActualNavigation = require.requireActual('react-navigation');
-  return {
-    ...ActualNavigation,
-    SafeAreaView: require.requireActual('SafeAreaView'),
-  };
-});
-
-jest.mock('react-native-music-control', () => ({
-  enableBackgroundMode: jest.fn(),
-  enableControl: jest.fn(),
-  on: jest.fn(),
-  setNowPlaying: jest.fn(),
-  STATE_PLAYING: false,
-  STATE_PAUSED: true,
-}));
-
-jest.mock('react-native-config', () => ({
+jest.mock('./src/client/index');
+jest.mock('./src/config', () => ({
   ONE_SIGNAL_KEY: 'doesntmatter',
 }));
-
-jest.mock('Animated', () => {
-  const ActualAnimated = require.requireActual('Animated');
-  return {
-    ...ActualAnimated,
-    timing: (value, config) => ({
-      start: (callback) => {
-        value.setValue(config.toValue);
-        callback && callback();
-      },
-      stop: () => ({}),
-    }),
-    spring: (value, config) => ({
-      start: (callback) => {
-        value.setValue(config.toValue);
-        callback && callback();
-      },
-      stop: () => ({}),
-    }),
-  };
-});
+jest.mock('react-native-custom-tabs', () => ({
+  CustomTabs: {
+    openURL: jest.fn(),
+  },
+}));
 
 jest.mock('react-native-safari-view', () => ({
   isAvailable: jest.fn().mockImplementation(() => Promise.resolve(true)),
   show: jest.fn(),
 }));
 
+jest.mock('react-native-onesignal');
+jest.mock('react-native-music-control', () => ({
+  enableBackgroundMode: jest.fn(),
+  enableControl: jest.fn(),
+  on: jest.fn(),
+  setNowPlaying: jest.fn(),
+}));
+
 jest.mock('react-native-device-info', () => ({
   getUniqueID: () => 'id-123',
   getSystemVersion: () => 'sys-version-123',
@@ -55,35 +29,4 @@ jest.mock('react-native-device-info', () => ({
   getBuildNumber: () => 0,
 }));
 
-jest.mock('rn-fetch-blob', () => 'Fetch');
-jest.mock(
-  '@apollosproject/ui-passes/node_modules/rn-fetch-blob',
-  () => 'Fetch'
-);
-
-jest.mock('@apollosproject/ui-analytics', () => ({
-  track: () => '',
-  AnalyticsConsumer: ({ children }) => children({ test: jest.fn() }),
-  AnalyticsProvider: ({ children }) => children,
-  withTrackOnPress: (Component) => (props) => <Component {...props} />,
-}));
-
-jest.mock('@apollosproject/ui-notifications', () => ({
-  NotificationsProvider: ({ children }) => children,
-}));
-
-jest.mock('@apollosproject/ui-media-player', () => ({
-  MediaPlayerSpacer: ({ children }) => children,
-  MediaPlayer: () => 'MediaPlayer',
-  MediaPlayerProvider: ({ children }) => children,
-  playVideoMutation: 'mutation { playVideo }',
-  withTabBarMediaSpacer: () => ({ children }) => children,
-}));
-
 jest.mock('react-native-video', () => 'Video');
-
-jest.mock('NativeEventEmitter');
-
-jest.mock('react-native-maps');
-jest.mock('DatePickerIOS', () => 'DatePicker');
-jest.mock('./src/client/index');
diff --git a/apolloschurchapp/metro.config.js b/apolloschurchapp/metro.config.js
deleted file mode 100644
index 9b60d7a..0000000
--- a/apolloschurchapp/metro.config.js
+++ /dev/null
@@ -1,97 +0,0 @@
-/**
- * Metro configuration for React Native
- * https://github.com/facebook/react-native
- *
- * @format
- */
-
-const path = require('path');
-const blacklist = require('metro-config/src/defaults/blacklist');
-
-const flatten = (array) =>
-  array.reduce((accum, curr) => curr.concat(accum), []);
-
-const localDeps = [
-  path.resolve('..', 'apollos-ui-kit'),
-  path.resolve('..', 'apollos-ui-passes'),
-  path.resolve('..', 'apollos-ui-auth'),
-  path.resolve('..', 'apollos-ui-htmlview'),
-  path.resolve('..', 'apollos-ui-analytics'),
-  path.resolve('..', 'apollos-ui-storybook'),
-  path.resolve('..', 'apollos-ui-onboarding'),
-  path.resolve('..', 'apollos-ui-media-player'),
-  path.resolve('..', 'apollos-ui-scripture'),
-  path.resolve('..', 'apollos-ui-notifications'),
-];
-
-const sharedNativeModules = [
-  'react-native-linear-gradient',
-  'react-native-svg',
-  'react-native-onesignal',
-  'react-native-music-control',
-  'react-native-video',
-  'react-native-video-controls',
-  'react-native-airplay-btn',
-];
-
-module.exports = {
-  resolver: {
-    extraNodeModules: {
-      'react-native': path.resolve('.', 'node_modules/react-native'),
-      ...sharedNativeModules.reduce(
-        (accum, curr) => ({
-          ...accum,
-          [curr]: path.resolve('.', `node_modules/${curr}`),
-        }),
-        {}
-      ),
-      'react-native-svg': path.resolve('.', 'node_modules/react-native-svg'),
-    },
-    blacklistRE: blacklist([
-      ...localDeps.map(
-        (depPath) => new RegExp(`${depPath}/node_modules/react-native/.*`)
-      ),
-      ...flatten(
-        localDeps.map((depPath) =>
-          sharedNativeModules.map(
-            (moduleName) =>
-              new RegExp(`${depPath}/node_modules/${moduleName}/.*`)
-          )
-        )
-      ),
-      ...sharedNativeModules.map(
-        (moduleName) =>
-          new RegExp(`${path.resolve(`../../node_modules/${moduleName}`)}/.*`)
-      ),
-      ...localDeps.map(
-        (depPath) => new RegExp(`${depPath}/node_modules/react-native-svg/.*`)
-      ),
-      ...localDeps.map(
-        (depPath) =>
-          new RegExp(`${depPath}/node_modules/.*/node_modules/react-native/.*`)
-      ),
-      new RegExp(
-        `${path.resolve('.', 'node_modules')}/.*/node_modules/react-native/.*`
-      ),
-      new RegExp(
-        `${path.resolve('..', '..', 'node_modules', 'react-native')}/.*`
-      ),
-      new RegExp(
-        `${path.resolve(
-          '..',
-          '..',
-          'node_modules'
-        )}/.*/node_modules/react-native/.*`
-      ),
-    ]),
-  },
-  watchFolders: [...localDeps, path.resolve('..', '..', 'node_modules')],
-  transformer: {
-    getTransformOptions: async () => ({
-      transform: {
-        experimentalImportSupport: false,
-        inlineRequires: false,
-      },
-    }),
-  },
-};
diff --git a/apolloschurchapp/package.json b/apolloschurchapp/package.json
index 8de8d0c..b42df76 100644
--- a/apolloschurchapp/package.json
+++ b/apolloschurchapp/package.json
@@ -1,21 +1,23 @@
 {
   "name": "apolloschurchapp",
-  "version": "0.8.6",
+  "version": "0.8.0-alpha.3",
   "private": true,
   "devDependencies": {
-    "@apollosproject/ui-storybook": "^0.8.6",
+    "@storybook/addon-actions": "4.0.7",
+    "@storybook/addon-links": "4.0.7",
+    "@storybook/addons": "4.0.7",
+    "@storybook/react-native": "4.0.7",
     "codecov": "3.0.2",
     "get-dev-paths": "^0.1.0",
-    "jest": "^24.8.0",
+    "jest": "23.6.0",
     "jest-react-native": "18.0.0",
-    "metro-react-native-babel-preset": "^0.54.0",
     "nodemon": "1.18.7",
-    "prettier": "1.14.2",
     "prop-types": "15.6.1",
     "react-dom": "16.6.3",
+    "react-native-dotenv": "0.2.0",
     "react-native-storybook-loader": "1.8.0",
     "react-native-version": "2.6.2",
-    "react-test-renderer": "16.8.3",
+    "react-test-renderer": "16.6.1",
     "waait": "1.0.2"
   },
   "engines": {
@@ -25,19 +27,17 @@
     "src"
   ],
   "scripts": {
-    "android": "SIM=\"$($HOME/Library/Android/sdk/emulator/emulator -list-avds | sed -n 1p)\" && $HOME/Library/Android/sdk/emulator/emulator -avd \"${SIM}\" & react-native run-android --appId com.apolloschurch.app --main-activity LaunchActivity",
+    "android": "react-native run-android",
     "codecov": "cat ./coverage/lcov.info | codecov",
     "fixlint": "eslint ./src --fix",
     "ios": "react-native run-ios --simulator=\"iPhone X\"",
-    "storybook:enable": "sed -i '' 's/STORYBOOK=false/STORYBOOK=true/g' .env",
-    "storybook:disable": "sed -i '' 's/STORYBOOK=true/STORYBOOK=false/g' .env",
-    "generate-stories": "rnstl --searchDir ./src --pattern **/*.stories.js",
     "lint": "eslint ./src --ext .js",
-    "version": "node ../../scripts/update-apollos-version.js && git add apollos.json",
     "postversion": "react-native-version --never-amend --android android/app/build.gradle --ios ios/",
-    "prestart": "lerna run generate-stories & node ./scripts/get-introspection-data.js",
+    "prestart": "babel-node ./scripts/get-introspection-data.js",
     "start": "react-native start",
-    "test": "jest"
+    "storybook": "rnstl --searchDir ./storybook ./src --pattern \"**/*.stories.js\" && storybook start -p 7007 --root ../../",
+    "test": "jest",
+    "release": "standard-version --release-as minor"
   },
   "jest": {
     "preset": "react-native",
@@ -56,61 +56,60 @@
     ],
     "setupFiles": [
       "./jest.setup.js"
-    ]
+    ],
+    "transform": {
+      ".+\\.js$": "<rootDir>/node_modules/react-native/jest/preprocessor.js"
+    }
   },
   "dependencies": {
-    "@apollosproject/ui-analytics": "^0.8.6",
-    "@apollosproject/ui-auth": "^0.8.6",
-    "@apollosproject/ui-htmlview": "^0.8.6",
-    "@apollosproject/ui-kit": "^0.8.6",
-    "@apollosproject/ui-passes": "^0.8.6",
-    "@apollosproject/ui-scripture": "^0.8.6",
-    "@apollosproject/ui-storybook": "^0.8.6",
-    "@apollosproject/ui-media-player": "^0.8.6",
-    "@apollosproject/ui-notifications": "^0.8.6",
-    "apollo-cache-inmemory": "1.5.1",
+    "@apollosproject/ui-kit": "^0.8.0-alpha.3",
+    "apollo-cache-inmemory": "1.3.5",
     "apollo-cache-persist": "0.1.1",
-    "apollo-client": "2.5.1",
-    "apollo-link": "1.2.8",
-    "apollo-link-http": "1.5.11",
-    "apollo-link-schema": "1.1.6",
+    "apollo-client": "2.4.2",
+    "apollo-link": "1.2.3",
+    "apollo-link-context": "1.0.9",
+    "apollo-link-http": "1.5.5",
+    "apollo-link-schema": "1.1.1",
+    "apollo-link-state": "0.4.2",
     "apollo-upload-client": "9.0.0",
+    "buffer": "^5.2.1",
     "color": "3.0.0",
-    "dotenv": "^6.2.0",
+    "entities": "1.1.1",
     "events": "^3.0.0",
-    "formik": "^1.5.2",
+    "formik": "0.11.11",
     "graphql": "0.13.2",
     "graphql-tag": "2.9.2",
     "graphql-tools": "3.1.1",
+    "htmlparser2": "3.9.2",
     "lodash": "^4.17.11",
     "memoize-one": "4.0.0",
     "moment": "2.22.2",
     "node-fetch": "2.2.0",
-    "react": "16.8.3",
-    "react-apollo": "2.5.5",
-    "react-native": "0.59.8",
-    "react-native-airplay-btn": "^1.0.6",
-    "react-native-config": "^0.11.7",
+    "numeral": "^2.0.6",
+    "prettier": "1.14.2",
+    "querystring": "^0.2.0",
+    "react": "16.6.1",
+    "react-apollo": "2.2.4",
+    "react-native": "0.57.5",
+    "react-native-custom-tabs": "0.1.7",
     "react-native-device-info": "0.22.5",
-    "react-native-image-picker": "0.28.0",
-    "react-native-linear-gradient": "^2.5.4",
-    "react-native-maps": "^0.24.2",
-    "react-native-music-control": "^0.10.2",
+    "react-native-image-picker": "0.26.10",
+    "react-native-keyboard-aware-scroll-view": "0.7.0",
+    "react-native-linear-gradient": "2.4.0",
+    "react-native-music-control": "0.7.3",
     "react-native-onesignal": "3.2.7",
-    "react-native-passkit-wallet": "^0.1.4",
     "react-native-safari-view": "2.1.0",
-    "react-native-safe-area-view": "0.13.1",
-    "react-native-screens": "^1.0.0-alpha.11",
+    "react-native-safe-area-view": "0.11.0",
+    "react-native-screens": "1.0.0-alpha.12",
     "react-native-splash-screen": "^3.1.1",
-    "react-native-svg": "^9.4.0",
-    "react-native-video": "^4.4.1",
+    "react-native-svg": "6.5.2",
+    "react-native-video": "3.2.0",
     "react-native-video-controls": "2.2.3",
-    "react-native-webview": "^5.2.0",
-    "react-navigation": "2.18.3",
-    "react-navigation-tabs": "0.6.0",
+    "react-navigation": "2.11.2",
     "recompose": "^0.30.0",
-    "rn-fetch-blob": "^0.10.15",
-    "stream": "^0.0.2",
+    "rn-placeholder": "1.2.0",
+    "stream": "0.0.2",
+    "url": "^0.11.0",
     "yup": "0.26.6"
   },
   "rnpm": {
diff --git a/apolloschurchapp/polyfill.js b/apolloschurchapp/polyfill.js
deleted file mode 100644
index e2e1ede..0000000
--- a/apolloschurchapp/polyfill.js
+++ /dev/null
@@ -1,10 +0,0 @@
-// this can be removed when we upgrade to react-native 59
-
-// symbol polyfills
-global.Symbol = require('core-js/es6/symbol');
-require('core-js/fn/symbol/iterator');
-
-// collection fn polyfills
-require('core-js/fn/map');
-require('core-js/fn/set');
-require('core-js/fn/array/find');
diff --git a/apolloschurchapp/rn-cli.config.js b/apolloschurchapp/rn-cli.config.js
new file mode 100644
index 0000000..4235fa0
--- /dev/null
+++ b/apolloschurchapp/rn-cli.config.js
@@ -0,0 +1,35 @@
+const path = require('path');
+const blacklist = require('metro-config/src/defaults/blacklist');
+
+const localDeps = [path.resolve('..', 'apollos-ui-kit')];
+
+module.exports = {
+  resolver: {
+    extraNodeModules: {
+      'react-native': path.resolve('.', 'node_modules/react-native'),
+      'react-native-linear-gradient': path.resolve(
+        '.',
+        'node_modules/react-native-linear-gradient'
+      ),
+    },
+    blacklistRE: blacklist([
+      ...localDeps.map(
+        (depPath) => new RegExp(`${depPath}/node_modules/react-native/.*`)
+      ),
+      ...localDeps.map(
+        (depPath) =>
+          new RegExp(`${depPath}/node_modules/react-native-linear-gradient/.*`)
+      ),
+      new RegExp(
+        `${path.resolve('..', '..', 'node_modules', 'react-native')}/.*`
+      ),
+      new RegExp(
+        `${path.resolve('..', '..', 'node_modules')}/.*/react-native/.*`
+      ),
+      new RegExp(
+        `${path.resolve('../../node_modules/react-native-linear-gradient')}/.*`
+      ),
+    ]),
+  },
+  watchFolders: [...localDeps, path.resolve('..', '..', 'node_modules')],
+};
diff --git a/apolloschurchapp/scripts/get-introspection-data.js b/apolloschurchapp/scripts/get-introspection-data.js
index 80ae562..f2c7e28 100755
--- a/apolloschurchapp/scripts/get-introspection-data.js
+++ b/apolloschurchapp/scripts/get-introspection-data.js
@@ -1,7 +1,7 @@
-const fs = require('fs');
-const Path = require('path');
-require('dotenv/config');
-const fetch = require('node-fetch');
+import fs from 'fs';
+import Path from 'path';
+import { APP_DATA_URL } from 'react-native-dotenv';
+import fetch from 'node-fetch';
 
 const attempts = 0;
 const maxAttempts = 3;
@@ -9,7 +9,7 @@ const timeBetweenAttempts = 5 * 1000;
 
 const getIntrospectionData = async () => {
   try {
-    const query = await fetch(process.env.APP_DATA_URL, {
+    const query = await fetch(APP_DATA_URL, {
       method: 'POST',
       headers: { 'Content-Type': 'application/json' },
       body: JSON.stringify({
diff --git a/apolloschurchapp/src/LandingScreen.js b/apolloschurchapp/src/LandingScreen.js
deleted file mode 100644
index 52dde4b..0000000
--- a/apolloschurchapp/src/LandingScreen.js
+++ /dev/null
@@ -1,33 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-import { styled, GradientOverlayImage } from '@apollosproject/ui-kit';
-
-import ApollosLandingScreen from './ui/LandingScreen';
-
-const FullScreenImage = styled({
-  resizeMode: 'cover',
-  position: 'absolute',
-})(GradientOverlayImage);
-
-const LandingScreen = ({ navigation }) => (
-  <ApollosLandingScreen
-    onPressPrimary={() => navigation.push('Auth')}
-    textColor={'white'}
-    BackgroundComponent={
-      <FullScreenImage source={'https://picsum.photos/375/812/?random'} />
-    }
-    primaryNavText={"Let's go!"}
-  />
-);
-
-LandingScreen.navigationOptions = {
-  header: null,
-};
-
-LandingScreen.propTypes = {
-  navigation: PropTypes.shape({
-    push: PropTypes.func,
-  }),
-};
-
-export default LandingScreen;
diff --git a/apolloschurchapp/src/NavigationService.js b/apolloschurchapp/src/NavigationService.js
index a2a5348..a5d758b 100644
--- a/apolloschurchapp/src/NavigationService.js
+++ b/apolloschurchapp/src/NavigationService.js
@@ -2,30 +2,22 @@ import { NavigationActions } from 'react-navigation';
 
 let _navigator;
 
-const setTopLevelNavigator = (navigatorRef) => {
+function setTopLevelNavigator(navigatorRef) {
   _navigator = navigatorRef;
-};
+}
 
-const navigate = (routeName, params) => {
+function navigate(routeName, params) {
   _navigator.dispatch(
     NavigationActions.navigate({
       routeName,
       params,
     })
   );
-};
+}
 
-const goBack = (from) => {
-  let key;
-  if (from) {
-    const route = _navigator.state.nav.routes.find((r) => r.routeName === from);
-    if (route) ({ key } = route);
-  }
-  _navigator.dispatch(NavigationActions.back({ key }));
-};
+// add other navigation functions that you need and export them
 
 export default {
-  setTopLevelNavigator,
   navigate,
-  goBack,
+  setTopLevelNavigator,
 };
diff --git a/apolloschurchapp/src/Notifications.js b/apolloschurchapp/src/Notifications.js
new file mode 100644
index 0000000..d37e22f
--- /dev/null
+++ b/apolloschurchapp/src/Notifications.js
@@ -0,0 +1,69 @@
+import querystring from 'querystring';
+import URL from 'url';
+import { Component } from 'react';
+import { Linking } from 'react-native';
+import OneSignal from 'react-native-onesignal';
+import NavigationService from './NavigationService';
+import { ONE_SIGNAL_KEY } from './config';
+
+export default class NotificationsInit extends Component {
+  static navigationOptions = {};
+
+  componentWillMount() {
+    OneSignal.init(ONE_SIGNAL_KEY, {
+      kOSSettingsKeyAutoPrompt: true,
+    });
+    OneSignal.addEventListener('received', this.onReceived);
+    OneSignal.addEventListener('opened', this.onOpened);
+    OneSignal.addEventListener('ids', this.onIds);
+  }
+
+  componentDidMount() {
+    Linking.getInitialURL().then((url) => {
+      this.navigate(url);
+    });
+    Linking.addEventListener('url', ({ url }) => this.navigate(url));
+  }
+
+  componentWillUnmount() {
+    Linking.removeEventListener('url');
+    OneSignal.removeEventListener('received');
+    OneSignal.removeEventListener('opened');
+    OneSignal.removeEventListener('ids');
+  }
+
+  navigate = (rawUrl) => {
+    if (!rawUrl) return;
+    const url = URL.parse(rawUrl);
+    const route = url.pathname.substring(1);
+    const args = querystring.parse(url.query);
+    NavigationService.navigate(route, args);
+  };
+
+  onReceived = (notification) => {
+    console.log('Notification received: ', notification);
+  };
+
+  onOpened = (openResult) => {
+    console.log('Message: ', openResult.notification.payload.body);
+    console.log('Data: ', openResult.notification.payload.additionalData);
+    console.log('isActive: ', openResult.notification.isAppInFocus);
+    console.log('openResult: ', openResult);
+    // URL looks like this
+    // apolloschurchapp://AppStackNavigator/Connect
+    // apolloschurchapp://SomethingElse/Connect
+    // apolloschurchapp://SomethingElse/ContentSingle?itemId=SomeItemId:blablalba
+    const { url } = openResult.notification.payload.additionalData;
+    if (url) {
+      this.navigate(url);
+    }
+  };
+
+  onIds = (device) => {
+    console.log('Device info: ', device);
+  };
+
+  render() {
+    return null;
+  }
+}
diff --git a/apolloschurchapp/src/Providers.js b/apolloschurchapp/src/Providers.js
index 9b7e84f..da98513 100644
--- a/apolloschurchapp/src/Providers.js
+++ b/apolloschurchapp/src/Providers.js
@@ -1,37 +1,5 @@
-import React from 'react';
-import Config from 'react-native-config';
+import { nest } from 'recompose';
 import { Providers } from '@apollosproject/ui-kit';
-import { AuthProvider } from '@apollosproject/ui-auth';
-import { AnalyticsProvider } from '@apollosproject/ui-analytics';
-import { MediaPlayerProvider } from '@apollosproject/ui-media-player';
-import { NotificationsProvider } from '@apollosproject/ui-notifications';
-
-import NavigationService from './NavigationService';
 import ClientProvider from './client';
-import customTheme, { customIcons } from './theme';
-
-const AppProviders = (props) => (
-  <ClientProvider {...props}>
-    <NotificationsProvider
-      oneSignalKey={Config.ONE_SIGNAL_KEY}
-      navigate={NavigationService.navigate}
-    >
-      <AuthProvider
-        navigateToAuth={() => NavigationService.navigate('Auth')}
-        closeAuth={() => NavigationService.navigate('Onboarding')}
-      >
-        <MediaPlayerProvider>
-          <AnalyticsProvider>
-            <Providers
-              themeInput={customTheme}
-              iconInput={customIcons}
-              {...props}
-            />
-          </AnalyticsProvider>
-        </MediaPlayerProvider>
-      </AuthProvider>
-    </NotificationsProvider>
-  </ClientProvider>
-);
 
-export default AppProviders;
+export default nest(ClientProvider, Providers);
diff --git a/apolloschurchapp/src/__mocks__/config.js b/apolloschurchapp/src/__mocks__/config.js
new file mode 100644
index 0000000..b1162fc
--- /dev/null
+++ b/apolloschurchapp/src/__mocks__/config.js
@@ -0,0 +1,2 @@
+/* eslint-disable import/prefer-default-export */
+export const ONE_SIGNAL_KEY = 'doesntmatter';
diff --git a/apolloschurchapp/src/analytics/TrackEventWhenLoaded.js b/apolloschurchapp/src/analytics/TrackEventWhenLoaded.js
new file mode 100644
index 0000000..eb7ed61
--- /dev/null
+++ b/apolloschurchapp/src/analytics/TrackEventWhenLoaded.js
@@ -0,0 +1,38 @@
+import { PureComponent } from 'react';
+import PropTypes from 'prop-types';
+import { track } from './index';
+
+export default class TrackEventWhenLoaded extends PureComponent {
+  componentDidMount() {
+    if (this.props.loaded) {
+      this.track();
+    }
+  }
+
+  componentDidUpdate(prevProps) {
+    if (!prevProps.loaded && this.props.loaded) {
+      this.track();
+    }
+  }
+
+  get trackClient() {
+    return this.props.track || track;
+  }
+
+  track() {
+    const { eventName, properties } = this.props;
+    return this.trackClient({ eventName, properties });
+  }
+
+  render() {
+    return null;
+  }
+}
+
+TrackEventWhenLoaded.propTypes = {
+  loaded: PropTypes.bool.isRequired,
+  eventName: PropTypes.string.isRequired,
+  // eslint-disable-next-line react/forbid-prop-types
+  properties: PropTypes.any,
+  track: PropTypes.func,
+};
diff --git a/apolloschurchapp/src/analytics/TrackEventWhenLoaded.tests.js b/apolloschurchapp/src/analytics/TrackEventWhenLoaded.tests.js
new file mode 100644
index 0000000..fcf66ed
--- /dev/null
+++ b/apolloschurchapp/src/analytics/TrackEventWhenLoaded.tests.js
@@ -0,0 +1,46 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import TrackEventWhenLoaded from './TrackEventWhenLoaded';
+
+const trackMock = jest.fn();
+
+describe('The TrackEventWhenLoaded component', () => {
+  afterEach(() => {
+    trackMock.mockClear();
+  });
+  it('should track an event if mounted with loaded=true', () => {
+    renderer.create(
+      <TrackEventWhenLoaded
+        loaded
+        eventName="Track Something"
+        properties={{ ThingId: '1234' }}
+        track={trackMock}
+      />
+    );
+    expect(trackMock.mock.calls).toMatchSnapshot();
+  });
+
+  it('should track an event if mounted with loaded=false and then switching to true', () => {
+    const tree = renderer.create(
+      <TrackEventWhenLoaded
+        loaded={false}
+        eventName="Track Something"
+        properties={{ ThingId: '1234' }}
+        track={trackMock}
+        key="tracker"
+      />
+    );
+    expect(trackMock.mock.calls).toMatchSnapshot();
+    tree.update(
+      <TrackEventWhenLoaded
+        loaded
+        eventName="Track Something"
+        properties={{ ThingId: '1234' }}
+        track={trackMock}
+        key="tracker"
+      />
+    );
+    expect(trackMock.mock.calls).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/analytics/index.js b/apolloschurchapp/src/analytics/index.js
new file mode 100644
index 0000000..cd7dbba
--- /dev/null
+++ b/apolloschurchapp/src/analytics/index.js
@@ -0,0 +1,79 @@
+import gql from 'graphql-tag';
+import DeviceInfo from 'react-native-device-info';
+import { Platform } from 'react-native';
+
+import { client } from '../client';
+
+const anonymousId = DeviceInfo.getUniqueID();
+
+const deviceInfo = {
+  platform: Platform.OS === 'ios' ? 'iOS' : 'Android',
+  deviceId: anonymousId,
+  deviceModel: DeviceInfo.getModel(),
+  osVersion: DeviceInfo.getSystemVersion(),
+  appVersion: DeviceInfo.getVersion(),
+};
+
+const trackMutation = gql`
+  mutation track($input: AnalyticsTrackInput!) {
+    trackEvent(input: $input) {
+      success
+    }
+  }
+`;
+
+const identifyMutation = gql`
+  mutation identify($input: AnalyticsIdentifyInput!) {
+    identifySelf(input: $input) {
+      success
+    }
+  }
+`;
+
+const propertiesToGqlInput = (props = []) =>
+  Object.keys(props).map((key) => ({
+    field: key,
+    value: props[key],
+  }));
+
+export const track = ({ eventName, properties }) =>
+  client.mutate({
+    mutation: trackMutation,
+    variables: {
+      input: {
+        anonymousId,
+        deviceInfo,
+        eventName,
+        properties: propertiesToGqlInput(properties),
+      },
+    },
+  });
+
+export const identify = () =>
+  client.mutate({
+    mutation: identifyMutation,
+    variables: {
+      input: {
+        anonymousId,
+        deviceInfo,
+      },
+    },
+  });
+
+export const events = {
+  LikeContent: 'Like Content',
+  UnlikeContent: 'Unlike Content',
+  ViewContent: 'View Content',
+  ShareContent: 'Share Content',
+  UserLogin: 'User Login',
+  UserSignup: 'User Signup',
+  UserLogout: 'UserLogout',
+  UserForgotPassword: 'User Forgot Password',
+  UserPlayedMedia: 'User Played Media',
+};
+
+export default {
+  track,
+  identify,
+  events,
+};
diff --git a/apolloschurchapp/src/auth/LoginButton/LoginButton.tests.js b/apolloschurchapp/src/auth/LoginButton/LoginButton.tests.js
new file mode 100644
index 0000000..64f2b62
--- /dev/null
+++ b/apolloschurchapp/src/auth/LoginButton/LoginButton.tests.js
@@ -0,0 +1,71 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+import wait from 'waait';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import getLoginState from '../getLoginState';
+
+import LoginButton from '.';
+
+describe('LoginButton component', () => {
+  it('renders nothing when logged in', async () => {
+    const mock = {
+      request: {
+        query: getLoginState,
+      },
+      result: {
+        data: { isLoggedIn: true },
+      },
+    };
+
+    const navigation = { navigate: jest.fn() };
+    const tree = renderer.create(
+      <Providers mocks={[mock]}>
+        <LoginButton navigation={navigation} />
+      </Providers>
+    );
+    await wait(0); // wait for response from graphql
+    expect(tree).toMatchSnapshot();
+  });
+
+  it('renders a LoginButton when logged out', async () => {
+    const mock = {
+      request: {
+        query: getLoginState,
+      },
+      result: {
+        data: { isLoggedIn: null },
+      },
+    };
+
+    const navigation = { navigate: jest.fn() };
+    const tree = renderer.create(
+      <Providers mocks={[mock]}>
+        <LoginButton navigation={navigation} />
+      </Providers>
+    );
+    await wait(0); // wait for response from graphql
+    expect(tree).toMatchSnapshot();
+  });
+
+  it('renders a LoginButton that is loading', async () => {
+    const mock = {
+      request: {
+        query: getLoginState,
+      },
+      result: {
+        data: { isLoggedIn: null },
+      },
+    };
+
+    const navigation = { navigate: jest.fn() };
+    const tree = renderer.create(
+      <Providers mocks={[mock]}>
+        <LoginButton navigation={navigation} loading />
+      </Providers>
+    );
+    await wait(0); // wait for response from graphql
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/auth/LoginButton/index.js b/apolloschurchapp/src/auth/LoginButton/index.js
new file mode 100644
index 0000000..66c7753
--- /dev/null
+++ b/apolloschurchapp/src/auth/LoginButton/index.js
@@ -0,0 +1,40 @@
+import React, { PureComponent } from 'react';
+import { withNavigation } from 'react-navigation';
+import { Query } from 'react-apollo';
+import PropTypes from 'prop-types';
+
+import { Button } from '@apollosproject/ui-kit';
+
+import getLoginState from '../getLoginState';
+
+class LoginButton extends PureComponent {
+  static propTypes = {
+    navigation: PropTypes.shape({
+      push: PropTypes.func,
+    }),
+  };
+
+  handleLoginPress = () => this.props.navigation.push('Auth');
+
+  render() {
+    const { navigation, ...otherProps } = this.props;
+    return (
+      <Query query={getLoginState}>
+        {({ data }) => {
+          const { isLoggedIn, loading } = data;
+          if (isLoggedIn) return null;
+          return (
+            <Button
+              onPress={this.handleLoginPress}
+              title="Get Connected"
+              loading={loading}
+              {...otherProps}
+            />
+          );
+        }}
+      </Query>
+    );
+  }
+}
+
+export default withNavigation(LoginButton);
diff --git a/apolloschurchapp/src/auth/ProtectedAction.js b/apolloschurchapp/src/auth/ProtectedAction.js
new file mode 100644
index 0000000..5cec0fd
--- /dev/null
+++ b/apolloschurchapp/src/auth/ProtectedAction.js
@@ -0,0 +1,67 @@
+import React, { PureComponent } from 'react';
+import { Query } from 'react-apollo';
+import PropTypes from 'prop-types';
+import { withNavigation } from 'react-navigation';
+
+import getLoginState from './getLoginState';
+
+class ProtectedAction extends PureComponent {
+  queuedActionsToTriggerOnLogin = [];
+
+  static propTypes = {
+    children: PropTypes.func,
+    navigation: PropTypes.shape({
+      push: PropTypes.func,
+    }),
+    loading: PropTypes.bool,
+    isLoggedIn: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),
+    action: PropTypes.func.isRequired,
+  };
+
+  componentDidUpdate(oldProps) {
+    if (!oldProps.isLoggedIn && this.props.isLoggedIn) {
+      this.handleLogin();
+    }
+
+    if (
+      oldProps.loading &&
+      !this.props.loading &&
+      !this.props.isLoggedIn &&
+      this.queuedActionsToTriggerOnLogin.length
+    ) {
+      this.triggerLogin();
+    }
+  }
+
+  handleLogin = () => {
+    this.queuedActionsToTriggerOnLogin.forEach((action) => action());
+    this.queuedActionsToTriggerOnLogin = [];
+  };
+
+  triggerLogin = () => this.props.navigation.push('Auth');
+
+  protectedActionHandler = (action) => (...args) => {
+    if (this.props.isLoggedIn) {
+      action(...args);
+    } else {
+      this.queuedActionsToTriggerOnLogin.push(action.bind(this, ...args));
+      if (!this.props.loading) this.triggerLogin();
+    }
+  };
+
+  render() {
+    return typeof this.props.children === 'function'
+      ? this.props.children(this.protectedActionHandler(this.props.action))
+      : this.props.children;
+  }
+}
+
+const ProtectedActionWithQuery = (props) => (
+  <Query query={getLoginState}>
+    {({ data: { isLoggedIn = false } = {}, loading }) => (
+      <ProtectedAction isLoggedIn={isLoggedIn} loading={loading} {...props} />
+    )}
+  </Query>
+);
+
+export default withNavigation(ProtectedActionWithQuery);
diff --git a/apolloschurchapp/src/auth/ProtectedTouchable.js b/apolloschurchapp/src/auth/ProtectedTouchable.js
new file mode 100644
index 0000000..82bb73b
--- /dev/null
+++ b/apolloschurchapp/src/auth/ProtectedTouchable.js
@@ -0,0 +1,24 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import { Touchable } from '@apollosproject/ui-kit';
+import ProtectedAction from './ProtectedAction';
+
+const ProtectedTouchable = ({
+  onPress,
+  children,
+  TouchableComponent = Touchable,
+}) => (
+  <ProtectedAction action={onPress}>
+    {(action) => (
+      <TouchableComponent onPress={action}>{children}</TouchableComponent>
+    )}
+  </ProtectedAction>
+);
+
+ProtectedTouchable.propTypes = {
+  onPress: PropTypes.func.isRequired,
+  children: PropTypes.node.isRequired,
+  TouchableComponent: PropTypes.func,
+};
+
+export default ProtectedTouchable;
diff --git a/apolloschurchapp/src/auth/getLoginState.js b/apolloschurchapp/src/auth/getLoginState.js
new file mode 100644
index 0000000..97d3e8d
--- /dev/null
+++ b/apolloschurchapp/src/auth/getLoginState.js
@@ -0,0 +1,7 @@
+import gql from 'graphql-tag';
+
+export default gql`
+  query {
+    isLoggedIn @client
+  }
+`;
diff --git a/apolloschurchapp/src/auth/handleLogin.js b/apolloschurchapp/src/auth/handleLogin.js
new file mode 100644
index 0000000..417dde0
--- /dev/null
+++ b/apolloschurchapp/src/auth/handleLogin.js
@@ -0,0 +1,7 @@
+import gql from 'graphql-tag';
+
+export default gql`
+  mutation handleLogin($authToken: String!) {
+    handleLogin(authToken: $authToken) @client
+  }
+`;
diff --git a/apolloschurchapp/src/auth/index.js b/apolloschurchapp/src/auth/index.js
new file mode 100644
index 0000000..b8f16a3
--- /dev/null
+++ b/apolloschurchapp/src/auth/index.js
@@ -0,0 +1,98 @@
+import React, { PureComponent } from 'react';
+import PropTypes from 'prop-types';
+import { View, SafeAreaView } from 'react-native';
+
+import {
+  FlexedView,
+  TabView,
+  TabSceneMap as SceneMap,
+  H1,
+  H5,
+  styled,
+  Icon,
+  ButtonLink,
+  withTheme,
+} from '@apollosproject/ui-kit';
+
+import { track } from 'apolloschurchapp/src/analytics';
+
+import LoginForm from './login';
+import SignUpForm from './signup';
+
+export LoginButton from './LoginButton';
+export ProtectedAction from './ProtectedAction';
+
+const Title = styled(({ theme }) => ({ color: theme.colors.primary }))(H1);
+
+const BrandIcon = withTheme(({ theme }) => ({
+  name: 'brand-icon',
+  size: theme.sizing.baseUnit * 2.25,
+  marginVertical: theme.sizing.baseUnit,
+  fill: theme.colors.primary,
+}))(Icon);
+
+const HeaderContainer = styled(({ theme }) => ({
+  backgroundColor: theme.colors.background.paper,
+}))(SafeAreaView);
+
+const Header = styled(({ theme }) => ({
+  padding: theme.sizing.baseUnit,
+  paddingBottom: theme.sizing.baseUnit * 1.5,
+}))(View);
+
+const CancelButton = styled(({ theme }) => ({
+  alignSelf: 'flex-end',
+  paddingTop: theme.sizing.baseUnit * 0.75,
+  paddingRight: theme.sizing.baseUnit,
+}))(ButtonLink);
+
+class Auth extends PureComponent {
+  static navigationOptions = {
+    header: null,
+  };
+
+  tabRoutes = [
+    { title: 'Sign In', key: 'login' },
+    { title: 'Register', key: 'signup' },
+  ];
+
+  static propTypes = {
+    navigation: PropTypes.shape({
+      goBack: PropTypes.func,
+    }),
+  };
+
+  handleFinish = () => {
+    // trigger the auth modal to close
+    track({ eventName: 'UserLogin' });
+    this.props.navigation.goBack();
+  };
+
+  renderLogin = () => <LoginForm onLogin={this.handleFinish} />;
+
+  renderSignup = () => <SignUpForm onSignup={this.handleFinish} />;
+
+  render() {
+    return (
+      <FlexedView>
+        <HeaderContainer>
+          <CancelButton onPress={this.handleFinish}>Cancel</CancelButton>
+          <Header>
+            <BrandIcon />
+            <Title>Welcome!</Title>
+            <H5>Please sign in to continue</H5>
+          </Header>
+        </HeaderContainer>
+        <TabView
+          routes={this.tabRoutes}
+          renderScene={SceneMap({
+            login: this.renderLogin,
+            signup: this.renderSignup,
+          })}
+        />
+      </FlexedView>
+    );
+  }
+}
+
+export default Auth;
diff --git a/apolloschurchapp/src/auth/login/Form.js b/apolloschurchapp/src/auth/login/Form.js
new file mode 100644
index 0000000..7551d9e
--- /dev/null
+++ b/apolloschurchapp/src/auth/login/Form.js
@@ -0,0 +1,107 @@
+import React, { PureComponent } from 'react';
+import { View, SafeAreaView } from 'react-native';
+import PropTypes from 'prop-types';
+import { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';
+
+import { track, events } from 'apolloschurchapp/src/analytics';
+import { WebBrowserConsumer } from 'apolloschurchapp/src/ui/WebBrowser';
+import {
+  FlexedView,
+  PaddedView,
+  TextInput,
+  Button,
+  ButtonLink,
+  styled,
+} from '@apollosproject/ui-kit';
+
+const BottomSafeAreaView = styled({
+  position: 'absolute',
+  bottom: 0,
+  left: 0,
+  right: 0,
+})(SafeAreaView);
+
+class Form extends PureComponent {
+  static propTypes = {
+    setFieldValue: PropTypes.func,
+    touched: PropTypes.shape({}),
+    errors: PropTypes.shape({}),
+    values: PropTypes.shape({}),
+    handleSubmit: PropTypes.func,
+    isSubmitting: PropTypes.bool,
+    isValid: PropTypes.bool,
+  };
+
+  render() {
+    const {
+      values,
+      touched,
+      errors,
+      handleSubmit,
+      setFieldValue,
+      isValid,
+      isSubmitting,
+    } = this.props;
+    return (
+      <FlexedView>
+        <KeyboardAwareScrollView>
+          <PaddedView>
+            <View>
+              <TextInput
+                label="Email"
+                type="email"
+                value={values.email}
+                error={touched.email && errors.email}
+                onChangeText={(text) => setFieldValue('email', text)}
+                onSubmitEditing={() => this.passwordInput.focus()}
+                returnKeyType="next"
+                textContentType="username"
+                enablesReturnKeyAutomatically
+              />
+              <TextInput
+                label="Password"
+                type="password"
+                value={values.password}
+                error={touched.password && errors.password}
+                onChangeText={(text) => setFieldValue('password', text)}
+                onSubmitEditing={handleSubmit}
+                returnKeyType="go"
+                textContentType="password"
+                enablesReturnKeyAutomatically
+                inputRef={(r) => {
+                  this.passwordInput = r;
+                }}
+              />
+              <WebBrowserConsumer>
+                {(openUrl) => (
+                  <ButtonLink
+                    onPress={() => {
+                      track({ eventName: events.UserForgotPassword });
+                      return openUrl(
+                        'https://apollosrock.newspring.cc/page/56/'
+                      );
+                    }}
+                  >
+                    Forgot your password?
+                  </ButtonLink>
+                )}
+              </WebBrowserConsumer>
+            </View>
+          </PaddedView>
+        </KeyboardAwareScrollView>
+        <BottomSafeAreaView>
+          <PaddedView vertical={false}>
+            <Button
+              onPress={handleSubmit}
+              title="Sign in"
+              disabled={!isValid}
+              loading={isSubmitting}
+            />
+          </PaddedView>
+        </BottomSafeAreaView>
+      </FlexedView>
+    );
+  }
+}
+
+export default Form;
diff --git a/apolloschurchapp/src/auth/login/Form.stories.js b/apolloschurchapp/src/auth/login/Form.stories.js
new file mode 100644
index 0000000..54cc3f8
--- /dev/null
+++ b/apolloschurchapp/src/auth/login/Form.stories.js
@@ -0,0 +1,12 @@
+import React from 'react';
+import { storiesOf } from '@storybook/react-native';
+
+import LoginForm from './Form';
+
+storiesOf('Auth/LoginForm', module).add('Example', () => (
+  <LoginForm
+    values={{ email: '', password: '' }}
+    touched={{ email: false, password: false }}
+    errors={{ email: null, password: null }}
+  />
+));
diff --git a/apolloschurchapp/src/auth/login/Form.tests.js b/apolloschurchapp/src/auth/login/Form.tests.js
new file mode 100644
index 0000000..0e352e3
--- /dev/null
+++ b/apolloschurchapp/src/auth/login/Form.tests.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import LoginForm from './Form';
+
+describe('The LoginForm component', () => {
+  it('should render', () => {
+    const tree = renderer.create(
+      <Providers>
+        <LoginForm
+          values={{ email: '', password: '' }}
+          touched={{ email: false, password: false }}
+          errors={{ email: null, password: null }}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/auth/login/authenticate.js b/apolloschurchapp/src/auth/login/authenticate.js
new file mode 100644
index 0000000..94d4e74
--- /dev/null
+++ b/apolloschurchapp/src/auth/login/authenticate.js
@@ -0,0 +1,9 @@
+import gql from 'graphql-tag';
+
+export default gql`
+  mutation authenticate($email: String!, $password: String!) {
+    authenticate(identity: $email, password: $password) {
+      token
+    }
+  }
+`;
diff --git a/apolloschurchapp/src/auth/login/index.js b/apolloschurchapp/src/auth/login/index.js
new file mode 100644
index 0000000..1546d60
--- /dev/null
+++ b/apolloschurchapp/src/auth/login/index.js
@@ -0,0 +1,66 @@
+import React from 'react';
+import { Mutation } from 'react-apollo';
+import { Formik } from 'formik';
+import * as Yup from 'yup';
+import PropTypes from 'prop-types';
+
+import handleLogin from '../handleLogin';
+import { client } from '../../client'; //eslint-disable-line
+import authenticateMutation from './authenticate';
+import LoginForm from './Form';
+
+const Login = ({ onLogin }) => (
+  <Mutation
+    mutation={authenticateMutation}
+    update={(cache, { data: { authenticate } }) => {
+      client.mutate({
+        mutation: handleLogin,
+        variables: {
+          authToken: authenticate.token,
+        },
+      });
+    }}
+  >
+    {(authenticate) => (
+      <Formik
+        validationSchema={Yup.object().shape({
+          email: Yup.string()
+            .email('Invalid email address')
+            .required('Email is required!'),
+          password: Yup.string().required('Password is required!'),
+        })}
+        onSubmit={async (variables, { setSubmitting, setFieldError }) => {
+          try {
+            await authenticate({ variables });
+            if (onLogin) onLogin();
+          } catch (e) {
+            const { graphQLErrors } = e;
+            if (
+              graphQLErrors.length &&
+              graphQLErrors.find(
+                ({ extensions }) => extensions.code === 'UNAUTHENTICATED'
+              )
+            ) {
+              setFieldError('email', true);
+              setFieldError('password', 'Your email or password is incorrect.');
+            } else {
+              setFieldError(
+                'password',
+                'Unknown error. Please try again later.'
+              );
+            }
+          }
+          setSubmitting(false);
+        }}
+      >
+        {(formikBag) => <LoginForm {...formikBag} />}
+      </Formik>
+    )}
+  </Mutation>
+);
+
+Login.propTypes = {
+  onLogin: PropTypes.func,
+};
+
+export default Login;
diff --git a/apolloschurchapp/src/auth/logout.js b/apolloschurchapp/src/auth/logout.js
new file mode 100644
index 0000000..8dbff04
--- /dev/null
+++ b/apolloschurchapp/src/auth/logout.js
@@ -0,0 +1,7 @@
+import gql from 'graphql-tag';
+
+export default gql`
+  mutation {
+    logout @client
+  }
+`;
diff --git a/apolloschurchapp/src/auth/signup/Form.js b/apolloschurchapp/src/auth/signup/Form.js
new file mode 100644
index 0000000..640342e
--- /dev/null
+++ b/apolloschurchapp/src/auth/signup/Form.js
@@ -0,0 +1,90 @@
+import React, { PureComponent } from 'react';
+import { View, SafeAreaView } from 'react-native';
+import PropTypes from 'prop-types';
+import { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';
+
+import {
+  FlexedView,
+  PaddedView,
+  TextInput,
+  Button,
+  styled,
+} from '@apollosproject/ui-kit';
+
+const BottomSafeAreaView = styled({
+  position: 'absolute',
+  bottom: 0,
+  left: 0,
+  right: 0,
+})(SafeAreaView);
+
+class Form extends PureComponent {
+  static propTypes = {
+    setFieldValue: PropTypes.func,
+    touched: PropTypes.shape({}),
+    errors: PropTypes.shape({}),
+    values: PropTypes.shape({}),
+    handleSubmit: PropTypes.func,
+    isSubmitting: PropTypes.bool,
+    isValid: PropTypes.bool,
+  };
+
+  render() {
+    const {
+      values,
+      touched,
+      errors,
+      handleSubmit,
+      setFieldValue,
+      isValid,
+      isSubmitting,
+    } = this.props;
+    return (
+      <FlexedView>
+        <KeyboardAwareScrollView>
+          <PaddedView>
+            <View>
+              <TextInput
+                label="Email"
+                type="email"
+                value={values.email}
+                error={touched.email && errors.email}
+                onChangeText={(text) => setFieldValue('email', text)}
+                onSubmitEditing={() => this.passwordInput.focus()}
+                returnKeyType="next"
+                textContentType="username"
+                enablesReturnKeyAutomatically
+              />
+              <TextInput
+                label="Password"
+                type="password"
+                value={values.password}
+                error={touched.password && errors.password}
+                onChangeText={(text) => setFieldValue('password', text)}
+                onSubmitEditing={handleSubmit}
+                returnKeyType="go"
+                textContentType="password"
+                enablesReturnKeyAutomatically
+                inputRef={(r) => {
+                  this.passwordInput = r;
+                }}
+              />
+            </View>
+          </PaddedView>
+        </KeyboardAwareScrollView>
+        <BottomSafeAreaView>
+          <PaddedView vertical={false}>
+            <Button
+              onPress={handleSubmit}
+              title="Register"
+              disabled={!isValid}
+              loading={isSubmitting}
+            />
+          </PaddedView>
+        </BottomSafeAreaView>
+      </FlexedView>
+    );
+  }
+}
+
+export default Form;
diff --git a/apolloschurchapp/src/auth/signup/Form.stories.js b/apolloschurchapp/src/auth/signup/Form.stories.js
new file mode 100644
index 0000000..da0e764
--- /dev/null
+++ b/apolloschurchapp/src/auth/signup/Form.stories.js
@@ -0,0 +1,12 @@
+import React from 'react';
+import { storiesOf } from '@storybook/react-native';
+
+import LoginForm from './Form';
+
+storiesOf('Auth/SignupForm', module).add('Example', () => (
+  <LoginForm
+    values={{ email: '', password: '' }}
+    touched={{ email: false, password: false }}
+    errors={{ email: null, password: null }}
+  />
+));
diff --git a/apolloschurchapp/src/auth/signup/Form.tests.js b/apolloschurchapp/src/auth/signup/Form.tests.js
new file mode 100644
index 0000000..5d9601f
--- /dev/null
+++ b/apolloschurchapp/src/auth/signup/Form.tests.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import LoginForm from './Form';
+
+describe('The SignupForm component', () => {
+  it('should render', () => {
+    const tree = renderer.create(
+      <Providers>
+        <LoginForm
+          values={{ email: '', password: '' }}
+          touched={{ email: false, password: false }}
+          errors={{ email: null, password: null }}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/auth/signup/index.js b/apolloschurchapp/src/auth/signup/index.js
new file mode 100644
index 0000000..81e64a7
--- /dev/null
+++ b/apolloschurchapp/src/auth/signup/index.js
@@ -0,0 +1,67 @@
+import React from 'react';
+import { Mutation } from 'react-apollo';
+import { Formik } from 'formik';
+import * as Yup from 'yup';
+import PropTypes from 'prop-types';
+
+import { track, events } from 'apolloschurchapp/src/analytics';
+
+import handleLogin from '../handleLogin';
+import { client } from '../../client'; //eslint-disable-line
+import registerPersonMutation from './registerPerson';
+import SignupForm from './Form';
+
+const Signup = ({ onSignup }) => (
+  <Mutation
+    mutation={registerPersonMutation}
+    update={(cache, { data: { registerPerson } }) => {
+      client.mutate({
+        mutation: handleLogin,
+        variables: {
+          authToken: registerPerson.token,
+        },
+      });
+    }}
+  >
+    {(authenticate) => (
+      <Formik
+        validationSchema={Yup.object().shape({
+          email: Yup.string()
+            .email('Invalid email address')
+            .required('Email is required!'),
+          password: Yup.string().required('Password is required!'),
+        })}
+        onSubmit={async (variables, { setSubmitting, setFieldError }) => {
+          try {
+            await authenticate({ variables });
+            track({ eventName: events.UserSignup }); // TODO: Move signup logic to store/index and move tracking logic there also.
+            if (onSignup) onSignup();
+          } catch ({ graphQLErrors = [], ...e }) {
+            if (
+              graphQLErrors.length &&
+              graphQLErrors.find(({ message }) =>
+                message.includes('User already exists')
+              )
+            ) {
+              setFieldError('email', 'There is already a user with this email');
+            } else {
+              setFieldError(
+                'password',
+                'Unknown error. Please try again later.'
+              );
+            }
+          }
+          setSubmitting(false);
+        }}
+      >
+        {(formikBag) => <SignupForm {...formikBag} />}
+      </Formik>
+    )}
+  </Mutation>
+);
+
+Signup.propTypes = {
+  onSignup: PropTypes.func,
+};
+
+export default Signup;
diff --git a/apolloschurchapp/src/auth/signup/registerPerson.js b/apolloschurchapp/src/auth/signup/registerPerson.js
new file mode 100644
index 0000000..77fc892
--- /dev/null
+++ b/apolloschurchapp/src/auth/signup/registerPerson.js
@@ -0,0 +1,9 @@
+import gql from 'graphql-tag';
+
+export default gql`
+  mutation registerPerson($email: String!, $password: String!) {
+    registerPerson(email: $email, password: $password) {
+      token
+    }
+  }
+`;
diff --git a/apolloschurchapp/src/client/__mocks__/index.js b/apolloschurchapp/src/client/__mocks__/index.js
index 36dec2b..7d3347c 100644
--- a/apolloschurchapp/src/client/__mocks__/index.js
+++ b/apolloschurchapp/src/client/__mocks__/index.js
@@ -1,39 +1,29 @@
-import React from 'react';
 import { MockedProvider } from 'react-apollo/test-utils';
 import ApolloClient from 'apollo-client';
 import { makeExecutableSchema, addMockFunctionsToSchema } from 'graphql-tools';
 import { SchemaLink } from 'apollo-link-schema';
-
+import { ApolloLink } from 'apollo-link';
 import { testSchema as typeDefs } from 'apollos-church-api';
 
 import cache from '../cache';
-import { resolvers, schema, defaults } from '../../store';
+import clientStateLink from '../clientStateLink';
 
-// eslint-disable-next-line
-export default (props) => {
-  let finalProps = props;
-  // eslint-disable-next-line
-  if (!props.mocks) {
-    // eslint-disable-next-line
-    finalProps = { ...props, resolvers };
-  }
-  return <MockedProvider {...finalProps} />;
-};
+export default MockedProvider;
 
-const serverSchema = makeExecutableSchema({
+const schema = makeExecutableSchema({
   typeDefs,
   resolverValidationOptions: {
     requireResolversForResolveType: false,
   },
 });
-addMockFunctionsToSchema({ schema: serverSchema });
+addMockFunctionsToSchema({ schema });
 
-const link = new SchemaLink({ schema: serverSchema });
-cache.writeData({ data: defaults });
+let link = new SchemaLink({ schema });
+if (clientStateLink) {
+  link = ApolloLink.from([clientStateLink, link]);
+}
 
 export const client = new ApolloClient({
-  link,
   cache,
-  resolvers,
-  typeDefs: schema,
+  link,
 });
diff --git a/apolloschurchapp/src/client/authLink.js b/apolloschurchapp/src/client/authLink.js
new file mode 100644
index 0000000..407934b
--- /dev/null
+++ b/apolloschurchapp/src/client/authLink.js
@@ -0,0 +1,35 @@
+import { setContext } from 'apollo-link-context';
+import gql from 'graphql-tag';
+
+import { ensureCacheHydration } from './cache';
+
+import { client } from './'; // eslint-disable-line
+
+export default setContext(async (request, { headers }) => {
+  try {
+    await ensureCacheHydration;
+
+    const {
+      data: { authToken },
+    } = await client.query({
+      query: gql`
+        query {
+          authToken @client
+        }
+      `,
+    });
+    if (!authToken) return {};
+
+    // return the headers to the context so httpLink can read them
+    return {
+      headers: {
+        ...headers,
+        authorization: authToken,
+      },
+    };
+  } catch (err) {
+    // eslint-disable-next-line
+    console.warn('Authorization Failed', err);
+    return {};
+  }
+});
diff --git a/apolloschurchapp/src/client/cache.js b/apolloschurchapp/src/client/cache.js
index 5b4bfd5..3979a8a 100644
--- a/apolloschurchapp/src/client/cache.js
+++ b/apolloschurchapp/src/client/cache.js
@@ -3,27 +3,15 @@ import {
   IntrospectionFragmentMatcher,
 } from 'apollo-cache-inmemory';
 import { AsyncStorage } from 'react-native';
+import DeviceInfo from 'react-native-device-info';
 import { CachePersistor } from 'apollo-cache-persist';
-import gql from 'graphql-tag';
-import Config from 'react-native-config';
-import introspectionQueryResultData from './fragmentTypes.json';
-
-export const CACHE_LOADED = gql`
-  query {
-    cacheLoaded @client
-  }
-`;
 
-export const MARK_CACHE_LOADED = gql`
-  mutation markCacheLoaded {
-    cacheMarkLoaded @client
-  }
-`;
+import introspectionQueryResultData from './fragmentTypes.json';
 
-// We reset our apollo cache based an env value and static number.
-// In the future, we should also look at resetting the app when an error occurs related to Apollo.
-// You can also increment this number to force a manual reset of the cache.
-const SCHEMA_VERSION = `${Config.SCHEMA_VERSION}-1`; // Must be a string.
+// We reset our apollo cache on every build:
+// TODO: this could be optimized by only reseting cache when our schema or client-side schema changes,
+// however there is risk for missing changes and breaking things in production, so this is safer.
+const SCHEMA_VERSION = `${DeviceInfo.getVersion()}${DeviceInfo.getBuildNumber()}`; // Must be a string.
 const SCHEMA_VERSION_KEY = 'apollo-schema-version';
 
 const nodeCacheRedirect = (_, { id }, { getCacheKey }) =>
@@ -45,26 +33,13 @@ const persistor = new CachePersistor({
   storage: AsyncStorage,
 });
 
-// 1. If we are on the same schema version, restore the cache.
-// 2. If that fails, purge the cache and update the stored version so we don't try and restore agian
-// 3. If we are on a new schema version, purge the cache.
-// 4. If purging or setting AsyncStorage keys fails (or anything else) we capture the error and log it.
-
 export const ensureCacheHydration = (async () => {
-  // We wrap everything in try/catch because crashing on a cache restore is bad
-  // 😬
   try {
     const currentVersion = await AsyncStorage.getItem(SCHEMA_VERSION_KEY);
     if (currentVersion === SCHEMA_VERSION) {
       // If the current version matches the latest version,
       // we're good to go and can restore the cache.
-      try {
-        await persistor.restore();
-      } catch (restoreError) {
-        // If the restore fails, we want to do our best to purge the cache.
-        await persistor.purge();
-        console.error('Error restoring cache, purging the cache', restoreError);
-      }
+      await persistor.restore();
     } else {
       // Otherwise, we'll want to purge the outdated persisted cache
       // and mark ourselves as having updated to the latest version.
@@ -72,7 +47,7 @@ export const ensureCacheHydration = (async () => {
       await AsyncStorage.setItem(SCHEMA_VERSION_KEY, SCHEMA_VERSION);
     }
   } catch (error) {
-    console.error('Error restoring or purging Apollo cache', error);
+    console.error('Error restoring Apollo cache', error);
   }
 })();
 
diff --git a/apolloschurchapp/src/client/clientStateLink.js b/apolloschurchapp/src/client/clientStateLink.js
new file mode 100644
index 0000000..0c45da8
--- /dev/null
+++ b/apolloschurchapp/src/client/clientStateLink.js
@@ -0,0 +1,11 @@
+import { withClientState } from 'apollo-link-state';
+
+import { resolvers, defaults, schema } from '../store';
+import cache from './cache';
+
+export default withClientState({
+  resolvers,
+  defaults,
+  cache,
+  typeDefs: schema,
+});
diff --git a/apolloschurchapp/src/client/fragmentTypes.json b/apolloschurchapp/src/client/fragmentTypes.json
index 14cf82b..8d96fc0 100644
--- a/apolloschurchapp/src/client/fragmentTypes.json
+++ b/apolloschurchapp/src/client/fragmentTypes.json
@@ -1 +1 @@
-{"__schema":{"types":[{"kind":"INTERFACE","name":"Node","possibleTypes":[{"name":"ContentChannel"},{"name":"Person"},{"name":"Campus"},{"name":"Pass"},{"name":"UniversalContentItem"},{"name":"DevotionalContentItem"},{"name":"MediaContentItem"},{"name":"ContentSeriesContentItem"}]},{"kind":"INTERFACE","name":"ContentItem","possibleTypes":[{"name":"UniversalContentItem"},{"name":"DevotionalContentItem"},{"name":"MediaContentItem"},{"name":"ContentSeriesContentItem"}]},{"kind":"INTERFACE","name":"Media","possibleTypes":[{"name":"ImageMedia"},{"name":"VideoMedia"},{"name":"AudioMedia"}]},{"kind":"INTERFACE","name":"MediaSource","possibleTypes":[{"name":"ImageMediaSource"},{"name":"VideoMediaSource"},{"name":"AudioMediaSource"}]},{"kind":"INTERFACE","name":"Sharable","possibleTypes":[{"name":"SharableContentItem"}]}]}}
\ No newline at end of file
+{"__schema":{"types":[{"kind":"INTERFACE","name":"Node","possibleTypes":[{"name":"ContentChannel"},{"name":"Person"},{"name":"Interaction"},{"name":"UniversalContentItem"},{"name":"DevotionalContentItem"},{"name":"MediaContentItem"},{"name":"ContentSeriesContentItem"}]},{"kind":"INTERFACE","name":"ContentItem","possibleTypes":[{"name":"UniversalContentItem"},{"name":"DevotionalContentItem"},{"name":"MediaContentItem"},{"name":"ContentSeriesContentItem"}]},{"kind":"INTERFACE","name":"Media","possibleTypes":[{"name":"ImageMedia"},{"name":"VideoMedia"},{"name":"AudioMedia"}]},{"kind":"INTERFACE","name":"MediaSource","possibleTypes":[{"name":"ImageMediaSource"},{"name":"VideoMediaSource"},{"name":"AudioMediaSource"}]},{"kind":"INTERFACE","name":"Sharable","possibleTypes":[{"name":"SharableContentItem"}]}]}}
\ No newline at end of file
diff --git a/apolloschurchapp/src/client/httpLink.js b/apolloschurchapp/src/client/httpLink.js
index c8974f8..157fb8e 100644
--- a/apolloschurchapp/src/client/httpLink.js
+++ b/apolloschurchapp/src/client/httpLink.js
@@ -1,24 +1,11 @@
 import { Platform } from 'react-native';
 import { createUploadLink } from 'apollo-upload-client';
-import Config from 'react-native-config';
-import { split } from 'apollo-link';
-import { createHttpLink } from 'apollo-link-http';
-import { getMainDefinition } from 'apollo-utilities';
+import { APP_DATA_URL, ANDROID_URL } from 'react-native-dotenv';
 
-let uri = Config.APP_DATA_URL;
-const androidUri = Config.ANDROID_URL || '10.0.2.2';
+let uri = APP_DATA_URL;
+const androidUri = ANDROID_URL || '10.0.2.2';
 
 // Android's emulator requires localhost network traffic to go through 10.0.2.2
 if (Platform.OS === 'android') uri = uri.replace('localhost', androidUri);
 
-export default split(
-  ({ query }) => {
-    const { kind, operation } = getMainDefinition(query);
-    return kind === 'OperationDefinition' && operation === 'mutation';
-  },
-  createUploadLink({ uri }),
-  createHttpLink({
-    uri,
-    useGETForQueries: true,
-  })
-);
+export default createUploadLink({ uri });
diff --git a/apolloschurchapp/src/client/index.js b/apolloschurchapp/src/client/index.js
index c473190..76cff4a 100644
--- a/apolloschurchapp/src/client/index.js
+++ b/apolloschurchapp/src/client/index.js
@@ -3,27 +3,22 @@ import PropTypes from 'prop-types';
 import { ApolloProvider } from 'react-apollo';
 import { ApolloClient } from 'apollo-client';
 import { ApolloLink } from 'apollo-link';
+import SplashScreen from 'react-native-splash-screen';
 
-import { authLink } from '@apollosproject/ui-auth';
-import { resolvers, schema, defaults } from '../store';
 import httpLink from './httpLink';
-import cache, { ensureCacheHydration, MARK_CACHE_LOADED } from './cache';
+import clientStateLink from './clientStateLink';
+import authLink from './authLink'; // eslint-disable-line
+import cache, { ensureCacheHydration } from './cache';
 
-const link = ApolloLink.from([authLink, httpLink]);
+const link = clientStateLink.concat(ApolloLink.from([authLink, httpLink]));
 
 export const client = new ApolloClient({
   link,
   cache,
-  queryDeduplication: false,
+  queryDeduplication: true,
   shouldBatch: true,
-  resolvers,
-  typeDefs: schema,
 });
 
-cache.writeData({ data: defaults });
-// Ensure that media player still works after logout.
-client.onResetStore(() => cache.writeData({ data: defaults }));
-
 class ClientProvider extends PureComponent {
   static propTypes = {
     client: PropTypes.shape({
@@ -41,7 +36,7 @@ class ClientProvider extends PureComponent {
     } catch (e) {
       throw e;
     } finally {
-      client.mutate({ mutation: MARK_CACHE_LOADED });
+      if (SplashScreen && SplashScreen.hide) SplashScreen.hide();
     }
   }
 
diff --git a/apolloschurchapp/src/config.js b/apolloschurchapp/src/config.js
new file mode 100644
index 0000000..248183d
--- /dev/null
+++ b/apolloschurchapp/src/config.js
@@ -0,0 +1,6 @@
+/* eslint-disable import/prefer-default-export */
+import { ONE_SIGNAL_KEY as oneSignalKey } from 'react-native-dotenv';
+
+const ONE_SIGNAL_KEY = oneSignalKey;
+
+export { ONE_SIGNAL_KEY };
diff --git a/apolloschurchapp/src/content-feed/getContentFeed.js b/apolloschurchapp/src/content-feed/getContentFeed.js
index dbf38d5..2e47d19 100644
--- a/apolloschurchapp/src/content-feed/getContentFeed.js
+++ b/apolloschurchapp/src/content-feed/getContentFeed.js
@@ -4,13 +4,10 @@ import { largeCardFragment } from 'apolloschurchapp/src/ui/ContentCardConnected'
 import { contentItemFragment } from '../content-single/getContentItem';
 
 export default gql`
-  query getContentFeed($itemId: ID!, $after: String, $first: Int) {
+  query getContentFeed($itemId: ID!) {
     node(id: $itemId) {
       ... on ContentChannel {
-        childContentItemsConnection(after: $after, first: $first) {
-          pageInfo {
-            endCursor
-          }
+        childContentItemsConnection {
           edges {
             node {
               ...contentItemFragment
diff --git a/apolloschurchapp/src/content-feed/index.js b/apolloschurchapp/src/content-feed/index.js
index 831c5f0..8662d8a 100644
--- a/apolloschurchapp/src/content-feed/index.js
+++ b/apolloschurchapp/src/content-feed/index.js
@@ -6,7 +6,6 @@ import PropTypes from 'prop-types';
 import { BackgroundView, FeedView } from '@apollosproject/ui-kit';
 
 import ContentCardConnected from 'apolloschurchapp/src/ui/ContentCardConnected';
-import fetchMoreResolver from 'apolloschurchapp/src/utils/fetchMoreResolver';
 
 import getContentFeed from './getContentFeed';
 /**
@@ -51,7 +50,7 @@ class ContentFeed extends PureComponent {
           variables={{ itemId }}
           fetchPolicy="cache-and-network"
         >
-          {({ loading, error, data, refetch, fetchMore, variables }) => (
+          {({ loading, error, data, refetch }) => (
             <FeedView
               ListItemComponent={ContentCardConnected}
               content={get(
@@ -59,12 +58,6 @@ class ContentFeed extends PureComponent {
                 'node.childContentItemsConnection.edges',
                 []
               ).map((edge) => edge.node)}
-              fetchMore={fetchMoreResolver({
-                collectionName: 'node.childContentItemsConnection',
-                fetchMore,
-                variables,
-                data,
-              })}
               isLoading={loading}
               error={error}
               refetch={refetch}
diff --git a/apolloschurchapp/src/content-single/ActionContainer/index.js b/apolloschurchapp/src/content-single/ActionContainer/index.js
index 471fe32..2df4bae 100644
--- a/apolloschurchapp/src/content-single/ActionContainer/index.js
+++ b/apolloschurchapp/src/content-single/ActionContainer/index.js
@@ -3,11 +3,12 @@ import { Platform, View } from 'react-native';
 import PropTypes from 'prop-types';
 import { Query } from 'react-apollo';
 import { get } from 'lodash';
+
 import Share from 'apolloschurchapp/src/ui/Share';
 
 import { SideBySideView, styled } from '@apollosproject/ui-kit';
 import LikeButton from 'apolloschurchapp/src/ui/LikeButton';
-import { MediaPlayerSpacer } from '@apollosproject/ui-media-player';
+import { MediaPlayerSpacer } from 'apolloschurchapp/src/ui/MediaPlayer';
 
 import getShareContent from './getShareContent';
 
diff --git a/apolloschurchapp/src/content-single/ContentSingle.js b/apolloschurchapp/src/content-single/ContentSingle.js
index 70f49fd..f5b2709 100644
--- a/apolloschurchapp/src/content-single/ContentSingle.js
+++ b/apolloschurchapp/src/content-single/ContentSingle.js
@@ -5,7 +5,8 @@ import PropTypes from 'prop-types';
 
 import { ErrorCard, ThemeMixin } from '@apollosproject/ui-kit';
 
-import { TrackEventWhenLoaded } from '@apollosproject/ui-analytics';
+import TrackEventWhenLoaded from 'apolloschurchapp/src/analytics/TrackEventWhenLoaded';
+import { events } from 'apolloschurchapp/src/analytics';
 
 import ActionContainer from './ActionContainer';
 import getContentItem from './getContentItem';
@@ -25,8 +26,6 @@ class ContentSingle extends PureComponent {
 
   static navigationOptions = {
     header: NavigationHeader,
-    headerTransparent: true,
-    headerMode: 'float',
   };
 
   get itemId() {
@@ -81,7 +80,7 @@ class ContentSingle extends PureComponent {
       >
         <TrackEventWhenLoaded
           loaded={!!(!loading && content.title)}
-          eventName={'View Contentx'}
+          eventName={events.ViewContent}
           properties={{
             title: content.title,
             itemId: this.itemId,
diff --git a/apolloschurchapp/src/content-single/DevotionalContentItem/ContentTab.js b/apolloschurchapp/src/content-single/DevotionalContentItem/ContentTab.js
index 426feb3..9a4b521 100644
--- a/apolloschurchapp/src/content-single/DevotionalContentItem/ContentTab.js
+++ b/apolloschurchapp/src/content-single/DevotionalContentItem/ContentTab.js
@@ -2,7 +2,7 @@ import React from 'react';
 import { ScrollView } from 'react-native';
 import PropTypes from 'prop-types';
 import { PaddedView, H2, styled } from '@apollosproject/ui-kit';
-import { ScriptureList } from '@apollosproject/ui-scripture';
+import { ScriptureList } from 'apolloschurchapp/src/ui/Scripture';
 import HorizontalContentFeed from '../HorizontalContentFeed';
 import HTMLContent from '../HTMLContent';
 
diff --git a/apolloschurchapp/src/content-single/DevotionalContentItem/Devotional.stories.js b/apolloschurchapp/src/content-single/DevotionalContentItem/Devotional.stories.js
index 8bf3ffd..109a669 100644
--- a/apolloschurchapp/src/content-single/DevotionalContentItem/Devotional.stories.js
+++ b/apolloschurchapp/src/content-single/DevotionalContentItem/Devotional.stories.js
@@ -1,62 +1,60 @@
-// TODO: fix story
-
-// import React from 'react';
-// import { storiesOf } from '@apollosproject/ui-storybook';
-
-// import Devotional from '.';
-
-// const scripture = [
-//   {
-//     id: '1CO.15.57',
-//     reference: '1 Corinthians 15:57',
-//     html:
-//       '<p class="p"><span data-number="57" class="v">57</span>But thanks be to God, who gives us the victory through our Lord Jesus Christ. </p>',
-//   },
-//   {
-//     id: 'EXO.17.8-EXO.17.15',
-//     reference: 'Exodus 17:8-15',
-//     html:
-//       '<p class="p"><span data-number="8" class="v">8</span>Then Amalek came and fought with Israel in Rephidim. <span data-number="9" class="v">9</span>Moses said to Joshua, “Choose men for us, and go out to fight with Amalek. Tomorrow I will stand on the top of the hill with God’s rod in my hand.” <span data-number="10" class="v">10</span>So Joshua did as Moses had told him, and fought with Amalek; and Moses, Aaron, and Hur went up to the top of the hill. <span data-number="11" class="v">11</span>When Moses held up his hand, Israel prevailed. When he let down his hand, Amalek prevailed. <span data-number="12" class="v">12</span>But Moses’ hands were heavy; so they took a stone, and put it under him, and he sat on it. Aaron and Hur held up his hands, the one on the one side, and the other on the other side. His hands were steady until sunset. <span data-number="13" class="v">13</span>Joshua defeated Amalek and his people with the edge of the sword. <span data-number="14" class="v">14</span>Yahweh said to Moses, “Write this for a memorial in a book, and rehearse it in the ears of Joshua: that I will utterly blot out the memory of Amalek from under the sky.” <span data-number="15" class="v">15</span>Moses built an altar, and called its name “Yahweh our Banner”.</p>',
-//   },
-// ];
-
-// const content = {
-//   body:
-//     '<p>Sometimes God&rsquo;s promises to us involve a fight. We have to fight to keep our focus on Him, fight to move towards the promise we know God has laid on our hearts. We have a real enemy that would love nothing more than to get us sidetracked and doubt God&rsquo;s promises. So we fight saying that we are going to believe God will do what He says He will do, and we keep fighting until we see that promise come to life.</p><p>In Exodus 17:8-15 the nation of Israel, freed from great oppression in Egypt was traveling to the land God promised them. Yet, Israel was fighting, again.&nbsp;<br />&nbsp;<br />As the Israelites were fighting in the valley,&nbsp;Moses was on the hill top lifting his hands in prayer for these great fighters. Israel fought hard, and with the prayers of Moses and the help of his companions, Aaron and Hur, the Amalekites were defeated. Moses knew that it was solely because of the Lord&rsquo;s hand of protection and blessing on the Israelites that they won the battle. &ldquo;Moses built an altar and called it The Lord is my banner&rdquo; (Exodus 17:15).</p><p>In battle opposing nations would fly their own flag on a pole at each of their respective front lines. This was to give their soldiers a feeling of hope and a focal point. This is what God is to us: a banner of encouragement to give us hope and a focal point.</p><blockquote><p>The Lord protects us, covers us with love, and&nbsp;blesses us continually.</p></blockquote><p>The Lord is our banner. He protects us; He covers us with love; He blesses us continually. The Lord gives us hope and a place to focus during the tough fights when the enemy is trying to make us doubt God&rsquo;s promises.&nbsp;</p><p>When was the last time you sat and thanked Jesus for all the ways he is a banner in your life?&nbsp;</p><p>Reflect:</p><ul><li>What is one way the Lord has been your banner?</li><li>How can you focus more today on the Lord and all the things He does for you throughout the day?</li></ul>',
-//   route: { jumpTo: () => {} },
-//   title: 'God is Our Banner',
-// };
-
-// const renderItem = () => {};
-
-// const loadingStateObject = {
-//   node: {
-//     id: 'fakeId0',
-//     title: '',
-//     isLoading: true,
-//   },
-// };
-
-// const stories = storiesOf('Devotional', module);
-
-// stories.add('Example', () => (
-//   <Devotional
-//     body={content.body}
-//     title={content.title}
-//     isLoading={false}
-//     scripture={scripture}
-//     renderItem={renderItem}
-//     loadingStateObject={loadingStateObject}
-//   />
-// ));
-
-// stories.add('isLoading', () => (
-//   <Devotional
-//     body={content.body}
-//     title={content.title}
-//     isLoading
-//     scripture={scripture}
-//     renderItem={renderItem}
-//     loadingStateObject={loadingStateObject}
-//   />
-// ));
+import React from 'react';
+import { storiesOf } from '@storybook/react-native';
+
+import Devotional from '.';
+
+const scripture = [
+  {
+    id: '1CO.15.57',
+    reference: '1 Corinthians 15:57',
+    html:
+      '<p class="p"><span data-number="57" class="v">57</span>But thanks be to God, who gives us the victory through our Lord Jesus Christ. </p>',
+  },
+  {
+    id: 'EXO.17.8-EXO.17.15',
+    reference: 'Exodus 17:8-15',
+    html:
+      '<p class="p"><span data-number="8" class="v">8</span>Then Amalek came and fought with Israel in Rephidim. <span data-number="9" class="v">9</span>Moses said to Joshua, “Choose men for us, and go out to fight with Amalek. Tomorrow I will stand on the top of the hill with God’s rod in my hand.” <span data-number="10" class="v">10</span>So Joshua did as Moses had told him, and fought with Amalek; and Moses, Aaron, and Hur went up to the top of the hill. <span data-number="11" class="v">11</span>When Moses held up his hand, Israel prevailed. When he let down his hand, Amalek prevailed. <span data-number="12" class="v">12</span>But Moses’ hands were heavy; so they took a stone, and put it under him, and he sat on it. Aaron and Hur held up his hands, the one on the one side, and the other on the other side. His hands were steady until sunset. <span data-number="13" class="v">13</span>Joshua defeated Amalek and his people with the edge of the sword. <span data-number="14" class="v">14</span>Yahweh said to Moses, “Write this for a memorial in a book, and rehearse it in the ears of Joshua: that I will utterly blot out the memory of Amalek from under the sky.” <span data-number="15" class="v">15</span>Moses built an altar, and called its name “Yahweh our Banner”.</p>',
+  },
+];
+
+const content = {
+  body:
+    '<p>Sometimes God&rsquo;s promises to us involve a fight. We have to fight to keep our focus on Him, fight to move towards the promise we know God has laid on our hearts. We have a real enemy that would love nothing more than to get us sidetracked and doubt God&rsquo;s promises. So we fight saying that we are going to believe God will do what He says He will do, and we keep fighting until we see that promise come to life.</p><p>In Exodus 17:8-15 the nation of Israel, freed from great oppression in Egypt was traveling to the land God promised them. Yet, Israel was fighting, again.&nbsp;<br />&nbsp;<br />As the Israelites were fighting in the valley,&nbsp;Moses was on the hill top lifting his hands in prayer for these great fighters. Israel fought hard, and with the prayers of Moses and the help of his companions, Aaron and Hur, the Amalekites were defeated. Moses knew that it was solely because of the Lord&rsquo;s hand of protection and blessing on the Israelites that they won the battle. &ldquo;Moses built an altar and called it The Lord is my banner&rdquo; (Exodus 17:15).</p><p>In battle opposing nations would fly their own flag on a pole at each of their respective front lines. This was to give their soldiers a feeling of hope and a focal point. This is what God is to us: a banner of encouragement to give us hope and a focal point.</p><blockquote><p>The Lord protects us, covers us with love, and&nbsp;blesses us continually.</p></blockquote><p>The Lord is our banner. He protects us; He covers us with love; He blesses us continually. The Lord gives us hope and a place to focus during the tough fights when the enemy is trying to make us doubt God&rsquo;s promises.&nbsp;</p><p>When was the last time you sat and thanked Jesus for all the ways he is a banner in your life?&nbsp;</p><p>Reflect:</p><ul><li>What is one way the Lord has been your banner?</li><li>How can you focus more today on the Lord and all the things He does for you throughout the day?</li></ul>',
+  route: { jumpTo: () => {} },
+  title: 'God is Our Banner',
+};
+
+const renderItem = () => {};
+
+const loadingStateObject = {
+  node: {
+    id: 'fakeId0',
+    title: '',
+    isLoading: true,
+  },
+};
+
+const stories = storiesOf('Devotional', module);
+
+stories.add('Example', () => (
+  <Devotional
+    body={content.body}
+    title={content.title}
+    isLoading={false}
+    scripture={scripture}
+    renderItem={renderItem}
+    loadingStateObject={loadingStateObject}
+  />
+));
+
+stories.add('isLoading', () => (
+  <Devotional
+    body={content.body}
+    title={content.title}
+    isLoading
+    scripture={scripture}
+    renderItem={renderItem}
+    loadingStateObject={loadingStateObject}
+  />
+));
diff --git a/apolloschurchapp/src/content-single/DevotionalContentItem/Devotional.tests.js b/apolloschurchapp/src/content-single/DevotionalContentItem/Devotional.tests.js
index efaffbd..59ed7e1 100644
--- a/apolloschurchapp/src/content-single/DevotionalContentItem/Devotional.tests.js
+++ b/apolloschurchapp/src/content-single/DevotionalContentItem/Devotional.tests.js
@@ -1,7 +1,7 @@
 import React from 'react';
 import renderer from 'react-test-renderer';
+import wait from 'waait';
 import Providers from 'apolloschurchapp/src/Providers';
-import { renderWithApolloData } from 'apolloschurchapp/src/utils/testUtils';
 import getContentItemContent from '../HTMLContent/getContentItemContent';
 import getScripture from './getScripture';
 import Devotional from '.';
@@ -66,7 +66,7 @@ const navigation = {
 
 describe('the Devotional component', () => {
   it('renders a devotional', async () => {
-    const tree = await renderWithApolloData(
+    const tree = renderer.create(
       <Providers mocks={mocks}>
         <Devotional
           id="1"
@@ -76,19 +76,16 @@ describe('the Devotional component', () => {
         />
       </Providers>
     );
+    await wait(0); // wait for response
     expect(tree).toMatchSnapshot();
   });
   it('renders even with empty scripture array', async () => {
-    const tree = await renderWithApolloData(
+    const tree = renderer.create(
       <Providers mocks={mocks}>
-        <Devotional
-          id="1"
-          content={content}
-          loading={false}
-          navigation={navigation}
-        />
+        <Devotional id="1" content={content} loading navigation={navigation} />
       </Providers>
     );
+    await wait(0); // wait for response
     expect(tree).toMatchSnapshot();
   });
   it('renders a loading state', async () => {
@@ -97,6 +94,7 @@ describe('the Devotional component', () => {
         <Devotional id="1" content={content} loading navigation={navigation} />
       </Providers>
     );
+    await wait(0); // wait for response
     expect(tree).toMatchSnapshot();
   });
 });
diff --git a/apolloschurchapp/src/content-single/DevotionalContentItem/ScriptureTab.js b/apolloschurchapp/src/content-single/DevotionalContentItem/ScriptureTab.js
index 79ef066..9458010 100644
--- a/apolloschurchapp/src/content-single/DevotionalContentItem/ScriptureTab.js
+++ b/apolloschurchapp/src/content-single/DevotionalContentItem/ScriptureTab.js
@@ -2,7 +2,7 @@ import React from 'react';
 import { ScrollView } from 'react-native';
 import PropTypes from 'prop-types';
 import { PaddedView } from '@apollosproject/ui-kit';
-import ScriptureItem from '@apollosproject/ui-scripture';
+import ScriptureItem from 'apolloschurchapp/src/ui/Scripture';
 import HorizontalContentFeed from '../HorizontalContentFeed';
 
 /**
diff --git a/apolloschurchapp/src/content-single/DevotionalContentItem/index.js b/apolloschurchapp/src/content-single/DevotionalContentItem/index.js
index 088bbdc..8544eba 100644
--- a/apolloschurchapp/src/content-single/DevotionalContentItem/index.js
+++ b/apolloschurchapp/src/content-single/DevotionalContentItem/index.js
@@ -1,6 +1,6 @@
 import React, { PureComponent } from 'react';
+import { SafeAreaView } from 'react-native';
 import PropTypes from 'prop-types';
-import { SafeAreaView } from 'react-navigation';
 import { Query } from 'react-apollo';
 
 import {
@@ -86,11 +86,10 @@ class DevotionalContentItem extends PureComponent {
     loading,
   }) => {
     if (error) return <ErrorCard error={error} />;
-
     // only include scriptures where the references are not null
-    const validScriptures = scriptures
-      ? scriptures.filter((scripture) => scripture.reference != null)
-      : [];
+    const validScriptures = scriptures.filter(
+      (scripture) => scripture.reference != null
+    );
 
     const hasScripture = loading || validScriptures.length;
     const tabRoutes = [{ title: 'Devotional', key: 'content' }];
@@ -109,7 +108,7 @@ class DevotionalContentItem extends PureComponent {
   render() {
     return (
       <BackgroundView>
-        <FlexedSafeAreaView forceInset={{ top: 'always' }}>
+        <FlexedSafeAreaView>
           <Query query={getScripture} variables={{ itemId: this.props.id }}>
             {this.renderTabs}
           </Query>
diff --git a/apolloschurchapp/src/content-single/HTMLContent/index.js b/apolloschurchapp/src/content-single/HTMLContent/index.js
index 39c62bc..4d4f384 100644
--- a/apolloschurchapp/src/content-single/HTMLContent/index.js
+++ b/apolloschurchapp/src/content-single/HTMLContent/index.js
@@ -2,7 +2,7 @@ import React from 'react';
 import PropTypes from 'prop-types';
 import { Query } from 'react-apollo';
 
-import HTMLView from '@apollosproject/ui-htmlview';
+import HTMLView from 'apolloschurchapp/src/ui/HTMLView';
 import { ErrorCard } from '@apollosproject/ui-kit';
 
 import getContentItemContent from './getContentItemContent';
diff --git a/apolloschurchapp/src/content-single/MediaControls/index.js b/apolloschurchapp/src/content-single/MediaControls/index.js
index 96ae490..994e4b0 100644
--- a/apolloschurchapp/src/content-single/MediaControls/index.js
+++ b/apolloschurchapp/src/content-single/MediaControls/index.js
@@ -4,7 +4,7 @@ import { Query, Mutation } from 'react-apollo';
 import { View } from 'react-native';
 import { get } from 'lodash';
 
-import { playVideoMutation } from '@apollosproject/ui-media-player';
+import { playVideoMutation } from 'apolloschurchapp/src/ui/MediaPlayer/mutations';
 import { Icon, styled, Button } from '@apollosproject/ui-kit';
 import getContentMedia from './getContentMedia';
 
diff --git a/apolloschurchapp/src/content-single/NavigationHeader.js b/apolloschurchapp/src/content-single/NavigationHeader.js
index a2e3204..50a10ff 100644
--- a/apolloschurchapp/src/content-single/NavigationHeader.js
+++ b/apolloschurchapp/src/content-single/NavigationHeader.js
@@ -4,7 +4,8 @@ import { ModalViewHeader } from '@apollosproject/ui-kit';
 
 const NavigationHeader = ({ scene, navigation }) => {
   let onBack = null;
-  if (scene.index > 0) onBack = () => navigation.goBack();
+  if (scene.index > 0) onBack = () => navigation.pop();
+
   const onClose = () => {
     // Since we're dealing with nested navigators, we have to trigger two actions:
     // One action that pops us to the top of the modal's navigation history
@@ -15,16 +16,11 @@ const NavigationHeader = ({ scene, navigation }) => {
     // handling for calling `.pop()` at the top of a nested navigators stack.
     //
     // Because react (or redux?) chains renders, this still results in only one clean animation!
-    //
-    // This "double pop" is only needed when we are already deep in a navigation stack.
-    // In ReactNavigation, we could look at using "goBack('ContentSingle')"
-    if (scene.index > 0) {
-      navigation.popToTop();
-    }
+    navigation.popToTop();
     navigation.pop();
   };
 
-  return <ModalViewHeader onClose={onClose} onBack={onBack} navigationHeader />;
+  return <ModalViewHeader onClose={onClose} onBack={onBack} />;
 };
 
 NavigationHeader.propTypes = {
diff --git a/apolloschurchapp/src/content-single/UniversalContentItem/index.js b/apolloschurchapp/src/content-single/UniversalContentItem/index.js
index 80c9aae..f34789c 100644
--- a/apolloschurchapp/src/content-single/UniversalContentItem/index.js
+++ b/apolloschurchapp/src/content-single/UniversalContentItem/index.js
@@ -18,14 +18,14 @@ const FlexedScrollView = styled({ flex: 1 })(ScrollView);
 const UniversalContentItem = ({ content, loading }) => {
   const coverImageSources = get(content, 'coverImage.sources', []);
   return (
-    <BackgroundView>
-      <FlexedScrollView>
-        {coverImageSources.length || loading ? (
-          <GradientOverlayImage
-            isLoading={!coverImageSources.length && loading}
-            source={coverImageSources}
-          />
-        ) : null}
+    <FlexedScrollView>
+      {coverImageSources.length || loading ? (
+        <GradientOverlayImage
+          isLoading={!coverImageSources.length && loading}
+          source={coverImageSources}
+        />
+      ) : null}
+      <BackgroundView>
         <MediaControls contentId={content.id} />
         <PaddedView>
           <H2 padded isLoading={!content.title && loading}>
@@ -34,8 +34,8 @@ const UniversalContentItem = ({ content, loading }) => {
           <HTMLContent contentId={content.id} />
         </PaddedView>
         <HorizontalContentFeed contentId={content.id} />
-      </FlexedScrollView>
-    </BackgroundView>
+      </BackgroundView>
+    </FlexedScrollView>
   );
 };
 
diff --git a/apolloschurchapp/src/content-single/getContentItem.js b/apolloschurchapp/src/content-single/getContentItem.js
index b4ebc19..40b8221 100644
--- a/apolloschurchapp/src/content-single/getContentItem.js
+++ b/apolloschurchapp/src/content-single/getContentItem.js
@@ -5,8 +5,6 @@ export const contentItemFragment = gql`
     id
     title
     isLiked
-    likedCount
-    summary
     coverImage {
       name
       sources {
diff --git a/apolloschurchapp/src/content-single/index.js b/apolloschurchapp/src/content-single/index.js
index 83072a7..f5b2709 100644
--- a/apolloschurchapp/src/content-single/index.js
+++ b/apolloschurchapp/src/content-single/index.js
@@ -1,20 +1,104 @@
-import { createStackNavigator } from 'react-navigation';
-
-import ContentSingle from './ContentSingle';
-
-const ContentSingleNavigator = createStackNavigator(
-  {
-    ContentSingle,
-  },
-  {
-    initialRouteName: 'ContentSingle',
-    headerMode: 'float',
-    headerTransitionPreset: 'fade-in-place',
+import React, { PureComponent } from 'react';
+import { Query } from 'react-apollo';
+import { get } from 'lodash';
+import PropTypes from 'prop-types';
+
+import { ErrorCard, ThemeMixin } from '@apollosproject/ui-kit';
+
+import TrackEventWhenLoaded from 'apolloschurchapp/src/analytics/TrackEventWhenLoaded';
+import { events } from 'apolloschurchapp/src/analytics';
+
+import ActionContainer from './ActionContainer';
+import getContentItem from './getContentItem';
+
+import DevotionalContentItem from './DevotionalContentItem';
+import UniversalContentItem from './UniversalContentItem';
+
+import NavigationHeader from './NavigationHeader';
+
+class ContentSingle extends PureComponent {
+  static propTypes = {
+    navigation: PropTypes.shape({
+      getParam: PropTypes.func,
+      push: PropTypes.func,
+    }),
+  };
+
+  static navigationOptions = {
+    header: NavigationHeader,
+  };
+
+  get itemId() {
+    return this.props.navigation.getParam('itemId', []);
   }
-);
 
-ContentSingleNavigator.navigationOptions = {
-  header: null,
-};
+  get queryVariables() {
+    return { itemId: this.itemId };
+  }
+
+  renderContent = ({ content, loading, error }) => {
+    let { __typename } = content;
+    if (!__typename && this.itemId) {
+      [__typename] = this.itemId.split(':');
+    }
+    switch (__typename) {
+      case 'DevotionalContentItem':
+        return (
+          <DevotionalContentItem
+            id={this.itemId}
+            content={content}
+            loading={loading}
+            error={error}
+          />
+        );
+      case 'UniversalContentItem':
+      default:
+        return (
+          <UniversalContentItem
+            id={this.itemId}
+            content={content}
+            loading={loading}
+            error={error}
+          />
+        );
+    }
+  };
+
+  renderWithData = ({ loading, error, data }) => {
+    if (error) return <ErrorCard error={error} />;
+
+    const content = data.node || {};
+
+    const { theme = {}, id } = content;
+
+    return (
+      <ThemeMixin
+        mixin={{
+          type: get(theme, 'type', 'light').toLowerCase(),
+          colors: get(theme, 'colors'),
+        }}
+      >
+        <TrackEventWhenLoaded
+          loaded={!!(!loading && content.title)}
+          eventName={events.ViewContent}
+          properties={{
+            title: content.title,
+            itemId: this.itemId,
+          }}
+        />
+        {this.renderContent({ content, loading, error })}
+        <ActionContainer itemId={id} />
+      </ThemeMixin>
+    );
+  };
+
+  render() {
+    return (
+      <Query query={getContentItem} variables={this.queryVariables}>
+        {this.renderWithData}
+      </Query>
+    );
+  }
+}
 
-export default ContentSingleNavigator;
+export default ContentSingle;
diff --git a/apolloschurchapp/src/index.js b/apolloschurchapp/src/index.js
index f3e2939..7fe89f1 100644
--- a/apolloschurchapp/src/index.js
+++ b/apolloschurchapp/src/index.js
@@ -1,51 +1,38 @@
 import React from 'react';
 import { StatusBar } from 'react-native';
 import { createStackNavigator } from 'react-navigation';
-import SplashScreen from 'react-native-splash-screen';
+// import { Sentry } from 'react-native-sentry';
 
 import { BackgroundView, withTheme } from '@apollosproject/ui-kit';
-import Passes from '@apollosproject/ui-passes';
-import { MediaPlayer } from '@apollosproject/ui-media-player';
-import Auth, { ProtectedRoute } from '@apollosproject/ui-auth';
-
+import MediaPlayer from 'apolloschurchapp/src/ui/MediaPlayer';
 import Providers from './Providers';
+import NotificationsInit from './Notifications';
 import NavigationService from './NavigationService';
 import ContentSingle from './content-single';
 import Tabs from './tabs';
+import Auth from './auth';
 import PersonalDetails from './user-settings/PersonalDetails';
 import ChangePassword from './user-settings/ChangePassword';
-import Location from './user-settings/Locations';
-import LandingScreen from './LandingScreen';
-import UserWebBrowser from './user-web-browser';
-import Onboarding from './ui/Onboarding';
+
+// Sentry.config(
+//   'https://5908fa19ed37447f86b2717423cadec5:45dd3b58792b413cb67109c5e63a0bb7@sentry.io/1241658'
+// ).install();
 
 const AppStatusBar = withTheme(({ theme }) => ({
   barStyle: 'dark-content',
   backgroundColor: theme.colors.paper,
 }))(StatusBar);
 
-const ProtectedRouteWithSplashScreen = (props) => {
-  const handleOnRouteChange = () => SplashScreen.hide();
-
-  return <ProtectedRoute {...props} onRouteChange={handleOnRouteChange} />;
-};
-
 const AppNavigator = createStackNavigator(
   {
-    ProtectedRoute: ProtectedRouteWithSplashScreen,
     Tabs,
     ContentSingle,
     Auth,
     PersonalDetails,
     ChangePassword,
-    Location,
-    Passes,
-    UserWebBrowser,
-    Onboarding,
-    LandingScreen,
   },
   {
-    initialRouteName: 'ProtectedRoute',
+    initialRouteName: 'Tabs',
     mode: 'modal',
     headerMode: 'screen',
   }
@@ -60,6 +47,7 @@ const App = () => (
           NavigationService.setTopLevelNavigator(navigatorRef);
         }}
       />
+      <NotificationsInit />
       <MediaPlayer />
     </BackgroundView>
   </Providers>
diff --git a/apolloschurchapp/src/scripture/index.js b/apolloschurchapp/src/scripture/index.js
index 4492e5c..5c7e682 100644
--- a/apolloschurchapp/src/scripture/index.js
+++ b/apolloschurchapp/src/scripture/index.js
@@ -2,7 +2,7 @@ import React from 'react';
 import { Query } from 'react-apollo';
 import { get } from 'lodash';
 import PropTypes from 'prop-types';
-import { ScriptureItem } from '@apollosproject/ui-scripture';
+import ScriptureItem from 'apolloschurchapp/src/ui/Scripture/ScriptureItem';
 import getScripture from './getScripture';
 
 /**
diff --git a/apolloschurchapp/src/store/Auth.tests.js b/apolloschurchapp/src/store/Auth.tests.js
new file mode 100644
index 0000000..da6b401
--- /dev/null
+++ b/apolloschurchapp/src/store/Auth.tests.js
@@ -0,0 +1,11 @@
+import { client } from 'apolloschurchapp/src/client';
+
+import { resolvers } from '.';
+
+describe('Auth Store', () => {
+  it('logs a user out', async () => {
+    client.cache.writeData({ data: { authToken: 'some-auth-token' } });
+    resolvers.Mutation.logout({}, {}, { cache: client.cache });
+    expect(client.cache).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/store/MediaPlayer.tests.js b/apolloschurchapp/src/store/MediaPlayer.tests.js
new file mode 100644
index 0000000..68724b9
--- /dev/null
+++ b/apolloschurchapp/src/store/MediaPlayer.tests.js
@@ -0,0 +1,58 @@
+import { client } from 'apolloschurchapp/src/client';
+import gql from 'graphql-tag';
+
+import { resolvers, defaults } from '.';
+
+const query = gql`
+  query {
+    mediaPlayer @client {
+      currentTrack {
+        mediaSourceUri
+        posterSourceUri
+        title
+        artist
+      }
+      isPlaying
+      isFullscreen
+      isVisible
+    }
+  }
+`;
+
+const testTrack = {
+  parentId: 'parentId',
+  mediaSourceUri: 'mediaSourceUri',
+  posterSourceUri: 'posterSourceUri',
+  title: 'title',
+  artist: 'artist',
+};
+
+describe('MediaPlayer Store', () => {
+  beforeEach(() => {
+    client.writeData({ data: defaults });
+  });
+
+  it('plays a track', async () => {
+    resolvers.Mutation.mediaPlayerPlayNow({}, testTrack, {
+      cache: client.cache,
+    });
+    expect(client.query({ query })).resolves.toMatchSnapshot();
+  });
+  it('updates player state', async () => {
+    resolvers.Mutation.mediaPlayerPlayNow({}, testTrack, {
+      cache: client.cache,
+    });
+    expect(client.query({ query })).resolves.toMatchSnapshot();
+    resolvers.Mutation.mediaPlayerUpdateState(
+      {},
+      { isPlaying: false },
+      { cache: client.cache }
+    );
+    expect(client.query({ query })).resolves.toMatchSnapshot();
+    resolvers.Mutation.mediaPlayerUpdateState(
+      {},
+      { isPlaying: true },
+      { cache: client.cache }
+    );
+  });
+});
diff --git a/apolloschurchapp/src/store/index.js b/apolloschurchapp/src/store/index.js
index 336839b..2873934 100644
--- a/apolloschurchapp/src/store/index.js
+++ b/apolloschurchapp/src/store/index.js
@@ -1,62 +1,242 @@
+import { merge, get } from 'lodash';
 import gql from 'graphql-tag';
-
-import { schema as mediaPlayerSchema } from '@apollosproject/ui-media-player';
-import { updatePushId } from '@apollosproject/ui-notifications';
-import { CACHE_LOADED } from '../client/cache'; // eslint-disable-line
-
+import getLoginState from 'apolloschurchapp/src/auth/getLoginState';
+import { track, events } from 'apolloschurchapp/src/analytics';
+import { client } from '../client'; // eslint-disable-line
+import getAuthToken from './getAuthToken';
 // TODO: this will require more organization...ie...not keeping everything in one file.
 // But this is simple while our needs our small.
 
 export const schema = `
   type Query {
-    devicePushId: String
-    cacheLoaded: Boolean
-    notificationsEnabled: Boolean
+    authToken: String
+    mediaPlayer: MediaPlayerState
+    isLoggedIn: Boolean
   }
 
   type Mutation {
-    cacheMarkLoaded
-    updateDevicePushId(pushId: String!)
-    updatePushPermissions(enabled: Boolean!)
+    logout
+    mediaPlayerUpdateState(isPlaying: Boolean, isFullscreen: Boolean, isVisible: Boolean): Boolean
+    mediaPlayerSetPlayhead(currentTime: Float): Boolean
+    mediaPlayerPlayNow(
+      parentId: ID,
+      mediaSource: VideoMediaSource!,
+      posterSources: [ImageMediaSource],
+      title: String,
+      artist: String,
+      isVideo: Boolean,
+    ): Boolean
+
+    handleLogin(authToken: String!)
+  }
+
+  type MediaPlayerState {
+    currentTrack: MediaPlayerTrack
+    isPlaying: Boolean
+    isFullscreen: Boolean
+    isVisible: Boolean
+    currentTime: Float
+  }
+
+  type MediaPlayerProgress {
+    currentTime: Float
+    playableDuration: Float
+    seekableDuration: Float
+    duration: Float
+  }
+
+  type MediaPlayerTrack {
+    id: ID!
+    parentId: ID
+    mediaSource: VideoMediaSource!
+    posterSources: [ImageMediaSource]
+    title: String
+    artist: String
+    isVideo: Boolean
   }
-${mediaPlayerSchema}
 `;
 
 export const defaults = {
   __typename: 'Query',
-  cacheLoaded: false,
+  authToken: null,
+  mediaPlayer: {
+    __typename: 'MediaPlayerState',
+    currentTrack: null,
+    isPlaying: false,
+    isFullscreen: false,
+    isVisible: false,
+    currentTime: 0,
+    showVideo: true,
+    muted: false,
+  },
 };
 
-const getIsLoggedIn = gql`
-  query {
-    isLoggedIn @client
-  }
-`;
+let trackId = 0;
 
 export const resolvers = {
+  Query: {
+    isLoggedIn: () => {
+      // When logging out, this query returns an error.
+      // Rescue the error, and return false.
+      try {
+        const { authToken } = client.readQuery({ query: getAuthToken });
+        return !!authToken;
+      } catch (e) {
+        return false;
+      }
+    },
+  },
   Mutation: {
-    cacheMarkLoaded: async (root, args, { cache, client }) => {
-      cache.writeQuery({
-        query: CACHE_LOADED,
+    logout: (root, variables, { cache }) => {
+      client.resetStore();
+      cache.writeData({
+        data: defaults,
+      });
+      track({ eventName: events.UserLogout });
+      return null;
+    },
+
+    handleLogin: async (root, { authToken }, { cache }) => {
+      try {
+        await cache.writeQuery({
+          query: getAuthToken,
+          data: { authToken },
+        });
+        await cache.writeQuery({
+          query: getLoginState,
+          data: { isLoggedIn: true },
+        });
+        await cache.writeData({
+          data: { authToken },
+        });
+
+        track({ eventName: events.UserLogin });
+      } catch (e) {
+        throw e.message;
+      }
+
+      return null;
+    },
+
+    mediaPlayerPlayNow: (root, trackInfo, { cache }) => {
+      const query = gql`
+        query {
+          mediaPlayer {
+            isFullscreen
+          }
+        }
+      `;
+      const mediaTrack = merge(
+        {
+          __typename: 'MediaPlayerTrack',
+          parentId: null,
+          mediaSource: null,
+          posterSources: null,
+          title: null,
+          artist: null,
+          isVideo: false,
+        },
+        trackInfo
+      );
+
+      const { mediaPlayer } = cache.readQuery({ query });
+
+      const newMediaPlayerState = {
+        __typename: 'MediaPlayerState',
+        isPlaying: true,
+        isVisible: true,
+        isFullscreen: mediaTrack.isVideo
+          ? true
+          : (mediaPlayer && mediaPlayer.isFullscreen) || false,
+        currentTrack: mediaTrack,
+        currentTime: 0,
+        showVideo: mediaTrack.isVideo,
+        muted: false,
+      };
+
+      if (
+        // if same track
+        mediaPlayer &&
+        mediaPlayer.currentTrack &&
+        mediaPlayer.currentTrack.mediaSource.uri === mediaTrack.mediaSource.uri
+      ) {
+        // use the same Id
+        newMediaPlayerState.currentTrack.id = mediaPlayer.currentTrack.id;
+      } else {
+        // otherwise reset progress and use new Id
+        newMediaPlayerState.currentTrack.id = trackId;
+        newMediaPlayerState.progress = null;
+        trackId += 1;
+      }
+
+      cache.writeData({
+        query,
         data: {
-          cacheLoaded: true,
+          mediaPlayer: newMediaPlayerState,
         },
       });
-      const { data: { isLoggedIn } = {} } = await client.query({
-        query: getIsLoggedIn,
-      });
 
-      const { pushId } = cache.readQuery({
-        query: gql`
-          query {
-            pushId @client
+      track({
+        eventName: events.UserPlayedMedia,
+        properties: {
+          uri: mediaTrack.uri,
+          title: mediaTrack.title,
+          type: mediaTrack.isVideo ? 'Video' : 'Audio',
+        },
+      });
+      return null;
+    },
+    mediaPlayerUpdateState: (
+      root,
+      { isPlaying, isFullscreen, isVisible, showVideo, muted },
+      { cache }
+    ) => {
+      const query = gql`
+        query {
+          mediaPlayer @client {
+            isPlaying
+            isFullscreen
+            isVisible
+            showVideo
+            muted
           }
-        `,
+        }
+      `;
+      const { mediaPlayer } = cache.readQuery({ query });
+      cache.writeQuery({
+        query,
+        data: {
+          mediaPlayer: merge(mediaPlayer, {
+            isPlaying,
+            isFullscreen,
+            isVisible,
+            showVideo,
+            muted,
+            __typename: 'MediaPlayerState',
+          }),
+        },
+      });
+      return null;
+    },
+    mediaPlayerSetPlayhead: (root, { currentTime }, { cache }) => {
+      const query = gql`
+        query {
+          mediaPlayer @client {
+            currentTime
+          }
+        }
+      `;
+      const { mediaPlayer } = cache.readQuery({ query });
+      cache.writeQuery({
+        query,
+        data: {
+          mediaPlayer: {
+            __typename: 'MediaPlayerState',
+            currentTime:
+              currentTime || get(mediaPlayer.progress, 'currentTime') || 0,
+          },
+        },
       });
-
-      if (isLoggedIn && pushId) {
-        updatePushId({ pushId, client });
-      }
       return null;
     },
   },
diff --git a/apolloschurchapp/src/tabs/connect/Connect.js b/apolloschurchapp/src/tabs/connect/Connect.js
index 79bb6df..8de06b1 100644
--- a/apolloschurchapp/src/tabs/connect/Connect.js
+++ b/apolloschurchapp/src/tabs/connect/Connect.js
@@ -4,7 +4,7 @@ import { Query } from 'react-apollo';
 import { get } from 'lodash';
 import PropTypes from 'prop-types';
 
-import { LoginButton } from '@apollosproject/ui-auth';
+import { LoginButton } from 'apolloschurchapp/src/auth';
 import {
   H1,
   BodyText,
@@ -16,7 +16,6 @@ import {
   PaddedView,
 } from '@apollosproject/ui-kit';
 import ActionTable from './ActionTable';
-import Toolbar from './Toolbar';
 import { UserAvatarHeaderConnected } from './UserAvatarHeader';
 import { RecentlyLikedTileFeedConnected } from './RecentlyLikedTileFeed';
 import getLoginState from './getLoginState';
@@ -43,10 +42,6 @@ const StyledLoginButton = styled(({ theme }) => ({
   marginVertical: theme.sizing.baseUnit,
 }))(LoginButton);
 
-const StyledScrollView = styled(({ theme }) => ({
-  marginVertical: theme.sizing.baseUnit,
-}))(ScrollView);
-
 class Connect extends PureComponent {
   static navigationOptions = () => ({
     title: 'Connect',
@@ -68,12 +63,11 @@ class Connect extends PureComponent {
             if (get(data, 'isLoggedIn', false))
               return (
                 <SafeAreaView>
-                  <StyledScrollView>
+                  <ScrollView>
                     <UserAvatarHeaderConnected key="UserAvatarHeaderConnected" />
                     <RecentlyLikedTileFeedConnected key="RecentlyLikedTileFeedConnected" />
-                    <Toolbar />
                     <ActionTable />
-                  </StyledScrollView>
+                  </ScrollView>
                 </SafeAreaView>
               );
             return (
diff --git a/apolloschurchapp/src/tabs/connect/LikedContentList/LikedContentList.tests.js b/apolloschurchapp/src/tabs/connect/LikedContentList/LikedContentList.tests.js
index 78a32c7..f6fadb7 100644
--- a/apolloschurchapp/src/tabs/connect/LikedContentList/LikedContentList.tests.js
+++ b/apolloschurchapp/src/tabs/connect/LikedContentList/LikedContentList.tests.js
@@ -15,7 +15,7 @@ describe('LikedContentList component', () => {
       },
       result: {
         data: {
-          likedContent: [
+          getAllLikedContent: [
             {
               __typename: 'UniversalContentItem',
               id: 'UniversalContentItem:4148aeb9482181025e9cad42826e676a',
diff --git a/apolloschurchapp/src/tabs/connect/LikedContentList/index.js b/apolloschurchapp/src/tabs/connect/LikedContentList/index.js
index 7ef1232..2fd7fda 100644
--- a/apolloschurchapp/src/tabs/connect/LikedContentList/index.js
+++ b/apolloschurchapp/src/tabs/connect/LikedContentList/index.js
@@ -1,10 +1,8 @@
 import React, { PureComponent } from 'react';
 import PropTypes from 'prop-types';
 import { Query } from 'react-apollo';
-import { get } from 'lodash';
 
 import { BackgroundView, FeedView } from '@apollosproject/ui-kit';
-import fetchMoreResolver from 'apolloschurchapp/src/utils/fetchMoreResolver';
 import ContentCardConnected from '../../../ui/ContentCardConnected';
 
 import getLikedContent from '../getLikedContent';
@@ -37,27 +35,16 @@ class LikedContentList extends PureComponent {
   render() {
     return (
       <BackgroundView>
-        <Query
-          query={getLikedContent}
-          fetchPolicy="cache-and-network"
-          variables={{ first: 20 }}
-        >
-          {({ loading, error, data, refetch, fetchMore, variables }) => (
+        <Query query={getLikedContent} fetchPolicy="cache-and-network">
+          {({ loading, error, data: { getAllLikedContent = [] }, refetch }) => (
             <FeedView
               ListItemComponent={ContentCardConnected}
-              content={get(data, 'likedContent.edges', []).map(
-                (edge) => edge.node
-              )}
+              initialNumToRender={5}
+              content={getAllLikedContent}
               isLoading={loading}
               error={error}
               refetch={refetch}
               onPressItem={this.handleOnPress}
-              fetchMore={fetchMoreResolver({
-                collectionName: 'likedContent',
-                fetchMore,
-                variables,
-                data,
-              })}
             />
           )}
         </Query>
diff --git a/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeed.js b/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeed.js
index dc2e2b2..8b4437d 100644
--- a/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeed.js
+++ b/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeed.js
@@ -4,49 +4,32 @@ import { withNavigation } from 'react-navigation';
 import PropTypes from 'prop-types';
 
 import {
-  styled,
-  withTheme,
   PaddedView,
-  H5,
-  H6,
+  H4,
+  UIText,
   HorizontalTileFeed,
+  styled,
   ButtonLink,
-  TouchableScale,
-  Touchable,
   withIsLoading,
+  TouchableScale,
 } from '@apollosproject/ui-kit';
 
 import ContentCard from 'apolloschurchapp/src/ui/ContentCardConnected';
 
-const RowHeader = styled(({ theme }) => ({
+const RowHeader = styled({
   flexDirection: 'row',
   justifyContent: 'space-between',
   alignItems: 'center',
-  zIndex: 2, // UX hack to improve tapability. Positions RowHeader above StyledHorizontalTileFeed
-  paddingTop: theme.sizing.baseUnit * 0.5,
-  paddingLeft: theme.sizing.baseUnit,
-}))(View);
+  paddingVertical: 0,
+})(PaddedView);
 
 const Name = styled({
-  flexGrow: 2,
+  flexGrow: 1,
 })(View);
 
-const ButtonLinkSpacing = styled(({ theme }) => ({
-  flexDirection: 'row', // correctly positions the loading state
-  justifyContent: 'flex-end', // correctly positions the loading state
-  padding: theme.sizing.baseUnit, // UX hack to improve tapability.
-}))(View);
-
-const AndroidTouchableFix = withTheme(({ theme }) => ({
-  borderRadius: theme.sizing.baseUnit / 2,
-}))(Touchable);
-
-const StyledHorizontalTileFeed = styled(({ theme }) => ({
-  /* UX hack to improve tapability. The magic number below happens to be the number of pixels that
-   * aligns everything in the same place as if none of the UX hacks were there. */
-  marginTop: theme.sizing.baseUnit * -1.25,
-  zIndex: 1,
-}))(HorizontalTileFeed);
+const LikedContentLink = styled({
+  flexDirection: 'row-reverse',
+})(View);
 
 class RecentlyLikedTileFeed extends Component {
   static propTypes = {
@@ -90,23 +73,21 @@ class RecentlyLikedTileFeed extends Component {
       <PaddedView horizontal={false}>
         <RowHeader>
           <Name>
-            <H5>{name}</H5>
+            <H4 isLoading={isLoading}>{name}</H4>
           </Name>
-
-          <AndroidTouchableFix
-            onPress={() => {
-              navigation.navigate('LikedContentList');
-            }}
-          >
-            <ButtonLinkSpacing>
-              <H6>
-                {/* we have to wrap "View All" in a ButtonLink twice to inherit styles and color correctly. */}
-                <ButtonLink>View All</ButtonLink>
-              </H6>
-            </ButtonLinkSpacing>
-          </AndroidTouchableFix>
+          <LikedContentLink>
+            <UIText isLoading={isLoading}>
+              <ButtonLink
+                onPress={() => {
+                  navigation.navigate('LikedContentList');
+                }}
+              >
+                View All
+              </ButtonLink>
+            </UIText>
+          </LikedContentLink>
         </RowHeader>
-        <StyledHorizontalTileFeed
+        <HorizontalTileFeed
           initialNumToRender={5}
           content={content}
           renderItem={this.titleImageItem}
diff --git a/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeedConnected.js b/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeedConnected.js
index 7527d53..a86843d 100644
--- a/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeedConnected.js
+++ b/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeedConnected.js
@@ -6,21 +6,14 @@ import getLikedContent from '../getLikedContent';
 import RecentlyLikedTileFeed from './RecentlyLikedTileFeed';
 
 const RecentlyLikedTileFeedConnected = ({ navigation }) => (
-  <Query
-    query={getLikedContent}
-    fetchPolicy="cache-and-network"
-    variables={{ first: 3 }}
-  >
-    {({
-      loading,
-      data: { likedContent: { edges = [] } = { edges: [] } } = {},
-    }) => {
-      if (!edges.length) return null;
+  <Query query={getLikedContent} fetchPolicy="cache-and-network">
+    {({ loading, data: { getAllLikedContent = [] } = {} }) => {
+      if (!getAllLikedContent.length) return null;
       return (
         <RecentlyLikedTileFeed
           id={'liked'}
           name={'Recently Liked'}
-          content={edges.map((e) => e.node)}
+          content={getAllLikedContent}
           isLoading={loading}
           navigation={navigation}
           loadingStateObject={{
diff --git a/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeedConnected.tests.js b/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeedConnected.tests.js
index 19c91cf..20e6417 100644
--- a/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeedConnected.tests.js
+++ b/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeedConnected.tests.js
@@ -15,7 +15,7 @@ describe('RecentlyLikedTileFeedConnected', () => {
       },
       result: {
         data: {
-          likedContent: [
+          getAllLikedContent: [
             {
               id: 'UniversalContentItem:296373ecb53580855cadffa0375ebe18',
               __typename: 'UniversalContentItem',
@@ -91,7 +91,7 @@ describe('RecentlyLikedTileFeedConnected', () => {
       },
       result: {
         data: {
-          likedContent: [],
+          getAllLikedContent: [],
         },
       },
     };
diff --git a/apolloschurchapp/src/tabs/connect/Toolbar.js b/apolloschurchapp/src/tabs/connect/Toolbar.js
deleted file mode 100644
index 159180e..0000000
--- a/apolloschurchapp/src/tabs/connect/Toolbar.js
+++ /dev/null
@@ -1,33 +0,0 @@
-import React from 'react';
-import {
-  TableView,
-  Cell,
-  CellIcon,
-  CellText,
-  Touchable,
-} from '@apollosproject/ui-kit';
-import { withNavigation } from 'react-navigation';
-import PropTypes from 'prop-types';
-
-const Toolbar = ({ navigation }) => (
-  <TableView>
-    <Touchable
-      onPress={() => {
-        navigation.navigate('Passes');
-      }}
-    >
-      <Cell>
-        <CellIcon name="check" />
-        <CellText>Check-in</CellText>
-      </Cell>
-    </Touchable>
-  </TableView>
-);
-
-Toolbar.propTypes = {
-  navigation: PropTypes.shape({
-    navigate: PropTypes.func.isRequired,
-  }).isRequired,
-};
-
-export default withNavigation(Toolbar);
diff --git a/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeader.js b/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeader.js
index caa56cb..1484a66 100644
--- a/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeader.js
+++ b/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeader.js
@@ -8,6 +8,7 @@ import UserAvatarView from 'apolloschurchapp/src/ui/UserAvatarView';
 import {
   withIsLoading,
   Touchable,
+  ConnectedImage,
   Icon,
   withTheme,
   styled,
@@ -33,6 +34,8 @@ const UserAvatarHeader = ({
   firstName,
   lastName,
   location,
+  photo,
+  refetch,
   navigation,
   disabled,
   isLoading,
@@ -43,11 +46,15 @@ const UserAvatarHeader = ({
         firstName={firstName}
         lastName={lastName}
         location={location}
+        photo={photo}
+        refetch={refetch}
         disabled={disabled}
         isLoading={isLoading}
       />
     </FlexedView>
-    <Touchable onPress={() => navigation.navigate('UserSettings')}>
+    <Touchable
+      onPress={() => navigation.navigate('UserSettings', { photo, refetch })}
+    >
       <SettingsIcon />
     </Touchable>
   </Container>
@@ -57,6 +64,8 @@ UserAvatarHeader.propTypes = {
   firstName: PropTypes.string,
   lastName: PropTypes.string,
   location: PropTypes.string,
+  photo: ConnectedImage.propTypes.source,
+  refetch: PropTypes.func,
   navigation: PropTypes.shape({
     getParam: PropTypes.func,
     navigate: PropTypes.func,
diff --git a/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeaderConnected.js b/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeaderConnected.js
index 397a879..599f719 100644
--- a/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeaderConnected.js
+++ b/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeaderConnected.js
@@ -1,7 +1,6 @@
 import React from 'react';
 import { Query } from 'react-apollo';
 import PropTypes from 'prop-types';
-import { get } from 'lodash';
 
 import getUserProfile from '../getUserProfile';
 import UserAvatarHeader from './UserAvatarHeader';
@@ -11,7 +10,7 @@ const UserAvatarHeaderConnected = ({ navigation }) => (
     {({
       data: {
         currentUser: {
-          profile: { photo, firstName, lastName, campus } = {},
+          profile: { photo, firstName, lastName, location } = {},
         } = {},
       } = {},
       refetch,
@@ -19,7 +18,7 @@ const UserAvatarHeaderConnected = ({ navigation }) => (
       <UserAvatarHeader
         firstName={firstName}
         lastName={lastName}
-        location={get(campus, 'name')}
+        location={location}
         photo={photo}
         refetch={refetch}
         navigation={navigation}
diff --git a/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeaderConnected.tests.js b/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeaderConnected.tests.js
index b4bad0c..e0a8488 100644
--- a/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeaderConnected.tests.js
+++ b/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeaderConnected.tests.js
@@ -1,5 +1,6 @@
 import React from 'react';
-import { renderWithApolloData } from 'apolloschurchapp/src/utils/testUtils';
+import renderer from 'react-test-renderer';
+import wait from 'waait';
 
 import Providers from 'apolloschurchapp/src/Providers';
 
@@ -15,37 +16,16 @@ describe('user avatar header connect', () => {
       result: {
         data: {
           currentUser: {
-            __typename: 'AuthenticatedUser',
-            id: 'AuthenticatedUser:123',
+            id: 'AuthenticatedUser:057b0758543270d1cb21784cac4d3f5c',
             profile: {
-              id: 'Person:123',
-              __typename: 'Person',
-              gender: 'Male',
-              birthDate: '1980-02-10T00:00:00',
               firstName: 'Isaac',
               lastName: 'Hardy',
-              campus: {
-                __typename: 'Campus',
-                id: 'Campus:a0f64573eabf00a607bec911794d50fb',
-                name: 'Chicago Campus',
-                latitude: 42.09203,
-                longitude: -88.13289,
-                distanceFromLocation: null,
-                street1: '67 Algonquin Rd',
-                street2: '',
-                city: 'South Barrington',
-                state: 'IL',
-                postalCode: '60010-6143',
-                image: {
-                  __typename: 'ImageMediaSource',
-                  uri: 'https://picsum.photos/300/300/?random',
-                },
-              },
+              location: 'Anderson, SC',
               email: 'isaac.hardy@newspring.cc',
-              nickName: 'Batman',
+              nickName: 'Ike',
               photo: {
-                __typename: 'ImageMediaSource',
-                uri: 'https://some-uri.com/test.jpg',
+                uri:
+                  'https://apollosrock.newspring.cc:443/GetImage.ashx?guid=60fd5f35-3167-4c26-9a30-d44937287b87',
               },
             },
           },
@@ -53,11 +33,12 @@ describe('user avatar header connect', () => {
       },
     };
     const navigation = { navigate: jest.fn(), getParam: jest.fn() };
-    const tree = await renderWithApolloData(
+    const tree = renderer.create(
       <Providers mocks={[mock]}>
         <UserAvatarHeaderConnected navigation={navigation} />
       </Providers>
     );
+    await wait(0); // wait for response from graphql
     expect(tree).toMatchSnapshot();
   });
 });
diff --git a/apolloschurchapp/src/tabs/connect/getLikedContent.js b/apolloschurchapp/src/tabs/connect/getLikedContent.js
index 5e4e1f9..0252dd1 100644
--- a/apolloschurchapp/src/tabs/connect/getLikedContent.js
+++ b/apolloschurchapp/src/tabs/connect/getLikedContent.js
@@ -4,18 +4,11 @@ import { largeCardFragment } from 'apolloschurchapp/src/ui/ContentCardConnected'
 import { contentItemFragment } from 'apolloschurchapp/src/content-single/getContentItem';
 
 export default gql`
-  query getAllLikedContent($first: Int, $after: String) {
-    likedContent(first: $first, after: $after) {
-      pageInfo {
-        endCursor
-      }
-      edges {
-        node {
-          ... on ContentItem {
-            ...contentItemFragment
-            ...largeCardFragment
-          }
-        }
+  query getAllLikedContent {
+    getAllLikedContent {
+      ... on ContentItem {
+        ...contentItemFragment
+        ...largeCardFragment
       }
     }
   }
diff --git a/apolloschurchapp/src/tabs/connect/getUserProfile.js b/apolloschurchapp/src/tabs/connect/getUserProfile.js
index ef3b2c8..b591a5b 100644
--- a/apolloschurchapp/src/tabs/connect/getUserProfile.js
+++ b/apolloschurchapp/src/tabs/connect/getUserProfile.js
@@ -1,26 +1,19 @@
 import gql from 'graphql-tag';
-import CampusParts from 'apolloschurchapp/src/user-settings/Locations/campusFragment';
 
 export default gql`
-  query getCurrentUserProfile {
+  query {
     currentUser {
       id
       profile {
-        id
         firstName
         lastName
-        campus {
-          ...CampusParts
-        }
+        location
         email
         nickName
-        gender
-        birthDate
         photo {
           uri
         }
       }
     }
   }
-  ${CampusParts}
 `;
diff --git a/apolloschurchapp/src/tabs/discover/TileContentFeed.js b/apolloschurchapp/src/tabs/discover/TileContentFeed.js
index 656cf7f..4470a03 100644
--- a/apolloschurchapp/src/tabs/discover/TileContentFeed.js
+++ b/apolloschurchapp/src/tabs/discover/TileContentFeed.js
@@ -1,51 +1,24 @@
 import React from 'react';
-import { View } from 'react-native';
 import { withNavigation } from 'react-navigation';
 import PropTypes from 'prop-types';
 
 import {
-  styled,
-  withTheme,
-  H5,
-  H6,
+  PaddedView,
+  H4,
   HorizontalTileFeed,
+  styled,
   ButtonLink,
   TouchableScale,
-  Touchable,
-  withIsLoading,
 } from '@apollosproject/ui-kit';
 
 import ContentCardConnected from '../../ui/ContentCardConnected';
 
-const RowHeader = styled(({ theme }) => ({
+const RowHeader = styled({
   flexDirection: 'row',
   justifyContent: 'space-between',
   alignItems: 'center',
-  zIndex: 2, // UX hack to improve tapability. Positions RowHeader above StyledHorizontalTileFeed
-  paddingTop: theme.sizing.baseUnit * 0.5,
-  paddingLeft: theme.sizing.baseUnit,
-}))(View);
-
-const Name = styled({
-  flexGrow: 2,
-})(View);
-
-const AndroidTouchableFix = withTheme(({ theme }) => ({
-  borderRadius: theme.sizing.baseUnit / 2,
-}))(Touchable);
-
-const ButtonLinkSpacing = styled(({ theme }) => ({
-  flexDirection: 'row', // correctly positions the loading state
-  justifyContent: 'flex-end', // correctly positions the loading state
-  padding: theme.sizing.baseUnit, // UX hack to improve tapability.
-}))(View);
-
-const StyledHorizontalTileFeed = styled(({ theme }) => ({
-  /* UX hack to improve tapability. The magic number below happens to be the number of pixels that
-   * aligns everything in the same place as if none of the UX hacks were there. */
-  marginTop: theme.sizing.baseUnit * -1.25,
-  zIndex: 1,
-}))(HorizontalTileFeed);
+  paddingBottom: 0,
+})(PaddedView);
 
 const loadingStateObject = {
   id: 'fake_id',
@@ -54,27 +27,23 @@ const loadingStateObject = {
 };
 
 const TileContentFeed = ({ isLoading, id, name, navigation, content = [] }) => (
-  <>
+  <PaddedView horizontal={false}>
     <RowHeader>
-      <Name>
-        <H5>{name}</H5>
-      </Name>
-      <AndroidTouchableFix
-        onPress={() => {
-          navigation.navigate('ContentFeed', {
-            itemId: id,
-            itemTitle: name,
-          });
-        }}
-      >
-        <ButtonLinkSpacing>
-          <H6>
-            <ButtonLink>View All</ButtonLink>
-          </H6>
-        </ButtonLinkSpacing>
-      </AndroidTouchableFix>
+      <H4 isLoading={isLoading}>{name}</H4>
+      {!isLoading ? (
+        <ButtonLink
+          onPress={() => {
+            navigation.navigate('ContentFeed', {
+              itemId: id,
+              itemTitle: name,
+            });
+          }}
+        >
+          View All
+        </ButtonLink>
+      ) : null}
     </RowHeader>
-    <StyledHorizontalTileFeed
+    <HorizontalTileFeed
       content={content}
       renderItem={({ item }) => (
         <TouchableScale
@@ -95,7 +64,7 @@ const TileContentFeed = ({ isLoading, id, name, navigation, content = [] }) => (
       loadingStateObject={loadingStateObject}
       isLoading={isLoading}
     />
-  </>
+  </PaddedView>
 );
 
 TileContentFeed.propTypes = {
@@ -110,4 +79,4 @@ TileContentFeed.propTypes = {
   ),
 };
 
-export default withNavigation(withIsLoading(TileContentFeed));
+export default withNavigation(TileContentFeed);
diff --git a/apolloschurchapp/src/tabs/home/Home.js b/apolloschurchapp/src/tabs/home/Home.js
index 74f520b..bb09a97 100644
--- a/apolloschurchapp/src/tabs/home/Home.js
+++ b/apolloschurchapp/src/tabs/home/Home.js
@@ -5,24 +5,12 @@ import SafeAreaView from 'react-native-safe-area-view';
 import { get } from 'lodash';
 import PropTypes from 'prop-types';
 
-import {
-  styled,
-  FeedView,
-  BackgroundView,
-  H3,
-  H6,
-  TouchableScale,
-} from '@apollosproject/ui-kit';
-
-import fetchMoreResolver from '../../utils/fetchMoreResolver';
+import { styled, FeedView, BackgroundView } from '@apollosproject/ui-kit';
 import ContentCardConnected from '../../ui/ContentCardConnected';
 
 import { LiveButton } from '../../live';
 
-import ContentTableCard from '../../ui/ContentTableCard';
 import getUserFeed from './getUserFeed';
-import getPersonaFeed from './getPersonaFeed';
-import getCampaignContentItem from './getCampaignContentItem';
 
 const LogoTitle = styled(({ theme }) => ({
   height: theme.sizing.baseUnit,
@@ -31,10 +19,6 @@ const LogoTitle = styled(({ theme }) => ({
   resizeMode: 'contain',
 }))(Image);
 
-const StyledH6 = styled(({ theme }) => ({
-  color: theme.colors.text.tertiary,
-}))(H6);
-
 class Home extends PureComponent {
   static navigationOptions = () => ({
     header: null,
@@ -58,26 +42,13 @@ class Home extends PureComponent {
     return (
       <BackgroundView>
         <SafeAreaView>
-          <Query
-            query={getUserFeed}
-            variables={{
-              first: 10,
-              after: null,
-            }}
-            fetchPolicy="cache-and-network"
-          >
-            {({ loading, error, data, refetch, fetchMore, variables }) => (
+          <Query query={getUserFeed} fetchPolicy="cache-and-network">
+            {({ loading, error, data, refetch }) => (
               <FeedView
                 ListItemComponent={ContentCardConnected}
                 content={get(data, 'userFeed.edges', []).map(
                   (edge) => edge.node
                 )}
-                fetchMore={fetchMoreResolver({
-                  collectionName: 'userFeed',
-                  fetchMore,
-                  variables,
-                  data,
-                })}
                 isLoading={loading}
                 error={error}
                 refetch={refetch}
@@ -85,70 +56,6 @@ class Home extends PureComponent {
                   <>
                     <LogoTitle source={require('./wordmark.png')} />
                     <LiveButton />
-                    <Query
-                      query={getCampaignContentItem}
-                      fetchPolicy="cache-and-network"
-                    >
-                      {({ data: featuredData, loading: isFeaturedLoading }) => {
-                        const featuredContent = get(
-                          featuredData,
-                          'campaigns.edges',
-                          []
-                        ).map((edge) => edge.node);
-
-                        const featuredItem = get(
-                          featuredContent[0],
-                          'childContentItemsConnection.edges[0].node',
-                          {}
-                        );
-
-                        return (
-                          <TouchableScale
-                            onPress={() =>
-                              this.handleOnPress({ id: featuredItem.id })
-                            }
-                          >
-                            <ContentCardConnected
-                              contentId={featuredItem.id}
-                              isLoading={isFeaturedLoading}
-                            />
-                          </TouchableScale>
-                        );
-                      }}
-                    </Query>
-                    <Query
-                      query={getPersonaFeed}
-                      fetchPolicy="cache-and-network"
-                    >
-                      {({
-                        data: personaData,
-                        loading: isContentTableLoading,
-                      }) => (
-                        <ContentTableCard
-                          isLoading={isContentTableLoading}
-                          onPress={this.handleOnPress}
-                          header={
-                            <>
-                              <StyledH6 isLoading={isContentTableLoading}>
-                                FOR YOU
-                              </StyledH6>
-                              <H3
-                                isLoading={isContentTableLoading}
-                                numberOfLines={3}
-                                ellipsizeMode="tail"
-                              >
-                                Explore what God calls you to today
-                              </H3>
-                            </>
-                          }
-                          content={get(
-                            personaData,
-                            'personaFeed.edges',
-                            []
-                          ).map((edge) => edge.node)}
-                        />
-                      )}
-                    </Query>
                   </>
                 }
                 onPressItem={this.handleOnPress}
diff --git a/apolloschurchapp/src/tabs/home/getCampaignContentItem.js b/apolloschurchapp/src/tabs/home/getCampaignContentItem.js
deleted file mode 100644
index 5bdb082..0000000
--- a/apolloschurchapp/src/tabs/home/getCampaignContentItem.js
+++ /dev/null
@@ -1,25 +0,0 @@
-import gql from 'graphql-tag';
-
-import { contentItemFragment } from 'apolloschurchapp/src/content-single/getContentItem';
-import { largeCardFragment } from 'apolloschurchapp/src/ui/ContentCardConnected';
-
-export default gql`
-  query campaigns {
-    campaigns {
-      edges {
-        node {
-          childContentItemsConnection {
-            edges {
-              node {
-                ...largeCardFragment
-                ...contentItemFragment
-              }
-            }
-          }
-        }
-      }
-    }
-  }
-  ${contentItemFragment}
-  ${largeCardFragment}
-`;
diff --git a/apolloschurchapp/src/tabs/home/getPersonaFeed.js b/apolloschurchapp/src/tabs/home/getPersonaFeed.js
deleted file mode 100644
index b8130e0..0000000
--- a/apolloschurchapp/src/tabs/home/getPersonaFeed.js
+++ /dev/null
@@ -1,19 +0,0 @@
-import gql from 'graphql-tag';
-
-import { contentItemFragment } from 'apolloschurchapp/src/content-single/getContentItem';
-import { largeCardFragment } from 'apolloschurchapp/src/ui/ContentCardConnected';
-
-export default gql`
-  query getPersonaFeed {
-    personaFeed(first: 4) {
-      edges {
-        node {
-          ...largeCardFragment
-          ...contentItemFragment
-        }
-      }
-    }
-  }
-  ${contentItemFragment}
-  ${largeCardFragment}
-`;
diff --git a/apolloschurchapp/src/tabs/home/getUserFeed.js b/apolloschurchapp/src/tabs/home/getUserFeed.js
index 8ab2b1f..2d7cb9a 100644
--- a/apolloschurchapp/src/tabs/home/getUserFeed.js
+++ b/apolloschurchapp/src/tabs/home/getUserFeed.js
@@ -4,11 +4,8 @@ import { contentItemFragment } from 'apolloschurchapp/src/content-single/getCont
 import { largeCardFragment } from 'apolloschurchapp/src/ui/ContentCardConnected';
 
 export default gql`
-  query getUserFeed($first: Int, $after: String) {
-    userFeed(first: $first, after: $after) {
-      pageInfo {
-        endCursor
-      }
+  query getUserFeed {
+    userFeed {
       edges {
         node {
           ...largeCardFragment
diff --git a/apolloschurchapp/src/tabs/tabBar.js b/apolloschurchapp/src/tabs/tabBar.js
index 80e2f0e..e806ab4 100644
--- a/apolloschurchapp/src/tabs/tabBar.js
+++ b/apolloschurchapp/src/tabs/tabBar.js
@@ -1,21 +1,54 @@
+import React from 'react';
 import { compose } from 'recompose';
+import { Platform, View } from 'react-native';
 import { BottomTabBar } from 'react-navigation-tabs';
+import { Query } from 'react-apollo';
+import gql from 'graphql-tag';
+import { get } from 'lodash';
 
-import { withTabBarMediaSpacer } from '@apollosproject/ui-media-player';
+import { MediaPlayerSpacer } from 'apolloschurchapp/src/ui/MediaPlayer';
 import { styled, withTheme } from '@apollosproject/ui-kit';
 
+const mediaPlayerIsVisibleQuery = gql`
+  query {
+    mediaPlayer @client {
+      isVisible
+    }
+  }
+`;
+
+const TabBarWrapper = styled(({ theme, mediaPlayerIsVisible }) => ({
+  backgroundColor: mediaPlayerIsVisible
+    ? theme.colors.screen
+    : theme.colors.paper,
+  ...Platform.select(theme.shadows.default),
+}))(View);
+
 const ThemedBottomTabBar = compose(
   withTheme(({ theme }) => ({
     showLabel: false,
     activeTintColor: theme.colors.secondary,
     inactiveTintColor: theme.colors.text.tertiary,
-    safeAreaInset: { bottom: 0 },
   })),
   styled(({ theme }) => ({
     borderTopWidth: 0,
     backgroundColor: theme.colors.transparent,
-  })),
-  withTabBarMediaSpacer
+  }))
 )(BottomTabBar);
 
-export default ThemedBottomTabBar;
+const TabBar = (props) => (
+  <Query query={mediaPlayerIsVisibleQuery}>
+    {({ data = {} }) => (
+      <TabBarWrapper mediaPlayerIsVisible={get(data, 'mediaPlayer.isVisible')}>
+        <MediaPlayerSpacer>
+          <ThemedBottomTabBar
+            {...props}
+            safeAreaInset={{ bottom: 'never', top: 'never' }}
+          />
+        </MediaPlayerSpacer>
+      </TabBarWrapper>
+    )}
+  </Query>
+);
+
+export default TabBar;
diff --git a/apolloschurchapp/src/testing-control-panel/index.js b/apolloschurchapp/src/testing-control-panel/index.js
index 6a6c16a..121e804 100644
--- a/apolloschurchapp/src/testing-control-panel/index.js
+++ b/apolloschurchapp/src/testing-control-panel/index.js
@@ -1,8 +1,6 @@
 import React, { PureComponent } from 'react';
 import { TableView, Divider } from '@apollosproject/ui-kit';
-import { UserWebBrowserConsumer } from 'apolloschurchapp/src/user-web-browser';
 import ChangeLivestream from './ChangeLivestream';
-import TouchableCell from './TouchableCell';
 
 export default class TestingControlPanel extends PureComponent {
   static navigationOptions = () => ({
@@ -14,25 +12,6 @@ export default class TestingControlPanel extends PureComponent {
       <TableView>
         <ChangeLivestream />
         <Divider />
-        <UserWebBrowserConsumer>
-          {(openUserWebView) => (
-            <TouchableCell
-              handlePress={() =>
-                openUserWebView({
-                  url:
-                    'https://www.whatismybrowser.com/detect/what-http-headers-is-my-browser-sending',
-                })
-              }
-              iconName="share"
-              cellText={`Open Web Browser With User Cookie`}
-            />
-          )}
-        </UserWebBrowserConsumer>
-        <TouchableCell
-          handlePress={() => this.props.navigation.navigate('Onboarding')}
-          iconName="Avatar"
-          cellText={`Launch Onboarding`}
-        />
       </TableView>
     );
   }
diff --git a/apolloschurchapp/src/theme/icons/index.js b/apolloschurchapp/src/theme/icons/index.js
deleted file mode 100644
index 79e948a..0000000
--- a/apolloschurchapp/src/theme/icons/index.js
+++ /dev/null
@@ -1,2 +0,0 @@
-/* Export your custom icon components here. */
-export {};
diff --git a/apolloschurchapp/src/theme/index.js b/apolloschurchapp/src/theme/index.js
deleted file mode 100644
index 9ccfc4a..0000000
--- a/apolloschurchapp/src/theme/index.js
+++ /dev/null
@@ -1,4 +0,0 @@
-import theme from './theme';
-import * as customIcons from './icons';
-
-export { theme as default, customIcons };
diff --git a/apolloschurchapp/src/theme/theme.js b/apolloschurchapp/src/theme/theme.js
deleted file mode 100644
index 39e124f..0000000
--- a/apolloschurchapp/src/theme/theme.js
+++ /dev/null
@@ -1,43 +0,0 @@
-/* Add your custom theme definitions below. Anything that is supported in UI-Kit Theme can be
- overridden and/or customized here! */
-
-/* Base colors.
- * These get used by theme types (see /types directory) to color
- * specific parts of the interface. For more control on how certain
- * elements are colored, go there. The next level of control comes
- * on a per-component basis with "overrides"
- */
-// const colors = {};
-
-/* Base Typography sizing and fonts.
- * To control speicfic styles used on different type components (like H1, H2, etc), see "overrides"
- */
-// const typography = {};
-
-/* Responsive breakpoints */
-// export const breakpoints = {};
-
-/* Base sizing units. These are used to scale
- * space, and size components relatively to one another.
- */
-// export const sizing = {};
-
-/* Base alpha values. These are used to keep transparent values across the app consistant */
-// export const alpha = {};
-
-/* Overrides allow you to override the styles of any component styled using the `styled` HOC.
- * For example, this component:
- * const SomeComponent = styled({ margin: 10, padding: 20 }, 'SomeComponent');
- * can have its styles overriden by including in overrides:
- * {
- *   overides: {
- *     SomeComponent: {
- *       margin: 5,
- *       padding: 15,
- *     },
- *   },
- * }
- */
-// const overrides = {};
-
-export default {};
diff --git a/apolloschurchapp/src/ui/ContentTableCard/ContentTableCard.stories.js b/apolloschurchapp/src/ui/ContentTableCard/ContentTableCard.stories.js
deleted file mode 100644
index 9287554..0000000
--- a/apolloschurchapp/src/ui/ContentTableCard/ContentTableCard.stories.js
+++ /dev/null
@@ -1,86 +0,0 @@
-import React from 'react';
-import { storiesOf } from '@apollosproject/ui-storybook';
-import { H3 } from '@apollosproject/ui-kit';
-import ContentTableCard from '.';
-
-const content = [
-  {
-    id: 'UniversalContentItem:9d06423a8908b7cc1e1f2db6156c1bfb',
-    title: 'Hello 1',
-    parentChannel: {
-      id: 'ContentChannel:be35f49307d7297989d3514be788ef2d',
-      name: 'NewSpring - Articles',
-    },
-    coverImage: {
-      sources: {
-        uri: 'https://picsum.photos/600/400/?image=63',
-      },
-    },
-  },
-  {
-    id: 'UniversalContentItem:9d06423a8908b7cc1e1f2db6156c1bfb',
-    title: 'Hello 2',
-    parentChannel: {
-      id: 'ContentChannel:be35f49307d7297989d3514be788ef2d',
-      name: 'NewSpring - Articles',
-    },
-    coverImage: {
-      sources: {
-        uri: 'https://picsum.photos/600/400/?image=63',
-      },
-    },
-  },
-  {
-    id: 'UniversalContentItem:9d06423a8908b7cc1e1f2db6156c1bfb',
-    title: 'Hello 3',
-    parentChannel: {
-      id: 'ContentChannel:be35f49307d7297989d3514be788ef2d',
-      name: 'NewSpring - Articles',
-    },
-    coverImage: {
-      sources: {
-        uri: 'https://picsum.photos/600/400/?image=63',
-      },
-    },
-  },
-  {
-    id: 'UniversalContentItem:9d06423a8908b7cc1e1f2db6156c1bfb',
-    title: 'Hello 4',
-    parentChannel: {
-      id: 'ContentChannel:be35f49307d7297989d3514be788ef2d',
-      name: 'NewSpring - Articles',
-    },
-    coverImage: {
-      sources: {
-        uri: 'https://picsum.photos/600/400/?image=63',
-      },
-    },
-  },
-];
-
-storiesOf('ContentTableCard', module)
-  .add('simple', () => (
-    <ContentTableCard
-      label={'FOR YOU'}
-      onPress={() => {}}
-      content={content}
-      DynamicHeader={
-        <H3 numberOfLines={3} ellipsizeMode="tail">
-          Some random text that encourages you
-        </H3>
-      }
-    />
-  ))
-  .add('isLoading', () => (
-    <ContentTableCard
-      label={'FOR YOU'}
-      onPress={() => {}}
-      isLoading
-      content={content}
-      DynamicHeader={
-        <H3 isLoading numberOfLines={3} ellipsizeMode="tail">
-          Some random text that encourages you
-        </H3>
-      }
-    />
-  ));
diff --git a/apolloschurchapp/src/ui/ContentTableCard/ContentTableCardItem.js b/apolloschurchapp/src/ui/ContentTableCard/ContentTableCardItem.js
deleted file mode 100644
index f387a41..0000000
--- a/apolloschurchapp/src/ui/ContentTableCard/ContentTableCardItem.js
+++ /dev/null
@@ -1,78 +0,0 @@
-import React, { PureComponent } from 'react';
-import { View } from 'react-native';
-import PropTypes from 'prop-types';
-
-import {
-  H6,
-  H4,
-  styled,
-  TouchableScale,
-  withIsLoading,
-  ConnectedImage,
-  FlexedView,
-} from '@apollosproject/ui-kit';
-
-const CellImage = styled(({ theme }) => ({
-  width: theme.sizing.baseUnit * 4,
-  height: theme.sizing.baseUnit * 4,
-  borderRadius: theme.sizing.baseUnit,
-  overflow: 'hidden',
-  marginRight: theme.sizing.baseUnit,
-}))(View);
-
-const StyledH6 = styled(({ theme }) => ({
-  color: theme.colors.text.tertiary,
-}))(H6);
-
-const TextContainer = styled(({ theme }) => ({
-  marginTop: theme.sizing.baseUnit / 2.5,
-  borderBottomWidth: 0.5,
-  height: theme.sizing.baseUnit * 4.25,
-  borderColor: theme.colors.shadows.default,
-}))(FlexedView);
-
-const Cell = styled(({ theme }) => ({
-  paddingHorizontal: theme.sizing.baseUnit,
-  paddingVertical: theme.sizing.baseUnit / 4,
-  backgroundColor: theme.colors.background.paper,
-  flexDirection: 'row',
-  justifyContent: 'flex-start',
-  alignItems: 'center',
-}))(View);
-
-class ContentTableCardItem extends PureComponent {
-  static propTypes = {
-    onPress: PropTypes.func,
-    imageSource: PropTypes.any, // eslint-disable-line
-    label: PropTypes.string,
-    title: PropTypes.string,
-    id: PropTypes.string,
-  };
-
-  render() {
-    return (
-      <TouchableScale
-        onPress={() =>
-          this.props.onPress({
-            id: this.props.id,
-            transitionKey: 2,
-          })
-        }
-      >
-        <Cell>
-          <CellImage>
-            <ConnectedImage source={this.props.imageSource} isLoading />
-          </CellImage>
-          <TextContainer>
-            <StyledH6>{this.props.label}</StyledH6>
-            <H4 numberOfLines={2} ellipsizeMode="tail">
-              {this.props.title}
-            </H4>
-          </TextContainer>
-        </Cell>
-      </TouchableScale>
-    );
-  }
-}
-
-export default withIsLoading(ContentTableCardItem);
diff --git a/apolloschurchapp/src/ui/ContentTableCard/ContentTableCardItem.stories.js b/apolloschurchapp/src/ui/ContentTableCard/ContentTableCardItem.stories.js
deleted file mode 100644
index 6a0d4cb..0000000
--- a/apolloschurchapp/src/ui/ContentTableCard/ContentTableCardItem.stories.js
+++ /dev/null
@@ -1,28 +0,0 @@
-import React from 'react';
-import { storiesOf } from '@apollosproject/ui-storybook';
-
-import ContentTableCardItem from './ContentTableCardItem';
-
-const item = {
-  id: 'UniversalContentItem:9d06423a8908b7cc1e1f2db6156c1bfb',
-  title: 'Hello 1',
-  parentChannel: {
-    id: 'ContentChannel:be35f49307d7297989d3514be788ef2d',
-    name: 'NewSpring - Articles',
-  },
-  coverImage: {
-    sources: {
-      uri: 'https://picsum.photos/600/400/?image=63',
-    },
-  },
-};
-
-storiesOf('ContentTableCardItem', module).add('simple', () => (
-  <ContentTableCardItem
-    onPress={() => {}}
-    imageSource={item.coverImage.sources}
-    label={item.parentChannel.name}
-    title={item.title}
-    id={item.id}
-  />
-));
diff --git a/apolloschurchapp/src/ui/ContentTableCard/index.js b/apolloschurchapp/src/ui/ContentTableCard/index.js
deleted file mode 100644
index 646b394..0000000
--- a/apolloschurchapp/src/ui/ContentTableCard/index.js
+++ /dev/null
@@ -1,56 +0,0 @@
-import React, { PureComponent } from 'react';
-// import { View } from 'react-native';
-import PropTypes from 'prop-types';
-
-import {
-  TableView,
-  Card,
-  CardContent,
-  styled,
-  withIsLoading,
-} from '@apollosproject/ui-kit';
-
-import ContentTableCardItem from './ContentTableCardItem';
-
-const Header = styled(({ theme }) => ({
-  backgroundColor: theme.colors.background.paper,
-}))(CardContent);
-
-const Content = styled(() => ({
-  borderBottomWidth: 0,
-  borderTopWidth: 0,
-}))(TableView);
-
-class ContentTableCard extends PureComponent {
-  static propTypes = {
-    onPress: PropTypes.func,
-    isLoading: PropTypes.bool, // eslint-disable-line
-    content: PropTypes.array, // eslint-disable-line
-    header: PropTypes.element,
-  };
-
-  render() {
-    const { onPress, isLoading, content, header: headerContent } = this.props;
-
-    return (
-      <Card>
-        <Header>{headerContent}</Header>
-        <Content>
-          {content.map((item) => (
-            <ContentTableCardItem
-              isLoading={isLoading}
-              key={item.id}
-              id={item.id}
-              onPress={onPress}
-              label={item.parentChannel ? item.parentChannel.name : ''}
-              title={item.title || ''}
-              imageSource={item.coverImage ? item.coverImage.sources : ''}
-            />
-          ))}
-        </Content>
-      </Card>
-    );
-  }
-}
-
-export default withIsLoading(ContentTableCard);
diff --git a/apolloschurchapp/src/ui/HTMLView/HTMLView.stories.js b/apolloschurchapp/src/ui/HTMLView/HTMLView.stories.js
new file mode 100644
index 0000000..0d69e14
--- /dev/null
+++ b/apolloschurchapp/src/ui/HTMLView/HTMLView.stories.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import { ScrollView } from 'react-native';
+import { storiesOf } from '@storybook/react-native';
+
+import HTMLView from '.';
+
+storiesOf('HTMLView', module)
+  .add('Example', () => (
+    <ScrollView>
+      <HTMLView>
+        {
+          "<p>I sat on my couch next to my high school <a href='https://newspringfuse.com/groups' target='_blank'>Fuse Group</a>, silently fuming at their inability to put their phones down during Bible study. Finally, I spoke up, teasing one of the girls in a tone that clearly said, &ldquo;I&rsquo;m not actually kidding.&rdquo;&nbsp;</p>\n\n<p>A few days later, I was in the car with my sister, and as I sat in the passenger seat responding to emails, I heard her laugh and say, &ldquo;You always mumble when you are typing. Stop doing that.&rdquo;&nbsp;</p>\n\n<p>&ldquo;Sorry,&rdquo; I responded. &ldquo;I just don&rsquo;t want people to think I&rsquo;m ignoring them when I&rsquo;m typing.&rdquo;</p>\n\n<p>But the truth is, I am ignoring them! In my head, this behavior is totally acceptable. I tell myself I&rsquo;m tending to my priorities in order, and in doing so, I send a message to the person in front of me that she is of lesser importance.</p>\n\n<blockquote>\n<p>My phone is the primary outlet that distracts me from people who need my attention.</p>\n</blockquote>\n\n<p>I quickly get frustrated when I am the one on the outside, but how often to I shut others out during my own social media binges or email frenzies? Just like my girls, I&rsquo;m learning that my phone is the primary outlet that distracts me from people who need my attention.</p>\n\n<h3>Why Being Present Matters</h3>\n\n<p>There is nothing wrong with using our phones &mdash; as long as we remember that the best investment we can make is to invest in our relationships with Jesus and each other. We were created for <a href='http://newspring.cc/community' target='_blank'>community</a> by God, who exists in community as Father, Son, and Holy Spirit (John 1:1-2, Genesis 2:18).&nbsp;</p>\n\n<p>Our phones help us stay connected, but they are not the foundation of all connection. If we&rsquo;re honest, our phones are much quicker to distract and disengage us from the people right in front of us.&nbsp;</p>\n\n<p>Jesus said loving God and loving others is greatest of all God&rsquo;s commandments (Matthew 22:38-40). And, after trying everything the world had to offer, King Solomon reminded his people that their relationships with God and others are the only things that really matter (Ecclesiastes 2:24-26, Ecclesiastes 3:9).&nbsp;</p>\n\n<blockquote>\n<p>Greater love has no one than this: to lay down one&rsquo;s phone for one&rsquo;s loved ones.</p>\n</blockquote>\n\n<p>So the next time we feel like we have to text back immediately or tweet before someone else does, consider:&nbsp;</p>\n\n<ul>\n\t<li>Am I putting others before myself right now?</li>\n\t<li>How can I love the people around me if I&rsquo;m not even paying attention to them?</li>\n\t<li>What if Jesus wants to speak through me, but I&rsquo;ve got my nose stuck in my phone?&nbsp;</li>\n</ul>\n\n<p>The world won&rsquo;t implode if we don&rsquo;t reply to every text or email immediately. And that Instagram picture doesn&rsquo;t need to go up ASAP. If it&rsquo;s already been a week between posts, what&rsquo;s a few more hours? We love everyone better &mdash; our friends to our coworkers to our social media followers &mdash; when we give them the gift of our full attention.&nbsp;</p>\n\n<p>I can almost hear Jesus saying, &ldquo;Greater love has no one than this: to lay down one&rsquo;s phone for one&rsquo;s loved ones&rdquo;&nbsp; (John 15:13).&nbsp;</p>\n\n<h3>Four Ways To Stay Away From Your Phone And Be Intentionally Present</h3>\n\n<p><a href='http://newspring.cc/christmas' target='_blank'>This holiday season</a>, we will have more opportunities to be around friends and family than usual. So let&rsquo;s make the most of each minute. The following are some tips can help us all be a little more present.&nbsp;&nbsp;</p>\n\n<ol>\n\t<li>Turn your phone off, leave it in the car, or put it in airplane mode. Habitual notification checks can take a break.</li>\n\t<li>Talk about something other than yourself. Ask someone else about their life (job, school, kids).</li>\n\t<li>Look for opportunities to encourage someone. Ask the Holy Spirit to speak through you and help you love people.</li>\n\t<li>Ask Jesus to keep your heart interested and engaged in what really matters. He wants to help!</li>\n</ol>\n\n<p>Intentionally taking advantage of time with loved ones sometimes does require sacrificing our own immediate desires or comforts, but that&rsquo;s what we are commanded to do (Philippians 2:3).&nbsp;</p>\n\n<p>Take pictures, but don&rsquo;t let the only memory be a digital one. The positive outcome of interactions should be more than Instagram likes. Unplug from social media, choose to be present, and you will be surprised at the good it does for your heart and the hearts of those around you.&nbsp;</p>"
+        }
+      </HTMLView>
+    </ScrollView>
+  ))
+  .add('isLoading', () => (
+    <ScrollView>
+      <HTMLView isLoading />
+    </ScrollView>
+  ));
diff --git a/apolloschurchapp/src/ui/HTMLView/HTMLView.tests.js b/apolloschurchapp/src/ui/HTMLView/HTMLView.tests.js
new file mode 100644
index 0000000..a0eb6ec
--- /dev/null
+++ b/apolloschurchapp/src/ui/HTMLView/HTMLView.tests.js
@@ -0,0 +1,191 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import HTMLView from '.';
+
+describe('the HTMLView component', () => {
+  it('should render an H1', () => {
+    const tree = renderer.create(
+      <Providers>
+        <HTMLView>{'<h1>Testings</h1>'}</HTMLView>
+      </Providers>
+    );
+
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render an H2', () => {
+    const tree = renderer.create(
+      <Providers>
+        <HTMLView>{'<h2>Testings</h2>'}</HTMLView>
+      </Providers>
+    );
+
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render an H3', () => {
+    const tree = renderer.create(
+      <Providers>
+        <HTMLView>{'<h3>Testings</h3>'}</HTMLView>
+      </Providers>
+    );
+
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render an H4', () => {
+    const tree = renderer.create(
+      <Providers>
+        <HTMLView>{'<h4>Testings</h4>'}</HTMLView>
+      </Providers>
+    );
+
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render an H5', () => {
+    const tree = renderer.create(
+      <Providers>
+        <HTMLView>{'<h5>Testings</h5>'}</HTMLView>
+      </Providers>
+    );
+
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render an H6', () => {
+    const tree = renderer.create(
+      <Providers>
+        <HTMLView>{'<h6>Testings</h6>'}</HTMLView>
+      </Providers>
+    );
+
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a paragraph', () => {
+    const tree = renderer.create(
+      <Providers>
+        <HTMLView>{'<p>Testings</p>'}</HTMLView>
+      </Providers>
+    );
+
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render italic text', () => {
+    const tree = renderer.create(
+      <Providers>
+        <HTMLView>{'<p><em>Testings</em></p>'}</HTMLView>
+      </Providers>
+    );
+
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render bold text', () => {
+    const tree = renderer.create(
+      <Providers>
+        <HTMLView>{'<p><strong>Testings</strong></p>'}</HTMLView>
+      </Providers>
+    );
+
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a block quote', () => {
+    const tree = renderer.create(
+      <Providers>
+        <HTMLView>
+          {'<p>Testings</p><blockquote>Testings</blockquote>'}
+        </HTMLView>
+      </Providers>
+    );
+
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a list', () => {
+    const tree = renderer.create(
+      <Providers>
+        <HTMLView>{'<ul><li>Testings</li><li>Testings</li></ul>'}</HTMLView>
+      </Providers>
+    );
+
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a link', () => {
+    const tree = renderer.create(
+      <Providers>
+        <HTMLView>
+          {'<p>Testings <a href="http://wwww.google.com">Google</a></p>'}
+        </HTMLView>
+      </Providers>
+    );
+
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render handle relative links', () => {
+    const tree = renderer.create(
+      <Providers>
+        <HTMLView>
+          {'<p>Testings <a href="//google.com">Google</a></p>'}
+        </HTMLView>
+      </Providers>
+    );
+
+    expect(tree).toMatchSnapshot();
+  });
+  it('strips out badly formatted links', () => {
+    const tree = renderer.create(
+      <Providers>
+        <HTMLView>{"<p><a href='{page_536525}'>Bad link</a></p>"}</HTMLView>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render an image', () => {
+    const tree = renderer.create(
+      <Providers>
+        <HTMLView>
+          {'<img src="https://placeholdit.co/i/150x150?bg=eeeeee&fc=577084" />'}
+        </HTMLView>
+      </Providers>
+    );
+
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a line break (br)', () => {
+    const tree = renderer.create(
+      <Providers>
+        <HTMLView>{'<p>Testings</p><br>'}</HTMLView>
+      </Providers>
+    );
+
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a loading state', () => {
+    const tree = renderer.create(
+      <Providers>
+        <HTMLView isLoading />
+      </Providers>
+    );
+
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render example HTML', () => {
+    const tree = renderer.create(
+      <Providers>
+        <HTMLView>
+          {
+            "<p>I sat on my couch next to my high school <a href='https://newspringfuse.com/groups' target='_blank'>Fuse Group</a>, silently fuming at their inability to put their phones down during Bible study. Finally, I spoke up, teasing one of the girls in a tone that clearly said, &ldquo;I&rsquo;m not actually kidding.&rdquo;&nbsp;</p>\n\n<p>A few days later, I was in the car with my sister, and as I sat in the passenger seat responding to emails, I heard her laugh and say, &ldquo;You always mumble when you are typing. Stop doing that.&rdquo;&nbsp;</p>\n\n<p>&ldquo;Sorry,&rdquo; I responded. &ldquo;I just don&rsquo;t want people to think I&rsquo;m ignoring them when I&rsquo;m typing.&rdquo;</p>\n\n<p>But the truth is, I am ignoring them! In my head, this behavior is totally acceptable. I tell myself I&rsquo;m tending to my priorities in order, and in doing so, I send a message to the person in front of me that she is of lesser importance.</p>\n\n<blockquote>\n<p>My phone is the primary outlet that distracts me from people who need my attention.</p>\n</blockquote>\n\n<p>I quickly get frustrated when I am the one on the outside, but how often to I shut others out during my own social media binges or email frenzies? Just like my girls, I&rsquo;m learning that my phone is the primary outlet that distracts me from people who need my attention.</p>\n\n<h3>Why Being Present Matters</h3>\n\n<p>There is nothing wrong with using our phones &mdash; as long as we remember that the best investment we can make is to invest in our relationships with Jesus and each other. We were created for <a href='http://newspring.cc/community' target='_blank'>community</a> by God, who exists in community as Father, Son, and Holy Spirit (John 1:1-2, Genesis 2:18).&nbsp;</p>\n\n<p>Our phones help us stay connected, but they are not the foundation of all connection. If we&rsquo;re honest, our phones are much quicker to distract and disengage us from the people right in front of us.&nbsp;</p>\n\n<p>Jesus said loving God and loving others is greatest of all God&rsquo;s commandments (Matthew 22:38-40). And, after trying everything the world had to offer, King Solomon reminded his people that their relationships with God and others are the only things that really matter (Ecclesiastes 2:24-26, Ecclesiastes 3:9).&nbsp;</p>\n\n<blockquote>\n<p>Greater love has no one than this: to lay down one&rsquo;s phone for one&rsquo;s loved ones.</p>\n</blockquote>\n\n<p>So the next time we feel like we have to text back immediately or tweet before someone else does, consider:&nbsp;</p>\n\n<ul>\n\t<li>Am I putting others before myself right now?</li>\n\t<li>How can I love the people around me if I&rsquo;m not even paying attention to them?</li>\n\t<li>What if Jesus wants to speak through me, but I&rsquo;ve got my nose stuck in my phone?&nbsp;</li>\n</ul>\n\n<p>The world won&rsquo;t implode if we don&rsquo;t reply to every text or email immediately. And that Instagram picture doesn&rsquo;t need to go up ASAP. If it&rsquo;s already been a week between posts, what&rsquo;s a few more hours? We love everyone better &mdash; our friends to our coworkers to our social media followers &mdash; when we give them the gift of our full attention.&nbsp;</p>\n\n<p>I can almost hear Jesus saying, &ldquo;Greater love has no one than this: to lay down one&rsquo;s phone for one&rsquo;s loved ones&rdquo;&nbsp; (John 15:13).&nbsp;</p>\n\n<h3>Four Ways To Stay Away From Your Phone And Be Intentionally Present</h3>\n\n<p><a href='http://newspring.cc/christmas' target='_blank'>This holiday season</a>, we will have more opportunities to be around friends and family than usual. So let&rsquo;s make the most of each minute. The following are some tips can help us all be a little more present.&nbsp;&nbsp;</p>\n\n<ol>\n\t<li>Turn your phone off, leave it in the car, or put it in airplane mode. Habitual notification checks can take a break.</li>\n\t<li>Talk about something other than yourself. Ask someone else about their life (job, school, kids).</li>\n\t<li>Look for opportunities to encourage someone. Ask the Holy Spirit to speak through you and help you love people.</li>\n\t<li>Ask Jesus to keep your heart interested and engaged in what really matters. He wants to help!</li>\n</ol>\n\n<p>Intentionally taking advantage of time with loved ones sometimes does require sacrificing our own immediate desires or comforts, but that&rsquo;s what we are commanded to do (Philippians 2:3).&nbsp;</p>\n\n<p>Take pictures, but don&rsquo;t let the only memory be a digital one. The positive outcome of interactions should be more than Instagram likes. Unplug from social media, choose to be present, and you will be surprised at the good it does for your heart and the hearts of those around you.</p>"
+          }
+        </HTMLView>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should accept an alternative render', () => {
+    const testRenderer = jest.fn();
+    renderer.create(
+      <Providers>
+        <HTMLView renderer={testRenderer}>{'<p>Testings</p>'}</HTMLView>
+      </Providers>
+    );
+
+    expect(testRenderer).toBeCalled();
+  });
+});
diff --git a/apolloschurchapp/src/ui/HTMLView/defaultRenderer.js b/apolloschurchapp/src/ui/HTMLView/defaultRenderer.js
new file mode 100644
index 0000000..b8af60c
--- /dev/null
+++ b/apolloschurchapp/src/ui/HTMLView/defaultRenderer.js
@@ -0,0 +1,128 @@
+import React, { Children } from 'react';
+import { Text, Linking } from 'react-native';
+import { decodeHTML } from 'entities';
+
+import {
+  BodyText,
+  H1,
+  H2,
+  H3,
+  H4,
+  H5,
+  H6,
+  Paragraph,
+  BlockQuote,
+  BulletListItem,
+  ButtonLink,
+  ConnectedImage,
+} from '@apollosproject/ui-kit';
+
+const LINE_BREAK = '\n';
+const TEXT_TYPES_THAT_SHOULD_WRAP = [Text, BodyText, ButtonLink];
+
+export const wrapTextChildren = (children, Component = BodyText) => {
+  const newChildren = [];
+  let currentTextChildren = [];
+  Children.toArray(children).forEach((child, i) => {
+    if (TEXT_TYPES_THAT_SHOULD_WRAP.includes(child.type)) {
+      currentTextChildren.push(child);
+    } else {
+      if (currentTextChildren.length) {
+        newChildren.push(
+          // eslint-disable-next-line
+          <Component key={`composed-children-${i}`}>
+            {currentTextChildren}
+          </Component>
+        );
+        currentTextChildren = [];
+      }
+      newChildren.push(child);
+    }
+  });
+  if (currentTextChildren.length) {
+    newChildren.push(
+      <Component key="composed-children">{currentTextChildren}</Component>
+    );
+  }
+  return newChildren;
+};
+
+const defaultRenderer = (node, { children }) => {
+  if (node.type === 'text' && node.data && node.data.trim()) {
+    const text = decodeHTML(node.data);
+    if (!node.parent) {
+      return (
+        <Paragraph>
+          <BodyText>{text}</BodyText>
+        </Paragraph>
+      );
+    }
+    return <Text>{text}</Text>;
+  }
+
+  switch (node.name) {
+    case 'p':
+      return <Paragraph>{wrapTextChildren(children)}</Paragraph>;
+    case 'strong':
+      return <BodyText bold>{children}</BodyText>;
+    case 'em':
+      return <BodyText italic>{children}</BodyText>;
+    case 'blockquote':
+      return <BlockQuote>{wrapTextChildren(children, Text)}</BlockQuote>;
+    case 'h1':
+      return <H1 padded>{wrapTextChildren(children, Text)}</H1>;
+    case 'h2':
+      return <H2 padded>{wrapTextChildren(children, Text)}</H2>;
+    case 'h3':
+      return <H3 padded>{wrapTextChildren(children, Text)}</H3>;
+    case 'h4':
+      return <H4 padded>{wrapTextChildren(children, Text)}</H4>;
+    case 'h5':
+      return <H5 padded>{wrapTextChildren(children, Text)}</H5>;
+    case 'h6':
+      return <H6 padded>{wrapTextChildren(children, Text)}</H6>;
+    case 'ul':
+      return <Paragraph>{children}</Paragraph>;
+    case 'li':
+      return <BulletListItem>{wrapTextChildren(children)}</BulletListItem>;
+    case 'a': {
+      let url = node.attribs && node.attribs.href;
+      url = decodeHTML(url);
+
+      if (url && url.startsWith('//')) {
+        url = `http:${url}`;
+      }
+      if (!url.startsWith('http')) {
+        // we can't currently handle non web-links, so just return regular text instead:
+        return children;
+      }
+      const onPress = () => Linking.openURL(url);
+      if (url) {
+        return <ButtonLink onPress={onPress}>{children}</ButtonLink>;
+      }
+    }
+    /* ignoring fallthrough on the next line because of the conditional return above,
+     * so we handle the edge-case of an <a> tag used w/o a href
+     */
+    case 'img': {
+      const source = {
+        url: node.attribs.src,
+      };
+
+      const imgStyles = {
+        resizeMode: 'contain',
+        width: '100%',
+      };
+
+      return (
+        <ConnectedImage maintainAspectRatio source={source} style={imgStyles} />
+      );
+    }
+    case 'br':
+      return <BodyText>{LINE_BREAK}</BodyText>;
+    default:
+      return children;
+  }
+};
+
+export default defaultRenderer;
diff --git a/apolloschurchapp/src/ui/HTMLView/index.js b/apolloschurchapp/src/ui/HTMLView/index.js
new file mode 100644
index 0000000..5873b74
--- /dev/null
+++ b/apolloschurchapp/src/ui/HTMLView/index.js
@@ -0,0 +1,75 @@
+import React, { PureComponent, cloneElement } from 'react';
+import PropTypes from 'prop-types';
+import { View } from 'react-native';
+import { Parser, DomHandler } from 'htmlparser2';
+
+import { Paragraph as ParagraphPlaceholder } from '@apollosproject/ui-kit';
+
+import defaultRenderer from './defaultRenderer';
+
+class HTMLView extends PureComponent {
+  static propTypes = {
+    children: PropTypes.string,
+    renderer: PropTypes.func,
+    isLoading: PropTypes.bool,
+  };
+
+  static defaultProps = {
+    renderer: defaultRenderer,
+  };
+
+  constructor(...args) {
+    super(...args);
+    this.parser = new Parser(
+      new DomHandler(
+        (err, dom) => {
+          this.parsed = this.renderDom(dom);
+        },
+        { normalizeWhitespace: true }
+      )
+    );
+    if (this.props.children) this.parse(this.props.children);
+  }
+
+  componentWillUpdate(props) {
+    this.parse(props.children);
+  }
+
+  parse(html = '') {
+    this.parser.write(html);
+    this.parser.done();
+  }
+
+  renderDom(dom) {
+    return dom
+      .map((node, index) => {
+        let children = [];
+        if (node.children) children = this.renderDom(node.children);
+
+        let renderedNode = this.props.renderer(node, { children });
+        if (
+          !renderedNode &&
+          renderedNode !== null &&
+          this.props.renderer !== defaultRenderer
+        ) {
+          renderedNode = defaultRenderer(node, { children });
+        }
+
+        if (renderedNode && !Array.isArray(renderedNode)) {
+          renderedNode = cloneElement(renderedNode, { key: index });
+        }
+        return renderedNode;
+      })
+      .filter((e) => e !== undefined);
+  }
+
+  render() {
+    return (
+      <ParagraphPlaceholder lineNumber={8} onReady={!this.props.isLoading}>
+        <View>{this.parsed}</View>
+      </ParagraphPlaceholder>
+    );
+  }
+}
+
+export default HTMLView;
diff --git a/apolloschurchapp/src/ui/LandingScreen/LandingScreen.stories.js b/apolloschurchapp/src/ui/LandingScreen/LandingScreen.stories.js
deleted file mode 100644
index d9ebd3c..0000000
--- a/apolloschurchapp/src/ui/LandingScreen/LandingScreen.stories.js
+++ /dev/null
@@ -1,23 +0,0 @@
-import React from 'react';
-import { storiesOf } from '@apollosproject/ui-storybook';
-import { GradientOverlayImage } from '@apollosproject/ui-kit';
-
-import LandingScreen from '.';
-
-storiesOf('LandingScreen', module)
-  .add('default', () => <LandingScreen />)
-  .add('slideTitle', () => <LandingScreen slideTitle={'Custom title text'} />)
-  .add('description', () => (
-    <LandingScreen description={'Custom description text'} />
-  ))
-  .add('textColor', () => <LandingScreen textColor={'salmon'} />)
-  .add('ImageComponent', () => (
-    <LandingScreen
-      BackgroundComponent={
-        <GradientOverlayImage
-          source={'https://picsum.photos/375/812/?random'}
-        />
-      }
-    />
-  ))
-  .add('Slide props', () => <LandingScreen onPressPrimary={() => {}} />);
diff --git a/apolloschurchapp/src/ui/LandingScreen/LandingScreen.tests.js b/apolloschurchapp/src/ui/LandingScreen/LandingScreen.tests.js
deleted file mode 100644
index 13e64f1..0000000
--- a/apolloschurchapp/src/ui/LandingScreen/LandingScreen.tests.js
+++ /dev/null
@@ -1,64 +0,0 @@
-import React from 'react';
-import renderer from 'react-test-renderer';
-import { GradientOverlayImage } from '@apollosproject/ui-kit';
-
-import Providers from 'apolloschurchapp/src/Providers';
-
-import LandingScreen from '.';
-
-describe('The Onboarding LandingScreen component', () => {
-  it('should render', () => {
-    const tree = renderer.create(
-      <Providers>
-        <LandingScreen />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render a custom title', () => {
-    const tree = renderer.create(
-      <Providers>
-        <LandingScreen slideTitle={'Custom title text'} />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render a custom description', () => {
-    const tree = renderer.create(
-      <Providers>
-        <LandingScreen description={'Custom description text'} />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render with a custom text color', () => {
-    const tree = renderer.create(
-      <Providers>
-        <LandingScreen textColor={'salmon'} />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render with an ImageComponent', () => {
-    const tree = renderer.create(
-      <Providers>
-        <LandingScreen
-          BackgroundComponent={
-            <GradientOverlayImage
-              source={'https://picsum.photos/375/812/?random'}
-            />
-          }
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should pass additional props to Slide', () => {
-    const tree = renderer.create(
-      <Providers>
-        <LandingScreen onPressPrimary={jest.fn()} />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/ui/LandingScreen/index.js b/apolloschurchapp/src/ui/LandingScreen/index.js
deleted file mode 100644
index f929f81..0000000
--- a/apolloschurchapp/src/ui/LandingScreen/index.js
+++ /dev/null
@@ -1,86 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-
-import {
-  styled,
-  withTheme,
-  Icon,
-  H1,
-  H4,
-  PaddedView,
-  BackgroundView,
-} from '@apollosproject/ui-kit';
-
-import { Slide } from '@apollosproject/ui-onboarding';
-
-const Content = styled({
-  flex: 1,
-  justifyContent: 'center',
-})(PaddedView);
-
-const BrandIcon = withTheme(({ theme, color }) => ({
-  name: 'brand-icon',
-  size: theme.sizing.baseUnit * 3,
-  ...(color ? { fill: color } : {}),
-  style: {
-    marginBottom: theme.sizing.baseUnit,
-  },
-}))(Icon);
-
-const Title = styled(({ theme, color }) => ({
-  marginBottom: theme.sizing.baseUnit * 2,
-  ...(color ? { color } : {}),
-}))(H1);
-
-const StyledH4 = styled(({ color }) => ({
-  ...(color ? { color } : {}),
-}))(H4);
-
-const LandingScreen = ({
-  slideTitle,
-  description,
-  textColor,
-  BackgroundComponent,
-  ...props
-}) => (
-  <BackgroundView>
-    <Slide {...props} scrollEnabled={false}>
-      {BackgroundComponent}
-      <Content>
-        <BrandIcon color={textColor} />
-        <Title color={textColor}>{slideTitle}</Title>
-        <StyledH4 color={textColor}>{description}</StyledH4>
-      </Content>
-    </Slide>
-  </BackgroundView>
-);
-
-LandingScreen.propTypes = {
-  /* The `Swiper` component used in `<onBoarding>` looks for and hijacks the title prop of it's
-   * children. Thus we have to use more unique name.
-   */
-  slideTitle: PropTypes.string,
-  description: PropTypes.string,
-  textColor: PropTypes.string, // Use for custom text and `BrandIcon` color when overlaying text on an image or video needs more clarity. Defaults to theme driven colors.
-  /* Recommended usage:
-   * - `Image` (react-native)
-   * - `GradientOverlayImage` (@apollosproject/ui-kit) for increased readability
-   * - `Video` (react-native-video) because moving pictures!
-   */
-  BackgroundComponent: PropTypes.oneOfType([
-    PropTypes.arrayOf(PropTypes.node),
-    PropTypes.node,
-  ]),
-};
-
-LandingScreen.defaultProps = {
-  slideTitle: "We're glad you're here.",
-  description:
-    "We're not just a building you go to, but a family to belong to.",
-};
-
-LandingScreen.navigationOptions = {
-  header: null,
-};
-
-export default LandingScreen;
diff --git a/apolloschurchapp/src/ui/Like/index.js b/apolloschurchapp/src/ui/Like/index.js
index 7efb31a..48e19ee 100644
--- a/apolloschurchapp/src/ui/Like/index.js
+++ b/apolloschurchapp/src/ui/Like/index.js
@@ -2,9 +2,7 @@ import React from 'react';
 import PropTypes from 'prop-types';
 
 import { Icon, withTheme } from '@apollosproject/ui-kit';
-import { ProtectedTouchable } from '@apollosproject/ui-auth';
-
-import { withNavigation } from 'react-navigation';
+import ProtectedTouchable from '../../auth/ProtectedTouchable';
 
 const LikeIcon = withTheme(
   ({ theme: { colors: { secondary } = {} } = {}, isLiked } = {}) => ({
@@ -17,7 +15,7 @@ LikeIcon.propTypes = {
   isLiked: PropTypes.bool,
 };
 
-const Like = withNavigation(({ isLiked, toggleLike, itemId }) => (
+const Like = ({ isLiked, toggleLike, itemId }) => (
   <ProtectedTouchable
     onPress={() =>
       toggleLike({ itemId, operation: isLiked ? 'Unlike' : 'Like' })
@@ -25,7 +23,7 @@ const Like = withNavigation(({ isLiked, toggleLike, itemId }) => (
   >
     <LikeIcon isLiked={isLiked} />
   </ProtectedTouchable>
-));
+);
 
 Like.propTypes = {
   itemId: PropTypes.string,
diff --git a/apolloschurchapp/src/ui/LikeButton/LikeButton.tests.js b/apolloschurchapp/src/ui/LikeButton/LikeButton.tests.js
index 76197fd..d3bf42f 100644
--- a/apolloschurchapp/src/ui/LikeButton/LikeButton.tests.js
+++ b/apolloschurchapp/src/ui/LikeButton/LikeButton.tests.js
@@ -61,54 +61,4 @@ describe('the LikeButton component', () => {
     //     );
     //     expect(tree).toMatchSnapshot();
   });
-  it('should render when loading', () => {
-    //     const updateLikeEntity = {
-    //       request: {
-    //         query: gql`
-    //           mutation updateLikeEntity($itemId: ID!, $operation: LIKE_OPERATION!) {
-    //             updateLikeEntity(
-    //               input: { nodeId: $itemId, operation: $operation }
-    //             ) {
-    //               id
-    //               operation
-    //               interactionDateTime
-    //             }
-    //           }
-    //         `,
-    //         variables: {
-    //           itemId: 'asdf',
-    //           operation: 'Like',
-    //         },
-    //       },
-    //       result: {
-    //         data: {
-    //           node: { isLiked: true },
-    //         },
-    //       },
-    //     };
-    //     const getLikedContentItem = {
-    //       request: {
-    //         query: gql`
-    //           query getLikedContentItem($itemId: ID!) {
-    //             node(id: $itemId) {
-    //               ... on ContentItem {
-    //                 id
-    //                 isLiked
-    //               }
-    //             }
-    //           }
-    //         `,
-    //         variables: {
-    //           itemId: 'asdf',
-    //         },
-    //       },
-    //       result: null,
-    //     };
-    //     const tree = renderer.create(
-    //       <Providers mocks={[updateLikeEntity, getLikedContentItem]}>
-    //         <LikeButton itemId={'asdf'} />
-    //       </Providers>
-    //     );
-    //     expect(tree).toMatchSnapshot();
-  });
 });
diff --git a/apolloschurchapp/src/ui/LikeButton/index.js b/apolloschurchapp/src/ui/LikeButton/index.js
index a7c0c2d..fee9f8b 100644
--- a/apolloschurchapp/src/ui/LikeButton/index.js
+++ b/apolloschurchapp/src/ui/LikeButton/index.js
@@ -5,7 +5,7 @@ import { get } from 'lodash';
 import { Query, Mutation } from 'react-apollo';
 
 import Like from 'apolloschurchapp/src/ui/Like';
-import { AnalyticsConsumer } from '@apollosproject/ui-analytics';
+import { track, events } from 'apolloschurchapp/src/analytics';
 
 import updateLikeEntity from './updateLikeEntity';
 import getLikedContentItem from './getLikedContentItem';
@@ -25,68 +25,61 @@ GetLikeData.propTypes = {
   children: PropTypes.func.isRequired,
 };
 
-const UpdateLikeStatus = ({
-  itemId,
-  item = { __typename: null },
-  isLiked,
-  children,
-}) => (
-  <AnalyticsConsumer>
-    {({ track }) => (
-      <Mutation
-        mutation={updateLikeEntity}
-        optimisticResponse={{
-          updateLikeEntity: {
-            id: itemId, // unknown at this time
-            isLiked: !isLiked,
-            likedCount: 0, // field required but exact value is not needed
-            __typename: item && item.__typename,
+const UpdateLikeStatus = ({ itemId, item, isLiked, children }) => (
+  <Mutation
+    mutation={updateLikeEntity}
+    optimisticResponse={{
+      updateLikeEntity: {
+        operation: isLiked ? 'Unlike' : 'Like',
+        id: null, // unknown at this time
+        interactionDateTime: new Date().toJSON(),
+        __typename: 'Interaction',
+      },
+    }}
+    update={(
+      cache,
+      {
+        data: {
+          updateLikeEntity: { operation },
+        },
+      }
+    ) => {
+      updateLikedContent({ liked: operation === 'Like', cache, item });
+      cache.writeQuery({
+        query: getLikedContentItem,
+        data: {
+          node: {
+            ...item,
+            isLiked: operation === 'Like',
           },
-        }}
-        update={(
-          cache,
-          {
-            data: {
-              updateLikeEntity: { isLiked: liked },
-            },
-          }
-        ) => {
-          updateLikedContent({ liked, cache, item });
-          cache.writeQuery({
-            query: getLikedContentItem,
-            data: {
-              node: {
-                ...item,
-                isLiked: liked,
-              },
+        },
+      });
+    }}
+  >
+    {(createNewInteraction) =>
+      itemId
+        ? children({
+            itemId,
+            isLiked,
+            toggleLike: async (variables) => {
+              try {
+                await createNewInteraction({ variables });
+                track({
+                  eventName: isLiked
+                    ? events.UnlikeContent
+                    : events.LikeContent,
+                  properties: {
+                    id: itemId,
+                  },
+                });
+              } catch (e) {
+                throw e.message;
+              }
             },
-          });
-        }}
-      >
-        {(createNewInteraction) =>
-          itemId
-            ? children({
-                itemId,
-                isLiked,
-                toggleLike: async (variables) => {
-                  try {
-                    await createNewInteraction({ variables });
-                    track({
-                      eventName: isLiked ? 'UnlikeContent' : 'LikeContent',
-                      properties: {
-                        id: itemId,
-                      },
-                    });
-                  } catch (e) {
-                    throw e.message;
-                  }
-                },
-              })
-            : null
-        }
-      </Mutation>
-    )}
-  </AnalyticsConsumer>
+          })
+        : null
+    }
+  </Mutation>
 );
 
 UpdateLikeStatus.propTypes = {
diff --git a/apolloschurchapp/src/ui/LikeButton/updateLikeEntity.js b/apolloschurchapp/src/ui/LikeButton/updateLikeEntity.js
index 986d867..892fd76 100644
--- a/apolloschurchapp/src/ui/LikeButton/updateLikeEntity.js
+++ b/apolloschurchapp/src/ui/LikeButton/updateLikeEntity.js
@@ -4,8 +4,8 @@ export default gql`
   mutation updateLikeEntity($itemId: ID!, $operation: LIKE_OPERATION!) {
     updateLikeEntity(input: { nodeId: $itemId, operation: $operation }) {
       id
-      isLiked
-      likedCount
+      operation
+      interactionDateTime
     }
   }
 `;
diff --git a/apolloschurchapp/src/ui/LikeButton/updateLikedContent.js b/apolloschurchapp/src/ui/LikeButton/updateLikedContent.js
index c0d5978..50b612a 100644
--- a/apolloschurchapp/src/ui/LikeButton/updateLikedContent.js
+++ b/apolloschurchapp/src/ui/LikeButton/updateLikedContent.js
@@ -1,32 +1,18 @@
 import getAllLikedContent from 'apolloschurchapp/src/tabs/connect/getLikedContent';
 import { contentItemFragment } from 'apolloschurchapp/src/content-single/getContentItem';
 
-const addItemToLikedContentList = ({ cache, item, variables }) => {
+const addItemToLikedContentList = ({ cache, item }) => {
   try {
-    const data = cache.readQuery({
-      query: getAllLikedContent,
-      variables,
-    });
+    const data = cache.readQuery({ query: getAllLikedContent });
     const fullItem = cache.readFragment({
       id: `${item.__typename}:${item.id}`,
       fragment: contentItemFragment,
     });
-    const newEdges = [
-      fullItem,
-      ...data.likedContent.edges.map(({ node }) => node),
-    ].map((node) => ({
-      __typename: 'ContentItemsConnectionEdge',
-      node,
-    }));
     cache.writeQuery({
       query: getAllLikedContent,
-      variables,
       data: {
         ...data,
-        likedContent: {
-          ...data.likedContent,
-          edges: newEdges,
-        },
+        getAllLikedContent: [fullItem, ...data.getAllLikedContent],
       },
     });
   } catch (e) {
@@ -36,26 +22,16 @@ const addItemToLikedContentList = ({ cache, item, variables }) => {
   }
 };
 
-const removeItemFromLikedContentList = ({ cache, item, variables }) => {
+const removeItemFromLikedContentList = ({ cache, item }) => {
   try {
-    const data = cache.readQuery({
-      query: getAllLikedContent,
-      variables,
-    });
-
-    const filteredEdges = data.likedContent.edges.filter(
-      ({ node }) => node.id !== item.id
-    );
-
+    const data = cache.readQuery({ query: getAllLikedContent });
     cache.writeQuery({
       query: getAllLikedContent,
-      variables,
       data: {
         ...data,
-        likedContent: {
-          ...data.likedContent,
-          edges: filteredEdges,
-        },
+        getAllLikedContent: data.getAllLikedContent.filter(
+          (content) => content.id !== item.id
+        ),
       },
     });
   } catch (e) {
@@ -67,11 +43,9 @@ const removeItemFromLikedContentList = ({ cache, item, variables }) => {
 
 const updateLikedContent = ({ liked, cache, item }) => {
   if (liked) {
-    addItemToLikedContentList({ cache, item, variables: { first: 3 } });
-    addItemToLikedContentList({ cache, item, variables: { first: 20 } });
+    addItemToLikedContentList({ cache, item });
   } else {
-    removeItemFromLikedContentList({ cache, item, variables: { first: 3 } });
-    removeItemFromLikedContentList({ cache, item, variables: { first: 20 } });
+    removeItemFromLikedContentList({ cache, item });
   }
 };
 
diff --git a/apolloschurchapp/src/ui/MediaPlayer/FullscreenControls.js b/apolloschurchapp/src/ui/MediaPlayer/FullscreenControls.js
new file mode 100644
index 0000000..7256ae4
--- /dev/null
+++ b/apolloschurchapp/src/ui/MediaPlayer/FullscreenControls.js
@@ -0,0 +1,291 @@
+import React, { PureComponent } from 'react';
+import PropTypes from 'prop-types';
+import {
+  BackHandler,
+  StyleSheet,
+  Animated,
+  TouchableWithoutFeedback,
+} from 'react-native';
+import { Query, withApollo } from 'react-apollo';
+import LinearGradient from 'react-native-linear-gradient';
+import SafeAreaView from 'react-native-safe-area-view';
+import { get } from 'lodash';
+import { compose } from 'recompose';
+
+import {
+  PaddedView,
+  withTheme,
+  withThemeMixin,
+  styled,
+  H4,
+  H6,
+  ButtonIcon,
+} from '@apollosproject/ui-kit';
+
+import Seeker from './Seeker';
+import { getControlState } from './queries';
+import {
+  play,
+  pause,
+  exitFullscreen,
+  showVideo,
+  hideVideo,
+  mute,
+  unmute,
+} from './mutations';
+
+import { ControlsConsumer } from './PlayheadState';
+
+const Background = withTheme(({ theme }) => ({
+  style: StyleSheet.absoluteFill,
+  colors: [
+    theme.colors.darkPrimary,
+    theme.colors.transparent,
+    theme.colors.darkPrimary,
+  ],
+  locations: [0, 0.4, 0.95],
+}))(LinearGradient);
+
+const UpperControl = styled({
+  flexDirection: 'row',
+  justifyContent: 'space-between',
+  alignItems: 'center',
+})(PaddedView);
+
+const LowerControl = styled({
+  position: 'absolute',
+  bottom: 0,
+  left: 0,
+  right: 0,
+})(PaddedView);
+
+const PlayControls = styled(({ theme }) => ({
+  flexDirection: 'row',
+  justifyContent: 'space-around',
+  alignItems: 'center',
+  paddingBottom: theme.sizing.baseUnit * 1.5,
+}))(PaddedView);
+
+const PlayHead = styled({ paddingVertical: 0 })(PaddedView);
+
+const Titles = styled({
+  alignItems: 'center',
+  paddingVertical: 0,
+})(PaddedView);
+
+const Title = styled({ textAlign: 'center' })(H4);
+const Artist = styled({ textAlign: 'center' })(H6);
+
+const IconSm = withTheme(({ theme }) => ({
+  size: theme.sizing.baseUnit * 1.25,
+  iconPadding: theme.sizing.baseUnit * 1.25,
+}))(ButtonIcon);
+
+const IconMd = withTheme(({ theme }) => ({
+  size: theme.sizing.baseUnit * 1.875,
+  iconPadding: theme.sizing.baseUnit * 0.9375,
+}))(ButtonIcon);
+
+const IconLg = withTheme(({ theme }) => ({
+  size: theme.sizing.baseUnit * 3.125,
+  iconPadding: theme.sizing.baseUnit * 0.3125,
+}))(ButtonIcon);
+
+/**
+ * FullscreenControls displays fading player controls
+ */
+class FullscreenControls extends PureComponent {
+  static propTypes = {
+    client: PropTypes.shape({
+      mutate: PropTypes.func,
+    }),
+  };
+
+  state = {};
+
+  fader = new Animated.Value(1);
+
+  controlsVisible = true;
+
+  wasFullscreen = false;
+
+  open = Animated.spring(this.fader, {
+    toValue: 1,
+    useNativeDriver: true,
+  });
+
+  close = Animated.spring(this.fader, {
+    toValue: 0,
+    useNativeDriver: true,
+  });
+
+  constructor(...args) {
+    super(...args);
+    this.fader.addListener(({ value }) => {
+      this.controlsVisible = value > 0.05;
+    });
+  }
+
+  componentDidMount() {
+    this.backHandler = BackHandler.addEventListener('hardwareBackPress', () => {
+      if (this.wasFullscreen) {
+        this.handleClose();
+        return true;
+      }
+      return false;
+    });
+  }
+
+  componentWillUnmount() {
+    this.backHandler.remove();
+    if (this.closeTimeout) clearTimeout(this.closeTimeout);
+  }
+
+  handleOnScrubbing = ({ isScrubbing }) => {
+    this.setState({ isScrubbing });
+  };
+
+  handleClose = () => {
+    this.props.client.mutate({ mutation: exitFullscreen });
+  };
+
+  handlePlay = () => {
+    this.props.client.mutate({ mutation: play });
+  };
+
+  handlePause = () => {
+    this.props.client.mutate({ mutation: pause });
+  };
+
+  handleShowVideo = () => {
+    this.props.client.mutate({ mutation: showVideo });
+  };
+
+  handleHideVideo = () => {
+    this.props.client.mutate({ mutation: hideVideo });
+  };
+
+  handleMute = () => {
+    this.props.client.mutate({ mutation: mute });
+  };
+
+  handleUnMute = () => {
+    this.props.client.mutate({ mutation: unmute });
+  };
+
+  handleControlVisibility = () => {
+    if (this.closeTimeout) clearTimeout(this.closeTimeout);
+    this.open.stop();
+    this.close.stop();
+
+    if (
+      !this.state.isScrubbing &&
+      this.isVideo &&
+      this.isPlaying &&
+      this.wasFullscreen &&
+      (!this.animatingClosed && this.controlsVisible)
+    ) {
+      this.animatingClosed = true;
+      this.close.start(() => {
+        this.animatingClosed = false;
+      });
+    } else {
+      this.open.start(() => {
+        if (this.isVideo && this.isPlaying) this.queueClose();
+      });
+    }
+  };
+
+  queueClose = () => {
+    this.closeTimeout = setTimeout(this.handleControlVisibility, 5000);
+  };
+
+  renderPlayerControls = ({ isLoading, skip }) => (
+    <PlayControls>
+      <IconSm
+        onPress={this.isMuted ? this.handleUnMute : this.handleMute}
+        name={this.isMuted ? 'mute' : 'volume'}
+        disabled={isLoading}
+      />
+      <IconMd
+        onPress={() => skip(-30)}
+        name={'skip-back-thirty'}
+        disabled={isLoading}
+      />
+      <IconLg
+        onPress={this.isPlaying ? this.handlePause : this.handlePlay}
+        name={this.isPlaying ? 'pause' : 'play'}
+        disabled={isLoading}
+      />
+      <IconMd
+        onPress={() => skip(30)}
+        name={'skip-forward-thirty'}
+        disabled={isLoading}
+      />
+      <IconSm
+        onPress={this.isVideo ? this.handleHideVideo : this.handleShowVideo}
+        name={this.isVideo ? 'video' : 'video-off'}
+        disabled={isLoading}
+      />
+    </PlayControls>
+  );
+
+  renderFullscreenControls = ({ data: { mediaPlayer = {} } = {} }) => {
+    this.isVideo = get(mediaPlayer, 'showVideo');
+    this.isPlaying = mediaPlayer.isPlaying;
+    this.isMuted = mediaPlayer.muted;
+
+    if (
+      (mediaPlayer.isFullscreen && !this.wasFullscreen) ||
+      !this.isVideo ||
+      (!this.isPlaying || (this.isPlaying && !this.wasPlaying))
+    )
+      this.handleControlVisibility();
+
+    this.wasFullscreen = mediaPlayer.isFullscreen;
+    this.wasPlaying = mediaPlayer.isPlaying;
+
+    return (
+      <TouchableWithoutFeedback onPress={this.handleControlVisibility}>
+        <Animated.View
+          style={[StyleSheet.absoluteFill, { opacity: this.fader }]}
+        >
+          <Background>
+            <SafeAreaView
+              style={StyleSheet.absoluteFill}
+              forceInset={{ top: 'always', bottom: 'always' }}
+            >
+              <TouchableWithoutFeedback onPress={this.handleClose}>
+                <UpperControl>
+                  <IconSm name="arrow-down" onPress={this.handleClose} />
+                  <Titles>
+                    <Title>{get(mediaPlayer, 'currentTrack.title')}</Title>
+                    <Artist>{get(mediaPlayer, 'currentTrack.artist')}</Artist>
+                  </Titles>
+                  <IconSm name="empty" disabled />
+                </UpperControl>
+              </TouchableWithoutFeedback>
+              <LowerControl>
+                <PlayHead>
+                  <Seeker onScrubbing={this.handleOnScrubbing} />
+                </PlayHead>
+                <ControlsConsumer>{this.renderPlayerControls}</ControlsConsumer>
+              </LowerControl>
+            </SafeAreaView>
+          </Background>
+        </Animated.View>
+      </TouchableWithoutFeedback>
+    );
+  };
+
+  render() {
+    return (
+      <Query query={getControlState}>{this.renderFullscreenControls}</Query>
+    );
+  }
+}
+
+export default compose(
+  withApollo,
+  withThemeMixin({ type: 'dark' })
+)(FullscreenControls);
diff --git a/apolloschurchapp/src/ui/MediaPlayer/FullscreenPlayer.js b/apolloschurchapp/src/ui/MediaPlayer/FullscreenPlayer.js
new file mode 100644
index 0000000..ecc64e7
--- /dev/null
+++ b/apolloschurchapp/src/ui/MediaPlayer/FullscreenPlayer.js
@@ -0,0 +1,236 @@
+import React, { PureComponent } from 'react';
+import {
+  Animated,
+  View,
+  StyleSheet,
+  Dimensions,
+  PanResponder,
+  Platform,
+  StatusBar,
+} from 'react-native';
+import PropTypes from 'prop-types';
+import { Query, withApollo } from 'react-apollo';
+import { get } from 'lodash';
+
+import { styled } from '@apollosproject/ui-kit';
+
+import MiniControls, { MINI_PLAYER_HEIGHT } from './MiniControls';
+import FullscreenControls from './FullscreenControls';
+import VideoWindow from './VideoWindow';
+import MusicControls from './MusicControls';
+import { getFullVisibilityState } from './queries';
+import { exitFullscreen, goFullscreen } from './mutations';
+import { Provider, ControlsConsumer } from './PlayheadState';
+import MediaPlayerSafeLayout from './MediaPlayerSafeLayout';
+
+const VideoSizer = styled(({ isFullscreen, isVideo, theme }) =>
+  isFullscreen
+    ? StyleSheet.absoluteFill
+    : {
+        height: MINI_PLAYER_HEIGHT,
+        borderTopLeftRadius: theme.sizing.baseUnit / 2,
+        borderBottomLeftRadius: theme.sizing.baseUnit / 2,
+        overflow: 'hidden',
+        aspectRatio: isVideo ? 16 / 9 : 1,
+      }
+)(View);
+
+const FullscreenMediaPlayerSafeLayout = styled(({ isFullscreen, theme }) => ({
+  ...StyleSheet.absoluteFillObject,
+  margin: isFullscreen ? 0 : theme.sizing.baseUnit,
+}))(MediaPlayerSafeLayout);
+
+/**
+ * FullscreenPlayer is a animating media player that transitions between
+ * a mini state and a full screen state.
+ * It is capable of playing any type of media that react-native-video supports.
+ * It reads from local graphql state, and so you must use graphql mutations to play tracks.
+ */
+class FullscreenPlayer extends PureComponent {
+  static propTypes = {
+    client: PropTypes.shape({ mutate: PropTypes.func }),
+  };
+
+  // Tracks the fullscreen animation
+  fullscreen = new Animated.Value(0);
+
+  // Tracks the measured height of the minicontrols. Used in other derived styles
+  miniControlHeight = new Animated.Value(MINI_PLAYER_HEIGHT);
+
+  // Tracks the measured height of the fullscreen cover. Used in other derived styles
+  coverHeight = new Animated.Value(Dimensions.get('window').height);
+
+  // Tracks the amount you drag the window
+  dragOffset = new Animated.Value(0);
+
+  fullScreenWithOffset = Animated.add(this.fullscreen, this.dragOffset);
+
+  // Self-invoking function because we end up with just one massic derived animated value that can be stored
+  coverTranslateY = (() => {
+    const translateYWhenCollapsed = Animated.subtract(
+      this.coverHeight,
+      this.miniControlHeight
+    );
+
+    const translateYSlope = Animated.multiply(
+      translateYWhenCollapsed,
+      Animated.multiply(this.fullScreenWithOffset, -1)
+    );
+
+    const translateY = Animated.add(translateYSlope, translateYWhenCollapsed);
+    return translateY;
+  })();
+
+  miniControlsTranslateY = (() => {
+    const translateYWhenExpanded = Animated.subtract(
+      this.coverHeight,
+      this.miniControlHeight
+    );
+    const translateYSlope = Animated.multiply(
+      translateYWhenExpanded,
+      Animated.multiply(this.fullScreenWithOffset, -1)
+    );
+    return translateYSlope;
+  })();
+
+  coverStyle = [
+    StyleSheet.absoluteFill,
+    {
+      transform: [{ translateY: this.coverTranslateY }],
+    },
+  ];
+
+  miniControlsAnimation = {
+    opacity: this.fullScreenWithOffset.interpolate({
+      inputRange: [0, 0.1],
+      outputRange: [1, 0],
+    }),
+  };
+
+  fullscreenControlsAnimation = [
+    StyleSheet.absoluteFill,
+    {
+      opacity: this.fullScreenWithOffset.interpolate({
+        inputRange: [0, 0.1],
+        outputRange: [0, 1],
+      }),
+    },
+  ];
+
+  panResponder = PanResponder.create({
+    onMoveShouldSetPanResponder: (event, { dx, dy }) =>
+      Math.abs(dy) > Math.abs(dx) && Math.abs(dy) > 10, // set pan responder only when we move enough in the Y-axis
+
+    onPanResponderMove: (event, { dy }) => {
+      // Calculate the amount you've offsetted the cover
+      const dragOffset = Math.min(0, -dy / Dimensions.get('window').height);
+      this.dragOffset.setValue(dragOffset);
+    },
+
+    onPanResponderRelease: (event, { dy, vy }) => {
+      const { height } = Dimensions.get('window');
+      const gestureVelocity = vy;
+      const gestureDistance = Math.abs(dy);
+
+      // Determine whether to continue the animation and exit fullscreen,
+      // or stay full screen and reset back up
+      let mutation = goFullscreen;
+      if (Math.abs(gestureVelocity > 0.5)) {
+        if (gestureVelocity > 0) {
+          mutation = exitFullscreen;
+        }
+      } else if (gestureDistance >= height / 2) {
+        mutation = exitFullscreen;
+      }
+
+      const dragOffset = Math.min(0, -dy / Dimensions.get('window').height);
+
+      if (mutation === goFullscreen) {
+        Animated.spring(this.dragOffset, {
+          toValue: 0,
+          useNativeDriver: true,
+        }).start();
+      } else {
+        this.dragOffset.setValue(0);
+        this.fullscreen.setValue(dragOffset);
+      }
+
+      this.props.client.mutate({ mutation });
+    },
+  });
+
+  handleCoverLayout = Animated.event([
+    { nativeEvent: { layout: { height: this.coverHeight } } },
+  ]);
+
+  handleMiniControlLayout = Animated.event([
+    { nativeEvent: { layout: { height: this.miniControlHeight } } },
+  ]);
+
+  renderCover = ({ data: { mediaPlayer = {} } = {} }) => {
+    const { isFullscreen = false } = mediaPlayer;
+
+    Animated.spring(this.fullscreen, {
+      toValue: isFullscreen ? 1 : 0,
+      useNativeDriver: true,
+      bounciness: 4,
+    }).start();
+
+    const coverFlow = [
+      <Animated.View
+        key="cover"
+        onLayout={this.handleCoverLayout}
+        style={StyleSheet.absoluteFill}
+        {...(Platform.OS !== 'android' && isFullscreen
+          ? this.panResponder.panHandlers
+          : {})}
+      >
+        <VideoSizer
+          isFullscreen={isFullscreen}
+          isVideo={get(mediaPlayer, 'currentTrack.isVideo')}
+        >
+          <ControlsConsumer>
+            {(controlHandlers) => <VideoWindow {...controlHandlers} />}
+          </ControlsConsumer>
+        </VideoSizer>
+        <Animated.View style={this.fullscreenControlsAnimation}>
+          <FullscreenControls />
+        </Animated.View>
+      </Animated.View>,
+      <MusicControls key="music-controls" />,
+    ];
+
+    if (!isFullscreen) {
+      coverFlow.push(
+        <Animated.View
+          key="mini-controls"
+          style={this.miniControlsAnimation}
+          onLayout={this.handleMiniControlLayout}
+        >
+          <MiniControls />
+        </Animated.View>
+      );
+    }
+
+    return (
+      <Animated.View style={this.coverStyle}>
+        <FullscreenMediaPlayerSafeLayout isFullscreen={isFullscreen}>
+          {isFullscreen ? <StatusBar hidden /> : null}
+          {coverFlow}
+        </FullscreenMediaPlayerSafeLayout>
+      </Animated.View>
+    );
+  };
+
+  render() {
+    return (
+      <Provider>
+        <Query query={getFullVisibilityState}>{this.renderCover}</Query>
+      </Provider>
+    );
+  }
+}
+
+const FullscreenPlayerWithData = withApollo(FullscreenPlayer);
+
+export { FullscreenPlayerWithData as default };
diff --git a/apolloschurchapp/src/ui/MediaPlayer/FullscreenPlayer.stories.js b/apolloschurchapp/src/ui/MediaPlayer/FullscreenPlayer.stories.js
new file mode 100644
index 0000000..6c889cc
--- /dev/null
+++ b/apolloschurchapp/src/ui/MediaPlayer/FullscreenPlayer.stories.js
@@ -0,0 +1,81 @@
+import React from 'react';
+import { storiesOf } from '@storybook/react-native';
+import { Mutation } from 'react-apollo';
+
+import {
+  ButtonLink,
+  CenteredView,
+  BackgroundView,
+  FlexedView,
+} from '@apollosproject/ui-kit';
+
+import { playVideoMutation } from './mutations';
+import MediaPlayer from '.';
+
+storiesOf('MediaPlayer', module).add('simple', () => (
+  <BackgroundView>
+    <FlexedView>
+      <CenteredView>
+        <Mutation mutation={playVideoMutation}>
+          {(play) => (
+            <ButtonLink
+              onPress={() =>
+                play({
+                  variables: {
+                    mediaSource: {
+                      uri:
+                        'http://embed.wistia.com/deliveries/0e364f7e6f6604384ece8a35905a53a864386e9f.bin',
+                      __typename: 'VideoMediaSource',
+                    },
+                    posterSources: [
+                      {
+                        uri:
+                          'https://apollosrock.newspring.cc/GetImage.ashx?guid=28ea9e81-09b4-411f-8ad5-741054837823',
+                        __typename: 'ImageMediaSource',
+                      },
+                    ],
+                    title: 'Holy Spirit',
+                    artist: 'Fuse Promos',
+                    isVideo: true,
+                  },
+                })
+              }
+            >
+              Play video
+            </ButtonLink>
+          )}
+        </Mutation>
+        <Mutation mutation={playVideoMutation}>
+          {(play) => (
+            <ButtonLink
+              onPress={() =>
+                play({
+                  variables: {
+                    mediaSource: {
+                      uri:
+                        'https://s3.amazonaws.com/ns.downloads/newspring/audio/newspring_sermons/2017/180513_HolySpirit_06-Message-AUDIO.mp3',
+                      __typename: 'AudioMediaSource',
+                    },
+                    posterSources: [
+                      {
+                        uri:
+                          'https://apollosrock.newspring.cc/GetImage.ashx?guid=28ea9e81-09b4-411f-8ad5-741054837823',
+                        __typename: 'ImageMediaSource',
+                      },
+                    ],
+                    title: 'The Greatest Evangelist',
+                    artist: 'Sermon',
+                    isVideo: false,
+                  },
+                })
+              }
+            >
+              Play audio
+            </ButtonLink>
+          )}
+        </Mutation>
+      </CenteredView>
+    </FlexedView>
+    <MediaPlayer />
+  </BackgroundView>
+));
diff --git a/apolloschurchapp/src/ui/MediaPlayer/FullscreenPlayer.tests.js b/apolloschurchapp/src/ui/MediaPlayer/FullscreenPlayer.tests.js
new file mode 100644
index 0000000..6fb0aa5
--- /dev/null
+++ b/apolloschurchapp/src/ui/MediaPlayer/FullscreenPlayer.tests.js
@@ -0,0 +1,108 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import { client } from 'apolloschurchapp/src/client';
+import Providers from 'apolloschurchapp/src/Providers';
+
+import FullscreenPlayer from './FullscreenPlayer';
+
+describe('the FullscreenPlayer component', () => {
+  it('should render miniplayer with video', async () => {
+    client.cache.writeData({
+      data: {
+        mediaPlayer: {
+          __typename: 'MediaPlayerState',
+          currentTrack: {
+            __typename: 'MediaPlayerTrack',
+            id: 1,
+            mediaSource: { uri: 'some-source' },
+            posterSources: [{ uri: 'some-poster-source' }],
+            title: 'Some Title',
+            artist: 'some artist',
+            isVideo: true,
+          },
+          isVisible: true,
+          isFullscreen: false,
+          isPlaying: true,
+          progress: {
+            __typename: 'MediaPlayerProgress',
+            currentTime: 12,
+            duration: 56,
+          },
+        },
+      },
+    });
+    const tree = renderer.create(
+      <Providers>
+        <FullscreenPlayer />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+
+  it('should render miniplayer with audio', async () => {
+    client.cache.writeData({
+      data: {
+        mediaPlayer: {
+          __typename: 'MediaPlayerState',
+          currentTrack: {
+            __typename: 'MediaPlayerTrack',
+            id: 1,
+            mediaSource: { uri: 'some-source' },
+            posterSources: [{ uri: 'some-poster-source' }],
+            title: 'Some Title',
+            artist: 'some artist',
+            isVideo: false,
+          },
+          isVisible: true,
+          isFullscreen: false,
+          isPlaying: true,
+          progress: {
+            __typename: 'MediaPlayerProgress',
+            currentTime: 12,
+            duration: 56,
+          },
+        },
+      },
+    });
+    const tree = renderer.create(
+      <Providers>
+        <FullscreenPlayer />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+
+  it('should render fullscreen', async () => {
+    client.cache.writeData({
+      data: {
+        mediaPlayer: {
+          __typename: 'MediaPlayerState',
+          currentTrack: {
+            __typename: 'MediaPlayerTrack',
+            id: 1,
+            mediaSource: { uri: 'some-source' },
+            posterSources: [{ uri: 'some-poster-source' }],
+            title: 'Some Title',
+            artist: 'some artist',
+            isVideo: false,
+          },
+          isVisible: true,
+          isFullscreen: true,
+          isPlaying: true,
+          progress: {
+            __typename: 'MediaPlayerProgress',
+            currentTime: 12,
+            duration: 56,
+          },
+        },
+      },
+    });
+    const tree = renderer.create(
+      <Providers>
+        <FullscreenPlayer />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/MediaPlayer/MediaPlayerSafeLayout.js b/apolloschurchapp/src/ui/MediaPlayer/MediaPlayerSafeLayout.js
new file mode 100644
index 0000000..57368b8
--- /dev/null
+++ b/apolloschurchapp/src/ui/MediaPlayer/MediaPlayerSafeLayout.js
@@ -0,0 +1,20 @@
+import React from 'react';
+import { View } from 'react-native';
+
+import { styled, LayoutConsumer } from '@apollosproject/ui-kit';
+
+const InnerView = styled(({ safeAreaInsets, isFullscreen = false, theme }) => ({
+  marginBottom: isFullscreen
+    ? 0
+    : Math.max(theme.sizing.baseUnit, safeAreaInsets.bottom * 0.75),
+}))(View);
+
+const MediaPlayerSafeLayout = (props) => (
+  <LayoutConsumer>
+    {({ safeAreaInsets }) => (
+      <InnerView safeAreaInsets={safeAreaInsets} {...props} />
+    )}
+  </LayoutConsumer>
+);
+
+export default MediaPlayerSafeLayout;
diff --git a/apolloschurchapp/src/ui/MediaPlayer/MediaPlayerSpacer.js b/apolloschurchapp/src/ui/MediaPlayer/MediaPlayerSpacer.js
new file mode 100644
index 0000000..e88b769
--- /dev/null
+++ b/apolloschurchapp/src/ui/MediaPlayer/MediaPlayerSpacer.js
@@ -0,0 +1,36 @@
+import React from 'react';
+import { SafeAreaView } from 'react-native';
+import { Query } from 'react-apollo';
+import gql from 'graphql-tag';
+import { get } from 'lodash';
+
+import { styled } from '@apollosproject/ui-kit';
+import { MINI_PLAYER_HEIGHT } from 'apolloschurchapp/src/ui/MediaPlayer';
+
+import MediaPlayerSafeLayout from './MediaPlayerSafeLayout';
+
+const mediaPlayerIsVisibleQuery = gql`
+  query {
+    mediaPlayer @client {
+      isVisible
+    }
+  }
+`;
+
+const MediaPlayerSafeLayoutWithSpacing = styled({
+  paddingBottom: MINI_PLAYER_HEIGHT,
+})(MediaPlayerSafeLayout);
+
+const MediaPlayerSpacer = (props) => (
+  <Query query={mediaPlayerIsVisibleQuery}>
+    {({ data = {} }) =>
+      get(data, 'mediaPlayer.isVisible') ? (
+        <MediaPlayerSafeLayoutWithSpacing {...props} />
+      ) : (
+        <SafeAreaView {...props} />
+      )
+    }
+  </Query>
+);
+
+export default MediaPlayerSpacer;
diff --git a/apolloschurchapp/src/ui/MediaPlayer/MiniControls.js b/apolloschurchapp/src/ui/MediaPlayer/MiniControls.js
new file mode 100644
index 0000000..80bc783
--- /dev/null
+++ b/apolloschurchapp/src/ui/MediaPlayer/MiniControls.js
@@ -0,0 +1,197 @@
+import React, { Component } from 'react';
+import { Platform, View, Animated, StyleSheet } from 'react-native';
+import { Mutation, Query } from 'react-apollo';
+
+import {
+  withTheme,
+  Icon,
+  styled,
+  Touchable,
+  H5,
+  H6,
+  ButtonIcon,
+} from '@apollosproject/ui-kit';
+
+import Seeker from './Seeker';
+
+import { getControlState } from './queries';
+
+import {
+  goFullscreen as goFullscreenMutation,
+  dismiss as dismissMutation,
+  play as playMutation,
+  pause as pauseMutation,
+} from './mutations';
+
+const MINI_PLAYER_HEIGHT = 50;
+
+const DismissBackground = styled(({ theme }) => ({
+  ...StyleSheet.absoluteFillObject,
+  alignItems: 'center',
+  justifyContent: 'center',
+  backgroundColor: theme.colors.white,
+}))(View);
+
+const TrackInfoTouchable = styled({
+  flex: 1,
+})(Touchable);
+
+const TrackInfoTouchableBackground = styled(({ theme }) => ({
+  backgroundColor: theme.colors.white,
+  flex: 1,
+}))(View);
+
+const TrackInfo = styled(({ theme }) => ({
+  paddingHorizontal: theme.sizing.baseUnit / 2,
+  height: '100%',
+  justifyContent: 'center',
+  width: '100%',
+}))(View);
+
+const TrackName = styled(({ theme }) => ({
+  height: theme.sizing.baseUnit,
+  overflow: 'hidden',
+}))(H5);
+
+const TrackArtist = styled(({ theme }) => ({
+  height: theme.sizing.baseUnit,
+  marginTop: theme.helpers.rem(-0.15625),
+  color: theme.colors.text.tertiary,
+  // overflow: 'hidden',
+}))(H6);
+
+const Container = styled(({ theme }) => ({
+  height: MINI_PLAYER_HEIGHT,
+  flexDirection: 'row',
+  justifyContent: 'flex-start',
+  overflow: 'hidden',
+  borderRadius: theme.sizing.baseUnit / 2,
+}))(View);
+
+const Shadow = styled(({ theme }) => ({
+  borderRadius: theme.sizing.baseUnit / 2,
+  ...Platform.select(theme.shadows.default),
+}))(View);
+
+// ThumbnailSpacer is used to offset the text in MiniPlayer to make room for the video/music
+// thumbnail in a way that is dynamic to the MINI_PLAYER_HEIGHT
+const ThumbnailSpacer = styled(({ isVideo }) => ({
+  height: MINI_PLAYER_HEIGHT,
+  aspectRatio: isVideo ? 16 / 9 : 1,
+}))(View);
+
+const Controls = styled(({ theme }) => ({
+  position: 'absolute',
+  right: 0,
+  bottom: 0,
+  top: -1,
+  paddingHorizontal: theme.sizing.baseUnit / 2,
+  flexDirection: 'row',
+  justifyContent: 'flex-end',
+  alignItems: 'center',
+}))(View);
+
+const MiniSeeker = styled({
+  position: 'absolute',
+  left: 0,
+  right: 0,
+  bottom: 0,
+})(Seeker);
+
+const IconStyles = withTheme(({ theme }) => ({
+  fill: theme.colors.darkTertiary,
+  size: theme.sizing.baseUnit * 1.25,
+}));
+
+const StyledIcon = IconStyles(Icon);
+const StyledButtonIcon = IconStyles(ButtonIcon);
+
+/**
+ * The MiniControls renders basic track info and a play/pause button.
+ * Also displays a close button to close the player when the track is paused.
+ */
+class MiniControls extends Component {
+  dismissAnimator = new Animated.Value(0);
+
+  shouldComponentUpdate() {
+    return false;
+  }
+
+  renderMiniControls = ({
+    data: {
+      mediaPlayer: {
+        currentTrack: { title, artist, isVideo } = {},
+        isPlaying = false,
+      } = {},
+    } = {},
+  }) => {
+    Animated.spring(this.dismissAnimator, {
+      toValue: isPlaying ? 0 : 0.8,
+      overshootClamping: true,
+      useNativeDriver: true,
+    }).start();
+    return (
+      <Mutation mutation={goFullscreenMutation}>
+        {(goFullscreen) => (
+          <Shadow>
+            <Container>
+              <Mutation mutation={dismissMutation}>
+                {(dismiss) => (
+                  <Touchable
+                    onPress={() => (isPlaying ? goFullscreen() : dismiss())}
+                  >
+                    <ThumbnailSpacer isVideo={isVideo}>
+                      <Animated.View
+                        style={[
+                          StyleSheet.absoluteFill,
+                          { opacity: this.dismissAnimator },
+                        ]}
+                      >
+                        <DismissBackground>
+                          <StyledIcon name="close" />
+                        </DismissBackground>
+                      </Animated.View>
+                    </ThumbnailSpacer>
+                  </Touchable>
+                )}
+              </Mutation>
+              <TrackInfoTouchableBackground>
+                <TrackInfoTouchable onPress={() => goFullscreen()}>
+                  <TrackInfo>
+                    <TrackName>{title}</TrackName>
+                    <TrackArtist>{artist}</TrackArtist>
+                  </TrackInfo>
+                </TrackInfoTouchable>
+              </TrackInfoTouchableBackground>
+              <Controls>
+                {isPlaying ? (
+                  <Mutation mutation={pauseMutation}>
+                    {(pause) => (
+                      <StyledButtonIcon
+                        name={'pause'}
+                        onPress={() => pause()}
+                      />
+                    )}
+                  </Mutation>
+                ) : (
+                  <Mutation mutation={playMutation}>
+                    {(play) => (
+                      <StyledButtonIcon name={'play'} onPress={() => play()} />
+                    )}
+                  </Mutation>
+                )}
+              </Controls>
+              <MiniSeeker minimal />
+            </Container>
+          </Shadow>
+        )}
+      </Mutation>
+    );
+  };
+
+  render() {
+    return <Query query={getControlState}>{this.renderMiniControls}</Query>;
+  }
+}
+
+export { MiniControls as default, MINI_PLAYER_HEIGHT };
diff --git a/apolloschurchapp/src/ui/MediaPlayer/MusicControls.js b/apolloschurchapp/src/ui/MediaPlayer/MusicControls.js
new file mode 100644
index 0000000..0bf66c6
--- /dev/null
+++ b/apolloschurchapp/src/ui/MediaPlayer/MusicControls.js
@@ -0,0 +1,177 @@
+import PropTypes from 'prop-types';
+import React, { Component } from 'react';
+import { Animated, Platform } from 'react-native';
+import MusicControl from 'react-native-music-control';
+import { withApollo, Query } from 'react-apollo';
+import { throttle, get } from 'lodash';
+
+import { PlayheadConsumer, ControlsConsumer } from './PlayheadState';
+import { getMusicControlState } from './queries';
+import { play, pause, updatePlayhead } from './mutations';
+
+class MusicControls extends Component {
+  static propTypes = {
+    currentTrack: PropTypes.shape({}),
+    currentTime: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
+    currentTimeAnimated: PropTypes.instanceOf(Animated.Value),
+    isPlaying: PropTypes.bool,
+    duration: PropTypes.number,
+    skip: PropTypes.func,
+    client: PropTypes.shape({ mutate: PropTypes.func }),
+  };
+
+  constructor(...args) {
+    super(...args);
+    // iOS is the only platform that displays currentTime and Android is notorious bad at handling
+    // the JS thread.
+    if (Platform.OS === 'ios') this.currentTimeSubscription();
+  }
+
+  componentDidUpdate(oldProps) {
+    if (this.props.duration > 1 && oldProps.duration !== this.props.duration) {
+      this.configureMusicControl();
+    }
+    if (this.props.currentTimeAnimated !== oldProps.currentTimeAnimated) {
+      if (this.listener) {
+        oldProps.currentTimeAnimated.removeListener(this.listener);
+      }
+      if (Platform.OS === 'ios') this.currentTimeSubscription();
+    }
+
+    if (
+      oldProps.currentTime !== this.props.currentTime ||
+      oldProps.isPlaying !== this.props.isPlaying
+    ) {
+      this.updatePlayback();
+    }
+  }
+
+  componentWillUnmount() {
+    MusicControl.enableBackgroundMode(false);
+    MusicControl.stopControl();
+    if (this.listener)
+      this.props.currentTimeAnimated.removeListener(this.listener);
+  }
+
+  currentTimeSubscription = () => {
+    this.listener = this.props.currentTimeAnimated.addListener(
+      throttle(({ value }) => {
+        MusicControl.updatePlayback({
+          state: this.props.isPlaying
+            ? MusicControl.STATE_PLAYING
+            : MusicControl.STATE_PAUSED,
+          elapsedTime: value,
+        });
+      }, 1000)
+    );
+  };
+
+  configureMusicControl = () => {
+    // Initialize MusicControl settings
+    MusicControl.enableBackgroundMode(true);
+
+    // Play
+    MusicControl.enableControl('play', true);
+    MusicControl.on('play', this.handleOnPlay);
+
+    // Pause/Stop
+    MusicControl.enableControl('pause', true);
+    MusicControl.enableControl('stop', false);
+    MusicControl.on('pause', this.handleOnPause);
+    MusicControl.on('stop', this.handleOnPause);
+
+    // Skip
+    MusicControl.enableControl('previousTrack', false);
+    MusicControl.enableControl('nextTrack', false);
+
+    // Seeking
+    if (this.props.skip) {
+      MusicControl.enableControl('skipForward', true);
+      MusicControl.enableControl('skipBackward', true);
+      MusicControl.on('skipForward', this.handleOnFastForward);
+      MusicControl.on('skipBackward', this.handleOnRewind);
+    }
+
+    // Scrubber
+    MusicControl.enableControl('seek', true); // Android
+    MusicControl.enableControl('changePlaybackPosition', true); // iOS
+    MusicControl.on('seek', this.handleOnSeek);
+    MusicControl.on('changePlaybackPosition', this.handleOnSeek);
+
+    // Remote (headphones) play/pause
+    MusicControl.enableControl('togglePlayPause', true);
+    MusicControl.on('togglePlayPause', () =>
+      this.props.isPlaying ? this.handleOnPause() : this.handleOnPlay()
+    );
+
+    // Remote (headphones) fast forward/rewind (iOS only) (disabled)
+    MusicControl.enableControl('seekForward', false);
+    MusicControl.enableControl('seekBackward', false);
+
+    // Swipe to dismiss native control (Android only)
+    MusicControl.enableControl('closeNotification', true, { when: 'paused' });
+
+    // Configure the visuals
+    const { currentTrack = {} } = this.props;
+    MusicControl.setNowPlaying({
+      title: currentTrack.title,
+      artist: currentTrack.artist,
+      artwork: get(currentTrack, 'posterSources[0].uri'),
+      elapsedTime: this.props.currentTime,
+      duration: this.props.duration,
+    });
+  };
+
+  updatePlayback = () => {
+    MusicControl.updatePlayback({
+      state: this.props.isPlaying
+        ? MusicControl.STATE_PLAYING
+        : MusicControl.STATE_PAUSED,
+      elapsedTime: this.props.currentTime,
+    });
+  };
+
+  handleOnPlay = () => this.props.client.mutate({ mutation: play });
+
+  handleOnPause = () => this.props.client.mutate({ mutation: pause });
+
+  handleOnFastForward = () => this.props.skip(15);
+
+  handleOnRewind = () => this.props.skip(-15);
+
+  handleOnSeek = (seekTo) =>
+    this.props.client.mutate({
+      mutation: updatePlayhead,
+      variables: {
+        currentTime: seekTo,
+      },
+    });
+
+  render() {
+    return null;
+  }
+}
+
+const MusicControlsState = (props) => (
+  <Query query={getMusicControlState}>
+    {({ data: { mediaPlayer = {} } = {} }) => (
+      <PlayheadConsumer>
+        {({ duration, currentTime }) => (
+          <ControlsConsumer>
+            {({ skip }) => (
+              <MusicControls
+                {...props}
+                currentTimeAnimated={currentTime}
+                duration={duration}
+                skip={skip}
+                {...mediaPlayer}
+              />
+            )}
+          </ControlsConsumer>
+        )}
+      </PlayheadConsumer>
+    )}
+  </Query>
+);
+
+export default withApollo(MusicControlsState);
diff --git a/apolloschurchapp/src/ui/MediaPlayer/PlayheadState.js b/apolloschurchapp/src/ui/MediaPlayer/PlayheadState.js
new file mode 100644
index 0000000..ed10ed7
--- /dev/null
+++ b/apolloschurchapp/src/ui/MediaPlayer/PlayheadState.js
@@ -0,0 +1,124 @@
+import React, { createContext, Component } from 'react';
+import { Animated } from 'react-native';
+import { Query, withApollo } from 'react-apollo';
+import PropTypes from 'prop-types';
+
+import { getMediaPlayerIsPlaying } from './queries';
+import { updatePlayhead } from './mutations';
+
+const defaultState = {
+  duration: 1,
+  currentTime: new Animated.Value(0),
+  playableDuration: new Animated.Value(1),
+  seekableDuration: new Animated.Value(1),
+  isLoading: true,
+};
+
+const controlState = () => {};
+
+const PlayheadContext = createContext(defaultState);
+
+const PlayheadControls = createContext(controlState);
+
+class ProviderWithoutApollo extends Component {
+  static propTypes = {
+    client: PropTypes.shape({
+      mutate: PropTypes.func,
+    }),
+  };
+
+  state = defaultState;
+
+  get controlState() {
+    return {
+      onLoad: this.handleOnLoad,
+      onLoadStart: this.handleOnLoadStart,
+      // onBuffer: this.handleOnBuffer,
+      onProgress: this.handleOnProgress,
+      skip: this.skip,
+      isLoading: this.state.isLoading,
+      // isBuffering: this.state.isBuffering,
+    };
+  }
+
+  handleOnLoad = ({ duration }) => {
+    this.setState({ duration, isLoading: false });
+    this.state.currentTime.setValue(0);
+    this.state.playableDuration.setValue(0);
+    this.state.seekableDuration.setValue(0);
+  };
+
+  handleOnLoadStart = () => {
+    this.setState({ isLoading: true });
+  };
+
+  // handleOnBuffer = ({ isBuffering }) => {
+  //   this.setState({ isBuffering }); // bool value https://github.com/react-native-community/react-native-video/blob/2c391f580702f9579a0ebd01c6e97415feda928b/ios/Video/RCTVideo.m#L636-L643
+  // };
+
+  handleOnProgress = ({ currentTime, playableDuration, seekableDuration }) => {
+    if (!this.seekingTo || Math.abs(this.seekingTo - currentTime) < 1) {
+      // when seeking, only update `currentTime` after the seek has finished
+      this.seekingTo = null;
+      this.lastCurrentTime = currentTime;
+      this.state.currentTime.setValue(currentTime);
+    }
+    this.state.playableDuration.setValue(playableDuration);
+    this.state.seekableDuration.setValue(seekableDuration);
+  };
+
+  handlePause = () => {
+    this.props.client.mutate({
+      mutation: updatePlayhead,
+      variables: {
+        currentTime: this.lastCurrentTime,
+      },
+    });
+  };
+
+  skip = async (secondsToSkip) => {
+    if (this.lastCurrentTime === undefined) return;
+    const currentTime = Math.min(
+      Math.max(this.lastCurrentTime + secondsToSkip, 0),
+      this.state.duration
+    );
+
+    await this.props.client.mutate({
+      mutation: updatePlayhead,
+      variables: {
+        currentTime,
+      },
+    });
+
+    this.seekingTo = currentTime;
+    this.state.currentTime.setValue(currentTime); // immediately set the playhead value so progress bar doesn't jump around
+  };
+
+  renderProviders = ({
+    data: { mediaPlayer: { isPlaying = false } = {} } = {},
+  }) => {
+    if (!isPlaying && this.wasPlaying) {
+      this.handlePause();
+    }
+    this.wasPlaying = isPlaying;
+
+    return (
+      <PlayheadControls.Provider value={this.controlState}>
+        <PlayheadContext.Provider value={this.state} {...this.props} />
+      </PlayheadControls.Provider>
+    );
+  };
+
+  render() {
+    return (
+      <Query query={getMediaPlayerIsPlaying}>{this.renderProviders}</Query>
+    );
+  }
+}
+
+const Provider = withApollo(ProviderWithoutApollo);
+
+const { Consumer: PlayheadConsumer } = PlayheadContext;
+const { Consumer: ControlsConsumer } = PlayheadControls;
+
+export { Provider, PlayheadConsumer, ControlsConsumer };
diff --git a/apolloschurchapp/src/ui/MediaPlayer/Seeker/Timestamp.js b/apolloschurchapp/src/ui/MediaPlayer/Seeker/Timestamp.js
new file mode 100644
index 0000000..ab33167
--- /dev/null
+++ b/apolloschurchapp/src/ui/MediaPlayer/Seeker/Timestamp.js
@@ -0,0 +1,95 @@
+import React, { PureComponent } from 'react';
+import { Animated } from 'react-native';
+import PropTypes from 'prop-types';
+
+import { H6, styled } from '@apollosproject/ui-kit';
+
+const TimeText = styled({
+  width: 50,
+  textAlign: 'center',
+  alignItems: 'center',
+})(H6);
+
+/**
+ * Displays a MM:SS formatted timestamp from either a number or Animate.Value in seconds
+ */
+class Timestamp extends PureComponent {
+  static propTypes = {
+    time: PropTypes.oneOfType([
+      PropTypes.number,
+      PropTypes.instanceOf(Animated.Value),
+    ]),
+    offset: PropTypes.instanceOf(Animated.Value),
+  };
+
+  state = {
+    time: 0,
+    offset: 0,
+  };
+
+  constructor(props) {
+    super(props);
+    if (typeof props.time === 'number') {
+      this.state.time = props.time;
+    } else {
+      this.listen(props);
+    }
+  }
+
+  componentWillUpdate(newProps) {
+    if (
+      newProps.time !== this.props.time ||
+      newProps.offset !== this.props.offset
+    ) {
+      this.listen(newProps);
+    }
+  }
+
+  listen = ({ time = 0, offset = 0 }) => {
+    if (this.listener) this.props.time.removeListener(this.listener);
+    if (this.offsetListener) {
+      this.props.offset.removeListener(this.offsetListener);
+    }
+
+    if (!time.addListener) {
+      this.setState({ time });
+    } else {
+      this.listener = time.addListener(({ value }) =>
+        this.setState({ time: value })
+      );
+    }
+
+    if (!offset.addListener) {
+      this.setState({ offset });
+    } else if (offset) {
+      this.offsetListener = offset.addListener(({ value }) =>
+        this.setState({ offset: value })
+      );
+    }
+  };
+
+  timestamp = (time) => {
+    // Hours, minutes and seconds
+    const hrs = Math.floor(time / 3600);
+    const mins = Math.floor((time % 3600) / 60);
+    const secs = time % 60;
+
+    let timestamp = '';
+
+    if (hrs > 0) {
+      timestamp += `${hrs}:${mins < 10 ? '0' : ''}`;
+    }
+
+    timestamp += `${mins}:${secs < 10 ? '0' : ''}`;
+    timestamp += `${Math.round(secs)}`;
+    return timestamp;
+  };
+
+  render() {
+    return (
+      <TimeText>{this.timestamp(this.state.time + this.state.offset)}</TimeText>
+    );
+  }
+}
+
+export default Timestamp;
diff --git a/apolloschurchapp/src/ui/MediaPlayer/Seeker/index.js b/apolloschurchapp/src/ui/MediaPlayer/Seeker/index.js
new file mode 100644
index 0000000..d071a72
--- /dev/null
+++ b/apolloschurchapp/src/ui/MediaPlayer/Seeker/index.js
@@ -0,0 +1,215 @@
+import React, { PureComponent } from 'react';
+import { PanResponder, Animated, View, StyleSheet } from 'react-native';
+import PropTypes from 'prop-types';
+
+import { styled, withTheme } from '@apollosproject/ui-kit';
+
+import { PlayheadConsumer, ControlsConsumer } from '../PlayheadState';
+import Timestamp from './Timestamp';
+
+const Container = styled({
+  width: '100%',
+  flexDirection: 'row',
+  justifyContent: 'space-between',
+  alignItems: 'center',
+})(View);
+
+const TrackContainer = styled(({ minimal, knobSize }) => ({
+  height: knobSize / 2,
+  flexGrow: 1,
+  justifyContent: 'center',
+  paddingTop: minimal ? 20 : knobSize / 2,
+  paddingBottom: minimal ? 0 : knobSize / 2,
+}))(View);
+
+const Track = styled(({ theme, minimal, knobSize }) => ({
+  height: knobSize / 2,
+  overflow: 'hidden',
+  borderRadius: minimal ? 0 : knobSize / 2,
+  backgroundColor: minimal
+    ? theme.colors.transparent
+    : theme.colors.darkSecondary,
+}))(View);
+
+const ProgressBar = styled(({ theme }) => ({
+  height: theme.sizing.baseUnit,
+  backgroundColor: theme.colors.secondary,
+}))(View);
+
+const Knob = styled(({ theme, knobSize }) => ({
+  height: knobSize,
+  width: knobSize,
+  position: 'absolute',
+  right: 0,
+  elevation: 2,
+  borderRadius: knobSize,
+  backgroundColor: theme.colors.text.primary,
+}))(View);
+
+/**
+ * Animated Seeker component.
+ * Depends on `PlayheadState`, so you don't pass it any props directly,
+ * but must be rendered within a `<MediaPlayer/>` component
+ */
+class Seeker extends PureComponent {
+  static propTypes = {
+    minimal: PropTypes.bool, // The only prop you need to pass - switches to a minimal version (line instead of bar)
+    currentTime: PropTypes.any, // eslint-disable-line
+    duration: PropTypes.any, // eslint-disable-line
+    style: PropTypes.any, // eslint-disable-line
+    onScrubbing: PropTypes.func,
+    knobSize: PropTypes.number, // defaults to theme.sizing.baseUnit / 1.5  (12px)
+  };
+
+  isSeeking = false;
+
+  timeAtSeekingStart = 0;
+
+  state = {
+    width: 0, // the width of the seeker bar
+  };
+
+  offsetDriver = new Animated.Value(0); // Used to track pixel offset when seeking
+
+  offsetTimeDriver = new Animated.Value(0); // Used to track time offset when seeking
+
+  panResponder = PanResponder.create({
+    onStartShouldSetPanResponder: () => true,
+    onPanResponderGrant: () => {
+      // Using `stopAnimation` only to get the currentTime value
+      this.props.currentTime.stopAnimation((value) => {
+        this.isSeeking = true;
+        this.timeAtSeekingStart = value;
+      });
+    },
+    onPanResponderMove: (e, { dx }) => {
+      // Calculate the pixel offset and apply it to the offsetDriver
+      let offset = dx;
+      const progressAtStart = this.timeAtSeekingStart / this.props.duration;
+      const positionAtStart = progressAtStart * this.state.width;
+      offset = Math.min(this.state.width - positionAtStart, offset);
+      offset = Math.max(-positionAtStart, offset);
+      this.offsetDriver.setValue(offset);
+
+      // Calculate the time offset and apply it to the offsetTimeDriver
+      const moveAmount = offset / this.state.width;
+      const moveAmountInTime = moveAmount * this.props.duration;
+      this.offsetTimeDriver.setValue(moveAmountInTime);
+
+      if (this.props.onScrubbing) this.props.onScrubbing({ isScrubbing: true });
+    },
+    onPanResponderRelease: async (e, { dx }) => {
+      // Calculate the amount in time we've moved, and skip that duration
+      const moveAmount = dx / this.state.width;
+      const moveAmountInTime = moveAmount * this.props.duration;
+      await this.props.skip(moveAmountInTime);
+
+      // Reset state
+      this.offsetDriver.setValue(0);
+      this.offsetTimeDriver.setValue(0);
+      this.isSeeking = false;
+      this.timeAtSeekingStart = 0;
+
+      if (this.props.onScrubbing)
+        this.props.onScrubbing({ isScrubbing: false });
+    },
+  });
+
+  // Calculate the real offset position of the colored track bar
+  // To be able to useNativeDriver, the trackbar is always the full-width, and we animate its X position
+  get trackBarOffset() {
+    const progress = Animated.divide(
+      this.isSeeking ? this.timeAtSeekingStart : this.props.currentTime,
+      this.props.duration
+    );
+
+    const progressInvert = Animated.subtract(1, progress);
+    const widthInvert = Animated.multiply(-1, this.state.width);
+    const position = Animated.multiply(progressInvert, widthInvert);
+    return Animated.add(position, this.offsetDriver);
+  }
+
+  // the "knob" is on top of the trackbar, the piece of UI you can grab and move around
+  get knobStyles() {
+    return [
+      StyleSheet.absoluteFill,
+      {
+        transform: [{ translateX: this.trackBarOffset }],
+      },
+    ];
+  }
+
+  handleOnLayout = ({
+    nativeEvent: {
+      layout: { width },
+    },
+  }) =>
+    this.setState({
+      /*
+       * Adjust offset width to adjust for knobSize so Knob always appears on the track. Knob is
+       * hidden when in a minimal state (miniplayer) we only make this adjustment when necessary.
+       */
+      width: this.props.minimal ? width : width - this.props.knobSize,
+    });
+
+  renderProgress = () => (
+    <Animated.View
+      style={[
+        StyleSheet.absoluteFill,
+        {
+          transform: [{ translateX: this.trackBarOffset }],
+        },
+      ]}
+    >
+      <ProgressBar />
+    </Animated.View>
+  );
+
+  render() {
+    return (
+      <Container style={this.props.style}>
+        {!this.props.minimal ? (
+          <Timestamp
+            time={this.props.currentTime}
+            offset={this.offsetTimeDriver}
+          />
+        ) : null}
+        <TrackContainer
+          minimal={this.props.minimal}
+          knobSize={this.props.knobSize}
+        >
+          <Track
+            onLayout={this.handleOnLayout}
+            minimal={this.props.minimal}
+            knobSize={this.props.knobSize}
+          >
+            {this.renderProgress()}
+          </Track>
+          <Animated.View style={this.knobStyles}>
+            {!this.props.minimal ? (
+              <Knob
+                knobSize={this.props.knobSize}
+                {...this.panResponder.panHandlers}
+              />
+            ) : null}
+          </Animated.View>
+        </TrackContainer>
+        {!this.props.minimal ? <Timestamp time={this.props.duration} /> : null}
+      </Container>
+    );
+  }
+}
+
+const SeekerWithState = withTheme(({ theme: { sizing: { baseUnit } } }) => ({
+  knobSize: Math.floor(baseUnit / 1.33),
+}))((props) => (
+  <ControlsConsumer>
+    {(controls) => (
+      <PlayheadConsumer>
+        {(playhead) => <Seeker {...props} {...playhead} {...controls} />}
+      </PlayheadConsumer>
+    )}
+  </ControlsConsumer>
+));
+
+export default SeekerWithState;
diff --git a/apolloschurchapp/src/ui/MediaPlayer/VideoWindow.js b/apolloschurchapp/src/ui/MediaPlayer/VideoWindow.js
new file mode 100644
index 0000000..4b07c38
--- /dev/null
+++ b/apolloschurchapp/src/ui/MediaPlayer/VideoWindow.js
@@ -0,0 +1,152 @@
+import React, { PureComponent } from 'react';
+import PropTypes from 'prop-types';
+import { Query, withApollo } from 'react-apollo';
+import { get } from 'lodash';
+import Video from 'react-native-video';
+import { Animated, View, StyleSheet } from 'react-native';
+
+import { styled, ActivityIndicator } from '@apollosproject/ui-kit';
+
+import { getVideoState } from './queries';
+import { pause as pauseMutation, pauseAndRestart } from './mutations';
+
+const styles = StyleSheet.create({
+  animatedPosterImage: {
+    ...StyleSheet.absoluteFillObject,
+    resizeMode: 'cover',
+  },
+});
+
+const Background = styled(({ theme }) => ({
+  ...StyleSheet.absoluteFillObject,
+  backgroundColor: theme.colors.black,
+}))(View);
+
+/**
+ * The VideoWindow displays the actual react-native-video component.
+ * It's responsible for loading the video, and updating progress + duration in state.
+ */
+class VideoWindow extends PureComponent {
+  static propTypes = {
+    client: PropTypes.shape({
+      mutate: PropTypes.func,
+    }),
+    onProgress: PropTypes.func,
+    onLoad: PropTypes.func,
+    onLoadStart: PropTypes.func,
+    // onBuffer: PropTypes.func,
+  };
+
+  loadingOverlay = new Animated.Value(1);
+
+  loadingStyle = [StyleSheet.absoluteFill, { opacity: this.loadingOverlay }];
+
+  handleOnEnd = async () => {
+    this.props.client.mutate({ mutation: pauseAndRestart });
+  };
+
+  handlePause = () => {
+    this.props.client.mutate({ mutation: pauseMutation });
+  };
+
+  handleOnProgress = (progress) => {
+    if (this.props.onProgress) this.props.onProgress(progress);
+  };
+
+  handleOnError = () => {
+    this.handlePause();
+  };
+
+  handleOnLoad = ({ duration }) => {
+    this.showLoadingIndicator(false);
+
+    if (this.props.onLoad) this.props.onLoad({ duration });
+  };
+
+  handleOnLoadStart = () => {
+    if (this.props.onLoadStart) this.props.onLoadStart();
+    this.showLoadingIndicator(true);
+  };
+
+  handleOnBuffer = ({ isBuffering }) => {
+    // if (this.props.onBuffer) this.props.onBuffer({ isBuffering });
+    this.showLoadingIndicator(!isBuffering);
+  };
+
+  setVideoRef = (element) => {
+    this.video = element;
+  };
+
+  showLoadingIndicator(isLoading) {
+    if (isLoading) {
+      Animated.spring(this.loadingOverlay, {
+        toValue: 1,
+        useNativeDriver: true,
+      });
+    } else {
+      Animated.spring(this.loadingOverlay, {
+        toValue: 0,
+        useNativeDriver: true,
+      }).start();
+    }
+  }
+
+  renderVideo = ({ data: { mediaPlayer = {} } = {} }) => {
+    if (!get(mediaPlayer, 'currentTrack.mediaSource')) return null;
+
+    const { currentTime } = mediaPlayer;
+    if (currentTime && currentTime !== this.lastCurrentTime && this.video) {
+      this.video.seek(currentTime);
+    }
+
+    this.lastCurrentTime = currentTime;
+
+    return [
+      <Video
+        ref={this.setVideoRef}
+        source={mediaPlayer.currentTrack.mediaSource}
+        paused={!mediaPlayer.isPlaying}
+        audioOnly={!mediaPlayer.showVideo}
+        ignoreSilentSwitch={'ignore'}
+        allowsExternalPlayback
+        playInBackground
+        playWhenInactive
+        onAudioBecomingNoisy={this.handlePause}
+        onEnd={this.handleOnEnd}
+        onError={this.handleOnError}
+        resizeMode={'contain'}
+        onLoadStart={this.handleOnLoadStart}
+        onLoad={this.handleOnLoad}
+        // onBuffer={this.handleOnBuffer}
+        onProgress={this.handleOnProgress}
+        style={StyleSheet.absoluteFill}
+        volume={mediaPlayer.muted ? 0 : 1}
+        repeat
+        key="video"
+      />,
+      // there's currently a bug on android where react-native-video's poster doesn't ever go away
+      // So we use our own image copmonent...which is nicer cuz we can show a nice fading animation too!
+      <Animated.Image
+        key="poster"
+        style={[
+          styles.animatedPosterImage,
+          mediaPlayer.showVideo ? this.loadingStyle : {},
+        ]}
+        source={mediaPlayer.currentTrack.posterSources}
+      />,
+    ];
+  };
+
+  render() {
+    return (
+      <Background>
+        <Query query={getVideoState}>{this.renderVideo}</Query>
+        <Animated.View style={this.loadingStyle}>
+          <ActivityIndicator size={'large'} />
+        </Animated.View>
+      </Background>
+    );
+  }
+}
+
+export default withApollo(VideoWindow);
diff --git a/apolloschurchapp/src/ui/MediaPlayer/index.js b/apolloschurchapp/src/ui/MediaPlayer/index.js
new file mode 100644
index 0000000..2264866
--- /dev/null
+++ b/apolloschurchapp/src/ui/MediaPlayer/index.js
@@ -0,0 +1,29 @@
+import React, { Component } from 'react';
+import { Query } from 'react-apollo';
+
+import FullscreenPlayer from './FullscreenPlayer';
+
+import { getMediaPlayerVisibility } from './queries';
+
+export { MINI_PLAYER_HEIGHT } from './MiniControls';
+export MediaPlayerSpacer from './MediaPlayerSpacer';
+
+/**
+ * Selectively renders FullscreenPlayer component is MediaPlayer is visible
+ */
+class MediaPlayer extends Component {
+  shouldComponentUpdate() {
+    return false; // 🚀
+  }
+
+  renderPlayer = ({ data = {} }) => {
+    if (!data.mediaPlayer || !data.mediaPlayer.isVisible) return null;
+    return <FullscreenPlayer />;
+  };
+
+  render() {
+    return <Query query={getMediaPlayerVisibility}>{this.renderPlayer}</Query>;
+  }
+}
+
+export default MediaPlayer;
diff --git a/apolloschurchapp/src/ui/MediaPlayer/mutations.js b/apolloschurchapp/src/ui/MediaPlayer/mutations.js
new file mode 100644
index 0000000..3eb3b2d
--- /dev/null
+++ b/apolloschurchapp/src/ui/MediaPlayer/mutations.js
@@ -0,0 +1,101 @@
+import gql from 'graphql-tag';
+
+const playVideoMutation = gql`
+  mutation playVideo(
+    $mediaSource: String!
+    $posterSources: String
+    $title: String
+    $artist: String
+    $isVideo: Boolean
+  ) {
+    mediaPlayerPlayNow(
+      mediaSource: $mediaSource
+      posterSources: $posterSources
+      title: $title
+      artist: $artist
+      isVideo: $isVideo
+    ) @client
+  }
+`;
+
+const goFullscreen = gql`
+  mutation {
+    mediaPlayerUpdateState(isFullscreen: true) @client
+  }
+`;
+
+const play = gql`
+  mutation {
+    mediaPlayerUpdateState(isPlaying: true) @client
+  }
+`;
+
+const pause = gql`
+  mutation {
+    mediaPlayerUpdateState(isPlaying: false) @client
+  }
+`;
+
+const dismiss = gql`
+  mutation {
+    mediaPlayerUpdateState(isPlaying: false, isVisible: false) @client
+  }
+`;
+
+const pauseAndRestart = gql`
+  mutation pause {
+    mediaPlayerUpdateState(isPlaying: false) @client
+    mediaPlayerSetPlayhead(currentTime: 0) @client
+  }
+`;
+
+const exitFullscreen = gql`
+  mutation {
+    mediaPlayerUpdateState(isFullscreen: false) @client
+  }
+`;
+
+const mute = gql`
+  mutation {
+    mediaPlayerUpdateState(muted: true) @client
+  }
+`;
+
+const unmute = gql`
+  mutation {
+    mediaPlayerUpdateState(muted: false) @client
+  }
+`;
+
+const showVideo = gql`
+  mutation {
+    mediaPlayerUpdateState(showVideo: true) @client
+  }
+`;
+
+const hideVideo = gql`
+  mutation {
+    mediaPlayerUpdateState(showVideo: false) @client
+  }
+`;
+
+const updatePlayhead = gql`
+  mutation mediaPlayerSetPlayhead($currentTime: Float) {
+    mediaPlayerSetPlayhead(currentTime: $currentTime) @client
+  }
+`;
+
+export {
+  pauseAndRestart,
+  playVideoMutation,
+  goFullscreen,
+  play,
+  pause,
+  dismiss,
+  exitFullscreen,
+  updatePlayhead,
+  mute,
+  unmute,
+  showVideo,
+  hideVideo,
+};
diff --git a/apolloschurchapp/src/ui/MediaPlayer/queries.js b/apolloschurchapp/src/ui/MediaPlayer/queries.js
new file mode 100644
index 0000000..b56957a
--- /dev/null
+++ b/apolloschurchapp/src/ui/MediaPlayer/queries.js
@@ -0,0 +1,126 @@
+import gql from 'graphql-tag';
+
+const getMediaPlayerVisibility = gql`
+  query mediaPlayerVisibility {
+    mediaPlayer @client {
+      isVisible
+    }
+  }
+`;
+
+const getMediaPlayerIsPlaying = gql`
+  query mediaPlayerVisibility {
+    mediaPlayer @client {
+      isPlaying
+    }
+  }
+`;
+
+const getFullVisibilityState = gql`
+  query fullVisibilityState {
+    mediaPlayer @client {
+      currentTrack {
+        isVideo
+      }
+      isVisible
+      isFullscreen
+    }
+  }
+`;
+
+const getControlState = gql`
+  query {
+    mediaPlayer @client {
+      isFullscreen
+      isPlaying
+      currentTrack {
+        id
+        title
+        artist
+        isVideo
+      }
+      showVideo
+      muted
+    }
+  }
+`;
+
+const getVideoState = gql`
+  query mediaPlayer {
+    mediaPlayer @client {
+      currentTrack {
+        mediaSource {
+          uri
+        }
+        posterSources {
+          uri
+        }
+        id
+        isVideo
+      }
+      currentTime
+      isPlaying
+      showVideo
+      muted
+    }
+  }
+`;
+
+const getMusicControlState = gql`
+  query musicControlState {
+    mediaPlayer @client {
+      currentTrack {
+        posterSources {
+          uri
+        }
+        title
+        artist
+      }
+      currentTime
+      isPlaying
+    }
+  }
+`;
+
+const getElapsedTime = gql`
+  query {
+    mediaPlayer @client {
+      progress {
+        currentTime
+      }
+    }
+  }
+`;
+
+const getProgress = gql`
+  query {
+    mediaPlayer @client {
+      progress {
+        currentTime
+        duration
+      }
+    }
+  }
+`;
+
+const getTotalTime = gql`
+  query {
+    mediaPlayer @client {
+      progress {
+        duration
+      }
+    }
+  }
+`;
+
+export {
+  getMediaPlayerIsPlaying,
+  getMediaPlayerVisibility,
+  getMusicControlState,
+  getFullVisibilityState,
+  getControlState,
+  getVideoState,
+  getElapsedTime,
+  getProgress,
+  getTotalTime,
+};
diff --git a/apolloschurchapp/src/ui/Onboarding/Onboarding.stories.js b/apolloschurchapp/src/ui/Onboarding/Onboarding.stories.js
deleted file mode 100644
index bf81552..0000000
--- a/apolloschurchapp/src/ui/Onboarding/Onboarding.stories.js
+++ /dev/null
@@ -1,5 +0,0 @@
-import React from 'react';
-import { storiesOf } from '@apollosproject/ui-storybook';
-import Onboarding from '.';
-
-storiesOf('Onboarding', module).add('full', () => <Onboarding />);
diff --git a/apolloschurchapp/src/ui/Onboarding/index.js b/apolloschurchapp/src/ui/Onboarding/index.js
deleted file mode 100644
index bcd6421..0000000
--- a/apolloschurchapp/src/ui/Onboarding/index.js
+++ /dev/null
@@ -1,80 +0,0 @@
-import React from 'react';
-
-import { GradientOverlayImage } from '@apollosproject/ui-kit';
-import { ApolloConsumer } from 'react-apollo';
-
-import {
-  AskNotificationsConnected,
-  AskNameConnected,
-  FeaturesConnected,
-  AboutYouConnected,
-  LocationFinderConnected,
-  OnboardingSwiper,
-} from '@apollosproject/ui-onboarding';
-
-import { requestPushPermissions } from '@apollosproject/ui-notifications';
-
-function Onboarding({ navigation }) {
-  return (
-    <OnboardingSwiper>
-      {({ swipeForward }) => (
-        <>
-          <AskNameConnected onPressPrimary={swipeForward} />
-          <FeaturesConnected
-            onPressPrimary={swipeForward}
-            BackgroundComponent={
-              <GradientOverlayImage
-                source={'https://picsum.photos/640/640/?random'}
-              />
-            }
-          />
-          <AboutYouConnected
-            onPressPrimary={swipeForward}
-            BackgroundComponent={
-              <GradientOverlayImage
-                source={'https://picsum.photos/640/640/?random'}
-              />
-            }
-          />
-          <LocationFinderConnected
-            onPressPrimary={swipeForward}
-            onNavigate={() => {
-              navigation.navigate('Location', {
-                onFinished: swipeForward,
-              });
-            }}
-            BackgroundComponent={
-              <GradientOverlayImage
-                source={'https://picsum.photos/640/640/?random'}
-              />
-            }
-          />
-          <ApolloConsumer>
-            {(client) => (
-              <AskNotificationsConnected
-                onPressPrimary={() => navigation.replace('Tabs')}
-                onRequestPushPermissions={() =>
-                  requestPushPermissions({ client })
-                }
-                primaryNavText={'Finish'}
-                BackgroundComponent={
-                  <GradientOverlayImage
-                    source={'https://picsum.photos/640/640/?random'}
-                  />
-                }
-              />
-            )}
-          </ApolloConsumer>
-        </>
-      )}
-    </OnboardingSwiper>
-  );
-}
-
-Onboarding.navigationOptions = {
-  title: 'Onboarding',
-  header: null,
-  gesturesEnabled: false,
-};
-
-export default Onboarding;
diff --git a/apolloschurchapp/src/ui/Scripture/ScriptureHTMLView.js b/apolloschurchapp/src/ui/Scripture/ScriptureHTMLView.js
new file mode 100644
index 0000000..fb6a93d
--- /dev/null
+++ b/apolloschurchapp/src/ui/Scripture/ScriptureHTMLView.js
@@ -0,0 +1,138 @@
+import React from 'react';
+import { withProps } from 'recompose';
+import { Platform } from 'react-native';
+
+import { Paragraph, H4 } from '@apollosproject/ui-kit';
+import HTMLView from 'apolloschurchapp/src/ui/HTMLView';
+import defaultRenderer, {
+  wrapTextChildren,
+} from 'apolloschurchapp/src/ui/HTMLView/defaultRenderer';
+
+import {
+  ScriptureText,
+  VerseNumber,
+  RedLetters,
+  PoeticPause,
+} from './typography';
+
+const renderer = (node, { children, ...other }) => {
+  // the defaultRenderer support several basic elements out of the box,
+  // this function only needs to handle the cases that are unique to scripture.
+  const className = (node && node.attribs && node.attribs.class) || '';
+
+  /* Verse numbers
+   * https://github.com/americanbible/api-bible-assets/blob/master/scss/eb-scripture-style/modules/_chapters-verses.scss#L33
+   */
+  if (className.includes('v')) {
+    /* TODO: a single space before and importantly a non-breaking space (`\u00A0`) after wraps the number to
+     * temporarily space verse numbers when they are not at the beginning of a sentence or
+     * paragraph. It affects all instences (albeit less noticably in some cases) so a more procise
+     * fix in the future is prefered.
+     */
+    return (
+      <VerseNumber>
+        {' '}
+        {children}
+        {`\u00A0`}
+      </VerseNumber>
+    );
+  }
+
+  /* Speaker identification and descriptive titles ("Hebrew subtitle")
+   * https://github.com/americanbible/api-bible-assets/blob/master/scss/eb-scripture-style/modules/_titles-headings.scss#L109-L126
+   */
+  if (className.includes('sp') || className.includes('d')) {
+    return <H4 padded>{children}</H4>;
+  }
+
+  /* Indented poetic line These are sometimes seen as a quote of the OT in the NT as well.
+   * This uses spaces as a less ideal fix because we are bound by the limits of rendering HTML.
+   * https://github.com/americanbible/api-bible-assets/blob/master/scss/eb-scripture-style/modules/_poetry.scss#L2
+   */
+  if (className.includes('q1')) {
+    return (
+      <ScriptureText>
+        {'     '}
+        {children}
+      </ScriptureText>
+    );
+  }
+
+  /* Double indented poetic lines. These are sometimes seen as a quote of the OT in the NT as well.
+   * This uses spaces as a less ideal fix because we are bound by the limits of rendering HTML.
+   * https://github.com/americanbible/api-bible-assets/blob/master/scss/eb-scripture-style/modules/_poetry.scss#L7
+   */
+  if (className.includes('q2')) {
+    return (
+      <ScriptureText>
+        {'          '}
+        {children}
+      </ScriptureText>
+    );
+  }
+
+  /* Triple indented poetic lines. These are sometimes seen as a quote of the OT in the NT as well.
+   * This uses spaces as a less ideal fix because we are bound by the limits of rendering HTML.
+   * https://github.com/americanbible/api-bible-assets/blob/master/scss/eb-scripture-style/modules/_poetry.scss#L8
+   */
+  if (className.includes('q3')) {
+    return (
+      <ScriptureText>
+        {'               '}
+        {children}
+      </ScriptureText>
+    );
+  }
+
+  /* Quadruple indented poetic lines. These are sometimes seen as a quote of the OT in the NT as well.
+   * This uses spaces as a less ideal fix because we are bound by the limits of rendering HTML.
+   * https://github.com/americanbible/api-bible-assets/blob/master/scss/eb-scripture-style/modules/_poetry.scss#L9
+   */
+  if (className.includes('q4')) {
+    return (
+      <ScriptureText>
+        {'                    '}
+        {children}
+      </ScriptureText>
+    );
+  }
+
+  if (className.includes('wj')) {
+    return <RedLetters>{children}</RedLetters>;
+  }
+
+  /* Poetic pause ("Selah"). Highly conditional rendering due to Android not supporting nested text
+   * alignment (https://github.com/facebook/react-native/issues/18790) and needing to keep it
+   * somewhat attractive. TODO: revisit conditional code when issue is resolved or if we refactor
+   * the parser
+   *
+   * https://github.com/americanbible/api-bible-assets/blob/master/scss/eb-scripture-style/modules/_poetry.scss#L22
+   */
+  if (className.includes('qs')) {
+    return (
+      <PoeticPause>
+        {Platform.OS === 'ios' ? `\n` : null}
+        {children}
+        {Platform.OS === 'ios' ? `\n` : `\n\n`}
+      </PoeticPause>
+    );
+  }
+
+  if (node.name === 'p') {
+    return (
+      <Paragraph>
+        <ScriptureText>
+          {wrapTextChildren(children, ScriptureText)}
+        </ScriptureText>
+      </Paragraph>
+    );
+  }
+
+  return defaultRenderer(node, { children, ...other });
+};
+
+const ScriptureHTMLView = withProps({
+  renderer,
+})(HTMLView);
+
+export default ScriptureHTMLView;
diff --git a/apolloschurchapp/src/ui/Scripture/ScriptureItem.js b/apolloschurchapp/src/ui/Scripture/ScriptureItem.js
new file mode 100644
index 0000000..b78993f
--- /dev/null
+++ b/apolloschurchapp/src/ui/Scripture/ScriptureItem.js
@@ -0,0 +1,34 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import { View } from 'react-native';
+
+import { Placeholder, H4, H6 } from '@apollosproject/ui-kit';
+
+import { LegalText } from './typography';
+import ScriptureHTMLView from './ScriptureHTMLView';
+
+const ScriptureItem = ({ reference, html, copyright, isLoading }) => (
+  <Placeholder.Paragraph
+    lineNumber={5}
+    onReady={!isLoading}
+    lastLineWidth="60%"
+    firstLineWidth="40%"
+  >
+    <View>
+      <H4>
+        <H4>{reference}</H4> <H6>WEB</H6>
+      </H4>
+      <ScriptureHTMLView>{html}</ScriptureHTMLView>
+      <LegalText>{copyright === 'PUBLIC DOMAIN' ? '' : copyright}</LegalText>
+    </View>
+  </Placeholder.Paragraph>
+);
+
+ScriptureItem.propTypes = {
+  reference: PropTypes.string,
+  html: PropTypes.string,
+  copyright: PropTypes.string,
+  isLoading: PropTypes.bool,
+};
+
+export default ScriptureItem;
diff --git a/apolloschurchapp/src/ui/Scripture/ScriptureItem.stories.js b/apolloschurchapp/src/ui/Scripture/ScriptureItem.stories.js
new file mode 100644
index 0000000..c51b7ed
--- /dev/null
+++ b/apolloschurchapp/src/ui/Scripture/ScriptureItem.stories.js
@@ -0,0 +1,210 @@
+import React from 'react';
+import { ScrollView } from 'react-native';
+import { storiesOf } from '@storybook/react-native';
+import { PaddedView } from '@apollosproject/ui-kit';
+
+import ScriptureItem from './ScriptureItem';
+
+const genesis1 = {
+  scripture: {
+    reference: 'Genesis 1:1-5',
+    html:
+      '<p class="p"><span data-number="1" class="v">1</span>In the beginning, God created the heavens and the earth. <span data-number="2" class="v">2</span>The earth was formless and empty. Darkness was on the surface of the deep and God’s Spirit was hovering over the surface of the waters.</p><p class="p"><span data-number="3" class="v">3</span>God said, “Let there be light,” and there was light. <span data-number="4" class="v">4</span>God saw the light, and saw that it was good. God divided the light from the darkness. <span data-number="5" class="v">5</span>God called the light “day”, and the darkness he called “night”. There was evening and there was morning, the first day.</p>',
+    isLoading: false,
+    copyright: 'PUBLIC DOMAIN',
+  },
+};
+
+const john1 = {
+  scripture: {
+    reference: 'John 1:1',
+    html:
+      '<p class="p"><span data-number="1" class="v">1</span>In the beginning was the Word, and the Word was with God, and the Word was God. </p>',
+    isLoading: false,
+    copyright:
+      'PUBLIC DOMAIN except in the United Kingdom, where a Crown Copyright applies to printing the KJV. See http://www.cambridge.org/about-us/who-we-are/queens-printers-patent',
+  },
+};
+
+const psalm23 = {
+  scripture: {
+    reference: 'Psalm 23',
+    html:
+      '<p class="d">A Psalm by David.</p><p class="q1"><span data-number="1" class="v">1</span>Yahweh is my shepherd:</p><p class="q2">I shall lack nothing.</p><p class="q1"><span data-number="2" class="v">2</span>He makes me lie down in green pastures.</p><p class="q2">He leads me beside still waters.</p><p class="q1"><span data-number="3" class="v">3</span>He restores my soul.</p><p class="q2">He guides me in the paths of righteousness for his name’s sake.</p><p class="q1"><span data-number="4" class="v">4</span>Even though I walk through the valley of the shadow of death,</p><p class="q2">I will fear no evil, for you are with me.</p><p class="q1">Your rod and your staff,</p><p class="q2">they comfort me.</p><p class="q1"><span data-number="5" class="v">5</span>You prepare a table before me</p><p class="q2">in the presence of my enemies.</p><p class="q1">You anoint my head with oil.</p><p class="q2">My cup runs over.</p><p class="q1"><span data-number="6" class="v">6</span>Surely goodness and loving kindness shall follow me all the days of my life,</p><p class="q2">and I will dwell in Yahweh’s house forever.</p>',
+    isLoading: false,
+  },
+};
+
+const psalm32 = {
+  scripture: {
+    reference: 'Psalm 32',
+    html:
+      '<p class="d">By David. A contemplative psalm.</p><p class="q1"><span data-number="1" class="v">1</span>Blessed is he whose disobedience is forgiven,</p><p class="q2">whose sin is covered.</p><p class="q1"><span data-number="2" class="v">2</span>Blessed is the man to whom Yahweh doesn’t impute iniquity,</p><p class="q2">in whose spirit there is no deceit.</p><p class="q1"><span data-number="3" class="v">3</span>When I kept silence, my bones wasted away through my groaning all day long.</p><p class="q1"><span data-number="4" class="v">4</span>For day and night your hand was heavy on me.</p><p class="q2">My strength was sapped in the heat of summer. <span class="qs">Selah.</span></p><p class="q1"><span data-number="5" class="v">5</span>I acknowledged my sin to you.</p><p class="q2">I didn’t hide my iniquity.</p><p class="q1">I said, I will confess my transgressions to Yahweh,</p><p class="q2">and you forgave the iniquity of my sin. <span class="qs">Selah.</span></p><p class="q1"><span data-number="6" class="v">6</span>For this, let everyone who is godly pray to you in a time when you may be found.</p><p class="q2">Surely when the great waters overflow, they shall not reach to him.</p><p class="q1"><span data-number="7" class="v">7</span>You are my hiding place.</p><p class="q2">You will preserve me from trouble.</p><p class="q2">You will surround me with songs of deliverance. <span class="qs">Selah.</span></p><p class="q1"><span data-number="8" class="v">8</span>I will instruct you and teach you in the way which you shall go.</p><p class="q2">I will counsel you with my eye on you.</p><p class="q1"><span data-number="9" class="v">9</span>Don’t be like the horse, or like the mule, which have no understanding,</p><p class="q2">who are controlled by bit and bridle, or else they will not come near to you.</p><p class="q1"><span data-number="10" class="v">10</span>Many sorrows come to the wicked,</p><p class="q2">but loving kindness shall surround him who trusts in Yahweh.</p><p class="q1"><span data-number="11" class="v">11</span>Be glad in Yahweh, and rejoice, you righteous!</p><p class="q2">Shout for joy, all you who are upright in heart!</p>',
+  },
+};
+
+const psalm119 = {
+  scripture: {
+    reference: 'Psalm 119:129 - 144',
+    html:
+      '<p class="d">PEY</p><p class="q1"><span data-number="129" class="v">129</span>Your testimonies are wonderful,</p><p class="q2">therefore my soul keeps them.</p><p class="q1"><span data-number="130" class="v">130</span>The entrance of your words gives light.</p><p class="q2">It gives understanding to the simple.</p><p class="q1"><span data-number="131" class="v">131</span>I opened my mouth wide and panted,</p><p class="q2">for I longed for your commandments.</p><p class="q1"><span data-number="132" class="v">132</span>Turn to me, and have mercy on me,</p><p class="q2">as you always do to those who love your name.</p><p class="q1"><span data-number="133" class="v">133</span>Establish my footsteps in your word.</p><p class="q2">Don’t let any iniquity have dominion over me.</p><p class="q1"><span data-number="134" class="v">134</span>Redeem me from the oppression of man,</p><p class="q2">so I will observe your precepts.</p><p class="q1"><span data-number="135" class="v">135</span>Make your face shine on your servant.</p><p class="q2">Teach me your statutes.</p><p class="q1"><span data-number="136" class="v">136</span>Streams of tears run down my eyes,</p><p class="q2">because they don’t observe your law.</p><p class="d">TZADI</p><p class="q1"><span data-number="137" class="v">137</span>You are righteous, Yahweh.</p><p class="q2">Your judgments are upright.</p><p class="q1"><span data-number="138" class="v">138</span>You have commanded your statutes in righteousness.</p><p class="q2">They are fully trustworthy.</p><p class="q1"><span data-number="139" class="v">139</span>My zeal wears me out,</p><p class="q2">because my enemies ignore your words.</p><p class="q1"><span data-number="140" class="v">140</span>Your promises have been thoroughly tested,</p><p class="q2">and your servant loves them.</p><p class="q1"><span data-number="141" class="v">141</span>I am small and despised.</p><p class="q2">I don’t forget your precepts.</p><p class="q1"><span data-number="142" class="v">142</span>Your righteousness is an everlasting righteousness.</p><p class="q2">Your law is truth.</p><p class="q1"><span data-number="143" class="v">143</span>Trouble and anguish have taken hold of me.</p><p class="q2">Your commandments are my delight.</p><p class="q1"><span data-number="144" class="v">144</span>Your testimonies are righteous forever.</p><p class="q2">Give me understanding, that I may live.</p>',
+  },
+};
+
+const songOfSolomon1 = {
+  scripture: {
+    reference: 'Song of Solomon 1:1-4',
+    html:
+      '<p class="p"><span data-number="1" class="v">1</span>The Song of songs, which is Solomon’s.</p><p class="sp">Beloved</p><p class="q1"><span data-number="2" class="v">2</span>Let him kiss me with the kisses of his mouth;</p><p class="q2">for your love is better than wine.</p><p class="q1"><span data-number="3" class="v">3</span>Your oils have a pleasing fragrance.</p><p class="q2">Your name is oil poured out,</p><p class="q2">therefore the virgins love you.</p><p class="q1"><span data-number="4" class="v">4</span>Take me away with you.</p><p class="q2">Let’s hurry.</p><p class="q2">The king has brought me into his rooms.</p><p class="sp">Friends</p><p class="q1">We will be glad and rejoice in you.</p><p class="q2">We will praise your love more than wine!</p><p class="sp">Beloved</p><p class="q1">They are right to love you.</p>',
+    isLoading: false,
+  },
+};
+
+const mark1 = {
+  scripture: {
+    reference: 'Mark 1: 1-4',
+    html:
+      '<p class="p"><span data-number="1" class="v">1</span>The beginning of the Good News of Jesus Christ, the Son of God.</p><p class="p"><span data-number="2" class="v">2</span>As it is written in the prophets,</p><p class="q1">“Behold, I send my messenger before your face,</p><p class="q2">who will prepare your way before you:</p><p class="q1"><span data-number="3" class="v">3</span>the voice of one crying in the wilderness,</p><p class="q2">‘Make ready the way of the Lord!</p><p class="q2">Make his paths straight!’”</p><p class="p"><span data-number="4" class="v">4</span>John came baptizing in the wilderness and preaching the baptism of repentance for forgiveness of sins.',
+  },
+};
+
+const john3 = {
+  scripture: {
+    reference: 'John 3:16-17',
+    html:
+      '<p class="p"><span data-number="16" class="v">16</span><span class="wj">For God so loved the world, that he gave his one and only Son, that whoever believes in him should not perish, but have eternal life. </span><span data-number="17" class="v">17</span><span class="wj">For God didn’t send his Son into the world to judge the world, but that the world should be saved through him. </span></p>',
+    isLoading: false,
+  },
+};
+
+const revelation22 = {
+  scripture: {
+    reference: 'Revelation 22:20-21',
+    html:
+      '<p class="p"><span data-number="20" class="v">20</span>He who testifies these things says, <span class="wj">“Yes, I come quickly.” </span></p><p class="p">Amen! Yes, come, Lord Jesus.</p><p class="p"><span data-number="21" class="v">21</span>The grace of the Lord Jesus Christ be with all the saints. Amen.</p>',
+    isLoading: false,
+  },
+};
+
+const revelation22Loading = {
+  scripture: {
+    reference: 'Revelation 22:20-21',
+    html:
+      '<p class="p"><span data-number="20" class="v">20</span>He who testifies these things says, <span class="wj">“Yes, I come quickly.” </span></p><p class="p">Amen! Yes, come, Lord Jesus.</p><p class="p"><span data-number="21" class="v">21</span>The grace of the Lord Jesus Christ be with all the saints. Amen.</p>',
+    isLoading: true,
+  },
+};
+
+storiesOf('Scripture', module)
+  .add('Genesis 1:1-5', () => (
+    <ScrollView>
+      <PaddedView>
+        <ScriptureItem
+          reference={genesis1.scripture.reference}
+          html={genesis1.scripture.html}
+          isLoading={genesis1.scripture.isLoading}
+          copyright={genesis1.scripture.copyright}
+        />
+      </PaddedView>
+    </ScrollView>
+  ))
+  .add('John 1:1', () => (
+    <ScrollView>
+      <PaddedView>
+        <ScriptureItem
+          reference={john1.scripture.reference}
+          html={john1.scripture.html}
+          isLoading={john1.scripture.isLoading}
+          copyright={john1.scripture.copyright}
+        />
+      </PaddedView>
+    </ScrollView>
+  ))
+  .add('Psalm 23', () => (
+    <ScrollView>
+      <PaddedView>
+        <ScriptureItem
+          reference={psalm23.scripture.reference}
+          html={psalm23.scripture.html}
+          isLoading={psalm23.scripture.isLoading}
+        />
+      </PaddedView>
+    </ScrollView>
+  ))
+  .add('Psalm 32', () => (
+    <ScrollView>
+      <PaddedView>
+        <ScriptureItem
+          reference={psalm32.scripture.reference}
+          html={psalm32.scripture.html}
+          isLoading={psalm32.scripture.isLoading}
+        />
+      </PaddedView>
+    </ScrollView>
+  ))
+  .add('Psalm 119:129 - 144', () => (
+    <ScrollView>
+      <PaddedView>
+        <ScriptureItem
+          reference={psalm119.scripture.reference}
+          html={psalm119.scripture.html}
+          isLoading={psalm119.scripture.isLoading}
+        />
+      </PaddedView>
+    </ScrollView>
+  ))
+  .add('Song of Solomon 1:1-4', () => (
+    <ScrollView>
+      <PaddedView>
+        <ScriptureItem
+          reference={songOfSolomon1.scripture.reference}
+          html={songOfSolomon1.scripture.html}
+          isLoading={songOfSolomon1.scripture.isLoading}
+        />
+      </PaddedView>
+    </ScrollView>
+  ))
+  .add('Mark 1: 1-4', () => (
+    <ScrollView>
+      <PaddedView>
+        <ScriptureItem
+          reference={mark1.scripture.reference}
+          html={mark1.scripture.html}
+          isLoading={mark1.scripture.isLoading}
+        />
+      </PaddedView>
+    </ScrollView>
+  ))
+  .add('John 3:16-17', () => (
+    <ScrollView>
+      <PaddedView>
+        <ScriptureItem
+          reference={john3.scripture.reference}
+          html={john3.scripture.html}
+          isLoading={john3.scripture.isLoading}
+        />
+      </PaddedView>
+    </ScrollView>
+  ))
+  .add('Revelation 22:20-21', () => (
+    <ScrollView>
+      <PaddedView>
+        <ScriptureItem
+          reference={revelation22.scripture.reference}
+          html={revelation22.scripture.html}
+          isLoading={revelation22.scripture.isLoading}
+        />
+      </PaddedView>
+    </ScrollView>
+  ))
+  .add('Loading State', () => (
+    <ScrollView>
+      <PaddedView>
+        <ScriptureItem
+          reference={revelation22Loading.scripture.reference}
+          html={revelation22Loading.scripture.html}
+          isLoading={revelation22Loading.scripture.isLoading}
+        />
+      </PaddedView>
+    </ScrollView>
+  ));
diff --git a/apolloschurchapp/src/ui/Scripture/ScriptureItem.tests.js b/apolloschurchapp/src/ui/Scripture/ScriptureItem.tests.js
new file mode 100644
index 0000000..b43256b
--- /dev/null
+++ b/apolloschurchapp/src/ui/Scripture/ScriptureItem.tests.js
@@ -0,0 +1,198 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import ScriptureItem from './ScriptureItem';
+
+const genesis1 = {
+  scripture: {
+    reference: 'Genesis 1:1-5',
+    html:
+      '<p class="p"><span data-number="1" class="v">1</span>In the beginning, God created the heavens and the earth. <span data-number="2" class="v">2</span>The earth was formless and empty. Darkness was on the surface of the deep and God’s Spirit was hovering over the surface of the waters.</p><p class="p"><span data-number="3" class="v">3</span>God said, “Let there be light,” and there was light. <span data-number="4" class="v">4</span>God saw the light, and saw that it was good. God divided the light from the darkness. <span data-number="5" class="v">5</span>God called the light “day”, and the darkness he called “night”. There was evening and there was morning, the first day.</p>',
+    copyright: 'PUBLIC DOMAIN',
+  },
+};
+
+const psalm23 = {
+  scripture: {
+    reference: 'Psalm 23',
+    html:
+      '<p class="d">A Psalm by David.</p><p class="q1"><span data-number="1" class="v">1</span>Yahweh is my shepherd:</p><p class="q2">I shall lack nothing.</p><p class="q1"><span data-number="2" class="v">2</span>He makes me lie down in green pastures.</p><p class="q2">He leads me beside still waters.</p><p class="q1"><span data-number="3" class="v">3</span>He restores my soul.</p><p class="q2">He guides me in the paths of righteousness for his name’s sake.</p><p class="q1"><span data-number="4" class="v">4</span>Even though I walk through the valley of the shadow of death,</p><p class="q2">I will fear no evil, for you are with me.</p><p class="q1">Your rod and your staff,</p><p class="q2">they comfort me.</p><p class="q1"><span data-number="5" class="v">5</span>You prepare a table before me</p><p class="q2">in the presence of my enemies.</p><p class="q1">You anoint my head with oil.</p><p class="q2">My cup runs over.</p><p class="q1"><span data-number="6" class="v">6</span>Surely goodness and loving kindness shall follow me all the days of my life,</p><p class="q2">and I will dwell in Yahweh’s house forever.</p>',
+
+    copyright:
+      'PUBLIC DOMAIN except in the United Kingdom, where a Crown Copyright applies to printing the KJV. See http://www.cambridge.org/about-us/who-we-are/queens-printers-patent',
+  },
+};
+
+const psalm32 = {
+  scripture: {
+    reference: 'Psalm 32',
+    html:
+      '<p class="d">By David. A contemplative psalm.</p><p class="q1"><span data-number="1" class="v">1</span>Blessed is he whose disobedience is forgiven,</p><p class="q2">whose sin is covered.</p><p class="q1"><span data-number="2" class="v">2</span>Blessed is the man to whom Yahweh doesn’t impute iniquity,</p><p class="q2">in whose spirit there is no deceit.</p><p class="q1"><span data-number="3" class="v">3</span>When I kept silence, my bones wasted away through my groaning all day long.</p><p class="q1"><span data-number="4" class="v">4</span>For day and night your hand was heavy on me.</p><p class="q2">My strength was sapped in the heat of summer. <span class="qs">Selah.</span></p><p class="q1"><span data-number="5" class="v">5</span>I acknowledged my sin to you.</p><p class="q2">I didn’t hide my iniquity.</p><p class="q1">I said, I will confess my transgressions to Yahweh,</p><p class="q2">and you forgave the iniquity of my sin. <span class="qs">Selah.</span></p><p class="q1"><span data-number="6" class="v">6</span>For this, let everyone who is godly pray to you in a time when you may be found.</p><p class="q2">Surely when the great waters overflow, they shall not reach to him.</p><p class="q1"><span data-number="7" class="v">7</span>You are my hiding place.</p><p class="q2">You will preserve me from trouble.</p><p class="q2">You will surround me with songs of deliverance. <span class="qs">Selah.</span></p><p class="q1"><span data-number="8" class="v">8</span>I will instruct you and teach you in the way which you shall go.</p><p class="q2">I will counsel you with my eye on you.</p><p class="q1"><span data-number="9" class="v">9</span>Don’t be like the horse, or like the mule, which have no understanding,</p><p class="q2">who are controlled by bit and bridle, or else they will not come near to you.</p><p class="q1"><span data-number="10" class="v">10</span>Many sorrows come to the wicked,</p><p class="q2">but loving kindness shall surround him who trusts in Yahweh.</p><p class="q1"><span data-number="11" class="v">11</span>Be glad in Yahweh, and rejoice, you righteous!</p><p class="q2">Shout for joy, all you who are upright in heart!</p>',
+  },
+};
+
+const psalm119 = {
+  scripture: {
+    reference: 'Psalm 119:129 - 144',
+    html:
+      '<p class="d">PEY</p><p class="q1"><span data-number="129" class="v">129</span>Your testimonies are wonderful,</p><p class="q2">therefore my soul keeps them.</p><p class="q1"><span data-number="130" class="v">130</span>The entrance of your words gives light.</p><p class="q2">It gives understanding to the simple.</p><p class="q1"><span data-number="131" class="v">131</span>I opened my mouth wide and panted,</p><p class="q2">for I longed for your commandments.</p><p class="q1"><span data-number="132" class="v">132</span>Turn to me, and have mercy on me,</p><p class="q2">as you always do to those who love your name.</p><p class="q1"><span data-number="133" class="v">133</span>Establish my footsteps in your word.</p><p class="q2">Don’t let any iniquity have dominion over me.</p><p class="q1"><span data-number="134" class="v">134</span>Redeem me from the oppression of man,</p><p class="q2">so I will observe your precepts.</p><p class="q1"><span data-number="135" class="v">135</span>Make your face shine on your servant.</p><p class="q2">Teach me your statutes.</p><p class="q1"><span data-number="136" class="v">136</span>Streams of tears run down my eyes,</p><p class="q2">because they don’t observe your law.</p><p class="d">TZADI</p><p class="q1"><span data-number="137" class="v">137</span>You are righteous, Yahweh.</p><p class="q2">Your judgments are upright.</p><p class="q1"><span data-number="138" class="v">138</span>You have commanded your statutes in righteousness.</p><p class="q2">They are fully trustworthy.</p><p class="q1"><span data-number="139" class="v">139</span>My zeal wears me out,</p><p class="q2">because my enemies ignore your words.</p><p class="q1"><span data-number="140" class="v">140</span>Your promises have been thoroughly tested,</p><p class="q2">and your servant loves them.</p><p class="q1"><span data-number="141" class="v">141</span>I am small and despised.</p><p class="q2">I don’t forget your precepts.</p><p class="q1"><span data-number="142" class="v">142</span>Your righteousness is an everlasting righteousness.</p><p class="q2">Your law is truth.</p><p class="q1"><span data-number="143" class="v">143</span>Trouble and anguish have taken hold of me.</p><p class="q2">Your commandments are my delight.</p><p class="q1"><span data-number="144" class="v">144</span>Your testimonies are righteous forever.</p><p class="q2">Give me understanding, that I may live.</p>',
+  },
+};
+
+const songOfSolomon1 = {
+  scripture: {
+    reference: 'Song of Solomon 1:1-4',
+    html:
+      '<p class="p"><span data-number="1" class="v">1</span>The Song of songs, which is Solomon’s.</p><p class="sp">Beloved</p><p class="q1"><span data-number="2" class="v">2</span>Let him kiss me with the kisses of his mouth;</p><p class="q2">for your love is better than wine.</p><p class="q1"><span data-number="3" class="v">3</span>Your oils have a pleasing fragrance.</p><p class="q2">Your name is oil poured out,</p><p class="q2">therefore the virgins love you.</p><p class="q1"><span data-number="4" class="v">4</span>Take me away with you.</p><p class="q2">Let’s hurry.</p><p class="q2">The king has brought me into his rooms.</p><p class="sp">Friends</p><p class="q1">We will be glad and rejoice in you.</p><p class="q2">We will praise your love more than wine!</p><p class="sp">Beloved</p><p class="q1">They are right to love you.</p>',
+    isLoading: false,
+  },
+};
+
+const mark1 = {
+  scripture: {
+    reference: 'Mark 1:1-4',
+    html:
+      '<p class="p"><span data-number="1" class="v">1</span>The beginning of the Good News of Jesus Christ, the Son of God.</p><p class="p"><span data-number="2" class="v">2</span>As it is written in the prophets,</p><p class="q1">“Behold, I send my messenger before your face,</p><p class="q2">who will prepare your way before you:</p><p class="q1"><span data-number="3" class="v">3</span>the voice of one crying in the wilderness,</p><p class="q2">‘Make ready the way of the Lord!</p><p class="q2">Make his paths straight!’”</p><p class="p"><span data-number="4" class="v">4</span>John came baptizing in the wilderness and preaching the baptism of repentance for forgiveness of sins.',
+  },
+};
+
+const john3 = {
+  scripture: {
+    reference: 'John 3:16-17',
+    html:
+      '<p class="p"><span data-number="16" class="v">16</span><span class="wj">For God so loved the world, that he gave his one and only Son, that whoever believes in him should not perish, but have eternal life. </span><span data-number="17" class="v">17</span><span class="wj">For God didn’t send his Son into the world to judge the world, but that the world should be saved through him. </span></p>',
+    isLoading: false,
+  },
+};
+
+const revelation22 = {
+  scripture: {
+    reference: 'Revelation 22:20-21',
+    html:
+      '<p class="p"><span data-number="20" class="v">20</span>He who testifies these things says, <span class="wj">“Yes, I come quickly.” </span></p><p class="p">Amen! Yes, come, Lord Jesus.</p><p class="p"><span data-number="21" class="v">21</span>The grace of the Lord Jesus Christ be with all the saints. Amen.</p>',
+  },
+};
+
+const john3Loading = {
+  scripture: {
+    reference: 'John 3:16-17',
+    html:
+      '<p class="p"><span data-number="16" class="v">16</span><span class="wj">For God so loved the world, that he gave his one and only Son, that whoever believes in him should not perish, but have eternal life. </span><span data-number="17" class="v">17</span><span class="wj">For God didn’t send his Son into the world to judge the world, but that the world should be saved through him. </span></p>',
+    isLoading: true,
+  },
+};
+
+describe('the ScriptureItem component', () => {
+  it('renders Genesis 1:1-5', () => {
+    const tree = renderer.create(
+      <Providers>
+        <ScriptureItem
+          reference={genesis1.scripture.reference}
+          html={genesis1.scripture.html}
+          copyright={genesis1.scripture.copyright}
+          isLoading={false}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('renders Psalm 23', () => {
+    const tree = renderer.create(
+      <Providers>
+        <ScriptureItem
+          reference={psalm23.scripture.reference}
+          html={psalm23.scripture.html}
+          copyright={psalm23.scripture.copyright}
+          isLoading={false}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('renders Psalm 32', () => {
+    const tree = renderer.create(
+      <Providers>
+        <ScriptureItem
+          reference={psalm32.scripture.reference}
+          html={psalm32.scripture.html}
+          isLoading={false}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('renders Psalm 119:129 - 144', () => {
+    const tree = renderer.create(
+      <Providers>
+        <ScriptureItem
+          reference={psalm119.scripture.reference}
+          html={psalm119.scripture.html}
+          isLoading={false}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('renders Song of Solomon 1:1-4', () => {
+    const tree = renderer.create(
+      <Providers>
+        <ScriptureItem
+          reference={songOfSolomon1.scripture.reference}
+          html={songOfSolomon1.scripture.html}
+          isLoading={songOfSolomon1.scripture.isLoading}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('renders Mark 1:1-4', () => {
+    const tree = renderer.create(
+      <Providers>
+        <ScriptureItem
+          reference={mark1.scripture.reference}
+          html={mark1.scripture.html}
+          isLoading={false}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('renders John 3:16-17', () => {
+    const tree = renderer.create(
+      <Providers>
+        <ScriptureItem
+          reference={john3.scripture.reference}
+          html={john3.scripture.html}
+          isLoading={john3.scripture.isLoading}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('renders Revelation 22:20-21', () => {
+    const tree = renderer.create(
+      <Providers>
+        <ScriptureItem
+          reference={revelation22.scripture.reference}
+          html={revelation22.scripture.html}
+          isLoading={false}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('renders a loading state', () => {
+    const tree = renderer.create(
+      <Providers>
+        <ScriptureItem
+          reference={john3Loading.scripture.reference}
+          html={john3Loading.scripture.html}
+          isLoading={john3Loading.scripture.isLoading}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/Scripture/ScriptureList.js b/apolloschurchapp/src/ui/Scripture/ScriptureList.js
new file mode 100644
index 0000000..f6d3015
--- /dev/null
+++ b/apolloschurchapp/src/ui/Scripture/ScriptureList.js
@@ -0,0 +1,49 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import { H4, styled, ButtonLink } from '@apollosproject/ui-kit';
+
+const StyledH4 = styled(({ theme }) => ({
+  color: theme.colors.primary,
+  textAlign: 'center',
+  textDecorationLine: 'underline',
+  paddingBottom: theme.sizing.baseUnit * 1.5,
+}))(H4);
+
+const ScriptureList = ({
+  references,
+  onPress,
+  tabDestination,
+  commas = true,
+}) => {
+  if (!references && commas) return '';
+  if (!references) return [];
+
+  let combo = references.map((reference) => `${reference}`);
+
+  if (commas) {
+    combo = combo.join(', ');
+  }
+
+  const handleOnPress = () => onPress(tabDestination);
+
+  return (
+    <StyledH4>
+      <ButtonLink padded onPress={handleOnPress}>
+        {combo}
+      </ButtonLink>
+    </StyledH4>
+  );
+};
+
+ScriptureList.propTypes = {
+  /** Toggles comma formating */
+  commas: PropTypes.bool,
+  /** The ButtonLink handler */
+  onPress: PropTypes.func,
+  /** An array of human readable references (i.e. '1 Corinthians 15:57') */
+  references: PropTypes.arrayOf(PropTypes.string),
+  /** The tab to go to onPress */
+  tabDestination: PropTypes.string,
+};
+
+export default ScriptureList;
diff --git a/apolloschurchapp/src/ui/Scripture/ScriptureList.tests.js b/apolloschurchapp/src/ui/Scripture/ScriptureList.tests.js
new file mode 100644
index 0000000..d95c212
--- /dev/null
+++ b/apolloschurchapp/src/ui/Scripture/ScriptureList.tests.js
@@ -0,0 +1,19 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import ScriptureList from './ScriptureList';
+
+const scriptureReferences = ['1 Corinthians 15:57', 'Exodus 17:8-15'];
+
+describe('the ScriptureList component', () => {
+  it('renders a scripture List', () => {
+    const tree = renderer.create(
+      <Providers>
+        <ScriptureList onPress={jest.fn()} references={scriptureReferences} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/Scripture/index.js b/apolloschurchapp/src/ui/Scripture/index.js
new file mode 100644
index 0000000..6458f99
--- /dev/null
+++ b/apolloschurchapp/src/ui/Scripture/index.js
@@ -0,0 +1,2 @@
+export { default } from './ScriptureItem';
+export ScriptureList from './ScriptureList';
diff --git a/apolloschurchapp/src/ui/Scripture/typography/ScriptureText/ScriptureText.stories.js b/apolloschurchapp/src/ui/Scripture/typography/ScriptureText/ScriptureText.stories.js
new file mode 100644
index 0000000..33ea0d2
--- /dev/null
+++ b/apolloschurchapp/src/ui/Scripture/typography/ScriptureText/ScriptureText.stories.js
@@ -0,0 +1,44 @@
+import React from 'react';
+import { View } from 'react-native';
+import { storiesOf } from '@storybook/react-native';
+
+import ScriptureText from '.';
+
+storiesOf('Scripture/typography/ScriptureText', module)
+  .add('Regular', () => (
+    <ScriptureText>
+      {`"God's commands are designed to guide you to life's very best. You will not obey Him, if you do not believe Him and trust Him. You cannot believe Him if you do not love Him. You cannot love Him unless you know Him." ― Henry Blackaby`}
+    </ScriptureText>
+  ))
+  .add('Bold', () => (
+    <ScriptureText bold>
+      {`"God's commands are designed to guide you to life's very best. You will not obey Him, if you do not believe Him and trust Him. You cannot believe Him if you do not love Him. You cannot love Him unless you know Him." ― Henry Blackaby`}
+    </ScriptureText>
+  ))
+  .add('Italic', () => (
+    <ScriptureText italic>
+      {`"God's commands are designed to guide you to life's very best. You will not obey Him, if you do not believe Him and trust Him. You cannot believe Him if you do not love Him. You cannot love Him unless you know Him." ― Henry Blackaby`}
+    </ScriptureText>
+  ))
+  .add('Bold Italic', () => (
+    <ScriptureText bold italic>
+      {`"God's commands are designed to guide you to life's very best. You will not obey Him, if you do not believe Him and trust Him. You cannot believe Him if you do not love Him. You cannot love Him unless you know Him." ― Henry Blackaby`}
+    </ScriptureText>
+  ))
+  .add('isLoading', () => (
+    <ScriptureText isLoading>
+      {`"God's commands are designed to guide you to life's very best. You will not obey Him, if you do not believe Him and trust Him. You cannot believe Him if you do not love Him. You cannot love Him unless you know Him." ― Henry Blackaby`}
+    </ScriptureText>
+  ))
+  .add('Border Box – platform testing', () => {
+    const border = { borderWidth: 1, borderStyle: 'solid' };
+
+    return (
+      <View>
+        <ScriptureText style={border}>Body Text</ScriptureText>
+        <ScriptureText style={border}>
+          {`"God's commands are designed to guide you to life's very best. You will not obey Him, if you do not believe Him and trust Him. You cannot believe Him if you do not love Him. You cannot love Him unless you know Him." ― Henry Blackaby`}
+        </ScriptureText>
+      </View>
+    );
+  });
diff --git a/apolloschurchapp/src/ui/Scripture/typography/ScriptureText/ScriptureText.tests.js b/apolloschurchapp/src/ui/Scripture/typography/ScriptureText/ScriptureText.tests.js
new file mode 100644
index 0000000..f1c7012
--- /dev/null
+++ b/apolloschurchapp/src/ui/Scripture/typography/ScriptureText/ScriptureText.tests.js
@@ -0,0 +1,72 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import ScriptureText from '.';
+
+describe('the ScriptureText component', () => {
+  it('should render correctly', () => {
+    const tree = renderer.create(
+      <Providers>
+        <ScriptureText>Default ScriptureText text</ScriptureText>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render as bold', () => {
+    const tree = renderer.create(
+      <Providers>
+        <ScriptureText bold>Bold ScriptureText text</ScriptureText>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render as italic', () => {
+    const tree = renderer.create(
+      <Providers>
+        <ScriptureText italic>Italic ScriptureText text</ScriptureText>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render as bold italic', () => {
+    const tree = renderer.create(
+      <Providers>
+        <ScriptureText bold italic>
+          Bold italic ScriptureText text
+        </ScriptureText>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should accept and render passed in styles', () => {
+    const salmon = { color: 'salmon' };
+    const tree = renderer.create(
+      <Providers>
+        <ScriptureText style={salmon}>Salmon text</ScriptureText>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a loading state', () => {
+    const tree = renderer.create(
+      <Providers>
+        <ScriptureText isLoading>Default ScriptureText text</ScriptureText>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should accept additional props', () => {
+    const tree = renderer.create(
+      <Providers>
+        <ScriptureText accessible={false}>
+          {
+            '"True faith means holding nothing back. It means putting every hope in God\'s fidelity to His Promises." ― Francis Chan'
+          }
+        </ScriptureText>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/Scripture/typography/ScriptureText/index.js b/apolloschurchapp/src/ui/Scripture/typography/ScriptureText/index.js
new file mode 100644
index 0000000..6f216c7
--- /dev/null
+++ b/apolloschurchapp/src/ui/Scripture/typography/ScriptureText/index.js
@@ -0,0 +1,47 @@
+import { Text } from 'react-native';
+import PropTypes from 'prop-types';
+import { compose, pure, setDisplayName } from 'recompose';
+
+import { styled, withPlaceholder, Placeholder } from '@apollosproject/ui-kit';
+
+const { Typography } = Placeholder;
+
+const styles = styled(({ theme, bold, italic }) => {
+  let fontStack = theme.typography.serif.regular.default;
+
+  if (bold && italic) {
+    fontStack = theme.typography.serif.bold.italic;
+  } else if (bold) {
+    fontStack = theme.typography.serif.bold.default;
+  } else if (italic) {
+    fontStack = theme.typography.serif.regular.italic;
+  }
+
+  return {
+    fontSize: theme.helpers.rem(1),
+    lineHeight: theme.helpers.verticalRhythm(1, 1.625),
+    fontFamily: fontStack,
+    color: theme.colors.text.primary,
+  };
+}, 'ScriptureText');
+
+const ScriptureText = compose(
+  setDisplayName('ScriptureText'),
+  styles,
+  withPlaceholder(Typography),
+  pure
+)(Text);
+
+ScriptureText.propTypes = {
+  bold: PropTypes.bool,
+  italic: PropTypes.bool,
+  isLoading: PropTypes.bool, // display loading placeholder
+  ...Text.propTypes,
+};
+
+ScriptureText.defaultProps = {
+  bold: false,
+  italic: false,
+};
+
+export default ScriptureText;
diff --git a/apolloschurchapp/src/ui/Scripture/typography/index.js b/apolloschurchapp/src/ui/Scripture/typography/index.js
new file mode 100644
index 0000000..b9ec8c2
--- /dev/null
+++ b/apolloschurchapp/src/ui/Scripture/typography/index.js
@@ -0,0 +1,27 @@
+import { Text } from 'react-native';
+
+import { styled } from '@apollosproject/ui-kit';
+
+import ScriptureText from './ScriptureText';
+
+const VerseNumber = styled(({ theme }) => ({
+  fontSize: theme.helpers.rem(0.6),
+  color: theme.colors.text.secondary,
+}))(ScriptureText);
+
+const RedLetters = styled(({ theme }) => ({
+  color: theme.colors.wordOfChrist,
+}))(Text);
+
+const PoeticPause = styled({
+  textAlign: 'right',
+})(ScriptureText);
+
+const LegalText = styled(({ theme }) => ({
+  fontSize: theme.helpers.rem(0.6),
+  lineHeight: theme.helpers.verticalRhythm(0.45),
+  fontFamily: theme.typography.sans.regular.default,
+  color: theme.colors.text.secondary,
+}))(ScriptureText);
+
+export { ScriptureText, VerseNumber, RedLetters, PoeticPause, LegalText };
diff --git a/apolloschurchapp/src/ui/Share/index.js b/apolloschurchapp/src/ui/Share/index.js
index 2f979c5..667f1e6 100644
--- a/apolloschurchapp/src/ui/Share/index.js
+++ b/apolloschurchapp/src/ui/Share/index.js
@@ -3,7 +3,6 @@ import PropTypes from 'prop-types';
 import { compose, pure } from 'recompose';
 import share from 'apolloschurchapp/src/utils/content/share';
 import { Touchable, Icon, withTheme } from '@apollosproject/ui-kit';
-import { AnalyticsConsumer } from '@apollosproject/ui-analytics';
 
 const enhance = compose(
   pure,
@@ -11,22 +10,9 @@ const enhance = compose(
 );
 
 const Share = enhance(({ content, theme }) => (
-  <AnalyticsConsumer>
-    {({ track }) => {
-      const onPress = () => {
-        share(content);
-        track({
-          eventName: 'ShareContent',
-          properties: { id: content.id, title: content.title },
-        });
-      };
-      return (
-        <Touchable onPress={onPress}>
-          <Icon name={'share'} fill={theme.colors.secondary} />
-        </Touchable>
-      );
-    }}
-  </AnalyticsConsumer>
+  <Touchable onPress={() => share(content)}>
+    <Icon name={'share'} fill={theme.colors.secondary} />
+  </Touchable>
 ));
 
 Share.propTypes = {
diff --git a/apolloschurchapp/src/ui/UserAvatarView/AvatarForm.js b/apolloschurchapp/src/ui/UserAvatarView/AvatarForm.js
index 49c66b0..70dabc9 100644
--- a/apolloschurchapp/src/ui/UserAvatarView/AvatarForm.js
+++ b/apolloschurchapp/src/ui/UserAvatarView/AvatarForm.js
@@ -2,7 +2,7 @@ import React, { PureComponent } from 'react';
 import { View } from 'react-native';
 import PropTypes from 'prop-types';
 import { get } from 'lodash';
-import { Query, ApolloConsumer } from 'react-apollo';
+import { Query } from 'react-apollo';
 
 import {
   Touchable,
@@ -28,11 +28,12 @@ GetPhotoData.propTypes = {
   children: PropTypes.func.isRequired,
 };
 
-const StyledView = styled(({ theme }) => ({
-  marginRight: 0,
-  marginBottom: theme.sizing.baseUnit * 0.75,
-  marginTop: theme.sizing.baseUnit * 0.5,
-}))(View);
+const StyledAvatar = withTheme(({ theme }) => ({
+  containerStyle: {
+    marginRight: 0,
+    marginBottom: theme.sizing.baseUnit / 2,
+  },
+}))(Avatar);
 
 const RoundTouchable = withTheme(({ theme, size }) => ({
   borderRadius: get(theme.sizing.avatar, size, theme.sizing.avatar.small),
@@ -52,15 +53,14 @@ export default class AvatarForm extends PureComponent {
     this.setState({ isUploadingFile: false });
   }
 
-  handleUploadPhoto = async ({ client }) => {
+  handleUploadPhoto = async () => {
     try {
       await uploadPhoto({
-        client,
         onUpload: () => this.setState({ isUploadingFile: true }),
       });
+      await this.props.refetch();
       await this.setState({ isUploadingFile: false });
     } catch (e) {
-      console.warn(e);
       this.setState({ isUploadingFile: false });
     }
   };
@@ -69,41 +69,38 @@ export default class AvatarForm extends PureComponent {
     const { isUploadingFile } = this.state;
 
     return (
-      <ApolloConsumer>
-        {(client) => (
-          <Wrapper>
-            <RoundTouchable
-              disabled={this.props.disabled}
-              onPress={() => this.handleUploadPhoto({ client })}
-              size="medium"
-            >
-              <GetPhotoData>
-                {({ photo }) => (
-                  <StyledView>
-                    <Avatar
-                      source={photo}
-                      size="medium"
-                      isLoading={isUploadingFile}
-                    />
-                  </StyledView>
-                )}
-              </GetPhotoData>
-            </RoundTouchable>
-            {this.props.text ? (
-              <H5>
-                <ButtonLink onPress={() => this.handleUploadPhoto({ client })}>
-                  Change Photo
-                </ButtonLink>
-              </H5>
-            ) : null}
-          </Wrapper>
-        )}
-      </ApolloConsumer>
+      <Wrapper>
+        <RoundTouchable
+          disabled={this.props.disabled}
+          onPress={this.handleUploadPhoto}
+          size="medium"
+        >
+          <GetPhotoData>
+            {({ photo }) => (
+              <View>
+                <StyledAvatar
+                  source={photo}
+                  size="medium"
+                  isLoading={isUploadingFile}
+                />
+              </View>
+            )}
+          </GetPhotoData>
+        </RoundTouchable>
+        {this.props.text ? (
+          <H5>
+            <ButtonLink onPress={this.handleUploadPhoto}>
+              Change Photo
+            </ButtonLink>
+          </H5>
+        ) : null}
+      </Wrapper>
     );
   }
 }
 
 AvatarForm.propTypes = {
+  refetch: PropTypes.func.isRequired,
   disabled: PropTypes.bool,
   text: PropTypes.bool,
 };
diff --git a/apolloschurchapp/src/ui/UserAvatarView/UserAvatarView.stories.js b/apolloschurchapp/src/ui/UserAvatarView/UserAvatarView.stories.js
index f32c776..76cf42a 100644
--- a/apolloschurchapp/src/ui/UserAvatarView/UserAvatarView.stories.js
+++ b/apolloschurchapp/src/ui/UserAvatarView/UserAvatarView.stories.js
@@ -1,5 +1,5 @@
 import React from 'react';
-import { storiesOf } from '@apollosproject/ui-storybook';
+import { storiesOf } from '@storybook/react-native';
 
 import UserAvatarView from '.';
 
diff --git a/apolloschurchapp/src/ui/UserAvatarView/index.js b/apolloschurchapp/src/ui/UserAvatarView/index.js
index d18a809..4228878 100644
--- a/apolloschurchapp/src/ui/UserAvatarView/index.js
+++ b/apolloschurchapp/src/ui/UserAvatarView/index.js
@@ -27,23 +27,32 @@ const Content = styled(({ theme }) => ({
 const UserAvatarView = withIsLoading(
   ({
     theme,
+    photo,
     firstName,
     lastName,
     location,
     isLoading,
+    refetch,
+    onPhotoPress,
+    setIsUploadingFile,
+    isUploadingFile,
     disabled,
     ...viewProps
   }) => (
     // todo: handle file select stuff
     <Container {...viewProps}>
-      <AvatarForm isLoading={isLoading} text={false} disabled={disabled} />
+      <AvatarForm
+        isLoading={isLoading}
+        text={false}
+        disabled={disabled}
+        photo={photo}
+        refetch={refetch}
+      />
       <Content>
         <H3>
           {firstName} {lastName}
         </H3>
-        {location && (
-          <ChannelLabel icon="pin" label={location} isLoading={isLoading} />
-        )}
+        <ChannelLabel icon="pin" label={location || ''} isLoading={isLoading} />
       </Content>
     </Container>
   )
@@ -55,8 +64,10 @@ UserAvatarView.propTypes = {
   lastName: PropTypes.string,
   location: PropTypes.string,
   isLoading: PropTypes.bool,
-  disabled: PropTypes.bool,
+  refetch: PropTypes.func,
+  onPhotoPress: PropTypes.func,
   blurIntensity: PropTypes.number,
+  allowProfileImageChange: PropTypes.bool,
   ...View.propTypes,
 };
 
diff --git a/apolloschurchapp/src/ui/UserAvatarView/uploadPhoto.js b/apolloschurchapp/src/ui/UserAvatarView/uploadPhoto.js
index cf0b4e0..f56408b 100644
--- a/apolloschurchapp/src/ui/UserAvatarView/uploadPhoto.js
+++ b/apolloschurchapp/src/ui/UserAvatarView/uploadPhoto.js
@@ -1,5 +1,6 @@
 import gql from 'graphql-tag';
 import ImagePicker from 'react-native-image-picker';
+import { client } from 'apolloschurchapp/src/client';
 import { ReactNativeFile } from 'apollo-upload-client';
 import getUserProfile from '../../tabs/connect/getUserProfile';
 
@@ -26,7 +27,7 @@ function showImagePicker() {
   });
 }
 
-export default async ({ client, onUpload = () => ({}) }) => {
+export default async ({ onUpload = () => ({}) }) => {
   try {
     const image = await showImagePicker();
     const file = new ReactNativeFile({
@@ -74,7 +75,6 @@ export default async ({ client, onUpload = () => ({}) }) => {
       },
     });
   } catch (e) {
-    console.warn(e);
     return null;
   }
 };
diff --git a/apolloschurchapp/src/ui/WebBrowser/Browser.android.js b/apolloschurchapp/src/ui/WebBrowser/Browser.android.js
index cc7d39d..49dc211 100644
--- a/apolloschurchapp/src/ui/WebBrowser/Browser.android.js
+++ b/apolloschurchapp/src/ui/WebBrowser/Browser.android.js
@@ -1,9 +1,14 @@
 import { Linking } from 'react-native';
+import { CustomTabs } from 'react-native-custom-tabs';
 
 const Browser = {
-  openURL: async (url) => {
-    if (!Linking.canOpenURL(url)) throw new Error('URL not supported');
-    Linking.openURL(url);
+  openURL: async (url, options = {}) => {
+    try {
+      await CustomTabs.openURL(url, options);
+    } catch (e) {
+      if (!Linking.canOpenURL()) throw new Error('URL not supported');
+      Linking.openURL(url);
+    }
   },
 };
 
diff --git a/apolloschurchapp/src/ui/WebBrowser/Browser.ios.js b/apolloschurchapp/src/ui/WebBrowser/Browser.ios.js
index 0716bff..7de160f 100644
--- a/apolloschurchapp/src/ui/WebBrowser/Browser.ios.js
+++ b/apolloschurchapp/src/ui/WebBrowser/Browser.ios.js
@@ -10,7 +10,7 @@ const Browser = {
         ...options,
       });
     } catch (e) {
-      if (!Linking.canOpenURL(url)) throw new Error('URL not supported');
+      if (!Linking.canOpenURL()) throw new Error('URL not supported');
       Linking.openURL(url);
     }
   },
diff --git a/apolloschurchapp/src/user-settings/ChangePassword.js b/apolloschurchapp/src/user-settings/ChangePassword.js
index 2938688..4b5bdf3 100644
--- a/apolloschurchapp/src/user-settings/ChangePassword.js
+++ b/apolloschurchapp/src/user-settings/ChangePassword.js
@@ -5,6 +5,7 @@ import { Mutation } from 'react-apollo';
 import { Formik } from 'formik';
 import * as Yup from 'yup';
 
+import { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';
 import {
   Button,
   ButtonLink,
@@ -12,17 +13,11 @@ import {
   BackgroundView,
   PaddedView,
   FlexedView,
-  styled,
 } from '@apollosproject/ui-kit';
 
 import getAuthToken from '../store/getAuthToken';
 import changePassword from './passwordChange';
 
-const Footer = styled({
-  flex: 1,
-  justifyContent: 'flex-end',
-})(SafeAreaView);
-
 class ChangePassword extends PureComponent {
   static navigationOptions = ({ navigation }) => ({
     title: 'Change Password',
@@ -44,38 +39,41 @@ class ChangePassword extends PureComponent {
 
   renderForm = (props) => (
     <FlexedView>
-      <BackgroundView>
-        <PaddedView>
-          <TextInput
-            label="New Password"
-            type="password"
-            value={props.values.password}
-            error={props.touched.password && props.errors.password}
-            onChangeText={(text) => props.setFieldValue('password', text)}
-          />
-          <TextInput
-            label="Confirm Password"
-            type="password"
-            value={props.values.confirmPassword}
-            error={
-              props.touched.confirmPassword && props.errors.confirmPassword
-            }
-            onChangeText={(text) =>
-              props.setFieldValue('confirmPassword', text)
-            }
-          />
-        </PaddedView>
-      </BackgroundView>
-      <Footer>
+      <KeyboardAwareScrollView>
+        <BackgroundView>
+          <PaddedView>
+            <TextInput
+              label="New Password"
+              type="password"
+              value={props.values.password}
+              error={props.touched.password && props.errors.password}
+              onChangeText={(text) => props.setFieldValue('password', text)}
+            />
+            <TextInput
+              label="Confirm Password"
+              type="password"
+              value={props.values.confirmPassword}
+              error={
+                props.touched.confirmPassword && props.errors.confirmPassword
+              }
+              onChangeText={(text) =>
+                props.setFieldValue('confirmPassword', text)
+              }
+            />
+          </PaddedView>
+        </BackgroundView>
+      </KeyboardAwareScrollView>
+
+      <SafeAreaView>
         <PaddedView>
           <Button
-            disabled={props.isSubmitting}
+            disabled={!props.isValid || props.isSubmitting}
             onPress={props.handleSubmit}
             title="Save"
             loading={props.isSubmitting}
           />
         </PaddedView>
-      </Footer>
+      </SafeAreaView>
     </FlexedView>
   );
 
diff --git a/apolloschurchapp/src/user-settings/Locations/Locations.tests.js b/apolloschurchapp/src/user-settings/Locations/Locations.tests.js
deleted file mode 100644
index 627fc7f..0000000
--- a/apolloschurchapp/src/user-settings/Locations/Locations.tests.js
+++ /dev/null
@@ -1,112 +0,0 @@
-import React from 'react';
-import { renderWithApolloData } from 'apolloschurchapp/src/utils/testUtils';
-
-import Providers from 'apolloschurchapp/src/Providers';
-import getCampusLocations from './getCampusLocations';
-import Location from './index';
-
-const campuses = [
-  {
-    id: 'Campus:559b23fd0aa90e81b1c023e72e230fa1',
-    latitude: 34.59814,
-    longitude: -82.62045,
-    name: 'Anderson Campus',
-    street1: '2940 Concord Rd',
-    street2: '',
-    city: 'Anderson',
-    state: 'SC',
-    distanceFromLocation: 5,
-    postalCode: '29621-3619',
-    image: {
-      uri:
-        'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3Da47e8e69-9542-42de-9ed3-ff42fdc82417',
-    },
-  },
-  {
-    id: 'Campus:965b6e6d7046a885bea4e300b5c0400d',
-    latitude: 32.95103,
-    longitude: -96.74738,
-    name: 'Dallas Campus',
-    street1: '102 N Weatherred Dr',
-    street2: '',
-    city: 'Richardson',
-    state: 'TX',
-    postalCode: '75080-5525',
-    distanceFromLocation: 50,
-    image: {
-      uri:
-        'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D5f9fd97a-fd6e-4ae5-ab5d-a9b95290d9b6',
-    },
-  },
-  {
-    id: 'Campus:4f68015ba18662a7409d1219a4ce013e',
-    latitude: 39.10501,
-    longitude: -84.51138,
-    name: 'Cincinnati Campus',
-    street1: '120 E 8th St',
-    street2: '',
-    city: 'Cincinnati',
-    state: 'OH',
-    postalCode: '45202-2118',
-    distanceFromLocation: 500,
-    image: {
-      uri:
-        'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3Dbad9eb54-3e78-44a7-a028-3f2d6e71a36f',
-    },
-  },
-  {
-    id: 'Campus:a0f64573eabf00a607bec911794d50fb',
-    latitude: 42.09203,
-    longitude: -88.13289,
-    name: 'Chicago Campus',
-    street1: '67 Algonquin Rd',
-    street2: '',
-    city: 'South Barrington',
-    state: 'IL',
-    postalCode: '60010-6143',
-    distanceFromLocation: 5000,
-    image: {
-      uri:
-        'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3Dede1fb83-968e-4bef-8d77-ad81c96e8a47',
-    },
-  },
-];
-
-describe('Display Native Map with Locations', () => {
-  const initialRegion = {
-    // roughly show the entire USA by default
-    latitude: 39.809734,
-    longitude: -98.555618,
-    latitudeDelta: 100,
-    longitudeDelta: 10,
-  };
-  it('Render a native map view', async () => {
-    const navigation = {
-      navigate: jest.fn(),
-      getParam: jest.fn(),
-      goBack: jest.fn(),
-    };
-
-    const mock = {
-      request: {
-        query: getCampusLocations,
-        variables: {
-          latitude: initialRegion.latitude,
-          longitude: initialRegion.longitude,
-        },
-      },
-      result: {
-        data: {
-          campuses,
-        },
-      },
-    };
-
-    const tree = await renderWithApolloData(
-      <Providers mocks={[mock]} addTypename={false}>
-        <Location navigation={navigation} initialRegion={initialRegion} />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/user-settings/Locations/MapView.js b/apolloschurchapp/src/user-settings/Locations/MapView.js
deleted file mode 100644
index b38e1d5..0000000
--- a/apolloschurchapp/src/user-settings/Locations/MapView.js
+++ /dev/null
@@ -1,232 +0,0 @@
-import React, { Component } from 'react';
-import PropTypes from 'prop-types';
-import { View, Animated } from 'react-native';
-import SafeAreaView from 'react-native-safe-area-view';
-import RNMapView from 'react-native-maps';
-import { debounce } from 'lodash';
-
-import {
-  Button,
-  PaddedView,
-  styled,
-  withTheme,
-  CampusCard,
-} from '@apollosproject/ui-kit';
-
-import Marker from './Marker';
-
-const { CARD_WIDTH } = CampusCard;
-
-const ContainerView = styled({
-  flex: 1,
-})(View);
-
-const FlexedMapView = styled({ flex: 1 })(({ mapRef, ...props }) => (
-  <RNMapView ref={mapRef} {...props} />
-));
-
-const getCampusAddress = (campus) =>
-  `${campus.street1}\n${campus.city}, ${campus.state} ${campus.postalCode}`;
-
-const ScrollingView = styled({
-  position: 'absolute',
-  bottom: 0,
-  left: 0,
-  right: 0,
-})(View);
-
-class MapView extends Component {
-  static propTypes = {
-    campuses: PropTypes.arrayOf(
-      PropTypes.shape({
-        latitude: PropTypes.number.isRequired,
-        longitude: PropTypes.number.isRequired,
-      })
-    ),
-    onLocationSelect: PropTypes.func.isRequired,
-    initialRegion: PropTypes.shape({
-      latitude: PropTypes.number.isRequired,
-      longitude: PropTypes.number.isRequired,
-      latitudeDelta: PropTypes.number,
-      longitudeDelta: PropTypes.number,
-    }).isRequired,
-    userLocation: PropTypes.shape({
-      latitude: PropTypes.number.isRequired,
-      longitude: PropTypes.number.isRequired,
-    }),
-    theme: PropTypes.shape({
-      sizing: PropTypes.shape({
-        baseUnit: PropTypes.number,
-      }),
-    }),
-    navigation: PropTypes.shape({
-      goBack: PropTypes.func,
-    }),
-  };
-
-  state = {
-    campus: null,
-  };
-
-  animation = new Animated.Value(0);
-
-  componentDidMount() {
-    this.animation.addListener(debounce(this.updateCoordinates));
-  }
-
-  componentDidUpdate(oldProps) {
-    if (oldProps.userLocation !== this.props.userLocation) {
-      this.updateCoordinates({ value: this.previousScrollPosition });
-    }
-  }
-
-  get contentContainerStyle() {
-    return { paddingHorizontal: this.props.theme.sizing.baseUnit * 0.75 }; // pad cards from edge of screen but account for card margin
-  }
-
-  updateCoordinates = ({ value }) => {
-    this.previousScrollPosition = value;
-    const cardIndex = Math.floor(value / CARD_WIDTH + 0.3); // animate 30% away from landing on the next item;
-    const campus = this.props.campuses[cardIndex];
-    this.setState({ campus });
-    if (!campus) return;
-
-    const { userLocation } = this.props;
-
-    let { latitude } = campus;
-    const { longitude } = campus;
-    let { latitudeDelta, longitudeDelta } = this.props.initialRegion;
-
-    if (userLocation) {
-      // Calculate rectangle that shows user's location in the view with campus at center
-      const minLat = Math.min(campus.latitude, userLocation.latitude);
-      const maxLat = Math.max(campus.latitude, userLocation.latitude);
-      const minLong = Math.min(campus.longitude, userLocation.longitude);
-      const mayLong = Math.max(campus.longitude, userLocation.longitude);
-
-      latitudeDelta = (maxLat - minLat) * 2.5;
-      longitudeDelta = (mayLong - minLong) * 2.5;
-    }
-
-    // Now, we need to transform the given lat/lng/delta up to make room for cards at bottom.
-    // To make this math simpler, we'll assume the cards take up roughly 20% of the vertical space
-    const maxDelta = Math.max(latitudeDelta, longitudeDelta);
-    latitude -= maxDelta * 0.2; // move the view up 20%
-    latitudeDelta *= 1.2; // include 20% more area in the view
-
-    this.map.animateToRegion(
-      {
-        latitude,
-        longitude,
-        latitudeDelta,
-        longitudeDelta,
-      },
-      350
-    );
-  };
-
-  render() {
-    const { campuses = [], onLocationSelect } = this.props;
-    const interpolations = campuses.map((marker, index) => {
-      const inputRange = [
-        (index - 1) * CARD_WIDTH,
-        index * CARD_WIDTH,
-        (index + 1) * CARD_WIDTH,
-      ];
-      const scale = this.animation.interpolate({
-        inputRange,
-        outputRange: [1, 2.5, 1],
-        extrapolate: 'clamp',
-      });
-      const opacity = this.animation.interpolate({
-        inputRange,
-        outputRange: [0.35, 1, 0.35],
-        extrapolate: 'clamp',
-      });
-      return { scale, opacity };
-    });
-
-    return (
-      <ContainerView>
-        <ContainerView>
-          <FlexedMapView
-            initialRegion={this.props.initialRegion}
-            showsUserLocation
-            mapRef={(map) => {
-              this.map = map;
-            }}
-          >
-            {campuses.map((campus, index) => {
-              const scaleStyle = {
-                transform: [
-                  {
-                    scale: interpolations[index].scale,
-                  },
-                ],
-              };
-              const opacityStyle = {
-                opacity: interpolations[index].opacity,
-              };
-              return (
-                <Marker
-                  key={campus.id}
-                  opacityStyle={opacityStyle}
-                  scaleStyle={scaleStyle}
-                  latitude={campus.latitude}
-                  longitude={campus.longitude}
-                />
-              );
-            })}
-          </FlexedMapView>
-          <ScrollingView>
-            <SafeAreaView forceInset={{ bottom: 'always', top: 'never' }}>
-              <Animated.ScrollView
-                horizontal
-                showsHorizontalScrollIndicator={false}
-                snapToInterval={CARD_WIDTH + 8} // account for padding
-                snapToAlignment={'start'}
-                decelerationRate={'fast'}
-                contentContainerStyle={this.contentContainerStyle} // correctly pads cards in ScrollView
-                scrollEventThrottle={16} // roughtly 1000ms/60fps = 16ms
-                onScroll={Animated.event(
-                  [
-                    {
-                      nativeEvent: {
-                        contentOffset: {
-                          x: this.animation,
-                        },
-                      },
-                    },
-                  ],
-                  { useNativeDriver: true }
-                )}
-              >
-                {campuses.map((campus) => (
-                  <CampusCard
-                    key={campus.id}
-                    distance={campus.distanceFromLocation}
-                    title={campus.name}
-                    description={getCampusAddress(campus)}
-                    images={[campus.image]}
-                  />
-                ))}
-              </Animated.ScrollView>
-              <PaddedView>
-                <Button
-                  title="Select Campus"
-                  pill={false}
-                  type="secondary"
-                  onPress={() =>
-                    onLocationSelect(this.state.campus || campuses[0])
-                  }
-                />
-              </PaddedView>
-            </SafeAreaView>
-          </ScrollingView>
-        </ContainerView>
-      </ContainerView>
-    );
-  }
-}
-
-export default withTheme()(MapView);
diff --git a/apolloschurchapp/src/user-settings/Locations/Marker.js b/apolloschurchapp/src/user-settings/Locations/Marker.js
deleted file mode 100644
index b7c10d7..0000000
--- a/apolloschurchapp/src/user-settings/Locations/Marker.js
+++ /dev/null
@@ -1,60 +0,0 @@
-import React, { memo } from 'react';
-import { View, Animated } from 'react-native';
-import PropTypes from 'prop-types';
-import { Marker } from 'react-native-maps';
-import Color from 'color';
-
-import { styled } from '@apollosproject/ui-kit';
-
-const MarkerView = styled(({ theme }) => ({
-  width: 8,
-  height: 8,
-  borderRadius: 4,
-  backgroundColor: Color(theme.colors.primary).fade(theme.alpha.medium),
-}))(View);
-
-const MarkerWrapView = styled({
-  alignItems: 'center',
-  justifyContent: 'center',
-})(View);
-
-// This is not good. Is there a better way to prevent cascading styles?
-
-const MarkerRingView = styled(({ theme }) => ({
-  width: 24,
-  height: 24,
-  borderRadius: 12,
-  right: -8,
-  top: -8,
-  backgroundColor: Color(theme.colors.primary).fade(theme.alpha.low),
-  position: 'absolute',
-  borderWidth: 1,
-  borderColor: Color(theme.colors.primary).fade(theme.alpha.medium),
-  alignItems: 'stretch',
-}))(View);
-
-const StyledMarker = memo(
-  ({ latitude, longitude, opacityStyle, scaleStyle }) => (
-    <Marker coordinate={{ latitude, longitude }}>
-      <MarkerWrapView>
-        <Animated.View style={opacityStyle}>
-          <MarkerRingView>
-            <Animated.View style={scaleStyle} />
-          </MarkerRingView>
-          <MarkerView />
-        </Animated.View>
-      </MarkerWrapView>
-    </Marker>
-  )
-);
-
-StyledMarker.displayName = 'StyledMarker';
-
-StyledMarker.propTypes = {
-  latitude: PropTypes.number.isRequired,
-  longitude: PropTypes.number.isRequired,
-  opacityStyle: PropTypes.shape({}),
-  scaleStyle: PropTypes.shape({}),
-};
-
-export default StyledMarker;
diff --git a/apolloschurchapp/src/user-settings/Locations/campusChange.js b/apolloschurchapp/src/user-settings/Locations/campusChange.js
deleted file mode 100644
index e164b7b..0000000
--- a/apolloschurchapp/src/user-settings/Locations/campusChange.js
+++ /dev/null
@@ -1,14 +0,0 @@
-import gql from 'graphql-tag';
-import CampusFragment from './campusFragment';
-
-export default gql`
-  mutation campusChange($campusId: String!) {
-    updateUserCampus(campusId: $campusId) {
-      id
-      campus {
-        ...CampusParts
-      }
-    }
-  }
-  ${CampusFragment}
-`;
diff --git a/apolloschurchapp/src/user-settings/Locations/campusFragment.js b/apolloschurchapp/src/user-settings/Locations/campusFragment.js
deleted file mode 100644
index 777cce5..0000000
--- a/apolloschurchapp/src/user-settings/Locations/campusFragment.js
+++ /dev/null
@@ -1,19 +0,0 @@
-import gql from 'graphql-tag';
-
-export default gql`
-  fragment CampusParts on Campus {
-    id
-    name
-    latitude
-    longitude
-    distanceFromLocation
-    street1
-    street2
-    city
-    state
-    postalCode
-    image {
-      uri
-    }
-  }
-`;
diff --git a/apolloschurchapp/src/user-settings/Locations/getCampusLocations.js b/apolloschurchapp/src/user-settings/Locations/getCampusLocations.js
deleted file mode 100644
index 1c98bb8..0000000
--- a/apolloschurchapp/src/user-settings/Locations/getCampusLocations.js
+++ /dev/null
@@ -1,11 +0,0 @@
-import gql from 'graphql-tag';
-import CampusFragment from './campusFragment';
-
-export default gql`
-  query getAllCampuses($latitude: Float!, $longitude: Float!) {
-    campuses(location: { latitude: $latitude, longitude: $longitude }) {
-      ...CampusParts
-    }
-  }
-  ${CampusFragment}
-`;
diff --git a/apolloschurchapp/src/user-settings/Locations/index.js b/apolloschurchapp/src/user-settings/Locations/index.js
deleted file mode 100644
index f8517c3..0000000
--- a/apolloschurchapp/src/user-settings/Locations/index.js
+++ /dev/null
@@ -1,146 +0,0 @@
-import React, { PureComponent } from 'react';
-import PropTypes from 'prop-types';
-import { Query, Mutation } from 'react-apollo';
-import { Dimensions } from 'react-native';
-
-import { PaddedView, ButtonLink } from '@apollosproject/ui-kit';
-
-import getUserProfile from '../../tabs/connect/getUserProfile';
-import MapView from './MapView';
-
-import getAllCampuses from './getCampusLocations';
-
-import campusChange from './campusChange';
-
-const getCurrentLocation = () =>
-  new Promise((resolve, reject) => {
-    navigator.geolocation.getCurrentPosition(
-      (position) => resolve(position),
-      (e) => reject(e)
-    );
-  });
-
-const screen = Dimensions.get('window');
-
-const ASPECT_RATIO = screen.width / screen.height;
-
-class Location extends PureComponent {
-  static propTypes = {
-    navigation: PropTypes.shape({
-      getParam: PropTypes.func,
-      navigate: PropTypes.func,
-      goBack: PropTypes.func,
-    }),
-    initialRegion: PropTypes.shape({
-      latitude: PropTypes.number,
-      longitude: PropTypes.number,
-      latitudeDelta: PropTypes.number,
-      longitudeDelta: PropTypes.number,
-    }),
-    onFinished: PropTypes.func,
-  };
-
-  static defaultProps = {
-    initialRegion: {
-      // roughly show the entire USA by default
-      latitude: 39.809734,
-      longitude: -98.555618,
-      latitudeDelta: 100,
-      longitudeDelta: 100 * ASPECT_RATIO,
-    },
-  };
-
-  static navigationOptions = ({ navigation }) => ({
-    title: 'Location',
-    headerLeft: null,
-    headerRight: (
-      <PaddedView vertical={false}>
-        <ButtonLink onPress={() => navigation.goBack()}>Back</ButtonLink>
-      </PaddedView>
-    ),
-  });
-
-  state = {
-    region: this.props.initialRegion,
-  };
-
-  componentDidMount() {
-    return getCurrentLocation().then((position) => {
-      if (position) {
-        this.setState({
-          userLocation: {
-            latitude: position.coords.latitude,
-            longitude: position.coords.longitude,
-          },
-        });
-      }
-    });
-  }
-
-  render() {
-    const { navigation, onFinished } = this.props;
-    // we should use the `onFinished` from the navigation param, if it exists.
-    const handleFinished = this.props.navigation.getParam(
-      'onFinished',
-      onFinished
-    );
-
-    return (
-      <Query
-        query={getAllCampuses}
-        variables={{
-          latitude: this.state.region.latitude,
-          longitude: this.state.region.longitude,
-        }}
-        fetchPolicy="cache-and-network"
-      >
-        {({ loading, error, data: { campuses = [] } = {} }) => (
-          <Mutation
-            mutation={campusChange}
-            update={async (cache, { data: { updateUserCampus } }) => {
-              const { currentUser } = await cache.readQuery({
-                query: getUserProfile,
-              });
-              await cache.writeQuery({
-                query: getUserProfile,
-                data: {
-                  currentUser: {
-                    ...currentUser,
-                    profile: {
-                      ...currentUser.profile,
-                      campus: {
-                        ...updateUserCampus.campus,
-                      },
-                    },
-                  },
-                },
-              });
-            }}
-          >
-            {(handlePress) => (
-              <MapView
-                navigation={navigation}
-                isLoading={loading}
-                error={error}
-                campuses={campuses}
-                initialRegion={this.props.initialRegion}
-                userLocation={this.state.userLocation}
-                onLocationSelect={async ({ id }) => {
-                  await handlePress({
-                    variables: {
-                      campusId: id,
-                    },
-                  });
-                  await navigation.goBack();
-                  if (handleFinished) handleFinished();
-                }}
-              />
-            )}
-          </Mutation>
-        )}
-      </Query>
-    );
-  }
-}
-
-export default Location;
diff --git a/apolloschurchapp/src/user-settings/PersonalDetails.js b/apolloschurchapp/src/user-settings/PersonalDetails.js
index e694002..71d7631 100644
--- a/apolloschurchapp/src/user-settings/PersonalDetails.js
+++ b/apolloschurchapp/src/user-settings/PersonalDetails.js
@@ -4,6 +4,7 @@ import { SafeAreaView } from 'react-native';
 import { Query, Mutation } from 'react-apollo';
 import { Formik } from 'formik';
 import * as Yup from 'yup';
+import { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';
 
 import {
   TextInput,
@@ -12,17 +13,11 @@ import {
   Button,
   ButtonLink,
   TableView,
-  styled,
 } from '@apollosproject/ui-kit';
 
 import getUserProfile from '../tabs/connect/getUserProfile';
 import updateCurrentUser from './updateCurrentUser';
 
-const Footer = styled({
-  flex: 1,
-  justifyContent: 'flex-end',
-})(SafeAreaView);
-
 class PersonalDetails extends PureComponent {
   static navigationOptions = ({ navigation }) => ({
     title: 'Personal Details',
@@ -44,36 +39,38 @@ class PersonalDetails extends PureComponent {
 
   renderForm = (props) => (
     <FlexedView>
-      <TableView>
-        <PaddedView>
-          <TextInput
-            label="First Name"
-            type="text"
-            value={props.values.firstName}
-            error={props.touched.firstName && props.errors.firstName}
-            onChangeText={(text) => props.setFieldValue('firstName', text)}
-          />
-          <TextInput
-            label="Last Name"
-            type="text"
-            value={props.values.lastName}
-            error={props.touched.lastName && props.errors.lastName}
-            onChangeText={(text) => props.setFieldValue('lastName', text)}
-          />
-        </PaddedView>
-      </TableView>
-      <TableView>
-        <PaddedView>
-          <TextInput
-            label="Email"
-            type="email"
-            value={props.values.email}
-            error={props.touched.email && props.errors.email}
-            onChangeText={(text) => props.setFieldValue('email', text)}
-          />
-        </PaddedView>
-      </TableView>
-      <Footer>
+      <KeyboardAwareScrollView>
+        <TableView>
+          <PaddedView>
+            <TextInput
+              label="First Name"
+              type="text"
+              value={props.values.firstName}
+              error={props.touched.firstName && props.errors.firstName}
+              onChangeText={(text) => props.setFieldValue('firstName', text)}
+            />
+            <TextInput
+              label="Last Name"
+              type="text"
+              value={props.values.lastName}
+              error={props.touched.lastName && props.errors.lastName}
+              onChangeText={(text) => props.setFieldValue('lastName', text)}
+            />
+          </PaddedView>
+        </TableView>
+        <TableView>
+          <PaddedView>
+            <TextInput
+              label="Email"
+              type="email"
+              value={props.values.email}
+              error={props.touched.email && props.errors.email}
+              onChangeText={(text) => props.setFieldValue('email', text)}
+            />
+          </PaddedView>
+        </TableView>
+      </KeyboardAwareScrollView>
+      <SafeAreaView>
         <PaddedView>
           <Button
             disabled={!props.isValid || props.isSubmitting}
@@ -82,7 +79,7 @@ class PersonalDetails extends PureComponent {
             loading={props.isSubmitting}
           />
         </PaddedView>
-      </Footer>
+      </SafeAreaView>
     </FlexedView>
   );
 
diff --git a/apolloschurchapp/src/user-settings/index.js b/apolloschurchapp/src/user-settings/index.js
index c386327..6d26048 100644
--- a/apolloschurchapp/src/user-settings/index.js
+++ b/apolloschurchapp/src/user-settings/index.js
@@ -18,7 +18,8 @@ import {
 import { WebBrowserConsumer } from 'apolloschurchapp/src/ui/WebBrowser';
 import AvatarForm from 'apolloschurchapp/src/ui/UserAvatarView/AvatarForm';
 
-import { getLoginState, logout } from '@apollosproject/ui-auth';
+import getLoginState from '../auth/getLoginState';
+import logout from '../auth/logout';
 
 const AvatarView = styled({
   alignItems: 'center',
@@ -50,7 +51,10 @@ class UserSettings extends PureComponent {
           return (
             <BackgroundContainer>
               <AvatarView>
-                <AvatarForm text />
+                <AvatarForm
+                  text
+                  refetch={this.props.navigation.getParam('refetch', {})}
+                />
               </AvatarView>
               <WebBrowserConsumer>
                 {(openUrl) => (
@@ -69,17 +73,6 @@ class UserSettings extends PureComponent {
                         </Cell>
                       </Touchable>
                       <Divider />
-                      <Touchable
-                        onPress={async () => {
-                          await this.props.navigation.navigate('Location');
-                        }}
-                      >
-                        <Cell>
-                          <CellText>Location</CellText>
-                          <CellIcon name="arrow-next" />
-                        </Cell>
-                      </Touchable>
-                      <Divider />
                       <Touchable
                         onPress={async () => {
                           await this.props.navigation.navigate(
diff --git a/apolloschurchapp/src/user-web-browser/Provider.js b/apolloschurchapp/src/user-web-browser/Provider.js
deleted file mode 100644
index e620207..0000000
--- a/apolloschurchapp/src/user-web-browser/Provider.js
+++ /dev/null
@@ -1,12 +0,0 @@
-import { createContext } from 'react';
-import NavigationService from '../NavigationService';
-
-// Can can either call the OpenUserWebView function directly, or call it using the Consuemer.
-// Your choice.
-export const OpenUserWebView = ({ url }) =>
-  NavigationService.navigate('UserWebBrowser', { url });
-
-const { Provider, Consumer } = createContext(OpenUserWebView);
-
-export { Provider as UserWebBrowserProvider };
-export { Consumer as UserWebBrowserConsumer };
diff --git a/apolloschurchapp/src/user-web-browser/index.js b/apolloschurchapp/src/user-web-browser/index.js
deleted file mode 100644
index d830fe5..0000000
--- a/apolloschurchapp/src/user-web-browser/index.js
+++ /dev/null
@@ -1,67 +0,0 @@
-// Provider API for WebBrowser that injects theme values and defaults to the web browser:
-// import { Platform } from 'react-native';
-import React from 'react';
-import gql from 'graphql-tag';
-import { Query } from 'react-apollo';
-import { ModalView } from '@apollosproject/ui-kit';
-import { WebView } from 'react-native-webview';
-import PropTypes from 'prop-types';
-import { get } from 'lodash';
-
-const Browser = ({ url, cookie = '', modal, navigation }) => {
-  console.warn(cookie);
-  if (modal) {
-    return (
-      <ModalView navigation={navigation}>
-        <WebView source={{ uri: url, headers: { Cookie: cookie } }} />
-      </ModalView>
-    );
-  }
-  return <WebView source={{ uri: url, headers: { Cookie: cookie } }} />;
-};
-
-Browser.propTypes = {
-  url: PropTypes.string.isRequired,
-  cookie: PropTypes.string,
-  modal: PropTypes.bool.isRequired,
-};
-
-const WITH_USER_COOKIE = gql`
-  query currentUserCookie {
-    currentUser {
-      id
-      rockToken
-    }
-  }
-`;
-
-const BrowserWithUserCookie = ({ url, navigation, modal = true }) => {
-  // get the url from the navigation param or default to the url prop;
-  const uri = navigation.getParam('url', url);
-  return (
-    <Query query={WITH_USER_COOKIE}>
-      {({ data, loading }) => {
-        if (loading) {
-          return null;
-        }
-        const cookie = get(data, 'currentUser.rockToken', '');
-        return (
-          <Browser
-            cookie={cookie}
-            url={uri}
-            modal={modal}
-            navigation={navigation}
-          />
-        );
-      }}
-    </Query>
-  );
-};
-
-BrowserWithUserCookie.propTypes = {
-  url: PropTypes.string,
-  modal: PropTypes.bool,
-};
-
-export default BrowserWithUserCookie;
-export { UserWebBrowserProvider, UserWebBrowserConsumer } from './Provider';
diff --git a/apolloschurchapp/src/utils/content/share.js b/apolloschurchapp/src/utils/content/share.js
index 7a8efae..e04063d 100644
--- a/apolloschurchapp/src/utils/content/share.js
+++ b/apolloschurchapp/src/utils/content/share.js
@@ -1,14 +1,19 @@
 import { Platform, Share } from 'react-native';
 // import { get } from 'lodash';
-// import { track, events } from 'apolloschurchapp/src/analytics';
+import { track, events } from 'apolloschurchapp/src/analytics';
 // import getSiteLink from './getSiteLink';
 
-const share = ({ title, url }) => {
+const share = ({ title, url, id = '' }) => {
   Share.share({
     title,
     message: Platform.OS === 'android' ? `${title}\n${url}` : title,
     url,
   });
+
+  track({
+    eventName: events.ShareContent,
+    properties: { title, id },
+  });
 };
 
 export default share;
diff --git a/apolloschurchapp/src/utils/fetchMoreResolver.js b/apolloschurchapp/src/utils/fetchMoreResolver.js
deleted file mode 100644
index d812283..0000000
--- a/apolloschurchapp/src/utils/fetchMoreResolver.js
+++ /dev/null
@@ -1,42 +0,0 @@
-import get from 'lodash/get';
-import set from 'lodash/fp/set';
-
-export default function fetchMoreResolver({
-  collectionName,
-  variables,
-  fetchMore,
-  data,
-} = {}) {
-  return () => {
-    const pageInfoPath = `${collectionName}.pageInfo`;
-    const edgePath = `${collectionName}.edges`;
-
-    const after = get(data, `${pageInfoPath}.endCursor`);
-    if (!after) return;
-
-    fetchMore({
-      variables: { ...variables, after },
-      updateQuery: (previousResult, { fetchMoreResult }) => {
-        // combine previous data and fetchMore data
-        const newDataWithPageInfo = set(
-          pageInfoPath,
-          {
-            ...get(previousResult, pageInfoPath, {}),
-            ...get(fetchMoreResult, pageInfoPath, {}),
-          },
-          previousResult
-        );
-        const newDataWithAdditionalItems = set(
-          edgePath,
-          [
-            ...get(previousResult, edgePath, []),
-            ...get(fetchMoreResult, edgePath, []),
-          ],
-          newDataWithPageInfo
-        );
-
-        return newDataWithAdditionalItems;
-      },
-    });
-  };
-}
diff --git a/apolloschurchapp/src/utils/testUtils.js b/apolloschurchapp/src/utils/testUtils.js
deleted file mode 100644
index 38d20f7..0000000
--- a/apolloschurchapp/src/utils/testUtils.js
+++ /dev/null
@@ -1,10 +0,0 @@
-/* eslint-disable import/prefer-default-export */
-import renderer from 'react-test-renderer';
-import wait from 'waait';
-
-export const renderWithApolloData = async (component) => {
-  const tree = renderer.create(component);
-  await wait(1);
-  tree.update(component);
-  return tree;
-};
diff --git a/apolloschurchapp/storybook/Welcome/Intro.js b/apolloschurchapp/storybook/Welcome/Intro.js
deleted file mode 100644
index 2e8b8d7..0000000
--- a/apolloschurchapp/storybook/Welcome/Intro.js
+++ /dev/null
@@ -1,43 +0,0 @@
-import React from 'react';
-import { Paragraph, BodyText } from '@apollosproject/ui-kit';
-
-import { Slide, SlideContent } from '@apollosproject/ui-onboarding';
-
-const Intro = () => (
-  <Slide>
-    <SlideContent title={`Welcome to ${'\n'}Apollos Storybook!`} icon>
-      <Paragraph>
-        <BodyText>
-          Storybook is the component workshop for the Apollos app platform.
-        </BodyText>
-      </Paragraph>
-      <Paragraph>
-        <BodyText>
-          A story is a single state of one or more UI components. You can have
-          as many stories as you want.
-        </BodyText>
-      </Paragraph>
-      <Paragraph>
-        <BodyText>
-          We use Storybook to help document UI and to serve as visual test cases
-          for different states.
-        </BodyText>
-      </Paragraph>
-      <Paragraph>
-        <BodyText>
-          Open the navigator using the navigation bar at the bottom of the
-          screen to navigate the available stories.
-        </BodyText>
-      </Paragraph>
-      <Paragraph>
-        <BodyText>
-          The stories defined inside of your app will be listed first, with
-          Apollos UI stories below them. If you setup a theme, all of the
-          stories will reflect your theme.
-        </BodyText>
-      </Paragraph>
-    </SlideContent>
-  </Slide>
-);
-
-export default Intro;
diff --git a/apolloschurchapp/storybook/Welcome/Welcome.stories.js b/apolloschurchapp/storybook/Welcome/Welcome.stories.js
new file mode 100644
index 0000000..f1c9a65
--- /dev/null
+++ b/apolloschurchapp/storybook/Welcome/Welcome.stories.js
@@ -0,0 +1,9 @@
+import React from 'react';
+import { storiesOf } from '@storybook/react-native';
+import { linkTo } from '@storybook/addon-links';
+
+import Welcome from '.';
+
+storiesOf('Welcome', module).add('to Storybook', () => (
+  <Welcome showApp={linkTo('Button')} />
+));
diff --git a/apolloschurchapp/storybook/Welcome/index.js b/apolloschurchapp/storybook/Welcome/index.js
index 6c1e852..78f7086 100644
--- a/apolloschurchapp/storybook/Welcome/index.js
+++ b/apolloschurchapp/storybook/Welcome/index.js
@@ -1,9 +1,57 @@
 import React from 'react';
-import { storiesOf } from '@apollosproject/ui-storybook';
+import PropTypes from 'prop-types';
+import { View, Text } from 'react-native';
 
-import App from '../../src';
-import Intro from './Intro';
+export default class Welcome extends React.Component {
+  styles = {
+    wrapper: {
+      flex: 1,
+      padding: 24,
+      justifyContent: 'center',
+    },
+    header: {
+      fontSize: 18,
+      marginBottom: 18,
+    },
+    content: {
+      fontSize: 12,
+      marginBottom: 10,
+      lineHeight: 18,
+    },
+  };
 
-storiesOf('Storybook', module)
-  .add('Welcome', () => <Intro />)
-  .add('App', () => <App />);
+  showApp(event) {
+    event.preventDefault();
+    if (this.props.showApp) this.props.showApp();
+  }
+
+  render() {
+    return (
+      <View style={this.styles.wrapper}>
+        <Text style={this.styles.header}>
+          Welcome to React Native Storybook
+        </Text>
+        <Text style={this.styles.content}>
+          This is a UI Component development environment for your React Native
+          app. Here you can display and interact with your UI components as
+          stories. A story is a single state of one or more UI components. You
+          can have as many stories as you want. In other words a story is like a
+          visual test case.
+        </Text>
+        <Text style={this.styles.content}>
+          We have added some stories inside the &quot;storybook/stories&quot;
+          directory for examples. Try editing the
+          &quot;storybook/stories/Welcome.js&quot; file to edit this message.
+        </Text>
+      </View>
+    );
+  }
+}
+
+Welcome.defaultProps = {
+  showApp: null,
+};
+
+Welcome.propTypes = {
+  showApp: PropTypes.func,
+};
diff --git a/apolloschurchapp/storybook/addons.js b/apolloschurchapp/storybook/addons.js
new file mode 100644
index 0000000..6aed412
--- /dev/null
+++ b/apolloschurchapp/storybook/addons.js
@@ -0,0 +1,2 @@
+import '@storybook/addon-actions/register';
+import '@storybook/addon-links/register';
diff --git a/apolloschurchapp/storybook/index.android.js b/apolloschurchapp/storybook/index.android.js
new file mode 100644
index 0000000..f0513c5
--- /dev/null
+++ b/apolloschurchapp/storybook/index.android.js
@@ -0,0 +1,3 @@
+import StorybookUI from './storybook';
+
+export default StorybookUI;
diff --git a/apolloschurchapp/storybook/index.ios.js b/apolloschurchapp/storybook/index.ios.js
new file mode 100644
index 0000000..f0513c5
--- /dev/null
+++ b/apolloschurchapp/storybook/index.ios.js
@@ -0,0 +1,3 @@
+import StorybookUI from './storybook';
+
+export default StorybookUI;
diff --git a/apolloschurchapp/storybook/index.js b/apolloschurchapp/storybook/index.js
index bcb07cf..f0513c5 100644
--- a/apolloschurchapp/storybook/index.js
+++ b/apolloschurchapp/storybook/index.js
@@ -1,21 +1,3 @@
-import StorybookUI, {
-  loadApollosStories,
-  addApollosProviderDecorator,
-  configure,
-} from '@apollosproject/ui-storybook';
-import SplashScreen from 'react-native-splash-screen';
-import Providers from '../src/Providers';
-
-import { loadStories } from './storyLoader';
-
-addApollosProviderDecorator(Providers);
-
-configure(() => {
-  require('./Welcome');
-  loadStories();
-  loadApollosStories();
-
-  SplashScreen.hide();
-}, module);
+import StorybookUI from './storybook';
 
 export default StorybookUI;
diff --git a/apolloschurchapp/storybook/storybook.js b/apolloschurchapp/storybook/storybook.js
new file mode 100644
index 0000000..19be073
--- /dev/null
+++ b/apolloschurchapp/storybook/storybook.js
@@ -0,0 +1,35 @@
+import React, { Component } from 'react';
+import { AppRegistry } from 'react-native';
+import {
+  getStorybookUI,
+  configure,
+  addDecorator,
+} from '@storybook/react-native';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+// storyLoader.js is generated on storybook start. next line disabled for CI test.
+import { loadStories } from './storyLoader'; // eslint-disable-line
+
+addDecorator((renderStorybook) => <Providers>{renderStorybook()}</Providers>);
+
+// import stories
+configure(() => {
+  loadStories();
+}, module);
+
+// This assumes that storybook is running on the same host as your RN packager,
+// to set manually use, e.g. host: 'localhost' option
+const StorybookUIRoot = getStorybookUI({ port: 7007, onDeviceUI: true });
+
+// react-native hot module loader must take in a Class - https://github.com/facebook/react-native/issues/10991
+// https://github.com/storybooks/storybook/issues/2081
+// eslint-disable-next-line react/prefer-stateless-function
+class StorybookUIHMRRoot extends Component {
+  render() {
+    return <StorybookUIRoot />;
+  }
+}
+
+AppRegistry.registerComponent('apolloschurchapp', () => StorybookUIHMRRoot);
+export default StorybookUIHMRRoot;
