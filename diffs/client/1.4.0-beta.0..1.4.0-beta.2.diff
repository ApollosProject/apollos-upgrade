diff --git a/apolloschurchapp/apollos.json b/apolloschurchapp/apollos.json
index fd2c7e7..99501bb 100644
--- a/apolloschurchapp/apollos.json
+++ b/apolloschurchapp/apollos.json
@@ -1,4 +1,4 @@
 {
-    "version": "1.4.0-beta.0",
+    "version": "1.4.0-beta.2",
     "environment": "client"
 }
\ No newline at end of file
diff --git a/apolloschurchapp/package.json b/apolloschurchapp/package.json
index 91896ab..4990314 100644
--- a/apolloschurchapp/package.json
+++ b/apolloschurchapp/package.json
@@ -48,21 +48,21 @@
     ]
   },
   "dependencies": {
-    "@apollosproject/config": "1.4.0-beta.0",
+    "@apollosproject/config": "1.4.0-beta.2",
     "@apollosproject/react-native-airplay-btn": "0.2.0",
-    "@apollosproject/ui-analytics": "1.4.0-beta.0",
-    "@apollosproject/ui-auth": "1.4.0-beta.0",
-    "@apollosproject/ui-connected": "1.4.0-beta.0",
-    "@apollosproject/ui-fragments": "1.4.0-beta.0",
-    "@apollosproject/ui-htmlview": "1.4.0-beta.0",
-    "@apollosproject/ui-kit": "1.4.0-beta.0",
-    "@apollosproject/ui-mapview": "1.4.0-beta.0",
-    "@apollosproject/ui-media-player": "1.4.0-beta.0",
-    "@apollosproject/ui-notifications": "1.4.0-beta.0",
-    "@apollosproject/ui-onboarding": "1.4.0-beta.0",
-    "@apollosproject/ui-passes": "1.4.0-beta.0",
-    "@apollosproject/ui-scripture": "1.4.0-beta.0",
-    "@apollosproject/ui-storybook": "1.4.0-beta.0",
+    "@apollosproject/ui-analytics": "1.4.0-beta.2",
+    "@apollosproject/ui-auth": "1.4.0-beta.2",
+    "@apollosproject/ui-connected": "1.4.0-beta.2",
+    "@apollosproject/ui-fragments": "1.4.0-beta.2",
+    "@apollosproject/ui-htmlview": "1.4.0-beta.2",
+    "@apollosproject/ui-kit": "1.4.0-beta.2",
+    "@apollosproject/ui-mapview": "1.4.0-beta.2",
+    "@apollosproject/ui-media-player": "1.4.0-beta.2",
+    "@apollosproject/ui-notifications": "1.4.0-beta.2",
+    "@apollosproject/ui-onboarding": "1.4.0-beta.2",
+    "@apollosproject/ui-passes": "1.4.0-beta.2",
+    "@apollosproject/ui-scripture": "1.4.0-beta.2",
+    "@apollosproject/ui-storybook": "1.4.0-beta.2",
     "@react-native-community/async-storage": "^1.5.1",
     "@react-native-community/geolocation": "^2.0.2",
     "apollo-cache-inmemory": "1.5.1",
@@ -117,7 +117,7 @@
     "yup": "0.26.6"
   },
   "devDependencies": {
-    "@apollosproject/eslint-config": "1.4.0-beta.0",
+    "@apollosproject/eslint-config": "1.4.0-beta.2",
     "babel-eslint": "10.0.1",
     "codecov": "3.6.5",
     "eslint": "^4.19.1",
diff --git a/apolloschurchapp/src/index.js b/apolloschurchapp/src/index.js
index ac79cf0..a424432 100644
--- a/apolloschurchapp/src/index.js
+++ b/apolloschurchapp/src/index.js
@@ -23,7 +23,7 @@ import Onboarding from './ui/Onboarding';
 
 const AppStatusBar = withTheme(({ theme }) => ({
   barStyle: theme.barStyle,
-  backgroundColor: theme.colors.paper,
+  backgroundColor: theme.colors.background.paper,
 }))(StatusBar);
 
 const ProtectedRouteWithSplashScreen = (props) => {
diff --git a/apolloschurchapp/src/tabs/home/Features/getFeedFeatures.js b/apolloschurchapp/src/tabs/home/Features/getFeedFeatures.js
deleted file mode 100644
index 447dd68..0000000
--- a/apolloschurchapp/src/tabs/home/Features/getFeedFeatures.js
+++ /dev/null
@@ -1,15 +0,0 @@
-import gql from 'graphql-tag';
-import ApollosConfig from '@apollosproject/config';
-
-export default gql`
-  query getFeedFeatures {
-    userFeedFeatures {
-      ...ActionListFeatureFragment
-      ...VerticalCardListFeatureFragment
-      ...HorizontalCardListFeatureFragment
-    }
-  }
-  ${ApollosConfig.FRAGMENTS.ACTION_LIST_FEATURE_FRAGMENT}
-  ${ApollosConfig.FRAGMENTS.VERTICAL_CARD_LIST_FEATURE_FRAGMENT}
-  ${ApollosConfig.FRAGMENTS.HORIZONTAL_CARD_LIST_FEATURE_FRAGMENT}
-`;
diff --git a/apolloschurchapp/src/tabs/home/Features/index.js b/apolloschurchapp/src/tabs/home/Features/index.js
deleted file mode 100644
index 099cd92..0000000
--- a/apolloschurchapp/src/tabs/home/Features/index.js
+++ /dev/null
@@ -1,197 +0,0 @@
-import React, { memo } from 'react';
-import { Query } from 'react-apollo';
-import { get } from 'lodash';
-// import PropTypes from 'prop-types';
-
-import {
-  ActionListFeature,
-  CampaignItemListFeature,
-  HorizontalCardListFeature,
-  VerticalCardListFeature,
-} from '@apollosproject/ui-connected';
-
-import GET_FEED_FEATURES from './getFeedFeatures';
-
-const handleOnPressActionItem = ({ action, navigation, relatedNode }) => {
-  if (action === 'READ_CONTENT') {
-    navigation.navigate('ContentSingle', {
-      itemId: relatedNode.id,
-      transitionKey: 2,
-    });
-  }
-  if (action === 'READ_EVENT') {
-    navigation.navigate('Event', {
-      eventId: relatedNode.id,
-      transitionKey: 2,
-    });
-  }
-};
-
-// const handleOnPressCardActionButton = ({ id, navigation, title }) =>
-//   navigation.navigate('ContentFeed', {
-//     itemId: id,
-//     itemTitle: title,
-//   });
-
-const actionListLoadingStateData = [
-  {
-    id: 'fakeId1',
-    title: '',
-    subtitle: '',
-    parentChannel: {
-      id: '',
-      name: '',
-    },
-    image: {
-      sources: [
-        {
-          uri: '',
-        },
-      ],
-    },
-  },
-  {
-    id: 'fakeId2',
-    title: '',
-    subtitle: '',
-    parentChannel: {
-      id: '',
-      name: '',
-    },
-    image: {
-      sources: [
-        {
-          uri: '',
-        },
-      ],
-    },
-  },
-  {
-    id: 'fakeId3',
-    title: '',
-    subtitle: '',
-    parentChannel: {
-      id: '',
-      name: '',
-    },
-    image: {
-      sources: [
-        {
-          uri: '',
-        },
-      ],
-    },
-  },
-  {
-    id: 'fakeId4',
-    title: '',
-    subtitle: '',
-    parentChannel: {
-      id: '',
-      name: '',
-    },
-    image: {
-      sources: [
-        {
-          uri: '',
-        },
-      ],
-    },
-  },
-];
-
-const Features = memo(({ navigation }) => (
-  <Query query={GET_FEED_FEATURES} fetchPolicy="cache-and-network">
-    {({ data: features, loading }) =>
-      get(features, 'userFeedFeatures', []).map(
-        ({
-          actions,
-          cards,
-          id,
-          isFeatured,
-          subtitle,
-          title,
-          __typename,
-          ...props
-        }) => {
-          switch (__typename) {
-            case 'ActionListFeature':
-              return (
-                <ActionListFeature
-                  // TODO: How can we better handle generating a loading state.
-                  actions={loading ? actionListLoadingStateData : actions}
-                  isLoading={loading}
-                  onPressActionItem={({ action, relatedNode }) =>
-                    handleOnPressActionItem({
-                      action,
-                      navigation,
-                      relatedNode,
-                    })
-                  }
-                  // onPressActionListButton={() =>
-                  //   handleOnPressCardActionButton({
-                  //     id,
-                  //     navigation,
-                  //     title,
-                  //   })
-                  // }
-                  subtitle={subtitle}
-                  title={title}
-                  {...props}
-                />
-              );
-            case 'HorizontalCardListFeature':
-              return (
-                <HorizontalCardListFeature
-                  cards={cards.map(({ actionIcon, ...card }) => ({
-                    ...card,
-                    ...(actionIcon != null
-                      ? { actionIcon: card.actionIcon }
-                      : {}),
-                    coverImage: get(card, 'coverImage.sources', undefined),
-                    __typename: card.relatedNode.__typename,
-                    id: card.relatedNode.id,
-                  }))}
-                  isLoading={loading}
-                  listKey={id}
-                  onPressItem={({ action, relatedNode }) =>
-                    handleOnPressActionItem({ action, relatedNode, navigation })
-                  }
-                  subtitle={subtitle}
-                />
-              );
-            case 'VerticalCardListFeature': // eslint-disable-line no-case-declarations
-              const Component = isFeatured
-                ? CampaignItemListFeature
-                : VerticalCardListFeature;
-              return (
-                <Component
-                  cards={cards.map(({ actionIcon, ...card }) => ({
-                    ...card,
-                    ...(actionIcon != null
-                      ? { actionIcon: card.actionIcon }
-                      : {}),
-                    coverImage: get(card, 'coverImage.sources', undefined),
-                    __typename: card.relatedNode.__typename,
-                  }))}
-                  isLoading={loading}
-                  listKey={id}
-                  onPressItem={({ action, relatedNode }) =>
-                    handleOnPressActionItem({ action, relatedNode, navigation })
-                  }
-                  subtitle={subtitle}
-                  title={title}
-                />
-              );
-            default:
-              return null;
-          }
-        }
-      )
-    }
-  </Query>
-));
-
-Features.displayName = 'Features';
-
-export default Features;
diff --git a/apolloschurchapp/src/tabs/home/Home.js b/apolloschurchapp/src/tabs/home/Home.js
index 86a249d..966f425 100644
--- a/apolloschurchapp/src/tabs/home/Home.js
+++ b/apolloschurchapp/src/tabs/home/Home.js
@@ -1,18 +1,10 @@
 import React, { PureComponent } from 'react';
-import { Query } from 'react-apollo';
 import { Image } from 'react-native';
 import SafeAreaView from 'react-native-safe-area-view';
-import { get } from 'lodash';
 import PropTypes from 'prop-types';
 
-import {
-  ContentCardConnected,
-  fetchMoreResolver,
-} from '@apollosproject/ui-connected';
-import { styled, FeedView, BackgroundView } from '@apollosproject/ui-kit';
-
-import Features from './Features';
-import GET_USER_FEED from './getUserFeed';
+import { styled, BackgroundView } from '@apollosproject/ui-kit';
+import { FeaturesFeedConnected } from '@apollosproject/ui-connected';
 
 const LogoTitle = styled(({ theme }) => ({
   height: theme.sizing.baseUnit,
@@ -40,43 +32,31 @@ class Home extends PureComponent {
       transitionKey: item.transitionKey,
     });
 
+  handleOnPressActionItem = ({ action, relatedNode }) => {
+    if (action === 'READ_CONTENT') {
+      this.props.navigation.navigate('ContentSingle', {
+        itemId: relatedNode.id,
+        transitionKey: 2,
+      });
+    }
+    if (action === 'READ_EVENT') {
+      this.props.navigation.navigate('Event', {
+        eventId: relatedNode.id,
+        transitionKey: 2,
+      });
+    }
+  };
+
   render() {
     return (
       <BackgroundView>
         <SafeAreaView>
-          <Query
-            query={GET_USER_FEED}
-            variables={{
-              first: 10,
-              after: null,
-            }}
-            fetchPolicy="cache-and-network"
-          >
-            {({ loading, error, data, refetch, fetchMore, variables }) => (
-              <FeedView
-                ListItemComponent={ContentCardConnected}
-                content={get(data, 'userFeed.edges', []).map(
-                  (edge) => edge.node
-                )}
-                fetchMore={fetchMoreResolver({
-                  collectionName: 'userFeed',
-                  fetchMore,
-                  variables,
-                  data,
-                })}
-                isLoading={loading}
-                error={error}
-                refetch={refetch}
-                ListHeaderComponent={
-                  <>
-                    <LogoTitle source={require('./wordmark.png')} />
-                    <Features navigation={this.props.navigation} />
-                  </>
-                }
-                onPressItem={this.handleOnPress}
-              />
-            )}
-          </Query>
+          <FeaturesFeedConnected
+            onPressActionItem={this.handleOnPressActionItem}
+            ListHeaderComponent={
+              <LogoTitle source={require('./wordmark.png')} />
+            }
+          />
         </SafeAreaView>
       </BackgroundView>
     );
