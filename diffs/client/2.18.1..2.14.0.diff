diff --git a/apolloschurchapp/.env.shared.enc b/apolloschurchapp/.env.shared.enc
index 78051aac43adc2f35d4b76af8a064643e15b904a..fba5c68711b7b60a358381b2e9cfbd57bd8ad591 100644
GIT binary patch
literal 800
zcmV+*1K<2pVQh3|WM5wfcegMKIZ7fPD@EUEqbsHJ(FR%S4eEND;NHld`<G#T*Mt#O
z`K-hIx{Nu@3%upTPt}*5aDE^p-xF#3R*&(`fxU2@JtI5a0Y%cO#`pGxD|N)NC~Nx0
zg1GGFAyUKLeX%aF``$rn^Unds6ydfgklG0fJh8~x%Z1OV+$U~%+`Dg&XQW_G)p66s
zT0JZrf+XaiI<>zG*(I)Uo^VUwr|tB9C|x|R$kf_P$zMnu{~8~Mzo#9nAod{>)?l}M
z;nfzE62f<;kp$Bkst)s`p4lYk8|(00g)f$aFzE?mrtai0*=~FaVN}C-Kv_()_d$t3
zLevoI(OGPXtc3)HA-_sg(L)9_X=~yVyAVZXr&w64biaT)rs`pvtA-DG;2WSAjel97
zaAp!GdrLsSTf8YR#SQa%DEJ8Xk9sj<HvO@TF&!hltf?}l%8J|6A7`gEqI*kNlyyTO
zwGF6zsRjzMtc*KK@ZW~bsew?ZEa`q0bTu7@H!h-#OutV0n|@RNTsBUvJv0t}?Ai~8
z1o`msh47=D-O{5;mTAgVp1c`O`AL@88SMNNPUzIP7|&Un+HF9ujqm{LU<(+i4P2D`
zc4nQipmHY@J27YPZXf|w!AP5qI=H?_966~Z5XNJ`?`B?*V-D&83=I=wJnr^-2mt)`
zfbgsnCdlI1!LU{7A;t|pFUV7CR$;q<aq9$Wk#WG&3w1$+BlHIa&5Ty}vr2)E45#nD
z$bHqESPN7)qOIx3Zp*QeHHS|<hx!)P{fjT7kJhBfN5DfO$MQf^R>#Ya-#gxZkvxBV
z$wH#lc&X0Ijk3#-svuL@v2qQ3;NyP@+u}tkDqF_^3a6#zc@jwwp>%dZunLD3{i=_3
zOS%O5k*SzvQ5ATGP(NVqGELz`Cjp3Y&Ii)(pfhZVA$wl@14wtQ^|IxzIo4}Pou1bV
z2l9o7woS459raS(Rj><K@@>kSi@J%EzJV-^|2~*e@y=xtNt4PE62~Da>JL)s<~w9l
e&-dyV+A+BCkur%dOVKP0a%nSZW|X!;U0X<sW{~~>

literal 800
zcmV+*1K<2pVQh3|WM5y9NLM>{#dKEz=j2s4qBMb{ZH1-eJufGrkD6Z(AyG|d1;(5U
zVOgVNrYn{KaWzOd+#uxk*Ay?C^*%CY{HB*bYoI(n?-~8dR!JDZ5N-~nlC;@}*u%vc
zVH1T2Yl%mMe3+?{_`Xq0;c(-v4)67lfdqolD-6pfFL`fn-#;&w^d?Js<)Wuy7k(CF
zT1gTYwwt80Bz@Xl0{<&84?@y~xw91Y?1dNy^g{OrZdfXcW&uvgy&t3PDk%;k&X3&6
zxXi}-2pT>DJ;*aM>~(eHb6RE#G=yd-0DcVN;0+Mu`Fty<rDCOAV;!rv*1*PwM->1B
zKL8$i!e3@Gc&ux$c8Tc`!8Q?@m<QSWvp%L<a+tmFEhIkc>=ly~!{e$E4J?DJ<K$`c
zubr9ToAir%%D5WZet`(klG@JvmK991gdj-aYilNIEvh#Zzwp50l!_KDvDhiNvHJ*F
z2cq3Z6fiL`;k)TIBU;9b+$1UH8G4%}`8HRIa{?VhXzE*4CBmC$B)OE17wf0xUpXXA
zf`UM0yZxc5L>br{v<FE{W;|l487`JwqP|-a^*!P?49L@le2!2+eU?W=7a}+xaK*B9
zi01I1Q;EtA=|Me@vx!L<K$I%LK0#Nu$h?=p6`fXYgcp%9;M2*dV=H#`e~j?lz)?O5
z2g%32%aUM{t>I^2y79k~%wwAbtZo}~FwCPf$+P$7hpkZdAYj|O<(DJv9e7Jk505>x
ztskV?-P?krj7FnNGDH)%D1w7o;{NQ?DDkO&lH6BcW0golCRqjJxj=%Z5PR6(zEc(+
z#qBrTRV&at^2v~|`%jTQeHynu@l*2FWWx$W=ACNLa};|n^-)cu$3<$K551K<pccT-
z@%NutK=sijb;`H76Ic0xDy!?UT-;LEqF54&adHYST*Vm_P`bjOI$|tM<N$q1%Pr|;
z37`pYshTTk1+2LE{w@p{pw*B-sBP+HnIX}GTE>NkfFj<tTr(BUho^OhhxxOoH)kNU
e)Q9PM%t^2VSNNIVqvJI3YBI0{uu;KpICu>-g@ld(

diff --git a/apolloschurchapp/.gitignore b/apolloschurchapp/.gitignore
index caf99aad..ee91441b 100644
--- a/apolloschurchapp/.gitignore
+++ b/apolloschurchapp/.gitignore
@@ -160,4 +160,5 @@ key.json
 .env.shared
 
 # GraphQL info
+schema.graphql
 fragmentTypes.json
diff --git a/apolloschurchapp/android/app/apollos.keystore.enc b/apolloschurchapp/android/app/apollos.keystore.enc
index dcb722aed262b8e81815e8431a126ce983366958..08bbda40e135673e93b4cb1f0c86e9f71b1bdd76 100644
GIT binary patch
literal 2272
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

literal 2272
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

diff --git a/apolloschurchapp/android/key.json.enc b/apolloschurchapp/android/key.json.enc
index 2e5d50e76c0d985c57f6572f387733330c292d2e..f384332894c356853e0032197cf83f21c942fbe1 100644
GIT binary patch
literal 2384
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
Cw3VL#

literal 2384
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
CY_iP&

diff --git a/apolloschurchapp/apollos.json b/apolloschurchapp/apollos.json
index 07b60977..f5c5dd88 100644
--- a/apolloschurchapp/apollos.json
+++ b/apolloschurchapp/apollos.json
@@ -1,4 +1,4 @@
 {
-    "version": "2.18.1",
+    "version": "2.14.0",
     "environment": "client"
 }
diff --git a/apolloschurchapp/fastlane/Fastfile b/apolloschurchapp/fastlane/Fastfile
index 0e40d3ce..00b6651a 100644
--- a/apolloschurchapp/fastlane/Fastfile
+++ b/apolloschurchapp/fastlane/Fastfile
@@ -59,17 +59,6 @@ platform :android do
     gradle(task: 'clean', project_dir: 'android')
     gradle(task: 'bundle', build_type: 'Release', project_dir: 'android')
     changelog_from_git_commits
-
-    path = '../android/app/build.gradle'
-    re = /applicationId\s+"([\w+\.]*)"/
-    s = File.read("../android/app/build.gradle")
-    package_name = s[re, 1]
-
-    upload_to_play_store(
-      track: "internal",
-      skip_upload_apk: true,
-      json_key: "android/key.json",
-      package_name: package_name
-    )
+    upload_to_play_store(track: "internal", skip_upload_apk: true, json_key_file: "android/key.json")
   end
 end
diff --git a/apolloschurchapp/ios/Podfile.lock b/apolloschurchapp/ios/Podfile.lock
index d247edba..30739b2b 100644
--- a/apolloschurchapp/ios/Podfile.lock
+++ b/apolloschurchapp/ios/Podfile.lock
@@ -242,7 +242,7 @@ PODS:
     - React-cxxreact (= 0.63.4)
     - React-jsi (= 0.63.4)
   - React-jsinspector (0.63.4)
-  - react-native-apollos-player (2.18.1):
+  - react-native-apollos-player (2.14.0):
     - React
   - react-native-config (0.11.7):
     - React
@@ -639,7 +639,7 @@ SPEC CHECKSUMS:
   React-jsi: a0418934cf48f25b485631deb27c64dc40fb4c31
   React-jsiexecutor: 93bd528844ad21dc07aab1c67cb10abae6df6949
   React-jsinspector: 58aef7155bc9a9683f5b60b35eccea8722a4f53a
-  react-native-apollos-player: fdcff4efbb262794f2bc599faead2d2c56c774fe
+  react-native-apollos-player: 74f9763544b42cf4a3208d3f546a562be7566004
   react-native-config: 55548054279d92e0e4566ea15a8b9b81028ec342
   react-native-geolocation: c956aeb136625c23e0dce0467664af2c437888c9
   react-native-geolocation-service: f33626f1ae12381ca2ae60f98b2f5edd676bf95a
diff --git a/apolloschurchapp/ios/apollos.p8.enc b/apolloschurchapp/ios/apollos.p8.enc
index eb1cc0853c61b23c482511b39b20a39f7ac92b58..6e961fce2051515987d83cdf79ac0f1a9c2ecbaf 100644
GIT binary patch
literal 288
zcmV+*0pI>pVQh3|WM5yaDW=n?N$sy5`<MP+-NK9QU-`3ZFqwvBct~oLvP0B0GVA2W
z%xwyws*h@PdtDH_5Ea~bM~Ou`8a(*2L%`*>hm(a+qFHYlJfXm*1m1;HVU?|+@OPK@
zV(<lUyvDc8kedc<fjHQ}Ob3y<yHzMFexsC!6%Tii+@d&bW>o-1Tw77z<JEeFp(FYt
zNWQ~t`~7%4jQ6-_{@kGspiEM;$jRHVs@x0{tcqmgn;>q@i2D9Jrn>M3VG+?%p3USa
z&TIk$OrX05wTNd$&7H)}e4@VEvzUNu-ATBPRj}_aEAZG~XE0V{cpfd5#j1(Ted&^-
mL0eaFWLOppIc{WyQe$Bz@}n|1nmgr6d78O7uz3^4Rkt!@os)V1

literal 288
zcmV+*0pI>pVQh3|WM5yu{G*CHgeC}mNOXdmw4Bi~-U45=I7u?5Xs8-Yo$V7#x2K0=
zHFU>gy|l2nA@gi4*4Yomf}N-AUBBnQm!MyrYesHsC(t&oXgs7(HvgX$6kT=@e&@Z}
znqP9FICM&H=sVgNj_p|{!3#A@&va*c#;_^I+n_Zn3?-iSxY^P4$Y}QVsGmGh^jl0P
zm3d$#SX8Pz&zp7MX4OU~SPu)TkXGfG-*33OfxhPv<9DMnuph|p+EUD7mHj|m#Z-_+
zJZiycKDv;}nY%<>l8*A4hbcHoDXK=EZ|ea=w{XJl(=4hS-<ahLz&^h1Op5bZpBtEQ
mg>E`|o=vyE!Y1-FevjF25oAVZ$3`OJMIuD?d+vf(S|nnJCy_z`

diff --git a/apolloschurchapp/ios/apolloschurchapp.xcodeproj/project.pbxproj b/apolloschurchapp/ios/apolloschurchapp.xcodeproj/project.pbxproj
index c429baab..0ffd1038 100644
--- a/apolloschurchapp/ios/apolloschurchapp.xcodeproj/project.pbxproj
+++ b/apolloschurchapp/ios/apolloschurchapp.xcodeproj/project.pbxproj
@@ -14,7 +14,7 @@
 		13B07FBF1A68108700A75B9A /* Images.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB51A68108700A75B9A /* Images.xcassets */; };
 		13B07FC11A68108700A75B9A /* main.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB71A68108700A75B9A /* main.m */; };
 		1C48DCDE11AC47C48E918489 /* Inter-UI-Medium.otf in Resources */ = {isa = PBXBuildFile; fileRef = DC74A378C1CC40E4B6192D7F /* Inter-UI-Medium.otf */; };
-		2AE17F608689DAE577F28E4D /* (null) in Frameworks */ = {isa = PBXBuildFile; };
+		2AE17F608689DAE577F28E4D /* BuildFile in Frameworks */ = {isa = PBXBuildFile; };
 		2D02E4BC1E0B4A80006451C7 /* AppDelegate.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB01A68108700A75B9A /* AppDelegate.m */; };
 		2D02E4BD1E0B4A84006451C7 /* Images.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB51A68108700A75B9A /* Images.xcassets */; };
 		2D02E4BF1E0B4AB3006451C7 /* main.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB71A68108700A75B9A /* main.m */; };
@@ -115,7 +115,7 @@
 			isa = PBXFrameworksBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
-				2AE17F608689DAE577F28E4D /* (null) in Frameworks */,
+				2AE17F608689DAE577F28E4D /* BuildFile in Frameworks */,
 				EF3A30A2E55D4F8352E116D3 /* libPods-apolloschurchapp-apolloschurchappTests.a in Frameworks */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
@@ -308,7 +308,6 @@
 			buildConfigurationList = 13B07F931A680F5B00A75B9A /* Build configuration list for PBXNativeTarget "apolloschurchapp" */;
 			buildPhases = (
 				DEEF24CE4F76789E5E8C369D /* [CP] Check Pods Manifest.lock */,
-				4C006E292656868900EE9158 /* Start Packager */,
 				13B07F871A680F5B00A75B9A /* Sources */,
 				13B07F8C1A680F5B00A75B9A /* Frameworks */,
 				13B07F8E1A680F5B00A75B9A /* Resources */,
@@ -551,25 +550,6 @@
 			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-apolloschurchapp/Pods-apolloschurchapp-resources.sh\"\n";
 			showEnvVarsInLog = 0;
 		};
-		4C006E292656868900EE9158 /* Start Packager */ = {
-			isa = PBXShellScriptBuildPhase;
-			buildActionMask = 2147483647;
-			files = (
-			);
-			inputFileListPaths = (
-			);
-			inputPaths = (
-			);
-			name = "Start Packager";
-			outputFileListPaths = (
-			);
-			outputPaths = (
-			);
-			runOnlyForDeploymentPostprocessing = 0;
-			shellPath = /bin/sh;
-			shellScript = "export RCT_METRO_PORT=\"${RCT_METRO_PORT:=8081}\"\necho \"export RCT_METRO_PORT=${RCT_METRO_PORT}\" > \"${SRCROOT}/../node_modules/react-native/scripts/.packager.env\"\nif [ -z \"${RCT_NO_LAUNCH_PACKAGER+xxx}\" ] ; then\n  if nc -w 5 -z localhost ${RCT_METRO_PORT} ; then\n    if ! curl -s \"http://localhost:${RCT_METRO_PORT}/status\" | grep -q \"packager-status:running\" ; then\n      echo \"Port ${RCT_METRO_PORT} already in use, packager is either not running or not running correctly\"\n      exit 2\n    fi\n  else\n    open \"$SRCROOT/../node_modules/react-native/scripts/launchPackager.command\" || echo \"Can't start packager automatically\"\n  fi\nfi\n";
-			showEnvVarsInLog = 0;
-		};
 		84E19E444A56C704431362B6 /* [CP] Embed Pods Frameworks */ = {
 			isa = PBXShellScriptBuildPhase;
 			buildActionMask = 2147483647;
diff --git a/apolloschurchapp/package.json b/apolloschurchapp/package.json
index c5e88291..1d5d1c85 100644
--- a/apolloschurchapp/package.json
+++ b/apolloschurchapp/package.json
@@ -17,10 +17,11 @@
     "unlink-packages": "node ./scripts/link-packages remove && rm -rf ./node_modules",
     "generate-stories": "rnstl --searchDir ./src --pattern **/*.stories.js",
     "lint": "eslint ./src --ext .js",
+    "get-schema": "eval $(grep ^APP_DATA_URL .env) && sleep 10 && get-graphql-schema $APP_DATA_URL > schema.graphql",
     "postinstall": "jetify && yarn pods",
     "pods": "(bundle install && cd ios && bundle exec pod install --repo-update)",
     "start": "yarn start:dev",
-    "start:dev": "yarn generate-stories && node ./scripts/get-introspection-data.js && react-native start",
+    "start:dev": "yarn generate-stories & yarn get-schema && node ./scripts/get-introspection-data.js && react-native start",
     "test": "TZ=UTC jest",
     "icons": "react-native set-icon --path",
     "splash": "react-native set-splash --path"
@@ -45,23 +46,23 @@
   "dependencies": {
     "@apollo/client": "3.3.0-rc.2",
     "@apollo/react-hooks": "^3.1.3",
-    "@apollosproject/config": "^2.18.1",
+    "@apollosproject/config": "^2.14.0",
     "@apollosproject/react-native-airplay-btn": "^0.2.0",
-    "@apollosproject/ui-analytics": "^2.18.1",
-    "@apollosproject/ui-auth": "^2.18.1",
-    "@apollosproject/ui-connected": "^2.18.1",
-    "@apollosproject/ui-fragments": "^2.18.1",
-    "@apollosproject/ui-htmlview": "^2.18.1",
-    "@apollosproject/ui-kit": "^2.18.1",
-    "@apollosproject/ui-mapview": "^2.18.1",
-    "@apollosproject/ui-media-player": "^2.18.1",
-    "@apollosproject/ui-notifications": "^2.18.1",
-    "@apollosproject/ui-onboarding": "^2.18.1",
-    "@apollosproject/ui-passes": "^2.18.1",
-    "@apollosproject/ui-prayer": "^2.18.1",
-    "@apollosproject/ui-scripture": "^2.18.1",
-    "@apollosproject/ui-storybook": "^2.18.1",
-    "@apollosproject/ui-test-utils": "^2.18.1",
+    "@apollosproject/ui-analytics": "^2.14.0",
+    "@apollosproject/ui-auth": "^2.14.0",
+    "@apollosproject/ui-connected": "^2.14.0",
+    "@apollosproject/ui-fragments": "^2.14.0",
+    "@apollosproject/ui-htmlview": "^2.14.0",
+    "@apollosproject/ui-kit": "^2.14.0",
+    "@apollosproject/ui-mapview": "^2.14.0",
+    "@apollosproject/ui-media-player": "^2.14.0",
+    "@apollosproject/ui-notifications": "^2.14.0",
+    "@apollosproject/ui-onboarding": "^2.14.0",
+    "@apollosproject/ui-passes": "^2.14.0",
+    "@apollosproject/ui-prayer": "^2.14.0",
+    "@apollosproject/ui-scripture": "^2.14.0",
+    "@apollosproject/ui-storybook": "^2.14.0",
+    "@apollosproject/ui-test-utils": "^2.14.0",
     "@gorhom/bottom-sheet": "3.4.1",
     "@metarouter/analytics-react-native": "^1.1.5",
     "@react-native-community/async-storage": "^1.5.1",
@@ -99,6 +100,7 @@
     "react-native-inappbrowser-reborn": "^3.0.0",
     "react-native-linear-gradient": "^2.5.4",
     "react-native-maps": "^0.27.1",
+    "react-native-modal-datetime-picker": "9.0.0",
     "react-native-music-control": "0.10.8",
     "react-native-onesignal": "3.9.1",
     "react-native-passkit-wallet": "^0.1.4",
@@ -118,7 +120,7 @@
     "yup": "0.26.6"
   },
   "devDependencies": {
-    "@apollosproject/eslint-config": "^2.18.1",
+    "@apollosproject/eslint-config": "^2.14.0",
     "@babel/core": "^7.8.4",
     "@babel/runtime": "^7.8.4",
     "@bam.tech/react-native-make": "^3.0.0",
@@ -142,6 +144,7 @@
     "eslint-plugin-react-hooks": "^4.0.2",
     "eslint-plugin-react-native": "^3.2.1",
     "get-dev-paths": "^0.1.0",
+    "get-graphql-schema": "^2.1.2",
     "graphql-import": "^0.7.1",
     "jest": "^25.1.0",
     "jetifier": "^1.6.4",
diff --git a/apolloschurchapp/src/content-feed/content-feed.tests.js b/apolloschurchapp/src/content-feed/content-feed.tests.js
new file mode 100644
index 00000000..3c967931
--- /dev/null
+++ b/apolloschurchapp/src/content-feed/content-feed.tests.js
@@ -0,0 +1,119 @@
+import React from 'react';
+
+import { renderWithApolloData, Providers } from '@apollosproject/ui-test-utils';
+import { MockedProvider } from '@apollo/client/testing';
+import { GET_CONTENT_CARD } from '@apollosproject/ui-connected';
+import GET_CONTENT_FEED from './getContentFeed';
+
+import ContentFeed from './index';
+
+describe('content feed query component', () => {
+  it('renders a feedview after successful query', async () => {
+    const mock = {
+      request: {
+        query: GET_CONTENT_FEED,
+        variables: { itemId: 'ContentChannel:123' },
+      },
+      result: {
+        data: {
+          node: {
+            __typename: 'ContentChannel',
+            childContentItemsConnection: {
+              pageInfo: {
+                endCursor: 'blablalba',
+                __typename: 'PaginationInfo',
+              },
+              __typename: 'ContentItemsConnection',
+              edges: [
+                {
+                  __typename: 'ContentItemsConnectionEdge',
+                  node: {
+                    __typename: 'UniversalContentItem',
+                    id: 'UniversalContentItem:d57994350b9d213866b24dea3a97433d',
+                    coverImage: null,
+                    parentChannel: {
+                      id: 'ContentChannel:4f68015ba18662a7409d1219a4ce013e',
+                      name: 'Editorial',
+                      iconName: 'text',
+                      __typename: 'ContentChannel',
+                    },
+                    title: 'Mea Animal Aperiam Ornatus Eu',
+                    hyphenatedTitle: 'Mea Animal Aperiam Ornatus Eu',
+                    summary: 'Bla bla bla',
+                    theme: null,
+                    isLiked: false,
+                    likedCount: 0,
+                    videos: [],
+                    audios: [],
+                  },
+                },
+                {
+                  __typename: 'ContentItemsConnectionEdge',
+                  node: {
+                    __typename: 'UniversalContentItem',
+                    id: 'UniversalContentItem:b36e55d803443431e96bb4b5068147ec',
+                    coverImage: null,
+                    parentChannel: {
+                      id: 'ContentChannel:4f68015ba18662a7409d1219a4ce013e',
+                      name: 'Editorial',
+                      iconName: 'text',
+                      __typename: 'ContentChannel',
+                    },
+                    title: 'Probo Senserit Id Mea, Ut Sed Malis Postea,',
+                    hyphenatedTitle:
+                      'Probo Senserit Id Mea, Ut Sed Malis Postea,',
+                    summary: 'Bla bla bla',
+                    theme: null,
+                    isLiked: false,
+                    likedCount: 0,
+                    videos: [],
+                    audios: [],
+                  },
+                },
+              ],
+            },
+          },
+        },
+      },
+    };
+
+    const additionalMocks = mock.result.data.node.childContentItemsConnection.edges.map(
+      ({ node }) => ({
+        request: {
+          query: GET_CONTENT_CARD,
+          variables: { contentId: node.id },
+        },
+        result: {
+          data: {
+            node: {
+              ...node,
+              coverImage: {
+                name: 'Boom',
+                ...node.coverImage,
+              },
+            },
+          },
+        },
+      })
+    );
+
+    const initialTree = await renderWithApolloData(
+      <Providers
+        MockedProvider={MockedProvider}
+        mocks={[mock, ...additionalMocks]}
+      >
+        <ContentFeed route={{ params: { itemId: 'ContentChannel:123' } }} />
+      </Providers>
+    );
+    const tree = await renderWithApolloData(
+      <Providers
+        MockedProvider={MockedProvider}
+        mocks={[mock, ...additionalMocks]}
+      >
+        <ContentFeed route={{ params: { itemId: 'ContentChannel:123' } }} />
+      </Providers>,
+      initialTree
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/content-feed/getContentFeed.js b/apolloschurchapp/src/content-feed/getContentFeed.js
new file mode 100644
index 00000000..38ed31fb
--- /dev/null
+++ b/apolloschurchapp/src/content-feed/getContentFeed.js
@@ -0,0 +1,22 @@
+import gql from 'graphql-tag';
+import ApollosConfig from '@apollosproject/config';
+
+export default gql`
+  query getContentFeed($itemId: ID!, $after: String, $first: Int) {
+    node(id: $itemId) {
+      ... on ContentChannel {
+        childContentItemsConnection(after: $after, first: $first) {
+          pageInfo {
+            endCursor
+          }
+          edges {
+            node {
+              ...contentCardFragment
+            }
+          }
+        }
+      }
+    }
+  }
+  ${ApollosConfig.FRAGMENTS.CONTENT_CARD_FRAGMENT}
+`;
diff --git a/apolloschurchapp/src/content-feed/index.js b/apolloschurchapp/src/content-feed/index.js
new file mode 100644
index 00000000..ea033d8d
--- /dev/null
+++ b/apolloschurchapp/src/content-feed/index.js
@@ -0,0 +1,78 @@
+import React, { PureComponent } from 'react';
+import { Query } from '@apollo/client/react/components';
+import { get } from 'lodash';
+import PropTypes from 'prop-types';
+
+import {
+  ContentCardConnected,
+  fetchMoreResolver,
+} from '@apollosproject/ui-connected';
+
+import { BackgroundView, FeedView } from '@apollosproject/ui-kit';
+
+import GET_CONTENT_FEED from './getContentFeed';
+/**
+ * This is where the component description lives
+ * A FeedView wrapped in a query to pull content data.
+ */
+class ContentFeed extends PureComponent {
+  static propTypes = {
+    /** Functions passed down from React Navigation to use in navigating to/from
+     * items in the feed.
+     */
+    navigation: PropTypes.shape({
+      navigate: PropTypes.func,
+    }),
+    route: PropTypes.shape({
+      params: PropTypes.shape({
+        itemId: PropTypes.string,
+      }),
+    }),
+  };
+
+  /** Function that is called when a card in the feed is pressed.
+   * Takes the user to the ContentSingle
+   */
+  handleOnPress = (item) =>
+    this.props.navigation.navigate('ContentSingle', {
+      itemId: item.id,
+      sharing: item.sharing,
+    });
+
+  render() {
+    const { route } = this.props;
+    const { itemId } = route.params;
+    return (
+      <BackgroundView>
+        <Query
+          query={GET_CONTENT_FEED}
+          variables={{ itemId }}
+          fetchPolicy="cache-and-network"
+        >
+          {({ loading, error, data, refetch, fetchMore, variables }) => (
+            <FeedView
+              ListItemComponent={ContentCardConnected}
+              content={get(
+                data,
+                'node.childContentItemsConnection.edges',
+                []
+              ).map((edge) => edge.node)}
+              fetchMore={fetchMoreResolver({
+                collectionName: 'node.childContentItemsConnection',
+                fetchMore,
+                variables,
+                data,
+              })}
+              isLoading={loading}
+              error={error}
+              refetch={refetch}
+              onPressItem={this.handleOnPress}
+            />
+          )}
+        </Query>
+      </BackgroundView>
+    );
+  }
+}
+
+export default ContentFeed;
diff --git a/apolloschurchapp/src/index.js b/apolloschurchapp/src/index.js
index 2d5a93ea..89028440 100644
--- a/apolloschurchapp/src/index.js
+++ b/apolloschurchapp/src/index.js
@@ -1,13 +1,9 @@
 /* eslint-disable react/jsx-handler-names */
 
+import hoistNonReactStatic from 'hoist-non-react-statics';
 import React from 'react';
-import { StatusBar } from 'react-native';
-import {
-  NavigationContainer,
-  useNavigation,
-  DarkTheme,
-  DefaultTheme,
-} from '@react-navigation/native';
+import { StatusBar, Platform } from 'react-native';
+import { NavigationContainer } from '@react-navigation/native';
 import { createNativeStackNavigator } from 'react-native-screens/native-stack';
 import SplashScreen from 'react-native-splash-screen';
 import 'react-native-gesture-handler'; // required for react-navigation
@@ -21,8 +17,8 @@ import {
 import Passes from '@apollosproject/ui-passes';
 import { MapViewConnected as Location } from '@apollosproject/ui-mapview';
 import Auth, { ProtectedRoute } from '@apollosproject/ui-auth';
+import ApollosConfig from '@apollosproject/config';
 
-import { ContentFeedConnected } from '@apollosproject/ui-connected';
 import Providers from './Providers';
 import ContentSingle from './content-single';
 import Event from './event';
@@ -38,52 +34,56 @@ const AppStatusBar = withTheme(({ theme }) => ({
   backgroundColor: theme.colors.background.paper,
 }))(StatusBar);
 
-const ProtectedRouteWithSplashScreen = () => {
+const ProtectedRouteWithSplashScreen = (props) => {
   const handleOnRouteChange = () => SplashScreen.hide();
-  const navigation = useNavigation();
-  return (
-    <ProtectedRoute
-      onRouteChange={handleOnRouteChange}
-      navigation={navigation}
-    />
-  );
+
+  return <ProtectedRoute {...props} onRouteChange={handleOnRouteChange} />;
 };
 
-const ThemedNavigationContainer = withTheme(({ theme, ...props }) => ({
-  theme: {
-    ...(theme.type === 'dark' ? DarkTheme : DefaultTheme),
-    dark: theme.type === 'dark',
-    colors: {
-      ...(theme.type === 'dark' ? DarkTheme.colors : DefaultTheme.colors),
-      primary: theme.colors.secondary,
-      background: theme.colors.background.screen,
-      card: theme.colors.background.paper,
-      text: theme.colors.text.primary,
-    },
-  },
-  ...props,
-}))(({ containerRef, ...props }) => (
-  <NavigationContainer ref={containerRef} {...props} />
-));
+const { APP_DATA_URL } = ApollosConfig;
+
+// Hack to avoid needing to pass emailRequired through the navigator.navigate
+const EnhancedAuth = (props) => (
+  <Auth
+    {...props}
+    emailRequired
+    forgotPasswordURL={`${APP_DATA_URL}/forgot-password`}
+  />
+);
+// 😑
+hoistNonReactStatic(EnhancedAuth, Auth);
 
 const { Navigator, Screen } = createNativeStackNavigator();
+const ThemedNavigator = withTheme(({ theme, ...props }) => ({
+  ...props,
+  screenOptions: {
+    headerTintColor: theme.colors.action.secondary,
+    headerTitleStyle: {
+      color: theme.colors.text.primary,
+    },
+    headerStyle: {
+      backgroundColor: theme.colors.background.paper,
+      ...Platform.select(theme.shadows.default),
+    },
+    headerShown: false,
+    stackPresentation: 'modal',
+  },
+}))(Navigator);
 
-const App = () => (
+const App = (props) => (
   <Providers>
     <BackgroundView>
       <AppStatusBar />
-      <ThemedNavigationContainer
-        containerRef={NavigationService.setTopLevelNavigator}
+      <NavigationContainer
+        ref={NavigationService.setTopLevelNavigator}
         onReady={NavigationService.setIsReady}
       >
-        <Navigator
-          screenOptions={{ headerShown: false, stackPresentation: 'modal' }}
-        >
+        <ThemedNavigator initialRouteName="ProtectedRoute" {...props}>
           <Screen
             name="ProtectedRoute"
             component={ProtectedRouteWithSplashScreen}
           />
-          <Screen name="Tabs" component={Tabs} />
+          <Screen name="Tabs" component={Tabs} options={{ title: 'Home' }} />
           <Screen
             name="ContentSingle"
             component={ContentSingle}
@@ -92,25 +92,21 @@ const App = () => (
               stackPresentation: 'push',
             }}
           />
-          <Screen
-            component={ContentFeedConnected}
-            name="ContentFeed"
-            options={({ route }) => ({
-              title: route.params.itemTitle || 'Content Feed',
-              stackPresentation: 'push',
-            })}
-          />
-
           <Screen name="Event" component={Event} options={{ title: 'Event' }} />
           <Screen
             name="Auth"
-            component={Auth}
+            component={EnhancedAuth}
             options={{
+              title: 'Login',
               gestureEnabled: false,
               stackPresentation: 'push',
             }}
           />
-          <Screen name="Location" component={Location} />
+          <Screen
+            name="Location"
+            component={Location}
+            options={{ headerShown: true }}
+          />
           <Screen
             name="Passes"
             component={Passes}
@@ -120,14 +116,19 @@ const App = () => (
             name="Onboarding"
             component={Onboarding}
             options={{
+              title: 'Onboarding',
               gestureEnabled: false,
               stackPresentation: 'push',
             }}
           />
-          <Screen name="LandingScreen" component={LandingScreen} />
+          <Screen
+            name="LandingScreen"
+            component={LandingScreen}
+            options={{ headerShown: false }}
+          />
           <Screen component={Search} name="Search" />
-        </Navigator>
-      </ThemedNavigationContainer>
+        </ThemedNavigator>
+      </NavigationContainer>
     </BackgroundView>
   </Providers>
 );
diff --git a/apolloschurchapp/src/tabs/discover/Discover.js b/apolloschurchapp/src/tabs/discover/Discover.js
new file mode 100644
index 00000000..5153afba
--- /dev/null
+++ b/apolloschurchapp/src/tabs/discover/Discover.js
@@ -0,0 +1,59 @@
+import React from 'react';
+
+import { SafeAreaView } from 'react-native-safe-area-context';
+import gql from 'graphql-tag';
+import { Query } from '@apollo/client/react/components';
+import { useNavigation } from '@react-navigation/native';
+
+import { BackgroundView } from '@apollosproject/ui-kit';
+import {
+  FeaturesFeedConnected,
+  FEATURE_FEED_ACTION_MAP,
+  RockAuthedWebBrowser,
+} from '@apollosproject/ui-connected';
+
+function handleOnPress({ action, ...props }) {
+  if (FEATURE_FEED_ACTION_MAP[action]) {
+    FEATURE_FEED_ACTION_MAP[action]({ action, ...props });
+  }
+  // If you add additional actions, you can handle them here.
+  // Or add them to the FEATURE_FEED_ACTION_MAP, with the syntax
+  // { [ActionName]: function({ relatedNode, action, ...FeatureFeedConnectedProps}) }
+}
+
+// getHomeFeed uses the HOME_FEATURES in the config.yml
+// You can also hardcode an ID if you are confident it will never change
+// Or use some other strategy to get a FeatureFeed.id
+export const GET_DISCOVER_FEED = gql`
+  query getDiscoverFeatureFeed {
+    discoverFeedFeatures {
+      id
+    }
+  }
+`;
+
+const Discover = () => {
+  const navigation = useNavigation();
+  return (
+    <RockAuthedWebBrowser>
+      {(openUrl) => (
+        <BackgroundView>
+          <SafeAreaView edges={['right', 'top', 'left']}>
+            <Query query={GET_DISCOVER_FEED}>
+              {({ data }) => (
+                <FeaturesFeedConnected
+                  openUrl={openUrl}
+                  navigation={navigation}
+                  featureFeedId={data?.discoverFeedFeatures?.id}
+                  onPressActionItem={handleOnPress}
+                />
+              )}
+            </Query>
+          </SafeAreaView>
+        </BackgroundView>
+      )}
+    </RockAuthedWebBrowser>
+  );
+};
+
+export default Discover;
diff --git a/apolloschurchapp/src/tabs/discover/index.js b/apolloschurchapp/src/tabs/discover/index.js
new file mode 100644
index 00000000..f612b1ad
--- /dev/null
+++ b/apolloschurchapp/src/tabs/discover/index.js
@@ -0,0 +1,44 @@
+import React from 'react';
+import { Platform } from 'react-native';
+import { createNativeStackNavigator } from 'react-native-screens/native-stack';
+import { withTheme } from '@apollosproject/ui-kit';
+
+import ContentFeed from '../../content-feed';
+
+import Discover from './Discover';
+
+const { Navigator, Screen } = createNativeStackNavigator();
+
+const DiscoverNavigator = (props) => (
+  <Navigator initialRouteName="Discover" {...props}>
+    <Screen
+      component={Discover}
+      name="Discover"
+      options={{ headerShown: false }}
+    />
+    <Screen
+      component={ContentFeed}
+      name="ContentFeed"
+      /** Function for React Navigation to set information in the header. */
+      options={({ route }) => ({
+        title: route.params.itemTitle || 'Content Feed',
+      })}
+    />
+  </Navigator>
+);
+const EnhancedDiscover = withTheme(({ theme, ...props }) => ({
+  ...props,
+  screenOptions: {
+    headerTintColor: theme.colors.action.secondary,
+    headerTitleStyle: {
+      color: theme.colors.text.primary,
+    },
+    headerStyle: {
+      backgroundColor: theme.colors.background.paper,
+      ...Platform.select(theme.shadows.default),
+    },
+    headerLargeTitle: true,
+  },
+}))(DiscoverNavigator);
+
+export default EnhancedDiscover;
diff --git a/apolloschurchapp/src/tabs/home/index.js b/apolloschurchapp/src/tabs/home/index.js
new file mode 100644
index 00000000..91f9323c
--- /dev/null
+++ b/apolloschurchapp/src/tabs/home/index.js
@@ -0,0 +1,94 @@
+import React, { useEffect } from 'react';
+import { Image } from 'react-native';
+import { SafeAreaView } from 'react-native-safe-area-context';
+import { Query } from '@apollo/client/react/components';
+import { gql, useApolloClient } from '@apollo/client';
+import { useNavigation } from '@react-navigation/native';
+
+import {
+  styled,
+  BackgroundView,
+  NavigationService,
+} from '@apollosproject/ui-kit';
+import {
+  FeaturesFeedConnected,
+  FEATURE_FEED_ACTION_MAP,
+  RockAuthedWebBrowser,
+} from '@apollosproject/ui-connected';
+
+import { checkOnboardingStatusAndNavigate } from '@apollosproject/ui-onboarding';
+
+import { SearchButton } from '../../ui/Search';
+import { ONBOARDING_VERSION } from '../../ui/Onboarding';
+
+const LogoTitle = styled(({ theme }) => ({
+  height: theme.sizing.baseUnit,
+  margin: theme.sizing.baseUnit,
+  alignSelf: 'center',
+  resizeMode: 'contain',
+}))(Image);
+
+function handleOnPress({ action, ...props }) {
+  if (FEATURE_FEED_ACTION_MAP[action]) {
+    FEATURE_FEED_ACTION_MAP[action]({ action, ...props });
+  }
+  // If you add additional actions, you can handle them here.
+  // Or add them to the FEATURE_FEED_ACTION_MAP, with the syntax
+  // { [ActionName]: function({ relatedNode, action, ...FeatureFeedConnectedProps}) }
+}
+
+// getHomeFeed uses the HOME_FEATURES in the config.yml
+// You can also hardcode an ID if you are confident it will never change
+// Or use some other strategy to get a FeatureFeed.id
+export const GET_HOME_FEED = gql`
+  query getHomeFeatureFeed {
+    homeFeedFeatures {
+      id
+    }
+  }
+`;
+
+const Home = () => {
+  const navigation = useNavigation();
+  const client = useApolloClient();
+
+  useEffect(() => {
+    checkOnboardingStatusAndNavigate({
+      client,
+      navigation: NavigationService,
+      latestOnboardingVersion: ONBOARDING_VERSION,
+      navigateHome: false,
+    });
+  }, []);
+
+  return (
+    <RockAuthedWebBrowser>
+      {(openUrl) => (
+        <BackgroundView>
+          <SafeAreaView edges={['top', 'left', 'right']}>
+            <Query query={GET_HOME_FEED} fetchPolicy="cache-and-network">
+              {({ data }) => (
+                <FeaturesFeedConnected
+                  openUrl={openUrl}
+                  navigation={navigation}
+                  featureFeedId={data?.homeFeedFeatures?.id}
+                  onPressActionItem={handleOnPress}
+                  ListHeaderComponent={
+                    <>
+                      <LogoTitle source={require('./wordmark.png')} />
+                      <SearchButton
+                        onPress={() => navigation.navigate('Search')}
+                      />
+                    </>
+                  }
+                />
+              )}
+            </Query>
+          </SafeAreaView>
+        </BackgroundView>
+      )}
+    </RockAuthedWebBrowser>
+  );
+};
+
+export default Home;
diff --git a/apolloschurchapp/src/tabs/wordmark.png b/apolloschurchapp/src/tabs/home/wordmark.png
similarity index 100%
rename from apolloschurchapp/src/tabs/wordmark.png
rename to apolloschurchapp/src/tabs/home/wordmark.png
diff --git a/apolloschurchapp/src/tabs/index.js b/apolloschurchapp/src/tabs/index.js
index 53dfb2a5..3e2a5b8c 100644
--- a/apolloschurchapp/src/tabs/index.js
+++ b/apolloschurchapp/src/tabs/index.js
@@ -1,101 +1,45 @@
-import React, { useEffect } from 'react';
-import { Image } from 'react-native';
-import { useNavigation } from '@react-navigation/native';
+import React from 'react';
+import { Platform } from 'react-native';
 import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';
-import { styled, NavigationService } from '@apollosproject/ui-kit';
-import { useApolloClient } from '@apollo/client';
-import { createFeatureFeedTab } from '@apollosproject/ui-connected';
-import { checkOnboardingStatusAndNavigate } from '@apollosproject/ui-onboarding';
-import { SearchButton } from '../ui/Search';
-import { ONBOARDING_VERSION } from '../ui/Onboarding';
+import { withTheme } from '@apollosproject/ui-kit';
+
 import Connect from './connect';
+import Home from './home';
+import Discover from './discover';
 import tabBarIcon from './tabBarIcon';
 
-const HeaderLogo = styled(({ theme }) => ({
-  height: theme.sizing.baseUnit,
-  resizeMode: 'contain',
-}))(Image);
-
-const HeaderCenter = () => <HeaderLogo source={require('./wordmark.png')} />;
-const HeaderRight = () => {
-  const navigation = useNavigation();
-  return <SearchButton onPress={() => navigation.navigate('Search')} />;
-};
-
-// we nest stack inside of tabs so we can use all the fancy native header features
-const HomeTab = createFeatureFeedTab({
-  screenOptions: {
-    headerHideShadow: true,
-    headerCenter: HeaderCenter,
-    headerRight: HeaderRight,
-    headerLargeTitle: false,
-  },
-  tabName: 'Home',
-  feedName: 'HOME',
-});
-
-const ReadTab = createFeatureFeedTab({
-  tabName: 'Read',
-  feedName: 'READ',
-});
-
-const WatchTab = createFeatureFeedTab({
-  tabName: 'Watch',
-  feedName: 'WATCH',
-});
-
-const PrayTab = createFeatureFeedTab({
-  tabName: 'Pray',
-  feedName: 'PRAY',
-});
-
 const { Navigator, Screen } = createBottomTabNavigator();
 
-const TabNavigator = () => {
-  const client = useApolloClient();
-  // this is only used by the tab loaded first
-  // if there is a new version of the onboarding flow,
-  // we'll navigate there first to show new screens
-  useEffect(
-    () => {
-      checkOnboardingStatusAndNavigate({
-        client,
-        navigation: NavigationService,
-        latestOnboardingVersion: ONBOARDING_VERSION,
-        navigateHome: false,
-      });
+const TabNavigator = (props) => (
+  <Navigator {...props} lazy>
+    <Screen
+      name="Home"
+      component={Home}
+      options={{ tabBarIcon: tabBarIcon('home') }}
+    />
+    <Screen
+      name="Discover"
+      component={Discover}
+      options={{ tabBarIcon: tabBarIcon('sections') }}
+    />
+    <Screen
+      name="Connect"
+      component={Connect}
+      options={{ tabBarIcon: tabBarIcon('profile') }}
+    />
+  </Navigator>
+);
+
+const ThemedTabNavigator = withTheme(({ theme }) => ({
+  tabBarOptions: {
+    activeTintColor: theme?.colors?.secondary,
+    inactiveTintColor: theme?.colors?.text?.tertiary,
+    style: {
+      backgroundColor: theme?.colors?.background?.paper,
+      borderTopColor: theme?.colors?.shadows.default,
+      ...Platform.select(theme?.shadows.default),
     },
-    [client]
-  );
-  return (
-    <Navigator lazy>
-      <Screen
-        name="Home"
-        component={HomeTab}
-        options={{ tabBarIcon: tabBarIcon('home') }}
-      />
-      <Screen
-        name="Read"
-        component={ReadTab}
-        options={{ tabBarIcon: tabBarIcon('sections') }}
-      />
-      <Screen
-        name="Watch"
-        component={WatchTab}
-        options={{ tabBarIcon: tabBarIcon('video') }}
-      />
-      <Screen
-        name="Pray"
-        component={PrayTab}
-        options={{ tabBarIcon: tabBarIcon('like') }}
-      />
-      <Screen
-        name="Connect"
-        component={Connect}
-        options={{ tabBarIcon: tabBarIcon('profile') }}
-      />
-    </Navigator>
-  );
-};
+  },
+}))(TabNavigator);
 
-export default TabNavigator;
+export default ThemedTabNavigator;
diff --git a/apolloschurchapp/src/ui/Search/SearchButton.js b/apolloschurchapp/src/ui/Search/SearchButton.js
index a962601f..9dd742f6 100644
--- a/apolloschurchapp/src/ui/Search/SearchButton.js
+++ b/apolloschurchapp/src/ui/Search/SearchButton.js
@@ -1,7 +1,8 @@
 import React from 'react';
+import { Animated } from 'react-native';
 import PropTypes from 'prop-types';
 
-import { withTheme, Touchable, Icon } from '@apollosproject/ui-kit';
+import { styled, withTheme, Touchable, Icon } from '@apollosproject/ui-kit';
 
 const SearchIcon = withTheme(({ theme: { colors, sizing: { baseUnit } } }) => ({
   name: 'search',
@@ -9,10 +10,18 @@ const SearchIcon = withTheme(({ theme: { colors, sizing: { baseUnit } } }) => ({
   fill: colors.primary,
 }))(Icon);
 
+const SearchButtonContainer = styled(({ theme: { sizing: { baseUnit } } }) => ({
+  position: 'absolute',
+  right: baseUnit,
+  top: baseUnit / 2,
+}))(Animated.View);
+
 const HomeSearchButton = ({ onPress }) => (
-  <Touchable onPress={onPress}>
-    <SearchIcon />
-  </Touchable>
+  <SearchButtonContainer>
+    <Touchable onPress={onPress}>
+      <SearchIcon />
+    </Touchable>
+  </SearchButtonContainer>
 );
 
 HomeSearchButton.propTypes = {
