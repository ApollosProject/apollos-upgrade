diff --git a/apolloschurchapp/.env.shared.enc b/apolloschurchapp/.env.shared.enc
index 771bfa91a7e1c023fecb862c55e77660b032ddd0..78051aac43adc2f35d4b76af8a064643e15b904a 100644
GIT binary patch
literal 800
zcmV+*1K<2pVQh3|WM5y9NLM>{#dKEz=j2s4qBMb{ZH1-eJufGrkD6Z(AyG|d1;(5U
zVOgVNrYn{KaWzOd+#uxk*Ay?C^*%CY{HB*bYoI(n?-~8dR!JDZ5N-~nlC;@}*u%vc
zVH1T2Yl%mMe3+?{_`Xq0;c(-v4)67lfdqolD-6pfFL`fn-#;&w^d?Js<)Wuy7k(CF
zT1gTYwwt80Bz@Xl0{<&84?@y~xw91Y?1dNy^g{OrZdfXcW&uvgy&t3PDk%;k&X3&6
zxXi}-2pT>DJ;*aM>~(eHb6RE#G=yd-0DcVN;0+Mu`Fty<rDCOAV;!rv*1*PwM->1B
zKL8$i!e3@Gc&ux$c8Tc`!8Q?@m<QSWvp%L<a+tmFEhIkc>=ly~!{e$E4J?DJ<K$`c
zubr9ToAir%%D5WZet`(klG@JvmK991gdj-aYilNIEvh#Zzwp50l!_KDvDhiNvHJ*F
z2cq3Z6fiL`;k)TIBU;9b+$1UH8G4%}`8HRIa{?VhXzE*4CBmC$B)OE17wf0xUpXXA
zf`UM0yZxc5L>br{v<FE{W;|l487`JwqP|-a^*!P?49L@le2!2+eU?W=7a}+xaK*B9
zi01I1Q;EtA=|Me@vx!L<K$I%LK0#Nu$h?=p6`fXYgcp%9;M2*dV=H#`e~j?lz)?O5
z2g%32%aUM{t>I^2y79k~%wwAbtZo}~FwCPf$+P$7hpkZdAYj|O<(DJv9e7Jk505>x
ztskV?-P?krj7FnNGDH)%D1w7o;{NQ?DDkO&lH6BcW0golCRqjJxj=%Z5PR6(zEc(+
z#qBrTRV&at^2v~|`%jTQeHynu@l*2FWWx$W=ACNLa};|n^-)cu$3<$K551K<pccT-
z@%NutK=sijb;`H76Ic0xDy!?UT-;LEqF54&adHYST*Vm_P`bjOI$|tM<N$q1%Pr|;
z37`pYshTTk1+2LE{w@p{pw*B-sBP+HnIX}GTE>NkfFj<tTr(BUho^OhhxxOoH)kNU
e)Q9PM%t^2VSNNIVqvJI3YBI0{uu;KpICu>-g@ld(

literal 368
zcmV-$0gwJuVQh3|WM5yJ)t@WsV;nuW8z5R1h!|oELQxI>Pgs!ZMNIjJn`8>+OT1+j
zxfW!*=nUMeAbs4-j*D-<{7_YFzgO5yIsa-6S!#e>E;KF?fEd8%+a0i)zyk39aS2Pi
zuHZ#xHJ$#L%iW}Zk4_&jrOt_%`ytHOIh&m5-TcEw5|QLjI~Zn@B;^om18K6#(%`rY
zWrTIHQ~qPo@wMd0wR5sUHMW~ENW!qE_foRNgbAMr2|nl+w@Ws3o{w>~2DPhlcJC>b
zJco!D1+y~x$q*QsUdh}DnxoV$63->N+tsXR0H<(q7=bUBDhMrG&iO*GT07lXsnwoT
zlU!912EhnZR1YAE|6>W5h1tjKx<IL9H1GdSE24)D4fT1;D#FXknI;{H7o2i&&zS9Y
z1XW#Kj#*WmIh8JaE@1yrW8BW1$uXWPS41b4$QS*7i`k;Cs4R+&4T>yOw{IE18oZvP
O6<XMbyT_5_EJ0qZE3)AL

diff --git a/apolloschurchapp/.gitignore b/apolloschurchapp/.gitignore
index 7bd49399..ee91441b 100644
--- a/apolloschurchapp/.gitignore
+++ b/apolloschurchapp/.gitignore
@@ -147,7 +147,7 @@ DerivedData
 fastlane/report.xml
 
 # symbols
-apolloschurchapp.app.dSYM.zip
+*.app.dSYM.zip
 
 # iOS keys
 *.p8
diff --git a/apolloschurchapp/Gemfile b/apolloschurchapp/Gemfile
index 307e9509..77041843 100644
--- a/apolloschurchapp/Gemfile
+++ b/apolloschurchapp/Gemfile
@@ -1,3 +1,3 @@
 source 'https://rubygems.org'
-gem 'cocoapods', '1.8.4'
+gem 'cocoapods', '1.10.1'
 gem 'fastlane', '2.179.0'
diff --git a/apolloschurchapp/Gemfile.lock b/apolloschurchapp/Gemfile.lock
index 93c71c41..a0fa52db 100644
--- a/apolloschurchapp/Gemfile.lock
+++ b/apolloschurchapp/Gemfile.lock
@@ -1,22 +1,22 @@
 GEM
   remote: https://rubygems.org/
   specs:
-    CFPropertyList (3.0.2)
-    activesupport (4.2.11.3)
-      i18n (~> 0.7)
+    CFPropertyList (3.0.3)
+    activesupport (5.2.5)
+      concurrent-ruby (~> 1.0, >= 1.0.2)
+      i18n (>= 0.7, < 2)
       minitest (~> 5.1)
-      thread_safe (~> 0.3, >= 0.3.4)
       tzinfo (~> 1.1)
     addressable (2.7.0)
       public_suffix (>= 2.0.2, < 5.0)
-    algoliasearch (1.27.3)
+    algoliasearch (1.27.5)
       httpclient (~> 2.8, >= 2.8.3)
       json (>= 1.5.1)
     artifactory (3.0.15)
     atomos (0.1.3)
     aws-eventstream (1.1.1)
-    aws-partitions (1.442.0)
-    aws-sdk-core (3.113.1)
+    aws-partitions (1.449.0)
+    aws-sdk-core (3.114.0)
       aws-eventstream (~> 1, >= 1.0.2)
       aws-partitions (~> 1, >= 1.239.0)
       aws-sigv4 (~> 1.1)
@@ -24,7 +24,7 @@ GEM
     aws-sdk-kms (1.43.0)
       aws-sdk-core (~> 3, >= 3.112.0)
       aws-sigv4 (~> 1.1)
-    aws-sdk-s3 (1.93.0)
+    aws-sdk-s3 (1.94.0)
       aws-sdk-core (~> 3, >= 3.112.0)
       aws-sdk-kms (~> 1)
       aws-sigv4 (~> 1.1)
@@ -32,15 +32,14 @@ GEM
       aws-eventstream (~> 1, >= 1.0.2)
     babosa (1.0.4)
     claide (1.0.3)
-    cocoapods (1.8.4)
-      activesupport (>= 4.0.2, < 5)
+    cocoapods (1.10.1)
+      addressable (~> 2.6)
       claide (>= 1.0.2, < 2.0)
-      cocoapods-core (= 1.8.4)
+      cocoapods-core (= 1.10.1)
       cocoapods-deintegrate (>= 1.0.3, < 2.0)
-      cocoapods-downloader (>= 1.2.2, < 2.0)
+      cocoapods-downloader (>= 1.4.0, < 2.0)
       cocoapods-plugins (>= 1.0.0, < 2.0)
       cocoapods-search (>= 1.0.0, < 2.0)
-      cocoapods-stats (>= 1.0.0, < 2.0)
       cocoapods-trunk (>= 1.4.0, < 2.0)
       cocoapods-try (>= 1.1.0, < 2.0)
       colored2 (~> 3.1)
@@ -50,19 +49,22 @@ GEM
       molinillo (~> 0.6.6)
       nap (~> 1.0)
       ruby-macho (~> 1.4)
-      xcodeproj (>= 1.11.1, < 2.0)
-    cocoapods-core (1.8.4)
-      activesupport (>= 4.0.2, < 6)
+      xcodeproj (>= 1.19.0, < 2.0)
+    cocoapods-core (1.10.1)
+      activesupport (> 5.0, < 6)
+      addressable (~> 2.6)
       algoliasearch (~> 1.0)
       concurrent-ruby (~> 1.1)
       fuzzy_match (~> 2.0.4)
       nap (~> 1.0)
+      netrc (~> 0.11)
+      public_suffix
+      typhoeus (~> 1.0)
     cocoapods-deintegrate (1.0.4)
     cocoapods-downloader (1.4.0)
     cocoapods-plugins (1.0.0)
       nap
     cocoapods-search (1.0.0)
-    cocoapods-stats (1.1.0)
     cocoapods-trunk (1.5.0)
       nap (>= 0.8, < 2.0)
       netrc (~> 0.11)
@@ -71,9 +73,8 @@ GEM
     colored2 (3.1.2)
     commander-fastlane (4.4.6)
       highline (~> 1.7.2)
-    concurrent-ruby (1.1.7)
+    concurrent-ruby (1.1.8)
     declarative (0.0.20)
-    declarative-option (0.1.0)
     digest-crc (0.6.3)
       rake (>= 12.0.0, < 14.0.0)
     domain_name (0.5.20190701)
@@ -81,15 +82,21 @@ GEM
     dotenv (2.7.6)
     emoji_regex (3.2.2)
     escape (0.0.4)
-    excon (0.79.0)
-    faraday (1.3.0)
+    ethon (0.14.0)
+      ffi (>= 1.15.0)
+    excon (0.81.0)
+    faraday (1.4.1)
+      faraday-excon (~> 1.1)
       faraday-net_http (~> 1.0)
+      faraday-net_http_persistent (~> 1.1)
       multipart-post (>= 1.2, < 3)
-      ruby2_keywords
+      ruby2_keywords (>= 0.0.4)
     faraday-cookie_jar (0.0.7)
       faraday (>= 0.8.0)
       http-cookie (~> 1.0.0)
+    faraday-excon (1.1.0)
     faraday-net_http (1.0.1)
+    faraday-net_http_persistent (1.1.0)
     faraday_middleware (1.0.0)
       faraday (~> 1.0)
     fastimage (2.2.3)
@@ -131,6 +138,7 @@ GEM
       xcodeproj (>= 1.13.0, < 2.0.0)
       xcpretty (~> 0.3.0)
       xcpretty-travis-formatter (>= 0.0.3)
+    ffi (1.15.0)
     fourflusher (2.3.1)
     fuzzy_match (2.0.4)
     gh_inspector (1.1.3)
@@ -170,7 +178,7 @@ GEM
       google-cloud-core (~> 1.2)
       googleauth (~> 0.9)
       mini_mime (~> 1.0)
-    googleauth (0.16.1)
+    googleauth (0.16.2)
       faraday (>= 0.17.3, < 2.0)
       jwt (>= 1.4, < 3.0)
       memoist (~> 0.16)
@@ -181,15 +189,15 @@ GEM
     http-cookie (1.0.3)
       domain_name (~> 0.5)
     httpclient (2.8.3)
-    i18n (0.9.5)
+    i18n (1.8.10)
       concurrent-ruby (~> 1.0)
     jmespath (1.4.0)
-    json (2.3.1)
-    jwt (2.2.2)
+    json (2.5.1)
+    jwt (2.2.3)
     memoist (0.16.2)
     mini_magick (4.11.0)
     mini_mime (1.1.0)
-    minitest (5.14.1)
+    minitest (5.14.4)
     molinillo (0.6.6)
     multi_json (1.15.0)
     multipart-post (2.0.0)
@@ -201,9 +209,9 @@ GEM
     plist (3.6.0)
     public_suffix (4.0.6)
     rake (13.0.3)
-    representable (3.0.4)
+    representable (3.1.1)
       declarative (< 0.1.0)
-      declarative-option (< 0.2.0)
+      trailblazer-option (>= 0.1.1, < 0.2.0)
       uber (< 0.2.0)
     retriable (3.1.2)
     rexml (3.2.5)
@@ -225,11 +233,14 @@ GEM
     terminal-table (1.8.0)
       unicode-display_width (~> 1.1, >= 1.1.1)
     thread_safe (0.3.6)
+    trailblazer-option (0.1.1)
     tty-cursor (0.7.1)
     tty-screen (0.8.1)
     tty-spinner (0.9.3)
       tty-cursor (~> 0.7)
-    tzinfo (1.2.7)
+    typhoeus (1.4.0)
+      ethon (>= 0.9.0)
+    tzinfo (1.2.9)
       thread_safe (~> 0.1)
     uber (0.1.0)
     unf (0.1.4)
@@ -238,7 +249,7 @@ GEM
     unicode-display_width (1.7.0)
     webrick (1.7.0)
     word_wrap (1.0.0)
-    xcodeproj (1.18.0)
+    xcodeproj (1.19.0)
       CFPropertyList (>= 2.3.3, < 4.0)
       atomos (~> 0.1.3)
       claide (>= 1.0.2, < 2.0)
@@ -253,7 +264,7 @@ PLATFORMS
   ruby
 
 DEPENDENCIES
-  cocoapods (= 1.8.4)
+  cocoapods (= 1.10.1)
   fastlane (= 2.179.0)
 
 BUNDLED WITH
diff --git a/apolloschurchapp/android/app/apollos.keystore.enc b/apolloschurchapp/android/app/apollos.keystore.enc
index a8b963351a8ab7ca68b0564dc8a224f74808ec3f..dcb722aed262b8e81815e8431a126ce983366958 100644
GIT binary patch
literal 2272
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

literal 2272
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

diff --git a/apolloschurchapp/android/app/src/main/AndroidManifest.xml b/apolloschurchapp/android/app/src/main/AndroidManifest.xml
index 887cc9cf..9b213950 100644
--- a/apolloschurchapp/android/app/src/main/AndroidManifest.xml
+++ b/apolloschurchapp/android/app/src/main/AndroidManifest.xml
@@ -18,10 +18,6 @@
         android:name="com.google.android.geo.API_KEY"
         android:value="@string/GOOGLE_MAPS_API_KEY"/>
 
-      <meta-data
-        android:name="com.google.android.gms.cast.framework.OPTIONS_PROVIDER_CLASS_NAME"
-        android:value="com.reactnative.googlecast.GoogleCastOptionsProvider" />
-
       <activity
         android:name=".MainActivity"
         android:label="@string/app_name"
diff --git a/apolloschurchapp/android/app/src/main/java/com/differential/apollos/MainActivity.java b/apolloschurchapp/android/app/src/main/java/com/differential/apollos/MainActivity.java
index db0a876b..89affa60 100644
--- a/apolloschurchapp/android/app/src/main/java/com/differential/apollos/MainActivity.java
+++ b/apolloschurchapp/android/app/src/main/java/com/differential/apollos/MainActivity.java
@@ -5,9 +5,8 @@ import com.facebook.react.ReactActivity;
 import com.facebook.react.ReactActivityDelegate;
 import com.facebook.react.ReactRootView;
 import com.swmansion.gesturehandler.react.RNGestureHandlerEnabledRootView;
-import com.facebook.react.GoogleCastActivity;
 
-public class MainActivity extends GoogleCastActivity {
+public class MainActivity extends ReactActivity {
     /**
      * Returns the name of the main component registered from JavaScript.
      * This is used to schedule rendering of the component.
diff --git a/apolloschurchapp/android/key.json.enc b/apolloschurchapp/android/key.json.enc
index 7c680913f47e9d5d0a2ade0182ae92333f3896b9..2e5d50e76c0d985c57f6572f387733330c292d2e 100644
GIT binary patch
literal 2384
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
CY_iP&

literal 2384
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
C1&Zka

diff --git a/apolloschurchapp/apollos.json b/apolloschurchapp/apollos.json
index 4bac1aa6..111792d9 100644
--- a/apolloschurchapp/apollos.json
+++ b/apolloschurchapp/apollos.json
@@ -1,4 +1,4 @@
 {
-    "version": "2.13.0",
+    "version": "2.16.0",
     "environment": "client"
 }
diff --git a/apolloschurchapp/fastlane/Appfile b/apolloschurchapp/fastlane/Appfile
deleted file mode 100644
index fb2e46e3..00000000
--- a/apolloschurchapp/fastlane/Appfile
+++ /dev/null
@@ -1,8 +0,0 @@
-# iOS
-app_identifier("com.differential.apollos") # The bundle identifier of your app
-itc_team_id("121565707") # App Store Connect Team ID
-team_id("7KS82J74VW") # Developer Portal Team ID
-
-# Android
-json_key_file("android/key.json") # Path to the json secret file - Follow https://docs.fastlane.tools/actions/supply/#setup to get one
-package_name("com.differential.apollos") # e.g. com.krausefx.app
diff --git a/apolloschurchapp/fastlane/Fastfile b/apolloschurchapp/fastlane/Fastfile
index 70abf33a..0e40d3ce 100644
--- a/apolloschurchapp/fastlane/Fastfile
+++ b/apolloschurchapp/fastlane/Fastfile
@@ -23,29 +23,28 @@ platform :ios do
 
   desc "Push a new beta build to TestFlight"
   lane :deploy do
-    app_store_connect_api_key(
-      key_id: "LV9F3XX57B",
-      issuer_id: "7943c4a3-c0cf-442e-93bd-b3c289bddec3",
-      key_filepath: "ios/apollos.p8",
-    )
+
+    # get project name
+    proj = Dir.glob("../ios/*.xcworkspace")[0][7..-13]
+
+    app_store_connect_api_key(key_filepath: "ios/apollos.p8")
     setup_ci
     match(type: 'appstore', readonly: true)
-    increment_build_number(build_number: number_of_commits, xcodeproj: "ios/apolloschurchapp.xcodeproj")
-    build_app(workspace: "ios/apolloschurchapp.xcworkspace", scheme: "apolloschurchappprod")
+    increment_build_number(build_number: number_of_commits, xcodeproj: "ios/" << proj << ".xcodeproj")
+    build_app(workspace: "ios/" << proj << ".xcworkspace", scheme: proj)
     changelog_from_git_commits
-    upload_to_testflight
+    testflight
   end
 end
 
 platform :android do
 
-  # necessary because setting gradle properties doesn't seem to be working
   desc "Bumps Android versionCode"
   lane :bump_version_code do
     path = '../android/app/build.gradle'
     re = /versionCode\s+(\d+)/
 
-    s = File.read(path)
+    s = File.read("../android/app/build.gradle")
     versionCode = number_of_commits
     s[re, 1] = (versionCode).to_s
 
@@ -60,6 +59,17 @@ platform :android do
     gradle(task: 'clean', project_dir: 'android')
     gradle(task: 'bundle', build_type: 'Release', project_dir: 'android')
     changelog_from_git_commits
-    upload_to_play_store(track: "internal", skip_upload_apk: true)
+
+    path = '../android/app/build.gradle'
+    re = /applicationId\s+"([\w+\.]*)"/
+    s = File.read("../android/app/build.gradle")
+    package_name = s[re, 1]
+
+    upload_to_play_store(
+      track: "internal",
+      skip_upload_apk: true,
+      json_key: "android/key.json",
+      package_name: package_name
+    )
   end
 end
diff --git a/apolloschurchapp/fastlane/Matchfile b/apolloschurchapp/fastlane/Matchfile
deleted file mode 100644
index d01001cc..00000000
--- a/apolloschurchapp/fastlane/Matchfile
+++ /dev/null
@@ -1,2 +0,0 @@
-git_url("https://github.com/ApollosProject/certificates")
-app_identifier("com.differential.apollos")
diff --git a/apolloschurchapp/ios/Podfile b/apolloschurchapp/ios/Podfile
index 26b192b8..40454274 100644
--- a/apolloschurchapp/ios/Podfile
+++ b/apolloschurchapp/ios/Podfile
@@ -11,7 +11,6 @@ target 'apolloschurchapp' do
 
   pod 'Permission-PhotoLibrary', :path => "#{permissions_path}/PhotoLibrary.podspec"
   pod 'Permission-Notifications', :path => "#{permissions_path}/Notifications.podspec"
-  # pod 'react-native-google-cast/NoBluetooth', path: '../node_modules/react-native-google-cast/ios/'
 
   target 'apolloschurchappTests' do
     inherit! :complete
@@ -22,7 +21,7 @@ target 'apolloschurchapp' do
   #
   # Note that if you have use_frameworks! enabled, Flipper will not work and
   # you should disable these next few lines.
-  use_flipper!
+  use_flipper!('Flipper' => '0.75.1', 'Flipper-Folly' => '2.5.3', 'Flipper-RSocket' => '1.3.1')
   post_install do |installer|
     flipper_post_install(installer)
       installer.pods_project.targets.each do |target|
@@ -36,7 +35,7 @@ target 'apolloschurchapp' do
          target.build_phases << phase
          target.build_phases.move(phase,0)
        end
-      end    
+      end
   end
 end
 
diff --git a/apolloschurchapp/ios/Podfile.lock b/apolloschurchapp/ios/Podfile.lock
index aaaa63cd..33c43435 100644
--- a/apolloschurchapp/ios/Podfile.lock
+++ b/apolloschurchapp/ios/Podfile.lock
@@ -4,7 +4,6 @@ PODS:
   - BVLinearGradient (2.5.6):
     - React
   - CocoaAsyncSocket (7.6.5)
-  - CocoaLibEvent (1.0.0)
   - DoubleConversion (1.1.6)
   - FBLazyVector (0.63.4)
   - FBReactNativeSpec (0.63.4):
@@ -14,50 +13,50 @@ PODS:
     - React-Core (= 0.63.4)
     - React-jsi (= 0.63.4)
     - ReactCommon/turbomodule/core (= 0.63.4)
-  - Flipper (0.54.0):
-    - Flipper-Folly (~> 2.2)
-    - Flipper-RSocket (~> 1.1)
+  - Flipper (0.75.1):
+    - Flipper-Folly (~> 2.5)
+    - Flipper-RSocket (~> 1.3)
   - Flipper-DoubleConversion (1.1.7)
-  - Flipper-Folly (2.3.0):
+  - Flipper-Folly (2.5.3):
     - boost-for-react-native
-    - CocoaLibEvent (~> 1.0)
     - Flipper-DoubleConversion
     - Flipper-Glog
-    - OpenSSL-Universal (= 1.0.2.20)
+    - libevent (~> 2.1.12)
+    - OpenSSL-Universal (= 1.1.180)
   - Flipper-Glog (0.3.6)
   - Flipper-PeerTalk (0.0.4)
-  - Flipper-RSocket (1.1.0):
-    - Flipper-Folly (~> 2.2)
-  - FlipperKit (0.54.0):
-    - FlipperKit/Core (= 0.54.0)
-  - FlipperKit/Core (0.54.0):
-    - Flipper (~> 0.54.0)
+  - Flipper-RSocket (1.3.1):
+    - Flipper-Folly (~> 2.5)
+  - FlipperKit (0.75.1):
+    - FlipperKit/Core (= 0.75.1)
+  - FlipperKit/Core (0.75.1):
+    - Flipper (~> 0.75.1)
     - FlipperKit/CppBridge
     - FlipperKit/FBCxxFollyDynamicConvert
     - FlipperKit/FBDefines
     - FlipperKit/FKPortForwarding
-  - FlipperKit/CppBridge (0.54.0):
-    - Flipper (~> 0.54.0)
-  - FlipperKit/FBCxxFollyDynamicConvert (0.54.0):
-    - Flipper-Folly (~> 2.2)
-  - FlipperKit/FBDefines (0.54.0)
-  - FlipperKit/FKPortForwarding (0.54.0):
+  - FlipperKit/CppBridge (0.75.1):
+    - Flipper (~> 0.75.1)
+  - FlipperKit/FBCxxFollyDynamicConvert (0.75.1):
+    - Flipper-Folly (~> 2.5)
+  - FlipperKit/FBDefines (0.75.1)
+  - FlipperKit/FKPortForwarding (0.75.1):
     - CocoaAsyncSocket (~> 7.6)
     - Flipper-PeerTalk (~> 0.0.4)
-  - FlipperKit/FlipperKitHighlightOverlay (0.54.0)
-  - FlipperKit/FlipperKitLayoutPlugin (0.54.0):
+  - FlipperKit/FlipperKitHighlightOverlay (0.75.1)
+  - FlipperKit/FlipperKitLayoutPlugin (0.75.1):
     - FlipperKit/Core
     - FlipperKit/FlipperKitHighlightOverlay
     - FlipperKit/FlipperKitLayoutTextSearchable
     - YogaKit (~> 1.18)
-  - FlipperKit/FlipperKitLayoutTextSearchable (0.54.0)
-  - FlipperKit/FlipperKitNetworkPlugin (0.54.0):
+  - FlipperKit/FlipperKitLayoutTextSearchable (0.75.1)
+  - FlipperKit/FlipperKitNetworkPlugin (0.75.1):
     - FlipperKit/Core
-  - FlipperKit/FlipperKitReactPlugin (0.54.0):
+  - FlipperKit/FlipperKitReactPlugin (0.75.1):
     - FlipperKit/Core
-  - FlipperKit/FlipperKitUserDefaultsPlugin (0.54.0):
+  - FlipperKit/FlipperKitUserDefaultsPlugin (0.75.1):
     - FlipperKit/Core
-  - FlipperKit/SKIOSNetworkPlugin (0.54.0):
+  - FlipperKit/SKIOSNetworkPlugin (0.75.1):
     - FlipperKit/Core
     - FlipperKit/FlipperKitNetworkPlugin
   - Folly (2020.01.13.00):
@@ -70,13 +69,9 @@ PODS:
     - DoubleConversion
     - glog
   - glog (0.3.5)
-  - google-cast-sdk (4.3.0):
-    - google-cast-sdk/Core (= 4.3.0)
-  - google-cast-sdk/Core (4.3.0)
+  - libevent (2.1.12)
   - OneSignal (2.15.2)
-  - OpenSSL-Universal (1.0.2.20):
-    - OpenSSL-Universal/Static (= 1.0.2.20)
-  - OpenSSL-Universal/Static (1.0.2.20)
+  - OpenSSL-Universal (1.1.180)
   - Permission-Notifications (2.2.2):
     - RNPermissions
   - Permission-PhotoLibrary (2.2.2):
@@ -247,7 +242,7 @@ PODS:
     - React-cxxreact (= 0.63.4)
     - React-jsi (= 0.63.4)
   - React-jsinspector (0.63.4)
-  - react-native-apollos-player (2.13.0):
+  - react-native-apollos-player (2.16.0):
     - React
   - react-native-config (0.11.7):
     - React
@@ -255,15 +250,6 @@ PODS:
     - React
   - react-native-geolocation-service (5.1.1):
     - React
-  - react-native-google-cast (3.3.0):
-    - React
-    - react-native-google-cast/Default (= 3.3.0)
-  - react-native-google-cast/Default (3.3.0):
-    - google-cast-sdk (<= 4.3.0)
-    - React
-    - react-native-google-cast/RNGoogleCast
-  - react-native-google-cast/RNGoogleCast (3.3.0):
-    - React
   - react-native-image-picker (3.1.4):
     - React-Core
   - react-native-maps (0.27.1):
@@ -286,8 +272,8 @@ PODS:
     - react-native-video/Video (= 5.0.2)
   - react-native-video/Video (5.0.2):
     - React
-  - react-native-webview (7.6.0):
-    - React
+  - react-native-webview (11.4.1):
+    - React-Core
   - React-RCTActionSheet (0.63.4):
     - React-Core/RCTActionSheetHeaders (= 0.63.4)
   - React-RCTAnimation (0.63.4):
@@ -400,7 +386,7 @@ PODS:
     - React-RCTVibration
     - ReactCommon/turbomodule/core
     - Yoga
-  - RNScreens (2.18.1):
+  - RNScreens (3.2.0):
     - React-Core
   - RNSVG (9.13.6):
     - React
@@ -413,25 +399,25 @@ DEPENDENCIES:
   - DoubleConversion (from `../node_modules/react-native/third-party-podspecs/DoubleConversion.podspec`)
   - FBLazyVector (from `../node_modules/react-native/Libraries/FBLazyVector`)
   - FBReactNativeSpec (from `../node_modules/react-native/Libraries/FBReactNativeSpec`)
-  - Flipper (~> 0.54.0)
+  - Flipper (= 0.75.1)
   - Flipper-DoubleConversion (= 1.1.7)
-  - Flipper-Folly (~> 2.2)
+  - Flipper-Folly (= 2.5.3)
   - Flipper-Glog (= 0.3.6)
   - Flipper-PeerTalk (~> 0.0.4)
-  - Flipper-RSocket (~> 1.1)
-  - FlipperKit (~> 0.54.0)
-  - FlipperKit/Core (~> 0.54.0)
-  - FlipperKit/CppBridge (~> 0.54.0)
-  - FlipperKit/FBCxxFollyDynamicConvert (~> 0.54.0)
-  - FlipperKit/FBDefines (~> 0.54.0)
-  - FlipperKit/FKPortForwarding (~> 0.54.0)
-  - FlipperKit/FlipperKitHighlightOverlay (~> 0.54.0)
-  - FlipperKit/FlipperKitLayoutPlugin (~> 0.54.0)
-  - FlipperKit/FlipperKitLayoutTextSearchable (~> 0.54.0)
-  - FlipperKit/FlipperKitNetworkPlugin (~> 0.54.0)
-  - FlipperKit/FlipperKitReactPlugin (~> 0.54.0)
-  - FlipperKit/FlipperKitUserDefaultsPlugin (~> 0.54.0)
-  - FlipperKit/SKIOSNetworkPlugin (~> 0.54.0)
+  - Flipper-RSocket (= 1.3.1)
+  - FlipperKit (= 0.75.1)
+  - FlipperKit/Core (= 0.75.1)
+  - FlipperKit/CppBridge (= 0.75.1)
+  - FlipperKit/FBCxxFollyDynamicConvert (= 0.75.1)
+  - FlipperKit/FBDefines (= 0.75.1)
+  - FlipperKit/FKPortForwarding (= 0.75.1)
+  - FlipperKit/FlipperKitHighlightOverlay (= 0.75.1)
+  - FlipperKit/FlipperKitLayoutPlugin (= 0.75.1)
+  - FlipperKit/FlipperKitLayoutTextSearchable (= 0.75.1)
+  - FlipperKit/FlipperKitNetworkPlugin (= 0.75.1)
+  - FlipperKit/FlipperKitReactPlugin (= 0.75.1)
+  - FlipperKit/FlipperKitUserDefaultsPlugin (= 0.75.1)
+  - FlipperKit/SKIOSNetworkPlugin (= 0.75.1)
   - Folly (from `../node_modules/react-native/third-party-podspecs/Folly.podspec`)
   - glog (from `../node_modules/react-native/third-party-podspecs/glog.podspec`)
   - Permission-Notifications (from `../node_modules/react-native-permissions/ios/Notifications.podspec`)
@@ -452,7 +438,6 @@ DEPENDENCIES:
   - react-native-config (from `../node_modules/react-native-config`)
   - "react-native-geolocation (from `../node_modules/@react-native-community/geolocation`)"
   - react-native-geolocation-service (from `../node_modules/react-native-geolocation-service`)
-  - react-native-google-cast (from `../node_modules/react-native-google-cast/ios`)
   - react-native-image-picker (from `../node_modules/react-native-image-picker`)
   - react-native-maps (from `../node_modules/react-native-maps`)
   - react-native-music-control (from `../node_modules/react-native-music-control`)
@@ -494,7 +479,6 @@ SPEC REPOS:
     - AstronomerAnalytics
     - boost-for-react-native
     - CocoaAsyncSocket
-    - CocoaLibEvent
     - Flipper
     - Flipper-DoubleConversion
     - Flipper-Folly
@@ -502,7 +486,7 @@ SPEC REPOS:
     - Flipper-PeerTalk
     - Flipper-RSocket
     - FlipperKit
-    - google-cast-sdk
+    - libevent
     - OneSignal
     - OpenSSL-Universal
     - YogaKit
@@ -552,8 +536,6 @@ EXTERNAL SOURCES:
     :path: "../node_modules/@react-native-community/geolocation"
   react-native-geolocation-service:
     :path: "../node_modules/react-native-geolocation-service"
-  react-native-google-cast:
-    :path: "../node_modules/react-native-google-cast/ios"
   react-native-image-picker:
     :path: "../node_modules/react-native-image-picker"
   react-native-maps:
@@ -630,22 +612,21 @@ SPEC CHECKSUMS:
   boost-for-react-native: 39c7adb57c4e60d6c5479dd8623128eb5b3f0f2c
   BVLinearGradient: e3aad03778a456d77928f594a649e96995f1c872
   CocoaAsyncSocket: 065fd1e645c7abab64f7a6a2007a48038fdc6a99
-  CocoaLibEvent: 2fab71b8bd46dd33ddb959f7928ec5909f838e3f
   DoubleConversion: cde416483dac037923206447da6e1454df403714
   FBLazyVector: 3bb422f41b18121b71783a905c10e58606f7dc3e
   FBReactNativeSpec: f2c97f2529dd79c083355182cc158c9f98f4bd6e
-  Flipper: be611d4b742d8c87fbae2ca5f44603a02539e365
+  Flipper: d3da1aa199aad94455ae725e9f3aa43f3ec17021
   Flipper-DoubleConversion: 38631e41ef4f9b12861c67d17cb5518d06badc41
-  Flipper-Folly: e4493b013c02d9347d5e0cb4d128680239f6c78a
+  Flipper-Folly: 755929a4f851b2fb2c347d533a23f191b008554c
   Flipper-Glog: 1dfd6abf1e922806c52ceb8701a3599a79a200a6
   Flipper-PeerTalk: 116d8f857dc6ef55c7a5a75ea3ceaafe878aadc9
-  Flipper-RSocket: 64e7431a55835eb953b0bf984ef3b90ae9fdddd7
-  FlipperKit: ab353d41aea8aae2ea6daaf813e67496642f3d7d
+  Flipper-RSocket: 127954abe8b162fcaf68d2134d34dc2bd7076154
+  FlipperKit: 8a20b5c5fcf9436cac58551dc049867247f64b00
   Folly: b73c3869541e86821df3c387eb0af5f65addfab4
   glog: 40a13f7840415b9a77023fbcae0f1e6f43192af3
-  google-cast-sdk: 57cd67b4a0966802b2738fcbbc103125c98cc8a1
+  libevent: 4049cae6c81cdb3654a443be001fb9bdceff7913
   OneSignal: 9531e385388565f4d31797ddadbe0fcc786430ec
-  OpenSSL-Universal: ff34003318d5e1163e9529b08470708e389ffcdd
+  OpenSSL-Universal: 1aa4f6a6ee7256b83db99ec1ccdaa80d10f9af9b
   Permission-Notifications: 9c6b5cc4f0e6599e9fc3395b77cebddc48f1be41
   Permission-PhotoLibrary: 8227a6ed9f6a971537afe63742d54f5f23a38fe2
   RCTRequired: 082f10cd3f905d6c124597fd1c14f6f2655ff65e
@@ -658,11 +639,10 @@ SPEC CHECKSUMS:
   React-jsi: a0418934cf48f25b485631deb27c64dc40fb4c31
   React-jsiexecutor: 93bd528844ad21dc07aab1c67cb10abae6df6949
   React-jsinspector: 58aef7155bc9a9683f5b60b35eccea8722a4f53a
-  react-native-apollos-player: 4367c015952b145a541c0904c52bf2fb973f8182
+  react-native-apollos-player: a92df2529b02d4f8caceb58dfadbe5b25b6ffe05
   react-native-config: 55548054279d92e0e4566ea15a8b9b81028ec342
   react-native-geolocation: c956aeb136625c23e0dce0467664af2c437888c9
   react-native-geolocation-service: f33626f1ae12381ca2ae60f98b2f5edd676bf95a
-  react-native-google-cast: 410619ef162b8b91815ecf7271502224998dee8e
   react-native-image-picker: 28d8d1f5a643119876b8b2c7d4d1dcfb2b232dd4
   react-native-maps: f4b89da81626ad7f151a8bfcb79733295d31ce5c
   react-native-music-control: dcfe5b61e56a15898c4618579cb8ce612c9d21a8
@@ -672,7 +652,7 @@ SPEC CHECKSUMS:
   react-native-safe-area-context: ef6f16c66b0797ecae1bf86c103dfb3dc16fc33d
   react-native-splash-screen: 200d11d188e2e78cea3ad319964f6142b6384865
   react-native-video: d01ed7ff1e38fa7dcc6c15c94cf505e661b7bfd0
-  react-native-webview: db4682f1698ab4b17a5e88f951031d203ff8aea8
+  react-native-webview: 4024b67e9c91810450a5960dff60ae708fd5acd1
   React-RCTActionSheet: 89a0ca9f4a06c1f93c26067af074ccdce0f40336
   React-RCTAnimation: 1bde3ecc0c104c55df246eda516e0deb03c4e49b
   React-RCTBlob: a97d378b527740cc667e03ebfa183a75231ab0f0
@@ -695,11 +675,11 @@ SPEC CHECKSUMS:
   RNInAppBrowser: 48b95ba7a4eaff5cc223bca338d3e319561dbd1b
   RNPermissions: 5df468064df661a4c8c017e2791ce90d7695eea5
   RNReanimated: 5231286440b796e09df3bfa5c1b12b02bfe07664
-  RNScreens: f7ad633b2e0190b77b6a7aab7f914fad6f198d8d
+  RNScreens: c277bfc4b5bb7c2fe977d19635df6f974f95dfd6
   RNSVG: 8ba35cbeb385a52fd960fd28db9d7d18b4c2974f
   Yoga: 4bd86afe9883422a7c4028c00e34790f560923d6
   YogaKit: f782866e155069a2cca2517aafea43200b01fd5a
 
-PODFILE CHECKSUM: ff0b6ccfe0571b896a44f129ac11790a8b809329
+PODFILE CHECKSUM: 6de27767413bc4f48feeecbc37bbce2b733bfe20
 
-COCOAPODS: 1.8.4
+COCOAPODS: 1.10.1
diff --git a/apolloschurchapp/ios/apollos.p8.enc b/apolloschurchapp/ios/apollos.p8.enc
index 20f497384324d2d2ba630234c671f48354b9e6ee..eb1cc0853c61b23c482511b39b20a39f7ac92b58 100644
GIT binary patch
literal 288
zcmV+*0pI>pVQh3|WM5yu{G*CHgeC}mNOXdmw4Bi~-U45=I7u?5Xs8-Yo$V7#x2K0=
zHFU>gy|l2nA@gi4*4Yomf}N-AUBBnQm!MyrYesHsC(t&oXgs7(HvgX$6kT=@e&@Z}
znqP9FICM&H=sVgNj_p|{!3#A@&va*c#;_^I+n_Zn3?-iSxY^P4$Y}QVsGmGh^jl0P
zm3d$#SX8Pz&zp7MX4OU~SPu)TkXGfG-*33OfxhPv<9DMnuph|p+EUD7mHj|m#Z-_+
zJZiycKDv;}nY%<>l8*A4hbcHoDXK=EZ|ea=w{XJl(=4hS-<ahLz&^h1Op5bZpBtEQ
mg>E`|o=vyE!Y1-FevjF25oAVZ$3`OJMIuD?d+vf(S|nnJCy_z`

literal 288
zcmV+*0pI>pVQh3|WM5y30uO~q6y^1I6XI1WVtdI~K++o{;TqMT!FmNr_kPu~kos_(
zEw=og7SmBjV5cG_P6fYlAS!#ZF13GnQ%)PC6w|(K3=*~;VD1A8&ae$FJ*W)du_!_q
z%M%y`-2H!+-{bv8NQejCqzE2ULs`ro*^*+B?Dh-o@}dFyTo;IHx4UYJm~Lq@1p*LA
z0DP#4@G4V5IBl{Lsc=8GSR#XwV@+4!?98qnu*uo&x;vLFcKd1lbea7G8V$Fbq^v6g
z<9YTKpn7bZFns;S7~Zm7)-Gecd)+wRjK7u~hEo(!FLl_=s+)O7D9TWjXSpBgg6;1c
mf3wmoIH>A$uAvo-ByCahf*#Wt@PyuMA)?Xw-ezmg4t=TVE{ci(

diff --git a/apolloschurchapp/ios/apolloschurchapp.xcodeproj/project.pbxproj b/apolloschurchapp/ios/apolloschurchapp.xcodeproj/project.pbxproj
index 00180682..0ffd1038 100644
--- a/apolloschurchapp/ios/apolloschurchapp.xcodeproj/project.pbxproj
+++ b/apolloschurchapp/ios/apolloschurchapp.xcodeproj/project.pbxproj
@@ -14,7 +14,7 @@
 		13B07FBF1A68108700A75B9A /* Images.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB51A68108700A75B9A /* Images.xcassets */; };
 		13B07FC11A68108700A75B9A /* main.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB71A68108700A75B9A /* main.m */; };
 		1C48DCDE11AC47C48E918489 /* Inter-UI-Medium.otf in Resources */ = {isa = PBXBuildFile; fileRef = DC74A378C1CC40E4B6192D7F /* Inter-UI-Medium.otf */; };
-		2AE17F608689DAE577F28E4D /* (null) in Frameworks */ = {isa = PBXBuildFile; };
+		2AE17F608689DAE577F28E4D /* BuildFile in Frameworks */ = {isa = PBXBuildFile; };
 		2D02E4BC1E0B4A80006451C7 /* AppDelegate.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB01A68108700A75B9A /* AppDelegate.m */; };
 		2D02E4BD1E0B4A84006451C7 /* Images.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB51A68108700A75B9A /* Images.xcassets */; };
 		2D02E4BF1E0B4AB3006451C7 /* main.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB71A68108700A75B9A /* main.m */; };
@@ -115,7 +115,7 @@
 			isa = PBXFrameworksBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
-				2AE17F608689DAE577F28E4D /* (null) in Frameworks */,
+				2AE17F608689DAE577F28E4D /* BuildFile in Frameworks */,
 				EF3A30A2E55D4F8352E116D3 /* libPods-apolloschurchapp-apolloschurchappTests.a in Frameworks */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
@@ -290,8 +290,8 @@
 				00E356EA1AD99517003FC87E /* Sources */,
 				00E356EB1AD99517003FC87E /* Frameworks */,
 				00E356EC1AD99517003FC87E /* Resources */,
-				C7A5ADB714711CE3B4CC0EAA /* [CP] Embed Pods Frameworks */,
 				892ED59C47CEB9B13B75EC71 /* [CP] Copy Pods Resources */,
+				3E2635F41ADA8FBB628BB92D /* [CP] Embed Pods Frameworks */,
 			);
 			buildRules = (
 			);
@@ -313,7 +313,7 @@
 				13B07F8E1A680F5B00A75B9A /* Resources */,
 				00DD1BFF1BD5951E006B06BC /* Bundle React Native code and images */,
 				43D579D8398224D7B09F58F6 /* [CP] Copy Pods Resources */,
-				3C01FFABD3A7274D34564996 /* [CP] Embed Pods Frameworks */,
+				84E19E444A56C704431362B6 /* [CP] Embed Pods Frameworks */,
 			);
 			buildRules = (
 			);
@@ -514,22 +514,22 @@
 			shellPath = /bin/sh;
 			shellScript = "export NODE_BINARY=node\n../node_modules/react-native/scripts/react-native-xcode.sh";
 		};
-		3C01FFABD3A7274D34564996 /* [CP] Embed Pods Frameworks */ = {
+		3E2635F41ADA8FBB628BB92D /* [CP] Embed Pods Frameworks */ = {
 			isa = PBXShellScriptBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
 			);
 			inputPaths = (
-				"${PODS_ROOT}/Target Support Files/Pods-apolloschurchapp/Pods-apolloschurchapp-frameworks.sh",
-				"${PODS_ROOT}/google-cast-sdk/GoogleCastSDK-ios-4.3.0/GoogleCast.framework",
+				"${PODS_ROOT}/Target Support Files/Pods-apolloschurchapp-apolloschurchappTests/Pods-apolloschurchapp-apolloschurchappTests-frameworks.sh",
+				"${PODS_XCFRAMEWORKS_BUILD_DIR}/OpenSSL/OpenSSL.framework/OpenSSL",
 			);
 			name = "[CP] Embed Pods Frameworks";
 			outputPaths = (
-				"${TARGET_BUILD_DIR}/${FRAMEWORKS_FOLDER_PATH}/GoogleCast.framework",
+				"${TARGET_BUILD_DIR}/${FRAMEWORKS_FOLDER_PATH}/OpenSSL.framework",
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 			shellPath = /bin/sh;
-			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-apolloschurchapp/Pods-apolloschurchapp-frameworks.sh\"\n";
+			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-apolloschurchapp-apolloschurchappTests/Pods-apolloschurchapp-apolloschurchappTests-frameworks.sh\"\n";
 			showEnvVarsInLog = 0;
 		};
 		43D579D8398224D7B09F58F6 /* [CP] Copy Pods Resources */ = {
@@ -550,6 +550,24 @@
 			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-apolloschurchapp/Pods-apolloschurchapp-resources.sh\"\n";
 			showEnvVarsInLog = 0;
 		};
+		84E19E444A56C704431362B6 /* [CP] Embed Pods Frameworks */ = {
+			isa = PBXShellScriptBuildPhase;
+			buildActionMask = 2147483647;
+			files = (
+			);
+			inputPaths = (
+				"${PODS_ROOT}/Target Support Files/Pods-apolloschurchapp/Pods-apolloschurchapp-frameworks.sh",
+				"${PODS_XCFRAMEWORKS_BUILD_DIR}/OpenSSL/OpenSSL.framework/OpenSSL",
+			);
+			name = "[CP] Embed Pods Frameworks";
+			outputPaths = (
+				"${TARGET_BUILD_DIR}/${FRAMEWORKS_FOLDER_PATH}/OpenSSL.framework",
+			);
+			runOnlyForDeploymentPostprocessing = 0;
+			shellPath = /bin/sh;
+			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-apolloschurchapp/Pods-apolloschurchapp-frameworks.sh\"\n";
+			showEnvVarsInLog = 0;
+		};
 		892ED59C47CEB9B13B75EC71 /* [CP] Copy Pods Resources */ = {
 			isa = PBXShellScriptBuildPhase;
 			buildActionMask = 2147483647;
@@ -612,24 +630,6 @@
 			shellScript = "diff \"${PODS_PODFILE_DIR_PATH}/Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null\nif [ $? != 0 ] ; then\n    # print error to STDERR\n    echo \"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\" >&2\n    exit 1\nfi\n# This output is used by Xcode 'outputs' to avoid re-running this script phase.\necho \"SUCCESS\" > \"${SCRIPT_OUTPUT_FILE_0}\"\n";
 			showEnvVarsInLog = 0;
 		};
-		C7A5ADB714711CE3B4CC0EAA /* [CP] Embed Pods Frameworks */ = {
-			isa = PBXShellScriptBuildPhase;
-			buildActionMask = 2147483647;
-			files = (
-			);
-			inputPaths = (
-				"${PODS_ROOT}/Target Support Files/Pods-apolloschurchapp-apolloschurchappTests/Pods-apolloschurchapp-apolloschurchappTests-frameworks.sh",
-				"${PODS_ROOT}/google-cast-sdk/GoogleCastSDK-ios-4.3.0/GoogleCast.framework",
-			);
-			name = "[CP] Embed Pods Frameworks";
-			outputPaths = (
-				"${TARGET_BUILD_DIR}/${FRAMEWORKS_FOLDER_PATH}/GoogleCast.framework",
-			);
-			runOnlyForDeploymentPostprocessing = 0;
-			shellPath = /bin/sh;
-			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-apolloschurchapp-apolloschurchappTests/Pods-apolloschurchapp-apolloschurchappTests-frameworks.sh\"\n";
-			showEnvVarsInLog = 0;
-		};
 		DEEF24CE4F76789E5E8C369D /* [CP] Check Pods Manifest.lock */ = {
 			isa = PBXShellScriptBuildPhase;
 			buildActionMask = 2147483647;
@@ -767,7 +767,7 @@
 				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
 				CLANG_ENABLE_MODULES = YES;
 				CODE_SIGN_ENTITLEMENTS = apolloschurchapp/apolloschurchapp.entitlements;
-				CODE_SIGN_IDENTITY = "Apple Development: Apollos Apps (58685TNK9H)";
+				CODE_SIGN_IDENTITY = "iPhone Developer";
 				CODE_SIGN_STYLE = Manual;
 				CURRENT_PROJECT_VERSION = 507;
 				DEAD_CODE_STRIPPING = YES;
diff --git a/apolloschurchapp/ios/apolloschurchapp.xcworkspace/xcshareddata/xcschemes/apolloschurchapp-tvOS.xcscheme b/apolloschurchapp/ios/apolloschurchapp.xcworkspace/xcshareddata/xcschemes/apolloschurchapp-tvOS.xcscheme
new file mode 100644
index 00000000..a24d4f12
--- /dev/null
+++ b/apolloschurchapp/ios/apolloschurchapp.xcworkspace/xcshareddata/xcschemes/apolloschurchapp-tvOS.xcscheme
@@ -0,0 +1,88 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<Scheme
+   LastUpgradeVersion = "1250"
+   version = "1.3">
+   <BuildAction
+      parallelizeBuildables = "YES"
+      buildImplicitDependencies = "YES">
+      <BuildActionEntries>
+         <BuildActionEntry
+            buildForTesting = "YES"
+            buildForRunning = "YES"
+            buildForProfiling = "YES"
+            buildForArchiving = "YES"
+            buildForAnalyzing = "YES">
+            <BuildableReference
+               BuildableIdentifier = "primary"
+               BlueprintIdentifier = "2D02E47A1E0B4A5D006451C7"
+               BuildableName = "apolloschurchapp-tvOS.app"
+               BlueprintName = "apolloschurchapp-tvOS"
+               ReferencedContainer = "container:apolloschurchapp.xcodeproj">
+            </BuildableReference>
+         </BuildActionEntry>
+      </BuildActionEntries>
+   </BuildAction>
+   <TestAction
+      buildConfiguration = "Debug"
+      selectedDebuggerIdentifier = "Xcode.DebuggerFoundation.Debugger.LLDB"
+      selectedLauncherIdentifier = "Xcode.DebuggerFoundation.Launcher.LLDB"
+      shouldUseLaunchSchemeArgsEnv = "YES">
+      <Testables>
+         <TestableReference
+            skipped = "NO">
+            <BuildableReference
+               BuildableIdentifier = "primary"
+               BlueprintIdentifier = "2D02E48F1E0B4A5D006451C7"
+               BuildableName = "apolloschurchapp-tvOSTests.xctest"
+               BlueprintName = "apolloschurchapp-tvOSTests"
+               ReferencedContainer = "container:apolloschurchapp.xcodeproj">
+            </BuildableReference>
+         </TestableReference>
+      </Testables>
+   </TestAction>
+   <LaunchAction
+      buildConfiguration = "Debug"
+      selectedDebuggerIdentifier = "Xcode.DebuggerFoundation.Debugger.LLDB"
+      selectedLauncherIdentifier = "Xcode.DebuggerFoundation.Launcher.LLDB"
+      launchStyle = "0"
+      useCustomWorkingDirectory = "NO"
+      ignoresPersistentStateOnLaunch = "NO"
+      debugDocumentVersioning = "YES"
+      debugServiceExtension = "internal"
+      allowLocationSimulation = "YES">
+      <BuildableProductRunnable
+         runnableDebuggingMode = "0">
+         <BuildableReference
+            BuildableIdentifier = "primary"
+            BlueprintIdentifier = "2D02E47A1E0B4A5D006451C7"
+            BuildableName = "apolloschurchapp-tvOS.app"
+            BlueprintName = "apolloschurchapp-tvOS"
+            ReferencedContainer = "container:apolloschurchapp.xcodeproj">
+         </BuildableReference>
+      </BuildableProductRunnable>
+   </LaunchAction>
+   <ProfileAction
+      buildConfiguration = "Release"
+      shouldUseLaunchSchemeArgsEnv = "YES"
+      savedToolIdentifier = ""
+      useCustomWorkingDirectory = "NO"
+      debugDocumentVersioning = "YES">
+      <BuildableProductRunnable
+         runnableDebuggingMode = "0">
+         <BuildableReference
+            BuildableIdentifier = "primary"
+            BlueprintIdentifier = "2D02E47A1E0B4A5D006451C7"
+            BuildableName = "apolloschurchapp-tvOS.app"
+            BlueprintName = "apolloschurchapp-tvOS"
+            ReferencedContainer = "container:apolloschurchapp.xcodeproj">
+         </BuildableReference>
+      </BuildableProductRunnable>
+   </ProfileAction>
+   <AnalyzeAction
+      buildConfiguration = "Debug">
+   </AnalyzeAction>
+   <ArchiveAction
+      buildConfiguration = "Release"
+      revealArchiveInOrganizer = "YES">
+   </ArchiveAction>
+</Scheme>
diff --git a/apolloschurchapp/ios/apolloschurchapp.xcworkspace/xcshareddata/xcschemes/apolloschurchappprod.xcscheme b/apolloschurchapp/ios/apolloschurchapp.xcworkspace/xcshareddata/xcschemes/apolloschurchappprod.xcscheme
deleted file mode 100644
index 572c21d6..00000000
--- a/apolloschurchapp/ios/apolloschurchapp.xcworkspace/xcshareddata/xcschemes/apolloschurchappprod.xcscheme
+++ /dev/null
@@ -1,134 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<Scheme
-   LastUpgradeVersion = "1170"
-   version = "1.3">
-   <BuildAction
-      parallelizeBuildables = "NO"
-      buildImplicitDependencies = "YES">
-      <PreActions>
-         <ExecutionAction
-            ActionType = "Xcode.IDEStandardExecutionActionsCore.ExecutionActionType.ShellScriptAction">
-            <ActionContent
-               title = "Run Script"
-               scriptText = "echo &quot;.env.production&quot; &gt; /tmp/envfile&#10;">
-            </ActionContent>
-         </ExecutionAction>
-      </PreActions>
-      <BuildActionEntries>
-         <BuildActionEntry
-            buildForTesting = "YES"
-            buildForRunning = "YES"
-            buildForProfiling = "YES"
-            buildForArchiving = "YES"
-            buildForAnalyzing = "YES">
-            <BuildableReference
-               BuildableIdentifier = "primary"
-               BlueprintIdentifier = "83CBBA2D1A601D0E00E9B192"
-               BuildableName = "libReact.a"
-               BlueprintName = "React"
-               ReferencedContainer = "container:../node_modules/react-native/React/React.xcodeproj">
-            </BuildableReference>
-         </BuildActionEntry>
-         <BuildActionEntry
-            buildForTesting = "YES"
-            buildForRunning = "YES"
-            buildForProfiling = "YES"
-            buildForArchiving = "YES"
-            buildForAnalyzing = "YES">
-            <BuildableReference
-               BuildableIdentifier = "primary"
-               BlueprintIdentifier = "13B07F861A680F5B00A75B9A"
-               BuildableName = "apolloschurchapp.app"
-               BlueprintName = "apolloschurchapp"
-               ReferencedContainer = "container:apolloschurchapp.xcodeproj">
-            </BuildableReference>
-         </BuildActionEntry>
-         <BuildActionEntry
-            buildForTesting = "YES"
-            buildForRunning = "YES"
-            buildForProfiling = "NO"
-            buildForArchiving = "NO"
-            buildForAnalyzing = "YES">
-            <BuildableReference
-               BuildableIdentifier = "primary"
-               BlueprintIdentifier = "00E356ED1AD99517003FC87E"
-               BuildableName = "apolloschurchappTests.xctest"
-               BlueprintName = "apolloschurchappTests"
-               ReferencedContainer = "container:apolloschurchapp.xcodeproj">
-            </BuildableReference>
-         </BuildActionEntry>
-      </BuildActionEntries>
-   </BuildAction>
-   <TestAction
-      buildConfiguration = "Debug"
-      selectedDebuggerIdentifier = "Xcode.DebuggerFoundation.Debugger.LLDB"
-      selectedLauncherIdentifier = "Xcode.DebuggerFoundation.Launcher.LLDB"
-      shouldUseLaunchSchemeArgsEnv = "YES">
-      <MacroExpansion>
-         <BuildableReference
-            BuildableIdentifier = "primary"
-            BlueprintIdentifier = "13B07F861A680F5B00A75B9A"
-            BuildableName = "apolloschurchapp.app"
-            BlueprintName = "apolloschurchapp"
-            ReferencedContainer = "container:apolloschurchapp.xcodeproj">
-         </BuildableReference>
-      </MacroExpansion>
-      <Testables>
-         <TestableReference
-            skipped = "NO">
-            <BuildableReference
-               BuildableIdentifier = "primary"
-               BlueprintIdentifier = "00E356ED1AD99517003FC87E"
-               BuildableName = "apolloschurchappTests.xctest"
-               BlueprintName = "apolloschurchappTests"
-               ReferencedContainer = "container:apolloschurchapp.xcodeproj">
-            </BuildableReference>
-         </TestableReference>
-      </Testables>
-   </TestAction>
-   <LaunchAction
-      buildConfiguration = "Release"
-      selectedDebuggerIdentifier = "Xcode.DebuggerFoundation.Debugger.LLDB"
-      selectedLauncherIdentifier = "Xcode.DebuggerFoundation.Launcher.LLDB"
-      launchStyle = "0"
-      useCustomWorkingDirectory = "NO"
-      ignoresPersistentStateOnLaunch = "NO"
-      debugDocumentVersioning = "YES"
-      debugServiceExtension = "internal"
-      allowLocationSimulation = "YES">
-      <BuildableProductRunnable
-         runnableDebuggingMode = "0">
-         <BuildableReference
-            BuildableIdentifier = "primary"
-            BlueprintIdentifier = "13B07F861A680F5B00A75B9A"
-            BuildableName = "apolloschurchapp.app"
-            BlueprintName = "apolloschurchapp"
-            ReferencedContainer = "container:apolloschurchapp.xcodeproj">
-         </BuildableReference>
-      </BuildableProductRunnable>
-   </LaunchAction>
-   <ProfileAction
-      buildConfiguration = "Release"
-      shouldUseLaunchSchemeArgsEnv = "YES"
-      savedToolIdentifier = ""
-      useCustomWorkingDirectory = "NO"
-      debugDocumentVersioning = "YES">
-      <BuildableProductRunnable
-         runnableDebuggingMode = "0">
-         <BuildableReference
-            BuildableIdentifier = "primary"
-            BlueprintIdentifier = "13B07F861A680F5B00A75B9A"
-            BuildableName = "apolloschurchapp.app"
-            BlueprintName = "apolloschurchapp"
-            ReferencedContainer = "container:apolloschurchapp.xcodeproj">
-         </BuildableReference>
-      </BuildableProductRunnable>
-   </ProfileAction>
-   <AnalyzeAction
-      buildConfiguration = "Debug">
-   </AnalyzeAction>
-   <ArchiveAction
-      buildConfiguration = "Release"
-      revealArchiveInOrganizer = "YES">
-   </ArchiveAction>
-</Scheme>
diff --git a/apolloschurchapp/ios/apolloschurchapp/AppDelegate.m b/apolloschurchapp/ios/apolloschurchapp/AppDelegate.m
index f246ea29..9267aa24 100644
--- a/apolloschurchapp/ios/apolloschurchapp/AppDelegate.m
+++ b/apolloschurchapp/ios/apolloschurchapp/AppDelegate.m
@@ -12,7 +12,6 @@
 #import <React/RCTBundleURLProvider.h>
 #import <React/RCTRootView.h>
 #import <React/RCTLinkingManager.h>
-#import <GoogleCast/GoogleCast.h>
 #import "RNSplashScreen.h"
 
 #ifdef FB_SONARKIT_ENABLED
@@ -64,12 +63,6 @@ static void InitializeFlipper(UIApplication *application) {
                                                    moduleName:@"apolloschurchapp"
                                             initialProperties:nil];
 
-  // Initialize Google Cast
-  GCKDiscoveryCriteria *criteria = [[GCKDiscoveryCriteria alloc] initWithApplicationID:kGCKDefaultMediaReceiverApplicationID];
-  GCKCastOptions* options = [[GCKCastOptions alloc] initWithDiscoveryCriteria:criteria];
-  options.physicalVolumeButtonsWillControlDeviceVolume = YES;
-  [GCKCastContext setSharedInstanceWithOptions:options];
-
   rootView.backgroundColor = [[UIColor alloc] initWithRed:1.0f green:1.0f blue:1.0f alpha:1];
 
   self.window = [[UIWindow alloc] initWithFrame:[UIScreen mainScreen].bounds];
diff --git a/apolloschurchapp/ios/apolloschurchapp/Info.plist b/apolloschurchapp/ios/apolloschurchapp/Info.plist
index cc826b79..41c62da6 100644
--- a/apolloschurchapp/ios/apolloschurchapp/Info.plist
+++ b/apolloschurchapp/ios/apolloschurchapp/Info.plist
@@ -57,18 +57,12 @@
 			</dict>
 		</dict>
 	</dict>
-	<key>NSBluetoothAlwaysUsageDescription</key>
-	<string>$(PRODUCT_NAME) would like access to bluetooth (for playing audio)</string>
-	<key>NSBluetoothPeripheralUsageDescription</key>
-	<string>$(PRODUCT_NAME) would like access to bluetooth (for playing audio)</string>
 	<key>NSLocationAlwaysUsageDescription</key>
 	<string>$(PRODUCT_NAME) would like to use your location for determining your closest campus</string>
 	<key>NSLocationAlwaysAndWhenInUseUsageDescription</key>
 	<string>$(PRODUCT_NAME) would like to use your location for determining your closest campus</string>
 	<key>NSLocationWhenInUseUsageDescription</key>
 	<string>$(PRODUCT_NAME) would like to use your location for determining your closest campus</string>
-	<key>NSMicrophoneUsageDescription</key>
-	<string>$(PRODUCT_NAME) would like to access your microphone (for videos)</string>
 	<key>NSPhotoLibraryUsageDescription</key>
 	<string>$(PRODUCT_NAME) would like to access your photos</string>
 	<key>UIAppFonts</key>
diff --git a/apolloschurchapp/ios/apolloschurchapp/apolloschurchapp.entitlements b/apolloschurchapp/ios/apolloschurchapp/apolloschurchapp.entitlements
index 6c79704c..676be42e 100644
--- a/apolloschurchapp/ios/apolloschurchapp/apolloschurchapp.entitlements
+++ b/apolloschurchapp/ios/apolloschurchapp/apolloschurchapp.entitlements
@@ -4,8 +4,6 @@
 <dict>
 	<key>aps-environment</key>
 	<string>development</string>
-	<key>com.apple.developer.networking.wifi-info</key>
-	<true/>
 	<key>com.apple.developer.associated-domains</key>
 	<array>
 		<string>applink:$(APP_DATA_URL)</string>
diff --git a/apolloschurchapp/package.json b/apolloschurchapp/package.json
index e4caeb5c..6905cd73 100644
--- a/apolloschurchapp/package.json
+++ b/apolloschurchapp/package.json
@@ -46,23 +46,23 @@
   "dependencies": {
     "@apollo/client": "3.3.0-rc.2",
     "@apollo/react-hooks": "^3.1.3",
-    "@apollosproject/config": "^2.13.0",
+    "@apollosproject/config": "^2.16.0",
     "@apollosproject/react-native-airplay-btn": "^0.2.0",
-    "@apollosproject/ui-analytics": "^2.13.0",
-    "@apollosproject/ui-auth": "^2.13.0",
-    "@apollosproject/ui-connected": "^2.13.0",
-    "@apollosproject/ui-fragments": "^2.13.0",
-    "@apollosproject/ui-htmlview": "^2.13.0",
-    "@apollosproject/ui-kit": "^2.13.0",
-    "@apollosproject/ui-mapview": "^2.13.0",
-    "@apollosproject/ui-media-player": "^2.13.0",
-    "@apollosproject/ui-notifications": "^2.13.0",
-    "@apollosproject/ui-onboarding": "^2.13.0",
-    "@apollosproject/ui-passes": "^2.13.0",
-    "@apollosproject/ui-prayer": "^2.13.0",
-    "@apollosproject/ui-scripture": "^2.13.0",
-    "@apollosproject/ui-storybook": "^2.13.0",
-    "@apollosproject/ui-test-utils": "^2.13.0",
+    "@apollosproject/ui-analytics": "^2.16.0",
+    "@apollosproject/ui-auth": "^2.16.0",
+    "@apollosproject/ui-connected": "^2.16.0",
+    "@apollosproject/ui-fragments": "^2.16.0",
+    "@apollosproject/ui-htmlview": "^2.16.0",
+    "@apollosproject/ui-kit": "^2.16.0",
+    "@apollosproject/ui-mapview": "^2.16.0",
+    "@apollosproject/ui-media-player": "^2.16.0",
+    "@apollosproject/ui-notifications": "^2.16.0",
+    "@apollosproject/ui-onboarding": "^2.16.0",
+    "@apollosproject/ui-passes": "^2.16.0",
+    "@apollosproject/ui-prayer": "^2.16.0",
+    "@apollosproject/ui-scripture": "^2.16.0",
+    "@apollosproject/ui-storybook": "^2.16.0",
+    "@apollosproject/ui-test-utils": "^2.16.0",
     "@gorhom/bottom-sheet": "3.4.1",
     "@metarouter/analytics-react-native": "^1.1.5",
     "@react-native-community/async-storage": "^1.5.1",
@@ -96,12 +96,10 @@
     "react-native-device-info": "^4.0.1",
     "react-native-geolocation-service": "^5.1.1",
     "react-native-gesture-handler": "^1.10.3",
-    "react-native-google-cast": "^3.3.0",
     "react-native-image-picker": "^3.1.4",
     "react-native-inappbrowser-reborn": "^3.0.0",
     "react-native-linear-gradient": "^2.5.4",
     "react-native-maps": "^0.27.1",
-    "react-native-modal-datetime-picker": "9.0.0",
     "react-native-music-control": "0.10.8",
     "react-native-onesignal": "3.9.1",
     "react-native-passkit-wallet": "^0.1.4",
@@ -109,19 +107,19 @@
     "react-native-reanimated": "^2.0.0",
     "react-native-safari-view": "2.1.0",
     "react-native-safe-area-context": "^3.0.7",
-    "react-native-screens": "^2.18.1",
+    "react-native-screens": "3.2.0",
     "react-native-splash-screen": "^3.2.0",
     "react-native-svg": "^9.4.0",
     "react-native-video": "^5.0.0",
     "react-native-video-controls": "2.2.3",
-    "react-native-webview": "^7.0.0",
+    "react-native-webview": "^11.0.0",
     "recompose": "^0.30.0",
     "rn-fetch-blob": "^0.10.16",
     "stream": "^0.0.2",
     "yup": "0.26.6"
   },
   "devDependencies": {
-    "@apollosproject/eslint-config": "^2.13.0",
+    "@apollosproject/eslint-config": "^2.16.0",
     "@babel/core": "^7.8.4",
     "@babel/runtime": "^7.8.4",
     "@bam.tech/react-native-make": "^3.0.0",
diff --git a/apolloschurchapp/scripts/init.sh b/apolloschurchapp/scripts/init.sh
index 6e73f7c9..5a8c884a 100755
--- a/apolloschurchapp/scripts/init.sh
+++ b/apolloschurchapp/scripts/init.sh
@@ -3,5 +3,34 @@ if test -f .env; then
 	echo ".env file already exists!"
 	exit 1
 fi
+
+echo "You will need the following before beginning:
+Google Maps API Key
+
+Are you ready to proceed? [y/n]: "
+read -r ANSWER
+if $ANSWER != "y"; then
+	exit 1
+fi
+
+# config variables
+echo "Google Maps API Key: "
+read -r GOOGLE
+
 echo "APP_DATA_URL=http://localhost:4000
-GOOGLE_MAPS_API_KEY=" >.env
+GOOGLE_MAPS_API_KEY=$GOOGLE" >.env
+
+# remove template encrypted files
+rm .env.shared.enc
+rm android/key.json.enc
+rm android/app/apollos.keystore.enc
+rm ios/apollos.p8.enc
+
+# app name
+echo "App name: "
+read -r APP
+CLEAN_APP=$(echo "$APP" | tr -d '[:space:]')
+npx react-native-rename "$CLEAN_APP"
+
+sed -i "" -E "s/Apollos Church/$APP/g" apolloschurchapp/ios/Info.plist
+sed -i "" -E "s/Apollos Church/$APP/g" apolloschurchapp/android/app/src/main/res/values/strings.xml
diff --git a/apolloschurchapp/src/Providers.js b/apolloschurchapp/src/Providers.js
index 38982089..bd1f2b26 100644
--- a/apolloschurchapp/src/Providers.js
+++ b/apolloschurchapp/src/Providers.js
@@ -18,7 +18,19 @@ const AppProviders = (props) => (
   <ClientProvider {...props}>
     <NotificationsProvider
       oneSignalKey={ApollosConfig.ONE_SIGNAL_KEY}
+      // TODO deprecated prop
       navigate={NavigationService.navigate}
+      handleExternalLink={(url) => {
+        const path = url.split('app-link/')[1];
+        const [route, location] = path.split('/');
+        if (route === 'content')
+          NavigationService.navigate('ContentSingle', { itemId: location });
+        if (route === 'nav')
+          NavigationService.navigate(
+            // turns "home" into "Home"
+            location[0].toUpperCase() + location.substring(1)
+          );
+      }}
       actionMap={{
         // accept a follow request when someone taps "accept" in a follow request push notification
         acceptFollowRequest: ({ requestPersonId }) =>
diff --git a/apolloschurchapp/src/index.js b/apolloschurchapp/src/index.js
index 14c77d7e..65f157f3 100644
--- a/apolloschurchapp/src/index.js
+++ b/apolloschurchapp/src/index.js
@@ -1,9 +1,13 @@
 /* eslint-disable react/jsx-handler-names */
 
-import hoistNonReactStatic from 'hoist-non-react-statics';
 import React from 'react';
-import { StatusBar, Platform } from 'react-native';
-import { NavigationContainer } from '@react-navigation/native';
+import { StatusBar } from 'react-native';
+import {
+  NavigationContainer,
+  useNavigation,
+  DarkTheme,
+  DefaultTheme,
+} from '@react-navigation/native';
 import { createNativeStackNavigator } from 'react-native-screens/native-stack';
 import SplashScreen from 'react-native-splash-screen';
 import 'react-native-gesture-handler'; // required for react-navigation
@@ -20,7 +24,7 @@ import Auth, { ProtectedRoute } from '@apollosproject/ui-auth';
 
 import Providers from './Providers';
 import ContentSingle from './content-single';
-import NodeSingle from './node-single';
+import ContentFeed from './content-feed';
 import Event from './event';
 import Tabs from './tabs';
 import LandingScreen from './ui/LandingScreen';
@@ -34,48 +38,52 @@ const AppStatusBar = withTheme(({ theme }) => ({
   backgroundColor: theme.colors.background.paper,
 }))(StatusBar);
 
-const ProtectedRouteWithSplashScreen = (props) => {
+const ProtectedRouteWithSplashScreen = () => {
   const handleOnRouteChange = () => SplashScreen.hide();
-
-  return <ProtectedRoute {...props} onRouteChange={handleOnRouteChange} />;
+  const navigation = useNavigation();
+  return (
+    <ProtectedRoute
+      onRouteChange={handleOnRouteChange}
+      navigation={navigation}
+    />
+  );
 };
 
-// Hack to avoid needing to pass emailRequired through the navigator.navigate
-const EnhancedAuth = (props) => <Auth {...props} emailRequired />;
-// 😑
-hoistNonReactStatic(EnhancedAuth, Auth);
-
-const { Navigator, Screen } = createNativeStackNavigator();
-const ThemedNavigator = withTheme(({ theme, ...props }) => ({
-  ...props,
-  screenOptions: {
-    headerTintColor: theme.colors.action.secondary,
-    headerTitleStyle: {
-      color: theme.colors.text.primary,
-    },
-    headerStyle: {
-      backgroundColor: theme.colors.background.paper,
-      ...Platform.select(theme.shadows.default),
+const ThemedNavigationContainer = withTheme(({ theme, ...props }) => ({
+  theme: {
+    ...(theme.type === 'dark' ? DarkTheme : DefaultTheme),
+    dark: theme.type === 'dark',
+    colors: {
+      ...(theme.type === 'dark' ? DarkTheme.colors : DefaultTheme.colors),
+      primary: theme.colors.secondary,
+      background: theme.colors.background.screen,
+      card: theme.colors.background.paper,
+      text: theme.colors.text.primary,
     },
-    headerShown: false,
-    stackPresentation: 'modal',
   },
-}))(Navigator);
+  ...props,
+}))(({ containerRef, ...props }) => (
+  <NavigationContainer ref={containerRef} {...props} />
+));
 
-const App = (props) => (
+const { Navigator, Screen } = createNativeStackNavigator();
+
+const App = () => (
   <Providers>
     <BackgroundView>
       <AppStatusBar />
-      <NavigationContainer
-        ref={NavigationService.setTopLevelNavigator}
+      <ThemedNavigationContainer
+        containerRef={NavigationService.setTopLevelNavigator}
         onReady={NavigationService.setIsReady}
       >
-        <ThemedNavigator initialRouteName="ProtectedRoute" {...props}>
+        <Navigator
+          screenOptions={{ headerShown: false, stackPresentation: 'modal' }}
+        >
           <Screen
             name="ProtectedRoute"
             component={ProtectedRouteWithSplashScreen}
           />
-          <Screen name="Tabs" component={Tabs} options={{ title: 'Home' }} />
+          <Screen name="Tabs" component={Tabs} />
           <Screen
             name="ContentSingle"
             component={ContentSingle}
@@ -85,25 +93,24 @@ const App = (props) => (
             }}
           />
           <Screen
-            name="NodeSingle"
-            component={NodeSingle}
-            options={{ title: 'Node' }}
+            component={ContentFeed}
+            name="ContentFeed"
+            options={({ route }) => ({
+              title: route.params.itemTitle || 'Content Feed',
+              stackPresentation: 'push',
+            })}
           />
+
           <Screen name="Event" component={Event} options={{ title: 'Event' }} />
           <Screen
             name="Auth"
-            component={EnhancedAuth}
+            component={Auth}
             options={{
-              title: 'Login',
               gestureEnabled: false,
               stackPresentation: 'push',
             }}
           />
-          <Screen
-            name="Location"
-            component={Location}
-            options={{ headerShown: true }}
-          />
+          <Screen name="Location" component={Location} />
           <Screen
             name="Passes"
             component={Passes}
@@ -113,19 +120,14 @@ const App = (props) => (
             name="Onboarding"
             component={Onboarding}
             options={{
-              title: 'Onboarding',
               gestureEnabled: false,
               stackPresentation: 'push',
             }}
           />
-          <Screen
-            name="LandingScreen"
-            component={LandingScreen}
-            options={{ headerShown: false }}
-          />
+          <Screen name="LandingScreen" component={LandingScreen} />
           <Screen component={Search} name="Search" />
-        </ThemedNavigator>
-      </NavigationContainer>
+        </Navigator>
+      </ThemedNavigationContainer>
     </BackgroundView>
   </Providers>
 );
diff --git a/apolloschurchapp/src/node-single/NodeSingle.js b/apolloschurchapp/src/node-single/NodeSingle.js
deleted file mode 100644
index 230826bd..00000000
--- a/apolloschurchapp/src/node-single/NodeSingle.js
+++ /dev/null
@@ -1,49 +0,0 @@
-import React, { PureComponent } from 'react';
-import { get } from 'lodash';
-import PropTypes from 'prop-types';
-
-import { ThemeMixin } from '@apollosproject/ui-kit';
-
-import {
-  InteractWhenLoadedConnected,
-  NodeSingleConnected,
-} from '@apollosproject/ui-connected';
-
-import NavigationHeader from '../ui/NavigationHeader';
-
-class NodeSingle extends PureComponent {
-  static propTypes = {
-    route: PropTypes.shape({
-      params: PropTypes.shape({ nodeId: PropTypes.string }),
-    }),
-    navigation: PropTypes.shape({
-      push: PropTypes.func,
-    }),
-  };
-
-  get nodeId() {
-    return this.props.route?.params?.nodeId;
-  }
-
-  static navigationOptions = {
-    header: NavigationHeader,
-    headerTransparent: true,
-    headerMode: 'float',
-  };
-
-  render() {
-    return (
-      <ThemeMixin
-        mixin={{
-          type: get(this.props, 'theme.type'),
-          colors: get(this.props, 'theme.colors'),
-        }}
-      >
-        <InteractWhenLoadedConnected nodeId={this.nodeId} action={'COMPLETE'} />
-        <NodeSingleConnected nodeId={this.nodeId} />
-      </ThemeMixin>
-    );
-  }
-}
-
-export default NodeSingle;
diff --git a/apolloschurchapp/src/node-single/index.js b/apolloschurchapp/src/node-single/index.js
deleted file mode 100644
index e208efc0..00000000
--- a/apolloschurchapp/src/node-single/index.js
+++ /dev/null
@@ -1,37 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-import { createNativeStackNavigator } from 'react-native-screens/native-stack';
-
-import { ModalCloseButton, ModalBackButton } from '@apollosproject/ui-kit';
-import NodeSingle from './NodeSingle';
-
-const { Screen, Navigator } = createNativeStackNavigator();
-
-const NodeSingleNavigator = ({ route, navigation, ...props }) => (
-  <Navigator
-    {...props}
-    headerMode="float"
-    screenOptions={{
-      headerTranslucent: true,
-      headerStyle: { backgroundColor: 'transparent' },
-      headerHideShadow: true,
-      headerRight: ModalCloseButton,
-      headerLeft: ModalBackButton,
-      headerTitle: '',
-    }}
-  >
-    <Screen
-      name="NodeSingle"
-      component={NodeSingle}
-      initialParams={route.params}
-    />
-  </Navigator>
-);
-
-NodeSingleNavigator.propTypes = {
-  route: PropTypes.shape({
-    params: PropTypes.shape({}),
-  }),
-};
-
-export default NodeSingleNavigator;
diff --git a/apolloschurchapp/src/tabs/Tab.js b/apolloschurchapp/src/tabs/Tab.js
new file mode 100644
index 00000000..2c6933f5
--- /dev/null
+++ b/apolloschurchapp/src/tabs/Tab.js
@@ -0,0 +1,81 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import { gql, useQuery } from '@apollo/client';
+
+import { BackgroundView } from '@apollosproject/ui-kit';
+import {
+  FeaturesFeedConnected,
+  FEATURE_FEED_ACTION_MAP,
+  RockAuthedWebBrowser,
+} from '@apollosproject/ui-connected';
+
+import { createNativeStackNavigator } from 'react-native-screens/native-stack';
+import { useNavigation } from '@react-navigation/native';
+
+import ContentFeed from '../content-feed';
+
+function handleOnPress({ action, ...props }) {
+  if (FEATURE_FEED_ACTION_MAP[action]) {
+    FEATURE_FEED_ACTION_MAP[action]({ action, ...props });
+  }
+}
+
+export const createFeatureFeedTab = ({ tabName, screenOptions, feedName }) => {
+  const TabStack = createNativeStackNavigator();
+  const TabComponent = () => <Tab tab={feedName} />;
+  const TabNav = () => (
+    <TabStack.Navigator
+      screenOptions={{
+        headerHideShadow: true,
+        headerLargeTitle: true,
+        ...screenOptions,
+      }}
+    >
+      <TabStack.Screen name={tabName} component={TabComponent} />
+      <TabStack.Screen
+        component={ContentFeed}
+        name="ContentFeed"
+        options={({ route }) => ({
+          title: route?.params?.itemTitle || 'Content Feed',
+          stackPresentation: 'push',
+        })}
+      />
+    </TabStack.Navigator>
+  );
+  return TabNav;
+};
+
+const Tab = ({ tab }) => {
+  const navigation = useNavigation();
+  const { data } = useQuery(
+    gql`
+      query GetTabFeatures($tab: Tab!) {
+        tabFeedFeatures(tab: $tab) {
+          id
+        }
+      }
+    `,
+    { variables: { tab }, fetchPolicy: 'cache-and-network' }
+  );
+
+  return (
+    <RockAuthedWebBrowser>
+      {(openUrl) => (
+        <BackgroundView>
+          <FeaturesFeedConnected
+            openUrl={openUrl}
+            featureFeedId={data?.tabFeedFeatures?.id}
+            onPressActionItem={handleOnPress}
+            navigation={navigation}
+          />
+        </BackgroundView>
+      )}
+    </RockAuthedWebBrowser>
+  );
+};
+
+Tab.propTypes = {
+  tab: PropTypes.string.isRequired,
+};
+
+export default Tab;
diff --git a/apolloschurchapp/src/tabs/discover/Discover.js b/apolloschurchapp/src/tabs/discover/Discover.js
deleted file mode 100644
index 5153afba..00000000
--- a/apolloschurchapp/src/tabs/discover/Discover.js
+++ /dev/null
@@ -1,59 +0,0 @@
-import React from 'react';
-
-import { SafeAreaView } from 'react-native-safe-area-context';
-import gql from 'graphql-tag';
-import { Query } from '@apollo/client/react/components';
-import { useNavigation } from '@react-navigation/native';
-
-import { BackgroundView } from '@apollosproject/ui-kit';
-import {
-  FeaturesFeedConnected,
-  FEATURE_FEED_ACTION_MAP,
-  RockAuthedWebBrowser,
-} from '@apollosproject/ui-connected';
-
-function handleOnPress({ action, ...props }) {
-  if (FEATURE_FEED_ACTION_MAP[action]) {
-    FEATURE_FEED_ACTION_MAP[action]({ action, ...props });
-  }
-  // If you add additional actions, you can handle them here.
-  // Or add them to the FEATURE_FEED_ACTION_MAP, with the syntax
-  // { [ActionName]: function({ relatedNode, action, ...FeatureFeedConnectedProps}) }
-}
-
-// getHomeFeed uses the HOME_FEATURES in the config.yml
-// You can also hardcode an ID if you are confident it will never change
-// Or use some other strategy to get a FeatureFeed.id
-export const GET_DISCOVER_FEED = gql`
-  query getDiscoverFeatureFeed {
-    discoverFeedFeatures {
-      id
-    }
-  }
-`;
-
-const Discover = () => {
-  const navigation = useNavigation();
-  return (
-    <RockAuthedWebBrowser>
-      {(openUrl) => (
-        <BackgroundView>
-          <SafeAreaView edges={['right', 'top', 'left']}>
-            <Query query={GET_DISCOVER_FEED}>
-              {({ data }) => (
-                <FeaturesFeedConnected
-                  openUrl={openUrl}
-                  navigation={navigation}
-                  featureFeedId={data?.discoverFeedFeatures?.id}
-                  onPressActionItem={handleOnPress}
-                />
-              )}
-            </Query>
-          </SafeAreaView>
-        </BackgroundView>
-      )}
-    </RockAuthedWebBrowser>
-  );
-};
-
-export default Discover;
diff --git a/apolloschurchapp/src/tabs/discover/index.js b/apolloschurchapp/src/tabs/discover/index.js
deleted file mode 100644
index f612b1ad..00000000
--- a/apolloschurchapp/src/tabs/discover/index.js
+++ /dev/null
@@ -1,44 +0,0 @@
-import React from 'react';
-import { Platform } from 'react-native';
-import { createNativeStackNavigator } from 'react-native-screens/native-stack';
-import { withTheme } from '@apollosproject/ui-kit';
-
-import ContentFeed from '../../content-feed';
-
-import Discover from './Discover';
-
-const { Navigator, Screen } = createNativeStackNavigator();
-
-const DiscoverNavigator = (props) => (
-  <Navigator initialRouteName="Discover" {...props}>
-    <Screen
-      component={Discover}
-      name="Discover"
-      options={{ headerShown: false }}
-    />
-    <Screen
-      component={ContentFeed}
-      name="ContentFeed"
-      /** Function for React Navigation to set information in the header. */
-      options={({ route }) => ({
-        title: route.params.itemTitle || 'Content Feed',
-      })}
-    />
-  </Navigator>
-);
-const EnhancedDiscover = withTheme(({ theme, ...props }) => ({
-  ...props,
-  screenOptions: {
-    headerTintColor: theme.colors.action.secondary,
-    headerTitleStyle: {
-      color: theme.colors.text.primary,
-    },
-    headerStyle: {
-      backgroundColor: theme.colors.background.paper,
-      ...Platform.select(theme.shadows.default),
-    },
-    headerLargeTitle: true,
-  },
-}))(DiscoverNavigator);
-
-export default EnhancedDiscover;
diff --git a/apolloschurchapp/src/tabs/home/index.js b/apolloschurchapp/src/tabs/home/index.js
deleted file mode 100644
index 91f9323c..00000000
--- a/apolloschurchapp/src/tabs/home/index.js
+++ /dev/null
@@ -1,94 +0,0 @@
-import React, { useEffect } from 'react';
-import { Image } from 'react-native';
-import { SafeAreaView } from 'react-native-safe-area-context';
-import { Query } from '@apollo/client/react/components';
-import { gql, useApolloClient } from '@apollo/client';
-import { useNavigation } from '@react-navigation/native';
-
-import {
-  styled,
-  BackgroundView,
-  NavigationService,
-} from '@apollosproject/ui-kit';
-import {
-  FeaturesFeedConnected,
-  FEATURE_FEED_ACTION_MAP,
-  RockAuthedWebBrowser,
-} from '@apollosproject/ui-connected';
-
-import { checkOnboardingStatusAndNavigate } from '@apollosproject/ui-onboarding';
-
-import { SearchButton } from '../../ui/Search';
-import { ONBOARDING_VERSION } from '../../ui/Onboarding';
-
-const LogoTitle = styled(({ theme }) => ({
-  height: theme.sizing.baseUnit,
-  margin: theme.sizing.baseUnit,
-  alignSelf: 'center',
-  resizeMode: 'contain',
-}))(Image);
-
-function handleOnPress({ action, ...props }) {
-  if (FEATURE_FEED_ACTION_MAP[action]) {
-    FEATURE_FEED_ACTION_MAP[action]({ action, ...props });
-  }
-  // If you add additional actions, you can handle them here.
-  // Or add them to the FEATURE_FEED_ACTION_MAP, with the syntax
-  // { [ActionName]: function({ relatedNode, action, ...FeatureFeedConnectedProps}) }
-}
-
-// getHomeFeed uses the HOME_FEATURES in the config.yml
-// You can also hardcode an ID if you are confident it will never change
-// Or use some other strategy to get a FeatureFeed.id
-export const GET_HOME_FEED = gql`
-  query getHomeFeatureFeed {
-    homeFeedFeatures {
-      id
-    }
-  }
-`;
-
-const Home = () => {
-  const navigation = useNavigation();
-  const client = useApolloClient();
-
-  useEffect(() => {
-    checkOnboardingStatusAndNavigate({
-      client,
-      navigation: NavigationService,
-      latestOnboardingVersion: ONBOARDING_VERSION,
-      navigateHome: false,
-    });
-  }, []);
-
-  return (
-    <RockAuthedWebBrowser>
-      {(openUrl) => (
-        <BackgroundView>
-          <SafeAreaView edges={['top', 'left', 'right']}>
-            <Query query={GET_HOME_FEED} fetchPolicy="cache-and-network">
-              {({ data }) => (
-                <FeaturesFeedConnected
-                  openUrl={openUrl}
-                  navigation={navigation}
-                  featureFeedId={data?.homeFeedFeatures?.id}
-                  onPressActionItem={handleOnPress}
-                  ListHeaderComponent={
-                    <>
-                      <LogoTitle source={require('./wordmark.png')} />
-                      <SearchButton
-                        onPress={() => navigation.navigate('Search')}
-                      />
-                    </>
-                  }
-                />
-              )}
-            </Query>
-          </SafeAreaView>
-        </BackgroundView>
-      )}
-    </RockAuthedWebBrowser>
-  );
-};
-
-export default Home;
diff --git a/apolloschurchapp/src/tabs/index.js b/apolloschurchapp/src/tabs/index.js
index 3e2a5b8c..574a6b3d 100644
--- a/apolloschurchapp/src/tabs/index.js
+++ b/apolloschurchapp/src/tabs/index.js
@@ -1,45 +1,102 @@
-import React from 'react';
-import { Platform } from 'react-native';
+import React, { useEffect } from 'react';
+import { Image } from 'react-native';
+import { useNavigation } from '@react-navigation/native';
 import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';
-import { withTheme } from '@apollosproject/ui-kit';
+import { styled, NavigationService } from '@apollosproject/ui-kit';
+import { useApolloClient } from '@apollo/client';
 
+import { checkOnboardingStatusAndNavigate } from '@apollosproject/ui-onboarding';
+import { SearchButton } from '../ui/Search';
+import { ONBOARDING_VERSION } from '../ui/Onboarding';
+import { createFeatureFeedTab } from './Tab';
 import Connect from './connect';
-import Home from './home';
-import Discover from './discover';
 import tabBarIcon from './tabBarIcon';
 
+const HeaderLogo = styled(({ theme }) => ({
+  height: theme.sizing.baseUnit,
+  resizeMode: 'contain',
+}))(Image);
+
+const HeaderCenter = () => <HeaderLogo source={require('./wordmark.png')} />;
+const HeaderRight = () => {
+  const navigation = useNavigation();
+  return <SearchButton onPress={() => navigation.navigate('Search')} />;
+};
+
+// we nest stack inside of tabs so we can use all the fancy native header features
+const HomeTab = createFeatureFeedTab({
+  screenOptions: {
+    headerHideShadow: true,
+    headerCenter: HeaderCenter,
+    headerRight: HeaderRight,
+    headerLargeTitle: false,
+  },
+  tabName: 'Home',
+  feedName: 'HOME',
+});
+
+const ReadTab = createFeatureFeedTab({
+  tabName: 'Read',
+  feedName: 'READ',
+});
+
+const WatchTab = createFeatureFeedTab({
+  tabName: 'Watch',
+  feedName: 'WATCH',
+});
+
+const PrayTab = createFeatureFeedTab({
+  tabName: 'Pray',
+  feedName: 'PRAY',
+});
+
 const { Navigator, Screen } = createBottomTabNavigator();
 
-const TabNavigator = (props) => (
-  <Navigator {...props} lazy>
-    <Screen
-      name="Home"
-      component={Home}
-      options={{ tabBarIcon: tabBarIcon('home') }}
-    />
-    <Screen
-      name="Discover"
-      component={Discover}
-      options={{ tabBarIcon: tabBarIcon('sections') }}
-    />
-    <Screen
-      name="Connect"
-      component={Connect}
-      options={{ tabBarIcon: tabBarIcon('profile') }}
-    />
-  </Navigator>
-);
-
-const ThemedTabNavigator = withTheme(({ theme }) => ({
-  tabBarOptions: {
-    activeTintColor: theme?.colors?.secondary,
-    inactiveTintColor: theme?.colors?.text?.tertiary,
-    style: {
-      backgroundColor: theme?.colors?.background?.paper,
-      borderTopColor: theme?.colors?.shadows.default,
-      ...Platform.select(theme?.shadows.default),
+const TabNavigator = () => {
+  const client = useApolloClient();
+  // this is only used by the tab loaded first
+  // if there is a new version of the onboarding flow,
+  // we'll navigate there first to show new screens
+  useEffect(
+    () => {
+      checkOnboardingStatusAndNavigate({
+        client,
+        navigation: NavigationService,
+        latestOnboardingVersion: ONBOARDING_VERSION,
+        navigateHome: false,
+      });
     },
-  },
-}))(TabNavigator);
+    [client]
+  );
+  return (
+    <Navigator lazy>
+      <Screen
+        name="Home"
+        component={HomeTab}
+        options={{ tabBarIcon: tabBarIcon('home') }}
+      />
+      <Screen
+        name="Read"
+        component={ReadTab}
+        options={{ tabBarIcon: tabBarIcon('sections') }}
+      />
+      <Screen
+        name="Watch"
+        component={WatchTab}
+        options={{ tabBarIcon: tabBarIcon('video') }}
+      />
+      <Screen
+        name="Pray"
+        component={PrayTab}
+        options={{ tabBarIcon: tabBarIcon('like') }}
+      />
+      <Screen
+        name="Connect"
+        component={Connect}
+        options={{ tabBarIcon: tabBarIcon('profile') }}
+      />
+    </Navigator>
+  );
+};
 
-export default ThemedTabNavigator;
+export default TabNavigator;
diff --git a/apolloschurchapp/src/tabs/home/wordmark.png b/apolloschurchapp/src/tabs/wordmark.png
similarity index 100%
rename from apolloschurchapp/src/tabs/home/wordmark.png
rename to apolloschurchapp/src/tabs/wordmark.png
diff --git a/apolloschurchapp/src/ui/Search/SearchButton.js b/apolloschurchapp/src/ui/Search/SearchButton.js
index 9dd742f6..a962601f 100644
--- a/apolloschurchapp/src/ui/Search/SearchButton.js
+++ b/apolloschurchapp/src/ui/Search/SearchButton.js
@@ -1,8 +1,7 @@
 import React from 'react';
-import { Animated } from 'react-native';
 import PropTypes from 'prop-types';
 
-import { styled, withTheme, Touchable, Icon } from '@apollosproject/ui-kit';
+import { withTheme, Touchable, Icon } from '@apollosproject/ui-kit';
 
 const SearchIcon = withTheme(({ theme: { colors, sizing: { baseUnit } } }) => ({
   name: 'search',
@@ -10,18 +9,10 @@ const SearchIcon = withTheme(({ theme: { colors, sizing: { baseUnit } } }) => ({
   fill: colors.primary,
 }))(Icon);
 
-const SearchButtonContainer = styled(({ theme: { sizing: { baseUnit } } }) => ({
-  position: 'absolute',
-  right: baseUnit,
-  top: baseUnit / 2,
-}))(Animated.View);
-
 const HomeSearchButton = ({ onPress }) => (
-  <SearchButtonContainer>
-    <Touchable onPress={onPress}>
-      <SearchIcon />
-    </Touchable>
-  </SearchButtonContainer>
+  <Touchable onPress={onPress}>
+    <SearchIcon />
+  </Touchable>
 );
 
 HomeSearchButton.propTypes = {
