diff --git a/apolloschurchapp/.babelrc b/apolloschurchapp/.babelrc
new file mode 100644
index 0000000..5df9466
--- /dev/null
+++ b/apolloschurchapp/.babelrc
@@ -0,0 +1,9 @@
+{
+  "presets": ["react-native", "module:react-native-dotenv"],
+  "plugins": [
+    ["@babel/plugin-proposal-decorators", {
+      "legacy": true
+    }],
+    ["@babel/plugin-proposal-export-default-from"]
+  ]
+}
\ No newline at end of file
diff --git a/apolloschurchapp/.env.production b/apolloschurchapp/.env.production
index 8f2e35f..d3b0b34 100644
--- a/apolloschurchapp/.env.production
+++ b/apolloschurchapp/.env.production
@@ -1,5 +1,2 @@
-APP_DATA_URL=https://apollos-church-api-herokuapp-com.global.ssl.fastly.net/
+APP_DATA_URL=https://apollos-church-api.now.sh
 ONE_SIGNAL_KEY=$ONE_SIGNAL_KEY
-GOOGLE_MAPS_API_KEY=$GOOGLE_MAPS_API_KEY
-STORYBOOK=$STORYBOOK
-SCHEMA_VERSION=$SCHEMA_VERSION
\ No newline at end of file
diff --git a/apolloschurchapp/.flowconfig b/apolloschurchapp/.flowconfig
index 1319ea1..3c0adb5 100644
--- a/apolloschurchapp/.flowconfig
+++ b/apolloschurchapp/.flowconfig
@@ -11,37 +11,24 @@
 ; Ignore duplicate module providers
 ; For RN Apps installed via npm, "Libraries" folder is inside
 ; "node_modules/react-native" but in the source repo it is in the root
-node_modules/react-native/Libraries/react-native/React.js
+.*/Libraries/react-native/React.js
 
 ; Ignore polyfills
-node_modules/react-native/Libraries/polyfills/.*
+.*/Libraries/polyfills/.*
 
-; These should not be required directly
-; require from fbjs/lib instead: require('fbjs/lib/warning')
-node_modules/warning/.*
-
-; Flow doesn't support platforms
-.*/Libraries/Utilities/HMRLoadingView.js
-
-[untyped]
-.*/node_modules/@react-native-community/cli/.*/.*
+; Ignore metro
+.*/node_modules/metro/.*
 
 [include]
 
 [libs]
 node_modules/react-native/Libraries/react-native/react-native-interface.js
 node_modules/react-native/flow/
+node_modules/react-native/flow-github/
 
 [options]
 emoji=true
 
-esproposal.optional_chaining=enable
-esproposal.nullish_coalescing=enable
-
-module.file_ext=.js
-module.file_ext=.json
-module.file_ext=.ios.js
-
 module.system=haste
 module.system.haste.use_name_reducers=true
 # get basename
@@ -54,46 +41,27 @@ module.system.haste.name_reducers='^\(.*\)\.android$' -> '\1'
 module.system.haste.name_reducers='^\(.*\)\.native$' -> '\1'
 module.system.haste.paths.blacklist=.*/__tests__/.*
 module.system.haste.paths.blacklist=.*/__mocks__/.*
-module.system.haste.paths.whitelist=<PROJECT_ROOT>/node_modules/react-native/Libraries/.*
-module.system.haste.paths.whitelist=<PROJECT_ROOT>/node_modules/react-native/RNTester/.*
-module.system.haste.paths.whitelist=<PROJECT_ROOT>/node_modules/react-native/IntegrationTests/.*
-module.system.haste.paths.blacklist=<PROJECT_ROOT>/node_modules/react-native/Libraries/react-native/react-native-implementation.js
 module.system.haste.paths.blacklist=<PROJECT_ROOT>/node_modules/react-native/Libraries/Animated/src/polyfills/.*
+module.system.haste.paths.whitelist=<PROJECT_ROOT>/node_modules/react-native/Libraries/.*
 
 munge_underscores=true
 
 module.name_mapper='^[./a-zA-Z0-9$_-]+\.\(bmp\|gif\|jpg\|jpeg\|png\|psd\|svg\|webp\|m4v\|mov\|mp4\|mpeg\|mpg\|webm\|aac\|aiff\|caf\|m4a\|mp3\|wav\|html\|pdf\)$' -> 'RelativeImageStub'
 
+module.file_ext=.js
+module.file_ext=.jsx
+module.file_ext=.json
+module.file_ext=.native.js
+
 suppress_type=$FlowIssue
 suppress_type=$FlowFixMe
 suppress_type=$FlowFixMeProps
 suppress_type=$FlowFixMeState
 
-suppress_comment=\\(.\\|\n\\)*\\$FlowFixMe\\($\\|[^(]\\|(\\(<VERSION>\\)? *\\(site=[a-z,_]*react_native\\(_ios\\)?_\\(oss\\|fb\\)[a-z,_]*\\)?)\\)
-suppress_comment=\\(.\\|\n\\)*\\$FlowIssue\\((\\(<VERSION>\\)? *\\(site=[a-z,_]*react_native\\(_ios\\)?_\\(oss\\|fb\\)[a-z,_]*\\)?)\\)?:? #[0-9]+
+suppress_comment=\\(.\\|\n\\)*\\$FlowFixMe\\($\\|[^(]\\|(\\(<VERSION>\\)? *\\(site=[a-z,_]*react_native[a-z,_]*\\)?)\\)
+suppress_comment=\\(.\\|\n\\)*\\$FlowIssue\\((\\(<VERSION>\\)? *\\(site=[a-z,_]*react_native[a-z,_]*\\)?)\\)?:? #[0-9]+
+suppress_comment=\\(.\\|\n\\)*\\$FlowFixedInNextDeploy
 suppress_comment=\\(.\\|\n\\)*\\$FlowExpectedError
 
-[lints]
-sketchy-null-number=warn
-sketchy-null-mixed=warn
-sketchy-number=warn
-untyped-type-import=warn
-nonstrict-import=warn
-deprecated-type=warn
-unsafe-getters-setters=warn
-inexact-spread=warn
-unnecessary-invariant=warn
-signature-verification-failure=warn
-deprecated-utility=error
-
-[strict]
-deprecated-type
-nonstrict-import
-sketchy-null
-unclear-type
-unsafe-getters-setters
-untyped-import
-untyped-type-import
-
 [version]
-^0.98.0
+^0.75.0
diff --git a/apolloschurchapp/.gitignore b/apolloschurchapp/.gitignore
index 1401c87..12c1116 100644
--- a/apolloschurchapp/.gitignore
+++ b/apolloschurchapp/.gitignore
@@ -45,6 +45,3 @@ project.xcworkspace
 .env.development.local
 .env.test.local
 .env.production.local
-
-# CocoaPods
-/ios/Pods/
\ No newline at end of file
diff --git a/apolloschurchapp/__mocks__/@react-native-community/async-storage/index.js b/apolloschurchapp/__mocks__/@react-native-community/async-storage/index.js
deleted file mode 100644
index a4bf3f4..0000000
--- a/apolloschurchapp/__mocks__/@react-native-community/async-storage/index.js
+++ /dev/null
@@ -1,23 +0,0 @@
-let cache = {};
-export default {
-  setItem: (key, value) =>
-    new Promise((resolve, reject) =>
-      typeof key !== 'string' || typeof value !== 'string'
-        ? reject(new Error('key and value must be string'))
-        : resolve((cache[key] = value))
-    ),
-  getItem: (key, value) =>
-    new Promise((resolve) =>
-      cache.hasOwnProperty(key) ? resolve(cache[key]) : resolve(null)
-    ),
-  removeItem: (key) =>
-    new Promise((resolve, reject) =>
-      cache.hasOwnProperty(key)
-        ? resolve(delete cache[key])
-        : reject('No such key!')
-    ),
-  clear: (key) => new Promise((resolve, reject) => resolve((cache = {}))),
-
-  getAllKeys: (key) =>
-    new Promise((resolve, reject) => resolve(Object.keys(cache))),
-};
diff --git a/apolloschurchapp/__mocks__/@react-native-community/geolocation/index.js b/apolloschurchapp/__mocks__/@react-native-community/geolocation/index.js
deleted file mode 100644
index 0e77776..0000000
--- a/apolloschurchapp/__mocks__/@react-native-community/geolocation/index.js
+++ /dev/null
@@ -1,3 +0,0 @@
-export default {
-  getCurrentPosition: async () => null,
-};
diff --git a/apolloschurchapp/android/app/BUCK b/apolloschurchapp/android/app/BUCK
index de2c2e2..5392fca 100644
--- a/apolloschurchapp/android/app/BUCK
+++ b/apolloschurchapp/android/app/BUCK
@@ -8,13 +8,23 @@
 # - `buck install -r android/app` - compile, install and run application
 #
 
-load(":build_defs.bzl", "create_aar_targets", "create_jar_targets")
-
 lib_deps = []
 
-create_aar_targets(glob(["libs/*.aar"]))
+for jarfile in glob(['libs/*.jar']):
+  name = 'jars__' + jarfile[jarfile.rindex('/') + 1: jarfile.rindex('.jar')]
+  lib_deps.append(':' + name)
+  prebuilt_jar(
+    name = name,
+    binary_jar = jarfile,
+  )
 
-create_jar_targets(glob(["libs/*.jar"]))
+for aarfile in glob(['libs/*.aar']):
+  name = 'aars__' + aarfile[aarfile.rindex('/') + 1: aarfile.rindex('.aar')]
+  lib_deps.append(':' + name)
+  android_prebuilt_aar(
+    name = name,
+    aar = aarfile,
+  )
 
 android_library(
     name = "all-libs",
diff --git a/apolloschurchapp/android/app/build.gradle b/apolloschurchapp/android/app/build.gradle
index 77d8bc8..bb05abc 100644
--- a/apolloschurchapp/android/app/build.gradle
+++ b/apolloschurchapp/android/app/build.gradle
@@ -10,12 +10,6 @@ buildscript {
 apply plugin: 'com.onesignal.androidsdk.onesignal-gradle-plugin'
 apply plugin: "com.android.application"
 
-project.ext.envConfigFiles = [
-    release: ".env.production",
-]
-
-apply from: project(':react-native-config').projectDir.getPath() + "/dotenv.gradle"
-
 import com.android.build.OutputFile
 
 /**
@@ -59,9 +53,6 @@ import com.android.build.OutputFile
  *   // the root of your project, i.e. where "package.json" lives
  *   root: "../../",
  *
- *   // https://facebook.github.io/react-native/docs/performance#enable-the-ram-format
- *   bundleCommand: "ram-bundle",
- *
  *   // where to put the JS bundle asset in debug mode
  *   jsBundleDirDebug: "$buildDir/intermediates/assets/debug",
  *
@@ -92,8 +83,7 @@ import com.android.build.OutputFile
  */
 
 project.ext.react = [
-    entryFile: "index.js",
-    enableHermes: false,  // clean and rebuild if changing
+    entryFile: "index.js"
 ]
 
 apply from: "../../node_modules/react-native/react.gradle"
@@ -113,52 +103,26 @@ def enableSeparateBuildPerCPUArchitecture = false
  */
 def enableProguardInReleaseBuilds = false
 
-/**
- * The preferred build flavor of JavaScriptCore.
- *
- * For example, to use the international variant, you can use:
- * `def jscFlavor = 'org.webkit:android-jsc-intl:+'`
- *
- * The international variant includes ICU i18n library and necessary data
- * allowing to use e.g. `Date.toLocaleString` and `String.localeCompare` that
- * give correct results when using with locales other than en-US.  Note that
- * this variant is about 6MiB larger per architecture than default.
- */
-def jscFlavor = 'org.webkit:android-jsc:+'
-/**
- * Whether to enable the Hermes VM.
- *
- * This should be set on project.ext.react and mirrored here.  If it is not set
- * on project.ext.react, JavaScript will not be compiled to Hermes Bytecode
- * and the benefits of using Hermes will therefore be sharply reduced.
- */
-def enableHermes = project.ext.react.get("enableHermes", false);
-
 android {
     compileSdkVersion rootProject.ext.compileSdkVersion
-
-    compileOptions {
-        sourceCompatibility JavaVersion.VERSION_1_8
-        targetCompatibility JavaVersion.VERSION_1_8
-    }
+    buildToolsVersion rootProject.ext.buildToolsVersion
 
     defaultConfig {
         applicationId "com.apolloschurch.app"
         minSdkVersion rootProject.ext.minSdkVersion
         targetSdkVersion rootProject.ext.targetSdkVersion
-        versionCode 23
-        versionName "1.2.0"
+        versionCode 4
+        versionName "0.6.0"
         ndk {
-            abiFilters "armeabi-v7a", "x86", "arm64-v8a", "x86_64"
+            abiFilters "armeabi-v7a", "x86"
         }
-        resValue "string", "build_config_package", "com.apolloschurchapp"
     }
     splits {
         abi {
             reset()
             enable enableSeparateBuildPerCPUArchitecture
             universalApk false  // If true, also generate a universal APK
-            include "armeabi-v7a", "x86", "arm64-v8a", "x86_64"
+            include "armeabi-v7a", "x86"
         }
     }
     buildTypes {
@@ -172,7 +136,7 @@ android {
         variant.outputs.each { output ->
             // For each separate APK per architecture, set a unique version code as described here:
             // http://tools.android.com/tech-docs/new-build-system/user-guide/apk-splits
-            def versionCodes = ["armeabi-v7a":1, "x86":2, "arm64-v8a": 3, "x86_64": 4]
+            def versionCodes = ["armeabi-v7a":1, "x86":2]
             def abi = output.getFilter(OutputFile.ABI)
             if (abi != null) {  // null for the universal-debug, universal-release variants
                 output.versionCodeOverride =
@@ -180,27 +144,21 @@ android {
             }
         }
     }
-    packagingOptions {
-        pickFirst '**/armeabi-v7a/libc++_shared.so'
-        pickFirst '**/x86/libc++_shared.so'
-        pickFirst '**/arm64-v8a/libc++_shared.so'
-        pickFirst '**/x86_64/libc++_shared.so'
-        pickFirst '**/x86/libjsc.so'
-        pickFirst '**/armeabi-v7a/libjsc.so'
-    }
 }
 
 dependencies {
-    implementation fileTree(dir: "libs", include: ["*.jar"])
-    implementation "com.facebook.react:react-native:+"  // From node_modules
-
-    if (enableHermes) {
-      def hermesPath = "../../node_modules/hermesvm/android/";
-      debugImplementation files(hermesPath + "hermes-debug.aar")
-      releaseImplementation files(hermesPath + "hermes-release.aar")
-    } else {
-      implementation jscFlavor
-    }
+    compile project(':react-native-onesignal')
+    compile project(':react-native-image-picker')
+    compile project(':react-native-music-control')
+    compile project(':react-native-device-info')
+    compile project(':react-native-video')
+    compile project(':react-native-svg')
+    compile project(':react-native-splash-screen')
+    compile project(':react-native-linear-gradient')
+    compile project(':react-native-custom-tabs')
+    compile fileTree(dir: "libs", include: ["*.jar"])
+    compile "com.android.support:appcompat-v7:${rootProject.ext.supportLibVersion}"
+    compile "com.facebook.react:react-native:+"  // From node_modules
 }
 
 // Run this once to be able to run the application with BUCK
@@ -209,6 +167,3 @@ task copyDownloadableDepsToLibs(type: Copy) {
     from configurations.compile
     into 'libs'
 }
-
-
-apply from: file("../../node_modules/@react-native-community/cli-platform-android/native_modules.gradle"); applyNativeModulesAppBuildGradle(project)
diff --git a/apolloschurchapp/android/app/build_defs.bzl b/apolloschurchapp/android/app/build_defs.bzl
deleted file mode 100644
index fff270f..0000000
--- a/apolloschurchapp/android/app/build_defs.bzl
+++ /dev/null
@@ -1,19 +0,0 @@
-"""Helper definitions to glob .aar and .jar targets"""
-
-def create_aar_targets(aarfiles):
-    for aarfile in aarfiles:
-        name = "aars__" + aarfile[aarfile.rindex("/") + 1:aarfile.rindex(".aar")]
-        lib_deps.append(":" + name)
-        android_prebuilt_aar(
-            name = name,
-            aar = aarfile,
-        )
-
-def create_jar_targets(jarfiles):
-    for jarfile in jarfiles:
-        name = "jars__" + jarfile[jarfile.rindex("/") + 1:jarfile.rindex(".jar")]
-        lib_deps.append(":" + name)
-        prebuilt_jar(
-            name = name,
-            binary_jar = jarfile,
-        )
diff --git a/apolloschurchapp/android/app/debug.keystore b/apolloschurchapp/android/app/debug.keystore
deleted file mode 100644
index 364e105ed39fbfd62001429a68140672b06ec0de..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 2257
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
EA81kH<^TWy

diff --git a/apolloschurchapp/android/app/proguard-rules.pro b/apolloschurchapp/android/app/proguard-rules.pro
index 11b0257..a92fa17 100644
--- a/apolloschurchapp/android/app/proguard-rules.pro
+++ b/apolloschurchapp/android/app/proguard-rules.pro
@@ -8,3 +8,10 @@
 #   http://developer.android.com/guide/developing/tools/proguard.html
 
 # Add any project specific keep options here:
+
+# If your project uses WebView with JS, uncomment the following
+# and specify the fully qualified class name to the JavaScript interface
+# class:
+#-keepclassmembers class fqcn.of.javascript.interface.for.webview {
+#   public *;
+#}
diff --git a/apolloschurchapp/android/app/src/debug/AndroidManifest.xml b/apolloschurchapp/android/app/src/debug/AndroidManifest.xml
deleted file mode 100644
index fa26aa5..0000000
--- a/apolloschurchapp/android/app/src/debug/AndroidManifest.xml
+++ /dev/null
@@ -1,8 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<manifest xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:tools="http://schemas.android.com/tools">
-
-    <uses-permission android:name="android.permission.SYSTEM_ALERT_WINDOW"/>
-
-    <application android:usesCleartextTraffic="true" tools:targetApi="28" tools:ignore="GoogleAppIndexingWarning" />
-</manifest>
diff --git a/apolloschurchapp/android/app/src/main/AndroidManifest.xml b/apolloschurchapp/android/app/src/main/AndroidManifest.xml
index 4d1e19d..988588b 100644
--- a/apolloschurchapp/android/app/src/main/AndroidManifest.xml
+++ b/apolloschurchapp/android/app/src/main/AndroidManifest.xml
@@ -2,10 +2,9 @@
     package="com.apolloschurchapp">
 
     <uses-permission android:name="android.permission.INTERNET" />
-    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
+    <uses-permission android:name="android.permission.SYSTEM_ALERT_WINDOW"/>
     <uses-permission android:name="android.permission.CAMERA" />
-    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION"/>
-    <uses-permission android:name="android.permission.FOREGROUND_SERVICE" />
+    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE"/>
 
     <application
       android:name=".MainApplication"
@@ -14,20 +13,28 @@
       android:roundIcon="@mipmap/ic_launcher_round"
       android:allowBackup="false"
       android:theme="@style/AppTheme">
-      <meta-data
-        android:name="com.google.android.geo.API_KEY"
-        android:value="@string/GOOGLE_MAPS_API_KEY"/>
       <activity
-        android:name=".MainActivity"
-        android:label="@string/app_name"
-        android:configChanges="keyboard|keyboardHidden|orientation|screenSize"
-        android:windowSoftInputMode="adjustPan"
-        android:launchMode="singleTask">
+        android:name=".LaunchActivity"
+        android:theme="@style/LaunchTheme"
+        android:label="Apollos Church">
         <intent-filter>
             <action android:name="android.intent.action.MAIN" />
             <category android:name="android.intent.category.LAUNCHER" />
         </intent-filter>
+        <intent-filter android:label="filter_react_native">
+          <action android:name="android.intent.action.VIEW" />
+          <category android:name="android.intent.category.DEFAULT" />
+          <category android:name="android.intent.category.BROWSABLE" />
+          <data android:scheme="peopleapp" android:host="people" /> // A
+        </intent-filter>
       </activity>
+      <activity
+        android:name=".MainActivity"
+        android:label="@string/app_name"
+        android:configChanges="keyboard|keyboardHidden|orientation|screenSize"
+        android:windowSoftInputMode="adjustPan"
+        android:launchMode="singleTask"
+      />
       <activity android:name="com.facebook.react.devsupport.DevSettingsActivity" />
     </application>
 
diff --git a/apolloschurchapp/android/app/src/main/java/com/apolloschurchapp/LaunchActivity.java b/apolloschurchapp/android/app/src/main/java/com/apolloschurchapp/LaunchActivity.java
new file mode 100644
index 0000000..6c4d404
--- /dev/null
+++ b/apolloschurchapp/android/app/src/main/java/com/apolloschurchapp/LaunchActivity.java
@@ -0,0 +1,16 @@
+package com.apolloschurchapp;
+
+import android.content.Intent;
+import android.os.Bundle;
+import android.support.v7.app.AppCompatActivity;
+
+public class LaunchActivity extends AppCompatActivity {
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+
+        Intent intent = new Intent(this, MainActivity.class);
+        startActivity(intent);
+        finish();
+    }
+}
\ No newline at end of file
diff --git a/apolloschurchapp/android/app/src/main/java/com/apolloschurchapp/MainActivity.java b/apolloschurchapp/android/app/src/main/java/com/apolloschurchapp/MainActivity.java
index 27565e6..3824a3a 100644
--- a/apolloschurchapp/android/app/src/main/java/com/apolloschurchapp/MainActivity.java
+++ b/apolloschurchapp/android/app/src/main/java/com/apolloschurchapp/MainActivity.java
@@ -1,15 +1,13 @@
 package com.apolloschurchapp;
+
 import android.os.Bundle;
 import com.facebook.react.ReactActivity;
-import com.facebook.react.ReactActivityDelegate;
-import com.facebook.react.ReactRootView;
-import com.swmansion.gesturehandler.react.RNGestureHandlerEnabledRootView;
 import org.devio.rn.splashscreen.SplashScreen;
 
 public class MainActivity extends ReactActivity {
     @Override
     protected void onCreate(Bundle savedInstanceState) {
-        SplashScreen.show(this);
+        SplashScreen.show(this, R.style.SplashScreenTheme);
         super.onCreate(savedInstanceState);
     }
     /**
@@ -20,14 +18,4 @@ public class MainActivity extends ReactActivity {
     protected String getMainComponentName() {
         return "apolloschurchapp";
     }
-
-    @Override
-    protected ReactActivityDelegate createReactActivityDelegate() {
-      return new ReactActivityDelegate(this, getMainComponentName()) {
-        @Override
-        protected ReactRootView createRootView() {
-         return new RNGestureHandlerEnabledRootView(MainActivity.this);
-        }
-      };
-    }
 }
diff --git a/apolloschurchapp/android/app/src/main/java/com/apolloschurchapp/MainApplication.java b/apolloschurchapp/android/app/src/main/java/com/apolloschurchapp/MainApplication.java
index 0bdd47f..31d896b 100644
--- a/apolloschurchapp/android/app/src/main/java/com/apolloschurchapp/MainApplication.java
+++ b/apolloschurchapp/android/app/src/main/java/com/apolloschurchapp/MainApplication.java
@@ -1,12 +1,17 @@
 package com.apolloschurchapp;
 
 import android.app.Application;
-import android.util.Log;
 
-import com.facebook.react.PackageList;
-import com.facebook.hermes.reactexecutor.HermesExecutorFactory;
-import com.facebook.react.bridge.JavaScriptExecutorFactory;
 import com.facebook.react.ReactApplication;
+import com.geektime.rnonesignalandroid.ReactNativeOneSignalPackage;
+import com.imagepicker.ImagePickerPackage;
+import com.tanguyantoine.react.MusicControl;
+import com.learnium.RNDeviceInfo.RNDeviceInfo;
+import com.brentvatne.react.ReactVideoPackage;
+import com.horcrux.svg.SvgPackage;
+import org.devio.rn.splashscreen.SplashScreenReactPackage;
+import com.BV.LinearGradient.LinearGradientPackage;
+import com.github.droibit.android.reactnative.customtabs.CustomTabsPackage;
 import com.facebook.react.ReactNativeHost;
 import com.facebook.react.ReactPackage;
 import com.facebook.react.shell.MainReactPackage;
@@ -25,11 +30,18 @@ public class MainApplication extends Application implements ReactApplication {
 
     @Override
     protected List<ReactPackage> getPackages() {
-      @SuppressWarnings("UnnecessaryLocalVariable")
-      List<ReactPackage> packages = new PackageList(this).getPackages();
-      // Packages that cannot be autolinked yet can be added manually here, for example:
-      // packages.add(new MyReactNativePackage());
-      return packages;
+      return Arrays.<ReactPackage>asList(
+          new MainReactPackage(),
+            new ReactNativeOneSignalPackage(),
+            new ImagePickerPackage(),
+            new MusicControl(),
+            new RNDeviceInfo(),
+            new ReactVideoPackage(),
+            new SvgPackage(),
+            new SplashScreenReactPackage(),
+            new LinearGradientPackage(),
+            new CustomTabsPackage()
+      );
     }
 
     @Override
diff --git a/apolloschurchapp/android/app/src/main/res/drawable/background_splash.xml b/apolloschurchapp/android/app/src/main/res/drawable/background_splash.xml
index 19383f0..4f85728 100644
--- a/apolloschurchapp/android/app/src/main/res/drawable/background_splash.xml
+++ b/apolloschurchapp/android/app/src/main/res/drawable/background_splash.xml
@@ -2,7 +2,7 @@
 <layer-list xmlns:android="http://schemas.android.com/apk/res/android">
 
     <item
-        android:drawable="@color/primary"/>
+        android:drawable="@color/deep_water"/>
 
     <item
         android:width="95.28dp"
diff --git a/apolloschurchapp/android/app/src/main/res/layout/launch_screen.xml b/apolloschurchapp/android/app/src/main/res/layout/launch_screen.xml
index 6e78d8b..0009481 100644
--- a/apolloschurchapp/android/app/src/main/res/layout/launch_screen.xml
+++ b/apolloschurchapp/android/app/src/main/res/layout/launch_screen.xml
@@ -3,7 +3,7 @@
     android:orientation="vertical"
     android:layout_width="match_parent"
     android:layout_height="match_parent"
-    android:background="@color/primary"
+    android:background="@color/deep_water"
     android:gravity="center">
 
     <ImageView
diff --git a/apolloschurchapp/android/app/src/main/res/mipmap-hdpi/ic_launcher_round.webp b/apolloschurchapp/android/app/src/main/res/mipmap-hdpi/ic_launcher_round.webp
index f77fb4bc60914a3e469a4761dacc5b047738fcca..42aa619f04951d7e857d309cb6326bc2479fe766 100644
GIT binary patch
literal 1056
zcmV+*1mF8oNk&E(1ONb6MM6+kP&iBr1ONapFTe{BH|8jkWLc@do<1N6{}NF0{xZ{b
z!~(;%Z6opaANZ|pNRcEtl49iR1f=7S;!x<Gihx_&wrXXb`vup?C8Q6EAR?s!+94<U
zA!RU#+}$0Xd`|$xA5Z}SDj>iB2oNBFItY-!AgF>WsDlKCKn+w?<9xn)E(|U<E;cp}
zM*WX87X1$!qf|CIvPojoM@G-RBx11XGy2HJrN5EHBxgMLl7*!{B{HdZu}NZdKaWK9
zK4@~1C`bK|MECPBGU{J_h7Ch~BS$v%E^cFoO@c%$4vB1RToN(3Fi?6bK!7gDK&CSB
zIoUe$O_tz76tmrA>x0n=ji>;7*kVF}1lrTJ4Q4*7AFw2#Tn&V|>Z*S<5p__2OF4yO
zf3eS_9aY6~wL8Zbv%9+|+dkW_o42hvyc9p5>+x)YnPxjI%LBcNXSq_IP`%q<_Ly#2
zEl{l38h-wZ8)08$i*0SP|DOJxeh%79JyyE>oy1yIt=s>Xn*RFO{&?>}!nSQ^-im+T
zH^qnA);-&{ZF}pi`mJqiwr$(nA4~E+NsmSJe*)<Lc=u+*t($iTN@HC`X|YmD6_-}j
zHM(}YzDzO8>TkPoqqamjSW<h#DRI42Ib3>OIFeOeq#Q4*&T`;RrE<0M4(ngJa=H8;
zLslu*tE85wQOvxYoSd9ohN=-7;#whR7644(6kZc{?>ZIp@E{X*F;wR}8*xQ(*TQlM
zM_mzCe>+%{tw!Z=I{sS7tBSh^wp%#rsx$>%W-SFUb}E25tjj^Bw{4u<(Eyfh05JFn
zr|m5f$$N^s4FGl@9Rgq-N8OV|ftOhG0E}-}vjI$DT?!=fT;LoV3Sfm&8v$S+=YogG
zcZRbb0QM?%Vkm&+oHITme-CFmfQd>eH5b5`JVuY7D71xf0035*HUq$RMoTDBSQlfZ
zX}{^@Z~zM!U13C_{dxuC08Cbv^8pMyuGb$*6mn5-2LP<L+6n+0^e%=F`S0s3GG$wx
z9tmKE-hDrj_o>#Y5dfws+l2s-t@YGP6#P+Z69BAjx7}u1rS&nG$cX9FnQ7vVZ`bIH
zF^DMiiN--Vx>Msx7!i@@eWBeNXBOKPe(;!#xJP!AoEe#K^C-?R3IEp?tM)?<+q8W3
z3lka9&#c^j7HyEV_s7|RaQ26nY-QxPZuh#sMM^sgi2dB^R_o{30MZRgeAD7i%bUa?
z(iWbiFTHN`eo68OJrbUT@8_L6_dUTQh${l4f4}T@ru*gZ=s-aZ8sRCwo;UNFpZ`h;
zH^^BT9F_L-^}{BeriZV8rbPuya$I^NlQRB%diCP*g9nday!!MfBPr4=$yFKTi-=E7
aP0!3sPfd=G@C8X4fI>=X7*a|>P67a|pzpu{

literal 1876
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
O4L`T#9A8WR=9>eIC7pZ#

diff --git a/apolloschurchapp/android/app/src/main/res/mipmap-mdpi/ic_launcher_round.webp b/apolloschurchapp/android/app/src/main/res/mipmap-mdpi/ic_launcher_round.webp
index 42aa619f04951d7e857d309cb6326bc2479fe766..f77fb4bc60914a3e469a4761dacc5b047738fcca 100644
GIT binary patch
literal 1876
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
O4L`T#9A8WR=9>eIC7pZ#

literal 1056
zcmV+*1mF8oNk&E(1ONb6MM6+kP&iBr1ONapFTe{BH|8jkWLc@do<1N6{}NF0{xZ{b
z!~(;%Z6opaANZ|pNRcEtl49iR1f=7S;!x<Gihx_&wrXXb`vup?C8Q6EAR?s!+94<U
zA!RU#+}$0Xd`|$xA5Z}SDj>iB2oNBFItY-!AgF>WsDlKCKn+w?<9xn)E(|U<E;cp}
zM*WX87X1$!qf|CIvPojoM@G-RBx11XGy2HJrN5EHBxgMLl7*!{B{HdZu}NZdKaWK9
zK4@~1C`bK|MECPBGU{J_h7Ch~BS$v%E^cFoO@c%$4vB1RToN(3Fi?6bK!7gDK&CSB
zIoUe$O_tz76tmrA>x0n=ji>;7*kVF}1lrTJ4Q4*7AFw2#Tn&V|>Z*S<5p__2OF4yO
zf3eS_9aY6~wL8Zbv%9+|+dkW_o42hvyc9p5>+x)YnPxjI%LBcNXSq_IP`%q<_Ly#2
zEl{l38h-wZ8)08$i*0SP|DOJxeh%79JyyE>oy1yIt=s>Xn*RFO{&?>}!nSQ^-im+T
zH^qnA);-&{ZF}pi`mJqiwr$(nA4~E+NsmSJe*)<Lc=u+*t($iTN@HC`X|YmD6_-}j
zHM(}YzDzO8>TkPoqqamjSW<h#DRI42Ib3>OIFeOeq#Q4*&T`;RrE<0M4(ngJa=H8;
zLslu*tE85wQOvxYoSd9ohN=-7;#whR7644(6kZc{?>ZIp@E{X*F;wR}8*xQ(*TQlM
zM_mzCe>+%{tw!Z=I{sS7tBSh^wp%#rsx$>%W-SFUb}E25tjj^Bw{4u<(Eyfh05JFn
zr|m5f$$N^s4FGl@9Rgq-N8OV|ftOhG0E}-}vjI$DT?!=fT;LoV3Sfm&8v$S+=YogG
zcZRbb0QM?%Vkm&+oHITme-CFmfQd>eH5b5`JVuY7D71xf0035*HUq$RMoTDBSQlfZ
zX}{^@Z~zM!U13C_{dxuC08Cbv^8pMyuGb$*6mn5-2LP<L+6n+0^e%=F`S0s3GG$wx
z9tmKE-hDrj_o>#Y5dfws+l2s-t@YGP6#P+Z69BAjx7}u1rS&nG$cX9FnQ7vVZ`bIH
zF^DMiiN--Vx>Msx7!i@@eWBeNXBOKPe(;!#xJP!AoEe#K^C-?R3IEp?tM)?<+q8W3
z3lka9&#c^j7HyEV_s7|RaQ26nY-QxPZuh#sMM^sgi2dB^R_o{30MZRgeAD7i%bUa?
z(iWbiFTHN`eo68OJrbUT@8_L6_dUTQh${l4f4}T@ru*gZ=s-aZ8sRCwo;UNFpZ`h;
zH^^BT9F_L-^}{BeriZV8rbPuya$I^NlQRB%diCP*g9nday!!MfBPr4=$yFKTi-=E7
aP0!3sPfd=G@C8X4fI>=X7*a|>P67a|pzpu{

diff --git a/apolloschurchapp/android/app/src/main/res/values-v21/styles.xml b/apolloschurchapp/android/app/src/main/res/values-v21/styles.xml
new file mode 100644
index 0000000..5a4019d
--- /dev/null
+++ b/apolloschurchapp/android/app/src/main/res/values-v21/styles.xml
@@ -0,0 +1,18 @@
+<resources>
+
+    <!-- Base application theme. -->
+    <style name="AppTheme" parent="Theme.AppCompat.Light.NoActionBar">
+        <!-- Customize your theme here. -->
+    </style>
+
+    <style name="LaunchTheme" parent="Theme.AppCompat.Light.NoActionBar">
+        <item name="android:windowBackground">@drawable/background_splash</item>
+        <item name="android:statusBarColor">@color/deep_water</item>
+    </style>
+
+    <style name="SplashScreenTheme" parent="SplashScreen_SplashTheme">
+        <item name="android:statusBarColor">@color/deep_water</item>
+        <item name="colorPrimaryDark">@color/deep_water</item>
+    </style>
+
+</resources>
diff --git a/apolloschurchapp/android/app/src/main/res/values/colors.xml b/apolloschurchapp/android/app/src/main/res/values/colors.xml
index 62a0e92..348fc25 100644
--- a/apolloschurchapp/android/app/src/main/res/values/colors.xml
+++ b/apolloschurchapp/android/app/src/main/res/values/colors.xml
@@ -1,4 +1,4 @@
 <?xml version="1.0" encoding="utf-8"?>
 <resources>
-    <color name="primary">#00676D</color>
-</resources>
+    <color name="deep_water">#00676D</color>
+</resources>
\ No newline at end of file
diff --git a/apolloschurchapp/android/app/src/main/res/values/styles.xml b/apolloschurchapp/android/app/src/main/res/values/styles.xml
index de75bed..328c4be 100644
--- a/apolloschurchapp/android/app/src/main/res/values/styles.xml
+++ b/apolloschurchapp/android/app/src/main/res/values/styles.xml
@@ -9,4 +9,8 @@
         <item name="android:windowBackground">@drawable/background_splash</item>
     </style>
 
+    <style name="SplashScreenTheme" parent="SplashScreen_SplashTheme">
+        <item name="android:windowIsTranslucent">true</item>
+    </style>
+
 </resources>
diff --git a/apolloschurchapp/android/build.gradle b/apolloschurchapp/android/build.gradle
index 1881d9d..4d334b9 100644
--- a/apolloschurchapp/android/build.gradle
+++ b/apolloschurchapp/android/build.gradle
@@ -1,19 +1,16 @@
 // Top-level build file where you can add configuration options common to all sub-projects/modules.
 
 buildscript {
-    ext {
-        buildToolsVersion = "28.0.3"
-        minSdkVersion = 16
-        compileSdkVersion = 28
-        targetSdkVersion = 28
-        supportLibVersion = "28.0.0"
-    }
     repositories {
-        google()
         jcenter()
+        maven {
+            url 'https://maven.google.com/'
+            name 'Google'
+        }
+        google()
     }
     dependencies {
-        classpath("com.android.tools.build:gradle:3.4.1")
+        classpath 'com.android.tools.build:gradle:3.1.4'
 
         // NOTE: Do not place your application dependencies here; they belong
         // in the individual module build.gradle files
@@ -23,16 +20,35 @@ buildscript {
 allprojects {
     repositories {
         mavenLocal()
-        google()
-        jcenter()
         maven {
-            // All of React Native (JS, Obj-C sources, Android binaries) is installed from npm
-            url("$rootDir/../node_modules/react-native/android")
+            url 'https://maven.google.com/'
+            name 'Google'
         }
+        jcenter()
+        google()
         maven {
-            // Android JSC is installed from npm
-            url("$rootDir/../node_modules/jsc-android/dist")
+            // All of React Native (JS, Obj-C sources, Android binaries) is installed from npm
+            url "$rootDir/../node_modules/react-native/android"
         }
         maven { url "https://jitpack.io" }
     }
 }
+
+ext {
+    buildToolsVersion = "26.0.3"
+    minSdkVersion = 16
+    compileSdkVersion = 26
+    targetSdkVersion = 26
+    supportLibVersion = "26.1.0"
+}
+
+subprojects {
+    afterEvaluate {project ->
+        if (project.hasProperty("android")) {
+            android {
+                compileSdkVersion rootProject.ext.compileSdkVersion
+                buildToolsVersion rootProject.ext.buildToolsVersion
+            }
+        }
+    }
+}
diff --git a/apolloschurchapp/android/gradle.properties b/apolloschurchapp/android/gradle.properties
index ccb748f..1fd964e 100644
--- a/apolloschurchapp/android/gradle.properties
+++ b/apolloschurchapp/android/gradle.properties
@@ -17,5 +17,4 @@
 # http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects
 # org.gradle.parallel=true
 
-android.useAndroidX=true
-android.enableJetifier=true
\ No newline at end of file
+android.useDeprecatedNdk=true
diff --git a/apolloschurchapp/android/gradle.properties.appcenter b/apolloschurchapp/android/gradle.properties.appcenter
index a50dbd7..f8c9d46 100644
--- a/apolloschurchapp/android/gradle.properties.appcenter
+++ b/apolloschurchapp/android/gradle.properties.appcenter
@@ -19,5 +19,3 @@
 
 android.useDeprecatedNdk=true
 android.enableAapt2=false
-android.useAndroidX=true
-android.enableJetifier=true
diff --git a/apolloschurchapp/android/gradle/wrapper/gradle-wrapper.jar b/apolloschurchapp/android/gradle/wrapper/gradle-wrapper.jar
index 01b8bf6b1f99cad9213fc495b33ad5bbab8efd20..b5166dad4d90021f6a0b45268c0755719f1d5cd4 100644
GIT binary patch
delta 40346
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
MR6yud!{M+00Sm=Wj{pDw

delta 42314
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
Bz<B@w

diff --git a/apolloschurchapp/android/gradle/wrapper/gradle-wrapper.properties b/apolloschurchapp/android/gradle/wrapper/gradle-wrapper.properties
index 3c7a7c8..e796cbc 100644
--- a/apolloschurchapp/android/gradle/wrapper/gradle-wrapper.properties
+++ b/apolloschurchapp/android/gradle/wrapper/gradle-wrapper.properties
@@ -1,5 +1,6 @@
+#Fri Oct 05 11:32:34 EDT 2018
 distributionBase=GRADLE_USER_HOME
 distributionPath=wrapper/dists
 zipStoreBase=GRADLE_USER_HOME
 zipStorePath=wrapper/dists
-distributionUrl=https\://services.gradle.org/distributions/gradle-5.4.1-all.zip
\ No newline at end of file
+distributionUrl=https\://services.gradle.org/distributions/gradle-4.4-all.zip
diff --git a/apolloschurchapp/android/gradlew b/apolloschurchapp/android/gradlew
index 3e84efe..91a7e26 100755
--- a/apolloschurchapp/android/gradlew
+++ b/apolloschurchapp/android/gradlew
@@ -1,4 +1,4 @@
-#!/usr/bin/env sh
+#!/usr/bin/env bash
 
 ##############################################################################
 ##
@@ -6,38 +6,20 @@
 ##
 ##############################################################################
 
-# Attempt to set APP_HOME
-# Resolve links: $0 may be a link
-PRG="$0"
-# Need this for relative symlinks.
-while [ -h "$PRG" ] ; do
-    ls=`ls -ld "$PRG"`
-    link=`expr "$ls" : '.*-> \(.*\)$'`
-    if expr "$link" : '/.*' > /dev/null; then
-        PRG="$link"
-    else
-        PRG=`dirname "$PRG"`"/$link"
-    fi
-done
-SAVED="`pwd`"
-cd "`dirname \"$PRG\"`/" >/dev/null
-APP_HOME="`pwd -P`"
-cd "$SAVED" >/dev/null
+# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
+DEFAULT_JVM_OPTS=""
 
 APP_NAME="Gradle"
 APP_BASE_NAME=`basename "$0"`
 
-# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
-DEFAULT_JVM_OPTS='"-Xmx64m" "-Xms64m"'
-
 # Use the maximum available, or set MAX_FD != -1 to use that value.
 MAX_FD="maximum"
 
-warn () {
+warn ( ) {
     echo "$*"
 }
 
-die () {
+die ( ) {
     echo
     echo "$*"
     echo
@@ -48,7 +30,6 @@ die () {
 cygwin=false
 msys=false
 darwin=false
-nonstop=false
 case "`uname`" in
   CYGWIN* )
     cygwin=true
@@ -59,11 +40,31 @@ case "`uname`" in
   MINGW* )
     msys=true
     ;;
-  NONSTOP* )
-    nonstop=true
-    ;;
 esac
 
+# For Cygwin, ensure paths are in UNIX format before anything is touched.
+if $cygwin ; then
+    [ -n "$JAVA_HOME" ] && JAVA_HOME=`cygpath --unix "$JAVA_HOME"`
+fi
+
+# Attempt to set APP_HOME
+# Resolve links: $0 may be a link
+PRG="$0"
+# Need this for relative symlinks.
+while [ -h "$PRG" ] ; do
+    ls=`ls -ld "$PRG"`
+    link=`expr "$ls" : '.*-> \(.*\)$'`
+    if expr "$link" : '/.*' > /dev/null; then
+        PRG="$link"
+    else
+        PRG=`dirname "$PRG"`"/$link"
+    fi
+done
+SAVED="`pwd`"
+cd "`dirname \"$PRG\"`/" >&-
+APP_HOME="`pwd -P`"
+cd "$SAVED" >&-
+
 CLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar
 
 # Determine the Java command to use to start the JVM.
@@ -89,7 +90,7 @@ location of your Java installation."
 fi
 
 # Increase the maximum file descriptors if we can.
-if [ "$cygwin" = "false" -a "$darwin" = "false" -a "$nonstop" = "false" ] ; then
+if [ "$cygwin" = "false" -a "$darwin" = "false" ] ; then
     MAX_FD_LIMIT=`ulimit -H -n`
     if [ $? -eq 0 ] ; then
         if [ "$MAX_FD" = "maximum" -o "$MAX_FD" = "max" ] ; then
@@ -113,7 +114,6 @@ fi
 if $cygwin ; then
     APP_HOME=`cygpath --path --mixed "$APP_HOME"`
     CLASSPATH=`cygpath --path --mixed "$CLASSPATH"`
-    JAVACMD=`cygpath --unix "$JAVACMD"`
 
     # We build the pattern for arguments to be converted via cygpath
     ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`
@@ -154,19 +154,11 @@ if $cygwin ; then
     esac
 fi
 
-# Escape application args
-save () {
-    for i do printf %s\\n "$i" | sed "s/'/'\\\\''/g;1s/^/'/;\$s/\$/' \\\\/" ; done
-    echo " "
+# Split up the JVM_OPTS And GRADLE_OPTS values into an array, following the shell quoting and substitution rules
+function splitJvmOpts() {
+    JVM_OPTS=("$@")
 }
-APP_ARGS=$(save "$@")
-
-# Collect all arguments for the java command, following the shell quoting and substitution rules
-eval set -- $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS "\"-Dorg.gradle.appname=$APP_BASE_NAME\"" -classpath "\"$CLASSPATH\"" org.gradle.wrapper.GradleWrapperMain "$APP_ARGS"
-
-# by default we should be in the correct project dir, but when run from Finder on Mac, the cwd is wrong
-if [ "$(uname)" = "Darwin" ] && [ "$HOME" = "$PWD" ]; then
-  cd "$(dirname "$0")"
-fi
+eval splitJvmOpts $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS
+JVM_OPTS[${#JVM_OPTS[*]}]="-Dorg.gradle.appname=$APP_BASE_NAME"
 
-exec "$JAVACMD" "$@"
+exec "$JAVACMD" "${JVM_OPTS[@]}" -classpath "$CLASSPATH" org.gradle.wrapper.GradleWrapperMain "$@"
diff --git a/apolloschurchapp/android/gradlew.bat b/apolloschurchapp/android/gradlew.bat
index 1688408..aec9973 100644
--- a/apolloschurchapp/android/gradlew.bat
+++ b/apolloschurchapp/android/gradlew.bat
@@ -8,14 +8,14 @@
 @rem Set local scope for the variables with windows NT shell
 if "%OS%"=="Windows_NT" setlocal
 
+@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
+set DEFAULT_JVM_OPTS=
+
 set DIRNAME=%~dp0
 if "%DIRNAME%" == "" set DIRNAME=.
 set APP_BASE_NAME=%~n0
 set APP_HOME=%DIRNAME%
 
-@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
-set DEFAULT_JVM_OPTS="-Xmx64m" "-Xms64m"
-
 @rem Find java.exe
 if defined JAVA_HOME goto findJavaFromJavaHome
 
@@ -46,9 +46,10 @@ echo location of your Java installation.
 goto fail
 
 :init
-@rem Get command-line arguments, handling Windows variants
+@rem Get command-line arguments, handling Windowz variants
 
 if not "%OS%" == "Windows_NT" goto win9xME_args
+if "%@eval[2+2]" == "4" goto 4NT_args
 
 :win9xME_args
 @rem Slurp the command line arguments.
@@ -59,6 +60,11 @@ set _SKIP=2
 if "x%~1" == "x" goto execute
 
 set CMD_LINE_ARGS=%*
+goto execute
+
+:4NT_args
+@rem Get arguments from the 4NT Shell from JP Software
+set CMD_LINE_ARGS=%$
 
 :execute
 @rem Setup the command line
diff --git a/apolloschurchapp/android/settings.gradle b/apolloschurchapp/android/settings.gradle
index 1ae2310..f6c1313 100644
--- a/apolloschurchapp/android/settings.gradle
+++ b/apolloschurchapp/android/settings.gradle
@@ -1,3 +1,21 @@
 rootProject.name = 'apolloschurchapp'
-apply from: file("../node_modules/@react-native-community/cli-platform-android/native_modules.gradle"); applyNativeModulesSettingsGradle(settings)
+include ':react-native-onesignal'
+project(':react-native-onesignal').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-onesignal/android')
+include ':react-native-image-picker'
+project(':react-native-image-picker').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-image-picker/android')
+include ':react-native-music-control'
+project(':react-native-music-control').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-music-control/android')
+include ':react-native-device-info'
+project(':react-native-device-info').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-device-info/android')
+include ':react-native-video'
+project(':react-native-video').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-video/android-exoplayer')
+include ':react-native-svg'
+project(':react-native-svg').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-svg/android')
+include ':react-native-splash-screen'
+project(':react-native-splash-screen').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-splash-screen/android')
+include ':react-native-linear-gradient'
+project(':react-native-linear-gradient').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-linear-gradient/android')
+include ':react-native-custom-tabs'
+project(':react-native-custom-tabs').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-custom-tabs/android')
+
 include ':app'
diff --git a/apolloschurchapp/apollos.json b/apolloschurchapp/apollos.json
deleted file mode 100644
index 0267479..0000000
--- a/apolloschurchapp/apollos.json
+++ /dev/null
@@ -1,4 +0,0 @@
-{
-    "version": "1.2.0-beta.3",
-    "environment": "client"
-}
\ No newline at end of file
diff --git a/apolloschurchapp/appcenter-post-clone.sh b/apolloschurchapp/appcenter-post-clone.sh
index 83862e2..97b3e73 100755
--- a/apolloschurchapp/appcenter-post-clone.sh
+++ b/apolloschurchapp/appcenter-post-clone.sh
@@ -10,14 +10,4 @@ cp $(pwd)/../../yarn.lock $(pwd)/yarn.lock
 
 # Swaps out all placeholder env variables w/ their real values
 # Placeholders look like "$ONE_SIGNAL_KEY"
-grep -o '\$.*' .env.production | sed 's/\$\(.*\)/\1/' | xargs -I {} sh -c "sed -i -e 's/\$"{}"/'$"{}"'/' .env.production"
-# Make sure ReactNativeConfig picks up values from prod env file.
-cp .env.production .env
-
-echo "Uninstalling all CocoaPods versions"
-sudo gem uninstall cocoapods --all --executables
-
-COCOAPODS_VER=`sed -n -e 's/^COCOAPODS: \([0-9.]*\)/\1/p' ios/Podfile.lock`
-
-echo "Installing CocoaPods version $COCOAPODS_VER"
-sudo gem install cocoapods -v $COCOAPODS_VER
\ No newline at end of file
+grep -o '\$.*' .env.production | sed 's/\$\(.*\)/\1/' | xargs -I {} sh -c "sed -i -e 's/\$"{}"/'$"{}"'/' .env.production"
\ No newline at end of file
diff --git a/apolloschurchapp/appcenter-pre-build.sh b/apolloschurchapp/appcenter-pre-build.sh
index 93e20b9..492aef8 100644
--- a/apolloschurchapp/appcenter-pre-build.sh
+++ b/apolloschurchapp/appcenter-pre-build.sh
@@ -3,10 +3,3 @@
 droid_dir=$(pwd)/android
 
 cp $droid_dir/gradle.properties.appcenter $droid_dir/gradle.properties
-
-cd ios
-pod install
-
-cd ../../..
-yarn
-yarn lerna run generate-stories
diff --git a/apolloschurchapp/babel.config.js b/apolloschurchapp/babel.config.js
deleted file mode 100644
index bd83dde..0000000
--- a/apolloschurchapp/babel.config.js
+++ /dev/null
@@ -1,12 +0,0 @@
-module.exports = {
-  presets: ['module:metro-react-native-babel-preset'],
-  plugins: [
-    [
-      '@babel/plugin-proposal-decorators',
-      {
-        legacy: true,
-      },
-    ],
-    ['@babel/plugin-proposal-export-default-from'],
-  ],
-};
diff --git a/apolloschurchapp/index.js b/apolloschurchapp/index.js
index 6bfaa01..d009549 100644
--- a/apolloschurchapp/index.js
+++ b/apolloschurchapp/index.js
@@ -1,23 +1,6 @@
-import './polyfill'; // this can be removed when we upgrade to react-native 59
 import { AppRegistry, YellowBox } from 'react-native';
-import SplashScreen from 'react-native-splash-screen';
 
-import Config from 'react-native-config';
-import Storybook from './storybook';
-import MainApp from './src';
-
-const useStorybook = Config.STORYBOOK === 'true';
-
-let App = MainApp;
-if (useStorybook) {
-  App = Storybook;
-}
-
-// If there's an error before the splash screen goes away, you never see that error.
-// This tries to hide the splash screen so you can see the error.
-// Shouldnt't do anything in Prod.
-// Depending on the error, splash screen might not go away ;)
-global.ErrorUtils.setGlobalHandler(() => SplashScreen.hide());
+import App from './src';
 
 YellowBox.ignoreWarnings([
   'Warning: isMounted(...) is deprecated',
diff --git a/apolloschurchapp/ios/Podfile b/apolloschurchapp/ios/Podfile
deleted file mode 100644
index 354f6da..0000000
--- a/apolloschurchapp/ios/Podfile
+++ /dev/null
@@ -1,61 +0,0 @@
-platform :ios, '9.0'
-require_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'
-
-target 'apolloschurchapp' do
-  # Pods for apolloschurchapp
-  pod 'React', :path => '../node_modules/react-native/'
-  pod 'React-Core', :path => '../node_modules/react-native/React'
-  pod 'React-DevSupport', :path => '../node_modules/react-native/React'
-  pod 'React-RCTActionSheet', :path => '../node_modules/react-native/Libraries/ActionSheetIOS'
-  pod 'React-RCTAnimation', :path => '../node_modules/react-native/Libraries/NativeAnimation'
-  pod 'React-RCTBlob', :path => '../node_modules/react-native/Libraries/Blob'
-  pod 'React-RCTImage', :path => '../node_modules/react-native/Libraries/Image'
-  pod 'React-RCTLinking', :path => '../node_modules/react-native/Libraries/LinkingIOS'
-  pod 'React-RCTNetwork', :path => '../node_modules/react-native/Libraries/Network'
-  pod 'React-RCTSettings', :path => '../node_modules/react-native/Libraries/Settings'
-  pod 'React-RCTText', :path => '../node_modules/react-native/Libraries/Text'
-  pod 'React-RCTVibration', :path => '../node_modules/react-native/Libraries/Vibration'
-  pod 'React-RCTWebSocket', :path => '../node_modules/react-native/Libraries/WebSocket'
-
-  pod 'React-cxxreact', :path => '../node_modules/react-native/ReactCommon/cxxreact'
-  pod 'React-jsi', :path => '../node_modules/react-native/ReactCommon/jsi'
-  pod 'React-jsiexecutor', :path => '../node_modules/react-native/ReactCommon/jsiexecutor'
-  pod 'React-jsinspector', :path => '../node_modules/react-native/ReactCommon/jsinspector'
-  pod 'yoga', :path => '../node_modules/react-native/ReactCommon/yoga'
-
-  pod 'DoubleConversion', :podspec => '../node_modules/react-native/third-party-podspecs/DoubleConversion.podspec'
-  pod 'glog', :podspec => '../node_modules/react-native/third-party-podspecs/glog.podspec'
-  pod 'Folly', :podspec => '../node_modules/react-native/third-party-podspecs/Folly.podspec'
-
-  target 'apolloschurchappTests' do
-    inherit! :search_paths
-    # Pods for testing
-  end
-
-  use_native_modules!
-end
-
-target 'apolloschurchapp-tvOS' do
-  # Pods for apolloschurchapp-tvOS
-
-  target 'apolloschurchapp-tvOSTests' do
-    inherit! :search_paths
-    # Pods for testing
-  end
-
-end
-
-post_install do |installer|
- installer.pods_project.targets.each do |target|
-   if target.name == 'react-native-config'
-     phase = target.project.new(Xcodeproj::Project::Object::PBXShellScriptBuildPhase)
-     phase.shell_script = "cd ../../"\
-     " && RNC_ROOT=./node_modules/react-native-config/"\
-     " && export SYMROOT=$RNC_ROOT/ios/ReactNativeConfig"\
-     " && ruby $RNC_ROOT/ios/ReactNativeConfig/BuildDotenvConfig.ruby"
-
-     target.build_phases << phase
-     target.build_phases.move(phase,0)
-   end
- end
-end
diff --git a/apolloschurchapp/ios/Podfile.lock b/apolloschurchapp/ios/Podfile.lock
deleted file mode 100644
index 0c86a55..0000000
--- a/apolloschurchapp/ios/Podfile.lock
+++ /dev/null
@@ -1,314 +0,0 @@
-PODS:
-  - boost-for-react-native (1.63.0)
-  - BVLinearGradient (2.5.4):
-    - React
-  - DoubleConversion (1.1.6)
-  - Folly (2018.10.22.00):
-    - boost-for-react-native
-    - DoubleConversion
-    - Folly/Default (= 2018.10.22.00)
-    - glog
-  - Folly/Default (2018.10.22.00):
-    - boost-for-react-native
-    - DoubleConversion
-    - glog
-  - glog (0.3.5)
-  - OneSignal (2.10.1)
-  - React (0.60.5):
-    - React-Core (= 0.60.5)
-    - React-DevSupport (= 0.60.5)
-    - React-RCTActionSheet (= 0.60.5)
-    - React-RCTAnimation (= 0.60.5)
-    - React-RCTBlob (= 0.60.5)
-    - React-RCTImage (= 0.60.5)
-    - React-RCTLinking (= 0.60.5)
-    - React-RCTNetwork (= 0.60.5)
-    - React-RCTSettings (= 0.60.5)
-    - React-RCTText (= 0.60.5)
-    - React-RCTVibration (= 0.60.5)
-    - React-RCTWebSocket (= 0.60.5)
-  - React-Core (0.60.5):
-    - Folly (= 2018.10.22.00)
-    - React-cxxreact (= 0.60.5)
-    - React-jsiexecutor (= 0.60.5)
-    - yoga (= 0.60.5.React)
-  - React-cxxreact (0.60.5):
-    - boost-for-react-native (= 1.63.0)
-    - DoubleConversion
-    - Folly (= 2018.10.22.00)
-    - glog
-    - React-jsinspector (= 0.60.5)
-  - React-DevSupport (0.60.5):
-    - React-Core (= 0.60.5)
-    - React-RCTWebSocket (= 0.60.5)
-  - React-jsi (0.60.5):
-    - boost-for-react-native (= 1.63.0)
-    - DoubleConversion
-    - Folly (= 2018.10.22.00)
-    - glog
-    - React-jsi/Default (= 0.60.5)
-  - React-jsi/Default (0.60.5):
-    - boost-for-react-native (= 1.63.0)
-    - DoubleConversion
-    - Folly (= 2018.10.22.00)
-    - glog
-  - React-jsiexecutor (0.60.5):
-    - DoubleConversion
-    - Folly (= 2018.10.22.00)
-    - glog
-    - React-cxxreact (= 0.60.5)
-    - React-jsi (= 0.60.5)
-  - React-jsinspector (0.60.5)
-  - react-native-config (0.11.7):
-    - React
-  - react-native-geolocation (2.0.2):
-    - React
-  - react-native-image-picker (0.28.0):
-    - React
-  - react-native-maps (0.25.0):
-    - React
-  - react-native-music-control (0.10.5):
-    - React
-  - react-native-onesignal (3.3.2):
-    - OneSignal (= 2.10.1)
-    - React (< 1.0.0, >= 0.13.0)
-  - react-native-passkit-wallet (0.1.4):
-    - React
-  - react-native-safari-view (1.0.0):
-    - React
-  - react-native-safe-area-context (0.3.6):
-    - React
-  - react-native-splash-screen (3.2.0):
-    - React
-  - react-native-video (5.0.0):
-    - React
-    - react-native-video/Video (= 5.0.0)
-  - react-native-video/Video (5.0.0):
-    - React
-  - react-native-webview (5.10.0):
-    - React
-  - React-RCTActionSheet (0.60.5):
-    - React-Core (= 0.60.5)
-  - React-RCTAnimation (0.60.5):
-    - React-Core (= 0.60.5)
-  - React-RCTBlob (0.60.5):
-    - React-Core (= 0.60.5)
-    - React-RCTNetwork (= 0.60.5)
-    - React-RCTWebSocket (= 0.60.5)
-  - React-RCTImage (0.60.5):
-    - React-Core (= 0.60.5)
-    - React-RCTNetwork (= 0.60.5)
-  - React-RCTLinking (0.60.5):
-    - React-Core (= 0.60.5)
-  - React-RCTNetwork (0.60.5):
-    - React-Core (= 0.60.5)
-  - React-RCTSettings (0.60.5):
-    - React-Core (= 0.60.5)
-  - React-RCTText (0.60.5):
-    - React-Core (= 0.60.5)
-  - React-RCTVibration (0.60.5):
-    - React-Core (= 0.60.5)
-  - React-RCTWebSocket (0.60.5):
-    - React-Core (= 0.60.5)
-  - rn-fetch-blob (0.10.16):
-    - React-Core
-  - RNAirplay (1.0.0):
-    - React
-  - RNCAsyncStorage (1.5.1):
-    - React
-  - RNDeviceInfo (2.1.2):
-    - React
-  - RNGestureHandler (1.3.0):
-    - React
-  - RNInAppBrowser (3.1.0):
-    - React
-  - RNScreens (1.0.0-alpha.23):
-    - React
-  - RNSVG (9.4.0):
-    - React
-  - yoga (0.60.5.React)
-
-DEPENDENCIES:
-  - BVLinearGradient (from `../node_modules/react-native-linear-gradient`)
-  - DoubleConversion (from `../node_modules/react-native/third-party-podspecs/DoubleConversion.podspec`)
-  - Folly (from `../node_modules/react-native/third-party-podspecs/Folly.podspec`)
-  - glog (from `../node_modules/react-native/third-party-podspecs/glog.podspec`)
-  - React (from `../node_modules/react-native/`)
-  - React-Core (from `../node_modules/react-native/React`)
-  - React-cxxreact (from `../node_modules/react-native/ReactCommon/cxxreact`)
-  - React-DevSupport (from `../node_modules/react-native/React`)
-  - React-jsi (from `../node_modules/react-native/ReactCommon/jsi`)
-  - React-jsiexecutor (from `../node_modules/react-native/ReactCommon/jsiexecutor`)
-  - React-jsinspector (from `../node_modules/react-native/ReactCommon/jsinspector`)
-  - react-native-config (from `../node_modules/react-native-config`)
-  - "react-native-geolocation (from `../node_modules/@react-native-community/geolocation`)"
-  - react-native-image-picker (from `../node_modules/react-native-image-picker`)
-  - react-native-maps (from `../node_modules/react-native-maps`)
-  - react-native-music-control (from `../node_modules/react-native-music-control`)
-  - react-native-onesignal (from `../node_modules/react-native-onesignal`)
-  - react-native-passkit-wallet (from `../node_modules/react-native-passkit-wallet`)
-  - react-native-safari-view (from `../node_modules/react-native-safari-view`)
-  - react-native-safe-area-context (from `../node_modules/react-native-safe-area-context`)
-  - react-native-splash-screen (from `../node_modules/react-native-splash-screen`)
-  - react-native-video (from `../node_modules/react-native-video`)
-  - react-native-webview (from `../node_modules/react-native-webview`)
-  - React-RCTActionSheet (from `../node_modules/react-native/Libraries/ActionSheetIOS`)
-  - React-RCTAnimation (from `../node_modules/react-native/Libraries/NativeAnimation`)
-  - React-RCTBlob (from `../node_modules/react-native/Libraries/Blob`)
-  - React-RCTImage (from `../node_modules/react-native/Libraries/Image`)
-  - React-RCTLinking (from `../node_modules/react-native/Libraries/LinkingIOS`)
-  - React-RCTNetwork (from `../node_modules/react-native/Libraries/Network`)
-  - React-RCTSettings (from `../node_modules/react-native/Libraries/Settings`)
-  - React-RCTText (from `../node_modules/react-native/Libraries/Text`)
-  - React-RCTVibration (from `../node_modules/react-native/Libraries/Vibration`)
-  - React-RCTWebSocket (from `../node_modules/react-native/Libraries/WebSocket`)
-  - rn-fetch-blob (from `../node_modules/rn-fetch-blob`)
-  - "RNAirplay (from `../node_modules/@apollosproject/react-native-airplay-btn`)"
-  - "RNCAsyncStorage (from `../node_modules/@react-native-community/async-storage`)"
-  - RNDeviceInfo (from `../node_modules/react-native-device-info`)
-  - RNGestureHandler (from `../node_modules/react-native-gesture-handler`)
-  - RNInAppBrowser (from `../node_modules/react-native-inappbrowser-reborn`)
-  - RNScreens (from `../node_modules/react-native-screens`)
-  - RNSVG (from `../node_modules/react-native-svg`)
-  - yoga (from `../node_modules/react-native/ReactCommon/yoga`)
-
-SPEC REPOS:
-  https://github.com/cocoapods/specs.git:
-    - boost-for-react-native
-    - OneSignal
-
-EXTERNAL SOURCES:
-  BVLinearGradient:
-    :path: "../node_modules/react-native-linear-gradient"
-  DoubleConversion:
-    :podspec: "../node_modules/react-native/third-party-podspecs/DoubleConversion.podspec"
-  Folly:
-    :podspec: "../node_modules/react-native/third-party-podspecs/Folly.podspec"
-  glog:
-    :podspec: "../node_modules/react-native/third-party-podspecs/glog.podspec"
-  React:
-    :path: "../node_modules/react-native/"
-  React-Core:
-    :path: "../node_modules/react-native/React"
-  React-cxxreact:
-    :path: "../node_modules/react-native/ReactCommon/cxxreact"
-  React-DevSupport:
-    :path: "../node_modules/react-native/React"
-  React-jsi:
-    :path: "../node_modules/react-native/ReactCommon/jsi"
-  React-jsiexecutor:
-    :path: "../node_modules/react-native/ReactCommon/jsiexecutor"
-  React-jsinspector:
-    :path: "../node_modules/react-native/ReactCommon/jsinspector"
-  react-native-config:
-    :path: "../node_modules/react-native-config"
-  react-native-geolocation:
-    :path: "../node_modules/@react-native-community/geolocation"
-  react-native-image-picker:
-    :path: "../node_modules/react-native-image-picker"
-  react-native-maps:
-    :path: "../node_modules/react-native-maps"
-  react-native-music-control:
-    :path: "../node_modules/react-native-music-control"
-  react-native-onesignal:
-    :path: "../node_modules/react-native-onesignal"
-  react-native-passkit-wallet:
-    :path: "../node_modules/react-native-passkit-wallet"
-  react-native-safari-view:
-    :path: "../node_modules/react-native-safari-view"
-  react-native-safe-area-context:
-    :path: "../node_modules/react-native-safe-area-context"
-  react-native-splash-screen:
-    :path: "../node_modules/react-native-splash-screen"
-  react-native-video:
-    :path: "../node_modules/react-native-video"
-  react-native-webview:
-    :path: "../node_modules/react-native-webview"
-  React-RCTActionSheet:
-    :path: "../node_modules/react-native/Libraries/ActionSheetIOS"
-  React-RCTAnimation:
-    :path: "../node_modules/react-native/Libraries/NativeAnimation"
-  React-RCTBlob:
-    :path: "../node_modules/react-native/Libraries/Blob"
-  React-RCTImage:
-    :path: "../node_modules/react-native/Libraries/Image"
-  React-RCTLinking:
-    :path: "../node_modules/react-native/Libraries/LinkingIOS"
-  React-RCTNetwork:
-    :path: "../node_modules/react-native/Libraries/Network"
-  React-RCTSettings:
-    :path: "../node_modules/react-native/Libraries/Settings"
-  React-RCTText:
-    :path: "../node_modules/react-native/Libraries/Text"
-  React-RCTVibration:
-    :path: "../node_modules/react-native/Libraries/Vibration"
-  React-RCTWebSocket:
-    :path: "../node_modules/react-native/Libraries/WebSocket"
-  rn-fetch-blob:
-    :path: "../node_modules/rn-fetch-blob"
-  RNAirplay:
-    :path: "../node_modules/@apollosproject/react-native-airplay-btn"
-  RNCAsyncStorage:
-    :path: "../node_modules/@react-native-community/async-storage"
-  RNDeviceInfo:
-    :path: "../node_modules/react-native-device-info"
-  RNGestureHandler:
-    :path: "../node_modules/react-native-gesture-handler"
-  RNInAppBrowser:
-    :path: "../node_modules/react-native-inappbrowser-reborn"
-  RNScreens:
-    :path: "../node_modules/react-native-screens"
-  RNSVG:
-    :path: "../node_modules/react-native-svg"
-  yoga:
-    :path: "../node_modules/react-native/ReactCommon/yoga"
-
-SPEC CHECKSUMS:
-  boost-for-react-native: 39c7adb57c4e60d6c5479dd8623128eb5b3f0f2c
-  BVLinearGradient: 8cbc5155c978f2e43098818c91d206d07aae6d30
-  DoubleConversion: 5805e889d232975c086db112ece9ed034df7a0b2
-  Folly: 30e7936e1c45c08d884aa59369ed951a8e68cf51
-  glog: 1f3da668190260b06b429bb211bfbee5cd790c28
-  OneSignal: 8fb749fa07f88006403c9b659a570fb7fb74519a
-  React: 53c53c4d99097af47cf60594b8706b4e3321e722
-  React-Core: ba421f6b4f4cbe2fb17c0b6fc675f87622e78a64
-  React-cxxreact: 8384287780c4999351ad9b6e7a149d9ed10a2395
-  React-DevSupport: 197fb409737cff2c4f9986e77c220d7452cb9f9f
-  React-jsi: 4d8c9efb6312a9725b18d6fc818ffc103f60fec2
-  React-jsiexecutor: 90ad2f9db09513fc763bc757fdc3c4ff8bde2a30
-  React-jsinspector: e08662d1bf5b129a3d556eb9ea343a3f40353ae4
-  react-native-config: 55548054279d92e0e4566ea15a8b9b81028ec342
-  react-native-geolocation: c956aeb136625c23e0dce0467664af2c437888c9
-  react-native-image-picker: e6e06d4315e3c85bad17e4b2002cd29f11d202c8
-  react-native-maps: 190c02ca533fddac5bb49cf17bdece3644612107
-  react-native-music-control: 700e53dc9b2ec7342f69705243609c1cd644fa44
-  react-native-onesignal: 8958311abbd9125f26e600914e48833b57321cbf
-  react-native-passkit-wallet: 51e3babdaeec4c10b5736786ebd1bfb470fcaa36
-  react-native-safari-view: 955d7160d159241b8e9395d12d10ea0ef863dcdd
-  react-native-safe-area-context: e380a6f783ccaec848e2f3cc8eb205a62362950d
-  react-native-splash-screen: 200d11d188e2e78cea3ad319964f6142b6384865
-  react-native-video: 6555881252c8ca039760e1cd6df28ac28ffb2baf
-  react-native-webview: 3c79685b61a68d1fe99136f98f2f34b04dce2e02
-  React-RCTActionSheet: b0f1ea83f4bf75fb966eae9bfc47b78c8d3efd90
-  React-RCTAnimation: 359ba1b5690b1e87cc173558a78e82d35919333e
-  React-RCTBlob: 5e2b55f76e9a1c7ae52b826923502ddc3238df24
-  React-RCTImage: f5f1c50922164e89bdda67bcd0153952a5cfe719
-  React-RCTLinking: d0ecbd791e9ddddc41fa1f66b0255de90e8ee1e9
-  React-RCTNetwork: e26946300b0ab7bb6c4a6348090e93fa21f33a9d
-  React-RCTSettings: d0d37cb521b7470c998595a44f05847777cc3f42
-  React-RCTText: b074d89033583d4f2eb5faf7ea2db3a13c7553a2
-  React-RCTVibration: 2105b2e0e2b66a6408fc69a46c8a7fb5b2fdade0
-  React-RCTWebSocket: cd932a16b7214898b6b7f788c8bddb3637246ac4
-  rn-fetch-blob: 651b8d076b43d0d7aa294a3d9ec16c00aab8bef9
-  RNAirplay: 75777dd55dafbd3687703c3eb9c290ea6cc43248
-  RNCAsyncStorage: b63d6e83fc629b01df6b624688f17944cea5637f
-  RNDeviceInfo: 75dac2d7cd6b638b512cc9266ce48a39661fed0e
-  RNGestureHandler: 5329a942fce3d41c68b84c2c2276ce06a696d8b0
-  RNInAppBrowser: 9d1ffb9db0d0cbdf03f528f1f0624b2c533b93fd
-  RNScreens: f28b48b8345f2f5f39ed6195518291515032a788
-  RNSVG: 9cb6e958c4b6a1f58185ac72a350b148947d6fed
-  yoga: 312528f5bbbba37b4dcea5ef00e8b4033fdd9411
-
-PODFILE CHECKSUM: d235853c2d054909a0114df39a2529360918990d
-
-COCOAPODS: 1.7.5
diff --git a/apolloschurchapp/ios/apolloschurchapp-tvOS/Info.plist b/apolloschurchapp/ios/apolloschurchapp-tvOS/Info.plist
index e8438c7..097d689 100644
--- a/apolloschurchapp/ios/apolloschurchapp-tvOS/Info.plist
+++ b/apolloschurchapp/ios/apolloschurchapp-tvOS/Info.plist
@@ -15,13 +15,13 @@
 	<key>CFBundlePackageType</key>
 	<string>APPL</string>
 	<key>CFBundleShortVersionString</key>
-	<string>1.2.0</string>
+	<string>0.6.0</string>
 	<key>CFBundleSignature</key>
 	<string>????</string>
 	<key>CFBundleVersion</key>
-	<string>23</string>
+	<string>4</string>
 	<key>LSRequiresIPhoneOS</key>
-	<true />
+	<true/>
 	<key>UILaunchStoryboardName</key>
 	<string>LaunchScreen</string>
 	<key>UIRequiredDeviceCapabilities</key>
@@ -35,9 +35,9 @@
 		<string>UIInterfaceOrientationLandscapeRight</string>
 	</array>
 	<key>UIViewControllerBasedStatusBarAppearance</key>
-	<false />
+	<false/>
 	<key>NSLocationWhenInUseUsageDescription</key>
-	<string />
+	<string/>
 	<key>NSAppTransportSecurity</key>
 	<dict>
 		<key>NSExceptionDomains</key>
@@ -45,7 +45,7 @@
 			<key>localhost</key>
 			<dict>
 				<key>NSExceptionAllowsInsecureHTTPLoads</key>
-				<true />
+				<true/>
 			</dict>
 		</dict>
 	</dict>
diff --git a/apolloschurchapp/ios/apolloschurchapp-tvOSTests/Info.plist b/apolloschurchapp/ios/apolloschurchapp-tvOSTests/Info.plist
index d7c5027..ae0bb6d 100644
--- a/apolloschurchapp/ios/apolloschurchapp-tvOSTests/Info.plist
+++ b/apolloschurchapp/ios/apolloschurchapp-tvOSTests/Info.plist
@@ -15,10 +15,10 @@
 	<key>CFBundlePackageType</key>
 	<string>BNDL</string>
 	<key>CFBundleShortVersionString</key>
-	<string>1.2.0</string>
+	<string>0.6.0</string>
 	<key>CFBundleSignature</key>
 	<string>????</string>
 	<key>CFBundleVersion</key>
-	<string>23</string>
+	<string>4</string>
 </dict>
 </plist>
diff --git a/apolloschurchapp/ios/apolloschurchapp.xcodeproj/project.pbxproj b/apolloschurchapp/ios/apolloschurchapp.xcodeproj/project.pbxproj
index a24c843..6b523bd 100644
--- a/apolloschurchapp/ios/apolloschurchapp.xcodeproj/project.pbxproj
+++ b/apolloschurchapp/ios/apolloschurchapp.xcodeproj/project.pbxproj
@@ -5,39 +5,101 @@
 	};
 	objectVersion = 46;
 	objects = {
-
 /* Begin PBXBuildFile section */
+		00C302E51ABCBA2D00DB3ED1 /* libRCTActionSheet.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 00C302AC1ABCB8CE00DB3ED1 /* libRCTActionSheet.a */; };
+		00C302E71ABCBA2D00DB3ED1 /* libRCTGeolocation.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 00C302BA1ABCB90400DB3ED1 /* libRCTGeolocation.a */; };
+		00C302E81ABCBA2D00DB3ED1 /* libRCTImage.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 00C302C01ABCB91800DB3ED1 /* libRCTImage.a */; };
+		00C302E91ABCBA2D00DB3ED1 /* libRCTNetwork.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 00C302DC1ABCB9D200DB3ED1 /* libRCTNetwork.a */; };
+		00C302EA1ABCBA2D00DB3ED1 /* libRCTVibration.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 00C302E41ABCB9EE00DB3ED1 /* libRCTVibration.a */; };
 		00E356F31AD99517003FC87E /* apolloschurchappTests.m in Sources */ = {isa = PBXBuildFile; fileRef = 00E356F21AD99517003FC87E /* apolloschurchappTests.m */; };
-		01F091B02048490A8F9EF4FE /* Inter-UI-Italic.otf in Resources */ = {isa = PBXBuildFile; fileRef = 63F6EE53A9B44B4388B5F1C2 /* Inter-UI-Italic.otf */; };
-		08CE105F17284254AD54AF84 /* DroidSerif-Bold.ttf in Resources */ = {isa = PBXBuildFile; fileRef = E3B8A0AC5A6B4FABB3BDF6CB /* DroidSerif-Bold.ttf */; };
+		0D4EDF6EBA274F9D93DDED76 /* Inter-UI-MediumItalic.otf in Resources */ = {isa = PBXBuildFile; fileRef = F79112193F3548D284406ABF /* Inter-UI-MediumItalic.otf */; };
+		133E29F31AD74F7200F7D852 /* libRCTLinking.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 78C398B91ACF4ADC00677621 /* libRCTLinking.a */; };
+		139105C61AF99C1200B5F7CC /* libRCTSettings.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 139105C11AF99BAD00B5F7CC /* libRCTSettings.a */; };
+		139FDEF61B0652A700C62182 /* libRCTWebSocket.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 139FDEF41B06529B00C62182 /* libRCTWebSocket.a */; };
 		13B07FBC1A68108700A75B9A /* AppDelegate.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB01A68108700A75B9A /* AppDelegate.m */; };
 		13B07FBD1A68108700A75B9A /* LaunchScreen.xib in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB11A68108700A75B9A /* LaunchScreen.xib */; };
 		13B07FBF1A68108700A75B9A /* Images.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB51A68108700A75B9A /* Images.xcassets */; };
 		13B07FC11A68108700A75B9A /* main.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB71A68108700A75B9A /* main.m */; };
-		1C48DCDE11AC47C48E918489 /* Inter-UI-Medium.otf in Resources */ = {isa = PBXBuildFile; fileRef = DC74A378C1CC40E4B6192D7F /* Inter-UI-Medium.otf */; };
-		25B9E67E3B46D33F45473A84 /* libPods-apolloschurchapp-tvOSTests.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 4F64CCA987A0419EB9C02236 /* libPods-apolloschurchapp-tvOSTests.a */; };
+		140ED2AC1D01E1AD002B40FF /* libReact.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 146834041AC3E56700842450 /* libReact.a */; };
+		146834051AC3E58100842450 /* libReact.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 146834041AC3E56700842450 /* libReact.a */; };
+		1680179655164C96985B5731 /* libMusicControl.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 643D51DCF8F14993B9AA6990 /* libMusicControl.a */; };
+		1C1FD8B313AB4A6583A0D31B /* libRNDeviceInfo.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 14D838A2FAE743C7B1DA5E31 /* libRNDeviceInfo.a */; };
 		2D02E4BC1E0B4A80006451C7 /* AppDelegate.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB01A68108700A75B9A /* AppDelegate.m */; };
 		2D02E4BD1E0B4A84006451C7 /* Images.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB51A68108700A75B9A /* Images.xcassets */; };
 		2D02E4BF1E0B4AB3006451C7 /* main.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB71A68108700A75B9A /* main.m */; };
+		2D02E4C21E0B4AEC006451C7 /* libRCTAnimation.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 5E9157351DD0AC6500FF2AA8 /* libRCTAnimation.a */; };
+		2D02E4C31E0B4AEC006451C7 /* libRCTImage-tvOS.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 3DAD3E841DF850E9000B6D8A /* libRCTImage-tvOS.a */; };
+		2D02E4C41E0B4AEC006451C7 /* libRCTLinking-tvOS.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 3DAD3E881DF850E9000B6D8A /* libRCTLinking-tvOS.a */; };
+		2D02E4C51E0B4AEC006451C7 /* libRCTNetwork-tvOS.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 3DAD3E8C1DF850E9000B6D8A /* libRCTNetwork-tvOS.a */; };
+		2D02E4C61E0B4AEC006451C7 /* libRCTSettings-tvOS.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 3DAD3E901DF850E9000B6D8A /* libRCTSettings-tvOS.a */; };
+		2D02E4C71E0B4AEC006451C7 /* libRCTText-tvOS.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 3DAD3E941DF850E9000B6D8A /* libRCTText-tvOS.a */; };
+		2D02E4C81E0B4AEC006451C7 /* libRCTWebSocket-tvOS.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 3DAD3E991DF850E9000B6D8A /* libRCTWebSocket-tvOS.a */; };
 		2D16E6881FA4F8E400B85C8A /* libReact.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 2D16E6891FA4F8E400B85C8A /* libReact.a */; };
 		2DCD954D1E0B4F2C00145EB5 /* apolloschurchappTests.m in Sources */ = {isa = PBXBuildFile; fileRef = 00E356F21AD99517003FC87E /* apolloschurchappTests.m */; };
-		578FFEC1D7D54C9B871A9E5B /* Inter-UI-BlackItalic.otf in Resources */ = {isa = PBXBuildFile; fileRef = 5A5A2BC2998547F4816B82E4 /* Inter-UI-BlackItalic.otf */; };
-		68D1351E80AA4A2C96288FD9 /* Inter-UI-Black.otf in Resources */ = {isa = PBXBuildFile; fileRef = EC21254B449443F99016EBFD /* Inter-UI-Black.otf */; };
-		7FBC6BC3CE8D48298F9850A9 /* Inter-UI-Bold.otf in Resources */ = {isa = PBXBuildFile; fileRef = D5157D807E164356ADE87867 /* Inter-UI-Bold.otf */; };
-		894732A70B4740678E85B593 /* Inter-UI-BoldItalic.otf in Resources */ = {isa = PBXBuildFile; fileRef = 2F5410F239E9477B9C2E86BD /* Inter-UI-BoldItalic.otf */; };
-		8EA9BDE542E09F685A47D9BE /* libPods-apolloschurchapp-tvOS.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 38B9762ACA099D28C28DBB31 /* libPods-apolloschurchapp-tvOS.a */; };
-		90743C40BF544F10A810C43C /* DroidSerif-Italic.ttf in Resources */ = {isa = PBXBuildFile; fileRef = ADC3D2DB245545ADB1CAB3FE /* DroidSerif-Italic.ttf */; };
-		93A2B0A9328A46A4B7DD5EFA /* DroidSerif-Regular.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 4E007B33EDD74B82AEF02C24 /* DroidSerif-Regular.ttf */; };
-		A415698B9815C7305EDB7AA7 /* libPods-apolloschurchappTests.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 560CBCD50AE7D282715D134E /* libPods-apolloschurchappTests.a */; };
-		AB3BD177B8A14193A5EEDDF8 /* Inter-UI-Regular.otf in Resources */ = {isa = PBXBuildFile; fileRef = A613256118404CB691DE2C8E /* Inter-UI-Regular.otf */; };
-		B02F194A3F6A4FE29AC799B4 /* DroidSerif-BoldItalic.ttf in Resources */ = {isa = PBXBuildFile; fileRef = A93F9D112A034626A9421759 /* DroidSerif-BoldItalic.ttf */; };
-		E875558F3FB8FA2024EF7DC2 /* libPods-apolloschurchapp.a in Frameworks */ = {isa = PBXBuildFile; fileRef = DDB6B5B7B6A0D1ECB68CF0DD /* libPods-apolloschurchapp.a */; };
-		ED297163215061F000B7C4FE /* JavaScriptCore.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = ED297162215061F000B7C4FE /* JavaScriptCore.framework */; };
-		ED2971652150620600B7C4FE /* JavaScriptCore.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = ED2971642150620600B7C4FE /* JavaScriptCore.framework */; };
-		FCB3069DB5DD4170B2CAEFC4 /* Inter-UI-MediumItalic.otf in Resources */ = {isa = PBXBuildFile; fileRef = A460FD7884FD4574A818005A /* Inter-UI-MediumItalic.otf */; };
+		2DF0FFEE2056DD460020B375 /* libReact.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 3DAD3EA31DF850E9000B6D8A /* libReact.a */; };
+		3CAA28FFFCCF46518672AC8F /* libDBCustomTabs.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 71E6499CCC9D4DB2ADD365D8 /* libDBCustomTabs.a */; };
+		417027FD83CA4902AB4DB2B4 /* Inter-UI-Black.otf in Resources */ = {isa = PBXBuildFile; fileRef = 8E13C8F9AE60487C9ED95C21 /* Inter-UI-Black.otf */; };
+		4B29B8AACC2A4FB7BA6A8EEB /* libSafariViewManager.a in Frameworks */ = {isa = PBXBuildFile; fileRef = BF5A2B416EB74A44923FED7B /* libSafariViewManager.a */; };
+		59D8DFA78CDF4642892CC142 /* DroidSerif-BoldItalic.ttf in Resources */ = {isa = PBXBuildFile; fileRef = D979B537509247C099CE3F24 /* DroidSerif-BoldItalic.ttf */; };
+		5CA1D8E805684478B04ABB60 /* Inter-UI-Italic.otf in Resources */ = {isa = PBXBuildFile; fileRef = 8CA3C04F98954FB2895CD36D /* Inter-UI-Italic.otf */; };
+		5E9157361DD0AC6A00FF2AA8 /* libRCTAnimation.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 5E9157331DD0AC6500FF2AA8 /* libRCTAnimation.a */; };
+		6C6BE3C2189E4FBA9FB66BE5 /* libRCTOneSignal.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 828255630B3246AEA19CF24D /* libRCTOneSignal.a */; };
+		6E4442FB39BE4F898DE4C454 /* Inter-UI-BlackItalic.otf in Resources */ = {isa = PBXBuildFile; fileRef = 22246A6BC58E4CF09A22A4DF /* Inter-UI-BlackItalic.otf */; };
+		7D060CA312AB4E828CD60DDC /* Inter-UI-Regular.otf in Resources */ = {isa = PBXBuildFile; fileRef = 10F42B11F27E467A8C71C280 /* Inter-UI-Regular.otf */; };
+		832341BD1AAA6AB300B99B32 /* libRCTText.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 832341B51AAA6A8300B99B32 /* libRCTText.a */; };
+		86D0B47B5BF143E797822EF1 /* libRCTVideo.a in Frameworks */ = {isa = PBXBuildFile; fileRef = FC8FFB7C37BB4499AEB6FA37 /* libRCTVideo.a */; };
+		89331B8BDAF24EF5BE08A485 /* libRNSVG.a in Frameworks */ = {isa = PBXBuildFile; fileRef = CFAF46FBA8B44C7B8DCA7707 /* libRNSVG.a */; };
+		9388C44B949C4DBAAA7256D5 /* libBVLinearGradient.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 60E52391C9744A46B3925A78 /* libBVLinearGradient.a */; };
+		9ACBD642B18D41C9BB1E4D9E /* DroidSerif-Italic.ttf in Resources */ = {isa = PBXBuildFile; fileRef = F9CFD638A5414DFF961A8D11 /* DroidSerif-Italic.ttf */; };
+		A173C226549E48B991AC5D98 /* Inter-UI-Medium.otf in Resources */ = {isa = PBXBuildFile; fileRef = 9FD7D997F4F14C439AC699B3 /* Inter-UI-Medium.otf */; };
+		AB7B2136E56C4B40B64F9C87 /* libMusicControl-tvOS.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 67E66409EF8A4BC7A1B9E054 /* libMusicControl-tvOS.a */; };
+		AC4174D90AD644A28D0CA9D9 /* libRNDeviceInfo-tvOS.a in Frameworks */ = {isa = PBXBuildFile; fileRef = A574C961754742F688E43151 /* libRNDeviceInfo-tvOS.a */; };
+		ADBDB9381DFEBF1600ED6528 /* libRCTBlob.a in Frameworks */ = {isa = PBXBuildFile; fileRef = ADBDB9271DFEBF0700ED6528 /* libRCTBlob.a */; };
+		B5DE58C6CF1E4E7ABDD1B48D /* libRNImagePicker.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 3F58D699A37B432BA1C0F092 /* libRNImagePicker.a */; };
+		C87CA8735EEB43C4A55CB285 /* DroidSerif-Bold.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 4629759169AB4756B447B16A /* DroidSerif-Bold.ttf */; };
+		D5744BF3B41D4BC49F93CD68 /* DroidSerif-Regular.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 76E6AD5294554A5FA53DB415 /* DroidSerif-Regular.ttf */; };
+		DEF13113111A40DF8F4FEB13 /* libRNSVG-tvOS.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 84716CBFF56347BA880A16C6 /* libRNSVG-tvOS.a */; };
+		E374C61F2AAF41D3B615AB44 /* Inter-UI-BoldItalic.otf in Resources */ = {isa = PBXBuildFile; fileRef = 32A467E2C3364ABDBB7BD0D1 /* Inter-UI-BoldItalic.otf */; };
+		F3F4A3D13570438F9562746F /* libSplashScreen.a in Frameworks */ = {isa = PBXBuildFile; fileRef = F08D1EBF0C2A4E6798AA8F36 /* libSplashScreen.a */; };
+		F8FAD93CCE5641A8B87611EA /* Inter-UI-Bold.otf in Resources */ = {isa = PBXBuildFile; fileRef = FB25CB02F40D4CC39DDA3C74 /* Inter-UI-Bold.otf */; };
 /* End PBXBuildFile section */
 
 /* Begin PBXContainerItemProxy section */
+		00C302AB1ABCB8CE00DB3ED1 /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 00C302A71ABCB8CE00DB3ED1 /* RCTActionSheet.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 134814201AA4EA6300B7C361;
+			remoteInfo = RCTActionSheet;
+		};
+		00C302B91ABCB90400DB3ED1 /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 00C302B51ABCB90400DB3ED1 /* RCTGeolocation.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 134814201AA4EA6300B7C361;
+			remoteInfo = RCTGeolocation;
+		};
+		00C302BF1ABCB91800DB3ED1 /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 00C302BB1ABCB91800DB3ED1 /* RCTImage.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 58B5115D1A9E6B3D00147676;
+			remoteInfo = RCTImage;
+		};
+		00C302DB1ABCB9D200DB3ED1 /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 00C302D31ABCB9D200DB3ED1 /* RCTNetwork.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 58B511DB1A9E6C8500147676;
+			remoteInfo = RCTNetwork;
+		};
+		00C302E31ABCB9EE00DB3ED1 /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 00C302DF1ABCB9EE00DB3ED1 /* RCTVibration.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 832C81801AAF6DEF007FA2F7;
+			remoteInfo = RCTVibration;
+		};
 		00E356F41AD99517003FC87E /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
 			containerPortal = 83CBB9F71A601CBA00E9B192 /* Project object */;
@@ -45,6 +107,27 @@
 			remoteGlobalIDString = 13B07F861A680F5B00A75B9A;
 			remoteInfo = apolloschurchapp;
 		};
+		139105C01AF99BAD00B5F7CC /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 139105B61AF99BAD00B5F7CC /* RCTSettings.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 134814201AA4EA6300B7C361;
+			remoteInfo = RCTSettings;
+		};
+		139FDEF31B06529B00C62182 /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 139FDEE61B06529A00C62182 /* RCTWebSocket.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 3C86DF461ADF2C930047B81A;
+			remoteInfo = RCTWebSocket;
+		};
+		146834031AC3E56700842450 /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 83CBBA2E1A601D0E00E9B192;
+			remoteInfo = React;
+		};
 		2D02E4911E0B4A5D006451C7 /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
 			containerPortal = 83CBB9F71A601CBA00E9B192 /* Project object */;
@@ -52,14 +135,343 @@
 			remoteGlobalIDString = 2D02E47A1E0B4A5D006451C7;
 			remoteInfo = "apolloschurchapp-tvOS";
 		};
+		2D16E6711FA4F8DC00B85C8A /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = ADBDB91F1DFEBF0600ED6528 /* RCTBlob.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = ADD01A681E09402E00F6D226;
+			remoteInfo = "RCTBlob-tvOS";
+		};
+		2D16E6831FA4F8DC00B85C8A /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 139FDEE61B06529A00C62182 /* RCTWebSocket.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 3DBE0D001F3B181A0099AA32;
+			remoteInfo = fishhook;
+		};
+		2D16E6851FA4F8DC00B85C8A /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 139FDEE61B06529A00C62182 /* RCTWebSocket.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 3DBE0D0D1F3B181C0099AA32;
+			remoteInfo = "fishhook-tvOS";
+		};
+		2DF0FFDE2056DD460020B375 /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = EBF21BDC1FC498900052F4D5;
+			remoteInfo = jsinspector;
+		};
+		2DF0FFE02056DD460020B375 /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = EBF21BFA1FC4989A0052F4D5;
+			remoteInfo = "jsinspector-tvOS";
+		};
+		2DF0FFE22056DD460020B375 /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 139D7ECE1E25DB7D00323FB7;
+			remoteInfo = "third-party";
+		};
+		2DF0FFE42056DD460020B375 /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 3D383D3C1EBD27B6005632C8;
+			remoteInfo = "third-party-tvOS";
+		};
+		2DF0FFE62056DD460020B375 /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 139D7E881E25C6D100323FB7;
+			remoteInfo = "double-conversion";
+		};
+		2DF0FFE82056DD460020B375 /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 3D383D621EBD27B9005632C8;
+			remoteInfo = "double-conversion-tvOS";
+		};
+		2DF0FFEA2056DD460020B375 /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 9936F3131F5F2E4B0010BF04;
+			remoteInfo = privatedata;
+		};
+		2DF0FFEC2056DD460020B375 /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 9936F32F1F5F2E5B0010BF04;
+			remoteInfo = "privatedata-tvOS";
+		};
+		3DAD3E831DF850E9000B6D8A /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 00C302BB1ABCB91800DB3ED1 /* RCTImage.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 2D2A283A1D9B042B00D4039D;
+			remoteInfo = "RCTImage-tvOS";
+		};
+		3DAD3E871DF850E9000B6D8A /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 78C398B01ACF4ADC00677621 /* RCTLinking.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 2D2A28471D9B043800D4039D;
+			remoteInfo = "RCTLinking-tvOS";
+		};
+		3DAD3E8B1DF850E9000B6D8A /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 00C302D31ABCB9D200DB3ED1 /* RCTNetwork.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 2D2A28541D9B044C00D4039D;
+			remoteInfo = "RCTNetwork-tvOS";
+		};
+		3DAD3E8F1DF850E9000B6D8A /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 139105B61AF99BAD00B5F7CC /* RCTSettings.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 2D2A28611D9B046600D4039D;
+			remoteInfo = "RCTSettings-tvOS";
+		};
+		3DAD3E931DF850E9000B6D8A /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 832341B01AAA6A8300B99B32 /* RCTText.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 2D2A287B1D9B048500D4039D;
+			remoteInfo = "RCTText-tvOS";
+		};
+		3DAD3E981DF850E9000B6D8A /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 139FDEE61B06529A00C62182 /* RCTWebSocket.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 2D2A28881D9B049200D4039D;
+			remoteInfo = "RCTWebSocket-tvOS";
+		};
+		3DAD3EA21DF850E9000B6D8A /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 2D2A28131D9B038B00D4039D;
+			remoteInfo = "React-tvOS";
+		};
+		3DAD3EA41DF850E9000B6D8A /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 3D3C059A1DE3340900C268FA;
+			remoteInfo = yoga;
+		};
+		3DAD3EA61DF850E9000B6D8A /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 3D3C06751DE3340C00C268FA;
+			remoteInfo = "yoga-tvOS";
+		};
+		3DAD3EA81DF850E9000B6D8A /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 3D3CD9251DE5FBEC00167DC4;
+			remoteInfo = cxxreact;
+		};
+		3DAD3EAA1DF850E9000B6D8A /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 3D3CD9321DE5FBEE00167DC4;
+			remoteInfo = "cxxreact-tvOS";
+		};
+		3DAD3EAC1DF850E9000B6D8A /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 3D3CD90B1DE5FBD600167DC4;
+			remoteInfo = jschelpers;
+		};
+		3DAD3EAE1DF850E9000B6D8A /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 146833FF1AC3E56700842450 /* React.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 3D3CD9181DE5FBD800167DC4;
+			remoteInfo = "jschelpers-tvOS";
+		};
+		427787EC2149B96A0045AD7F /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 84B340CC6C3940A782834F00 /* RCTOneSignal.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 3245CDED1BFEE35C00EABF68;
+			remoteInfo = RCTOneSignal;
+		};
+		5E9157321DD0AC6500FF2AA8 /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 5E91572D1DD0AC6500FF2AA8 /* RCTAnimation.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 134814201AA4EA6300B7C361;
+			remoteInfo = RCTAnimation;
+		};
+		5E9157341DD0AC6500FF2AA8 /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 5E91572D1DD0AC6500FF2AA8 /* RCTAnimation.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 2D2A28201D9B03D100D4039D;
+			remoteInfo = "RCTAnimation-tvOS";
+		};
+		78C398B81ACF4ADC00677621 /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 78C398B01ACF4ADC00677621 /* RCTLinking.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 134814201AA4EA6300B7C361;
+			remoteInfo = RCTLinking;
+		};
+		791434762126017B006F13B7 /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 46704FC4FCEB45B6B9DD92BB /* BVLinearGradient.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 134814201AA4EA6300B7C361;
+			remoteInfo = BVLinearGradient;
+		};
+		791434782126017B006F13B7 /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 46704FC4FCEB45B6B9DD92BB /* BVLinearGradient.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 64AA15081EF7F30100718508;
+			remoteInfo = "BVLinearGradient-tvOS";
+		};
+		7914347C2126017B006F13B7 /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 2F8741F0746D4C8A89970C4D /* RCTVideo.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 134814201AA4EA6300B7C361;
+			remoteInfo = RCTVideo;
+		};
+		7914347E2126017B006F13B7 /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 2F8741F0746D4C8A89970C4D /* RCTVideo.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 641E28441F0EEC8500443AF6;
+			remoteInfo = "RCTVideo-tvOS";
+		};
+		791434812126017B006F13B7 /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 6BAAC994942548609D0EEECA /* ReactNativeCustomTabs.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = DA7118681CC9158A0087DF95;
+			remoteInfo = DBCustomTabs;
+		};
+		791434852126017B006F13B7 /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 01441BF099BE44EE8BA8E390 /* RNSVG.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 0CF68AC11AF0540F00FF9E5C;
+			remoteInfo = RNSVG;
+		};
+		791434872126017B006F13B7 /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 01441BF099BE44EE8BA8E390 /* RNSVG.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 94DDAC5C1F3D024300EED511;
+			remoteInfo = "RNSVG-tvOS";
+		};
+		7914348A2126017B006F13B7 /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 6B6E5A404A4B4A34B18D7D34 /* SafariViewManager.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 134814201AA4EA6300B7C361;
+			remoteInfo = SafariViewManager;
+		};
+		7914348D2126017B006F13B7 /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = A64D00F181AE4927A4632B6E /* SplashScreen.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 3D7682761D8E76B80014119E;
+			remoteInfo = SplashScreen;
+		};
+		796F2532212CAD5D00C6935E /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 239ECFF08FA841B99DB1CAFA /* RNDeviceInfo.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = DA5891D81BA9A9FC002B4DB2;
+			remoteInfo = RNDeviceInfo;
+		};
+		796F2534212CAD5D00C6935E /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 239ECFF08FA841B99DB1CAFA /* RNDeviceInfo.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = E72EC1401F7ABB5A0001BC90;
+			remoteInfo = "RNDeviceInfo-tvOS";
+		};
+		797304182146322D00F6E05B /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 4BD3C4E6742F4F6380640CA9 /* MusicControl.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 134814201AA4EA6300B7C361;
+			remoteInfo = MusicControl;
+		};
+		7973041A2146322D00F6E05B /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 4BD3C4E6742F4F6380640CA9 /* MusicControl.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = A3FC285E1EA7A8350097B6A9;
+			remoteInfo = "MusicControl-tvOS";
+		};
+		832341B41AAA6A8300B99B32 /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 832341B01AAA6A8300B99B32 /* RCTText.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 58B5119B1A9E6C1200147676;
+			remoteInfo = RCTText;
+		};
+		ADBDB9261DFEBF0700ED6528 /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = ADBDB91F1DFEBF0600ED6528 /* RCTBlob.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 358F4ED71D1E81A9004DF814;
+			remoteInfo = RCTBlob;
+		};
+		BF9931702138673B0077FD20 /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 3BD7DCDF7B194D7BB9BE3C6C /* RNImagePicker.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 014A3B5C1C6CF33500B6D375;
+			remoteInfo = RNImagePicker;
+		};
 /* End PBXContainerItemProxy section */
 
+/* Begin PBXCopyFilesBuildPhase section */
+		4217B141214ADBC00034808C /* Embed App Extensions */ = {
+			isa = PBXCopyFilesBuildPhase;
+			buildActionMask = 2147483647;
+			dstPath = "";
+			dstSubfolderSpec = 13;
+			files = (
+			);
+			name = "Embed App Extensions";
+			runOnlyForDeploymentPostprocessing = 0;
+		};
+/* End PBXCopyFilesBuildPhase section */
+
 /* Begin PBXFileReference section */
 		008F07F21AC5B25A0029DE68 /* main.jsbundle */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = main.jsbundle; sourceTree = "<group>"; };
+		00C302A71ABCB8CE00DB3ED1 /* RCTActionSheet.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = RCTActionSheet.xcodeproj; path = "../node_modules/react-native/Libraries/ActionSheetIOS/RCTActionSheet.xcodeproj"; sourceTree = "<group>"; };
+		00C302B51ABCB90400DB3ED1 /* RCTGeolocation.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = RCTGeolocation.xcodeproj; path = "../node_modules/react-native/Libraries/Geolocation/RCTGeolocation.xcodeproj"; sourceTree = "<group>"; };
+		00C302BB1ABCB91800DB3ED1 /* RCTImage.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = RCTImage.xcodeproj; path = "../node_modules/react-native/Libraries/Image/RCTImage.xcodeproj"; sourceTree = "<group>"; };
+		00C302D31ABCB9D200DB3ED1 /* RCTNetwork.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = RCTNetwork.xcodeproj; path = "../node_modules/react-native/Libraries/Network/RCTNetwork.xcodeproj"; sourceTree = "<group>"; };
+		00C302DF1ABCB9EE00DB3ED1 /* RCTVibration.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = RCTVibration.xcodeproj; path = "../node_modules/react-native/Libraries/Vibration/RCTVibration.xcodeproj"; sourceTree = "<group>"; };
 		00E356EE1AD99517003FC87E /* apolloschurchappTests.xctest */ = {isa = PBXFileReference; explicitFileType = wrapper.cfbundle; includeInIndex = 0; path = apolloschurchappTests.xctest; sourceTree = BUILT_PRODUCTS_DIR; };
 		00E356F11AD99517003FC87E /* Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; path = Info.plist; sourceTree = "<group>"; };
 		00E356F21AD99517003FC87E /* apolloschurchappTests.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; path = apolloschurchappTests.m; sourceTree = "<group>"; };
-		0D480D95FC7F4569B8B934E3 /* libRCTOneSignal.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libRCTOneSignal.a; sourceTree = "<group>"; };
+		01441BF099BE44EE8BA8E390 /* RNSVG.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = RNSVG.xcodeproj; path = "../node_modules/react-native-svg/ios/RNSVG.xcodeproj"; sourceTree = "<group>"; };
+		10F42B11F27E467A8C71C280 /* Inter-UI-Regular.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-Regular.otf"; path = "../assets/fonts/Inter-UI-Regular.otf"; sourceTree = "<group>"; };
+		139105B61AF99BAD00B5F7CC /* RCTSettings.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = RCTSettings.xcodeproj; path = "../node_modules/react-native/Libraries/Settings/RCTSettings.xcodeproj"; sourceTree = "<group>"; };
+		139FDEE61B06529A00C62182 /* RCTWebSocket.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = RCTWebSocket.xcodeproj; path = "../node_modules/react-native/Libraries/WebSocket/RCTWebSocket.xcodeproj"; sourceTree = "<group>"; };
 		13B07F961A680F5B00A75B9A /* apolloschurchapp.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = apolloschurchapp.app; sourceTree = BUILT_PRODUCTS_DIR; };
 		13B07FAF1A68108700A75B9A /* AppDelegate.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = AppDelegate.h; path = apolloschurchapp/AppDelegate.h; sourceTree = "<group>"; };
 		13B07FB01A68108700A75B9A /* AppDelegate.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; name = AppDelegate.m; path = apolloschurchapp/AppDelegate.m; sourceTree = "<group>"; };
@@ -67,35 +479,50 @@
 		13B07FB51A68108700A75B9A /* Images.xcassets */ = {isa = PBXFileReference; lastKnownFileType = folder.assetcatalog; name = Images.xcassets; path = apolloschurchapp/Images.xcassets; sourceTree = "<group>"; };
 		13B07FB61A68108700A75B9A /* Info.plist */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.xml; name = Info.plist; path = apolloschurchapp/Info.plist; sourceTree = "<group>"; };
 		13B07FB71A68108700A75B9A /* main.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; name = main.m; path = apolloschurchapp/main.m; sourceTree = "<group>"; };
-		1F8F5BC4745C8F22C695573D /* Pods-apolloschurchapp.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-apolloschurchapp.release.xcconfig"; path = "Target Support Files/Pods-apolloschurchapp/Pods-apolloschurchapp.release.xcconfig"; sourceTree = "<group>"; };
+		146833FF1AC3E56700842450 /* React.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = React.xcodeproj; path = "../node_modules/react-native/React/React.xcodeproj"; sourceTree = "<group>"; };
+		14D838A2FAE743C7B1DA5E31 /* libRNDeviceInfo.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libRNDeviceInfo.a; sourceTree = "<group>"; };
+		22246A6BC58E4CF09A22A4DF /* Inter-UI-BlackItalic.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-BlackItalic.otf"; path = "../assets/fonts/Inter-UI-BlackItalic.otf"; sourceTree = "<group>"; };
+		239ECFF08FA841B99DB1CAFA /* RNDeviceInfo.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = RNDeviceInfo.xcodeproj; path = "../node_modules/react-native-device-info/ios/RNDeviceInfo.xcodeproj"; sourceTree = "<group>"; };
 		2D02E47B1E0B4A5D006451C7 /* apolloschurchapp-tvOS.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = "apolloschurchapp-tvOS.app"; sourceTree = BUILT_PRODUCTS_DIR; };
 		2D02E4901E0B4A5D006451C7 /* apolloschurchapp-tvOSTests.xctest */ = {isa = PBXFileReference; explicitFileType = wrapper.cfbundle; includeInIndex = 0; path = "apolloschurchapp-tvOSTests.xctest"; sourceTree = BUILT_PRODUCTS_DIR; };
 		2D16E6891FA4F8E400B85C8A /* libReact.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; path = libReact.a; sourceTree = BUILT_PRODUCTS_DIR; };
-		2F5410F239E9477B9C2E86BD /* Inter-UI-BoldItalic.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-BoldItalic.otf"; path = "../assets/fonts/Inter-UI-BoldItalic.otf"; sourceTree = "<group>"; };
-		38B9762ACA099D28C28DBB31 /* libPods-apolloschurchapp-tvOS.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-apolloschurchapp-tvOS.a"; sourceTree = BUILT_PRODUCTS_DIR; };
-		4E007B33EDD74B82AEF02C24 /* DroidSerif-Regular.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "DroidSerif-Regular.ttf"; path = "../assets/fonts/DroidSerif-Regular.ttf"; sourceTree = "<group>"; };
-		4F64CCA987A0419EB9C02236 /* libPods-apolloschurchapp-tvOSTests.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-apolloschurchapp-tvOSTests.a"; sourceTree = BUILT_PRODUCTS_DIR; };
-		54F271B8EB67A4997A2C7D96 /* Pods-apolloschurchapp.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-apolloschurchapp.debug.xcconfig"; path = "Target Support Files/Pods-apolloschurchapp/Pods-apolloschurchapp.debug.xcconfig"; sourceTree = "<group>"; };
-		560CBCD50AE7D282715D134E /* libPods-apolloschurchappTests.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-apolloschurchappTests.a"; sourceTree = BUILT_PRODUCTS_DIR; };
-		5A5A2BC2998547F4816B82E4 /* Inter-UI-BlackItalic.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-BlackItalic.otf"; path = "../assets/fonts/Inter-UI-BlackItalic.otf"; sourceTree = "<group>"; };
-		63F6EE53A9B44B4388B5F1C2 /* Inter-UI-Italic.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-Italic.otf"; path = "../assets/fonts/Inter-UI-Italic.otf"; sourceTree = "<group>"; };
-		745C835CA2F1E1EC2425152A /* Pods-apolloschurchapp-tvOS.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-apolloschurchapp-tvOS.debug.xcconfig"; path = "Target Support Files/Pods-apolloschurchapp-tvOS/Pods-apolloschurchapp-tvOS.debug.xcconfig"; sourceTree = "<group>"; };
-		A460FD7884FD4574A818005A /* Inter-UI-MediumItalic.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-MediumItalic.otf"; path = "../assets/fonts/Inter-UI-MediumItalic.otf"; sourceTree = "<group>"; };
-		A613256118404CB691DE2C8E /* Inter-UI-Regular.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-Regular.otf"; path = "../assets/fonts/Inter-UI-Regular.otf"; sourceTree = "<group>"; };
-		A93F9D112A034626A9421759 /* DroidSerif-BoldItalic.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "DroidSerif-BoldItalic.ttf"; path = "../assets/fonts/DroidSerif-BoldItalic.ttf"; sourceTree = "<group>"; };
-		AB44FC16DED929081698EDFD /* Pods-apolloschurchappTests.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-apolloschurchappTests.debug.xcconfig"; path = "Target Support Files/Pods-apolloschurchappTests/Pods-apolloschurchappTests.debug.xcconfig"; sourceTree = "<group>"; };
-		ADC3D2DB245545ADB1CAB3FE /* DroidSerif-Italic.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "DroidSerif-Italic.ttf"; path = "../assets/fonts/DroidSerif-Italic.ttf"; sourceTree = "<group>"; };
-		AE85030F59F256E90D5A4C2B /* Pods-apolloschurchapp-tvOS.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-apolloschurchapp-tvOS.release.xcconfig"; path = "Target Support Files/Pods-apolloschurchapp-tvOS/Pods-apolloschurchapp-tvOS.release.xcconfig"; sourceTree = "<group>"; };
-		D394E3064D75710E81C51EB0 /* Pods-apolloschurchapp-tvOSTests.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-apolloschurchapp-tvOSTests.debug.xcconfig"; path = "Target Support Files/Pods-apolloschurchapp-tvOSTests/Pods-apolloschurchapp-tvOSTests.debug.xcconfig"; sourceTree = "<group>"; };
-		D5157D807E164356ADE87867 /* Inter-UI-Bold.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-Bold.otf"; path = "../assets/fonts/Inter-UI-Bold.otf"; sourceTree = "<group>"; };
-		DA9745795726553C6FA9E7A8 /* Pods-apolloschurchapp-tvOSTests.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-apolloschurchapp-tvOSTests.release.xcconfig"; path = "Target Support Files/Pods-apolloschurchapp-tvOSTests/Pods-apolloschurchapp-tvOSTests.release.xcconfig"; sourceTree = "<group>"; };
-		DC74A378C1CC40E4B6192D7F /* Inter-UI-Medium.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-Medium.otf"; path = "../assets/fonts/Inter-UI-Medium.otf"; sourceTree = "<group>"; };
-		DDB6B5B7B6A0D1ECB68CF0DD /* libPods-apolloschurchapp.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-apolloschurchapp.a"; sourceTree = BUILT_PRODUCTS_DIR; };
-		E3B8A0AC5A6B4FABB3BDF6CB /* DroidSerif-Bold.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "DroidSerif-Bold.ttf"; path = "../assets/fonts/DroidSerif-Bold.ttf"; sourceTree = "<group>"; };
-		E98AC9782C338F13632EF710 /* Pods-apolloschurchappTests.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-apolloschurchappTests.release.xcconfig"; path = "Target Support Files/Pods-apolloschurchappTests/Pods-apolloschurchappTests.release.xcconfig"; sourceTree = "<group>"; };
-		EC21254B449443F99016EBFD /* Inter-UI-Black.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-Black.otf"; path = "../assets/fonts/Inter-UI-Black.otf"; sourceTree = "<group>"; };
-		ED297162215061F000B7C4FE /* JavaScriptCore.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = JavaScriptCore.framework; path = System/Library/Frameworks/JavaScriptCore.framework; sourceTree = SDKROOT; };
-		ED2971642150620600B7C4FE /* JavaScriptCore.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = JavaScriptCore.framework; path = Platforms/AppleTVOS.platform/Developer/SDKs/AppleTVOS12.0.sdk/System/Library/Frameworks/JavaScriptCore.framework; sourceTree = DEVELOPER_DIR; };
+		2F8741F0746D4C8A89970C4D /* RCTVideo.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = RCTVideo.xcodeproj; path = "../node_modules/react-native-video/ios/RCTVideo.xcodeproj"; sourceTree = "<group>"; };
+		32A467E2C3364ABDBB7BD0D1 /* Inter-UI-BoldItalic.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-BoldItalic.otf"; path = "../assets/fonts/Inter-UI-BoldItalic.otf"; sourceTree = "<group>"; };
+		3BD7DCDF7B194D7BB9BE3C6C /* RNImagePicker.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = RNImagePicker.xcodeproj; path = "../node_modules/react-native-image-picker/ios/RNImagePicker.xcodeproj"; sourceTree = "<group>"; };
+		3F58D699A37B432BA1C0F092 /* libRNImagePicker.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libRNImagePicker.a; sourceTree = "<group>"; };
+		4217B130214ADB740034808C /* apolloschurchapp.entitlements */ = {isa = PBXFileReference; lastKnownFileType = text.plist.entitlements; name = apolloschurchapp.entitlements; path = apolloschurchapp/apolloschurchapp.entitlements; sourceTree = "<group>"; };
+		4217B142214ADCD50034808C /* UIKit.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = UIKit.framework; path = System/Library/Frameworks/UIKit.framework; sourceTree = SDKROOT; };
+		4217B144214ADCE10034808C /* SystemConfiguration.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = SystemConfiguration.framework; path = System/Library/Frameworks/SystemConfiguration.framework; sourceTree = SDKROOT; };
+		4629759169AB4756B447B16A /* DroidSerif-Bold.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "DroidSerif-Bold.ttf"; path = "../assets/fonts/DroidSerif-Bold.ttf"; sourceTree = "<group>"; };
+		46704FC4FCEB45B6B9DD92BB /* BVLinearGradient.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = BVLinearGradient.xcodeproj; path = "../node_modules/react-native-linear-gradient/BVLinearGradient.xcodeproj"; sourceTree = "<group>"; };
+		4BD3C4E6742F4F6380640CA9 /* MusicControl.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = MusicControl.xcodeproj; path = "../node_modules/react-native-music-control/ios/MusicControl.xcodeproj"; sourceTree = "<group>"; };
+		5E91572D1DD0AC6500FF2AA8 /* RCTAnimation.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = RCTAnimation.xcodeproj; path = "../node_modules/react-native/Libraries/NativeAnimation/RCTAnimation.xcodeproj"; sourceTree = "<group>"; };
+		60E52391C9744A46B3925A78 /* libBVLinearGradient.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libBVLinearGradient.a; sourceTree = "<group>"; };
+		643D51DCF8F14993B9AA6990 /* libMusicControl.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libMusicControl.a; sourceTree = "<group>"; };
+		67E66409EF8A4BC7A1B9E054 /* libMusicControl-tvOS.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = "libMusicControl-tvOS.a"; sourceTree = "<group>"; };
+		6B6E5A404A4B4A34B18D7D34 /* SafariViewManager.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = SafariViewManager.xcodeproj; path = "../node_modules/react-native-safari-view/SafariViewManager.xcodeproj"; sourceTree = "<group>"; };
+		6BAAC994942548609D0EEECA /* ReactNativeCustomTabs.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = ReactNativeCustomTabs.xcodeproj; path = "../node_modules/react-native-custom-tabs/ios/ReactNativeCustomTabs.xcodeproj"; sourceTree = "<group>"; };
+		71E6499CCC9D4DB2ADD365D8 /* libDBCustomTabs.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libDBCustomTabs.a; sourceTree = "<group>"; };
+		76E6AD5294554A5FA53DB415 /* DroidSerif-Regular.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "DroidSerif-Regular.ttf"; path = "../assets/fonts/DroidSerif-Regular.ttf"; sourceTree = "<group>"; };
+		78C398B01ACF4ADC00677621 /* RCTLinking.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = RCTLinking.xcodeproj; path = "../node_modules/react-native/Libraries/LinkingIOS/RCTLinking.xcodeproj"; sourceTree = "<group>"; };
+		828255630B3246AEA19CF24D /* libRCTOneSignal.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libRCTOneSignal.a; sourceTree = "<group>"; };
+		832341B01AAA6A8300B99B32 /* RCTText.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = RCTText.xcodeproj; path = "../node_modules/react-native/Libraries/Text/RCTText.xcodeproj"; sourceTree = "<group>"; };
+		84716CBFF56347BA880A16C6 /* libRNSVG-tvOS.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = "libRNSVG-tvOS.a"; sourceTree = "<group>"; };
+		84B340CC6C3940A782834F00 /* RCTOneSignal.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = RCTOneSignal.xcodeproj; path = "../node_modules/react-native-onesignal/ios/RCTOneSignal.xcodeproj"; sourceTree = "<group>"; };
+		8CA3C04F98954FB2895CD36D /* Inter-UI-Italic.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-Italic.otf"; path = "../assets/fonts/Inter-UI-Italic.otf"; sourceTree = "<group>"; };
+		8E13C8F9AE60487C9ED95C21 /* Inter-UI-Black.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-Black.otf"; path = "../assets/fonts/Inter-UI-Black.otf"; sourceTree = "<group>"; };
+		9FD7D997F4F14C439AC699B3 /* Inter-UI-Medium.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-Medium.otf"; path = "../assets/fonts/Inter-UI-Medium.otf"; sourceTree = "<group>"; };
+		A574C961754742F688E43151 /* libRNDeviceInfo-tvOS.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = "libRNDeviceInfo-tvOS.a"; sourceTree = "<group>"; };
+		A64D00F181AE4927A4632B6E /* SplashScreen.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = SplashScreen.xcodeproj; path = "../node_modules/react-native-splash-screen/ios/SplashScreen.xcodeproj"; sourceTree = "<group>"; };
+		ADBDB91F1DFEBF0600ED6528 /* RCTBlob.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = RCTBlob.xcodeproj; path = "../node_modules/react-native/Libraries/Blob/RCTBlob.xcodeproj"; sourceTree = "<group>"; };
+		BF5A2B416EB74A44923FED7B /* libSafariViewManager.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libSafariViewManager.a; sourceTree = "<group>"; };
+		CFAF46FBA8B44C7B8DCA7707 /* libRNSVG.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libRNSVG.a; sourceTree = "<group>"; };
+		D979B537509247C099CE3F24 /* DroidSerif-BoldItalic.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "DroidSerif-BoldItalic.ttf"; path = "../assets/fonts/DroidSerif-BoldItalic.ttf"; sourceTree = "<group>"; };
+		F08D1EBF0C2A4E6798AA8F36 /* libSplashScreen.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libSplashScreen.a; sourceTree = "<group>"; };
+		F79112193F3548D284406ABF /* Inter-UI-MediumItalic.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-MediumItalic.otf"; path = "../assets/fonts/Inter-UI-MediumItalic.otf"; sourceTree = "<group>"; };
+		F9CFD638A5414DFF961A8D11 /* DroidSerif-Italic.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "DroidSerif-Italic.ttf"; path = "../assets/fonts/DroidSerif-Italic.ttf"; sourceTree = "<group>"; };
+		FB25CB02F40D4CC39DDA3C74 /* Inter-UI-Bold.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-Bold.otf"; path = "../assets/fonts/Inter-UI-Bold.otf"; sourceTree = "<group>"; };
+		FC8FFB7C37BB4499AEB6FA37 /* libRCTVideo.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libRCTVideo.a; sourceTree = "<group>"; };
 /* End PBXFileReference section */
 
 /* Begin PBXFrameworksBuildPhase section */
@@ -103,7 +530,7 @@
 			isa = PBXFrameworksBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
-				A415698B9815C7305EDB7AA7 /* libPods-apolloschurchappTests.a in Frameworks */,
+				140ED2AC1D01E1AD002B40FF /* libReact.a in Frameworks */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
@@ -111,8 +538,29 @@
 			isa = PBXFrameworksBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
-				ED297163215061F000B7C4FE /* JavaScriptCore.framework in Frameworks */,
-				E875558F3FB8FA2024EF7DC2 /* libPods-apolloschurchapp.a in Frameworks */,
+				ADBDB9381DFEBF1600ED6528 /* libRCTBlob.a in Frameworks */,
+				5E9157361DD0AC6A00FF2AA8 /* libRCTAnimation.a in Frameworks */,
+				146834051AC3E58100842450 /* libReact.a in Frameworks */,
+				5E9157361DD0AC6A00FF2AA8 /* libRCTAnimation.a in Frameworks */,
+				00C302E51ABCBA2D00DB3ED1 /* libRCTActionSheet.a in Frameworks */,
+				00C302E71ABCBA2D00DB3ED1 /* libRCTGeolocation.a in Frameworks */,
+				00C302E81ABCBA2D00DB3ED1 /* libRCTImage.a in Frameworks */,
+				133E29F31AD74F7200F7D852 /* libRCTLinking.a in Frameworks */,
+				00C302E91ABCBA2D00DB3ED1 /* libRCTNetwork.a in Frameworks */,
+				139105C61AF99C1200B5F7CC /* libRCTSettings.a in Frameworks */,
+				832341BD1AAA6AB300B99B32 /* libRCTText.a in Frameworks */,
+				00C302EA1ABCBA2D00DB3ED1 /* libRCTVibration.a in Frameworks */,
+				139FDEF61B0652A700C62182 /* libRCTWebSocket.a in Frameworks */,
+				3CAA28FFFCCF46518672AC8F /* libDBCustomTabs.a in Frameworks */,
+				9388C44B949C4DBAAA7256D5 /* libBVLinearGradient.a in Frameworks */,
+				4B29B8AACC2A4FB7BA6A8EEB /* libSafariViewManager.a in Frameworks */,
+				F3F4A3D13570438F9562746F /* libSplashScreen.a in Frameworks */,
+				89331B8BDAF24EF5BE08A485 /* libRNSVG.a in Frameworks */,
+				86D0B47B5BF143E797822EF1 /* libRCTVideo.a in Frameworks */,
+				6C6BE3C2189E4FBA9FB66BE5 /* libRCTOneSignal.a in Frameworks */,
+				B5DE58C6CF1E4E7ABDD1B48D /* libRNImagePicker.a in Frameworks */,
+				1C1FD8B313AB4A6583A0D31B /* libRNDeviceInfo.a in Frameworks */,
+				1680179655164C96985B5731 /* libMusicControl.a in Frameworks */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
@@ -120,9 +568,17 @@
 			isa = PBXFrameworksBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
-				ED2971652150620600B7C4FE /* JavaScriptCore.framework in Frameworks */,
 				2D16E6881FA4F8E400B85C8A /* libReact.a in Frameworks */,
-				8EA9BDE542E09F685A47D9BE /* libPods-apolloschurchapp-tvOS.a in Frameworks */,
+				2D02E4C21E0B4AEC006451C7 /* libRCTAnimation.a in Frameworks */,
+				2D02E4C31E0B4AEC006451C7 /* libRCTImage-tvOS.a in Frameworks */,
+				2D02E4C41E0B4AEC006451C7 /* libRCTLinking-tvOS.a in Frameworks */,
+				2D02E4C51E0B4AEC006451C7 /* libRCTNetwork-tvOS.a in Frameworks */,
+				2D02E4C61E0B4AEC006451C7 /* libRCTSettings-tvOS.a in Frameworks */,
+				2D02E4C71E0B4AEC006451C7 /* libRCTText-tvOS.a in Frameworks */,
+				2D02E4C81E0B4AEC006451C7 /* libRCTWebSocket-tvOS.a in Frameworks */,
+				DEF13113111A40DF8F4FEB13 /* libRNSVG-tvOS.a in Frameworks */,
+				AC4174D90AD644A28D0CA9D9 /* libRNDeviceInfo-tvOS.a in Frameworks */,
+				AB7B2136E56C4B40B64F9C87 /* libMusicControl-tvOS.a in Frameworks */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
@@ -130,13 +586,55 @@
 			isa = PBXFrameworksBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
-				25B9E67E3B46D33F45473A84 /* libPods-apolloschurchapp-tvOSTests.a in Frameworks */,
+				2DF0FFEE2056DD460020B375 /* libReact.a in Frameworks */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
 /* End PBXFrameworksBuildPhase section */
 
 /* Begin PBXGroup section */
+		00C302A81ABCB8CE00DB3ED1 /* Products */ = {
+			isa = PBXGroup;
+			children = (
+				00C302AC1ABCB8CE00DB3ED1 /* libRCTActionSheet.a */,
+			);
+			name = Products;
+			sourceTree = "<group>";
+		};
+		00C302B61ABCB90400DB3ED1 /* Products */ = {
+			isa = PBXGroup;
+			children = (
+				00C302BA1ABCB90400DB3ED1 /* libRCTGeolocation.a */,
+			);
+			name = Products;
+			sourceTree = "<group>";
+		};
+		00C302BC1ABCB91800DB3ED1 /* Products */ = {
+			isa = PBXGroup;
+			children = (
+				00C302C01ABCB91800DB3ED1 /* libRCTImage.a */,
+				3DAD3E841DF850E9000B6D8A /* libRCTImage-tvOS.a */,
+			);
+			name = Products;
+			sourceTree = "<group>";
+		};
+		00C302D41ABCB9D200DB3ED1 /* Products */ = {
+			isa = PBXGroup;
+			children = (
+				00C302DC1ABCB9D200DB3ED1 /* libRCTNetwork.a */,
+				3DAD3E8C1DF850E9000B6D8A /* libRCTNetwork-tvOS.a */,
+			);
+			name = Products;
+			sourceTree = "<group>";
+		};
+		00C302E01ABCB9EE00DB3ED1 /* Products */ = {
+			isa = PBXGroup;
+			children = (
+				00C302E41ABCB9EE00DB3ED1 /* libRCTVibration.a */,
+			);
+			name = Products;
+			sourceTree = "<group>";
+		};
 		00E356EF1AD99517003FC87E /* apolloschurchappTests */ = {
 			isa = PBXGroup;
 			children = (
@@ -154,9 +652,30 @@
 			name = "Supporting Files";
 			sourceTree = "<group>";
 		};
+		139105B71AF99BAD00B5F7CC /* Products */ = {
+			isa = PBXGroup;
+			children = (
+				139105C11AF99BAD00B5F7CC /* libRCTSettings.a */,
+				3DAD3E901DF850E9000B6D8A /* libRCTSettings-tvOS.a */,
+			);
+			name = Products;
+			sourceTree = "<group>";
+		};
+		139FDEE71B06529A00C62182 /* Products */ = {
+			isa = PBXGroup;
+			children = (
+				139FDEF41B06529B00C62182 /* libRCTWebSocket.a */,
+				3DAD3E991DF850E9000B6D8A /* libRCTWebSocket-tvOS.a */,
+				2D16E6841FA4F8DC00B85C8A /* libfishhook.a */,
+				2D16E6861FA4F8DC00B85C8A /* libfishhook-tvOS.a */,
+			);
+			name = Products;
+			sourceTree = "<group>";
+		};
 		13B07FAE1A68108700A75B9A /* apolloschurchapp */ = {
 			isa = PBXGroup;
 			children = (
+				4217B130214ADB740034808C /* apolloschurchapp.entitlements */,
 				008F07F21AC5B25A0029DE68 /* main.jsbundle */,
 				13B07FAF1A68108700A75B9A /* AppDelegate.h */,
 				13B07FB01A68108700A75B9A /* AppDelegate.m */,
@@ -168,69 +687,212 @@
 			name = apolloschurchapp;
 			sourceTree = "<group>";
 		};
+		146834001AC3E56700842450 /* Products */ = {
+			isa = PBXGroup;
+			children = (
+				146834041AC3E56700842450 /* libReact.a */,
+				3DAD3EA31DF850E9000B6D8A /* libReact.a */,
+				3DAD3EA51DF850E9000B6D8A /* libyoga.a */,
+				3DAD3EA71DF850E9000B6D8A /* libyoga.a */,
+				3DAD3EA91DF850E9000B6D8A /* libcxxreact.a */,
+				3DAD3EAB1DF850E9000B6D8A /* libcxxreact.a */,
+				3DAD3EAD1DF850E9000B6D8A /* libjschelpers.a */,
+				3DAD3EAF1DF850E9000B6D8A /* libjschelpers.a */,
+				2DF0FFDF2056DD460020B375 /* libjsinspector.a */,
+				2DF0FFE12056DD460020B375 /* libjsinspector-tvOS.a */,
+				2DF0FFE32056DD460020B375 /* libthird-party.a */,
+				2DF0FFE52056DD460020B375 /* libthird-party.a */,
+				2DF0FFE72056DD460020B375 /* libdouble-conversion.a */,
+				2DF0FFE92056DD460020B375 /* libdouble-conversion.a */,
+				2DF0FFEB2056DD460020B375 /* libprivatedata.a */,
+				2DF0FFED2056DD460020B375 /* libprivatedata-tvOS.a */,
+			);
+			name = Products;
+			sourceTree = "<group>";
+		};
 		2D16E6871FA4F8E400B85C8A /* Frameworks */ = {
 			isa = PBXGroup;
 			children = (
-				ED297162215061F000B7C4FE /* JavaScriptCore.framework */,
-				ED2971642150620600B7C4FE /* JavaScriptCore.framework */,
+				4217B144214ADCE10034808C /* SystemConfiguration.framework */,
+				4217B142214ADCD50034808C /* UIKit.framework */,
 				2D16E6891FA4F8E400B85C8A /* libReact.a */,
-				DDB6B5B7B6A0D1ECB68CF0DD /* libPods-apolloschurchapp.a */,
-				38B9762ACA099D28C28DBB31 /* libPods-apolloschurchapp-tvOS.a */,
-				4F64CCA987A0419EB9C02236 /* libPods-apolloschurchapp-tvOSTests.a */,
-				560CBCD50AE7D282715D134E /* libPods-apolloschurchappTests.a */,
 			);
 			name = Frameworks;
 			sourceTree = "<group>";
 		};
-		58D6A3E05A234CD89DC0BCE1 /* Resources */ = {
+		427787E92149B9690045AD7F /* Products */ = {
 			isa = PBXGroup;
 			children = (
-				E3B8A0AC5A6B4FABB3BDF6CB /* DroidSerif-Bold.ttf */,
-				A93F9D112A034626A9421759 /* DroidSerif-BoldItalic.ttf */,
-				ADC3D2DB245545ADB1CAB3FE /* DroidSerif-Italic.ttf */,
-				4E007B33EDD74B82AEF02C24 /* DroidSerif-Regular.ttf */,
-				EC21254B449443F99016EBFD /* Inter-UI-Black.otf */,
-				5A5A2BC2998547F4816B82E4 /* Inter-UI-BlackItalic.otf */,
-				D5157D807E164356ADE87867 /* Inter-UI-Bold.otf */,
-				2F5410F239E9477B9C2E86BD /* Inter-UI-BoldItalic.otf */,
-				63F6EE53A9B44B4388B5F1C2 /* Inter-UI-Italic.otf */,
-				DC74A378C1CC40E4B6192D7F /* Inter-UI-Medium.otf */,
-				A460FD7884FD4574A818005A /* Inter-UI-MediumItalic.otf */,
-				A613256118404CB691DE2C8E /* Inter-UI-Regular.otf */,
+				427787ED2149B96A0045AD7F /* libRCTOneSignal.a */,
+			);
+			name = Products;
+			sourceTree = "<group>";
+		};
+		4446111C6E474E038489E599 /* Resources */ = {
+			isa = PBXGroup;
+			children = (
+				4629759169AB4756B447B16A /* DroidSerif-Bold.ttf */,
+				D979B537509247C099CE3F24 /* DroidSerif-BoldItalic.ttf */,
+				F9CFD638A5414DFF961A8D11 /* DroidSerif-Italic.ttf */,
+				76E6AD5294554A5FA53DB415 /* DroidSerif-Regular.ttf */,
+				8E13C8F9AE60487C9ED95C21 /* Inter-UI-Black.otf */,
+				22246A6BC58E4CF09A22A4DF /* Inter-UI-BlackItalic.otf */,
+				FB25CB02F40D4CC39DDA3C74 /* Inter-UI-Bold.otf */,
+				32A467E2C3364ABDBB7BD0D1 /* Inter-UI-BoldItalic.otf */,
+				8CA3C04F98954FB2895CD36D /* Inter-UI-Italic.otf */,
+				9FD7D997F4F14C439AC699B3 /* Inter-UI-Medium.otf */,
+				F79112193F3548D284406ABF /* Inter-UI-MediumItalic.otf */,
+				10F42B11F27E467A8C71C280 /* Inter-UI-Regular.otf */,
 			);
 			name = Resources;
 			sourceTree = "<group>";
 		};
-		76EC01CF690166B3232686FE /* Pods */ = {
+		5E91572E1DD0AC6500FF2AA8 /* Products */ = {
 			isa = PBXGroup;
 			children = (
-				54F271B8EB67A4997A2C7D96 /* Pods-apolloschurchapp.debug.xcconfig */,
-				1F8F5BC4745C8F22C695573D /* Pods-apolloschurchapp.release.xcconfig */,
-				745C835CA2F1E1EC2425152A /* Pods-apolloschurchapp-tvOS.debug.xcconfig */,
-				AE85030F59F256E90D5A4C2B /* Pods-apolloschurchapp-tvOS.release.xcconfig */,
-				D394E3064D75710E81C51EB0 /* Pods-apolloschurchapp-tvOSTests.debug.xcconfig */,
-				DA9745795726553C6FA9E7A8 /* Pods-apolloschurchapp-tvOSTests.release.xcconfig */,
-				AB44FC16DED929081698EDFD /* Pods-apolloschurchappTests.debug.xcconfig */,
-				E98AC9782C338F13632EF710 /* Pods-apolloschurchappTests.release.xcconfig */,
+				5E9157331DD0AC6500FF2AA8 /* libRCTAnimation.a */,
+				5E9157351DD0AC6500FF2AA8 /* libRCTAnimation.a */,
 			);
-			path = Pods;
+			name = Products;
+			sourceTree = "<group>";
+		};
+		78C398B11ACF4ADC00677621 /* Products */ = {
+			isa = PBXGroup;
+			children = (
+				78C398B91ACF4ADC00677621 /* libRCTLinking.a */,
+				3DAD3E881DF850E9000B6D8A /* libRCTLinking-tvOS.a */,
+			);
+			name = Products;
 			sourceTree = "<group>";
 		};
-		79CEBF9D223011FC00D8F685 /* Recovered References */ = {
+		7914344221260177006F13B7 /* Recovered References */ = {
 			isa = PBXGroup;
 			children = (
-				0D480D95FC7F4569B8B934E3 /* libRCTOneSignal.a */,
+				71E6499CCC9D4DB2ADD365D8 /* libDBCustomTabs.a */,
+				60E52391C9744A46B3925A78 /* libBVLinearGradient.a */,
+				BF5A2B416EB74A44923FED7B /* libSafariViewManager.a */,
+				F08D1EBF0C2A4E6798AA8F36 /* libSplashScreen.a */,
+				CFAF46FBA8B44C7B8DCA7707 /* libRNSVG.a */,
+				FC8FFB7C37BB4499AEB6FA37 /* libRCTVideo.a */,
+				84716CBFF56347BA880A16C6 /* libRNSVG-tvOS.a */,
+				828255630B3246AEA19CF24D /* libRCTOneSignal.a */,
+				3F58D699A37B432BA1C0F092 /* libRNImagePicker.a */,
+				14D838A2FAE743C7B1DA5E31 /* libRNDeviceInfo.a */,
+				A574C961754742F688E43151 /* libRNDeviceInfo-tvOS.a */,
+				643D51DCF8F14993B9AA6990 /* libMusicControl.a */,
+				67E66409EF8A4BC7A1B9E054 /* libMusicControl-tvOS.a */,
+				A3ED0F5641694C579CA8E52D /* libRNBlur.a */,
 			);
 			name = "Recovered References";
 			sourceTree = "<group>";
 		};
+		791434682126017A006F13B7 /* Products */ = {
+			isa = PBXGroup;
+			children = (
+				7914348B2126017B006F13B7 /* libSafariViewManager.a */,
+			);
+			name = Products;
+			sourceTree = "<group>";
+		};
+		7914346A2126017A006F13B7 /* Products */ = {
+			isa = PBXGroup;
+			children = (
+				791434822126017B006F13B7 /* libDBCustomTabs.a */,
+			);
+			name = Products;
+			sourceTree = "<group>";
+		};
+		7914346C2126017A006F13B7 /* Products */ = {
+			isa = PBXGroup;
+			children = (
+				7914348E2126017B006F13B7 /* libSplashScreen.a */,
+			);
+			name = Products;
+			sourceTree = "<group>";
+		};
+		7914346E2126017A006F13B7 /* Products */ = {
+			isa = PBXGroup;
+			children = (
+				791434772126017B006F13B7 /* libBVLinearGradient.a */,
+				791434792126017B006F13B7 /* libBVLinearGradient.a */,
+			);
+			name = Products;
+			sourceTree = "<group>";
+		};
+		791434702126017A006F13B7 /* Products */ = {
+			isa = PBXGroup;
+			children = (
+				791434862126017B006F13B7 /* libRNSVG.a */,
+				791434882126017B006F13B7 /* libRNSVG-tvOS.a */,
+			);
+			name = Products;
+			sourceTree = "<group>";
+		};
+		791434722126017A006F13B7 /* Products */ = {
+			isa = PBXGroup;
+			children = (
+				7914347D2126017B006F13B7 /* libRCTVideo.a */,
+				7914347F2126017B006F13B7 /* libRCTVideo.a */,
+			);
+			name = Products;
+			sourceTree = "<group>";
+		};
+		796F252E212CAD5D00C6935E /* Products */ = {
+			isa = PBXGroup;
+			children = (
+				796F2533212CAD5D00C6935E /* libRNDeviceInfo.a */,
+				796F2535212CAD5D00C6935E /* libRNDeviceInfo-tvOS.a */,
+			);
+			name = Products;
+			sourceTree = "<group>";
+		};
+		797304142146322D00F6E05B /* Products */ = {
+			isa = PBXGroup;
+			children = (
+				797304192146322D00F6E05B /* libMusicControl.a */,
+				7973041B2146322D00F6E05B /* libMusicControl-tvOS.a */,
+			);
+			name = Products;
+			sourceTree = "<group>";
+		};
 		832341AE1AAA6A7D00B99B32 /* Libraries */ = {
 			isa = PBXGroup;
 			children = (
+				5E91572D1DD0AC6500FF2AA8 /* RCTAnimation.xcodeproj */,
+				146833FF1AC3E56700842450 /* React.xcodeproj */,
+				00C302A71ABCB8CE00DB3ED1 /* RCTActionSheet.xcodeproj */,
+				ADBDB91F1DFEBF0600ED6528 /* RCTBlob.xcodeproj */,
+				00C302B51ABCB90400DB3ED1 /* RCTGeolocation.xcodeproj */,
+				00C302BB1ABCB91800DB3ED1 /* RCTImage.xcodeproj */,
+				78C398B01ACF4ADC00677621 /* RCTLinking.xcodeproj */,
+				00C302D31ABCB9D200DB3ED1 /* RCTNetwork.xcodeproj */,
+				139105B61AF99BAD00B5F7CC /* RCTSettings.xcodeproj */,
+				832341B01AAA6A8300B99B32 /* RCTText.xcodeproj */,
+				00C302DF1ABCB9EE00DB3ED1 /* RCTVibration.xcodeproj */,
+				139FDEE61B06529A00C62182 /* RCTWebSocket.xcodeproj */,
+				6BAAC994942548609D0EEECA /* ReactNativeCustomTabs.xcodeproj */,
+				46704FC4FCEB45B6B9DD92BB /* BVLinearGradient.xcodeproj */,
+				6B6E5A404A4B4A34B18D7D34 /* SafariViewManager.xcodeproj */,
+				A64D00F181AE4927A4632B6E /* SplashScreen.xcodeproj */,
+				01441BF099BE44EE8BA8E390 /* RNSVG.xcodeproj */,
+				2F8741F0746D4C8A89970C4D /* RCTVideo.xcodeproj */,
+				84B340CC6C3940A782834F00 /* RCTOneSignal.xcodeproj */,
+				3BD7DCDF7B194D7BB9BE3C6C /* RNImagePicker.xcodeproj */,
+				239ECFF08FA841B99DB1CAFA /* RNDeviceInfo.xcodeproj */,
+				4BD3C4E6742F4F6380640CA9 /* MusicControl.xcodeproj */,
 			);
 			name = Libraries;
 			sourceTree = "<group>";
 		};
+		832341B11AAA6A8300B99B32 /* Products */ = {
+			isa = PBXGroup;
+			children = (
+				832341B51AAA6A8300B99B32 /* libRCTText.a */,
+				3DAD3E941DF850E9000B6D8A /* libRCTText-tvOS.a */,
+			);
+			name = Products;
+			sourceTree = "<group>";
+		};
 		83CBB9F61A601CBA00E9B192 = {
 			isa = PBXGroup;
 			children = (
@@ -239,9 +901,8 @@
 				00E356EF1AD99517003FC87E /* apolloschurchappTests */,
 				83CBBA001A601CBA00E9B192 /* Products */,
 				2D16E6871FA4F8E400B85C8A /* Frameworks */,
-				58D6A3E05A234CD89DC0BCE1 /* Resources */,
-				79CEBF9D223011FC00D8F685 /* Recovered References */,
-				76EC01CF690166B3232686FE /* Pods */,
+				4446111C6E474E038489E599 /* Resources */,
+				7914344221260177006F13B7 /* Recovered References */,
 			);
 			indentWidth = 2;
 			sourceTree = "<group>";
@@ -259,6 +920,23 @@
 			name = Products;
 			sourceTree = "<group>";
 		};
+		ADBDB9201DFEBF0600ED6528 /* Products */ = {
+			isa = PBXGroup;
+			children = (
+				ADBDB9271DFEBF0700ED6528 /* libRCTBlob.a */,
+				2D16E6721FA4F8DC00B85C8A /* libRCTBlob-tvOS.a */,
+			);
+			name = Products;
+			sourceTree = "<group>";
+		};
+		BF99316D2138673B0077FD20 /* Products */ = {
+			isa = PBXGroup;
+			children = (
+				BF9931712138673B0077FD20 /* libRNImagePicker.a */,
+			);
+			name = Products;
+			sourceTree = "<group>";
+		};
 /* End PBXGroup section */
 
 /* Begin PBXNativeTarget section */
@@ -266,7 +944,6 @@
 			isa = PBXNativeTarget;
 			buildConfigurationList = 00E357021AD99517003FC87E /* Build configuration list for PBXNativeTarget "apolloschurchappTests" */;
 			buildPhases = (
-				2C62ED438C51D0F43EC7017B /* [CP] Check Pods Manifest.lock */,
 				00E356EA1AD99517003FC87E /* Sources */,
 				00E356EB1AD99517003FC87E /* Frameworks */,
 				00E356EC1AD99517003FC87E /* Resources */,
@@ -285,11 +962,11 @@
 			isa = PBXNativeTarget;
 			buildConfigurationList = 13B07F931A680F5B00A75B9A /* Build configuration list for PBXNativeTarget "apolloschurchapp" */;
 			buildPhases = (
-				DEEF24CE4F76789E5E8C369D /* [CP] Check Pods Manifest.lock */,
 				13B07F871A680F5B00A75B9A /* Sources */,
 				13B07F8C1A680F5B00A75B9A /* Frameworks */,
 				13B07F8E1A680F5B00A75B9A /* Resources */,
 				00DD1BFF1BD5951E006B06BC /* Bundle React Native code and images */,
+				4217B141214ADBC00034808C /* Embed App Extensions */,
 			);
 			buildRules = (
 			);
@@ -304,7 +981,6 @@
 			isa = PBXNativeTarget;
 			buildConfigurationList = 2D02E4BA1E0B4A5E006451C7 /* Build configuration list for PBXNativeTarget "apolloschurchapp-tvOS" */;
 			buildPhases = (
-				9C20354F160AAF86C8281F23 /* [CP] Check Pods Manifest.lock */,
 				2D02E4771E0B4A5D006451C7 /* Sources */,
 				2D02E4781E0B4A5D006451C7 /* Frameworks */,
 				2D02E4791E0B4A5D006451C7 /* Resources */,
@@ -323,7 +999,6 @@
 			isa = PBXNativeTarget;
 			buildConfigurationList = 2D02E4BB1E0B4A5E006451C7 /* Build configuration list for PBXNativeTarget "apolloschurchapp-tvOSTests" */;
 			buildPhases = (
-				A85CD736CDC3356677735901 /* [CP] Check Pods Manifest.lock */,
 				2D02E48C1E0B4A5D006451C7 /* Sources */,
 				2D02E48D1E0B4A5D006451C7 /* Frameworks */,
 				2D02E48E1E0B4A5D006451C7 /* Resources */,
@@ -344,7 +1019,7 @@
 		83CBB9F71A601CBA00E9B192 /* Project object */ = {
 			isa = PBXProject;
 			attributes = {
-				LastUpgradeCheck = 940;
+				LastUpgradeCheck = 610;
 				ORGANIZATIONNAME = Facebook;
 				TargetAttributes = {
 					00E356ED1AD99517003FC87E = {
@@ -353,7 +1028,11 @@
 					};
 					13B07F861A680F5B00A75B9A = {
 						DevelopmentTeam = 7TM8C6252Z;
-						ProvisioningStyle = Automatic;
+						SystemCapabilities = {
+							com.apple.Push = {
+								enabled = 1;
+							};
+						};
 					};
 					2D02E47A1E0B4A5D006451C7 = {
 						CreatedOnToolsVersion = 8.2.1;
@@ -371,13 +1050,102 @@
 			developmentRegion = English;
 			hasScannedForEncodings = 0;
 			knownRegions = (
-				English,
 				en,
 				Base,
 			);
 			mainGroup = 83CBB9F61A601CBA00E9B192;
 			productRefGroup = 83CBBA001A601CBA00E9B192 /* Products */;
 			projectDirPath = "";
+			projectReferences = (
+				{
+					ProductGroup = 7914346E2126017A006F13B7 /* Products */;
+					ProjectRef = 46704FC4FCEB45B6B9DD92BB /* BVLinearGradient.xcodeproj */;
+				},
+				{
+					ProductGroup = 797304142146322D00F6E05B /* Products */;
+					ProjectRef = 4BD3C4E6742F4F6380640CA9 /* MusicControl.xcodeproj */;
+				},
+				{
+					ProductGroup = 00C302A81ABCB8CE00DB3ED1 /* Products */;
+					ProjectRef = 00C302A71ABCB8CE00DB3ED1 /* RCTActionSheet.xcodeproj */;
+				},
+				{
+					ProductGroup = 5E91572E1DD0AC6500FF2AA8 /* Products */;
+					ProjectRef = 5E91572D1DD0AC6500FF2AA8 /* RCTAnimation.xcodeproj */;
+				},
+				{
+					ProductGroup = ADBDB9201DFEBF0600ED6528 /* Products */;
+					ProjectRef = ADBDB91F1DFEBF0600ED6528 /* RCTBlob.xcodeproj */;
+				},
+				{
+					ProductGroup = 00C302B61ABCB90400DB3ED1 /* Products */;
+					ProjectRef = 00C302B51ABCB90400DB3ED1 /* RCTGeolocation.xcodeproj */;
+				},
+				{
+					ProductGroup = 00C302BC1ABCB91800DB3ED1 /* Products */;
+					ProjectRef = 00C302BB1ABCB91800DB3ED1 /* RCTImage.xcodeproj */;
+				},
+				{
+					ProductGroup = 78C398B11ACF4ADC00677621 /* Products */;
+					ProjectRef = 78C398B01ACF4ADC00677621 /* RCTLinking.xcodeproj */;
+				},
+				{
+					ProductGroup = 00C302D41ABCB9D200DB3ED1 /* Products */;
+					ProjectRef = 00C302D31ABCB9D200DB3ED1 /* RCTNetwork.xcodeproj */;
+				},
+				{
+					ProductGroup = 427787E92149B9690045AD7F /* Products */;
+					ProjectRef = 84B340CC6C3940A782834F00 /* RCTOneSignal.xcodeproj */;
+				},
+				{
+					ProductGroup = 139105B71AF99BAD00B5F7CC /* Products */;
+					ProjectRef = 139105B61AF99BAD00B5F7CC /* RCTSettings.xcodeproj */;
+				},
+				{
+					ProductGroup = 832341B11AAA6A8300B99B32 /* Products */;
+					ProjectRef = 832341B01AAA6A8300B99B32 /* RCTText.xcodeproj */;
+				},
+				{
+					ProductGroup = 00C302E01ABCB9EE00DB3ED1 /* Products */;
+					ProjectRef = 00C302DF1ABCB9EE00DB3ED1 /* RCTVibration.xcodeproj */;
+				},
+				{
+					ProductGroup = 791434722126017A006F13B7 /* Products */;
+					ProjectRef = 2F8741F0746D4C8A89970C4D /* RCTVideo.xcodeproj */;
+				},
+				{
+					ProductGroup = 139FDEE71B06529A00C62182 /* Products */;
+					ProjectRef = 139FDEE61B06529A00C62182 /* RCTWebSocket.xcodeproj */;
+				},
+				{
+					ProductGroup = 146834001AC3E56700842450 /* Products */;
+					ProjectRef = 146833FF1AC3E56700842450 /* React.xcodeproj */;
+				},
+				{
+					ProductGroup = 7914346A2126017A006F13B7 /* Products */;
+					ProjectRef = 6BAAC994942548609D0EEECA /* ReactNativeCustomTabs.xcodeproj */;
+				},
+				{
+					ProductGroup = 796F252E212CAD5D00C6935E /* Products */;
+					ProjectRef = 239ECFF08FA841B99DB1CAFA /* RNDeviceInfo.xcodeproj */;
+				},
+				{
+					ProductGroup = BF99316D2138673B0077FD20 /* Products */;
+					ProjectRef = 3BD7DCDF7B194D7BB9BE3C6C /* RNImagePicker.xcodeproj */;
+				},
+				{
+					ProductGroup = 791434702126017A006F13B7 /* Products */;
+					ProjectRef = 01441BF099BE44EE8BA8E390 /* RNSVG.xcodeproj */;
+				},
+				{
+					ProductGroup = 791434682126017A006F13B7 /* Products */;
+					ProjectRef = 6B6E5A404A4B4A34B18D7D34 /* SafariViewManager.xcodeproj */;
+				},
+				{
+					ProductGroup = 7914346C2126017A006F13B7 /* Products */;
+					ProjectRef = A64D00F181AE4927A4632B6E /* SplashScreen.xcodeproj */;
+				},
+			);
 			projectRoot = "";
 			targets = (
 				13B07F861A680F5B00A75B9A /* apolloschurchapp */,
@@ -388,6 +1156,373 @@
 		};
 /* End PBXProject section */
 
+/* Begin PBXReferenceProxy section */
+		00C302AC1ABCB8CE00DB3ED1 /* libRCTActionSheet.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libRCTActionSheet.a;
+			remoteRef = 00C302AB1ABCB8CE00DB3ED1 /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		00C302BA1ABCB90400DB3ED1 /* libRCTGeolocation.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libRCTGeolocation.a;
+			remoteRef = 00C302B91ABCB90400DB3ED1 /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		00C302C01ABCB91800DB3ED1 /* libRCTImage.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libRCTImage.a;
+			remoteRef = 00C302BF1ABCB91800DB3ED1 /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		00C302DC1ABCB9D200DB3ED1 /* libRCTNetwork.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libRCTNetwork.a;
+			remoteRef = 00C302DB1ABCB9D200DB3ED1 /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		00C302E41ABCB9EE00DB3ED1 /* libRCTVibration.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libRCTVibration.a;
+			remoteRef = 00C302E31ABCB9EE00DB3ED1 /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		139105C11AF99BAD00B5F7CC /* libRCTSettings.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libRCTSettings.a;
+			remoteRef = 139105C01AF99BAD00B5F7CC /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		139FDEF41B06529B00C62182 /* libRCTWebSocket.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libRCTWebSocket.a;
+			remoteRef = 139FDEF31B06529B00C62182 /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		146834041AC3E56700842450 /* libReact.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libReact.a;
+			remoteRef = 146834031AC3E56700842450 /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		2D16E6721FA4F8DC00B85C8A /* libRCTBlob-tvOS.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = "libRCTBlob-tvOS.a";
+			remoteRef = 2D16E6711FA4F8DC00B85C8A /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		2D16E6841FA4F8DC00B85C8A /* libfishhook.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libfishhook.a;
+			remoteRef = 2D16E6831FA4F8DC00B85C8A /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		2D16E6861FA4F8DC00B85C8A /* libfishhook-tvOS.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = "libfishhook-tvOS.a";
+			remoteRef = 2D16E6851FA4F8DC00B85C8A /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		2DF0FFDF2056DD460020B375 /* libjsinspector.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libjsinspector.a;
+			remoteRef = 2DF0FFDE2056DD460020B375 /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		2DF0FFE12056DD460020B375 /* libjsinspector-tvOS.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = "libjsinspector-tvOS.a";
+			remoteRef = 2DF0FFE02056DD460020B375 /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		2DF0FFE32056DD460020B375 /* libthird-party.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = "libthird-party.a";
+			remoteRef = 2DF0FFE22056DD460020B375 /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		2DF0FFE52056DD460020B375 /* libthird-party.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = "libthird-party.a";
+			remoteRef = 2DF0FFE42056DD460020B375 /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		2DF0FFE72056DD460020B375 /* libdouble-conversion.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = "libdouble-conversion.a";
+			remoteRef = 2DF0FFE62056DD460020B375 /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		2DF0FFE92056DD460020B375 /* libdouble-conversion.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = "libdouble-conversion.a";
+			remoteRef = 2DF0FFE82056DD460020B375 /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		2DF0FFEB2056DD460020B375 /* libprivatedata.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libprivatedata.a;
+			remoteRef = 2DF0FFEA2056DD460020B375 /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		2DF0FFED2056DD460020B375 /* libprivatedata-tvOS.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = "libprivatedata-tvOS.a";
+			remoteRef = 2DF0FFEC2056DD460020B375 /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		3DAD3E841DF850E9000B6D8A /* libRCTImage-tvOS.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = "libRCTImage-tvOS.a";
+			remoteRef = 3DAD3E831DF850E9000B6D8A /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		3DAD3E881DF850E9000B6D8A /* libRCTLinking-tvOS.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = "libRCTLinking-tvOS.a";
+			remoteRef = 3DAD3E871DF850E9000B6D8A /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		3DAD3E8C1DF850E9000B6D8A /* libRCTNetwork-tvOS.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = "libRCTNetwork-tvOS.a";
+			remoteRef = 3DAD3E8B1DF850E9000B6D8A /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		3DAD3E901DF850E9000B6D8A /* libRCTSettings-tvOS.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = "libRCTSettings-tvOS.a";
+			remoteRef = 3DAD3E8F1DF850E9000B6D8A /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		3DAD3E941DF850E9000B6D8A /* libRCTText-tvOS.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = "libRCTText-tvOS.a";
+			remoteRef = 3DAD3E931DF850E9000B6D8A /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		3DAD3E991DF850E9000B6D8A /* libRCTWebSocket-tvOS.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = "libRCTWebSocket-tvOS.a";
+			remoteRef = 3DAD3E981DF850E9000B6D8A /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		3DAD3EA31DF850E9000B6D8A /* libReact.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libReact.a;
+			remoteRef = 3DAD3EA21DF850E9000B6D8A /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		3DAD3EA51DF850E9000B6D8A /* libyoga.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libyoga.a;
+			remoteRef = 3DAD3EA41DF850E9000B6D8A /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		3DAD3EA71DF850E9000B6D8A /* libyoga.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libyoga.a;
+			remoteRef = 3DAD3EA61DF850E9000B6D8A /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		3DAD3EA91DF850E9000B6D8A /* libcxxreact.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libcxxreact.a;
+			remoteRef = 3DAD3EA81DF850E9000B6D8A /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		3DAD3EAB1DF850E9000B6D8A /* libcxxreact.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libcxxreact.a;
+			remoteRef = 3DAD3EAA1DF850E9000B6D8A /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		3DAD3EAD1DF850E9000B6D8A /* libjschelpers.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libjschelpers.a;
+			remoteRef = 3DAD3EAC1DF850E9000B6D8A /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		3DAD3EAF1DF850E9000B6D8A /* libjschelpers.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libjschelpers.a;
+			remoteRef = 3DAD3EAE1DF850E9000B6D8A /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		427787ED2149B96A0045AD7F /* libRCTOneSignal.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libRCTOneSignal.a;
+			remoteRef = 427787EC2149B96A0045AD7F /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		5E9157331DD0AC6500FF2AA8 /* libRCTAnimation.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libRCTAnimation.a;
+			remoteRef = 5E9157321DD0AC6500FF2AA8 /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		5E9157351DD0AC6500FF2AA8 /* libRCTAnimation.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libRCTAnimation.a;
+			remoteRef = 5E9157341DD0AC6500FF2AA8 /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		78C398B91ACF4ADC00677621 /* libRCTLinking.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libRCTLinking.a;
+			remoteRef = 78C398B81ACF4ADC00677621 /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		791434772126017B006F13B7 /* libBVLinearGradient.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libBVLinearGradient.a;
+			remoteRef = 791434762126017B006F13B7 /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		791434792126017B006F13B7 /* libBVLinearGradient.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libBVLinearGradient.a;
+			remoteRef = 791434782126017B006F13B7 /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		7914347D2126017B006F13B7 /* libRCTVideo.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libRCTVideo.a;
+			remoteRef = 7914347C2126017B006F13B7 /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		7914347F2126017B006F13B7 /* libRCTVideo.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libRCTVideo.a;
+			remoteRef = 7914347E2126017B006F13B7 /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		791434822126017B006F13B7 /* libDBCustomTabs.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libDBCustomTabs.a;
+			remoteRef = 791434812126017B006F13B7 /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		791434862126017B006F13B7 /* libRNSVG.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libRNSVG.a;
+			remoteRef = 791434852126017B006F13B7 /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		791434882126017B006F13B7 /* libRNSVG-tvOS.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = "libRNSVG-tvOS.a";
+			remoteRef = 791434872126017B006F13B7 /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		7914348B2126017B006F13B7 /* libSafariViewManager.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libSafariViewManager.a;
+			remoteRef = 7914348A2126017B006F13B7 /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		7914348E2126017B006F13B7 /* libSplashScreen.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libSplashScreen.a;
+			remoteRef = 7914348D2126017B006F13B7 /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		796F2533212CAD5D00C6935E /* libRNDeviceInfo.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libRNDeviceInfo.a;
+			remoteRef = 796F2532212CAD5D00C6935E /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		796F2535212CAD5D00C6935E /* libRNDeviceInfo-tvOS.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = "libRNDeviceInfo-tvOS.a";
+			remoteRef = 796F2534212CAD5D00C6935E /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		797304192146322D00F6E05B /* libMusicControl.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libMusicControl.a;
+			remoteRef = 797304182146322D00F6E05B /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		7973041B2146322D00F6E05B /* libMusicControl-tvOS.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = "libMusicControl-tvOS.a";
+			remoteRef = 7973041A2146322D00F6E05B /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		832341B51AAA6A8300B99B32 /* libRCTText.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libRCTText.a;
+			remoteRef = 832341B41AAA6A8300B99B32 /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		ADBDB9271DFEBF0700ED6528 /* libRCTBlob.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libRCTBlob.a;
+			remoteRef = ADBDB9261DFEBF0700ED6528 /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+		BF9931712138673B0077FD20 /* libRNImagePicker.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libRNImagePicker.a;
+			remoteRef = BF9931702138673B0077FD20 /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
+/* End PBXReferenceProxy section */
+
 /* Begin PBXResourcesBuildPhase section */
 		00E356EC1AD99517003FC87E /* Resources */ = {
 			isa = PBXResourcesBuildPhase;
@@ -402,18 +1537,18 @@
 			files = (
 				13B07FBF1A68108700A75B9A /* Images.xcassets in Resources */,
 				13B07FBD1A68108700A75B9A /* LaunchScreen.xib in Resources */,
-				08CE105F17284254AD54AF84 /* DroidSerif-Bold.ttf in Resources */,
-				B02F194A3F6A4FE29AC799B4 /* DroidSerif-BoldItalic.ttf in Resources */,
-				90743C40BF544F10A810C43C /* DroidSerif-Italic.ttf in Resources */,
-				93A2B0A9328A46A4B7DD5EFA /* DroidSerif-Regular.ttf in Resources */,
-				68D1351E80AA4A2C96288FD9 /* Inter-UI-Black.otf in Resources */,
-				578FFEC1D7D54C9B871A9E5B /* Inter-UI-BlackItalic.otf in Resources */,
-				7FBC6BC3CE8D48298F9850A9 /* Inter-UI-Bold.otf in Resources */,
-				894732A70B4740678E85B593 /* Inter-UI-BoldItalic.otf in Resources */,
-				01F091B02048490A8F9EF4FE /* Inter-UI-Italic.otf in Resources */,
-				1C48DCDE11AC47C48E918489 /* Inter-UI-Medium.otf in Resources */,
-				FCB3069DB5DD4170B2CAEFC4 /* Inter-UI-MediumItalic.otf in Resources */,
-				AB3BD177B8A14193A5EEDDF8 /* Inter-UI-Regular.otf in Resources */,
+				C87CA8735EEB43C4A55CB285 /* DroidSerif-Bold.ttf in Resources */,
+				59D8DFA78CDF4642892CC142 /* DroidSerif-BoldItalic.ttf in Resources */,
+				9ACBD642B18D41C9BB1E4D9E /* DroidSerif-Italic.ttf in Resources */,
+				D5744BF3B41D4BC49F93CD68 /* DroidSerif-Regular.ttf in Resources */,
+				417027FD83CA4902AB4DB2B4 /* Inter-UI-Black.otf in Resources */,
+				6E4442FB39BE4F898DE4C454 /* Inter-UI-BlackItalic.otf in Resources */,
+				F8FAD93CCE5641A8B87611EA /* Inter-UI-Bold.otf in Resources */,
+				E374C61F2AAF41D3B615AB44 /* Inter-UI-BoldItalic.otf in Resources */,
+				5CA1D8E805684478B04ABB60 /* Inter-UI-Italic.otf in Resources */,
+				A173C226549E48B991AC5D98 /* Inter-UI-Medium.otf in Resources */,
+				0D4EDF6EBA274F9D93DDED76 /* Inter-UI-MediumItalic.otf in Resources */,
+				7D060CA312AB4E828CD60DDC /* Inter-UI-Regular.otf in Resources */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
@@ -449,28 +1584,6 @@
 			shellPath = /bin/sh;
 			shellScript = "export NODE_BINARY=node\n../node_modules/react-native/scripts/react-native-xcode.sh";
 		};
-		2C62ED438C51D0F43EC7017B /* [CP] Check Pods Manifest.lock */ = {
-			isa = PBXShellScriptBuildPhase;
-			buildActionMask = 2147483647;
-			files = (
-			);
-			inputFileListPaths = (
-			);
-			inputPaths = (
-				"${PODS_PODFILE_DIR_PATH}/Podfile.lock",
-				"${PODS_ROOT}/Manifest.lock",
-			);
-			name = "[CP] Check Pods Manifest.lock";
-			outputFileListPaths = (
-			);
-			outputPaths = (
-				"$(DERIVED_FILE_DIR)/Pods-apolloschurchappTests-checkManifestLockResult.txt",
-			);
-			runOnlyForDeploymentPostprocessing = 0;
-			shellPath = /bin/sh;
-			shellScript = "diff \"${PODS_PODFILE_DIR_PATH}/Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null\nif [ $? != 0 ] ; then\n    # print error to STDERR\n    echo \"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\" >&2\n    exit 1\nfi\n# This output is used by Xcode 'outputs' to avoid re-running this script phase.\necho \"SUCCESS\" > \"${SCRIPT_OUTPUT_FILE_0}\"\n";
-			showEnvVarsInLog = 0;
-		};
 		2D02E4CB1E0B4B27006451C7 /* Bundle React Native Code And Images */ = {
 			isa = PBXShellScriptBuildPhase;
 			buildActionMask = 2147483647;
@@ -485,72 +1598,6 @@
 			shellPath = /bin/sh;
 			shellScript = "export NODE_BINARY=node\n../node_modules/react-native/scripts/react-native-xcode.sh";
 		};
-		9C20354F160AAF86C8281F23 /* [CP] Check Pods Manifest.lock */ = {
-			isa = PBXShellScriptBuildPhase;
-			buildActionMask = 2147483647;
-			files = (
-			);
-			inputFileListPaths = (
-			);
-			inputPaths = (
-				"${PODS_PODFILE_DIR_PATH}/Podfile.lock",
-				"${PODS_ROOT}/Manifest.lock",
-			);
-			name = "[CP] Check Pods Manifest.lock";
-			outputFileListPaths = (
-			);
-			outputPaths = (
-				"$(DERIVED_FILE_DIR)/Pods-apolloschurchapp-tvOS-checkManifestLockResult.txt",
-			);
-			runOnlyForDeploymentPostprocessing = 0;
-			shellPath = /bin/sh;
-			shellScript = "diff \"${PODS_PODFILE_DIR_PATH}/Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null\nif [ $? != 0 ] ; then\n    # print error to STDERR\n    echo \"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\" >&2\n    exit 1\nfi\n# This output is used by Xcode 'outputs' to avoid re-running this script phase.\necho \"SUCCESS\" > \"${SCRIPT_OUTPUT_FILE_0}\"\n";
-			showEnvVarsInLog = 0;
-		};
-		A85CD736CDC3356677735901 /* [CP] Check Pods Manifest.lock */ = {
-			isa = PBXShellScriptBuildPhase;
-			buildActionMask = 2147483647;
-			files = (
-			);
-			inputFileListPaths = (
-			);
-			inputPaths = (
-				"${PODS_PODFILE_DIR_PATH}/Podfile.lock",
-				"${PODS_ROOT}/Manifest.lock",
-			);
-			name = "[CP] Check Pods Manifest.lock";
-			outputFileListPaths = (
-			);
-			outputPaths = (
-				"$(DERIVED_FILE_DIR)/Pods-apolloschurchapp-tvOSTests-checkManifestLockResult.txt",
-			);
-			runOnlyForDeploymentPostprocessing = 0;
-			shellPath = /bin/sh;
-			shellScript = "diff \"${PODS_PODFILE_DIR_PATH}/Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null\nif [ $? != 0 ] ; then\n    # print error to STDERR\n    echo \"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\" >&2\n    exit 1\nfi\n# This output is used by Xcode 'outputs' to avoid re-running this script phase.\necho \"SUCCESS\" > \"${SCRIPT_OUTPUT_FILE_0}\"\n";
-			showEnvVarsInLog = 0;
-		};
-		DEEF24CE4F76789E5E8C369D /* [CP] Check Pods Manifest.lock */ = {
-			isa = PBXShellScriptBuildPhase;
-			buildActionMask = 2147483647;
-			files = (
-			);
-			inputFileListPaths = (
-			);
-			inputPaths = (
-				"${PODS_PODFILE_DIR_PATH}/Podfile.lock",
-				"${PODS_ROOT}/Manifest.lock",
-			);
-			name = "[CP] Check Pods Manifest.lock";
-			outputFileListPaths = (
-			);
-			outputPaths = (
-				"$(DERIVED_FILE_DIR)/Pods-apolloschurchapp-checkManifestLockResult.txt",
-			);
-			runOnlyForDeploymentPostprocessing = 0;
-			shellPath = /bin/sh;
-			shellScript = "diff \"${PODS_PODFILE_DIR_PATH}/Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null\nif [ $? != 0 ] ; then\n    # print error to STDERR\n    echo \"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\" >&2\n    exit 1\nfi\n# This output is used by Xcode 'outputs' to avoid re-running this script phase.\necho \"SUCCESS\" > \"${SCRIPT_OUTPUT_FILE_0}\"\n";
-			showEnvVarsInLog = 0;
-		};
 /* End PBXShellScriptBuildPhase section */
 
 /* Begin PBXSourcesBuildPhase section */
@@ -618,7 +1665,6 @@
 /* Begin XCBuildConfiguration section */
 		00E356F61AD99517003FC87E /* Debug */ = {
 			isa = XCBuildConfiguration;
-			baseConfigurationReference = AB44FC16DED929081698EDFD /* Pods-apolloschurchappTests.debug.xcconfig */;
 			buildSettings = {
 				BUNDLE_LOADER = "$(TEST_HOST)";
 				GCC_PREPROCESSOR_DEFINITIONS = (
@@ -627,17 +1673,27 @@
 				);
 				HEADER_SEARCH_PATHS = (
 					"$(inherited)",
+					"$(SRCROOT)/../node_modules/react-native-custom-tabs/ios/ReactNativeCustomTabs",
+					"$(SRCROOT)/../node_modules/react-native-linear-gradient/BVLinearGradient",
+					"$(SRCROOT)/../node_modules/react-native-safari-view",
+					"$(SRCROOT)/../node_modules/react-native-splash-screen/ios",
+					"$(SRCROOT)/../node_modules/react-native-svg/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-video/ios",
+					"$(SRCROOT)/../node_modules/react-native-onesignal/ios/**",
+					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
+					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
+					"$(SRCROOT)/../node_modules/react-native-music-control/ios",
 				);
 				INFOPLIST_FILE = apolloschurchappTests/Info.plist;
 				IPHONEOS_DEPLOYMENT_TARGET = 9.0;
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @loader_path/Frameworks";
-				LIBRARY_SEARCH_PATHS = "$(inherited)";
+				LIBRARY_SEARCH_PATHS = (
+					"$(inherited)",
+				);
 				OTHER_LDFLAGS = (
 					"-ObjC",
 					"-lc++",
 				);
-				PRODUCT_BUNDLE_IDENTIFIER = "org.reactjs.native.example.$(PRODUCT_NAME:rfc1034identifier)";
 				PRODUCT_NAME = "$(TARGET_NAME)";
 				TEST_HOST = "$(BUILT_PRODUCTS_DIR)/apolloschurchapp.app/apolloschurchapp";
 			};
@@ -645,23 +1701,32 @@
 		};
 		00E356F71AD99517003FC87E /* Release */ = {
 			isa = XCBuildConfiguration;
-			baseConfigurationReference = E98AC9782C338F13632EF710 /* Pods-apolloschurchappTests.release.xcconfig */;
 			buildSettings = {
 				BUNDLE_LOADER = "$(TEST_HOST)";
 				COPY_PHASE_STRIP = NO;
 				HEADER_SEARCH_PATHS = (
 					"$(inherited)",
+					"$(SRCROOT)/../node_modules/react-native-custom-tabs/ios/ReactNativeCustomTabs",
+					"$(SRCROOT)/../node_modules/react-native-linear-gradient/BVLinearGradient",
+					"$(SRCROOT)/../node_modules/react-native-safari-view",
+					"$(SRCROOT)/../node_modules/react-native-splash-screen/ios",
+					"$(SRCROOT)/../node_modules/react-native-svg/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-video/ios",
+					"$(SRCROOT)/../node_modules/react-native-onesignal/ios/**",
+					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
+					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
+					"$(SRCROOT)/../node_modules/react-native-music-control/ios",
 				);
 				INFOPLIST_FILE = apolloschurchappTests/Info.plist;
 				IPHONEOS_DEPLOYMENT_TARGET = 9.0;
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @loader_path/Frameworks";
-				LIBRARY_SEARCH_PATHS = "$(inherited)";
+				LIBRARY_SEARCH_PATHS = (
+					"$(inherited)",
+				);
 				OTHER_LDFLAGS = (
 					"-ObjC",
 					"-lc++",
 				);
-				PRODUCT_BUNDLE_IDENTIFIER = "org.reactjs.native.example.$(PRODUCT_NAME:rfc1034identifier)";
 				PRODUCT_NAME = "$(TARGET_NAME)";
 				TEST_HOST = "$(BUILT_PRODUCTS_DIR)/apolloschurchapp.app/apolloschurchapp";
 			};
@@ -669,15 +1734,25 @@
 		};
 		13B07F941A680F5B00A75B9A /* Debug */ = {
 			isa = XCBuildConfiguration;
-			baseConfigurationReference = 54F271B8EB67A4997A2C7D96 /* Pods-apolloschurchapp.debug.xcconfig */;
 			buildSettings = {
 				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
-				CURRENT_PROJECT_VERSION = 18;
+				CODE_SIGN_ENTITLEMENTS = apolloschurchapp/apolloschurchapp.entitlements;
+				CODE_SIGN_IDENTITY = "iPhone Developer";
+				CURRENT_PROJECT_VERSION = 4;
 				DEAD_CODE_STRIPPING = NO;
 				DEVELOPMENT_TEAM = 7TM8C6252Z;
 				HEADER_SEARCH_PATHS = (
 					"$(inherited)",
+					"$(SRCROOT)/../node_modules/react-native-custom-tabs/ios/ReactNativeCustomTabs",
+					"$(SRCROOT)/../node_modules/react-native-linear-gradient/BVLinearGradient",
+					"$(SRCROOT)/../node_modules/react-native-safari-view",
+					"$(SRCROOT)/../node_modules/react-native-splash-screen/ios",
+					"$(SRCROOT)/../node_modules/react-native-svg/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-video/ios",
+					"$(SRCROOT)/../node_modules/react-native-onesignal/ios/**",
+					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
+					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
+					"$(SRCROOT)/../node_modules/react-native-music-control/ios",
 				);
 				INFOPLIST_FILE = apolloschurchapp/Info.plist;
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
@@ -686,22 +1761,31 @@
 					"-ObjC",
 					"-lc++",
 				);
-				PRODUCT_BUNDLE_IDENTIFIER = "org.reactjs.native.example.$(PRODUCT_NAME:rfc1034identifier)";
 				PRODUCT_NAME = apolloschurchapp;
-				PROVISIONING_PROFILE_SPECIFIER = "";
 				VERSIONING_SYSTEM = "apple-generic";
 			};
 			name = Debug;
 		};
 		13B07F951A680F5B00A75B9A /* Release */ = {
 			isa = XCBuildConfiguration;
-			baseConfigurationReference = 1F8F5BC4745C8F22C695573D /* Pods-apolloschurchapp.release.xcconfig */;
 			buildSettings = {
 				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
-				CURRENT_PROJECT_VERSION = 18;
+				CODE_SIGN_ENTITLEMENTS = apolloschurchapp/apolloschurchapp.entitlements;
+				CODE_SIGN_IDENTITY = "iPhone Developer";
+				CURRENT_PROJECT_VERSION = 4;
+				DEVELOPMENT_TEAM = 7TM8C6252Z;
 				HEADER_SEARCH_PATHS = (
 					"$(inherited)",
+					"$(SRCROOT)/../node_modules/react-native-custom-tabs/ios/ReactNativeCustomTabs",
+					"$(SRCROOT)/../node_modules/react-native-linear-gradient/BVLinearGradient",
+					"$(SRCROOT)/../node_modules/react-native-safari-view",
+					"$(SRCROOT)/../node_modules/react-native-splash-screen/ios",
+					"$(SRCROOT)/../node_modules/react-native-svg/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-video/ios",
+					"$(SRCROOT)/../node_modules/react-native-onesignal/ios/**",
+					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
+					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
+					"$(SRCROOT)/../node_modules/react-native-music-control/ios",
 				);
 				INFOPLIST_FILE = apolloschurchapp/Info.plist;
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
@@ -710,16 +1794,13 @@
 					"-ObjC",
 					"-lc++",
 				);
-				PRODUCT_BUNDLE_IDENTIFIER = "org.reactjs.native.example.$(PRODUCT_NAME:rfc1034identifier)";
 				PRODUCT_NAME = apolloschurchapp;
-				PROVISIONING_PROFILE_SPECIFIER = "";
 				VERSIONING_SYSTEM = "apple-generic";
 			};
 			name = Release;
 		};
 		2D02E4971E0B4A5E006451C7 /* Debug */ = {
 			isa = XCBuildConfiguration;
-			baseConfigurationReference = 745C835CA2F1E1EC2425152A /* Pods-apolloschurchapp-tvOS.debug.xcconfig */;
 			buildSettings = {
 				ASSETCATALOG_COMPILER_APPICON_NAME = "App Icon & Top Shelf Image";
 				ASSETCATALOG_COMPILER_LAUNCHIMAGE_NAME = LaunchImage;
@@ -732,16 +1813,27 @@
 				GCC_NO_COMMON_BLOCKS = YES;
 				HEADER_SEARCH_PATHS = (
 					"$(inherited)",
+					"$(SRCROOT)/../node_modules/react-native-custom-tabs/ios/ReactNativeCustomTabs",
+					"$(SRCROOT)/../node_modules/react-native-linear-gradient/BVLinearGradient",
+					"$(SRCROOT)/../node_modules/react-native-safari-view",
+					"$(SRCROOT)/../node_modules/react-native-splash-screen/ios",
+					"$(SRCROOT)/../node_modules/react-native-svg/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-video/ios",
+					"$(SRCROOT)/../node_modules/react-native-onesignal/ios/**",
+					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
+					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
+					"$(SRCROOT)/../node_modules/react-native-music-control/ios",
 				);
 				INFOPLIST_FILE = "apolloschurchapp-tvOS/Info.plist";
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
-				LIBRARY_SEARCH_PATHS = "$(inherited)";
+				LIBRARY_SEARCH_PATHS = (
+					"$(inherited)",
+				);
 				OTHER_LDFLAGS = (
 					"-ObjC",
 					"-lc++",
 				);
-				PRODUCT_BUNDLE_IDENTIFIER = "com.facebook.REACT.apolloschurchapp-tvOS";
+				PRODUCT_BUNDLE_IDENTIFIER = "org.reactjs.native.apolloschurchapp-tvOS";
 				PRODUCT_NAME = "$(TARGET_NAME)";
 				SDKROOT = appletvos;
 				TARGETED_DEVICE_FAMILY = 3;
@@ -751,7 +1843,6 @@
 		};
 		2D02E4981E0B4A5E006451C7 /* Release */ = {
 			isa = XCBuildConfiguration;
-			baseConfigurationReference = AE85030F59F256E90D5A4C2B /* Pods-apolloschurchapp-tvOS.release.xcconfig */;
 			buildSettings = {
 				ASSETCATALOG_COMPILER_APPICON_NAME = "App Icon & Top Shelf Image";
 				ASSETCATALOG_COMPILER_LAUNCHIMAGE_NAME = LaunchImage;
@@ -764,16 +1855,27 @@
 				GCC_NO_COMMON_BLOCKS = YES;
 				HEADER_SEARCH_PATHS = (
 					"$(inherited)",
+					"$(SRCROOT)/../node_modules/react-native-custom-tabs/ios/ReactNativeCustomTabs",
+					"$(SRCROOT)/../node_modules/react-native-linear-gradient/BVLinearGradient",
+					"$(SRCROOT)/../node_modules/react-native-safari-view",
+					"$(SRCROOT)/../node_modules/react-native-splash-screen/ios",
+					"$(SRCROOT)/../node_modules/react-native-svg/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-video/ios",
+					"$(SRCROOT)/../node_modules/react-native-onesignal/ios/**",
+					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
+					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
+					"$(SRCROOT)/../node_modules/react-native-music-control/ios",
 				);
 				INFOPLIST_FILE = "apolloschurchapp-tvOS/Info.plist";
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
-				LIBRARY_SEARCH_PATHS = "$(inherited)";
+				LIBRARY_SEARCH_PATHS = (
+					"$(inherited)",
+				);
 				OTHER_LDFLAGS = (
 					"-ObjC",
 					"-lc++",
 				);
-				PRODUCT_BUNDLE_IDENTIFIER = "com.facebook.REACT.apolloschurchapp-tvOS";
+				PRODUCT_BUNDLE_IDENTIFIER = "org.reactjs.native.apolloschurchapp-tvOS";
 				PRODUCT_NAME = "$(TARGET_NAME)";
 				SDKROOT = appletvos;
 				TARGETED_DEVICE_FAMILY = 3;
@@ -783,7 +1885,6 @@
 		};
 		2D02E4991E0B4A5E006451C7 /* Debug */ = {
 			isa = XCBuildConfiguration;
-			baseConfigurationReference = D394E3064D75710E81C51EB0 /* Pods-apolloschurchapp-tvOSTests.debug.xcconfig */;
 			buildSettings = {
 				BUNDLE_LOADER = "$(TEST_HOST)";
 				CLANG_ANALYZER_NONNULL = YES;
@@ -795,16 +1896,27 @@
 				GCC_NO_COMMON_BLOCKS = YES;
 				HEADER_SEARCH_PATHS = (
 					"$(inherited)",
+					"$(SRCROOT)/../node_modules/react-native-custom-tabs/ios/ReactNativeCustomTabs",
+					"$(SRCROOT)/../node_modules/react-native-linear-gradient/BVLinearGradient",
+					"$(SRCROOT)/../node_modules/react-native-safari-view",
+					"$(SRCROOT)/../node_modules/react-native-splash-screen/ios",
+					"$(SRCROOT)/../node_modules/react-native-svg/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-video/ios",
+					"$(SRCROOT)/../node_modules/react-native-onesignal/ios/**",
+					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
+					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
+					"$(SRCROOT)/../node_modules/react-native-music-control/ios",
 				);
 				INFOPLIST_FILE = "apolloschurchapp-tvOSTests/Info.plist";
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @loader_path/Frameworks";
-				LIBRARY_SEARCH_PATHS = "$(inherited)";
+				LIBRARY_SEARCH_PATHS = (
+					"$(inherited)",
+				);
 				OTHER_LDFLAGS = (
 					"-ObjC",
 					"-lc++",
 				);
-				PRODUCT_BUNDLE_IDENTIFIER = "com.facebook.REACT.apolloschurchapp-tvOSTests";
+				PRODUCT_BUNDLE_IDENTIFIER = "org.reactjs.native.apolloschurchapp-tvOSTests";
 				PRODUCT_NAME = "$(TARGET_NAME)";
 				SDKROOT = appletvos;
 				TEST_HOST = "$(BUILT_PRODUCTS_DIR)/apolloschurchapp-tvOS.app/apolloschurchapp-tvOS";
@@ -814,7 +1926,6 @@
 		};
 		2D02E49A1E0B4A5E006451C7 /* Release */ = {
 			isa = XCBuildConfiguration;
-			baseConfigurationReference = DA9745795726553C6FA9E7A8 /* Pods-apolloschurchapp-tvOSTests.release.xcconfig */;
 			buildSettings = {
 				BUNDLE_LOADER = "$(TEST_HOST)";
 				CLANG_ANALYZER_NONNULL = YES;
@@ -826,16 +1937,27 @@
 				GCC_NO_COMMON_BLOCKS = YES;
 				HEADER_SEARCH_PATHS = (
 					"$(inherited)",
+					"$(SRCROOT)/../node_modules/react-native-custom-tabs/ios/ReactNativeCustomTabs",
+					"$(SRCROOT)/../node_modules/react-native-linear-gradient/BVLinearGradient",
+					"$(SRCROOT)/../node_modules/react-native-safari-view",
+					"$(SRCROOT)/../node_modules/react-native-splash-screen/ios",
+					"$(SRCROOT)/../node_modules/react-native-svg/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-video/ios",
+					"$(SRCROOT)/../node_modules/react-native-onesignal/ios/**",
+					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
+					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
+					"$(SRCROOT)/../node_modules/react-native-music-control/ios",
 				);
 				INFOPLIST_FILE = "apolloschurchapp-tvOSTests/Info.plist";
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @loader_path/Frameworks";
-				LIBRARY_SEARCH_PATHS = "$(inherited)";
+				LIBRARY_SEARCH_PATHS = (
+					"$(inherited)",
+				);
 				OTHER_LDFLAGS = (
 					"-ObjC",
 					"-lc++",
 				);
-				PRODUCT_BUNDLE_IDENTIFIER = "com.facebook.REACT.apolloschurchapp-tvOSTests";
+				PRODUCT_BUNDLE_IDENTIFIER = "org.reactjs.native.apolloschurchapp-tvOSTests";
 				PRODUCT_NAME = "$(TARGET_NAME)";
 				SDKROOT = appletvos;
 				TEST_HOST = "$(BUILT_PRODUCTS_DIR)/apolloschurchapp-tvOS.app/apolloschurchapp-tvOS";
@@ -851,32 +1973,20 @@
 				CLANG_CXX_LIBRARY = "libc++";
 				CLANG_ENABLE_MODULES = YES;
 				CLANG_ENABLE_OBJC_ARC = YES;
-				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
 				CLANG_WARN_BOOL_CONVERSION = YES;
-				CLANG_WARN_COMMA = YES;
 				CLANG_WARN_CONSTANT_CONVERSION = YES;
-				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
 				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
 				CLANG_WARN_EMPTY_BODY = YES;
 				CLANG_WARN_ENUM_CONVERSION = YES;
-				CLANG_WARN_INFINITE_RECURSION = YES;
 				CLANG_WARN_INT_CONVERSION = YES;
-				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
-				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
-				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
 				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
-				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
-				CLANG_WARN_STRICT_PROTOTYPES = YES;
-				CLANG_WARN_SUSPICIOUS_MOVE = YES;
 				CLANG_WARN_UNREACHABLE_CODE = YES;
 				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
 				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "iPhone Developer";
 				COPY_PHASE_STRIP = NO;
 				ENABLE_STRICT_OBJC_MSGSEND = YES;
-				ENABLE_TESTABILITY = YES;
 				GCC_C_LANGUAGE_STANDARD = gnu99;
 				GCC_DYNAMIC_NO_PIC = NO;
-				GCC_NO_COMMON_BLOCKS = YES;
 				GCC_OPTIMIZATION_LEVEL = 0;
 				GCC_PREPROCESSOR_DEFINITIONS = (
 					"DEBUG=1",
@@ -904,23 +2014,13 @@
 				CLANG_CXX_LIBRARY = "libc++";
 				CLANG_ENABLE_MODULES = YES;
 				CLANG_ENABLE_OBJC_ARC = YES;
-				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
 				CLANG_WARN_BOOL_CONVERSION = YES;
-				CLANG_WARN_COMMA = YES;
 				CLANG_WARN_CONSTANT_CONVERSION = YES;
-				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
 				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
 				CLANG_WARN_EMPTY_BODY = YES;
 				CLANG_WARN_ENUM_CONVERSION = YES;
-				CLANG_WARN_INFINITE_RECURSION = YES;
 				CLANG_WARN_INT_CONVERSION = YES;
-				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
-				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
-				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
 				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
-				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
-				CLANG_WARN_STRICT_PROTOTYPES = YES;
-				CLANG_WARN_SUSPICIOUS_MOVE = YES;
 				CLANG_WARN_UNREACHABLE_CODE = YES;
 				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
 				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "iPhone Developer";
@@ -928,7 +2028,6 @@
 				ENABLE_NS_ASSERTIONS = NO;
 				ENABLE_STRICT_OBJC_MSGSEND = YES;
 				GCC_C_LANGUAGE_STANDARD = gnu99;
-				GCC_NO_COMMON_BLOCKS = YES;
 				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
 				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
 				GCC_WARN_UNDECLARED_SELECTOR = YES;
diff --git a/apolloschurchapp/ios/apolloschurchapp.xcworkspace/xcshareddata/xcschemes/apolloschurchappprod.xcscheme b/apolloschurchapp/ios/apolloschurchapp.xcodeproj/xcshareddata/xcschemes/apolloschurchapp-tvOS.xcscheme
similarity index 71%
rename from apolloschurchapp/ios/apolloschurchapp.xcworkspace/xcshareddata/xcschemes/apolloschurchappprod.xcscheme
rename to apolloschurchapp/ios/apolloschurchapp.xcodeproj/xcshareddata/xcschemes/apolloschurchapp-tvOS.xcscheme
index cb89197..d6df8e6 100644
--- a/apolloschurchapp/ios/apolloschurchapp.xcworkspace/xcshareddata/xcschemes/apolloschurchappprod.xcscheme
+++ b/apolloschurchapp/ios/apolloschurchapp.xcodeproj/xcshareddata/xcschemes/apolloschurchapp-tvOS.xcscheme
@@ -1,19 +1,10 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <Scheme
-   LastUpgradeVersion = "0940"
+   LastUpgradeVersion = "0820"
    version = "1.3">
    <BuildAction
       parallelizeBuildables = "NO"
       buildImplicitDependencies = "YES">
-      <PreActions>
-         <ExecutionAction
-            ActionType = "Xcode.IDEStandardExecutionActionsCore.ExecutionActionType.ShellScriptAction">
-            <ActionContent
-               title = "Run Script"
-               scriptText = "echo &quot;.env.production&quot; &gt; /tmp/envfile&#10;">
-            </ActionContent>
-         </ExecutionAction>
-      </PreActions>
       <BuildActionEntries>
          <BuildActionEntry
             buildForTesting = "YES"
@@ -23,9 +14,9 @@
             buildForAnalyzing = "YES">
             <BuildableReference
                BuildableIdentifier = "primary"
-               BlueprintIdentifier = "83CBBA2D1A601D0E00E9B192"
+               BlueprintIdentifier = "2D2A28121D9B038B00D4039D"
                BuildableName = "libReact.a"
-               BlueprintName = "React"
+               BlueprintName = "React-tvOS"
                ReferencedContainer = "container:../node_modules/react-native/React/React.xcodeproj">
             </BuildableReference>
          </BuildActionEntry>
@@ -37,9 +28,9 @@
             buildForAnalyzing = "YES">
             <BuildableReference
                BuildableIdentifier = "primary"
-               BlueprintIdentifier = "13B07F861A680F5B00A75B9A"
-               BuildableName = "apolloschurchapp.app"
-               BlueprintName = "apolloschurchapp"
+               BlueprintIdentifier = "2D02E47A1E0B4A5D006451C7"
+               BuildableName = "apolloschurchapp-tvOS.app"
+               BlueprintName = "apolloschurchapp-tvOS"
                ReferencedContainer = "container:apolloschurchapp.xcodeproj">
             </BuildableReference>
          </BuildActionEntry>
@@ -51,9 +42,9 @@
             buildForAnalyzing = "YES">
             <BuildableReference
                BuildableIdentifier = "primary"
-               BlueprintIdentifier = "00E356ED1AD99517003FC87E"
-               BuildableName = "apolloschurchappTests.xctest"
-               BlueprintName = "apolloschurchappTests"
+               BlueprintIdentifier = "2D02E48F1E0B4A5D006451C7"
+               BuildableName = "apolloschurchapp-tvOSTests.xctest"
+               BlueprintName = "apolloschurchapp-tvOSTests"
                ReferencedContainer = "container:apolloschurchapp.xcodeproj">
             </BuildableReference>
          </BuildActionEntry>
@@ -69,9 +60,9 @@
             skipped = "NO">
             <BuildableReference
                BuildableIdentifier = "primary"
-               BlueprintIdentifier = "00E356ED1AD99517003FC87E"
-               BuildableName = "apolloschurchappTests.xctest"
-               BlueprintName = "apolloschurchappTests"
+               BlueprintIdentifier = "2D02E48F1E0B4A5D006451C7"
+               BuildableName = "apolloschurchapp-tvOSTests.xctest"
+               BlueprintName = "apolloschurchapp-tvOSTests"
                ReferencedContainer = "container:apolloschurchapp.xcodeproj">
             </BuildableReference>
          </TestableReference>
@@ -79,9 +70,9 @@
       <MacroExpansion>
          <BuildableReference
             BuildableIdentifier = "primary"
-            BlueprintIdentifier = "13B07F861A680F5B00A75B9A"
-            BuildableName = "apolloschurchapp.app"
-            BlueprintName = "apolloschurchapp"
+            BlueprintIdentifier = "2D02E47A1E0B4A5D006451C7"
+            BuildableName = "apolloschurchapp-tvOS.app"
+            BlueprintName = "apolloschurchapp-tvOS"
             ReferencedContainer = "container:apolloschurchapp.xcodeproj">
          </BuildableReference>
       </MacroExpansion>
@@ -89,7 +80,7 @@
       </AdditionalOptions>
    </TestAction>
    <LaunchAction
-      buildConfiguration = "Release"
+      buildConfiguration = "Debug"
       selectedDebuggerIdentifier = "Xcode.DebuggerFoundation.Debugger.LLDB"
       selectedLauncherIdentifier = "Xcode.DebuggerFoundation.Launcher.LLDB"
       launchStyle = "0"
@@ -102,9 +93,9 @@
          runnableDebuggingMode = "0">
          <BuildableReference
             BuildableIdentifier = "primary"
-            BlueprintIdentifier = "13B07F861A680F5B00A75B9A"
-            BuildableName = "apolloschurchapp.app"
-            BlueprintName = "apolloschurchapp"
+            BlueprintIdentifier = "2D02E47A1E0B4A5D006451C7"
+            BuildableName = "apolloschurchapp-tvOS.app"
+            BlueprintName = "apolloschurchapp-tvOS"
             ReferencedContainer = "container:apolloschurchapp.xcodeproj">
          </BuildableReference>
       </BuildableProductRunnable>
@@ -121,9 +112,9 @@
          runnableDebuggingMode = "0">
          <BuildableReference
             BuildableIdentifier = "primary"
-            BlueprintIdentifier = "13B07F861A680F5B00A75B9A"
-            BuildableName = "apolloschurchapp.app"
-            BlueprintName = "apolloschurchapp"
+            BlueprintIdentifier = "2D02E47A1E0B4A5D006451C7"
+            BuildableName = "apolloschurchapp-tvOS.app"
+            BlueprintName = "apolloschurchapp-tvOS"
             ReferencedContainer = "container:apolloschurchapp.xcodeproj">
          </BuildableReference>
       </BuildableProductRunnable>
diff --git a/apolloschurchapp/ios/apolloschurchapp.xcworkspace/xcshareddata/xcschemes/apolloschurchapp.xcscheme b/apolloschurchapp/ios/apolloschurchapp.xcodeproj/xcshareddata/xcschemes/apolloschurchapp.xcscheme
similarity index 99%
rename from apolloschurchapp/ios/apolloschurchapp.xcworkspace/xcshareddata/xcschemes/apolloschurchapp.xcscheme
rename to apolloschurchapp/ios/apolloschurchapp.xcodeproj/xcshareddata/xcschemes/apolloschurchapp.xcscheme
index 8fd35ce..37bdc76 100644
--- a/apolloschurchapp/ios/apolloschurchapp.xcworkspace/xcshareddata/xcschemes/apolloschurchapp.xcscheme
+++ b/apolloschurchapp/ios/apolloschurchapp.xcodeproj/xcshareddata/xcschemes/apolloschurchapp.xcscheme
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <Scheme
-   LastUpgradeVersion = "0940"
+   LastUpgradeVersion = "0620"
    version = "1.3">
    <BuildAction
       parallelizeBuildables = "NO"
diff --git a/apolloschurchapp/ios/apolloschurchapp.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist b/apolloschurchapp/ios/apolloschurchapp.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist
deleted file mode 100644
index 18d9810..0000000
--- a/apolloschurchapp/ios/apolloschurchapp.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist
+++ /dev/null
@@ -1,8 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
-<plist version="1.0">
-<dict>
-	<key>IDEDidComputeMac32BitWarning</key>
-	<true/>
-</dict>
-</plist>
diff --git a/apolloschurchapp/ios/apolloschurchapp/AppDelegate.h b/apolloschurchapp/ios/apolloschurchapp/AppDelegate.h
index 2726d5e..d4f2580 100644
--- a/apolloschurchapp/ios/apolloschurchapp/AppDelegate.h
+++ b/apolloschurchapp/ios/apolloschurchapp/AppDelegate.h
@@ -1,14 +1,13 @@
 /**
- * Copyright (c) Facebook, Inc. and its affiliates.
+ * Copyright (c) 2015-present, Facebook, Inc.
  *
  * This source code is licensed under the MIT license found in the
  * LICENSE file in the root directory of this source tree.
  */
 
-#import <React/RCTBridgeDelegate.h>
 #import <UIKit/UIKit.h>
 
-@interface AppDelegate : UIResponder <UIApplicationDelegate, RCTBridgeDelegate>
+@interface AppDelegate : UIResponder <UIApplicationDelegate>
 
 @property (nonatomic, strong) UIWindow *window;
 
diff --git a/apolloschurchapp/ios/apolloschurchapp/AppDelegate.m b/apolloschurchapp/ios/apolloschurchapp/AppDelegate.m
index b9f7b95..9d889ed 100644
--- a/apolloschurchapp/ios/apolloschurchapp/AppDelegate.m
+++ b/apolloschurchapp/ios/apolloschurchapp/AppDelegate.m
@@ -1,5 +1,5 @@
 /**
- * Copyright (c) Facebook, Inc. and its affiliates.
+ * Copyright (c) 2015-present, Facebook, Inc.
  *
  * This source code is licensed under the MIT license found in the
  * LICENSE file in the root directory of this source tree.
@@ -7,8 +7,6 @@
 
 #import "AppDelegate.h"
 
-
-#import <React/RCTBridge.h>
 #import <React/RCTBundleURLProvider.h>
 #import <React/RCTRootView.h>
 #import "RNSplashScreen.h"
@@ -36,12 +34,14 @@ - (BOOL)application:(UIApplication *)application continueUserActivity:(NSUserAct
 
 - (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions
 {
+  NSURL *jsCodeLocation;
 
-  RCTBridge *bridge = [[RCTBridge alloc] initWithDelegate:self launchOptions:launchOptions];
-  RCTRootView *rootView = [[RCTRootView alloc] initWithBridge:bridge
-                                                   moduleName:@"apolloschurchapp"
-                                            initialProperties:nil];
+  jsCodeLocation = [[RCTBundleURLProvider sharedSettings] jsBundleURLForBundleRoot:@"index" fallbackResource:nil];
 
+  RCTRootView *rootView = [[RCTRootView alloc] initWithBundleURL:jsCodeLocation
+                                                      moduleName:@"apolloschurchapp"
+                                               initialProperties:nil
+                                                   launchOptions:launchOptions];
   rootView.backgroundColor = [[UIColor alloc] initWithRed:1.0f green:1.0f blue:1.0f alpha:1];
 
   self.window = [[UIWindow alloc] initWithFrame:[UIScreen mainScreen].bounds];
@@ -54,13 +54,4 @@ - (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(
   return YES;
 }
 
-- (NSURL *)sourceURLForBridge:(RCTBridge *)bridge
-{
-#if DEBUG
-  return [[RCTBundleURLProvider sharedSettings] jsBundleURLForBundleRoot:@"index" fallbackResource:nil];
-#else
-  return [[NSBundle mainBundle] URLForResource:@"main" withExtension:@"jsbundle"];
-#endif
-}
-
 @end
diff --git a/apolloschurchapp/ios/apolloschurchapp/Base.lproj/LaunchScreen.xib b/apolloschurchapp/ios/apolloschurchapp/Base.lproj/LaunchScreen.xib
index 4ca705c..ce50ff1 100644
--- a/apolloschurchapp/ios/apolloschurchapp/Base.lproj/LaunchScreen.xib
+++ b/apolloschurchapp/ios/apolloschurchapp/Base.lproj/LaunchScreen.xib
@@ -1,11 +1,11 @@
 <?xml version="1.0" encoding="UTF-8"?>
-<document type="com.apple.InterfaceBuilder3.CocoaTouch.XIB" version="3.0" toolsVersion="14490.70" targetRuntime="iOS.CocoaTouch" propertyAccessControl="none" useAutolayout="YES" launchScreen="YES" useTraitCollections="YES" colorMatched="YES">
+<document type="com.apple.InterfaceBuilder3.CocoaTouch.XIB" version="3.0" toolsVersion="14113" targetRuntime="iOS.CocoaTouch" propertyAccessControl="none" useAutolayout="YES" launchScreen="YES" useTraitCollections="YES" colorMatched="YES">
     <device id="retina5_5" orientation="portrait">
         <adaptation id="fullscreen"/>
     </device>
     <dependencies>
         <deployment identifier="iOS"/>
-        <plugIn identifier="com.apple.InterfaceBuilder.IBCocoaTouchPlugin" version="14490.49"/>
+        <plugIn identifier="com.apple.InterfaceBuilder.IBCocoaTouchPlugin" version="14088"/>
         <capability name="documents saved in the Xcode 8 format" minToolsVersion="8.0"/>
     </dependencies>
     <objects>
@@ -15,22 +15,18 @@
             <rect key="frame" x="0.0" y="0.0" width="414" height="736"/>
             <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
             <subviews>
-                <imageView clipsSubviews="YES" userInteractionEnabled="NO" contentMode="scaleToFill" horizontalHuggingPriority="251" verticalHuggingPriority="251" fixedFrame="YES" image="splash_bg" translatesAutoresizingMaskIntoConstraints="NO" id="iGM-E3-lqn">
-                    <rect key="frame" x="-12" y="-10" width="437" height="758"/>
-                    <autoresizingMask key="autoresizingMask" flexibleMinX="YES" widthSizable="YES" flexibleMaxX="YES" flexibleMinY="YES" heightSizable="YES" flexibleMaxY="YES"/>
-                </imageView>
                 <imageView userInteractionEnabled="NO" contentMode="scaleAspectFit" horizontalHuggingPriority="251" verticalHuggingPriority="251" fixedFrame="YES" image="splash-icon" translatesAutoresizingMaskIntoConstraints="NO" id="6Je-Yv-1Zj">
                     <rect key="frame" x="157" y="288" width="100" height="100"/>
                     <autoresizingMask key="autoresizingMask" flexibleMinX="YES" widthSizable="YES" flexibleMaxX="YES" flexibleMinY="YES" heightSizable="YES" flexibleMaxY="YES"/>
                 </imageView>
             </subviews>
+            <color key="backgroundColor" red="0.0" green="0.40392156862745099" blue="0.42745098039215684" alpha="1" colorSpace="custom" customColorSpace="sRGB"/>
             <nil key="simulatedStatusBarMetrics"/>
             <modalPageSheetSimulatedSizeMetrics key="simulatedDestinationMetrics"/>
-            <point key="canvasLocation" x="544.92753623188412" y="453.26086956521743"/>
+            <point key="canvasLocation" x="546" y="454"/>
         </view>
     </objects>
     <resources>
         <image name="splash-icon" width="94" height="99"/>
-        <image name="splash_bg" width="721" height="721"/>
     </resources>
 </document>
diff --git a/apolloschurchapp/ios/apolloschurchapp/Images.xcassets/splash_bg.imageset/Contents.json b/apolloschurchapp/ios/apolloschurchapp/Images.xcassets/splash_bg.imageset/Contents.json
deleted file mode 100644
index 8939b14..0000000
--- a/apolloschurchapp/ios/apolloschurchapp/Images.xcassets/splash_bg.imageset/Contents.json
+++ /dev/null
@@ -1,21 +0,0 @@
-{
-  "images" : [
-    {
-      "idiom" : "universal",
-      "filename" : "splash_bg.png",
-      "scale" : "1x"
-    },
-    {
-      "idiom" : "universal",
-      "scale" : "2x"
-    },
-    {
-      "idiom" : "universal",
-      "scale" : "3x"
-    }
-  ],
-  "info" : {
-    "version" : 1,
-    "author" : "xcode"
-  }
-}
\ No newline at end of file
diff --git a/apolloschurchapp/ios/apolloschurchapp/Images.xcassets/splash_bg.imageset/splash_bg.png b/apolloschurchapp/ios/apolloschurchapp/Images.xcassets/splash_bg.imageset/splash_bg.png
deleted file mode 100644
index 315d8e09ac4fd5f51176da24982baad2115fa027..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 11471
zcmeAS@N?(olHy`uVBq!ia0y~yV7dsx9Be?5xhMa#GcYJHc)B=-RK&f#rYOYZDB^tZ
z=H*2eyj_=_M49$pT<`AhvTNUo(sMs$`WYCRSU3a}92yuJZ!=xbcd?(ho!L$Z#0N`w
zaPNsf-r*PD@CmAlk!f>-pzUN%uojS#E37>)ezCsrhiXtT;Fh>(JQHrLL+pW$b@2`V
zMzsTjWHjhTlg((B87(fLrQ>K(Ia*BsYueE&a<q8>Zf}h?4@R2@qs@cS=D}$5V6+!G
z+Jgqw1*1))(WcR8(`a<S4K^M*I@mZm&<Yw!9vwLu9XT0o9*j<`KxVE+Css!1<G|(N
zX!BsSc`({MK+L~8to{|vz`)Z5S_?2*U5-|lqt)eTQ(?5JFxpfYU9vU0Ty1m|WptS$
xWKrhmB+KX|3r!|j{weR`TWF71VC?vS+x%;O<pqA37~n!>22WQ%mvv4FO#m9H?QQ@7

diff --git a/apolloschurchapp/ios/apolloschurchapp/Info.plist b/apolloschurchapp/ios/apolloschurchapp/Info.plist
index 49a5dfc..dd3a74d 100644
--- a/apolloschurchapp/ios/apolloschurchapp/Info.plist
+++ b/apolloschurchapp/ios/apolloschurchapp/Info.plist
@@ -2,6 +2,15 @@
 <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
 <plist version="1.0">
 <dict>
+	<key>CFBundleURLTypes</key>
+	<array>
+		<dict>
+			<key>CFBundleURLSchemes</key>
+			<array>
+				<string>apolloschurchapp</string>
+			</array>
+		</dict>
+	</array>
 	<key>CFBundleDevelopmentRegion</key>
 	<string>en</string>
 	<key>CFBundleDisplayName</key>
@@ -9,7 +18,7 @@
 	<key>CFBundleExecutable</key>
 	<string>$(EXECUTABLE_NAME)</string>
 	<key>CFBundleIdentifier</key>
-	<string>$(PRODUCT_BUNDLE_IDENTIFIER)</string>
+	<string>org.reactjs.native.$(PRODUCT_NAME:rfc1034identifier)</string>
 	<key>CFBundleInfoDictionaryVersion</key>
 	<string>6.0</string>
 	<key>CFBundleName</key>
@@ -17,54 +26,33 @@
 	<key>CFBundlePackageType</key>
 	<string>APPL</string>
 	<key>CFBundleShortVersionString</key>
-	<string>1.2.0</string>
+	<string>0.6.0</string>
 	<key>CFBundleSignature</key>
 	<string>????</string>
-	<key>CFBundleURLTypes</key>
-	<array>
-		<dict>
-			<key>CFBundleURLSchemes</key>
-			<array>
-				<string>apolloschurchapp</string>
-			</array>
-		</dict>
-	</array>
 	<key>CFBundleVersion</key>
-	<string>24</string>
+	<string>4</string>
 	<key>ITSAppUsesNonExemptEncryption</key>
-	<false />
+	<false/>
 	<key>LSRequiresIPhoneOS</key>
-	<true />
+	<true/>
 	<key>NSAppTransportSecurity</key>
 	<dict>
-		<key>NSAllowsArbitraryLoads</key>
-		<true />
 		<key>NSExceptionDomains</key>
 		<dict>
 			<key>embed.wistia.com</key>
 			<dict>
 				<key>NSExceptionAllowsInsecureHTTPLoads</key>
-				<true />
+				<true/>
 			</dict>
 			<key>localhost</key>
 			<dict>
 				<key>NSExceptionAllowsInsecureHTTPLoads</key>
-				<true />
+				<true/>
 			</dict>
 		</dict>
 	</dict>
-	<key>NSCameraUsageDescription</key>
-	<string>$(PRODUCT_NAME) would like to use your camera (for uploading profile pictures)</string>
-	<key>NSLocationAlwaysUsageDescription</key>
-	<string>$(PRODUCT_NAME) would like to use your location for determining your closest campus</string>
 	<key>NSLocationWhenInUseUsageDescription</key>
-	<string>$(PRODUCT_NAME) would like to use your location for determining your closest campus</string>
-	<key>NSMicrophoneUsageDescription</key>
-	<string>$(PRODUCT_NAME) would like to your microphone (for videos)</string>
-	<key>NSPhotoLibraryAddUsageDescription</key>
-	<string>$(PRODUCT_NAME) would like to save photos to your photo gallery (for uploading profile pictures)</string>
-	<key>NSPhotoLibraryUsageDescription</key>
-	<string>$(PRODUCT_NAME) would like access to your photo gallery (for uploading profile pictures)</string>
+	<string/>
 	<key>UIAppFonts</key>
 	<array>
 		<string>DroidSerif-Bold.ttf</string>
@@ -80,6 +68,11 @@
 		<string>Inter-UI-MediumItalic.otf</string>
 		<string>Inter-UI-Regular.otf</string>
 	</array>
+	<key>UIBackgroundModes</key>
+	<array>
+		<string>audio</string>
+		<string>remote-notification</string>
+	</array>
 	<key>UILaunchStoryboardName</key>
 	<string>LaunchScreen</string>
 	<key>UIRequiredDeviceCapabilities</key>
@@ -95,6 +88,14 @@
 		<string>UIInterfaceOrientationLandscapeRight</string>
 	</array>
 	<key>UIViewControllerBasedStatusBarAppearance</key>
-	<false />
+	<false/>
+	<key>NSPhotoLibraryUsageDescription</key>
+	<string>$(PRODUCT_NAME) would like access to your photo gallery (for uploading profile pictures)</string>
+	<key>NSCameraUsageDescription</key>
+	<string>$(PRODUCT_NAME) would like to use your camera (for uploading profile pictures)</string>
+	<key>NSPhotoLibraryAddUsageDescription</key>
+	<string>$(PRODUCT_NAME) would like to save photos to your photo gallery (for uploading profile pictures)</string>
+	<key>NSMicrophoneUsageDescription</key>
+	<string>$(PRODUCT_NAME) would like to your microphone (for videos)</string>
 </dict>
 </plist>
diff --git a/apolloschurchapp/ios/apolloschurchapp/main.m b/apolloschurchapp/ios/apolloschurchapp/main.m
index d9c4112..c73e006 100644
--- a/apolloschurchapp/ios/apolloschurchapp/main.m
+++ b/apolloschurchapp/ios/apolloschurchapp/main.m
@@ -1,5 +1,5 @@
 /**
- * Copyright (c) Facebook, Inc. and its affiliates.
+ * Copyright (c) 2015-present, Facebook, Inc.
  *
  * This source code is licensed under the MIT license found in the
  * LICENSE file in the root directory of this source tree.
@@ -14,4 +14,3 @@ int main(int argc, char * argv[]) {
     return UIApplicationMain(argc, argv, nil, NSStringFromClass([AppDelegate class]));
   }
 }
-          
diff --git a/apolloschurchapp/ios/apolloschurchappTests/Info.plist b/apolloschurchapp/ios/apolloschurchappTests/Info.plist
index 9b092fb..ae0bb6d 100644
--- a/apolloschurchapp/ios/apolloschurchappTests/Info.plist
+++ b/apolloschurchapp/ios/apolloschurchappTests/Info.plist
@@ -7,7 +7,7 @@
 	<key>CFBundleExecutable</key>
 	<string>$(EXECUTABLE_NAME)</string>
 	<key>CFBundleIdentifier</key>
-	<string>$(PRODUCT_BUNDLE_IDENTIFIER)</string>
+	<string>org.reactjs.native.example.$(PRODUCT_NAME:rfc1034identifier)</string>
 	<key>CFBundleInfoDictionaryVersion</key>
 	<string>6.0</string>
 	<key>CFBundleName</key>
@@ -15,10 +15,10 @@
 	<key>CFBundlePackageType</key>
 	<string>BNDL</string>
 	<key>CFBundleShortVersionString</key>
-	<string>1.2.0</string>
+	<string>0.6.0</string>
 	<key>CFBundleSignature</key>
 	<string>????</string>
 	<key>CFBundleVersion</key>
-	<string>23</string>
+	<string>4</string>
 </dict>
 </plist>
diff --git a/apolloschurchapp/ios/apolloschurchappTests/apolloschurchappTests.m b/apolloschurchapp/ios/apolloschurchappTests/apolloschurchappTests.m
index 8b9d30b..5b96cea 100644
--- a/apolloschurchapp/ios/apolloschurchappTests/apolloschurchappTests.m
+++ b/apolloschurchapp/ios/apolloschurchappTests/apolloschurchappTests.m
@@ -1,5 +1,5 @@
 /**
- * Copyright (c) Facebook, Inc. and its affiliates.
+ * Copyright (c) 2015-present, Facebook, Inc.
  *
  * This source code is licensed under the MIT license found in the
  * LICENSE file in the root directory of this source tree.
diff --git a/apolloschurchapp/jest.setup.js b/apolloschurchapp/jest.setup.js
index 4b67053..03cd103 100644
--- a/apolloschurchapp/jest.setup.js
+++ b/apolloschurchapp/jest.setup.js
@@ -1,57 +1,24 @@
-import React from 'react';
-import { NativeModules } from 'react-native';
-// We ran into an issue where SafeAreaView would break jest tests.
-
-jest.mock('../apollos-ui-kit/node_modules/react-native-safe-area-context/', () => ({
-  SafeAreaConsumer: ({ children }) => children({ top: 0, bottom: 0, left: 0, right: 0 }),
-  SafeAreaProvider: ({ children }) => children,
+jest.mock('./src/client/index');
+jest.mock('./src/config', () => ({
+  ONE_SIGNAL_KEY: 'doesntmatter',
+}));
+jest.mock('react-native-custom-tabs', () => ({
+  CustomTabs: {
+    openURL: jest.fn(),
+  },
 }));
 
-jest.mock('react-navigation', () => {
-  const ActualNavigation = require.requireActual('react-navigation');
-  return {
-    ...ActualNavigation,
-    SafeAreaView: require.requireActual('SafeAreaView'),
-  };
-});
+jest.mock('react-native-safari-view', () => ({
+  isAvailable: jest.fn().mockImplementation(() => Promise.resolve(true)),
+  show: jest.fn(),
+}));
 
+jest.mock('react-native-onesignal');
 jest.mock('react-native-music-control', () => ({
   enableBackgroundMode: jest.fn(),
   enableControl: jest.fn(),
   on: jest.fn(),
   setNowPlaying: jest.fn(),
-  STATE_PLAYING: false,
-  STATE_PAUSED: true,
-}));
-
-jest.mock('react-native-config', () => ({
-  ONE_SIGNAL_KEY: 'doesntmatter',
-}));
-
-jest.mock('Animated', () => {
-  const ActualAnimated = require.requireActual('Animated');
-  return {
-    ...ActualAnimated,
-    timing: (value, config) => ({
-      start: (callback) => {
-        value.setValue(config.toValue);
-        callback && callback();
-      },
-      stop: () => ({}),
-    }),
-    spring: (value, config) => ({
-      start: (callback) => {
-        value.setValue(config.toValue);
-        callback && callback();
-      },
-      stop: () => ({}),
-    }),
-  };
-});
-
-jest.mock('react-native-safari-view', () => ({
-  isAvailable: jest.fn().mockImplementation(() => Promise.resolve(true)),
-  show: jest.fn(),
 }));
 
 jest.mock('react-native-device-info', () => ({
@@ -62,45 +29,4 @@ jest.mock('react-native-device-info', () => ({
   getBuildNumber: () => 0,
 }));
 
-jest.mock('rn-fetch-blob', () => 'Fetch');
-jest.mock(
-  '@apollosproject/ui-passes/node_modules/rn-fetch-blob',
-  () => 'Fetch'
-);
-
-jest.mock('@apollosproject/ui-analytics', () => ({
-  track: () => '',
-  AnalyticsConsumer: ({ children }) => children({ test: jest.fn() }),
-  AnalyticsProvider: ({ children }) => children,
-  TrackEventWhenLoaded: () => null,
-  withTrackOnPress: (Component) => (props) => <Component {...props} />,
-}));
-
-jest.mock('@apollosproject/ui-notifications', () => ({
-  NotificationsProvider: ({ children }) => children,
-}));
-
-jest.mock('@apollosproject/ui-media-player', () => ({
-  MediaPlayerSpacer: ({ children }) => children,
-  MediaPlayer: () => 'MediaPlayer',
-  MediaPlayerProvider: ({ children }) => children,
-  playVideoMutation: 'mutation { playVideo }',
-  withTabBarMediaSpacer: () => ({ children }) => children,
-}));
-
 jest.mock('react-native-video', () => 'Video');
-
-jest.mock('NativeEventEmitter');
-
-jest.mock('react-native-maps');
-jest.mock('DatePickerIOS', () => 'DatePicker');
-jest.mock('./src/client/index');
-
-NativeModules.RNGestureHandlerModule = {
-  attachGestureHandler: jest.fn(),
-  createGestureHandler: jest.fn(),
-  dropGestureHandler: jest.fn(),
-  updateGestureHandler: jest.fn(),
-  State: {},
-  Directions: {},
-};
diff --git a/apolloschurchapp/metro.config.js b/apolloschurchapp/metro.config.js
deleted file mode 100644
index f833f5a..0000000
--- a/apolloschurchapp/metro.config.js
+++ /dev/null
@@ -1,99 +0,0 @@
-/**
- * Metro configuration for React Native
- * https://github.com/facebook/react-native
- *
- * @format
- */
-
-const path = require('path');
-const blacklist = require('metro-config/src/defaults/blacklist');
-
-const flatten = (array) =>
-  array.reduce((accum, curr) => curr.concat(accum), []);
-
-const localDeps = [
-  path.resolve('..', 'apollos-ui-kit'),
-  path.resolve('..', 'apollos-ui-passes'),
-  path.resolve('..', 'apollos-ui-auth'),
-  path.resolve('..', 'apollos-ui-htmlview'),
-  path.resolve('..', 'apollos-ui-analytics'),
-  path.resolve('..', 'apollos-ui-storybook'),
-  path.resolve('..', 'apollos-ui-onboarding'),
-  path.resolve('..', 'apollos-ui-media-player'),
-  path.resolve('..', 'apollos-ui-scripture'),
-  path.resolve('..', 'apollos-ui-notifications'),
-];
-
-const sharedNativeModules = [
-  'react-native-linear-gradient',
-  'react-native-safe-area-context',
-  'react-native-svg',
-  'react-native-onesignal',
-  'react-native-music-control',
-  'react-native-video',
-  'react-native-video-controls',
-  '@apollosproject/react-native-airplay-btn',
-  'react-navigation',
-];
-
-module.exports = {
-  resolver: {
-    extraNodeModules: {
-      'react-native': path.resolve('.', 'node_modules/react-native'),
-      ...sharedNativeModules.reduce(
-        (accum, curr) => ({
-          ...accum,
-          [curr]: path.resolve('.', `node_modules/${curr}`),
-        }),
-        {}
-      ),
-      'react-native-svg': path.resolve('.', 'node_modules/react-native-svg'),
-    },
-    blacklistRE: blacklist([
-      ...localDeps.map(
-        (depPath) => new RegExp(`${depPath}/node_modules/react-native/.*`)
-      ),
-      ...flatten(
-        localDeps.map((depPath) =>
-          sharedNativeModules.map(
-            (moduleName) =>
-              new RegExp(`${depPath}/node_modules/${moduleName}/.*`)
-          )
-        )
-      ),
-      ...sharedNativeModules.map(
-        (moduleName) =>
-          new RegExp(`${path.resolve(`../../node_modules/${moduleName}`)}/.*`)
-      ),
-      ...localDeps.map(
-        (depPath) => new RegExp(`${depPath}/node_modules/react-native-svg/.*`)
-      ),
-      ...localDeps.map(
-        (depPath) =>
-          new RegExp(`${depPath}/node_modules/.*/node_modules/react-native/.*`)
-      ),
-      new RegExp(
-        `${path.resolve('.', 'node_modules')}/.*/node_modules/react-native/.*`
-      ),
-      new RegExp(
-        `${path.resolve('..', '..', 'node_modules', 'react-native')}/.*`
-      ),
-      new RegExp(
-        `${path.resolve(
-          '..',
-          '..',
-          'node_modules'
-        )}/.*/node_modules/react-native/.*`
-      ),
-    ]),
-  },
-  watchFolders: [...localDeps, path.resolve('..', '..', 'node_modules')],
-  transformer: {
-    getTransformOptions: async () => ({
-      transform: {
-        experimentalImportSupport: false,
-        inlineRequires: false,
-      },
-    }),
-  },
-};
diff --git a/apolloschurchapp/package.json b/apolloschurchapp/package.json
index 729ab08..64229a5 100644
--- a/apolloschurchapp/package.json
+++ b/apolloschurchapp/package.json
@@ -1,22 +1,31 @@
 {
   "name": "apolloschurchapp",
-  "version": "1.2.0-beta.3",
+  "version": "0.6.1",
   "private": true,
+  "workspaces": {
+    "nohoist": [
+      "*"
+    ]
+  },
   "devDependencies": {
+    "@storybook/addon-actions": "4.0.0-alpha.2",
+    "@storybook/addon-links": "4.0.0-alpha.2",
+    "@storybook/addons": "4.0.0-alpha.2",
+    "@storybook/react-native": "4.0.0-alpha.2",
+    "apollos-church-api": "file:../apollos-church-api",
+    "babel-preset-apollos": "file:../babel-preset-apollos",
+    "babel-preset-react-native": "5",
     "codecov": "3.0.2",
-    "get-dev-paths": "^0.1.0",
-    "graphql-import": "^0.7.1",
-    "jest": "^24.8.0",
+    "get-yarn-workspaces": "1.0.2",
+    "jest": "23.5.0",
     "jest-react-native": "18.0.0",
-    "jetifier": "^1.6.4",
-    "metro-react-native-babel-preset": "^0.56.0",
-    "nodemon": "1.18.7",
-    "prettier": "1.14.2",
+    "nodemon": "1.17.5",
     "prop-types": "15.6.1",
-    "react-dom": "16.6.3",
+    "react-dom": "16.3.1",
+    "react-native-dotenv": "0.2.0",
     "react-native-storybook-loader": "1.8.0",
     "react-native-version": "2.6.2",
-    "react-test-renderer": "16.8.6",
+    "react-test-renderer": "16.4.1",
     "waait": "1.0.2"
   },
   "engines": {
@@ -26,27 +35,23 @@
     "src"
   ],
   "scripts": {
-    "android": "SIM=\"$($HOME/Library/Android/sdk/emulator/emulator -list-avds | sed -n 1p)\" && $HOME/Library/Android/sdk/emulator/emulator -avd \"${SIM}\" & react-native run-android --appId com.apolloschurch.app",
+    "android": "react-native run-android",
     "codecov": "cat ./coverage/lcov.info | codecov",
     "fixlint": "eslint ./src --fix",
-    "ios": "react-native run-ios --simulator=\"iPhone 11\"",
-    "storybook:enable": "sed -i '' 's/STORYBOOK=false/STORYBOOK=true/g' .env",
-    "storybook:disable": "sed -i '' 's/STORYBOOK=true/STORYBOOK=false/g' .env",
-    "generate-stories": "rnstl --searchDir ./src --pattern **/*.stories.js",
+    "ios": "react-native run-ios --simulator=\"iPhone X\"",
     "lint": "eslint ./src --ext .js",
-    "version": "node ../../scripts/update-apollos-version.js && git add apollos.json",
     "postversion": "react-native-version --never-amend --android android/app/build.gradle --ios ios/",
-    "prestart": "lerna run generate-stories & node ./scripts/get-introspection-data.js",
-    "postinstall": "jetify",
-    "pods": "./scripts/install_pods.sh",
+    "prestart": "node ./scripts/get-introspection-data.js",
     "start": "react-native start",
-    "test": "TZ=UTC jest"
+    "storybook": "rnstl --searchDir ./storybook ./src --pattern \"**/*.stories.js\" && storybook start -p 7007 --root ../../",
+    "test": "jest",
+    "release": "standard-version --release-as minor"
   },
   "jest": {
     "preset": "react-native",
     "collectCoverage": true,
     "transformIgnorePatterns": [
-      "node_modules/(?!((jest-)?react-native|rn-*|react-clone-referenced-element|react-navigation|@react-navigation|@apollosproject))"
+      "node_modules/(?!((jest-)?react-native|rn-*|react-clone-referenced-element|react-navigation))"
     ],
     "testMatch": [
       "<rootDir>/src/**/?(*.)(test|tests).{js,jsx,mjs}"
@@ -54,73 +59,59 @@
     "modulePaths": [
       "<rootDir>/src/"
     ],
-    "modulePathIgnorePatterns": [
-      "node_modules/.*/node_modules/react-native"
-    ],
     "setupFiles": [
       "./jest.setup.js"
-    ]
+    ],
+    "transform": {
+      ".+\\.js$": "<rootDir>/node_modules/react-native/jest/preprocessor.js"
+    }
   },
   "dependencies": {
-    "@apollosproject/react-native-airplay-btn": "0.2.0",
-    "@apollosproject/ui-analytics": "^1.2.0-beta.3",
-    "@apollosproject/ui-auth": "^1.2.0-beta.3",
-    "@apollosproject/ui-htmlview": "^1.2.0-beta.3",
-    "@apollosproject/ui-kit": "^1.2.0-beta.3",
-    "@apollosproject/ui-media-player": "^1.2.0-beta.3",
-    "@apollosproject/ui-notifications": "^1.2.0-beta.3",
-    "@apollosproject/ui-onboarding": "^1.2.0-beta.3",
-    "@apollosproject/ui-passes": "^1.2.0-beta.3",
-    "@apollosproject/ui-scripture": "^1.2.0-beta.3",
-    "@apollosproject/ui-storybook": "^1.2.0-beta.3",
-    "@react-native-community/async-storage": "^1.5.1",
-    "@react-native-community/geolocation": "^2.0.2",
-    "apollo-cache-inmemory": "1.5.1",
+    "apollo-cache-inmemory": "1.3.5",
     "apollo-cache-persist": "0.1.1",
-    "apollo-client": "2.5.1",
-    "apollo-link": "1.2.8",
-    "apollo-link-http": "1.5.11",
-    "apollo-link-schema": "1.1.6",
+    "apollo-client": "2.4.2",
+    "apollo-link": "1.2.3",
+    "apollo-link-context": "1.0.9",
+    "apollo-link-http": "1.5.5",
+    "apollo-link-schema": "1.1.1",
+    "apollo-link-state": "0.4.2",
     "apollo-upload-client": "9.0.0",
     "color": "3.0.0",
-    "dotenv": "^6.2.0",
-    "events": "^3.0.0",
-    "formik": "^1.5.2",
+    "entities": "1.1.1",
+    "formik": "0.11.11",
     "graphql": "0.13.2",
     "graphql-tag": "2.9.2",
     "graphql-tools": "3.1.1",
-    "lodash": "^4.17.11",
+    "htmlparser2": "3.9.2",
+    "lodash": "4.17.10",
     "memoize-one": "4.0.0",
     "moment": "2.22.2",
     "node-fetch": "2.2.0",
-    "react": "16.8.6",
-    "react-apollo": "2.5.5",
-    "react-native": "0.60.5",
-    "react-native-config": "^0.11.7",
-    "react-native-device-info": "^2.1.2",
-    "react-native-geolocation-service": "^3.0.0",
-    "react-native-gesture-handler": "^1.3.0",
-    "react-native-image-picker": "0.28.0",
-    "react-native-inappbrowser-reborn": "^3.0.0",
-    "react-native-linear-gradient": "^2.5.4",
-    "react-native-maps": "0.25.0",
-    "react-native-music-control": "0.10.5",
-    "react-native-onesignal": "3.3.2",
-    "react-native-passkit-wallet": "^0.1.4",
+    "prettier": "1.14.2",
+    "react": "16.4.1",
+    "react-apollo": "2.2.4",
+    "react-native": "0.56.0",
+    "react-native-custom-tabs": "0.1.7",
+    "react-native-device-info": "0.22.5",
+    "react-native-image-picker": "0.26.10",
+    "react-native-keyboard-aware-scroll-view": "0.7.0",
+    "react-native-linear-gradient": "2.4.0",
+    "react-native-modal-datetime-picker": "6.0.0",
+    "react-native-music-control": "0.7.3",
+    "react-native-onesignal": "3.2.7",
     "react-native-safari-view": "2.1.0",
-    "react-native-safe-area-context": "^0.3.6",
-    "react-native-safe-area-view": "0.13.1",
-    "react-native-screens": "^1.0.0-alpha.23",
-    "react-native-splash-screen": "3.2.0",
-    "react-native-svg": "^9.4.0",
-    "react-native-video": "^5.0.0",
+    "react-native-safe-area-view": "0.11.0",
+    "react-native-screens": "1.0.0-alpha.12",
+    "react-native-splash-screen": "3.1.1",
+    "react-native-svg": "6.5.2",
+    "react-native-tab-view": "1.0.2",
+    "react-native-video": "3.2.0",
     "react-native-video-controls": "2.2.3",
-    "react-native-webview": "^5.2.0",
-    "react-navigation": "^3.11.0",
-    "recompose": "^0.30.0",
-    "rn-fetch-blob": "^0.10.16",
-    "stream": "^0.0.2",
-    "yup": "0.26.6"
+    "react-navigation": "2.11.2",
+    "recompose": "0.27.1",
+    "rn-placeholder": "1.2.0",
+    "stream": "0.0.2",
+    "yup": "0.26.2"
   },
   "rnpm": {
     "assets": [
diff --git a/apolloschurchapp/polyfill.js b/apolloschurchapp/polyfill.js
deleted file mode 100644
index e2e1ede..0000000
--- a/apolloschurchapp/polyfill.js
+++ /dev/null
@@ -1,10 +0,0 @@
-// this can be removed when we upgrade to react-native 59
-
-// symbol polyfills
-global.Symbol = require('core-js/es6/symbol');
-require('core-js/fn/symbol/iterator');
-
-// collection fn polyfills
-require('core-js/fn/map');
-require('core-js/fn/set');
-require('core-js/fn/array/find');
diff --git a/apolloschurchapp/rn-cli.config.js b/apolloschurchapp/rn-cli.config.js
new file mode 100644
index 0000000..40501d8
--- /dev/null
+++ b/apolloschurchapp/rn-cli.config.js
@@ -0,0 +1,77 @@
+/**
+ * This file is mainly copy-pasta scattered throughout the interwebs.
+ * I'll try and leave comments to make it easier to understand what's going on,
+ * but essentially this file is currently required to get react-native to play nice
+ * with yarn workspaces.
+ */
+const path = require('path');
+const fs = require('fs');
+const blacklist = require('metro/src/blacklist');
+const getWorkspaces = require('get-yarn-workspaces');
+
+/**
+ * used to resolve node_modules that might be symlinked by yarn
+ */
+function getNodeModulesForDirectory(rootPath) {
+  const nodeModulePath = path.join(rootPath, 'node_modules');
+  const folders = fs.readdirSync(nodeModulePath);
+  return folders.reduce((modules, folderName) => {
+    const folderPath = path.join(nodeModulePath, folderName);
+    if (folderName.startsWith('@')) {
+      const scopedModuleFolders = fs.readdirSync(folderPath);
+      const scopedModules = scopedModuleFolders.reduce(
+        (scopedModules, scopedFolderName) => {
+          scopedModules[
+            `${folderName}/${scopedFolderName}`
+          ] = maybeResolveSymlink(path.join(folderPath, scopedFolderName));
+          return scopedModules;
+        },
+        {}
+      );
+      return Object.assign({}, modules, scopedModules);
+    }
+    modules[folderName] = maybeResolveSymlink(folderPath);
+    return modules;
+  }, {});
+}
+
+function maybeResolveSymlink(maybeSymlinkPath) {
+  if (fs.lstatSync(maybeSymlinkPath).isSymbolicLink()) {
+    const resolved = path.resolve(
+      path.dirname(maybeSymlinkPath),
+      fs.readlinkSync(maybeSymlinkPath)
+    );
+    return resolved;
+  }
+  return maybeSymlinkPath;
+}
+
+const workspaces = getWorkspaces(path.resolve('.'));
+
+/**
+ * Options used by Metro builder
+ */
+module.exports = {
+  extraNodeModules: getNodeModulesForDirectory(path.resolve('.')),
+  getBlacklistRE() {
+    return blacklist(
+      workspaces.map(
+        (workspacePath) =>
+          `/${workspacePath.replace(
+            /\//g,
+            '[/\\\\]'
+          )}[/\\\\]node_modules[/\\\\]react-native[/\\\\].*/`
+      )
+    );
+  },
+  // I think this is the most important bit here - without this, a lot of modules aren't resolving
+  getProjectRoots() {
+    return [
+      // Keep your project directory.
+      path.resolve(path.resolve('.')),
+
+      // Include your forked package as a new root.
+      path.resolve('..', '..', 'node_modules'),
+    ].concat(workspaces);
+  },
+};
diff --git a/apolloschurchapp/scripts/get-introspection-data.js b/apolloschurchapp/scripts/get-introspection-data.js
index 80ae562..8acfcf3 100755
--- a/apolloschurchapp/scripts/get-introspection-data.js
+++ b/apolloschurchapp/scripts/get-introspection-data.js
@@ -1,15 +1,11 @@
 const fs = require('fs');
 const Path = require('path');
-require('dotenv/config');
-const fetch = require('node-fetch');
 
-const attempts = 0;
-const maxAttempts = 3;
-const timeBetweenAttempts = 5 * 1000;
+const fetch = require('node-fetch');
 
-const getIntrospectionData = async () => {
+(async () => {
   try {
-    const query = await fetch(process.env.APP_DATA_URL, {
+    const query = await fetch(`https://apollos-church-api.now.sh/graphql`, {
       method: 'POST',
       headers: { 'Content-Type': 'application/json' },
       body: JSON.stringify({
@@ -40,20 +36,7 @@ const getIntrospectionData = async () => {
       Path.resolve(__dirname, '../src/client/fragmentTypes.json'),
       JSON.stringify(data)
     );
-
-    console.log('Successfully wrote fragmentTypes!');
   } catch (e) {
-    if (attempts < maxAttempts) {
-      console.log(
-        `Error writing fragmentTypes (-api probably hasn't started yet). Trying again after wait. Attempt: ${attempts +
-          1} of ${maxAttempts}`
-      );
-      await new Promise((resolve) => setTimeout(resolve, timeBetweenAttempts)); // try again after waiting
-      getIntrospectionData();
-    } else {
-      // throw new Error('Error writing fragmentTypes file', e);
-    }
+    throw new Error('Error writing fragmentTypes file', e);
   }
-};
-
-getIntrospectionData();
+})();
diff --git a/apolloschurchapp/scripts/install_pods.sh b/apolloschurchapp/scripts/install_pods.sh
deleted file mode 100755
index dfd82f2..0000000
--- a/apolloschurchapp/scripts/install_pods.sh
+++ /dev/null
@@ -1,11 +0,0 @@
-cd ios
-# check cocoapods version
-MY_VERSION=$(pod --version)
-PODFILE_TEXT=$(sed -n /COCOAPODS/p Podfile.lock)
-MASTER_VERSION=${PODFILE_TEXT#"COCOAPODS: "}
-if [[ $MY_VERSION != $MASTER_VERSION ]]; then
-	echo "Cocoapods version mismatch. Install version $MASTER_VERSION."
-	exit 1
-fi
-# update repo and install pods
-pod install --repo-update
diff --git a/apolloschurchapp/src/LandingScreen.js b/apolloschurchapp/src/LandingScreen.js
deleted file mode 100644
index fa430a1..0000000
--- a/apolloschurchapp/src/LandingScreen.js
+++ /dev/null
@@ -1,26 +0,0 @@
-import React from 'react';
-import { styled, GradientOverlayImage } from '@apollosproject/ui-kit';
-
-import ApollosLandingScreen from './ui/LandingScreen';
-
-const FullScreenImage = styled({
-  resizeMode: 'cover',
-  position: 'absolute',
-})(GradientOverlayImage);
-
-const LandingScreen = ({ navigation }) => (
-  <ApollosLandingScreen
-    onPressPrimary={() => navigation.push('Auth')}
-    textColor={'white'}
-    BackgroundComponent={
-      <FullScreenImage source={'https://picsum.photos/375/812/?random'} />
-    }
-    primaryNavText={"Let's go!"}
-  />
-);
-
-LandingScreen.navigationOptions = {
-  header: null,
-};
-
-export default LandingScreen;
diff --git a/apolloschurchapp/src/NavigationService.js b/apolloschurchapp/src/NavigationService.js
index a2a5348..a5d758b 100644
--- a/apolloschurchapp/src/NavigationService.js
+++ b/apolloschurchapp/src/NavigationService.js
@@ -2,30 +2,22 @@ import { NavigationActions } from 'react-navigation';
 
 let _navigator;
 
-const setTopLevelNavigator = (navigatorRef) => {
+function setTopLevelNavigator(navigatorRef) {
   _navigator = navigatorRef;
-};
+}
 
-const navigate = (routeName, params) => {
+function navigate(routeName, params) {
   _navigator.dispatch(
     NavigationActions.navigate({
       routeName,
       params,
     })
   );
-};
+}
 
-const goBack = (from) => {
-  let key;
-  if (from) {
-    const route = _navigator.state.nav.routes.find((r) => r.routeName === from);
-    if (route) ({ key } = route);
-  }
-  _navigator.dispatch(NavigationActions.back({ key }));
-};
+// add other navigation functions that you need and export them
 
 export default {
-  setTopLevelNavigator,
   navigate,
-  goBack,
+  setTopLevelNavigator,
 };
diff --git a/apolloschurchapp/src/Notifications.js b/apolloschurchapp/src/Notifications.js
new file mode 100644
index 0000000..d37e22f
--- /dev/null
+++ b/apolloschurchapp/src/Notifications.js
@@ -0,0 +1,69 @@
+import querystring from 'querystring';
+import URL from 'url';
+import { Component } from 'react';
+import { Linking } from 'react-native';
+import OneSignal from 'react-native-onesignal';
+import NavigationService from './NavigationService';
+import { ONE_SIGNAL_KEY } from './config';
+
+export default class NotificationsInit extends Component {
+  static navigationOptions = {};
+
+  componentWillMount() {
+    OneSignal.init(ONE_SIGNAL_KEY, {
+      kOSSettingsKeyAutoPrompt: true,
+    });
+    OneSignal.addEventListener('received', this.onReceived);
+    OneSignal.addEventListener('opened', this.onOpened);
+    OneSignal.addEventListener('ids', this.onIds);
+  }
+
+  componentDidMount() {
+    Linking.getInitialURL().then((url) => {
+      this.navigate(url);
+    });
+    Linking.addEventListener('url', ({ url }) => this.navigate(url));
+  }
+
+  componentWillUnmount() {
+    Linking.removeEventListener('url');
+    OneSignal.removeEventListener('received');
+    OneSignal.removeEventListener('opened');
+    OneSignal.removeEventListener('ids');
+  }
+
+  navigate = (rawUrl) => {
+    if (!rawUrl) return;
+    const url = URL.parse(rawUrl);
+    const route = url.pathname.substring(1);
+    const args = querystring.parse(url.query);
+    NavigationService.navigate(route, args);
+  };
+
+  onReceived = (notification) => {
+    console.log('Notification received: ', notification);
+  };
+
+  onOpened = (openResult) => {
+    console.log('Message: ', openResult.notification.payload.body);
+    console.log('Data: ', openResult.notification.payload.additionalData);
+    console.log('isActive: ', openResult.notification.isAppInFocus);
+    console.log('openResult: ', openResult);
+    // URL looks like this
+    // apolloschurchapp://AppStackNavigator/Connect
+    // apolloschurchapp://SomethingElse/Connect
+    // apolloschurchapp://SomethingElse/ContentSingle?itemId=SomeItemId:blablalba
+    const { url } = openResult.notification.payload.additionalData;
+    if (url) {
+      this.navigate(url);
+    }
+  };
+
+  onIds = (device) => {
+    console.log('Device info: ', device);
+  };
+
+  render() {
+    return null;
+  }
+}
diff --git a/apolloschurchapp/src/Providers.js b/apolloschurchapp/src/Providers.js
index 9b7e84f..e2cd8e8 100644
--- a/apolloschurchapp/src/Providers.js
+++ b/apolloschurchapp/src/Providers.js
@@ -1,37 +1,13 @@
-import React from 'react';
-import Config from 'react-native-config';
-import { Providers } from '@apollosproject/ui-kit';
-import { AuthProvider } from '@apollosproject/ui-auth';
-import { AnalyticsProvider } from '@apollosproject/ui-analytics';
-import { MediaPlayerProvider } from '@apollosproject/ui-media-player';
-import { NotificationsProvider } from '@apollosproject/ui-notifications';
+import { nest } from 'recompose';
 
-import NavigationService from './NavigationService';
-import ClientProvider from './client';
-import customTheme, { customIcons } from './theme';
+import ClientProvider from 'apolloschurchapp/src/client';
+import { ThemeProvider } from 'apolloschurchapp/src/ui/theme';
+import { WebBrowserProvider } from 'apolloschurchapp/src/ui/WebBrowser';
+import { LayoutProvider } from 'apolloschurchapp/src/ui/LayoutContext';
 
-const AppProviders = (props) => (
-  <ClientProvider {...props}>
-    <NotificationsProvider
-      oneSignalKey={Config.ONE_SIGNAL_KEY}
-      navigate={NavigationService.navigate}
-    >
-      <AuthProvider
-        navigateToAuth={() => NavigationService.navigate('Auth')}
-        closeAuth={() => NavigationService.navigate('Onboarding')}
-      >
-        <MediaPlayerProvider>
-          <AnalyticsProvider>
-            <Providers
-              themeInput={customTheme}
-              iconInput={customIcons}
-              {...props}
-            />
-          </AnalyticsProvider>
-        </MediaPlayerProvider>
-      </AuthProvider>
-    </NotificationsProvider>
-  </ClientProvider>
+export default nest(
+  ClientProvider,
+  ThemeProvider,
+  WebBrowserProvider,
+  LayoutProvider
 );
-
-export default AppProviders;
diff --git a/apolloschurchapp/src/__mocks__/config.js b/apolloschurchapp/src/__mocks__/config.js
new file mode 100644
index 0000000..b1162fc
--- /dev/null
+++ b/apolloschurchapp/src/__mocks__/config.js
@@ -0,0 +1,2 @@
+/* eslint-disable import/prefer-default-export */
+export const ONE_SIGNAL_KEY = 'doesntmatter';
diff --git a/apolloschurchapp/src/analytics/TrackEventWhenLoaded.js b/apolloschurchapp/src/analytics/TrackEventWhenLoaded.js
new file mode 100644
index 0000000..eb7ed61
--- /dev/null
+++ b/apolloschurchapp/src/analytics/TrackEventWhenLoaded.js
@@ -0,0 +1,38 @@
+import { PureComponent } from 'react';
+import PropTypes from 'prop-types';
+import { track } from './index';
+
+export default class TrackEventWhenLoaded extends PureComponent {
+  componentDidMount() {
+    if (this.props.loaded) {
+      this.track();
+    }
+  }
+
+  componentDidUpdate(prevProps) {
+    if (!prevProps.loaded && this.props.loaded) {
+      this.track();
+    }
+  }
+
+  get trackClient() {
+    return this.props.track || track;
+  }
+
+  track() {
+    const { eventName, properties } = this.props;
+    return this.trackClient({ eventName, properties });
+  }
+
+  render() {
+    return null;
+  }
+}
+
+TrackEventWhenLoaded.propTypes = {
+  loaded: PropTypes.bool.isRequired,
+  eventName: PropTypes.string.isRequired,
+  // eslint-disable-next-line react/forbid-prop-types
+  properties: PropTypes.any,
+  track: PropTypes.func,
+};
diff --git a/apolloschurchapp/src/analytics/TrackEventWhenLoaded.tests.js b/apolloschurchapp/src/analytics/TrackEventWhenLoaded.tests.js
new file mode 100644
index 0000000..fcf66ed
--- /dev/null
+++ b/apolloschurchapp/src/analytics/TrackEventWhenLoaded.tests.js
@@ -0,0 +1,46 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import TrackEventWhenLoaded from './TrackEventWhenLoaded';
+
+const trackMock = jest.fn();
+
+describe('The TrackEventWhenLoaded component', () => {
+  afterEach(() => {
+    trackMock.mockClear();
+  });
+  it('should track an event if mounted with loaded=true', () => {
+    renderer.create(
+      <TrackEventWhenLoaded
+        loaded
+        eventName="Track Something"
+        properties={{ ThingId: '1234' }}
+        track={trackMock}
+      />
+    );
+    expect(trackMock.mock.calls).toMatchSnapshot();
+  });
+
+  it('should track an event if mounted with loaded=false and then switching to true', () => {
+    const tree = renderer.create(
+      <TrackEventWhenLoaded
+        loaded={false}
+        eventName="Track Something"
+        properties={{ ThingId: '1234' }}
+        track={trackMock}
+        key="tracker"
+      />
+    );
+    expect(trackMock.mock.calls).toMatchSnapshot();
+    tree.update(
+      <TrackEventWhenLoaded
+        loaded
+        eventName="Track Something"
+        properties={{ ThingId: '1234' }}
+        track={trackMock}
+        key="tracker"
+      />
+    );
+    expect(trackMock.mock.calls).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/analytics/index.js b/apolloschurchapp/src/analytics/index.js
new file mode 100644
index 0000000..cd7dbba
--- /dev/null
+++ b/apolloschurchapp/src/analytics/index.js
@@ -0,0 +1,79 @@
+import gql from 'graphql-tag';
+import DeviceInfo from 'react-native-device-info';
+import { Platform } from 'react-native';
+
+import { client } from '../client';
+
+const anonymousId = DeviceInfo.getUniqueID();
+
+const deviceInfo = {
+  platform: Platform.OS === 'ios' ? 'iOS' : 'Android',
+  deviceId: anonymousId,
+  deviceModel: DeviceInfo.getModel(),
+  osVersion: DeviceInfo.getSystemVersion(),
+  appVersion: DeviceInfo.getVersion(),
+};
+
+const trackMutation = gql`
+  mutation track($input: AnalyticsTrackInput!) {
+    trackEvent(input: $input) {
+      success
+    }
+  }
+`;
+
+const identifyMutation = gql`
+  mutation identify($input: AnalyticsIdentifyInput!) {
+    identifySelf(input: $input) {
+      success
+    }
+  }
+`;
+
+const propertiesToGqlInput = (props = []) =>
+  Object.keys(props).map((key) => ({
+    field: key,
+    value: props[key],
+  }));
+
+export const track = ({ eventName, properties }) =>
+  client.mutate({
+    mutation: trackMutation,
+    variables: {
+      input: {
+        anonymousId,
+        deviceInfo,
+        eventName,
+        properties: propertiesToGqlInput(properties),
+      },
+    },
+  });
+
+export const identify = () =>
+  client.mutate({
+    mutation: identifyMutation,
+    variables: {
+      input: {
+        anonymousId,
+        deviceInfo,
+      },
+    },
+  });
+
+export const events = {
+  LikeContent: 'Like Content',
+  UnlikeContent: 'Unlike Content',
+  ViewContent: 'View Content',
+  ShareContent: 'Share Content',
+  UserLogin: 'User Login',
+  UserSignup: 'User Signup',
+  UserLogout: 'UserLogout',
+  UserForgotPassword: 'User Forgot Password',
+  UserPlayedMedia: 'User Played Media',
+};
+
+export default {
+  track,
+  identify,
+  events,
+};
diff --git a/apolloschurchapp/src/auth/LoginButton/LoginButton.tests.js b/apolloschurchapp/src/auth/LoginButton/LoginButton.tests.js
new file mode 100644
index 0000000..64f2b62
--- /dev/null
+++ b/apolloschurchapp/src/auth/LoginButton/LoginButton.tests.js
@@ -0,0 +1,71 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+import wait from 'waait';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import getLoginState from '../getLoginState';
+
+import LoginButton from '.';
+
+describe('LoginButton component', () => {
+  it('renders nothing when logged in', async () => {
+    const mock = {
+      request: {
+        query: getLoginState,
+      },
+      result: {
+        data: { isLoggedIn: true },
+      },
+    };
+
+    const navigation = { navigate: jest.fn() };
+    const tree = renderer.create(
+      <Providers mocks={[mock]}>
+        <LoginButton navigation={navigation} />
+      </Providers>
+    );
+    await wait(0); // wait for response from graphql
+    expect(tree).toMatchSnapshot();
+  });
+
+  it('renders a LoginButton when logged out', async () => {
+    const mock = {
+      request: {
+        query: getLoginState,
+      },
+      result: {
+        data: { isLoggedIn: null },
+      },
+    };
+
+    const navigation = { navigate: jest.fn() };
+    const tree = renderer.create(
+      <Providers mocks={[mock]}>
+        <LoginButton navigation={navigation} />
+      </Providers>
+    );
+    await wait(0); // wait for response from graphql
+    expect(tree).toMatchSnapshot();
+  });
+
+  it('renders a LoginButton that is loading', async () => {
+    const mock = {
+      request: {
+        query: getLoginState,
+      },
+      result: {
+        data: { isLoggedIn: null },
+      },
+    };
+
+    const navigation = { navigate: jest.fn() };
+    const tree = renderer.create(
+      <Providers mocks={[mock]}>
+        <LoginButton navigation={navigation} loading />
+      </Providers>
+    );
+    await wait(0); // wait for response from graphql
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/auth/LoginButton/index.js b/apolloschurchapp/src/auth/LoginButton/index.js
new file mode 100644
index 0000000..4e932e2
--- /dev/null
+++ b/apolloschurchapp/src/auth/LoginButton/index.js
@@ -0,0 +1,40 @@
+import React, { PureComponent } from 'react';
+import { withNavigation } from 'react-navigation';
+import { Query } from 'react-apollo';
+import PropTypes from 'prop-types';
+
+import Button from 'apolloschurchapp/src/ui/Button';
+
+import getLoginState from '../getLoginState';
+
+class LoginButton extends PureComponent {
+  static propTypes = {
+    navigation: PropTypes.shape({
+      push: PropTypes.func,
+    }),
+  };
+
+  handleLoginPress = () => this.props.navigation.push('Auth');
+
+  render() {
+    const { navigation, ...otherProps } = this.props;
+    return (
+      <Query query={getLoginState}>
+        {({ data }) => {
+          const { isLoggedIn, loading } = data;
+          if (isLoggedIn) return null;
+          return (
+            <Button
+              onPress={this.handleLoginPress}
+              title="Get Connected"
+              loading={loading}
+              {...otherProps}
+            />
+          );
+        }}
+      </Query>
+    );
+  }
+}
+
+export default withNavigation(LoginButton);
diff --git a/apolloschurchapp/src/auth/ProtectedAction.js b/apolloschurchapp/src/auth/ProtectedAction.js
new file mode 100644
index 0000000..5cec0fd
--- /dev/null
+++ b/apolloschurchapp/src/auth/ProtectedAction.js
@@ -0,0 +1,67 @@
+import React, { PureComponent } from 'react';
+import { Query } from 'react-apollo';
+import PropTypes from 'prop-types';
+import { withNavigation } from 'react-navigation';
+
+import getLoginState from './getLoginState';
+
+class ProtectedAction extends PureComponent {
+  queuedActionsToTriggerOnLogin = [];
+
+  static propTypes = {
+    children: PropTypes.func,
+    navigation: PropTypes.shape({
+      push: PropTypes.func,
+    }),
+    loading: PropTypes.bool,
+    isLoggedIn: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),
+    action: PropTypes.func.isRequired,
+  };
+
+  componentDidUpdate(oldProps) {
+    if (!oldProps.isLoggedIn && this.props.isLoggedIn) {
+      this.handleLogin();
+    }
+
+    if (
+      oldProps.loading &&
+      !this.props.loading &&
+      !this.props.isLoggedIn &&
+      this.queuedActionsToTriggerOnLogin.length
+    ) {
+      this.triggerLogin();
+    }
+  }
+
+  handleLogin = () => {
+    this.queuedActionsToTriggerOnLogin.forEach((action) => action());
+    this.queuedActionsToTriggerOnLogin = [];
+  };
+
+  triggerLogin = () => this.props.navigation.push('Auth');
+
+  protectedActionHandler = (action) => (...args) => {
+    if (this.props.isLoggedIn) {
+      action(...args);
+    } else {
+      this.queuedActionsToTriggerOnLogin.push(action.bind(this, ...args));
+      if (!this.props.loading) this.triggerLogin();
+    }
+  };
+
+  render() {
+    return typeof this.props.children === 'function'
+      ? this.props.children(this.protectedActionHandler(this.props.action))
+      : this.props.children;
+  }
+}
+
+const ProtectedActionWithQuery = (props) => (
+  <Query query={getLoginState}>
+    {({ data: { isLoggedIn = false } = {}, loading }) => (
+      <ProtectedAction isLoggedIn={isLoggedIn} loading={loading} {...props} />
+    )}
+  </Query>
+);
+
+export default withNavigation(ProtectedActionWithQuery);
diff --git a/apolloschurchapp/src/auth/ProtectedTouchable.js b/apolloschurchapp/src/auth/ProtectedTouchable.js
new file mode 100644
index 0000000..df86cc4
--- /dev/null
+++ b/apolloschurchapp/src/auth/ProtectedTouchable.js
@@ -0,0 +1,24 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Touchable from 'apolloschurchapp/src/ui/Touchable';
+import ProtectedAction from './ProtectedAction';
+
+const ProtectedTouchable = ({
+  onPress,
+  children,
+  TouchableComponent = Touchable,
+}) => (
+  <ProtectedAction action={onPress}>
+    {(action) => (
+      <TouchableComponent onPress={action}>{children}</TouchableComponent>
+    )}
+  </ProtectedAction>
+);
+
+ProtectedTouchable.propTypes = {
+  onPress: PropTypes.func.isRequired,
+  children: PropTypes.node.isRequired,
+  TouchableComponent: PropTypes.func,
+};
+
+export default ProtectedTouchable;
diff --git a/apolloschurchapp/src/auth/getLoginState.js b/apolloschurchapp/src/auth/getLoginState.js
new file mode 100644
index 0000000..97d3e8d
--- /dev/null
+++ b/apolloschurchapp/src/auth/getLoginState.js
@@ -0,0 +1,7 @@
+import gql from 'graphql-tag';
+
+export default gql`
+  query {
+    isLoggedIn @client
+  }
+`;
diff --git a/apolloschurchapp/src/auth/handleLogin.js b/apolloschurchapp/src/auth/handleLogin.js
new file mode 100644
index 0000000..417dde0
--- /dev/null
+++ b/apolloschurchapp/src/auth/handleLogin.js
@@ -0,0 +1,7 @@
+import gql from 'graphql-tag';
+
+export default gql`
+  mutation handleLogin($authToken: String!) {
+    handleLogin(authToken: $authToken) @client
+  }
+`;
diff --git a/apolloschurchapp/src/auth/index.js b/apolloschurchapp/src/auth/index.js
new file mode 100644
index 0000000..f174021
--- /dev/null
+++ b/apolloschurchapp/src/auth/index.js
@@ -0,0 +1,93 @@
+import React, { PureComponent } from 'react';
+import PropTypes from 'prop-types';
+import { View, SafeAreaView } from 'react-native';
+
+import { withTheme } from 'apolloschurchapp/src/ui/theme';
+import FlexedView from 'apolloschurchapp/src/ui/FlexedView';
+import TabView, { SceneMap } from 'apolloschurchapp/src/ui/TabView';
+import { H1, H5 } from 'apolloschurchapp/src/ui/typography';
+import styled from 'apolloschurchapp/src/ui/styled';
+import Icon from 'apolloschurchapp/src/ui/Icon';
+import { ButtonLink } from 'apolloschurchapp/src/ui/Button';
+import { track } from 'apolloschurchapp/src/analytics';
+
+import LoginForm from './login';
+import SignUpForm from './signup';
+
+export LoginButton from './LoginButton';
+export ProtectedAction from './ProtectedAction';
+
+const Title = styled(({ theme }) => ({ color: theme.colors.primary }))(H1);
+
+const BrandIcon = withTheme(({ theme }) => ({
+  name: 'brand-icon',
+  size: theme.sizing.baseUnit * 2.25,
+  marginVertical: theme.sizing.baseUnit,
+  fill: theme.colors.primary,
+}))(Icon);
+
+const HeaderContainer = styled(({ theme }) => ({
+  backgroundColor: theme.colors.background.paper,
+}))(SafeAreaView);
+
+const Header = styled(({ theme }) => ({
+  padding: theme.sizing.baseUnit,
+  paddingBottom: theme.sizing.baseUnit * 1.5,
+}))(View);
+
+const CancelButton = styled(({ theme }) => ({
+  alignSelf: 'flex-end',
+  paddingTop: theme.sizing.baseUnit * 0.75,
+  paddingRight: theme.sizing.baseUnit,
+}))(ButtonLink);
+
+class Auth extends PureComponent {
+  static navigationOptions = {
+    header: null,
+  };
+
+  tabRoutes = [
+    { title: 'Sign In', key: 'login' },
+    { title: 'Register', key: 'signup' },
+  ];
+
+  static propTypes = {
+    navigation: PropTypes.shape({
+      goBack: PropTypes.func,
+    }),
+  };
+
+  handleFinish = () => {
+    // trigger the auth modal to close
+    track({ eventName: 'UserLogin' });
+    this.props.navigation.goBack();
+  };
+
+  renderLogin = () => <LoginForm onLogin={this.handleFinish} />;
+
+  renderSignup = () => <SignUpForm onSignup={this.handleFinish} />;
+
+  render() {
+    return (
+      <FlexedView>
+        <HeaderContainer>
+          <CancelButton onPress={this.handleFinish}>Cancel</CancelButton>
+          <Header>
+            <BrandIcon />
+            <Title>Welcome!</Title>
+            <H5>Please sign in to continue</H5>
+          </Header>
+        </HeaderContainer>
+        <TabView
+          routes={this.tabRoutes}
+          renderScene={SceneMap({
+            login: this.renderLogin,
+            signup: this.renderSignup,
+          })}
+        />
+      </FlexedView>
+    );
+  }
+}
+
+export default Auth;
diff --git a/apolloschurchapp/src/auth/login/Form.js b/apolloschurchapp/src/auth/login/Form.js
new file mode 100644
index 0000000..b45e525
--- /dev/null
+++ b/apolloschurchapp/src/auth/login/Form.js
@@ -0,0 +1,104 @@
+import React, { PureComponent } from 'react';
+import { View, SafeAreaView } from 'react-native';
+import PropTypes from 'prop-types';
+import { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';
+
+import { track, events } from 'apolloschurchapp/src/analytics';
+import { WebBrowserConsumer } from 'apolloschurchapp/src/ui/WebBrowser';
+import FlexedView from 'apolloschurchapp/src/ui/FlexedView';
+import PaddedView from 'apolloschurchapp/src/ui/PaddedView';
+import { Text as TextInput } from 'apolloschurchapp/src/ui/inputs';
+import Button, { ButtonLink } from 'apolloschurchapp/src/ui/Button';
+import styled from 'apolloschurchapp/src/ui/styled';
+
+const BottomSafeAreaView = styled({
+  position: 'absolute',
+  bottom: 0,
+  left: 0,
+  right: 0,
+})(SafeAreaView);
+
+class Form extends PureComponent {
+  static propTypes = {
+    setFieldValue: PropTypes.func,
+    touched: PropTypes.shape({}),
+    errors: PropTypes.shape({}),
+    values: PropTypes.shape({}),
+    handleSubmit: PropTypes.func,
+    isSubmitting: PropTypes.bool,
+    isValid: PropTypes.bool,
+  };
+
+  render() {
+    const {
+      values,
+      touched,
+      errors,
+      handleSubmit,
+      setFieldValue,
+      isValid,
+      isSubmitting,
+    } = this.props;
+    return (
+      <FlexedView>
+        <KeyboardAwareScrollView>
+          <PaddedView>
+            <View>
+              <TextInput
+                label="Email"
+                type="email"
+                value={values.email}
+                error={touched.email && errors.email}
+                onChangeText={(text) => setFieldValue('email', text)}
+                onSubmitEditing={() => this.passwordInput.focus()}
+                returnKeyType="next"
+                textContentType="username"
+                enablesReturnKeyAutomatically
+              />
+              <TextInput
+                label="Password"
+                type="password"
+                value={values.password}
+                error={touched.password && errors.password}
+                onChangeText={(text) => setFieldValue('password', text)}
+                onSubmitEditing={handleSubmit}
+                returnKeyType="go"
+                textContentType="password"
+                enablesReturnKeyAutomatically
+                inputRef={(r) => {
+                  this.passwordInput = r;
+                }}
+              />
+              <WebBrowserConsumer>
+                {(openUrl) => (
+                  <ButtonLink
+                    onPress={() => {
+                      track({ eventName: events.UserForgotPassword });
+                      return openUrl(
+                        'https://apollosrock.newspring.cc/page/56/'
+                      );
+                    }}
+                  >
+                    Forgot your password?
+                  </ButtonLink>
+                )}
+              </WebBrowserConsumer>
+            </View>
+          </PaddedView>
+        </KeyboardAwareScrollView>
+        <BottomSafeAreaView>
+          <PaddedView vertical={false}>
+            <Button
+              onPress={handleSubmit}
+              title="Sign in"
+              disabled={!isValid}
+              loading={isSubmitting}
+            />
+          </PaddedView>
+        </BottomSafeAreaView>
+      </FlexedView>
+    );
+  }
+}
+
+export default Form;
diff --git a/apolloschurchapp/src/auth/login/Form.stories.js b/apolloschurchapp/src/auth/login/Form.stories.js
new file mode 100644
index 0000000..54cc3f8
--- /dev/null
+++ b/apolloschurchapp/src/auth/login/Form.stories.js
@@ -0,0 +1,12 @@
+import React from 'react';
+import { storiesOf } from '@storybook/react-native';
+
+import LoginForm from './Form';
+
+storiesOf('Auth/LoginForm', module).add('Example', () => (
+  <LoginForm
+    values={{ email: '', password: '' }}
+    touched={{ email: false, password: false }}
+    errors={{ email: null, password: null }}
+  />
+));
diff --git a/apolloschurchapp/src/auth/login/Form.tests.js b/apolloschurchapp/src/auth/login/Form.tests.js
new file mode 100644
index 0000000..0e352e3
--- /dev/null
+++ b/apolloschurchapp/src/auth/login/Form.tests.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import LoginForm from './Form';
+
+describe('The LoginForm component', () => {
+  it('should render', () => {
+    const tree = renderer.create(
+      <Providers>
+        <LoginForm
+          values={{ email: '', password: '' }}
+          touched={{ email: false, password: false }}
+          errors={{ email: null, password: null }}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/auth/login/authenticate.js b/apolloschurchapp/src/auth/login/authenticate.js
new file mode 100644
index 0000000..94d4e74
--- /dev/null
+++ b/apolloschurchapp/src/auth/login/authenticate.js
@@ -0,0 +1,9 @@
+import gql from 'graphql-tag';
+
+export default gql`
+  mutation authenticate($email: String!, $password: String!) {
+    authenticate(identity: $email, password: $password) {
+      token
+    }
+  }
+`;
diff --git a/apolloschurchapp/src/auth/login/index.js b/apolloschurchapp/src/auth/login/index.js
new file mode 100644
index 0000000..1546d60
--- /dev/null
+++ b/apolloschurchapp/src/auth/login/index.js
@@ -0,0 +1,66 @@
+import React from 'react';
+import { Mutation } from 'react-apollo';
+import { Formik } from 'formik';
+import * as Yup from 'yup';
+import PropTypes from 'prop-types';
+
+import handleLogin from '../handleLogin';
+import { client } from '../../client'; //eslint-disable-line
+import authenticateMutation from './authenticate';
+import LoginForm from './Form';
+
+const Login = ({ onLogin }) => (
+  <Mutation
+    mutation={authenticateMutation}
+    update={(cache, { data: { authenticate } }) => {
+      client.mutate({
+        mutation: handleLogin,
+        variables: {
+          authToken: authenticate.token,
+        },
+      });
+    }}
+  >
+    {(authenticate) => (
+      <Formik
+        validationSchema={Yup.object().shape({
+          email: Yup.string()
+            .email('Invalid email address')
+            .required('Email is required!'),
+          password: Yup.string().required('Password is required!'),
+        })}
+        onSubmit={async (variables, { setSubmitting, setFieldError }) => {
+          try {
+            await authenticate({ variables });
+            if (onLogin) onLogin();
+          } catch (e) {
+            const { graphQLErrors } = e;
+            if (
+              graphQLErrors.length &&
+              graphQLErrors.find(
+                ({ extensions }) => extensions.code === 'UNAUTHENTICATED'
+              )
+            ) {
+              setFieldError('email', true);
+              setFieldError('password', 'Your email or password is incorrect.');
+            } else {
+              setFieldError(
+                'password',
+                'Unknown error. Please try again later.'
+              );
+            }
+          }
+          setSubmitting(false);
+        }}
+      >
+        {(formikBag) => <LoginForm {...formikBag} />}
+      </Formik>
+    )}
+  </Mutation>
+);
+
+Login.propTypes = {
+  onLogin: PropTypes.func,
+};
+
+export default Login;
diff --git a/apolloschurchapp/src/auth/logout.js b/apolloschurchapp/src/auth/logout.js
new file mode 100644
index 0000000..8dbff04
--- /dev/null
+++ b/apolloschurchapp/src/auth/logout.js
@@ -0,0 +1,7 @@
+import gql from 'graphql-tag';
+
+export default gql`
+  mutation {
+    logout @client
+  }
+`;
diff --git a/apolloschurchapp/src/auth/signup/Form.js b/apolloschurchapp/src/auth/signup/Form.js
new file mode 100644
index 0000000..6f219d8
--- /dev/null
+++ b/apolloschurchapp/src/auth/signup/Form.js
@@ -0,0 +1,88 @@
+import React, { PureComponent } from 'react';
+import { View, SafeAreaView } from 'react-native';
+import PropTypes from 'prop-types';
+import { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';
+
+import FlexedView from 'apolloschurchapp/src/ui/FlexedView';
+import PaddedView from 'apolloschurchapp/src/ui/PaddedView';
+import { Text as TextInput } from 'apolloschurchapp/src/ui/inputs';
+import Button from 'apolloschurchapp/src/ui/Button';
+import styled from 'apolloschurchapp/src/ui/styled';
+
+const BottomSafeAreaView = styled({
+  position: 'absolute',
+  bottom: 0,
+  left: 0,
+  right: 0,
+})(SafeAreaView);
+
+class Form extends PureComponent {
+  static propTypes = {
+    setFieldValue: PropTypes.func,
+    touched: PropTypes.shape({}),
+    errors: PropTypes.shape({}),
+    values: PropTypes.shape({}),
+    handleSubmit: PropTypes.func,
+    isSubmitting: PropTypes.bool,
+    isValid: PropTypes.bool,
+  };
+
+  render() {
+    const {
+      values,
+      touched,
+      errors,
+      handleSubmit,
+      setFieldValue,
+      isValid,
+      isSubmitting,
+    } = this.props;
+    return (
+      <FlexedView>
+        <KeyboardAwareScrollView>
+          <PaddedView>
+            <View>
+              <TextInput
+                label="Email"
+                type="email"
+                value={values.email}
+                error={touched.email && errors.email}
+                onChangeText={(text) => setFieldValue('email', text)}
+                onSubmitEditing={() => this.passwordInput.focus()}
+                returnKeyType="next"
+                textContentType="username"
+                enablesReturnKeyAutomatically
+              />
+              <TextInput
+                label="Password"
+                type="password"
+                value={values.password}
+                error={touched.password && errors.password}
+                onChangeText={(text) => setFieldValue('password', text)}
+                onSubmitEditing={handleSubmit}
+                returnKeyType="go"
+                textContentType="password"
+                enablesReturnKeyAutomatically
+                inputRef={(r) => {
+                  this.passwordInput = r;
+                }}
+              />
+            </View>
+          </PaddedView>
+        </KeyboardAwareScrollView>
+        <BottomSafeAreaView>
+          <PaddedView vertical={false}>
+            <Button
+              onPress={handleSubmit}
+              title="Register"
+              disabled={!isValid}
+              loading={isSubmitting}
+            />
+          </PaddedView>
+        </BottomSafeAreaView>
+      </FlexedView>
+    );
+  }
+}
+
+export default Form;
diff --git a/apolloschurchapp/src/auth/signup/Form.stories.js b/apolloschurchapp/src/auth/signup/Form.stories.js
new file mode 100644
index 0000000..da0e764
--- /dev/null
+++ b/apolloschurchapp/src/auth/signup/Form.stories.js
@@ -0,0 +1,12 @@
+import React from 'react';
+import { storiesOf } from '@storybook/react-native';
+
+import LoginForm from './Form';
+
+storiesOf('Auth/SignupForm', module).add('Example', () => (
+  <LoginForm
+    values={{ email: '', password: '' }}
+    touched={{ email: false, password: false }}
+    errors={{ email: null, password: null }}
+  />
+));
diff --git a/apolloschurchapp/src/auth/signup/Form.tests.js b/apolloschurchapp/src/auth/signup/Form.tests.js
new file mode 100644
index 0000000..5d9601f
--- /dev/null
+++ b/apolloschurchapp/src/auth/signup/Form.tests.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import LoginForm from './Form';
+
+describe('The SignupForm component', () => {
+  it('should render', () => {
+    const tree = renderer.create(
+      <Providers>
+        <LoginForm
+          values={{ email: '', password: '' }}
+          touched={{ email: false, password: false }}
+          errors={{ email: null, password: null }}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/auth/signup/index.js b/apolloschurchapp/src/auth/signup/index.js
new file mode 100644
index 0000000..81e64a7
--- /dev/null
+++ b/apolloschurchapp/src/auth/signup/index.js
@@ -0,0 +1,67 @@
+import React from 'react';
+import { Mutation } from 'react-apollo';
+import { Formik } from 'formik';
+import * as Yup from 'yup';
+import PropTypes from 'prop-types';
+
+import { track, events } from 'apolloschurchapp/src/analytics';
+
+import handleLogin from '../handleLogin';
+import { client } from '../../client'; //eslint-disable-line
+import registerPersonMutation from './registerPerson';
+import SignupForm from './Form';
+
+const Signup = ({ onSignup }) => (
+  <Mutation
+    mutation={registerPersonMutation}
+    update={(cache, { data: { registerPerson } }) => {
+      client.mutate({
+        mutation: handleLogin,
+        variables: {
+          authToken: registerPerson.token,
+        },
+      });
+    }}
+  >
+    {(authenticate) => (
+      <Formik
+        validationSchema={Yup.object().shape({
+          email: Yup.string()
+            .email('Invalid email address')
+            .required('Email is required!'),
+          password: Yup.string().required('Password is required!'),
+        })}
+        onSubmit={async (variables, { setSubmitting, setFieldError }) => {
+          try {
+            await authenticate({ variables });
+            track({ eventName: events.UserSignup }); // TODO: Move signup logic to store/index and move tracking logic there also.
+            if (onSignup) onSignup();
+          } catch ({ graphQLErrors = [], ...e }) {
+            if (
+              graphQLErrors.length &&
+              graphQLErrors.find(({ message }) =>
+                message.includes('User already exists')
+              )
+            ) {
+              setFieldError('email', 'There is already a user with this email');
+            } else {
+              setFieldError(
+                'password',
+                'Unknown error. Please try again later.'
+              );
+            }
+          }
+          setSubmitting(false);
+        }}
+      >
+        {(formikBag) => <SignupForm {...formikBag} />}
+      </Formik>
+    )}
+  </Mutation>
+);
+
+Signup.propTypes = {
+  onSignup: PropTypes.func,
+};
+
+export default Signup;
diff --git a/apolloschurchapp/src/auth/signup/registerPerson.js b/apolloschurchapp/src/auth/signup/registerPerson.js
new file mode 100644
index 0000000..77fc892
--- /dev/null
+++ b/apolloschurchapp/src/auth/signup/registerPerson.js
@@ -0,0 +1,9 @@
+import gql from 'graphql-tag';
+
+export default gql`
+  mutation registerPerson($email: String!, $password: String!) {
+    registerPerson(email: $email, password: $password) {
+      token
+    }
+  }
+`;
diff --git a/apolloschurchapp/src/client/__mocks__/index.js b/apolloschurchapp/src/client/__mocks__/index.js
index cf59c84..7d3347c 100644
--- a/apolloschurchapp/src/client/__mocks__/index.js
+++ b/apolloschurchapp/src/client/__mocks__/index.js
@@ -1,40 +1,29 @@
-import React from 'react';
 import { MockedProvider } from 'react-apollo/test-utils';
 import ApolloClient from 'apollo-client';
 import { makeExecutableSchema, addMockFunctionsToSchema } from 'graphql-tools';
 import { SchemaLink } from 'apollo-link-schema';
-import { importSchema } from 'graphql-import';
+import { ApolloLink } from 'apollo-link';
+import { testSchema as typeDefs } from 'apollos-church-api';
 
 import cache from '../cache';
-import { resolvers, schema, defaults } from '../../store';
+import clientStateLink from '../clientStateLink';
 
-// eslint-disable-next-line
-export default (props) => {
-  let finalProps = props;
-  // eslint-disable-next-line
-  if (!props.mocks) {
-    // eslint-disable-next-line
-    finalProps = { ...props, resolvers };
-  }
-  return <MockedProvider cache={cache} {...finalProps} />;
-};
+export default MockedProvider;
 
-const serverSchema = makeExecutableSchema({
-  typeDefs: importSchema(
-    `${process.cwd()}/../apollos-church-api/local.graphql`
-  ),
+const schema = makeExecutableSchema({
+  typeDefs,
   resolverValidationOptions: {
     requireResolversForResolveType: false,
   },
 });
-addMockFunctionsToSchema({ schema: serverSchema });
+addMockFunctionsToSchema({ schema });
 
-const link = new SchemaLink({ schema: serverSchema });
-cache.writeData({ data: defaults });
+let link = new SchemaLink({ schema });
+if (clientStateLink) {
+  link = ApolloLink.from([clientStateLink, link]);
+}
 
 export const client = new ApolloClient({
-  link,
   cache,
-  resolvers,
-  typeDefs: schema,
+  link,
 });
diff --git a/apolloschurchapp/src/client/authLink.js b/apolloschurchapp/src/client/authLink.js
new file mode 100644
index 0000000..407934b
--- /dev/null
+++ b/apolloschurchapp/src/client/authLink.js
@@ -0,0 +1,35 @@
+import { setContext } from 'apollo-link-context';
+import gql from 'graphql-tag';
+
+import { ensureCacheHydration } from './cache';
+
+import { client } from './'; // eslint-disable-line
+
+export default setContext(async (request, { headers }) => {
+  try {
+    await ensureCacheHydration;
+
+    const {
+      data: { authToken },
+    } = await client.query({
+      query: gql`
+        query {
+          authToken @client
+        }
+      `,
+    });
+    if (!authToken) return {};
+
+    // return the headers to the context so httpLink can read them
+    return {
+      headers: {
+        ...headers,
+        authorization: authToken,
+      },
+    };
+  } catch (err) {
+    // eslint-disable-next-line
+    console.warn('Authorization Failed', err);
+    return {};
+  }
+});
diff --git a/apolloschurchapp/src/client/cache.js b/apolloschurchapp/src/client/cache.js
index 862639f..3979a8a 100644
--- a/apolloschurchapp/src/client/cache.js
+++ b/apolloschurchapp/src/client/cache.js
@@ -2,28 +2,16 @@ import {
   InMemoryCache,
   IntrospectionFragmentMatcher,
 } from 'apollo-cache-inmemory';
-import AsyncStorage from '@react-native-community/async-storage';
+import { AsyncStorage } from 'react-native';
+import DeviceInfo from 'react-native-device-info';
 import { CachePersistor } from 'apollo-cache-persist';
-import gql from 'graphql-tag';
-import Config from 'react-native-config';
-import introspectionQueryResultData from './fragmentTypes.json';
-
-export const CACHE_LOADED = gql`
-  query {
-    cacheLoaded @client
-  }
-`;
 
-export const MARK_CACHE_LOADED = gql`
-  mutation markCacheLoaded {
-    cacheMarkLoaded @client
-  }
-`;
+import introspectionQueryResultData from './fragmentTypes.json';
 
-// We reset our apollo cache based an env value and static number.
-// In the future, we should also look at resetting the app when an error occurs related to Apollo.
-// You can also increment this number to force a manual reset of the cache.
-const SCHEMA_VERSION = `${Config.SCHEMA_VERSION}-1`; // Must be a string.
+// We reset our apollo cache on every build:
+// TODO: this could be optimized by only reseting cache when our schema or client-side schema changes,
+// however there is risk for missing changes and breaking things in production, so this is safer.
+const SCHEMA_VERSION = `${DeviceInfo.getVersion()}${DeviceInfo.getBuildNumber()}`; // Must be a string.
 const SCHEMA_VERSION_KEY = 'apollo-schema-version';
 
 const nodeCacheRedirect = (_, { id }, { getCacheKey }) =>
@@ -45,26 +33,13 @@ const persistor = new CachePersistor({
   storage: AsyncStorage,
 });
 
-// 1. If we are on the same schema version, restore the cache.
-// 2. If that fails, purge the cache and update the stored version so we don't try and restore agian
-// 3. If we are on a new schema version, purge the cache.
-// 4. If purging or setting AsyncStorage keys fails (or anything else) we capture the error and log it.
-
 export const ensureCacheHydration = (async () => {
-  // We wrap everything in try/catch because crashing on a cache restore is bad
-  // 😬
   try {
     const currentVersion = await AsyncStorage.getItem(SCHEMA_VERSION_KEY);
     if (currentVersion === SCHEMA_VERSION) {
       // If the current version matches the latest version,
       // we're good to go and can restore the cache.
-      try {
-        await persistor.restore();
-      } catch (restoreError) {
-        // If the restore fails, we want to do our best to purge the cache.
-        await persistor.purge();
-        console.error('Error restoring cache, purging the cache', restoreError);
-      }
+      await persistor.restore();
     } else {
       // Otherwise, we'll want to purge the outdated persisted cache
       // and mark ourselves as having updated to the latest version.
@@ -72,7 +47,7 @@ export const ensureCacheHydration = (async () => {
       await AsyncStorage.setItem(SCHEMA_VERSION_KEY, SCHEMA_VERSION);
     }
   } catch (error) {
-    console.error('Error restoring or purging Apollo cache', error);
+    console.error('Error restoring Apollo cache', error);
   }
 })();
 
diff --git a/apolloschurchapp/src/client/clientStateLink.js b/apolloschurchapp/src/client/clientStateLink.js
new file mode 100644
index 0000000..0c45da8
--- /dev/null
+++ b/apolloschurchapp/src/client/clientStateLink.js
@@ -0,0 +1,11 @@
+import { withClientState } from 'apollo-link-state';
+
+import { resolvers, defaults, schema } from '../store';
+import cache from './cache';
+
+export default withClientState({
+  resolvers,
+  defaults,
+  cache,
+  typeDefs: schema,
+});
diff --git a/apolloschurchapp/src/client/fragmentTypes.json b/apolloschurchapp/src/client/fragmentTypes.json
index 9dcddbd..8b9885f 100644
--- a/apolloschurchapp/src/client/fragmentTypes.json
+++ b/apolloschurchapp/src/client/fragmentTypes.json
@@ -1 +1 @@
-{"__schema":{"types":[{"kind":"INTERFACE","name":"Node","possibleTypes":[{"name":"ContentChannel"},{"name":"Person"},{"name":"Campus"},{"name":"Event"},{"name":"Group"},{"name":"Scripture"},{"name":"Pass"},{"name":"UniversalContentItem"},{"name":"DevotionalContentItem"},{"name":"MediaContentItem"},{"name":"ContentSeriesContentItem"},{"name":"WeekendContentItem"},{"name":"ActionListFeature"},{"name":"TextFeature"},{"name":"ScriptureFeature"}]},{"kind":"INTERFACE","name":"ContentItem","possibleTypes":[{"name":"UniversalContentItem"},{"name":"DevotionalContentItem"},{"name":"MediaContentItem"},{"name":"ContentSeriesContentItem"},{"name":"WeekendContentItem"}]},{"kind":"INTERFACE","name":"Media","possibleTypes":[{"name":"ImageMedia"},{"name":"VideoMedia"},{"name":"AudioMedia"}]},{"kind":"INTERFACE","name":"MediaSource","possibleTypes":[{"name":"ImageMediaSource"},{"name":"VideoMediaSource"},{"name":"AudioMediaSource"}]},{"kind":"INTERFACE","name":"Sharable","possibleTypes":[{"name":"SharableContentItem"},{"name":"SharableFeature"}]},{"kind":"INTERFACE","name":"Feature","possibleTypes":[{"name":"ActionListFeature"},{"name":"TextFeature"},{"name":"ScriptureFeature"}]}]}}
\ No newline at end of file
+{"__schema":{"types":[{"kind":"INTERFACE","name":"Node","possibleTypes":[{"name":"ContentChannel"},{"name":"Person"},{"name":"Interaction"},{"name":"UniversalContentItem"},{"name":"DevotionalContentItem"}]},{"kind":"INTERFACE","name":"ContentItem","possibleTypes":[{"name":"UniversalContentItem"},{"name":"DevotionalContentItem"}]},{"kind":"INTERFACE","name":"Media","possibleTypes":[{"name":"ImageMedia"},{"name":"VideoMedia"},{"name":"AudioMedia"}]},{"kind":"INTERFACE","name":"MediaSource","possibleTypes":[{"name":"ImageMediaSource"},{"name":"VideoMediaSource"},{"name":"AudioMediaSource"}]},{"kind":"INTERFACE","name":"Sharable","possibleTypes":[{"name":"SharableContentItem"}]}]}}
\ No newline at end of file
diff --git a/apolloschurchapp/src/client/httpLink.js b/apolloschurchapp/src/client/httpLink.js
index c8974f8..39a48f0 100644
--- a/apolloschurchapp/src/client/httpLink.js
+++ b/apolloschurchapp/src/client/httpLink.js
@@ -1,24 +1,10 @@
 import { Platform } from 'react-native';
 import { createUploadLink } from 'apollo-upload-client';
-import Config from 'react-native-config';
-import { split } from 'apollo-link';
-import { createHttpLink } from 'apollo-link-http';
-import { getMainDefinition } from 'apollo-utilities';
+import { APP_DATA_URL } from 'react-native-dotenv';
 
-let uri = Config.APP_DATA_URL;
-const androidUri = Config.ANDROID_URL || '10.0.2.2';
+let uri = APP_DATA_URL;
 
 // Android's emulator requires localhost network traffic to go through 10.0.2.2
-if (Platform.OS === 'android') uri = uri.replace('localhost', androidUri);
+if (Platform.OS === 'android') uri = uri.replace('localhost', '10.0.2.2');
 
-export default split(
-  ({ query }) => {
-    const { kind, operation } = getMainDefinition(query);
-    return kind === 'OperationDefinition' && operation === 'mutation';
-  },
-  createUploadLink({ uri }),
-  createHttpLink({
-    uri,
-    useGETForQueries: true,
-  })
-);
+export default createUploadLink({ uri });
diff --git a/apolloschurchapp/src/client/index.js b/apolloschurchapp/src/client/index.js
index fb7ca59..76cff4a 100644
--- a/apolloschurchapp/src/client/index.js
+++ b/apolloschurchapp/src/client/index.js
@@ -3,43 +3,22 @@ import PropTypes from 'prop-types';
 import { ApolloProvider } from 'react-apollo';
 import { ApolloClient } from 'apollo-client';
 import { ApolloLink } from 'apollo-link';
+import SplashScreen from 'react-native-splash-screen';
 
-import { authLink, buildErrorLink } from '@apollosproject/ui-auth';
-import { resolvers, schema, defaults } from '../store';
-import NavigationService from '../NavigationService';
 import httpLink from './httpLink';
-import cache, { ensureCacheHydration, MARK_CACHE_LOADED } from './cache';
+import clientStateLink from './clientStateLink';
+import authLink from './authLink'; // eslint-disable-line
+import cache, { ensureCacheHydration } from './cache';
 
-const goToAuth = () => NavigationService.navigate('Auth');
-const wipeData = () => cache.writeData({ data: defaults });
-
-let resetStore;
-const onAuthError = () => {
-  resetStore();
-  goToAuth();
-};
-
-const errorLink = buildErrorLink(onAuthError);
-
-const link = ApolloLink.from([authLink, errorLink, httpLink]);
+const link = clientStateLink.concat(ApolloLink.from([authLink, httpLink]));
 
 export const client = new ApolloClient({
   link,
   cache,
-  queryDeduplication: false,
+  queryDeduplication: true,
   shouldBatch: true,
-  resolvers,
-  typeDefs: schema,
 });
 
-// Hack to give auth link access to method on client;
-// eslint-disable-next-line prefer-destructuring
-resetStore = client.resetStore;
-
-wipeData();
-// Ensure that media player still works after logout.
-client.onResetStore(() => wipeData());
-
 class ClientProvider extends PureComponent {
   static propTypes = {
     client: PropTypes.shape({
@@ -57,7 +36,7 @@ class ClientProvider extends PureComponent {
     } catch (e) {
       throw e;
     } finally {
-      client.mutate({ mutation: MARK_CACHE_LOADED });
+      if (SplashScreen && SplashScreen.hide) SplashScreen.hide();
     }
   }
 
diff --git a/apolloschurchapp/src/config.js b/apolloschurchapp/src/config.js
new file mode 100644
index 0000000..248183d
--- /dev/null
+++ b/apolloschurchapp/src/config.js
@@ -0,0 +1,6 @@
+/* eslint-disable import/prefer-default-export */
+import { ONE_SIGNAL_KEY as oneSignalKey } from 'react-native-dotenv';
+
+const ONE_SIGNAL_KEY = oneSignalKey;
+
+export { ONE_SIGNAL_KEY };
diff --git a/apolloschurchapp/src/content-feed/content-feed.tests.js b/apolloschurchapp/src/content-feed/content-feed.tests.js
index 21b8c9c..544d818 100644
--- a/apolloschurchapp/src/content-feed/content-feed.tests.js
+++ b/apolloschurchapp/src/content-feed/content-feed.tests.js
@@ -1,32 +1,24 @@
 import React from 'react';
+import renderer from 'react-test-renderer';
 
 import Providers from 'apolloschurchapp/src/Providers';
 
-import { renderWithApolloData } from '../utils/testUtils';
-import GET_CONTENT_FEED from './getContentFeed';
+import getContentFeed from './getContentFeed';
 
 import ContentFeed from './index';
 
 describe('content feed query component', () => {
-  it('renders a feedview after successful query', async () => {
+  it('renders a feedview after successful query', () => {
     const mock = {
       request: {
-        query: GET_CONTENT_FEED,
-        variables: { itemId: 'ContentChannel:123' },
+        query: getContentFeed,
       },
       result: {
         data: {
           node: {
-            __typename: 'ContentChannel',
             childContentItemsConnection: {
-              pageInfo: {
-                endCursor: 'blablalba',
-                __typename: 'PaginationInfo',
-              },
-              __typename: 'ContentItemsConnection',
               edges: [
                 {
-                  __typename: 'ContentItemsConnectionEdge',
                   node: {
                     __typename: 'UniversalContentItem',
                     id: 'UniversalContentItem:d57994350b9d213866b24dea3a97433d',
@@ -35,19 +27,11 @@ describe('content feed query component', () => {
                       id: 'ContentChannel:4f68015ba18662a7409d1219a4ce013e',
                       name: 'Editorial',
                       iconName: 'text',
-                      __typename: 'ContentChannel',
                     },
                     title: 'Mea Animal Aperiam Ornatus Eu',
-                    summary: 'Bla bla bla',
-                    theme: null,
-                    isLiked: false,
-                    likedCount: 0,
-                    videos: [],
-                    audios: [],
                   },
                 },
                 {
-                  __typename: 'ContentItemsConnectionEdge',
                   node: {
                     __typename: 'UniversalContentItem',
                     id: 'UniversalContentItem:b36e55d803443431e96bb4b5068147ec',
@@ -56,15 +40,8 @@ describe('content feed query component', () => {
                       id: 'ContentChannel:4f68015ba18662a7409d1219a4ce013e',
                       name: 'Editorial',
                       iconName: 'text',
-                      __typename: 'ContentChannel',
                     },
                     title: 'Probo Senserit Id Mea, Ut Sed Malis Postea,',
-                    summary: 'Bla bla bla',
-                    theme: null,
-                    isLiked: false,
-                    likedCount: 0,
-                    videos: [],
-                    audios: [],
                   },
                 },
               ],
@@ -75,10 +52,10 @@ describe('content feed query component', () => {
     };
 
     const navigation = {
-      getParam: () => 'ContentChannel:123',
+      getParam: jest.fn(),
       navigate: jest.fn(),
     };
-    const tree = await renderWithApolloData(
+    const tree = renderer.create(
       <Providers mocks={[mock]}>
         <ContentFeed navigation={navigation} />
       </Providers>
diff --git a/apolloschurchapp/src/content-feed/getContentFeed.js b/apolloschurchapp/src/content-feed/getContentFeed.js
index 40758cb..5bc3bc6 100644
--- a/apolloschurchapp/src/content-feed/getContentFeed.js
+++ b/apolloschurchapp/src/content-feed/getContentFeed.js
@@ -1,26 +1,35 @@
 import gql from 'graphql-tag';
 
-import { LARGE_CARD_FRAGMENT } from 'apolloschurchapp/src/ui/ContentCardConnected';
-import { CONTENT_ITEM_FRAGMENT } from '../content-single/getContentItem';
+import { contentItemFragment } from '../content-single/getContentItem';
 
 export default gql`
-  query getContentFeed($itemId: ID!, $after: String, $first: Int) {
+  query getContentFeed($itemId: ID!) {
     node(id: $itemId) {
       ... on ContentChannel {
-        childContentItemsConnection(after: $after, first: $first) {
-          pageInfo {
-            endCursor
-          }
+        childContentItemsConnection {
           edges {
             node {
               ...contentItemFragment
-              ...largeCardFragment
+              __typename
+              id
+              coverImage {
+                name
+                sources {
+                  uri
+                }
+              }
+              isLiked
+              parentChannel {
+                id
+                name
+                iconName
+              }
+              title
             }
           }
         }
       }
     }
   }
-  ${CONTENT_ITEM_FRAGMENT}
-  ${LARGE_CARD_FRAGMENT}
+  ${contentItemFragment}
 `;
diff --git a/apolloschurchapp/src/content-feed/index.js b/apolloschurchapp/src/content-feed/index.js
index 8443086..38ecc37 100644
--- a/apolloschurchapp/src/content-feed/index.js
+++ b/apolloschurchapp/src/content-feed/index.js
@@ -3,12 +3,10 @@ import { Query } from 'react-apollo';
 import { get } from 'lodash';
 import PropTypes from 'prop-types';
 
-import { BackgroundView, FeedView } from '@apollosproject/ui-kit';
+import BackgroundView from 'apolloschurchapp/src/ui/BackgroundView';
+import FeedView from 'apolloschurchapp/src/ui/FeedView';
 
-import ContentCardConnected from 'apolloschurchapp/src/ui/ContentCardConnected';
-import fetchMoreResolver from 'apolloschurchapp/src/utils/fetchMoreResolver';
-
-import GET_CONTENT_FEED from './getContentFeed';
+import getContentFeed from './getContentFeed';
 /**
  * This is where the component description lives
  * A FeedView wrapped in a query to pull content data.
@@ -47,24 +45,17 @@ class ContentFeed extends PureComponent {
     return (
       <BackgroundView>
         <Query
-          query={GET_CONTENT_FEED}
+          query={getContentFeed}
           variables={{ itemId }}
           fetchPolicy="cache-and-network"
         >
-          {({ loading, error, data, refetch, fetchMore, variables }) => (
+          {({ loading, error, data, refetch }) => (
             <FeedView
-              ListItemComponent={ContentCardConnected}
               content={get(
                 data,
                 'node.childContentItemsConnection.edges',
                 []
               ).map((edge) => edge.node)}
-              fetchMore={fetchMoreResolver({
-                collectionName: 'node.childContentItemsConnection',
-                fetchMore,
-                variables,
-                data,
-              })}
               isLoading={loading}
               error={error}
               refetch={refetch}
diff --git a/apolloschurchapp/src/ui/ShareContentButtonConnected/getShareContent.js b/apolloschurchapp/src/content-single/ActionContainer/getShareContent.js
similarity index 100%
rename from apolloschurchapp/src/ui/ShareContentButtonConnected/getShareContent.js
rename to apolloschurchapp/src/content-single/ActionContainer/getShareContent.js
diff --git a/apolloschurchapp/src/content-single/ActionContainer/index.js b/apolloschurchapp/src/content-single/ActionContainer/index.js
index 7b64e05..a6b1408 100644
--- a/apolloschurchapp/src/content-single/ActionContainer/index.js
+++ b/apolloschurchapp/src/content-single/ActionContainer/index.js
@@ -1,11 +1,17 @@
 import React from 'react';
 import { Platform, View } from 'react-native';
 import PropTypes from 'prop-types';
-import ShareContentButtonConnected from 'apolloschurchapp/src/ui/ShareContentButtonConnected';
+import { Query } from 'react-apollo';
+import { get } from 'lodash';
 
-import { SideBySideView, styled } from '@apollosproject/ui-kit';
-import LikeContentButtonConnected from 'apolloschurchapp/src/ui/LikeContentButtonConnected';
-import { MediaPlayerSpacer } from '@apollosproject/ui-media-player';
+import Share from 'apolloschurchapp/src/ui/Share';
+
+import SideBySideView from 'apolloschurchapp/src/ui/SideBySideView';
+import LikeButton from 'apolloschurchapp/src/ui/LikeButton';
+import styled from 'apolloschurchapp/src/ui/styled';
+import { MediaPlayerSpacer } from 'apolloschurchapp/src/ui/MediaPlayer';
+
+import getShareContent from './getShareContent';
 
 const PositioningView = styled(({ theme }) => ({
   justifyContent: 'space-around',
@@ -22,8 +28,15 @@ const ActionContainer = ({ itemId }) => (
   <Container>
     <MediaPlayerSpacer>
       <PositioningView>
-        <LikeContentButtonConnected itemId={itemId} />
-        <ShareContentButtonConnected itemId={itemId} />
+        <LikeButton itemId={itemId} />
+        <Query query={getShareContent} variables={{ itemId }}>
+          {({ data: { node } = {}, error, loading }) => {
+            const sharing = get(node, 'sharing');
+            return loading || error || !sharing ? null : (
+              <Share content={sharing} />
+            );
+          }}
+        </Query>
       </PositioningView>
     </MediaPlayerSpacer>
   </Container>
diff --git a/apolloschurchapp/src/content-single/ContentSingle.js b/apolloschurchapp/src/content-single/ContentSingle.js
deleted file mode 100644
index 817af65..0000000
--- a/apolloschurchapp/src/content-single/ContentSingle.js
+++ /dev/null
@@ -1,116 +0,0 @@
-import React, { PureComponent } from 'react';
-import { Query } from 'react-apollo';
-import { get } from 'lodash';
-import PropTypes from 'prop-types';
-
-import { ErrorCard, ThemeMixin } from '@apollosproject/ui-kit';
-
-import { TrackEventWhenLoaded } from '@apollosproject/ui-analytics';
-
-import ActionContainer from './ActionContainer';
-import GET_CONTENT_ITEM from './getContentItem';
-
-import DevotionalContentItem from './DevotionalContentItem';
-import UniversalContentItem from './UniversalContentItem';
-import WeekendContentItem from './WeekendContentItem';
-
-import NavigationHeader from './NavigationHeader';
-
-class ContentSingle extends PureComponent {
-  static propTypes = {
-    navigation: PropTypes.shape({
-      getParam: PropTypes.func,
-      push: PropTypes.func,
-    }),
-  };
-
-  static navigationOptions = {
-    header: NavigationHeader,
-    headerTransparent: true,
-    headerMode: 'float',
-  };
-
-  get itemId() {
-    return this.props.navigation.getParam('itemId', []);
-  }
-
-  get queryVariables() {
-    return { itemId: this.itemId };
-  }
-
-  renderContent = ({ content, loading, error }) => {
-    let { __typename } = content;
-    if (!__typename && this.itemId) {
-      [__typename] = this.itemId.split(':');
-    }
-
-    switch (__typename) {
-      case 'DevotionalContentItem':
-        return (
-          <DevotionalContentItem
-            id={this.itemId}
-            content={content}
-            loading={loading}
-            error={error}
-          />
-        );
-      case 'WeekendContentItem':
-        return (
-          <WeekendContentItem
-            id={this.itemId}
-            content={content}
-            loading={loading}
-            error={error}
-          />
-        );
-      case 'UniversalContentItem':
-      default:
-        return (
-          <UniversalContentItem
-            id={this.itemId}
-            content={content}
-            loading={loading}
-            error={error}
-          />
-        );
-    }
-  };
-
-  renderWithData = ({ loading, error, data }) => {
-    if (error) return <ErrorCard error={error} />;
-
-    const content = data.node || {};
-
-    const { theme = {}, id } = content;
-
-    return (
-      <ThemeMixin
-        mixin={{
-          type: get(theme, 'type', 'light').toLowerCase(),
-          colors: get(theme, 'colors'),
-        }}
-      >
-        <TrackEventWhenLoaded
-          loaded={!!(!loading && content.title)}
-          eventName={'View Contentx'}
-          properties={{
-            title: content.title,
-            itemId: this.itemId,
-          }}
-        />
-        {this.renderContent({ content, loading, error })}
-        <ActionContainer itemId={id} />
-      </ThemeMixin>
-    );
-  };
-
-  render() {
-    return (
-      <Query query={GET_CONTENT_ITEM} variables={this.queryVariables}>
-        {this.renderWithData}
-      </Query>
-    );
-  }
-}
-
-export default ContentSingle;
diff --git a/apolloschurchapp/src/content-single/DevotionalContentItem/ContentTab.js b/apolloschurchapp/src/content-single/DevotionalContentItem/ContentTab.js
index 426feb3..3edf978 100644
--- a/apolloschurchapp/src/content-single/DevotionalContentItem/ContentTab.js
+++ b/apolloschurchapp/src/content-single/DevotionalContentItem/ContentTab.js
@@ -1,8 +1,10 @@
 import React from 'react';
 import { ScrollView } from 'react-native';
 import PropTypes from 'prop-types';
-import { PaddedView, H2, styled } from '@apollosproject/ui-kit';
-import { ScriptureList } from '@apollosproject/ui-scripture';
+import PaddedView from 'apolloschurchapp/src/ui/PaddedView';
+import { H2 } from 'apolloschurchapp/src/ui/typography';
+import styled from 'apolloschurchapp/src/ui/styled';
+import { ScriptureList } from 'apolloschurchapp/src/ui/Scripture';
 import HorizontalContentFeed from '../HorizontalContentFeed';
 import HTMLContent from '../HTMLContent';
 
diff --git a/apolloschurchapp/src/content-single/DevotionalContentItem/Devotional.stories.js b/apolloschurchapp/src/content-single/DevotionalContentItem/Devotional.stories.js
index 8bf3ffd..109a669 100644
--- a/apolloschurchapp/src/content-single/DevotionalContentItem/Devotional.stories.js
+++ b/apolloschurchapp/src/content-single/DevotionalContentItem/Devotional.stories.js
@@ -1,62 +1,60 @@
-// TODO: fix story
-
-// import React from 'react';
-// import { storiesOf } from '@apollosproject/ui-storybook';
-
-// import Devotional from '.';
-
-// const scripture = [
-//   {
-//     id: '1CO.15.57',
-//     reference: '1 Corinthians 15:57',
-//     html:
-//       '<p class="p"><span data-number="57" class="v">57</span>But thanks be to God, who gives us the victory through our Lord Jesus Christ. </p>',
-//   },
-//   {
-//     id: 'EXO.17.8-EXO.17.15',
-//     reference: 'Exodus 17:8-15',
-//     html:
-//       '<p class="p"><span data-number="8" class="v">8</span>Then Amalek came and fought with Israel in Rephidim. <span data-number="9" class="v">9</span>Moses said to Joshua, “Choose men for us, and go out to fight with Amalek. Tomorrow I will stand on the top of the hill with God’s rod in my hand.” <span data-number="10" class="v">10</span>So Joshua did as Moses had told him, and fought with Amalek; and Moses, Aaron, and Hur went up to the top of the hill. <span data-number="11" class="v">11</span>When Moses held up his hand, Israel prevailed. When he let down his hand, Amalek prevailed. <span data-number="12" class="v">12</span>But Moses’ hands were heavy; so they took a stone, and put it under him, and he sat on it. Aaron and Hur held up his hands, the one on the one side, and the other on the other side. His hands were steady until sunset. <span data-number="13" class="v">13</span>Joshua defeated Amalek and his people with the edge of the sword. <span data-number="14" class="v">14</span>Yahweh said to Moses, “Write this for a memorial in a book, and rehearse it in the ears of Joshua: that I will utterly blot out the memory of Amalek from under the sky.” <span data-number="15" class="v">15</span>Moses built an altar, and called its name “Yahweh our Banner”.</p>',
-//   },
-// ];
-
-// const content = {
-//   body:
-//     '<p>Sometimes God&rsquo;s promises to us involve a fight. We have to fight to keep our focus on Him, fight to move towards the promise we know God has laid on our hearts. We have a real enemy that would love nothing more than to get us sidetracked and doubt God&rsquo;s promises. So we fight saying that we are going to believe God will do what He says He will do, and we keep fighting until we see that promise come to life.</p><p>In Exodus 17:8-15 the nation of Israel, freed from great oppression in Egypt was traveling to the land God promised them. Yet, Israel was fighting, again.&nbsp;<br />&nbsp;<br />As the Israelites were fighting in the valley,&nbsp;Moses was on the hill top lifting his hands in prayer for these great fighters. Israel fought hard, and with the prayers of Moses and the help of his companions, Aaron and Hur, the Amalekites were defeated. Moses knew that it was solely because of the Lord&rsquo;s hand of protection and blessing on the Israelites that they won the battle. &ldquo;Moses built an altar and called it The Lord is my banner&rdquo; (Exodus 17:15).</p><p>In battle opposing nations would fly their own flag on a pole at each of their respective front lines. This was to give their soldiers a feeling of hope and a focal point. This is what God is to us: a banner of encouragement to give us hope and a focal point.</p><blockquote><p>The Lord protects us, covers us with love, and&nbsp;blesses us continually.</p></blockquote><p>The Lord is our banner. He protects us; He covers us with love; He blesses us continually. The Lord gives us hope and a place to focus during the tough fights when the enemy is trying to make us doubt God&rsquo;s promises.&nbsp;</p><p>When was the last time you sat and thanked Jesus for all the ways he is a banner in your life?&nbsp;</p><p>Reflect:</p><ul><li>What is one way the Lord has been your banner?</li><li>How can you focus more today on the Lord and all the things He does for you throughout the day?</li></ul>',
-//   route: { jumpTo: () => {} },
-//   title: 'God is Our Banner',
-// };
-
-// const renderItem = () => {};
-
-// const loadingStateObject = {
-//   node: {
-//     id: 'fakeId0',
-//     title: '',
-//     isLoading: true,
-//   },
-// };
-
-// const stories = storiesOf('Devotional', module);
-
-// stories.add('Example', () => (
-//   <Devotional
-//     body={content.body}
-//     title={content.title}
-//     isLoading={false}
-//     scripture={scripture}
-//     renderItem={renderItem}
-//     loadingStateObject={loadingStateObject}
-//   />
-// ));
-
-// stories.add('isLoading', () => (
-//   <Devotional
-//     body={content.body}
-//     title={content.title}
-//     isLoading
-//     scripture={scripture}
-//     renderItem={renderItem}
-//     loadingStateObject={loadingStateObject}
-//   />
-// ));
+import React from 'react';
+import { storiesOf } from '@storybook/react-native';
+
+import Devotional from '.';
+
+const scripture = [
+  {
+    id: '1CO.15.57',
+    reference: '1 Corinthians 15:57',
+    html:
+      '<p class="p"><span data-number="57" class="v">57</span>But thanks be to God, who gives us the victory through our Lord Jesus Christ. </p>',
+  },
+  {
+    id: 'EXO.17.8-EXO.17.15',
+    reference: 'Exodus 17:8-15',
+    html:
+      '<p class="p"><span data-number="8" class="v">8</span>Then Amalek came and fought with Israel in Rephidim. <span data-number="9" class="v">9</span>Moses said to Joshua, “Choose men for us, and go out to fight with Amalek. Tomorrow I will stand on the top of the hill with God’s rod in my hand.” <span data-number="10" class="v">10</span>So Joshua did as Moses had told him, and fought with Amalek; and Moses, Aaron, and Hur went up to the top of the hill. <span data-number="11" class="v">11</span>When Moses held up his hand, Israel prevailed. When he let down his hand, Amalek prevailed. <span data-number="12" class="v">12</span>But Moses’ hands were heavy; so they took a stone, and put it under him, and he sat on it. Aaron and Hur held up his hands, the one on the one side, and the other on the other side. His hands were steady until sunset. <span data-number="13" class="v">13</span>Joshua defeated Amalek and his people with the edge of the sword. <span data-number="14" class="v">14</span>Yahweh said to Moses, “Write this for a memorial in a book, and rehearse it in the ears of Joshua: that I will utterly blot out the memory of Amalek from under the sky.” <span data-number="15" class="v">15</span>Moses built an altar, and called its name “Yahweh our Banner”.</p>',
+  },
+];
+
+const content = {
+  body:
+    '<p>Sometimes God&rsquo;s promises to us involve a fight. We have to fight to keep our focus on Him, fight to move towards the promise we know God has laid on our hearts. We have a real enemy that would love nothing more than to get us sidetracked and doubt God&rsquo;s promises. So we fight saying that we are going to believe God will do what He says He will do, and we keep fighting until we see that promise come to life.</p><p>In Exodus 17:8-15 the nation of Israel, freed from great oppression in Egypt was traveling to the land God promised them. Yet, Israel was fighting, again.&nbsp;<br />&nbsp;<br />As the Israelites were fighting in the valley,&nbsp;Moses was on the hill top lifting his hands in prayer for these great fighters. Israel fought hard, and with the prayers of Moses and the help of his companions, Aaron and Hur, the Amalekites were defeated. Moses knew that it was solely because of the Lord&rsquo;s hand of protection and blessing on the Israelites that they won the battle. &ldquo;Moses built an altar and called it The Lord is my banner&rdquo; (Exodus 17:15).</p><p>In battle opposing nations would fly their own flag on a pole at each of their respective front lines. This was to give their soldiers a feeling of hope and a focal point. This is what God is to us: a banner of encouragement to give us hope and a focal point.</p><blockquote><p>The Lord protects us, covers us with love, and&nbsp;blesses us continually.</p></blockquote><p>The Lord is our banner. He protects us; He covers us with love; He blesses us continually. The Lord gives us hope and a place to focus during the tough fights when the enemy is trying to make us doubt God&rsquo;s promises.&nbsp;</p><p>When was the last time you sat and thanked Jesus for all the ways he is a banner in your life?&nbsp;</p><p>Reflect:</p><ul><li>What is one way the Lord has been your banner?</li><li>How can you focus more today on the Lord and all the things He does for you throughout the day?</li></ul>',
+  route: { jumpTo: () => {} },
+  title: 'God is Our Banner',
+};
+
+const renderItem = () => {};
+
+const loadingStateObject = {
+  node: {
+    id: 'fakeId0',
+    title: '',
+    isLoading: true,
+  },
+};
+
+const stories = storiesOf('Devotional', module);
+
+stories.add('Example', () => (
+  <Devotional
+    body={content.body}
+    title={content.title}
+    isLoading={false}
+    scripture={scripture}
+    renderItem={renderItem}
+    loadingStateObject={loadingStateObject}
+  />
+));
+
+stories.add('isLoading', () => (
+  <Devotional
+    body={content.body}
+    title={content.title}
+    isLoading
+    scripture={scripture}
+    renderItem={renderItem}
+    loadingStateObject={loadingStateObject}
+  />
+));
diff --git a/apolloschurchapp/src/content-single/DevotionalContentItem/Devotional.tests.js b/apolloschurchapp/src/content-single/DevotionalContentItem/Devotional.tests.js
index 5bbb257..59ed7e1 100644
--- a/apolloschurchapp/src/content-single/DevotionalContentItem/Devotional.tests.js
+++ b/apolloschurchapp/src/content-single/DevotionalContentItem/Devotional.tests.js
@@ -1,9 +1,9 @@
 import React from 'react';
 import renderer from 'react-test-renderer';
+import wait from 'waait';
 import Providers from 'apolloschurchapp/src/Providers';
-import { renderWithApolloData } from 'apolloschurchapp/src/utils/testUtils';
-import GET_CONTENT_ITEM_CONTENT from '../HTMLContent/getContentItemContent';
-import GET_SCRIPTURE from './getScripture';
+import getContentItemContent from '../HTMLContent/getContentItemContent';
+import getScripture from './getScripture';
 import Devotional from '.';
 
 const content = {
@@ -32,7 +32,7 @@ const scriptures = [
 
 const scriptureMock = {
   request: {
-    query: GET_SCRIPTURE,
+    query: getScripture,
     variables: { itemId: '1' },
   },
   result: {
@@ -44,7 +44,7 @@ const scriptureMock = {
 
 const contentItemHTMLMock = {
   request: {
-    query: GET_CONTENT_ITEM_CONTENT,
+    query: getContentItemContent,
     variables: { contentId: '1' },
   },
   result: {
@@ -66,7 +66,7 @@ const navigation = {
 
 describe('the Devotional component', () => {
   it('renders a devotional', async () => {
-    const tree = await renderWithApolloData(
+    const tree = renderer.create(
       <Providers mocks={mocks}>
         <Devotional
           id="1"
@@ -76,27 +76,25 @@ describe('the Devotional component', () => {
         />
       </Providers>
     );
+    await wait(0); // wait for response
     expect(tree).toMatchSnapshot();
   });
   it('renders even with empty scripture array', async () => {
-    const tree = await renderWithApolloData(
+    const tree = renderer.create(
       <Providers mocks={mocks}>
-        <Devotional
-          id="1"
-          content={content}
-          loading={false}
-          navigation={navigation}
-        />
+        <Devotional id="1" content={content} loading navigation={navigation} />
       </Providers>
     );
+    await wait(0); // wait for response
     expect(tree).toMatchSnapshot();
   });
-  it('renders a loading state of null', async () => {
+  it('renders a loading state', async () => {
     const tree = renderer.create(
       <Providers mocks={mocks}>
         <Devotional id="1" content={content} loading navigation={navigation} />
       </Providers>
     );
+    await wait(0); // wait for response
     expect(tree).toMatchSnapshot();
   });
 });
diff --git a/apolloschurchapp/src/content-single/DevotionalContentItem/ScriptureTab.js b/apolloschurchapp/src/content-single/DevotionalContentItem/ScriptureTab.js
index 79ef066..dbb2481 100644
--- a/apolloschurchapp/src/content-single/DevotionalContentItem/ScriptureTab.js
+++ b/apolloschurchapp/src/content-single/DevotionalContentItem/ScriptureTab.js
@@ -1,8 +1,8 @@
 import React from 'react';
 import { ScrollView } from 'react-native';
 import PropTypes from 'prop-types';
-import { PaddedView } from '@apollosproject/ui-kit';
-import ScriptureItem from '@apollosproject/ui-scripture';
+import PaddedView from 'apolloschurchapp/src/ui/PaddedView';
+import ScriptureItem from 'apolloschurchapp/src/ui/Scripture';
 import HorizontalContentFeed from '../HorizontalContentFeed';
 
 /**
diff --git a/apolloschurchapp/src/content-single/DevotionalContentItem/index.js b/apolloschurchapp/src/content-single/DevotionalContentItem/index.js
index 07b4938..b880641 100644
--- a/apolloschurchapp/src/content-single/DevotionalContentItem/index.js
+++ b/apolloschurchapp/src/content-single/DevotionalContentItem/index.js
@@ -1,19 +1,16 @@
 import React, { PureComponent } from 'react';
+import { SafeAreaView } from 'react-native';
 import PropTypes from 'prop-types';
-import { SafeAreaView } from 'react-navigation';
 import { Query } from 'react-apollo';
 
-import {
-  ErrorCard,
-  TabView,
-  TabSceneMap as SceneMap,
-  BackgroundView,
-  styled,
-} from '@apollosproject/ui-kit';
+import { ErrorCard } from 'apolloschurchapp/src/ui/Card';
+import TabView, { SceneMap } from 'apolloschurchapp/src/ui/TabView';
+import BackgroundView from 'apolloschurchapp/src/ui/BackgroundView';
+import styled from 'apolloschurchapp/src/ui/styled';
 import ContentTab from './ContentTab';
 import ScriptureTab from './ScriptureTab';
 
-import GET_SCRIPTURE from './getScripture';
+import getScripture from './getScripture';
 
 const FlexedSafeAreaView = styled({ flex: 1 })(SafeAreaView);
 
@@ -40,17 +37,10 @@ class DevotionalContentItem extends PureComponent {
    * Returns: an array of scripture references.
    */
   getScriptureReferences = (scripture) => {
-    let arrayOfRefrences = null;
-
-    if (scripture) {
-      arrayOfRefrences = scripture.map(
-        (ref) =>
-          // only add refs to the array if they exist
-          ref.reference || ''
-      );
+    if (scripture && scripture.length) {
+      return scripture.map((ref) => ref.reference);
     }
-
-    return arrayOfRefrences;
+    return null;
   };
 
   /**
@@ -86,13 +76,7 @@ class DevotionalContentItem extends PureComponent {
     loading,
   }) => {
     if (error) return <ErrorCard error={error} />;
-
-    // only include scriptures where the references are not null
-    const validScriptures = scriptures
-      ? scriptures.filter((scripture) => scripture.reference != null)
-      : [];
-
-    const hasScripture = loading || validScriptures.length;
+    const hasScripture = loading || scriptures.length;
     const tabRoutes = [{ title: 'Devotional', key: 'content' }];
     if (hasScripture) tabRoutes.push({ title: 'Scripture', key: 'scripture' });
     return (
@@ -109,8 +93,8 @@ class DevotionalContentItem extends PureComponent {
   render() {
     return (
       <BackgroundView>
-        <FlexedSafeAreaView forceInset={{ top: 'always' }}>
-          <Query query={GET_SCRIPTURE} variables={{ itemId: this.props.id }}>
+        <FlexedSafeAreaView>
+          <Query query={getScripture} variables={{ itemId: this.props.id }}>
             {this.renderTabs}
           </Query>
         </FlexedSafeAreaView>
diff --git a/apolloschurchapp/src/content-single/Features/ScriptureFeature.js b/apolloschurchapp/src/content-single/Features/ScriptureFeature.js
deleted file mode 100644
index dc08881..0000000
--- a/apolloschurchapp/src/content-single/Features/ScriptureFeature.js
+++ /dev/null
@@ -1,60 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-
-import { ActionCard } from '@apollosproject/ui-kit';
-import { ScriptureItem } from '@apollosproject/ui-scripture';
-import ShareContentButtonConnected from 'apolloschurchapp/src/ui/ShareContentButtonConnected';
-
-const ScriptureFeature = ({
-  scriptures,
-  sharing: { message } = {},
-  isLoading,
-  contentId,
-}) => (
-  <ActionCard
-    icon={'text'}
-    action={
-      <ShareContentButtonConnected message={message} itemId={contentId} />
-    }
-  >
-    {scriptures.map(({ copyright, reference, html, id }) => (
-      <ScriptureItem
-        key={id}
-        reference={reference}
-        html={html}
-        isLoading={isLoading}
-        copyright={copyright}
-      />
-    ))}
-  </ActionCard>
-);
-
-ScriptureFeature.propTypes = {
-  isLoading: PropTypes.bool.isRequired,
-  scriptures: PropTypes.arrayOf(
-    PropTypes.shape({
-      html: PropTypes.string.isRequired,
-      reference: PropTypes.string.isRequired,
-      id: PropTypes.string.isRequired,
-      copyright: PropTypes.string,
-    })
-  ),
-  sharing: PropTypes.shape({ message: PropTypes.string }),
-  contentId: PropTypes.string.isRequired,
-};
-
-export const SCRIPTURE_FEATURE_FRAGMENT = `
-fragment ScriptureFeatureFragment on ScriptureFeature {
-  sharing {
-    message
-  }
-  scriptures {
-    id
-    html
-    reference
-    copyright
-  }
-}
-`;
-
-export default ScriptureFeature;
diff --git a/apolloschurchapp/src/content-single/Features/TextFeature.js b/apolloschurchapp/src/content-single/Features/TextFeature.js
deleted file mode 100644
index b4bb2a6..0000000
--- a/apolloschurchapp/src/content-single/Features/TextFeature.js
+++ /dev/null
@@ -1,33 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-
-import { ActionCard, BodyText } from '@apollosproject/ui-kit';
-import ShareContentButtonConnected from 'apolloschurchapp/src/ui/ShareContentButtonConnected';
-
-const TextFeature = ({ body, sharing: { message } = {}, contentId }) => (
-  <ActionCard
-    action={
-      <ShareContentButtonConnected message={message} itemId={contentId} />
-    }
-  >
-    <BodyText>{body}</BodyText>
-  </ActionCard>
-);
-
-TextFeature.propTypes = {
-  body: PropTypes.string.isRequired,
-  sharing: PropTypes.shape({ message: PropTypes.string }),
-  contentId: PropTypes.string.isRequired,
-};
-
-export const TEXT_FEATURE_FRAGMENT = `
-fragment TextFeatureFragment on TextFeature {
-  body
-  id
-  sharing {
-    message
-  }
-}
-`;
-
-export default TextFeature;
diff --git a/apolloschurchapp/src/content-single/Features/getContentItemFeatures.js b/apolloschurchapp/src/content-single/Features/getContentItemFeatures.js
deleted file mode 100644
index a015cec..0000000
--- a/apolloschurchapp/src/content-single/Features/getContentItemFeatures.js
+++ /dev/null
@@ -1,32 +0,0 @@
-import gql from 'graphql-tag';
-import { TEXT_FEATURE_FRAGMENT } from './TextFeature';
-import { SCRIPTURE_FEATURE_FRAGMENT } from './ScriptureFeature';
-
-const FEATURES_FRAGMENT = `
-  fragment FeaturesFragment on Feature {
-    id
-    ...TextFeatureFragment
-    ...ScriptureFeatureFragment
-  }
-  ${TEXT_FEATURE_FRAGMENT}
-  ${SCRIPTURE_FEATURE_FRAGMENT}
-`;
-
-export default gql`
-  query contentItemFeatures($contentId: ID!) {
-    node(id: $contentId) {
-      id
-      ... on ContentSeriesContentItem {
-        features {
-          ...FeaturesFragment
-        }
-      }
-      ... on WeekendContentItem {
-        features {
-          ...FeaturesFragment
-        }
-      }
-    }
-  }
-  ${FEATURES_FRAGMENT}
-`;
diff --git a/apolloschurchapp/src/content-single/Features/index.js b/apolloschurchapp/src/content-single/Features/index.js
deleted file mode 100644
index e345e37..0000000
--- a/apolloschurchapp/src/content-single/Features/index.js
+++ /dev/null
@@ -1,55 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-import { Query } from 'react-apollo';
-import { ErrorCard, H3, PaddedView } from '@apollosproject/ui-kit';
-import { get } from 'lodash';
-import TextFeature from './TextFeature';
-import ScriptureFeature from './ScriptureFeature';
-
-import GET_CONTENT_ITEM_FEATURES from './getContentItemFeatures';
-
-const FEATURE_MAP = {
-  TextFeature,
-  ScriptureFeature,
-};
-
-const Features = ({ contentId }) => {
-  if (!contentId) return null;
-
-  return (
-    <Query
-      query={GET_CONTENT_ITEM_FEATURES}
-      fetchPolicy="cache-and-network"
-      variables={{ contentId }}
-    >
-      {({ data: { node } = {}, loading, error }) => {
-        if (error) return <ErrorCard error={error} />;
-        if (loading) return null;
-
-        const features = get(node, 'features', []);
-        if (!features || !features.length) return null;
-
-        return (
-          <PaddedView horizontal={false}>
-            <PaddedView vertical={false}>
-              <H3 padded>Engage</H3>
-            </PaddedView>
-            {features.map(({ __typename, ...feature }) => {
-              const Feature = FEATURE_MAP[__typename];
-              if (!Feature) return null;
-              return (
-                <Feature key={feature.id} {...feature} contentId={contentId} />
-              );
-            })}
-          </PaddedView>
-        );
-      }}
-    </Query>
-  );
-};
-
-Features.propTypes = {
-  contentId: PropTypes.string,
-};
-
-export default Features;
diff --git a/apolloschurchapp/src/content-single/HTMLContent/index.js b/apolloschurchapp/src/content-single/HTMLContent/index.js
index 755af41..8fd994f 100644
--- a/apolloschurchapp/src/content-single/HTMLContent/index.js
+++ b/apolloschurchapp/src/content-single/HTMLContent/index.js
@@ -2,16 +2,16 @@ import React from 'react';
 import PropTypes from 'prop-types';
 import { Query } from 'react-apollo';
 
-import HTMLView from '@apollosproject/ui-htmlview';
-import { ErrorCard } from '@apollosproject/ui-kit';
+import HTMLView from 'apolloschurchapp/src/ui/HTMLView';
+import { ErrorCard } from 'apolloschurchapp/src/ui/Card';
 
-import GET_CONTENT_ITEM_CONTENT from './getContentItemContent';
+import getContentItemContent from './getContentItemContent';
 
 const HTMLContent = ({ contentId }) => {
   if (!contentId) return <HTMLView isLoading />;
 
   return (
-    <Query query={GET_CONTENT_ITEM_CONTENT} variables={{ contentId }}>
+    <Query query={getContentItemContent} variables={{ contentId }}>
       {({ data: { node: { htmlContent } = {} } = {}, loading, error }) => {
         if (error) return <ErrorCard error={error} />;
         return (
diff --git a/apolloschurchapp/src/content-single/HorizontalContentFeed/HorizontalContentFeed.tests.js b/apolloschurchapp/src/content-single/HorizontalContentFeed/HorizontalContentFeed.tests.js
deleted file mode 100644
index 182f5e1..0000000
--- a/apolloschurchapp/src/content-single/HorizontalContentFeed/HorizontalContentFeed.tests.js
+++ /dev/null
@@ -1,206 +0,0 @@
-import React from 'react';
-import Providers from 'apolloschurchapp/src/Providers';
-import { renderWithApolloData } from 'apolloschurchapp/src/utils/testUtils';
-import GET_CONTENT_CARD from '../../ui/ContentCardConnected/query';
-import GET_HORIZONTAL_CONTENT from './getHorizontalContent';
-import HorizontalContentFeed from '.';
-
-const mock = {
-  request: {
-    query: GET_HORIZONTAL_CONTENT,
-    variables: { itemId: 'ContentSeriesContentItem:123' },
-  },
-  result: {
-    data: {
-      node: {
-        id: 'ContentSeriesContentItem:123',
-        childContentItemsConnection: {
-          edges: [
-            {
-              cursor: 'b487224762b030f470967f45d7205823',
-              node: {
-                id: 'DevotionalContentItem:d395278cd4b68e074ca4e595c8feab6d',
-                coverImage: {
-                  name: 'Square Image',
-                  sources: [
-                    {
-                      uri:
-                        'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D31af1a61-360c-4b1e-8e62-45517c06a9a2',
-                      __typename: 'ImageMediaSource',
-                    },
-                  ],
-                  __typename: 'ImageMedia',
-                },
-                parentChannel: {
-                  id: 'ContentChannel:559b23fd0aa90e81b1c023e72e230fa1',
-                  name: 'Devotional',
-                  iconName: 'text',
-                  __typename: 'ContentChannel',
-                },
-                title: 'God sees who you can be not who you are',
-                sharing: {
-                  url:
-                    'https://apollosrock.newspring.cc/devotional/god-sees-who-you-can-be-not-who-you-are',
-                  message:
-                    'God sees who you can be not who you are - Life is challenging enough.',
-                  title: 'Share via ...',
-                  __typename: 'SharableContentItem',
-                },
-                __typename: 'DevotionalContentItem',
-              },
-              __typename: 'ContentItemsConnectionEdge',
-            },
-            {
-              cursor: '4affc1122ad80d4edcf6c5bc9d88ae99',
-              node: {
-                id: 'DevotionalContentItem:fbea6914a3e8877516cbd333d919075d',
-                coverImage: {
-                  name: 'Square Image',
-                  sources: [
-                    {
-                      uri:
-                        'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D31af1a61-360c-4b1e-8e62-45517c06a9a2',
-                      __typename: 'ImageMediaSource',
-                    },
-                  ],
-                  __typename: 'ImageMedia',
-                },
-                parentChannel: {
-                  id: 'ContentChannel:559b23fd0aa90e81b1c023e72e230fa1',
-                  name: 'Devotional',
-                  iconName: 'text',
-                  __typename: 'ContentChannel',
-                },
-                title: 'Thank God for the friends who will tell it like it is',
-                sharing: {
-                  url:
-                    'https://apollosrock.newspring.cc/devotional/thank-god-for-the-friends-who-will-tell-it-like-it-is',
-                  message:
-                    'Thank God for the friends who will tell it like it is - Some of us grew up in a sanitized church.',
-                  title: 'Share via ...',
-                  __typename: 'SharableContentItem',
-                },
-                __typename: 'DevotionalContentItem',
-              },
-              __typename: 'ContentItemsConnectionEdge',
-            },
-            {
-              cursor: '659a26257a49fb2bf1446bb747bf7dd3',
-              node: {
-                id: 'DevotionalContentItem:5e18250f586ab8de4d3d6292c919dcc4',
-                coverImage: {
-                  name: 'Square Image',
-                  sources: [
-                    {
-                      uri:
-                        'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D31af1a61-360c-4b1e-8e62-45517c06a9a2',
-                      __typename: 'ImageMediaSource',
-                    },
-                  ],
-                  __typename: 'ImageMedia',
-                },
-                parentChannel: {
-                  id: 'ContentChannel:559b23fd0aa90e81b1c023e72e230fa1',
-                  name: 'Devotional',
-                  iconName: 'text',
-                  __typename: 'ContentChannel',
-                },
-                title: 'No sin is too bad',
-                sharing: {
-                  url:
-                    'https://apollosrock.newspring.cc/devotional/no-sin-is-too-bad',
-                  message:
-                    'No sin is too bad - In Jeremiah 3, God’s people had really messed up.',
-                  title: 'Share via ...',
-                  __typename: 'SharableContentItem',
-                },
-                __typename: 'DevotionalContentItem',
-              },
-              __typename: 'ContentItemsConnectionEdge',
-            },
-            {
-              cursor: 'c8d2fe738629909c33010432432f21c8',
-              node: {
-                id: 'DevotionalContentItem:bdc2c29b85949e4ca8232b373a07953d',
-                coverImage: {
-                  name: 'Square Image',
-                  sources: [
-                    {
-                      uri:
-                        'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D31af1a61-360c-4b1e-8e62-45517c06a9a2',
-                      __typename: 'ImageMediaSource',
-                    },
-                  ],
-                  __typename: 'ImageMedia',
-                },
-                parentChannel: {
-                  id: 'ContentChannel:559b23fd0aa90e81b1c023e72e230fa1',
-                  name: 'Devotional',
-                  iconName: 'text',
-                  __typename: 'ContentChannel',
-                },
-                title: 'Change starts with a choice',
-                sharing: {
-                  url:
-                    'https://apollosrock.newspring.cc/devotional/change-starts-with-a-choice',
-                  message:
-                    'Change starts with a choice - Have you ever restored an old piece of furniture?',
-                  title: 'Share via ...',
-                  __typename: 'SharableContentItem',
-                },
-                __typename: 'DevotionalContentItem',
-              },
-              __typename: 'ContentItemsConnectionEdge',
-            },
-          ],
-          __typename: 'ContentItemsConnection',
-        },
-        siblingContentItemsConnection: {
-          edges: [],
-          __typename: 'ContentItemsConnection',
-        },
-        __typename: 'ContentSeriesContentItem',
-      },
-    },
-  },
-};
-
-const navigation = {
-  push: jest.fn(),
-};
-
-const additionalMocks = mock.result.data.node.childContentItemsConnection.edges.map(
-  ({ node }) => ({
-    request: {
-      query: GET_CONTENT_CARD,
-      variables: { contentId: node.id },
-    },
-    result: {
-      data: {
-        node: {
-          ...node,
-          summary: 'bla bla bla',
-          isLiked: false,
-          theme: null,
-          coverImage: null,
-        },
-      },
-    },
-  })
-);
-
-console.log(additionalMocks);
-
-describe('the HorizontalContentFeed component', () => {
-  it('renders a horizontal content feed', async () => {
-    const tree = await renderWithApolloData(
-      <Providers mocks={[mock, ...additionalMocks]}>
-        <HorizontalContentFeed
-          contentId={'ContentSeriesContentItem:123'}
-          navigation={navigation}
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/content-single/HorizontalContentFeed/getHorizontalContent.js b/apolloschurchapp/src/content-single/HorizontalContentFeed/getHorizontalContent.js
index a126c97..b0b77bc 100644
--- a/apolloschurchapp/src/content-single/HorizontalContentFeed/getHorizontalContent.js
+++ b/apolloschurchapp/src/content-single/HorizontalContentFeed/getHorizontalContent.js
@@ -1,13 +1,12 @@
 import gql from 'graphql-tag';
 
 export default gql`
-  query getHorizontalContent($itemId: ID!, $cursor: String) {
+  query getHorizontalContent($itemId: ID!) {
     node(id: $itemId) {
       ... on ContentItem {
         id
-        childContentItemsConnection(after: $cursor) {
+        childContentItemsConnection {
           edges {
-            cursor
             node {
               id
               coverImage {
@@ -30,9 +29,8 @@ export default gql`
             }
           }
         }
-        siblingContentItemsConnection(after: $cursor) {
+        siblingContentItemsConnection {
           edges {
-            cursor
             node {
               id
               coverImage {
diff --git a/apolloschurchapp/src/content-single/HorizontalContentFeed/index.js b/apolloschurchapp/src/content-single/HorizontalContentFeed/index.js
index 666d509..3a22052 100644
--- a/apolloschurchapp/src/content-single/HorizontalContentFeed/index.js
+++ b/apolloschurchapp/src/content-single/HorizontalContentFeed/index.js
@@ -4,11 +4,17 @@ import PropTypes from 'prop-types';
 import { withNavigation } from 'react-navigation';
 import { Query } from 'react-apollo';
 
-import { HorizontalTileFeed, TouchableScale } from '@apollosproject/ui-kit';
+import CardTile from 'apolloschurchapp/src/ui/CardTile';
+import HorizontalTileFeed from 'apolloschurchapp/src/ui/HorizontalTileFeed';
+import PaddedView from 'apolloschurchapp/src/ui/PaddedView';
+import styled from 'apolloschurchapp/src/ui/styled';
+import TouchableScale from 'apolloschurchapp/src/ui/TouchableScale';
 
-import HorizontalContentCardConnected from '../../ui/HorizontalContentCardConnected';
+import getHorizontalContent from './getHorizontalContent';
 
-import GET_HORIZONTAL_CONTENT from './getHorizontalContent';
+const FeedContainer = styled({
+  paddingHorizontal: 0,
+})(PaddedView);
 
 const loadingStateObject = {
   node: {
@@ -32,63 +38,47 @@ class HorizontalContentFeed extends Component {
     });
   };
 
-  renderItem = ({ item }) => (
+  renderItem = ({ item, index }) => (
     <TouchableScale onPress={() => this.handleOnPressItem(item)}>
-      <HorizontalContentCardConnected contentId={get(item, 'id', '')} />
+      <CardTile
+        number={index + 1}
+        title={get(item, 'title', '')}
+        /*
+            * These are props that are not yet being passed in the data.
+            * We will need to make sure they get added back when that data is available.
+            * byLine={item.content.speaker}
+            * date={item.meta.date}
+            */
+      />
     </TouchableScale>
   );
 
-  renderFeed = ({ data, loading, error, fetchMore }) => {
+  renderFeed = ({ data, loading, error }) => {
     if (error) return null;
-    if (loading) return null;
 
-    const children = get(data, 'node.childContentItemsConnection.edges', []);
-    const siblings = get(data, 'node.siblingContentItemsConnection.edges', []);
-    const isParent = children.length > 0;
+    const childContent = get(
+      data,
+      'node.childContentItemsConnection.edges',
+      []
+    ).map((edge) => edge.node);
 
-    const edges = isParent ? children : siblings;
-    const content = edges.map((edge) => edge.node);
-    const { cursor } = edges.length && edges[edges.length - 1];
-    const currentIndex = content.findIndex(
-      ({ id }) => id === this.props.contentId
-    );
-    const initialScrollIndex = currentIndex === -1 ? 0 : currentIndex;
+    const siblingContent = get(
+      data,
+      'node.siblingContentItemsConnection.edges',
+      []
+    ).map((edge) => edge.node);
 
-    return content && content.length ? (
-      <HorizontalTileFeed
-        content={content}
-        loadingStateObject={loadingStateObject}
-        renderItem={this.renderItem}
-        initialScrollIndex={initialScrollIndex}
-        getItemLayout={(itemData, index) => ({
-          // We need to pass this function so that initialScrollIndex will work.
-          length: 240,
-          offset: 240 * index,
-          index,
-        })}
-        onEndReached={() =>
-          fetchMore({
-            query: GET_HORIZONTAL_CONTENT,
-            variables: { cursor, itemId: this.props.contentId },
-            updateQuery: (previousResult, { fetchMoreResult }) => {
-              const connection = isParent
-                ? 'childContentItemsConnection'
-                : 'siblingContentItemsConnection';
-              const newEdges = get(fetchMoreResult.node, connection, []).edges;
+    const content = siblingContent.length ? siblingContent : childContent;
 
-              return {
-                node: {
-                  ...previousResult.node,
-                  [connection]: {
-                    ...previousResult.node[connection],
-                    edges: [...edges, ...newEdges],
-                  },
-                },
-              };
-            },
-          })
-        }
-      />
+    return (content && content.length) || loading ? (
+      <FeedContainer>
+        <HorizontalTileFeed
+          content={content}
+          isLoading={loading}
+          loadingStateObject={loadingStateObject}
+          renderItem={this.renderItem}
+        />
+      </FeedContainer>
     ) : null;
   };
 
@@ -97,7 +87,7 @@ class HorizontalContentFeed extends Component {
 
     return (
       <Query
-        query={GET_HORIZONTAL_CONTENT}
+        query={getHorizontalContent}
         variables={{ itemId: this.props.contentId }}
       >
         {this.renderFeed}
diff --git a/apolloschurchapp/src/content-single/MediaControls/getContentMedia.js b/apolloschurchapp/src/content-single/MediaControls/getContentMedia.js
index 3bc3e34..8ab3d1a 100644
--- a/apolloschurchapp/src/content-single/MediaControls/getContentMedia.js
+++ b/apolloschurchapp/src/content-single/MediaControls/getContentMedia.js
@@ -21,17 +21,6 @@ export default gql`
           }
         }
       }
-      ... on WeekendContentItem {
-        liveStream {
-          isLive
-          media {
-            sources {
-              uri
-            }
-          }
-          webViewUrl
-        }
-      }
     }
   }
 `;
diff --git a/apolloschurchapp/src/content-single/MediaControls/index.js b/apolloschurchapp/src/content-single/MediaControls/index.js
index a36e7d9..dc95890 100644
--- a/apolloschurchapp/src/content-single/MediaControls/index.js
+++ b/apolloschurchapp/src/content-single/MediaControls/index.js
@@ -4,144 +4,97 @@ import { Query, Mutation } from 'react-apollo';
 import { View } from 'react-native';
 import { get } from 'lodash';
 
-import { PLAY_VIDEO } from '@apollosproject/ui-media-player';
-import {
-  styled,
-  TouchableScale,
-  MediaThumbnail,
-  MediaThumbnailIcon,
-  MediaThumbnailItem,
-  H6,
-} from '@apollosproject/ui-kit';
-import { WebBrowserConsumer } from 'apolloschurchapp/src/ui/WebBrowser';
-import GET_CONTENT_MEDIA from './getContentMedia';
+import { playVideoMutation } from 'apolloschurchapp/src/ui/MediaPlayer/mutations';
+import Icon from 'apolloschurchapp/src/ui/Icon';
+import styled from 'apolloschurchapp/src/ui/styled';
+import Button from 'apolloschurchapp/src/ui/Button';
+import getContentMedia from './getContentMedia';
+
+const buttonSizeDifferential = 4;
+
+const MediaIcon = Icon; // todo: add back styles
+const MediaButton = styled(({ theme }) => ({
+  width: theme.sizing.baseUnit * buttonSizeDifferential,
+  height: theme.sizing.baseUnit * buttonSizeDifferential,
+  borderRadius: theme.sizing.baseUnit * (buttonSizeDifferential / 2),
+  backgroundColor: theme.colors.secondary,
+  justifyContent: 'center',
+  alignItems: 'center',
+  borderWidth: 0, // remove default button border
+}))(Button);
+
+/** MediaButtton "border styles" live in a seperate component so that Android places it's elevation
+ * shadow in the right place. */
+const MediaButtonBorder = styled(({ theme }) => ({
+  borderRadius:
+    theme.sizing.baseUnit * (buttonSizeDifferential / 2) +
+    buttonSizeDifferential, // this is eqivalent to the MediaButton size above + the padding below
+  padding: buttonSizeDifferential, // padding + backgroundColor = MediaButton + "borderStyles"
+  backgroundColor: theme.colors.paper,
+}))(View);
 
 const Container = styled(({ theme }) => ({
   flexDirection: 'row',
-  alignItems: 'flex-start',
-  justifyContent: 'flex-start',
-  marginTop: -(theme.sizing.baseUnit * 2.5),
+  alignItems: 'center',
+  justifyContent: 'center',
+  marginTop:
+    -theme.sizing.baseUnit * (buttonSizeDifferential / 2) -
+    buttonSizeDifferential, // MediaButton size / 2 + border
 }))(View);
 
-const StyledMediaThumbnail = styled({ marginVertical: 0 })(MediaThumbnail);
-
 class MediaControls extends PureComponent {
   static propTypes = {
     contentId: PropTypes.string,
   };
 
-  renderPlayButton = ({ action, coverImageSources }) => (
-    <Container>
-      <TouchableScale onPress={action}>
-        <StyledMediaThumbnail image={coverImageSources}>
-          <MediaThumbnailItem centered>
-            <MediaThumbnailIcon name="play" />
-          </MediaThumbnailItem>
-          <MediaThumbnailItem centered bottom>
-            <H6 padded>Play</H6>
-          </MediaThumbnailItem>
-        </StyledMediaThumbnail>
-      </TouchableScale>
-    </Container>
-  );
-
-  renderMedia = ({
-    videoSource,
-    coverImageSources,
-    title,
-    parentChannelName,
-  }) => (
-    <Mutation mutation={PLAY_VIDEO}>
-      {(play) =>
-        this.renderPlayButton({
-          action: () =>
-            play({
-              variables: {
-                mediaSource: videoSource,
-                posterSources: coverImageSources,
-                title,
-                isVideo: true,
-                artist: parentChannelName,
-              },
-            }),
-          coverImageSources,
-        })
-      }
-    </Mutation>
-  );
-
-  renderWebView = ({ webViewUrl, coverImageSources }) => (
-    <WebBrowserConsumer>
-      {(openUrl) =>
-        this.renderPlayButton({
-          action: () => openUrl(webViewUrl),
-          coverImageSources,
-        })
-      }
-    </WebBrowserConsumer>
-  );
-
   renderControls = ({
     loading,
     error,
     data: {
-      node: {
-        videos,
-        title,
-        parentChannel = {},
-        coverImage = {},
-        liveStream = {},
-      } = {},
+      node: { videos, title, parentChannel = {}, coverImage = {} } = {},
     } = {},
   }) => {
     if (loading || error) return null;
 
-    const isLive = get(liveStream, 'isLive', false);
-    const hasLiveStreamContent = !!(
-      get(liveStream, 'webViewUrl') || get(liveStream, 'media.sources[0]')
-    );
-
     const videoSource = get(videos, '[0].sources[0]', null);
-    const shouldRender = (isLive && hasLiveStreamContent) || videoSource;
-
-    if (!shouldRender) return null;
-
     const coverImageSources = (coverImage && coverImage.sources) || [];
 
-    // Content is live, and we have a livestream media
-    if (isLive && get(liveStream, 'media.sources[0].uri')) {
-      return this.renderMedia({
-        coverImageSources,
-        videoSource: liveStream.media.sources[0],
-        parentChannelName: parentChannel.name,
-        title,
-      });
-    }
-
-    // Content is live, and we don't have a livestream media
-    // but we do have a webview url
-    if (isLive && get(liveStream, 'webViewUrl')) {
-      return this.renderWebView({
-        webViewUrl: liveStream.webViewUrl,
-        coverImageSources,
-      });
-    }
-
-    // Default case, normal media.
-    return this.renderMedia({
-      coverImageSources,
-      videoSource,
-      parentChannelName: parentChannel.name,
-      title,
-    });
+    return (
+      <Mutation mutation={playVideoMutation}>
+        {(play) => (
+          <Container>
+            {videoSource ? (
+              <MediaButtonBorder>
+                <MediaButton
+                  type="primary"
+                  onPress={() =>
+                    play({
+                      variables: {
+                        mediaSource: videoSource,
+                        posterSources: coverImageSources,
+                        title,
+                        isVideo: true,
+                        artist: parentChannel.name,
+                      },
+                    })
+                  }
+                  useForeground
+                >
+                  <MediaIcon name="play" />
+                </MediaButton>
+              </MediaButtonBorder>
+            ) : null}
+          </Container>
+        )}
+      </Mutation>
+    );
   };
 
   render() {
     if (!this.props.contentId) return null;
     return (
       <Query
-        query={GET_CONTENT_MEDIA}
-        fetchPolicy="cache-and-network"
+        query={getContentMedia}
         variables={{ contentId: this.props.contentId }}
       >
         {this.renderControls}
diff --git a/apolloschurchapp/src/content-single/NavigationHeader.js b/apolloschurchapp/src/content-single/NavigationHeader.js
deleted file mode 100644
index 15b9d7b..0000000
--- a/apolloschurchapp/src/content-single/NavigationHeader.js
+++ /dev/null
@@ -1,25 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-import { ModalViewHeader } from '@apollosproject/ui-kit';
-
-const NavigationHeader = ({ scene, navigation }) => {
-  let onBack = null;
-  if (scene.index > 0) onBack = () => navigation.pop();
-  const onClose = () => {
-    navigation.goBack();
-  };
-
-  return <ModalViewHeader onClose={onClose} onBack={onBack} navigationHeader />;
-};
-
-NavigationHeader.propTypes = {
-  scene: PropTypes.shape({
-    index: PropTypes.number,
-  }),
-  navigation: PropTypes.shape({
-    pop: PropTypes.func,
-    popToTop: PropTypes.func,
-  }),
-};
-
-export default NavigationHeader;
diff --git a/apolloschurchapp/src/content-single/UniversalContentItem/index.js b/apolloschurchapp/src/content-single/UniversalContentItem/index.js
index 14db7a4..bb631f8 100644
--- a/apolloschurchapp/src/content-single/UniversalContentItem/index.js
+++ b/apolloschurchapp/src/content-single/UniversalContentItem/index.js
@@ -2,49 +2,38 @@ import React from 'react';
 import { ScrollView } from 'react-native';
 import { get } from 'lodash';
 import PropTypes from 'prop-types';
-import {
-  styled,
-  GradientOverlayImage,
-  BackgroundView,
-  PaddedView,
-  H2,
-  StretchyView,
-} from '@apollosproject/ui-kit';
+import styled from 'apolloschurchapp/src/ui/styled';
+import GradientOverlayImage from 'apolloschurchapp/src/ui/GradientOverlayImage';
+import BackgroundView from 'apolloschurchapp/src/ui/BackgroundView';
+import PaddedView from 'apolloschurchapp/src/ui/PaddedView';
+import { H2 } from 'apolloschurchapp/src/ui/typography';
 import MediaControls from '../MediaControls';
 import HTMLContent from '../HTMLContent';
 import HorizontalContentFeed from '../HorizontalContentFeed';
-import Features from '../Features';
 
 const FlexedScrollView = styled({ flex: 1 })(ScrollView);
 
 const UniversalContentItem = ({ content, loading }) => {
   const coverImageSources = get(content, 'coverImage.sources', []);
   return (
-    <BackgroundView>
-      <StretchyView>
-        {({ Stretchy, ...scrollViewProps }) => (
-          <FlexedScrollView {...scrollViewProps}>
-            {coverImageSources.length || loading ? (
-              <Stretchy>
-                <GradientOverlayImage
-                  isLoading={!coverImageSources.length && loading}
-                  source={coverImageSources}
-                />
-              </Stretchy>
-            ) : null}
-            <MediaControls contentId={content.id} />
-            <PaddedView vertical={false}>
-              <H2 padded isLoading={!content.title && loading}>
-                {content.title}
-              </H2>
-              <HTMLContent contentId={content.id} />
-            </PaddedView>
-            <Features contentId={content.id} />
-            <HorizontalContentFeed contentId={content.id} />
-          </FlexedScrollView>
-        )}
-      </StretchyView>
-    </BackgroundView>
+    <FlexedScrollView>
+      {coverImageSources.length || loading ? (
+        <GradientOverlayImage
+          isLoading={!coverImageSources.length && loading}
+          source={coverImageSources}
+        />
+      ) : null}
+      <BackgroundView>
+        <MediaControls contentId={content.id} />
+        <PaddedView>
+          <H2 padded isLoading={!content.title && loading}>
+            {content.title}
+          </H2>
+          <HTMLContent contentId={content.id} />
+        </PaddedView>
+        <HorizontalContentFeed contentId={content.id} />
+      </BackgroundView>
+    </FlexedScrollView>
   );
 };
 
diff --git a/apolloschurchapp/src/content-single/WeekendContentItem/index.js b/apolloschurchapp/src/content-single/WeekendContentItem/index.js
deleted file mode 100644
index f48b63a..0000000
--- a/apolloschurchapp/src/content-single/WeekendContentItem/index.js
+++ /dev/null
@@ -1,91 +0,0 @@
-import React from 'react';
-import { ScrollView, Dimensions } from 'react-native';
-import { get } from 'lodash';
-import PropTypes from 'prop-types';
-import {
-  styled,
-  GradientOverlayImage,
-  BackgroundView,
-  PaddedView,
-  H2,
-  StretchyView,
-  ThemeMixin,
-  ThemeConsumer,
-  CardLabel,
-} from '@apollosproject/ui-kit';
-import MediaControls from '../MediaControls';
-import HTMLContent from '../HTMLContent';
-import HorizontalContentFeed from '../HorizontalContentFeed';
-import Features from '../Features';
-
-const FlexedScrollView = styled({ flex: 1 })(ScrollView);
-
-const Header = styled(({ hasMedia, theme }) => ({
-  paddingTop: Dimensions.get('window').width * 0.5, // for some reason % based padding still is buggy
-  alignItems: 'flex-start',
-  paddingBottom: hasMedia ? theme.sizing.baseUnit : theme.sizing.baseUnit * 2,
-  // backgroundColor: theme.colors.primary,
-}))(PaddedView);
-
-const WeekendContentItem = ({ content, loading }) => {
-  const coverImageSources = get(content, 'coverImage.sources', []);
-  return (
-    <ThemeMixin mixin={content.theme || {}}>
-      <ThemeConsumer>
-        {(theme) => (
-          <BackgroundView>
-            <StretchyView>
-              {({ Stretchy, ...scrollViewProps }) => (
-                <FlexedScrollView {...scrollViewProps}>
-                  <Header hasMedia={content.videos && content.videos.sources}>
-                    <ThemeMixin mixin={{ type: 'dark' }}>
-                      {coverImageSources.length || loading ? (
-                        <Stretchy
-                          background
-                          style={{ backgroundColor: theme.colors.primary }}
-                        >
-                          <GradientOverlayImage
-                            isLoading={!coverImageSources.length && loading}
-                            overlayColor={theme.colors.primary}
-                            overlayType="featured"
-                            source={coverImageSources}
-                          />
-                        </Stretchy>
-                      ) : null}
-                      <CardLabel
-                        title={
-                          content.parentChannel && content.parentChannel.name
-                        }
-                      />
-                      <H2 padded isLoading={!content.title && loading}>
-                        {content.title}
-                      </H2>
-                      <HTMLContent contentId={content.id} />
-                    </ThemeMixin>
-                  </Header>
-                  <MediaControls contentId={content.id} />
-                  <Features contentId={content.id} />
-                  <HorizontalContentFeed contentId={content.id} />
-                </FlexedScrollView>
-              )}
-            </StretchyView>
-          </BackgroundView>
-        )}
-      </ThemeConsumer>
-    </ThemeMixin>
-  );
-};
-
-WeekendContentItem.propTypes = {
-  content: PropTypes.shape({
-    __typename: PropTypes.string,
-    parentChannel: PropTypes.shape({
-      name: PropTypes.string,
-    }),
-    id: PropTypes.string,
-    title: PropTypes.string,
-  }),
-  loading: PropTypes.bool,
-};
-
-export default WeekendContentItem;
diff --git a/apolloschurchapp/src/content-single/getContentItem.js b/apolloschurchapp/src/content-single/getContentItem.js
index 8da8e36..40b8221 100644
--- a/apolloschurchapp/src/content-single/getContentItem.js
+++ b/apolloschurchapp/src/content-single/getContentItem.js
@@ -1,12 +1,10 @@
 import gql from 'graphql-tag';
 
-export const CONTENT_ITEM_FRAGMENT = gql`
+export const contentItemFragment = gql`
   fragment contentItemFragment on ContentItem {
     id
     title
     isLiked
-    likedCount
-    summary
     coverImage {
       name
       sources {
@@ -36,11 +34,6 @@ export const CONTENT_ITEM_FRAGMENT = gql`
         uri
       }
     }
-    ... on WeekendContentItem {
-      liveStream {
-        isLive
-      }
-    }
   }
 `;
 
@@ -53,5 +46,5 @@ export default gql`
       }
     }
   }
-  ${CONTENT_ITEM_FRAGMENT}
+  ${contentItemFragment}
 `;
diff --git a/apolloschurchapp/src/content-single/index.js b/apolloschurchapp/src/content-single/index.js
index 1e5b838..d78cdaa 100644
--- a/apolloschurchapp/src/content-single/index.js
+++ b/apolloschurchapp/src/content-single/index.js
@@ -1,17 +1,106 @@
-import { createStackNavigator } from 'react-navigation';
-
-import ContentSingle from './ContentSingle';
-
-const ContentSingleNavigator = createStackNavigator(
-  {
-    ContentSingle,
-  },
-  {
-    initialRouteName: 'ContentSingle',
-    headerMode: 'float',
-    headerTransitionPreset: 'fade-in-place',
-    navigationOptions: { header: null },
+import React, { PureComponent } from 'react';
+import { Query } from 'react-apollo';
+import { get } from 'lodash';
+import PropTypes from 'prop-types';
+
+import { ErrorCard } from 'apolloschurchapp/src/ui/Card';
+import { ThemeMixin } from 'apolloschurchapp/src/ui/theme';
+
+import ModalView from 'apolloschurchapp/src/ui/ModalView';
+import TrackEventWhenLoaded from 'apolloschurchapp/src/analytics/TrackEventWhenLoaded';
+
+import { events } from 'apolloschurchapp/src/analytics';
+import ActionContainer from './ActionContainer';
+import getContentItem from './getContentItem';
+
+import DevotionalContentItem from './DevotionalContentItem';
+import UniversalContentItem from './UniversalContentItem';
+
+class ContentSingle extends PureComponent {
+  static propTypes = {
+    navigation: PropTypes.shape({
+      getParam: PropTypes.func,
+      push: PropTypes.func,
+    }),
+  };
+
+  static navigationOptions = {
+    header: null,
+  };
+
+  get itemId() {
+    return this.props.navigation.getParam('itemId', []);
+  }
+
+  get queryVariables() {
+    return { itemId: this.itemId };
+  }
+
+  renderContent = ({ content, loading, error }) => {
+    let { __typename } = content;
+    if (!__typename && this.itemId) {
+      [__typename] = this.itemId.split(':');
+    }
+    switch (__typename) {
+      case 'DevotionalContentItem':
+        return (
+          <DevotionalContentItem
+            id={this.itemId}
+            content={content}
+            loading={loading}
+            error={error}
+          />
+        );
+      case 'UniversalContentItem':
+      default:
+        return (
+          <UniversalContentItem
+            id={this.itemId}
+            content={content}
+            loading={loading}
+            error={error}
+          />
+        );
+    }
+  };
+
+  renderWithData = ({ loading, error, data }) => {
+    if (error) return <ErrorCard error={error} />;
+
+    const content = data.node || {};
+
+    const { theme = {}, id } = content;
+
+    return (
+      <ThemeMixin
+        mixin={{
+          type: get(theme, 'type', 'light').toLowerCase(),
+          colors: get(theme, 'colors'),
+        }}
+      >
+        <ModalView>
+          <TrackEventWhenLoaded
+            loaded={!!(!loading && content.title)}
+            eventName={events.ViewContent}
+            properties={{
+              title: content.title,
+              itemId: this.itemId,
+            }}
+          />
+          {this.renderContent({ content, loading, error })}
+          <ActionContainer itemId={id} />
+        </ModalView>
+      </ThemeMixin>
+    );
+  };
+
+  render() {
+    return (
+      <Query query={getContentItem} variables={this.queryVariables}>
+        {this.renderWithData}
+      </Query>
+    );
   }
-);
+}
 
-export default ContentSingleNavigator;
+export default ContentSingle;
diff --git a/apolloschurchapp/src/event/Event.js b/apolloschurchapp/src/event/Event.js
deleted file mode 100644
index 270a48f..0000000
--- a/apolloschurchapp/src/event/Event.js
+++ /dev/null
@@ -1,65 +0,0 @@
-import React from 'react';
-import { get } from 'lodash';
-import PropTypes from 'prop-types';
-import moment from 'moment';
-import {
-  GradientOverlayImage,
-  BackgroundView,
-  PaddedView,
-  H2,
-  Paragraph,
-  StretchyView,
-} from '@apollosproject/ui-kit';
-
-import { FlexedScrollView, EventInfoItem } from './components';
-
-const Event = ({ event, loading }) => {
-  const coverImageSources = get(event, 'image.sources', []);
-  return (
-    <BackgroundView>
-      <StretchyView>
-        {({ Stretchy, ...scrollViewProps }) => (
-          <FlexedScrollView {...scrollViewProps}>
-            {coverImageSources.length || loading ? (
-              <Stretchy>
-                <GradientOverlayImage
-                  isLoading={!coverImageSources.length && loading}
-                  source={coverImageSources}
-                />
-              </Stretchy>
-            ) : null}
-            <PaddedView vertical={false}>
-              <H2 padded isLoading={!event.name && loading}>
-                {event.name}
-              </H2>
-              <Paragraph>
-                <EventInfoItem
-                  icon={'time'}
-                  title={moment(event.start).format('ddd, MMMM Do, YYYY')}
-                  subtitle={`${moment(event.start).format('LT')} — ${moment(
-                    event.end
-                  ).format('LT')}`}
-                />
-                <EventInfoItem icon={'pin'} title={event.location} />
-              </Paragraph>
-            </PaddedView>
-          </FlexedScrollView>
-        )}
-      </StretchyView>
-    </BackgroundView>
-  );
-};
-
-Event.propTypes = {
-  event: PropTypes.shape({
-    __typename: PropTypes.string,
-    id: PropTypes.string,
-    name: PropTypes.string,
-    start: PropTypes.string,
-    end: PropTypes.string,
-    location: PropTypes.string,
-  }),
-  loading: PropTypes.bool,
-};
-
-export default Event;
diff --git a/apolloschurchapp/src/event/Event.tests.js b/apolloschurchapp/src/event/Event.tests.js
deleted file mode 100644
index 10cf33d..0000000
--- a/apolloschurchapp/src/event/Event.tests.js
+++ /dev/null
@@ -1,31 +0,0 @@
-import React from 'react';
-import renderer from 'react-test-renderer';
-import moment from 'moment';
-
-import Providers from 'apolloschurchapp/src/Providers';
-
-import Event from './Event';
-
-describe('The Event component', () => {
-  it('should render', () => {
-    const tree = renderer.create(
-      <Providers>
-        <Event
-          event={{
-            __typename: 'Event',
-            id: 'Event:123',
-            start: moment('2019-09-26T15:10:51.200Z')
-              .utc()
-              .toJSON(),
-            end: moment('2019-09-26T17:10:51.200Z')
-              .utc()
-              .toJSON(),
-            location: 'Willow Creek, Chicago',
-            image: { sources: [{ url: 'https://url.com/image.jpg' }] },
-          }}
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/event/EventConnected.js b/apolloschurchapp/src/event/EventConnected.js
deleted file mode 100644
index 71f0a3b..0000000
--- a/apolloschurchapp/src/event/EventConnected.js
+++ /dev/null
@@ -1,81 +0,0 @@
-import React, { PureComponent } from 'react';
-import { Query } from 'react-apollo';
-import { get } from 'lodash';
-import PropTypes from 'prop-types';
-
-import { ErrorCard, ThemeMixin } from '@apollosproject/ui-kit';
-
-import { TrackEventWhenLoaded } from '@apollosproject/ui-analytics';
-
-import NavigationHeader from '../content-single/NavigationHeader';
-import Event from './Event';
-import GET_EVENT from './getEvent';
-
-class EventConnected extends PureComponent {
-  static propTypes = {
-    navigation: PropTypes.shape({
-      getParam: PropTypes.func,
-      push: PropTypes.func,
-    }),
-  };
-
-  static navigationOptions = {
-    header: NavigationHeader,
-    headerTransparent: true,
-    headerMode: 'float',
-  };
-
-  get eventId() {
-    return this.props.navigation.getParam('eventId', []);
-  }
-
-  get queryVariables() {
-    return { eventId: this.eventId };
-  }
-
-  renderWithData = ({ loading, error, data }) => {
-    if (error) return <ErrorCard error={error} />;
-
-    const event = data.node || {};
-
-    const { theme = {} } = event;
-
-    return (
-      <ThemeMixin
-        mixin={{
-          type: get(theme, 'type', 'light').toLowerCase(),
-          colors: get(theme, 'colors'),
-        }}
-      >
-        <TrackEventWhenLoaded
-          loaded={!!(!loading && event.name)}
-          eventName={'View Event'}
-          properties={{
-            title: event.name,
-            eventId: this.eventId,
-          }}
-        />
-        <Event
-          id={this.eventId}
-          event={event}
-          loading={loading}
-          error={error}
-        />
-      </ThemeMixin>
-    );
-  };
-
-  render() {
-    return (
-      <Query
-        query={GET_EVENT}
-        fetchPolicy="network-only"
-        variables={this.queryVariables}
-      >
-        {this.renderWithData}
-      </Query>
-    );
-  }
-}
-
-export default EventConnected;
diff --git a/apolloschurchapp/src/event/EventConnected.tests.js b/apolloschurchapp/src/event/EventConnected.tests.js
deleted file mode 100644
index ca7abcd..0000000
--- a/apolloschurchapp/src/event/EventConnected.tests.js
+++ /dev/null
@@ -1,52 +0,0 @@
-import React from 'react';
-
-import Providers from 'apolloschurchapp/src/Providers';
-
-import moment from 'moment';
-import { renderWithApolloData } from '../utils/testUtils';
-import getEvent from './getEvent';
-import EventConnected from './EventConnected';
-
-const mocks = {
-  request: {
-    query: getEvent,
-    variables: { eventId: 'Event:123' },
-  },
-  result: {
-    data: {
-      node: {
-        __typename: 'Event',
-        id: 'Event:123',
-        start: moment('2019-09-26T15:10:51.200Z')
-          .utc()
-          .toJSON(),
-        end: moment('2019-09-26T17:10:51.200Z')
-          .utc()
-          .toJSON(),
-        location: 'Willow Creek, Chicago',
-        name: 'Cookout',
-        image: {
-          __typename: 'ImageMedia',
-          sources: [
-            {
-              uri: 'https://url.com/image.jpg',
-              __typename: 'ImageMediaSource',
-            },
-          ],
-        },
-      },
-    },
-  },
-};
-
-describe('EventConnected component', () => {
-  it('renders without errors', async () => {
-    const tree = await renderWithApolloData(
-      <Providers mocks={[mocks]}>
-        <EventConnected navigation={{ getParam: () => 'Event:123' }} />
-      </Providers>
-    );
-
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/event/components.js b/apolloschurchapp/src/event/components.js
deleted file mode 100644
index 509e400..0000000
--- a/apolloschurchapp/src/event/components.js
+++ /dev/null
@@ -1,44 +0,0 @@
-import React from 'react';
-import { ScrollView, View } from 'react-native';
-import PropTypes from 'prop-types';
-import { styled, withTheme, H6, H4, Icon } from '@apollosproject/ui-kit';
-
-const FlexedScrollView = styled({ flex: 1 })(ScrollView);
-
-const StyledIcon = withTheme(({ theme: { colors, sizing } }) => ({
-  fill: colors.text.tertiary,
-  size: sizing.baseUnit * 1.5,
-  style: {
-    marginRight: 8,
-  },
-}))(Icon);
-
-const StyledH6 = styled(({ theme: { colors, sizing } }) => ({
-  color: colors.text.tertiary,
-  fontSize: sizing.baseUnit * 0.875,
-  marginTop: sizing.baseUnit / 4,
-}))(H6);
-
-const EventInfoContainer = styled({ marginBottom: 24, flexDirection: 'row' })(
-  View
-);
-
-const TextContainer = styled({ flexDirection: 'column' })(View);
-
-const EventInfoItem = ({ icon, title, subtitle }) => (
-  <EventInfoContainer>
-    <StyledIcon name={icon} />
-    <TextContainer>
-      <H4 bold>{title}</H4>
-      <StyledH6>{subtitle}</StyledH6>
-    </TextContainer>
-  </EventInfoContainer>
-);
-
-EventInfoItem.propTypes = {
-  icon: PropTypes.string.isRequired,
-  title: PropTypes.string,
-  subtitle: PropTypes.string,
-};
-
-export { FlexedScrollView, EventInfoItem };
diff --git a/apolloschurchapp/src/event/getEvent.js b/apolloschurchapp/src/event/getEvent.js
deleted file mode 100644
index 7035e1b..0000000
--- a/apolloschurchapp/src/event/getEvent.js
+++ /dev/null
@@ -1,28 +0,0 @@
-import gql from 'graphql-tag';
-
-export const EVENT_FRAGMENT = gql`
-  fragment eventFragment on Event {
-    id
-    name
-    location
-    start
-    end
-    image {
-      sources {
-        uri
-      }
-    }
-  }
-`;
-
-export default gql`
-  query getEvent($eventId: ID!) {
-    node(id: $eventId) {
-      __typename
-      ... on Event {
-        ...eventFragment
-      }
-    }
-  }
-  ${EVENT_FRAGMENT}
-`;
diff --git a/apolloschurchapp/src/event/index.js b/apolloschurchapp/src/event/index.js
deleted file mode 100644
index b065c4c..0000000
--- a/apolloschurchapp/src/event/index.js
+++ /dev/null
@@ -1,17 +0,0 @@
-import { createStackNavigator } from 'react-navigation';
-
-import Event from './EventConnected';
-
-const EventNavigator = createStackNavigator(
-  {
-    Event,
-  },
-  {
-    initialRouteName: 'Event',
-    headerMode: 'float',
-    headerTransitionPreset: 'fade-in-place',
-    navigationOptions: { header: null },
-  }
-);
-
-export default EventNavigator;
diff --git a/apolloschurchapp/src/index.js b/apolloschurchapp/src/index.js
index 114240e..50fdd81 100644
--- a/apolloschurchapp/src/index.js
+++ b/apolloschurchapp/src/index.js
@@ -1,75 +1,54 @@
-import hoistNonReactStatic from 'hoist-non-react-statics';
 import React from 'react';
 import { StatusBar } from 'react-native';
-import { createStackNavigator, createAppContainer } from 'react-navigation';
-import SplashScreen from 'react-native-splash-screen';
-
-import { BackgroundView, withTheme } from '@apollosproject/ui-kit';
-import Passes from '@apollosproject/ui-passes';
-import { MediaPlayer } from '@apollosproject/ui-media-player';
-import Auth, { ProtectedRoute } from '@apollosproject/ui-auth';
+import { createStackNavigator } from 'react-navigation';
+// import { Sentry } from 'react-native-sentry';
 
+import BackgroundView from 'apolloschurchapp/src/ui/BackgroundView';
+import MediaPlayer from 'apolloschurchapp/src/ui/MediaPlayer';
+import { withTheme } from 'apolloschurchapp/src/ui/theme';
 import Providers from './Providers';
+import NotificationsInit from './Notifications';
 import NavigationService from './NavigationService';
 import ContentSingle from './content-single';
-import Event from './event';
 import Tabs from './tabs';
+import Auth from './auth';
 import PersonalDetails from './user-settings/PersonalDetails';
 import ChangePassword from './user-settings/ChangePassword';
-import Location from './user-settings/Locations';
-import LandingScreen from './LandingScreen';
-import UserWebBrowser from './user-web-browser';
-import Onboarding from './ui/Onboarding';
+
+// Sentry.config(
+//   'https://5908fa19ed37447f86b2717423cadec5:45dd3b58792b413cb67109c5e63a0bb7@sentry.io/1241658'
+// ).install();
 
 const AppStatusBar = withTheme(({ theme }) => ({
   barStyle: 'dark-content',
   backgroundColor: theme.colors.paper,
 }))(StatusBar);
 
-const ProtectedRouteWithSplashScreen = (props) => {
-  const handleOnRouteChange = () => SplashScreen.hide();
-
-  return <ProtectedRoute {...props} onRouteChange={handleOnRouteChange} />;
-};
-
-// Hack to avoid needing to pass emailRequired through the navigator.navigate
-const EnhancedAuth = (props) => <Auth {...props} emailRequired />;
-// 😑
-hoistNonReactStatic(EnhancedAuth, Auth);
-
 const AppNavigator = createStackNavigator(
   {
-    ProtectedRoute: ProtectedRouteWithSplashScreen,
     Tabs,
     ContentSingle,
-    Event,
-    Auth: EnhancedAuth,
+    Auth,
     PersonalDetails,
     ChangePassword,
-    Location,
-    Passes,
-    UserWebBrowser,
-    Onboarding,
-    LandingScreen,
   },
   {
-    initialRouteName: 'ProtectedRoute',
+    initialRouteName: 'Tabs',
     mode: 'modal',
     headerMode: 'screen',
   }
 );
 
-const AppContainer = createAppContainer(AppNavigator);
-
 const App = () => (
   <Providers>
     <BackgroundView>
       <AppStatusBar barStyle="dark-content" />
-      <AppContainer
+      <AppNavigator
         ref={(navigatorRef) => {
           NavigationService.setTopLevelNavigator(navigatorRef);
         }}
       />
+      <NotificationsInit />
       <MediaPlayer />
     </BackgroundView>
   </Providers>
diff --git a/apolloschurchapp/src/__tests__/index.test.js b/apolloschurchapp/src/index.test.js
similarity index 87%
rename from apolloschurchapp/src/__tests__/index.test.js
rename to apolloschurchapp/src/index.test.js
index 92aedcb..dcea081 100644
--- a/apolloschurchapp/src/__tests__/index.test.js
+++ b/apolloschurchapp/src/index.test.js
@@ -1,7 +1,7 @@
 import renderer from 'react-test-renderer';
 import React from 'react';
 
-import App from '../index';
+import App from '.';
 
 it('renders without crashing', () => {
   const rendered = renderer.create(<App />).toJSON();
diff --git a/apolloschurchapp/src/live/LiveButton.js b/apolloschurchapp/src/live/LiveButton.js
index 6e1fa30..5b5726f 100644
--- a/apolloschurchapp/src/live/LiveButton.js
+++ b/apolloschurchapp/src/live/LiveButton.js
@@ -2,17 +2,14 @@ import React from 'react';
 import { Query } from 'react-apollo';
 import { get } from 'lodash';
 
-import {
-  Card,
-  CardContent,
-  TouchableScale,
-  styled,
-  ChannelLabel,
-  UIText,
-} from '@apollosproject/ui-kit';
+import { UIText } from 'apolloschurchapp/src/ui/typography';
+import Card, { CardContent } from 'apolloschurchapp/src/ui/Card';
+import TouchableScale from 'apolloschurchapp/src/ui/TouchableScale';
+import styled from 'apolloschurchapp/src/ui/styled';
+import ChannelLabel from 'apolloschurchapp/src/ui/ChannelLabel';
 import { WebBrowserConsumer } from 'apolloschurchapp/src/ui/WebBrowser';
 
-import GET_LIVE_STREAM from './getLiveStream';
+import getLiveStream from './getLiveStream';
 
 const LiveCard = styled(({ theme }) => ({
   backgroundColor: theme.colors.lightSecondary,
@@ -20,7 +17,7 @@ const LiveCard = styled(({ theme }) => ({
 
 const LiveNowButton = () => (
   <Query
-    query={GET_LIVE_STREAM}
+    query={getLiveStream}
     fetchPolicy="cache-and-network"
     pollInterval={60000}
   >
diff --git a/apolloschurchapp/src/scripture/ScriptureConnected.tests.js b/apolloschurchapp/src/scripture/ScriptureConnected.tests.js
index 5666b7d..04b5361 100644
--- a/apolloschurchapp/src/scripture/ScriptureConnected.tests.js
+++ b/apolloschurchapp/src/scripture/ScriptureConnected.tests.js
@@ -1,8 +1,9 @@
 import React from 'react';
+import renderer from 'react-test-renderer';
+import wait from 'waait';
 
 import Providers from 'apolloschurchapp/src/Providers';
 
-import { renderWithApolloData } from '../utils/testUtils';
 import getScripture from './getScripture';
 import ScriptureConnected from '.';
 
@@ -14,7 +15,6 @@ const mocks = {
   result: {
     data: {
       scripture: {
-        __typename: 'Scripture',
         id: 'GEN.1.1',
         reference: 'Genesis 1:1',
         copyright: 'PUBLIC DOMAIN',
@@ -27,12 +27,12 @@ const mocks = {
 
 describe('ScriptureConnected component', () => {
   it('renders without errors', async () => {
-    const tree = await renderWithApolloData(
-      <Providers mocks={[mocks]}>
+    const tree = renderer.create(
+      <Providers mocks={[mocks]} addTypename={false}>
         <ScriptureConnected references={['Genesis 1:1']} />
       </Providers>
     );
-
+    await wait(0); // wait for response from graphql
     expect(tree).toMatchSnapshot();
   });
 });
diff --git a/apolloschurchapp/src/scripture/index.js b/apolloschurchapp/src/scripture/index.js
index 5b23d5d..5c7e682 100644
--- a/apolloschurchapp/src/scripture/index.js
+++ b/apolloschurchapp/src/scripture/index.js
@@ -2,8 +2,8 @@ import React from 'react';
 import { Query } from 'react-apollo';
 import { get } from 'lodash';
 import PropTypes from 'prop-types';
-import { ScriptureItem } from '@apollosproject/ui-scripture';
-import GET_SCRIPTURE from './getScripture';
+import ScriptureItem from 'apolloschurchapp/src/ui/Scripture/ScriptureItem';
+import getScripture from './getScripture';
 
 /**
  * This is the data-bound "connected" scripture component.
@@ -15,7 +15,7 @@ const ScriptureConnected = ({
   references,
 }) =>
   references.map((query) => (
-    <Query query={GET_SCRIPTURE} variables={{ query }} key={query}>
+    <Query query={getScripture} variables={{ query }} key={query}>
       {({ loading, data }) => (
         <ScriptureComponent
           reference={get(data, 'scripture.reference', '')}
diff --git a/apolloschurchapp/src/store/Auth.tests.js b/apolloschurchapp/src/store/Auth.tests.js
new file mode 100644
index 0000000..da6b401
--- /dev/null
+++ b/apolloschurchapp/src/store/Auth.tests.js
@@ -0,0 +1,11 @@
+import { client } from 'apolloschurchapp/src/client';
+
+import { resolvers } from '.';
+
+describe('Auth Store', () => {
+  it('logs a user out', async () => {
+    client.cache.writeData({ data: { authToken: 'some-auth-token' } });
+    resolvers.Mutation.logout({}, {}, { cache: client.cache });
+    expect(client.cache).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/store/MediaPlayer.tests.js b/apolloschurchapp/src/store/MediaPlayer.tests.js
new file mode 100644
index 0000000..68724b9
--- /dev/null
+++ b/apolloschurchapp/src/store/MediaPlayer.tests.js
@@ -0,0 +1,58 @@
+import { client } from 'apolloschurchapp/src/client';
+import gql from 'graphql-tag';
+
+import { resolvers, defaults } from '.';
+
+const query = gql`
+  query {
+    mediaPlayer @client {
+      currentTrack {
+        mediaSourceUri
+        posterSourceUri
+        title
+        artist
+      }
+      isPlaying
+      isFullscreen
+      isVisible
+    }
+  }
+`;
+
+const testTrack = {
+  parentId: 'parentId',
+  mediaSourceUri: 'mediaSourceUri',
+  posterSourceUri: 'posterSourceUri',
+  title: 'title',
+  artist: 'artist',
+};
+
+describe('MediaPlayer Store', () => {
+  beforeEach(() => {
+    client.writeData({ data: defaults });
+  });
+
+  it('plays a track', async () => {
+    resolvers.Mutation.mediaPlayerPlayNow({}, testTrack, {
+      cache: client.cache,
+    });
+    expect(client.query({ query })).resolves.toMatchSnapshot();
+  });
+  it('updates player state', async () => {
+    resolvers.Mutation.mediaPlayerPlayNow({}, testTrack, {
+      cache: client.cache,
+    });
+    expect(client.query({ query })).resolves.toMatchSnapshot();
+    resolvers.Mutation.mediaPlayerUpdateState(
+      {},
+      { isPlaying: false },
+      { cache: client.cache }
+    );
+    expect(client.query({ query })).resolves.toMatchSnapshot();
+    resolvers.Mutation.mediaPlayerUpdateState(
+      {},
+      { isPlaying: true },
+      { cache: client.cache }
+    );
+  });
+});
diff --git a/apolloschurchapp/src/store/index.js b/apolloschurchapp/src/store/index.js
index 66fdccb..2873934 100644
--- a/apolloschurchapp/src/store/index.js
+++ b/apolloschurchapp/src/store/index.js
@@ -1,62 +1,242 @@
+import { merge, get } from 'lodash';
 import gql from 'graphql-tag';
-
-import { schema as mediaPlayerSchema } from '@apollosproject/ui-media-player';
-import { updatePushId } from '@apollosproject/ui-notifications';
-import { CACHE_LOADED } from '../client/cache'; // eslint-disable-line
-
+import getLoginState from 'apolloschurchapp/src/auth/getLoginState';
+import { track, events } from 'apolloschurchapp/src/analytics';
+import { client } from '../client'; // eslint-disable-line
+import getAuthToken from './getAuthToken';
 // TODO: this will require more organization...ie...not keeping everything in one file.
 // But this is simple while our needs our small.
 
 export const schema = `
   type Query {
-    devicePushId: String
-    cacheLoaded: Boolean
-    notificationsEnabled: Boolean
+    authToken: String
+    mediaPlayer: MediaPlayerState
+    isLoggedIn: Boolean
   }
 
   type Mutation {
-    cacheMarkLoaded
-    updateDevicePushId(pushId: String!)
-    updatePushPermissions(enabled: Boolean!)
+    logout
+    mediaPlayerUpdateState(isPlaying: Boolean, isFullscreen: Boolean, isVisible: Boolean): Boolean
+    mediaPlayerSetPlayhead(currentTime: Float): Boolean
+    mediaPlayerPlayNow(
+      parentId: ID,
+      mediaSource: VideoMediaSource!,
+      posterSources: [ImageMediaSource],
+      title: String,
+      artist: String,
+      isVideo: Boolean,
+    ): Boolean
+
+    handleLogin(authToken: String!)
+  }
+
+  type MediaPlayerState {
+    currentTrack: MediaPlayerTrack
+    isPlaying: Boolean
+    isFullscreen: Boolean
+    isVisible: Boolean
+    currentTime: Float
+  }
+
+  type MediaPlayerProgress {
+    currentTime: Float
+    playableDuration: Float
+    seekableDuration: Float
+    duration: Float
+  }
+
+  type MediaPlayerTrack {
+    id: ID!
+    parentId: ID
+    mediaSource: VideoMediaSource!
+    posterSources: [ImageMediaSource]
+    title: String
+    artist: String
+    isVideo: Boolean
   }
-${mediaPlayerSchema}
 `;
 
 export const defaults = {
   __typename: 'Query',
-  cacheLoaded: false,
+  authToken: null,
+  mediaPlayer: {
+    __typename: 'MediaPlayerState',
+    currentTrack: null,
+    isPlaying: false,
+    isFullscreen: false,
+    isVisible: false,
+    currentTime: 0,
+    showVideo: true,
+    muted: false,
+  },
 };
 
-const GET_LOGGED_IN = gql`
-  query {
-    isLoggedIn @client
-  }
-`;
+let trackId = 0;
 
 export const resolvers = {
+  Query: {
+    isLoggedIn: () => {
+      // When logging out, this query returns an error.
+      // Rescue the error, and return false.
+      try {
+        const { authToken } = client.readQuery({ query: getAuthToken });
+        return !!authToken;
+      } catch (e) {
+        return false;
+      }
+    },
+  },
   Mutation: {
-    cacheMarkLoaded: async (root, args, { cache, client }) => {
-      cache.writeQuery({
-        query: CACHE_LOADED,
+    logout: (root, variables, { cache }) => {
+      client.resetStore();
+      cache.writeData({
+        data: defaults,
+      });
+      track({ eventName: events.UserLogout });
+      return null;
+    },
+
+    handleLogin: async (root, { authToken }, { cache }) => {
+      try {
+        await cache.writeQuery({
+          query: getAuthToken,
+          data: { authToken },
+        });
+        await cache.writeQuery({
+          query: getLoginState,
+          data: { isLoggedIn: true },
+        });
+        await cache.writeData({
+          data: { authToken },
+        });
+
+        track({ eventName: events.UserLogin });
+      } catch (e) {
+        throw e.message;
+      }
+
+      return null;
+    },
+
+    mediaPlayerPlayNow: (root, trackInfo, { cache }) => {
+      const query = gql`
+        query {
+          mediaPlayer {
+            isFullscreen
+          }
+        }
+      `;
+      const mediaTrack = merge(
+        {
+          __typename: 'MediaPlayerTrack',
+          parentId: null,
+          mediaSource: null,
+          posterSources: null,
+          title: null,
+          artist: null,
+          isVideo: false,
+        },
+        trackInfo
+      );
+
+      const { mediaPlayer } = cache.readQuery({ query });
+
+      const newMediaPlayerState = {
+        __typename: 'MediaPlayerState',
+        isPlaying: true,
+        isVisible: true,
+        isFullscreen: mediaTrack.isVideo
+          ? true
+          : (mediaPlayer && mediaPlayer.isFullscreen) || false,
+        currentTrack: mediaTrack,
+        currentTime: 0,
+        showVideo: mediaTrack.isVideo,
+        muted: false,
+      };
+
+      if (
+        // if same track
+        mediaPlayer &&
+        mediaPlayer.currentTrack &&
+        mediaPlayer.currentTrack.mediaSource.uri === mediaTrack.mediaSource.uri
+      ) {
+        // use the same Id
+        newMediaPlayerState.currentTrack.id = mediaPlayer.currentTrack.id;
+      } else {
+        // otherwise reset progress and use new Id
+        newMediaPlayerState.currentTrack.id = trackId;
+        newMediaPlayerState.progress = null;
+        trackId += 1;
+      }
+
+      cache.writeData({
+        query,
         data: {
-          cacheLoaded: true,
+          mediaPlayer: newMediaPlayerState,
         },
       });
-      const { data: { isLoggedIn } = {} } = await client.query({
-        query: GET_LOGGED_IN,
-      });
 
-      const { pushId } = cache.readQuery({
-        query: gql`
-          query {
-            pushId @client
+      track({
+        eventName: events.UserPlayedMedia,
+        properties: {
+          uri: mediaTrack.uri,
+          title: mediaTrack.title,
+          type: mediaTrack.isVideo ? 'Video' : 'Audio',
+        },
+      });
+      return null;
+    },
+    mediaPlayerUpdateState: (
+      root,
+      { isPlaying, isFullscreen, isVisible, showVideo, muted },
+      { cache }
+    ) => {
+      const query = gql`
+        query {
+          mediaPlayer @client {
+            isPlaying
+            isFullscreen
+            isVisible
+            showVideo
+            muted
           }
-        `,
+        }
+      `;
+      const { mediaPlayer } = cache.readQuery({ query });
+      cache.writeQuery({
+        query,
+        data: {
+          mediaPlayer: merge(mediaPlayer, {
+            isPlaying,
+            isFullscreen,
+            isVisible,
+            showVideo,
+            muted,
+            __typename: 'MediaPlayerState',
+          }),
+        },
+      });
+      return null;
+    },
+    mediaPlayerSetPlayhead: (root, { currentTime }, { cache }) => {
+      const query = gql`
+        query {
+          mediaPlayer @client {
+            currentTime
+          }
+        }
+      `;
+      const { mediaPlayer } = cache.readQuery({ query });
+      cache.writeQuery({
+        query,
+        data: {
+          mediaPlayer: {
+            __typename: 'MediaPlayerState',
+            currentTime:
+              currentTime || get(mediaPlayer.progress, 'currentTime') || 0,
+          },
+        },
       });
-
-      if (isLoggedIn && pushId) {
-        updatePushId({ pushId, client });
-      }
       return null;
     },
   },
diff --git a/apolloschurchapp/src/tabs/connect/ActionBar.js b/apolloschurchapp/src/tabs/connect/ActionBar.js
deleted file mode 100644
index 8708fda..0000000
--- a/apolloschurchapp/src/tabs/connect/ActionBar.js
+++ /dev/null
@@ -1,37 +0,0 @@
-import React from 'react';
-import { ActionBar, ActionBarItem } from '@apollosproject/ui-kit';
-import { withNavigation } from 'react-navigation';
-import PropTypes from 'prop-types';
-import { WebBrowserConsumer } from 'apolloschurchapp/src/ui/WebBrowser';
-
-const Toolbar = ({ navigation }) => (
-  <WebBrowserConsumer>
-    {(openUrl) => (
-      <ActionBar>
-        <ActionBarItem
-          onPress={() => navigation.navigate('Passes')}
-          icon="check"
-          label="Check-in"
-        />
-        <ActionBarItem
-          onPress={() => openUrl('https://apollosrock.newspring.cc/page/186')}
-          icon="download"
-          label="Give"
-        />
-        <ActionBarItem
-          onPress={() => navigation.navigate('TestingControlPanel')}
-          icon="information"
-          label="Test"
-        />
-      </ActionBar>
-    )}
-  </WebBrowserConsumer>
-);
-
-Toolbar.propTypes = {
-  navigation: PropTypes.shape({
-    navigate: PropTypes.func.isRequired,
-  }).isRequired,
-};
-
-export default withNavigation(Toolbar);
diff --git a/apolloschurchapp/src/tabs/connect/ActionTable/index.js b/apolloschurchapp/src/tabs/connect/ActionTable/index.js
index d376af6..36ed069 100644
--- a/apolloschurchapp/src/tabs/connect/ActionTable/index.js
+++ b/apolloschurchapp/src/tabs/connect/ActionTable/index.js
@@ -1,19 +1,18 @@
 import React from 'react';
 import { View } from 'react-native';
 
-import {
-  TableView,
+import TableView, {
   Cell,
   CellIcon,
   CellText,
   Divider,
-  Touchable,
-  styled,
-  PaddedView,
-  H4,
-} from '@apollosproject/ui-kit';
+} from 'apolloschurchapp/src/ui/TableView';
 import { WebBrowserConsumer } from 'apolloschurchapp/src/ui/WebBrowser';
+import Touchable from 'apolloschurchapp/src/ui/Touchable';
 import NavigationActions from 'apolloschurchapp/src/NavigationService';
+import styled from 'apolloschurchapp/src/ui/styled';
+import PaddedView from 'apolloschurchapp/src/ui/PaddedView';
+import { H4 } from 'apolloschurchapp/src/ui/typography';
 
 const RowHeader = styled(({ theme }) => ({
   flexDirection: 'row',
@@ -40,8 +39,8 @@ const ActionTable = () => (
             onPress={() => openUrl('https://apollosrock.newspring.cc/page/235')}
           >
             <Cell>
+              <CellIcon name="check" />
               <CellText>Find a serving opportunity</CellText>
-              <CellIcon name="arrow-next" />
             </Cell>
           </Touchable>
           <Divider />
@@ -49,8 +48,8 @@ const ActionTable = () => (
             onPress={() => openUrl('https://apollosrock.newspring.cc/page/236')}
           >
             <Cell>
+              <CellIcon name="groups" />
               <CellText>Join a small group</CellText>
-              <CellIcon name="arrow-next" />
             </Cell>
           </Touchable>
           <Divider />
@@ -58,8 +57,8 @@ const ActionTable = () => (
             onPress={() => openUrl('https://apollosrock.newspring.cc/page/233')}
           >
             <Cell>
+              <CellIcon name="share" />
               <CellText>I need prayer</CellText>
-              <CellIcon name="arrow-next" />
             </Cell>
           </Touchable>
           <Divider />
@@ -67,8 +66,8 @@ const ActionTable = () => (
             onPress={() => openUrl('https://apollosrock.newspring.cc/page/186')}
           >
             <Cell>
+              <CellIcon name="download" />
               <CellText>I would like to give</CellText>
-              <CellIcon name="arrow-next" />
             </Cell>
           </Touchable>
         </TableView>
@@ -79,7 +78,6 @@ const ActionTable = () => (
             <Cell>
               <CellIcon name="settings" />
               <CellText>Open Testing Panel</CellText>
-              <CellIcon name="arrow-next" />
             </Cell>
           </Touchable>
         </TableView>
diff --git a/apolloschurchapp/src/tabs/connect/Connect.js b/apolloschurchapp/src/tabs/connect/Connect.js
index 4ba12d4..f80cdc7 100644
--- a/apolloschurchapp/src/tabs/connect/Connect.js
+++ b/apolloschurchapp/src/tabs/connect/Connect.js
@@ -1,13 +1,43 @@
 import React, { PureComponent } from 'react';
-import { ScrollView } from 'react-native';
-import { SafeAreaView } from 'react-navigation';
+import { ScrollView, SafeAreaView } from 'react-native';
+import { Query } from 'react-apollo';
+import { get } from 'lodash';
 import PropTypes from 'prop-types';
 
-import { BackgroundView } from '@apollosproject/ui-kit';
+import { LoginButton } from 'apolloschurchapp/src/auth';
+import BackgroundView from 'apolloschurchapp/src/ui/BackgroundView';
+import { withTheme } from 'apolloschurchapp/src/ui/theme';
+import { H1, BodyText, Paragraph } from 'apolloschurchapp/src/ui/typography';
+import styled from 'apolloschurchapp/src/ui/styled';
+import Icon from 'apolloschurchapp/src/ui/Icon';
+import PaddedView from 'apolloschurchapp/src/ui/PaddedView';
+
 import ActionTable from './ActionTable';
-import ActionBar from './ActionBar';
-import UserAvatarHeader from './UserAvatarHeader';
+import { UserAvatarHeaderConnected } from './UserAvatarHeader';
 import { RecentlyLikedTileFeedConnected } from './RecentlyLikedTileFeed';
+import getLoginState from './getLoginState';
+
+const Title = styled(({ theme }) => ({
+  color: theme.colors.primary,
+  paddingBottom: theme.helpers.verticalRhythm(1.5),
+}))(H1);
+
+const BrandIcon = withTheme(({ theme }) => ({
+  name: 'brand-icon',
+  size: theme.sizing.baseUnit * 2.25,
+  marginBottom: theme.sizing.baseUnit,
+  fill: theme.colors.primary,
+}))(Icon);
+
+const Header = styled(({ theme }) => ({
+  paddingBottom: theme.sizing.baseUnit * 1.5,
+  backgroundColor: theme.colors.background.paper,
+  paddingTop: theme.sizing.baseUnit * 4,
+}))(PaddedView);
+
+const StyledLoginButton = styled(({ theme }) => ({
+  marginVertical: theme.sizing.baseUnit,
+}))(LoginButton);
 
 class Connect extends PureComponent {
   static navigationOptions = () => ({
@@ -25,14 +55,45 @@ class Connect extends PureComponent {
   render() {
     return (
       <BackgroundView>
-        <SafeAreaView>
-          <ScrollView>
-            <UserAvatarHeader />
-            <ActionBar />
-            <RecentlyLikedTileFeedConnected />
-            <ActionTable />
-          </ScrollView>
-        </SafeAreaView>
+        <Query query={getLoginState}>
+          {({ data }) => {
+            if (get(data, 'isLoggedIn', false))
+              return (
+                <SafeAreaView>
+                  <ScrollView>
+                    <UserAvatarHeaderConnected key="UserAvatarHeaderConnected" />
+                    <RecentlyLikedTileFeedConnected key="RecentlyLikedTileFeedConnected" />
+                    <ActionTable />
+                  </ScrollView>
+                </SafeAreaView>
+              );
+            return (
+              <SafeAreaView>
+                <ScrollView>
+                  <Header>
+                    <BrandIcon />
+                    <Title>Connect!</Title>
+                    <Paragraph>
+                      <BodyText>
+                        Our mission is to help you connect to others as well as
+                        help you in your walk with Christ.
+                      </BodyText>
+                    </Paragraph>
+                    <Paragraph>
+                      <BodyText>
+                        By joining this community, you will unlock amazing
+                        features like; curated content and devotionals, simple
+                        event registration, and easy online giving!
+                      </BodyText>
+                    </Paragraph>
+                    <StyledLoginButton />
+                  </Header>
+                  <ActionTable />
+                </ScrollView>
+              </SafeAreaView>
+            );
+          }}
+        </Query>
       </BackgroundView>
     );
   }
diff --git a/apolloschurchapp/src/tabs/connect/LikedContentList/LikedContentList.tests.js b/apolloschurchapp/src/tabs/connect/LikedContentList/LikedContentList.tests.js
index 673817c..f6fadb7 100644
--- a/apolloschurchapp/src/tabs/connect/LikedContentList/LikedContentList.tests.js
+++ b/apolloschurchapp/src/tabs/connect/LikedContentList/LikedContentList.tests.js
@@ -4,18 +4,18 @@ import wait from 'waait';
 
 import Providers from 'apolloschurchapp/src/Providers';
 
-import GET_LIKED_CONTENT from '../getLikedContent';
+import getLikedContent from '../getLikedContent';
 import LikedContentList from '.';
 
 describe('LikedContentList component', () => {
   it('renders LikedContentList', async () => {
     const mock = {
       request: {
-        query: GET_LIKED_CONTENT,
+        query: getLikedContent,
       },
       result: {
         data: {
-          likedContent: [
+          getAllLikedContent: [
             {
               __typename: 'UniversalContentItem',
               id: 'UniversalContentItem:4148aeb9482181025e9cad42826e676a',
diff --git a/apolloschurchapp/src/tabs/connect/LikedContentList/index.js b/apolloschurchapp/src/tabs/connect/LikedContentList/index.js
index 38dedb3..469876e 100644
--- a/apolloschurchapp/src/tabs/connect/LikedContentList/index.js
+++ b/apolloschurchapp/src/tabs/connect/LikedContentList/index.js
@@ -1,13 +1,11 @@
 import React, { PureComponent } from 'react';
 import PropTypes from 'prop-types';
 import { Query } from 'react-apollo';
-import { get } from 'lodash';
 
-import { BackgroundView, FeedView } from '@apollosproject/ui-kit';
-import fetchMoreResolver from 'apolloschurchapp/src/utils/fetchMoreResolver';
-import ContentCardConnected from '../../../ui/ContentCardConnected';
+import BackgroundView from 'apolloschurchapp/src/ui/BackgroundView';
+import FeedView from 'apolloschurchapp/src/ui/FeedView';
 
-import GET_LIKED_CONTENT from '../getLikedContent';
+import getLikedContent from '../getLikedContent';
 /** A FeedView wrapped in a query to pull content data. */
 class LikedContentList extends PureComponent {
   /** Function for React Navigation to set information in the header. */
@@ -37,27 +35,15 @@ class LikedContentList extends PureComponent {
   render() {
     return (
       <BackgroundView>
-        <Query
-          query={GET_LIKED_CONTENT}
-          fetchPolicy="cache-and-network"
-          variables={{ first: 20 }}
-        >
-          {({ loading, error, data, refetch, fetchMore, variables }) => (
+        <Query query={getLikedContent} fetchPolicy="cache-and-network">
+          {({ loading, error, data: { getAllLikedContent = [] }, refetch }) => (
             <FeedView
-              ListItemComponent={ContentCardConnected}
-              content={get(data, 'likedContent.edges', []).map(
-                (edge) => edge.node
-              )}
+              initialNumToRender={5}
+              content={getAllLikedContent}
               isLoading={loading}
               error={error}
               refetch={refetch}
               onPressItem={this.handleOnPress}
-              fetchMore={fetchMoreResolver({
-                collectionName: 'likedContent',
-                fetchMore,
-                variables,
-                data,
-              })}
             />
           )}
         </Query>
diff --git a/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeed.js b/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeed.js
index b829473..08fea62 100644
--- a/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeed.js
+++ b/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeed.js
@@ -3,50 +3,29 @@ import { View } from 'react-native';
 import { withNavigation } from 'react-navigation';
 import PropTypes from 'prop-types';
 
-import {
-  styled,
-  withTheme,
-  PaddedView,
-  H5,
-  H6,
-  HorizontalTileFeed,
-  ButtonLink,
-  TouchableScale,
-  Touchable,
-  withIsLoading,
-} from '@apollosproject/ui-kit';
+import PaddedView from 'apolloschurchapp/src/ui/PaddedView';
+import { H4, UIText } from 'apolloschurchapp/src/ui/typography';
+import HorizontalTileFeed from 'apolloschurchapp/src/ui/HorizontalTileFeed';
+import styled from 'apolloschurchapp/src/ui/styled';
+import { ButtonLink } from 'apolloschurchapp/src/ui/Button';
+import { withIsLoading } from 'apolloschurchapp/src/ui/isLoading';
 
-import HorizontalContentCardConnected from 'apolloschurchapp/src/ui/HorizontalContentCardConnected';
+import TileImageItem from '../../discover/TileImageItem';
 
 const RowHeader = styled(({ theme }) => ({
   flexDirection: 'row',
   justifyContent: 'space-between',
   alignItems: 'center',
-  zIndex: 2, // UX hack to improve tapability. Positions RowHeader above StyledHorizontalTileFeed
-  paddingTop: theme.sizing.baseUnit * 0.5,
-  paddingLeft: theme.sizing.baseUnit,
-}))(View);
+  paddingVertical: theme.sizing.baseUnit,
+}))(PaddedView);
 
 const Name = styled({
-  flexGrow: 2,
+  flexGrow: 1,
 })(View);
 
-const ButtonLinkSpacing = styled(({ theme }) => ({
-  flexDirection: 'row', // correctly positions the loading state
-  justifyContent: 'flex-end', // correctly positions the loading state
-  padding: theme.sizing.baseUnit, // UX hack to improve tapability.
-}))(View);
-
-const AndroidTouchableFix = withTheme(({ theme }) => ({
-  borderRadius: theme.sizing.baseUnit / 2,
-}))(Touchable);
-
-const StyledHorizontalTileFeed = styled(({ theme }) => ({
-  /* UX hack to improve tapability. The magic number below happens to be the number of pixels that
-   * aligns everything in the same place as if none of the UX hacks were there. */
-  marginTop: theme.sizing.baseUnit * -1.25,
-  zIndex: 1,
-}))(HorizontalTileFeed);
+const LikedContentLink = styled({
+  flexDirection: 'row-reverse',
+})(View);
 
 class RecentlyLikedTileFeed extends Component {
   static propTypes = {
@@ -67,18 +46,11 @@ class RecentlyLikedTileFeed extends Component {
   };
 
   titleImageItem = ({ item }) => (
-    <TouchableScale
-      onPress={() => {
-        this.props.navigation.push('ContentSingle', {
-          itemId: item.id,
-        });
-      }}
-    >
-      <HorizontalContentCardConnected
-        isLoading={item.isLoading}
-        contentId={item.id}
-      />
-    </TouchableScale>
+    <TileImageItem
+      item={item}
+      isLoading={this.props.isLoading}
+      navigation={this.props.navigation}
+    />
   );
 
   render() {
@@ -88,23 +60,22 @@ class RecentlyLikedTileFeed extends Component {
       <PaddedView horizontal={false}>
         <RowHeader>
           <Name>
-            <H5>{name}</H5>
+            <H4 isLoading={isLoading}>{name}</H4>
           </Name>
-
-          <AndroidTouchableFix
-            onPress={() => {
-              navigation.navigate('LikedContentList');
-            }}
-          >
-            <ButtonLinkSpacing>
-              <H6>
-                {/* we have to wrap "View All" in a ButtonLink twice to inherit styles and color correctly. */}
-                <ButtonLink>View All</ButtonLink>
-              </H6>
-            </ButtonLinkSpacing>
-          </AndroidTouchableFix>
+          <LikedContentLink>
+            <UIText isLoading={isLoading}>
+              <ButtonLink
+                onPress={() => {
+                  navigation.navigate('LikedContentList');
+                }}
+              >
+                View All
+              </ButtonLink>
+            </UIText>
+          </LikedContentLink>
         </RowHeader>
-        <StyledHorizontalTileFeed
+        <HorizontalTileFeed
+          initialNumToRender={5}
           content={content}
           renderItem={this.titleImageItem}
           loadingStateObject={this.loadingStateObject}
diff --git a/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeedConnected.js b/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeedConnected.js
index bfccbe1..a86843d 100644
--- a/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeedConnected.js
+++ b/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeedConnected.js
@@ -2,25 +2,18 @@ import React from 'react';
 import { Query } from 'react-apollo';
 import PropTypes from 'prop-types';
 
-import GET_LIKED_CONTENT from '../getLikedContent';
+import getLikedContent from '../getLikedContent';
 import RecentlyLikedTileFeed from './RecentlyLikedTileFeed';
 
 const RecentlyLikedTileFeedConnected = ({ navigation }) => (
-  <Query
-    query={GET_LIKED_CONTENT}
-    fetchPolicy="cache-and-network"
-    variables={{ first: 3 }}
-  >
-    {({
-      loading,
-      data: { likedContent: { edges = [] } = { edges: [] } } = {},
-    }) => {
-      if (!edges.length) return null;
+  <Query query={getLikedContent} fetchPolicy="cache-and-network">
+    {({ loading, data: { getAllLikedContent = [] } = {} }) => {
+      if (!getAllLikedContent.length) return null;
       return (
         <RecentlyLikedTileFeed
           id={'liked'}
           name={'Recently Liked'}
-          content={edges.map((e) => e.node)}
+          content={getAllLikedContent}
           isLoading={loading}
           navigation={navigation}
           loadingStateObject={{
diff --git a/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeedConnected.tests.js b/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeedConnected.tests.js
index a8620c1..20e6417 100644
--- a/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeedConnected.tests.js
+++ b/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeedConnected.tests.js
@@ -1,108 +1,107 @@
 import React from 'react';
+import renderer from 'react-test-renderer';
+import wait from 'waait';
 
 import Providers from 'apolloschurchapp/src/Providers';
 
-import { renderWithApolloData } from '../../../utils/testUtils';
-
-import GET_LIKED_CONTENT from '../getLikedContent';
+import getLikedContent from '../getLikedContent';
 import RecentlyLikedTileFeedConnected from './RecentlyLikedTileFeedConnected';
 
 describe('RecentlyLikedTileFeedConnected', () => {
   it('renders a RecentlyLikedTileFeedConnected', async () => {
     const mock = {
       request: {
-        query: GET_LIKED_CONTENT,
-        variables: { first: 3 },
+        query: getLikedContent,
       },
       result: {
         data: {
-          likedContent: {
-            __typename: 'ContentItemsConnection',
-            pageInfo: {
-              __typename: 'PaginationInfo',
-              endCursor: '123',
+          getAllLikedContent: [
+            {
+              id: 'UniversalContentItem:296373ecb53580855cadffa0375ebe18',
+              __typename: 'UniversalContentItem',
+              title: 'Guys Night!',
+              coverImage: {
+                sources: [
+                  {
+                    uri:
+                      'https://apollosrock.newspring.cc/GetImage.ashx?guid=58c037fa-cc7f-4d72-9571-a0cc0558e346',
+                  },
+                ],
+              },
+              sharing: {
+                title: 'Guys Night!',
+                message: '',
+                url: 'https://apollosrock.newspring.cc/',
+              },
             },
-            edges: [
-              {
-                __typename: 'ContentItemsConnectionEdge',
-                node: {
-                  __typename: 'UniversalContentItem',
-                  id: 'UniversalContentItem:d57994350b9d213866b24dea3a97433d',
-                  coverImage: null,
-                  parentChannel: {
-                    id: 'ContentChannel:4f68015ba18662a7409d1219a4ce013e',
-                    name: 'Editorial',
-                    iconName: 'text',
-                    __typename: 'ContentChannel',
+            {
+              id: 'UniversalContentItem:39193b5ad28717ebfeab4d226664d8e7',
+              __typename: 'UniversalContentItem',
+              title: 'This August at NewSpring',
+              coverImage: {
+                sources: [
+                  {
+                    uri:
+                      'https://apollosrock.newspring.cc/GetImage.ashx?guid=f54b0db0-95f5-44ad-b8f2-8bcd1b23cfdb',
                   },
-                  title: 'Mea Animal Aperiam Ornatus Eu',
-                  summary: 'Bla bla bla',
-                  theme: null,
-                  isLiked: false,
-                  likedCount: 0,
-                  videos: [],
-                  audios: [],
-                },
+                ],
+              },
+              sharing: {
+                title: 'This August at NewSpring',
+                message: '',
+                url: 'https://apollosrock.newspring.cc/',
               },
-              {
-                __typename: 'ContentItemsConnectionEdge',
-                node: {
-                  __typename: 'UniversalContentItem',
-                  id: 'UniversalContentItem:b36e55d803443431e96bb4b5068147ec',
-                  coverImage: null,
-                  parentChannel: {
-                    id: 'ContentChannel:4f68015ba18662a7409d1219a4ce013e',
-                    name: 'Editorial',
-                    iconName: 'text',
-                    __typename: 'ContentChannel',
+            },
+            {
+              id: 'UniversalContentItem:ae8ec75906ba7437c49ad2534b5024db',
+              __typename: 'UniversalContentItem',
+              title: 'A Place to Worship Free of Fear',
+              coverImage: {
+                sources: [
+                  {
+                    uri:
+                      'https://apollosrock.newspring.cc/GetImage.ashx?guid=a65bc45d-f961-4b7e-a899-63eb1f9b8da9',
                   },
-                  title: 'Probo Senserit Id Mea, Ut Sed Malis Postea,',
-                  summary: 'Bla bla bla',
-                  theme: null,
-                  isLiked: false,
-                  likedCount: 0,
-                  videos: [],
-                  audios: [],
-                },
+                ],
+              },
+              sharing: {
+                title: 'A Place to Worship Free of Fear',
+                message: '',
+                url: 'https://apollosrock.newspring.cc/',
               },
-            ],
-          },
+            },
+          ],
         },
       },
     };
     const navigation = { navigate: jest.fn(), getParam: jest.fn() };
-    const tree = await renderWithApolloData(
+    const tree = renderer.create(
       <Providers mocks={[mock]}>
         <RecentlyLikedTileFeedConnected navigation={navigation} />
       </Providers>
     );
+    await wait(0); // wait for response from graphql
     expect(tree).toMatchSnapshot();
   });
 
   it('renders nothing if no liked content', async () => {
     const mock = {
       request: {
-        query: GET_LIKED_CONTENT,
+        query: getLikedContent,
       },
       result: {
         data: {
-          likedContent: {
-            __typename: 'ContentItemsConnection',
-            pageInfo: {
-              __typename: 'PaginationInfo',
-              endCursor: null,
-            },
-            edges: [],
-          },
+          getAllLikedContent: [],
         },
       },
     };
     const navigation = { navigate: jest.fn(), getParam: jest.fn() };
-    const tree = await renderWithApolloData(
+    const tree = renderer.create(
       <Providers mocks={[mock]}>
         <RecentlyLikedTileFeedConnected navigation={navigation} />
       </Providers>
     );
+    await wait(0); // wait for response from graphql
     expect(tree).toMatchSnapshot();
   });
 });
diff --git a/apolloschurchapp/src/tabs/connect/UserAvatarHeader.js b/apolloschurchapp/src/tabs/connect/UserAvatarHeader.js
deleted file mode 100644
index 9f1b65a..0000000
--- a/apolloschurchapp/src/tabs/connect/UserAvatarHeader.js
+++ /dev/null
@@ -1,44 +0,0 @@
-import React from 'react';
-import { Query } from 'react-apollo';
-import PropTypes from 'prop-types';
-import { withNavigation } from 'react-navigation';
-
-import { Avatar, H3, styled, PaddedView } from '@apollosproject/ui-kit';
-import GET_USER_PROFILE from './getUserProfile';
-
-const Container = styled({
-  alignItems: 'center',
-  justifyContent: 'center',
-})(PaddedView);
-
-const UserAvatarHeader = ({ navigation }) => (
-  <Query query={GET_USER_PROFILE} fetchPolicy="cache-and-network">
-    {({
-      data: { currentUser: { profile: { photo, firstName } = {} } = {} } = {},
-    }) => (
-      <Container>
-        <PaddedView horizontal={false}>
-          <Avatar
-            source={photo}
-            size="large"
-            buttonIcon="settings"
-            onPressIcon={() => navigation.navigate('UserSettings')}
-          />
-        </PaddedView>
-        <H3>
-          Hello
-          {firstName ? ` ${firstName}` : ''}!
-        </H3>
-      </Container>
-    )}
-  </Query>
-);
-
-UserAvatarHeader.propTypes = {
-  navigation: PropTypes.shape({
-    getParam: PropTypes.func,
-    navigate: PropTypes.func,
-  }),
-};
-
-export default withNavigation(UserAvatarHeader);
diff --git a/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeader.js b/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeader.js
new file mode 100644
index 0000000..6c973cd
--- /dev/null
+++ b/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeader.js
@@ -0,0 +1,74 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import { compose } from 'recompose';
+import { withNavigation } from 'react-navigation';
+
+import { withIsLoading } from 'apolloschurchapp/src/ui/isLoading';
+import Touchable from 'apolloschurchapp/src/ui/Touchable';
+import UserAvatarView from 'apolloschurchapp/src/ui/UserAvatarView';
+import ConnectedImage from 'apolloschurchapp/src/ui/ConnectedImage';
+import Icon from 'apolloschurchapp/src/ui/Icon';
+import { withTheme } from 'apolloschurchapp/src/ui/theme';
+import styled from 'apolloschurchapp/src/ui/styled';
+import PaddedView from 'apolloschurchapp/src/ui/PaddedView';
+import FlexedView from 'apolloschurchapp/src/ui/FlexedView';
+
+const Container = styled(({ theme }) => ({
+  alignItems: 'center',
+  flexDirection: 'row',
+  paddingTop: theme.sizing.baseUnit * 2,
+  paddingBottom: 0,
+}))(PaddedView);
+
+const SettingsIcon = compose(
+  withTheme(({ theme }) => ({
+    name: 'settings',
+    fill: theme.colors.text.tertiary,
+  }))
+)(Icon);
+
+const UserAvatarHeader = ({
+  firstName,
+  lastName,
+  location,
+  photo,
+  refetch,
+  navigation,
+  disabled,
+  isLoading,
+}) => (
+  <Container>
+    <FlexedView>
+      <UserAvatarView
+        firstName={firstName}
+        lastName={lastName}
+        location={location}
+        photo={photo}
+        refetch={refetch}
+        disabled={disabled}
+        isLoading={isLoading}
+      />
+    </FlexedView>
+    <Touchable
+      onPress={() => navigation.navigate('UserSettings', { photo, refetch })}
+    >
+      <SettingsIcon />
+    </Touchable>
+  </Container>
+);
+
+UserAvatarHeader.propTypes = {
+  firstName: PropTypes.string,
+  lastName: PropTypes.string,
+  location: PropTypes.string,
+  photo: ConnectedImage.propTypes.source,
+  refetch: PropTypes.func,
+  navigation: PropTypes.shape({
+    getParam: PropTypes.func,
+    navigate: PropTypes.func,
+  }),
+  disabled: PropTypes.bool,
+  isLoading: PropTypes.bool,
+};
+
+export default withNavigation(withIsLoading(UserAvatarHeader));
diff --git a/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeader.test.js b/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeader.test.js
new file mode 100644
index 0000000..314dfa6
--- /dev/null
+++ b/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeader.test.js
@@ -0,0 +1,65 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+import UserAvatarHeader from './UserAvatarHeader';
+
+describe('user avatar header', () => {
+  it('renders user avatar header if logged in', () => {
+    const props = {
+      theme: {
+        colors: {
+          text: {
+            tertiary: 'red',
+          },
+        },
+      },
+      firstName: 'Isaac',
+      lastName: 'Hardy',
+      location: 'Anderson, SC',
+      photo: {
+        uri: 'google.com',
+      },
+      refetch: jest.fn(),
+      navigation: jest.fn(),
+      disabled: true,
+      isLoading: false,
+    };
+
+    const tree = renderer.create(
+      <Providers>
+        <UserAvatarHeader {...props} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+
+  it('renders placeholder when loading', () => {
+    const props = {
+      theme: {
+        colors: {
+          text: {
+            tertiary: 'red',
+          },
+        },
+      },
+      firstName: 'Isaac',
+      lastName: 'Hardy',
+      location: 'Anderson, SC',
+      photo: {
+        uri: 'google.com',
+      },
+      refetch: jest.fn(),
+      navigation: jest.fn(),
+      disabled: true,
+      isLoading: true,
+    };
+
+    const tree = renderer.create(
+      <Providers>
+        <UserAvatarHeader {...props} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeaderConnected.js b/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeaderConnected.js
new file mode 100644
index 0000000..599f719
--- /dev/null
+++ b/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeaderConnected.js
@@ -0,0 +1,38 @@
+import React from 'react';
+import { Query } from 'react-apollo';
+import PropTypes from 'prop-types';
+
+import getUserProfile from '../getUserProfile';
+import UserAvatarHeader from './UserAvatarHeader';
+
+const UserAvatarHeaderConnected = ({ navigation }) => (
+  <Query query={getUserProfile} fetchPolicy="cache-and-network">
+    {({
+      data: {
+        currentUser: {
+          profile: { photo, firstName, lastName, location } = {},
+        } = {},
+      } = {},
+      refetch,
+    }) => (
+      <UserAvatarHeader
+        firstName={firstName}
+        lastName={lastName}
+        location={location}
+        photo={photo}
+        refetch={refetch}
+        navigation={navigation}
+        disabled
+      />
+    )}
+  </Query>
+);
+
+UserAvatarHeaderConnected.propTypes = {
+  navigation: PropTypes.shape({
+    getParam: PropTypes.func,
+    navigate: PropTypes.func,
+  }),
+};
+
+export default UserAvatarHeaderConnected;
diff --git a/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeaderConnected.tests.js b/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeaderConnected.tests.js
new file mode 100644
index 0000000..e0a8488
--- /dev/null
+++ b/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeaderConnected.tests.js
@@ -0,0 +1,44 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+import wait from 'waait';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import getUserProfile from '../getUserProfile';
+import UserAvatarHeaderConnected from './UserAvatarHeaderConnected';
+
+describe('user avatar header connect', () => {
+  it('renders user avatar header if logged in', async () => {
+    const mock = {
+      request: {
+        query: getUserProfile,
+      },
+      result: {
+        data: {
+          currentUser: {
+            id: 'AuthenticatedUser:057b0758543270d1cb21784cac4d3f5c',
+            profile: {
+              firstName: 'Isaac',
+              lastName: 'Hardy',
+              location: 'Anderson, SC',
+              email: 'isaac.hardy@newspring.cc',
+              nickName: 'Ike',
+              photo: {
+                uri:
+                  'https://apollosrock.newspring.cc:443/GetImage.ashx?guid=60fd5f35-3167-4c26-9a30-d44937287b87',
+              },
+            },
+          },
+        },
+      },
+    };
+    const navigation = { navigate: jest.fn(), getParam: jest.fn() };
+    const tree = renderer.create(
+      <Providers mocks={[mock]}>
+        <UserAvatarHeaderConnected navigation={navigation} />
+      </Providers>
+    );
+    await wait(0); // wait for response from graphql
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/tabs/connect/UserAvatarHeader/index.js b/apolloschurchapp/src/tabs/connect/UserAvatarHeader/index.js
new file mode 100644
index 0000000..a8b66ec
--- /dev/null
+++ b/apolloschurchapp/src/tabs/connect/UserAvatarHeader/index.js
@@ -0,0 +1,2 @@
+export UserAvatarHeader from './UserAvatarHeader';
+export UserAvatarHeaderConnected from './UserAvatarHeaderConnected';
diff --git a/apolloschurchapp/src/tabs/connect/getLikedContent.js b/apolloschurchapp/src/tabs/connect/getLikedContent.js
index 67a6720..53ab5e7 100644
--- a/apolloschurchapp/src/tabs/connect/getLikedContent.js
+++ b/apolloschurchapp/src/tabs/connect/getLikedContent.js
@@ -1,24 +1,14 @@
 import gql from 'graphql-tag';
 
-import { LARGE_CARD_FRAGMENT } from 'apolloschurchapp/src/ui/ContentCardConnected';
-import { CONTENT_ITEM_FRAGMENT } from 'apolloschurchapp/src/content-single/getContentItem';
+import { contentItemFragment } from 'apolloschurchapp/src/content-single/getContentItem';
 
 export default gql`
-  query getAllLikedContent($first: Int, $after: String) {
-    likedContent(first: $first, after: $after) {
-      pageInfo {
-        endCursor
-      }
-      edges {
-        node {
-          ... on ContentItem {
-            ...contentItemFragment
-            ...largeCardFragment
-          }
-        }
+  query getAllLikedContent {
+    getAllLikedContent {
+      ... on ContentItem {
+        ...contentItemFragment
       }
     }
   }
-  ${CONTENT_ITEM_FRAGMENT}
-  ${LARGE_CARD_FRAGMENT}
+  ${contentItemFragment}
 `;
diff --git a/apolloschurchapp/src/tabs/connect/getUserProfile.js b/apolloschurchapp/src/tabs/connect/getUserProfile.js
index ef3b2c8..b591a5b 100644
--- a/apolloschurchapp/src/tabs/connect/getUserProfile.js
+++ b/apolloschurchapp/src/tabs/connect/getUserProfile.js
@@ -1,26 +1,19 @@
 import gql from 'graphql-tag';
-import CampusParts from 'apolloschurchapp/src/user-settings/Locations/campusFragment';
 
 export default gql`
-  query getCurrentUserProfile {
+  query {
     currentUser {
       id
       profile {
-        id
         firstName
         lastName
-        campus {
-          ...CampusParts
-        }
+        location
         email
         nickName
-        gender
-        birthDate
         photo {
           uri
         }
       }
     }
   }
-  ${CampusParts}
 `;
diff --git a/apolloschurchapp/src/tabs/connect/index.js b/apolloschurchapp/src/tabs/connect/index.js
index f1e447f..7091870 100644
--- a/apolloschurchapp/src/tabs/connect/index.js
+++ b/apolloschurchapp/src/tabs/connect/index.js
@@ -1,5 +1,4 @@
 import { createStackNavigator } from 'react-navigation';
-import { withTheme } from '@apollosproject/ui-kit';
 
 import UserSettings from 'apolloschurchapp/src/user-settings';
 
@@ -18,16 +17,11 @@ const ConnectNavigator = createStackNavigator(
   {
     initialRouteName: 'Connect',
     headerMode: 'screen',
-    defaultNavigationOptions: ({ screenProps }) => ({
-      headerTintColor: screenProps.headerTintColor,
-    }),
-    navigationOptions: { tabBarIcon: tabBarIcon('profile') },
   }
 );
 
-const EnhancedConnect = withTheme(({ theme, ...props }) => ({
-  ...props,
-  screenProps: { headerTintColor: theme.colors.text.secondary },
-}))(ConnectNavigator);
+ConnectNavigator.navigationOptions = {
+  tabBarIcon: tabBarIcon('profile'),
+};
 
-export default EnhancedConnect;
+export default ConnectNavigator;
diff --git a/apolloschurchapp/src/tabs/discover/Discover.js b/apolloschurchapp/src/tabs/discover/Discover.js
index b53b8f7..6bb4545 100644
--- a/apolloschurchapp/src/tabs/discover/Discover.js
+++ b/apolloschurchapp/src/tabs/discover/Discover.js
@@ -1,47 +1,56 @@
 import React, { PureComponent } from 'react';
-import { throttle } from 'lodash';
+import { Query } from 'react-apollo';
+import { get } from 'lodash';
 
-import { BackgroundView } from '@apollosproject/ui-kit';
+import FeedView from 'apolloschurchapp/src/ui/FeedView';
+import BackgroundView from 'apolloschurchapp/src/ui/BackgroundView';
 
-import SearchInputHeader, {
-  ReactNavigationStyleReset,
-} from '../../ui/SearchInputHeader';
+import TileContentFeed from './TileContentFeed';
+import getContentChannels from './getContentChannels';
 
-import SearchFeed from './SearchFeed';
-import DiscoverFeed from './DiscoverFeed';
+const childContentItemLoadingState = {
+  title: '',
+  isLoading: true,
+};
+
+const feedItemLoadingState = {
+  name: '',
+  isLoading: true,
+};
 
 class Discover extends PureComponent {
-  state = {
-    searchText: '',
-    isFocused: false,
-  };
-
-  handleOnChangeText = throttle(
-    (value) =>
-      this.setState({
-        searchText: value,
-      }),
-    300
+  renderItem = ({ item }) => (
+    <TileContentFeed
+      id={item.id}
+      name={item.name}
+      content={get(item, 'childContentItemsConnection.edges', []).map(
+        (edge) => edge.node
+      )}
+      isLoading={item.isLoading}
+      loadingStateObject={childContentItemLoadingState}
+    />
   );
 
-  handleOnFocus = (inputState) => {
-    this.setState({
-      isFocused: inputState,
-    });
-  };
-
   render() {
     return (
       <BackgroundView>
-        <SearchInputHeader
-          onChangeText={this.handleOnChangeText}
-          onFocus={this.handleOnFocus}
-        />
-        {this.state.isFocused || this.state.searchText ? (
-          <SearchFeed searchText={this.state.searchText} />
-        ) : (
-          <DiscoverFeed />
-        )}
+        <Query query={getContentChannels} fetchPolicy="cache-and-network">
+          {({
+            error,
+            loading,
+            data: { contentChannels = [] } = {},
+            refetch,
+          }) => (
+            <FeedView
+              error={error}
+              content={contentChannels}
+              isLoading={loading}
+              refetch={refetch}
+              renderItem={this.renderItem}
+              loadingStateObject={feedItemLoadingState}
+            />
+          )}
+        </Query>
       </BackgroundView>
     );
   }
@@ -49,7 +58,6 @@ class Discover extends PureComponent {
 
 Discover.navigationOptions = {
   title: 'Discover',
-  headerStyle: ReactNavigationStyleReset.header,
 };
 
 export default Discover;
diff --git a/apolloschurchapp/src/tabs/discover/DiscoverFeed/DiscoverFeed.tests.js b/apolloschurchapp/src/tabs/discover/DiscoverFeed/DiscoverFeed.tests.js
deleted file mode 100644
index 3ce5dec..0000000
--- a/apolloschurchapp/src/tabs/discover/DiscoverFeed/DiscoverFeed.tests.js
+++ /dev/null
@@ -1,564 +0,0 @@
-import React from 'react';
-import { flatMap } from 'lodash';
-import { createStackNavigator, createAppContainer } from 'react-navigation';
-import renderer from 'react-test-renderer';
-
-import Providers from '../../../Providers';
-import { renderWithApolloData } from '../../../utils/testUtils';
-import GET_CONTENT_CARD from '../../../ui/ContentCardConnected/query';
-
-import GET_CONTENT_CHANNELS from './getContentChannels';
-import DiscoverFeed from '.';
-
-describe('The DiscoverFeed component', () => {
-  it('should render', async () => {
-    const mockFeedData = {
-      request: {
-        query: GET_CONTENT_CHANNELS,
-      },
-      result: {
-        data: {
-          contentChannels: [
-            {
-              id: 'ContentChannel:965b6e6d7046a885bea4e300b5c0400d',
-              name: 'News',
-              childContentItemsConnection: {
-                edges: [
-                  {
-                    node: {
-                      id:
-                        'UniversalContentItem:00bb7b364911281c97fc50f2a0d17b11',
-                      title: 'Anderson Family Cookout!',
-                      isLiked: false,
-                      likedCount: 0,
-                      summary: 'Come join us!',
-                      coverImage: {
-                        name: 'Landscape Image',
-                        sources: [
-                          {
-                            uri:
-                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D62e0e2ba-2dac-468b-a852-7e8cf2533efc',
-                            __typename: 'ImageMediaSource',
-                          },
-                        ],
-                        __typename: 'ImageMedia',
-                      },
-                      theme: null,
-                      parentChannel: {
-                        id: 'ContentChannel:965b6e6d7046a885bea4e300b5c0400d',
-                        name: 'News',
-                        __typename: 'ContentChannel',
-                      },
-                      videos: [],
-                      audios: [],
-                      __typename: 'UniversalContentItem',
-                    },
-                    __typename: 'ContentItemsConnectionEdge',
-                  },
-                  {
-                    node: {
-                      id:
-                        'UniversalContentItem:7db601b238aa4345a818654300f83dd2',
-                      title: 'Robert Madu is Coming to Christ Fellowship',
-                      isLiked: false,
-                      likedCount: 5,
-                      summary:
-                        "Don't miss a powerful message from preacher and speaker, Robert Madu.",
-                      coverImage: {
-                        name: 'Square Image',
-                        sources: [
-                          {
-                            uri:
-                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3Df3ba0936-8aab-46c1-8245-0e5aef637ae3',
-                            __typename: 'ImageMediaSource',
-                          },
-                        ],
-                        __typename: 'ImageMedia',
-                      },
-                      theme: null,
-                      parentChannel: {
-                        id: 'ContentChannel:965b6e6d7046a885bea4e300b5c0400d',
-                        name: 'News',
-                        __typename: 'ContentChannel',
-                      },
-                      videos: [],
-                      audios: [],
-                      __typename: 'UniversalContentItem',
-                    },
-                    __typename: 'ContentItemsConnectionEdge',
-                  },
-                  {
-                    node: {
-                      id:
-                        'UniversalContentItem:296373ecb53580855cadffa0375ebe18',
-                      title: 'Guys Night!',
-                      isLiked: false,
-                      likedCount: 0,
-                      summary:
-                        'A time to connect with other guys who live nearby.',
-                      coverImage: {
-                        name: 'Square Image',
-                        sources: [
-                          {
-                            uri:
-                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D58c037fa-cc7f-4d72-9571-a0cc0558e346',
-                            __typename: 'ImageMediaSource',
-                          },
-                        ],
-                        __typename: 'ImageMedia',
-                      },
-                      theme: null,
-                      parentChannel: {
-                        id: 'ContentChannel:965b6e6d7046a885bea4e300b5c0400d',
-                        name: 'News',
-                        __typename: 'ContentChannel',
-                      },
-                      videos: [],
-                      audios: [],
-                      __typename: 'UniversalContentItem',
-                    },
-                    __typename: 'ContentItemsConnectionEdge',
-                  },
-                ],
-                __typename: 'ContentItemsConnection',
-              },
-              __typename: 'ContentChannel',
-            },
-            {
-              id: 'ContentChannel:4f68015ba18662a7409d1219a4ce013e',
-              name: 'Articles',
-              childContentItemsConnection: {
-                edges: [
-                  {
-                    node: {
-                      id:
-                        'UniversalContentItem:604a4a763a5fc0edfe386684ca6b3515',
-                      title: 'Test Article',
-                      isLiked: false,
-                      likedCount: 0,
-                      summary: 'Test article...',
-                      coverImage: null,
-                      theme: null,
-                      parentChannel: {
-                        id: 'ContentChannel:4f68015ba18662a7409d1219a4ce013e',
-                        name: 'Articles',
-                        __typename: 'ContentChannel',
-                      },
-                      videos: [],
-                      audios: [],
-                      __typename: 'UniversalContentItem',
-                    },
-                    __typename: 'ContentItemsConnectionEdge',
-                  },
-                  {
-                    node: {
-                      id:
-                        'UniversalContentItem:c495ff18cd998ed516a798b6218907cd',
-                      title: '10 ways to refresh your spirit every day',
-                      isLiked: false,
-                      likedCount: 2,
-                      summary:
-                        '1. Be slow What would it look like to live your life at half-speed?',
-                      coverImage: null,
-                      theme: null,
-                      parentChannel: {
-                        id: 'ContentChannel:4f68015ba18662a7409d1219a4ce013e',
-                        name: 'Articles',
-                        __typename: 'ContentChannel',
-                      },
-                      videos: [],
-                      audios: [],
-                      __typename: 'UniversalContentItem',
-                    },
-                    __typename: 'ContentItemsConnectionEdge',
-                  },
-                  {
-                    node: {
-                      id:
-                        'UniversalContentItem:95ff79f60a028b1b506aaeedf8b4c6ae',
-                      title: 'Live for Freedom Toolkit',
-                      isLiked: false,
-                      likedCount: 1,
-                      summary:
-                        "Get in the Groove\nCelebrate your freedom in Christ — in the car, shower, cubicle or wherever you go — with this playlist of NewSpring Worship's favorite songs of the summer.",
-                      coverImage: null,
-                      theme: null,
-                      parentChannel: {
-                        id: 'ContentChannel:4f68015ba18662a7409d1219a4ce013e',
-                        name: 'Articles',
-                        __typename: 'ContentChannel',
-                      },
-                      videos: [],
-                      audios: [],
-                      __typename: 'UniversalContentItem',
-                    },
-                    __typename: 'ContentItemsConnectionEdge',
-                  },
-                ],
-                __typename: 'ContentItemsConnection',
-              },
-              __typename: 'ContentChannel',
-            },
-            {
-              id: 'ContentChannel:a0f64573eabf00a607bec911794d50fb',
-              name: 'Sermon Series',
-              childContentItemsConnection: {
-                edges: [
-                  {
-                    node: {
-                      id:
-                        'ContentSeriesContentItem:6d8dc8e4bad017f815ae0cac8bf692bb',
-                      title: 'The New Weekend Experience',
-                      isLiked: false,
-                      likedCount: 1,
-                      summary:
-                        'Have you come into relationship with Jesus Christ?',
-                      coverImage: {
-                        name: 'Series Image',
-                        sources: [
-                          {
-                            uri:
-                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D98be229f-dfed-4344-86ab-0d11666fc781',
-                            __typename: 'ImageMediaSource',
-                          },
-                        ],
-                        __typename: 'ImageMedia',
-                      },
-                      theme: null,
-                      parentChannel: {
-                        id: 'ContentChannel:a0f64573eabf00a607bec911794d50fb',
-                        name: 'Sermon Series',
-                        __typename: 'ContentChannel',
-                      },
-                      videos: [
-                        { sources: [], __typename: 'VideoMedia' },
-                        { sources: [], __typename: 'VideoMedia' },
-                      ],
-                      audios: [],
-                      __typename: 'ContentSeriesContentItem',
-                    },
-                    __typename: 'ContentItemsConnectionEdge',
-                  },
-                  {
-                    node: {
-                      id:
-                        'ContentSeriesContentItem:08449058d438ebeaffe9adb7a8e633cc',
-                      title: 'Gathering',
-                      isLiked: false,
-                      likedCount: 0,
-                      summary: '',
-                      coverImage: {
-                        name: 'Square Image',
-                        sources: [
-                          {
-                            uri:
-                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D50f4e3e3-2842-4991-9f64-8fc6fbb3067c',
-                            __typename: 'ImageMediaSource',
-                          },
-                        ],
-                        __typename: 'ImageMedia',
-                      },
-                      theme: null,
-                      parentChannel: {
-                        id: 'ContentChannel:a0f64573eabf00a607bec911794d50fb',
-                        name: 'Sermon Series',
-                        __typename: 'ContentChannel',
-                      },
-                      videos: [
-                        { sources: [], __typename: 'VideoMedia' },
-                        { sources: [], __typename: 'VideoMedia' },
-                      ],
-                      audios: [],
-                      __typename: 'ContentSeriesContentItem',
-                    },
-                    __typename: 'ContentItemsConnectionEdge',
-                  },
-                  {
-                    node: {
-                      id:
-                        'ContentSeriesContentItem:b74c2d295a0cf1340232ffa8be856c00',
-                      title: 'Gauntlet 2018',
-                      isLiked: false,
-                      likedCount: 0,
-                      summary: '',
-                      coverImage: {
-                        name: 'Square Image',
-                        sources: [
-                          {
-                            uri:
-                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D3e3e38d2-d804-45db-b45a-3b7a82c415d1',
-                            __typename: 'ImageMediaSource',
-                          },
-                        ],
-                        __typename: 'ImageMedia',
-                      },
-                      theme: null,
-                      parentChannel: {
-                        id: 'ContentChannel:a0f64573eabf00a607bec911794d50fb',
-                        name: 'Sermon Series',
-                        __typename: 'ContentChannel',
-                      },
-                      videos: [
-                        { sources: [], __typename: 'VideoMedia' },
-                        { sources: [], __typename: 'VideoMedia' },
-                      ],
-                      audios: [],
-                      __typename: 'ContentSeriesContentItem',
-                    },
-                    __typename: 'ContentItemsConnectionEdge',
-                  },
-                ],
-                __typename: 'ContentItemsConnection',
-              },
-              __typename: 'ContentChannel',
-            },
-            {
-              id: 'ContentChannel:7fba1b1ee253e0fd5f0795b4b8b1175e',
-              name: 'Devotion Series',
-              childContentItemsConnection: {
-                edges: [
-                  {
-                    node: {
-                      id:
-                        'ContentSeriesContentItem:b085ec27d53006e9e6b95f3ac57da581',
-                      title: 'Jeremiah: A 33-Day Devotional',
-                      isLiked: true,
-                      likedCount: 6,
-                      summary: 'Have you ever had to deliver difficult news?',
-                      coverImage: {
-                        name: 'Square Image',
-                        sources: [
-                          {
-                            uri:
-                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D31af1a61-360c-4b1e-8e62-45517c06a9a2',
-                            __typename: 'ImageMediaSource',
-                          },
-                        ],
-                        __typename: 'ImageMedia',
-                      },
-                      theme: null,
-                      parentChannel: {
-                        id: 'ContentChannel:7fba1b1ee253e0fd5f0795b4b8b1175e',
-                        name: 'Devotion Series',
-                        __typename: 'ContentChannel',
-                      },
-                      videos: [{ sources: [], __typename: 'VideoMedia' }],
-                      audios: [],
-                      __typename: 'ContentSeriesContentItem',
-                    },
-                    __typename: 'ContentItemsConnectionEdge',
-                  },
-                  {
-                    node: {
-                      id:
-                        'ContentSeriesContentItem:71bfdac0b98ea1b72a63ff4ea64e3c5a',
-                      title: 'How To Be A Better Leader: A 7-Day Devotional',
-                      isLiked: false,
-                      likedCount: 0,
-                      summary: '',
-                      coverImage: {
-                        name: 'Square Image',
-                        sources: [
-                          {
-                            uri:
-                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3Dd3a96243-2558-4c04-bf41-3aadcf41771f',
-                            __typename: 'ImageMediaSource',
-                          },
-                        ],
-                        __typename: 'ImageMedia',
-                      },
-                      theme: null,
-                      parentChannel: {
-                        id: 'ContentChannel:7fba1b1ee253e0fd5f0795b4b8b1175e',
-                        name: 'Devotion Series',
-                        __typename: 'ContentChannel',
-                      },
-                      videos: [{ sources: [], __typename: 'VideoMedia' }],
-                      audios: [],
-                      __typename: 'ContentSeriesContentItem',
-                    },
-                    __typename: 'ContentItemsConnectionEdge',
-                  },
-                  {
-                    node: {
-                      id:
-                        'ContentSeriesContentItem:44fd3b82373ea8f197bd1e1e77c4bed0',
-                      title: '2 Thessalonians: A 5-Day Devotional',
-                      isLiked: false,
-                      likedCount: 0,
-                      summary: '',
-                      coverImage: {
-                        name: 'Square Image',
-                        sources: [
-                          {
-                            uri:
-                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D70b0b57c-5a15-4f46-8e6a-c759231685bf',
-                            __typename: 'ImageMediaSource',
-                          },
-                        ],
-                        __typename: 'ImageMedia',
-                      },
-                      theme: null,
-                      parentChannel: {
-                        id: 'ContentChannel:7fba1b1ee253e0fd5f0795b4b8b1175e',
-                        name: 'Devotion Series',
-                        __typename: 'ContentChannel',
-                      },
-                      videos: [{ sources: [], __typename: 'VideoMedia' }],
-                      audios: [],
-                      __typename: 'ContentSeriesContentItem',
-                    },
-                    __typename: 'ContentItemsConnectionEdge',
-                  },
-                ],
-                __typename: 'ContentItemsConnection',
-              },
-              __typename: 'ContentChannel',
-            },
-            {
-              id: 'ContentChannel:be7381e9c2fea9f41504cd98d4b14321',
-              name: 'Stories',
-              childContentItemsConnection: {
-                edges: [
-                  {
-                    node: {
-                      id:
-                        'UniversalContentItem:cf8fa657f23af88a2d63f7e4a2237db8',
-                      title:
-                        'The surprising journey that changed me and my dad',
-                      isLiked: false,
-                      likedCount: 6,
-                      summary:
-                        'My father, Darwin, has always been involved in my life.',
-                      coverImage: {
-                        name: 'Square Image',
-                        sources: [
-                          {
-                            uri:
-                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D2a65e561-cd6e-4590-bb37-029a21c554e8',
-                            __typename: 'ImageMediaSource',
-                          },
-                        ],
-                        __typename: 'ImageMedia',
-                      },
-                      theme: null,
-                      parentChannel: {
-                        id: 'ContentChannel:be7381e9c2fea9f41504cd98d4b14321',
-                        name: 'Stories',
-                        __typename: 'ContentChannel',
-                      },
-                      videos: [],
-                      audios: [],
-                      __typename: 'UniversalContentItem',
-                    },
-                    __typename: 'ContentItemsConnectionEdge',
-                  },
-                  {
-                    node: {
-                      id:
-                        'UniversalContentItem:2e17f5a66407d114ab9f2392b03ebccd',
-                      title: 'When I lost hope, my church family had my back',
-                      isLiked: true,
-                      likedCount: 5,
-                      summary:
-                        'Brian Kalwat was just trying to knock something off his honey-do list.',
-                      coverImage: {
-                        name: 'Square Image',
-                        sources: [
-                          {
-                            uri:
-                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D0305285f-1155-4405-ba38-a61b9c8558be',
-                            __typename: 'ImageMediaSource',
-                          },
-                        ],
-                        __typename: 'ImageMedia',
-                      },
-                      theme: null,
-                      parentChannel: {
-                        id: 'ContentChannel:be7381e9c2fea9f41504cd98d4b14321',
-                        name: 'Stories',
-                        __typename: 'ContentChannel',
-                      },
-                      videos: [],
-                      audios: [],
-                      __typename: 'UniversalContentItem',
-                    },
-                    __typename: 'ContentItemsConnectionEdge',
-                  },
-                  {
-                    node: {
-                      id:
-                        'UniversalContentItem:ae8ec75906ba7437c49ad2534b5024db',
-                      title: 'A Place to Worship Free of Fear',
-                      isLiked: false,
-                      likedCount: 1,
-                      summary:
-                        'Cornelius &amp; Stephanie Mack, proud parents of a Special Friends adult, share about their experience\nOur son Cameron began attending Willow Creek Special Friends in 2015.',
-                      coverImage: {
-                        name: 'Portrait Image',
-                        sources: [
-                          {
-                            uri:
-                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3Da65bc45d-f961-4b7e-a899-63eb1f9b8da9',
-                            __typename: 'ImageMediaSource',
-                          },
-                        ],
-                        __typename: 'ImageMedia',
-                      },
-                      theme: null,
-                      parentChannel: {
-                        id: 'ContentChannel:be7381e9c2fea9f41504cd98d4b14321',
-                        name: 'Stories',
-                        __typename: 'ContentChannel',
-                      },
-                      videos: [],
-                      audios: [],
-                      __typename: 'UniversalContentItem',
-                    },
-                    __typename: 'ContentItemsConnectionEdge',
-                  },
-                ],
-                __typename: 'ContentItemsConnection',
-              },
-              __typename: 'ContentChannel',
-            },
-          ],
-        },
-      },
-    };
-    const mockChannelCardData = flatMap(
-      mockFeedData.result.data.contentChannels,
-      (contentChannel) =>
-        contentChannel.childContentItemsConnection.edges.map((edge) => ({
-          request: {
-            query: GET_CONTENT_CARD,
-            variables: { contentId: edge.node.id },
-          },
-          result: {
-            data: {
-              node: edge.node,
-            },
-          },
-        }))
-    );
-
-    const DiscoverStack = createStackNavigator({ DiscoverFeed });
-    const DiscoverFeedWithNavigation = createAppContainer(DiscoverStack);
-    const tree = await renderWithApolloData(
-      <Providers mocks={[mockFeedData, ...mockChannelCardData]}>
-        <DiscoverFeedWithNavigation />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render a loading state', () => {
-    const DiscoverStack = createStackNavigator({ DiscoverFeed });
-    const DiscoverFeedWithNavigation = createAppContainer(DiscoverStack);
-    const tree = renderer.create(
-      <Providers cache={null}>
-        <DiscoverFeedWithNavigation />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/tabs/discover/DiscoverFeed/TileContentFeed.js b/apolloschurchapp/src/tabs/discover/DiscoverFeed/TileContentFeed.js
deleted file mode 100644
index c4507fb..0000000
--- a/apolloschurchapp/src/tabs/discover/DiscoverFeed/TileContentFeed.js
+++ /dev/null
@@ -1,111 +0,0 @@
-import React from 'react';
-import { View } from 'react-native';
-import { withNavigation } from 'react-navigation';
-import PropTypes from 'prop-types';
-
-import {
-  styled,
-  withTheme,
-  H5,
-  H6,
-  HorizontalTileFeed,
-  ButtonLink,
-  TouchableScale,
-  Touchable,
-  withIsLoading,
-} from '@apollosproject/ui-kit';
-
-import HorizontalContentCardConnected from '../../../ui/HorizontalContentCardConnected';
-
-const RowHeader = styled(({ theme }) => ({
-  flexDirection: 'row',
-  justifyContent: 'space-between',
-  alignItems: 'center',
-  zIndex: 2, // UX hack to improve tapability. Positions RowHeader above StyledHorizontalTileFeed
-  paddingLeft: theme.sizing.baseUnit,
-}))(View);
-
-const Name = styled({
-  flexGrow: 2,
-})(View);
-
-const AndroidTouchableFix = withTheme(({ theme }) => ({
-  borderRadius: theme.sizing.baseUnit / 2,
-}))(Touchable);
-
-const ButtonLinkSpacing = styled(({ theme }) => ({
-  flexDirection: 'row', // correctly positions the loading state
-  justifyContent: 'flex-end', // correctly positions the loading state
-  padding: theme.sizing.baseUnit, // UX hack to improve tapability.
-}))(View);
-
-const StyledHorizontalTileFeed = styled(({ theme }) => ({
-  /* UX hack to improve tapability. The magic number below happens to be the number of pixels that
-   * aligns everything in the same place as if none of the UX hacks were there. */
-  marginTop: theme.sizing.baseUnit * -1.25,
-  paddingBottom: theme.sizing.baseUnit,
-  zIndex: 1,
-}))(HorizontalTileFeed);
-
-const loadingStateObject = {
-  id: 'fake_id',
-  title: '',
-  coverImage: [],
-};
-
-const TileContentFeed = ({ isLoading, id, name, navigation, content = [] }) => (
-  <>
-    <RowHeader>
-      <Name>
-        <H5>{name}</H5>
-      </Name>
-      <AndroidTouchableFix
-        onPress={() => {
-          navigation.navigate('ContentFeed', {
-            itemId: id,
-            itemTitle: name,
-          });
-        }}
-      >
-        <ButtonLinkSpacing>
-          <H6>
-            <ButtonLink>View All</ButtonLink>
-          </H6>
-        </ButtonLinkSpacing>
-      </AndroidTouchableFix>
-    </RowHeader>
-    <StyledHorizontalTileFeed
-      content={content}
-      renderItem={({ item }) => (
-        <TouchableScale
-          onPress={() => {
-            navigation.push('ContentSingle', {
-              itemId: item.id,
-            });
-          }}
-        >
-          <HorizontalContentCardConnected
-            contentId={item.id}
-            isLoading={isLoading}
-          />
-        </TouchableScale>
-      )}
-      loadingStateObject={loadingStateObject}
-      isLoading={isLoading}
-    />
-  </>
-);
-
-TileContentFeed.propTypes = {
-  navigation: PropTypes.shape({
-    navigate: PropTypes.func,
-  }),
-  isLoading: PropTypes.bool,
-  id: PropTypes.string,
-  name: PropTypes.string,
-  content: PropTypes.arrayOf(
-    PropTypes.any // this component doesn't care about the shape of `node`, just that it exists
-  ),
-};
-
-export default withNavigation(withIsLoading(TileContentFeed));
diff --git a/apolloschurchapp/src/tabs/discover/DiscoverFeed/getContentChannels.js b/apolloschurchapp/src/tabs/discover/DiscoverFeed/getContentChannels.js
deleted file mode 100644
index a63629c..0000000
--- a/apolloschurchapp/src/tabs/discover/DiscoverFeed/getContentChannels.js
+++ /dev/null
@@ -1,24 +0,0 @@
-import gql from 'graphql-tag';
-
-import { CONTENT_ITEM_FRAGMENT } from 'apolloschurchapp/src/content-single/getContentItem';
-import { LARGE_CARD_FRAGMENT } from 'apolloschurchapp/src/ui/ContentCardConnected';
-
-export default gql`
-  query getContentChannels {
-    contentChannels {
-      id
-      name
-      childContentItemsConnection(first: 3) {
-        edges {
-          node {
-            id
-            ...contentItemFragment
-            ...largeCardFragment
-          }
-        }
-      }
-    }
-  }
-  ${CONTENT_ITEM_FRAGMENT}
-  ${LARGE_CARD_FRAGMENT}
-`;
diff --git a/apolloschurchapp/src/tabs/discover/DiscoverFeed/index.js b/apolloschurchapp/src/tabs/discover/DiscoverFeed/index.js
deleted file mode 100644
index 9e4006b..0000000
--- a/apolloschurchapp/src/tabs/discover/DiscoverFeed/index.js
+++ /dev/null
@@ -1,52 +0,0 @@
-import React, { memo } from 'react';
-import { Query } from 'react-apollo';
-import { get } from 'lodash';
-
-import { FeedView } from '@apollosproject/ui-kit';
-
-import TileContentFeed from './TileContentFeed';
-import GET_CONTENT_CHANNELS from './getContentChannels';
-
-const childContentItemLoadingState = {
-  title: '',
-  isLoading: true,
-};
-
-const feedItemLoadingState = {
-  name: '',
-  isLoading: true,
-};
-
-const renderItem = (
-  { item } // eslint-disable-line react/prop-types
-) => (
-  <TileContentFeed
-    id={item.id}
-    name={item.name}
-    content={get(item, 'childContentItemsConnection.edges', []).map(
-      (edge) => edge.node
-    )}
-    isLoading={item.isLoading}
-    loadingStateObject={childContentItemLoadingState}
-  />
-);
-
-const DiscoverFeed = memo(() => (
-  <Query query={GET_CONTENT_CHANNELS} fetchPolicy="cache-and-network">
-    {({ error, loading, data: { contentChannels = [] } = {}, refetch }) => (
-      <FeedView
-        error={error}
-        content={contentChannels}
-        isLoading={loading && !contentChannels.length}
-        refetch={refetch}
-        renderItem={renderItem}
-        loadingStateObject={feedItemLoadingState}
-        numColumns={1}
-      />
-    )}
-  </Query>
-));
-
-DiscoverFeed.displayName = 'DiscoverFeed';
-
-export default DiscoverFeed;
diff --git a/apolloschurchapp/src/tabs/discover/SearchFeed/NoResults.js b/apolloschurchapp/src/tabs/discover/SearchFeed/NoResults.js
deleted file mode 100644
index 7cc7a56..0000000
--- a/apolloschurchapp/src/tabs/discover/SearchFeed/NoResults.js
+++ /dev/null
@@ -1,57 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-
-import {
-  styled,
-  withTheme,
-  CenteredView,
-  PaddedView,
-  Icon,
-  H4,
-  BodySmall,
-} from '@apollosproject/ui-kit';
-
-const StyledIcon = withTheme(({ theme }) => ({
-  fill: theme.colors.text.tertiary,
-  style: {
-    marginRight: theme.sizing.baseUnit / 2,
-  },
-}))(Icon);
-
-const Title = styled({
-  flexDirection: 'row',
-  alignItems: 'center',
-})(PaddedView);
-
-const NoResultsText = styled(
-  ({ theme }) => ({
-    color: theme.colors.text.tertiary,
-    textAlign: 'center',
-  }),
-  'Discover.SearchFeed.NoResultsText'
-);
-
-const StyledH4 = NoResultsText(H4);
-const StyledBodySmall = NoResultsText(BodySmall);
-
-const NoResults = ({ searchText }) => (
-  <CenteredView>
-    <Title vertical={false}>
-      <StyledIcon name={'umbrella'} />
-      <StyledH4 padded>Uh Oh!</StyledH4>
-    </Title>
-    <PaddedView vertical={false}>
-      <StyledBodySmall>
-        {"Looks like we couldn't find anything for "}
-        <StyledBodySmall bold>{`"${searchText}."`}</StyledBodySmall>
-        {' Try searching for something else!'}
-      </StyledBodySmall>
-    </PaddedView>
-  </CenteredView>
-);
-
-NoResults.propTypes = {
-  searchText: PropTypes.string,
-};
-
-export default NoResults;
diff --git a/apolloschurchapp/src/tabs/discover/SearchFeed/SearchFeed.tests.js b/apolloschurchapp/src/tabs/discover/SearchFeed/SearchFeed.tests.js
deleted file mode 100644
index 6dbc4da..0000000
--- a/apolloschurchapp/src/tabs/discover/SearchFeed/SearchFeed.tests.js
+++ /dev/null
@@ -1,347 +0,0 @@
-import React from 'react';
-import { flatMap } from 'lodash';
-import { createStackNavigator, createAppContainer } from 'react-navigation';
-import renderer from 'react-test-renderer';
-
-import Providers from '../../../Providers';
-import { renderWithApolloData } from '../../../utils/testUtils';
-import GET_CONTENT_CARD from '../../../ui/ContentCardConnected/query';
-
-import GET_SEARCH_RESULTS from './getSearchResults';
-import SearchFeed from '.';
-
-describe('The SearchFeed component', () => {
-  it('should render', async () => {
-    const mockFeedData = {
-      request: {
-        query: GET_SEARCH_RESULTS,
-        variables: { searchText: 'Love' },
-      },
-      result: {
-        data: {
-          search: {
-            edges: [
-              {
-                title: 'How to lead people to Jesus',
-                summary:
-                  'Love compels a mother to lose all dignity in public as she screams the name of her lost child.',
-                coverImage: {
-                  name: null,
-                  sources: [
-                    {
-                      uri:
-                        'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3Dd3a96243-2558-4c04-bf41-3aadcf41771f',
-                      __typename: 'ImageMediaSource',
-                    },
-                  ],
-                  __typename: 'ImageMedia',
-                },
-                cursor: 'b487224762b030f470967f45d7205823',
-                node: {
-                  id: 'DevotionalContentItem:561dfb7dbd8a5c093fd8385c7edaadbc',
-                  title: 'How to lead people to Jesus',
-                  isLiked: false,
-                  likedCount: 0,
-                  summary:
-                    'Love compels a mother to lose all dignity in public as she screams the name of her lost child.',
-                  coverImage: {
-                    name: 'Square Image',
-                    sources: [
-                      {
-                        uri:
-                          'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3Dd3a96243-2558-4c04-bf41-3aadcf41771f',
-                        __typename: 'ImageMediaSource',
-                      },
-                    ],
-                    __typename: 'ImageMedia',
-                  },
-                  theme: null,
-                  parentChannel: {
-                    id: 'ContentChannel:559b23fd0aa90e81b1c023e72e230fa1',
-                    name: 'Devotional',
-                    __typename: 'ContentChannel',
-                  },
-                  videos: [{ sources: [], __typename: 'VideoMedia' }],
-                  audios: [],
-                  __typename: 'DevotionalContentItem',
-                },
-                __typename: 'SearchResult',
-              },
-              {
-                title: 'Live for Freedom Toolkit',
-                summary:
-                  "Get in the Groove\nCelebrate your freedom in Christ — in the car, shower, cubicle or wherever you go — with this playlist of NewSpring Worship's favorite songs of the summer.",
-                coverImage: null,
-                cursor: '4affc1122ad80d4edcf6c5bc9d88ae99',
-                node: {
-                  id: 'UniversalContentItem:95ff79f60a028b1b506aaeedf8b4c6ae',
-                  title: 'Live for Freedom Toolkit',
-                  isLiked: false,
-                  likedCount: 1,
-                  summary:
-                    "Get in the Groove\nCelebrate your freedom in Christ — in the car, shower, cubicle or wherever you go — with this playlist of NewSpring Worship's favorite songs of the summer.",
-                  coverImage: null,
-                  theme: null,
-                  parentChannel: {
-                    id: 'ContentChannel:4f68015ba18662a7409d1219a4ce013e',
-                    name: 'Articles',
-                    __typename: 'ContentChannel',
-                  },
-                  videos: [],
-                  audios: [],
-                  __typename: 'UniversalContentItem',
-                },
-                __typename: 'SearchResult',
-              },
-              {
-                title: 'Should your 20-something live at home?',
-                summary:
-                  'Daughter: “Mom, can I bring some friends from college over for dinner Sunday?',
-                coverImage: {
-                  name: null,
-                  sources: [
-                    {
-                      uri:
-                        'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3Db08e4d69-0acf-40ff-920a-4517de086175',
-                      __typename: 'ImageMediaSource',
-                    },
-                  ],
-                  __typename: 'ImageMedia',
-                },
-                cursor: '659a26257a49fb2bf1446bb747bf7dd3',
-                node: {
-                  id: 'UniversalContentItem:895738f70482712adb3ab45a08c30456',
-                  title: 'Should your 20-something live at home?',
-                  isLiked: false,
-                  likedCount: 0,
-                  summary:
-                    'Daughter: “Mom, can I bring some friends from college over for dinner Sunday?',
-                  coverImage: {
-                    name: 'Landscape Image',
-                    sources: [
-                      {
-                        uri:
-                          'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3Db08e4d69-0acf-40ff-920a-4517de086175',
-                        __typename: 'ImageMediaSource',
-                      },
-                    ],
-                    __typename: 'ImageMedia',
-                  },
-                  theme: null,
-                  parentChannel: {
-                    id: 'ContentChannel:4f68015ba18662a7409d1219a4ce013e',
-                    name: 'Articles',
-                    __typename: 'ContentChannel',
-                  },
-                  videos: [],
-                  audios: [],
-                  __typename: 'UniversalContentItem',
-                },
-                __typename: 'SearchResult',
-              },
-              {
-                title: 'Guys Night!',
-                summary: 'A time to connect with other guys who live nearby.',
-                coverImage: {
-                  name: null,
-                  sources: [
-                    {
-                      uri:
-                        'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D58c037fa-cc7f-4d72-9571-a0cc0558e346',
-                      __typename: 'ImageMediaSource',
-                    },
-                  ],
-                  __typename: 'ImageMedia',
-                },
-                cursor: 'c8d2fe738629909c33010432432f21c8',
-                node: {
-                  id: 'UniversalContentItem:296373ecb53580855cadffa0375ebe18',
-                  title: 'Guys Night!',
-                  isLiked: false,
-                  likedCount: 0,
-                  summary: 'A time to connect with other guys who live nearby.',
-                  coverImage: {
-                    name: 'Square Image',
-                    sources: [
-                      {
-                        uri:
-                          'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D58c037fa-cc7f-4d72-9571-a0cc0558e346',
-                        __typename: 'ImageMediaSource',
-                      },
-                    ],
-                    __typename: 'ImageMedia',
-                  },
-                  theme: null,
-                  parentChannel: {
-                    id: 'ContentChannel:965b6e6d7046a885bea4e300b5c0400d',
-                    name: 'News',
-                    __typename: 'ContentChannel',
-                  },
-                  videos: [],
-                  audios: [],
-                  __typename: 'UniversalContentItem',
-                },
-                __typename: 'SearchResult',
-              },
-              {
-                title: '10 ways to refresh your spirit every day',
-                summary:
-                  '1. Be slow What would it look like to live your life at half-speed?',
-                coverImage: null,
-                cursor: 'ba47485fbc61945a38a4147fe7ff3703',
-                node: {
-                  id: 'UniversalContentItem:c495ff18cd998ed516a798b6218907cd',
-                  title: '10 ways to refresh your spirit every day',
-                  isLiked: false,
-                  likedCount: 2,
-                  summary:
-                    '1. Be slow What would it look like to live your life at half-speed?',
-                  coverImage: null,
-                  theme: null,
-                  parentChannel: {
-                    id: 'ContentChannel:4f68015ba18662a7409d1219a4ce013e',
-                    name: 'Articles',
-                    __typename: 'ContentChannel',
-                  },
-                  videos: [],
-                  audios: [],
-                  __typename: 'UniversalContentItem',
-                },
-                __typename: 'SearchResult',
-              },
-              {
-                title: 'Why leadership isn’t all about the title',
-                summary:
-                  'We all like to know that our boss or the authority over us is pleased, and it means even more when they take the time to share that in front of other people.',
-                coverImage: {
-                  name: null,
-                  sources: [
-                    {
-                      uri:
-                        'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3Dd3a96243-2558-4c04-bf41-3aadcf41771f',
-                      __typename: 'ImageMediaSource',
-                    },
-                  ],
-                  __typename: 'ImageMedia',
-                },
-                cursor: '9456eef87e314dcf19f013384a29fd22',
-                node: {
-                  id: 'DevotionalContentItem:4dd74ceca9e09b5276e93cbf53821bd6',
-                  title: 'Why leadership isn’t all about the title',
-                  isLiked: false,
-                  likedCount: 0,
-                  summary:
-                    'We all like to know that our boss or the authority over us is pleased, and it means even more when they take the time to share that in front of other people.',
-                  coverImage: {
-                    name: 'Square Image',
-                    sources: [
-                      {
-                        uri:
-                          'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3Dd3a96243-2558-4c04-bf41-3aadcf41771f',
-                        __typename: 'ImageMediaSource',
-                      },
-                    ],
-                    __typename: 'ImageMedia',
-                  },
-                  theme: null,
-                  parentChannel: {
-                    id: 'ContentChannel:559b23fd0aa90e81b1c023e72e230fa1',
-                    name: 'Devotional',
-                    __typename: 'ContentChannel',
-                  },
-                  videos: [{ sources: [], __typename: 'VideoMedia' }],
-                  audios: [],
-                  __typename: 'DevotionalContentItem',
-                },
-                __typename: 'SearchResult',
-              },
-            ],
-            __typename: 'SearchResultsConnection',
-          },
-        },
-      },
-    };
-
-    const mockSearchResultsCardData = flatMap(
-      mockFeedData.result.data.search.edges,
-      (node) => ({
-        request: {
-          query: GET_CONTENT_CARD,
-          variables: { contentId: node.id },
-        },
-        result: {
-          data: {
-            node,
-          },
-        },
-      })
-    );
-
-    const SearchStack = createStackNavigator({
-      SearchFeed: (props) => <SearchFeed searchText={'Love'} {...props} />, // eslint-disable-line react/display-name
-    });
-    const SearchFeedWithNavigation = createAppContainer(SearchStack);
-    const tree = await renderWithApolloData(
-      <Providers mocks={[mockFeedData, ...mockSearchResultsCardData]}>
-        <SearchFeedWithNavigation searchText={'Love'} />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render an empty state', async () => {
-    const mockEmptyFeedData = {
-      request: {
-        query: GET_SEARCH_RESULTS,
-        variables: { searchText: 'No results here' },
-      },
-      result: {
-        data: {
-          search: {
-            edges: [],
-            __typename: 'SearchResultsConnection',
-          },
-        },
-      },
-    };
-
-    const mockEmptySearchResultsCardData = [
-      {
-        request: {
-          query: GET_CONTENT_CARD,
-          variables: { contentId: 'fake-id' },
-        },
-        result: {
-          data: {},
-        },
-      },
-    ];
-
-    const SearchStack = createStackNavigator({
-      // eslint-disable-next-line react/display-name
-      SearchFeed: (props) => (
-        <SearchFeed searchText={'No results here'} {...props} />
-      ),
-    });
-
-    const SearchFeedWithNavigation = createAppContainer(SearchStack);
-    const tree = await renderWithApolloData(
-      <Providers
-        mocks={[mockEmptyFeedData, ...mockEmptySearchResultsCardData]}
-        cache={null}
-      >
-        <SearchFeedWithNavigation searchText={'No results here'} />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render a loading state', () => {
-    const SearchStack = createStackNavigator({ SearchFeed });
-    const SearchFeedWithNavigation = createAppContainer(SearchStack);
-    const tree = renderer.create(
-      <Providers cache={null}>
-        <SearchFeedWithNavigation searchText={'Love'} />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/tabs/discover/SearchFeed/getSearchResults.js b/apolloschurchapp/src/tabs/discover/SearchFeed/getSearchResults.js
deleted file mode 100644
index 6122da4..0000000
--- a/apolloschurchapp/src/tabs/discover/SearchFeed/getSearchResults.js
+++ /dev/null
@@ -1,30 +0,0 @@
-import gql from 'graphql-tag';
-import { CONTENT_ITEM_FRAGMENT } from 'apolloschurchapp/src/content-single/getContentItem';
-import { LARGE_CARD_FRAGMENT } from 'apolloschurchapp/src/ui/ContentCardConnected';
-
-export default gql`
-  query searchResults($searchText: String!) {
-    search(query: $searchText) {
-      edges {
-        title
-        summary
-        coverImage {
-          name
-          sources {
-            uri
-          }
-        }
-        cursor
-        node {
-          ... on ContentItem {
-            id
-            ...contentItemFragment
-            ...largeCardFragment
-          }
-        }
-      }
-    }
-  }
-  ${CONTENT_ITEM_FRAGMENT}
-  ${LARGE_CARD_FRAGMENT}
-`;
diff --git a/apolloschurchapp/src/tabs/discover/SearchFeed/index.js b/apolloschurchapp/src/tabs/discover/SearchFeed/index.js
deleted file mode 100644
index 63a7e16..0000000
--- a/apolloschurchapp/src/tabs/discover/SearchFeed/index.js
+++ /dev/null
@@ -1,53 +0,0 @@
-import React from 'react';
-import { withProps } from 'recompose';
-import { withNavigation } from 'react-navigation';
-import { Query } from 'react-apollo';
-import { get } from 'lodash';
-import PropTypes from 'prop-types';
-
-import { FeedView } from '@apollosproject/ui-kit';
-
-import ContentCardConnected from '../../../ui/ContentCardConnected';
-
-import GET_SEARCH_RESULTS from './getSearchResults';
-import NoResults from './NoResults';
-
-// this could be refactored into a custom effect hook 💥
-const StyledFeedView = withProps(({ hasContent }) => ({
-  contentContainerStyle: {
-    ...(hasContent ? {} : { flex: 1 }),
-  },
-}))(FeedView);
-
-const handleOnPress = ({ navigation, item }) =>
-  navigation.navigate('ContentSingle', {
-    itemId: item.id,
-    transitionKey: item.transitionKey,
-  });
-
-const SearchFeed = withNavigation(({ navigation, searchText }) => (
-  <Query
-    query={GET_SEARCH_RESULTS}
-    variables={{ searchText }}
-    fetchPolicy="cache-and-network"
-  >
-    {({ loading, error, data, refetch }) => (
-      <StyledFeedView
-        ListItemComponent={ContentCardConnected}
-        content={get(data, 'search.edges', []).map((edge) => edge.node)}
-        ListEmptyComponent={() => <NoResults searchText={searchText} />}
-        hasContent={get(data, 'search.edges', []).length}
-        isLoading={loading}
-        error={error}
-        refetch={refetch}
-        onPressItem={(item) => handleOnPress({ navigation, item })}
-      />
-    )}
-  </Query>
-));
-
-SearchFeed.propTypes = {
-  searchText: PropTypes.string,
-};
-
-export default SearchFeed;
diff --git a/apolloschurchapp/src/tabs/discover/TileContentFeed.js b/apolloschurchapp/src/tabs/discover/TileContentFeed.js
new file mode 100644
index 0000000..973eef1
--- /dev/null
+++ b/apolloschurchapp/src/tabs/discover/TileContentFeed.js
@@ -0,0 +1,68 @@
+import React from 'react';
+import { withNavigation } from 'react-navigation';
+import PropTypes from 'prop-types';
+
+import PaddedView from 'apolloschurchapp/src/ui/PaddedView';
+import { H4 } from 'apolloschurchapp/src/ui/typography';
+import HorizontalTileFeed from 'apolloschurchapp/src/ui/HorizontalTileFeed';
+import styled from 'apolloschurchapp/src/ui/styled';
+import { ButtonLink } from 'apolloschurchapp/src/ui/Button';
+
+import TileImageItem from './TileImageItem';
+
+const RowHeader = styled({
+  flexDirection: 'row',
+  justifyContent: 'space-between',
+  alignItems: 'center',
+  paddingVertical: 0,
+})(PaddedView);
+
+const TileContentFeed = ({ isLoading, id, name, navigation, content = [] }) => (
+  <PaddedView horizontal={false}>
+    <RowHeader>
+      <H4 isLoading={isLoading}>{name}</H4>
+      {!isLoading ? (
+        <ButtonLink
+          onPress={() => {
+            navigation.navigate('ContentFeed', {
+              itemId: id,
+              itemTitle: name,
+            });
+          }}
+        >
+          View All
+        </ButtonLink>
+      ) : null}
+    </RowHeader>
+    <HorizontalTileFeed
+      content={content}
+      renderItem={({ item }) => (
+        <TileImageItem
+          item={item}
+          isLoading={isLoading}
+          navigation={navigation}
+        />
+      )}
+      loadingStateObject={{
+        id: 'fake_id',
+        title: '',
+        coverImage: [],
+      }}
+      isLoading={isLoading}
+    />
+  </PaddedView>
+);
+
+TileContentFeed.propTypes = {
+  navigation: PropTypes.shape({
+    navigate: PropTypes.func,
+  }),
+  isLoading: PropTypes.bool,
+  id: PropTypes.string,
+  name: PropTypes.string,
+  content: PropTypes.arrayOf(
+    PropTypes.any // this component doesn't care about the shape of `node`, just that it exists
+  ),
+};
+
+export default withNavigation(TileContentFeed);
diff --git a/apolloschurchapp/src/tabs/discover/TileImageItem.js b/apolloschurchapp/src/tabs/discover/TileImageItem.js
index da8c732..f6e6f77 100644
--- a/apolloschurchapp/src/tabs/discover/TileImageItem.js
+++ b/apolloschurchapp/src/tabs/discover/TileImageItem.js
@@ -2,7 +2,8 @@ import React from 'react';
 import { View } from 'react-native';
 import PropTypes from 'prop-types';
 
-import { TileImage, styled } from '@apollosproject/ui-kit';
+import TileImage from 'apolloschurchapp/src/ui/TileImage';
+import styled from 'apolloschurchapp/src/ui/styled';
 
 const Container = styled(({ theme }) => ({
   flex: 1,
diff --git a/apolloschurchapp/src/tabs/discover/discover.tests.js b/apolloschurchapp/src/tabs/discover/discover.tests.js
index 93fd091..96f2fde 100644
--- a/apolloschurchapp/src/tabs/discover/discover.tests.js
+++ b/apolloschurchapp/src/tabs/discover/discover.tests.js
@@ -1,203 +1,52 @@
 import React from 'react';
-import { flatMap } from 'lodash';
-import { createStackNavigator, createAppContainer } from 'react-navigation';
+import renderer from 'react-test-renderer';
+import { createStackNavigator } from 'react-navigation';
 
 import Providers from 'apolloschurchapp/src/Providers';
 
-import { renderWithApolloData } from '../../utils/testUtils';
-import GET_CONTENT_CARD from '../../ui/ContentCardConnected/query';
-
 import Discover from './Discover';
-import GET_CONTENT_CHANNELS from './DiscoverFeed/getContentChannels';
+import getContentChannels from './getContentChannels';
 
-describe('The Discover tab component', () => {
-  it('Should retrieve the Content Channel Feeds', async () => {
-    const mockFeedData = {
+describe('Test the Discover Component Query', () => {
+  it('Should retrieve the Content Channel Feeds', () => {
+    const mock = {
       request: {
-        query: GET_CONTENT_CHANNELS,
+        query: getContentChannels,
       },
       result: {
         data: {
           contentChannels: [
-            {
-              id: 'ContentChannel:965b6e6d7046a885bea4e300b5c0400d',
-              name: 'News',
-              childContentItemsConnection: {
-                edges: [
-                  {
-                    node: {
-                      id:
-                        'UniversalContentItem:00bb7b364911281c97fc50f2a0d17b11',
-                      title: 'Anderson Family Cookout!',
-                      isLiked: false,
-                      likedCount: 0,
-                      summary: 'Come join us!',
-                      coverImage: {
-                        name: 'Landscape Image',
-                        sources: [
-                          {
-                            uri:
-                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D62e0e2ba-2dac-468b-a852-7e8cf2533efc',
-                            __typename: 'ImageMediaSource',
-                          },
-                        ],
-                        __typename: 'ImageMedia',
-                      },
-                      theme: null,
-                      parentChannel: {
-                        id: 'ContentChannel:965b6e6d7046a885bea4e300b5c0400d',
-                        name: 'News',
-                        __typename: 'ContentChannel',
-                      },
-                      videos: [],
-                      audios: [],
-                      __typename: 'UniversalContentItem',
-                    },
-                    __typename: 'ContentItemsConnectionEdge',
-                  },
-                  {
-                    node: {
-                      id:
-                        'UniversalContentItem:7db601b238aa4345a818654300f83dd2',
-                      title: 'Robert Madu is Coming to Christ Fellowship',
-                      isLiked: false,
-                      likedCount: 5,
-                      summary:
-                        "Don't miss a powerful message from preacher and speaker, Robert Madu.",
-                      coverImage: {
-                        name: 'Square Image',
-                        sources: [
-                          {
-                            uri:
-                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3Df3ba0936-8aab-46c1-8245-0e5aef637ae3',
-                            __typename: 'ImageMediaSource',
-                          },
-                        ],
-                        __typename: 'ImageMedia',
-                      },
-                      theme: null,
-                      parentChannel: {
-                        id: 'ContentChannel:965b6e6d7046a885bea4e300b5c0400d',
-                        name: 'News',
-                        __typename: 'ContentChannel',
-                      },
-                      videos: [],
-                      audios: [],
-                      __typename: 'UniversalContentItem',
-                    },
-                    __typename: 'ContentItemsConnectionEdge',
-                  },
-                  {
-                    node: {
-                      id:
-                        'UniversalContentItem:296373ecb53580855cadffa0375ebe18',
-                      title: 'Guys Night!',
-                      isLiked: false,
-                      likedCount: 0,
-                      summary:
-                        'A time to connect with other guys who live nearby.',
-                      coverImage: {
-                        name: 'Square Image',
-                        sources: [
-                          {
-                            uri:
-                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D58c037fa-cc7f-4d72-9571-a0cc0558e346',
-                            __typename: 'ImageMediaSource',
-                          },
-                        ],
-                        __typename: 'ImageMedia',
-                      },
-                      theme: null,
-                      parentChannel: {
-                        id: 'ContentChannel:965b6e6d7046a885bea4e300b5c0400d',
-                        name: 'News',
-                        __typename: 'ContentChannel',
-                      },
-                      videos: [],
-                      audios: [],
-                      __typename: 'UniversalContentItem',
-                    },
-                    __typename: 'ContentItemsConnectionEdge',
-                  },
-                ],
-                __typename: 'ContentItemsConnection',
-              },
-              __typename: 'ContentChannel',
-            },
             {
               id: 'ContentChannel:4f68015ba18662a7409d1219a4ce013e',
-              name: 'Articles',
+              name: 'Editorial',
               childContentItemsConnection: {
                 edges: [
                   {
                     node: {
                       id:
-                        'UniversalContentItem:604a4a763a5fc0edfe386684ca6b3515',
-                      title: 'Test Article',
-                      isLiked: false,
-                      likedCount: 0,
-                      summary: 'Test article...',
+                        'UniversalContentItem:d57994350b9d213866b24dea3a97433d',
+                      title: 'Mea Animal Aperiam Ornatus Eu',
                       coverImage: null,
-                      theme: null,
-                      parentChannel: {
-                        id: 'ContentChannel:4f68015ba18662a7409d1219a4ce013e',
-                        name: 'Articles',
-                        __typename: 'ContentChannel',
-                      },
-                      videos: [],
-                      audios: [],
-                      __typename: 'UniversalContentItem',
                     },
-                    __typename: 'ContentItemsConnectionEdge',
                   },
                   {
                     node: {
                       id:
-                        'UniversalContentItem:c495ff18cd998ed516a798b6218907cd',
-                      title: '10 ways to refresh your spirit every day',
-                      isLiked: false,
-                      likedCount: 2,
-                      summary:
-                        '1. Be slow What would it look like to live your life at half-speed?',
+                        'UniversalContentItem:b36e55d803443431e96bb4b5068147ec',
+                      title: 'Probo Senserit Id Mea, Ut Sed Malis Postea,',
                       coverImage: null,
-                      theme: null,
-                      parentChannel: {
-                        id: 'ContentChannel:4f68015ba18662a7409d1219a4ce013e',
-                        name: 'Articles',
-                        __typename: 'ContentChannel',
-                      },
-                      videos: [],
-                      audios: [],
-                      __typename: 'UniversalContentItem',
                     },
-                    __typename: 'ContentItemsConnectionEdge',
                   },
                   {
                     node: {
                       id:
-                        'UniversalContentItem:95ff79f60a028b1b506aaeedf8b4c6ae',
-                      title: 'Live for Freedom Toolkit',
-                      isLiked: false,
-                      likedCount: 1,
-                      summary:
-                        "Get in the Groove\nCelebrate your freedom in Christ — in the car, shower, cubicle or wherever you go — with this playlist of NewSpring Worship's favorite songs of the summer.",
+                        'UniversalContentItem:57c465ee3cd69524d729569b338607de',
+                      title: 'Ea Harum Albucius Mel',
                       coverImage: null,
-                      theme: null,
-                      parentChannel: {
-                        id: 'ContentChannel:4f68015ba18662a7409d1219a4ce013e',
-                        name: 'Articles',
-                        __typename: 'ContentChannel',
-                      },
-                      videos: [],
-                      audios: [],
-                      __typename: 'UniversalContentItem',
                     },
-                    __typename: 'ContentItemsConnectionEdge',
                   },
                 ],
-                __typename: 'ContentItemsConnection',
               },
-              __typename: 'ContentChannel',
             },
             {
               id: 'ContentChannel:a0f64573eabf00a607bec911794d50fb',
@@ -207,110 +56,50 @@ describe('The Discover tab component', () => {
                   {
                     node: {
                       id:
-                        'ContentSeriesContentItem:6d8dc8e4bad017f815ae0cac8bf692bb',
-                      title: 'The New Weekend Experience',
-                      isLiked: false,
-                      likedCount: 1,
-                      summary:
-                        'Have you come into relationship with Jesus Christ?',
+                        'UniversalContentItem:1c627c20911791321f819125a65c3c9d',
+                      title: 'Money Wise',
                       coverImage: {
-                        name: 'Series Image',
                         sources: [
                           {
                             uri:
-                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D98be229f-dfed-4344-86ab-0d11666fc781',
-                            __typename: 'ImageMediaSource',
+                              'https://apollosrock.newspring.cc/GetImage.ashx?guid=33e4c568-a456-4250-a8dc-6a4ceb548455',
                           },
                         ],
-                        __typename: 'ImageMedia',
-                      },
-                      theme: null,
-                      parentChannel: {
-                        id: 'ContentChannel:a0f64573eabf00a607bec911794d50fb',
-                        name: 'Sermon Series',
-                        __typename: 'ContentChannel',
                       },
-                      videos: [
-                        { sources: [], __typename: 'VideoMedia' },
-                        { sources: [], __typename: 'VideoMedia' },
-                      ],
-                      audios: [],
-                      __typename: 'ContentSeriesContentItem',
                     },
-                    __typename: 'ContentItemsConnectionEdge',
                   },
                   {
                     node: {
                       id:
-                        'ContentSeriesContentItem:08449058d438ebeaffe9adb7a8e633cc',
-                      title: 'Gathering',
-                      isLiked: false,
-                      likedCount: 0,
-                      summary: '',
+                        'UniversalContentItem:66a4d75b02b447556e4e3806430a9946',
+                      title: 'Momentum',
                       coverImage: {
-                        name: 'Square Image',
                         sources: [
                           {
                             uri:
-                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D50f4e3e3-2842-4991-9f64-8fc6fbb3067c',
-                            __typename: 'ImageMediaSource',
+                              'https://apollosrock.newspring.cc/GetImage.ashx?guid=F3F2E438-2AE8-4EF4-980B-709463691296',
                           },
                         ],
-                        __typename: 'ImageMedia',
-                      },
-                      theme: null,
-                      parentChannel: {
-                        id: 'ContentChannel:a0f64573eabf00a607bec911794d50fb',
-                        name: 'Sermon Series',
-                        __typename: 'ContentChannel',
                       },
-                      videos: [
-                        { sources: [], __typename: 'VideoMedia' },
-                        { sources: [], __typename: 'VideoMedia' },
-                      ],
-                      audios: [],
-                      __typename: 'ContentSeriesContentItem',
                     },
-                    __typename: 'ContentItemsConnectionEdge',
                   },
                   {
                     node: {
                       id:
-                        'ContentSeriesContentItem:b74c2d295a0cf1340232ffa8be856c00',
-                      title: 'Gauntlet 2018',
-                      isLiked: false,
-                      likedCount: 0,
-                      summary: '',
+                        'UniversalContentItem:22c861a5d54d09634018f7eb132c452e',
+                      title: 'Miracles in Luke',
                       coverImage: {
-                        name: 'Square Image',
                         sources: [
                           {
                             uri:
-                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D3e3e38d2-d804-45db-b45a-3b7a82c415d1',
-                            __typename: 'ImageMediaSource',
+                              'https://apollosrock.newspring.cc/GetImage.ashx?guid=EDFDBD47-BBE8-4BE9-8D3F-CC0059BD4CCC',
                           },
                         ],
-                        __typename: 'ImageMedia',
                       },
-                      theme: null,
-                      parentChannel: {
-                        id: 'ContentChannel:a0f64573eabf00a607bec911794d50fb',
-                        name: 'Sermon Series',
-                        __typename: 'ContentChannel',
-                      },
-                      videos: [
-                        { sources: [], __typename: 'VideoMedia' },
-                        { sources: [], __typename: 'VideoMedia' },
-                      ],
-                      audios: [],
-                      __typename: 'ContentSeriesContentItem',
                     },
-                    __typename: 'ContentItemsConnectionEdge',
                   },
                 ],
-                __typename: 'ContentItemsConnection',
               },
-              __typename: 'ContentChannel',
             },
             {
               id: 'ContentChannel:7fba1b1ee253e0fd5f0795b4b8b1175e',
@@ -320,232 +109,59 @@ describe('The Discover tab component', () => {
                   {
                     node: {
                       id:
-                        'ContentSeriesContentItem:b085ec27d53006e9e6b95f3ac57da581',
-                      title: 'Jeremiah: A 33-Day Devotional',
-                      isLiked: true,
-                      likedCount: 6,
-                      summary: 'Have you ever had to deliver difficult news?',
+                        'UniversalContentItem:678b4a38968fc6004dd8b23e586c923e',
+                      title: 'Psalms: A 28-Day Devotional',
                       coverImage: {
-                        name: 'Square Image',
                         sources: [
                           {
                             uri:
-                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D31af1a61-360c-4b1e-8e62-45517c06a9a2',
-                            __typename: 'ImageMediaSource',
+                              'https://apollosrock.newspring.cc/GetImage.ashx?guid=ed857076-2623-4fdc-8476-50b3a60e0b68',
                           },
                         ],
-                        __typename: 'ImageMedia',
-                      },
-                      theme: null,
-                      parentChannel: {
-                        id: 'ContentChannel:7fba1b1ee253e0fd5f0795b4b8b1175e',
-                        name: 'Devotion Series',
-                        __typename: 'ContentChannel',
                       },
-                      videos: [{ sources: [], __typename: 'VideoMedia' }],
-                      audios: [],
-                      __typename: 'ContentSeriesContentItem',
                     },
-                    __typename: 'ContentItemsConnectionEdge',
                   },
                   {
                     node: {
                       id:
-                        'ContentSeriesContentItem:71bfdac0b98ea1b72a63ff4ea64e3c5a',
-                      title: 'How To Be A Better Leader: A 7-Day Devotional',
-                      isLiked: false,
-                      likedCount: 0,
-                      summary: '',
+                        'UniversalContentItem:0f361c619b7e5dd511da181069498250',
+                      title: '2 Samuel: A 5-Week Devotional',
                       coverImage: {
-                        name: 'Square Image',
                         sources: [
                           {
                             uri:
-                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3Dd3a96243-2558-4c04-bf41-3aadcf41771f',
-                            __typename: 'ImageMediaSource',
+                              'https://apollosrock.newspring.cc/GetImage.ashx?guid=aa68b674-9cf4-4f8a-8702-9564a4a9fa7b',
                           },
                         ],
-                        __typename: 'ImageMedia',
                       },
-                      theme: null,
-                      parentChannel: {
-                        id: 'ContentChannel:7fba1b1ee253e0fd5f0795b4b8b1175e',
-                        name: 'Devotion Series',
-                        __typename: 'ContentChannel',
-                      },
-                      videos: [{ sources: [], __typename: 'VideoMedia' }],
-                      audios: [],
-                      __typename: 'ContentSeriesContentItem',
                     },
-                    __typename: 'ContentItemsConnectionEdge',
                   },
                   {
                     node: {
                       id:
-                        'ContentSeriesContentItem:44fd3b82373ea8f197bd1e1e77c4bed0',
-                      title: '2 Thessalonians: A 5-Day Devotional',
-                      isLiked: false,
-                      likedCount: 0,
-                      summary: '',
+                        'UniversalContentItem:bc1002007d482c412962ad6b1f24901a',
+                      title: '#MomLife: An 8-Day Devotional',
                       coverImage: {
-                        name: 'Square Image',
                         sources: [
                           {
                             uri:
-                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D70b0b57c-5a15-4f46-8e6a-c759231685bf',
-                            __typename: 'ImageMediaSource',
+                              'https://apollosrock.newspring.cc/GetImage.ashx?guid=65dfddf1-c146-4599-bdb7-a8f53bf8fed2',
                           },
                         ],
-                        __typename: 'ImageMedia',
-                      },
-                      theme: null,
-                      parentChannel: {
-                        id: 'ContentChannel:7fba1b1ee253e0fd5f0795b4b8b1175e',
-                        name: 'Devotion Series',
-                        __typename: 'ContentChannel',
                       },
-                      videos: [{ sources: [], __typename: 'VideoMedia' }],
-                      audios: [],
-                      __typename: 'ContentSeriesContentItem',
                     },
-                    __typename: 'ContentItemsConnectionEdge',
                   },
                 ],
-                __typename: 'ContentItemsConnection',
               },
-              __typename: 'ContentChannel',
-            },
-            {
-              id: 'ContentChannel:be7381e9c2fea9f41504cd98d4b14321',
-              name: 'Stories',
-              childContentItemsConnection: {
-                edges: [
-                  {
-                    node: {
-                      id:
-                        'UniversalContentItem:cf8fa657f23af88a2d63f7e4a2237db8',
-                      title:
-                        'The surprising journey that changed me and my dad',
-                      isLiked: false,
-                      likedCount: 6,
-                      summary:
-                        'My father, Darwin, has always been involved in my life.',
-                      coverImage: {
-                        name: 'Square Image',
-                        sources: [
-                          {
-                            uri:
-                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D2a65e561-cd6e-4590-bb37-029a21c554e8',
-                            __typename: 'ImageMediaSource',
-                          },
-                        ],
-                        __typename: 'ImageMedia',
-                      },
-                      theme: null,
-                      parentChannel: {
-                        id: 'ContentChannel:be7381e9c2fea9f41504cd98d4b14321',
-                        name: 'Stories',
-                        __typename: 'ContentChannel',
-                      },
-                      videos: [],
-                      audios: [],
-                      __typename: 'UniversalContentItem',
-                    },
-                    __typename: 'ContentItemsConnectionEdge',
-                  },
-                  {
-                    node: {
-                      id:
-                        'UniversalContentItem:2e17f5a66407d114ab9f2392b03ebccd',
-                      title: 'When I lost hope, my church family had my back',
-                      isLiked: true,
-                      likedCount: 5,
-                      summary:
-                        'Brian Kalwat was just trying to knock something off his honey-do list.',
-                      coverImage: {
-                        name: 'Square Image',
-                        sources: [
-                          {
-                            uri:
-                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D0305285f-1155-4405-ba38-a61b9c8558be',
-                            __typename: 'ImageMediaSource',
-                          },
-                        ],
-                        __typename: 'ImageMedia',
-                      },
-                      theme: null,
-                      parentChannel: {
-                        id: 'ContentChannel:be7381e9c2fea9f41504cd98d4b14321',
-                        name: 'Stories',
-                        __typename: 'ContentChannel',
-                      },
-                      videos: [],
-                      audios: [],
-                      __typename: 'UniversalContentItem',
-                    },
-                    __typename: 'ContentItemsConnectionEdge',
-                  },
-                  {
-                    node: {
-                      id:
-                        'UniversalContentItem:ae8ec75906ba7437c49ad2534b5024db',
-                      title: 'A Place to Worship Free of Fear',
-                      isLiked: false,
-                      likedCount: 1,
-                      summary:
-                        'Cornelius &amp; Stephanie Mack, proud parents of a Special Friends adult, share about their experience\nOur son Cameron began attending Willow Creek Special Friends in 2015.',
-                      coverImage: {
-                        name: 'Portrait Image',
-                        sources: [
-                          {
-                            uri:
-                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3Da65bc45d-f961-4b7e-a899-63eb1f9b8da9',
-                            __typename: 'ImageMediaSource',
-                          },
-                        ],
-                        __typename: 'ImageMedia',
-                      },
-                      theme: null,
-                      parentChannel: {
-                        id: 'ContentChannel:be7381e9c2fea9f41504cd98d4b14321',
-                        name: 'Stories',
-                        __typename: 'ContentChannel',
-                      },
-                      videos: [],
-                      audios: [],
-                      __typename: 'UniversalContentItem',
-                    },
-                    __typename: 'ContentItemsConnectionEdge',
-                  },
-                ],
-                __typename: 'ContentItemsConnection',
-              },
-              __typename: 'ContentChannel',
             },
           ],
         },
       },
     };
-    const mockChannelCardData = flatMap(
-      mockFeedData.result.data.contentChannels,
-      (contentChannel) =>
-        contentChannel.childContentItemsConnection.edges.map((edge) => ({
-          request: {
-            query: GET_CONTENT_CARD,
-            variables: { contentId: edge.node.id },
-          },
-          result: {
-            data: {
-              node: edge.node,
-            },
-          },
-        }))
-    );
 
-    const DiscoverStack = createStackNavigator({ Discover });
-    const DiscoverWithNavigation = createAppContainer(DiscoverStack);
-    const tree = await renderWithApolloData(
-      <Providers mocks={[mockFeedData, ...mockChannelCardData]}>
+    const DiscoverWithNavigation = createStackNavigator({ Discover });
+    const tree = renderer.create(
+      <Providers mocks={[mock]}>
         <DiscoverWithNavigation />
       </Providers>
     );
diff --git a/apolloschurchapp/src/tabs/discover/getContentChannels.js b/apolloschurchapp/src/tabs/discover/getContentChannels.js
new file mode 100644
index 0000000..d39573a
--- /dev/null
+++ b/apolloschurchapp/src/tabs/discover/getContentChannels.js
@@ -0,0 +1,32 @@
+import gql from 'graphql-tag';
+
+import { contentItemFragment } from 'apolloschurchapp/src/content-single/getContentItem';
+
+export default gql`
+  query getContentChannels {
+    contentChannels {
+      id
+      name
+      childContentItemsConnection(first: 3) {
+        edges {
+          node {
+            id
+            ...contentItemFragment
+            title
+            coverImage {
+              sources {
+                uri
+              }
+            }
+            sharing {
+              title
+              message
+              url
+            }
+          }
+        }
+      }
+    }
+  }
+  ${contentItemFragment}
+`;
diff --git a/apolloschurchapp/src/tabs/discover/index.js b/apolloschurchapp/src/tabs/discover/index.js
index 5e8c752..bcfae50 100644
--- a/apolloschurchapp/src/tabs/discover/index.js
+++ b/apolloschurchapp/src/tabs/discover/index.js
@@ -1,5 +1,4 @@
 import { createStackNavigator } from 'react-navigation';
-import { withTheme } from '@apollosproject/ui-kit';
 
 import ContentFeed from 'apolloschurchapp/src/content-feed';
 
@@ -7,23 +6,18 @@ import tabBarIcon from '../tabBarIcon';
 
 import Discover from './Discover';
 
-const DiscoverNavigator = createStackNavigator(
+export const DiscoverNavigator = createStackNavigator(
   {
     Discover,
     ContentFeed,
   },
   {
     initialRouteName: 'Discover',
-    defaultNavigationOptions: ({ screenProps }) => ({
-      headerTintColor: screenProps.headerTintColor,
-    }),
-    navigationOptions: { tabBarIcon: tabBarIcon('sections') },
   }
 );
 
-const EnhancedDiscover = withTheme(({ theme, ...props }) => ({
-  ...props,
-  screenProps: { headerTintColor: theme.colors.text.secondary },
-}))(DiscoverNavigator);
+DiscoverNavigator.navigationOptions = {
+  tabBarIcon: tabBarIcon('sections'),
+};
 
-export default EnhancedDiscover;
+export default DiscoverNavigator;
diff --git a/apolloschurchapp/src/tabs/home/Features/getFeedFeatures.js b/apolloschurchapp/src/tabs/home/Features/getFeedFeatures.js
deleted file mode 100644
index caffc10..0000000
--- a/apolloschurchapp/src/tabs/home/Features/getFeedFeatures.js
+++ /dev/null
@@ -1,27 +0,0 @@
-import gql from 'graphql-tag';
-
-export default gql`
-  query getFeedFeatures {
-    userFeedFeatures {
-      ... on ActionListFeature {
-        id
-        title
-        subtitle
-        actions {
-          id
-          title
-          subtitle
-          action
-          image {
-            sources {
-              uri
-            }
-          }
-          relatedNode {
-            id
-          }
-        }
-      }
-    }
-  }
-`;
diff --git a/apolloschurchapp/src/tabs/home/Features/index.js b/apolloschurchapp/src/tabs/home/Features/index.js
deleted file mode 100644
index 80aebcb..0000000
--- a/apolloschurchapp/src/tabs/home/Features/index.js
+++ /dev/null
@@ -1,135 +0,0 @@
-import React, { memo } from 'react';
-import { Query } from 'react-apollo';
-import { get } from 'lodash';
-// import PropTypes from 'prop-types';
-
-import { styled, ActionListCard, H3, H6 } from '@apollosproject/ui-kit';
-
-import GET_FEED_FEATURES from './getFeedFeatures';
-
-const StyledH6 = styled(({ theme }) => ({
-  color: theme.colors.text.tertiary,
-}))(H6);
-
-// const handleOnPressActionItem = (id) =>
-//   this.props.navigation.navigate('ContentSingle', {
-//     itemId: id,
-//     transitionKey: 2,
-//   });
-
-const Features = memo(({ navigation }) => (
-  <Query query={GET_FEED_FEATURES} fetchPolicy="cache-and-network">
-    {({ data: features, loading }) =>
-      loading ? (
-        <ActionListCard
-          isLoading
-          header={
-            <>
-              <StyledH6 isLoading />
-              <H3 isLoading />
-            </>
-          }
-          actions={[
-            {
-              id: 'fakeId1',
-              title: '',
-              subtitle: '',
-              parentChannel: {
-                id: '',
-                name: '',
-              },
-              coverImage: {
-                sources: {
-                  uri: '',
-                },
-              },
-            },
-            {
-              id: 'fakeId2',
-              title: '',
-              subtitle: '',
-              parentChannel: {
-                id: '',
-                name: '',
-              },
-              coverImage: {
-                sources: {
-                  uri: '',
-                },
-              },
-            },
-            {
-              id: 'fakeId3',
-              title: '',
-              subtitle: '',
-              parentChannel: {
-                id: '',
-                name: '',
-              },
-              coverImage: {
-                sources: {
-                  uri: '',
-                },
-              },
-            },
-            {
-              id: 'fakeId4',
-              title: '',
-              subtitle: '',
-              parentChannel: {
-                id: '',
-                name: '',
-              },
-              coverImage: {
-                sources: {
-                  uri: '',
-                },
-              },
-            },
-          ]}
-        />
-      ) : (
-        get(features, 'userFeedFeatures', []).map(
-          ({ title, subtitle, actions, id }) =>
-            actions.length ? (
-              <ActionListCard
-                isLoading={loading}
-                key={id}
-                header={
-                  <>
-                    <StyledH6 numberOfLines={1}>{title}</StyledH6>
-                    <H3 numberOfLines={3}>{subtitle}</H3>
-                  </>
-                }
-                actions={actions}
-                onPressActionItem={({ action, relatedNode }) => {
-                  if (action === 'READ_CONTENT') {
-                    navigation.navigate('ContentSingle', {
-                      itemId: relatedNode.id,
-                      transitionKey: 2,
-                    });
-                  }
-                  if (action === 'READ_EVENT') {
-                    navigation.navigate('Event', {
-                      eventId: relatedNode.id,
-                      transitionKey: 2,
-                    });
-                  }
-                }}
-                onPressCardActionButton={() =>
-                  navigation.navigate('ContentFeed', {
-                    itemId: id,
-                    itemTitle: title,
-                  })
-                }
-              />
-            ) : null
-        )
-      )
-    }
-  </Query>
-));
-
-Features.displayName = 'Features';
-
-export default Features;
diff --git a/apolloschurchapp/src/tabs/home/Home.js b/apolloschurchapp/src/tabs/home/Home.js
index 118f612..6a3bdcf 100644
--- a/apolloschurchapp/src/tabs/home/Home.js
+++ b/apolloschurchapp/src/tabs/home/Home.js
@@ -5,22 +5,13 @@ import SafeAreaView from 'react-native-safe-area-view';
 import { get } from 'lodash';
 import PropTypes from 'prop-types';
 
-import {
-  styled,
-  FeedView,
-  BackgroundView,
-  TouchableScale,
-  FeaturedCard,
-} from '@apollosproject/ui-kit';
-
-import fetchMoreResolver from '../../utils/fetchMoreResolver';
-import ContentCardConnected from '../../ui/ContentCardConnected';
+import styled from 'apolloschurchapp/src/ui/styled';
+import FeedView from 'apolloschurchapp/src/ui/FeedView';
+import BackgroundView from 'apolloschurchapp/src/ui/BackgroundView';
 
 import { LiveButton } from '../../live';
 
-import Features from './Features';
-import GET_USER_FEED from './getUserFeed';
-import GET_CAMPAIGN_CONTENT_ITEM from './getCampaignContentItem';
+import getUserFeed from './getUserFeed';
 
 const LogoTitle = styled(({ theme }) => ({
   height: theme.sizing.baseUnit,
@@ -52,26 +43,12 @@ class Home extends PureComponent {
     return (
       <BackgroundView>
         <SafeAreaView>
-          <Query
-            query={GET_USER_FEED}
-            variables={{
-              first: 10,
-              after: null,
-            }}
-            fetchPolicy="cache-and-network"
-          >
-            {({ loading, error, data, refetch, fetchMore, variables }) => (
+          <Query query={getUserFeed} fetchPolicy="cache-and-network">
+            {({ loading, error, data, refetch }) => (
               <FeedView
-                ListItemComponent={ContentCardConnected}
                 content={get(data, 'userFeed.edges', []).map(
                   (edge) => edge.node
                 )}
-                fetchMore={fetchMoreResolver({
-                  collectionName: 'userFeed',
-                  fetchMore,
-                  variables,
-                  data,
-                })}
                 isLoading={loading}
                 error={error}
                 refetch={refetch}
@@ -79,39 +56,6 @@ class Home extends PureComponent {
                   <>
                     <LogoTitle source={require('./wordmark.png')} />
                     <LiveButton />
-                    <Query
-                      query={GET_CAMPAIGN_CONTENT_ITEM}
-                      fetchPolicy="cache-and-network"
-                    >
-                      {({ data: featuredData, loading: isFeaturedLoading }) => {
-                        const featuredContent = get(
-                          featuredData,
-                          'campaigns.edges',
-                          []
-                        ).map((edge) => edge.node);
-
-                        const featuredItem = get(
-                          featuredContent[0],
-                          'childContentItemsConnection.edges[0].node',
-                          {}
-                        );
-
-                        return (
-                          <TouchableScale
-                            onPress={() =>
-                              this.handleOnPress({ id: featuredItem.id })
-                            }
-                          >
-                            <ContentCardConnected
-                              Component={FeaturedCard}
-                              contentId={featuredItem.id}
-                              isLoading={isFeaturedLoading}
-                            />
-                          </TouchableScale>
-                        );
-                      }}
-                    </Query>
-                    <Features navigation={this.props.navigation} />
                   </>
                 }
                 onPressItem={this.handleOnPress}
diff --git a/apolloschurchapp/src/tabs/home/getCampaignContentItem.js b/apolloschurchapp/src/tabs/home/getCampaignContentItem.js
deleted file mode 100644
index 345463c..0000000
--- a/apolloschurchapp/src/tabs/home/getCampaignContentItem.js
+++ /dev/null
@@ -1,25 +0,0 @@
-import gql from 'graphql-tag';
-
-import { CONTENT_ITEM_FRAGMENT } from 'apolloschurchapp/src/content-single/getContentItem';
-import { LARGE_CARD_FRAGMENT } from 'apolloschurchapp/src/ui/ContentCardConnected';
-
-export default gql`
-  query campaigns {
-    campaigns {
-      edges {
-        node {
-          childContentItemsConnection {
-            edges {
-              node {
-                ...largeCardFragment
-                ...contentItemFragment
-              }
-            }
-          }
-        }
-      }
-    }
-  }
-  ${CONTENT_ITEM_FRAGMENT}
-  ${LARGE_CARD_FRAGMENT}
-`;
diff --git a/apolloschurchapp/src/tabs/home/getFeedFeatures.js b/apolloschurchapp/src/tabs/home/getFeedFeatures.js
deleted file mode 100644
index caffc10..0000000
--- a/apolloschurchapp/src/tabs/home/getFeedFeatures.js
+++ /dev/null
@@ -1,27 +0,0 @@
-import gql from 'graphql-tag';
-
-export default gql`
-  query getFeedFeatures {
-    userFeedFeatures {
-      ... on ActionListFeature {
-        id
-        title
-        subtitle
-        actions {
-          id
-          title
-          subtitle
-          action
-          image {
-            sources {
-              uri
-            }
-          }
-          relatedNode {
-            id
-          }
-        }
-      }
-    }
-  }
-`;
diff --git a/apolloschurchapp/src/tabs/home/getUserFeed.js b/apolloschurchapp/src/tabs/home/getUserFeed.js
index e120403..34ed66c 100644
--- a/apolloschurchapp/src/tabs/home/getUserFeed.js
+++ b/apolloschurchapp/src/tabs/home/getUserFeed.js
@@ -1,22 +1,40 @@
 import gql from 'graphql-tag';
 
-import { CONTENT_ITEM_FRAGMENT } from 'apolloschurchapp/src/content-single/getContentItem';
-import { LARGE_CARD_FRAGMENT } from 'apolloschurchapp/src/ui/ContentCardConnected';
+import { contentItemFragment } from 'apolloschurchapp/src/content-single/getContentItem';
 
 export default gql`
-  query getUserFeed($first: Int, $after: String) {
-    userFeed(first: $first, after: $after) {
-      pageInfo {
-        endCursor
-      }
+  query getUserFeed {
+    userFeed {
       edges {
         node {
-          ...largeCardFragment
           ...contentItemFragment
+          __typename
+          id
+          coverImage {
+            name
+            sources {
+              uri
+            }
+          }
+          parentChannel {
+            id
+            name
+            iconName
+          }
+          theme {
+            type
+            colors {
+              primary
+              secondary
+              screen
+              paper
+            }
+          }
+          isLiked
+          title
         }
       }
     }
   }
-  ${CONTENT_ITEM_FRAGMENT}
-  ${LARGE_CARD_FRAGMENT}
+  ${contentItemFragment}
 `;
diff --git a/apolloschurchapp/src/tabs/home/home.tests.js b/apolloschurchapp/src/tabs/home/home.tests.js
index 96a5008..e9f98c5 100644
--- a/apolloschurchapp/src/tabs/home/home.tests.js
+++ b/apolloschurchapp/src/tabs/home/home.tests.js
@@ -4,13 +4,13 @@ import renderer from 'react-test-renderer';
 import Providers from 'apolloschurchapp/src/Providers';
 
 import Home from './Home';
-import GET_USER_FEED from './getUserFeed';
+import getUserFeed from './getUserFeed';
 
 describe('User Home Feed Query', () => {
   it('should return correct query results', () => {
     const mock = {
       request: {
-        query: GET_USER_FEED,
+        query: getUserFeed,
       },
       result: {
         data: {
diff --git a/apolloschurchapp/src/tabs/index.js b/apolloschurchapp/src/tabs/index.js
index ff11787..0b9ea17 100644
--- a/apolloschurchapp/src/tabs/index.js
+++ b/apolloschurchapp/src/tabs/index.js
@@ -16,8 +16,11 @@ const TabNavigator = createBottomTabNavigator(
     tabBarComponent: TabBar,
     lazy: true,
     removeClippedSubviews: true,
-    navigationOptions: { header: null },
   }
 );
 
+TabNavigator.navigationOptions = {
+  header: null,
+};
+
 export default TabNavigator;
diff --git a/apolloschurchapp/src/tabs/tabBar.js b/apolloschurchapp/src/tabs/tabBar.js
index 6b2b849..f93f00e 100644
--- a/apolloschurchapp/src/tabs/tabBar.js
+++ b/apolloschurchapp/src/tabs/tabBar.js
@@ -1,21 +1,55 @@
+import React from 'react';
 import { compose } from 'recompose';
-import { BottomTabBar } from 'react-navigation';
+import { Platform, View } from 'react-native';
+import { BottomTabBar } from 'react-navigation-tabs';
+import { Query } from 'react-apollo';
+import gql from 'graphql-tag';
+import { get } from 'lodash';
 
-import { withTabBarMediaSpacer } from '@apollosproject/ui-media-player';
-import { styled, withTheme } from '@apollosproject/ui-kit';
+import { MediaPlayerSpacer } from 'apolloschurchapp/src/ui/MediaPlayer';
+import styled from 'apolloschurchapp/src/ui/styled';
+import { withTheme } from 'apolloschurchapp/src/ui/theme';
+
+const mediaPlayerIsVisibleQuery = gql`
+  query {
+    mediaPlayer @client {
+      isVisible
+    }
+  }
+`;
+
+const TabBarWrapper = styled(({ theme, mediaPlayerIsVisible }) => ({
+  backgroundColor: mediaPlayerIsVisible
+    ? theme.colors.screen
+    : theme.colors.paper,
+  ...Platform.select(theme.shadows.default),
+}))(View);
 
 const ThemedBottomTabBar = compose(
   withTheme(({ theme }) => ({
     showLabel: false,
     activeTintColor: theme.colors.secondary,
     inactiveTintColor: theme.colors.text.tertiary,
-    safeAreaInset: { bottom: 0 },
   })),
   styled(({ theme }) => ({
     borderTopWidth: 0,
     backgroundColor: theme.colors.transparent,
-  })),
-  withTabBarMediaSpacer
+  }))
 )(BottomTabBar);
 
-export default ThemedBottomTabBar;
+const TabBar = (props) => (
+  <Query query={mediaPlayerIsVisibleQuery}>
+    {({ data = {} }) => (
+      <TabBarWrapper mediaPlayerIsVisible={get(data, 'mediaPlayer.isVisible')}>
+        <MediaPlayerSpacer>
+          <ThemedBottomTabBar
+            {...props}
+            safeAreaInset={{ bottom: 'never', top: 'never' }}
+          />
+        </MediaPlayerSpacer>
+      </TabBarWrapper>
+    )}
+  </Query>
+);
+
+export default TabBar;
diff --git a/apolloschurchapp/src/tabs/tabBarIcon.js b/apolloschurchapp/src/tabs/tabBarIcon.js
index 0d6e4ca..411c446 100644
--- a/apolloschurchapp/src/tabs/tabBarIcon.js
+++ b/apolloschurchapp/src/tabs/tabBarIcon.js
@@ -1,7 +1,7 @@
 import React from 'react';
 import PropTypes from 'prop-types';
 
-import { Icon } from '@apollosproject/ui-kit';
+import Icon from 'apolloschurchapp/src/ui/Icon';
 
 const tabBarIcon = (name) => {
   function TabBarIcon({ tintColor }) {
diff --git a/apolloschurchapp/src/testing-control-panel/ChangeLivestream.js b/apolloschurchapp/src/testing-control-panel/ChangeLivestream.js
index 6675653..6723f30 100644
--- a/apolloschurchapp/src/testing-control-panel/ChangeLivestream.js
+++ b/apolloschurchapp/src/testing-control-panel/ChangeLivestream.js
@@ -4,12 +4,12 @@ import { Query } from 'react-apollo';
 import { get } from 'lodash';
 
 import { client } from 'apolloschurchapp/src/client';
-import GET_LIVE_STREAM from 'apolloschurchapp/src/live/getLiveStream';
+import getLiveStream from 'apolloschurchapp/src/live/getLiveStream';
 import TouchableCell from './TouchableCell';
 
 const changeLivestream = ({ isLive }) =>
   client.writeQuery({
-    query: GET_LIVE_STREAM,
+    query: getLiveStream,
     data: {
       liveStream: {
         __typename: 'LiveStream',
@@ -19,7 +19,7 @@ const changeLivestream = ({ isLive }) =>
   });
 
 const ChangeLivestream = () => (
-  <Query query={GET_LIVE_STREAM}>
+  <Query query={getLiveStream}>
     {({ data }) => {
       const isLive = get(data, 'liveStream.isLive', false);
       return (
diff --git a/apolloschurchapp/src/testing-control-panel/TouchableCell.js b/apolloschurchapp/src/testing-control-panel/TouchableCell.js
index bfe51df..c958596 100644
--- a/apolloschurchapp/src/testing-control-panel/TouchableCell.js
+++ b/apolloschurchapp/src/testing-control-panel/TouchableCell.js
@@ -1,6 +1,8 @@
 import React from 'react';
 import PropType from 'prop-types';
-import { Touchable, Cell, CellIcon, CellText } from '@apollosproject/ui-kit';
+import Touchable from 'apolloschurchapp/src/ui/Touchable';
+
+import { Cell, CellIcon, CellText } from 'apolloschurchapp/src/ui/TableView';
 
 const TouchableCell = ({ iconName, cellText, handlePress }) => (
   <Touchable onPress={handlePress}>
diff --git a/apolloschurchapp/src/testing-control-panel/index.js b/apolloschurchapp/src/testing-control-panel/index.js
index 6a6c16a..3623e04 100644
--- a/apolloschurchapp/src/testing-control-panel/index.js
+++ b/apolloschurchapp/src/testing-control-panel/index.js
@@ -1,8 +1,6 @@
 import React, { PureComponent } from 'react';
-import { TableView, Divider } from '@apollosproject/ui-kit';
-import { UserWebBrowserConsumer } from 'apolloschurchapp/src/user-web-browser';
+import TableView, { Divider } from 'apolloschurchapp/src/ui/TableView';
 import ChangeLivestream from './ChangeLivestream';
-import TouchableCell from './TouchableCell';
 
 export default class TestingControlPanel extends PureComponent {
   static navigationOptions = () => ({
@@ -14,25 +12,6 @@ export default class TestingControlPanel extends PureComponent {
       <TableView>
         <ChangeLivestream />
         <Divider />
-        <UserWebBrowserConsumer>
-          {(openUserWebView) => (
-            <TouchableCell
-              handlePress={() =>
-                openUserWebView({
-                  url:
-                    'https://www.whatismybrowser.com/detect/what-http-headers-is-my-browser-sending',
-                })
-              }
-              iconName="share"
-              cellText={`Open Web Browser With User Cookie`}
-            />
-          )}
-        </UserWebBrowserConsumer>
-        <TouchableCell
-          handlePress={() => this.props.navigation.navigate('Onboarding')}
-          iconName="Avatar"
-          cellText={`Launch Onboarding`}
-        />
       </TableView>
     );
   }
diff --git a/apolloschurchapp/src/theme/icons/index.js b/apolloschurchapp/src/theme/icons/index.js
deleted file mode 100644
index 79e948a..0000000
--- a/apolloschurchapp/src/theme/icons/index.js
+++ /dev/null
@@ -1,2 +0,0 @@
-/* Export your custom icon components here. */
-export {};
diff --git a/apolloschurchapp/src/theme/index.js b/apolloschurchapp/src/theme/index.js
deleted file mode 100644
index 9ccfc4a..0000000
--- a/apolloschurchapp/src/theme/index.js
+++ /dev/null
@@ -1,4 +0,0 @@
-import theme from './theme';
-import * as customIcons from './icons';
-
-export { theme as default, customIcons };
diff --git a/apolloschurchapp/src/theme/theme.js b/apolloschurchapp/src/theme/theme.js
deleted file mode 100644
index 532be93..0000000
--- a/apolloschurchapp/src/theme/theme.js
+++ /dev/null
@@ -1,46 +0,0 @@
-/* Add your custom theme definitions below. Anything that is supported in UI-Kit Theme can be
- overridden and/or customized here! */
-
-/* Base colors.
- * These get used by theme types (see /types directory) to color
- * specific parts of the interface. For more control on how certain
- * elements are colored, go there. The next level of control comes
- * on a per-component basis with "overrides"
- */
-// const colors = {};
-
-/* Base Typography sizing and fonts.
- * To control speicfic styles used on different type components (like H1, H2, etc), see "overrides"
- */
-// const typography = {};
-
-/* Responsive breakpoints */
-// export const breakpoints = {};
-
-/* Base sizing units. These are used to scale
- * space, and size components relatively to one another.
- */
-// export const sizing = {};
-
-/* Base alpha values. These are used to keep transparent values across the app consistant */
-// export const alpha = {};
-
-/* Base overlays. These are used as configuration for LinearGradients across the app */
-// export const overlays = () => ({});
-
-/* Overrides allow you to override the styles of any component styled using the `styled` HOC.
- * For example, this component:
- * const SomeComponent = styled({ margin: 10, padding: 20 }, 'SomeComponent');
- * can have its styles overriden by including in overrides:
- * {
- *   overides: {
- *     SomeComponent: {
- *       margin: 5,
- *       padding: 15,
- *     },
- *   },
- * }
- */
-// const overrides = {};
-
-export default {};
diff --git a/apolloschurchapp/src/ui/ActivityIndicator/index.js b/apolloschurchapp/src/ui/ActivityIndicator/index.js
new file mode 100644
index 0000000..434201d
--- /dev/null
+++ b/apolloschurchapp/src/ui/ActivityIndicator/index.js
@@ -0,0 +1,20 @@
+import {
+  ActivityIndicator as NativeActivityIndicator,
+  StyleSheet,
+} from 'react-native';
+
+import styled from 'apolloschurchapp/src/ui/styled';
+
+const ActivityIndicator = styled(
+  {
+    flex: 1,
+    ...StyleSheet.absoluteFillObject,
+    alignSelf: 'center',
+  },
+  'ActivityIndicator'
+)(NativeActivityIndicator);
+
+export {
+  ActivityIndicator as default,
+  NativeActivityIndicator as InlineActivityIndicator,
+};
diff --git a/apolloschurchapp/src/ui/Avatar/Avatar.stories.js b/apolloschurchapp/src/ui/Avatar/Avatar.stories.js
new file mode 100644
index 0000000..7d7f7bb
--- /dev/null
+++ b/apolloschurchapp/src/ui/Avatar/Avatar.stories.js
@@ -0,0 +1,19 @@
+import React from 'react';
+import { storiesOf } from '@storybook/react-native';
+
+import FlexedView from 'apolloschurchapp/src/ui/FlexedView';
+
+import Avatar from '.';
+
+const source = {
+  uri:
+    'https://dg0ddngxdz549.cloudfront.net/images/cached/images/remote/http_s3.amazonaws.com/ns.images/all/member_images/members.nophoto_1000_1000_90_c1.jpg',
+};
+/* eslint-disable react-native/no-inline-styles */
+storiesOf('Avatar', module).add('default', () => (
+  <FlexedView style={{ flexWrap: 'wrap', flexDirection: 'row' }}>
+    <Avatar source={source} size="small" />
+    <Avatar source={source} size="medium" />
+    <Avatar source={source} size="large" />
+  </FlexedView>
+));
diff --git a/apolloschurchapp/src/ui/Avatar/Avatar.tests.js b/apolloschurchapp/src/ui/Avatar/Avatar.tests.js
new file mode 100644
index 0000000..da1bd21
--- /dev/null
+++ b/apolloschurchapp/src/ui/Avatar/Avatar.tests.js
@@ -0,0 +1,38 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import { ThemeProvider } from 'apolloschurchapp/src/ui/theme';
+
+import Avatar from '.';
+
+const source = {
+  uri:
+    'https://dg0ddngxdz549.cloudfront.net/images/cached/images/remote/http_s3.amazonaws.com/ns.images/all/member_images/members.nophoto_1000_1000_90_c1.jpg',
+};
+
+describe('The Avatar component', () => {
+  it('should render small', () => {
+    const tree = renderer.create(
+      <ThemeProvider>
+        <Avatar source={source} size="small" />
+      </ThemeProvider>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render medium', () => {
+    const tree = renderer.create(
+      <ThemeProvider>
+        <Avatar source={source} size="medium" />
+      </ThemeProvider>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render large', () => {
+    const tree = renderer.create(
+      <ThemeProvider>
+        <Avatar source={source} size="large" />
+      </ThemeProvider>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/Avatar/List.js b/apolloschurchapp/src/ui/Avatar/List.js
new file mode 100644
index 0000000..ef6596e
--- /dev/null
+++ b/apolloschurchapp/src/ui/Avatar/List.js
@@ -0,0 +1,14 @@
+import { View } from 'react-native';
+
+import styled from 'apolloschurchapp/src/ui/styled';
+
+const AvatarList = styled(
+  {
+    flexDirection: 'row',
+    flexWrap: 'wrap',
+    maxWidth: '100%',
+  },
+  'Avatar.List'
+)(View);
+
+export default AvatarList;
diff --git a/apolloschurchapp/src/ui/Avatar/index.js b/apolloschurchapp/src/ui/Avatar/index.js
new file mode 100644
index 0000000..3cb204a
--- /dev/null
+++ b/apolloschurchapp/src/ui/Avatar/index.js
@@ -0,0 +1,74 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import { View } from 'react-native';
+import { get } from 'lodash';
+import { compose, pure } from 'recompose';
+
+import ConnectedImage from 'apolloschurchapp/src/ui/ConnectedImage';
+import styled from 'apolloschurchapp/src/ui/styled';
+import { withTheme } from 'apolloschurchapp/src/ui/theme';
+import ActivityIndicator from 'apolloschurchapp/src/ui/ActivityIndicator';
+
+export { default as AvatarList } from './List';
+
+const enhance = compose(
+  pure,
+  withTheme(({ theme, size }) => ({
+    themeSize: get(theme.sizing.avatar, size, theme.sizing.avatar.small),
+  }))
+);
+
+const Container = styled(
+  ({ theme, themeSize }) => ({
+    width: themeSize,
+    height: themeSize,
+    backgroundColor: theme.colors.background.inactive,
+    borderRadius: themeSize / 2,
+    marginRight: themeSize / 4,
+    marginBottom: themeSize / 4,
+    overflow: 'hidden',
+  }),
+  'Avatar'
+)(View);
+
+const LoadingIcon = compose(
+  withTheme(({ theme: { colors } = {} }) => ({ color: colors.white })),
+  styled({
+    zIndex: 1,
+  })
+)(ActivityIndicator);
+
+const Image = styled(({ themeSize }) => ({
+  width: '100%',
+  height: '100%',
+  position: 'absolute',
+  top: 0,
+  left: 0,
+  right: 0,
+  bottom: 0,
+  borderRadius: themeSize / 2,
+}))(ConnectedImage);
+
+const Avatar = enhance(
+  ({ themeSize, containerStyle, source, isLoading, ...imageProps }) => (
+    <Container style={containerStyle} themeSize={themeSize}>
+      {isLoading ? <LoadingIcon /> : null}
+      {source && source.uri ? (
+        <Image
+          source={source}
+          {...imageProps}
+          themeSize={themeSize}
+          isLoading={isLoading}
+        />
+      ) : null}
+    </Container>
+  )
+);
+
+Avatar.propTypes = {
+  size: PropTypes.oneOf(['small', 'medium', 'large']),
+  containerStyle: PropTypes.any, // eslint-disable-line
+  ...ConnectedImage.propTypes,
+};
+
+export default Avatar;
diff --git a/apolloschurchapp/src/ui/BackgroundView/BackgroundView.tests.js b/apolloschurchapp/src/ui/BackgroundView/BackgroundView.tests.js
new file mode 100644
index 0000000..01632b9
--- /dev/null
+++ b/apolloschurchapp/src/ui/BackgroundView/BackgroundView.tests.js
@@ -0,0 +1,17 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import BackgroundView from '.';
+
+describe('The BackgroundView component', () => {
+  it('should render', () => {
+    const tree = renderer.create(
+      <Providers>
+        <BackgroundView />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/BackgroundView/index.js b/apolloschurchapp/src/ui/BackgroundView/index.js
new file mode 100644
index 0000000..cfc47da
--- /dev/null
+++ b/apolloschurchapp/src/ui/BackgroundView/index.js
@@ -0,0 +1,14 @@
+import LinearGradient from 'react-native-linear-gradient';
+import { compose } from 'recompose';
+
+import styled from 'apolloschurchapp/src/ui/styled';
+import { withTheme } from 'apolloschurchapp/src/ui/theme';
+
+const BackgroundView = compose(
+  withTheme(({ theme }) => ({
+    colors: [theme.colors.background.paper, theme.colors.background.screen],
+  })),
+  styled({ flex: 1 })
+)(LinearGradient);
+
+export default BackgroundView;
diff --git a/apolloschurchapp/src/ui/Button/Button.js b/apolloschurchapp/src/ui/Button/Button.js
new file mode 100644
index 0000000..2d86457
--- /dev/null
+++ b/apolloschurchapp/src/ui/Button/Button.js
@@ -0,0 +1,154 @@
+import React from 'react';
+import { View } from 'react-native';
+import PropTypes from 'prop-types';
+import { compose } from 'recompose';
+import { get } from 'lodash';
+
+import { withTheme, withThemeMixin } from 'apolloschurchapp/src/ui/theme';
+import styled from 'apolloschurchapp/src/ui/styled';
+import Touchable from 'apolloschurchapp/src/ui/Touchable';
+import { H4 } from 'apolloschurchapp/src/ui/typography';
+import { InlineActivityIndicator } from 'apolloschurchapp/src/ui/ActivityIndicator';
+import { withPlaceholder, Line } from 'apolloschurchapp/src/ui/Placeholder';
+
+const ButtonStyles = styled(
+  ({ theme, disabled, bordered, pill }) => ({
+    paddingHorizontal: theme.sizing.baseUnit,
+    overflow: 'hidden',
+    borderRadius: pill ? theme.sizing.baseUnit * 3 : theme.sizing.baseUnit / 2,
+    flexDirection: 'row',
+    height: theme.sizing.baseUnit * 3,
+    alignItems: 'center',
+    justifyContent: 'center',
+    opacity: disabled ? 0.5 : 1,
+    borderWidth: 2,
+    ...(bordered
+      ? {
+          backgroundColor: theme.colors.transparent,
+          borderColor: theme.colors.primary,
+        }
+      : {
+          backgroundColor: theme.colors.background.screen,
+          borderColor: theme.colors.background.screen,
+          elevation: 2,
+        }),
+  }),
+  'Button'
+)(View);
+
+const ButtonPlaceholder = styled(
+  ({ theme }) => ({
+    width: theme.sizing.baseUnit * 4,
+    height: theme.sizing.baseUnit + theme.helpers.rem(1),
+  }),
+  'Button.Placeholder'
+)(Line);
+
+export const withButtonPlaceholder = withPlaceholder(ButtonPlaceholder);
+
+const enhance = compose(
+  withButtonPlaceholder,
+  withTheme(({ theme, type = 'default' }) => ({
+    fill: get(theme, `buttons.${type}.fill`, theme.colors.action.default),
+    accent: get(theme, `buttons.${type}.accent`, theme.colors.text.primary),
+  })),
+  // makes non-text children inherit button styles by default :-D
+  withThemeMixin(({ fill, accent, bordered }) => {
+    const textColor = bordered ? fill : accent;
+    return {
+      colors: {
+        primary: bordered ? fill : accent,
+        text: {
+          primary: textColor,
+          secondary: textColor,
+          tertiary: textColor,
+        },
+        screen: fill,
+      },
+    };
+  }),
+  withTheme()
+);
+
+// API-Compatible to React-Native's base <Button> component,
+// except it supports the rendering of children, which will take precedence over the title prop,
+// so you can handle non text children.
+const Button = enhance(
+  ({
+    children,
+    disabled,
+    title,
+    to,
+    onPress,
+    style,
+    bordered,
+    loading,
+    accent,
+    pill,
+    TouchableComponent = Touchable,
+    theme,
+    ...touchableProps
+  }) => {
+    const accessibilityTraits = ['button'];
+    if (disabled || loading) accessibilityTraits.push('disabled');
+
+    const buttonContent = (
+      <ButtonStyles
+        style={style}
+        disabled={disabled}
+        bordered={bordered}
+        pill={pill}
+      >
+        {loading ? (
+          <InlineActivityIndicator color={accent} />
+        ) : (
+          children || <H4>{title}</H4>
+        )}
+      </ButtonStyles>
+    );
+
+    if (onPress) {
+      return (
+        <TouchableComponent
+          onPress={onPress}
+          disabled={disabled || loading}
+          accessibilityTraits={accessibilityTraits}
+          {...touchableProps}
+        >
+          {buttonContent}
+        </TouchableComponent>
+      );
+    }
+
+    return buttonContent;
+  }
+);
+
+Button.defaultProps = {
+  disabled: false,
+  bordered: false,
+  pill: true,
+  title: '',
+  accessibilityComponentType: 'button',
+  type: 'primary',
+};
+
+Button.propTypes = {
+  disabled: PropTypes.bool,
+  children: PropTypes.node,
+  title: PropTypes.string,
+  bordered: PropTypes.bool,
+  pill: PropTypes.bool,
+  to: PropTypes.string,
+  type: PropTypes.oneOf([
+    'default',
+    'primary',
+    'secondary',
+    'tertiary',
+    'ghost',
+    'alert',
+  ]), // keys in theme.colors.action
+  ...Touchable.propTypes,
+};
+
+export default Button;
diff --git a/apolloschurchapp/src/ui/Button/Button.stories.js b/apolloschurchapp/src/ui/Button/Button.stories.js
new file mode 100644
index 0000000..14548a6
--- /dev/null
+++ b/apolloschurchapp/src/ui/Button/Button.stories.js
@@ -0,0 +1,169 @@
+import React from 'react';
+import { View } from 'react-native';
+import { nest } from 'recompose';
+import { storiesOf } from '@storybook/react-native';
+
+import FlexedView from 'apolloschurchapp/src/ui/FlexedView';
+import { H4 } from 'apolloschurchapp/src/ui/typography';
+import Icon from 'apolloschurchapp/src/ui/Icon';
+import styled from 'apolloschurchapp/src/ui/styled';
+
+import Button from '.';
+
+const ViewWithMargin = styled({ margin: 10 })(View);
+const ButtonWithMargin = nest(ViewWithMargin, Button);
+
+storiesOf('Buttons/Pill (default)', module)
+  .add('default', () => (
+    <FlexedView>
+      <ButtonWithMargin onPress={() => {}} title="Just a plain 'ole Button" />
+    </FlexedView>
+  ))
+  .add('Types', () => (
+    <FlexedView>
+      <ButtonWithMargin onPress={() => {}} title="Default" type="default" />
+      <ButtonWithMargin
+        onPress={() => {}}
+        title="Primary Action"
+        type="primary"
+      />
+      <ButtonWithMargin
+        onPress={() => {}}
+        title="Secondary Action"
+        type="secondary"
+      />
+      <ButtonWithMargin
+        onPress={() => {}}
+        title="Tertiary Action"
+        type="tertiary"
+      />
+    </FlexedView>
+  ))
+  .add('Disabled', () => (
+    <FlexedView>
+      <ButtonWithMargin
+        onPress={() => {}}
+        title="Disabled Button 😭"
+        disabled
+      />
+    </FlexedView>
+  ))
+  .add('Bordered', () => (
+    <FlexedView>
+      <ButtonWithMargin onPress={() => {}} title="Bordered Button" bordered />
+    </FlexedView>
+  ))
+  .add('Ghost', () => (
+    <FlexedView>
+      <ButtonWithMargin
+        onPress={() => {}}
+        title="Ghost Pill"
+        type={'ghost'}
+        bordered
+      />
+    </FlexedView>
+  ))
+  .add('With Children', () => (
+    <FlexedView>
+      <ButtonWithMargin onPress={() => {}} type="primary">
+        <H4>Non-Text Children</H4>
+        <Icon name="like" />
+      </ButtonWithMargin>
+    </FlexedView>
+  ))
+  .add('loading', () => (
+    <FlexedView>
+      <ButtonWithMargin
+        onPress={() => {}}
+        title="Just a plain 'ole Button"
+        loading
+      />
+    </FlexedView>
+  ));
+storiesOf('Buttons/Square', module)
+  .add('default', () => (
+    <FlexedView>
+      <ButtonWithMargin
+        onPress={() => {}}
+        title="Just a plain 'ole Square Button"
+        pill={false}
+      />
+    </FlexedView>
+  ))
+  .add('Types', () => (
+    <FlexedView>
+      <ButtonWithMargin
+        onPress={() => {}}
+        title="Default"
+        type="default"
+        pill={false}
+      />
+      <ButtonWithMargin
+        onPress={() => {}}
+        title="Primary Action"
+        type="primary"
+        pill={false}
+      />
+      <ButtonWithMargin
+        onPress={() => {}}
+        title="Secondary Action"
+        type="secondary"
+        pill={false}
+      />
+      <ButtonWithMargin
+        onPress={() => {}}
+        title="Tertiary Action"
+        type="tertiary"
+        pill={false}
+      />
+    </FlexedView>
+  ))
+  .add('Disabled', () => (
+    <FlexedView>
+      <ButtonWithMargin
+        onPress={() => {}}
+        title="Disabled Button 😭"
+        disabled
+        pill={false}
+      />
+    </FlexedView>
+  ))
+  .add('Bordered', () => (
+    <FlexedView>
+      <ButtonWithMargin
+        onPress={() => {}}
+        title="Bordered Button"
+        bordered
+        pill={false}
+      />
+    </FlexedView>
+  ))
+  .add('Ghost', () => (
+    <FlexedView>
+      <ButtonWithMargin
+        onPress={() => {}}
+        title="Ghost Square"
+        type={'ghost'}
+        bordered
+        pill={false}
+      />
+    </FlexedView>
+  ))
+  .add('With Children', () => (
+    <FlexedView>
+      <ButtonWithMargin onPress={() => {}} type="primary" pill={false}>
+        <H4>Non-Text Children</H4>
+        <Icon name="like" />
+      </ButtonWithMargin>
+    </FlexedView>
+  ))
+  .add('loading', () => (
+    <FlexedView>
+      <ButtonWithMargin
+        onPress={() => {}}
+        title="Just a plain 'ole Square Button"
+        pill={false}
+        loading
+      />
+    </FlexedView>
+  ));
diff --git a/apolloschurchapp/src/ui/Button/Button.tests.js b/apolloschurchapp/src/ui/Button/Button.tests.js
new file mode 100644
index 0000000..209796d
--- /dev/null
+++ b/apolloschurchapp/src/ui/Button/Button.tests.js
@@ -0,0 +1,119 @@
+import React from 'react';
+import { View } from 'react-native';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import Button from '.';
+
+describe('The Button component', () => {
+  it('should render', () => {
+    const tree = renderer.create(
+      <Providers>
+        <Button title="My Button!" onPress={() => {}} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render as default type', () => {
+    const tree = renderer.create(
+      <Providers>
+        <Button title="My Button!" type="default" onPress={() => {}} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a primary button', () => {
+    const tree = renderer.create(
+      <Providers>
+        <Button onPress={() => {}} title="Primary Action" type="primary" />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a secondary button', () => {
+    const tree = renderer.create(
+      <Providers>
+        <Button onPress={() => {}} title="Secondary Action" type="secondary" />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a Tertiary button', () => {
+    const tree = renderer.create(
+      <Providers>
+        <Button onPress={() => {}} title="Tertiary Action" type="tertiary" />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a disabled button', () => {
+    const tree = renderer.create(
+      <Providers>
+        <Button onPress={() => {}} title="Disabled Button 😭" disabled />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a bordered button', () => {
+    const tree = renderer.create(
+      <Providers>
+        <Button onPress={() => {}} title="Ghost Button" bordered />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a pill button', () => {
+    const tree = renderer.create(
+      <Providers>
+        <Button onPress={() => {}} title="Pill Button" pill />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a ghost button', () => {
+    const tree = renderer.create(
+      <Providers>
+        <Button
+          onPress={() => {}}
+          title="Ghost Button"
+          type={'ghost'}
+          bordered
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a ghost pill button', () => {
+    const tree = renderer.create(
+      <Providers>
+        <Button
+          onPress={() => {}}
+          title="Ghost Button"
+          type={'ghost'}
+          bordered
+          pill
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render with children', () => {
+    const tree = renderer.create(
+      <Providers>
+        <Button>
+          <View />
+        </Button>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a loading state', () => {
+    const tree = renderer.create(
+      <Providers>
+        <Button title="My Button!" onPress={() => {}} loading />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/Button/ButtonLink.js b/apolloschurchapp/src/ui/Button/ButtonLink.js
new file mode 100644
index 0000000..ea36124
--- /dev/null
+++ b/apolloschurchapp/src/ui/Button/ButtonLink.js
@@ -0,0 +1,12 @@
+import { Text } from 'react-native';
+
+import styled from 'apolloschurchapp/src/ui/styled';
+
+const ButtonLink = styled(
+  ({ theme }) => ({
+    color: theme.colors.text.link,
+  }),
+  'Button.Link'
+)(Text);
+
+export default ButtonLink;
diff --git a/apolloschurchapp/src/ui/Button/ButtonLink.stories.js b/apolloschurchapp/src/ui/Button/ButtonLink.stories.js
new file mode 100644
index 0000000..b641336
--- /dev/null
+++ b/apolloschurchapp/src/ui/Button/ButtonLink.stories.js
@@ -0,0 +1,14 @@
+import React from 'react';
+import { storiesOf } from '@storybook/react-native';
+
+import { BodyText } from 'apolloschurchapp/src/ui/typography';
+
+import ButtonLink from './ButtonLink';
+
+storiesOf('Buttons/Link', module)
+  .add('default', () => <ButtonLink onPress={() => {}}>Boom</ButtonLink>)
+  .add('Inherits typographic styles', () => (
+    <BodyText>
+      <ButtonLink onPress={() => {}}>Boom</ButtonLink>
+    </BodyText>
+  ));
diff --git a/apolloschurchapp/src/ui/Button/ButtonLink.tests.js b/apolloschurchapp/src/ui/Button/ButtonLink.tests.js
new file mode 100644
index 0000000..cb40e32
--- /dev/null
+++ b/apolloschurchapp/src/ui/Button/ButtonLink.tests.js
@@ -0,0 +1,28 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+import { BodyText } from 'apolloschurchapp/src/ui/typography';
+
+import ButtonLink from './ButtonLink';
+
+describe('The Button component', () => {
+  it('should render', () => {
+    const tree = renderer.create(
+      <Providers>
+        <ButtonLink onPress={() => {}}>Boom</ButtonLink>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render inherit typographic styles', () => {
+    const tree = renderer.create(
+      <Providers>
+        <BodyText>
+          <ButtonLink onPress={() => {}}>Boom</ButtonLink>
+        </BodyText>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/Button/index.js b/apolloschurchapp/src/ui/Button/index.js
new file mode 100644
index 0000000..cda1fc4
--- /dev/null
+++ b/apolloschurchapp/src/ui/Button/index.js
@@ -0,0 +1,2 @@
+export default from './Button';
+export ButtonLink from './ButtonLink';
diff --git a/apolloschurchapp/src/ui/Card/Actions.js b/apolloschurchapp/src/ui/Card/Actions.js
new file mode 100644
index 0000000..28df7cb
--- /dev/null
+++ b/apolloschurchapp/src/ui/Card/Actions.js
@@ -0,0 +1,15 @@
+import PaddedView from 'apolloschurchapp/src/ui/PaddedView';
+import styled from 'apolloschurchapp/src/ui/styled';
+
+const Actions = styled(
+  ({ theme }) => ({
+    flexWrap: 'wrap',
+    flexDirection: 'row',
+    alignItems: 'center',
+    justifyContent: 'space-between',
+    paddingTop: theme.sizing.baseUnit / 4,
+  }),
+  'Card.Actions'
+)(PaddedView);
+
+export default Actions;
diff --git a/apolloschurchapp/src/ui/Card/Card.stories.js b/apolloschurchapp/src/ui/Card/Card.stories.js
new file mode 100644
index 0000000..3b64033
--- /dev/null
+++ b/apolloschurchapp/src/ui/Card/Card.stories.js
@@ -0,0 +1,50 @@
+import React from 'react';
+import { storiesOf } from '@storybook/react-native';
+
+import {
+  H3,
+  H6,
+  BodyText,
+  Paragraph,
+} from 'apolloschurchapp/src/ui/typography';
+import Button, { ButtonLink } from 'apolloschurchapp/src/ui/Button';
+
+import Card, { CardActions, CardContent, CardImage } from '.';
+
+storiesOf('Card', module)
+  .add('simple', () => (
+    <Card>
+      <CardImage source={'https://picsum.photos/600/400/?image=63'} />
+      <CardContent>
+        <H3>Coffee</H3>
+        <H6 padded>noun</H6>
+        <Paragraph>
+          <BodyText>
+            {
+              'A dark substance that turns "leave me alone" into "good morning!"'
+            }
+          </BodyText>
+        </Paragraph>
+      </CardContent>
+      <CardActions>
+        <Button title="Learn More" pill={false} />
+        <ButtonLink>Share</ButtonLink>
+      </CardActions>
+    </Card>
+  ))
+  .add('loading', () => (
+    <Card isLoading>
+      <CardImage />
+      <CardContent>
+        <H3 />
+        <H6 padded />
+        <Paragraph>
+          <BodyText />
+        </Paragraph>
+      </CardContent>
+      <CardActions>
+        <Button pill={false} />
+        <ButtonLink />
+      </CardActions>
+    </Card>
+  ));
diff --git a/apolloschurchapp/src/ui/Card/Card.tests.js b/apolloschurchapp/src/ui/Card/Card.tests.js
new file mode 100644
index 0000000..90fc0da
--- /dev/null
+++ b/apolloschurchapp/src/ui/Card/Card.tests.js
@@ -0,0 +1,61 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+import {
+  H3,
+  H6,
+  BodyText,
+  Paragraph,
+} from 'apolloschurchapp/src/ui/typography';
+import Button, { ButtonLink } from 'apolloschurchapp/src/ui/Button';
+
+import Card, { CardImage, CardContent, CardActions } from '.';
+
+describe('the Card component', () => {
+  it('should render', () => {
+    const tree = renderer.create(
+      <Providers>
+        <Card>
+          <CardImage source={'https://picsum.photos/600/400/?image=63'} />
+          <CardContent>
+            <H3>Coffee</H3>
+            <H6 padded>noun</H6>
+            <Paragraph>
+              <BodyText>
+                {
+                  'A dark substance that turns "leave me alone" into "good morning!"'
+                }
+              </BodyText>
+            </Paragraph>
+          </CardContent>
+          <CardActions>
+            <Button title="Learn More" pill={false} />
+            <ButtonLink>Share</ButtonLink>
+          </CardActions>
+        </Card>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('it should render a placeholder', () => {
+    const tree = renderer.create(
+      <Providers>
+        <Card isLoading>
+          <CardContent>
+            <H3 />
+            <H6 padded />
+            <Paragraph>
+              <BodyText />
+            </Paragraph>
+          </CardContent>
+          <CardActions>
+            <Button pill={false} />
+            <ButtonLink />
+          </CardActions>
+        </Card>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/Card/CardWrapper/CardWrapper.stories.js b/apolloschurchapp/src/ui/Card/CardWrapper/CardWrapper.stories.js
new file mode 100644
index 0000000..71f9ea0
--- /dev/null
+++ b/apolloschurchapp/src/ui/Card/CardWrapper/CardWrapper.stories.js
@@ -0,0 +1,49 @@
+import React from 'react';
+import { View, Text } from 'react-native';
+import { storiesOf } from '@storybook/react-native';
+
+import CardWrapper from '.';
+
+storiesOf('Card/CardWrapper', module)
+  .add('Default', () => {
+    const centered = {
+      justifyContent: 'center',
+      alignItems: 'center',
+      flex: 1,
+      backgroundColor: '#f7f7f7',
+    };
+
+    const cardDimensions = {
+      height: 400,
+      width: '92%',
+    };
+
+    return (
+      <View style={centered}>
+        <CardWrapper style={cardDimensions}>
+          <Text>Boom!</Text>
+        </CardWrapper>
+      </View>
+    );
+  })
+  .add('With backgroundColor', () => {
+    const centered = {
+      justifyContent: 'center',
+      alignItems: 'center',
+      flex: 1,
+      backgroundColor: '#f7f7f7',
+    };
+
+    const cardDimensions = {
+      height: 400,
+      width: '92%',
+    };
+
+    return (
+      <View style={centered}>
+        <CardWrapper style={cardDimensions} cardColor={'salmon'}>
+          <Text>Boom!</Text>
+        </CardWrapper>
+      </View>
+    );
+  });
diff --git a/apolloschurchapp/src/ui/Card/CardWrapper/CardWrapper.tests.js b/apolloschurchapp/src/ui/Card/CardWrapper/CardWrapper.tests.js
new file mode 100644
index 0000000..efcd5ee
--- /dev/null
+++ b/apolloschurchapp/src/ui/Card/CardWrapper/CardWrapper.tests.js
@@ -0,0 +1,59 @@
+import React from 'react';
+import { Text } from 'react-native';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import CardWrapper from '.';
+
+describe('the CardWrapper component', () => {
+  it('should render', () => {
+    const tree = renderer.create(
+      <Providers>
+        <CardWrapper />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render children', () => {
+    const tree = renderer.create(
+      <Providers>
+        <CardWrapper>
+          <Text>Boom!</Text>
+        </CardWrapper>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should accept a backgroundColor', () => {
+    const tree = renderer.create(
+      <Providers>
+        <CardWrapper backgroundColor={'salmon'}>
+          <Text>Boom!</Text>
+        </CardWrapper>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should accept and render passed in styles', () => {
+    const cardDimensions = {
+      height: 400,
+      width: '92%',
+    };
+
+    const tree = renderer.create(
+      <Providers>
+        <CardWrapper style={cardDimensions} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should accept additional props', () => {
+    const tree = renderer.create(
+      <Providers>
+        <CardWrapper accessible={false} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/Card/CardWrapper/index.js b/apolloschurchapp/src/ui/Card/CardWrapper/index.js
new file mode 100644
index 0000000..1bc13fd
--- /dev/null
+++ b/apolloschurchapp/src/ui/Card/CardWrapper/index.js
@@ -0,0 +1,49 @@
+import { compose, pure } from 'recompose';
+import React from 'react';
+import { Platform, View } from 'react-native';
+import PropTypes from 'prop-types';
+
+import { withIsLoading } from 'apolloschurchapp/src/ui/isLoading';
+import styled from 'apolloschurchapp/src/ui/styled';
+
+const StyledCard = compose(
+  withIsLoading,
+  styled(({ theme, cardColor, inHorizontalList = false }) => ({
+    // card styles
+    backgroundColor: cardColor || theme.colors.background.paper,
+    borderRadius: theme.sizing.baseUnit,
+    ...(inHorizontalList
+      ? {
+          marginLeft: theme.sizing.baseUnit * 0.5,
+          marginRight: 0,
+        }
+      : {
+          marginHorizontal: theme.sizing.baseUnit,
+          marginVertical: theme.sizing.baseUnit * 0.75,
+        }),
+    ...Platform.select(theme.shadows.default),
+  }))
+)(View);
+
+/*
+ * Overflow on iOS, when declared on the same element as a shadow, clips the shadow so overflow must
+ * live on a child wrapper. https://github.com/facebook/react-native/issues/449
+ */
+const OverflowFix = styled(({ theme }) => ({
+  borderRadius: theme.sizing.baseUnit,
+  overflow: 'hidden',
+}))(View);
+
+const Card = pure(({ children, isLoading, ...otherProps }) => (
+  <StyledCard {...otherProps}>
+    <OverflowFix>{children}</OverflowFix>
+  </StyledCard>
+));
+
+Card.propTypes = {
+  backgroundColor: PropTypes.string,
+  children: PropTypes.node,
+  style: PropTypes.any, // eslint-disable-line
+};
+
+export default Card;
diff --git a/apolloschurchapp/src/ui/Card/Content.js b/apolloschurchapp/src/ui/Card/Content.js
new file mode 100644
index 0000000..92584c5
--- /dev/null
+++ b/apolloschurchapp/src/ui/Card/Content.js
@@ -0,0 +1,11 @@
+import PaddedView from 'apolloschurchapp/src/ui/PaddedView';
+import styled from 'apolloschurchapp/src/ui/styled';
+
+const Content = styled(
+  ({ theme }) => ({
+    paddingVertical: theme.sizing.baseUnit * 0.75,
+  }),
+  'Card.Content'
+)(PaddedView);
+
+export default Content;
diff --git a/apolloschurchapp/src/ui/Card/ErrorCard/ErrorCard.stories.js b/apolloschurchapp/src/ui/Card/ErrorCard/ErrorCard.stories.js
new file mode 100644
index 0000000..b0eb03d
--- /dev/null
+++ b/apolloschurchapp/src/ui/Card/ErrorCard/ErrorCard.stories.js
@@ -0,0 +1,8 @@
+import React from 'react';
+import { storiesOf } from '@storybook/react-native';
+
+import ErrorCard from '.';
+
+storiesOf('Card/ErrorCard', module).add('Example', () => (
+  <ErrorCard message={'Boom!'} error={'What?'} />
+));
diff --git a/apolloschurchapp/src/ui/Card/ErrorCard/ErrorCard.tests.js b/apolloschurchapp/src/ui/Card/ErrorCard/ErrorCard.tests.js
new file mode 100644
index 0000000..1293044
--- /dev/null
+++ b/apolloschurchapp/src/ui/Card/ErrorCard/ErrorCard.tests.js
@@ -0,0 +1,42 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import ErrorCard from '.';
+
+describe('the Card component', () => {
+  it('should render', () => {
+    const tree = renderer.create(
+      <Providers>
+        <ErrorCard message={'Boom!'} error={'What?'} />
+      </Providers>
+    );
+
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render with an error message inside an object', () => {
+    const errorObject = {
+      message: 'You have discovered an error message. Do you open it?',
+    };
+    const tree = renderer.create(
+      <Providers>
+        <ErrorCard error={errorObject} />
+      </Providers>
+    );
+
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render with an error inside an object', () => {
+    const errorObject = {
+      error: 'Errors, errors, and more errors',
+    };
+    const tree = renderer.create(
+      <Providers>
+        <ErrorCard error={errorObject} />
+      </Providers>
+    );
+
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/Card/ErrorCard/index.js b/apolloschurchapp/src/ui/Card/ErrorCard/index.js
new file mode 100644
index 0000000..ee0167b
--- /dev/null
+++ b/apolloschurchapp/src/ui/Card/ErrorCard/index.js
@@ -0,0 +1,40 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+
+import styled from 'apolloschurchapp/src/ui/styled';
+import { H4, H6 } from 'apolloschurchapp/src/ui/typography';
+import Card, { CardContent } from 'apolloschurchapp/src/ui/Card';
+
+const Header = styled({ textAlign: 'center' }, 'Error.Header')(H4);
+const ErrorText = styled({ textAlign: 'center' }, 'Error.Text')(H6);
+
+const Err = ({ message = 'Uh oh!', error }) => {
+  let errorMessage;
+  if (typeof error !== 'string') {
+    if (error && error.message) {
+      errorMessage = error.message;
+    } else if (error && error.error && typeof error.error === 'string') {
+      errorMessage = error.error;
+    } else {
+      errorMessage = 'An unexpected error occured';
+    }
+  } else {
+    errorMessage = error;
+  }
+
+  return (
+    <Card>
+      <CardContent>
+        <Header>{message}</Header>
+        <ErrorText>{errorMessage}</ErrorText>
+      </CardContent>
+    </Card>
+  );
+};
+
+Err.propTypes = {
+  message: PropTypes.string,
+  error: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),
+};
+
+export default Err;
diff --git a/apolloschurchapp/src/ui/Card/Image.js b/apolloschurchapp/src/ui/Card/Image.js
new file mode 100644
index 0000000..c6dbf87
--- /dev/null
+++ b/apolloschurchapp/src/ui/Card/Image.js
@@ -0,0 +1,28 @@
+import { Platform } from 'react-native';
+import { compose } from 'recompose';
+
+import styled from 'apolloschurchapp/src/ui/styled';
+import ProgressiveImage from 'apolloschurchapp/src/ui/ProgressiveImage';
+import { getIsLoading } from 'apolloschurchapp/src/ui/isLoading';
+
+const Image = compose(
+  getIsLoading,
+  styled(
+    ({ theme }) => ({
+      aspectRatio: 1,
+      width: '100%',
+      ...Platform.select({
+        android: {
+          // fixes android borderRadius overflow display issue
+          borderTopRightRadius: theme.sizing.baseUnit,
+          borderTopLeftRadius: theme.sizing.baseUnit,
+        },
+      }),
+    }),
+    'Card.Image'
+  )
+)(ProgressiveImage);
+
+Image.propTypes = ProgressiveImage.propTypes;
+
+export default Image;
diff --git a/apolloschurchapp/src/ui/Card/index.js b/apolloschurchapp/src/ui/Card/index.js
new file mode 100644
index 0000000..9efd6dc
--- /dev/null
+++ b/apolloschurchapp/src/ui/Card/index.js
@@ -0,0 +1,5 @@
+export { default } from './CardWrapper';
+export CardImage from './Image';
+export CardContent from './Content';
+export CardActions from './Actions';
+export ErrorCard from './ErrorCard';
diff --git a/apolloschurchapp/src/ui/CardTile/CardTile.stories.js b/apolloschurchapp/src/ui/CardTile/CardTile.stories.js
new file mode 100644
index 0000000..8699605
--- /dev/null
+++ b/apolloschurchapp/src/ui/CardTile/CardTile.stories.js
@@ -0,0 +1,61 @@
+import React from 'react';
+import { View, Text } from 'react-native';
+import { storiesOf } from '@storybook/react-native';
+
+import CardTile from '.';
+
+const containerStyles = {
+  height: 300,
+  justifyContent: 'center',
+  alignItems: 'center',
+  backgroundColor: '#f7f7f7',
+};
+
+storiesOf('CardTile', module)
+  .add('Default', () => (
+    <View style={containerStyles}>
+      <CardTile title={'Why Jesus is Timeless'} />
+    </View>
+  ))
+  .add('Skeleton', () => (
+    <View style={containerStyles}>
+      <CardTile
+        number={7}
+        title={'Why Jesus is Timeless'}
+        byLine={'Marty McFly'}
+        date={'Sat Oct 26 1985 01:24:00 GMT+0008 (UTC)'}
+        isLoading
+      />
+    </View>
+  ))
+  .add('With Number Box', () => (
+    <View style={containerStyles}>
+      <CardTile number={7} title={'Why Jesus is Timeless'} />
+    </View>
+  ))
+  .add('With byLine', () => (
+    <View style={containerStyles}>
+      <CardTile
+        number={7}
+        title={'Why Jesus is Timeless'}
+        byLine={'Marty McFly'}
+      />
+    </View>
+  ))
+  .add('With date', () => (
+    <View style={containerStyles}>
+      <CardTile
+        number={7}
+        title={'Why Jesus is Timeless'}
+        byLine={'Marty McFly'}
+        date={'Sat Oct 26 1985 01:24:00 GMT+0008 (UTC)'} // this snapshot will expire in a year
+      />
+    </View>
+  ))
+  .add('With Children', () => (
+    <View style={containerStyles}>
+      <CardTile>
+        <Text>Biff Tannen was here</Text>
+      </CardTile>
+    </View>
+  ));
diff --git a/apolloschurchapp/src/ui/CardTile/CardTile.tests.js b/apolloschurchapp/src/ui/CardTile/CardTile.tests.js
new file mode 100644
index 0000000..28b9c14
--- /dev/null
+++ b/apolloschurchapp/src/ui/CardTile/CardTile.tests.js
@@ -0,0 +1,94 @@
+import React from 'react';
+import { Text } from 'react-native';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import CardTile from '.';
+
+describe('the CardTile component', () => {
+  it('should render', () => {
+    const tree = renderer.create(
+      <Providers>
+        <CardTile title={'Why Jesus is Timeless'} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a loading skeleton', () => {
+    const tree = renderer.create(
+      <Providers>
+        <CardTile title={'Why Jesus is Timeless'} isLoading />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a number box', () => {
+    const tree = renderer.create(
+      <Providers>
+        <CardTile number={7} title={'Why Jesus is Timeless'} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('number box should grow elegantly with larger numbers', () => {
+    const tree = renderer.create(
+      <Providers>
+        <CardTile number={7777} title={'Why Jesus is Timeless'} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render card details', () => {
+    const tree = renderer.create(
+      <Providers>
+        <CardTile
+          number={7}
+          title={'Why Jesus is Timeless'}
+          showDetails
+          byLine={'Marty McFly'}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render card details with date', () => {
+    const tree = renderer.create(
+      <Providers>
+        <CardTile
+          number={7}
+          title={'Why Jesus is Timeless'}
+          showDetails
+          byLine={'Marty McFly'}
+          date={'Sat Oct 26 1985 01:24:00 GMT+0008 (UTC)'} // this snapshot will expire in a year
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render children', () => {
+    const tree = renderer.create(
+      <Providers>
+        <CardTile>
+          <Text>Biff Tannen was here</Text>
+        </CardTile>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a loading skeleton for all available props', () => {
+    const tree = renderer.create(
+      <Providers>
+        <CardTile
+          number={7}
+          title={'Why Jesus is Timeless'}
+          showDetails
+          byLine={'Marty McFly'}
+          date={'Sat Oct 26 1985 01:24:00 GMT+0008 (UTC)'}
+          isLoading
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/CardTile/index.js b/apolloschurchapp/src/ui/CardTile/index.js
new file mode 100644
index 0000000..2dc6549
--- /dev/null
+++ b/apolloschurchapp/src/ui/CardTile/index.js
@@ -0,0 +1,154 @@
+import React from 'react';
+import { View, StyleSheet } from 'react-native';
+import PropTypes from 'prop-types';
+import { compose, pure } from 'recompose';
+import moment from 'moment';
+
+import Placeholder from 'apolloschurchapp/src/ui/Placeholder';
+import { withIsLoading } from 'apolloschurchapp/src/ui/isLoading';
+import { withTheme, withThemeMixin } from 'apolloschurchapp/src/ui/theme';
+import styled from 'apolloschurchapp/src/ui/styled';
+import { H3, H5, H6 } from 'apolloschurchapp/src/ui/typography';
+import { CardContent, CardActions } from 'apolloschurchapp/src/ui/Card';
+import ChannelLabel from 'apolloschurchapp/src/ui/ChannelLabel';
+
+const enhance = compose(
+  withIsLoading,
+  withThemeMixin(({ theme }) => ({
+    type: 'light',
+    colors: {
+      background: {
+        inactive: theme.colors.lightSecondary,
+      },
+    },
+  })),
+  withTheme(),
+  pure
+);
+
+const TileSpacer = styled(({ theme }) => ({
+  padding: theme.sizing.baseUnit / 2,
+}))(View);
+
+const Tile = styled(({ theme }) => ({
+  height: '100%',
+  aspectRatio: 1,
+  borderRadius: theme.sizing.baseUnit,
+  backgroundColor: theme.colors.lightTertiary,
+}))(View);
+
+const PlaceholderOverflowFix = styled(({ theme }) => ({
+  ...StyleSheet.absoluteFillObject,
+  justifyContent: 'center',
+  borderRadius: theme.sizing.baseUnit,
+  overflow: 'hidden',
+}))(View);
+
+const TileNumber = styled(({ theme, size }) => ({
+  position: 'absolute',
+  top: 0,
+  left: 0,
+  width: theme.helpers.rem(1 * (size < 2 ? 2 : size)),
+  height: theme.helpers.rem(1 * (size < 2 ? 2 : size)),
+  justifyContent: 'center',
+  alignItems: 'center',
+  borderTopLeftRadius: theme.sizing.baseUnit,
+  borderBottomRightRadius: theme.sizing.baseUnit,
+  backgroundColor: theme.colors.white,
+}))(View);
+
+const relativeTime = (date) => {
+  if (moment.updateLocale) {
+    moment.updateLocale('en', {
+      relativeTime: {
+        future: 'in %s',
+        past: '%s ago',
+        s: 's',
+        m: 'm',
+        mm: '%dm',
+        h: '1h',
+        hh: '%dh',
+        d: '1d',
+        dd: '%dd',
+        M: '1mo',
+        MM: '%dmo',
+        y: '1y',
+        yy: '%dy',
+      },
+    });
+  }
+
+  const time = moment(new Date(date));
+  return time.fromNow(true); // true omits 'ago'
+};
+
+export const CardTile = enhance(
+  ({
+    number,
+    title,
+    byLine,
+    date,
+    style: styleProp = {},
+    isLoading,
+    theme,
+    children,
+    ...otherProps
+  }) => (
+    <TileSpacer collapsable={false}>
+      <Tile style={styleProp} {...otherProps}>
+        <PlaceholderOverflowFix>
+          {typeof number === 'undefined' ? null : (
+            <TileNumber size={number.toString().length}>
+              <Placeholder.Media
+                size={theme.helpers.rem(
+                  1.25 *
+                    (number.toString().length < 2
+                      ? 2
+                      : number.toString().length)
+                )}
+                onReady={!isLoading}
+              >
+                <View>
+                  <H5>{number}</H5>
+                </View>
+              </Placeholder.Media>
+            </TileNumber>
+          )}
+
+          {typeof title === 'undefined' ? null : (
+            <CardContent>
+              <H3>{title}</H3>
+            </CardContent>
+          )}
+
+          {byLine ? (
+            <CardActions>
+              <ChannelLabel
+                label={byLine}
+                icon={'video'}
+                isLoading={isLoading}
+                withFlex
+              />
+              {typeof date === 'undefined' ? null : (
+                <H6>{relativeTime(date)}</H6>
+              )}
+            </CardActions>
+          ) : null}
+
+          {children}
+        </PlaceholderOverflowFix>
+      </Tile>
+    </TileSpacer>
+  )
+);
+
+CardTile.propTypes = {
+  title: PropTypes.string,
+  number: PropTypes.number,
+  byLine: PropTypes.string,
+  date: PropTypes.string,
+  style: PropTypes.any, // eslint-disable-line
+  isLoading: PropTypes.bool,
+};
+
+export default CardTile;
diff --git a/apolloschurchapp/src/ui/CenteredView/CenteredView.stories.js b/apolloschurchapp/src/ui/CenteredView/CenteredView.stories.js
new file mode 100644
index 0000000..a100ccb
--- /dev/null
+++ b/apolloschurchapp/src/ui/CenteredView/CenteredView.stories.js
@@ -0,0 +1,12 @@
+import React from 'react';
+import { storiesOf } from '@storybook/react-native';
+
+import { H1 } from 'apolloschurchapp/src/ui/typography';
+
+import CenteredView from '.';
+
+storiesOf('CenteredView', module).add('Example', () => (
+  <CenteredView>
+    <H1>This text is in a CenteredView</H1>
+  </CenteredView>
+));
diff --git a/apolloschurchapp/src/ui/CenteredView/CenteredView.tests.js b/apolloschurchapp/src/ui/CenteredView/CenteredView.tests.js
new file mode 100644
index 0000000..083f568
--- /dev/null
+++ b/apolloschurchapp/src/ui/CenteredView/CenteredView.tests.js
@@ -0,0 +1,17 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import CenteredView from '.';
+
+describe('the CenteredView component', () => {
+  it('should render', () => {
+    const tree = renderer.create(
+      <Providers>
+        <CenteredView />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/CenteredView/index.js b/apolloschurchapp/src/ui/CenteredView/index.js
new file mode 100644
index 0000000..385da74
--- /dev/null
+++ b/apolloschurchapp/src/ui/CenteredView/index.js
@@ -0,0 +1,21 @@
+import PropTypes from 'prop-types';
+import { View } from 'react-native';
+
+import styled from 'apolloschurchapp/src/ui/styled';
+
+const CenteredView = styled(({ theme }) => ({
+  flex: 1,
+  justifyContent: 'center',
+  alignItems: 'center',
+  backgroundColor: theme.colors.background.screen,
+}))(View);
+
+CenteredView.defaultProps = {
+  children: null,
+};
+
+CenteredView.propTypes = {
+  children: PropTypes.node,
+};
+
+export default CenteredView;
diff --git a/apolloschurchapp/src/ui/ChannelLabel/ChannelLabel.stories.js b/apolloschurchapp/src/ui/ChannelLabel/ChannelLabel.stories.js
new file mode 100644
index 0000000..6bc2106
--- /dev/null
+++ b/apolloschurchapp/src/ui/ChannelLabel/ChannelLabel.stories.js
@@ -0,0 +1,35 @@
+import React from 'react';
+import { View } from 'react-native';
+import { storiesOf } from '@storybook/react-native';
+
+import CenteredView from 'apolloschurchapp/src/ui/CenteredView';
+import styled from 'apolloschurchapp/src/ui/styled';
+
+import ChannelLabel from '.';
+
+storiesOf('ChannelLabel', module)
+  .addDecorator((getStory) => <CenteredView>{getStory()}</CenteredView>)
+  .add('Default', () => <ChannelLabel label={'Default'} />)
+  .add('isLoading', () => <ChannelLabel label={'Default'} isLoading />)
+  .add('With Icon', () => <ChannelLabel label={'Albums'} icon={'like-solid'} />)
+  .add('isLoading With Icon', () => (
+    <ChannelLabel label={'Albums'} icon={'like-solid'} isLoading />
+  ))
+  .add('withFlex', () => {
+    const Wrapper = styled({
+      flex: 1,
+      width: '100%',
+    })(View);
+
+    const Box = styled({
+      flex: 3,
+      backgroundColor: 'salmon',
+    })(View);
+
+    return (
+      <Wrapper>
+        <ChannelLabel label={'Albums'} icon={'arrow-back'} withFlex />
+        <Box />
+      </Wrapper>
+    );
+  });
diff --git a/apolloschurchapp/src/ui/ChannelLabel/ChannelLabel.tests.js b/apolloschurchapp/src/ui/ChannelLabel/ChannelLabel.tests.js
new file mode 100644
index 0000000..1bb50f2
--- /dev/null
+++ b/apolloschurchapp/src/ui/ChannelLabel/ChannelLabel.tests.js
@@ -0,0 +1,49 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import ChannelLabel from '.';
+
+describe('the ChannelLabel component', () => {
+  it('should render', () => {
+    const tree = renderer.create(
+      <Providers>
+        <ChannelLabel label={'Default'} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a skeleton view', () => {
+    const tree = renderer.create(
+      <Providers>
+        <ChannelLabel label={'Default'} isLoading />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render with an icon', () => {
+    const tree = renderer.create(
+      <Providers>
+        <ChannelLabel label={'Default'} icon={'like'} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a skeleton view that supports an icon', () => {
+    const tree = renderer.create(
+      <Providers>
+        <ChannelLabel label={'Default'} icon={'like'} isLoading />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render flexed', () => {
+    const tree = renderer.create(
+      <Providers>
+        <ChannelLabel label={'Default'} withFlex />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/ChannelLabel/index.js b/apolloschurchapp/src/ui/ChannelLabel/index.js
new file mode 100644
index 0000000..aa70c08
--- /dev/null
+++ b/apolloschurchapp/src/ui/ChannelLabel/index.js
@@ -0,0 +1,64 @@
+import React from 'react';
+import { View } from 'react-native';
+import PropTypes from 'prop-types';
+import { compose, pure } from 'recompose';
+import { kebabCase } from 'lodash';
+
+import { withIsLoading } from 'apolloschurchapp/src/ui/isLoading';
+import { withTheme } from 'apolloschurchapp/src/ui/theme';
+import styled from 'apolloschurchapp/src/ui/styled';
+import { H6 } from 'apolloschurchapp/src/ui/typography';
+import Icon from 'apolloschurchapp/src/ui/Icon';
+import * as Icons from 'apolloschurchapp/src/ui/Icon/icons';
+
+const enhance = compose(
+  withIsLoading,
+  pure,
+  withTheme()
+);
+
+const Wrapper = styled(({ flexed }) => ({
+  flex: flexed ? 1 : null,
+  flexDirection: 'row',
+  alignItems: 'center',
+}))(View);
+
+const PlaceholderWrapper = styled(({ theme, withIcon }) => ({
+  flex: 1,
+  ...(withIcon
+    ? { paddingHorizontal: theme.sizing.baseUnit / 2 }
+    : { paddingRight: theme.sizing.baseUnit / 2 }),
+}))(View);
+
+const StyledH6 = styled(({ theme }) => ({
+  color: theme.colors.text.secondary,
+}))(H6);
+
+const ChannelLabel = enhance(({ label, icon, withFlex, isLoading, theme }) => (
+  <Wrapper flexed={withFlex}>
+    {icon ? (
+      <Icon
+        name={icon}
+        size={theme.helpers.rem(1.2)}
+        fill={theme.colors.text.secondary}
+        isLoading={isLoading}
+      />
+    ) : null}
+    <PlaceholderWrapper withIcon={icon}>
+      <StyledH6>{label}</StyledH6>
+    </PlaceholderWrapper>
+  </Wrapper>
+));
+
+ChannelLabel.propTypes = {
+  label: PropTypes.oneOfType([PropTypes.string, PropTypes.element]).isRequired,
+  icon: PropTypes.oneOf(Object.keys(Icons).map(kebabCase)),
+  isLoading: PropTypes.bool,
+  withFlex: PropTypes.bool,
+};
+
+ChannelLabel.defaultProps = {
+  withFlex: false,
+};
+
+export default ChannelLabel;
diff --git a/apolloschurchapp/src/ui/Chip/Chip.stories.js b/apolloschurchapp/src/ui/Chip/Chip.stories.js
new file mode 100644
index 0000000..d730e1d
--- /dev/null
+++ b/apolloschurchapp/src/ui/Chip/Chip.stories.js
@@ -0,0 +1,32 @@
+import React from 'react';
+import { storiesOf } from '@storybook/react-native';
+
+import ChipList from './List';
+
+import Chip from '.';
+
+storiesOf('Chip', module)
+  .add('default', () => (
+    <Chip onPress={() => {}} title="I'm just a poor chip" />
+  ))
+  .add('With Icon', () => (
+    <Chip onPress={() => {}} icon="close" title="I need no sympathy" />
+  ))
+  .add('Selected', () => <Chip onPress={() => {}} selected title="Easy come" />)
+  .add('List', () => (
+    <ChipList>
+      <Chip onPress={() => {}} title="I'm just a poor chip" />
+      <Chip onPress={() => {}} icon="close" title="I need no sympathy" />
+      <Chip onPress={() => {}} selected title="Easy come" />
+      <Chip onPress={() => {}} icon="close" selected title="Easy go" />
+      <Chip onPress={() => {}} icon="arrow-up" title="Litte high" />
+      <Chip
+        onPress={() => {}}
+        type="secondary"
+        icon="arrow-down"
+        title="Litte low"
+      />
+      <Chip title="📍💨?" />
+      <Chip selected title="¯\_(ツ)_/¯" />
+    </ChipList>
+  ));
diff --git a/apolloschurchapp/src/ui/Chip/Chip.tests.js b/apolloschurchapp/src/ui/Chip/Chip.tests.js
new file mode 100644
index 0000000..50d2a08
--- /dev/null
+++ b/apolloschurchapp/src/ui/Chip/Chip.tests.js
@@ -0,0 +1,33 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import Chip from '.';
+
+describe('The Chip component', () => {
+  it('should render correctly', () => {
+    const tree = renderer.create(
+      <Providers>
+        <Chip title="My Button!" onPress={() => {}} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render an icon', () => {
+    const tree = renderer.create(
+      <Providers>
+        <Chip icon="like" title="Heart!!!" />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should be selected', () => {
+    const tree = renderer.create(
+      <Providers>
+        <Chip title="My Button!" selected />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/Chip/List.js b/apolloschurchapp/src/ui/Chip/List.js
new file mode 100644
index 0000000..98f9118
--- /dev/null
+++ b/apolloschurchapp/src/ui/Chip/List.js
@@ -0,0 +1,14 @@
+import { View } from 'react-native';
+
+import styled from 'apolloschurchapp/src/ui/styled';
+
+const ChipList = styled(
+  {
+    flexDirection: 'row',
+    alignItems: 'center',
+    flexWrap: 'wrap',
+  },
+  'Chip.List'
+)(View);
+
+export default ChipList;
diff --git a/apolloschurchapp/src/ui/Chip/index.js b/apolloschurchapp/src/ui/Chip/index.js
new file mode 100644
index 0000000..cb8eb77
--- /dev/null
+++ b/apolloschurchapp/src/ui/Chip/index.js
@@ -0,0 +1,80 @@
+import React from 'react';
+import { compose, mapProps } from 'recompose';
+import PropTypes from 'prop-types';
+/* touchable native feedback currently is having flex layout issues on react-native android, so we
+ * fall back to TouchableOpacity
+ */
+import { TouchableOpacity } from 'react-native';
+
+import { H6 } from 'apolloschurchapp/src/ui/typography';
+import Button from 'apolloschurchapp/src/ui/Button';
+import Icon from 'apolloschurchapp/src/ui/Icon';
+import { withTheme } from 'apolloschurchapp/src/ui/theme';
+import styled from 'apolloschurchapp/src/ui/styled';
+
+export { default as ChipList } from './List';
+
+const enhance = compose(
+  withTheme(),
+  mapProps(({ theme, selected, ...otherProps }) => ({
+    type: selected ? 'primary' : 'default',
+    iconSize: theme.sizing.baseUnit,
+    ...otherProps,
+  }))
+);
+
+const TitleText = styled(({ withIcon = false }) => ({
+  ...(withIcon ? { flexGrow: 1 } : {}),
+  textAlign: 'center',
+  alignItems: 'center',
+  justifyContent: 'center',
+  paddingHorizontal: 6,
+}))(H6);
+
+const StyledButton = styled(
+  ({ theme, withIcon = false }) => ({
+    justifyContent: withIcon ? 'flex-end' : 'center',
+    paddingHorizontal: theme.sizing.baseUnit / 4,
+    paddingVertical: theme.sizing.baseUnit / 4,
+    height: theme.sizing.baseUnit * 2,
+    /* these margins are only used when a chip is in a list.
+     * TODO: consider removing or making conditional for use outside of lists
+     */
+    marginRight: theme.sizing.baseUnit / 2,
+    marginBottom: theme.sizing.baseUnit / 2,
+  }),
+  'Chip'
+)(Button);
+
+const Chip = enhance(
+  ({
+    icon,
+    iconStyles = {},
+    iconSize,
+    selected,
+    title,
+    pill = false,
+    ...buttonProps
+  }) => (
+    <StyledButton
+      withIcon={icon}
+      TouchableComponent={TouchableOpacity}
+      pill={pill}
+      {...buttonProps}
+    >
+      {title ? <TitleText withIcon={icon}>{title}</TitleText> : null}
+      {icon ? <Icon name={icon} style={iconStyles} size={iconSize} /> : null}
+    </StyledButton>
+  )
+);
+
+Chip.propTypes = {
+  icon: PropTypes.string,
+  iconStyles: PropTypes.object, // eslint-disable-line react/forbid-prop-types
+  iconSize: PropTypes.number,
+  selected: PropTypes.bool,
+  title: PropTypes.string,
+  pill: PropTypes.bool,
+};
+
+export default Chip;
diff --git a/apolloschurchapp/src/ui/ConnectedImage/ConnectedImage.tests.js b/apolloschurchapp/src/ui/ConnectedImage/ConnectedImage.tests.js
new file mode 100644
index 0000000..d90cab3
--- /dev/null
+++ b/apolloschurchapp/src/ui/ConnectedImage/ConnectedImage.tests.js
@@ -0,0 +1,55 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import ConnectedImage, { getCachedSources, updateCache } from '.';
+
+describe('the ConnectedImage component', () => {
+  it('should render immediately with a network image with a known width and height', () => {
+    const tree = renderer.create(
+      <Providers>
+        <ConnectedImage
+          source={{
+            uri: 'https://placeholdit.co/i/150x150?bg=eeeeee&fc=577084',
+            width: 150,
+            height: 150,
+          }}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should maintain aspect ratio', () => {
+    const tree = renderer.create(
+      <Providers>
+        <ConnectedImage
+          source={{
+            uri: 'https://placeholdit.co/i/150x150?bg=eeeeee&fc=577084',
+            width: 150,
+            height: 150,
+          }}
+          maintainAspectRatio
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  describe('updateCache', () => {
+    it('updates cache with image uri and sizes', async () => {
+      const source = {
+        url: '//via.placeholder.com/320x240',
+      };
+      await updateCache(source);
+
+      expect(getCachedSources(source)).toContainEqual(
+        expect.objectContaining({
+          uri: 'https://via.placeholder.com/320x240',
+          url: '//via.placeholder.com/320x240',
+          width: 320,
+          height: 240,
+        })
+      );
+    });
+  });
+});
diff --git a/apolloschurchapp/src/ui/ConnectedImage/SkeletonImage.js b/apolloschurchapp/src/ui/ConnectedImage/SkeletonImage.js
new file mode 100644
index 0000000..ba9230e
--- /dev/null
+++ b/apolloschurchapp/src/ui/ConnectedImage/SkeletonImage.js
@@ -0,0 +1,12 @@
+import { View } from 'react-native';
+import Placeholder from 'rn-placeholder';
+
+import styled from 'apolloschurchapp/src/ui/styled';
+
+const SkeletonImage = styled(({ theme }) => ({
+  width: '100%',
+  aspectRatio: 1,
+  backgroundColor: theme.colors.background.inactive,
+}))(View);
+
+export default Placeholder.connect(SkeletonImage);
diff --git a/apolloschurchapp/src/ui/ConnectedImage/SkeletonImage.tests.js b/apolloschurchapp/src/ui/ConnectedImage/SkeletonImage.tests.js
new file mode 100644
index 0000000..c4a1e87
--- /dev/null
+++ b/apolloschurchapp/src/ui/ConnectedImage/SkeletonImage.tests.js
@@ -0,0 +1,17 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import { ThemeProvider } from 'apolloschurchapp/src/ui/theme';
+
+import SkeletonImage from './SkeletonImage';
+
+describe('the SkeletonImage component', () => {
+  it('should render a loading state', () => {
+    const tree = renderer.create(
+      <ThemeProvider>
+        <SkeletonImage onReady={false} />
+      </ThemeProvider>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/ConnectedImage/index.js b/apolloschurchapp/src/ui/ConnectedImage/index.js
new file mode 100644
index 0000000..680220e
--- /dev/null
+++ b/apolloschurchapp/src/ui/ConnectedImage/index.js
@@ -0,0 +1,224 @@
+import React, { PureComponent } from 'react';
+import { Animated, Image } from 'react-native';
+import PropTypes from 'prop-types';
+import { every } from 'lodash';
+
+import styled from 'apolloschurchapp/src/ui/styled';
+
+import SkeletonImage from './SkeletonImage';
+
+// This mirrors the File resource we get from Heighliner:
+const ImageSourceType = PropTypes.oneOfType([
+  PropTypes.shape({
+    uri: PropTypes.string,
+    label: PropTypes.string,
+    width: PropTypes.number,
+    height: PropTypes.number,
+  }),
+  PropTypes.string,
+]);
+
+const sizeCache = {};
+
+const getCacheKey = (source) => {
+  if (source.size && source.fileLabel)
+    return `${source.size}-${source.fileLabel}`;
+  if (source.url) return source.url;
+  if (source.uri) return source.uri;
+  return undefined;
+};
+
+const getCachedSources = (_sources = []) => {
+  let sources = _sources;
+  if (!Array.isArray(sources)) sources = [sources];
+  sources = sources.map((source) => {
+    if (typeof source === 'string') return { url: source };
+    return source;
+  });
+
+  return sources.map((source) => ({
+    uri: (source.url || '').replace(/^http:\/\/|^\/\//i, 'https://'),
+    cache: 'force-cache',
+    ...source,
+    ...(sizeCache[getCacheKey(source)] || {}),
+  }));
+};
+
+const updateCache = (sources) =>
+  Promise.all(
+    getCachedSources(sources).map((source) => {
+      const key = getCacheKey(source);
+      if (sizeCache[key] || !key) return Promise.resolve(source);
+      return new Promise((resolve, reject) => {
+        Image.getSize(
+          source.uri,
+          (width, height) =>
+            resolve({
+              width,
+              height,
+            }),
+          reject
+        );
+      }).then((sizeForCache) => {
+        if (key) sizeCache[key] = sizeForCache;
+      });
+    })
+  );
+
+const withBackgroundColor = styled(({ theme }) => ({
+  backgroundColor: theme.colors.background.inactive,
+}));
+
+class ConnectedImage extends PureComponent {
+  static propTypes = {
+    source: PropTypes.oneOfType([
+      PropTypes.arrayOf(ImageSourceType),
+      ImageSourceType,
+    ]),
+    ImageComponent: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),
+    maintainAspectRatio: PropTypes.bool,
+    isLoading: PropTypes.bool,
+    onLoad: PropTypes.func,
+    style: PropTypes.any, // eslint-disable-line
+  };
+
+  static defaultProps = {
+    ImageComponent: Animated.Image,
+    maintainAspectRatio: false,
+  };
+
+  constructor(props) {
+    super(props);
+
+    this.state = {
+      source: getCachedSources(this.props.source),
+    };
+
+    this.imageOpacity = new Animated.Value(this.isLoading ? 0 : 1);
+  }
+
+  componentWillMount() {
+    this.updateCache(this.props.source);
+  }
+
+  componentWillReceiveProps(newProps) {
+    this.updateCache(newProps.source);
+  }
+
+  componentWillUnmount() {
+    if (this.cacheUpdater) this.cacheUpdater.cancel();
+  }
+
+  get aspectRatio() {
+    const style = {};
+    if (this.props.maintainAspectRatio) {
+      const firstSource = this.state.source[0];
+      if (firstSource && firstSource.width && firstSource.height) {
+        style.aspectRatio = firstSource.width / firstSource.height;
+      }
+    }
+    if (this.props.isLoading && !style.aspectRatio) {
+      style.aspectRatio = 1;
+    }
+    return style;
+  }
+
+  get isLoading() {
+    return (
+      this.props.isLoading ||
+      !every(this.state.source, (image) => image.width && image.height)
+    );
+  }
+
+  handleOnLoad = (...args) => {
+    Animated.timing(this.imageOpacity, {
+      toValue: 1,
+      duration: 250,
+    }).start();
+    if (this.props.onLoad) this.props.onLoad(...args);
+  };
+
+  cancleCacheUpdater = (promise) => {
+    let hasCanceled = false;
+
+    const wrappedPromise = new Promise((resolve, reject) => {
+      promise.then(
+        (val) => (hasCanceled ? reject({ isCanceled: true }) : resolve(val)), // eslint-disable-line
+        (error) => (hasCanceled ? reject({ isCanceled: true }) : reject(error)) // eslint-disable-line
+      );
+    });
+
+    return {
+      promise: wrappedPromise,
+      cancel() {
+        hasCanceled = true;
+      },
+    };
+  };
+
+  updateCache(sources) {
+    this.cacheUpdater = this.cancleCacheUpdater(updateCache(sources));
+    this.cacheUpdater.promise
+      .then(() => {
+        const newSource = getCachedSources(sources);
+        const oldSource = this.state.source || [];
+
+        if (
+          newSource.length !== oldSource.length ||
+          newSource.find(
+            (source, i) =>
+              !oldSource[i] ||
+              getCacheKey(source) !== getCacheKey(oldSource[i]) ||
+              source.width !== oldSource[i].width ||
+              source.height !== oldSource[i].height
+          )
+        ) {
+          this.setState({ source: getCachedSources(sources) });
+        }
+      })
+      .catch(() => {
+        // todo: Right now, if there's an error on connected image that means one of two things:
+        // 1) the image component was unmounted before load...we should do nothing
+        // 2) the image failed to load. Our "empty" state for images is a graybox.
+        //    We could make this better by showing an alert icon or something on error,
+        //    But a gray box is better then nothing. so, we do nothing currently :)
+        //    However, we still need this empty catch function as uncaught promise errors
+        //    will throw an error up the food chain.
+      });
+  }
+
+  render() {
+    let { source } = this.state;
+    if (!Array.isArray(source)) source = [source];
+
+    const {
+      ImageComponent = Animated.Image,
+      style,
+      isLoading,
+      maintainAspectRatio,
+      ...otherProps
+    } = this.props;
+    return (
+      <SkeletonImage onReady={!this.isLoading}>
+        <ImageComponent
+          {...otherProps}
+          source={source}
+          onLoad={this.handleOnLoad}
+          style={[this.aspectRatio, { opacity: this.imageOpacity }, style]}
+        />
+      </SkeletonImage>
+    );
+  }
+}
+
+const enhanced = withBackgroundColor(ConnectedImage);
+
+enhanced.propTypes = ConnectedImage.propTypes;
+
+export {
+  sizeCache,
+  getCacheKey,
+  getCachedSources,
+  updateCache,
+  enhanced as default,
+};
diff --git a/apolloschurchapp/src/ui/ContentCardConnected/ContentCardConnected.js b/apolloschurchapp/src/ui/ContentCardConnected/ContentCardConnected.js
deleted file mode 100644
index e4d7ac2..0000000
--- a/apolloschurchapp/src/ui/ContentCardConnected/ContentCardConnected.js
+++ /dev/null
@@ -1,57 +0,0 @@
-import React, { memo } from 'react';
-import PropTypes from 'prop-types';
-import { Query } from 'react-apollo';
-import { get } from 'lodash';
-
-import { ErrorCard } from '@apollosproject/ui-kit';
-
-import contentCardComponentMapper from './contentCardComponentMapper';
-import GET_CONTENT_CARD from './query';
-
-const ContentCardConnected = memo(
-  ({ Component, contentId, isLoading, tile, mapProps, ...otherProps }) => {
-    if (!contentId || isLoading)
-      return <Component {...otherProps} isLoading tile={tile} />;
-
-    return (
-      <Query query={GET_CONTENT_CARD} variables={{ contentId }}>
-        {({ data: { node = {} } = {}, loading, error }) => {
-          if (error) return <ErrorCard error={error} />;
-
-          const coverImage = get(node, 'coverImage.sources', undefined);
-          const hasMedia = !!get(node, 'videos.[0].sources[0]', null);
-          const isLive = get(node, 'liveStream.isLive', false);
-          const labelText = get(node, 'parentChannel.name', null);
-
-          return (
-            <Component
-              {...node}
-              hasAction={hasMedia}
-              isLive={isLive}
-              labelText={labelText}
-              {...otherProps}
-              coverImage={coverImage}
-              isLoading={loading}
-            />
-          );
-        }}
-      </Query>
-    );
-  }
-);
-
-ContentCardConnected.propTypes = {
-  Component: PropTypes.func,
-  mapProps: PropTypes.func,
-  contentId: PropTypes.string,
-  isLoading: PropTypes.bool,
-  tile: PropTypes.bool,
-};
-
-ContentCardConnected.defaultProps = {
-  Component: contentCardComponentMapper,
-};
-
-ContentCardConnected.displayName = 'ContentCardConnected';
-
-export default ContentCardConnected;
diff --git a/apolloschurchapp/src/ui/ContentCardConnected/contentCardComponentMapper.js b/apolloschurchapp/src/ui/ContentCardConnected/contentCardComponentMapper.js
deleted file mode 100644
index 30d8e1e..0000000
--- a/apolloschurchapp/src/ui/ContentCardConnected/contentCardComponentMapper.js
+++ /dev/null
@@ -1,19 +0,0 @@
-import React from 'react';
-import { get } from 'lodash';
-
-import { DefaultCard, HighlightCard } from '@apollosproject/ui-kit';
-
-const contentCardComponentMapper = (props) => {
-  // map typename to the the card we want to render.
-  switch (get(props, '__typename')) {
-    case 'MediaContentItem':
-    case 'WeekendContentItem':
-    case 'ContentSeriesContentItem':
-    case 'DevotionalContentItem':
-      return <HighlightCard {...props} />;
-    default:
-      return <DefaultCard {...props} />;
-  }
-};
-
-export default contentCardComponentMapper;
diff --git a/apolloschurchapp/src/ui/ContentCardConnected/index.js b/apolloschurchapp/src/ui/ContentCardConnected/index.js
deleted file mode 100644
index c8fd37e..0000000
--- a/apolloschurchapp/src/ui/ContentCardConnected/index.js
+++ /dev/null
@@ -1,5 +0,0 @@
-import ContentCardConnected from './ContentCardConnected';
-
-export { LARGE_CARD_FRAGMENT } from './query';
-
-export default ContentCardConnected;
diff --git a/apolloschurchapp/src/ui/ContentCardConnected/query.js b/apolloschurchapp/src/ui/ContentCardConnected/query.js
deleted file mode 100644
index 1ff178a..0000000
--- a/apolloschurchapp/src/ui/ContentCardConnected/query.js
+++ /dev/null
@@ -1,86 +0,0 @@
-import gql from 'graphql-tag';
-
-export const COVER_IMAGE_FRAGMENT = gql`
-  fragment coverImageFragment on ContentItem {
-    coverImage {
-      sources {
-        uri
-      }
-    }
-  }
-`;
-
-export const THEME_FRAGMENT = gql`
-  fragment themeFragment on ContentItem {
-    theme {
-      type
-      colors {
-        primary
-        secondary
-        screen
-        paper
-      }
-    }
-  }
-`;
-
-export const BASE_CARD_FRAGMENT = gql`
-  fragment baseCardFragment on ContentItem {
-    id
-    __typename
-    ...coverImageFragment
-    ...themeFragment
-    title
-    summary
-    isLiked
-    ... on MediaContentItem {
-      videos {
-        sources {
-          uri
-        }
-      }
-    }
-    ... on WeekendContentItem {
-      videos {
-        sources {
-          uri
-        }
-      }
-      liveStream {
-        isLive
-      }
-      parentChannel {
-        id
-        name
-      }
-    }
-    ... on DevotionalContentItem {
-      parentChannel {
-        id
-        name
-      }
-    }
-  }
-  ${COVER_IMAGE_FRAGMENT}
-  ${THEME_FRAGMENT}
-`;
-
-export const LARGE_CARD_FRAGMENT = gql`
-  fragment largeCardFragment on ContentItem {
-    ...baseCardFragment
-  }
-  ${BASE_CARD_FRAGMENT}
-`;
-
-const GET_CONTENT_CARD = gql`
-  query getContentCard($contentId: ID!) {
-    node(id: $contentId) {
-      id
-      __typename
-      ...largeCardFragment
-    }
-  }
-  ${LARGE_CARD_FRAGMENT}
-`;
-
-export default GET_CONTENT_CARD;
diff --git a/apolloschurchapp/src/ui/FeedItemCard/FeedItemCard.stories.js b/apolloschurchapp/src/ui/FeedItemCard/FeedItemCard.stories.js
new file mode 100644
index 0000000..6336b1d
--- /dev/null
+++ b/apolloschurchapp/src/ui/FeedItemCard/FeedItemCard.stories.js
@@ -0,0 +1,151 @@
+import React from 'react';
+import { View } from 'react-native';
+import { storiesOf } from '@storybook/react-native';
+
+import FeedItemCard from '.';
+
+storiesOf('FeedItemCard', module)
+  .add('Default', () => {
+    const centered = {
+      justifyContent: 'center',
+      flex: 1,
+      backgroundColor: '#f7f7f7',
+    };
+
+    return (
+      <View style={centered}>
+        <FeedItemCard
+          title={'Promised Land'}
+          channelType={'Series'}
+          images={'https://picsum.photos/600/400/?random'}
+        />
+      </View>
+    );
+  })
+  .add('isLoading', () => {
+    const centered = {
+      justifyContent: 'center',
+      flex: 1,
+      backgroundColor: '#f7f7f7',
+    };
+
+    return (
+      <View style={centered}>
+        <FeedItemCard
+          title={'Promised Land'}
+          channelType={'Series'}
+          images={'https://picsum.photos/600/400/?random'}
+          isLoading
+        />
+      </View>
+    );
+  })
+  .add('With icon', () => {
+    const centered = {
+      justifyContent: 'center',
+      flex: 1,
+      backgroundColor: '#f7f7f7',
+    };
+    return (
+      <View style={centered}>
+        <FeedItemCard
+          title={'Promised Land'}
+          channelType={'Series'}
+          channelTypeIcon={'video'}
+          images={'https://picsum.photos/600/400/?random'}
+          backgroundColor={'salmon'}
+        />
+      </View>
+    );
+  })
+  .add('With dark backgroundColor', () => {
+    const centered = {
+      justifyContent: 'center',
+      flex: 1,
+      backgroundColor: '#f7f7f7',
+    };
+    return (
+      <View style={centered}>
+        <FeedItemCard
+          title={'Promised Land'}
+          channelType={'Series'}
+          images={'https://picsum.photos/600/400/?random'}
+          backgroundColor={'salmon'}
+          isLight={false}
+        />
+      </View>
+    );
+  })
+  .add('With isLight and light backgroundColor', () => {
+    const centered = {
+      justifyContent: 'center',
+      flex: 1,
+      backgroundColor: '#f7f7f7',
+    };
+    return (
+      <View style={centered}>
+        <FeedItemCard
+          title={'Promised Land'}
+          channelType={'Series'}
+          images={'https://picsum.photos/600/400/?random'}
+          backgroundColor={'papayawhip'}
+          isLight
+        />
+      </View>
+    );
+  });
+// .add('As liked', () => {
+//   const centered = {
+//     justifyContent: 'center',
+//     flex: 1,
+//     backgroundColor: '#f7f7f7',
+//   };
+//   return (
+//     <View style={centered}>
+//       <FeedItemCard
+//         title={'Promised Land'}
+//         category={'Series'}
+//         images={'https://picsum.photos/600/400/?random'}
+//         isLiked
+//       />
+//     </View>
+//   );
+// })
+// .add('As liked with backgroundColor', () => {
+//   const centered = {
+//     justifyContent: 'center',
+//     flex: 1,
+//     backgroundColor: '#f7f7f7',
+//   };
+//   return (
+//     <View style={centered}>
+//       <FeedItemCard
+//         title={'Promised Land'}
+//         category={'Series'}
+//         images={'https://picsum.photos/600/400/?random'}
+//         backgroundColor={'salmon'}
+//         isLight={false}
+//         isLiked
+//       />
+//     </View>
+//   );
+// })
+// .add('As liked with isLight and light backgroundColor', () => {
+//   const centered = {
+//     justifyContent: 'center',
+//     flex: 1,
+//     backgroundColor: '#f7f7f7',
+//   };
+//   return (
+//     <View style={centered}>
+//       <FeedItemCard
+//         title={'Promised Land'}
+//         category={'Series'}
+//         images={'https://picsum.photos/600/400/?random'}
+//         backgroundColor={'papayawhip'}
+//         isLight
+//         isLiked
+//       />
+//     </View>
+//   );
+// });
diff --git a/apolloschurchapp/src/ui/FeedItemCard/FeedItemCard.tests.js b/apolloschurchapp/src/ui/FeedItemCard/FeedItemCard.tests.js
new file mode 100644
index 0000000..9371bfe
--- /dev/null
+++ b/apolloschurchapp/src/ui/FeedItemCard/FeedItemCard.tests.js
@@ -0,0 +1,146 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import FeedItemCard from '.';
+
+describe('the FeedItemCard component', () => {
+  it('should render', () => {
+    const tree = renderer.create(
+      <Providers>
+        <FeedItemCard
+          title={'Boom'}
+          channelType={'What'}
+          images={[
+            {
+              uri: 'https://picsum.photos/600/400/?random',
+              width: 600,
+              height: 400,
+            },
+          ]}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render with an icon', () => {
+    const tree = renderer.create(
+      <Providers>
+        <FeedItemCard
+          title={'Boom'}
+          channelType={'What'}
+          channelTypeIcon={'play'}
+          images={[
+            {
+              uri: 'https://picsum.photos/600/400/?random',
+              width: 600,
+              height: 400,
+            },
+          ]}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render with inverted (light) font colors', () => {
+    const tree = renderer.create(
+      <Providers>
+        <FeedItemCard
+          title={'Boom'}
+          channelType={'What'}
+          images={[
+            {
+              uri: 'https://picsum.photos/600/400/?random',
+              width: 600,
+              height: 400,
+            },
+          ]}
+          isLight={false}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should accept a different backgroundColor', () => {
+    const tree = renderer.create(
+      <Providers>
+        <FeedItemCard
+          title={'Boom'}
+          channelType={'What'}
+          images={[
+            {
+              uri: 'https://picsum.photos/600/400/?random',
+              width: 600,
+              height: 400,
+            },
+          ]}
+          backgroundColor={'salmon'}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render text correctly with isLight', () => {
+    const tree = renderer.create(
+      <Providers>
+        <FeedItemCard
+          title={'Boom'}
+          channelType={'What'}
+          images={[
+            {
+              uri: 'https://picsum.photos/600/400/?random',
+              width: 600,
+              height: 400,
+            },
+          ]}
+          isLight
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  // it('should render as liked', () => {
+  //   const tree = renderer.create(
+  //     <Providers>
+  //       <FeedItemCard
+  //         title={'Boom'}
+  //         category={'What'}
+  //         images={[
+  //           {
+  //             uri: 'https://picsum.photos/600/400/?random',
+  //             width: 600,
+  //             height: 400,
+  //           },
+  //         ]}
+  //         isLiked
+  //       />
+  //     </Providers>
+  //   );
+  //   expect(tree).toMatchSnapshot();
+  // });
+  it('should accept and render passed in styles', () => {
+    const cardDimensions = {
+      height: 400,
+      width: '92%',
+    };
+
+    const tree = renderer.create(
+      <Providers>
+        <FeedItemCard
+          title={'Boom'}
+          channelType={'What'}
+          images={[
+            {
+              uri: 'https://picsum.photos/600/400/?random',
+              width: 600,
+              height: 400,
+            },
+          ]}
+          style={cardDimensions}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/FeedItemCard/index.js b/apolloschurchapp/src/ui/FeedItemCard/index.js
new file mode 100644
index 0000000..b40c3a1
--- /dev/null
+++ b/apolloschurchapp/src/ui/FeedItemCard/index.js
@@ -0,0 +1,93 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import { compose, pure } from 'recompose';
+import { startCase, toLower } from 'lodash';
+
+import { withThemeMixin, withTheme } from 'apolloschurchapp/src/ui/theme';
+import Icon from 'apolloschurchapp/src/ui/Icon';
+import ChannelLabel from 'apolloschurchapp/src/ui/ChannelLabel';
+import GradientOverlayImage from 'apolloschurchapp/src/ui/GradientOverlayImage';
+import Card, { CardContent, CardActions } from 'apolloschurchapp/src/ui/Card';
+import { H3 } from 'apolloschurchapp/src/ui/typography';
+// import ConnectedImage from 'apolloschurchapp/src/ui/ConnectedImage';
+// import ProgressiveImage from 'apolloschurchapp/src/ui/ProgressiveImage';
+
+// import LikeButton from './LikeButton';
+
+const enhance = compose(
+  pure,
+  withThemeMixin(({ isLight }) => ({
+    type: isLight ? 'light' : 'dark',
+  })),
+  withTheme()
+);
+
+const FeedItemCard = enhance(
+  ({
+    images,
+    title,
+    channelType,
+    channelTypeIcon,
+    isLoading,
+    isLight,
+    isLiked,
+    backgroundColor,
+    theme,
+    transitionKey,
+    id,
+    ...otherProps
+  }) => (
+    <Card isLoading={isLoading} cardColor={backgroundColor} {...otherProps}>
+      <GradientOverlayImage
+        isLoading={isLoading}
+        source={images}
+        overlayColor={backgroundColor}
+      />
+      <CardContent>
+        <H3 isLoading={isLoading}>{title}</H3>
+      </CardContent>
+      <CardActions>
+        <ChannelLabel
+          label={startCase(toLower(channelType))}
+          icon={channelTypeIcon}
+          isLoading={isLoading}
+          withFlex
+        />
+        <Icon
+          name={isLiked ? 'like-solid' : 'like'}
+          size={theme.helpers.rem(1.2)}
+          fill={theme.colors.text.primary}
+          isLoading={isLoading}
+        />
+      </CardActions>
+    </Card>
+  )
+);
+
+const sourcePropType = PropTypes.oneOfType([
+  PropTypes.arrayOf(
+    PropTypes.shape({
+      uri: PropTypes.string,
+    })
+  ),
+  PropTypes.string,
+]);
+
+FeedItemCard.propTypes = {
+  title: PropTypes.string.isRequired,
+  images: sourcePropType,
+  channelType: PropTypes.string,
+  channelTypeIcon: PropTypes.string,
+  isLoading: PropTypes.bool,
+  isLiked: PropTypes.bool,
+  isLight: PropTypes.bool,
+  backgroundColor: PropTypes.string,
+  style: PropTypes.any, // eslint-disable-line
+};
+
+FeedItemCard.defaultProps = {
+  isLight: true,
+  channelTypeIcon: null,
+};
+
+export default FeedItemCard;
diff --git a/apolloschurchapp/src/ui/FeedView/FeedView.stories.js b/apolloschurchapp/src/ui/FeedView/FeedView.stories.js
new file mode 100644
index 0000000..e1f3cb6
--- /dev/null
+++ b/apolloschurchapp/src/ui/FeedView/FeedView.stories.js
@@ -0,0 +1,63 @@
+import React from 'react';
+import { storiesOf } from '@storybook/react-native';
+
+import FeedView from '.';
+
+storiesOf('FeedView', module).add('Example', () => (
+  <FeedView
+    content={[
+      {
+        node: {
+          id: '1',
+          title: "Will I get to shake Jesus' hand?",
+          coverImage: [
+            {
+              uri: 'https://picsum.photos/600/400/?random',
+              width: 600,
+              height: 400,
+            },
+          ],
+          theme: {
+            isLight: true,
+            colors: {
+              background: {
+                paper: '#fa8072',
+              },
+            },
+          },
+          parentChannel: {
+            id: '01',
+            name: 'eschatology',
+            iconName: 'like',
+          },
+        },
+      },
+      {
+        node: {
+          id: '2',
+          title: 'Where is the new Jerusalem anyways?',
+          coverImage: [
+            {
+              uri: 'https://picsum.photos/600/400/?random',
+              width: 600,
+              height: 400,
+            },
+          ],
+          theme: {
+            isLight: true,
+            colors: {
+              background: {
+                paper: '#e9967a',
+              },
+            },
+          },
+          parentChannel: {
+            id: '02',
+            name: 'eschatology',
+            iconName: 'like',
+          },
+        },
+      },
+    ]}
+  />
+));
diff --git a/apolloschurchapp/src/ui/FeedView/FeedView.tests.js b/apolloschurchapp/src/ui/FeedView/FeedView.tests.js
new file mode 100644
index 0000000..ce1b3f5
--- /dev/null
+++ b/apolloschurchapp/src/ui/FeedView/FeedView.tests.js
@@ -0,0 +1,147 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+import { TouchableWithoutFeedback } from 'react-native';
+import { get } from 'lodash';
+
+import Providers from 'apolloschurchapp/src/Providers';
+import FeedItemCard from 'apolloschurchapp/src/ui/FeedItemCard';
+
+import FeedView from '.';
+
+describe('The FeedView component', () => {
+  it('renders correctly', () => {
+    const tree = renderer.create(
+      <Providers>
+        <FeedView
+          content={[
+            {
+              node: {
+                id: '1',
+                title: "Will I get to shake Jesus' hand?",
+                coverImage: [
+                  {
+                    uri: 'https://picsum.photos/600/400/?random',
+                    width: 600,
+                    height: 400,
+                  },
+                ],
+                theme: {
+                  isLight: true,
+                  colors: {
+                    background: {
+                      paper: '#fa8072',
+                    },
+                  },
+                },
+                parentChannel: {
+                  id: '01',
+                  name: 'eschatology',
+                  iconName: 'like',
+                },
+              },
+            },
+            {
+              node: {
+                id: '2',
+                title: 'Where is the new Jerusalem anyways?',
+                coverImage: [
+                  {
+                    uri: 'https://picsum.photos/600/400/?random',
+                    width: 600,
+                    height: 400,
+                  },
+                ],
+                theme: {
+                  isLight: true,
+                  colors: {
+                    background: {
+                      paper: '#e9967a',
+                    },
+                  },
+                },
+                parentChannel: {
+                  id: '02',
+                  name: 'eschatology',
+                  iconName: 'like',
+                },
+              },
+            },
+          ]}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('renders empty state', () => {
+    const tree = renderer.create(
+      <Providers>
+        <FeedView isLoading content={[]} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('handles a renderItem prop', () => {
+    const renderItem = (item) => {
+      const theItem = get(item, 'item', {});
+      return (
+        <TouchableWithoutFeedback>
+          <FeedItemCard
+            id={theItem.node.id}
+            title={theItem.node.title || theItem.node.name || ' '}
+            channelType={theItem.node.parentChannel.name}
+            channelTypeIcon={theItem.node.parentChannel.iconName}
+            images={theItem.node.coverImage.sources}
+            isLoading={theItem.node.isLoading}
+          />
+        </TouchableWithoutFeedback>
+      );
+    };
+
+    const tree = renderer.create(
+      <Providers>
+        <FeedView
+          isLoading
+          content={[
+            {
+              node: {
+                id: '1',
+                title: "Will I get to shake Jesus' hand?",
+                coverImage: [
+                  {
+                    uri: 'https://picsum.photos/600/400/?random',
+                    width: 600,
+                    height: 400,
+                  },
+                ],
+                theme: {
+                  isLight: true,
+                  colors: {
+                    background: {
+                      paper: '#fa8072',
+                    },
+                  },
+                },
+                parentChannel: {
+                  id: '01',
+                  name: 'eschatology',
+                  iconName: 'like',
+                },
+              },
+            },
+          ]}
+          renderItem={renderItem}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('passes an onPressItem prop', () => {
+    const onPress = () => {};
+    const tree = renderer.create(
+      <Providers>
+        <FeedView isLoading content={[]} onPressItem={onPress} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/FeedView/index.js b/apolloschurchapp/src/ui/FeedView/index.js
new file mode 100644
index 0000000..c1a2c1b
--- /dev/null
+++ b/apolloschurchapp/src/ui/FeedView/index.js
@@ -0,0 +1,173 @@
+import React, { Component } from 'react';
+import { FlatList } from 'react-native';
+import PropTypes from 'prop-types';
+import { pure, compose, branch, withProps, defaultProps } from 'recompose';
+import { get } from 'lodash';
+
+import FeedItemCard from 'apolloschurchapp/src/ui/FeedItemCard';
+import { enhancer as mediaQuery } from 'apolloschurchapp/src/ui/MediaQuery';
+import { withTheme } from 'apolloschurchapp/src/ui/theme';
+import { ErrorCard } from 'apolloschurchapp/src/ui/Card';
+import TouchableScale from 'apolloschurchapp/src/ui/TouchableScale';
+
+const StyledFlatList = compose(
+  withTheme(({ theme: { helpers: { verticalRhythm } } } = {}) => ({
+    contentContainerStyle: {
+      paddingVertical: verticalRhythm(0.3125),
+    }, // Android padding fix 😩
+  }))
+)(FlatList);
+
+class FeedView extends Component {
+  static propTypes = {
+    content: PropTypes.array, // eslint-disable-line
+    error: PropTypes.oneOfType([
+      PropTypes.bool,
+      PropTypes.string,
+      PropTypes.object,
+    ]),
+    fetchMore: PropTypes.func,
+    isLoading: PropTypes.bool,
+    keyExtractor: PropTypes.func,
+    ListEmptyComponent: PropTypes.func,
+    numColumns: PropTypes.number,
+    onEndReachedThreshold: PropTypes.number,
+    onPressItem: PropTypes.func,
+    refetch: PropTypes.func,
+    renderEmptyState: PropTypes.func,
+    renderItem: PropTypes.func,
+  };
+
+  static defaultProps = {
+    isLoading: false,
+    // renderItem: this.defaultFeedItemRenderer,
+    onEndReachedThreshold: 0.7,
+    keyExtractor: (item) => item && item.id,
+    content: [],
+    refetch: undefined,
+    fetchMore: undefined,
+  };
+
+  refetchHandler = ({ isLoading, refetch }) =>
+    refetch && ((...args) => !isLoading && refetch(...args));
+
+  fetchMoreHandler = ({ fetchMore, error, isLoading }) =>
+    fetchMore && ((...args) => !isLoading && !error && fetchMore(...args));
+
+  renderItem = ({ item }) => {
+    if (this.props.renderItem) {
+      return this.props.renderItem({ item });
+    }
+    return (
+      // These are all props of FeedItemCard but they do not have data coming
+      // back yet. So I moved them here for safe keeping.
+      // TODO: Move them back when the data is ready.
+      <TouchableScale onPress={() => this.props.onPressItem({ ...item })}>
+        <FeedItemCard
+          id={get(item, 'id')}
+          title={get(item, 'title') || get(item, 'name') || ' '}
+          isLiked={get(item, 'isLiked')}
+          channelType={get(item, 'parentChannel.name')}
+          channelTypeIcon={get(item, 'parentChannel.iconName')}
+          images={get(item, 'coverImage.sources')}
+          isLoading={get(item, 'isLoading')}
+          isLight={get(item, 'theme.type', '').toLowerCase() !== 'dark'}
+          backgroundColor={get(item, 'theme.colors.paper')}
+        />
+      </TouchableScale>
+    );
+  };
+
+  render() {
+    const {
+      content,
+      error,
+      fetchMore,
+      isLoading,
+      keyExtractor,
+      ListEmptyComponent,
+      numColumns,
+      onEndReachedThreshold,
+      refetch,
+      renderEmptyState,
+      renderItem,
+      ...otherProps
+    } = this.props;
+    return (
+      <StyledFlatList
+        {...otherProps}
+        data={content}
+        keyExtractor={keyExtractor}
+        ListEmptyComponent={
+          error && !isLoading && (!content || !content.length) ? (
+            <ErrorCard error={error} />
+          ) : (
+            ListEmptyComponent
+          )
+        }
+        numColumns={numColumns}
+        onEndReached={this.fetchMoreHandler({ fetchMore, error, isLoading })}
+        onEndReachedThreshold={onEndReachedThreshold}
+        onRefresh={this.refetchHandler({ isLoading, refetch })}
+        refreshing={isLoading}
+        renderItem={this.renderItem}
+      />
+    );
+  }
+}
+
+const defaultLoadingState = {
+  id: 'fakeId0',
+  isLoading: true,
+  title: '',
+  channelType: '',
+  coverImage: [],
+  theme: {
+    isLight: '',
+    colors: {
+      background: {
+        paper: '',
+      },
+    },
+  },
+  parentChannel: {
+    id: '',
+    name: '',
+  },
+};
+
+const generateLoadingStateData = (
+  numberOfItems = 1,
+  loadingStateObject = defaultLoadingState
+) => {
+  const itemData = () => ({ ...loadingStateObject });
+
+  const loadingStateData = [];
+
+  while (loadingStateData.length < numberOfItems) {
+    const newData = itemData();
+    newData.id = `fakeId${loadingStateData.length}`;
+    loadingStateData.push(newData);
+  }
+
+  return loadingStateData;
+};
+
+const enhance = compose(
+  pure,
+  branch(
+    ({ isLoading, content }) => isLoading && !content.length,
+    withProps(({ loadingStateObject }) => ({
+      isLoading: true,
+      content: generateLoadingStateData(10, loadingStateObject),
+      fetchMore: () => {},
+    }))
+  ),
+  mediaQuery(
+    ({ md }) => ({ maxWidth: md }),
+    defaultProps({ numColumns: 1 }),
+    defaultProps({ numColumns: 2 })
+  )
+);
+
+export default enhance(FeedView);
diff --git a/apolloschurchapp/src/ui/FlexedView/FlexedView.stories.js b/apolloschurchapp/src/ui/FlexedView/FlexedView.stories.js
new file mode 100644
index 0000000..32290a0
--- /dev/null
+++ b/apolloschurchapp/src/ui/FlexedView/FlexedView.stories.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import { storiesOf } from '@storybook/react-native';
+
+import { H1 } from 'apolloschurchapp/src/ui/typography';
+import styled from 'apolloschurchapp/src/ui/styled';
+
+import FlexedView from '.';
+
+storiesOf('FlexedView', module).add('Example', () => {
+  const FlexedSalmonView = styled({
+    backgroundColor: 'salmon',
+  })(FlexedView);
+
+  return (
+    <FlexedView>
+      <FlexedSalmonView>
+        <H1>This box is in a FlexedView</H1>
+      </FlexedSalmonView>
+    </FlexedView>
+  );
+});
diff --git a/apolloschurchapp/src/__tests__/LandingScreen.tests.js b/apolloschurchapp/src/ui/FlexedView/FlexedView.tests.js
similarity index 58%
rename from apolloschurchapp/src/__tests__/LandingScreen.tests.js
rename to apolloschurchapp/src/ui/FlexedView/FlexedView.tests.js
index 37abb80..b248969 100644
--- a/apolloschurchapp/src/__tests__/LandingScreen.tests.js
+++ b/apolloschurchapp/src/ui/FlexedView/FlexedView.tests.js
@@ -1,13 +1,15 @@
 import React from 'react';
 import renderer from 'react-test-renderer';
-import { Providers } from '@apollosproject/ui-kit';
-import LandingScreen from '../LandingScreen';
 
-describe('the LandingScreen', () => {
+import Providers from 'apolloschurchapp/src/Providers';
+
+import FlexedView from '.';
+
+describe('the FlexedView component', () => {
   it('should render', () => {
     const tree = renderer.create(
       <Providers>
-        <LandingScreen />
+        <FlexedView />
       </Providers>
     );
     expect(tree).toMatchSnapshot();
diff --git a/apolloschurchapp/src/ui/FlexedView/index.js b/apolloschurchapp/src/ui/FlexedView/index.js
new file mode 100644
index 0000000..e1fe7aa
--- /dev/null
+++ b/apolloschurchapp/src/ui/FlexedView/index.js
@@ -0,0 +1,12 @@
+import { View } from 'react-native';
+
+import styled from 'apolloschurchapp/src/ui/styled';
+
+const FlexedView = styled(
+  {
+    flex: 1,
+  },
+  'FlexedView'
+)(View);
+
+export default FlexedView;
diff --git a/apolloschurchapp/src/ui/GradientOverlayImage/GradientOverlayImage.stories.js b/apolloschurchapp/src/ui/GradientOverlayImage/GradientOverlayImage.stories.js
new file mode 100644
index 0000000..b8dd80b
--- /dev/null
+++ b/apolloschurchapp/src/ui/GradientOverlayImage/GradientOverlayImage.stories.js
@@ -0,0 +1,15 @@
+import React from 'react';
+import { storiesOf } from '@storybook/react-native';
+
+import GradientOverlayImage from '.';
+
+storiesOf('GradientOverlayImage', module)
+  .add('Default', () => (
+    <GradientOverlayImage source={'https://picsum.photos/600/400/?random'} />
+  ))
+  .add('With Overlay', () => (
+    <GradientOverlayImage
+      source={'https://picsum.photos/600/400/?random'}
+      overlayColor={'salmon'}
+    />
+  ));
diff --git a/apolloschurchapp/src/ui/GradientOverlayImage/GradientOverlayImage.tests.js b/apolloschurchapp/src/ui/GradientOverlayImage/GradientOverlayImage.tests.js
new file mode 100644
index 0000000..0a86354
--- /dev/null
+++ b/apolloschurchapp/src/ui/GradientOverlayImage/GradientOverlayImage.tests.js
@@ -0,0 +1,42 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import GradientOverlayImage from '.';
+
+describe('the GradientOverlayImage component', () => {
+  it('should render', () => {
+    const tree = renderer.create(
+      <Providers>
+        <GradientOverlayImage
+          source={[
+            {
+              uri: 'https://picsum.photos/600/400/?random',
+              width: 600,
+              height: 400,
+            },
+          ]}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render with an overlayColor', () => {
+    const tree = renderer.create(
+      <Providers>
+        <GradientOverlayImage
+          source={[
+            {
+              uri: 'https://picsum.photos/600/400/?random',
+              width: 600,
+              height: 400,
+            },
+          ]}
+          overlayColor={'salmon'}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/GradientOverlayImage/index.js b/apolloschurchapp/src/ui/GradientOverlayImage/index.js
new file mode 100644
index 0000000..01be2b1
--- /dev/null
+++ b/apolloschurchapp/src/ui/GradientOverlayImage/index.js
@@ -0,0 +1,101 @@
+import React from 'react';
+import { StyleSheet, View } from 'react-native';
+import LinearGradient from 'react-native-linear-gradient';
+import PropTypes from 'prop-types';
+import { pure } from 'recompose';
+import Color from 'color';
+
+import styled from 'apolloschurchapp/src/ui/styled';
+import ConnectedImage from 'apolloschurchapp/src/ui/ConnectedImage';
+
+const Overlay = styled(StyleSheet.absoluteFillObject)(LinearGradient);
+
+const getGradientValues = (overlayColor) => {
+  const values = {
+    colors: [
+      `${Color(overlayColor)
+        .fade(1)
+        .string()}`,
+      overlayColor,
+    ],
+    start: { x: 0, y: 0 },
+    end: { x: 0, y: 1 },
+    locations: [0.3, 1],
+  };
+
+  return values;
+};
+
+const Container = styled(({ theme }) => ({
+  width: '100%',
+  backgroundColor: theme.colors.background.inactive,
+}))(View);
+
+const DefaultImageComponent = styled({
+  width: '100%',
+  resizeMode: 'cover',
+})(ConnectedImage);
+
+const NoImagePlaceholder = styled(({ theme }) => ({
+  width: '100%',
+  aspectRatio: 1,
+  backgroundColor: theme.colors.background.inactive,
+}))(View);
+
+const GradientOverlayImage = pure(
+  ({
+    source: imageSource,
+    overlayColor,
+    ImageComponent: ComponentProp,
+    isLoading,
+    ...otherProps
+  }) => {
+    const Component = ComponentProp || DefaultImageComponent;
+    return (
+      <Container>
+        {imageSource || isLoading ? (
+          <Component
+            source={imageSource}
+            isLoading={isLoading}
+            {...otherProps}
+          />
+        ) : (
+          <NoImagePlaceholder />
+        )}
+        {overlayColor ? (
+          <Overlay
+            colors={getGradientValues(overlayColor).colors}
+            start={getGradientValues(overlayColor).start}
+            end={getGradientValues(overlayColor).end}
+            locations={getGradientValues(overlayColor).locations}
+          />
+        ) : null}
+      </Container>
+    );
+  }
+);
+
+const source = PropTypes.oneOfType([
+  PropTypes.arrayOf(
+    PropTypes.shape({
+      uri: PropTypes.string,
+      label: PropTypes.string,
+      width: PropTypes.number,
+      height: PropTypes.number,
+    })
+  ),
+  PropTypes.string,
+]);
+
+GradientOverlayImage.propTypes = {
+  source,
+  overlayColor: PropTypes.string,
+  ImageComponent: PropTypes.func,
+  maintainAspectRatio: PropTypes.bool,
+};
+
+GradientOverlayImage.defaultProps = {
+  maintainAspectRatio: true,
+};
+
+export default GradientOverlayImage;
diff --git a/apolloschurchapp/src/ui/HTMLView/HTMLView.stories.js b/apolloschurchapp/src/ui/HTMLView/HTMLView.stories.js
new file mode 100644
index 0000000..0d69e14
--- /dev/null
+++ b/apolloschurchapp/src/ui/HTMLView/HTMLView.stories.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import { ScrollView } from 'react-native';
+import { storiesOf } from '@storybook/react-native';
+
+import HTMLView from '.';
+
+storiesOf('HTMLView', module)
+  .add('Example', () => (
+    <ScrollView>
+      <HTMLView>
+        {
+          "<p>I sat on my couch next to my high school <a href='https://newspringfuse.com/groups' target='_blank'>Fuse Group</a>, silently fuming at their inability to put their phones down during Bible study. Finally, I spoke up, teasing one of the girls in a tone that clearly said, &ldquo;I&rsquo;m not actually kidding.&rdquo;&nbsp;</p>\n\n<p>A few days later, I was in the car with my sister, and as I sat in the passenger seat responding to emails, I heard her laugh and say, &ldquo;You always mumble when you are typing. Stop doing that.&rdquo;&nbsp;</p>\n\n<p>&ldquo;Sorry,&rdquo; I responded. &ldquo;I just don&rsquo;t want people to think I&rsquo;m ignoring them when I&rsquo;m typing.&rdquo;</p>\n\n<p>But the truth is, I am ignoring them! In my head, this behavior is totally acceptable. I tell myself I&rsquo;m tending to my priorities in order, and in doing so, I send a message to the person in front of me that she is of lesser importance.</p>\n\n<blockquote>\n<p>My phone is the primary outlet that distracts me from people who need my attention.</p>\n</blockquote>\n\n<p>I quickly get frustrated when I am the one on the outside, but how often to I shut others out during my own social media binges or email frenzies? Just like my girls, I&rsquo;m learning that my phone is the primary outlet that distracts me from people who need my attention.</p>\n\n<h3>Why Being Present Matters</h3>\n\n<p>There is nothing wrong with using our phones &mdash; as long as we remember that the best investment we can make is to invest in our relationships with Jesus and each other. We were created for <a href='http://newspring.cc/community' target='_blank'>community</a> by God, who exists in community as Father, Son, and Holy Spirit (John 1:1-2, Genesis 2:18).&nbsp;</p>\n\n<p>Our phones help us stay connected, but they are not the foundation of all connection. If we&rsquo;re honest, our phones are much quicker to distract and disengage us from the people right in front of us.&nbsp;</p>\n\n<p>Jesus said loving God and loving others is greatest of all God&rsquo;s commandments (Matthew 22:38-40). And, after trying everything the world had to offer, King Solomon reminded his people that their relationships with God and others are the only things that really matter (Ecclesiastes 2:24-26, Ecclesiastes 3:9).&nbsp;</p>\n\n<blockquote>\n<p>Greater love has no one than this: to lay down one&rsquo;s phone for one&rsquo;s loved ones.</p>\n</blockquote>\n\n<p>So the next time we feel like we have to text back immediately or tweet before someone else does, consider:&nbsp;</p>\n\n<ul>\n\t<li>Am I putting others before myself right now?</li>\n\t<li>How can I love the people around me if I&rsquo;m not even paying attention to them?</li>\n\t<li>What if Jesus wants to speak through me, but I&rsquo;ve got my nose stuck in my phone?&nbsp;</li>\n</ul>\n\n<p>The world won&rsquo;t implode if we don&rsquo;t reply to every text or email immediately. And that Instagram picture doesn&rsquo;t need to go up ASAP. If it&rsquo;s already been a week between posts, what&rsquo;s a few more hours? We love everyone better &mdash; our friends to our coworkers to our social media followers &mdash; when we give them the gift of our full attention.&nbsp;</p>\n\n<p>I can almost hear Jesus saying, &ldquo;Greater love has no one than this: to lay down one&rsquo;s phone for one&rsquo;s loved ones&rdquo;&nbsp; (John 15:13).&nbsp;</p>\n\n<h3>Four Ways To Stay Away From Your Phone And Be Intentionally Present</h3>\n\n<p><a href='http://newspring.cc/christmas' target='_blank'>This holiday season</a>, we will have more opportunities to be around friends and family than usual. So let&rsquo;s make the most of each minute. The following are some tips can help us all be a little more present.&nbsp;&nbsp;</p>\n\n<ol>\n\t<li>Turn your phone off, leave it in the car, or put it in airplane mode. Habitual notification checks can take a break.</li>\n\t<li>Talk about something other than yourself. Ask someone else about their life (job, school, kids).</li>\n\t<li>Look for opportunities to encourage someone. Ask the Holy Spirit to speak through you and help you love people.</li>\n\t<li>Ask Jesus to keep your heart interested and engaged in what really matters. He wants to help!</li>\n</ol>\n\n<p>Intentionally taking advantage of time with loved ones sometimes does require sacrificing our own immediate desires or comforts, but that&rsquo;s what we are commanded to do (Philippians 2:3).&nbsp;</p>\n\n<p>Take pictures, but don&rsquo;t let the only memory be a digital one. The positive outcome of interactions should be more than Instagram likes. Unplug from social media, choose to be present, and you will be surprised at the good it does for your heart and the hearts of those around you.&nbsp;</p>"
+        }
+      </HTMLView>
+    </ScrollView>
+  ))
+  .add('isLoading', () => (
+    <ScrollView>
+      <HTMLView isLoading />
+    </ScrollView>
+  ));
diff --git a/apolloschurchapp/src/ui/HTMLView/HTMLView.tests.js b/apolloschurchapp/src/ui/HTMLView/HTMLView.tests.js
new file mode 100644
index 0000000..a0eb6ec
--- /dev/null
+++ b/apolloschurchapp/src/ui/HTMLView/HTMLView.tests.js
@@ -0,0 +1,191 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import HTMLView from '.';
+
+describe('the HTMLView component', () => {
+  it('should render an H1', () => {
+    const tree = renderer.create(
+      <Providers>
+        <HTMLView>{'<h1>Testings</h1>'}</HTMLView>
+      </Providers>
+    );
+
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render an H2', () => {
+    const tree = renderer.create(
+      <Providers>
+        <HTMLView>{'<h2>Testings</h2>'}</HTMLView>
+      </Providers>
+    );
+
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render an H3', () => {
+    const tree = renderer.create(
+      <Providers>
+        <HTMLView>{'<h3>Testings</h3>'}</HTMLView>
+      </Providers>
+    );
+
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render an H4', () => {
+    const tree = renderer.create(
+      <Providers>
+        <HTMLView>{'<h4>Testings</h4>'}</HTMLView>
+      </Providers>
+    );
+
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render an H5', () => {
+    const tree = renderer.create(
+      <Providers>
+        <HTMLView>{'<h5>Testings</h5>'}</HTMLView>
+      </Providers>
+    );
+
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render an H6', () => {
+    const tree = renderer.create(
+      <Providers>
+        <HTMLView>{'<h6>Testings</h6>'}</HTMLView>
+      </Providers>
+    );
+
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a paragraph', () => {
+    const tree = renderer.create(
+      <Providers>
+        <HTMLView>{'<p>Testings</p>'}</HTMLView>
+      </Providers>
+    );
+
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render italic text', () => {
+    const tree = renderer.create(
+      <Providers>
+        <HTMLView>{'<p><em>Testings</em></p>'}</HTMLView>
+      </Providers>
+    );
+
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render bold text', () => {
+    const tree = renderer.create(
+      <Providers>
+        <HTMLView>{'<p><strong>Testings</strong></p>'}</HTMLView>
+      </Providers>
+    );
+
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a block quote', () => {
+    const tree = renderer.create(
+      <Providers>
+        <HTMLView>
+          {'<p>Testings</p><blockquote>Testings</blockquote>'}
+        </HTMLView>
+      </Providers>
+    );
+
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a list', () => {
+    const tree = renderer.create(
+      <Providers>
+        <HTMLView>{'<ul><li>Testings</li><li>Testings</li></ul>'}</HTMLView>
+      </Providers>
+    );
+
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a link', () => {
+    const tree = renderer.create(
+      <Providers>
+        <HTMLView>
+          {'<p>Testings <a href="http://wwww.google.com">Google</a></p>'}
+        </HTMLView>
+      </Providers>
+    );
+
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render handle relative links', () => {
+    const tree = renderer.create(
+      <Providers>
+        <HTMLView>
+          {'<p>Testings <a href="//google.com">Google</a></p>'}
+        </HTMLView>
+      </Providers>
+    );
+
+    expect(tree).toMatchSnapshot();
+  });
+  it('strips out badly formatted links', () => {
+    const tree = renderer.create(
+      <Providers>
+        <HTMLView>{"<p><a href='{page_536525}'>Bad link</a></p>"}</HTMLView>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render an image', () => {
+    const tree = renderer.create(
+      <Providers>
+        <HTMLView>
+          {'<img src="https://placeholdit.co/i/150x150?bg=eeeeee&fc=577084" />'}
+        </HTMLView>
+      </Providers>
+    );
+
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a line break (br)', () => {
+    const tree = renderer.create(
+      <Providers>
+        <HTMLView>{'<p>Testings</p><br>'}</HTMLView>
+      </Providers>
+    );
+
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a loading state', () => {
+    const tree = renderer.create(
+      <Providers>
+        <HTMLView isLoading />
+      </Providers>
+    );
+
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render example HTML', () => {
+    const tree = renderer.create(
+      <Providers>
+        <HTMLView>
+          {
+            "<p>I sat on my couch next to my high school <a href='https://newspringfuse.com/groups' target='_blank'>Fuse Group</a>, silently fuming at their inability to put their phones down during Bible study. Finally, I spoke up, teasing one of the girls in a tone that clearly said, &ldquo;I&rsquo;m not actually kidding.&rdquo;&nbsp;</p>\n\n<p>A few days later, I was in the car with my sister, and as I sat in the passenger seat responding to emails, I heard her laugh and say, &ldquo;You always mumble when you are typing. Stop doing that.&rdquo;&nbsp;</p>\n\n<p>&ldquo;Sorry,&rdquo; I responded. &ldquo;I just don&rsquo;t want people to think I&rsquo;m ignoring them when I&rsquo;m typing.&rdquo;</p>\n\n<p>But the truth is, I am ignoring them! In my head, this behavior is totally acceptable. I tell myself I&rsquo;m tending to my priorities in order, and in doing so, I send a message to the person in front of me that she is of lesser importance.</p>\n\n<blockquote>\n<p>My phone is the primary outlet that distracts me from people who need my attention.</p>\n</blockquote>\n\n<p>I quickly get frustrated when I am the one on the outside, but how often to I shut others out during my own social media binges or email frenzies? Just like my girls, I&rsquo;m learning that my phone is the primary outlet that distracts me from people who need my attention.</p>\n\n<h3>Why Being Present Matters</h3>\n\n<p>There is nothing wrong with using our phones &mdash; as long as we remember that the best investment we can make is to invest in our relationships with Jesus and each other. We were created for <a href='http://newspring.cc/community' target='_blank'>community</a> by God, who exists in community as Father, Son, and Holy Spirit (John 1:1-2, Genesis 2:18).&nbsp;</p>\n\n<p>Our phones help us stay connected, but they are not the foundation of all connection. If we&rsquo;re honest, our phones are much quicker to distract and disengage us from the people right in front of us.&nbsp;</p>\n\n<p>Jesus said loving God and loving others is greatest of all God&rsquo;s commandments (Matthew 22:38-40). And, after trying everything the world had to offer, King Solomon reminded his people that their relationships with God and others are the only things that really matter (Ecclesiastes 2:24-26, Ecclesiastes 3:9).&nbsp;</p>\n\n<blockquote>\n<p>Greater love has no one than this: to lay down one&rsquo;s phone for one&rsquo;s loved ones.</p>\n</blockquote>\n\n<p>So the next time we feel like we have to text back immediately or tweet before someone else does, consider:&nbsp;</p>\n\n<ul>\n\t<li>Am I putting others before myself right now?</li>\n\t<li>How can I love the people around me if I&rsquo;m not even paying attention to them?</li>\n\t<li>What if Jesus wants to speak through me, but I&rsquo;ve got my nose stuck in my phone?&nbsp;</li>\n</ul>\n\n<p>The world won&rsquo;t implode if we don&rsquo;t reply to every text or email immediately. And that Instagram picture doesn&rsquo;t need to go up ASAP. If it&rsquo;s already been a week between posts, what&rsquo;s a few more hours? We love everyone better &mdash; our friends to our coworkers to our social media followers &mdash; when we give them the gift of our full attention.&nbsp;</p>\n\n<p>I can almost hear Jesus saying, &ldquo;Greater love has no one than this: to lay down one&rsquo;s phone for one&rsquo;s loved ones&rdquo;&nbsp; (John 15:13).&nbsp;</p>\n\n<h3>Four Ways To Stay Away From Your Phone And Be Intentionally Present</h3>\n\n<p><a href='http://newspring.cc/christmas' target='_blank'>This holiday season</a>, we will have more opportunities to be around friends and family than usual. So let&rsquo;s make the most of each minute. The following are some tips can help us all be a little more present.&nbsp;&nbsp;</p>\n\n<ol>\n\t<li>Turn your phone off, leave it in the car, or put it in airplane mode. Habitual notification checks can take a break.</li>\n\t<li>Talk about something other than yourself. Ask someone else about their life (job, school, kids).</li>\n\t<li>Look for opportunities to encourage someone. Ask the Holy Spirit to speak through you and help you love people.</li>\n\t<li>Ask Jesus to keep your heart interested and engaged in what really matters. He wants to help!</li>\n</ol>\n\n<p>Intentionally taking advantage of time with loved ones sometimes does require sacrificing our own immediate desires or comforts, but that&rsquo;s what we are commanded to do (Philippians 2:3).&nbsp;</p>\n\n<p>Take pictures, but don&rsquo;t let the only memory be a digital one. The positive outcome of interactions should be more than Instagram likes. Unplug from social media, choose to be present, and you will be surprised at the good it does for your heart and the hearts of those around you.</p>"
+          }
+        </HTMLView>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should accept an alternative render', () => {
+    const testRenderer = jest.fn();
+    renderer.create(
+      <Providers>
+        <HTMLView renderer={testRenderer}>{'<p>Testings</p>'}</HTMLView>
+      </Providers>
+    );
+
+    expect(testRenderer).toBeCalled();
+  });
+});
diff --git a/apolloschurchapp/src/ui/HTMLView/defaultRenderer.js b/apolloschurchapp/src/ui/HTMLView/defaultRenderer.js
new file mode 100644
index 0000000..6e17c65
--- /dev/null
+++ b/apolloschurchapp/src/ui/HTMLView/defaultRenderer.js
@@ -0,0 +1,128 @@
+import React, { Children } from 'react';
+import { Text, Linking } from 'react-native';
+import { decodeHTML } from 'entities';
+
+import {
+  BodyText,
+  H1,
+  H2,
+  H3,
+  H4,
+  H5,
+  H6,
+  Paragraph,
+  BlockQuote,
+  BulletListItem,
+} from 'apolloschurchapp/src/ui/typography';
+import { ButtonLink } from 'apolloschurchapp/src/ui/Button';
+import ConnectedImage from 'apolloschurchapp/src/ui/ConnectedImage';
+
+const LINE_BREAK = '\n';
+const TEXT_TYPES_THAT_SHOULD_WRAP = [Text, BodyText, ButtonLink];
+
+export const wrapTextChildren = (children, Component = BodyText) => {
+  const newChildren = [];
+  let currentTextChildren = [];
+  Children.toArray(children).forEach((child, i) => {
+    if (TEXT_TYPES_THAT_SHOULD_WRAP.includes(child.type)) {
+      currentTextChildren.push(child);
+    } else {
+      if (currentTextChildren.length) {
+        newChildren.push(
+          // eslint-disable-next-line
+          <Component key={`composed-children-${i}`}>
+            {currentTextChildren}
+          </Component>
+        );
+        currentTextChildren = [];
+      }
+      newChildren.push(child);
+    }
+  });
+  if (currentTextChildren.length) {
+    newChildren.push(
+      <Component key="composed-children">{currentTextChildren}</Component>
+    );
+  }
+  return newChildren;
+};
+
+const defaultRenderer = (node, { children }) => {
+  if (node.type === 'text' && node.data && node.data.trim()) {
+    const text = decodeHTML(node.data);
+    if (!node.parent) {
+      return (
+        <Paragraph>
+          <BodyText>{text}</BodyText>
+        </Paragraph>
+      );
+    }
+    return <Text>{text}</Text>;
+  }
+
+  switch (node.name) {
+    case 'p':
+      return <Paragraph>{wrapTextChildren(children)}</Paragraph>;
+    case 'strong':
+      return <BodyText bold>{children}</BodyText>;
+    case 'em':
+      return <BodyText italic>{children}</BodyText>;
+    case 'blockquote':
+      return <BlockQuote>{wrapTextChildren(children, Text)}</BlockQuote>;
+    case 'h1':
+      return <H1 padded>{wrapTextChildren(children, Text)}</H1>;
+    case 'h2':
+      return <H2 padded>{wrapTextChildren(children, Text)}</H2>;
+    case 'h3':
+      return <H3 padded>{wrapTextChildren(children, Text)}</H3>;
+    case 'h4':
+      return <H4 padded>{wrapTextChildren(children, Text)}</H4>;
+    case 'h5':
+      return <H5 padded>{wrapTextChildren(children, Text)}</H5>;
+    case 'h6':
+      return <H6 padded>{wrapTextChildren(children, Text)}</H6>;
+    case 'ul':
+      return <Paragraph>{children}</Paragraph>;
+    case 'li':
+      return <BulletListItem>{wrapTextChildren(children)}</BulletListItem>;
+    case 'a': {
+      let url = node.attribs && node.attribs.href;
+      url = decodeHTML(url);
+
+      if (url && url.startsWith('//')) {
+        url = `http:${url}`;
+      }
+      if (!url.startsWith('http')) {
+        // we can't currently handle non web-links, so just return regular text instead:
+        return children;
+      }
+      const onPress = () => Linking.openURL(url);
+      if (url) {
+        return <ButtonLink onPress={onPress}>{children}</ButtonLink>;
+      }
+    }
+    /* ignoring fallthrough on the next line because of the conditional return above,
+     * so we handle the edge-case of an <a> tag used w/o a href
+     */
+    case 'img': {
+      const source = {
+        url: node.attribs.src,
+      };
+
+      const imgStyles = {
+        resizeMode: 'contain',
+        width: '100%',
+      };
+
+      return (
+        <ConnectedImage maintainAspectRatio source={source} style={imgStyles} />
+      );
+    }
+    case 'br':
+      return <BodyText>{LINE_BREAK}</BodyText>;
+    default:
+      return children;
+  }
+};
+
+export default defaultRenderer;
diff --git a/apolloschurchapp/src/ui/HTMLView/index.js b/apolloschurchapp/src/ui/HTMLView/index.js
new file mode 100644
index 0000000..ba9cc7c
--- /dev/null
+++ b/apolloschurchapp/src/ui/HTMLView/index.js
@@ -0,0 +1,75 @@
+import React, { PureComponent, cloneElement } from 'react';
+import PropTypes from 'prop-types';
+import { View } from 'react-native';
+import { Parser, DomHandler } from 'htmlparser2';
+
+import { Paragraph as ParagraphPlaceholder } from 'apolloschurchapp/src/ui/Placeholder';
+
+import defaultRenderer from './defaultRenderer';
+
+class HTMLView extends PureComponent {
+  static propTypes = {
+    children: PropTypes.string,
+    renderer: PropTypes.func,
+    isLoading: PropTypes.bool,
+  };
+
+  static defaultProps = {
+    renderer: defaultRenderer,
+  };
+
+  constructor(...args) {
+    super(...args);
+    this.parser = new Parser(
+      new DomHandler(
+        (err, dom) => {
+          this.parsed = this.renderDom(dom);
+        },
+        { normalizeWhitespace: true }
+      )
+    );
+    if (this.props.children) this.parse(this.props.children);
+  }
+
+  componentWillUpdate(props) {
+    this.parse(props.children);
+  }
+
+  parse(html = '') {
+    this.parser.write(html);
+    this.parser.done();
+  }
+
+  renderDom(dom) {
+    return dom
+      .map((node, index) => {
+        let children = [];
+        if (node.children) children = this.renderDom(node.children);
+
+        let renderedNode = this.props.renderer(node, { children });
+        if (
+          !renderedNode &&
+          renderedNode !== null &&
+          this.props.renderer !== defaultRenderer
+        ) {
+          renderedNode = defaultRenderer(node, { children });
+        }
+
+        if (renderedNode && !Array.isArray(renderedNode)) {
+          renderedNode = cloneElement(renderedNode, { key: index });
+        }
+        return renderedNode;
+      })
+      .filter((e) => e !== undefined);
+  }
+
+  render() {
+    return (
+      <ParagraphPlaceholder lineNumber={8} onReady={!this.props.isLoading}>
+        <View>{this.parsed}</View>
+      </ParagraphPlaceholder>
+    );
+  }
+}
+
+export default HTMLView;
diff --git a/apolloschurchapp/src/ui/HorizontalContentCardConnected/horizontalContentCardComponentMapper.js b/apolloschurchapp/src/ui/HorizontalContentCardConnected/horizontalContentCardComponentMapper.js
deleted file mode 100644
index c658e47..0000000
--- a/apolloschurchapp/src/ui/HorizontalContentCardConnected/horizontalContentCardComponentMapper.js
+++ /dev/null
@@ -1,22 +0,0 @@
-import React from 'react';
-import { get } from 'lodash';
-
-import {
-  HorizontalDefaultCard,
-  HorizontalHighlightCard,
-} from '@apollosproject/ui-kit';
-
-const horizontalContentCardComponentMapper = (props) => {
-  // map typename to the the card we want to render.
-  switch (get(props, '__typename')) {
-    case 'MediaContentItem':
-    case 'WeekendContentItem':
-    case 'ContentSeriesContentItem':
-    case 'DevotionalContentItem':
-      return <HorizontalHighlightCard {...props} />;
-    default:
-      return <HorizontalDefaultCard {...props} />;
-  }
-};
-
-export default horizontalContentCardComponentMapper;
diff --git a/apolloschurchapp/src/ui/HorizontalContentCardConnected/index.js b/apolloschurchapp/src/ui/HorizontalContentCardConnected/index.js
deleted file mode 100644
index c0a38bc..0000000
--- a/apolloschurchapp/src/ui/HorizontalContentCardConnected/index.js
+++ /dev/null
@@ -1,29 +0,0 @@
-import React, { memo } from 'react';
-import PropTypes from 'prop-types';
-
-import ContentCardConnected from '../ContentCardConnected';
-
-import horizontalContentCardComponentMapper from './horizontalContentCardComponentMapper';
-
-const HorizontalContentCardConnected = memo(
-  ({ Component, isLoading, ...otherProps }) => (
-    <ContentCardConnected
-      Component={Component}
-      isLoading={isLoading}
-      {...otherProps}
-    />
-  )
-);
-
-HorizontalContentCardConnected.propTypes = {
-  Component: PropTypes.func,
-  isLoading: PropTypes.bool,
-};
-
-HorizontalContentCardConnected.defaultProps = {
-  Component: horizontalContentCardComponentMapper,
-};
-
-HorizontalContentCardConnected.displayName = 'HorizontalContentCardConnected';
-
-export default HorizontalContentCardConnected;
diff --git a/apolloschurchapp/src/ui/HorizontalTileFeed/HorizontalTileFeed.stories.js b/apolloschurchapp/src/ui/HorizontalTileFeed/HorizontalTileFeed.stories.js
new file mode 100644
index 0000000..8ebfe1e
--- /dev/null
+++ b/apolloschurchapp/src/ui/HorizontalTileFeed/HorizontalTileFeed.stories.js
@@ -0,0 +1,141 @@
+import React from 'react';
+import { View } from 'react-native';
+import { storiesOf } from '@storybook/react-native';
+
+import styled from 'apolloschurchapp/src/ui/styled';
+import CardTile from 'apolloschurchapp/src/ui/CardTile';
+import TileImage from 'apolloschurchapp/src/ui/TileImage';
+
+import HorizontalTileFeed from '.';
+
+storiesOf('HorizontalTileFeed', module)
+  .add('With CardTile', () => {
+    const CardTileData = [
+      {
+        node: {
+          id: 'fakeId0',
+          title: 'Why Jesus is Timeless',
+        },
+      },
+      {
+        node: {
+          id: 'fakeId1',
+          title: 'Tall Hat Tales',
+        },
+      },
+    ];
+
+    const loadingStateObject = {
+      node: {
+        id: 'fakeId0',
+        title: '',
+        isLoading: true,
+      },
+    };
+
+    const renderCardTile = (
+      { item, index } //eslint-disable-line
+    ) => (
+      <CardTile
+        number={index + 1}
+        title={item.node.title}
+        isLoading={item.node.isLoading}
+      />
+    );
+
+    return (
+      <View>
+        <HorizontalTileFeed
+          content={CardTileData}
+          renderItem={renderCardTile}
+          loadingStateObject={loadingStateObject}
+        />
+      </View>
+    );
+  })
+  .add('CardTile Skeleton', () => {
+    const loadingStateObject = {
+      node: {
+        id: 'fakeId0',
+        title: '',
+        isLoading: true,
+      },
+    };
+
+    const renderCardTile = (
+      { item, index } //eslint-disable-line
+    ) => (
+      <CardTile
+        number={index + 1}
+        title={item.node.title}
+        isLoading={item.node.isLoading}
+      />
+    );
+
+    return (
+      <View>
+        <HorizontalTileFeed
+          content={[]}
+          renderItem={renderCardTile}
+          loadingStateObject={loadingStateObject}
+          isLoading
+        />
+      </View>
+    );
+  })
+  .add('With TileImage', () => {
+    const imageData = [
+      {
+        node: {
+          id: 'fakeId0',
+          source: 'https://picsum.photos/900/900/?random',
+          link: 'https://github.com',
+        },
+      },
+      {
+        node: {
+          id: 'fakeId1',
+          source: 'https://picsum.photos/900/900/?random',
+          link: 'https://github.com',
+        },
+      },
+      {
+        node: {
+          id: 'fakeId2',
+          source: 'https://picsum.photos/900/900/?random',
+          link: 'https://github.com',
+        },
+      },
+    ];
+
+    const loadingStateImageObject = {
+      node: {
+        id: 'fakeId1',
+        source: '',
+        link: '',
+      },
+    };
+
+    const Spacer = styled({
+      flex: 1,
+      paddingHorizontal: 10,
+    })(View);
+
+    const renderTileImage = (
+      { item, index } //eslint-disable-line
+    ) => (
+      <Spacer>
+        <TileImage image={item.node.source} link={item.node.link} />
+      </Spacer>
+    );
+
+    return (
+      <View>
+        <HorizontalTileFeed
+          content={imageData}
+          renderItem={renderTileImage}
+          loadingStateObject={loadingStateImageObject}
+        />
+      </View>
+    );
+  });
diff --git a/apolloschurchapp/src/ui/HorizontalTileFeed/HorizontalTileFeed.tests.js b/apolloschurchapp/src/ui/HorizontalTileFeed/HorizontalTileFeed.tests.js
new file mode 100644
index 0000000..b98a6bf
--- /dev/null
+++ b/apolloschurchapp/src/ui/HorizontalTileFeed/HorizontalTileFeed.tests.js
@@ -0,0 +1,68 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+import CardTile from 'apolloschurchapp/src/ui/CardTile';
+
+import HorizontalTileFeed from '.';
+
+const loadingStateObject = {
+  node: {
+    id: 'fakeId0',
+    title: '',
+    isLoading: true,
+  },
+};
+
+describe('The HorizontalTileFeed component', () => {
+  it('renders correctly', () => {
+    const tree = renderer.create(
+      <Providers>
+        <HorizontalTileFeed
+          content={[
+            {
+              node: {
+                id: 'fakeId0',
+                title: 'Why Jesus is Timeless',
+              },
+            },
+            {
+              node: {
+                id: 'fakeId1',
+                title: 'Why Jesus is Timeless',
+              },
+            },
+          ]}
+          renderItem={({ item, index }) => (
+            <CardTile
+              number={index + 1}
+              title={item.node.title}
+              isLoading={item.node.isLoading}
+            />
+          )}
+          loadingStateObject={loadingStateObject}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('renders empty state', () => {
+    const tree = renderer.create(
+      <Providers>
+        <HorizontalTileFeed
+          isLoading
+          content={[]}
+          renderItem={({ item, index }) => (
+            <CardTile
+              number={index + 1}
+              title={item.node.title}
+              isLoading={item.node.isLoading}
+            />
+          )}
+          loadingStateObject={loadingStateObject}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/HorizontalTileFeed/TileFeed.js b/apolloschurchapp/src/ui/HorizontalTileFeed/TileFeed.js
new file mode 100644
index 0000000..e98dce2
--- /dev/null
+++ b/apolloschurchapp/src/ui/HorizontalTileFeed/TileFeed.js
@@ -0,0 +1,10 @@
+import { FlatList } from 'react-native';
+
+import styled from 'apolloschurchapp/src/ui/styled';
+
+const TileFeed = styled(({ theme, tileHeight }) => ({
+  height: tileHeight,
+  paddingBottom: theme.sizing.baseUnit / 2,
+}))(FlatList);
+
+export default TileFeed;
diff --git a/apolloschurchapp/src/ui/HorizontalTileFeed/TileFeed.tests.js b/apolloschurchapp/src/ui/HorizontalTileFeed/TileFeed.tests.js
new file mode 100644
index 0000000..81aae8f
--- /dev/null
+++ b/apolloschurchapp/src/ui/HorizontalTileFeed/TileFeed.tests.js
@@ -0,0 +1,68 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+import CardTile from 'apolloschurchapp/src/ui/CardTile';
+
+import TileFeed from '.';
+
+describe('The TileFeed component', () => {
+  it('renders correctly', () => {
+    const tree = renderer.create(
+      <Providers>
+        <TileFeed
+          content={[
+            {
+              node: {
+                id: 'fakeId0',
+                title: 'Why Jesus is Timeless',
+              },
+            },
+            {
+              node: {
+                id: 'fakeId1',
+                title: 'Why Jesus is Timeless',
+              },
+            },
+          ]}
+          loadingStateObject={{
+            id: 'fakeId0',
+            title: '',
+            isLoading: false,
+          }}
+          renderItem={({ item, index }) => (
+            <CardTile
+              number={index + 1}
+              title={item.title}
+              isLoading={item.isLoading}
+            />
+          )}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('renders empty state', () => {
+    const tree = renderer.create(
+      <Providers>
+        <TileFeed
+          refreshing
+          content={[]}
+          loadingStateObject={{
+            id: 'fakeId0',
+            title: '',
+            isLoading: true,
+          }}
+          renderItem={({ item, index }) => (
+            <CardTile
+              number={index + 1}
+              title={item.title}
+              isLoading={item.isLoading}
+            />
+          )}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/HorizontalTileFeed/index.js b/apolloschurchapp/src/ui/HorizontalTileFeed/index.js
new file mode 100644
index 0000000..631a1c9
--- /dev/null
+++ b/apolloschurchapp/src/ui/HorizontalTileFeed/index.js
@@ -0,0 +1,93 @@
+import React, { PureComponent } from 'react';
+import { Dimensions } from 'react-native';
+import PropTypes from 'prop-types';
+import { compose, withProps } from 'recompose';
+
+import { withTheme } from 'apolloschurchapp/src/ui/theme';
+
+import TileFeed from './TileFeed';
+
+export class HorizontalTileFeed extends PureComponent {
+  static propTypes = {
+    content: PropTypes.array, // eslint-disable-line
+    loadingStateObject: PropTypes.shape({}).isRequired,
+    renderItem: PropTypes.func.isRequired,
+    fetchMore: PropTypes.func,
+    isLoading: PropTypes.bool,
+    keyExtractor: PropTypes.func,
+    theme: PropTypes.shape({}),
+  };
+
+  static defaultProps = {
+    keyExtractor: (item) => item && item.id,
+    content: [],
+    isLoading: false,
+  };
+
+  constructor(props) {
+    super(props);
+
+    this.snapToInterval = this.getTileWidth() - this.props.theme.baseUnit / 2; //eslint-disable-line
+  }
+
+  getTileWidth = () => {
+    const { width } = Dimensions.get('window');
+    return width * 0.8; // 80% of width
+  };
+
+  render() {
+    const { content, isLoading, renderItem, theme, ...otherProps } = this.props;
+
+    return (
+      <TileFeed
+        data={content}
+        horizontal
+        initialScrollIndex={0}
+        refreshing={isLoading}
+        renderItem={renderItem}
+        showsHorizontalScrollIndicator={false}
+        tileHeight={this.getTileWidth()} // passed into TileFeed styles. Height is equal to 80% of width
+        /*
+         * `(80% of width - baseUnit / 2)` which is used for padding on the tile. This padding was added
+         * to fix a shadow clipping bug on Android. `snapToInterval` below is adjusted to account for
+         * that padding on each swipe. TODO: find better shadow clipping fix that simplifies this math.
+         */
+        snapToInterval={this.snapToInterval} // passed down to rendered ScrollView.
+        snapToAlignment={'start'} // passed down to rendered ScrollView
+        decelerationRate={'fast'} // passed down to rendered ScrollView
+        {...otherProps}
+      />
+    );
+  }
+}
+
+const generateLoadingStateData = (loadingStateObject, numberOfItems) => {
+  const itemData = () => JSON.parse(JSON.stringify(loadingStateObject));
+
+  const loadingStateData = [];
+
+  while (loadingStateData.length < numberOfItems) {
+    const newData = itemData();
+    newData.id = `fakeId${loadingStateData.length}`;
+    loadingStateData.push(newData);
+  }
+
+  return loadingStateData;
+};
+
+const enhance = compose(
+  withProps(
+    ({ isLoading, content, loadingStateObject } = {}) =>
+      isLoading && (!content || !content.length)
+        ? {
+            content: generateLoadingStateData(loadingStateObject, 5),
+            fetchMore: () => {},
+          }
+        : {}
+  ),
+  withTheme(({ theme: { sizing: { baseUnit } = {} } = {} } = {}) => ({
+    theme: { baseUnit },
+  }))
+);
+
+export default enhance(HorizontalTileFeed);
diff --git a/apolloschurchapp/src/ui/Icon/Icon.stories.js b/apolloschurchapp/src/ui/Icon/Icon.stories.js
new file mode 100644
index 0000000..ef0df2a
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/Icon.stories.js
@@ -0,0 +1,19 @@
+import React from 'react';
+import { storiesOf } from '@storybook/react-native';
+import { kebabCase } from 'lodash';
+
+import CenteredView from 'apolloschurchapp/src/ui/CenteredView';
+
+import * as icons from './icons';
+
+import Icon from '.';
+
+const stories = storiesOf('Icon', module).addDecorator((getStory) => (
+  <CenteredView>{getStory()}</CenteredView>
+));
+
+Object.keys(icons).forEach((iconName) => {
+  stories.add(iconName, () => <Icon name={kebabCase(iconName)} />);
+});
+
+stories.add('isLoading', () => <Icon name={'umbrella'} isLoading />);
diff --git a/apolloschurchapp/src/ui/Icon/Icon.tests.js b/apolloschurchapp/src/ui/Icon/Icon.tests.js
new file mode 100644
index 0000000..6f794dd
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/Icon.tests.js
@@ -0,0 +1,22 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+import { kebabCase } from 'lodash';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import * as icons from './icons';
+
+import Icon from '.';
+
+Object.keys(icons).forEach((iconName) => {
+  describe(`The ${iconName} icon`, () => {
+    it('renders correctly', () => {
+      const tree = renderer.create(
+        <Providers>
+          <Icon name={kebabCase(iconName)} />
+        </Providers>
+      );
+      expect(tree).toMatchSnapshot();
+    });
+  });
+});
diff --git a/apolloschurchapp/src/ui/Icon/icons/ArrowBack.js b/apolloschurchapp/src/ui/Icon/icons/ArrowBack.js
new file mode 100644
index 0000000..ea4d039
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/ArrowBack.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Svg, { Path } from 'react-native-svg';
+
+import makeIcon from './makeIcon';
+
+const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
+  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
+    <Path
+      d="M14.35 21L6.2 12.46c-.26-.28-.26-.64 0-.92L14.34 3l1.65.9L8.27 12 16 20.1l-1.65.9z"
+      fill={fill}
+    />
+  </Svg>
+));
+
+Icon.propTypes = {
+  size: PropTypes.number,
+  fill: PropTypes.string,
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/ArrowDown.js b/apolloschurchapp/src/ui/Icon/icons/ArrowDown.js
new file mode 100644
index 0000000..81e83f1
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/ArrowDown.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Svg, { Path } from 'react-native-svg';
+
+import makeIcon from './makeIcon';
+
+const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
+  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
+    <Path
+      d="M12 18c-.16 0-.32-.06-.46-.2L3 9.66 3.9 8l8.1 7.72L20.1 8l.9 1.65-8.54 8.16c-.14.15-.3.2-.46.2z"
+      fill={fill}
+    />
+  </Svg>
+));
+
+Icon.propTypes = {
+  size: PropTypes.number,
+  fill: PropTypes.string,
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/ArrowNext.js b/apolloschurchapp/src/ui/Icon/icons/ArrowNext.js
new file mode 100644
index 0000000..1371ca4
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/ArrowNext.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Svg, { Path } from 'react-native-svg';
+
+import makeIcon from './makeIcon';
+
+const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
+  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
+    <Path
+      d="M9.65 21L8 20.1l7.72-8.1L8 3.9 9.65 3l8.16 8.54c.27.28.27.64 0 .92L9.67 21z"
+      fill={fill}
+    />
+  </Svg>
+));
+
+Icon.propTypes = {
+  size: PropTypes.number,
+  fill: PropTypes.string,
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/ArrowUp.js b/apolloschurchapp/src/ui/Icon/icons/ArrowUp.js
new file mode 100644
index 0000000..f434de5
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/ArrowUp.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Svg, { Path } from 'react-native-svg';
+
+import makeIcon from './makeIcon';
+
+const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
+  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
+    <Path
+      d="M20.1 16L12 8.28 3.9 16 3 14.35l8.54-8.15c.28-.27.64-.27.92 0L21 14.35 20.1 16z"
+      fill={fill}
+    />
+  </Svg>
+));
+
+Icon.propTypes = {
+  size: PropTypes.number,
+  fill: PropTypes.string,
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/Audio.js b/apolloschurchapp/src/ui/Icon/icons/Audio.js
new file mode 100644
index 0000000..da2b1fb
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/Audio.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Svg, { Path } from 'react-native-svg';
+
+import makeIcon from './makeIcon';
+
+const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
+  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
+    <Path
+      d="M3.82 13.5H2v-.32C2 6.54 5.22 2 12 2c6.5 0 9.64 4.16 9.98 10.42v1.07h-1.82v-1c-.3-5.8-3.02-8.8-8.16-8.8-5.37 0-8.18 3.32-8.18 9.45v.3zm0 1.7h1.6c.87 0 1.58.66 1.58 1.48v2.13c0 .86-.7 1.5-1.6 1.5-.87 0-1.58-.64-1.58-1.5v-3.6zm0-1.7h1.6c1.87 0 3.4 1.42 3.4 3.18v2.13c0 1.8-1.53 3.2-3.4 3.2C3.5 22 2 20.6 2 18.8v-5.3h1.82zm16.36 1.7v3.6c0 .83-.7 1.5-1.6 1.5-.87 0-1.58-.67-1.58-1.5v-2.1c0-.82.7-1.5 1.6-1.5h1.58zm0-1.7H22v5.3c0 1.77-1.53 3.2-3.4 3.2-1.9 0-3.42-1.43-3.42-3.2v-2.1c0-1.76 1.53-3.2 3.4-3.2h1.6z"
+      fill={fill}
+    />
+  </Svg>
+));
+
+Icon.propTypes = {
+  size: PropTypes.number,
+  fill: PropTypes.string,
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/Bank.js b/apolloschurchapp/src/ui/Icon/icons/Bank.js
new file mode 100644
index 0000000..98f8791
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/Bank.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Svg, { Path } from 'react-native-svg';
+
+import makeIcon from './makeIcon';
+
+const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
+  <Svg width={size} height={size} viewBox="0 0 24 17" {...otherProps}>
+    <Path
+      d="M1.3,0 L22.7,0 C23.42,0 24,0.57 24,1.28 L24,15.88 C24,16.58 23.42,17.16 22.7,17.16 L1.3,17.16 C0.57,17.15 0,16.57 0,15.87 L0,1.27 C0,0.57 0.58,0 1.3,0 Z M22.2,15.43 L22.2,1.71 L1.8,1.71 L1.8,15.43 L22.2,15.43 Z M11.4,12 L4.2,12 L4.2,9.7 L11.4,9.7 L11.4,12 Z M19.8,6.86 L4.2,6.86 L4.2,4.57 L19.8,4.57 L19.8,6.87 L19.8,6.86 Z"
+      fill={fill}
+    />
+  </Svg>
+));
+
+Icon.propTypes = {
+  size: PropTypes.number,
+  fill: PropTypes.string,
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/BrandIcon.js b/apolloschurchapp/src/ui/Icon/icons/BrandIcon.js
new file mode 100644
index 0000000..e46ffed
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/BrandIcon.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Svg, { Path } from 'react-native-svg';
+
+import makeIcon from './makeIcon';
+
+const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
+  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
+    <Path
+      d="M8.84799129,0 L13.7577354,0 L22.6057267,24 L0,24 L8.84799129,0 Z M6.52559608,19.4398694 L16.0921502,19.4398694 L11.4494502,5.83629831 L11.1682961,5.83629831 L6.52559608,19.4398694 Z"
+      fill={fill}
+    />
+  </Svg>
+));
+
+Icon.propTypes = {
+  size: PropTypes.number,
+  fill: PropTypes.string,
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/Building.js b/apolloschurchapp/src/ui/Icon/icons/Building.js
new file mode 100644
index 0000000..3f5bf3e
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/Building.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Svg, { Path } from 'react-native-svg';
+
+import makeIcon from './makeIcon';
+
+const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
+  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
+    <Path
+      d="M19.5 21v-8.25h.75c.45 0 .75.3.75.75v6.75c0 .45-.3.75-.75.75h-.75zm-15-.75V21h-.75c-.45 0-.75-.3-.75-.75V13.5c0-.45.3-.75.75-.75h.75v7.5zM17.25 3c.45 0 .75.3.75.75v16.5c0 .45-.3.75-.75.75h-4.5v-3h-1.5v3h-4.5c-.45 0-.75-.3-.75-.75V3.75c0-.45.3-.75.75-.75h10.5zM10.5 15.75v-1.5H8.25v1.5h2.25zm0-3v-1.5H8.25v1.5h2.25zm0-3v-1.5H8.25v1.5h2.25zm0-3v-1.5H8.25v1.5h2.25zm5.25 9v-1.5H13.5v1.5h2.25zm0-3v-1.5H13.5v1.5h2.25zm0-3v-1.5H13.5v1.5h2.25zm0-3v-1.5H13.5v1.5h2.25z"
+      fill={fill}
+    />
+  </Svg>
+));
+
+Icon.propTypes = {
+  size: PropTypes.number,
+  fill: PropTypes.string,
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/Calendar.js b/apolloschurchapp/src/ui/Icon/icons/Calendar.js
new file mode 100644
index 0000000..eb78cab
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/Calendar.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Svg, { Path } from 'react-native-svg';
+
+import makeIcon from './makeIcon';
+
+const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
+  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
+    <Path
+      d="M4.4 20.57h15.52V9.14H4.42v11.43zM8.65 7V3.8c0-.12-.03-.2-.1-.27-.06-.07-.15-.1-.25-.1h-.72c-.1 0-.18.03-.25.1s-.1.15-.1.26V7c0 .1.03.2.1.26s.15.1.25.1h.7c.1 0 .2-.04.26-.1.07-.07.1-.16.1-.26zm8.46 0V3.8c0-.12 0-.2-.1-.27 0-.07-.1-.1-.2-.1h-.7c-.1 0-.2.03-.22.1s-.1.15-.1.26V7c0 .1.04.2.1.26.07.06.15.1.25.1h.7c.1 0 .2-.04.26-.1.07-.07.1-.16.1-.26zm4.3-.7v14.27c0 .4-.12.72-.4 1-.26.3-.6.43-1 .43H4.4c-.4 0-.72-.14-1-.42-.28-.3-.42-.62-.42-1V6.28c0-.4.14-.73.42-1 .28-.3.6-.43 1-.43h1.4V3.8c0-.5.17-.93.52-1.28.34-.35.76-.52 1.24-.52h.7c.5 0 .9.17 1.25.52s.55.77.55 1.27v1h4.23v-1c0-.5.17-.97.52-1.3s.75-.5 1.23-.5h.7c.5 0 .9.14 1.25.5.3.34.5.76.5 1.26v1h1.4c.4 0 .7.13 1 .4.23.3.4.63.4 1z"
+      fill={fill}
+    />
+  </Svg>
+));
+
+Icon.propTypes = {
+  size: PropTypes.number,
+  fill: PropTypes.string,
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/Camera.js b/apolloschurchapp/src/ui/Icon/icons/Camera.js
new file mode 100644
index 0000000..0572a9e
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/Camera.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Svg, { Path } from 'react-native-svg';
+
+import makeIcon from './makeIcon';
+
+const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
+  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
+    <Path
+      d="M6.24 5.7l.52-1.23C7.18 3.67 8.2 3 9.1 3h5.8c1 0 2 .65 2.34 1.47l.52 1.23H20c1.16 0 2.06.86 2 1.88V19.1c.06 1.12-.84 1.97-2 1.9H4c-1.07.07-1.97-.78-2-1.9V7.6c.03-1.03.92-1.87 2-1.88h2.24zm2.17-.58l-.7 1.7-.22.5H4.02c-.16 0-.3.13-.3.28v11.58c0 .14.14.26.3.26h16.02c.16 0 .3-.1.3-.26V7.6c0-.14-.14-.27-.3-.27H16.6l-.2-.5-.72-1.7c-.1-.26-.5-.5-.78-.5H9.18c-.28 0-.67.25-.77.5zm3.65 12.16c-2.68 0-4.86-2.06-4.86-4.6 0-2.53 2.17-4.6 4.85-4.6 2.7 0 4.87 2.07 4.87 4.6 0 2.54-2.17 4.6-4.86 4.6zm0-1.62c1.74 0 3.15-1.33 3.15-2.97 0-1.67-1.42-3-3.16-3-1.74 0-3.15 1.33-3.15 3 0 1.62 1.4 2.95 3.13 2.95z"
+      fill={fill}
+    />
+  </Svg>
+));
+
+Icon.propTypes = {
+  size: PropTypes.number,
+  fill: PropTypes.string,
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/Check.js b/apolloschurchapp/src/ui/Icon/icons/Check.js
new file mode 100644
index 0000000..05fc873
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/Check.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Svg, { Path } from 'react-native-svg';
+
+import makeIcon from './makeIcon';
+
+const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
+  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
+    <Path
+      d="M19.18 6.32l-9.9 9.65-4.46-4.3c-.22-.23-.48-.33-.76-.33-.3 0-.54.1-.76.32-.2.2-.3.43-.3.7 0 .3.1.54.3.73l5.25 5.03c.2.22.44.32.74.32s.53-.1.72-.32l.14-.13L20.7 7.77c.2-.2.3-.43.3-.72 0-.3-.1-.53-.3-.72-.22-.2-.47-.32-.76-.32-.28 0-.54.1-.76.33z"
+      fill={fill}
+    />
+  </Svg>
+));
+
+Icon.propTypes = {
+  size: PropTypes.number,
+  fill: PropTypes.string,
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/CheckboxChecked.js b/apolloschurchapp/src/ui/Icon/icons/CheckboxChecked.js
new file mode 100644
index 0000000..53bff59
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/CheckboxChecked.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Svg, { Path } from 'react-native-svg';
+
+import makeIcon from './makeIcon';
+
+const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
+  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
+    <Path
+      d="M2.57,0 L19.43,0 C20.85,0 22,1.15 22,2.57 L22,19.43 C22,20.85 20.85,22 19.43,22 L2.57,22 C1.15,22 0,20.85 0,19.43 L0,2.57 C0,1.15 1.15,0 2.57,0 Z M17.75,4.56 L8.45,14.38 L4.25,9.98 C4.05,9.78 3.8,9.68 3.53,9.68 C3.26,9.68 3.03,9.78 2.83,9.98 C2.63,10.18 2.53,10.43 2.53,10.72 C2.53,11.02 2.63,11.26 2.83,11.46 L7.76,16.6 C7.94,16.8 8.16,16.92 8.46,16.92 C8.73,16.92 8.96,16.82 9.16,16.6 L9.28,16.47 L19.18,6.02 C19.38,5.82 19.46,5.58 19.46,5.29 C19.46,4.99 19.36,4.73 19.18,4.54 C18.98,4.32 18.74,4.21 18.48,4.21 C18.2,4.21 17.96,4.31 17.75,4.54 L17.75,4.56 Z"
+      fill={fill}
+    />
+  </Svg>
+));
+
+Icon.propTypes = {
+  size: PropTypes.number,
+  fill: PropTypes.string,
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/CheckboxUnchecked.js b/apolloschurchapp/src/ui/Icon/icons/CheckboxUnchecked.js
new file mode 100644
index 0000000..ac7c319
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/CheckboxUnchecked.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Svg, { Path } from 'react-native-svg';
+
+import makeIcon from './makeIcon';
+
+const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
+  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
+    <Path
+      d="M3.75 20.25h16.5V3.75H3.75v16.5zM1 3.75C1 2.22 2.23 1 3.74 1h16.52C21.76 1 23 2.23 23 3.74v16.52c0 1.5-1.23 2.74-2.74 2.74H3.74C2.24 23 1 21.77 1 20.26V3.74z"
+      fill={fill}
+    />
+  </Svg>
+));
+
+Icon.propTypes = {
+  size: PropTypes.number,
+  fill: PropTypes.string,
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/Chromecast.js b/apolloschurchapp/src/ui/Icon/icons/Chromecast.js
new file mode 100644
index 0000000..c312fdb
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/Chromecast.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Svg, { Path } from 'react-native-svg';
+
+import makeIcon from './makeIcon';
+
+const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
+  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
+    <Path
+      d="M3 17.27v2.46h2.45c0-1.36-1.1-2.46-2.45-2.46zM3 14v1.64c2.26 0 4.1 1.83 4.1 4.1h1.63C8.73 16.54 6.17 14 3 14zm0-3.27v1.63c4.07 0 7.36 3.3 7.36 7.37H12c0-4.98-4.03-9-9-9zM19.36 5H4.64C3.74 5 3 5.74 3 6.64V9.1h1.64V6.63h14.72V18.1h-5.72v1.63h5.72c.9 0 1.64-.74 1.64-1.64V6.62c0-.9-.74-1.64-1.64-1.64z"
+      fill={fill}
+    />
+  </Svg>
+));
+
+Icon.propTypes = {
+  size: PropTypes.number,
+  fill: PropTypes.string,
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/CircleOutlineCheckMark.js b/apolloschurchapp/src/ui/Icon/icons/CircleOutlineCheckMark.js
new file mode 100644
index 0000000..b8bfa94
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/CircleOutlineCheckMark.js
@@ -0,0 +1,25 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Svg, { Path, Polygon } from 'react-native-svg';
+
+import makeIcon from './makeIcon';
+
+const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
+  <Svg width={size} height={size} viewBox="0 0 60 61" {...otherProps}>
+    <Polygon
+      fill={fill}
+      points="25.9570657 39.7210789 26.6666667 40.4357125 27.3762676 39.7210789 40.709601 26.293183 41.4092427 25.5885792 40.709601 24.8839754 38.0429343 22.1983962 37.3333333 21.4837626 36.6237324 22.1983962 25.9570657 32.940713 27.3762676 32.940713 23.3762676 28.9123442 22.6666667 28.1977106 21.9570657 28.9123442 19.290399 31.5979234 18.5907573 32.3025272 19.290399 33.007131"
+    />
+    <Path
+      fill={fill}
+      d="M30,54.903 L30,54.903 C43.254834,54.903 54,44.157834 54,30.903 C54,17.648166 43.254834,6.903 30,6.903 C16.745166,6.903 6,17.648166 6,30.903 C6,44.157834 16.745166,54.903 30,54.903 L30,54.903 Z M30,60.903 L30,60.903 C13.4314575,60.903 0,47.4715425 0,30.903 C0,14.3344575 13.4314575,0.903 30,0.903 C46.5685425,0.903 60,14.3344575 60,30.903 C60,47.4715425 46.5685425,60.903 30,60.903 L30,60.903 Z"
+    />
+  </Svg>
+));
+
+Icon.propTypes = {
+  size: PropTypes.number,
+  fill: PropTypes.string,
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/CircleOutlineXMark.js b/apolloschurchapp/src/ui/Icon/icons/CircleOutlineXMark.js
new file mode 100644
index 0000000..6ab39b4
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/CircleOutlineXMark.js
@@ -0,0 +1,25 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Svg, { Path } from 'react-native-svg';
+
+import makeIcon from './makeIcon';
+
+const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
+  <Svg width={size} height={size} viewBox="0 0 60 61" {...otherProps}>
+    <Path
+      fill={fill}
+      d="M30,54.33 L30,54.33 C43.254834,54.33 54,43.584834 54,30.33 C54,17.075166 43.254834,6.33 30,6.33 C16.745166,6.33 6,17.075166 6,30.33 C6,43.584834 16.745166,54.33 30,54.33 L30,54.33 Z M30,60.33 L30,60.33 C13.4314575,60.33 0,46.8985425 0,30.33 C0,13.7614575 13.4314575,0.33 30,0.33 C46.5685425,0.33 60,13.7614575 60,30.33 C60,46.8985425 46.5685425,60.33 30,60.33 L30,60.33 Z"
+    />
+    <Path
+      fill={fill}
+      d="M28.784,33.438 L28.784,33.438 L27.9222343,33.438 L27.7949654,32.5856839 L26.7389654,25.5136839 L26.728,25.366 L26.728,16.502 L26.728,15.502 L27.728,15.502 L32.272,15.502 L33.272,15.502 L33.272,16.502 L33.272,25.366 L33.2610346,25.5136839 L32.2050346,32.5856839 L32.0777657,33.438 L31.216,33.438 L28.784,33.438 Z M26.504,41.662 L26.504,41.662 C26.504,39.6282997 27.9530061,38.166 30,38.166 C32.0469939,38.166 33.496,39.6282997 33.496,41.662 C33.496,43.6957003 32.0469939,45.158 30,45.158 C27.9530061,45.158 26.504,43.6957003 26.504,41.662 L26.504,41.662 Z"
+    />
+  </Svg>
+));
+
+Icon.propTypes = {
+  size: PropTypes.number,
+  fill: PropTypes.string,
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/Close.js b/apolloschurchapp/src/ui/Icon/icons/Close.js
new file mode 100644
index 0000000..75d4164
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/Close.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Svg, { Path } from 'react-native-svg';
+
+import makeIcon from './makeIcon';
+
+const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
+  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
+    <Path
+      d="M13.07 12l7.2-7.2.5-.5c.3-.3.3-.78 0-1.08-.3-.3-.76-.3-1.06 0l-.5.5-7.2 7.2-7.2-7.2-.5-.5c-.3-.3-.77-.3-1.07 0-.3.3-.3.77 0 1.07l.5.5 7.2 7.2-7.7 7.7c-.3.3-.3.77 0 1.07.3.3.77.3 1.07 0l7.7-7.7 7.7 7.7c.3.3.78.3 1.08 0 .3-.3.3-.77 0-1.07l-7.7-7.7z"
+      fill={fill}
+    />
+  </Svg>
+));
+
+Icon.propTypes = {
+  size: PropTypes.number,
+  fill: PropTypes.string,
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/Credit.js b/apolloschurchapp/src/ui/Icon/icons/Credit.js
new file mode 100644
index 0000000..228ea79
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/Credit.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Svg, { Path } from 'react-native-svg';
+
+import makeIcon from './makeIcon';
+
+const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
+  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
+    <Path
+      d="M1.7 3.43c-.84 0-1.7.86-1.7 1.7v13.73c0 .85.86 1.7 1.7 1.7h20.6c.84 0 1.7-.85 1.7-1.7V5.14c0-.85-.86-1.7-1.7-1.7H1.7zm0 15.43v-6h20.6v6H1.7zm0-10.65V5.16h20.6V8.2H1.7z"
+      fill={fill}
+    />
+  </Svg>
+));
+
+Icon.propTypes = {
+  size: PropTypes.number,
+  fill: PropTypes.string,
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/Download.js b/apolloschurchapp/src/ui/Icon/icons/Download.js
new file mode 100644
index 0000000..efe61ba
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/Download.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Svg, { Path } from 'react-native-svg';
+
+import makeIcon from './makeIcon';
+
+const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
+  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
+    <Path
+      d="M13 13.34l3.2-3.2c.4-.4 1.04-.4 1.43 0 .4.38.4 1 0 1.4l-4.92 4.92c-.2.2-.46.3-.73.3s-.54-.1-.75-.3l-4.9-4.92c-.4-.4-.4-1.02 0-1.4.38-.4 1.02-.4 1.4 0L11 13.4V3.02c0-.57.44-1.02 1-1.02.55 0 1 .45 1 1v10.34zm-9 .7v5.93c0 .33.4.7 1 .7h14c.6 0 1-.37 1-.7v-5.94c0-.33 2-1.5 2 0v5.94c0 1.5-1.34 2.7-3 2.7H5c-1.66 0-3-1.2-3-2.7v-5.94c0-1.5 2-.33 2 0z"
+      fill={fill}
+    />
+  </Svg>
+));
+
+Icon.propTypes = {
+  size: PropTypes.number,
+  fill: PropTypes.string,
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/Dropdown.js b/apolloschurchapp/src/ui/Icon/icons/Dropdown.js
new file mode 100644
index 0000000..de47137
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/Dropdown.js
@@ -0,0 +1,18 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Svg, { Path } from 'react-native-svg';
+
+import makeIcon from './makeIcon';
+
+const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
+  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
+    <Path d="M7 10l5 5 5-5z" fill={fill} />
+  </Svg>
+));
+
+Icon.propTypes = {
+  size: PropTypes.number,
+  fill: PropTypes.string,
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/Empty.js b/apolloschurchapp/src/ui/Icon/icons/Empty.js
new file mode 100644
index 0000000..503bc97
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/Empty.js
@@ -0,0 +1,16 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Svg from 'react-native-svg';
+
+import makeIcon from './makeIcon';
+
+const Icon = makeIcon(({ size = 32, ...otherProps } = {}) => (
+  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps} />
+));
+
+Icon.propTypes = {
+  size: PropTypes.number,
+  fill: PropTypes.string,
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/Failed.js b/apolloschurchapp/src/ui/Icon/icons/Failed.js
new file mode 100644
index 0000000..e917a5a
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/Failed.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Svg, { Path } from 'react-native-svg';
+
+import makeIcon from './makeIcon';
+
+const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
+  <Svg width={size} height={size} viewBox="0 0 512 512" {...otherProps}>
+    <Path
+      d="M256 51c113 0 205 92 205 205 0 113-92 205-205 205-113 0-205-92-205-205 0-113 92-205 205-205z m0-51c-141 0-256 115-256 256 0 141 115 256 256 256 141 0 256-115 256-256 0-141-115-256-256-256z m109 188l-41-41-68 68-68-68-41 41 68 68-68 68 41 41 68-68 68 68 41-41-68-68z"
+      fill={fill}
+    />
+  </Svg>
+));
+
+Icon.propTypes = {
+  size: PropTypes.number,
+  fill: PropTypes.string,
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/Filter.js b/apolloschurchapp/src/ui/Icon/icons/Filter.js
new file mode 100644
index 0000000..ebe4d5e
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/Filter.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Svg, { Path } from 'react-native-svg';
+
+import makeIcon from './makeIcon';
+
+const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
+  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
+    <Path
+      d="M14.07 18.6c0-.42-.33-.75-.74-.75h-2.66c-.4 0-.74.33-.74.74 0 .4.33.7.74.7h2.66c.4 0 .74-.35.74-.76zM2.74 7.47h18.52c.4 0 .74-.33.74-.74 0-.4-.33-.74-.74-.74H2.74c-.4 0-.74.3-.74.7 0 .4.33.73.74.73zm15.8 5.2c0-.42-.32-.75-.73-.75H6.2c-.42 0-.75.33-.75.74 0 .4.33.74.74.74h11.6c.4 0 .7-.32.7-.73z"
+      fill={fill}
+    />
+  </Svg>
+));
+
+Icon.propTypes = {
+  size: PropTypes.number,
+  fill: PropTypes.string,
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/Fullscreen.js b/apolloschurchapp/src/ui/Icon/icons/Fullscreen.js
new file mode 100644
index 0000000..7258643
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/Fullscreen.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Svg, { Path } from 'react-native-svg';
+
+import makeIcon from './makeIcon';
+
+const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
+  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
+    <Path
+      d="M22 2.83V9.5h-1.67V3.67H14.5V2H22v.83zM21.17 22H22v-7.5h-1.67v5.83H14.5V22h6.67zm-17.5-1.67V14.5H2V22h7.5v-1.67H3.67zM2.83 2H2v7.5h1.67V3.67H9.5V2H2.83z"
+      fill={fill}
+    />
+  </Svg>
+));
+
+Icon.propTypes = {
+  size: PropTypes.number,
+  fill: PropTypes.string,
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/Groups.js b/apolloschurchapp/src/ui/Icon/icons/Groups.js
new file mode 100644
index 0000000..f65dcb6
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/Groups.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Svg, { Path } from 'react-native-svg';
+
+import makeIcon from './makeIcon';
+
+const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
+  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
+    <Path
+      d="M15.6 4c1.77 0 3.2 1.43 3.2 3.2V8c0 1.77-1.43 3.2-3.2 3.2-.44 0-.85-.1-1.23-.25.28-.66.43-1.4.43-2.15V8c0-1.26-.42-2.4-1.12-3.35.54-.4 1.2-.65 1.92-.65zm-6.4 8.8c-2.2 0-4-1.8-4-4V8c0-2.2 1.8-4 4-4s4 1.8 4 4v.8c0 2.2-1.8 4-4 4zm11.07 1.12c.57.26.93.83.93 1.46v2.22c0 .44-.36.8-.8.8h-2.44c-.17-2.38-1.82-4.4-4.15-5-.3-.08-.6-.14-.9-.2.85-.23 1.77-.4 2.7-.4 1.9 0 3.67.65 4.7 1.12zM15.6 20H2.8c-.44 0-.8-.36-.8-.8v-.38C2 17 3.22 15.4 4.98 14.95c1.18-.3 2.64-.55 4.22-.55 1.58 0 3.04.25 4.22.55 1.76.45 2.98 2.05 2.98 3.87v.38c0 .44-.36.8-.8.8z"
+      fill={fill}
+    />
+  </Svg>
+));
+
+Icon.propTypes = {
+  size: PropTypes.number,
+  fill: PropTypes.string,
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/Home.js b/apolloschurchapp/src/ui/Icon/icons/Home.js
new file mode 100644
index 0000000..b015a25
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/Home.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Svg, { Path } from 'react-native-svg';
+
+import makeIcon from './makeIcon';
+
+const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
+  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
+    <Path
+      d="M19,2.5 L16.5,2.5 C15.9477153,2.5 15.5,2.05228475 15.5,1.5 C15.5,0.94771525 15.9477153,0.5 16.5,0.5 L20,0.5 C20.5522847,0.5 21,0.94771525 21,1.5 L21,5 C21,5.55228475 20.5522847,6 20,6 C19.4477153,6 19,5.55228475 19,5 L19,2.5 Z M21,22 C21,22.5522847 20.5522847,23 20,23 L14,23 C13.4477153,23 13,22.5522847 13,22 L13,17 L10,17 L10,22 C10,22.5522847 9.55228475,23 9,23 L4,23 C3.44771525,23 3,22.5522847 3,22 L3,13 C3,12.4477153 3.44771525,12 4,12 C4.55228475,12 5,12.4477153 5,13 L5,21 L8,21 L8,16 C8,15.4477153 8.44771525,15 9,15 L14,15 C14.5522847,15 15,15.4477153 15,16 L15,21 L19,21 L19,13 C19,12.4477153 19.4477153,12 20,12 C20.5522847,12 21,12.4477153 21,13 L21,22 Z M12.7071068,0.292893219 L23.7071068,11.2928932 C24.0976311,11.6834175 24.0976311,12.3165825 23.7071068,12.7071068 C23.3165825,13.0976311 22.6834175,13.0976311 22.2928932,12.7071068 L12,2.41421356 L1.70710678,12.7071068 C1.31658249,13.0976311 0.683417511,13.0976311 0.292893219,12.7071068 C-0.0976310729,12.3165825 -0.0976310729,11.6834175 0.292893219,11.2928932 L11.2928932,0.292893219 C11.6834175,-0.0976310729 12.3165825,-0.0976310729 12.7071068,0.292893219 Z"
+      fill={fill}
+    />
+  </Svg>
+));
+
+Icon.propTypes = {
+  size: PropTypes.number,
+  fill: PropTypes.string,
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/Information.js b/apolloschurchapp/src/ui/Icon/icons/Information.js
new file mode 100644
index 0000000..5508914
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/Information.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Svg, { Path } from 'react-native-svg';
+
+import makeIcon from './makeIcon';
+
+const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
+  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
+    <Path
+      d="M12 2C6.5 2 2 6.5 2 12s4.5 10 10 10 10-4.5 10-10S17.5 2 12 2zm2.2 15.24c-.54.2-2.44 1.13-3.54.16-.33-.3-.5-.66-.5-1.1 0-.83.28-1.56.77-3.3.1-.33.2-.76.2-1.1 0-.58-.23-.73-.83-.73-.3 0-.62.1-.9.2l.15-.65c.65-.27 1.48-.6 2.18-.6 1.06 0 1.84.53 1.84 1.53 0 .3-.05.8-.16 1.15l-.6 2.15c-.1.44-.3 1.4 0 1.68s1.2.13 1.6-.06l-.14.67zm-1-8.57c-.68 0-1.24-.56-1.24-1.25 0-.7.56-1.25 1.25-1.25.7 0 1.3.56 1.3 1.25 0 .7-.55 1.25-1.24 1.25z"
+      fill={fill}
+    />
+  </Svg>
+));
+
+Icon.propTypes = {
+  size: PropTypes.number,
+  fill: PropTypes.string,
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/Like.js b/apolloschurchapp/src/ui/Icon/icons/Like.js
new file mode 100644
index 0000000..d56487f
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/Like.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Svg, { Path } from 'react-native-svg';
+
+import makeIcon from './makeIcon';
+
+const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
+  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
+    <Path
+      d="M13.13 20.2h-2.26l1.4-1.4.03-.02.03-.03c6.37-5.6 8.06-7.67 8.06-10.27 0-2.2-1.7-3.9-3.9-3.9-1.23 0-2.48.6-3.28 1.54L12 7.57l-1.23-1.45C9.97 5.18 8.72 4.6 7.5 4.6c-2.2 0-3.9 1.67-3.9 3.88 0 2.6 1.7 4.66 8.07 10.27l.03.03.04.03 1.4 1.4zM10.8 4.03l-.03.03h.1c.4.3.8.64 1.13 1.03.33-.4.72-.75 1.14-1.05h.1c-.02 0-.03-.02-.04-.03.97-.66 2.13-1.03 3.3-1.03C19.6 3 22 5.4 22 8.47c0 3.8-3.4 6.88-8.6 11.46l-1.4 1.4-1.4-1.4C5.4 15.36 2 12.27 2 8.48 2 5.38 4.4 3 7.5 3c1.17 0 2.33.37 3.3 1.03z"
+      fill={fill}
+    />
+  </Svg>
+));
+
+Icon.propTypes = {
+  size: PropTypes.number,
+  fill: PropTypes.string,
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/LikeSolid.js b/apolloschurchapp/src/ui/Icon/icons/LikeSolid.js
new file mode 100644
index 0000000..3ecc3a4
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/LikeSolid.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Svg, { Path } from 'react-native-svg';
+
+import makeIcon from './makeIcon';
+
+const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
+  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
+    <Path
+      d="M10.8 4.03l-.03.03h.1c.4.3.8.64 1.13 1.03.33-.4.72-.75 1.14-1.05h.1c-.02 0-.03-.02-.04-.03.97-.66 2.13-1.03 3.3-1.03C19.6 3 22 5.4 22 8.47c0 3.8-3.4 6.88-8.6 11.46l-1.4 1.4-1.4-1.4C5.4 15.36 2 12.27 2 8.48 2 5.38 4.4 3 7.5 3c1.17 0 2.33.37 3.3 1.03z"
+      fill={fill}
+    />
+  </Svg>
+));
+
+Icon.propTypes = {
+  size: PropTypes.number,
+  fill: PropTypes.string,
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/Locate.js b/apolloschurchapp/src/ui/Icon/icons/Locate.js
new file mode 100644
index 0000000..9506ea1
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/Locate.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Svg, { Path } from 'react-native-svg';
+
+import makeIcon from './makeIcon';
+
+const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
+  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
+    <Path
+      d="M12 8.36C10 8.36 8.36 10 8.36 12S10 15.64 12 15.64 15.64 14 15.64 12 14 8.36 12 8.36zm8.13 2.73c-.43-3.8-3.43-6.8-7.23-7.3V2h-1.8v1.87C7.3 4.3 4.3 7.3 3.9 11.1H2v1.8h1.87c.42 3.8 3.43 6.8 7.22 7.23V22h1.8v-1.87c3.8-.42 6.8-3.43 7.2-7.22H22v-1.8h-1.87zM12 18.3c-3.52 0-6.36-2.84-6.36-6.36 0-3.5 2.84-6.36 6.36-6.36 3.52 0 6.36 2.85 6.36 6.37 0 3.5-2.84 6.35-6.36 6.35z"
+      fill={fill}
+    />
+  </Svg>
+));
+
+Icon.propTypes = {
+  size: PropTypes.number,
+  fill: PropTypes.string,
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/Lock.js b/apolloschurchapp/src/ui/Icon/icons/Lock.js
new file mode 100644
index 0000000..b6d1591
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/Lock.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Svg, { Path } from 'react-native-svg';
+
+import makeIcon from './makeIcon';
+
+const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
+  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
+    <Path
+      d="M9 11.18h6.4V8.73c0-.9-.3-1.68-.94-2.32-.62-.6-1.38-.9-2.26-.9-.88 0-1.64.3-2.26.97C9.3 7.1 9 7.87 9 8.77v2.45zm10.4 1.23v7.4c0 .37-.12.66-.35.9-.23.24-.52.36-.85.36h-12c-.33 0-.62-.1-.85-.35-.23-.24-.35-.53-.35-.87v-7.4c0-.32.12-.6.35-.85.23-.24.52-.36.85-.36h.4V8.74c0-1.57.55-2.92 1.65-4.04C9.35 3.5 10.67 3 12.2 3c1.53 0 2.85.56 3.95 1.7 1.1 1.1 1.65 2.46 1.65 4.03v2.45h.4c.33 0 .62.12.85.36.23.24.35.53.35.87z"
+      fill={fill}
+    />
+  </Svg>
+));
+
+Icon.propTypes = {
+  size: PropTypes.number,
+  fill: PropTypes.string,
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/Mute.js b/apolloschurchapp/src/ui/Icon/icons/Mute.js
new file mode 100644
index 0000000..01d9c4c
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/Mute.js
@@ -0,0 +1,25 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Svg, { Path } from 'react-native-svg';
+
+import makeIcon from './makeIcon';
+
+const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
+  <Svg width={size} height={size} viewBox="1.5 -0.5 24 24" {...otherProps}>
+    <Path
+      d="M10.82 16.73l3.28 2.1a1.5 1.5 0 0 0 2.4-1.2v-5.25M16.5 5.63a1.5 1.5 0 0 0-2.4-1.2l-6.6 4.2h-3a1.5 1.5 0 0 0-1.5 1.5v3a1.5 1.5 0 0 0 1.5 1.5h.63M3 19.88l18-15"
+      fill={'none'}
+      stroke={fill}
+      strokeWidth={1.5}
+      strokeLinecap={'round'}
+      strokeLinejoin={'round'}
+    />
+  </Svg>
+));
+
+Icon.propTypes = {
+  size: PropTypes.number,
+  fill: PropTypes.string,
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/Pause.js b/apolloschurchapp/src/ui/Icon/icons/Pause.js
new file mode 100644
index 0000000..72c6a11
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/Pause.js
@@ -0,0 +1,18 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Svg, { Path } from 'react-native-svg';
+
+import makeIcon from './makeIcon';
+
+const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
+  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
+    <Path d="M7 3h1.67v18H7V3zm8.33 0H17v18h-1.67V3z" fill={fill} />
+  </Svg>
+));
+
+Icon.propTypes = {
+  size: PropTypes.number,
+  fill: PropTypes.string,
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/Pin.js b/apolloschurchapp/src/ui/Icon/icons/Pin.js
new file mode 100644
index 0000000..b2fedda
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/Pin.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Svg, { Path } from 'react-native-svg';
+
+import makeIcon from './makeIcon';
+
+const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
+  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
+    <Path
+      d="M11.83 2C8 2 4 4.96 4 9.83c0 4.6 6.96 11.65 7.22 11.9.17.18.35.27.6.27.27 0 .44-.1.6-.26.28-.26 7.23-7.3 7.23-11.9 0-4.88-4-7.84-7.82-7.84zm0 10.43c-1.48 0-2.6-1.13-2.6-2.6 0-1.48 1.12-2.6 2.6-2.6 1.47 0 2.6 1.12 2.6 2.6 0 1.47-1.13 2.6-2.6 2.6z"
+      fill={fill}
+    />
+  </Svg>
+));
+
+Icon.propTypes = {
+  size: PropTypes.number,
+  fill: PropTypes.string,
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/Play.js b/apolloschurchapp/src/ui/Icon/icons/Play.js
new file mode 100644
index 0000000..f9e4b24
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/Play.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Svg, { Path } from 'react-native-svg';
+
+import makeIcon from './makeIcon';
+
+const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
+  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
+    <Path
+      d="M7.63 3.34v17.5c-.04-.12-.17-.25-.35-.33-.18-.06-.37-.1-.5-.04l.14-.1 11.13-8.4c.22-.17.22-.2 0-.36L7 3.65l-.14-.1c.1.03.28.02.45-.07.2-.1.3-.2.36-.3v.13zM6 3.34c0-1.3.88-1.73 1.97-.95l11.05 7.9c1.1.8 1.1 2.06.04 2.86l-11.13 8.4C6.86 22.4 6 22 6 20.7V3.34z"
+      fill={fill}
+    />
+  </Svg>
+));
+
+Icon.propTypes = {
+  size: PropTypes.number,
+  fill: PropTypes.string,
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/Print.js b/apolloschurchapp/src/ui/Icon/icons/Print.js
new file mode 100644
index 0000000..6f774d0
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/Print.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Svg, { Path } from 'react-native-svg';
+
+import makeIcon from './makeIcon';
+
+const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
+  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
+    <Path
+      d="M6.42 8.25H4.58c-.7 0-1.3.57-1.3 1.27v5.1c0 .44.2.73.66.73h3.22v3.78h9.68v-6.45H7.16v2.67h-1.3V11.4h12.27v9.02H5.86v-3.78H3.94C2.77 16.64 2 15.5 2 14.6V9.53c0-1.4 1.16-2.56 2.58-2.56h14.76c1.5 0 2.66 1.15 2.66 2.56v5.1c0 1.14-.87 2-2.03 2.02h-1.84v-1.3h1.84c.44 0 .74-.28.74-.73v-5.1c0-.7-.55-1.27-1.26-1.26h-13zm9.13 6.92v-.74h-7.1v.74h7.1zm0 2.4h-7.1v-.75h7.1v.74zm-8.4-10.6H5.88V3h12.26v3.96h-1.3V4.3H7.17v2.66z"
+      fill={fill}
+    />
+  </Svg>
+));
+
+Icon.propTypes = {
+  size: PropTypes.number,
+  fill: PropTypes.string,
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/Profile.js b/apolloschurchapp/src/ui/Icon/icons/Profile.js
new file mode 100644
index 0000000..24e12d6
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/Profile.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Svg, { Path } from 'react-native-svg';
+
+import makeIcon from './makeIcon';
+
+const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
+  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
+    <Path
+      d="M22,22.8 C22,23.4627417 21.4527925,24 20.7777778,24 C20.1027631,24 19.5555556,23.4627417 19.5555556,22.8 L19.5555556,20.4 C19.5555556,18.4117749 17.913933,16.8 15.8888889,16.8 L6.11111111,16.8 C4.08606703,16.8 2.44444444,18.4117749 2.44444444,20.4 L2.44444444,22.8 C2.44444444,23.4627417 1.89723692,24 1.22222222,24 C0.547207528,24 0,23.4627417 0,22.8 L0,20.4 C0,17.0862915 2.73603764,14.4 6.11111111,14.4 L15.8888889,14.4 C19.2639624,14.4 22,17.0862915 22,20.4 L22,22.8 Z M11,12 C7.62492653,12 4.88888889,9.3137085 4.88888889,6 C4.88888889,2.6862915 7.62492653,0 11,0 C14.3750735,0 17.1111111,2.6862915 17.1111111,6 C17.1111111,9.3137085 14.3750735,12 11,12 Z M11,9.6 C13.0250441,9.6 14.6666667,7.9882251 14.6666667,6 C14.6666667,4.0117749 13.0250441,2.4 11,2.4 C8.97495592,2.4 7.33333333,4.0117749 7.33333333,6 C7.33333333,7.9882251 8.97495592,9.6 11,9.6 Z"
+      fill={fill}
+    />
+  </Svg>
+));
+
+Icon.propTypes = {
+  size: PropTypes.number,
+  fill: PropTypes.string,
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/RadioChecked.js b/apolloschurchapp/src/ui/Icon/icons/RadioChecked.js
new file mode 100644
index 0000000..a01a630
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/RadioChecked.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Svg, { Path } from 'react-native-svg';
+
+import makeIcon from './makeIcon';
+
+const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
+  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
+    <Path
+      d="M12 24C5.37 24 0 18.63 0 12S5.37 0 12 0s12 5.37 12 12-5.37 12-12 12zm0-2.4c5.3 0 9.6-4.3 9.6-9.6S17.3 2.4 12 2.4 2.4 6.7 2.4 12s4.3 9.6 9.6 9.6zm0-2.4c-3.98 0-7.2-3.22-7.2-7.2S8.02 4.8 12 4.8s7.2 3.22 7.2 7.2-3.22 7.2-7.2 7.2z"
+      fill={fill}
+    />
+  </Svg>
+));
+
+Icon.propTypes = {
+  size: PropTypes.number,
+  fill: PropTypes.string,
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/RadioUnchecked.js b/apolloschurchapp/src/ui/Icon/icons/RadioUnchecked.js
new file mode 100644
index 0000000..873beab
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/RadioUnchecked.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Svg, { Path } from 'react-native-svg';
+
+import makeIcon from './makeIcon';
+
+const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
+  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
+    <Path
+      d="M12 24C5.37 24 0 18.63 0 12S5.37 0 12 0s12 5.37 12 12-5.37 12-12 12zm0-2.4c5.3 0 9.6-4.3 9.6-9.6S17.3 2.4 12 2.4 2.4 6.7 2.4 12s4.3 9.6 9.6 9.6z"
+      fill={fill}
+    />
+  </Svg>
+));
+
+Icon.propTypes = {
+  size: PropTypes.number,
+  fill: PropTypes.string,
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/Repeat.js b/apolloschurchapp/src/ui/Icon/icons/Repeat.js
new file mode 100644
index 0000000..718ee4d
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/Repeat.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Svg, { Path } from 'react-native-svg';
+
+import makeIcon from './makeIcon';
+
+const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
+  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
+    <Path
+      d="M6.22 16.55h11.45l-.3.04c1.32-.5 2.1-1.1 2.52-2 .3-.8.4-1.6.3-2.3l-.1-.2 1.7-.4v.3c.14 1 .05 2.06-.43 3.1-.6 1.33-1.8 2.34-3.56 2.9l-.13.06H6.04l2.9 2.9-1.3 1.3-4.9-4.9.1-.1v-.1l.7-.66v-.1h.1l4.26-3.9 1.22 1.4-2.8 2.62zm11.56-9.1H6.33l.3-.04c-1.32.5-2.1 1.1-2.52 2-.3.8-.4 1.6-.3 2.3l.1.2-1.7.4V12c-.14-1-.05-2.06.43-3.1.6-1.33 1.8-2.34 3.56-2.9l.13-.06H18L15.1 3l1.3-1.3 4.9 4.9-.08.1.08.1-.72.65v.1h-.1l-4.26 3.95-1.25-1.35 2.8-2.62z"
+      fill={fill}
+    />
+  </Svg>
+));
+
+Icon.propTypes = {
+  size: PropTypes.number,
+  fill: PropTypes.string,
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/RepeatAll.js b/apolloschurchapp/src/ui/Icon/icons/RepeatAll.js
new file mode 100644
index 0000000..ab0c962
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/RepeatAll.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Svg, { Path } from 'react-native-svg';
+
+import makeIcon from './makeIcon';
+
+const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
+  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
+    <Path
+      d="M2 12l3.87-5H22v10H5.87L2 12zm7.5-1.53l.55 1.73h-1.1l.56-1.73zm1.08 3.4h1.1L10.1 9.5H8.94l-1.6 4.38h1.1l.25-.82h1.6l.26.8zm5.47-4.37v4.38h3.1v-.9h-2V9.5h-1.1zm-3.78 0v4.38h3.1v-.9h-2V9.5h-1.1z"
+      fill={fill}
+    />
+  </Svg>
+));
+
+Icon.propTypes = {
+  size: PropTypes.number,
+  fill: PropTypes.string,
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/RepeatOne.js b/apolloschurchapp/src/ui/Icon/icons/RepeatOne.js
new file mode 100644
index 0000000..65be25d
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/RepeatOne.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Svg, { Path } from 'react-native-svg';
+
+import makeIcon from './makeIcon';
+
+const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
+  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
+    <Path
+      d="M2 12l3.87-5H22v10H5.87L2 12zm7.55-.56v.67c0 .7-.32 1.1-.96 1.1-.7 0-1-.4-1-1.03v-.66c0-.63.3-1.05.93-1.05.63 0 .95.4.95 1.05zm1.1.62v-.57c0-1.2-.7-2-2.06-2-1.4 0-2.1.8-2.1 2v.5c0 1.13.7 2 2.03 2 1.35 0 2.06-.87 2.06-2zm5.5 1.9h3.28v-.9h-2.17v-.87h1.97v-.9h-1.97v-.88h2.17v-.9h-3.28v4.38zm-.9 0V9.6h-1.08v2.54l-1.7-2.55h-1.05v4.3h1.08v-2.5l1.7 2.55h1.05z"
+      fill={fill}
+    />
+  </Svg>
+));
+
+Icon.propTypes = {
+  size: PropTypes.number,
+  fill: PropTypes.string,
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/Search.js b/apolloschurchapp/src/ui/Icon/icons/Search.js
new file mode 100644
index 0000000..ce17480
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/Search.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Svg, { Path } from 'react-native-svg';
+
+import makeIcon from './makeIcon';
+
+const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
+  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
+    <Path
+      d="M20.77 18.56l-3.42-3.42c.82-1.24 1.3-2.72 1.3-4.3 0-4.33-3.5-7.84-7.82-7.84S3 6.5 3 10.83c0 4.3 3.5 7.82 7.83 7.82 1.6 0 3.07-.48 4.3-1.3l3.43 3.42c.3.3.8.3 1.1 0l1.1-1.1c.32-.3.32-.8 0-1.1zm-16.2-7.73c0-3.46 2.8-6.26 6.26-6.26 3.45 0 6.26 2.8 6.26 6.26 0 3.45-2.83 6.26-6.28 6.26-3.46 0-6.26-2.83-6.26-6.28z"
+      fill={fill}
+    />
+  </Svg>
+));
+
+Icon.propTypes = {
+  size: PropTypes.number,
+  fill: PropTypes.string,
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/Sections.js b/apolloschurchapp/src/ui/Icon/icons/Sections.js
new file mode 100644
index 0000000..ecbe137
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/Sections.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Svg, { Path } from 'react-native-svg';
+
+import makeIcon from './makeIcon';
+
+const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
+  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
+    <Path
+      d="M2.4,2.4 L2.4,8.4 L8.4,8.4 L8.4,2.4 L2.4,2.4 Z M1.2,0 L9.6,0 C10.2627417,0 10.8,0.5372583 10.8,1.2 L10.8,9.6 C10.8,10.2627417 10.2627417,10.8 9.6,10.8 L1.2,10.8 C0.5372583,10.8 0,10.2627417 0,9.6 L0,1.2 C0,0.5372583 0.5372583,0 1.2,0 Z M14.4,0 L22.8,0 C23.4627417,0 24,0.5372583 24,1.2 L24,9.6 C24,10.2627417 23.4627417,10.8 22.8,10.8 L14.4,10.8 C13.7372583,10.8 13.2,10.2627417 13.2,9.6 L13.2,1.2 C13.2,0.5372583 13.7372583,0 14.4,0 Z M15.6,2.4 L15.6,8.4 L21.6,8.4 L21.6,2.4 L15.6,2.4 Z M14.4,13.2 L22.8,13.2 C23.4627417,13.2 24,13.7372583 24,14.4 L24,22.8 C24,23.4627417 23.4627417,24 22.8,24 L14.4,24 C13.7372583,24 13.2,23.4627417 13.2,22.8 L13.2,14.4 C13.2,13.7372583 13.7372583,13.2 14.4,13.2 Z M15.6,15.6 L15.6,21.6 L21.6,21.6 L21.6,15.6 L15.6,15.6 Z M1.2,13.2 L9.6,13.2 C10.2627417,13.2 10.8,13.7372583 10.8,14.4 L10.8,22.8 C10.8,23.4627417 10.2627417,24 9.6,24 L1.2,24 C0.5372583,24 0,23.4627417 0,22.8 L0,14.4 C0,13.7372583 0.5372583,13.2 1.2,13.2 Z M2.4,15.6 L2.4,21.6 L8.4,21.6 L8.4,15.6 L2.4,15.6 Z"
+      fill={fill}
+    />
+  </Svg>
+));
+
+Icon.propTypes = {
+  size: PropTypes.number,
+  fill: PropTypes.string,
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/Settings.js b/apolloschurchapp/src/ui/Icon/icons/Settings.js
new file mode 100644
index 0000000..8a5674e
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/Settings.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Svg, { Path } from 'react-native-svg';
+
+import makeIcon from './makeIcon';
+
+const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
+  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
+    <Path
+      d="M18.9108 12.8764c0-.0527.0054-.0964.034-.2803.035-.224.0505-.369.0505-.554 0-.535-.0164-.745-.1206-1.054l-.0246-.062-.643.283.443.541 1.775-1.419.055-.048c.379-.374.441-.861.217-1.303l-.018-.034-1.69-2.921-.046-.0803-.066-.066c-.299-.295-.754-.4074-1.228-.2514l-.039.014-2.113.8345.262.646.44-.543c-.4042-.3196-.756-.516-1.562-.914l-.315.622.6965-.1053-.338-2.17-.697.106.668.22C14.895 3.602 14.2855 3 13.642 3h-3.3812c-.5353 0-1.127.4382-1.127 1.0294h.7044l-.6968-.102-.338 2.2535.6967.101-.222-.66c-.293.096-.565.233-.874.427-.16.101-.687.459-.731.488l.391.578.271-.642-2.029-.834-.048-.018c-.512-.169-.948-.025-1.312.335l-.066.065-.047.081-1.691 2.922.612.345-.498-.492c-.454.448-.24 1.08.169 1.484l.033.033.038.0283 1.775 1.3353.427-.5534h-.705c0 .053-.005.0967-.034.2806-.035.224-.05.3693-.05.554 0 .5354.0167.7457.121 1.0546l.669-.22-.443-.541-1.775 1.419-.055.049c-.379.3742-.44.861-.216 1.3035l.019.034 1.69 2.921.047.081.067.066c.299.295.754.408 1.228.252l.039-.014 2.113-.835-.2616-.646-.44.543c.404.32.756.516 1.562.914l.315-.622-.6966.106.338 2.17.696-.1055H9.22c0 .589.5207 1.0298 1.127 1.0298h3.3813c.5355 0 1.127-.438 1.127-1.03h-.704l.6966.106.338-2.17-.696-.106.315.622c.806-.3974 1.157-.594 1.562-.913l-.44-.543-.262.646 2.113.8343.261-.645-.315.622c.517.2557 1.1934.033 1.452-.478l-.63-.311.6115.3455 1.6907-2.9214.018-.034c.249-.491.174-1.1504-.4-1.434l-.315.622.402-.5707-1.944-1.3355-.402.571h.7045zm-1.4088 0v.3634l.3022.2075 1.944 1.3354.0418.0287.0455.0224c-.1554-.0767-.2346-.21-.2477-.3262-.005-.0438.0008-.0737.0172-.106l.63.311-.6115-.3452-1.6906 2.9212-.019.034c.089-.1766.259-.2324.438-.144l-.054-.0238-2.114-.8346-.381-.1505-.321.2532c-.3.236-.596.402-1.312.755l-.326.161-.056.355-.338 2.17-.009.052v.053c0-.279.112-.362.282-.362h-3.381c.127 0 .281.13.281.361v-.054l-.008-.053-.338-2.17-.0558-.3557-.326-.161c-.7157-.353-1.012-.518-1.312-.755l-.3206-.253-.381.1502-2.113.834.262.646-.2225-.66c.0393-.013.14.012.2137.0846l-.498.492.6116-.345-1.69-2.921-.6116.345.63-.311c.038.0754.0178.2377-.0473.302l-.498-.492.443.5406 1.775-1.419.379-.303-.1548-.4574c-.04-.117-.049-.232-.049-.615 0-.097.009-.183.034-.3424.041-.2638.0505-.3394.0505-.492v-.344l-.278-.209-1.773-1.335-.427.553.498-.492c-.005-.0047-.011-.015-.0097-.01.0083.0262.015.0622.013.115-.0045.1236-.053.2596-.173.3777l.067-.066.0464-.081 1.691-2.921-.611-.345.498.4917c.022-.021.019-.019-.011-.009-.052.017-.101.016-.118.01l.223-.66-.271.642 2.029.8345.348.143.314-.2064c.062-.041.571-.3874.706-.472.22-.138.394-.226.563-.2816l.411-.135.0635-.4226.338-2.2535.0075-.0505v-.05c0 .278-.113.3615-.282.3615h3.381c-.221 0-.429-.2053-.33-.498l-.054.1595.026.1662.338 2.17.0553.3554.326.161c.716.353 1.0125.5186 1.312.7555l.321.253.381-.151 2.113-.8345-.2613-.646.223.66c-.039.013-.14-.012-.2137-.0848l.498-.492-.611.345 1.69 2.9213.6117-.345-.63.311c-.0385-.0756-.018-.238.0472-.302l.498.492-.443-.541-1.775 1.419-.379.304.1542.458.0245.063c.015.054.024.1694.024.552 0 .097-.009.183-.034.343-.041.2637-.0508.339-.0508.492zm-5.5506 1.391c-1.217 0-2.254-1.024-2.254-2.2257 0-1.2016 1.037-2.2256 2.254-2.2256s2.254 1.024 2.254 2.226-1.037 2.226-2.254 2.226zm0 1.391c1.995 0 3.6628-1.6468 3.6628-3.6167 0-1.97-1.6678-3.6167-3.6628-3.6167-1.995 0-3.663 1.6468-3.663 3.6167 0 1.97 1.668 3.6167 3.663 3.6167z"
+      fill={fill}
+    />
+  </Svg>
+));
+
+Icon.propTypes = {
+  size: PropTypes.number,
+  fill: PropTypes.string,
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/Share.js b/apolloschurchapp/src/ui/Icon/icons/Share.js
new file mode 100644
index 0000000..2691126
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/Share.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Svg, { Path } from 'react-native-svg';
+
+import makeIcon from './makeIcon';
+
+const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
+  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
+    <Path
+      d="M12.8 3.621v8.6568h-1.6V3.5545L8.6046 6.224c-.3037.3124-.7962.3124-1.1 0-.3037-.3124-.3037-.819 0-1.1314l3.826-3.9352c.174-.179.41-.2554.637-.2293.227-.026.463.0505.637.2295l3.826 3.9352c.3037.3125.3037.819 0 1.1314-.3038.3125-.7963.3125-1.1 0L12.8 3.621zM8.0338 8v1.5556H6.4012c-.4785 0-.8012.2822-.8012.544v9.8007c0 .2617.3228.544.7997.544h11.2006c.477 0 .7997-.2823.7997-.544v-9.8006c0-.2623-.3216-.544-.796-.544h-1.623V8h1.623C18.927 8 20 8.9403 20 10.0997v9.8006C20 21.06 18.9254 22 17.6003 22H6.3997C5.0744 22 4 21.0597 4 19.9003v-9.8006C4 8.94 5.0743 8 6.4012 8h1.6326z"
+      fill={fill}
+    />
+  </Svg>
+));
+
+Icon.propTypes = {
+  size: PropTypes.number,
+  fill: PropTypes.string,
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/Shuffle.js b/apolloschurchapp/src/ui/Icon/icons/Shuffle.js
new file mode 100644
index 0000000..0b521f6
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/Shuffle.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Svg, { Path } from 'react-native-svg';
+
+import makeIcon from './makeIcon';
+
+const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
+  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
+    <Path
+      d="M18.81 16.6543l-3.0324-3.0325 1.2128-1.2127 3.8464 3.8467.0167-.0156.4454.4778.7214.7215-.0252.0252.028.03-.8566.7986-.359.359-.0125-.0125-3.9745 3.7064-1.1697-1.2544 2.851-2.6588h-3.639c-1.3287 0-2.3808-.7553-3.2627-2.112-.6044-.9298.659-2.4274 1.0328-1.6996.7637 1.487 1.3937 2.0333 2.23 2.0333h3.947zm.1715-10.9927l-2.796-2.7958 1.213-1.2127 3.8463 3.8466.0167-.0155.4455.4777.7215.7216-.0252.0252.028.03-.8566.7986-.359.359-.0125-.0125-3.9746 3.7064-1.1697-1.2544L19.164 7.44h-4.301c-1.2457 0-2.0337 1.2122-3.4872 4.9388-.828 2.123-1.221 3.012-1.8256 3.942-.882 1.3566-1.934 2.112-3.2626 2.112H2v-1.7785h4.2876c1.2456 0 2.0336-1.2122 3.487-4.9388.8282-2.123 1.2212-3.012 1.8257-3.942.882-1.3566 1.934-2.112 3.2626-2.112h4.1184zM6.2875 7.44H2V5.6617h4.2876c1.3286 0 2.3807.7553 3.2626 2.112.6045.9298-.3475 2.6184-.7595 1.8623-.703-1.2902-1.7178-2.196-2.503-2.196z"
+      fill={fill}
+    />
+  </Svg>
+));
+
+Icon.propTypes = {
+  size: PropTypes.number,
+  fill: PropTypes.string,
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/SkipBackThirty.js b/apolloschurchapp/src/ui/Icon/icons/SkipBackThirty.js
new file mode 100644
index 0000000..c2e760f
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/SkipBackThirty.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Svg, { Path } from 'react-native-svg';
+
+import makeIcon from './makeIcon';
+
+const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
+  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
+    <Path
+      d="M8.742 3.226a10.636 10.636 0 0 1 2.152-.423l-1.385 1.6-.074-1.03L12.56 6.08c.736.638-.22 1.742-.957 1.104L8.478 4.476a.74.74 0 0 1-.236-.396.74.74 0 0 1 .19-.666l2.68-3.095a.73.73 0 0 1 1.105.956l-1.323 1.528a10.638 10.638 0 0 1 11.19 7.658 10.48 10.48 0 1 1-20.15 5.77.73.73 0 0 1 1.407-.388 9.02 9.02 0 1 0 17.34-4.972 9.182 9.182 0 0 0-11.51-6.248l.264-1.25L12.56 6.08l-.957 1.104-3.126-2.708a.708.708 0 0 1-.234-.388c-.05-.22.002-.459.188-.674a.725.725 0 0 1 .31-.188zm2.611 10.833c.395.641.397 1.432.005 2.075-.392.643-1.118 1.04-1.906 1.042h-.953c-1.043 0-1.89-.797-1.89-1.78 0-.328.283-.594.63-.594.348 0 .63.266.63.594 0 .327.282.593.63.593h.951c.337 0 .648-.17.816-.446a.844.844 0 0 0-.002-.889.955.955 0 0 0-.818-.442c-.831.002-.846-1.17-.014-1.187.512-.01.922-.404.923-.886.001-.483-.407-.878-.903-.89h-.953c-.348 0-.63.265-.63.593 0 .328-.282.593-.63.593-.347 0-.63-.265-.63-.593 0-.983.847-1.78 1.89-1.78h.969c1.196.028 2.149.951 2.146 2.08a2.012 2.012 0 0 1-.642 1.46c.147.133.276.286.381.457zm5.227 2.806c-.78.424-1.74.424-2.519 0-.78-.424-1.26-1.208-1.26-2.056v-2.374c0-1.31 1.128-2.373 2.52-2.373 1.39 0 2.518 1.062 2.518 2.373v2.374c0 .848-.48 1.632-1.26 2.056zm0-4.43c0-.655-.564-1.186-1.26-1.186-.695 0-1.259.531-1.259 1.186v2.374c0 .424.24.816.63 1.028.39.212.87.212 1.26 0 .389-.212.629-.604.629-1.028v-2.374z"
+      fill={fill}
+    />
+  </Svg>
+));
+
+Icon.propTypes = {
+  size: PropTypes.number,
+  fill: PropTypes.string,
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/SkipForwardThirty.js b/apolloschurchapp/src/ui/Icon/icons/SkipForwardThirty.js
new file mode 100644
index 0000000..9cec2a9
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/SkipForwardThirty.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Svg, { Path } from 'react-native-svg';
+
+import makeIcon from './makeIcon';
+
+const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
+  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
+    <Path
+      d="M15.39 3.24c.12.04.23.1.31.2.2.2.25.45.2.67a.7.7 0 0 1-.24.39l-3.18 2.69-.99-1.12 3.19-2.69.28 1.26a9.56 9.56 0 0 0-7.24.66 9.07 9.07 0 0 0-2.27 14.37 9.47 9.47 0 0 0 8.96 2.57 8.98 8.98 0 0 0 6.6-6.31c.1-.4.52-.62.92-.5.4.1.63.5.52.9-1 3.63-3.93 6.43-7.66 7.33a11 11 0 0 1-10.4-2.98A10.5 10.5 0 0 1 7 4c1.89-1 4.04-1.41 6.17-1.2L11.8 1.25a.72.72 0 0 1 .07-1.03.76.76 0 0 1 1.06.08l2.76 3.12c.18.18.25.43.2.67a.73.73 0 0 1-.24.4l-3.18 2.69c-.75.63-1.74-.48-.99-1.12l3.19-2.69-.07 1.03-1.43-1.6c.74.06 1.48.2 2.2.43zm-3.93 10.82c.39.64.4 1.43 0 2.07a2.23 2.23 0 0 1-1.9 1.05H8.6c-1.04 0-1.89-.8-1.89-1.78 0-.33.28-.6.63-.6s.63.27.63.6c0 .32.28.59.63.59h.95c.34 0 .65-.17.82-.45a.84.84 0 0 0 0-.89.96.96 0 0 0-.82-.44c-.83 0-.85-1.17-.02-1.18.52-.01.93-.4.93-.9 0-.47-.41-.87-.9-.88H8.6c-.35 0-.63.26-.63.6 0 .32-.28.59-.63.59s-.63-.27-.63-.6c0-.98.85-1.78 1.9-1.78h.96c1.2.03 2.15.95 2.15 2.08 0 .57-.25 1.09-.65 1.46.15.13.28.29.39.46zm5.22 2.8c-.78.43-1.74.43-2.52 0a2.35 2.35 0 0 1-1.26-2.05v-2.37c0-1.32 1.13-2.38 2.52-2.38 1.4 0 2.52 1.06 2.52 2.38v2.37c0 .85-.48 1.63-1.26 2.05zm0-4.42c0-.66-.56-1.2-1.26-1.2s-1.26.54-1.26 1.2v2.37c0 .42.24.82.63 1.03.4.2.87.2 1.26 0 .4-.21.63-.6.63-1.03v-2.37z"
+      fill={fill}
+    />
+  </Svg>
+));
+
+Icon.propTypes = {
+  size: PropTypes.number,
+  fill: PropTypes.string,
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/SkipNext.js b/apolloschurchapp/src/ui/Icon/icons/SkipNext.js
new file mode 100644
index 0000000..7cdfe6e
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/SkipNext.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Svg, { Path } from 'react-native-svg';
+
+import makeIcon from './makeIcon';
+
+const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
+  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
+    <Path
+      d="M13.78 4.168v15.67c0 .116.01.173.004.16-.07-.15-.238-.318-.502-.42-.265-.1-.512-.09-.678-.03-.013.006.038-.028.127-.11l7.404-6.805c.322-.296.325-.784.006-1.083l-7.437-6.977c-.09-.084-.142-.12-.13-.114.17.062.424.074.697-.028.272-.103.442-.276.514-.43.005-.012-.005.046-.005.164zm-1.626 0c0-1.24.763-1.528 1.707-.642l7.44 6.977c.943.885.935 2.31-.02 3.188l-7.4 6.808c-.952.876-1.724.58-1.724-.657V4.168zM2 4.168c0-1.24.78-1.54 1.737-.674l7.377 6.667c.96.87.978 2.297.048 3.185L3.69 20.47c-.934.89-1.69.606-1.69-.63V4.167zm1.625 0v15.67c0 .12.01.178.005.166-.072-.157-.245-.332-.522-.436-.28-.105-.54-.09-.712-.022-.015.005.036-.03.124-.113l7.472-7.13c.313-.297.306-.784-.017-1.075L2.6 4.56c-.09-.078-.14-.11-.126-.106.164.06.407.066.665-.033.255-.1.42-.262.49-.41.003-.01-.007.045-.007.16z"
+      fill={fill}
+    />
+  </Svg>
+));
+
+Icon.propTypes = {
+  size: PropTypes.number,
+  fill: PropTypes.string,
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/SkipPrevious.js b/apolloschurchapp/src/ui/Icon/icons/SkipPrevious.js
new file mode 100644
index 0000000..818867d
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/SkipPrevious.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Svg, { Path } from 'react-native-svg';
+
+import makeIcon from './makeIcon';
+
+const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
+  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
+    <Path
+      d="M11.846 4.168v15.67c0 1.238-.772 1.534-1.725.658l-7.4-6.805c-.95-.87-.96-2.3-.01-3.18l7.44-6.97c.95-.88 1.71-.59 1.71.64zm-1.625 0c0-.118-.01-.176 0-.165.07.155.24.328.52.43.28.103.53.09.7.026.02-.01-.04.03-.13.11l-7.44 6.98c-.32.3-.31.78.01 1.08l7.4 6.8c.09.08.14.11.13.11-.162-.06-.41-.07-.68.03-.26.1-.43.27-.5.42-.002.01.008-.05.008-.16V4.17zm11.78 0v15.67c0 1.238-.75 1.523-1.69.633l-7.47-7.12c-.93-.89-.91-2.31.05-3.18l7.38-6.67c.95-.87 1.73-.57 1.73.67zm-1.62 0c0-.115-.01-.17 0-.16.07.148.24.313.49.413.26.1.51.1.67.04.02 0-.03.03-.12.11l-7.38 6.66c-.32.29-.33.78-.012 1.08l7.47 7.13c.09.09.14.12.125.11-.173-.07-.433-.09-.712.02-.274.1-.45.28-.52.44-.004.01.006-.04.006-.16V4.17z"
+      fill={fill}
+    />
+  </Svg>
+));
+
+Icon.propTypes = {
+  size: PropTypes.number,
+  fill: PropTypes.string,
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/Text.js b/apolloschurchapp/src/ui/Icon/icons/Text.js
new file mode 100644
index 0000000..c9f763d
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/Text.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Svg, { Path } from 'react-native-svg';
+
+import makeIcon from './makeIcon';
+
+const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
+  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
+    <Path
+      d="M4.6 3.64v16.356c0 .004 0 .004-.003.004h14.806c-.004 0-.003 0-.003-.004V3.64c0-.004 0-.004.003-.004H4.597c.004 0 .003 0 .003.004zm-1.6 0C3 2.734 3.717 2 4.597 2h14.806C20.285 2 21 2.734 21 3.64v16.356c0 .906-.717 1.64-1.597 1.64H4.597c-.882 0-1.597-.734-1.597-1.64V3.64zm4 3.27c0 .45.366.817.818.817h8.364c.452 0 .818-.366.818-.818 0-.454-.366-.82-.818-.82H7.818c-.452 0-.818.366-.818.82zm0 4.908c0 .452.366.818.818.818h8.364c.452 0 .818-.366.818-.818 0-.452-.366-.818-.818-.818H7.818c-.452 0-.818.366-.818.818zm0 4.91c0 .45.366.817.818.817h4.764c.452 0 .818-.366.818-.818 0-.452-.366-.818-.818-.818H7.818c-.452 0-.818.364-.818.816z"
+      fill={fill}
+    />
+  </Svg>
+));
+
+Icon.propTypes = {
+  size: PropTypes.number,
+  fill: PropTypes.string,
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/Time.js b/apolloschurchapp/src/ui/Icon/icons/Time.js
new file mode 100644
index 0000000..03096b9
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/Time.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Svg, { Path } from 'react-native-svg';
+
+import makeIcon from './makeIcon';
+
+const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
+  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
+    <Path
+      d="M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8zm.5-13H11v6l5.25 3.15.75-1.23-4.5-2.67V7z"
+      fill={fill}
+    />
+  </Svg>
+));
+
+Icon.propTypes = {
+  size: PropTypes.number,
+  fill: PropTypes.string,
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/Umbrella.js b/apolloschurchapp/src/ui/Icon/icons/Umbrella.js
new file mode 100644
index 0000000..c146811
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/Umbrella.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Svg, { Path } from 'react-native-svg';
+
+import makeIcon from './makeIcon';
+
+const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
+  <Svg width={size} height={size} viewBox="0 0 32 32" {...otherProps}>
+    <Path
+      d="M27 14h5c0-1.105-1.119-2-2.5-2s-2.5 0.895-2.5 2v0zM27 14c0-1.105-1.119-2-2.5-2s-2.5 0.895-2.5 2c0-1.105-1.119-2-2.5-2s-2.5 0.895-2.5 2v0 14c0 1.112-0.895 2-2 2-1.112 0-2-0.896-2-2.001v-1.494c0-0.291 0.224-0.505 0.5-0.505 0.268 0 0.5 0.226 0.5 0.505v1.505c0 0.547 0.444 0.991 1 0.991 0.552 0 1-0.451 1-0.991v-14.009c0-1.105-1.119-2-2.5-2s-2.5 0.895-2.5 2c0-1.105-1.119-2-2.5-2s-2.5 0.895-2.5 2c0-1.105-1.119-2-2.5-2s-2.5 0.895-2.5 2c0-5.415 6.671-9.825 15-9.995v-1.506c0-0.283 0.224-0.499 0.5-0.499 0.268 0 0.5 0.224 0.5 0.499v1.506c8.329 0.17 15 4.58 15 9.995h-5z"
+      fill={fill}
+    />
+  </Svg>
+));
+
+Icon.propTypes = {
+  size: PropTypes.number,
+  fill: PropTypes.string,
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/Video.js b/apolloschurchapp/src/ui/Icon/icons/Video.js
new file mode 100644
index 0000000..702bed5
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/Video.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Svg, { Path } from 'react-native-svg';
+
+import makeIcon from './makeIcon';
+
+const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
+  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
+    <Path
+      d="M3.8182 5.7778v12.4444H14.2V5.7778H3.8182zM16 6v12c0 1.1046-.8954 2-2 2H4c-1.1046 0-2-.8954-2-2V6c0-1.1046.8954-2 2-2h10c1.1046 0 2 .8954 2 2zm4.1818 2.6952L16 11.8084v.3832l4.1818 3.251V8.695zM16 14.4957V9.4253l6-4.2178v13.585l-6-4.2968z"
+      fill={fill}
+    />
+  </Svg>
+));
+
+Icon.propTypes = {
+  size: PropTypes.number,
+  fill: PropTypes.string,
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/VideoOff.js b/apolloschurchapp/src/ui/Icon/icons/VideoOff.js
new file mode 100644
index 0000000..be6a3f0
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/VideoOff.js
@@ -0,0 +1,26 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Svg, { Path } from 'react-native-svg';
+
+import makeIcon from './makeIcon';
+
+const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
+  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
+    <Path
+      d="M3.8182 5.7778v12.4444H14.2V5.7778H3.8182zM16 6v12c0 1.1046-.8954 2-2 2H4c-1.1046 0-2-.8954-2-2V6c0-1.1046.8954-2 2-2h10c1.1046 0 2 .8954 2 2zm4.1818 2.6952L16 11.8084v.3832l4.1818 3.251V8.695zM16 14.4957V9.4253l6-4.2178v13.585l-6-4.2968z"
+      fill={fill}
+    />
+    <Path
+      d="M0.219669914,1.28033009 C-0.0732233047,0.987436867 -0.0732233047,0.512563133 0.219669914,0.219669914 C0.512563133,-0.0732233047 0.987436867,-0.0732233047 1.28033009,0.219669914 L23.7803301,22.7196699 C24.0732233,23.0125631 24.0732233,23.4874369 23.7803301,23.7803301 C23.4874369,24.0732233 23.0125631,24.0732233 22.7196699,23.7803301 L0.219669914,1.28033009 Z"
+      transform="translate(12.000000, 12.000000) scale(-1, 1) translate(-12.000000, -12.000000) "
+      fill={fill}
+    />
+  </Svg>
+));
+
+Icon.propTypes = {
+  size: PropTypes.number,
+  fill: PropTypes.string,
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/Volume.js b/apolloschurchapp/src/ui/Icon/icons/Volume.js
new file mode 100644
index 0000000..1161122
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/Volume.js
@@ -0,0 +1,29 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Svg, { Path, G } from 'react-native-svg';
+
+import makeIcon from './makeIcon';
+
+const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
+  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
+    <G
+      fill={'none'}
+      stroke={fill}
+      strokeWidth={1.5}
+      strokeLinecap={'round'}
+      strokeLinejoin={'round'}
+    >
+      <Path d="M14.17 4.66a1.5 1.5 0 0 0-1.57.14L6 9H3a1.5 1.5 0 0 0-1.5 1.5v3A1.5 1.5 0 0 0 3 15h3l6.6 4.2A1.5 1.5 0 0 0 15 18V6a1.5 1.5 0 0 0-.83-1.34z" />
+      <Path d="M21.46 15.75a6.6 6.6 0 0 0 0-7.1" />
+      <Path d="M18.56 14.44a3.5 3.5 0 0 0 0-4.4" />
+      <Path d="M6 9v6" />
+    </G>
+  </Svg>
+));
+
+Icon.propTypes = {
+  size: PropTypes.number,
+  fill: PropTypes.string,
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/Warning.js b/apolloschurchapp/src/ui/Icon/icons/Warning.js
new file mode 100644
index 0000000..abd015a
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/Warning.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Svg, { Path } from 'react-native-svg';
+
+import makeIcon from './makeIcon';
+
+const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
+  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
+    <Path
+      d="M21.8955 19.741l-9.091-16.3178c-.3145-.5643-1.2945-.5643-1.609 0L2.1045 19.741c-.148.2662-.138.5865.0255.8433.1655.2585.46.4157.779.4157h18.182c.319 0 .6136-.1572.778-.4148.1647-.2577.1747-.578.0265-.8442zM12 18.4235c-.5018 0-.909-.3847-.909-.8588 0-.474.4072-.8588.909-.8588.502 0 .909.3845.909.8586 0 .474-.407.8588-.909.8588zm.909-3.4353h-1.818V8.9764h1.818v6.0118z"
+      fill={fill}
+    />
+  </Svg>
+));
+
+Icon.propTypes = {
+  size: PropTypes.number,
+  fill: PropTypes.string,
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/index.js b/apolloschurchapp/src/ui/Icon/icons/index.js
new file mode 100644
index 0000000..4596f20
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/index.js
@@ -0,0 +1,58 @@
+export { default as ArrowBack } from './ArrowBack';
+export { default as ArrowDown } from './ArrowDown';
+export { default as ArrowNext } from './ArrowNext';
+export { default as ArrowUp } from './ArrowUp';
+export { default as Audio } from './Audio';
+export { default as Bank } from './Bank';
+export { default as BrandIcon } from './BrandIcon';
+export { default as Building } from './Building';
+export { default as Calendar } from './Calendar';
+export { default as Camera } from './Camera';
+export { default as Check } from './Check';
+export { default as CheckboxChecked } from './CheckboxChecked';
+export { default as CheckboxUnchecked } from './CheckboxUnchecked';
+export { default as CircleOutlineCheckMark } from './CircleOutlineCheckMark';
+export { default as CircleOutlineXMark } from './CircleOutlineXMark';
+export { default as Close } from './Close';
+export { default as Credit } from './Credit';
+export { default as Chromecast } from './Chromecast';
+export { default as Download } from './Download';
+export { default as Dropdown } from './Dropdown';
+export { default as Empty } from './Empty';
+export { default as Failed } from './Failed';
+export { default as Filter } from './Filter';
+export { default as Fullscreen } from './Fullscreen';
+export { default as Groups } from './Groups';
+export { default as Home } from './Home';
+export { default as Information } from './Information';
+export { default as Like } from './Like';
+export { default as LikeSolid } from './LikeSolid';
+export { default as Locate } from './Locate';
+export { default as Lock } from './Lock';
+export { default as Mute } from './Mute';
+export { default as Pause } from './Pause';
+export { default as Pin } from './Pin';
+export { default as Play } from './Play';
+export { default as Print } from './Print';
+export { default as Profile } from './Profile';
+export { default as RadioChecked } from './RadioChecked';
+export { default as RadioUnchecked } from './RadioUnchecked';
+export { default as Repeat } from './Repeat';
+export { default as RepeatAll } from './RepeatAll';
+export { default as RepeatOne } from './RepeatOne';
+export { default as Search } from './Search';
+export { default as Sections } from './Sections';
+export { default as Settings } from './Settings';
+export { default as Share } from './Share';
+export { default as Shuffle } from './Shuffle';
+export { default as SkipForwardThirty } from './SkipForwardThirty';
+export { default as SkipBackThirty } from './SkipBackThirty';
+export { default as SkipNext } from './SkipNext';
+export { default as SkipPrevious } from './SkipPrevious';
+export { default as Text } from './Text';
+export { default as Time } from './Time';
+export { default as Umbrella } from './Umbrella';
+export { default as Video } from './Video';
+export { default as VideoOff } from './VideoOff';
+export { default as Volume } from './Volume';
+export { default as Warning } from './Warning';
diff --git a/apolloschurchapp/src/ui/Icon/icons/makeIcon.js b/apolloschurchapp/src/ui/Icon/icons/makeIcon.js
new file mode 100644
index 0000000..ead36b1
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/makeIcon.js
@@ -0,0 +1,10 @@
+import { withTheme } from 'apolloschurchapp/src/ui/theme';
+
+// Currently used to inject default fill color to icons.
+// Eventually can be used for other shared functionality between icons
+const makeIcon = withTheme(({ theme, fill, ...otherProps } = {}) => ({
+  fill: fill || theme.colors.text.primary,
+  ...otherProps,
+}));
+
+export default makeIcon;
diff --git a/apolloschurchapp/src/ui/Icon/index.js b/apolloschurchapp/src/ui/Icon/index.js
new file mode 100644
index 0000000..f213544
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/index.js
@@ -0,0 +1,45 @@
+import PropTypes from 'prop-types';
+import React from 'react';
+import { compose, pure } from 'recompose';
+import { flow, camelCase, upperFirst, kebabCase } from 'lodash';
+
+import Placeholder from 'apolloschurchapp/src/ui/Placeholder';
+
+import * as Icons from './icons';
+
+const pascalCase = (string) =>
+  flow(
+    camelCase,
+    upperFirst
+  )(string);
+
+// Convenience component to render icons based on the icon's string name, like:
+// <Icon name="skip-next" {...allOtherPropsPassedToComponent} />
+//
+// Can also import the icon directly:
+// import { SkipNext } from 'Icon/icons';
+// <SkipNext />
+
+const enhance = compose(pure);
+
+const Icon = enhance(({ name, size, isLoading = false, ...otherProps }) => {
+  const IconComponent = Icons[pascalCase(name)];
+  return (
+    <Placeholder.Media size={size} hasRadius onReady={!isLoading}>
+      <IconComponent size={size} {...otherProps} />
+    </Placeholder.Media>
+  );
+});
+
+Icon.propTypes = {
+  name: PropTypes.oneOf(Object.keys(Icons).map(kebabCase)).isRequired,
+  size: PropTypes.number,
+  fill: PropTypes.string,
+  isLoading: PropTypes.bool,
+};
+
+Icon.defaultProps = {
+  size: 32, // 32 is the default size used within the svg component
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/LandingScreen/LandingScreen.stories.js b/apolloschurchapp/src/ui/LandingScreen/LandingScreen.stories.js
deleted file mode 100644
index d9ebd3c..0000000
--- a/apolloschurchapp/src/ui/LandingScreen/LandingScreen.stories.js
+++ /dev/null
@@ -1,23 +0,0 @@
-import React from 'react';
-import { storiesOf } from '@apollosproject/ui-storybook';
-import { GradientOverlayImage } from '@apollosproject/ui-kit';
-
-import LandingScreen from '.';
-
-storiesOf('LandingScreen', module)
-  .add('default', () => <LandingScreen />)
-  .add('slideTitle', () => <LandingScreen slideTitle={'Custom title text'} />)
-  .add('description', () => (
-    <LandingScreen description={'Custom description text'} />
-  ))
-  .add('textColor', () => <LandingScreen textColor={'salmon'} />)
-  .add('ImageComponent', () => (
-    <LandingScreen
-      BackgroundComponent={
-        <GradientOverlayImage
-          source={'https://picsum.photos/375/812/?random'}
-        />
-      }
-    />
-  ))
-  .add('Slide props', () => <LandingScreen onPressPrimary={() => {}} />);
diff --git a/apolloschurchapp/src/ui/LandingScreen/LandingScreen.tests.js b/apolloschurchapp/src/ui/LandingScreen/LandingScreen.tests.js
deleted file mode 100644
index 13e64f1..0000000
--- a/apolloschurchapp/src/ui/LandingScreen/LandingScreen.tests.js
+++ /dev/null
@@ -1,64 +0,0 @@
-import React from 'react';
-import renderer from 'react-test-renderer';
-import { GradientOverlayImage } from '@apollosproject/ui-kit';
-
-import Providers from 'apolloschurchapp/src/Providers';
-
-import LandingScreen from '.';
-
-describe('The Onboarding LandingScreen component', () => {
-  it('should render', () => {
-    const tree = renderer.create(
-      <Providers>
-        <LandingScreen />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render a custom title', () => {
-    const tree = renderer.create(
-      <Providers>
-        <LandingScreen slideTitle={'Custom title text'} />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render a custom description', () => {
-    const tree = renderer.create(
-      <Providers>
-        <LandingScreen description={'Custom description text'} />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render with a custom text color', () => {
-    const tree = renderer.create(
-      <Providers>
-        <LandingScreen textColor={'salmon'} />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render with an ImageComponent', () => {
-    const tree = renderer.create(
-      <Providers>
-        <LandingScreen
-          BackgroundComponent={
-            <GradientOverlayImage
-              source={'https://picsum.photos/375/812/?random'}
-            />
-          }
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should pass additional props to Slide', () => {
-    const tree = renderer.create(
-      <Providers>
-        <LandingScreen onPressPrimary={jest.fn()} />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/ui/LandingScreen/index.js b/apolloschurchapp/src/ui/LandingScreen/index.js
deleted file mode 100644
index f929f81..0000000
--- a/apolloschurchapp/src/ui/LandingScreen/index.js
+++ /dev/null
@@ -1,86 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-
-import {
-  styled,
-  withTheme,
-  Icon,
-  H1,
-  H4,
-  PaddedView,
-  BackgroundView,
-} from '@apollosproject/ui-kit';
-
-import { Slide } from '@apollosproject/ui-onboarding';
-
-const Content = styled({
-  flex: 1,
-  justifyContent: 'center',
-})(PaddedView);
-
-const BrandIcon = withTheme(({ theme, color }) => ({
-  name: 'brand-icon',
-  size: theme.sizing.baseUnit * 3,
-  ...(color ? { fill: color } : {}),
-  style: {
-    marginBottom: theme.sizing.baseUnit,
-  },
-}))(Icon);
-
-const Title = styled(({ theme, color }) => ({
-  marginBottom: theme.sizing.baseUnit * 2,
-  ...(color ? { color } : {}),
-}))(H1);
-
-const StyledH4 = styled(({ color }) => ({
-  ...(color ? { color } : {}),
-}))(H4);
-
-const LandingScreen = ({
-  slideTitle,
-  description,
-  textColor,
-  BackgroundComponent,
-  ...props
-}) => (
-  <BackgroundView>
-    <Slide {...props} scrollEnabled={false}>
-      {BackgroundComponent}
-      <Content>
-        <BrandIcon color={textColor} />
-        <Title color={textColor}>{slideTitle}</Title>
-        <StyledH4 color={textColor}>{description}</StyledH4>
-      </Content>
-    </Slide>
-  </BackgroundView>
-);
-
-LandingScreen.propTypes = {
-  /* The `Swiper` component used in `<onBoarding>` looks for and hijacks the title prop of it's
-   * children. Thus we have to use more unique name.
-   */
-  slideTitle: PropTypes.string,
-  description: PropTypes.string,
-  textColor: PropTypes.string, // Use for custom text and `BrandIcon` color when overlaying text on an image or video needs more clarity. Defaults to theme driven colors.
-  /* Recommended usage:
-   * - `Image` (react-native)
-   * - `GradientOverlayImage` (@apollosproject/ui-kit) for increased readability
-   * - `Video` (react-native-video) because moving pictures!
-   */
-  BackgroundComponent: PropTypes.oneOfType([
-    PropTypes.arrayOf(PropTypes.node),
-    PropTypes.node,
-  ]),
-};
-
-LandingScreen.defaultProps = {
-  slideTitle: "We're glad you're here.",
-  description:
-    "We're not just a building you go to, but a family to belong to.",
-};
-
-LandingScreen.navigationOptions = {
-  header: null,
-};
-
-export default LandingScreen;
diff --git a/apolloschurchapp/src/ui/LayoutContext/LayoutContext.tests.js b/apolloschurchapp/src/ui/LayoutContext/LayoutContext.tests.js
new file mode 100644
index 0000000..f66a362
--- /dev/null
+++ b/apolloschurchapp/src/ui/LayoutContext/LayoutContext.tests.js
@@ -0,0 +1,20 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import { LayoutConsumer } from '.';
+
+describe(`LayoutContext Provider and Consumer`, () => {
+  it('provides safeAreaInsets', async () => {
+    renderer.create(
+      <Providers>
+        <LayoutConsumer>
+          {({ safeAreaInsets }) => {
+            expect(safeAreaInsets).toMatchSnapshot();
+          }}
+        </LayoutConsumer>
+      </Providers>
+    );
+  });
+});
diff --git a/apolloschurchapp/src/ui/LayoutContext/Provider.js b/apolloschurchapp/src/ui/LayoutContext/Provider.js
new file mode 100644
index 0000000..d8fc582
--- /dev/null
+++ b/apolloschurchapp/src/ui/LayoutContext/Provider.js
@@ -0,0 +1,68 @@
+import React, { Component } from 'react';
+import { Dimensions, StyleSheet, SafeAreaView, View } from 'react-native';
+import PropTypes from 'prop-types';
+import { isEqual } from 'lodash';
+
+import Context, { initialState } from './context';
+
+const initialDimensions = Dimensions.get('screen');
+
+const styles = StyleSheet.create({
+  flex: { flex: 1 },
+});
+
+class LayoutProvider extends Component {
+  static propTypes = {
+    children: PropTypes.node,
+  };
+
+  state = initialState;
+
+  rootHeight = initialDimensions.height;
+
+  rootWidth = initialDimensions.width;
+
+  handleRootLayout = ({
+    nativeEvent: {
+      layout: { height, width },
+    },
+  }) => {
+    this.rootHeight = height;
+    this.rootWidth = width;
+  };
+
+  handleChildLayout = ({
+    nativeEvent: {
+      layout: { x, y, width, height },
+    },
+  }) => {
+    const safeAreaInsets = {
+      top: y,
+      bottom: this.rootHeight - height - y,
+      left: x,
+      right: this.rootWidth - width - x,
+    };
+
+    if (!isEqual(this.state.safeAreaInsets, safeAreaInsets)) {
+      this.setState({ safeAreaInsets });
+    }
+  };
+
+  render() {
+    return (
+      <SafeAreaView
+        style={StyleSheet.absoluteFill}
+        onLayout={this.handleRootLayout}
+      >
+        <View style={styles.flex} onLayout={this.handleChildLayout} />
+        <View style={StyleSheet.absoluteFill}>
+          <Context.Provider value={this.state}>
+            {this.props.children}
+          </Context.Provider>
+        </View>
+      </SafeAreaView>
+    );
+  }
+}
+
+export default LayoutProvider;
diff --git a/apolloschurchapp/src/ui/LayoutContext/context.js b/apolloschurchapp/src/ui/LayoutContext/context.js
new file mode 100644
index 0000000..91191ad
--- /dev/null
+++ b/apolloschurchapp/src/ui/LayoutContext/context.js
@@ -0,0 +1,12 @@
+import { createContext } from 'react';
+
+export const initialState = {
+  safeAreaInsets: {
+    top: 0,
+    left: 0,
+    right: 0,
+    bottom: 0,
+  },
+};
+
+export default createContext(initialState);
diff --git a/apolloschurchapp/src/ui/LayoutContext/index.js b/apolloschurchapp/src/ui/LayoutContext/index.js
new file mode 100644
index 0000000..2fda4c4
--- /dev/null
+++ b/apolloschurchapp/src/ui/LayoutContext/index.js
@@ -0,0 +1,6 @@
+import LayoutProvider from './Provider';
+import Context from './context';
+
+const LayoutConsumer = Context.Consumer;
+
+export { LayoutProvider, LayoutConsumer };
diff --git a/apolloschurchapp/src/ui/LikeContentButton/Like.tests.js b/apolloschurchapp/src/ui/Like/Like.tests.js
similarity index 91%
rename from apolloschurchapp/src/ui/LikeContentButton/Like.tests.js
rename to apolloschurchapp/src/ui/Like/Like.tests.js
index 1ec78ec..f7d40c2 100644
--- a/apolloschurchapp/src/ui/LikeContentButton/Like.tests.js
+++ b/apolloschurchapp/src/ui/Like/Like.tests.js
@@ -5,7 +5,7 @@ import Providers from 'apolloschurchapp/src/Providers';
 
 import { LikeIcon } from '.';
 
-describe('the LikeContentButton component', () => {
+describe('the Like component', () => {
   it('should render a Like', () => {
     const tree = renderer.create(
       <Providers>
diff --git a/apolloschurchapp/src/ui/LikeContentButton/index.js b/apolloschurchapp/src/ui/Like/index.js
similarity index 62%
rename from apolloschurchapp/src/ui/LikeContentButton/index.js
rename to apolloschurchapp/src/ui/Like/index.js
index 3a58e27..983fb9c 100644
--- a/apolloschurchapp/src/ui/LikeContentButton/index.js
+++ b/apolloschurchapp/src/ui/Like/index.js
@@ -1,10 +1,9 @@
 import React from 'react';
 import PropTypes from 'prop-types';
 
-import { Icon, withTheme } from '@apollosproject/ui-kit';
-import { ProtectedTouchable } from '@apollosproject/ui-auth';
-
-import { withNavigation } from 'react-navigation';
+import Icon from 'apolloschurchapp/src/ui/Icon';
+import { withTheme } from 'apolloschurchapp/src/ui/theme';
+import ProtectedTouchable from '../../auth/ProtectedTouchable';
 
 const LikeIcon = withTheme(
   ({ theme: { colors: { secondary } = {} } = {}, isLiked } = {}) => ({
@@ -17,7 +16,7 @@ LikeIcon.propTypes = {
   isLiked: PropTypes.bool,
 };
 
-const LikeContentButton = withNavigation(({ isLiked, toggleLike, itemId }) => (
+const Like = ({ isLiked, toggleLike, itemId }) => (
   <ProtectedTouchable
     onPress={() =>
       toggleLike({ itemId, operation: isLiked ? 'Unlike' : 'Like' })
@@ -25,12 +24,12 @@ const LikeContentButton = withNavigation(({ isLiked, toggleLike, itemId }) => (
   >
     <LikeIcon isLiked={isLiked} />
   </ProtectedTouchable>
-));
+);
 
-LikeContentButton.propTypes = {
+Like.propTypes = {
   itemId: PropTypes.string,
   isLiked: PropTypes.bool,
   toggleLike: PropTypes.func,
 };
 
-export { LikeContentButton as default, LikeIcon };
+export { Like as default, LikeIcon };
diff --git a/apolloschurchapp/src/ui/LikeContentButtonConnected/LikeButton.tests.js b/apolloschurchapp/src/ui/LikeButton/LikeButton.tests.js
similarity index 50%
rename from apolloschurchapp/src/ui/LikeContentButtonConnected/LikeButton.tests.js
rename to apolloschurchapp/src/ui/LikeButton/LikeButton.tests.js
index aee7385..d3bf42f 100644
--- a/apolloschurchapp/src/ui/LikeContentButtonConnected/LikeButton.tests.js
+++ b/apolloschurchapp/src/ui/LikeButton/LikeButton.tests.js
@@ -4,9 +4,9 @@
 // import Providers from 'apolloschurchapp/src/Providers';
 // import gql from 'graphql-tag';
 
-// import LikeContentButtonConnected from '.';
+// import LikeButton from '.';
 
-describe('the LikeContentButtonConnected component', () => {
+describe('the LikeButton component', () => {
   it('should render', () => {
     //     const updateLikeEntity = {
     //       request: {
@@ -56,57 +56,7 @@ describe('the LikeContentButtonConnected component', () => {
     //     };
     //     const tree = renderer.create(
     //       <Providers mocks={[updateLikeEntity, getLikedContentItem]}>
-    //         <LikeContentButtonConnected itemId={'asdf'} />
-    //       </Providers>
-    //     );
-    //     expect(tree).toMatchSnapshot();
-  });
-  it('should render when loading', () => {
-    //     const updateLikeEntity = {
-    //       request: {
-    //         query: gql`
-    //           mutation updateLikeEntity($itemId: ID!, $operation: LIKE_OPERATION!) {
-    //             updateLikeEntity(
-    //               input: { nodeId: $itemId, operation: $operation }
-    //             ) {
-    //               id
-    //               operation
-    //               interactionDateTime
-    //             }
-    //           }
-    //         `,
-    //         variables: {
-    //           itemId: 'asdf',
-    //           operation: 'Like',
-    //         },
-    //       },
-    //       result: {
-    //         data: {
-    //           node: { isLiked: true },
-    //         },
-    //       },
-    //     };
-    //     const getLikedContentItem = {
-    //       request: {
-    //         query: gql`
-    //           query getLikedContentItem($itemId: ID!) {
-    //             node(id: $itemId) {
-    //               ... on ContentItem {
-    //                 id
-    //                 isLiked
-    //               }
-    //             }
-    //           }
-    //         `,
-    //         variables: {
-    //           itemId: 'asdf',
-    //         },
-    //       },
-    //       result: null,
-    //     };
-    //     const tree = renderer.create(
-    //       <Providers mocks={[updateLikeEntity, getLikedContentItem]}>
-    //         <LikeContentButtonConnected itemId={'asdf'} />
+    //         <LikeButton itemId={'asdf'} />
     //       </Providers>
     //     );
     //     expect(tree).toMatchSnapshot();
diff --git a/apolloschurchapp/src/ui/LikeContentButtonConnected/getLikedContentItem.js b/apolloschurchapp/src/ui/LikeButton/getLikedContentItem.js
similarity index 100%
rename from apolloschurchapp/src/ui/LikeContentButtonConnected/getLikedContentItem.js
rename to apolloschurchapp/src/ui/LikeButton/getLikedContentItem.js
diff --git a/apolloschurchapp/src/ui/LikeButton/index.js b/apolloschurchapp/src/ui/LikeButton/index.js
new file mode 100644
index 0000000..fee9f8b
--- /dev/null
+++ b/apolloschurchapp/src/ui/LikeButton/index.js
@@ -0,0 +1,116 @@
+import React from 'react';
+
+import PropTypes from 'prop-types';
+import { get } from 'lodash';
+import { Query, Mutation } from 'react-apollo';
+
+import Like from 'apolloschurchapp/src/ui/Like';
+import { track, events } from 'apolloschurchapp/src/analytics';
+
+import updateLikeEntity from './updateLikeEntity';
+import getLikedContentItem from './getLikedContentItem';
+import updateLikedContent from './updateLikedContent';
+
+const GetLikeData = ({ itemId, children }) => (
+  <Query query={getLikedContentItem} variables={{ itemId }}>
+    {({ data: { node = {} } = {}, loading }) => {
+      const isLiked = loading ? false : get(node, 'isLiked') || false;
+      return children({ isLiked, item: node });
+    }}
+  </Query>
+);
+
+GetLikeData.propTypes = {
+  itemId: PropTypes.string,
+  children: PropTypes.func.isRequired,
+};
+
+const UpdateLikeStatus = ({ itemId, item, isLiked, children }) => (
+  <Mutation
+    mutation={updateLikeEntity}
+    optimisticResponse={{
+      updateLikeEntity: {
+        operation: isLiked ? 'Unlike' : 'Like',
+        id: null, // unknown at this time
+        interactionDateTime: new Date().toJSON(),
+        __typename: 'Interaction',
+      },
+    }}
+    update={(
+      cache,
+      {
+        data: {
+          updateLikeEntity: { operation },
+        },
+      }
+    ) => {
+      updateLikedContent({ liked: operation === 'Like', cache, item });
+      cache.writeQuery({
+        query: getLikedContentItem,
+        data: {
+          node: {
+            ...item,
+            isLiked: operation === 'Like',
+          },
+        },
+      });
+    }}
+  >
+    {(createNewInteraction) =>
+      itemId
+        ? children({
+            itemId,
+            isLiked,
+            toggleLike: async (variables) => {
+              try {
+                await createNewInteraction({ variables });
+                track({
+                  eventName: isLiked
+                    ? events.UnlikeContent
+                    : events.LikeContent,
+                  properties: {
+                    id: itemId,
+                  },
+                });
+              } catch (e) {
+                throw e.message;
+              }
+            },
+          })
+        : null
+    }
+  </Mutation>
+);
+
+UpdateLikeStatus.propTypes = {
+  itemId: PropTypes.string,
+  children: PropTypes.func.isRequired,
+  isLiked: PropTypes.bool.isRequired,
+  item: PropTypes.shape({
+    id: PropTypes.string,
+    __typename: PropTypes.string,
+    isLiked: PropTypes.bool,
+  }),
+};
+
+const LikeButton = ({ itemId }) => (
+  <GetLikeData itemId={itemId}>
+    {({ isLiked, item }) => (
+      <UpdateLikeStatus itemId={itemId} item={item} isLiked={isLiked}>
+        {({ toggleLike, isLiked: newLikeValue }) => (
+          <Like
+            itemId={itemId}
+            isLiked={newLikeValue}
+            toggleLike={toggleLike}
+          />
+        )}
+      </UpdateLikeStatus>
+    )}
+  </GetLikeData>
+);
+
+LikeButton.propTypes = {
+  itemId: PropTypes.string,
+};
+
+export default LikeButton;
diff --git a/apolloschurchapp/src/ui/LikeContentButtonConnected/updateLikeEntity.js b/apolloschurchapp/src/ui/LikeButton/updateLikeEntity.js
similarity index 84%
rename from apolloschurchapp/src/ui/LikeContentButtonConnected/updateLikeEntity.js
rename to apolloschurchapp/src/ui/LikeButton/updateLikeEntity.js
index 986d867..892fd76 100644
--- a/apolloschurchapp/src/ui/LikeContentButtonConnected/updateLikeEntity.js
+++ b/apolloschurchapp/src/ui/LikeButton/updateLikeEntity.js
@@ -4,8 +4,8 @@ export default gql`
   mutation updateLikeEntity($itemId: ID!, $operation: LIKE_OPERATION!) {
     updateLikeEntity(input: { nodeId: $itemId, operation: $operation }) {
       id
-      isLiked
-      likedCount
+      operation
+      interactionDateTime
     }
   }
 `;
diff --git a/apolloschurchapp/src/ui/LikeButton/updateLikedContent.js b/apolloschurchapp/src/ui/LikeButton/updateLikedContent.js
new file mode 100644
index 0000000..50b612a
--- /dev/null
+++ b/apolloschurchapp/src/ui/LikeButton/updateLikedContent.js
@@ -0,0 +1,52 @@
+import getAllLikedContent from 'apolloschurchapp/src/tabs/connect/getLikedContent';
+import { contentItemFragment } from 'apolloschurchapp/src/content-single/getContentItem';
+
+const addItemToLikedContentList = ({ cache, item }) => {
+  try {
+    const data = cache.readQuery({ query: getAllLikedContent });
+    const fullItem = cache.readFragment({
+      id: `${item.__typename}:${item.id}`,
+      fragment: contentItemFragment,
+    });
+    cache.writeQuery({
+      query: getAllLikedContent,
+      data: {
+        ...data,
+        getAllLikedContent: [fullItem, ...data.getAllLikedContent],
+      },
+    });
+  } catch (e) {
+    console.log(e);
+    // Most likely we haven't ran the `getAllLikedContent` query yet.
+    // We can safely exit.
+  }
+};
+
+const removeItemFromLikedContentList = ({ cache, item }) => {
+  try {
+    const data = cache.readQuery({ query: getAllLikedContent });
+    cache.writeQuery({
+      query: getAllLikedContent,
+      data: {
+        ...data,
+        getAllLikedContent: data.getAllLikedContent.filter(
+          (content) => content.id !== item.id
+        ),
+      },
+    });
+  } catch (e) {
+    console.log(e);
+    // Most likely we haven't ran the `getAllLikedContent` query yet.
+    // We can safely exit.
+  }
+};
+
+const updateLikedContent = ({ liked, cache, item }) => {
+  if (liked) {
+    addItemToLikedContentList({ cache, item });
+  } else {
+    removeItemFromLikedContentList({ cache, item });
+  }
+};
+
+export default updateLikedContent;
diff --git a/apolloschurchapp/src/ui/LikeContentButtonConnected/index.js b/apolloschurchapp/src/ui/LikeContentButtonConnected/index.js
deleted file mode 100644
index 724407e..0000000
--- a/apolloschurchapp/src/ui/LikeContentButtonConnected/index.js
+++ /dev/null
@@ -1,123 +0,0 @@
-import React from 'react';
-
-import PropTypes from 'prop-types';
-import { get } from 'lodash';
-import { Query, Mutation } from 'react-apollo';
-
-import LikeContentButton from 'apolloschurchapp/src/ui/LikeContentButton';
-import { AnalyticsConsumer } from '@apollosproject/ui-analytics';
-
-import UPDATE_LIKE_ENTITY from './updateLikeEntity';
-import GET_LIKED_CONTENT_ITEM from './getLikedContentItem';
-import updateLikedContent from './updateLikedContent';
-
-const GetLikeData = ({ itemId, children }) => (
-  <Query query={GET_LIKED_CONTENT_ITEM} variables={{ itemId }}>
-    {({ data: { node = {} } = {}, loading }) => {
-      const isLiked = loading ? false : get(node, 'isLiked') || false;
-      return children({ isLiked, item: node });
-    }}
-  </Query>
-);
-
-GetLikeData.propTypes = {
-  itemId: PropTypes.string,
-  children: PropTypes.func.isRequired,
-};
-
-const UpdateLikeStatus = ({
-  itemId,
-  item = { __typename: null },
-  isLiked,
-  children,
-}) => (
-  <AnalyticsConsumer>
-    {({ track }) => (
-      <Mutation
-        mutation={UPDATE_LIKE_ENTITY}
-        optimisticResponse={{
-          updateLikeEntity: {
-            id: itemId, // unknown at this time
-            isLiked: !isLiked,
-            likedCount: 0, // field required but exact value is not needed
-            __typename: item && item.__typename,
-          },
-        }}
-        update={(
-          cache,
-          {
-            data: {
-              updateLikeEntity: { isLiked: liked },
-            },
-          }
-        ) => {
-          updateLikedContent({ liked, cache, item });
-          cache.writeQuery({
-            query: GET_LIKED_CONTENT_ITEM,
-            data: {
-              node: {
-                ...item,
-                isLiked: liked,
-              },
-            },
-          });
-        }}
-      >
-        {(createNewInteraction) =>
-          itemId
-            ? children({
-                itemId,
-                isLiked,
-                toggleLike: async (variables) => {
-                  try {
-                    await createNewInteraction({ variables });
-                    track({
-                      eventName: isLiked ? 'UnlikeContent' : 'LikeContent',
-                      properties: {
-                        id: itemId,
-                      },
-                    });
-                  } catch (e) {
-                    throw e.message;
-                  }
-                },
-              })
-            : null
-        }
-      </Mutation>
-    )}
-  </AnalyticsConsumer>
-);
-
-UpdateLikeStatus.propTypes = {
-  itemId: PropTypes.string,
-  children: PropTypes.func.isRequired,
-  isLiked: PropTypes.bool.isRequired,
-  item: PropTypes.shape({
-    id: PropTypes.string,
-    __typename: PropTypes.string,
-    isLiked: PropTypes.bool,
-  }),
-};
-
-const LikeContentButtonConnected = ({ itemId }) => (
-  <GetLikeData itemId={itemId}>
-    {({ isLiked, item }) => (
-      <UpdateLikeStatus itemId={itemId} item={item} isLiked={isLiked}>
-        {({ toggleLike, isLiked: newLikeValue }) => (
-          <LikeContentButton
-            itemId={itemId}
-            isLiked={newLikeValue}
-            toggleLike={toggleLike}
-          />
-        )}
-      </UpdateLikeStatus>
-    )}
-  </GetLikeData>
-);
-
-LikeContentButtonConnected.propTypes = {
-  itemId: PropTypes.string,
-};
-
-export default LikeContentButtonConnected;
diff --git a/apolloschurchapp/src/ui/LikeContentButtonConnected/updateLikedContent.js b/apolloschurchapp/src/ui/LikeContentButtonConnected/updateLikedContent.js
deleted file mode 100644
index 1024864..0000000
--- a/apolloschurchapp/src/ui/LikeContentButtonConnected/updateLikedContent.js
+++ /dev/null
@@ -1,78 +0,0 @@
-import GET_ALL_LIKED_CONTENT from 'apolloschurchapp/src/tabs/connect/getLikedContent';
-import { CONTENT_ITEM_FRAGMENT } from 'apolloschurchapp/src/content-single/getContentItem';
-
-const addItemToLikedContentList = ({ cache, item, variables }) => {
-  try {
-    const data = cache.readQuery({
-      query: GET_ALL_LIKED_CONTENT,
-      variables,
-    });
-    const fullItem = cache.readFragment({
-      id: `${item.__typename}:${item.id}`,
-      fragment: CONTENT_ITEM_FRAGMENT,
-    });
-    const newEdges = [
-      fullItem,
-      ...data.likedContent.edges.map(({ node }) => node),
-    ].map((node) => ({
-      __typename: 'ContentItemsConnectionEdge',
-      node,
-    }));
-    cache.writeQuery({
-      query: GET_ALL_LIKED_CONTENT,
-      variables,
-      data: {
-        ...data,
-        likedContent: {
-          ...data.likedContent,
-          edges: newEdges,
-        },
-      },
-    });
-  } catch (e) {
-    console.log(e);
-    // Most likely we haven't ran the `getAllLikedContent` query yet.
-    // We can safely exit.
-  }
-};
-
-const removeItemFromLikedContentList = ({ cache, item, variables }) => {
-  try {
-    const data = cache.readQuery({
-      query: GET_ALL_LIKED_CONTENT,
-      variables,
-    });
-
-    const filteredEdges = data.likedContent.edges.filter(
-      ({ node }) => node.id !== item.id
-    );
-
-    cache.writeQuery({
-      query: GET_ALL_LIKED_CONTENT,
-      variables,
-      data: {
-        ...data,
-        likedContent: {
-          ...data.likedContent,
-          edges: filteredEdges,
-        },
-      },
-    });
-  } catch (e) {
-    console.log(e);
-    // Most likely we haven't ran the `getAllLikedContent` query yet.
-    // We can safely exit.
-  }
-};
-
-const updateLikedContent = ({ liked, cache, item }) => {
-  if (liked) {
-    addItemToLikedContentList({ cache, item, variables: { first: 3 } });
-    addItemToLikedContentList({ cache, item, variables: { first: 20 } });
-  } else {
-    removeItemFromLikedContentList({ cache, item, variables: { first: 3 } });
-    removeItemFromLikedContentList({ cache, item, variables: { first: 20 } });
-  }
-};
-
-export default updateLikedContent;
diff --git a/apolloschurchapp/src/ui/MediaPlayer/FullscreenControls.js b/apolloschurchapp/src/ui/MediaPlayer/FullscreenControls.js
new file mode 100644
index 0000000..326fea4
--- /dev/null
+++ b/apolloschurchapp/src/ui/MediaPlayer/FullscreenControls.js
@@ -0,0 +1,299 @@
+import React, { PureComponent } from 'react';
+import PropTypes from 'prop-types';
+import {
+  BackHandler,
+  StyleSheet,
+  Animated,
+  TouchableWithoutFeedback,
+} from 'react-native';
+import { Query, withApollo } from 'react-apollo';
+import LinearGradient from 'react-native-linear-gradient';
+import SafeAreaView from 'react-native-safe-area-view';
+import { get } from 'lodash';
+import { compose } from 'recompose';
+
+import PaddedView from 'apolloschurchapp/src/ui/PaddedView';
+import { withTheme, withThemeMixin } from 'apolloschurchapp/src/ui/theme';
+import styled from 'apolloschurchapp/src/ui/styled';
+import { H4, H6 } from 'apolloschurchapp/src/ui/typography';
+import Icon from 'apolloschurchapp/src/ui/Icon';
+import Touchable from 'apolloschurchapp/src/ui/Touchable';
+
+import Seeker from './Seeker';
+import { getControlState } from './queries';
+import {
+  play,
+  pause,
+  exitFullscreen,
+  showVideo,
+  hideVideo,
+  mute,
+  unmute,
+} from './mutations';
+
+import { ControlsConsumer } from './PlayheadState';
+
+const Background = withTheme(({ theme }) => ({
+  style: StyleSheet.absoluteFill,
+  colors: [
+    theme.colors.darkPrimary,
+    theme.colors.transparent,
+    theme.colors.darkPrimary,
+  ],
+  locations: [0, 0.4, 0.95],
+}))(LinearGradient);
+
+const UpperControl = styled({
+  flexDirection: 'row',
+  justifyContent: 'space-between',
+  alignItems: 'center',
+})(PaddedView);
+
+const LowerControl = styled({
+  position: 'absolute',
+  bottom: 0,
+  left: 0,
+  right: 0,
+})(PaddedView);
+
+const PlayControls = styled(({ theme }) => ({
+  flexDirection: 'row',
+  justifyContent: 'space-around',
+  alignItems: 'center',
+  paddingBottom: theme.sizing.baseUnit * 1.5,
+}))(PaddedView);
+
+const PlayHead = styled({ paddingVertical: 0 })(PaddedView);
+
+const Titles = styled({
+  alignItems: 'center',
+  paddingVertical: 0,
+})(PaddedView);
+
+const Title = styled({ textAlign: 'center' })(H4);
+const Artist = styled({ textAlign: 'center' })(H6);
+
+const IconSm = withTheme(({ theme, disabled }) => ({
+  size: theme.sizing.baseUnit,
+  opacity: disabled ? 0.5 : 1.25,
+}))(Icon);
+
+const IconMd = withTheme(({ theme, disabled }) => ({
+  size: theme.sizing.baseUnit * 1.875,
+  opacity: disabled ? 0.5 : 1,
+}))(Icon);
+
+const IconLg = withTheme(({ theme, disabled }) => ({
+  size: theme.sizing.baseUnit * 3.125,
+  opacity: disabled ? 0.5 : 1,
+}))(Icon);
+
+/**
+ * FullscreenControls displays fading player controls
+ */
+class FullscreenControls extends PureComponent {
+  static propTypes = {
+    client: PropTypes.shape({
+      mutate: PropTypes.func,
+    }),
+  };
+
+  state = {};
+
+  fader = new Animated.Value(1);
+
+  controlsVisible = true;
+
+  wasFullscreen = false;
+
+  open = Animated.spring(this.fader, {
+    toValue: 1,
+    useNativeDriver: true,
+  });
+
+  close = Animated.spring(this.fader, {
+    toValue: 0,
+    useNativeDriver: true,
+  });
+
+  constructor(...args) {
+    super(...args);
+    this.fader.addListener(({ value }) => {
+      this.controlsVisible = value > 0.05;
+    });
+  }
+
+  componentDidMount() {
+    this.backHandler = BackHandler.addEventListener('hardwareBackPress', () => {
+      if (this.wasFullscreen) {
+        this.handleClose();
+        return true;
+      }
+      return false;
+    });
+  }
+
+  componentWillUnmount() {
+    this.backHandler.remove();
+    if (this.closeTimeout) clearTimeout(this.closeTimeout);
+  }
+
+  handleOnScrubbing = ({ isScrubbing }) => {
+    this.setState({ isScrubbing });
+  };
+
+  handleClose = () => {
+    this.props.client.mutate({ mutation: exitFullscreen });
+  };
+
+  handlePlay = () => {
+    this.props.client.mutate({ mutation: play });
+  };
+
+  handlePause = () => {
+    this.props.client.mutate({ mutation: pause });
+  };
+
+  handleShowVideo = () => {
+    this.props.client.mutate({ mutation: showVideo });
+  };
+
+  handleHideVideo = () => {
+    this.props.client.mutate({ mutation: hideVideo });
+  };
+
+  handleMute = () => {
+    this.props.client.mutate({ mutation: mute });
+  };
+
+  handleUnMute = () => {
+    this.props.client.mutate({ mutation: unmute });
+  };
+
+  handleControlVisibility = () => {
+    if (this.closeTimeout) clearTimeout(this.closeTimeout);
+    this.open.stop();
+    this.close.stop();
+
+    if (
+      !this.state.isScrubbing &&
+      this.isVideo &&
+      this.isPlaying &&
+      this.wasFullscreen &&
+      (!this.animatingClosed && this.controlsVisible)
+    ) {
+      this.animatingClosed = true;
+      this.close.start(() => {
+        this.animatingClosed = false;
+      });
+    } else {
+      this.open.start(() => {
+        if (this.isVideo && this.isPlaying) this.queueClose();
+      });
+    }
+  };
+
+  queueClose = () => {
+    this.closeTimeout = setTimeout(this.handleControlVisibility, 5000);
+  };
+
+  renderSkipForward = ({ skip }) => (
+    <Touchable onPress={() => skip(30)}>
+      <IconMd name="skip-forward-thirty" />
+    </Touchable>
+  );
+
+  renderSkipBack = ({ skip }) => (
+    <Touchable onPress={() => skip(-30)}>
+      <IconMd name="skip-back-thirty" />
+    </Touchable>
+  );
+
+  renderFullscreenControls = ({ data: { mediaPlayer = {} } = {} }) => {
+    this.isVideo = get(mediaPlayer, 'showVideo');
+    this.isPlaying = mediaPlayer.isPlaying;
+
+    if (
+      (mediaPlayer.isFullscreen && !this.wasFullscreen) ||
+      !this.isVideo ||
+      (!this.isPlaying || (this.isPlaying && !this.wasPlaying))
+    )
+      this.handleControlVisibility();
+
+    this.wasFullscreen = mediaPlayer.isFullscreen;
+    this.wasPlaying = mediaPlayer.isPlaying;
+
+    return (
+      <TouchableWithoutFeedback onPress={this.handleControlVisibility}>
+        <Animated.View
+          style={[StyleSheet.absoluteFill, { opacity: this.fader }]}
+        >
+          <Background>
+            <SafeAreaView
+              style={StyleSheet.absoluteFill}
+              forceInset={{ top: 'always', bottom: 'always' }}
+            >
+              <Touchable onPress={this.handleClose}>
+                <UpperControl>
+                  <IconSm name="arrow-down" />
+                  <Titles>
+                    <Title>{get(mediaPlayer, 'currentTrack.title')}</Title>
+                    <Artist>{get(mediaPlayer, 'currentTrack.artist')}</Artist>
+                  </Titles>
+                  <IconSm name="empty" />
+                </UpperControl>
+              </Touchable>
+              <LowerControl>
+                <PlayHead>
+                  <Seeker onScrubbing={this.handleOnScrubbing} />
+                </PlayHead>
+                <PlayControls>
+                  {get(mediaPlayer, 'muted') ? (
+                    <Touchable onPress={this.handleUnMute}>
+                      <IconSm name="mute" />
+                    </Touchable>
+                  ) : (
+                    <Touchable onPress={this.handleMute}>
+                      <IconSm name="volume" />
+                    </Touchable>
+                  )}
+                  <ControlsConsumer>{this.renderSkipBack}</ControlsConsumer>
+                  {mediaPlayer.isPlaying ? (
+                    <Touchable onPress={this.handlePause}>
+                      <IconLg name="pause" />
+                    </Touchable>
+                  ) : (
+                    <Touchable onPress={this.handlePlay}>
+                      <IconLg name="play" />
+                    </Touchable>
+                  )}
+                  <ControlsConsumer>{this.renderSkipForward}</ControlsConsumer>
+                  {mediaPlayer.showVideo ? (
+                    <Touchable onPress={this.handleHideVideo}>
+                      <IconSm name="video" />
+                    </Touchable>
+                  ) : (
+                    <Touchable onPress={this.handleShowVideo}>
+                      <IconSm name="video-off" />
+                    </Touchable>
+                  )}
+                </PlayControls>
+              </LowerControl>
+            </SafeAreaView>
+          </Background>
+        </Animated.View>
+      </TouchableWithoutFeedback>
+    );
+  };
+
+  render() {
+    return (
+      <Query query={getControlState}>{this.renderFullscreenControls}</Query>
+    );
+  }
+}
+
+export default compose(
+  withApollo,
+  withThemeMixin({ type: 'dark' })
+)(FullscreenControls);
diff --git a/apolloschurchapp/src/ui/MediaPlayer/FullscreenPlayer.js b/apolloschurchapp/src/ui/MediaPlayer/FullscreenPlayer.js
new file mode 100644
index 0000000..3757398
--- /dev/null
+++ b/apolloschurchapp/src/ui/MediaPlayer/FullscreenPlayer.js
@@ -0,0 +1,235 @@
+import React, { PureComponent } from 'react';
+import {
+  Animated,
+  View,
+  StyleSheet,
+  Dimensions,
+  PanResponder,
+  Platform,
+} from 'react-native';
+import PropTypes from 'prop-types';
+import { Query, withApollo } from 'react-apollo';
+import { get } from 'lodash';
+
+import styled from 'apolloschurchapp/src/ui/styled';
+
+import MiniControls, { MINI_PLAYER_HEIGHT } from './MiniControls';
+import FullscreenControls from './FullscreenControls';
+import VideoWindow from './VideoWindow';
+import MusicControls from './MusicControls';
+import { getFullVisibilityState } from './queries';
+import { exitFullscreen, goFullscreen } from './mutations';
+import { Provider, ControlsConsumer } from './PlayheadState';
+import MediaPlayerSafeLayout from './MediaPlayerSafeLayout';
+
+const VideoSizer = styled(
+  ({ isFullscreen, isVideo, theme }) =>
+    isFullscreen
+      ? StyleSheet.absoluteFill
+      : {
+          height: MINI_PLAYER_HEIGHT,
+          borderTopLeftRadius: theme.sizing.baseUnit / 2,
+          borderBottomLeftRadius: theme.sizing.baseUnit / 2,
+          overflow: 'hidden',
+          aspectRatio: isVideo ? 16 / 9 : 1,
+        }
+)(View);
+
+const FullscreenMediaPlayerSafeLayout = styled(({ isFullscreen, theme }) => ({
+  ...StyleSheet.absoluteFillObject,
+  margin: isFullscreen ? 0 : theme.sizing.baseUnit,
+}))(MediaPlayerSafeLayout);
+
+/**
+ * FullscreenPlayer is a animating media player that transitions between
+ * a mini state and a full screen state.
+ * It is capable of playing any type of media that react-native-video supports.
+ * It reads from local graphql state, and so you must use graphql mutations to play tracks.
+ */
+class FullscreenPlayer extends PureComponent {
+  static propTypes = {
+    client: PropTypes.shape({ mutate: PropTypes.func }),
+  };
+
+  // Tracks the fullscreen animation
+  fullscreen = new Animated.Value(0);
+
+  // Tracks the measured height of the minicontrols. Used in other derived styles
+  miniControlHeight = new Animated.Value(MINI_PLAYER_HEIGHT);
+
+  // Tracks the measured height of the fullscreen cover. Used in other derived styles
+  coverHeight = new Animated.Value(Dimensions.get('window').height);
+
+  // Tracks the amount you drag the window
+  dragOffset = new Animated.Value(0);
+
+  fullScreenWithOffset = Animated.add(this.fullscreen, this.dragOffset);
+
+  // Self-invoking function because we end up with just one massic derived animated value that can be stored
+  coverTranslateY = (() => {
+    const translateYWhenCollapsed = Animated.subtract(
+      this.coverHeight,
+      this.miniControlHeight
+    );
+
+    const translateYSlope = Animated.multiply(
+      translateYWhenCollapsed,
+      Animated.multiply(this.fullScreenWithOffset, -1)
+    );
+
+    const translateY = Animated.add(translateYSlope, translateYWhenCollapsed);
+    return translateY;
+  })();
+
+  miniControlsTranslateY = (() => {
+    const translateYWhenExpanded = Animated.subtract(
+      this.coverHeight,
+      this.miniControlHeight
+    );
+    const translateYSlope = Animated.multiply(
+      translateYWhenExpanded,
+      Animated.multiply(this.fullScreenWithOffset, -1)
+    );
+    return translateYSlope;
+  })();
+
+  coverStyle = [
+    StyleSheet.absoluteFill,
+    {
+      transform: [{ translateY: this.coverTranslateY }],
+    },
+  ];
+
+  miniControlsAnimation = {
+    opacity: this.fullScreenWithOffset.interpolate({
+      inputRange: [0, 0.1],
+      outputRange: [1, 0],
+    }),
+  };
+
+  fullscreenControlsAnimation = [
+    StyleSheet.absoluteFill,
+    {
+      opacity: this.fullScreenWithOffset.interpolate({
+        inputRange: [0, 0.1],
+        outputRange: [0, 1],
+      }),
+    },
+  ];
+
+  panResponder = PanResponder.create({
+    onMoveShouldSetPanResponder: (event, { dx, dy }) =>
+      Math.abs(dy) > Math.abs(dx) && Math.abs(dy) > 10, // set pan responder only when we move enough in the Y-axis
+
+    onPanResponderMove: (event, { dy }) => {
+      // Calculate the amount you've offsetted the cover
+      const dragOffset = Math.min(0, -dy / Dimensions.get('window').height);
+      this.dragOffset.setValue(dragOffset);
+    },
+
+    onPanResponderRelease: (event, { dy, vy }) => {
+      const { height } = Dimensions.get('window');
+      const gestureVelocity = vy;
+      const gestureDistance = Math.abs(dy);
+
+      // Determine whether to continue the animation and exit fullscreen,
+      // or stay full screen and reset back up
+      let mutation = goFullscreen;
+      if (Math.abs(gestureVelocity > 0.5)) {
+        if (gestureVelocity > 0) {
+          mutation = exitFullscreen;
+        }
+      } else if (gestureDistance >= height / 2) {
+        mutation = exitFullscreen;
+      }
+
+      const dragOffset = Math.min(0, -dy / Dimensions.get('window').height);
+
+      if (mutation === goFullscreen) {
+        Animated.spring(this.dragOffset, {
+          toValue: 0,
+          useNativeDriver: true,
+        }).start();
+      } else {
+        this.dragOffset.setValue(0);
+        this.fullscreen.setValue(dragOffset);
+      }
+
+      this.props.client.mutate({ mutation });
+    },
+  });
+
+  handleCoverLayout = Animated.event([
+    { nativeEvent: { layout: { height: this.coverHeight } } },
+  ]);
+
+  handleMiniControlLayout = Animated.event([
+    { nativeEvent: { layout: { height: this.miniControlHeight } } },
+  ]);
+
+  renderCover = ({ data: { mediaPlayer = {} } = {} }) => {
+    const { isFullscreen = false } = mediaPlayer;
+
+    Animated.spring(this.fullscreen, {
+      toValue: isFullscreen ? 1 : 0,
+      useNativeDriver: true,
+      bounciness: 4,
+    }).start();
+
+    const coverFlow = [
+      <Animated.View
+        key="cover"
+        onLayout={this.handleCoverLayout}
+        style={StyleSheet.absoluteFill}
+        {...(Platform.OS !== 'android' && isFullscreen
+          ? this.panResponder.panHandlers
+          : {})}
+      >
+        <VideoSizer
+          isFullscreen={isFullscreen}
+          isVideo={get(mediaPlayer, 'currentTrack.isVideo')}
+        >
+          <ControlsConsumer>
+            {(controlHandlers) => <VideoWindow {...controlHandlers} />}
+          </ControlsConsumer>
+        </VideoSizer>
+        <Animated.View style={this.fullscreenControlsAnimation}>
+          <FullscreenControls />
+        </Animated.View>
+      </Animated.View>,
+      <MusicControls key="music-controls" />,
+    ];
+
+    if (!isFullscreen) {
+      coverFlow.push(
+        <Animated.View
+          key="mini-controls"
+          style={this.miniControlsAnimation}
+          onLayout={this.handleMiniControlLayout}
+        >
+          <MiniControls />
+        </Animated.View>
+      );
+    }
+
+    return (
+      <Animated.View style={this.coverStyle}>
+        <FullscreenMediaPlayerSafeLayout isFullscreen={isFullscreen}>
+          {coverFlow}
+        </FullscreenMediaPlayerSafeLayout>
+      </Animated.View>
+    );
+  };
+
+  render() {
+    return (
+      <Provider>
+        <Query query={getFullVisibilityState}>{this.renderCover}</Query>
+      </Provider>
+    );
+  }
+}
+
+const FullscreenPlayerWithData = withApollo(FullscreenPlayer);
+
+export { FullscreenPlayerWithData as default };
diff --git a/apolloschurchapp/src/ui/MediaPlayer/FullscreenPlayer.stories.js b/apolloschurchapp/src/ui/MediaPlayer/FullscreenPlayer.stories.js
new file mode 100644
index 0000000..869d9c2
--- /dev/null
+++ b/apolloschurchapp/src/ui/MediaPlayer/FullscreenPlayer.stories.js
@@ -0,0 +1,79 @@
+import React from 'react';
+import { storiesOf } from '@storybook/react-native';
+import { Mutation } from 'react-apollo';
+
+import { ButtonLink } from 'apolloschurchapp/src/ui/Button';
+import CenteredView from 'apolloschurchapp/src/ui/CenteredView';
+import BackgroundView from 'apolloschurchapp/src/ui/BackgroundView';
+import FlexedView from 'apolloschurchapp/src/ui/FlexedView';
+
+import { playVideoMutation } from './mutations';
+import MediaPlayer from '.';
+
+storiesOf('MediaPlayer', module).add('simple', () => (
+  <BackgroundView>
+    <FlexedView>
+      <CenteredView>
+        <Mutation mutation={playVideoMutation}>
+          {(play) => (
+            <ButtonLink
+              onPress={() =>
+                play({
+                  variables: {
+                    mediaSource: {
+                      uri:
+                        'http://embed.wistia.com/deliveries/0e364f7e6f6604384ece8a35905a53a864386e9f.bin',
+                      __typename: 'VideoMediaSource',
+                    },
+                    posterSources: [
+                      {
+                        uri:
+                          'https://apollosrock.newspring.cc/GetImage.ashx?guid=28ea9e81-09b4-411f-8ad5-741054837823',
+                        __typename: 'ImageMediaSource',
+                      },
+                    ],
+                    title: 'Holy Spirit',
+                    artist: 'Fuse Promos',
+                    isVideo: true,
+                  },
+                })
+              }
+            >
+              Play video
+            </ButtonLink>
+          )}
+        </Mutation>
+        <Mutation mutation={playVideoMutation}>
+          {(play) => (
+            <ButtonLink
+              onPress={() =>
+                play({
+                  variables: {
+                    mediaSource: {
+                      uri:
+                        'https://s3.amazonaws.com/ns.downloads/newspring/audio/newspring_sermons/2017/180513_HolySpirit_06-Message-AUDIO.mp3',
+                      __typename: 'AudioMediaSource',
+                    },
+                    posterSources: [
+                      {
+                        uri:
+                          'https://apollosrock.newspring.cc/GetImage.ashx?guid=28ea9e81-09b4-411f-8ad5-741054837823',
+                        __typename: 'ImageMediaSource',
+                      },
+                    ],
+                    title: 'The Greatest Evangelist',
+                    artist: 'Sermon',
+                    isVideo: false,
+                  },
+                })
+              }
+            >
+              Play audio
+            </ButtonLink>
+          )}
+        </Mutation>
+      </CenteredView>
+    </FlexedView>
+    <MediaPlayer />
+  </BackgroundView>
+));
diff --git a/apolloschurchapp/src/ui/MediaPlayer/FullscreenPlayer.tests.js b/apolloschurchapp/src/ui/MediaPlayer/FullscreenPlayer.tests.js
new file mode 100644
index 0000000..6fb0aa5
--- /dev/null
+++ b/apolloschurchapp/src/ui/MediaPlayer/FullscreenPlayer.tests.js
@@ -0,0 +1,108 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import { client } from 'apolloschurchapp/src/client';
+import Providers from 'apolloschurchapp/src/Providers';
+
+import FullscreenPlayer from './FullscreenPlayer';
+
+describe('the FullscreenPlayer component', () => {
+  it('should render miniplayer with video', async () => {
+    client.cache.writeData({
+      data: {
+        mediaPlayer: {
+          __typename: 'MediaPlayerState',
+          currentTrack: {
+            __typename: 'MediaPlayerTrack',
+            id: 1,
+            mediaSource: { uri: 'some-source' },
+            posterSources: [{ uri: 'some-poster-source' }],
+            title: 'Some Title',
+            artist: 'some artist',
+            isVideo: true,
+          },
+          isVisible: true,
+          isFullscreen: false,
+          isPlaying: true,
+          progress: {
+            __typename: 'MediaPlayerProgress',
+            currentTime: 12,
+            duration: 56,
+          },
+        },
+      },
+    });
+    const tree = renderer.create(
+      <Providers>
+        <FullscreenPlayer />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+
+  it('should render miniplayer with audio', async () => {
+    client.cache.writeData({
+      data: {
+        mediaPlayer: {
+          __typename: 'MediaPlayerState',
+          currentTrack: {
+            __typename: 'MediaPlayerTrack',
+            id: 1,
+            mediaSource: { uri: 'some-source' },
+            posterSources: [{ uri: 'some-poster-source' }],
+            title: 'Some Title',
+            artist: 'some artist',
+            isVideo: false,
+          },
+          isVisible: true,
+          isFullscreen: false,
+          isPlaying: true,
+          progress: {
+            __typename: 'MediaPlayerProgress',
+            currentTime: 12,
+            duration: 56,
+          },
+        },
+      },
+    });
+    const tree = renderer.create(
+      <Providers>
+        <FullscreenPlayer />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+
+  it('should render fullscreen', async () => {
+    client.cache.writeData({
+      data: {
+        mediaPlayer: {
+          __typename: 'MediaPlayerState',
+          currentTrack: {
+            __typename: 'MediaPlayerTrack',
+            id: 1,
+            mediaSource: { uri: 'some-source' },
+            posterSources: [{ uri: 'some-poster-source' }],
+            title: 'Some Title',
+            artist: 'some artist',
+            isVideo: false,
+          },
+          isVisible: true,
+          isFullscreen: true,
+          isPlaying: true,
+          progress: {
+            __typename: 'MediaPlayerProgress',
+            currentTime: 12,
+            duration: 56,
+          },
+        },
+      },
+    });
+    const tree = renderer.create(
+      <Providers>
+        <FullscreenPlayer />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/MediaPlayer/MediaPlayerSafeLayout.js b/apolloschurchapp/src/ui/MediaPlayer/MediaPlayerSafeLayout.js
new file mode 100644
index 0000000..a167251
--- /dev/null
+++ b/apolloschurchapp/src/ui/MediaPlayer/MediaPlayerSafeLayout.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import { View } from 'react-native';
+
+import styled from '../styled';
+import { LayoutConsumer } from '../LayoutContext';
+
+const InnerView = styled(({ safeAreaInsets, isFullscreen = false, theme }) => ({
+  marginBottom: isFullscreen
+    ? 0
+    : Math.max(theme.sizing.baseUnit, safeAreaInsets.bottom * 0.75),
+}))(View);
+
+const MediaPlayerSafeLayout = (props) => (
+  <LayoutConsumer>
+    {({ safeAreaInsets }) => (
+      <InnerView safeAreaInsets={safeAreaInsets} {...props} />
+    )}
+  </LayoutConsumer>
+);
+
+export default MediaPlayerSafeLayout;
diff --git a/apolloschurchapp/src/ui/MediaPlayer/MediaPlayerSpacer.js b/apolloschurchapp/src/ui/MediaPlayer/MediaPlayerSpacer.js
new file mode 100644
index 0000000..17d7fd3
--- /dev/null
+++ b/apolloschurchapp/src/ui/MediaPlayer/MediaPlayerSpacer.js
@@ -0,0 +1,36 @@
+import React from 'react';
+import { SafeAreaView } from 'react-native';
+import { Query } from 'react-apollo';
+import gql from 'graphql-tag';
+import { get } from 'lodash';
+
+import styled from 'apolloschurchapp/src/ui/styled';
+import { MINI_PLAYER_HEIGHT } from 'apolloschurchapp/src/ui/MediaPlayer';
+
+import MediaPlayerSafeLayout from './MediaPlayerSafeLayout';
+
+const mediaPlayerIsVisibleQuery = gql`
+  query {
+    mediaPlayer @client {
+      isVisible
+    }
+  }
+`;
+
+const MediaPlayerSafeLayoutWithSpacing = styled({
+  paddingBottom: MINI_PLAYER_HEIGHT,
+})(MediaPlayerSafeLayout);
+
+const MediaPlayerSpacer = (props) => (
+  <Query query={mediaPlayerIsVisibleQuery}>
+    {({ data = {} }) =>
+      get(data, 'mediaPlayer.isVisible') ? (
+        <MediaPlayerSafeLayoutWithSpacing {...props} />
+      ) : (
+        <SafeAreaView {...props} />
+      )
+    }
+  </Query>
+);
+
+export default MediaPlayerSpacer;
diff --git a/apolloschurchapp/src/ui/MediaPlayer/MiniControls.js b/apolloschurchapp/src/ui/MediaPlayer/MiniControls.js
new file mode 100644
index 0000000..5aad2c0
--- /dev/null
+++ b/apolloschurchapp/src/ui/MediaPlayer/MiniControls.js
@@ -0,0 +1,191 @@
+import React, { Component } from 'react';
+import { Platform, View, Animated, StyleSheet } from 'react-native';
+import { Mutation, Query } from 'react-apollo';
+
+import styled from 'apolloschurchapp/src/ui/styled';
+import Touchable from 'apolloschurchapp/src/ui/Touchable';
+import { H5, H6 } from 'apolloschurchapp/src/ui/typography';
+import Icon from 'apolloschurchapp/src/ui/Icon';
+import { withTheme } from 'apolloschurchapp/src/ui/theme';
+
+import Seeker from './Seeker';
+
+import { getControlState } from './queries';
+
+import {
+  goFullscreen as goFullscreenMutation,
+  dismiss as dismissMutation,
+  play as playMutation,
+  pause as pauseMutation,
+} from './mutations';
+
+const MINI_PLAYER_HEIGHT = 50;
+
+const DismissBackground = styled(({ theme }) => ({
+  ...StyleSheet.absoluteFillObject,
+  alignItems: 'center',
+  justifyContent: 'center',
+  backgroundColor: theme.colors.white,
+}))(View);
+
+const TrackInfoTouchable = styled({
+  flex: 1,
+})(Touchable);
+
+const TrackInfoTouchableBackground = styled(({ theme }) => ({
+  backgroundColor: theme.colors.white,
+  flex: 1,
+}))(View);
+
+const TrackInfo = styled(({ theme }) => ({
+  paddingHorizontal: theme.sizing.baseUnit / 2,
+  height: '100%',
+  justifyContent: 'center',
+  width: '100%',
+}))(View);
+
+const TrackName = styled(({ theme }) => ({
+  height: theme.sizing.baseUnit,
+  overflow: 'hidden',
+}))(H5);
+
+const TrackArtist = styled(({ theme }) => ({
+  height: theme.sizing.baseUnit,
+  marginTop: theme.helpers.rem(-0.15625),
+  color: theme.colors.text.tertiary,
+  // overflow: 'hidden',
+}))(H6);
+
+const Container = styled(({ theme }) => ({
+  height: MINI_PLAYER_HEIGHT,
+  flexDirection: 'row',
+  justifyContent: 'flex-start',
+  overflow: 'hidden',
+  borderRadius: theme.sizing.baseUnit / 2,
+}))(View);
+
+const Shadow = styled(({ theme }) => ({
+  borderRadius: theme.sizing.baseUnit / 2,
+  ...Platform.select(theme.shadows.default),
+}))(View);
+
+// ThumbnailSpacer is used to offset the text in MiniPlayer to make room for the video/music
+// thumbnail in a way that is dynamic to the MINI_PLAYER_HEIGHT
+const ThumbnailSpacer = styled(({ isVideo }) => ({
+  height: MINI_PLAYER_HEIGHT,
+  aspectRatio: isVideo ? 16 / 9 : 1,
+}))(View);
+
+const Controls = styled(({ theme }) => ({
+  position: 'absolute',
+  right: 0,
+  bottom: 0,
+  top: -1,
+  paddingHorizontal: theme.sizing.baseUnit / 2,
+  flexDirection: 'row',
+  justifyContent: 'flex-end',
+  alignItems: 'center',
+}))(View);
+
+const MiniSeeker = styled({
+  position: 'absolute',
+  left: 0,
+  right: 0,
+  bottom: 0,
+})(Seeker);
+
+const StyledIcon = withTheme(({ theme }) => ({
+  fill: theme.colors.darkTertiary,
+  size: theme.sizing.baseUnit * 1.25,
+}))(Icon);
+
+/**
+ * The MiniControls renders basic track info and a play/pause button.
+ * Also displays a close button to close the player when the track is paused.
+ */
+class MiniControls extends Component {
+  dismissAnimator = new Animated.Value(0);
+
+  shouldComponentUpdate() {
+    return false;
+  }
+
+  renderMiniControls = ({
+    data: {
+      mediaPlayer: {
+        currentTrack: { title, artist, isVideo } = {},
+        isPlaying = false,
+      } = {},
+    } = {},
+  }) => {
+    Animated.spring(this.dismissAnimator, {
+      toValue: isPlaying ? 0 : 0.8,
+      overshootClamping: true,
+      useNativeDriver: true,
+    }).start();
+    return (
+      <Mutation mutation={goFullscreenMutation}>
+        {(goFullscreen) => (
+          <Shadow>
+            <Container>
+              <Mutation mutation={dismissMutation}>
+                {(dismiss) => (
+                  <Touchable
+                    onPress={() => (isPlaying ? goFullscreen() : dismiss())}
+                  >
+                    <ThumbnailSpacer isVideo={isVideo}>
+                      <Animated.View
+                        style={[
+                          StyleSheet.absoluteFill,
+                          { opacity: this.dismissAnimator },
+                        ]}
+                      >
+                        <DismissBackground>
+                          <StyledIcon name="close" />
+                        </DismissBackground>
+                      </Animated.View>
+                    </ThumbnailSpacer>
+                  </Touchable>
+                )}
+              </Mutation>
+              <TrackInfoTouchableBackground>
+                <TrackInfoTouchable onPress={() => goFullscreen()}>
+                  <TrackInfo>
+                    <TrackName>{title}</TrackName>
+                    <TrackArtist>{artist}</TrackArtist>
+                  </TrackInfo>
+                </TrackInfoTouchable>
+              </TrackInfoTouchableBackground>
+              <Controls>
+                {isPlaying ? (
+                  <Mutation mutation={pauseMutation}>
+                    {(pause) => (
+                      <Touchable onPress={() => pause()}>
+                        <StyledIcon name="pause" />
+                      </Touchable>
+                    )}
+                  </Mutation>
+                ) : (
+                  <Mutation mutation={playMutation}>
+                    {(play) => (
+                      <Touchable onPress={() => play()}>
+                        <StyledIcon name="play" />
+                      </Touchable>
+                    )}
+                  </Mutation>
+                )}
+              </Controls>
+              <MiniSeeker minimal />
+            </Container>
+          </Shadow>
+        )}
+      </Mutation>
+    );
+  };
+
+  render() {
+    return <Query query={getControlState}>{this.renderMiniControls}</Query>;
+  }
+}
+
+export { MiniControls as default, MINI_PLAYER_HEIGHT };
diff --git a/apolloschurchapp/src/ui/MediaPlayer/MusicControls.js b/apolloschurchapp/src/ui/MediaPlayer/MusicControls.js
new file mode 100644
index 0000000..677c364
--- /dev/null
+++ b/apolloschurchapp/src/ui/MediaPlayer/MusicControls.js
@@ -0,0 +1,178 @@
+import PropTypes from 'prop-types';
+import React, { Component } from 'react';
+import { Animated, Platform } from 'react-native';
+import MusicControl from 'react-native-music-control';
+import { withApollo, Query } from 'react-apollo';
+import { throttle, get } from 'lodash';
+
+import { PlayheadConsumer, ControlsConsumer } from './PlayheadState';
+import { getMusicControlState } from './queries';
+import { play, pause, updatePlayhead } from './mutations';
+
+class MusicControls extends Component {
+  static propTypes = {
+    currentTrack: PropTypes.shape({}),
+    currentTime: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
+    currentTimeAnimated: PropTypes.instanceOf(Animated.Value),
+    isPlaying: PropTypes.bool,
+    duration: PropTypes.number,
+    skip: PropTypes.func,
+    client: PropTypes.shape({ mutate: PropTypes.func }),
+  };
+
+  constructor(...args) {
+    super(...args);
+    // iOS is the only platform that displays currentTime and Android is notorious bad at handling
+    // the JS thread.
+    if (Platform.OS === 'ios') this.currentTimeSubscription();
+  }
+
+  componentDidUpdate(oldProps) {
+    if (this.props.duration > 1 && oldProps.duration !== this.props.duration) {
+      this.configureMusicControl();
+    }
+    if (this.props.currentTimeAnimated !== oldProps.currentTimeAnimated) {
+      if (this.listener) {
+        oldProps.currentTimeAnimated.removeListener(this.listener);
+      }
+      if (Platform.OS === 'ios') this.currentTimeSubscription();
+    }
+
+    if (
+      oldProps.currentTime !== this.props.currentTime ||
+      oldProps.isPlaying !== this.props.isPlaying
+    ) {
+      this.updatePlayback();
+    }
+  }
+
+  componentWillUnmount() {
+    MusicControl.enableBackgroundMode(false);
+    MusicControl.stopControl();
+    if (this.listener)
+      this.props.currentTimeAnimated.removeListener(this.listener);
+  }
+
+  currentTimeSubscription = () => {
+    this.listener = this.props.currentTimeAnimated.addListener(
+      throttle(({ value }) => {
+        MusicControl.updatePlayback({
+          state: this.props.isPlaying
+            ? MusicControl.STATE_PLAYING
+            : MusicControl.STATE_PAUSED,
+          elapsedTime: value,
+        });
+      }, 1000)
+    );
+  };
+
+  configureMusicControl = () => {
+    // Initialize MusicControl settings
+    MusicControl.enableBackgroundMode(true);
+
+    // Play
+    MusicControl.enableControl('play', true);
+    MusicControl.on('play', this.handleOnPlay);
+
+    // Pause/Stop
+    MusicControl.enableControl('pause', true);
+    MusicControl.enableControl('stop', false);
+    MusicControl.on('pause', this.handleOnPause);
+    MusicControl.on('stop', this.handleOnPause);
+
+    // Skip
+    MusicControl.enableControl('previousTrack', false);
+    MusicControl.enableControl('nextTrack', false);
+
+    // Seeking
+    if (this.props.skip) {
+      MusicControl.enableControl('skipForward', true);
+      MusicControl.enableControl('skipBackward', true);
+      MusicControl.on('skipForward', this.handleOnFastForward);
+      MusicControl.on('skipBackward', this.handleOnRewind);
+    }
+
+    // Scrubber
+    MusicControl.enableControl('seek', true); // Android
+    MusicControl.enableControl('changePlaybackPosition', true); // iOS
+    MusicControl.on('seek', this.handleOnSeek);
+    MusicControl.on('changePlaybackPosition', this.handleOnSeek);
+
+    // Remote (headphones) play/pause
+    MusicControl.enableControl('togglePlayPause', true);
+    MusicControl.on(
+      'togglePlayPause',
+      () => (this.props.isPlaying ? this.handleOnPause() : this.handleOnPlay())
+    );
+
+    // Remote (headphones) fast forward/rewind (iOS only) (disabled)
+    MusicControl.enableControl('seekForward', false);
+    MusicControl.enableControl('seekBackward', false);
+
+    // Swipe to dismiss native control (Android only)
+    MusicControl.enableControl('closeNotification', true, { when: 'paused' });
+
+    // Configure the visuals
+    const { currentTrack = {} } = this.props;
+    MusicControl.setNowPlaying({
+      title: currentTrack.title,
+      artist: currentTrack.artist,
+      artwork: get(currentTrack, 'posterSources[0].uri'),
+      elapsedTime: this.props.currentTime,
+      duration: this.props.duration,
+    });
+  };
+
+  updatePlayback = () => {
+    MusicControl.updatePlayback({
+      state: this.props.isPlaying
+        ? MusicControl.STATE_PLAYING
+        : MusicControl.STATE_PAUSED,
+      elapsedTime: this.props.currentTime,
+    });
+  };
+
+  handleOnPlay = () => this.props.client.mutate({ mutation: play });
+
+  handleOnPause = () => this.props.client.mutate({ mutation: pause });
+
+  handleOnFastForward = () => this.props.skip(15);
+
+  handleOnRewind = () => this.props.skip(-15);
+
+  handleOnSeek = (seekTo) =>
+    this.props.client.mutate({
+      mutation: updatePlayhead,
+      variables: {
+        currentTime: seekTo,
+      },
+    });
+
+  render() {
+    return null;
+  }
+}
+
+const MusicControlsState = (props) => (
+  <Query query={getMusicControlState}>
+    {({ data: { mediaPlayer = {} } = {} }) => (
+      <PlayheadConsumer>
+        {({ duration, currentTime }) => (
+          <ControlsConsumer>
+            {({ skip }) => (
+              <MusicControls
+                {...props}
+                currentTimeAnimated={currentTime}
+                duration={duration}
+                skip={skip}
+                {...mediaPlayer}
+              />
+            )}
+          </ControlsConsumer>
+        )}
+      </PlayheadConsumer>
+    )}
+  </Query>
+);
+
+export default withApollo(MusicControlsState);
diff --git a/apolloschurchapp/src/ui/MediaPlayer/PlayheadState.js b/apolloschurchapp/src/ui/MediaPlayer/PlayheadState.js
new file mode 100644
index 0000000..0d5b33d
--- /dev/null
+++ b/apolloschurchapp/src/ui/MediaPlayer/PlayheadState.js
@@ -0,0 +1,110 @@
+import React, { createContext, Component } from 'react';
+import { Animated } from 'react-native';
+import { Query, withApollo } from 'react-apollo';
+import PropTypes from 'prop-types';
+
+import { getMediaPlayerIsPlaying } from './queries';
+import { updatePlayhead } from './mutations';
+
+const defaultState = {
+  duration: 1,
+  currentTime: new Animated.Value(0),
+  playableDuration: new Animated.Value(1),
+  seekableDuration: new Animated.Value(1),
+};
+
+const controlState = () => {};
+
+const PlayheadContext = createContext(defaultState);
+
+const PlayheadControls = createContext(controlState);
+
+class ProviderWithoutApollo extends Component {
+  static propTypes = {
+    client: PropTypes.shape({
+      mutate: PropTypes.func,
+    }),
+  };
+
+  state = defaultState;
+
+  get controlState() {
+    return {
+      onLoad: this.handleOnLoad,
+      onProgress: this.handleOnProgress,
+      skip: this.skip,
+    };
+  }
+
+  handleOnLoad = ({ duration }) => {
+    this.setState({ duration });
+    this.state.currentTime.setValue(0);
+    this.state.playableDuration.setValue(0);
+    this.state.seekableDuration.setValue(0);
+  };
+
+  handleOnProgress = ({ currentTime, playableDuration, seekableDuration }) => {
+    if (!this.seekingTo || Math.abs(this.seekingTo - currentTime) < 1) {
+      // when seeking, only update `currentTime` after the seek has finished
+      this.seekingTo = null;
+      this.lastCurrentTime = currentTime;
+      this.state.currentTime.setValue(currentTime);
+    }
+    this.state.playableDuration.setValue(playableDuration);
+    this.state.seekableDuration.setValue(seekableDuration);
+  };
+
+  handlePause = () => {
+    this.props.client.mutate({
+      mutation: updatePlayhead,
+      variables: {
+        currentTime: this.lastCurrentTime,
+      },
+    });
+  };
+
+  skip = async (secondsToSkip) => {
+    const currentTime = Math.min(
+      Math.max(this.lastCurrentTime + secondsToSkip, 0),
+      this.state.duration
+    );
+
+    await this.props.client.mutate({
+      mutation: updatePlayhead,
+      variables: {
+        currentTime,
+      },
+    });
+
+    this.seekingTo = currentTime;
+    this.state.currentTime.setValue(currentTime); // immediately set the playhead value so progress bar doesn't jump around
+  };
+
+  renderProviders = ({
+    data: { mediaPlayer: { isPlaying = false } = {} } = {},
+  }) => {
+    if (!isPlaying && this.wasPlaying) {
+      this.handlePause();
+    }
+    this.wasPlaying = isPlaying;
+
+    return (
+      <PlayheadControls.Provider value={this.controlState}>
+        <PlayheadContext.Provider value={this.state} {...this.props} />
+      </PlayheadControls.Provider>
+    );
+  };
+
+  render() {
+    return (
+      <Query query={getMediaPlayerIsPlaying}>{this.renderProviders}</Query>
+    );
+  }
+}
+
+const Provider = withApollo(ProviderWithoutApollo);
+
+const { Consumer: PlayheadConsumer } = PlayheadContext;
+const { Consumer: ControlsConsumer } = PlayheadControls;
+
+export { Provider, PlayheadConsumer, ControlsConsumer };
diff --git a/apolloschurchapp/src/ui/MediaPlayer/Seeker/Timestamp.js b/apolloschurchapp/src/ui/MediaPlayer/Seeker/Timestamp.js
new file mode 100644
index 0000000..7603319
--- /dev/null
+++ b/apolloschurchapp/src/ui/MediaPlayer/Seeker/Timestamp.js
@@ -0,0 +1,96 @@
+import React, { PureComponent } from 'react';
+import { Animated } from 'react-native';
+import PropTypes from 'prop-types';
+
+import { H6 } from 'apolloschurchapp/src/ui/typography';
+import styled from 'apolloschurchapp/src/ui/styled';
+
+const TimeText = styled({
+  width: 50,
+  textAlign: 'center',
+  alignItems: 'center',
+})(H6);
+
+/**
+ * Displays a MM:SS formatted timestamp from either a number or Animate.Value in seconds
+ */
+class Timestamp extends PureComponent {
+  static propTypes = {
+    time: PropTypes.oneOfType([
+      PropTypes.number,
+      PropTypes.instanceOf(Animated.Value),
+    ]),
+    offset: PropTypes.instanceOf(Animated.Value),
+  };
+
+  state = {
+    time: 0,
+    offset: 0,
+  };
+
+  constructor(props) {
+    super(props);
+    if (typeof props.time === 'number') {
+      this.state.time = props.time;
+    } else {
+      this.listen(props);
+    }
+  }
+
+  componentWillUpdate(newProps) {
+    if (
+      newProps.time !== this.props.time ||
+      newProps.offset !== this.props.offset
+    ) {
+      this.listen(newProps);
+    }
+  }
+
+  listen = ({ time = 0, offset = 0 }) => {
+    if (this.listener) this.props.time.removeListener(this.listener);
+    if (this.offsetListener) {
+      this.props.offset.removeListener(this.offsetListener);
+    }
+
+    if (!time.addListener) {
+      this.setState({ time });
+    } else {
+      this.listener = time.addListener(({ value }) =>
+        this.setState({ time: value })
+      );
+    }
+
+    if (!offset.addListener) {
+      this.setState({ offset });
+    } else if (offset) {
+      this.offsetListener = offset.addListener(({ value }) =>
+        this.setState({ offset: value })
+      );
+    }
+  };
+
+  timestamp = (time) => {
+    // Hours, minutes and seconds
+    const hrs = Math.floor(time / 3600);
+    const mins = Math.floor((time % 3600) / 60);
+    const secs = time % 60;
+
+    let timestamp = '';
+
+    if (hrs > 0) {
+      timestamp += `${hrs}:${mins < 10 ? '0' : ''}`;
+    }
+
+    timestamp += `${mins}:${secs < 10 ? '0' : ''}`;
+    timestamp += `${Math.round(secs)}`;
+    return timestamp;
+  };
+
+  render() {
+    return (
+      <TimeText>{this.timestamp(this.state.time + this.state.offset)}</TimeText>
+    );
+  }
+}
+
+export default Timestamp;
diff --git a/apolloschurchapp/src/ui/MediaPlayer/Seeker/index.js b/apolloschurchapp/src/ui/MediaPlayer/Seeker/index.js
new file mode 100644
index 0000000..b84b2e5
--- /dev/null
+++ b/apolloschurchapp/src/ui/MediaPlayer/Seeker/index.js
@@ -0,0 +1,216 @@
+import React, { PureComponent } from 'react';
+import { PanResponder, Animated, View, StyleSheet } from 'react-native';
+import PropTypes from 'prop-types';
+
+import styled from 'apolloschurchapp/src/ui/styled';
+import { withTheme } from 'apolloschurchapp/src/ui/theme';
+
+import { PlayheadConsumer, ControlsConsumer } from '../PlayheadState';
+import Timestamp from './Timestamp';
+
+const Container = styled({
+  width: '100%',
+  flexDirection: 'row',
+  justifyContent: 'space-between',
+  alignItems: 'center',
+})(View);
+
+const TrackContainer = styled(({ minimal, knobSize }) => ({
+  height: knobSize / 2,
+  flexGrow: 1,
+  justifyContent: 'center',
+  paddingTop: minimal ? 20 : knobSize / 2,
+  paddingBottom: minimal ? 0 : knobSize / 2,
+}))(View);
+
+const Track = styled(({ theme, minimal, knobSize }) => ({
+  height: knobSize / 2,
+  overflow: 'hidden',
+  borderRadius: minimal ? 0 : knobSize / 2,
+  backgroundColor: minimal
+    ? theme.colors.transparent
+    : theme.colors.darkSecondary,
+}))(View);
+
+const ProgressBar = styled(({ theme }) => ({
+  height: theme.sizing.baseUnit,
+  backgroundColor: theme.colors.secondary,
+}))(View);
+
+const Knob = styled(({ theme, knobSize }) => ({
+  height: knobSize,
+  width: knobSize,
+  position: 'absolute',
+  right: 0,
+  elevation: 2,
+  borderRadius: knobSize,
+  backgroundColor: theme.colors.text.primary,
+}))(View);
+
+/**
+ * Animated Seeker component.
+ * Depends on `PlayheadState`, so you don't pass it any props directly,
+ * but must be rendered within a `<MediaPlayer/>` component
+ */
+class Seeker extends PureComponent {
+  static propTypes = {
+    minimal: PropTypes.bool, // The only prop you need to pass - switches to a minimal version (line instead of bar)
+    currentTime: PropTypes.any, // eslint-disable-line
+    duration: PropTypes.any, // eslint-disable-line
+    style: PropTypes.any, // eslint-disable-line
+    onScrubbing: PropTypes.func,
+    knobSize: PropTypes.number, // defaults to theme.sizing.baseUnit / 1.5  (12px)
+  };
+
+  isSeeking = false;
+
+  timeAtSeekingStart = 0;
+
+  state = {
+    width: 0, // the width of the seeker bar
+  };
+
+  offsetDriver = new Animated.Value(0); // Used to track pixel offset when seeking
+
+  offsetTimeDriver = new Animated.Value(0); // Used to track time offset when seeking
+
+  panResponder = PanResponder.create({
+    onStartShouldSetPanResponder: () => true,
+    onPanResponderGrant: () => {
+      // Using `stopAnimation` only to get the currentTime value
+      this.props.currentTime.stopAnimation((value) => {
+        this.isSeeking = true;
+        this.timeAtSeekingStart = value;
+      });
+    },
+    onPanResponderMove: (e, { dx }) => {
+      // Calculate the pixel offset and apply it to the offsetDriver
+      let offset = dx;
+      const progressAtStart = this.timeAtSeekingStart / this.props.duration;
+      const positionAtStart = progressAtStart * this.state.width;
+      offset = Math.min(this.state.width - positionAtStart, offset);
+      offset = Math.max(-positionAtStart, offset);
+      this.offsetDriver.setValue(offset);
+
+      // Calculate the time offset and apply it to the offsetTimeDriver
+      const moveAmount = offset / this.state.width;
+      const moveAmountInTime = moveAmount * this.props.duration;
+      this.offsetTimeDriver.setValue(moveAmountInTime);
+
+      if (this.props.onScrubbing) this.props.onScrubbing({ isScrubbing: true });
+    },
+    onPanResponderRelease: async (e, { dx }) => {
+      // Calculate the amount in time we've moved, and skip that duration
+      const moveAmount = dx / this.state.width;
+      const moveAmountInTime = moveAmount * this.props.duration;
+      await this.props.skip(moveAmountInTime);
+
+      // Reset state
+      this.offsetDriver.setValue(0);
+      this.offsetTimeDriver.setValue(0);
+      this.isSeeking = false;
+      this.timeAtSeekingStart = 0;
+
+      if (this.props.onScrubbing)
+        this.props.onScrubbing({ isScrubbing: false });
+    },
+  });
+
+  // Calculate the real offset position of the colored track bar
+  // To be able to useNativeDriver, the trackbar is always the full-width, and we animate its X position
+  get trackBarOffset() {
+    const progress = Animated.divide(
+      this.isSeeking ? this.timeAtSeekingStart : this.props.currentTime,
+      this.props.duration
+    );
+
+    const progressInvert = Animated.subtract(1, progress);
+    const widthInvert = Animated.multiply(-1, this.state.width);
+    const position = Animated.multiply(progressInvert, widthInvert);
+    return Animated.add(position, this.offsetDriver);
+  }
+
+  // the "knob" is on top of the trackbar, the piece of UI you can grab and move around
+  get knobStyles() {
+    return [
+      StyleSheet.absoluteFill,
+      {
+        transform: [{ translateX: this.trackBarOffset }],
+      },
+    ];
+  }
+
+  handleOnLayout = ({
+    nativeEvent: {
+      layout: { width },
+    },
+  }) =>
+    this.setState({
+      /*
+       * Adjust offset width to adjust for knobSize so Knob always appears on the track. Knob is
+       * hidden when in a minimal state (miniplayer) we only make this adjustment when necessary.
+       */
+      width: this.props.minimal ? width : width - this.props.knobSize,
+    });
+
+  renderProgress = () => (
+    <Animated.View
+      style={[
+        StyleSheet.absoluteFill,
+        {
+          transform: [{ translateX: this.trackBarOffset }],
+        },
+      ]}
+    >
+      <ProgressBar />
+    </Animated.View>
+  );
+
+  render() {
+    return (
+      <Container style={this.props.style}>
+        {!this.props.minimal ? (
+          <Timestamp
+            time={this.props.currentTime}
+            offset={this.offsetTimeDriver}
+          />
+        ) : null}
+        <TrackContainer
+          minimal={this.props.minimal}
+          knobSize={this.props.knobSize}
+        >
+          <Track
+            onLayout={this.handleOnLayout}
+            minimal={this.props.minimal}
+            knobSize={this.props.knobSize}
+          >
+            {this.renderProgress()}
+          </Track>
+          <Animated.View style={this.knobStyles}>
+            {!this.props.minimal ? (
+              <Knob
+                knobSize={this.props.knobSize}
+                {...this.panResponder.panHandlers}
+              />
+            ) : null}
+          </Animated.View>
+        </TrackContainer>
+        {!this.props.minimal ? <Timestamp time={this.props.duration} /> : null}
+      </Container>
+    );
+  }
+}
+
+const SeekerWithState = withTheme(({ theme: { sizing: { baseUnit } } }) => ({
+  knobSize: Math.floor(baseUnit / 1.33),
+}))((props) => (
+  <ControlsConsumer>
+    {(controls) => (
+      <PlayheadConsumer>
+        {(playhead) => <Seeker {...props} {...playhead} {...controls} />}
+      </PlayheadConsumer>
+    )}
+  </ControlsConsumer>
+));
+
+export default SeekerWithState;
diff --git a/apolloschurchapp/src/ui/MediaPlayer/VideoWindow.js b/apolloschurchapp/src/ui/MediaPlayer/VideoWindow.js
new file mode 100644
index 0000000..3a74c25
--- /dev/null
+++ b/apolloschurchapp/src/ui/MediaPlayer/VideoWindow.js
@@ -0,0 +1,136 @@
+import React, { PureComponent } from 'react';
+import PropTypes from 'prop-types';
+import { Query, withApollo } from 'react-apollo';
+import { get } from 'lodash';
+import Video from 'react-native-video';
+import { Animated, View, StyleSheet } from 'react-native';
+
+import styled from 'apolloschurchapp/src/ui/styled';
+import ActivityIndicator from 'apolloschurchapp/src/ui/ActivityIndicator';
+
+import { getVideoState } from './queries';
+import { pause as pauseMutation, pauseAndRestart } from './mutations';
+
+const styles = StyleSheet.create({
+  animatedPosterImage: {
+    ...StyleSheet.absoluteFillObject,
+    resizeMode: 'cover',
+  },
+});
+
+const Background = styled(({ theme }) => ({
+  ...StyleSheet.absoluteFillObject,
+  backgroundColor: theme.colors.black,
+}))(View);
+
+/**
+ * The VideoWindow displays the actual react-native-video component.
+ * It's responsible for loading the video, and updating progress + duration in state.
+ */
+class VideoWindow extends PureComponent {
+  static propTypes = {
+    client: PropTypes.shape({
+      mutate: PropTypes.func,
+    }),
+    onProgress: PropTypes.func,
+    onLoad: PropTypes.func,
+  };
+
+  loadingOverlay = new Animated.Value(1);
+
+  loadingStyle = [StyleSheet.absoluteFill, { opacity: this.loadingOverlay }];
+
+  handleOnEnd = async () => {
+    this.props.client.mutate({ mutation: pauseAndRestart });
+  };
+
+  handlePause = () => {
+    this.props.client.mutate({ mutation: pauseMutation });
+  };
+
+  handleOnProgress = (progress) => {
+    if (this.props.onProgress) this.props.onProgress(progress);
+  };
+
+  handleOnError = () => {
+    this.handlePause();
+  };
+
+  handleOnLoad = ({ duration }) => {
+    Animated.spring(this.loadingOverlay, {
+      toValue: 0,
+      useNativeDriver: true,
+    }).start();
+
+    if (this.props.onLoad) this.props.onLoad({ duration });
+  };
+
+  handleOnLoadStart = () => {
+    Animated.spring(this.loadingOverlay, {
+      toValue: 1,
+      useNativeDriver: true,
+    });
+  };
+
+  setVideoRef = (element) => {
+    this.video = element;
+  };
+
+  renderVideo = ({ data: { mediaPlayer = {} } = {} }) => {
+    if (!get(mediaPlayer, 'currentTrack.mediaSource')) return null;
+
+    const { currentTime } = mediaPlayer;
+    if (currentTime && currentTime !== this.lastCurrentTime && this.video) {
+      this.video.seek(currentTime);
+    }
+
+    this.lastCurrentTime = currentTime;
+
+    return [
+      <Video
+        ref={this.setVideoRef}
+        source={mediaPlayer.currentTrack.mediaSource}
+        paused={!mediaPlayer.isPlaying}
+        audioOnly={!mediaPlayer.showVideo}
+        ignoreSilentSwitch={'ignore'}
+        allowsExternalPlayback
+        playInBackground
+        playWhenInactive
+        onAudioBecomingNoisy={this.handlePause}
+        onEnd={this.handleOnEnd}
+        onError={this.handleOnError}
+        resizeMode={'contain'}
+        onLoadStart={this.handleOnLoadStart}
+        onLoad={this.handleOnLoad}
+        onProgress={this.handleOnProgress}
+        style={StyleSheet.absoluteFill}
+        volume={mediaPlayer.muted ? 0 : 1}
+        repeat
+        key="video"
+      />,
+      // there's currently a bug on android where react-native-video's poster doesn't ever go away
+      // So we use our own image copmonent...which is nicer cuz we can show a nice fading animation too!
+      <Animated.Image
+        key="poster"
+        style={[
+          styles.animatedPosterImage,
+          mediaPlayer.showVideo ? this.loadingStyle : {},
+        ]}
+        source={mediaPlayer.currentTrack.posterSources}
+      />,
+    ];
+  };
+
+  render() {
+    return (
+      <Background>
+        <Query query={getVideoState}>{this.renderVideo}</Query>
+        <Animated.View style={this.loadingStyle}>
+          <ActivityIndicator />
+        </Animated.View>
+      </Background>
+    );
+  }
+}
+
+export default withApollo(VideoWindow);
diff --git a/apolloschurchapp/src/ui/MediaPlayer/index.js b/apolloschurchapp/src/ui/MediaPlayer/index.js
new file mode 100644
index 0000000..2264866
--- /dev/null
+++ b/apolloschurchapp/src/ui/MediaPlayer/index.js
@@ -0,0 +1,29 @@
+import React, { Component } from 'react';
+import { Query } from 'react-apollo';
+
+import FullscreenPlayer from './FullscreenPlayer';
+
+import { getMediaPlayerVisibility } from './queries';
+
+export { MINI_PLAYER_HEIGHT } from './MiniControls';
+export MediaPlayerSpacer from './MediaPlayerSpacer';
+
+/**
+ * Selectively renders FullscreenPlayer component is MediaPlayer is visible
+ */
+class MediaPlayer extends Component {
+  shouldComponentUpdate() {
+    return false; // 🚀
+  }
+
+  renderPlayer = ({ data = {} }) => {
+    if (!data.mediaPlayer || !data.mediaPlayer.isVisible) return null;
+    return <FullscreenPlayer />;
+  };
+
+  render() {
+    return <Query query={getMediaPlayerVisibility}>{this.renderPlayer}</Query>;
+  }
+}
+
+export default MediaPlayer;
diff --git a/apolloschurchapp/src/ui/MediaPlayer/mutations.js b/apolloschurchapp/src/ui/MediaPlayer/mutations.js
new file mode 100644
index 0000000..3eb3b2d
--- /dev/null
+++ b/apolloschurchapp/src/ui/MediaPlayer/mutations.js
@@ -0,0 +1,101 @@
+import gql from 'graphql-tag';
+
+const playVideoMutation = gql`
+  mutation playVideo(
+    $mediaSource: String!
+    $posterSources: String
+    $title: String
+    $artist: String
+    $isVideo: Boolean
+  ) {
+    mediaPlayerPlayNow(
+      mediaSource: $mediaSource
+      posterSources: $posterSources
+      title: $title
+      artist: $artist
+      isVideo: $isVideo
+    ) @client
+  }
+`;
+
+const goFullscreen = gql`
+  mutation {
+    mediaPlayerUpdateState(isFullscreen: true) @client
+  }
+`;
+
+const play = gql`
+  mutation {
+    mediaPlayerUpdateState(isPlaying: true) @client
+  }
+`;
+
+const pause = gql`
+  mutation {
+    mediaPlayerUpdateState(isPlaying: false) @client
+  }
+`;
+
+const dismiss = gql`
+  mutation {
+    mediaPlayerUpdateState(isPlaying: false, isVisible: false) @client
+  }
+`;
+
+const pauseAndRestart = gql`
+  mutation pause {
+    mediaPlayerUpdateState(isPlaying: false) @client
+    mediaPlayerSetPlayhead(currentTime: 0) @client
+  }
+`;
+
+const exitFullscreen = gql`
+  mutation {
+    mediaPlayerUpdateState(isFullscreen: false) @client
+  }
+`;
+
+const mute = gql`
+  mutation {
+    mediaPlayerUpdateState(muted: true) @client
+  }
+`;
+
+const unmute = gql`
+  mutation {
+    mediaPlayerUpdateState(muted: false) @client
+  }
+`;
+
+const showVideo = gql`
+  mutation {
+    mediaPlayerUpdateState(showVideo: true) @client
+  }
+`;
+
+const hideVideo = gql`
+  mutation {
+    mediaPlayerUpdateState(showVideo: false) @client
+  }
+`;
+
+const updatePlayhead = gql`
+  mutation mediaPlayerSetPlayhead($currentTime: Float) {
+    mediaPlayerSetPlayhead(currentTime: $currentTime) @client
+  }
+`;
+
+export {
+  pauseAndRestart,
+  playVideoMutation,
+  goFullscreen,
+  play,
+  pause,
+  dismiss,
+  exitFullscreen,
+  updatePlayhead,
+  mute,
+  unmute,
+  showVideo,
+  hideVideo,
+};
diff --git a/apolloschurchapp/src/ui/MediaPlayer/queries.js b/apolloschurchapp/src/ui/MediaPlayer/queries.js
new file mode 100644
index 0000000..b56957a
--- /dev/null
+++ b/apolloschurchapp/src/ui/MediaPlayer/queries.js
@@ -0,0 +1,126 @@
+import gql from 'graphql-tag';
+
+const getMediaPlayerVisibility = gql`
+  query mediaPlayerVisibility {
+    mediaPlayer @client {
+      isVisible
+    }
+  }
+`;
+
+const getMediaPlayerIsPlaying = gql`
+  query mediaPlayerVisibility {
+    mediaPlayer @client {
+      isPlaying
+    }
+  }
+`;
+
+const getFullVisibilityState = gql`
+  query fullVisibilityState {
+    mediaPlayer @client {
+      currentTrack {
+        isVideo
+      }
+      isVisible
+      isFullscreen
+    }
+  }
+`;
+
+const getControlState = gql`
+  query {
+    mediaPlayer @client {
+      isFullscreen
+      isPlaying
+      currentTrack {
+        id
+        title
+        artist
+        isVideo
+      }
+      showVideo
+      muted
+    }
+  }
+`;
+
+const getVideoState = gql`
+  query mediaPlayer {
+    mediaPlayer @client {
+      currentTrack {
+        mediaSource {
+          uri
+        }
+        posterSources {
+          uri
+        }
+        id
+        isVideo
+      }
+      currentTime
+      isPlaying
+      showVideo
+      muted
+    }
+  }
+`;
+
+const getMusicControlState = gql`
+  query musicControlState {
+    mediaPlayer @client {
+      currentTrack {
+        posterSources {
+          uri
+        }
+        title
+        artist
+      }
+      currentTime
+      isPlaying
+    }
+  }
+`;
+
+const getElapsedTime = gql`
+  query {
+    mediaPlayer @client {
+      progress {
+        currentTime
+      }
+    }
+  }
+`;
+
+const getProgress = gql`
+  query {
+    mediaPlayer @client {
+      progress {
+        currentTime
+        duration
+      }
+    }
+  }
+`;
+
+const getTotalTime = gql`
+  query {
+    mediaPlayer @client {
+      progress {
+        duration
+      }
+    }
+  }
+`;
+
+export {
+  getMediaPlayerIsPlaying,
+  getMediaPlayerVisibility,
+  getMusicControlState,
+  getFullVisibilityState,
+  getControlState,
+  getVideoState,
+  getElapsedTime,
+  getProgress,
+  getTotalTime,
+};
diff --git a/apolloschurchapp/src/ui/MediaQuery/MediaQuery.js b/apolloschurchapp/src/ui/MediaQuery/MediaQuery.js
new file mode 100644
index 0000000..10557b3
--- /dev/null
+++ b/apolloschurchapp/src/ui/MediaQuery/MediaQuery.js
@@ -0,0 +1,67 @@
+import { Component } from 'react';
+import PropTypes from 'prop-types';
+import { get, every } from 'lodash';
+import { pick, mapValues, flow } from 'lodash/fp';
+import { compose } from 'recompose';
+
+import { withTheme } from 'apolloschurchapp/src/ui/theme';
+
+import withWindow from './withWindow';
+import queryMatcher from './queryMatcher';
+
+const supportedMediaQueryTypes = {
+  minWidth: PropTypes.string,
+  maxWidth: PropTypes.string,
+  minHeight: PropTypes.string,
+  maxHeight: PropTypes.string,
+  minDeviceAspectRatio: PropTypes.string,
+  maxDeviceAspectRatio: PropTypes.string,
+};
+
+// <MediaQuery maxWidth="md" minWidth="sm">I render on screens sm to md</MediaQuery>
+// <MediaQuery maxWidth="xs">I render only on xs screens</MediaQuery>
+// <MediaQuery minWidth="md">I render on screens md or above</MediaQuery>
+class MediaQuery extends Component {
+  static propTypes = {
+    ...supportedMediaQueryTypes,
+    children: PropTypes.node,
+
+    // These props are passed in through HOCs (withTheme and withWindow)
+    breakpoints: PropTypes.shape({
+      xs: PropTypes.number,
+      sm: PropTypes.number,
+      md: PropTypes.number,
+      lg: PropTypes.number,
+    }),
+    window: PropTypes.shape({
+      width: PropTypes.number,
+      height: PropTypes.number,
+    }).isRequired,
+  };
+
+  static defaultProps = {
+    ...mapValues(supportedMediaQueryTypes, () => null),
+    breakpoints: {},
+  };
+
+  get shouldBeVisible() {
+    const mediaQuery = flow(
+      pick(Object.keys(supportedMediaQueryTypes)),
+      mapValues((breakpoint) => get(this.props.breakpoints, breakpoint))
+    )(this.props);
+
+    const {
+      window: { width, height },
+    } = this.props; // destructuring just to make below line clean
+    return every(mediaQuery, queryMatcher({ width, height }));
+  }
+
+  render() {
+    return this.shouldBeVisible ? this.props.children : null;
+  }
+}
+
+export default compose(
+  withTheme(({ theme: { breakpoints } = {} } = {}) => ({ breakpoints })),
+  withWindow
+)(MediaQuery);
diff --git a/apolloschurchapp/src/ui/MediaQuery/enhancer.js b/apolloschurchapp/src/ui/MediaQuery/enhancer.js
new file mode 100644
index 0000000..617a1f4
--- /dev/null
+++ b/apolloschurchapp/src/ui/MediaQuery/enhancer.js
@@ -0,0 +1,42 @@
+import { branch, compose, mapProps } from 'recompose';
+import { every } from 'lodash';
+
+import { withTheme } from 'apolloschurchapp/src/ui/theme';
+
+import withWindow from './withWindow';
+import queryMatcher from './queryMatcher';
+
+// Make it easy to do breakpoint-based component branching, a-la recompose's branch method.
+// The "test" function should return an object that mirrors what you'd do in a css mediaQuery:
+// import { enhancer as mediaQuery } from 'MediaQuery';
+// mediaQuery(
+//   ({ xs, lg }) => ({ minWidth: xs, maxWidth: lg }),
+//   HigherOrderComponent,
+//   ?HigherOrderComponent
+// ): HigherOrderComponent
+const enhancer = (getMediaQuery, ...args) =>
+  compose(
+    withTheme(({ theme: { breakpoints = {} } = {} }) => ({ breakpoints })),
+    withWindow,
+    branch(({ breakpoints, window: { width, height }, ...ownProps }) => {
+      const mediaQuery = getMediaQuery(
+        { ...breakpoints, width, height },
+        ownProps
+      );
+
+      // We should only interpret `mediaQuery` if we have an object.
+      // This allows the function you pass in to utilize more complex query logic, like:
+      // mediaQuery(({ sm, lg, width }) => width < sm || width > lg, styles)
+      // mediaQuery(({ sm }, ownProps) => ownProps.size < sm, styles)
+      if (typeof mediaQuery !== 'object') {
+        return mediaQuery;
+      }
+
+      return every(mediaQuery, queryMatcher({ width, height }));
+    }, ...args),
+
+    // clean up props
+    mapProps(({ breakpoints, window, ...ownProps }) => ownProps)
+  );
+
+export default enhancer;
diff --git a/apolloschurchapp/src/ui/MediaQuery/enhancer.tests.js b/apolloschurchapp/src/ui/MediaQuery/enhancer.tests.js
new file mode 100644
index 0000000..9438e27
--- /dev/null
+++ b/apolloschurchapp/src/ui/MediaQuery/enhancer.tests.js
@@ -0,0 +1,163 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+import { View, Dimensions } from 'react-native';
+
+import Providers from 'apolloschurchapp/src/Providers';
+import { breakpoints as defaultBreakPoints } from 'apolloschurchapp/src/ui/theme/defaultTheme';
+
+import enhancer from './enhancer';
+
+const TestHOC = (mock) => (Component) => {
+  mock();
+  return Component;
+};
+
+const mediaQueryThatPasses = () => true;
+const mediaQueryThatFails = () => false;
+
+describe('The mediaQuery enhancer', () => {
+  it('uses the first HOC (and renders the root View) with a passing media query', () => {
+    const firstMock = jest.fn();
+    const secondMock = jest.fn();
+
+    const Component = enhancer(
+      mediaQueryThatPasses,
+      TestHOC(firstMock),
+      TestHOC(secondMock)
+    )(View);
+    const tree = renderer.create(
+      <Providers>
+        <Component />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+    expect(firstMock.mock.calls.length).toBe(1);
+    expect(secondMock.mock.calls.length).toBe(0);
+  });
+  it('uses the second HOC (and renders the root View) with a failing media query', () => {
+    const firstMock = jest.fn();
+    const secondMock = jest.fn();
+
+    const Component = enhancer(
+      mediaQueryThatFails,
+      TestHOC(firstMock),
+      TestHOC(secondMock)
+    )(View);
+    const tree = renderer.create(
+      <Providers>
+        <Component />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+    expect(firstMock.mock.calls.length).toBe(0);
+    expect(secondMock.mock.calls.length).toBe(1);
+  });
+
+  const testWindow = Dimensions.get('window');
+  it('works with a simple media query', () => {
+    const firstMock = jest.fn();
+
+    const Component = enhancer(
+      () => ({ maxWidth: testWindow.width + 1 }),
+      TestHOC(firstMock)
+    )(View);
+
+    const tree = renderer.create(
+      <Providers>
+        <Component />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+    expect(firstMock.mock.calls.length).toBe(1);
+  });
+
+  it('works with a complex media query', () => {
+    const firstMock = jest.fn();
+
+    const Component = enhancer(
+      () => ({
+        maxWidth: testWindow.width + 1,
+        minWidth: testWindow.width - 1,
+        maxHeight: testWindow.height + 1,
+        minHeight: testWindow.height - 1,
+        minDeviceAspectRatio: testWindow.width / testWindow.height - 1,
+        maxDeviceAspectRatio: testWindow.width / testWindow.height + 1,
+      }),
+      TestHOC(firstMock)
+    )(View);
+
+    const tree = renderer.create(
+      <Providers>
+        <Component />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+    expect(firstMock.mock.calls.length).toBe(1);
+  });
+
+  it('uses second HOC when provided with a complex media query that doesnt match', () => {
+    const firstMock = jest.fn();
+    const secondMock = jest.fn();
+
+    const Component = enhancer(
+      () => ({
+        maxWidth: testWindow.width - 1,
+        minWidth: testWindow.width + 1,
+        maxHeight: testWindow.height - 1,
+        minHeight: testWindow.height + 1,
+        minDeviceAspectRatio: testWindow.width / testWindow.height + 1,
+        maxDeviceAspectRatio: testWindow.width / testWindow.height - 1,
+      }),
+      TestHOC(firstMock),
+      TestHOC(secondMock)
+    )(View);
+
+    const tree = renderer.create(
+      <Providers>
+        <Component />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+    expect(firstMock.mock.calls.length).toBe(0);
+    expect(secondMock.mock.calls.length).toBe(1);
+  });
+
+  it('passes in breakpoints to the test function', () => {
+    const firstMock = jest.fn();
+
+    const testFunction = ({ height, width, ...breakpoints }) => {
+      expect(breakpoints).toEqual(defaultBreakPoints);
+      return true;
+    };
+
+    const Component = enhancer(testFunction, TestHOC(firstMock))(View);
+
+    const tree = renderer.create(
+      <Providers>
+        <Component />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+    expect(firstMock.mock.calls.length).toBe(1);
+  });
+
+  it('passes in window width and height to the test function', () => {
+    const firstMock = jest.fn();
+
+    const testFunction = ({ height, width }) => {
+      expect(width).toBeGreaterThan(0);
+      expect(height).toBeGreaterThan(0);
+      return true;
+    };
+
+    const Component = enhancer(testFunction, TestHOC(firstMock))(View);
+
+    const tree = renderer.create(
+      <Providers>
+        <Component />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+    expect(firstMock.mock.calls.length).toBe(1);
+  });
+});
diff --git a/apolloschurchapp/src/ui/MediaQuery/index.js b/apolloschurchapp/src/ui/MediaQuery/index.js
new file mode 100644
index 0000000..c38c7f0
--- /dev/null
+++ b/apolloschurchapp/src/ui/MediaQuery/index.js
@@ -0,0 +1,3 @@
+export { default as enhancer } from './enhancer';
+export { default as withWindow } from './withWindow';
+export { default } from './MediaQuery';
diff --git a/apolloschurchapp/src/ui/MediaQuery/queryMatcher.js b/apolloschurchapp/src/ui/MediaQuery/queryMatcher.js
new file mode 100644
index 0000000..25e95c3
--- /dev/null
+++ b/apolloschurchapp/src/ui/MediaQuery/queryMatcher.js
@@ -0,0 +1,20 @@
+const queryMatcher = ({ width, height }) => (selector, query) => {
+  switch (query) {
+    case 'maxWidth':
+      return width < selector;
+    case 'minWidth':
+      return width > selector;
+    case 'maxHeight':
+      return height < selector;
+    case 'minHeight':
+      return height > selector;
+    case 'minDeviceAspectRatio':
+      return width / height > selector;
+    case 'maxDeviceAspectRatio':
+      return width / height < selector;
+    default:
+      return true;
+  }
+};
+
+export default queryMatcher;
diff --git a/apolloschurchapp/src/ui/MediaQuery/withWindow.js b/apolloschurchapp/src/ui/MediaQuery/withWindow.js
new file mode 100644
index 0000000..0ee9583
--- /dev/null
+++ b/apolloschurchapp/src/ui/MediaQuery/withWindow.js
@@ -0,0 +1,36 @@
+import React, { PureComponent } from 'react';
+import { Dimensions } from 'react-native';
+
+export default function withWindow(ComponentToWrap) {
+  return class WithWindow extends PureComponent {
+    state = {
+      window: {
+        height: Dimensions.get('window').height,
+        width: Dimensions.get('window').width,
+      },
+    };
+
+    componentWillMount() {
+      Dimensions.addEventListener('change', this.handler);
+    }
+
+    componentWillUnmount() {
+      Dimensions.removeEventListener('change', this.handler);
+    }
+
+    handler = ({ window }) => {
+      if (
+        // detect orientation change
+        window.width === this.state.window.height &&
+        window.height === this.state.window.width
+      ) {
+        return;
+      }
+      this.setState({ window });
+    };
+
+    render() {
+      return <ComponentToWrap {...this.state} {...this.props} />;
+    }
+  };
+}
diff --git a/apolloschurchapp/src/ui/ModalView/index.js b/apolloschurchapp/src/ui/ModalView/index.js
new file mode 100644
index 0000000..4f75c15
--- /dev/null
+++ b/apolloschurchapp/src/ui/ModalView/index.js
@@ -0,0 +1,56 @@
+import React from 'react';
+import { StatusBar, TouchableOpacity, View } from 'react-native';
+import { withNavigation } from 'react-navigation';
+import BackgroundView from 'apolloschurchapp/src/ui/BackgroundView';
+import styled from 'apolloschurchapp/src/ui/styled';
+import Icon from 'apolloschurchapp/src/ui/Icon';
+import { withTheme } from 'apolloschurchapp/src/ui/theme';
+
+const CloseIcon = withTheme(({ theme }) => ({
+  name: 'close',
+  fill: theme.colors.text.tertiary,
+  size: theme.sizing.baseUnit,
+}))(Icon);
+
+const IconTouchable = styled(({ theme }) => ({
+  position: 'absolute',
+  top: theme.sizing.baseUnit * 1.5,
+  right: theme.sizing.baseUnit * 1.5,
+  width: theme.sizing.baseUnit * 1.75,
+  height: theme.sizing.baseUnit * 1.75,
+  borderRadius: theme.sizing.baseUnit * 1.75,
+  alignItems: 'center',
+  justifyContent: 'center',
+  overflow: 'hidden',
+  backgroundColor: theme.colors.text.primary,
+  opacity: 0.9,
+}))(TouchableOpacity);
+
+const Container = styled({
+  flex: null,
+  width: '100%',
+  height: '100%',
+  borderRadius: 0,
+})(BackgroundView);
+
+const Handle = styled({
+  // helps in swipe-to-close gesture
+  position: 'absolute',
+  top: 0,
+  left: 0,
+  right: 0,
+  height: 75,
+})(View);
+
+const ModalView = ({ navigation, onBack, children, ...props }) => (
+  <Container {...props}>
+    <StatusBar hidden />
+    {children}
+    <Handle />
+    <IconTouchable onPress={() => (onBack ? onBack() : navigation.pop())}>
+      <CloseIcon />
+    </IconTouchable>
+  </Container>
+);
+
+export default withNavigation(ModalView);
diff --git a/apolloschurchapp/src/ui/Onboarding/Onboarding.stories.js b/apolloschurchapp/src/ui/Onboarding/Onboarding.stories.js
deleted file mode 100644
index bf81552..0000000
--- a/apolloschurchapp/src/ui/Onboarding/Onboarding.stories.js
+++ /dev/null
@@ -1,5 +0,0 @@
-import React from 'react';
-import { storiesOf } from '@apollosproject/ui-storybook';
-import Onboarding from '.';
-
-storiesOf('Onboarding', module).add('full', () => <Onboarding />);
diff --git a/apolloschurchapp/src/ui/Onboarding/index.js b/apolloschurchapp/src/ui/Onboarding/index.js
deleted file mode 100644
index 67d9879..0000000
--- a/apolloschurchapp/src/ui/Onboarding/index.js
+++ /dev/null
@@ -1,95 +0,0 @@
-import React from 'react';
-
-import {
-  GradientOverlayImage,
-  styled,
-  BackgroundView,
-} from '@apollosproject/ui-kit';
-import { ApolloConsumer } from 'react-apollo';
-
-import {
-  AskNotificationsConnected,
-  AskNameConnected,
-  FeaturesConnected,
-  AboutYouConnected,
-  LocationFinderConnected,
-  OnboardingSwiper,
-} from '@apollosproject/ui-onboarding';
-
-import { requestPushPermissions } from '@apollosproject/ui-notifications';
-
-const FullscreenBackgroundView = styled({
-  position: 'absolute',
-  width: '100%',
-  height: '100%',
-})(BackgroundView);
-
-const StyledGradient = styled({
-  maxHeight: '40%',
-})(GradientOverlayImage);
-
-function Onboarding({ navigation }) {
-  return (
-    <>
-      <FullscreenBackgroundView />
-      <OnboardingSwiper>
-        {({ swipeForward }) => (
-          <>
-            <AskNameConnected onPressPrimary={swipeForward} />
-            <FeaturesConnected
-              onPressPrimary={swipeForward}
-              BackgroundComponent={
-                <StyledGradient
-                  source={'https://picsum.photos/640/640/?random'}
-                />
-              }
-            />
-            <AboutYouConnected
-              onPressPrimary={swipeForward}
-              BackgroundComponent={
-                <StyledGradient
-                  source={'https://picsum.photos/640/640/?random'}
-                />
-              }
-            />
-            <LocationFinderConnected
-              onPressPrimary={swipeForward}
-              onNavigate={() => {
-                navigation.navigate('Location');
-              }}
-              BackgroundComponent={
-                <StyledGradient
-                  source={'https://picsum.photos/640/640/?random'}
-                />
-              }
-            />
-            <ApolloConsumer>
-              {(client) => (
-                <AskNotificationsConnected
-                  onPressPrimary={() => navigation.replace('Tabs')}
-                  onRequestPushPermissions={() =>
-                    requestPushPermissions({ client })
-                  }
-                  primaryNavText={'Finish'}
-                  BackgroundComponent={
-                    <StyledGradient
-                      source={'https://picsum.photos/640/640/?random'}
-                    />
-                  }
-                />
-              )}
-            </ApolloConsumer>
-          </>
-        )}
-      </OnboardingSwiper>
-    </>
-  );
-}
-
-Onboarding.navigationOptions = {
-  title: 'Onboarding',
-  header: null,
-  gesturesEnabled: false,
-};
-
-export default Onboarding;
diff --git a/apolloschurchapp/src/ui/PaddedView/PaddedView.stories.js b/apolloschurchapp/src/ui/PaddedView/PaddedView.stories.js
new file mode 100644
index 0000000..c22d2c1
--- /dev/null
+++ b/apolloschurchapp/src/ui/PaddedView/PaddedView.stories.js
@@ -0,0 +1,12 @@
+import React from 'react';
+import { storiesOf } from '@storybook/react-native';
+
+import { H1 } from 'apolloschurchapp/src/ui/typography';
+
+import PaddedView from '.';
+
+storiesOf('PaddedView', module).add('Example', () => (
+  <PaddedView>
+    <H1>This text is in a PaddedView</H1>
+  </PaddedView>
+));
diff --git a/apolloschurchapp/src/ui/Onboarding/Onboarding.tests.js b/apolloschurchapp/src/ui/PaddedView/PaddedView.tests.js
similarity index 52%
rename from apolloschurchapp/src/ui/Onboarding/Onboarding.tests.js
rename to apolloschurchapp/src/ui/PaddedView/PaddedView.tests.js
index abe9746..3e1f918 100644
--- a/apolloschurchapp/src/ui/Onboarding/Onboarding.tests.js
+++ b/apolloschurchapp/src/ui/PaddedView/PaddedView.tests.js
@@ -1,15 +1,15 @@
 import React from 'react';
 import renderer from 'react-test-renderer';
 
-import Providers from '../../Providers';
+import Providers from 'apolloschurchapp/src/Providers';
 
-import Onboarding from '.';
+import PaddedView from '.';
 
-describe('the Onboarding component', () => {
-  it('should render Onboarding', () => {
+describe('the PaddedView component', () => {
+  it('should render', () => {
     const tree = renderer.create(
       <Providers>
-        <Onboarding />
+        <PaddedView />
       </Providers>
     );
     expect(tree).toMatchSnapshot();
diff --git a/apolloschurchapp/src/ui/PaddedView/index.js b/apolloschurchapp/src/ui/PaddedView/index.js
new file mode 100644
index 0000000..ea72d31
--- /dev/null
+++ b/apolloschurchapp/src/ui/PaddedView/index.js
@@ -0,0 +1,13 @@
+import { View } from 'react-native';
+
+import styled from 'apolloschurchapp/src/ui/styled';
+
+const PaddedView = styled(
+  ({ theme, horizontal = true, vertical = true }) => ({
+    paddingHorizontal: horizontal ? theme.sizing.baseUnit : 0,
+    paddingVertical: vertical ? theme.sizing.baseUnit : 0,
+  }),
+  'PaddedView'
+)(View);
+
+export default PaddedView;
diff --git a/apolloschurchapp/src/ui/Placeholder/Line.js b/apolloschurchapp/src/ui/Placeholder/Line.js
new file mode 100644
index 0000000..2e14d92
--- /dev/null
+++ b/apolloschurchapp/src/ui/Placeholder/Line.js
@@ -0,0 +1,18 @@
+import React from 'react';
+import { View } from 'react-native';
+import Placeholder from 'rn-placeholder';
+
+import styled from 'apolloschurchapp/src/ui/styled';
+
+export const Line = styled(
+  ({ theme, width = '100%' }) => ({
+    borderRadius: theme.sizing.baseUnit,
+    backgroundColor: theme.colors.background.inactive,
+    height: theme.helpers.rem(1),
+    width,
+    alignSelf: 'stretch',
+  }),
+  'Placeholder.Line'
+)(({ style }) => <View style={style} />);
+
+export default Placeholder.connect(Line);
diff --git a/apolloschurchapp/src/ui/Placeholder/Line.tests.js b/apolloschurchapp/src/ui/Placeholder/Line.tests.js
new file mode 100644
index 0000000..598a1b0
--- /dev/null
+++ b/apolloschurchapp/src/ui/Placeholder/Line.tests.js
@@ -0,0 +1,35 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import { Line } from './Line';
+
+describe('The Line placeholder', () => {
+  it('renders correctly', () => {
+    const tree = renderer.create(
+      <Providers>
+        <Line />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('accepts width', () => {
+    const tree = renderer.create(
+      <Providers>
+        <Line width="50%" />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('accepts custom styles', () => {
+    const customStyle = { backgroundColor: 'salmon' };
+
+    const tree = renderer.create(
+      <Providers>
+        <Line width="50%" style={customStyle} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/Placeholder/Media.js b/apolloschurchapp/src/ui/Placeholder/Media.js
new file mode 100644
index 0000000..62c8abb
--- /dev/null
+++ b/apolloschurchapp/src/ui/Placeholder/Media.js
@@ -0,0 +1,17 @@
+import React from 'react';
+import { View } from 'react-native';
+import Placeholder from 'rn-placeholder';
+
+import styled from 'apolloschurchapp/src/ui/styled';
+
+export const Media = styled(
+  ({ borderRadius, theme, size = '100%' }) => ({
+    height: size,
+    width: size,
+    borderRadius: borderRadius || theme.sizing.baseUnit,
+    backgroundColor: theme.colors.background.inactive,
+  }),
+  'Placeholder.Media'
+)(({ style }) => <View style={style} />);
+
+export default Placeholder.connect(Media);
diff --git a/apolloschurchapp/src/ui/SearchInputHeader/SearchInputHeader.tests.js b/apolloschurchapp/src/ui/Placeholder/Media.tests.js
similarity index 55%
rename from apolloschurchapp/src/ui/SearchInputHeader/SearchInputHeader.tests.js
rename to apolloschurchapp/src/ui/Placeholder/Media.tests.js
index ad074a3..adb247d 100644
--- a/apolloschurchapp/src/ui/SearchInputHeader/SearchInputHeader.tests.js
+++ b/apolloschurchapp/src/ui/Placeholder/Media.tests.js
@@ -3,30 +3,31 @@ import renderer from 'react-test-renderer';
 
 import Providers from 'apolloschurchapp/src/Providers';
 
-import SearchInputHeader from '.';
+import { Media } from './Media';
 
-describe('The Onboarding LandingScreen component', () => {
-  it('should render', () => {
+describe('The Media placeholder', () => {
+  it('renders correctly', () => {
     const tree = renderer.create(
       <Providers>
-        <SearchInputHeader />
+        <Media />
       </Providers>
     );
     expect(tree).toMatchSnapshot();
   });
-  it('should be stylable', () => {
-    const style = { backgroundColor: 'salmon' };
+  it('accepts size', () => {
     const tree = renderer.create(
       <Providers>
-        <SearchInputHeader style={style} />
+        <Media size="50%" />
       </Providers>
     );
     expect(tree).toMatchSnapshot();
   });
-  it('should render pass props to SearchInput', () => {
+  it('accepts custom styles', () => {
+    const customStyle = { backgroundColor: 'salmon' };
+
     const tree = renderer.create(
       <Providers>
-        <SearchInputHeader cancelButtonText={'Boom'} />
+        <Media style={customStyle} />
       </Providers>
     );
     expect(tree).toMatchSnapshot();
diff --git a/apolloschurchapp/src/ui/Placeholder/Paragraph.js b/apolloschurchapp/src/ui/Placeholder/Paragraph.js
new file mode 100644
index 0000000..0fa7695
--- /dev/null
+++ b/apolloschurchapp/src/ui/Placeholder/Paragraph.js
@@ -0,0 +1,47 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import { View } from 'react-native';
+import Placeholder from 'rn-placeholder';
+import { times } from 'lodash';
+
+import styled from 'apolloschurchapp/src/ui/styled';
+
+import { Line } from './Line';
+
+const ParagraphLine = styled(
+  ({ theme }) => ({
+    height: theme.helpers.rem(1),
+    marginVertical:
+      (theme.helpers.verticalRhythm(1, 1.625) - theme.helpers.rem(1)) / 2,
+  }),
+  'Placeholder.Paragraph.line'
+)(Line);
+
+export const Paragraph = ({
+  lineNumber = 3,
+  width = '100%',
+  lastLineWidth = '75%',
+  firstLineWidth = '85%',
+  lineStyle,
+  style,
+}) => (
+  <View style={style}>
+    {times(lineNumber, (i) => {
+      let lineWidth = width;
+      if (i === 0 && firstLineWidth) lineWidth = firstLineWidth;
+      if (i === lineNumber - 1 && lastLineWidth) lineWidth = lastLineWidth;
+      return <ParagraphLine key={i} width={lineWidth} style={lineStyle} />;
+    })}
+  </View>
+);
+
+Paragraph.propTypes = {
+  lineNumber: PropTypes.number,
+  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
+  lastLineWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
+  firstLineWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
+  lineStyle: PropTypes.any, // eslint-disable-line
+  style: PropTypes.any, // eslint-disable-line
+};
+
+export default Placeholder.connect(Paragraph);
diff --git a/apolloschurchapp/src/ui/Placeholder/Paragraph.tests.js b/apolloschurchapp/src/ui/Placeholder/Paragraph.tests.js
new file mode 100644
index 0000000..ab72f64
--- /dev/null
+++ b/apolloschurchapp/src/ui/Placeholder/Paragraph.tests.js
@@ -0,0 +1,53 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import { Paragraph } from './Paragraph';
+
+describe('The Paragraph placeholder', () => {
+  it('renders correctly', () => {
+    const tree = renderer.create(
+      <Providers>
+        <Paragraph />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('renders multiple lines', () => {
+    const tree = renderer.create(
+      <Providers>
+        <Paragraph lineNumber={50} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('has varying width lines', () => {
+    const tree = renderer.create(
+      <Providers>
+        <Paragraph lastLineWidth={33} firstLineWidth={'23%'} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('accepts custom line styles', () => {
+    const customStyle = { height: 33 };
+
+    const tree = renderer.create(
+      <Providers>
+        <Paragraph lineStyle={customStyle} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('accepts custom styles', () => {
+    const customStyle = { backgroundColor: 'salmon' };
+
+    const tree = renderer.create(
+      <Providers>
+        <Paragraph style={customStyle} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/Placeholder/Typography.js b/apolloschurchapp/src/ui/Placeholder/Typography.js
new file mode 100644
index 0000000..0a2934e
--- /dev/null
+++ b/apolloschurchapp/src/ui/Placeholder/Typography.js
@@ -0,0 +1,44 @@
+import { compose, mapProps } from 'recompose';
+import { StyleSheet } from 'react-native';
+import Placeholder from 'rn-placeholder';
+
+import styled from 'apolloschurchapp/src/ui/styled';
+
+import { Line } from './Line';
+
+export const Typography = compose(
+  mapProps(({ style, ...otherProps }) => ({
+    flattenedStyles: StyleSheet.flatten(style),
+    ...otherProps,
+  })),
+  styled(
+    ({
+      flattenedStyles: {
+        fontSize,
+        lineHeight,
+        paddingTop,
+        paddingBottom,
+        paddingVertical,
+      } = {},
+    }) => {
+      const styles = {};
+      if (fontSize && lineHeight) {
+        styles.height = fontSize;
+        styles.marginVertical = (lineHeight - fontSize) / 2;
+      }
+      if (paddingTop) {
+        styles.marginTop = paddingTop;
+      }
+      if (paddingBottom) {
+        styles.marginBottom = paddingBottom;
+      }
+      if (paddingVertical) {
+        styles.marginVertical = paddingVertical;
+      }
+      return styles;
+    },
+    'Placeholder.Typography'
+  )
+)(Line);
+
+export default Placeholder.connect(Typography);
diff --git a/apolloschurchapp/src/ui/Placeholder/Typography.tests.js b/apolloschurchapp/src/ui/Placeholder/Typography.tests.js
new file mode 100644
index 0000000..42aa841
--- /dev/null
+++ b/apolloschurchapp/src/ui/Placeholder/Typography.tests.js
@@ -0,0 +1,27 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import { Typography } from './Typography';
+
+describe('The Typography placeholder', () => {
+  it('renders correctly', () => {
+    const tree = renderer.create(
+      <Providers>
+        <Typography />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('translates type styles', () => {
+    const customTypeStyles = { fontSize: 24, lineHeight: 32 };
+
+    const tree = renderer.create(
+      <Providers>
+        <Typography style={customTypeStyles} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/Placeholder/index.js b/apolloschurchapp/src/ui/Placeholder/index.js
new file mode 100644
index 0000000..82f6577
--- /dev/null
+++ b/apolloschurchapp/src/ui/Placeholder/index.js
@@ -0,0 +1,14 @@
+import Line from './Line';
+import Typography from './Typography';
+import Media from './Media';
+import Paragraph from './Paragraph';
+
+export withPlaceholder from './withPlaceholder';
+export { Line, Typography, Media, Paragraph };
+
+export default {
+  Line,
+  Typography,
+  Media,
+  Paragraph,
+};
diff --git a/apolloschurchapp/src/ui/Placeholder/withPlaceholder.js b/apolloschurchapp/src/ui/Placeholder/withPlaceholder.js
new file mode 100644
index 0000000..6920bd5
--- /dev/null
+++ b/apolloschurchapp/src/ui/Placeholder/withPlaceholder.js
@@ -0,0 +1,20 @@
+import React from 'react';
+
+import { getIsLoading } from 'apolloschurchapp/src/ui/isLoading';
+
+import { Line } from '.';
+
+const withPlaceholder = (PlaceholderComponent = Line, getProps = {}) => (
+  Component
+) =>
+  getIsLoading(({ isLoading = false, style, ...props }) => {
+    const propInput =
+      typeof getProps === 'function' ? getProps(props) : getProps;
+    return (
+      <PlaceholderComponent onReady={!isLoading} style={style} {...propInput}>
+        <Component style={style} {...props} />
+      </PlaceholderComponent>
+    );
+  });
+
+export default withPlaceholder;
diff --git a/apolloschurchapp/src/ui/ProgressiveImage/ProgressiveImage.tests.js b/apolloschurchapp/src/ui/ProgressiveImage/ProgressiveImage.tests.js
new file mode 100644
index 0000000..9f13fc2
--- /dev/null
+++ b/apolloschurchapp/src/ui/ProgressiveImage/ProgressiveImage.tests.js
@@ -0,0 +1,28 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import { ThemeProvider } from 'apolloschurchapp/src/ui/theme';
+
+import ProgressiveImage from '.';
+
+describe('the ProgressiveImage component', () => {
+  it('should render', () => {
+    const tree = renderer.create(
+      <ThemeProvider>
+        <ProgressiveImage
+          source={{
+            uri: 'https://placeholdit.co/i/1500x1500',
+            width: 1500,
+            height: 1500,
+          }}
+          thumbnail={{
+            uri: 'https://placeholdit.co/i/50x50',
+            width: 50,
+            height: 50,
+          }}
+        />
+      </ThemeProvider>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/ProgressiveImage/index.js b/apolloschurchapp/src/ui/ProgressiveImage/index.js
new file mode 100644
index 0000000..3ce2c5f
--- /dev/null
+++ b/apolloschurchapp/src/ui/ProgressiveImage/index.js
@@ -0,0 +1,68 @@
+import React, { PureComponent } from 'react';
+import PropTypes from 'prop-types';
+import { View, StyleSheet } from 'react-native';
+
+import styled from 'apolloschurchapp/src/ui/styled';
+import ConnectedImage from 'apolloschurchapp/src/ui/ConnectedImage';
+
+const Wrapper = styled(({ theme }) => ({
+  width: '100%',
+  aspectRatio: 1,
+  backgroundColor: theme.colors.background.inactive,
+}))(View);
+
+const styles = StyleSheet.create({
+  imageStyles: {
+    width: '100%',
+    height: '100%',
+    resizeMode: 'cover',
+  },
+});
+
+class ProgressiveImage extends PureComponent {
+  static propTypes = {
+    source: ConnectedImage.propTypes.source,
+    thumbnail: ConnectedImage.propTypes.source,
+    thumbnailBlurRadius: PropTypes.number,
+    imageStyle: PropTypes.any, // eslint-disable-line
+    ...ConnectedImage.propTypes,
+  };
+
+  static defaultProps = {
+    thumbnailBlurRadius: 2,
+  };
+
+  render() {
+    const {
+      source,
+      thumbnail,
+      thumbnailFadeDuration,
+      imageFadeDuration,
+      thumbnailBlurRadius,
+      onLoadThumbnail,
+      onLoadImage,
+      imageStyle,
+      style,
+      ...imageProps
+    } = this.props;
+    return (
+      <Wrapper style={style}>
+        {thumbnail ? (
+          <ConnectedImage
+            {...imageProps}
+            blurRadius={thumbnailBlurRadius}
+            style={[styles.imageStyles, imageStyle]}
+            source={thumbnail}
+          />
+        ) : null}
+        <ConnectedImage
+          {...imageProps}
+          style={[styles.imageStyles, imageStyle]}
+          source={source}
+        />
+      </Wrapper>
+    );
+  }
+}
+
+export default ProgressiveImage;
diff --git a/apolloschurchapp/src/ui/Scripture/ScriptureHTMLView.js b/apolloschurchapp/src/ui/Scripture/ScriptureHTMLView.js
new file mode 100644
index 0000000..9d78c86
--- /dev/null
+++ b/apolloschurchapp/src/ui/Scripture/ScriptureHTMLView.js
@@ -0,0 +1,139 @@
+import React from 'react';
+import { withProps } from 'recompose';
+import { Platform } from 'react-native';
+
+import Paragraph from 'apolloschurchapp/src/ui/typography/Paragraph';
+import { H4 } from 'apolloschurchapp/src/ui/typography';
+import HTMLView from 'apolloschurchapp/src/ui/HTMLView';
+import defaultRenderer, {
+  wrapTextChildren,
+} from 'apolloschurchapp/src/ui/HTMLView/defaultRenderer';
+
+import {
+  ScriptureText,
+  VerseNumber,
+  RedLetters,
+  PoeticPause,
+} from './typography';
+
+const renderer = (node, { children, ...other }) => {
+  // the defaultRenderer support several basic elements out of the box,
+  // this function only needs to handle the cases that are unique to scripture.
+  const className = (node && node.attribs && node.attribs.class) || '';
+
+  /* Verse numbers
+   * https://github.com/americanbible/api-bible-assets/blob/master/scss/eb-scripture-style/modules/_chapters-verses.scss#L33
+   */
+  if (className.includes('v')) {
+    /* TODO: a single space before and importantly a non-breaking space (`\u00A0`) after wraps the number to
+     * temporarily space verse numbers when they are not at the beginning of a sentence or
+     * paragraph. It affects all instences (albeit less noticably in some cases) so a more procise
+     * fix in the future is prefered.
+     */
+    return (
+      <VerseNumber>
+        {' '}
+        {children}
+        {`\u00A0`}
+      </VerseNumber>
+    );
+  }
+
+  /* Speaker identification and descriptive titles ("Hebrew subtitle")
+   * https://github.com/americanbible/api-bible-assets/blob/master/scss/eb-scripture-style/modules/_titles-headings.scss#L109-L126
+   */
+  if (className.includes('sp') || className.includes('d')) {
+    return <H4 padded>{children}</H4>;
+  }
+
+  /* Indented poetic line These are sometimes seen as a quote of the OT in the NT as well.
+   * This uses spaces as a less ideal fix because we are bound by the limits of rendering HTML.
+   * https://github.com/americanbible/api-bible-assets/blob/master/scss/eb-scripture-style/modules/_poetry.scss#L2
+   */
+  if (className.includes('q1')) {
+    return (
+      <ScriptureText>
+        {'     '}
+        {children}
+      </ScriptureText>
+    );
+  }
+
+  /* Double indented poetic lines. These are sometimes seen as a quote of the OT in the NT as well.
+   * This uses spaces as a less ideal fix because we are bound by the limits of rendering HTML.
+   * https://github.com/americanbible/api-bible-assets/blob/master/scss/eb-scripture-style/modules/_poetry.scss#L7
+   */
+  if (className.includes('q2')) {
+    return (
+      <ScriptureText>
+        {'          '}
+        {children}
+      </ScriptureText>
+    );
+  }
+
+  /* Triple indented poetic lines. These are sometimes seen as a quote of the OT in the NT as well.
+   * This uses spaces as a less ideal fix because we are bound by the limits of rendering HTML.
+   * https://github.com/americanbible/api-bible-assets/blob/master/scss/eb-scripture-style/modules/_poetry.scss#L8
+   */
+  if (className.includes('q3')) {
+    return (
+      <ScriptureText>
+        {'               '}
+        {children}
+      </ScriptureText>
+    );
+  }
+
+  /* Quadruple indented poetic lines. These are sometimes seen as a quote of the OT in the NT as well.
+   * This uses spaces as a less ideal fix because we are bound by the limits of rendering HTML.
+   * https://github.com/americanbible/api-bible-assets/blob/master/scss/eb-scripture-style/modules/_poetry.scss#L9
+   */
+  if (className.includes('q4')) {
+    return (
+      <ScriptureText>
+        {'                    '}
+        {children}
+      </ScriptureText>
+    );
+  }
+
+  if (className.includes('wj')) {
+    return <RedLetters>{children}</RedLetters>;
+  }
+
+  /* Poetic pause ("Selah"). Highly conditional rendering due to Android not supporting nested text
+   * alignment (https://github.com/facebook/react-native/issues/18790) and needing to keep it
+   * somewhat attractive. TODO: revisit conditional code when issue is resolved or if we refactor
+   * the parser
+   *
+   * https://github.com/americanbible/api-bible-assets/blob/master/scss/eb-scripture-style/modules/_poetry.scss#L22
+   */
+  if (className.includes('qs')) {
+    return (
+      <PoeticPause>
+        {Platform.OS === 'ios' ? `\n` : null}
+        {children}
+        {Platform.OS === 'ios' ? `\n` : `\n\n`}
+      </PoeticPause>
+    );
+  }
+
+  if (node.name === 'p') {
+    return (
+      <Paragraph>
+        <ScriptureText>
+          {wrapTextChildren(children, ScriptureText)}
+        </ScriptureText>
+      </Paragraph>
+    );
+  }
+
+  return defaultRenderer(node, { children, ...other });
+};
+
+const ScriptureHTMLView = withProps({
+  renderer,
+})(HTMLView);
+
+export default ScriptureHTMLView;
diff --git a/apolloschurchapp/src/ui/Scripture/ScriptureItem.js b/apolloschurchapp/src/ui/Scripture/ScriptureItem.js
new file mode 100644
index 0000000..8bb0643
--- /dev/null
+++ b/apolloschurchapp/src/ui/Scripture/ScriptureItem.js
@@ -0,0 +1,35 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import { View } from 'react-native';
+
+import Placeholder from 'apolloschurchapp/src/ui/Placeholder';
+import { H4, H6 } from 'apolloschurchapp/src/ui/typography';
+
+import { LegalText } from './typography';
+import ScriptureHTMLView from './ScriptureHTMLView';
+
+const ScriptureItem = ({ reference, html, copyright, isLoading }) => (
+  <Placeholder.Paragraph
+    lineNumber={5}
+    onReady={!isLoading}
+    lastLineWidth="60%"
+    firstLineWidth="40%"
+  >
+    <View>
+      <H4>
+        <H4>{reference}</H4> <H6>WEB</H6>
+      </H4>
+      <ScriptureHTMLView>{html}</ScriptureHTMLView>
+      <LegalText>{copyright === 'PUBLIC DOMAIN' ? '' : copyright}</LegalText>
+    </View>
+  </Placeholder.Paragraph>
+);
+
+ScriptureItem.propTypes = {
+  reference: PropTypes.string,
+  html: PropTypes.string,
+  copyright: PropTypes.string,
+  isLoading: PropTypes.bool,
+};
+
+export default ScriptureItem;
diff --git a/apolloschurchapp/src/ui/Scripture/ScriptureItem.stories.js b/apolloschurchapp/src/ui/Scripture/ScriptureItem.stories.js
new file mode 100644
index 0000000..338514f
--- /dev/null
+++ b/apolloschurchapp/src/ui/Scripture/ScriptureItem.stories.js
@@ -0,0 +1,210 @@
+import React from 'react';
+import { ScrollView } from 'react-native';
+import { storiesOf } from '@storybook/react-native';
+import PaddedView from 'apolloschurchapp/src/ui/PaddedView';
+
+import ScriptureItem from './ScriptureItem';
+
+const genesis1 = {
+  scripture: {
+    reference: 'Genesis 1:1-5',
+    html:
+      '<p class="p"><span data-number="1" class="v">1</span>In the beginning, God created the heavens and the earth. <span data-number="2" class="v">2</span>The earth was formless and empty. Darkness was on the surface of the deep and God’s Spirit was hovering over the surface of the waters.</p><p class="p"><span data-number="3" class="v">3</span>God said, “Let there be light,” and there was light. <span data-number="4" class="v">4</span>God saw the light, and saw that it was good. God divided the light from the darkness. <span data-number="5" class="v">5</span>God called the light “day”, and the darkness he called “night”. There was evening and there was morning, the first day.</p>',
+    isLoading: false,
+    copyright: 'PUBLIC DOMAIN',
+  },
+};
+
+const john1 = {
+  scripture: {
+    reference: 'John 1:1',
+    html:
+      '<p class="p"><span data-number="1" class="v">1</span>In the beginning was the Word, and the Word was with God, and the Word was God. </p>',
+    isLoading: false,
+    copyright:
+      'PUBLIC DOMAIN except in the United Kingdom, where a Crown Copyright applies to printing the KJV. See http://www.cambridge.org/about-us/who-we-are/queens-printers-patent',
+  },
+};
+
+const psalm23 = {
+  scripture: {
+    reference: 'Psalm 23',
+    html:
+      '<p class="d">A Psalm by David.</p><p class="q1"><span data-number="1" class="v">1</span>Yahweh is my shepherd:</p><p class="q2">I shall lack nothing.</p><p class="q1"><span data-number="2" class="v">2</span>He makes me lie down in green pastures.</p><p class="q2">He leads me beside still waters.</p><p class="q1"><span data-number="3" class="v">3</span>He restores my soul.</p><p class="q2">He guides me in the paths of righteousness for his name’s sake.</p><p class="q1"><span data-number="4" class="v">4</span>Even though I walk through the valley of the shadow of death,</p><p class="q2">I will fear no evil, for you are with me.</p><p class="q1">Your rod and your staff,</p><p class="q2">they comfort me.</p><p class="q1"><span data-number="5" class="v">5</span>You prepare a table before me</p><p class="q2">in the presence of my enemies.</p><p class="q1">You anoint my head with oil.</p><p class="q2">My cup runs over.</p><p class="q1"><span data-number="6" class="v">6</span>Surely goodness and loving kindness shall follow me all the days of my life,</p><p class="q2">and I will dwell in Yahweh’s house forever.</p>',
+    isLoading: false,
+  },
+};
+
+const psalm32 = {
+  scripture: {
+    reference: 'Psalm 32',
+    html:
+      '<p class="d">By David. A contemplative psalm.</p><p class="q1"><span data-number="1" class="v">1</span>Blessed is he whose disobedience is forgiven,</p><p class="q2">whose sin is covered.</p><p class="q1"><span data-number="2" class="v">2</span>Blessed is the man to whom Yahweh doesn’t impute iniquity,</p><p class="q2">in whose spirit there is no deceit.</p><p class="q1"><span data-number="3" class="v">3</span>When I kept silence, my bones wasted away through my groaning all day long.</p><p class="q1"><span data-number="4" class="v">4</span>For day and night your hand was heavy on me.</p><p class="q2">My strength was sapped in the heat of summer. <span class="qs">Selah.</span></p><p class="q1"><span data-number="5" class="v">5</span>I acknowledged my sin to you.</p><p class="q2">I didn’t hide my iniquity.</p><p class="q1">I said, I will confess my transgressions to Yahweh,</p><p class="q2">and you forgave the iniquity of my sin. <span class="qs">Selah.</span></p><p class="q1"><span data-number="6" class="v">6</span>For this, let everyone who is godly pray to you in a time when you may be found.</p><p class="q2">Surely when the great waters overflow, they shall not reach to him.</p><p class="q1"><span data-number="7" class="v">7</span>You are my hiding place.</p><p class="q2">You will preserve me from trouble.</p><p class="q2">You will surround me with songs of deliverance. <span class="qs">Selah.</span></p><p class="q1"><span data-number="8" class="v">8</span>I will instruct you and teach you in the way which you shall go.</p><p class="q2">I will counsel you with my eye on you.</p><p class="q1"><span data-number="9" class="v">9</span>Don’t be like the horse, or like the mule, which have no understanding,</p><p class="q2">who are controlled by bit and bridle, or else they will not come near to you.</p><p class="q1"><span data-number="10" class="v">10</span>Many sorrows come to the wicked,</p><p class="q2">but loving kindness shall surround him who trusts in Yahweh.</p><p class="q1"><span data-number="11" class="v">11</span>Be glad in Yahweh, and rejoice, you righteous!</p><p class="q2">Shout for joy, all you who are upright in heart!</p>',
+  },
+};
+
+const psalm119 = {
+  scripture: {
+    reference: 'Psalm 119:129 - 144',
+    html:
+      '<p class="d">PEY</p><p class="q1"><span data-number="129" class="v">129</span>Your testimonies are wonderful,</p><p class="q2">therefore my soul keeps them.</p><p class="q1"><span data-number="130" class="v">130</span>The entrance of your words gives light.</p><p class="q2">It gives understanding to the simple.</p><p class="q1"><span data-number="131" class="v">131</span>I opened my mouth wide and panted,</p><p class="q2">for I longed for your commandments.</p><p class="q1"><span data-number="132" class="v">132</span>Turn to me, and have mercy on me,</p><p class="q2">as you always do to those who love your name.</p><p class="q1"><span data-number="133" class="v">133</span>Establish my footsteps in your word.</p><p class="q2">Don’t let any iniquity have dominion over me.</p><p class="q1"><span data-number="134" class="v">134</span>Redeem me from the oppression of man,</p><p class="q2">so I will observe your precepts.</p><p class="q1"><span data-number="135" class="v">135</span>Make your face shine on your servant.</p><p class="q2">Teach me your statutes.</p><p class="q1"><span data-number="136" class="v">136</span>Streams of tears run down my eyes,</p><p class="q2">because they don’t observe your law.</p><p class="d">TZADI</p><p class="q1"><span data-number="137" class="v">137</span>You are righteous, Yahweh.</p><p class="q2">Your judgments are upright.</p><p class="q1"><span data-number="138" class="v">138</span>You have commanded your statutes in righteousness.</p><p class="q2">They are fully trustworthy.</p><p class="q1"><span data-number="139" class="v">139</span>My zeal wears me out,</p><p class="q2">because my enemies ignore your words.</p><p class="q1"><span data-number="140" class="v">140</span>Your promises have been thoroughly tested,</p><p class="q2">and your servant loves them.</p><p class="q1"><span data-number="141" class="v">141</span>I am small and despised.</p><p class="q2">I don’t forget your precepts.</p><p class="q1"><span data-number="142" class="v">142</span>Your righteousness is an everlasting righteousness.</p><p class="q2">Your law is truth.</p><p class="q1"><span data-number="143" class="v">143</span>Trouble and anguish have taken hold of me.</p><p class="q2">Your commandments are my delight.</p><p class="q1"><span data-number="144" class="v">144</span>Your testimonies are righteous forever.</p><p class="q2">Give me understanding, that I may live.</p>',
+  },
+};
+
+const songOfSolomon1 = {
+  scripture: {
+    reference: 'Song of Solomon 1:1-4',
+    html:
+      '<p class="p"><span data-number="1" class="v">1</span>The Song of songs, which is Solomon’s.</p><p class="sp">Beloved</p><p class="q1"><span data-number="2" class="v">2</span>Let him kiss me with the kisses of his mouth;</p><p class="q2">for your love is better than wine.</p><p class="q1"><span data-number="3" class="v">3</span>Your oils have a pleasing fragrance.</p><p class="q2">Your name is oil poured out,</p><p class="q2">therefore the virgins love you.</p><p class="q1"><span data-number="4" class="v">4</span>Take me away with you.</p><p class="q2">Let’s hurry.</p><p class="q2">The king has brought me into his rooms.</p><p class="sp">Friends</p><p class="q1">We will be glad and rejoice in you.</p><p class="q2">We will praise your love more than wine!</p><p class="sp">Beloved</p><p class="q1">They are right to love you.</p>',
+    isLoading: false,
+  },
+};
+
+const mark1 = {
+  scripture: {
+    reference: 'Mark 1: 1-4',
+    html:
+      '<p class="p"><span data-number="1" class="v">1</span>The beginning of the Good News of Jesus Christ, the Son of God.</p><p class="p"><span data-number="2" class="v">2</span>As it is written in the prophets,</p><p class="q1">“Behold, I send my messenger before your face,</p><p class="q2">who will prepare your way before you:</p><p class="q1"><span data-number="3" class="v">3</span>the voice of one crying in the wilderness,</p><p class="q2">‘Make ready the way of the Lord!</p><p class="q2">Make his paths straight!’”</p><p class="p"><span data-number="4" class="v">4</span>John came baptizing in the wilderness and preaching the baptism of repentance for forgiveness of sins.',
+  },
+};
+
+const john3 = {
+  scripture: {
+    reference: 'John 3:16-17',
+    html:
+      '<p class="p"><span data-number="16" class="v">16</span><span class="wj">For God so loved the world, that he gave his one and only Son, that whoever believes in him should not perish, but have eternal life. </span><span data-number="17" class="v">17</span><span class="wj">For God didn’t send his Son into the world to judge the world, but that the world should be saved through him. </span></p>',
+    isLoading: false,
+  },
+};
+
+const revelation22 = {
+  scripture: {
+    reference: 'Revelation 22:20-21',
+    html:
+      '<p class="p"><span data-number="20" class="v">20</span>He who testifies these things says, <span class="wj">“Yes, I come quickly.” </span></p><p class="p">Amen! Yes, come, Lord Jesus.</p><p class="p"><span data-number="21" class="v">21</span>The grace of the Lord Jesus Christ be with all the saints. Amen.</p>',
+    isLoading: false,
+  },
+};
+
+const revelation22Loading = {
+  scripture: {
+    reference: 'Revelation 22:20-21',
+    html:
+      '<p class="p"><span data-number="20" class="v">20</span>He who testifies these things says, <span class="wj">“Yes, I come quickly.” </span></p><p class="p">Amen! Yes, come, Lord Jesus.</p><p class="p"><span data-number="21" class="v">21</span>The grace of the Lord Jesus Christ be with all the saints. Amen.</p>',
+    isLoading: true,
+  },
+};
+
+storiesOf('Scripture', module)
+  .add('Genesis 1:1-5', () => (
+    <ScrollView>
+      <PaddedView>
+        <ScriptureItem
+          reference={genesis1.scripture.reference}
+          html={genesis1.scripture.html}
+          isLoading={genesis1.scripture.isLoading}
+          copyright={genesis1.scripture.copyright}
+        />
+      </PaddedView>
+    </ScrollView>
+  ))
+  .add('John 1:1', () => (
+    <ScrollView>
+      <PaddedView>
+        <ScriptureItem
+          reference={john1.scripture.reference}
+          html={john1.scripture.html}
+          isLoading={john1.scripture.isLoading}
+          copyright={john1.scripture.copyright}
+        />
+      </PaddedView>
+    </ScrollView>
+  ))
+  .add('Psalm 23', () => (
+    <ScrollView>
+      <PaddedView>
+        <ScriptureItem
+          reference={psalm23.scripture.reference}
+          html={psalm23.scripture.html}
+          isLoading={psalm23.scripture.isLoading}
+        />
+      </PaddedView>
+    </ScrollView>
+  ))
+  .add('Psalm 32', () => (
+    <ScrollView>
+      <PaddedView>
+        <ScriptureItem
+          reference={psalm32.scripture.reference}
+          html={psalm32.scripture.html}
+          isLoading={psalm32.scripture.isLoading}
+        />
+      </PaddedView>
+    </ScrollView>
+  ))
+  .add('Psalm 119:129 - 144', () => (
+    <ScrollView>
+      <PaddedView>
+        <ScriptureItem
+          reference={psalm119.scripture.reference}
+          html={psalm119.scripture.html}
+          isLoading={psalm119.scripture.isLoading}
+        />
+      </PaddedView>
+    </ScrollView>
+  ))
+  .add('Song of Solomon 1:1-4', () => (
+    <ScrollView>
+      <PaddedView>
+        <ScriptureItem
+          reference={songOfSolomon1.scripture.reference}
+          html={songOfSolomon1.scripture.html}
+          isLoading={songOfSolomon1.scripture.isLoading}
+        />
+      </PaddedView>
+    </ScrollView>
+  ))
+  .add('Mark 1: 1-4', () => (
+    <ScrollView>
+      <PaddedView>
+        <ScriptureItem
+          reference={mark1.scripture.reference}
+          html={mark1.scripture.html}
+          isLoading={mark1.scripture.isLoading}
+        />
+      </PaddedView>
+    </ScrollView>
+  ))
+  .add('John 3:16-17', () => (
+    <ScrollView>
+      <PaddedView>
+        <ScriptureItem
+          reference={john3.scripture.reference}
+          html={john3.scripture.html}
+          isLoading={john3.scripture.isLoading}
+        />
+      </PaddedView>
+    </ScrollView>
+  ))
+  .add('Revelation 22:20-21', () => (
+    <ScrollView>
+      <PaddedView>
+        <ScriptureItem
+          reference={revelation22.scripture.reference}
+          html={revelation22.scripture.html}
+          isLoading={revelation22.scripture.isLoading}
+        />
+      </PaddedView>
+    </ScrollView>
+  ))
+  .add('Loading State', () => (
+    <ScrollView>
+      <PaddedView>
+        <ScriptureItem
+          reference={revelation22Loading.scripture.reference}
+          html={revelation22Loading.scripture.html}
+          isLoading={revelation22Loading.scripture.isLoading}
+        />
+      </PaddedView>
+    </ScrollView>
+  ));
diff --git a/apolloschurchapp/src/ui/Scripture/ScriptureItem.tests.js b/apolloschurchapp/src/ui/Scripture/ScriptureItem.tests.js
new file mode 100644
index 0000000..b43256b
--- /dev/null
+++ b/apolloschurchapp/src/ui/Scripture/ScriptureItem.tests.js
@@ -0,0 +1,198 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import ScriptureItem from './ScriptureItem';
+
+const genesis1 = {
+  scripture: {
+    reference: 'Genesis 1:1-5',
+    html:
+      '<p class="p"><span data-number="1" class="v">1</span>In the beginning, God created the heavens and the earth. <span data-number="2" class="v">2</span>The earth was formless and empty. Darkness was on the surface of the deep and God’s Spirit was hovering over the surface of the waters.</p><p class="p"><span data-number="3" class="v">3</span>God said, “Let there be light,” and there was light. <span data-number="4" class="v">4</span>God saw the light, and saw that it was good. God divided the light from the darkness. <span data-number="5" class="v">5</span>God called the light “day”, and the darkness he called “night”. There was evening and there was morning, the first day.</p>',
+    copyright: 'PUBLIC DOMAIN',
+  },
+};
+
+const psalm23 = {
+  scripture: {
+    reference: 'Psalm 23',
+    html:
+      '<p class="d">A Psalm by David.</p><p class="q1"><span data-number="1" class="v">1</span>Yahweh is my shepherd:</p><p class="q2">I shall lack nothing.</p><p class="q1"><span data-number="2" class="v">2</span>He makes me lie down in green pastures.</p><p class="q2">He leads me beside still waters.</p><p class="q1"><span data-number="3" class="v">3</span>He restores my soul.</p><p class="q2">He guides me in the paths of righteousness for his name’s sake.</p><p class="q1"><span data-number="4" class="v">4</span>Even though I walk through the valley of the shadow of death,</p><p class="q2">I will fear no evil, for you are with me.</p><p class="q1">Your rod and your staff,</p><p class="q2">they comfort me.</p><p class="q1"><span data-number="5" class="v">5</span>You prepare a table before me</p><p class="q2">in the presence of my enemies.</p><p class="q1">You anoint my head with oil.</p><p class="q2">My cup runs over.</p><p class="q1"><span data-number="6" class="v">6</span>Surely goodness and loving kindness shall follow me all the days of my life,</p><p class="q2">and I will dwell in Yahweh’s house forever.</p>',
+
+    copyright:
+      'PUBLIC DOMAIN except in the United Kingdom, where a Crown Copyright applies to printing the KJV. See http://www.cambridge.org/about-us/who-we-are/queens-printers-patent',
+  },
+};
+
+const psalm32 = {
+  scripture: {
+    reference: 'Psalm 32',
+    html:
+      '<p class="d">By David. A contemplative psalm.</p><p class="q1"><span data-number="1" class="v">1</span>Blessed is he whose disobedience is forgiven,</p><p class="q2">whose sin is covered.</p><p class="q1"><span data-number="2" class="v">2</span>Blessed is the man to whom Yahweh doesn’t impute iniquity,</p><p class="q2">in whose spirit there is no deceit.</p><p class="q1"><span data-number="3" class="v">3</span>When I kept silence, my bones wasted away through my groaning all day long.</p><p class="q1"><span data-number="4" class="v">4</span>For day and night your hand was heavy on me.</p><p class="q2">My strength was sapped in the heat of summer. <span class="qs">Selah.</span></p><p class="q1"><span data-number="5" class="v">5</span>I acknowledged my sin to you.</p><p class="q2">I didn’t hide my iniquity.</p><p class="q1">I said, I will confess my transgressions to Yahweh,</p><p class="q2">and you forgave the iniquity of my sin. <span class="qs">Selah.</span></p><p class="q1"><span data-number="6" class="v">6</span>For this, let everyone who is godly pray to you in a time when you may be found.</p><p class="q2">Surely when the great waters overflow, they shall not reach to him.</p><p class="q1"><span data-number="7" class="v">7</span>You are my hiding place.</p><p class="q2">You will preserve me from trouble.</p><p class="q2">You will surround me with songs of deliverance. <span class="qs">Selah.</span></p><p class="q1"><span data-number="8" class="v">8</span>I will instruct you and teach you in the way which you shall go.</p><p class="q2">I will counsel you with my eye on you.</p><p class="q1"><span data-number="9" class="v">9</span>Don’t be like the horse, or like the mule, which have no understanding,</p><p class="q2">who are controlled by bit and bridle, or else they will not come near to you.</p><p class="q1"><span data-number="10" class="v">10</span>Many sorrows come to the wicked,</p><p class="q2">but loving kindness shall surround him who trusts in Yahweh.</p><p class="q1"><span data-number="11" class="v">11</span>Be glad in Yahweh, and rejoice, you righteous!</p><p class="q2">Shout for joy, all you who are upright in heart!</p>',
+  },
+};
+
+const psalm119 = {
+  scripture: {
+    reference: 'Psalm 119:129 - 144',
+    html:
+      '<p class="d">PEY</p><p class="q1"><span data-number="129" class="v">129</span>Your testimonies are wonderful,</p><p class="q2">therefore my soul keeps them.</p><p class="q1"><span data-number="130" class="v">130</span>The entrance of your words gives light.</p><p class="q2">It gives understanding to the simple.</p><p class="q1"><span data-number="131" class="v">131</span>I opened my mouth wide and panted,</p><p class="q2">for I longed for your commandments.</p><p class="q1"><span data-number="132" class="v">132</span>Turn to me, and have mercy on me,</p><p class="q2">as you always do to those who love your name.</p><p class="q1"><span data-number="133" class="v">133</span>Establish my footsteps in your word.</p><p class="q2">Don’t let any iniquity have dominion over me.</p><p class="q1"><span data-number="134" class="v">134</span>Redeem me from the oppression of man,</p><p class="q2">so I will observe your precepts.</p><p class="q1"><span data-number="135" class="v">135</span>Make your face shine on your servant.</p><p class="q2">Teach me your statutes.</p><p class="q1"><span data-number="136" class="v">136</span>Streams of tears run down my eyes,</p><p class="q2">because they don’t observe your law.</p><p class="d">TZADI</p><p class="q1"><span data-number="137" class="v">137</span>You are righteous, Yahweh.</p><p class="q2">Your judgments are upright.</p><p class="q1"><span data-number="138" class="v">138</span>You have commanded your statutes in righteousness.</p><p class="q2">They are fully trustworthy.</p><p class="q1"><span data-number="139" class="v">139</span>My zeal wears me out,</p><p class="q2">because my enemies ignore your words.</p><p class="q1"><span data-number="140" class="v">140</span>Your promises have been thoroughly tested,</p><p class="q2">and your servant loves them.</p><p class="q1"><span data-number="141" class="v">141</span>I am small and despised.</p><p class="q2">I don’t forget your precepts.</p><p class="q1"><span data-number="142" class="v">142</span>Your righteousness is an everlasting righteousness.</p><p class="q2">Your law is truth.</p><p class="q1"><span data-number="143" class="v">143</span>Trouble and anguish have taken hold of me.</p><p class="q2">Your commandments are my delight.</p><p class="q1"><span data-number="144" class="v">144</span>Your testimonies are righteous forever.</p><p class="q2">Give me understanding, that I may live.</p>',
+  },
+};
+
+const songOfSolomon1 = {
+  scripture: {
+    reference: 'Song of Solomon 1:1-4',
+    html:
+      '<p class="p"><span data-number="1" class="v">1</span>The Song of songs, which is Solomon’s.</p><p class="sp">Beloved</p><p class="q1"><span data-number="2" class="v">2</span>Let him kiss me with the kisses of his mouth;</p><p class="q2">for your love is better than wine.</p><p class="q1"><span data-number="3" class="v">3</span>Your oils have a pleasing fragrance.</p><p class="q2">Your name is oil poured out,</p><p class="q2">therefore the virgins love you.</p><p class="q1"><span data-number="4" class="v">4</span>Take me away with you.</p><p class="q2">Let’s hurry.</p><p class="q2">The king has brought me into his rooms.</p><p class="sp">Friends</p><p class="q1">We will be glad and rejoice in you.</p><p class="q2">We will praise your love more than wine!</p><p class="sp">Beloved</p><p class="q1">They are right to love you.</p>',
+    isLoading: false,
+  },
+};
+
+const mark1 = {
+  scripture: {
+    reference: 'Mark 1:1-4',
+    html:
+      '<p class="p"><span data-number="1" class="v">1</span>The beginning of the Good News of Jesus Christ, the Son of God.</p><p class="p"><span data-number="2" class="v">2</span>As it is written in the prophets,</p><p class="q1">“Behold, I send my messenger before your face,</p><p class="q2">who will prepare your way before you:</p><p class="q1"><span data-number="3" class="v">3</span>the voice of one crying in the wilderness,</p><p class="q2">‘Make ready the way of the Lord!</p><p class="q2">Make his paths straight!’”</p><p class="p"><span data-number="4" class="v">4</span>John came baptizing in the wilderness and preaching the baptism of repentance for forgiveness of sins.',
+  },
+};
+
+const john3 = {
+  scripture: {
+    reference: 'John 3:16-17',
+    html:
+      '<p class="p"><span data-number="16" class="v">16</span><span class="wj">For God so loved the world, that he gave his one and only Son, that whoever believes in him should not perish, but have eternal life. </span><span data-number="17" class="v">17</span><span class="wj">For God didn’t send his Son into the world to judge the world, but that the world should be saved through him. </span></p>',
+    isLoading: false,
+  },
+};
+
+const revelation22 = {
+  scripture: {
+    reference: 'Revelation 22:20-21',
+    html:
+      '<p class="p"><span data-number="20" class="v">20</span>He who testifies these things says, <span class="wj">“Yes, I come quickly.” </span></p><p class="p">Amen! Yes, come, Lord Jesus.</p><p class="p"><span data-number="21" class="v">21</span>The grace of the Lord Jesus Christ be with all the saints. Amen.</p>',
+  },
+};
+
+const john3Loading = {
+  scripture: {
+    reference: 'John 3:16-17',
+    html:
+      '<p class="p"><span data-number="16" class="v">16</span><span class="wj">For God so loved the world, that he gave his one and only Son, that whoever believes in him should not perish, but have eternal life. </span><span data-number="17" class="v">17</span><span class="wj">For God didn’t send his Son into the world to judge the world, but that the world should be saved through him. </span></p>',
+    isLoading: true,
+  },
+};
+
+describe('the ScriptureItem component', () => {
+  it('renders Genesis 1:1-5', () => {
+    const tree = renderer.create(
+      <Providers>
+        <ScriptureItem
+          reference={genesis1.scripture.reference}
+          html={genesis1.scripture.html}
+          copyright={genesis1.scripture.copyright}
+          isLoading={false}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('renders Psalm 23', () => {
+    const tree = renderer.create(
+      <Providers>
+        <ScriptureItem
+          reference={psalm23.scripture.reference}
+          html={psalm23.scripture.html}
+          copyright={psalm23.scripture.copyright}
+          isLoading={false}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('renders Psalm 32', () => {
+    const tree = renderer.create(
+      <Providers>
+        <ScriptureItem
+          reference={psalm32.scripture.reference}
+          html={psalm32.scripture.html}
+          isLoading={false}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('renders Psalm 119:129 - 144', () => {
+    const tree = renderer.create(
+      <Providers>
+        <ScriptureItem
+          reference={psalm119.scripture.reference}
+          html={psalm119.scripture.html}
+          isLoading={false}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('renders Song of Solomon 1:1-4', () => {
+    const tree = renderer.create(
+      <Providers>
+        <ScriptureItem
+          reference={songOfSolomon1.scripture.reference}
+          html={songOfSolomon1.scripture.html}
+          isLoading={songOfSolomon1.scripture.isLoading}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('renders Mark 1:1-4', () => {
+    const tree = renderer.create(
+      <Providers>
+        <ScriptureItem
+          reference={mark1.scripture.reference}
+          html={mark1.scripture.html}
+          isLoading={false}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('renders John 3:16-17', () => {
+    const tree = renderer.create(
+      <Providers>
+        <ScriptureItem
+          reference={john3.scripture.reference}
+          html={john3.scripture.html}
+          isLoading={john3.scripture.isLoading}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('renders Revelation 22:20-21', () => {
+    const tree = renderer.create(
+      <Providers>
+        <ScriptureItem
+          reference={revelation22.scripture.reference}
+          html={revelation22.scripture.html}
+          isLoading={false}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('renders a loading state', () => {
+    const tree = renderer.create(
+      <Providers>
+        <ScriptureItem
+          reference={john3Loading.scripture.reference}
+          html={john3Loading.scripture.html}
+          isLoading={john3Loading.scripture.isLoading}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/Scripture/ScriptureList.js b/apolloschurchapp/src/ui/Scripture/ScriptureList.js
new file mode 100644
index 0000000..555a113
--- /dev/null
+++ b/apolloschurchapp/src/ui/Scripture/ScriptureList.js
@@ -0,0 +1,51 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import { H4 } from 'apolloschurchapp/src/ui/typography';
+import styled from 'apolloschurchapp/src/ui/styled';
+import { ButtonLink } from 'apolloschurchapp/src/ui/Button';
+
+const StyledH4 = styled(({ theme }) => ({
+  color: theme.colors.primary,
+  textAlign: 'center',
+  textDecorationLine: 'underline',
+  paddingBottom: theme.sizing.baseUnit * 1.5,
+}))(H4);
+
+const ScriptureList = ({
+  references,
+  onPress,
+  tabDestination,
+  commas = true,
+}) => {
+  if (!references && commas) return '';
+  if (!references) return [];
+
+  let combo = references.map((reference) => `${reference}`);
+
+  if (commas) {
+    combo = combo.join(', ');
+  }
+
+  const handleOnPress = () => onPress(tabDestination);
+
+  return (
+    <StyledH4>
+      <ButtonLink padded onPress={handleOnPress}>
+        {combo}
+      </ButtonLink>
+    </StyledH4>
+  );
+};
+
+ScriptureList.propTypes = {
+  /** Toggles comma formating */
+  commas: PropTypes.bool,
+  /** The ButtonLink handler */
+  onPress: PropTypes.func,
+  /** An array of human readable references (i.e. '1 Corinthians 15:57') */
+  references: PropTypes.arrayOf(PropTypes.string),
+  /** The tab to go to onPress */
+  tabDestination: PropTypes.string,
+};
+
+export default ScriptureList;
diff --git a/apolloschurchapp/src/ui/Scripture/ScriptureList.tests.js b/apolloschurchapp/src/ui/Scripture/ScriptureList.tests.js
new file mode 100644
index 0000000..d95c212
--- /dev/null
+++ b/apolloschurchapp/src/ui/Scripture/ScriptureList.tests.js
@@ -0,0 +1,19 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import ScriptureList from './ScriptureList';
+
+const scriptureReferences = ['1 Corinthians 15:57', 'Exodus 17:8-15'];
+
+describe('the ScriptureList component', () => {
+  it('renders a scripture List', () => {
+    const tree = renderer.create(
+      <Providers>
+        <ScriptureList onPress={jest.fn()} references={scriptureReferences} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/Scripture/index.js b/apolloschurchapp/src/ui/Scripture/index.js
new file mode 100644
index 0000000..6458f99
--- /dev/null
+++ b/apolloschurchapp/src/ui/Scripture/index.js
@@ -0,0 +1,2 @@
+export { default } from './ScriptureItem';
+export ScriptureList from './ScriptureList';
diff --git a/apolloschurchapp/src/ui/Scripture/typography/ScriptureText/ScriptureText.stories.js b/apolloschurchapp/src/ui/Scripture/typography/ScriptureText/ScriptureText.stories.js
new file mode 100644
index 0000000..33ea0d2
--- /dev/null
+++ b/apolloschurchapp/src/ui/Scripture/typography/ScriptureText/ScriptureText.stories.js
@@ -0,0 +1,44 @@
+import React from 'react';
+import { View } from 'react-native';
+import { storiesOf } from '@storybook/react-native';
+
+import ScriptureText from '.';
+
+storiesOf('Scripture/typography/ScriptureText', module)
+  .add('Regular', () => (
+    <ScriptureText>
+      {`"God's commands are designed to guide you to life's very best. You will not obey Him, if you do not believe Him and trust Him. You cannot believe Him if you do not love Him. You cannot love Him unless you know Him." ― Henry Blackaby`}
+    </ScriptureText>
+  ))
+  .add('Bold', () => (
+    <ScriptureText bold>
+      {`"God's commands are designed to guide you to life's very best. You will not obey Him, if you do not believe Him and trust Him. You cannot believe Him if you do not love Him. You cannot love Him unless you know Him." ― Henry Blackaby`}
+    </ScriptureText>
+  ))
+  .add('Italic', () => (
+    <ScriptureText italic>
+      {`"God's commands are designed to guide you to life's very best. You will not obey Him, if you do not believe Him and trust Him. You cannot believe Him if you do not love Him. You cannot love Him unless you know Him." ― Henry Blackaby`}
+    </ScriptureText>
+  ))
+  .add('Bold Italic', () => (
+    <ScriptureText bold italic>
+      {`"God's commands are designed to guide you to life's very best. You will not obey Him, if you do not believe Him and trust Him. You cannot believe Him if you do not love Him. You cannot love Him unless you know Him." ― Henry Blackaby`}
+    </ScriptureText>
+  ))
+  .add('isLoading', () => (
+    <ScriptureText isLoading>
+      {`"God's commands are designed to guide you to life's very best. You will not obey Him, if you do not believe Him and trust Him. You cannot believe Him if you do not love Him. You cannot love Him unless you know Him." ― Henry Blackaby`}
+    </ScriptureText>
+  ))
+  .add('Border Box – platform testing', () => {
+    const border = { borderWidth: 1, borderStyle: 'solid' };
+
+    return (
+      <View>
+        <ScriptureText style={border}>Body Text</ScriptureText>
+        <ScriptureText style={border}>
+          {`"God's commands are designed to guide you to life's very best. You will not obey Him, if you do not believe Him and trust Him. You cannot believe Him if you do not love Him. You cannot love Him unless you know Him." ― Henry Blackaby`}
+        </ScriptureText>
+      </View>
+    );
+  });
diff --git a/apolloschurchapp/src/ui/Scripture/typography/ScriptureText/ScriptureText.tests.js b/apolloschurchapp/src/ui/Scripture/typography/ScriptureText/ScriptureText.tests.js
new file mode 100644
index 0000000..f1c7012
--- /dev/null
+++ b/apolloschurchapp/src/ui/Scripture/typography/ScriptureText/ScriptureText.tests.js
@@ -0,0 +1,72 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import ScriptureText from '.';
+
+describe('the ScriptureText component', () => {
+  it('should render correctly', () => {
+    const tree = renderer.create(
+      <Providers>
+        <ScriptureText>Default ScriptureText text</ScriptureText>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render as bold', () => {
+    const tree = renderer.create(
+      <Providers>
+        <ScriptureText bold>Bold ScriptureText text</ScriptureText>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render as italic', () => {
+    const tree = renderer.create(
+      <Providers>
+        <ScriptureText italic>Italic ScriptureText text</ScriptureText>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render as bold italic', () => {
+    const tree = renderer.create(
+      <Providers>
+        <ScriptureText bold italic>
+          Bold italic ScriptureText text
+        </ScriptureText>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should accept and render passed in styles', () => {
+    const salmon = { color: 'salmon' };
+    const tree = renderer.create(
+      <Providers>
+        <ScriptureText style={salmon}>Salmon text</ScriptureText>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a loading state', () => {
+    const tree = renderer.create(
+      <Providers>
+        <ScriptureText isLoading>Default ScriptureText text</ScriptureText>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should accept additional props', () => {
+    const tree = renderer.create(
+      <Providers>
+        <ScriptureText accessible={false}>
+          {
+            '"True faith means holding nothing back. It means putting every hope in God\'s fidelity to His Promises." ― Francis Chan'
+          }
+        </ScriptureText>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/Scripture/typography/ScriptureText/index.js b/apolloschurchapp/src/ui/Scripture/typography/ScriptureText/index.js
new file mode 100644
index 0000000..c3fddbc
--- /dev/null
+++ b/apolloschurchapp/src/ui/Scripture/typography/ScriptureText/index.js
@@ -0,0 +1,49 @@
+import { Text } from 'react-native';
+import PropTypes from 'prop-types';
+import { compose, pure, setDisplayName } from 'recompose';
+
+import styled from 'apolloschurchapp/src/ui/styled';
+import {
+  withPlaceholder,
+  Typography,
+} from 'apolloschurchapp/src/ui/Placeholder';
+
+const styles = styled(({ theme, bold, italic }) => {
+  let fontStack = theme.typography.serif.regular.default;
+
+  if (bold && italic) {
+    fontStack = theme.typography.serif.bold.italic;
+  } else if (bold) {
+    fontStack = theme.typography.serif.bold.default;
+  } else if (italic) {
+    fontStack = theme.typography.serif.regular.italic;
+  }
+
+  return {
+    fontSize: theme.helpers.rem(1),
+    lineHeight: theme.helpers.verticalRhythm(1, 1.625),
+    fontFamily: fontStack,
+    color: theme.colors.text.primary,
+  };
+}, 'ScriptureText');
+
+const ScriptureText = compose(
+  setDisplayName('ScriptureText'),
+  styles,
+  withPlaceholder(Typography),
+  pure
+)(Text);
+
+ScriptureText.propTypes = {
+  bold: PropTypes.bool,
+  italic: PropTypes.bool,
+  isLoading: PropTypes.bool, // display loading placeholder
+  ...Text.propTypes,
+};
+
+ScriptureText.defaultProps = {
+  bold: false,
+  italic: false,
+};
+
+export default ScriptureText;
diff --git a/apolloschurchapp/src/ui/Scripture/typography/index.js b/apolloschurchapp/src/ui/Scripture/typography/index.js
new file mode 100644
index 0000000..6c79752
--- /dev/null
+++ b/apolloschurchapp/src/ui/Scripture/typography/index.js
@@ -0,0 +1,27 @@
+import { Text } from 'react-native';
+
+import styled from 'apolloschurchapp/src/ui/styled';
+
+import ScriptureText from './ScriptureText';
+
+const VerseNumber = styled(({ theme }) => ({
+  fontSize: theme.helpers.rem(0.6),
+  color: theme.colors.text.secondary,
+}))(ScriptureText);
+
+const RedLetters = styled(({ theme }) => ({
+  color: theme.colors.wordOfChrist,
+}))(Text);
+
+const PoeticPause = styled({
+  textAlign: 'right',
+})(ScriptureText);
+
+const LegalText = styled(({ theme }) => ({
+  fontSize: theme.helpers.rem(0.6),
+  lineHeight: theme.helpers.verticalRhythm(0.45),
+  fontFamily: theme.typography.sans.regular.default,
+  color: theme.colors.text.secondary,
+}))(ScriptureText);
+
+export { ScriptureText, VerseNumber, RedLetters, PoeticPause, LegalText };
diff --git a/apolloschurchapp/src/ui/SearchInputHeader/index.js b/apolloschurchapp/src/ui/SearchInputHeader/index.js
deleted file mode 100644
index b2f33d9..0000000
--- a/apolloschurchapp/src/ui/SearchInputHeader/index.js
+++ /dev/null
@@ -1,64 +0,0 @@
-import React from 'react';
-import { Platform, StyleSheet, View } from 'react-native';
-
-import { styled, PaddedView, SearchInput } from '@apollosproject/ui-kit';
-
-const HeaderBorder = styled(
-  ({ theme }) => ({
-    paddingBottom: theme.sizing.baseUnit / 2,
-    /* It's unclear why this is necessary but without it the layout breaks on both platforms. Limited
-     * research suggest that without a background color the shadows don't know what to blend with so
-     * the view collapses. */
-    backgroundColor: theme.colors.background.paper,
-    // Renders the same shadows that React Navigation does.
-    ...Platform.select({
-      ios: {
-        shadowColor: 'rgba(0, 0, 0, 0.3)',
-        shadowOpacity: 0.85,
-        shadowRadius: 0,
-        shadowOffset: {
-          width: 0,
-          height: StyleSheet.hairlineWidth,
-        },
-      },
-      android: {
-        elevation: 4,
-      },
-    }),
-  }),
-  'SearchInputHeader.HeaderBorder'
-)(PaddedView);
-
-// This element is used to clip the Android shadow in every directection except the bottom.
-const AndroidClipElevationFix = styled(
-  {
-    ...Platform.select({
-      android: {
-        paddingBottom: 4,
-        overflow: 'hidden',
-      },
-    }),
-  },
-  'SearchInputHeader.AndroidClipElevationFix'
-)(View);
-
-const ReactNavigationStyleReset = StyleSheet.create({
-  header: {
-    borderBottomWidth: 0,
-    elevation: 0,
-  },
-});
-
-const SearchInputHeader = ({ style, ...props }) => (
-  <AndroidClipElevationFix style={style}>
-    <HeaderBorder vertical={false}>
-      <SearchInput {...props} />
-    </HeaderBorder>
-  </AndroidClipElevationFix>
-);
-
-SearchInputHeader.propTypes = {
-  ...SearchInput.propTypes,
-};
-
-export { SearchInputHeader as default, ReactNavigationStyleReset };
diff --git a/apolloschurchapp/src/ui/ShareContentButton/ShareContentButton.tests.js b/apolloschurchapp/src/ui/Share/Share.tests.js
similarity index 61%
rename from apolloschurchapp/src/ui/ShareContentButton/ShareContentButton.tests.js
rename to apolloschurchapp/src/ui/Share/Share.tests.js
index 106f6b3..2411ac0 100644
--- a/apolloschurchapp/src/ui/ShareContentButton/ShareContentButton.tests.js
+++ b/apolloschurchapp/src/ui/Share/Share.tests.js
@@ -1,20 +1,21 @@
 import React from 'react';
 import renderer from 'react-test-renderer';
 
-import { Providers } from '@apollosproject/ui-kit';
+import { ThemeProvider } from 'apolloschurchapp/src/ui/theme';
 
-import ShareContentButton from '.';
+import Share from '.';
 
 describe('the Share component', () => {
   it('should render', () => {
     const shareObject = {
       title: 'Shared Object Title',
       url: 'https://github.com/ApollosProject/apollos-prototype',
+      message: 'Share this with all your friends and family',
     };
     const tree = renderer.create(
-      <Providers>
-        <ShareContentButton content={shareObject} />
-      </Providers>
+      <ThemeProvider>
+        <Share content={shareObject} />
+      </ThemeProvider>
     );
     expect(tree).toMatchSnapshot();
   });
diff --git a/apolloschurchapp/src/ui/Share/index.js b/apolloschurchapp/src/ui/Share/index.js
new file mode 100644
index 0000000..2a5fddb
--- /dev/null
+++ b/apolloschurchapp/src/ui/Share/index.js
@@ -0,0 +1,28 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import { compose, pure } from 'recompose';
+import Icon from 'apolloschurchapp/src/ui/Icon';
+import Touchable from 'apolloschurchapp/src/ui/Touchable';
+import share from 'apolloschurchapp/src/utils/content/share';
+import { withTheme } from 'apolloschurchapp/src/ui/theme';
+
+const enhance = compose(
+  pure,
+  withTheme()
+);
+
+const Share = enhance(({ content, theme }) => (
+  <Touchable onPress={() => share(content)}>
+    <Icon name={'share'} fill={theme.colors.secondary} />
+  </Touchable>
+));
+
+Share.propTypes = {
+  content: PropTypes.shape({
+    message: PropTypes.string,
+    title: PropTypes.string,
+    url: PropTypes.string,
+  }),
+};
+
+export default Share;
diff --git a/apolloschurchapp/src/ui/ShareContentButton/index.js b/apolloschurchapp/src/ui/ShareContentButton/index.js
deleted file mode 100644
index 4286a7f..0000000
--- a/apolloschurchapp/src/ui/ShareContentButton/index.js
+++ /dev/null
@@ -1,40 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-import { compose, pure } from 'recompose';
-import share from 'apolloschurchapp/src/utils/content/share';
-import { Touchable, Icon, withTheme } from '@apollosproject/ui-kit';
-import { AnalyticsConsumer } from '@apollosproject/ui-analytics';
-
-const enhance = compose(
-  pure,
-  withTheme()
-);
-
-const ShareContentButton = enhance(({ content, theme }) => (
-  <AnalyticsConsumer>
-    {({ track }) => {
-      const onPress = () => {
-        share(content);
-        track({
-          eventName: 'Share',
-          properties: { id: content.id, title: content.title },
-        });
-      };
-      return (
-        <Touchable onPress={onPress}>
-          <Icon name={'share'} fill={theme.colors.secondary} />
-        </Touchable>
-      );
-    }}
-  </AnalyticsConsumer>
-));
-
-ShareContentButton.propTypes = {
-  content: PropTypes.shape({
-    title: PropTypes.string,
-    url: PropTypes.string,
-    id: PropTypes.string,
-  }),
-};
-
-export default ShareContentButton;
diff --git a/apolloschurchapp/src/ui/ShareContentButtonConnected/ShareContentButtonConnected.tests.js b/apolloschurchapp/src/ui/ShareContentButtonConnected/ShareContentButtonConnected.tests.js
deleted file mode 100644
index 46a3b2c..0000000
--- a/apolloschurchapp/src/ui/ShareContentButtonConnected/ShareContentButtonConnected.tests.js
+++ /dev/null
@@ -1,50 +0,0 @@
-import React from 'react';
-import Providers from 'apolloschurchapp/src/Providers';
-import { renderWithApolloData } from 'apolloschurchapp/src/utils/testUtils';
-import getShareContent from './getShareContent';
-import ShareContentButtonConnected from '.';
-
-const shareMock = {
-  request: {
-    query: getShareContent,
-    variables: { itemId: '1' },
-  },
-  result: {
-    data: {
-      node: {
-        id: '1',
-        __typename: 'ContentSeriesContentItem',
-        sharing: {
-          url: 'https://apolloschurchapp.newspring.cc',
-          title: 'Test Title ',
-          __typename: 'SharableContentItem',
-        },
-      },
-    },
-  },
-};
-
-const mocks = [shareMock];
-
-describe('the ShareContentButtonConnected', () => {
-  it('renders a share button', async () => {
-    const tree = await renderWithApolloData(
-      <Providers mocks={mocks}>
-        <ShareContentButtonConnected itemId={'1'} />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('renders a share button with custom url, and title', async () => {
-    const tree = await renderWithApolloData(
-      <Providers mocks={mocks}>
-        <ShareContentButtonConnected
-          itemId={'1'}
-          url={'https://apollosrock.com'}
-          title="Some great title"
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/ui/ShareContentButtonConnected/index.js b/apolloschurchapp/src/ui/ShareContentButtonConnected/index.js
deleted file mode 100644
index 95483b5..0000000
--- a/apolloschurchapp/src/ui/ShareContentButtonConnected/index.js
+++ /dev/null
@@ -1,34 +0,0 @@
-import React from 'react';
-
-import PropTypes from 'prop-types';
-import { Query } from 'react-apollo';
-import { get } from 'lodash';
-
-import ShareContentButton from 'apolloschurchapp/src/ui/ShareContentButton';
-
-import GET_SHARE_CONTENT from './getShareContent';
-
-const ShareContentButtonConnected = ({ itemId, title, message, url }) => (
-  <Query query={GET_SHARE_CONTENT} variables={{ itemId }}>
-    {({ data }) => {
-      const sharing = get(data, 'node.sharing', {});
-      const content = {
-        id: itemId,
-        title: title || sharing.title,
-        message: message || sharing.message,
-        url: url || sharing.url,
-      };
-      return <ShareContentButton content={content} />;
-    }}
-  </Query>
-);
-
-ShareContentButtonConnected.propTypes = {
-  itemId: PropTypes.string.isRequired,
-  // These props are available to override the default sharing data for a node.
-  title: PropTypes.string,
-  message: PropTypes.string,
-  url: PropTypes.string,
-};
-
-export default ShareContentButtonConnected;
diff --git a/apolloschurchapp/src/ui/SideBySideView/Left.js b/apolloschurchapp/src/ui/SideBySideView/Left.js
new file mode 100644
index 0000000..81b5fb6
--- /dev/null
+++ b/apolloschurchapp/src/ui/SideBySideView/Left.js
@@ -0,0 +1,16 @@
+import { View } from 'react-native';
+import { compose } from 'recompose';
+
+import { enhancer as mediaQuery } from 'apolloschurchapp/src/ui/MediaQuery';
+import styled from 'apolloschurchapp/src/ui/styled';
+
+export default compose(
+  mediaQuery(
+    ({ md }) => ({ minWidth: md }),
+    styled({
+      width: `${100 - 41.6666666}%`,
+      height: '100%',
+      overflow: 'hidden',
+    })
+  )
+)(View);
diff --git a/apolloschurchapp/src/ui/SideBySideView/Right.js b/apolloschurchapp/src/ui/SideBySideView/Right.js
new file mode 100644
index 0000000..9d80e02
--- /dev/null
+++ b/apolloschurchapp/src/ui/SideBySideView/Right.js
@@ -0,0 +1,19 @@
+import { View } from 'react-native';
+import { compose } from 'recompose';
+
+import { enhancer as mediaQuery } from 'apolloschurchapp/src/ui/MediaQuery';
+import styled from 'apolloschurchapp/src/ui/styled';
+
+export default compose(
+  mediaQuery(
+    ({ md }) => ({ minWidth: md }),
+    styled(
+      {
+        width: '41.6666666%',
+        height: '100%',
+        overflow: 'hidden',
+      },
+      'SideBySideView.Right'
+    )
+  )
+)(View);
diff --git a/apolloschurchapp/src/ui/SideBySideView/SideBySideView.tests.js b/apolloschurchapp/src/ui/SideBySideView/SideBySideView.tests.js
new file mode 100644
index 0000000..d701831
--- /dev/null
+++ b/apolloschurchapp/src/ui/SideBySideView/SideBySideView.tests.js
@@ -0,0 +1,53 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+import { View } from 'react-native';
+
+import SideBySide, { ResponsiveSideBySideView, Left, Right } from '.';
+
+describe('The SideBySide component', () => {
+  it('should render correctly', () => {
+    const tree = renderer.create(
+      <SideBySide>
+        <View />
+        <View />
+      </SideBySide>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
+
+describe('The ResponsiveSideBySideView component', () => {
+  it('should render correctly', () => {
+    const tree = renderer.create(
+      <ResponsiveSideBySideView>
+        <View />
+        <View />
+      </ResponsiveSideBySideView>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
+
+describe('The Right component', () => {
+  it('should render correctly', () => {
+    const tree = renderer.create(
+      <Right>
+        <View />
+        <View />
+      </Right>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
+
+describe('The Left component', () => {
+  it('should render correctly', () => {
+    const tree = renderer.create(
+      <Left>
+        <View />
+        <View />
+      </Left>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/SideBySideView/index.js b/apolloschurchapp/src/ui/SideBySideView/index.js
new file mode 100644
index 0000000..25c289d
--- /dev/null
+++ b/apolloschurchapp/src/ui/SideBySideView/index.js
@@ -0,0 +1,21 @@
+import { View } from 'react-native';
+import { compose, renderComponent } from 'recompose';
+
+import styled from 'apolloschurchapp/src/ui/styled';
+import { enhancer as mediaQuery } from 'apolloschurchapp/src/ui/MediaQuery';
+
+export { default as Right } from './Right';
+export { default as Left } from './Left';
+
+const SideBySideView = styled(({ reversed = false, stretched = true }) => ({
+  flexDirection: reversed ? 'row-reverse' : 'row',
+  flexWrap: 'nowrap',
+  justifyContent: 'space-between',
+  alignItems: stretched ? 'stretch' : 'center',
+}))(View);
+
+const ResponsiveSideBySideView = compose(
+  mediaQuery(({ md }) => ({ minWidth: md }), renderComponent(SideBySideView))
+)(View);
+
+export { SideBySideView as default, ResponsiveSideBySideView };
diff --git a/apolloschurchapp/src/ui/Spacer.js b/apolloschurchapp/src/ui/Spacer.js
new file mode 100644
index 0000000..f3f6fef
--- /dev/null
+++ b/apolloschurchapp/src/ui/Spacer.js
@@ -0,0 +1,7 @@
+import { View } from 'react-native';
+import styled from 'apolloschurchapp/src/ui/styled';
+
+export default styled(({ theme, byWidth }) => ({
+  width: byWidth ? theme.sizing.baseUnit / 2 : null,
+  height: byWidth ? null : theme.sizing.baseUnit / 2,
+}))(View);
diff --git a/apolloschurchapp/src/ui/TabView/TabBar/Indicator.js b/apolloschurchapp/src/ui/TabView/TabBar/Indicator.js
new file mode 100644
index 0000000..64300fe
--- /dev/null
+++ b/apolloschurchapp/src/ui/TabView/TabBar/Indicator.js
@@ -0,0 +1,45 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import { Animated } from 'react-native';
+
+const wrapperStyles = {
+  position: 'absolute',
+  left: 0,
+  bottom: 0,
+  height: 3,
+};
+
+const Indicator = ({
+  width,
+  position,
+  navigationState,
+  indicatorColor: backgroundColor,
+}) => {
+  const translateX = Animated.multiply(
+    position.interpolate({
+      inputRange: [0, navigationState.routes.length - 1],
+      outputRange: [0, navigationState.routes.length - 1],
+      extrapolate: 'clamp',
+    }),
+    width
+  );
+  return (
+    <Animated.View
+      style={{
+        width,
+        backgroundColor,
+        transform: [{ translateX }],
+        ...wrapperStyles,
+      }}
+    />
+  );
+};
+
+Indicator.propTypes = {
+  width: PropTypes.number,
+  position: PropTypes.shape({ interpolate: PropTypes.func }),
+  navigationState: PropTypes.shape({ routes: PropTypes.array }),
+  indicatorColor: PropTypes.string,
+};
+
+export default Indicator;
diff --git a/apolloschurchapp/src/ui/TabView/TabBar/Label.js b/apolloschurchapp/src/ui/TabView/TabBar/Label.js
new file mode 100644
index 0000000..f08eb4a
--- /dev/null
+++ b/apolloschurchapp/src/ui/TabView/TabBar/Label.js
@@ -0,0 +1,13 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+
+import { H4 } from 'apolloschurchapp/src/ui/typography';
+
+const Label = ({ route }) => {
+  const labelText = route.title;
+  return <H4 padded>{labelText}</H4>;
+};
+
+Label.propTypes = { route: PropTypes.shape({ title: PropTypes.string }) };
+
+export default Label;
diff --git a/apolloschurchapp/src/ui/TabView/TabBar/index.js b/apolloschurchapp/src/ui/TabView/TabBar/index.js
new file mode 100644
index 0000000..63387b6
--- /dev/null
+++ b/apolloschurchapp/src/ui/TabView/TabBar/index.js
@@ -0,0 +1,28 @@
+import { TabBar } from 'react-native-tab-view';
+import { compose, withProps } from 'recompose';
+
+import styled from 'apolloschurchapp/src/ui/styled';
+import { withTheme } from 'apolloschurchapp/src/ui/theme';
+
+import Label from './Label';
+import Indicator from './Indicator';
+
+const withStyles = compose(
+  styled(
+    ({ theme }) => ({
+      backgroundColor: theme.colors.background.paper,
+    }),
+    'TabBar'
+  ),
+  withTheme(({ theme, indicatorColor }) => ({
+    indicatorColor: indicatorColor || theme.colors.tertiary,
+  }))
+);
+
+export default compose(
+  withStyles,
+  withProps({
+    renderLabel: Label,
+    renderIndicator: Indicator,
+  })
+)(TabBar);
diff --git a/apolloschurchapp/src/ui/TabView/TabView.stories.js b/apolloschurchapp/src/ui/TabView/TabView.stories.js
new file mode 100644
index 0000000..a2e8f4b
--- /dev/null
+++ b/apolloschurchapp/src/ui/TabView/TabView.stories.js
@@ -0,0 +1,28 @@
+import React from 'react';
+import { View, StyleSheet } from 'react-native';
+import { storiesOf } from '@storybook/react-native';
+
+import TabView, { SceneMap } from '.';
+
+const styles = StyleSheet.create({
+  firstRoute: { flex: 1, backgroundColor: '#ff4081' }, // eslint-disable-line
+  secondRoute: { flex: 1, backgroundColor: '#673ab7' }, // eslint-disable-line
+});
+
+const FirstRoute = () => <View style={styles.firstRoute} />;
+const SecondRoute = () => <View style={styles.SecondRoute} />;
+
+storiesOf('TabView', module).add('default', () => (
+  <View style={StyleSheet.absoluteFill}>
+    <TabView
+      routes={[
+        { key: 'first', title: 'First' },
+        { key: 'second', title: 'Second' },
+      ]}
+      renderScene={SceneMap({
+        first: FirstRoute,
+        second: SecondRoute,
+      })}
+    />
+  </View>
+));
diff --git a/apolloschurchapp/src/ui/TabView/TabView.tests.js b/apolloschurchapp/src/ui/TabView/TabView.tests.js
new file mode 100644
index 0000000..8a2158b
--- /dev/null
+++ b/apolloschurchapp/src/ui/TabView/TabView.tests.js
@@ -0,0 +1,36 @@
+import React from 'react';
+import { View } from 'react-native';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import TabView, { SceneMap } from '.';
+
+const FirstRoute = () => (
+  // eslint-disable-next-line
+  <View style={[{ flex: 1, backgroundColor: '#ff4081' }]} />
+);
+const SecondRoute = () => (
+  // eslint-disable-next-line
+  <View style={[{ flex: 1, backgroundColor: '#673ab7' }]} />
+);
+
+describe('TabView Component', () => {
+  it('renders', () => {
+    const tree = renderer.create(
+      <Providers>
+        <TabView
+          routes={[
+            { key: 'first', title: 'First' },
+            { key: 'second', title: 'Second' },
+          ]}
+          renderScene={SceneMap({
+            first: FirstRoute,
+            second: SecondRoute,
+          })}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/TabView/index.js b/apolloschurchapp/src/ui/TabView/index.js
new file mode 100644
index 0000000..21777cd
--- /dev/null
+++ b/apolloschurchapp/src/ui/TabView/index.js
@@ -0,0 +1,69 @@
+import PropTypes from 'prop-types';
+import { Dimensions, Platform } from 'react-native';
+import { TabView as RNTabView, SceneMap } from 'react-native-tab-view';
+import { branch, compose, withProps, withState } from 'recompose';
+import isFunction from 'lodash/isFunction';
+
+import styled from 'apolloschurchapp/src/ui/styled';
+
+import TabBar from './TabBar';
+
+const initialLayout = {
+  height: 0,
+  width: Dimensions.get('window').width,
+};
+
+const withStyles = styled({ flex: 1 }, 'TabView');
+
+const TabView = compose(
+  withStyles,
+  branch(
+    ({ index }) => typeof index !== 'number',
+    withState('index', 'onIndexChange', ({ initialIndex }) => initialIndex)
+  ),
+  withProps((props) => {
+    function onIndexChange(index) {
+      if (isFunction(props.onIndexChange)) props.onIndexChange(index);
+      if (isFunction(props.onChange)) props.onChange(index);
+    }
+
+    return {
+      navigationState: {
+        index: props.index,
+        routes: props.routes.map((routeProps) => ({
+          ...routeProps,
+          jumpTo(key) {
+            const index = props.routes.findIndex((r) => r.key === key);
+            return onIndexChange(index);
+          },
+        })),
+      },
+      initialLayout,
+      renderTabBar: props.renderTabBar ? props.renderTabBar : TabBar,
+      onIndexChange,
+    };
+  })
+)(RNTabView);
+
+TabView.propTypes = {
+  initialIndex: PropTypes.number,
+  routes: PropTypes.arrayOf(
+    PropTypes.shape({
+      key: PropTypes.string.isRequired,
+      title: PropTypes.string.isRequired,
+    })
+  ).isRequired,
+  renderScene: PropTypes.func.isRequired,
+  renderTabBar: PropTypes.func,
+  swipeEnabled: PropTypes.bool,
+  autoHeightEnabled: PropTypes.bool,
+};
+
+TabView.defaultProps = {
+  initialIndex: 0,
+  swipeEnabled: Platform.OS !== 'web',
+  autoHeightEnabled: false,
+};
+
+export { SceneMap, TabBar };
+export default TabView;
diff --git a/apolloschurchapp/src/ui/TableView/Cell.js b/apolloschurchapp/src/ui/TableView/Cell.js
new file mode 100644
index 0000000..2d66bb2
--- /dev/null
+++ b/apolloschurchapp/src/ui/TableView/Cell.js
@@ -0,0 +1,38 @@
+import React, { Children, cloneElement } from 'react';
+import PropTypes from 'prop-types';
+import { View } from 'react-native';
+
+import styled from 'apolloschurchapp/src/ui/styled';
+
+const asFirstChild = (child) =>
+  cloneElement(child, {
+    style: { paddingLeft: 0 },
+  });
+
+const Container = styled(
+  ({ theme }) => ({
+    padding: theme.sizing.baseUnit / 2,
+    paddingLeft: theme.sizing.baseUnit / 1.5,
+    backgroundColor: theme.colors.background.paper,
+    flexDirection: 'row',
+    justifyContent: 'flex-start',
+    alignItems: 'center',
+    height: theme.sizing.baseUnit * 2.5,
+  }),
+  'TableView.Cell.Container'
+)(View);
+
+const Cell = ({ children, ...otherProps }) => (
+  <Container {...otherProps}>
+    {Children.map(children, (child, i) => {
+      if (i === 0) return asFirstChild(child);
+      return child;
+    })}
+  </Container>
+);
+
+Cell.propTypes = {
+  children: PropTypes.node,
+};
+
+export default Cell;
diff --git a/apolloschurchapp/src/ui/TableView/CellIcon.js b/apolloschurchapp/src/ui/TableView/CellIcon.js
new file mode 100644
index 0000000..3b68306
--- /dev/null
+++ b/apolloschurchapp/src/ui/TableView/CellIcon.js
@@ -0,0 +1,9 @@
+import { defaultProps } from 'recompose';
+
+import Icon from 'apolloschurchapp/src/ui/Icon';
+
+const CellIcon = defaultProps({
+  size: 20,
+})(Icon);
+
+export default CellIcon;
diff --git a/apolloschurchapp/src/ui/TableView/CellText.js b/apolloschurchapp/src/ui/TableView/CellText.js
new file mode 100644
index 0000000..6ab6214
--- /dev/null
+++ b/apolloschurchapp/src/ui/TableView/CellText.js
@@ -0,0 +1,11 @@
+import { H5 } from 'apolloschurchapp/src/ui/typography';
+import styled from 'apolloschurchapp/src/ui/styled';
+
+const CellText = styled(({ theme }) => ({
+  flexGrow: 1,
+  flexShrink: 1,
+  paddingLeft: theme.sizing.baseUnit / 2,
+  paddingRight: theme.sizing.baseUnit / 2,
+}))(H5);
+
+export default CellText;
diff --git a/apolloschurchapp/src/ui/TableView/Divider.js b/apolloschurchapp/src/ui/TableView/Divider.js
new file mode 100644
index 0000000..034fd93
--- /dev/null
+++ b/apolloschurchapp/src/ui/TableView/Divider.js
@@ -0,0 +1,12 @@
+import { View, StyleSheet } from 'react-native';
+
+import styled from 'apolloschurchapp/src/ui/styled';
+
+const Divider = styled(({ theme }) => ({
+  height: StyleSheet.hairlineWidth,
+  marginLeft: theme.sizing.baseUnit / 1.5,
+  backgroundColor: theme.colors.shadows.default,
+  width: '100%',
+}))(View);
+
+export default Divider;
diff --git a/apolloschurchapp/src/ui/TableView/FormFields.js b/apolloschurchapp/src/ui/TableView/FormFields.js
new file mode 100644
index 0000000..8550d26
--- /dev/null
+++ b/apolloschurchapp/src/ui/TableView/FormFields.js
@@ -0,0 +1,9 @@
+import PaddedView from 'apolloschurchapp/src/ui/PaddedView';
+import styled from 'apolloschurchapp/src/ui/styled';
+
+const FormFields = styled(({ theme }) => ({
+  paddingTop: theme.sizing.baseUnit * 0.6,
+  paddingBottom: theme.sizing.baseUnit / 2,
+}))(PaddedView);
+
+export default FormFields;
diff --git a/apolloschurchapp/src/ui/TableView/TableView.stories.js b/apolloschurchapp/src/ui/TableView/TableView.stories.js
new file mode 100644
index 0000000..d55dc89
--- /dev/null
+++ b/apolloschurchapp/src/ui/TableView/TableView.stories.js
@@ -0,0 +1,55 @@
+import React from 'react';
+import { storiesOf } from '@storybook/react-native';
+
+import FlexedView from 'apolloschurchapp/src/ui/FlexedView';
+import Icon from 'apolloschurchapp/src/ui/Icon';
+import { Switch } from 'apolloschurchapp/src/ui/inputs';
+
+import TableView, { Cell, CellText, Divider } from '.';
+
+storiesOf('TableView', module).add('Examples', () => (
+  <FlexedView>
+    <TableView>
+      <Cell>
+        <Icon name="arrow-back" />
+        <CellText>Line Item</CellText>
+      </Cell>
+      <Divider />
+      <Cell>
+        <Icon name="camera" />
+        <CellText>A toggle!</CellText>
+        <Switch />
+      </Cell>
+      <Divider />
+      <Cell>
+        <CellText>Just a row</CellText>
+      </Cell>
+      <Divider />
+      <Cell>
+        <CellText>This be some button!</CellText>
+        <Icon name="arrow-next" />
+      </Cell>
+    </TableView>
+    <TableView>
+      <Cell>
+        <Icon name="arrow-back" />
+        <CellText>Line Item</CellText>
+      </Cell>
+      <Divider />
+      <Cell>
+        <Icon name="camera" />
+        <CellText>A toggle!</CellText>
+        <Switch />
+      </Cell>
+      <Divider />
+      <Cell>
+        <CellText>Just a row</CellText>
+      </Cell>
+      <Divider />
+      <Cell>
+        <CellText>This be some button!</CellText>
+        <Icon name="arrow-next" />
+      </Cell>
+    </TableView>
+  </FlexedView>
+));
diff --git a/apolloschurchapp/src/ui/TableView/TableView.tests.js b/apolloschurchapp/src/ui/TableView/TableView.tests.js
new file mode 100644
index 0000000..c6f2db9
--- /dev/null
+++ b/apolloschurchapp/src/ui/TableView/TableView.tests.js
@@ -0,0 +1,42 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import FlexedView from 'apolloschurchapp/src/ui/FlexedView';
+import Providers from 'apolloschurchapp/src/Providers';
+import Icon from 'apolloschurchapp/src/ui/Icon';
+import { Switch } from 'apolloschurchapp/src/ui/inputs';
+
+import TableView, { Cell, CellText, Divider } from '.';
+
+describe('the TableView Component', () => {
+  it('should render', () => {
+    const tree = renderer.create(
+      <Providers>
+        <FlexedView>
+          <TableView>
+            <Cell>
+              <Icon name="arrow-back" />
+              <CellText>Line Item</CellText>
+            </Cell>
+            <Divider />
+            <Cell>
+              <Icon name="camera" />
+              <CellText>A toggle!</CellText>
+              <Switch />
+            </Cell>
+            <Divider />
+            <Cell>
+              <CellText>Just a row</CellText>
+            </Cell>
+            <Divider />
+            <Cell>
+              <CellText>This be some button!</CellText>
+              <Icon name="arrow-next" />
+            </Cell>
+          </TableView>
+        </FlexedView>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/TableView/index.js b/apolloschurchapp/src/ui/TableView/index.js
new file mode 100644
index 0000000..c9c1f01
--- /dev/null
+++ b/apolloschurchapp/src/ui/TableView/index.js
@@ -0,0 +1,38 @@
+import { StyleSheet, View } from 'react-native';
+import PropTypes from 'prop-types';
+import { compose, renderComponent } from 'recompose';
+
+import styled from 'apolloschurchapp/src/ui/styled';
+import { enhancer as mediaQuery } from 'apolloschurchapp/src/ui/MediaQuery';
+import Card from 'apolloschurchapp/src/ui/Card';
+
+export { default as Cell } from './Cell';
+export { default as CellText } from './CellText';
+export { default as CellIcon } from './CellIcon';
+export { default as Divider } from './Divider';
+export { default as FormFields } from './FormFields';
+
+const TableView = compose(
+  styled(
+    ({ theme }) => ({
+      marginBottom: theme.sizing.baseUnit,
+      backgroundColor: theme.colors.background.paper,
+      borderColor: theme.colors.shadows.default,
+      borderTopWidth: StyleSheet.hairlineWidth,
+      borderBottomWidth: StyleSheet.hairlineWidth,
+      borderLeftWidth: 0,
+      borderRightWidth: 0,
+    }),
+    'TableView'
+  ),
+  mediaQuery(
+    ({ md, width }, { responsive = true }) => responsive && width > md,
+    renderComponent(Card)
+  )
+)(View);
+
+TableView.proptypes = {
+  responsive: PropTypes.bool,
+};
+
+export default TableView;
diff --git a/apolloschurchapp/src/ui/ThumbnailCard/Thumbnail.js b/apolloschurchapp/src/ui/ThumbnailCard/Thumbnail.js
new file mode 100644
index 0000000..b0a78c0
--- /dev/null
+++ b/apolloschurchapp/src/ui/ThumbnailCard/Thumbnail.js
@@ -0,0 +1,24 @@
+import { StyleSheet } from 'react-native';
+import { compose } from 'recompose';
+
+import styled from 'apolloschurchapp/src/ui/styled';
+import ProgressiveImage from 'apolloschurchapp/src/ui/ProgressiveImage';
+import { getIsLoading } from 'apolloschurchapp/src/ui/isLoading';
+
+const Image = compose(
+  getIsLoading,
+  styled(
+    {
+      ...StyleSheet.absoluteFillObject,
+      height: '100%',
+      paddingTop: 0,
+      alignItems: 'center',
+      justifyContent: 'center',
+    },
+    'Card.Image'
+  )
+)(ProgressiveImage);
+
+Image.propTypes = ProgressiveImage.propTypes;
+
+export default Image;
diff --git a/apolloschurchapp/src/ui/ThumbnailCard/ThumbnailCard.stories.js b/apolloschurchapp/src/ui/ThumbnailCard/ThumbnailCard.stories.js
new file mode 100644
index 0000000..a951cca
--- /dev/null
+++ b/apolloschurchapp/src/ui/ThumbnailCard/ThumbnailCard.stories.js
@@ -0,0 +1,60 @@
+import React from 'react';
+import { View } from 'react-native';
+import { storiesOf } from '@storybook/react-native';
+
+import ThumbnailCard from '.';
+
+const containerStyles = {
+  flex: 1,
+  justifyContent: 'center',
+  backgroundColor: '#f7f7f7',
+};
+
+storiesOf('ThumbnailCard', module)
+  .add('Default', () => (
+    <View style={containerStyles}>
+      <ThumbnailCard title={'Why Jesus is Timeless'} />
+    </View>
+  ))
+  .add('With Description', () => (
+    <View style={containerStyles}>
+      <ThumbnailCard
+        title={'Why Jesus is Timeless'}
+        description={
+          'This is the story of a God, who made a flood and drowned the whole world. He gave up His son for everybody, and we absolutely love Him, all the time.'
+        }
+      />
+    </View>
+  ))
+  .add('With images', () => (
+    <View style={containerStyles}>
+      <ThumbnailCard
+        title={'Why Jesus is Timeless'}
+        images={'https://picsum.photos/400/400/?random'}
+      />
+    </View>
+  ))
+  .add('With Category', () => (
+    <View style={containerStyles}>
+      <ThumbnailCard title={'Why Jesus is Timeless'} category={'Time Travel'} />
+    </View>
+  ))
+  .add('With Category and images', () => (
+    <View style={containerStyles}>
+      <ThumbnailCard
+        title={'Why Jesus is Timeless'}
+        category={'Time Travel'}
+        images={'https://picsum.photos/400/400/?random'}
+      />
+    </View>
+  ))
+  .add('Skeleton', () => (
+    <View style={containerStyles}>
+      <ThumbnailCard
+        title={'Why Jesus is Timeless'}
+        images={'https://picsum.photos/400/400/?random'}
+        category={'Time Travel'}
+        isLoading
+      />
+    </View>
+  ));
diff --git a/apolloschurchapp/src/ui/ThumbnailCard/ThumbnailCard.tests.js b/apolloschurchapp/src/ui/ThumbnailCard/ThumbnailCard.tests.js
new file mode 100644
index 0000000..bbe5e56
--- /dev/null
+++ b/apolloschurchapp/src/ui/ThumbnailCard/ThumbnailCard.tests.js
@@ -0,0 +1,77 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import ThumbnailCard from '.';
+
+describe('the ThumbnailCard component', () => {
+  it('should render', () => {
+    const tree = renderer.create(
+      <Providers>
+        <ThumbnailCard title={'Why Jesus is Timeless'} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render with a description', () => {
+    const tree = renderer.create(
+      <Providers>
+        <ThumbnailCard
+          title={'Why Jesus is Timeless'}
+          description={
+            'This is the story of a God, who made a flood and drowned the whole world. He gave up His son for everybody, and we absolutely love Him, all the time.'
+          }
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render with an images', () => {
+    const tree = renderer.create(
+      <Providers>
+        <ThumbnailCard
+          title={'Why Jesus is Timeless'}
+          images={'https://picsum.photos/100/100/?random'}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render with a category', () => {
+    const tree = renderer.create(
+      <Providers>
+        <ThumbnailCard
+          title={'Why Jesus is Timeless'}
+          category={'Time Travel'}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render with a category and images', () => {
+    const tree = renderer.create(
+      <Providers>
+        <ThumbnailCard
+          title={'Why Jesus is Timeless'}
+          images={'https://picsum.photos/100/100/?random'}
+          category={'Time Travel'}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a loading state', () => {
+    const tree = renderer.create(
+      <Providers>
+        <ThumbnailCard
+          title={'Why Jesus is Timeless'}
+          images={'https://picsum.photos/100/100/?random'}
+          category={'Time Travel'}
+          isLoading
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/ThumbnailCard/index.js b/apolloschurchapp/src/ui/ThumbnailCard/index.js
new file mode 100644
index 0000000..3888a87
--- /dev/null
+++ b/apolloschurchapp/src/ui/ThumbnailCard/index.js
@@ -0,0 +1,93 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import { TouchableWithoutFeedback } from 'react-native';
+import { compose, pure } from 'recompose';
+import { startCase, toLower } from 'lodash';
+
+import { withIsLoading } from 'apolloschurchapp/src/ui/isLoading';
+import styled from 'apolloschurchapp/src/ui/styled';
+import Card, { CardContent } from 'apolloschurchapp/src/ui/Card';
+import SideBySideView from 'apolloschurchapp/src/ui/SideBySideView';
+import FlexedView from 'apolloschurchapp/src/ui/FlexedView';
+import { H5, BodyText, Paragraph } from 'apolloschurchapp/src/ui/typography';
+import { enhancer as mediaQuery } from 'apolloschurchapp/src/ui/MediaQuery';
+import ChannelLabel from 'apolloschurchapp/src/ui/ChannelLabel';
+
+import Thumbnail from './Thumbnail';
+
+const enhance = compose(
+  withIsLoading,
+  pure
+);
+
+const HorizontalLayout = styled({
+  alignItems: 'center',
+  minHeight: 110, // kind of the best middle ground for various title lengths.
+})(SideBySideView);
+
+const LeftColumn = compose(
+  styled({ flex: 1.66 }),
+  mediaQuery(
+    ({ md }) => ({ maxWidth: md }),
+    styled(({ theme }) => ({
+      paddingVertical: theme.sizing.baseUnit * 0.75,
+    })),
+    styled(({ theme }) => ({
+      paddingVertical: theme.sizing.baseUnit * 2,
+      paddingHorizontal: theme.sizing.baseUnit * 1.5,
+    }))
+  )
+)(CardContent);
+
+const RightColumn = styled({
+  alignSelf: 'stretch',
+})(FlexedView);
+
+const ThumbnailCard = enhance(
+  ({
+    title,
+    description,
+    images,
+    thumbnailImage,
+    category,
+    isLoading,
+    onPressItem,
+    ...otherProps
+  }) => (
+    <TouchableWithoutFeedback onPress={() => onPressItem()}>
+      <Card isLoading={isLoading} inHorizontalList {...otherProps}>
+        <HorizontalLayout>
+          <LeftColumn>
+            <H5>{title}</H5>
+            {description ? (
+              <Paragraph>
+                <BodyText>{description}</BodyText>
+              </Paragraph>
+            ) : null}
+            {typeof category !== 'undefined' ? (
+              <ChannelLabel
+                label={startCase(toLower(category))}
+                isLoading={isLoading}
+              />
+            ) : null}
+          </LeftColumn>
+          {images ? (
+            <RightColumn>
+              <Thumbnail source={images} thumbnail={thumbnailImage} />
+            </RightColumn>
+          ) : null}
+        </HorizontalLayout>
+      </Card>
+    </TouchableWithoutFeedback>
+  )
+);
+
+ThumbnailCard.propTypes = {
+  title: PropTypes.string.isRequired,
+  description: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),
+  images: Thumbnail.propTypes.source,
+  category: PropTypes.string,
+  isLoading: PropTypes.bool,
+};
+
+export default ThumbnailCard;
diff --git a/apolloschurchapp/src/ui/TileImage/TileImage.stories.js b/apolloschurchapp/src/ui/TileImage/TileImage.stories.js
new file mode 100644
index 0000000..b535875
--- /dev/null
+++ b/apolloschurchapp/src/ui/TileImage/TileImage.stories.js
@@ -0,0 +1,37 @@
+import React from 'react';
+import { storiesOf } from '@storybook/react-native';
+import { View } from 'react-native';
+
+import styled from 'apolloschurchapp/src/ui/styled';
+
+import TileImage from '.';
+
+const Square = styled({ aspectRatio: 1 })(View);
+
+storiesOf('TileImage', module)
+  .add('Default', () => (
+    <Square>
+      <TileImage
+        image={'https://picsum.photos/600/400/?random'}
+        link={'https://github.com'}
+        text={'So cool!'}
+      />
+    </Square>
+  ))
+  .add('Without text', () => (
+    <Square>
+      <TileImage
+        image={'https://picsum.photos/600/400/?random'}
+        link={'https://github.com'}
+      />
+    </Square>
+  ))
+  .add('isLoading', () => (
+    <Square>
+      <TileImage
+        image={'https://picsum.photos/600/400/?random'}
+        link={'https://github.com'}
+        isLoading
+      />
+    </Square>
+  ));
diff --git a/apolloschurchapp/src/ui/TileImage/TileImage.tests.js b/apolloschurchapp/src/ui/TileImage/TileImage.tests.js
new file mode 100644
index 0000000..b4d1332
--- /dev/null
+++ b/apolloschurchapp/src/ui/TileImage/TileImage.tests.js
@@ -0,0 +1,57 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import TileImage from '.';
+
+describe('the TileImage component', () => {
+  it('should render', () => {
+    const tree = renderer.create(
+      <Providers>
+        <TileImage
+          image={'https://picsum.photos/600/400/?random'}
+          link={'https://github.com'}
+          text={'So cool!'}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render without text', () => {
+    const tree = renderer.create(
+      <Providers>
+        <TileImage
+          image={'https://picsum.photos/600/400/?random'}
+          link={'https://github.com'}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a loading state', () => {
+    const tree = renderer.create(
+      <Providers>
+        <TileImage
+          image={'https://picsum.photos/600/400/?random'}
+          link={'https://github.com'}
+          isLoading
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('passes an onPressItem prop', () => {
+    const handleOnPressItem = jest.fn;
+    const tree = renderer.create(
+      <Providers>
+        <TileImage
+          image={'https://picsum.photos/600/400/?random'}
+          link={'https://github.com'}
+          onPressItem={handleOnPressItem}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/TileImage/index.js b/apolloschurchapp/src/ui/TileImage/index.js
new file mode 100644
index 0000000..a37deb9
--- /dev/null
+++ b/apolloschurchapp/src/ui/TileImage/index.js
@@ -0,0 +1,72 @@
+import React from 'react';
+import { View } from 'react-native';
+import PropTypes from 'prop-types';
+import { pure, compose } from 'recompose';
+
+import { H4 } from 'apolloschurchapp/src/ui/typography';
+import styled from 'apolloschurchapp/src/ui/styled';
+import { withTheme } from 'apolloschurchapp/src/ui/theme';
+import GradientOverlayImage from 'apolloschurchapp/src/ui/GradientOverlayImage';
+import TouchableScale from 'apolloschurchapp/src/ui/TouchableScale';
+
+const CardView = styled(
+  ({ theme }) => ({
+    borderRadius: theme.sizing.baseUnit,
+    overflow: 'hidden',
+    width: '100%',
+    height: '100%',
+    aspectRatio: 1,
+  }),
+  'TileImage'
+)(View);
+
+const Title = styled(
+  ({ theme }) => ({
+    position: 'absolute',
+    bottom: theme.sizing.baseUnit,
+    left: theme.sizing.baseUnit,
+    right: theme.sizing.baseUnit,
+    backgroundColor: theme.colors.transparent,
+    color: theme.colors.lightPrimary,
+  }),
+  'TileImage.Text'
+)(H4);
+
+const SquareGradientOverlayImage = styled({
+  aspectRatio: 1,
+})(GradientOverlayImage);
+
+const enhance = compose(
+  withTheme(({ theme: { colors } = {} } = {}) => ({ theme: { colors } })),
+  pure
+);
+
+const TileImage = enhance(
+  ({ image, link, onPressItem, text, theme, isLoading }) => (
+    <TouchableScale onPress={() => !isLoading && onPressItem({ ...link })}>
+      <CardView>
+        <SquareGradientOverlayImage
+          source={image}
+          isLoading={isLoading}
+          maintainAspectRatio={false}
+          overlayColor={text ? theme.colors.black : null}
+        />
+        <Title isLoading={isLoading}>{text}</Title>
+      </CardView>
+    </TouchableScale>
+  )
+);
+
+TileImage.propTypes = {
+  image: GradientOverlayImage.propTypes.source,
+  link: PropTypes.string,
+  onPressItem: PropTypes.func,
+  text: PropTypes.string,
+  isLoading: PropTypes.bool,
+};
+
+TileImage.defaultProps = {
+  text: '',
+};
+
+export default TileImage;
diff --git a/apolloschurchapp/src/ui/Touchable/index.js b/apolloschurchapp/src/ui/Touchable/index.js
new file mode 100644
index 0000000..cef6121
--- /dev/null
+++ b/apolloschurchapp/src/ui/Touchable/index.js
@@ -0,0 +1,16 @@
+import {
+  Platform,
+  TouchableNativeFeedback,
+  TouchableOpacity,
+} from 'react-native';
+
+const IOSTouchable = TouchableOpacity;
+
+IOSTouchable.defaultProps = {
+  activeOpacity: 0.5,
+};
+
+const Touchable =
+  Platform.OS === 'android' ? TouchableNativeFeedback : IOSTouchable;
+
+export default Touchable;
diff --git a/apolloschurchapp/src/ui/TouchableScale/index.js b/apolloschurchapp/src/ui/TouchableScale/index.js
new file mode 100644
index 0000000..a4bdca9
--- /dev/null
+++ b/apolloschurchapp/src/ui/TouchableScale/index.js
@@ -0,0 +1,58 @@
+import React, { Component } from 'react';
+import PropTypes from 'prop-types';
+import { Animated, TouchableWithoutFeedback } from 'react-native';
+
+class TouchableScale extends Component {
+  static propTypes = {
+    minScale: PropTypes.number,
+    springConfig: PropTypes.shape({}),
+  };
+
+  static defaultProps = {
+    minScale: 0.95,
+    springConfig: {
+      speed: 20,
+    },
+  };
+
+  scale = new Animated.Value(this.props.active ? this.props.minScale : 1);
+
+  animatedStyle = {
+    transform: [{ scale: this.scale }],
+  };
+
+  handlePressIn = () => {
+    Animated.spring(this.scale, {
+      toValue: this.props.minScale,
+      useNativeDriver: true,
+      isInteraction: false,
+      ...this.props.springConfig,
+    }).start();
+  };
+
+  handlePressOut = () => {
+    Animated.spring(this.scale, {
+      toValue: 1,
+      useNativeDriver: true,
+      isInteraction: false,
+      ...this.props.springConfig,
+    }).start();
+  };
+
+  render() {
+    const { minScale, style, children, ...touchableProps } = this.props;
+    return (
+      <TouchableWithoutFeedback
+        {...touchableProps}
+        onPressIn={this.handlePressIn}
+        onPressOut={this.handlePressOut}
+      >
+        <Animated.View style={[this.animatedStyle, style]}>
+          {children}
+        </Animated.View>
+      </TouchableWithoutFeedback>
+    );
+  }
+}
+
+export default TouchableScale;
diff --git a/apolloschurchapp/src/ui/UserAvatarView/AvatarForm.js b/apolloschurchapp/src/ui/UserAvatarView/AvatarForm.js
new file mode 100644
index 0000000..2abef0a
--- /dev/null
+++ b/apolloschurchapp/src/ui/UserAvatarView/AvatarForm.js
@@ -0,0 +1,80 @@
+import React, { PureComponent } from 'react';
+import { View } from 'react-native';
+import PropTypes from 'prop-types';
+
+import ConnectedImage from 'apolloschurchapp/src/ui/ConnectedImage';
+import Touchable from 'apolloschurchapp/src/ui/Touchable';
+import { ButtonLink } from 'apolloschurchapp/src/ui/Button';
+import Avatar from 'apolloschurchapp/src/ui/Avatar';
+import { withTheme } from 'apolloschurchapp/src/ui/theme';
+import { H5 } from 'apolloschurchapp/src/ui/typography';
+import styled from 'apolloschurchapp/src/ui/styled';
+import uploadPhoto from './uploadPhoto';
+
+const StyledAvatar = withTheme(({ theme }) => ({
+  containerStyle: {
+    marginRight: 0,
+    marginBottom: theme.sizing.baseUnit / 2,
+  },
+}))(Avatar);
+
+const Wrapper = styled({
+  justifyContent: 'center',
+  alignItems: 'center',
+})(View);
+
+export default class AvatarForm extends PureComponent {
+  state = {
+    isUploadingFile: false,
+  };
+
+  componentWillUnmount() {
+    this.setState({ isUploadingFile: false });
+  }
+
+  handleUploadPhoto = async () => {
+    try {
+      await uploadPhoto({
+        onUpload: () => this.setState({ isUploadingFile: true }),
+      });
+      await this.props.refetch();
+      await this.setState({ isUploadingFile: false });
+    } catch (e) {
+      this.setState({ isUploadingFile: false });
+    }
+  };
+
+  render() {
+    const { photo } = this.props;
+    const { isUploadingFile } = this.state;
+
+    return (
+      <Wrapper>
+        <Touchable
+          disabled={this.props.disabled}
+          onPress={this.handleUploadPhoto}
+        >
+          <StyledAvatar
+            source={photo}
+            size="medium"
+            isLoading={isUploadingFile}
+          />
+        </Touchable>
+        {this.props.text ? (
+          <H5>
+            <ButtonLink onPress={this.handleUploadPhoto}>
+              Change Photo
+            </ButtonLink>
+          </H5>
+        ) : null}
+      </Wrapper>
+    );
+  }
+}
+
+AvatarForm.propTypes = {
+  refetch: PropTypes.func.isRequired,
+  photo: ConnectedImage.propTypes.source,
+  disabled: PropTypes.bool,
+  text: PropTypes.bool,
+};
diff --git a/apolloschurchapp/src/ui/UserAvatarView/UserAvatarView.stories.js b/apolloschurchapp/src/ui/UserAvatarView/UserAvatarView.stories.js
new file mode 100644
index 0000000..76cf42a
--- /dev/null
+++ b/apolloschurchapp/src/ui/UserAvatarView/UserAvatarView.stories.js
@@ -0,0 +1,23 @@
+import React from 'react';
+import { storiesOf } from '@storybook/react-native';
+
+import UserAvatarView from '.';
+
+storiesOf('UserAvatarView', module)
+  .add('example', () => (
+    <UserAvatarView
+      photo={'https://picsum.photos/400/400/?random'}
+      firstName={'Marty'}
+      lastName={'McFly'}
+      location={'Hill Valley'}
+    />
+  ))
+  .add('isLoading', () => (
+    <UserAvatarView
+      photo={'https://picsum.photos/400/400/?random'}
+      firstName={'Marty'}
+      lastName={'McFly'}
+      location={'Hill Valley'}
+      isLoading
+    />
+  ));
diff --git a/apolloschurchapp/src/ui/UserAvatarView/index.js b/apolloschurchapp/src/ui/UserAvatarView/index.js
new file mode 100644
index 0000000..c13c1c0
--- /dev/null
+++ b/apolloschurchapp/src/ui/UserAvatarView/index.js
@@ -0,0 +1,72 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import { View } from 'react-native';
+
+import { H3 } from 'apolloschurchapp/src/ui/typography';
+import PaddedView from 'apolloschurchapp/src/ui/PaddedView';
+import ConnectedImage from 'apolloschurchapp/src/ui/ConnectedImage';
+import styled from 'apolloschurchapp/src/ui/styled';
+import ChannelLabel from 'apolloschurchapp/src/ui/ChannelLabel';
+import { withIsLoading } from 'apolloschurchapp/src/ui/isLoading';
+
+import AvatarForm from './AvatarForm';
+
+const Container = styled(({ theme }) => ({
+  backgroundColor: theme.colors.background.paper,
+  flexDirection: 'row',
+}))(View);
+
+const Content = styled(({ theme }) => ({
+  flex: 1,
+  justifyContent: 'center',
+  paddingVertical: theme.sizing.baseUnit * 0.5,
+}))(PaddedView);
+
+const UserAvatarView = withIsLoading(
+  ({
+    theme,
+    photo,
+    firstName,
+    lastName,
+    location,
+    isLoading,
+    refetch,
+    onPhotoPress,
+    setIsUploadingFile,
+    isUploadingFile,
+    disabled,
+    ...viewProps
+  }) => (
+    // todo: handle file select stuff
+    <Container {...viewProps}>
+      <AvatarForm
+        isLoading={isLoading}
+        text={false}
+        disabled={disabled}
+        photo={photo}
+        refetch={refetch}
+      />
+      <Content>
+        <H3>
+          {firstName} {lastName}
+        </H3>
+        <ChannelLabel icon="pin" label={location || ''} isLoading={isLoading} />
+      </Content>
+    </Container>
+  )
+);
+
+UserAvatarView.propTypes = {
+  photo: ConnectedImage.propTypes.source,
+  firstName: PropTypes.string,
+  lastName: PropTypes.string,
+  location: PropTypes.string,
+  isLoading: PropTypes.bool,
+  refetch: PropTypes.func,
+  onPhotoPress: PropTypes.func,
+  blurIntensity: PropTypes.number,
+  allowProfileImageChange: PropTypes.bool,
+  ...View.propTypes,
+};
+
+export default UserAvatarView;
diff --git a/apolloschurchapp/src/user-settings/uploadPhoto.js b/apolloschurchapp/src/ui/UserAvatarView/uploadPhoto.js
similarity index 85%
rename from apolloschurchapp/src/user-settings/uploadPhoto.js
rename to apolloschurchapp/src/ui/UserAvatarView/uploadPhoto.js
index 7eb5815..055a8ef 100644
--- a/apolloschurchapp/src/user-settings/uploadPhoto.js
+++ b/apolloschurchapp/src/ui/UserAvatarView/uploadPhoto.js
@@ -1,11 +1,11 @@
 import gql from 'graphql-tag';
 import ImagePicker from 'react-native-image-picker';
+import { client } from 'apolloschurchapp/src/client';
 import { ReactNativeFile } from 'apollo-upload-client';
-import GET_USER_PROFILE from './getUserPhoto';
+import getUserProfile from '../../tabs/connect/getUserProfile';
 
 const options = {
   title: 'Select Profile Image',
-  quality: 0,
   storageOptions: {
     skipBackup: true,
     path: 'images',
@@ -26,7 +26,7 @@ function showImagePicker() {
   });
 }
 
-export default async ({ client, onUpload = () => ({}) }) => {
+export default async ({ onUpload = () => ({}) }) => {
   try {
     const image = await showImagePicker();
     const file = new ReactNativeFile({
@@ -57,10 +57,10 @@ export default async ({ client, onUpload = () => ({}) }) => {
           },
         }
       ) => {
-        const data = cache.readQuery({ query: GET_USER_PROFILE });
+        const data = cache.readQuery({ query: getUserProfile });
 
         cache.writeQuery({
-          query: GET_USER_PROFILE,
+          query: getUserProfile,
           data: {
             currentUser: {
               ...data.currentUser,
@@ -74,7 +74,6 @@ export default async ({ client, onUpload = () => ({}) }) => {
       },
     });
   } catch (e) {
-    console.warn(e);
     return null;
   }
 };
diff --git a/apolloschurchapp/src/ui/WebBrowser/Browser.android.js b/apolloschurchapp/src/ui/WebBrowser/Browser.android.js
new file mode 100644
index 0000000..49dc211
--- /dev/null
+++ b/apolloschurchapp/src/ui/WebBrowser/Browser.android.js
@@ -0,0 +1,15 @@
+import { Linking } from 'react-native';
+import { CustomTabs } from 'react-native-custom-tabs';
+
+const Browser = {
+  openURL: async (url, options = {}) => {
+    try {
+      await CustomTabs.openURL(url, options);
+    } catch (e) {
+      if (!Linking.canOpenURL()) throw new Error('URL not supported');
+      Linking.openURL(url);
+    }
+  },
+};
+
+export default Browser;
diff --git a/apolloschurchapp/src/ui/WebBrowser/Browser.ios.js b/apolloschurchapp/src/ui/WebBrowser/Browser.ios.js
new file mode 100644
index 0000000..7de160f
--- /dev/null
+++ b/apolloschurchapp/src/ui/WebBrowser/Browser.ios.js
@@ -0,0 +1,19 @@
+import { Linking } from 'react-native';
+import SafariView from 'react-native-safari-view';
+
+const Browser = {
+  openURL: async (url, options) => {
+    try {
+      await SafariView.isAvailable();
+      SafariView.show({
+        url,
+        ...options,
+      });
+    } catch (e) {
+      if (!Linking.canOpenURL()) throw new Error('URL not supported');
+      Linking.openURL(url);
+    }
+  },
+};
+
+export default Browser;
diff --git a/apolloschurchapp/src/ui/WebBrowser/Browser.js b/apolloschurchapp/src/ui/WebBrowser/Browser.js
deleted file mode 100644
index c6ddcb8..0000000
--- a/apolloschurchapp/src/ui/WebBrowser/Browser.js
+++ /dev/null
@@ -1,45 +0,0 @@
-import { Linking } from 'react-native';
-import InAppBrowser from 'react-native-inappbrowser-reborn';
-import gql from 'graphql-tag';
-import { client } from '../../client';
-
-export const GET_USER_COOKIE = gql`
-  query CurrentUserCookie {
-    currentUser {
-      id
-      rockToken
-    }
-  }
-`;
-
-export const getCookie = async () => {
-  const { data: { currentUser: { rockToken } = {} } = {} } = await client.query(
-    {
-      query: GET_USER_COOKIE,
-    }
-  );
-  return rockToken;
-};
-
-const Browser = {
-  open: async (url, options) => {
-    const cookie = await getCookie();
-    if (cookie)
-      console.warn(
-        "iOS doesn't support headers, you may want to use src/user-web-view"
-      );
-    const headers = { Cookie: cookie };
-    try {
-      if (await InAppBrowser.isAvailable()) {
-        InAppBrowser.open(url, {
-          headers,
-          ...options,
-        });
-      } else Linking.openURL(url);
-    } catch (e) {
-      console.error(e);
-    }
-  },
-};
-
-export default Browser;
diff --git a/apolloschurchapp/src/ui/WebBrowser/index.js b/apolloschurchapp/src/ui/WebBrowser/index.js
index 9e85ea5..70260fc 100644
--- a/apolloschurchapp/src/ui/WebBrowser/index.js
+++ b/apolloschurchapp/src/ui/WebBrowser/index.js
@@ -2,37 +2,25 @@
 import { Platform } from 'react-native';
 import { createContext } from 'react';
 
-import { withTheme } from '@apollosproject/ui-kit';
+import { withTheme } from 'apolloschurchapp/src/ui/theme';
 
 import Browser from './Browser';
 
-const { Provider: BaseProvider, Consumer } = createContext(Browser.open);
+const { Provider: BaseProvider, Consumer } = createContext(Browser.openURL);
 
-// NOTE: don't think this is working...
 const Provider = withTheme(({ theme }) => ({
-  value: (url, headers = {}, options = {}) =>
-    Browser.open(url, {
+  value: (url, options = {}) =>
+    Browser.openURL(url, {
       ...Platform.select({
         ios: {
-          dismissButtonStyle: 'cancel',
-          preferredBarTintColor: theme.colors.background.paper,
-          preferredControlTintColor: theme.colors.primary,
-          readerMode: false,
-          animated: true,
-          modalPresentationStyle: 'overFullScreen',
-          modalTransitionStyle: 'partialCurl',
-          modalEnabled: true,
+          tintColor: theme.colors.primary,
+          barTintColor: theme.colors.background.paper,
         },
         android: {
           toolbarColor: theme.colors.background.paper,
           enableDefaultShare: true,
-          showTitle: true,
-          secondaryToolbarColor: 'black',
-          enableUrlBarHiding: true,
-          forceCloseOnRedirection: false,
         },
       }),
-      headers: { ...headers },
       ...options,
     }),
 }))(BaseProvider);
diff --git a/apolloschurchapp/src/ui/WebBrowser/index.tests.js b/apolloschurchapp/src/ui/WebBrowser/index.tests.js
index 88eb48f..aa74598 100644
--- a/apolloschurchapp/src/ui/WebBrowser/index.tests.js
+++ b/apolloschurchapp/src/ui/WebBrowser/index.tests.js
@@ -1,13 +1,11 @@
 import React from 'react';
 import renderer from 'react-test-renderer';
-import { Platform } from 'react-native';
+// TODO: how to include test for Android?
 
 import Providers from 'apolloschurchapp/src/Providers';
 
 import { WebBrowserConsumer } from '.';
 
-jest.mock('Platform');
-
 describe(`WebBrowser Provider and Consumer`, () => {
   it('passes a function', async () => {
     renderer.create(
@@ -20,16 +18,4 @@ describe(`WebBrowser Provider and Consumer`, () => {
       </Providers>
     );
   });
-  it('passes a function (Android)', async () => {
-    Platform.OS = 'android';
-    renderer.create(
-      <Providers>
-        <WebBrowserConsumer>
-          {(openUrl) => {
-            expect(typeof openUrl).toBe('function');
-          }}
-        </WebBrowserConsumer>
-      </Providers>
-    );
-  });
 });
diff --git a/apolloschurchapp/src/ui/inputs/DateInput/DateInput.tests.js b/apolloschurchapp/src/ui/inputs/DateInput/DateInput.tests.js
new file mode 100644
index 0000000..52ba67a
--- /dev/null
+++ b/apolloschurchapp/src/ui/inputs/DateInput/DateInput.tests.js
@@ -0,0 +1,52 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+import moment from 'moment';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import DateInput from '.';
+
+describe('The DateInput component', () => {
+  it('should render', () => {
+    const tree = renderer.create(
+      <Providers>
+        <DateInput value={moment.utc('1/1/2015').toDate()} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render with a displayValue', () => {
+    const tree = renderer.create(
+      <Providers>
+        <DateInput
+          value={moment.utc('1/1/2015').toDate()}
+          displayValue={moment.utc('1/1/2015').format('YYYY/MM/DD')}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render with a placeholder', () => {
+    const tree = renderer.create(
+      <Providers>
+        <DateInput
+          placeholder={'mm/dd/yyyy'}
+          value={moment.utc('1/1/2015').toDate()}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render with a label', () => {
+    const tree = renderer.create(
+      <Providers>
+        <DateInput
+          value={moment.utc('1/1/2015').toDate()}
+          displayValue={moment.utc('1/1/2015').format('YYYY/MM/DD')}
+          label={'Date Label'}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/inputs/DateInput/index.js b/apolloschurchapp/src/ui/inputs/DateInput/index.js
new file mode 100644
index 0000000..a92ab5d
--- /dev/null
+++ b/apolloschurchapp/src/ui/inputs/DateInput/index.js
@@ -0,0 +1,75 @@
+import React, { PureComponent } from 'react';
+import PropTypes from 'prop-types';
+import moment from 'moment';
+import { Animated } from 'react-native';
+import DateTimePicker from 'react-native-modal-datetime-picker';
+
+import Chip from 'apolloschurchapp/src/ui/Chip';
+
+import InputWrapper from '../InputWrapper';
+import FloatingLabel from '../FloatingLabel';
+
+const chipStyle = { marginTop: 5 };
+
+class DateInput extends PureComponent {
+  static propTypes = {
+    label: PropTypes.string,
+    placeholder: PropTypes.string,
+    value: PropTypes.any, // eslint-disable-line
+    displayValue: PropTypes.string,
+    onChange: PropTypes.func,
+    onChangeText: PropTypes.func,
+    onBlur: PropTypes.func,
+    error: PropTypes.any, // eslint-disable-line
+  };
+
+  state = {
+    isVisible: false,
+  };
+
+  handleOpen = () => this.setState({ isVisible: true });
+
+  handleClose = () => {
+    this.setState({ isVisible: false });
+    if (this.props.onBlur) this.props.onBlur();
+  };
+
+  handleConfirm = (value) => {
+    if (this.props.onChange) this.props.onChange(value);
+    if (this.props.onChangeText) {
+      this.props.onChangeText(moment(value).format('MM/DD/YYYY'));
+    }
+    this.handleClose();
+  };
+
+  render() {
+    let date = this.props.value;
+    if (typeof date === 'string') date = moment(date).toDate();
+    return (
+      <InputWrapper>
+        <Chip
+          style={chipStyle}
+          title={
+            this.props.displayValue ||
+            this.props.placeholder ||
+            this.props.label
+          }
+          onPress={this.handleOpen}
+        />
+        <DateTimePicker
+          date={date || new Date()}
+          isVisible={this.state.isVisible}
+          onConfirm={this.handleConfirm}
+          onCancel={this.handleClose}
+        />
+        {this.props.displayValue || this.props.placeholder ? (
+          <FloatingLabel animation={new Animated.Value(1)}>
+            {this.props.label}
+          </FloatingLabel>
+        ) : null}
+      </InputWrapper>
+    );
+  }
+}
+
+export default DateInput;
diff --git a/apolloschurchapp/src/ui/inputs/ErrorText.js b/apolloschurchapp/src/ui/inputs/ErrorText.js
new file mode 100644
index 0000000..3368ee0
--- /dev/null
+++ b/apolloschurchapp/src/ui/inputs/ErrorText.js
@@ -0,0 +1,9 @@
+import { H6 } from 'apolloschurchapp/src/ui/typography';
+import styled from 'apolloschurchapp/src/ui/styled';
+
+const ErrorText = styled(({ theme }) => ({
+  color: theme.colors.alert,
+  paddingTop: theme.sizing.baseUnit / 2,
+}))(H6);
+
+export default ErrorText;
diff --git a/apolloschurchapp/src/ui/inputs/FloatingLabel.js b/apolloschurchapp/src/ui/inputs/FloatingLabel.js
new file mode 100644
index 0000000..3e45f9b
--- /dev/null
+++ b/apolloschurchapp/src/ui/inputs/FloatingLabel.js
@@ -0,0 +1,90 @@
+import React, { PureComponent } from 'react';
+import PropTypes from 'prop-types';
+import { Animated, StyleSheet } from 'react-native';
+
+import { H6 } from 'apolloschurchapp/src/ui/typography';
+import styled from 'apolloschurchapp/src/ui/styled';
+
+export const LabelText = styled(
+  ({ theme }) => ({
+    color: theme.colors.text.secondary,
+    backgroundColor: 'transparent',
+    paddingVertical: theme.sizing.baseUnit / 4,
+  }),
+  'FloatingLabel.LabelText'
+)(H6);
+
+const styles = StyleSheet.create({
+  floatLabelView: {
+    position: 'absolute',
+    bottom: 0,
+    top: 0,
+    justifyContent: 'center',
+  },
+});
+
+class FloatingLabel extends PureComponent {
+  static propTypes = {
+    children: PropTypes.node,
+    animation: PropTypes.shape({
+      interpolate: PropTypes.func,
+    }),
+    scaleSize: PropTypes.number, // how much smaller to make label when focused
+    floatingOpacity: PropTypes.number,
+  };
+
+  static defaultProps = {
+    animation: new Animated.Value(0),
+    scaleSize: 0.8,
+    floatingOpacity: 0.8,
+  };
+
+  state = {
+    labelWidth: 0,
+    labelHeight: 0,
+  };
+
+  handleLayout = ({ nativeEvent: { layout } }) => {
+    this.setState({
+      labelWidth: layout.width,
+      labelHeight: layout.height,
+    });
+  };
+
+  render() {
+    const scaledWidth = this.state.labelWidth * (1.05 - this.props.scaleSize);
+    const sideScaledWidth = scaledWidth / 2;
+    const scale = this.props.animation.interpolate({
+      inputRange: [0, 1],
+      outputRange: [1, this.props.scaleSize],
+    });
+    const opacity = this.props.animation.interpolate({
+      inputRange: [0, 1],
+      outputRange: [1, this.props.floatingOpacity],
+    });
+    const translateY = this.props.animation.interpolate({
+      inputRange: [0, 1],
+      outputRange: [0, -(this.state.labelHeight * 0.7)],
+    });
+    const translateX = this.props.animation.interpolate({
+      inputRange: [0, 1],
+      outputRange: [0, -sideScaledWidth],
+    });
+    const wrapperStyles = {
+      transform: [{ scale }, { translateX }, { translateY }],
+      opacity,
+    };
+
+    return (
+      <Animated.View
+        pointerEvents="none"
+        onLayout={this.handleLayout}
+        style={[styles.floatLabelView, wrapperStyles]}
+      >
+        <LabelText>{this.props.children}</LabelText>
+      </Animated.View>
+    );
+  }
+}
+
+export default FloatingLabel;
diff --git a/apolloschurchapp/src/ui/inputs/InputAddon.js b/apolloschurchapp/src/ui/inputs/InputAddon.js
new file mode 100644
index 0000000..01e4ee7
--- /dev/null
+++ b/apolloschurchapp/src/ui/inputs/InputAddon.js
@@ -0,0 +1,21 @@
+import { View } from 'react-native';
+
+import styled from 'apolloschurchapp/src/ui/styled';
+
+const InputAddon = styled(
+  {
+    justifyContent: 'center',
+    alignItems: 'center',
+  },
+  'InputAddon'
+)(View);
+
+const AddonRow = styled(
+  {
+    flexDirection: 'row',
+    justifyContent: 'center',
+  },
+  'InputWrapper.Row'
+)(View);
+
+export { InputAddon as default, AddonRow };
diff --git a/apolloschurchapp/src/ui/inputs/InputUnderline.js b/apolloschurchapp/src/ui/inputs/InputUnderline.js
new file mode 100644
index 0000000..378a2b3
--- /dev/null
+++ b/apolloschurchapp/src/ui/inputs/InputUnderline.js
@@ -0,0 +1,62 @@
+import React from 'react';
+import { Animated, StyleSheet, View } from 'react-native';
+import PropTypes from 'prop-types';
+
+import styled from 'apolloschurchapp/src/ui/styled';
+
+const FocusedUnderline = styled(
+  ({ theme, hasError }) => ({
+    height: StyleSheet.hairlineWidth,
+    backgroundColor: hasError ? theme.colors.alert : theme.colors.primary,
+    bottom: 0,
+  }),
+  'InputUnderline.focused'
+)(View);
+
+const BluredUnderline = styled(
+  ({ theme }) => ({
+    height: StyleSheet.hairlineWidth,
+    backgroundColor: theme.colors.background.inactive,
+    bottom: -StyleSheet.hairlineWidth,
+  }),
+  'InputUnderline.blurred'
+)(View);
+
+const styles = StyleSheet.create({
+  wrapper: {
+    bottom: 0,
+    left: 0,
+    right: 0,
+  },
+});
+
+const InputUnderline = ({
+  animation = new Animated.Value(0),
+  hasError = false,
+}) => {
+  let scaleX = animation.interpolate({
+    inputRange: [0, 1],
+    outputRange: [0.0001, 1],
+  });
+  if (hasError) scaleX = 1;
+
+  const transform = [{ scaleX }];
+
+  return (
+    <View style={styles.wrapper}>
+      <BluredUnderline />
+      <Animated.View style={[styles.wrapper, { transform }]}>
+        <FocusedUnderline hasError={hasError} />
+      </Animated.View>
+    </View>
+  );
+};
+
+InputUnderline.propTypes = {
+  animation: PropTypes.shape({
+    interpolate: PropTypes.func,
+  }),
+  hasError: PropTypes.bool,
+};
+
+export default InputUnderline;
diff --git a/apolloschurchapp/src/ui/inputs/InputWrapper.js b/apolloschurchapp/src/ui/inputs/InputWrapper.js
new file mode 100644
index 0000000..fe23b94
--- /dev/null
+++ b/apolloschurchapp/src/ui/inputs/InputWrapper.js
@@ -0,0 +1,13 @@
+import { View } from 'react-native';
+
+import styled from 'apolloschurchapp/src/ui/styled';
+
+const InputWrapper = styled(
+  ({ theme, disabled }) => ({
+    marginVertical: theme.sizing.baseUnit,
+    ...(disabled ? { opacity: 0.5 } : {}),
+  }),
+  'InputWrapper'
+)(View);
+
+export default InputWrapper;
diff --git a/apolloschurchapp/src/ui/inputs/Picker/Picker.stories.js b/apolloschurchapp/src/ui/inputs/Picker/Picker.stories.js
new file mode 100644
index 0000000..79ce6b8
--- /dev/null
+++ b/apolloschurchapp/src/ui/inputs/Picker/Picker.stories.js
@@ -0,0 +1,15 @@
+import React from 'react';
+import { storiesOf } from '@storybook/react-native';
+
+import FlexedView from 'apolloschurchapp/src/ui/FlexedView';
+
+import Picker, { Item } from '.';
+
+storiesOf('Inputs', module).add('Picker', () => (
+  <FlexedView>
+    <Picker placeholder="Select a language..." label="Languages">
+      <Item label="Java" value="java" />
+      <Item label="JavaScript" value="js" />
+    </Picker>
+  </FlexedView>
+));
diff --git a/apolloschurchapp/src/ui/inputs/Picker/Picker.tests.js b/apolloschurchapp/src/ui/inputs/Picker/Picker.tests.js
new file mode 100644
index 0000000..f2f66a1
--- /dev/null
+++ b/apolloschurchapp/src/ui/inputs/Picker/Picker.tests.js
@@ -0,0 +1,48 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+import { Text, Animated } from 'react-native';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import Picker, { Item, Picker as UnwrappedPicker } from '.';
+
+describe('The Picker Input component', () => {
+  it('should render correctly', () => {
+    const tree = renderer.create(
+      <Providers>
+        <Picker
+          placeholder="Select a language..."
+          label="Languages"
+          displayValue="Display Value"
+          prefix={<Text>Hello there!</Text>}
+          suffix={<Text>Goodbye now.</Text>}
+        >
+          <Item label="Java" value="java" />
+          <Item label="JavaScript" value="js" />
+        </Picker>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+
+  it('focuses and blurs', () => {
+    const focus = jest.fn();
+    const blur = jest.fn();
+    const tree = renderer.create(
+      <Providers>
+        <UnwrappedPicker
+          focusAnimation={new Animated.Value(0)}
+          onFocus={focus}
+          onBlur={blur}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+    tree.root.findByType(UnwrappedPicker).instance.handleOnPress();
+    expect(tree).toMatchSnapshot();
+    expect(focus).toHaveBeenCalled();
+    tree.root.findByType(UnwrappedPicker).instance.handleOnPress();
+    expect(tree).toMatchSnapshot();
+    expect(blur).toHaveBeenCalled();
+  });
+});
diff --git a/apolloschurchapp/src/ui/inputs/Picker/PickerList.js b/apolloschurchapp/src/ui/inputs/Picker/PickerList.js
new file mode 100644
index 0000000..d3c846f
--- /dev/null
+++ b/apolloschurchapp/src/ui/inputs/Picker/PickerList.js
@@ -0,0 +1,62 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import { Modal, StyleSheet, View, Picker as NativePicker } from 'react-native';
+
+import styled from 'apolloschurchapp/src/ui/styled';
+import { ButtonLink } from 'apolloschurchapp/src/ui/Button';
+
+const StyledPicker = styled(
+  ({ theme }) => ({
+    borderTopWidth: StyleSheet.hairlineWidth,
+    borderTopColor: theme.colors.background.inactive,
+  }),
+  'Inputs.Picker.List'
+)(NativePicker);
+
+const PickerKeyboardView = styled(
+  ({ theme }) => ({
+    backgroundColor: theme.colors.background.paper,
+    position: 'absolute',
+    bottom: 0,
+    left: 0,
+    right: 0,
+    borderTopColor: theme.colors.shadows.default,
+    borderTopWidth: StyleSheet.hairlineWidth,
+  }),
+  'Inputs.Picker.List.Keyboard'
+)(View);
+
+const Toolbar = styled(
+  ({ theme }) => ({
+    alignItems: 'flex-end',
+    padding: theme.sizing.baseUnit / 2,
+    backgroundColor: theme.colors.background.accent,
+  }),
+  'Inputs.Picker.List.Toolbar'
+)(View);
+
+const PickerList = ({ focused, onRequestClose, value, ...pickerProps }) => (
+  <Modal
+    visible={focused}
+    onRequestClose={onRequestClose}
+    animationType="slide"
+    transparent
+  >
+    <PickerKeyboardView>
+      <Toolbar>
+        <ButtonLink onPress={onRequestClose}>Done</ButtonLink>
+      </Toolbar>
+      <StyledPicker selectedValue={value} {...pickerProps} />
+    </PickerKeyboardView>
+  </Modal>
+);
+
+PickerList.propTypes = {
+  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
+  children: PropTypes.node,
+  focused: PropTypes.bool,
+  onRequestClose: PropTypes.func,
+  mode: PropTypes.string,
+};
+
+export default PickerList;
diff --git a/apolloschurchapp/src/ui/inputs/Picker/index.android.js b/apolloschurchapp/src/ui/inputs/Picker/index.android.js
new file mode 100644
index 0000000..8703f8c
--- /dev/null
+++ b/apolloschurchapp/src/ui/inputs/Picker/index.android.js
@@ -0,0 +1,34 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import { Animated, Picker as NativePicker } from 'react-native';
+import { mapProps } from 'recompose';
+
+import InputUnderline from '../InputUnderline';
+import InputWrapper from '../InputWrapper';
+import FloatingLabel from '../FloatingLabel';
+
+const MappedNativePicker = mapProps(
+  ({ placeholder: prompt, value: selectedValue, ...otherProps }) => ({
+    prompt,
+    selectedValue,
+    ...otherProps,
+  })
+)(NativePicker);
+
+const Picker = ({ wrapperStyle, ...props }) => (
+  <InputWrapper style={wrapperStyle}>
+    <MappedNativePicker {...props} />
+    <FloatingLabel animation={new Animated.Value(1)}>
+      {props.label}
+    </FloatingLabel>
+    <InputUnderline />
+  </InputWrapper>
+);
+
+Picker.propTypes = {
+  label: PropTypes.string,
+  wrapperStyle: PropTypes.any, // eslint-disable-line
+};
+
+export default Picker;
+export const { Item } = NativePicker;
diff --git a/apolloschurchapp/src/ui/inputs/Picker/index.js b/apolloschurchapp/src/ui/inputs/Picker/index.js
new file mode 100644
index 0000000..a559d8c
--- /dev/null
+++ b/apolloschurchapp/src/ui/inputs/Picker/index.js
@@ -0,0 +1,116 @@
+import React, { PureComponent } from 'react';
+import PropTypes from 'prop-types';
+import {
+  Animated,
+  Picker as NativePicker,
+  TouchableOpacity,
+} from 'react-native';
+
+import styled from 'apolloschurchapp/src/ui/styled';
+import { H6 } from 'apolloschurchapp/src/ui/typography';
+import Icon from 'apolloschurchapp/src/ui/Icon';
+
+import FloatingLabel from '../FloatingLabel';
+import InputUnderline from '../InputUnderline';
+import InputWrapper from '../InputWrapper';
+import withFocusAnimation from '../withFocusAnimation';
+import InputAddon, { AddonRow } from '../InputAddon';
+import withInputControlStyles from '../withInputControlStyles';
+
+import PickerList from './PickerList';
+
+const StyledH6 = withInputControlStyles(H6);
+const Placeholder = styled(
+  ({ theme }) => ({
+    color: theme.colors.text.tertiary,
+  }),
+  'Inputs.Picker.Placeholder'
+)(H6);
+
+export class Picker extends PureComponent {
+  static propTypes = {
+    placeholder: PropTypes.string,
+    displayValue: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
+    focusAnimation: PropTypes.any, // eslint-disable-line
+    prefix: PropTypes.node,
+    suffix: PropTypes.node,
+    onFocus: PropTypes.func,
+    onBlur: PropTypes.func,
+    label: PropTypes.string,
+    value: PropTypes.any, // eslint-disable-line
+    wrapperStyle: PropTypes.any, // eslint-disable-line
+    style: PropTypes.any, // eslint-disable-line
+  };
+
+  state = {
+    focused: false,
+  };
+
+  handleOnPress = () => {
+    this.setState(
+      (previousState) => ({ focused: !previousState.focused }),
+      () => {
+        if (this.state.focused) {
+          this.props.onFocus();
+        } else {
+          this.props.onBlur();
+        }
+      }
+    );
+  };
+
+  render() {
+    const {
+      displayValue,
+      focusAnimation, // from createInput
+      placeholder,
+      label,
+      value,
+      style,
+      wrapperStyle,
+      ...pickerProps
+    } = this.props;
+    const rotate = focusAnimation.interpolate({
+      inputRange: [0, 1],
+      outputRange: ['0deg', '180deg'],
+    });
+    const labelAnimation = value ? new Animated.Value(1) : focusAnimation;
+
+    const animatedStyle = { opacity: labelAnimation, flex: 1 };
+
+    return (
+      <InputWrapper style={wrapperStyle}>
+        <TouchableOpacity onPress={this.handleOnPress}>
+          <AddonRow>
+            <Animated.View style={animatedStyle}>
+              <StyledH6 style={style}>
+                {displayValue || <Placeholder>{placeholder}</Placeholder>}
+              </StyledH6>
+            </Animated.View>
+            <InputAddon>
+              <Animated.View style={{ transform: [{ rotate }] }}>
+                <Icon name="arrow-down" size={18} />
+              </Animated.View>
+            </InputAddon>
+          </AddonRow>
+        </TouchableOpacity>
+
+        <PickerList
+          {...pickerProps}
+          value={value}
+          focused={this.state.focused}
+          onRequestClose={this.handleOnPress}
+        />
+
+        <FloatingLabel animation={labelAnimation}>{label}</FloatingLabel>
+        <InputUnderline animation={focusAnimation} />
+      </InputWrapper>
+    );
+  }
+}
+
+const EnhancedComponent = withFocusAnimation(Picker);
+EnhancedComponent.propTypes = Picker.propTypes;
+
+export default EnhancedComponent;
+export const { Item } = NativePicker;
diff --git a/apolloschurchapp/src/ui/inputs/Radio/RadioButton.js b/apolloschurchapp/src/ui/inputs/Radio/RadioButton.js
new file mode 100644
index 0000000..d45d6ee
--- /dev/null
+++ b/apolloschurchapp/src/ui/inputs/Radio/RadioButton.js
@@ -0,0 +1,73 @@
+import React, { PureComponent } from 'react';
+import { View, TouchableWithoutFeedback } from 'react-native';
+import PropTypes from 'prop-types';
+import { compose, getContext } from 'recompose';
+import isString from 'lodash/isString';
+
+import { H6 } from 'apolloschurchapp/src/ui/typography';
+import styled from 'apolloschurchapp/src/ui/styled';
+
+import RadioButtonIndicator from './RadioButtonIndicator';
+
+const Row = styled(({ theme }) => ({
+  padding: theme.sizing.baseUnit / 2,
+  borderBottomWidth: 1,
+  borderBottomColor: theme.colors.background.accent,
+  flexDirection: 'row',
+  justifyContent: 'space-between',
+  alignItems: 'center',
+}))(View);
+
+class RadioButton extends PureComponent {
+  static propTypes = {
+    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,
+    currentValue: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
+    Label: PropTypes.oneOfType([
+      PropTypes.string,
+      PropTypes.element,
+      PropTypes.func,
+    ]),
+    onSelectValue: PropTypes.func,
+    RadioButtonIndicator: PropTypes.oneOfType([
+      PropTypes.element,
+      PropTypes.func,
+    ]),
+  };
+
+  static defaultProps = {
+    Label: '',
+    onSelectValue() {},
+    RadioButtonIndicator,
+  };
+
+  handleOnPress = () => {
+    this.props.onSelectValue(this.props.value);
+  };
+
+  render() {
+    const Indicator = this.props.RadioButtonIndicator;
+    return (
+      <TouchableWithoutFeedback onPress={this.handleOnPress}>
+        <Row>
+          <Indicator
+            isSelected={this.props.currentValue === this.props.value}
+          />
+          {isString(this.props.Label) ? (
+            <H6>{this.props.Label}</H6>
+          ) : (
+            <this.props.Label />
+          )}
+        </Row>
+      </TouchableWithoutFeedback>
+    );
+  }
+}
+
+const enhance = compose(
+  getContext({
+    onSelectValue: PropTypes.func,
+    currentValue: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
+  })
+);
+
+export default enhance(RadioButton);
diff --git a/apolloschurchapp/src/ui/inputs/Radio/RadioButtonIndicator.js b/apolloschurchapp/src/ui/inputs/Radio/RadioButtonIndicator.js
new file mode 100644
index 0000000..a3d0576
--- /dev/null
+++ b/apolloschurchapp/src/ui/inputs/Radio/RadioButtonIndicator.js
@@ -0,0 +1,43 @@
+import React, { PureComponent } from 'react';
+import { View } from 'react-native';
+import PropTypes from 'prop-types';
+
+import styled from 'apolloschurchapp/src/ui/styled';
+
+const OutlinedCircle = styled(({ theme, isSelected }) => ({
+  height: 20,
+  width: 20,
+  borderRadius: 99,
+  borderWidth: 2,
+  borderColor: isSelected ? theme.colors.primary : theme.colors.darkTertiary,
+  alignItems: 'center',
+  justifyContent: 'center',
+}))(View);
+
+const FilledCircle = styled(({ theme }) => ({
+  height: 12,
+  width: 12,
+  borderRadius: 99,
+  backgroundColor: theme.colors.primary,
+}))(View);
+
+export default class RadioButtonIndicator extends PureComponent {
+  static propTypes = {
+    isSelected: PropTypes.bool,
+  };
+
+  static defaultProps = {
+    isSelected: false,
+  };
+
+  render() {
+    if (this.props.isSelected) {
+      return (
+        <OutlinedCircle isSelected>
+          <FilledCircle />
+        </OutlinedCircle>
+      );
+    }
+    return <OutlinedCircle />;
+  }
+}
diff --git a/apolloschurchapp/src/ui/inputs/Radio/index.js b/apolloschurchapp/src/ui/inputs/Radio/index.js
new file mode 100644
index 0000000..fc8a94e
--- /dev/null
+++ b/apolloschurchapp/src/ui/inputs/Radio/index.js
@@ -0,0 +1,66 @@
+import React, { Component } from 'react';
+import { View } from 'react-native';
+import PropTypes from 'prop-types';
+
+import RadioButton from './RadioButton';
+
+export default class Radio extends Component {
+  static Button = RadioButton;
+
+  static propTypes = {
+    children: PropTypes.node,
+    onChange: PropTypes.func,
+    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
+    style: PropTypes.any, // eslint-disable-line
+  };
+
+  static childContextTypes = {
+    onSelectValue: PropTypes.func,
+    currentValue: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
+  };
+
+  static defaultProps = {
+    children: null,
+    onChange() {},
+    value: null,
+  };
+
+  state = {
+    value: this.props.value,
+  };
+
+  getChildContext() {
+    return {
+      onSelectValue: this.selectValue,
+      currentValue: this.state.value,
+    };
+  }
+
+  componentWillReceiveProps(nextProps) {
+    if (nextProps.value !== this.props.value) {
+      this.setState(
+        {
+          value: nextProps.value,
+        },
+        this.notifyValueChanged
+      );
+    }
+  }
+
+  selectValue = (value) => {
+    this.setState(
+      {
+        value,
+      },
+      this.notifyValueChanged
+    );
+  };
+
+  notifyValueChanged = () => {
+    this.props.onChange(this.state.value);
+  };
+
+  render() {
+    return <View style={this.props.style}>{this.props.children}</View>;
+  }
+}
diff --git a/apolloschurchapp/src/ui/inputs/Switch/Switch.stories.js b/apolloschurchapp/src/ui/inputs/Switch/Switch.stories.js
new file mode 100644
index 0000000..724225a
--- /dev/null
+++ b/apolloschurchapp/src/ui/inputs/Switch/Switch.stories.js
@@ -0,0 +1,12 @@
+import React from 'react';
+import { storiesOf } from '@storybook/react-native';
+
+import FlexedView from 'apolloschurchapp/src/ui/FlexedView';
+
+import Switch from '.';
+
+storiesOf('Inputs', module).add('Switch', () => (
+  <FlexedView>
+    <Switch label="Some label text" />
+  </FlexedView>
+));
diff --git a/apolloschurchapp/src/ui/inputs/Switch/Switch.tests.js b/apolloschurchapp/src/ui/inputs/Switch/Switch.tests.js
new file mode 100644
index 0000000..b8a7e7a
--- /dev/null
+++ b/apolloschurchapp/src/ui/inputs/Switch/Switch.tests.js
@@ -0,0 +1,17 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import Switch from '.';
+
+describe('The Picker Input component', () => {
+  it('should render correctly', () => {
+    const tree = renderer.create(
+      <Providers>
+        <Switch label="Some label text" />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/inputs/Switch/index.js b/apolloschurchapp/src/ui/inputs/Switch/index.js
new file mode 100644
index 0000000..b6ec5ac
--- /dev/null
+++ b/apolloschurchapp/src/ui/inputs/Switch/index.js
@@ -0,0 +1,78 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import { compose, pure } from 'recompose';
+import { Platform, Switch, View } from 'react-native';
+
+import { withTheme } from 'apolloschurchapp/src/ui/theme';
+import FlexedView from 'apolloschurchapp/src/ui/FlexedView';
+import styled from 'apolloschurchapp/src/ui/styled';
+import Touchable from 'apolloschurchapp/src/ui/Touchable';
+
+import InputAddon, { AddonRow } from '../InputAddon';
+import { LabelText } from '../FloatingLabel';
+import InputWrapper from '../InputWrapper';
+import { withInputControlViewStyles } from '../withInputControlStyles';
+import ErrorText from '../ErrorText';
+
+const ControlWrapper = withInputControlViewStyles(View);
+
+const enhance = compose(
+  pure,
+  withTheme(({ theme }) => ({
+    onTintColor: theme.colors.primary,
+    activeTrackColor: theme.colors.primary,
+    trackColor: theme.colors.background.inactive,
+    tintColor: theme.colors.background.inactive,
+    activeThumbColor: theme.colors.background.paper,
+    ...Platform.select({
+      android: { thumbTintColor: theme.colors.background.paper },
+    }),
+  }))
+);
+
+const LabelContainer = styled({
+  justifyContent: 'center',
+})(FlexedView);
+
+const Text = enhance(
+  ({
+    label,
+    prefix,
+    error,
+    wrapperStyle,
+    onValueChange,
+    value,
+    ...switchProps
+  }) => (
+    <InputWrapper style={wrapperStyle}>
+      <ControlWrapper>
+        <AddonRow>
+          <InputAddon>{prefix}</InputAddon>
+          <LabelContainer>
+            <Touchable onPress={() => onValueChange(!value)}>
+              <LabelText>{label}</LabelText>
+            </Touchable>
+          </LabelContainer>
+          <InputAddon>
+            <Switch
+              value={value}
+              onValueChange={onValueChange}
+              {...switchProps}
+            />
+          </InputAddon>
+        </AddonRow>
+      </ControlWrapper>
+
+      {error && typeof error === 'string' ? (
+        <ErrorText>{error}</ErrorText>
+      ) : null}
+    </InputWrapper>
+  )
+);
+
+Text.propTypes = {
+  label: PropTypes.node,
+  error: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),
+};
+
+export default Text;
diff --git a/apolloschurchapp/src/ui/inputs/Text/Text.stories.js b/apolloschurchapp/src/ui/inputs/Text/Text.stories.js
new file mode 100644
index 0000000..ece7b9e
--- /dev/null
+++ b/apolloschurchapp/src/ui/inputs/Text/Text.stories.js
@@ -0,0 +1,33 @@
+import React from 'react';
+import { storiesOf } from '@storybook/react-native';
+
+import Icon from 'apolloschurchapp/src/ui/Icon';
+import FlexedView from 'apolloschurchapp/src/ui/FlexedView';
+
+import Text from '.';
+
+storiesOf('Inputs', module).add('Text', () => (
+  <FlexedView>
+    <Text editable label="Some label text" placeholder="Some placeholder" />
+    <Text
+      editable
+      type="password"
+      label="Password"
+      placeholder="Some placeholder"
+      suffix={<Icon name="lock" size={18} />}
+    />
+    <Text editable type="email" label="Email" placeholder="Some placeholder" />
+    <Text
+      editable
+      type="numeric"
+      label="Numeric"
+      placeholder="Some placeholder"
+    />
+    <Text
+      editable
+      type="phone"
+      label="Phone Number"
+      placeholder="Some placeholder"
+    />
+  </FlexedView>
+));
diff --git a/apolloschurchapp/src/ui/inputs/Text/Text.tests.js b/apolloschurchapp/src/ui/inputs/Text/Text.tests.js
new file mode 100644
index 0000000..10c0300
--- /dev/null
+++ b/apolloschurchapp/src/ui/inputs/Text/Text.tests.js
@@ -0,0 +1,70 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+import Icon from 'apolloschurchapp/src/ui/Icon';
+
+import Text from '.';
+
+describe('The Text Input component', () => {
+  it('should render correctly', () => {
+    const tree = renderer.create(
+      <Providers>
+        <Text editable label="Some label text" placeholder="Some placeholder" />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render as a password field with an icon', () => {
+    const tree = renderer.create(
+      <Providers>
+        <Text
+          editable
+          type="password"
+          label="Password"
+          placeholder="Some placeholder"
+          suffix={<Icon name="lock" size={18} />}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render as an email field', () => {
+    const tree = renderer.create(
+      <Providers>
+        <Text
+          editable
+          type="email"
+          label="Email"
+          placeholder="Some placeholder"
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render as a numeric field', () => {
+    const tree = renderer.create(
+      <Providers>
+        <Text
+          editable
+          type="numeric"
+          label="Numeric"
+          placeholder="Some placeholder"
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render as a phone number field', () => {
+    const tree = renderer.create(
+      <Providers>
+        <Text
+          type="phone"
+          label="Phone Number"
+          placeholder="Some placeholder"
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/inputs/Text/index.js b/apolloschurchapp/src/ui/inputs/Text/index.js
new file mode 100644
index 0000000..4264b20
--- /dev/null
+++ b/apolloschurchapp/src/ui/inputs/Text/index.js
@@ -0,0 +1,133 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import { get } from 'lodash';
+import { compose, withProps, pure } from 'recompose';
+import { View, Platform, TextInput, Animated } from 'react-native';
+import Color from 'color';
+
+import { withTheme } from 'apolloschurchapp/src/ui/theme';
+
+import FloatingLabel from '../FloatingLabel';
+import InputUnderline from '../InputUnderline';
+import InputWrapper from '../InputWrapper';
+import ErrorText from '../ErrorText';
+import withFocusAnimation from '../withFocusAnimation';
+import InputAddon, { AddonRow } from '../InputAddon';
+import { textStyle } from '../withInputControlStyles';
+
+const propsForInputType = {
+  password: {
+    secureTextEntry: true,
+    autoCapitalize: 'none',
+    autoCorrect: false,
+  },
+  email: {
+    keyboardType: 'email-address',
+    autoCapitalize: 'none',
+    autoCorrect: false,
+  },
+  numeric: {
+    keyboardType: 'numeric',
+  },
+  numericKeyboard: {
+    ...Platform.select({
+      ios: { keyboardType: 'numeric' },
+      android: { keyboardType: 'numeric' },
+      web: { type: 'text' },
+    }),
+  },
+  phone: {
+    keyboardType: 'phone-pad',
+  },
+  date: {
+    ...Platform.select({
+      ios: { keyboardType: 'numeric' },
+      android: { keyboardType: 'numeric' },
+      web: { type: 'date' },
+    }),
+  },
+};
+
+const enhance = compose(
+  withTheme(),
+  pure,
+  withFocusAnimation,
+  withProps(({ type, ...props }) => ({
+    ...get(propsForInputType, type, {}),
+    ...props,
+  }))
+);
+
+const Text = enhance(
+  ({
+    label,
+    prefix,
+    suffix,
+    value,
+    wrapperStyle,
+    error,
+    disabled = false,
+    theme,
+    inputRef,
+    focusAnimation: focusAnimationInput, // from withFocusAnimation
+    ...textInputProps
+  }) => {
+    const focusAnimation =
+      value || !label ? new Animated.Value(1) : focusAnimationInput;
+
+    const animatedStyle = { opacity: focusAnimation, flex: 1 };
+
+    return (
+      <InputWrapper style={wrapperStyle} disabled={disabled}>
+        <View>
+          <AddonRow>
+            <InputAddon>{prefix}</InputAddon>
+            <Animated.View style={animatedStyle}>
+              <TextInput
+                style={textStyle({ theme })}
+                ref={inputRef}
+                placeholderTextColor={Color(theme.colors.text.primary)
+                  .fade(theme.alpha.low)
+                  .string()}
+                {...textInputProps}
+                editable={!disabled}
+                value={`${value || ''}`}
+              />
+            </Animated.View>
+            <InputAddon>{suffix}</InputAddon>
+          </AddonRow>
+
+          <FloatingLabel animation={focusAnimation}>{label}</FloatingLabel>
+          <InputUnderline
+            animation={focusAnimation}
+            hasError={Boolean(error)}
+          />
+        </View>
+
+        {error && typeof error === 'string' ? (
+          <ErrorText>{error}</ErrorText>
+        ) : null}
+      </InputWrapper>
+    );
+  }
+);
+
+Text.defaultProps = {
+  returnKeyType: 'done',
+  underlineColorAndroid: 'transparent',
+};
+
+Text.propTypes = {
+  disabled: PropTypes.bool,
+  prefix: PropTypes.node,
+  suffix: PropTypes.node,
+  label: PropTypes.string,
+  value: PropTypes.any, // eslint-disable-line
+  wrapperStyle: PropTypes.any, // eslint-disable-line
+  returnKeyType: PropTypes.string,
+  error: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),
+  underlineColorAndroid: PropTypes.string,
+  inputRef: PropTypes.func,
+};
+
+export default Text;
diff --git a/apolloschurchapp/src/ui/inputs/index.js b/apolloschurchapp/src/ui/inputs/index.js
new file mode 100644
index 0000000..d8ada5e
--- /dev/null
+++ b/apolloschurchapp/src/ui/inputs/index.js
@@ -0,0 +1,4 @@
+export Picker, { Item as PickerItem } from './Picker';
+export Switch from './Switch';
+export Text from './Text';
+export DateInput from './DateInput';
diff --git a/apolloschurchapp/src/ui/inputs/withFocusAnimation.js b/apolloschurchapp/src/ui/inputs/withFocusAnimation.js
new file mode 100644
index 0000000..5afa6d0
--- /dev/null
+++ b/apolloschurchapp/src/ui/inputs/withFocusAnimation.js
@@ -0,0 +1,61 @@
+import React, { PureComponent } from 'react';
+import { Animated, Easing } from 'react-native';
+import PropTypes from 'prop-types';
+
+// helper HOC to wrap an Input in a floating label and animated underline
+const withFocusAnimation = (Component) =>
+  class WrappedInput extends PureComponent {
+    focusAnimation = new Animated.Value(0);
+
+    static propTypes = {
+      focusAnimationDuration: PropTypes.number,
+      focusAnimationEasing: PropTypes.func,
+      onFocus: PropTypes.func,
+      onBlur: PropTypes.func,
+      value: PropTypes.any, // eslint-disable-line
+    };
+
+    static defaultProps = {
+      focusAnimationDuration: 450,
+      focusAnimationEasing: Easing.in(Easing.bezier(0.23, 1, 0.32, 1)),
+    };
+
+    playAnimation = (toValue) => {
+      Animated.timing(this.focusAnimation, {
+        toValue,
+        duration: this.props.focusAnimationDuration,
+        easing: this.props.focusAnimationEasing,
+        // useNativeDriver: true,
+      }).start();
+    };
+
+    handleFocus = (...args) => {
+      if (this.props.onFocus) this.props.onFocus(...args);
+      this.focused = true;
+      this.playAnimation(1);
+    };
+
+    handleBlur = (event, ...other) => {
+      if (this.props.onBlur) this.props.onBlur(event, ...other);
+      this.focused = false;
+      this.playAnimation(0);
+    };
+
+    render() {
+      const {
+        focusAnimationDuration,
+        focusAnimationEasing,
+        ...otherProps
+      } = this.props;
+      return (
+        <Component
+          {...otherProps}
+          onFocus={this.handleFocus}
+          onBlur={this.handleBlur}
+          focusAnimation={this.focusAnimation}
+        />
+      );
+    }
+  };
+
+export default withFocusAnimation;
diff --git a/apolloschurchapp/src/ui/inputs/withInputControlStyles.js b/apolloschurchapp/src/ui/inputs/withInputControlStyles.js
new file mode 100644
index 0000000..8dc7e0d
--- /dev/null
+++ b/apolloschurchapp/src/ui/inputs/withInputControlStyles.js
@@ -0,0 +1,19 @@
+import styled from 'apolloschurchapp/src/ui/styled';
+
+export const baseStyle = ({ theme }) => ({
+  paddingVertical: theme.sizing.baseUnit / 4,
+  height: 30 + theme.sizing.baseUnit / 2,
+});
+
+export const textStyle = ({ theme }) => ({
+  ...baseStyle({ theme }),
+  paddingVertical: 0,
+  fontSize: theme.helpers.rem(0.875),
+  fontFamily: theme.typography.sans.bold.default,
+  color: theme.colors.text.primary,
+});
+
+const withInputControlTextStyles = styled(textStyle, 'Input.Control');
+const withInputControlViewStyles = styled(baseStyle);
+
+export { withInputControlTextStyles as default, withInputControlViewStyles };
diff --git a/apolloschurchapp/src/ui/isLoading.js b/apolloschurchapp/src/ui/isLoading.js
new file mode 100644
index 0000000..7fc3c37
--- /dev/null
+++ b/apolloschurchapp/src/ui/isLoading.js
@@ -0,0 +1,21 @@
+import { branch, getContext, withContext } from 'recompose';
+import PropTypes from 'prop-types';
+
+// Both of these HOCs deal with context, therefore they should be used
+// above "pure" in a recompose `compose` chain.
+
+// Checks if the component has an "isLoading" prop.
+// If it doesn't it, it passes in context.
+// This makes easy to build components that respond to either props
+// or context for rendering placeholder / loading state.
+export const getIsLoading = branch(
+  (props) => !Object.hasOwnProperty.call(props, 'isLoading'),
+  getContext({ isLoading: PropTypes.bool })
+);
+
+// Allows a component to accept an "isLoading" prop to pass down
+// into context.
+export const withIsLoading = withContext(
+  { isLoading: PropTypes.bool },
+  ({ isLoading }) => ({ isLoading })
+);
diff --git a/apolloschurchapp/src/ui/styled/createStyleSheet.js b/apolloschurchapp/src/ui/styled/createStyleSheet.js
new file mode 100644
index 0000000..933bbb7
--- /dev/null
+++ b/apolloschurchapp/src/ui/styled/createStyleSheet.js
@@ -0,0 +1,45 @@
+import { StyleSheet } from 'react-native';
+import { flatten } from 'lodash';
+
+export const cachedStyles = {};
+export const styleHasher = JSON.stringify; // todo: how bad is this?
+
+// Uses cached or generates a new StyleSheet for a given style prop
+const createStyleSheet = (stylesToGenerate) => {
+  let styles = flatten([stylesToGenerate]); // Need to make sure we're working with a flat array
+  const styleSheet = {}; // passed to StyleSheet.create later
+
+  // Load style from cache or add style to stylesheet
+  styles.forEach((style, index) => {
+    if (typeof style !== 'object' || !style) return;
+    const hash = styleHasher(style);
+    if (cachedStyles[hash]) {
+      styles[index] = cachedStyles[hash];
+    } else {
+      styleSheet[`${index}`] = style;
+    }
+  });
+
+  if (Object.keys(styleSheet).length) {
+    // Generate the new stylesheet
+    const generatedStyleSheet = StyleSheet.create(styleSheet);
+
+    // Process the generated stylesheet
+    Object.keys(generatedStyleSheet).forEach((key) => {
+      const index = parseInt(key, 0);
+      const generatedStyle = generatedStyleSheet[key];
+      const hash = styleHasher(styles[index]);
+
+      // add generated style to cache
+      cachedStyles[hash] = generatedStyle;
+
+      // swap generated style into result list
+      styles[index] = generatedStyle;
+    });
+  }
+
+  if (styles.length === 1) styles = styles[0]; // eslint-disable-line
+  return styles;
+};
+
+export default createStyleSheet;
diff --git a/apolloschurchapp/src/ui/styled/createStyleSheet.tests.js b/apolloschurchapp/src/ui/styled/createStyleSheet.tests.js
new file mode 100644
index 0000000..34950f3
--- /dev/null
+++ b/apolloschurchapp/src/ui/styled/createStyleSheet.tests.js
@@ -0,0 +1,28 @@
+import React from 'react';
+import { View } from 'react-native';
+import renderer from 'react-test-renderer';
+
+import createStyleSheet, { cachedStyles } from './createStyleSheet';
+
+describe('the createStyleSheet function', () => {
+  it('returns styles that work on components', () => {
+    const style = createStyleSheet({ backgroundColor: 'red' });
+    const tree = renderer.create(<View style={style} />);
+    expect(tree).toMatchSnapshot();
+  });
+  it('uses a style cache when using same style twice', () => {
+    const style = { backgroundColor: 'red' };
+    const a = createStyleSheet(style);
+    const b = createStyleSheet(style);
+    expect(a).toEqual(b);
+    expect(Object.keys(cachedStyles)).toHaveLength(1);
+  });
+  it('doesnt fail when passed an already generated style', () => {
+    const style = createStyleSheet(0); // simulating StyleSheet.create() used elsewhere
+    expect(style).toEqual(0);
+  });
+  it('returns a single style if possible', () => {
+    const style = createStyleSheet([{ backgroundColor: 'red' }]);
+    expect(Array.isArray(style)).toBeFalsy();
+  });
+});
diff --git a/apolloschurchapp/src/ui/styled/index.js b/apolloschurchapp/src/ui/styled/index.js
new file mode 100644
index 0000000..376f9b9
--- /dev/null
+++ b/apolloschurchapp/src/ui/styled/index.js
@@ -0,0 +1,74 @@
+import { withPropsOnChange, compose, mapProps } from 'recompose';
+import { isEqual, get } from 'lodash';
+
+import { withTheme } from 'apolloschurchapp/src/ui/theme';
+
+import mergeStyles from './mergeStyles';
+import createStyleSheet from './createStyleSheet';
+
+// HOC to make composing component style easy.
+// Use similar to how you'd use `styled` in styled-components:
+// StyledView = styled({ backgroundColor: 'red' })(View)
+//
+// Can base style off of props:
+// StyledView = styled((props) => ({ backgroundColor: props.color }))(View)
+//
+// Or theme:
+// StyledView = styled(({ theme, ...ownProps }) => ({ backgroundColor: theme.primaryColor }))(View)
+//
+// Also allows for style overriding:
+// <StyledView style={{ borderColor: 'red' }} />
+//
+// Or using with ReactNative.StyleSheet:
+// const styles = StyleSheet.create({ myStyle: { backgroundColor: 'red' }});
+// StyledView = styled(styles.myStyle)(View)
+//
+// However - `styled` uses ReactNative.StyleSheet under the hood, so no need to create
+// separate stylesheets:
+// StyledView = styled((props) => ({ backgroundColor: props.color }))(View)
+// Will create a stylesheet for { backgroundColor: props.color } internally and cache it!
+
+// Generates a style object from a given styleInput.
+// styleInput is the argument passed to `styled`
+const getStyleLiteralFromStyledInput = (
+  styleInput,
+  { ownProps = {}, theme = {} }
+) => {
+  let generatedStyle = styleInput;
+  if (typeof generatedStyle === 'function')
+    generatedStyle = generatedStyle({ theme, ...ownProps });
+  return generatedStyle;
+};
+
+const styled = (styleInput, fqn) =>
+  compose(
+    mapProps((props) => ({ ownProps: props })),
+    withTheme(({ theme }) => ({ theme })),
+    withPropsOnChange(
+      // Only re-eval styles if style prop changes, or the generated style from
+      // styleInput is different. Both of these checks should be exteremely cheap.
+      (props, nextProps) =>
+        props.ownProps.style !== nextProps.ownProps.style ||
+        !isEqual(
+          getStyleLiteralFromStyledInput(styleInput, props),
+          getStyleLiteralFromStyledInput(styleInput, nextProps)
+        ),
+      ({ ownProps, theme }) => {
+        let style = getStyleLiteralFromStyledInput(styleInput, {
+          ownProps,
+          theme,
+        });
+
+        const themeOverrides = fqn ? get(theme, `overrides['${fqn}']`, {}) : {};
+        const { style: ownPropsStyle = {} } = ownProps;
+
+        style = mergeStyles(style, themeOverrides, ownPropsStyle);
+        style = createStyleSheet(style);
+
+        return { style };
+      }
+    ),
+    mapProps(({ ownProps, style }) => ({ ...ownProps, style }))
+  );
+
+export default styled;
diff --git a/apolloschurchapp/src/ui/styled/mergeStyles.js b/apolloschurchapp/src/ui/styled/mergeStyles.js
new file mode 100644
index 0000000..d068b56
--- /dev/null
+++ b/apolloschurchapp/src/ui/styled/mergeStyles.js
@@ -0,0 +1,35 @@
+import { flattenDeep } from 'lodash';
+
+// Merges two or more styles into one style object or array
+const mergeStyles = (...stylesToMerge) =>
+  flattenDeep(stylesToMerge).reduce((accumulatedStyle, currentStyle) => {
+    let style = accumulatedStyle;
+    const styleRight = currentStyle;
+
+    if (!styleRight && typeof styleRight !== 'number') return accumulatedStyle;
+
+    // both styles are objects, we should turn them into a single object:
+    if (
+      typeof style === 'object' &&
+      !Array.isArray(style) &&
+      !Array.isArray(styleRight) &&
+      typeof styleRight === 'object'
+    ) {
+      style = Object.assign({}, style, styleRight);
+
+      // styles can't be merged automatically, result to joining them in an array
+    } else {
+      if (!Array.isArray(style)) {
+        style = [style];
+      }
+
+      if (Array.isArray(styleRight)) {
+        style = style.concat(styleRight);
+      } else {
+        style.push(styleRight);
+      }
+    }
+    return style;
+  });
+
+export default mergeStyles;
diff --git a/apolloschurchapp/src/ui/styled/mergeStyles.tests.js b/apolloschurchapp/src/ui/styled/mergeStyles.tests.js
new file mode 100644
index 0000000..4719577
--- /dev/null
+++ b/apolloschurchapp/src/ui/styled/mergeStyles.tests.js
@@ -0,0 +1,42 @@
+import mergeStyles from './mergeStyles';
+
+describe('the mergeStyles function', () => {
+  it('merges two style objects into one array', () => {
+    const styleOne = { a: '1' };
+    const styleTwo = { b: '2' };
+    const merged = mergeStyles(styleOne, styleTwo);
+    expect(merged).toEqual({ a: '1', b: '2' });
+  });
+  it('maintains expected order', () => {
+    const merged = mergeStyles(1, 2, 3);
+    expect(merged).toEqual([1, 2, 3]);
+  });
+  it('handles null styles', () => {
+    const merged = mergeStyles(43, null);
+    expect(merged).toEqual(43);
+  });
+  it('merges mixed array of objects and objects to one style object', () => {
+    const styleOne = [{ c: '2' }, { a: '1' }];
+    const styleTwo = { b: '1' };
+    const merged = mergeStyles(styleOne, styleTwo);
+    expect(merged).toEqual({ c: '2', a: '1', b: '1' });
+  });
+  it('merges mixed types and maintains correct style order', () => {
+    const styleOne = [{ a: '1' }, { a: '2' }];
+    const styleTwo = { a: '3' };
+    const merged = mergeStyles(styleOne, styleTwo);
+    expect(merged).toEqual({ a: '3' });
+  });
+  it('results in a flat array of styles', () => {
+    const styleOne = [[[1, 2]], { a: '1' }, [3, 4]];
+    const styleTwo = [{ b: '2' }, [[5, 6]]];
+    const merged = mergeStyles(styleOne, styleTwo);
+    expect(merged).toEqual([1, 2, { a: '1' }, 3, 4, { b: '2' }, 5, 6]);
+  });
+  it('handles triple nested arrays', () => {
+    const styleOne = [[[{ a: '1' }, { a: '2' }]]];
+    const styleTwo = [[[{ b: '1' }, { b: '2' }]]];
+    const merged = mergeStyles(styleOne, styleTwo);
+    expect(merged).toEqual({ a: '2', b: '2' });
+  });
+});
diff --git a/apolloschurchapp/src/ui/styled/styled.tests.js b/apolloschurchapp/src/ui/styled/styled.tests.js
new file mode 100644
index 0000000..e165fb3
--- /dev/null
+++ b/apolloschurchapp/src/ui/styled/styled.tests.js
@@ -0,0 +1,57 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+import { compose } from 'recompose';
+import { View } from 'react-native';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import styled from '.';
+
+describe('the styled HOC', () => {
+  it('passes style literal to the base component', () => {
+    const StyledView = styled({ backgroundColor: 'red' })(View);
+    const tree = renderer.create(<StyledView />);
+    expect(tree).toMatchSnapshot();
+  });
+  it('supports multiple styles, and keeps the correct order', () => {
+    const StyledView = compose(
+      styled({ backgroundColor: 'red' }),
+      styled({ borderColor: 'green' })
+    )(View);
+
+    const customStyle = { height: 100 };
+
+    const tree = renderer.create(<StyledView style={customStyle} />);
+    expect(tree).toMatchSnapshot();
+  });
+  it('should accept a function, works with props', () => {
+    const StyledView = styled(({ color }) => ({ backgroundColor: color }))(
+      View
+    );
+    const tree = renderer.create(<StyledView color="green" />);
+    expect(tree).toMatchSnapshot();
+  });
+  it('provides a theme', () => {
+    const StyledView = styled(({ theme }) => ({
+      backgroundColor: theme.colors.primary,
+    }))(View);
+    const tree = renderer.create(
+      <Providers>
+        <StyledView />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('allows a theme to supply overrides', () => {
+    const StyledView = styled(() => ({ backgroundColor: 'red' }), 'StyledView')(
+      View
+    );
+    const overrides = { StyledView: { backgroundColor: 'green' } };
+    const tree = renderer.create(
+      <Providers themeInput={{ overrides }}>
+        <StyledView />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/theme/ThemeProvider.js b/apolloschurchapp/src/ui/theme/ThemeProvider.js
new file mode 100644
index 0000000..4dd21e7
--- /dev/null
+++ b/apolloschurchapp/src/ui/theme/ThemeProvider.js
@@ -0,0 +1,30 @@
+import { PureComponent, Children } from 'react';
+import PropTypes from 'prop-types';
+
+import createTheme, { THEME_PROPS } from './createTheme';
+
+export default class ThemeProvider extends PureComponent {
+  static propTypes = {
+    children: PropTypes.node,
+    themeInput: PropTypes.shape(THEME_PROPS),
+  };
+
+  static childContextTypes = {
+    theme: PropTypes.shape(THEME_PROPS),
+    themeInput: PropTypes.shape(THEME_PROPS),
+  };
+
+  static defaultProps = {
+    children: null,
+    themeInput: {},
+  };
+
+  getChildContext = () => ({
+    theme: createTheme(this.props.themeInput),
+    themeInput: this.props.themeInput,
+  });
+
+  render() {
+    return Children.only(this.props.children);
+  }
+}
diff --git a/apolloschurchapp/src/ui/theme/createTheme.js b/apolloschurchapp/src/ui/theme/createTheme.js
new file mode 100644
index 0000000..2192c7e
--- /dev/null
+++ b/apolloschurchapp/src/ui/theme/createTheme.js
@@ -0,0 +1,80 @@
+import { merge, mapValues } from 'lodash';
+import PropTypes from 'prop-types';
+
+import * as defaultTheme from './defaultTheme';
+
+const {
+  colors,
+  typography,
+  breakpoints,
+  sizing,
+  type,
+  types,
+  alpha,
+  ...otherThemeDefaults
+} = defaultTheme;
+
+// Some parts of the theme are stored as functions (such as `shadows` and `helpers`),
+// that depend on the given theme to compute. This processes these parts into objects
+// so we can merge a clean object. It's recursive and fairly abstract for flexibility.
+export const getDynamicThemePart = (part, theme) => {
+  if (typeof part === 'function') return part(theme);
+  if (Array.isArray(part))
+    return part.map((item) => getDynamicThemePart(item, theme));
+  if (typeof part === 'object')
+    return mapValues(part, (value) => getDynamicThemePart(value, theme));
+  return part;
+};
+
+const createTheme = ({
+  colors: colorsInput = {},
+  typography: typographyInput = {},
+  breakpoints: breakpointsInput = {},
+  sizing: sizingInput = {},
+  type: typeInput = type,
+  types: typesInput = {},
+  alpha: alphaInput = {},
+  ...other
+} = {}) => {
+  // compose base theme
+  const theme = {
+    colors: merge({}, colors, colorsInput),
+    typography: merge({}, typography, typographyInput),
+    breakpoints: merge({}, breakpoints, breakpointsInput),
+    sizing: merge({}, sizing, sizingInput),
+    alpha: merge({}, alpha, alphaInput),
+    type: typeInput.toLowerCase(),
+  };
+
+  // inject theme type
+  merge(theme, getDynamicThemePart({ types }, theme));
+  merge(theme, getDynamicThemePart({ types: typesInput }, theme));
+  const availableTypes = theme.types;
+  if (!availableTypes[theme.type])
+    throw new Error(`The theme type ${theme.type} is not supported`);
+
+  merge(theme, availableTypes[typeInput], { colors: colorsInput });
+
+  // mixin other theme defaults (that might depend on base theme)
+  merge(theme, getDynamicThemePart(otherThemeDefaults, theme));
+
+  // mixin other theme inputs (that might depend on base theme)
+  merge(theme, getDynamicThemePart(other, theme));
+  return theme;
+};
+
+export const THEME_PROPS = {
+  colors: PropTypes.object,
+  typography: PropTypes.object,
+  breakpoints: PropTypes.shape({
+    xs: PropTypes.number,
+    sm: PropTypes.number,
+    md: PropTypes.number,
+    lg: PropTypes.number,
+  }),
+  sizing: PropTypes.object,
+  helpers: PropTypes.object,
+  overrides: PropTypes.object,
+};
+
+export default createTheme;
diff --git a/apolloschurchapp/src/ui/theme/createTheme.tests.js b/apolloschurchapp/src/ui/theme/createTheme.tests.js
new file mode 100644
index 0000000..a01712e
--- /dev/null
+++ b/apolloschurchapp/src/ui/theme/createTheme.tests.js
@@ -0,0 +1,73 @@
+import createTheme, { getDynamicThemePart } from './createTheme';
+import * as defaultTheme from './defaultTheme';
+
+describe('createTheme', () => {
+  it('has a colors', () => {
+    const theme = createTheme();
+    expect(theme).toHaveProperty('colors');
+  });
+
+  it('has a custom colors', () => {
+    const customColors = { primary: 'red', otherColor: 'green' };
+    const theme = createTheme({ colors: customColors });
+    expect(theme.colors).toMatchSnapshot();
+  });
+
+  it('has typography', () => {
+    const theme = createTheme();
+    expect(theme).toHaveProperty('typography');
+  });
+
+  it('has custom typography', () => {
+    const custom = { baseFontSize: '24', otherProp: true };
+    const theme = createTheme({ typography: custom });
+    expect(theme.typography).toMatchSnapshot();
+  });
+
+  it('has helper functions and allows for custom helper functions', () => {
+    const custom = { myFunc: () => () => 'yay!' };
+    const theme = createTheme({ helpers: custom });
+    expect(theme.helpers.rem(1)).toEqual(defaultTheme.typography.baseFontSize);
+    expect(theme.helpers.verticalRhythm(1)).toEqual(
+      defaultTheme.typography.baseLineHeight
+    );
+    expect(theme.helpers.myFunc()).toEqual('yay!');
+  });
+
+  it('allows adding in custom theme properties', () => {
+    const custom = {
+      overrides: { MyComponent: { some: 'style' } },
+    };
+    const theme = createTheme(custom);
+    expect(theme).toMatchSnapshot();
+  });
+
+  it('switches to a dark theme', () => {
+    const theme = createTheme({ type: 'dark' });
+    expect(theme).toMatchSnapshot();
+  });
+  it('throws an error for an unsupported theme type', () => {
+    const theme = () => createTheme({ type: 'Boom' });
+    expect(theme).toThrowErrorMatchingSnapshot();
+  });
+
+  describe('getDynamicThemePart', () => {
+    it('parses types in theme object', () => {
+      const result = getDynamicThemePart(
+        { types: defaultTheme.types },
+        defaultTheme
+      );
+      expect(result.types).toEqual(
+        expect.objectContaining({
+          light: expect.objectContaining({
+            colors: expect.objectContaining({
+              text: expect.objectContaining({
+                primary: expect.any(String),
+              }),
+            }),
+          }),
+        })
+      );
+    });
+  });
+});
diff --git a/apolloschurchapp/src/ui/theme/defaultTheme.js b/apolloschurchapp/src/ui/theme/defaultTheme.js
new file mode 100644
index 0000000..a2e170a
--- /dev/null
+++ b/apolloschurchapp/src/ui/theme/defaultTheme.js
@@ -0,0 +1,188 @@
+import fontStack from './fontStack';
+import * as types from './types';
+
+/**
+ * There are two parts to a theme:
+ * 1. The `input` that is used to generate a theme,
+ * 2. The generated `theme` that is consumed by components
+ *
+ * The structure of both parts are essentially the same, except
+ * with the generated `theme` having more detail.
+ *
+ * This file exposes the default values that are used in
+ * theme generation that you might want to customize.
+ *
+ * To customize these values, provide theme as options in the `themeInput`
+ * prop in <ThemeProvider>, like:
+ * <ThemeProvider themeInput={{ colors: { primary: 'blue' }, type: 'dark' }} />
+ *
+ * For more detail on how to customize a theme, see (TODO: should be on storybook)
+ */
+
+// Base colors.
+// These get used by theme types (see /types directory) to color
+// specific parts of the interface. For more control on how certain
+// elements are colored, go there. The next level of control comes
+// on a per-component basis with "overrides"
+export const colors = {
+  primary: '#00676D',
+  secondary: '#17B582',
+  tertiary: '#6EC5B8',
+  screen: '#F8F7F4',
+  paper: '#FFFFFF',
+  alert: '#c64f55',
+
+  // Dark shades
+  darkPrimary: '#303030',
+  darkSecondary: '#505050',
+  darkTertiary: '#A5A5A5',
+
+  // Light shades
+  lightPrimary: '#F8F7F4',
+  lightSecondary: '#DBDBD9',
+  lightTertiary: '#A5A5A5',
+
+  // Statics
+  black: '#000000',
+  white: '#FFFFFF',
+  transparent: 'transparent',
+  wordOfChrist: '#8b0000', // only used in Scripture.
+};
+
+/* Base Typography sizing and fonts.
+ *
+ * To control speicfic styles used on different type components (like H1, H2, etc), see "overrides"
+ */
+export const typography = {
+  baseFontSize: 16,
+  baseLineHeight: 23.04, // 1.44 ratio
+  ...fontStack,
+};
+
+// Responsive breakpoints
+export const breakpoints = {
+  xs: 320,
+  sm: 496,
+  md: 800,
+  lg: 1200,
+};
+
+// Base sizing units. These are used to scale
+// space, and size components relatively to one another.
+export const sizing = {
+  baseUnit: 16,
+  avatar: {
+    small: 40,
+    medium: 80,
+    large: 160,
+  },
+};
+
+export const alpha = {
+  high: 0.9,
+  medium: 0.7,
+  low: 0.4,
+};
+
+/**
+ * Dynamic theme parts
+ * The sections below define some of the dynamic
+ * components to a theme. You can still override them,
+ * but if you modify only the values above, the values below
+ * will be updated to reflect your customizations.
+ *
+ * The available theme types get included into the theme, and the active theme type gets merged into
+ * the theme. This allows for switching of theme values between different color palettes. The theme
+ * types included by default are "light" and "dark". But, you could add your own theme types
+ * (ex: "kids", with a more vibrant set of colors). Most of the colors that a component uses should
+ * come from the active type, not from the base colors above. For example, notice below how
+ * `shadows` gets the shadowColor from `colors.shadows`, which is provided by the active theme type.
+ */
+export const type = 'light';
+export { types };
+
+export const shadows = ({ colors: themeColors }) => ({
+  default: {
+    ios: {
+      shadowColor: themeColors.shadows.default,
+      shadowOffset: {
+        width: 0,
+        height: 1,
+      },
+      shadowOpacity: 1,
+      shadowRadius: 6,
+    },
+    android: {
+      elevation: 5,
+    },
+  },
+});
+
+export const buttons = ({ colors: themeColors }) => ({
+  default: {
+    fill: themeColors.action.default,
+    accent: themeColors.text.primary,
+  },
+  primary: {
+    fill: themeColors.action.primary,
+    accent: themeColors.white,
+  },
+  secondary: {
+    fill: themeColors.action.secondary,
+    accent: themeColors.white,
+  },
+  tertiary: {
+    fill: themeColors.action.tertiary,
+    accent: themeColors.white,
+  },
+  ghost: {
+    fill: themeColors.text.primary,
+    accent: themeColors.text.primary,
+  },
+  alert: {
+    fill: themeColors.alert,
+    accent: themeColors.white,
+  },
+});
+
+/*
+ * Helpers make it easy to expose simple utils in your theme that rely on the current theme to
+ * compute its value. They should be a function that takes a single argument - the current theme,
+ * and returns a function that gets injected into the theme.
+ */
+export const helpers = {};
+
+helpers.rem = (theme) => (units) => {
+  const value = units * theme.typography.baseFontSize;
+  return +value.toFixed(2);
+};
+
+/*
+* Vertical rhythm method of spacing objects (typically typographic elements) based on a predefined
+* ratio. A popular ratio that is often used would be something like the Golden Ratio. With the
+* Golden Ratio as an example, all elment spacing on the page is a multiplied derivitive of that
+* ratio resulting in a rhthmic spacing. This is often used in typography to set line heights and
+* vertical paddings. The helper function below takes a `rem` unit (often a font size but not always)
+* and multiplies it by either a custom ratio or a derrived ratio from the themes `baseLineHeight`
+* devided by the `baseFontSize`.
+*/
+helpers.verticalRhythm = (theme) => (units, customRatio) => {
+  const verticalRatio =
+    customRatio ||
+    theme.typography.baseLineHeight / theme.typography.baseFontSize;
+  return helpers.rem(theme)(verticalRatio * units);
+};
+
+// Overrides allow you to override the styles of any component styled using the `styled` HOC.
+// For example, this component:
+// const SomeComponent = styled({ margin: 10, padding: 20 }, 'SomeComponent');
+// can have its styles overriden by including in overrides:
+// {
+//   overides: {
+//     SomeComponent: {
+//       margin: 5,
+//       padding: 15,
+//     },
+//   },
+// }
+export const overrides = {};
diff --git a/apolloschurchapp/src/ui/theme/fontStack/index.android.js b/apolloschurchapp/src/ui/theme/fontStack/index.android.js
new file mode 100644
index 0000000..097c09d
--- /dev/null
+++ b/apolloschurchapp/src/ui/theme/fontStack/index.android.js
@@ -0,0 +1,35 @@
+const fontStack = {
+  sans: {
+    regular: {
+      default: 'Inter-UI-Regular',
+      italic: 'Inter-UI-Italic',
+    },
+    medium: {
+      default: 'Inter-UI-Medium',
+      italic: 'Inter-UI-MediumItalic',
+    },
+    bold: {
+      default: 'Inter-UI-Bold',
+      italic: 'Inter-UI-BoldItalic',
+    },
+    black: {
+      default: 'Inter-UI-Black',
+      italic: 'Inter-UI-BlackItalic',
+    },
+  },
+  serif: {
+    regular: {
+      default: 'DroidSerif-Regular',
+      italic: 'DroidSerif-Italic',
+    },
+    bold: {
+      default: 'DroidSerif-Bold',
+      italic: 'DroidSerif-BoldItalic',
+    },
+  },
+  ui: {
+    regular: 'sans-serif',
+  },
+};
+
+export default fontStack;
diff --git a/apolloschurchapp/src/ui/theme/fontStack/index.ios.js b/apolloschurchapp/src/ui/theme/fontStack/index.ios.js
new file mode 100644
index 0000000..7242fe0
--- /dev/null
+++ b/apolloschurchapp/src/ui/theme/fontStack/index.ios.js
@@ -0,0 +1,35 @@
+const fontStack = {
+  sans: {
+    regular: {
+      default: 'InterUI-Regular',
+      italic: 'InterUI-Italic',
+    },
+    medium: {
+      default: 'InterUI-Medium',
+      italic: 'InterUI-MediumItalic',
+    },
+    bold: {
+      default: 'InterUI-Bold',
+      italic: 'InterUI-BoldItalic',
+    },
+    black: {
+      default: 'InterUI-Black',
+      italic: 'InterUI-BlackItalic',
+    },
+  },
+  serif: {
+    regular: {
+      default: 'DroidSerif',
+      italic: 'DroidSerif-Italic',
+    },
+    bold: {
+      default: 'DroidSerif-Bold',
+      italic: 'DroidSerif-BoldItalic',
+    },
+  },
+  ui: {
+    regular: 'System',
+  },
+};
+
+export default fontStack;
diff --git a/apolloschurchapp/src/ui/theme/index.js b/apolloschurchapp/src/ui/theme/index.js
new file mode 100644
index 0000000..5c0bbd7
--- /dev/null
+++ b/apolloschurchapp/src/ui/theme/index.js
@@ -0,0 +1,3 @@
+export { default as ThemeProvider } from './ThemeProvider';
+export { default as withTheme } from './withTheme';
+export { ThemeMixin, withThemeMixin } from './mixins';
diff --git a/apolloschurchapp/src/ui/theme/mixins.js b/apolloschurchapp/src/ui/theme/mixins.js
new file mode 100644
index 0000000..a9739aa
--- /dev/null
+++ b/apolloschurchapp/src/ui/theme/mixins.js
@@ -0,0 +1,38 @@
+import { compose, mapProps, withContext } from 'recompose';
+import PropTypes from 'prop-types';
+import { merge } from 'lodash';
+
+import withTheme from './withTheme';
+import createTheme, { THEME_PROPS } from './createTheme';
+
+const withThemeMixin = (themeInput) =>
+  compose(
+    mapProps((props) => ({ ownProps: props })),
+    withTheme(),
+    withContext(
+      {
+        theme: PropTypes.shape(THEME_PROPS),
+        themeInput: PropTypes.shape(THEME_PROPS),
+      },
+      ({ theme, themeInput: originalThemeInput, ownProps }) => {
+        let themeInputAsObject = themeInput;
+        if (typeof themeInput === 'function') {
+          themeInputAsObject = themeInput({ ...ownProps, theme });
+        }
+        themeInputAsObject = merge(originalThemeInput, themeInputAsObject);
+
+        const themeWithMixin = createTheme(themeInputAsObject);
+        return {
+          theme: themeWithMixin,
+          themeInput: themeInputAsObject,
+        };
+      }
+    ),
+    mapProps(({ ownProps }) => ownProps)
+  );
+
+const ThemeMixin = withThemeMixin(({ mixin = {} } = {}) => mixin)(
+  ({ children }) => children
+);
+
+export { withThemeMixin, ThemeMixin };
diff --git a/apolloschurchapp/src/ui/theme/mixins.tests.js b/apolloschurchapp/src/ui/theme/mixins.tests.js
new file mode 100644
index 0000000..7b76e92
--- /dev/null
+++ b/apolloschurchapp/src/ui/theme/mixins.tests.js
@@ -0,0 +1,58 @@
+/* eslint-disable */
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import FlexedView from 'apolloschurchapp/src/ui/FlexedView';
+import { H3, H6, BodyText } from 'apolloschurchapp/src/ui/typography';
+
+import { ThemeProvider } from './';
+import { withThemeMixin } from './mixins';
+
+const TypeExample = () => (
+  <FlexedView>
+    <H3>Hi there!</H3>
+    <H6>Lorem ipsum dolor sit amet.</H6>
+    <BodyText>
+      Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque sodales
+      sit amet ante eu lobortis. In vitae faucibus lectus, at interdum nibh.
+      Fusce suscipit tincidunt justo, vitae cursus mi fermentum eget.
+    </BodyText>
+  </FlexedView>
+);
+
+const DarkTypeExample = withThemeMixin({
+  type: 'dark',
+})(TypeExample);
+
+const TypeExampleWithProps = withThemeMixin(({ color, isLight = true }) => ({
+  type: isLight ? 'light' : 'dark',
+  colors: {
+    primary: color,
+  },
+}))(TypeExample);
+
+describe('withThemeMixin', () => {
+  it('overrides styles without affecting siblings', () => {
+    const tree = renderer.create(
+      <ThemeProvider>
+        <FlexedView>
+          <TypeExample />
+          <DarkTypeExample />
+          <TypeExample />
+        </FlexedView>
+      </ThemeProvider>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('works with dynamic props', () => {
+    const tree = renderer.create(
+      <ThemeProvider>
+        <FlexedView>
+          <TypeExampleWithProps isLight color="red" />
+          <TypeExampleWithProps isLight={false} color="blue" />
+        </FlexedView>
+      </ThemeProvider>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/theme/theme.stories.js b/apolloschurchapp/src/ui/theme/theme.stories.js
new file mode 100644
index 0000000..0127758
--- /dev/null
+++ b/apolloschurchapp/src/ui/theme/theme.stories.js
@@ -0,0 +1,73 @@
+/* eslint-disable */
+import React from 'react';
+import { storiesOf } from '@storybook/react-native';
+
+import FlexedView from 'apolloschurchapp/src/ui/FlexedView';
+import { H3, H6, BodyText } from 'apolloschurchapp/src/ui/typography';
+
+import { ThemeProvider, ThemeMixin, withThemeMixin } from './';
+
+const TypeExample = () => (
+  <FlexedView>
+    <H3>Hi there!</H3>
+    <H6>Lorem ipsum dolor sit amet.</H6>
+    <BodyText>
+      Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque sodales
+      sit amet ante eu lobortis. In vitae faucibus lectus, at interdum nibh.
+      Fusce suscipit tincidunt justo, vitae cursus mi fermentum eget.
+    </BodyText>
+  </FlexedView>
+);
+
+const DarkTypeExample = withThemeMixin({
+  type: 'dark',
+})(TypeExample);
+
+const TypeExampleWithProps = withThemeMixin(({ color, isLight = true }) => ({
+  type: isLight ? 'light' : 'dark',
+  colors: {
+    primary: color,
+  },
+}))(TypeExample);
+
+storiesOf('Theming', module)
+  .add('ThemeProvider - default', () => (
+    <ThemeProvider>
+      <TypeExample />
+    </ThemeProvider>
+  ))
+  .add('ThemeProvider - dark theme', () => (
+    <ThemeProvider
+      themeInput={{
+        type: 'dark',
+      }}
+    >
+      <TypeExample />
+    </ThemeProvider>
+  ))
+  .add('ThemeMixin', () => (
+    <ThemeProvider>
+      <FlexedView>
+        <TypeExample />
+        <ThemeMixin mixin={{ type: 'dark' }}>
+          <TypeExample />
+        </ThemeMixin>
+      </FlexedView>
+    </ThemeProvider>
+  ))
+  .add('withThemeMixin', () => (
+    <ThemeProvider>
+      <FlexedView>
+        <TypeExample />
+        <DarkTypeExample />
+      </FlexedView>
+    </ThemeProvider>
+  ))
+  .add('withThemeMixin using props', () => (
+    <ThemeProvider>
+      <FlexedView>
+        <TypeExampleWithProps isLight color="red" />
+        <TypeExampleWithProps isLight={false} color="blue" />
+      </FlexedView>
+    </ThemeProvider>
+  ));
diff --git a/apolloschurchapp/src/ui/theme/types/dark.js b/apolloschurchapp/src/ui/theme/types/dark.js
new file mode 100644
index 0000000..d1bf211
--- /dev/null
+++ b/apolloschurchapp/src/ui/theme/types/dark.js
@@ -0,0 +1,33 @@
+import Color from 'color';
+
+const dark = ({ colors, alpha }) => ({
+  colors: {
+    text: {
+      primary: colors.lightPrimary,
+      secondary: colors.lightSecondary,
+      tertiary: colors.lightTertiary,
+      link: colors.secondary,
+    },
+    background: {
+      screen: colors.screen,
+      paper: colors.paper,
+      accent: Color(colors.darkTertiary)
+        .fade(alpha.high)
+        .string(),
+      inactive: colors.darkTertiary,
+    },
+    shadows: {
+      default: Color(colors.darkTertiary)
+        .fade(alpha.medium)
+        .string(),
+    },
+    action: {
+      default: colors.darkTertiary,
+      primary: colors.primary,
+      secondary: colors.secondary,
+      tertiary: colors.tertiary,
+    },
+  },
+});
+
+export default dark;
diff --git a/apolloschurchapp/src/ui/theme/types/index.js b/apolloschurchapp/src/ui/theme/types/index.js
new file mode 100644
index 0000000..0593895
--- /dev/null
+++ b/apolloschurchapp/src/ui/theme/types/index.js
@@ -0,0 +1,2 @@
+export { default as dark } from './dark';
+export { default as light } from './light';
diff --git a/apolloschurchapp/src/ui/theme/types/light.js b/apolloschurchapp/src/ui/theme/types/light.js
new file mode 100644
index 0000000..d343f2a
--- /dev/null
+++ b/apolloschurchapp/src/ui/theme/types/light.js
@@ -0,0 +1,33 @@
+import Color from 'color';
+
+const light = ({ colors, alpha }) => ({
+  colors: {
+    text: {
+      primary: colors.darkPrimary,
+      secondary: colors.darkSecondary,
+      tertiary: colors.darkTertiary,
+      link: colors.secondary,
+    },
+    background: {
+      screen: colors.screen,
+      paper: colors.paper,
+      accent: Color(colors.lightTertiary)
+        .fade(alpha.high)
+        .string(),
+      inactive: colors.lightTertiary,
+    },
+    shadows: {
+      default: Color(colors.darkTertiary)
+        .fade(alpha.medium)
+        .string(),
+    },
+    action: {
+      default: colors.lightTertiary,
+      primary: colors.primary,
+      secondary: colors.secondary,
+      tertiary: colors.tertiary,
+    },
+  },
+});
+
+export default light;
diff --git a/apolloschurchapp/src/ui/theme/withTheme.js b/apolloschurchapp/src/ui/theme/withTheme.js
new file mode 100644
index 0000000..4208ffd
--- /dev/null
+++ b/apolloschurchapp/src/ui/theme/withTheme.js
@@ -0,0 +1,20 @@
+import PropTypes from 'prop-types';
+import { compose, mapProps, getContext, hoistStatics } from 'recompose';
+
+import { THEME_PROPS } from './createTheme';
+
+const DEFAULT_MAPPER_FN = ({ theme } = {}) => ({ theme });
+
+export default function(mapperFn = DEFAULT_MAPPER_FN) {
+  return hoistStatics(
+    compose(
+      getContext({
+        theme: PropTypes.shape(THEME_PROPS),
+      }),
+      mapProps(({ theme, ...otherProps }) => ({
+        ...otherProps,
+        ...mapperFn({ theme, ...otherProps }),
+      }))
+    )
+  );
+}
diff --git a/apolloschurchapp/src/ui/typography/BlockQuote/BlockQuote.stories.js b/apolloschurchapp/src/ui/typography/BlockQuote/BlockQuote.stories.js
new file mode 100644
index 0000000..901a99c
--- /dev/null
+++ b/apolloschurchapp/src/ui/typography/BlockQuote/BlockQuote.stories.js
@@ -0,0 +1,31 @@
+import React from 'react';
+import { storiesOf } from '@storybook/react-native';
+
+import { withIsLoading } from 'apolloschurchapp/src/ui/isLoading';
+import PaddedView from 'apolloschurchapp/src/ui/PaddedView';
+
+import BlockQuote from '.';
+
+storiesOf('typography/BlockQuote', module)
+  .add('Default', () => (
+    <PaddedView>
+      <BlockQuote>
+        {
+          '"You are the only Bible some unbelievers will ever read." – John MacArthur'
+        }
+      </BlockQuote>
+    </PaddedView>
+  ))
+  .add('isLoading', () => {
+    const SetIsLoading = withIsLoading(PaddedView);
+
+    return (
+      <SetIsLoading isLoading>
+        <BlockQuote>
+          {
+            '"You are the only Bible some unbelievers will ever read." – John MacArthur'
+          }
+        </BlockQuote>
+      </SetIsLoading>
+    );
+  });
diff --git a/apolloschurchapp/src/ui/typography/BlockQuote/BlockQuote.tests.js b/apolloschurchapp/src/ui/typography/BlockQuote/BlockQuote.tests.js
new file mode 100644
index 0000000..071031c
--- /dev/null
+++ b/apolloschurchapp/src/ui/typography/BlockQuote/BlockQuote.tests.js
@@ -0,0 +1,50 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+import { H5 } from 'apolloschurchapp/src/ui/typography';
+import { withIsLoading } from 'apolloschurchapp/src/ui/isLoading';
+
+import BlockQuote from '.';
+
+describe('the BlockQuote component', () => {
+  it('should render a string', () => {
+    const tree = renderer.create(
+      <Providers>
+        <BlockQuote>
+          {
+            '"You are the only Bible some unbelievers will ever read." – John MacArthur'
+          }
+        </BlockQuote>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render child components', () => {
+    const tree = renderer.create(
+      <Providers>
+        <BlockQuote>
+          <H5>
+            {
+              '"You are the only Bible some unbelievers will ever read." – John MacArthur'
+            }
+          </H5>
+        </BlockQuote>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a loading state', () => {
+    const BlockQuoteLoadingState = withIsLoading(BlockQuote);
+    const tree = renderer.create(
+      <Providers>
+        <BlockQuoteLoadingState isLoading>
+          {
+            '"You are the only Bible some unbelievers will ever read." – John MacArthur'
+          }
+        </BlockQuoteLoadingState>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/typography/BlockQuote/index.js b/apolloschurchapp/src/ui/typography/BlockQuote/index.js
new file mode 100644
index 0000000..6b02d31
--- /dev/null
+++ b/apolloschurchapp/src/ui/typography/BlockQuote/index.js
@@ -0,0 +1,45 @@
+import React from 'react';
+import { compose, setDisplayName, pure } from 'recompose';
+import PropTypes from 'prop-types';
+import { StyleSheet, View } from 'react-native';
+
+import styled from 'apolloschurchapp/src/ui/styled';
+import { withThemeMixin } from 'apolloschurchapp/src/ui/theme';
+import { BodyText } from 'apolloschurchapp/src/ui/typography';
+
+const Block = compose(
+  setDisplayName('BlockQuote'),
+  styled(({ theme }) => ({
+    alignSelf: 'stretch',
+    marginVertical: theme.helpers.verticalRhythm(2),
+    paddingVertical: theme.helpers.verticalRhythm(1.5),
+    paddingHorizontal: theme.sizing.baseUnit,
+    borderTopWidth: StyleSheet.hairlineWidth,
+    borderBottomWidth: StyleSheet.hairlineWidth,
+    borderColor: theme.colors.text.tertiary,
+  })),
+  // Forced <BodyText> to inherit QuoteText styles.
+  // This is necessary for HTMLView to properly style <blockquote>'s 😥
+  withThemeMixin(({ theme }) => ({
+    overrides: {
+      BodyText: {
+        fontFamily: theme.typography.sans.regular.italic,
+        textAlign: 'center',
+        color: theme.colors.text.primary,
+      },
+    },
+  }))
+)(View);
+
+const BlockQuote = pure(({ children }) => (
+  <Block>
+    {typeof children === 'string' ? <BodyText>{children}</BodyText> : children}
+  </Block>
+));
+
+BlockQuote.propTypes = {
+  children: PropTypes.node,
+  isLoading: PropTypes.bool,
+};
+
+export default BlockQuote;
diff --git a/apolloschurchapp/src/ui/typography/BodyText/BodyText.stories.js b/apolloschurchapp/src/ui/typography/BodyText/BodyText.stories.js
new file mode 100644
index 0000000..8782907
--- /dev/null
+++ b/apolloschurchapp/src/ui/typography/BodyText/BodyText.stories.js
@@ -0,0 +1,56 @@
+import React from 'react';
+import { View } from 'react-native';
+import { storiesOf } from '@storybook/react-native';
+
+import BodyText from '.';
+
+storiesOf('typography/BodyText', module)
+  .add('Regular', () => (
+    <BodyText>
+      {
+        '"True faith means holding nothing back. It means putting every hope in God\'s fidelity to His Promises." ― Francis Chan'
+      }
+    </BodyText>
+  ))
+  .add('Bold', () => (
+    <BodyText bold>
+      {
+        '"True faith means holding nothing back. It means putting every hope in God\'s fidelity to His Promises." ― Francis Chan'
+      }
+    </BodyText>
+  ))
+  .add('Italic', () => (
+    <BodyText italic>
+      {
+        '"True faith means holding nothing back. It means putting every hope in God\'s fidelity to His Promises." ― Francis Chan'
+      }
+    </BodyText>
+  ))
+  .add('Bold Italic', () => (
+    <BodyText bold italic>
+      {
+        '"True faith means holding nothing back. It means putting every hope in God\'s fidelity to His Promises." ― Francis Chan'
+      }
+    </BodyText>
+  ))
+  .add('isLoading', () => (
+    <BodyText isLoading>
+      {
+        '"True faith means holding nothing back. It means putting every hope in God\'s fidelity to His Promises." ― Francis Chan'
+      }
+    </BodyText>
+  ))
+  .add('Border Box – platform testing', () => {
+    const border = { borderWidth: 1, borderStyle: 'solid' };
+
+    return (
+      <View>
+        <BodyText style={border}>Body Text</BodyText>
+        <BodyText style={border}>
+          {
+            '"True faith means holding nothing\nback. It means putting every\nhope in God\'s fidelity to His Promises." ― Francis Chan'
+          }
+        </BodyText>
+      </View>
+    );
+  });
diff --git a/apolloschurchapp/src/ui/typography/BodyText/BodyText.tests.js b/apolloschurchapp/src/ui/typography/BodyText/BodyText.tests.js
new file mode 100644
index 0000000..f1e30ef
--- /dev/null
+++ b/apolloschurchapp/src/ui/typography/BodyText/BodyText.tests.js
@@ -0,0 +1,72 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import BodyText from '.';
+
+describe('the BodyText component', () => {
+  it('should render correctly', () => {
+    const tree = renderer.create(
+      <Providers>
+        <BodyText>Default BodyText text</BodyText>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render as bold', () => {
+    const tree = renderer.create(
+      <Providers>
+        <BodyText bold>Bold BodyText text</BodyText>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render as italic', () => {
+    const tree = renderer.create(
+      <Providers>
+        <BodyText italic>Italic BodyText text</BodyText>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render as bold italic', () => {
+    const tree = renderer.create(
+      <Providers>
+        <BodyText bold italic>
+          Bold italic BodyText text
+        </BodyText>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should accept and render passed in styles', () => {
+    const salmon = { color: 'salmon' };
+    const tree = renderer.create(
+      <Providers>
+        <BodyText style={salmon}>Salmon text</BodyText>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a loading state', () => {
+    const tree = renderer.create(
+      <Providers>
+        <BodyText isLoading>Default BodyText text</BodyText>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should accept additional props', () => {
+    const tree = renderer.create(
+      <Providers>
+        <BodyText accessible={false}>
+          {
+            '"True faith means holding nothing back. It means putting every hope in God\'s fidelity to His Promises." ― Francis Chan'
+          }
+        </BodyText>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/typography/BodyText/index.js b/apolloschurchapp/src/ui/typography/BodyText/index.js
new file mode 100644
index 0000000..f6da80a
--- /dev/null
+++ b/apolloschurchapp/src/ui/typography/BodyText/index.js
@@ -0,0 +1,49 @@
+import { Text } from 'react-native';
+import PropTypes from 'prop-types';
+import { compose, pure, setDisplayName } from 'recompose';
+
+import styled from 'apolloschurchapp/src/ui/styled';
+import {
+  withPlaceholder,
+  Typography,
+} from 'apolloschurchapp/src/ui/Placeholder';
+
+const styles = styled(({ theme, bold, italic }) => {
+  let fontStack = theme.typography.sans.regular.default;
+
+  if (bold && italic) {
+    fontStack = theme.typography.sans.bold.italic;
+  } else if (bold) {
+    fontStack = theme.typography.sans.bold.default;
+  } else if (italic) {
+    fontStack = theme.typography.sans.regular.italic;
+  }
+
+  return {
+    fontSize: theme.helpers.rem(1),
+    lineHeight: theme.helpers.verticalRhythm(1, 1.625),
+    fontFamily: fontStack,
+    color: theme.colors.text.primary,
+  };
+}, 'BodyText');
+
+const BodyText = compose(
+  setDisplayName('BodyText'),
+  styles,
+  withPlaceholder(Typography),
+  pure
+)(Text);
+
+BodyText.propTypes = {
+  bold: PropTypes.bool,
+  italic: PropTypes.bool,
+  isLoading: PropTypes.bool, // display loading placeholder
+  ...Text.propTypes,
+};
+
+BodyText.defaultProps = {
+  bold: false,
+  italic: false,
+};
+
+export default BodyText;
diff --git a/apolloschurchapp/src/ui/typography/BulletListItem/BulletListItem.stories.js b/apolloschurchapp/src/ui/typography/BulletListItem/BulletListItem.stories.js
new file mode 100644
index 0000000..c69c3cb
--- /dev/null
+++ b/apolloschurchapp/src/ui/typography/BulletListItem/BulletListItem.stories.js
@@ -0,0 +1,27 @@
+import React from 'react';
+import { storiesOf } from '@storybook/react-native';
+
+import { withIsLoading } from 'apolloschurchapp/src/ui/isLoading';
+import PaddedView from 'apolloschurchapp/src/ui/PaddedView';
+
+import BulletListItem from '.';
+
+storiesOf('typography/BulletListItem', module)
+  .add('Default', () => (
+    <PaddedView>
+      <BulletListItem>
+        {`"God's work done in God's way will never lack God's supplies." – Hudson Taylor`}
+      </BulletListItem>
+    </PaddedView>
+  ))
+  .add('isLoading', () => {
+    const SetIsLoading = withIsLoading(PaddedView);
+
+    return (
+      <SetIsLoading isLoading>
+        <BulletListItem>
+          {`"God's work done in God's way will never lack God's supplies." – Hudson Taylor`}
+        </BulletListItem>
+      </SetIsLoading>
+    );
+  });
diff --git a/apolloschurchapp/src/ui/typography/BulletListItem/BulletListItem.tests.js b/apolloschurchapp/src/ui/typography/BulletListItem/BulletListItem.tests.js
new file mode 100644
index 0000000..d9cd08b
--- /dev/null
+++ b/apolloschurchapp/src/ui/typography/BulletListItem/BulletListItem.tests.js
@@ -0,0 +1,44 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+import { withIsLoading } from 'apolloschurchapp/src/ui/isLoading';
+import { H5 } from 'apolloschurchapp/src/ui/typography';
+
+import BulletListItem from '.';
+
+describe('the BulletListItem component', () => {
+  it('should render a string', () => {
+    const tree = renderer.create(
+      <Providers>
+        <BulletListItem>
+          {`"God's work done in God's way will never lack God's supplies." – Hudson Taylor`}
+        </BulletListItem>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render render child components', () => {
+    const tree = renderer.create(
+      <Providers>
+        <BulletListItem>
+          <H5>
+            {`"God's work done in God's way will never lack God's supplies." – Hudson Taylor`}
+          </H5>
+        </BulletListItem>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a loading state', () => {
+    const BulletListLoadingState = withIsLoading(BulletListItem);
+    const tree = renderer.create(
+      <Providers>
+        <BulletListLoadingState isLoading>
+          {`"God's work done in God's way will never lack God's supplies." – Hudson Taylor`}
+        </BulletListLoadingState>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/typography/BulletListItem/index.js b/apolloschurchapp/src/ui/typography/BulletListItem/index.js
new file mode 100644
index 0000000..6be20c1
--- /dev/null
+++ b/apolloschurchapp/src/ui/typography/BulletListItem/index.js
@@ -0,0 +1,55 @@
+import React from 'react';
+import { compose, setDisplayName, pure } from 'recompose';
+import PropTypes from 'prop-types';
+import { View } from 'react-native';
+
+import styled from 'apolloschurchapp/src/ui/styled';
+import { BodyText } from 'apolloschurchapp/src/ui/typography';
+
+const enhance = compose(
+  setDisplayName('BulletListItem'),
+  pure
+);
+
+const Wrapper = styled(({ theme }) => ({
+  flexDirection: 'row',
+  paddingBottom: theme.helpers.verticalRhythm(0.375),
+}))(View);
+
+const Bullet = styled(({ theme }) => ({
+  // Set in a typographic unit to reflect changes in the default type size.
+  paddingRight: theme.helpers.rem(1) / 2,
+}))(View);
+
+const IosTextWrapFix = styled({
+  // 😢
+  flexShrink: 1,
+})(View);
+
+const BulletListItem = enhance(({ children }) => (
+  <Wrapper>
+    <Bullet>
+      <BodyText>•</BodyText>
+    </Bullet>
+    <IosTextWrapFix>
+      {typeof children === 'string' ? (
+        <BodyText>{children}</BodyText>
+      ) : (
+        children
+      )}
+    </IosTextWrapFix>
+  </Wrapper>
+));
+
+BulletListItem.propTypes = {
+  children: PropTypes.oneOfType([
+    /*
+     * There is no way to type check against known text nodes but expect problems if you try to
+     * pass something other than a string or text elements (this includes children of children).
+     */
+    PropTypes.string,
+    PropTypes.node,
+  ]),
+};
+
+export default BulletListItem;
diff --git a/apolloschurchapp/src/ui/typography/H1/H1.stories.js b/apolloschurchapp/src/ui/typography/H1/H1.stories.js
new file mode 100644
index 0000000..14a038b
--- /dev/null
+++ b/apolloschurchapp/src/ui/typography/H1/H1.stories.js
@@ -0,0 +1,66 @@
+import React from 'react';
+import { ScrollView } from 'react-native';
+import { storiesOf } from '@storybook/react-native';
+
+import { Paragraph, H2, BodyText } from 'apolloschurchapp/src/ui/typography';
+import PaddedView from 'apolloschurchapp/src/ui/PaddedView';
+
+import H1 from '.';
+
+storiesOf('typography/H1', module)
+  .add('Default', () => (
+    <ScrollView>
+      <H1>
+        {
+          '"Do all the good you can. By all the means you can. In all the ways you can. In all the places you can. At all the times you can. To all the people you can. As long as ever you can." ― John Wesley'
+        }
+      </H1>
+    </ScrollView>
+  ))
+  .add('padded', () => (
+    <ScrollView>
+      <PaddedView>
+        <H1 padded>Padded Heading Big and Long</H1>
+        <Paragraph>
+          <BodyText>
+            <BodyText italic>Paragraph</BodyText>
+            {
+              " why do the nations rage, and the peoples plot a vain thing? The kings of the earth take a stand, and the rulers take counsel together, against Yahweh, and against his Anointed, saying, «Let's break their bonds apart, and cast their cords from us. He who sits in the heavens will laugh. The LORD will have them in derision. Then he will speak to them in his anger, and terrify them in his wrath: Yet I have set my King on my holy hill of Zion.» I will tell of the decree. Yahweh said to me, You are my son. Today I have become your father. Ask of me, and I will give the nations for your inheritance, the uttermost parts of the earth for your possession. You shall break them with a rod of iron. You shall dash them in pieces like a potter's vessel. Now therefore be wise, you kings. Be instructed, you judges of the earth. Serve Yahweh with fear, and rejoice with trembling. Give sincere homage to the Son, lest he be angry, and you perish in the way, for his wrath will soon be kindled. Blessed are all those who take refuge in him."
+            }
+          </BodyText>
+        </Paragraph>
+        <H2 padded>Padded Heading Big and Long</H2>
+        <Paragraph>
+          <BodyText>
+            <BodyText italic>Paragraph</BodyText>
+            {
+              " blessed is the man who doesn't walk in the counsel of the wicked, nor stand in the way of sinners, nor sit in the seat of scoffers; but his delight is in Yahweh's law. On his law he meditates day and night. He will be like a tree planted by the streams of water, that brings forth its fruit in its season, whose leaf also does not wither. Whatever he does shall prosper. The wicked are not so, but are like the chaff which the wind drives away. Therefore the wicked shall not stand in the judgment, nor sinners in the congregation of the righteous. For Yahweh knows the way of the righteous, but the way of the wicked shall perish."
+            }
+          </BodyText>
+        </Paragraph>
+      </PaddedView>
+    </ScrollView>
+  ))
+  .add('isLoading', () => (
+    <ScrollView>
+      <H1 isLoading>
+        {
+          '"Do all the good you can. By all the means you can. In all the ways you can. In all the places you can. At all the times you can. To all the people you can. As long as ever you can." ― John Wesley'
+        }
+      </H1>
+    </ScrollView>
+  ))
+  .add('Border Box – platform testing', () => {
+    const border = { borderWidth: 1, borderStyle: 'solid' };
+
+    return (
+      <ScrollView>
+        <H1 style={border}>Heading 1</H1>
+        <H1 style={border}>
+          {
+            '"Do all the\ngood you can.\nBy all the means you can. In all the ways you can. In all the places you can. At all the times you can. To all the people you can. As long as ever you can." ― John Wesley'
+          }
+        </H1>
+      </ScrollView>
+    );
+  });
diff --git a/apolloschurchapp/src/ui/typography/H1/H1.tests.js b/apolloschurchapp/src/ui/typography/H1/H1.tests.js
new file mode 100644
index 0000000..79088b9
--- /dev/null
+++ b/apolloschurchapp/src/ui/typography/H1/H1.tests.js
@@ -0,0 +1,64 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import H1 from '.';
+
+describe('the H1 component', () => {
+  it('should render correctly', () => {
+    const tree = renderer.create(
+      <Providers>
+        <H1>Default H1 text</H1>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should accept and render passed in styles', () => {
+    const salmon = { color: 'salmon' };
+    const tree = renderer.create(
+      <Providers>
+        <H1 style={salmon}>Salmon text</H1>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render with correct padding', () => {
+    const tree = renderer.create(
+      <Providers>
+        <H1 padded>Padded H1 text</H1>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a loading state', () => {
+    const tree = renderer.create(
+      <Providers>
+        <H1 isLoading>Default H1 text</H1>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a loading state with correct positioning (margins)', () => {
+    const tree = renderer.create(
+      <Providers>
+        <H1 padded isLoading>
+          Padded H1 text
+        </H1>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should accept additional props', () => {
+    const tree = renderer.create(
+      <Providers>
+        <H1 accessible={false}>
+          {
+            '"Do all the good you can. By all the means you can. In all the ways you can. In all theplaces you can. At all the times you can. To all the people you can. As long as ever you can." ― John Wesley'
+          }
+        </H1>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/typography/H1/index.js b/apolloschurchapp/src/ui/typography/H1/index.js
new file mode 100644
index 0000000..15d7ac7
--- /dev/null
+++ b/apolloschurchapp/src/ui/typography/H1/index.js
@@ -0,0 +1,39 @@
+import { Text } from 'react-native';
+import PropTypes from 'prop-types';
+import { compose, setDisplayName, pure } from 'recompose';
+
+import styled from 'apolloschurchapp/src/ui/styled';
+import {
+  withPlaceholder,
+  Typography,
+} from 'apolloschurchapp/src/ui/Placeholder';
+
+const styles = styled(
+  ({ theme, padded }) => ({
+    fontSize: theme.helpers.rem(2.6875),
+    lineHeight: theme.helpers.verticalRhythm(2.6875, 1.15),
+    fontFamily: theme.typography.sans.black.default,
+    color: theme.colors.text.primary,
+    ...(padded
+      ? {
+          paddingVertical: theme.helpers.verticalRhythm(2.015625),
+        }
+      : {}),
+  }),
+  'H1'
+);
+
+const H1 = compose(
+  setDisplayName('H1'),
+  styles,
+  withPlaceholder(Typography, { width: '100%' }),
+  pure
+)(Text);
+
+H1.propTypes = {
+  padded: PropTypes.bool,
+  isLoading: PropTypes.bool, // display loading placeholder
+  ...Text.propTypes,
+};
+
+export default H1;
diff --git a/apolloschurchapp/src/ui/typography/H2/H2.stories.js b/apolloschurchapp/src/ui/typography/H2/H2.stories.js
new file mode 100644
index 0000000..4dea901
--- /dev/null
+++ b/apolloschurchapp/src/ui/typography/H2/H2.stories.js
@@ -0,0 +1,51 @@
+import React from 'react';
+import { View } from 'react-native';
+import { storiesOf } from '@storybook/react-native';
+
+import { Paragraph, BodyText } from 'apolloschurchapp/src/ui/typography';
+import PaddedView from 'apolloschurchapp/src/ui/PaddedView';
+
+import H2 from '.';
+
+storiesOf('typography/H2', module)
+  .add('Default', () => (
+    <H2>
+      {
+        '"God is most glorified in us when we are most satisfied in Him" ― John Piper'
+      }
+    </H2>
+  ))
+  .add('padded', () => (
+    <PaddedView>
+      <H2 padded>Padded Heading Big and Long</H2>
+      <Paragraph>
+        <BodyText>
+          <BodyText italic>Paragraph</BodyText>
+          {
+            " why do the nations rage, and the peoples plot a vain thing? The kings of the earth take a stand, and the rulers take counsel together, against Yahweh, and against his Anointed, saying, «Let's break their bonds apart, and cast their cords from us. He who sits in the heavens will laugh. The LORD will have them in derision. Then he will speak to them in his anger, and terrify them in his wrath: Yet I have set my King on my holy hill of Zion.» I will tell of the decree. Yahweh said to me, You are my son. Today I have become your father. Ask of me, and I will give the nations for your inheritance, the uttermost parts of the earth for your possession. You shall break them with a rod of iron. You shall dash them in pieces like a potter's vessel. Now therefore be wise, you kings. Be instructed, you judges of the earth. Serve Yahweh with fear, and rejoice with trembling. Give sincere homage to the Son, lest he be angry, and you perish in the way, for his wrath will soon be kindled. Blessed are all those who take refuge in him."
+          }
+        </BodyText>
+      </Paragraph>
+    </PaddedView>
+  ))
+  .add('isLoading', () => (
+    <H2 isLoading>
+      {
+        '"God is most glorified in us when we are most satisfied in Him" ― John Piper'
+      }
+    </H2>
+  ))
+  .add('Border Box – platform testing', () => {
+    const border = { borderWidth: 1, borderStyle: 'solid' };
+
+    return (
+      <View>
+        <H2 style={border}>Heading 2</H2>
+        <H2 style={border}>
+          {
+            '"God is most glorified in us when we are most satisfied in Him" ― John Piper'
+          }
+        </H2>
+      </View>
+    );
+  });
diff --git a/apolloschurchapp/src/ui/typography/H2/H2.tests.js b/apolloschurchapp/src/ui/typography/H2/H2.tests.js
new file mode 100644
index 0000000..4d27da7
--- /dev/null
+++ b/apolloschurchapp/src/ui/typography/H2/H2.tests.js
@@ -0,0 +1,64 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import H2 from '.';
+
+describe('the H2 component', () => {
+  it('should render correctly', () => {
+    const tree = renderer.create(
+      <Providers>
+        <H2>Default H2 text</H2>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should accept and render passed in styles', () => {
+    const salmon = { color: 'salmon' };
+    const tree = renderer.create(
+      <Providers>
+        <H2 style={salmon}>Salmon text</H2>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render with correct padding', () => {
+    const tree = renderer.create(
+      <Providers>
+        <H2 padded>Padded H2 text</H2>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a loading state', () => {
+    const tree = renderer.create(
+      <Providers>
+        <H2 isLoading>Default H2 text</H2>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a loading state with correct positioning (margins)', () => {
+    const tree = renderer.create(
+      <Providers>
+        <H2 padded isLoading>
+          Padded H2 text
+        </H2>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should accept additional props', () => {
+    const tree = renderer.create(
+      <Providers>
+        <H2 accessible={false}>
+          {
+            '"God is most glorified in us when we are most satisfied in Him" ― John Piper'
+          }
+        </H2>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/typography/H2/index.js b/apolloschurchapp/src/ui/typography/H2/index.js
new file mode 100644
index 0000000..19fba61
--- /dev/null
+++ b/apolloschurchapp/src/ui/typography/H2/index.js
@@ -0,0 +1,40 @@
+import { Text } from 'react-native';
+import PropTypes from 'prop-types';
+import { compose, setDisplayName, pure } from 'recompose';
+
+import styled from 'apolloschurchapp/src/ui/styled';
+import {
+  withPlaceholder,
+  Typography,
+} from 'apolloschurchapp/src/ui/Placeholder';
+
+const styles = styled(
+  ({ theme, padded }) => ({
+    fontSize: theme.helpers.rem(2.25),
+    lineHeight: theme.helpers.verticalRhythm(2.25, 1.15),
+    fontFamily: theme.typography.sans.black.default,
+    color: theme.colors.text.primary,
+    ...(padded
+      ? {
+          paddingTop: theme.helpers.verticalRhythm(1.6875),
+          paddingBottom: theme.helpers.verticalRhythm(1.125),
+        }
+      : {}),
+  }),
+  'H2'
+);
+
+const H2 = compose(
+  setDisplayName('H2'),
+  styles,
+  withPlaceholder(Typography, { width: '100%' }),
+  pure
+)(Text);
+
+H2.propTypes = {
+  padded: PropTypes.bool,
+  isLoading: PropTypes.bool, // display loading placeholder
+  ...Text.propTypes,
+};
+
+export default H2;
diff --git a/apolloschurchapp/src/ui/typography/H3/H3.stories.js b/apolloschurchapp/src/ui/typography/H3/H3.stories.js
new file mode 100644
index 0000000..42c966f
--- /dev/null
+++ b/apolloschurchapp/src/ui/typography/H3/H3.stories.js
@@ -0,0 +1,59 @@
+import React from 'react';
+import { View } from 'react-native';
+import { storiesOf } from '@storybook/react-native';
+
+import PaddedView from 'apolloschurchapp/src/ui/PaddedView';
+import { Paragraph, BodyText } from 'apolloschurchapp/src/ui/typography';
+
+import H3 from '.';
+
+storiesOf('typography/H3', module)
+  .add('Default', () => (
+    <H3>
+      {
+        '"The Christian shoemaker does his duty not by putting little crosses on the shoes, but by making good shoes, because God is interested in good craftsmanship." ― Martin Luther'
+      }
+    </H3>
+  ))
+  .add('padded', () => (
+    <PaddedView>
+      <Paragraph>
+        <BodyText>
+          <BodyText italic>Paragraph</BodyText>
+          {
+            " blessed is the man who doesn't walk in the counsel of the wicked, nor stand in the way of sinners, nor sit in the seat of scoffers; but his delight is in Yahweh's law. On his law he meditates day and night. He will be like a tree planted by the streams of water, that brings forth its fruit in its season, whose leaf also does not wither. Whatever he does shall prosper. The wicked are not so, but are like the chaff which the wind drives away. Therefore the wicked shall not stand in the judgment, nor sinners in the congregation of the righteous. For Yahweh knows the way of the righteous, but the way of the wicked shall perish."
+          }
+        </BodyText>
+      </Paragraph>
+      <H3 padded>Padded Heading The Story of The Longest Heading Ever</H3>
+      <Paragraph>
+        <BodyText>
+          <BodyText italic>Paragraph</BodyText>
+          {
+            " why do the nations rage, and the peoples plot a vain thing? The kings of the earth take a stand, and the rulers take counsel together, against Yahweh, and against his Anointed, saying, «Let's break their bonds apart, and cast their cords from us. He who sits in the heavens will laugh. The LORD will have them in derision. Then he will speak to them in his anger, and terrify them in his wrath: Yet I have set my King on my holy hill of Zion.» I will tell of the decree. Yahweh said to me, You are my son. Today I have become your father. Ask of me, and I will give the nations for your inheritance, the uttermost parts of the earth for your possession. You shall break them with a rod of iron. You shall dash them in pieces like a potter's vessel. Now therefore be wise, you kings. Be instructed, you judges of the earth. Serve Yahweh with fear, and rejoice with trembling. Give sincere homage to the Son, lest he be angry, and you perish in the way, for his wrath will soon be kindled. Blessed are all those who take refuge in him."
+          }
+        </BodyText>
+      </Paragraph>
+    </PaddedView>
+  ))
+  .add('isLoading', () => (
+    <H3 isLoading>
+      {
+        '"The Christian shoemaker does his duty not by putting little crosses on the shoes, but by making good shoes, because God is interested in good craftsmanship." ― Martin Luther'
+      }
+    </H3>
+  ))
+  .add('Border Box – platform testing', () => {
+    const border = { borderWidth: 1, borderStyle: 'solid' };
+
+    return (
+      <View>
+        <H3 style={border}>Heading 3</H3>
+        <H3 style={border}>
+          {
+            '"The Christian shoemaker does his duty not by putting little crosses on the shoes, but by making good shoes, because God is interested in good craftsmanship." ― Martin Luther'
+          }
+        </H3>
+      </View>
+    );
+  });
diff --git a/apolloschurchapp/src/ui/typography/H3/H3.tests.js b/apolloschurchapp/src/ui/typography/H3/H3.tests.js
new file mode 100644
index 0000000..cdbd69a
--- /dev/null
+++ b/apolloschurchapp/src/ui/typography/H3/H3.tests.js
@@ -0,0 +1,64 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import H3 from '.';
+
+describe('the H3 component', () => {
+  it('should render correctly', () => {
+    const tree = renderer.create(
+      <Providers>
+        <H3>Default H3 text</H3>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should accept and render passed in styles', () => {
+    const salmon = { color: 'salmon' };
+    const tree = renderer.create(
+      <Providers>
+        <H3 style={salmon}>Salmon text</H3>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render with correct padding', () => {
+    const tree = renderer.create(
+      <Providers>
+        <H3 padded>Padded H3 text</H3>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a loading state', () => {
+    const tree = renderer.create(
+      <Providers>
+        <H3 isLoading>Default H3 text</H3>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a loading state with correct positioning (margins)', () => {
+    const tree = renderer.create(
+      <Providers>
+        <H3 padded isLoading>
+          Padded H3 text
+        </H3>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should accept additional props', () => {
+    const tree = renderer.create(
+      <Providers>
+        <H3 accessible={false}>
+          {
+            '"The Christian shoemaker does his duty not by putting little crosses on the shoes, but by making good shoes, because God is interested in good craftsmanship." ― Martin Luther'
+          }
+        </H3>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/typography/H3/index.js b/apolloschurchapp/src/ui/typography/H3/index.js
new file mode 100644
index 0000000..b4d22bd
--- /dev/null
+++ b/apolloschurchapp/src/ui/typography/H3/index.js
@@ -0,0 +1,40 @@
+import { Text } from 'react-native';
+import PropTypes from 'prop-types';
+import { compose, setDisplayName, pure } from 'recompose';
+
+import styled from 'apolloschurchapp/src/ui/styled';
+import {
+  withPlaceholder,
+  Typography,
+} from 'apolloschurchapp/src/ui/Placeholder';
+
+const styles = styled(
+  ({ theme, padded }) => ({
+    fontSize: theme.helpers.rem(1.5),
+    lineHeight: theme.helpers.verticalRhythm(1.5, 1.15),
+    fontFamily: theme.typography.sans.black.default,
+    color: theme.colors.text.primary,
+    ...(padded
+      ? {
+          paddingTop: theme.helpers.verticalRhythm(1.125),
+          paddingBottom: theme.helpers.verticalRhythm(0.75),
+        }
+      : {}),
+  }),
+  'H3'
+);
+
+const H3 = compose(
+  setDisplayName('H3'),
+  styles,
+  withPlaceholder(Typography, { width: '100%' }),
+  pure
+)(Text);
+
+H3.propTypes = {
+  padded: PropTypes.bool,
+  isLoading: PropTypes.bool, // display loading placeholder
+  ...Text.propTypes,
+};
+
+export default H3;
diff --git a/apolloschurchapp/src/ui/typography/H4/H4.stories.js b/apolloschurchapp/src/ui/typography/H4/H4.stories.js
new file mode 100644
index 0000000..82dcd6f
--- /dev/null
+++ b/apolloschurchapp/src/ui/typography/H4/H4.stories.js
@@ -0,0 +1,59 @@
+import React from 'react';
+import { View } from 'react-native';
+import { storiesOf } from '@storybook/react-native';
+
+import { Paragraph, BodyText } from 'apolloschurchapp/src/ui/typography';
+import PaddedView from 'apolloschurchapp/src/ui/PaddedView';
+
+import H4 from '.';
+
+storiesOf('typography/H4', module)
+  .add('Default', () => (
+    <H4>
+      {
+        '"What you are is God\'s gift to you, what you become is your gift to God." ― Hans Urs von Balthasar'
+      }
+    </H4>
+  ))
+  .add('padded', () => (
+    <PaddedView>
+      <Paragraph>
+        <BodyText>
+          <BodyText italic>Paragraph</BodyText>
+          {
+            " blessed is the man who doesn't walk in the counsel of the wicked, nor stand in the way of sinners, nor sit in the seat of scoffers; but his delight is in Yahweh's law. On his law he meditates day and night. He will be like a tree planted by the streams of water, that brings forth its fruit in its season, whose leaf also does not wither. Whatever he does shall prosper. The wicked are not so, but are like the chaff which the wind drives away. Therefore the wicked shall not stand in the judgment, nor sinners in the congregation of the righteous. For Yahweh knows the way of the righteous, but the way of the wicked shall perish."
+          }
+        </BodyText>
+      </Paragraph>
+      <H4 padded>Padded Heading The Story of The Longest Heading Ever</H4>
+      <Paragraph>
+        <BodyText>
+          <BodyText italic>Paragraph</BodyText>
+          {
+            " why do the nations rage, and the peoples plot a vain thing? The kings of the earth take a stand, and the rulers take counsel together, against Yahweh, and against his Anointed, saying, «Let's break their bonds apart, and cast their cords from us. He who sits in the heavens will laugh. The LORD will have them in derision. Then he will speak to them in his anger, and terrify them in his wrath: Yet I have set my King on my holy hill of Zion.» I will tell of the decree. Yahweh said to me, You are my son. Today I have become your father. Ask of me, and I will give the nations for your inheritance, the uttermost parts of the earth for your possession. You shall break them with a rod of iron. You shall dash them in pieces like a potter's vessel. Now therefore be wise, you kings. Be instructed, you judges of the earth. Serve Yahweh with fear, and rejoice with trembling. Give sincere homage to the Son, lest he be angry, and you perish in the way, for his wrath will soon be kindled. Blessed are all those who take refuge in him."
+          }
+        </BodyText>
+      </Paragraph>
+    </PaddedView>
+  ))
+  .add('isLoading', () => (
+    <H4 isLoading>
+      {
+        '"What you are is God\'s gift to you, what you become is your gift to God." ― Hans Urs von Balthasar'
+      }
+    </H4>
+  ))
+  .add('Border Box – platform testing', () => {
+    const border = { borderWidth: 1, borderStyle: 'solid' };
+
+    return (
+      <View>
+        <H4 style={border}>Heading 4</H4>
+        <H4 style={border}>
+          {
+            '"What you are is God\'s gift to you, what you become is your gift to God." ― Hans Urs von Balthasar'
+          }
+        </H4>
+      </View>
+    );
+  });
diff --git a/apolloschurchapp/src/ui/typography/H4/H4.tests.js b/apolloschurchapp/src/ui/typography/H4/H4.tests.js
new file mode 100644
index 0000000..f03f6a9
--- /dev/null
+++ b/apolloschurchapp/src/ui/typography/H4/H4.tests.js
@@ -0,0 +1,64 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import H4 from '.';
+
+describe('the H4 component', () => {
+  it('should render correctly', () => {
+    const tree = renderer.create(
+      <Providers>
+        <H4>Default H4 text</H4>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should accept and render passed in styles', () => {
+    const salmon = { color: 'salmon' };
+    const tree = renderer.create(
+      <Providers>
+        <H4 style={salmon}>Salmon text</H4>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render with correct padding', () => {
+    const tree = renderer.create(
+      <Providers>
+        <H4 padded>Padded H4 text</H4>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a loading state', () => {
+    const tree = renderer.create(
+      <Providers>
+        <H4 isLoading>Default H4 text</H4>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a loading state with correct positioning (margins)', () => {
+    const tree = renderer.create(
+      <Providers>
+        <H4 padded isLoading>
+          Padded H4 text
+        </H4>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should accept additional props', () => {
+    const tree = renderer.create(
+      <Providers>
+        <H4 accessible={false}>
+          {
+            '"What you are is God\'s gift to you, what you become is your gift to God." ― Hans Urs von Balthasar'
+          }
+        </H4>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/typography/H4/index.js b/apolloschurchapp/src/ui/typography/H4/index.js
new file mode 100644
index 0000000..04589a1
--- /dev/null
+++ b/apolloschurchapp/src/ui/typography/H4/index.js
@@ -0,0 +1,37 @@
+import { Text } from 'react-native';
+import PropTypes from 'prop-types';
+import { compose, setDisplayName, pure } from 'recompose';
+
+import styled from 'apolloschurchapp/src/ui/styled';
+import {
+  withPlaceholder,
+  Typography,
+} from 'apolloschurchapp/src/ui/Placeholder';
+
+const H4 = compose(
+  setDisplayName('H4'),
+  styled(
+    ({ theme, padded }) => ({
+      fontSize: theme.helpers.rem(1),
+      lineHeight: theme.helpers.verticalRhythm(1),
+      fontFamily: theme.typography.sans.bold.default,
+      color: theme.colors.text.primary,
+      ...(padded
+        ? {
+            paddingTop: theme.helpers.verticalRhythm(0.66),
+            paddingBottom: theme.helpers.verticalRhythm(0.5),
+          }
+        : {}),
+    }),
+    'H4'
+  ),
+  withPlaceholder(Typography, { width: '80%' }),
+  pure
+)(Text);
+
+H4.propTypes = {
+  isLoading: PropTypes.bool, // display loading placeholder
+  ...Text.propTypes,
+};
+
+export default H4;
diff --git a/apolloschurchapp/src/ui/typography/H5/H5.stories.js b/apolloschurchapp/src/ui/typography/H5/H5.stories.js
new file mode 100644
index 0000000..d7655d4
--- /dev/null
+++ b/apolloschurchapp/src/ui/typography/H5/H5.stories.js
@@ -0,0 +1,59 @@
+import React from 'react';
+import { View } from 'react-native';
+import { storiesOf } from '@storybook/react-native';
+
+import { Paragraph, BodyText } from 'apolloschurchapp/src/ui/typography';
+import PaddedView from 'apolloschurchapp/src/ui/PaddedView';
+
+import H5 from '.';
+
+storiesOf('typography/H5', module)
+  .add('Default', () => (
+    <H5>
+      {
+        '"Faith does not eliminate questions. But faith knows where to take them." ― Elisabeth Elliot'
+      }
+    </H5>
+  ))
+  .add('padded', () => (
+    <PaddedView>
+      <Paragraph>
+        <BodyText>
+          <BodyText italic>Paragraph</BodyText>
+          {
+            " blessed is the man who doesn't walk in the counsel of the wicked, nor stand in the way of sinners, nor sit in the seat of scoffers; but his delight is in Yahweh's law. On his law he meditates day and night. He will be like a tree planted by the streams of water, that brings forth its fruit in its season, whose leaf also does not wither. Whatever he does shall prosper. The wicked are not so, but are like the chaff which the wind drives away. Therefore the wicked shall not stand in the judgment, nor sinners in the congregation of the righteous. For Yahweh knows the way of the righteous, but the way of the wicked shall perish."
+          }
+        </BodyText>
+      </Paragraph>
+      <H5 padded>Padded Heading The Story of The Longest Heading Ever</H5>
+      <Paragraph>
+        <BodyText>
+          <BodyText italic>Paragraph</BodyText>
+          {
+            " why do the nations rage, and the peoples plot a vain thing? The kings of the earth take a stand, and the rulers take counsel together, against Yahweh, and against his Anointed, saying, «Let's break their bonds apart, and cast their cords from us. He who sits in the heavens will laugh. The LORD will have them in derision. Then he will speak to them in his anger, and terrify them in his wrath: Yet I have set my King on my holy hill of Zion.» I will tell of the decree. Yahweh said to me, You are my son. Today I have become your father. Ask of me, and I will give the nations for your inheritance, the uttermost parts of the earth for your possession. You shall break them with a rod of iron. You shall dash them in pieces like a potter's vessel. Now therefore be wise, you kings. Be instructed, you judges of the earth. Serve Yahweh with fear, and rejoice with trembling. Give sincere homage to the Son, lest he be angry, and you perish in the way, for his wrath will soon be kindled. Blessed are all those who take refuge in him."
+          }
+        </BodyText>
+      </Paragraph>
+    </PaddedView>
+  ))
+  .add('isLoading', () => (
+    <H5 isLoading>
+      {
+        '"Faith does not eliminate questions. But faith knows where to take them." ― Elisabeth Elliot'
+      }
+    </H5>
+  ))
+  .add('Border Box – platform testing', () => {
+    const border = { borderWidth: 1, borderStyle: 'solid' };
+
+    return (
+      <View>
+        <H5 style={border}>Heading 5</H5>
+        <H5 style={border}>
+          {
+            '"Faith does not eliminate questions. But faith knows where to take them." ― Elisabeth Elliot'
+          }
+        </H5>
+      </View>
+    );
+  });
diff --git a/apolloschurchapp/src/ui/typography/H5/H5.tests.js b/apolloschurchapp/src/ui/typography/H5/H5.tests.js
new file mode 100644
index 0000000..1c36f36
--- /dev/null
+++ b/apolloschurchapp/src/ui/typography/H5/H5.tests.js
@@ -0,0 +1,64 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import H5 from '.';
+
+describe('the H5 component', () => {
+  it('should render correctly', () => {
+    const tree = renderer.create(
+      <Providers>
+        <H5>Default H5 text</H5>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should accept and render passed in styles', () => {
+    const salmon = { color: 'salmon' };
+    const tree = renderer.create(
+      <Providers>
+        <H5 style={salmon}>Salmon text</H5>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render with correct padding', () => {
+    const tree = renderer.create(
+      <Providers>
+        <H5 padded>Padded H5 text</H5>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a loading state', () => {
+    const tree = renderer.create(
+      <Providers>
+        <H5 isLoading>Default H5 text</H5>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a loading state with correct positioning (margins)', () => {
+    const tree = renderer.create(
+      <Providers>
+        <H5 padded isLoading>
+          Padded H5 text
+        </H5>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should accept additional props', () => {
+    const tree = renderer.create(
+      <Providers>
+        <H5 accessible={false}>
+          {
+            '"Faith does not eliminate questions. But faith knows where to take them." ― Elisabeth Elliot'
+          }
+        </H5>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/typography/H5/index.js b/apolloschurchapp/src/ui/typography/H5/index.js
new file mode 100644
index 0000000..04caa52
--- /dev/null
+++ b/apolloschurchapp/src/ui/typography/H5/index.js
@@ -0,0 +1,40 @@
+import { Text } from 'react-native';
+import PropTypes from 'prop-types';
+import { compose, setDisplayName, pure } from 'recompose';
+
+import styled from 'apolloschurchapp/src/ui/styled';
+import {
+  withPlaceholder,
+  Typography,
+} from 'apolloschurchapp/src/ui/Placeholder';
+
+const styles = styled(
+  ({ theme, padded }) => ({
+    fontSize: theme.helpers.rem(0.875),
+    lineHeight: theme.helpers.verticalRhythm(0.875),
+    fontFamily: theme.typography.sans.medium.default,
+    color: theme.colors.text.primary,
+    ...(padded
+      ? {
+          paddingTop: theme.helpers.verticalRhythm(0.5775),
+          paddingBottom: theme.helpers.verticalRhythm(0.4375),
+        }
+      : {}),
+  }),
+  'H5'
+);
+
+const H5 = compose(
+  setDisplayName('H5'),
+  styles,
+  withPlaceholder(Typography, { width: '60%' }),
+  pure
+)(Text);
+
+H5.propTypes = {
+  padded: PropTypes.bool,
+  isLoading: PropTypes.bool, // display loading placeholder
+  ...Text.propTypes,
+};
+
+export default H5;
diff --git a/apolloschurchapp/src/ui/typography/H6/H6.stories.js b/apolloschurchapp/src/ui/typography/H6/H6.stories.js
new file mode 100644
index 0000000..ef14964
--- /dev/null
+++ b/apolloschurchapp/src/ui/typography/H6/H6.stories.js
@@ -0,0 +1,59 @@
+import React from 'react';
+import { View } from 'react-native';
+import { storiesOf } from '@storybook/react-native';
+
+import { Paragraph, BodyText } from 'apolloschurchapp/src/ui/typography';
+import PaddedView from 'apolloschurchapp/src/ui/PaddedView';
+
+import H6 from '.';
+
+storiesOf('typography/H6', module)
+  .add('Default', () => (
+    <H6>
+      {
+        '"Radical obedience to Christ is not easy... It\'s not comfort, not health, not wealth, and not prosperity in this world. Radical obedience to Christ risks losing all these things. But in the end, such risk finds its reward in Christ. And He is more than enough for us." ― David Platt'
+      }
+    </H6>
+  ))
+  .add('padded', () => (
+    <PaddedView>
+      <Paragraph>
+        <BodyText>
+          <BodyText italic>Paragraph</BodyText>
+          {
+            " blessed is the man who doesn't walk in the counsel of the wicked, nor stand in the way of sinners, nor sit in the seat of scoffers; but his delight is in Yahweh's law. On his law he meditates day and night. He will be like a tree planted by the streams of water, that brings forth its fruit in its season, whose leaf also does not wither. Whatever he does shall prosper. The wicked are not so, but are like the chaff which the wind drives away. Therefore the wicked shall not stand in the judgment, nor sinners in the congregation of the righteous. For Yahweh knows the way of the righteous, but the way of the wicked shall perish."
+          }
+        </BodyText>
+      </Paragraph>
+      <H6 padded>Padded Heading The Story of The Longest Heading Ever</H6>
+      <Paragraph>
+        <BodyText>
+          <BodyText italic>Paragraph</BodyText>
+          {
+            " why do the nations rage, and the peoples plot a vain thing? The kings of the earth take a stand, and the rulers take counsel together, against Yahweh, and against his Anointed, saying, «Let's break their bonds apart, and cast their cords from us. He who sits in the heavens will laugh. The LORD will have them in derision. Then he will speak to them in his anger, and terrify them in his wrath: Yet I have set my King on my holy hill of Zion.» I will tell of the decree. Yahweh said to me, You are my son. Today I have become your father. Ask of me, and I will give the nations for your inheritance, the uttermost parts of the earth for your possession. You shall break them with a rod of iron. You shall dash them in pieces like a potter's vessel. Now therefore be wise, you kings. Be instructed, you judges of the earth. Serve Yahweh with fear, and rejoice with trembling. Give sincere homage to the Son, lest he be angry, and you perish in the way, for his wrath will soon be kindled. Blessed are all those who take refuge in him."
+          }
+        </BodyText>
+      </Paragraph>
+    </PaddedView>
+  ))
+  .add('isLoading', () => (
+    <H6 isLoading>
+      {
+        '"Radical obedience to Christ is not easy... It\'s not comfort, not health, not wealth, and not prosperity in this world. Radical obedience to Christ risks losing all these things. But in the end, such risk finds its reward in Christ. And He is more than enough for us." ― David Platt'
+      }
+    </H6>
+  ))
+  .add('Border Box – platform testing', () => {
+    const border = { borderWidth: 1, borderStyle: 'solid' };
+
+    return (
+      <View>
+        <H6 style={border}>Heading 6</H6>
+        <H6 style={border}>
+          {
+            '"Radical obedience to Christ is not easy... It\'s not comfort, not health, not wealth, and not prosperity in this world. Radical obedience to Christ risks losing all these things. But in the end, such risk finds its reward in Christ. And He is more than enough for us." ― David Platt'
+          }
+        </H6>
+      </View>
+    );
+  });
diff --git a/apolloschurchapp/src/ui/typography/H6/H6.tests.js b/apolloschurchapp/src/ui/typography/H6/H6.tests.js
new file mode 100644
index 0000000..849c9c1
--- /dev/null
+++ b/apolloschurchapp/src/ui/typography/H6/H6.tests.js
@@ -0,0 +1,64 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import H6 from '.';
+
+describe('the H6 component', () => {
+  it('should render correctly', () => {
+    const tree = renderer.create(
+      <Providers>
+        <H6>Default H6 text</H6>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should accept and render passed in styles', () => {
+    const salmon = { color: 'salmon' };
+    const tree = renderer.create(
+      <Providers>
+        <H6 style={salmon}>Salmon text</H6>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render with correct padding', () => {
+    const tree = renderer.create(
+      <Providers>
+        <H6 padded>Padded H6 text</H6>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a loading state', () => {
+    const tree = renderer.create(
+      <Providers>
+        <H6 isLoading>Default H6 text</H6>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a loading state with correct positioning (margins)', () => {
+    const tree = renderer.create(
+      <Providers>
+        <H6 padded isLoading>
+          Padded H6 text
+        </H6>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should accept additional props', () => {
+    const tree = renderer.create(
+      <Providers>
+        <H6 accessible={false}>
+          {
+            '"Radical obedience to Christ is not easy... It\'s not comfort, not health, not wealth, and not prosperity in this world. Radical obedience to Christ risks losing all these things. But in the end, such risk finds its reward in Christ. And he is more than enough for us." ― David Platt'
+          }
+        </H6>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/typography/H6/index.js b/apolloschurchapp/src/ui/typography/H6/index.js
new file mode 100644
index 0000000..9084ba1
--- /dev/null
+++ b/apolloschurchapp/src/ui/typography/H6/index.js
@@ -0,0 +1,40 @@
+import { Text } from 'react-native';
+import PropTypes from 'prop-types';
+import { compose, setDisplayName, pure } from 'recompose';
+
+import styled from 'apolloschurchapp/src/ui/styled';
+import {
+  withPlaceholder,
+  Typography,
+} from 'apolloschurchapp/src/ui/Placeholder';
+
+const styles = styled(
+  ({ theme, padded }) => ({
+    fontSize: theme.helpers.rem(0.75),
+    lineHeight: theme.helpers.verticalRhythm(0.75),
+    fontFamily: theme.typography.sans.bold.default,
+    color: theme.colors.text.secondary,
+    ...(padded
+      ? {
+          // paddingTop: theme.helpers.verticalRhythm(0.495),
+          paddingBottom: theme.helpers.verticalRhythm(0.375),
+        }
+      : {}),
+  }),
+  'H6'
+);
+
+const H6 = compose(
+  setDisplayName('H6'),
+  styles,
+  withPlaceholder(Typography, { width: '50%' }),
+  pure
+)(Text);
+
+H6.propTypes = {
+  padded: PropTypes.bool,
+  isLoading: PropTypes.bool, // display loading placeholder
+  ...Text.propTypes,
+};
+
+export default H6;
diff --git a/apolloschurchapp/src/ui/typography/Paragraph/Paragraph.stories.js b/apolloschurchapp/src/ui/typography/Paragraph/Paragraph.stories.js
new file mode 100644
index 0000000..fc68b44
--- /dev/null
+++ b/apolloschurchapp/src/ui/typography/Paragraph/Paragraph.stories.js
@@ -0,0 +1,81 @@
+import React from 'react';
+import { storiesOf } from '@storybook/react-native';
+import { ScrollView } from 'react-native';
+
+import { BodyText } from 'apolloschurchapp/src/ui/typography';
+import PaddedView from 'apolloschurchapp/src/ui/PaddedView';
+
+import Paragraph from '.';
+
+storiesOf('typography/Paragraph', module)
+  .add('Default', () => (
+    <ScrollView>
+      <PaddedView>
+        <Paragraph>
+          <BodyText>
+            {`But I, brothers, could not address you as spiritual people, but as people of the flesh, as infants in Christ. I fed you with milk, not solid food, for you were not ready for it. And even now you are not yet ready, for you are still of the flesh. For while there is jealousy and strife among you, are you not of the flesh and behaving only in a human way? For when one says, "I follow Paul," and another, "I follow Apollos," are you not being merely human?`}
+          </BodyText>
+        </Paragraph>
+
+        <Paragraph>
+          <BodyText>
+            {`What then is Apollos? What is Paul? Servants through whom you believed, as the Lord assigned to each. I planted, Apollos watered, but God gave the growth. So neither he who plants nor he who waters is anything, but only God who gives the growth. He who plants and he who waters are one, and each will receive his wages according to his labor. For we are God's fellow workers. You are God's field, God's building.`}
+          </BodyText>
+        </Paragraph>
+
+        <Paragraph>
+          <BodyText>
+            {`According to the grace of God given to me, like a skilled[b] master builder I laid a foundation, and someone else is building upon it. Let each one take care how he builds upon it. For no one can lay a foundation other than that which is laid, which is Jesus Christ. Now if anyone builds on the foundation with gold, silver, precious stones, wood, hay, straw— each one's work will become manifest, for the Day will disclose it, because it will be revealed by fire, and the fire will test what sort of work each one has done. If the work that anyone has built on the foundation survives, he will receive a reward. If anyone's work is burned up, he will suffer loss, though he himself will be saved, but only as through fire.`}
+          </BodyText>
+        </Paragraph>
+      </PaddedView>
+    </ScrollView>
+  ))
+  .add('isLoading', () => (
+    <ScrollView>
+      <PaddedView>
+        <Paragraph isLoading>
+          <BodyText>
+            {`But I, brothers, could not address you as spiritual people, but as people of the flesh, as infants in Christ. I fed you with milk, not solid food, for you were not ready for it. And even now you are not yet ready, for you are still of the flesh. For while there is jealousy and strife among you, are you not of the flesh and behaving only in a human way? For when one says, "I follow Paul," and another, "I follow Apollos," are you not being merely human?`}
+          </BodyText>
+        </Paragraph>
+
+        <Paragraph isLoading>
+          <BodyText>
+            {`What then is Apollos? What is Paul? Servants through whom you believed, as the Lord assigned to each. I planted, Apollos watered, but God gave the growth. So neither he who plants nor he who waters is anything, but only God who gives the growth. He who plants and he who waters are one, and each will receive his wages according to his labor. For we are God's fellow workers. You are God's field, God's building.`}
+          </BodyText>
+        </Paragraph>
+
+        <Paragraph isLoading>
+          <BodyText>
+            {`According to the grace of God given to me, like a skilled[b] master builder I laid a foundation, and someone else is building upon it. Let each one take care how he builds upon it. For no one can lay a foundation other than that which is laid, which is Jesus Christ. Now if anyone builds on the foundation with gold, silver, precious stones, wood, hay, straw— each one's work will become manifest, for the Day will disclose it, because it will be revealed by fire, and the fire will test what sort of work each one has done. If the work that anyone has built on the foundation survives, he will receive a reward. If anyone's work is burned up, he will suffer loss, though he himself will be saved, but only as through fire.`}
+          </BodyText>
+        </Paragraph>
+      </PaddedView>
+    </ScrollView>
+  ))
+  .add('Border Box – platform testing', () => {
+    const border = { borderWidth: 1, borderStyle: 'solid' };
+
+    return (
+      <ScrollView>
+        <Paragraph style={border}>
+          <BodyText>
+            {`But I, brothers, could not address you as spiritual people, but as people of the flesh, as infants in Christ. I fed you with milk, not solid food, for you were not ready for it. And even now you are not yet ready, for you are still of the flesh. For while there is jealousy and strife among you, are you not of the flesh and behaving only in a human way? For when one says, "I follow Paul," and another, "I follow Apollos," are you not being merely human?`}
+          </BodyText>
+        </Paragraph>
+
+        <Paragraph style={border}>
+          <BodyText>
+            {`What then is Apollos? What is Paul? Servants through whom you believed, as the Lord assigned to each. I planted, Apollos watered, but God gave the growth. So neither he who plants nor he who waters is anything, but only God who gives the growth. He who plants and he who waters are one, and each will receive his wages according to his labor. For we are God's fellow workers. You are God's field, God's building.`}
+          </BodyText>
+        </Paragraph>
+
+        <Paragraph style={border}>
+          <BodyText>
+            {`According to the grace of God given to me, like a skilled[b] master builder I laid a foundation, and someone else is building upon it. Let each one take care how he builds upon it. For no one can lay a foundation other than that which is laid, which is Jesus Christ. Now if anyone builds on the foundation with gold, silver, precious stones, wood, hay, straw— each one's work will become manifest, for the Day will disclose it, because it will be revealed by fire, and the fire will test what sort of work each one has done. If the work that anyone has built on the foundation survives, he will receive a reward. If anyone's work is burned up, he will suffer loss, though he himself will be saved, but only as through fire.`}
+          </BodyText>
+        </Paragraph>
+      </ScrollView>
+    );
+  });
diff --git a/apolloschurchapp/src/ui/typography/Paragraph/Paragraph.tests.js b/apolloschurchapp/src/ui/typography/Paragraph/Paragraph.tests.js
new file mode 100644
index 0000000..14f295c
--- /dev/null
+++ b/apolloschurchapp/src/ui/typography/Paragraph/Paragraph.tests.js
@@ -0,0 +1,46 @@
+import React from 'react';
+import { Text } from 'react-native';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import Paragraph from '.';
+
+describe('the UIText component', () => {
+  it('should render correctly', () => {
+    const tree = renderer.create(
+      <Providers>
+        <Paragraph>
+          <Text>
+            {`But I, brothers, could not address you as spiritual people, but as
+              people of the flesh, as infants in Christ. I fed you with milk, not
+              solid food, for you were not ready for it. And even now you are not
+              yet ready, for you are still of the flesh. For while there is jealousy
+              and strife among you, are you not of the flesh and behaving only in a
+              human way? For when one says, "I follow Paul," and another, "I follow
+              Apollos," are you not being merely human?`}
+          </Text>
+        </Paragraph>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a loading state', () => {
+    const tree = renderer.create(
+      <Providers>
+        <Paragraph isLoading>
+          <Text>
+            {`But I, brothers, could not address you as spiritual people, but as
+              people of the flesh, as infants in Christ. I fed you with milk, not
+              solid food, for you were not ready for it. And even now you are not
+              yet ready, for you are still of the flesh. For while there is jealousy
+              and strife among you, are you not of the flesh and behaving only in a
+              human way? For when one says, "I follow Paul," and another, "I follow
+              Apollos," are you not being merely human?`}
+          </Text>
+        </Paragraph>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/typography/Paragraph/index.js b/apolloschurchapp/src/ui/typography/Paragraph/index.js
new file mode 100644
index 0000000..ed68326
--- /dev/null
+++ b/apolloschurchapp/src/ui/typography/Paragraph/index.js
@@ -0,0 +1,23 @@
+import { compose, setDisplayName } from 'recompose';
+import PropTypes from 'prop-types';
+import { View } from 'react-native';
+
+import {
+  withPlaceholder,
+  Paragraph as ParagraphPlaceholder,
+} from 'apolloschurchapp/src/ui/Placeholder';
+import styled from 'apolloschurchapp/src/ui/styled';
+
+const Paragraph = compose(
+  setDisplayName('Paragraph'),
+  styled(({ theme }) => ({
+    paddingBottom: theme.helpers.verticalRhythm(0.75),
+  })),
+  withPlaceholder(ParagraphPlaceholder)
+)(View);
+
+Paragraph.propTypes = {
+  isLoading: PropTypes.bool, // display loading placeholder
+};
+
+export default Paragraph;
diff --git a/apolloschurchapp/src/ui/typography/UIText/UIText.stories.js b/apolloschurchapp/src/ui/typography/UIText/UIText.stories.js
new file mode 100644
index 0000000..62ac32e
--- /dev/null
+++ b/apolloschurchapp/src/ui/typography/UIText/UIText.stories.js
@@ -0,0 +1,56 @@
+import React from 'react';
+import { View } from 'react-native';
+import { storiesOf } from '@storybook/react-native';
+
+import UIText from '.';
+
+storiesOf('typography/UIText', module)
+  .add('Normal', () => (
+    <UIText>
+      {
+        '"You are the only Bible some unbelievers will ever read." – John MacArthur'
+      }
+    </UIText>
+  ))
+  .add('Bold', () => (
+    <UIText bold>
+      {
+        '"You are the only Bible some unbelievers will ever read." – John MacArthur'
+      }
+    </UIText>
+  ))
+  .add('Italic', () => (
+    <UIText italic>
+      {
+        '"You are the only Bible some unbelievers will ever read." – John MacArthur'
+      }
+    </UIText>
+  ))
+  .add('Bold Italic', () => (
+    <UIText bold italic>
+      {
+        '"You are the only Bible some unbelievers will ever read." – John MacArthur'
+      }
+    </UIText>
+  ))
+  .add('isLoading', () => (
+    <UIText isLoading>
+      {
+        '"You are the only Bible some unbelievers will ever read." – John MacArthur'
+      }
+    </UIText>
+  ))
+  .add('Border Box – platform testing', () => {
+    const border = { borderWidth: 1, borderStyle: 'solid' };
+
+    return (
+      <View>
+        <UIText style={border}>UI Text</UIText>
+        <UIText style={border}>
+          {
+            '"You are the only Bible some unbelievers will ever read." – John MacArthur'
+          }
+        </UIText>
+      </View>
+    );
+  });
diff --git a/apolloschurchapp/src/ui/typography/UIText/UIText.tests.js b/apolloschurchapp/src/ui/typography/UIText/UIText.tests.js
new file mode 100644
index 0000000..646447e
--- /dev/null
+++ b/apolloschurchapp/src/ui/typography/UIText/UIText.tests.js
@@ -0,0 +1,72 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import UIText from '.';
+
+describe('the UIText component', () => {
+  it('should render correctly', () => {
+    const tree = renderer.create(
+      <Providers>
+        <UIText>Default UIText text</UIText>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render as bold', () => {
+    const tree = renderer.create(
+      <Providers>
+        <UIText bold>Bold UIText text</UIText>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render as italic', () => {
+    const tree = renderer.create(
+      <Providers>
+        <UIText italic>Italic UIText text</UIText>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render as bold italic', () => {
+    const tree = renderer.create(
+      <Providers>
+        <UIText bold italic>
+          Bold italic UIText text
+        </UIText>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should accept and render passed in styles', () => {
+    const salmon = { color: 'salmon' };
+    const tree = renderer.create(
+      <Providers>
+        <UIText style={salmon}>Salmon text</UIText>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a loading state', () => {
+    const tree = renderer.create(
+      <Providers>
+        <UIText isLoading>Default UIText text</UIText>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should accept additional props', () => {
+    const tree = renderer.create(
+      <Providers>
+        <UIText accessible={false}>
+          {
+            '"You are the only Bible some unbelievers will ever read." – John MacArthur'
+          }
+        </UIText>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/typography/UIText/index.js b/apolloschurchapp/src/ui/typography/UIText/index.js
new file mode 100644
index 0000000..3e7e5ce
--- /dev/null
+++ b/apolloschurchapp/src/ui/typography/UIText/index.js
@@ -0,0 +1,35 @@
+import { Text } from 'react-native';
+import PropTypes from 'prop-types';
+import { compose, setDisplayName, pure } from 'recompose';
+
+import styled from 'apolloschurchapp/src/ui/styled';
+import {
+  withPlaceholder,
+  Typography,
+} from 'apolloschurchapp/src/ui/Placeholder';
+
+const UIText = compose(
+  setDisplayName('UIText'),
+  styled(
+    ({ theme, bold, italic }) => ({
+      fontSize: theme.helpers.rem(0.875),
+      lineHeight: theme.helpers.verticalRhythm(0.875),
+      fontFamily: theme.typography.ui.regular,
+      fontStyle: italic ? 'italic' : null,
+      fontWeight: bold ? '700' : null,
+      color: theme.colors.text.primary,
+    }),
+    'UIText'
+  ),
+  withPlaceholder(Typography, { width: '40%' }),
+  pure
+)(Text);
+
+UIText.propTypes = {
+  bold: PropTypes.bool,
+  italic: PropTypes.bool,
+  isLoading: PropTypes.bool, // display loading placeholder
+  ...Text.propTypes,
+};
+
+export default UIText;
diff --git a/apolloschurchapp/src/ui/typography/headings.stories.js b/apolloschurchapp/src/ui/typography/headings.stories.js
new file mode 100644
index 0000000..efbe852
--- /dev/null
+++ b/apolloschurchapp/src/ui/typography/headings.stories.js
@@ -0,0 +1,31 @@
+import React from 'react';
+import { View } from 'react-native';
+import { storiesOf } from '@storybook/react-native';
+
+import { withIsLoading } from 'apolloschurchapp/src/ui/isLoading';
+
+import { H1, H2, H3, H4, H5, H6 } from '.';
+
+const SetLoading = withIsLoading(View);
+
+storiesOf('typography', module)
+  .add('headings', () => (
+    <View>
+      <H1>Heading 1</H1>
+      <H2>Heading 2</H2>
+      <H3>Heading 3</H3>
+      <H4>Heading 4</H4>
+      <H5>Heading 5</H5>
+      <H6>Heading 6</H6>
+    </View>
+  ))
+  .add('placeholders', () => (
+    <SetLoading isLoading>
+      <H1>Heading 1</H1>
+      <H2>Heading 2</H2>
+      <H3>Heading 3</H3>
+      <H4>Heading 4</H4>
+      <H5>Heading 5</H5>
+      <H6>Heading 6</H6>
+    </SetLoading>
+  ));
diff --git a/apolloschurchapp/src/ui/typography/index.js b/apolloschurchapp/src/ui/typography/index.js
new file mode 100644
index 0000000..fb53054
--- /dev/null
+++ b/apolloschurchapp/src/ui/typography/index.js
@@ -0,0 +1,11 @@
+export H1 from './H1';
+export H2 from './H2';
+export H3 from './H3';
+export H4 from './H4';
+export H5 from './H5';
+export H6 from './H6';
+export UIText from './UIText';
+export BodyText from './BodyText';
+export Paragraph from './Paragraph';
+export BlockQuote from './BlockQuote';
+export BulletListItem from './BulletListItem';
diff --git a/apolloschurchapp/src/user-settings/ChangeAvatar.js b/apolloschurchapp/src/user-settings/ChangeAvatar.js
deleted file mode 100644
index ccadf1b..0000000
--- a/apolloschurchapp/src/user-settings/ChangeAvatar.js
+++ /dev/null
@@ -1,76 +0,0 @@
-import React, { PureComponent } from 'react';
-import { View } from 'react-native';
-import PropTypes from 'prop-types';
-import { get } from 'lodash';
-import { Query, ApolloConsumer } from 'react-apollo';
-
-import { PaddedView, Avatar, styled } from '@apollosproject/ui-kit';
-import GET_USER_PHOTO from './getUserPhoto';
-import uploadPhoto from './uploadPhoto';
-
-const GetPhotoData = ({ children }) => (
-  <Query query={GET_USER_PHOTO}>
-    {({ data: { currentUser = {} } = {} }) => {
-      const photo = get(currentUser, 'profile.photo');
-      return children({ photo });
-    }}
-  </Query>
-);
-
-GetPhotoData.propTypes = {
-  children: PropTypes.func.isRequired,
-};
-
-const Wrapper = styled({
-  justifyContent: 'center',
-  alignItems: 'center',
-})(View);
-
-export default class AvatarForm extends PureComponent {
-  state = {
-    isUploadingFile: false,
-  };
-
-  componentWillUnmount() {
-    this.setState({ isUploadingFile: false });
-  }
-
-  handleUploadPhoto = async ({ client }) => {
-    try {
-      await uploadPhoto({
-        client,
-        onUpload: () => this.setState({ isUploadingFile: true }),
-      });
-      await this.setState({ isUploadingFile: false });
-    } catch (e) {
-      console.warn(e);
-      this.setState({ isUploadingFile: false });
-    }
-  };
-
-  render() {
-    const { isUploadingFile } = this.state;
-
-    return (
-      <ApolloConsumer>
-        {(client) => (
-          <Wrapper>
-            <GetPhotoData>
-              {({ photo }) => (
-                <PaddedView horizontal={false}>
-                  <Avatar
-                    source={photo}
-                    size="large"
-                    buttonIcon="camera"
-                    onPressIcon={() => this.handleUploadPhoto({ client })}
-                    isLoading={isUploadingFile}
-                  />
-                </PaddedView>
-              )}
-            </GetPhotoData>
-          </Wrapper>
-        )}
-      </ApolloConsumer>
-    );
-  }
-}
diff --git a/apolloschurchapp/src/user-settings/ChangePassword.js b/apolloschurchapp/src/user-settings/ChangePassword.js
index b8683fc..3b016cc 100644
--- a/apolloschurchapp/src/user-settings/ChangePassword.js
+++ b/apolloschurchapp/src/user-settings/ChangePassword.js
@@ -1,32 +1,19 @@
 import React, { PureComponent } from 'react';
 import PropTypes from 'prop-types';
-import {
-  Platform,
-  KeyboardAvoidingView,
-  StyleSheet,
-  StatusBar,
-} from 'react-native';
+import { SafeAreaView } from 'react-native';
 import { Mutation } from 'react-apollo';
-import { SafeAreaView, Header } from 'react-navigation';
 import { Formik } from 'formik';
 import * as Yup from 'yup';
 
-import {
-  Button,
-  ButtonLink,
-  TextInput,
-  PaddedView,
-  FlexedView,
-  styled,
-} from '@apollosproject/ui-kit';
+import { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';
+import Button, { ButtonLink } from 'apolloschurchapp/src/ui/Button';
+import { Text as TextInput } from 'apolloschurchapp/src/ui/inputs';
+import BackgroundView from 'apolloschurchapp/src/ui/BackgroundView';
+import PaddedView from 'apolloschurchapp/src/ui/PaddedView';
+import FlexedView from 'apolloschurchapp/src/ui/FlexedView';
 
-import GET_AUTH_TOKEN from '../store/getAuthToken';
-import CHANGE_PASSWORD from './passwordChange';
-
-const Footer = styled({
-  flex: 1,
-  justifyContent: 'flex-end',
-})(SafeAreaView);
+import getAuthToken from '../store/getAuthToken';
+import changePassword from './passwordChange';
 
 class ChangePassword extends PureComponent {
   static navigationOptions = ({ navigation }) => ({
@@ -48,56 +35,52 @@ class ChangePassword extends PureComponent {
   };
 
   renderForm = (props) => (
-    <KeyboardAvoidingView
-      behavior={'padding'}
-      style={StyleSheet.absoluteFill}
-      keyboardVerticalOffset={
-        Header.HEIGHT +
-        (Platform.OS === 'android' ? StatusBar.currentHeight : 0)
-      }
-    >
-      <FlexedView>
-        <PaddedView>
-          <TextInput
-            label="New Password"
-            type="password"
-            value={props.values.password}
-            error={props.touched.password && props.errors.password}
-            onChangeText={(text) => props.setFieldValue('password', text)}
-          />
-          <TextInput
-            label="Confirm Password"
-            type="password"
-            value={props.values.confirmPassword}
-            error={
-              props.touched.confirmPassword && props.errors.confirmPassword
-            }
-            onChangeText={(text) =>
-              props.setFieldValue('confirmPassword', text)
-            }
-          />
-        </PaddedView>
-        <Footer>
+    <FlexedView>
+      <KeyboardAwareScrollView>
+        <BackgroundView>
           <PaddedView>
-            <Button
-              disabled={props.isSubmitting}
-              onPress={props.handleSubmit}
-              title="Save"
-              loading={props.isSubmitting}
+            <TextInput
+              label="New Password"
+              type="password"
+              value={props.values.password}
+              error={props.touched.password && props.errors.password}
+              onChangeText={(text) => props.setFieldValue('password', text)}
+            />
+            <TextInput
+              label="Confirm Password"
+              type="password"
+              value={props.values.confirmPassword}
+              error={
+                props.touched.confirmPassword && props.errors.confirmPassword
+              }
+              onChangeText={(text) =>
+                props.setFieldValue('confirmPassword', text)
+              }
             />
           </PaddedView>
-        </Footer>
-      </FlexedView>
-    </KeyboardAvoidingView>
+        </BackgroundView>
+      </KeyboardAwareScrollView>
+
+      <SafeAreaView>
+        <PaddedView>
+          <Button
+            disabled={!props.isValid || props.isSubmitting}
+            onPress={props.handleSubmit}
+            title="Save"
+            loading={props.isSubmitting}
+          />
+        </PaddedView>
+      </SafeAreaView>
+    </FlexedView>
   );
 
   render() {
     return (
       <Mutation
-        mutation={CHANGE_PASSWORD}
+        mutation={changePassword}
         update={async (cache, { data: { token } }) => {
           await cache.writeQuery({
-            query: GET_AUTH_TOKEN,
+            query: getAuthToken,
             data: { authToken: token },
           });
 
diff --git a/apolloschurchapp/src/user-settings/Locations/Locations.tests.js b/apolloschurchapp/src/user-settings/Locations/Locations.tests.js
deleted file mode 100644
index 9e131ae..0000000
--- a/apolloschurchapp/src/user-settings/Locations/Locations.tests.js
+++ /dev/null
@@ -1,124 +0,0 @@
-import React from 'react';
-import { renderWithApolloData } from 'apolloschurchapp/src/utils/testUtils';
-
-import Providers from 'apolloschurchapp/src/Providers';
-import GET_CAMPUS_LOCATIONS from './getCampusLocations';
-import Location from './index';
-
-const campuses = [
-  {
-    __typename: 'Campus',
-    id: 'Campus:559b23fd0aa90e81b1c023e72e230fa1',
-    latitude: 34.59814,
-    longitude: -82.62045,
-    name: 'Anderson Campus',
-    street1: '2940 Concord Rd',
-    street2: '',
-    city: 'Anderson',
-    state: 'SC',
-    distanceFromLocation: 5,
-    postalCode: '29621-3619',
-    image: {
-      __typename: 'ImageMediaSource',
-      uri:
-        'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3Da47e8e69-9542-42de-9ed3-ff42fdc82417',
-    },
-  },
-  {
-    __typename: 'Campus',
-    id: 'Campus:965b6e6d7046a885bea4e300b5c0400d',
-    latitude: 32.95103,
-    longitude: -96.74738,
-    name: 'Dallas Campus',
-    street1: '102 N Weatherred Dr',
-    street2: '',
-    city: 'Richardson',
-    state: 'TX',
-    postalCode: '75080-5525',
-    distanceFromLocation: 50,
-    image: {
-      __typename: 'ImageMediaSource',
-      uri:
-        'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D5f9fd97a-fd6e-4ae5-ab5d-a9b95290d9b6',
-    },
-  },
-  {
-    __typename: 'Campus',
-    id: 'Campus:4f68015ba18662a7409d1219a4ce013e',
-    latitude: 39.10501,
-    longitude: -84.51138,
-    name: 'Cincinnati Campus',
-    street1: '120 E 8th St',
-    street2: '',
-    city: 'Cincinnati',
-    state: 'OH',
-    postalCode: '45202-2118',
-    distanceFromLocation: 500,
-    image: {
-      __typename: 'ImageMediaSource',
-      uri:
-        'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3Dbad9eb54-3e78-44a7-a028-3f2d6e71a36f',
-    },
-  },
-  {
-    __typename: 'Campus',
-    id: 'Campus:a0f64573eabf00a607bec911794d50fb',
-    latitude: 42.09203,
-    longitude: -88.13289,
-    name: 'Chicago Campus',
-    street1: '67 Algonquin Rd',
-    street2: '',
-    city: 'South Barrington',
-    state: 'IL',
-    postalCode: '60010-6143',
-    distanceFromLocation: 5000,
-    image: {
-      __typename: 'ImageMediaSource',
-      uri:
-        'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3Dede1fb83-968e-4bef-8d77-ad81c96e8a47',
-    },
-  },
-];
-
-describe('Display Native Map with Locations', () => {
-  const initialRegion = {
-    // roughly show the entire USA by default
-    latitude: 39.809734,
-    longitude: -98.555618,
-    latitudeDelta: 100,
-    longitudeDelta: 10,
-  };
-  const userLocation = {
-    latitude: 39.104797,
-    longitude: -84.511959,
-  };
-  it('Render a native map view', async () => {
-    const navigation = {
-      navigate: jest.fn(),
-      getParam: jest.fn(),
-      goBack: jest.fn(),
-    };
-
-    const mock = {
-      request: {
-        query: GET_CAMPUS_LOCATIONS,
-        variables: {
-          latitude: userLocation.latitude,
-          longitude: userLocation.longitude,
-        },
-      },
-      result: {
-        data: {
-          campuses,
-        },
-      },
-    };
-
-    const tree = await renderWithApolloData(
-      <Providers mocks={[mock]}>
-        <Location navigation={navigation} initialRegion={initialRegion} />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/user-settings/Locations/MapView.js b/apolloschurchapp/src/user-settings/Locations/MapView.js
deleted file mode 100644
index 9478cf7..0000000
--- a/apolloschurchapp/src/user-settings/Locations/MapView.js
+++ /dev/null
@@ -1,208 +0,0 @@
-import React, { Component } from 'react';
-import PropTypes from 'prop-types';
-import { Animated, Dimensions, Platform, PixelRatio } from 'react-native';
-import { SafeAreaView } from 'react-navigation';
-import RNMapView from 'react-native-maps';
-import { debounce } from 'lodash';
-
-import {
-  Button,
-  PaddedView,
-  FlexedView,
-  styled,
-  withTheme,
-  CampusCard,
-} from '@apollosproject/ui-kit';
-
-import Marker from './Marker';
-
-const getCampusAddress = (campus) =>
-  `${campus.street1}\n${campus.city}, ${campus.state} ${campus.postalCode}`;
-
-/* TODO: remove magic number. `theme.sizing.baseUnit * 2.25` This width value is a brittle
- * calculation of width minus `CampusCard` margins */
-const CARD_WIDTH = Dimensions.get('window').width - 36;
-
-const FlexedMapView = styled({ flex: 1 })(({ mapRef, ...props }) => (
-  <RNMapView ref={mapRef} {...props} />
-));
-
-const Footer = styled({
-  position: 'absolute',
-  bottom: 0,
-  left: 0,
-  right: 0,
-})(SafeAreaView);
-
-const StyledCampusCard = styled(({ theme }) => ({
-  width: CARD_WIDTH,
-  marginHorizontal: theme.sizing.baseUnit / 4,
-}))(CampusCard);
-
-class MapView extends Component {
-  static propTypes = {
-    campuses: PropTypes.arrayOf(
-      PropTypes.shape({
-        latitude: PropTypes.number.isRequired,
-        longitude: PropTypes.number.isRequired,
-      })
-    ),
-    onLocationSelect: PropTypes.func.isRequired,
-    initialRegion: PropTypes.shape({
-      latitude: PropTypes.number.isRequired,
-      longitude: PropTypes.number.isRequired,
-      latitudeDelta: PropTypes.number,
-      longitudeDelta: PropTypes.number,
-    }).isRequired,
-    userLocation: PropTypes.shape({
-      latitude: PropTypes.number.isRequired,
-      longitude: PropTypes.number.isRequired,
-    }),
-    theme: PropTypes.shape({
-      sizing: PropTypes.shape({
-        baseUnit: PropTypes.number,
-      }),
-    }),
-    navigation: PropTypes.shape({
-      goBack: PropTypes.func,
-    }),
-  };
-
-  animation = new Animated.Value(0);
-
-  componentDidMount() {
-    this.animation.addListener(debounce(this.updateCoordinates));
-  }
-
-  componentDidUpdate(oldProps) {
-    if (oldProps.userLocation !== this.props.userLocation) {
-      this.updateCoordinates({ value: this.previousScrollPosition });
-    }
-  }
-
-  get currentCampus() {
-    const cardIndex = Math.floor(
-      this.previousScrollPosition / CARD_WIDTH + 0.3
-    ); // animate 30% away from landing on the next item;
-    return this.props.campuses[cardIndex];
-  }
-
-  updateCoordinates = ({ value }) => {
-    this.previousScrollPosition = value;
-
-    const { userLocation, campuses } = this.props;
-    // campus card height + some padding
-
-    const bottomPadding = 100 + this.props.theme.sizing.baseUnit * 12;
-    const edgePadding = {
-      top: 100,
-      left: 100,
-      right: 100,
-      bottom:
-        Platform.OS === 'android'
-          ? // NOTE: android bug
-            // https://github.com/react-native-community/react-native-maps/issues/2543
-            PixelRatio.getPixelSizeForLayoutSize(bottomPadding)
-          : bottomPadding,
-    };
-
-    const visibleCampuses = [
-      userLocation,
-      ...(this.currentCampus ? [this.currentCampus] : campuses),
-    ];
-
-    this.map.fitToCoordinates(visibleCampuses, {
-      edgePadding,
-    });
-  };
-
-  render() {
-    const { campuses = [], onLocationSelect } = this.props;
-    const interpolations = campuses.map((marker, index) => {
-      const inputRange = [
-        (index - 1) * CARD_WIDTH,
-        index * CARD_WIDTH,
-        (index + 1) * CARD_WIDTH,
-      ];
-      const opacity = this.animation.interpolate({
-        inputRange,
-        outputRange: [0.35, 1, 0.35],
-        extrapolate: 'clamp',
-      });
-      return { opacity };
-    });
-
-    return (
-      <FlexedView>
-        <FlexedMapView
-          initialRegion={this.props.initialRegion}
-          showsUserLocation
-          mapRef={(map) => {
-            this.map = map;
-          }}
-        >
-          {campuses.map((campus, index) => {
-            const campusOpacity = {
-              opacity: interpolations[index].opacity,
-            };
-            return (
-              <Marker
-                key={campus.id}
-                opacityStyle={campusOpacity}
-                latitude={campus.latitude}
-                longitude={campus.longitude}
-              />
-            );
-          })}
-        </FlexedMapView>
-        <Footer>
-          <Animated.ScrollView
-            horizontal
-            showsHorizontalScrollIndicator={false}
-            snapToInterval={CARD_WIDTH + 8} // account for padding
-            snapToAlignment={'start'}
-            decelerationRate={'fast'}
-            contentContainerStyle={{
-              paddingHorizontal: this.props.theme.sizing.baseUnit * 0.75,
-            }}
-            scrollEventThrottle={16} // roughtly 1000ms/60fps = 16ms
-            onScroll={Animated.event(
-              [
-                {
-                  nativeEvent: {
-                    contentOffset: {
-                      x: this.animation,
-                    },
-                  },
-                },
-              ],
-              { useNativeDriver: true }
-            )}
-          >
-            {campuses.map((campus) => (
-              <StyledCampusCard
-                key={campus.id}
-                distance={campus.distanceFromLocation}
-                title={campus.name}
-                description={getCampusAddress(campus)}
-                images={[campus.image]}
-              />
-            ))}
-          </Animated.ScrollView>
-          <PaddedView>
-            <Button
-              title="Select Campus"
-              pill={false}
-              type="secondary"
-              onPress={() =>
-                onLocationSelect(this.currentCampus || campuses[0])
-              }
-            />
-          </PaddedView>
-        </Footer>
-      </FlexedView>
-    );
-  }
-}
-
-export default withTheme()(MapView);
diff --git a/apolloschurchapp/src/user-settings/Locations/Marker.js b/apolloschurchapp/src/user-settings/Locations/Marker.js
deleted file mode 100644
index 0c98fa9..0000000
--- a/apolloschurchapp/src/user-settings/Locations/Marker.js
+++ /dev/null
@@ -1,46 +0,0 @@
-import React, { memo } from 'react';
-import { View, Animated } from 'react-native';
-import PropTypes from 'prop-types';
-import { Marker } from 'react-native-maps';
-import Color from 'color';
-
-import { styled } from '@apollosproject/ui-kit';
-
-const MarkerView = styled(({ theme }) => ({
-  width: 8,
-  height: 8,
-  borderRadius: 4,
-  backgroundColor: Color(theme.colors.primary).fade(theme.alpha.medium),
-  zIndex: 2,
-}))(View);
-
-const MarkerRingView = styled(({ theme }) => ({
-  width: 24,
-  height: 24,
-  borderRadius: 12,
-  backgroundColor: Color(theme.colors.primary).fade(theme.alpha.low),
-  borderWidth: 1,
-  borderColor: Color(theme.colors.primary).fade(theme.alpha.medium),
-  alignItems: 'center',
-  justifyContent: 'center',
-}))(View);
-
-const StyledMarker = memo(({ latitude, longitude, opacityStyle }) => (
-  <Marker coordinate={{ latitude, longitude }}>
-    <Animated.View style={opacityStyle}>
-      <MarkerRingView>
-        <MarkerView />
-      </MarkerRingView>
-    </Animated.View>
-  </Marker>
-));
-
-StyledMarker.displayName = 'StyledMarker';
-
-StyledMarker.propTypes = {
-  latitude: PropTypes.number.isRequired,
-  longitude: PropTypes.number.isRequired,
-  opacityStyle: PropTypes.shape({}),
-};
-
-export default StyledMarker;
diff --git a/apolloschurchapp/src/user-settings/Locations/campusChange.js b/apolloschurchapp/src/user-settings/Locations/campusChange.js
deleted file mode 100644
index e164b7b..0000000
--- a/apolloschurchapp/src/user-settings/Locations/campusChange.js
+++ /dev/null
@@ -1,14 +0,0 @@
-import gql from 'graphql-tag';
-import CampusFragment from './campusFragment';
-
-export default gql`
-  mutation campusChange($campusId: String!) {
-    updateUserCampus(campusId: $campusId) {
-      id
-      campus {
-        ...CampusParts
-      }
-    }
-  }
-  ${CampusFragment}
-`;
diff --git a/apolloschurchapp/src/user-settings/Locations/campusFragment.js b/apolloschurchapp/src/user-settings/Locations/campusFragment.js
deleted file mode 100644
index 777cce5..0000000
--- a/apolloschurchapp/src/user-settings/Locations/campusFragment.js
+++ /dev/null
@@ -1,19 +0,0 @@
-import gql from 'graphql-tag';
-
-export default gql`
-  fragment CampusParts on Campus {
-    id
-    name
-    latitude
-    longitude
-    distanceFromLocation
-    street1
-    street2
-    city
-    state
-    postalCode
-    image {
-      uri
-    }
-  }
-`;
diff --git a/apolloschurchapp/src/user-settings/Locations/getCampusLocations.js b/apolloschurchapp/src/user-settings/Locations/getCampusLocations.js
deleted file mode 100644
index 1c98bb8..0000000
--- a/apolloschurchapp/src/user-settings/Locations/getCampusLocations.js
+++ /dev/null
@@ -1,11 +0,0 @@
-import gql from 'graphql-tag';
-import CampusFragment from './campusFragment';
-
-export default gql`
-  query getAllCampuses($latitude: Float!, $longitude: Float!) {
-    campuses(location: { latitude: $latitude, longitude: $longitude }) {
-      ...CampusParts
-    }
-  }
-  ${CampusFragment}
-`;
diff --git a/apolloschurchapp/src/user-settings/Locations/index.js b/apolloschurchapp/src/user-settings/Locations/index.js
deleted file mode 100644
index c730500..0000000
--- a/apolloschurchapp/src/user-settings/Locations/index.js
+++ /dev/null
@@ -1,108 +0,0 @@
-import React, { PureComponent } from 'react';
-import PropTypes from 'prop-types';
-import { Query, Mutation } from 'react-apollo';
-import { Dimensions } from 'react-native';
-import Geolocation from 'react-native-geolocation-service';
-import { PaddedView, ButtonLink } from '@apollosproject/ui-kit';
-
-import GET_CAMPUSES from './getCampusLocations';
-import CHANGE_CAMPUS from './campusChange';
-import MapView from './MapView';
-
-class Location extends PureComponent {
-  static propTypes = {
-    navigation: PropTypes.shape({
-      getParam: PropTypes.func,
-      navigate: PropTypes.func,
-      goBack: PropTypes.func,
-    }),
-    initialRegion: PropTypes.shape({
-      latitude: PropTypes.number,
-      longitude: PropTypes.number,
-      latitudeDelta: PropTypes.number,
-      longitudeDelta: PropTypes.number,
-    }),
-  };
-
-  static defaultProps = {
-    initialRegion: {
-      // roughly show the entire USA by default
-      latitude: 39.809734,
-      longitude: -98.555618,
-      latitudeDelta: 100,
-      longitudeDelta:
-        (100 * Dimensions.get('window').width) /
-        Dimensions.get('window').height,
-    },
-  };
-
-  static navigationOptions = ({ navigation }) => ({
-    title: 'Location',
-    headerLeft: null,
-    headerRight: (
-      <PaddedView vertical={false}>
-        <ButtonLink onPress={() => navigation.goBack()}>Back</ButtonLink>
-      </PaddedView>
-    ),
-  });
-
-  state = {
-    userLocation: {
-      latitude: 39.104797,
-      longitude: -84.511959,
-    },
-  };
-
-  async componentDidMount() {
-    Geolocation.getCurrentPosition(
-      (position) => {
-        this.setState({
-          userLocation: {
-            latitude: position.coords.latitude,
-            longitude: position.coords.longitude,
-          },
-        });
-      },
-      () => null,
-      { enableHighAccuracy: true, timeout: 15000, maximumAge: 10000 }
-    );
-  }
-
-  render() {
-    return (
-      <Query
-        query={GET_CAMPUSES}
-        variables={{
-          latitude: this.state.userLocation.latitude,
-          longitude: this.state.userLocation.longitude,
-        }}
-        fetchPolicy="cache-and-network"
-      >
-        {({ loading, error, data: { campuses = [] } = {} }) => (
-          <Mutation mutation={CHANGE_CAMPUS}>
-            {(handlePress) => (
-              <MapView
-                navigation={this.props.navigation}
-                isLoading={loading}
-                error={error}
-                campuses={campuses}
-                initialRegion={this.props.initialRegion}
-                userLocation={this.state.userLocation}
-                onLocationSelect={async ({ id }) => {
-                  await handlePress({
-                    variables: {
-                      campusId: id,
-                    },
-                  });
-                  this.props.navigation.goBack();
-                }}
-              />
-            )}
-          </Mutation>
-        )}
-      </Query>
-    );
-  }
-}
-
-export default Location;
diff --git a/apolloschurchapp/src/user-settings/PersonDetails.tests.js b/apolloschurchapp/src/user-settings/PersonDetails.tests.js
index ef8d662..b55f57e 100644
--- a/apolloschurchapp/src/user-settings/PersonDetails.tests.js
+++ b/apolloschurchapp/src/user-settings/PersonDetails.tests.js
@@ -1,33 +1,26 @@
 import React from 'react';
+import renderer from 'react-test-renderer';
+import wait from 'waait';
 
 import Providers from 'apolloschurchapp/src/Providers';
 
-import GET_USER_PROFILE from '../tabs/connect/getUserProfile';
-import { renderWithApolloData } from '../utils/testUtils';
+import getUserProfile from '../tabs/connect/getUserProfile';
 import PersonalDetails from './PersonalDetails';
 
 describe('PersonalDetails component', () => {
   it('renders PersonalDetails when logged in', async () => {
     const mock = {
       request: {
-        query: GET_USER_PROFILE,
+        query: getUserProfile,
       },
       result: {
         data: {
           currentUser: {
-            __typename: 'AuthenticatedUser',
-            id: 'AuthenticatedUser:123',
             profile: {
-              __typename: 'Person',
-              id: 'Profile:123',
               firstName: 'Isaac',
               lastName: 'Hardy',
               nickName: 'Ike',
               email: 'isaac.hardy@newspring.cc',
-              birthDate: '2019-09-12T21:01:06.026Z',
-              gender: 'Male',
-              campus: null,
-              photo: null,
             },
           },
         },
@@ -38,12 +31,12 @@ describe('PersonalDetails component', () => {
       getParam: jest.fn(),
       goBack: jest.fn(),
     };
-    const tree = await renderWithApolloData(
+    const tree = renderer.create(
       <Providers mocks={[mock]}>
         <PersonalDetails navigation={navigation} />
       </Providers>
     );
-
+    await wait(0); // wait for response from graphql
     expect(tree).toMatchSnapshot();
   });
 });
diff --git a/apolloschurchapp/src/user-settings/PersonalDetails.js b/apolloschurchapp/src/user-settings/PersonalDetails.js
index 9404206..3eb828d 100644
--- a/apolloschurchapp/src/user-settings/PersonalDetails.js
+++ b/apolloschurchapp/src/user-settings/PersonalDetails.js
@@ -1,32 +1,19 @@
 import React, { PureComponent } from 'react';
 import PropTypes from 'prop-types';
-import {
-  KeyboardAvoidingView,
-  StyleSheet,
-  StatusBar,
-  Platform,
-} from 'react-native';
-import { SafeAreaView, Header } from 'react-navigation';
+import { SafeAreaView } from 'react-native';
 import { Query, Mutation } from 'react-apollo';
 import { Formik } from 'formik';
 import * as Yup from 'yup';
+import { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';
 
-import {
-  TextInput,
-  PaddedView,
-  FlexedView,
-  Button,
-  ButtonLink,
-  styled,
-} from '@apollosproject/ui-kit';
+import { Text as TextInput } from 'apolloschurchapp/src/ui/inputs';
+import PaddedView from 'apolloschurchapp/src/ui/PaddedView';
+import FlexedView from 'apolloschurchapp/src/ui/FlexedView';
+import Button, { ButtonLink } from 'apolloschurchapp/src/ui/Button';
+import TableView from 'apolloschurchapp/src/ui/TableView';
 
-import GET_USER_PROFILE from '../tabs/connect/getUserProfile';
-import UPDATE_CURRENT_USER from './updateCurrentUser';
-
-const Footer = styled({
-  flex: 1,
-  justifyContent: 'flex-end',
-})(SafeAreaView);
+import getUserProfile from '../tabs/connect/getUserProfile';
+import updateCurrentUser from './updateCurrentUser';
 
 class PersonalDetails extends PureComponent {
   static navigationOptions = ({ navigation }) => ({
@@ -48,65 +35,70 @@ class PersonalDetails extends PureComponent {
   };
 
   renderForm = (props) => (
-    // have to add the offset to account for react-navigation header
-    <KeyboardAvoidingView
-      behavior={'padding'}
-      style={StyleSheet.absoluteFill}
-      keyboardVerticalOffset={
-        Header.HEIGHT +
-        (Platform.OS === 'android' ? StatusBar.currentHeight : 0)
-      }
-    >
-      <FlexedView>
-        <PaddedView>
-          <TextInput
-            label="First Name"
-            type="text"
-            value={props.values.firstName}
-            error={props.touched.firstName && props.errors.firstName}
-            onChangeText={(text) => props.setFieldValue('firstName', text)}
-          />
-          <TextInput
-            label="Last Name"
-            type="text"
-            value={props.values.lastName}
-            error={props.touched.lastName && props.errors.lastName}
-            onChangeText={(text) => props.setFieldValue('lastName', text)}
-          />
-          <TextInput
-            label="Email"
-            type="email"
-            value={props.values.email}
-            error={props.touched.email && props.errors.email}
-            onChangeText={(text) => props.setFieldValue('email', text)}
-          />
-        </PaddedView>
-        <Footer>
+    <FlexedView>
+      <KeyboardAwareScrollView>
+        <TableView>
+          <PaddedView>
+            <TextInput
+              label="Nick Name"
+              type="text"
+              value={props.values.nickName}
+              error={props.touched.nickName && props.errors.nickName}
+              onChangeText={(text) => props.setFieldValue('nickName', text)}
+            />
+            <TextInput
+              label="First Name"
+              type="text"
+              value={props.values.firstName}
+              error={props.touched.firstName && props.errors.firstName}
+              onChangeText={(text) => props.setFieldValue('firstName', text)}
+            />
+            <TextInput
+              label="Last Name"
+              type="text"
+              value={props.values.lastName}
+              error={props.touched.lastName && props.errors.lastName}
+              onChangeText={(text) => props.setFieldValue('lastName', text)}
+            />
+          </PaddedView>
+        </TableView>
+        <TableView>
           <PaddedView>
-            <Button
-              disabled={!props.isValid || props.isSubmitting}
-              onPress={props.handleSubmit}
-              title="Save"
-              loading={props.isSubmitting}
+            <TextInput
+              label="Email"
+              type="email"
+              value={props.values.email}
+              error={props.touched.email && props.errors.email}
+              onChangeText={(text) => props.setFieldValue('email', text)}
             />
           </PaddedView>
-        </Footer>
-      </FlexedView>
-    </KeyboardAvoidingView>
+        </TableView>
+      </KeyboardAwareScrollView>
+      <SafeAreaView>
+        <PaddedView>
+          <Button
+            disabled={!props.isValid || props.isSubmitting}
+            onPress={props.handleSubmit}
+            title="Save"
+            loading={props.isSubmitting}
+          />
+        </PaddedView>
+      </SafeAreaView>
+    </FlexedView>
   );
 
   render() {
     return (
-      <Query query={GET_USER_PROFILE} fetchPolicy="cache-and-network">
+      <Query query={getUserProfile} fetchPolicy="cache-and-network">
         {({ data: { currentUser = { profile: {} } } = {} }) => {
-          const { firstName, lastName, email } = currentUser.profile;
+          const { firstName, lastName, email, nickName } = currentUser.profile;
 
           return (
             <Mutation
-              mutation={UPDATE_CURRENT_USER}
+              mutation={updateCurrentUser}
               update={async (cache, { data: { updateProfileFields } }) => {
                 await cache.writeQuery({
-                  query: GET_USER_PROFILE,
+                  query: getUserProfile,
                   data: {
                     currentUser: {
                       ...currentUser,
@@ -115,6 +107,7 @@ class PersonalDetails extends PureComponent {
                         firstName: updateProfileFields.firstName,
                         lastName: updateProfileFields.lastName,
                         email: updateProfileFields.email,
+                        nickName: updateProfileFields.nickName,
                       },
                     },
                   },
@@ -123,13 +116,14 @@ class PersonalDetails extends PureComponent {
             >
               {(updateDetails) => (
                 <Formik
-                  initialValues={{ firstName, lastName, email }}
+                  initialValues={{ firstName, lastName, email, nickName }}
                   validationSchema={Yup.object().shape({
                     firstName: Yup.string().required('First Name is required!'),
                     lastName: Yup.string().required('Last Name is required!'),
                     email: Yup.string()
                       .email('Invalid email address')
                       .required('Email is required!'),
+                    nickName: Yup.string().required('Nick Name is required!'),
                   })}
                   onSubmit={async (
                     variables,
diff --git a/apolloschurchapp/src/user-settings/UserSettings.tests.js b/apolloschurchapp/src/user-settings/UserSettings.tests.js
index 9a1f3d3..5cb5377 100644
--- a/apolloschurchapp/src/user-settings/UserSettings.tests.js
+++ b/apolloschurchapp/src/user-settings/UserSettings.tests.js
@@ -4,14 +4,14 @@ import wait from 'waait';
 
 import Providers from 'apolloschurchapp/src/Providers';
 
-import GET_LOGIN_STATE from '../tabs/connect/getLoginState';
+import getLoginState from '../tabs/connect/getLoginState';
 import UserSettings from '.';
 
 describe('UserSettings component', () => {
   it('renders UserSettings when logged in', async () => {
     const mock = {
       request: {
-        query: GET_LOGIN_STATE,
+        query: getLoginState,
       },
       result: {
         data: { isLoggedIn: true },
diff --git a/apolloschurchapp/src/user-settings/getUserPhoto.js b/apolloschurchapp/src/user-settings/getUserPhoto.js
deleted file mode 100644
index 9d48a44..0000000
--- a/apolloschurchapp/src/user-settings/getUserPhoto.js
+++ /dev/null
@@ -1,17 +0,0 @@
-import gql from 'graphql-tag';
-import CampusParts from 'apolloschurchapp/src/user-settings/Locations/campusFragment';
-
-export default gql`
-  query getCurrentUserProfile {
-    currentUser {
-      id
-      profile {
-        id
-        photo {
-          uri
-        }
-      }
-    }
-  }
-  ${CampusParts}
-`;
diff --git a/apolloschurchapp/src/user-settings/index.js b/apolloschurchapp/src/user-settings/index.js
index 491b707..9ddbc0a 100644
--- a/apolloschurchapp/src/user-settings/index.js
+++ b/apolloschurchapp/src/user-settings/index.js
@@ -1,23 +1,33 @@
 import React, { PureComponent } from 'react';
-import { ScrollView } from 'react-native';
-import { StackActions, NavigationActions } from 'react-navigation';
+
 import PropTypes from 'prop-types';
 import { Query, Mutation } from 'react-apollo';
 
-import {
-  BackgroundView,
-  TableView,
+import BackgroundView from 'apolloschurchapp/src/ui/BackgroundView';
+import PaddedView from 'apolloschurchapp/src/ui/PaddedView';
+import TableView, {
   Cell,
   CellIcon,
   CellText,
   Divider,
-  Touchable,
-  ActivityIndicator,
-} from '@apollosproject/ui-kit';
+} from 'apolloschurchapp/src/ui/TableView';
 import { WebBrowserConsumer } from 'apolloschurchapp/src/ui/WebBrowser';
+import Touchable from 'apolloschurchapp/src/ui/Touchable';
+import AvatarForm from 'apolloschurchapp/src/ui/UserAvatarView/AvatarForm';
+import styled from 'apolloschurchapp/src/ui/styled';
+import ActivityIndicator from 'apolloschurchapp/src/ui/ActivityIndicator';
+
+import getLoginState from '../auth/getLoginState';
+import logout from '../auth/logout';
 
-import { GET_LOGIN_STATE, LOGOUT } from '@apollosproject/ui-auth';
-import ChangeAvatar from './ChangeAvatar';
+const AvatarView = styled({
+  alignItems: 'center',
+  justifyContent: 'center',
+})(PaddedView);
+
+const BackgroundContainer = styled(({ theme }) => ({
+  paddingTop: theme.sizing.baseUnit * 1.75,
+}))(BackgroundView);
 
 class UserSettings extends PureComponent {
   static navigationOptions = () => ({
@@ -33,129 +43,105 @@ class UserSettings extends PureComponent {
 
   render() {
     return (
-      <Query query={GET_LOGIN_STATE} fetchPolicy="cache-and-network">
+      <Query query={getLoginState} fetchPolicy="cache-and-network">
         {({ data: { isLoggedIn = false, loading } }) => {
           if (loading) return <ActivityIndicator />;
           if (!isLoggedIn) return null;
           return (
-            <BackgroundView>
-              <ScrollView>
-                <ChangeAvatar />
-
-                <WebBrowserConsumer>
-                  {(openUrl) => (
-                    <>
-                      <TableView>
-                        <Touchable
-                          onPress={async () => {
-                            await this.props.navigation.navigate(
-                              'PersonalDetails'
-                            );
-                          }}
-                        >
-                          <Cell>
-                            <CellText>Personal Details</CellText>
-                            <CellIcon name="arrow-next" />
-                          </Cell>
-                        </Touchable>
-                        <Divider />
-                        <Touchable
-                          onPress={async () => {
-                            await this.props.navigation.navigate('Location');
-                          }}
-                        >
-                          <Cell>
-                            <CellText>Location</CellText>
-                            <CellIcon name="arrow-next" />
-                          </Cell>
-                        </Touchable>
-                        <Divider />
-                        <Touchable
-                          onPress={async () => {
-                            await this.props.navigation.navigate(
-                              'ChangePassword'
-                            );
-                          }}
-                        >
-                          <Cell>
-                            <CellText>Change Password</CellText>
-                            <CellIcon name="arrow-next" />
-                          </Cell>
-                        </Touchable>
-                      </TableView>
-                      <TableView>
-                        <Touchable
-                          onPress={() =>
-                            openUrl('https://apollosrock.newspring.cc/')
-                          }
-                        >
-                          <Cell>
-                            <CellText>Give Feedback</CellText>
-                            <CellIcon name="arrow-next" />
-                          </Cell>
-                        </Touchable>
-                      </TableView>
-                      <TableView>
-                        <Touchable
-                          onPress={() =>
-                            openUrl('https://apollosrock.newspring.cc/')
-                          }
-                        >
-                          <Cell>
-                            <CellText>Privacy Policy</CellText>
-                            <CellIcon name="arrow-next" />
-                          </Cell>
-                        </Touchable>
-                        <Divider />
-                        <Touchable
-                          onPress={() =>
-                            openUrl('https://apollosrock.newspring.cc/')
-                          }
-                        >
-                          <Cell>
-                            <CellText>Terms of Use</CellText>
-                            <CellIcon name="arrow-next" />
-                          </Cell>
-                        </Touchable>
-                      </TableView>
-                      <TableView>
-                        <Mutation mutation={LOGOUT}>
-                          {(handleLogout) => (
-                            <Touchable
-                              onPress={async () => {
-                                await handleLogout();
-                                // This resets the navigation stack, and the navigates to the first auth screen.
-                                // This ensures that user isn't navigated to a subscreen of Auth, like the pin entry screen.
-                                await this.props.navigation.dispatch(
-                                  StackActions.reset({
-                                    index: 0,
-                                    key: null,
-                                    actions: [
-                                      NavigationActions.navigate({
-                                        routeName: 'Auth',
-                                        action: NavigationActions.navigate({
-                                          routeName:
-                                            'AuthSMSPhoneEntryConnected',
-                                        }),
-                                      }),
-                                    ],
-                                  })
-                                );
-                              }}
-                            >
-                              <Cell>
-                                <CellText>Logout</CellText>
-                                <CellIcon name="arrow-next" />
-                              </Cell>
-                            </Touchable>
-                          )}
-                        </Mutation>
-                      </TableView>
-                    </>
-                  )}
-                </WebBrowserConsumer>
-              </ScrollView>
-            </BackgroundView>
+            <BackgroundContainer>
+              <AvatarView>
+                <AvatarForm
+                  text
+                  photo={this.props.navigation.getParam('photo', '')}
+                  refetch={this.props.navigation.getParam('refetch', {})}
+                />
+              </AvatarView>
+              <WebBrowserConsumer>
+                {(openUrl) => (
+                  <BackgroundView>
+                    <TableView>
+                      <Touchable
+                        onPress={async () => {
+                          await this.props.navigation.navigate(
+                            'PersonalDetails'
+                          );
+                        }}
+                      >
+                        <Cell>
+                          <CellText>Personal Details</CellText>
+                          <CellIcon name="arrow-next" />
+                        </Cell>
+                      </Touchable>
+                      <Divider />
+                      <Touchable
+                        onPress={async () => {
+                          await this.props.navigation.navigate(
+                            'ChangePassword'
+                          );
+                        }}
+                      >
+                        <Cell>
+                          <CellText>Change Password</CellText>
+                          <CellIcon name="arrow-next" />
+                        </Cell>
+                      </Touchable>
+                    </TableView>
+                    <TableView>
+                      <Touchable
+                        onPress={() =>
+                          openUrl('https://apollosrock.newspring.cc/')
+                        }
+                      >
+                        <Cell>
+                          <CellText>Give Feedback</CellText>
+                          <CellIcon name="arrow-next" />
+                        </Cell>
+                      </Touchable>
+                    </TableView>
+                    <TableView>
+                      <Touchable
+                        onPress={() =>
+                          openUrl('https://apollosrock.newspring.cc/')
+                        }
+                      >
+                        <Cell>
+                          <CellText>Privacy Policy</CellText>
+                          <CellIcon name="arrow-next" />
+                        </Cell>
+                      </Touchable>
+                      <Divider />
+                      <Touchable
+                        onPress={() =>
+                          openUrl('https://apollosrock.newspring.cc/')
+                        }
+                      >
+                        <Cell>
+                          <CellText>Terms of Use</CellText>
+                          <CellIcon name="arrow-next" />
+                        </Cell>
+                      </Touchable>
+                    </TableView>
+                    <TableView>
+                      <Mutation mutation={logout}>
+                        {(handleLogout) => (
+                          <Touchable
+                            onPress={async () => {
+                              await handleLogout();
+                              await this.props.navigation.navigate('Connect');
+                            }}
+                          >
+                            <Cell>
+                              <CellText>Logout</CellText>
+                              <CellIcon name="arrow-next" />
+                            </Cell>
+                          </Touchable>
+                        )}
+                      </Mutation>
+                    </TableView>
+                  </BackgroundView>
+                )}
+              </WebBrowserConsumer>
+            </BackgroundContainer>
           );
         }}
       </Query>
diff --git a/apolloschurchapp/src/user-settings/updateCurrentUser.js b/apolloschurchapp/src/user-settings/updateCurrentUser.js
index 5efd459..a0d156a 100644
--- a/apolloschurchapp/src/user-settings/updateCurrentUser.js
+++ b/apolloschurchapp/src/user-settings/updateCurrentUser.js
@@ -5,16 +5,19 @@ export default gql`
     $firstName: String!
     $lastName: String!
     $email: String!
+    $nickName: String!
   ) {
     updateProfileFields(
       input: [
         { field: FirstName, value: $firstName }
         { field: LastName, value: $lastName }
         { field: Email, value: $email }
+        { field: NickName, value: $nickName }
       ]
     ) {
       firstName
       lastName
+      nickName
       email
       id
     }
diff --git a/apolloschurchapp/src/user-web-browser/Provider.js b/apolloschurchapp/src/user-web-browser/Provider.js
deleted file mode 100644
index bc1ce7f..0000000
--- a/apolloschurchapp/src/user-web-browser/Provider.js
+++ /dev/null
@@ -1,12 +0,0 @@
-import { createContext } from 'react';
-import NavigationService from '../NavigationService';
-
-// Can can either call the OpenUserWebView function directly, or call it using
-// the Consumer. Your choice.
-export const OpenUserWebView = ({ url }) =>
-  NavigationService.navigate('UserWebBrowser', { url });
-
-const { Provider, Consumer } = createContext(OpenUserWebView);
-
-export { Provider as UserWebBrowserProvider };
-export { Consumer as UserWebBrowserConsumer };
diff --git a/apolloschurchapp/src/user-web-browser/__tests__/BrowserWithUserCookie.tests.js b/apolloschurchapp/src/user-web-browser/__tests__/BrowserWithUserCookie.tests.js
deleted file mode 100644
index 5c576db..0000000
--- a/apolloschurchapp/src/user-web-browser/__tests__/BrowserWithUserCookie.tests.js
+++ /dev/null
@@ -1,52 +0,0 @@
-import React from 'react';
-import { renderWithApolloData } from '../../utils/testUtils';
-import Providers from '../../Providers';
-import BrowserWithUserCookie, { WITH_USER_COOKIE } from '../index';
-import { OpenUserWebView } from '../Provider';
-import NavigationService from '../../NavigationService';
-
-const mocks = [
-  {
-    request: { query: WITH_USER_COOKIE },
-    result: {
-      data: {
-        __typename: 'AuthenticatedUser',
-        currentUser: {
-          __typename: 'Person',
-          id: 'Person:123',
-          rockToken: 'ABC',
-        },
-      },
-    },
-  },
-];
-const navigation = { navigate: jest.fn(), getParam: jest.fn() };
-
-describe('the BrowserWithUserCookie component', () => {
-  it('renders with a user', async () => {
-    const tree = await renderWithApolloData(
-      <Providers mocks={mocks}>
-        <BrowserWithUserCookie navigation={navigation} />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('renders with modal false', async () => {
-    const tree = await renderWithApolloData(
-      <Providers mocks={mocks}>
-        <BrowserWithUserCookie modal={false} navigation={navigation} />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
-describe('the OpenUserWebView', () => {
-  jest.mock('NavigationService');
-  NavigationService.navigate = jest.fn();
-  it('navigtes', () => {
-    OpenUserWebView({ url: 'fake.com' });
-    expect(NavigationService.navigate).toBeCalledWith('UserWebBrowser', {
-      url: 'fake.com',
-    });
-  });
-});
diff --git a/apolloschurchapp/src/user-web-browser/index.js b/apolloschurchapp/src/user-web-browser/index.js
deleted file mode 100644
index 5a41635..0000000
--- a/apolloschurchapp/src/user-web-browser/index.js
+++ /dev/null
@@ -1,66 +0,0 @@
-// Provider API for WebBrowser that injects theme values and defaults to the web browser:
-// import { Platform } from 'react-native';
-import React from 'react';
-import gql from 'graphql-tag';
-import { Query } from 'react-apollo';
-import { ModalView } from '@apollosproject/ui-kit';
-import { WebView } from 'react-native-webview';
-import PropTypes from 'prop-types';
-import { get } from 'lodash';
-
-const Browser = ({ url, cookie, modal, navigation }) => {
-  if (modal) {
-    return (
-      <ModalView navigation={navigation}>
-        <WebView source={{ uri: url, headers: { Cookie: cookie } }} />
-      </ModalView>
-    );
-  }
-  return <WebView source={{ uri: url, headers: { Cookie: cookie } }} />;
-};
-
-Browser.propTypes = {
-  url: PropTypes.string.isRequired,
-  cookie: PropTypes.string,
-  modal: PropTypes.bool.isRequired,
-};
-
-export const WITH_USER_COOKIE = gql`
-  query currentUserCookie {
-    currentUser {
-      id
-      rockToken
-    }
-  }
-`;
-
-const BrowserWithUserCookie = ({ url, navigation, modal = true }) => {
-  // get the url from the navigation param or default to the url prop;
-  const uri = navigation.getParam('url', url);
-  return (
-    <Query query={WITH_USER_COOKIE}>
-      {({ data, loading }) => {
-        if (loading) {
-          return null;
-        }
-        const cookie = get(data, 'currentUser.rockToken', '');
-        return (
-          <Browser
-            cookie={cookie}
-            url={uri}
-            modal={modal}
-            navigation={navigation}
-          />
-        );
-      }}
-    </Query>
-  );
-};
-
-BrowserWithUserCookie.propTypes = {
-  url: PropTypes.string,
-  modal: PropTypes.bool,
-};
-
-export default BrowserWithUserCookie;
-export { UserWebBrowserProvider, UserWebBrowserConsumer } from './Provider';
diff --git a/apolloschurchapp/src/utils/__tests__/utils.tests.js b/apolloschurchapp/src/utils/__tests__/utils.tests.js
deleted file mode 100644
index 24fe48a..0000000
--- a/apolloschurchapp/src/utils/__tests__/utils.tests.js
+++ /dev/null
@@ -1,68 +0,0 @@
-import React from 'react';
-import { Text } from 'react-native';
-import fetchMoreResolver from '../fetchMoreResolver';
-import { renderWithApolloData } from '../testUtils';
-
-describe('the fetchMoreResolver function', () => {
-  const args = {
-    collectionName: 'userFeed',
-    variables: { first: 10, after: null },
-    fetchMore: jest.fn(),
-    data: {
-      userFeed: {
-        edges: [
-          {
-            node: { id: 'foo' },
-          },
-          {
-            node: { id: 'bar' },
-          },
-        ],
-        pageInfo: { endCursor: 'abc123' },
-      },
-    },
-  };
-  test('no endCursor', () => {
-    expect(
-      fetchMoreResolver({
-        ...args,
-        data: { userFeed: { edges: [], pageInfo: {} } },
-      })()
-    ).toBeUndefined();
-  });
-  test('combines data', () => {
-    fetchMoreResolver({ ...args })();
-    const previousResult = args.data;
-    const fetchMoreResult = {
-      userFeed: {
-        edges: [{ node: { id: 'baz' } }],
-        pageInfo: { endCursor: 'def456' },
-      },
-    };
-    expect(
-      args.fetchMore.mock.calls[0][0].updateQuery(previousResult, {
-        fetchMoreResult,
-      })
-    ).toEqual({
-      userFeed: {
-        edges: [
-          {
-            node: { id: 'foo' },
-          },
-          {
-            node: { id: 'bar' },
-          },
-          {
-            node: { id: 'baz' },
-          },
-        ],
-        pageInfo: { endCursor: 'def456' },
-      },
-    });
-  });
-});
-
-test('renderWithApolloData renders the component', async () => {
-  const tree = await renderWithApolloData(<Text>hello, world!</Text>);
-  expect(tree).toMatchSnapshot();
-});
diff --git a/apolloschurchapp/src/utils/content/__tests__/share.tests.js b/apolloschurchapp/src/utils/content/__tests__/share.tests.js
deleted file mode 100644
index 972edaa..0000000
--- a/apolloschurchapp/src/utils/content/__tests__/share.tests.js
+++ /dev/null
@@ -1,38 +0,0 @@
-import { Platform, Share } from 'react-native';
-import share from '../share';
-
-jest.mock('Platform');
-jest.mock('Share');
-
-describe('the share function', () => {
-  beforeAll(() => {
-    Share.share = jest.fn();
-  });
-  test('default arguments', () => {
-    Platform.OS = 'ios';
-    share({ title: 'title', url: 'http://url.com' });
-    expect(Share.share).toBeCalledWith({
-      title: 'title',
-      message: undefined,
-      url: 'http://url.com',
-    });
-  });
-  test('use message if provided', () => {
-    Platform.OS = 'ios';
-    share({ title: 'title', message: 'some message', url: 'http://url.com' });
-    expect(Share.share).toBeCalledWith({
-      title: 'title',
-      message: 'some message',
-      url: 'http://url.com',
-    });
-  });
-  test('android arguments', () => {
-    Platform.OS = 'android';
-    share({ title: 'title', url: 'http://url.com' });
-    expect(Share.share).toBeCalledWith({
-      title: 'title',
-      message: 'http://url.com',
-      url: 'http://url.com',
-    });
-  });
-});
diff --git a/apolloschurchapp/src/utils/content/share.js b/apolloschurchapp/src/utils/content/share.js
index 6d4326f..4a52f5c 100644
--- a/apolloschurchapp/src/utils/content/share.js
+++ b/apolloschurchapp/src/utils/content/share.js
@@ -1,14 +1,19 @@
-import { Platform, Share } from 'react-native';
+import { Share } from 'react-native';
+// import { get } from 'lodash';
+import { track, events } from 'apolloschurchapp/src/analytics';
+// import getSiteLink from './getSiteLink';
 
-const share = ({ title, url, message }) => {
+const share = ({ title, message, url, id = '' }) => {
   Share.share({
     title,
-    message:
-      Platform.OS === 'android'
-        ? [message, url].filter((s) => !!s).join('\n')
-        : message,
+    message,
     url,
   });
+
+  track({
+    eventName: events.ShareContent,
+    properties: { title, id },
+  });
 };
 
 export default share;
diff --git a/apolloschurchapp/src/utils/fetchMoreResolver.js b/apolloschurchapp/src/utils/fetchMoreResolver.js
deleted file mode 100644
index b93cb2f..0000000
--- a/apolloschurchapp/src/utils/fetchMoreResolver.js
+++ /dev/null
@@ -1,42 +0,0 @@
-import get from 'lodash/get';
-import set from 'lodash/fp/set';
-
-export default function fetchMoreResolver({
-  collectionName,
-  variables,
-  fetchMore,
-  data,
-}) {
-  return () => {
-    const pageInfoPath = `${collectionName}.pageInfo`;
-    const edgePath = `${collectionName}.edges`;
-
-    const after = get(data, `${pageInfoPath}.endCursor`);
-    if (!after) return;
-
-    fetchMore({
-      variables: { ...variables, after },
-      updateQuery: (previousResult, { fetchMoreResult }) => {
-        // combine previous data and fetchMore data
-        const newDataWithPageInfo = set(
-          pageInfoPath,
-          {
-            ...get(previousResult, pageInfoPath, {}),
-            ...get(fetchMoreResult, pageInfoPath, {}),
-          },
-          previousResult
-        );
-        const newDataWithAdditionalItems = set(
-          edgePath,
-          [
-            ...get(previousResult, edgePath, []),
-            ...get(fetchMoreResult, edgePath, []),
-          ],
-          newDataWithPageInfo
-        );
-
-        return newDataWithAdditionalItems;
-      },
-    });
-  };
-}
diff --git a/apolloschurchapp/src/utils/testUtils.js b/apolloschurchapp/src/utils/testUtils.js
deleted file mode 100644
index 38d20f7..0000000
--- a/apolloschurchapp/src/utils/testUtils.js
+++ /dev/null
@@ -1,10 +0,0 @@
-/* eslint-disable import/prefer-default-export */
-import renderer from 'react-test-renderer';
-import wait from 'waait';
-
-export const renderWithApolloData = async (component) => {
-  const tree = renderer.create(component);
-  await wait(1);
-  tree.update(component);
-  return tree;
-};
diff --git a/apolloschurchapp/storybook/Welcome/Intro.js b/apolloschurchapp/storybook/Welcome/Intro.js
deleted file mode 100644
index 2e8b8d7..0000000
--- a/apolloschurchapp/storybook/Welcome/Intro.js
+++ /dev/null
@@ -1,43 +0,0 @@
-import React from 'react';
-import { Paragraph, BodyText } from '@apollosproject/ui-kit';
-
-import { Slide, SlideContent } from '@apollosproject/ui-onboarding';
-
-const Intro = () => (
-  <Slide>
-    <SlideContent title={`Welcome to ${'\n'}Apollos Storybook!`} icon>
-      <Paragraph>
-        <BodyText>
-          Storybook is the component workshop for the Apollos app platform.
-        </BodyText>
-      </Paragraph>
-      <Paragraph>
-        <BodyText>
-          A story is a single state of one or more UI components. You can have
-          as many stories as you want.
-        </BodyText>
-      </Paragraph>
-      <Paragraph>
-        <BodyText>
-          We use Storybook to help document UI and to serve as visual test cases
-          for different states.
-        </BodyText>
-      </Paragraph>
-      <Paragraph>
-        <BodyText>
-          Open the navigator using the navigation bar at the bottom of the
-          screen to navigate the available stories.
-        </BodyText>
-      </Paragraph>
-      <Paragraph>
-        <BodyText>
-          The stories defined inside of your app will be listed first, with
-          Apollos UI stories below them. If you setup a theme, all of the
-          stories will reflect your theme.
-        </BodyText>
-      </Paragraph>
-    </SlideContent>
-  </Slide>
-);
-
-export default Intro;
diff --git a/apolloschurchapp/storybook/Welcome/Welcome.stories.js b/apolloschurchapp/storybook/Welcome/Welcome.stories.js
new file mode 100644
index 0000000..f1c9a65
--- /dev/null
+++ b/apolloschurchapp/storybook/Welcome/Welcome.stories.js
@@ -0,0 +1,9 @@
+import React from 'react';
+import { storiesOf } from '@storybook/react-native';
+import { linkTo } from '@storybook/addon-links';
+
+import Welcome from '.';
+
+storiesOf('Welcome', module).add('to Storybook', () => (
+  <Welcome showApp={linkTo('Button')} />
+));
diff --git a/apolloschurchapp/storybook/Welcome/index.js b/apolloschurchapp/storybook/Welcome/index.js
index 6c1e852..78f7086 100644
--- a/apolloschurchapp/storybook/Welcome/index.js
+++ b/apolloschurchapp/storybook/Welcome/index.js
@@ -1,9 +1,57 @@
 import React from 'react';
-import { storiesOf } from '@apollosproject/ui-storybook';
+import PropTypes from 'prop-types';
+import { View, Text } from 'react-native';
 
-import App from '../../src';
-import Intro from './Intro';
+export default class Welcome extends React.Component {
+  styles = {
+    wrapper: {
+      flex: 1,
+      padding: 24,
+      justifyContent: 'center',
+    },
+    header: {
+      fontSize: 18,
+      marginBottom: 18,
+    },
+    content: {
+      fontSize: 12,
+      marginBottom: 10,
+      lineHeight: 18,
+    },
+  };
 
-storiesOf('Storybook', module)
-  .add('Welcome', () => <Intro />)
-  .add('App', () => <App />);
+  showApp(event) {
+    event.preventDefault();
+    if (this.props.showApp) this.props.showApp();
+  }
+
+  render() {
+    return (
+      <View style={this.styles.wrapper}>
+        <Text style={this.styles.header}>
+          Welcome to React Native Storybook
+        </Text>
+        <Text style={this.styles.content}>
+          This is a UI Component development environment for your React Native
+          app. Here you can display and interact with your UI components as
+          stories. A story is a single state of one or more UI components. You
+          can have as many stories as you want. In other words a story is like a
+          visual test case.
+        </Text>
+        <Text style={this.styles.content}>
+          We have added some stories inside the &quot;storybook/stories&quot;
+          directory for examples. Try editing the
+          &quot;storybook/stories/Welcome.js&quot; file to edit this message.
+        </Text>
+      </View>
+    );
+  }
+}
+
+Welcome.defaultProps = {
+  showApp: null,
+};
+
+Welcome.propTypes = {
+  showApp: PropTypes.func,
+};
diff --git a/apolloschurchapp/storybook/addons.js b/apolloschurchapp/storybook/addons.js
new file mode 100644
index 0000000..6aed412
--- /dev/null
+++ b/apolloschurchapp/storybook/addons.js
@@ -0,0 +1,2 @@
+import '@storybook/addon-actions/register';
+import '@storybook/addon-links/register';
diff --git a/apolloschurchapp/storybook/index.android.js b/apolloschurchapp/storybook/index.android.js
new file mode 100644
index 0000000..f0513c5
--- /dev/null
+++ b/apolloschurchapp/storybook/index.android.js
@@ -0,0 +1,3 @@
+import StorybookUI from './storybook';
+
+export default StorybookUI;
diff --git a/apolloschurchapp/storybook/index.ios.js b/apolloschurchapp/storybook/index.ios.js
new file mode 100644
index 0000000..f0513c5
--- /dev/null
+++ b/apolloschurchapp/storybook/index.ios.js
@@ -0,0 +1,3 @@
+import StorybookUI from './storybook';
+
+export default StorybookUI;
diff --git a/apolloschurchapp/storybook/index.js b/apolloschurchapp/storybook/index.js
index bcb07cf..f0513c5 100644
--- a/apolloschurchapp/storybook/index.js
+++ b/apolloschurchapp/storybook/index.js
@@ -1,21 +1,3 @@
-import StorybookUI, {
-  loadApollosStories,
-  addApollosProviderDecorator,
-  configure,
-} from '@apollosproject/ui-storybook';
-import SplashScreen from 'react-native-splash-screen';
-import Providers from '../src/Providers';
-
-import { loadStories } from './storyLoader';
-
-addApollosProviderDecorator(Providers);
-
-configure(() => {
-  require('./Welcome');
-  loadStories();
-  loadApollosStories();
-
-  SplashScreen.hide();
-}, module);
+import StorybookUI from './storybook';
 
 export default StorybookUI;
diff --git a/apolloschurchapp/storybook/storybook.js b/apolloschurchapp/storybook/storybook.js
new file mode 100644
index 0000000..19be073
--- /dev/null
+++ b/apolloschurchapp/storybook/storybook.js
@@ -0,0 +1,35 @@
+import React, { Component } from 'react';
+import { AppRegistry } from 'react-native';
+import {
+  getStorybookUI,
+  configure,
+  addDecorator,
+} from '@storybook/react-native';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+// storyLoader.js is generated on storybook start. next line disabled for CI test.
+import { loadStories } from './storyLoader'; // eslint-disable-line
+
+addDecorator((renderStorybook) => <Providers>{renderStorybook()}</Providers>);
+
+// import stories
+configure(() => {
+  loadStories();
+}, module);
+
+// This assumes that storybook is running on the same host as your RN packager,
+// to set manually use, e.g. host: 'localhost' option
+const StorybookUIRoot = getStorybookUI({ port: 7007, onDeviceUI: true });
+
+// react-native hot module loader must take in a Class - https://github.com/facebook/react-native/issues/10991
+// https://github.com/storybooks/storybook/issues/2081
+// eslint-disable-next-line react/prefer-stateless-function
+class StorybookUIHMRRoot extends Component {
+  render() {
+    return <StorybookUIRoot />;
+  }
+}
+
+AppRegistry.registerComponent('apolloschurchapp', () => StorybookUIHMRRoot);
+export default StorybookUIHMRRoot;
