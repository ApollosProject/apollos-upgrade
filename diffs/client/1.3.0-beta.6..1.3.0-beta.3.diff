diff --git a/apolloschurchapp/apollos.json b/apolloschurchapp/apollos.json
index 96a2dc4..9c7a398 100644
--- a/apolloschurchapp/apollos.json
+++ b/apolloschurchapp/apollos.json
@@ -1,4 +1,4 @@
 {
-    "version": "1.3.0-beta.6",
+    "version": "1.3.0-beta.3",
     "environment": "client"
 }
\ No newline at end of file
diff --git a/apolloschurchapp/index.js b/apolloschurchapp/index.js
index a0dac08..6ae0efd 100644
--- a/apolloschurchapp/index.js
+++ b/apolloschurchapp/index.js
@@ -1,3 +1,4 @@
+import './polyfill'; // this can be removed when we upgrade to react-native 59
 import './loadConfig';
 import { AppRegistry, YellowBox } from 'react-native';
 import SplashScreen from 'react-native-splash-screen';
diff --git a/apolloschurchapp/ios/Podfile.lock b/apolloschurchapp/ios/Podfile.lock
index 4b2cb89..2123f74 100644
--- a/apolloschurchapp/ios/Podfile.lock
+++ b/apolloschurchapp/ios/Podfile.lock
@@ -71,7 +71,7 @@ PODS:
     - React
   - react-native-maps (0.26.1):
     - React
-  - react-native-music-control (0.10.8):
+  - react-native-music-control (0.10.5):
     - React
   - react-native-onesignal (3.3.2):
     - OneSignal (= 2.10.1)
@@ -298,7 +298,7 @@ SPEC CHECKSUMS:
   react-native-geolocation: c956aeb136625c23e0dce0467664af2c437888c9
   react-native-image-picker: e6e06d4315e3c85bad17e4b2002cd29f11d202c8
   react-native-maps: 6e499eee4eabf422ba8b6f94e993cc768bf35153
-  react-native-music-control: dcfe5b61e56a15898c4618579cb8ce612c9d21a8
+  react-native-music-control: 700e53dc9b2ec7342f69705243609c1cd644fa44
   react-native-onesignal: 8958311abbd9125f26e600914e48833b57321cbf
   react-native-passkit-wallet: 51e3babdaeec4c10b5736786ebd1bfb470fcaa36
   react-native-safari-view: 955d7160d159241b8e9395d12d10ea0ef863dcdd
diff --git a/apolloschurchapp/jest.setup.js b/apolloschurchapp/jest.setup.js
index b3c654a..45d8211 100644
--- a/apolloschurchapp/jest.setup.js
+++ b/apolloschurchapp/jest.setup.js
@@ -57,8 +57,6 @@ jest.mock('Animated', () => {
   };
 });
 
-jest.mock('NativeAnimatedHelper');
-
 jest.mock('react-native-safari-view', () => ({
   isAvailable: jest.fn().mockImplementation(() => Promise.resolve(true)),
   show: jest.fn(),
@@ -90,9 +88,7 @@ jest.mock('@apollosproject/ui-notifications', () => ({
   NotificationsProvider: ({ children }) => children,
 }));
 
-jest.mock('@apollosproject/ui-mapview', () => ({
-  MapViewConnected: 'MapViewConnected',
-}));
+jest.mock('@apollosproject/ui-mapview', () => 'MapView');
 
 jest.mock('@apollosproject/ui-media-player', () => ({
   MediaPlayerSpacer: ({ children }) => children,
diff --git a/apolloschurchapp/metro.config.js b/apolloschurchapp/metro.config.js
index 228b070..6f18f61 100644
--- a/apolloschurchapp/metro.config.js
+++ b/apolloschurchapp/metro.config.js
@@ -31,7 +31,6 @@ const localDeps = [
 const sharedNativeModules = [
   '@apollosproject/react-native-airplay-btn',
   '@react-native-community/async-storage',
-  'react-native-geolocation-service',
   'react-native-config',
   'react-native-gesture-handler',
   'react-native-linear-gradient',
diff --git a/apolloschurchapp/package.json b/apolloschurchapp/package.json
index f74ec87..8924504 100644
--- a/apolloschurchapp/package.json
+++ b/apolloschurchapp/package.json
@@ -1,6 +1,6 @@
 {
   "name": "apolloschurchapp",
-  "version": "1.3.0-beta.6",
+  "version": "1.3.0-beta.3",
   "private": true,
   "devDependencies": {
     "codecov": "3.0.2",
@@ -62,21 +62,20 @@
     ]
   },
   "dependencies": {
-    "@apollosproject/config": "^1.3.0-beta.6",
+    "@apollosproject/config": "^1.3.0-beta.3",
     "@apollosproject/react-native-airplay-btn": "0.2.0",
-    "@apollosproject/ui-analytics": "^1.3.0-beta.6",
-    "@apollosproject/ui-auth": "^1.3.0-beta.6",
-    "@apollosproject/ui-connected": "^1.3.0-beta.6",
-    "@apollosproject/ui-fragments": "^1.3.0-beta.6",
-    "@apollosproject/ui-htmlview": "^1.3.0-beta.6",
-    "@apollosproject/ui-kit": "^1.3.0-beta.6",
-    "@apollosproject/ui-mapview": "^1.3.0-beta.6",
-    "@apollosproject/ui-media-player": "^1.3.0-beta.6",
-    "@apollosproject/ui-notifications": "^1.3.0-beta.6",
-    "@apollosproject/ui-onboarding": "^1.3.0-beta.6",
-    "@apollosproject/ui-passes": "^1.3.0-beta.6",
-    "@apollosproject/ui-scripture": "^1.3.0-beta.6",
-    "@apollosproject/ui-storybook": "^1.3.0-beta.6",
+    "@apollosproject/ui-analytics": "^1.3.0-beta.3",
+    "@apollosproject/ui-auth": "^1.3.0-beta.3",
+    "@apollosproject/ui-fragments": "^1.3.0-beta.3",
+    "@apollosproject/ui-htmlview": "^1.3.0-beta.3",
+    "@apollosproject/ui-kit": "^1.3.0-beta.3",
+    "@apollosproject/ui-mapview": "^1.3.0-beta.3",
+    "@apollosproject/ui-media-player": "^1.3.0-beta.3",
+    "@apollosproject/ui-notifications": "^1.3.0-beta.3",
+    "@apollosproject/ui-onboarding": "^1.3.0-beta.3",
+    "@apollosproject/ui-passes": "^1.3.0-beta.3",
+    "@apollosproject/ui-scripture": "^1.3.0-beta.3",
+    "@apollosproject/ui-storybook": "^1.3.0-beta.3",
     "@react-native-community/async-storage": "^1.5.1",
     "@react-native-community/geolocation": "^2.0.2",
     "apollo-cache-inmemory": "1.5.1",
@@ -109,7 +108,7 @@
     "react-native-linear-gradient": "^2.5.4",
     "react-native-maps": "0.26.1",
     "react-native-modal-datetime-picker": "7.6.0",
-    "react-native-music-control": "0.10.8",
+    "react-native-music-control": "0.10.5",
     "react-native-onesignal": "3.3.2",
     "react-native-passkit-wallet": "^0.1.4",
     "react-native-permissions": "^2.0.5",
diff --git a/apolloschurchapp/polyfill.js b/apolloschurchapp/polyfill.js
new file mode 100644
index 0000000..e2e1ede
--- /dev/null
+++ b/apolloschurchapp/polyfill.js
@@ -0,0 +1,10 @@
+// this can be removed when we upgrade to react-native 59
+
+// symbol polyfills
+global.Symbol = require('core-js/es6/symbol');
+require('core-js/fn/symbol/iterator');
+
+// collection fn polyfills
+require('core-js/fn/map');
+require('core-js/fn/set');
+require('core-js/fn/array/find');
diff --git a/apolloschurchapp/src/NavigationService.js b/apolloschurchapp/src/NavigationService.js
index 8a268af..bfc7d2b 100644
--- a/apolloschurchapp/src/NavigationService.js
+++ b/apolloschurchapp/src/NavigationService.js
@@ -15,25 +15,19 @@ const navigate = (routeName, params) => {
   );
 };
 
-export const resetAction = ({ navigatorName, routeName }) =>
-  StackActions.reset({
-    index: 0,
-    key: null,
-    actions: [
-      NavigationActions.navigate({
-        routeName: navigatorName,
-        action: NavigationActions.navigate({
-          routeName,
-        }),
-      }),
-    ],
-  });
-
 const resetToAuth = () => {
   _navigator.dispatch(
-    resetAction({
-      navigatorName: 'Auth',
-      routeName: 'AuthSMSPhoneEntryConnected',
+    StackActions.reset({
+      index: 0,
+      key: null,
+      actions: [
+        NavigationActions.navigate({
+          routeName: 'Auth',
+          action: NavigationActions.navigate({
+            routeName: 'AuthSMSPhoneEntryConnected',
+          }),
+        }),
+      ],
     })
   );
 };
@@ -50,7 +44,6 @@ const goBack = (from) => {
 export default {
   setTopLevelNavigator,
   navigate,
-  resetAction,
   goBack,
   resetToAuth,
 };
diff --git a/apolloschurchapp/src/content-single/DevotionalContentItem/ContentTab.js b/apolloschurchapp/src/content-single/DevotionalContentItem/ContentTab.js
index 7f4debf..cb74911 100644
--- a/apolloschurchapp/src/content-single/DevotionalContentItem/ContentTab.js
+++ b/apolloschurchapp/src/content-single/DevotionalContentItem/ContentTab.js
@@ -1,12 +1,10 @@
 import React from 'react';
 import { ScrollView } from 'react-native';
 import PropTypes from 'prop-types';
-import {
-  ContentHTMLViewConnected,
-  HorizontalContentSeriesFeedConnected,
-} from '@apollosproject/ui-connected';
 import { PaddedView, H2, styled, withIsLoading } from '@apollosproject/ui-kit';
 import { ScriptureList } from '@apollosproject/ui-scripture';
+import HorizontalContentFeed from '../HorizontalContentFeed';
+import HTMLContent from '../HTMLContent';
 
 const ContentContainer = withIsLoading(
   styled({ paddingVertical: 0 })(PaddedView)
@@ -35,12 +33,9 @@ const ContentTab = ({
           tabDestination={'scripture'}
         />
       ) : null}
-      <ContentHTMLViewConnected contentId={id} />
+      <HTMLContent contentId={id} />
     </ContentContainer>
-    <HorizontalContentSeriesFeedConnected
-      contentId={id}
-      navigation={navigation}
-    />
+    <HorizontalContentFeed contentId={id} navigation={navigation} />
   </ScrollView>
 );
 
@@ -59,7 +54,6 @@ ContentTab.propTypes = {
   references: PropTypes.arrayOf(PropTypes.string),
   /** The devotional title */
   title: PropTypes.string,
-  navigation: PropTypes.shape({ navigate: PropTypes.array }).isRequired,
 };
 
 export default ContentTab;
diff --git a/apolloschurchapp/src/content-single/DevotionalContentItem/Devotional.tests.js b/apolloschurchapp/src/content-single/DevotionalContentItem/Devotional.tests.js
index 1a46e3d..192ec83 100644
--- a/apolloschurchapp/src/content-single/DevotionalContentItem/Devotional.tests.js
+++ b/apolloschurchapp/src/content-single/DevotionalContentItem/Devotional.tests.js
@@ -1,9 +1,8 @@
 import React from 'react';
 import { createStackNavigator, createAppContainer } from 'react-navigation';
-import { GET_CONTENT_ITEM_CONTENT } from '@apollosproject/ui-connected';
-
 import Providers from '../../Providers';
 import { renderWithApolloData } from '../../utils/testUtils';
+import GET_CONTENT_ITEM_CONTENT from '../HTMLContent/getContentItemContent';
 import GET_SCRIPTURE from './getScripture';
 import Devotional from '.';
 
@@ -63,7 +62,7 @@ const mocks = [contentScriptureMock, contentHTMLMock];
 describe('the Devotional component', () => {
   it('renders a devotional', async () => {
     const DevotionalStack = createStackNavigator({
-      Devotional: (props) => <Devotional id="1" content={{ title: 'Title' }} {...props} />, //eslint-disable-line
+      Devotional: () => <Devotional id="1" content={{ title: 'Title' }} />, //eslint-disable-line
     });
     const DevotionalWithNavigation = createAppContainer(DevotionalStack);
     const tree = await renderWithApolloData(
diff --git a/apolloschurchapp/src/content-single/DevotionalContentItem/ScriptureTab.js b/apolloschurchapp/src/content-single/DevotionalContentItem/ScriptureTab.js
index 98fb169..c03f364 100644
--- a/apolloschurchapp/src/content-single/DevotionalContentItem/ScriptureTab.js
+++ b/apolloschurchapp/src/content-single/DevotionalContentItem/ScriptureTab.js
@@ -3,7 +3,7 @@ import { ScrollView } from 'react-native';
 import PropTypes from 'prop-types';
 import { PaddedView } from '@apollosproject/ui-kit';
 import ScriptureItem from '@apollosproject/ui-scripture';
-import { HorizontalContentSeriesFeedConnected } from '@apollosproject/ui-connected';
+import HorizontalContentFeed from '../HorizontalContentFeed';
 
 /**
  * This is the Scripture side of the Devotional tabbed component.
@@ -27,10 +27,7 @@ const ScriptureTab = ({ id, scripture, isLoading, navigation }) => (
         />
       ))}
     </PaddedView>
-    <HorizontalContentSeriesFeedConnected
-      contentId={id}
-      navigation={navigation}
-    />
+    <HorizontalContentFeed contentId={id} navigation={navigation} />
   </ScrollView>
 );
 
diff --git a/apolloschurchapp/src/content-single/DevotionalContentItem/index.js b/apolloschurchapp/src/content-single/DevotionalContentItem/index.js
index 9d39893..2ddacec 100644
--- a/apolloschurchapp/src/content-single/DevotionalContentItem/index.js
+++ b/apolloschurchapp/src/content-single/DevotionalContentItem/index.js
@@ -81,9 +81,7 @@ class DevotionalContentItem extends PureComponent {
     />
   );
 
-  renderLoading = () => (
-    <ContentTab title={''} isLoading navigation={this.props.navigation} />
-  );
+  renderLoading = () => <ContentTab title={''} isLoading />;
 
   renderTabs = ({ data, error, loading }) => {
     if (error) return <ErrorCard error={error} />;
diff --git a/apolloschurchapp/src/content-single/HTMLContent/getContentItemContent.js b/apolloschurchapp/src/content-single/HTMLContent/getContentItemContent.js
new file mode 100644
index 0000000..207df6d
--- /dev/null
+++ b/apolloschurchapp/src/content-single/HTMLContent/getContentItemContent.js
@@ -0,0 +1,12 @@
+import gql from 'graphql-tag';
+
+export default gql`
+  query getContentItemHTML($contentId: ID!) {
+    node(id: $contentId) {
+      ... on ContentItem {
+        id
+        htmlContent
+      }
+    }
+  }
+`;
diff --git a/apolloschurchapp/src/content-single/HTMLContent/index.js b/apolloschurchapp/src/content-single/HTMLContent/index.js
new file mode 100644
index 0000000..b830a1d
--- /dev/null
+++ b/apolloschurchapp/src/content-single/HTMLContent/index.js
@@ -0,0 +1,43 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import { Query } from 'react-apollo';
+import InAppBrowser from 'react-native-inappbrowser-reborn';
+
+import HTMLView from '@apollosproject/ui-htmlview';
+import { ErrorCard } from '@apollosproject/ui-kit';
+
+import GET_CONTENT_ITEM_CONTENT from './getContentItemContent';
+
+function handlePressAnchor(url) {
+  return InAppBrowser.open(url);
+}
+
+const HTMLContent = ({ contentId }) => {
+  if (!contentId) return <HTMLView isLoading />;
+
+  return (
+    <Query
+      query={GET_CONTENT_ITEM_CONTENT}
+      variables={{ contentId }}
+      fetchPolicy={'cache-and-network'}
+    >
+      {({ data: { node: { htmlContent } = {} } = {}, loading, error }) => {
+        if (!htmlContent && error) return <ErrorCard error={error} />;
+        return (
+          <HTMLView
+            isLoading={!htmlContent && loading}
+            onPressAnchor={handlePressAnchor}
+          >
+            {htmlContent}
+          </HTMLView>
+        );
+      }}
+    </Query>
+  );
+};
+
+HTMLContent.propTypes = {
+  contentId: PropTypes.string,
+};
+
+export default HTMLContent;
diff --git a/apolloschurchapp/src/content-single/HorizontalContentFeed/HorizontalContentFeed.tests.js b/apolloschurchapp/src/content-single/HorizontalContentFeed/HorizontalContentFeed.tests.js
new file mode 100644
index 0000000..910fc08
--- /dev/null
+++ b/apolloschurchapp/src/content-single/HorizontalContentFeed/HorizontalContentFeed.tests.js
@@ -0,0 +1,206 @@
+import React from 'react';
+import { GET_CONTENT_CARD } from '@apollosproject/ui-connected';
+import Providers from '../../Providers';
+import { renderWithApolloData } from '../../utils/testUtils';
+import GET_HORIZONTAL_CONTENT from './getHorizontalContent';
+import HorizontalContentFeed from '.';
+
+const mock = {
+  request: {
+    query: GET_HORIZONTAL_CONTENT,
+    variables: { itemId: 'ContentSeriesContentItem:123' },
+  },
+  result: {
+    data: {
+      node: {
+        id: 'ContentSeriesContentItem:123',
+        childContentItemsConnection: {
+          edges: [
+            {
+              cursor: 'b487224762b030f470967f45d7205823',
+              node: {
+                id: 'DevotionalContentItem:d395278cd4b68e074ca4e595c8feab6d',
+                coverImage: {
+                  name: 'Square Image',
+                  sources: [
+                    {
+                      uri:
+                        'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D31af1a61-360c-4b1e-8e62-45517c06a9a2',
+                      __typename: 'ImageMediaSource',
+                    },
+                  ],
+                  __typename: 'ImageMedia',
+                },
+                parentChannel: {
+                  id: 'ContentChannel:559b23fd0aa90e81b1c023e72e230fa1',
+                  name: 'Devotional',
+                  iconName: 'text',
+                  __typename: 'ContentChannel',
+                },
+                title: 'God sees who you can be not who you are',
+                sharing: {
+                  url:
+                    'https://apollosrock.newspring.cc/devotional/god-sees-who-you-can-be-not-who-you-are',
+                  message:
+                    'God sees who you can be not who you are - Life is challenging enough.',
+                  title: 'Share via ...',
+                  __typename: 'SharableContentItem',
+                },
+                __typename: 'DevotionalContentItem',
+              },
+              __typename: 'ContentItemsConnectionEdge',
+            },
+            {
+              cursor: '4affc1122ad80d4edcf6c5bc9d88ae99',
+              node: {
+                id: 'DevotionalContentItem:fbea6914a3e8877516cbd333d919075d',
+                coverImage: {
+                  name: 'Square Image',
+                  sources: [
+                    {
+                      uri:
+                        'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D31af1a61-360c-4b1e-8e62-45517c06a9a2',
+                      __typename: 'ImageMediaSource',
+                    },
+                  ],
+                  __typename: 'ImageMedia',
+                },
+                parentChannel: {
+                  id: 'ContentChannel:559b23fd0aa90e81b1c023e72e230fa1',
+                  name: 'Devotional',
+                  iconName: 'text',
+                  __typename: 'ContentChannel',
+                },
+                title: 'Thank God for the friends who will tell it like it is',
+                sharing: {
+                  url:
+                    'https://apollosrock.newspring.cc/devotional/thank-god-for-the-friends-who-will-tell-it-like-it-is',
+                  message:
+                    'Thank God for the friends who will tell it like it is - Some of us grew up in a sanitized church.',
+                  title: 'Share via ...',
+                  __typename: 'SharableContentItem',
+                },
+                __typename: 'DevotionalContentItem',
+              },
+              __typename: 'ContentItemsConnectionEdge',
+            },
+            {
+              cursor: '659a26257a49fb2bf1446bb747bf7dd3',
+              node: {
+                id: 'DevotionalContentItem:5e18250f586ab8de4d3d6292c919dcc4',
+                coverImage: {
+                  name: 'Square Image',
+                  sources: [
+                    {
+                      uri:
+                        'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D31af1a61-360c-4b1e-8e62-45517c06a9a2',
+                      __typename: 'ImageMediaSource',
+                    },
+                  ],
+                  __typename: 'ImageMedia',
+                },
+                parentChannel: {
+                  id: 'ContentChannel:559b23fd0aa90e81b1c023e72e230fa1',
+                  name: 'Devotional',
+                  iconName: 'text',
+                  __typename: 'ContentChannel',
+                },
+                title: 'No sin is too bad',
+                sharing: {
+                  url:
+                    'https://apollosrock.newspring.cc/devotional/no-sin-is-too-bad',
+                  message:
+                    'No sin is too bad - In Jeremiah 3, God’s people had really messed up.',
+                  title: 'Share via ...',
+                  __typename: 'SharableContentItem',
+                },
+                __typename: 'DevotionalContentItem',
+              },
+              __typename: 'ContentItemsConnectionEdge',
+            },
+            {
+              cursor: 'c8d2fe738629909c33010432432f21c8',
+              node: {
+                id: 'DevotionalContentItem:bdc2c29b85949e4ca8232b373a07953d',
+                coverImage: {
+                  name: 'Square Image',
+                  sources: [
+                    {
+                      uri:
+                        'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D31af1a61-360c-4b1e-8e62-45517c06a9a2',
+                      __typename: 'ImageMediaSource',
+                    },
+                  ],
+                  __typename: 'ImageMedia',
+                },
+                parentChannel: {
+                  id: 'ContentChannel:559b23fd0aa90e81b1c023e72e230fa1',
+                  name: 'Devotional',
+                  iconName: 'text',
+                  __typename: 'ContentChannel',
+                },
+                title: 'Change starts with a choice',
+                sharing: {
+                  url:
+                    'https://apollosrock.newspring.cc/devotional/change-starts-with-a-choice',
+                  message:
+                    'Change starts with a choice - Have you ever restored an old piece of furniture?',
+                  title: 'Share via ...',
+                  __typename: 'SharableContentItem',
+                },
+                __typename: 'DevotionalContentItem',
+              },
+              __typename: 'ContentItemsConnectionEdge',
+            },
+          ],
+          __typename: 'ContentItemsConnection',
+        },
+        siblingContentItemsConnection: {
+          edges: [],
+          __typename: 'ContentItemsConnection',
+        },
+        __typename: 'ContentSeriesContentItem',
+      },
+    },
+  },
+};
+
+const navigation = {
+  push: jest.fn(),
+};
+
+const additionalMocks = mock.result.data.node.childContentItemsConnection.edges.map(
+  ({ node }) => ({
+    request: {
+      query: GET_CONTENT_CARD,
+      variables: { contentId: node.id },
+    },
+    result: {
+      data: {
+        node: {
+          ...node,
+          summary: 'bla bla bla',
+          isLiked: false,
+          theme: null,
+          coverImage: null,
+        },
+      },
+    },
+  })
+);
+
+console.log(additionalMocks);
+
+describe('the HorizontalContentFeed component', () => {
+  it('renders a horizontal content feed', async () => {
+    const tree = await renderWithApolloData(
+      <Providers mocks={[mock, ...additionalMocks]}>
+        <HorizontalContentFeed
+          contentId={'ContentSeriesContentItem:123'}
+          navigation={navigation}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/content-single/HorizontalContentFeed/getHorizontalContent.js b/apolloschurchapp/src/content-single/HorizontalContentFeed/getHorizontalContent.js
new file mode 100644
index 0000000..0aa6057
--- /dev/null
+++ b/apolloschurchapp/src/content-single/HorizontalContentFeed/getHorizontalContent.js
@@ -0,0 +1,29 @@
+import gql from 'graphql-tag';
+import ApollosConfig from '@apollosproject/config';
+
+export default gql`
+  query getHorizontalContent($itemId: ID!, $cursor: String) {
+    node(id: $itemId) {
+      ... on ContentItem {
+        id
+        childContentItemsConnection(after: $cursor) {
+          edges {
+            cursor
+            node {
+              ...contentCardFragment
+            }
+          }
+        }
+        siblingContentItemsConnection(after: $cursor) {
+          edges {
+            cursor
+            node {
+              ...contentCardFragment
+            }
+          }
+        }
+      }
+    }
+  }
+  ${ApollosConfig.FRAGMENTS.CONTENT_CARD_FRAGMENT}
+`;
diff --git a/apolloschurchapp/src/content-single/HorizontalContentFeed/index.js b/apolloschurchapp/src/content-single/HorizontalContentFeed/index.js
new file mode 100644
index 0000000..0da9322
--- /dev/null
+++ b/apolloschurchapp/src/content-single/HorizontalContentFeed/index.js
@@ -0,0 +1,119 @@
+import React, { Component } from 'react';
+import { get } from 'lodash';
+import PropTypes from 'prop-types';
+import { withNavigation } from 'react-navigation';
+import { Query } from 'react-apollo';
+
+import { HorizontalTileFeed, TouchableScale } from '@apollosproject/ui-kit';
+
+import { HorizontalContentCardConnected } from '@apollosproject/ui-connected';
+
+import GET_HORIZONTAL_CONTENT from './getHorizontalContent';
+
+const loadingStateObject = {
+  node: {
+    id: 'fakeId0',
+    title: '',
+    isLoading: true,
+  },
+};
+
+class HorizontalContentFeed extends Component {
+  static propTypes = {
+    contentId: PropTypes.string,
+    navigation: PropTypes.shape({
+      push: PropTypes.func,
+    }),
+  };
+
+  renderItem = ({ item }) => {
+    const itemId = get(item, 'id', '');
+    const disabled = get(item, 'id', '') === this.props.contentId;
+    return (
+      <TouchableScale
+        onPress={() => this.handleOnPressItem(item)}
+        disabled={disabled}
+      >
+        <HorizontalContentCardConnected
+          contentId={itemId}
+          disabled={disabled}
+        />
+      </TouchableScale>
+    );
+  };
+
+  handleOnPressItem = (item) => {
+    this.props.navigation.push('ContentSingle', {
+      itemId: item.id,
+    });
+  };
+
+  renderFeed = ({ data, loading, error, fetchMore }) => {
+    if (error) return null;
+    if (loading) return null;
+
+    const children = get(data, 'node.childContentItemsConnection.edges', []);
+    const siblings = get(data, 'node.siblingContentItemsConnection.edges', []);
+    const isParent = children.length > 0;
+
+    const edges = isParent ? children : siblings;
+    const content = edges.map((edge) => edge.node);
+    const { cursor } = edges.length && edges[edges.length - 1];
+    const currentIndex = content.findIndex(
+      ({ id }) => id === this.props.contentId
+    );
+    const initialScrollIndex = currentIndex === -1 ? 0 : currentIndex;
+
+    return content && content.length ? (
+      <HorizontalTileFeed
+        content={content}
+        loadingStateObject={loadingStateObject}
+        renderItem={this.renderItem}
+        initialScrollIndex={initialScrollIndex}
+        getItemLayout={(itemData, index) => ({
+          // We need to pass this function so that initialScrollIndex will work.
+          length: 240,
+          offset: 240 * index,
+          index,
+        })}
+        onEndReached={() =>
+          fetchMore({
+            query: GET_HORIZONTAL_CONTENT,
+            variables: { cursor, itemId: this.props.contentId },
+            updateQuery: (previousResult, { fetchMoreResult }) => {
+              const connection = isParent
+                ? 'childContentItemsConnection'
+                : 'siblingContentItemsConnection';
+              const newEdges = get(fetchMoreResult.node, connection, []).edges;
+
+              return {
+                node: {
+                  ...previousResult.node,
+                  [connection]: {
+                    ...previousResult.node[connection],
+                    edges: [...edges, ...newEdges],
+                  },
+                },
+              };
+            },
+          })
+        }
+      />
+    ) : null;
+  };
+
+  render() {
+    if (!this.props.contentId) return this.renderFeed({ loading: true });
+
+    return (
+      <Query
+        query={GET_HORIZONTAL_CONTENT}
+        variables={{ itemId: this.props.contentId }}
+      >
+        {this.renderFeed}
+      </Query>
+    );
+  }
+}
+
+export default withNavigation(HorizontalContentFeed);
diff --git a/apolloschurchapp/src/content-single/MediaControls/getContentMedia.js b/apolloschurchapp/src/content-single/MediaControls/getContentMedia.js
new file mode 100644
index 0000000..6e84f27
--- /dev/null
+++ b/apolloschurchapp/src/content-single/MediaControls/getContentMedia.js
@@ -0,0 +1,13 @@
+import gql from 'graphql-tag';
+import ApollosConfig from '@apollosproject/config';
+
+export default gql`
+  query getContentMedia($contentId: ID!) {
+    node(id: $contentId) {
+      ... on ContentItem {
+        ...contentMediaFragment
+      }
+    }
+  }
+  ${ApollosConfig.FRAGMENTS.CONTENT_MEDIA_FRAGMENT}
+`;
diff --git a/apolloschurchapp/src/content-single/MediaControls/index.js b/apolloschurchapp/src/content-single/MediaControls/index.js
new file mode 100644
index 0000000..f3ac16f
--- /dev/null
+++ b/apolloschurchapp/src/content-single/MediaControls/index.js
@@ -0,0 +1,157 @@
+import React, { PureComponent } from 'react';
+import PropTypes from 'prop-types';
+import { Query, Mutation } from 'react-apollo';
+import { View } from 'react-native';
+import { get } from 'lodash';
+
+import { PLAY_VIDEO } from '@apollosproject/ui-media-player';
+import {
+  styled,
+  TouchableScale,
+  MediaThumbnail,
+  MediaThumbnailIcon,
+  MediaThumbnailItem,
+  H6,
+} from '@apollosproject/ui-kit';
+import {
+  LiveConsumer,
+  RockAuthedWebBrowser,
+} from '@apollosproject/ui-connected';
+
+import GET_CONTENT_MEDIA from './getContentMedia';
+
+const Container = styled(({ theme }) => ({
+  flexDirection: 'row',
+  alignItems: 'flex-start',
+  justifyContent: 'flex-start',
+  marginTop: -(theme.sizing.baseUnit * 2.5),
+}))(View);
+
+const StyledMediaThumbnail = styled({ marginVertical: 0 })(MediaThumbnail);
+
+class MediaControls extends PureComponent {
+  static propTypes = {
+    contentId: PropTypes.string,
+  };
+
+  renderPlayButton = ({ action, coverImageSources }) => (
+    <Container>
+      <TouchableScale onPress={action}>
+        <StyledMediaThumbnail image={coverImageSources}>
+          <MediaThumbnailItem centered>
+            <MediaThumbnailIcon name="play" />
+          </MediaThumbnailItem>
+          <MediaThumbnailItem centered bottom>
+            <H6 padded>Play</H6>
+          </MediaThumbnailItem>
+        </StyledMediaThumbnail>
+      </TouchableScale>
+    </Container>
+  );
+
+  renderMedia = ({
+    videoSource,
+    coverImageSources,
+    title,
+    parentChannelName,
+  }) => (
+    <Mutation mutation={PLAY_VIDEO}>
+      {(play) =>
+        this.renderPlayButton({
+          action: () =>
+            play({
+              variables: {
+                mediaSource: videoSource,
+                posterSources: coverImageSources,
+                title,
+                isVideo: true,
+                artist: parentChannelName,
+              },
+            }),
+          coverImageSources,
+        })
+      }
+    </Mutation>
+  );
+
+  renderWebView = ({ webViewUrl, coverImageSources }) => (
+    <RockAuthedWebBrowser>
+      {(openUrl) =>
+        this.renderPlayButton({
+          action: () => openUrl(webViewUrl),
+          coverImageSources,
+        })
+      }
+    </RockAuthedWebBrowser>
+  );
+
+  renderControls = ({
+    liveStream,
+    loading,
+    error,
+    data: {
+      node: { videos, title, parentChannel = {}, coverImage = {} } = {},
+    } = {},
+  }) => {
+    if (loading || error) return null;
+    const isLive = !!liveStream;
+    const hasLiveStreamContent = !!(
+      get(liveStream, 'webViewUrl') || get(liveStream, 'media.sources[0]')
+    );
+
+    const videoSource = get(videos, '[0].sources[0]', null);
+    const shouldRender = (isLive && hasLiveStreamContent) || videoSource;
+
+    if (!shouldRender) return null;
+
+    const coverImageSources = (coverImage && coverImage.sources) || [];
+
+    // Content is live, and we have a livestream media
+    if (isLive && get(liveStream, 'media.sources[0].uri')) {
+      return this.renderMedia({
+        coverImageSources,
+        videoSource: liveStream.media.sources[0],
+        parentChannelName: parentChannel.name,
+        title,
+      });
+    }
+
+    // Content is live, and we don't have a livestream media
+    // but we do have a webview url
+    if (isLive && get(liveStream, 'webViewUrl')) {
+      return this.renderWebView({
+        webViewUrl: liveStream.webViewUrl,
+        coverImageSources,
+      });
+    }
+
+    // Default case, normal media.
+    return this.renderMedia({
+      coverImageSources,
+      videoSource,
+      parentChannelName: parentChannel.name,
+      title,
+    });
+  };
+
+  render() {
+    if (!this.props.contentId) return null;
+    return (
+      <LiveConsumer contentId={this.props.contentId}>
+        {(liveStream) => (
+          <Query
+            query={GET_CONTENT_MEDIA}
+            fetchPolicy="cache-and-network"
+            variables={{ contentId: this.props.contentId }}
+          >
+            {({ data, loading, error }) =>
+              this.renderControls({ data, loading, error, liveStream })
+            }
+          </Query>
+        )}
+      </LiveConsumer>
+    );
+  }
+}
+
+export default MediaControls;
diff --git a/apolloschurchapp/src/content-single/UniversalContentItem/index.js b/apolloschurchapp/src/content-single/UniversalContentItem/index.js
index 4f49089..f02d6a9 100644
--- a/apolloschurchapp/src/content-single/UniversalContentItem/index.js
+++ b/apolloschurchapp/src/content-single/UniversalContentItem/index.js
@@ -2,11 +2,6 @@ import React from 'react';
 import { Animated } from 'react-native';
 import { get } from 'lodash';
 import PropTypes from 'prop-types';
-import {
-  ContentHTMLViewConnected,
-  HorizontalContentSeriesFeedConnected,
-  MediaControlsConnected,
-} from '@apollosproject/ui-connected';
 import {
   styled,
   GradientOverlayImage,
@@ -15,15 +10,13 @@ import {
   H2,
   StretchyView,
 } from '@apollosproject/ui-kit';
-
+import MediaControls from '../MediaControls';
+import HTMLContent from '../HTMLContent';
+import HorizontalContentFeed from '../HorizontalContentFeed';
 import Features from '../Features';
 
 const FlexedScrollView = styled({ flex: 1 })(Animated.ScrollView);
 
-const StyledMediaControlsConnected = styled(({ theme }) => ({
-  marginTop: -(theme.sizing.baseUnit * 2.5),
-}))(MediaControlsConnected);
-
 const UniversalContentItem = ({ content, loading }) => {
   const coverImageSources = get(content, 'coverImage.sources', []);
   return (
@@ -39,16 +32,16 @@ const UniversalContentItem = ({ content, loading }) => {
                 />
               </Stretchy>
             ) : null}
-            <StyledMediaControlsConnected contentId={content.id} />
+            <MediaControls contentId={content.id} />
             {/* fixes text/navigation spacing by adding vertical padding if we dont have an image */}
             <PaddedView vertical={!coverImageSources.length}>
               <H2 padded isLoading={!content.title && loading}>
                 {content.title}
               </H2>
-              <ContentHTMLViewConnected contentId={content.id} />
+              <HTMLContent contentId={content.id} />
             </PaddedView>
             <Features contentId={content.id} />
-            <HorizontalContentSeriesFeedConnected contentId={content.id} />
+            <HorizontalContentFeed contentId={content.id} />
           </FlexedScrollView>
         )}
       </StretchyView>
diff --git a/apolloschurchapp/src/content-single/WeekendContentItem/index.js b/apolloschurchapp/src/content-single/WeekendContentItem/index.js
index acf72e6..fc35716 100644
--- a/apolloschurchapp/src/content-single/WeekendContentItem/index.js
+++ b/apolloschurchapp/src/content-single/WeekendContentItem/index.js
@@ -2,12 +2,6 @@ import React from 'react';
 import { Animated, Dimensions } from 'react-native';
 import { get } from 'lodash';
 import PropTypes from 'prop-types';
-import {
-  ContentHTMLViewConnected,
-  HorizontalContentSeriesFeedConnected,
-  LiveConsumer,
-  MediaControlsConnected,
-} from '@apollosproject/ui-connected';
 import {
   styled,
   GradientOverlayImage,
@@ -20,7 +14,11 @@ import {
   CardLabel,
   withTheme,
 } from '@apollosproject/ui-kit';
+import { LiveConsumer } from '@apollosproject/ui-connected';
 
+import MediaControls from '../MediaControls';
+import HTMLContent from '../HTMLContent';
+import HorizontalContentFeed from '../HorizontalContentFeed';
 import Features from '../Features';
 
 const FlexedScrollView = styled({ flex: 1 })(Animated.ScrollView);
@@ -32,10 +30,6 @@ const Header = styled(({ hasMedia, theme }) => ({
   // backgroundColor: theme.colors.primary,
 }))(PaddedView);
 
-const StyledMediaControlsConnected = styled(({ theme }) => ({
-  marginTop: -(theme.sizing.baseUnit * 2.5),
-}))(MediaControlsConnected);
-
 const LiveAwareLabel = withTheme(({ isLive, title, theme }) => ({
   ...(isLive
     ? {
@@ -52,52 +46,55 @@ const LiveAwareLabel = withTheme(({ isLive, title, theme }) => ({
 const WeekendContentItem = ({ content, loading }) => {
   const coverImageSources = get(content, 'coverImage.sources', []);
   return (
-    <ThemeConsumer>
-      {(theme) => (
-        <BackgroundView>
-          <StretchyView>
-            {({ Stretchy, ...scrollViewProps }) => (
-              <FlexedScrollView {...scrollViewProps}>
-                <Header hasMedia={content.videos && content.videos.sources}>
-                  <ThemeMixin mixin={{ type: 'dark' }}>
-                    {coverImageSources.length || loading ? (
-                      <Stretchy
-                        background
-                        style={{ backgroundColor: theme.colors.primary }}
-                      >
-                        <GradientOverlayImage
-                          isLoading={!coverImageSources.length && loading}
-                          overlayColor={theme.colors.primary}
-                          overlayType="featured"
-                          source={coverImageSources}
-                        />
-                      </Stretchy>
-                    ) : null}
-                    <LiveConsumer contentId={content.id}>
-                      {(liveStream) => (
-                        <LiveAwareLabel
-                          isLive={!!liveStream}
-                          title={
-                            content.parentChannel && content.parentChannel.name
-                          }
-                        />
-                      )}
-                    </LiveConsumer>
-                    <H2 padded isLoading={!content.title && loading}>
-                      {content.title}
-                    </H2>
-                    <ContentHTMLViewConnected contentId={content.id} />
-                  </ThemeMixin>
-                </Header>
-                <StyledMediaControlsConnected contentId={content.id} />
-                <Features contentId={content.id} />
-                <HorizontalContentSeriesFeedConnected contentId={content.id} />
-              </FlexedScrollView>
-            )}
-          </StretchyView>
-        </BackgroundView>
-      )}
-    </ThemeConsumer>
+    <ThemeMixin mixin={content.theme || {}}>
+      <ThemeConsumer>
+        {(theme) => (
+          <BackgroundView>
+            <StretchyView>
+              {({ Stretchy, ...scrollViewProps }) => (
+                <FlexedScrollView {...scrollViewProps}>
+                  <Header hasMedia={content.videos && content.videos.sources}>
+                    <ThemeMixin mixin={{ type: 'dark' }}>
+                      {coverImageSources.length || loading ? (
+                        <Stretchy
+                          background
+                          style={{ backgroundColor: theme.colors.primary }}
+                        >
+                          <GradientOverlayImage
+                            isLoading={!coverImageSources.length && loading}
+                            overlayColor={theme.colors.primary}
+                            overlayType="featured"
+                            source={coverImageSources}
+                          />
+                        </Stretchy>
+                      ) : null}
+                      <LiveConsumer contentId={content.id}>
+                        {(liveStream) => (
+                          <LiveAwareLabel
+                            isLive={!!liveStream}
+                            title={
+                              content.parentChannel &&
+                              content.parentChannel.name
+                            }
+                          />
+                        )}
+                      </LiveConsumer>
+                      <H2 padded isLoading={!content.title && loading}>
+                        {content.title}
+                      </H2>
+                      <HTMLContent contentId={content.id} />
+                    </ThemeMixin>
+                  </Header>
+                  <MediaControls contentId={content.id} />
+                  <Features contentId={content.id} />
+                  <HorizontalContentFeed contentId={content.id} />
+                </FlexedScrollView>
+              )}
+            </StretchyView>
+          </BackgroundView>
+        )}
+      </ThemeConsumer>
+    </ThemeMixin>
   );
 };
 
diff --git a/apolloschurchapp/src/index.js b/apolloschurchapp/src/index.js
index 64ab0de..114240e 100644
--- a/apolloschurchapp/src/index.js
+++ b/apolloschurchapp/src/index.js
@@ -6,7 +6,6 @@ import SplashScreen from 'react-native-splash-screen';
 
 import { BackgroundView, withTheme } from '@apollosproject/ui-kit';
 import Passes from '@apollosproject/ui-passes';
-import { MapViewConnected as Location } from '@apollosproject/ui-mapview';
 import { MediaPlayer } from '@apollosproject/ui-media-player';
 import Auth, { ProtectedRoute } from '@apollosproject/ui-auth';
 
@@ -17,6 +16,7 @@ import Event from './event';
 import Tabs from './tabs';
 import PersonalDetails from './user-settings/PersonalDetails';
 import ChangePassword from './user-settings/ChangePassword';
+import Location from './user-settings/Locations';
 import LandingScreen from './LandingScreen';
 import UserWebBrowser from './user-web-browser';
 import Onboarding from './ui/Onboarding';
diff --git a/apolloschurchapp/src/tabs/connect/Connect.js b/apolloschurchapp/src/tabs/connect/Connect.js
index 461e03e..628e03a 100644
--- a/apolloschurchapp/src/tabs/connect/Connect.js
+++ b/apolloschurchapp/src/tabs/connect/Connect.js
@@ -5,7 +5,6 @@ import PropTypes from 'prop-types';
 
 import { HorizontalLikedContentFeedConnected } from '@apollosproject/ui-connected';
 import { BackgroundView } from '@apollosproject/ui-kit';
-
 import ActionTable from './ActionTable';
 import ActionBar from './ActionBar';
 import UserAvatarHeader from './UserAvatarHeader';
diff --git a/apolloschurchapp/src/tabs/connect/UserAvatarHeader.js b/apolloschurchapp/src/tabs/connect/UserAvatarHeader.js
new file mode 100644
index 0000000..9f1b65a
--- /dev/null
+++ b/apolloschurchapp/src/tabs/connect/UserAvatarHeader.js
@@ -0,0 +1,44 @@
+import React from 'react';
+import { Query } from 'react-apollo';
+import PropTypes from 'prop-types';
+import { withNavigation } from 'react-navigation';
+
+import { Avatar, H3, styled, PaddedView } from '@apollosproject/ui-kit';
+import GET_USER_PROFILE from './getUserProfile';
+
+const Container = styled({
+  alignItems: 'center',
+  justifyContent: 'center',
+})(PaddedView);
+
+const UserAvatarHeader = ({ navigation }) => (
+  <Query query={GET_USER_PROFILE} fetchPolicy="cache-and-network">
+    {({
+      data: { currentUser: { profile: { photo, firstName } = {} } = {} } = {},
+    }) => (
+      <Container>
+        <PaddedView horizontal={false}>
+          <Avatar
+            source={photo}
+            size="large"
+            buttonIcon="settings"
+            onPressIcon={() => navigation.navigate('UserSettings')}
+          />
+        </PaddedView>
+        <H3>
+          Hello
+          {firstName ? ` ${firstName}` : ''}!
+        </H3>
+      </Container>
+    )}
+  </Query>
+);
+
+UserAvatarHeader.propTypes = {
+  navigation: PropTypes.shape({
+    getParam: PropTypes.func,
+    navigate: PropTypes.func,
+  }),
+};
+
+export default withNavigation(UserAvatarHeader);
diff --git a/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeader.js b/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeader.js
deleted file mode 100644
index 5c5e2fa..0000000
--- a/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeader.js
+++ /dev/null
@@ -1,74 +0,0 @@
-import React from 'react';
-import { Query } from 'react-apollo';
-import PropTypes from 'prop-types';
-import { withNavigation } from 'react-navigation';
-import { get } from 'lodash';
-
-import { H3, styled, PaddedView } from '@apollosproject/ui-kit';
-import { UserAvatarConnected } from '@apollosproject/ui-connected';
-import GET_USER_PROFILE from './getUserProfile';
-
-const GetUserProfile = ({ children }) => (
-  <Query query={GET_USER_PROFILE}>
-    {({ data: { currentUser = {} } = {} }) => {
-      const firstName = get(currentUser, 'profile.firstName');
-      return children({ firstName });
-    }}
-  </Query>
-);
-
-GetUserProfile.propTypes = {
-  children: PropTypes.func.isRequired,
-};
-
-const Container = styled({
-  alignItems: 'center',
-  justifyContent: 'center',
-})(PaddedView);
-
-const UserAvatarHeader = ({
-  buttonIcon,
-  message,
-  navigation,
-  onPressIcon,
-  size,
-  ...props
-}) => (
-  <Container>
-    <PaddedView horizontal={false}>
-      <UserAvatarConnected
-        size={size}
-        buttonIcon={buttonIcon}
-        onPressIcon={() => navigation.navigate('UserSettings')}
-        {...props}
-      />
-    </PaddedView>
-    <GetUserProfile>
-      {({ firstName }) => (
-        <H3>
-          {message}
-          {firstName ? ` ${firstName}` : ''}!
-        </H3>
-      )}
-    </GetUserProfile>
-  </Container>
-);
-
-UserAvatarHeader.propTypes = {
-  buttonIcon: PropTypes.string,
-  message: PropTypes.string,
-  navigation: PropTypes.shape({
-    getParam: PropTypes.func,
-    navigate: PropTypes.func,
-  }).isRequired,
-  onPressIcon: PropTypes.func,
-  size: PropTypes.string,
-};
-
-UserAvatarHeader.defaultProps = {
-  buttonIcon: 'settings',
-  message: 'Hello',
-  size: 'large',
-};
-
-export default withNavigation(UserAvatarHeader);
diff --git a/apolloschurchapp/src/tabs/connect/UserAvatarHeader/index.js b/apolloschurchapp/src/tabs/connect/UserAvatarHeader/index.js
deleted file mode 100644
index 01d8628..0000000
--- a/apolloschurchapp/src/tabs/connect/UserAvatarHeader/index.js
+++ /dev/null
@@ -1,5 +0,0 @@
-import UserAvatarHeader from './UserAvatarHeader';
-
-export GET_USER_PROFILE from './getUserProfile';
-
-export default UserAvatarHeader;
diff --git a/apolloschurchapp/src/tabs/connect/UserAvatarHeader/getUserProfile.js b/apolloschurchapp/src/tabs/connect/getUserProfile.js
similarity index 100%
rename from apolloschurchapp/src/tabs/connect/UserAvatarHeader/getUserProfile.js
rename to apolloschurchapp/src/tabs/connect/getUserProfile.js
diff --git a/apolloschurchapp/src/tabs/discover/SearchFeed/index.js b/apolloschurchapp/src/tabs/discover/SearchFeed/index.js
index 3aa9ff2..2e6c5ec 100644
--- a/apolloschurchapp/src/tabs/discover/SearchFeed/index.js
+++ b/apolloschurchapp/src/tabs/discover/SearchFeed/index.js
@@ -6,7 +6,8 @@ import { get } from 'lodash';
 import PropTypes from 'prop-types';
 
 import { FeedView } from '@apollosproject/ui-kit';
-import { SearchCardConnected } from '@apollosproject/ui-connected';
+
+import SearchCard from '../../../ui/SearchCard';
 
 import GET_SEARCH_RESULTS from './getSearchResults';
 import NoResults from './NoResults';
@@ -36,7 +37,7 @@ const SearchFeed = withNavigation(({ navigation, searchText }) => (
   >
     {({ loading, error, data, refetch }) => (
       <StyledFeedView
-        ListItemComponent={SearchCardConnected}
+        ListItemComponent={SearchCard}
         content={get(data, 'search.edges', [])}
         ListEmptyComponent={() => <NoResults searchText={searchText} />}
         hasContent={get(data, 'search.edges', []).length}
diff --git a/apolloschurchapp/src/testing-control-panel/index.js b/apolloschurchapp/src/testing-control-panel/index.js
index 165caf8..7417f33 100644
--- a/apolloschurchapp/src/testing-control-panel/index.js
+++ b/apolloschurchapp/src/testing-control-panel/index.js
@@ -28,24 +28,17 @@ export default class TestingControlPanel extends PureComponent {
         </UserWebBrowserConsumer>
         <RockAuthedWebBrowser>
           {(openUrl) => (
-            <>
-              <TouchableCell
-                handlePress={() =>
-                  openUrl(
-                    'https://apollosrock.newspring.cc',
-                    {},
-                    { useRockToken: true }
-                  )
-                }
-                iconName="share"
-                cellText={`Open InAppBrowser With Rock Token`}
-              />
-              <TouchableCell
-                handlePress={() => openUrl('mailto:fake@apollosproject.com')}
-                iconName="share"
-                cellText={`Open Email link`}
-              />
-            </>
+            <TouchableCell
+              handlePress={() =>
+                openUrl(
+                  'https://apollosrock.newspring.cc',
+                  {},
+                  { useRockToken: true }
+                )
+              }
+              iconName="share"
+              cellText={`Open InAppBrowser With Rock Token`}
+            />
           )}
         </RockAuthedWebBrowser>
         <TouchableCell
diff --git a/apolloschurchapp/src/ui/Onboarding/index.js b/apolloschurchapp/src/ui/Onboarding/index.js
index 28510f3..3965e47 100644
--- a/apolloschurchapp/src/ui/Onboarding/index.js
+++ b/apolloschurchapp/src/ui/Onboarding/index.js
@@ -5,6 +5,7 @@ import {
   requestNotifications,
   RESULTS,
 } from 'react-native-permissions';
+
 import {
   GradientOverlayImage,
   styled,
@@ -18,7 +19,6 @@ import {
   LocationFinderConnected,
   OnboardingSwiper,
 } from '@apollosproject/ui-onboarding';
-import { resetAction } from '../../NavigationService';
 
 const FullscreenBackgroundView = styled({
   position: 'absolute',
@@ -79,14 +79,7 @@ function Onboarding({ navigation }) {
                   }
                 });
               }}
-              onPressPrimary={() =>
-                navigation.dispatch(
-                  resetAction({
-                    navigatorName: 'Tabs',
-                    routeName: 'Home',
-                  })
-                )
-              }
+              onPressPrimary={() => navigation.replace('Tabs')}
               primaryNavText={'Finish'}
               BackgroundComponent={
                 <StyledGradient
diff --git a/apolloschurchapp/src/ui/SearchCard/SearchCard.tests.js b/apolloschurchapp/src/ui/SearchCard/SearchCard.tests.js
new file mode 100644
index 0000000..478a956
--- /dev/null
+++ b/apolloschurchapp/src/ui/SearchCard/SearchCard.tests.js
@@ -0,0 +1,70 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from '../../Providers';
+
+import SearchCard from '.';
+
+describe('The SearchCard component', () => {
+  it('should render', () => {
+    const data = {
+      title: 'How to lead people to Jesus',
+      summary:
+        'Love compels a mother to lose all dignity in public as she screams the name of her lost child.',
+      coverImage: {
+        name: null,
+        sources: [
+          {
+            uri:
+              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3Dd3a96243-2558-4c04-bf41-3aadcf41771f',
+            __typename: 'ImageMediaSource',
+          },
+        ],
+        __typename: 'ImageMedia',
+      },
+      cursor: 'b487224762b030f470967f45d7205823',
+      node: {
+        id: 'DevotionalContentItem:561dfb7dbd8a5c093fd8385c7edaadbc',
+        title: 'How to lead people to Jesus',
+        hyphenatedTitle: '-',
+        isLiked: false,
+        likedCount: 0,
+        summary:
+          'Love compels a mother to lose all dignity in public as she screams the name of her lost child.',
+        coverImage: {
+          name: 'Square Image',
+          sources: [
+            {
+              uri:
+                'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3Dd3a96243-2558-4c04-bf41-3aadcf41771f',
+              __typename: 'ImageMediaSource',
+            },
+          ],
+          __typename: 'ImageMedia',
+        },
+        theme: null,
+        parentChannel: {
+          id: 'ContentChannel:559b23fd0aa90e81b1c023e72e230fa1',
+          name: 'Devotional',
+          __typename: 'ContentChannel',
+        },
+        videos: [{ sources: [], __typename: 'VideoMedia' }],
+        audios: [],
+        __typename: 'DevotionalContentItem',
+      },
+      __typename: 'SearchResult',
+    };
+
+    const tree = renderer.create(
+      <Providers>
+        <SearchCard
+          coverImage={data.coverImage}
+          summary={data.summary}
+          title={data.title}
+          node={data.node}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/SearchCard/index.js b/apolloschurchapp/src/ui/SearchCard/index.js
new file mode 100644
index 0000000..8780834
--- /dev/null
+++ b/apolloschurchapp/src/ui/SearchCard/index.js
@@ -0,0 +1,55 @@
+import React, { memo } from 'react';
+import PropTypes from 'prop-types';
+import { get } from 'lodash';
+
+import { contentCardComponentMapper } from '@apollosproject/ui-connected';
+
+const SearchCard = memo(
+  ({
+    Component,
+    coverImage,
+    isLoading,
+    node,
+    summary,
+    title,
+    ...otherProps
+  }) => {
+    /* We don't have a way to know for certain if a particular card is true for `hasAction` without
+     * hitting Rock. While not 100% perfect we do know that these two types will have almost always
+     * have media associated with them. */
+    const hasAction = ['MediaContentItem', 'WeekendContentItem'].includes(
+      get(node, '__typename')
+    );
+
+    return (
+      <Component
+        coverImage={get(coverImage, 'sources', [])}
+        hasAction={hasAction}
+        isLoading={isLoading}
+        summary={summary}
+        title={title}
+        {...otherProps}
+        {...node}
+      />
+    );
+  }
+);
+
+SearchCard.propTypes = {
+  Component: PropTypes.func,
+  coverImage: PropTypes.shape({
+    sources: PropTypes.array,
+  }),
+  summary: PropTypes.string,
+  title: PropTypes.string,
+  node: PropTypes.shape({}),
+  isLoading: PropTypes.bool,
+};
+
+SearchCard.defaultProps = {
+  Component: contentCardComponentMapper,
+};
+
+SearchCard.displayName = 'SearchCard';
+
+export default SearchCard;
diff --git a/apolloschurchapp/src/user-settings/ChangeAvatar.js b/apolloschurchapp/src/user-settings/ChangeAvatar.js
new file mode 100644
index 0000000..ccadf1b
--- /dev/null
+++ b/apolloschurchapp/src/user-settings/ChangeAvatar.js
@@ -0,0 +1,76 @@
+import React, { PureComponent } from 'react';
+import { View } from 'react-native';
+import PropTypes from 'prop-types';
+import { get } from 'lodash';
+import { Query, ApolloConsumer } from 'react-apollo';
+
+import { PaddedView, Avatar, styled } from '@apollosproject/ui-kit';
+import GET_USER_PHOTO from './getUserPhoto';
+import uploadPhoto from './uploadPhoto';
+
+const GetPhotoData = ({ children }) => (
+  <Query query={GET_USER_PHOTO}>
+    {({ data: { currentUser = {} } = {} }) => {
+      const photo = get(currentUser, 'profile.photo');
+      return children({ photo });
+    }}
+  </Query>
+);
+
+GetPhotoData.propTypes = {
+  children: PropTypes.func.isRequired,
+};
+
+const Wrapper = styled({
+  justifyContent: 'center',
+  alignItems: 'center',
+})(View);
+
+export default class AvatarForm extends PureComponent {
+  state = {
+    isUploadingFile: false,
+  };
+
+  componentWillUnmount() {
+    this.setState({ isUploadingFile: false });
+  }
+
+  handleUploadPhoto = async ({ client }) => {
+    try {
+      await uploadPhoto({
+        client,
+        onUpload: () => this.setState({ isUploadingFile: true }),
+      });
+      await this.setState({ isUploadingFile: false });
+    } catch (e) {
+      console.warn(e);
+      this.setState({ isUploadingFile: false });
+    }
+  };
+
+  render() {
+    const { isUploadingFile } = this.state;
+
+    return (
+      <ApolloConsumer>
+        {(client) => (
+          <Wrapper>
+            <GetPhotoData>
+              {({ photo }) => (
+                <PaddedView horizontal={false}>
+                  <Avatar
+                    source={photo}
+                    size="large"
+                    buttonIcon="camera"
+                    onPressIcon={() => this.handleUploadPhoto({ client })}
+                    isLoading={isUploadingFile}
+                  />
+                </PaddedView>
+              )}
+            </GetPhotoData>
+          </Wrapper>
+        )}
+      </ApolloConsumer>
+    );
+  }
+}
diff --git a/apolloschurchapp/src/user-settings/Locations/Locations.tests.js b/apolloschurchapp/src/user-settings/Locations/Locations.tests.js
new file mode 100644
index 0000000..5505bf2
--- /dev/null
+++ b/apolloschurchapp/src/user-settings/Locations/Locations.tests.js
@@ -0,0 +1,133 @@
+import React from 'react';
+import { renderWithApolloData } from '../../utils/testUtils';
+
+import Providers from '../../Providers';
+import GET_CAMPUS_LOCATIONS from './getCampusLocations';
+import Location from './index';
+
+const campuses = [
+  {
+    __typename: 'Campus',
+    id: 'Campus:559b23fd0aa90e81b1c023e72e230fa1',
+    latitude: 34.59814,
+    longitude: -82.62045,
+    name: 'Anderson Campus',
+    street1: '2940 Concord Rd',
+    street2: '',
+    city: 'Anderson',
+    state: 'SC',
+    distanceFromLocation: 5,
+    postalCode: '29621-3619',
+    image: {
+      __typename: 'ImageMediaSource',
+      uri:
+        'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3Da47e8e69-9542-42de-9ed3-ff42fdc82417',
+    },
+  },
+  {
+    __typename: 'Campus',
+    id: 'Campus:965b6e6d7046a885bea4e300b5c0400d',
+    latitude: 32.95103,
+    longitude: -96.74738,
+    name: 'Dallas Campus',
+    street1: '102 N Weatherred Dr',
+    street2: '',
+    city: 'Richardson',
+    state: 'TX',
+    postalCode: '75080-5525',
+    distanceFromLocation: 50,
+    image: {
+      __typename: 'ImageMediaSource',
+      uri:
+        'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D5f9fd97a-fd6e-4ae5-ab5d-a9b95290d9b6',
+    },
+  },
+  {
+    __typename: 'Campus',
+    id: 'Campus:4f68015ba18662a7409d1219a4ce013e',
+    latitude: 39.10501,
+    longitude: -84.51138,
+    name: 'Cincinnati Campus',
+    street1: '120 E 8th St',
+    street2: '',
+    city: 'Cincinnati',
+    state: 'OH',
+    postalCode: '45202-2118',
+    distanceFromLocation: 500,
+    image: {
+      __typename: 'ImageMediaSource',
+      uri:
+        'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3Dbad9eb54-3e78-44a7-a028-3f2d6e71a36f',
+    },
+  },
+  {
+    __typename: 'Campus',
+    id: 'Campus:a0f64573eabf00a607bec911794d50fb',
+    latitude: 42.09203,
+    longitude: -88.13289,
+    name: 'Chicago Campus',
+    street1: '67 Algonquin Rd',
+    street2: '',
+    city: 'South Barrington',
+    state: 'IL',
+    postalCode: '60010-6143',
+    distanceFromLocation: 5000,
+    image: {
+      __typename: 'ImageMediaSource',
+      uri:
+        'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3Dede1fb83-968e-4bef-8d77-ad81c96e8a47',
+    },
+  },
+];
+
+describe('Display Native Map with Locations', () => {
+  const initialRegion = {
+    // roughly show the entire USA by default
+    latitude: 39.809734,
+    longitude: -98.555618,
+    latitudeDelta: 100,
+    longitudeDelta: 10,
+  };
+  const userLocation = {
+    latitude: 39.104797,
+    longitude: -84.511959,
+  };
+  it('Render a native map view', async () => {
+    const navigation = {
+      navigate: jest.fn(),
+      getParam: jest.fn(),
+      goBack: jest.fn(),
+    };
+
+    const mock = {
+      request: {
+        query: GET_CAMPUS_LOCATIONS,
+        variables: {
+          latitude: userLocation.latitude,
+          longitude: userLocation.longitude,
+        },
+      },
+      result: {
+        data: {
+          campuses,
+          currentUser: {
+            id: 'AuthenticatedUser:123',
+            __typename: 'AuthenticatedUser',
+            profile: {
+              id: 'Person:123',
+              __typename: 'Person',
+              campus: campuses[3],
+            },
+          },
+        },
+      },
+    };
+
+    const tree = await renderWithApolloData(
+      <Providers mocks={[mock]}>
+        <Location navigation={navigation} initialRegion={initialRegion} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/user-settings/Locations/Marker.js b/apolloschurchapp/src/user-settings/Locations/Marker.js
new file mode 100644
index 0000000..6f1fdfe
--- /dev/null
+++ b/apolloschurchapp/src/user-settings/Locations/Marker.js
@@ -0,0 +1,47 @@
+import React, { memo } from 'react';
+import { View, Animated } from 'react-native';
+import PropTypes from 'prop-types';
+import { Marker } from 'react-native-maps';
+import Color from 'color';
+
+import { styled } from '@apollosproject/ui-kit';
+
+const MarkerView = styled(({ theme }) => ({
+  width: theme.sizing.baseUnit * 0.5,
+  height: theme.sizing.baseUnit * 0.5,
+  borderRadius: theme.sizing.baseUnit * 0.25,
+  backgroundColor: Color(theme.colors.primary).fade(theme.alpha.medium),
+  zIndex: 2,
+}))(View);
+
+const MarkerRingView = styled(({ theme }) => ({
+  width: theme.sizing.baseUnit * 1.5,
+  height: theme.sizing.baseUnit * 1.5,
+  borderRadius: theme.sizing.baseUnit * 0.75,
+  backgroundColor: Color(theme.colors.primary).fade(theme.alpha.low),
+  borderWidth: 1,
+  borderColor: Color(theme.colors.primary).fade(theme.alpha.medium),
+  alignItems: 'center',
+  justifyContent: 'center',
+}))(View);
+
+const StyledMarker = memo(({ latitude, longitude, opacityStyle, onPress }) => (
+  <Marker onPress={onPress} coordinate={{ latitude, longitude }}>
+    <Animated.View style={opacityStyle}>
+      <MarkerRingView>
+        <MarkerView />
+      </MarkerRingView>
+    </Animated.View>
+  </Marker>
+));
+
+StyledMarker.displayName = 'StyledMarker';
+
+StyledMarker.propTypes = {
+  latitude: PropTypes.number.isRequired,
+  longitude: PropTypes.number.isRequired,
+  onPress: PropTypes.func.isRequired,
+  opacityStyle: PropTypes.shape({}),
+};
+
+export default StyledMarker;
diff --git a/apolloschurchapp/src/user-settings/Locations/campusChange.js b/apolloschurchapp/src/user-settings/Locations/campusChange.js
new file mode 100644
index 0000000..190481b
--- /dev/null
+++ b/apolloschurchapp/src/user-settings/Locations/campusChange.js
@@ -0,0 +1,14 @@
+import gql from 'graphql-tag';
+import ApollosConfig from '@apollosproject/config';
+
+export default gql`
+  mutation campusChange($campusId: String!) {
+    updateUserCampus(campusId: $campusId) {
+      id
+      campus {
+        ...CampusParts
+      }
+    }
+  }
+  ${ApollosConfig.FRAGMENTS.CAMPUS_PARTS_FRAGMENT}
+`;
diff --git a/apolloschurchapp/src/user-settings/Locations/getCampusLocations.js b/apolloschurchapp/src/user-settings/Locations/getCampusLocations.js
new file mode 100644
index 0000000..ea8b0b8
--- /dev/null
+++ b/apolloschurchapp/src/user-settings/Locations/getCampusLocations.js
@@ -0,0 +1,21 @@
+import gql from 'graphql-tag';
+import ApollosConfig from '@apollosproject/config';
+
+export default gql`
+  query getAllCampuses($latitude: Float!, $longitude: Float!) {
+    campuses(location: { latitude: $latitude, longitude: $longitude }) {
+      ...CampusParts
+      distanceFromLocation
+    }
+    currentUser {
+      id
+      profile {
+        id
+        campus {
+          ...CampusParts
+        }
+      }
+    }
+  }
+  ${ApollosConfig.FRAGMENTS.CAMPUS_PARTS_FRAGMENT}
+`;
diff --git a/apolloschurchapp/src/user-settings/Locations/index.js b/apolloschurchapp/src/user-settings/Locations/index.js
new file mode 100644
index 0000000..e0dc679
--- /dev/null
+++ b/apolloschurchapp/src/user-settings/Locations/index.js
@@ -0,0 +1,117 @@
+import React, { PureComponent } from 'react';
+import PropTypes from 'prop-types';
+import { Query, Mutation } from 'react-apollo';
+import { Dimensions } from 'react-native';
+import Geolocation from 'react-native-geolocation-service';
+import MapView from '@apollosproject/ui-mapview';
+import { PaddedView, ButtonLink } from '@apollosproject/ui-kit';
+import { get } from 'lodash';
+
+import GET_CAMPUSES from './getCampusLocations';
+import CHANGE_CAMPUS from './campusChange';
+
+class Location extends PureComponent {
+  static propTypes = {
+    navigation: PropTypes.shape({
+      getParam: PropTypes.func,
+      navigate: PropTypes.func,
+      goBack: PropTypes.func,
+    }),
+    initialRegion: PropTypes.shape({
+      latitude: PropTypes.number,
+      longitude: PropTypes.number,
+      latitudeDelta: PropTypes.number,
+      longitudeDelta: PropTypes.number,
+    }),
+  };
+
+  static defaultProps = {
+    initialRegion: {
+      // roughly show the entire USA by default
+      latitude: 39.809734,
+      longitude: -98.555618,
+      latitudeDelta: 100,
+      longitudeDelta:
+        (100 * Dimensions.get('window').width) /
+        Dimensions.get('window').height,
+    },
+  };
+
+  static navigationOptions = ({ navigation }) => ({
+    title: 'Location',
+    headerLeft: null,
+    headerRight: (
+      <PaddedView vertical={false}>
+        <ButtonLink onPress={() => navigation.goBack()}>Back</ButtonLink>
+      </PaddedView>
+    ),
+  });
+
+  state = {
+    userLocation: {
+      latitude: 39.104797,
+      longitude: -84.511959,
+    },
+  };
+
+  async componentDidMount() {
+    Geolocation.getCurrentPosition(
+      (position) => {
+        this.setState({
+          userLocation: {
+            latitude: position.coords.latitude,
+            longitude: position.coords.longitude,
+          },
+        });
+      },
+      (e) => console.warn('Error getting location!', e),
+      { enableHighAccuracy: true, timeout: 15000, maximumAge: 10000 }
+    );
+  }
+
+  render() {
+    return (
+      <Query
+        query={GET_CAMPUSES}
+        variables={{
+          latitude: this.state.userLocation.latitude,
+          longitude: this.state.userLocation.longitude,
+        }}
+        fetchPolicy="cache-and-network"
+      >
+        {({ loading, error, data: { campuses, currentUser } = {} }) => (
+          <Mutation mutation={CHANGE_CAMPUS}>
+            {(handlePress) => (
+              <MapView
+                navigation={this.props.navigation}
+                isLoading={loading}
+                error={error}
+                campuses={campuses || []}
+                initialRegion={this.props.initialRegion}
+                userLocation={this.state.userLocation}
+                currentCampus={get(currentUser, 'profile.campus')}
+                onLocationSelect={async (campus) => {
+                  handlePress({
+                    variables: {
+                      campusId: campus.id,
+                    },
+                    optimisticResponse: {
+                      updateUserCampus: {
+                        __typename: 'Mutation',
+                        id: currentUser.id,
+                        campus,
+                      },
+                    },
+                  });
+                  this.props.navigation.goBack();
+                }}
+              />
+            )}
+          </Mutation>
+        )}
+      </Query>
+    );
+  }
+}
+
+export default Location;
diff --git a/apolloschurchapp/src/user-settings/PersonDetails.tests.js b/apolloschurchapp/src/user-settings/PersonDetails.tests.js
index e1f814d..497d5a3 100644
--- a/apolloschurchapp/src/user-settings/PersonDetails.tests.js
+++ b/apolloschurchapp/src/user-settings/PersonDetails.tests.js
@@ -1,8 +1,8 @@
 import React from 'react';
-import { GET_USER_PROFILE } from '../tabs/connect/UserAvatarHeader';
 
 import Providers from '../Providers';
 
+import GET_USER_PROFILE from '../tabs/connect/getUserProfile';
 import { renderWithApolloData } from '../utils/testUtils';
 import PersonalDetails from './PersonalDetails';
 
diff --git a/apolloschurchapp/src/user-settings/PersonalDetails.js b/apolloschurchapp/src/user-settings/PersonalDetails.js
index f44c4be..9404206 100644
--- a/apolloschurchapp/src/user-settings/PersonalDetails.js
+++ b/apolloschurchapp/src/user-settings/PersonalDetails.js
@@ -20,7 +20,7 @@ import {
   styled,
 } from '@apollosproject/ui-kit';
 
-import { GET_USER_PROFILE } from '../tabs/connect/UserAvatarHeader';
+import GET_USER_PROFILE from '../tabs/connect/getUserProfile';
 import UPDATE_CURRENT_USER from './updateCurrentUser';
 
 const Footer = styled({
diff --git a/apolloschurchapp/src/user-settings/getUserPhoto.js b/apolloschurchapp/src/user-settings/getUserPhoto.js
new file mode 100644
index 0000000..6235575
--- /dev/null
+++ b/apolloschurchapp/src/user-settings/getUserPhoto.js
@@ -0,0 +1,15 @@
+import gql from 'graphql-tag';
+
+export default gql`
+  query CurrentUserPhoto {
+    currentUser {
+      id
+      profile {
+        id
+        photo {
+          uri
+        }
+      }
+    }
+  }
+`;
diff --git a/apolloschurchapp/src/user-settings/index.js b/apolloschurchapp/src/user-settings/index.js
index 22e080a..e106747 100644
--- a/apolloschurchapp/src/user-settings/index.js
+++ b/apolloschurchapp/src/user-settings/index.js
@@ -16,12 +16,11 @@ import {
 } from '@apollosproject/ui-kit';
 
 import { GET_LOGIN_STATE, LOGOUT } from '@apollosproject/ui-auth';
-import {
-  RockAuthedWebBrowser,
-  UserAvatarUpdate,
-} from '@apollosproject/ui-connected';
+import { RockAuthedWebBrowser } from '@apollosproject/ui-connected';
 import NavigationService from '../NavigationService';
 
+import ChangeAvatar from './ChangeAvatar';
+
 class UserSettings extends PureComponent {
   static navigationOptions = () => ({
     title: 'Settings',
@@ -43,7 +42,7 @@ class UserSettings extends PureComponent {
           return (
             <BackgroundView>
               <ScrollView>
-                <UserAvatarUpdate />
+                <ChangeAvatar />
 
                 <RockAuthedWebBrowser>
                   {(openUrl) => (
diff --git a/apolloschurchapp/src/user-settings/uploadPhoto.js b/apolloschurchapp/src/user-settings/uploadPhoto.js
new file mode 100644
index 0000000..6dbb4e4
--- /dev/null
+++ b/apolloschurchapp/src/user-settings/uploadPhoto.js
@@ -0,0 +1,102 @@
+import { Platform } from 'react-native';
+
+import { ReactNativeFile } from 'apollo-upload-client';
+import gql from 'graphql-tag';
+import ImagePicker from 'react-native-image-picker';
+import { check, PERMISSIONS, request, RESULTS } from 'react-native-permissions';
+
+import GET_USER_PHOTO from './getUserPhoto';
+
+const options = {
+  title: 'Select Profile Image',
+  quality: 0.7,
+  storageOptions: {
+    skipBackup: true,
+    path: 'images',
+    waitUntilSaved: true,
+    cameraRoll: true,
+  },
+};
+
+async function handleIOSPermissions() {
+  let cameraPermissionStatus = await check(PERMISSIONS.IOS.PHOTO_LIBRARY);
+  let hasPermission = cameraPermissionStatus === RESULTS.GRANTED;
+  if (!hasPermission) {
+    cameraPermissionStatus = await request(PERMISSIONS.IOS.PHOTO_LIBRARY);
+    hasPermission = cameraPermissionStatus === RESULTS.GRANTED;
+    if (!hasPermission) {
+      return false;
+    }
+  }
+  return true;
+}
+
+async function showImagePicker() {
+  if (Platform.OS === 'ios' && !(await handleIOSPermissions())) {
+    return null;
+  }
+  return new Promise((resolve, reject) => {
+    ImagePicker.showImagePicker(options, (response) => {
+      if (response.didCancel) {
+        reject(response.didCancel);
+      } else if (response.error) {
+        reject(response.error);
+      } else {
+        resolve(response);
+      }
+    });
+  });
+}
+
+export default async ({ client, onUpload = () => ({}) }) => {
+  try {
+    const image = await showImagePicker();
+    const file = new ReactNativeFile({
+      uri: image.uri,
+      name: image.fileName,
+      type: 'image/jpeg',
+    });
+    onUpload();
+    return client.mutate({
+      mutation: gql`
+        mutation uploadProfileImage($file: Upload!, $size: Int!) {
+          uploadProfileImage(file: $file, size: $size) {
+            id
+            firstName
+            lastName
+            photo {
+              uri
+            }
+          }
+        }
+      `,
+      variables: { file, size: image.fileSize },
+      update: (
+        cache,
+        {
+          data: {
+            uploadProfileImage: { photo },
+          },
+        }
+      ) => {
+        const data = cache.readQuery({ query: GET_USER_PHOTO });
+
+        cache.writeQuery({
+          query: GET_USER_PHOTO,
+          data: {
+            currentUser: {
+              ...data.currentUser,
+              profile: {
+                ...data.currentUser.profile,
+                photo,
+              },
+            },
+          },
+        });
+      },
+    });
+  } catch (e) {
+    console.warn(e);
+    return null;
+  }
+};
