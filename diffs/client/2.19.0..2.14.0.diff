diff --git a/apolloschurchapp/.env.shared.enc b/apolloschurchapp/.env.shared.enc
index 9bcd912aae14193cb0255ef94910cc575fb0a05b..fba5c68711b7b60a358381b2e9cfbd57bd8ad591 100644
GIT binary patch
literal 800
zcmV+*1K<2pVQh3|WM5wfcegMKIZ7fPD@EUEqbsHJ(FR%S4eEND;NHld`<G#T*Mt#O
z`K-hIx{Nu@3%upTPt}*5aDE^p-xF#3R*&(`fxU2@JtI5a0Y%cO#`pGxD|N)NC~Nx0
zg1GGFAyUKLeX%aF``$rn^Unds6ydfgklG0fJh8~x%Z1OV+$U~%+`Dg&XQW_G)p66s
zT0JZrf+XaiI<>zG*(I)Uo^VUwr|tB9C|x|R$kf_P$zMnu{~8~Mzo#9nAod{>)?l}M
z;nfzE62f<;kp$Bkst)s`p4lYk8|(00g)f$aFzE?mrtai0*=~FaVN}C-Kv_()_d$t3
zLevoI(OGPXtc3)HA-_sg(L)9_X=~yVyAVZXr&w64biaT)rs`pvtA-DG;2WSAjel97
zaAp!GdrLsSTf8YR#SQa%DEJ8Xk9sj<HvO@TF&!hltf?}l%8J|6A7`gEqI*kNlyyTO
zwGF6zsRjzMtc*KK@ZW~bsew?ZEa`q0bTu7@H!h-#OutV0n|@RNTsBUvJv0t}?Ai~8
z1o`msh47=D-O{5;mTAgVp1c`O`AL@88SMNNPUzIP7|&Un+HF9ujqm{LU<(+i4P2D`
zc4nQipmHY@J27YPZXf|w!AP5qI=H?_966~Z5XNJ`?`B?*V-D&83=I=wJnr^-2mt)`
zfbgsnCdlI1!LU{7A;t|pFUV7CR$;q<aq9$Wk#WG&3w1$+BlHIa&5Ty}vr2)E45#nD
z$bHqESPN7)qOIx3Zp*QeHHS|<hx!)P{fjT7kJhBfN5DfO$MQf^R>#Ya-#gxZkvxBV
z$wH#lc&X0Ijk3#-svuL@v2qQ3;NyP@+u}tkDqF_^3a6#zc@jwwp>%dZunLD3{i=_3
zOS%O5k*SzvQ5ATGP(NVqGELz`Cjp3Y&Ii)(pfhZVA$wl@14wtQ^|IxzIo4}Pou1bV
z2l9o7woS459raS(Rj><K@@>kSi@J%EzJV-^|2~*e@y=xtNt4PE62~Da>JL)s<~w9l
e&-dyV+A+BCkur%dOVKP0a%nSZW|X!;U0X<sW{~~>

literal 800
zcmV+*1K<2pVQh3|WM5x}PXlRp9}KQ3j2vi=*|ZbK*Uo<pV8W2CB&(N6^YAEl(w4=u
zg?^YGd3^b3n4$I*-x`?OB8}HK2eA**<AxHd|4`6t^S#3suRf1WS&#~h1p5Z+-*naX
z-ehM5d356LLwb5@S!rEq8uW-SX&s=BRr|Wh<i)p|fO+Mcb2gp9?34Ev89w`@w$XDz
zxi+#=*_+YLUnC~(ZTC<B!LQhv@dNhw<A`f+O$H2T9a;oli){<F`8>6+L+PMubJqn?
zx9pcMD7VhG^PSfWRp#iPl=LM$nSrYBKSMeN1AZo@wE)#bm`Nw9y~c(Pgkum|t`OaD
z3Z0c(QcL%;?&bG!WQw}q11J0w50_9?nOQ~RJ|>$OY5z}22Y`J}5f7ZOkM|=QT>6rR
z(j0zhP5tFf53iM-Tz?~V6iv3Kvbj6M=P1V`#Z@W<rq)|m#D*mKSRDfJVU7&+AKQ)^
z*tH60J#8EU7pF`5q{&#^jX*8QL~h;F%@njh?m+tu7ujD(@NM?QHuAA+DqDI*aSdOX
zHa=&<8)4m_<{!%7SFpJvXmb0|xP*;^XZRxj7z(rqQ?Mu?VEhmW`3d{*7TBf4f%N&G
z?7^h>>`$$nW=>;<M)I8;YGhW}MF!Y{s%{Ne;0|F+CuMEGarAatPF`RsG08=IH&^!6
zN~h^rGF`1->*cEek=o4fD2Nlf2u{F%C2?c_+!k>!x2kOh%7X0Ls)P%x9(~e#D2G68
z4cLd3qwbZ!77A<HHEO7olxyp?{W~w}NBipWdtE@)%r$Y$e%4c){CFsC%DJ|8ey;UI
z8YrQ{H6hVW)E&D)JBOgw&m_q0^^3MnJcRG8UzA=uY!cYHcR|k~s$yJtPH}_oTEMPB
zhA@)bRa!27ZumbVup=CQBwKsXF8Ia@`aBc5(``m({K~Eq`r6fI7HohEAig-i!K=et
z$iP-^36Mj5LE(b~uB%YJ)`MWizg~FX##AOygm7AdcH4GtVmgQ77{I%Oc7FMO$T{v<
e&D@(YHVc7~N=Zwy3!4uqZtVLz@SU7^4pi%kijxok

diff --git a/apolloschurchapp/.gitignore b/apolloschurchapp/.gitignore
index caf99aad..ee91441b 100644
--- a/apolloschurchapp/.gitignore
+++ b/apolloschurchapp/.gitignore
@@ -160,4 +160,5 @@ key.json
 .env.shared
 
 # GraphQL info
+schema.graphql
 fragmentTypes.json
diff --git a/apolloschurchapp/android/app/apollos.keystore.enc b/apolloschurchapp/android/app/apollos.keystore.enc
index 40450a4e7667886a328bb1b39638e07badfde342..08bbda40e135673e93b4cb1f0c86e9f71b1bdd76 100644
GIT binary patch
literal 2272
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

literal 2272
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

diff --git a/apolloschurchapp/android/key.json.enc b/apolloschurchapp/android/key.json.enc
index 8ac41f8fef376e5df015c4574bcf491e48e9613a..f384332894c356853e0032197cf83f21c942fbe1 100644
GIT binary patch
literal 2384
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
Cw3VL#

literal 2384
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
CQnnKS

diff --git a/apolloschurchapp/apollos.json b/apolloschurchapp/apollos.json
index d82481a7..f5c5dd88 100644
--- a/apolloschurchapp/apollos.json
+++ b/apolloschurchapp/apollos.json
@@ -1,4 +1,4 @@
 {
-    "version": "2.19.0",
+    "version": "2.14.0",
     "environment": "client"
 }
diff --git a/apolloschurchapp/fastlane/Fastfile b/apolloschurchapp/fastlane/Fastfile
index 0e40d3ce..00b6651a 100644
--- a/apolloschurchapp/fastlane/Fastfile
+++ b/apolloschurchapp/fastlane/Fastfile
@@ -59,17 +59,6 @@ platform :android do
     gradle(task: 'clean', project_dir: 'android')
     gradle(task: 'bundle', build_type: 'Release', project_dir: 'android')
     changelog_from_git_commits
-
-    path = '../android/app/build.gradle'
-    re = /applicationId\s+"([\w+\.]*)"/
-    s = File.read("../android/app/build.gradle")
-    package_name = s[re, 1]
-
-    upload_to_play_store(
-      track: "internal",
-      skip_upload_apk: true,
-      json_key: "android/key.json",
-      package_name: package_name
-    )
+    upload_to_play_store(track: "internal", skip_upload_apk: true, json_key_file: "android/key.json")
   end
 end
diff --git a/apolloschurchapp/ios/Podfile.lock b/apolloschurchapp/ios/Podfile.lock
index 58af488d..30739b2b 100644
--- a/apolloschurchapp/ios/Podfile.lock
+++ b/apolloschurchapp/ios/Podfile.lock
@@ -242,7 +242,7 @@ PODS:
     - React-cxxreact (= 0.63.4)
     - React-jsi (= 0.63.4)
   - React-jsinspector (0.63.4)
-  - react-native-apollos-player (2.19.0):
+  - react-native-apollos-player (2.14.0):
     - React
   - react-native-config (0.11.7):
     - React
@@ -639,7 +639,7 @@ SPEC CHECKSUMS:
   React-jsi: a0418934cf48f25b485631deb27c64dc40fb4c31
   React-jsiexecutor: 93bd528844ad21dc07aab1c67cb10abae6df6949
   React-jsinspector: 58aef7155bc9a9683f5b60b35eccea8722a4f53a
-  react-native-apollos-player: 90f374c58a059a9cfed7af498abf8877aaed5359
+  react-native-apollos-player: 74f9763544b42cf4a3208d3f546a562be7566004
   react-native-config: 55548054279d92e0e4566ea15a8b9b81028ec342
   react-native-geolocation: c956aeb136625c23e0dce0467664af2c437888c9
   react-native-geolocation-service: f33626f1ae12381ca2ae60f98b2f5edd676bf95a
diff --git a/apolloschurchapp/ios/apollos.p8.enc b/apolloschurchapp/ios/apollos.p8.enc
index 656fe3803394df0a6b533915116e5dc6fde6b650..6e961fce2051515987d83cdf79ac0f1a9c2ecbaf 100644
GIT binary patch
literal 288
zcmV+*0pI>pVQh3|WM5yaDW=n?N$sy5`<MP+-NK9QU-`3ZFqwvBct~oLvP0B0GVA2W
z%xwyws*h@PdtDH_5Ea~bM~Ou`8a(*2L%`*>hm(a+qFHYlJfXm*1m1;HVU?|+@OPK@
zV(<lUyvDc8kedc<fjHQ}Ob3y<yHzMFexsC!6%Tii+@d&bW>o-1Tw77z<JEeFp(FYt
zNWQ~t`~7%4jQ6-_{@kGspiEM;$jRHVs@x0{tcqmgn;>q@i2D9Jrn>M3VG+?%p3USa
z&TIk$OrX05wTNd$&7H)}e4@VEvzUNu-ATBPRj}_aEAZG~XE0V{cpfd5#j1(Ted&^-
mL0eaFWLOppIc{WyQe$Bz@}n|1nmgr6d78O7uz3^4Rkt!@os)V1

literal 288
zcmV+*0pI>pVQh3|WM5x%|3AkHzerWr%swYWXRI!3fK?LwhFj>V-#ry|vPPL$Rk`%5
zgWY)4+8tavyBa=_qXqtxvf-bQsva!mzNNww$Vj#VkX^(7TgohVs)Wt$xXyfDipip7
z3agGmdZmlIFGKZ3h&V=o$d?eaoGBs5LM|zsGJ#dc-|*W7d-Kx&P?hSZDugtG7FJQU
zv&vLc@Y=d3aFV2sH7b9>)=-wF8M2~<Gki$YRUX^m_t9SGeT*0b_O>hE?sTy?<Qe<1
zY^&cXQTv@z=eS7kncdqHN#Y{fQd>9ZSkL`@>2A`M8_ZGZsl2_(LnE0*6#aa&5z1`&
m9mOGW)<3bO<SB>401SM$$yB|2e0dL3XzPkN08$8<pV772qLx4a

diff --git a/apolloschurchapp/ios/apolloschurchapp.xcodeproj/project.pbxproj b/apolloschurchapp/ios/apolloschurchapp.xcodeproj/project.pbxproj
index c429baab..0ffd1038 100644
--- a/apolloschurchapp/ios/apolloschurchapp.xcodeproj/project.pbxproj
+++ b/apolloschurchapp/ios/apolloschurchapp.xcodeproj/project.pbxproj
@@ -14,7 +14,7 @@
 		13B07FBF1A68108700A75B9A /* Images.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB51A68108700A75B9A /* Images.xcassets */; };
 		13B07FC11A68108700A75B9A /* main.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB71A68108700A75B9A /* main.m */; };
 		1C48DCDE11AC47C48E918489 /* Inter-UI-Medium.otf in Resources */ = {isa = PBXBuildFile; fileRef = DC74A378C1CC40E4B6192D7F /* Inter-UI-Medium.otf */; };
-		2AE17F608689DAE577F28E4D /* (null) in Frameworks */ = {isa = PBXBuildFile; };
+		2AE17F608689DAE577F28E4D /* BuildFile in Frameworks */ = {isa = PBXBuildFile; };
 		2D02E4BC1E0B4A80006451C7 /* AppDelegate.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB01A68108700A75B9A /* AppDelegate.m */; };
 		2D02E4BD1E0B4A84006451C7 /* Images.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB51A68108700A75B9A /* Images.xcassets */; };
 		2D02E4BF1E0B4AB3006451C7 /* main.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB71A68108700A75B9A /* main.m */; };
@@ -115,7 +115,7 @@
 			isa = PBXFrameworksBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
-				2AE17F608689DAE577F28E4D /* (null) in Frameworks */,
+				2AE17F608689DAE577F28E4D /* BuildFile in Frameworks */,
 				EF3A30A2E55D4F8352E116D3 /* libPods-apolloschurchapp-apolloschurchappTests.a in Frameworks */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
@@ -308,7 +308,6 @@
 			buildConfigurationList = 13B07F931A680F5B00A75B9A /* Build configuration list for PBXNativeTarget "apolloschurchapp" */;
 			buildPhases = (
 				DEEF24CE4F76789E5E8C369D /* [CP] Check Pods Manifest.lock */,
-				4C006E292656868900EE9158 /* Start Packager */,
 				13B07F871A680F5B00A75B9A /* Sources */,
 				13B07F8C1A680F5B00A75B9A /* Frameworks */,
 				13B07F8E1A680F5B00A75B9A /* Resources */,
@@ -551,25 +550,6 @@
 			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-apolloschurchapp/Pods-apolloschurchapp-resources.sh\"\n";
 			showEnvVarsInLog = 0;
 		};
-		4C006E292656868900EE9158 /* Start Packager */ = {
-			isa = PBXShellScriptBuildPhase;
-			buildActionMask = 2147483647;
-			files = (
-			);
-			inputFileListPaths = (
-			);
-			inputPaths = (
-			);
-			name = "Start Packager";
-			outputFileListPaths = (
-			);
-			outputPaths = (
-			);
-			runOnlyForDeploymentPostprocessing = 0;
-			shellPath = /bin/sh;
-			shellScript = "export RCT_METRO_PORT=\"${RCT_METRO_PORT:=8081}\"\necho \"export RCT_METRO_PORT=${RCT_METRO_PORT}\" > \"${SRCROOT}/../node_modules/react-native/scripts/.packager.env\"\nif [ -z \"${RCT_NO_LAUNCH_PACKAGER+xxx}\" ] ; then\n  if nc -w 5 -z localhost ${RCT_METRO_PORT} ; then\n    if ! curl -s \"http://localhost:${RCT_METRO_PORT}/status\" | grep -q \"packager-status:running\" ; then\n      echo \"Port ${RCT_METRO_PORT} already in use, packager is either not running or not running correctly\"\n      exit 2\n    fi\n  else\n    open \"$SRCROOT/../node_modules/react-native/scripts/launchPackager.command\" || echo \"Can't start packager automatically\"\n  fi\nfi\n";
-			showEnvVarsInLog = 0;
-		};
 		84E19E444A56C704431362B6 /* [CP] Embed Pods Frameworks */ = {
 			isa = PBXShellScriptBuildPhase;
 			buildActionMask = 2147483647;
diff --git a/apolloschurchapp/package.json b/apolloschurchapp/package.json
index b912d4b9..1d5d1c85 100644
--- a/apolloschurchapp/package.json
+++ b/apolloschurchapp/package.json
@@ -17,10 +17,11 @@
     "unlink-packages": "node ./scripts/link-packages remove && rm -rf ./node_modules",
     "generate-stories": "rnstl --searchDir ./src --pattern **/*.stories.js",
     "lint": "eslint ./src --ext .js",
+    "get-schema": "eval $(grep ^APP_DATA_URL .env) && sleep 10 && get-graphql-schema $APP_DATA_URL > schema.graphql",
     "postinstall": "jetify && yarn pods",
     "pods": "(bundle install && cd ios && bundle exec pod install --repo-update)",
     "start": "yarn start:dev",
-    "start:dev": "yarn generate-stories && node ./scripts/get-introspection-data.js && react-native start",
+    "start:dev": "yarn generate-stories & yarn get-schema && node ./scripts/get-introspection-data.js && react-native start",
     "test": "TZ=UTC jest",
     "icons": "react-native set-icon --path",
     "splash": "react-native set-splash --path"
@@ -45,23 +46,23 @@
   "dependencies": {
     "@apollo/client": "3.3.0-rc.2",
     "@apollo/react-hooks": "^3.1.3",
-    "@apollosproject/config": "^2.19.0",
+    "@apollosproject/config": "^2.14.0",
     "@apollosproject/react-native-airplay-btn": "^0.2.0",
-    "@apollosproject/ui-analytics": "^2.19.0",
-    "@apollosproject/ui-auth": "^2.19.0",
-    "@apollosproject/ui-connected": "^2.19.0",
-    "@apollosproject/ui-fragments": "^2.19.0",
-    "@apollosproject/ui-htmlview": "^2.19.0",
-    "@apollosproject/ui-kit": "^2.19.0",
-    "@apollosproject/ui-mapview": "^2.19.0",
-    "@apollosproject/ui-media-player": "^2.19.0",
-    "@apollosproject/ui-notifications": "^2.19.0",
-    "@apollosproject/ui-onboarding": "^2.19.0",
-    "@apollosproject/ui-passes": "^2.19.0",
-    "@apollosproject/ui-prayer": "^2.19.0",
-    "@apollosproject/ui-scripture": "^2.19.0",
-    "@apollosproject/ui-storybook": "^2.19.0",
-    "@apollosproject/ui-test-utils": "^2.19.0",
+    "@apollosproject/ui-analytics": "^2.14.0",
+    "@apollosproject/ui-auth": "^2.14.0",
+    "@apollosproject/ui-connected": "^2.14.0",
+    "@apollosproject/ui-fragments": "^2.14.0",
+    "@apollosproject/ui-htmlview": "^2.14.0",
+    "@apollosproject/ui-kit": "^2.14.0",
+    "@apollosproject/ui-mapview": "^2.14.0",
+    "@apollosproject/ui-media-player": "^2.14.0",
+    "@apollosproject/ui-notifications": "^2.14.0",
+    "@apollosproject/ui-onboarding": "^2.14.0",
+    "@apollosproject/ui-passes": "^2.14.0",
+    "@apollosproject/ui-prayer": "^2.14.0",
+    "@apollosproject/ui-scripture": "^2.14.0",
+    "@apollosproject/ui-storybook": "^2.14.0",
+    "@apollosproject/ui-test-utils": "^2.14.0",
     "@gorhom/bottom-sheet": "3.4.1",
     "@metarouter/analytics-react-native": "^1.1.5",
     "@react-native-community/async-storage": "^1.5.1",
@@ -99,6 +100,7 @@
     "react-native-inappbrowser-reborn": "^3.0.0",
     "react-native-linear-gradient": "^2.5.4",
     "react-native-maps": "^0.27.1",
+    "react-native-modal-datetime-picker": "9.0.0",
     "react-native-music-control": "0.10.8",
     "react-native-onesignal": "3.9.1",
     "react-native-passkit-wallet": "^0.1.4",
@@ -118,7 +120,7 @@
     "yup": "0.26.6"
   },
   "devDependencies": {
-    "@apollosproject/eslint-config": "^2.19.0",
+    "@apollosproject/eslint-config": "^2.14.0",
     "@babel/core": "^7.8.4",
     "@babel/runtime": "^7.8.4",
     "@bam.tech/react-native-make": "^3.0.0",
@@ -142,6 +144,7 @@
     "eslint-plugin-react-hooks": "^4.0.2",
     "eslint-plugin-react-native": "^3.2.1",
     "get-dev-paths": "^0.1.0",
+    "get-graphql-schema": "^2.1.2",
     "graphql-import": "^0.7.1",
     "jest": "^25.1.0",
     "jetifier": "^1.6.4",
diff --git a/apolloschurchapp/src/content-feed/content-feed.tests.js b/apolloschurchapp/src/content-feed/content-feed.tests.js
new file mode 100644
index 00000000..3c967931
--- /dev/null
+++ b/apolloschurchapp/src/content-feed/content-feed.tests.js
@@ -0,0 +1,119 @@
+import React from 'react';
+
+import { renderWithApolloData, Providers } from '@apollosproject/ui-test-utils';
+import { MockedProvider } from '@apollo/client/testing';
+import { GET_CONTENT_CARD } from '@apollosproject/ui-connected';
+import GET_CONTENT_FEED from './getContentFeed';
+
+import ContentFeed from './index';
+
+describe('content feed query component', () => {
+  it('renders a feedview after successful query', async () => {
+    const mock = {
+      request: {
+        query: GET_CONTENT_FEED,
+        variables: { itemId: 'ContentChannel:123' },
+      },
+      result: {
+        data: {
+          node: {
+            __typename: 'ContentChannel',
+            childContentItemsConnection: {
+              pageInfo: {
+                endCursor: 'blablalba',
+                __typename: 'PaginationInfo',
+              },
+              __typename: 'ContentItemsConnection',
+              edges: [
+                {
+                  __typename: 'ContentItemsConnectionEdge',
+                  node: {
+                    __typename: 'UniversalContentItem',
+                    id: 'UniversalContentItem:d57994350b9d213866b24dea3a97433d',
+                    coverImage: null,
+                    parentChannel: {
+                      id: 'ContentChannel:4f68015ba18662a7409d1219a4ce013e',
+                      name: 'Editorial',
+                      iconName: 'text',
+                      __typename: 'ContentChannel',
+                    },
+                    title: 'Mea Animal Aperiam Ornatus Eu',
+                    hyphenatedTitle: 'Mea Animal Aperiam Ornatus Eu',
+                    summary: 'Bla bla bla',
+                    theme: null,
+                    isLiked: false,
+                    likedCount: 0,
+                    videos: [],
+                    audios: [],
+                  },
+                },
+                {
+                  __typename: 'ContentItemsConnectionEdge',
+                  node: {
+                    __typename: 'UniversalContentItem',
+                    id: 'UniversalContentItem:b36e55d803443431e96bb4b5068147ec',
+                    coverImage: null,
+                    parentChannel: {
+                      id: 'ContentChannel:4f68015ba18662a7409d1219a4ce013e',
+                      name: 'Editorial',
+                      iconName: 'text',
+                      __typename: 'ContentChannel',
+                    },
+                    title: 'Probo Senserit Id Mea, Ut Sed Malis Postea,',
+                    hyphenatedTitle:
+                      'Probo Senserit Id Mea, Ut Sed Malis Postea,',
+                    summary: 'Bla bla bla',
+                    theme: null,
+                    isLiked: false,
+                    likedCount: 0,
+                    videos: [],
+                    audios: [],
+                  },
+                },
+              ],
+            },
+          },
+        },
+      },
+    };
+
+    const additionalMocks = mock.result.data.node.childContentItemsConnection.edges.map(
+      ({ node }) => ({
+        request: {
+          query: GET_CONTENT_CARD,
+          variables: { contentId: node.id },
+        },
+        result: {
+          data: {
+            node: {
+              ...node,
+              coverImage: {
+                name: 'Boom',
+                ...node.coverImage,
+              },
+            },
+          },
+        },
+      })
+    );
+
+    const initialTree = await renderWithApolloData(
+      <Providers
+        MockedProvider={MockedProvider}
+        mocks={[mock, ...additionalMocks]}
+      >
+        <ContentFeed route={{ params: { itemId: 'ContentChannel:123' } }} />
+      </Providers>
+    );
+    const tree = await renderWithApolloData(
+      <Providers
+        MockedProvider={MockedProvider}
+        mocks={[mock, ...additionalMocks]}
+      >
+        <ContentFeed route={{ params: { itemId: 'ContentChannel:123' } }} />
+      </Providers>,
+      initialTree
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/content-feed/getContentFeed.js b/apolloschurchapp/src/content-feed/getContentFeed.js
new file mode 100644
index 00000000..38ed31fb
--- /dev/null
+++ b/apolloschurchapp/src/content-feed/getContentFeed.js
@@ -0,0 +1,22 @@
+import gql from 'graphql-tag';
+import ApollosConfig from '@apollosproject/config';
+
+export default gql`
+  query getContentFeed($itemId: ID!, $after: String, $first: Int) {
+    node(id: $itemId) {
+      ... on ContentChannel {
+        childContentItemsConnection(after: $after, first: $first) {
+          pageInfo {
+            endCursor
+          }
+          edges {
+            node {
+              ...contentCardFragment
+            }
+          }
+        }
+      }
+    }
+  }
+  ${ApollosConfig.FRAGMENTS.CONTENT_CARD_FRAGMENT}
+`;
diff --git a/apolloschurchapp/src/content-feed/index.js b/apolloschurchapp/src/content-feed/index.js
new file mode 100644
index 00000000..ea033d8d
--- /dev/null
+++ b/apolloschurchapp/src/content-feed/index.js
@@ -0,0 +1,78 @@
+import React, { PureComponent } from 'react';
+import { Query } from '@apollo/client/react/components';
+import { get } from 'lodash';
+import PropTypes from 'prop-types';
+
+import {
+  ContentCardConnected,
+  fetchMoreResolver,
+} from '@apollosproject/ui-connected';
+
+import { BackgroundView, FeedView } from '@apollosproject/ui-kit';
+
+import GET_CONTENT_FEED from './getContentFeed';
+/**
+ * This is where the component description lives
+ * A FeedView wrapped in a query to pull content data.
+ */
+class ContentFeed extends PureComponent {
+  static propTypes = {
+    /** Functions passed down from React Navigation to use in navigating to/from
+     * items in the feed.
+     */
+    navigation: PropTypes.shape({
+      navigate: PropTypes.func,
+    }),
+    route: PropTypes.shape({
+      params: PropTypes.shape({
+        itemId: PropTypes.string,
+      }),
+    }),
+  };
+
+  /** Function that is called when a card in the feed is pressed.
+   * Takes the user to the ContentSingle
+   */
+  handleOnPress = (item) =>
+    this.props.navigation.navigate('ContentSingle', {
+      itemId: item.id,
+      sharing: item.sharing,
+    });
+
+  render() {
+    const { route } = this.props;
+    const { itemId } = route.params;
+    return (
+      <BackgroundView>
+        <Query
+          query={GET_CONTENT_FEED}
+          variables={{ itemId }}
+          fetchPolicy="cache-and-network"
+        >
+          {({ loading, error, data, refetch, fetchMore, variables }) => (
+            <FeedView
+              ListItemComponent={ContentCardConnected}
+              content={get(
+                data,
+                'node.childContentItemsConnection.edges',
+                []
+              ).map((edge) => edge.node)}
+              fetchMore={fetchMoreResolver({
+                collectionName: 'node.childContentItemsConnection',
+                fetchMore,
+                variables,
+                data,
+              })}
+              isLoading={loading}
+              error={error}
+              refetch={refetch}
+              onPressItem={this.handleOnPress}
+            />
+          )}
+        </Query>
+      </BackgroundView>
+    );
+  }
+}
+
+export default ContentFeed;
diff --git a/apolloschurchapp/src/index.js b/apolloschurchapp/src/index.js
index 2d5a93ea..89028440 100644
--- a/apolloschurchapp/src/index.js
+++ b/apolloschurchapp/src/index.js
@@ -1,13 +1,9 @@
 /* eslint-disable react/jsx-handler-names */
 
+import hoistNonReactStatic from 'hoist-non-react-statics';
 import React from 'react';
-import { StatusBar } from 'react-native';
-import {
-  NavigationContainer,
-  useNavigation,
-  DarkTheme,
-  DefaultTheme,
-} from '@react-navigation/native';
+import { StatusBar, Platform } from 'react-native';
+import { NavigationContainer } from '@react-navigation/native';
 import { createNativeStackNavigator } from 'react-native-screens/native-stack';
 import SplashScreen from 'react-native-splash-screen';
 import 'react-native-gesture-handler'; // required for react-navigation
@@ -21,8 +17,8 @@ import {
 import Passes from '@apollosproject/ui-passes';
 import { MapViewConnected as Location } from '@apollosproject/ui-mapview';
 import Auth, { ProtectedRoute } from '@apollosproject/ui-auth';
+import ApollosConfig from '@apollosproject/config';
 
-import { ContentFeedConnected } from '@apollosproject/ui-connected';
 import Providers from './Providers';
 import ContentSingle from './content-single';
 import Event from './event';
@@ -38,52 +34,56 @@ const AppStatusBar = withTheme(({ theme }) => ({
   backgroundColor: theme.colors.background.paper,
 }))(StatusBar);
 
-const ProtectedRouteWithSplashScreen = () => {
+const ProtectedRouteWithSplashScreen = (props) => {
   const handleOnRouteChange = () => SplashScreen.hide();
-  const navigation = useNavigation();
-  return (
-    <ProtectedRoute
-      onRouteChange={handleOnRouteChange}
-      navigation={navigation}
-    />
-  );
+
+  return <ProtectedRoute {...props} onRouteChange={handleOnRouteChange} />;
 };
 
-const ThemedNavigationContainer = withTheme(({ theme, ...props }) => ({
-  theme: {
-    ...(theme.type === 'dark' ? DarkTheme : DefaultTheme),
-    dark: theme.type === 'dark',
-    colors: {
-      ...(theme.type === 'dark' ? DarkTheme.colors : DefaultTheme.colors),
-      primary: theme.colors.secondary,
-      background: theme.colors.background.screen,
-      card: theme.colors.background.paper,
-      text: theme.colors.text.primary,
-    },
-  },
-  ...props,
-}))(({ containerRef, ...props }) => (
-  <NavigationContainer ref={containerRef} {...props} />
-));
+const { APP_DATA_URL } = ApollosConfig;
+
+// Hack to avoid needing to pass emailRequired through the navigator.navigate
+const EnhancedAuth = (props) => (
+  <Auth
+    {...props}
+    emailRequired
+    forgotPasswordURL={`${APP_DATA_URL}/forgot-password`}
+  />
+);
+// 😑
+hoistNonReactStatic(EnhancedAuth, Auth);
 
 const { Navigator, Screen } = createNativeStackNavigator();
+const ThemedNavigator = withTheme(({ theme, ...props }) => ({
+  ...props,
+  screenOptions: {
+    headerTintColor: theme.colors.action.secondary,
+    headerTitleStyle: {
+      color: theme.colors.text.primary,
+    },
+    headerStyle: {
+      backgroundColor: theme.colors.background.paper,
+      ...Platform.select(theme.shadows.default),
+    },
+    headerShown: false,
+    stackPresentation: 'modal',
+  },
+}))(Navigator);
 
-const App = () => (
+const App = (props) => (
   <Providers>
     <BackgroundView>
       <AppStatusBar />
-      <ThemedNavigationContainer
-        containerRef={NavigationService.setTopLevelNavigator}
+      <NavigationContainer
+        ref={NavigationService.setTopLevelNavigator}
         onReady={NavigationService.setIsReady}
       >
-        <Navigator
-          screenOptions={{ headerShown: false, stackPresentation: 'modal' }}
-        >
+        <ThemedNavigator initialRouteName="ProtectedRoute" {...props}>
           <Screen
             name="ProtectedRoute"
             component={ProtectedRouteWithSplashScreen}
           />
-          <Screen name="Tabs" component={Tabs} />
+          <Screen name="Tabs" component={Tabs} options={{ title: 'Home' }} />
           <Screen
             name="ContentSingle"
             component={ContentSingle}
@@ -92,25 +92,21 @@ const App = () => (
               stackPresentation: 'push',
             }}
           />
-          <Screen
-            component={ContentFeedConnected}
-            name="ContentFeed"
-            options={({ route }) => ({
-              title: route.params.itemTitle || 'Content Feed',
-              stackPresentation: 'push',
-            })}
-          />
-
           <Screen name="Event" component={Event} options={{ title: 'Event' }} />
           <Screen
             name="Auth"
-            component={Auth}
+            component={EnhancedAuth}
             options={{
+              title: 'Login',
               gestureEnabled: false,
               stackPresentation: 'push',
             }}
           />
-          <Screen name="Location" component={Location} />
+          <Screen
+            name="Location"
+            component={Location}
+            options={{ headerShown: true }}
+          />
           <Screen
             name="Passes"
             component={Passes}
@@ -120,14 +116,19 @@ const App = () => (
             name="Onboarding"
             component={Onboarding}
             options={{
+              title: 'Onboarding',
               gestureEnabled: false,
               stackPresentation: 'push',
             }}
           />
-          <Screen name="LandingScreen" component={LandingScreen} />
+          <Screen
+            name="LandingScreen"
+            component={LandingScreen}
+            options={{ headerShown: false }}
+          />
           <Screen component={Search} name="Search" />
-        </Navigator>
-      </ThemedNavigationContainer>
+        </ThemedNavigator>
+      </NavigationContainer>
     </BackgroundView>
   </Providers>
 );
diff --git a/apolloschurchapp/src/tabs/discover/Discover.js b/apolloschurchapp/src/tabs/discover/Discover.js
new file mode 100644
index 00000000..5153afba
--- /dev/null
+++ b/apolloschurchapp/src/tabs/discover/Discover.js
@@ -0,0 +1,59 @@
+import React from 'react';
+
+import { SafeAreaView } from 'react-native-safe-area-context';
+import gql from 'graphql-tag';
+import { Query } from '@apollo/client/react/components';
+import { useNavigation } from '@react-navigation/native';
+
+import { BackgroundView } from '@apollosproject/ui-kit';
+import {
+  FeaturesFeedConnected,
+  FEATURE_FEED_ACTION_MAP,
+  RockAuthedWebBrowser,
+} from '@apollosproject/ui-connected';
+
+function handleOnPress({ action, ...props }) {
+  if (FEATURE_FEED_ACTION_MAP[action]) {
+    FEATURE_FEED_ACTION_MAP[action]({ action, ...props });
+  }
+  // If you add additional actions, you can handle them here.
+  // Or add them to the FEATURE_FEED_ACTION_MAP, with the syntax
+  // { [ActionName]: function({ relatedNode, action, ...FeatureFeedConnectedProps}) }
+}
+
+// getHomeFeed uses the HOME_FEATURES in the config.yml
+// You can also hardcode an ID if you are confident it will never change
+// Or use some other strategy to get a FeatureFeed.id
+export const GET_DISCOVER_FEED = gql`
+  query getDiscoverFeatureFeed {
+    discoverFeedFeatures {
+      id
+    }
+  }
+`;
+
+const Discover = () => {
+  const navigation = useNavigation();
+  return (
+    <RockAuthedWebBrowser>
+      {(openUrl) => (
+        <BackgroundView>
+          <SafeAreaView edges={['right', 'top', 'left']}>
+            <Query query={GET_DISCOVER_FEED}>
+              {({ data }) => (
+                <FeaturesFeedConnected
+                  openUrl={openUrl}
+                  navigation={navigation}
+                  featureFeedId={data?.discoverFeedFeatures?.id}
+                  onPressActionItem={handleOnPress}
+                />
+              )}
+            </Query>
+          </SafeAreaView>
+        </BackgroundView>
+      )}
+    </RockAuthedWebBrowser>
+  );
+};
+
+export default Discover;
diff --git a/apolloschurchapp/src/tabs/discover/index.js b/apolloschurchapp/src/tabs/discover/index.js
new file mode 100644
index 00000000..f612b1ad
--- /dev/null
+++ b/apolloschurchapp/src/tabs/discover/index.js
@@ -0,0 +1,44 @@
+import React from 'react';
+import { Platform } from 'react-native';
+import { createNativeStackNavigator } from 'react-native-screens/native-stack';
+import { withTheme } from '@apollosproject/ui-kit';
+
+import ContentFeed from '../../content-feed';
+
+import Discover from './Discover';
+
+const { Navigator, Screen } = createNativeStackNavigator();
+
+const DiscoverNavigator = (props) => (
+  <Navigator initialRouteName="Discover" {...props}>
+    <Screen
+      component={Discover}
+      name="Discover"
+      options={{ headerShown: false }}
+    />
+    <Screen
+      component={ContentFeed}
+      name="ContentFeed"
+      /** Function for React Navigation to set information in the header. */
+      options={({ route }) => ({
+        title: route.params.itemTitle || 'Content Feed',
+      })}
+    />
+  </Navigator>
+);
+const EnhancedDiscover = withTheme(({ theme, ...props }) => ({
+  ...props,
+  screenOptions: {
+    headerTintColor: theme.colors.action.secondary,
+    headerTitleStyle: {
+      color: theme.colors.text.primary,
+    },
+    headerStyle: {
+      backgroundColor: theme.colors.background.paper,
+      ...Platform.select(theme.shadows.default),
+    },
+    headerLargeTitle: true,
+  },
+}))(DiscoverNavigator);
+
+export default EnhancedDiscover;
diff --git a/apolloschurchapp/src/tabs/home/index.js b/apolloschurchapp/src/tabs/home/index.js
new file mode 100644
index 00000000..91f9323c
--- /dev/null
+++ b/apolloschurchapp/src/tabs/home/index.js
@@ -0,0 +1,94 @@
+import React, { useEffect } from 'react';
+import { Image } from 'react-native';
+import { SafeAreaView } from 'react-native-safe-area-context';
+import { Query } from '@apollo/client/react/components';
+import { gql, useApolloClient } from '@apollo/client';
+import { useNavigation } from '@react-navigation/native';
+
+import {
+  styled,
+  BackgroundView,
+  NavigationService,
+} from '@apollosproject/ui-kit';
+import {
+  FeaturesFeedConnected,
+  FEATURE_FEED_ACTION_MAP,
+  RockAuthedWebBrowser,
+} from '@apollosproject/ui-connected';
+
+import { checkOnboardingStatusAndNavigate } from '@apollosproject/ui-onboarding';
+
+import { SearchButton } from '../../ui/Search';
+import { ONBOARDING_VERSION } from '../../ui/Onboarding';
+
+const LogoTitle = styled(({ theme }) => ({
+  height: theme.sizing.baseUnit,
+  margin: theme.sizing.baseUnit,
+  alignSelf: 'center',
+  resizeMode: 'contain',
+}))(Image);
+
+function handleOnPress({ action, ...props }) {
+  if (FEATURE_FEED_ACTION_MAP[action]) {
+    FEATURE_FEED_ACTION_MAP[action]({ action, ...props });
+  }
+  // If you add additional actions, you can handle them here.
+  // Or add them to the FEATURE_FEED_ACTION_MAP, with the syntax
+  // { [ActionName]: function({ relatedNode, action, ...FeatureFeedConnectedProps}) }
+}
+
+// getHomeFeed uses the HOME_FEATURES in the config.yml
+// You can also hardcode an ID if you are confident it will never change
+// Or use some other strategy to get a FeatureFeed.id
+export const GET_HOME_FEED = gql`
+  query getHomeFeatureFeed {
+    homeFeedFeatures {
+      id
+    }
+  }
+`;
+
+const Home = () => {
+  const navigation = useNavigation();
+  const client = useApolloClient();
+
+  useEffect(() => {
+    checkOnboardingStatusAndNavigate({
+      client,
+      navigation: NavigationService,
+      latestOnboardingVersion: ONBOARDING_VERSION,
+      navigateHome: false,
+    });
+  }, []);
+
+  return (
+    <RockAuthedWebBrowser>
+      {(openUrl) => (
+        <BackgroundView>
+          <SafeAreaView edges={['top', 'left', 'right']}>
+            <Query query={GET_HOME_FEED} fetchPolicy="cache-and-network">
+              {({ data }) => (
+                <FeaturesFeedConnected
+                  openUrl={openUrl}
+                  navigation={navigation}
+                  featureFeedId={data?.homeFeedFeatures?.id}
+                  onPressActionItem={handleOnPress}
+                  ListHeaderComponent={
+                    <>
+                      <LogoTitle source={require('./wordmark.png')} />
+                      <SearchButton
+                        onPress={() => navigation.navigate('Search')}
+                      />
+                    </>
+                  }
+                />
+              )}
+            </Query>
+          </SafeAreaView>
+        </BackgroundView>
+      )}
+    </RockAuthedWebBrowser>
+  );
+};
+
+export default Home;
diff --git a/apolloschurchapp/src/tabs/wordmark.png b/apolloschurchapp/src/tabs/home/wordmark.png
similarity index 100%
rename from apolloschurchapp/src/tabs/wordmark.png
rename to apolloschurchapp/src/tabs/home/wordmark.png
diff --git a/apolloschurchapp/src/tabs/index.js b/apolloschurchapp/src/tabs/index.js
index 53dfb2a5..3e2a5b8c 100644
--- a/apolloschurchapp/src/tabs/index.js
+++ b/apolloschurchapp/src/tabs/index.js
@@ -1,101 +1,45 @@
-import React, { useEffect } from 'react';
-import { Image } from 'react-native';
-import { useNavigation } from '@react-navigation/native';
+import React from 'react';
+import { Platform } from 'react-native';
 import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';
-import { styled, NavigationService } from '@apollosproject/ui-kit';
-import { useApolloClient } from '@apollo/client';
-import { createFeatureFeedTab } from '@apollosproject/ui-connected';
-import { checkOnboardingStatusAndNavigate } from '@apollosproject/ui-onboarding';
-import { SearchButton } from '../ui/Search';
-import { ONBOARDING_VERSION } from '../ui/Onboarding';
+import { withTheme } from '@apollosproject/ui-kit';
+
 import Connect from './connect';
+import Home from './home';
+import Discover from './discover';
 import tabBarIcon from './tabBarIcon';
 
-const HeaderLogo = styled(({ theme }) => ({
-  height: theme.sizing.baseUnit,
-  resizeMode: 'contain',
-}))(Image);
-
-const HeaderCenter = () => <HeaderLogo source={require('./wordmark.png')} />;
-const HeaderRight = () => {
-  const navigation = useNavigation();
-  return <SearchButton onPress={() => navigation.navigate('Search')} />;
-};
-
-// we nest stack inside of tabs so we can use all the fancy native header features
-const HomeTab = createFeatureFeedTab({
-  screenOptions: {
-    headerHideShadow: true,
-    headerCenter: HeaderCenter,
-    headerRight: HeaderRight,
-    headerLargeTitle: false,
-  },
-  tabName: 'Home',
-  feedName: 'HOME',
-});
-
-const ReadTab = createFeatureFeedTab({
-  tabName: 'Read',
-  feedName: 'READ',
-});
-
-const WatchTab = createFeatureFeedTab({
-  tabName: 'Watch',
-  feedName: 'WATCH',
-});
-
-const PrayTab = createFeatureFeedTab({
-  tabName: 'Pray',
-  feedName: 'PRAY',
-});
-
 const { Navigator, Screen } = createBottomTabNavigator();
 
-const TabNavigator = () => {
-  const client = useApolloClient();
-  // this is only used by the tab loaded first
-  // if there is a new version of the onboarding flow,
-  // we'll navigate there first to show new screens
-  useEffect(
-    () => {
-      checkOnboardingStatusAndNavigate({
-        client,
-        navigation: NavigationService,
-        latestOnboardingVersion: ONBOARDING_VERSION,
-        navigateHome: false,
-      });
+const TabNavigator = (props) => (
+  <Navigator {...props} lazy>
+    <Screen
+      name="Home"
+      component={Home}
+      options={{ tabBarIcon: tabBarIcon('home') }}
+    />
+    <Screen
+      name="Discover"
+      component={Discover}
+      options={{ tabBarIcon: tabBarIcon('sections') }}
+    />
+    <Screen
+      name="Connect"
+      component={Connect}
+      options={{ tabBarIcon: tabBarIcon('profile') }}
+    />
+  </Navigator>
+);
+
+const ThemedTabNavigator = withTheme(({ theme }) => ({
+  tabBarOptions: {
+    activeTintColor: theme?.colors?.secondary,
+    inactiveTintColor: theme?.colors?.text?.tertiary,
+    style: {
+      backgroundColor: theme?.colors?.background?.paper,
+      borderTopColor: theme?.colors?.shadows.default,
+      ...Platform.select(theme?.shadows.default),
     },
-    [client]
-  );
-  return (
-    <Navigator lazy>
-      <Screen
-        name="Home"
-        component={HomeTab}
-        options={{ tabBarIcon: tabBarIcon('home') }}
-      />
-      <Screen
-        name="Read"
-        component={ReadTab}
-        options={{ tabBarIcon: tabBarIcon('sections') }}
-      />
-      <Screen
-        name="Watch"
-        component={WatchTab}
-        options={{ tabBarIcon: tabBarIcon('video') }}
-      />
-      <Screen
-        name="Pray"
-        component={PrayTab}
-        options={{ tabBarIcon: tabBarIcon('like') }}
-      />
-      <Screen
-        name="Connect"
-        component={Connect}
-        options={{ tabBarIcon: tabBarIcon('profile') }}
-      />
-    </Navigator>
-  );
-};
+  },
+}))(TabNavigator);
 
-export default TabNavigator;
+export default ThemedTabNavigator;
diff --git a/apolloschurchapp/src/theme/propOverrides.js b/apolloschurchapp/src/theme/propOverrides.js
new file mode 100644
index 00000000..6d46cc8b
--- /dev/null
+++ b/apolloschurchapp/src/theme/propOverrides.js
@@ -0,0 +1,2 @@
+/* Export your custom prop overrides here. */
+export {};
diff --git a/apolloschurchapp/src/theme/styleOverrides.js b/apolloschurchapp/src/theme/styleOverrides.js
new file mode 100644
index 00000000..3599e309
--- /dev/null
+++ b/apolloschurchapp/src/theme/styleOverrides.js
@@ -0,0 +1,2 @@
+/* Export your custom style overrides here. */
+export {};
diff --git a/apolloschurchapp/src/theme/theme.js b/apolloschurchapp/src/theme/theme.js
index fe1c84f1..b2aeb3cb 100644
--- a/apolloschurchapp/src/theme/theme.js
+++ b/apolloschurchapp/src/theme/theme.js
@@ -1,3 +1,6 @@
+// import styleOverrides from './styleOverrides';
+// import propOverrides from './propOverrides';
+
 /* Add your custom theme definitions below. Anything that is supported in UI-Kit Theme can be
  overridden and/or customized here! */
 
@@ -48,6 +51,9 @@
  * }
  * ```
  */
-// const overrides = {};
+// const overrides = {
+//   ...styleOverrides,
+//   ...propOverrides,
+// };
 
 export default {};
diff --git a/apolloschurchapp/src/ui/Search/SearchButton.js b/apolloschurchapp/src/ui/Search/SearchButton.js
index a962601f..9dd742f6 100644
--- a/apolloschurchapp/src/ui/Search/SearchButton.js
+++ b/apolloschurchapp/src/ui/Search/SearchButton.js
@@ -1,7 +1,8 @@
 import React from 'react';
+import { Animated } from 'react-native';
 import PropTypes from 'prop-types';
 
-import { withTheme, Touchable, Icon } from '@apollosproject/ui-kit';
+import { styled, withTheme, Touchable, Icon } from '@apollosproject/ui-kit';
 
 const SearchIcon = withTheme(({ theme: { colors, sizing: { baseUnit } } }) => ({
   name: 'search',
@@ -9,10 +10,18 @@ const SearchIcon = withTheme(({ theme: { colors, sizing: { baseUnit } } }) => ({
   fill: colors.primary,
 }))(Icon);
 
+const SearchButtonContainer = styled(({ theme: { sizing: { baseUnit } } }) => ({
+  position: 'absolute',
+  right: baseUnit,
+  top: baseUnit / 2,
+}))(Animated.View);
+
 const HomeSearchButton = ({ onPress }) => (
-  <Touchable onPress={onPress}>
-    <SearchIcon />
-  </Touchable>
+  <SearchButtonContainer>
+    <Touchable onPress={onPress}>
+      <SearchIcon />
+    </Touchable>
+  </SearchButtonContainer>
 );
 
 HomeSearchButton.propTypes = {
