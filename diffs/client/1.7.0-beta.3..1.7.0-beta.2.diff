diff --git a/apolloschurchapp/.nvmrc b/apolloschurchapp/.nvmrc
new file mode 100644
index 0000000..5b7269c
--- /dev/null
+++ b/apolloschurchapp/.nvmrc
@@ -0,0 +1 @@
+10.19.0
diff --git a/apolloschurchapp/apollos.json b/apolloschurchapp/apollos.json
index dae3af0..a27a25d 100644
--- a/apolloschurchapp/apollos.json
+++ b/apolloschurchapp/apollos.json
@@ -1,4 +1,4 @@
 {
-    "version": "1.7.0-beta.3",
+    "version": "1.7.0-beta.2",
     "environment": "client"
 }
diff --git a/apolloschurchapp/ios/Podfile.lock b/apolloschurchapp/ios/Podfile.lock
index e35b4e6..596ecbb 100644
--- a/apolloschurchapp/ios/Podfile.lock
+++ b/apolloschurchapp/ios/Podfile.lock
@@ -14,14 +14,14 @@ PODS:
     - DoubleConversion
     - glog
   - glog (0.3.5)
-  - google-cast-sdk-no-bluetooth (4.5.1):
-    - google-cast-sdk-no-bluetooth/Core (= 4.5.1)
-    - GTMSessionFetcher/Core (~> 1.1)
+  - google-cast-sdk-no-bluetooth (4.4.8):
+    - google-cast-sdk-no-bluetooth/Core (= 4.4.8)
+    - GTMSessionFetcher/Core (~> 1.0)
     - Protobuf (~> 3.12)
-  - google-cast-sdk-no-bluetooth/Core (4.5.1):
-    - GTMSessionFetcher/Core (~> 1.1)
+  - google-cast-sdk-no-bluetooth/Core (4.4.8):
+    - GTMSessionFetcher/Core (~> 1.0)
     - Protobuf (~> 3.12)
-  - GTMSessionFetcher/Core (1.5.0)
+  - GTMSessionFetcher/Core (1.4.0)
   - OneSignal (2.15.2)
   - Permission-Notifications (2.0.10):
     - RNPermissions
@@ -319,8 +319,8 @@ SPEC CHECKSUMS:
   DoubleConversion: 5805e889d232975c086db112ece9ed034df7a0b2
   Folly: 30e7936e1c45c08d884aa59369ed951a8e68cf51
   glog: 1f3da668190260b06b429bb211bfbee5cd790c28
-  google-cast-sdk-no-bluetooth: 73ac8e9edbee16f52c2a445e391bd531e116bb31
-  GTMSessionFetcher: b3503b20a988c4e20cc189aa798fd18220133f52
+  google-cast-sdk-no-bluetooth: d5a60530c72b0907fb302d835952b6cb0ba5f128
+  GTMSessionFetcher: 6f5c8abbab8a9bce4bb3f057e317728ec6182b10
   OneSignal: 9531e385388565f4d31797ddadbe0fcc786430ec
   Permission-Notifications: c9eb3a2da68dc0f37a8dc67d37bd28d150c5041d
   Permission-PhotoLibrary: e59a7a687e002e8c8c46946c26520934ba85a688
diff --git a/apolloschurchapp/ios/apolloschurchapp.xcodeproj/project.pbxproj b/apolloschurchapp/ios/apolloschurchapp.xcodeproj/project.pbxproj
index f5d75d6..88f3bb4 100644
--- a/apolloschurchapp/ios/apolloschurchapp.xcodeproj/project.pbxproj
+++ b/apolloschurchapp/ios/apolloschurchapp.xcodeproj/project.pbxproj
@@ -505,8 +505,8 @@
 			);
 			inputPaths = (
 				"${PODS_ROOT}/Target Support Files/Pods-apolloschurchapp/Pods-apolloschurchapp-resources.sh",
-				"${PODS_ROOT}/google-cast-sdk-no-bluetooth/GoogleCastSDK-ios-4.5.1_static/GoogleCast.framework/GoogleCastCoreResources.bundle",
-				"${PODS_ROOT}/google-cast-sdk-no-bluetooth/GoogleCastSDK-ios-4.5.1_static/GoogleCast.framework/GoogleCastUIResources.bundle",
+				"${PODS_ROOT}/google-cast-sdk-no-bluetooth/GoogleCastSDK-ios-4.4.8_static/GoogleCast.framework/GoogleCastCoreResources.bundle",
+				"${PODS_ROOT}/google-cast-sdk-no-bluetooth/GoogleCastSDK-ios-4.4.8_static/GoogleCast.framework/GoogleCastUIResources.bundle",
 			);
 			name = "[CP] Copy Pods Resources";
 			outputPaths = (
diff --git a/apolloschurchapp/package.json b/apolloschurchapp/package.json
index 98e94fc..ec6b21b 100644
--- a/apolloschurchapp/package.json
+++ b/apolloschurchapp/package.json
@@ -17,12 +17,10 @@
     "unlink-packages": "rm -rf ./node_modules/@apollosproject/* && ../node_modules/.bin/wml rm all",
     "generate-stories": "rnstl --searchDir ./src --pattern **/*.stories.js",
     "lint": "eslint ./src --ext .js",
-    "get-schema": "eval $(grep ^APP_DATA_URL .env) && sleep 5 && get-graphql-schema $APP_DATA_URL > schema.graphql",
-    "prestart": "yarn generate-stories & yarn get-schema && node ./scripts/get-introspection-data.js",
+    "prestart": "yarn generate-stories & node ./scripts/get-introspection-data.js",
     "postinstall": "jetify && yarn pods",
     "pods": "(bundle install && cd ios && bundle exec pod install --repo-update)",
-    "start": "yarn start:dev",
-    "start:dev": "react-native start",
+    "start": "react-native start",
     "test": "TZ=UTC jest",
     "upgrade": "npx @apollosproject/upgrade-tools upgrade",
     "latest": "./scripts/add-packages.sh latest",
@@ -50,22 +48,22 @@
   },
   "dependencies": {
     "@apollo/react-hooks": "^3.1.3",
-    "@apollosproject/config": "^1.7.0-beta.3",
+    "@apollosproject/config": "^1.7.0-beta.2",
     "@apollosproject/react-native-airplay-btn": "^0.2.0",
-    "@apollosproject/ui-analytics": "^1.7.0-beta.3",
-    "@apollosproject/ui-auth": "^1.7.0-beta.3",
-    "@apollosproject/ui-connected": "^1.7.0-beta.3",
-    "@apollosproject/ui-fragments": "^1.7.0-beta.3",
-    "@apollosproject/ui-htmlview": "^1.7.0-beta.3",
-    "@apollosproject/ui-kit": "^1.7.0-beta.3",
-    "@apollosproject/ui-mapview": "^1.7.0-beta.3",
-    "@apollosproject/ui-media-player": "^1.7.0-beta.3",
-    "@apollosproject/ui-notifications": "^1.7.0-beta.3",
-    "@apollosproject/ui-onboarding": "^1.7.0-beta.3",
-    "@apollosproject/ui-passes": "^1.7.0-beta.3",
-    "@apollosproject/ui-prayer": "^1.7.0-beta.3",
-    "@apollosproject/ui-scripture": "^1.7.0-beta.3",
-    "@apollosproject/ui-storybook": "^1.7.0-beta.3",
+    "@apollosproject/ui-analytics": "^1.7.0-beta.2",
+    "@apollosproject/ui-auth": "^1.7.0-beta.2",
+    "@apollosproject/ui-connected": "^1.7.0-beta.2",
+    "@apollosproject/ui-fragments": "^1.7.0-beta.2",
+    "@apollosproject/ui-htmlview": "^1.7.0-beta.2",
+    "@apollosproject/ui-kit": "^1.7.0-beta.2",
+    "@apollosproject/ui-mapview": "^1.7.0-beta.2",
+    "@apollosproject/ui-media-player": "^1.7.0-beta.2",
+    "@apollosproject/ui-notifications": "^1.7.0-beta.2",
+    "@apollosproject/ui-onboarding": "^1.7.0-beta.2",
+    "@apollosproject/ui-passes": "^1.7.0-beta.2",
+    "@apollosproject/ui-prayer": "^1.7.0-beta.2",
+    "@apollosproject/ui-scripture": "^1.7.0-beta.2",
+    "@apollosproject/ui-storybook": "^1.7.0-beta.2",
     "@metarouter/analytics-react-native": "^1.1.5",
     "@react-native-community/async-storage": "^1.5.1",
     "@react-native-community/datetimepicker": "^3.0.0",
@@ -124,7 +122,7 @@
     "yup": "0.26.6"
   },
   "devDependencies": {
-    "@apollosproject/eslint-config": "^1.7.0-beta.3",
+    "@apollosproject/eslint-config": "^1.7.0-beta.2",
     "babel-eslint": "10.0.1",
     "babel-plugin-module-resolver": "^4.0.0",
     "codecov": "3.7.2",
@@ -141,7 +139,6 @@
     "eslint-plugin-react-hooks": "^4.0.2",
     "eslint-plugin-react-native": "^3.2.1",
     "get-dev-paths": "^0.1.0",
-    "get-graphql-schema": "^2.1.2",
     "graphql-import": "^0.7.1",
     "jest": "^25.1.0",
     "jetifier": "^1.6.4",
diff --git a/apolloschurchapp/schema.graphql b/apolloschurchapp/schema.graphql
deleted file mode 100644
index ff6a9f6..0000000
--- a/apolloschurchapp/schema.graphql
+++ /dev/null
@@ -1,742 +0,0 @@
-directive @cacheControl(maxAge: Int, scope: CacheControlScope) on FIELD_DEFINITION | OBJECT | INTERFACE
-
-enum ACTION_FEATURE_ACTION {
-  READ_CONTENT
-  READ_EVENT
-  OPEN_URL
-  OPEN_NODE
-  OPEN_CHANNEL
-}
-
-type ActionBarAction {
-  id: ID!
-  icon: String
-  title: String
-  action: ACTION_FEATURE_ACTION
-  relatedNode: Node
-}
-
-type ActionBarFeature implements Feature & Node {
-  id: ID!
-  order: Int
-  title: String
-  actions: [ActionBarAction]
-}
-
-type ActionListAction {
-  id: ID!
-  title: String
-  subtitle: String
-  image: ImageMedia
-  relatedNode: Node
-  action: ACTION_FEATURE_ACTION
-}
-
-type ActionListFeature implements Feature & Node {
-  id: ID!
-  order: Int
-  title: String
-  subtitle: String
-  actions: [ActionListAction]
-  primaryAction: FeatureAction
-}
-
-input AnalyticsDeviceInfo {
-  platform: AnalyticsPlatform
-  deviceId: String
-  deviceModel: String
-  osVersion: String
-  appVersion: String
-}
-
-input AnalyticsIdentifyInput {
-  traits: [AnalyticsMetaField]
-  anonymousId: String!
-  deviceInfo: AnalyticsDeviceInfo
-}
-
-input AnalyticsMetaField {
-  field: String!
-  value: AnalyticsValue
-}
-
-enum AnalyticsPlatform {
-  iOS
-  Android
-}
-
-type AnalyticsResult {
-  success: Boolean
-}
-
-input AnalyticsTrackInput {
-  eventName: String!
-  properties: [AnalyticsMetaField]
-  anonymousId: String
-  deviceInfo: AnalyticsDeviceInfo
-}
-
-scalar AnalyticsValue
-
-type AudioMedia implements Media {
-  name: String
-  key: String
-  sources: [AudioMediaSource]
-}
-
-type AudioMediaSource implements MediaSource {
-  uri: String
-}
-
-interface AudioNode {
-  audios: [AudioMedia]
-}
-
-type AuthenticatedUser {
-  id: ID!
-  profile: Person
-  rock: RockPersonDetails
-  rockToken: String @deprecated(reason: "Use rock.authCookie instead")
-}
-
-type Authentication {
-  user: AuthenticatedUser
-  token: String
-}
-
-enum CacheControlScope {
-  PUBLIC
-  PRIVATE
-}
-
-type Campus implements Node {
-  id: ID!
-  name: String
-  street1: String
-  street2: String
-  city: String
-  state: String
-  postalCode: String
-  latitude: Float
-  longitude: Float
-  image: ImageMediaSource
-  distanceFromLocation(location: CampusLocationInput): Float
-  events: [Event]
-}
-
-input CampusLocationInput {
-  latitude: Float
-  longitude: Float
-}
-
-interface Card {
-  title(hyphenated: Boolean): String
-  coverImage: ImageMedia
-  summary: String
-}
-
-type CardListItem {
-  id: ID!
-  hasAction: Boolean
-  actionIcon: String
-  labelText: String
-  summary: String
-  coverImage: ImageMedia
-  title(hyphenated: Boolean): String
-  relatedNode: Node
-  action: ACTION_FEATURE_ACTION
-}
-
-"""A rgb color string"""
-scalar Color
-
-type ContentChannel implements Node {
-  id: ID!
-  name: String
-  description: String
-  childContentChannels: [ContentChannel]
-  childContentItemsConnection(first: Int, after: String): ContentItemsConnection
-  iconName: String
-}
-
-interface ContentChildNode {
-  parentChannel: ContentChannel
-  siblingContentItemsConnection(first: Int, after: String): ContentItemsConnection
-}
-
-interface ContentItem {
-  id: ID!
-  title(hyphenated: Boolean): String
-  coverImage: ImageMedia
-  images: [ImageMedia]
-  videos: [VideoMedia]
-  audios: [AudioMedia]
-  htmlContent: String
-  summary: String
-  childContentItemsConnection(first: Int, after: String): ContentItemsConnection
-  siblingContentItemsConnection(first: Int, after: String): ContentItemsConnection
-  parentChannel: ContentChannel
-  theme: Theme
-  isLiked: Boolean
-  likedCount: Int
-  sharing: SharableContentItem
-}
-
-type ContentItemsConnection {
-  edges: [ContentItemsConnectionEdge]
-  totalCount: Int
-  pageInfo: PaginationInfo
-}
-
-type ContentItemsConnectionEdge {
-  node: ContentItem
-  cursor: String
-}
-
-input ContentItemsConnectionInput {
-  first: Int
-  after: String
-}
-
-interface ContentNode {
-  title(hyphenated: Boolean): String
-  coverImage: ImageMedia
-  htmlContent: String
-}
-
-interface ContentParentNode {
-  childContentItemsConnection(first: Int, after: String): ContentItemsConnection
-}
-
-type ContentSeriesContentItem implements ContentItem & Node & ContentNode & Card & VideoNode & AudioNode & ContentChildNode & ContentParentNode & ThemedNode & ProgressNode & LikableNode & ShareableNode & FeaturesNode {
-  id: ID!
-  title(hyphenated: Boolean): String
-  coverImage: ImageMedia
-  images: [ImageMedia]
-  videos: [VideoMedia]
-  audios: [AudioMedia]
-  htmlContent: String
-  summary: String
-  childContentItemsConnection(first: Int, after: String): ContentItemsConnection
-  siblingContentItemsConnection(first: Int, after: String): ContentItemsConnection
-  parentChannel: ContentChannel
-  theme: Theme
-  percentComplete: Float
-  upNext: ContentItem
-  scriptures: [Scripture]
-  isLiked: Boolean
-  likedCount: Int
-  sharing: SharableContentItem
-  features: [Feature] @deprecated(reason: "Use featureFeed")
-  featureFeed: FeatureFeed
-}
-
-type Device implements Node {
-  id: ID!
-  pushId: String!
-  notificationsEnabled: Boolean!
-}
-
-type DevotionalContentItem implements ContentItem & Node & ContentNode & Card & VideoNode & AudioNode & ContentChildNode & ContentParentNode & ThemedNode & ScriptureNode & LikableNode & ShareableNode {
-  id: ID!
-  title(hyphenated: Boolean): String
-  coverImage: ImageMedia
-  images: [ImageMedia]
-  videos: [VideoMedia]
-  audios: [AudioMedia]
-  htmlContent: String
-  summary: String
-  childContentItemsConnection(first: Int, after: String): ContentItemsConnection
-  siblingContentItemsConnection(first: Int, after: String): ContentItemsConnection
-  parentChannel: ContentChannel
-  theme: Theme
-  scriptures: [Scripture]
-  isLiked: Boolean
-  likedCount: Int
-  sharing: SharableContentItem
-}
-
-type Event implements Node {
-  id: ID!
-  name: String
-  description: String
-  location: String
-  start: String
-  end: String
-  image: ImageMedia
-}
-
-interface Feature {
-  id: ID!
-  order: Int
-}
-
-type FeatureAction {
-  relatedNode: Node
-  action: ACTION_FEATURE_ACTION
-  title: String
-}
-
-type FeatureFeed implements Node {
-  id: ID!
-  features: [Feature]
-}
-
-interface FeaturesNode {
-  features: [Feature] @deprecated(reason: "Use featureFeed")
-  featureFeed: FeatureFeed
-}
-
-enum GENDER {
-  Male
-  Female
-  Unknown
-}
-
-type Group implements Node {
-  id: ID!
-  name: String
-  leader: Person @deprecated(reason: "No longer used, use 'leaders' instead")
-  leaders: [Person]
-  members: [Person]
-}
-
-enum GROUP_TYPE {
-  Serving
-  Community
-  Family
-}
-
-type HeroListFeature implements Feature & Node {
-  id: ID!
-  order: Int
-  title: String
-  subtitle: String
-  actions: [ActionListAction]
-  heroCard: CardListItem
-  primaryAction: FeatureAction
-}
-
-type HorizontalCardListFeature implements Feature & Node {
-  id: ID!
-  order: Int
-  title: String
-  subtitle: String
-  cards: [CardListItem]
-  primaryAction: FeatureAction
-}
-
-type ImageMedia implements Media {
-  name: String
-  key: String
-  sources: [ImageMediaSource]
-}
-
-type ImageMediaSource implements MediaSource {
-  uri: String
-}
-
-enum InteractionAction {
-  VIEW
-  COMPLETE
-  PRAY
-}
-
-input InteractionDataField {
-  field: String!
-  value: InteractionValue
-}
-
-type InteractionResult {
-  success: Boolean
-  node: Node
-}
-
-scalar InteractionValue
-
-interface LikableNode {
-  isLiked: Boolean
-  likedCount: Int
-}
-
-enum LIKE_OPERATION {
-  Like
-  Unlike
-}
-
-input LikeEntityInput {
-  nodeId: ID!
-  operation: LIKE_OPERATION!
-}
-
-interface LiveNode {
-  liveStream: LiveStream
-}
-
-type LiveStream {
-  isLive: Boolean
-  eventStartTime: String
-  media: VideoMedia
-  webViewUrl: String
-  contentItem: ContentItem
-}
-
-interface Media {
-  name: String
-  key: String
-  sources: [MediaSource]
-}
-
-type MediaContentItem implements ContentItem & Node & ContentNode & Card & VideoNode & AudioNode & ContentChildNode & ContentParentNode & ThemedNode & ScriptureNode & LikableNode & ShareableNode {
-  id: ID!
-  title(hyphenated: Boolean): String
-  coverImage: ImageMedia
-  images: [ImageMedia]
-  videos: [VideoMedia]
-  audios: [AudioMedia]
-  htmlContent: String
-  summary: String
-  childContentItemsConnection(first: Int, after: String): ContentItemsConnection
-  siblingContentItemsConnection(first: Int, after: String): ContentItemsConnection
-  parentChannel: ContentChannel
-  theme: Theme
-  scriptures: [Scripture]
-  isLiked: Boolean
-  likedCount: Int
-  sharing: SharableContentItem
-}
-
-enum MediaInputType {
-  IMAGE
-  VIDEO
-  AUDIO
-}
-
-interface MediaSource {
-  uri: String
-}
-
-type Mutation {
-  _placeholder: Boolean
-  updateLikeEntity(input: LikeEntityInput!): ContentItem @deprecated(reason: "Use the more general updateLikeNode instead")
-  updateLikeNode(input: LikeEntityInput!): Node
-  updateProfileField(input: UpdateProfileInput!): Person
-  updateProfileFields(input: [UpdateProfileInput]!): Person
-  uploadProfileImage(file: Upload!, size: Int!): Person
-  authenticate(identity: String!, password: String!): Authentication
-  changePassword(password: String!): Authentication
-  registerPerson(email: String!, password: String!, userProfile: [UpdateProfileInput]): Authentication
-  requestSmsLoginPin(phoneNumber: String!): SmsPinResult
-  authenticateWithSms(phoneNumber: String!, pin: String!): Authentication
-  registerWithSms(phoneNumber: String!, pin: String!, userProfile: [UpdateProfileInput]): Authentication
-  interactWithNode(action: InteractionAction!, nodeId: ID!, data: [InteractionDataField]): InteractionResult
-  identifySelf(input: AnalyticsIdentifyInput!): AnalyticsResult
-  trackEvent(input: AnalyticsTrackInput!): AnalyticsResult
-  updateUserPushSettings(input: PushSettingsInput!): Person
-  updateUserCampus(campusId: String!): Person
-  addPrayer(text: String!, isAnonymous: Boolean): PrayerRequest
-}
-
-interface Node {
-  id: ID!
-}
-
-type PaginationInfo {
-  startCursor: String
-  endCursor: String
-}
-
-type Pass implements Node {
-  id: ID!
-  type: PassType
-  description: String
-  logo: ImageMediaSource
-  thumbnail: ImageMediaSource
-  barcode: ImageMediaSource
-  primaryFields: [PassField]
-  secondaryFields: [PassField]
-  backgroundColor: Color
-  foregroundColor: Color
-  labelColor: Color
-  logoText: String
-  passkitFileUrl: String
-}
-
-type PassField {
-  key: String!
-  label: String
-  value: String!
-  textAlignment: PassFieldTextAlignment
-}
-
-enum PassFieldTextAlignment {
-  LEFT
-  CENTER
-  RIGHT
-  NATURAL
-}
-
-enum PassType {
-  GENERIC
-}
-
-type Person implements Node {
-  id: ID!
-  firstName: String
-  lastName: String
-  nickName: String
-  email: String
-  gender: GENDER
-  birthDate: String
-  photo: ImageMediaSource
-  devices: [Device]
-  campus: Campus
-  groups(type: GROUP_TYPE, asLeader: Boolean): [Group]
-}
-
-type PrayerListFeature implements Feature & Node {
-  id: ID!
-  order: Int
-  isCard: Boolean
-  title: String
-  subtitle: String
-  prayers: [PrayerRequest]
-}
-
-type PrayerRequest implements Node {
-  id: ID!
-  text: String!
-  requestor: Person
-  isAnonymous: Boolean
-  isPrayed: Boolean
-}
-
-interface ProgressNode {
-  percentComplete: Float
-  upNext: ContentItem
-}
-
-input PushSettingsInput {
-  enabled: Boolean
-  pushProviderUserId: String
-}
-
-type Query {
-  _placeholder: Boolean
-  node(id: ID!): Node
-  likedContent(first: Int, after: String): ContentItemsConnection
-  contentChannels: [ContentChannel]
-  campaigns: ContentItemsConnection
-  userFeed(first: Int, after: String): ContentItemsConnection
-  personaFeed(first: Int, after: String): ContentItemsConnection
-  currentUser: AuthenticatedUser
-  userExists(identity: String): USER_AUTH_STATUS
-  liveStream: LiveStream @deprecated(reason: "Use liveStreams, there may be multiple.")
-  liveStreams: [LiveStream]
-  scripture(query: String!, version: VERSION): Scripture @deprecated(reason: "Use 'scriptures' instead.")
-  scriptures(query: String!, version: VERSION): [Scripture]
-  userPass: Pass
-  search(query: String!, first: Int, after: String): SearchResultsConnection
-  campuses(location: CampusLocationInput): [Campus]
-  userFeedFeatures: [Feature] @deprecated(reason: "Use homeFeedFeatures or discoverFeedFeatures")
-  homeFeedFeatures(campusId: ID): FeatureFeed
-  discoverFeedFeatures: FeatureFeed
-}
-
-type RockPersonDetails {
-  authToken: String
-  authCookie: String
-}
-
-type Scripture implements Node {
-  id: ID!
-  html: String
-  reference: String
-  copyright: String
-  version: String
-}
-
-type ScriptureFeature implements Feature & Node {
-  id: ID!
-  order: Int
-  scriptures: [Scripture]
-  sharing: SharableFeature
-}
-
-interface ScriptureNode {
-  scriptures: [Scripture]
-}
-
-type SearchResult {
-  cursor: String
-  title: String
-  summary: String
-  coverImage: ImageMedia
-  node: Node
-}
-
-type SearchResultsConnection {
-  edges: [SearchResult]
-  pageInfo: PaginationInfo
-}
-
-interface Sharable {
-  message: String
-  title: String
-  url: String @deprecated(reason: "Not supported on the interface")
-}
-
-type SharableContentItem implements Sharable {
-  message: String
-  title: String
-  url: String
-}
-
-type SharableFeature implements Sharable {
-  message: String
-  title: String
-  url: String @deprecated(reason: "Not supported on a feature")
-}
-
-interface ShareableNode {
-  sharing: SharableContentItem
-}
-
-type SmsPinResult {
-  success: Boolean
-  userAuthStatus: USER_AUTH_STATUS
-}
-
-type TextFeature implements Feature & Node {
-  id: ID!
-  order: Int
-  body: String
-  sharing: SharableFeature
-}
-
-type Theme {
-  type: ThemeType
-  colors: ThemeColors
-}
-
-type ThemeColors {
-  primary: Color
-  secondary: Color
-  screen: Color
-  paper: Color
-  alert: Color
-}
-
-interface ThemedNode {
-  theme: Theme
-}
-
-enum ThemeType {
-  LIGHT
-  DARK
-}
-
-type UniversalContentItem implements ContentItem & Node & ContentNode & Card & VideoNode & AudioNode & ContentChildNode & ContentParentNode & ThemedNode & LikableNode & ShareableNode {
-  id: ID!
-  title(hyphenated: Boolean): String
-  coverImage: ImageMedia
-  images: [ImageMedia]
-  videos: [VideoMedia]
-  audios: [AudioMedia]
-  htmlContent: String
-  summary: String
-  childContentItemsConnection(first: Int, after: String): ContentItemsConnection
-  siblingContentItemsConnection(first: Int, after: String): ContentItemsConnection
-  parentChannel: ContentChannel
-  theme: Theme
-  isLiked: Boolean
-  likedCount: Int
-  sharing: SharableContentItem
-}
-
-enum UPDATEABLE_PROFILE_FIELDS {
-  FirstName
-  LastName
-  Email
-  NickName
-  Gender
-  BirthDate
-}
-
-input UpdateProfileInput {
-  field: UPDATEABLE_PROFILE_FIELDS!
-  value: String!
-}
-
-"""The `Upload` scalar type represents a file upload."""
-scalar Upload
-
-type Url implements Node {
-  url: String
-  id: ID!
-}
-
-enum USER_AUTH_STATUS {
-  NONE
-  NEW_APP_USER
-  EXISTING_APP_USER
-}
-
-enum VERSION {
-  WEB
-  KJV
-}
-
-type VerticalCardListFeature implements Feature & Node {
-  id: ID!
-  order: Int
-  title: String
-  subtitle: String
-  isFeatured: Boolean
-  cards: [CardListItem]
-}
-
-type VideoMedia implements Media {
-  name: String
-  key: String
-  sources: [VideoMediaSource]
-  embedHtml: String
-}
-
-type VideoMediaSource implements MediaSource {
-  uri: String
-}
-
-interface VideoNode {
-  videos: [VideoMedia]
-}
-
-type WebviewFeature implements Feature & Node {
-  id: ID!
-  order: Int
-  linkText: String
-  title: String
-  url: String
-}
-
-type WeekendContentItem implements ContentItem & Node & ContentNode & Card & VideoNode & AudioNode & ContentChildNode & ContentParentNode & ThemedNode & LikableNode & LiveNode & ShareableNode & FeaturesNode {
-  id: ID!
-  title(hyphenated: Boolean): String
-  coverImage: ImageMedia
-  images: [ImageMedia]
-  videos: [VideoMedia]
-  audios: [AudioMedia]
-  htmlContent: String
-  summary: String
-  childContentItemsConnection(first: Int, after: String): ContentItemsConnection
-  siblingContentItemsConnection(first: Int, after: String): ContentItemsConnection
-  parentChannel: ContentChannel
-  theme: Theme
-  isLiked: Boolean
-  likedCount: Int
-  liveStream: LiveStream
-  sharing: SharableContentItem
-  features: [Feature] @deprecated(reason: "Use featureFeed")
-  featureFeed: FeatureFeed
-}
-
diff --git a/apolloschurchapp/src/client/__mocks__/index.js b/apolloschurchapp/src/client/__mocks__/index.js
index c982817..462244b 100644
--- a/apolloschurchapp/src/client/__mocks__/index.js
+++ b/apolloschurchapp/src/client/__mocks__/index.js
@@ -20,7 +20,9 @@ export default (props) => {
 };
 
 const serverSchema = makeExecutableSchema({
-  typeDefs: importSchema(`${process.cwd()}/schema.graphql`),
+  typeDefs: importSchema(
+    `${process.cwd()}/../apollos-church-api/local.graphql`
+  ),
   resolverValidationOptions: {
     requireResolversForResolveType: false,
   },
diff --git a/apolloschurchapp/src/tabs/discover/discover.tests.js b/apolloschurchapp/src/tabs/discover/discover.tests.js
new file mode 100644
index 0000000..d729e7f
--- /dev/null
+++ b/apolloschurchapp/src/tabs/discover/discover.tests.js
@@ -0,0 +1,570 @@
+import React from 'react';
+import { flatMap } from 'lodash';
+
+import { GET_CONTENT_CARD } from '@apollosproject/ui-connected';
+import Providers from '../../Providers';
+
+import { renderWithApolloData } from '../../utils/testUtils';
+
+import Discover, { GET_DISCOVER_FEED } from './Discover';
+
+describe('The Discover tab component', () => {
+  it('Should retrieve the Content Channel Feeds', async () => {
+    const mockFeedData = {
+      request: {
+        query: GET_DISCOVER_FEED,
+      },
+      result: {
+        data: {
+          contentChannels: [
+            {
+              id: 'ContentChannel:965b6e6d7046a885bea4e300b5c0400d',
+              name: 'News',
+              childContentItemsConnection: {
+                edges: [
+                  {
+                    node: {
+                      id:
+                        'UniversalContentItem:00bb7b364911281c97fc50f2a0d17b11',
+                      title: 'Anderson Family Cookout!',
+                      hyphenatedTitle: 'Anderson Family Cookout!',
+                      isLiked: false,
+                      likedCount: 0,
+                      summary: 'Come join us!',
+                      coverImage: {
+                        name: 'Landscape Image',
+                        sources: [
+                          {
+                            uri:
+                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D62e0e2ba-2dac-468b-a852-7e8cf2533efc',
+                            __typename: 'ImageMediaSource',
+                          },
+                        ],
+                        __typename: 'ImageMedia',
+                      },
+                      theme: null,
+                      parentChannel: {
+                        id: 'ContentChannel:965b6e6d7046a885bea4e300b5c0400d',
+                        name: 'News',
+                        __typename: 'ContentChannel',
+                      },
+                      videos: [],
+                      audios: [],
+                      __typename: 'UniversalContentItem',
+                    },
+                    __typename: 'ContentItemsConnectionEdge',
+                  },
+                  {
+                    node: {
+                      id:
+                        'UniversalContentItem:7db601b238aa4345a818654300f83dd2',
+                      title: 'Robert Madu is Coming to Christ Fellowship',
+                      hyphenatedTitle:
+                        'Robert Madu is Coming to Christ Fellowship',
+                      isLiked: false,
+                      likedCount: 5,
+                      summary:
+                        "Don't miss a powerful message from preacher and speaker, Robert Madu.",
+                      coverImage: {
+                        name: 'Square Image',
+                        sources: [
+                          {
+                            uri:
+                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3Df3ba0936-8aab-46c1-8245-0e5aef637ae3',
+                            __typename: 'ImageMediaSource',
+                          },
+                        ],
+                        __typename: 'ImageMedia',
+                      },
+                      theme: null,
+                      parentChannel: {
+                        id: 'ContentChannel:965b6e6d7046a885bea4e300b5c0400d',
+                        name: 'News',
+                        __typename: 'ContentChannel',
+                      },
+                      videos: [],
+                      audios: [],
+                      __typename: 'UniversalContentItem',
+                    },
+                    __typename: 'ContentItemsConnectionEdge',
+                  },
+                  {
+                    node: {
+                      id:
+                        'UniversalContentItem:296373ecb53580855cadffa0375ebe18',
+                      title: 'Guys Night!',
+                      hyphenatedTitle: 'Guys Night!',
+                      isLiked: false,
+                      likedCount: 0,
+                      summary:
+                        'A time to connect with other guys who live nearby.',
+                      coverImage: {
+                        name: 'Square Image',
+                        sources: [
+                          {
+                            uri:
+                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D58c037fa-cc7f-4d72-9571-a0cc0558e346',
+                            __typename: 'ImageMediaSource',
+                          },
+                        ],
+                        __typename: 'ImageMedia',
+                      },
+                      theme: null,
+                      parentChannel: {
+                        id: 'ContentChannel:965b6e6d7046a885bea4e300b5c0400d',
+                        name: 'News',
+                        __typename: 'ContentChannel',
+                      },
+                      videos: [],
+                      audios: [],
+                      __typename: 'UniversalContentItem',
+                    },
+                    __typename: 'ContentItemsConnectionEdge',
+                  },
+                ],
+                __typename: 'ContentItemsConnection',
+              },
+              __typename: 'ContentChannel',
+            },
+            {
+              id: 'ContentChannel:4f68015ba18662a7409d1219a4ce013e',
+              name: 'Articles',
+              childContentItemsConnection: {
+                edges: [
+                  {
+                    node: {
+                      id:
+                        'UniversalContentItem:604a4a763a5fc0edfe386684ca6b3515',
+                      title: 'Test Article',
+                      hyphenatedTitle: 'Test Article',
+                      isLiked: false,
+                      likedCount: 0,
+                      summary: 'Test article...',
+                      coverImage: null,
+                      theme: null,
+                      parentChannel: {
+                        id: 'ContentChannel:4f68015ba18662a7409d1219a4ce013e',
+                        name: 'Articles',
+                        __typename: 'ContentChannel',
+                      },
+                      videos: [],
+                      audios: [],
+                      __typename: 'UniversalContentItem',
+                    },
+                    __typename: 'ContentItemsConnectionEdge',
+                  },
+                  {
+                    node: {
+                      id:
+                        'UniversalContentItem:c495ff18cd998ed516a798b6218907cd',
+                      title: '10 ways to refresh your spirit every day',
+                      hyphenatedTitle:
+                        '10 ways to refresh your spirit every day',
+                      isLiked: false,
+                      likedCount: 2,
+                      summary:
+                        '1. Be slow What would it look like to live your life at half-speed?',
+                      coverImage: null,
+                      theme: null,
+                      parentChannel: {
+                        id: 'ContentChannel:4f68015ba18662a7409d1219a4ce013e',
+                        name: 'Articles',
+                        __typename: 'ContentChannel',
+                      },
+                      videos: [],
+                      audios: [],
+                      __typename: 'UniversalContentItem',
+                    },
+                    __typename: 'ContentItemsConnectionEdge',
+                  },
+                  {
+                    node: {
+                      id:
+                        'UniversalContentItem:95ff79f60a028b1b506aaeedf8b4c6ae',
+                      title: 'Live for Freedom Toolkit',
+                      hyphenatedTitle: 'Live for Freedom Toolkit',
+                      isLiked: false,
+                      likedCount: 1,
+                      summary:
+                        "Get in the Groove\nCelebrate your freedom in Christ — in the car, shower, cubicle or wherever you go — with this playlist of NewSpring Worship's favorite songs of the summer.",
+                      coverImage: null,
+                      theme: null,
+                      parentChannel: {
+                        id: 'ContentChannel:4f68015ba18662a7409d1219a4ce013e',
+                        name: 'Articles',
+                        __typename: 'ContentChannel',
+                      },
+                      videos: [],
+                      audios: [],
+                      __typename: 'UniversalContentItem',
+                    },
+                    __typename: 'ContentItemsConnectionEdge',
+                  },
+                ],
+                __typename: 'ContentItemsConnection',
+              },
+              __typename: 'ContentChannel',
+            },
+            {
+              id: 'ContentChannel:a0f64573eabf00a607bec911794d50fb',
+              name: 'Sermon Series',
+              childContentItemsConnection: {
+                edges: [
+                  {
+                    node: {
+                      id:
+                        'ContentSeriesContentItem:6d8dc8e4bad017f815ae0cac8bf692bb',
+                      title: 'The New Weekend Experience',
+                      hyphenatedTitle: 'The New Weekend Experience',
+                      isLiked: false,
+                      likedCount: 1,
+                      summary:
+                        'Have you come into relationship with Jesus Christ?',
+                      coverImage: {
+                        name: 'Series Image',
+                        sources: [
+                          {
+                            uri:
+                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D98be229f-dfed-4344-86ab-0d11666fc781',
+                            __typename: 'ImageMediaSource',
+                          },
+                        ],
+                        __typename: 'ImageMedia',
+                      },
+                      theme: null,
+                      parentChannel: {
+                        id: 'ContentChannel:a0f64573eabf00a607bec911794d50fb',
+                        name: 'Sermon Series',
+                        __typename: 'ContentChannel',
+                      },
+                      videos: [
+                        { sources: [], __typename: 'VideoMedia' },
+                        { sources: [], __typename: 'VideoMedia' },
+                      ],
+                      audios: [],
+                      __typename: 'ContentSeriesContentItem',
+                    },
+                    __typename: 'ContentItemsConnectionEdge',
+                  },
+                  {
+                    node: {
+                      id:
+                        'ContentSeriesContentItem:08449058d438ebeaffe9adb7a8e633cc',
+                      title: 'Gathering',
+                      hyphenatedTitle: 'Gathering',
+                      isLiked: false,
+                      likedCount: 0,
+                      summary: '',
+                      coverImage: {
+                        name: 'Square Image',
+                        sources: [
+                          {
+                            uri:
+                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D50f4e3e3-2842-4991-9f64-8fc6fbb3067c',
+                            __typename: 'ImageMediaSource',
+                          },
+                        ],
+                        __typename: 'ImageMedia',
+                      },
+                      theme: null,
+                      parentChannel: {
+                        id: 'ContentChannel:a0f64573eabf00a607bec911794d50fb',
+                        name: 'Sermon Series',
+                        __typename: 'ContentChannel',
+                      },
+                      videos: [
+                        { sources: [], __typename: 'VideoMedia' },
+                        { sources: [], __typename: 'VideoMedia' },
+                      ],
+                      audios: [],
+                      __typename: 'ContentSeriesContentItem',
+                    },
+                    __typename: 'ContentItemsConnectionEdge',
+                  },
+                  {
+                    node: {
+                      id:
+                        'ContentSeriesContentItem:b74c2d295a0cf1340232ffa8be856c00',
+                      title: 'Gauntlet 2018',
+                      hyphenatedTitle: 'Gauntlet 2018',
+                      isLiked: false,
+                      likedCount: 0,
+                      summary: '',
+                      coverImage: {
+                        name: 'Square Image',
+                        sources: [
+                          {
+                            uri:
+                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D3e3e38d2-d804-45db-b45a-3b7a82c415d1',
+                            __typename: 'ImageMediaSource',
+                          },
+                        ],
+                        __typename: 'ImageMedia',
+                      },
+                      theme: null,
+                      parentChannel: {
+                        id: 'ContentChannel:a0f64573eabf00a607bec911794d50fb',
+                        name: 'Sermon Series',
+                        __typename: 'ContentChannel',
+                      },
+                      videos: [
+                        { sources: [], __typename: 'VideoMedia' },
+                        { sources: [], __typename: 'VideoMedia' },
+                      ],
+                      audios: [],
+                      __typename: 'ContentSeriesContentItem',
+                    },
+                    __typename: 'ContentItemsConnectionEdge',
+                  },
+                ],
+                __typename: 'ContentItemsConnection',
+              },
+              __typename: 'ContentChannel',
+            },
+            {
+              id: 'ContentChannel:7fba1b1ee253e0fd5f0795b4b8b1175e',
+              name: 'Devotion Series',
+              childContentItemsConnection: {
+                edges: [
+                  {
+                    node: {
+                      id:
+                        'ContentSeriesContentItem:b085ec27d53006e9e6b95f3ac57da581',
+                      title: 'Jeremiah: A 33-Day Devotional',
+                      hyphenatedTitle: 'Jeremiah: A 33-Day Devotional',
+                      isLiked: true,
+                      likedCount: 6,
+                      summary: 'Have you ever had to deliver difficult news?',
+                      coverImage: {
+                        name: 'Square Image',
+                        sources: [
+                          {
+                            uri:
+                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D31af1a61-360c-4b1e-8e62-45517c06a9a2',
+                            __typename: 'ImageMediaSource',
+                          },
+                        ],
+                        __typename: 'ImageMedia',
+                      },
+                      theme: null,
+                      parentChannel: {
+                        id: 'ContentChannel:7fba1b1ee253e0fd5f0795b4b8b1175e',
+                        name: 'Devotion Series',
+                        __typename: 'ContentChannel',
+                      },
+                      videos: [{ sources: [], __typename: 'VideoMedia' }],
+                      audios: [],
+                      __typename: 'ContentSeriesContentItem',
+                    },
+                    __typename: 'ContentItemsConnectionEdge',
+                  },
+                  {
+                    node: {
+                      id:
+                        'ContentSeriesContentItem:71bfdac0b98ea1b72a63ff4ea64e3c5a',
+                      title: 'How To Be A Better Leader: A 7-Day Devotional',
+                      hyphenatedTitle:
+                        'How To Be A Better Leader: A 7-Day Devotional',
+                      isLiked: false,
+                      likedCount: 0,
+                      summary: '',
+                      coverImage: {
+                        name: 'Square Image',
+                        sources: [
+                          {
+                            uri:
+                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3Dd3a96243-2558-4c04-bf41-3aadcf41771f',
+                            __typename: 'ImageMediaSource',
+                          },
+                        ],
+                        __typename: 'ImageMedia',
+                      },
+                      theme: null,
+                      parentChannel: {
+                        id: 'ContentChannel:7fba1b1ee253e0fd5f0795b4b8b1175e',
+                        name: 'Devotion Series',
+                        __typename: 'ContentChannel',
+                      },
+                      videos: [{ sources: [], __typename: 'VideoMedia' }],
+                      audios: [],
+                      __typename: 'ContentSeriesContentItem',
+                    },
+                    __typename: 'ContentItemsConnectionEdge',
+                  },
+                  {
+                    node: {
+                      id:
+                        'ContentSeriesContentItem:44fd3b82373ea8f197bd1e1e77c4bed0',
+                      title: '2 Thessalonians: A 5-Day Devotional',
+                      hyphenatedTitle: '2 Thessalonians: A 5-Day Devotional',
+                      isLiked: false,
+                      likedCount: 0,
+                      summary: '',
+                      coverImage: {
+                        name: 'Square Image',
+                        sources: [
+                          {
+                            uri:
+                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D70b0b57c-5a15-4f46-8e6a-c759231685bf',
+                            __typename: 'ImageMediaSource',
+                          },
+                        ],
+                        __typename: 'ImageMedia',
+                      },
+                      theme: null,
+                      parentChannel: {
+                        id: 'ContentChannel:7fba1b1ee253e0fd5f0795b4b8b1175e',
+                        name: 'Devotion Series',
+                        __typename: 'ContentChannel',
+                      },
+                      videos: [{ sources: [], __typename: 'VideoMedia' }],
+                      audios: [],
+                      __typename: 'ContentSeriesContentItem',
+                    },
+                    __typename: 'ContentItemsConnectionEdge',
+                  },
+                ],
+                __typename: 'ContentItemsConnection',
+              },
+              __typename: 'ContentChannel',
+            },
+            {
+              id: 'ContentChannel:be7381e9c2fea9f41504cd98d4b14321',
+              name: 'Stories',
+              childContentItemsConnection: {
+                edges: [
+                  {
+                    node: {
+                      id:
+                        'UniversalContentItem:cf8fa657f23af88a2d63f7e4a2237db8',
+                      title:
+                        'The surprising journey that changed me and my dad',
+                      hyphenatedTitle:
+                        'The surprising journey that changed me and my dad',
+                      isLiked: false,
+                      likedCount: 6,
+                      summary:
+                        'My father, Darwin, has always been involved in my life.',
+                      coverImage: {
+                        name: 'Square Image',
+                        sources: [
+                          {
+                            uri:
+                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D2a65e561-cd6e-4590-bb37-029a21c554e8',
+                            __typename: 'ImageMediaSource',
+                          },
+                        ],
+                        __typename: 'ImageMedia',
+                      },
+                      theme: null,
+                      parentChannel: {
+                        id: 'ContentChannel:be7381e9c2fea9f41504cd98d4b14321',
+                        name: 'Stories',
+                        __typename: 'ContentChannel',
+                      },
+                      videos: [],
+                      audios: [],
+                      __typename: 'UniversalContentItem',
+                    },
+                    __typename: 'ContentItemsConnectionEdge',
+                  },
+                  {
+                    node: {
+                      id:
+                        'UniversalContentItem:2e17f5a66407d114ab9f2392b03ebccd',
+                      title: 'When I lost hope, my church family had my back',
+                      hyphenatedTitle:
+                        'When I lost hope, my church family had my back',
+                      isLiked: true,
+                      likedCount: 5,
+                      summary:
+                        'Brian Kalwat was just trying to knock something off his honey-do list.',
+                      coverImage: {
+                        name: 'Square Image',
+                        sources: [
+                          {
+                            uri:
+                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3D0305285f-1155-4405-ba38-a61b9c8558be',
+                            __typename: 'ImageMediaSource',
+                          },
+                        ],
+                        __typename: 'ImageMedia',
+                      },
+                      theme: null,
+                      parentChannel: {
+                        id: 'ContentChannel:be7381e9c2fea9f41504cd98d4b14321',
+                        name: 'Stories',
+                        __typename: 'ContentChannel',
+                      },
+                      videos: [],
+                      audios: [],
+                      __typename: 'UniversalContentItem',
+                    },
+                    __typename: 'ContentItemsConnectionEdge',
+                  },
+                  {
+                    node: {
+                      id:
+                        'UniversalContentItem:ae8ec75906ba7437c49ad2534b5024db',
+                      title: 'A Place to Worship Free of Fear',
+                      hyphenatedTitle: 'A Place to Worship Free of Fear',
+                      isLiked: false,
+                      likedCount: 1,
+                      summary:
+                        'Cornelius &amp; Stephanie Mack, proud parents of a Special Friends adult, share about their experience\nOur son Cameron began attending Willow Creek Special Friends in 2015.',
+                      coverImage: {
+                        name: 'Portrait Image',
+                        sources: [
+                          {
+                            uri:
+                              'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3Da65bc45d-f961-4b7e-a899-63eb1f9b8da9',
+                            __typename: 'ImageMediaSource',
+                          },
+                        ],
+                        __typename: 'ImageMedia',
+                      },
+                      theme: null,
+                      parentChannel: {
+                        id: 'ContentChannel:be7381e9c2fea9f41504cd98d4b14321',
+                        name: 'Stories',
+                        __typename: 'ContentChannel',
+                      },
+                      videos: [],
+                      audios: [],
+                      __typename: 'UniversalContentItem',
+                    },
+                    __typename: 'ContentItemsConnectionEdge',
+                  },
+                ],
+                __typename: 'ContentItemsConnection',
+              },
+              __typename: 'ContentChannel',
+            },
+          ],
+        },
+      },
+    };
+    const mockChannelCardData = flatMap(
+      mockFeedData.result.data.contentChannels,
+      (contentChannel) =>
+        contentChannel.childContentItemsConnection.edges.map((edge) => ({
+          request: {
+            query: GET_CONTENT_CARD,
+            variables: { contentId: edge.node.id },
+          },
+          result: {
+            data: {
+              node: edge.node,
+            },
+          },
+        }))
+    );
+
+    const tree = await renderWithApolloData(
+      <Providers mocks={[mockFeedData, ...mockChannelCardData]}>
+        <Discover />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/tabs/home/Home.js b/apolloschurchapp/src/tabs/home/Home.js
index d9fa499..2264f1b 100644
--- a/apolloschurchapp/src/tabs/home/Home.js
+++ b/apolloschurchapp/src/tabs/home/Home.js
@@ -31,7 +31,7 @@ function handleOnPress({ action, ...props }) {
 // getHomeFeed uses the HOME_FEATURES in the config.yml
 // You can also hardcode an ID if you are confident it will never change
 // Or use some other strategy to get a FeatureFeed.id
-export const GET_HOME_FEED = gql`
+const GET_HOME_FEED = gql`
   query getHomeFeatureFeed {
     homeFeedFeatures {
       id
diff --git a/apolloschurchapp/src/tabs/home/getCampaignContentItem.js b/apolloschurchapp/src/tabs/home/getCampaignContentItem.js
new file mode 100644
index 0000000..ab5ea09
--- /dev/null
+++ b/apolloschurchapp/src/tabs/home/getCampaignContentItem.js
@@ -0,0 +1,22 @@
+import gql from 'graphql-tag';
+
+import ApollosConfig from '@apollosproject/config';
+
+export default gql`
+  query campaigns {
+    campaigns {
+      edges {
+        node {
+          childContentItemsConnection {
+            edges {
+              node {
+                ...contentCardFragment
+              }
+            }
+          }
+        }
+      }
+    }
+  }
+  ${ApollosConfig.FRAGMENTS.CONTENT_CARD_FRAGMENT}
+`;
diff --git a/apolloschurchapp/src/tabs/home/getUserFeed.js b/apolloschurchapp/src/tabs/home/getUserFeed.js
new file mode 100644
index 0000000..b19d647
--- /dev/null
+++ b/apolloschurchapp/src/tabs/home/getUserFeed.js
@@ -0,0 +1,18 @@
+import gql from 'graphql-tag';
+import ApollosConfig from '@apollosproject/config';
+
+export default gql`
+  query getUserFeed($first: Int, $after: String) {
+    userFeed(first: $first, after: $after) {
+      pageInfo {
+        endCursor
+      }
+      edges {
+        node {
+          ...contentCardFragment
+        }
+      }
+    }
+  }
+  ${ApollosConfig.FRAGMENTS.CONTENT_CARD_FRAGMENT}
+`;
diff --git a/apolloschurchapp/src/tabs/home/home.tests.js b/apolloschurchapp/src/tabs/home/home.tests.js
new file mode 100644
index 0000000..213e947
--- /dev/null
+++ b/apolloschurchapp/src/tabs/home/home.tests.js
@@ -0,0 +1,79 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from '../../Providers';
+
+import Home from './Home';
+import GET_USER_FEED from './getUserFeed';
+
+describe('User Home Feed Query', () => {
+  it('should return correct query results', () => {
+    const mock = {
+      request: {
+        query: GET_USER_FEED,
+      },
+      result: {
+        data: {
+          userFeed: {
+            edges: [
+              {
+                node: {
+                  __typename: 'UniversalContentItem',
+                  id: 'UniversalContentItem:678b4a38968fc6004dd8b23e586c923e',
+                  coverImage: {
+                    name: 'Square Image',
+                    sources: [
+                      {
+                        uri:
+                          'https://apollosrock.newspring.cc/GetImage.ashx?guid=ed857076-2623-4fdc-8476-50b3a60e0b68',
+                      },
+                    ],
+                  },
+                  parentChannel: {
+                    id: 'ContentChannel:7fba1b1ee253e0fd5f0795b4b8b1175e',
+                    name: 'Devotion Series',
+                    iconName: 'text',
+                  },
+                  title: 'Psalms: A 28-Day Devotional',
+                },
+              },
+              {
+                node: {
+                  __typename: 'UniversalContentItem',
+                  id: 'UniversalContentItem:0f361c619b7e5dd511da181069498250',
+                  coverImage: {
+                    name: 'Square Image',
+                    sources: [
+                      {
+                        uri:
+                          'https://apollosrock.newspring.cc/GetImage.ashx?guid=aa68b674-9cf4-4f8a-8702-9564a4a9fa7b',
+                      },
+                    ],
+                  },
+                  parentChannel: {
+                    id: 'ContentChannel:7fba1b1ee253e0fd5f0795b4b8b1175e',
+                    name: 'Devotion Series',
+                    iconName: 'text',
+                  },
+                  title: '2 Samuel: A 5-Week Devotional',
+                },
+              },
+            ],
+          },
+        },
+      },
+    };
+
+    const navigation = {
+      getParam: jest.fn(),
+      setParams: jest.fn(),
+      navigate: jest.fn(),
+    };
+    const tree = renderer.create(
+      <Providers mocks={[mock]} addTypename={false}>
+        <Home navigation={navigation} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
