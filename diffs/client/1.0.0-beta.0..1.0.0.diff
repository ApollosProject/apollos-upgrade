diff --git a/apolloschurchapp/android/app/build.gradle b/apolloschurchapp/android/app/build.gradle
index d22324f..245005a 100644
--- a/apolloschurchapp/android/app/build.gradle
+++ b/apolloschurchapp/android/app/build.gradle
@@ -121,8 +121,8 @@ android {
         applicationId "com.apolloschurch.app"
         minSdkVersion rootProject.ext.minSdkVersion
         targetSdkVersion rootProject.ext.targetSdkVersion
-        versionCode 13
-        versionName "1.0.0-beta.0"
+        versionCode 14
+        versionName "1.0.0"
         ndk {
             abiFilters "armeabi-v7a", "x86"
         }
@@ -163,8 +163,8 @@ dependencies {
       exclude group: 'com.google.android.gms', module: 'play-services-base'
       exclude group: 'com.google.android.gms', module: 'play-services-maps'
     }
-    implementation 'com.google.android.gms:play-services-base:10.0.1'
-    implementation 'com.google.android.gms:play-services-maps:10.0.1'
+    implementation 'com.google.android.gms:play-services-base:16.1.0'
+    implementation 'com.google.android.gms:play-services-maps:16.1.0'
     implementation project(':rn-fetch-blob')
     implementation project(':react-native-webview')
     implementation project(':react-native-video')
diff --git a/apolloschurchapp/android/app/src/main/AndroidManifest.xml b/apolloschurchapp/android/app/src/main/AndroidManifest.xml
index 5e6aee9..fd72c6c 100644
--- a/apolloschurchapp/android/app/src/main/AndroidManifest.xml
+++ b/apolloschurchapp/android/app/src/main/AndroidManifest.xml
@@ -5,7 +5,7 @@
     <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
     <uses-permission android:name="android.permission.CAMERA" />
     <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION"/>
-
+    <uses-permission android:name="android.permission.FOREGROUND_SERVICE" />
 
     <application
       android:name=".MainApplication"
@@ -30,7 +30,7 @@
           <action android:name="android.intent.action.VIEW" />
           <category android:name="android.intent.category.DEFAULT" />
           <category android:name="android.intent.category.BROWSABLE" />
-          <data android:scheme="peopleapp" android:host="people" /> // A
+          <data android:scheme="peopleapp" android:host="people" />
         </intent-filter>
       </activity>
       <activity
diff --git a/apolloschurchapp/apollos.json b/apolloschurchapp/apollos.json
index ebc7b5b..eb28af7 100644
--- a/apolloschurchapp/apollos.json
+++ b/apolloschurchapp/apollos.json
@@ -1,4 +1,4 @@
 {
-    "version": "1.0.0-beta.0",
+    "version": "1.0.0",
     "environment": "client"
 }
\ No newline at end of file
diff --git a/apolloschurchapp/ios/apolloschurchapp-tvOS/Info.plist b/apolloschurchapp/ios/apolloschurchapp-tvOS/Info.plist
index 87f387a..997f96e 100644
--- a/apolloschurchapp/ios/apolloschurchapp-tvOS/Info.plist
+++ b/apolloschurchapp/ios/apolloschurchapp-tvOS/Info.plist
@@ -15,11 +15,11 @@
 	<key>CFBundlePackageType</key>
 	<string>APPL</string>
 	<key>CFBundleShortVersionString</key>
-	<string>1.0.0-beta.0</string>
+	<string>1.0.0</string>
 	<key>CFBundleSignature</key>
 	<string>????</string>
 	<key>CFBundleVersion</key>
-	<string>13</string>
+	<string>14</string>
 	<key>LSRequiresIPhoneOS</key>
 	<true />
 	<key>UILaunchStoryboardName</key>
diff --git a/apolloschurchapp/ios/apolloschurchapp-tvOSTests/Info.plist b/apolloschurchapp/ios/apolloschurchapp-tvOSTests/Info.plist
index 55a93e3..90d34c1 100644
--- a/apolloschurchapp/ios/apolloschurchapp-tvOSTests/Info.plist
+++ b/apolloschurchapp/ios/apolloschurchapp-tvOSTests/Info.plist
@@ -15,10 +15,10 @@
 	<key>CFBundlePackageType</key>
 	<string>BNDL</string>
 	<key>CFBundleShortVersionString</key>
-	<string>1.0.0-beta.0</string>
+	<string>1.0.0</string>
 	<key>CFBundleSignature</key>
 	<string>????</string>
 	<key>CFBundleVersion</key>
-	<string>13</string>
+	<string>14</string>
 </dict>
 </plist>
diff --git a/apolloschurchapp/ios/apolloschurchapp.xcodeproj/project.pbxproj b/apolloschurchapp/ios/apolloschurchapp.xcodeproj/project.pbxproj
index 54636cf..c1b6636 100644
--- a/apolloschurchapp/ios/apolloschurchapp.xcodeproj/project.pbxproj
+++ b/apolloschurchapp/ios/apolloschurchapp.xcodeproj/project.pbxproj
@@ -1945,7 +1945,7 @@
 			isa = XCBuildConfiguration;
 			buildSettings = {
 				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
-				CURRENT_PROJECT_VERSION = 9;
+				CURRENT_PROJECT_VERSION = 10;
 				DEAD_CODE_STRIPPING = NO;
 				DEVELOPMENT_TEAM = 7TM8C6252Z;
 				HEADER_SEARCH_PATHS = (
@@ -1985,7 +1985,7 @@
 			isa = XCBuildConfiguration;
 			buildSettings = {
 				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
-				CURRENT_PROJECT_VERSION = 9;
+				CURRENT_PROJECT_VERSION = 10;
 				HEADER_SEARCH_PATHS = (
 					"$(inherited)",
 					"$(SRCROOT)/../node_modules/react-native-airplay-btn/ios",
diff --git a/apolloschurchapp/ios/apolloschurchapp/Info.plist b/apolloschurchapp/ios/apolloschurchapp/Info.plist
index fa8ebf0..aa3344d 100644
--- a/apolloschurchapp/ios/apolloschurchapp/Info.plist
+++ b/apolloschurchapp/ios/apolloschurchapp/Info.plist
@@ -17,7 +17,7 @@
 	<key>CFBundlePackageType</key>
 	<string>APPL</string>
 	<key>CFBundleShortVersionString</key>
-	<string>1.0.0-beta.0</string>
+	<string>1.0.0</string>
 	<key>CFBundleSignature</key>
 	<string>????</string>
 	<key>CFBundleURLTypes</key>
@@ -30,7 +30,7 @@
 		</dict>
 	</array>
 	<key>CFBundleVersion</key>
-	<string>14</string>
+	<string>15</string>
 	<key>ITSAppUsesNonExemptEncryption</key>
 	<false />
 	<key>LSRequiresIPhoneOS</key>
diff --git a/apolloschurchapp/ios/apolloschurchappTests/Info.plist b/apolloschurchapp/ios/apolloschurchappTests/Info.plist
index b8427df..689ee53 100644
--- a/apolloschurchapp/ios/apolloschurchappTests/Info.plist
+++ b/apolloschurchapp/ios/apolloschurchappTests/Info.plist
@@ -15,10 +15,10 @@
 	<key>CFBundlePackageType</key>
 	<string>BNDL</string>
 	<key>CFBundleShortVersionString</key>
-	<string>1.0.0-beta.0</string>
+	<string>1.0.0</string>
 	<key>CFBundleSignature</key>
 	<string>????</string>
 	<key>CFBundleVersion</key>
-	<string>13</string>
+	<string>14</string>
 </dict>
 </plist>
diff --git a/apolloschurchapp/package.json b/apolloschurchapp/package.json
index 7a8bc08..b385877 100644
--- a/apolloschurchapp/package.json
+++ b/apolloschurchapp/package.json
@@ -1,6 +1,6 @@
 {
   "name": "apolloschurchapp",
-  "version": "1.0.0-beta.0",
+  "version": "1.0.0",
   "private": true,
   "devDependencies": {
     "@apollosproject/ui-storybook": "^0.8.6",
@@ -59,13 +59,13 @@
     ]
   },
   "dependencies": {
-    "@apollosproject/ui-analytics": "^1.0.0-beta.0",
-    "@apollosproject/ui-auth": "^1.0.0-beta.0",
-    "@apollosproject/ui-htmlview": "^1.0.0-beta.0",
-    "@apollosproject/ui-kit": "^1.0.0-beta.0",
-    "@apollosproject/ui-media-player": "^1.0.0-beta.0",
-    "@apollosproject/ui-notifications": "^1.0.0-beta.0",
-    "@apollosproject/ui-passes": "^1.0.0-beta.0",
+    "@apollosproject/ui-analytics": "^1.0.0",
+    "@apollosproject/ui-auth": "^1.0.0",
+    "@apollosproject/ui-htmlview": "^1.0.0",
+    "@apollosproject/ui-kit": "^1.0.0",
+    "@apollosproject/ui-media-player": "^1.0.0",
+    "@apollosproject/ui-notifications": "^1.0.0",
+    "@apollosproject/ui-passes": "^1.0.0",
     "@apollosproject/ui-scripture": "^1.0.0-beta.0",
     "@apollosproject/ui-storybook": "^1.0.0-beta.0",
     "apollo-cache-inmemory": "1.5.1",
@@ -91,12 +91,12 @@
     "react-native": "0.59.8",
     "react-native-airplay-btn": "^1.0.6",
     "react-native-config": "^0.11.7",
-    "react-native-device-info": "0.22.5",
+    "react-native-device-info": "^2.1.2",
     "react-native-image-picker": "0.28.0",
     "react-native-linear-gradient": "^2.5.4",
     "react-native-maps": "^0.24.2",
     "react-native-music-control": "^0.10.2",
-    "react-native-onesignal": "3.2.7",
+    "react-native-onesignal": "3.2.14",
     "react-native-passkit-wallet": "^0.1.4",
     "react-native-safari-view": "2.1.0",
     "react-native-safe-area-view": "0.13.1",
diff --git a/apolloschurchapp/src/client/fragmentTypes.json b/apolloschurchapp/src/client/fragmentTypes.json
index 14cf82b..8003403 100644
--- a/apolloschurchapp/src/client/fragmentTypes.json
+++ b/apolloschurchapp/src/client/fragmentTypes.json
@@ -1 +1 @@
-{"__schema":{"types":[{"kind":"INTERFACE","name":"Node","possibleTypes":[{"name":"ContentChannel"},{"name":"Person"},{"name":"Campus"},{"name":"Pass"},{"name":"UniversalContentItem"},{"name":"DevotionalContentItem"},{"name":"MediaContentItem"},{"name":"ContentSeriesContentItem"}]},{"kind":"INTERFACE","name":"ContentItem","possibleTypes":[{"name":"UniversalContentItem"},{"name":"DevotionalContentItem"},{"name":"MediaContentItem"},{"name":"ContentSeriesContentItem"}]},{"kind":"INTERFACE","name":"Media","possibleTypes":[{"name":"ImageMedia"},{"name":"VideoMedia"},{"name":"AudioMedia"}]},{"kind":"INTERFACE","name":"MediaSource","possibleTypes":[{"name":"ImageMediaSource"},{"name":"VideoMediaSource"},{"name":"AudioMediaSource"}]},{"kind":"INTERFACE","name":"Sharable","possibleTypes":[{"name":"SharableContentItem"}]}]}}
\ No newline at end of file
+{"__schema":{"types":[{"kind":"INTERFACE","name":"Node","possibleTypes":[{"name":"ContentChannel"},{"name":"Person"},{"name":"Campus"},{"name":"Pass"},{"name":"UniversalContentItem"},{"name":"DevotionalContentItem"},{"name":"MediaContentItem"},{"name":"ContentSeriesContentItem"},{"name":"WeekendContentItem"},{"name":"ActionListFeature"}]},{"kind":"INTERFACE","name":"ContentItem","possibleTypes":[{"name":"UniversalContentItem"},{"name":"DevotionalContentItem"},{"name":"MediaContentItem"},{"name":"ContentSeriesContentItem"},{"name":"WeekendContentItem"}]},{"kind":"INTERFACE","name":"Media","possibleTypes":[{"name":"ImageMedia"},{"name":"VideoMedia"},{"name":"AudioMedia"}]},{"kind":"INTERFACE","name":"MediaSource","possibleTypes":[{"name":"ImageMediaSource"},{"name":"VideoMediaSource"},{"name":"AudioMediaSource"}]},{"kind":"INTERFACE","name":"Sharable","possibleTypes":[{"name":"SharableContentItem"}]},{"kind":"INTERFACE","name":"Feature","possibleTypes":[{"name":"ActionListFeature"}]}]}}
\ No newline at end of file
diff --git a/apolloschurchapp/src/content-feed/content-feed.tests.js b/apolloschurchapp/src/content-feed/content-feed.tests.js
index 544d818..2f7fd1b 100644
--- a/apolloschurchapp/src/content-feed/content-feed.tests.js
+++ b/apolloschurchapp/src/content-feed/content-feed.tests.js
@@ -3,7 +3,7 @@ import renderer from 'react-test-renderer';
 
 import Providers from 'apolloschurchapp/src/Providers';
 
-import getContentFeed from './getContentFeed';
+import GET_CONTENT_FEED from './getContentFeed';
 
 import ContentFeed from './index';
 
@@ -11,7 +11,7 @@ describe('content feed query component', () => {
   it('renders a feedview after successful query', () => {
     const mock = {
       request: {
-        query: getContentFeed,
+        query: GET_CONTENT_FEED,
       },
       result: {
         data: {
diff --git a/apolloschurchapp/src/content-feed/getContentFeed.js b/apolloschurchapp/src/content-feed/getContentFeed.js
index dbf38d5..40758cb 100644
--- a/apolloschurchapp/src/content-feed/getContentFeed.js
+++ b/apolloschurchapp/src/content-feed/getContentFeed.js
@@ -1,7 +1,7 @@
 import gql from 'graphql-tag';
 
-import { largeCardFragment } from 'apolloschurchapp/src/ui/ContentCardConnected';
-import { contentItemFragment } from '../content-single/getContentItem';
+import { LARGE_CARD_FRAGMENT } from 'apolloschurchapp/src/ui/ContentCardConnected';
+import { CONTENT_ITEM_FRAGMENT } from '../content-single/getContentItem';
 
 export default gql`
   query getContentFeed($itemId: ID!, $after: String, $first: Int) {
@@ -21,6 +21,6 @@ export default gql`
       }
     }
   }
-  ${contentItemFragment}
-  ${largeCardFragment}
+  ${CONTENT_ITEM_FRAGMENT}
+  ${LARGE_CARD_FRAGMENT}
 `;
diff --git a/apolloschurchapp/src/content-feed/index.js b/apolloschurchapp/src/content-feed/index.js
index 831c5f0..8443086 100644
--- a/apolloschurchapp/src/content-feed/index.js
+++ b/apolloschurchapp/src/content-feed/index.js
@@ -8,7 +8,7 @@ import { BackgroundView, FeedView } from '@apollosproject/ui-kit';
 import ContentCardConnected from 'apolloschurchapp/src/ui/ContentCardConnected';
 import fetchMoreResolver from 'apolloschurchapp/src/utils/fetchMoreResolver';
 
-import getContentFeed from './getContentFeed';
+import GET_CONTENT_FEED from './getContentFeed';
 /**
  * This is where the component description lives
  * A FeedView wrapped in a query to pull content data.
@@ -47,7 +47,7 @@ class ContentFeed extends PureComponent {
     return (
       <BackgroundView>
         <Query
-          query={getContentFeed}
+          query={GET_CONTENT_FEED}
           variables={{ itemId }}
           fetchPolicy="cache-and-network"
         >
diff --git a/apolloschurchapp/src/content-single/ActionContainer/index.js b/apolloschurchapp/src/content-single/ActionContainer/index.js
index 471fe32..b10302d 100644
--- a/apolloschurchapp/src/content-single/ActionContainer/index.js
+++ b/apolloschurchapp/src/content-single/ActionContainer/index.js
@@ -9,7 +9,7 @@ import { SideBySideView, styled } from '@apollosproject/ui-kit';
 import LikeButton from 'apolloschurchapp/src/ui/LikeButton';
 import { MediaPlayerSpacer } from '@apollosproject/ui-media-player';
 
-import getShareContent from './getShareContent';
+import GET_SHARE_CONTENT from './getShareContent';
 
 const PositioningView = styled(({ theme }) => ({
   justifyContent: 'space-around',
@@ -27,7 +27,7 @@ const ActionContainer = ({ itemId }) => (
     <MediaPlayerSpacer>
       <PositioningView>
         <LikeButton itemId={itemId} />
-        <Query query={getShareContent} variables={{ itemId }}>
+        <Query query={GET_SHARE_CONTENT} variables={{ itemId }}>
           {({ data: { node } = {}, error, loading }) => {
             const sharing = get(node, 'sharing');
             return loading || error || !sharing ? null : (
diff --git a/apolloschurchapp/src/content-single/ContentSingle.js b/apolloschurchapp/src/content-single/ContentSingle.js
index 70f49fd..8bed0fc 100644
--- a/apolloschurchapp/src/content-single/ContentSingle.js
+++ b/apolloschurchapp/src/content-single/ContentSingle.js
@@ -8,7 +8,7 @@ import { ErrorCard, ThemeMixin } from '@apollosproject/ui-kit';
 import { TrackEventWhenLoaded } from '@apollosproject/ui-analytics';
 
 import ActionContainer from './ActionContainer';
-import getContentItem from './getContentItem';
+import GET_CONTENT_ITEM from './getContentItem';
 
 import DevotionalContentItem from './DevotionalContentItem';
 import UniversalContentItem from './UniversalContentItem';
@@ -95,7 +95,7 @@ class ContentSingle extends PureComponent {
 
   render() {
     return (
-      <Query query={getContentItem} variables={this.queryVariables}>
+      <Query query={GET_CONTENT_ITEM} variables={this.queryVariables}>
         {this.renderWithData}
       </Query>
     );
diff --git a/apolloschurchapp/src/content-single/DevotionalContentItem/Devotional.tests.js b/apolloschurchapp/src/content-single/DevotionalContentItem/Devotional.tests.js
index efaffbd..1021514 100644
--- a/apolloschurchapp/src/content-single/DevotionalContentItem/Devotional.tests.js
+++ b/apolloschurchapp/src/content-single/DevotionalContentItem/Devotional.tests.js
@@ -2,8 +2,8 @@ import React from 'react';
 import renderer from 'react-test-renderer';
 import Providers from 'apolloschurchapp/src/Providers';
 import { renderWithApolloData } from 'apolloschurchapp/src/utils/testUtils';
-import getContentItemContent from '../HTMLContent/getContentItemContent';
-import getScripture from './getScripture';
+import GET_CONTENT_ITEM_CONTENT from '../HTMLContent/getContentItemContent';
+import GET_SCRIPTURE from './getScripture';
 import Devotional from '.';
 
 const content = {
@@ -32,7 +32,7 @@ const scriptures = [
 
 const scriptureMock = {
   request: {
-    query: getScripture,
+    query: GET_SCRIPTURE,
     variables: { itemId: '1' },
   },
   result: {
@@ -44,7 +44,7 @@ const scriptureMock = {
 
 const contentItemHTMLMock = {
   request: {
-    query: getContentItemContent,
+    query: GET_CONTENT_ITEM_CONTENT,
     variables: { contentId: '1' },
   },
   result: {
diff --git a/apolloschurchapp/src/content-single/DevotionalContentItem/index.js b/apolloschurchapp/src/content-single/DevotionalContentItem/index.js
index 088bbdc..07b4938 100644
--- a/apolloschurchapp/src/content-single/DevotionalContentItem/index.js
+++ b/apolloschurchapp/src/content-single/DevotionalContentItem/index.js
@@ -13,7 +13,7 @@ import {
 import ContentTab from './ContentTab';
 import ScriptureTab from './ScriptureTab';
 
-import getScripture from './getScripture';
+import GET_SCRIPTURE from './getScripture';
 
 const FlexedSafeAreaView = styled({ flex: 1 })(SafeAreaView);
 
@@ -110,7 +110,7 @@ class DevotionalContentItem extends PureComponent {
     return (
       <BackgroundView>
         <FlexedSafeAreaView forceInset={{ top: 'always' }}>
-          <Query query={getScripture} variables={{ itemId: this.props.id }}>
+          <Query query={GET_SCRIPTURE} variables={{ itemId: this.props.id }}>
             {this.renderTabs}
           </Query>
         </FlexedSafeAreaView>
diff --git a/apolloschurchapp/src/content-single/HTMLContent/index.js b/apolloschurchapp/src/content-single/HTMLContent/index.js
index 39c62bc..755af41 100644
--- a/apolloschurchapp/src/content-single/HTMLContent/index.js
+++ b/apolloschurchapp/src/content-single/HTMLContent/index.js
@@ -5,13 +5,13 @@ import { Query } from 'react-apollo';
 import HTMLView from '@apollosproject/ui-htmlview';
 import { ErrorCard } from '@apollosproject/ui-kit';
 
-import getContentItemContent from './getContentItemContent';
+import GET_CONTENT_ITEM_CONTENT from './getContentItemContent';
 
 const HTMLContent = ({ contentId }) => {
   if (!contentId) return <HTMLView isLoading />;
 
   return (
-    <Query query={getContentItemContent} variables={{ contentId }}>
+    <Query query={GET_CONTENT_ITEM_CONTENT} variables={{ contentId }}>
       {({ data: { node: { htmlContent } = {} } = {}, loading, error }) => {
         if (error) return <ErrorCard error={error} />;
         return (
diff --git a/apolloschurchapp/src/content-single/HorizontalContentFeed/index.js b/apolloschurchapp/src/content-single/HorizontalContentFeed/index.js
index c0a236f..d9b6aba 100644
--- a/apolloschurchapp/src/content-single/HorizontalContentFeed/index.js
+++ b/apolloschurchapp/src/content-single/HorizontalContentFeed/index.js
@@ -10,7 +10,7 @@ import {
   TouchableScale,
 } from '@apollosproject/ui-kit';
 
-import getHorizontalContent from './getHorizontalContent';
+import GET_HORIZONTAL_CONTENT from './getHorizontalContent';
 
 const loadingStateObject = {
   node: {
@@ -81,7 +81,7 @@ class HorizontalContentFeed extends Component {
 
     return (
       <Query
-        query={getHorizontalContent}
+        query={GET_HORIZONTAL_CONTENT}
         variables={{ itemId: this.props.contentId }}
       >
         {this.renderFeed}
diff --git a/apolloschurchapp/src/content-single/MediaControls/index.js b/apolloschurchapp/src/content-single/MediaControls/index.js
index 96ae490..fdbbe12 100644
--- a/apolloschurchapp/src/content-single/MediaControls/index.js
+++ b/apolloschurchapp/src/content-single/MediaControls/index.js
@@ -4,9 +4,9 @@ import { Query, Mutation } from 'react-apollo';
 import { View } from 'react-native';
 import { get } from 'lodash';
 
-import { playVideoMutation } from '@apollosproject/ui-media-player';
+import { PLAY_VIDEO } from '@apollosproject/ui-media-player';
 import { Icon, styled, Button } from '@apollosproject/ui-kit';
-import getContentMedia from './getContentMedia';
+import GET_CONTENT_MEDIA from './getContentMedia';
 
 const buttonSizeDifferential = 4;
 
@@ -58,7 +58,7 @@ class MediaControls extends PureComponent {
     const coverImageSources = (coverImage && coverImage.sources) || [];
 
     return (
-      <Mutation mutation={playVideoMutation}>
+      <Mutation mutation={PLAY_VIDEO}>
         {(play) => (
           <Container>
             {videoSource ? (
@@ -92,7 +92,7 @@ class MediaControls extends PureComponent {
     if (!this.props.contentId) return null;
     return (
       <Query
-        query={getContentMedia}
+        query={GET_CONTENT_MEDIA}
         variables={{ contentId: this.props.contentId }}
       >
         {this.renderControls}
diff --git a/apolloschurchapp/src/content-single/getContentItem.js b/apolloschurchapp/src/content-single/getContentItem.js
index b4ebc19..55676c9 100644
--- a/apolloschurchapp/src/content-single/getContentItem.js
+++ b/apolloschurchapp/src/content-single/getContentItem.js
@@ -1,6 +1,6 @@
 import gql from 'graphql-tag';
 
-export const contentItemFragment = gql`
+export const CONTENT_ITEM_FRAGMENT = gql`
   fragment contentItemFragment on ContentItem {
     id
     title
@@ -48,5 +48,5 @@ export default gql`
       }
     }
   }
-  ${contentItemFragment}
+  ${CONTENT_ITEM_FRAGMENT}
 `;
diff --git a/apolloschurchapp/src/live/LiveButton.js b/apolloschurchapp/src/live/LiveButton.js
index c5760e3..6e1fa30 100644
--- a/apolloschurchapp/src/live/LiveButton.js
+++ b/apolloschurchapp/src/live/LiveButton.js
@@ -12,7 +12,7 @@ import {
 } from '@apollosproject/ui-kit';
 import { WebBrowserConsumer } from 'apolloschurchapp/src/ui/WebBrowser';
 
-import getLiveStream from './getLiveStream';
+import GET_LIVE_STREAM from './getLiveStream';
 
 const LiveCard = styled(({ theme }) => ({
   backgroundColor: theme.colors.lightSecondary,
@@ -20,7 +20,7 @@ const LiveCard = styled(({ theme }) => ({
 
 const LiveNowButton = () => (
   <Query
-    query={getLiveStream}
+    query={GET_LIVE_STREAM}
     fetchPolicy="cache-and-network"
     pollInterval={60000}
   >
diff --git a/apolloschurchapp/src/scripture/index.js b/apolloschurchapp/src/scripture/index.js
index 4492e5c..5b23d5d 100644
--- a/apolloschurchapp/src/scripture/index.js
+++ b/apolloschurchapp/src/scripture/index.js
@@ -3,7 +3,7 @@ import { Query } from 'react-apollo';
 import { get } from 'lodash';
 import PropTypes from 'prop-types';
 import { ScriptureItem } from '@apollosproject/ui-scripture';
-import getScripture from './getScripture';
+import GET_SCRIPTURE from './getScripture';
 
 /**
  * This is the data-bound "connected" scripture component.
@@ -15,7 +15,7 @@ const ScriptureConnected = ({
   references,
 }) =>
   references.map((query) => (
-    <Query query={getScripture} variables={{ query }} key={query}>
+    <Query query={GET_SCRIPTURE} variables={{ query }} key={query}>
       {({ loading, data }) => (
         <ScriptureComponent
           reference={get(data, 'scripture.reference', '')}
diff --git a/apolloschurchapp/src/store/index.js b/apolloschurchapp/src/store/index.js
index 336839b..66fdccb 100644
--- a/apolloschurchapp/src/store/index.js
+++ b/apolloschurchapp/src/store/index.js
@@ -27,7 +27,7 @@ export const defaults = {
   cacheLoaded: false,
 };
 
-const getIsLoggedIn = gql`
+const GET_LOGGED_IN = gql`
   query {
     isLoggedIn @client
   }
@@ -43,7 +43,7 @@ export const resolvers = {
         },
       });
       const { data: { isLoggedIn } = {} } = await client.query({
-        query: getIsLoggedIn,
+        query: GET_LOGGED_IN,
       });
 
       const { pushId } = cache.readQuery({
diff --git a/apolloschurchapp/src/tabs/connect/Connect.js b/apolloschurchapp/src/tabs/connect/Connect.js
index 79bb6df..f3ba0e1 100644
--- a/apolloschurchapp/src/tabs/connect/Connect.js
+++ b/apolloschurchapp/src/tabs/connect/Connect.js
@@ -4,7 +4,7 @@ import { Query } from 'react-apollo';
 import { get } from 'lodash';
 import PropTypes from 'prop-types';
 
-import { LoginButton } from '@apollosproject/ui-auth';
+import { LoginButton, GET_LOGIN_STATE } from '@apollosproject/ui-auth';
 import {
   H1,
   BodyText,
@@ -19,7 +19,6 @@ import ActionTable from './ActionTable';
 import Toolbar from './Toolbar';
 import { UserAvatarHeaderConnected } from './UserAvatarHeader';
 import { RecentlyLikedTileFeedConnected } from './RecentlyLikedTileFeed';
-import getLoginState from './getLoginState';
 
 const Title = styled(({ theme }) => ({
   color: theme.colors.primary,
@@ -63,7 +62,7 @@ class Connect extends PureComponent {
   render() {
     return (
       <BackgroundView>
-        <Query query={getLoginState}>
+        <Query query={GET_LOGIN_STATE}>
           {({ data }) => {
             if (get(data, 'isLoggedIn', false))
               return (
diff --git a/apolloschurchapp/src/tabs/connect/LikedContentList/LikedContentList.tests.js b/apolloschurchapp/src/tabs/connect/LikedContentList/LikedContentList.tests.js
index 78a32c7..673817c 100644
--- a/apolloschurchapp/src/tabs/connect/LikedContentList/LikedContentList.tests.js
+++ b/apolloschurchapp/src/tabs/connect/LikedContentList/LikedContentList.tests.js
@@ -4,14 +4,14 @@ import wait from 'waait';
 
 import Providers from 'apolloschurchapp/src/Providers';
 
-import getLikedContent from '../getLikedContent';
+import GET_LIKED_CONTENT from '../getLikedContent';
 import LikedContentList from '.';
 
 describe('LikedContentList component', () => {
   it('renders LikedContentList', async () => {
     const mock = {
       request: {
-        query: getLikedContent,
+        query: GET_LIKED_CONTENT,
       },
       result: {
         data: {
diff --git a/apolloschurchapp/src/tabs/connect/LikedContentList/index.js b/apolloschurchapp/src/tabs/connect/LikedContentList/index.js
index 7ef1232..38dedb3 100644
--- a/apolloschurchapp/src/tabs/connect/LikedContentList/index.js
+++ b/apolloschurchapp/src/tabs/connect/LikedContentList/index.js
@@ -7,7 +7,7 @@ import { BackgroundView, FeedView } from '@apollosproject/ui-kit';
 import fetchMoreResolver from 'apolloschurchapp/src/utils/fetchMoreResolver';
 import ContentCardConnected from '../../../ui/ContentCardConnected';
 
-import getLikedContent from '../getLikedContent';
+import GET_LIKED_CONTENT from '../getLikedContent';
 /** A FeedView wrapped in a query to pull content data. */
 class LikedContentList extends PureComponent {
   /** Function for React Navigation to set information in the header. */
@@ -38,7 +38,7 @@ class LikedContentList extends PureComponent {
     return (
       <BackgroundView>
         <Query
-          query={getLikedContent}
+          query={GET_LIKED_CONTENT}
           fetchPolicy="cache-and-network"
           variables={{ first: 20 }}
         >
diff --git a/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeedConnected.js b/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeedConnected.js
index 7527d53..bfccbe1 100644
--- a/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeedConnected.js
+++ b/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeedConnected.js
@@ -2,12 +2,12 @@ import React from 'react';
 import { Query } from 'react-apollo';
 import PropTypes from 'prop-types';
 
-import getLikedContent from '../getLikedContent';
+import GET_LIKED_CONTENT from '../getLikedContent';
 import RecentlyLikedTileFeed from './RecentlyLikedTileFeed';
 
 const RecentlyLikedTileFeedConnected = ({ navigation }) => (
   <Query
-    query={getLikedContent}
+    query={GET_LIKED_CONTENT}
     fetchPolicy="cache-and-network"
     variables={{ first: 3 }}
   >
diff --git a/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeedConnected.tests.js b/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeedConnected.tests.js
index 19c91cf..8463a14 100644
--- a/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeedConnected.tests.js
+++ b/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeedConnected.tests.js
@@ -4,14 +4,14 @@ import wait from 'waait';
 
 import Providers from 'apolloschurchapp/src/Providers';
 
-import getLikedContent from '../getLikedContent';
+import GET_LIKED_CONTENT from '../getLikedContent';
 import RecentlyLikedTileFeedConnected from './RecentlyLikedTileFeedConnected';
 
 describe('RecentlyLikedTileFeedConnected', () => {
   it('renders a RecentlyLikedTileFeedConnected', async () => {
     const mock = {
       request: {
-        query: getLikedContent,
+        query: GET_LIKED_CONTENT,
       },
       result: {
         data: {
@@ -87,7 +87,7 @@ describe('RecentlyLikedTileFeedConnected', () => {
   it('renders nothing if no liked content', async () => {
     const mock = {
       request: {
-        query: getLikedContent,
+        query: GET_LIKED_CONTENT,
       },
       result: {
         data: {
diff --git a/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeaderConnected.js b/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeaderConnected.js
index 397a879..9b9997c 100644
--- a/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeaderConnected.js
+++ b/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeaderConnected.js
@@ -3,11 +3,11 @@ import { Query } from 'react-apollo';
 import PropTypes from 'prop-types';
 import { get } from 'lodash';
 
-import getUserProfile from '../getUserProfile';
+import GET_USER_PROFILE from '../getUserProfile';
 import UserAvatarHeader from './UserAvatarHeader';
 
 const UserAvatarHeaderConnected = ({ navigation }) => (
-  <Query query={getUserProfile} fetchPolicy="cache-and-network">
+  <Query query={GET_USER_PROFILE} fetchPolicy="cache-and-network">
     {({
       data: {
         currentUser: {
diff --git a/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeaderConnected.tests.js b/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeaderConnected.tests.js
index b4bad0c..0395abe 100644
--- a/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeaderConnected.tests.js
+++ b/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeaderConnected.tests.js
@@ -3,14 +3,14 @@ import { renderWithApolloData } from 'apolloschurchapp/src/utils/testUtils';
 
 import Providers from 'apolloschurchapp/src/Providers';
 
-import getUserProfile from '../getUserProfile';
+import GET_USER_PROFILE from '../getUserProfile';
 import UserAvatarHeaderConnected from './UserAvatarHeaderConnected';
 
 describe('user avatar header connect', () => {
   it('renders user avatar header if logged in', async () => {
     const mock = {
       request: {
-        query: getUserProfile,
+        query: GET_USER_PROFILE,
       },
       result: {
         data: {
diff --git a/apolloschurchapp/src/tabs/connect/getLikedContent.js b/apolloschurchapp/src/tabs/connect/getLikedContent.js
index 5e4e1f9..67a6720 100644
--- a/apolloschurchapp/src/tabs/connect/getLikedContent.js
+++ b/apolloschurchapp/src/tabs/connect/getLikedContent.js
@@ -1,7 +1,7 @@
 import gql from 'graphql-tag';
 
-import { largeCardFragment } from 'apolloschurchapp/src/ui/ContentCardConnected';
-import { contentItemFragment } from 'apolloschurchapp/src/content-single/getContentItem';
+import { LARGE_CARD_FRAGMENT } from 'apolloschurchapp/src/ui/ContentCardConnected';
+import { CONTENT_ITEM_FRAGMENT } from 'apolloschurchapp/src/content-single/getContentItem';
 
 export default gql`
   query getAllLikedContent($first: Int, $after: String) {
@@ -19,6 +19,6 @@ export default gql`
       }
     }
   }
-  ${contentItemFragment}
-  ${largeCardFragment}
+  ${CONTENT_ITEM_FRAGMENT}
+  ${LARGE_CARD_FRAGMENT}
 `;
diff --git a/apolloschurchapp/src/tabs/discover/Discover.js b/apolloschurchapp/src/tabs/discover/Discover.js
index 76d8b24..210c1a2 100644
--- a/apolloschurchapp/src/tabs/discover/Discover.js
+++ b/apolloschurchapp/src/tabs/discover/Discover.js
@@ -5,7 +5,7 @@ import { get } from 'lodash';
 import { FeedView, BackgroundView } from '@apollosproject/ui-kit';
 
 import TileContentFeed from './TileContentFeed';
-import getContentChannels from './getContentChannels';
+import GET_CONTENT_CHANNELS from './getContentChannels';
 
 const childContentItemLoadingState = {
   title: '',
@@ -33,7 +33,7 @@ class Discover extends PureComponent {
   render() {
     return (
       <BackgroundView>
-        <Query query={getContentChannels} fetchPolicy="cache-and-network">
+        <Query query={GET_CONTENT_CHANNELS} fetchPolicy="cache-and-network">
           {({
             error,
             loading,
diff --git a/apolloschurchapp/src/tabs/discover/discover.tests.js b/apolloschurchapp/src/tabs/discover/discover.tests.js
index 96f2fde..6e8f57b 100644
--- a/apolloschurchapp/src/tabs/discover/discover.tests.js
+++ b/apolloschurchapp/src/tabs/discover/discover.tests.js
@@ -5,13 +5,13 @@ import { createStackNavigator } from 'react-navigation';
 import Providers from 'apolloschurchapp/src/Providers';
 
 import Discover from './Discover';
-import getContentChannels from './getContentChannels';
+import GET_CONTENT_CHANNELS from './getContentChannels';
 
 describe('Test the Discover Component Query', () => {
   it('Should retrieve the Content Channel Feeds', () => {
     const mock = {
       request: {
-        query: getContentChannels,
+        query: GET_CONTENT_CHANNELS,
       },
       result: {
         data: {
diff --git a/apolloschurchapp/src/tabs/discover/getContentChannels.js b/apolloschurchapp/src/tabs/discover/getContentChannels.js
index bc9c243..be21aa9 100644
--- a/apolloschurchapp/src/tabs/discover/getContentChannels.js
+++ b/apolloschurchapp/src/tabs/discover/getContentChannels.js
@@ -1,7 +1,7 @@
 import gql from 'graphql-tag';
 
-import { contentItemFragment } from 'apolloschurchapp/src/content-single/getContentItem';
-import { tileCardFragment } from 'apolloschurchapp/src/ui/ContentCardConnected';
+import { CONTENT_ITEM_FRAGMENT } from 'apolloschurchapp/src/content-single/getContentItem';
+import { TILE_CARD_FRAGMENT } from 'apolloschurchapp/src/ui/ContentCardConnected';
 
 export default gql`
   query getContentChannels {
@@ -19,6 +19,6 @@ export default gql`
       }
     }
   }
-  ${contentItemFragment}
-  ${tileCardFragment}
+  ${CONTENT_ITEM_FRAGMENT}
+  ${TILE_CARD_FRAGMENT}
 `;
diff --git a/apolloschurchapp/src/tabs/home/Home.js b/apolloschurchapp/src/tabs/home/Home.js
index 74f520b..9d7b3c8 100644
--- a/apolloschurchapp/src/tabs/home/Home.js
+++ b/apolloschurchapp/src/tabs/home/Home.js
@@ -20,9 +20,9 @@ import ContentCardConnected from '../../ui/ContentCardConnected';
 import { LiveButton } from '../../live';
 
 import ContentTableCard from '../../ui/ContentTableCard';
-import getUserFeed from './getUserFeed';
-import getPersonaFeed from './getPersonaFeed';
-import getCampaignContentItem from './getCampaignContentItem';
+import GET_USER_FEED from './getUserFeed';
+import GET_PERSONA_FEED from './getPersonaFeed';
+import GET_CAMPAIGN_CONTENT_ITEM from './getCampaignContentItem';
 
 const LogoTitle = styled(({ theme }) => ({
   height: theme.sizing.baseUnit,
@@ -59,7 +59,7 @@ class Home extends PureComponent {
       <BackgroundView>
         <SafeAreaView>
           <Query
-            query={getUserFeed}
+            query={GET_USER_FEED}
             variables={{
               first: 10,
               after: null,
@@ -86,7 +86,7 @@ class Home extends PureComponent {
                     <LogoTitle source={require('./wordmark.png')} />
                     <LiveButton />
                     <Query
-                      query={getCampaignContentItem}
+                      query={GET_CAMPAIGN_CONTENT_ITEM}
                       fetchPolicy="cache-and-network"
                     >
                       {({ data: featuredData, loading: isFeaturedLoading }) => {
@@ -117,7 +117,7 @@ class Home extends PureComponent {
                       }}
                     </Query>
                     <Query
-                      query={getPersonaFeed}
+                      query={GET_PERSONA_FEED}
                       fetchPolicy="cache-and-network"
                     >
                       {({
diff --git a/apolloschurchapp/src/tabs/home/getCampaignContentItem.js b/apolloschurchapp/src/tabs/home/getCampaignContentItem.js
index 5bdb082..345463c 100644
--- a/apolloschurchapp/src/tabs/home/getCampaignContentItem.js
+++ b/apolloschurchapp/src/tabs/home/getCampaignContentItem.js
@@ -1,7 +1,7 @@
 import gql from 'graphql-tag';
 
-import { contentItemFragment } from 'apolloschurchapp/src/content-single/getContentItem';
-import { largeCardFragment } from 'apolloschurchapp/src/ui/ContentCardConnected';
+import { CONTENT_ITEM_FRAGMENT } from 'apolloschurchapp/src/content-single/getContentItem';
+import { LARGE_CARD_FRAGMENT } from 'apolloschurchapp/src/ui/ContentCardConnected';
 
 export default gql`
   query campaigns {
@@ -20,6 +20,6 @@ export default gql`
       }
     }
   }
-  ${contentItemFragment}
-  ${largeCardFragment}
+  ${CONTENT_ITEM_FRAGMENT}
+  ${LARGE_CARD_FRAGMENT}
 `;
diff --git a/apolloschurchapp/src/tabs/home/getPersonaFeed.js b/apolloschurchapp/src/tabs/home/getPersonaFeed.js
index b8130e0..ac2b87d 100644
--- a/apolloschurchapp/src/tabs/home/getPersonaFeed.js
+++ b/apolloschurchapp/src/tabs/home/getPersonaFeed.js
@@ -1,7 +1,7 @@
 import gql from 'graphql-tag';
 
-import { contentItemFragment } from 'apolloschurchapp/src/content-single/getContentItem';
-import { largeCardFragment } from 'apolloschurchapp/src/ui/ContentCardConnected';
+import { CONTENT_ITEM_FRAGMENT } from 'apolloschurchapp/src/content-single/getContentItem';
+import { LARGE_CARD_FRAGMENT } from 'apolloschurchapp/src/ui/ContentCardConnected';
 
 export default gql`
   query getPersonaFeed {
@@ -14,6 +14,6 @@ export default gql`
       }
     }
   }
-  ${contentItemFragment}
-  ${largeCardFragment}
+  ${CONTENT_ITEM_FRAGMENT}
+  ${LARGE_CARD_FRAGMENT}
 `;
diff --git a/apolloschurchapp/src/tabs/home/getUserFeed.js b/apolloschurchapp/src/tabs/home/getUserFeed.js
index 8ab2b1f..e120403 100644
--- a/apolloschurchapp/src/tabs/home/getUserFeed.js
+++ b/apolloschurchapp/src/tabs/home/getUserFeed.js
@@ -1,7 +1,7 @@
 import gql from 'graphql-tag';
 
-import { contentItemFragment } from 'apolloschurchapp/src/content-single/getContentItem';
-import { largeCardFragment } from 'apolloschurchapp/src/ui/ContentCardConnected';
+import { CONTENT_ITEM_FRAGMENT } from 'apolloschurchapp/src/content-single/getContentItem';
+import { LARGE_CARD_FRAGMENT } from 'apolloschurchapp/src/ui/ContentCardConnected';
 
 export default gql`
   query getUserFeed($first: Int, $after: String) {
@@ -17,6 +17,6 @@ export default gql`
       }
     }
   }
-  ${contentItemFragment}
-  ${largeCardFragment}
+  ${CONTENT_ITEM_FRAGMENT}
+  ${LARGE_CARD_FRAGMENT}
 `;
diff --git a/apolloschurchapp/src/tabs/home/home.tests.js b/apolloschurchapp/src/tabs/home/home.tests.js
index e9f98c5..96a5008 100644
--- a/apolloschurchapp/src/tabs/home/home.tests.js
+++ b/apolloschurchapp/src/tabs/home/home.tests.js
@@ -4,13 +4,13 @@ import renderer from 'react-test-renderer';
 import Providers from 'apolloschurchapp/src/Providers';
 
 import Home from './Home';
-import getUserFeed from './getUserFeed';
+import GET_USER_FEED from './getUserFeed';
 
 describe('User Home Feed Query', () => {
   it('should return correct query results', () => {
     const mock = {
       request: {
-        query: getUserFeed,
+        query: GET_USER_FEED,
       },
       result: {
         data: {
diff --git a/apolloschurchapp/src/testing-control-panel/ChangeLivestream.js b/apolloschurchapp/src/testing-control-panel/ChangeLivestream.js
index 6723f30..6675653 100644
--- a/apolloschurchapp/src/testing-control-panel/ChangeLivestream.js
+++ b/apolloschurchapp/src/testing-control-panel/ChangeLivestream.js
@@ -4,12 +4,12 @@ import { Query } from 'react-apollo';
 import { get } from 'lodash';
 
 import { client } from 'apolloschurchapp/src/client';
-import getLiveStream from 'apolloschurchapp/src/live/getLiveStream';
+import GET_LIVE_STREAM from 'apolloschurchapp/src/live/getLiveStream';
 import TouchableCell from './TouchableCell';
 
 const changeLivestream = ({ isLive }) =>
   client.writeQuery({
-    query: getLiveStream,
+    query: GET_LIVE_STREAM,
     data: {
       liveStream: {
         __typename: 'LiveStream',
@@ -19,7 +19,7 @@ const changeLivestream = ({ isLive }) =>
   });
 
 const ChangeLivestream = () => (
-  <Query query={getLiveStream}>
+  <Query query={GET_LIVE_STREAM}>
     {({ data }) => {
       const isLive = get(data, 'liveStream.isLive', false);
       return (
diff --git a/apolloschurchapp/src/ui/ContentCardConnected/index.js b/apolloschurchapp/src/ui/ContentCardConnected/index.js
index b64bdc6..8722331 100644
--- a/apolloschurchapp/src/ui/ContentCardConnected/index.js
+++ b/apolloschurchapp/src/ui/ContentCardConnected/index.js
@@ -4,9 +4,9 @@ import { Query } from 'react-apollo';
 import { get } from 'lodash';
 
 import { ContentCard, ErrorCard } from '@apollosproject/ui-kit';
-import getContentCard from './query';
+import GET_CONTENT_CARD from './query';
 
-export { tileCardFragment, largeCardFragment } from './query';
+export { TILE_CARD_FRAGMENT, LARGE_CARD_FRAGMENT } from './query';
 
 const ContentCardConnected = ({
   contentId,
@@ -18,7 +18,7 @@ const ContentCardConnected = ({
     return <ContentCard {...otherProps} isLoading tile={tile} />;
 
   return (
-    <Query query={getContentCard} variables={{ contentId, tile: !!tile }}>
+    <Query query={GET_CONTENT_CARD} variables={{ contentId, tile: !!tile }}>
       {({ data: { node = {} } = {}, loading, error }) => {
         if (error) return <ErrorCard error={error} />;
 
diff --git a/apolloschurchapp/src/ui/ContentCardConnected/query.js b/apolloschurchapp/src/ui/ContentCardConnected/query.js
index abefc12..eee426a 100644
--- a/apolloschurchapp/src/ui/ContentCardConnected/query.js
+++ b/apolloschurchapp/src/ui/ContentCardConnected/query.js
@@ -1,6 +1,6 @@
 import gql from 'graphql-tag';
 
-export const coverImageFragment = gql`
+export const COVER_IMAGE_FRAGMENT = gql`
   fragment coverImageFragment on ContentItem {
     coverImage {
       sources {
@@ -10,7 +10,7 @@ export const coverImageFragment = gql`
   }
 `;
 
-export const themeFragment = gql`
+export const THEME_FRAGMENT = gql`
   fragment themeFragment on ContentItem {
     theme {
       type
@@ -24,14 +24,14 @@ export const themeFragment = gql`
   }
 `;
 
-export const contentCardMetricsFragment = gql`
+export const CONTENT_CARD_METRICS_FRAGMENT = gql`
   fragment contentCardMetricsFragment on ContentItem {
     isLiked
     likedCount
   }
 `;
 
-export const baseCardFragment = gql`
+export const BASE_CARD_FRAGMENT = gql`
   fragment baseCardFragment on ContentItem {
     id
     __typename
@@ -41,12 +41,12 @@ export const baseCardFragment = gql`
     title
     summary
   }
-  ${contentCardMetricsFragment}
-  ${coverImageFragment}
-  ${themeFragment}
+  ${CONTENT_CARD_METRICS_FRAGMENT}
+  ${COVER_IMAGE_FRAGMENT}
+  ${THEME_FRAGMENT}
 `;
 
-export const tileCardFragment = gql`
+export const TILE_CARD_FRAGMENT = gql`
   fragment tileCardFragment on ContentItem {
     ... on ContentSeriesContentItem {
       id
@@ -64,20 +64,20 @@ export const tileCardFragment = gql`
       ...baseCardFragment
     }
   }
-  ${baseCardFragment}
-  ${themeFragment}
-  ${coverImageFragment}
-  ${contentCardMetricsFragment}
+  ${BASE_CARD_FRAGMENT}
+  ${THEME_FRAGMENT}
+  ${COVER_IMAGE_FRAGMENT}
+  ${CONTENT_CARD_METRICS_FRAGMENT}
 `;
 
-export const largeCardFragment = gql`
+export const LARGE_CARD_FRAGMENT = gql`
   fragment largeCardFragment on ContentItem {
     ...baseCardFragment
   }
-  ${baseCardFragment}
+  ${BASE_CARD_FRAGMENT}
 `;
 
-const getContentCard = gql`
+const GET_CONTENT_CARD = gql`
   query getContentCard($contentId: ID!, $tile: Boolean!) {
     node(id: $contentId) {
       id
@@ -86,8 +86,8 @@ const getContentCard = gql`
       ...largeCardFragment @skip(if: $tile)
     }
   }
-  ${tileCardFragment}
-  ${largeCardFragment}
+  ${TILE_CARD_FRAGMENT}
+  ${LARGE_CARD_FRAGMENT}
 `;
 
-export default getContentCard;
+export default GET_CONTENT_CARD;
diff --git a/apolloschurchapp/src/ui/LikeButton/index.js b/apolloschurchapp/src/ui/LikeButton/index.js
index a7c0c2d..8272d96 100644
--- a/apolloschurchapp/src/ui/LikeButton/index.js
+++ b/apolloschurchapp/src/ui/LikeButton/index.js
@@ -7,12 +7,12 @@ import { Query, Mutation } from 'react-apollo';
 import Like from 'apolloschurchapp/src/ui/Like';
 import { AnalyticsConsumer } from '@apollosproject/ui-analytics';
 
-import updateLikeEntity from './updateLikeEntity';
-import getLikedContentItem from './getLikedContentItem';
+import UPDATE_LIKE_ENTITY from './updateLikeEntity';
+import GET_LIKED_CONTENT_ITEM from './getLikedContentItem';
 import updateLikedContent from './updateLikedContent';
 
 const GetLikeData = ({ itemId, children }) => (
-  <Query query={getLikedContentItem} variables={{ itemId }}>
+  <Query query={GET_LIKED_CONTENT_ITEM} variables={{ itemId }}>
     {({ data: { node = {} } = {}, loading }) => {
       const isLiked = loading ? false : get(node, 'isLiked') || false;
       return children({ isLiked, item: node });
@@ -34,7 +34,7 @@ const UpdateLikeStatus = ({
   <AnalyticsConsumer>
     {({ track }) => (
       <Mutation
-        mutation={updateLikeEntity}
+        mutation={UPDATE_LIKE_ENTITY}
         optimisticResponse={{
           updateLikeEntity: {
             id: itemId, // unknown at this time
@@ -53,7 +53,7 @@ const UpdateLikeStatus = ({
         ) => {
           updateLikedContent({ liked, cache, item });
           cache.writeQuery({
-            query: getLikedContentItem,
+            query: GET_LIKED_CONTENT_ITEM,
             data: {
               node: {
                 ...item,
diff --git a/apolloschurchapp/src/ui/LikeButton/updateLikedContent.js b/apolloschurchapp/src/ui/LikeButton/updateLikedContent.js
index c0d5978..1024864 100644
--- a/apolloschurchapp/src/ui/LikeButton/updateLikedContent.js
+++ b/apolloschurchapp/src/ui/LikeButton/updateLikedContent.js
@@ -1,15 +1,15 @@
-import getAllLikedContent from 'apolloschurchapp/src/tabs/connect/getLikedContent';
-import { contentItemFragment } from 'apolloschurchapp/src/content-single/getContentItem';
+import GET_ALL_LIKED_CONTENT from 'apolloschurchapp/src/tabs/connect/getLikedContent';
+import { CONTENT_ITEM_FRAGMENT } from 'apolloschurchapp/src/content-single/getContentItem';
 
 const addItemToLikedContentList = ({ cache, item, variables }) => {
   try {
     const data = cache.readQuery({
-      query: getAllLikedContent,
+      query: GET_ALL_LIKED_CONTENT,
       variables,
     });
     const fullItem = cache.readFragment({
       id: `${item.__typename}:${item.id}`,
-      fragment: contentItemFragment,
+      fragment: CONTENT_ITEM_FRAGMENT,
     });
     const newEdges = [
       fullItem,
@@ -19,7 +19,7 @@ const addItemToLikedContentList = ({ cache, item, variables }) => {
       node,
     }));
     cache.writeQuery({
-      query: getAllLikedContent,
+      query: GET_ALL_LIKED_CONTENT,
       variables,
       data: {
         ...data,
@@ -39,7 +39,7 @@ const addItemToLikedContentList = ({ cache, item, variables }) => {
 const removeItemFromLikedContentList = ({ cache, item, variables }) => {
   try {
     const data = cache.readQuery({
-      query: getAllLikedContent,
+      query: GET_ALL_LIKED_CONTENT,
       variables,
     });
 
@@ -48,7 +48,7 @@ const removeItemFromLikedContentList = ({ cache, item, variables }) => {
     );
 
     cache.writeQuery({
-      query: getAllLikedContent,
+      query: GET_ALL_LIKED_CONTENT,
       variables,
       data: {
         ...data,
diff --git a/apolloschurchapp/src/ui/Onboarding/Onboarding.tests.js b/apolloschurchapp/src/ui/Onboarding/Onboarding.tests.js
new file mode 100644
index 0000000..abe9746
--- /dev/null
+++ b/apolloschurchapp/src/ui/Onboarding/Onboarding.tests.js
@@ -0,0 +1,17 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from '../../Providers';
+
+import Onboarding from '.';
+
+describe('the Onboarding component', () => {
+  it('should render Onboarding', () => {
+    const tree = renderer.create(
+      <Providers>
+        <Onboarding />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/UserAvatarView/AvatarForm.js b/apolloschurchapp/src/ui/UserAvatarView/AvatarForm.js
index 49c66b0..1787f08 100644
--- a/apolloschurchapp/src/ui/UserAvatarView/AvatarForm.js
+++ b/apolloschurchapp/src/ui/UserAvatarView/AvatarForm.js
@@ -12,11 +12,11 @@ import {
   H5,
   styled,
 } from '@apollosproject/ui-kit';
-import getUserProfile from '../../tabs/connect/getUserProfile';
+import GET_USER_PROFILE from '../../tabs/connect/getUserProfile';
 import uploadPhoto from './uploadPhoto';
 
 const GetPhotoData = ({ children }) => (
-  <Query query={getUserProfile}>
+  <Query query={GET_USER_PROFILE}>
     {({ data: { currentUser = {} } = {} }) => {
       const photo = get(currentUser, 'profile.photo');
       return children({ photo });
diff --git a/apolloschurchapp/src/ui/UserAvatarView/uploadPhoto.js b/apolloschurchapp/src/ui/UserAvatarView/uploadPhoto.js
index cf0b4e0..4c051e5 100644
--- a/apolloschurchapp/src/ui/UserAvatarView/uploadPhoto.js
+++ b/apolloschurchapp/src/ui/UserAvatarView/uploadPhoto.js
@@ -1,7 +1,7 @@
 import gql from 'graphql-tag';
 import ImagePicker from 'react-native-image-picker';
 import { ReactNativeFile } from 'apollo-upload-client';
-import getUserProfile from '../../tabs/connect/getUserProfile';
+import GET_USER_PROFILE from '../../tabs/connect/getUserProfile';
 
 const options = {
   title: 'Select Profile Image',
@@ -57,10 +57,10 @@ export default async ({ client, onUpload = () => ({}) }) => {
           },
         }
       ) => {
-        const data = cache.readQuery({ query: getUserProfile });
+        const data = cache.readQuery({ query: GET_USER_PROFILE });
 
         cache.writeQuery({
-          query: getUserProfile,
+          query: GET_USER_PROFILE,
           data: {
             currentUser: {
               ...data.currentUser,
diff --git a/apolloschurchapp/src/user-settings/ChangePassword.js b/apolloschurchapp/src/user-settings/ChangePassword.js
index 2938688..6045e31 100644
--- a/apolloschurchapp/src/user-settings/ChangePassword.js
+++ b/apolloschurchapp/src/user-settings/ChangePassword.js
@@ -15,8 +15,8 @@ import {
   styled,
 } from '@apollosproject/ui-kit';
 
-import getAuthToken from '../store/getAuthToken';
-import changePassword from './passwordChange';
+import GET_AUTH_TOKEN from '../store/getAuthToken';
+import CHANGE_PASSWORD from './passwordChange';
 
 const Footer = styled({
   flex: 1,
@@ -82,10 +82,10 @@ class ChangePassword extends PureComponent {
   render() {
     return (
       <Mutation
-        mutation={changePassword}
+        mutation={CHANGE_PASSWORD}
         update={async (cache, { data: { token } }) => {
           await cache.writeQuery({
-            query: getAuthToken,
+            query: GET_AUTH_TOKEN,
             data: { authToken: token },
           });
 
diff --git a/apolloschurchapp/src/user-settings/Locations/Locations.tests.js b/apolloschurchapp/src/user-settings/Locations/Locations.tests.js
index 627fc7f..53a4c91 100644
--- a/apolloschurchapp/src/user-settings/Locations/Locations.tests.js
+++ b/apolloschurchapp/src/user-settings/Locations/Locations.tests.js
@@ -2,7 +2,7 @@ import React from 'react';
 import { renderWithApolloData } from 'apolloschurchapp/src/utils/testUtils';
 
 import Providers from 'apolloschurchapp/src/Providers';
-import getCampusLocations from './getCampusLocations';
+import GET_CAMPUS_LOCATIONS from './getCampusLocations';
 import Location from './index';
 
 const campuses = [
@@ -80,6 +80,10 @@ describe('Display Native Map with Locations', () => {
     latitudeDelta: 100,
     longitudeDelta: 10,
   };
+  const userLocation = {
+    latitude: 39.104797,
+    longitude: -84.511959,
+  };
   it('Render a native map view', async () => {
     const navigation = {
       navigate: jest.fn(),
@@ -89,10 +93,10 @@ describe('Display Native Map with Locations', () => {
 
     const mock = {
       request: {
-        query: getCampusLocations,
+        query: GET_CAMPUS_LOCATIONS,
         variables: {
-          latitude: initialRegion.latitude,
-          longitude: initialRegion.longitude,
+          latitude: userLocation.latitude,
+          longitude: userLocation.longitude,
         },
       },
       result: {
diff --git a/apolloschurchapp/src/user-settings/Locations/MapView.js b/apolloschurchapp/src/user-settings/Locations/MapView.js
index b38e1d5..06dddb5 100644
--- a/apolloschurchapp/src/user-settings/Locations/MapView.js
+++ b/apolloschurchapp/src/user-settings/Locations/MapView.js
@@ -1,13 +1,14 @@
 import React, { Component } from 'react';
 import PropTypes from 'prop-types';
 import { View, Animated } from 'react-native';
-import SafeAreaView from 'react-native-safe-area-view';
+import { SafeAreaView } from 'react-navigation';
 import RNMapView from 'react-native-maps';
 import { debounce } from 'lodash';
 
 import {
   Button,
   PaddedView,
+  FlexedView,
   styled,
   withTheme,
   CampusCard,
@@ -17,10 +18,6 @@ import Marker from './Marker';
 
 const { CARD_WIDTH } = CampusCard;
 
-const ContainerView = styled({
-  flex: 1,
-})(View);
-
 const FlexedMapView = styled({ flex: 1 })(({ mapRef, ...props }) => (
   <RNMapView ref={mapRef} {...props} />
 ));
@@ -28,7 +25,7 @@ const FlexedMapView = styled({ flex: 1 })(({ mapRef, ...props }) => (
 const getCampusAddress = (campus) =>
   `${campus.street1}\n${campus.city}, ${campus.state} ${campus.postalCode}`;
 
-const ScrollingView = styled({
+const Footer = styled({
   position: 'absolute',
   bottom: 0,
   left: 0,
@@ -89,40 +86,32 @@ class MapView extends Component {
     const cardIndex = Math.floor(value / CARD_WIDTH + 0.3); // animate 30% away from landing on the next item;
     const campus = this.props.campuses[cardIndex];
     this.setState({ campus });
-    if (!campus) return;
-
-    const { userLocation } = this.props;
-
-    let { latitude } = campus;
-    const { longitude } = campus;
-    let { latitudeDelta, longitudeDelta } = this.props.initialRegion;
-
-    if (userLocation) {
-      // Calculate rectangle that shows user's location in the view with campus at center
-      const minLat = Math.min(campus.latitude, userLocation.latitude);
-      const maxLat = Math.max(campus.latitude, userLocation.latitude);
-      const minLong = Math.min(campus.longitude, userLocation.longitude);
-      const mayLong = Math.max(campus.longitude, userLocation.longitude);
-
-      latitudeDelta = (maxLat - minLat) * 2.5;
-      longitudeDelta = (mayLong - minLong) * 2.5;
+    if (!campus) {
+      this.map.fitToCoordinates(
+        [...this.props.campuses, this.props.userLocation],
+        {
+          edgePadding: {
+            top: 100,
+            left: 100,
+            right: 100,
+            // This is higher to avoid the campus cards (baseUnit * 6) on the bottom
+            bottom: 100 + this.props.theme.sizing.baseUnit * 12,
+          },
+        }
+      );
+      return;
     }
 
-    // Now, we need to transform the given lat/lng/delta up to make room for cards at bottom.
-    // To make this math simpler, we'll assume the cards take up roughly 20% of the vertical space
-    const maxDelta = Math.max(latitudeDelta, longitudeDelta);
-    latitude -= maxDelta * 0.2; // move the view up 20%
-    latitudeDelta *= 1.2; // include 20% more area in the view
-
-    this.map.animateToRegion(
-      {
-        latitude,
-        longitude,
-        latitudeDelta,
-        longitudeDelta,
+    const { userLocation } = this.props;
+    this.map.fitToCoordinates([campus, userLocation], {
+      edgePadding: {
+        top: 100,
+        left: 100,
+        right: 100,
+        // This is higher to avoid the campus cards (baseUnit * 6) on the bottom
+        bottom: 100 + this.props.theme.sizing.baseUnit * 12,
       },
-      350
-    );
+    });
   };
 
   render() {
@@ -133,98 +122,83 @@ class MapView extends Component {
         index * CARD_WIDTH,
         (index + 1) * CARD_WIDTH,
       ];
-      const scale = this.animation.interpolate({
-        inputRange,
-        outputRange: [1, 2.5, 1],
-        extrapolate: 'clamp',
-      });
       const opacity = this.animation.interpolate({
         inputRange,
         outputRange: [0.35, 1, 0.35],
         extrapolate: 'clamp',
       });
-      return { scale, opacity };
+      return { opacity };
     });
 
     return (
-      <ContainerView>
-        <ContainerView>
-          <FlexedMapView
-            initialRegion={this.props.initialRegion}
-            showsUserLocation
-            mapRef={(map) => {
-              this.map = map;
-            }}
-          >
-            {campuses.map((campus, index) => {
-              const scaleStyle = {
-                transform: [
+      <FlexedView>
+        <FlexedMapView
+          initialRegion={this.props.initialRegion}
+          showsUserLocation
+          mapRef={(map) => {
+            this.map = map;
+          }}
+        >
+          {campuses.map((campus, index) => {
+            const campusOpacity = {
+              opacity: interpolations[index].opacity,
+            };
+            return (
+              <Marker
+                key={campus.id}
+                opacityStyle={campusOpacity}
+                latitude={campus.latitude}
+                longitude={campus.longitude}
+              />
+            );
+          })}
+        </FlexedMapView>
+        <Footer>
+          <SafeAreaView>
+            <Animated.ScrollView
+              horizontal
+              showsHorizontalScrollIndicator={false}
+              snapToInterval={CARD_WIDTH + 8} // account for padding
+              snapToAlignment={'start'}
+              decelerationRate={'fast'}
+              contentContainerStyle={this.contentContainerStyle} // correctly pads cards in ScrollView
+              scrollEventThrottle={16} // roughtly 1000ms/60fps = 16ms
+              onScroll={Animated.event(
+                [
                   {
-                    scale: interpolations[index].scale,
+                    nativeEvent: {
+                      contentOffset: {
+                        x: this.animation,
+                      },
+                    },
                   },
                 ],
-              };
-              const opacityStyle = {
-                opacity: interpolations[index].opacity,
-              };
-              return (
-                <Marker
+                { useNativeDriver: true }
+              )}
+            >
+              {campuses.map((campus) => (
+                <CampusCard
                   key={campus.id}
-                  opacityStyle={opacityStyle}
-                  scaleStyle={scaleStyle}
-                  latitude={campus.latitude}
-                  longitude={campus.longitude}
-                />
-              );
-            })}
-          </FlexedMapView>
-          <ScrollingView>
-            <SafeAreaView forceInset={{ bottom: 'always', top: 'never' }}>
-              <Animated.ScrollView
-                horizontal
-                showsHorizontalScrollIndicator={false}
-                snapToInterval={CARD_WIDTH + 8} // account for padding
-                snapToAlignment={'start'}
-                decelerationRate={'fast'}
-                contentContainerStyle={this.contentContainerStyle} // correctly pads cards in ScrollView
-                scrollEventThrottle={16} // roughtly 1000ms/60fps = 16ms
-                onScroll={Animated.event(
-                  [
-                    {
-                      nativeEvent: {
-                        contentOffset: {
-                          x: this.animation,
-                        },
-                      },
-                    },
-                  ],
-                  { useNativeDriver: true }
-                )}
-              >
-                {campuses.map((campus) => (
-                  <CampusCard
-                    key={campus.id}
-                    distance={campus.distanceFromLocation}
-                    title={campus.name}
-                    description={getCampusAddress(campus)}
-                    images={[campus.image]}
-                  />
-                ))}
-              </Animated.ScrollView>
-              <PaddedView>
-                <Button
-                  title="Select Campus"
-                  pill={false}
-                  type="secondary"
-                  onPress={() =>
-                    onLocationSelect(this.state.campus || campuses[0])
-                  }
+                  distance={campus.distanceFromLocation}
+                  title={campus.name}
+                  description={getCampusAddress(campus)}
+                  images={[campus.image]}
                 />
-              </PaddedView>
-            </SafeAreaView>
-          </ScrollingView>
-        </ContainerView>
-      </ContainerView>
+              ))}
+            </Animated.ScrollView>
+            <PaddedView>
+              <Button
+                title="Select Campus"
+                pill={false}
+                type="secondary"
+                onPress={() =>
+                  onLocationSelect(this.state.campus || campuses[0])
+                }
+              />
+            </PaddedView>
+          </SafeAreaView>
+        </Footer>
+      </FlexedView>
     );
   }
 }
diff --git a/apolloschurchapp/src/user-settings/Locations/Marker.js b/apolloschurchapp/src/user-settings/Locations/Marker.js
index b7c10d7..0c98fa9 100644
--- a/apolloschurchapp/src/user-settings/Locations/Marker.js
+++ b/apolloschurchapp/src/user-settings/Locations/Marker.js
@@ -11,42 +11,29 @@ const MarkerView = styled(({ theme }) => ({
   height: 8,
   borderRadius: 4,
   backgroundColor: Color(theme.colors.primary).fade(theme.alpha.medium),
+  zIndex: 2,
 }))(View);
 
-const MarkerWrapView = styled({
-  alignItems: 'center',
-  justifyContent: 'center',
-})(View);
-
-// This is not good. Is there a better way to prevent cascading styles?
-
 const MarkerRingView = styled(({ theme }) => ({
   width: 24,
   height: 24,
   borderRadius: 12,
-  right: -8,
-  top: -8,
   backgroundColor: Color(theme.colors.primary).fade(theme.alpha.low),
-  position: 'absolute',
   borderWidth: 1,
   borderColor: Color(theme.colors.primary).fade(theme.alpha.medium),
-  alignItems: 'stretch',
+  alignItems: 'center',
+  justifyContent: 'center',
 }))(View);
 
-const StyledMarker = memo(
-  ({ latitude, longitude, opacityStyle, scaleStyle }) => (
-    <Marker coordinate={{ latitude, longitude }}>
-      <MarkerWrapView>
-        <Animated.View style={opacityStyle}>
-          <MarkerRingView>
-            <Animated.View style={scaleStyle} />
-          </MarkerRingView>
-          <MarkerView />
-        </Animated.View>
-      </MarkerWrapView>
-    </Marker>
-  )
-);
+const StyledMarker = memo(({ latitude, longitude, opacityStyle }) => (
+  <Marker coordinate={{ latitude, longitude }}>
+    <Animated.View style={opacityStyle}>
+      <MarkerRingView>
+        <MarkerView />
+      </MarkerRingView>
+    </Animated.View>
+  </Marker>
+));
 
 StyledMarker.displayName = 'StyledMarker';
 
@@ -54,7 +41,6 @@ StyledMarker.propTypes = {
   latitude: PropTypes.number.isRequired,
   longitude: PropTypes.number.isRequired,
   opacityStyle: PropTypes.shape({}),
-  scaleStyle: PropTypes.shape({}),
 };
 
 export default StyledMarker;
diff --git a/apolloschurchapp/src/user-settings/Locations/index.js b/apolloschurchapp/src/user-settings/Locations/index.js
index f8517c3..bc2b6d6 100644
--- a/apolloschurchapp/src/user-settings/Locations/index.js
+++ b/apolloschurchapp/src/user-settings/Locations/index.js
@@ -5,13 +5,10 @@ import { Dimensions } from 'react-native';
 
 import { PaddedView, ButtonLink } from '@apollosproject/ui-kit';
 
-import getUserProfile from '../../tabs/connect/getUserProfile';
+import GET_CAMPUSES from './getCampusLocations';
+import CHANGE_CAMPUS from './campusChange';
 import MapView from './MapView';
 
-import getAllCampuses from './getCampusLocations';
-
-import campusChange from './campusChange';
-
 const getCurrentLocation = () =>
   new Promise((resolve, reject) => {
     navigator.geolocation.getCurrentPosition(
@@ -20,10 +17,6 @@ const getCurrentLocation = () =>
     );
   });
 
-const screen = Dimensions.get('window');
-
-const ASPECT_RATIO = screen.width / screen.height;
-
 class Location extends PureComponent {
   static propTypes = {
     navigation: PropTypes.shape({
@@ -46,7 +39,9 @@ class Location extends PureComponent {
       latitude: 39.809734,
       longitude: -98.555618,
       latitudeDelta: 100,
-      longitudeDelta: 100 * ASPECT_RATIO,
+      longitudeDelta:
+        (100 * Dimensions.get('window').width) /
+        Dimensions.get('window').height,
     },
   };
 
@@ -61,7 +56,10 @@ class Location extends PureComponent {
   });
 
   state = {
-    region: this.props.initialRegion,
+    userLocation: {
+      latitude: 39.104797,
+      longitude: -84.511959,
+    },
   };
 
   componentDidMount() {
@@ -80,43 +78,19 @@ class Location extends PureComponent {
   render() {
     const { navigation, onFinished } = this.props;
     // we should use the `onFinished` from the navigation param, if it exists.
-    const handleFinished = this.props.navigation.getParam(
-      'onFinished',
-      onFinished
-    );
+    const handleFinished = navigation.getParam('onFinished', onFinished);
 
     return (
       <Query
-        query={getAllCampuses}
+        query={GET_CAMPUSES}
         variables={{
-          latitude: this.state.region.latitude,
-          longitude: this.state.region.longitude,
+          latitude: this.state.userLocation.latitude,
+          longitude: this.state.userLocation.longitude,
         }}
         fetchPolicy="cache-and-network"
       >
         {({ loading, error, data: { campuses = [] } = {} }) => (
-          <Mutation
-            mutation={campusChange}
-            update={async (cache, { data: { updateUserCampus } }) => {
-              const { currentUser } = await cache.readQuery({
-                query: getUserProfile,
-              });
-              await cache.writeQuery({
-                query: getUserProfile,
-                data: {
-                  currentUser: {
-                    ...currentUser,
-                    profile: {
-                      ...currentUser.profile,
-                      campus: {
-                        ...updateUserCampus.campus,
-                      },
-                    },
-                  },
-                },
-              });
-            }}
-          >
+          <Mutation mutation={CHANGE_CAMPUS}>
             {(handlePress) => (
               <MapView
                 navigation={navigation}
diff --git a/apolloschurchapp/src/user-settings/PersonDetails.tests.js b/apolloschurchapp/src/user-settings/PersonDetails.tests.js
index b55f57e..5234bf5 100644
--- a/apolloschurchapp/src/user-settings/PersonDetails.tests.js
+++ b/apolloschurchapp/src/user-settings/PersonDetails.tests.js
@@ -4,14 +4,14 @@ import wait from 'waait';
 
 import Providers from 'apolloschurchapp/src/Providers';
 
-import getUserProfile from '../tabs/connect/getUserProfile';
+import GET_USER_PROFILE from '../tabs/connect/getUserProfile';
 import PersonalDetails from './PersonalDetails';
 
 describe('PersonalDetails component', () => {
   it('renders PersonalDetails when logged in', async () => {
     const mock = {
       request: {
-        query: getUserProfile,
+        query: GET_USER_PROFILE,
       },
       result: {
         data: {
diff --git a/apolloschurchapp/src/user-settings/PersonalDetails.js b/apolloschurchapp/src/user-settings/PersonalDetails.js
index e694002..9404206 100644
--- a/apolloschurchapp/src/user-settings/PersonalDetails.js
+++ b/apolloschurchapp/src/user-settings/PersonalDetails.js
@@ -1,6 +1,12 @@
 import React, { PureComponent } from 'react';
 import PropTypes from 'prop-types';
-import { SafeAreaView } from 'react-native';
+import {
+  KeyboardAvoidingView,
+  StyleSheet,
+  StatusBar,
+  Platform,
+} from 'react-native';
+import { SafeAreaView, Header } from 'react-navigation';
 import { Query, Mutation } from 'react-apollo';
 import { Formik } from 'formik';
 import * as Yup from 'yup';
@@ -11,12 +17,11 @@ import {
   FlexedView,
   Button,
   ButtonLink,
-  TableView,
   styled,
 } from '@apollosproject/ui-kit';
 
-import getUserProfile from '../tabs/connect/getUserProfile';
-import updateCurrentUser from './updateCurrentUser';
+import GET_USER_PROFILE from '../tabs/connect/getUserProfile';
+import UPDATE_CURRENT_USER from './updateCurrentUser';
 
 const Footer = styled({
   flex: 1,
@@ -43,8 +48,16 @@ class PersonalDetails extends PureComponent {
   };
 
   renderForm = (props) => (
-    <FlexedView>
-      <TableView>
+    // have to add the offset to account for react-navigation header
+    <KeyboardAvoidingView
+      behavior={'padding'}
+      style={StyleSheet.absoluteFill}
+      keyboardVerticalOffset={
+        Header.HEIGHT +
+        (Platform.OS === 'android' ? StatusBar.currentHeight : 0)
+      }
+    >
+      <FlexedView>
         <PaddedView>
           <TextInput
             label="First Name"
@@ -60,10 +73,6 @@ class PersonalDetails extends PureComponent {
             error={props.touched.lastName && props.errors.lastName}
             onChangeText={(text) => props.setFieldValue('lastName', text)}
           />
-        </PaddedView>
-      </TableView>
-      <TableView>
-        <PaddedView>
           <TextInput
             label="Email"
             type="email"
@@ -72,32 +81,32 @@ class PersonalDetails extends PureComponent {
             onChangeText={(text) => props.setFieldValue('email', text)}
           />
         </PaddedView>
-      </TableView>
-      <Footer>
-        <PaddedView>
-          <Button
-            disabled={!props.isValid || props.isSubmitting}
-            onPress={props.handleSubmit}
-            title="Save"
-            loading={props.isSubmitting}
-          />
-        </PaddedView>
-      </Footer>
-    </FlexedView>
+        <Footer>
+          <PaddedView>
+            <Button
+              disabled={!props.isValid || props.isSubmitting}
+              onPress={props.handleSubmit}
+              title="Save"
+              loading={props.isSubmitting}
+            />
+          </PaddedView>
+        </Footer>
+      </FlexedView>
+    </KeyboardAvoidingView>
   );
 
   render() {
     return (
-      <Query query={getUserProfile} fetchPolicy="cache-and-network">
+      <Query query={GET_USER_PROFILE} fetchPolicy="cache-and-network">
         {({ data: { currentUser = { profile: {} } } = {} }) => {
           const { firstName, lastName, email } = currentUser.profile;
 
           return (
             <Mutation
-              mutation={updateCurrentUser}
+              mutation={UPDATE_CURRENT_USER}
               update={async (cache, { data: { updateProfileFields } }) => {
                 await cache.writeQuery({
-                  query: getUserProfile,
+                  query: GET_USER_PROFILE,
                   data: {
                     currentUser: {
                       ...currentUser,
diff --git a/apolloschurchapp/src/user-settings/UserSettings.tests.js b/apolloschurchapp/src/user-settings/UserSettings.tests.js
index 5cb5377..9a1f3d3 100644
--- a/apolloschurchapp/src/user-settings/UserSettings.tests.js
+++ b/apolloschurchapp/src/user-settings/UserSettings.tests.js
@@ -4,14 +4,14 @@ import wait from 'waait';
 
 import Providers from 'apolloschurchapp/src/Providers';
 
-import getLoginState from '../tabs/connect/getLoginState';
+import GET_LOGIN_STATE from '../tabs/connect/getLoginState';
 import UserSettings from '.';
 
 describe('UserSettings component', () => {
   it('renders UserSettings when logged in', async () => {
     const mock = {
       request: {
-        query: getLoginState,
+        query: GET_LOGIN_STATE,
       },
       result: {
         data: { isLoggedIn: true },
diff --git a/apolloschurchapp/src/user-settings/index.js b/apolloschurchapp/src/user-settings/index.js
index c386327..30b1044 100644
--- a/apolloschurchapp/src/user-settings/index.js
+++ b/apolloschurchapp/src/user-settings/index.js
@@ -18,7 +18,7 @@ import {
 import { WebBrowserConsumer } from 'apolloschurchapp/src/ui/WebBrowser';
 import AvatarForm from 'apolloschurchapp/src/ui/UserAvatarView/AvatarForm';
 
-import { getLoginState, logout } from '@apollosproject/ui-auth';
+import { GET_LOGIN_STATE, LOGOUT } from '@apollosproject/ui-auth';
 
 const AvatarView = styled({
   alignItems: 'center',
@@ -43,7 +43,7 @@ class UserSettings extends PureComponent {
 
   render() {
     return (
-      <Query query={getLoginState} fetchPolicy="cache-and-network">
+      <Query query={GET_LOGIN_STATE} fetchPolicy="cache-and-network">
         {({ data: { isLoggedIn = false, loading } }) => {
           if (loading) return <ActivityIndicator />;
           if (!isLoggedIn) return null;
@@ -129,7 +129,7 @@ class UserSettings extends PureComponent {
                       </Touchable>
                     </TableView>
                     <TableView>
-                      <Mutation mutation={logout}>
+                      <Mutation mutation={LOGOUT}>
                         {(handleLogout) => (
                           <Touchable
                             onPress={async () => {
