diff --git a/apolloschurchapp/.env.shared.enc b/apolloschurchapp/.env.shared.enc
index 771bfa91a7e1c023fecb862c55e77660b032ddd0..9bcd912aae14193cb0255ef94910cc575fb0a05b 100644
GIT binary patch
literal 800
zcmV+*1K<2pVQh3|WM5x}PXlRp9}KQ3j2vi=*|ZbK*Uo<pV8W2CB&(N6^YAEl(w4=u
zg?^YGd3^b3n4$I*-x`?OB8}HK2eA**<AxHd|4`6t^S#3suRf1WS&#~h1p5Z+-*naX
z-ehM5d356LLwb5@S!rEq8uW-SX&s=BRr|Wh<i)p|fO+Mcb2gp9?34Ev89w`@w$XDz
zxi+#=*_+YLUnC~(ZTC<B!LQhv@dNhw<A`f+O$H2T9a;oli){<F`8>6+L+PMubJqn?
zx9pcMD7VhG^PSfWRp#iPl=LM$nSrYBKSMeN1AZo@wE)#bm`Nw9y~c(Pgkum|t`OaD
z3Z0c(QcL%;?&bG!WQw}q11J0w50_9?nOQ~RJ|>$OY5z}22Y`J}5f7ZOkM|=QT>6rR
z(j0zhP5tFf53iM-Tz?~V6iv3Kvbj6M=P1V`#Z@W<rq)|m#D*mKSRDfJVU7&+AKQ)^
z*tH60J#8EU7pF`5q{&#^jX*8QL~h;F%@njh?m+tu7ujD(@NM?QHuAA+DqDI*aSdOX
zHa=&<8)4m_<{!%7SFpJvXmb0|xP*;^XZRxj7z(rqQ?Mu?VEhmW`3d{*7TBf4f%N&G
z?7^h>>`$$nW=>;<M)I8;YGhW}MF!Y{s%{Ne;0|F+CuMEGarAatPF`RsG08=IH&^!6
zN~h^rGF`1->*cEek=o4fD2Nlf2u{F%C2?c_+!k>!x2kOh%7X0Ls)P%x9(~e#D2G68
z4cLd3qwbZ!77A<HHEO7olxyp?{W~w}NBipWdtE@)%r$Y$e%4c){CFsC%DJ|8ey;UI
z8YrQ{H6hVW)E&D)JBOgw&m_q0^^3MnJcRG8UzA=uY!cYHcR|k~s$yJtPH}_oTEMPB
zhA@)bRa!27ZumbVup=CQBwKsXF8Ia@`aBc5(``m({K~Eq`r6fI7HohEAig-i!K=et
z$iP-^36Mj5LE(b~uB%YJ)`MWizg~FX##AOygm7AdcH4GtVmgQ77{I%Oc7FMO$T{v<
e&D@(YHVc7~N=Zwy3!4uqZtVLz@SU7^4pi%kijxok

literal 368
zcmV-$0gwJuVQh3|WM5yJ)t@WsV;nuW8z5R1h!|oELQxI>Pgs!ZMNIjJn`8>+OT1+j
zxfW!*=nUMeAbs4-j*D-<{7_YFzgO5yIsa-6S!#e>E;KF?fEd8%+a0i)zyk39aS2Pi
zuHZ#xHJ$#L%iW}Zk4_&jrOt_%`ytHOIh&m5-TcEw5|QLjI~Zn@B;^om18K6#(%`rY
zWrTIHQ~qPo@wMd0wR5sUHMW~ENW!qE_foRNgbAMr2|nl+w@Ws3o{w>~2DPhlcJC>b
zJco!D1+y~x$q*QsUdh}DnxoV$63->N+tsXR0H<(q7=bUBDhMrG&iO*GT07lXsnwoT
zlU!912EhnZR1YAE|6>W5h1tjKx<IL9H1GdSE24)D4fT1;D#FXknI;{H7o2i&&zS9Y
z1XW#Kj#*WmIh8JaE@1yrW8BW1$uXWPS41b4$QS*7i`k;Cs4R+&4T>yOw{IE18oZvP
O6<XMbyT_5_EJ0qZE3)AL

diff --git a/apolloschurchapp/.gitignore b/apolloschurchapp/.gitignore
index 7bd49399..caf99aad 100644
--- a/apolloschurchapp/.gitignore
+++ b/apolloschurchapp/.gitignore
@@ -147,7 +147,7 @@ DerivedData
 fastlane/report.xml
 
 # symbols
-apolloschurchapp.app.dSYM.zip
+*.app.dSYM.zip
 
 # iOS keys
 *.p8
@@ -160,5 +160,4 @@ key.json
 .env.shared
 
 # GraphQL info
-schema.graphql
 fragmentTypes.json
diff --git a/apolloschurchapp/Gemfile b/apolloschurchapp/Gemfile
index 307e9509..77041843 100644
--- a/apolloschurchapp/Gemfile
+++ b/apolloschurchapp/Gemfile
@@ -1,3 +1,3 @@
 source 'https://rubygems.org'
-gem 'cocoapods', '1.8.4'
+gem 'cocoapods', '1.10.1'
 gem 'fastlane', '2.179.0'
diff --git a/apolloschurchapp/Gemfile.lock b/apolloschurchapp/Gemfile.lock
index 93c71c41..a0fa52db 100644
--- a/apolloschurchapp/Gemfile.lock
+++ b/apolloschurchapp/Gemfile.lock
@@ -1,22 +1,22 @@
 GEM
   remote: https://rubygems.org/
   specs:
-    CFPropertyList (3.0.2)
-    activesupport (4.2.11.3)
-      i18n (~> 0.7)
+    CFPropertyList (3.0.3)
+    activesupport (5.2.5)
+      concurrent-ruby (~> 1.0, >= 1.0.2)
+      i18n (>= 0.7, < 2)
       minitest (~> 5.1)
-      thread_safe (~> 0.3, >= 0.3.4)
       tzinfo (~> 1.1)
     addressable (2.7.0)
       public_suffix (>= 2.0.2, < 5.0)
-    algoliasearch (1.27.3)
+    algoliasearch (1.27.5)
       httpclient (~> 2.8, >= 2.8.3)
       json (>= 1.5.1)
     artifactory (3.0.15)
     atomos (0.1.3)
     aws-eventstream (1.1.1)
-    aws-partitions (1.442.0)
-    aws-sdk-core (3.113.1)
+    aws-partitions (1.449.0)
+    aws-sdk-core (3.114.0)
       aws-eventstream (~> 1, >= 1.0.2)
       aws-partitions (~> 1, >= 1.239.0)
       aws-sigv4 (~> 1.1)
@@ -24,7 +24,7 @@ GEM
     aws-sdk-kms (1.43.0)
       aws-sdk-core (~> 3, >= 3.112.0)
       aws-sigv4 (~> 1.1)
-    aws-sdk-s3 (1.93.0)
+    aws-sdk-s3 (1.94.0)
       aws-sdk-core (~> 3, >= 3.112.0)
       aws-sdk-kms (~> 1)
       aws-sigv4 (~> 1.1)
@@ -32,15 +32,14 @@ GEM
       aws-eventstream (~> 1, >= 1.0.2)
     babosa (1.0.4)
     claide (1.0.3)
-    cocoapods (1.8.4)
-      activesupport (>= 4.0.2, < 5)
+    cocoapods (1.10.1)
+      addressable (~> 2.6)
       claide (>= 1.0.2, < 2.0)
-      cocoapods-core (= 1.8.4)
+      cocoapods-core (= 1.10.1)
       cocoapods-deintegrate (>= 1.0.3, < 2.0)
-      cocoapods-downloader (>= 1.2.2, < 2.0)
+      cocoapods-downloader (>= 1.4.0, < 2.0)
       cocoapods-plugins (>= 1.0.0, < 2.0)
       cocoapods-search (>= 1.0.0, < 2.0)
-      cocoapods-stats (>= 1.0.0, < 2.0)
       cocoapods-trunk (>= 1.4.0, < 2.0)
       cocoapods-try (>= 1.1.0, < 2.0)
       colored2 (~> 3.1)
@@ -50,19 +49,22 @@ GEM
       molinillo (~> 0.6.6)
       nap (~> 1.0)
       ruby-macho (~> 1.4)
-      xcodeproj (>= 1.11.1, < 2.0)
-    cocoapods-core (1.8.4)
-      activesupport (>= 4.0.2, < 6)
+      xcodeproj (>= 1.19.0, < 2.0)
+    cocoapods-core (1.10.1)
+      activesupport (> 5.0, < 6)
+      addressable (~> 2.6)
       algoliasearch (~> 1.0)
       concurrent-ruby (~> 1.1)
       fuzzy_match (~> 2.0.4)
       nap (~> 1.0)
+      netrc (~> 0.11)
+      public_suffix
+      typhoeus (~> 1.0)
     cocoapods-deintegrate (1.0.4)
     cocoapods-downloader (1.4.0)
     cocoapods-plugins (1.0.0)
       nap
     cocoapods-search (1.0.0)
-    cocoapods-stats (1.1.0)
     cocoapods-trunk (1.5.0)
       nap (>= 0.8, < 2.0)
       netrc (~> 0.11)
@@ -71,9 +73,8 @@ GEM
     colored2 (3.1.2)
     commander-fastlane (4.4.6)
       highline (~> 1.7.2)
-    concurrent-ruby (1.1.7)
+    concurrent-ruby (1.1.8)
     declarative (0.0.20)
-    declarative-option (0.1.0)
     digest-crc (0.6.3)
       rake (>= 12.0.0, < 14.0.0)
     domain_name (0.5.20190701)
@@ -81,15 +82,21 @@ GEM
     dotenv (2.7.6)
     emoji_regex (3.2.2)
     escape (0.0.4)
-    excon (0.79.0)
-    faraday (1.3.0)
+    ethon (0.14.0)
+      ffi (>= 1.15.0)
+    excon (0.81.0)
+    faraday (1.4.1)
+      faraday-excon (~> 1.1)
       faraday-net_http (~> 1.0)
+      faraday-net_http_persistent (~> 1.1)
       multipart-post (>= 1.2, < 3)
-      ruby2_keywords
+      ruby2_keywords (>= 0.0.4)
     faraday-cookie_jar (0.0.7)
       faraday (>= 0.8.0)
       http-cookie (~> 1.0.0)
+    faraday-excon (1.1.0)
     faraday-net_http (1.0.1)
+    faraday-net_http_persistent (1.1.0)
     faraday_middleware (1.0.0)
       faraday (~> 1.0)
     fastimage (2.2.3)
@@ -131,6 +138,7 @@ GEM
       xcodeproj (>= 1.13.0, < 2.0.0)
       xcpretty (~> 0.3.0)
       xcpretty-travis-formatter (>= 0.0.3)
+    ffi (1.15.0)
     fourflusher (2.3.1)
     fuzzy_match (2.0.4)
     gh_inspector (1.1.3)
@@ -170,7 +178,7 @@ GEM
       google-cloud-core (~> 1.2)
       googleauth (~> 0.9)
       mini_mime (~> 1.0)
-    googleauth (0.16.1)
+    googleauth (0.16.2)
       faraday (>= 0.17.3, < 2.0)
       jwt (>= 1.4, < 3.0)
       memoist (~> 0.16)
@@ -181,15 +189,15 @@ GEM
     http-cookie (1.0.3)
       domain_name (~> 0.5)
     httpclient (2.8.3)
-    i18n (0.9.5)
+    i18n (1.8.10)
       concurrent-ruby (~> 1.0)
     jmespath (1.4.0)
-    json (2.3.1)
-    jwt (2.2.2)
+    json (2.5.1)
+    jwt (2.2.3)
     memoist (0.16.2)
     mini_magick (4.11.0)
     mini_mime (1.1.0)
-    minitest (5.14.1)
+    minitest (5.14.4)
     molinillo (0.6.6)
     multi_json (1.15.0)
     multipart-post (2.0.0)
@@ -201,9 +209,9 @@ GEM
     plist (3.6.0)
     public_suffix (4.0.6)
     rake (13.0.3)
-    representable (3.0.4)
+    representable (3.1.1)
       declarative (< 0.1.0)
-      declarative-option (< 0.2.0)
+      trailblazer-option (>= 0.1.1, < 0.2.0)
       uber (< 0.2.0)
     retriable (3.1.2)
     rexml (3.2.5)
@@ -225,11 +233,14 @@ GEM
     terminal-table (1.8.0)
       unicode-display_width (~> 1.1, >= 1.1.1)
     thread_safe (0.3.6)
+    trailblazer-option (0.1.1)
     tty-cursor (0.7.1)
     tty-screen (0.8.1)
     tty-spinner (0.9.3)
       tty-cursor (~> 0.7)
-    tzinfo (1.2.7)
+    typhoeus (1.4.0)
+      ethon (>= 0.9.0)
+    tzinfo (1.2.9)
       thread_safe (~> 0.1)
     uber (0.1.0)
     unf (0.1.4)
@@ -238,7 +249,7 @@ GEM
     unicode-display_width (1.7.0)
     webrick (1.7.0)
     word_wrap (1.0.0)
-    xcodeproj (1.18.0)
+    xcodeproj (1.19.0)
       CFPropertyList (>= 2.3.3, < 4.0)
       atomos (~> 0.1.3)
       claide (>= 1.0.2, < 2.0)
@@ -253,7 +264,7 @@ PLATFORMS
   ruby
 
 DEPENDENCIES
-  cocoapods (= 1.8.4)
+  cocoapods (= 1.10.1)
   fastlane (= 2.179.0)
 
 BUNDLED WITH
diff --git a/apolloschurchapp/android/app/apollos.keystore.enc b/apolloschurchapp/android/app/apollos.keystore.enc
index a8b963351a8ab7ca68b0564dc8a224f74808ec3f..40450a4e7667886a328bb1b39638e07badfde342 100644
GIT binary patch
literal 2272
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

literal 2272
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

diff --git a/apolloschurchapp/android/app/src/main/AndroidManifest.xml b/apolloschurchapp/android/app/src/main/AndroidManifest.xml
index 887cc9cf..9b213950 100644
--- a/apolloschurchapp/android/app/src/main/AndroidManifest.xml
+++ b/apolloschurchapp/android/app/src/main/AndroidManifest.xml
@@ -18,10 +18,6 @@
         android:name="com.google.android.geo.API_KEY"
         android:value="@string/GOOGLE_MAPS_API_KEY"/>
 
-      <meta-data
-        android:name="com.google.android.gms.cast.framework.OPTIONS_PROVIDER_CLASS_NAME"
-        android:value="com.reactnative.googlecast.GoogleCastOptionsProvider" />
-
       <activity
         android:name=".MainActivity"
         android:label="@string/app_name"
diff --git a/apolloschurchapp/android/app/src/main/java/com/differential/apollos/MainActivity.java b/apolloschurchapp/android/app/src/main/java/com/differential/apollos/MainActivity.java
index db0a876b..89affa60 100644
--- a/apolloschurchapp/android/app/src/main/java/com/differential/apollos/MainActivity.java
+++ b/apolloschurchapp/android/app/src/main/java/com/differential/apollos/MainActivity.java
@@ -5,9 +5,8 @@ import com.facebook.react.ReactActivity;
 import com.facebook.react.ReactActivityDelegate;
 import com.facebook.react.ReactRootView;
 import com.swmansion.gesturehandler.react.RNGestureHandlerEnabledRootView;
-import com.facebook.react.GoogleCastActivity;
 
-public class MainActivity extends GoogleCastActivity {
+public class MainActivity extends ReactActivity {
     /**
      * Returns the name of the main component registered from JavaScript.
      * This is used to schedule rendering of the component.
diff --git a/apolloschurchapp/android/key.json.enc b/apolloschurchapp/android/key.json.enc
index 7c680913f47e9d5d0a2ade0182ae92333f3896b9..8ac41f8fef376e5df015c4574bcf491e48e9613a 100644
GIT binary patch
literal 2384
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
CQnnKS

literal 2384
zcmV-W39t53VQh3|WM5y6Xi4oOYyAG_!l3;*5pC^Rtb-brzbNe$+mR<;tu6dsPfj!L
z!C<+4qmcF6@#_Rvxtlr}ubq+eW`_fzT~zH14H2~}S|#YWuzDR8hfEu_f}1ME_Xvcw
zU&;&*=FN7)E4XM=jY-V5jEj%hQ;H{p7Po2=Fi}K^_~fS6Kl7iT5Ac8ZYc#z34#vvq
zVV?jiOB$0rJRS2?Kk|<B{i=7lxm7WNWw&<1@$qQ|2-*4oSt}M9SKfhU%1yJ$x0Kor
z<JQ8)qi+0`+jCOtq#TkNw8xAORD}$RN<j_uw^HYZsR=Za-XO#g`K0+15eZ`iti6li
zn_;=9Y7gV`0709njSMvHG-X7%Xq*hmp_B}b08h+W<e3FGvj1@*(XZV)!OlNI(+*}0
z<uR*vMgmEFQ%kzT1}!<~O2}s`n##-yt$B7kRdDfVZ-eoi@f3)Ar!g(zJ0g#G3^5Z8
zumLF9Pn9)Hl{)VZz0``^d79GhRkK9j;-Nbv$~wPgy4$^HWI!KGjeuy3k8)Y8>|KfF
zhuXQfCAkO10zom{#}G0TQ*6g|HKfD7B+L#cMND}q7>#s6!8`r<8Z8RRO84S1w^;vd
zk2x=$R>%C*h3)_D(GnT8zNM0Aq59A#zn0;8a27r5!&0EVWoIx}qFLBiY=;DP1r5|=
z54xJ2ex4qS16P8&H}TJi{0aZ<X5%;Xg$4>EJ$DKV9^*9^?*qQwDIIr}1PVTZiA0P~
zxe#3q6Fd-vkj^To2gF$Ll`R7YW8)}24~TA)p?4r;W6}_-xBSbDdH%zMw2euFKl*KD
z(}?@46izD2;V59_3vO-!wYVlDv{w{q=M6CRVLqH$bvG9tdvNmI)70k2D*q9L3?UKQ
z&0Nm_oTNy}I<|O&ZeOSNE*_y^6(mHlXWDF<|AqH0c$S=kb~k5wAC;t{M9QyeSPH`@
zPq9F~zc!A>iy;B4awmA(=`<7TIi@vGFB&NEUclpof93yp60|4L17UBhSueQJY3?0E
z6M=O(oIApJZFkI*>sd}<pKP#v>xsaWa(`CCzPeRr0S@@kBe~a6b=h8~W0)w`vGUC!
z@F`t%jHVQtLK}Z6vdGe1svcryrthVj;Go|v!Xin2D;?$LCsLLmhf-HGqNQ-%y$J1!
z!z|(PL%HoBNL)i8To%5a(o2;Bt`=e-7)sSFPb7g7KJvDM448XeOJPN7cixJ5nQe0$
z3mQNmDdG?2`MN{>p-K!=zjrY@6B@v=@&)kJS^hEu!NI4nBW-m197z)(;p&#Z{x`5U
zPN@L)h=4a9t{c<gPbLYrFXwMZ`8z^qKq;L`z%b9O+upSw!elI&%}FR44=baC!*3L%
z>ypRw6GbFQ30?Y8r00?^dpCCyR7D{zq{H690_}d5p$nFx(Zbb{9lS+ZDIJFFpdL3A
zQK48Dh*V35fC1Getz<`SY2(Le)NB*AySfYeFBrfj8DL0^<)(^W@vsFaq?;uzQeQNx
z!ckiKaWjb2KG4woln8jJJlT-5g~0f{fE_H*-n_M?r#0vfK{xByN#09DNedRW(^{N=
z0>QGd;!Ms$ZyP9TtmJ-tH70yh1#<3J1wP3rFZ(uxmrM|%pUDo$B{rZk_wzPG8)5+U
zFyK+-8)3$15$#Y=(Mq&ELVg=111P@-o*mdbQRm9!7qX4HZLr(C)sW6Ue0k0EO?Uwr
zJVnMzG-76@kL7w|PahWJ7GK-s?eq?Th#WJoj&Ooyy(K`sDK5Nhc=DLrbVtQvb@x$p
zzL1~mmDI@M_Kl}O2xOnVSf<TgFEEbqUsGryJ_YqaX93E?MxiMcK1Rad!7{J8dp`fM
zkF5#*agLSaq4q&cx1``A1(>)ioEW*i^>(2Av(ax%xy!Lq1p)d-|KbJ?Uj;(lYRehH
z=hubxq|kB6gkXt9L+E$U)~j$9{EN6kQm%2gI1>Q4a!G31K=*@aWJ}jv!6X$_0e}pT
zxvoveDz}k8X{Lpjdy;Qbc3}k@aZ=qGtKHQ$r0$XkRIQtxVTU!Xzrvt!Kr&dfA-1Y|
z!?);nLc22lr{tV=?bftE)-vF8Pg|sda<+Z+eE;ON-<&q3(=jygjp|tz=5{f$2F1v9
zJFtMmJfoJKPJLB?gRX3Q(i<EHeVmI41!EGPVV<2|;^o2q69>KvRbFWbh+f$X^mi39
zr3E54W!szw5<jR=(_*Q6)Ey-MR9jazaKSd@Xw!xgp5x-D`JV^-_ZCX^W`2fQp=;q!
zk^NvZeo75Z*xB3=?)kHac&EA08eo+2J%rJrHElbky`Dm0Y$?g?nh=-#Td&FU`)@XK
z%oG%OcbjLQTfy~P>hl^E<_gA?0VElcN52&Te_W}?Hn6;*dV`&PP>7p1IFoQP<eQGs
z%wU4uWMtAJ)HK=Hp@Vz`w22S&8buDUaDIe^jh1g6(i@XXVm>rGC$2J-)H;+kb#`7E
zu7t#uk%zNG#-ds;O!V1qy)o#l!D+A2RkASegB&Hcb2;0{@F?D%RB`do8igp&>D-+A
zVjqXw3^^FQ0%nPFaYFZ%)#ojt)IRIy7X9299qu}Nj3x7wG7@`}Rz_{YpF)+rp7Lmv
zcD}Zw3^&O{q&hv0ja$#bDSv<qH6>h&AEyiV2O<1Y*4-SR?<hr^j2XI|P4S37@gW#k
zJsufpx7pJ>0QWa8zXT8EE-u;SZI^LxwY40qZB+>)*6T!<XmKB&ZljS)$I{>;q0B^2
ztV}lCw)PG6)o2e0UqE4zRF_GH(Qgqx5`k@}q_HAgj3;keZxjtJHHp-N^n1_{oMh3j
z<})uqV68u*r(=r-Wo{*ixk5X=tzB+WkJa|2LlEpm>ptG$`KLz)7Pv*o7_Q$33A$ay
z$s*hC>QBV#vx*s$;i+Ws_LmXSmQ9#$3}jO6HZ5deY#Q#8gxt7&e;p52g`oU8UI;6i
z4ig7hF~Cug0EhG;KXtbsaL+F!%fR&nDaZ9>sO?r2#G$St3pO)@3{n*;&8yW)(I^jd
zb=}`|9y;Tngz@cQ=A`oXN+4$hk1i_$jJ6988f%$xr24%FbYdH1=z{=|(}s=xWf5Xy
zb@@`}=hbza5R7&9Zos=y98QF@vGDjR{yk;xyxX{!H>WcYcL~cnv}lJYX-neABX2M)
C1&Zka

diff --git a/apolloschurchapp/apollos.json b/apolloschurchapp/apollos.json
index 4bac1aa6..d82481a7 100644
--- a/apolloschurchapp/apollos.json
+++ b/apolloschurchapp/apollos.json
@@ -1,4 +1,4 @@
 {
-    "version": "2.13.0",
+    "version": "2.19.0",
     "environment": "client"
 }
diff --git a/apolloschurchapp/fastlane/Appfile b/apolloschurchapp/fastlane/Appfile
deleted file mode 100644
index fb2e46e3..00000000
--- a/apolloschurchapp/fastlane/Appfile
+++ /dev/null
@@ -1,8 +0,0 @@
-# iOS
-app_identifier("com.differential.apollos") # The bundle identifier of your app
-itc_team_id("121565707") # App Store Connect Team ID
-team_id("7KS82J74VW") # Developer Portal Team ID
-
-# Android
-json_key_file("android/key.json") # Path to the json secret file - Follow https://docs.fastlane.tools/actions/supply/#setup to get one
-package_name("com.differential.apollos") # e.g. com.krausefx.app
diff --git a/apolloschurchapp/fastlane/Fastfile b/apolloschurchapp/fastlane/Fastfile
index 70abf33a..0e40d3ce 100644
--- a/apolloschurchapp/fastlane/Fastfile
+++ b/apolloschurchapp/fastlane/Fastfile
@@ -23,29 +23,28 @@ platform :ios do
 
   desc "Push a new beta build to TestFlight"
   lane :deploy do
-    app_store_connect_api_key(
-      key_id: "LV9F3XX57B",
-      issuer_id: "7943c4a3-c0cf-442e-93bd-b3c289bddec3",
-      key_filepath: "ios/apollos.p8",
-    )
+
+    # get project name
+    proj = Dir.glob("../ios/*.xcworkspace")[0][7..-13]
+
+    app_store_connect_api_key(key_filepath: "ios/apollos.p8")
     setup_ci
     match(type: 'appstore', readonly: true)
-    increment_build_number(build_number: number_of_commits, xcodeproj: "ios/apolloschurchapp.xcodeproj")
-    build_app(workspace: "ios/apolloschurchapp.xcworkspace", scheme: "apolloschurchappprod")
+    increment_build_number(build_number: number_of_commits, xcodeproj: "ios/" << proj << ".xcodeproj")
+    build_app(workspace: "ios/" << proj << ".xcworkspace", scheme: proj)
     changelog_from_git_commits
-    upload_to_testflight
+    testflight
   end
 end
 
 platform :android do
 
-  # necessary because setting gradle properties doesn't seem to be working
   desc "Bumps Android versionCode"
   lane :bump_version_code do
     path = '../android/app/build.gradle'
     re = /versionCode\s+(\d+)/
 
-    s = File.read(path)
+    s = File.read("../android/app/build.gradle")
     versionCode = number_of_commits
     s[re, 1] = (versionCode).to_s
 
@@ -60,6 +59,17 @@ platform :android do
     gradle(task: 'clean', project_dir: 'android')
     gradle(task: 'bundle', build_type: 'Release', project_dir: 'android')
     changelog_from_git_commits
-    upload_to_play_store(track: "internal", skip_upload_apk: true)
+
+    path = '../android/app/build.gradle'
+    re = /applicationId\s+"([\w+\.]*)"/
+    s = File.read("../android/app/build.gradle")
+    package_name = s[re, 1]
+
+    upload_to_play_store(
+      track: "internal",
+      skip_upload_apk: true,
+      json_key: "android/key.json",
+      package_name: package_name
+    )
   end
 end
diff --git a/apolloschurchapp/fastlane/Matchfile b/apolloschurchapp/fastlane/Matchfile
deleted file mode 100644
index d01001cc..00000000
--- a/apolloschurchapp/fastlane/Matchfile
+++ /dev/null
@@ -1,2 +0,0 @@
-git_url("https://github.com/ApollosProject/certificates")
-app_identifier("com.differential.apollos")
diff --git a/apolloschurchapp/ios/Podfile b/apolloschurchapp/ios/Podfile
index 26b192b8..40454274 100644
--- a/apolloschurchapp/ios/Podfile
+++ b/apolloschurchapp/ios/Podfile
@@ -11,7 +11,6 @@ target 'apolloschurchapp' do
 
   pod 'Permission-PhotoLibrary', :path => "#{permissions_path}/PhotoLibrary.podspec"
   pod 'Permission-Notifications', :path => "#{permissions_path}/Notifications.podspec"
-  # pod 'react-native-google-cast/NoBluetooth', path: '../node_modules/react-native-google-cast/ios/'
 
   target 'apolloschurchappTests' do
     inherit! :complete
@@ -22,7 +21,7 @@ target 'apolloschurchapp' do
   #
   # Note that if you have use_frameworks! enabled, Flipper will not work and
   # you should disable these next few lines.
-  use_flipper!
+  use_flipper!('Flipper' => '0.75.1', 'Flipper-Folly' => '2.5.3', 'Flipper-RSocket' => '1.3.1')
   post_install do |installer|
     flipper_post_install(installer)
       installer.pods_project.targets.each do |target|
@@ -36,7 +35,7 @@ target 'apolloschurchapp' do
          target.build_phases << phase
          target.build_phases.move(phase,0)
        end
-      end    
+      end
   end
 end
 
diff --git a/apolloschurchapp/ios/Podfile.lock b/apolloschurchapp/ios/Podfile.lock
index aaaa63cd..58af488d 100644
--- a/apolloschurchapp/ios/Podfile.lock
+++ b/apolloschurchapp/ios/Podfile.lock
@@ -4,7 +4,6 @@ PODS:
   - BVLinearGradient (2.5.6):
     - React
   - CocoaAsyncSocket (7.6.5)
-  - CocoaLibEvent (1.0.0)
   - DoubleConversion (1.1.6)
   - FBLazyVector (0.63.4)
   - FBReactNativeSpec (0.63.4):
@@ -14,50 +13,50 @@ PODS:
     - React-Core (= 0.63.4)
     - React-jsi (= 0.63.4)
     - ReactCommon/turbomodule/core (= 0.63.4)
-  - Flipper (0.54.0):
-    - Flipper-Folly (~> 2.2)
-    - Flipper-RSocket (~> 1.1)
+  - Flipper (0.75.1):
+    - Flipper-Folly (~> 2.5)
+    - Flipper-RSocket (~> 1.3)
   - Flipper-DoubleConversion (1.1.7)
-  - Flipper-Folly (2.3.0):
+  - Flipper-Folly (2.5.3):
     - boost-for-react-native
-    - CocoaLibEvent (~> 1.0)
     - Flipper-DoubleConversion
     - Flipper-Glog
-    - OpenSSL-Universal (= 1.0.2.20)
+    - libevent (~> 2.1.12)
+    - OpenSSL-Universal (= 1.1.180)
   - Flipper-Glog (0.3.6)
   - Flipper-PeerTalk (0.0.4)
-  - Flipper-RSocket (1.1.0):
-    - Flipper-Folly (~> 2.2)
-  - FlipperKit (0.54.0):
-    - FlipperKit/Core (= 0.54.0)
-  - FlipperKit/Core (0.54.0):
-    - Flipper (~> 0.54.0)
+  - Flipper-RSocket (1.3.1):
+    - Flipper-Folly (~> 2.5)
+  - FlipperKit (0.75.1):
+    - FlipperKit/Core (= 0.75.1)
+  - FlipperKit/Core (0.75.1):
+    - Flipper (~> 0.75.1)
     - FlipperKit/CppBridge
     - FlipperKit/FBCxxFollyDynamicConvert
     - FlipperKit/FBDefines
     - FlipperKit/FKPortForwarding
-  - FlipperKit/CppBridge (0.54.0):
-    - Flipper (~> 0.54.0)
-  - FlipperKit/FBCxxFollyDynamicConvert (0.54.0):
-    - Flipper-Folly (~> 2.2)
-  - FlipperKit/FBDefines (0.54.0)
-  - FlipperKit/FKPortForwarding (0.54.0):
+  - FlipperKit/CppBridge (0.75.1):
+    - Flipper (~> 0.75.1)
+  - FlipperKit/FBCxxFollyDynamicConvert (0.75.1):
+    - Flipper-Folly (~> 2.5)
+  - FlipperKit/FBDefines (0.75.1)
+  - FlipperKit/FKPortForwarding (0.75.1):
     - CocoaAsyncSocket (~> 7.6)
     - Flipper-PeerTalk (~> 0.0.4)
-  - FlipperKit/FlipperKitHighlightOverlay (0.54.0)
-  - FlipperKit/FlipperKitLayoutPlugin (0.54.0):
+  - FlipperKit/FlipperKitHighlightOverlay (0.75.1)
+  - FlipperKit/FlipperKitLayoutPlugin (0.75.1):
     - FlipperKit/Core
     - FlipperKit/FlipperKitHighlightOverlay
     - FlipperKit/FlipperKitLayoutTextSearchable
     - YogaKit (~> 1.18)
-  - FlipperKit/FlipperKitLayoutTextSearchable (0.54.0)
-  - FlipperKit/FlipperKitNetworkPlugin (0.54.0):
+  - FlipperKit/FlipperKitLayoutTextSearchable (0.75.1)
+  - FlipperKit/FlipperKitNetworkPlugin (0.75.1):
     - FlipperKit/Core
-  - FlipperKit/FlipperKitReactPlugin (0.54.0):
+  - FlipperKit/FlipperKitReactPlugin (0.75.1):
     - FlipperKit/Core
-  - FlipperKit/FlipperKitUserDefaultsPlugin (0.54.0):
+  - FlipperKit/FlipperKitUserDefaultsPlugin (0.75.1):
     - FlipperKit/Core
-  - FlipperKit/SKIOSNetworkPlugin (0.54.0):
+  - FlipperKit/SKIOSNetworkPlugin (0.75.1):
     - FlipperKit/Core
     - FlipperKit/FlipperKitNetworkPlugin
   - Folly (2020.01.13.00):
@@ -70,13 +69,9 @@ PODS:
     - DoubleConversion
     - glog
   - glog (0.3.5)
-  - google-cast-sdk (4.3.0):
-    - google-cast-sdk/Core (= 4.3.0)
-  - google-cast-sdk/Core (4.3.0)
+  - libevent (2.1.12)
   - OneSignal (2.15.2)
-  - OpenSSL-Universal (1.0.2.20):
-    - OpenSSL-Universal/Static (= 1.0.2.20)
-  - OpenSSL-Universal/Static (1.0.2.20)
+  - OpenSSL-Universal (1.1.180)
   - Permission-Notifications (2.2.2):
     - RNPermissions
   - Permission-PhotoLibrary (2.2.2):
@@ -247,7 +242,7 @@ PODS:
     - React-cxxreact (= 0.63.4)
     - React-jsi (= 0.63.4)
   - React-jsinspector (0.63.4)
-  - react-native-apollos-player (2.13.0):
+  - react-native-apollos-player (2.19.0):
     - React
   - react-native-config (0.11.7):
     - React
@@ -255,15 +250,6 @@ PODS:
     - React
   - react-native-geolocation-service (5.1.1):
     - React
-  - react-native-google-cast (3.3.0):
-    - React
-    - react-native-google-cast/Default (= 3.3.0)
-  - react-native-google-cast/Default (3.3.0):
-    - google-cast-sdk (<= 4.3.0)
-    - React
-    - react-native-google-cast/RNGoogleCast
-  - react-native-google-cast/RNGoogleCast (3.3.0):
-    - React
   - react-native-image-picker (3.1.4):
     - React-Core
   - react-native-maps (0.27.1):
@@ -286,8 +272,8 @@ PODS:
     - react-native-video/Video (= 5.0.2)
   - react-native-video/Video (5.0.2):
     - React
-  - react-native-webview (7.6.0):
-    - React
+  - react-native-webview (11.4.1):
+    - React-Core
   - React-RCTActionSheet (0.63.4):
     - React-Core/RCTActionSheetHeaders (= 0.63.4)
   - React-RCTAnimation (0.63.4):
@@ -400,7 +386,7 @@ PODS:
     - React-RCTVibration
     - ReactCommon/turbomodule/core
     - Yoga
-  - RNScreens (2.18.1):
+  - RNScreens (3.2.0):
     - React-Core
   - RNSVG (9.13.6):
     - React
@@ -413,25 +399,25 @@ DEPENDENCIES:
   - DoubleConversion (from `../node_modules/react-native/third-party-podspecs/DoubleConversion.podspec`)
   - FBLazyVector (from `../node_modules/react-native/Libraries/FBLazyVector`)
   - FBReactNativeSpec (from `../node_modules/react-native/Libraries/FBReactNativeSpec`)
-  - Flipper (~> 0.54.0)
+  - Flipper (= 0.75.1)
   - Flipper-DoubleConversion (= 1.1.7)
-  - Flipper-Folly (~> 2.2)
+  - Flipper-Folly (= 2.5.3)
   - Flipper-Glog (= 0.3.6)
   - Flipper-PeerTalk (~> 0.0.4)
-  - Flipper-RSocket (~> 1.1)
-  - FlipperKit (~> 0.54.0)
-  - FlipperKit/Core (~> 0.54.0)
-  - FlipperKit/CppBridge (~> 0.54.0)
-  - FlipperKit/FBCxxFollyDynamicConvert (~> 0.54.0)
-  - FlipperKit/FBDefines (~> 0.54.0)
-  - FlipperKit/FKPortForwarding (~> 0.54.0)
-  - FlipperKit/FlipperKitHighlightOverlay (~> 0.54.0)
-  - FlipperKit/FlipperKitLayoutPlugin (~> 0.54.0)
-  - FlipperKit/FlipperKitLayoutTextSearchable (~> 0.54.0)
-  - FlipperKit/FlipperKitNetworkPlugin (~> 0.54.0)
-  - FlipperKit/FlipperKitReactPlugin (~> 0.54.0)
-  - FlipperKit/FlipperKitUserDefaultsPlugin (~> 0.54.0)
-  - FlipperKit/SKIOSNetworkPlugin (~> 0.54.0)
+  - Flipper-RSocket (= 1.3.1)
+  - FlipperKit (= 0.75.1)
+  - FlipperKit/Core (= 0.75.1)
+  - FlipperKit/CppBridge (= 0.75.1)
+  - FlipperKit/FBCxxFollyDynamicConvert (= 0.75.1)
+  - FlipperKit/FBDefines (= 0.75.1)
+  - FlipperKit/FKPortForwarding (= 0.75.1)
+  - FlipperKit/FlipperKitHighlightOverlay (= 0.75.1)
+  - FlipperKit/FlipperKitLayoutPlugin (= 0.75.1)
+  - FlipperKit/FlipperKitLayoutTextSearchable (= 0.75.1)
+  - FlipperKit/FlipperKitNetworkPlugin (= 0.75.1)
+  - FlipperKit/FlipperKitReactPlugin (= 0.75.1)
+  - FlipperKit/FlipperKitUserDefaultsPlugin (= 0.75.1)
+  - FlipperKit/SKIOSNetworkPlugin (= 0.75.1)
   - Folly (from `../node_modules/react-native/third-party-podspecs/Folly.podspec`)
   - glog (from `../node_modules/react-native/third-party-podspecs/glog.podspec`)
   - Permission-Notifications (from `../node_modules/react-native-permissions/ios/Notifications.podspec`)
@@ -452,7 +438,6 @@ DEPENDENCIES:
   - react-native-config (from `../node_modules/react-native-config`)
   - "react-native-geolocation (from `../node_modules/@react-native-community/geolocation`)"
   - react-native-geolocation-service (from `../node_modules/react-native-geolocation-service`)
-  - react-native-google-cast (from `../node_modules/react-native-google-cast/ios`)
   - react-native-image-picker (from `../node_modules/react-native-image-picker`)
   - react-native-maps (from `../node_modules/react-native-maps`)
   - react-native-music-control (from `../node_modules/react-native-music-control`)
@@ -494,7 +479,6 @@ SPEC REPOS:
     - AstronomerAnalytics
     - boost-for-react-native
     - CocoaAsyncSocket
-    - CocoaLibEvent
     - Flipper
     - Flipper-DoubleConversion
     - Flipper-Folly
@@ -502,7 +486,7 @@ SPEC REPOS:
     - Flipper-PeerTalk
     - Flipper-RSocket
     - FlipperKit
-    - google-cast-sdk
+    - libevent
     - OneSignal
     - OpenSSL-Universal
     - YogaKit
@@ -552,8 +536,6 @@ EXTERNAL SOURCES:
     :path: "../node_modules/@react-native-community/geolocation"
   react-native-geolocation-service:
     :path: "../node_modules/react-native-geolocation-service"
-  react-native-google-cast:
-    :path: "../node_modules/react-native-google-cast/ios"
   react-native-image-picker:
     :path: "../node_modules/react-native-image-picker"
   react-native-maps:
@@ -630,22 +612,21 @@ SPEC CHECKSUMS:
   boost-for-react-native: 39c7adb57c4e60d6c5479dd8623128eb5b3f0f2c
   BVLinearGradient: e3aad03778a456d77928f594a649e96995f1c872
   CocoaAsyncSocket: 065fd1e645c7abab64f7a6a2007a48038fdc6a99
-  CocoaLibEvent: 2fab71b8bd46dd33ddb959f7928ec5909f838e3f
   DoubleConversion: cde416483dac037923206447da6e1454df403714
   FBLazyVector: 3bb422f41b18121b71783a905c10e58606f7dc3e
   FBReactNativeSpec: f2c97f2529dd79c083355182cc158c9f98f4bd6e
-  Flipper: be611d4b742d8c87fbae2ca5f44603a02539e365
+  Flipper: d3da1aa199aad94455ae725e9f3aa43f3ec17021
   Flipper-DoubleConversion: 38631e41ef4f9b12861c67d17cb5518d06badc41
-  Flipper-Folly: e4493b013c02d9347d5e0cb4d128680239f6c78a
+  Flipper-Folly: 755929a4f851b2fb2c347d533a23f191b008554c
   Flipper-Glog: 1dfd6abf1e922806c52ceb8701a3599a79a200a6
   Flipper-PeerTalk: 116d8f857dc6ef55c7a5a75ea3ceaafe878aadc9
-  Flipper-RSocket: 64e7431a55835eb953b0bf984ef3b90ae9fdddd7
-  FlipperKit: ab353d41aea8aae2ea6daaf813e67496642f3d7d
+  Flipper-RSocket: 127954abe8b162fcaf68d2134d34dc2bd7076154
+  FlipperKit: 8a20b5c5fcf9436cac58551dc049867247f64b00
   Folly: b73c3869541e86821df3c387eb0af5f65addfab4
   glog: 40a13f7840415b9a77023fbcae0f1e6f43192af3
-  google-cast-sdk: 57cd67b4a0966802b2738fcbbc103125c98cc8a1
+  libevent: 4049cae6c81cdb3654a443be001fb9bdceff7913
   OneSignal: 9531e385388565f4d31797ddadbe0fcc786430ec
-  OpenSSL-Universal: ff34003318d5e1163e9529b08470708e389ffcdd
+  OpenSSL-Universal: 1aa4f6a6ee7256b83db99ec1ccdaa80d10f9af9b
   Permission-Notifications: 9c6b5cc4f0e6599e9fc3395b77cebddc48f1be41
   Permission-PhotoLibrary: 8227a6ed9f6a971537afe63742d54f5f23a38fe2
   RCTRequired: 082f10cd3f905d6c124597fd1c14f6f2655ff65e
@@ -658,11 +639,10 @@ SPEC CHECKSUMS:
   React-jsi: a0418934cf48f25b485631deb27c64dc40fb4c31
   React-jsiexecutor: 93bd528844ad21dc07aab1c67cb10abae6df6949
   React-jsinspector: 58aef7155bc9a9683f5b60b35eccea8722a4f53a
-  react-native-apollos-player: 4367c015952b145a541c0904c52bf2fb973f8182
+  react-native-apollos-player: 90f374c58a059a9cfed7af498abf8877aaed5359
   react-native-config: 55548054279d92e0e4566ea15a8b9b81028ec342
   react-native-geolocation: c956aeb136625c23e0dce0467664af2c437888c9
   react-native-geolocation-service: f33626f1ae12381ca2ae60f98b2f5edd676bf95a
-  react-native-google-cast: 410619ef162b8b91815ecf7271502224998dee8e
   react-native-image-picker: 28d8d1f5a643119876b8b2c7d4d1dcfb2b232dd4
   react-native-maps: f4b89da81626ad7f151a8bfcb79733295d31ce5c
   react-native-music-control: dcfe5b61e56a15898c4618579cb8ce612c9d21a8
@@ -672,7 +652,7 @@ SPEC CHECKSUMS:
   react-native-safe-area-context: ef6f16c66b0797ecae1bf86c103dfb3dc16fc33d
   react-native-splash-screen: 200d11d188e2e78cea3ad319964f6142b6384865
   react-native-video: d01ed7ff1e38fa7dcc6c15c94cf505e661b7bfd0
-  react-native-webview: db4682f1698ab4b17a5e88f951031d203ff8aea8
+  react-native-webview: 4024b67e9c91810450a5960dff60ae708fd5acd1
   React-RCTActionSheet: 89a0ca9f4a06c1f93c26067af074ccdce0f40336
   React-RCTAnimation: 1bde3ecc0c104c55df246eda516e0deb03c4e49b
   React-RCTBlob: a97d378b527740cc667e03ebfa183a75231ab0f0
@@ -695,11 +675,11 @@ SPEC CHECKSUMS:
   RNInAppBrowser: 48b95ba7a4eaff5cc223bca338d3e319561dbd1b
   RNPermissions: 5df468064df661a4c8c017e2791ce90d7695eea5
   RNReanimated: 5231286440b796e09df3bfa5c1b12b02bfe07664
-  RNScreens: f7ad633b2e0190b77b6a7aab7f914fad6f198d8d
+  RNScreens: c277bfc4b5bb7c2fe977d19635df6f974f95dfd6
   RNSVG: 8ba35cbeb385a52fd960fd28db9d7d18b4c2974f
   Yoga: 4bd86afe9883422a7c4028c00e34790f560923d6
   YogaKit: f782866e155069a2cca2517aafea43200b01fd5a
 
-PODFILE CHECKSUM: ff0b6ccfe0571b896a44f129ac11790a8b809329
+PODFILE CHECKSUM: 6de27767413bc4f48feeecbc37bbce2b733bfe20
 
-COCOAPODS: 1.8.4
+COCOAPODS: 1.10.1
diff --git a/apolloschurchapp/ios/apollos.p8.enc b/apolloschurchapp/ios/apollos.p8.enc
index 20f497384324d2d2ba630234c671f48354b9e6ee..656fe3803394df0a6b533915116e5dc6fde6b650 100644
GIT binary patch
literal 288
zcmV+*0pI>pVQh3|WM5x%|3AkHzerWr%swYWXRI!3fK?LwhFj>V-#ry|vPPL$Rk`%5
zgWY)4+8tavyBa=_qXqtxvf-bQsva!mzNNww$Vj#VkX^(7TgohVs)Wt$xXyfDipip7
z3agGmdZmlIFGKZ3h&V=o$d?eaoGBs5LM|zsGJ#dc-|*W7d-Kx&P?hSZDugtG7FJQU
zv&vLc@Y=d3aFV2sH7b9>)=-wF8M2~<Gki$YRUX^m_t9SGeT*0b_O>hE?sTy?<Qe<1
zY^&cXQTv@z=eS7kncdqHN#Y{fQd>9ZSkL`@>2A`M8_ZGZsl2_(LnE0*6#aa&5z1`&
m9mOGW)<3bO<SB>401SM$$yB|2e0dL3XzPkN08$8<pV772qLx4a

literal 288
zcmV+*0pI>pVQh3|WM5y30uO~q6y^1I6XI1WVtdI~K++o{;TqMT!FmNr_kPu~kos_(
zEw=og7SmBjV5cG_P6fYlAS!#ZF13GnQ%)PC6w|(K3=*~;VD1A8&ae$FJ*W)du_!_q
z%M%y`-2H!+-{bv8NQejCqzE2ULs`ro*^*+B?Dh-o@}dFyTo;IHx4UYJm~Lq@1p*LA
z0DP#4@G4V5IBl{Lsc=8GSR#XwV@+4!?98qnu*uo&x;vLFcKd1lbea7G8V$Fbq^v6g
z<9YTKpn7bZFns;S7~Zm7)-Gecd)+wRjK7u~hEo(!FLl_=s+)O7D9TWjXSpBgg6;1c
mf3wmoIH>A$uAvo-ByCahf*#Wt@PyuMA)?Xw-ezmg4t=TVE{ci(

diff --git a/apolloschurchapp/ios/apolloschurchapp.xcodeproj/project.pbxproj b/apolloschurchapp/ios/apolloschurchapp.xcodeproj/project.pbxproj
index 00180682..c429baab 100644
--- a/apolloschurchapp/ios/apolloschurchapp.xcodeproj/project.pbxproj
+++ b/apolloschurchapp/ios/apolloschurchapp.xcodeproj/project.pbxproj
@@ -290,8 +290,8 @@
 				00E356EA1AD99517003FC87E /* Sources */,
 				00E356EB1AD99517003FC87E /* Frameworks */,
 				00E356EC1AD99517003FC87E /* Resources */,
-				C7A5ADB714711CE3B4CC0EAA /* [CP] Embed Pods Frameworks */,
 				892ED59C47CEB9B13B75EC71 /* [CP] Copy Pods Resources */,
+				3E2635F41ADA8FBB628BB92D /* [CP] Embed Pods Frameworks */,
 			);
 			buildRules = (
 			);
@@ -308,12 +308,13 @@
 			buildConfigurationList = 13B07F931A680F5B00A75B9A /* Build configuration list for PBXNativeTarget "apolloschurchapp" */;
 			buildPhases = (
 				DEEF24CE4F76789E5E8C369D /* [CP] Check Pods Manifest.lock */,
+				4C006E292656868900EE9158 /* Start Packager */,
 				13B07F871A680F5B00A75B9A /* Sources */,
 				13B07F8C1A680F5B00A75B9A /* Frameworks */,
 				13B07F8E1A680F5B00A75B9A /* Resources */,
 				00DD1BFF1BD5951E006B06BC /* Bundle React Native code and images */,
 				43D579D8398224D7B09F58F6 /* [CP] Copy Pods Resources */,
-				3C01FFABD3A7274D34564996 /* [CP] Embed Pods Frameworks */,
+				84E19E444A56C704431362B6 /* [CP] Embed Pods Frameworks */,
 			);
 			buildRules = (
 			);
@@ -514,22 +515,22 @@
 			shellPath = /bin/sh;
 			shellScript = "export NODE_BINARY=node\n../node_modules/react-native/scripts/react-native-xcode.sh";
 		};
-		3C01FFABD3A7274D34564996 /* [CP] Embed Pods Frameworks */ = {
+		3E2635F41ADA8FBB628BB92D /* [CP] Embed Pods Frameworks */ = {
 			isa = PBXShellScriptBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
 			);
 			inputPaths = (
-				"${PODS_ROOT}/Target Support Files/Pods-apolloschurchapp/Pods-apolloschurchapp-frameworks.sh",
-				"${PODS_ROOT}/google-cast-sdk/GoogleCastSDK-ios-4.3.0/GoogleCast.framework",
+				"${PODS_ROOT}/Target Support Files/Pods-apolloschurchapp-apolloschurchappTests/Pods-apolloschurchapp-apolloschurchappTests-frameworks.sh",
+				"${PODS_XCFRAMEWORKS_BUILD_DIR}/OpenSSL/OpenSSL.framework/OpenSSL",
 			);
 			name = "[CP] Embed Pods Frameworks";
 			outputPaths = (
-				"${TARGET_BUILD_DIR}/${FRAMEWORKS_FOLDER_PATH}/GoogleCast.framework",
+				"${TARGET_BUILD_DIR}/${FRAMEWORKS_FOLDER_PATH}/OpenSSL.framework",
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 			shellPath = /bin/sh;
-			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-apolloschurchapp/Pods-apolloschurchapp-frameworks.sh\"\n";
+			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-apolloschurchapp-apolloschurchappTests/Pods-apolloschurchapp-apolloschurchappTests-frameworks.sh\"\n";
 			showEnvVarsInLog = 0;
 		};
 		43D579D8398224D7B09F58F6 /* [CP] Copy Pods Resources */ = {
@@ -550,6 +551,43 @@
 			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-apolloschurchapp/Pods-apolloschurchapp-resources.sh\"\n";
 			showEnvVarsInLog = 0;
 		};
+		4C006E292656868900EE9158 /* Start Packager */ = {
+			isa = PBXShellScriptBuildPhase;
+			buildActionMask = 2147483647;
+			files = (
+			);
+			inputFileListPaths = (
+			);
+			inputPaths = (
+			);
+			name = "Start Packager";
+			outputFileListPaths = (
+			);
+			outputPaths = (
+			);
+			runOnlyForDeploymentPostprocessing = 0;
+			shellPath = /bin/sh;
+			shellScript = "export RCT_METRO_PORT=\"${RCT_METRO_PORT:=8081}\"\necho \"export RCT_METRO_PORT=${RCT_METRO_PORT}\" > \"${SRCROOT}/../node_modules/react-native/scripts/.packager.env\"\nif [ -z \"${RCT_NO_LAUNCH_PACKAGER+xxx}\" ] ; then\n  if nc -w 5 -z localhost ${RCT_METRO_PORT} ; then\n    if ! curl -s \"http://localhost:${RCT_METRO_PORT}/status\" | grep -q \"packager-status:running\" ; then\n      echo \"Port ${RCT_METRO_PORT} already in use, packager is either not running or not running correctly\"\n      exit 2\n    fi\n  else\n    open \"$SRCROOT/../node_modules/react-native/scripts/launchPackager.command\" || echo \"Can't start packager automatically\"\n  fi\nfi\n";
+			showEnvVarsInLog = 0;
+		};
+		84E19E444A56C704431362B6 /* [CP] Embed Pods Frameworks */ = {
+			isa = PBXShellScriptBuildPhase;
+			buildActionMask = 2147483647;
+			files = (
+			);
+			inputPaths = (
+				"${PODS_ROOT}/Target Support Files/Pods-apolloschurchapp/Pods-apolloschurchapp-frameworks.sh",
+				"${PODS_XCFRAMEWORKS_BUILD_DIR}/OpenSSL/OpenSSL.framework/OpenSSL",
+			);
+			name = "[CP] Embed Pods Frameworks";
+			outputPaths = (
+				"${TARGET_BUILD_DIR}/${FRAMEWORKS_FOLDER_PATH}/OpenSSL.framework",
+			);
+			runOnlyForDeploymentPostprocessing = 0;
+			shellPath = /bin/sh;
+			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-apolloschurchapp/Pods-apolloschurchapp-frameworks.sh\"\n";
+			showEnvVarsInLog = 0;
+		};
 		892ED59C47CEB9B13B75EC71 /* [CP] Copy Pods Resources */ = {
 			isa = PBXShellScriptBuildPhase;
 			buildActionMask = 2147483647;
@@ -612,24 +650,6 @@
 			shellScript = "diff \"${PODS_PODFILE_DIR_PATH}/Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null\nif [ $? != 0 ] ; then\n    # print error to STDERR\n    echo \"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\" >&2\n    exit 1\nfi\n# This output is used by Xcode 'outputs' to avoid re-running this script phase.\necho \"SUCCESS\" > \"${SCRIPT_OUTPUT_FILE_0}\"\n";
 			showEnvVarsInLog = 0;
 		};
-		C7A5ADB714711CE3B4CC0EAA /* [CP] Embed Pods Frameworks */ = {
-			isa = PBXShellScriptBuildPhase;
-			buildActionMask = 2147483647;
-			files = (
-			);
-			inputPaths = (
-				"${PODS_ROOT}/Target Support Files/Pods-apolloschurchapp-apolloschurchappTests/Pods-apolloschurchapp-apolloschurchappTests-frameworks.sh",
-				"${PODS_ROOT}/google-cast-sdk/GoogleCastSDK-ios-4.3.0/GoogleCast.framework",
-			);
-			name = "[CP] Embed Pods Frameworks";
-			outputPaths = (
-				"${TARGET_BUILD_DIR}/${FRAMEWORKS_FOLDER_PATH}/GoogleCast.framework",
-			);
-			runOnlyForDeploymentPostprocessing = 0;
-			shellPath = /bin/sh;
-			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-apolloschurchapp-apolloschurchappTests/Pods-apolloschurchapp-apolloschurchappTests-frameworks.sh\"\n";
-			showEnvVarsInLog = 0;
-		};
 		DEEF24CE4F76789E5E8C369D /* [CP] Check Pods Manifest.lock */ = {
 			isa = PBXShellScriptBuildPhase;
 			buildActionMask = 2147483647;
@@ -767,7 +787,7 @@
 				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
 				CLANG_ENABLE_MODULES = YES;
 				CODE_SIGN_ENTITLEMENTS = apolloschurchapp/apolloschurchapp.entitlements;
-				CODE_SIGN_IDENTITY = "Apple Development: Apollos Apps (58685TNK9H)";
+				CODE_SIGN_IDENTITY = "iPhone Developer";
 				CODE_SIGN_STYLE = Manual;
 				CURRENT_PROJECT_VERSION = 507;
 				DEAD_CODE_STRIPPING = YES;
diff --git a/apolloschurchapp/ios/apolloschurchapp.xcworkspace/xcshareddata/xcschemes/apolloschurchapp-tvOS.xcscheme b/apolloschurchapp/ios/apolloschurchapp.xcworkspace/xcshareddata/xcschemes/apolloschurchapp-tvOS.xcscheme
new file mode 100644
index 00000000..a24d4f12
--- /dev/null
+++ b/apolloschurchapp/ios/apolloschurchapp.xcworkspace/xcshareddata/xcschemes/apolloschurchapp-tvOS.xcscheme
@@ -0,0 +1,88 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<Scheme
+   LastUpgradeVersion = "1250"
+   version = "1.3">
+   <BuildAction
+      parallelizeBuildables = "YES"
+      buildImplicitDependencies = "YES">
+      <BuildActionEntries>
+         <BuildActionEntry
+            buildForTesting = "YES"
+            buildForRunning = "YES"
+            buildForProfiling = "YES"
+            buildForArchiving = "YES"
+            buildForAnalyzing = "YES">
+            <BuildableReference
+               BuildableIdentifier = "primary"
+               BlueprintIdentifier = "2D02E47A1E0B4A5D006451C7"
+               BuildableName = "apolloschurchapp-tvOS.app"
+               BlueprintName = "apolloschurchapp-tvOS"
+               ReferencedContainer = "container:apolloschurchapp.xcodeproj">
+            </BuildableReference>
+         </BuildActionEntry>
+      </BuildActionEntries>
+   </BuildAction>
+   <TestAction
+      buildConfiguration = "Debug"
+      selectedDebuggerIdentifier = "Xcode.DebuggerFoundation.Debugger.LLDB"
+      selectedLauncherIdentifier = "Xcode.DebuggerFoundation.Launcher.LLDB"
+      shouldUseLaunchSchemeArgsEnv = "YES">
+      <Testables>
+         <TestableReference
+            skipped = "NO">
+            <BuildableReference
+               BuildableIdentifier = "primary"
+               BlueprintIdentifier = "2D02E48F1E0B4A5D006451C7"
+               BuildableName = "apolloschurchapp-tvOSTests.xctest"
+               BlueprintName = "apolloschurchapp-tvOSTests"
+               ReferencedContainer = "container:apolloschurchapp.xcodeproj">
+            </BuildableReference>
+         </TestableReference>
+      </Testables>
+   </TestAction>
+   <LaunchAction
+      buildConfiguration = "Debug"
+      selectedDebuggerIdentifier = "Xcode.DebuggerFoundation.Debugger.LLDB"
+      selectedLauncherIdentifier = "Xcode.DebuggerFoundation.Launcher.LLDB"
+      launchStyle = "0"
+      useCustomWorkingDirectory = "NO"
+      ignoresPersistentStateOnLaunch = "NO"
+      debugDocumentVersioning = "YES"
+      debugServiceExtension = "internal"
+      allowLocationSimulation = "YES">
+      <BuildableProductRunnable
+         runnableDebuggingMode = "0">
+         <BuildableReference
+            BuildableIdentifier = "primary"
+            BlueprintIdentifier = "2D02E47A1E0B4A5D006451C7"
+            BuildableName = "apolloschurchapp-tvOS.app"
+            BlueprintName = "apolloschurchapp-tvOS"
+            ReferencedContainer = "container:apolloschurchapp.xcodeproj">
+         </BuildableReference>
+      </BuildableProductRunnable>
+   </LaunchAction>
+   <ProfileAction
+      buildConfiguration = "Release"
+      shouldUseLaunchSchemeArgsEnv = "YES"
+      savedToolIdentifier = ""
+      useCustomWorkingDirectory = "NO"
+      debugDocumentVersioning = "YES">
+      <BuildableProductRunnable
+         runnableDebuggingMode = "0">
+         <BuildableReference
+            BuildableIdentifier = "primary"
+            BlueprintIdentifier = "2D02E47A1E0B4A5D006451C7"
+            BuildableName = "apolloschurchapp-tvOS.app"
+            BlueprintName = "apolloschurchapp-tvOS"
+            ReferencedContainer = "container:apolloschurchapp.xcodeproj">
+         </BuildableReference>
+      </BuildableProductRunnable>
+   </ProfileAction>
+   <AnalyzeAction
+      buildConfiguration = "Debug">
+   </AnalyzeAction>
+   <ArchiveAction
+      buildConfiguration = "Release"
+      revealArchiveInOrganizer = "YES">
+   </ArchiveAction>
+</Scheme>
diff --git a/apolloschurchapp/ios/apolloschurchapp.xcworkspace/xcshareddata/xcschemes/apolloschurchappprod.xcscheme b/apolloschurchapp/ios/apolloschurchapp.xcworkspace/xcshareddata/xcschemes/apolloschurchappprod.xcscheme
deleted file mode 100644
index 572c21d6..00000000
--- a/apolloschurchapp/ios/apolloschurchapp.xcworkspace/xcshareddata/xcschemes/apolloschurchappprod.xcscheme
+++ /dev/null
@@ -1,134 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<Scheme
-   LastUpgradeVersion = "1170"
-   version = "1.3">
-   <BuildAction
-      parallelizeBuildables = "NO"
-      buildImplicitDependencies = "YES">
-      <PreActions>
-         <ExecutionAction
-            ActionType = "Xcode.IDEStandardExecutionActionsCore.ExecutionActionType.ShellScriptAction">
-            <ActionContent
-               title = "Run Script"
-               scriptText = "echo &quot;.env.production&quot; &gt; /tmp/envfile&#10;">
-            </ActionContent>
-         </ExecutionAction>
-      </PreActions>
-      <BuildActionEntries>
-         <BuildActionEntry
-            buildForTesting = "YES"
-            buildForRunning = "YES"
-            buildForProfiling = "YES"
-            buildForArchiving = "YES"
-            buildForAnalyzing = "YES">
-            <BuildableReference
-               BuildableIdentifier = "primary"
-               BlueprintIdentifier = "83CBBA2D1A601D0E00E9B192"
-               BuildableName = "libReact.a"
-               BlueprintName = "React"
-               ReferencedContainer = "container:../node_modules/react-native/React/React.xcodeproj">
-            </BuildableReference>
-         </BuildActionEntry>
-         <BuildActionEntry
-            buildForTesting = "YES"
-            buildForRunning = "YES"
-            buildForProfiling = "YES"
-            buildForArchiving = "YES"
-            buildForAnalyzing = "YES">
-            <BuildableReference
-               BuildableIdentifier = "primary"
-               BlueprintIdentifier = "13B07F861A680F5B00A75B9A"
-               BuildableName = "apolloschurchapp.app"
-               BlueprintName = "apolloschurchapp"
-               ReferencedContainer = "container:apolloschurchapp.xcodeproj">
-            </BuildableReference>
-         </BuildActionEntry>
-         <BuildActionEntry
-            buildForTesting = "YES"
-            buildForRunning = "YES"
-            buildForProfiling = "NO"
-            buildForArchiving = "NO"
-            buildForAnalyzing = "YES">
-            <BuildableReference
-               BuildableIdentifier = "primary"
-               BlueprintIdentifier = "00E356ED1AD99517003FC87E"
-               BuildableName = "apolloschurchappTests.xctest"
-               BlueprintName = "apolloschurchappTests"
-               ReferencedContainer = "container:apolloschurchapp.xcodeproj">
-            </BuildableReference>
-         </BuildActionEntry>
-      </BuildActionEntries>
-   </BuildAction>
-   <TestAction
-      buildConfiguration = "Debug"
-      selectedDebuggerIdentifier = "Xcode.DebuggerFoundation.Debugger.LLDB"
-      selectedLauncherIdentifier = "Xcode.DebuggerFoundation.Launcher.LLDB"
-      shouldUseLaunchSchemeArgsEnv = "YES">
-      <MacroExpansion>
-         <BuildableReference
-            BuildableIdentifier = "primary"
-            BlueprintIdentifier = "13B07F861A680F5B00A75B9A"
-            BuildableName = "apolloschurchapp.app"
-            BlueprintName = "apolloschurchapp"
-            ReferencedContainer = "container:apolloschurchapp.xcodeproj">
-         </BuildableReference>
-      </MacroExpansion>
-      <Testables>
-         <TestableReference
-            skipped = "NO">
-            <BuildableReference
-               BuildableIdentifier = "primary"
-               BlueprintIdentifier = "00E356ED1AD99517003FC87E"
-               BuildableName = "apolloschurchappTests.xctest"
-               BlueprintName = "apolloschurchappTests"
-               ReferencedContainer = "container:apolloschurchapp.xcodeproj">
-            </BuildableReference>
-         </TestableReference>
-      </Testables>
-   </TestAction>
-   <LaunchAction
-      buildConfiguration = "Release"
-      selectedDebuggerIdentifier = "Xcode.DebuggerFoundation.Debugger.LLDB"
-      selectedLauncherIdentifier = "Xcode.DebuggerFoundation.Launcher.LLDB"
-      launchStyle = "0"
-      useCustomWorkingDirectory = "NO"
-      ignoresPersistentStateOnLaunch = "NO"
-      debugDocumentVersioning = "YES"
-      debugServiceExtension = "internal"
-      allowLocationSimulation = "YES">
-      <BuildableProductRunnable
-         runnableDebuggingMode = "0">
-         <BuildableReference
-            BuildableIdentifier = "primary"
-            BlueprintIdentifier = "13B07F861A680F5B00A75B9A"
-            BuildableName = "apolloschurchapp.app"
-            BlueprintName = "apolloschurchapp"
-            ReferencedContainer = "container:apolloschurchapp.xcodeproj">
-         </BuildableReference>
-      </BuildableProductRunnable>
-   </LaunchAction>
-   <ProfileAction
-      buildConfiguration = "Release"
-      shouldUseLaunchSchemeArgsEnv = "YES"
-      savedToolIdentifier = ""
-      useCustomWorkingDirectory = "NO"
-      debugDocumentVersioning = "YES">
-      <BuildableProductRunnable
-         runnableDebuggingMode = "0">
-         <BuildableReference
-            BuildableIdentifier = "primary"
-            BlueprintIdentifier = "13B07F861A680F5B00A75B9A"
-            BuildableName = "apolloschurchapp.app"
-            BlueprintName = "apolloschurchapp"
-            ReferencedContainer = "container:apolloschurchapp.xcodeproj">
-         </BuildableReference>
-      </BuildableProductRunnable>
-   </ProfileAction>
-   <AnalyzeAction
-      buildConfiguration = "Debug">
-   </AnalyzeAction>
-   <ArchiveAction
-      buildConfiguration = "Release"
-      revealArchiveInOrganizer = "YES">
-   </ArchiveAction>
-</Scheme>
diff --git a/apolloschurchapp/ios/apolloschurchapp/AppDelegate.m b/apolloschurchapp/ios/apolloschurchapp/AppDelegate.m
index f246ea29..9267aa24 100644
--- a/apolloschurchapp/ios/apolloschurchapp/AppDelegate.m
+++ b/apolloschurchapp/ios/apolloschurchapp/AppDelegate.m
@@ -12,7 +12,6 @@
 #import <React/RCTBundleURLProvider.h>
 #import <React/RCTRootView.h>
 #import <React/RCTLinkingManager.h>
-#import <GoogleCast/GoogleCast.h>
 #import "RNSplashScreen.h"
 
 #ifdef FB_SONARKIT_ENABLED
@@ -64,12 +63,6 @@ static void InitializeFlipper(UIApplication *application) {
                                                    moduleName:@"apolloschurchapp"
                                             initialProperties:nil];
 
-  // Initialize Google Cast
-  GCKDiscoveryCriteria *criteria = [[GCKDiscoveryCriteria alloc] initWithApplicationID:kGCKDefaultMediaReceiverApplicationID];
-  GCKCastOptions* options = [[GCKCastOptions alloc] initWithDiscoveryCriteria:criteria];
-  options.physicalVolumeButtonsWillControlDeviceVolume = YES;
-  [GCKCastContext setSharedInstanceWithOptions:options];
-
   rootView.backgroundColor = [[UIColor alloc] initWithRed:1.0f green:1.0f blue:1.0f alpha:1];
 
   self.window = [[UIWindow alloc] initWithFrame:[UIScreen mainScreen].bounds];
diff --git a/apolloschurchapp/ios/apolloschurchapp/Info.plist b/apolloschurchapp/ios/apolloschurchapp/Info.plist
index cc826b79..41c62da6 100644
--- a/apolloschurchapp/ios/apolloschurchapp/Info.plist
+++ b/apolloschurchapp/ios/apolloschurchapp/Info.plist
@@ -57,18 +57,12 @@
 			</dict>
 		</dict>
 	</dict>
-	<key>NSBluetoothAlwaysUsageDescription</key>
-	<string>$(PRODUCT_NAME) would like access to bluetooth (for playing audio)</string>
-	<key>NSBluetoothPeripheralUsageDescription</key>
-	<string>$(PRODUCT_NAME) would like access to bluetooth (for playing audio)</string>
 	<key>NSLocationAlwaysUsageDescription</key>
 	<string>$(PRODUCT_NAME) would like to use your location for determining your closest campus</string>
 	<key>NSLocationAlwaysAndWhenInUseUsageDescription</key>
 	<string>$(PRODUCT_NAME) would like to use your location for determining your closest campus</string>
 	<key>NSLocationWhenInUseUsageDescription</key>
 	<string>$(PRODUCT_NAME) would like to use your location for determining your closest campus</string>
-	<key>NSMicrophoneUsageDescription</key>
-	<string>$(PRODUCT_NAME) would like to access your microphone (for videos)</string>
 	<key>NSPhotoLibraryUsageDescription</key>
 	<string>$(PRODUCT_NAME) would like to access your photos</string>
 	<key>UIAppFonts</key>
diff --git a/apolloschurchapp/ios/apolloschurchapp/apolloschurchapp.entitlements b/apolloschurchapp/ios/apolloschurchapp/apolloschurchapp.entitlements
index 6c79704c..676be42e 100644
--- a/apolloschurchapp/ios/apolloschurchapp/apolloschurchapp.entitlements
+++ b/apolloschurchapp/ios/apolloschurchapp/apolloschurchapp.entitlements
@@ -4,8 +4,6 @@
 <dict>
 	<key>aps-environment</key>
 	<string>development</string>
-	<key>com.apple.developer.networking.wifi-info</key>
-	<true/>
 	<key>com.apple.developer.associated-domains</key>
 	<array>
 		<string>applink:$(APP_DATA_URL)</string>
diff --git a/apolloschurchapp/package.json b/apolloschurchapp/package.json
index e4caeb5c..b912d4b9 100644
--- a/apolloschurchapp/package.json
+++ b/apolloschurchapp/package.json
@@ -17,11 +17,10 @@
     "unlink-packages": "node ./scripts/link-packages remove && rm -rf ./node_modules",
     "generate-stories": "rnstl --searchDir ./src --pattern **/*.stories.js",
     "lint": "eslint ./src --ext .js",
-    "get-schema": "eval $(grep ^APP_DATA_URL .env) && sleep 10 && get-graphql-schema $APP_DATA_URL > schema.graphql",
     "postinstall": "jetify && yarn pods",
     "pods": "(bundle install && cd ios && bundle exec pod install --repo-update)",
     "start": "yarn start:dev",
-    "start:dev": "yarn generate-stories & yarn get-schema && node ./scripts/get-introspection-data.js && react-native start",
+    "start:dev": "yarn generate-stories && node ./scripts/get-introspection-data.js && react-native start",
     "test": "TZ=UTC jest",
     "icons": "react-native set-icon --path",
     "splash": "react-native set-splash --path"
@@ -46,23 +45,23 @@
   "dependencies": {
     "@apollo/client": "3.3.0-rc.2",
     "@apollo/react-hooks": "^3.1.3",
-    "@apollosproject/config": "^2.13.0",
+    "@apollosproject/config": "^2.19.0",
     "@apollosproject/react-native-airplay-btn": "^0.2.0",
-    "@apollosproject/ui-analytics": "^2.13.0",
-    "@apollosproject/ui-auth": "^2.13.0",
-    "@apollosproject/ui-connected": "^2.13.0",
-    "@apollosproject/ui-fragments": "^2.13.0",
-    "@apollosproject/ui-htmlview": "^2.13.0",
-    "@apollosproject/ui-kit": "^2.13.0",
-    "@apollosproject/ui-mapview": "^2.13.0",
-    "@apollosproject/ui-media-player": "^2.13.0",
-    "@apollosproject/ui-notifications": "^2.13.0",
-    "@apollosproject/ui-onboarding": "^2.13.0",
-    "@apollosproject/ui-passes": "^2.13.0",
-    "@apollosproject/ui-prayer": "^2.13.0",
-    "@apollosproject/ui-scripture": "^2.13.0",
-    "@apollosproject/ui-storybook": "^2.13.0",
-    "@apollosproject/ui-test-utils": "^2.13.0",
+    "@apollosproject/ui-analytics": "^2.19.0",
+    "@apollosproject/ui-auth": "^2.19.0",
+    "@apollosproject/ui-connected": "^2.19.0",
+    "@apollosproject/ui-fragments": "^2.19.0",
+    "@apollosproject/ui-htmlview": "^2.19.0",
+    "@apollosproject/ui-kit": "^2.19.0",
+    "@apollosproject/ui-mapview": "^2.19.0",
+    "@apollosproject/ui-media-player": "^2.19.0",
+    "@apollosproject/ui-notifications": "^2.19.0",
+    "@apollosproject/ui-onboarding": "^2.19.0",
+    "@apollosproject/ui-passes": "^2.19.0",
+    "@apollosproject/ui-prayer": "^2.19.0",
+    "@apollosproject/ui-scripture": "^2.19.0",
+    "@apollosproject/ui-storybook": "^2.19.0",
+    "@apollosproject/ui-test-utils": "^2.19.0",
     "@gorhom/bottom-sheet": "3.4.1",
     "@metarouter/analytics-react-native": "^1.1.5",
     "@react-native-community/async-storage": "^1.5.1",
@@ -96,12 +95,10 @@
     "react-native-device-info": "^4.0.1",
     "react-native-geolocation-service": "^5.1.1",
     "react-native-gesture-handler": "^1.10.3",
-    "react-native-google-cast": "^3.3.0",
     "react-native-image-picker": "^3.1.4",
     "react-native-inappbrowser-reborn": "^3.0.0",
     "react-native-linear-gradient": "^2.5.4",
     "react-native-maps": "^0.27.1",
-    "react-native-modal-datetime-picker": "9.0.0",
     "react-native-music-control": "0.10.8",
     "react-native-onesignal": "3.9.1",
     "react-native-passkit-wallet": "^0.1.4",
@@ -109,19 +106,19 @@
     "react-native-reanimated": "^2.0.0",
     "react-native-safari-view": "2.1.0",
     "react-native-safe-area-context": "^3.0.7",
-    "react-native-screens": "^2.18.1",
+    "react-native-screens": "3.2.0",
     "react-native-splash-screen": "^3.2.0",
     "react-native-svg": "^9.4.0",
     "react-native-video": "^5.0.0",
     "react-native-video-controls": "2.2.3",
-    "react-native-webview": "^7.0.0",
+    "react-native-webview": "^11.0.0",
     "recompose": "^0.30.0",
     "rn-fetch-blob": "^0.10.16",
     "stream": "^0.0.2",
     "yup": "0.26.6"
   },
   "devDependencies": {
-    "@apollosproject/eslint-config": "^2.13.0",
+    "@apollosproject/eslint-config": "^2.19.0",
     "@babel/core": "^7.8.4",
     "@babel/runtime": "^7.8.4",
     "@bam.tech/react-native-make": "^3.0.0",
@@ -145,7 +142,6 @@
     "eslint-plugin-react-hooks": "^4.0.2",
     "eslint-plugin-react-native": "^3.2.1",
     "get-dev-paths": "^0.1.0",
-    "get-graphql-schema": "^2.1.2",
     "graphql-import": "^0.7.1",
     "jest": "^25.1.0",
     "jetifier": "^1.6.4",
diff --git a/apolloschurchapp/scripts/init.sh b/apolloschurchapp/scripts/init.sh
index 6e73f7c9..5a8c884a 100755
--- a/apolloschurchapp/scripts/init.sh
+++ b/apolloschurchapp/scripts/init.sh
@@ -3,5 +3,34 @@ if test -f .env; then
 	echo ".env file already exists!"
 	exit 1
 fi
+
+echo "You will need the following before beginning:
+Google Maps API Key
+
+Are you ready to proceed? [y/n]: "
+read -r ANSWER
+if $ANSWER != "y"; then
+	exit 1
+fi
+
+# config variables
+echo "Google Maps API Key: "
+read -r GOOGLE
+
 echo "APP_DATA_URL=http://localhost:4000
-GOOGLE_MAPS_API_KEY=" >.env
+GOOGLE_MAPS_API_KEY=$GOOGLE" >.env
+
+# remove template encrypted files
+rm .env.shared.enc
+rm android/key.json.enc
+rm android/app/apollos.keystore.enc
+rm ios/apollos.p8.enc
+
+# app name
+echo "App name: "
+read -r APP
+CLEAN_APP=$(echo "$APP" | tr -d '[:space:]')
+npx react-native-rename "$CLEAN_APP"
+
+sed -i "" -E "s/Apollos Church/$APP/g" apolloschurchapp/ios/Info.plist
+sed -i "" -E "s/Apollos Church/$APP/g" apolloschurchapp/android/app/src/main/res/values/strings.xml
diff --git a/apolloschurchapp/src/Providers.js b/apolloschurchapp/src/Providers.js
index 38982089..bd1f2b26 100644
--- a/apolloschurchapp/src/Providers.js
+++ b/apolloschurchapp/src/Providers.js
@@ -18,7 +18,19 @@ const AppProviders = (props) => (
   <ClientProvider {...props}>
     <NotificationsProvider
       oneSignalKey={ApollosConfig.ONE_SIGNAL_KEY}
+      // TODO deprecated prop
       navigate={NavigationService.navigate}
+      handleExternalLink={(url) => {
+        const path = url.split('app-link/')[1];
+        const [route, location] = path.split('/');
+        if (route === 'content')
+          NavigationService.navigate('ContentSingle', { itemId: location });
+        if (route === 'nav')
+          NavigationService.navigate(
+            // turns "home" into "Home"
+            location[0].toUpperCase() + location.substring(1)
+          );
+      }}
       actionMap={{
         // accept a follow request when someone taps "accept" in a follow request push notification
         acceptFollowRequest: ({ requestPersonId }) =>
diff --git a/apolloschurchapp/src/content-feed/content-feed.tests.js b/apolloschurchapp/src/content-feed/content-feed.tests.js
deleted file mode 100644
index 3c967931..00000000
--- a/apolloschurchapp/src/content-feed/content-feed.tests.js
+++ /dev/null
@@ -1,119 +0,0 @@
-import React from 'react';
-
-import { renderWithApolloData, Providers } from '@apollosproject/ui-test-utils';
-import { MockedProvider } from '@apollo/client/testing';
-import { GET_CONTENT_CARD } from '@apollosproject/ui-connected';
-import GET_CONTENT_FEED from './getContentFeed';
-
-import ContentFeed from './index';
-
-describe('content feed query component', () => {
-  it('renders a feedview after successful query', async () => {
-    const mock = {
-      request: {
-        query: GET_CONTENT_FEED,
-        variables: { itemId: 'ContentChannel:123' },
-      },
-      result: {
-        data: {
-          node: {
-            __typename: 'ContentChannel',
-            childContentItemsConnection: {
-              pageInfo: {
-                endCursor: 'blablalba',
-                __typename: 'PaginationInfo',
-              },
-              __typename: 'ContentItemsConnection',
-              edges: [
-                {
-                  __typename: 'ContentItemsConnectionEdge',
-                  node: {
-                    __typename: 'UniversalContentItem',
-                    id: 'UniversalContentItem:d57994350b9d213866b24dea3a97433d',
-                    coverImage: null,
-                    parentChannel: {
-                      id: 'ContentChannel:4f68015ba18662a7409d1219a4ce013e',
-                      name: 'Editorial',
-                      iconName: 'text',
-                      __typename: 'ContentChannel',
-                    },
-                    title: 'Mea Animal Aperiam Ornatus Eu',
-                    hyphenatedTitle: 'Mea Animal Aperiam Ornatus Eu',
-                    summary: 'Bla bla bla',
-                    theme: null,
-                    isLiked: false,
-                    likedCount: 0,
-                    videos: [],
-                    audios: [],
-                  },
-                },
-                {
-                  __typename: 'ContentItemsConnectionEdge',
-                  node: {
-                    __typename: 'UniversalContentItem',
-                    id: 'UniversalContentItem:b36e55d803443431e96bb4b5068147ec',
-                    coverImage: null,
-                    parentChannel: {
-                      id: 'ContentChannel:4f68015ba18662a7409d1219a4ce013e',
-                      name: 'Editorial',
-                      iconName: 'text',
-                      __typename: 'ContentChannel',
-                    },
-                    title: 'Probo Senserit Id Mea, Ut Sed Malis Postea,',
-                    hyphenatedTitle:
-                      'Probo Senserit Id Mea, Ut Sed Malis Postea,',
-                    summary: 'Bla bla bla',
-                    theme: null,
-                    isLiked: false,
-                    likedCount: 0,
-                    videos: [],
-                    audios: [],
-                  },
-                },
-              ],
-            },
-          },
-        },
-      },
-    };
-
-    const additionalMocks = mock.result.data.node.childContentItemsConnection.edges.map(
-      ({ node }) => ({
-        request: {
-          query: GET_CONTENT_CARD,
-          variables: { contentId: node.id },
-        },
-        result: {
-          data: {
-            node: {
-              ...node,
-              coverImage: {
-                name: 'Boom',
-                ...node.coverImage,
-              },
-            },
-          },
-        },
-      })
-    );
-
-    const initialTree = await renderWithApolloData(
-      <Providers
-        MockedProvider={MockedProvider}
-        mocks={[mock, ...additionalMocks]}
-      >
-        <ContentFeed route={{ params: { itemId: 'ContentChannel:123' } }} />
-      </Providers>
-    );
-    const tree = await renderWithApolloData(
-      <Providers
-        MockedProvider={MockedProvider}
-        mocks={[mock, ...additionalMocks]}
-      >
-        <ContentFeed route={{ params: { itemId: 'ContentChannel:123' } }} />
-      </Providers>,
-      initialTree
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/content-feed/getContentFeed.js b/apolloschurchapp/src/content-feed/getContentFeed.js
deleted file mode 100644
index 38ed31fb..00000000
--- a/apolloschurchapp/src/content-feed/getContentFeed.js
+++ /dev/null
@@ -1,22 +0,0 @@
-import gql from 'graphql-tag';
-import ApollosConfig from '@apollosproject/config';
-
-export default gql`
-  query getContentFeed($itemId: ID!, $after: String, $first: Int) {
-    node(id: $itemId) {
-      ... on ContentChannel {
-        childContentItemsConnection(after: $after, first: $first) {
-          pageInfo {
-            endCursor
-          }
-          edges {
-            node {
-              ...contentCardFragment
-            }
-          }
-        }
-      }
-    }
-  }
-  ${ApollosConfig.FRAGMENTS.CONTENT_CARD_FRAGMENT}
-`;
diff --git a/apolloschurchapp/src/content-feed/index.js b/apolloschurchapp/src/content-feed/index.js
deleted file mode 100644
index ea033d8d..00000000
--- a/apolloschurchapp/src/content-feed/index.js
+++ /dev/null
@@ -1,78 +0,0 @@
-import React, { PureComponent } from 'react';
-import { Query } from '@apollo/client/react/components';
-import { get } from 'lodash';
-import PropTypes from 'prop-types';
-
-import {
-  ContentCardConnected,
-  fetchMoreResolver,
-} from '@apollosproject/ui-connected';
-
-import { BackgroundView, FeedView } from '@apollosproject/ui-kit';
-
-import GET_CONTENT_FEED from './getContentFeed';
-/**
- * This is where the component description lives
- * A FeedView wrapped in a query to pull content data.
- */
-class ContentFeed extends PureComponent {
-  static propTypes = {
-    /** Functions passed down from React Navigation to use in navigating to/from
-     * items in the feed.
-     */
-    navigation: PropTypes.shape({
-      navigate: PropTypes.func,
-    }),
-    route: PropTypes.shape({
-      params: PropTypes.shape({
-        itemId: PropTypes.string,
-      }),
-    }),
-  };
-
-  /** Function that is called when a card in the feed is pressed.
-   * Takes the user to the ContentSingle
-   */
-  handleOnPress = (item) =>
-    this.props.navigation.navigate('ContentSingle', {
-      itemId: item.id,
-      sharing: item.sharing,
-    });
-
-  render() {
-    const { route } = this.props;
-    const { itemId } = route.params;
-    return (
-      <BackgroundView>
-        <Query
-          query={GET_CONTENT_FEED}
-          variables={{ itemId }}
-          fetchPolicy="cache-and-network"
-        >
-          {({ loading, error, data, refetch, fetchMore, variables }) => (
-            <FeedView
-              ListItemComponent={ContentCardConnected}
-              content={get(
-                data,
-                'node.childContentItemsConnection.edges',
-                []
-              ).map((edge) => edge.node)}
-              fetchMore={fetchMoreResolver({
-                collectionName: 'node.childContentItemsConnection',
-                fetchMore,
-                variables,
-                data,
-              })}
-              isLoading={loading}
-              error={error}
-              refetch={refetch}
-              onPressItem={this.handleOnPress}
-            />
-          )}
-        </Query>
-      </BackgroundView>
-    );
-  }
-}
-
-export default ContentFeed;
diff --git a/apolloschurchapp/src/index.js b/apolloschurchapp/src/index.js
index 14c77d7e..2d5a93ea 100644
--- a/apolloschurchapp/src/index.js
+++ b/apolloschurchapp/src/index.js
@@ -1,9 +1,13 @@
 /* eslint-disable react/jsx-handler-names */
 
-import hoistNonReactStatic from 'hoist-non-react-statics';
 import React from 'react';
-import { StatusBar, Platform } from 'react-native';
-import { NavigationContainer } from '@react-navigation/native';
+import { StatusBar } from 'react-native';
+import {
+  NavigationContainer,
+  useNavigation,
+  DarkTheme,
+  DefaultTheme,
+} from '@react-navigation/native';
 import { createNativeStackNavigator } from 'react-native-screens/native-stack';
 import SplashScreen from 'react-native-splash-screen';
 import 'react-native-gesture-handler'; // required for react-navigation
@@ -18,9 +22,9 @@ import Passes from '@apollosproject/ui-passes';
 import { MapViewConnected as Location } from '@apollosproject/ui-mapview';
 import Auth, { ProtectedRoute } from '@apollosproject/ui-auth';
 
+import { ContentFeedConnected } from '@apollosproject/ui-connected';
 import Providers from './Providers';
 import ContentSingle from './content-single';
-import NodeSingle from './node-single';
 import Event from './event';
 import Tabs from './tabs';
 import LandingScreen from './ui/LandingScreen';
@@ -34,48 +38,52 @@ const AppStatusBar = withTheme(({ theme }) => ({
   backgroundColor: theme.colors.background.paper,
 }))(StatusBar);
 
-const ProtectedRouteWithSplashScreen = (props) => {
+const ProtectedRouteWithSplashScreen = () => {
   const handleOnRouteChange = () => SplashScreen.hide();
-
-  return <ProtectedRoute {...props} onRouteChange={handleOnRouteChange} />;
+  const navigation = useNavigation();
+  return (
+    <ProtectedRoute
+      onRouteChange={handleOnRouteChange}
+      navigation={navigation}
+    />
+  );
 };
 
-// Hack to avoid needing to pass emailRequired through the navigator.navigate
-const EnhancedAuth = (props) => <Auth {...props} emailRequired />;
-// 😑
-hoistNonReactStatic(EnhancedAuth, Auth);
-
-const { Navigator, Screen } = createNativeStackNavigator();
-const ThemedNavigator = withTheme(({ theme, ...props }) => ({
-  ...props,
-  screenOptions: {
-    headerTintColor: theme.colors.action.secondary,
-    headerTitleStyle: {
-      color: theme.colors.text.primary,
-    },
-    headerStyle: {
-      backgroundColor: theme.colors.background.paper,
-      ...Platform.select(theme.shadows.default),
+const ThemedNavigationContainer = withTheme(({ theme, ...props }) => ({
+  theme: {
+    ...(theme.type === 'dark' ? DarkTheme : DefaultTheme),
+    dark: theme.type === 'dark',
+    colors: {
+      ...(theme.type === 'dark' ? DarkTheme.colors : DefaultTheme.colors),
+      primary: theme.colors.secondary,
+      background: theme.colors.background.screen,
+      card: theme.colors.background.paper,
+      text: theme.colors.text.primary,
     },
-    headerShown: false,
-    stackPresentation: 'modal',
   },
-}))(Navigator);
+  ...props,
+}))(({ containerRef, ...props }) => (
+  <NavigationContainer ref={containerRef} {...props} />
+));
 
-const App = (props) => (
+const { Navigator, Screen } = createNativeStackNavigator();
+
+const App = () => (
   <Providers>
     <BackgroundView>
       <AppStatusBar />
-      <NavigationContainer
-        ref={NavigationService.setTopLevelNavigator}
+      <ThemedNavigationContainer
+        containerRef={NavigationService.setTopLevelNavigator}
         onReady={NavigationService.setIsReady}
       >
-        <ThemedNavigator initialRouteName="ProtectedRoute" {...props}>
+        <Navigator
+          screenOptions={{ headerShown: false, stackPresentation: 'modal' }}
+        >
           <Screen
             name="ProtectedRoute"
             component={ProtectedRouteWithSplashScreen}
           />
-          <Screen name="Tabs" component={Tabs} options={{ title: 'Home' }} />
+          <Screen name="Tabs" component={Tabs} />
           <Screen
             name="ContentSingle"
             component={ContentSingle}
@@ -85,25 +93,24 @@ const App = (props) => (
             }}
           />
           <Screen
-            name="NodeSingle"
-            component={NodeSingle}
-            options={{ title: 'Node' }}
+            component={ContentFeedConnected}
+            name="ContentFeed"
+            options={({ route }) => ({
+              title: route.params.itemTitle || 'Content Feed',
+              stackPresentation: 'push',
+            })}
           />
+
           <Screen name="Event" component={Event} options={{ title: 'Event' }} />
           <Screen
             name="Auth"
-            component={EnhancedAuth}
+            component={Auth}
             options={{
-              title: 'Login',
               gestureEnabled: false,
               stackPresentation: 'push',
             }}
           />
-          <Screen
-            name="Location"
-            component={Location}
-            options={{ headerShown: true }}
-          />
+          <Screen name="Location" component={Location} />
           <Screen
             name="Passes"
             component={Passes}
@@ -113,19 +120,14 @@ const App = (props) => (
             name="Onboarding"
             component={Onboarding}
             options={{
-              title: 'Onboarding',
               gestureEnabled: false,
               stackPresentation: 'push',
             }}
           />
-          <Screen
-            name="LandingScreen"
-            component={LandingScreen}
-            options={{ headerShown: false }}
-          />
+          <Screen name="LandingScreen" component={LandingScreen} />
           <Screen component={Search} name="Search" />
-        </ThemedNavigator>
-      </NavigationContainer>
+        </Navigator>
+      </ThemedNavigationContainer>
     </BackgroundView>
   </Providers>
 );
diff --git a/apolloschurchapp/src/node-single/NodeSingle.js b/apolloschurchapp/src/node-single/NodeSingle.js
deleted file mode 100644
index 230826bd..00000000
--- a/apolloschurchapp/src/node-single/NodeSingle.js
+++ /dev/null
@@ -1,49 +0,0 @@
-import React, { PureComponent } from 'react';
-import { get } from 'lodash';
-import PropTypes from 'prop-types';
-
-import { ThemeMixin } from '@apollosproject/ui-kit';
-
-import {
-  InteractWhenLoadedConnected,
-  NodeSingleConnected,
-} from '@apollosproject/ui-connected';
-
-import NavigationHeader from '../ui/NavigationHeader';
-
-class NodeSingle extends PureComponent {
-  static propTypes = {
-    route: PropTypes.shape({
-      params: PropTypes.shape({ nodeId: PropTypes.string }),
-    }),
-    navigation: PropTypes.shape({
-      push: PropTypes.func,
-    }),
-  };
-
-  get nodeId() {
-    return this.props.route?.params?.nodeId;
-  }
-
-  static navigationOptions = {
-    header: NavigationHeader,
-    headerTransparent: true,
-    headerMode: 'float',
-  };
-
-  render() {
-    return (
-      <ThemeMixin
-        mixin={{
-          type: get(this.props, 'theme.type'),
-          colors: get(this.props, 'theme.colors'),
-        }}
-      >
-        <InteractWhenLoadedConnected nodeId={this.nodeId} action={'COMPLETE'} />
-        <NodeSingleConnected nodeId={this.nodeId} />
-      </ThemeMixin>
-    );
-  }
-}
-
-export default NodeSingle;
diff --git a/apolloschurchapp/src/node-single/index.js b/apolloschurchapp/src/node-single/index.js
deleted file mode 100644
index e208efc0..00000000
--- a/apolloschurchapp/src/node-single/index.js
+++ /dev/null
@@ -1,37 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-import { createNativeStackNavigator } from 'react-native-screens/native-stack';
-
-import { ModalCloseButton, ModalBackButton } from '@apollosproject/ui-kit';
-import NodeSingle from './NodeSingle';
-
-const { Screen, Navigator } = createNativeStackNavigator();
-
-const NodeSingleNavigator = ({ route, navigation, ...props }) => (
-  <Navigator
-    {...props}
-    headerMode="float"
-    screenOptions={{
-      headerTranslucent: true,
-      headerStyle: { backgroundColor: 'transparent' },
-      headerHideShadow: true,
-      headerRight: ModalCloseButton,
-      headerLeft: ModalBackButton,
-      headerTitle: '',
-    }}
-  >
-    <Screen
-      name="NodeSingle"
-      component={NodeSingle}
-      initialParams={route.params}
-    />
-  </Navigator>
-);
-
-NodeSingleNavigator.propTypes = {
-  route: PropTypes.shape({
-    params: PropTypes.shape({}),
-  }),
-};
-
-export default NodeSingleNavigator;
diff --git a/apolloschurchapp/src/tabs/discover/Discover.js b/apolloschurchapp/src/tabs/discover/Discover.js
deleted file mode 100644
index 5153afba..00000000
--- a/apolloschurchapp/src/tabs/discover/Discover.js
+++ /dev/null
@@ -1,59 +0,0 @@
-import React from 'react';
-
-import { SafeAreaView } from 'react-native-safe-area-context';
-import gql from 'graphql-tag';
-import { Query } from '@apollo/client/react/components';
-import { useNavigation } from '@react-navigation/native';
-
-import { BackgroundView } from '@apollosproject/ui-kit';
-import {
-  FeaturesFeedConnected,
-  FEATURE_FEED_ACTION_MAP,
-  RockAuthedWebBrowser,
-} from '@apollosproject/ui-connected';
-
-function handleOnPress({ action, ...props }) {
-  if (FEATURE_FEED_ACTION_MAP[action]) {
-    FEATURE_FEED_ACTION_MAP[action]({ action, ...props });
-  }
-  // If you add additional actions, you can handle them here.
-  // Or add them to the FEATURE_FEED_ACTION_MAP, with the syntax
-  // { [ActionName]: function({ relatedNode, action, ...FeatureFeedConnectedProps}) }
-}
-
-// getHomeFeed uses the HOME_FEATURES in the config.yml
-// You can also hardcode an ID if you are confident it will never change
-// Or use some other strategy to get a FeatureFeed.id
-export const GET_DISCOVER_FEED = gql`
-  query getDiscoverFeatureFeed {
-    discoverFeedFeatures {
-      id
-    }
-  }
-`;
-
-const Discover = () => {
-  const navigation = useNavigation();
-  return (
-    <RockAuthedWebBrowser>
-      {(openUrl) => (
-        <BackgroundView>
-          <SafeAreaView edges={['right', 'top', 'left']}>
-            <Query query={GET_DISCOVER_FEED}>
-              {({ data }) => (
-                <FeaturesFeedConnected
-                  openUrl={openUrl}
-                  navigation={navigation}
-                  featureFeedId={data?.discoverFeedFeatures?.id}
-                  onPressActionItem={handleOnPress}
-                />
-              )}
-            </Query>
-          </SafeAreaView>
-        </BackgroundView>
-      )}
-    </RockAuthedWebBrowser>
-  );
-};
-
-export default Discover;
diff --git a/apolloschurchapp/src/tabs/discover/index.js b/apolloschurchapp/src/tabs/discover/index.js
deleted file mode 100644
index f612b1ad..00000000
--- a/apolloschurchapp/src/tabs/discover/index.js
+++ /dev/null
@@ -1,44 +0,0 @@
-import React from 'react';
-import { Platform } from 'react-native';
-import { createNativeStackNavigator } from 'react-native-screens/native-stack';
-import { withTheme } from '@apollosproject/ui-kit';
-
-import ContentFeed from '../../content-feed';
-
-import Discover from './Discover';
-
-const { Navigator, Screen } = createNativeStackNavigator();
-
-const DiscoverNavigator = (props) => (
-  <Navigator initialRouteName="Discover" {...props}>
-    <Screen
-      component={Discover}
-      name="Discover"
-      options={{ headerShown: false }}
-    />
-    <Screen
-      component={ContentFeed}
-      name="ContentFeed"
-      /** Function for React Navigation to set information in the header. */
-      options={({ route }) => ({
-        title: route.params.itemTitle || 'Content Feed',
-      })}
-    />
-  </Navigator>
-);
-const EnhancedDiscover = withTheme(({ theme, ...props }) => ({
-  ...props,
-  screenOptions: {
-    headerTintColor: theme.colors.action.secondary,
-    headerTitleStyle: {
-      color: theme.colors.text.primary,
-    },
-    headerStyle: {
-      backgroundColor: theme.colors.background.paper,
-      ...Platform.select(theme.shadows.default),
-    },
-    headerLargeTitle: true,
-  },
-}))(DiscoverNavigator);
-
-export default EnhancedDiscover;
diff --git a/apolloschurchapp/src/tabs/home/index.js b/apolloschurchapp/src/tabs/home/index.js
deleted file mode 100644
index 91f9323c..00000000
--- a/apolloschurchapp/src/tabs/home/index.js
+++ /dev/null
@@ -1,94 +0,0 @@
-import React, { useEffect } from 'react';
-import { Image } from 'react-native';
-import { SafeAreaView } from 'react-native-safe-area-context';
-import { Query } from '@apollo/client/react/components';
-import { gql, useApolloClient } from '@apollo/client';
-import { useNavigation } from '@react-navigation/native';
-
-import {
-  styled,
-  BackgroundView,
-  NavigationService,
-} from '@apollosproject/ui-kit';
-import {
-  FeaturesFeedConnected,
-  FEATURE_FEED_ACTION_MAP,
-  RockAuthedWebBrowser,
-} from '@apollosproject/ui-connected';
-
-import { checkOnboardingStatusAndNavigate } from '@apollosproject/ui-onboarding';
-
-import { SearchButton } from '../../ui/Search';
-import { ONBOARDING_VERSION } from '../../ui/Onboarding';
-
-const LogoTitle = styled(({ theme }) => ({
-  height: theme.sizing.baseUnit,
-  margin: theme.sizing.baseUnit,
-  alignSelf: 'center',
-  resizeMode: 'contain',
-}))(Image);
-
-function handleOnPress({ action, ...props }) {
-  if (FEATURE_FEED_ACTION_MAP[action]) {
-    FEATURE_FEED_ACTION_MAP[action]({ action, ...props });
-  }
-  // If you add additional actions, you can handle them here.
-  // Or add them to the FEATURE_FEED_ACTION_MAP, with the syntax
-  // { [ActionName]: function({ relatedNode, action, ...FeatureFeedConnectedProps}) }
-}
-
-// getHomeFeed uses the HOME_FEATURES in the config.yml
-// You can also hardcode an ID if you are confident it will never change
-// Or use some other strategy to get a FeatureFeed.id
-export const GET_HOME_FEED = gql`
-  query getHomeFeatureFeed {
-    homeFeedFeatures {
-      id
-    }
-  }
-`;
-
-const Home = () => {
-  const navigation = useNavigation();
-  const client = useApolloClient();
-
-  useEffect(() => {
-    checkOnboardingStatusAndNavigate({
-      client,
-      navigation: NavigationService,
-      latestOnboardingVersion: ONBOARDING_VERSION,
-      navigateHome: false,
-    });
-  }, []);
-
-  return (
-    <RockAuthedWebBrowser>
-      {(openUrl) => (
-        <BackgroundView>
-          <SafeAreaView edges={['top', 'left', 'right']}>
-            <Query query={GET_HOME_FEED} fetchPolicy="cache-and-network">
-              {({ data }) => (
-                <FeaturesFeedConnected
-                  openUrl={openUrl}
-                  navigation={navigation}
-                  featureFeedId={data?.homeFeedFeatures?.id}
-                  onPressActionItem={handleOnPress}
-                  ListHeaderComponent={
-                    <>
-                      <LogoTitle source={require('./wordmark.png')} />
-                      <SearchButton
-                        onPress={() => navigation.navigate('Search')}
-                      />
-                    </>
-                  }
-                />
-              )}
-            </Query>
-          </SafeAreaView>
-        </BackgroundView>
-      )}
-    </RockAuthedWebBrowser>
-  );
-};
-
-export default Home;
diff --git a/apolloschurchapp/src/tabs/index.js b/apolloschurchapp/src/tabs/index.js
index 3e2a5b8c..53dfb2a5 100644
--- a/apolloschurchapp/src/tabs/index.js
+++ b/apolloschurchapp/src/tabs/index.js
@@ -1,45 +1,101 @@
-import React from 'react';
-import { Platform } from 'react-native';
+import React, { useEffect } from 'react';
+import { Image } from 'react-native';
+import { useNavigation } from '@react-navigation/native';
 import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';
-import { withTheme } from '@apollosproject/ui-kit';
-
+import { styled, NavigationService } from '@apollosproject/ui-kit';
+import { useApolloClient } from '@apollo/client';
+import { createFeatureFeedTab } from '@apollosproject/ui-connected';
+import { checkOnboardingStatusAndNavigate } from '@apollosproject/ui-onboarding';
+import { SearchButton } from '../ui/Search';
+import { ONBOARDING_VERSION } from '../ui/Onboarding';
 import Connect from './connect';
-import Home from './home';
-import Discover from './discover';
 import tabBarIcon from './tabBarIcon';
 
+const HeaderLogo = styled(({ theme }) => ({
+  height: theme.sizing.baseUnit,
+  resizeMode: 'contain',
+}))(Image);
+
+const HeaderCenter = () => <HeaderLogo source={require('./wordmark.png')} />;
+const HeaderRight = () => {
+  const navigation = useNavigation();
+  return <SearchButton onPress={() => navigation.navigate('Search')} />;
+};
+
+// we nest stack inside of tabs so we can use all the fancy native header features
+const HomeTab = createFeatureFeedTab({
+  screenOptions: {
+    headerHideShadow: true,
+    headerCenter: HeaderCenter,
+    headerRight: HeaderRight,
+    headerLargeTitle: false,
+  },
+  tabName: 'Home',
+  feedName: 'HOME',
+});
+
+const ReadTab = createFeatureFeedTab({
+  tabName: 'Read',
+  feedName: 'READ',
+});
+
+const WatchTab = createFeatureFeedTab({
+  tabName: 'Watch',
+  feedName: 'WATCH',
+});
+
+const PrayTab = createFeatureFeedTab({
+  tabName: 'Pray',
+  feedName: 'PRAY',
+});
+
 const { Navigator, Screen } = createBottomTabNavigator();
 
-const TabNavigator = (props) => (
-  <Navigator {...props} lazy>
-    <Screen
-      name="Home"
-      component={Home}
-      options={{ tabBarIcon: tabBarIcon('home') }}
-    />
-    <Screen
-      name="Discover"
-      component={Discover}
-      options={{ tabBarIcon: tabBarIcon('sections') }}
-    />
-    <Screen
-      name="Connect"
-      component={Connect}
-      options={{ tabBarIcon: tabBarIcon('profile') }}
-    />
-  </Navigator>
-);
-
-const ThemedTabNavigator = withTheme(({ theme }) => ({
-  tabBarOptions: {
-    activeTintColor: theme?.colors?.secondary,
-    inactiveTintColor: theme?.colors?.text?.tertiary,
-    style: {
-      backgroundColor: theme?.colors?.background?.paper,
-      borderTopColor: theme?.colors?.shadows.default,
-      ...Platform.select(theme?.shadows.default),
+const TabNavigator = () => {
+  const client = useApolloClient();
+  // this is only used by the tab loaded first
+  // if there is a new version of the onboarding flow,
+  // we'll navigate there first to show new screens
+  useEffect(
+    () => {
+      checkOnboardingStatusAndNavigate({
+        client,
+        navigation: NavigationService,
+        latestOnboardingVersion: ONBOARDING_VERSION,
+        navigateHome: false,
+      });
     },
-  },
-}))(TabNavigator);
+    [client]
+  );
+  return (
+    <Navigator lazy>
+      <Screen
+        name="Home"
+        component={HomeTab}
+        options={{ tabBarIcon: tabBarIcon('home') }}
+      />
+      <Screen
+        name="Read"
+        component={ReadTab}
+        options={{ tabBarIcon: tabBarIcon('sections') }}
+      />
+      <Screen
+        name="Watch"
+        component={WatchTab}
+        options={{ tabBarIcon: tabBarIcon('video') }}
+      />
+      <Screen
+        name="Pray"
+        component={PrayTab}
+        options={{ tabBarIcon: tabBarIcon('like') }}
+      />
+      <Screen
+        name="Connect"
+        component={Connect}
+        options={{ tabBarIcon: tabBarIcon('profile') }}
+      />
+    </Navigator>
+  );
+};
 
-export default ThemedTabNavigator;
+export default TabNavigator;
diff --git a/apolloschurchapp/src/tabs/home/wordmark.png b/apolloschurchapp/src/tabs/wordmark.png
similarity index 100%
rename from apolloschurchapp/src/tabs/home/wordmark.png
rename to apolloschurchapp/src/tabs/wordmark.png
diff --git a/apolloschurchapp/src/theme/propOverrides.js b/apolloschurchapp/src/theme/propOverrides.js
deleted file mode 100644
index 6d46cc8b..00000000
--- a/apolloschurchapp/src/theme/propOverrides.js
+++ /dev/null
@@ -1,2 +0,0 @@
-/* Export your custom prop overrides here. */
-export {};
diff --git a/apolloschurchapp/src/theme/styleOverrides.js b/apolloschurchapp/src/theme/styleOverrides.js
deleted file mode 100644
index 3599e309..00000000
--- a/apolloschurchapp/src/theme/styleOverrides.js
+++ /dev/null
@@ -1,2 +0,0 @@
-/* Export your custom style overrides here. */
-export {};
diff --git a/apolloschurchapp/src/theme/theme.js b/apolloschurchapp/src/theme/theme.js
index b2aeb3cb..fe1c84f1 100644
--- a/apolloschurchapp/src/theme/theme.js
+++ b/apolloschurchapp/src/theme/theme.js
@@ -1,6 +1,3 @@
-// import styleOverrides from './styleOverrides';
-// import propOverrides from './propOverrides';
-
 /* Add your custom theme definitions below. Anything that is supported in UI-Kit Theme can be
  overridden and/or customized here! */
 
@@ -51,9 +48,6 @@
  * }
  * ```
  */
-// const overrides = {
-//   ...styleOverrides,
-//   ...propOverrides,
-// };
+// const overrides = {};
 
 export default {};
diff --git a/apolloschurchapp/src/ui/Search/SearchButton.js b/apolloschurchapp/src/ui/Search/SearchButton.js
index 9dd742f6..a962601f 100644
--- a/apolloschurchapp/src/ui/Search/SearchButton.js
+++ b/apolloschurchapp/src/ui/Search/SearchButton.js
@@ -1,8 +1,7 @@
 import React from 'react';
-import { Animated } from 'react-native';
 import PropTypes from 'prop-types';
 
-import { styled, withTheme, Touchable, Icon } from '@apollosproject/ui-kit';
+import { withTheme, Touchable, Icon } from '@apollosproject/ui-kit';
 
 const SearchIcon = withTheme(({ theme: { colors, sizing: { baseUnit } } }) => ({
   name: 'search',
@@ -10,18 +9,10 @@ const SearchIcon = withTheme(({ theme: { colors, sizing: { baseUnit } } }) => ({
   fill: colors.primary,
 }))(Icon);
 
-const SearchButtonContainer = styled(({ theme: { sizing: { baseUnit } } }) => ({
-  position: 'absolute',
-  right: baseUnit,
-  top: baseUnit / 2,
-}))(Animated.View);
-
 const HomeSearchButton = ({ onPress }) => (
-  <SearchButtonContainer>
-    <Touchable onPress={onPress}>
-      <SearchIcon />
-    </Touchable>
-  </SearchButtonContainer>
+  <Touchable onPress={onPress}>
+    <SearchIcon />
+  </Touchable>
 );
 
 HomeSearchButton.propTypes = {
