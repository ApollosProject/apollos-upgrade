diff --git a/apollos-church-api/apollos.json b/apollos-church-api/apollos.json
index 654b535..e3697d9 100644
--- a/apollos-church-api/apollos.json
+++ b/apollos-church-api/apollos.json
@@ -1,4 +1,4 @@
 {
-    "version": "1.1.0-beta.0",
+    "version": "1.0.0-beta.0",
     "environment": "api"
 }
\ No newline at end of file
diff --git a/apollos-church-api/config.yml b/apollos-church-api/config.yml
index 7127f7a..0f1e38d 100644
--- a/apollos-church-api/config.yml
+++ b/apollos-church-api/config.yml
@@ -23,8 +23,6 @@ ONE_SIGNAL:
   REST_KEY: ${ONE_SIGNAL_REST_KEY}
 CHURCH_ONLINE:
   URL: https://apollos.churchonline.org/api/v1/
-  MEDIA_URLS: []
-  WEB_VIEW_URL: https://apollos.churchonline.org/
 TWILIO:
   ACCOUNT_SID: ${TWILIO_ACCOUNT_SID}
   AUTH_TOKEN: ${TWILIO_AUTH_TOKEN}
@@ -74,9 +72,6 @@ ROCK_MAPPINGS:
       EntityType: ContentChannelItem
     UniversalContentItem:
       EntityType: ContentChannelItem
-    WeekendContentItem:
-      ContentChannelId: [5]
-      EntityType: ContentChannelItem
     ContentItem:
       EntityType: ContentChannelItem
 
@@ -105,10 +100,6 @@ ROCK_MAPPINGS:
   CAMPAIGN_CHANNEL_IDS:
     - 11
 
-  SERMON_CHANNEL_ID: 5
-
-  HOME_FEATURE_CHANNEL_ID: 13
-
 # Default mapping of field types -> ids. There's probably no reason to edit this.
 ROCK_CONSTANTS:
   TEXT: 1
diff --git a/apollos-church-api/local.graphql b/apollos-church-api/local.graphql
index 93ed3e1..cea6cba 100644
--- a/apollos-church-api/local.graphql
+++ b/apollos-church-api/local.graphql
@@ -1,24 +1,3 @@
-enum ACTION_FEATURE_ACTION {
-  READ_CONTENT
-}
-
-type ActionListAction {
-  id: ID!
-  title: String
-  subtitle: String
-  image: ImageMedia
-  relatedNode: Node
-  action: ACTION_FEATURE_ACTION
-}
-
-type ActionListFeature implements Feature & Node {
-  id: ID!
-  order: Int
-  title: String
-  subtitle: String
-  actions: [ActionListAction]
-}
-
 input AnalyticsDeviceInfo {
   platform: AnalyticsPlatform
   deviceId: String
@@ -106,7 +85,7 @@ scalar Color
 
 type ContentChannel implements Node {
   id: ID!
-  name: String
+  name: String!
   description: String
   childContentChannels: [ContentChannel]
   childContentItemsConnection(first: Int, after: String): ContentItemsConnection
@@ -163,7 +142,6 @@ type ContentSeriesContentItem implements ContentItem & Node {
   isLiked: Boolean
   likedCount: Int
   sharing: SharableContentItem
-  features: [Feature]
 }
 
 type DevotionalContentItem implements ContentItem & Node {
@@ -185,11 +163,6 @@ type DevotionalContentItem implements ContentItem & Node {
   sharing: SharableContentItem
 }
 
-interface Feature {
-  id: ID!
-  order: Int
-}
-
 enum GENDER {
   Male
   Female
@@ -219,8 +192,6 @@ input LikeEntityInput {
 type LiveStream {
   isLive: Boolean
   eventStartTime: String
-  media: VideoMedia
-  webViewUrl: String
 }
 
 interface Media {
@@ -286,8 +257,8 @@ type PaginationInfo {
 
 type Pass implements Node {
   id: ID!
-  type: PassType
-  description: String
+  type: PassType!
+  description: String!
   logo: ImageMediaSource
   thumbnail: ImageMediaSource
   barcode: ImageMediaSource
@@ -320,7 +291,7 @@ enum PassType {
 
 type Person implements Node {
   id: ID!
-  firstName: String
+  firstName: String!
   lastName: String!
   nickName: String
   email: String
@@ -349,7 +320,6 @@ type Query {
   scriptures(query: String!): [Scripture]
   userPass: Pass
   campuses(location: CampusLocationInput): [Campus]
-  userFeedFeatures: [Feature]
 }
 
 type Scripture {
@@ -375,12 +345,6 @@ type SmsPinResult {
   success: Boolean
 }
 
-type TextFeature implements Feature & Node {
-  id: ID!
-  order: Int
-  body: String
-}
-
 type Theme {
   type: ThemeType
   colors: ThemeColors
@@ -445,23 +409,3 @@ type VideoMediaSource implements MediaSource {
   uri: String
 }
 
-type WeekendContentItem implements ContentItem & Node {
-  id: ID!
-  title: String
-  coverImage: ImageMedia
-  images: [ImageMedia]
-  videos: [VideoMedia]
-  audios: [AudioMedia]
-  htmlContent: String
-  summary: String
-  childContentItemsConnection(first: Int, after: String): ContentItemsConnection
-  siblingContentItemsConnection(first: Int, after: String): ContentItemsConnection
-  parentChannel: ContentChannel
-  theme: Theme
-  isLiked: Boolean
-  likedCount: Int
-  liveStream: LiveStream
-  sharing: SharableContentItem
-  features: [Feature]
-}
-
diff --git a/apollos-church-api/package.json b/apollos-church-api/package.json
index 07f3e51..b5f3118 100644
--- a/apollos-church-api/package.json
+++ b/apollos-church-api/package.json
@@ -1,6 +1,6 @@
 {
   "name": "apollos-church-api",
-  "version": "1.1.0-beta.0",
+  "version": "1.0.0-beta.0",
   "private": true,
   "main": "lib/index.js",
   "scripts": {
@@ -34,17 +34,17 @@
     ]
   },
   "dependencies": {
-    "@apollosproject/config": "^1.1.0-beta.0",
-    "@apollosproject/data-connector-analytics": "^1.1.0-beta.0",
-    "@apollosproject/data-connector-bible": "^1.1.0-beta.0",
-    "@apollosproject/data-connector-church-online": "^1.1.0-beta.0",
-    "@apollosproject/data-connector-cloudinary": "^1.1.0-beta.0",
-    "@apollosproject/data-connector-onesignal": "^1.1.0-beta.0",
-    "@apollosproject/data-connector-passes": "^1.1.0-beta.0",
-    "@apollosproject/data-connector-rock": "^1.1.0-beta.0",
-    "@apollosproject/data-connector-twilio": "^1.1.0-beta.0",
-    "@apollosproject/rock-apollo-data-source": "^1.1.0-beta.0",
-    "@apollosproject/server-core": "^1.1.0-beta.0",
+    "@apollosproject/config": "^1.0.0-beta.0",
+    "@apollosproject/data-connector-analytics": "^1.0.0-beta.0",
+    "@apollosproject/data-connector-bible": "^1.0.0-beta.0",
+    "@apollosproject/data-connector-church-online": "^1.0.0-beta.0",
+    "@apollosproject/data-connector-cloudinary": "^1.0.0-beta.0",
+    "@apollosproject/data-connector-onesignal": "^1.0.0-beta.0",
+    "@apollosproject/data-connector-passes": "^1.0.0-beta.0",
+    "@apollosproject/data-connector-rock": "^1.0.0-beta.0",
+    "@apollosproject/data-connector-twilio": "^1.0.0-beta.0",
+    "@apollosproject/rock-apollo-data-source": "^1.0.0-beta.0",
+    "@apollosproject/server-core": "^1.0.0-beta.0",
     "apollo-server": "^2.0.5",
     "apollo-server-express": "2.4.8",
     "color": "3.0.0",
@@ -55,8 +55,8 @@
     "randomcolor": "0.5.3"
   },
   "devDependencies": {
-    "@apollosproject/apollo-server-env-mock": "^1.1.0-beta.0",
-    "@apollosproject/babel-preset-apollos": "^1.1.0-beta.0",
+    "@apollosproject/apollo-server-env-mock": "^1.0.0-beta.0",
+    "@apollosproject/babel-preset-apollos": "^1.0.0-beta.0",
     "@babel/cli": "7.1.5",
     "@babel/core": "7.1.6",
     "@entria/graphql-findbreakingchanges": "^1.0.1",
diff --git a/apollos-church-api/schema.graphql b/apollos-church-api/schema.graphql
new file mode 100644
index 0000000..0f9a38d
--- /dev/null
+++ b/apollos-church-api/schema.graphql
@@ -0,0 +1,413 @@
+# source: http://localhost:4000
+# timestamp: Fri May 31 2019 15:21:07 GMT-0400 (EDT)
+
+input AnalyticsDeviceInfo {
+  platform: AnalyticsPlatform
+  deviceId: String
+  deviceModel: String
+  osVersion: String
+  appVersion: String
+}
+
+input AnalyticsIdentifyInput {
+  traits: [AnalyticsMetaField]
+  anonymousId: String!
+  deviceInfo: AnalyticsDeviceInfo
+}
+
+input AnalyticsMetaField {
+  field: String!
+  value: AnalyticsValue
+}
+
+enum AnalyticsPlatform {
+  iOS
+  Android
+}
+
+type AnalyticsResult {
+  success: Boolean
+}
+
+input AnalyticsTrackInput {
+  eventName: String!
+  properties: [AnalyticsMetaField]
+  anonymousId: String
+  deviceInfo: AnalyticsDeviceInfo
+}
+
+scalar AnalyticsValue
+
+type AudioMedia implements Media {
+  name: String
+  key: String
+  sources: [AudioMediaSource]
+}
+
+type AudioMediaSource implements MediaSource {
+  uri: String
+}
+
+type AuthenticatedUser {
+  id: ID!
+  profile: Person
+  rockToken: String
+}
+
+type Authentication {
+  user: AuthenticatedUser
+  token: String
+}
+
+enum CacheControlScope {
+  PUBLIC
+  PRIVATE
+}
+
+type Campus implements Node {
+  id: ID!
+  name: String
+  street1: String
+  street2: String
+  city: String
+  state: String
+  postalCode: String
+  latitude: Float
+  longitude: Float
+  image: ImageMediaSource
+  distanceFromLocation(location: CampusLocationInput): Float
+}
+
+input CampusLocationInput {
+  latitude: Float!
+  longitude: Float!
+}
+
+"""A rgb color string"""
+scalar Color
+
+type ContentChannel implements Node {
+  id: ID!
+  name: String!
+  description: String
+  childContentChannels: [ContentChannel]
+  childContentItemsConnection(first: Int, after: String): ContentItemsConnection
+  iconName: String
+}
+
+interface ContentItem {
+  id: ID!
+  title: String
+  coverImage: ImageMedia
+  images: [ImageMedia]
+  videos: [VideoMedia]
+  audios: [AudioMedia]
+  htmlContent: String
+  summary: String
+  childContentItemsConnection(first: Int, after: String): ContentItemsConnection
+  siblingContentItemsConnection(first: Int, after: String): ContentItemsConnection
+  parentChannel: ContentChannel
+  theme: Theme
+  isLiked: Boolean
+  likedCount: Int
+  sharing: SharableContentItem
+}
+
+type ContentItemsConnection {
+  edges: [ContentItemsConnectionEdge]
+  pageInfo: PaginationInfo
+}
+
+type ContentItemsConnectionEdge {
+  node: ContentItem
+  cursor: String
+}
+
+input ContentItemsConnectionInput {
+  first: Int
+  after: String
+}
+
+type ContentSeriesContentItem implements ContentItem & Node {
+  id: ID!
+  title: String
+  coverImage: ImageMedia
+  images: [ImageMedia]
+  videos: [VideoMedia]
+  audios: [AudioMedia]
+  htmlContent: String
+  summary: String
+  childContentItemsConnection(first: Int, after: String): ContentItemsConnection
+  siblingContentItemsConnection(first: Int, after: String): ContentItemsConnection
+  parentChannel: ContentChannel
+  theme: Theme
+  scriptures: [Scripture]
+  isLiked: Boolean
+  likedCount: Int
+  sharing: SharableContentItem
+}
+
+type DevotionalContentItem implements ContentItem & Node {
+  id: ID!
+  title: String
+  coverImage: ImageMedia
+  images: [ImageMedia]
+  videos: [VideoMedia]
+  audios: [AudioMedia]
+  htmlContent: String
+  summary: String
+  childContentItemsConnection(first: Int, after: String): ContentItemsConnection
+  siblingContentItemsConnection(first: Int, after: String): ContentItemsConnection
+  parentChannel: ContentChannel
+  theme: Theme
+  scriptures: [Scripture]
+  isLiked: Boolean
+  likedCount: Int
+  sharing: SharableContentItem
+}
+
+enum GENDER {
+  Male
+  Female
+  Unknown
+}
+
+type ImageMedia implements Media {
+  name: String
+  key: String
+  sources: [ImageMediaSource]
+}
+
+type ImageMediaSource implements MediaSource {
+  uri: String
+}
+
+enum LIKE_OPERATION {
+  Like
+  Unlike
+}
+
+input LikeEntityInput {
+  nodeId: ID!
+  operation: LIKE_OPERATION!
+}
+
+type LiveStream {
+  isLive: Boolean
+  eventStartTime: String
+}
+
+interface Media {
+  name: String
+  key: String
+  sources: [MediaSource]
+}
+
+type MediaContentItem implements ContentItem & Node {
+  id: ID!
+  title: String
+  coverImage: ImageMedia
+  images: [ImageMedia]
+  videos: [VideoMedia]
+  audios: [AudioMedia]
+  htmlContent: String
+  summary: String
+  childContentItemsConnection(first: Int, after: String): ContentItemsConnection
+  siblingContentItemsConnection(first: Int, after: String): ContentItemsConnection
+  parentChannel: ContentChannel
+  theme: Theme
+  scriptures: [Scripture]
+  isLiked: Boolean
+  likedCount: Int
+  sharing: SharableContentItem
+}
+
+enum MediaInputType {
+  IMAGE
+  VIDEO
+  AUDIO
+}
+
+interface MediaSource {
+  uri: String
+}
+
+type Mutation {
+  _placeholder: Boolean
+  updateLikeEntity(input: LikeEntityInput!): ContentItem
+  updateProfileField(input: UpdateProfileInput!): Person
+  updateProfileFields(input: [UpdateProfileInput]!): Person
+  uploadProfileImage(file: Upload!, size: Int!): Person
+  authenticate(identity: String!, password: String!): Authentication
+  changePassword(password: String!): Authentication
+  registerPerson(email: String!, password: String!): Authentication
+  requestSmsLoginPin(phoneNumber: String!): SmsPinResult
+  authenticateWithSms(phoneNumber: String!, pin: String!): Authentication
+  identifySelf(input: AnalyticsIdentifyInput!): AnalyticsResult
+  trackEvent(input: AnalyticsTrackInput!): AnalyticsResult
+  updateUserPushSettings(input: PushSettingsInput!): Person
+  updateUserCampus(campusId: String!): Person
+}
+
+interface Node {
+  id: ID!
+}
+
+type PaginationInfo {
+  startCursor: String
+  endCursor: String
+}
+
+type Pass implements Node {
+  id: ID!
+  type: PassType!
+  description: String!
+  logo: ImageMediaSource
+  thumbnail: ImageMediaSource
+  barcode: ImageMediaSource
+  primaryFields: [PassField]
+  secondaryFields: [PassField]
+  backgroundColor: Color
+  foregroundColor: Color
+  labelColor: Color
+  logoText: String
+  passkitFileUrl: String
+}
+
+type PassField {
+  key: String!
+  label: String
+  value: String!
+  textAlignment: PassFieldTextAlignment
+}
+
+enum PassFieldTextAlignment {
+  LEFT
+  CENTER
+  RIGHT
+  NATURAL
+}
+
+enum PassType {
+  GENERIC
+}
+
+type Person implements Node {
+  id: ID!
+  firstName: String!
+  lastName: String!
+  nickName: String
+  email: String
+  gender: GENDER
+  birthDate: String
+  photo: ImageMediaSource
+  campus: Campus
+}
+
+input PushSettingsInput {
+  enabled: Boolean
+  pushProviderUserId: String
+}
+
+type Query {
+  _placeholder: Boolean
+  node(id: ID!): Node
+  likedContent(first: Int, after: String): ContentItemsConnection
+  contentChannels: [ContentChannel]
+  campaigns: ContentItemsConnection
+  userFeed(first: Int, after: String): ContentItemsConnection
+  personaFeed(first: Int, after: String): ContentItemsConnection
+  currentUser: AuthenticatedUser
+  liveStream: LiveStream
+  scripture(query: String!): Scripture
+  scriptures(query: String!): [Scripture]
+  userPass: Pass
+  campuses(location: CampusLocationInput): [Campus]
+}
+
+type Scripture {
+  id: String
+  html: String
+  reference: String
+  copyright: String
+}
+
+interface Sharable {
+  url: String
+  message: String
+  title: String
+}
+
+type SharableContentItem implements Sharable {
+  url: String
+  message: String
+  title: String
+}
+
+type SmsPinResult {
+  success: Boolean
+}
+
+type Theme {
+  type: ThemeType
+  colors: ThemeColors
+}
+
+type ThemeColors {
+  primary: Color
+  secondary: Color
+  screen: Color
+  paper: Color
+  warning: Color
+}
+
+enum ThemeType {
+  LIGHT
+  DARK
+}
+
+type UniversalContentItem implements ContentItem & Node {
+  id: ID!
+  title: String
+  coverImage: ImageMedia
+  images: [ImageMedia]
+  videos: [VideoMedia]
+  audios: [AudioMedia]
+  htmlContent: String
+  summary: String
+  childContentItemsConnection(first: Int, after: String): ContentItemsConnection
+  siblingContentItemsConnection(first: Int, after: String): ContentItemsConnection
+  parentChannel: ContentChannel
+  theme: Theme
+  isLiked: Boolean
+  likedCount: Int
+  sharing: SharableContentItem
+}
+
+enum UPDATEABLE_PROFILE_FIELDS {
+  FirstName
+  LastName
+  Email
+  NickName
+  Gender
+  BirthDate
+}
+
+input UpdateProfileInput {
+  field: UPDATEABLE_PROFILE_FIELDS!
+  value: String!
+}
+
+"""The `Upload` scalar type represents a file upload."""
+scalar Upload
+
+type VideoMedia implements Media {
+  name: String
+  key: String
+  sources: [VideoMediaSource]
+  embedHtml: String
+}
+
+type VideoMediaSource implements MediaSource {
+  uri: String
+}
diff --git a/apollos-church-api/src/data/index.js b/apollos-church-api/src/data/index.js
index 60ee373..4bda45e 100644
--- a/apollos-church-api/src/data/index.js
+++ b/apollos-church-api/src/data/index.js
@@ -23,7 +23,6 @@ import {
   AuthSms,
   Campus,
   BinaryFiles,
-  Features,
 } from '@apollosproject/data-connector-rock';
 import * as Theme from './theme';
 
@@ -54,7 +53,6 @@ const data = {
   Template,
   Campus,
   BinaryFiles,
-  Features,
 };
 
 const {
