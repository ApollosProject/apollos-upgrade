diff --git a/apollos-church-api/.eslintrc.js b/apollos-church-api/.eslintrc.js
deleted file mode 100644
index 7681348..0000000
--- a/apollos-church-api/.eslintrc.js
+++ /dev/null
@@ -1,5 +0,0 @@
-module.exports = {
-  extends: [
-    '@apollosproject/eslint-config/api',
-  ],
-}
\ No newline at end of file
diff --git a/apollos-church-api/.gitignore b/apollos-church-api/.gitignore
index b15b989..a65b417 100644
--- a/apollos-church-api/.gitignore
+++ b/apollos-church-api/.gitignore
@@ -1,96 +1 @@
 lib
-# Logs
-logs
-*.log
-npm-debug.log*
-yarn-debug.log*
-yarn-error.log*
-coverage*
-
-# operating system files
-.DS_Store
-.DS_Store?
-.Spotlight-V100
-.Trashes
-ehthumbs.db
-Thumbs.db
-*.swp
-
-# Runtime data
-pids
-*.pid
-*.seed
-*.pid.lock
-
-
-# Directory for instrumented libs generated by jscoverage/JSCover
-lib-cov
-
-# Coverage directory used by tools like istanbul
-coverage
-
-# nyc test coverage
-.nyc_output
-
-# node-waf configuration
-.lock-wscript
-
-# Compiled binary addons (https://nodejs.org/api/addons.html)
-build/Release
-
-# Dependency directories
-node_modules/
-jspm_packages/
-
-# TypeScript v1 declaration files
-typings/
-
-# Optional npm cache directory
-.npm
-
-# Optional terraform
-.terraform
-source-*.tar.gz
-terraform.tfstate
-terraform.tfstate.backup
-terraform.tfvars
-
-# Optional eslint cache
-.eslintcache
-
-# Optional REPL history
-.node_repl_history
-
-# Output of 'npm pack'
-*.tgz
-
-# Yarn Integrity file
-.yarn-integrity
-
-# dotenv environment variables file
-.env
-.env.storybook
-
-# next.js build output
-.next
-
-# xcode
-build/
-
-# storybook
-storyLoader.js
-*.xcworkspacedata
-
-# sublime text settings
-*.sublime-project
-*.sublime-workspace
-
-# compiled code
-
-**/lib
-
-.watchmanconfig
-
-# generated markdown docs
-packages/**/docs/generated/*
-
diff --git a/apollos-church-api/.nvmrc b/apollos-church-api/.nvmrc
deleted file mode 100644
index 5b7269c..0000000
--- a/apollos-church-api/.nvmrc
+++ /dev/null
@@ -1 +0,0 @@
-10.19.0
diff --git a/apollos-church-api/apollos.json b/apollos-church-api/apollos.json
index 4ae031e..a4c278c 100644
--- a/apollos-church-api/apollos.json
+++ b/apollos-church-api/apollos.json
@@ -1,4 +1,4 @@
 {
-    "version": "1.5.0-beta.0",
+    "version": "1.1.0-beta.2",
     "environment": "api"
 }
\ No newline at end of file
diff --git a/apollos-church-api/config.yml b/apollos-church-api/config.yml
index 83a3a49..7127f7a 100644
--- a/apollos-church-api/config.yml
+++ b/apollos-church-api/config.yml
@@ -12,32 +12,12 @@ APP:
   # It should match whatver is in your Info.plist `CFBundleURLTypes`
   DEEP_LINK_HOST: apolloschurchapp
   ROOT_API_URL: ${ROOT_URL}
-  JOBS_USERNAME: ${JOBS_USERNAME}
-  JOBS_PASSWORD: ${JOBS_PASSWORD}
-BUGSNAG:
-  ## Optional, but you'll need to remove references to @apollosproject/bugsnag if you don't wish to use.
-  API_KEY: ${BUGSNAG_KEY}
 ROCK:
   API_URL: https://apollosrock.newspring.cc/api
   API_TOKEN: ${ROCK_TOKEN}
   IMAGE_URL: https://apollosrock.newspring.cc/GetImage.ashx
-  SHARE_URL: https://apollosrock.newspring.cc
   # This should match the timezone of the Rock server
   TIMEZONE: 'America/New_York'
-  USE_PLUGIN: true
-  SHOW_INACTIVE_CONTENT: ${ROCK_SHOW_INACTIVE_CONTENT}
-UNIVERSAL_LINKS:
-  # This should be your app's bundle ID, as found in your info.plist.
-  APPLE_APP_ID: org.reactjs.native.apolloschurchapp
-  # This should be your app's team ID, as found in Xcode
-  APPLE_TEAM_ID: 7TM8C6252Z
-  # Where should a user be redirected if they don't have your app installed?
-  APP_STORE_LINK: https://apollos.app/ios
-  PLAY_STORE_LINK: https://apollos.app/android
-  # Your app Id, as found in your app/build.gradle.
-  GOOGLE_APP_ID: com.apolloschurch.app
-  # https://docs.getsocial.im/knowledge-base/android-signing-key-sha256/
-  GOOGLE_KEYSTORE_SHA256: EC:6E:B5:5A:62:53:1E:53:FF:C4:BA:A7:CB:29:77:57:71:9D:65:2F:AF:69:41:A3:AD:2B:C4:55:A1:7A:07:03
 ONE_SIGNAL:
   APP_ID: b6e75a77-003f-4466-95ca-82cc5cdc407b
   REST_KEY: ${ONE_SIGNAL_REST_KEY}
@@ -45,23 +25,6 @@ CHURCH_ONLINE:
   URL: https://apollos.churchonline.org/api/v1/
   MEDIA_URLS: []
   WEB_VIEW_URL: https://apollos.churchonline.org/
-ALGOLIA:
-  APPLICATION_ID: ${ALGOLIA_APP_ID}
-  API_KEY: ${ALGOLIA_API_KEY}
-  # TODO: should we support multiple indices? how
-  SEARCH_INDEX: test_ContentItem
-  # Configure Algolia custom settings here
-  # https://www.algolia.com/doc/api-reference/settings-api-parameters/
-  CONFIGURATION:
-    searchableAttributes:
-      - title
-      - unordered(summary)
-    #customRankings:
-    # NOT CURRENTLY INCLUDED
-    # This just demonstrates what's possible
-    # To include likedCount (or any other field) override search package
-    # and add field to config below
-    #- desc(likedCount)
 TWILIO:
   ACCOUNT_SID: ${TWILIO_ACCOUNT_SID}
   AUTH_TOKEN: ${TWILIO_AUTH_TOKEN}
@@ -79,28 +42,22 @@ ANALYTICS:
   # on the accompanying service
   SEGMENT_KEY:
   GA_ID:
-  USE_ROCK: true
 BIBLE_API:
   KEY: ${BIBLE_API_KEY}
-  BIBLE_ID:
-    WEB: '9879dbb7cfe39e4d-01'
-    KJV: 'de4e12af7f28f599-02'
+  BIBLE_ID: '9879dbb7cfe39e4d-01'
 CLOUDINARY:
   # Cloudinary is used to improve image loading
   # value should look something like
   # cloudinary://123123123:adkfnla_adASDv_adAS@test
   URL: ${CLOUDINARY_URL}
-ENGINE:
-  API_KEY: ${ENGINE_API_KEY}
-  SCHEMA_TAG: ${ENGINE_SCHEMA_TAG}
 
 # This key holds various properties that allow our GraphQL server to map to your Rock Instance
 ROCK_MAPPINGS:
   INTERACTIONS:
-    # Name of the InteractionChannel that will be created per EntityType
+    # Name of the InteractionChannel that will be created
     CHANNEL_NAME: Apollos App
-    # Prefix for the name of the InteractionComponent that will be created per Entity
-    COMPONENT_NAME: Apollos App Component
+    # Name of the InteractionComponent that will be created for Content Items
+    COMPONENT_NAME: Apollos Content Item
     # 512 is "Mobile App"
     CHANNEL_MEDIUM_TYPE_ID: 512
 
@@ -136,7 +93,6 @@ ROCK_MAPPINGS:
     - 8
   # Apollos will pull content items from these channels and expose them on the user feed
   # However, it will not expose the channel itself.
-  # These channels are also pulled when indexing searchable content.
   FEED_CONTENT_CHANNEL_IDS:
     - 1
     - 2
@@ -151,49 +107,7 @@ ROCK_MAPPINGS:
 
   SERMON_CHANNEL_ID: 5
 
-  SERVING_GROUP_TYPE_ID: 23
-  COMMUNITY_GROUP_TYPE_ID: 25
-  FAMILY_GROUP_TYPE_ID: 10
-
-  MOBILE_DEVICE_TYPE_ID: 671
-
-HOME_FEATURES:
-  - algorithms: [DAILY_PRAYER]
-    isCard: false
-    type: PrayerList
-    title: Daily Prayer
-  - algorithms: [CAMPAIGN_ITEMS]
-    type: HeroList
-    isFeatured: true
-    primaryAction:
-      # Right now, you hardcode exactly what GraphQL should return.
-      # Long term, we hope to have a more sophisticated mechanism for driving this field
-      action: OPEN_URL
-      title: 'Read More'
-      relatedNode:
-        __typename: Url
-        url: 'https://wwww.apollos.io'
-  - title: FOR YOU
-    algorithms: [SERMON_CHILDREN, PERSONA_FEED]
-    subtitle: Explore what God calls you to today
-    type: ActionList
-  - algorithms: [PERSONA_FEED]
-    subtitle: Continue
-    type: HorizontalCardList
-  - title: RECOMMENDED
-    algorithms: [SERMON_CHILDREN]
-    subtitle: For Him
-    type: VerticalCardList
-  - title: BULLETIN
-    subtitle: What's happening at apollos?
-    type: ActionList
-    algorithms:
-      - type: CONTENT_CHANNEL
-        arguments:
-          contentChannelId: 13
-      - type: UPCOMING_EVENTS
-  - algorithms: [USER_FEED]
-    type: VerticalCardList
+  HOME_FEATURE_CHANNEL_ID: 13
 
 # Default mapping of field types -> ids. There's probably no reason to edit this.
 ROCK_CONSTANTS:
diff --git a/apollos-church-api/local.graphql b/apollos-church-api/local.graphql
index ed55533..e387714 100644
--- a/apollos-church-api/local.graphql
+++ b/apollos-church-api/local.graphql
@@ -1,9 +1,5 @@
-directive @cacheControl(maxAge: Int, scope: CacheControlScope) on FIELD_DEFINITION | OBJECT | INTERFACE
-
 enum ACTION_FEATURE_ACTION {
   READ_CONTENT
-  READ_EVENT
-  OPEN_URL
 }
 
 type ActionListAction {
@@ -21,7 +17,6 @@ type ActionListFeature implements Feature & Node {
   title: String
   subtitle: String
   actions: [ActionListAction]
-  primaryAction: FeatureAction
 }
 
 input AnalyticsDeviceInfo {
@@ -74,8 +69,7 @@ type AudioMediaSource implements MediaSource {
 type AuthenticatedUser {
   id: ID!
   profile: Person
-  rock: RockPersonDetails
-  rockToken: String @deprecated(reason: "Use rock.authCookie instead")
+  rockToken: String
 }
 
 type Authentication {
@@ -100,24 +94,11 @@ type Campus implements Node {
   longitude: Float
   image: ImageMediaSource
   distanceFromLocation(location: CampusLocationInput): Float
-  events: [Event]
 }
 
 input CampusLocationInput {
-  latitude: Float
-  longitude: Float
-}
-
-type CardListItem {
-  id: ID!
-  hasAction: Boolean
-  actionIcon: String
-  labelText: String
-  summary: String
-  coverImage: ImageMedia
-  title(hyphenated: Boolean): String
-  relatedNode: Node
-  action: ACTION_FEATURE_ACTION
+  latitude: Float!
+  longitude: Float!
 }
 
 """A rgb color string"""
@@ -134,7 +115,7 @@ type ContentChannel implements Node {
 
 interface ContentItem {
   id: ID!
-  title(hyphenated: Boolean): String
+  title: String
   coverImage: ImageMedia
   images: [ImageMedia]
   videos: [VideoMedia]
@@ -152,7 +133,6 @@ interface ContentItem {
 
 type ContentItemsConnection {
   edges: [ContentItemsConnectionEdge]
-  totalCount: Int
   pageInfo: PaginationInfo
 }
 
@@ -168,7 +148,7 @@ input ContentItemsConnectionInput {
 
 type ContentSeriesContentItem implements ContentItem & Node {
   id: ID!
-  title(hyphenated: Boolean): String
+  title: String
   coverImage: ImageMedia
   images: [ImageMedia]
   videos: [VideoMedia]
@@ -179,8 +159,6 @@ type ContentSeriesContentItem implements ContentItem & Node {
   siblingContentItemsConnection(first: Int, after: String): ContentItemsConnection
   parentChannel: ContentChannel
   theme: Theme
-  percentComplete: Float
-  upNext: ContentItem
   scriptures: [Scripture]
   isLiked: Boolean
   likedCount: Int
@@ -188,15 +166,9 @@ type ContentSeriesContentItem implements ContentItem & Node {
   features: [Feature]
 }
 
-type Device implements Node {
-  id: ID!
-  pushId: String!
-  notificationsEnabled: Boolean!
-}
-
 type DevotionalContentItem implements ContentItem & Node {
   id: ID!
-  title(hyphenated: Boolean): String
+  title: String
   coverImage: ImageMedia
   images: [ImageMedia]
   videos: [VideoMedia]
@@ -213,65 +185,17 @@ type DevotionalContentItem implements ContentItem & Node {
   sharing: SharableContentItem
 }
 
-type Event implements Node {
-  id: ID!
-  name: String
-  description: String
-  location: String
-  start: String
-  end: String
-  image: ImageMedia
-}
-
 interface Feature {
   id: ID!
   order: Int
 }
 
-type FeatureAction {
-  relatedNode: Node
-  action: ACTION_FEATURE_ACTION
-  title: String
-}
-
 enum GENDER {
   Male
   Female
   Unknown
 }
 
-type Group implements Node {
-  id: ID!
-  name: String
-  leader: Person @deprecated(reason: "No longer used, use 'leaders' instead")
-  leaders: [Person]
-  members: [Person]
-}
-
-enum GROUP_TYPE {
-  Serving
-  Community
-  Family
-}
-
-type HeroListFeature implements Feature & Node {
-  id: ID!
-  order: Int
-  title: String
-  subtitle: String
-  actions: [ActionListAction]
-  heroCard: CardListItem
-  primaryAction: FeatureAction
-}
-
-type HorizontalCardListFeature implements Feature & Node {
-  id: ID!
-  order: Int
-  title: String
-  subtitle: String
-  cards: [CardListItem]
-}
-
 type ImageMedia implements Media {
   name: String
   key: String
@@ -282,24 +206,6 @@ type ImageMediaSource implements MediaSource {
   uri: String
 }
 
-enum InteractionAction {
-  VIEW
-  COMPLETE
-  PRAY
-}
-
-input InteractionDataField {
-  field: String!
-  value: InteractionValue
-}
-
-type InteractionResult {
-  success: Boolean
-  node: Node
-}
-
-scalar InteractionValue
-
 enum LIKE_OPERATION {
   Like
   Unlike
@@ -315,7 +221,6 @@ type LiveStream {
   eventStartTime: String
   media: VideoMedia
   webViewUrl: String
-  contentItem: ContentItem
 }
 
 interface Media {
@@ -326,7 +231,7 @@ interface Media {
 
 type MediaContentItem implements ContentItem & Node {
   id: ID!
-  title(hyphenated: Boolean): String
+  title: String
   coverImage: ImageMedia
   images: [ImageMedia]
   videos: [VideoMedia]
@@ -361,16 +266,13 @@ type Mutation {
   uploadProfileImage(file: Upload!, size: Int!): Person
   authenticate(identity: String!, password: String!): Authentication
   changePassword(password: String!): Authentication
-  registerPerson(email: String!, password: String!, userProfile: [UpdateProfileInput]): Authentication
+  registerPerson(email: String!, password: String!): Authentication
   requestSmsLoginPin(phoneNumber: String!): SmsPinResult
   authenticateWithSms(phoneNumber: String!, pin: String!): Authentication
-  registerWithSms(phoneNumber: String!, pin: String!, userProfile: [UpdateProfileInput]): Authentication
-  interactWithNode(action: InteractionAction!, nodeId: ID!, data: [InteractionDataField]): InteractionResult
   identifySelf(input: AnalyticsIdentifyInput!): AnalyticsResult
   trackEvent(input: AnalyticsTrackInput!): AnalyticsResult
   updateUserPushSettings(input: PushSettingsInput!): Person
   updateUserCampus(campusId: String!): Person
-  addPrayer(text: String!, isAnonymous: Boolean): PrayerRequest
 }
 
 interface Node {
@@ -419,32 +321,13 @@ enum PassType {
 type Person implements Node {
   id: ID!
   firstName: String
-  lastName: String
+  lastName: String!
   nickName: String
   email: String
   gender: GENDER
   birthDate: String
   photo: ImageMediaSource
-  devices: [Device]
   campus: Campus
-  groups(type: GROUP_TYPE, asLeader: Boolean): [Group]
-}
-
-type PrayerListFeature implements Feature & Node {
-  id: ID!
-  order: Int
-  isCard: Boolean
-  title: String
-  subtitle: String
-  prayers: [PrayerRequest]
-}
-
-type PrayerRequest implements Node {
-  id: ID!
-  text: String!
-  requestor: Person
-  isAnonymous: Boolean
-  isPrayed: Boolean
 }
 
 input PushSettingsInput {
@@ -461,78 +344,47 @@ type Query {
   userFeed(first: Int, after: String): ContentItemsConnection
   personaFeed(first: Int, after: String): ContentItemsConnection
   currentUser: AuthenticatedUser
-  userExists(identity: String): USER_AUTH_STATUS
-  liveStream: LiveStream @deprecated(reason: "Use liveStreams, there may be multiple.")
-  liveStreams: [LiveStream]
-  scripture(query: String!, version: VERSION): Scripture @deprecated(reason: "Use 'scriptures' instead.")
-  scriptures(query: String!, version: VERSION): [Scripture]
+  liveStream: LiveStream
+  scripture(query: String!): Scripture
+  scriptures(query: String!): [Scripture]
   userPass: Pass
-  search(query: String!, first: Int, after: String): SearchResultsConnection
   campuses(location: CampusLocationInput): [Campus]
   userFeedFeatures: [Feature]
 }
 
-type RockPersonDetails {
-  authToken: String
-  authCookie: String
-}
-
 type Scripture implements Node {
   id: ID!
   html: String
   reference: String
   copyright: String
-  version: String
 }
 
 type ScriptureFeature implements Feature & Node {
   id: ID!
   order: Int
   scriptures: [Scripture]
-  sharing: SharableFeature
-}
-
-type SearchResult {
-  cursor: String
-  title: String
-  summary: String
-  coverImage: ImageMedia
-  node: Node
-}
-
-type SearchResultsConnection {
-  edges: [SearchResult]
-  pageInfo: PaginationInfo
 }
 
 interface Sharable {
+  url: String
   message: String
   title: String
-  url: String @deprecated(reason: "Not supported on the interface")
 }
 
 type SharableContentItem implements Sharable {
-  message: String
-  title: String
   url: String
-}
-
-type SharableFeature implements Sharable {
   message: String
   title: String
-  url: String @deprecated(reason: "Not supported on a feature")
 }
 
 type SmsPinResult {
   success: Boolean
-  userAuthStatus: USER_AUTH_STATUS
 }
 
 type TextFeature implements Feature & Node {
   id: ID!
   order: Int
   body: String
-  sharing: SharableFeature
 }
 
 type Theme {
@@ -555,7 +407,7 @@ enum ThemeType {
 
 type UniversalContentItem implements ContentItem & Node {
   id: ID!
-  title(hyphenated: Boolean): String
+  title: String
   coverImage: ImageMedia
   images: [ImageMedia]
   videos: [VideoMedia]
@@ -588,31 +440,6 @@ input UpdateProfileInput {
 """The `Upload` scalar type represents a file upload."""
 scalar Upload
 
-type Url implements Node {
-  url: String
-  id: ID!
-}
-
-enum USER_AUTH_STATUS {
-  NONE
-  NEW_APP_USER
-  EXISTING_APP_USER
-}
-
-enum VERSION {
-  WEB
-  KJV
-}
-
-type VerticalCardListFeature implements Feature & Node {
-  id: ID!
-  order: Int
-  title: String
-  subtitle: String
-  isFeatured: Boolean
-  cards: [CardListItem]
-}
-
 type VideoMedia implements Media {
   name: String
   key: String
@@ -624,17 +451,9 @@ type VideoMediaSource implements MediaSource {
   uri: String
 }
 
-type WebviewFeature implements Feature & Node {
-  id: ID!
-  order: Int
-  linkText: String
-  title: String
-  url: String
-}
-
 type WeekendContentItem implements ContentItem & Node {
   id: ID!
-  title(hyphenated: Boolean): String
+  title: String
   coverImage: ImageMedia
   images: [ImageMedia]
   videos: [VideoMedia]
diff --git a/apollos-church-api/package.json b/apollos-church-api/package.json
index d1d484b..3896844 100644
--- a/apollos-church-api/package.json
+++ b/apollos-church-api/package.json
@@ -1,15 +1,12 @@
 {
   "name": "apollos-church-api",
-  "version": "1.3.1",
+  "version": "1.1.0-beta.2",
   "private": true,
   "main": "lib/index.js",
   "scripts": {
     "start": "./scripts/generateLocalSchema.sh & yarn start:dev",
-    "start:dev": "linkemon ./src/index.js --exec babel-node --delay 2 -e js,yaml,json,yml",
+    "start:dev": "nodemon ./src/index.js --exec babel-node --delay 2",
     "start:prod": "NODE_ENV=production node ./lib/index.js",
-    "postinstall": "yarn build",
-    "link-packages": "node ./scripts/link-packages",
-    "unlink-packages": "node ./scripts/link-packages remove",
     "build": "NODE_ENV=production rm -rf ./lib && mkdir -p lib && babel ./src -d ./lib",
     "test": "echo \"No tests in apollos-church-api, all tested code is located in @apollosproject npm modules\"",
     "lint": "eslint ./src --ext .js",
@@ -17,8 +14,7 @@
     "codecov": "cat ./coverage/lcov.info | codecov",
     "version": "node ../../scripts/update-apollos-version.js && git add apollos.json",
     "schema-diff": "./scripts/schemaDiff.sh",
-    "schema-lint": "graphql-schema-linter local.graphql",
-    "upgrade": "npx @apollosproject/upgrade-tools upgrade"
+    "schema-lint": "graphql-schema-linter local.graphql"
   },
   "engines": {
     "node": ">=8.11.x"
@@ -38,53 +34,35 @@
     ]
   },
   "dependencies": {
-    "@apollosproject/config": "1.5.0-beta.0",
-    "@apollosproject/bugsnag": "1.5.0-beta.0",
-    "@apollosproject/data-connector-algolia-search": "1.5.0-beta.0",
-    "@apollosproject/data-connector-analytics": "1.5.0-beta.0",
-    "@apollosproject/data-connector-bible": "1.5.0-beta.0",
-    "@apollosproject/data-connector-church-online": "1.5.0-beta.0",
-    "@apollosproject/data-connector-cloudinary": "1.5.0-beta.0",
-    "@apollosproject/data-connector-onesignal": "1.5.0-beta.0",
-    "@apollosproject/data-connector-passes": "1.5.0-beta.0",
-    "@apollosproject/data-connector-redis-cache": "1.5.0-beta.0",
-    "@apollosproject/data-connector-rock": "1.5.0-beta.0",
-    "@apollosproject/data-connector-twilio": "1.5.0-beta.0",
-    "@apollosproject/data-schema": "1.5.0-beta.0",
-    "@apollosproject/rock-apollo-data-source": "1.5.0-beta.0",
-    "@apollosproject/server-core": "1.5.0-beta.0",
-    "apollo-server": "^2.14.2",
-    "apollo-server-express": "2.14.2",
+    "@apollosproject/config": "^1.1.0-beta.2",
+    "@apollosproject/data-connector-analytics": "^1.1.0-beta.2",
+    "@apollosproject/data-connector-bible": "^1.1.0-beta.2",
+    "@apollosproject/data-connector-church-online": "^1.1.0-beta.2",
+    "@apollosproject/data-connector-cloudinary": "^1.1.0-beta.2",
+    "@apollosproject/data-connector-onesignal": "^1.1.0-beta.2",
+    "@apollosproject/data-connector-passes": "^1.1.0-beta.2",
+    "@apollosproject/data-connector-rock": "^1.1.0-beta.2",
+    "@apollosproject/data-connector-twilio": "^1.1.0-beta.2",
+    "@apollosproject/rock-apollo-data-source": "^1.1.0-beta.2",
+    "@apollosproject/server-core": "^1.1.0-beta.2",
+    "apollo-server": "^2.0.5",
+    "apollo-server-express": "2.4.8",
     "color": "3.0.0",
     "dotenv": "6.0.0",
     "express": "^4.17.0",
-    "graphql": "14.6.0",
+    "graphql": "0.13.2",
     "prettier": "1.12.1",
     "randomcolor": "0.5.3"
   },
   "devDependencies": {
-    "@apollosproject/apollo-server-env-mock": "1.4.3",
-    "@apollosproject/babel-preset-apollos": "1.4.3",
-    "@apollosproject/eslint-config": "1.4.3",
+    "@apollosproject/apollo-server-env-mock": "^1.1.0-beta.2",
+    "@apollosproject/babel-preset-apollos": "^1.1.0-beta.2",
     "@babel/cli": "^7.4.5",
     "@babel/core": "^7.4.5",
-    "@babel/node": "^7.7.4",
     "@entria/graphql-findbreakingchanges": "^1.0.1",
-    "babel-eslint": "^10.0.3",
-    "babel-jest": "^24.9.0",
-    "babel-plugin-module-resolver": "^3.2.0",
-    "codecov": "3.7.1",
+    "codecov": "3.0.2",
     "get-graphql-schema": "^2.1.2",
     "graphql-schema-linter": "^0.2.0",
-    "nodemon": "^2.0.2",
-    "linkemon": "^0.1.1",
-    "eslint": "^5.16.0",
-    "eslint-config-airbnb-base": "^14.0.0",
-    "eslint-config-prettier": "^2.9.0",
-    "eslint-import-resolver-babel-module": "^5.0.0-beta.0",
-    "eslint-plugin-babel": "^5.1.0",
-    "eslint-plugin-import": "^2.12.0",
-    "eslint-plugin-jest": "^21.15.2",
-    "eslint-plugin-prettier": "^2.6.0"
+    "nodemon": "1.18.7"
   }
-}
\ No newline at end of file
+}
diff --git a/apollos-church-api/scripts/generateLocalSchema.sh b/apollos-church-api/scripts/generateLocalSchema.sh
index d8008f2..dc7e07e 100755
--- a/apollos-church-api/scripts/generateLocalSchema.sh
+++ b/apollos-church-api/scripts/generateLocalSchema.sh
@@ -8,7 +8,7 @@ else
   echo $*
   if [ "$*" = "--start-server" ]; then
     echo 'Server not running, starting server'
-    PORT=4000 npm run start:prod > /tmp/server-log.txt &
+    PORT=4000 TWILIO_ACCOUNT_SID=ACXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX npm run start:prod > /tmp/server-log.txt &
     SERVER_PID=$!
     echo "Server running... (PID $SERVER_PID)"
   fi
@@ -19,8 +19,7 @@ else
   done
   echo 'Curling Server for most recent schema.'
   ./node_modules/.bin/get-graphql-schema http://localhost:4000 > local.graphql
-  echo 'Publishing Schema to Apollo Engine.'
-  npx apollo schema:publish --endpoint=http://localhost:4000
+  echo 'Done. Check local.graphql'
   if [ "$*" = "--start-server" ]; then
     echo "Killing Server (PID $SERVER_PID)"
     kill -9 $SERVER_PID
diff --git a/apollos-church-api/scripts/link-packages.js b/apollos-church-api/scripts/link-packages.js
deleted file mode 100644
index 7778c0a..0000000
--- a/apollos-church-api/scripts/link-packages.js
+++ /dev/null
@@ -1,16 +0,0 @@
-const fs = require('fs');
-const { execSync } = require('child_process');
-
-const direction = process.argv[2] || 'link';
-
-const packageJson = JSON.parse(fs.readFileSync(`${__dirname}/../package.json`));
-
-const dependencies = [
-  ...Object.keys(packageJson.dependencies),
-  ...Object.keys(packageJson.devDependencies),
-].filter((d) => d.includes('@apollosproject'));
-
-dependencies.forEach((dep) => {
-  const output = execSync(`yalc ${direction} ${dep}`, { encoding: 'utf8' });
-  console.log(output);
-});
diff --git a/apollos-church-api/src/data/index.js b/apollos-church-api/src/data/index.js
index 5dc4a1e..60ee373 100644
--- a/apollos-church-api/src/data/index.js
+++ b/apollos-church-api/src/data/index.js
@@ -7,9 +7,7 @@ import * as Scripture from '@apollosproject/data-connector-bible';
 import * as LiveStream from '@apollosproject/data-connector-church-online';
 import * as Cloudinary from '@apollosproject/data-connector-cloudinary';
 import * as OneSignal from '@apollosproject/data-connector-onesignal';
-import * as Search from '@apollosproject/data-connector-algolia-search';
 import * as Pass from '@apollosproject/data-connector-passes';
-import * as Cache from '@apollosproject/data-connector-redis-cache';
 import * as Sms from '@apollosproject/data-connector-twilio';
 import {
   Followings,
@@ -24,11 +22,8 @@ import {
   Template,
   AuthSms,
   Campus,
-  Group,
   BinaryFiles,
-  Feature,
-  Event,
-  PrayerRequest,
+  Features,
 } from '@apollosproject/data-connector-rock';
 import * as Theme from './theme';
 
@@ -56,15 +51,10 @@ const data = {
   PersonalDevice,
   OneSignalWithRock,
   Pass,
-  Search,
   Template,
   Campus,
-  Group,
   BinaryFiles,
-  Feature,
-  Event,
-  Cache,
-  PrayerRequest,
+  Features,
 };
 
 const {
@@ -73,17 +63,9 @@ const {
   schema,
   context,
   applyServerMiddleware,
-  setupJobs,
 } = createApolloServerConfig(data);
 
-export {
-  dataSources,
-  resolvers,
-  schema,
-  context,
-  applyServerMiddleware,
-  setupJobs,
-};
+export { dataSources, resolvers, schema, context, applyServerMiddleware };
 
 // the upload Scalar is added
 export const testSchema = [
diff --git a/apollos-church-api/src/index.js b/apollos-church-api/src/index.js
index 3acfad0..796ad4d 100644
--- a/apollos-church-api/src/index.js
+++ b/apollos-church-api/src/index.js
@@ -8,9 +8,9 @@ export { testSchema } from './server'; // eslint-disable-line import/prefer-defa
 const { PORT } = process.env;
 if (!PORT && process.env.NODE_ENV !== 'test')
   console.warn(
-    'Add `PORT=XXXX` if you are having trouble connecting to the server. By default, PORT is 4000.'
+    'Add `ENV=4000` if you are having trouble connecting to the server. By default, PORT is random.'
   );
 
-server.listen({ port: PORT || 4000 }, () => {
-  console.log(`🚀 Server ready at http://0.0.0.0:${PORT || 4000}`);
+server.listen({ port: PORT }, () => {
+  console.log(`🚀 Server ready at http://0.0.0.0:${PORT}`);
 });
diff --git a/apollos-church-api/src/server.js b/apollos-church-api/src/server.js
index e85c7e0..74a305e 100644
--- a/apollos-church-api/src/server.js
+++ b/apollos-church-api/src/server.js
@@ -1,10 +1,7 @@
 import { ApolloServer } from 'apollo-server-express';
-import ApollosConfig from '@apollosproject/config';
 import express from 'express';
 import { RockLoggingExtension } from '@apollosproject/rock-apollo-data-source';
-import { get } from 'lodash';
-import { setupUniversalLinks } from '@apollosproject/server-core';
-import { BugsnagPlugin } from '@apollosproject/bugsnag';
+
 import {
   resolvers,
   schema,
@@ -12,7 +9,6 @@ import {
   context,
   dataSources,
   applyServerMiddleware,
-  setupJobs,
 } from './data';
 
 export { resolvers, schema, testSchema };
@@ -22,18 +18,6 @@ const isDev =
 
 const extensions = isDev ? [() => new RockLoggingExtension()] : [];
 
-const cacheOptions = isDev
-  ? {}
-  : {
-      cacheControl: {
-        stripFormattedExtensions: false,
-        calculateHttpHeaders: true,
-        defaultMaxAge: 3600,
-      },
-    };
-
-const { ENGINE } = ApollosConfig;
-
 const apolloServer = new ApolloServer({
   typeDefs: schema,
   resolvers,
@@ -41,9 +25,8 @@ const apolloServer = new ApolloServer({
   context,
   introspection: true,
   extensions,
-  plugins: [new BugsnagPlugin()],
   formatError: (error) => {
-    console.error(get(error, 'extensions.exception.stacktrace').join('\n'));
+    console.error(error.extensions.exception.stacktrace.join('\n'));
     return error;
   },
   playground: {
@@ -51,20 +34,16 @@ const apolloServer = new ApolloServer({
       'editor.cursorShape': 'line',
     },
   },
-  ...cacheOptions,
-  engine: {
-    apiKey: ENGINE.API_KEY,
-    schemaTag: ENGINE.SCHEMA_TAG,
+  cacheControl: {
+    stripFormattedExtensions: false,
+    calculateHttpHeaders: true,
+    defaultMaxAge: 600,
   },
 });
 
 const app = express();
 
 applyServerMiddleware({ app, dataSources, context });
-setupJobs({ app, dataSources, context });
-// Comment out if you don't want the API serving apple-app-site-association or assetlinks manifests.
-setupUniversalLinks({ app });
-
 apolloServer.applyMiddleware({ app });
 apolloServer.applyMiddleware({ app, path: '/' });
 
diff --git a/apollos-church-api/wallet-passes/checkin.pass/pass.json b/apollos-church-api/wallet-passes/checkin.pass/pass.json
index a3916b3..8909bd1 100644
--- a/apollos-church-api/wallet-passes/checkin.pass/pass.json
+++ b/apollos-church-api/wallet-passes/checkin.pass/pass.json
@@ -7,7 +7,6 @@
   "logoText": "Apollos Church",
   "backgroundColor": "rgb(0,103,109)",
   "foregroundColor": "rgb(248,247,244)",
-  "labelColor": "rgb(248,247,244)",
   "serialNumber": "checkinpass-{{ person | GetPersonAlternateId }}",
   "thumbnail": {
     "uri": "{{ person.Photo.Url }}&format=png&height=200"
