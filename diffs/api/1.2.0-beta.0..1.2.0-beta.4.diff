diff --git a/apollos-church-api/apollos.json b/apollos-church-api/apollos.json
index 5c49045..5908724 100644
--- a/apollos-church-api/apollos.json
+++ b/apollos-church-api/apollos.json
@@ -1,4 +1,4 @@
 {
-    "version": "1.2.0-beta.0",
+    "version": "1.2.0-beta.4",
     "environment": "api"
 }
\ No newline at end of file
diff --git a/apollos-church-api/config.yml b/apollos-church-api/config.yml
index 4a16624..e9cb0f5 100644
--- a/apollos-church-api/config.yml
+++ b/apollos-church-api/config.yml
@@ -20,6 +20,7 @@ ROCK:
   # This should match the timezone of the Rock server
   TIMEZONE: 'America/New_York'
   USE_PLUGIN: true
+  SHOW_INACTIVE_CONTENT: ${ROCK_SHOW_INACTIVE_CONTENT}
 ONE_SIGNAL:
   APP_ID: b6e75a77-003f-4466-95ca-82cc5cdc407b
   REST_KEY: ${ONE_SIGNAL_REST_KEY}
@@ -57,6 +58,9 @@ CLOUDINARY:
   # value should look something like
   # cloudinary://123123123:adkfnla_adASDv_adAS@test
   URL: ${CLOUDINARY_URL}
+ENGINE:
+  API_KEY: ${ENGINE_API_KEY}
+  SCHEMA_TAG: ${ENGINE_SCHEMA_TAG}
 
 # This key holds various properties that allow our GraphQL server to map to your Rock Instance
 ROCK_MAPPINGS:
diff --git a/apollos-church-api/local.graphql b/apollos-church-api/local.graphql
index a146e0a..1bc7396 100644
--- a/apollos-church-api/local.graphql
+++ b/apollos-church-api/local.graphql
@@ -70,7 +70,8 @@ type AudioMediaSource implements MediaSource {
 type AuthenticatedUser {
   id: ID!
   profile: Person
-  rockToken: String
+  rock: RockPersonDetails
+  rockToken: String @deprecated(reason: "Use rock.authCookie instead")
 }
 
 type Authentication {
@@ -190,9 +191,11 @@ type DevotionalContentItem implements ContentItem & Node {
 type Event implements Node {
   id: ID!
   name: String
+  description: String
   location: String
   start: String
   end: String
+  image: ImageMedia
 }
 
 interface Feature {
@@ -209,7 +212,8 @@ enum GENDER {
 type Group implements Node {
   id: ID!
   name: String
-  leader: Person
+  leader: Person @deprecated(reason: "No longer used, use 'leaders' instead")
+  leaders: [Person]
   members: [Person]
 }
 
@@ -344,7 +348,7 @@ enum PassType {
 type Person implements Node {
   id: ID!
   firstName: String
-  lastName: String!
+  lastName: String
   nickName: String
   email: String
   gender: GENDER
@@ -377,6 +381,11 @@ type Query {
   userFeedFeatures: [Feature]
 }
 
+type RockPersonDetails {
+  authToken: String
+  authCookie: String
+}
+
 type Scripture implements Node {
   id: ID!
   html: String
diff --git a/apollos-church-api/package.json b/apollos-church-api/package.json
index 8c33796..f23b61e 100644
--- a/apollos-church-api/package.json
+++ b/apollos-church-api/package.json
@@ -1,6 +1,6 @@
 {
   "name": "apollos-church-api",
-  "version": "1.2.0-beta.0",
+  "version": "1.2.0-beta.4",
   "private": true,
   "main": "lib/index.js",
   "scripts": {
@@ -34,18 +34,20 @@
     ]
   },
   "dependencies": {
-    "@apollosproject/config": "^1.2.0-beta.0",
-    "@apollosproject/data-connector-algolia-search": "^1.2.0-beta.0",
-    "@apollosproject/data-connector-analytics": "^1.2.0-beta.0",
-    "@apollosproject/data-connector-bible": "^1.2.0-beta.0",
-    "@apollosproject/data-connector-church-online": "^1.2.0-beta.0",
-    "@apollosproject/data-connector-cloudinary": "^1.2.0-beta.0",
-    "@apollosproject/data-connector-onesignal": "^1.2.0-beta.0",
-    "@apollosproject/data-connector-passes": "^1.2.0-beta.0",
-    "@apollosproject/data-connector-rock": "^1.2.0-beta.0",
-    "@apollosproject/data-connector-twilio": "^1.2.0-beta.0",
-    "@apollosproject/rock-apollo-data-source": "^1.2.0-beta.0",
-    "@apollosproject/server-core": "^1.2.0-beta.0",
+    "@apollosproject/config": "^1.2.0-beta.4",
+    "@apollosproject/data-connector-algolia-search": "^1.2.0-beta.4",
+    "@apollosproject/data-connector-analytics": "^1.2.0-beta.4",
+    "@apollosproject/data-connector-bible": "^1.2.0-beta.4",
+    "@apollosproject/data-connector-church-online": "^1.2.0-beta.4",
+    "@apollosproject/data-connector-cloudinary": "^1.2.0-beta.4",
+    "@apollosproject/data-connector-onesignal": "^1.2.0-beta.4",
+    "@apollosproject/data-connector-passes": "^1.2.0-beta.4",
+    "@apollosproject/data-connector-redis-cache": "^1.2.0-beta.4",
+    "@apollosproject/data-connector-rock": "^1.2.0-beta.4",
+    "@apollosproject/data-connector-twilio": "^1.2.0-beta.4",
+    "@apollosproject/data-schema": "^1.2.0-beta.4",
+    "@apollosproject/rock-apollo-data-source": "^1.2.0-beta.4",
+    "@apollosproject/server-core": "^1.2.0-beta.4",
     "apollo-server": "^2.0.5",
     "apollo-server-express": "2.4.8",
     "color": "3.0.0",
@@ -56,8 +58,8 @@
     "randomcolor": "0.5.3"
   },
   "devDependencies": {
-    "@apollosproject/apollo-server-env-mock": "^1.2.0-beta.0",
-    "@apollosproject/babel-preset-apollos": "^1.2.0-beta.0",
+    "@apollosproject/apollo-server-env-mock": "^1.2.0-beta.4",
+    "@apollosproject/babel-preset-apollos": "^1.2.0-beta.4",
     "@babel/cli": "^7.4.5",
     "@babel/core": "^7.4.5",
     "@entria/graphql-findbreakingchanges": "^1.0.1",
diff --git a/apollos-church-api/scripts/generateLocalSchema.sh b/apollos-church-api/scripts/generateLocalSchema.sh
index dc7e07e..869e5a8 100755
--- a/apollos-church-api/scripts/generateLocalSchema.sh
+++ b/apollos-church-api/scripts/generateLocalSchema.sh
@@ -19,7 +19,8 @@ else
   done
   echo 'Curling Server for most recent schema.'
   ./node_modules/.bin/get-graphql-schema http://localhost:4000 > local.graphql
-  echo 'Done. Check local.graphql'
+  echo 'Publishing Schema to Apollo Engine.'
+  npx apollo server:publish --endpoint=http://localhost:4000
   if [ "$*" = "--start-server" ]; then
     echo "Killing Server (PID $SERVER_PID)"
     kill -9 $SERVER_PID
diff --git a/apollos-church-api/src/data/index.js b/apollos-church-api/src/data/index.js
index 0cc46b7..50d8d41 100644
--- a/apollos-church-api/src/data/index.js
+++ b/apollos-church-api/src/data/index.js
@@ -9,6 +9,7 @@ import * as Cloudinary from '@apollosproject/data-connector-cloudinary';
 import * as OneSignal from '@apollosproject/data-connector-onesignal';
 import * as Search from '@apollosproject/data-connector-algolia-search';
 import * as Pass from '@apollosproject/data-connector-passes';
+import * as Cache from '@apollosproject/data-connector-redis-cache';
 import * as Sms from '@apollosproject/data-connector-twilio';
 import {
   Followings,
@@ -26,7 +27,7 @@ import {
   Group,
   BinaryFiles,
   Features,
-  Events,
+  Event,
 } from '@apollosproject/data-connector-rock';
 import * as Theme from './theme';
 
@@ -60,7 +61,8 @@ const data = {
   Group,
   BinaryFiles,
   Features,
-  Events,
+  Event,
+  Cache,
 };
 
 const {
diff --git a/apollos-church-api/src/server.js b/apollos-church-api/src/server.js
index 8d7efa4..8652945 100644
--- a/apollos-church-api/src/server.js
+++ b/apollos-church-api/src/server.js
@@ -1,4 +1,5 @@
 import { ApolloServer } from 'apollo-server-express';
+import ApollosConfig from '@apollosproject/config';
 import express from 'express';
 import { RockLoggingExtension } from '@apollosproject/rock-apollo-data-source';
 
@@ -19,6 +20,18 @@ const isDev =
 
 const extensions = isDev ? [() => new RockLoggingExtension()] : [];
 
+const cacheOptions = isDev
+  ? {}
+  : {
+      cacheControl: {
+        stripFormattedExtensions: false,
+        calculateHttpHeaders: true,
+        defaultMaxAge: 600,
+      },
+    };
+
+const { ENGINE } = ApollosConfig;
+
 const apolloServer = new ApolloServer({
   typeDefs: schema,
   resolvers,
@@ -35,10 +48,10 @@ const apolloServer = new ApolloServer({
       'editor.cursorShape': 'line',
     },
   },
-  cacheControl: {
-    stripFormattedExtensions: false,
-    calculateHttpHeaders: true,
-    defaultMaxAge: 600,
+  ...cacheOptions,
+  engine: {
+    apiKey: ENGINE.API_KEY,
+    schemaTag: ENGINE.SCHEMA_TAG,
   },
 });
 
