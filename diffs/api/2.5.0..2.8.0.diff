diff --git a/apollos-church-api/apollos.json b/apollos-church-api/apollos.json
index e3165bfb..f01890c1 100644
--- a/apollos-church-api/apollos.json
+++ b/apollos-church-api/apollos.json
@@ -1,4 +1,4 @@
 {
-  "version": "2.5.0",
+  "version": "2.8.0",
   "environment": "api"
 }
diff --git a/apollos-church-api/package.json b/apollos-church-api/package.json
index 3d6759b9..53f9185e 100644
--- a/apollos-church-api/package.json
+++ b/apollos-church-api/package.json
@@ -19,22 +19,22 @@
     "node": ">=12.x.x"
   },
   "dependencies": {
-    "@apollosproject/bugsnag": "^2.5.0",
-    "@apollosproject/config": "^2.5.0",
-    "@apollosproject/data-connector-algolia-search": "^2.5.0",
-    "@apollosproject/data-connector-analytics": "^2.5.0",
-    "@apollosproject/data-connector-bible": "^2.5.0",
-    "@apollosproject/data-connector-church-online": "^2.5.0",
-    "@apollosproject/data-connector-cloudinary": "^2.5.0",
-    "@apollosproject/data-connector-onesignal": "^2.5.0",
-    "@apollosproject/data-connector-passes": "^2.5.0",
-    "@apollosproject/data-connector-postgres": "^2.5.0",
-    "@apollosproject/data-connector-redis-cache": "^2.5.0",
-    "@apollosproject/data-connector-rock": "^2.5.0",
-    "@apollosproject/data-connector-twilio": "^2.5.0",
-    "@apollosproject/data-schema": "^2.5.0",
-    "@apollosproject/rock-apollo-data-source": "^2.5.0",
-    "@apollosproject/server-core": "^2.5.0",
+    "@apollosproject/bugsnag": "^2.8.0",
+    "@apollosproject/config": "^2.8.0",
+    "@apollosproject/data-connector-algolia-search": "^2.8.0",
+    "@apollosproject/data-connector-analytics": "^2.8.0",
+    "@apollosproject/data-connector-bible": "^2.8.0",
+    "@apollosproject/data-connector-church-online": "^2.8.0",
+    "@apollosproject/data-connector-cloudinary": "^2.8.0",
+    "@apollosproject/data-connector-onesignal": "^2.8.0",
+    "@apollosproject/data-connector-passes": "^2.8.0",
+    "@apollosproject/data-connector-postgres": "^2.8.0",
+    "@apollosproject/data-connector-redis-cache": "^2.8.0",
+    "@apollosproject/data-connector-rock": "^2.8.0",
+    "@apollosproject/data-connector-twilio": "^2.8.0",
+    "@apollosproject/data-schema": "^2.8.0",
+    "@apollosproject/rock-apollo-data-source": "^2.8.0",
+    "@apollosproject/server-core": "^2.8.0",
     "apollo-server": "^2.14.2",
     "apollo-server-express": "2.14.2",
     "color": "3.0.0",
@@ -48,9 +48,9 @@
     "umzug": "^3.0.0-beta.15"
   },
   "devDependencies": {
-    "@apollosproject/apollo-server-env-mock": "^2.5.0",
-    "@apollosproject/babel-preset-apollos": "^2.5.0",
-    "@apollosproject/eslint-config": "^2.5.0",
+    "@apollosproject/apollo-server-env-mock": "^2.8.0",
+    "@apollosproject/babel-preset-apollos": "^2.8.0",
+    "@apollosproject/eslint-config": "^2.8.0",
     "@babel/cli": "^7.4.5",
     "@babel/core": "^7.4.5",
     "@babel/node": "^7.7.4",
diff --git a/apollos-church-api/src/data/index.js b/apollos-church-api/src/data/index.js
index 3c8f2c90..b9886fb3 100644
--- a/apollos-church-api/src/data/index.js
+++ b/apollos-church-api/src/data/index.js
@@ -43,6 +43,10 @@ import * as Theme from './theme';
 // This module includes a Resolver that overides a resolver defined in `OneSignal`
 import * as OneSignalWithRock from './oneSignalWithRock';
 
+// This is to mock any postgres resolvers so we don't throw API errors for unresolved
+// typedefs
+import NoPostgres from './noPostgres';
+
 const data = {
   Interfaces,
   Followings,
@@ -76,6 +80,7 @@ const data = {
   Persona,
   Person,
   BinaryFiles,
+  NoPostgres,
 };
 
 const {
diff --git a/apollos-church-api/src/data/index.postgres.js b/apollos-church-api/src/data/index.postgres.js
index 46b7ca3b..63052d6f 100644
--- a/apollos-church-api/src/data/index.postgres.js
+++ b/apollos-church-api/src/data/index.postgres.js
@@ -39,6 +39,7 @@ import {
 import {
   Comment,
   UserFlag,
+  UserLike,
   Follow,
   Campus as PostgresCampus,
   Person as PostgresPerson,
@@ -83,6 +84,7 @@ const data = {
   Cache,
   PrayerRequest,
   Comment,
+  UserLike,
   UserFlag,
   Follow,
   PostgresCampus,
diff --git a/apollos-church-api/src/data/noPostgres.js b/apollos-church-api/src/data/noPostgres.js
new file mode 100644
index 00000000..bd292eac
--- /dev/null
+++ b/apollos-church-api/src/data/noPostgres.js
@@ -0,0 +1,46 @@
+// The purpose of this file is to mock the postgres resolvers to null so the API doesn't fail when
+// there's no database. This will not be necessary when Postgres is required by all Apollos APIs.
+import gql from 'graphql-tag';
+import { Comment, Follow } from '@apollosproject/data-connector-postgres';
+
+export default {
+  schema: gql`
+    ${Comment.schema}
+    ${Follow.schema}
+  `,
+  resolver: {
+    Query: {
+      followRequests: () => [],
+      suggestedFollows: () => [],
+      searchPeople: () => {},
+    },
+    Mutation: {
+      addComment: () => null,
+      flagComment: () => null,
+      requestFollow: () => null,
+      acceptFollowRequest: () => null,
+      ignoreFollowRequest: () => null,
+    },
+    Comment: {
+      person: () => null,
+      id: () => null,
+    },
+    CommentListFeature: {
+      id: () => null,
+    },
+    AddCommentFeature: {
+      id: () => null,
+      initialPrompt: () => null,
+      addPrompt: () => null,
+      relatedNode: () => null,
+    },
+    Person: {
+      currentUserFollowing: () => null,
+      followingCurrentUser: () => null,
+    },
+    SearchPeopleResultsConnection: {
+      edges: () => [],
+      pageInfo: () => null,
+    },
+  },
+};
