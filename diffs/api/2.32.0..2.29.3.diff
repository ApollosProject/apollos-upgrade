diff --git a/apollos-church-api/apollos.json b/apollos-church-api/apollos.json
index b6771f52..6c37ad46 100644
--- a/apollos-church-api/apollos.json
+++ b/apollos-church-api/apollos.json
@@ -1,4 +1,4 @@
 {
-  "version": "2.32.0",
+  "version": "2.29.3",
   "environment": "api"
 }
diff --git a/apollos-church-api/package.json b/apollos-church-api/package.json
index b6595ec9..7bb82c12 100644
--- a/apollos-church-api/package.json
+++ b/apollos-church-api/package.json
@@ -5,7 +5,6 @@
   "main": "lib/index.js",
   "scripts": {
     "setup": "./scripts/init.sh",
-    "migrator": "node ./lib/migrator.js",
     "start": "NODE_ENV=production node ./lib/index.js",
     "start:dev": "linkemon ./src/index.js --exec babel-node --delay 2 -e js,yaml,json,yml",
     "postinstall": "yarn build",
@@ -18,33 +17,34 @@
     "node": ">=14"
   },
   "dependencies": {
-    "@apollosproject/config": "^2.32.0",
-    "@apollosproject/data-connector-algolia-search": "^2.32.0",
-    "@apollosproject/data-connector-analytics": "^2.32.0",
-    "@apollosproject/data-connector-bible": "^2.32.0",
-    "@apollosproject/data-connector-church-online": "^2.32.0",
-    "@apollosproject/data-connector-cloudinary": "^2.32.0",
-    "@apollosproject/data-connector-onesignal": "^2.32.0",
-    "@apollosproject/data-connector-passes": "^2.32.0",
-    "@apollosproject/data-connector-postgres": "^2.32.0",
-    "@apollosproject/data-connector-redis-cache": "^2.32.0",
-    "@apollosproject/data-connector-rock": "^2.32.0",
-    "@apollosproject/data-connector-twilio": "^2.32.0",
-    "@apollosproject/data-schema": "^2.32.0",
-    "@apollosproject/rock-apollo-data-source": "^2.32.0",
-    "@apollosproject/server-core": "^2.32.0",
+    "@apollosproject/config": "^2.29.3",
+    "@apollosproject/data-connector-algolia-search": "^2.29.3",
+    "@apollosproject/data-connector-analytics": "^2.29.3",
+    "@apollosproject/data-connector-bible": "^2.29.3",
+    "@apollosproject/data-connector-church-online": "^2.29.3",
+    "@apollosproject/data-connector-cloudinary": "^2.29.3",
+    "@apollosproject/data-connector-onesignal": "^2.29.3",
+    "@apollosproject/data-connector-passes": "^2.29.3",
+    "@apollosproject/data-connector-postgres": "^2.29.3",
+    "@apollosproject/data-connector-redis-cache": "^2.29.3",
+    "@apollosproject/data-connector-rock": "^2.29.3",
+    "@apollosproject/data-connector-twilio": "^2.29.3",
+    "@apollosproject/data-schema": "^2.29.3",
+    "@apollosproject/rock-apollo-data-source": "^2.29.3",
+    "@apollosproject/server-core": "^2.29.3",
     "apollo-server": "^2.24.1",
     "apollo-server-express": "2.14.2",
     "color": "3.0.0",
     "dotenv": "6.0.0",
     "express": "^4.17.0",
     "graphql": "14.6.0",
+    "graphql-upload": "^12.0.0",
     "randomcolor": "0.5.3"
   },
   "devDependencies": {
-    "@apollosproject/apollo-server-env-mock": "^2.32.0",
-    "@apollosproject/babel-preset-apollos": "^2.32.0",
-    "@apollosproject/eslint-config": "^2.32.0",
+    "@apollosproject/apollo-server-env-mock": "^2.29.3",
+    "@apollosproject/babel-preset-apollos": "^2.29.3",
+    "@apollosproject/eslint-config": "^2.29.3",
     "@babel/cli": "^7.4.5",
     "@babel/core": "^7.4.5",
     "@babel/node": "^7.7.4",
diff --git a/apollos-church-api/src/config.js b/apollos-church-api/src/config.js
index 53b6558c..8291fd33 100644
--- a/apollos-church-api/src/config.js
+++ b/apollos-church-api/src/config.js
@@ -3,14 +3,12 @@ import fetch from 'node-fetch';
 import dotenv from "dotenv/config"; // eslint-disable-line
 import ApollosConfig from '@apollosproject/config';
 
+const configName = process.env.DATABASE_URL
+  ? 'config.postgres.yml'
+  : 'config.yml';
+
 ApollosConfig.loadYaml({
-  configPath: path.join(
-    __dirname,
-    '..',
-    process.env.DATABASE_CONTENT === 'true'
-      ? 'config.postgres.yml'
-      : 'config.yml'
-  ),
+  configPath: path.join(__dirname, '..', configName),
 });
 
 // defaults
diff --git a/apollos-church-api/src/data/index.postgres.js b/apollos-church-api/src/data/index.postgres.js
index 870748cf..4acac1d5 100644
--- a/apollos-church-api/src/data/index.postgres.js
+++ b/apollos-church-api/src/data/index.postgres.js
@@ -15,6 +15,7 @@ import * as Cache from '@apollosproject/data-connector-redis-cache';
 import * as Sms from '@apollosproject/data-connector-twilio';
 import {
   Followings,
+  Interactions,
   RockConstants,
   Sharable,
   Auth,
@@ -28,11 +29,6 @@ import {
   Event,
   PrayerRequest,
   Person as RockPerson,
-  ContentItem as RockContentItem,
-  ContentChannel,
-  Feature as RockFeature,
-  ActionAlgorithm as RockActionAlgorithm,
-  Interactions as PostgresInteractions,
 } from '@apollosproject/data-connector-rock';
 
 import {
@@ -42,17 +38,15 @@ import {
   Follow,
   Notification,
   NotificationPreference,
-  Tag,
-  Interactions,
   Campus as PostgresCampus,
   Person as PostgresPerson,
   Media as PostgresMedia,
-  Feature as PostgresFeature,
-  ContentItem as PostgresContentItem,
+  Feature,
+  Tag,
+  ContentItem,
   ContentItemsConnection,
-  ContentItemCategory,
-  ActionAlgorithm as PostgresActionAlgorithm,
-  PrayerRequest as PostgresPrayerRequest,
+  ContentItemCategory as ContentChannel,
+  ActionAlgorithm,
 } from '@apollosproject/data-connector-postgres';
 
 import * as Theme from './theme';
@@ -65,38 +59,21 @@ import {
   Followings as FollowingsPostgresBridge,
 } from './rockWithPostgres';
 
-const postgresContentModules = {
-  ActionAlgorithm: PostgresActionAlgorithm,
-  Feature: PostgresFeature,
-  PostgresMedia,
-  Tag,
-  ContentItem: PostgresContentItem,
-  ContentItemsConnection,
-  ContentChannel: ContentItemCategory,
-  Interactions,
-  PrayerRequest: PostgresPrayerRequest,
-};
-
-const rockContentModules = {
-  ActionAlgorithm: RockActionAlgorithm,
-  Feature: RockFeature,
-  ContentItem: RockContentItem,
-  ContentChannel,
-  Interactions: PostgresInteractions,
-  PrayerRequest,
-};
-
 const data = {
   Interfaces,
   Followings,
   FollowingsPostgresBridge, // This entry needs to come after Followings.
   FeatureFeed,
+  ActionAlgorithm,
   RockPerson, // This entry needs to come before (postgres) Person
   BinaryFiles, // This entry needs to come before (postgres) Person
   PostgresPerson, // Postgres person for now, as we extend this dataSource in the 'rockWithPostgres' file
-  ...(process.env.DATABASE_CONTENT
-    ? postgresContentModules
-    : rockContentModules),
+  PostgresMedia,
+  Feature,
+  Tag,
+  ContentItem,
+  ContentItemsConnection,
+  ContentChannel,
   Cloudinary,
   Auth,
   AuthSms,
@@ -104,6 +81,7 @@ const data = {
   LiveStream,
   Theme,
   Scripture,
+  Interactions,
   RockConstants,
   Sharable,
   Analytics,
@@ -113,8 +91,10 @@ const data = {
   Template,
   Campus,
   Group,
+  // ActionAlgorithm,
   Event,
   Cache,
+  PrayerRequest,
   Comment,
   UserLike,
   UserFlag,
diff --git a/apollos-church-api/src/migrator.js b/apollos-church-api/src/migrator.js
deleted file mode 100644
index 72366cf8..00000000
--- a/apollos-church-api/src/migrator.js
+++ /dev/null
@@ -1,31 +0,0 @@
-import dotenv from 'dotenv/config'; // eslint-disable-line
-import '@apollosproject/data-connector-postgres/lib/postgres/pgEnum-fix';
-import config from './config'; // eslint-disable-line
-
-import ApollosConfig from '@apollosproject/config';
-import { createMigrationRunner } from '@apollosproject/data-connector-postgres';
-
-let dataObj;
-
-if (ApollosConfig?.DATABASE?.URL) {
-  dataObj = require('./data/index.postgres');
-} else {
-  dataObj = require('./data/index');
-}
-
-const { migrations } = dataObj;
-
-// make sure this is called last.
-// (or at least after the apollos server setup)
-(async () => {
-  if (ApollosConfig?.DATABASE?.URL) {
-    try {
-      const migrationRunner = await createMigrationRunner({ migrations });
-      migrationRunner.runAsCLI();
-    } catch (e) {
-      console.log(e);
-    }
-  } else {
-    console.warn('Please specify a database URL to perform migrations');
-  }
-})();
diff --git a/apollos-church-api/src/server.js b/apollos-church-api/src/server.js
index ae3b1cf4..d334a052 100644
--- a/apollos-church-api/src/server.js
+++ b/apollos-church-api/src/server.js
@@ -84,23 +84,7 @@ apolloServer.applyMiddleware({ app, path: '/' });
 (async () => {
   if (ApollosConfig?.DATABASE?.URL) {
     const migrationRunner = await createMigrationRunner({ migrations });
-    const pending = await migrationRunner.pending();
-    if (pending.length) {
-      console.log('\x1b[31m', '██████████████████████████████████', '\x1b[0m');
-      console.log(
-        '\x1b[36m',
-        'You currently have a number of pending migrations',
-        '\x1b[0m'
-      );
-      console.log(pending);
-      console.log(
-        `Keep in mind, you are currently connected to ${
-          migrationRunner?.options?.context?.sequelize?.options?.host
-        }`
-      );
-      console.log('\x1b[31m', '██████████████████████████████████', '\x1b[0m');
-    }
-    if (ApollosConfig.AUTO_MIGRATE) await migrationRunner.up();
+    await migrationRunner.up();
   }
 })();
 
