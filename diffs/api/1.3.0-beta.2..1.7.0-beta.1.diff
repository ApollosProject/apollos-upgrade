diff --git a/apollos-church-api/.dockerignore b/apollos-church-api/.dockerignore
deleted file mode 100644
index 66a3225..0000000
--- a/apollos-church-api/.dockerignore
+++ /dev/null
@@ -1,4 +0,0 @@
-packages/apolloschurchapp
-packages/apollos-ui-kit
-packages/apollos-church-api/.env
-packages/*/node_modules
diff --git a/apollos-church-api/.env.shared.enc b/apollos-church-api/.env.shared.enc
new file mode 100644
index 0000000000000000000000000000000000000000..da8779fea2539a7bf4f9b4eb033362030d70f06d
GIT binary patch
literal 6928
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
Wldsp=UA~rEXwC4+UkBNDuK#n1wtL6`

literal 0
HcmV?d00001

diff --git a/apollos-church-api/.envExample b/apollos-church-api/.envExample
deleted file mode 100644
index 8559468..0000000
--- a/apollos-church-api/.envExample
+++ /dev/null
@@ -1,18 +0,0 @@
-ROCK_API=
-ROCK_TOKEN=
-BIBLE_API_KEY=
-ENGINE_API_KEY=
-CLOUDINARY_URL=
-ONE_SIGNAL_REST_KEY=
-PORT=4000
-ROOT_URL=http://localhost:4000
-
-TWILIO_ACCOUNT_SID=
-TWILIO_AUTH_TOKEN=
-TWILIO_FROM_NUMBER=
-
-
-PASS_WWDR_CERT=
-PASS_SIGNER_CERT=
-PASS_SIGNER_KEY=
-PASS_SIGNER_PASSPHRASE=
\ No newline at end of file
diff --git a/apollos-church-api/.eslintrc.js b/apollos-church-api/.eslintrc.js
new file mode 100644
index 0000000..7681348
--- /dev/null
+++ b/apollos-church-api/.eslintrc.js
@@ -0,0 +1,5 @@
+module.exports = {
+  extends: [
+    '@apollosproject/eslint-config/api',
+  ],
+}
\ No newline at end of file
diff --git a/apollos-church-api/.gitignore b/apollos-church-api/.gitignore
index a65b417..901ae9c 100644
--- a/apollos-church-api/.gitignore
+++ b/apollos-church-api/.gitignore
@@ -1 +1,98 @@
 lib
+# Logs
+logs
+*.log
+npm-debug.log*
+yarn-debug.log*
+yarn-error.log*
+coverage*
+
+# operating system files
+.DS_Store
+.DS_Store?
+.Spotlight-V100
+.Trashes
+ehthumbs.db
+Thumbs.db
+*.swp
+
+# Runtime data
+pids
+*.pid
+*.seed
+*.pid.lock
+
+
+# Directory for instrumented libs generated by jscoverage/JSCover
+lib-cov
+
+# Coverage directory used by tools like istanbul
+coverage
+
+# nyc test coverage
+.nyc_output
+
+# node-waf configuration
+.lock-wscript
+
+# Compiled binary addons (https://nodejs.org/api/addons.html)
+build/Release
+
+# Dependency directories
+node_modules/
+jspm_packages/
+
+# TypeScript v1 declaration files
+typings/
+
+# Optional npm cache directory
+.npm
+
+# Optional terraform
+.terraform
+source-*.tar.gz
+terraform.tfstate
+terraform.tfstate.backup
+terraform.tfvars
+
+# Optional eslint cache
+.eslintcache
+
+# Optional REPL history
+.node_repl_history
+
+# Output of 'npm pack'
+*.tgz
+
+# Yarn Integrity file
+.yarn-integrity
+
+# dotenv environment variables file
+.env
+.env.storybook
+
+# next.js build output
+.next
+
+# xcode
+build/
+
+# storybook
+storyLoader.js
+*.xcworkspacedata
+
+# sublime text settings
+*.sublime-project
+*.sublime-workspace
+
+# compiled code
+
+**/lib
+
+.watchmanconfig
+
+# generated markdown docs
+packages/**/docs/generated/*
+
+# shared secrets
+.env.shared
diff --git a/apollos-church-api/.npmignore b/apollos-church-api/.npmignore
deleted file mode 100644
index 93f3929..0000000
--- a/apollos-church-api/.npmignore
+++ /dev/null
@@ -1,2 +0,0 @@
-*
-!lib/**
diff --git a/apollos-church-api/.nvmrc b/apollos-church-api/.nvmrc
new file mode 100644
index 0000000..5b7269c
--- /dev/null
+++ b/apollos-church-api/.nvmrc
@@ -0,0 +1 @@
+10.19.0
diff --git a/apollos-church-api/apollos.json b/apollos-church-api/apollos.json
index 5c6ba5b..042172a 100644
--- a/apollos-church-api/apollos.json
+++ b/apollos-church-api/apollos.json
@@ -1,4 +1,4 @@
 {
-    "version": "1.3.0-beta.2",
-    "environment": "api"
-}
\ No newline at end of file
+  "version": "1.7.0-beta.1",
+  "environment": "api"
+}
diff --git a/apollos-church-api/config.yml b/apollos-church-api/config.yml
index 602eb3a..dbff190 100644
--- a/apollos-church-api/config.yml
+++ b/apollos-church-api/config.yml
@@ -14,27 +14,53 @@ APP:
   ROOT_API_URL: ${ROOT_URL}
   JOBS_USERNAME: ${JOBS_USERNAME}
   JOBS_PASSWORD: ${JOBS_PASSWORD}
+BUGSNAG:
+  ## Optional, but you'll need to remove references to @apollosproject/bugsnag if you don't wish to use.
+  API_KEY: ${BUGSNAG_KEY}
 ROCK:
-  API_URL: https://apollosrock.newspring.cc/api
+  API_URL: https://rock.apollos.app/api
   API_TOKEN: ${ROCK_TOKEN}
-  IMAGE_URL: https://apollosrock.newspring.cc/GetImage.ashx
-  SHARE_URL: https://apollosrock.newspring.cc
+  IMAGE_URL: https://rock.apollos.app/GetImage.ashx
+  SHARE_URL: https://rock.apollos.app
   # This should match the timezone of the Rock server
   TIMEZONE: 'America/New_York'
   USE_PLUGIN: true
   SHOW_INACTIVE_CONTENT: ${ROCK_SHOW_INACTIVE_CONTENT}
+UNIVERSAL_LINKS:
+  # This should be your app's bundle ID, as found in your info.plist.
+  APPLE_APP_ID: org.reactjs.native.apolloschurchapp
+  # This should be your app's team ID, as found in Xcode
+  APPLE_TEAM_ID: 7TM8C6252Z
+  # Where should a user be redirected if they don't have your app installed?
+  APP_STORE_LINK: https://apollos.app/ios
+  PLAY_STORE_LINK: https://apollos.app/android
+  # Your app Id, as found in your app/build.gradle.
+  GOOGLE_APP_ID: com.differential.apollos
+  # https://docs.getsocial.im/knowledge-base/android-signing-key-sha256/
+  GOOGLE_KEYSTORE_SHA256: EC:6E:B5:5A:62:53:1E:53:FF:C4:BA:A7:CB:29:77:57:71:9D:65:2F:AF:69:41:A3:AD:2B:C4:55:A1:7A:07:03
 ONE_SIGNAL:
   APP_ID: b6e75a77-003f-4466-95ca-82cc5cdc407b
   REST_KEY: ${ONE_SIGNAL_REST_KEY}
 CHURCH_ONLINE:
-  URL: https://apollos.churchonline.org/api/v1/
+  URL: https://apollos.online.church/
   MEDIA_URLS: []
-  WEB_VIEW_URL: https://apollos.churchonline.org/
+  WEB_VIEW_URL: https://apollos.online.church/
 ALGOLIA:
-  APPLICATION_ID: ${ALGOLIA_APP_ID}
-  API_KEY: ${ALGOLIA_API_KEY}
-  # TODO: should we support multiple indices? how?
-  SEARCH_INDEX: test_ContentItems
+  APPLICATION_ID: ${ALGOLIASEARCH_APPLICATION_ID}
+  API_KEY: ${ALGOLIASEARCH_API_KEY}
+  SEARCH_INDEX: prod_ContentItem
+  # Configure Algolia custom settings here
+  # https://www.algolia.com/doc/api-reference/settings-api-parameters/
+  CONFIGURATION:
+    searchableAttributes:
+      - title
+      - unordered(summary)
+    #customRankings:
+    # NOT CURRENTLY INCLUDED
+    # This just demonstrates what's possible
+    # To include likedCount (or any other field) override search package
+    # and add field to config below
+    #- desc(likedCount)
 TWILIO:
   ACCOUNT_SID: ${TWILIO_ACCOUNT_SID}
   AUTH_TOKEN: ${TWILIO_AUTH_TOKEN}
@@ -70,10 +96,10 @@ ENGINE:
 # This key holds various properties that allow our GraphQL server to map to your Rock Instance
 ROCK_MAPPINGS:
   INTERACTIONS:
-    # Name of the InteractionChannel that will be created
+    # Name of the InteractionChannel that will be created per EntityType
     CHANNEL_NAME: Apollos App
-    # Name of the InteractionComponent that will be created for Content Items
-    COMPONENT_NAME: Apollos Content Item
+    # Prefix for the name of the InteractionComponent that will be created per Entity
+    COMPONENT_NAME: Apollos App Component
     # 512 is "Mobile App"
     CHANNEL_MEDIUM_TYPE_ID: 512
 
@@ -82,10 +108,10 @@ ROCK_MAPPINGS:
       # When resolving "ContentSeriesContentItem" look in rock for a "ContentChannelItem"
       EntityType: ContentChannelItem
       # Used to define the subset of content channels types that use this specific type.
-      ContentChannelTypeId: [6, 7]
+      ContentChannelTypeId: [6]
     DevotionalContentItem:
       EntityType: ContentChannelItem
-      ContentChannelTypeId: [1]
+      ContentChannelTypeId: []
     MediaContentItem:
       EntityType: ContentChannelItem
     UniversalContentItem:
@@ -102,22 +128,15 @@ ROCK_MAPPINGS:
 
   # Apollos will pull these content channels and expose them in the app on the discover screen.
   DISCOVER_CONTENT_CHANNEL_IDS:
-    - 2
     - 3
-    - 4
+    - 5
     - 6
     - 8
   # Apollos will pull content items from these channels and expose them on the user feed
   # However, it will not expose the channel itself.
   # These channels are also pulled when indexing searchable content.
   FEED_CONTENT_CHANNEL_IDS:
-    - 1
-    - 2
-    - 3
-    - 4
-    - 5
     - 6
-    - 8
 
   CAMPAIGN_CHANNEL_IDS:
     - 11
@@ -128,18 +147,89 @@ ROCK_MAPPINGS:
   COMMUNITY_GROUP_TYPE_ID: 25
   FAMILY_GROUP_TYPE_ID: 10
 
+  MOBILE_DEVICE_TYPE_ID: 671
+
 HOME_FEATURES:
+  - algorithms: [USER_FEED]
+    type: HeroList
+    primaryAction:
+      # Right now, you hardcode exactly what GraphQL should return.
+      # Long term, we hope to have a more sophisticated mechanism for driving this field
+      action: OPEN_NODE
+      title: 'Read More'
+      relatedNode:
+        __typename: UniversalContentItem
+        id: 21
+  - algorithms: [DAILY_PRAYER]
+    isCard: false
+    type: PrayerList
+    title: Daily Prayer
+  - algorithms: [CAMPAIGN_ITEMS]
+    type: HeroList
+    isFeatured: true
   - title: FOR YOU
     algorithms: [SERMON_CHILDREN, PERSONA_FEED]
     subtitle: Explore what God calls you to today
+    type: ActionList
+  - algorithms: [PERSONA_FEED]
+    subtitle: Continue
+    type: HorizontalCardList
+  - title: RECOMMENDED
+    algorithms: [SERMON_CHILDREN]
+    subtitle: For Him
+    type: VerticalCardList
   - title: BULLETIN
     subtitle: What's happening at apollos?
+    type: ActionList
     algorithms:
       - type: CONTENT_CHANNEL
         arguments:
           contentChannelId: 13
       - type: UPCOMING_EVENTS
 
+DISCOVER_FEATURES:
+  - algorithms:
+      - type: CONTENT_CHANNEL
+        arguments:
+          contentChannelId: 3
+          limit: 3
+    type: HorizontalCardList
+    subtitle: Sermons
+  - algorithms:
+      - type: CONTENT_CHANNEL
+        arguments:
+          contentChannelId: 5
+          limit: 3
+    type: HorizontalCardList
+    subtitle: Podcasts
+    primaryAction:
+      action: OPEN_CHANNEL
+      title: 'Read More'
+      relatedNode:
+        __typename: ContentChannel
+        id: 5
+        name: Podcasts
+  - algorithms:
+      - type: CONTENT_CHANNEL
+        arguments:
+          contentChannelId: 6
+          limit: 3
+    type: HorizontalCardList
+    title: Videos
+    primaryAction:
+      action: OPEN_CHANNEL
+      title: 'Read More'
+      relatedNode:
+        __typename: ContentChannel
+        id: 6
+        name: Videos
+  - algorithms:
+      - type: CONTENT_CHANNEL
+        arguments:
+          contentChannelId: 8
+          limit: 3
+    type: HorizontalCardList
+    subtitle: Something Else
 
 # Default mapping of field types -> ids. There's probably no reason to edit this.
 ROCK_CONSTANTS:
diff --git a/apollos-church-api/load-tests/Apollos App Testing.jmx b/apollos-church-api/load-tests/Apollos App Testing.jmx
new file mode 100644
index 0000000..e81ef7b
--- /dev/null
+++ b/apollos-church-api/load-tests/Apollos App Testing.jmx	
@@ -0,0 +1,774 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.1.1 r1855137">
+  <hashTree>
+    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Apollos App Testing" enabled="true">
+      <stringProp name="TestPlan.comments"></stringProp>
+      <boolProp name="TestPlan.functional_mode">false</boolProp>
+      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
+      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
+      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
+        <collectionProp name="Arguments.arguments">
+          <elementProp name="ApollosTestUser" elementType="Argument">
+            <stringProp name="Argument.name">ApollosTestUser</stringProp>
+            <stringProp name="Argument.value">vincent@differential.com</stringProp>
+            <stringProp name="Argument.metadata">=</stringProp>
+          </elementProp>
+          <elementProp name="ApollosTestPassword" elementType="Argument">
+            <stringProp name="Argument.name">ApollosTestPassword</stringProp>
+            <stringProp name="Argument.value">password</stringProp>
+            <stringProp name="Argument.metadata">=</stringProp>
+          </elementProp>
+          <elementProp name="ServerUrl" elementType="Argument">
+            <stringProp name="Argument.name">ServerUrl</stringProp>
+            <stringProp name="Argument.value">apollos-church-api.herokuapp.com</stringProp>
+            <stringProp name="Argument.metadata">=</stringProp>
+          </elementProp>
+        </collectionProp>
+      </elementProp>
+      <stringProp name="TestPlan.user_define_classpath"></stringProp>
+    </TestPlan>
+    <hashTree>
+      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Test Home Feed" enabled="true">
+        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
+        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
+          <boolProp name="LoopController.continue_forever">false</boolProp>
+          <stringProp name="LoopController.loops">1</stringProp>
+        </elementProp>
+        <stringProp name="ThreadGroup.num_threads">3</stringProp>
+        <stringProp name="ThreadGroup.ramp_time">5</stringProp>
+        <boolProp name="ThreadGroup.scheduler">false</boolProp>
+        <stringProp name="ThreadGroup.duration"></stringProp>
+        <stringProp name="ThreadGroup.delay"></stringProp>
+      </ThreadGroup>
+      <hashTree>
+        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
+          <collectionProp name="HeaderManager.headers">
+            <elementProp name="" elementType="Header">
+              <stringProp name="Header.name">Content-Type</stringProp>
+              <stringProp name="Header.value">application/json</stringProp>
+            </elementProp>
+          </collectionProp>
+        </HeaderManager>
+        <hashTree/>
+        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login" enabled="true">
+          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
+          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
+            <collectionProp name="Arguments.arguments">
+              <elementProp name="" elementType="HTTPArgument">
+                <boolProp name="HTTPArgument.always_encode">false</boolProp>
+                <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;login&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;mutation login {\n  authenticate(identity: \&quot;${ApollosTestUser}\&quot;, password: \&quot;${ApollosTestPassword}\&quot;) {\n    token\n  }\n}\n&quot;}</stringProp>
+                <stringProp name="Argument.metadata">=</stringProp>
+              </elementProp>
+            </collectionProp>
+          </elementProp>
+          <stringProp name="HTTPSampler.domain">${ServerUrl}</stringProp>
+          <stringProp name="HTTPSampler.port"></stringProp>
+          <stringProp name="HTTPSampler.protocol">https</stringProp>
+          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
+          <stringProp name="HTTPSampler.path">/graphql</stringProp>
+          <stringProp name="HTTPSampler.method">POST</stringProp>
+          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
+          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
+          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
+          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
+          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
+          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
+          <stringProp name="HTTPSampler.response_timeout"></stringProp>
+        </HTTPSamplerProxy>
+        <hashTree>
+          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
+            <stringProp name="JSONPostProcessor.referenceNames">authToken</stringProp>
+            <stringProp name="JSONPostProcessor.jsonPathExprs">data.authenticate.token</stringProp>
+            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
+          </JSONPostProcessor>
+          <hashTree/>
+        </hashTree>
+        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Home Feed" enabled="true">
+          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
+            <collectionProp name="Arguments.arguments">
+              <elementProp name="query" elementType="HTTPArgument">
+                <boolProp name="HTTPArgument.always_encode">false</boolProp>
+                <stringProp name="Argument.value">query%20getUserFeed(%24first%3A%20Int%2C%20%24after%3A%20String)%20%7B%0A%20%20userFeed(first%3A%20%24first%2C%20after%3A%20%24after)%20%7B%0A%20%20%20%20pageInfo%20%7B%0A%20%20%20%20%20%20endCursor%0A%20%20%20%20%20%20__typename%0A%20%20%20%20%7D%0A%20%20%20%20edges%20%7B%0A%20%20%20%20%20%20node%20%7B%0A%20%20%20%20%20%20%20%20...largeCardFragment%0A%20%20%20%20%20%20%20%20...contentItemFragment%0A%20%20%20%20%20%20%20%20__typename%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20__typename%0A%20%20%20%20%7D%0A%20%20%20%20__typename%0A%20%20%7D%0A%7D%0A%0Afragment%20contentItemFragment%20on%20ContentItem%20%7B%0A%20%20id%0A%20%20title%0A%20%20isLiked%0A%20%20likedCount%0A%20%20summary%0A%20%20coverImage%20%7B%0A%20%20%20%20name%0A%20%20%20%20sources%20%7B%0A%20%20%20%20%20%20uri%0A%20%20%20%20%20%20__typename%0A%20%20%20%20%7D%0A%20%20%20%20__typename%0A%20%20%7D%0A%20%20theme%20%7B%0A%20%20%20%20type%0A%20%20%20%20colors%20%7B%0A%20%20%20%20%20%20primary%0A%20%20%20%20%20%20secondary%0A%20%20%20%20%20%20screen%0A%20%20%20%20%20%20paper%0A%20%20%20%20%20%20__typename%0A%20%20%20%20%7D%0A%20%20%20%20__typename%0A%20%20%7D%0A%20%20parentChannel%20%7B%0A%20%20%20%20id%0A%20%20%20%20name%0A%20%20%20%20__typename%0A%20%20%7D%0A%20%20videos%20%7B%0A%20%20%20%20sources%20%7B%0A%20%20%20%20%20%20uri%0A%20%20%20%20%20%20__typename%0A%20%20%20%20%7D%0A%20%20%20%20__typename%0A%20%20%7D%0A%20%20audios%20%7B%0A%20%20%20%20sources%20%7B%0A%20%20%20%20%20%20uri%0A%20%20%20%20%20%20__typename%0A%20%20%20%20%7D%0A%20%20%20%20__typename%0A%20%20%7D%0A%20%20...%20on%20WeekendContentItem%20%7B%0A%20%20%20%20liveStream%20%7B%0A%20%20%20%20%20%20isLive%0A%20%20%20%20%20%20__typename%0A%20%20%20%20%7D%0A%20%20%20%20__typename%0A%20%20%7D%0A%20%20__typename%0A%7D%0A%0Afragment%20largeCardFragment%20on%20ContentItem%20%7B%0A%20%20...baseCardFragment%0A%20%20__typename%0A%7D%0A%0Afragment%20baseCardFragment%20on%20ContentItem%20%7B%0A%20%20id%0A%20%20__typename%0A%20%20...coverImageFragment%0A%20%20...themeFragment%0A%20%20title%0A%20%20summary%0A%20%20isLiked%0A%20%20...%20on%20MediaContentItem%20%7B%0A%20%20%20%20videos%20%7B%0A%20%20%20%20%20%20sources%20%7B%0A%20%20%20%20%20%20%20%20uri%0A%20%20%20%20%20%20%20%20__typename%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20__typename%0A%20%20%20%20%7D%0A%20%20%20%20__typename%0A%20%20%7D%0A%20%20...%20on%20WeekendContentItem%20%7B%0A%20%20%20%20videos%20%7B%0A%20%20%20%20%20%20sources%20%7B%0A%20%20%20%20%20%20%20%20uri%0A%20%20%20%20%20%20%20%20__typename%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20__typename%0A%20%20%20%20%7D%0A%20%20%20%20liveStream%20%7B%0A%20%20%20%20%20%20isLive%0A%20%20%20%20%20%20__typename%0A%20%20%20%20%7D%0A%20%20%20%20parentChannel%20%7B%0A%20%20%20%20%20%20id%0A%20%20%20%20%20%20name%0A%20%20%20%20%20%20__typename%0A%20%20%20%20%7D%0A%20%20%20%20__typename%0A%20%20%7D%0A%20%20...%20on%20DevotionalContentItem%20%7B%0A%20%20%20%20parentChannel%20%7B%0A%20%20%20%20%20%20id%0A%20%20%20%20%20%20name%0A%20%20%20%20%20%20__typename%0A%20%20%20%20%7D%0A%20%20%20%20__typename%0A%20%20%7D%0A%7D%0A%0Afragment%20coverImageFragment%20on%20ContentItem%20%7B%0A%20%20coverImage%20%7B%0A%20%20%20%20sources%20%7B%0A%20%20%20%20%20%20uri%0A%20%20%20%20%20%20__typename%0A%20%20%20%20%7D%0A%20%20%20%20__typename%0A%20%20%7D%0A%20%20__typename%0A%7D%0A%0Afragment%20themeFragment%20on%20ContentItem%20%7B%0A%20%20theme%20%7B%0A%20%20%20%20type%0A%20%20%20%20colors%20%7B%0A%20%20%20%20%20%20primary%0A%20%20%20%20%20%20secondary%0A%20%20%20%20%20%20screen%0A%20%20%20%20%20%20paper%0A%20%20%20%20%20%20__typename%0A%20%20%20%20%7D%0A%20%20%20%20__typename%0A%20%20%7D%0A%20%20__typename%0A%7D%0A</stringProp>
+                <stringProp name="Argument.metadata">=</stringProp>
+                <boolProp name="HTTPArgument.use_equals">true</boolProp>
+                <stringProp name="Argument.name">query</stringProp>
+              </elementProp>
+              <elementProp name="operationName" elementType="HTTPArgument">
+                <boolProp name="HTTPArgument.always_encode">false</boolProp>
+                <stringProp name="Argument.value">getUserFeed</stringProp>
+                <stringProp name="Argument.metadata">=</stringProp>
+                <boolProp name="HTTPArgument.use_equals">true</boolProp>
+                <stringProp name="Argument.name">operationName</stringProp>
+              </elementProp>
+              <elementProp name="variables" elementType="HTTPArgument">
+                <boolProp name="HTTPArgument.always_encode">false</boolProp>
+                <stringProp name="Argument.value">%7B%22first%22%3A10%2C%22after%22%3Anull%7D</stringProp>
+                <stringProp name="Argument.metadata">=</stringProp>
+                <boolProp name="HTTPArgument.use_equals">true</boolProp>
+                <stringProp name="Argument.name">variables</stringProp>
+              </elementProp>
+            </collectionProp>
+          </elementProp>
+          <stringProp name="HTTPSampler.domain">${ServerUrl}</stringProp>
+          <stringProp name="HTTPSampler.port"></stringProp>
+          <stringProp name="HTTPSampler.protocol">https</stringProp>
+          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
+          <stringProp name="HTTPSampler.path">/graphql</stringProp>
+          <stringProp name="HTTPSampler.method">GET</stringProp>
+          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
+          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
+          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
+          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
+          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
+          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
+          <stringProp name="HTTPSampler.response_timeout"></stringProp>
+        </HTTPSamplerProxy>
+        <hashTree>
+          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
+            <boolProp name="ResultCollector.error_logging">false</boolProp>
+            <objProp>
+              <name>saveConfig</name>
+              <value class="SampleSaveConfiguration">
+                <time>true</time>
+                <latency>true</latency>
+                <timestamp>true</timestamp>
+                <success>true</success>
+                <label>true</label>
+                <code>true</code>
+                <message>true</message>
+                <threadName>true</threadName>
+                <dataType>true</dataType>
+                <encoding>false</encoding>
+                <assertions>true</assertions>
+                <subresults>true</subresults>
+                <responseData>false</responseData>
+                <samplerData>false</samplerData>
+                <xml>false</xml>
+                <fieldNames>true</fieldNames>
+                <responseHeaders>false</responseHeaders>
+                <requestHeaders>false</requestHeaders>
+                <responseDataOnError>false</responseDataOnError>
+                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
+                <assertionsResultsToSave>0</assertionsResultsToSave>
+                <bytes>true</bytes>
+                <sentBytes>true</sentBytes>
+                <url>true</url>
+                <threadCounts>true</threadCounts>
+                <idleTime>true</idleTime>
+                <connectTime>true</connectTime>
+              </value>
+            </objProp>
+            <stringProp name="filename"></stringProp>
+          </ResultCollector>
+          <hashTree/>
+          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
+            <collectionProp name="HeaderManager.headers">
+              <elementProp name="" elementType="Header">
+                <stringProp name="Header.name">Authorization</stringProp>
+                <stringProp name="Header.value">${authToken}</stringProp>
+              </elementProp>
+            </collectionProp>
+          </HeaderManager>
+          <hashTree/>
+        </hashTree>
+        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
+          <boolProp name="ResultCollector.error_logging">false</boolProp>
+          <objProp>
+            <name>saveConfig</name>
+            <value class="SampleSaveConfiguration">
+              <time>true</time>
+              <latency>true</latency>
+              <timestamp>true</timestamp>
+              <success>true</success>
+              <label>true</label>
+              <code>true</code>
+              <message>true</message>
+              <threadName>true</threadName>
+              <dataType>true</dataType>
+              <encoding>false</encoding>
+              <assertions>true</assertions>
+              <subresults>true</subresults>
+              <responseData>false</responseData>
+              <samplerData>false</samplerData>
+              <xml>false</xml>
+              <fieldNames>true</fieldNames>
+              <responseHeaders>false</responseHeaders>
+              <requestHeaders>false</requestHeaders>
+              <responseDataOnError>false</responseDataOnError>
+              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
+              <assertionsResultsToSave>0</assertionsResultsToSave>
+              <bytes>true</bytes>
+              <sentBytes>true</sentBytes>
+              <url>true</url>
+              <threadCounts>true</threadCounts>
+              <idleTime>true</idleTime>
+              <connectTime>true</connectTime>
+            </value>
+          </objProp>
+          <stringProp name="filename"></stringProp>
+        </ResultCollector>
+        <hashTree/>
+      </hashTree>
+      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Test Discover Feed" enabled="true">
+        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
+        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
+          <boolProp name="LoopController.continue_forever">false</boolProp>
+          <stringProp name="LoopController.loops">1</stringProp>
+        </elementProp>
+        <stringProp name="ThreadGroup.num_threads">3</stringProp>
+        <stringProp name="ThreadGroup.ramp_time">5</stringProp>
+        <boolProp name="ThreadGroup.scheduler">false</boolProp>
+        <stringProp name="ThreadGroup.duration"></stringProp>
+        <stringProp name="ThreadGroup.delay"></stringProp>
+      </ThreadGroup>
+      <hashTree>
+        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
+          <collectionProp name="HeaderManager.headers">
+            <elementProp name="" elementType="Header">
+              <stringProp name="Header.name">Content-Type</stringProp>
+              <stringProp name="Header.value">application/json</stringProp>
+            </elementProp>
+          </collectionProp>
+        </HeaderManager>
+        <hashTree/>
+        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login" enabled="true">
+          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
+            <collectionProp name="Arguments.arguments">
+              <elementProp name="" elementType="HTTPArgument">
+                <boolProp name="HTTPArgument.always_encode">false</boolProp>
+                <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;login&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;mutation login {\n  authenticate(identity: \&quot;${ApollosTestUser}\&quot;, password: \&quot;${ApollosTestPassword}\&quot;) {\n    token\n  }\n}\n&quot;}</stringProp>
+                <stringProp name="Argument.metadata">=</stringProp>
+              </elementProp>
+            </collectionProp>
+          </elementProp>
+          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
+          <stringProp name="HTTPSampler.domain">${ServerUrl}</stringProp>
+          <stringProp name="HTTPSampler.port"></stringProp>
+          <stringProp name="HTTPSampler.protocol">https</stringProp>
+          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
+          <stringProp name="HTTPSampler.path">/graphql</stringProp>
+          <stringProp name="HTTPSampler.method">POST</stringProp>
+          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
+          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
+          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
+          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
+          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
+          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
+          <stringProp name="HTTPSampler.response_timeout"></stringProp>
+        </HTTPSamplerProxy>
+        <hashTree>
+          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
+            <stringProp name="JSONPostProcessor.referenceNames">authToken</stringProp>
+            <stringProp name="JSONPostProcessor.jsonPathExprs">data.authenticate.token</stringProp>
+            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
+          </JSONPostProcessor>
+          <hashTree/>
+        </hashTree>
+        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Discover Feed" enabled="true">
+          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
+            <collectionProp name="Arguments.arguments">
+              <elementProp name="query" elementType="HTTPArgument">
+                <boolProp name="HTTPArgument.always_encode">false</boolProp>
+                <stringProp name="Argument.value">query%20getContentChannels%20%7B%0A%20%20contentChannels%20%7B%0A%20%20%20%20id%0A%20%20%20%20name%0A%20%20%20%20childContentItemsConnection(first%3A%203)%20%7B%0A%20%20%20%20%20%20edges%20%7B%0A%20%20%20%20%20%20%20%20node%20%7B%0A%20%20%20%20%20%20%20%20%20%20id%0A%20%20%20%20%20%20%20%20%20%20...contentItemFragment%0A%20%20%20%20%20%20%20%20%20%20...largeCardFragment%0A%20%20%20%20%20%20%20%20%20%20__typename%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20__typename%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20__typename%0A%20%20%20%20%7D%0A%20%20%20%20__typename%0A%20%20%7D%0A%7D%0A%0Afragment%20contentItemFragment%20on%20ContentItem%20%7B%0A%20%20id%0A%20%20title%0A%20%20isLiked%0A%20%20likedCount%0A%20%20summary%0A%20%20coverImage%20%7B%0A%20%20%20%20name%0A%20%20%20%20sources%20%7B%0A%20%20%20%20%20%20uri%0A%20%20%20%20%20%20__typename%0A%20%20%20%20%7D%0A%20%20%20%20__typename%0A%20%20%7D%0A%20%20theme%20%7B%0A%20%20%20%20type%0A%20%20%20%20colors%20%7B%0A%20%20%20%20%20%20primary%0A%20%20%20%20%20%20secondary%0A%20%20%20%20%20%20screen%0A%20%20%20%20%20%20paper%0A%20%20%20%20%20%20__typename%0A%20%20%20%20%7D%0A%20%20%20%20__typename%0A%20%20%7D%0A%20%20parentChannel%20%7B%0A%20%20%20%20id%0A%20%20%20%20name%0A%20%20%20%20__typename%0A%20%20%7D%0A%20%20videos%20%7B%0A%20%20%20%20sources%20%7B%0A%20%20%20%20%20%20uri%0A%20%20%20%20%20%20__typename%0A%20%20%20%20%7D%0A%20%20%20%20__typename%0A%20%20%7D%0A%20%20audios%20%7B%0A%20%20%20%20sources%20%7B%0A%20%20%20%20%20%20uri%0A%20%20%20%20%20%20__typename%0A%20%20%20%20%7D%0A%20%20%20%20__typename%0A%20%20%7D%0A%20%20...%20on%20WeekendContentItem%20%7B%0A%20%20%20%20liveStream%20%7B%0A%20%20%20%20%20%20isLive%0A%20%20%20%20%20%20__typename%0A%20%20%20%20%7D%0A%20%20%20%20__typename%0A%20%20%7D%0A%20%20__typename%0A%7D%0A%0Afragment%20largeCardFragment%20on%20ContentItem%20%7B%0A%20%20...baseCardFragment%0A%20%20__typename%0A%7D%0A%0Afragment%20baseCardFragment%20on%20ContentItem%20%7B%0A%20%20id%0A%20%20__typename%0A%20%20...coverImageFragment%0A%20%20...themeFragment%0A%20%20title%0A%20%20summary%0A%20%20isLiked%0A%20%20...%20on%20MediaContentItem%20%7B%0A%20%20%20%20videos%20%7B%0A%20%20%20%20%20%20sources%20%7B%0A%20%20%20%20%20%20%20%20uri%0A%20%20%20%20%20%20%20%20__typename%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20__typename%0A%20%20%20%20%7D%0A%20%20%20%20__typename%0A%20%20%7D%0A%20%20...%20on%20WeekendContentItem%20%7B%0A%20%20%20%20videos%20%7B%0A%20%20%20%20%20%20sources%20%7B%0A%20%20%20%20%20%20%20%20uri%0A%20%20%20%20%20%20%20%20__typename%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20__typename%0A%20%20%20%20%7D%0A%20%20%20%20liveStream%20%7B%0A%20%20%20%20%20%20isLive%0A%20%20%20%20%20%20__typename%0A%20%20%20%20%7D%0A%20%20%20%20parentChannel%20%7B%0A%20%20%20%20%20%20id%0A%20%20%20%20%20%20name%0A%20%20%20%20%20%20__typename%0A%20%20%20%20%7D%0A%20%20%20%20__typename%0A%20%20%7D%0A%20%20...%20on%20DevotionalContentItem%20%7B%0A%20%20%20%20parentChannel%20%7B%0A%20%20%20%20%20%20id%0A%20%20%20%20%20%20name%0A%20%20%20%20%20%20__typename%0A%20%20%20%20%7D%0A%20%20%20%20__typename%0A%20%20%7D%0A%7D%0A%0Afragment%20coverImageFragment%20on%20ContentItem%20%7B%0A%20%20coverImage%20%7B%0A%20%20%20%20sources%20%7B%0A%20%20%20%20%20%20uri%0A%20%20%20%20%20%20__typename%0A%20%20%20%20%7D%0A%20%20%20%20__typename%0A%20%20%7D%0A%20%20__typename%0A%7D%0A%0Afragment%20themeFragment%20on%20ContentItem%20%7B%0A%20%20theme%20%7B%0A%20%20%20%20type%0A%20%20%20%20colors%20%7B%0A%20%20%20%20%20%20primary%0A%20%20%20%20%20%20secondary%0A%20%20%20%20%20%20screen%0A%20%20%20%20%20%20paper%0A%20%20%20%20%20%20__typename%0A%20%20%20%20%7D%0A%20%20%20%20__typename%0A%20%20%7D%0A%20%20__typename%0A%7D%0A</stringProp>
+                <stringProp name="Argument.metadata">=</stringProp>
+                <boolProp name="HTTPArgument.use_equals">true</boolProp>
+                <stringProp name="Argument.name">query</stringProp>
+              </elementProp>
+              <elementProp name="operationName" elementType="HTTPArgument">
+                <boolProp name="HTTPArgument.always_encode">false</boolProp>
+                <stringProp name="Argument.value">getContentChannels</stringProp>
+                <stringProp name="Argument.metadata">=</stringProp>
+                <boolProp name="HTTPArgument.use_equals">true</boolProp>
+                <stringProp name="Argument.name">operationName</stringProp>
+              </elementProp>
+              <elementProp name="variables" elementType="HTTPArgument">
+                <boolProp name="HTTPArgument.always_encode">false</boolProp>
+                <stringProp name="Argument.value">%7B%7D</stringProp>
+                <stringProp name="Argument.metadata">=</stringProp>
+                <boolProp name="HTTPArgument.use_equals">true</boolProp>
+                <stringProp name="Argument.name">variables</stringProp>
+              </elementProp>
+            </collectionProp>
+          </elementProp>
+          <stringProp name="HTTPSampler.domain">${ServerUrl}</stringProp>
+          <stringProp name="HTTPSampler.port"></stringProp>
+          <stringProp name="HTTPSampler.protocol">https</stringProp>
+          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
+          <stringProp name="HTTPSampler.path">/graphql</stringProp>
+          <stringProp name="HTTPSampler.method">GET</stringProp>
+          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
+          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
+          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
+          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
+          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
+          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
+          <stringProp name="HTTPSampler.response_timeout"></stringProp>
+        </HTTPSamplerProxy>
+        <hashTree>
+          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
+            <boolProp name="ResultCollector.error_logging">false</boolProp>
+            <objProp>
+              <name>saveConfig</name>
+              <value class="SampleSaveConfiguration">
+                <time>true</time>
+                <latency>true</latency>
+                <timestamp>true</timestamp>
+                <success>true</success>
+                <label>true</label>
+                <code>true</code>
+                <message>true</message>
+                <threadName>true</threadName>
+                <dataType>true</dataType>
+                <encoding>false</encoding>
+                <assertions>true</assertions>
+                <subresults>true</subresults>
+                <responseData>false</responseData>
+                <samplerData>false</samplerData>
+                <xml>false</xml>
+                <fieldNames>true</fieldNames>
+                <responseHeaders>false</responseHeaders>
+                <requestHeaders>false</requestHeaders>
+                <responseDataOnError>false</responseDataOnError>
+                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
+                <assertionsResultsToSave>0</assertionsResultsToSave>
+                <bytes>true</bytes>
+                <sentBytes>true</sentBytes>
+                <url>true</url>
+                <threadCounts>true</threadCounts>
+                <idleTime>true</idleTime>
+                <connectTime>true</connectTime>
+              </value>
+            </objProp>
+            <stringProp name="filename"></stringProp>
+          </ResultCollector>
+          <hashTree/>
+          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
+            <collectionProp name="HeaderManager.headers">
+              <elementProp name="" elementType="Header">
+                <stringProp name="Header.name">Authorization</stringProp>
+                <stringProp name="Header.value">${authToken}</stringProp>
+              </elementProp>
+            </collectionProp>
+          </HeaderManager>
+          <hashTree/>
+        </hashTree>
+        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
+          <boolProp name="ResultCollector.error_logging">false</boolProp>
+          <objProp>
+            <name>saveConfig</name>
+            <value class="SampleSaveConfiguration">
+              <time>true</time>
+              <latency>true</latency>
+              <timestamp>true</timestamp>
+              <success>true</success>
+              <label>true</label>
+              <code>true</code>
+              <message>true</message>
+              <threadName>true</threadName>
+              <dataType>true</dataType>
+              <encoding>false</encoding>
+              <assertions>true</assertions>
+              <subresults>true</subresults>
+              <responseData>false</responseData>
+              <samplerData>false</samplerData>
+              <xml>false</xml>
+              <fieldNames>true</fieldNames>
+              <responseHeaders>false</responseHeaders>
+              <requestHeaders>false</requestHeaders>
+              <responseDataOnError>false</responseDataOnError>
+              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
+              <assertionsResultsToSave>0</assertionsResultsToSave>
+              <bytes>true</bytes>
+              <sentBytes>true</sentBytes>
+              <url>true</url>
+              <threadCounts>true</threadCounts>
+              <idleTime>true</idleTime>
+              <connectTime>true</connectTime>
+            </value>
+          </objProp>
+          <stringProp name="filename"></stringProp>
+        </ResultCollector>
+        <hashTree/>
+      </hashTree>
+      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Test Register " enabled="true">
+        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
+        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
+          <boolProp name="LoopController.continue_forever">false</boolProp>
+          <stringProp name="LoopController.loops">1</stringProp>
+        </elementProp>
+        <stringProp name="ThreadGroup.num_threads">3</stringProp>
+        <stringProp name="ThreadGroup.ramp_time">5</stringProp>
+        <boolProp name="ThreadGroup.scheduler">false</boolProp>
+        <stringProp name="ThreadGroup.duration"></stringProp>
+        <stringProp name="ThreadGroup.delay"></stringProp>
+      </ThreadGroup>
+      <hashTree>
+        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
+          <collectionProp name="HeaderManager.headers">
+            <elementProp name="" elementType="Header">
+              <stringProp name="Header.name">Content-Type</stringProp>
+              <stringProp name="Header.value">application/json</stringProp>
+            </elementProp>
+          </collectionProp>
+        </HeaderManager>
+        <hashTree/>
+        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Register" enabled="true">
+          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
+          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
+            <collectionProp name="Arguments.arguments">
+              <elementProp name="" elementType="HTTPArgument">
+                <boolProp name="HTTPArgument.always_encode">false</boolProp>
+                <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;register&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;mutation register {\n  registerPerson(email: \&quot;${__RandomString(10,abcdefghijklmnopqrstuvwxyz,)}@jmeter-test.com\&quot;, password: \&quot;password\&quot;) {\n    token\n  }\n}\n&quot;}</stringProp>
+                <stringProp name="Argument.metadata">=</stringProp>
+              </elementProp>
+            </collectionProp>
+          </elementProp>
+          <stringProp name="HTTPSampler.domain">${ServerUrl}</stringProp>
+          <stringProp name="HTTPSampler.port"></stringProp>
+          <stringProp name="HTTPSampler.protocol">https</stringProp>
+          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
+          <stringProp name="HTTPSampler.path">/graphql</stringProp>
+          <stringProp name="HTTPSampler.method">POST</stringProp>
+          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
+          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
+          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
+          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
+          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
+          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
+          <stringProp name="HTTPSampler.response_timeout"></stringProp>
+        </HTTPSamplerProxy>
+        <hashTree>
+          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
+            <stringProp name="JSONPostProcessor.referenceNames">authToken</stringProp>
+            <stringProp name="JSONPostProcessor.jsonPathExprs">data.registerPerson.token</stringProp>
+            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
+          </JSONPostProcessor>
+          <hashTree/>
+          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
+            <boolProp name="ResultCollector.error_logging">false</boolProp>
+            <objProp>
+              <name>saveConfig</name>
+              <value class="SampleSaveConfiguration">
+                <time>true</time>
+                <latency>true</latency>
+                <timestamp>true</timestamp>
+                <success>true</success>
+                <label>true</label>
+                <code>true</code>
+                <message>true</message>
+                <threadName>true</threadName>
+                <dataType>true</dataType>
+                <encoding>false</encoding>
+                <assertions>true</assertions>
+                <subresults>true</subresults>
+                <responseData>false</responseData>
+                <samplerData>false</samplerData>
+                <xml>false</xml>
+                <fieldNames>true</fieldNames>
+                <responseHeaders>false</responseHeaders>
+                <requestHeaders>false</requestHeaders>
+                <responseDataOnError>false</responseDataOnError>
+                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
+                <assertionsResultsToSave>0</assertionsResultsToSave>
+                <bytes>true</bytes>
+                <sentBytes>true</sentBytes>
+                <url>true</url>
+                <threadCounts>true</threadCounts>
+                <idleTime>true</idleTime>
+                <connectTime>true</connectTime>
+              </value>
+            </objProp>
+            <stringProp name="filename"></stringProp>
+          </ResultCollector>
+          <hashTree/>
+        </hashTree>
+        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Update Profile Field" enabled="true">
+          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
+          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
+            <collectionProp name="Arguments.arguments">
+              <elementProp name="" elementType="HTTPArgument">
+                <boolProp name="HTTPArgument.always_encode">false</boolProp>
+                <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;update&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;mutation update {\n  updateProfileFields(input: [{field: FirstName, value: \&quot;${__RandomString(10,abcdefghijklmnopqrstuvwxyz,)}\&quot;}]) {\n    firstName\n  }\n}\n&quot;}</stringProp>
+                <stringProp name="Argument.metadata">=</stringProp>
+              </elementProp>
+            </collectionProp>
+          </elementProp>
+          <stringProp name="HTTPSampler.domain">${ServerUrl}</stringProp>
+          <stringProp name="HTTPSampler.port"></stringProp>
+          <stringProp name="HTTPSampler.protocol">https</stringProp>
+          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
+          <stringProp name="HTTPSampler.path">/graphql</stringProp>
+          <stringProp name="HTTPSampler.method">POST</stringProp>
+          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
+          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
+          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
+          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
+          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
+          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
+          <stringProp name="HTTPSampler.response_timeout"></stringProp>
+        </HTTPSamplerProxy>
+        <hashTree>
+          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
+            <boolProp name="ResultCollector.error_logging">false</boolProp>
+            <objProp>
+              <name>saveConfig</name>
+              <value class="SampleSaveConfiguration">
+                <time>true</time>
+                <latency>true</latency>
+                <timestamp>true</timestamp>
+                <success>true</success>
+                <label>true</label>
+                <code>true</code>
+                <message>true</message>
+                <threadName>true</threadName>
+                <dataType>true</dataType>
+                <encoding>false</encoding>
+                <assertions>true</assertions>
+                <subresults>true</subresults>
+                <responseData>false</responseData>
+                <samplerData>false</samplerData>
+                <xml>false</xml>
+                <fieldNames>true</fieldNames>
+                <responseHeaders>false</responseHeaders>
+                <requestHeaders>false</requestHeaders>
+                <responseDataOnError>false</responseDataOnError>
+                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
+                <assertionsResultsToSave>0</assertionsResultsToSave>
+                <bytes>true</bytes>
+                <sentBytes>true</sentBytes>
+                <url>true</url>
+                <threadCounts>true</threadCounts>
+                <idleTime>true</idleTime>
+                <connectTime>true</connectTime>
+              </value>
+            </objProp>
+            <stringProp name="filename"></stringProp>
+          </ResultCollector>
+          <hashTree/>
+          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
+            <collectionProp name="HeaderManager.headers">
+              <elementProp name="" elementType="Header">
+                <stringProp name="Header.name">Authorization</stringProp>
+                <stringProp name="Header.value">${authToken}</stringProp>
+              </elementProp>
+            </collectionProp>
+          </HeaderManager>
+          <hashTree/>
+        </hashTree>
+        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Campuses" enabled="true">
+          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
+            <collectionProp name="Arguments.arguments">
+              <elementProp name="query" elementType="HTTPArgument">
+                <boolProp name="HTTPArgument.always_encode">false</boolProp>
+                <stringProp name="Argument.value">query%20getAllCampuses(%24latitude%3A%20Float!%2C%20%24longitude%3A%20Float!)%20%7B%0A%20%20campuses(location%3A%20%7Blatitude%3A%20%24latitude%2C%20longitude%3A%20%24longitude%7D)%20%7B%0A%20%20%20%20...CampusParts%0A%20%20%20%20__typename%0A%20%20%7D%0A%7D%0A%0Afragment%20CampusParts%20on%20Campus%20%7B%0A%20%20id%0A%20%20name%0A%20%20latitude%0A%20%20longitude%0A%20%20distanceFromLocation%0A%20%20street1%0A%20%20street2%0A%20%20city%0A%20%20state%0A%20%20postalCode%0A%20%20image%20%7B%0A%20%20%20%20uri%0A%20%20%20%20__typename%0A%20%20%7D%0A%20%20__typename%0A%7D%0A</stringProp>
+                <stringProp name="Argument.metadata">=</stringProp>
+                <boolProp name="HTTPArgument.use_equals">true</boolProp>
+                <stringProp name="Argument.name">query</stringProp>
+              </elementProp>
+              <elementProp name="operationName" elementType="HTTPArgument">
+                <boolProp name="HTTPArgument.always_encode">false</boolProp>
+                <stringProp name="Argument.value">getAllCampuses</stringProp>
+                <stringProp name="Argument.metadata">=</stringProp>
+                <boolProp name="HTTPArgument.use_equals">true</boolProp>
+                <stringProp name="Argument.name">operationName</stringProp>
+              </elementProp>
+              <elementProp name="variables" elementType="HTTPArgument">
+                <boolProp name="HTTPArgument.always_encode">false</boolProp>
+                <stringProp name="Argument.value">%7B%22latitude%22%3A39.103119%2C%22longitude%22%3A-84.512016%7D</stringProp>
+                <stringProp name="Argument.metadata">=</stringProp>
+                <boolProp name="HTTPArgument.use_equals">true</boolProp>
+                <stringProp name="Argument.name">variables</stringProp>
+              </elementProp>
+            </collectionProp>
+          </elementProp>
+          <stringProp name="HTTPSampler.domain">${ServerUrl}</stringProp>
+          <stringProp name="HTTPSampler.port"></stringProp>
+          <stringProp name="HTTPSampler.protocol">https</stringProp>
+          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
+          <stringProp name="HTTPSampler.path">/graphql</stringProp>
+          <stringProp name="HTTPSampler.method">GET</stringProp>
+          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
+          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
+          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
+          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
+          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
+          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
+          <stringProp name="HTTPSampler.response_timeout"></stringProp>
+        </HTTPSamplerProxy>
+        <hashTree>
+          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
+            <boolProp name="ResultCollector.error_logging">false</boolProp>
+            <objProp>
+              <name>saveConfig</name>
+              <value class="SampleSaveConfiguration">
+                <time>true</time>
+                <latency>true</latency>
+                <timestamp>true</timestamp>
+                <success>true</success>
+                <label>true</label>
+                <code>true</code>
+                <message>true</message>
+                <threadName>true</threadName>
+                <dataType>true</dataType>
+                <encoding>false</encoding>
+                <assertions>true</assertions>
+                <subresults>true</subresults>
+                <responseData>false</responseData>
+                <samplerData>false</samplerData>
+                <xml>false</xml>
+                <fieldNames>true</fieldNames>
+                <responseHeaders>false</responseHeaders>
+                <requestHeaders>false</requestHeaders>
+                <responseDataOnError>false</responseDataOnError>
+                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
+                <assertionsResultsToSave>0</assertionsResultsToSave>
+                <bytes>true</bytes>
+                <sentBytes>true</sentBytes>
+                <url>true</url>
+                <threadCounts>true</threadCounts>
+                <idleTime>true</idleTime>
+                <connectTime>true</connectTime>
+              </value>
+            </objProp>
+            <stringProp name="filename"></stringProp>
+          </ResultCollector>
+          <hashTree/>
+          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
+            <collectionProp name="HeaderManager.headers">
+              <elementProp name="" elementType="Header">
+                <stringProp name="Header.name">Authorization</stringProp>
+                <stringProp name="Header.value">${authToken}</stringProp>
+              </elementProp>
+            </collectionProp>
+          </HeaderManager>
+          <hashTree/>
+        </hashTree>
+        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Home Feed" enabled="true">
+          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
+            <collectionProp name="Arguments.arguments">
+              <elementProp name="query" elementType="HTTPArgument">
+                <boolProp name="HTTPArgument.always_encode">false</boolProp>
+                <stringProp name="Argument.value">query%20getUserFeed(%24first%3A%20Int%2C%20%24after%3A%20String)%20%7B%0A%20%20userFeed(first%3A%20%24first%2C%20after%3A%20%24after)%20%7B%0A%20%20%20%20pageInfo%20%7B%0A%20%20%20%20%20%20endCursor%0A%20%20%20%20%20%20__typename%0A%20%20%20%20%7D%0A%20%20%20%20edges%20%7B%0A%20%20%20%20%20%20node%20%7B%0A%20%20%20%20%20%20%20%20...largeCardFragment%0A%20%20%20%20%20%20%20%20...contentItemFragment%0A%20%20%20%20%20%20%20%20__typename%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20__typename%0A%20%20%20%20%7D%0A%20%20%20%20__typename%0A%20%20%7D%0A%7D%0A%0Afragment%20contentItemFragment%20on%20ContentItem%20%7B%0A%20%20id%0A%20%20title%0A%20%20isLiked%0A%20%20likedCount%0A%20%20summary%0A%20%20coverImage%20%7B%0A%20%20%20%20name%0A%20%20%20%20sources%20%7B%0A%20%20%20%20%20%20uri%0A%20%20%20%20%20%20__typename%0A%20%20%20%20%7D%0A%20%20%20%20__typename%0A%20%20%7D%0A%20%20theme%20%7B%0A%20%20%20%20type%0A%20%20%20%20colors%20%7B%0A%20%20%20%20%20%20primary%0A%20%20%20%20%20%20secondary%0A%20%20%20%20%20%20screen%0A%20%20%20%20%20%20paper%0A%20%20%20%20%20%20__typename%0A%20%20%20%20%7D%0A%20%20%20%20__typename%0A%20%20%7D%0A%20%20parentChannel%20%7B%0A%20%20%20%20id%0A%20%20%20%20name%0A%20%20%20%20__typename%0A%20%20%7D%0A%20%20videos%20%7B%0A%20%20%20%20sources%20%7B%0A%20%20%20%20%20%20uri%0A%20%20%20%20%20%20__typename%0A%20%20%20%20%7D%0A%20%20%20%20__typename%0A%20%20%7D%0A%20%20audios%20%7B%0A%20%20%20%20sources%20%7B%0A%20%20%20%20%20%20uri%0A%20%20%20%20%20%20__typename%0A%20%20%20%20%7D%0A%20%20%20%20__typename%0A%20%20%7D%0A%20%20...%20on%20WeekendContentItem%20%7B%0A%20%20%20%20liveStream%20%7B%0A%20%20%20%20%20%20isLive%0A%20%20%20%20%20%20__typename%0A%20%20%20%20%7D%0A%20%20%20%20__typename%0A%20%20%7D%0A%20%20__typename%0A%7D%0A%0Afragment%20largeCardFragment%20on%20ContentItem%20%7B%0A%20%20...baseCardFragment%0A%20%20__typename%0A%7D%0A%0Afragment%20baseCardFragment%20on%20ContentItem%20%7B%0A%20%20id%0A%20%20__typename%0A%20%20...coverImageFragment%0A%20%20...themeFragment%0A%20%20title%0A%20%20summary%0A%20%20isLiked%0A%20%20...%20on%20MediaContentItem%20%7B%0A%20%20%20%20videos%20%7B%0A%20%20%20%20%20%20sources%20%7B%0A%20%20%20%20%20%20%20%20uri%0A%20%20%20%20%20%20%20%20__typename%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20__typename%0A%20%20%20%20%7D%0A%20%20%20%20__typename%0A%20%20%7D%0A%20%20...%20on%20WeekendContentItem%20%7B%0A%20%20%20%20videos%20%7B%0A%20%20%20%20%20%20sources%20%7B%0A%20%20%20%20%20%20%20%20uri%0A%20%20%20%20%20%20%20%20__typename%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20__typename%0A%20%20%20%20%7D%0A%20%20%20%20liveStream%20%7B%0A%20%20%20%20%20%20isLive%0A%20%20%20%20%20%20__typename%0A%20%20%20%20%7D%0A%20%20%20%20parentChannel%20%7B%0A%20%20%20%20%20%20id%0A%20%20%20%20%20%20name%0A%20%20%20%20%20%20__typename%0A%20%20%20%20%7D%0A%20%20%20%20__typename%0A%20%20%7D%0A%20%20...%20on%20DevotionalContentItem%20%7B%0A%20%20%20%20parentChannel%20%7B%0A%20%20%20%20%20%20id%0A%20%20%20%20%20%20name%0A%20%20%20%20%20%20__typename%0A%20%20%20%20%7D%0A%20%20%20%20__typename%0A%20%20%7D%0A%7D%0A%0Afragment%20coverImageFragment%20on%20ContentItem%20%7B%0A%20%20coverImage%20%7B%0A%20%20%20%20sources%20%7B%0A%20%20%20%20%20%20uri%0A%20%20%20%20%20%20__typename%0A%20%20%20%20%7D%0A%20%20%20%20__typename%0A%20%20%7D%0A%20%20__typename%0A%7D%0A%0Afragment%20themeFragment%20on%20ContentItem%20%7B%0A%20%20theme%20%7B%0A%20%20%20%20type%0A%20%20%20%20colors%20%7B%0A%20%20%20%20%20%20primary%0A%20%20%20%20%20%20secondary%0A%20%20%20%20%20%20screen%0A%20%20%20%20%20%20paper%0A%20%20%20%20%20%20__typename%0A%20%20%20%20%7D%0A%20%20%20%20__typename%0A%20%20%7D%0A%20%20__typename%0A%7D%0A</stringProp>
+                <stringProp name="Argument.metadata">=</stringProp>
+                <boolProp name="HTTPArgument.use_equals">true</boolProp>
+                <stringProp name="Argument.name">query</stringProp>
+              </elementProp>
+              <elementProp name="operationName" elementType="HTTPArgument">
+                <boolProp name="HTTPArgument.always_encode">false</boolProp>
+                <stringProp name="Argument.value">getUserFeed</stringProp>
+                <stringProp name="Argument.metadata">=</stringProp>
+                <boolProp name="HTTPArgument.use_equals">true</boolProp>
+                <stringProp name="Argument.name">operationName</stringProp>
+              </elementProp>
+              <elementProp name="variables" elementType="HTTPArgument">
+                <boolProp name="HTTPArgument.always_encode">false</boolProp>
+                <stringProp name="Argument.value">%7B%22first%22%3A10%2C%22after%22%3Anull%7D</stringProp>
+                <stringProp name="Argument.metadata">=</stringProp>
+                <boolProp name="HTTPArgument.use_equals">true</boolProp>
+                <stringProp name="Argument.name">variables</stringProp>
+              </elementProp>
+            </collectionProp>
+          </elementProp>
+          <stringProp name="HTTPSampler.domain">${ServerUrl}</stringProp>
+          <stringProp name="HTTPSampler.port"></stringProp>
+          <stringProp name="HTTPSampler.protocol">https</stringProp>
+          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
+          <stringProp name="HTTPSampler.path">/graphql</stringProp>
+          <stringProp name="HTTPSampler.method">GET</stringProp>
+          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
+          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
+          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
+          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
+          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
+          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
+          <stringProp name="HTTPSampler.response_timeout"></stringProp>
+        </HTTPSamplerProxy>
+        <hashTree>
+          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
+            <boolProp name="ResultCollector.error_logging">false</boolProp>
+            <objProp>
+              <name>saveConfig</name>
+              <value class="SampleSaveConfiguration">
+                <time>true</time>
+                <latency>true</latency>
+                <timestamp>true</timestamp>
+                <success>true</success>
+                <label>true</label>
+                <code>true</code>
+                <message>true</message>
+                <threadName>true</threadName>
+                <dataType>true</dataType>
+                <encoding>false</encoding>
+                <assertions>true</assertions>
+                <subresults>true</subresults>
+                <responseData>false</responseData>
+                <samplerData>false</samplerData>
+                <xml>false</xml>
+                <fieldNames>true</fieldNames>
+                <responseHeaders>false</responseHeaders>
+                <requestHeaders>false</requestHeaders>
+                <responseDataOnError>false</responseDataOnError>
+                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
+                <assertionsResultsToSave>0</assertionsResultsToSave>
+                <bytes>true</bytes>
+                <sentBytes>true</sentBytes>
+                <url>true</url>
+                <threadCounts>true</threadCounts>
+                <idleTime>true</idleTime>
+                <connectTime>true</connectTime>
+              </value>
+            </objProp>
+            <stringProp name="filename"></stringProp>
+          </ResultCollector>
+          <hashTree/>
+          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
+            <collectionProp name="HeaderManager.headers">
+              <elementProp name="" elementType="Header">
+                <stringProp name="Header.name">Authorization</stringProp>
+                <stringProp name="Header.value">${authToken}</stringProp>
+              </elementProp>
+            </collectionProp>
+          </HeaderManager>
+          <hashTree/>
+        </hashTree>
+        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
+          <boolProp name="ResultCollector.error_logging">false</boolProp>
+          <objProp>
+            <name>saveConfig</name>
+            <value class="SampleSaveConfiguration">
+              <time>true</time>
+              <latency>true</latency>
+              <timestamp>true</timestamp>
+              <success>true</success>
+              <label>true</label>
+              <code>true</code>
+              <message>true</message>
+              <threadName>true</threadName>
+              <dataType>true</dataType>
+              <encoding>false</encoding>
+              <assertions>true</assertions>
+              <subresults>true</subresults>
+              <responseData>false</responseData>
+              <samplerData>false</samplerData>
+              <xml>false</xml>
+              <fieldNames>true</fieldNames>
+              <responseHeaders>false</responseHeaders>
+              <requestHeaders>false</requestHeaders>
+              <responseDataOnError>false</responseDataOnError>
+              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
+              <assertionsResultsToSave>0</assertionsResultsToSave>
+              <bytes>true</bytes>
+              <sentBytes>true</sentBytes>
+              <url>true</url>
+              <threadCounts>true</threadCounts>
+              <idleTime>true</idleTime>
+              <connectTime>true</connectTime>
+            </value>
+          </objProp>
+          <stringProp name="filename"></stringProp>
+        </ResultCollector>
+        <hashTree/>
+      </hashTree>
+    </hashTree>
+  </hashTree>
+</jmeterTestPlan>
\ No newline at end of file
diff --git a/apollos-church-api/local.graphql b/apollos-church-api/local.graphql
index e15ee8a..209ead5 100644
--- a/apollos-church-api/local.graphql
+++ b/apollos-church-api/local.graphql
@@ -1,6 +1,11 @@
+directive @cacheControl(maxAge: Int, scope: CacheControlScope) on FIELD_DEFINITION | OBJECT | INTERFACE
+
 enum ACTION_FEATURE_ACTION {
   READ_CONTENT
   READ_EVENT
+  OPEN_URL
+  OPEN_NODE
+  OPEN_CHANNEL
 }
 
 type ActionListAction {
@@ -18,6 +23,7 @@ type ActionListFeature implements Feature & Node {
   title: String
   subtitle: String
   actions: [ActionListAction]
+  primaryAction: FeatureAction
 }
 
 input AnalyticsDeviceInfo {
@@ -67,6 +73,10 @@ type AudioMediaSource implements MediaSource {
   uri: String
 }
 
+interface AudioNode {
+  audios: [AudioMedia]
+}
+
 type AuthenticatedUser {
   id: ID!
   profile: Person
@@ -100,8 +110,26 @@ type Campus implements Node {
 }
 
 input CampusLocationInput {
-  latitude: Float!
-  longitude: Float!
+  latitude: Float
+  longitude: Float
+}
+
+interface Card {
+  title(hyphenated: Boolean): String
+  coverImage: ImageMedia
+  summary: String
+}
+
+type CardListItem {
+  id: ID!
+  hasAction: Boolean
+  actionIcon: String
+  labelText: String
+  summary: String
+  coverImage: ImageMedia
+  title(hyphenated: Boolean): String
+  relatedNode: Node
+  action: ACTION_FEATURE_ACTION
 }
 
 """A rgb color string"""
@@ -116,6 +144,11 @@ type ContentChannel implements Node {
   iconName: String
 }
 
+interface ContentChildNode {
+  parentChannel: ContentChannel
+  siblingContentItemsConnection(first: Int, after: String): ContentItemsConnection
+}
+
 interface ContentItem {
   id: ID!
   title(hyphenated: Boolean): String
@@ -150,7 +183,17 @@ input ContentItemsConnectionInput {
   after: String
 }
 
-type ContentSeriesContentItem implements ContentItem & Node {
+interface ContentNode {
+  title(hyphenated: Boolean): String
+  coverImage: ImageMedia
+  htmlContent: String
+}
+
+interface ContentParentNode {
+  childContentItemsConnection(first: Int, after: String): ContentItemsConnection
+}
+
+type ContentSeriesContentItem implements ContentItem & Node & ContentNode & Card & VideoNode & AudioNode & ContentChildNode & ContentParentNode & ThemedNode & ProgressNode & LikableNode & ShareableNode & FeaturesNode {
   id: ID!
   title(hyphenated: Boolean): String
   coverImage: ImageMedia
@@ -163,14 +206,23 @@ type ContentSeriesContentItem implements ContentItem & Node {
   siblingContentItemsConnection(first: Int, after: String): ContentItemsConnection
   parentChannel: ContentChannel
   theme: Theme
+  percentComplete: Float
+  upNext: ContentItem
   scriptures: [Scripture]
   isLiked: Boolean
   likedCount: Int
   sharing: SharableContentItem
-  features: [Feature]
+  features: [Feature] @deprecated(reason: "Use featureFeed")
+  featureFeed: FeatureFeed
+}
+
+type Device implements Node {
+  id: ID!
+  pushId: String!
+  notificationsEnabled: Boolean!
 }
 
-type DevotionalContentItem implements ContentItem & Node {
+type DevotionalContentItem implements ContentItem & Node & ContentNode & Card & VideoNode & AudioNode & ContentChildNode & ContentParentNode & ThemedNode & ScriptureNode & LikableNode & ShareableNode {
   id: ID!
   title(hyphenated: Boolean): String
   coverImage: ImageMedia
@@ -204,6 +256,22 @@ interface Feature {
   order: Int
 }
 
+type FeatureAction {
+  relatedNode: Node
+  action: ACTION_FEATURE_ACTION
+  title: String
+}
+
+type FeatureFeed implements Node {
+  id: ID!
+  features: [Feature]
+}
+
+interface FeaturesNode {
+  features: [Feature] @deprecated(reason: "Use featureFeed")
+  featureFeed: FeatureFeed
+}
+
 enum GENDER {
   Male
   Female
@@ -224,6 +292,25 @@ enum GROUP_TYPE {
   Family
 }
 
+type HeroListFeature implements Feature & Node {
+  id: ID!
+  order: Int
+  title: String
+  subtitle: String
+  actions: [ActionListAction]
+  heroCard: CardListItem
+  primaryAction: FeatureAction
+}
+
+type HorizontalCardListFeature implements Feature & Node {
+  id: ID!
+  order: Int
+  title: String
+  subtitle: String
+  cards: [CardListItem]
+  primaryAction: FeatureAction
+}
+
 type ImageMedia implements Media {
   name: String
   key: String
@@ -234,6 +321,29 @@ type ImageMediaSource implements MediaSource {
   uri: String
 }
 
+enum InteractionAction {
+  VIEW
+  COMPLETE
+  PRAY
+}
+
+input InteractionDataField {
+  field: String!
+  value: InteractionValue
+}
+
+type InteractionResult {
+  success: Boolean
+  node: Node
+}
+
+scalar InteractionValue
+
+interface LikableNode {
+  isLiked: Boolean
+  likedCount: Int
+}
+
 enum LIKE_OPERATION {
   Like
   Unlike
@@ -244,6 +354,10 @@ input LikeEntityInput {
   operation: LIKE_OPERATION!
 }
 
+interface LiveNode {
+  liveStream: LiveStream
+}
+
 type LiveStream {
   isLive: Boolean
   eventStartTime: String
@@ -258,7 +372,7 @@ interface Media {
   sources: [MediaSource]
 }
 
-type MediaContentItem implements ContentItem & Node {
+type MediaContentItem implements ContentItem & Node & ContentNode & Card & VideoNode & AudioNode & ContentChildNode & ContentParentNode & ThemedNode & ScriptureNode & LikableNode & ShareableNode {
   id: ID!
   title(hyphenated: Boolean): String
   coverImage: ImageMedia
@@ -289,7 +403,8 @@ interface MediaSource {
 
 type Mutation {
   _placeholder: Boolean
-  updateLikeEntity(input: LikeEntityInput!): ContentItem
+  updateLikeEntity(input: LikeEntityInput!): ContentItem @deprecated(reason: "Use the more general updateLikeNode instead")
+  updateLikeNode(input: LikeEntityInput!): Node
   updateProfileField(input: UpdateProfileInput!): Person
   updateProfileFields(input: [UpdateProfileInput]!): Person
   uploadProfileImage(file: Upload!, size: Int!): Person
@@ -299,10 +414,12 @@ type Mutation {
   requestSmsLoginPin(phoneNumber: String!): SmsPinResult
   authenticateWithSms(phoneNumber: String!, pin: String!): Authentication
   registerWithSms(phoneNumber: String!, pin: String!, userProfile: [UpdateProfileInput]): Authentication
+  interactWithNode(action: InteractionAction!, nodeId: ID!, data: [InteractionDataField]): InteractionResult
   identifySelf(input: AnalyticsIdentifyInput!): AnalyticsResult
   trackEvent(input: AnalyticsTrackInput!): AnalyticsResult
   updateUserPushSettings(input: PushSettingsInput!): Person
   updateUserCampus(campusId: String!): Person
+  addPrayer(text: String!, isAnonymous: Boolean): PrayerRequest
 }
 
 interface Node {
@@ -357,10 +474,33 @@ type Person implements Node {
   gender: GENDER
   birthDate: String
   photo: ImageMediaSource
+  devices: [Device]
   campus: Campus
   groups(type: GROUP_TYPE, asLeader: Boolean): [Group]
 }
 
+type PrayerListFeature implements Feature & Node {
+  id: ID!
+  order: Int
+  isCard: Boolean
+  title: String
+  subtitle: String
+  prayers: [PrayerRequest]
+}
+
+type PrayerRequest implements Node {
+  id: ID!
+  text: String!
+  requestor: Person
+  isAnonymous: Boolean
+  isPrayed: Boolean
+}
+
+interface ProgressNode {
+  percentComplete: Float
+  upNext: ContentItem
+}
+
 input PushSettingsInput {
   enabled: Boolean
   pushProviderUserId: String
@@ -383,7 +523,9 @@ type Query {
   userPass: Pass
   search(query: String!, first: Int, after: String): SearchResultsConnection
   campuses(location: CampusLocationInput): [Campus]
-  userFeedFeatures: [Feature]
+  userFeedFeatures: [Feature] @deprecated(reason: "Use homeFeedFeatures or discoverFeedFeatures")
+  homeFeedFeatures: FeatureFeed
+  discoverFeedFeatures: FeatureFeed
 }
 
 type RockPersonDetails {
@@ -406,6 +548,10 @@ type ScriptureFeature implements Feature & Node {
   sharing: SharableFeature
 }
 
+interface ScriptureNode {
+  scriptures: [Scripture]
+}
+
 type SearchResult {
   cursor: String
   title: String
@@ -437,6 +583,10 @@ type SharableFeature implements Sharable {
   url: String @deprecated(reason: "Not supported on a feature")
 }
 
+interface ShareableNode {
+  sharing: SharableContentItem
+}
+
 type SmsPinResult {
   success: Boolean
   userAuthStatus: USER_AUTH_STATUS
@@ -462,12 +612,16 @@ type ThemeColors {
   alert: Color
 }
 
+interface ThemedNode {
+  theme: Theme
+}
+
 enum ThemeType {
   LIGHT
   DARK
 }
 
-type UniversalContentItem implements ContentItem & Node {
+type UniversalContentItem implements ContentItem & Node & ContentNode & Card & VideoNode & AudioNode & ContentChildNode & ContentParentNode & ThemedNode & LikableNode & ShareableNode {
   id: ID!
   title(hyphenated: Boolean): String
   coverImage: ImageMedia
@@ -502,6 +656,11 @@ input UpdateProfileInput {
 """The `Upload` scalar type represents a file upload."""
 scalar Upload
 
+type Url implements Node {
+  url: String
+  id: ID!
+}
+
 enum USER_AUTH_STATUS {
   NONE
   NEW_APP_USER
@@ -513,6 +672,15 @@ enum VERSION {
   KJV
 }
 
+type VerticalCardListFeature implements Feature & Node {
+  id: ID!
+  order: Int
+  title: String
+  subtitle: String
+  isFeatured: Boolean
+  cards: [CardListItem]
+}
+
 type VideoMedia implements Media {
   name: String
   key: String
@@ -524,7 +692,19 @@ type VideoMediaSource implements MediaSource {
   uri: String
 }
 
-type WeekendContentItem implements ContentItem & Node {
+interface VideoNode {
+  videos: [VideoMedia]
+}
+
+type WebviewFeature implements Feature & Node {
+  id: ID!
+  order: Int
+  linkText: String
+  title: String
+  url: String
+}
+
+type WeekendContentItem implements ContentItem & Node & ContentNode & Card & VideoNode & AudioNode & ContentChildNode & ContentParentNode & ThemedNode & LikableNode & LiveNode & ShareableNode & FeaturesNode {
   id: ID!
   title(hyphenated: Boolean): String
   coverImage: ImageMedia
@@ -541,6 +721,7 @@ type WeekendContentItem implements ContentItem & Node {
   likedCount: Int
   liveStream: LiveStream
   sharing: SharableContentItem
-  features: [Feature]
+  features: [Feature] @deprecated(reason: "Use featureFeed")
+  featureFeed: FeatureFeed
 }
 
diff --git a/apollos-church-api/package.json b/apollos-church-api/package.json
index a395e58..88a8b4b 100644
--- a/apollos-church-api/package.json
+++ b/apollos-church-api/package.json
@@ -1,20 +1,26 @@
 {
   "name": "apollos-church-api",
-  "version": "1.3.0-beta.2",
+  "version": "1.0.0",
   "private": true,
   "main": "lib/index.js",
   "scripts": {
+    "setup": "./scripts/init.sh",
     "start": "./scripts/generateLocalSchema.sh & yarn start:dev",
-    "start:dev": "nodemon ./src/index.js --exec babel-node --delay 2",
+    "start:dev": "linkemon ./src/index.js --exec babel-node --delay 2 -e js,yaml,json,yml",
     "start:prod": "NODE_ENV=production node ./lib/index.js",
+    "postinstall": "yarn build",
+    "link-packages": "node ./scripts/link-packages",
+    "unlink-packages": "node ./scripts/link-packages remove",
     "build": "NODE_ENV=production rm -rf ./lib && mkdir -p lib && babel ./src -d ./lib",
     "test": "echo \"No tests in apollos-church-api, all tested code is located in @apollosproject npm modules\"",
     "lint": "eslint ./src --ext .js",
     "fixlint": "eslint ./src --ext .js --fix",
     "codecov": "cat ./coverage/lcov.info | codecov",
     "version": "node ../../scripts/update-apollos-version.js && git add apollos.json",
-    "schema-diff": "./scripts/schemaDiff.sh",
-    "schema-lint": "graphql-schema-linter local.graphql"
+    "upgrade": "npx @apollosproject/upgrade-tools upgrade",
+    "latest": "./scripts/add-packages.sh latest",
+    "beta": "./scripts/add-packages.sh beta",
+    "canary": "./scripts/add-packages.sh canary"
   },
   "engines": {
     "node": ">=8.11.x"
@@ -34,38 +40,52 @@
     ]
   },
   "dependencies": {
-    "@apollosproject/config": "^1.3.0-beta.2",
-    "@apollosproject/data-connector-algolia-search": "^1.3.0-beta.2",
-    "@apollosproject/data-connector-analytics": "^1.3.0-beta.2",
-    "@apollosproject/data-connector-bible": "^1.3.0-beta.2",
-    "@apollosproject/data-connector-church-online": "^1.3.0-beta.2",
-    "@apollosproject/data-connector-cloudinary": "^1.3.0-beta.2",
-    "@apollosproject/data-connector-onesignal": "^1.3.0-beta.2",
-    "@apollosproject/data-connector-passes": "^1.3.0-beta.2",
-    "@apollosproject/data-connector-redis-cache": "^1.3.0-beta.2",
-    "@apollosproject/data-connector-rock": "^1.3.0-beta.2",
-    "@apollosproject/data-connector-twilio": "^1.3.0-beta.2",
-    "@apollosproject/data-schema": "^1.3.0-beta.2",
-    "@apollosproject/rock-apollo-data-source": "^1.3.0-beta.2",
-    "@apollosproject/server-core": "^1.3.0-beta.2",
-    "apollo-server": "^2.0.5",
-    "apollo-server-express": "2.4.8",
+    "@apollosproject/bugsnag": "^1.7.0-beta.1",
+    "@apollosproject/config": "^1.7.0-beta.1",
+    "@apollosproject/data-connector-algolia-search": "^1.7.0-beta.1",
+    "@apollosproject/data-connector-analytics": "^1.7.0-beta.1",
+    "@apollosproject/data-connector-bible": "^1.7.0-beta.1",
+    "@apollosproject/data-connector-church-online": "^1.7.0-beta.1",
+    "@apollosproject/data-connector-cloudinary": "^1.7.0-beta.1",
+    "@apollosproject/data-connector-onesignal": "^1.7.0-beta.1",
+    "@apollosproject/data-connector-passes": "^1.7.0-beta.1",
+    "@apollosproject/data-connector-redis-cache": "^1.7.0-beta.1",
+    "@apollosproject/data-connector-rock": "^1.7.0-beta.1",
+    "@apollosproject/data-connector-twilio": "^1.7.0-beta.1",
+    "@apollosproject/data-schema": "^1.7.0-beta.1",
+    "@apollosproject/rock-apollo-data-source": "^1.7.0-beta.1",
+    "@apollosproject/server-core": "^1.7.0-beta.1",
+    "apollo-server": "^2.14.2",
+    "apollo-server-express": "2.14.2",
     "color": "3.0.0",
     "dotenv": "6.0.0",
     "express": "^4.17.0",
-    "graphql": "0.13.2",
+    "graphql": "14.6.0",
     "prettier": "1.12.1",
     "randomcolor": "0.5.3"
   },
   "devDependencies": {
-    "@apollosproject/apollo-server-env-mock": "^1.3.0-beta.2",
-    "@apollosproject/babel-preset-apollos": "^1.3.0-beta.2",
+    "@apollosproject/apollo-server-env-mock": "^1.7.0-beta.1",
+    "@apollosproject/babel-preset-apollos": "^1.7.0-beta.1",
+    "@apollosproject/eslint-config": "^1.7.0-beta.1",
     "@babel/cli": "^7.4.5",
     "@babel/core": "^7.4.5",
+    "@babel/node": "^7.7.4",
     "@entria/graphql-findbreakingchanges": "^1.0.1",
-    "codecov": "3.0.2",
+    "babel-eslint": "^10.0.3",
+    "babel-jest": "^24.9.0",
+    "babel-plugin-module-resolver": "^3.2.0",
+    "codecov": "3.7.1",
+    "eslint": "^5.16.0",
+    "eslint-config-airbnb-base": "^14.0.0",
+    "eslint-config-prettier": "^2.9.0",
+    "eslint-import-resolver-babel-module": "^5.0.0-beta.0",
+    "eslint-plugin-babel": "^5.1.0",
+    "eslint-plugin-import": "^2.12.0",
+    "eslint-plugin-jest": "^21.15.2",
+    "eslint-plugin-prettier": "^2.6.0",
     "get-graphql-schema": "^2.1.2",
-    "graphql-schema-linter": "^0.2.0",
-    "nodemon": "1.18.7"
+    "linkemon": "^0.1.1",
+    "nodemon": "^2.0.2"
   }
 }
diff --git a/apollos-church-api/scripts/generateLocalSchema.sh b/apollos-church-api/scripts/generateLocalSchema.sh
index 869e5a8..59be766 100755
--- a/apollos-church-api/scripts/generateLocalSchema.sh
+++ b/apollos-church-api/scripts/generateLocalSchema.sh
@@ -5,13 +5,6 @@ if eval "$PING_SERVER"; then
   ./node_modules/.bin/get-graphql-schema http://localhost:4000 > local.graphql
   echo 'Done. Check local.graphql'
 else
-  echo $*
-  if [ "$*" = "--start-server" ]; then
-    echo 'Server not running, starting server'
-    PORT=4000 TWILIO_ACCOUNT_SID=ACXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX npm run start:prod > /tmp/server-log.txt &
-    SERVER_PID=$!
-    echo "Server running... (PID $SERVER_PID)"
-  fi
   sleep 1
   until eval "$PING_SERVER"; do
       sleep 1
@@ -19,10 +12,4 @@ else
   done
   echo 'Curling Server for most recent schema.'
   ./node_modules/.bin/get-graphql-schema http://localhost:4000 > local.graphql
-  echo 'Publishing Schema to Apollo Engine.'
-  npx apollo server:publish --endpoint=http://localhost:4000
-  if [ "$*" = "--start-server" ]; then
-    echo "Killing Server (PID $SERVER_PID)"
-    kill -9 $SERVER_PID
-  fi
 fi
diff --git a/apollos-church-api/scripts/init.sh b/apollos-church-api/scripts/init.sh
new file mode 100755
index 0000000..474bfae
--- /dev/null
+++ b/apollos-church-api/scripts/init.sh
@@ -0,0 +1,7 @@
+# create .env file
+if test -f .env; then
+	echo ".env file already exists!"
+	exit 1
+fi
+echo "ROCK_API=
+ROCK_TOKEN=" > .env
diff --git a/apollos-church-api/scripts/link-packages.js b/apollos-church-api/scripts/link-packages.js
new file mode 100644
index 0000000..7778c0a
--- /dev/null
+++ b/apollos-church-api/scripts/link-packages.js
@@ -0,0 +1,16 @@
+const fs = require('fs');
+const { execSync } = require('child_process');
+
+const direction = process.argv[2] || 'link';
+
+const packageJson = JSON.parse(fs.readFileSync(`${__dirname}/../package.json`));
+
+const dependencies = [
+  ...Object.keys(packageJson.dependencies),
+  ...Object.keys(packageJson.devDependencies),
+].filter((d) => d.includes('@apollosproject'));
+
+dependencies.forEach((dep) => {
+  const output = execSync(`yalc ${direction} ${dep}`, { encoding: 'utf8' });
+  console.log(output);
+});
diff --git a/apollos-church-api/scripts/schemaDiff.sh b/apollos-church-api/scripts/schemaDiff.sh
deleted file mode 100755
index 67404e4..0000000
--- a/apollos-church-api/scripts/schemaDiff.sh
+++ /dev/null
@@ -1,13 +0,0 @@
-#!/usr/bin/env bash
-sh ./scripts/generateLocalSchema.sh --start-server
-./node_modules/.bin/get-graphql-schema https://apollos-church-api-herokuapp-com.global.ssl.fastly.net > prod.graphql
-DIFF=$(graphql-findbreakingchanges prod.graphql local.graphql)
-rm prod.graphql
-echo "$DIFF"
-
-if [[ ! $DIFF = *"NO BREAKING CHANGES"* ]]
-then
-  exit 1
-else
-  exit 0
-fi
diff --git a/apollos-church-api/src/data/index.js b/apollos-church-api/src/data/index.js
index 50d8d41..cb2810d 100644
--- a/apollos-church-api/src/data/index.js
+++ b/apollos-church-api/src/data/index.js
@@ -1,6 +1,9 @@
 import { gql } from 'apollo-server';
 
-import { createApolloServerConfig } from '@apollosproject/server-core';
+import {
+  createApolloServerConfig,
+  Interfaces,
+} from '@apollosproject/server-core';
 
 import * as Analytics from '@apollosproject/data-connector-analytics';
 import * as Scripture from '@apollosproject/data-connector-bible';
@@ -26,8 +29,10 @@ import {
   Campus,
   Group,
   BinaryFiles,
-  Features,
+  Feature,
+  FeatureFeed,
   Event,
+  PrayerRequest,
 } from '@apollosproject/data-connector-rock';
 import * as Theme from './theme';
 
@@ -36,6 +41,7 @@ import * as Theme from './theme';
 import * as OneSignalWithRock from './oneSignalWithRock';
 
 const data = {
+  Interfaces,
   Followings,
   ContentChannel,
   ContentItem,
@@ -60,9 +66,11 @@ const data = {
   Campus,
   Group,
   BinaryFiles,
-  Features,
+  Feature,
+  FeatureFeed,
   Event,
   Cache,
+  PrayerRequest,
 };
 
 const {
diff --git a/apollos-church-api/src/index.js b/apollos-church-api/src/index.js
index 796ad4d..3acfad0 100644
--- a/apollos-church-api/src/index.js
+++ b/apollos-church-api/src/index.js
@@ -8,9 +8,9 @@ export { testSchema } from './server'; // eslint-disable-line import/prefer-defa
 const { PORT } = process.env;
 if (!PORT && process.env.NODE_ENV !== 'test')
   console.warn(
-    'Add `ENV=4000` if you are having trouble connecting to the server. By default, PORT is random.'
+    'Add `PORT=XXXX` if you are having trouble connecting to the server. By default, PORT is 4000.'
   );
 
-server.listen({ port: PORT }, () => {
-  console.log(`🚀 Server ready at http://0.0.0.0:${PORT}`);
+server.listen({ port: PORT || 4000 }, () => {
+  console.log(`🚀 Server ready at http://0.0.0.0:${PORT || 4000}`);
 });
diff --git a/apollos-church-api/src/server.js b/apollos-church-api/src/server.js
index 80159aa..e0106a6 100644
--- a/apollos-church-api/src/server.js
+++ b/apollos-church-api/src/server.js
@@ -3,7 +3,8 @@ import ApollosConfig from '@apollosproject/config';
 import express from 'express';
 import { RockLoggingExtension } from '@apollosproject/rock-apollo-data-source';
 import { get } from 'lodash';
-
+import { setupUniversalLinks } from '@apollosproject/server-core';
+import { BugsnagPlugin } from '@apollosproject/bugsnag';
 import {
   resolvers,
   schema,
@@ -27,7 +28,7 @@ const cacheOptions = isDev
       cacheControl: {
         stripFormattedExtensions: false,
         calculateHttpHeaders: true,
-        defaultMaxAge: 600,
+        defaultMaxAge: 3600,
       },
     };
 
@@ -40,6 +41,7 @@ const apolloServer = new ApolloServer({
   context,
   introspection: true,
   extensions,
+  plugins: [new BugsnagPlugin()],
   formatError: (error) => {
     console.error(get(error, 'extensions.exception.stacktrace').join('\n'));
     return error;
@@ -58,8 +60,15 @@ const apolloServer = new ApolloServer({
 
 const app = express();
 
+// health check
+app.get('/health', (req, res) => {
+  res.send('ok');
+});
+
 applyServerMiddleware({ app, dataSources, context });
 setupJobs({ app, dataSources, context });
+// Comment out if you don't want the API serving apple-app-site-association or assetlinks manifests.
+setupUniversalLinks({ app });
 
 apolloServer.applyMiddleware({ app });
 apolloServer.applyMiddleware({ app, path: '/' });
