diff --git a/apollos-church-api/apollos.json b/apollos-church-api/apollos.json
index d599c862..131c2ff6 100644
--- a/apollos-church-api/apollos.json
+++ b/apollos-church-api/apollos.json
@@ -1,4 +1,4 @@
 {
-  "version": "2.30.0",
+  "version": "2.23.0",
   "environment": "api"
 }
diff --git a/apollos-church-api/config.postgres.yml b/apollos-church-api/config.postgres.yml
deleted file mode 100644
index f8b68c10..00000000
--- a/apollos-church-api/config.postgres.yml
+++ /dev/null
@@ -1,240 +0,0 @@
-# This file, in conjuction with your .env file,
-# should be used to configure the apollos server.
-
-# Any values you wish to keep secret should be placed in `.env`
-# You can access those values (and any other values in your environment)
-# using the ${VARIABLE_NAME} syntax
-
-# This file should be checked into version control.
-# `.env` should NOT be checked into version control.
-APP:
-  # This variable is used for generating deep links.
-  # It should match whatver is in your Info.plist `CFBundleURLTypes`
-  DEEP_LINK_HOST: ${DEEP_LINK_HOST}
-  UNIVERSAL_LINK_HOST: ${UNIVERSAL_LINK_HOST}
-  ROOT_API_URL: ${ROOT_URL}
-  JOBS_USERNAME: ${JOBS_USERNAME}
-  JOBS_PASSWORD: ${JOBS_PASSWORD}
-DATABASE:
-  URL: ${DATABASE_URL}
-BUGSNAG:
-  API_KEY: ${BUGSNAG_KEY}
-ROCK:
-  URL: ${ROCK_URL}
-  API_TOKEN: ${ROCK_TOKEN}
-UNIVERSAL_LINKS:
-  APPLE_APP_ID: ${APPLE_APP_ID}
-  APPLE_TEAM_ID: ${APPLE_TEAM_ID}
-  APP_STORE_LINK: ${IOS_REDIRECT}
-  PLAY_STORE_LINK: ${ANDROID_REDIRECT}
-  GOOGLE_APP_ID: ${GOOGLE_APP_ID}
-  GOOGLE_KEYSTORE_SHA256: ${GOOGLE_KEYSTORE_SHA256}
-ONE_SIGNAL:
-  APP_ID: ${ONE_SIGNAL_APP_ID}
-  REST_KEY: ${ONE_SIGNAL_REST_KEY}
-CHURCH_ONLINE:
-  URL: ${CHURCH_ONLINE_URL}
-  WEB_VIEW_URL: https://apollos.online.church/
-ALGOLIA:
-  APPLICATION_ID: ${ALGOLIASEARCH_APPLICATION_ID}
-  API_KEY: ${ALGOLIASEARCH_API_KEY}
-TWILIO:
-  ACCOUNT_SID: ${TWILIO_ACCOUNT_SID}
-  AUTH_TOKEN: ${TWILIO_AUTH_TOKEN}
-  FROM_NUMBER: ${TWILIO_FROM_NUMBER}
-PASS:
-  TEMPLATES:
-    CHECKIN: ${PWD}/wallet-passes/checkin.pass
-  CERTIFICATES:
-    WWDR: ${PASS_WWDR_CERT}
-    SIGNER_CERT: ${PASS_SIGNER_CERT}
-    SIGNER_KEY: ${PASS_SIGNER_KEY}
-    SIGNER_KEY_PASSPHRASE: ${PASS_SIGNER_PASSPHRASE}
-BIBLE_API:
-  KEY: ${BIBLE_API_KEY}
-  BIBLE_ID:
-    WEB: '9879dbb7cfe39e4d-01'
-    KJV: 'de4e12af7f28f599-02'
-CLOUDINARY:
-  URL: ${CLOUDINARY_URL}
-
-CONTENT:
-  SERMON_CHANNEL_ID: cbc0994a-97f1-471a-a7d5-4eff59d8a389
-  TYPES:
-    - ContentSeriesContentItem
-    - DevotionalContentItem
-    - MediaContentItem
-    - UniversalContentItem
-    - WeekendContentItem
-    - ContentItem
-
-
-TABS:
-  HOME:
-    - type: ActionBar
-      title: Welcome to Apollos
-      actions:
-        [
-          {
-            title: Check In,
-            icon: check,
-            action: OPEN_URL,
-            relatedNode: { __typename: Url, url: 'https://www.google.com' },
-          },
-        ]
-    - algorithms:
-      - type: CONTENT_FEED
-        arguments:
-          channelIds:
-            - c7f43eb9-2200-4267-ab28-871e0d5e785f
-            - 3dfe7149-136b-4134-bd91-fdd935ef2221
-      type: HeroList
-      primaryAction:
-        # Right now, you hardcode exactly what GraphQL should return.
-        # Long term, we hope to have a more sophisticated mechanism for driving this field
-        action: OPEN_NODE
-        title: 'Read More'
-        relatedNode:
-          __typename: UniversalContentItem
-          id: a2c42d1d-98c8-46fb-aeea-603bc569cf7d
-    - algorithms: [DAILY_PRAYER]
-      isCard: false
-      type: PrayerList
-      title: Daily Prayer
-    - algorithms:
-        - type: CAMPAIGN_ITEMS
-          channelIds:
-            - 4b23ebc9-248e-4092-99f9-8829e1b6f1cc
-      type: HeroList
-      isFeatured: true
-      subtitle: Featured
-    - title: FOR YOU
-      algorithms: [SERMON_CHILDREN, PERSONA_FEED]
-      subtitle: Explore what God calls you to today
-      type: ActionList
-    - algorithms: [SERIES_IN_PROGRESS]
-      subtitle: Continue
-      type: HorizontalCardList
-    - title: RECOMMENDED
-      algorithms: [SERMON_CHILDREN]
-      subtitle: For Him
-      type: VerticalCardList
-    - title: BULLETIN
-      subtitle: What's happening at apollos?
-      type: ActionList
-      algorithms:
-        - type: CONTENT_FEED
-          arguments:
-            channelIds:
-              - 13
-        - type: UPCOMING_EVENTS
-
-  READ:
-    - algorithms:
-        - type: CONTENT_FEED
-          arguments:
-            channelIds:
-              - c7f43eb9-2200-4267-ab28-871e0d5e785f
-            limit: 3
-      type: HorizontalCardList
-      subtitle: Podcast Messages
-      primaryAction:
-        action: OPEN_CHANNEL
-        title: 'Read More'
-        relatedNode:
-          __typename: ContentChannel
-          apollosId: ContentChannel:f4a5890c-4af5-4d9f-afe3-5d1c6aa85419
-          title: Podcast Messages
-    - algorithms:
-        - type: CONTENT_FEED
-          arguments:
-            channelIds:
-              - d9da719f-84ef-4cf0-9875-22fea4bf09eb
-            limit: 3
-      type: HorizontalCardList
-      subtitle: Devotionals
-      primaryAction:
-        action: OPEN_CHANNEL
-        title: 'Read More'
-        relatedNode:
-          __typename: ContentChannel
-          apollosId: ContentChannel:d9da719f-84ef-4cf0-9875-22fea4bf09eb
-          title: Devotionals
-
-  WATCH:
-    - algorithms:
-        - type: LATEST_SERIES_CHILDREN
-          arguments:
-            channelId: 8f0a93f5-ccec-4cc1-8fd8-06afe5982f7b
-      type: HeroList
-      title: Catch up
-      subtitle: Latest Series
-    - algorithms:
-        - type: CONTENT_FEED
-          arguments:
-            channelIds:
-              - f4a5890c-4af5-4d9f-afe3-5d1c6aa85419
-      type: VerticalCardList
-      subtitle: All series
-    - algorithms:
-        - type: CONTENT_FEED
-          arguments:
-            channelIds:
-              - 8f0a93f5-ccec-4cc1-8fd8-06afe5982f7b
-            limit: 3
-      type: HorizontalCardList
-      subtitle: Sermons
-    - algorithms:
-        - type: CONTENT_FEED
-          arguments:
-            channelIds:
-              - f4a5890c-4af5-4d9f-afe3-5d1c6aa85419
-            limit: 3
-      type: HorizontalCardList
-      subtitle: Podcasts
-      primaryAction:
-        action: OPEN_CHANNEL
-        title: 'Read More'
-        relatedNode:
-          __typename: ContentChannel
-          apollosId: ContentChannel:f4a5890c-4af5-4d9f-afe3-5d1c6aa85419
-          title: Podcasts
-    - algorithms:
-        - type: CONTENT_FEED
-          arguments:
-            channelIds:
-              - f4a5890c-4af5-4d9f-afe3-5d1c6aa85419
-            limit: 3
-      type: HorizontalCardList
-      title: Videos
-      primaryAction:
-        action: OPEN_CHANNEL
-        title: 'Read More'
-        relatedNode:
-          __typename: ContentChannel
-          apollosId: ContentChannel:f4a5890c-4af5-4d9f-afe3-5d1c6aa85419
-          title: Videos
-
-  PRAY:
-    - algorithms: [DAILY_PRAYER]
-      isCard: false
-      type: PrayerList
-      title: Daily Prayer
-    - type: VerticalPrayerList
-      title: Your Prayers
-  CONNECT:
-    - type: ActionTable
-      title: Connect to Apollos
-      actions:
-        [
-          {
-            title: Google,
-            action: OPEN_URL,
-            relatedNode: { __typename: Url, url: 'https://www.google.com' },
-          },
-          {
-            title: Facebook,
-            action: OPEN_URL,
-            relatedNode: { __typename: Url, url: 'https://www.facebook.com' },
-          },
-        ]
diff --git a/apollos-church-api/config.yml b/apollos-church-api/config.yml
index 5ac0d92a..be7c7293 100644
--- a/apollos-church-api/config.yml
+++ b/apollos-church-api/config.yml
@@ -251,4 +251,4 @@ TABS:
             action: OPEN_URL,
             relatedNode: { __typename: Url, url: 'https://www.facebook.com' },
           },
-        ]
\ No newline at end of file
+        ]
diff --git a/apollos-church-api/package.json b/apollos-church-api/package.json
index 2ba49e35..7cb49ada 100644
--- a/apollos-church-api/package.json
+++ b/apollos-church-api/package.json
@@ -6,32 +6,35 @@
   "scripts": {
     "setup": "./scripts/init.sh",
     "start": "NODE_ENV=production node ./lib/index.js",
-    "start:dev": "linkemon ./src/index.js --exec babel-node --delay 2 -e js,yaml,json,yml",
+    "start:dev":
+      "linkemon ./src/index.js --exec babel-node --delay 2 -e js,yaml,json,yml",
     "postinstall": "yarn build",
-    "build": "NODE_ENV=production rm -rf ./lib && mkdir -p lib && babel ./src -d ./lib",
-    "test": "echo \"No tests in apollos-church-api, all tested code is located in @apollosproject npm modules\"",
+    "build":
+      "NODE_ENV=production rm -rf ./lib && mkdir -p lib && babel ./src -d ./lib",
+    "test":
+      "echo \"No tests in apollos-church-api, all tested code is located in @apollosproject npm modules\"",
     "lint": "eslint ./src --ext .js",
     "translate": "node scripts/translate.js"
   },
   "engines": {
-    "node": ">=14"
+    "node": "12"
   },
   "dependencies": {
-    "@apollosproject/config": "^2.30.0",
-    "@apollosproject/data-connector-algolia-search": "^2.30.0",
-    "@apollosproject/data-connector-analytics": "^2.30.0",
-    "@apollosproject/data-connector-bible": "^2.30.0",
-    "@apollosproject/data-connector-church-online": "^2.30.0",
-    "@apollosproject/data-connector-cloudinary": "^2.30.0",
-    "@apollosproject/data-connector-onesignal": "^2.30.0",
-    "@apollosproject/data-connector-passes": "^2.30.0",
-    "@apollosproject/data-connector-postgres": "^2.30.0",
-    "@apollosproject/data-connector-redis-cache": "^2.30.0",
-    "@apollosproject/data-connector-rock": "^2.30.0",
-    "@apollosproject/data-connector-twilio": "^2.30.0",
-    "@apollosproject/data-schema": "^2.30.0",
-    "@apollosproject/rock-apollo-data-source": "^2.30.0",
-    "@apollosproject/server-core": "^2.30.0",
+    "@apollosproject/config": "^2.22.0",
+    "@apollosproject/data-connector-algolia-search": "^2.22.0",
+    "@apollosproject/data-connector-analytics": "^2.22.0",
+    "@apollosproject/data-connector-bible": "^2.22.0",
+    "@apollosproject/data-connector-church-online": "^2.22.0",
+    "@apollosproject/data-connector-cloudinary": "^2.22.0",
+    "@apollosproject/data-connector-onesignal": "^2.22.0",
+    "@apollosproject/data-connector-passes": "^2.22.0",
+    "@apollosproject/data-connector-postgres": "^2.22.0",
+    "@apollosproject/data-connector-redis-cache": "^2.22.0",
+    "@apollosproject/data-connector-rock": "^2.22.0",
+    "@apollosproject/data-connector-twilio": "^2.22.0",
+    "@apollosproject/data-schema": "^2.22.0",
+    "@apollosproject/rock-apollo-data-source": "^2.22.0",
+    "@apollosproject/server-core": "^2.22.0",
     "apollo-server": "^2.24.1",
     "apollo-server-express": "2.14.2",
     "color": "3.0.0",
@@ -41,9 +44,9 @@
     "randomcolor": "0.5.3"
   },
   "devDependencies": {
-    "@apollosproject/apollo-server-env-mock": "^2.29.3",
-    "@apollosproject/babel-preset-apollos": "^2.29.3",
-    "@apollosproject/eslint-config": "^2.29.3",
+    "@apollosproject/apollo-server-env-mock": "^2.22.0",
+    "@apollosproject/babel-preset-apollos": "^2.22.0",
+    "@apollosproject/eslint-config": "^2.22.0",
     "@babel/cli": "^7.4.5",
     "@babel/core": "^7.4.5",
     "@babel/node": "^7.7.4",
diff --git a/apollos-church-api/src/config.js b/apollos-church-api/src/config.js
index 01b042fa..f73a2aa3 100644
--- a/apollos-church-api/src/config.js
+++ b/apollos-church-api/src/config.js
@@ -1,17 +1,10 @@
-import fs from 'fs';
 import path from 'path';
 import fetch from 'node-fetch';
 import dotenv from "dotenv/config"; // eslint-disable-line
 import ApollosConfig from '@apollosproject/config';
 
 ApollosConfig.loadYaml({
-  configPath: path.join(
-    __dirname,
-    '..',
-    fs.existsSync(path.join(__dirname, '..', 'config.postgres.yml'))
-      ? 'config.postgres.yml'
-      : 'config.yml'
-  ),
+  configPath: path.join(__dirname, '..', 'config.yml'),
 });
 
 // defaults
diff --git a/apollos-church-api/src/data/index.postgres.js b/apollos-church-api/src/data/index.postgres.js
index e8cf1f01..b1138305 100644
--- a/apollos-church-api/src/data/index.postgres.js
+++ b/apollos-church-api/src/data/index.postgres.js
@@ -1,5 +1,3 @@
-import fs from 'fs';
-import path from 'path';
 import { gql } from 'apollo-server';
 
 import {
@@ -19,6 +17,8 @@ import {
   Followings,
   Interactions,
   RockConstants,
+  ContentItem,
+  ContentChannel,
   Sharable,
   Auth,
   PersonalDevice,
@@ -27,14 +27,13 @@ import {
   Campus,
   Group,
   BinaryFiles,
+  Feature,
   FeatureFeed,
+  ActionAlgorithm,
   Event,
   PrayerRequest,
+  Persona,
   Person as RockPerson,
-  ContentItem as RockContentItem,
-  ContentChannel,
-  Feature as RockFeature,
-  ActionAlgorithm as RockActionAlgorithm,
 } from '@apollosproject/data-connector-rock';
 
 import {
@@ -44,55 +43,28 @@ import {
   Follow,
   Notification,
   NotificationPreference,
-  Tag,
   Campus as PostgresCampus,
   Person as PostgresPerson,
   Media as PostgresMedia,
-  Feature as PostgresFeature,
   ContentItem as PostgresContentItem,
-  ContentItemsConnection,
-  ContentItemCategory,
-  ActionAlgorithm as PostgresActionAlgorithm,
 } from '@apollosproject/data-connector-postgres';
 
 import * as Theme from './theme';
 
 // This modules ties together certain updates so they occurs in both Rock and Postgres.
 // Will be eliminated in the future through an enhancement to the Shovel
-import {
-  Person,
-  OneSignal,
-  Followings as FollowingsPostgresBridge,
-} from './rockWithPostgres';
-
-const postgresContentModules = {
-  ActionAlgorithm: PostgresActionAlgorithm,
-  Feature: PostgresFeature,
-  PostgresMedia,
-  Tag,
-  ContentItem: PostgresContentItem,
-  ContentItemsConnection,
-  ContentChannel: ContentItemCategory,
-};
-
-const rockContentModules = {
-  ActionAlgorithm: RockActionAlgorithm,
-  Feature: RockFeature,
-  ContentItem: RockContentItem,
-  ContentChannel,
-};
+import { Person, OneSignal } from './rockWithPostgres';
 
 const data = {
   Interfaces,
   Followings,
-  FollowingsPostgresBridge, // This entry needs to come after Followings.
-  FeatureFeed,
+  ContentChannel,
+  ContentItem,
   RockPerson, // This entry needs to come before (postgres) Person
   BinaryFiles, // This entry needs to come before (postgres) Person
   PostgresPerson, // Postgres person for now, as we extend this dataSource in the 'rockWithPostgres' file
-  ...(fs.existsSync(path.join(__dirname, '../..', 'config.postgres.yml'))
-    ? postgresContentModules
-    : rockContentModules),
+  PostgresMedia,
+  PostgresContentItem,
   Cloudinary,
   Auth,
   AuthSms,
@@ -110,6 +82,9 @@ const data = {
   Template,
   Campus,
   Group,
+  Feature,
+  FeatureFeed,
+  ActionAlgorithm,
   Event,
   Cache,
   PrayerRequest,
@@ -118,6 +93,7 @@ const data = {
   UserFlag,
   Follow,
   PostgresCampus,
+  Persona,
   Notification,
   NotificationPreference,
   OneSignal,
diff --git a/apollos-church-api/src/data/rockWithPostgres.js b/apollos-church-api/src/data/rockWithPostgres.js
index b22f5a30..9abcc996 100644
--- a/apollos-church-api/src/data/rockWithPostgres.js
+++ b/apollos-church-api/src/data/rockWithPostgres.js
@@ -133,92 +133,3 @@ export const OneSignal = {
   ...OneSignalOriginal,
   dataSource: oneSignalDataSource,
 };
-
-const defaultContentItemResolvers = {
-  likedCount: (root, args, { dataSources }) =>
-    console.log(root, root.apollosId, root.originId) ||
-    dataSources.Followings.getFollowingsCountByNodeId({
-      nodeId: root.apollosId,
-      originId: root.originId,
-    }),
-
-  isLiked: async (root, args, { dataSources }) =>
-    dataSources.Followings.getIsLikedForCurrentUserAndNode({
-      nodeId: root.apollosId,
-      originId: root.originId,
-      isLiked: null,
-    }),
-};
-
-const followingsResolvers = {
-  Mutation: {
-    updateLikeEntity: async (
-      root,
-      { input: { nodeId, operation } },
-      { dataSources },
-      resolveInfo
-    ) => {
-      const { originId } = await dataSources.ContentItem.getFromId(
-        nodeId.split(':')[1]
-      );
-      return dataSources.Followings.updateLikeContentItem({
-        nodeId,
-        originId,
-        operation,
-        resolveInfo,
-      });
-    },
-    updateLikeNode: async (
-      root,
-      { input: { nodeId, operation } },
-      { dataSources },
-      resolveInfo
-    ) => {
-      const { originId } = await dataSources.ContentItem.getFromId(
-        nodeId.split(':')[1]
-      );
-      return dataSources.Followings.updateLikeNode({
-        nodeId,
-        originId,
-        operation,
-        resolveInfo,
-      });
-    },
-  },
-  Query: {
-    likedContent: async (root, { after, first }, { dataSources }) => {
-      const followingsPaginated = await dataSources.Followings.paginatedGetFollowingsForCurrentUser(
-        { type: 'ContentItem', after, first }
-      );
-
-      const followings = await followingsPaginated.edges;
-      const ids = followings.map((f) => f.node.entityId);
-      const contentItems = await dataSources.ContentItem.getFromOriginIds(ids);
-      const contentItemEdges = contentItems.map((contentItem) => ({
-        node: contentItem,
-        following: followings.find(
-          (f) => String(f.node.entityId) === contentItem.originId
-        ).node,
-        cursor: followings.find(
-          (f) => String(f.node.entityId) === contentItem.originId
-        ).cursor,
-      }));
-      const sortedContentItemEdges = contentItemEdges.sort(
-        (a, b) =>
-          new Date(a.following.createdDateTime) <
-          new Date(b.following.createdDateTime)
-      );
-
-      return { edges: sortedContentItemEdges };
-    },
-  },
-  UniversalContentItem: defaultContentItemResolvers,
-  DevotionalContentItem: defaultContentItemResolvers,
-  ContentSeriesContentItem: defaultContentItemResolvers,
-  WeekendContentItem: defaultContentItemResolvers,
-  MediaContentItem: defaultContentItemResolvers,
-};
-
-export const Followings = {
-  resolver: followingsResolvers,
-};
diff --git a/apollos-church-api/src/server.js b/apollos-church-api/src/server.js
index d334a052..b200cb5c 100644
--- a/apollos-church-api/src/server.js
+++ b/apollos-church-api/src/server.js
@@ -60,7 +60,6 @@ const apolloServer = new ApolloServer({
       'editor.cursorShape': 'line',
     },
   },
-  uploads: false,
   ...cacheOptions,
 });
 
