diff --git a/apollos-church-api/.env.shared.enc b/apollos-church-api/.env.shared.enc
index 201059a5426c35b02de5bbc6e48adc38fb450262..f5cafd12f57811ab30e1cbeb1f7fc96dc132b871 100644
GIT binary patch
literal 7040
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

literal 7040
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

diff --git a/apollos-church-api/apollos.json b/apollos-church-api/apollos.json
index de9f91e6..76a87be9 100644
--- a/apollos-church-api/apollos.json
+++ b/apollos-church-api/apollos.json
@@ -1,4 +1,4 @@
 {
-  "version": "2.19.0",
+  "version": "2.32.1",
   "environment": "api"
 }
diff --git a/apollos-church-api/config.postgres.yml b/apollos-church-api/config.postgres.yml
new file mode 100644
index 00000000..f8b68c10
--- /dev/null
+++ b/apollos-church-api/config.postgres.yml
@@ -0,0 +1,240 @@
+# This file, in conjuction with your .env file,
+# should be used to configure the apollos server.
+
+# Any values you wish to keep secret should be placed in `.env`
+# You can access those values (and any other values in your environment)
+# using the ${VARIABLE_NAME} syntax
+
+# This file should be checked into version control.
+# `.env` should NOT be checked into version control.
+APP:
+  # This variable is used for generating deep links.
+  # It should match whatver is in your Info.plist `CFBundleURLTypes`
+  DEEP_LINK_HOST: ${DEEP_LINK_HOST}
+  UNIVERSAL_LINK_HOST: ${UNIVERSAL_LINK_HOST}
+  ROOT_API_URL: ${ROOT_URL}
+  JOBS_USERNAME: ${JOBS_USERNAME}
+  JOBS_PASSWORD: ${JOBS_PASSWORD}
+DATABASE:
+  URL: ${DATABASE_URL}
+BUGSNAG:
+  API_KEY: ${BUGSNAG_KEY}
+ROCK:
+  URL: ${ROCK_URL}
+  API_TOKEN: ${ROCK_TOKEN}
+UNIVERSAL_LINKS:
+  APPLE_APP_ID: ${APPLE_APP_ID}
+  APPLE_TEAM_ID: ${APPLE_TEAM_ID}
+  APP_STORE_LINK: ${IOS_REDIRECT}
+  PLAY_STORE_LINK: ${ANDROID_REDIRECT}
+  GOOGLE_APP_ID: ${GOOGLE_APP_ID}
+  GOOGLE_KEYSTORE_SHA256: ${GOOGLE_KEYSTORE_SHA256}
+ONE_SIGNAL:
+  APP_ID: ${ONE_SIGNAL_APP_ID}
+  REST_KEY: ${ONE_SIGNAL_REST_KEY}
+CHURCH_ONLINE:
+  URL: ${CHURCH_ONLINE_URL}
+  WEB_VIEW_URL: https://apollos.online.church/
+ALGOLIA:
+  APPLICATION_ID: ${ALGOLIASEARCH_APPLICATION_ID}
+  API_KEY: ${ALGOLIASEARCH_API_KEY}
+TWILIO:
+  ACCOUNT_SID: ${TWILIO_ACCOUNT_SID}
+  AUTH_TOKEN: ${TWILIO_AUTH_TOKEN}
+  FROM_NUMBER: ${TWILIO_FROM_NUMBER}
+PASS:
+  TEMPLATES:
+    CHECKIN: ${PWD}/wallet-passes/checkin.pass
+  CERTIFICATES:
+    WWDR: ${PASS_WWDR_CERT}
+    SIGNER_CERT: ${PASS_SIGNER_CERT}
+    SIGNER_KEY: ${PASS_SIGNER_KEY}
+    SIGNER_KEY_PASSPHRASE: ${PASS_SIGNER_PASSPHRASE}
+BIBLE_API:
+  KEY: ${BIBLE_API_KEY}
+  BIBLE_ID:
+    WEB: '9879dbb7cfe39e4d-01'
+    KJV: 'de4e12af7f28f599-02'
+CLOUDINARY:
+  URL: ${CLOUDINARY_URL}
+
+CONTENT:
+  SERMON_CHANNEL_ID: cbc0994a-97f1-471a-a7d5-4eff59d8a389
+  TYPES:
+    - ContentSeriesContentItem
+    - DevotionalContentItem
+    - MediaContentItem
+    - UniversalContentItem
+    - WeekendContentItem
+    - ContentItem
+
+
+TABS:
+  HOME:
+    - type: ActionBar
+      title: Welcome to Apollos
+      actions:
+        [
+          {
+            title: Check In,
+            icon: check,
+            action: OPEN_URL,
+            relatedNode: { __typename: Url, url: 'https://www.google.com' },
+          },
+        ]
+    - algorithms:
+      - type: CONTENT_FEED
+        arguments:
+          channelIds:
+            - c7f43eb9-2200-4267-ab28-871e0d5e785f
+            - 3dfe7149-136b-4134-bd91-fdd935ef2221
+      type: HeroList
+      primaryAction:
+        # Right now, you hardcode exactly what GraphQL should return.
+        # Long term, we hope to have a more sophisticated mechanism for driving this field
+        action: OPEN_NODE
+        title: 'Read More'
+        relatedNode:
+          __typename: UniversalContentItem
+          id: a2c42d1d-98c8-46fb-aeea-603bc569cf7d
+    - algorithms: [DAILY_PRAYER]
+      isCard: false
+      type: PrayerList
+      title: Daily Prayer
+    - algorithms:
+        - type: CAMPAIGN_ITEMS
+          channelIds:
+            - 4b23ebc9-248e-4092-99f9-8829e1b6f1cc
+      type: HeroList
+      isFeatured: true
+      subtitle: Featured
+    - title: FOR YOU
+      algorithms: [SERMON_CHILDREN, PERSONA_FEED]
+      subtitle: Explore what God calls you to today
+      type: ActionList
+    - algorithms: [SERIES_IN_PROGRESS]
+      subtitle: Continue
+      type: HorizontalCardList
+    - title: RECOMMENDED
+      algorithms: [SERMON_CHILDREN]
+      subtitle: For Him
+      type: VerticalCardList
+    - title: BULLETIN
+      subtitle: What's happening at apollos?
+      type: ActionList
+      algorithms:
+        - type: CONTENT_FEED
+          arguments:
+            channelIds:
+              - 13
+        - type: UPCOMING_EVENTS
+
+  READ:
+    - algorithms:
+        - type: CONTENT_FEED
+          arguments:
+            channelIds:
+              - c7f43eb9-2200-4267-ab28-871e0d5e785f
+            limit: 3
+      type: HorizontalCardList
+      subtitle: Podcast Messages
+      primaryAction:
+        action: OPEN_CHANNEL
+        title: 'Read More'
+        relatedNode:
+          __typename: ContentChannel
+          apollosId: ContentChannel:f4a5890c-4af5-4d9f-afe3-5d1c6aa85419
+          title: Podcast Messages
+    - algorithms:
+        - type: CONTENT_FEED
+          arguments:
+            channelIds:
+              - d9da719f-84ef-4cf0-9875-22fea4bf09eb
+            limit: 3
+      type: HorizontalCardList
+      subtitle: Devotionals
+      primaryAction:
+        action: OPEN_CHANNEL
+        title: 'Read More'
+        relatedNode:
+          __typename: ContentChannel
+          apollosId: ContentChannel:d9da719f-84ef-4cf0-9875-22fea4bf09eb
+          title: Devotionals
+
+  WATCH:
+    - algorithms:
+        - type: LATEST_SERIES_CHILDREN
+          arguments:
+            channelId: 8f0a93f5-ccec-4cc1-8fd8-06afe5982f7b
+      type: HeroList
+      title: Catch up
+      subtitle: Latest Series
+    - algorithms:
+        - type: CONTENT_FEED
+          arguments:
+            channelIds:
+              - f4a5890c-4af5-4d9f-afe3-5d1c6aa85419
+      type: VerticalCardList
+      subtitle: All series
+    - algorithms:
+        - type: CONTENT_FEED
+          arguments:
+            channelIds:
+              - 8f0a93f5-ccec-4cc1-8fd8-06afe5982f7b
+            limit: 3
+      type: HorizontalCardList
+      subtitle: Sermons
+    - algorithms:
+        - type: CONTENT_FEED
+          arguments:
+            channelIds:
+              - f4a5890c-4af5-4d9f-afe3-5d1c6aa85419
+            limit: 3
+      type: HorizontalCardList
+      subtitle: Podcasts
+      primaryAction:
+        action: OPEN_CHANNEL
+        title: 'Read More'
+        relatedNode:
+          __typename: ContentChannel
+          apollosId: ContentChannel:f4a5890c-4af5-4d9f-afe3-5d1c6aa85419
+          title: Podcasts
+    - algorithms:
+        - type: CONTENT_FEED
+          arguments:
+            channelIds:
+              - f4a5890c-4af5-4d9f-afe3-5d1c6aa85419
+            limit: 3
+      type: HorizontalCardList
+      title: Videos
+      primaryAction:
+        action: OPEN_CHANNEL
+        title: 'Read More'
+        relatedNode:
+          __typename: ContentChannel
+          apollosId: ContentChannel:f4a5890c-4af5-4d9f-afe3-5d1c6aa85419
+          title: Videos
+
+  PRAY:
+    - algorithms: [DAILY_PRAYER]
+      isCard: false
+      type: PrayerList
+      title: Daily Prayer
+    - type: VerticalPrayerList
+      title: Your Prayers
+  CONNECT:
+    - type: ActionTable
+      title: Connect to Apollos
+      actions:
+        [
+          {
+            title: Google,
+            action: OPEN_URL,
+            relatedNode: { __typename: Url, url: 'https://www.google.com' },
+          },
+          {
+            title: Facebook,
+            action: OPEN_URL,
+            relatedNode: { __typename: Url, url: 'https://www.facebook.com' },
+          },
+        ]
diff --git a/apollos-church-api/config.yml b/apollos-church-api/config.yml
index be7c7293..5ac0d92a 100644
--- a/apollos-church-api/config.yml
+++ b/apollos-church-api/config.yml
@@ -251,4 +251,4 @@ TABS:
             action: OPEN_URL,
             relatedNode: { __typename: Url, url: 'https://www.facebook.com' },
           },
-        ]
+        ]
\ No newline at end of file
diff --git a/apollos-church-api/package.json b/apollos-church-api/package.json
index 54be22c8..a95d366e 100644
--- a/apollos-church-api/package.json
+++ b/apollos-church-api/package.json
@@ -5,35 +5,34 @@
   "main": "lib/index.js",
   "scripts": {
     "setup": "./scripts/init.sh",
+    "migrator": "node ./lib/migrator.js",
     "start": "NODE_ENV=production node ./lib/index.js",
     "start:dev": "linkemon ./src/index.js --exec babel-node --delay 2 -e js,yaml,json,yml",
     "postinstall": "yarn build",
-    "link-packages": "node ./scripts/link-packages && yarn yalc update",
-    "unlink-packages": "node ./scripts/link-packages remove && rm -rf ./node_modules",
     "build": "NODE_ENV=production rm -rf ./lib && mkdir -p lib && babel ./src -d ./lib",
     "test": "echo \"No tests in apollos-church-api, all tested code is located in @apollosproject npm modules\"",
     "lint": "eslint ./src --ext .js",
     "translate": "node scripts/translate.js"
   },
   "engines": {
-    "node": ">=12.x.x"
+    "node": ">=14"
   },
   "dependencies": {
-    "@apollosproject/config": "^2.19.0",
-    "@apollosproject/data-connector-algolia-search": "^2.19.0",
-    "@apollosproject/data-connector-analytics": "^2.19.0",
-    "@apollosproject/data-connector-bible": "^2.19.0",
-    "@apollosproject/data-connector-church-online": "^2.19.0",
-    "@apollosproject/data-connector-cloudinary": "^2.19.0",
-    "@apollosproject/data-connector-onesignal": "^2.19.0",
-    "@apollosproject/data-connector-passes": "^2.19.0",
-    "@apollosproject/data-connector-postgres": "^2.19.0",
-    "@apollosproject/data-connector-redis-cache": "^2.19.0",
-    "@apollosproject/data-connector-rock": "^2.19.0",
-    "@apollosproject/data-connector-twilio": "^2.19.0",
-    "@apollosproject/data-schema": "^2.19.0",
-    "@apollosproject/rock-apollo-data-source": "^2.19.0",
-    "@apollosproject/server-core": "^2.19.0",
+    "@apollosproject/config": "^2.32.1",
+    "@apollosproject/data-connector-algolia-search": "^2.32.1",
+    "@apollosproject/data-connector-analytics": "^2.32.1",
+    "@apollosproject/data-connector-bible": "^2.32.1",
+    "@apollosproject/data-connector-church-online": "^2.32.1",
+    "@apollosproject/data-connector-cloudinary": "^2.32.1",
+    "@apollosproject/data-connector-onesignal": "^2.32.1",
+    "@apollosproject/data-connector-passes": "^2.32.1",
+    "@apollosproject/data-connector-postgres": "^2.32.1",
+    "@apollosproject/data-connector-redis-cache": "^2.32.1",
+    "@apollosproject/data-connector-rock": "^2.32.1",
+    "@apollosproject/data-connector-twilio": "^2.32.1",
+    "@apollosproject/data-schema": "^2.32.1",
+    "@apollosproject/rock-apollo-data-source": "^2.32.1",
+    "@apollosproject/server-core": "^2.32.1",
     "apollo-server": "^2.24.1",
     "apollo-server-express": "2.14.2",
     "color": "3.0.0",
@@ -43,9 +42,9 @@
     "randomcolor": "0.5.3"
   },
   "devDependencies": {
-    "@apollosproject/apollo-server-env-mock": "^2.19.0",
-    "@apollosproject/babel-preset-apollos": "^2.19.0",
-    "@apollosproject/eslint-config": "^2.19.0",
+    "@apollosproject/apollo-server-env-mock": "^2.32.1",
+    "@apollosproject/babel-preset-apollos": "^2.32.1",
+    "@apollosproject/eslint-config": "^2.32.1",
     "@babel/cli": "^7.4.5",
     "@babel/core": "^7.4.5",
     "@babel/node": "^7.7.4",
@@ -60,7 +59,6 @@
     "eslint-plugin-prettier": "^2.6.0",
     "linkemon": "^0.1.1",
     "nodemon": "1.18.7",
-    "prettier": "1.12.1",
-    "yalc": "^1.0.0-pre.47"
+    "prettier": "1.12.1"
   }
 }
diff --git a/apollos-church-api/scripts/link-packages.js b/apollos-church-api/scripts/link-packages.js
deleted file mode 100644
index 7778c0a4..00000000
--- a/apollos-church-api/scripts/link-packages.js
+++ /dev/null
@@ -1,16 +0,0 @@
-const fs = require('fs');
-const { execSync } = require('child_process');
-
-const direction = process.argv[2] || 'link';
-
-const packageJson = JSON.parse(fs.readFileSync(`${__dirname}/../package.json`));
-
-const dependencies = [
-  ...Object.keys(packageJson.dependencies),
-  ...Object.keys(packageJson.devDependencies),
-].filter((d) => d.includes('@apollosproject'));
-
-dependencies.forEach((dep) => {
-  const output = execSync(`yalc ${direction} ${dep}`, { encoding: 'utf8' });
-  console.log(output);
-});
diff --git a/apollos-church-api/src/config.js b/apollos-church-api/src/config.js
index f73a2aa3..53b6558c 100644
--- a/apollos-church-api/src/config.js
+++ b/apollos-church-api/src/config.js
@@ -4,7 +4,13 @@ import dotenv from "dotenv/config"; // eslint-disable-line
 import ApollosConfig from '@apollosproject/config';
 
 ApollosConfig.loadYaml({
-  configPath: path.join(__dirname, '..', 'config.yml'),
+  configPath: path.join(
+    __dirname,
+    '..',
+    process.env.DATABASE_CONTENT === 'true'
+      ? 'config.postgres.yml'
+      : 'config.yml'
+  ),
 });
 
 // defaults
diff --git a/apollos-church-api/src/data/index.postgres.js b/apollos-church-api/src/data/index.postgres.js
index 9dcb0245..bc2d77b0 100644
--- a/apollos-church-api/src/data/index.postgres.js
+++ b/apollos-church-api/src/data/index.postgres.js
@@ -15,25 +15,24 @@ import * as Cache from '@apollosproject/data-connector-redis-cache';
 import * as Sms from '@apollosproject/data-connector-twilio';
 import {
   Followings,
-  Interactions,
+  Interactions as RockInteractions,
   RockConstants,
-  ContentItem,
-  ContentChannel,
   Sharable,
   Auth,
   PersonalDevice,
   Template,
   AuthSms,
-  Campus,
   Group,
   BinaryFiles,
-  Feature,
   FeatureFeed,
-  ActionAlgorithm,
   Event,
   PrayerRequest,
-  Persona,
   Person as RockPerson,
+  ContentItem as RockContentItem,
+  Campus as RockCampus,
+  ContentChannel,
+  Feature as RockFeature,
+  ActionAlgorithm as RockActionAlgorithm,
 } from '@apollosproject/data-connector-rock';
 
 import {
@@ -41,26 +40,73 @@ import {
   UserFlag,
   UserLike,
   Follow,
+  Interactions,
+  Likes,
   Notification,
   NotificationPreference,
-  Campus as PostgresCampus,
+  Tag,
+  Campus,
   Person as PostgresPerson,
+  Media as PostgresMedia,
+  Feature as PostgresFeature,
+  ContentItem as PostgresContentItem,
+  ContentItemsConnection,
+  ContentItemCategory,
+  ActionAlgorithm as PostgresActionAlgorithm,
+  PrayerRequest as PostgresPrayerRequest,
 } from '@apollosproject/data-connector-postgres';
 
 import * as Theme from './theme';
 
 // This modules ties together certain updates so they occurs in both Rock and Postgres.
 // Will be eliminated in the future through an enhancement to the Shovel
-import { Person, OneSignal } from './rockWithPostgres';
+import {
+  Person,
+  OneSignal,
+  Followings as FollowingsPostgresBridge,
+  PostgresDefaultCampusOverride,
+  RockDefaultCampusOverride,
+} from './rockWithPostgres';
 
-const data = {
-  Interfaces,
+const postgresContentModules = {
+  Interactions,
+  Likes,
+  ActionAlgorithm: PostgresActionAlgorithm,
+  Feature: PostgresFeature,
+  PostgresMedia,
+  Tag,
+  ContentItem: PostgresContentItem,
+  ContentItemsConnection,
+  ContentChannel: ContentItemCategory,
+  PrayerRequest: PostgresPrayerRequest,
+  RockCampus: { dataSource: RockCampus.dataSource },
+  Campus,
+  PostgresDefaultCampusOverride,
+};
+
+const rockContentModules = {
+  Interactions: RockInteractions,
   Followings,
+  FollowingsPostgresBridge, // This entry needs to come after Followings.
+  ActionAlgorithm: RockActionAlgorithm,
+  Feature: RockFeature,
+  ContentItem: RockContentItem,
   ContentChannel,
-  ContentItem,
+  PrayerRequest,
+  PostgresCampus: { dataSource: Campus.dataSource },
+  Campus: RockCampus,
+  RockDefaultCampusOverride,
+};
+
+const data = {
+  Interfaces,
+  FeatureFeed,
   RockPerson, // This entry needs to come before (postgres) Person
   BinaryFiles, // This entry needs to come before (postgres) Person
   PostgresPerson, // Postgres person for now, as we extend this dataSource in the 'rockWithPostgres' file
+  ...(process.env.DATABASE_CONTENT
+    ? postgresContentModules
+    : rockContentModules),
   Cloudinary,
   Auth,
   AuthSms,
@@ -68,7 +114,6 @@ const data = {
   LiveStream,
   Theme,
   Scripture,
-  Interactions,
   RockConstants,
   Sharable,
   Analytics,
@@ -76,24 +121,17 @@ const data = {
   Pass,
   Search,
   Template,
-  Campus,
   Group,
-  Feature,
-  FeatureFeed,
-  ActionAlgorithm,
   Event,
   Cache,
-  PrayerRequest,
   Comment,
   UserLike,
   UserFlag,
   Follow,
-  PostgresCampus,
-  Persona,
   Notification,
   NotificationPreference,
-  Person, // An extension of Postgres person. Will be eliminated in the near future so you can use just postgres/Person.
   OneSignal,
+  Person, // An extension of Postgres person. Will be eliminated in the near future so you can use just postgres/Person.
 };
 
 const {
diff --git a/apollos-church-api/src/data/rockWithPostgres.js b/apollos-church-api/src/data/rockWithPostgres.js
index 9abcc996..e63faaf7 100644
--- a/apollos-church-api/src/data/rockWithPostgres.js
+++ b/apollos-church-api/src/data/rockWithPostgres.js
@@ -42,21 +42,6 @@ const personResolver = {
       ]); // updates in Postgres. Reuses already uploaded imageUrl
       // return dataSources.Person.uploadProfileImage(file, size); // updates in Postgres. Performs the upload again.
     },
-    updateUserCampus: async (root, { campusId }, { dataSources }) => {
-      await dataSources.Campus.updateCurrentUserCampus({ campusId }); // updates in Rock
-
-      const { id: rockCampusId } = parseGlobalId(campusId);
-      const campus = await dataSources.PostgresCampus.getFromId(
-        rockCampusId,
-        null,
-        {
-          originType: 'rock',
-        }
-      ); // finds the postgres campus id
-      return dataSources.Person.updateProfile([
-        { field: 'campusId', value: campus.id },
-      ]); // updates in Postgres
-    },
     updateUserPushSettings: async (root, { input }, { dataSources }) => {
       // register the changes w/ postgres
       await dataSources.NotificationPreference.updateUserNotificationPreference(
@@ -133,3 +118,130 @@ export const OneSignal = {
   ...OneSignalOriginal,
   dataSource: oneSignalDataSource,
 };
+
+const defaultContentItemResolvers = {
+  likedCount: (root, args, { dataSources }) =>
+    console.log(root, root.apollosId, root.originId) ||
+    dataSources.Followings.getFollowingsCountByNodeId({
+      nodeId: root.apollosId,
+      originId: root.originId,
+    }),
+
+  isLiked: async (root, args, { dataSources }) =>
+    dataSources.Followings.getIsLikedForCurrentUserAndNode({
+      nodeId: root.apollosId,
+      originId: root.originId,
+      isLiked: null,
+    }),
+};
+
+const followingsResolvers = {
+  Mutation: {
+    updateLikeEntity: async (
+      root,
+      { input: { nodeId, operation } },
+      { dataSources },
+      resolveInfo
+    ) => {
+      const { originId } = await dataSources.ContentItem.getFromId(
+        nodeId.split(':')[1]
+      );
+      return dataSources.Followings.updateLikeContentItem({
+        nodeId,
+        originId,
+        operation,
+        resolveInfo,
+      });
+    },
+    updateLikeNode: async (
+      root,
+      { input: { nodeId, operation } },
+      { dataSources },
+      resolveInfo
+    ) => {
+      const { originId } = await dataSources.ContentItem.getFromId(
+        nodeId.split(':')[1]
+      );
+      return dataSources.Followings.updateLikeNode({
+        nodeId,
+        originId,
+        operation,
+        resolveInfo,
+      });
+    },
+  },
+  Query: {
+    likedContent: async (root, { after, first }, { dataSources }) => {
+      const followingsPaginated = await dataSources.Followings.paginatedGetFollowingsForCurrentUser(
+        { type: 'ContentItem', after, first }
+      );
+
+      const followings = await followingsPaginated.edges;
+      const ids = followings.map((f) => f.node.entityId);
+      const contentItems = await dataSources.ContentItem.getFromOriginIds(ids);
+      const contentItemEdges = contentItems.map((contentItem) => ({
+        node: contentItem,
+        following: followings.find(
+          (f) => String(f.node.entityId) === contentItem.originId
+        ).node,
+        cursor: followings.find(
+          (f) => String(f.node.entityId) === contentItem.originId
+        ).cursor,
+      }));
+      const sortedContentItemEdges = contentItemEdges.sort(
+        (a, b) =>
+          new Date(a.following.createdDateTime) <
+          new Date(b.following.createdDateTime)
+      );
+
+      return { edges: sortedContentItemEdges };
+    },
+  },
+  UniversalContentItem: defaultContentItemResolvers,
+  DevotionalContentItem: defaultContentItemResolvers,
+  ContentSeriesContentItem: defaultContentItemResolvers,
+  WeekendContentItem: defaultContentItemResolvers,
+  MediaContentItem: defaultContentItemResolvers,
+};
+
+export const Followings = {
+  resolver: followingsResolvers,
+};
+
+// Used when IDs coming from the API are Rock APIS.
+export const RockDefaultCampusOverride = {
+  resolver: {
+    Mutation: {
+      updateUserCampus: async (root, { campusId }, { dataSources }) => {
+        await dataSources.Campus.updateCurrentUserCampus({ campusId }); // updates in Rock
+
+        const { id: rockCampusId } = parseGlobalId(campusId);
+        const campus = await dataSources.PostgresCampus.getFromId(
+          rockCampusId,
+          null,
+          {
+            originType: 'rock',
+          }
+        ); // finds the postgres campus id
+        return dataSources.Person.updateProfile([
+          { field: 'campusId', value: campus.id },
+        ]); // updates in Postgres
+      },
+    },
+  },
+};
+
+// Used when IDs coming from the API are Postgres APIS.
+export const PostgresDefaultCampusOverride = {
+  resolver: {
+    Mutation: {
+      updateUserCampus: async (root, { campusId }, { dataSources }) => {
+        const campus = await dataSources.Campus.getFromId(campusId); // finds the postgres campus id
+        await dataSources.Person.updateProfile([
+          { field: 'campusId', value: campus.originId },
+        ]); // updates in Rock
+        return dataSources.Campus.updateCurrentUserCampus({ campusId }); // updates in Rock
+      },
+    },
+  },
+};
diff --git a/apollos-church-api/src/migrator.js b/apollos-church-api/src/migrator.js
new file mode 100644
index 00000000..72366cf8
--- /dev/null
+++ b/apollos-church-api/src/migrator.js
@@ -0,0 +1,31 @@
+import dotenv from 'dotenv/config'; // eslint-disable-line
+import '@apollosproject/data-connector-postgres/lib/postgres/pgEnum-fix';
+import config from './config'; // eslint-disable-line
+
+import ApollosConfig from '@apollosproject/config';
+import { createMigrationRunner } from '@apollosproject/data-connector-postgres';
+
+let dataObj;
+
+if (ApollosConfig?.DATABASE?.URL) {
+  dataObj = require('./data/index.postgres');
+} else {
+  dataObj = require('./data/index');
+}
+
+const { migrations } = dataObj;
+
+// make sure this is called last.
+// (or at least after the apollos server setup)
+(async () => {
+  if (ApollosConfig?.DATABASE?.URL) {
+    try {
+      const migrationRunner = await createMigrationRunner({ migrations });
+      migrationRunner.runAsCLI();
+    } catch (e) {
+      console.log(e);
+    }
+  } else {
+    console.warn('Please specify a database URL to perform migrations');
+  }
+})();
diff --git a/apollos-church-api/src/server.js b/apollos-church-api/src/server.js
index b200cb5c..ae3b1cf4 100644
--- a/apollos-church-api/src/server.js
+++ b/apollos-church-api/src/server.js
@@ -60,6 +60,7 @@ const apolloServer = new ApolloServer({
       'editor.cursorShape': 'line',
     },
   },
+  uploads: false,
   ...cacheOptions,
 });
 
@@ -83,7 +84,23 @@ apolloServer.applyMiddleware({ app, path: '/' });
 (async () => {
   if (ApollosConfig?.DATABASE?.URL) {
     const migrationRunner = await createMigrationRunner({ migrations });
-    await migrationRunner.up();
+    const pending = await migrationRunner.pending();
+    if (pending.length) {
+      console.log('\x1b[31m', '██████████████████████████████████', '\x1b[0m');
+      console.log(
+        '\x1b[36m',
+        'You currently have a number of pending migrations',
+        '\x1b[0m'
+      );
+      console.log(pending);
+      console.log(
+        `Keep in mind, you are currently connected to ${
+          migrationRunner?.options?.context?.sequelize?.options?.host
+        }`
+      );
+      console.log('\x1b[31m', '██████████████████████████████████', '\x1b[0m');
+    }
+    if (ApollosConfig.AUTO_MIGRATE) await migrationRunner.up();
   }
 })();
 
