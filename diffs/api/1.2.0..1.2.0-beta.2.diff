diff --git a/apollos-church-api/apollos.json b/apollos-church-api/apollos.json
index b4ff90c..6302f78 100644
--- a/apollos-church-api/apollos.json
+++ b/apollos-church-api/apollos.json
@@ -1,4 +1,4 @@
 {
-    "version": "1.2.0",
+    "version": "1.2.0-beta.2",
     "environment": "api"
 }
\ No newline at end of file
diff --git a/apollos-church-api/config.yml b/apollos-church-api/config.yml
index ca6ea75..38a692d 100644
--- a/apollos-church-api/config.yml
+++ b/apollos-church-api/config.yml
@@ -20,7 +20,6 @@ ROCK:
   # This should match the timezone of the Rock server
   TIMEZONE: 'America/New_York'
   USE_PLUGIN: true
-  SHOW_INACTIVE_CONTENT: ${ROCK_SHOW_INACTIVE_CONTENT}
 ONE_SIGNAL:
   APP_ID: b6e75a77-003f-4466-95ca-82cc5cdc407b
   REST_KEY: ${ONE_SIGNAL_REST_KEY}
@@ -52,9 +51,7 @@ ANALYTICS:
   GA_ID:
 BIBLE_API:
   KEY: ${BIBLE_API_KEY}
-  BIBLE_ID:
-    WEB: '9879dbb7cfe39e4d-01'
-    KJV: 'de4e12af7f28f599-02'
+  BIBLE_ID: '9879dbb7cfe39e4d-01'
 CLOUDINARY:
   # Cloudinary is used to improve image loading
   # value should look something like
diff --git a/apollos-church-api/local.graphql b/apollos-church-api/local.graphql
index a394485..2d2b05c 100644
--- a/apollos-church-api/local.graphql
+++ b/apollos-church-api/local.graphql
@@ -70,8 +70,7 @@ type AudioMediaSource implements MediaSource {
 type AuthenticatedUser {
   id: ID!
   profile: Person
-  rock: RockPersonDetails
-  rockToken: String @deprecated(reason: "Use rock.authCookie instead")
+  rockToken: String
 }
 
 type Authentication {
@@ -118,7 +117,7 @@ type ContentChannel implements Node {
 
 interface ContentItem {
   id: ID!
-  title(hyphenated: Boolean): String
+  title: String
   coverImage: ImageMedia
   images: [ImageMedia]
   videos: [VideoMedia]
@@ -151,7 +150,7 @@ input ContentItemsConnectionInput {
 
 type ContentSeriesContentItem implements ContentItem & Node {
   id: ID!
-  title(hyphenated: Boolean): String
+  title: String
   coverImage: ImageMedia
   images: [ImageMedia]
   videos: [VideoMedia]
@@ -171,7 +170,7 @@ type ContentSeriesContentItem implements ContentItem & Node {
 
 type DevotionalContentItem implements ContentItem & Node {
   id: ID!
-  title(hyphenated: Boolean): String
+  title: String
   coverImage: ImageMedia
   images: [ImageMedia]
   videos: [VideoMedia]
@@ -191,7 +190,6 @@ type DevotionalContentItem implements ContentItem & Node {
 type Event implements Node {
   id: ID!
   name: String
-  description: String
   location: String
   start: String
   end: String
@@ -258,7 +256,7 @@ interface Media {
 
 type MediaContentItem implements ContentItem & Node {
   id: ID!
-  title(hyphenated: Boolean): String
+  title: String
   coverImage: ImageMedia
   images: [ImageMedia]
   videos: [VideoMedia]
@@ -373,25 +371,19 @@ type Query {
   personaFeed(first: Int, after: String): ContentItemsConnection
   currentUser: AuthenticatedUser
   liveStream: LiveStream
-  scripture(query: String!, version: VERSION): Scripture
-  scriptures(query: String!, version: VERSION): [Scripture]
+  scripture(query: String!): Scripture
+  scriptures(query: String!): [Scripture]
   userPass: Pass
   search(query: String!, first: Int, after: String): SearchResultsConnection
   campuses(location: CampusLocationInput): [Campus]
   userFeedFeatures: [Feature]
 }
 
-type RockPersonDetails {
-  authToken: String
-  authCookie: String
-}
-
 type Scripture implements Node {
   id: ID!
   html: String
   reference: String
   copyright: String
-  version: String
 }
 
 type ScriptureFeature implements Feature & Node {
@@ -463,7 +455,7 @@ enum ThemeType {
 
 type UniversalContentItem implements ContentItem & Node {
   id: ID!
-  title(hyphenated: Boolean): String
+  title: String
   coverImage: ImageMedia
   images: [ImageMedia]
   videos: [VideoMedia]
@@ -496,11 +488,6 @@ input UpdateProfileInput {
 """The `Upload` scalar type represents a file upload."""
 scalar Upload
 
-enum VERSION {
-  WEB
-  KJV
-}
-
 type VideoMedia implements Media {
   name: String
   key: String
@@ -514,7 +501,7 @@ type VideoMediaSource implements MediaSource {
 
 type WeekendContentItem implements ContentItem & Node {
   id: ID!
-  title(hyphenated: Boolean): String
+  title: String
   coverImage: ImageMedia
   images: [ImageMedia]
   videos: [VideoMedia]
diff --git a/apollos-church-api/package.json b/apollos-church-api/package.json
index d2cf73d..244a590 100644
--- a/apollos-church-api/package.json
+++ b/apollos-church-api/package.json
@@ -1,6 +1,6 @@
 {
   "name": "apollos-church-api",
-  "version": "1.2.0",
+  "version": "1.2.0-beta.2",
   "private": true,
   "main": "lib/index.js",
   "scripts": {
@@ -34,20 +34,18 @@
     ]
   },
   "dependencies": {
-    "@apollosproject/config": "^1.2.0",
-    "@apollosproject/data-connector-algolia-search": "^1.2.0",
-    "@apollosproject/data-connector-analytics": "^1.2.0",
-    "@apollosproject/data-connector-bible": "^1.2.0",
-    "@apollosproject/data-connector-church-online": "^1.2.0",
-    "@apollosproject/data-connector-cloudinary": "^1.2.0",
-    "@apollosproject/data-connector-onesignal": "^1.2.0",
-    "@apollosproject/data-connector-passes": "^1.2.0",
-    "@apollosproject/data-connector-redis-cache": "^1.2.0",
-    "@apollosproject/data-connector-rock": "^1.2.0",
-    "@apollosproject/data-connector-twilio": "^1.2.0",
-    "@apollosproject/data-schema": "^1.2.0",
-    "@apollosproject/rock-apollo-data-source": "^1.2.0",
-    "@apollosproject/server-core": "^1.2.0",
+    "@apollosproject/config": "^1.2.0-beta.2",
+    "@apollosproject/data-connector-algolia-search": "^1.2.0-beta.2",
+    "@apollosproject/data-connector-analytics": "^1.2.0-beta.2",
+    "@apollosproject/data-connector-bible": "^1.2.0-beta.2",
+    "@apollosproject/data-connector-church-online": "^1.2.0-beta.2",
+    "@apollosproject/data-connector-cloudinary": "^1.2.0-beta.2",
+    "@apollosproject/data-connector-onesignal": "^1.2.0-beta.2",
+    "@apollosproject/data-connector-passes": "^1.2.0-beta.2",
+    "@apollosproject/data-connector-rock": "^1.2.0-beta.2",
+    "@apollosproject/data-connector-twilio": "^1.2.0-beta.2",
+    "@apollosproject/rock-apollo-data-source": "^1.2.0-beta.2",
+    "@apollosproject/server-core": "^1.2.0-beta.2",
     "apollo-server": "^2.0.5",
     "apollo-server-express": "2.4.8",
     "color": "3.0.0",
@@ -58,8 +56,8 @@
     "randomcolor": "0.5.3"
   },
   "devDependencies": {
-    "@apollosproject/apollo-server-env-mock": "^1.2.0",
-    "@apollosproject/babel-preset-apollos": "^1.2.0",
+    "@apollosproject/apollo-server-env-mock": "^1.2.0-beta.2",
+    "@apollosproject/babel-preset-apollos": "^1.2.0-beta.2",
     "@babel/cli": "^7.4.5",
     "@babel/core": "^7.4.5",
     "@entria/graphql-findbreakingchanges": "^1.0.1",
diff --git a/apollos-church-api/src/data/index.js b/apollos-church-api/src/data/index.js
index 50d8d41..a22d28c 100644
--- a/apollos-church-api/src/data/index.js
+++ b/apollos-church-api/src/data/index.js
@@ -9,7 +9,6 @@ import * as Cloudinary from '@apollosproject/data-connector-cloudinary';
 import * as OneSignal from '@apollosproject/data-connector-onesignal';
 import * as Search from '@apollosproject/data-connector-algolia-search';
 import * as Pass from '@apollosproject/data-connector-passes';
-import * as Cache from '@apollosproject/data-connector-redis-cache';
 import * as Sms from '@apollosproject/data-connector-twilio';
 import {
   Followings,
@@ -62,7 +61,6 @@ const data = {
   BinaryFiles,
   Features,
   Event,
-  Cache,
 };
 
 const {
