diff --git a/apollos-church-api/.env.shared.enc b/apollos-church-api/.env.shared.enc
index f5cafd12f57811ab30e1cbeb1f7fc96dc132b871..a53c0b2ac539ebb24bd08ccd25b71d818a314b21 100644
GIT binary patch
literal 6880
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
ac#}^zHvUGgJ-mK5&odOISQ4zf@QxMU-c<qs

literal 7040
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

diff --git a/apollos-church-api/apollos.json b/apollos-church-api/apollos.json
index 39a3ce9a..ac8cbc08 100644
--- a/apollos-church-api/apollos.json
+++ b/apollos-church-api/apollos.json
@@ -1,4 +1,4 @@
 {
-  "version": "2.29.0",
+  "version": "2.18.1",
   "environment": "api"
 }
diff --git a/apollos-church-api/config.postgres.yml b/apollos-church-api/config.postgres.yml
deleted file mode 100644
index f8b68c10..00000000
--- a/apollos-church-api/config.postgres.yml
+++ /dev/null
@@ -1,240 +0,0 @@
-# This file, in conjuction with your .env file,
-# should be used to configure the apollos server.
-
-# Any values you wish to keep secret should be placed in `.env`
-# You can access those values (and any other values in your environment)
-# using the ${VARIABLE_NAME} syntax
-
-# This file should be checked into version control.
-# `.env` should NOT be checked into version control.
-APP:
-  # This variable is used for generating deep links.
-  # It should match whatver is in your Info.plist `CFBundleURLTypes`
-  DEEP_LINK_HOST: ${DEEP_LINK_HOST}
-  UNIVERSAL_LINK_HOST: ${UNIVERSAL_LINK_HOST}
-  ROOT_API_URL: ${ROOT_URL}
-  JOBS_USERNAME: ${JOBS_USERNAME}
-  JOBS_PASSWORD: ${JOBS_PASSWORD}
-DATABASE:
-  URL: ${DATABASE_URL}
-BUGSNAG:
-  API_KEY: ${BUGSNAG_KEY}
-ROCK:
-  URL: ${ROCK_URL}
-  API_TOKEN: ${ROCK_TOKEN}
-UNIVERSAL_LINKS:
-  APPLE_APP_ID: ${APPLE_APP_ID}
-  APPLE_TEAM_ID: ${APPLE_TEAM_ID}
-  APP_STORE_LINK: ${IOS_REDIRECT}
-  PLAY_STORE_LINK: ${ANDROID_REDIRECT}
-  GOOGLE_APP_ID: ${GOOGLE_APP_ID}
-  GOOGLE_KEYSTORE_SHA256: ${GOOGLE_KEYSTORE_SHA256}
-ONE_SIGNAL:
-  APP_ID: ${ONE_SIGNAL_APP_ID}
-  REST_KEY: ${ONE_SIGNAL_REST_KEY}
-CHURCH_ONLINE:
-  URL: ${CHURCH_ONLINE_URL}
-  WEB_VIEW_URL: https://apollos.online.church/
-ALGOLIA:
-  APPLICATION_ID: ${ALGOLIASEARCH_APPLICATION_ID}
-  API_KEY: ${ALGOLIASEARCH_API_KEY}
-TWILIO:
-  ACCOUNT_SID: ${TWILIO_ACCOUNT_SID}
-  AUTH_TOKEN: ${TWILIO_AUTH_TOKEN}
-  FROM_NUMBER: ${TWILIO_FROM_NUMBER}
-PASS:
-  TEMPLATES:
-    CHECKIN: ${PWD}/wallet-passes/checkin.pass
-  CERTIFICATES:
-    WWDR: ${PASS_WWDR_CERT}
-    SIGNER_CERT: ${PASS_SIGNER_CERT}
-    SIGNER_KEY: ${PASS_SIGNER_KEY}
-    SIGNER_KEY_PASSPHRASE: ${PASS_SIGNER_PASSPHRASE}
-BIBLE_API:
-  KEY: ${BIBLE_API_KEY}
-  BIBLE_ID:
-    WEB: '9879dbb7cfe39e4d-01'
-    KJV: 'de4e12af7f28f599-02'
-CLOUDINARY:
-  URL: ${CLOUDINARY_URL}
-
-CONTENT:
-  SERMON_CHANNEL_ID: cbc0994a-97f1-471a-a7d5-4eff59d8a389
-  TYPES:
-    - ContentSeriesContentItem
-    - DevotionalContentItem
-    - MediaContentItem
-    - UniversalContentItem
-    - WeekendContentItem
-    - ContentItem
-
-
-TABS:
-  HOME:
-    - type: ActionBar
-      title: Welcome to Apollos
-      actions:
-        [
-          {
-            title: Check In,
-            icon: check,
-            action: OPEN_URL,
-            relatedNode: { __typename: Url, url: 'https://www.google.com' },
-          },
-        ]
-    - algorithms:
-      - type: CONTENT_FEED
-        arguments:
-          channelIds:
-            - c7f43eb9-2200-4267-ab28-871e0d5e785f
-            - 3dfe7149-136b-4134-bd91-fdd935ef2221
-      type: HeroList
-      primaryAction:
-        # Right now, you hardcode exactly what GraphQL should return.
-        # Long term, we hope to have a more sophisticated mechanism for driving this field
-        action: OPEN_NODE
-        title: 'Read More'
-        relatedNode:
-          __typename: UniversalContentItem
-          id: a2c42d1d-98c8-46fb-aeea-603bc569cf7d
-    - algorithms: [DAILY_PRAYER]
-      isCard: false
-      type: PrayerList
-      title: Daily Prayer
-    - algorithms:
-        - type: CAMPAIGN_ITEMS
-          channelIds:
-            - 4b23ebc9-248e-4092-99f9-8829e1b6f1cc
-      type: HeroList
-      isFeatured: true
-      subtitle: Featured
-    - title: FOR YOU
-      algorithms: [SERMON_CHILDREN, PERSONA_FEED]
-      subtitle: Explore what God calls you to today
-      type: ActionList
-    - algorithms: [SERIES_IN_PROGRESS]
-      subtitle: Continue
-      type: HorizontalCardList
-    - title: RECOMMENDED
-      algorithms: [SERMON_CHILDREN]
-      subtitle: For Him
-      type: VerticalCardList
-    - title: BULLETIN
-      subtitle: What's happening at apollos?
-      type: ActionList
-      algorithms:
-        - type: CONTENT_FEED
-          arguments:
-            channelIds:
-              - 13
-        - type: UPCOMING_EVENTS
-
-  READ:
-    - algorithms:
-        - type: CONTENT_FEED
-          arguments:
-            channelIds:
-              - c7f43eb9-2200-4267-ab28-871e0d5e785f
-            limit: 3
-      type: HorizontalCardList
-      subtitle: Podcast Messages
-      primaryAction:
-        action: OPEN_CHANNEL
-        title: 'Read More'
-        relatedNode:
-          __typename: ContentChannel
-          apollosId: ContentChannel:f4a5890c-4af5-4d9f-afe3-5d1c6aa85419
-          title: Podcast Messages
-    - algorithms:
-        - type: CONTENT_FEED
-          arguments:
-            channelIds:
-              - d9da719f-84ef-4cf0-9875-22fea4bf09eb
-            limit: 3
-      type: HorizontalCardList
-      subtitle: Devotionals
-      primaryAction:
-        action: OPEN_CHANNEL
-        title: 'Read More'
-        relatedNode:
-          __typename: ContentChannel
-          apollosId: ContentChannel:d9da719f-84ef-4cf0-9875-22fea4bf09eb
-          title: Devotionals
-
-  WATCH:
-    - algorithms:
-        - type: LATEST_SERIES_CHILDREN
-          arguments:
-            channelId: 8f0a93f5-ccec-4cc1-8fd8-06afe5982f7b
-      type: HeroList
-      title: Catch up
-      subtitle: Latest Series
-    - algorithms:
-        - type: CONTENT_FEED
-          arguments:
-            channelIds:
-              - f4a5890c-4af5-4d9f-afe3-5d1c6aa85419
-      type: VerticalCardList
-      subtitle: All series
-    - algorithms:
-        - type: CONTENT_FEED
-          arguments:
-            channelIds:
-              - 8f0a93f5-ccec-4cc1-8fd8-06afe5982f7b
-            limit: 3
-      type: HorizontalCardList
-      subtitle: Sermons
-    - algorithms:
-        - type: CONTENT_FEED
-          arguments:
-            channelIds:
-              - f4a5890c-4af5-4d9f-afe3-5d1c6aa85419
-            limit: 3
-      type: HorizontalCardList
-      subtitle: Podcasts
-      primaryAction:
-        action: OPEN_CHANNEL
-        title: 'Read More'
-        relatedNode:
-          __typename: ContentChannel
-          apollosId: ContentChannel:f4a5890c-4af5-4d9f-afe3-5d1c6aa85419
-          title: Podcasts
-    - algorithms:
-        - type: CONTENT_FEED
-          arguments:
-            channelIds:
-              - f4a5890c-4af5-4d9f-afe3-5d1c6aa85419
-            limit: 3
-      type: HorizontalCardList
-      title: Videos
-      primaryAction:
-        action: OPEN_CHANNEL
-        title: 'Read More'
-        relatedNode:
-          __typename: ContentChannel
-          apollosId: ContentChannel:f4a5890c-4af5-4d9f-afe3-5d1c6aa85419
-          title: Videos
-
-  PRAY:
-    - algorithms: [DAILY_PRAYER]
-      isCard: false
-      type: PrayerList
-      title: Daily Prayer
-    - type: VerticalPrayerList
-      title: Your Prayers
-  CONNECT:
-    - type: ActionTable
-      title: Connect to Apollos
-      actions:
-        [
-          {
-            title: Google,
-            action: OPEN_URL,
-            relatedNode: { __typename: Url, url: 'https://www.google.com' },
-          },
-          {
-            title: Facebook,
-            action: OPEN_URL,
-            relatedNode: { __typename: Url, url: 'https://www.facebook.com' },
-          },
-        ]
diff --git a/apollos-church-api/config.yml b/apollos-church-api/config.yml
index 5ac0d92a..e73c626a 100644
--- a/apollos-church-api/config.yml
+++ b/apollos-church-api/config.yml
@@ -236,19 +236,3 @@ TABS:
       title: Daily Prayer
     - type: VerticalPrayerList
       title: Your Prayers
-  CONNECT:
-    - type: ActionTable
-      title: Connect to Apollos
-      actions:
-        [
-          {
-            title: Google,
-            action: OPEN_URL,
-            relatedNode: { __typename: Url, url: 'https://www.google.com' },
-          },
-          {
-            title: Facebook,
-            action: OPEN_URL,
-            relatedNode: { __typename: Url, url: 'https://www.facebook.com' },
-          },
-        ]
\ No newline at end of file
diff --git a/apollos-church-api/package.json b/apollos-church-api/package.json
index 6afffc6a..d55d0d8d 100644
--- a/apollos-church-api/package.json
+++ b/apollos-church-api/package.json
@@ -8,30 +8,32 @@
     "start": "NODE_ENV=production node ./lib/index.js",
     "start:dev": "linkemon ./src/index.js --exec babel-node --delay 2 -e js,yaml,json,yml",
     "postinstall": "yarn build",
+    "link-packages": "node ./scripts/link-packages && yarn yalc update",
+    "unlink-packages": "node ./scripts/link-packages remove && rm -rf ./node_modules",
     "build": "NODE_ENV=production rm -rf ./lib && mkdir -p lib && babel ./src -d ./lib",
     "test": "echo \"No tests in apollos-church-api, all tested code is located in @apollosproject npm modules\"",
     "lint": "eslint ./src --ext .js",
     "translate": "node scripts/translate.js"
   },
   "engines": {
-    "node": "12"
+    "node": ">=12.x.x"
   },
   "dependencies": {
-    "@apollosproject/config": "^2.28.0",
-    "@apollosproject/data-connector-algolia-search": "^2.28.0",
-    "@apollosproject/data-connector-analytics": "^2.28.0",
-    "@apollosproject/data-connector-bible": "^2.28.0",
-    "@apollosproject/data-connector-church-online": "^2.28.0",
-    "@apollosproject/data-connector-cloudinary": "^2.28.0",
-    "@apollosproject/data-connector-onesignal": "^2.28.0",
-    "@apollosproject/data-connector-passes": "^2.28.0",
-    "@apollosproject/data-connector-postgres": "^2.28.0",
-    "@apollosproject/data-connector-redis-cache": "^2.28.0",
-    "@apollosproject/data-connector-rock": "^2.28.0",
-    "@apollosproject/data-connector-twilio": "^2.28.0",
-    "@apollosproject/data-schema": "^2.28.0",
-    "@apollosproject/rock-apollo-data-source": "^2.28.0",
-    "@apollosproject/server-core": "^2.28.0",
+    "@apollosproject/config": "^2.18.1",
+    "@apollosproject/data-connector-algolia-search": "^2.18.1",
+    "@apollosproject/data-connector-analytics": "^2.18.1",
+    "@apollosproject/data-connector-bible": "^2.18.1",
+    "@apollosproject/data-connector-church-online": "^2.18.1",
+    "@apollosproject/data-connector-cloudinary": "^2.18.1",
+    "@apollosproject/data-connector-onesignal": "^2.18.1",
+    "@apollosproject/data-connector-passes": "^2.18.1",
+    "@apollosproject/data-connector-postgres": "^2.18.1",
+    "@apollosproject/data-connector-redis-cache": "^2.18.1",
+    "@apollosproject/data-connector-rock": "^2.18.1",
+    "@apollosproject/data-connector-twilio": "^2.18.1",
+    "@apollosproject/data-schema": "^2.18.1",
+    "@apollosproject/rock-apollo-data-source": "^2.18.1",
+    "@apollosproject/server-core": "^2.18.1",
     "apollo-server": "^2.24.1",
     "apollo-server-express": "2.14.2",
     "color": "3.0.0",
@@ -41,9 +43,9 @@
     "randomcolor": "0.5.3"
   },
   "devDependencies": {
-    "@apollosproject/apollo-server-env-mock": "^2.28.0",
-    "@apollosproject/babel-preset-apollos": "^2.28.0",
-    "@apollosproject/eslint-config": "^2.28.0",
+    "@apollosproject/apollo-server-env-mock": "^2.18.1",
+    "@apollosproject/babel-preset-apollos": "^2.18.1",
+    "@apollosproject/eslint-config": "^2.18.1",
     "@babel/cli": "^7.4.5",
     "@babel/core": "^7.4.5",
     "@babel/node": "^7.7.4",
@@ -58,6 +60,7 @@
     "eslint-plugin-prettier": "^2.6.0",
     "linkemon": "^0.1.1",
     "nodemon": "1.18.7",
-    "prettier": "1.12.1"
+    "prettier": "1.12.1",
+    "yalc": "^1.0.0-pre.47"
   }
 }
diff --git a/apollos-church-api/scripts/link-packages.js b/apollos-church-api/scripts/link-packages.js
new file mode 100644
index 00000000..7778c0a4
--- /dev/null
+++ b/apollos-church-api/scripts/link-packages.js
@@ -0,0 +1,16 @@
+const fs = require('fs');
+const { execSync } = require('child_process');
+
+const direction = process.argv[2] || 'link';
+
+const packageJson = JSON.parse(fs.readFileSync(`${__dirname}/../package.json`));
+
+const dependencies = [
+  ...Object.keys(packageJson.dependencies),
+  ...Object.keys(packageJson.devDependencies),
+].filter((d) => d.includes('@apollosproject'));
+
+dependencies.forEach((dep) => {
+  const output = execSync(`yalc ${direction} ${dep}`, { encoding: 'utf8' });
+  console.log(output);
+});
diff --git a/apollos-church-api/src/config.js b/apollos-church-api/src/config.js
index 8291fd33..21c96867 100644
--- a/apollos-church-api/src/config.js
+++ b/apollos-church-api/src/config.js
@@ -3,12 +3,8 @@ import fetch from 'node-fetch';
 import dotenv from "dotenv/config"; // eslint-disable-line
 import ApollosConfig from '@apollosproject/config';
 
-const configName = process.env.DATABASE_URL
-  ? 'config.postgres.yml'
-  : 'config.yml';
-
 ApollosConfig.loadYaml({
-  configPath: path.join(__dirname, '..', configName),
+  configPath: path.join(__dirname, '..', 'config.yml'),
 });
 
 // defaults
@@ -19,8 +15,6 @@ ApollosConfig.loadJs({
 // autodetect some settings
 (async () => {
   if (!ApollosConfig.ROCK) return;
-  if (!ApollosConfig.ROCK.URL || !ApollosConfig.ROCK.API_TOKEN)
-    throw new Error('ROCK_URL and ROCK_TOKEN variables are required!');
 
   let res;
 
diff --git a/apollos-church-api/src/data/index.postgres.js b/apollos-church-api/src/data/index.postgres.js
index 4acac1d5..63052d6f 100644
--- a/apollos-church-api/src/data/index.postgres.js
+++ b/apollos-church-api/src/data/index.postgres.js
@@ -17,6 +17,8 @@ import {
   Followings,
   Interactions,
   RockConstants,
+  ContentItem,
+  ContentChannel,
   Sharable,
   Auth,
   PersonalDevice,
@@ -25,9 +27,12 @@ import {
   Campus,
   Group,
   BinaryFiles,
+  Feature,
   FeatureFeed,
+  ActionAlgorithm,
   Event,
   PrayerRequest,
+  Persona,
   Person as RockPerson,
 } from '@apollosproject/data-connector-rock';
 
@@ -36,44 +41,24 @@ import {
   UserFlag,
   UserLike,
   Follow,
-  Notification,
-  NotificationPreference,
   Campus as PostgresCampus,
   Person as PostgresPerson,
-  Media as PostgresMedia,
-  Feature,
-  Tag,
-  ContentItem,
-  ContentItemsConnection,
-  ContentItemCategory as ContentChannel,
-  ActionAlgorithm,
 } from '@apollosproject/data-connector-postgres';
 
 import * as Theme from './theme';
 
 // This modules ties together certain updates so they occurs in both Rock and Postgres.
 // Will be eliminated in the future through an enhancement to the Shovel
-import {
-  Person,
-  OneSignal,
-  Followings as FollowingsPostgresBridge,
-} from './rockWithPostgres';
+import { Person, OneSignal } from './rockWithPostgres';
 
 const data = {
   Interfaces,
   Followings,
-  FollowingsPostgresBridge, // This entry needs to come after Followings.
-  FeatureFeed,
-  ActionAlgorithm,
+  ContentChannel,
+  ContentItem,
   RockPerson, // This entry needs to come before (postgres) Person
   BinaryFiles, // This entry needs to come before (postgres) Person
   PostgresPerson, // Postgres person for now, as we extend this dataSource in the 'rockWithPostgres' file
-  PostgresMedia,
-  Feature,
-  Tag,
-  ContentItem,
-  ContentItemsConnection,
-  ContentChannel,
   Cloudinary,
   Auth,
   AuthSms,
@@ -85,13 +70,16 @@ const data = {
   RockConstants,
   Sharable,
   Analytics,
+  OneSignal,
   PersonalDevice,
   Pass,
   Search,
   Template,
   Campus,
   Group,
-  // ActionAlgorithm,
+  Feature,
+  FeatureFeed,
+  ActionAlgorithm,
   Event,
   Cache,
   PrayerRequest,
@@ -100,9 +88,7 @@ const data = {
   UserFlag,
   Follow,
   PostgresCampus,
-  Notification,
-  NotificationPreference,
-  OneSignal,
+  Persona,
   Person, // An extension of Postgres person. Will be eliminated in the near future so you can use just postgres/Person.
 };
 
diff --git a/apollos-church-api/src/data/rockWithPostgres.js b/apollos-church-api/src/data/rockWithPostgres.js
index b22f5a30..cc1696f0 100644
--- a/apollos-church-api/src/data/rockWithPostgres.js
+++ b/apollos-church-api/src/data/rockWithPostgres.js
@@ -58,14 +58,6 @@ const personResolver = {
       ]); // updates in Postgres
     },
     updateUserPushSettings: async (root, { input }, { dataSources }) => {
-      // register the changes w/ postgres
-      await dataSources.NotificationPreference.updateUserNotificationPreference(
-        {
-          notificationProviderId: input.pushProviderUserId,
-          notificationProviderType: 'one_signal', // hard coded for now
-          enabled: input.enabled,
-        }
-      );
       // register the changes w/ one signal
       const returnValue = await dataSources.OneSignal.updatePushSettings(input);
 
@@ -133,92 +125,3 @@ export const OneSignal = {
   ...OneSignalOriginal,
   dataSource: oneSignalDataSource,
 };
-
-const defaultContentItemResolvers = {
-  likedCount: (root, args, { dataSources }) =>
-    console.log(root, root.apollosId, root.originId) ||
-    dataSources.Followings.getFollowingsCountByNodeId({
-      nodeId: root.apollosId,
-      originId: root.originId,
-    }),
-
-  isLiked: async (root, args, { dataSources }) =>
-    dataSources.Followings.getIsLikedForCurrentUserAndNode({
-      nodeId: root.apollosId,
-      originId: root.originId,
-      isLiked: null,
-    }),
-};
-
-const followingsResolvers = {
-  Mutation: {
-    updateLikeEntity: async (
-      root,
-      { input: { nodeId, operation } },
-      { dataSources },
-      resolveInfo
-    ) => {
-      const { originId } = await dataSources.ContentItem.getFromId(
-        nodeId.split(':')[1]
-      );
-      return dataSources.Followings.updateLikeContentItem({
-        nodeId,
-        originId,
-        operation,
-        resolveInfo,
-      });
-    },
-    updateLikeNode: async (
-      root,
-      { input: { nodeId, operation } },
-      { dataSources },
-      resolveInfo
-    ) => {
-      const { originId } = await dataSources.ContentItem.getFromId(
-        nodeId.split(':')[1]
-      );
-      return dataSources.Followings.updateLikeNode({
-        nodeId,
-        originId,
-        operation,
-        resolveInfo,
-      });
-    },
-  },
-  Query: {
-    likedContent: async (root, { after, first }, { dataSources }) => {
-      const followingsPaginated = await dataSources.Followings.paginatedGetFollowingsForCurrentUser(
-        { type: 'ContentItem', after, first }
-      );
-
-      const followings = await followingsPaginated.edges;
-      const ids = followings.map((f) => f.node.entityId);
-      const contentItems = await dataSources.ContentItem.getFromOriginIds(ids);
-      const contentItemEdges = contentItems.map((contentItem) => ({
-        node: contentItem,
-        following: followings.find(
-          (f) => String(f.node.entityId) === contentItem.originId
-        ).node,
-        cursor: followings.find(
-          (f) => String(f.node.entityId) === contentItem.originId
-        ).cursor,
-      }));
-      const sortedContentItemEdges = contentItemEdges.sort(
-        (a, b) =>
-          new Date(a.following.createdDateTime) <
-          new Date(b.following.createdDateTime)
-      );
-
-      return { edges: sortedContentItemEdges };
-    },
-  },
-  UniversalContentItem: defaultContentItemResolvers,
-  DevotionalContentItem: defaultContentItemResolvers,
-  ContentSeriesContentItem: defaultContentItemResolvers,
-  WeekendContentItem: defaultContentItemResolvers,
-  MediaContentItem: defaultContentItemResolvers,
-};
-
-export const Followings = {
-  resolver: followingsResolvers,
-};
