diff --git a/apollos-church-api/config.yml b/apollos-church-api/config.yml
index f240612..564a740 100644
--- a/apollos-church-api/config.yml
+++ b/apollos-church-api/config.yml
@@ -73,10 +73,6 @@ ROCK_MAPPINGS:
     ContentItem:
       EntityType: ContentChannelItem
 
-  DATAVIEW_CATEGORIES:
-    # Id of the category used to store all persona dataviews
-    PersonaId: 210
-
   # Apollos will pull these content channels and expose them in the app on the discover screen.
   DISCOVER_CONTENT_CHANNEL_IDS:
     - 2
@@ -95,9 +91,6 @@ ROCK_MAPPINGS:
     - 6
     - 8
 
-  CAMPAIGN_CHANNEL_IDS:
-    - 11
-
 # Default mapping of field types -> ids. There's probably no reason to edit this.
 ROCK_CONSTANTS:
   TEXT: 1
diff --git a/apollos-church-api/package.json b/apollos-church-api/package.json
index cee2178..da832ec 100644
--- a/apollos-church-api/package.json
+++ b/apollos-church-api/package.json
@@ -1,6 +1,6 @@
 {
   "name": "apollos-church-api",
-  "version": "0.8.5",
+  "version": "0.8.0-alpha.8",
   "private": true,
   "main": "lib/index.js",
   "scripts": {
@@ -34,15 +34,15 @@
     ]
   },
   "dependencies": {
-    "@apollosproject/config": "^0.8.5",
-    "@apollosproject/data-connector-analytics": "^0.8.5",
-    "@apollosproject/data-connector-bible": "^0.8.5",
-    "@apollosproject/data-connector-church-online": "^0.8.5",
-    "@apollosproject/data-connector-cloudinary": "^0.8.5",
-    "@apollosproject/data-connector-onesignal": "^0.8.5",
-    "@apollosproject/data-connector-passes": "^0.8.5",
-    "@apollosproject/data-connector-rock": "^0.8.5",
-    "@apollosproject/server-core": "^0.8.5",
+    "@apollosproject/config": "^0.8.0-alpha.8",
+    "@apollosproject/data-connector-analytics": "^0.8.0-alpha.8",
+    "@apollosproject/data-connector-bible": "^0.8.0-alpha.8",
+    "@apollosproject/data-connector-church-online": "^0.8.0-alpha.8",
+    "@apollosproject/data-connector-cloudinary": "^0.8.0-alpha.8",
+    "@apollosproject/data-connector-onesignal": "^0.8.0-alpha.8",
+    "@apollosproject/data-connector-passes": "^0.8.0-alpha.8",
+    "@apollosproject/data-connector-rock": "^0.8.0-alpha.8",
+    "@apollosproject/server-core": "^0.8.0-alpha.8",
     "apollo-server": "^2.0.5",
     "color": "3.0.0",
     "dotenv": "6.0.0",
@@ -51,8 +51,8 @@
     "randomcolor": "0.5.3"
   },
   "devDependencies": {
-    "@apollosproject/apollo-server-env-mock": "^0.8.5",
-    "@apollosproject/babel-preset-apollos": "^0.8.5",
+    "@apollosproject/apollo-server-env-mock": "^0.8.0-alpha.8",
+    "@apollosproject/babel-preset-apollos": "^0.8.0-alpha.8",
     "@babel/cli": "7.1.5",
     "@babel/core": "7.1.6",
     "codecov": "3.0.2",
diff --git a/apollos-church-api/src/data/index.js b/apollos-church-api/src/data/index.js
index 2caa7d8..51ab647 100644
--- a/apollos-church-api/src/data/index.js
+++ b/apollos-church-api/src/data/index.js
@@ -13,6 +13,7 @@ import {
   Followings,
   Interactions,
   RockConstants,
+  Family,
   Person,
   ContentItem,
   ContentChannel,
@@ -21,7 +22,6 @@ import {
   PersonalDevice,
   Template,
   AuthSms,
-  Campus,
 } from '@apollosproject/data-connector-rock';
 import * as Theme from './theme';
 
@@ -45,12 +45,24 @@ const data = {
   RockConstants,
   Sharable,
   Analytics,
+  Family,
   OneSignal,
+  UniversalContentItem: {
+    dataSource: ContentItem.dataSource,
+  }, // alias
+  DevotionalContentItem: {
+    dataSource: ContentItem.dataSource,
+  }, // alias
+  ContentSeriesContentItem: {
+    dataSource: ContentItem.dataSource,
+  }, // alias
+  MediaContentItem: {
+    dataSource: ContentItem.dataSource,
+  }, // alias
   PersonalDevice,
   OneSignalWithRock,
   Pass,
   Template,
-  Campus,
 };
 
 const {
diff --git a/apollos-church-api/src/server.js b/apollos-church-api/src/server.js
index 74a305e..6eb9d17 100644
--- a/apollos-church-api/src/server.js
+++ b/apollos-church-api/src/server.js
@@ -43,8 +43,7 @@ const apolloServer = new ApolloServer({
 
 const app = express();
 
-applyServerMiddleware({ app, dataSources, context });
 apolloServer.applyMiddleware({ app });
-apolloServer.applyMiddleware({ app, path: '/' });
+applyServerMiddleware({ app, dataSources, context });
 
 export default app;
