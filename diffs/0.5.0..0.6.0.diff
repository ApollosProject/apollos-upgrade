diff --git a/apollos-church-api/__mocks__/apollo-server-env.js b/apollos-church-api/__mocks__/apollo-server-env.js
index 0bc8c91..88fdf3f 100644
--- a/apollos-church-api/__mocks__/apollo-server-env.js
+++ b/apollos-church-api/__mocks__/apollo-server-env.js
@@ -1,6 +1,6 @@
 import fetch from 'jest-fetch-mock';
 
-import { Constants } from 'apollos-church-api/src/connectors/rock';
+import { Constants } from '../src/connectors/rock';
 import * as apolloDatasourceMocks from './apollo-datasource-mocks';
 import * as rockMocks from './rock-api-mocks';
 
@@ -81,6 +81,10 @@ fetch.mockRockDataSourceAPI = () => {
       return resolveWith(rockMocks.contentChannel());
     }
 
+    if (url.match('api/Groups/GetFamilies/\\d')) {
+      return resolveWith(rockMocks.families());
+    }
+
     if (url.match('api/ContentChannels')) {
       return resolveWith([rockMocks.contentChannel()]);
     }
diff --git a/apollos-church-api/__mocks__/isomorphic-fetch.js b/apollos-church-api/__mocks__/isomorphic-fetch.js
index 727d6c0..70a2ed0 100644
--- a/apollos-church-api/__mocks__/isomorphic-fetch.js
+++ b/apollos-church-api/__mocks__/isomorphic-fetch.js
@@ -1,7 +1,7 @@
 import 'isomorphic-fetch';
 import fetch from 'jest-fetch-mock';
 
-import { Constants } from 'apollos-church-api/src/connectors/rock';
+import { Constants } from '../src/connectors/rock';
 
 import * as rockMocks from './rock-api-mocks';
 
diff --git a/apollos-church-api/__mocks__/rock-api-mocks/families.js b/apollos-church-api/__mocks__/rock-api-mocks/families.js
new file mode 100644
index 0000000..e907e75
--- /dev/null
+++ b/apollos-church-api/__mocks__/rock-api-mocks/families.js
@@ -0,0 +1,117 @@
+export default () => [
+  {
+    Campus: {
+      IsSystem: false,
+      Name: 'Main Campus',
+      Description: null,
+      IsActive: true,
+      ShortCode: 'MAIN',
+      Url: null,
+      LocationId: 2,
+      PhoneNumber: null,
+      LeaderPersonAliasId: null,
+      ServiceTimes: null,
+      Order: 0,
+      TimeZoneId: null,
+      CreatedDateTime: null,
+      ModifiedDateTime: null,
+      CreatedByPersonAliasId: null,
+      ModifiedByPersonAliasId: null,
+      Id: 1,
+      Guid: '76882ae3-1ce8-42a6-a2b6-8c0b29cf8cf8',
+      ForeignId: null,
+      ForeignGuid: null,
+      ForeignKey: null,
+    },
+    GroupLocations: [
+      {
+        Location: {
+          ParentLocationId: null,
+          Name: null,
+          IsActive: true,
+          LocationTypeValueId: null,
+          Street1: '6414 S Green St',
+          Street2: null,
+          City: 'Chicago',
+          County: 'Cook',
+          State: 'IL',
+          Country: 'US',
+          PostalCode: '60621-1924',
+          Barcode: '606211924144',
+          AssessorParcelId: null,
+          StandardizeAttemptedDateTime: '2018-10-02T11:11:29.873',
+          StandardizeAttemptedServiceType: 'Smarty Streets',
+          StandardizeAttemptedResult:
+            'RecordType:S; DPV MatchCode:Y; Precision:Zip9',
+          StandardizedDateTime: '2018-10-02T11:11:29.873',
+          GeocodeAttemptedDateTime: '2018-10-02T11:11:29.873',
+          GeocodeAttemptedServiceType: 'Smarty Streets',
+          GeocodeAttemptedResult:
+            'RecordType:S; DPV MatchCode:Y; Precision:Zip9',
+          GeocodedDateTime: '2018-10-02T11:11:29.873',
+          IsGeoPointLocked: null,
+          PrinterDeviceId: null,
+          ImageId: null,
+          SoftRoomThreshold: null,
+          FirmRoomThreshold: null,
+          Latitude: 41.77745,
+          Longitude: -87.64603,
+          Distance: 0,
+          CreatedDateTime: '2018-10-02T11:11:29.953',
+          ModifiedDateTime: '2018-10-02T11:11:29.953',
+          CreatedByPersonAliasId: 106,
+          ModifiedByPersonAliasId: 106,
+          Id: 45,
+          Guid: '571c6044-695e-45c3-bf53-b9728c270298',
+          ForeignId: null,
+          ForeignGuid: null,
+          ForeignKey: null,
+        },
+        GroupId: 373,
+        LocationId: 45,
+        GroupLocationTypeValueId: 19,
+        IsMailingLocation: true,
+        IsMappedLocation: true,
+        GroupMemberPersonAliasId: null,
+        Order: 0,
+        CreatedDateTime: '2018-10-02T11:16:02.487',
+        ModifiedDateTime: '2018-10-02T11:16:02.487',
+        CreatedByPersonAliasId: 106,
+        ModifiedByPersonAliasId: 106,
+        Id: 58,
+        Guid: '91312c3b-f211-4e11-9b5f-321080d22c30',
+        ForeignId: null,
+        ForeignGuid: null,
+        ForeignKey: null,
+      },
+    ],
+    IsSystem: false,
+    ParentGroupId: null,
+    GroupTypeId: 10,
+    CampusId: 1,
+    ScheduleId: null,
+    Name: 'Family',
+    Description: null,
+    IsSecurityRole: false,
+    IsActive: true,
+    Order: 0,
+    AllowGuests: null,
+    WelcomeSystemEmailId: null,
+    ExitSystemEmailId: null,
+    SyncDataViewId: null,
+    AddUserAccountsDuringSync: null,
+    MustMeetRequirementsToAddMember: null,
+    IsPublic: true,
+    GroupCapacity: null,
+    RequiredSignatureDocumentTemplateId: null,
+    CreatedDateTime: '2018-08-09T13:04:43.097',
+    ModifiedDateTime: '2018-10-02T11:15:58.4',
+    CreatedByPersonAliasId: 64,
+    ModifiedByPersonAliasId: 106,
+    Id: 373,
+    Guid: '23534528-6236-4038-980c-39c7c332ead2',
+    ForeignId: null,
+    ForeignGuid: null,
+    ForeignKey: null,
+  },
+];
diff --git a/apollos-church-api/__mocks__/rock-api-mocks/index.js b/apollos-church-api/__mocks__/rock-api-mocks/index.js
index 0698b04..0e57c13 100644
--- a/apollos-church-api/__mocks__/rock-api-mocks/index.js
+++ b/apollos-church-api/__mocks__/rock-api-mocks/index.js
@@ -7,3 +7,4 @@ export { default as people } from './people';
 export { default as userLogins } from './user-logins';
 export { default as session } from './session';
 export { default as interaction } from './interaction';
+export { default as families } from './families';
diff --git a/apollos-church-api/index.js b/apollos-church-api/index.js
deleted file mode 100644
index f97f0e3..0000000
--- a/apollos-church-api/index.js
+++ /dev/null
@@ -1,5 +0,0 @@
-import server from './src';
-
-server.listen().then(({ url }) => {
-  console.log(`🚀 Server ready at ${url}`);
-});
diff --git a/apollos-church-api/package.json b/apollos-church-api/package.json
index 7fc020f..d3eb5b0 100644
--- a/apollos-church-api/package.json
+++ b/apollos-church-api/package.json
@@ -1,12 +1,14 @@
 {
   "name": "apollos-church-api",
-  "version": "0.5.0",
+  "version": "0.6.0",
   "private": true,
   "main": "src/index.js",
   "scripts": {
     "start": "if test \"$NOW_ENV\" = \"true\" ; then yarn start:now ; else yarn start:dev ; fi",
-    "start:dev": "nodemon ./index.js --exec babel-node",
-    "start:now": "babel-node ./index.js",
+    "start:dev": "nodemon ./src/index.js --exec babel-node",
+    "start:now": "babel-node ./src/index.js",
+    "start:prod": "NODE_ENV=production node ./lib/index.js",
+    "build": "NODE_ENV=production rm -rf ./lib && mkdir -p lib && babel ./src -d ./lib",
     "test": "jest",
     "test:watch": "jest --maxWorkers=2 --watch",
     "lint": "eslint ./src --ext .js",
@@ -47,6 +49,8 @@
     "with-query": "1.0.2"
   },
   "devDependencies": {
+    "@babel/cli": "7.0.0-beta.47",
+    "@babel/core": "7.0.0-beta.47",
     "babel-preset-apollos": "link:../babel-preset-apollos",
     "codecov": "3.0.2",
     "coveralls": "3.0.1",
diff --git a/apollos-church-api/src/connectors/rock/__tests__/DataSource.tests.js b/apollos-church-api/src/connectors/rock/__tests__/DataSource.tests.js
index 3d51b97..876db73 100644
--- a/apollos-church-api/src/connectors/rock/__tests__/DataSource.tests.js
+++ b/apollos-church-api/src/connectors/rock/__tests__/DataSource.tests.js
@@ -1,4 +1,4 @@
-import { createCursor } from 'apollos-church-api/src/utils/cursor';
+import { createCursor } from '../../../utils/cursor';
 import RestDataSource from '../data-source';
 import RequestBuilder from '../RequestBuilder';
 
diff --git a/apollos-church-api/src/connectors/rock/__tests__/rock-constants.tests.js b/apollos-church-api/src/connectors/rock/__tests__/rock-constants.tests.js
index eb1f935..324301c 100644
--- a/apollos-church-api/src/connectors/rock/__tests__/rock-constants.tests.js
+++ b/apollos-church-api/src/connectors/rock/__tests__/rock-constants.tests.js
@@ -1,5 +1,5 @@
 import { fetch } from 'apollo-server-env';
-import { buildGetMock } from 'apollos-church-api/src/utils/testUtils';
+import { buildGetMock } from '../../../utils/testUtils';
 
 import RockConstants from '../rock-constants';
 
diff --git a/apollos-church-api/src/connectors/rock/data-source.js b/apollos-church-api/src/connectors/rock/data-source.js
index 00a9ab8..046c063 100644
--- a/apollos-church-api/src/connectors/rock/data-source.js
+++ b/apollos-church-api/src/connectors/rock/data-source.js
@@ -3,7 +3,7 @@ import { RESTDataSource } from 'apollo-datasource-rest';
 import { mapKeys, mapValues, camelCase } from 'lodash';
 import { fetch } from 'apollo-server-env';
 
-import { createCursor, parseCursor } from 'apollos-church-api/src/utils/cursor';
+import { createCursor, parseCursor } from '../../utils/cursor';
 
 import { ROCK_API, ROCK_TOKEN } from './constants'; // eslint-disable-line import/named
 import RequestBuilder from './RequestBuilder';
diff --git a/apollos-church-api/src/connectors/rock/rock-constants.js b/apollos-church-api/src/connectors/rock/rock-constants.js
index 2320870..59884e2 100644
--- a/apollos-church-api/src/connectors/rock/rock-constants.js
+++ b/apollos-church-api/src/connectors/rock/rock-constants.js
@@ -5,6 +5,7 @@ const mapApollosNameToRockName = (name) => {
   switch (name) {
     case 'ContentItem':
     case 'UniversalContentItem':
+    case 'DevotionalContentItem':
       return 'ContentChannelItem';
     default:
       throw new Error(`${name} has not been mapped into a Rock type!`);
diff --git a/apollos-church-api/src/data/analytics/__tests__/data-source.tests.js b/apollos-church-api/src/data/analytics/__tests__/data-source.tests.js
index c74c2bd..c70a06c 100644
--- a/apollos-church-api/src/data/analytics/__tests__/data-source.tests.js
+++ b/apollos-church-api/src/data/analytics/__tests__/data-source.tests.js
@@ -93,6 +93,7 @@ describe('Analytics Data Source', () => {
       const mockCreateInteraction = jest.fn();
       dataSource.initialize({
         context: {
+          sessionId: 'Session:123',
           dataSources: {
             Auth: AuthWithUser,
             Interactions: {
diff --git a/apollos-church-api/src/data/analytics/data-source.js b/apollos-church-api/src/data/analytics/data-source.js
index 8b6fc07..5077b64 100644
--- a/apollos-church-api/src/data/analytics/data-source.js
+++ b/apollos-church-api/src/data/analytics/data-source.js
@@ -92,18 +92,19 @@ export default class Analytics extends DataSource {
   // properties is an array of objects matching the pattern [{ field: String, value: String}]
   async track({ anonymousId, deviceInfo, eventName, properties }) {
     const currentUser = await this.getCurrentPerson();
+    const parsedProps = mapArrayToObject(properties);
     this.trackInterfaces.forEach(async (iface) => {
       if (
         iface.eventWhitelist === null ||
         iface.eventWhitelist.includes(eventName)
       ) {
-        const parsedProps = mapArrayToObject(properties);
         iface.track({
           userId: currentUser && currentUser.id,
           anonymousId,
           properties: parsedProps,
           event: eventName,
           context: deviceInfo,
+          sessionId: this.context.sessionId, // used for the rock interface
         });
       }
     });
diff --git a/apollos-church-api/src/data/analytics/interfaces/rock_interactions.js b/apollos-church-api/src/data/analytics/interfaces/rock_interactions.js
index 8692bc9..64a880b 100644
--- a/apollos-church-api/src/data/analytics/interfaces/rock_interactions.js
+++ b/apollos-church-api/src/data/analytics/interfaces/rock_interactions.js
@@ -3,7 +3,7 @@ import BaseAnalytics from './base';
 export default class RockInteractionAnalytics extends BaseAnalytics {
   eventWhitelist = ['View Content'];
 
-  track({ event, userId, properties }) {
+  track({ event, userId, sessionId, properties }) {
     if (!userId) {
       return null;
     }
@@ -11,7 +11,7 @@ export default class RockInteractionAnalytics extends BaseAnalytics {
       case 'View Content': {
         return this.trackViewContent({
           contentId: properties.ContentId,
-          sessionId: properties.SessionId,
+          sessionId,
         });
       }
       default:
diff --git a/apollos-church-api/src/data/auth/__tests__/index.tests.js b/apollos-church-api/src/data/auth/__tests__/index.tests.js
index 3dd5fb4..9d70095 100644
--- a/apollos-church-api/src/data/auth/__tests__/index.tests.js
+++ b/apollos-church-api/src/data/auth/__tests__/index.tests.js
@@ -2,8 +2,8 @@ import { graphql } from 'graphql';
 import { fetch } from 'apollo-server-env';
 import { makeExecutableSchema } from 'apollo-server';
 
-import { testSchema as typeDefs, resolvers } from 'apollos-church-api/src/data';
-import { getTestContext } from 'apollos-church-api/src/utils/testUtils';
+import { getTestContext } from '../../../utils/testUtils';
+import { testSchema as typeDefs, resolvers } from '../..';
 import { generateToken, registerToken } from '../token';
 
 // we import the root-level schema and resolver so we test the entire integration:
@@ -73,11 +73,26 @@ describe('Auth', () => {
 
     it('queries current user when logged in', async () => {
       const rootValue = {};
-      const { userToken, rockCookie } = registerToken(
-        generateToken({ cookie: 'some-cookie' })
-      );
-      context.userToken = userToken;
-      context.rockCookie = rockCookie;
+      const token = generateToken({ cookie: 'some-cookie', sessionId: 123 });
+
+      context = getTestContext({
+        req: {
+          headers: { authorization: token },
+        },
+      });
+
+      const result = await graphql(schema, query, rootValue, context);
+      expect(result).toMatchSnapshot();
+    });
+
+    it('logs a user out without a sessionId', async () => {
+      const rootValue = {};
+      const token = generateToken({ cookie: 'some-cookie' });
+      context = getTestContext({
+        req: {
+          headers: { authorization: token },
+        },
+      });
 
       const result = await graphql(schema, query, rootValue, context);
       expect(result).toMatchSnapshot();
@@ -98,7 +113,7 @@ describe('Auth', () => {
   });
 
   it('registers an auth token and passes the cookie on requests to rock', async () => {
-    const token = generateToken({ cookie: 'some-cookie' });
+    const token = generateToken({ cookie: 'some-cookie', sessionId: 123 });
     const secondContext = getTestContext({
       req: {
         headers: { authorization: token },
@@ -116,6 +131,34 @@ describe('Auth', () => {
     expect(fetch.mock.calls[0][0].headers).toMatchSnapshot();
   });
 
+  describe('Change Password', () => {
+    it('throws error without a current user', async () => {
+      try {
+        await context.dataSources.Auth.changePassword({
+          password: 'newPassword',
+        });
+      } catch (e) {
+        expect(e.message).toEqual('Must be logged in');
+      }
+    });
+
+    it('generates a new token', async () => {
+      const { userToken, rockCookie } = registerToken(
+        generateToken({ cookie: 'some-cookie' })
+      );
+      context.userToken = userToken;
+      context.rockCookie = rockCookie;
+      const {
+        rockCookie: newCookie,
+        token: newToken,
+      } = await context.dataSources.Auth.changePassword({
+        password: 'good',
+      });
+      expect(newCookie).toEqual('some cookie');
+      expect(typeof newToken).toEqual('string');
+    });
+  });
+
   describe('User Registration', () => {
     it('checks if user is already registered', async () => {
       const result = await context.dataSources.Auth.personExists({
diff --git a/apollos-church-api/src/data/auth/data-source.js b/apollos-church-api/src/data/auth/data-source.js
index 588fa7c..cf81fe0 100644
--- a/apollos-church-api/src/data/auth/data-source.js
+++ b/apollos-church-api/src/data/auth/data-source.js
@@ -2,7 +2,7 @@ import { AuthenticationError } from 'apollo-server';
 import { fetch, Request } from 'apollo-server-env';
 import moment from 'moment';
 
-import RockApolloDataSource from 'apollos-church-api/src/connectors/rock/data-source';
+import RockApolloDataSource from '../../connectors/rock/data-source';
 import { generateToken, registerToken } from './token';
 
 export default class AuthDataSource extends RockApolloDataSource {
@@ -12,11 +12,12 @@ export default class AuthDataSource extends RockApolloDataSource {
 
   userToken = null;
 
-  getCurrentPerson = async () => {
+  getCurrentPerson = async ({ cookie } = { cookie: null }) => {
     const { rockCookie } = this.context;
-    if (rockCookie) {
+    const userCookie = cookie || rockCookie;
+    if (userCookie) {
       const request = await this.request('People/GetCurrentPerson').get({
-        options: { headers: { cookie: rockCookie } },
+        options: { headers: { cookie: userCookie } },
       });
       return request;
     }
@@ -47,13 +48,22 @@ export default class AuthDataSource extends RockApolloDataSource {
     }
   };
 
+  createSession = async ({ cookie }) => {
+    const currentUser = await this.getCurrentPerson({ cookie });
+    return this.post('/InteractionSessions', {
+      PersonAliasId: currentUser.primaryAliasId,
+    });
+  };
+
   authenticate = async ({ identity, password }) => {
     try {
       const cookie = await this.fetchUserCookie(identity, password);
-      const token = generateToken({ cookie });
+      const sessionId = await this.createSession({ cookie });
+      const token = generateToken({ cookie, sessionId });
       const { userToken, rockCookie } = registerToken(token);
-      this.context.userToken = userToken;
       this.context.rockCookie = rockCookie;
+      this.context.userToken = userToken;
+      this.context.sessionId = sessionId;
       return { token, rockCookie };
     } catch (e) {
       throw e;
@@ -101,6 +111,27 @@ export default class AuthDataSource extends RockApolloDataSource {
     }
   };
 
+  changePassword = async ({ password }) => {
+    const currentUser = await this.getCurrentPerson();
+    const { email, id } = currentUser;
+    const logins = await this.request('/UserLogins')
+      .filter(`UserName eq '${email}'`)
+      .get();
+
+    if (logins.length > 0) {
+      await this.delete(`/UserLogins/${logins[0].id}`);
+    }
+    await this.createUserLogin({
+      personId: id,
+      email,
+      password,
+    });
+    return this.authenticate({
+      identity: email,
+      password,
+    });
+  };
+
   registerPerson = async ({ email, password }) => {
     const personExists = await this.personExists({ identity: email });
     if (personExists) throw new Error('User already exists!');
diff --git a/apollos-church-api/src/data/auth/index.js b/apollos-church-api/src/data/auth/index.js
index 53e9d22..0500a2c 100644
--- a/apollos-church-api/src/data/auth/index.js
+++ b/apollos-church-api/src/data/auth/index.js
@@ -17,6 +17,7 @@ export const schema = gql`
 
   extend type Mutation {
     authenticate(identity: String!, password: String!): Authentication
+    changePassword(password: String!): Authentication
     registerPerson(email: String!, password: String!): Authentication
   }
 
@@ -41,6 +42,8 @@ export const resolver = {
   Mutation: {
     authenticate: (root, { identity, password }, { dataSources }) =>
       dataSources.Auth.authenticate({ identity, password }),
+    changePassword: (root, { password }, { dataSources }) =>
+      dataSources.Auth.changePassword({ password }),
     registerPerson: (root, args, { dataSources }) =>
       dataSources.Auth.registerPerson(args),
   },
diff --git a/apollos-church-api/src/data/auth/token.js b/apollos-church-api/src/data/auth/token.js
index 5e92578..ad562ab 100644
--- a/apollos-church-api/src/data/auth/token.js
+++ b/apollos-church-api/src/data/auth/token.js
@@ -7,11 +7,12 @@ export const parseToken = (token) => jwt.verify(token, secret);
 
 export const registerToken = (token) => {
   try {
-    const { cookie } = parseToken(token);
+    const { cookie, sessionId } = parseToken(token);
 
     return {
       userToken: token,
       rockCookie: cookie,
+      sessionId,
     };
   } catch (e) {
     throw new AuthenticationError('Invalid token');
diff --git a/apollos-church-api/src/data/bible/_tests_/resolver.tests.js b/apollos-church-api/src/data/bible/_tests_/resolver.tests.js
index 5edbc7a..dc35d17 100644
--- a/apollos-church-api/src/data/bible/_tests_/resolver.tests.js
+++ b/apollos-church-api/src/data/bible/_tests_/resolver.tests.js
@@ -1,9 +1,8 @@
 import { graphql } from 'graphql';
 import { fetch } from 'apollo-server-env';
 import { makeExecutableSchema } from 'apollo-server';
-import { getTestContext } from 'apollos-church-api/src/utils/testUtils';
-
-import { testSchema as typeDefs, resolvers } from 'apollos-church-api/src/data';
+import { testSchema as typeDefs, resolvers } from '../..';
+import { getTestContext } from '../../../utils/testUtils';
 
 describe('Scripture', () => {
   let schema;
@@ -21,6 +20,8 @@ describe('Scripture', () => {
       query {
         scripture (query: "SNG.1.1") {
           html
+          reference
+          copyright
         }
       }
     `;
diff --git a/apollos-church-api/src/data/bible/resolver.js b/apollos-church-api/src/data/bible/resolver.js
index 920369a..d2c0df4 100644
--- a/apollos-church-api/src/data/bible/resolver.js
+++ b/apollos-church-api/src/data/bible/resolver.js
@@ -6,7 +6,8 @@ export default {
       dataSources.Scripture.getScripture(query),
   },
   Scripture: {
-    reference: ({ data: { reference } = {} }) => reference,
     html: ({ data: { passages } = {} }) => get(passages, '[0].content'),
+    reference: ({ data: { passages } = {} }) => get(passages, '[0].reference'),
+    copyright: ({ data: { passages } = {} }) => get(passages, '[0].copyright'),
   },
 };
diff --git a/apollos-church-api/src/data/bible/schema.js b/apollos-church-api/src/data/bible/schema.js
index 08c6455..5b4a81f 100644
--- a/apollos-church-api/src/data/bible/schema.js
+++ b/apollos-church-api/src/data/bible/schema.js
@@ -4,6 +4,7 @@ export default gql`
   type Scripture {
     reference: String
     html: String
+    copyright: String
   }
 
   extend type Query {
diff --git a/apollos-church-api/src/data/content-channels/__tests__/model.tests.js b/apollos-church-api/src/data/content-channels/__tests__/model.tests.js
index 86e1b4b..393f8ad 100644
--- a/apollos-church-api/src/data/content-channels/__tests__/model.tests.js
+++ b/apollos-church-api/src/data/content-channels/__tests__/model.tests.js
@@ -1,4 +1,4 @@
-import { buildGetMock } from 'apollos-church-api/src/utils/testUtils';
+import { buildGetMock } from '../../../utils/testUtils';
 import ContentChannelDataSource from '../data-source';
 
 describe('ContentChannelModel', () => {
diff --git a/apollos-church-api/src/data/content-channels/__tests__/resolvers.tests.js b/apollos-church-api/src/data/content-channels/__tests__/resolvers.tests.js
index 1eba754..a228d13 100644
--- a/apollos-church-api/src/data/content-channels/__tests__/resolvers.tests.js
+++ b/apollos-church-api/src/data/content-channels/__tests__/resolvers.tests.js
@@ -1,11 +1,10 @@
 import { graphql } from 'graphql';
 import { fetch } from 'apollo-server-env';
 import { makeExecutableSchema } from 'apollo-server';
-import { getTestContext } from 'apollos-church-api/src/utils/testUtils';
+import { createGlobalId } from '../../node/model';
+import { getTestContext } from '../../../utils/testUtils';
 // we import the root-level schema and resolver so we test the entire integration:
-import { testSchema as typeDefs, resolvers } from 'apollos-church-api/src/data';
-
-import { createGlobalId } from 'apollos-church-api/src/data/node/model';
+import { testSchema as typeDefs, resolvers } from '../..';
 
 const contentChannelFragment = `
   fragment ContentChannelFragment on ContentChannel {
diff --git a/apollos-church-api/src/data/content-channels/data-source.js b/apollos-church-api/src/data/content-channels/data-source.js
index a0aaf57..d225c44 100644
--- a/apollos-church-api/src/data/content-channels/data-source.js
+++ b/apollos-church-api/src/data/content-channels/data-source.js
@@ -1,4 +1,4 @@
-import RockApolloDataSource from 'apollos-church-api/src/connectors/rock/data-source';
+import RockApolloDataSource from '../../connectors/rock/data-source';
 
 export default class ContentChannel extends RockApolloDataSource {
   resource = 'ContentChannels';
diff --git a/apollos-church-api/src/data/content-items/__tests__/data-source.tests.js b/apollos-church-api/src/data/content-items/__tests__/data-source.tests.js
index d45415b..878c940 100644
--- a/apollos-church-api/src/data/content-items/__tests__/data-source.tests.js
+++ b/apollos-church-api/src/data/content-items/__tests__/data-source.tests.js
@@ -1,5 +1,5 @@
 import { fetch } from 'apollo-server-env';
-import { buildGetMock } from 'apollos-church-api/src/utils/testUtils';
+import { buildGetMock } from '../../../utils/testUtils';
 
 import ContentItemsDataSource from '../data-source';
 
diff --git a/apollos-church-api/src/data/content-items/__tests__/resolvers.tests.js b/apollos-church-api/src/data/content-items/__tests__/resolvers.tests.js
index ed82fff..6295a2d 100644
--- a/apollos-church-api/src/data/content-items/__tests__/resolvers.tests.js
+++ b/apollos-church-api/src/data/content-items/__tests__/resolvers.tests.js
@@ -2,10 +2,10 @@ import { graphql } from 'graphql';
 import { fetch } from 'apollo-server-env';
 import { makeExecutableSchema } from 'apollo-server';
 
-import { createGlobalId } from 'apollos-church-api/src/data/node/model';
-import { getTestContext } from 'apollos-church-api/src/utils/testUtils';
+import { testSchema as typeDefs, resolvers } from '../..';
+import { getTestContext } from '../../../utils/testUtils';
 // we import the root-level schema and resolver so we test the entire integration:
-import { testSchema as typeDefs, resolvers } from 'apollos-church-api/src/data';
+import { createGlobalId } from '../../node/model';
 
 const contentItemFragment = `
   fragment ContentItemFragment on UniversalContentItem {
diff --git a/apollos-church-api/src/data/content-items/data-source.js b/apollos-church-api/src/data/content-items/data-source.js
index df6fdc3..6d458da 100644
--- a/apollos-church-api/src/data/content-items/data-source.js
+++ b/apollos-church-api/src/data/content-items/data-source.js
@@ -1,4 +1,4 @@
-import RockApolloDataSource from 'apollos-church-api/src/connectors/rock/data-source';
+import RockApolloDataSource from '../../connectors/rock/data-source';
 
 export default class ContentItem extends RockApolloDataSource {
   resource = 'ContentChannelItems';
diff --git a/apollos-church-api/src/data/content-items/index.js b/apollos-church-api/src/data/content-items/index.js
index dc394a5..94b92e4 100644
--- a/apollos-church-api/src/data/content-items/index.js
+++ b/apollos-church-api/src/data/content-items/index.js
@@ -5,8 +5,8 @@ import omitBy from 'lodash/fp/omitBy';
 import pickBy from 'lodash/fp/pickBy';
 import mapValues from 'lodash/fp/mapValues';
 import values from 'lodash/fp/values';
-import sanitizeHtml from 'apollos-church-api/src/utils/sanitize-html';
-import { Constants } from 'apollos-church-api/src/connectors/rock';
+import sanitizeHtml from '../../utils/sanitize-html';
+import { Constants } from '../../connectors/rock';
 import { createGlobalId } from '../node';
 
 const mapValuesWithKey = mapValues.convert({ cap: false });
diff --git a/apollos-church-api/src/data/family/__tests__/data-source.tests.js b/apollos-church-api/src/data/family/__tests__/data-source.tests.js
new file mode 100644
index 0000000..81c3fa7
--- /dev/null
+++ b/apollos-church-api/src/data/family/__tests__/data-source.tests.js
@@ -0,0 +1,56 @@
+import { buildGetMock } from '../../../utils/testUtils';
+import DataSource from '../data-source';
+
+describe('Family Data Source', () => {
+  it('must fetch a users location w/ family location', async () => {
+    const dataSource = new DataSource();
+    dataSource.get = buildGetMock(
+      [
+        {
+          GroupLocations: [{ Location: { City: 'Chicago', State: 'IL' } }],
+          Campus: { Name: 'Main Campus' },
+        },
+      ],
+      dataSource
+    );
+
+    const location = await dataSource.getFamilyLocation({
+      userId: 'something',
+    });
+    expect(location).toEqual('Chicago, IL');
+  });
+  it('must fetch a users location w/ campus', async () => {
+    const dataSource = new DataSource();
+    dataSource.get = buildGetMock(
+      [
+        {
+          GroupLocations: [],
+          Campus: { Name: 'Main Campus' },
+        },
+      ],
+      dataSource
+    );
+
+    const location = await dataSource.getFamilyLocation({
+      userId: 'something',
+    });
+    expect(location).toEqual('Main Campus');
+  });
+  it('must return null without data', async () => {
+    const dataSource = new DataSource();
+    dataSource.get = buildGetMock([{ GroupLocations: [] }], dataSource);
+
+    const location = await dataSource.getFamilyLocation({
+      userId: 'something',
+    });
+    expect(location).toEqual(null);
+  });
+  it('raise an error without a userId', async () => {
+    const dataSource = new DataSource();
+    await expect(
+      dataSource.getFamilyLocation({
+        userId: null,
+      })
+    ).rejects.toThrow();
+  });
+});
diff --git a/apollos-church-api/src/data/family/__tests__/schema.tests.js b/apollos-church-api/src/data/family/__tests__/schema.tests.js
new file mode 100644
index 0000000..6c2f511
--- /dev/null
+++ b/apollos-church-api/src/data/family/__tests__/schema.tests.js
@@ -0,0 +1,38 @@
+import { graphql } from 'graphql';
+import { fetch } from 'apollo-server-env';
+import { makeExecutableSchema } from 'apollo-server';
+
+import { testSchema as typeDefs, resolvers } from '../..';
+import { generateToken } from '../../auth/token';
+// we import the root-level schema and resolver so we test the entire integration:
+import { getTestContext } from '../../../utils/testUtils';
+
+describe('Person', () => {
+  let schema;
+  let context;
+  beforeEach(() => {
+    fetch.resetMocks();
+    fetch.mockRockDataSourceAPI();
+    schema = makeExecutableSchema({ typeDefs, resolvers });
+    const token = generateToken({
+      cookie: 'some-cookie',
+      sessionId: 'somessessionid',
+    });
+    context = getTestContext({ req: { headers: { authorization: token } } });
+  });
+
+  it("returns a user's location", async () => {
+    const query = `
+      query {
+        currentUser {
+          profile {
+            location
+          }
+        }
+      }
+    `;
+    const rootValue = {};
+    const result = await graphql(schema, query, rootValue, context);
+    expect(result).toMatchSnapshot();
+  });
+});
diff --git a/apollos-church-api/src/data/family/data-source.js b/apollos-church-api/src/data/family/data-source.js
new file mode 100644
index 0000000..6494ee7
--- /dev/null
+++ b/apollos-church-api/src/data/family/data-source.js
@@ -0,0 +1,34 @@
+import RockApolloDataSource from '../../connectors/rock/data-source';
+
+export default class Family extends RockApolloDataSource {
+  resource = 'Family';
+
+  getFamily({ userId }) {
+    if (!userId) {
+      throw new Error('UserID is required to fetch a family');
+    }
+    return this.request(`/Groups/GetFamilies/${userId}`);
+  }
+
+  async getFamilyLocation({ userId }) {
+    const familyReq = await this.getFamily({ userId })
+      .expand('GroupLocations,Campus,GroupLocations/Location')
+      .get();
+
+    if (familyReq.length === 0) return null;
+
+    const family = familyReq[0];
+    // First option - a user's address city/state.
+    if (family.groupLocations.length && family.groupLocations[0].location) {
+      const { location } = family.groupLocations[0];
+      return `${location.city}, ${location.state}`;
+    }
+
+    // Second option - their campus name
+    if (family.campus) {
+      return family.campus.name;
+    }
+
+    return null;
+  }
+}
diff --git a/apollos-church-api/src/data/family/index.js b/apollos-church-api/src/data/family/index.js
new file mode 100644
index 0000000..8f21b34
--- /dev/null
+++ b/apollos-church-api/src/data/family/index.js
@@ -0,0 +1,4 @@
+import { schema, resolver } from './schema';
+import dataSource from './data-source';
+
+export { schema, resolver, dataSource };
diff --git a/apollos-church-api/src/data/family/schema.js b/apollos-church-api/src/data/family/schema.js
new file mode 100644
index 0000000..5810ca9
--- /dev/null
+++ b/apollos-church-api/src/data/family/schema.js
@@ -0,0 +1,19 @@
+import { gql } from 'apollo-server';
+
+export const schema = gql`
+  extend type Person {
+    location: String
+  }
+`;
+
+export const resolver = {
+  Person: {
+    location: async (root, args, context) => {
+      const location = await context.dataSources.Family.getFamilyLocation({
+        userId: root.id,
+      });
+
+      return location || 'No Location Set';
+    },
+  },
+};
diff --git a/apollos-church-api/src/data/index.js b/apollos-church-api/src/data/index.js
index 6560b7d..17aea27 100644
--- a/apollos-church-api/src/data/index.js
+++ b/apollos-church-api/src/data/index.js
@@ -1,7 +1,7 @@
 import { gql } from 'apollo-server';
 import { mapValues, values, merge, compact } from 'lodash';
 
-import RockConstants from 'apollos-church-api/src/connectors/rock/rock-constants';
+import RockConstants from '../connectors/rock/rock-constants';
 import * as Node from './node';
 import * as ContentChannel from './content-channels';
 import * as ContentItem from './content-items';
@@ -14,6 +14,7 @@ import * as Scripture from './bible';
 import * as Interactions from './interactions';
 import * as Sharable from './sharable';
 import * as Analytics from './analytics';
+import * as Family from './family';
 
 const data = {
   Node,
@@ -29,6 +30,7 @@ const data = {
   RockConstants: { dataSource: RockConstants },
   Sharable,
   Analytics,
+  Family,
 };
 
 export const schema = [
diff --git a/apollos-church-api/src/data/interactions/__tests__/resolvers.tests.js b/apollos-church-api/src/data/interactions/__tests__/resolvers.tests.js
index 98e3818..8fcba7a 100644
--- a/apollos-church-api/src/data/interactions/__tests__/resolvers.tests.js
+++ b/apollos-church-api/src/data/interactions/__tests__/resolvers.tests.js
@@ -2,10 +2,10 @@ import { graphql } from 'graphql';
 import { fetch } from 'apollo-server-env';
 import { makeExecutableSchema } from 'apollo-server';
 
-import { testSchema as typeDefs, resolvers } from 'apollos-church-api/src/data';
-import { getTestContext } from 'apollos-church-api/src/utils/testUtils';
-import { createGlobalId } from 'apollos-church-api/src/data/node/model';
-import { generateToken } from 'apollos-church-api/src/data/auth/token';
+import { getTestContext } from '../../../utils/testUtils';
+import { createGlobalId } from '../../node/model';
+import { generateToken } from '../../auth/token';
+import { testSchema as typeDefs, resolvers } from '../..';
 
 describe('Interactions', () => {
   let schema;
@@ -14,7 +14,7 @@ describe('Interactions', () => {
     fetch.resetMocks();
     fetch.mockRockDataSourceAPI();
     schema = makeExecutableSchema({ typeDefs, resolvers });
-    const token = generateToken({ cookie: 'some-cookie' });
+    const token = generateToken({ cookie: 'some-cookie', sessionId: 123 });
     context = getTestContext({
       req: {
         headers: { authorization: token },
@@ -22,25 +22,12 @@ describe('Interactions', () => {
     });
   });
 
-  it('creates a session', async () => {
-    const query = `
-      mutation createSession {
-        createSession {
-          id
-        }
-      }
-    `;
-    const rootValue = {};
-    const result = await graphql(schema, query, rootValue, context);
-    expect(result).toMatchSnapshot();
-  });
   it('likes an entity', async () => {
     const query = `
       mutation likeEntity {
         updateLikeEntity(
           input: {
             nodeId: "${createGlobalId(1, 'UniversalContentItem')}"
-            sessionId: "${createGlobalId(123, 'Session')}"
             operation: Like
           }
         ) {
diff --git a/apollos-church-api/src/data/interactions/data-source.js b/apollos-church-api/src/data/interactions/data-source.js
index 1f1ce29..de31e93 100644
--- a/apollos-church-api/src/data/interactions/data-source.js
+++ b/apollos-church-api/src/data/interactions/data-source.js
@@ -1,22 +1,13 @@
-import RockApolloDataSource from 'apollos-church-api/src/connectors/rock/data-source';
-import { parseGlobalId } from 'apollos-church-api/src/data/node';
 import { AuthenticationError } from 'apollo-server';
+import { parseGlobalId } from '../node';
+import RockApolloDataSource from '../../connectors/rock/data-source';
 
 export default class Interactions extends RockApolloDataSource {
   resource = 'Interactions';
 
-  async createSession() {
-    const currentUser = await this.context.dataSources.Auth.getCurrentPerson();
-    const interactionId = await this.post('/InteractionSessions', {
-      PersonAliasId: currentUser.primaryAliasId,
-    });
-    return this.get(`/InteractionSessions/${interactionId}`);
-  }
-
-  async createInteraction({ nodeId, operationName, sessionId }) {
+  async createInteraction({ nodeId, operationName }) {
     const { dataSources } = this.context;
     const { id, __type } = parseGlobalId(nodeId);
-    const parsedSessionId = parseGlobalId(sessionId).id;
     const contentItemType = await dataSources.RockConstants.modelTypeId(__type);
     const interactionComponent = await this.context.dataSources.RockConstants.interactionComponent();
     const currentUser = await dataSources.Auth.getCurrentPerson();
@@ -26,7 +17,7 @@ export default class Interactions extends RockApolloDataSource {
       RelatedEntityTypeId: contentItemType.id,
       PersonAliasId: currentUser.primaryAliasId,
       InteractionComponentId: interactionComponent.id,
-      InteractionSessionId: parsedSessionId,
+      InteractionSessionId: this.context.sessionId,
       Operation: operationName,
       InteractionDateTime: new Date().toJSON(),
     });
diff --git a/apollos-church-api/src/data/interactions/resolver.js b/apollos-church-api/src/data/interactions/resolver.js
index 8fc7cc4..ef5c4ec 100644
--- a/apollos-church-api/src/data/interactions/resolver.js
+++ b/apollos-church-api/src/data/interactions/resolver.js
@@ -1,9 +1,7 @@
-import { createGlobalId } from 'apollos-church-api/src/data/node/model';
+import { createGlobalId } from '../node/model';
 
 export default {
   Mutation: {
-    createSession: (root, args, { dataSources }) =>
-      dataSources.Interactions.createSession(),
     updateLikeEntity: async (
       root,
       { input: { nodeId, sessionId, operation } },
@@ -15,9 +13,6 @@ export default {
         operationName: operation,
       }),
   },
-  Session: {
-    id: (root) => createGlobalId(root.id, 'InteractionSession'),
-  },
   Interaction: {
     id: (root) => createGlobalId(root.id, 'Interaction'),
   },
diff --git a/apollos-church-api/src/data/interactions/schema.js b/apollos-church-api/src/data/interactions/schema.js
index b9f3132..0188dc1 100644
--- a/apollos-church-api/src/data/interactions/schema.js
+++ b/apollos-church-api/src/data/interactions/schema.js
@@ -1,10 +1,6 @@
 import { gql } from 'apollo-server';
 
 export default gql`
-  type Session implements Node {
-    id: ID!
-  }
-
   type Interaction implements Node {
     id: ID!
     operation: LIKE_OPERATION!
@@ -18,12 +14,10 @@ export default gql`
 
   input LikeEntityInput {
     nodeId: ID!
-    sessionId: ID!
     operation: LIKE_OPERATION!
   }
 
   extend type Mutation {
     updateLikeEntity(input: LikeEntityInput!): Interaction
-    createSession: Session
   }
 `;
diff --git a/apollos-church-api/src/data/live/__tests__/resolver.tests.js b/apollos-church-api/src/data/live/__tests__/resolver.tests.js
index c6aa60f..ecbe6cb 100644
--- a/apollos-church-api/src/data/live/__tests__/resolver.tests.js
+++ b/apollos-church-api/src/data/live/__tests__/resolver.tests.js
@@ -2,9 +2,9 @@ import { fetch } from 'apollo-server-env';
 
 import { graphql } from 'graphql';
 import { makeExecutableSchema } from 'apollo-server';
-import { getTestContext } from 'apollos-church-api/src/utils/testUtils';
+import { testSchema as typeDefs, resolvers } from '../..';
+import { getTestContext } from '../../../utils/testUtils';
 // we import the root-level schema and resolver so we test the entire integration:
-import { testSchema as typeDefs, resolvers } from 'apollos-church-api/src/data';
 
 describe('LiveStream', () => {
   let schema;
diff --git a/apollos-church-api/src/data/media/index.js b/apollos-church-api/src/data/media/index.js
index 88dbed1..423651d 100644
--- a/apollos-church-api/src/data/media/index.js
+++ b/apollos-church-api/src/data/media/index.js
@@ -1,5 +1,5 @@
 import { gql } from 'apollo-server';
-import { Constants } from 'apollos-church-api/src/connectors/rock';
+import { Constants } from '../../connectors/rock';
 
 export { default as model } from './model';
 
diff --git a/apollos-church-api/src/data/people/__tests__/data-source.tests.js b/apollos-church-api/src/data/people/__tests__/data-source.tests.js
index ee397f8..be750f5 100644
--- a/apollos-church-api/src/data/people/__tests__/data-source.tests.js
+++ b/apollos-church-api/src/data/people/__tests__/data-source.tests.js
@@ -1,4 +1,4 @@
-import { buildGetMock } from 'apollos-church-api/src/utils/testUtils';
+import { buildGetMock } from '../../../utils/testUtils';
 import Person from '../data-source';
 
 const auth = (dataSource) => ({
@@ -38,10 +38,12 @@ describe('Person', () => {
       dataSource: { Auth },
     };
     dataSource.patch = buildGetMock({}, dataSource);
-    const result = dataSource.updateProfile({
-      field: 'FirstName',
-      value: 'Nick',
-    });
+    const result = dataSource.updateProfile([
+      {
+        field: 'FirstName',
+        value: 'Nick',
+      },
+    ]);
     expect(result).resolves.toMatchSnapshot();
     expect(Auth.getCurrentPerson.mock.calls).toMatchSnapshot();
     expect(dataSource.patch.mock.calls).toMatchSnapshot();
diff --git a/apollos-church-api/src/data/people/__tests__/resolvers.test.js b/apollos-church-api/src/data/people/__tests__/resolvers.test.js
index 855fbc4..8dad30b 100644
--- a/apollos-church-api/src/data/people/__tests__/resolvers.test.js
+++ b/apollos-church-api/src/data/people/__tests__/resolvers.test.js
@@ -2,14 +2,11 @@ import { graphql } from 'graphql';
 import { fetch } from 'apollo-server-env';
 import { makeExecutableSchema } from 'apollo-server';
 
-import { createGlobalId } from 'apollos-church-api/src/data/node/model';
-import { getTestContext } from 'apollos-church-api/src/utils/testUtils';
-import {
-  generateToken,
-  registerToken,
-} from 'apollos-church-api/src/data/auth/token';
+import { generateToken, registerToken } from '../../auth/token';
 // we import the root-level schema and resolver so we test the entire integration:
-import { testSchema as typeDefs, resolvers } from 'apollos-church-api/src/data';
+import { testSchema as typeDefs, resolvers } from '../..';
+import { getTestContext } from '../../../utils/testUtils';
+import { createGlobalId } from '../../node/model';
 
 describe('Person', () => {
   let schema;
@@ -24,7 +21,7 @@ describe('Person', () => {
   it("updates a user's attributes, if there is a current user", async () => {
     const query = `
       mutation {
-        updateProfile(input: { field: FirstName, value: "Richard" }) {
+        updateProfileField(input: { field: FirstName, value: "Richard" }) {
           firstName
           id
         }
@@ -40,10 +37,33 @@ describe('Person', () => {
     expect(result).toMatchSnapshot();
   });
 
+  it('updates multiple fields', async () => {
+    const query = `
+      mutation {
+        updateProfileFields(input: [
+          { field: FirstName, value: "Richard" },
+          { field: LastName, value: "Walkerton" }
+        ]) {
+          firstName
+          lastName
+          id
+        }
+      }
+    `;
+    const { userToken, rockCookie } = registerToken(
+      generateToken({ cookie: 'some-cookie' })
+    );
+    context.userToken = userToken;
+    context.rockCookie = rockCookie;
+    const rootValue = {};
+    const result = await graphql(schema, query, rootValue, context);
+    expect(result).toMatchSnapshot();
+  });
+
   it("fails to update a user's attributes, without a current user", async () => {
     const query = `
       mutation {
-        updateProfile(input: { field: FirstName, value: "Richard" }) {
+        updateProfileField(input: { field: FirstName, value: "Richard" }) {
           firstName
           id
         }
diff --git a/apollos-church-api/src/data/people/data-source.js b/apollos-church-api/src/data/people/data-source.js
index 5bb6930..9b98e0f 100644
--- a/apollos-church-api/src/data/people/data-source.js
+++ b/apollos-church-api/src/data/people/data-source.js
@@ -1,7 +1,7 @@
 import { AuthenticationError } from 'apollo-server';
 import FormData from 'form-data';
-import { camelCase } from 'lodash';
-import RockApolloDataSource from 'apollos-church-api/src/connectors/rock/data-source';
+import { camelCase, mapKeys } from 'lodash';
+import RockApolloDataSource from '../../connectors/rock/data-source';
 
 export default class Person extends RockApolloDataSource {
   resource = 'People';
@@ -16,17 +16,26 @@ export default class Person extends RockApolloDataSource {
       .filter(`Email eq '${email}'`)
       .get();
 
-  updateProfile = async ({ field, value }) => {
+  // fields is an array of objects matching the pattern
+  // [{ field: String, value: String }]
+  updateProfile = async (fields) => {
     const currentPerson = await this.context.dataSources.Auth.getCurrentPerson();
 
     if (!currentPerson) throw new AuthenticationError('Invalid Credentials');
 
-    await this.patch(`/People/${currentPerson.id}`, {
-      [field]: value,
-    });
+    const fieldsAsObject = fields.reduce(
+      (accum, { field, value }) => ({
+        ...accum,
+        [field]: value,
+      }),
+      {}
+    );
+
+    await this.patch(`/People/${currentPerson.id}`, fieldsAsObject);
+
     return {
       ...currentPerson,
-      [camelCase(field)]: value,
+      ...mapKeys(fieldsAsObject, (_, key) => camelCase(key)),
     };
   };
 
@@ -49,6 +58,6 @@ export default class Person extends RockApolloDataSource {
       }
     );
     const photoId = await response.text();
-    return this.updateProfile({ field: 'PhotoId', value: photoId });
+    return this.updateProfile([{ field: 'PhotoId', value: photoId }]);
   };
 }
diff --git a/apollos-church-api/src/data/people/resolver.js b/apollos-church-api/src/data/people/resolver.js
index 46bf07c..f58e3c0 100644
--- a/apollos-church-api/src/data/people/resolver.js
+++ b/apollos-church-api/src/data/people/resolver.js
@@ -6,8 +6,10 @@ export default {
       dataSources.Person.getFromEmail(email),
   },
   Mutation: {
-    updateProfile: (root, { input: { field, value } }, { dataSources }) =>
-      dataSources.Person.updateProfile({ field, value }),
+    updateProfileField: (root, { input: { field, value } }, { dataSources }) =>
+      dataSources.Person.updateProfile([{ field, value }]),
+    updateProfileFields: (root, { input }, { dataSources }) =>
+      dataSources.Person.updateProfile(input),
     uploadProfileImage: async (root, { file, size }, { dataSources }) =>
       dataSources.Person.uploadProfileImage(file, size),
   },
diff --git a/apollos-church-api/src/data/people/schema.js b/apollos-church-api/src/data/people/schema.js
index 0e11f62..712e3d3 100644
--- a/apollos-church-api/src/data/people/schema.js
+++ b/apollos-church-api/src/data/people/schema.js
@@ -4,6 +4,8 @@ export default gql`
   enum UPDATEABLE_PROFILE_FIELDS {
     FirstName
     LastName
+    Email
+    NickName
   }
 
   input UpdateProfileInput {
@@ -21,7 +23,8 @@ export default gql`
   }
 
   extend type Mutation {
-    updateProfile(input: UpdateProfileInput!): Person
+    updateProfileField(input: UpdateProfileInput!): Person
+    updateProfileFields(input: [UpdateProfileInput]!): Person
     uploadProfileImage(file: Upload!, size: Int!): Person
   }
 
diff --git a/apollos-church-api/src/getContext.js b/apollos-church-api/src/getContext.js
index 4f6164d..fc2af43 100644
--- a/apollos-church-api/src/getContext.js
+++ b/apollos-church-api/src/getContext.js
@@ -1,7 +1,7 @@
 import dotenv from 'dotenv/config'; // eslint-disable-line
 import { get } from 'lodash';
 
-import { registerToken } from 'apollos-church-api/src/data/auth/token';
+import { registerToken } from './data/auth/token';
 
 import { models } from './data';
 
@@ -25,9 +25,14 @@ export default ({ req = {} } = {}) => {
   });
 
   if (get(req, 'headers.authorization')) {
-    const { userToken, rockCookie } = registerToken(req.headers.authorization);
-    context.userToken = userToken;
-    context.rockCookie = rockCookie;
+    const { userToken, rockCookie, sessionId } = registerToken(
+      req.headers.authorization
+    );
+    if (sessionId) {
+      context.userToken = userToken;
+      context.rockCookie = rockCookie;
+      context.sessionId = sessionId;
+    }
   }
 
   return context;
diff --git a/apollos-church-api/src/index.js b/apollos-church-api/src/index.js
index 6e13895..afb3fd0 100644
--- a/apollos-church-api/src/index.js
+++ b/apollos-church-api/src/index.js
@@ -1,24 +1,11 @@
-import dotenv from 'dotenv/config'; // eslint-disable-line
-import { ApolloServer } from 'apollo-server';
-import { resolvers, schema, testSchema } from './data';
+import server from './server';
 
-import getContext from './getContext';
-import getDataSources from './getDataSources';
+export { testSchema } from './server'; // eslint-disable-line import/prefer-default-export
 
-export { resolvers, schema, testSchema };
+// Use the port, if provided.
+const { PORT } = process.env;
+const options = PORT ? { port: PORT } : {};
 
-export default new ApolloServer({
-  typeDefs: schema,
-  resolvers,
-  dataSources: getDataSources,
-  context: getContext,
-  formatError: (error) => {
-    console.error(error.extensions.exception.stacktrace.join('\n'));
-    return error;
-  },
-  playground: {
-    settings: {
-      'editor.cursorShape': 'line',
-    },
-  },
+server.listen(options).then(({ url }) => {
+  console.log(`🚀 Server ready at ${url}`);
 });
diff --git a/apollos-church-api/src/server.js b/apollos-church-api/src/server.js
new file mode 100644
index 0000000..cfeb876
--- /dev/null
+++ b/apollos-church-api/src/server.js
@@ -0,0 +1,25 @@
+import dotenv from 'dotenv/config'; // eslint-disable-line
+import { ApolloServer } from 'apollo-server';
+import { resolvers, schema, testSchema } from './data';
+
+import getContext from './getContext';
+import getDataSources from './getDataSources';
+
+export { resolvers, schema, testSchema };
+
+export default new ApolloServer({
+  typeDefs: schema,
+  resolvers,
+  dataSources: getDataSources,
+  context: getContext,
+  introspection: true,
+  formatError: (error) => {
+    console.error(error.extensions.exception.stacktrace.join('\n'));
+    return error;
+  },
+  playground: {
+    settings: {
+      'editor.cursorShape': 'line',
+    },
+  },
+});
diff --git a/apollos-church-api/src/utils/testUtils.js b/apollos-church-api/src/utils/testUtils.js
index fcaa195..b9e5a55 100644
--- a/apollos-church-api/src/utils/testUtils.js
+++ b/apollos-church-api/src/utils/testUtils.js
@@ -1,6 +1,6 @@
-import getContext from 'apollos-church-api/src/getContext';
-import getDataSources from 'apollos-church-api/src/getDataSources';
 import { KeyValueCache } from 'apollo-server-caching';
+import getContext from '../getContext';
+import getDataSources from '../getDataSources';
 
 export function getTestContext(req) {
   const context = getContext(req);
diff --git a/apolloschurchapp/.env.production b/apolloschurchapp/.env.production
index 16fc8f8..d3b0b34 100644
--- a/apolloschurchapp/.env.production
+++ b/apolloschurchapp/.env.production
@@ -1 +1,2 @@
 APP_DATA_URL=https://apollos-church-api.now.sh
+ONE_SIGNAL_KEY=$ONE_SIGNAL_KEY
diff --git a/apolloschurchapp/android/app/build.gradle b/apolloschurchapp/android/app/build.gradle
index 70dcb10..0cc8441 100644
--- a/apolloschurchapp/android/app/build.gradle
+++ b/apolloschurchapp/android/app/build.gradle
@@ -1,3 +1,13 @@
+buildscript {
+    repositories {
+        maven { url 'https://plugins.gradle.org/m2/' } // Gradle Plugin Portal
+    }
+    dependencies {
+        classpath 'gradle.plugin.com.onesignal:onesignal-gradle-plugin:[0.10.0, 0.99.99]'
+    }
+}
+
+apply plugin: 'com.onesignal.androidsdk.onesignal-gradle-plugin'
 apply plugin: "com.android.application"
 
 import com.android.build.OutputFile
@@ -101,8 +111,8 @@ android {
         applicationId "com.apolloschurchapp"
         minSdkVersion rootProject.ext.minSdkVersion
         targetSdkVersion rootProject.ext.targetSdkVersion
-        versionCode 1
-        versionName "0.4.0"
+        versionCode 3
+        versionName "0.5.0"
         ndk {
             abiFilters "armeabi-v7a", "x86"
         }
@@ -137,6 +147,7 @@ android {
 }
 
 dependencies {
+    compile project(':react-native-onesignal')
     compile project(':react-native-image-picker')
     compile project(':react-native-music-control')
     compile project(':react-native-device-info')
diff --git a/apolloschurchapp/android/app/src/main/AndroidManifest.xml b/apolloschurchapp/android/app/src/main/AndroidManifest.xml
index a1ed157..988588b 100644
--- a/apolloschurchapp/android/app/src/main/AndroidManifest.xml
+++ b/apolloschurchapp/android/app/src/main/AndroidManifest.xml
@@ -10,6 +10,7 @@
       android:name=".MainApplication"
       android:label="@string/app_name"
       android:icon="@mipmap/ic_launcher"
+      android:roundIcon="@mipmap/ic_launcher_round"
       android:allowBackup="false"
       android:theme="@style/AppTheme">
       <activity
@@ -20,12 +21,18 @@
             <action android:name="android.intent.action.MAIN" />
             <category android:name="android.intent.category.LAUNCHER" />
         </intent-filter>
+        <intent-filter android:label="filter_react_native">
+          <action android:name="android.intent.action.VIEW" />
+          <category android:name="android.intent.category.DEFAULT" />
+          <category android:name="android.intent.category.BROWSABLE" />
+          <data android:scheme="peopleapp" android:host="people" /> // A
+        </intent-filter>
       </activity>
       <activity
         android:name=".MainActivity"
         android:label="@string/app_name"
         android:configChanges="keyboard|keyboardHidden|orientation|screenSize"
-        android:windowSoftInputMode="adjustResize"
+        android:windowSoftInputMode="adjustPan"
         android:launchMode="singleTask"
       />
       <activity android:name="com.facebook.react.devsupport.DevSettingsActivity" />
diff --git a/apolloschurchapp/android/app/src/main/java/com/apolloschurchapp/MainApplication.java b/apolloschurchapp/android/app/src/main/java/com/apolloschurchapp/MainApplication.java
index 636bf2d..31d896b 100644
--- a/apolloschurchapp/android/app/src/main/java/com/apolloschurchapp/MainApplication.java
+++ b/apolloschurchapp/android/app/src/main/java/com/apolloschurchapp/MainApplication.java
@@ -3,6 +3,7 @@ package com.apolloschurchapp;
 import android.app.Application;
 
 import com.facebook.react.ReactApplication;
+import com.geektime.rnonesignalandroid.ReactNativeOneSignalPackage;
 import com.imagepicker.ImagePickerPackage;
 import com.tanguyantoine.react.MusicControl;
 import com.learnium.RNDeviceInfo.RNDeviceInfo;
@@ -31,6 +32,7 @@ public class MainApplication extends Application implements ReactApplication {
     protected List<ReactPackage> getPackages() {
       return Arrays.<ReactPackage>asList(
           new MainReactPackage(),
+            new ReactNativeOneSignalPackage(),
             new ImagePickerPackage(),
             new MusicControl(),
             new RNDeviceInfo(),
diff --git a/apolloschurchapp/android/app/src/main/res/drawable-hdpi/ic_stat_onesignal_default.webp b/apolloschurchapp/android/app/src/main/res/drawable-hdpi/ic_stat_onesignal_default.webp
new file mode 100644
index 0000000000000000000000000000000000000000..b240272929702062ffea691abc6a09dce8973322
GIT binary patch
literal 334
zcmV-U0kQs4Nk&FS0RRA3MM6+kP&iCE0RR9mBftm{ucDxB8^-)ew>u!_fBqe|Z6nFK
zm8E^}>VP8y000<<VR!(*00tp02q3@^L<m9LxDdi00qhd|_PGEb0ubSY5WwRgKoCNR
zo{SS>7)}5HfGkP2P1~B+wr$(C&FX(+#=>0p-uJ#E`ac2oFR!ktsi~<h)Jbr#%yMY6
zNX32VrMAQn(XkR+vHb#dud$Ctzj1))JAi4w1KC)R3%BM^8R!r?y=DO(D(qaAy)I?V
zY)<Yge7ezov-WR*A)i&bGc!ArEtkqiS&<oet@9X0`=sp~VBBLzZY_8!hYs~`vJ{$<
z&*r=dv?tW^1u&a;BsUg4k;|;sFIkLD3f(#LXjiQ1Q&w}X<k}LC<*_oY7u_38+!lt@
g)&q_^NmWl?Z}ll7xKE_)`W+=yy!(AM#QrY<02vCIEdT%j

literal 0
HcmV?d00001

diff --git a/apolloschurchapp/android/app/src/main/res/drawable-mdpi/ic_stat_onesignal_default.webp b/apolloschurchapp/android/app/src/main/res/drawable-mdpi/ic_stat_onesignal_default.webp
new file mode 100644
index 0000000000000000000000000000000000000000..aedbdbaf632c4d2195d0d160965bcfe99022b791
GIT binary patch
literal 254
zcmV<a00I9}Nk&HY00012MM6+kP&iEK0000l7r+G&Co=!@KmQ8bwrx|D+`R(j0003h
zgb)D`fdJy7V&EePDi(kcqM;(F2!es&K!}cy0U<y|LjZyR1Yn_}<6>e$01*HH0L0q1
zO*=cbtsfgdc0OnSRXvT71|s?|AW4kQ<o_C3Tv}QhZDJF4nz(^>gQq*to3D2O9M^l{
zz0F7M%R`R#u~O%h!NPQx^EzL=CJ%g%R=<YBWEbnzuISGvQys1=AOGPwN$&Zbtg?kx
zl5AtI${oGAB$@o<vErF7PbqXuf1#{}i?u>$I4OHm(`V_~VI8YQ8@0PE8k?wXJpWJt
E0LON3uK)l5

literal 0
HcmV?d00001

diff --git a/apolloschurchapp/android/app/src/main/res/drawable-xhdpi/ic_stat_onesignal_default.webp b/apolloschurchapp/android/app/src/main/res/drawable-xhdpi/ic_stat_onesignal_default.webp
new file mode 100644
index 0000000000000000000000000000000000000000..617b9bce20254332c96d4dfe0c0a766879a38a9c
GIT binary patch
literal 416
zcmV;R0bl-7Nk&GP0RRA3MM6+kP&iDC0RR9mFTe{BucM%C8_E1h-;<5Q{LeqbwrwM)
zD#`b%ZQF)fQ|UKw&Hw-a+;s>bfOrsq0AUD22%rIolLg=f7=ReUA1D>>2UxaYMHp`E
zJBor3EX@dlJHbcnO8}5<+cq7Y7-h#S+qRXmZ7Vqc-^hOV-IG!`qW=>>|5A%#!IXS3
zt|^pmHXJIHEu-@Ssm>X3q%a0qai%a%RUVv$5N74(LYPupD*(s6TDnZGkzr~YaG%@?
z>WrctvC=Q_S!}rlTqo7TaFu8hjYw^ycA_x4vdGjjeD@Mrt^vnnhS4$+(Kwowxj?OX
zA@uB$h%$Wh<k2PIHi;RuL~snH1e}kk2?bH6LSGBR7Z;*4!2SBx(IOd+pgnEnY1Cj8
zK<wAm$MDH%L?>uW*DhKh#bI<~)#GDaui{6X&@+l294d5-=CxR^&>SfbqF0ZOIOC+6
z4{?W%IdpGVqeHZz!TpR5dQEPkY?Zlo79KE{k~%U~nUUgvnSK_ZFtaarXH)ZX0VdUo
Kx(YC=_MZk;NW9|!

literal 0
HcmV?d00001

diff --git a/apolloschurchapp/android/app/src/main/res/drawable-xxhdpi/ic_stat_onesignal_default.webp b/apolloschurchapp/android/app/src/main/res/drawable-xxhdpi/ic_stat_onesignal_default.webp
new file mode 100644
index 0000000000000000000000000000000000000000..0668394cd69f44ae8416cc2c81c753387c4b397a
GIT binary patch
literal 582
zcmV-M0=fNCNk&FK0ssJ4MM6+kP&iC60ssInN5ByfzoejT8_E1hZ@WD@2=hPx1d_J+
z+pfrM+a~Ljw0s8^17<=9;rO5@LI6Ps5J31OwdXm8;Sq-kg4%ngehJ4f%pgB)@8PA`
zw#RIF@8LL(8uXMkhw38%WZSlF+R=(_+qRvQZCA{)E4FQ|56-=Fuf6tLo+A1`0d!3<
zw-hY)bt#GADwiH%LoUr>M`7;dvtfrj?@j(X6S!$|ndnL#8$WPm%xu<?s8ch}apNWn
zzI9_<Vm-ix6c(*<;fc(M13vS>;6vazLSG?+l?j*LxJzF*uoX!EfdA@(w}Bp_TL33(
zYhbXPDE<O?r0p}X;ZH<=fH`F`XTV1yq8k9`>$=Tg>6O@X;DfFSV9oCe{Q@?FG^H{4
zjy!e(T&L+7QsgQ63>Z`7y9liMdZHh|X_TH42H%j^c7Si{=|c*<MV<oVYC?8_Wgl<!
z72p&tO$@#!uoZct<r|WRgr5KlK04ygfkhvLJ^@^)<1T|Q32sKZbxb1JSlBVJ6RaVF
z!Fe(q1-L=O3*@;;Bl1Oo?=q5Q5_$-n#n>xjaE^?J0ls6eA9-q4k4#t#-A6LbLiPbp
zv(>`j3<(Y*&uslf9!u0BOTKmzE|7GI;9Y=A?A&8;nnVYXK08y$Lz!x1FT_R`qp31M
z+W<G&c!eDI3a=pFE%>h@8qee8Dp>hlxj}7{Vqu5cI76z9)xVVbt#8FoCh<}qm&@E|
U2m57aTsR1o2xKQ)B(7}&01H|SRR910

literal 0
HcmV?d00001

diff --git a/apolloschurchapp/android/app/src/main/res/drawable-xxxhdpi/ic_stat_onesignal_default.webp b/apolloschurchapp/android/app/src/main/res/drawable-xxxhdpi/ic_stat_onesignal_default.webp
new file mode 100644
index 0000000000000000000000000000000000000000..fc1df4c85f09f462e869ef0e65b488cc3493dc49
GIT binary patch
literal 828
zcmV-C1H=4MNk&FA0{{S5MM6+kP&iB{0{{RoU%(d-FQ%Yv8!7xr?`wMpVgBb|A%FlV
zXcV?>+a%qScL25EBO!a~2rAeQX67HL2UZh2fR)GxL8>A!I2{tD${6dhp#30l{iVf<
z*HanR{v`;>wr!iXGoNk6c{XFb*tTukwr$(CjrnO=Ypa$@ME@PRZRAMi&fS|j{s8|C
zMXC^*h=)}C&O>0@QZ)&IS*PbJ!V>pR4=WIq-UbhsA}D)J@+=Ag$^K~)c0oYK8a>>K
zfLt`omt+K^h=v9t7z<2uESxdvv1$G^Lm=AI*i-~!qj_#33<)32!)gSfFD)!b5DwVn
zMKl7C``adLL;xmGwqY1$+Yx{(l-0*8zp`(s@UB#Oo<v|XWkcZIVtq1er0k^s<<L{g
zYJu4I6#Z=h&pIj3Ba>ldI{Z?<<wXF{m9jhVE9o<3RR9q4R{g5H>QC7N007ogwh~?)
zrffa{039iN9RrV={4ra~MZcn~J3N|9*<Ji&HDx>D(RIq^m`<eM)8S1e6{Yw`)C<an
z!<%K4-GX2xWoO_^)N{&aTI@pd;e|dxuvi=opHVgoo@}G+8br$}yAMB7zS<0+4OBG1
zi$PlVLS-rWgt9g8;y7iO?S9g4<KRK_zm!eUTGdj~6CO;{nzx4L5oNpK!7a)zK(&an
zpP6v3#(EoHt@RoO=T>OFO_mQ2C_4|=qF+*W&cSA?5RP@zT91c;3a!~(IJSez>dI^f
zc28R}MZl@FZ<L*ekvUYfgHuDb&SPMtOzXBDPMy*=sHTTlw<-G&4~JT5W6}v2nngt)
zI5b0RJQ9XVw08U8&^_&pFW1qs=2s4!snb4?qcApI>o*S0tkU`pgRw%b-zB&b`$qe`
zvtaJB_9}rRJ+!umU}37(a3LJorL`Rl3;EP`osLeEGk$1OR))(1wGMD%gw}OGtW456
zZh{kMou0n6)H;4jgaZZC+`nN*JrwEZBD3k$L01<59{tX<PaAqR(LQVG*;O|e0DhI*
zrWd_iVw*km?pc(B3jp6b+hsHZu*EJH=$QNKf+7ZCfKBEx2uE!4n2x!>E{JFvh$Q?+
G1^@t4ZiHz7

literal 0
HcmV?d00001

diff --git a/apolloschurchapp/android/app/src/main/res/mipmap-hdpi/ic_launcher_round.png b/apolloschurchapp/android/app/src/main/res/mipmap-hdpi/ic_launcher_round.png
deleted file mode 100644
index 1b523998081149a985cef0cdf89045b9ed29964a..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 5024
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

diff --git a/apolloschurchapp/android/app/src/main/res/mipmap-hdpi/ic_launcher_round.webp b/apolloschurchapp/android/app/src/main/res/mipmap-hdpi/ic_launcher_round.webp
new file mode 100644
index 0000000000000000000000000000000000000000..42aa619f04951d7e857d309cb6326bc2479fe766
GIT binary patch
literal 1056
zcmV+*1mF8oNk&E(1ONb6MM6+kP&iBr1ONapFTe{BH|8jkWLc@do<1N6{}NF0{xZ{b
z!~(;%Z6opaANZ|pNRcEtl49iR1f=7S;!x<Gihx_&wrXXb`vup?C8Q6EAR?s!+94<U
zA!RU#+}$0Xd`|$xA5Z}SDj>iB2oNBFItY-!AgF>WsDlKCKn+w?<9xn)E(|U<E;cp}
zM*WX87X1$!qf|CIvPojoM@G-RBx11XGy2HJrN5EHBxgMLl7*!{B{HdZu}NZdKaWK9
zK4@~1C`bK|MECPBGU{J_h7Ch~BS$v%E^cFoO@c%$4vB1RToN(3Fi?6bK!7gDK&CSB
zIoUe$O_tz76tmrA>x0n=ji>;7*kVF}1lrTJ4Q4*7AFw2#Tn&V|>Z*S<5p__2OF4yO
zf3eS_9aY6~wL8Zbv%9+|+dkW_o42hvyc9p5>+x)YnPxjI%LBcNXSq_IP`%q<_Ly#2
zEl{l38h-wZ8)08$i*0SP|DOJxeh%79JyyE>oy1yIt=s>Xn*RFO{&?>}!nSQ^-im+T
zH^qnA);-&{ZF}pi`mJqiwr$(nA4~E+NsmSJe*)<Lc=u+*t($iTN@HC`X|YmD6_-}j
zHM(}YzDzO8>TkPoqqamjSW<h#DRI42Ib3>OIFeOeq#Q4*&T`;RrE<0M4(ngJa=H8;
zLslu*tE85wQOvxYoSd9ohN=-7;#whR7644(6kZc{?>ZIp@E{X*F;wR}8*xQ(*TQlM
zM_mzCe>+%{tw!Z=I{sS7tBSh^wp%#rsx$>%W-SFUb}E25tjj^Bw{4u<(Eyfh05JFn
zr|m5f$$N^s4FGl@9Rgq-N8OV|ftOhG0E}-}vjI$DT?!=fT;LoV3Sfm&8v$S+=YogG
zcZRbb0QM?%Vkm&+oHITme-CFmfQd>eH5b5`JVuY7D71xf0035*HUq$RMoTDBSQlfZ
zX}{^@Z~zM!U13C_{dxuC08Cbv^8pMyuGb$*6mn5-2LP<L+6n+0^e%=F`S0s3GG$wx
z9tmKE-hDrj_o>#Y5dfws+l2s-t@YGP6#P+Z69BAjx7}u1rS&nG$cX9FnQ7vVZ`bIH
zF^DMiiN--Vx>Msx7!i@@eWBeNXBOKPe(;!#xJP!AoEe#K^C-?R3IEp?tM)?<+q8W3
z3lka9&#c^j7HyEV_s7|RaQ26nY-QxPZuh#sMM^sgi2dB^R_o{30MZRgeAD7i%bUa?
z(iWbiFTHN`eo68OJrbUT@8_L6_dUTQh${l4f4}T@ru*gZ=s-aZ8sRCwo;UNFpZ`h;
zH^^BT9F_L-^}{BeriZV8rbPuya$I^NlQRB%diCP*g9nday!!MfBPr4=$yFKTi-=E7
aP0!3sPfd=G@C8X4fI>=X7*a|>P67a|pzpu{

literal 0
HcmV?d00001

diff --git a/apolloschurchapp/android/app/src/main/res/mipmap-mdpi/ic_launcher_round.png b/apolloschurchapp/android/app/src/main/res/mipmap-mdpi/ic_launcher_round.png
deleted file mode 100644
index 115a4c768a20c9e13185c17043f4c4d12dd4632a..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 2858
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
IM6N<$f{l1_%m4rY

diff --git a/apolloschurchapp/android/app/src/main/res/mipmap-mdpi/ic_launcher_round.webp b/apolloschurchapp/android/app/src/main/res/mipmap-mdpi/ic_launcher_round.webp
new file mode 100644
index 0000000000000000000000000000000000000000..f77fb4bc60914a3e469a4761dacc5b047738fcca
GIT binary patch
literal 1876
zcmV-a2dnr}Nk&FY2LJ$9MM6+kP&iCL2LJ#sN5Byf+ECE8jpXo$z1;&LA|^nDP?=4%
z|8b#0j?}hoPuphqn3?y9nVFfHq0IIE|4#_mkCh$!tR4+|ug2w8amIdU)pMET24qRH
zP20Ni+4dXSwr$(jzWZD#5C9Nx-nPxzwr!h9(Mq<rWZSmAH8a{a&w(UKZL`akNLGzA
z@B~S=Z5g)JP1bGOw(XK_+qP|ds{=bCPd4GJWW=}4c;6Nj000a)_qL*K+t$1#Z;jP!
zUbBtlEvkCSwrwlI4FG^(b7?%=wr$(CZCkZ%9zYNXg0;f}3+%5DBe!iF*;{Ti+`ez%
zZ&3pfzyJXlz)x?JGyou408niJnGS&c)B6V}wbKI-0l<{>0QBrGw(QTcHkZ{{oNEea
zM)a=>;Fv~D;Ve7UJLxm-2ms`797dJ@yVd2pjp$Vo{8My}`;uLU^e-JTYSL-V;Zl*^
z_2sWGS=G+(Q){w$MtD@VT<R_QlEwQ0$g)^)q-;AH^F&~~_sR*sp*XIXxZkzeDV^uv
zHcjE2O_XX1=hCrLgjXJqd|mlr6{RvoPtXJCs$`~O>d~Aar#e%r82dA^NI;b*k`;6N
zostso#cz1*yT{tmH_y5RJ-6-+jOd-ns0)E(N<^h)PhcgzbCT6iJW@o@E}c8^{||cP
z<C`f7kEqH-+NuvQmFYTa+!TC*X<E7m)s-2Q=6wLa@nC60zf``8sv<UH(|c4`amX?4
z(#txC^@R;8o*oQg>*5(3;lN{}$~ybB=^Y=vhbpSW!*v9w1tn=@+T)K9vm0t4*B5rl
zaP9pAysYlsq7I_cEjoGJd+-`SjwuQ6E-xa$sX)f1y`*6Q#G1?$8SSIswxOeijB~$>
zq>uid8F{1fMMgUh;~jW>x4eA~Mmq5H&Ip4+#dW!fUjjM$>??^J2OblSTi@1{oaTTN
zBqZ99dH)hWyBa7pnFTV~Ep!KYRZNL^M?Sy71OwwsWZqPmFu7-WC%-AYD(YAIIk2}c
zpXk95WcSzv0FM9uv8GZ`eXaSPxBz+W(p^y<;8ehUb$ykTaq(6t$jXZ#1Fv1Wd-0io
zd-9P%#(IKkf4iKN#yG6QZ(l$#zj}@gEVTu(nPFM1ol14-z|%WGZ=5{1$$JhwwL(<k
zt5{noV*+M%W}QlvkZ6PES5itD9cO}u%GxrjaJ(-j0lfOcF_mgyd<o6o1~Dn6G(@A}
zIoY{>rVmFV3jZ&Nm_XQAx+OwAeT$DXDw_Mc@L(dM42VR(BQ6j(hc_bBJroyL<|w>y
zI)_JyL_Qpo21z6OBSP(=*h9sK3Vj69zPneTIBQNJpb<ZSq>igOe9)La;JUPVMKWz@
zZ$d{#wja$X6V+IHpfR07Z$WXIWE$*OL&wD20nIp(AdqM%oRg6LZ(lt_ud|qg^JZrt
zPC_;ka_DDF0z}oB9THMRlmTkzme24cHH|eWDJst*AzQNXhZSD@jgpYQp*FWDjwcCl
z$f0EY=pN~{K3#|jK)`zVQbr*%rw|<Z{6_dV-P|~Rgp@#!3PsubpNt8pm(C(6MCZ^t
zwRntgsi-bNOH)q=MVWVF3V^V-U*Cv+2t@DDnwb;9xA>SO&~otQ(+_3jzi=r2gAOQ=
ztxE4%6FCXl1lFESrw2vgRu6`-c5nwVNvRIXO6OB2066CW2mZs?25X|C@+_gMLsKit
zN<HQz{4W4)&zzU#itFb3(LHrJ{`be0L8JKhRs5hi=Uf5~l&jJQRz!gw6?Ll+IfXGw
z%Bs|X-zF0mIUu-sQ*1@l)YG9N%(Jf0$v;lO6aVlQw;DAR@63S=QD}cug!fA2G`G0b
zC`?*dNI--1o%>32B43M?>Q&S<RPmK9138%}4p5*k>o9L9+?f*jJLM{C%2c<oG=qzr
zUe;kA`J9_vE}dnolzAlSnmFu&Zh3rDrN}okuI8o-K@e^o4QedEs+4%|dxyo+T>u`G
z&K+c{l=#};w8fqz=!rn*;p?zUfgipNwFBL910X%%&aO3m@w?8vrkpR`o+RwDh8H&5
zRU~#<$D0@??X(17L25~xb6ISYZCZbV)Gxs)21t5fUW47UuVt3$nH)%KPI90D2a;fM
z^S0fHep%IuuK3!f15Pc!KnO;MR+8!q_iR$?4?BM8z{a5gpnwgUE4ut1y-gd@pZ(eg
z!Sj=y_KprDz=84!%=gSCRwRz>ru}Q*r_hnM4<LR42h_ms&`SEN*q)tQsr%2w-(S8-
zY|L_i*Z~?~yL~eD-qTop{(<;@h+w>{<GaJ=*eDQy_zrwf0n=GEZu=KgZ{7Em#Sfdq
zxA~Z#&gs&0@7VVV^P24mZNLCYPy=Idm{sGwX(aOaX3_Pl);kY__n)U8e=H3bM?bzR
zh@3m|wZAPkgYgL#AORl%uN9Q?pbsW}U^&(I@q1pk7NWH0%YZYt1c>hdx(!GnP=WTr
O4L`T#9A8WR=9>eIC7pZ#

literal 0
HcmV?d00001

diff --git a/apolloschurchapp/android/app/src/main/res/mipmap-xhdpi/ic_launcher_round.png b/apolloschurchapp/android/app/src/main/res/mipmap-xhdpi/ic_launcher_round.png
deleted file mode 100644
index 459ca609d3ae0d3943ab44cdc27feef9256dc6d7..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 7098
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

diff --git a/apolloschurchapp/android/app/src/main/res/mipmap-xhdpi/ic_launcher_round.webp b/apolloschurchapp/android/app/src/main/res/mipmap-xhdpi/ic_launcher_round.webp
new file mode 100644
index 0000000000000000000000000000000000000000..7a797f0543d54597689b0cc60bdbe0991041fd5d
GIT binary patch
literal 2506
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
Uz23=piwDP1nn~^NeJ_6+1efmf_y7O^

literal 0
HcmV?d00001

diff --git a/apolloschurchapp/android/app/src/main/res/mipmap-xxhdpi/ic_launcher_round.png b/apolloschurchapp/android/app/src/main/res/mipmap-xxhdpi/ic_launcher_round.png
deleted file mode 100644
index 8e19b410a1b15ff180f3dacac19395fe3046cdec..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 10676
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
a9sdtN6eHRrdyqB&0000<MNUMnLSTYHIB(_v

diff --git a/apolloschurchapp/android/app/src/main/res/mipmap-xxhdpi/ic_launcher_round.webp b/apolloschurchapp/android/app/src/main/res/mipmap-xxhdpi/ic_launcher_round.webp
new file mode 100644
index 0000000000000000000000000000000000000000..11057db4ed3eaf8b8d688659f3f54e90a3dfa04d
GIT binary patch
literal 4034
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

literal 0
HcmV?d00001

diff --git a/apolloschurchapp/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.png b/apolloschurchapp/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.png
deleted file mode 100644
index 4c19a13c239cb67b8a2134ddd5f325db1d2d5bee..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 15523
zcmZu&byQSev_3Py&@gnDfPjP`DLFJqiULXtibx~fLnvK>bPOP+(%nO&(%r2fA>H-(
zz4z~1>*iYL?tRWZ_k8=?-?=ADTT_`3j}{LAK&YyspmTRd|F`47?v6Thw%7njTB|C^
zKKGc}$-p)u@1g1$=G5ziQhGf`pecnFHQK@{)H)R`NQF;K%92o17K-93yUfN21$b29
zQwz1oFs@r6GO|&!sP_4*_5J}y@1EmX38MLHp9O5Oe<w9pErPqvDV{c#_ifw%-z|Ug
zqc&M38l7*Mk}`-qe-0BF?VcKp^F_A=YfP!XTw|W`OJYsCtjziC-EkT0JJ_|j{Oskl
zI#Pa$wn}kQVeR@JYuc$g?iTZt=o)8@a1vLo=<UCmq=!w0Pdd37x#EHp|HiSRm)t!F
zZ?Ja*PTSuuRhAKJEWy19Uak7CR{i_AFv2ZR9_9Vyd&FC%u`&V0>0Nc6{^^wzO4l(d
z;mtZ_YZu`gPyE@_DZic*_^gGkxh<(}XliiFNpj1&`$dYO3scX$PHr^OPt}D-`w9aR
z4}a$o1nmaz>bV)|i2j5($CXJ<=V0%{^_5JXJ2~-Q=5u(R41}kRaj^33P50Hg*ot1f
z?w;RDqu}t{QQ%88FhO3t>0-Sy@ck7!K1c53XC+HJeY@B0BH+W}BTA1!ueRG49Clr?
z+R!2Jlc`n)zZ?XWaZO0BnqvRN#k{$*;dYA4UO&o_-b>h3>@8fgSjOUsv0wVwlxy0h
z{E1|}P_3K!kMbGZt_qQIF~jd+Km4P8D0dwO{+jQ1;}@_Weti;`V}a_?BkaNJA?PXD
zNGH$uRwng<4o9{nk4gW<l$VEJH)<K{ui-~Z%XC`3<QsgE=Yx17)*%#MCS$YCi_90>
z3E-`-*MB=(J%0*&SA1UclA>pLfP4H?eSsQV$G$t!uXTEio7TY9E35&?0M-ERfX4he
z{_Hb&AE`T%j8hIZEp@yBVycpvW2!bHrfxbuu6>_i<^9@?ak)9gHU*#bS~}$sGY*Fi
z=%P&i3aH%N`b;I~s8{&6uGo$>-`ukQ<8ri(6aH6p_F`Fhdi6HuacwfQn10HVL7Om1
z4aZpjatkbgjp$L5Mceab#G#C)Hr{<VwXm<QT4CfC9V_7qU;FSQZ2jJF863B9L4z7j
zx6Fqs(KkH|gK~_Uiw~XDqQ6UEPdi@{52U0^w7?FU<(Nt5ayi~wj0UAo5G|gu{CoG*
z=>^W|TJX~?B3@2buj0;kfuNTf4c3*Au~O^aj=W2$j^4okeCxh#lwexN@eam-u4dNz
zN2NIuIM4566{T&^k%4ftShcPk#=im-zXm>QWqH^0>A@?MqlDZCZ@8Wi*@tvhn5p<}
zRwFm@gz|WZp91S5Z{}tB^e9|FBg(~Ik+?&_53J6ye_QQOSJ*846~H%s#LD}|O9v9H
z1fLrrgoPo_&bs}eqEr}2en3iqAcP^>YsKiez$5-6m6(#3ZZ$@M5Ck=_Vv`QA>1A*v
z3w-nJ_;5Nc(0_%`kG91#sotIlhO!*5#|yg+Gx{V;0ty`*=Y9=jCh$l*=fE(~t}%R#
zc}iNpO)OZX`P=leQY^?^<?O>DF1w%FJh>Dkp}-o5Ig|2!6^E>|W|zc~W7gF;MtxX7
zV~UjQNsUC$EYXpN?~o{83D2c*0~7;Tm~%FRTAnnt3ln{?DcLZ=NsBY|JxwUA-6K3V
zP&#|9t#a}Q4{Sg{6v-OmjJBkCh>m)8vLNm4lStMUT$)FZeJG05A)px&o3H)5oAl9=
z31@?HyCriHcCDnt628BFN+T;U69Wl#itfvqIDBydMvOJO0Zl?go$cfG5>TK75CMj3
zakLaH3=&J0e}Xmqlav$S0>E@_Yo_V~3SiiXrw)$&!XhrHCDQ%P1BHPusuKr0LthAB
zg)mDrLy>2*yevMMOQe6fZ|)%PEb!lC^*9yaX9UMy7-v!fSICssTR|wML0Ic2BhKAq
z3<f8&&m2j=Wuf3c5jcWz#Z~iQ+V8WR|GR`1W8w%+L5t3e<K-07iwLS;x7B5e>I1X~
z7^_!M&;6Z9?br3#HU_&kfJ~%botXQkC1v<}ZZxN5q-T)|Sb2cW3WYUBbDZ`TH{!*^
zrmAeRM+(QI>D+?}guZ+dH*X)@^!O|oL69&Avbtw2^M3HP<bBo&s(;n3vG;|)af^JY
zb^jTD1^vo>(+2kV{O$^3BN1RLfrC8nwz7=VhBR%>!;7WR<~;34B_j3A{>^@e@H+Q!
zL=UNr<o<`1S(J7ArZdIHafRf2=ko;_o?ugt3(WKA1sdfzmVsA1l+xS&a;hSb=-ulM
zr&2M)=)_De*7c6lo92;R8x+JqSNFuxQD=<2?o?|BNppOj)+eSbM%3B5JEKT`{9`<|
ztL`|(>1(JvKAQLKT0b}EMn|QUWtY>!>8-t@fVj_&`~gGd{_aPy5W>0u<h4VK_6JK^
zvs=fxSE78mtdkFE*61zu$g|PJgA+@akx<Pn4>5L$zrsU^rBO=i$`#Xd*>kh)lPf}A
znNXSEl`+HlhXtylgS9(#N02A=zVV?#OF?)Gr>(HszVa+1*2VG@qYttJuXaBlzP`Pb
zX)ueu?s&}R>xI#^*r4gR?tMFi!_eeKlIM5g)Nk)Y^h=ZCR**xY>$E5knctRrq!zw?
zX{2|hwR9LXTY1)pTlKg7U4_ej{dcj2{!+1sZ6<@9^?mn)=37V)DIAvS(}S`IgFO!6
zn({?nYw`Z-@jvt@!q|5z?TI3(dx^1szSn%azAw<KYl0YfrK74z*fb$3aAi_@J!^`o
zA-T_`<Hj8P=e*UdQfi4QkU#q~GQvC*=->p>N#fk^kt|=MejKtacAs@Rdku#zT>9$s
z=m7ek)`=O7hO2n+2Uj$QUs&2EIq<NC#L6wvdM@RbY)u-<q>ycF{(L9Y#^IyxXA%R@
z&j`VAprIV~d!pH-7~zA+bjwVn3kOB3;rlg{nr&wHV12N}g^i>Upls~=z`VX>9HQ#=
zTu&luVb@_Lkz63&&^_M!6(-2^0?GCAX9XKp{O={pd|AlIMGriX6s_Jy8_q9|{5jLc
zxd1aj_ucE7Vcti#$r!s~w~W=XpaLQ}#mX`apR7^n9-d<XOi;IlJ4fmy32!)Um=AZC
zc%mFZm$5i_<}kGzgQH)YtOyVQ!3cf2O|s_Vs7wz*X=+7T<Pw`&t;CT_E2b<yyz_#3
z&kMQvOX~`MyhE5S3)2+#G|0!Tm)1}iZgV?hYZ-sdl?#vnDW}iLMPL7M`@HSdJRa2u
z8D^@Nr1qqSu&Y|Q%7hC;>3?O+adJYr*L;{c)x@REewM@vZN<Yc8q@;}AOHf40cz0R
zF-j7deqx*QZssM+=7pFt(`H~}>0njS3iE$88KHPWAkWt((OUMherUnPm?i&8@!9E@
zUW^$%CpdruZR0ohzUq-XQ$KEIB8Sjgs1+wKSUH&Y;=ee%E&O$X18{&979d~K2uJW`
zd*8awHCXb;Q>4z$B|sPNv+Zd__f6&@KmS+L`z3H1x+x|Xs7-N-iw|1C=QiJdU)f~z
z{vO4hpP`0MyqmwIHN=l?jSq>OKG6CEC#O`*blP`?>)CUWj5j1cB>%6N7;`kfZ1iQV
zam~SDB?{uyp^=vF_u|=8xn3S)L;wF8ZRZV{bezM-EH;MC91<OgIt)!LiaWkCoV)P<
zqIIp=0@+iKx^H7?`cqZz;cJfA^+h~jMTB1Y`e-bxgoH7;^wnaYSmCt;9*B*E?_f#S
zq>JQZ{KcZZ$IWJUy?SJGeGUWm6PeuO8-K2|hD~p;Ls~9Y-4lE+?|bF)XaNKUNX(K7
zBQk0Z{n>hrH-CA`bTr$6z0n@Cn9EL$XZ3=X7NopjcI<yYgc=r<3#dAFPZh}hz0|aJ
zsQm+y*@0jDolk^Eh7c>=;z<(X7-oEmK}BId=PxX*!b7Q6oL@ufd%eEPc`_la(}WkT
zKe?-YJWn^6b$^{dhdJZ)I!Kn6c}iw%o5mLDyvM7qJZ<XpL}9Sm&&>bkG<FPs<n68F
z{JL&ptTS>G?zLU;M|W;Wis|A;SuY3{_X53`+>9g^B%O4b{;^t$^;{oKHbo*CY%u91
zp#2d8Pg=I0&UX{qwr=y=o_^BLdk=KYH$=Z8+k|p8V5`<Tp!}I+biA%_Jdbd8ntU{O
z8xW2}jePoBeogC|B*p!|ejyx!8H1;DG<+jP#Ep_p9sZcU|89ln##<Km$-RL#fjc<d
zPP+=vh{gD1|IZJo3#0qEIR!w@Utc~P(b;lt3MVk)aco|q&;R`Uu*ILB)3BHPM7(Ru
z&r~KZ#9X@mtIpMTb{{YK_1%C5r6Do&W5l_lZ#0dND6TgV>ph~3b^{^NnL4m_+4zx(
zeoTt@f<$DmsB1}o%R1Hx`ToPuBl+P6cb-?uF{1!z-2WvdR4+vJ*SYTic5@gwnzu%e
zD!HF^X=$ha^#1hi*@~^nDL!HQ;MC&e+6=onaJgm-J-+|>PpmU=SIe?EQE5vJiqziw
z*K=Z%bWZz_we!qiFqE`I?#$yozNxIE7Ei;<t#9_Q2Il2<?PV|aWxSR*{7TQ0<pSgK
zG}WYbXUgAUi8)!qxPg+ge+t`9g?TiOkO8}_rFH8j>csv>++r*?)0bozFpF&oLh94u
z-2c2L`5B<slPr=pZ-V@VTTJ#A^qrrn!@ws}4IKIC%Rs-fjKdm<A2|KOW=f&Zy+|9|
zUZZ!L@%edoOvf=Vyrm_GaeTtc=UM6P0htq*Wad49{($UWxoo{1I}?|s<Wz~7SY(z$
z3b9{ESIm-^(N?`HGfU2wZcA<CP)yjk98;2y!a$=nrbSJyeJt9fuXm_?<VT|LKxmn%
zCB1+~5BnL^OixkZLNOxoR^XrRsjmwpOFyy*g3yn`Vl9|Y<1QC53{b)#6p)gexnNot
zC-&dZsye1hqXlLd(d;>arP7l>87|f)vxaT*9(!Q`2xBMZ&^JVj-|1)Tg!6OW=lk=w
zLwVlr!*<(l*L$a?ox3+%!~UIj3Ej@KD;W>1E_c)1szDi93BC;0K?drOQ>@$yi|DtT
zSir}!Yx>znf&b0KS;Lk7VKPDF@e>(qQr0%SNcGQd(p9StjqJ`QSW&c{ggF?5{d22w
zlkX%JTUq`<A(+fxdJGVbt2a`g-t7;K>;(3WSH+)WHl%qlF)iNG_?}K?ZM3cS7#u5v
zZ!apx4Apv=PWsn}eD%MI#=KA)OlNy0)l@~D^1;NC5k@|OPW3wt>WNYDN+8~+gM%E!
z$<XWGf6e2KDqfkVX2}gQZWyqt1C{7POrY@N0=xBNCc)`@%}4J%t6f6?)b;Wsr6(?>
z`Olr0;eytiK<ln*uL$F3L79X|WSkvb7>&~O*ps%KV?2vq+DhuRh*!6Ilzu>A;iMe9
zI?zug9<Hzx`fZ?quCqY~BbP{OJ&v~P+oi?EG^%v%e(va^f9_`qOsRl-?u9axGqb-H
z3*og#OBHDJ)8aUV(q8Mo8{4)1*8wBtzl44(FmC1|%9#B;V*c>nT9CI_o)O}KF_I_U
z_Cswu{<D0UQo-(`p+tVdbm=s;BN$Lg%aOD%0sz2@8Y5(`QJ-J1+()9RjY6bp%Gah)
zqUX;d((B6!M-sYj8-xBlPl$CQ5jzq6c@T!5_g9*6d<><tZ7J($A2^z=D;4tsO14HX
zie-yYe4wxLjqlPznoTqhfF;&bhwWoPw)X*h(a6x9b8|IjXub8;x*|v4Qvcs|XuE^a
z@Xz(quIAVKlkU9<_+-Y!sQ20g6|#JdA{pkDvR8GoW7jlpj!D1DuBsg9xB-8J<7~*=
zVczXh8!~FT(c1NS#gP?BrU^+Ut}Fqvb9E2d$W7VuFOF+&W|#AR&To&{SUY^`WWQeu
zKHzmbC~J3704je5Z$(eS`Fl}Dm*)ja+}844r0=qPBTf1=`Hv}HS#O0kglsE5gq5Tb
zrjGmD!~04O_X8NwK1L=p_ISwTU3`me_Bj5B*K_l`nETK6Ll&Fl0@szw*mUf~tGtg`
zjt(;ImS2D5w9+r7$#Gest4UnN7yJbQwFw(D-9!L0MB20HwO*mfbT&sndM6+;tDj!j
z8hm06rCXz63ik;-)wAfYVV`+J>)3pCYgw{eOt#E?U<lAs$3FltNz>CqBwkAugSl>5
zX?G=Ci(Lo+r3suuJezyQyDvw*<1b{rx*&ZaY2HlJ>k{Qc%IZeU43pQXw4mh!4I5>l
zZ@4$uxaPY#!*IhL4Hctn#!n#S+SiPcZP_PTd5fXf1exhFi5zf3kl`UcW2RUk)F2oF
z_og<JtrvhG$KN_6QCVk@`hMEU&GPS@WY6MRdp8EmL~$^f89#fG9}^q326aLrKc;OY
z-oCvmNR%RDjUfdG&ur)f0sm9pi}-I^)w8*MW`XqIZ9WPhl?V|A>N`{03P<h#5FYsm
zwVYQO-5ANl!h(l;Wg8i^t~KQtKy5F)<su!^FL3GeL$ATx1HlUId;yH55aWh`OLr5I
z%E~Pjq3>iseQR;fa#{Uy;jeNlJ0Sle`~;ZYhLjkuy>a^!Z_nR~`$&F?NVuIE3HX;i
zD82snwlwPb`7yE)ZA_Ndmq5zuSO1{{1}(d9u4#!Fl_|eOuxKBwOfQ*tG`VjCV$-WF
zxi0c&+w}Z)rqz{%f46@`ADP<WyL@PZbYsSaoYGL9de9)$>dGm#x)+zpT+gyfDi;_P
zR{#Ta`Mzd=putKO@5lQJO*aNy(i?}Ltwy^Z;69f|eqi#UCI1$vL!+(#mi?dK`OL$!
z3jQnx$_$+Li2<__CL@Wuk4^J7-!n3j2I4N8e#=qpir+iEQcrn3`<r-Z_N8j!Z9dWy
z^{SELrnrhQIPHudRMBTpHkxn#fL86dzr&^XL1R<ExPEpjzvA%>B4yNOd<w5BfnSBJ
zI2f<*`0eRYt7!yOH0wW9v0Q(fBfD#dOv&cO-hd*f3!n0u>1BBLEni<(tdRWE>m0I^
zt(^*Td+S3}$5rOzXy=MW>%#MN_qy%5St!>HrGZ~Fq1WKw-&kv@2TrCcPCPzY%2aO-
zN?7@+$4?&qA|uv{QH<Ww?~F~!j!dk^MB>uV)O9haZpG7Jx2f%D)7J@oWTxJ<l(RR4
z^UFAYFv~btY8q1_!SsH`tHIM>#E_YSq_6qT1tomOD?02(1otT{Hk8{?g(944>h4f%
zOJ8tzj<oYvWt;H0yIq-61!8!QVTEK`wbyB@!TCkU&PM2-;7mTEzhB&?%tejhG8Q;W
zetQbQZ;9Z@m{%jYj&^kTpye@FuYlFHMrDni1R1Z*XS_GS>ecV{x2uWde&6oAP)*({
zFkW0Q%gdI*9@W)oKO65DgP<3F_BIKvRXLAR?Z61&0g2TR6mEZ7O<ATuKOx4Rh6Mm$
zg?!FNi37C>ZK?dP7zukdg?s_tNZeuOsh^e1Tmdlz5rIg?LcK|%aQ1FsSDv#W0EnHd
z9<BX8O$!>M)p;gAL_R~Z5cojTdwy+qDsd6R01Vtxmq&FhfPz{wxmB$${zW~z@{Ro_
zK#y5^KqIp!#@or>GD`c+aZ(PV1=`Eo1?a55p6a*WepFgxvmp!^2518YEU-;{F}fLr
zD~)=S0m=+px3TUN8-El}Xb}{2ET*_i3-|WlY@V7vr6#&cOr*+oS9?GF?@)K6op>>o
z4af0@%KwaLr`{3P&)474<3rDMsd!IM-bepWfhfuMmJt}#0%PgDSx*q(s0m%ZFgWTj
zwwvH%2!(i9{RHX~FVUB5qHvF{+ZF}+(bZVPG1)a*Ph>KV;cYNK^aB@R#dS~&`^60V
zn2Z24Y{{djzK33}<I(Dm`aMG41dVhzNxJ$jhGA-GE>t@q%!v5k)u7jAXB_H{#4Ut2
z1}0j5$RXcTyfazqL9=^Qe%GL`G)=!lirv7AgVRf^=XyEM&kiOe_%JD!O?sXK&hrDo
zF}m9B68im!oGshuZluy2H#T$`XPZQu@zf;(nBCZB-cjQ&w*p@Tm_$pe^MTN3EauI)
zJG&G^H-4S|1OCd#@A6jO+IcAXG#5M-d9E!^YNmV7Z(=F^?8bfrYf&mLMnRd_22&Q}
z2*msbLsrI!XPeOK@|V?n>`kNC`8eSFmekELLr|!-wQRltxZnuRedup<7VflowJ+gC
z)F}P6lUSsh^B41?=~0*68YA6z63lKG`W$@{GV!cC2FCl0s<7yz6!3JWoBbUDTgpg%
z4VNUk%xblMy7PjLF2We*3XY<P<wZ46=!s&}f7yQ2O1djlicE4A&N>7K*N(*9Yx!_M
zjU$&JXLiNxaTzoa&k@NSbzbLJTn$6bu6SPWYx)Zc1Li~Lqj($GuWsA#;zg85eH{yx
zz3IIOea3A4QFGmJCfn7N_d$8a77j+T^W}Sr%0XdVLFf&zJ$s^D5Vrc!iV&GXyb5*A
z6mG8d*6EDN7a;=dgVjYI--~4@Fe{{fcJ4B|;_Qg~&%6#?I(?X_$S4r<Ih?6Np29#{
z<O$v7$)L=T+TU^=kRWTe9l)Q|9MI}Q{dk-G5vvQ5k`IoL{M?!qVrYIgnGZuNVMGuI
z&JJ-?#bQ&&+yj5II1w`Mp1Mv`Q!r4b^E~Ig`S&7{pV4ds>Dw{=>=8iZS=M^I#EF!m
zXn%K_xXWwmm7R40LKXPo6ZzNZfN1-$S6RuVU=JlC|3#Xjo-%ebJvvC4n%IM)Q8NDh
zGXd)L;ay_J<Ryh_Y|I%|&vzTTbF}g|x5cYHDzVm)=HQL#qO8e&w$6TK_Xl(`IQx@#
zFT`$Zw`ym&BOWZRjp;ap4RdPSi8D;TR8qjdv;0fOPcXI2%x*hl@n5c%W7+wy*4tzk
z_Qzr(VoG9qVwM)teHh&|W<=8ZSC8P--ckt7NAGcroH1;s60N3ZXN?R2vsKx9DO#VA
z1n?rP(coEcE56>Mozc^mU*Uifnp=#+if>LD*O9MV#@wB1l``z|tlu(7PJqS6rm)0@
zJzP50{0Vpa`_?92oB;*i(?i225a6tZgT+9Dg?vTh)N4OKA~(c8{$8-ZKz=mb@$4<f
zWUSQXM(Pp_8zipHkFU_w2GUF}IjKvLwv(TNa^+a>IT9g8>;k11WIT+Y=%Z})`y#OJ
zK-~rlEy!T%0h!Qo+jjPF2RQz2Z^B;dbvYg2JS`+@D~OWH{2-EEs^BdnuJskh>CKeT
z1b;%8dU6QU%i@z?^6Q-{XESe^qRiw`ka+k!d-{c%&lXM}vCX^T=|?|;t6r?N*h-W4
z?o4Hy%BWqW<M%_#PWA)rb33@P-J5Y;14N9)qTEbM5`|tHqvjsk%Zw9OSrOQfR5<vn
z=bNkTJTD(hd^PLbg4boz931#ni!Pr}+cod??l}HNMx=u3?gwY8ppV5c!iphUBww?a
zEM;M{)sJ-jklzJ2k4wLj_e&Y`oODRfiK)|Mi9mLp1??$LRxz>+5=+md#5^8|49zjM
zon_Do@rhzZ4XAb}-m|bM<K=rO*I0J8$lEV(aX9KRIbtKGXY5r&5EVsq^ULp`ZXfl^
z#$mT+20Ap>H$Vg<;^Bo6A8cfhUQ>|wFk~j(`>1NgD3sTg)He1pWrUj9WZ8R(Wn5Rr
zhc&dXvv_m%Hrww<T;$-xw~S6Ky$>Ho9l_))NgdVUff%d&@4^$Pc=MDZdZ^xHL$KX^
z7W1{3UJ%>9v$W{Y3>vBvflE-soDj8{`>#F|8Z$EF%lN$NylORTn5JsI4mTMHWd*%-
z2sD(RO(H-&i8&Ge)5i12slI5VekYCZ)s8rv&_)194;vKY2m8DIC2{4<&xTM3HHxwT
zd(42n)gCJ$O4I|8sJq07#0U7Yk7PjPK&bMdy-5b)OdhSsBo^|IB_H43@&F@tpdJR0
z#~)=UJdP|=)O{0(rVZnjbTtwHV^}&kfLJQP@R6rda;K;O>9J9bnW$BgbzOZ8aO{D8
zPuJ%=Nqg~rdzk-IW0ZC5I%cc;ek5~=lDXl4?gMOQQ!KE5Aq$9qeGFM6jFP;Xy6)%N
zjg{q(E6fnF02P3L*tutbHRR-gyYK3g<o(a<1)Vl{;B_dblQ7Y&`(Gnpz`Uf3g^=uV
z2|%Vea-6iwm_Dw%lt_aN5@POHOW@p($IDAWo$zN{*}9o?9ip}iVV;_fM?LyjPQs)S
z4Sw~RXSz^$DZ1(dQks)4-=7#~2GbcyALf=qFeKOjh7uAIEEt6*>^y9H?GMtIs;ojG
zY~3*C>qD)(8jz}89w|xfb7L`^d>AG#%D-uq=qz}(o9kzzrx0LS<Ys7<2L1d4^W}-l
z1{gj<o{Ff`>BX90ykr*5oM+YmoTRWe+Cj6aq^xnWRymLmE>krCpoC9K%2LT0aK0Y<
zt@kUUrrj1WL9rmBB8B;WXqg-BztOiUZX-!`*a&-75+!WZ!R0OPiZz?w`Of4q#+(;m
z`${Ea6GnTCY3`V2R8w*}knf)*`<k{Ynud8ALG8ndAE9~XeyRVd-5CJ&FT;=*dY(`_
z8U3P4tW`A6<piP2(PoHM2;=2bONnn<xm9WUKitt?uRiaV>RA@(8k{Lp4VP;<<fw>+
z9O_z0_{3=H<qf$RO9oXqEV8{JUOwHS`nowCjsJFxc8+@-B%rc;NQKE-@56@xb>cVi
z5)&QGEB_&$)mu@)(Z8zuw#>Gc6C>^O-FUZEo;TO1@$>-xu%`v`tMS3V-8R1pb5<tB
z=MLq3k`$8WR?VMdF@<e~yrs0vR?PG475r1Cp8dd8@mrmZhwk)VpGVb~@9?O=2{Oty
z?uy*h7mmIWgi0nag82=d7s8-xVgC9;c`u8(;4PLQ_^aq|IPx|oo%kO@q%vRrW--55
z<+Vm8d8s_$VZuqPb$=hIuB|_OB<eFq+Ts84;p!;ih=(iz0<1jJ1>w&zP%&rAP2*5h
z$k{jqReFXCJhJ?-{x(2j5gH_zQ>;#Ec*@bUqF0u}XB09+U-K}+jQd>)k#AOkr6M8x
zHyhrfJ`99@Vzr_B@*p@`DxeJ#`jimavZ9ZV%v{mO0!%9$TY(f%_}BU~3R%QxmSdD1
z2Bp45R0C=8qtx-~+oULrzCMHMof!&H<~~>BhOu9t%ti7ERzy&MfeFI`yIK^$C)AW3
zNQRoy0G}{Z0U#b~iYF^Jc^xOlG#4#C=;O>}m0(@{S^B2chkhuBA^ur)c`E;iGC9@z
z7%fqif|WXh26-3;GTi8YpXUOSVWuR&C%jb}s5V4o;X~?V>XaR)8gBIQvmh3-xs)|E
z8CExUnh>Ngjb^6YLgG<<Z(rXuyN5eu%UgKk5K^^)O8^B0pY<_8)`~t3h*?R(2G&=5
zTz-7u7q{9tMl33u{X>K?>j`V4Zp4G4%h8vUG^ouv)P!AnMkAWurg1zX2{E)hFp5ex
ziBTDWLl+>ihx>1Um{+p<{v-zS?fx&Ioeu#9;aON_P4|J-J)gPF2-0?yt=+nHsn^1G
z2bM#YbR1hHRbR9Or49U3T&x=1c0%dKX4H<p+Z?sczQ&Bk7FF2|S$nrcw2y}jBp{{&
z5A(nVpWhB-Nb|}SkiP<Wx)`XSGa4W#0BF8KhP1Da3Z^Jb1uu`eTkL<Y9YL+)qhD69
z{ko2G4eIOTF_<-+M$)}*^<5>I!55MQv`3gt5ENVMAhhgEp@kG2k+qT|<5K~u`9G7x
z?eB%b2B#mq)&K}m$lwDv|MU~=Y(D2jO{j*Box$GUn=$90z6O^7F?7pn=P;{r4C8qa
zv1n*5N7uIvTn`8$>}(74>Oqk=E7){#pHUFd5XRJ5ObMhqODTa}=V0;+a(7JZR-4<3
zBTvsqRwLh?*ZF)JWsWOkEq7*XMQ!G3Rmkdh7ZbM#v1~?jt((e2y}u}Ky>1qa&Y7m@
zveIzH@?5Gexr79*?sbZGkVS;s1U<7D(%~7HjAmzj$aDYv_FGl5JX@LW8>w=HCDl6W
z%?rsr0)bErYJ5G1v&zjr{8=lW)ZYcstgZAuL}!0~8HAcgOm@nJ9cvOOtL@)Fpl2Dr
z8876Lt<|1eF88Jx#C*XyGI)C5z_o!Os!t=X<zL2^fVTI_)+T%IPZXlOdl}cteEz8p
z-5X}JitpKuS&<bGyvr!RtD=^LUXPE|QYKK0@!g{6c_j?*o4Ea98|l(Z=T-i1YV(Vh
z1L}DEv&!VPO7T|$-cGsn7_1*N4F~4re#<;Feiv*v68eAqt&0^hew#1KFk$Iu$;MF)
zW_O*Pp68uOI7*^^QZAkHie+bi{+)~d`kvhPToO;*886Ee;z>y0$Kj^4fG1pb@16%g
z+<)zJ1n1QO78g#$3yHj+(Smv`HW5y_-PP<A>{h2A1UXMG-c%hMvHLbF6t}G>KA)H#
z`AWL~>8JUT(iq7;zJr!Aj)AS+n{mRbA3aM+Gj}b#PhHdTM_Nkw<VenkAOG7E8!Ful
zM8njG;G2!!V>Qm330EC9waM$=slPfxR1vmr!vf~t_M?a%`@`&tdE}ipY-p#Q#zhLK
zd9eFC;PjIEAKLkRkO94{rTuNFqKbNUGtaNZRRbax9;|%2WbnGu!44#64RriY5u0O}
z05G^e&JB?Wb*8^g)aM`yt|}~QJkKCipFNeyex~P~SFPVEa<QmCeK5k{=MJ}d`{zr}
zu&kkUC+)UoRWD|1F~Rc9SQ;H>fD(73rncKmm)m~&`O<r|fqLN&=<lNHYLl}{S3Yg%
z$QvfSs0R7@a=KM{W0dL`R^a3qZIjlA@%qOVeA*9JpnrEyJi33(SZ!Yh;R{7KAo{jg
zj(JU*f7FTM8KF#;pnsQ7I3GE>*YUyY9z7tO%ec7z@wWcoOr-eb<sEyhso1gNpt_>P
z1k+|y?d{>1jLC=s4B2tEhiTtu->WVJno&%%6bG46KuU9D`GEN!C!9chM>zd=cl0+-
z^k>4rpkq7_iWGHtBvy$Q`dja2;1ZdYmF6cANU6{v>l1=fSKRpsTRonp@alC%p{bhU
z>g+(%-)&_nDQ~#bq5;xo^06RggA&uH4RMVb6wt;oQI+`m_zt>SiI5hXkfEnn6@ZNk
zh9KUr1jtt6lBg$O#TAoTRvwUtWeMP3EjnGoRPQppiNF(sX%|Q4@kIjas|WZWXSENO
zfF#2yOb;%XO*LeOoAwlf{u7_39$x(w3xT~)2BNJ2l5u4n3a0NkNLT4yT);7fA?1Vt
zCz*`hbw-doYa09E!05zcfOT0EOOR<EYsc$xU*#45FmbJ{s~VfN8|As<lzdF|QWJUA
zf$ihe<fMFhz|b`)9jVC<y#B*pE=nsY-~pF`fC$D4@h6ZW`KvEKgTz5X?UnihlYf%@
z(u^`g_r(B5(O`5Z#yf}5IMb+SIl<^e-VA0+$GI97Lvrun6t)7zhh{u?(qg>Y``E@D
z5{v%@F~&|UfNt@>vrj66W5f>jy+G_8&VB9D0*>N!7_Nr=-x6N?A)M8>1~q(X34sXp
zpA%@w&c};L7u*G3;(Qe=LFL}NbTF$|aX#A%P(h`-N=ZRxCvlG<F<|`fTFTI`8WfVY
zxC{)wdR_af>$>Klv}jo0MS|UR8qKq-1FokBJmrbTJjQ!k#Is0tY+0c)m4Gp80YzYD
zEGXd~ihaihk;?xUknXNH?rssjzaF+l6?HnDQjVP$i=q}{lp_WbOTKKg<VrbP)ZT=f
zL)0quifwUI>}HPKW)2sW`L#NvgmaY0^b2Ldk|t{P6{L{>ym;Xgao1PrudBgEMRFb^
zkPJ6v0h^tJ>K@;maHk_|6Z>yFzq@YvDOeO6Ob_?P4Ey>kHiJv`Wlh_MX4fBY36f%^
zV#2t;$Rg&<KpDIfw$=Pm-v+oO4-NuHBVN!@vi1qWED))`{|kekNAxAeB!>}!Kwifm
z;TVZXMxw3~$--{&A8-6<F_B)Y&@$S^?~3>vnUZ#s4`Z-zQ#+y7UI8#Hgsc|ompLUc
zqlAG!Ti>t{JzYF^5pM925*PUWUvDuYDGKhC4FMx45c`L#V7%V+88@|khLj|V=J9Un
zJEcP5qVCzR6p{FK!nIY~TXo)tJ!{>CG;~&u;EPlnNrwJ=5)ke@hJosN!siM$8b2mM
zmc&weo-rY{n<w`gR(&;xFoDOIwYdVXlW*d~vnJ0*x51$NK7$$;Hd>1+%c`c<{AT3i
zjF{p253Ul-)s5A+!8Dp7?viXAdH1+qlY%mK5pp?{pS1t!3qmmDOq2TnoV`F3<>(XK
z1=gfH39N_~8O+~({MZX~+QHyB>vtgwK0@uqGkX^eaf$UFHiO#>LB*7@=c0o6`0muj
zmH00_F#p)s3E*$A-zP+p2bvXARTg3)Lxh`tf~9X>7!Z^kHV`uE%V9+BiBG=mxj*)M
zr%3rn=)>GR`{#zmwD)$3ToLMx++uqsCx(+50Uk*5QJp2c6msxLD&P-y{c|XK6zZl3
z_Fgu8kp|gKVWv`GS!c56FWPO)ZrC<?b1uy)l*URp1+5>CtYh#*yp-ssus)ot>_~UB
zyGfjTjz#fXod{^KEQK1~@jN|;SZw5OgH#0wK78Oe4#vV3*|&XPQ<a^COh`#7$CH>U
z$r~5u8ziT0<#ICrX^<1){mvtaqT9OqlW?wiSu4X#rOC(0uL{Ownb%i1F_G&d>=l51
zx!FEO4_LK+)W^N6UF+f<Yif*w5Eox56+`>Accyyp{t)TE`;vF@1irbNjcXF8b?yFh
zl5UEB>@;wO`~gMF!QB;h<``+f(lxAb_8B$;&vT7)(bXG(7x_5f%AZ5;h#3WjHisX{
zLTSguapAADXMwWZ&jsD0+K!+8#*6z7-(T+QUk>(~!Q|0&!d)PgEw8F6RK;LkB;!<d
zuqH;H9G>HXg79$+l*KU&-fRF|$o+kR4mJ36k9p&>*uS~RhCV+*Y$3U-k%~M)jxCFW
zl9;bQ-fx4HPy)*(bhrKL!81M<Zxv&z<cF^hfTK6m6{L@0f_ciyNU_8(j6mv1lE*iU
zJ5awPs=D1!^lP6Jdqt6mg==7w8xsgAP0UX|9`2?Hl#L*&vZe~dHkfwv9QOOQ$<6ob
zQbl`?6U55Fb2val>6*@6p5W?z*W`jb;@JKMFw<mR&&KVH)QcKUzi3r>mic{gQPv*)
z?I{Fh)y)}(-6uh^I52xKo!LRZV0c*1X)Z(g+GVFN{2n<H>%vD*@&IkVI{R_0;M28M
z8vu?M+xVF-&<{l@1g{PA#hnyAq(gudz4WKSFL5YOr3q!|qrxa7z~F~rEJ29VQKgNe
z1*L^m9&acg2p7&`u&V%oY|AKF(Xpv=)wf&j#n|<idrD~#2BD5i(%E`%MO9%~zVyw_
z#3UC%_9tV;>;2UYEaUIHLJuTQw$SbrNn+)38PlfV^0<6s>)|hT#IAAS*T)_^_q@I}
z0S%tV-HrX<cx20NtH&v<blye#U2+fHkGY_6=Se9~e=Wo!O3|#Z8|{|$O(A}7caL`R
z$}vKJQD@wc@dd3w;cDf&4~2n|37fBm^||$T=H|>OjzkvW!YSbDjdH=g;=4A@whsDB
zI8^aX6n=|ab(?!Ay!)CxH(<B8)keaR`MK+stne~Ic!cxXPh$mA)7fA#%V+F`K##u7
z$+|t-7;3y6)I%j`IgHtg`={1D@R^NPV?rg&iViQ^Fs)>w<nE?%4xV_-u+&MK{VM0|
zkd_RIHmOJIB`_tm5W$`$Z_PR#e>C(iX~Q@%FEx>C{Hmp98f2ku$Bsw%lk6v50(U@;
zu68Z9U&za}O#-Mv^+!V=eyj6S)5oS{My`1MVs)nlnYl_$xU^QId1_jMf7&K8ij)jQ
zJ|+~@l)xpV%~Y{P()$`+nBihkjE|3t3t8PoKU3wZ_Eg%0P<>%(A@oW#*8i$X!nfG&
z;&&2ZIKlD~*Gff+p3A7QB!}Ei>RGhUUz^UoEpeJ{`2ov>wH!O@1$VW>A#D#{i2z9l
z{d)FK9OYxRY#(6NUMO=q^5Ve7R|72%f}ZDlsm0BN&LzyaSHurXV4p5HGf7|Z)}8)g
z5J#S6h{-+_U0m$k#+|N{6_8MYactWzWb+1~ea8wX3zX<@O0>pU*q($J{=R&7)P&jg
z6Kb)o=HAnC_MP;cIeBq}{gG^0CZzOUJZ|7C-VjE}!?*UtKTcwwF33v^BYC&}Rq)C*
zpAJ07-!{`f<j}bK`bd7B8b^hD=oeWJW~Sk!uVyzcX-B7zoEbmh#LUEfMGxdWs9Fg?
zy)_teVyD7Dgn8X1Wd3s0@#|VRtZ({u?gH(I+Y<iL;c5G66BUJjEeFeLuBq2pUtgZa
z`hcUX*UOV5ddo(?X^M4uiDXFuVl9+_7?^6>lYX1@n;ZK-=x4)!o(%(1UqulVmes(D
z^`_HNfM#umEYy~=zh$9&+?8$4!l(4rr?d#8hS4iks@9w%E4l`BKmhUtvsm1X-mKC3
z>4(u4yS45OgZIOQ;EQ6s`sjNelo!~mLe7gS69TW2WnFwE<qCF^a&Qc8zOZ|m=%MX5
zA_ka~fuG(LLlG>KcAwioq2mLXV<9CIa#(0`sQpl>vwW`A$D?!2%nt*HEb;Ga=o?92
zHAOICmXHEQ%Cc{m2>dLjPU1J}^w7zilFIxy9nG(OZbYPtW?3KJyv@A7|1A*NiD_v!
zTLC}%E4kI*d?$lQBRL==MPsD#FyN0ZSr`;aeQ4C6a2INH9klU~_gCH;G2%8R4EuHb
z44Ej^6301>?c06FP3X~xyP{77p`-3td;HKAGf<OE`C-Lk)d3wT725|j7f;D=<q)$<
zd7nhSr+0Efo*Fq6Reu)Nx?A-S=YgpIq|;d0Z-uKf#!ucqzKBmF_2I4I=wyvJ@ziRo
z<>4mZw1qRd6Z^^L#?qaiAKv~px)*jAV^re~beps9m{kJzb6n(oS8uCt#Lnjofg;Rl
z=apY)JsV;^dVkzCW)jDrii_WTT`3iKri(xmCC1^AO}Vqt-1B*wwIlBAmE1AmdRtMc
zD!fB@mtwHPHyV-^VIVU??*~*{olz-Ub)NCX941BDj_CKZ+QYQ?+``tyhy_7WFXF}_
z?~CVO#LsDYD!&}cp<rKnzZ2r3a4>h22{PZ*TK?$K^u`E7%{^na89Rm%!jSZs7vI-D
zL1POD!1cu56G)*p1gui3-i^JZPX3tI*_Fq&JRwbz*#8LUSiMRWjuu`zD|uk;+X&d@
zuxF5C2{Zp#O?GtOB+R2~tF>MDI(}%p-W<PF=Q@v(#M(&WY3USxAP@w@LSh6+|DvV=
zPxwL6oydh^1j&RA+9berADmtEp6~IIZn&ih@M0}SP=&R|>=M>1tEY}8E=b_l*WbOO
zY9tCPgL3vMEqz)_eWeqmN{qobq_4)XdXJSe6Hj;Eie0??2ZZ?p;*_K8@(&v~1evu-
zxQC<TfoCBFHsp&`KmX|sVyktid_7Q2ByW;Qe2UoI71Twfi=|}N95LdpOp-wDKNd<I
zv(qH?&NYQpiCQf*`6tyDz$|2rI0~+3;pBf@)mUUJroI4etN@s^w~sRg1a12FlNT5o
zS=)O}>A2YYvv@qhzamqdi`?{Z{c*7$arCdz4-4G(`O5It%y&8>d{#Y9Vax^FZ99ZK
zUdIPpkNhp8uP3T+W4lhvUIYaoY##y6KtxBFoj3&5^@Q(^{677%C#3YJh$p-Ee2M6F
ztJAoQv1N0L!|<pxv|v1hi;(fiq>N8XBD(eAYcB#gRaIX7T8U5xXbx~cJSon~YnC<r
zMIycHW++lHayM0O@u-|=agD{3s~R$1(0LyMgzri7TDty(q8)}GoH6KR?ZK@*h)Oy3
z58dyD@P1=*Pm}rf^I$ybPkS}{B(<r{=2pap)W(xtRl~ML(P*{K{3rFz0TTbBy;B6>
zaJYE%zOj9y?E==_B$*9NiAm{~)2Z}t1$$l?qOYct5Ep5HvqFKvuSE7A5YF$K@2>UE
zbQOdTNzjD#zS(L>wa2$K-WK!Pc%pY^8To58;^JaXZ}F30wuYl;WWs~rCoo&vrEtUh
zTBLMU??yx1#;-weCPZyOJ%Yeb?14z+OXW0L_E+<)(q=;xz<pwJ!pxo+0PfoEwY(x2
zB4h8B|MR2HPwnhwer-Eww>74U-Q~R~n*oC;MxyrJo(74r$y2t;x`D~{nhUw`N{Bbc
zo`l5kb`Yy;L=&@MTQ~Ml_%V%){mCIj4WC}5q=A_ACx2^by!4w1rVX6H0ifayJsw;;
z=+}5kjC?RG*q)^FA;udd?fK$7vU1x>y0w;A-)YbE%l$J%nRRjAIlrItFPgQvJ7Ytb
z%HSFnjF2||X&L_g-Q>1{(mholW_-EJmSzsO%*VVVB4)#OAv<(kOIx2H!f<orlh6QJ
zdFCT5#3oTu@&dmO1Nf?t1%E)v9y|`+8=C28dJuwgt*-gC?rSOK`=m;7myztv2d#Vo
zkI`Wx4lj-3$25%RNBPV*uz!SW^Em_QXGjRdeYMyy-Yf+<)YopV%^|ZWJT=K%zF4+W
zLS~QqN;^t&kwD=`C!V<matQ-K1KK$%`Jwu_NN5{bF0a%WUmzDgk%TBqqpRAkTgIiP
zYJot<WV>)I9#e_Nyjdb$&*1KN^gM}yFIhi%%BWB}7Ke0M{0WY>CxJQUuL<9GW$I>S
z8~;QmE{^wS?I`=DyV^l+MozMPWLoFz=uSLu99tiVHdCN>7jRs~vd13`&Gey!!7_+<
z6o@25%!eN~+Eki#7iq@#{Hxl7pF0^`N;~p~#tc6HXJP0g5xvK|AuLSwNHVI2_Y-!&
z4hemc%vOM5!ySDypyEGe=lAeFbIp`w8FIUcTqUwens>sTIV-jDhrcKGX7XHFXyazb
z^DO8=ZgefY6R6&+)c1<?7)~Kuxm$q2?)xbE6Z@y|KDv(VfnIL`m%ZM5B~krqpTD;+
z3JAy;Z-1s{IZ=-+?Aj&kKv9s_>_i*WoenjtR5@_JU#Ph;4M8fpmznxE9R`=r@-#_y
zkD?Muq|*gg7f*BQeI|Np#}Q|NXLJHM6GE{;SJn8ce`V1Gehym~{8c+M<2~=HcCRuk
z-v&$8dc8YG+tK}NYVhwdm1iZ&A#r+T<>Ez88)Eq9j+G5h5D(_u{WQdUTOs+QbA(=?
z{F6n6UV8D2*lvb)0vDrca$729KG$xO2aH$jWoWl0drlmefYsTswh)`GjMtmR=vEkJ
zN$aTp_@@KL%KQ-VDB2ppbZK@X`6cJA5n`g>sbCTvU_xdid!{9gWA|>Mfs6rtHx6s`
z_wMt*FgUTBZ@I2C62&zbs?pPvK9TpatkXzqDqe4YTr^nnQg8gWxjKt*s&eOMEp!Qc
zG~PT`>xg76Xqh^dKI-Eu#K*VnvEf9qT{L0yNpV<zBPlG$Xs$A{KKdN$42Pz_*1`3%
zQlh6#C;wm~MH^^BB!g5^W>j)eVD#kQzGgVRbTB!5nWY=?t!cggiEGBAcWM2xNtW&9
zZB_6RZ}|a87CuEYRYCRJ`Sg+_gBK$<tT?y0*a3uz(??vj`ejK05Fhgi4ReLg_C210
zH#>_J@*zoWcJJw>eBw?G9WY(Jw~qN|A3MBR^~jm?>k5oGv7z+0jWOox(co@%nya|*
zE-2peyX)#@svgwwDMPJ89dT=iO>}@wtNR@NUQ|cJZ};s<o_gG@>X(w2uWP4AE5)@A
ziJgy_TIZ+T&vG<POjZqR9B%QHw|yV?jEB(MWO%P~ad>&xPh@Jmt!OJ|zA6C0ZxfF2
z7>aIZqecbmM$lyvDMwg2?Ipo9b)-WL6K_7(X_rmJgdd$-Qc^ywEw4SThChz6*_yu=
z{v~a4V|RJtH-GThc2C0Z|JHPl{II-!?B~7cWnRz&dgP*UqoY!iCo&i-xeM}kl?ID*
zKTX`w+;z0+MCdGcl{N?xb|tYb%Id=k++k_@(V%bTS&n09`0{S0)|>IH_F;V@_zr<I
z{w4bI-epzQHu2&sz1oS1w9$5FtX)J*J+~CL=WuPT&CZAK(L>xS-dKDDc7+i`nHN8J
z;38w69lzAS*WWa+dnVvk(0-KD3<D#xkr_GwRxC0(H937M0Ns^6Y1{rLF<&cj&8L4c
zAAR(~RxEH=A*P<;Kg;;V&1LThf*x~Nngy77<8W{4x#aPE<fX{PpvWhqD8k1kotRsT
zyp++upn2OstlXgGeZerl;qI2-gRa^8zVtF{!3f@5_7^|s9`h7qj<72?Pa&8cMOTnf
z<O@^0qk8ayl6=Cp(8<(daq@%TMC!k9Wb^Lc7sixFjfTz!9*Tif3J-0Y(9Fca_c#r7
z1Zq}}sO=udR;?Z}heuwwVy!#diQRKhY?Y6jqQEt|b3{Xk=gI#<EY+D=U>%*)TerLH
zSCc}Tjc-mR5|1HAL$C1}oue|Qp&M!hmyDUcg)Cz>GXPEyeYf}+s48kIl*pL{{treP
BIP(Ai

diff --git a/apolloschurchapp/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.webp b/apolloschurchapp/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.webp
new file mode 100644
index 0000000000000000000000000000000000000000..68d16b3bccc675e0cfb4171dc0bf1f5d5a0714eb
GIT binary patch
literal 5496
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

literal 0
HcmV?d00001

diff --git a/apolloschurchapp/android/app/src/main/res/values-v21/styles.xml b/apolloschurchapp/android/app/src/main/res/values-v21/styles.xml
index fa5365c..5a4019d 100644
--- a/apolloschurchapp/android/app/src/main/res/values-v21/styles.xml
+++ b/apolloschurchapp/android/app/src/main/res/values-v21/styles.xml
@@ -3,7 +3,6 @@
     <!-- Base application theme. -->
     <style name="AppTheme" parent="Theme.AppCompat.Light.NoActionBar">
         <!-- Customize your theme here. -->
-        <item name="android:statusBarColor">@color/deep_water</item>
     </style>
 
     <style name="LaunchTheme" parent="Theme.AppCompat.Light.NoActionBar">
diff --git a/apolloschurchapp/android/build.gradle b/apolloschurchapp/android/build.gradle
index 00525dc..4d334b9 100644
--- a/apolloschurchapp/android/build.gradle
+++ b/apolloschurchapp/android/build.gradle
@@ -7,9 +7,10 @@ buildscript {
             url 'https://maven.google.com/'
             name 'Google'
         }
+        google()
     }
     dependencies {
-        classpath 'com.android.tools.build:gradle:2.3.3'
+        classpath 'com.android.tools.build:gradle:3.1.4'
 
         // NOTE: Do not place your application dependencies here; they belong
         // in the individual module build.gradle files
@@ -19,15 +20,16 @@ buildscript {
 allprojects {
     repositories {
         mavenLocal()
+        maven {
+            url 'https://maven.google.com/'
+            name 'Google'
+        }
         jcenter()
+        google()
         maven {
             // All of React Native (JS, Obj-C sources, Android binaries) is installed from npm
             url "$rootDir/../node_modules/react-native/android"
         }
-        maven {
-            url 'https://maven.google.com/'
-            name 'Google'
-        }
         maven { url "https://jitpack.io" }
     }
 }
diff --git a/apolloschurchapp/android/gradle/wrapper/gradle-wrapper.properties b/apolloschurchapp/android/gradle/wrapper/gradle-wrapper.properties
index 81a86e2..e796cbc 100644
--- a/apolloschurchapp/android/gradle/wrapper/gradle-wrapper.properties
+++ b/apolloschurchapp/android/gradle/wrapper/gradle-wrapper.properties
@@ -1,5 +1,6 @@
+#Fri Oct 05 11:32:34 EDT 2018
 distributionBase=GRADLE_USER_HOME
 distributionPath=wrapper/dists
 zipStoreBase=GRADLE_USER_HOME
 zipStorePath=wrapper/dists
-distributionUrl=https\://services.gradle.org/distributions/gradle-3.5.1-all.zip
+distributionUrl=https\://services.gradle.org/distributions/gradle-4.4-all.zip
diff --git a/apolloschurchapp/android/settings.gradle b/apolloschurchapp/android/settings.gradle
index 50bbf55..f6c1313 100644
--- a/apolloschurchapp/android/settings.gradle
+++ b/apolloschurchapp/android/settings.gradle
@@ -1,4 +1,6 @@
 rootProject.name = 'apolloschurchapp'
+include ':react-native-onesignal'
+project(':react-native-onesignal').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-onesignal/android')
 include ':react-native-image-picker'
 project(':react-native-image-picker').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-image-picker/android')
 include ':react-native-music-control'
diff --git a/apolloschurchapp/appcenter-post-clone.sh b/apolloschurchapp/appcenter-post-clone.sh
index 29439c1..97b3e73 100755
--- a/apolloschurchapp/appcenter-post-clone.sh
+++ b/apolloschurchapp/appcenter-post-clone.sh
@@ -6,4 +6,8 @@ curl "https://nodejs.org/dist/v${NODE_VERSION}/node-v${NODE_VERSION}.pkg" > "$HO
 sudo installer -store -pkg "$HOME/Downloads/node-installer.pkg" -target "/"
 
 # Appcenter needs a yarn.lock file to exist next to the package.json to detect yarn:
-cp $(pwd)/../../yarn.lock $(pwd)/yarn.lock
\ No newline at end of file
+cp $(pwd)/../../yarn.lock $(pwd)/yarn.lock
+
+# Swaps out all placeholder env variables w/ their real values
+# Placeholders look like "$ONE_SIGNAL_KEY"
+grep -o '\$.*' .env.production | sed 's/\$\(.*\)/\1/' | xargs -I {} sh -c "sed -i -e 's/\$"{}"/'$"{}"'/' .env.production"
\ No newline at end of file
diff --git a/apolloschurchapp/ios/apolloschurchapp-tvOS/Info.plist b/apolloschurchapp/ios/apolloschurchapp-tvOS/Info.plist
index 4ea56fe..e1fe057 100644
--- a/apolloschurchapp/ios/apolloschurchapp-tvOS/Info.plist
+++ b/apolloschurchapp/ios/apolloschurchapp-tvOS/Info.plist
@@ -15,11 +15,11 @@
 	<key>CFBundlePackageType</key>
 	<string>APPL</string>
 	<key>CFBundleShortVersionString</key>
-	<string>0.4.0</string>
+	<string>0.5.0</string>
 	<key>CFBundleSignature</key>
 	<string>????</string>
 	<key>CFBundleVersion</key>
-	<string>1</string>
+	<string>3</string>
 	<key>LSRequiresIPhoneOS</key>
 	<true/>
 	<key>UILaunchStoryboardName</key>
@@ -37,9 +37,8 @@
 	<key>UIViewControllerBasedStatusBarAppearance</key>
 	<false/>
 	<key>NSLocationWhenInUseUsageDescription</key>
-	<string></string>
+	<string/>
 	<key>NSAppTransportSecurity</key>
-	<!--See http://ste.vn/2015/06/10/configuring-app-transport-security-ios-9-osx-10-11/ -->
 	<dict>
 		<key>NSExceptionDomains</key>
 		<dict>
diff --git a/apolloschurchapp/ios/apolloschurchapp-tvOSTests/Info.plist b/apolloschurchapp/ios/apolloschurchapp-tvOSTests/Info.plist
index 3bbe4e6..4491f31 100644
--- a/apolloschurchapp/ios/apolloschurchapp-tvOSTests/Info.plist
+++ b/apolloschurchapp/ios/apolloschurchapp-tvOSTests/Info.plist
@@ -15,10 +15,10 @@
 	<key>CFBundlePackageType</key>
 	<string>BNDL</string>
 	<key>CFBundleShortVersionString</key>
-	<string>0.4.0</string>
+	<string>0.5.0</string>
 	<key>CFBundleSignature</key>
 	<string>????</string>
 	<key>CFBundleVersion</key>
-	<string>1</string>
+	<string>3</string>
 </dict>
 </plist>
diff --git a/apolloschurchapp/ios/apolloschurchapp.xcodeproj/project.pbxproj b/apolloschurchapp/ios/apolloschurchapp.xcodeproj/project.pbxproj
index e30d511..4fca692 100644
--- a/apolloschurchapp/ios/apolloschurchapp.xcodeproj/project.pbxproj
+++ b/apolloschurchapp/ios/apolloschurchapp.xcodeproj/project.pbxproj
@@ -5,7 +5,6 @@
 	};
 	objectVersion = 46;
 	objects = {
-
 /* Begin PBXBuildFile section */
 		00C302E51ABCBA2D00DB3ED1 /* libRCTActionSheet.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 00C302AC1ABCB8CE00DB3ED1 /* libRCTActionSheet.a */; };
 		00C302E71ABCBA2D00DB3ED1 /* libRCTGeolocation.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 00C302BA1ABCB90400DB3ED1 /* libRCTGeolocation.a */; };
@@ -44,6 +43,7 @@
 		59D8DFA78CDF4642892CC142 /* DroidSerif-BoldItalic.ttf in Resources */ = {isa = PBXBuildFile; fileRef = D979B537509247C099CE3F24 /* DroidSerif-BoldItalic.ttf */; };
 		5CA1D8E805684478B04ABB60 /* Inter-UI-Italic.otf in Resources */ = {isa = PBXBuildFile; fileRef = 8CA3C04F98954FB2895CD36D /* Inter-UI-Italic.otf */; };
 		5E9157361DD0AC6A00FF2AA8 /* libRCTAnimation.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 5E9157331DD0AC6500FF2AA8 /* libRCTAnimation.a */; };
+		6C6BE3C2189E4FBA9FB66BE5 /* libRCTOneSignal.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 828255630B3246AEA19CF24D /* libRCTOneSignal.a */; };
 		6E4442FB39BE4F898DE4C454 /* Inter-UI-BlackItalic.otf in Resources */ = {isa = PBXBuildFile; fileRef = 22246A6BC58E4CF09A22A4DF /* Inter-UI-BlackItalic.otf */; };
 		7D060CA312AB4E828CD60DDC /* Inter-UI-Regular.otf in Resources */ = {isa = PBXBuildFile; fileRef = 10F42B11F27E467A8C71C280 /* Inter-UI-Regular.otf */; };
 		832341BD1AAA6AB300B99B32 /* libRCTText.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 832341B51AAA6A8300B99B32 /* libRCTText.a */; };
@@ -62,8 +62,6 @@
 		E374C61F2AAF41D3B615AB44 /* Inter-UI-BoldItalic.otf in Resources */ = {isa = PBXBuildFile; fileRef = 32A467E2C3364ABDBB7BD0D1 /* Inter-UI-BoldItalic.otf */; };
 		F3F4A3D13570438F9562746F /* libSplashScreen.a in Frameworks */ = {isa = PBXBuildFile; fileRef = F08D1EBF0C2A4E6798AA8F36 /* libSplashScreen.a */; };
 		F8FAD93CCE5641A8B87611EA /* Inter-UI-Bold.otf in Resources */ = {isa = PBXBuildFile; fileRef = FB25CB02F40D4CC39DDA3C74 /* Inter-UI-Bold.otf */; };
-		13FE6F3652044DDCABABA38C /* libRNDeviceInfo.a in Frameworks */ = {isa = PBXBuildFile; fileRef = DFDDD075C3884791ABF84D1F /* libRNDeviceInfo.a */; };
-		5C09A4CCB793479496045758 /* libRNDeviceInfo-tvOS.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 57A2A2F0E39F43CEA828D603 /* libRNDeviceInfo-tvOS.a */; };
 /* End PBXBuildFile section */
 
 /* Begin PBXContainerItemProxy section */
@@ -305,6 +303,13 @@
 			remoteGlobalIDString = 3D3CD9181DE5FBD800167DC4;
 			remoteInfo = "jschelpers-tvOS";
 		};
+		427787EC2149B96A0045AD7F /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 84B340CC6C3940A782834F00 /* RCTOneSignal.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = 3245CDED1BFEE35C00EABF68;
+			remoteInfo = RCTOneSignal;
+		};
 		5E9157321DD0AC6500FF2AA8 /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
 			containerPortal = 5E91572D1DD0AC6500FF2AA8 /* RCTAnimation.xcodeproj */;
@@ -440,6 +445,19 @@
 		};
 /* End PBXContainerItemProxy section */
 
+/* Begin PBXCopyFilesBuildPhase section */
+		4217B141214ADBC00034808C /* Embed App Extensions */ = {
+			isa = PBXCopyFilesBuildPhase;
+			buildActionMask = 2147483647;
+			dstPath = "";
+			dstSubfolderSpec = 13;
+			files = (
+			);
+			name = "Embed App Extensions";
+			runOnlyForDeploymentPostprocessing = 0;
+		};
+/* End PBXCopyFilesBuildPhase section */
+
 /* Begin PBXFileReference section */
 		008F07F21AC5B25A0029DE68 /* main.jsbundle */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = main.jsbundle; sourceTree = "<group>"; };
 		00C302A71ABCB8CE00DB3ED1 /* RCTActionSheet.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = RCTActionSheet.xcodeproj; path = "../node_modules/react-native/Libraries/ActionSheetIOS/RCTActionSheet.xcodeproj"; sourceTree = "<group>"; };
@@ -472,6 +490,9 @@
 		32A467E2C3364ABDBB7BD0D1 /* Inter-UI-BoldItalic.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-BoldItalic.otf"; path = "../assets/fonts/Inter-UI-BoldItalic.otf"; sourceTree = "<group>"; };
 		3BD7DCDF7B194D7BB9BE3C6C /* RNImagePicker.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = RNImagePicker.xcodeproj; path = "../node_modules/react-native-image-picker/ios/RNImagePicker.xcodeproj"; sourceTree = "<group>"; };
 		3F58D699A37B432BA1C0F092 /* libRNImagePicker.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libRNImagePicker.a; sourceTree = "<group>"; };
+		4217B130214ADB740034808C /* apolloschurchapp.entitlements */ = {isa = PBXFileReference; lastKnownFileType = text.plist.entitlements; name = apolloschurchapp.entitlements; path = apolloschurchapp/apolloschurchapp.entitlements; sourceTree = "<group>"; };
+		4217B142214ADCD50034808C /* UIKit.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = UIKit.framework; path = System/Library/Frameworks/UIKit.framework; sourceTree = SDKROOT; };
+		4217B144214ADCE10034808C /* SystemConfiguration.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = SystemConfiguration.framework; path = System/Library/Frameworks/SystemConfiguration.framework; sourceTree = SDKROOT; };
 		4629759169AB4756B447B16A /* DroidSerif-Bold.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "DroidSerif-Bold.ttf"; path = "../assets/fonts/DroidSerif-Bold.ttf"; sourceTree = "<group>"; };
 		46704FC4FCEB45B6B9DD92BB /* BVLinearGradient.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = BVLinearGradient.xcodeproj; path = "../node_modules/react-native-linear-gradient/BVLinearGradient.xcodeproj"; sourceTree = "<group>"; };
 		4BD3C4E6742F4F6380640CA9 /* MusicControl.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = MusicControl.xcodeproj; path = "../node_modules/react-native-music-control/ios/MusicControl.xcodeproj"; sourceTree = "<group>"; };
@@ -484,8 +505,10 @@
 		71E6499CCC9D4DB2ADD365D8 /* libDBCustomTabs.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libDBCustomTabs.a; sourceTree = "<group>"; };
 		76E6AD5294554A5FA53DB415 /* DroidSerif-Regular.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "DroidSerif-Regular.ttf"; path = "../assets/fonts/DroidSerif-Regular.ttf"; sourceTree = "<group>"; };
 		78C398B01ACF4ADC00677621 /* RCTLinking.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = RCTLinking.xcodeproj; path = "../node_modules/react-native/Libraries/LinkingIOS/RCTLinking.xcodeproj"; sourceTree = "<group>"; };
+		828255630B3246AEA19CF24D /* libRCTOneSignal.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libRCTOneSignal.a; sourceTree = "<group>"; };
 		832341B01AAA6A8300B99B32 /* RCTText.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = RCTText.xcodeproj; path = "../node_modules/react-native/Libraries/Text/RCTText.xcodeproj"; sourceTree = "<group>"; };
 		84716CBFF56347BA880A16C6 /* libRNSVG-tvOS.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = "libRNSVG-tvOS.a"; sourceTree = "<group>"; };
+		84B340CC6C3940A782834F00 /* RCTOneSignal.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = RCTOneSignal.xcodeproj; path = "../node_modules/react-native-onesignal/ios/RCTOneSignal.xcodeproj"; sourceTree = "<group>"; };
 		8CA3C04F98954FB2895CD36D /* Inter-UI-Italic.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-Italic.otf"; path = "../assets/fonts/Inter-UI-Italic.otf"; sourceTree = "<group>"; };
 		8E13C8F9AE60487C9ED95C21 /* Inter-UI-Black.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-Black.otf"; path = "../assets/fonts/Inter-UI-Black.otf"; sourceTree = "<group>"; };
 		9FD7D997F4F14C439AC699B3 /* Inter-UI-Medium.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-Medium.otf"; path = "../assets/fonts/Inter-UI-Medium.otf"; sourceTree = "<group>"; };
@@ -500,9 +523,6 @@
 		F9CFD638A5414DFF961A8D11 /* DroidSerif-Italic.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "DroidSerif-Italic.ttf"; path = "../assets/fonts/DroidSerif-Italic.ttf"; sourceTree = "<group>"; };
 		FB25CB02F40D4CC39DDA3C74 /* Inter-UI-Bold.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-Bold.otf"; path = "../assets/fonts/Inter-UI-Bold.otf"; sourceTree = "<group>"; };
 		FC8FFB7C37BB4499AEB6FA37 /* libRCTVideo.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libRCTVideo.a; sourceTree = "<group>"; };
-		95B9E71966CF436CA52F0026 /* RNDeviceInfo.xcodeproj */ = {isa = PBXFileReference; name = "RNDeviceInfo.xcodeproj"; path = "../node_modules/react-native-device-info/ios/RNDeviceInfo.xcodeproj"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = wrapper.pb-project; explicitFileType = undefined; includeInIndex = 0; };
-		DFDDD075C3884791ABF84D1F /* libRNDeviceInfo.a */ = {isa = PBXFileReference; name = "libRNDeviceInfo.a"; path = "libRNDeviceInfo.a"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = archive.ar; explicitFileType = undefined; includeInIndex = 0; };
-		57A2A2F0E39F43CEA828D603 /* libRNDeviceInfo-tvOS.a */ = {isa = PBXFileReference; name = "libRNDeviceInfo-tvOS.a"; path = "libRNDeviceInfo-tvOS.a"; sourceTree = "<group>"; fileEncoding = undefined; lastKnownFileType = archive.ar; explicitFileType = undefined; includeInIndex = 0; };
 /* End PBXFileReference section */
 
 /* Begin PBXFrameworksBuildPhase section */
@@ -537,6 +557,7 @@
 				F3F4A3D13570438F9562746F /* libSplashScreen.a in Frameworks */,
 				89331B8BDAF24EF5BE08A485 /* libRNSVG.a in Frameworks */,
 				86D0B47B5BF143E797822EF1 /* libRCTVideo.a in Frameworks */,
+				6C6BE3C2189E4FBA9FB66BE5 /* libRCTOneSignal.a in Frameworks */,
 				B5DE58C6CF1E4E7ABDD1B48D /* libRNImagePicker.a in Frameworks */,
 				1C1FD8B313AB4A6583A0D31B /* libRNDeviceInfo.a in Frameworks */,
 				1680179655164C96985B5731 /* libMusicControl.a in Frameworks */,
@@ -654,6 +675,7 @@
 		13B07FAE1A68108700A75B9A /* apolloschurchapp */ = {
 			isa = PBXGroup;
 			children = (
+				4217B130214ADB740034808C /* apolloschurchapp.entitlements */,
 				008F07F21AC5B25A0029DE68 /* main.jsbundle */,
 				13B07FAF1A68108700A75B9A /* AppDelegate.h */,
 				13B07FB01A68108700A75B9A /* AppDelegate.m */,
@@ -691,11 +713,21 @@
 		2D16E6871FA4F8E400B85C8A /* Frameworks */ = {
 			isa = PBXGroup;
 			children = (
+				4217B144214ADCE10034808C /* SystemConfiguration.framework */,
+				4217B142214ADCD50034808C /* UIKit.framework */,
 				2D16E6891FA4F8E400B85C8A /* libReact.a */,
 			);
 			name = Frameworks;
 			sourceTree = "<group>";
 		};
+		427787E92149B9690045AD7F /* Products */ = {
+			isa = PBXGroup;
+			children = (
+				427787ED2149B96A0045AD7F /* libRCTOneSignal.a */,
+			);
+			name = Products;
+			sourceTree = "<group>";
+		};
 		4446111C6E474E038489E599 /* Resources */ = {
 			isa = PBXGroup;
 			children = (
@@ -743,11 +775,13 @@
 				CFAF46FBA8B44C7B8DCA7707 /* libRNSVG.a */,
 				FC8FFB7C37BB4499AEB6FA37 /* libRCTVideo.a */,
 				84716CBFF56347BA880A16C6 /* libRNSVG-tvOS.a */,
+				828255630B3246AEA19CF24D /* libRCTOneSignal.a */,
 				3F58D699A37B432BA1C0F092 /* libRNImagePicker.a */,
 				14D838A2FAE743C7B1DA5E31 /* libRNDeviceInfo.a */,
 				A574C961754742F688E43151 /* libRNDeviceInfo-tvOS.a */,
 				643D51DCF8F14993B9AA6990 /* libMusicControl.a */,
 				67E66409EF8A4BC7A1B9E054 /* libMusicControl-tvOS.a */,
+				A3ED0F5641694C579CA8E52D /* libRNBlur.a */,
 			);
 			name = "Recovered References";
 			sourceTree = "<group>";
@@ -842,6 +876,7 @@
 				A64D00F181AE4927A4632B6E /* SplashScreen.xcodeproj */,
 				01441BF099BE44EE8BA8E390 /* RNSVG.xcodeproj */,
 				2F8741F0746D4C8A89970C4D /* RCTVideo.xcodeproj */,
+				84B340CC6C3940A782834F00 /* RCTOneSignal.xcodeproj */,
 				3BD7DCDF7B194D7BB9BE3C6C /* RNImagePicker.xcodeproj */,
 				239ECFF08FA841B99DB1CAFA /* RNDeviceInfo.xcodeproj */,
 				4BD3C4E6742F4F6380640CA9 /* MusicControl.xcodeproj */,
@@ -931,6 +966,7 @@
 				13B07F8C1A680F5B00A75B9A /* Frameworks */,
 				13B07F8E1A680F5B00A75B9A /* Resources */,
 				00DD1BFF1BD5951E006B06BC /* Bundle React Native code and images */,
+				4217B141214ADBC00034808C /* Embed App Extensions */,
 			);
 			buildRules = (
 			);
@@ -992,6 +1028,11 @@
 					};
 					13B07F861A680F5B00A75B9A = {
 						DevelopmentTeam = 7TM8C6252Z;
+						SystemCapabilities = {
+							com.apple.Push = {
+								enabled = 1;
+							};
+						};
 					};
 					2D02E47A1E0B4A5D006451C7 = {
 						CreatedOnToolsVersion = 8.2.1;
@@ -1052,6 +1093,10 @@
 					ProductGroup = 00C302D41ABCB9D200DB3ED1 /* Products */;
 					ProjectRef = 00C302D31ABCB9D200DB3ED1 /* RCTNetwork.xcodeproj */;
 				},
+				{
+					ProductGroup = 427787E92149B9690045AD7F /* Products */;
+					ProjectRef = 84B340CC6C3940A782834F00 /* RCTOneSignal.xcodeproj */;
+				},
 				{
 					ProductGroup = 139105B71AF99BAD00B5F7CC /* Products */;
 					ProjectRef = 139105B61AF99BAD00B5F7CC /* RCTSettings.xcodeproj */;
@@ -1081,13 +1126,13 @@
 					ProjectRef = 6BAAC994942548609D0EEECA /* ReactNativeCustomTabs.xcodeproj */;
 				},
 				{
-					ProductGroup = BF99316D2138673B0077FD20 /* Products */;
-					ProjectRef = 3BD7DCDF7B194D7BB9BE3C6C /* RNImagePicker.xcodeproj */;
-        },
-        {
 					ProductGroup = 796F252E212CAD5D00C6935E /* Products */;
 					ProjectRef = 239ECFF08FA841B99DB1CAFA /* RNDeviceInfo.xcodeproj */;
 				},
+				{
+					ProductGroup = BF99316D2138673B0077FD20 /* Products */;
+					ProjectRef = 3BD7DCDF7B194D7BB9BE3C6C /* RNImagePicker.xcodeproj */;
+				},
 				{
 					ProductGroup = 791434702126017A006F13B7 /* Products */;
 					ProjectRef = 01441BF099BE44EE8BA8E390 /* RNSVG.xcodeproj */;
@@ -1336,6 +1381,13 @@
 			remoteRef = 3DAD3EAE1DF850E9000B6D8A /* PBXContainerItemProxy */;
 			sourceTree = BUILT_PRODUCTS_DIR;
 		};
+		427787ED2149B96A0045AD7F /* libRCTOneSignal.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libRCTOneSignal.a;
+			remoteRef = 427787EC2149B96A0045AD7F /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
 		5E9157331DD0AC6500FF2AA8 /* libRCTAnimation.a */ = {
 			isa = PBXReferenceProxy;
 			fileType = archive.ar;
@@ -1627,6 +1679,7 @@
 					"$(SRCROOT)/../node_modules/react-native-splash-screen/ios",
 					"$(SRCROOT)/../node_modules/react-native-svg/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-video/ios",
+					"$(SRCROOT)/../node_modules/react-native-onesignal/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
 					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
 					"$(SRCROOT)/../node_modules/react-native-music-control/ios",
@@ -1636,17 +1689,6 @@
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @loader_path/Frameworks";
 				LIBRARY_SEARCH_PATHS = (
 					"$(inherited)",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
 				);
 				OTHER_LDFLAGS = (
 					"-ObjC",
@@ -1670,6 +1712,7 @@
 					"$(SRCROOT)/../node_modules/react-native-splash-screen/ios",
 					"$(SRCROOT)/../node_modules/react-native-svg/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-video/ios",
+					"$(SRCROOT)/../node_modules/react-native-onesignal/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
 					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
 					"$(SRCROOT)/../node_modules/react-native-music-control/ios",
@@ -1679,17 +1722,6 @@
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @loader_path/Frameworks";
 				LIBRARY_SEARCH_PATHS = (
 					"$(inherited)",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
 				);
 				OTHER_LDFLAGS = (
 					"-ObjC",
@@ -1704,7 +1736,9 @@
 			isa = XCBuildConfiguration;
 			buildSettings = {
 				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
-				CURRENT_PROJECT_VERSION = 1;
+				CODE_SIGN_ENTITLEMENTS = apolloschurchapp/apolloschurchapp.entitlements;
+				CODE_SIGN_IDENTITY = "iPhone Developer";
+				CURRENT_PROJECT_VERSION = 3;
 				DEAD_CODE_STRIPPING = NO;
 				DEVELOPMENT_TEAM = 7TM8C6252Z;
 				HEADER_SEARCH_PATHS = (
@@ -1715,6 +1749,7 @@
 					"$(SRCROOT)/../node_modules/react-native-splash-screen/ios",
 					"$(SRCROOT)/../node_modules/react-native-svg/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-video/ios",
+					"$(SRCROOT)/../node_modules/react-native-onesignal/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
 					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
 					"$(SRCROOT)/../node_modules/react-native-music-control/ios",
@@ -1735,7 +1770,9 @@
 			isa = XCBuildConfiguration;
 			buildSettings = {
 				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
-				CURRENT_PROJECT_VERSION = 1;
+				CODE_SIGN_ENTITLEMENTS = apolloschurchapp/apolloschurchapp.entitlements;
+				CODE_SIGN_IDENTITY = "iPhone Developer";
+				CURRENT_PROJECT_VERSION = 3;
 				DEVELOPMENT_TEAM = 7TM8C6252Z;
 				HEADER_SEARCH_PATHS = (
 					"$(inherited)",
@@ -1745,6 +1782,7 @@
 					"$(SRCROOT)/../node_modules/react-native-splash-screen/ios",
 					"$(SRCROOT)/../node_modules/react-native-svg/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-video/ios",
+					"$(SRCROOT)/../node_modules/react-native-onesignal/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
 					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
 					"$(SRCROOT)/../node_modules/react-native-music-control/ios",
@@ -1781,6 +1819,7 @@
 					"$(SRCROOT)/../node_modules/react-native-splash-screen/ios",
 					"$(SRCROOT)/../node_modules/react-native-svg/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-video/ios",
+					"$(SRCROOT)/../node_modules/react-native-onesignal/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
 					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
 					"$(SRCROOT)/../node_modules/react-native-music-control/ios",
@@ -1789,17 +1828,6 @@
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
 				LIBRARY_SEARCH_PATHS = (
 					"$(inherited)",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
 				);
 				OTHER_LDFLAGS = (
 					"-ObjC",
@@ -1833,6 +1861,7 @@
 					"$(SRCROOT)/../node_modules/react-native-splash-screen/ios",
 					"$(SRCROOT)/../node_modules/react-native-svg/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-video/ios",
+					"$(SRCROOT)/../node_modules/react-native-onesignal/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
 					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
 					"$(SRCROOT)/../node_modules/react-native-music-control/ios",
@@ -1841,17 +1870,6 @@
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
 				LIBRARY_SEARCH_PATHS = (
 					"$(inherited)",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
 				);
 				OTHER_LDFLAGS = (
 					"-ObjC",
@@ -1884,6 +1902,7 @@
 					"$(SRCROOT)/../node_modules/react-native-splash-screen/ios",
 					"$(SRCROOT)/../node_modules/react-native-svg/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-video/ios",
+					"$(SRCROOT)/../node_modules/react-native-onesignal/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
 					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
 					"$(SRCROOT)/../node_modules/react-native-music-control/ios",
@@ -1892,17 +1911,6 @@
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @loader_path/Frameworks";
 				LIBRARY_SEARCH_PATHS = (
 					"$(inherited)",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
 				);
 				OTHER_LDFLAGS = (
 					"-ObjC",
@@ -1935,6 +1943,7 @@
 					"$(SRCROOT)/../node_modules/react-native-splash-screen/ios",
 					"$(SRCROOT)/../node_modules/react-native-svg/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-video/ios",
+					"$(SRCROOT)/../node_modules/react-native-onesignal/ios/**",
 					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
 					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
 					"$(SRCROOT)/../node_modules/react-native-music-control/ios",
@@ -1943,17 +1952,6 @@
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @loader_path/Frameworks";
 				LIBRARY_SEARCH_PATHS = (
 					"$(inherited)",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
 				);
 				OTHER_LDFLAGS = (
 					"-ObjC",
diff --git a/apolloschurchapp/ios/apolloschurchapp/AppDelegate.m b/apolloschurchapp/ios/apolloschurchapp/AppDelegate.m
index 9df5510..9d889ed 100644
--- a/apolloschurchapp/ios/apolloschurchapp/AppDelegate.m
+++ b/apolloschurchapp/ios/apolloschurchapp/AppDelegate.m
@@ -10,9 +10,28 @@
 #import <React/RCTBundleURLProvider.h>
 #import <React/RCTRootView.h>
 #import "RNSplashScreen.h"
+#import <React/RCTLinkingManager.h>
 
 @implementation AppDelegate
 
+#import <React/RCTLinkingManager.h>
+
+- (BOOL)application:(UIApplication *)application
+   openURL:(NSURL *)url
+   options:(NSDictionary<UIApplicationOpenURLOptionsKey,id> *)options
+{
+  return [RCTLinkingManager application:application openURL:url options:options];
+}
+
+// Only if your app is using [Universal Links](https://developer.apple.com/library/prerelease/ios/documentation/General/Conceptual/AppSearch/UniversalLinks.html).
+- (BOOL)application:(UIApplication *)application continueUserActivity:(NSUserActivity *)userActivity
+ restorationHandler:(void (^)(NSArray * _Nullable))restorationHandler
+{
+  return [RCTLinkingManager application:application
+                   continueUserActivity:userActivity
+                     restorationHandler:restorationHandler];
+}
+
 - (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions
 {
   NSURL *jsCodeLocation;
diff --git a/apolloschurchapp/ios/apolloschurchapp/Info.plist b/apolloschurchapp/ios/apolloschurchapp/Info.plist
index 6d5e74e..df2c677 100644
--- a/apolloschurchapp/ios/apolloschurchapp/Info.plist
+++ b/apolloschurchapp/ios/apolloschurchapp/Info.plist
@@ -2,6 +2,15 @@
 <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
 <plist version="1.0">
 <dict>
+	<key>CFBundleURLTypes</key>
+	<array>
+		<dict>
+			<key>CFBundleURLSchemes</key>
+			<array>
+				<string>apolloschurchapp</string>
+			</array>
+		</dict>
+	</array>
 	<key>CFBundleDevelopmentRegion</key>
 	<string>en</string>
 	<key>CFBundleDisplayName</key>
@@ -17,11 +26,11 @@
 	<key>CFBundlePackageType</key>
 	<string>APPL</string>
 	<key>CFBundleShortVersionString</key>
-	<string>0.4.0</string>
+	<string>0.5.0</string>
 	<key>CFBundleSignature</key>
 	<string>????</string>
 	<key>CFBundleVersion</key>
-	<string>1</string>
+	<string>3</string>
 	<key>ITSAppUsesNonExemptEncryption</key>
 	<false/>
 	<key>LSRequiresIPhoneOS</key>
@@ -43,7 +52,7 @@
 		</dict>
 	</dict>
 	<key>NSLocationWhenInUseUsageDescription</key>
-	<string/>
+	<string></string>
 	<key>UIAppFonts</key>
 	<array>
 		<string>DroidSerif-Bold.ttf</string>
@@ -62,6 +71,7 @@
 	<key>UIBackgroundModes</key>
 	<array>
 		<string>audio</string>
+		<string>remote-notification</string>
 	</array>
 	<key>UILaunchStoryboardName</key>
 	<string>LaunchScreen</string>
@@ -79,13 +89,13 @@
 	</array>
 	<key>UIViewControllerBasedStatusBarAppearance</key>
 	<false/>
-  <key>NSPhotoLibraryUsageDescription</key>
-  <string>$(PRODUCT_NAME) would like access to your photo gallery (for uploading profile pictures)</string>
-  <key>NSCameraUsageDescription</key>
-  <string>$(PRODUCT_NAME) would like to use your camera (for uploading profile pictures)</string>
-  <key>NSPhotoLibraryAddUsageDescription</key>
-  <string>$(PRODUCT_NAME) would like to save photos to your photo gallery (for uploading profile pictures)</string>
-  <key>NSMicrophoneUsageDescription</key>
-  <string>$(PRODUCT_NAME) would like to your microphone (for videos)</string>
+	<key>NSPhotoLibraryUsageDescription</key>
+	<string>$(PRODUCT_NAME) would like access to your photo gallery (for uploading profile pictures)</string>
+	<key>NSCameraUsageDescription</key>
+	<string>$(PRODUCT_NAME) would like to use your camera (for uploading profile pictures)</string>
+	<key>NSPhotoLibraryAddUsageDescription</key>
+	<string>$(PRODUCT_NAME) would like to save photos to your photo gallery (for uploading profile pictures)</string>
+	<key>NSMicrophoneUsageDescription</key>
+	<string>$(PRODUCT_NAME) would like to your microphone (for videos)</string>
 </dict>
 </plist>
diff --git a/apolloschurchapp/ios/apolloschurchapp/apolloschurchapp.entitlements b/apolloschurchapp/ios/apolloschurchapp/apolloschurchapp.entitlements
new file mode 100644
index 0000000..903def2
--- /dev/null
+++ b/apolloschurchapp/ios/apolloschurchapp/apolloschurchapp.entitlements
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
+<plist version="1.0">
+<dict>
+	<key>aps-environment</key>
+	<string>development</string>
+</dict>
+</plist>
diff --git a/apolloschurchapp/ios/apolloschurchappTests/Info.plist b/apolloschurchapp/ios/apolloschurchappTests/Info.plist
index 3bbe4e6..4491f31 100644
--- a/apolloschurchapp/ios/apolloschurchappTests/Info.plist
+++ b/apolloschurchapp/ios/apolloschurchappTests/Info.plist
@@ -15,10 +15,10 @@
 	<key>CFBundlePackageType</key>
 	<string>BNDL</string>
 	<key>CFBundleShortVersionString</key>
-	<string>0.4.0</string>
+	<string>0.5.0</string>
 	<key>CFBundleSignature</key>
 	<string>????</string>
 	<key>CFBundleVersion</key>
-	<string>1</string>
+	<string>3</string>
 </dict>
 </plist>
diff --git a/apolloschurchapp/jest.setup.js b/apolloschurchapp/jest.setup.js
index 71e1e93..03cd103 100644
--- a/apolloschurchapp/jest.setup.js
+++ b/apolloschurchapp/jest.setup.js
@@ -1,4 +1,7 @@
 jest.mock('./src/client/index');
+jest.mock('./src/config', () => ({
+  ONE_SIGNAL_KEY: 'doesntmatter',
+}));
 jest.mock('react-native-custom-tabs', () => ({
   CustomTabs: {
     openURL: jest.fn(),
@@ -10,6 +13,7 @@ jest.mock('react-native-safari-view', () => ({
   show: jest.fn(),
 }));
 
+jest.mock('react-native-onesignal');
 jest.mock('react-native-music-control', () => ({
   enableBackgroundMode: jest.fn(),
   enableControl: jest.fn(),
diff --git a/apolloschurchapp/package.json b/apolloschurchapp/package.json
index 8805fc0..ef14df1 100644
--- a/apolloschurchapp/package.json
+++ b/apolloschurchapp/package.json
@@ -1,6 +1,6 @@
 {
   "name": "apolloschurchapp",
-  "version": "0.5.0",
+  "version": "0.6.0",
   "private": true,
   "workspaces": {
     "nohoist": [
@@ -17,6 +17,7 @@
     "babel-preset-react-native": "5",
     "codecov": "3.0.2",
     "get-yarn-workspaces": "1.0.2",
+    "jest": "^23.5.0",
     "jest-react-native": "18.0.0",
     "nodemon": "1.17.5",
     "prop-types": "15.6.1",
@@ -97,8 +98,10 @@
     "react-native-linear-gradient": "2.4.0",
     "react-native-modal-datetime-picker": "6.0.0",
     "react-native-music-control": "^0.7.3",
+    "react-native-onesignal": "^3.2.7",
     "react-native-safari-view": "2.1.0",
-    "react-native-safe-area-view": "^0.9.0",
+    "react-native-safe-area-view": "^0.11.0",
+    "react-native-screens": "^1.0.0-alpha.12",
     "react-native-splash-screen": "3.1.1",
     "react-native-svg": "6.5.2",
     "react-native-tab-view": "1.0.2",
diff --git a/apolloschurchapp/src/NavigationService.js b/apolloschurchapp/src/NavigationService.js
new file mode 100644
index 0000000..a5d758b
--- /dev/null
+++ b/apolloschurchapp/src/NavigationService.js
@@ -0,0 +1,23 @@
+import { NavigationActions } from 'react-navigation';
+
+let _navigator;
+
+function setTopLevelNavigator(navigatorRef) {
+  _navigator = navigatorRef;
+}
+
+function navigate(routeName, params) {
+  _navigator.dispatch(
+    NavigationActions.navigate({
+      routeName,
+      params,
+    })
+  );
+}
+
+// add other navigation functions that you need and export them
+
+export default {
+  navigate,
+  setTopLevelNavigator,
+};
diff --git a/apolloschurchapp/src/Notifications.js b/apolloschurchapp/src/Notifications.js
new file mode 100644
index 0000000..d37e22f
--- /dev/null
+++ b/apolloschurchapp/src/Notifications.js
@@ -0,0 +1,69 @@
+import querystring from 'querystring';
+import URL from 'url';
+import { Component } from 'react';
+import { Linking } from 'react-native';
+import OneSignal from 'react-native-onesignal';
+import NavigationService from './NavigationService';
+import { ONE_SIGNAL_KEY } from './config';
+
+export default class NotificationsInit extends Component {
+  static navigationOptions = {};
+
+  componentWillMount() {
+    OneSignal.init(ONE_SIGNAL_KEY, {
+      kOSSettingsKeyAutoPrompt: true,
+    });
+    OneSignal.addEventListener('received', this.onReceived);
+    OneSignal.addEventListener('opened', this.onOpened);
+    OneSignal.addEventListener('ids', this.onIds);
+  }
+
+  componentDidMount() {
+    Linking.getInitialURL().then((url) => {
+      this.navigate(url);
+    });
+    Linking.addEventListener('url', ({ url }) => this.navigate(url));
+  }
+
+  componentWillUnmount() {
+    Linking.removeEventListener('url');
+    OneSignal.removeEventListener('received');
+    OneSignal.removeEventListener('opened');
+    OneSignal.removeEventListener('ids');
+  }
+
+  navigate = (rawUrl) => {
+    if (!rawUrl) return;
+    const url = URL.parse(rawUrl);
+    const route = url.pathname.substring(1);
+    const args = querystring.parse(url.query);
+    NavigationService.navigate(route, args);
+  };
+
+  onReceived = (notification) => {
+    console.log('Notification received: ', notification);
+  };
+
+  onOpened = (openResult) => {
+    console.log('Message: ', openResult.notification.payload.body);
+    console.log('Data: ', openResult.notification.payload.additionalData);
+    console.log('isActive: ', openResult.notification.isAppInFocus);
+    console.log('openResult: ', openResult);
+    // URL looks like this
+    // apolloschurchapp://AppStackNavigator/Connect
+    // apolloschurchapp://SomethingElse/Connect
+    // apolloschurchapp://SomethingElse/ContentSingle?itemId=SomeItemId:blablalba
+    const { url } = openResult.notification.payload.additionalData;
+    if (url) {
+      this.navigate(url);
+    }
+  };
+
+  onIds = (device) => {
+    console.log('Device info: ', device);
+  };
+
+  render() {
+    return null;
+  }
+}
diff --git a/apolloschurchapp/src/Providers.js b/apolloschurchapp/src/Providers.js
index cf42144..e2cd8e8 100644
--- a/apolloschurchapp/src/Providers.js
+++ b/apolloschurchapp/src/Providers.js
@@ -3,5 +3,11 @@ import { nest } from 'recompose';
 import ClientProvider from 'apolloschurchapp/src/client';
 import { ThemeProvider } from 'apolloschurchapp/src/ui/theme';
 import { WebBrowserProvider } from 'apolloschurchapp/src/ui/WebBrowser';
+import { LayoutProvider } from 'apolloschurchapp/src/ui/LayoutContext';
 
-export default nest(ClientProvider, ThemeProvider, WebBrowserProvider);
+export default nest(
+  ClientProvider,
+  ThemeProvider,
+  WebBrowserProvider,
+  LayoutProvider
+);
diff --git a/apolloschurchapp/src/__mocks__/config.js b/apolloschurchapp/src/__mocks__/config.js
new file mode 100644
index 0000000..b1162fc
--- /dev/null
+++ b/apolloschurchapp/src/__mocks__/config.js
@@ -0,0 +1,2 @@
+/* eslint-disable import/prefer-default-export */
+export const ONE_SIGNAL_KEY = 'doesntmatter';
diff --git a/apolloschurchapp/src/analytics/TrackEventWhenLoaded.js b/apolloschurchapp/src/analytics/TrackEventWhenLoaded.js
new file mode 100644
index 0000000..eb7ed61
--- /dev/null
+++ b/apolloschurchapp/src/analytics/TrackEventWhenLoaded.js
@@ -0,0 +1,38 @@
+import { PureComponent } from 'react';
+import PropTypes from 'prop-types';
+import { track } from './index';
+
+export default class TrackEventWhenLoaded extends PureComponent {
+  componentDidMount() {
+    if (this.props.loaded) {
+      this.track();
+    }
+  }
+
+  componentDidUpdate(prevProps) {
+    if (!prevProps.loaded && this.props.loaded) {
+      this.track();
+    }
+  }
+
+  get trackClient() {
+    return this.props.track || track;
+  }
+
+  track() {
+    const { eventName, properties } = this.props;
+    return this.trackClient({ eventName, properties });
+  }
+
+  render() {
+    return null;
+  }
+}
+
+TrackEventWhenLoaded.propTypes = {
+  loaded: PropTypes.bool.isRequired,
+  eventName: PropTypes.string.isRequired,
+  // eslint-disable-next-line react/forbid-prop-types
+  properties: PropTypes.any,
+  track: PropTypes.func,
+};
diff --git a/apolloschurchapp/src/analytics/TrackEventWhenLoaded.tests.js b/apolloschurchapp/src/analytics/TrackEventWhenLoaded.tests.js
new file mode 100644
index 0000000..fcf66ed
--- /dev/null
+++ b/apolloschurchapp/src/analytics/TrackEventWhenLoaded.tests.js
@@ -0,0 +1,46 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import TrackEventWhenLoaded from './TrackEventWhenLoaded';
+
+const trackMock = jest.fn();
+
+describe('The TrackEventWhenLoaded component', () => {
+  afterEach(() => {
+    trackMock.mockClear();
+  });
+  it('should track an event if mounted with loaded=true', () => {
+    renderer.create(
+      <TrackEventWhenLoaded
+        loaded
+        eventName="Track Something"
+        properties={{ ThingId: '1234' }}
+        track={trackMock}
+      />
+    );
+    expect(trackMock.mock.calls).toMatchSnapshot();
+  });
+
+  it('should track an event if mounted with loaded=false and then switching to true', () => {
+    const tree = renderer.create(
+      <TrackEventWhenLoaded
+        loaded={false}
+        eventName="Track Something"
+        properties={{ ThingId: '1234' }}
+        track={trackMock}
+        key="tracker"
+      />
+    );
+    expect(trackMock.mock.calls).toMatchSnapshot();
+    tree.update(
+      <TrackEventWhenLoaded
+        loaded
+        eventName="Track Something"
+        properties={{ ThingId: '1234' }}
+        track={trackMock}
+        key="tracker"
+      />
+    );
+    expect(trackMock.mock.calls).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/analytics/index.js b/apolloschurchapp/src/analytics/index.js
index 6b410b2..cd7dbba 100644
--- a/apolloschurchapp/src/analytics/index.js
+++ b/apolloschurchapp/src/analytics/index.js
@@ -59,3 +59,21 @@ export const identify = () =>
       },
     },
   });
+
+export const events = {
+  LikeContent: 'Like Content',
+  UnlikeContent: 'Unlike Content',
+  ViewContent: 'View Content',
+  ShareContent: 'Share Content',
+  UserLogin: 'User Login',
+  UserSignup: 'User Signup',
+  UserLogout: 'UserLogout',
+  UserForgotPassword: 'User Forgot Password',
+  UserPlayedMedia: 'User Played Media',
+};
+
+export default {
+  track,
+  identify,
+  events,
+};
diff --git a/apolloschurchapp/src/auth/LoginButton.js b/apolloschurchapp/src/auth/LoginButton.js
deleted file mode 100644
index 30e8acb..0000000
--- a/apolloschurchapp/src/auth/LoginButton.js
+++ /dev/null
@@ -1,45 +0,0 @@
-import React, { PureComponent } from 'react';
-import { withNavigation } from 'react-navigation';
-import { Query, Mutation } from 'react-apollo';
-import PropTypes from 'prop-types';
-
-import { ButtonLink } from 'apolloschurchapp/src/ui/Button';
-import styled from 'apolloschurchapp/src/ui/styled';
-import ActivityIndicator from 'apolloschurchapp/src/ui/ActivityIndicator';
-
-import logout from './logout';
-import getLoginState from './getLoginState';
-
-const Button = styled(({ theme }) => ({
-  paddingHorizontal: theme.sizing.baseUnit,
-}))(ButtonLink);
-
-class LoginButton extends PureComponent {
-  static propTypes = {
-    navigation: PropTypes.shape({
-      push: PropTypes.func,
-    }),
-  };
-
-  handleLoginPress = () => this.props.navigation.push('Auth');
-
-  renderLogoutButton = () => (
-    <Mutation mutation={logout}>
-      {(handleLogout) => <Button onPress={() => handleLogout()}>Logout</Button>}
-    </Mutation>
-  );
-
-  render() {
-    return (
-      <Query query={getLoginState}>
-        {({ data: { isLoggedIn = false, loading } }) => {
-          if (loading) return <ActivityIndicator />;
-          if (isLoggedIn) return this.renderLogoutButton();
-          return <Button onPress={this.handleLoginPress}>Login</Button>;
-        }}
-      </Query>
-    );
-  }
-}
-
-export default withNavigation(LoginButton);
diff --git a/apolloschurchapp/src/auth/LoginButton.tests.js b/apolloschurchapp/src/auth/LoginButton/LoginButton.tests.js
similarity index 62%
rename from apolloschurchapp/src/auth/LoginButton.tests.js
rename to apolloschurchapp/src/auth/LoginButton/LoginButton.tests.js
index 364379e..64f2b62 100644
--- a/apolloschurchapp/src/auth/LoginButton.tests.js
+++ b/apolloschurchapp/src/auth/LoginButton/LoginButton.tests.js
@@ -4,10 +4,31 @@ import wait from 'waait';
 
 import Providers from 'apolloschurchapp/src/Providers';
 
-import LoginButton from './LoginButton';
-import getLoginState from './getLoginState';
+import getLoginState from '../getLoginState';
+
+import LoginButton from '.';
 
 describe('LoginButton component', () => {
+  it('renders nothing when logged in', async () => {
+    const mock = {
+      request: {
+        query: getLoginState,
+      },
+      result: {
+        data: { isLoggedIn: true },
+      },
+    };
+
+    const navigation = { navigate: jest.fn() };
+    const tree = renderer.create(
+      <Providers mocks={[mock]}>
+        <LoginButton navigation={navigation} />
+      </Providers>
+    );
+    await wait(0); // wait for response from graphql
+    expect(tree).toMatchSnapshot();
+  });
+
   it('renders a LoginButton when logged out', async () => {
     const mock = {
       request: {
@@ -28,19 +49,20 @@ describe('LoginButton component', () => {
     expect(tree).toMatchSnapshot();
   });
 
-  it('renders a LogoutButton when logged in', async () => {
+  it('renders a LoginButton that is loading', async () => {
     const mock = {
       request: {
         query: getLoginState,
       },
       result: {
-        data: { isLoggedIn: 'some-auth-token' },
+        data: { isLoggedIn: null },
       },
     };
+
     const navigation = { navigate: jest.fn() };
     const tree = renderer.create(
       <Providers mocks={[mock]}>
-        <LoginButton navigation={navigation} />
+        <LoginButton navigation={navigation} loading />
       </Providers>
     );
     await wait(0); // wait for response from graphql
diff --git a/apolloschurchapp/src/auth/LoginButton/index.js b/apolloschurchapp/src/auth/LoginButton/index.js
new file mode 100644
index 0000000..4e932e2
--- /dev/null
+++ b/apolloschurchapp/src/auth/LoginButton/index.js
@@ -0,0 +1,40 @@
+import React, { PureComponent } from 'react';
+import { withNavigation } from 'react-navigation';
+import { Query } from 'react-apollo';
+import PropTypes from 'prop-types';
+
+import Button from 'apolloschurchapp/src/ui/Button';
+
+import getLoginState from '../getLoginState';
+
+class LoginButton extends PureComponent {
+  static propTypes = {
+    navigation: PropTypes.shape({
+      push: PropTypes.func,
+    }),
+  };
+
+  handleLoginPress = () => this.props.navigation.push('Auth');
+
+  render() {
+    const { navigation, ...otherProps } = this.props;
+    return (
+      <Query query={getLoginState}>
+        {({ data }) => {
+          const { isLoggedIn, loading } = data;
+          if (isLoggedIn) return null;
+          return (
+            <Button
+              onPress={this.handleLoginPress}
+              title="Get Connected"
+              loading={loading}
+              {...otherProps}
+            />
+          );
+        }}
+      </Query>
+    );
+  }
+}
+
+export default withNavigation(LoginButton);
diff --git a/apolloschurchapp/src/auth/ProtectedAction.js b/apolloschurchapp/src/auth/ProtectedAction.js
index f38ae15..5cec0fd 100644
--- a/apolloschurchapp/src/auth/ProtectedAction.js
+++ b/apolloschurchapp/src/auth/ProtectedAction.js
@@ -15,6 +15,7 @@ class ProtectedAction extends PureComponent {
     }),
     loading: PropTypes.bool,
     isLoggedIn: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),
+    action: PropTypes.func.isRequired,
   };
 
   componentDidUpdate(oldProps) {
@@ -50,7 +51,7 @@ class ProtectedAction extends PureComponent {
 
   render() {
     return typeof this.props.children === 'function'
-      ? this.props.children(this.protectedActionHandler)
+      ? this.props.children(this.protectedActionHandler(this.props.action))
       : this.props.children;
   }
 }
diff --git a/apolloschurchapp/src/auth/ProtectedTouchable.js b/apolloschurchapp/src/auth/ProtectedTouchable.js
new file mode 100644
index 0000000..df86cc4
--- /dev/null
+++ b/apolloschurchapp/src/auth/ProtectedTouchable.js
@@ -0,0 +1,24 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Touchable from 'apolloschurchapp/src/ui/Touchable';
+import ProtectedAction from './ProtectedAction';
+
+const ProtectedTouchable = ({
+  onPress,
+  children,
+  TouchableComponent = Touchable,
+}) => (
+  <ProtectedAction action={onPress}>
+    {(action) => (
+      <TouchableComponent onPress={action}>{children}</TouchableComponent>
+    )}
+  </ProtectedAction>
+);
+
+ProtectedTouchable.propTypes = {
+  onPress: PropTypes.func.isRequired,
+  children: PropTypes.node.isRequired,
+  TouchableComponent: PropTypes.func,
+};
+
+export default ProtectedTouchable;
diff --git a/apolloschurchapp/src/auth/getLoginState.js b/apolloschurchapp/src/auth/getLoginState.js
index da75449..97d3e8d 100644
--- a/apolloschurchapp/src/auth/getLoginState.js
+++ b/apolloschurchapp/src/auth/getLoginState.js
@@ -2,6 +2,6 @@ import gql from 'graphql-tag';
 
 export default gql`
   query {
-    isLoggedIn: authToken @client
+    isLoggedIn @client
   }
 `;
diff --git a/apolloschurchapp/src/auth/index.js b/apolloschurchapp/src/auth/index.js
index 55c6e08..4b7d059 100644
--- a/apolloschurchapp/src/auth/index.js
+++ b/apolloschurchapp/src/auth/index.js
@@ -31,14 +31,14 @@ const HeaderContainer = styled(({ theme }) => ({
 }))(SafeAreaView);
 
 const Header = styled(({ theme }) => ({
-  paddingHorizontal: theme.sizing.baseUnit,
+  padding: theme.sizing.baseUnit,
   paddingBottom: theme.sizing.baseUnit * 1.5,
 }))(View);
 
 const CancelButton = styled(({ theme }) => ({
   alignSelf: 'flex-end',
-  marginTop: theme.sizing.baseUnit * 0.75,
-  marginRight: theme.sizing.baseUnit,
+  paddingTop: theme.sizing.baseUnit * 0.75,
+  paddingRight: theme.sizing.baseUnit,
 }))(ButtonLink);
 
 class Auth extends PureComponent {
diff --git a/apolloschurchapp/src/auth/login/Form.js b/apolloschurchapp/src/auth/login/Form.js
index aa0ed89..b45e525 100644
--- a/apolloschurchapp/src/auth/login/Form.js
+++ b/apolloschurchapp/src/auth/login/Form.js
@@ -3,6 +3,7 @@ import { View, SafeAreaView } from 'react-native';
 import PropTypes from 'prop-types';
 import { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';
 
+import { track, events } from 'apolloschurchapp/src/analytics';
 import { WebBrowserConsumer } from 'apolloschurchapp/src/ui/WebBrowser';
 import FlexedView from 'apolloschurchapp/src/ui/FlexedView';
 import PaddedView from 'apolloschurchapp/src/ui/PaddedView';
@@ -71,9 +72,12 @@ class Form extends PureComponent {
               <WebBrowserConsumer>
                 {(openUrl) => (
                   <ButtonLink
-                    onPress={() =>
-                      openUrl('https://apollosrock.newspring.cc/page/56/')
-                    }
+                    onPress={() => {
+                      track({ eventName: events.UserForgotPassword });
+                      return openUrl(
+                        'https://apollosrock.newspring.cc/page/56/'
+                      );
+                    }}
                   >
                     Forgot your password?
                   </ButtonLink>
diff --git a/apolloschurchapp/src/auth/login/index.js b/apolloschurchapp/src/auth/login/index.js
index 45bcb63..1546d60 100644
--- a/apolloschurchapp/src/auth/login/index.js
+++ b/apolloschurchapp/src/auth/login/index.js
@@ -34,8 +34,7 @@ const Login = ({ onLogin }) => (
             await authenticate({ variables });
             if (onLogin) onLogin();
           } catch (e) {
-            console.log(e);
-            const graphQLErrors = [];
+            const { graphQLErrors } = e;
             if (
               graphQLErrors.length &&
               graphQLErrors.find(
diff --git a/apolloschurchapp/src/auth/signup/index.js b/apolloschurchapp/src/auth/signup/index.js
index 63d8ebd..81e64a7 100644
--- a/apolloschurchapp/src/auth/signup/index.js
+++ b/apolloschurchapp/src/auth/signup/index.js
@@ -4,6 +4,8 @@ import { Formik } from 'formik';
 import * as Yup from 'yup';
 import PropTypes from 'prop-types';
 
+import { track, events } from 'apolloschurchapp/src/analytics';
+
 import handleLogin from '../handleLogin';
 import { client } from '../../client'; //eslint-disable-line
 import registerPersonMutation from './registerPerson';
@@ -32,6 +34,7 @@ const Signup = ({ onSignup }) => (
         onSubmit={async (variables, { setSubmitting, setFieldError }) => {
           try {
             await authenticate({ variables });
+            track({ eventName: events.UserSignup }); // TODO: Move signup logic to store/index and move tracking logic there also.
             if (onSignup) onSignup();
           } catch ({ graphQLErrors = [], ...e }) {
             if (
diff --git a/apolloschurchapp/src/client/__mocks__/index.js b/apolloschurchapp/src/client/__mocks__/index.js
index ca96910..7d3347c 100644
--- a/apolloschurchapp/src/client/__mocks__/index.js
+++ b/apolloschurchapp/src/client/__mocks__/index.js
@@ -10,7 +10,12 @@ import clientStateLink from '../clientStateLink';
 
 export default MockedProvider;
 
-const schema = makeExecutableSchema({ typeDefs });
+const schema = makeExecutableSchema({
+  typeDefs,
+  resolverValidationOptions: {
+    requireResolversForResolveType: false,
+  },
+});
 addMockFunctionsToSchema({ schema });
 
 let link = new SchemaLink({ schema });
diff --git a/apolloschurchapp/src/client/cache.js b/apolloschurchapp/src/client/cache.js
index 84f792e..2963286 100644
--- a/apolloschurchapp/src/client/cache.js
+++ b/apolloschurchapp/src/client/cache.js
@@ -21,7 +21,7 @@ const cache = new InMemoryCache({
   cacheRedirects: {
     Query: {
       node: (_, { id }, { getCacheKey }) =>
-        getCacheKey({ __typename: id.split(':')[0], id }),
+        id ? getCacheKey({ __typename: id.split(':')[0], id }) : null,
     },
   },
 });
diff --git a/apolloschurchapp/src/client/fragmentTypes.json b/apolloschurchapp/src/client/fragmentTypes.json
index c78600d..8b9885f 100644
--- a/apolloschurchapp/src/client/fragmentTypes.json
+++ b/apolloschurchapp/src/client/fragmentTypes.json
@@ -1 +1 @@
-{"__schema":{"types":[{"kind":"INTERFACE","name":"Node","possibleTypes":[{"name":"Person"},{"name":"ContentChannel"},{"name":"Interaction"},{"name":"Session"},{"name":"UniversalContentItem"},{"name":"DevotionalContentItem"}]},{"kind":"INTERFACE","name":"MediaSource","possibleTypes":[{"name":"ImageMediaSource"},{"name":"VideoMediaSource"},{"name":"AudioMediaSource"}]},{"kind":"INTERFACE","name":"ContentItem","possibleTypes":[{"name":"UniversalContentItem"},{"name":"DevotionalContentItem"}]},{"kind":"INTERFACE","name":"Media","possibleTypes":[{"name":"ImageMedia"},{"name":"VideoMedia"},{"name":"AudioMedia"}]},{"kind":"INTERFACE","name":"Sharable","possibleTypes":[{"name":"SharableContentItem"}]}]}}
\ No newline at end of file
+{"__schema":{"types":[{"kind":"INTERFACE","name":"Node","possibleTypes":[{"name":"ContentChannel"},{"name":"Person"},{"name":"Interaction"},{"name":"UniversalContentItem"},{"name":"DevotionalContentItem"}]},{"kind":"INTERFACE","name":"ContentItem","possibleTypes":[{"name":"UniversalContentItem"},{"name":"DevotionalContentItem"}]},{"kind":"INTERFACE","name":"Media","possibleTypes":[{"name":"ImageMedia"},{"name":"VideoMedia"},{"name":"AudioMedia"}]},{"kind":"INTERFACE","name":"MediaSource","possibleTypes":[{"name":"ImageMediaSource"},{"name":"VideoMediaSource"},{"name":"AudioMediaSource"}]},{"kind":"INTERFACE","name":"Sharable","possibleTypes":[{"name":"SharableContentItem"}]}]}}
\ No newline at end of file
diff --git a/apolloschurchapp/src/client/index.js b/apolloschurchapp/src/client/index.js
index 913f977..76cff4a 100644
--- a/apolloschurchapp/src/client/index.js
+++ b/apolloschurchapp/src/client/index.js
@@ -16,6 +16,7 @@ export const client = new ApolloClient({
   link,
   cache,
   queryDeduplication: true,
+  shouldBatch: true,
 });
 
 class ClientProvider extends PureComponent {
diff --git a/apolloschurchapp/src/config.js b/apolloschurchapp/src/config.js
new file mode 100644
index 0000000..248183d
--- /dev/null
+++ b/apolloschurchapp/src/config.js
@@ -0,0 +1,6 @@
+/* eslint-disable import/prefer-default-export */
+import { ONE_SIGNAL_KEY as oneSignalKey } from 'react-native-dotenv';
+
+const ONE_SIGNAL_KEY = oneSignalKey;
+
+export { ONE_SIGNAL_KEY };
diff --git a/apolloschurchapp/src/content-feed/getContentFeed.js b/apolloschurchapp/src/content-feed/getContentFeed.js
index d6082c2..5bc3bc6 100644
--- a/apolloschurchapp/src/content-feed/getContentFeed.js
+++ b/apolloschurchapp/src/content-feed/getContentFeed.js
@@ -1,5 +1,7 @@
 import gql from 'graphql-tag';
 
+import { contentItemFragment } from '../content-single/getContentItem';
+
 export default gql`
   query getContentFeed($itemId: ID!) {
     node(id: $itemId) {
@@ -7,6 +9,7 @@ export default gql`
         childContentItemsConnection {
           edges {
             node {
+              ...contentItemFragment
               __typename
               id
               coverImage {
@@ -21,11 +24,6 @@ export default gql`
                 name
                 iconName
               }
-              sharing {
-                title
-                message
-                url
-              }
               title
             }
           }
@@ -33,4 +31,5 @@ export default gql`
       }
     }
   }
+  ${contentItemFragment}
 `;
diff --git a/apolloschurchapp/src/content-feed/index.js b/apolloschurchapp/src/content-feed/index.js
index 2546f1a..38ecc37 100644
--- a/apolloschurchapp/src/content-feed/index.js
+++ b/apolloschurchapp/src/content-feed/index.js
@@ -7,7 +7,6 @@ import BackgroundView from 'apolloschurchapp/src/ui/BackgroundView';
 import FeedView from 'apolloschurchapp/src/ui/FeedView';
 
 import getContentFeed from './getContentFeed';
-
 /**
  * This is where the component description lives
  * A FeedView wrapped in a query to pull content data.
diff --git a/apolloschurchapp/src/content-single/ActionContainer.js b/apolloschurchapp/src/content-single/ActionContainer.js
deleted file mode 100644
index c73ec22..0000000
--- a/apolloschurchapp/src/content-single/ActionContainer.js
+++ /dev/null
@@ -1,86 +0,0 @@
-import React from 'react';
-import { Query, Mutation } from 'react-apollo';
-
-import PropTypes from 'prop-types';
-
-import Share from 'apolloschurchapp/src/ui/Share';
-import Like from 'apolloschurchapp/src/ui/Like';
-import getSessionId from 'apolloschurchapp/src/store/getSessionId';
-import SideBySideView from 'apolloschurchapp/src/ui/SideBySideView';
-
-import updateLikeEntity from './updateLikeEntity';
-import getLikedContentItem from './getLikedContentItem';
-
-const ActionContainer = ({ content, itemId }) => (
-  <SideBySideView>
-    <Query query={getSessionId} fetchPolicy="cache-only">
-      {({ data: { sessionId } }) =>
-        sessionId ? (
-          <Query query={getLikedContentItem} variables={{ itemId }}>
-            {({
-              data: {
-                node: { isLiked, ...node },
-              },
-              refetch,
-            }) => (
-              <Mutation
-                mutation={updateLikeEntity}
-                optimisticResponse={{
-                  updateLikeEntity: {
-                    operation: isLiked ? 'Unlike' : 'Like',
-                    id: null, // unknown at this time
-                    interactionDateTime: new Date().toJSON(),
-                    __typename: 'Interaction',
-                  },
-                }}
-                update={(
-                  cache,
-                  {
-                    data: {
-                      updateLikeEntity: { operation },
-                    },
-                  }
-                ) => {
-                  cache.writeQuery({
-                    query: getLikedContentItem,
-                    data: {
-                      node: {
-                        ...node,
-                        isLiked: operation === 'Like',
-                      },
-                    },
-                  });
-                }}
-              >
-                {(createNewInteraction) => (
-                  <Like
-                    itemId={itemId}
-                    sessionId={sessionId}
-                    isLiked={isLiked}
-                    operation={isLiked ? 'Unlike' : 'Like'}
-                    toggleLike={async (variables) => {
-                      try {
-                        await createNewInteraction({ variables });
-                        await refetch();
-                      } catch (e) {
-                        console.log(e);
-                      }
-                    }}
-                  />
-                )}
-              </Mutation>
-            )}
-          </Query>
-        ) : null
-      }
-    </Query>
-    <Share content={content} />
-  </SideBySideView>
-);
-
-ActionContainer.propTypes = {
-  content: PropTypes.shape({}),
-  itemId: PropTypes.string,
-};
-
-export default ActionContainer;
diff --git a/apolloschurchapp/src/content-single/ActionContainer.tests.js b/apolloschurchapp/src/content-single/ActionContainer.tests.js
deleted file mode 100644
index bbb6af0..0000000
--- a/apolloschurchapp/src/content-single/ActionContainer.tests.js
+++ /dev/null
@@ -1,23 +0,0 @@
-import React from 'react';
-import renderer from 'react-test-renderer';
-
-import Providers from 'apolloschurchapp/src/Providers';
-
-import ActionContainer from './ActionContainer';
-
-describe('action container', () => {
-  it('renders the like and share buttons on successful load', () => {
-    const shareObject = {
-      message: '',
-      title: 'The surprising journey that changed me and my dad',
-      url: 'https://apollosrock.newspring.cc/',
-    };
-
-    const tree = renderer.create(
-      <Providers>
-        <ActionContainer content={shareObject} itemId={'fakeid'} />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/content-single/ActionContainer/ActionContainer.tests.js b/apolloschurchapp/src/content-single/ActionContainer/ActionContainer.tests.js
new file mode 100644
index 0000000..4d5e84a
--- /dev/null
+++ b/apolloschurchapp/src/content-single/ActionContainer/ActionContainer.tests.js
@@ -0,0 +1,22 @@
+// import React from 'react';
+// import renderer from 'react-test-renderer';
+
+// import Providers from 'apolloschurchapp/src/Providers';
+
+// import ActionContainer from './ActionContainer';
+
+describe('action container', () => {
+  it('renders the like and share buttons on successful load', () => {
+    //     const shareObject = {
+    //       message: '',
+    //       title: 'The surprising journey that changed me and my dad',
+    //       url: 'https://apollosrock.newspring.cc/',
+    //     };
+    //     const tree = renderer.create(
+    //       <Providers>
+    //         <ActionContainer content={shareObject} itemId={'fakeid'} />
+    //       </Providers>
+    //     );
+    //     expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/content-single/ActionContainer/getShareContent.js b/apolloschurchapp/src/content-single/ActionContainer/getShareContent.js
new file mode 100644
index 0000000..44718b3
--- /dev/null
+++ b/apolloschurchapp/src/content-single/ActionContainer/getShareContent.js
@@ -0,0 +1,16 @@
+import gql from 'graphql-tag';
+
+export default gql`
+  query getShareContent($itemId: ID!) {
+    node(id: $itemId) {
+      ... on ContentItem {
+        id
+        sharing {
+          url
+          message
+          title
+        }
+      }
+    }
+  }
+`;
diff --git a/apolloschurchapp/src/content-single/ActionContainer/index.js b/apolloschurchapp/src/content-single/ActionContainer/index.js
new file mode 100644
index 0000000..a6b1408
--- /dev/null
+++ b/apolloschurchapp/src/content-single/ActionContainer/index.js
@@ -0,0 +1,50 @@
+import React from 'react';
+import { Platform, View } from 'react-native';
+import PropTypes from 'prop-types';
+import { Query } from 'react-apollo';
+import { get } from 'lodash';
+
+import Share from 'apolloschurchapp/src/ui/Share';
+
+import SideBySideView from 'apolloschurchapp/src/ui/SideBySideView';
+import LikeButton from 'apolloschurchapp/src/ui/LikeButton';
+import styled from 'apolloschurchapp/src/ui/styled';
+import { MediaPlayerSpacer } from 'apolloschurchapp/src/ui/MediaPlayer';
+
+import getShareContent from './getShareContent';
+
+const PositioningView = styled(({ theme }) => ({
+  justifyContent: 'space-around',
+  paddingVertical: theme.sizing.baseUnit / 2,
+  paddingHorizontal: theme.sizing.baseUnit,
+}))(SideBySideView);
+
+const Container = styled(({ theme }) => ({
+  backgroundColor: theme.colors.paper,
+  ...Platform.select(theme.shadows.default),
+}))(View);
+
+const ActionContainer = ({ itemId }) => (
+  <Container>
+    <MediaPlayerSpacer>
+      <PositioningView>
+        <LikeButton itemId={itemId} />
+        <Query query={getShareContent} variables={{ itemId }}>
+          {({ data: { node } = {}, error, loading }) => {
+            const sharing = get(node, 'sharing');
+            return loading || error || !sharing ? null : (
+              <Share content={sharing} />
+            );
+          }}
+        </Query>
+      </PositioningView>
+    </MediaPlayerSpacer>
+  </Container>
+);
+
+ActionContainer.propTypes = {
+  content: PropTypes.shape({}),
+  itemId: PropTypes.string,
+};
+
+export default ActionContainer;
diff --git a/apolloschurchapp/src/content-single/Devotional/ContentTab.js b/apolloschurchapp/src/content-single/Devotional/ContentTab.js
new file mode 100644
index 0000000..3dd8316
--- /dev/null
+++ b/apolloschurchapp/src/content-single/Devotional/ContentTab.js
@@ -0,0 +1,66 @@
+import React from 'react';
+import { ScrollView, View } from 'react-native';
+import PropTypes from 'prop-types';
+import PaddedView from 'apolloschurchapp/src/ui/PaddedView';
+import { H2 } from 'apolloschurchapp/src/ui/typography';
+import styled from 'apolloschurchapp/src/ui/styled';
+import HTMLView from 'apolloschurchapp/src/ui/HTMLView';
+import { ScriptureList } from 'apolloschurchapp/src/ui/Scripture';
+import Placeholder from 'apolloschurchapp/src/ui/Placeholder';
+
+const ContentContainer = styled({ paddingVertical: 0 })(PaddedView);
+
+/**
+ * This is the Content side of the Devotional tabbed component.
+ * Displays a header, scripture list (using the ScriptureList component),
+ * and the body text of the devo.
+ */
+const ContentTab = ({
+  title,
+  references,
+  body,
+  isLoading,
+  navigationState,
+}) => (
+  <ScrollView>
+    <ContentContainer>
+      <Placeholder.Paragraph
+        lineNumber={15}
+        onReady={!isLoading}
+        lastLineWidth="60%"
+        firstLineWidth="40%"
+      >
+        <View>
+          <H2 padded>{title}</H2>
+          {references && references.length ? (
+            <ScriptureList
+              references={references}
+              onPress={navigationState.route.jumpTo} // eslint-disable-line react/jsx-handler-names
+              tabDestination={'scripture'}
+            />
+          ) : null}
+          <HTMLView>{body}</HTMLView>
+        </View>
+      </Placeholder.Paragraph>
+    </ContentContainer>
+  </ScrollView>
+);
+
+ContentTab.propTypes = {
+  /** The devotional text */
+  body: PropTypes.string,
+  /** Toggles placeholders */
+  isLoading: PropTypes.bool,
+  /**
+   * The state of the TabView component (of which the ContentTab is one child component). Mostly used
+   * for the ScriptureList component to be able to jump to the ScriptureTab when the scripture
+   * reference link is tapped.
+   */
+  navigationState: PropTypes.shape({ routes: PropTypes.array }),
+  /** An array of human readable references (i.e. '1 Corinthians 15:57') */
+  references: PropTypes.arrayOf(PropTypes.string),
+  /** The devotional title */
+  title: PropTypes.string,
+};
+
+export default ContentTab;
diff --git a/apolloschurchapp/src/content-single/Devotional/Devotional.stories.js b/apolloschurchapp/src/content-single/Devotional/Devotional.stories.js
new file mode 100644
index 0000000..9caae7b
--- /dev/null
+++ b/apolloschurchapp/src/content-single/Devotional/Devotional.stories.js
@@ -0,0 +1,46 @@
+import React from 'react';
+import { storiesOf } from '@storybook/react-native';
+
+import Devotional from '.';
+
+const scripture = [
+  {
+    id: '1CO.15.57',
+    reference: '1 Corinthians 15:57',
+    html:
+      '<p class="p"><span data-number="57" class="v">57</span>But thanks be to God, who gives us the victory through our Lord Jesus Christ. </p>',
+  },
+  {
+    id: 'EXO.17.8-EXO.17.15',
+    reference: 'Exodus 17:8-15',
+    html:
+      '<p class="p"><span data-number="8" class="v">8</span>Then Amalek came and fought with Israel in Rephidim. <span data-number="9" class="v">9</span>Moses said to Joshua, “Choose men for us, and go out to fight with Amalek. Tomorrow I will stand on the top of the hill with God’s rod in my hand.” <span data-number="10" class="v">10</span>So Joshua did as Moses had told him, and fought with Amalek; and Moses, Aaron, and Hur went up to the top of the hill. <span data-number="11" class="v">11</span>When Moses held up his hand, Israel prevailed. When he let down his hand, Amalek prevailed. <span data-number="12" class="v">12</span>But Moses’ hands were heavy; so they took a stone, and put it under him, and he sat on it. Aaron and Hur held up his hands, the one on the one side, and the other on the other side. His hands were steady until sunset. <span data-number="13" class="v">13</span>Joshua defeated Amalek and his people with the edge of the sword. <span data-number="14" class="v">14</span>Yahweh said to Moses, “Write this for a memorial in a book, and rehearse it in the ears of Joshua: that I will utterly blot out the memory of Amalek from under the sky.” <span data-number="15" class="v">15</span>Moses built an altar, and called its name “Yahweh our Banner”.</p>',
+  },
+];
+
+const content = {
+  body:
+    '<p>Sometimes God&rsquo;s promises to us involve a fight. We have to fight to keep our focus on Him, fight to move towards the promise we know God has laid on our hearts. We have a real enemy that would love nothing more than to get us sidetracked and doubt God&rsquo;s promises. So we fight saying that we are going to believe God will do what He says He will do, and we keep fighting until we see that promise come to life.</p><p>In Exodus 17:8-15 the nation of Israel, freed from great oppression in Egypt was traveling to the land God promised them. Yet, Israel was fighting, again.&nbsp;<br />&nbsp;<br />As the Israelites were fighting in the valley,&nbsp;Moses was on the hill top lifting his hands in prayer for these great fighters. Israel fought hard, and with the prayers of Moses and the help of his companions, Aaron and Hur, the Amalekites were defeated. Moses knew that it was solely because of the Lord&rsquo;s hand of protection and blessing on the Israelites that they won the battle. &ldquo;Moses built an altar and called it The Lord is my banner&rdquo; (Exodus 17:15).</p><p>In battle opposing nations would fly their own flag on a pole at each of their respective front lines. This was to give their soldiers a feeling of hope and a focal point. This is what God is to us: a banner of encouragement to give us hope and a focal point.</p><blockquote><p>The Lord protects us, covers us with love, and&nbsp;blesses us continually.</p></blockquote><p>The Lord is our banner. He protects us; He covers us with love; He blesses us continually. The Lord gives us hope and a place to focus during the tough fights when the enemy is trying to make us doubt God&rsquo;s promises.&nbsp;</p><p>When was the last time you sat and thanked Jesus for all the ways he is a banner in your life?&nbsp;</p><p>Reflect:</p><ul><li>What is one way the Lord has been your banner?</li><li>How can you focus more today on the Lord and all the things He does for you throughout the day?</li></ul>',
+  route: { jumpTo: () => {} },
+  title: 'God is Our Banner',
+};
+
+const stories = storiesOf('Devotional', module);
+
+stories.add('Example', () => (
+  <Devotional
+    body={content.body}
+    title={content.title}
+    isLoading={false}
+    scripture={scripture}
+  />
+));
+
+stories.add('isLoading', () => (
+  <Devotional
+    body={content.body}
+    title={content.title}
+    isLoading
+    scripture={scripture}
+  />
+));
diff --git a/apolloschurchapp/src/content-single/Devotional/Devotional.tests.js b/apolloschurchapp/src/content-single/Devotional/Devotional.tests.js
new file mode 100644
index 0000000..470ef8b
--- /dev/null
+++ b/apolloschurchapp/src/content-single/Devotional/Devotional.tests.js
@@ -0,0 +1,58 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+import wait from 'waait';
+import Providers from 'apolloschurchapp/src/Providers';
+import Devotional from '.';
+
+const content = {
+  body:
+    '<p>Sometimes God&rsquo;s promises to us involve a fight. We have to fight to keep our focus on Him, fight to move towards the promise we know God has laid on our hearts. We have a real enemy that would love nothing more than to get us sidetracked and doubt God&rsquo;s promises. So we fight saying that we are going to believe God will do what He says He will do, and we keep fighting until we see that promise come to life.</p><p>In Exodus 17:8-15 the nation of Israel, freed from great oppression in Egypt was traveling to the land God promised them. Yet, Israel was fighting, again.&nbsp;<br />&nbsp;<br />As the Israelites were fighting in the valley,&nbsp;Moses was on the hill top lifting his hands in prayer for these great fighters. Israel fought hard, and with the prayers of Moses and the help of his companions, Aaron and Hur, the Amalekites were defeated. Moses knew that it was solely because of the Lord&rsquo;s hand of protection and blessing on the Israelites that they won the battle. &ldquo;Moses built an altar and called it The Lord is my banner&rdquo; (Exodus 17:15).</p><p>In battle opposing nations would fly their own flag on a pole at each of their respective front lines. This was to give their soldiers a feeling of hope and a focal point. This is what God is to us: a banner of encouragement to give us hope and a focal point.</p><blockquote><p>The Lord protects us, covers us with love, and&nbsp;blesses us continually.</p></blockquote><p>The Lord is our banner. He protects us; He covers us with love; He blesses us continually. The Lord gives us hope and a place to focus during the tough fights when the enemy is trying to make us doubt God&rsquo;s promises.&nbsp;</p><p>When was the last time you sat and thanked Jesus for all the ways he is a banner in your life?&nbsp;</p><p>Reflect:</p><ul><li>What is one way the Lord has been your banner?</li><li>How can you focus more today on the Lord and all the things He does for you throughout the day?</li></ul>',
+  route: { jumpTo: jest.fn() },
+  title: 'God is Our Banner',
+};
+
+const scripture = [
+  {
+    id: '1CO.15.57',
+    reference: '1 Corinthians 15:57',
+    html:
+      '<p class="p"><span data-number="57" class="v">57</span>But thanks be to God, who gives us the victory through our Lord Jesus Christ. </p>',
+  },
+  {
+    id: 'EXO.17.8-EXO.17.15',
+    reference: 'Exodus 17:8-15',
+    html:
+      '<p class="p"><span data-number="8" class="v">8</span>Then Amalek came and fought with Israel in Rephidim. <span data-number="9" class="v">9</span>Moses said to Joshua, “Choose men for us, and go out to fight with Amalek. Tomorrow I will stand on the top of the hill with God’s rod in my hand.” <span data-number="10" class="v">10</span>So Joshua did as Moses had told him, and fought with Amalek; and Moses, Aaron, and Hur went up to the top of the hill. <span data-number="11" class="v">11</span>When Moses held up his hand, Israel prevailed. When he let down his hand, Amalek prevailed. <span data-number="12" class="v">12</span>But Moses’ hands were heavy; so they took a stone, and put it under him, and he sat on it. Aaron and Hur held up his hands, the one on the one side, and the other on the other side. His hands were steady until sunset. <span data-number="13" class="v">13</span>Joshua defeated Amalek and his people with the edge of the sword. <span data-number="14" class="v">14</span>Yahweh said to Moses, “Write this for a memorial in a book, and rehearse it in the ears of Joshua: that I will utterly blot out the memory of Amalek from under the sky.” <span data-number="15" class="v">15</span>Moses built an altar, and called its name “Yahweh our Banner”.</p>',
+  },
+];
+
+describe('the Devotional component', () => {
+  it('renders a devotional', async () => {
+    const tree = renderer.create(
+      <Providers>
+        <Devotional
+          body={content.body}
+          title={content.title}
+          isLoading={false}
+          scripture={scripture}
+        />
+      </Providers>
+    );
+    await wait(0); // wait for response
+    expect(tree).toMatchSnapshot();
+  });
+  it('renders a loading state', async () => {
+    const tree = renderer.create(
+      <Providers>
+        <Devotional
+          body={content.body}
+          title={content.title}
+          isLoading
+          scripture={scripture}
+        />
+      </Providers>
+    );
+    await wait(0); // wait for response
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/content-single/Devotional/ScriptureTab.js b/apolloschurchapp/src/content-single/Devotional/ScriptureTab.js
new file mode 100644
index 0000000..bbf39a9
--- /dev/null
+++ b/apolloschurchapp/src/content-single/Devotional/ScriptureTab.js
@@ -0,0 +1,43 @@
+import React from 'react';
+import { ScrollView } from 'react-native';
+import PropTypes from 'prop-types';
+import PaddedView from 'apolloschurchapp/src/ui/PaddedView';
+import ScriptureItem from 'apolloschurchapp/src/ui/Scripture';
+
+/**
+ * This is the Scripture side of the Devotional tabbed component.
+ * Maps over an array of scripture references and renders them
+ * using the ScriptureItem component.
+ */
+const ScriptureTab = ({ scripture, isLoading }) => (
+  <ScrollView>
+    <PaddedView>
+      {scripture.map((ref) => (
+        <ScriptureItem
+          key={ref.id}
+          reference={ref.reference}
+          html={ref.html}
+          isLoading={isLoading}
+        />
+      ))}
+    </PaddedView>
+  </ScrollView>
+);
+
+ScriptureTab.propTypes = {
+  /** Toggles placeholders */
+  isLoading: PropTypes.bool,
+  /** An array of scripture objects */
+  scripture: PropTypes.arrayOf(
+    PropTypes.shape({
+      /** The ID of the verse (i.e. '1CO.15.57') */
+      id: PropTypes.string,
+      /** A human readable reference (i.e. '1 Corinthians 15:57') */
+      reference: PropTypes.string,
+      /** The scripture source to render */
+      html: PropTypes.string,
+    })
+  ),
+};
+
+export default ScriptureTab;
diff --git a/apolloschurchapp/src/content-single/Devotional/index.js b/apolloschurchapp/src/content-single/Devotional/index.js
new file mode 100644
index 0000000..5683d0b
--- /dev/null
+++ b/apolloschurchapp/src/content-single/Devotional/index.js
@@ -0,0 +1,84 @@
+import React, { PureComponent } from 'react';
+import PropTypes from 'prop-types';
+
+import TabView, { SceneMap } from 'apolloschurchapp/src/ui/TabView';
+import BackgroundView from 'apolloschurchapp/src/ui/BackgroundView';
+import ContentTab from './ContentTab';
+import ScriptureTab from './ScriptureTab';
+
+/**
+ * The devotional component.
+ * Displays a TabView with two tabs: ContentTab and ScriptureTab.
+ */
+class Devotional extends PureComponent {
+  static propTypes = {
+    /** The devotional text */
+    body: PropTypes.string,
+    /** The devotional title */
+    title: PropTypes.string,
+    /** Toggles placeholders */
+    isLoading: PropTypes.bool,
+    /** An array of scripture objects */
+    scripture: PropTypes.arrayOf(
+      PropTypes.shape({
+        /** The ID of the verse (i.e. '1CO.15.57') */
+        id: PropTypes.string,
+        /** A human readable reference (i.e. '1 Corinthians 15:57') */
+        reference: PropTypes.string,
+        /** The scripture source to render */
+        html: PropTypes.string,
+      })
+    ),
+  };
+
+  /**
+   * Function to get the scripture references from the larger scripture object.
+   * Props: full scripture array of objects
+   * Returns: an array of scripture references.
+   */
+  getScriptureReferences = (scripture) => scripture.map((ref) => ref.reference);
+
+  /**
+   * The route that TabView uses to render the ContentTab.
+   * Note: navigationState gets passed down automatically from the TabView.
+   */
+  contentRoute = (navigationState) => (
+    <ContentTab
+      body={this.props.body}
+      isLoading={this.props.isLoading}
+      references={this.getScriptureReferences(this.props.scripture)}
+      title={this.props.title}
+      navigationState={navigationState}
+    />
+  );
+
+  /**
+   * The route that TabView uses to render the ScriptureTab
+   */
+  scriptureRoute = () => (
+    <ScriptureTab
+      scripture={this.props.scripture}
+      isLoading={this.props.isLoading}
+    />
+  );
+
+  render() {
+    const hasScripture = this.props.isLoading || this.props.scripture.length;
+    const tabRoutes = [{ title: 'Devotional', key: 'content' }];
+    if (hasScripture) tabRoutes.push({ title: 'Scripture', key: 'scripture' });
+
+    return (
+      <BackgroundView>
+        <TabView
+          routes={tabRoutes}
+          renderScene={SceneMap({
+            content: this.contentRoute,
+            scripture: this.scriptureRoute,
+          })}
+        />
+      </BackgroundView>
+    );
+  }
+}
+
+export default Devotional;
diff --git a/apolloschurchapp/src/content-single/HTMLContent/getContentItemContent.js b/apolloschurchapp/src/content-single/HTMLContent/getContentItemContent.js
new file mode 100644
index 0000000..cd7ddc6
--- /dev/null
+++ b/apolloschurchapp/src/content-single/HTMLContent/getContentItemContent.js
@@ -0,0 +1,12 @@
+import gql from 'graphql-tag';
+
+export default gql`
+  query getContentItem($contentId: ID!) {
+    node(id: $contentId) {
+      ... on ContentItem {
+        id
+        htmlContent
+      }
+    }
+  }
+`;
diff --git a/apolloschurchapp/src/content-single/HTMLContent/index.js b/apolloschurchapp/src/content-single/HTMLContent/index.js
new file mode 100644
index 0000000..8fd994f
--- /dev/null
+++ b/apolloschurchapp/src/content-single/HTMLContent/index.js
@@ -0,0 +1,29 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import { Query } from 'react-apollo';
+
+import HTMLView from 'apolloschurchapp/src/ui/HTMLView';
+import { ErrorCard } from 'apolloschurchapp/src/ui/Card';
+
+import getContentItemContent from './getContentItemContent';
+
+const HTMLContent = ({ contentId }) => {
+  if (!contentId) return <HTMLView isLoading />;
+
+  return (
+    <Query query={getContentItemContent} variables={{ contentId }}>
+      {({ data: { node: { htmlContent } = {} } = {}, loading, error }) => {
+        if (error) return <ErrorCard error={error} />;
+        return (
+          <HTMLView isLoading={!htmlContent && loading}>{htmlContent}</HTMLView>
+        );
+      }}
+    </Query>
+  );
+};
+
+HTMLContent.propTypes = {
+  contentId: PropTypes.string,
+};
+
+export default HTMLContent;
diff --git a/apolloschurchapp/src/content-single/HorizontalContentFeed/getHorizontalContent.js b/apolloschurchapp/src/content-single/HorizontalContentFeed/getHorizontalContent.js
new file mode 100644
index 0000000..b0b77bc
--- /dev/null
+++ b/apolloschurchapp/src/content-single/HorizontalContentFeed/getHorizontalContent.js
@@ -0,0 +1,59 @@
+import gql from 'graphql-tag';
+
+export default gql`
+  query getHorizontalContent($itemId: ID!) {
+    node(id: $itemId) {
+      ... on ContentItem {
+        id
+        childContentItemsConnection {
+          edges {
+            node {
+              id
+              coverImage {
+                name
+                sources {
+                  uri
+                }
+              }
+              parentChannel {
+                id
+                name
+                iconName
+              }
+              title
+              sharing {
+                url
+                message
+                title
+              }
+            }
+          }
+        }
+        siblingContentItemsConnection {
+          edges {
+            node {
+              id
+              coverImage {
+                name
+                sources {
+                  uri
+                }
+              }
+              parentChannel {
+                id
+                name
+                iconName
+              }
+              title
+              sharing {
+                url
+                message
+                title
+              }
+            }
+          }
+        }
+      }
+    }
+  }
+`;
diff --git a/apolloschurchapp/src/content-single/HorizontalContentFeed/index.js b/apolloschurchapp/src/content-single/HorizontalContentFeed/index.js
new file mode 100644
index 0000000..3a22052
--- /dev/null
+++ b/apolloschurchapp/src/content-single/HorizontalContentFeed/index.js
@@ -0,0 +1,99 @@
+import React, { Component } from 'react';
+import { get } from 'lodash';
+import PropTypes from 'prop-types';
+import { withNavigation } from 'react-navigation';
+import { Query } from 'react-apollo';
+
+import CardTile from 'apolloschurchapp/src/ui/CardTile';
+import HorizontalTileFeed from 'apolloschurchapp/src/ui/HorizontalTileFeed';
+import PaddedView from 'apolloschurchapp/src/ui/PaddedView';
+import styled from 'apolloschurchapp/src/ui/styled';
+import TouchableScale from 'apolloschurchapp/src/ui/TouchableScale';
+
+import getHorizontalContent from './getHorizontalContent';
+
+const FeedContainer = styled({
+  paddingHorizontal: 0,
+})(PaddedView);
+
+const loadingStateObject = {
+  node: {
+    id: 'fakeId0',
+    title: '',
+    isLoading: true,
+  },
+};
+
+class HorizontalContentFeed extends Component {
+  static propTypes = {
+    contentId: PropTypes.string,
+    navigation: PropTypes.shape({
+      push: PropTypes.func,
+    }),
+  };
+
+  handleOnPressItem = (item) => {
+    this.props.navigation.push('ContentSingle', {
+      itemId: item.id,
+    });
+  };
+
+  renderItem = ({ item, index }) => (
+    <TouchableScale onPress={() => this.handleOnPressItem(item)}>
+      <CardTile
+        number={index + 1}
+        title={get(item, 'title', '')}
+        /*
+            * These are props that are not yet being passed in the data.
+            * We will need to make sure they get added back when that data is available.
+            * byLine={item.content.speaker}
+            * date={item.meta.date}
+            */
+      />
+    </TouchableScale>
+  );
+
+  renderFeed = ({ data, loading, error }) => {
+    if (error) return null;
+
+    const childContent = get(
+      data,
+      'node.childContentItemsConnection.edges',
+      []
+    ).map((edge) => edge.node);
+
+    const siblingContent = get(
+      data,
+      'node.siblingContentItemsConnection.edges',
+      []
+    ).map((edge) => edge.node);
+
+    const content = siblingContent.length ? siblingContent : childContent;
+
+    return (content && content.length) || loading ? (
+      <FeedContainer>
+        <HorizontalTileFeed
+          content={content}
+          isLoading={loading}
+          loadingStateObject={loadingStateObject}
+          renderItem={this.renderItem}
+        />
+      </FeedContainer>
+    ) : null;
+  };
+
+  render() {
+    if (!this.props.contentId) return this.renderFeed({ loading: true });
+
+    return (
+      <Query
+        query={getHorizontalContent}
+        variables={{ itemId: this.props.contentId }}
+      >
+        {this.renderFeed}
+      </Query>
+    );
+  }
+}
+
+export default withNavigation(HorizontalContentFeed);
diff --git a/apolloschurchapp/src/content-single/MediaControls/getContentMedia.js b/apolloschurchapp/src/content-single/MediaControls/getContentMedia.js
new file mode 100644
index 0000000..8ab3d1a
--- /dev/null
+++ b/apolloschurchapp/src/content-single/MediaControls/getContentMedia.js
@@ -0,0 +1,26 @@
+import gql from 'graphql-tag';
+
+export default gql`
+  query getContentMedia($contentId: ID!) {
+    node(id: $contentId) {
+      ... on ContentItem {
+        id
+        title
+        parentChannel {
+          id
+          name
+        }
+        coverImage {
+          sources {
+            uri
+          }
+        }
+        videos {
+          sources {
+            uri
+          }
+        }
+      }
+    }
+  }
+`;
diff --git a/apolloschurchapp/src/content-single/MediaControls/index.js b/apolloschurchapp/src/content-single/MediaControls/index.js
new file mode 100644
index 0000000..c2bfffc
--- /dev/null
+++ b/apolloschurchapp/src/content-single/MediaControls/index.js
@@ -0,0 +1,95 @@
+import React, { PureComponent } from 'react';
+import PropTypes from 'prop-types';
+import { Query, Mutation } from 'react-apollo';
+import { View } from 'react-native';
+import { get } from 'lodash';
+
+import { playVideoMutation } from 'apolloschurchapp/src/ui/MediaPlayer/mutations';
+import Icon from 'apolloschurchapp/src/ui/Icon';
+import TouchableScale from 'apolloschurchapp/src/ui/TouchableScale';
+import styled from 'apolloschurchapp/src/ui/styled';
+import getContentMedia from './getContentMedia';
+
+const buttonSizeDifferential = 3.5;
+
+const MediaIcon = Icon; // todo: add back styles
+const MediaButton = styled(({ theme }) => ({
+  width: theme.sizing.baseUnit * buttonSizeDifferential,
+  height: theme.sizing.baseUnit * buttonSizeDifferential,
+  borderRadius: theme.sizing.baseUnit * (buttonSizeDifferential / 2),
+  overflow: 'hidden',
+  backgroundColor: theme.colors.primary,
+  justifyContent: 'center',
+  alignItems: 'center',
+  borderWidth: buttonSizeDifferential,
+  borderColor: theme.colors.paper,
+  marginHorizontal: theme.sizing.baseUnit / 2,
+}))(View);
+
+const Container = styled(({ theme }) => ({
+  flexDirection: 'row',
+  alignItems: 'center',
+  justifyContent: 'center',
+  marginTop: -theme.sizing.baseUnit * (buttonSizeDifferential / 2),
+}))(View);
+
+class MediaControls extends PureComponent {
+  static propTypes = {
+    contentId: PropTypes.string,
+  };
+
+  renderControls = ({
+    loading,
+    error,
+    data: {
+      node: { videos, title, parentChannel = {}, coverImage = {} } = {},
+    } = {},
+  }) => {
+    if (loading || error) return null;
+
+    const videoSource = get(videos, '[0].sources[0]', null);
+    const coverImageSources = (coverImage && coverImage.sources) || [];
+
+    return (
+      <Mutation mutation={playVideoMutation}>
+        {(play) => (
+          <Container>
+            {videoSource ? (
+              <TouchableScale
+                onPress={() =>
+                  play({
+                    variables: {
+                      mediaSource: videoSource,
+                      posterSources: coverImageSources,
+                      title,
+                      isVideo: true,
+                      artist: parentChannel.name,
+                    },
+                  })
+                }
+              >
+                <MediaButton>
+                  <MediaIcon name="play" />
+                </MediaButton>
+              </TouchableScale>
+            ) : null}
+          </Container>
+        )}
+      </Mutation>
+    );
+  };
+
+  render() {
+    if (!this.props.contentId) return null;
+    return (
+      <Query
+        query={getContentMedia}
+        variables={{ contentId: this.props.contentId }}
+      >
+        {this.renderControls}
+      </Query>
+    );
+  }
+}
+
+export default MediaControls;
diff --git a/apolloschurchapp/src/content-single/getContentItem.js b/apolloschurchapp/src/content-single/getContentItem.js
index 1106dc0..fcbfbac 100644
--- a/apolloschurchapp/src/content-single/getContentItem.js
+++ b/apolloschurchapp/src/content-single/getContentItem.js
@@ -1,96 +1,50 @@
 import gql from 'graphql-tag';
 
+export const contentItemFragment = gql`
+  fragment contentItemFragment on ContentItem {
+    id
+    title
+    htmlContent
+    isLiked
+    coverImage {
+      name
+      sources {
+        uri
+      }
+    }
+    theme {
+      type
+      colors {
+        primary
+        secondary
+        screen
+        paper
+      }
+    }
+    parentChannel {
+      id
+      name
+    }
+    videos {
+      sources {
+        uri
+      }
+    }
+    audios {
+      sources {
+        uri
+      }
+    }
+  }
+`;
+
 export default gql`
   query getContentItem($itemId: ID!) {
     node(id: $itemId) {
       ... on ContentItem {
-        id
-        title
-        isLiked
-        htmlContent
-        coverImage {
-          name
-          sources {
-            uri
-          }
-        }
-        theme {
-          type
-          colors {
-            primary
-            secondary
-            screen
-            paper
-          }
-        }
-        videos {
-          sources {
-            uri
-          }
-        }
-        audios {
-          sources {
-            uri
-          }
-        }
-        parentChannel {
-          id
-          name
-        }
-        sharing {
-          url
-          message
-          title
-        }
-        childContentItemsConnection {
-          edges {
-            node {
-              id
-              coverImage {
-                name
-                sources {
-                  uri
-                }
-              }
-              parentChannel {
-                id
-                name
-                iconName
-              }
-              title
-              sharing {
-                url
-                message
-                title
-              }
-            }
-          }
-        }
-        siblingContentItemsConnection {
-          edges {
-            node {
-              id
-              coverImage {
-                name
-                sources {
-                  uri
-                }
-              }
-              parentChannel {
-                id
-                name
-                iconName
-              }
-              title
-              sharing {
-                url
-                message
-                title
-              }
-            }
-          }
-        }
+        ...contentItemFragment
       }
     }
   }
+  ${contentItemFragment}
 `;
diff --git a/apolloschurchapp/src/content-single/index.js b/apolloschurchapp/src/content-single/index.js
index cc55cf4..8f00a5c 100644
--- a/apolloschurchapp/src/content-single/index.js
+++ b/apolloschurchapp/src/content-single/index.js
@@ -1,65 +1,31 @@
 import React, { PureComponent } from 'react';
-import { Query, Mutation } from 'react-apollo';
-import {
-  StyleSheet,
-  View,
-  ScrollView,
-  TouchableWithoutFeedback,
-} from 'react-native';
+import { ScrollView } from 'react-native';
+import { Query } from 'react-apollo';
 import { get } from 'lodash';
 import PropTypes from 'prop-types';
 
-import { ErrorCard } from 'apolloschurchapp/src/ui/Card';
-import CardTile from 'apolloschurchapp/src/ui/CardTile';
+import BackgroundView from 'apolloschurchapp/src/ui/BackgroundView';
 import GradientOverlayImage from 'apolloschurchapp/src/ui/GradientOverlayImage';
-import HorizontalTileFeed from 'apolloschurchapp/src/ui/HorizontalTileFeed';
-import HTMLView from 'apolloschurchapp/src/ui/HTMLView';
 import PaddedView from 'apolloschurchapp/src/ui/PaddedView';
 import { H2 } from 'apolloschurchapp/src/ui/typography';
-import BackgroundView from 'apolloschurchapp/src/ui/BackgroundView';
+import { ErrorCard } from 'apolloschurchapp/src/ui/Card';
 import styled from 'apolloschurchapp/src/ui/styled';
-import { ThemeMixin, withTheme } from 'apolloschurchapp/src/ui/theme';
-import Icon from 'apolloschurchapp/src/ui/Icon';
-import Touchable from 'apolloschurchapp/src/ui/Touchable';
+import { ThemeMixin } from 'apolloschurchapp/src/ui/theme';
 
-import { playVideoMutation } from 'apolloschurchapp/src/ui/MediaPlayer/mutations';
+import ModalView from 'apolloschurchapp/src/ui/ModalView';
+import TrackEventWhenLoaded from 'apolloschurchapp/src/analytics/TrackEventWhenLoaded';
 
-import getContentItem from './getContentItem';
-import getContentItemMinimalState from './getContentItemMinimalState';
+import { events } from 'apolloschurchapp/src/analytics';
 import ActionContainer from './ActionContainer';
+import HTMLContent from './HTMLContent';
+import HorizontalContentFeed from './HorizontalContentFeed';
+import MediaControls from './MediaControls';
 
-const FeedContainer = styled({
-  paddingHorizontal: 0,
-})(PaddedView);
-
-const MediaButtonsContainer = styled({
-  ...StyleSheet.absoluteFillObject,
-  justifyContent: 'center',
-  alignItems: 'center',
-  flexDirection: 'row',
-})(PaddedView);
-
-const MediaIcon = withTheme(
-  ({ theme: { colors: { lightPrimary } = {} } = {} }) => ({
-    size: 50, // TODO: should this be set in a typographic unit?
-    fill: lightPrimary, // TODO: should this reference a text color?
-  })
-)(Icon);
-
-const MediaHeader = styled({ width: '100%' })(View);
+import getContentItem from './getContentItem';
 
-const ContentContainer = styled({ paddingVertical: 0 })(PaddedView);
+const FlexedScrollView = styled({ flex: 1 })(ScrollView);
 
 class ContentSingle extends PureComponent {
-  static navigationOptions = ({ navigation }) => {
-    const shareObject = navigation.getParam('sharing', 'Content');
-    const itemId = navigation.getParam('itemId', []);
-    return {
-      title: shareObject.title,
-      headerRight: <ActionContainer itemId={itemId} content={shareObject} />,
-    };
-  };
-
   static propTypes = {
     navigation: PropTypes.shape({
       getParam: PropTypes.func,
@@ -67,171 +33,63 @@ class ContentSingle extends PureComponent {
     }),
   };
 
-  constructor(props) {
-    super(props);
-
-    this.itemId = { itemId: props.navigation.getParam('itemId', []) };
-    this.loadingStateObject = {
-      node: {
-        id: 'fakeId0',
-        title: '',
-        isLoading: true,
-      },
-    };
-  }
-
-  handleOnPressItem(item) {
-    this.props.navigation.push('ContentSingle', {
-      itemId: item.id,
-      sharing: item.sharing,
-    });
+  get queryVariables() {
+    return { itemId: this.props.navigation.getParam('itemId', []) };
   }
 
-  renderItem = ({ item, index }) => (
-    <TouchableWithoutFeedback onPress={() => this.handleOnPressItem(item)}>
-      <CardTile
-        number={index + 1}
-        title={get(item, 'title', '')}
-        /*
-          * These are props that are not yet being passed in the data.
-          * We will need to make sure they get added back when that data is available.
-          * byLine={item.content.speaker}
-          * date={item.meta.date}
-          */
-        isLoading={item.isLoading}
-      />
-    </TouchableWithoutFeedback>
-  );
+  renderWithData = ({ loading, error, data }) => {
+    if (error) return <ErrorCard error={error} />;
 
-  render() {
-    return (
-      <Query
-        query={getContentItemMinimalState}
-        variables={this.itemId}
-        fetchPolicy="cache-only"
-      >
-        {({ data: cachedData }) => (
-          <Query
-            query={getContentItem}
-            variables={this.itemId}
-            fetchPolicy="cache-and-network"
-          >
-            {({ loading, error, data }) => {
-              if (error) return <ErrorCard error={error} />;
-
-              const content = {
-                ...((cachedData && cachedData.node) || {}),
-                ...((data && data.node) || {}),
-              };
-
-              const childContent = get(
-                data,
-                'node.childContentItemsConnection.edges',
-                []
-              ).map((edge) => edge.node);
-
-              const siblingContent = get(
-                data,
-                'node.siblingContentItemsConnection.edges',
-                []
-              ).map((edge) => edge.node);
-
-              const horizontalContent = siblingContent.length
-                ? siblingContent
-                : childContent;
+    const content = data.node || {};
 
-              const videoSource = get(content, 'videos[0].sources[0]', null);
-              const audioSource = get(content, 'audios[0].sources[0]', null);
-              const coverImageSources = get(content, 'coverImage.sources', []);
+    const coverImageSources = get(content, 'coverImage.sources', []);
 
-              return (
-                <ThemeMixin
-                  mixin={{
-                    type: get(content, 'theme.type', 'light').toLowerCase(),
-                    colors: get(content, 'theme.colors'),
-                  }}
-                >
-                  <ScrollView>
-                    <MediaHeader>
-                      <GradientOverlayImage
-                        source={coverImageSources}
-                        overlayColor={get(content, 'theme.colors.paper')}
-                      />
+    const { theme = {}, title, id } = content;
 
-                      <Mutation mutation={playVideoMutation}>
-                        {(play) => (
-                          <MediaButtonsContainer>
-                            {videoSource ? (
-                              <Touchable
-                                onPress={() =>
-                                  play({
-                                    variables: {
-                                      mediaSource: videoSource,
-                                      posterSources: coverImageSources,
-                                      title: content.title,
-                                      isVideo: true,
-                                      artist: get(
-                                        content,
-                                        'parentChannel.name'
-                                      ),
-                                    },
-                                  })
-                                }
-                              >
-                                <MediaIcon name="video" />
-                              </Touchable>
-                            ) : null}
-                            {audioSource ? (
-                              <Touchable
-                                onPress={() =>
-                                  play({
-                                    variables: {
-                                      mediaSource: audioSource,
-                                      posterSources: coverImageSources,
-                                      title: content.title,
-                                      isVideo: false,
-                                      artist: get(
-                                        content,
-                                        'parentChannel.name'
-                                      ),
-                                    },
-                                  })
-                                }
-                              >
-                                <MediaIcon name="audio" />
-                              </Touchable>
-                            ) : null}
-                          </MediaButtonsContainer>
-                        )}
-                      </Mutation>
-                    </MediaHeader>
-                    <BackgroundView>
-                      <ContentContainer>
-                        <H2 padded isLoading={!content.title && loading}>
-                          {content.title}
-                        </H2>
-                        <HTMLView isLoading={!content.htmlContent && loading}>
-                          {content.htmlContent}
-                        </HTMLView>
-                      </ContentContainer>
-                    </BackgroundView>
-                    {(horizontalContent && horizontalContent.length) ||
-                    loading ? (
-                      <FeedContainer>
-                        <HorizontalTileFeed
-                          content={horizontalContent}
-                          isLoading={loading}
-                          loadingStateObject={this.loadingStateObject}
-                          renderItem={this.renderItem}
-                        />
-                      </FeedContainer>
-                    ) : null}
-                  </ScrollView>
-                </ThemeMixin>
-              );
+    return (
+      <ThemeMixin
+        mixin={{
+          type: get(theme, 'type', 'light').toLowerCase(),
+          colors: get(theme, 'colors'),
+        }}
+      >
+        <ModalView>
+          <TrackEventWhenLoaded
+            loaded={!!(!loading && content.title)}
+            eventName={events.ViewContent}
+            properties={{
+              title: content.title,
+              itemId: this.id,
             }}
-          </Query>
-        )}
+          />
+          <FlexedScrollView>
+            {coverImageSources.length || loading ? (
+              <GradientOverlayImage
+                isLoading={!coverImageSources.length && loading}
+                source={coverImageSources}
+              />
+            ) : null}
+            <BackgroundView>
+              <MediaControls contentId={id} />
+              <PaddedView>
+                <H2 padded isLoading={!title && loading}>
+                  {title}
+                </H2>
+                <HTMLContent contentId={id} />
+              </PaddedView>
+              <HorizontalContentFeed contentId={id} />
+            </BackgroundView>
+          </FlexedScrollView>
+          <ActionContainer itemId={id} />
+        </ModalView>
+      </ThemeMixin>
+    );
+  };
+
+  render() {
+    return (
+      <Query query={getContentItem} variables={this.queryVariables}>
+        {this.renderWithData}
       </Query>
     );
   }
diff --git a/apolloschurchapp/src/content-single/updateLikeEntity.js b/apolloschurchapp/src/content-single/updateLikeEntity.js
deleted file mode 100644
index 155511a..0000000
--- a/apolloschurchapp/src/content-single/updateLikeEntity.js
+++ /dev/null
@@ -1,17 +0,0 @@
-import gql from 'graphql-tag';
-
-export default gql`
-  mutation updateLikeEntity(
-    $itemId: ID!
-    $sessionId: ID!
-    $operation: LIKE_OPERATION!
-  ) {
-    updateLikeEntity(
-      input: { nodeId: $itemId, sessionId: $sessionId, operation: $operation }
-    ) {
-      id
-      operation
-      interactionDateTime
-    }
-  }
-`;
diff --git a/apolloschurchapp/src/index.js b/apolloschurchapp/src/index.js
index 2bab565..8e18ef1 100644
--- a/apolloschurchapp/src/index.js
+++ b/apolloschurchapp/src/index.js
@@ -1,12 +1,20 @@
 import React from 'react';
+import { StatusBar } from 'react-native';
 import { createStackNavigator } from 'react-navigation';
 // import { Sentry } from 'react-native-sentry';
 
 import BackgroundView from 'apolloschurchapp/src/ui/BackgroundView';
 import MediaPlayer from 'apolloschurchapp/src/ui/MediaPlayer';
+import { withTheme } from 'apolloschurchapp/src/ui/theme';
 
 import Providers from './Providers';
+import NotificationsInit from './Notifications';
+import NavigationService from './NavigationService';
 import ContentSingle from './content-single';
+import UserSettings from './user-settings';
+import PersonalDetails from './user-settings/PersonalDetails';
+import ChangePassword from './user-settings/ChangePassword';
+import LikedContentList from './tabs/connect/LikedContentList';
 import Tabs from './tabs';
 import Auth from './auth';
 
@@ -14,23 +22,23 @@ import Auth from './auth';
 //   'https://5908fa19ed37447f86b2717423cadec5:45dd3b58792b413cb67109c5e63a0bb7@sentry.io/1241658'
 // ).install();
 
-const AppStackNavigator = createStackNavigator(
+const AppStatusBar = withTheme(({ theme }) => ({
+  barStyle: 'dark-content',
+  backgroundColor: theme.colors.paper,
+}))(StatusBar);
+
+const AppNavigator = createStackNavigator(
   {
     Tabs,
     ContentSingle,
-  },
-  {
-    initialRouteName: 'Tabs',
-  }
-);
-
-const AppModalNavigator = createStackNavigator(
-  {
-    AppStackNavigator,
     Auth,
+    UserSettings,
+    LikedContentList,
+    PersonalDetails,
+    ChangePassword,
   },
   {
-    initialRouteName: 'AppStackNavigator',
+    initialRouteName: 'Tabs',
     mode: 'modal',
     headerMode: 'none',
   }
@@ -39,7 +47,13 @@ const AppModalNavigator = createStackNavigator(
 const App = () => (
   <Providers>
     <BackgroundView>
-      <AppModalNavigator />
+      <AppStatusBar barStyle="dark-content" />
+      <AppNavigator
+        ref={(navigatorRef) => {
+          NavigationService.setTopLevelNavigator(navigatorRef);
+        }}
+      />
+      <NotificationsInit />
       <MediaPlayer />
     </BackgroundView>
   </Providers>
diff --git a/apolloschurchapp/src/live/LiveButton.js b/apolloschurchapp/src/live/LiveButton.js
index 5604424..5b5726f 100644
--- a/apolloschurchapp/src/live/LiveButton.js
+++ b/apolloschurchapp/src/live/LiveButton.js
@@ -4,7 +4,7 @@ import { get } from 'lodash';
 
 import { UIText } from 'apolloschurchapp/src/ui/typography';
 import Card, { CardContent } from 'apolloschurchapp/src/ui/Card';
-import Touchable from 'apolloschurchapp/src/ui/Touchable';
+import TouchableScale from 'apolloschurchapp/src/ui/TouchableScale';
 import styled from 'apolloschurchapp/src/ui/styled';
 import ChannelLabel from 'apolloschurchapp/src/ui/ChannelLabel';
 import { WebBrowserConsumer } from 'apolloschurchapp/src/ui/WebBrowser';
@@ -27,7 +27,7 @@ const LiveNowButton = () => (
       return isLive ? (
         <WebBrowserConsumer>
           {(openUrl) => (
-            <Touchable
+            <TouchableScale
               onPress={() => openUrl('https://apollos.churchonline.org/')}
             >
               <LiveCard isLoading={loading}>
@@ -43,7 +43,7 @@ const LiveNowButton = () => (
                   />
                 </CardContent>
               </LiveCard>
-            </Touchable>
+            </TouchableScale>
           )}
         </WebBrowserConsumer>
       ) : null;
diff --git a/apolloschurchapp/src/scripture/ScriptureConnected.tests.js b/apolloschurchapp/src/scripture/ScriptureConnected.tests.js
new file mode 100644
index 0000000..04b5361
--- /dev/null
+++ b/apolloschurchapp/src/scripture/ScriptureConnected.tests.js
@@ -0,0 +1,38 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+import wait from 'waait';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import getScripture from './getScripture';
+import ScriptureConnected from '.';
+
+const mocks = {
+  request: {
+    query: getScripture,
+    variables: { query: 'Genesis 1:1' },
+  },
+  result: {
+    data: {
+      scripture: {
+        id: 'GEN.1.1',
+        reference: 'Genesis 1:1',
+        copyright: 'PUBLIC DOMAIN',
+        html:
+          '<p class="p"><span data-number="1" class="v">1</span>In the beginning, God created the heavens and the earth. </p>',
+      },
+    },
+  },
+};
+
+describe('ScriptureConnected component', () => {
+  it('renders without errors', async () => {
+    const tree = renderer.create(
+      <Providers mocks={[mocks]} addTypename={false}>
+        <ScriptureConnected references={['Genesis 1:1']} />
+      </Providers>
+    );
+    await wait(0); // wait for response from graphql
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/Scripture/getScripture.js b/apolloschurchapp/src/scripture/getScripture.js
similarity index 91%
rename from apolloschurchapp/src/ui/Scripture/getScripture.js
rename to apolloschurchapp/src/scripture/getScripture.js
index 871ef03..db1ef40 100644
--- a/apolloschurchapp/src/ui/Scripture/getScripture.js
+++ b/apolloschurchapp/src/scripture/getScripture.js
@@ -5,6 +5,7 @@ export default gql`
     scripture(query: $query) {
       reference
       html
+      copyright
     }
   }
 `;
diff --git a/apolloschurchapp/src/scripture/index.js b/apolloschurchapp/src/scripture/index.js
new file mode 100644
index 0000000..5c7e682
--- /dev/null
+++ b/apolloschurchapp/src/scripture/index.js
@@ -0,0 +1,41 @@
+import React from 'react';
+import { Query } from 'react-apollo';
+import { get } from 'lodash';
+import PropTypes from 'prop-types';
+import ScriptureItem from 'apolloschurchapp/src/ui/Scripture/ScriptureItem';
+import getScripture from './getScripture';
+
+/**
+ * This is the data-bound "connected" scripture component.
+ * Maps over the array of references, does a query to the API for each reference,
+ * then passes that returned data to the ScriptureComponent for rendering.
+ */
+const ScriptureConnected = ({
+  ScriptureComponent = ScriptureItem,
+  references,
+}) =>
+  references.map((query) => (
+    <Query query={getScripture} variables={{ query }} key={query}>
+      {({ loading, data }) => (
+        <ScriptureComponent
+          reference={get(data, 'scripture.reference', '')}
+          html={get(data, 'scripture.html', '')}
+          copyright={get(data, 'scripture.copyright', '')}
+          isLoading={loading}
+        />
+      )}
+    </Query>
+  ));
+
+/**
+ * Props passed to this connected component:
+ * ScriptureComponent: An optional component that would allow you to display
+ * scripture your way. Defaults to ScriptureItem.
+ * references: An array of strings of Bible verses (i.e. ['Genesis 1:1'])
+ */
+ScriptureConnected.propTypes = {
+  ScriptureComponent: PropTypes.element,
+  references: PropTypes.arrayOf(PropTypes.string),
+};
+
+export default ScriptureConnected;
diff --git a/apolloschurchapp/src/store/getSessionId.js b/apolloschurchapp/src/store/getSessionId.js
deleted file mode 100644
index 4e31262..0000000
--- a/apolloschurchapp/src/store/getSessionId.js
+++ /dev/null
@@ -1,7 +0,0 @@
-import gql from 'graphql-tag';
-
-export default gql`
-  query sessionId {
-    sessionId @client
-  }
-`;
diff --git a/apolloschurchapp/src/store/index.js b/apolloschurchapp/src/store/index.js
index fcf775f..3ca0f6f 100644
--- a/apolloschurchapp/src/store/index.js
+++ b/apolloschurchapp/src/store/index.js
@@ -1,16 +1,17 @@
 import { merge, get } from 'lodash';
 import gql from 'graphql-tag';
+import getLoginState from 'apolloschurchapp/src/auth/getLoginState';
+import { track, events } from 'apolloschurchapp/src/analytics';
 import { client } from '../client'; // eslint-disable-line
 import getAuthToken from './getAuthToken';
-import getSessionId from './getSessionId';
 // TODO: this will require more organization...ie...not keeping everything in one file.
 // But this is simple while our needs our small.
 
 export const schema = `
   type Query {
     authToken: String
-    sessionId: String
     mediaPlayer: MediaPlayerState
+    isLoggedIn: Boolean
   }
 
   type Mutation {
@@ -56,8 +57,8 @@ export const schema = `
 `;
 
 export const defaults = {
+  __typename: 'ClientState',
   authToken: null,
-  sessionId: null,
   mediaPlayer: {
     __typename: 'MediaPlayerState',
     currentTrack: null,
@@ -65,48 +66,58 @@ export const defaults = {
     isFullscreen: false,
     isVisible: false,
     currentTime: 0,
+    showVideo: true,
+    muted: false,
   },
 };
 
 let trackId = 0;
 
 export const resolvers = {
+  Query: {
+    isLoggedIn: () => {
+      // When logging out, this query returns an error.
+      // Rescue the error, and return false.
+      try {
+        const { authToken } = client.readQuery({ query: getAuthToken });
+        return !!authToken;
+      } catch (e) {
+        return false;
+      }
+    },
+  },
   Mutation: {
     logout: (root, variables, { cache }) => {
       client.resetStore();
-      cache.writeData({ data: { authToken: null, sessionId: null } });
+      cache.writeData({
+        data: defaults,
+      });
+      track({ eventName: events.UserLogout });
       return null;
     },
 
     handleLogin: async (root, { authToken }, { cache }) => {
-      const createSessionMutation = gql`
-        mutation {
-          createSession {
-            id
-          }
-        }
-      `;
-
       try {
         await cache.writeQuery({
           query: getAuthToken,
           data: { authToken },
         });
-
-        const {
-          data: { createSession },
-        } = await client.mutate({
-          mutation: createSessionMutation,
-        });
-
         await cache.writeQuery({
-          query: getSessionId,
-          data: { sessionId: createSession.id },
+          query: getLoginState,
+          data: { isLoggedIn: true },
+        });
+        await cache.writeData({
+          data: { authToken },
         });
+
+        track({ eventName: events.UserLogin });
       } catch (e) {
-        console.log(e);
+        throw e.message;
       }
+
+      return null;
     },
+
     mediaPlayerPlayNow: (root, trackInfo, { cache }) => {
       const query = gql`
         query {
@@ -115,7 +126,7 @@ export const resolvers = {
           }
         }
       `;
-      const track = merge(
+      const mediaTrack = merge(
         {
           __typename: 'MediaPlayerTrack',
           parentId: null,
@@ -134,18 +145,20 @@ export const resolvers = {
         __typename: 'MediaPlayerState',
         isPlaying: true,
         isVisible: true,
-        isFullscreen: track.isVideo
+        isFullscreen: mediaTrack.isVideo
           ? true
           : (mediaPlayer && mediaPlayer.isFullscreen) || false,
-        currentTrack: track,
+        currentTrack: mediaTrack,
         currentTime: 0,
+        showVideo: mediaTrack.isVideo,
+        muted: false,
       };
 
       if (
         // if same track
         mediaPlayer &&
         mediaPlayer.currentTrack &&
-        mediaPlayer.currentTrack.mediaSource.uri === track.mediaSource.uri
+        mediaPlayer.currentTrack.mediaSource.uri === mediaTrack.mediaSource.uri
       ) {
         // use the same Id
         newMediaPlayerState.currentTrack.id = mediaPlayer.currentTrack.id;
@@ -162,11 +175,20 @@ export const resolvers = {
           mediaPlayer: newMediaPlayerState,
         },
       });
+
+      track({
+        eventName: events.UserPlayedMedia,
+        properties: {
+          uri: mediaTrack.uri,
+          title: mediaTrack.title,
+          type: mediaTrack.isVideo ? 'Video' : 'Audio',
+        },
+      });
       return null;
     },
     mediaPlayerUpdateState: (
       root,
-      { isPlaying, isFullscreen, isVisible },
+      { isPlaying, isFullscreen, isVisible, showVideo, muted },
       { cache }
     ) => {
       const query = gql`
@@ -175,6 +197,8 @@ export const resolvers = {
             isPlaying
             isFullscreen
             isVisible
+            showVideo
+            muted
           }
         }
       `;
@@ -186,6 +210,8 @@ export const resolvers = {
             isPlaying,
             isFullscreen,
             isVisible,
+            showVideo,
+            muted,
             __typename: 'MediaPlayerState',
           }),
         },
diff --git a/apolloschurchapp/src/tabs/connect/Connect.js b/apolloschurchapp/src/tabs/connect/Connect.js
index 5c41b95..a61a421 100644
--- a/apolloschurchapp/src/tabs/connect/Connect.js
+++ b/apolloschurchapp/src/tabs/connect/Connect.js
@@ -1,6 +1,8 @@
 import React, { PureComponent } from 'react';
-import { ScrollView } from 'react-native';
+import { ScrollView, SafeAreaView, Platform } from 'react-native';
 import { Query } from 'react-apollo';
+import { get } from 'lodash';
+import PropTypes from 'prop-types';
 
 import { LoginButton } from 'apolloschurchapp/src/auth';
 import BackgroundView from 'apolloschurchapp/src/ui/BackgroundView';
@@ -12,50 +14,95 @@ import TableView, {
 } from 'apolloschurchapp/src/ui/TableView';
 import { WebBrowserConsumer } from 'apolloschurchapp/src/ui/WebBrowser';
 import Touchable from 'apolloschurchapp/src/ui/Touchable';
-import UserAvatarView from 'apolloschurchapp/src/ui/UserAvatarView';
+import { withTheme } from 'apolloschurchapp/src/ui/theme';
+import { H1, BodyText, Paragraph } from 'apolloschurchapp/src/ui/typography';
+import styled from 'apolloschurchapp/src/ui/styled';
+import Icon from 'apolloschurchapp/src/ui/Icon';
+import PaddedView from 'apolloschurchapp/src/ui/PaddedView';
+import NavigationActions from 'apolloschurchapp/src/NavigationService';
 
+import { UserAvatarHeaderConnected } from './UserAvatarHeader';
+import { RecentlyLikedTileFeedConnected } from './RecentlyLikedTileFeed';
 import getLoginState from './getLoginState';
-import getUserProfile from './getUserProfile';
+
+const Title = styled(({ theme }) => ({
+  color: theme.colors.primary,
+  paddingBottom: theme.helpers.verticalRhythm(1.5),
+}))(H1);
+
+const BrandIcon = withTheme(({ theme }) => ({
+  name: 'brand-icon',
+  size: theme.sizing.baseUnit * 2.25,
+  marginBottom: theme.sizing.baseUnit,
+  fill: theme.colors.primary,
+}))(Icon);
+
+const Header = styled(({ theme }) => ({
+  paddingBottom: theme.sizing.baseUnit * 1.5,
+  backgroundColor: theme.colors.background.paper,
+  // These conditional paddings are due to inconsistencies with SafeAreaView.
+  // TODO: revisit and update/remove these values after next RN upgrade.
+  ...Platform.select({
+    ios: {
+      paddingTop: theme.sizing.baseUnit * 5,
+    },
+    android: {
+      paddingTop: theme.sizing.baseUnit * 4,
+    },
+  }),
+}))(PaddedView);
+
+const StyledLoginButton = styled(({ theme }) => ({
+  marginVertical: theme.sizing.baseUnit,
+}))(LoginButton);
 
 class Connect extends PureComponent {
   static navigationOptions = () => ({
     title: 'Connect',
-    headerRight: <LoginButton />,
+    header: null,
   });
 
+  static propTypes = {
+    navigation: PropTypes.shape({
+      getParam: PropTypes.func,
+      navigate: PropTypes.func,
+    }),
+  };
+
   render() {
     return (
       <BackgroundView>
         <WebBrowserConsumer>
           {(openUrl) => (
-            <BackgroundView>
-              <ScrollView>
+            <ScrollView>
+              <SafeAreaView>
                 <Query query={getLoginState}>
-                  {({ data: { isLoggedIn = null } }) => {
-                    if (isLoggedIn)
-                      return (
-                        <Query
-                          query={getUserProfile}
-                          fetchPolicy="cache-and-network"
-                        >
-                          {({
-                            data: {
-                              currentUser: {
-                                profile: { photo, firstName, lastName } = {},
-                              } = {},
-                            } = {},
-                            refetch,
-                          }) => (
-                            <UserAvatarView
-                              firstName={firstName}
-                              lastName={lastName}
-                              photo={photo}
-                              refetch={refetch}
-                            />
-                          )}
-                        </Query>
-                      );
-                    return null;
+                  {({ data }) => {
+                    if (get(data, 'isLoggedIn', false))
+                      return [
+                        <UserAvatarHeaderConnected key="UserAvatarHeaderConnected" />,
+                        <RecentlyLikedTileFeedConnected key="RecentlyLikedTileFeedConnected" />,
+                      ];
+                    return (
+                      <Header>
+                        <BrandIcon />
+                        <Title>Connect!</Title>
+                        <Paragraph>
+                          <BodyText>
+                            Our mission is to help you connect to others as well
+                            as help you in your walk with Christ.
+                          </BodyText>
+                        </Paragraph>
+                        <Paragraph>
+                          <BodyText>
+                            By joining this community, you will unlock amazing
+                            features like; curated content and devotionals,
+                            simple event registration, and easy online giving!
+                          </BodyText>
+                        </Paragraph>
+                        <StyledLoginButton />
+                      </Header>
+                    );
                   }}
                 </Query>
                 <TableView>
@@ -102,9 +149,19 @@ class Connect extends PureComponent {
                       <CellText>I would like to give</CellText>
                     </Cell>
                   </Touchable>
+                  <Touchable
+                    onPress={() =>
+                      NavigationActions.navigate('TestingControlPanel')
+                    }
+                  >
+                    <Cell>
+                      <CellIcon name="download" />
+                      <CellText>I would like to test the app</CellText>
+                    </Cell>
+                  </Touchable>
                 </TableView>
-              </ScrollView>
-            </BackgroundView>
+              </SafeAreaView>
+            </ScrollView>
           )}
         </WebBrowserConsumer>
       </BackgroundView>
diff --git a/apolloschurchapp/src/tabs/connect/LikedContentList/LikedContentList.tests.js b/apolloschurchapp/src/tabs/connect/LikedContentList/LikedContentList.tests.js
new file mode 100644
index 0000000..fa6f98e
--- /dev/null
+++ b/apolloschurchapp/src/tabs/connect/LikedContentList/LikedContentList.tests.js
@@ -0,0 +1,66 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+import wait from 'waait';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import getLikedContent from '../getLikedContent';
+import LikedContentList from '.';
+
+describe('LikedContentList component', () => {
+  it('renders LikedContentList', async () => {
+    const mock = {
+      request: {
+        query: getLikedContent,
+      },
+      result: {
+        data: {
+          getAllLikedContent: [
+            {
+              id: 'UniversalContentItem:4148aeb9482181025e9cad42826e676a',
+              title: 'Making Prayer a Spiritual Habit',
+              coverImage: {
+                sources: [
+                  {
+                    uri:
+                      'https://apollosrock.newspring.cc/GetImage.ashx?guid=55be1fd5-d8eb-43a6-aa70-f8e27bb63d31',
+                  },
+                ],
+              },
+              sharing: {
+                title: 'Making Prayer a Spiritual Habit',
+                message: '',
+                url: 'https://apollosrock.newspring.cc/',
+              },
+            },
+            {
+              id: 'UniversalContentItem:9dbdc4e565dcaa3c9b17eb5ae42de96e',
+              title: 'Vacations and Your Budget',
+              coverImage: {
+                sources: [
+                  {
+                    uri:
+                      'https://apollosrock.newspring.cc/GetImage.ashx?guid=993efb47-47ec-4dec-a3d3-47bcacfbd58e',
+                  },
+                ],
+              },
+              sharing: {
+                title: 'Vacations and Your Budget',
+                message: '',
+                url: 'https://apollosrock.newspring.cc/',
+              },
+            },
+          ],
+        },
+      },
+    };
+    const navigation = { navigate: jest.fn(), getParam: jest.fn() };
+    const tree = renderer.create(
+      <Providers mocks={[mock]}>
+        <LikedContentList navigation={navigation} />
+      </Providers>
+    );
+    await wait(0); // wait for response from graphql
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/tabs/connect/LikedContentList/index.js b/apolloschurchapp/src/tabs/connect/LikedContentList/index.js
new file mode 100644
index 0000000..7dbe57f
--- /dev/null
+++ b/apolloschurchapp/src/tabs/connect/LikedContentList/index.js
@@ -0,0 +1,55 @@
+import React, { PureComponent } from 'react';
+import PropTypes from 'prop-types';
+import { Query } from 'react-apollo';
+
+import BackgroundView from 'apolloschurchapp/src/ui/BackgroundView';
+import FeedView from 'apolloschurchapp/src/ui/FeedView';
+
+import getLikedContent from '../getLikedContent';
+/** A FeedView wrapped in a query to pull content data. */
+class LikedContentList extends PureComponent {
+  /** Function for React Navigation to set information in the header. */
+  static navigationOptions = () => ({
+    title: 'Liked Content',
+  });
+
+  static propTypes = {
+    /** Functions passed down from React Navigation to use in navigating to/from
+     * items in the feed.
+     */
+    navigation: PropTypes.shape({
+      getParam: PropTypes.func,
+      navigate: PropTypes.func,
+    }),
+  };
+
+  /** Function that is called when a card in the feed is pressed.
+   * Takes the user to the ContentSingle
+   */
+  handleOnPress = (item) =>
+    this.props.navigation.navigate('ContentSingle', {
+      itemId: item.id,
+      sharing: item.sharing,
+    });
+
+  render() {
+    return (
+      <BackgroundView>
+        <Query query={getLikedContent} fetchPolicy="cache-and-network">
+          {({ loading, error, data: { getAllLikedContent = [] }, refetch }) => (
+            <FeedView
+              initialNumToRender={5}
+              content={getAllLikedContent}
+              isLoading={loading}
+              error={error}
+              refetch={refetch}
+              onPressItem={this.handleOnPress}
+            />
+          )}
+        </Query>
+      </BackgroundView>
+    );
+  }
+}
+
+export default LikedContentList;
diff --git a/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeed.js b/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeed.js
new file mode 100644
index 0000000..08fea62
--- /dev/null
+++ b/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeed.js
@@ -0,0 +1,89 @@
+import React, { Component } from 'react';
+import { View } from 'react-native';
+import { withNavigation } from 'react-navigation';
+import PropTypes from 'prop-types';
+
+import PaddedView from 'apolloschurchapp/src/ui/PaddedView';
+import { H4, UIText } from 'apolloschurchapp/src/ui/typography';
+import HorizontalTileFeed from 'apolloschurchapp/src/ui/HorizontalTileFeed';
+import styled from 'apolloschurchapp/src/ui/styled';
+import { ButtonLink } from 'apolloschurchapp/src/ui/Button';
+import { withIsLoading } from 'apolloschurchapp/src/ui/isLoading';
+
+import TileImageItem from '../../discover/TileImageItem';
+
+const RowHeader = styled(({ theme }) => ({
+  flexDirection: 'row',
+  justifyContent: 'space-between',
+  alignItems: 'center',
+  paddingVertical: theme.sizing.baseUnit,
+}))(PaddedView);
+
+const Name = styled({
+  flexGrow: 1,
+})(View);
+
+const LikedContentLink = styled({
+  flexDirection: 'row-reverse',
+})(View);
+
+class RecentlyLikedTileFeed extends Component {
+  static propTypes = {
+    navigation: PropTypes.shape({
+      navigate: PropTypes.func,
+    }),
+    isLoading: PropTypes.bool,
+    name: PropTypes.string,
+    content: PropTypes.arrayOf(
+      PropTypes.any // this component doesn't care about the shape of `node`, just that it exists
+    ),
+  };
+
+  loadingStateObject = {
+    id: 'fake_id',
+    title: '',
+    coverImage: [],
+  };
+
+  titleImageItem = ({ item }) => (
+    <TileImageItem
+      item={item}
+      isLoading={this.props.isLoading}
+      navigation={this.props.navigation}
+    />
+  );
+
+  render() {
+    const { isLoading, name, navigation, content = [] } = this.props;
+
+    return (
+      <PaddedView horizontal={false}>
+        <RowHeader>
+          <Name>
+            <H4 isLoading={isLoading}>{name}</H4>
+          </Name>
+          <LikedContentLink>
+            <UIText isLoading={isLoading}>
+              <ButtonLink
+                onPress={() => {
+                  navigation.navigate('LikedContentList');
+                }}
+              >
+                View All
+              </ButtonLink>
+            </UIText>
+          </LikedContentLink>
+        </RowHeader>
+        <HorizontalTileFeed
+          initialNumToRender={5}
+          content={content}
+          renderItem={this.titleImageItem}
+          loadingStateObject={this.loadingStateObject}
+          isLoading={isLoading}
+        />
+      </PaddedView>
+    );
+  }
+}
+
+export default withNavigation(withIsLoading(RecentlyLikedTileFeed));
diff --git a/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeed.tests.js b/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeed.tests.js
new file mode 100644
index 0000000..7e2d3eb
--- /dev/null
+++ b/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeed.tests.js
@@ -0,0 +1,109 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+import RecentlyLikedTileFeed from './RecentlyLikedTileFeed';
+
+describe('RecentlyLikedTileFeed', () => {
+  it('renders a RecentlyLikedTileFeed', () => {
+    const props = {
+      content: [
+        {
+          id: 'UniversalContentItem:4148aeb9482181025e9cad42826e676a',
+          title: 'Making Prayer a Spiritual Habit',
+          coverImage: {
+            sources: [
+              {
+                uri:
+                  'https://apollosrock.newspring.cc/GetImage.ashx?guid=55be1fd5-d8eb-43a6-aa70-f8e27bb63d31',
+              },
+            ],
+          },
+          sharing: {
+            title: 'Making Prayer a Spiritual Habit',
+            message: '',
+            url: 'https://apollosrock.newspring.cc/',
+          },
+        },
+        {
+          id: 'UniversalContentItem:9dbdc4e565dcaa3c9b17eb5ae42de96e',
+          title: 'Vacations and Your Budget',
+          coverImage: {
+            sources: [
+              {
+                uri:
+                  'https://apollosrock.newspring.cc/GetImage.ashx?guid=993efb47-47ec-4dec-a3d3-47bcacfbd58e',
+              },
+            ],
+          },
+          sharing: {
+            title: 'Vacations and Your Budget',
+            message: '',
+            url: 'https://apollosrock.newspring.cc/',
+          },
+        },
+      ],
+      name: 'Liked Content',
+      navigation: jest.fn(),
+      isLoading: false,
+    };
+
+    const tree = renderer.create(
+      <Providers>
+        <RecentlyLikedTileFeed {...props} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+
+  it('renders a loading state', () => {
+    const props = {
+      content: [
+        {
+          id: 'UniversalContentItem:4148aeb9482181025e9cad42826e676a',
+          title: 'Making Prayer a Spiritual Habit',
+          coverImage: {
+            sources: [
+              {
+                uri:
+                  'https://apollosrock.newspring.cc/GetImage.ashx?guid=55be1fd5-d8eb-43a6-aa70-f8e27bb63d31',
+              },
+            ],
+          },
+          sharing: {
+            title: 'Making Prayer a Spiritual Habit',
+            message: '',
+            url: 'https://apollosrock.newspring.cc/',
+          },
+        },
+        {
+          id: 'UniversalContentItem:9dbdc4e565dcaa3c9b17eb5ae42de96e',
+          title: 'Vacations and Your Budget',
+          coverImage: {
+            sources: [
+              {
+                uri:
+                  'https://apollosrock.newspring.cc/GetImage.ashx?guid=993efb47-47ec-4dec-a3d3-47bcacfbd58e',
+              },
+            ],
+          },
+          sharing: {
+            title: 'Vacations and Your Budget',
+            message: '',
+            url: 'https://apollosrock.newspring.cc/',
+          },
+        },
+      ],
+      name: 'Liked Content',
+      navigation: jest.fn(),
+      isLoading: true,
+    };
+
+    const tree = renderer.create(
+      <Providers>
+        <RecentlyLikedTileFeed {...props} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeedConnected.js b/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeedConnected.js
new file mode 100644
index 0000000..45dd4df
--- /dev/null
+++ b/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeedConnected.js
@@ -0,0 +1,36 @@
+import React from 'react';
+import { Query } from 'react-apollo';
+import PropTypes from 'prop-types';
+
+import getLikedContent from '../getLikedContent';
+import RecentlyLikedTileFeed from './RecentlyLikedTileFeed';
+
+const RecentlyLikedTileFeedConnected = ({ navigation }) => (
+  <Query query={getLikedContent} fetchPolicy="cache-and-network">
+    {({ loading, data: { getAllLikedContent = [] } = {} }) => {
+      if (!getAllLikedContent.length) return null;
+      return (
+        <RecentlyLikedTileFeed
+          id={'liked'}
+          name={'Recently Like'}
+          content={getAllLikedContent}
+          isLoading={loading}
+          navigation={navigation}
+          loadingStateObject={{
+            title: 'Recently Like',
+            isLoading: true,
+          }}
+        />
+      );
+    }}
+  </Query>
+);
+
+RecentlyLikedTileFeedConnected.propTypes = {
+  navigation: PropTypes.shape({
+    getParam: PropTypes.func,
+    navigate: PropTypes.func,
+  }),
+};
+
+export default RecentlyLikedTileFeedConnected;
diff --git a/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeedConnected.tests.js b/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeedConnected.tests.js
new file mode 100644
index 0000000..349f4e9
--- /dev/null
+++ b/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/RecentlyLikedTileFeedConnected.tests.js
@@ -0,0 +1,104 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+import wait from 'waait';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import getLikedContent from '../getLikedContent';
+import RecentlyLikedTileFeedConnected from './RecentlyLikedTileFeedConnected';
+
+describe('RecentlyLikedTileFeedConnected', () => {
+  it('renders a RecentlyLikedTileFeedConnected', async () => {
+    const mock = {
+      request: {
+        query: getLikedContent,
+      },
+      result: {
+        data: {
+          getAllLikedContent: [
+            {
+              id: 'UniversalContentItem:296373ecb53580855cadffa0375ebe18',
+              title: 'Guys Night!',
+              coverImage: {
+                sources: [
+                  {
+                    uri:
+                      'https://apollosrock.newspring.cc/GetImage.ashx?guid=58c037fa-cc7f-4d72-9571-a0cc0558e346',
+                  },
+                ],
+              },
+              sharing: {
+                title: 'Guys Night!',
+                message: '',
+                url: 'https://apollosrock.newspring.cc/',
+              },
+            },
+            {
+              id: 'UniversalContentItem:39193b5ad28717ebfeab4d226664d8e7',
+              title: 'This August at NewSpring',
+              coverImage: {
+                sources: [
+                  {
+                    uri:
+                      'https://apollosrock.newspring.cc/GetImage.ashx?guid=f54b0db0-95f5-44ad-b8f2-8bcd1b23cfdb',
+                  },
+                ],
+              },
+              sharing: {
+                title: 'This August at NewSpring',
+                message: '',
+                url: 'https://apollosrock.newspring.cc/',
+              },
+            },
+            {
+              id: 'UniversalContentItem:ae8ec75906ba7437c49ad2534b5024db',
+              title: 'A Place to Worship Free of Fear',
+              coverImage: {
+                sources: [
+                  {
+                    uri:
+                      'https://apollosrock.newspring.cc/GetImage.ashx?guid=a65bc45d-f961-4b7e-a899-63eb1f9b8da9',
+                  },
+                ],
+              },
+              sharing: {
+                title: 'A Place to Worship Free of Fear',
+                message: '',
+                url: 'https://apollosrock.newspring.cc/',
+              },
+            },
+          ],
+        },
+      },
+    };
+    const navigation = { navigate: jest.fn(), getParam: jest.fn() };
+    const tree = renderer.create(
+      <Providers mocks={[mock]}>
+        <RecentlyLikedTileFeedConnected navigation={navigation} />
+      </Providers>
+    );
+    await wait(0); // wait for response from graphql
+    expect(tree).toMatchSnapshot();
+  });
+
+  it('renders nothing if no liked content', async () => {
+    const mock = {
+      request: {
+        query: getLikedContent,
+      },
+      result: {
+        data: {
+          getAllLikedContent: [],
+        },
+      },
+    };
+    const navigation = { navigate: jest.fn(), getParam: jest.fn() };
+    const tree = renderer.create(
+      <Providers mocks={[mock]}>
+        <RecentlyLikedTileFeedConnected navigation={navigation} />
+      </Providers>
+    );
+    await wait(0); // wait for response from graphql
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/index.js b/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/index.js
new file mode 100644
index 0000000..f67e890
--- /dev/null
+++ b/apolloschurchapp/src/tabs/connect/RecentlyLikedTileFeed/index.js
@@ -0,0 +1,2 @@
+export RecentlyLikedTileFeed from './RecentlyLikedTileFeed';
+export RecentlyLikedTileFeedConnected from './RecentlyLikedTileFeedConnected';
diff --git a/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeader.js b/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeader.js
new file mode 100644
index 0000000..82f5f9c
--- /dev/null
+++ b/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeader.js
@@ -0,0 +1,76 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import { compose } from 'recompose';
+import { withNavigation } from 'react-navigation';
+
+import { withIsLoading } from 'apolloschurchapp/src/ui/isLoading';
+import Touchable from 'apolloschurchapp/src/ui/Touchable';
+import UserAvatarView from 'apolloschurchapp/src/ui/UserAvatarView';
+import ConnectedImage from 'apolloschurchapp/src/ui/ConnectedImage';
+import Icon from 'apolloschurchapp/src/ui/Icon';
+import { withTheme } from 'apolloschurchapp/src/ui/theme';
+import styled from 'apolloschurchapp/src/ui/styled';
+import PaddedView from 'apolloschurchapp/src/ui/PaddedView';
+import FlexedView from 'apolloschurchapp/src/ui/FlexedView';
+
+const Container = styled(({ theme }) => ({
+  alignItems: 'center',
+  flexDirection: 'row',
+  /* This padding shouldn't be needed or at least not at such a high value but SafeAreaView doesn't
+   * appear to work so here it is 🤷‍♂️
+   * TODO: revisit and update/remove these values after next RN upgrade. */
+  paddingTop: theme.sizing.baseUnit * 3,
+}))(PaddedView);
+
+const SettingsIcon = compose(
+  withTheme(({ theme }) => ({
+    name: 'settings',
+    fill: theme.colors.text.tertiary,
+  }))
+)(Icon);
+
+const UserAvatarHeader = ({
+  firstName,
+  lastName,
+  location,
+  photo,
+  refetch,
+  navigation,
+  disabled,
+  isLoading,
+}) => (
+  <Container>
+    <FlexedView>
+      <UserAvatarView
+        firstName={firstName}
+        lastName={lastName}
+        location={location}
+        photo={photo}
+        refetch={refetch}
+        disabled={disabled}
+        isLoading={isLoading}
+      />
+    </FlexedView>
+    <Touchable
+      onPress={() => navigation.navigate('UserSettings', { photo, refetch })}
+    >
+      <SettingsIcon />
+    </Touchable>
+  </Container>
+);
+
+UserAvatarHeader.propTypes = {
+  firstName: PropTypes.string,
+  lastName: PropTypes.string,
+  location: PropTypes.string,
+  photo: ConnectedImage.propTypes.source,
+  refetch: PropTypes.func,
+  navigation: PropTypes.shape({
+    getParam: PropTypes.func,
+    navigate: PropTypes.func,
+  }),
+  disabled: PropTypes.bool,
+  isLoading: PropTypes.bool,
+};
+
+export default withNavigation(withIsLoading(UserAvatarHeader));
diff --git a/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeader.test.js b/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeader.test.js
new file mode 100644
index 0000000..314dfa6
--- /dev/null
+++ b/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeader.test.js
@@ -0,0 +1,65 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+import UserAvatarHeader from './UserAvatarHeader';
+
+describe('user avatar header', () => {
+  it('renders user avatar header if logged in', () => {
+    const props = {
+      theme: {
+        colors: {
+          text: {
+            tertiary: 'red',
+          },
+        },
+      },
+      firstName: 'Isaac',
+      lastName: 'Hardy',
+      location: 'Anderson, SC',
+      photo: {
+        uri: 'google.com',
+      },
+      refetch: jest.fn(),
+      navigation: jest.fn(),
+      disabled: true,
+      isLoading: false,
+    };
+
+    const tree = renderer.create(
+      <Providers>
+        <UserAvatarHeader {...props} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+
+  it('renders placeholder when loading', () => {
+    const props = {
+      theme: {
+        colors: {
+          text: {
+            tertiary: 'red',
+          },
+        },
+      },
+      firstName: 'Isaac',
+      lastName: 'Hardy',
+      location: 'Anderson, SC',
+      photo: {
+        uri: 'google.com',
+      },
+      refetch: jest.fn(),
+      navigation: jest.fn(),
+      disabled: true,
+      isLoading: true,
+    };
+
+    const tree = renderer.create(
+      <Providers>
+        <UserAvatarHeader {...props} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeaderConnected.js b/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeaderConnected.js
new file mode 100644
index 0000000..599f719
--- /dev/null
+++ b/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeaderConnected.js
@@ -0,0 +1,38 @@
+import React from 'react';
+import { Query } from 'react-apollo';
+import PropTypes from 'prop-types';
+
+import getUserProfile from '../getUserProfile';
+import UserAvatarHeader from './UserAvatarHeader';
+
+const UserAvatarHeaderConnected = ({ navigation }) => (
+  <Query query={getUserProfile} fetchPolicy="cache-and-network">
+    {({
+      data: {
+        currentUser: {
+          profile: { photo, firstName, lastName, location } = {},
+        } = {},
+      } = {},
+      refetch,
+    }) => (
+      <UserAvatarHeader
+        firstName={firstName}
+        lastName={lastName}
+        location={location}
+        photo={photo}
+        refetch={refetch}
+        navigation={navigation}
+        disabled
+      />
+    )}
+  </Query>
+);
+
+UserAvatarHeaderConnected.propTypes = {
+  navigation: PropTypes.shape({
+    getParam: PropTypes.func,
+    navigate: PropTypes.func,
+  }),
+};
+
+export default UserAvatarHeaderConnected;
diff --git a/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeaderConnected.tests.js b/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeaderConnected.tests.js
new file mode 100644
index 0000000..e0a8488
--- /dev/null
+++ b/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeaderConnected.tests.js
@@ -0,0 +1,44 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+import wait from 'waait';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import getUserProfile from '../getUserProfile';
+import UserAvatarHeaderConnected from './UserAvatarHeaderConnected';
+
+describe('user avatar header connect', () => {
+  it('renders user avatar header if logged in', async () => {
+    const mock = {
+      request: {
+        query: getUserProfile,
+      },
+      result: {
+        data: {
+          currentUser: {
+            id: 'AuthenticatedUser:057b0758543270d1cb21784cac4d3f5c',
+            profile: {
+              firstName: 'Isaac',
+              lastName: 'Hardy',
+              location: 'Anderson, SC',
+              email: 'isaac.hardy@newspring.cc',
+              nickName: 'Ike',
+              photo: {
+                uri:
+                  'https://apollosrock.newspring.cc:443/GetImage.ashx?guid=60fd5f35-3167-4c26-9a30-d44937287b87',
+              },
+            },
+          },
+        },
+      },
+    };
+    const navigation = { navigate: jest.fn(), getParam: jest.fn() };
+    const tree = renderer.create(
+      <Providers mocks={[mock]}>
+        <UserAvatarHeaderConnected navigation={navigation} />
+      </Providers>
+    );
+    await wait(0); // wait for response from graphql
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/tabs/connect/UserAvatarHeader/index.js b/apolloschurchapp/src/tabs/connect/UserAvatarHeader/index.js
new file mode 100644
index 0000000..a8b66ec
--- /dev/null
+++ b/apolloschurchapp/src/tabs/connect/UserAvatarHeader/index.js
@@ -0,0 +1,2 @@
+export UserAvatarHeader from './UserAvatarHeader';
+export UserAvatarHeaderConnected from './UserAvatarHeaderConnected';
diff --git a/apolloschurchapp/src/content-single/getContentItemMinimalState.js b/apolloschurchapp/src/tabs/connect/getLikedContent.js
similarity index 54%
rename from apolloschurchapp/src/content-single/getContentItemMinimalState.js
rename to apolloschurchapp/src/tabs/connect/getLikedContent.js
index 762a3ff..27e5260 100644
--- a/apolloschurchapp/src/content-single/getContentItemMinimalState.js
+++ b/apolloschurchapp/src/tabs/connect/getLikedContent.js
@@ -1,18 +1,21 @@
 import gql from 'graphql-tag';
 
 export default gql`
-  # This query is likely to get a cache hit, making it sooner to render content
-  query getContentItemMinimalState($itemId: ID!) {
-    node(id: $itemId) {
+  query getAllLikedContent {
+    getAllLikedContent {
       ... on ContentItem {
         id
         title
         coverImage {
-          name
           sources {
             uri
           }
         }
+        sharing {
+          title
+          message
+          url
+        }
       }
     }
   }
diff --git a/apolloschurchapp/src/tabs/connect/getLoginState.js b/apolloschurchapp/src/tabs/connect/getLoginState.js
index da75449..97d3e8d 100644
--- a/apolloschurchapp/src/tabs/connect/getLoginState.js
+++ b/apolloschurchapp/src/tabs/connect/getLoginState.js
@@ -2,6 +2,6 @@ import gql from 'graphql-tag';
 
 export default gql`
   query {
-    isLoggedIn: authToken @client
+    isLoggedIn @client
   }
 `;
diff --git a/apolloschurchapp/src/tabs/connect/getUserProfile.js b/apolloschurchapp/src/tabs/connect/getUserProfile.js
index fb9facf..b591a5b 100644
--- a/apolloschurchapp/src/tabs/connect/getUserProfile.js
+++ b/apolloschurchapp/src/tabs/connect/getUserProfile.js
@@ -7,7 +7,9 @@ export default gql`
       profile {
         firstName
         lastName
+        location
         email
+        nickName
         photo {
           uri
         }
diff --git a/apolloschurchapp/src/tabs/connect/index.js b/apolloschurchapp/src/tabs/connect/index.js
index 6837cb4..00674fc 100644
--- a/apolloschurchapp/src/tabs/connect/index.js
+++ b/apolloschurchapp/src/tabs/connect/index.js
@@ -2,14 +2,17 @@ import { createStackNavigator } from 'react-navigation';
 
 import tabBarIcon from '../tabBarIcon';
 
+import TestingControlPanel from '../../testing-control-panel';
 import Connect from './Connect';
 
 const ConnectNavigator = createStackNavigator(
   {
     Connect,
+    TestingControlPanel,
   },
   {
     initialRouteName: 'Connect',
+    headerMode: 'screen',
   }
 );
 
diff --git a/apolloschurchapp/src/tabs/discover/TileImageItem.js b/apolloschurchapp/src/tabs/discover/TileImageItem.js
index 6cb2af2..f6e6f77 100644
--- a/apolloschurchapp/src/tabs/discover/TileImageItem.js
+++ b/apolloschurchapp/src/tabs/discover/TileImageItem.js
@@ -8,10 +8,12 @@ import styled from 'apolloschurchapp/src/ui/styled';
 const Container = styled(({ theme }) => ({
   flex: 1,
   padding: theme.sizing.baseUnit / 2,
+  paddingLeft: theme.sizing.baseUnit,
+  paddingRight: 0,
 }))(View);
 
 const TileImageItem = ({
-  item: { id, title, coverImage = {}, sharing } = {},
+  item: { id, title, coverImage = {} } = {},
   isLoading,
   navigation,
 }) => (
@@ -20,7 +22,6 @@ const TileImageItem = ({
       onPressItem={() =>
         navigation.navigate('ContentSingle', {
           itemId: id,
-          sharing,
         })
       }
       isLoading={isLoading}
diff --git a/apolloschurchapp/src/tabs/discover/getContentChannels.js b/apolloschurchapp/src/tabs/discover/getContentChannels.js
index c5d2793..d39573a 100644
--- a/apolloschurchapp/src/tabs/discover/getContentChannels.js
+++ b/apolloschurchapp/src/tabs/discover/getContentChannels.js
@@ -1,5 +1,7 @@
 import gql from 'graphql-tag';
 
+import { contentItemFragment } from 'apolloschurchapp/src/content-single/getContentItem';
+
 export default gql`
   query getContentChannels {
     contentChannels {
@@ -9,6 +11,7 @@ export default gql`
         edges {
           node {
             id
+            ...contentItemFragment
             title
             coverImage {
               sources {
@@ -25,4 +28,5 @@ export default gql`
       }
     }
   }
+  ${contentItemFragment}
 `;
diff --git a/apolloschurchapp/src/tabs/home/Home.js b/apolloschurchapp/src/tabs/home/Home.js
index 4794458..6a3bdcf 100644
--- a/apolloschurchapp/src/tabs/home/Home.js
+++ b/apolloschurchapp/src/tabs/home/Home.js
@@ -1,9 +1,11 @@
 import React, { PureComponent } from 'react';
 import { Query } from 'react-apollo';
+import { Image } from 'react-native';
+import SafeAreaView from 'react-native-safe-area-view';
 import { get } from 'lodash';
 import PropTypes from 'prop-types';
 
-import { withTheme } from 'apolloschurchapp/src/ui/theme';
+import styled from 'apolloschurchapp/src/ui/styled';
 import FeedView from 'apolloschurchapp/src/ui/FeedView';
 import BackgroundView from 'apolloschurchapp/src/ui/BackgroundView';
 
@@ -11,13 +13,16 @@ import { LiveButton } from '../../live';
 
 import getUserFeed from './getUserFeed';
 
+const LogoTitle = styled(({ theme }) => ({
+  height: theme.sizing.baseUnit,
+  margin: theme.sizing.baseUnit,
+  alignSelf: 'center',
+  resizeMode: 'contain',
+}))(Image);
+
 class Home extends PureComponent {
-  static navigationOptions = ({ navigation }) => ({
-    title: 'Apollos Church',
-    headerStyle: {
-      backgroundColor: navigation.getParam('backgroundColor'),
-    },
-    headerTintColor: navigation.getParam('tintColor'),
+  static navigationOptions = () => ({
+    header: null,
   });
 
   static propTypes = {
@@ -26,47 +31,41 @@ class Home extends PureComponent {
       setParams: PropTypes.func,
       navigate: PropTypes.func,
     }),
-    headerBackgroundColor: PropTypes.string,
-    headerTintColor: PropTypes.string,
   };
 
-  constructor(props) {
-    super(props);
-
-    props.navigation.setParams({
-      backgroundColor: props.headerBackgroundColor,
-      tintColor: props.headerTintColor,
-    });
-  }
-
   handleOnPress = (item) =>
     this.props.navigation.navigate('ContentSingle', {
       itemId: item.id,
-      sharing: item.sharing,
+      transitionKey: item.transitionKey,
     });
 
   render() {
     return (
       <BackgroundView>
-        <Query query={getUserFeed} fetchPolicy="cache-and-network">
-          {({ loading, error, data, refetch }) => (
-            <FeedView
-              content={get(data, 'userFeed.edges', []).map((edge) => edge.node)}
-              isLoading={loading}
-              error={error}
-              refetch={refetch}
-              ListHeaderComponent={LiveButton}
-              onPressItem={this.handleOnPress}
-            />
-          )}
-        </Query>
+        <SafeAreaView>
+          <Query query={getUserFeed} fetchPolicy="cache-and-network">
+            {({ loading, error, data, refetch }) => (
+              <FeedView
+                content={get(data, 'userFeed.edges', []).map(
+                  (edge) => edge.node
+                )}
+                isLoading={loading}
+                error={error}
+                refetch={refetch}
+                ListHeaderComponent={
+                  <>
+                    <LogoTitle source={require('./wordmark.png')} />
+                    <LiveButton />
+                  </>
+                }
+                onPressItem={this.handleOnPress}
+              />
+            )}
+          </Query>
+        </SafeAreaView>
       </BackgroundView>
     );
   }
 }
 
-export default withTheme(({ theme, ...otherProps }) => ({
-  headerBackgroundColor: theme.colors.primary,
-  headerTintColor: theme.colors.background.paper,
-  ...otherProps,
-}))(Home);
+export default Home;
diff --git a/apolloschurchapp/src/tabs/home/getUserFeed.js b/apolloschurchapp/src/tabs/home/getUserFeed.js
index 4c70a22..34ed66c 100644
--- a/apolloschurchapp/src/tabs/home/getUserFeed.js
+++ b/apolloschurchapp/src/tabs/home/getUserFeed.js
@@ -1,10 +1,13 @@
 import gql from 'graphql-tag';
 
+import { contentItemFragment } from 'apolloschurchapp/src/content-single/getContentItem';
+
 export default gql`
   query getUserFeed {
     userFeed {
       edges {
         node {
+          ...contentItemFragment
           __typename
           id
           coverImage {
@@ -18,10 +21,14 @@ export default gql`
             name
             iconName
           }
-          sharing {
-            title
-            message
-            url
+          theme {
+            type
+            colors {
+              primary
+              secondary
+              screen
+              paper
+            }
           }
           isLiked
           title
@@ -29,4 +36,5 @@ export default gql`
       }
     }
   }
+  ${contentItemFragment}
 `;
diff --git a/apolloschurchapp/src/tabs/home/wordmark.png b/apolloschurchapp/src/tabs/home/wordmark.png
new file mode 100644
index 0000000000000000000000000000000000000000..93229c35ef61c3842a7bf0acb5c9ed910093adb0
GIT binary patch
literal 8241
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

literal 0
HcmV?d00001

diff --git a/apolloschurchapp/src/tabs/index.js b/apolloschurchapp/src/tabs/index.js
index 61d8673..0b9ea17 100644
--- a/apolloschurchapp/src/tabs/index.js
+++ b/apolloschurchapp/src/tabs/index.js
@@ -14,6 +14,8 @@ const TabNavigator = createBottomTabNavigator(
   },
   {
     tabBarComponent: TabBar,
+    lazy: true,
+    removeClippedSubviews: true,
   }
 );
 
diff --git a/apolloschurchapp/src/tabs/tabBar.js b/apolloschurchapp/src/tabs/tabBar.js
index effdefc..f93f00e 100644
--- a/apolloschurchapp/src/tabs/tabBar.js
+++ b/apolloschurchapp/src/tabs/tabBar.js
@@ -5,9 +5,8 @@ import { BottomTabBar } from 'react-navigation-tabs';
 import { Query } from 'react-apollo';
 import gql from 'graphql-tag';
 import { get } from 'lodash';
-import DeviceInfo from 'react-native-device-info';
 
-import { MINI_PLAYER_HEIGHT } from 'apolloschurchapp/src/ui/MediaPlayer';
+import { MediaPlayerSpacer } from 'apolloschurchapp/src/ui/MediaPlayer';
 import styled from 'apolloschurchapp/src/ui/styled';
 import { withTheme } from 'apolloschurchapp/src/ui/theme';
 
@@ -19,13 +18,7 @@ const mediaPlayerIsVisibleQuery = gql`
   }
 `;
 
-const isPhoneX = DeviceInfo.getModel() === 'iPhone X';
-
-// Some devices need more "spacing" at the bottom of the screen. This helps account for that
-const DEVICE_OFFSET = isPhoneX ? 10 : 0;
-
 const TabBarWrapper = styled(({ theme, mediaPlayerIsVisible }) => ({
-  paddingBottom: mediaPlayerIsVisible ? MINI_PLAYER_HEIGHT - DEVICE_OFFSET : 0,
   backgroundColor: mediaPlayerIsVisible
     ? theme.colors.screen
     : theme.colors.paper,
@@ -48,7 +41,12 @@ const TabBar = (props) => (
   <Query query={mediaPlayerIsVisibleQuery}>
     {({ data = {} }) => (
       <TabBarWrapper mediaPlayerIsVisible={get(data, 'mediaPlayer.isVisible')}>
-        <ThemedBottomTabBar {...props} />
+        <MediaPlayerSpacer>
+          <ThemedBottomTabBar
+            {...props}
+            safeAreaInset={{ bottom: 'never', top: 'never' }}
+          />
+        </MediaPlayerSpacer>
       </TabBarWrapper>
     )}
   </Query>
diff --git a/apolloschurchapp/src/testing-control-panel/ChangeLivestream.js b/apolloschurchapp/src/testing-control-panel/ChangeLivestream.js
new file mode 100644
index 0000000..6723f30
--- /dev/null
+++ b/apolloschurchapp/src/testing-control-panel/ChangeLivestream.js
@@ -0,0 +1,36 @@
+import React from 'react';
+
+import { Query } from 'react-apollo';
+import { get } from 'lodash';
+
+import { client } from 'apolloschurchapp/src/client';
+import getLiveStream from 'apolloschurchapp/src/live/getLiveStream';
+import TouchableCell from './TouchableCell';
+
+const changeLivestream = ({ isLive }) =>
+  client.writeQuery({
+    query: getLiveStream,
+    data: {
+      liveStream: {
+        __typename: 'LiveStream',
+        isLive,
+      },
+    },
+  });
+
+const ChangeLivestream = () => (
+  <Query query={getLiveStream}>
+    {({ data }) => {
+      const isLive = get(data, 'liveStream.isLive', false);
+      return (
+        <TouchableCell
+          handlePress={() => changeLivestream({ isLive: !isLive })}
+          iconName={isLive ? 'pause' : 'play'}
+          cellText={`${isLive ? 'End' : 'Start'} The Livestream`}
+        />
+      );
+    }}
+  </Query>
+);
+
+export default ChangeLivestream;
diff --git a/apolloschurchapp/src/testing-control-panel/TouchableCell.js b/apolloschurchapp/src/testing-control-panel/TouchableCell.js
new file mode 100644
index 0000000..c958596
--- /dev/null
+++ b/apolloschurchapp/src/testing-control-panel/TouchableCell.js
@@ -0,0 +1,22 @@
+import React from 'react';
+import PropType from 'prop-types';
+import Touchable from 'apolloschurchapp/src/ui/Touchable';
+
+import { Cell, CellIcon, CellText } from 'apolloschurchapp/src/ui/TableView';
+
+const TouchableCell = ({ iconName, cellText, handlePress }) => (
+  <Touchable onPress={handlePress}>
+    <Cell>
+      <CellIcon name={iconName} />
+      <CellText>{cellText}</CellText>
+    </Cell>
+  </Touchable>
+);
+
+TouchableCell.propTypes = {
+  iconName: PropType.string.isRequired,
+  cellText: PropType.string.isRequired,
+  handlePress: PropType.func.isRequired,
+};
+
+export default TouchableCell;
diff --git a/apolloschurchapp/src/testing-control-panel/TouchableCell.tests.js b/apolloschurchapp/src/testing-control-panel/TouchableCell.tests.js
new file mode 100644
index 0000000..5fd039f
--- /dev/null
+++ b/apolloschurchapp/src/testing-control-panel/TouchableCell.tests.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import TouchableCell from './TouchableCell';
+
+describe('touchable cell', () => {
+  it('renders the cell, icon, and text', () => {
+    const tree = renderer.create(
+      <Providers>
+        <TouchableCell
+          cellText="This is a cell"
+          iconName="play"
+          handlePress={() => ({})}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/testing-control-panel/index.js b/apolloschurchapp/src/testing-control-panel/index.js
new file mode 100644
index 0000000..3623e04
--- /dev/null
+++ b/apolloschurchapp/src/testing-control-panel/index.js
@@ -0,0 +1,18 @@
+import React, { PureComponent } from 'react';
+import TableView, { Divider } from 'apolloschurchapp/src/ui/TableView';
+import ChangeLivestream from './ChangeLivestream';
+
+export default class TestingControlPanel extends PureComponent {
+  static navigationOptions = () => ({
+    title: 'Testing Control Panel',
+  });
+
+  render() {
+    return (
+      <TableView>
+        <ChangeLivestream />
+        <Divider />
+      </TableView>
+    );
+  }
+}
diff --git a/apolloschurchapp/src/ui/Button/Button.js b/apolloschurchapp/src/ui/Button/Button.js
index 8419a69..2d86457 100644
--- a/apolloschurchapp/src/ui/Button/Button.js
+++ b/apolloschurchapp/src/ui/Button/Button.js
@@ -15,7 +15,7 @@ const ButtonStyles = styled(
   ({ theme, disabled, bordered, pill }) => ({
     paddingHorizontal: theme.sizing.baseUnit,
     overflow: 'hidden',
-    borderRadius: pill ? theme.sizing.baseUnit * 3 : theme.sizing.borderRadius,
+    borderRadius: pill ? theme.sizing.baseUnit * 3 : theme.sizing.baseUnit / 2,
     flexDirection: 'row',
     height: theme.sizing.baseUnit * 3,
     alignItems: 'center',
diff --git a/apolloschurchapp/src/ui/Card/CardWrapper/index.js b/apolloschurchapp/src/ui/Card/CardWrapper/index.js
index 9dc11b0..1bc13fd 100644
--- a/apolloschurchapp/src/ui/Card/CardWrapper/index.js
+++ b/apolloschurchapp/src/ui/Card/CardWrapper/index.js
@@ -5,30 +5,24 @@ import PropTypes from 'prop-types';
 
 import { withIsLoading } from 'apolloschurchapp/src/ui/isLoading';
 import styled from 'apolloschurchapp/src/ui/styled';
-import { enhancer as mediaQuery } from 'apolloschurchapp/src/ui/MediaQuery';
 
 const StyledCard = compose(
   withIsLoading,
-  styled(({ theme, cardColor }) => ({
+  styled(({ theme, cardColor, inHorizontalList = false }) => ({
     // card styles
     backgroundColor: cardColor || theme.colors.background.paper,
-    borderRadius: theme.sizing.borderRadius,
+    borderRadius: theme.sizing.baseUnit,
+    ...(inHorizontalList
+      ? {
+          marginLeft: theme.sizing.baseUnit * 0.5,
+          marginRight: 0,
+        }
+      : {
+          marginHorizontal: theme.sizing.baseUnit,
+          marginVertical: theme.sizing.baseUnit * 0.75,
+        }),
     ...Platform.select(theme.shadows.default),
-  })),
-  mediaQuery(
-    // responsive styles
-    ({ md }) => ({ maxWidth: md }),
-    styled(({ theme }) => ({
-      // mobile
-      marginHorizontal: theme.sizing.baseUnit / 2,
-      marginVertical: theme.sizing.baseUnit / 4,
-    })),
-    styled(({ theme }) => ({
-      // tablet
-      marginHorizontal: theme.sizing.baseUnit,
-      marginVertical: theme.sizing.baseUnit / 4,
-    }))
-  )
+  }))
 )(View);
 
 /*
@@ -36,7 +30,7 @@ const StyledCard = compose(
  * live on a child wrapper. https://github.com/facebook/react-native/issues/449
  */
 const OverflowFix = styled(({ theme }) => ({
-  borderRadius: theme.sizing.borderRadius,
+  borderRadius: theme.sizing.baseUnit,
   overflow: 'hidden',
 }))(View);
 
diff --git a/apolloschurchapp/src/ui/Card/Image.js b/apolloschurchapp/src/ui/Card/Image.js
index 5c26499..c6dbf87 100644
--- a/apolloschurchapp/src/ui/Card/Image.js
+++ b/apolloschurchapp/src/ui/Card/Image.js
@@ -14,8 +14,8 @@ const Image = compose(
       ...Platform.select({
         android: {
           // fixes android borderRadius overflow display issue
-          borderTopRightRadius: theme.sizing.borderRadius,
-          borderTopLeftRadius: theme.sizing.borderRadius,
+          borderTopRightRadius: theme.sizing.baseUnit,
+          borderTopLeftRadius: theme.sizing.baseUnit,
         },
       }),
     }),
diff --git a/apolloschurchapp/src/ui/CardTile/index.js b/apolloschurchapp/src/ui/CardTile/index.js
index c0710f8..2dc6549 100644
--- a/apolloschurchapp/src/ui/CardTile/index.js
+++ b/apolloschurchapp/src/ui/CardTile/index.js
@@ -33,14 +33,14 @@ const TileSpacer = styled(({ theme }) => ({
 const Tile = styled(({ theme }) => ({
   height: '100%',
   aspectRatio: 1,
-  borderRadius: theme.sizing.borderRadius,
+  borderRadius: theme.sizing.baseUnit,
   backgroundColor: theme.colors.lightTertiary,
 }))(View);
 
 const PlaceholderOverflowFix = styled(({ theme }) => ({
   ...StyleSheet.absoluteFillObject,
   justifyContent: 'center',
-  borderRadius: theme.sizing.borderRadius,
+  borderRadius: theme.sizing.baseUnit,
   overflow: 'hidden',
 }))(View);
 
@@ -52,8 +52,8 @@ const TileNumber = styled(({ theme, size }) => ({
   height: theme.helpers.rem(1 * (size < 2 ? 2 : size)),
   justifyContent: 'center',
   alignItems: 'center',
-  borderTopLeftRadius: theme.sizing.borderRadius,
-  borderBottomRightRadius: theme.sizing.borderRadius,
+  borderTopLeftRadius: theme.sizing.baseUnit,
+  borderBottomRightRadius: theme.sizing.baseUnit,
   backgroundColor: theme.colors.white,
 }))(View);
 
diff --git a/apolloschurchapp/src/ui/ConnectedImage/index.js b/apolloschurchapp/src/ui/ConnectedImage/index.js
index 0634f54..680220e 100644
--- a/apolloschurchapp/src/ui/ConnectedImage/index.js
+++ b/apolloschurchapp/src/ui/ConnectedImage/index.js
@@ -38,6 +38,7 @@ const getCachedSources = (_sources = []) => {
 
   return sources.map((source) => ({
     uri: (source.url || '').replace(/^http:\/\/|^\/\//i, 'https://'),
+    cache: 'force-cache',
     ...source,
     ...(sizeCache[getCacheKey(source)] || {}),
   }));
@@ -93,7 +94,7 @@ class ConnectedImage extends PureComponent {
       source: getCachedSources(this.props.source),
     };
 
-    this.imageOpacity = new Animated.Value(0);
+    this.imageOpacity = new Animated.Value(this.isLoading ? 0 : 1);
   }
 
   componentWillMount() {
diff --git a/apolloschurchapp/src/ui/FeedItemCard/LikeButton.js b/apolloschurchapp/src/ui/FeedItemCard/LikeButton.js
deleted file mode 100644
index cdb41c7..0000000
--- a/apolloschurchapp/src/ui/FeedItemCard/LikeButton.js
+++ /dev/null
@@ -1,13 +0,0 @@
-import { TouchableOpacity } from 'react-native';
-import { compose, mapProps } from 'recompose';
-// import withToggleLike from '@data/likes/withToggleLike';
-
-const enhance = compose(
-  // withToggleLike,
-  mapProps(({ toggleLike, id, ...otherProps }) => ({
-    onPress: () => toggleLike(id),
-    ...otherProps,
-  }))
-);
-
-export default enhance(TouchableOpacity);
diff --git a/apolloschurchapp/src/ui/FeedItemCard/index.js b/apolloschurchapp/src/ui/FeedItemCard/index.js
index 8e8dd74..b40c3a1 100644
--- a/apolloschurchapp/src/ui/FeedItemCard/index.js
+++ b/apolloschurchapp/src/ui/FeedItemCard/index.js
@@ -33,6 +33,7 @@ const FeedItemCard = enhance(
     isLiked,
     backgroundColor,
     theme,
+    transitionKey,
     id,
     ...otherProps
   }) => (
diff --git a/apolloschurchapp/src/ui/FeedView/index.js b/apolloschurchapp/src/ui/FeedView/index.js
index da91622..c1a2c1b 100644
--- a/apolloschurchapp/src/ui/FeedView/index.js
+++ b/apolloschurchapp/src/ui/FeedView/index.js
@@ -1,5 +1,5 @@
 import React, { Component } from 'react';
-import { FlatList, TouchableWithoutFeedback } from 'react-native';
+import { FlatList } from 'react-native';
 import PropTypes from 'prop-types';
 import { pure, compose, branch, withProps, defaultProps } from 'recompose';
 import { get } from 'lodash';
@@ -8,17 +8,24 @@ import FeedItemCard from 'apolloschurchapp/src/ui/FeedItemCard';
 import { enhancer as mediaQuery } from 'apolloschurchapp/src/ui/MediaQuery';
 import { withTheme } from 'apolloschurchapp/src/ui/theme';
 import { ErrorCard } from 'apolloschurchapp/src/ui/Card';
+import TouchableScale from 'apolloschurchapp/src/ui/TouchableScale';
 
 const StyledFlatList = compose(
   withTheme(({ theme: { helpers: { verticalRhythm } } } = {}) => ({
-    contentContainerStyle: { paddingVertical: verticalRhythm(0.3125) }, // Android padding fix 😩
+    contentContainerStyle: {
+      paddingVertical: verticalRhythm(0.3125),
+    }, // Android padding fix 😩
   }))
 )(FlatList);
 
 class FeedView extends Component {
   static propTypes = {
     content: PropTypes.array, // eslint-disable-line
-    error: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),
+    error: PropTypes.oneOfType([
+      PropTypes.bool,
+      PropTypes.string,
+      PropTypes.object,
+    ]),
     fetchMore: PropTypes.func,
     isLoading: PropTypes.bool,
     keyExtractor: PropTypes.func,
@@ -55,12 +62,7 @@ class FeedView extends Component {
       // These are all props of FeedItemCard but they do not have data coming
       // back yet. So I moved them here for safe keeping.
       // TODO: Move them back when the data is ready.
-      // backgroundColor={item.theme.colors.background.paper}
-      // isLight={item.theme.isLight}
-      // isLiked={item.isLiked}
-      <TouchableWithoutFeedback
-        onPress={() => this.props.onPressItem({ ...item })}
-      >
+      <TouchableScale onPress={() => this.props.onPressItem({ ...item })}>
         <FeedItemCard
           id={get(item, 'id')}
           title={get(item, 'title') || get(item, 'name') || ' '}
@@ -69,8 +71,10 @@ class FeedView extends Component {
           channelTypeIcon={get(item, 'parentChannel.iconName')}
           images={get(item, 'coverImage.sources')}
           isLoading={get(item, 'isLoading')}
+          isLight={get(item, 'theme.type', '').toLowerCase() !== 'dark'}
+          backgroundColor={get(item, 'theme.colors.paper')}
         />
-      </TouchableWithoutFeedback>
+      </TouchableScale>
     );
   };
 
@@ -89,7 +93,6 @@ class FeedView extends Component {
       renderItem,
       ...otherProps
     } = this.props;
-
     return (
       <StyledFlatList
         {...otherProps}
diff --git a/apolloschurchapp/src/ui/HorizontalTileFeed/TileFeed.js b/apolloschurchapp/src/ui/HorizontalTileFeed/TileFeed.js
index 1f2eadf..e98dce2 100644
--- a/apolloschurchapp/src/ui/HorizontalTileFeed/TileFeed.js
+++ b/apolloschurchapp/src/ui/HorizontalTileFeed/TileFeed.js
@@ -4,7 +4,6 @@ import styled from 'apolloschurchapp/src/ui/styled';
 
 const TileFeed = styled(({ theme, tileHeight }) => ({
   height: tileHeight,
-  paddingHorizontal: theme.sizing.baseUnit / 2,
   paddingBottom: theme.sizing.baseUnit / 2,
 }))(FlatList);
 
diff --git a/apolloschurchapp/src/ui/Icon/icons/Mute.js b/apolloschurchapp/src/ui/Icon/icons/Mute.js
new file mode 100644
index 0000000..01d9c4c
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/Mute.js
@@ -0,0 +1,25 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Svg, { Path } from 'react-native-svg';
+
+import makeIcon from './makeIcon';
+
+const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
+  <Svg width={size} height={size} viewBox="1.5 -0.5 24 24" {...otherProps}>
+    <Path
+      d="M10.82 16.73l3.28 2.1a1.5 1.5 0 0 0 2.4-1.2v-5.25M16.5 5.63a1.5 1.5 0 0 0-2.4-1.2l-6.6 4.2h-3a1.5 1.5 0 0 0-1.5 1.5v3a1.5 1.5 0 0 0 1.5 1.5h.63M3 19.88l18-15"
+      fill={'none'}
+      stroke={fill}
+      strokeWidth={1.5}
+      strokeLinecap={'round'}
+      strokeLinejoin={'round'}
+    />
+  </Svg>
+));
+
+Icon.propTypes = {
+  size: PropTypes.number,
+  fill: PropTypes.string,
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/SkipBackThirty.js b/apolloschurchapp/src/ui/Icon/icons/SkipBackThirty.js
new file mode 100644
index 0000000..c2e760f
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/SkipBackThirty.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Svg, { Path } from 'react-native-svg';
+
+import makeIcon from './makeIcon';
+
+const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
+  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
+    <Path
+      d="M8.742 3.226a10.636 10.636 0 0 1 2.152-.423l-1.385 1.6-.074-1.03L12.56 6.08c.736.638-.22 1.742-.957 1.104L8.478 4.476a.74.74 0 0 1-.236-.396.74.74 0 0 1 .19-.666l2.68-3.095a.73.73 0 0 1 1.105.956l-1.323 1.528a10.638 10.638 0 0 1 11.19 7.658 10.48 10.48 0 1 1-20.15 5.77.73.73 0 0 1 1.407-.388 9.02 9.02 0 1 0 17.34-4.972 9.182 9.182 0 0 0-11.51-6.248l.264-1.25L12.56 6.08l-.957 1.104-3.126-2.708a.708.708 0 0 1-.234-.388c-.05-.22.002-.459.188-.674a.725.725 0 0 1 .31-.188zm2.611 10.833c.395.641.397 1.432.005 2.075-.392.643-1.118 1.04-1.906 1.042h-.953c-1.043 0-1.89-.797-1.89-1.78 0-.328.283-.594.63-.594.348 0 .63.266.63.594 0 .327.282.593.63.593h.951c.337 0 .648-.17.816-.446a.844.844 0 0 0-.002-.889.955.955 0 0 0-.818-.442c-.831.002-.846-1.17-.014-1.187.512-.01.922-.404.923-.886.001-.483-.407-.878-.903-.89h-.953c-.348 0-.63.265-.63.593 0 .328-.282.593-.63.593-.347 0-.63-.265-.63-.593 0-.983.847-1.78 1.89-1.78h.969c1.196.028 2.149.951 2.146 2.08a2.012 2.012 0 0 1-.642 1.46c.147.133.276.286.381.457zm5.227 2.806c-.78.424-1.74.424-2.519 0-.78-.424-1.26-1.208-1.26-2.056v-2.374c0-1.31 1.128-2.373 2.52-2.373 1.39 0 2.518 1.062 2.518 2.373v2.374c0 .848-.48 1.632-1.26 2.056zm0-4.43c0-.655-.564-1.186-1.26-1.186-.695 0-1.259.531-1.259 1.186v2.374c0 .424.24.816.63 1.028.39.212.87.212 1.26 0 .389-.212.629-.604.629-1.028v-2.374z"
+      fill={fill}
+    />
+  </Svg>
+));
+
+Icon.propTypes = {
+  size: PropTypes.number,
+  fill: PropTypes.string,
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/SkipForwardThirty.js b/apolloschurchapp/src/ui/Icon/icons/SkipForwardThirty.js
new file mode 100644
index 0000000..9cec2a9
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/SkipForwardThirty.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Svg, { Path } from 'react-native-svg';
+
+import makeIcon from './makeIcon';
+
+const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
+  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
+    <Path
+      d="M15.39 3.24c.12.04.23.1.31.2.2.2.25.45.2.67a.7.7 0 0 1-.24.39l-3.18 2.69-.99-1.12 3.19-2.69.28 1.26a9.56 9.56 0 0 0-7.24.66 9.07 9.07 0 0 0-2.27 14.37 9.47 9.47 0 0 0 8.96 2.57 8.98 8.98 0 0 0 6.6-6.31c.1-.4.52-.62.92-.5.4.1.63.5.52.9-1 3.63-3.93 6.43-7.66 7.33a11 11 0 0 1-10.4-2.98A10.5 10.5 0 0 1 7 4c1.89-1 4.04-1.41 6.17-1.2L11.8 1.25a.72.72 0 0 1 .07-1.03.76.76 0 0 1 1.06.08l2.76 3.12c.18.18.25.43.2.67a.73.73 0 0 1-.24.4l-3.18 2.69c-.75.63-1.74-.48-.99-1.12l3.19-2.69-.07 1.03-1.43-1.6c.74.06 1.48.2 2.2.43zm-3.93 10.82c.39.64.4 1.43 0 2.07a2.23 2.23 0 0 1-1.9 1.05H8.6c-1.04 0-1.89-.8-1.89-1.78 0-.33.28-.6.63-.6s.63.27.63.6c0 .32.28.59.63.59h.95c.34 0 .65-.17.82-.45a.84.84 0 0 0 0-.89.96.96 0 0 0-.82-.44c-.83 0-.85-1.17-.02-1.18.52-.01.93-.4.93-.9 0-.47-.41-.87-.9-.88H8.6c-.35 0-.63.26-.63.6 0 .32-.28.59-.63.59s-.63-.27-.63-.6c0-.98.85-1.78 1.9-1.78h.96c1.2.03 2.15.95 2.15 2.08 0 .57-.25 1.09-.65 1.46.15.13.28.29.39.46zm5.22 2.8c-.78.43-1.74.43-2.52 0a2.35 2.35 0 0 1-1.26-2.05v-2.37c0-1.32 1.13-2.38 2.52-2.38 1.4 0 2.52 1.06 2.52 2.38v2.37c0 .85-.48 1.63-1.26 2.05zm0-4.42c0-.66-.56-1.2-1.26-1.2s-1.26.54-1.26 1.2v2.37c0 .42.24.82.63 1.03.4.2.87.2 1.26 0 .4-.21.63-.6.63-1.03v-2.37z"
+      fill={fill}
+    />
+  </Svg>
+));
+
+Icon.propTypes = {
+  size: PropTypes.number,
+  fill: PropTypes.string,
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/VideoOff.js b/apolloschurchapp/src/ui/Icon/icons/VideoOff.js
new file mode 100644
index 0000000..be6a3f0
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/VideoOff.js
@@ -0,0 +1,26 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Svg, { Path } from 'react-native-svg';
+
+import makeIcon from './makeIcon';
+
+const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
+  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
+    <Path
+      d="M3.8182 5.7778v12.4444H14.2V5.7778H3.8182zM16 6v12c0 1.1046-.8954 2-2 2H4c-1.1046 0-2-.8954-2-2V6c0-1.1046.8954-2 2-2h10c1.1046 0 2 .8954 2 2zm4.1818 2.6952L16 11.8084v.3832l4.1818 3.251V8.695zM16 14.4957V9.4253l6-4.2178v13.585l-6-4.2968z"
+      fill={fill}
+    />
+    <Path
+      d="M0.219669914,1.28033009 C-0.0732233047,0.987436867 -0.0732233047,0.512563133 0.219669914,0.219669914 C0.512563133,-0.0732233047 0.987436867,-0.0732233047 1.28033009,0.219669914 L23.7803301,22.7196699 C24.0732233,23.0125631 24.0732233,23.4874369 23.7803301,23.7803301 C23.4874369,24.0732233 23.0125631,24.0732233 22.7196699,23.7803301 L0.219669914,1.28033009 Z"
+      transform="translate(12.000000, 12.000000) scale(-1, 1) translate(-12.000000, -12.000000) "
+      fill={fill}
+    />
+  </Svg>
+));
+
+Icon.propTypes = {
+  size: PropTypes.number,
+  fill: PropTypes.string,
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/Volume.js b/apolloschurchapp/src/ui/Icon/icons/Volume.js
new file mode 100644
index 0000000..1161122
--- /dev/null
+++ b/apolloschurchapp/src/ui/Icon/icons/Volume.js
@@ -0,0 +1,29 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import Svg, { Path, G } from 'react-native-svg';
+
+import makeIcon from './makeIcon';
+
+const Icon = makeIcon(({ size = 32, fill, ...otherProps } = {}) => (
+  <Svg width={size} height={size} viewBox="0 0 24 24" {...otherProps}>
+    <G
+      fill={'none'}
+      stroke={fill}
+      strokeWidth={1.5}
+      strokeLinecap={'round'}
+      strokeLinejoin={'round'}
+    >
+      <Path d="M14.17 4.66a1.5 1.5 0 0 0-1.57.14L6 9H3a1.5 1.5 0 0 0-1.5 1.5v3A1.5 1.5 0 0 0 3 15h3l6.6 4.2A1.5 1.5 0 0 0 15 18V6a1.5 1.5 0 0 0-.83-1.34z" />
+      <Path d="M21.46 15.75a6.6 6.6 0 0 0 0-7.1" />
+      <Path d="M18.56 14.44a3.5 3.5 0 0 0 0-4.4" />
+      <Path d="M6 9v6" />
+    </G>
+  </Svg>
+));
+
+Icon.propTypes = {
+  size: PropTypes.number,
+  fill: PropTypes.string,
+};
+
+export default Icon;
diff --git a/apolloschurchapp/src/ui/Icon/icons/index.js b/apolloschurchapp/src/ui/Icon/icons/index.js
index b4385c6..4596f20 100644
--- a/apolloschurchapp/src/ui/Icon/icons/index.js
+++ b/apolloschurchapp/src/ui/Icon/icons/index.js
@@ -4,16 +4,18 @@ export { default as ArrowNext } from './ArrowNext';
 export { default as ArrowUp } from './ArrowUp';
 export { default as Audio } from './Audio';
 export { default as Bank } from './Bank';
-export { default as Building } from './Building';
 export { default as BrandIcon } from './BrandIcon';
+export { default as Building } from './Building';
 export { default as Calendar } from './Calendar';
 export { default as Camera } from './Camera';
 export { default as Check } from './Check';
 export { default as CheckboxChecked } from './CheckboxChecked';
 export { default as CheckboxUnchecked } from './CheckboxUnchecked';
-export { default as Chromecast } from './Chromecast';
+export { default as CircleOutlineCheckMark } from './CircleOutlineCheckMark';
+export { default as CircleOutlineXMark } from './CircleOutlineXMark';
 export { default as Close } from './Close';
 export { default as Credit } from './Credit';
+export { default as Chromecast } from './Chromecast';
 export { default as Download } from './Download';
 export { default as Dropdown } from './Dropdown';
 export { default as Empty } from './Empty';
@@ -27,6 +29,7 @@ export { default as Like } from './Like';
 export { default as LikeSolid } from './LikeSolid';
 export { default as Locate } from './Locate';
 export { default as Lock } from './Lock';
+export { default as Mute } from './Mute';
 export { default as Pause } from './Pause';
 export { default as Pin } from './Pin';
 export { default as Play } from './Play';
@@ -42,12 +45,14 @@ export { default as Sections } from './Sections';
 export { default as Settings } from './Settings';
 export { default as Share } from './Share';
 export { default as Shuffle } from './Shuffle';
+export { default as SkipForwardThirty } from './SkipForwardThirty';
+export { default as SkipBackThirty } from './SkipBackThirty';
 export { default as SkipNext } from './SkipNext';
 export { default as SkipPrevious } from './SkipPrevious';
 export { default as Text } from './Text';
 export { default as Time } from './Time';
 export { default as Umbrella } from './Umbrella';
 export { default as Video } from './Video';
+export { default as VideoOff } from './VideoOff';
+export { default as Volume } from './Volume';
 export { default as Warning } from './Warning';
-export { default as CircleOutlineCheckMark } from './CircleOutlineCheckMark';
-export { default as CircleOutlineXMark } from './CircleOutlineXMark';
diff --git a/apolloschurchapp/src/ui/LayoutContext/LayoutContext.tests.js b/apolloschurchapp/src/ui/LayoutContext/LayoutContext.tests.js
new file mode 100644
index 0000000..f66a362
--- /dev/null
+++ b/apolloschurchapp/src/ui/LayoutContext/LayoutContext.tests.js
@@ -0,0 +1,20 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import { LayoutConsumer } from '.';
+
+describe(`LayoutContext Provider and Consumer`, () => {
+  it('provides safeAreaInsets', async () => {
+    renderer.create(
+      <Providers>
+        <LayoutConsumer>
+          {({ safeAreaInsets }) => {
+            expect(safeAreaInsets).toMatchSnapshot();
+          }}
+        </LayoutConsumer>
+      </Providers>
+    );
+  });
+});
diff --git a/apolloschurchapp/src/ui/LayoutContext/Provider.js b/apolloschurchapp/src/ui/LayoutContext/Provider.js
new file mode 100644
index 0000000..d8fc582
--- /dev/null
+++ b/apolloschurchapp/src/ui/LayoutContext/Provider.js
@@ -0,0 +1,68 @@
+import React, { Component } from 'react';
+import { Dimensions, StyleSheet, SafeAreaView, View } from 'react-native';
+import PropTypes from 'prop-types';
+import { isEqual } from 'lodash';
+
+import Context, { initialState } from './context';
+
+const initialDimensions = Dimensions.get('screen');
+
+const styles = StyleSheet.create({
+  flex: { flex: 1 },
+});
+
+class LayoutProvider extends Component {
+  static propTypes = {
+    children: PropTypes.node,
+  };
+
+  state = initialState;
+
+  rootHeight = initialDimensions.height;
+
+  rootWidth = initialDimensions.width;
+
+  handleRootLayout = ({
+    nativeEvent: {
+      layout: { height, width },
+    },
+  }) => {
+    this.rootHeight = height;
+    this.rootWidth = width;
+  };
+
+  handleChildLayout = ({
+    nativeEvent: {
+      layout: { x, y, width, height },
+    },
+  }) => {
+    const safeAreaInsets = {
+      top: y,
+      bottom: this.rootHeight - height - y,
+      left: x,
+      right: this.rootWidth - width - x,
+    };
+
+    if (!isEqual(this.state.safeAreaInsets, safeAreaInsets)) {
+      this.setState({ safeAreaInsets });
+    }
+  };
+
+  render() {
+    return (
+      <SafeAreaView
+        style={StyleSheet.absoluteFill}
+        onLayout={this.handleRootLayout}
+      >
+        <View style={styles.flex} onLayout={this.handleChildLayout} />
+        <View style={StyleSheet.absoluteFill}>
+          <Context.Provider value={this.state}>
+            {this.props.children}
+          </Context.Provider>
+        </View>
+      </SafeAreaView>
+    );
+  }
+}
+
+export default LayoutProvider;
diff --git a/apolloschurchapp/src/ui/LayoutContext/context.js b/apolloschurchapp/src/ui/LayoutContext/context.js
new file mode 100644
index 0000000..91191ad
--- /dev/null
+++ b/apolloschurchapp/src/ui/LayoutContext/context.js
@@ -0,0 +1,12 @@
+import { createContext } from 'react';
+
+export const initialState = {
+  safeAreaInsets: {
+    top: 0,
+    left: 0,
+    right: 0,
+    bottom: 0,
+  },
+};
+
+export default createContext(initialState);
diff --git a/apolloschurchapp/src/ui/LayoutContext/index.js b/apolloschurchapp/src/ui/LayoutContext/index.js
new file mode 100644
index 0000000..2fda4c4
--- /dev/null
+++ b/apolloschurchapp/src/ui/LayoutContext/index.js
@@ -0,0 +1,6 @@
+import LayoutProvider from './Provider';
+import Context from './context';
+
+const LayoutConsumer = Context.Consumer;
+
+export { LayoutProvider, LayoutConsumer };
diff --git a/apolloschurchapp/src/ui/Like/Like.tests.js b/apolloschurchapp/src/ui/Like/Like.tests.js
index 6c9cf26..f7d40c2 100644
--- a/apolloschurchapp/src/ui/Like/Like.tests.js
+++ b/apolloschurchapp/src/ui/Like/Like.tests.js
@@ -3,19 +3,13 @@ import renderer from 'react-test-renderer';
 
 import Providers from 'apolloschurchapp/src/Providers';
 
-import Like from '.';
+import { LikeIcon } from '.';
 
-describe('the Share component', () => {
+describe('the Like component', () => {
   it('should render a Like', () => {
     const tree = renderer.create(
       <Providers>
-        <Like
-          itemId={'abc'}
-          sessionId={'123'}
-          isLiked={false}
-          operation={'Like'}
-          toggleLike={(data) => data}
-        />
+        <LikeIcon itemId={'abc'} isLiked={false} />
       </Providers>
     );
     expect(tree).toMatchSnapshot();
@@ -24,13 +18,7 @@ describe('the Share component', () => {
   it('should render a UnLike', () => {
     const tree = renderer.create(
       <Providers>
-        <Like
-          itemId={'abc'}
-          sessionId={'123'}
-          isLiked
-          operation={'Unlike'}
-          toggleLike={(data) => data}
-        />
+        <LikeIcon itemId={'abc'} isLiked />
       </Providers>
     );
     expect(tree).toMatchSnapshot();
diff --git a/apolloschurchapp/src/ui/Like/index.js b/apolloschurchapp/src/ui/Like/index.js
index 40c8904..d415028 100644
--- a/apolloschurchapp/src/ui/Like/index.js
+++ b/apolloschurchapp/src/ui/Like/index.js
@@ -1,29 +1,37 @@
 import React from 'react';
 import PropTypes from 'prop-types';
 import { compose, pure } from 'recompose';
+
 import Icon from 'apolloschurchapp/src/ui/Icon';
-import Touchable from 'apolloschurchapp/src/ui/Touchable';
 import { withTheme } from 'apolloschurchapp/src/ui/theme';
+import ProtectedTouchable from '../../auth/ProtectedTouchable';
 
 const enhance = compose(
   pure,
   withTheme()
 );
 
-const Like = enhance(
-  ({ isLiked, toggleLike, itemId, sessionId, operation, theme }) => (
-    <Touchable onPress={() => toggleLike({ itemId, sessionId, operation })}>
-      <Icon
-        name={isLiked ? 'like-solid' : 'like'}
-        fill={theme.colors.secondary}
-      />
-    </Touchable>
-  )
+export const LikeIcon = enhance(({ isLiked, theme }) => (
+  <Icon name={isLiked ? 'like-solid' : 'like'} fill={theme.colors.secondary} />
+));
+
+LikeIcon.propTypes = {
+  isLiked: PropTypes.bool,
+};
+
+const Like = ({ isLiked, toggleLike, itemId }) => (
+  <ProtectedTouchable
+    onPress={() =>
+      toggleLike({ itemId, operation: isLiked ? 'Unlike' : 'Like' })
+    }
+  >
+    <LikeIcon isLiked={isLiked} />
+  </ProtectedTouchable>
 );
 
 Like.propTypes = {
-  id: PropTypes.string,
-  isLike: PropTypes.bool,
+  itemId: PropTypes.string,
+  isLiked: PropTypes.bool,
   toggleLike: PropTypes.func,
 };
 
diff --git a/apolloschurchapp/src/ui/LikeButton/LikeButton.tests.js b/apolloschurchapp/src/ui/LikeButton/LikeButton.tests.js
new file mode 100644
index 0000000..d3bf42f
--- /dev/null
+++ b/apolloschurchapp/src/ui/LikeButton/LikeButton.tests.js
@@ -0,0 +1,64 @@
+// import React from 'react';
+// import renderer from 'react-test-renderer';
+
+// import Providers from 'apolloschurchapp/src/Providers';
+// import gql from 'graphql-tag';
+
+// import LikeButton from '.';
+
+describe('the LikeButton component', () => {
+  it('should render', () => {
+    //     const updateLikeEntity = {
+    //       request: {
+    //         query: gql`
+    //           mutation updateLikeEntity($itemId: ID!, $operation: LIKE_OPERATION!) {
+    //             updateLikeEntity(
+    //               input: { nodeId: $itemId, operation: $operation }
+    //             ) {
+    //               id
+    //               operation
+    //               interactionDateTime
+    //             }
+    //           }
+    //         `,
+    //         variables: {
+    //           itemId: 'asdf',
+    //           operation: 'Like',
+    //         },
+    //       },
+    //       result: {
+    //         data: {
+    //           node: { isLiked: true },
+    //         },
+    //       },
+    //     };
+    //     const getLikedContentItem = {
+    //       request: {
+    //         query: gql`
+    //           query getLikedContentItem($itemId: ID!) {
+    //             node(id: $itemId) {
+    //               ... on ContentItem {
+    //                 id
+    //                 isLiked
+    //               }
+    //             }
+    //           }
+    //         `,
+    //         variables: {
+    //           itemId: 'asdf',
+    //         },
+    //       },
+    //       result: {
+    //         data: {
+    //           updateLikeEntity: { operation: 'Like' },
+    //         },
+    //       },
+    //     };
+    //     const tree = renderer.create(
+    //       <Providers mocks={[updateLikeEntity, getLikedContentItem]}>
+    //         <LikeButton itemId={'asdf'} />
+    //       </Providers>
+    //     );
+    //     expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/content-single/getLikedContentItem.js b/apolloschurchapp/src/ui/LikeButton/getLikedContentItem.js
similarity index 100%
rename from apolloschurchapp/src/content-single/getLikedContentItem.js
rename to apolloschurchapp/src/ui/LikeButton/getLikedContentItem.js
diff --git a/apolloschurchapp/src/ui/LikeButton/index.js b/apolloschurchapp/src/ui/LikeButton/index.js
new file mode 100644
index 0000000..d3a43b6
--- /dev/null
+++ b/apolloschurchapp/src/ui/LikeButton/index.js
@@ -0,0 +1,115 @@
+import React from 'react';
+
+import PropTypes from 'prop-types';
+import { get } from 'lodash';
+import { Query, Mutation } from 'react-apollo';
+
+import Like from 'apolloschurchapp/src/ui/Like';
+import { track, events } from 'apolloschurchapp/src/analytics';
+
+import updateLikeEntity from './updateLikeEntity';
+import getLikedContentItem from './getLikedContentItem';
+
+const GetLikeData = ({ itemId, children }) => (
+  <Query query={getLikedContentItem} variables={{ itemId }}>
+    {({ data: { node = {} } = {}, loading }) => {
+      const isLiked = loading ? false : get(node, 'isLiked') || false;
+      return children({ isLiked, item: node });
+    }}
+  </Query>
+);
+
+GetLikeData.propTypes = {
+  itemId: PropTypes.string,
+  children: PropTypes.func.isRequired,
+};
+
+const UpdateLikeStatus = ({ itemId, item, isLiked, children }) => (
+  <Mutation
+    mutation={updateLikeEntity}
+    optimisticResponse={{
+      updateLikeEntity: {
+        operation: isLiked ? 'Unlike' : 'Like',
+        id: null, // unknown at this time
+        interactionDateTime: new Date().toJSON(),
+        __typename: 'Interaction',
+      },
+    }}
+    refetchQueries={['getAllLikedContent']}
+    update={(
+      cache,
+      {
+        data: {
+          updateLikeEntity: { operation },
+        },
+      }
+    ) => {
+      cache.writeQuery({
+        query: getLikedContentItem,
+        data: {
+          node: {
+            ...item,
+            isLiked: operation === 'Like',
+          },
+        },
+      });
+    }}
+  >
+    {(createNewInteraction) =>
+      itemId
+        ? children({
+            itemId,
+            isLiked,
+            toggleLike: async (variables) => {
+              try {
+                await createNewInteraction({ variables });
+                track({
+                  eventName: isLiked
+                    ? events.UnlikeContent
+                    : events.LikeContent,
+                  properties: {
+                    id: itemId,
+                  },
+                });
+              } catch (e) {
+                throw e.message;
+              }
+            },
+          })
+        : null
+    }
+  </Mutation>
+);
+
+UpdateLikeStatus.propTypes = {
+  itemId: PropTypes.string,
+  children: PropTypes.func.isRequired,
+  isLiked: PropTypes.bool.isRequired,
+  item: PropTypes.shape({
+    id: PropTypes.string,
+    __typename: PropTypes.string,
+    isLiked: PropTypes.bool,
+  }),
+};
+
+const LikeButton = ({ itemId }) => (
+  <GetLikeData itemId={itemId}>
+    {({ isLiked, item }) => (
+      <UpdateLikeStatus itemId={itemId} item={item} isLiked={isLiked}>
+        {({ toggleLike, isLiked: newLikeValue }) => (
+          <Like
+            itemId={itemId}
+            isLiked={newLikeValue}
+            toggleLike={toggleLike}
+          />
+        )}
+      </UpdateLikeStatus>
+    )}
+  </GetLikeData>
+);
+
+LikeButton.propTypes = {
+  itemId: PropTypes.string,
+};
+
+export default LikeButton;
diff --git a/apolloschurchapp/src/ui/LikeButton/updateLikeEntity.js b/apolloschurchapp/src/ui/LikeButton/updateLikeEntity.js
new file mode 100644
index 0000000..892fd76
--- /dev/null
+++ b/apolloschurchapp/src/ui/LikeButton/updateLikeEntity.js
@@ -0,0 +1,11 @@
+import gql from 'graphql-tag';
+
+export default gql`
+  mutation updateLikeEntity($itemId: ID!, $operation: LIKE_OPERATION!) {
+    updateLikeEntity(input: { nodeId: $itemId, operation: $operation }) {
+      id
+      operation
+      interactionDateTime
+    }
+  }
+`;
diff --git a/apolloschurchapp/src/ui/MediaPlayer/FullscreenControls.js b/apolloschurchapp/src/ui/MediaPlayer/FullscreenControls.js
index 5e86a59..326fea4 100644
--- a/apolloschurchapp/src/ui/MediaPlayer/FullscreenControls.js
+++ b/apolloschurchapp/src/ui/MediaPlayer/FullscreenControls.js
@@ -21,7 +21,15 @@ import Touchable from 'apolloschurchapp/src/ui/Touchable';
 
 import Seeker from './Seeker';
 import { getControlState } from './queries';
-import { play, pause, exitFullscreen } from './mutations';
+import {
+  play,
+  pause,
+  exitFullscreen,
+  showVideo,
+  hideVideo,
+  mute,
+  unmute,
+} from './mutations';
 
 import { ControlsConsumer } from './PlayheadState';
 
@@ -67,16 +75,16 @@ const Artist = styled({ textAlign: 'center' })(H6);
 
 const IconSm = withTheme(({ theme, disabled }) => ({
   size: theme.sizing.baseUnit,
-  opacity: disabled ? 0.5 : 1,
+  opacity: disabled ? 0.5 : 1.25,
 }))(Icon);
 
 const IconMd = withTheme(({ theme, disabled }) => ({
-  size: theme.sizing.baseUnit * 1.5,
+  size: theme.sizing.baseUnit * 1.875,
   opacity: disabled ? 0.5 : 1,
 }))(Icon);
 
 const IconLg = withTheme(({ theme, disabled }) => ({
-  size: theme.sizing.baseUnit * 2.5,
+  size: theme.sizing.baseUnit * 3.125,
   opacity: disabled ? 0.5 : 1,
 }))(Icon);
 
@@ -146,6 +154,22 @@ class FullscreenControls extends PureComponent {
     this.props.client.mutate({ mutation: pause });
   };
 
+  handleShowVideo = () => {
+    this.props.client.mutate({ mutation: showVideo });
+  };
+
+  handleHideVideo = () => {
+    this.props.client.mutate({ mutation: hideVideo });
+  };
+
+  handleMute = () => {
+    this.props.client.mutate({ mutation: mute });
+  };
+
+  handleUnMute = () => {
+    this.props.client.mutate({ mutation: unmute });
+  };
+
   handleControlVisibility = () => {
     if (this.closeTimeout) clearTimeout(this.closeTimeout);
     this.open.stop();
@@ -175,18 +199,18 @@ class FullscreenControls extends PureComponent {
 
   renderSkipForward = ({ skip }) => (
     <Touchable onPress={() => skip(30)}>
-      <IconMd name="skip-next" />
+      <IconMd name="skip-forward-thirty" />
     </Touchable>
   );
 
   renderSkipBack = ({ skip }) => (
     <Touchable onPress={() => skip(-30)}>
-      <IconMd name="skip-previous" />
+      <IconMd name="skip-back-thirty" />
     </Touchable>
   );
 
   renderFullscreenControls = ({ data: { mediaPlayer = {} } = {} }) => {
-    this.isVideo = get(mediaPlayer, 'currentTrack.isVideo');
+    this.isVideo = get(mediaPlayer, 'showVideo');
     this.isPlaying = mediaPlayer.isPlaying;
 
     if (
@@ -224,7 +248,15 @@ class FullscreenControls extends PureComponent {
                   <Seeker onScrubbing={this.handleOnScrubbing} />
                 </PlayHead>
                 <PlayControls>
-                  <IconSm disabled name="shuffle" />
+                  {get(mediaPlayer, 'muted') ? (
+                    <Touchable onPress={this.handleUnMute}>
+                      <IconSm name="mute" />
+                    </Touchable>
+                  ) : (
+                    <Touchable onPress={this.handleMute}>
+                      <IconSm name="volume" />
+                    </Touchable>
+                  )}
                   <ControlsConsumer>{this.renderSkipBack}</ControlsConsumer>
                   {mediaPlayer.isPlaying ? (
                     <Touchable onPress={this.handlePause}>
@@ -236,7 +268,15 @@ class FullscreenControls extends PureComponent {
                     </Touchable>
                   )}
                   <ControlsConsumer>{this.renderSkipForward}</ControlsConsumer>
-                  <IconSm disabled name="repeat" />
+                  {mediaPlayer.showVideo ? (
+                    <Touchable onPress={this.handleHideVideo}>
+                      <IconSm name="video" />
+                    </Touchable>
+                  ) : (
+                    <Touchable onPress={this.handleShowVideo}>
+                      <IconSm name="video-off" />
+                    </Touchable>
+                  )}
                 </PlayControls>
               </LowerControl>
             </SafeAreaView>
diff --git a/apolloschurchapp/src/ui/MediaPlayer/FullscreenPlayer.js b/apolloschurchapp/src/ui/MediaPlayer/FullscreenPlayer.js
index feac512..3757398 100644
--- a/apolloschurchapp/src/ui/MediaPlayer/FullscreenPlayer.js
+++ b/apolloschurchapp/src/ui/MediaPlayer/FullscreenPlayer.js
@@ -10,7 +10,6 @@ import {
 import PropTypes from 'prop-types';
 import { Query, withApollo } from 'react-apollo';
 import { get } from 'lodash';
-import DeviceInfo from 'react-native-device-info';
 
 import styled from 'apolloschurchapp/src/ui/styled';
 
@@ -21,6 +20,7 @@ import MusicControls from './MusicControls';
 import { getFullVisibilityState } from './queries';
 import { exitFullscreen, goFullscreen } from './mutations';
 import { Provider, ControlsConsumer } from './PlayheadState';
+import MediaPlayerSafeLayout from './MediaPlayerSafeLayout';
 
 const VideoSizer = styled(
   ({ isFullscreen, isVideo, theme }) =>
@@ -28,15 +28,17 @@ const VideoSizer = styled(
       ? StyleSheet.absoluteFill
       : {
           height: MINI_PLAYER_HEIGHT,
-          borderTopLeftRadius: theme.sizing.borderRadius,
-          borderBottomLeftRadius: theme.sizing.borderRadius,
+          borderTopLeftRadius: theme.sizing.baseUnit / 2,
+          borderBottomLeftRadius: theme.sizing.baseUnit / 2,
           overflow: 'hidden',
           aspectRatio: isVideo ? 16 / 9 : 1,
         }
 )(View);
 
-const isPhoneX = DeviceInfo.getModel() === 'iPhone X';
-const BOTTOM_OFFSET = isPhoneX ? 25 : 10; // Some devices need more "spacing" at the bottom of the screen. This helps account for that
+const FullscreenMediaPlayerSafeLayout = styled(({ isFullscreen, theme }) => ({
+  ...StyleSheet.absoluteFillObject,
+  margin: isFullscreen ? 0 : theme.sizing.baseUnit,
+}))(MediaPlayerSafeLayout);
 
 /**
  * FullscreenPlayer is a animating media player that transitions between
@@ -168,11 +170,6 @@ class FullscreenPlayer extends PureComponent {
   renderCover = ({ data: { mediaPlayer = {} } = {} }) => {
     const { isFullscreen = false } = mediaPlayer;
 
-    const fullscreenStyles = {
-      margin: isFullscreen ? 0 : 10,
-      marginBottom: isFullscreen ? 0 : BOTTOM_OFFSET,
-    };
-
     Animated.spring(this.fullscreen, {
       toValue: isFullscreen ? 1 : 0,
       useNativeDriver: true,
@@ -216,8 +213,10 @@ class FullscreenPlayer extends PureComponent {
     }
 
     return (
-      <Animated.View style={[this.coverStyle, fullscreenStyles]}>
-        {coverFlow}
+      <Animated.View style={this.coverStyle}>
+        <FullscreenMediaPlayerSafeLayout isFullscreen={isFullscreen}>
+          {coverFlow}
+        </FullscreenMediaPlayerSafeLayout>
       </Animated.View>
     );
   };
@@ -233,4 +232,4 @@ class FullscreenPlayer extends PureComponent {
 
 const FullscreenPlayerWithData = withApollo(FullscreenPlayer);
 
-export { FullscreenPlayerWithData as default, BOTTOM_OFFSET };
+export { FullscreenPlayerWithData as default };
diff --git a/apolloschurchapp/src/ui/MediaPlayer/MediaPlayerSafeLayout.js b/apolloschurchapp/src/ui/MediaPlayer/MediaPlayerSafeLayout.js
new file mode 100644
index 0000000..a167251
--- /dev/null
+++ b/apolloschurchapp/src/ui/MediaPlayer/MediaPlayerSafeLayout.js
@@ -0,0 +1,21 @@
+import React from 'react';
+import { View } from 'react-native';
+
+import styled from '../styled';
+import { LayoutConsumer } from '../LayoutContext';
+
+const InnerView = styled(({ safeAreaInsets, isFullscreen = false, theme }) => ({
+  marginBottom: isFullscreen
+    ? 0
+    : Math.max(theme.sizing.baseUnit, safeAreaInsets.bottom * 0.75),
+}))(View);
+
+const MediaPlayerSafeLayout = (props) => (
+  <LayoutConsumer>
+    {({ safeAreaInsets }) => (
+      <InnerView safeAreaInsets={safeAreaInsets} {...props} />
+    )}
+  </LayoutConsumer>
+);
+
+export default MediaPlayerSafeLayout;
diff --git a/apolloschurchapp/src/ui/MediaPlayer/MediaPlayerSpacer.js b/apolloschurchapp/src/ui/MediaPlayer/MediaPlayerSpacer.js
new file mode 100644
index 0000000..17d7fd3
--- /dev/null
+++ b/apolloschurchapp/src/ui/MediaPlayer/MediaPlayerSpacer.js
@@ -0,0 +1,36 @@
+import React from 'react';
+import { SafeAreaView } from 'react-native';
+import { Query } from 'react-apollo';
+import gql from 'graphql-tag';
+import { get } from 'lodash';
+
+import styled from 'apolloschurchapp/src/ui/styled';
+import { MINI_PLAYER_HEIGHT } from 'apolloschurchapp/src/ui/MediaPlayer';
+
+import MediaPlayerSafeLayout from './MediaPlayerSafeLayout';
+
+const mediaPlayerIsVisibleQuery = gql`
+  query {
+    mediaPlayer @client {
+      isVisible
+    }
+  }
+`;
+
+const MediaPlayerSafeLayoutWithSpacing = styled({
+  paddingBottom: MINI_PLAYER_HEIGHT,
+})(MediaPlayerSafeLayout);
+
+const MediaPlayerSpacer = (props) => (
+  <Query query={mediaPlayerIsVisibleQuery}>
+    {({ data = {} }) =>
+      get(data, 'mediaPlayer.isVisible') ? (
+        <MediaPlayerSafeLayoutWithSpacing {...props} />
+      ) : (
+        <SafeAreaView {...props} />
+      )
+    }
+  </Query>
+);
+
+export default MediaPlayerSpacer;
diff --git a/apolloschurchapp/src/ui/MediaPlayer/MiniControls.js b/apolloschurchapp/src/ui/MediaPlayer/MiniControls.js
index e6a4662..5aad2c0 100644
--- a/apolloschurchapp/src/ui/MediaPlayer/MiniControls.js
+++ b/apolloschurchapp/src/ui/MediaPlayer/MiniControls.js
@@ -61,11 +61,11 @@ const Container = styled(({ theme }) => ({
   flexDirection: 'row',
   justifyContent: 'flex-start',
   overflow: 'hidden',
-  borderRadius: theme.sizing.borderRadius,
+  borderRadius: theme.sizing.baseUnit / 2,
 }))(View);
 
 const Shadow = styled(({ theme }) => ({
-  borderRadius: theme.sizing.borderRadius,
+  borderRadius: theme.sizing.baseUnit / 2,
   ...Platform.select(theme.shadows.default),
 }))(View);
 
diff --git a/apolloschurchapp/src/ui/MediaPlayer/Seeker/Timestamp.js b/apolloschurchapp/src/ui/MediaPlayer/Seeker/Timestamp.js
index 8b6de0b..7603319 100644
--- a/apolloschurchapp/src/ui/MediaPlayer/Seeker/Timestamp.js
+++ b/apolloschurchapp/src/ui/MediaPlayer/Seeker/Timestamp.js
@@ -5,10 +5,8 @@ import PropTypes from 'prop-types';
 import { H6 } from 'apolloschurchapp/src/ui/typography';
 import styled from 'apolloschurchapp/src/ui/styled';
 
-const TIME_TEXT_WIDTH = 50;
-
 const TimeText = styled({
-  width: TIME_TEXT_WIDTH,
+  width: 50,
   textAlign: 'center',
   alignItems: 'center',
 })(H6);
@@ -95,4 +93,4 @@ class Timestamp extends PureComponent {
   }
 }
 
-export { Timestamp as default, TIME_TEXT_WIDTH };
+export default Timestamp;
diff --git a/apolloschurchapp/src/ui/MediaPlayer/Seeker/index.js b/apolloschurchapp/src/ui/MediaPlayer/Seeker/index.js
index 3aa9674..b84b2e5 100644
--- a/apolloschurchapp/src/ui/MediaPlayer/Seeker/index.js
+++ b/apolloschurchapp/src/ui/MediaPlayer/Seeker/index.js
@@ -3,9 +3,10 @@ import { PanResponder, Animated, View, StyleSheet } from 'react-native';
 import PropTypes from 'prop-types';
 
 import styled from 'apolloschurchapp/src/ui/styled';
+import { withTheme } from 'apolloschurchapp/src/ui/theme';
 
 import { PlayheadConsumer, ControlsConsumer } from '../PlayheadState';
-import Timestamp, { TIME_TEXT_WIDTH } from './Timestamp';
+import Timestamp from './Timestamp';
 
 const Container = styled({
   width: '100%',
@@ -14,43 +15,36 @@ const Container = styled({
   alignItems: 'center',
 })(View);
 
-const Track = styled(({ theme, minimal }) => ({
+const TrackContainer = styled(({ minimal, knobSize }) => ({
+  height: knobSize / 2,
+  flexGrow: 1,
+  justifyContent: 'center',
+  paddingTop: minimal ? 20 : knobSize / 2,
+  paddingBottom: minimal ? 0 : knobSize / 2,
+}))(View);
+
+const Track = styled(({ theme, minimal, knobSize }) => ({
+  height: knobSize / 2,
+  overflow: 'hidden',
+  borderRadius: minimal ? 0 : knobSize / 2,
   backgroundColor: minimal
     ? theme.colors.transparent
     : theme.colors.darkSecondary,
-  borderRadius: minimal ? 0 : theme.sizing.borderRadius,
-  overflow: 'hidden',
-  position: 'absolute',
-  left: 0,
-  right: 0,
-  top: 0,
-  bottom: 0,
-}))(View);
-
-const TrackContainer = styled(({ theme, minimal }) => ({
-  position: 'absolute',
-  left: minimal ? 0 : TIME_TEXT_WIDTH,
-  right: minimal ? 0 : TIME_TEXT_WIDTH,
-  height: theme.sizing.borderRadius,
 }))(View);
 
-const Knob = styled(({ theme, minimal }) => {
-  const size = minimal ? 0 : theme.sizing.borderRadius * 2;
-  return {
-    backgroundColor: theme.colors.text.primary,
-    borderRadius: size,
-    position: 'absolute',
-    top: -(size / 2) + theme.sizing.borderRadius / 2,
-    right: -(size / 2),
-    height: size,
-    width: size,
-    elevation: 2,
-  };
-})(View);
-
 const ProgressBar = styled(({ theme }) => ({
+  height: theme.sizing.baseUnit,
   backgroundColor: theme.colors.secondary,
-  ...StyleSheet.absoluteFillObject,
+}))(View);
+
+const Knob = styled(({ theme, knobSize }) => ({
+  height: knobSize,
+  width: knobSize,
+  position: 'absolute',
+  right: 0,
+  elevation: 2,
+  borderRadius: knobSize,
+  backgroundColor: theme.colors.text.primary,
 }))(View);
 
 /**
@@ -65,12 +59,15 @@ class Seeker extends PureComponent {
     duration: PropTypes.any, // eslint-disable-line
     style: PropTypes.any, // eslint-disable-line
     onScrubbing: PropTypes.func,
+    knobSize: PropTypes.number, // defaults to theme.sizing.baseUnit / 1.5  (12px)
   };
 
+  isSeeking = false;
+
+  timeAtSeekingStart = 0;
+
   state = {
     width: 0, // the width of the seeker bar
-    isSeeking: false,
-    timeAtSeekingStart: 0,
   };
 
   offsetDriver = new Animated.Value(0); // Used to track pixel offset when seeking
@@ -82,17 +79,14 @@ class Seeker extends PureComponent {
     onPanResponderGrant: () => {
       // Using `stopAnimation` only to get the currentTime value
       this.props.currentTime.stopAnimation((value) => {
-        this.setState({
-          isSeeking: true,
-          timeAtSeekingStart: value,
-        });
+        this.isSeeking = true;
+        this.timeAtSeekingStart = value;
       });
     },
     onPanResponderMove: (e, { dx }) => {
       // Calculate the pixel offset and apply it to the offsetDriver
       let offset = dx;
-      const progressAtStart =
-        this.state.timeAtSeekingStart / this.props.duration;
+      const progressAtStart = this.timeAtSeekingStart / this.props.duration;
       const positionAtStart = progressAtStart * this.state.width;
       offset = Math.min(this.state.width - positionAtStart, offset);
       offset = Math.max(-positionAtStart, offset);
@@ -114,10 +108,8 @@ class Seeker extends PureComponent {
       // Reset state
       this.offsetDriver.setValue(0);
       this.offsetTimeDriver.setValue(0);
-      this.setState({
-        isSeeking: false,
-        timeAtSeekingStart: 0,
-      });
+      this.isSeeking = false;
+      this.timeAtSeekingStart = 0;
 
       if (this.props.onScrubbing)
         this.props.onScrubbing({ isScrubbing: false });
@@ -128,9 +120,7 @@ class Seeker extends PureComponent {
   // To be able to useNativeDriver, the trackbar is always the full-width, and we animate its X position
   get trackBarOffset() {
     const progress = Animated.divide(
-      this.state.isSeeking
-        ? this.state.timeAtSeekingStart
-        : this.props.currentTime,
+      this.isSeeking ? this.timeAtSeekingStart : this.props.currentTime,
       this.props.duration
     );
 
@@ -142,16 +132,6 @@ class Seeker extends PureComponent {
 
   // the "knob" is on top of the trackbar, the piece of UI you can grab and move around
   get knobStyles() {
-    return [
-      StyleSheet.absoluteFill,
-      {
-        overflow: 'visible',
-        transform: [{ translateX: this.trackBarOffset }],
-      },
-    ];
-  }
-
-  get progressBarStyles() {
     return [
       StyleSheet.absoluteFill,
       {
@@ -164,9 +144,14 @@ class Seeker extends PureComponent {
     nativeEvent: {
       layout: { width },
     },
-  }) => {
-    this.setState({ width });
-  };
+  }) =>
+    this.setState({
+      /*
+       * Adjust offset width to adjust for knobSize so Knob always appears on the track. Knob is
+       * hidden when in a minimal state (miniplayer) we only make this adjustment when necessary.
+       */
+      width: this.props.minimal ? width : width - this.props.knobSize,
+    });
 
   renderProgress = () => (
     <Animated.View
@@ -190,15 +175,24 @@ class Seeker extends PureComponent {
             offset={this.offsetTimeDriver}
           />
         ) : null}
-        <TrackContainer minimal={this.props.minimal}>
-          <Track onLayout={this.handleOnLayout} minimal={this.props.minimal}>
+        <TrackContainer
+          minimal={this.props.minimal}
+          knobSize={this.props.knobSize}
+        >
+          <Track
+            onLayout={this.handleOnLayout}
+            minimal={this.props.minimal}
+            knobSize={this.props.knobSize}
+          >
             {this.renderProgress()}
           </Track>
           <Animated.View style={this.knobStyles}>
-            <Knob
-              minimal={this.props.minimal}
-              {...this.panResponder.panHandlers}
-            />
+            {!this.props.minimal ? (
+              <Knob
+                knobSize={this.props.knobSize}
+                {...this.panResponder.panHandlers}
+              />
+            ) : null}
           </Animated.View>
         </TrackContainer>
         {!this.props.minimal ? <Timestamp time={this.props.duration} /> : null}
@@ -207,7 +201,9 @@ class Seeker extends PureComponent {
   }
 }
 
-const SeekerWithState = (props) => (
+const SeekerWithState = withTheme(({ theme: { sizing: { baseUnit } } }) => ({
+  knobSize: Math.floor(baseUnit / 1.33),
+}))((props) => (
   <ControlsConsumer>
     {(controls) => (
       <PlayheadConsumer>
@@ -215,6 +211,6 @@ const SeekerWithState = (props) => (
       </PlayheadConsumer>
     )}
   </ControlsConsumer>
-);
+));
 
 export default SeekerWithState;
diff --git a/apolloschurchapp/src/ui/MediaPlayer/VideoWindow.js b/apolloschurchapp/src/ui/MediaPlayer/VideoWindow.js
index b93ccb1..3a74c25 100644
--- a/apolloschurchapp/src/ui/MediaPlayer/VideoWindow.js
+++ b/apolloschurchapp/src/ui/MediaPlayer/VideoWindow.js
@@ -91,7 +91,7 @@ class VideoWindow extends PureComponent {
         ref={this.setVideoRef}
         source={mediaPlayer.currentTrack.mediaSource}
         paused={!mediaPlayer.isPlaying}
-        audioOnly={!mediaPlayer.currentTrack.isVideo}
+        audioOnly={!mediaPlayer.showVideo}
         ignoreSilentSwitch={'ignore'}
         allowsExternalPlayback
         playInBackground
@@ -104,6 +104,7 @@ class VideoWindow extends PureComponent {
         onLoad={this.handleOnLoad}
         onProgress={this.handleOnProgress}
         style={StyleSheet.absoluteFill}
+        volume={mediaPlayer.muted ? 0 : 1}
         repeat
         key="video"
       />,
@@ -113,7 +114,7 @@ class VideoWindow extends PureComponent {
         key="poster"
         style={[
           styles.animatedPosterImage,
-          mediaPlayer.currentTrack.isVideo ? this.loadingStyle : {},
+          mediaPlayer.showVideo ? this.loadingStyle : {},
         ]}
         source={mediaPlayer.currentTrack.posterSources}
       />,
diff --git a/apolloschurchapp/src/ui/MediaPlayer/index.js b/apolloschurchapp/src/ui/MediaPlayer/index.js
index 8b6b8a6..2264866 100644
--- a/apolloschurchapp/src/ui/MediaPlayer/index.js
+++ b/apolloschurchapp/src/ui/MediaPlayer/index.js
@@ -6,6 +6,7 @@ import FullscreenPlayer from './FullscreenPlayer';
 import { getMediaPlayerVisibility } from './queries';
 
 export { MINI_PLAYER_HEIGHT } from './MiniControls';
+export MediaPlayerSpacer from './MediaPlayerSpacer';
 
 /**
  * Selectively renders FullscreenPlayer component is MediaPlayer is visible
diff --git a/apolloschurchapp/src/ui/MediaPlayer/mutations.js b/apolloschurchapp/src/ui/MediaPlayer/mutations.js
index 95a0ae8..3eb3b2d 100644
--- a/apolloschurchapp/src/ui/MediaPlayer/mutations.js
+++ b/apolloschurchapp/src/ui/MediaPlayer/mutations.js
@@ -55,6 +55,30 @@ const exitFullscreen = gql`
   }
 `;
 
+const mute = gql`
+  mutation {
+    mediaPlayerUpdateState(muted: true) @client
+  }
+`;
+
+const unmute = gql`
+  mutation {
+    mediaPlayerUpdateState(muted: false) @client
+  }
+`;
+
+const showVideo = gql`
+  mutation {
+    mediaPlayerUpdateState(showVideo: true) @client
+  }
+`;
+
+const hideVideo = gql`
+  mutation {
+    mediaPlayerUpdateState(showVideo: false) @client
+  }
+`;
+
 const updatePlayhead = gql`
   mutation mediaPlayerSetPlayhead($currentTime: Float) {
     mediaPlayerSetPlayhead(currentTime: $currentTime) @client
@@ -70,4 +94,8 @@ export {
   dismiss,
   exitFullscreen,
   updatePlayhead,
+  mute,
+  unmute,
+  showVideo,
+  hideVideo,
 };
diff --git a/apolloschurchapp/src/ui/MediaPlayer/queries.js b/apolloschurchapp/src/ui/MediaPlayer/queries.js
index 83290f5..b56957a 100644
--- a/apolloschurchapp/src/ui/MediaPlayer/queries.js
+++ b/apolloschurchapp/src/ui/MediaPlayer/queries.js
@@ -39,6 +39,8 @@ const getControlState = gql`
         artist
         isVideo
       }
+      showVideo
+      muted
     }
   }
 `;
@@ -58,6 +60,8 @@ const getVideoState = gql`
       }
       currentTime
       isPlaying
+      showVideo
+      muted
     }
   }
 `;
diff --git a/apolloschurchapp/src/ui/ModalView/index.js b/apolloschurchapp/src/ui/ModalView/index.js
new file mode 100644
index 0000000..4f75c15
--- /dev/null
+++ b/apolloschurchapp/src/ui/ModalView/index.js
@@ -0,0 +1,56 @@
+import React from 'react';
+import { StatusBar, TouchableOpacity, View } from 'react-native';
+import { withNavigation } from 'react-navigation';
+import BackgroundView from 'apolloschurchapp/src/ui/BackgroundView';
+import styled from 'apolloschurchapp/src/ui/styled';
+import Icon from 'apolloschurchapp/src/ui/Icon';
+import { withTheme } from 'apolloschurchapp/src/ui/theme';
+
+const CloseIcon = withTheme(({ theme }) => ({
+  name: 'close',
+  fill: theme.colors.text.tertiary,
+  size: theme.sizing.baseUnit,
+}))(Icon);
+
+const IconTouchable = styled(({ theme }) => ({
+  position: 'absolute',
+  top: theme.sizing.baseUnit * 1.5,
+  right: theme.sizing.baseUnit * 1.5,
+  width: theme.sizing.baseUnit * 1.75,
+  height: theme.sizing.baseUnit * 1.75,
+  borderRadius: theme.sizing.baseUnit * 1.75,
+  alignItems: 'center',
+  justifyContent: 'center',
+  overflow: 'hidden',
+  backgroundColor: theme.colors.text.primary,
+  opacity: 0.9,
+}))(TouchableOpacity);
+
+const Container = styled({
+  flex: null,
+  width: '100%',
+  height: '100%',
+  borderRadius: 0,
+})(BackgroundView);
+
+const Handle = styled({
+  // helps in swipe-to-close gesture
+  position: 'absolute',
+  top: 0,
+  left: 0,
+  right: 0,
+  height: 75,
+})(View);
+
+const ModalView = ({ navigation, onBack, children, ...props }) => (
+  <Container {...props}>
+    <StatusBar hidden />
+    {children}
+    <Handle />
+    <IconTouchable onPress={() => (onBack ? onBack() : navigation.pop())}>
+      <CloseIcon />
+    </IconTouchable>
+  </Container>
+);
+
+export default withNavigation(ModalView);
diff --git a/apolloschurchapp/src/ui/Placeholder/Line.js b/apolloschurchapp/src/ui/Placeholder/Line.js
index 340dabb..2e14d92 100644
--- a/apolloschurchapp/src/ui/Placeholder/Line.js
+++ b/apolloschurchapp/src/ui/Placeholder/Line.js
@@ -6,7 +6,7 @@ import styled from 'apolloschurchapp/src/ui/styled';
 
 export const Line = styled(
   ({ theme, width = '100%' }) => ({
-    borderRadius: theme.sizing.borderRadius,
+    borderRadius: theme.sizing.baseUnit,
     backgroundColor: theme.colors.background.inactive,
     height: theme.helpers.rem(1),
     width,
diff --git a/apolloschurchapp/src/ui/Placeholder/Media.js b/apolloschurchapp/src/ui/Placeholder/Media.js
index a702cd3..62c8abb 100644
--- a/apolloschurchapp/src/ui/Placeholder/Media.js
+++ b/apolloschurchapp/src/ui/Placeholder/Media.js
@@ -8,7 +8,7 @@ export const Media = styled(
   ({ borderRadius, theme, size = '100%' }) => ({
     height: size,
     width: size,
-    borderRadius: borderRadius || theme.sizing.borderRadius,
+    borderRadius: borderRadius || theme.sizing.baseUnit,
     backgroundColor: theme.colors.background.inactive,
   }),
   'Placeholder.Media'
diff --git a/apolloschurchapp/src/ui/Scripture/Item.js b/apolloschurchapp/src/ui/Scripture/Item.js
deleted file mode 100644
index 2d7a8ed..0000000
--- a/apolloschurchapp/src/ui/Scripture/Item.js
+++ /dev/null
@@ -1,32 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-import { View } from 'react-native';
-import Placeholder from 'rn-placeholder';
-
-import { H4, H6 } from 'apolloschurchapp/src/ui/typography';
-
-import ScriptureHTMLView from './ScriptureHTMLView';
-
-const Item = ({ reference, html, isLoading }) => (
-  <View>
-    <H4>
-      <H4>{reference}</H4> <H6>WEB</H6>
-    </H4>
-    <Placeholder.Paragraph
-      lineNumber={5}
-      onReady={!isLoading}
-      lastLineWidth="60%"
-      firstLineWidth="40%"
-    >
-      <ScriptureHTMLView>{html}</ScriptureHTMLView>
-    </Placeholder.Paragraph>
-  </View>
-);
-
-Item.propTypes = {
-  reference: PropTypes.string,
-  html: PropTypes.string,
-  isLoading: PropTypes.bool,
-};
-
-export default Item;
diff --git a/apolloschurchapp/src/ui/Scripture/Scripture.stories.js b/apolloschurchapp/src/ui/Scripture/Scripture.stories.js
deleted file mode 100644
index 2d985ee..0000000
--- a/apolloschurchapp/src/ui/Scripture/Scripture.stories.js
+++ /dev/null
@@ -1,108 +0,0 @@
-import React from 'react';
-import { ScrollView } from 'react-native';
-import { storiesOf } from '@storybook/react-native';
-import PaddedView from 'apolloschurchapp/src/ui/PaddedView';
-
-import Item from './Item';
-
-const genesis1 = {
-  scripture: {
-    reference: 'Genesis 1:1-5',
-    html:
-      '<p class="p"><span data-number="1" class="v">1</span>In the beginning, God created the heavens and the earth. <span data-number="2" class="v">2</span>The earth was formless and empty. Darkness was on the surface of the deep and God’s Spirit was hovering over the surface of the waters.</p><p class="p"><span data-number="3" class="v">3</span>God said, “Let there be light,” and there was light. <span data-number="4" class="v">4</span>God saw the light, and saw that it was good. God divided the light from the darkness. <span data-number="5" class="v">5</span>God called the light “day”, and the darkness he called “night”. There was evening and there was morning, the first day.</p>',
-  },
-};
-
-const psalm23 = {
-  scripture: {
-    reference: 'Psalm 23',
-    html:
-      '<p class="d">A Psalm by David.</p><p class="q1"><span data-number="1" class="v">1</span>Yahweh is my shepherd:</p><p class="q2">I shall lack nothing.</p><p class="q1"><span data-number="2" class="v">2</span>He makes me lie down in green pastures.</p><p class="q2">He leads me beside still waters.</p><p class="q1"><span data-number="3" class="v">3</span>He restores my soul.</p><p class="q2">He guides me in the paths of righteousness for his name’s sake.</p><p class="q1"><span data-number="4" class="v">4</span>Even though I walk through the valley of the shadow of death,</p><p class="q2">I will fear no evil, for you are with me.</p><p class="q1">Your rod and your staff,</p><p class="q2">they comfort me.</p><p class="q1"><span data-number="5" class="v">5</span>You prepare a table before me</p><p class="q2">in the presence of my enemies.</p><p class="q1">You anoint my head with oil.</p><p class="q2">My cup runs over.</p><p class="q1"><span data-number="6" class="v">6</span>Surely goodness and loving kindness shall follow me all the days of my life,</p><p class="q2">and I will dwell in Yahweh’s house forever.</p>',
-  },
-};
-
-const songOfSolomon1 = {
-  scripture: {
-    reference: 'Song of Solomon 1:1-4',
-    html:
-      '<p class="p"><span data-number="1" class="v">1</span>The Song of songs, which is Solomon’s.</p><p class="sp">Beloved</p><p class="q1"><span data-number="2" class="v">2</span>Let him kiss me with the kisses of his mouth;</p><p class="q2">for your love is better than wine.</p><p class="q1"><span data-number="3" class="v">3</span>Your oils have a pleasing fragrance.</p><p class="q2">Your name is oil poured out,</p><p class="q2">therefore the virgins love you.</p><p class="q1"><span data-number="4" class="v">4</span>Take me away with you.</p><p class="q2">Let’s hurry.</p><p class="q2">The king has brought me into his rooms.</p><p class="sp">Friends</p><p class="q1">We will be glad and rejoice in you.</p><p class="q2">We will praise your love more than wine!</p><p class="sp">Beloved</p><p class="q1">They are right to love you.</p>',
-  },
-};
-
-const john3 = {
-  scripture: {
-    reference: 'John 3:16-17',
-    html:
-      '<p class="p"><span data-number="16" class="v">16</span><span class="wj">For God so loved the world, that he gave his one and only Son, that whoever believes in him should not perish, but have eternal life. </span><span data-number="17" class="v">17</span><span class="wj">For God didn’t send his Son into the world to judge the world, but that the world should be saved through him. </span></p>',
-  },
-};
-
-const revelation22 = {
-  scripture: {
-    reference: 'Revelation 22:20-21',
-    html:
-      '<p class="p"><span data-number="20" class="v">20</span>He who testifies these things says, <span class="wj">“Yes, I come quickly.” </span></p><p class="p">Amen! Yes, come, Lord Jesus.</p><p class="p"><span data-number="21" class="v">21</span>The grace of the Lord Jesus Christ be with all the saints. Amen.</p>',
-  },
-};
-
-const stories = storiesOf('Scripture', module);
-
-stories.add('Genesis 1:1-5', () => (
-  <ScrollView>
-    <PaddedView>
-      <Item
-        reference={genesis1.scripture.reference}
-        html={genesis1.scripture.html}
-        isLoading={false}
-      />
-    </PaddedView>
-  </ScrollView>
-));
-
-stories.add('Psalm 23', () => (
-  <ScrollView>
-    <PaddedView>
-      <Item
-        reference={psalm23.scripture.reference}
-        html={psalm23.scripture.html}
-        isLoading={false}
-      />
-    </PaddedView>
-  </ScrollView>
-));
-
-stories.add('Song of Solomon 1:1-4', () => (
-  <ScrollView>
-    <PaddedView>
-      <Item
-        reference={songOfSolomon1.scripture.reference}
-        html={songOfSolomon1.scripture.html}
-        isLoading={false}
-      />
-    </PaddedView>
-  </ScrollView>
-));
-
-stories.add('John 3:16-17', () => (
-  <ScrollView>
-    <PaddedView>
-      <Item
-        reference={john3.scripture.reference}
-        html={john3.scripture.html}
-        isLoading={false}
-      />
-    </PaddedView>
-  </ScrollView>
-));
-
-stories.add('Revelation 22:20-21', () => (
-  <ScrollView>
-    <PaddedView>
-      <Item
-        reference={revelation22.scripture.reference}
-        html={revelation22.scripture.html}
-        isLoading={false}
-      />
-    </PaddedView>
-  </ScrollView>
-));
diff --git a/apolloschurchapp/src/ui/Scripture/Scripture.tests.js b/apolloschurchapp/src/ui/Scripture/Scripture.tests.js
deleted file mode 100644
index 080c38e..0000000
--- a/apolloschurchapp/src/ui/Scripture/Scripture.tests.js
+++ /dev/null
@@ -1,40 +0,0 @@
-import React from 'react';
-import renderer from 'react-test-renderer';
-
-import Providers from 'apolloschurchapp/src/Providers';
-import Item from './Item';
-
-const songOfSolomon1 = {
-  reference: 'Song of Solomon 1:1-4',
-  html:
-    '<p class="p"><span data-number="1" class="v">1</span>The Song of songs, which is Solomon’s.</p><p class="sp">Beloved</p><p class="q1"><span data-number="2" class="v">2</span>Let him kiss me with the kisses of his mouth;</p><p class="q2">for your love is better than wine.</p><p class="q1"><span data-number="3" class="v">3</span>Your oils have a pleasing fragrance.</p><p class="q2">Your name is oil poured out,</p><p class="q2">therefore the virgins love you.</p><p class="q1"><span data-number="4" class="v">4</span>Take me away with you.</p><p class="q2">Let’s hurry.</p><p class="q2">The king has brought me into his rooms.</p><p class="sp">Friends</p><p class="q1">We will be glad and rejoice in you.</p><p class="q2">We will praise your love more than wine!</p><p class="sp">Beloved</p><p class="q1">They are right to love you.</p>',
-};
-
-const john3 = {
-  reference: 'John 3:16-17',
-  html:
-    '<p class="p"><span data-number="16" class="v">16</span><span class="wj">For God so loved the world, that he gave his one and only Son, that whoever believes in him should not perish, but have eternal life. </span><span data-number="17" class="v">17</span><span class="wj">For God didn’t send his Son into the world to judge the world, but that the world should be saved through him. </span></p>',
-};
-
-describe('the ScriptureItem component', () => {
-  it('renders Song of Solomon 1:1-4', () => {
-    const tree = renderer.create(
-      <Providers>
-        <Item
-          reference={songOfSolomon1.reference}
-          html={songOfSolomon1.html}
-          isLoading={false}
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('renders John 3:16-17', () => {
-    const tree = renderer.create(
-      <Providers>
-        <Item reference={john3.reference} html={john3.html} isLoading={false} />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/ui/Scripture/ScriptureHTMLView.js b/apolloschurchapp/src/ui/Scripture/ScriptureHTMLView.js
index 9cb7462..9d78c86 100644
--- a/apolloschurchapp/src/ui/Scripture/ScriptureHTMLView.js
+++ b/apolloschurchapp/src/ui/Scripture/ScriptureHTMLView.js
@@ -1,55 +1,100 @@
 import React from 'react';
 import { withProps } from 'recompose';
-import { Text } from 'react-native';
+import { Platform } from 'react-native';
 
+import Paragraph from 'apolloschurchapp/src/ui/typography/Paragraph';
+import { H4 } from 'apolloschurchapp/src/ui/typography';
 import HTMLView from 'apolloschurchapp/src/ui/HTMLView';
 import defaultRenderer, {
   wrapTextChildren,
 } from 'apolloschurchapp/src/ui/HTMLView/defaultRenderer';
-import Paragraph from 'apolloschurchapp/src/ui/typography/Paragraph';
-import { H4, H6, BodyText } from 'apolloschurchapp/src/ui/typography';
-import styled from 'apolloschurchapp/src/ui/styled';
-
-const RedLetters = styled(({ theme }) => ({
-  color: theme.colors.wordOfChrist,
-}))(Text);
-
-const NumText = styled(({ theme }) => ({
-  color: theme.colors.text.tertiary,
-  lineHeight: theme.helpers.verticalRhythm(1, 1.625),
-}))(H6);
 
-const HeavyText = styled(({ theme }) => ({
-  lineHeight: theme.helpers.verticalRhythm(2),
-}))(H4);
+import {
+  ScriptureText,
+  VerseNumber,
+  RedLetters,
+  PoeticPause,
+} from './typography';
 
 const renderer = (node, { children, ...other }) => {
   // the defaultRenderer support several basic elements out of the box,
   // this function only needs to handle the cases that are unique to scripture.
   const className = (node && node.attribs && node.attribs.class) || '';
 
+  /* Verse numbers
+   * https://github.com/americanbible/api-bible-assets/blob/master/scss/eb-scripture-style/modules/_chapters-verses.scss#L33
+   */
   if (className.includes('v')) {
-    /* TODO: a single space lives here to temporarily space verse numbers when they are not at the
-     * beginning of a sentence or paragraph. It affects all instences (albeit less noticably in
-     * somecases) so a more procise fix in the future is prefered.
+    /* TODO: a single space before and importantly a non-breaking space (`\u00A0`) after wraps the number to
+     * temporarily space verse numbers when they are not at the beginning of a sentence or
+     * paragraph. It affects all instences (albeit less noticably in some cases) so a more procise
+     * fix in the future is prefered.
      */
-    return <NumText> {children} </NumText>;
+    return (
+      <VerseNumber>
+        {' '}
+        {children}
+        {`\u00A0`}
+      </VerseNumber>
+    );
   }
 
+  /* Speaker identification and descriptive titles ("Hebrew subtitle")
+   * https://github.com/americanbible/api-bible-assets/blob/master/scss/eb-scripture-style/modules/_titles-headings.scss#L109-L126
+   */
   if (className.includes('sp') || className.includes('d')) {
-    return <HeavyText>{children}</HeavyText>;
+    return <H4 padded>{children}</H4>;
   }
 
+  /* Indented poetic line These are sometimes seen as a quote of the OT in the NT as well.
+   * This uses spaces as a less ideal fix because we are bound by the limits of rendering HTML.
+   * https://github.com/americanbible/api-bible-assets/blob/master/scss/eb-scripture-style/modules/_poetry.scss#L2
+   */
   if (className.includes('q1')) {
-    return <BodyText>{children}</BodyText>;
+    return (
+      <ScriptureText>
+        {'     '}
+        {children}
+      </ScriptureText>
+    );
   }
 
+  /* Double indented poetic lines. These are sometimes seen as a quote of the OT in the NT as well.
+   * This uses spaces as a less ideal fix because we are bound by the limits of rendering HTML.
+   * https://github.com/americanbible/api-bible-assets/blob/master/scss/eb-scripture-style/modules/_poetry.scss#L7
+   */
   if (className.includes('q2')) {
     return (
-      <BodyText>
-        {'     '}
+      <ScriptureText>
+        {'          '}
         {children}
-      </BodyText>
+      </ScriptureText>
+    );
+  }
+
+  /* Triple indented poetic lines. These are sometimes seen as a quote of the OT in the NT as well.
+   * This uses spaces as a less ideal fix because we are bound by the limits of rendering HTML.
+   * https://github.com/americanbible/api-bible-assets/blob/master/scss/eb-scripture-style/modules/_poetry.scss#L8
+   */
+  if (className.includes('q3')) {
+    return (
+      <ScriptureText>
+        {'               '}
+        {children}
+      </ScriptureText>
+    );
+  }
+
+  /* Quadruple indented poetic lines. These are sometimes seen as a quote of the OT in the NT as well.
+   * This uses spaces as a less ideal fix because we are bound by the limits of rendering HTML.
+   * https://github.com/americanbible/api-bible-assets/blob/master/scss/eb-scripture-style/modules/_poetry.scss#L9
+   */
+  if (className.includes('q4')) {
+    return (
+      <ScriptureText>
+        {'                    '}
+        {children}
+      </ScriptureText>
     );
   }
 
@@ -57,10 +102,29 @@ const renderer = (node, { children, ...other }) => {
     return <RedLetters>{children}</RedLetters>;
   }
 
+  /* Poetic pause ("Selah"). Highly conditional rendering due to Android not supporting nested text
+   * alignment (https://github.com/facebook/react-native/issues/18790) and needing to keep it
+   * somewhat attractive. TODO: revisit conditional code when issue is resolved or if we refactor
+   * the parser
+   *
+   * https://github.com/americanbible/api-bible-assets/blob/master/scss/eb-scripture-style/modules/_poetry.scss#L22
+   */
+  if (className.includes('qs')) {
+    return (
+      <PoeticPause>
+        {Platform.OS === 'ios' ? `\n` : null}
+        {children}
+        {Platform.OS === 'ios' ? `\n` : `\n\n`}
+      </PoeticPause>
+    );
+  }
+
   if (node.name === 'p') {
     return (
       <Paragraph>
-        <BodyText>{wrapTextChildren(children)}</BodyText>
+        <ScriptureText>
+          {wrapTextChildren(children, ScriptureText)}
+        </ScriptureText>
       </Paragraph>
     );
   }
diff --git a/apolloschurchapp/src/ui/Scripture/ScriptureItem.js b/apolloschurchapp/src/ui/Scripture/ScriptureItem.js
new file mode 100644
index 0000000..8bb0643
--- /dev/null
+++ b/apolloschurchapp/src/ui/Scripture/ScriptureItem.js
@@ -0,0 +1,35 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import { View } from 'react-native';
+
+import Placeholder from 'apolloschurchapp/src/ui/Placeholder';
+import { H4, H6 } from 'apolloschurchapp/src/ui/typography';
+
+import { LegalText } from './typography';
+import ScriptureHTMLView from './ScriptureHTMLView';
+
+const ScriptureItem = ({ reference, html, copyright, isLoading }) => (
+  <Placeholder.Paragraph
+    lineNumber={5}
+    onReady={!isLoading}
+    lastLineWidth="60%"
+    firstLineWidth="40%"
+  >
+    <View>
+      <H4>
+        <H4>{reference}</H4> <H6>WEB</H6>
+      </H4>
+      <ScriptureHTMLView>{html}</ScriptureHTMLView>
+      <LegalText>{copyright === 'PUBLIC DOMAIN' ? '' : copyright}</LegalText>
+    </View>
+  </Placeholder.Paragraph>
+);
+
+ScriptureItem.propTypes = {
+  reference: PropTypes.string,
+  html: PropTypes.string,
+  copyright: PropTypes.string,
+  isLoading: PropTypes.bool,
+};
+
+export default ScriptureItem;
diff --git a/apolloschurchapp/src/ui/Scripture/ScriptureItem.stories.js b/apolloschurchapp/src/ui/Scripture/ScriptureItem.stories.js
new file mode 100644
index 0000000..338514f
--- /dev/null
+++ b/apolloschurchapp/src/ui/Scripture/ScriptureItem.stories.js
@@ -0,0 +1,210 @@
+import React from 'react';
+import { ScrollView } from 'react-native';
+import { storiesOf } from '@storybook/react-native';
+import PaddedView from 'apolloschurchapp/src/ui/PaddedView';
+
+import ScriptureItem from './ScriptureItem';
+
+const genesis1 = {
+  scripture: {
+    reference: 'Genesis 1:1-5',
+    html:
+      '<p class="p"><span data-number="1" class="v">1</span>In the beginning, God created the heavens and the earth. <span data-number="2" class="v">2</span>The earth was formless and empty. Darkness was on the surface of the deep and God’s Spirit was hovering over the surface of the waters.</p><p class="p"><span data-number="3" class="v">3</span>God said, “Let there be light,” and there was light. <span data-number="4" class="v">4</span>God saw the light, and saw that it was good. God divided the light from the darkness. <span data-number="5" class="v">5</span>God called the light “day”, and the darkness he called “night”. There was evening and there was morning, the first day.</p>',
+    isLoading: false,
+    copyright: 'PUBLIC DOMAIN',
+  },
+};
+
+const john1 = {
+  scripture: {
+    reference: 'John 1:1',
+    html:
+      '<p class="p"><span data-number="1" class="v">1</span>In the beginning was the Word, and the Word was with God, and the Word was God. </p>',
+    isLoading: false,
+    copyright:
+      'PUBLIC DOMAIN except in the United Kingdom, where a Crown Copyright applies to printing the KJV. See http://www.cambridge.org/about-us/who-we-are/queens-printers-patent',
+  },
+};
+
+const psalm23 = {
+  scripture: {
+    reference: 'Psalm 23',
+    html:
+      '<p class="d">A Psalm by David.</p><p class="q1"><span data-number="1" class="v">1</span>Yahweh is my shepherd:</p><p class="q2">I shall lack nothing.</p><p class="q1"><span data-number="2" class="v">2</span>He makes me lie down in green pastures.</p><p class="q2">He leads me beside still waters.</p><p class="q1"><span data-number="3" class="v">3</span>He restores my soul.</p><p class="q2">He guides me in the paths of righteousness for his name’s sake.</p><p class="q1"><span data-number="4" class="v">4</span>Even though I walk through the valley of the shadow of death,</p><p class="q2">I will fear no evil, for you are with me.</p><p class="q1">Your rod and your staff,</p><p class="q2">they comfort me.</p><p class="q1"><span data-number="5" class="v">5</span>You prepare a table before me</p><p class="q2">in the presence of my enemies.</p><p class="q1">You anoint my head with oil.</p><p class="q2">My cup runs over.</p><p class="q1"><span data-number="6" class="v">6</span>Surely goodness and loving kindness shall follow me all the days of my life,</p><p class="q2">and I will dwell in Yahweh’s house forever.</p>',
+    isLoading: false,
+  },
+};
+
+const psalm32 = {
+  scripture: {
+    reference: 'Psalm 32',
+    html:
+      '<p class="d">By David. A contemplative psalm.</p><p class="q1"><span data-number="1" class="v">1</span>Blessed is he whose disobedience is forgiven,</p><p class="q2">whose sin is covered.</p><p class="q1"><span data-number="2" class="v">2</span>Blessed is the man to whom Yahweh doesn’t impute iniquity,</p><p class="q2">in whose spirit there is no deceit.</p><p class="q1"><span data-number="3" class="v">3</span>When I kept silence, my bones wasted away through my groaning all day long.</p><p class="q1"><span data-number="4" class="v">4</span>For day and night your hand was heavy on me.</p><p class="q2">My strength was sapped in the heat of summer. <span class="qs">Selah.</span></p><p class="q1"><span data-number="5" class="v">5</span>I acknowledged my sin to you.</p><p class="q2">I didn’t hide my iniquity.</p><p class="q1">I said, I will confess my transgressions to Yahweh,</p><p class="q2">and you forgave the iniquity of my sin. <span class="qs">Selah.</span></p><p class="q1"><span data-number="6" class="v">6</span>For this, let everyone who is godly pray to you in a time when you may be found.</p><p class="q2">Surely when the great waters overflow, they shall not reach to him.</p><p class="q1"><span data-number="7" class="v">7</span>You are my hiding place.</p><p class="q2">You will preserve me from trouble.</p><p class="q2">You will surround me with songs of deliverance. <span class="qs">Selah.</span></p><p class="q1"><span data-number="8" class="v">8</span>I will instruct you and teach you in the way which you shall go.</p><p class="q2">I will counsel you with my eye on you.</p><p class="q1"><span data-number="9" class="v">9</span>Don’t be like the horse, or like the mule, which have no understanding,</p><p class="q2">who are controlled by bit and bridle, or else they will not come near to you.</p><p class="q1"><span data-number="10" class="v">10</span>Many sorrows come to the wicked,</p><p class="q2">but loving kindness shall surround him who trusts in Yahweh.</p><p class="q1"><span data-number="11" class="v">11</span>Be glad in Yahweh, and rejoice, you righteous!</p><p class="q2">Shout for joy, all you who are upright in heart!</p>',
+  },
+};
+
+const psalm119 = {
+  scripture: {
+    reference: 'Psalm 119:129 - 144',
+    html:
+      '<p class="d">PEY</p><p class="q1"><span data-number="129" class="v">129</span>Your testimonies are wonderful,</p><p class="q2">therefore my soul keeps them.</p><p class="q1"><span data-number="130" class="v">130</span>The entrance of your words gives light.</p><p class="q2">It gives understanding to the simple.</p><p class="q1"><span data-number="131" class="v">131</span>I opened my mouth wide and panted,</p><p class="q2">for I longed for your commandments.</p><p class="q1"><span data-number="132" class="v">132</span>Turn to me, and have mercy on me,</p><p class="q2">as you always do to those who love your name.</p><p class="q1"><span data-number="133" class="v">133</span>Establish my footsteps in your word.</p><p class="q2">Don’t let any iniquity have dominion over me.</p><p class="q1"><span data-number="134" class="v">134</span>Redeem me from the oppression of man,</p><p class="q2">so I will observe your precepts.</p><p class="q1"><span data-number="135" class="v">135</span>Make your face shine on your servant.</p><p class="q2">Teach me your statutes.</p><p class="q1"><span data-number="136" class="v">136</span>Streams of tears run down my eyes,</p><p class="q2">because they don’t observe your law.</p><p class="d">TZADI</p><p class="q1"><span data-number="137" class="v">137</span>You are righteous, Yahweh.</p><p class="q2">Your judgments are upright.</p><p class="q1"><span data-number="138" class="v">138</span>You have commanded your statutes in righteousness.</p><p class="q2">They are fully trustworthy.</p><p class="q1"><span data-number="139" class="v">139</span>My zeal wears me out,</p><p class="q2">because my enemies ignore your words.</p><p class="q1"><span data-number="140" class="v">140</span>Your promises have been thoroughly tested,</p><p class="q2">and your servant loves them.</p><p class="q1"><span data-number="141" class="v">141</span>I am small and despised.</p><p class="q2">I don’t forget your precepts.</p><p class="q1"><span data-number="142" class="v">142</span>Your righteousness is an everlasting righteousness.</p><p class="q2">Your law is truth.</p><p class="q1"><span data-number="143" class="v">143</span>Trouble and anguish have taken hold of me.</p><p class="q2">Your commandments are my delight.</p><p class="q1"><span data-number="144" class="v">144</span>Your testimonies are righteous forever.</p><p class="q2">Give me understanding, that I may live.</p>',
+  },
+};
+
+const songOfSolomon1 = {
+  scripture: {
+    reference: 'Song of Solomon 1:1-4',
+    html:
+      '<p class="p"><span data-number="1" class="v">1</span>The Song of songs, which is Solomon’s.</p><p class="sp">Beloved</p><p class="q1"><span data-number="2" class="v">2</span>Let him kiss me with the kisses of his mouth;</p><p class="q2">for your love is better than wine.</p><p class="q1"><span data-number="3" class="v">3</span>Your oils have a pleasing fragrance.</p><p class="q2">Your name is oil poured out,</p><p class="q2">therefore the virgins love you.</p><p class="q1"><span data-number="4" class="v">4</span>Take me away with you.</p><p class="q2">Let’s hurry.</p><p class="q2">The king has brought me into his rooms.</p><p class="sp">Friends</p><p class="q1">We will be glad and rejoice in you.</p><p class="q2">We will praise your love more than wine!</p><p class="sp">Beloved</p><p class="q1">They are right to love you.</p>',
+    isLoading: false,
+  },
+};
+
+const mark1 = {
+  scripture: {
+    reference: 'Mark 1: 1-4',
+    html:
+      '<p class="p"><span data-number="1" class="v">1</span>The beginning of the Good News of Jesus Christ, the Son of God.</p><p class="p"><span data-number="2" class="v">2</span>As it is written in the prophets,</p><p class="q1">“Behold, I send my messenger before your face,</p><p class="q2">who will prepare your way before you:</p><p class="q1"><span data-number="3" class="v">3</span>the voice of one crying in the wilderness,</p><p class="q2">‘Make ready the way of the Lord!</p><p class="q2">Make his paths straight!’”</p><p class="p"><span data-number="4" class="v">4</span>John came baptizing in the wilderness and preaching the baptism of repentance for forgiveness of sins.',
+  },
+};
+
+const john3 = {
+  scripture: {
+    reference: 'John 3:16-17',
+    html:
+      '<p class="p"><span data-number="16" class="v">16</span><span class="wj">For God so loved the world, that he gave his one and only Son, that whoever believes in him should not perish, but have eternal life. </span><span data-number="17" class="v">17</span><span class="wj">For God didn’t send his Son into the world to judge the world, but that the world should be saved through him. </span></p>',
+    isLoading: false,
+  },
+};
+
+const revelation22 = {
+  scripture: {
+    reference: 'Revelation 22:20-21',
+    html:
+      '<p class="p"><span data-number="20" class="v">20</span>He who testifies these things says, <span class="wj">“Yes, I come quickly.” </span></p><p class="p">Amen! Yes, come, Lord Jesus.</p><p class="p"><span data-number="21" class="v">21</span>The grace of the Lord Jesus Christ be with all the saints. Amen.</p>',
+    isLoading: false,
+  },
+};
+
+const revelation22Loading = {
+  scripture: {
+    reference: 'Revelation 22:20-21',
+    html:
+      '<p class="p"><span data-number="20" class="v">20</span>He who testifies these things says, <span class="wj">“Yes, I come quickly.” </span></p><p class="p">Amen! Yes, come, Lord Jesus.</p><p class="p"><span data-number="21" class="v">21</span>The grace of the Lord Jesus Christ be with all the saints. Amen.</p>',
+    isLoading: true,
+  },
+};
+
+storiesOf('Scripture', module)
+  .add('Genesis 1:1-5', () => (
+    <ScrollView>
+      <PaddedView>
+        <ScriptureItem
+          reference={genesis1.scripture.reference}
+          html={genesis1.scripture.html}
+          isLoading={genesis1.scripture.isLoading}
+          copyright={genesis1.scripture.copyright}
+        />
+      </PaddedView>
+    </ScrollView>
+  ))
+  .add('John 1:1', () => (
+    <ScrollView>
+      <PaddedView>
+        <ScriptureItem
+          reference={john1.scripture.reference}
+          html={john1.scripture.html}
+          isLoading={john1.scripture.isLoading}
+          copyright={john1.scripture.copyright}
+        />
+      </PaddedView>
+    </ScrollView>
+  ))
+  .add('Psalm 23', () => (
+    <ScrollView>
+      <PaddedView>
+        <ScriptureItem
+          reference={psalm23.scripture.reference}
+          html={psalm23.scripture.html}
+          isLoading={psalm23.scripture.isLoading}
+        />
+      </PaddedView>
+    </ScrollView>
+  ))
+  .add('Psalm 32', () => (
+    <ScrollView>
+      <PaddedView>
+        <ScriptureItem
+          reference={psalm32.scripture.reference}
+          html={psalm32.scripture.html}
+          isLoading={psalm32.scripture.isLoading}
+        />
+      </PaddedView>
+    </ScrollView>
+  ))
+  .add('Psalm 119:129 - 144', () => (
+    <ScrollView>
+      <PaddedView>
+        <ScriptureItem
+          reference={psalm119.scripture.reference}
+          html={psalm119.scripture.html}
+          isLoading={psalm119.scripture.isLoading}
+        />
+      </PaddedView>
+    </ScrollView>
+  ))
+  .add('Song of Solomon 1:1-4', () => (
+    <ScrollView>
+      <PaddedView>
+        <ScriptureItem
+          reference={songOfSolomon1.scripture.reference}
+          html={songOfSolomon1.scripture.html}
+          isLoading={songOfSolomon1.scripture.isLoading}
+        />
+      </PaddedView>
+    </ScrollView>
+  ))
+  .add('Mark 1: 1-4', () => (
+    <ScrollView>
+      <PaddedView>
+        <ScriptureItem
+          reference={mark1.scripture.reference}
+          html={mark1.scripture.html}
+          isLoading={mark1.scripture.isLoading}
+        />
+      </PaddedView>
+    </ScrollView>
+  ))
+  .add('John 3:16-17', () => (
+    <ScrollView>
+      <PaddedView>
+        <ScriptureItem
+          reference={john3.scripture.reference}
+          html={john3.scripture.html}
+          isLoading={john3.scripture.isLoading}
+        />
+      </PaddedView>
+    </ScrollView>
+  ))
+  .add('Revelation 22:20-21', () => (
+    <ScrollView>
+      <PaddedView>
+        <ScriptureItem
+          reference={revelation22.scripture.reference}
+          html={revelation22.scripture.html}
+          isLoading={revelation22.scripture.isLoading}
+        />
+      </PaddedView>
+    </ScrollView>
+  ))
+  .add('Loading State', () => (
+    <ScrollView>
+      <PaddedView>
+        <ScriptureItem
+          reference={revelation22Loading.scripture.reference}
+          html={revelation22Loading.scripture.html}
+          isLoading={revelation22Loading.scripture.isLoading}
+        />
+      </PaddedView>
+    </ScrollView>
+  ));
diff --git a/apolloschurchapp/src/ui/Scripture/ScriptureItem.tests.js b/apolloschurchapp/src/ui/Scripture/ScriptureItem.tests.js
new file mode 100644
index 0000000..b43256b
--- /dev/null
+++ b/apolloschurchapp/src/ui/Scripture/ScriptureItem.tests.js
@@ -0,0 +1,198 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import ScriptureItem from './ScriptureItem';
+
+const genesis1 = {
+  scripture: {
+    reference: 'Genesis 1:1-5',
+    html:
+      '<p class="p"><span data-number="1" class="v">1</span>In the beginning, God created the heavens and the earth. <span data-number="2" class="v">2</span>The earth was formless and empty. Darkness was on the surface of the deep and God’s Spirit was hovering over the surface of the waters.</p><p class="p"><span data-number="3" class="v">3</span>God said, “Let there be light,” and there was light. <span data-number="4" class="v">4</span>God saw the light, and saw that it was good. God divided the light from the darkness. <span data-number="5" class="v">5</span>God called the light “day”, and the darkness he called “night”. There was evening and there was morning, the first day.</p>',
+    copyright: 'PUBLIC DOMAIN',
+  },
+};
+
+const psalm23 = {
+  scripture: {
+    reference: 'Psalm 23',
+    html:
+      '<p class="d">A Psalm by David.</p><p class="q1"><span data-number="1" class="v">1</span>Yahweh is my shepherd:</p><p class="q2">I shall lack nothing.</p><p class="q1"><span data-number="2" class="v">2</span>He makes me lie down in green pastures.</p><p class="q2">He leads me beside still waters.</p><p class="q1"><span data-number="3" class="v">3</span>He restores my soul.</p><p class="q2">He guides me in the paths of righteousness for his name’s sake.</p><p class="q1"><span data-number="4" class="v">4</span>Even though I walk through the valley of the shadow of death,</p><p class="q2">I will fear no evil, for you are with me.</p><p class="q1">Your rod and your staff,</p><p class="q2">they comfort me.</p><p class="q1"><span data-number="5" class="v">5</span>You prepare a table before me</p><p class="q2">in the presence of my enemies.</p><p class="q1">You anoint my head with oil.</p><p class="q2">My cup runs over.</p><p class="q1"><span data-number="6" class="v">6</span>Surely goodness and loving kindness shall follow me all the days of my life,</p><p class="q2">and I will dwell in Yahweh’s house forever.</p>',
+
+    copyright:
+      'PUBLIC DOMAIN except in the United Kingdom, where a Crown Copyright applies to printing the KJV. See http://www.cambridge.org/about-us/who-we-are/queens-printers-patent',
+  },
+};
+
+const psalm32 = {
+  scripture: {
+    reference: 'Psalm 32',
+    html:
+      '<p class="d">By David. A contemplative psalm.</p><p class="q1"><span data-number="1" class="v">1</span>Blessed is he whose disobedience is forgiven,</p><p class="q2">whose sin is covered.</p><p class="q1"><span data-number="2" class="v">2</span>Blessed is the man to whom Yahweh doesn’t impute iniquity,</p><p class="q2">in whose spirit there is no deceit.</p><p class="q1"><span data-number="3" class="v">3</span>When I kept silence, my bones wasted away through my groaning all day long.</p><p class="q1"><span data-number="4" class="v">4</span>For day and night your hand was heavy on me.</p><p class="q2">My strength was sapped in the heat of summer. <span class="qs">Selah.</span></p><p class="q1"><span data-number="5" class="v">5</span>I acknowledged my sin to you.</p><p class="q2">I didn’t hide my iniquity.</p><p class="q1">I said, I will confess my transgressions to Yahweh,</p><p class="q2">and you forgave the iniquity of my sin. <span class="qs">Selah.</span></p><p class="q1"><span data-number="6" class="v">6</span>For this, let everyone who is godly pray to you in a time when you may be found.</p><p class="q2">Surely when the great waters overflow, they shall not reach to him.</p><p class="q1"><span data-number="7" class="v">7</span>You are my hiding place.</p><p class="q2">You will preserve me from trouble.</p><p class="q2">You will surround me with songs of deliverance. <span class="qs">Selah.</span></p><p class="q1"><span data-number="8" class="v">8</span>I will instruct you and teach you in the way which you shall go.</p><p class="q2">I will counsel you with my eye on you.</p><p class="q1"><span data-number="9" class="v">9</span>Don’t be like the horse, or like the mule, which have no understanding,</p><p class="q2">who are controlled by bit and bridle, or else they will not come near to you.</p><p class="q1"><span data-number="10" class="v">10</span>Many sorrows come to the wicked,</p><p class="q2">but loving kindness shall surround him who trusts in Yahweh.</p><p class="q1"><span data-number="11" class="v">11</span>Be glad in Yahweh, and rejoice, you righteous!</p><p class="q2">Shout for joy, all you who are upright in heart!</p>',
+  },
+};
+
+const psalm119 = {
+  scripture: {
+    reference: 'Psalm 119:129 - 144',
+    html:
+      '<p class="d">PEY</p><p class="q1"><span data-number="129" class="v">129</span>Your testimonies are wonderful,</p><p class="q2">therefore my soul keeps them.</p><p class="q1"><span data-number="130" class="v">130</span>The entrance of your words gives light.</p><p class="q2">It gives understanding to the simple.</p><p class="q1"><span data-number="131" class="v">131</span>I opened my mouth wide and panted,</p><p class="q2">for I longed for your commandments.</p><p class="q1"><span data-number="132" class="v">132</span>Turn to me, and have mercy on me,</p><p class="q2">as you always do to those who love your name.</p><p class="q1"><span data-number="133" class="v">133</span>Establish my footsteps in your word.</p><p class="q2">Don’t let any iniquity have dominion over me.</p><p class="q1"><span data-number="134" class="v">134</span>Redeem me from the oppression of man,</p><p class="q2">so I will observe your precepts.</p><p class="q1"><span data-number="135" class="v">135</span>Make your face shine on your servant.</p><p class="q2">Teach me your statutes.</p><p class="q1"><span data-number="136" class="v">136</span>Streams of tears run down my eyes,</p><p class="q2">because they don’t observe your law.</p><p class="d">TZADI</p><p class="q1"><span data-number="137" class="v">137</span>You are righteous, Yahweh.</p><p class="q2">Your judgments are upright.</p><p class="q1"><span data-number="138" class="v">138</span>You have commanded your statutes in righteousness.</p><p class="q2">They are fully trustworthy.</p><p class="q1"><span data-number="139" class="v">139</span>My zeal wears me out,</p><p class="q2">because my enemies ignore your words.</p><p class="q1"><span data-number="140" class="v">140</span>Your promises have been thoroughly tested,</p><p class="q2">and your servant loves them.</p><p class="q1"><span data-number="141" class="v">141</span>I am small and despised.</p><p class="q2">I don’t forget your precepts.</p><p class="q1"><span data-number="142" class="v">142</span>Your righteousness is an everlasting righteousness.</p><p class="q2">Your law is truth.</p><p class="q1"><span data-number="143" class="v">143</span>Trouble and anguish have taken hold of me.</p><p class="q2">Your commandments are my delight.</p><p class="q1"><span data-number="144" class="v">144</span>Your testimonies are righteous forever.</p><p class="q2">Give me understanding, that I may live.</p>',
+  },
+};
+
+const songOfSolomon1 = {
+  scripture: {
+    reference: 'Song of Solomon 1:1-4',
+    html:
+      '<p class="p"><span data-number="1" class="v">1</span>The Song of songs, which is Solomon’s.</p><p class="sp">Beloved</p><p class="q1"><span data-number="2" class="v">2</span>Let him kiss me with the kisses of his mouth;</p><p class="q2">for your love is better than wine.</p><p class="q1"><span data-number="3" class="v">3</span>Your oils have a pleasing fragrance.</p><p class="q2">Your name is oil poured out,</p><p class="q2">therefore the virgins love you.</p><p class="q1"><span data-number="4" class="v">4</span>Take me away with you.</p><p class="q2">Let’s hurry.</p><p class="q2">The king has brought me into his rooms.</p><p class="sp">Friends</p><p class="q1">We will be glad and rejoice in you.</p><p class="q2">We will praise your love more than wine!</p><p class="sp">Beloved</p><p class="q1">They are right to love you.</p>',
+    isLoading: false,
+  },
+};
+
+const mark1 = {
+  scripture: {
+    reference: 'Mark 1:1-4',
+    html:
+      '<p class="p"><span data-number="1" class="v">1</span>The beginning of the Good News of Jesus Christ, the Son of God.</p><p class="p"><span data-number="2" class="v">2</span>As it is written in the prophets,</p><p class="q1">“Behold, I send my messenger before your face,</p><p class="q2">who will prepare your way before you:</p><p class="q1"><span data-number="3" class="v">3</span>the voice of one crying in the wilderness,</p><p class="q2">‘Make ready the way of the Lord!</p><p class="q2">Make his paths straight!’”</p><p class="p"><span data-number="4" class="v">4</span>John came baptizing in the wilderness and preaching the baptism of repentance for forgiveness of sins.',
+  },
+};
+
+const john3 = {
+  scripture: {
+    reference: 'John 3:16-17',
+    html:
+      '<p class="p"><span data-number="16" class="v">16</span><span class="wj">For God so loved the world, that he gave his one and only Son, that whoever believes in him should not perish, but have eternal life. </span><span data-number="17" class="v">17</span><span class="wj">For God didn’t send his Son into the world to judge the world, but that the world should be saved through him. </span></p>',
+    isLoading: false,
+  },
+};
+
+const revelation22 = {
+  scripture: {
+    reference: 'Revelation 22:20-21',
+    html:
+      '<p class="p"><span data-number="20" class="v">20</span>He who testifies these things says, <span class="wj">“Yes, I come quickly.” </span></p><p class="p">Amen! Yes, come, Lord Jesus.</p><p class="p"><span data-number="21" class="v">21</span>The grace of the Lord Jesus Christ be with all the saints. Amen.</p>',
+  },
+};
+
+const john3Loading = {
+  scripture: {
+    reference: 'John 3:16-17',
+    html:
+      '<p class="p"><span data-number="16" class="v">16</span><span class="wj">For God so loved the world, that he gave his one and only Son, that whoever believes in him should not perish, but have eternal life. </span><span data-number="17" class="v">17</span><span class="wj">For God didn’t send his Son into the world to judge the world, but that the world should be saved through him. </span></p>',
+    isLoading: true,
+  },
+};
+
+describe('the ScriptureItem component', () => {
+  it('renders Genesis 1:1-5', () => {
+    const tree = renderer.create(
+      <Providers>
+        <ScriptureItem
+          reference={genesis1.scripture.reference}
+          html={genesis1.scripture.html}
+          copyright={genesis1.scripture.copyright}
+          isLoading={false}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('renders Psalm 23', () => {
+    const tree = renderer.create(
+      <Providers>
+        <ScriptureItem
+          reference={psalm23.scripture.reference}
+          html={psalm23.scripture.html}
+          copyright={psalm23.scripture.copyright}
+          isLoading={false}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('renders Psalm 32', () => {
+    const tree = renderer.create(
+      <Providers>
+        <ScriptureItem
+          reference={psalm32.scripture.reference}
+          html={psalm32.scripture.html}
+          isLoading={false}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('renders Psalm 119:129 - 144', () => {
+    const tree = renderer.create(
+      <Providers>
+        <ScriptureItem
+          reference={psalm119.scripture.reference}
+          html={psalm119.scripture.html}
+          isLoading={false}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('renders Song of Solomon 1:1-4', () => {
+    const tree = renderer.create(
+      <Providers>
+        <ScriptureItem
+          reference={songOfSolomon1.scripture.reference}
+          html={songOfSolomon1.scripture.html}
+          isLoading={songOfSolomon1.scripture.isLoading}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('renders Mark 1:1-4', () => {
+    const tree = renderer.create(
+      <Providers>
+        <ScriptureItem
+          reference={mark1.scripture.reference}
+          html={mark1.scripture.html}
+          isLoading={false}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('renders John 3:16-17', () => {
+    const tree = renderer.create(
+      <Providers>
+        <ScriptureItem
+          reference={john3.scripture.reference}
+          html={john3.scripture.html}
+          isLoading={john3.scripture.isLoading}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('renders Revelation 22:20-21', () => {
+    const tree = renderer.create(
+      <Providers>
+        <ScriptureItem
+          reference={revelation22.scripture.reference}
+          html={revelation22.scripture.html}
+          isLoading={false}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('renders a loading state', () => {
+    const tree = renderer.create(
+      <Providers>
+        <ScriptureItem
+          reference={john3Loading.scripture.reference}
+          html={john3Loading.scripture.html}
+          isLoading={john3Loading.scripture.isLoading}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/Scripture/ScriptureList.js b/apolloschurchapp/src/ui/Scripture/ScriptureList.js
new file mode 100644
index 0000000..555a113
--- /dev/null
+++ b/apolloschurchapp/src/ui/Scripture/ScriptureList.js
@@ -0,0 +1,51 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import { H4 } from 'apolloschurchapp/src/ui/typography';
+import styled from 'apolloschurchapp/src/ui/styled';
+import { ButtonLink } from 'apolloschurchapp/src/ui/Button';
+
+const StyledH4 = styled(({ theme }) => ({
+  color: theme.colors.primary,
+  textAlign: 'center',
+  textDecorationLine: 'underline',
+  paddingBottom: theme.sizing.baseUnit * 1.5,
+}))(H4);
+
+const ScriptureList = ({
+  references,
+  onPress,
+  tabDestination,
+  commas = true,
+}) => {
+  if (!references && commas) return '';
+  if (!references) return [];
+
+  let combo = references.map((reference) => `${reference}`);
+
+  if (commas) {
+    combo = combo.join(', ');
+  }
+
+  const handleOnPress = () => onPress(tabDestination);
+
+  return (
+    <StyledH4>
+      <ButtonLink padded onPress={handleOnPress}>
+        {combo}
+      </ButtonLink>
+    </StyledH4>
+  );
+};
+
+ScriptureList.propTypes = {
+  /** Toggles comma formating */
+  commas: PropTypes.bool,
+  /** The ButtonLink handler */
+  onPress: PropTypes.func,
+  /** An array of human readable references (i.e. '1 Corinthians 15:57') */
+  references: PropTypes.arrayOf(PropTypes.string),
+  /** The tab to go to onPress */
+  tabDestination: PropTypes.string,
+};
+
+export default ScriptureList;
diff --git a/apolloschurchapp/src/ui/Scripture/ScriptureList.tests.js b/apolloschurchapp/src/ui/Scripture/ScriptureList.tests.js
new file mode 100644
index 0000000..d95c212
--- /dev/null
+++ b/apolloschurchapp/src/ui/Scripture/ScriptureList.tests.js
@@ -0,0 +1,19 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import ScriptureList from './ScriptureList';
+
+const scriptureReferences = ['1 Corinthians 15:57', 'Exodus 17:8-15'];
+
+describe('the ScriptureList component', () => {
+  it('renders a scripture List', () => {
+    const tree = renderer.create(
+      <Providers>
+        <ScriptureList onPress={jest.fn()} references={scriptureReferences} />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/Scripture/index.js b/apolloschurchapp/src/ui/Scripture/index.js
index 1c5fb67..6458f99 100644
--- a/apolloschurchapp/src/ui/Scripture/index.js
+++ b/apolloschurchapp/src/ui/Scripture/index.js
@@ -1,38 +1,2 @@
-import React from 'react';
-import { Query } from 'react-apollo';
-import { get } from 'lodash';
-import PropTypes from 'prop-types';
-import { View } from 'react-native';
-
-// import HTMLView from 'apolloschurchapp/src/ui/HTMLView';
-import Spacer from 'apolloschurchapp/src/ui/Spacer';
-
-import Item from './Item';
-import getScripture from './getScripture';
-
-// const copyright =
-//   '<h6>Scripture taken from The Holy Bible, English Standard Version. Copyright &copy;2001 by <a href="http://www.crosswaybibles.org">Crossway Bibles</a>, a publishing ministry of Good News Publishers. Used by permission. All rights reserved. Text provided by the <a href="http://www.gnpcb.org/esv/share/services/">Crossway Bibles Web Service</a><h6>';
-
-const Scripture = ({ references = [] }) => (
-  <View>
-    {references.map((query) => (
-      <Query query={getScripture} variables={{ query }} key={query}>
-        {({ loading, data }) => (
-          <Item
-            reference={get(data, 'scripture.reference', '')}
-            html={get(data, 'scripture.html', '')}
-            isLoading={loading}
-          />
-        )}
-      </Query>
-    ))}
-    <Spacer byHeight />
-    {/* <HTMLView>{copyright}</HTMLView> */}
-  </View>
-);
-
-Scripture.propTypes = {
-  references: PropTypes.arrayOf(PropTypes.string),
-};
-
-export default Scripture;
+export { default } from './ScriptureItem';
+export ScriptureList from './ScriptureList';
diff --git a/apolloschurchapp/src/ui/Scripture/typography/ScriptureText/ScriptureText.stories.js b/apolloschurchapp/src/ui/Scripture/typography/ScriptureText/ScriptureText.stories.js
new file mode 100644
index 0000000..33ea0d2
--- /dev/null
+++ b/apolloschurchapp/src/ui/Scripture/typography/ScriptureText/ScriptureText.stories.js
@@ -0,0 +1,44 @@
+import React from 'react';
+import { View } from 'react-native';
+import { storiesOf } from '@storybook/react-native';
+
+import ScriptureText from '.';
+
+storiesOf('Scripture/typography/ScriptureText', module)
+  .add('Regular', () => (
+    <ScriptureText>
+      {`"God's commands are designed to guide you to life's very best. You will not obey Him, if you do not believe Him and trust Him. You cannot believe Him if you do not love Him. You cannot love Him unless you know Him." ― Henry Blackaby`}
+    </ScriptureText>
+  ))
+  .add('Bold', () => (
+    <ScriptureText bold>
+      {`"God's commands are designed to guide you to life's very best. You will not obey Him, if you do not believe Him and trust Him. You cannot believe Him if you do not love Him. You cannot love Him unless you know Him." ― Henry Blackaby`}
+    </ScriptureText>
+  ))
+  .add('Italic', () => (
+    <ScriptureText italic>
+      {`"God's commands are designed to guide you to life's very best. You will not obey Him, if you do not believe Him and trust Him. You cannot believe Him if you do not love Him. You cannot love Him unless you know Him." ― Henry Blackaby`}
+    </ScriptureText>
+  ))
+  .add('Bold Italic', () => (
+    <ScriptureText bold italic>
+      {`"God's commands are designed to guide you to life's very best. You will not obey Him, if you do not believe Him and trust Him. You cannot believe Him if you do not love Him. You cannot love Him unless you know Him." ― Henry Blackaby`}
+    </ScriptureText>
+  ))
+  .add('isLoading', () => (
+    <ScriptureText isLoading>
+      {`"God's commands are designed to guide you to life's very best. You will not obey Him, if you do not believe Him and trust Him. You cannot believe Him if you do not love Him. You cannot love Him unless you know Him." ― Henry Blackaby`}
+    </ScriptureText>
+  ))
+  .add('Border Box – platform testing', () => {
+    const border = { borderWidth: 1, borderStyle: 'solid' };
+
+    return (
+      <View>
+        <ScriptureText style={border}>Body Text</ScriptureText>
+        <ScriptureText style={border}>
+          {`"God's commands are designed to guide you to life's very best. You will not obey Him, if you do not believe Him and trust Him. You cannot believe Him if you do not love Him. You cannot love Him unless you know Him." ― Henry Blackaby`}
+        </ScriptureText>
+      </View>
+    );
+  });
diff --git a/apolloschurchapp/src/ui/Scripture/typography/ScriptureText/ScriptureText.tests.js b/apolloschurchapp/src/ui/Scripture/typography/ScriptureText/ScriptureText.tests.js
new file mode 100644
index 0000000..f1c7012
--- /dev/null
+++ b/apolloschurchapp/src/ui/Scripture/typography/ScriptureText/ScriptureText.tests.js
@@ -0,0 +1,72 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import ScriptureText from '.';
+
+describe('the ScriptureText component', () => {
+  it('should render correctly', () => {
+    const tree = renderer.create(
+      <Providers>
+        <ScriptureText>Default ScriptureText text</ScriptureText>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render as bold', () => {
+    const tree = renderer.create(
+      <Providers>
+        <ScriptureText bold>Bold ScriptureText text</ScriptureText>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render as italic', () => {
+    const tree = renderer.create(
+      <Providers>
+        <ScriptureText italic>Italic ScriptureText text</ScriptureText>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render as bold italic', () => {
+    const tree = renderer.create(
+      <Providers>
+        <ScriptureText bold italic>
+          Bold italic ScriptureText text
+        </ScriptureText>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should accept and render passed in styles', () => {
+    const salmon = { color: 'salmon' };
+    const tree = renderer.create(
+      <Providers>
+        <ScriptureText style={salmon}>Salmon text</ScriptureText>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should render a loading state', () => {
+    const tree = renderer.create(
+      <Providers>
+        <ScriptureText isLoading>Default ScriptureText text</ScriptureText>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+  it('should accept additional props', () => {
+    const tree = renderer.create(
+      <Providers>
+        <ScriptureText accessible={false}>
+          {
+            '"True faith means holding nothing back. It means putting every hope in God\'s fidelity to His Promises." ― Francis Chan'
+          }
+        </ScriptureText>
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/ui/Scripture/typography/ScriptureText/index.js b/apolloschurchapp/src/ui/Scripture/typography/ScriptureText/index.js
new file mode 100644
index 0000000..c3fddbc
--- /dev/null
+++ b/apolloschurchapp/src/ui/Scripture/typography/ScriptureText/index.js
@@ -0,0 +1,49 @@
+import { Text } from 'react-native';
+import PropTypes from 'prop-types';
+import { compose, pure, setDisplayName } from 'recompose';
+
+import styled from 'apolloschurchapp/src/ui/styled';
+import {
+  withPlaceholder,
+  Typography,
+} from 'apolloschurchapp/src/ui/Placeholder';
+
+const styles = styled(({ theme, bold, italic }) => {
+  let fontStack = theme.typography.serif.regular.default;
+
+  if (bold && italic) {
+    fontStack = theme.typography.serif.bold.italic;
+  } else if (bold) {
+    fontStack = theme.typography.serif.bold.default;
+  } else if (italic) {
+    fontStack = theme.typography.serif.regular.italic;
+  }
+
+  return {
+    fontSize: theme.helpers.rem(1),
+    lineHeight: theme.helpers.verticalRhythm(1, 1.625),
+    fontFamily: fontStack,
+    color: theme.colors.text.primary,
+  };
+}, 'ScriptureText');
+
+const ScriptureText = compose(
+  setDisplayName('ScriptureText'),
+  styles,
+  withPlaceholder(Typography),
+  pure
+)(Text);
+
+ScriptureText.propTypes = {
+  bold: PropTypes.bool,
+  italic: PropTypes.bool,
+  isLoading: PropTypes.bool, // display loading placeholder
+  ...Text.propTypes,
+};
+
+ScriptureText.defaultProps = {
+  bold: false,
+  italic: false,
+};
+
+export default ScriptureText;
diff --git a/apolloschurchapp/src/ui/Scripture/typography/index.js b/apolloschurchapp/src/ui/Scripture/typography/index.js
new file mode 100644
index 0000000..6c79752
--- /dev/null
+++ b/apolloschurchapp/src/ui/Scripture/typography/index.js
@@ -0,0 +1,27 @@
+import { Text } from 'react-native';
+
+import styled from 'apolloschurchapp/src/ui/styled';
+
+import ScriptureText from './ScriptureText';
+
+const VerseNumber = styled(({ theme }) => ({
+  fontSize: theme.helpers.rem(0.6),
+  color: theme.colors.text.secondary,
+}))(ScriptureText);
+
+const RedLetters = styled(({ theme }) => ({
+  color: theme.colors.wordOfChrist,
+}))(Text);
+
+const PoeticPause = styled({
+  textAlign: 'right',
+})(ScriptureText);
+
+const LegalText = styled(({ theme }) => ({
+  fontSize: theme.helpers.rem(0.6),
+  lineHeight: theme.helpers.verticalRhythm(0.45),
+  fontFamily: theme.typography.sans.regular.default,
+  color: theme.colors.text.secondary,
+}))(ScriptureText);
+
+export { ScriptureText, VerseNumber, RedLetters, PoeticPause, LegalText };
diff --git a/apolloschurchapp/src/ui/TableView/TableView.stories.js b/apolloschurchapp/src/ui/TableView/TableView.stories.js
index 4bdfb67..d55dc89 100644
--- a/apolloschurchapp/src/ui/TableView/TableView.stories.js
+++ b/apolloschurchapp/src/ui/TableView/TableView.stories.js
@@ -7,7 +7,7 @@ import { Switch } from 'apolloschurchapp/src/ui/inputs';
 
 import TableView, { Cell, CellText, Divider } from '.';
 
-storiesOf('TableView', module).add('default', () => (
+storiesOf('TableView', module).add('Examples', () => (
   <FlexedView>
     <TableView>
       <Cell>
@@ -30,5 +30,26 @@ storiesOf('TableView', module).add('default', () => (
         <Icon name="arrow-next" />
       </Cell>
     </TableView>
+    <TableView>
+      <Cell>
+        <Icon name="arrow-back" />
+        <CellText>Line Item</CellText>
+      </Cell>
+      <Divider />
+      <Cell>
+        <Icon name="camera" />
+        <CellText>A toggle!</CellText>
+        <Switch />
+      </Cell>
+      <Divider />
+      <Cell>
+        <CellText>Just a row</CellText>
+      </Cell>
+      <Divider />
+      <Cell>
+        <CellText>This be some button!</CellText>
+        <Icon name="arrow-next" />
+      </Cell>
+    </TableView>
   </FlexedView>
 ));
diff --git a/apolloschurchapp/src/ui/ThumbnailCard/index.js b/apolloschurchapp/src/ui/ThumbnailCard/index.js
index 5bcb6cc..3888a87 100644
--- a/apolloschurchapp/src/ui/ThumbnailCard/index.js
+++ b/apolloschurchapp/src/ui/ThumbnailCard/index.js
@@ -55,7 +55,7 @@ const ThumbnailCard = enhance(
     ...otherProps
   }) => (
     <TouchableWithoutFeedback onPress={() => onPressItem()}>
-      <Card isLoading={isLoading} {...otherProps}>
+      <Card isLoading={isLoading} inHorizontalList {...otherProps}>
         <HorizontalLayout>
           <LeftColumn>
             <H5>{title}</H5>
diff --git a/apolloschurchapp/src/ui/TileImage/index.js b/apolloschurchapp/src/ui/TileImage/index.js
index 524bb16..a37deb9 100644
--- a/apolloschurchapp/src/ui/TileImage/index.js
+++ b/apolloschurchapp/src/ui/TileImage/index.js
@@ -1,5 +1,5 @@
 import React from 'react';
-import { TouchableWithoutFeedback, View } from 'react-native';
+import { View } from 'react-native';
 import PropTypes from 'prop-types';
 import { pure, compose } from 'recompose';
 
@@ -7,10 +7,11 @@ import { H4 } from 'apolloschurchapp/src/ui/typography';
 import styled from 'apolloschurchapp/src/ui/styled';
 import { withTheme } from 'apolloschurchapp/src/ui/theme';
 import GradientOverlayImage from 'apolloschurchapp/src/ui/GradientOverlayImage';
+import TouchableScale from 'apolloschurchapp/src/ui/TouchableScale';
 
 const CardView = styled(
   ({ theme }) => ({
-    borderRadius: theme.sizing.borderRadius,
+    borderRadius: theme.sizing.baseUnit,
     overflow: 'hidden',
     width: '100%',
     height: '100%',
@@ -42,9 +43,7 @@ const enhance = compose(
 
 const TileImage = enhance(
   ({ image, link, onPressItem, text, theme, isLoading }) => (
-    <TouchableWithoutFeedback
-      onPress={() => !isLoading && onPressItem({ ...link })}
-    >
+    <TouchableScale onPress={() => !isLoading && onPressItem({ ...link })}>
       <CardView>
         <SquareGradientOverlayImage
           source={image}
@@ -54,7 +53,7 @@ const TileImage = enhance(
         />
         <Title isLoading={isLoading}>{text}</Title>
       </CardView>
-    </TouchableWithoutFeedback>
+    </TouchableScale>
   )
 );
 
diff --git a/apolloschurchapp/src/ui/TouchableScale/index.js b/apolloschurchapp/src/ui/TouchableScale/index.js
new file mode 100644
index 0000000..a4bdca9
--- /dev/null
+++ b/apolloschurchapp/src/ui/TouchableScale/index.js
@@ -0,0 +1,58 @@
+import React, { Component } from 'react';
+import PropTypes from 'prop-types';
+import { Animated, TouchableWithoutFeedback } from 'react-native';
+
+class TouchableScale extends Component {
+  static propTypes = {
+    minScale: PropTypes.number,
+    springConfig: PropTypes.shape({}),
+  };
+
+  static defaultProps = {
+    minScale: 0.95,
+    springConfig: {
+      speed: 20,
+    },
+  };
+
+  scale = new Animated.Value(this.props.active ? this.props.minScale : 1);
+
+  animatedStyle = {
+    transform: [{ scale: this.scale }],
+  };
+
+  handlePressIn = () => {
+    Animated.spring(this.scale, {
+      toValue: this.props.minScale,
+      useNativeDriver: true,
+      isInteraction: false,
+      ...this.props.springConfig,
+    }).start();
+  };
+
+  handlePressOut = () => {
+    Animated.spring(this.scale, {
+      toValue: 1,
+      useNativeDriver: true,
+      isInteraction: false,
+      ...this.props.springConfig,
+    }).start();
+  };
+
+  render() {
+    const { minScale, style, children, ...touchableProps } = this.props;
+    return (
+      <TouchableWithoutFeedback
+        {...touchableProps}
+        onPressIn={this.handlePressIn}
+        onPressOut={this.handlePressOut}
+      >
+        <Animated.View style={[this.animatedStyle, style]}>
+          {children}
+        </Animated.View>
+      </TouchableWithoutFeedback>
+    );
+  }
+}
+
+export default TouchableScale;
diff --git a/apolloschurchapp/src/ui/UserAvatarView/AvatarForm.js b/apolloschurchapp/src/ui/UserAvatarView/AvatarForm.js
index f62198e..9bdf841 100644
--- a/apolloschurchapp/src/ui/UserAvatarView/AvatarForm.js
+++ b/apolloschurchapp/src/ui/UserAvatarView/AvatarForm.js
@@ -1,11 +1,14 @@
 import React, { PureComponent } from 'react';
+import { View } from 'react-native';
 import PropTypes from 'prop-types';
 
 import ConnectedImage from 'apolloschurchapp/src/ui/ConnectedImage';
 import Touchable from 'apolloschurchapp/src/ui/Touchable';
+import { ButtonLink } from 'apolloschurchapp/src/ui/Button';
 import Avatar from 'apolloschurchapp/src/ui/Avatar';
 import { withTheme } from 'apolloschurchapp/src/ui/theme';
-
+import { H5 } from 'apolloschurchapp/src/ui/typography';
+import styled from 'apolloschurchapp/src/ui/styled';
 import uploadPhoto from './uploadPhoto';
 
 const StyledAvatar = withTheme(({ theme }) => ({
@@ -15,6 +18,11 @@ const StyledAvatar = withTheme(({ theme }) => ({
   },
 }))(Avatar);
 
+const Wrapper = styled({
+  justifyContent: 'center',
+  alignItems: 'center',
+})(View);
+
 export default class AvatarForm extends PureComponent {
   state = {
     isUploadingFile: false,
@@ -33,9 +41,25 @@ export default class AvatarForm extends PureComponent {
     const { isUploadingFile } = this.state;
 
     return (
-      <Touchable onPress={this.handleUploadPhoto}>
-        <StyledAvatar source={photo} size="large" isLoading={isUploadingFile} />
-      </Touchable>
+      <Wrapper>
+        <Touchable
+          disabled={this.props.disabled}
+          onPress={this.handleUploadPhoto}
+        >
+          <StyledAvatar
+            source={photo}
+            size="medium"
+            isLoading={isUploadingFile}
+          />
+        </Touchable>
+        {this.props.text ? (
+          <H5>
+            <ButtonLink onPress={this.handleUploadPhoto}>
+              Change Photo
+            </ButtonLink>
+          </H5>
+        ) : null}
+      </Wrapper>
     );
   }
 }
@@ -43,4 +67,6 @@ export default class AvatarForm extends PureComponent {
 AvatarForm.propTypes = {
   refetch: PropTypes.func.isRequired,
   photo: ConnectedImage.propTypes.source,
+  disabled: PropTypes.bool,
+  text: PropTypes.bool,
 };
diff --git a/apolloschurchapp/src/ui/UserAvatarView/UserAvatarView.stories.js b/apolloschurchapp/src/ui/UserAvatarView/UserAvatarView.stories.js
index aae6b43..76cf42a 100644
--- a/apolloschurchapp/src/ui/UserAvatarView/UserAvatarView.stories.js
+++ b/apolloschurchapp/src/ui/UserAvatarView/UserAvatarView.stories.js
@@ -1,22 +1,23 @@
 import React from 'react';
 import { storiesOf } from '@storybook/react-native';
 
-import FlexedView from 'apolloschurchapp/src/ui/FlexedView';
-
 import UserAvatarView from '.';
 
-const photo = {
-  url:
-    'https://dg0ddngxdz549.cloudfront.net/images/cached/images/remote/http_s3.amazonaws.com/ns.images/all/member_images/members.nophoto_1000_1000_90_c1.jpg',
-};
-
-storiesOf('UserAvatarView', module).add('default', () => (
-  <FlexedView>
+storiesOf('UserAvatarView', module)
+  .add('example', () => (
+    <UserAvatarView
+      photo={'https://picsum.photos/400/400/?random'}
+      firstName={'Marty'}
+      lastName={'McFly'}
+      location={'Hill Valley'}
+    />
+  ))
+  .add('isLoading', () => (
     <UserAvatarView
-      photo={photo}
-      firstName="John"
-      lastName="Doe"
-      home={{ city: 'Hometown' }}
+      photo={'https://picsum.photos/400/400/?random'}
+      firstName={'Marty'}
+      lastName={'McFly'}
+      location={'Hill Valley'}
+      isLoading
     />
-  </FlexedView>
-));
+  ));
diff --git a/apolloschurchapp/src/ui/UserAvatarView/index.js b/apolloschurchapp/src/ui/UserAvatarView/index.js
index 5daec23..c13c1c0 100644
--- a/apolloschurchapp/src/ui/UserAvatarView/index.js
+++ b/apolloschurchapp/src/ui/UserAvatarView/index.js
@@ -2,56 +2,65 @@ import React from 'react';
 import PropTypes from 'prop-types';
 import { View } from 'react-native';
 
-import { H4, BodyText } from 'apolloschurchapp/src/ui/typography';
+import { H3 } from 'apolloschurchapp/src/ui/typography';
 import PaddedView from 'apolloschurchapp/src/ui/PaddedView';
 import ConnectedImage from 'apolloschurchapp/src/ui/ConnectedImage';
 import styled from 'apolloschurchapp/src/ui/styled';
+import ChannelLabel from 'apolloschurchapp/src/ui/ChannelLabel';
+import { withIsLoading } from 'apolloschurchapp/src/ui/isLoading';
+
 import AvatarForm from './AvatarForm';
 
-const Container = styled({
-  alignItems: 'center',
-  justifyContent: 'center',
-  overflow: 'hidden',
-})(View);
+const Container = styled(({ theme }) => ({
+  backgroundColor: theme.colors.background.paper,
+  flexDirection: 'row',
+}))(View);
 
-const Content = styled({ alignItems: 'center', justifyContent: 'center' })(
-  PaddedView
-);
-
-const Name = H4;
-const City = BodyText;
+const Content = styled(({ theme }) => ({
+  flex: 1,
+  justifyContent: 'center',
+  paddingVertical: theme.sizing.baseUnit * 0.5,
+}))(PaddedView);
 
-const UserAvatarView = ({
-  photo,
-  firstName,
-  lastName,
-  home,
-  isLoading,
-  refetch,
-  onPhotoPress,
-  setIsUploadingFile,
-  isUploadingFile,
-  ...viewProps
-}) => (
-  // todo: handle file select stuff
-  <Container {...viewProps}>
-    <Content>
-      <AvatarForm photo={photo} refetch={refetch} />
-      <Name>
-        {firstName} {lastName}
-      </Name>
-      {home ? <City>{home.city}</City> : null}
-    </Content>
-  </Container>
+const UserAvatarView = withIsLoading(
+  ({
+    theme,
+    photo,
+    firstName,
+    lastName,
+    location,
+    isLoading,
+    refetch,
+    onPhotoPress,
+    setIsUploadingFile,
+    isUploadingFile,
+    disabled,
+    ...viewProps
+  }) => (
+    // todo: handle file select stuff
+    <Container {...viewProps}>
+      <AvatarForm
+        isLoading={isLoading}
+        text={false}
+        disabled={disabled}
+        photo={photo}
+        refetch={refetch}
+      />
+      <Content>
+        <H3>
+          {firstName} {lastName}
+        </H3>
+        <ChannelLabel icon="pin" label={location || ''} isLoading={isLoading} />
+      </Content>
+    </Container>
+  )
 );
 
 UserAvatarView.propTypes = {
   photo: ConnectedImage.propTypes.source,
   firstName: PropTypes.string,
   lastName: PropTypes.string,
-  home: PropTypes.shape({
-    city: PropTypes.string,
-  }),
+  location: PropTypes.string,
   isLoading: PropTypes.bool,
   refetch: PropTypes.func,
   onPhotoPress: PropTypes.func,
diff --git a/apolloschurchapp/src/ui/theme/defaultTheme.js b/apolloschurchapp/src/ui/theme/defaultTheme.js
index 0ea5632..a2e170a 100644
--- a/apolloschurchapp/src/ui/theme/defaultTheme.js
+++ b/apolloschurchapp/src/ui/theme/defaultTheme.js
@@ -70,8 +70,7 @@ export const breakpoints = {
 // Base sizing units. These are used to scale
 // space, and size components relatively to one another.
 export const sizing = {
-  baseUnit: 20,
-  borderRadius: 6,
+  baseUnit: 16,
   avatar: {
     small: 40,
     medium: 80,
@@ -111,10 +110,10 @@ export const shadows = ({ colors: themeColors }) => ({
         height: 1,
       },
       shadowOpacity: 1,
-      shadowRadius: 3,
+      shadowRadius: 6,
     },
     android: {
-      elevation: 3,
+      elevation: 5,
     },
   },
 });
diff --git a/apolloschurchapp/src/user-settings/ChangePassword.js b/apolloschurchapp/src/user-settings/ChangePassword.js
new file mode 100644
index 0000000..5db5101
--- /dev/null
+++ b/apolloschurchapp/src/user-settings/ChangePassword.js
@@ -0,0 +1,144 @@
+import React, { PureComponent } from 'react';
+import PropTypes from 'prop-types';
+import { ScrollView } from 'react-native';
+import { Mutation } from 'react-apollo';
+import { Formik } from 'formik';
+import * as Yup from 'yup';
+
+import { Text as TextInput } from 'apolloschurchapp/src/ui/inputs';
+import BackgroundView from 'apolloschurchapp/src/ui/BackgroundView';
+import PaddedView from 'apolloschurchapp/src/ui/PaddedView';
+import { ButtonLink } from 'apolloschurchapp/src/ui/Button';
+import { H4 } from 'apolloschurchapp/src/ui/typography';
+import styled from 'apolloschurchapp/src/ui/styled';
+import ActivityIndicator from 'apolloschurchapp/src/ui/ActivityIndicator';
+
+import getAuthToken from '../store/getAuthToken';
+import changePassword from './passwordChange';
+
+const Header = styled(({ theme }) => ({
+  paddingTop: theme.sizing.baseUnit * 1.75,
+  flexDirection: 'row',
+  alignItems: 'flex-end',
+  justifyContent: 'space-between',
+  backgroundColor: theme.colors.background.paper,
+}))(PaddedView);
+
+const SpaceHolder = PaddedView;
+
+const DoneButton = styled(() => ({
+  fontWeight: '800',
+}))(ButtonLink);
+
+class ChangePassword extends PureComponent {
+  static navigationOptions = () => ({
+    title: 'Personal Details',
+  });
+
+  static propTypes = {
+    navigation: PropTypes.shape({
+      getParam: PropTypes.func,
+      navigate: PropTypes.func,
+      goBack: PropTypes.func,
+    }),
+  };
+
+  render() {
+    return (
+      <Mutation
+        mutation={changePassword}
+        update={async (cache, { data: { token } }) => {
+          await cache.writeQuery({
+            query: getAuthToken,
+            data: { authToken: token },
+          });
+
+          await cache.writeData({
+            data: { authToken: token },
+          });
+        }}
+      >
+        {(updatePassword) => (
+          <Formik
+            validationSchema={Yup.object().shape({
+              password: Yup.string()
+                .min(6, 'Password must be at least 6 characters')
+                .required('Password is required'),
+              confirmPassword: Yup.string()
+                .min(6, 'Password must be at least 6 characters')
+                .oneOf([Yup.ref('password')], 'Passwords must match.')
+                .required('Password confirm is required'),
+            })}
+            onSubmit={async (variables, { setSubmitting, setFieldError }) => {
+              try {
+                await updatePassword({ variables });
+
+                await this.props.navigation.goBack();
+              } catch (e) {
+                const { graphQLErrors } = e;
+                if (graphQLErrors.length) {
+                  setFieldError(
+                    'confirmPassword',
+                    'Unknown error. Please try again later.'
+                  );
+                }
+              }
+              setSubmitting(false);
+            }}
+          >
+            {(props) => {
+              if (props.isSubmitting) return <ActivityIndicator />;
+
+              return (
+                <ScrollView>
+                  <Header>
+                    <SpaceHolder />
+                    <H4>Change Password</H4>
+                    {props.dirty &&
+                    props.values.password &&
+                    props.values.confirmPassword ? (
+                      <DoneButton onPress={props.handleSubmit}>Done</DoneButton>
+                    ) : (
+                      <DoneButton
+                        onPress={() => this.props.navigation.goBack()}
+                      >
+                        Back
+                      </DoneButton>
+                    )}
+                  </Header>
+                  <BackgroundView>
+                    <PaddedView>
+                      <TextInput
+                        label="New Password"
+                        type="password"
+                        value={props.values.password}
+                        error={props.touched.password && props.errors.password}
+                        onChangeText={(text) =>
+                          props.setFieldValue('password', text)
+                        }
+                      />
+                      <TextInput
+                        label="Confirm Password"
+                        type="password"
+                        value={props.values.confirmPassword}
+                        error={
+                          props.touched.confirmPassword &&
+                          props.errors.confirmPassword
+                        }
+                        onChangeText={(text) =>
+                          props.setFieldValue('confirmPassword', text)
+                        }
+                      />
+                    </PaddedView>
+                  </BackgroundView>
+                </ScrollView>
+              );
+            }}
+          </Formik>
+        )}
+      </Mutation>
+    );
+  }
+}
+
+export default ChangePassword;
diff --git a/apolloschurchapp/src/user-settings/ChangePassword.tests.js b/apolloschurchapp/src/user-settings/ChangePassword.tests.js
new file mode 100644
index 0000000..3718845
--- /dev/null
+++ b/apolloschurchapp/src/user-settings/ChangePassword.tests.js
@@ -0,0 +1,24 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+import wait from 'waait';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import ChangePassword from './ChangePassword';
+
+describe('Change Password component', () => {
+  it('renders a change password form', async () => {
+    const navigation = {
+      navigate: jest.fn(),
+      getParam: jest.fn(),
+      goBack: jest.fn(),
+    };
+    const tree = renderer.create(
+      <Providers>
+        <ChangePassword navigation={navigation} />
+      </Providers>
+    );
+    await wait(0); // wait for response from graphql
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/user-settings/PersonDetails.tests.js b/apolloschurchapp/src/user-settings/PersonDetails.tests.js
new file mode 100644
index 0000000..b55f57e
--- /dev/null
+++ b/apolloschurchapp/src/user-settings/PersonDetails.tests.js
@@ -0,0 +1,42 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+import wait from 'waait';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import getUserProfile from '../tabs/connect/getUserProfile';
+import PersonalDetails from './PersonalDetails';
+
+describe('PersonalDetails component', () => {
+  it('renders PersonalDetails when logged in', async () => {
+    const mock = {
+      request: {
+        query: getUserProfile,
+      },
+      result: {
+        data: {
+          currentUser: {
+            profile: {
+              firstName: 'Isaac',
+              lastName: 'Hardy',
+              nickName: 'Ike',
+              email: 'isaac.hardy@newspring.cc',
+            },
+          },
+        },
+      },
+    };
+    const navigation = {
+      navigate: jest.fn(),
+      getParam: jest.fn(),
+      goBack: jest.fn(),
+    };
+    const tree = renderer.create(
+      <Providers mocks={[mock]}>
+        <PersonalDetails navigation={navigation} />
+      </Providers>
+    );
+    await wait(0); // wait for response from graphql
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/user-settings/PersonalDetails.js b/apolloschurchapp/src/user-settings/PersonalDetails.js
new file mode 100644
index 0000000..bc3008a
--- /dev/null
+++ b/apolloschurchapp/src/user-settings/PersonalDetails.js
@@ -0,0 +1,196 @@
+import React, { PureComponent } from 'react';
+import PropTypes from 'prop-types';
+import { ScrollView } from 'react-native';
+import { Query, Mutation } from 'react-apollo';
+import { Formik } from 'formik';
+import * as Yup from 'yup';
+
+import { Text as TextInput } from 'apolloschurchapp/src/ui/inputs';
+import BackgroundView from 'apolloschurchapp/src/ui/BackgroundView';
+import PaddedView from 'apolloschurchapp/src/ui/PaddedView';
+import { ButtonLink } from 'apolloschurchapp/src/ui/Button';
+import { H4 } from 'apolloschurchapp/src/ui/typography';
+import styled from 'apolloschurchapp/src/ui/styled';
+import ActivityIndicator from 'apolloschurchapp/src/ui/ActivityIndicator';
+
+import getUserProfile from '../tabs/connect/getUserProfile';
+import updateCurrentUser from './updateCurrentUser';
+
+const Header = styled(({ theme }) => ({
+  paddingTop: theme.sizing.baseUnit * 1.75,
+  paddingRight: theme.sizing.baseUnit,
+  flexDirection: 'row',
+  alignItems: 'flex-end',
+  justifyContent: 'space-between',
+  backgroundColor: theme.colors.background.paper,
+}))(PaddedView);
+
+const SpaceHolder = styled(() => ({}))(PaddedView);
+
+const DoneButton = styled(() => ({
+  fontWeight: '800',
+}))(ButtonLink);
+
+class PersonalDetails extends PureComponent {
+  static navigationOptions = () => ({
+    title: 'Personal Details',
+  });
+
+  static propTypes = {
+    navigation: PropTypes.shape({
+      getParam: PropTypes.func,
+      navigate: PropTypes.func,
+      goBack: PropTypes.func,
+    }),
+  };
+
+  render() {
+    return (
+      <Query query={getUserProfile} fetchPolicy="cache-and-network">
+        {({ data: { currentUser = { profile: {} } } = {} }) => {
+          const { firstName, lastName, email, nickName } = currentUser.profile;
+
+          return (
+            <Mutation
+              mutation={updateCurrentUser}
+              update={async (cache, { data: { updateProfileFields } }) => {
+                await cache.writeQuery({
+                  query: getUserProfile,
+                  data: {
+                    currentUser: {
+                      ...currentUser,
+                      profile: {
+                        ...currentUser.profile,
+                        firstName: updateProfileFields.firstName,
+                        lastName: updateProfileFields.lastName,
+                        email: updateProfileFields.email,
+                        nickName: updateProfileFields.nickName,
+                      },
+                    },
+                  },
+                });
+              }}
+            >
+              {(updateDetails) => (
+                <Formik
+                  initialValues={{ firstName, lastName, email, nickName }}
+                  validationSchema={Yup.object().shape({
+                    firstName: Yup.string().required('First Name is required!'),
+                    lastName: Yup.string().required('Last Name is required!'),
+                    email: Yup.string()
+                      .email('Invalid email address')
+                      .required('Email is required!'),
+                    nickName: Yup.string().required('Nick Name is required!'),
+                  })}
+                  onSubmit={async (
+                    variables,
+                    { setSubmitting, setFieldError }
+                  ) => {
+                    try {
+                      await updateDetails({ variables });
+                      await this.props.navigation.goBack();
+                    } catch (e) {
+                      const { graphQLErrors } = e;
+                      if (
+                        graphQLErrors.length &&
+                        graphQLErrors.find(({ message }) =>
+                          message.includes('User already exists')
+                        )
+                      ) {
+                        setFieldError(
+                          'email',
+                          'There is already a user with this email'
+                        );
+                      } else {
+                        setFieldError(
+                          'email',
+                          'Unknown error. Please try again later.'
+                        );
+                      }
+                    }
+                    setSubmitting(false);
+                  }}
+                >
+                  {(props) => {
+                    if (props.isSubmitting) return <ActivityIndicator />;
+
+                    return (
+                      <ScrollView>
+                        <Header>
+                          <SpaceHolder />
+                          <H4>Personal Details</H4>
+                          {props.dirty ? (
+                            <DoneButton onPress={props.handleSubmit}>
+                              Done
+                            </DoneButton>
+                          ) : (
+                            <DoneButton
+                              onPress={() => this.props.navigation.goBack()}
+                            >
+                              Back
+                            </DoneButton>
+                          )}
+                        </Header>
+                        <BackgroundView>
+                          <PaddedView>
+                            <TextInput
+                              label="Nick Name"
+                              type="text"
+                              value={props.values.nickName}
+                              error={
+                                props.touched.nickName && props.errors.nickName
+                              }
+                              onChangeText={(text) =>
+                                props.setFieldValue('nickName', text)
+                              }
+                            />
+                            <TextInput
+                              label="First Name"
+                              type="text"
+                              value={props.values.firstName}
+                              error={
+                                props.touched.firstName &&
+                                props.errors.firstName
+                              }
+                              onChangeText={(text) =>
+                                props.setFieldValue('firstName', text)
+                              }
+                            />
+                            <TextInput
+                              label="Last Name"
+                              type="text"
+                              value={props.values.lastName}
+                              error={
+                                props.touched.lastName && props.errors.lastName
+                              }
+                              onChangeText={(text) =>
+                                props.setFieldValue('lastName', text)
+                              }
+                            />
+                          </PaddedView>
+                          <PaddedView>
+                            <TextInput
+                              label="Email"
+                              type="email"
+                              value={props.values.email}
+                              error={props.touched.email && props.errors.email}
+                              onChangeText={(text) =>
+                                props.setFieldValue('email', text)
+                              }
+                            />
+                          </PaddedView>
+                        </BackgroundView>
+                      </ScrollView>
+                    );
+                  }}
+                </Formik>
+              )}
+            </Mutation>
+          );
+        }}
+      </Query>
+    );
+  }
+}
+
+export default PersonalDetails;
diff --git a/apolloschurchapp/src/user-settings/UserSettings.tests.js b/apolloschurchapp/src/user-settings/UserSettings.tests.js
new file mode 100644
index 0000000..5cb5377
--- /dev/null
+++ b/apolloschurchapp/src/user-settings/UserSettings.tests.js
@@ -0,0 +1,29 @@
+import React from 'react';
+import renderer from 'react-test-renderer';
+import wait from 'waait';
+
+import Providers from 'apolloschurchapp/src/Providers';
+
+import getLoginState from '../tabs/connect/getLoginState';
+import UserSettings from '.';
+
+describe('UserSettings component', () => {
+  it('renders UserSettings when logged in', async () => {
+    const mock = {
+      request: {
+        query: getLoginState,
+      },
+      result: {
+        data: { isLoggedIn: true },
+      },
+    };
+    const navigation = { navigate: jest.fn(), getParam: jest.fn() };
+    const tree = renderer.create(
+      <Providers mocks={[mock]}>
+        <UserSettings navigation={navigation} />
+      </Providers>
+    );
+    await wait(0); // wait for response from graphql
+    expect(tree).toMatchSnapshot();
+  });
+});
diff --git a/apolloschurchapp/src/user-settings/index.js b/apolloschurchapp/src/user-settings/index.js
new file mode 100644
index 0000000..da76427
--- /dev/null
+++ b/apolloschurchapp/src/user-settings/index.js
@@ -0,0 +1,147 @@
+import React, { PureComponent } from 'react';
+
+import PropTypes from 'prop-types';
+import { Query, Mutation } from 'react-apollo';
+
+import BackgroundView from 'apolloschurchapp/src/ui/BackgroundView';
+import PaddedView from 'apolloschurchapp/src/ui/PaddedView';
+import TableView, {
+  Cell,
+  CellIcon,
+  CellText,
+  Divider,
+} from 'apolloschurchapp/src/ui/TableView';
+import { WebBrowserConsumer } from 'apolloschurchapp/src/ui/WebBrowser';
+import Touchable from 'apolloschurchapp/src/ui/Touchable';
+import AvatarForm from 'apolloschurchapp/src/ui/UserAvatarView/AvatarForm';
+import styled from 'apolloschurchapp/src/ui/styled';
+import ActivityIndicator from 'apolloschurchapp/src/ui/ActivityIndicator';
+import logout from '../auth/logout';
+import getLoginState from '../auth/getLoginState';
+
+const AvatarView = styled({
+  alignItems: 'center',
+  justifyContent: 'center',
+})(PaddedView);
+
+class UserSettings extends PureComponent {
+  static navigationOptions = () => ({
+    title: 'Settings',
+  });
+
+  static propTypes = {
+    navigation: PropTypes.shape({
+      getParam: PropTypes.func,
+      navigate: PropTypes.func,
+    }),
+  };
+
+  render() {
+    return (
+      <Query query={getLoginState}>
+        {({ data: { isLoggedIn = false, loading } }) => {
+          if (loading) return <ActivityIndicator />;
+          if (!isLoggedIn) return null;
+          return (
+            <BackgroundView>
+              <AvatarView>
+                <AvatarForm
+                  text
+                  photo={this.props.navigation.getParam('photo', '')}
+                  refetch={this.props.navigation.getParam('refetch', {})}
+                />
+              </AvatarView>
+              <WebBrowserConsumer>
+                {(openUrl) => (
+                  <BackgroundView>
+                    <TableView>
+                      <Touchable
+                        onPress={async () => {
+                          await this.props.navigation.navigate(
+                            'PersonalDetails'
+                          );
+                        }}
+                      >
+                        <Cell>
+                          <CellText>Personal Details</CellText>
+                          <CellIcon name="arrow-next" />
+                        </Cell>
+                      </Touchable>
+                      <Divider />
+                      <Touchable
+                        onPress={async () => {
+                          await this.props.navigation.navigate(
+                            'ChangePassword'
+                          );
+                        }}
+                      >
+                        <Cell>
+                          <CellText>Change Password</CellText>
+                          <CellIcon name="arrow-next" />
+                        </Cell>
+                      </Touchable>
+                    </TableView>
+                    <TableView>
+                      <Touchable
+                        onPress={() =>
+                          openUrl('https://apollosrock.newspring.cc/')
+                        }
+                      >
+                        <Cell>
+                          <CellText>Give Feedback</CellText>
+                          <CellIcon name="arrow-next" />
+                        </Cell>
+                      </Touchable>
+                    </TableView>
+                    <TableView>
+                      <Touchable
+                        onPress={() =>
+                          openUrl('https://apollosrock.newspring.cc/')
+                        }
+                      >
+                        <Cell>
+                          <CellText>Privacy Policy</CellText>
+                          <CellIcon name="arrow-next" />
+                        </Cell>
+                      </Touchable>
+                      <Divider />
+                      <Touchable
+                        onPress={() =>
+                          openUrl('https://apollosrock.newspring.cc/')
+                        }
+                      >
+                        <Cell>
+                          <CellText>Terms of Use</CellText>
+                          <CellIcon name="arrow-next" />
+                        </Cell>
+                      </Touchable>
+                    </TableView>
+                    <TableView>
+                      <Mutation mutation={logout}>
+                        {(handleLogout) => (
+                          <Touchable
+                            onPress={async () => {
+                              await handleLogout();
+                              await this.props.navigation.navigate('Connect');
+                            }}
+                          >
+                            <Cell>
+                              <CellText>Logout</CellText>
+                              <CellIcon name="arrow-next" />
+                            </Cell>
+                          </Touchable>
+                        )}
+                      </Mutation>
+                    </TableView>
+                  </BackgroundView>
+                )}
+              </WebBrowserConsumer>
+            </BackgroundView>
+          );
+        }}
+      </Query>
+    );
+  }
+}
+
+export default UserSettings;
diff --git a/apolloschurchapp/src/user-settings/passwordChange.js b/apolloschurchapp/src/user-settings/passwordChange.js
new file mode 100644
index 0000000..2bd714a
--- /dev/null
+++ b/apolloschurchapp/src/user-settings/passwordChange.js
@@ -0,0 +1,9 @@
+import gql from 'graphql-tag';
+
+export default gql`
+  mutation changePassword($password: String!) {
+    changePassword(password: $password) {
+      token
+    }
+  }
+`;
diff --git a/apolloschurchapp/src/user-settings/updateCurrentUser.js b/apolloschurchapp/src/user-settings/updateCurrentUser.js
new file mode 100644
index 0000000..a0d156a
--- /dev/null
+++ b/apolloschurchapp/src/user-settings/updateCurrentUser.js
@@ -0,0 +1,25 @@
+import gql from 'graphql-tag';
+
+export default gql`
+  mutation updateDetails(
+    $firstName: String!
+    $lastName: String!
+    $email: String!
+    $nickName: String!
+  ) {
+    updateProfileFields(
+      input: [
+        { field: FirstName, value: $firstName }
+        { field: LastName, value: $lastName }
+        { field: Email, value: $email }
+        { field: NickName, value: $nickName }
+      ]
+    ) {
+      firstName
+      lastName
+      nickName
+      email
+      id
+    }
+  }
+`;
diff --git a/apolloschurchapp/src/utils/content/share.js b/apolloschurchapp/src/utils/content/share.js
index 2d94889..4a52f5c 100644
--- a/apolloschurchapp/src/utils/content/share.js
+++ b/apolloschurchapp/src/utils/content/share.js
@@ -1,22 +1,19 @@
 import { Share } from 'react-native';
 // import { get } from 'lodash';
-// import { track, events } from '@utils/analytics';
+import { track, events } from 'apolloschurchapp/src/analytics';
 // import getSiteLink from './getSiteLink';
 
-const share = ({ title, message, url }) => {
+const share = ({ title, message, url, id = '' }) => {
   Share.share({
     title,
     message,
     url,
   });
 
-  // track(events.Shared, {
-  //   channel: get(content, 'channelName'),
-  //   isLiked: get(content, 'content.isLiked'),
-  //   contentId: get(content, 'id'),
-  //   meta: get(content, 'meta'),
-  //   title: content.title || content.name,
-  // });
+  track({
+    eventName: events.ShareContent,
+    properties: { title, id },
+  });
 };
 
 export default share;
