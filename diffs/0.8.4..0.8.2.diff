diff --git a/apollos-church-api/config.yml b/apollos-church-api/config.yml
index f240612..ef4505b 100644
--- a/apollos-church-api/config.yml
+++ b/apollos-church-api/config.yml
@@ -95,9 +95,6 @@ ROCK_MAPPINGS:
     - 6
     - 8
 
-  CAMPAIGN_CHANNEL_IDS:
-    - 11
-
 # Default mapping of field types -> ids. There's probably no reason to edit this.
 ROCK_CONSTANTS:
   TEXT: 1
diff --git a/apollos-church-api/package.json b/apollos-church-api/package.json
index 2060613..c755a9e 100644
--- a/apollos-church-api/package.json
+++ b/apollos-church-api/package.json
@@ -1,6 +1,6 @@
 {
   "name": "apollos-church-api",
-  "version": "0.8.4",
+  "version": "0.8.2",
   "private": true,
   "main": "lib/index.js",
   "scripts": {
@@ -34,15 +34,15 @@
     ]
   },
   "dependencies": {
-    "@apollosproject/config": "^0.8.4",
-    "@apollosproject/data-connector-analytics": "^0.8.4",
-    "@apollosproject/data-connector-bible": "^0.8.4",
-    "@apollosproject/data-connector-church-online": "^0.8.4",
-    "@apollosproject/data-connector-cloudinary": "^0.8.4",
-    "@apollosproject/data-connector-onesignal": "^0.8.4",
-    "@apollosproject/data-connector-passes": "^0.8.4",
-    "@apollosproject/data-connector-rock": "^0.8.4",
-    "@apollosproject/server-core": "^0.8.4",
+    "@apollosproject/config": "^0.8.2",
+    "@apollosproject/data-connector-analytics": "^0.8.2",
+    "@apollosproject/data-connector-bible": "^0.8.2",
+    "@apollosproject/data-connector-church-online": "^0.8.2",
+    "@apollosproject/data-connector-cloudinary": "^0.8.2",
+    "@apollosproject/data-connector-onesignal": "^0.8.2",
+    "@apollosproject/data-connector-passes": "^0.8.2",
+    "@apollosproject/data-connector-rock": "^0.8.2",
+    "@apollosproject/server-core": "^0.8.2",
     "apollo-server": "^2.0.5",
     "color": "3.0.0",
     "dotenv": "6.0.0",
@@ -51,8 +51,8 @@
     "randomcolor": "0.5.3"
   },
   "devDependencies": {
-    "@apollosproject/apollo-server-env-mock": "^0.8.4",
-    "@apollosproject/babel-preset-apollos": "^0.8.4",
+    "@apollosproject/apollo-server-env-mock": "^0.8.2",
+    "@apollosproject/babel-preset-apollos": "^0.8.2",
     "@babel/cli": "7.1.5",
     "@babel/core": "7.1.6",
     "codecov": "3.0.2",
diff --git a/apolloschurchapp/android/app/build.gradle b/apolloschurchapp/android/app/build.gradle
index 30e9267..65ba95e 100644
--- a/apolloschurchapp/android/app/build.gradle
+++ b/apolloschurchapp/android/app/build.gradle
@@ -117,8 +117,8 @@ android {
         applicationId "com.apolloschurch.app"
         minSdkVersion rootProject.ext.minSdkVersion
         targetSdkVersion rootProject.ext.targetSdkVersion
-        versionCode 8
-        versionName "0.8.3"
+        versionCode 6
+        versionName "0.8.1"
         ndk {
             abiFilters "armeabi-v7a", "x86"
         }
@@ -151,19 +151,10 @@ android {
             }
         }
     }
-    compileOptions {
-        targetCompatibility JavaVersion.VERSION_1_8
-    }
 }
 
 dependencies {
-       // added this and the two google play packages below when upgraded rn-maps to 0.24.2
-    implementation(project(':react-native-maps')){
-      exclude group: 'com.google.android.gms', module: 'play-services-base'
-      exclude group: 'com.google.android.gms', module: 'play-services-maps'
-    }
-    implementation 'com.google.android.gms:play-services-base:10.0.1'
-    implementation 'com.google.android.gms:play-services-maps:10.0.1'
+    implementation project(':react-native-maps')
     implementation project(':rn-fetch-blob')
     implementation project(':react-native-webview')
     implementation project(':react-native-video')
@@ -175,6 +166,7 @@ dependencies {
     implementation project(':react-native-linear-gradient')
     implementation project(':react-native-image-picker')
     implementation project(':react-native-device-info')
+    implementation project(':react-native-custom-tabs')
     implementation project(':react-native-config')
     implementation fileTree(dir: "libs", include: ["*.jar"])
     implementation "com.android.support:appcompat-v7:${rootProject.ext.supportLibVersion}"
diff --git a/apolloschurchapp/android/app/src/main/java/com/apolloschurchapp/MainApplication.java b/apolloschurchapp/android/app/src/main/java/com/apolloschurchapp/MainApplication.java
index aa318e0..2555f80 100644
--- a/apolloschurchapp/android/app/src/main/java/com/apolloschurchapp/MainApplication.java
+++ b/apolloschurchapp/android/app/src/main/java/com/apolloschurchapp/MainApplication.java
@@ -9,12 +9,13 @@ import com.reactnativecommunity.webview.RNCWebViewPackage;
 import com.brentvatne.react.ReactVideoPackage;
 import com.horcrux.svg.SvgPackage;
 import org.devio.rn.splashscreen.SplashScreenReactPackage;
-import com.swmansion.rnscreens.RNScreensPackage;
+import com.swmansion.rnscreens.RNScreenPackage;
 import com.geektime.rnonesignalandroid.ReactNativeOneSignalPackage;
 import com.tanguyantoine.react.MusicControl;
 import com.BV.LinearGradient.LinearGradientPackage;
 import com.imagepicker.ImagePickerPackage;
 import com.learnium.RNDeviceInfo.RNDeviceInfo;
+import com.github.droibit.android.reactnative.customtabs.CustomTabsPackage;
 import com.lugg.ReactNativeConfig.ReactNativeConfigPackage;
 import com.facebook.react.ReactNativeHost;
 import com.facebook.react.ReactPackage;
@@ -42,12 +43,13 @@ public class MainApplication extends Application implements ReactApplication {
             new ReactVideoPackage(),
             new SvgPackage(),
             new SplashScreenReactPackage(),
-            new RNScreensPackage(),
+            new RNScreenPackage(),
             new ReactNativeOneSignalPackage(),
             new MusicControl(),
             new LinearGradientPackage(),
             new ImagePickerPackage(),
             new RNDeviceInfo(),
+            new CustomTabsPackage(),
             new ReactNativeConfigPackage()
       );
     }
diff --git a/apolloschurchapp/android/settings.gradle b/apolloschurchapp/android/settings.gradle
index d705770..d7961bd 100644
--- a/apolloschurchapp/android/settings.gradle
+++ b/apolloschurchapp/android/settings.gradle
@@ -1,6 +1,8 @@
 rootProject.name = 'apolloschurchapp'
 include ':react-native-maps'
 project(':react-native-maps').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-maps/lib/android')
+include ':react-native-maps'
+project(':react-native-maps').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-maps/lib/android')
 include ':rn-fetch-blob'
 project(':rn-fetch-blob').projectDir = new File(rootProject.projectDir, '../node_modules/rn-fetch-blob/android')
 include ':react-native-webview'
@@ -23,6 +25,8 @@ include ':react-native-image-picker'
 project(':react-native-image-picker').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-image-picker/android')
 include ':react-native-device-info'
 project(':react-native-device-info').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-device-info/android')
+include ':react-native-custom-tabs'
+project(':react-native-custom-tabs').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-custom-tabs/android')
 include ':react-native-config'
 project(':react-native-config').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-config/android')
 
diff --git a/apolloschurchapp/ios/apolloschurchapp-tvOS/Info.plist b/apolloschurchapp/ios/apolloschurchapp-tvOS/Info.plist
index 1cd372b..0bbf896 100644
--- a/apolloschurchapp/ios/apolloschurchapp-tvOS/Info.plist
+++ b/apolloschurchapp/ios/apolloschurchapp-tvOS/Info.plist
@@ -15,11 +15,11 @@
 	<key>CFBundlePackageType</key>
 	<string>APPL</string>
 	<key>CFBundleShortVersionString</key>
-	<string>0.8.3</string>
+	<string>0.8.1</string>
 	<key>CFBundleSignature</key>
 	<string>????</string>
 	<key>CFBundleVersion</key>
-	<string>8</string>
+	<string>6</string>
 	<key>LSRequiresIPhoneOS</key>
 	<true />
 	<key>UILaunchStoryboardName</key>
diff --git a/apolloschurchapp/ios/apolloschurchapp-tvOSTests/Info.plist b/apolloschurchapp/ios/apolloschurchapp-tvOSTests/Info.plist
index 9712502..8d51f57 100644
--- a/apolloschurchapp/ios/apolloschurchapp-tvOSTests/Info.plist
+++ b/apolloschurchapp/ios/apolloschurchapp-tvOSTests/Info.plist
@@ -15,10 +15,10 @@
 	<key>CFBundlePackageType</key>
 	<string>BNDL</string>
 	<key>CFBundleShortVersionString</key>
-	<string>0.8.3</string>
+	<string>0.8.1</string>
 	<key>CFBundleSignature</key>
 	<string>????</string>
 	<key>CFBundleVersion</key>
-	<string>8</string>
+	<string>6</string>
 </dict>
 </plist>
diff --git a/apolloschurchapp/ios/apolloschurchapp.xcodeproj/project.pbxproj b/apolloschurchapp/ios/apolloschurchapp.xcodeproj/project.pbxproj
index 73208f4..576d919 100644
--- a/apolloschurchapp/ios/apolloschurchapp.xcodeproj/project.pbxproj
+++ b/apolloschurchapp/ios/apolloschurchapp.xcodeproj/project.pbxproj
@@ -5,6 +5,7 @@
 	};
 	objectVersion = 46;
 	objects = {
+
 /* Begin PBXBuildFile section */
 		00C302E51ABCBA2D00DB3ED1 /* libRCTActionSheet.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 00C302AC1ABCB8CE00DB3ED1 /* libRCTActionSheet.a */; };
 		00C302E71ABCBA2D00DB3ED1 /* libRCTGeolocation.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 00C302BA1ABCB90400DB3ED1 /* libRCTGeolocation.a */; };
@@ -40,6 +41,7 @@
 		2D16E6881FA4F8E400B85C8A /* libReact.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 2D16E6891FA4F8E400B85C8A /* libReact.a */; };
 		2DCD954D1E0B4F2C00145EB5 /* apolloschurchappTests.m in Sources */ = {isa = PBXBuildFile; fileRef = 00E356F21AD99517003FC87E /* apolloschurchappTests.m */; };
 		2DF0FFEE2056DD460020B375 /* libReact.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 3DAD3EA31DF850E9000B6D8A /* libReact.a */; };
+		470A7E49F0A8424780FFAE7B /* libDBCustomTabs.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 9DA3750D49B0422F9A4B45BE /* libDBCustomTabs.a */; };
 		4994C0DA2471456ABE1D0174 /* libRNAirplay.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 0BE434FF7E9549F392208DEF /* libRNAirplay.a */; };
 		4C19EE32F0B441CD93BB0172 /* libRCTOneSignal.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 0D480D95FC7F4569B8B934E3 /* libRCTOneSignal.a */; };
 		578FFEC1D7D54C9B871A9E5B /* Inter-UI-BlackItalic.otf in Resources */ = {isa = PBXBuildFile; fileRef = 5A5A2BC2998547F4816B82E4 /* Inter-UI-BlackItalic.otf */; };
@@ -354,6 +356,13 @@
 			remoteGlobalIDString = 3DF7F6AC203AA09B00D0EAB7;
 			remoteInfo = "ReactNativeConfig-tvOS";
 		};
+		79CEBFEF223011FE00D8F685 /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 6F1D5B192D1D4948B39D4BFE /* ReactNativeCustomTabs.xcodeproj */;
+			proxyType = 2;
+			remoteGlobalIDString = DA7118681CC9158A0087DF95;
+			remoteInfo = DBCustomTabs;
+		};
 		79CEBFF2223011FE00D8F685 /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
 			containerPortal = 3923D6EFF26D4A53B8BDF8C6 /* RNAirplay.xcodeproj */;
@@ -554,12 +563,14 @@
 		63998175DB3B4506ACF27B92 /* ReactNativeConfig.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = ReactNativeConfig.xcodeproj; path = "../node_modules/react-native-config/ios/ReactNativeConfig.xcodeproj"; sourceTree = "<group>"; };
 		63F6EE53A9B44B4388B5F1C2 /* Inter-UI-Italic.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-Italic.otf"; path = "../assets/fonts/Inter-UI-Italic.otf"; sourceTree = "<group>"; };
 		67356E00D116467DA58DF3CC /* libRNSVG-tvOS.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = "libRNSVG-tvOS.a"; sourceTree = "<group>"; };
+		6F1D5B192D1D4948B39D4BFE /* ReactNativeCustomTabs.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = ReactNativeCustomTabs.xcodeproj; path = "../node_modules/react-native-custom-tabs/ios/ReactNativeCustomTabs.xcodeproj"; sourceTree = "<group>"; };
 		74625A1E54234FB7BE12070D /* libMusicControl-tvOS.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = "libMusicControl-tvOS.a"; sourceTree = "<group>"; };
 		78C398B01ACF4ADC00677621 /* RCTLinking.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = RCTLinking.xcodeproj; path = "../node_modules/react-native/Libraries/LinkingIOS/RCTLinking.xcodeproj"; sourceTree = "<group>"; };
 		7A505BEDA0674A7F9DD875ED /* libRNDeviceInfo-tvOS.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = "libRNDeviceInfo-tvOS.a"; sourceTree = "<group>"; };
 		832341B01AAA6A8300B99B32 /* RCTText.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = RCTText.xcodeproj; path = "../node_modules/react-native/Libraries/Text/RCTText.xcodeproj"; sourceTree = "<group>"; };
 		97222E2EB5E54C7FA6104218 /* libReactNativeConfig-tvOS.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = "libReactNativeConfig-tvOS.a"; sourceTree = "<group>"; };
 		9862436C289A498D8B2E6201 /* libAirMaps.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libAirMaps.a; sourceTree = "<group>"; };
+		9DA3750D49B0422F9A4B45BE /* libDBCustomTabs.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libDBCustomTabs.a; sourceTree = "<group>"; };
 		9F0EC3F23A3F4FFBBBC6583A /* libBVLinearGradient.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libBVLinearGradient.a; sourceTree = "<group>"; };
 		A44246D0E44E48C4B8335DBD /* libRNScreens.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libRNScreens.a; sourceTree = "<group>"; };
 		A460FD7884FD4574A818005A /* Inter-UI-MediumItalic.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-MediumItalic.otf"; path = "../assets/fonts/Inter-UI-MediumItalic.otf"; sourceTree = "<group>"; };
@@ -610,6 +621,7 @@
 				139FDEF61B0652A700C62182 /* libRCTWebSocket.a in Frameworks */,
 				4994C0DA2471456ABE1D0174 /* libRNAirplay.a in Frameworks */,
 				A975E0B94A5D44AEB410E546 /* libReactNativeConfig.a in Frameworks */,
+				470A7E49F0A8424780FFAE7B /* libDBCustomTabs.a in Frameworks */,
 				CFE4716D4F6D4ABF9ED485AC /* libRNDeviceInfo.a in Frameworks */,
 				62BCE95D7F6B4F37B3CB4265 /* libRNImagePicker.a in Frameworks */,
 				1E6618B697C649BB9FCD362E /* libBVLinearGradient.a in Frameworks */,
@@ -900,6 +912,14 @@
 			name = Products;
 			sourceTree = "<group>";
 		};
+		79CEBFD1223011FE00D8F685 /* Products */ = {
+			isa = PBXGroup;
+			children = (
+				79CEBFF0223011FE00D8F685 /* libDBCustomTabs.a */,
+			);
+			name = Products;
+			sourceTree = "<group>";
+		};
 		79CEBFD3223011FE00D8F685 /* Products */ = {
 			isa = PBXGroup;
 			children = (
@@ -984,6 +1004,7 @@
 				139FDEE61B06529A00C62182 /* RCTWebSocket.xcodeproj */,
 				3923D6EFF26D4A53B8BDF8C6 /* RNAirplay.xcodeproj */,
 				63998175DB3B4506ACF27B92 /* ReactNativeConfig.xcodeproj */,
+				6F1D5B192D1D4948B39D4BFE /* ReactNativeCustomTabs.xcodeproj */,
 				39E16D6487A34F4D9B8C6EC1 /* RNDeviceInfo.xcodeproj */,
 				629FCAAD128E41B4BAE2BCF4 /* RNImagePicker.xcodeproj */,
 				43F1D28CACD04757A0FB29A6 /* BVLinearGradient.xcodeproj */,
@@ -1151,10 +1172,6 @@
 						CreatedOnToolsVersion = 6.2;
 						TestTargetID = 13B07F861A680F5B00A75B9A;
 					};
-					13B07F861A680F5B00A75B9A = {
-						DevelopmentTeam = 7TM8C6252Z;
-						ProvisioningStyle = Automatic;
-					};
 					2D02E47A1E0B4A5D006451C7 = {
 						CreatedOnToolsVersion = 8.2.1;
 						ProvisioningStyle = Automatic;
@@ -1171,7 +1188,6 @@
 			developmentRegion = English;
 			hasScannedForEncodings = 0;
 			knownRegions = (
-				English,
 				en,
 				Base,
 			);
@@ -1251,6 +1267,10 @@
 					ProductGroup = 79CEBFCF223011FE00D8F685 /* Products */;
 					ProjectRef = 63998175DB3B4506ACF27B92 /* ReactNativeConfig.xcodeproj */;
 				},
+				{
+					ProductGroup = 79CEBFD1223011FE00D8F685 /* Products */;
+					ProjectRef = 6F1D5B192D1D4948B39D4BFE /* ReactNativeCustomTabs.xcodeproj */;
+				},
 				{
 					ProductGroup = 79CEBFCD223011FE00D8F685 /* Products */;
 					ProjectRef = 3923D6EFF26D4A53B8BDF8C6 /* RNAirplay.xcodeproj */;
@@ -1569,6 +1589,13 @@
 			remoteRef = 79CEBFEC223011FE00D8F685 /* PBXContainerItemProxy */;
 			sourceTree = BUILT_PRODUCTS_DIR;
 		};
+		79CEBFF0223011FE00D8F685 /* libDBCustomTabs.a */ = {
+			isa = PBXReferenceProxy;
+			fileType = archive.ar;
+			path = libDBCustomTabs.a;
+			remoteRef = 79CEBFEF223011FE00D8F685 /* PBXContainerItemProxy */;
+			sourceTree = BUILT_PRODUCTS_DIR;
+		};
 		79CEBFF3223011FE00D8F685 /* libRNAirplay.a */ = {
 			isa = PBXReferenceProxy;
 			fileType = archive.ar;
@@ -1870,6 +1897,7 @@
 					"$(inherited)",
 					"$(SRCROOT)/../node_modules/react-native-airplay-btn/ios",
 					"$(SRCROOT)/../node_modules/react-native-config/ios/ReactNativeConfig",
+					"$(SRCROOT)/../node_modules/react-native-custom-tabs/ios/ReactNativeCustomTabs",
 					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
 					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
 					"$(SRCROOT)/../node_modules/react-native-linear-gradient/BVLinearGradient",
@@ -1890,6 +1918,7 @@
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @loader_path/Frameworks";
 				LIBRARY_SEARCH_PATHS = (
 					"$(inherited)",
+					"\"$(SRCROOT)/$(TARGET_NAME)\"",
 				);
 				OTHER_LDFLAGS = (
 					"-ObjC",
@@ -1910,6 +1939,7 @@
 					"$(inherited)",
 					"$(SRCROOT)/../node_modules/react-native-airplay-btn/ios",
 					"$(SRCROOT)/../node_modules/react-native-config/ios/ReactNativeConfig",
+					"$(SRCROOT)/../node_modules/react-native-custom-tabs/ios/ReactNativeCustomTabs",
 					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
 					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
 					"$(SRCROOT)/../node_modules/react-native-linear-gradient/BVLinearGradient",
@@ -1930,6 +1960,7 @@
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @loader_path/Frameworks";
 				LIBRARY_SEARCH_PATHS = (
 					"$(inherited)",
+					"\"$(SRCROOT)/$(TARGET_NAME)\"",
 				);
 				OTHER_LDFLAGS = (
 					"-ObjC",
@@ -1945,13 +1976,13 @@
 			isa = XCBuildConfiguration;
 			buildSettings = {
 				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
-				CURRENT_PROJECT_VERSION = 4;
+				CURRENT_PROJECT_VERSION = 2;
 				DEAD_CODE_STRIPPING = NO;
-				DEVELOPMENT_TEAM = 7TM8C6252Z;
 				HEADER_SEARCH_PATHS = (
 					"$(inherited)",
 					"$(SRCROOT)/../node_modules/react-native-airplay-btn/ios",
 					"$(SRCROOT)/../node_modules/react-native-config/ios/ReactNativeConfig",
+					"$(SRCROOT)/../node_modules/react-native-custom-tabs/ios/ReactNativeCustomTabs",
 					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
 					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
 					"$(SRCROOT)/../node_modules/react-native-linear-gradient/BVLinearGradient",
@@ -1976,7 +2007,6 @@
 				);
 				PRODUCT_BUNDLE_IDENTIFIER = "org.reactjs.native.example.$(PRODUCT_NAME:rfc1034identifier)";
 				PRODUCT_NAME = apolloschurchapp;
-				PROVISIONING_PROFILE_SPECIFIER = "";
 				VERSIONING_SYSTEM = "apple-generic";
 			};
 			name = Debug;
@@ -1985,11 +2015,12 @@
 			isa = XCBuildConfiguration;
 			buildSettings = {
 				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
-				CURRENT_PROJECT_VERSION = 4;
+				CURRENT_PROJECT_VERSION = 2;
 				HEADER_SEARCH_PATHS = (
 					"$(inherited)",
 					"$(SRCROOT)/../node_modules/react-native-airplay-btn/ios",
 					"$(SRCROOT)/../node_modules/react-native-config/ios/ReactNativeConfig",
+					"$(SRCROOT)/../node_modules/react-native-custom-tabs/ios/ReactNativeCustomTabs",
 					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
 					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
 					"$(SRCROOT)/../node_modules/react-native-linear-gradient/BVLinearGradient",
@@ -2014,7 +2045,6 @@
 				);
 				PRODUCT_BUNDLE_IDENTIFIER = "org.reactjs.native.example.$(PRODUCT_NAME:rfc1034identifier)";
 				PRODUCT_NAME = apolloschurchapp;
-				PROVISIONING_PROFILE_SPECIFIER = "";
 				VERSIONING_SYSTEM = "apple-generic";
 			};
 			name = Release;
@@ -2035,6 +2065,7 @@
 					"$(inherited)",
 					"$(SRCROOT)/../node_modules/react-native-airplay-btn/ios",
 					"$(SRCROOT)/../node_modules/react-native-config/ios/ReactNativeConfig",
+					"$(SRCROOT)/../node_modules/react-native-custom-tabs/ios/ReactNativeCustomTabs",
 					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
 					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
 					"$(SRCROOT)/../node_modules/react-native-linear-gradient/BVLinearGradient",
@@ -2054,6 +2085,7 @@
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
 				LIBRARY_SEARCH_PATHS = (
 					"$(inherited)",
+					"\"$(SRCROOT)/$(TARGET_NAME)\"",
 				);
 				OTHER_LDFLAGS = (
 					"-ObjC",
@@ -2083,6 +2115,7 @@
 					"$(inherited)",
 					"$(SRCROOT)/../node_modules/react-native-airplay-btn/ios",
 					"$(SRCROOT)/../node_modules/react-native-config/ios/ReactNativeConfig",
+					"$(SRCROOT)/../node_modules/react-native-custom-tabs/ios/ReactNativeCustomTabs",
 					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
 					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
 					"$(SRCROOT)/../node_modules/react-native-linear-gradient/BVLinearGradient",
@@ -2102,6 +2135,7 @@
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
 				LIBRARY_SEARCH_PATHS = (
 					"$(inherited)",
+					"\"$(SRCROOT)/$(TARGET_NAME)\"",
 				);
 				OTHER_LDFLAGS = (
 					"-ObjC",
@@ -2130,6 +2164,7 @@
 					"$(inherited)",
 					"$(SRCROOT)/../node_modules/react-native-airplay-btn/ios",
 					"$(SRCROOT)/../node_modules/react-native-config/ios/ReactNativeConfig",
+					"$(SRCROOT)/../node_modules/react-native-custom-tabs/ios/ReactNativeCustomTabs",
 					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
 					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
 					"$(SRCROOT)/../node_modules/react-native-linear-gradient/BVLinearGradient",
@@ -2149,6 +2184,7 @@
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @loader_path/Frameworks";
 				LIBRARY_SEARCH_PATHS = (
 					"$(inherited)",
+					"\"$(SRCROOT)/$(TARGET_NAME)\"",
 				);
 				OTHER_LDFLAGS = (
 					"-ObjC",
@@ -2177,6 +2213,7 @@
 					"$(inherited)",
 					"$(SRCROOT)/../node_modules/react-native-airplay-btn/ios",
 					"$(SRCROOT)/../node_modules/react-native-config/ios/ReactNativeConfig",
+					"$(SRCROOT)/../node_modules/react-native-custom-tabs/ios/ReactNativeCustomTabs",
 					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
 					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
 					"$(SRCROOT)/../node_modules/react-native-linear-gradient/BVLinearGradient",
@@ -2196,6 +2233,7 @@
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @loader_path/Frameworks";
 				LIBRARY_SEARCH_PATHS = (
 					"$(inherited)",
+					"\"$(SRCROOT)/$(TARGET_NAME)\"",
 				);
 				OTHER_LDFLAGS = (
 					"-ObjC",
diff --git a/apolloschurchapp/ios/apolloschurchapp/Base.lproj/LaunchScreen.xib b/apolloschurchapp/ios/apolloschurchapp/Base.lproj/LaunchScreen.xib
index 4ca705c..035b378 100644
--- a/apolloschurchapp/ios/apolloschurchapp/Base.lproj/LaunchScreen.xib
+++ b/apolloschurchapp/ios/apolloschurchapp/Base.lproj/LaunchScreen.xib
@@ -1,11 +1,11 @@
 <?xml version="1.0" encoding="UTF-8"?>
-<document type="com.apple.InterfaceBuilder3.CocoaTouch.XIB" version="3.0" toolsVersion="14490.70" targetRuntime="iOS.CocoaTouch" propertyAccessControl="none" useAutolayout="YES" launchScreen="YES" useTraitCollections="YES" colorMatched="YES">
+<document type="com.apple.InterfaceBuilder3.CocoaTouch.XIB" version="3.0" toolsVersion="14113" targetRuntime="iOS.CocoaTouch" propertyAccessControl="none" useAutolayout="YES" launchScreen="YES" useTraitCollections="YES" colorMatched="YES">
     <device id="retina5_5" orientation="portrait">
         <adaptation id="fullscreen"/>
     </device>
     <dependencies>
         <deployment identifier="iOS"/>
-        <plugIn identifier="com.apple.InterfaceBuilder.IBCocoaTouchPlugin" version="14490.49"/>
+        <plugIn identifier="com.apple.InterfaceBuilder.IBCocoaTouchPlugin" version="14088"/>
         <capability name="documents saved in the Xcode 8 format" minToolsVersion="8.0"/>
     </dependencies>
     <objects>
@@ -15,22 +15,18 @@
             <rect key="frame" x="0.0" y="0.0" width="414" height="736"/>
             <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
             <subviews>
-                <imageView clipsSubviews="YES" userInteractionEnabled="NO" contentMode="scaleToFill" horizontalHuggingPriority="251" verticalHuggingPriority="251" fixedFrame="YES" image="splash_bg" translatesAutoresizingMaskIntoConstraints="NO" id="iGM-E3-lqn">
-                    <rect key="frame" x="-12" y="-10" width="437" height="758"/>
-                    <autoresizingMask key="autoresizingMask" flexibleMinX="YES" widthSizable="YES" flexibleMaxX="YES" flexibleMinY="YES" heightSizable="YES" flexibleMaxY="YES"/>
-                </imageView>
                 <imageView userInteractionEnabled="NO" contentMode="scaleAspectFit" horizontalHuggingPriority="251" verticalHuggingPriority="251" fixedFrame="YES" image="splash-icon" translatesAutoresizingMaskIntoConstraints="NO" id="6Je-Yv-1Zj">
                     <rect key="frame" x="157" y="288" width="100" height="100"/>
                     <autoresizingMask key="autoresizingMask" flexibleMinX="YES" widthSizable="YES" flexibleMaxX="YES" flexibleMinY="YES" heightSizable="YES" flexibleMaxY="YES"/>
                 </imageView>
             </subviews>
+            <color key="backgroundColor" red="0.0" green="0.40392156862745099" blue="0.42745098039215684" alpha="1" colorSpace="custom" customColorSpace="sRGB"/>
             <nil key="simulatedStatusBarMetrics"/>
             <modalPageSheetSimulatedSizeMetrics key="simulatedDestinationMetrics"/>
-            <point key="canvasLocation" x="544.92753623188412" y="453.26086956521743"/>
+            <point key="canvasLocation" x="546" y="454"/>
         </view>
     </objects>
     <resources>
         <image name="splash-icon" width="94" height="99"/>
-        <image name="splash_bg" width="721" height="721"/>
     </resources>
-</document>
+</document>
\ No newline at end of file
diff --git a/apolloschurchapp/ios/apolloschurchapp/Images.xcassets/Contents.json b/apolloschurchapp/ios/apolloschurchapp/Images.xcassets/Contents.json
index da4a164..2d92bd5 100644
--- a/apolloschurchapp/ios/apolloschurchapp/Images.xcassets/Contents.json
+++ b/apolloschurchapp/ios/apolloschurchapp/Images.xcassets/Contents.json
@@ -3,4 +3,4 @@
     "version" : 1,
     "author" : "xcode"
   }
-}
\ No newline at end of file
+}
diff --git a/apolloschurchapp/ios/apolloschurchapp/Images.xcassets/splash_bg.imageset/Contents.json b/apolloschurchapp/ios/apolloschurchapp/Images.xcassets/splash_bg.imageset/Contents.json
deleted file mode 100644
index 8939b14..0000000
--- a/apolloschurchapp/ios/apolloschurchapp/Images.xcassets/splash_bg.imageset/Contents.json
+++ /dev/null
@@ -1,21 +0,0 @@
-{
-  "images" : [
-    {
-      "idiom" : "universal",
-      "filename" : "splash_bg.png",
-      "scale" : "1x"
-    },
-    {
-      "idiom" : "universal",
-      "scale" : "2x"
-    },
-    {
-      "idiom" : "universal",
-      "scale" : "3x"
-    }
-  ],
-  "info" : {
-    "version" : 1,
-    "author" : "xcode"
-  }
-}
\ No newline at end of file
diff --git a/apolloschurchapp/ios/apolloschurchapp/Images.xcassets/splash_bg.imageset/splash_bg.png b/apolloschurchapp/ios/apolloschurchapp/Images.xcassets/splash_bg.imageset/splash_bg.png
deleted file mode 100644
index 315d8e09ac4fd5f51176da24982baad2115fa027..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 11471
zcmeAS@N?(olHy`uVBq!ia0y~yV7dsx9Be?5xhMa#GcYJHc)B=-RK&f#rYOYZDB^tZ
z=H*2eyj_=_M49$pT<`AhvTNUo(sMs$`WYCRSU3a}92yuJZ!=xbcd?(ho!L$Z#0N`w
zaPNsf-r*PD@CmAlk!f>-pzUN%uojS#E37>)ezCsrhiXtT;Fh>(JQHrLL+pW$b@2`V
zMzsTjWHjhTlg((B87(fLrQ>K(Ia*BsYueE&a<q8>Zf}h?4@R2@qs@cS=D}$5V6+!G
z+Jgqw1*1))(WcR8(`a<S4K^M*I@mZm&<Yw!9vwLu9XT0o9*j<`KxVE+Css!1<G|(N
zX!BsSc`({MK+L~8to{|vz`)Z5S_?2*U5-|lqt)eTQ(?5JFxpfYU9vU0Ty1m|WptS$
xWKrhmB+KX|3r!|j{weR`TWF71VC?vS+x%;O<pqA37~n!>22WQ%mvv4FO#m9H?QQ@7

diff --git a/apolloschurchapp/ios/apolloschurchapp/Info.plist b/apolloschurchapp/ios/apolloschurchapp/Info.plist
index 4129214..372eb80 100644
--- a/apolloschurchapp/ios/apolloschurchapp/Info.plist
+++ b/apolloschurchapp/ios/apolloschurchapp/Info.plist
@@ -2,6 +2,15 @@
 <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
 <plist version="1.0">
 <dict>
+	<key>CFBundleURLTypes</key>
+	<array>
+		<dict>
+			<key>CFBundleURLSchemes</key>
+			<array>
+				<string>apolloschurchapp</string>
+			</array>
+		</dict>
+	</array>
 	<key>CFBundleDevelopmentRegion</key>
 	<string>en</string>
 	<key>CFBundleDisplayName</key>
@@ -17,24 +26,33 @@
 	<key>CFBundlePackageType</key>
 	<string>APPL</string>
 	<key>CFBundleShortVersionString</key>
-	<string>0.8.3</string>
+	<string>0.8.1</string>
 	<key>CFBundleSignature</key>
 	<string>????</string>
-	<key>CFBundleURLTypes</key>
-	<array>
-		<dict>
-			<key>CFBundleURLSchemes</key>
-			<array>
-				<string>apolloschurchapp</string>
-			</array>
-		</dict>
-	</array>
 	<key>CFBundleVersion</key>
-	<string>9</string>
+	<string>7</string>
 	<key>ITSAppUsesNonExemptEncryption</key>
 	<false />
 	<key>LSRequiresIPhoneOS</key>
 	<true />
+	<key>NSLocationWhenInUseUsageDescription</key>
+	<string />
+	<key>UILaunchStoryboardName</key>
+	<string>LaunchScreen</string>
+	<key>UIRequiredDeviceCapabilities</key>
+	<array>
+		<string>armv7</string>
+	</array>
+	<key>UIStatusBarStyle</key>
+	<string>UIStatusBarStyleLightContent</string>
+	<key>UISupportedInterfaceOrientations</key>
+	<array>
+		<string>UIInterfaceOrientationPortrait</string>
+		<string>UIInterfaceOrientationLandscapeLeft</string>
+		<string>UIInterfaceOrientationLandscapeRight</string>
+	</array>
+	<key>UIViewControllerBasedStatusBarAppearance</key>
+	<false />
 	<key>NSAppTransportSecurity</key>
 	<dict>
 		<key>NSAllowsArbitraryLoads</key>
@@ -53,16 +71,6 @@
 			</dict>
 		</dict>
 	</dict>
-	<key>NSCameraUsageDescription</key>
-	<string>$(PRODUCT_NAME) would like to use your camera (for uploading profile pictures)</string>
-	<key>NSLocationWhenInUseUsageDescription</key>
-	<string />
-	<key>NSMicrophoneUsageDescription</key>
-	<string>$(PRODUCT_NAME) would like to your microphone (for videos)</string>
-	<key>NSPhotoLibraryAddUsageDescription</key>
-	<string>$(PRODUCT_NAME) would like to save photos to your photo gallery (for uploading profile pictures)</string>
-	<key>NSPhotoLibraryUsageDescription</key>
-	<string>$(PRODUCT_NAME) would like access to your photo gallery (for uploading profile pictures)</string>
 	<key>UIAppFonts</key>
 	<array>
 		<string>DroidSerif-Bold.ttf</string>
@@ -78,21 +86,13 @@
 		<string>Inter-UI-MediumItalic.otf</string>
 		<string>Inter-UI-Regular.otf</string>
 	</array>
-	<key>UILaunchStoryboardName</key>
-	<string>LaunchScreen</string>
-	<key>UIRequiredDeviceCapabilities</key>
-	<array>
-		<string>armv7</string>
-	</array>
-	<key>UIStatusBarStyle</key>
-	<string>UIStatusBarStyleLightContent</string>
-	<key>UISupportedInterfaceOrientations</key>
-	<array>
-		<string>UIInterfaceOrientationPortrait</string>
-		<string>UIInterfaceOrientationLandscapeLeft</string>
-		<string>UIInterfaceOrientationLandscapeRight</string>
-	</array>
-	<key>UIViewControllerBasedStatusBarAppearance</key>
-	<false />
+	<key>NSPhotoLibraryUsageDescription</key>
+	<string>$(PRODUCT_NAME) would like access to your photo gallery (for uploading profile pictures)</string>
+	<key>NSCameraUsageDescription</key>
+	<string>$(PRODUCT_NAME) would like to use your camera (for uploading profile pictures)</string>
+	<key>NSPhotoLibraryAddUsageDescription</key>
+	<string>$(PRODUCT_NAME) would like to save photos to your photo gallery (for uploading profile pictures)</string>
+	<key>NSMicrophoneUsageDescription</key>
+	<string>$(PRODUCT_NAME) would like to your microphone (for videos)</string>
 </dict>
 </plist>
diff --git a/apolloschurchapp/ios/apolloschurchappTests/Info.plist b/apolloschurchapp/ios/apolloschurchappTests/Info.plist
index 11b84fb..6addde1 100644
--- a/apolloschurchapp/ios/apolloschurchappTests/Info.plist
+++ b/apolloschurchapp/ios/apolloschurchappTests/Info.plist
@@ -15,10 +15,10 @@
 	<key>CFBundlePackageType</key>
 	<string>BNDL</string>
 	<key>CFBundleShortVersionString</key>
-	<string>0.8.3</string>
+	<string>0.8.1</string>
 	<key>CFBundleSignature</key>
 	<string>????</string>
 	<key>CFBundleVersion</key>
-	<string>8</string>
+	<string>6</string>
 </dict>
 </plist>
diff --git a/apolloschurchapp/jest.setup.js b/apolloschurchapp/jest.setup.js
index fcdc84a..d23ceca 100644
--- a/apolloschurchapp/jest.setup.js
+++ b/apolloschurchapp/jest.setup.js
@@ -1,15 +1,11 @@
-// We ran into an issue where SafeAreaView would break jest tests.
-jest.mock('react-navigation', () => {
-  const ActualNavigation = require.requireActual('react-navigation');
-  return {
-    ...ActualNavigation,
-    SafeAreaView: require.requireActual('SafeAreaView'),
-  };
-});
-
 jest.mock('react-native-config', () => ({
   ONE_SIGNAL_KEY: 'doesntmatter',
 }));
+jest.mock('react-native-custom-tabs', () => ({
+  CustomTabs: {
+    openURL: jest.fn(),
+  },
+}));
 jest.mock('Animated', () => {
   const ActualAnimated = require.requireActual('Animated');
   return {
diff --git a/apolloschurchapp/package.json b/apolloschurchapp/package.json
index ab1938f..864c3cb 100644
--- a/apolloschurchapp/package.json
+++ b/apolloschurchapp/package.json
@@ -1,6 +1,6 @@
 {
   "name": "apolloschurchapp",
-  "version": "0.8.4",
+  "version": "0.8.2",
   "private": true,
   "devDependencies": {
     "@storybook/addon-actions": "4.1.16",
@@ -61,10 +61,10 @@
     ]
   },
   "dependencies": {
-    "@apollosproject/ui-analytics": "^0.8.4",
-    "@apollosproject/ui-auth": "^0.8.4",
-    "@apollosproject/ui-kit": "^0.8.4",
-    "@apollosproject/ui-passes": "^0.8.4",
+    "@apollosproject/ui-analytics": "^0.8.2",
+    "@apollosproject/ui-auth": "^0.8.2",
+    "@apollosproject/ui-kit": "^0.8.2",
+    "@apollosproject/ui-passes": "^0.8.2",
     "apollo-cache-inmemory": "1.5.1",
     "apollo-cache-persist": "0.1.1",
     "apollo-client": "2.5.1",
@@ -95,24 +95,25 @@
     "react-native": "0.58.5",
     "react-native-airplay-btn": "^1.0.6",
     "react-native-config": "^0.11.7",
+    "react-native-custom-tabs": "0.1.7",
     "react-native-device-info": "0.22.5",
-    "react-native-image-picker": "0.28.0",
+    "react-native-image-picker": "0.26.10",
     "react-native-keyboard-aware-scroll-view": "0.7.0",
     "react-native-linear-gradient": "2.5.3",
-    "react-native-maps": "^0.24.2",
-    "react-native-music-control": "^0.10.2",
+    "react-native-maps": "^0.23.0",
+    "react-native-music-control": "0.7.3",
     "react-native-onesignal": "3.2.7",
     "react-native-passkit-wallet": "^0.1.4",
     "react-native-safari-view": "2.1.0",
     "react-native-safe-area-view": "0.13.1",
-    "react-native-screens": "^1.0.0-alpha.22",
+    "react-native-screens": "1.0.0-alpha.12",
     "react-native-splash-screen": "^3.1.1",
     "react-native-svg": "9.2.4",
     "react-native-swiper": "^1.5.14",
-    "react-native-video": "^4.4.1",
+    "react-native-video": "3.2.0",
     "react-native-video-controls": "2.2.3",
     "react-native-webview": "^5.2.0",
-    "react-navigation": "2.14.0",
+    "react-navigation": "2.11.2",
     "react-navigation-tabs": "0.6.0",
     "recompose": "^0.30.0",
     "rn-fetch-blob": "^0.10.15",
diff --git a/apolloschurchapp/src/LandingScreen.js b/apolloschurchapp/src/LandingScreen.js
deleted file mode 100644
index 52dde4b..0000000
--- a/apolloschurchapp/src/LandingScreen.js
+++ /dev/null
@@ -1,33 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-import { styled, GradientOverlayImage } from '@apollosproject/ui-kit';
-
-import ApollosLandingScreen from './ui/LandingScreen';
-
-const FullScreenImage = styled({
-  resizeMode: 'cover',
-  position: 'absolute',
-})(GradientOverlayImage);
-
-const LandingScreen = ({ navigation }) => (
-  <ApollosLandingScreen
-    onPressPrimary={() => navigation.push('Auth')}
-    textColor={'white'}
-    BackgroundComponent={
-      <FullScreenImage source={'https://picsum.photos/375/812/?random'} />
-    }
-    primaryNavText={"Let's go!"}
-  />
-);
-
-LandingScreen.navigationOptions = {
-  header: null,
-};
-
-LandingScreen.propTypes = {
-  navigation: PropTypes.shape({
-    push: PropTypes.func,
-  }),
-};
-
-export default LandingScreen;
diff --git a/apolloschurchapp/src/Providers.js b/apolloschurchapp/src/Providers.js
index 2f9bd73..14319d1 100644
--- a/apolloschurchapp/src/Providers.js
+++ b/apolloschurchapp/src/Providers.js
@@ -13,7 +13,7 @@ const AppProviders = (props) => (
         navigateToAuth={() => NavigationService.navigate('Auth')}
         closeAuth={() => NavigationService.navigate('Onboarding')}
       >
-        <AnalyticsProvider>
+        <AnalyticsProvider trackFunctions={[console.warn]}>
           <Providers {...props} />
         </AnalyticsProvider>
       </AuthProvider>
diff --git a/apolloschurchapp/src/client/index.js b/apolloschurchapp/src/client/index.js
index c473190..4a13cb8 100644
--- a/apolloschurchapp/src/client/index.js
+++ b/apolloschurchapp/src/client/index.js
@@ -3,6 +3,7 @@ import PropTypes from 'prop-types';
 import { ApolloProvider } from 'react-apollo';
 import { ApolloClient } from 'apollo-client';
 import { ApolloLink } from 'apollo-link';
+import SplashScreen from 'react-native-splash-screen';
 
 import { authLink } from '@apollosproject/ui-auth';
 import { resolvers, schema, defaults } from '../store';
@@ -41,6 +42,7 @@ class ClientProvider extends PureComponent {
     } catch (e) {
       throw e;
     } finally {
+      if (SplashScreen && SplashScreen.hide) SplashScreen.hide();
       client.mutate({ mutation: MARK_CACHE_LOADED });
     }
   }
diff --git a/apolloschurchapp/src/index.js b/apolloschurchapp/src/index.js
index 3558249..e479b43 100644
--- a/apolloschurchapp/src/index.js
+++ b/apolloschurchapp/src/index.js
@@ -1,7 +1,7 @@
 import React from 'react';
 import { StatusBar } from 'react-native';
 import { createStackNavigator } from 'react-navigation';
-import SplashScreen from 'react-native-splash-screen';
+// import { Sentry } from 'react-native-sentry';
 
 import { BackgroundView, withTheme } from '@apollosproject/ui-kit';
 import Passes from '@apollosproject/ui-passes';
@@ -16,24 +16,20 @@ import PersonalDetails from './user-settings/PersonalDetails';
 import ChangePassword from './user-settings/ChangePassword';
 import Location from './user-settings/Locations';
 import { LocationFinderMapView } from './ui/Onboarding/slides/LocationFinder';
-import LandingScreen from './LandingScreen';
 import UserWebBrowser from './user-web-browser';
-import Onboarding from './ui/Onboarding';
+import Onboarding from './onboarding';
+// Sentry.config(
+//   'https://5908fa19ed37447f86b2717423cadec5:45dd3b58792b413cb67109c5e63a0bb7@sentry.io/1241658'
+// ).install();
 
 const AppStatusBar = withTheme(({ theme }) => ({
   barStyle: 'dark-content',
   backgroundColor: theme.colors.paper,
 }))(StatusBar);
 
-const ProtectedRouteWithSplashScreen = (props) => {
-  const handleOnRouteChange = () => SplashScreen.hide();
-
-  return <ProtectedRoute {...props} onRouteChange={handleOnRouteChange} />;
-};
-
 const AppNavigator = createStackNavigator(
   {
-    ProtectedRoute: ProtectedRouteWithSplashScreen,
+    ProtectedRoute,
     Tabs,
     ContentSingle,
     Auth,
@@ -44,7 +40,6 @@ const AppNavigator = createStackNavigator(
     Passes,
     UserWebBrowser,
     Onboarding,
-    LandingScreen,
   },
   {
     initialRouteName: 'ProtectedRoute',
diff --git a/apolloschurchapp/src/onboarding/index.js b/apolloschurchapp/src/onboarding/index.js
new file mode 100644
index 0000000..f447f8a
--- /dev/null
+++ b/apolloschurchapp/src/onboarding/index.js
@@ -0,0 +1,14 @@
+import React, { PureComponent } from 'react';
+import Onboarding from 'apolloschurchapp/src/ui/Onboarding';
+
+export default class TestingControlPanel extends PureComponent {
+  static navigationOptions = () => ({
+    title: 'Onboarding',
+    header: null,
+    gesturesEnabled: false,
+  });
+
+  render() {
+    return <Onboarding {...this.props} />;
+  }
+}
diff --git a/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeaderConnected.js b/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeaderConnected.js
index 397a879..1ab8d26 100644
--- a/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeaderConnected.js
+++ b/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeaderConnected.js
@@ -1,7 +1,6 @@
 import React from 'react';
 import { Query } from 'react-apollo';
 import PropTypes from 'prop-types';
-import { get } from 'lodash';
 
 import getUserProfile from '../getUserProfile';
 import UserAvatarHeader from './UserAvatarHeader';
@@ -11,7 +10,9 @@ const UserAvatarHeaderConnected = ({ navigation }) => (
     {({
       data: {
         currentUser: {
-          profile: { photo, firstName, lastName, campus } = {},
+          profile: { photo, firstName, lastName, campus: { name } } = {
+            campus: {},
+          },
         } = {},
       } = {},
       refetch,
@@ -19,7 +20,7 @@ const UserAvatarHeaderConnected = ({ navigation }) => (
       <UserAvatarHeader
         firstName={firstName}
         lastName={lastName}
-        location={get(campus, 'name')}
+        location={name}
         photo={photo}
         refetch={refetch}
         navigation={navigation}
diff --git a/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeaderConnected.tests.js b/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeaderConnected.tests.js
index b4bad0c..e0a8488 100644
--- a/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeaderConnected.tests.js
+++ b/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeaderConnected.tests.js
@@ -1,5 +1,6 @@
 import React from 'react';
-import { renderWithApolloData } from 'apolloschurchapp/src/utils/testUtils';
+import renderer from 'react-test-renderer';
+import wait from 'waait';
 
 import Providers from 'apolloschurchapp/src/Providers';
 
@@ -15,37 +16,16 @@ describe('user avatar header connect', () => {
       result: {
         data: {
           currentUser: {
-            __typename: 'AuthenticatedUser',
-            id: 'AuthenticatedUser:123',
+            id: 'AuthenticatedUser:057b0758543270d1cb21784cac4d3f5c',
             profile: {
-              id: 'Person:123',
-              __typename: 'Person',
-              gender: 'Male',
-              birthDate: '1980-02-10T00:00:00',
               firstName: 'Isaac',
               lastName: 'Hardy',
-              campus: {
-                __typename: 'Campus',
-                id: 'Campus:a0f64573eabf00a607bec911794d50fb',
-                name: 'Chicago Campus',
-                latitude: 42.09203,
-                longitude: -88.13289,
-                distanceFromLocation: null,
-                street1: '67 Algonquin Rd',
-                street2: '',
-                city: 'South Barrington',
-                state: 'IL',
-                postalCode: '60010-6143',
-                image: {
-                  __typename: 'ImageMediaSource',
-                  uri: 'https://picsum.photos/300/300/?random',
-                },
-              },
+              location: 'Anderson, SC',
               email: 'isaac.hardy@newspring.cc',
-              nickName: 'Batman',
+              nickName: 'Ike',
               photo: {
-                __typename: 'ImageMediaSource',
-                uri: 'https://some-uri.com/test.jpg',
+                uri:
+                  'https://apollosrock.newspring.cc:443/GetImage.ashx?guid=60fd5f35-3167-4c26-9a30-d44937287b87',
               },
             },
           },
@@ -53,11 +33,12 @@ describe('user avatar header connect', () => {
       },
     };
     const navigation = { navigate: jest.fn(), getParam: jest.fn() };
-    const tree = await renderWithApolloData(
+    const tree = renderer.create(
       <Providers mocks={[mock]}>
         <UserAvatarHeaderConnected navigation={navigation} />
       </Providers>
     );
+    await wait(0); // wait for response from graphql
     expect(tree).toMatchSnapshot();
   });
 });
diff --git a/apolloschurchapp/src/tabs/connect/getUserProfile.js b/apolloschurchapp/src/tabs/connect/getUserProfile.js
index ef3b2c8..4e4dd64 100644
--- a/apolloschurchapp/src/tabs/connect/getUserProfile.js
+++ b/apolloschurchapp/src/tabs/connect/getUserProfile.js
@@ -6,7 +6,6 @@ export default gql`
     currentUser {
       id
       profile {
-        id
         firstName
         lastName
         campus {
diff --git a/apolloschurchapp/src/tabs/home/Home.js b/apolloschurchapp/src/tabs/home/Home.js
index 57abba0..ccdeee1 100644
--- a/apolloschurchapp/src/tabs/home/Home.js
+++ b/apolloschurchapp/src/tabs/home/Home.js
@@ -19,7 +19,6 @@ import { LiveButton } from '../../live';
 import ContentTableCard from '../../ui/ContentTableCard';
 import getUserFeed from './getUserFeed';
 import getPersonaFeed from './getPersonaFeed';
-import getCampaignContentItem from './getCampaignContentItem';
 
 const LogoTitle = styled(({ theme }) => ({
   height: theme.sizing.baseUnit,
@@ -69,49 +68,21 @@ class Home extends PureComponent {
                   <>
                     <LogoTitle source={require('./wordmark.png')} />
                     <LiveButton />
-                    <Query
-                      query={getCampaignContentItem}
-                      fetchPolicy="cache-and-network"
-                    >
-                      {({ data: featuredData, loading: isFeaturedLoading }) => {
-                        const featuredContent = get(
-                          featuredData,
-                          'campaigns.edges',
-                          []
-                        ).map((edge) => edge.node);
-
-                        const featuredItem = get(
-                          featuredContent[0],
-                          'childContentItemsConnection.edges[0].node',
-                          {}
-                        );
-
-                        return (
-                          <ContentCardConnected
-                            contentId={featuredItem.id}
-                            isLoading={isFeaturedLoading}
-                          />
-                        );
-                      }}
-                    </Query>
                     <Query
                       query={getPersonaFeed}
                       fetchPolicy="cache-and-network"
                     >
-                      {({
-                        data: personaData,
-                        loading: isContentTableLoading,
-                      }) => (
+                      {({ data: personaData, loading: actionLoading }) => (
                         <ContentTableCard
-                          isLoading={isContentTableLoading}
+                          isLoading={actionLoading}
                           onPress={this.handleOnPress}
                           header={
                             <>
-                              <StyledH6 isLoading={isContentTableLoading}>
+                              <StyledH6 isLoading={actionLoading}>
                                 FOR YOU
                               </StyledH6>
                               <H3
-                                isLoading={isContentTableLoading}
+                                isLoading={actionLoading}
                                 numberOfLines={3}
                                 ellipsizeMode="tail"
                               >
diff --git a/apolloschurchapp/src/tabs/home/getCampaignContentItem.js b/apolloschurchapp/src/tabs/home/getCampaignContentItem.js
deleted file mode 100644
index 5bdb082..0000000
--- a/apolloschurchapp/src/tabs/home/getCampaignContentItem.js
+++ /dev/null
@@ -1,25 +0,0 @@
-import gql from 'graphql-tag';
-
-import { contentItemFragment } from 'apolloschurchapp/src/content-single/getContentItem';
-import { largeCardFragment } from 'apolloschurchapp/src/ui/ContentCardConnected';
-
-export default gql`
-  query campaigns {
-    campaigns {
-      edges {
-        node {
-          childContentItemsConnection {
-            edges {
-              node {
-                ...largeCardFragment
-                ...contentItemFragment
-              }
-            }
-          }
-        }
-      }
-    }
-  }
-  ${contentItemFragment}
-  ${largeCardFragment}
-`;
diff --git a/apolloschurchapp/src/ui/LandingScreen/LandingScreen.stories.js b/apolloschurchapp/src/ui/LandingScreen/LandingScreen.stories.js
deleted file mode 100644
index 1d3c6e1..0000000
--- a/apolloschurchapp/src/ui/LandingScreen/LandingScreen.stories.js
+++ /dev/null
@@ -1,23 +0,0 @@
-import React from 'react';
-import { storiesOf } from '@storybook/react-native';
-import { GradientOverlayImage } from '@apollosproject/ui-kit';
-
-import LandingScreen from '.';
-
-storiesOf('LandingScreen', module)
-  .add('default', () => <LandingScreen />)
-  .add('slideTitle', () => <LandingScreen slideTitle={'Custom title text'} />)
-  .add('description', () => (
-    <LandingScreen description={'Custom description text'} />
-  ))
-  .add('textColor', () => <LandingScreen textColor={'salmon'} />)
-  .add('ImageComponent', () => (
-    <LandingScreen
-      BackgroundComponent={
-        <GradientOverlayImage
-          source={'https://picsum.photos/375/812/?random'}
-        />
-      }
-    />
-  ))
-  .add('Slide props', () => <LandingScreen onPressPrimary={() => {}} />);
diff --git a/apolloschurchapp/src/ui/LandingScreen/index.js b/apolloschurchapp/src/ui/LandingScreen/index.js
deleted file mode 100644
index 9caed65..0000000
--- a/apolloschurchapp/src/ui/LandingScreen/index.js
+++ /dev/null
@@ -1,86 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-
-import {
-  styled,
-  withTheme,
-  Icon,
-  H1,
-  H4,
-  PaddedView,
-  BackgroundView,
-} from '@apollosproject/ui-kit';
-
-import Slide from '../Onboarding/Slide';
-
-const Content = styled({
-  flex: 1,
-  justifyContent: 'center',
-})(PaddedView);
-
-const BrandIcon = withTheme(({ theme, color }) => ({
-  name: 'brand-icon',
-  size: theme.sizing.baseUnit * 3,
-  ...(color ? { fill: color } : {}),
-  style: {
-    marginBottom: theme.sizing.baseUnit,
-  },
-}))(Icon);
-
-const Title = styled(({ theme, color }) => ({
-  marginBottom: theme.sizing.baseUnit * 2,
-  ...(color ? { color } : {}),
-}))(H1);
-
-const StyledH4 = styled(({ color }) => ({
-  ...(color ? { color } : {}),
-}))(H4);
-
-const LandingScreen = ({
-  slideTitle,
-  description,
-  textColor,
-  BackgroundComponent,
-  ...props
-}) => (
-  <BackgroundView>
-    <Slide {...props} scrollEnabled={false}>
-      {BackgroundComponent}
-      <Content>
-        <BrandIcon color={textColor} />
-        <Title color={textColor}>{slideTitle}</Title>
-        <StyledH4 color={textColor}>{description}</StyledH4>
-      </Content>
-    </Slide>
-  </BackgroundView>
-);
-
-LandingScreen.propTypes = {
-  /* The `Swiper` component used in `<onBoarding>` looks for and hijacks the title prop of it's
-   * children. Thus we have to use more unique name.
-   */
-  slideTitle: PropTypes.string,
-  description: PropTypes.string,
-  textColor: PropTypes.string, // Use for custom text and `BrandIcon` color when overlaying text on an image or video needs more clarity. Defaults to theme driven colors.
-  /* Recommended usage:
-   * - `Image` (react-native)
-   * - `GradientOverlayImage` (@apollosproject/ui-kit) for increased readability
-   * - `Video` (react-native-video) because moving pictures!
-   */
-  BackgroundComponent: PropTypes.oneOfType([
-    PropTypes.arrayOf(PropTypes.node),
-    PropTypes.node,
-  ]),
-};
-
-LandingScreen.defaultProps = {
-  slideTitle: "We're glad you're here.",
-  description:
-    "We're not just a building you go to, but a family to belong to.",
-};
-
-LandingScreen.navigationOptions = {
-  header: null,
-};
-
-export default LandingScreen;
diff --git a/apolloschurchapp/src/ui/Onboarding/Onboarding.stories.js b/apolloschurchapp/src/ui/Onboarding/Onboarding.stories.js
new file mode 100644
index 0000000..d304b28
--- /dev/null
+++ b/apolloschurchapp/src/ui/Onboarding/Onboarding.stories.js
@@ -0,0 +1,6 @@
+import React from 'react';
+import { storiesOf } from '@storybook/react-native';
+
+import Onboarding from '.';
+
+storiesOf('Onboarding', module).add('Example', () => <Onboarding />);
diff --git a/apolloschurchapp/src/ui/Onboarding/Slide/Slide.js b/apolloschurchapp/src/ui/Onboarding/Slide/Slide.js
deleted file mode 100644
index 2612d10..0000000
--- a/apolloschurchapp/src/ui/Onboarding/Slide/Slide.js
+++ /dev/null
@@ -1,120 +0,0 @@
-import React, { memo } from 'react';
-import PropTypes from 'prop-types';
-import { StyleSheet, ScrollView } from 'react-native';
-
-import { SafeAreaView } from 'react-navigation';
-
-import {
-  styled,
-  withTheme,
-  PaddedView,
-  H5,
-  ButtonLink,
-  Button,
-  Icon,
-} from '@apollosproject/ui-kit';
-
-const styles = StyleSheet.create({
-  contentContainer: { minHeight: '100%' },
-});
-
-const forceInset = {
-  top: 'never',
-  bottom: 'always',
-};
-
-const NavWrapper = styled(({ theme }) => ({
-  position: 'absolute',
-  bottom: 0,
-  left: 0,
-  right: 0,
-  flexDirection: 'row-reverse', // reversed so the primary action is always on the right
-  alignItems: 'center', // centers optional back button with dots/next button
-  justifyContent: 'space-between',
-  marginVertical: theme.sizing.baseUnit * 0.5, // centers nav/button with pager dots
-}))(PaddedView);
-
-const PrimaryNavIcon = withTheme(({ theme }) => ({
-  size: theme.helpers.rem(1.25),
-  style: {
-    marginLeft: theme.sizing.baseUnit * 0.5,
-    marginRight: theme.sizing.baseUnit * -0.5,
-  },
-}))(Icon);
-
-const SkipButton = styled(({ theme }) => ({
-  color: theme.colors.text.tertiary, // this is probably not the right color
-  paddingVertical: theme.sizing.baseUnit * 0.9375, // optically centered on typographic baseline
-  paddingHorizontal: theme.sizing.baseUnit, // improves tappability
-  marginLeft: theme.sizing.baseUnit * -1, // adjusts for paddingHorizontal
-}))(ButtonLink);
-
-const FlexedScrollView = styled({ flex: 1 })(ScrollView);
-
-/* Slide uses memo = sfc PureComponent 💥 Additionally, this component when rendered in a `Slider`
- * is automatically rendered in a `View` */
-// eslint-disable-next-line react/display-name
-const Slide = memo(
-  ({
-    children,
-    onPressPrimary,
-    onPressSecondary,
-    primaryNavText,
-    primaryNavIcon,
-    secondaryNavText,
-    isLoading,
-    ...scrollViewProps
-  }) => (
-    <>
-      <FlexedScrollView
-        contentContainerStyle={styles.contentContainer}
-        overScrollMode={'auto'}
-        {...scrollViewProps}
-      >
-        {children}
-      </FlexedScrollView>
-      {onPressPrimary || onPressSecondary ? (
-        <NavWrapper vertical={false}>
-          <SafeAreaView forceInset={forceInset}>
-            {onPressPrimary ? (
-              <Button onPress={onPressPrimary} loading={isLoading}>
-                <>
-                  <H5>{primaryNavText}</H5>
-                  {primaryNavIcon ? (
-                    <PrimaryNavIcon name={primaryNavIcon} />
-                  ) : null}
-                </>
-              </Button>
-            ) : null}
-            {onPressSecondary ? (
-              <SkipButton onPress={onPressSecondary}>
-                {secondaryNavText}
-              </SkipButton>
-            ) : null}
-          </SafeAreaView>
-        </NavWrapper>
-      ) : null}
-    </>
-  )
-);
-
-Slide.propTypes = {
-  children: PropTypes.oneOfType([
-    PropTypes.arrayOf(PropTypes.node),
-    PropTypes.node,
-  ]),
-  onPressPrimary: PropTypes.func,
-  onPressSecondary: PropTypes.func,
-  primaryNavText: PropTypes.string, // colored button text
-  primaryNavIcon: PropTypes.string, // optional custom icon name or empty string for no icon at all
-  secondaryNavText: PropTypes.string, // text link
-  isLoading: PropTypes.bool,
-};
-
-Slide.defaultProps = {
-  primaryNavText: 'Next',
-  primaryNavIcon: 'arrow-next',
-  secondaryNavText: 'Skip',
-};
-
-export default Slide;
diff --git a/apolloschurchapp/src/ui/Onboarding/Slide/Slide.stories.js b/apolloschurchapp/src/ui/Onboarding/Slide/Slide.stories.js
index ae751f1..a23e44c 100644
--- a/apolloschurchapp/src/ui/Onboarding/Slide/Slide.stories.js
+++ b/apolloschurchapp/src/ui/Onboarding/Slide/Slide.stories.js
@@ -51,11 +51,6 @@ storiesOf('Onboarding/Slide', module)
       <Text>Boom</Text>
     </Slide>
   ))
-  .add('isLoading', () => (
-    <Slide onPressPrimary={() => {}} isLoading>
-      <Text>Boom</Text>
-    </Slide>
-  ))
   .add('With Navigation', () => (
     <Slide onPressPrimary={() => {}} onPressSecondary={() => {}}>
       <Text>Boom</Text>
diff --git a/apolloschurchapp/src/ui/Onboarding/Slide/Slide.tests.js b/apolloschurchapp/src/ui/Onboarding/Slide/Slide.tests.js
index 9a1a452..18e7175 100644
--- a/apolloschurchapp/src/ui/Onboarding/Slide/Slide.tests.js
+++ b/apolloschurchapp/src/ui/Onboarding/Slide/Slide.tests.js
@@ -98,14 +98,4 @@ describe('The Onboarding Slide component', () => {
     );
     expect(tree).toMatchSnapshot();
   });
-  it('should render a loading indicator', () => {
-    const tree = renderer.create(
-      <Providers>
-        <Slide onPressPrimary={jest.fn()} isLoading>
-          <Text>Boom</Text>
-        </Slide>
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
 });
diff --git a/apolloschurchapp/src/ui/Onboarding/Slide/SlideContent/SlideContent.stories.js b/apolloschurchapp/src/ui/Onboarding/Slide/SlideContent/SlideContent.stories.js
deleted file mode 100644
index 95a9606..0000000
--- a/apolloschurchapp/src/ui/Onboarding/Slide/SlideContent/SlideContent.stories.js
+++ /dev/null
@@ -1,41 +0,0 @@
-import React from 'react';
-import { Text } from 'react-native';
-import { storiesOf } from '@storybook/react-native';
-
-import SlideContent from '.';
-
-storiesOf('Onboarding/Slide/SlideContent', module)
-  .add('example', () => (
-    <SlideContent
-      title={'Whoa, this is heavy'}
-      description={
-        'There\'s that word again: "heavy." Why are things so heavy in the future? Is there a problem with the Earth\'s gravitational pull?'
-      }
-      icon
-    />
-  ))
-  .add('icon', () => <SlideContent icon />)
-  .add('icon (custom name)', () => <SlideContent icon={'umbrella'} />)
-  .add('title', () => <SlideContent title={'Whoa, this is heavy'} />)
-  .add('description', () => (
-    <SlideContent
-      description={
-        'There\'s that word again: "heavy." Why are things so heavy in the future? Is there a problem with the Earth\'s gravitational pull?'
-      }
-    />
-  ))
-  .add('isLoading', () => (
-    <SlideContent
-      title={'Whoa, this is heavy'}
-      description={
-        'There\'s that word again: "heavy." Why are things so heavy in the future? Is there a problem with the Earth\'s gravitational pull?'
-      }
-      icon
-      isLoading
-    />
-  ))
-  .add('childen', () => (
-    <SlideContent>
-      <Text>Great Scott!</Text>
-    </SlideContent>
-  ));
diff --git a/apolloschurchapp/src/ui/Onboarding/Slide/SlideContent/SlideContent.tests.js b/apolloschurchapp/src/ui/Onboarding/Slide/SlideContent/SlideContent.tests.js
deleted file mode 100644
index ff42046..0000000
--- a/apolloschurchapp/src/ui/Onboarding/Slide/SlideContent/SlideContent.tests.js
+++ /dev/null
@@ -1,97 +0,0 @@
-import React from 'react';
-import { Text } from 'react-native';
-import renderer from 'react-test-renderer';
-
-import Providers from 'apolloschurchapp/src/Providers';
-
-import SlideContent from '.';
-
-describe('The Onboarding Slide component', () => {
-  it('should render an icon', () => {
-    const tree = renderer.create(
-      <Providers>
-        <SlideContent icon />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render a custom icon', () => {
-    const tree = renderer.create(
-      <Providers>
-        <SlideContent icon={'umbrella'} />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render a title', () => {
-    const tree = renderer.create(
-      <Providers>
-        <SlideContent title={'Whoa, this is heavy'} />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render a description', () => {
-    const tree = renderer.create(
-      <Providers>
-        <SlideContent
-          description={
-            'There\'s that word again: "heavy." Why are things so heavy in the future? Is there a problem with the Earth\'s gravitational pull?'
-          }
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render with children', () => {
-    const tree = renderer.create(
-      <Providers>
-        <SlideContent
-          title={'Whoa, this is heavy'}
-          description={
-            'There\'s that word again: "heavy." Why are things so heavy in the future? Is there a problem with the Earth\'s gravitational pull?'
-          }
-        >
-          <Text>Great Scott!</Text>
-        </SlideContent>
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render children alone', () => {
-    const tree = renderer.create(
-      <Providers>
-        <SlideContent>
-          <Text>Great Scott!</Text>
-        </SlideContent>
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render a loading state', () => {
-    const tree = renderer.create(
-      <Providers>
-        <SlideContent
-          title={'Whoa, this is heavy'}
-          description={
-            'There\'s that word again: "heavy." Why are things so heavy in the future? Is there a problem with the Earth\'s gravitational pull?'
-          }
-          icon
-          isLoading
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render accept additionall props', () => {
-    const centeredContent = { flex: 1, justifyContent: 'center' };
-    const tree = renderer.create(
-      <Providers>
-        <SlideContent style={centeredContent}>
-          <Text>Great Scott!</Text>
-        </SlideContent>
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/ui/Onboarding/Slide/SlideContent/index.js b/apolloschurchapp/src/ui/Onboarding/Slide/SlideContent/index.js
deleted file mode 100644
index 1267c45..0000000
--- a/apolloschurchapp/src/ui/Onboarding/Slide/SlideContent/index.js
+++ /dev/null
@@ -1,85 +0,0 @@
-import React from 'react';
-import { View } from 'react-native';
-import {
-  styled,
-  withTheme,
-  Icon,
-  H2,
-  H5,
-  withIsLoading,
-} from '@apollosproject/ui-kit';
-import PropTypes from 'prop-types';
-
-import { SafeAreaView } from 'react-navigation';
-
-const IconWrapper = styled(({ theme }) => ({
-  paddingBottom: theme.sizing.baseUnit, // wrapper is used to padd placeholder as well.
-}))(View);
-
-const BrandIcon = withTheme(({ theme, icon }) => ({
-  name: typeof icon === 'string' ? icon : 'brand-icon',
-  fill: theme.colors.primary,
-  size: theme.sizing.baseUnit * 3,
-}))(Icon);
-
-const TitleWrapper = styled(({ theme }) => ({
-  paddingBottom: theme.sizing.baseUnit * 0.5, // wrapper is used to padd placeholder as well.
-}))(View);
-
-const Title = styled(({ theme }) => ({
-  color: theme.colors.primary,
-}))(H2);
-
-const StyledH5 = styled(({ theme }) => ({
-  color: theme.colors.text.secondary,
-}))(H5);
-
-const Wrapper = styled(({ theme }) => ({
-  paddingTop: theme.sizing.baseUnit,
-  paddingHorizontal: theme.sizing.baseUnit,
-  marginBottom: theme.sizing.baseUnit * 3,
-}))(SafeAreaView);
-
-const SlideContent = withIsLoading(
-  ({ icon, title, description, children, isLoading, ...props }) => {
-    if (!icon && !title && !description && !children) {
-      console.warn(
-        `Warning: You need to pass at least one prop for SlideContent to render something cowboy.`
-      );
-    }
-
-    return (
-      <Wrapper forceInset={{ bottom: 'always' }} {...props}>
-        <View>
-          {icon ? (
-            <IconWrapper>
-              <BrandIcon icon={icon} isLoading={isLoading} />
-            </IconWrapper>
-          ) : null}
-          <TitleWrapper>
-            <Title>{title}</Title>
-          </TitleWrapper>
-          <StyledH5>{description}</StyledH5>
-        </View>
-        {children}
-      </Wrapper>
-    );
-  }
-);
-
-SlideContent.displayName = 'SlideContent';
-
-SlideContent.propTypes = {
-  icon: PropTypes.oneOfType([
-    PropTypes.bool, // Use default `brand-icon`
-    PropTypes.string, // Use a custom icon name
-  ]),
-  title: PropTypes.string,
-  description: PropTypes.string,
-  children: PropTypes.oneOfType([
-    PropTypes.arrayOf(PropTypes.node),
-    PropTypes.node,
-  ]),
-};
-
-export default SlideContent;
diff --git a/apolloschurchapp/src/ui/Onboarding/Slide/index.js b/apolloschurchapp/src/ui/Onboarding/Slide/index.js
index 568bb2a..ed05867 100644
--- a/apolloschurchapp/src/ui/Onboarding/Slide/index.js
+++ b/apolloschurchapp/src/ui/Onboarding/Slide/index.js
@@ -1,4 +1,92 @@
-import Slide from './Slide';
+import React, { memo } from 'react';
+import PropTypes from 'prop-types';
+
+import {
+  styled,
+  withTheme,
+  FlexedView,
+  PaddedView,
+  H5,
+  ButtonLink,
+  Button,
+  Icon,
+} from '@apollosproject/ui-kit';
+
+const NavWrapper = styled(({ theme }) => ({
+  flexDirection: 'row-reverse', // reversed so the primary action is always on the right
+  alignItems: 'center', // centers optional back button with dots/next button
+  justifyContent: 'space-between',
+  marginBottom: theme.sizing.baseUnit * 0.5, // centers nav/button with pager dots
+}))(PaddedView);
+
+const PrimaryNavIcon = withTheme(({ theme }) => ({
+  size: theme.helpers.rem(1.25),
+  style: {
+    marginLeft: theme.sizing.baseUnit * 0.5,
+    marginRight: theme.sizing.baseUnit * -0.5,
+  },
+}))(Icon);
+
+const SkipButton = styled(({ theme }) => ({
+  color: theme.colors.text.tertiary, // this is probably not the right color
+  paddingVertical: theme.sizing.baseUnit * 0.9375, // optically centered on typographic baseline
+  paddingHorizontal: theme.sizing.baseUnit, // improves tappability
+  marginLeft: theme.sizing.baseUnit * -1, // adjusts for paddingHorizontal
+}))(ButtonLink);
+
+/* Slide uses memo = sfc PureComponent 💥 Additionally, this component when rendered in a `Slider`
+ * is automatically rendered in a `View` */
+// eslint-disable-next-line react/display-name
+const Slide = memo(
+  ({
+    children,
+    onPressPrimary,
+    onPressSecondary,
+    primaryNavText,
+    primaryNavIcon,
+    secondaryNavText,
+  }) => (
+    <>
+      <FlexedView>{children}</FlexedView>
+      {onPressPrimary || onPressSecondary ? (
+        <NavWrapper vertical={false}>
+          {onPressPrimary ? (
+            <Button onPress={onPressPrimary}>
+              <>
+                <H5>{primaryNavText}</H5>
+                {primaryNavIcon ? (
+                  <PrimaryNavIcon name={primaryNavIcon} />
+                ) : null}
+              </>
+            </Button>
+          ) : null}
+          {onPressSecondary ? (
+            <SkipButton onPress={onPressSecondary}>
+              {secondaryNavText}
+            </SkipButton>
+          ) : null}
+        </NavWrapper>
+      ) : null}
+    </>
+  )
+);
+
+Slide.propTypes = {
+  children: PropTypes.oneOfType([
+    PropTypes.arrayOf(PropTypes.node),
+    PropTypes.node,
+  ]),
+  onPressPrimary: PropTypes.func,
+  onPressSecondary: PropTypes.func,
+  primaryNavText: PropTypes.string, // colored button text
+  primaryNavIcon: PropTypes.string, // optional custom icon name or empty string for no icon at all
+  secondaryNavText: PropTypes.string, // text link
+};
+
+Slide.defaultProps = {
+  primaryNavText: 'Next',
+  primaryNavIcon: 'arrow-next',
+  secondaryNavText: 'Skip',
+};
 
 export default Slide;
-export SlideContent from './SlideContent';
diff --git a/apolloschurchapp/src/ui/Onboarding/index.js b/apolloschurchapp/src/ui/Onboarding/index.js
index 9314696..a7c6fb8 100644
--- a/apolloschurchapp/src/ui/Onboarding/index.js
+++ b/apolloschurchapp/src/ui/Onboarding/index.js
@@ -1,53 +1,37 @@
 import React, { Component } from 'react';
-import { View } from 'react-native';
-
 // import PropTypes from 'prop-types';
 import Swiper from 'react-native-swiper';
 import {
+  withTheme,
   BackgroundView,
   GradientOverlayImage,
-  styled,
 } from '@apollosproject/ui-kit';
 
-import { SafeAreaView } from 'react-navigation';
-
 import {
   AskNotificationsConnected,
   AskNameConnected,
-  FeaturesConnected,
+  Features,
   AboutYouConnected,
   LocationFinderConnected,
 } from './slides';
 
-const dotStyles = ({ theme }) => ({
-  width: theme.sizing.baseUnit / 2,
-  height: theme.sizing.baseUnit / 2,
-  borderRadius: theme.sizing.baseUnit / 4,
-  margin: theme.sizing.baseUnit / 4,
-});
-
-const forceInset = {
-  bottom: 'always',
-};
-
-const PaginationDot = styled(({ theme }) => ({
-  backgroundColor: theme.colors.background.inactive,
-  ...dotStyles({ theme }),
-}))(View);
-
-const PaginationDotActive = styled(({ theme }) => ({
-  backgroundColor: theme.colors.action.primary,
-  ...dotStyles({ theme }),
-}))(View);
+// Provides themed colors to Swiper dots
+const ThemedSwiper = withTheme(({ theme }) => ({
+  dotColor: theme.colors.background.inactive, // theme.colors.lightSecondary looks the best.
+  activeDotColor: theme.colors.action.primary,
+}))(({ swiperRef, ...props }) => <Swiper ref={swiperRef} {...props} />);
 
 class Onboarding extends Component {
   static navigationOptions = () => ({
     title: 'Onboarding',
     header: null,
-    gesturesEnabled: false,
   });
 
-  swiper = null;
+  constructor() {
+    super();
+
+    this.swiper = null;
+  }
 
   // Creates ref to Swiper to be passed as a prop to children.
   setSwiperRef = (r) => {
@@ -62,61 +46,37 @@ class Onboarding extends Component {
   render() {
     return (
       <BackgroundView>
-        <Swiper
-          loadMinimal
+        <ThemedSwiper
           loop={false}
           /* Disables swipe gestures. We currently we dont display a back button so this is our
            * only back navigation option. */
           // scrollEnabled={false}
           showsButtons={false}
-          ref={this.setSwiperRef}
-          renderPagination={this.renderPagination}
-          activeDot={
-            <SafeAreaView forceInset={forceInset}>
-              <PaginationDotActive />
-            </SafeAreaView>
-          }
-          dot={
-            <SafeAreaView forceInset={forceInset}>
-              <PaginationDot forceInset={forceInset} />
-            </SafeAreaView>
-          }
+          swiperRef={this.setSwiperRef}
         >
           <AskNameConnected onPressPrimary={this.handleOnPressPrimary} />
-          <FeaturesConnected
+          <Features
+            imgSrc={{ uri: 'https://picsum.photos/1200/1200?random' }}
             onPressPrimary={this.handleOnPressPrimary}
-            BackgroundComponent={
-              <GradientOverlayImage
-                source={'https://picsum.photos/640/640/?random'}
-              />
-            }
           />
           <AboutYouConnected
+            imgSrc={{ uri: 'https://picsum.photos/1200/1200?random' }}
             onPressPrimary={this.handleOnPressPrimary}
-            BackgroundComponent={
-              <GradientOverlayImage
-                source={'https://picsum.photos/640/640/?random'}
-              />
-            }
-          />
-          <LocationFinderConnected
-            onPressPrimary={this.handleOnPressPrimary}
-            BackgroundComponent={
-              <GradientOverlayImage
-                source={'https://picsum.photos/640/640/?random'}
-              />
-            }
           />
+          <LocationFinderConnected onPressPrimary={this.handleOnPressPrimary}>
+            <GradientOverlayImage
+              source={'https://picsum.photos/640/640/?random'}
+            />
+          </LocationFinderConnected>
           <AskNotificationsConnected
             onPressPrimary={() => this.props.navigation.navigate('Home')}
             primaryNavText={'Finish'}
-            BackgroundComponent={
-              <GradientOverlayImage
-                source={'https://picsum.photos/640/640/?random'}
-              />
-            }
-          />
-        </Swiper>
+          >
+            <GradientOverlayImage
+              source={'https://picsum.photos/640/640/?random'}
+            />
+          </AskNotificationsConnected>
+        </ThemedSwiper>
       </BackgroundView>
     );
   }
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/AboutYou/AboutYou.js b/apolloschurchapp/src/ui/Onboarding/slides/AboutYou/AboutYou.js
index 1dc19e7..861c9d1 100644
--- a/apolloschurchapp/src/ui/Onboarding/slides/AboutYou/AboutYou.js
+++ b/apolloschurchapp/src/ui/Onboarding/slides/AboutYou/AboutYou.js
@@ -1,24 +1,52 @@
 import React, { memo } from 'react';
+import { Image, View } from 'react-native';
 import PropTypes from 'prop-types';
 import moment from 'moment';
 import { get } from 'lodash';
 
 import {
   styled,
+  H2,
   H5,
   Radio,
   RadioButton,
   H6,
   DateInput,
+  FlexedView,
+  PaddedView,
 } from '@apollosproject/ui-kit';
 
-import Slide, { SlideContent } from '../../Slide';
+import Slide from '../../Slide';
 
-const Label = styled(({ theme, padded }) => ({
+const Content = styled({
+  justifyContent: 'center',
+})(FlexedView);
+
+const StyledImage = styled(({ theme }) => ({
+  flex: 2,
+  resizeMode: 'contain',
+  marginBottom: theme.sizing.baseUnit * 2,
+}))(Image);
+
+const TextContent = styled({
+  flex: 1,
+  justifyContent: 'center',
+})(PaddedView);
+
+const Title = styled(({ theme }) => ({
+  color: theme.colors.primary,
+  marginBottom: theme.sizing.baseUnit * 0.5,
+}))(H2);
+
+const Description = styled(({ theme }) => ({
+  color: theme.colors.text.secondary,
+  marginBottom: theme.sizing.baseUnit,
+}))(H5);
+
+const Label = styled({
   color: 'gray',
   opacity: 0.7,
-  ...(padded ? { marginTop: theme.sizing.baseUnit } : {}),
-}))(H6);
+})(H6);
 
 const StyledDate = styled(({ theme }) => ({
   marginTop: 0,
@@ -28,8 +56,6 @@ const StyledDate = styled(({ theme }) => ({
 const StyledRadio = styled(({ theme }) => ({
   marginBottom: theme.sizing.baseUnit,
   flexDirection: 'row',
-  alignItems: 'center',
-  flexWrap: 'wrap',
 }))(Radio);
 
 const RadioLabel = styled(({ theme }) => ({
@@ -38,6 +64,8 @@ const RadioLabel = styled(({ theme }) => ({
 
 const AboutYou = memo(
   ({
+    onPressPrimary,
+    imgSrc,
     slideTitle,
     description,
     defaultDate,
@@ -46,46 +74,50 @@ const AboutYou = memo(
     touched,
     errors,
     setFieldValue,
-    BackgroundComponent,
     ...props
   }) => (
-    <Slide {...props}>
-      {BackgroundComponent}
-      <SlideContent title={slideTitle} description={description}>
-        <Label padded>Gender</Label>
-        <StyledRadio
-          label="Gender"
-          type="radio"
-          value={get(values, 'gender')}
-          error={get(touched, 'gender') && get(errors, 'gender')}
-          onChange={(value) => setFieldValue('gender', value)}
-        >
-          {genderList.map((gender) => [
-            <RadioButton
-              key={gender}
-              value={gender}
-              label={() => <RadioLabel>{gender}</RadioLabel>}
-              underline={false}
-            />,
-          ])}
-        </StyledRadio>
-        <Label>Birthday</Label>
-        <StyledDate
-          type={'DateInput'}
-          placeholder={'Select a date...'}
-          value={moment
-            .utc(get(values, 'birthDate', defaultDate) || defaultDate)
-            .toDate()}
-          error={get(touched, 'birthDate') && get(errors, 'birthDate')}
-          displayValue={
-            // only show a birthday if we have one.
-            get(values, 'birthDate', '') // DatePicker shows displayValue > placeholder > label in that order
-              ? moment(values.birthDate).format('MM/DD/YYYY')
-              : '' // Pass an empty string if we don't have a birthday to show the placeholder.
-          }
-          onChange={(value) => setFieldValue('birthDate', value)}
-        />
-      </SlideContent>
+    <Slide onPressPrimary={onPressPrimary} {...props}>
+      <Content>
+        {imgSrc ? <StyledImage source={imgSrc} /> : null}
+        <TextContent>
+          <Title>{slideTitle}</Title>
+          <Description>{description}</Description>
+          <View>
+            <Label>Gender</Label>
+            <StyledRadio
+              label="Gender"
+              type="radio"
+              value={get(values, 'gender')}
+              error={get(touched, 'gender') && get(errors, 'gender')}
+              onChange={(value) => setFieldValue('gender', value)}
+            >
+              {genderList.map((gender) => [
+                <RadioButton
+                  key={gender}
+                  value={gender}
+                  label={() => <RadioLabel>{gender}</RadioLabel>}
+                  underline={false}
+                />,
+              ])}
+            </StyledRadio>
+          </View>
+          <View>
+            <Label>Birthday</Label>
+            <StyledDate
+              type={'DateInput'}
+              placeholder={'Select a date...'}
+              value={moment
+                .utc(get(values, 'birthDate', defaultDate) || defaultDate)
+                .toDate()}
+              error={get(touched, 'birthDate') && get(errors, 'birthDate')}
+              displayValue={moment(
+                get(values, 'birthDate', defaultDate) || defaultDate
+              ).format('MM/DD/YYYY')}
+              onChange={(value) => setFieldValue('birthDate', value)}
+            />
+          </View>
+        </TextContent>
+      </Content>
     </Slide>
   )
 );
@@ -94,32 +126,16 @@ AboutYou.propTypes = {
   /* The `Swiper` component used in `<Onboading>` looks for and hijacks the title prop of it's
    * children. Thus we have to use more unique name.
    */
+  setFieldValue: PropTypes.func.isRequired,
   slideTitle: PropTypes.string,
   description: PropTypes.string,
+  imgSrc: Image.propTypes,
   defaultDate: PropTypes.instanceOf(Date),
-  genderList: PropTypes.arrayOf(PropTypes.string),
-  values: PropTypes.shape({
-    gender: PropTypes.bool,
-    birthDate: PropTypes.bool,
-  }),
-  touched: PropTypes.shape({
-    gender: PropTypes.string,
-    birthDate: PropTypes.string,
-  }),
-  errors: PropTypes.shape({
-    gender: PropTypes.string,
-    birthDate: PropTypes.string,
-  }),
-  setFieldValue: PropTypes.func.isRequired,
-  /* Recommended usage:
-   * - `Image` (react-native)
-   * - `GradientOverlayImage` (@apollosproject/ui-kit) for increased readability
-   * - `Video` (react-native-video) because moving pictures!
-   */
-  BackgroundComponent: PropTypes.oneOfType([
-    PropTypes.arrayOf(PropTypes.node),
-    PropTypes.node,
-  ]),
+  genderList: PropTypes.arrayOf(PropTypes.number),
+  values: PropTypes.shape({}),
+  touched: PropTypes.shape({}),
+  errors: PropTypes.shape({}),
+  onPressPrimary: PropTypes.func,
 };
 
 AboutYou.defaultProps = {
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/AboutYou/AboutYou.stories.js b/apolloschurchapp/src/ui/Onboarding/slides/AboutYou/AboutYou.stories.js
index 68d4d96..ac99a15 100644
--- a/apolloschurchapp/src/ui/Onboarding/slides/AboutYou/AboutYou.stories.js
+++ b/apolloschurchapp/src/ui/Onboarding/slides/AboutYou/AboutYou.stories.js
@@ -1,11 +1,16 @@
 import React from 'react';
 import { storiesOf } from '@storybook/react-native';
-import { GradientOverlayImage } from '@apollosproject/ui-kit';
 
 import AboutYou from '.';
 
 storiesOf('Onboarding/slides/AboutYou', module)
   .add('default', () => <AboutYou />)
+  .add('withImg', () => (
+    <AboutYou
+      imgSrc={{ uri: 'https://picsum.photos/750/750?random' }}
+      setFieldValue={() => {}}
+    />
+  ))
   .add('slideTitle', () => (
     <AboutYou slideTitle={'Custom title text'} setFieldValue={() => {}} />
   ))
@@ -24,16 +29,6 @@ storiesOf('Onboarding/slides/AboutYou', module)
   .add('values – gender', () => (
     <AboutYou values={{ gender: 'Male' }} setFieldValue={() => {}} />
   ))
-  .add('BackgroundComponent', () => (
-    <AboutYou
-      BackgroundComponent={
-        <GradientOverlayImage
-          source={'https://picsum.photos/640/640/?random'}
-        />
-      }
-      setFieldValue={() => {}}
-    />
-  ))
   .add('Slide props', () => (
     <AboutYou onPressPrimary={() => {}} setFieldValue={() => {}} />
   ));
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/AboutYou/AboutYou.tests.js b/apolloschurchapp/src/ui/Onboarding/slides/AboutYou/AboutYou.tests.js
index d54de79..6ae12d9 100644
--- a/apolloschurchapp/src/ui/Onboarding/slides/AboutYou/AboutYou.tests.js
+++ b/apolloschurchapp/src/ui/Onboarding/slides/AboutYou/AboutYou.tests.js
@@ -1,6 +1,5 @@
 import React from 'react';
 import renderer from 'react-test-renderer';
-import { GradientOverlayImage } from '@apollosproject/ui-kit';
 
 import Providers from 'apolloschurchapp/src/Providers';
 
@@ -17,6 +16,20 @@ describe('The Onboarding AboutYou component', () => {
     );
     expect(tree).toMatchSnapshot();
   });
+  it('should render a custom image', () => {
+    /* we have to pass in a date via defaultDate or the DateInput component will create a current date
+     * object and invalidate the snapshots every time. */
+    const tree = renderer.create(
+      <Providers>
+        <AboutYou
+          imgSrc={{ uri: 'https://picsum.photos/1200/1200?random' }}
+          defaultDate={'2019-02-14'}
+          setFieldValue={jest.fn()}
+        />
+      </Providers>
+    );
+    expect(tree).toMatchSnapshot();
+  });
   it('should render a custom title', () => {
     /* we have to pass in a date via defaultDate or the DateInput component will create a current date
      * object and invalidate the snapshots every time. */
@@ -73,7 +86,7 @@ describe('The Onboarding AboutYou component', () => {
     );
     expect(tree).toMatchSnapshot();
   });
-  it('should render with a selected birthdate', () => {
+  it('should render a custom date picker', () => {
     const tree = renderer.create(
       <Providers>
         <AboutYou
@@ -84,38 +97,13 @@ describe('The Onboarding AboutYou component', () => {
     );
     expect(tree).toMatchSnapshot();
   });
-  it('should render with errors', () => {
+  it('should render a custom date picker when the birth date is null', () => {
     const tree = renderer.create(
       <Providers>
         <AboutYou
-          touched={{
-            gender: true,
-            birthDate: true,
-          }}
-          errors={{
-            gender: 'Gender errors',
-            birthDate: 'BirthDate errors',
-          }}
-          defaultDate={'2019-02-14'}
+          values={{ birthDate: null }}
           setFieldValue={jest.fn()}
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render a BackgroundComponent', () => {
-    /* we have to pass in a date via defaultDate or the DateInput component will create a current date
-     * object and invalidate the snapshots every time. */
-    const tree = renderer.create(
-      <Providers>
-        <AboutYou
-          BackgroundComponent={
-            <GradientOverlayImage
-              source={'https://picsum.photos/640/640/?random'}
-            />
-          }
           defaultDate={'2019-02-14'}
-          setFieldValue={jest.fn()}
         />
       </Providers>
     );
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/AboutYou/AboutYouConnected.js b/apolloschurchapp/src/ui/Onboarding/slides/AboutYou/AboutYouConnected.js
index 6d65b6a..85d0e52 100644
--- a/apolloschurchapp/src/ui/Onboarding/slides/AboutYou/AboutYouConnected.js
+++ b/apolloschurchapp/src/ui/Onboarding/slides/AboutYou/AboutYouConnected.js
@@ -10,91 +10,91 @@ import AboutYou from './AboutYou';
 import updateUserDetails from './updateUserDetails';
 
 // eslint-disable-next-line react/display-name
-const AboutYouConnected = memo(
-  ({ onPressPrimary, onPressSecondary, ...props }) => (
-    <Query query={getUserProfile}>
-      {({ data: { currentUser = { profile: {} } } = {}, loading = false }) => {
-        const { gender, birthDate } = currentUser.profile;
+const AboutYouConnected = memo(({ onPressPrimary, ...props }) => (
+  <Query query={getUserProfile}>
+    {({ data: { currentUser = { profile: {} } } = {} }) => {
+      const { gender, birthDate } = currentUser.profile;
 
-        return (
-          <Mutation mutation={updateUserDetails}>
-            {(updateDetails) => (
-              <Formik
-                initialValues={{ gender, birthDate }}
-                isInitialValid={() =>
-                  !!(['Male', 'Female'].includes(gender) || birthDate)
-                } // isInitialValid defaults to `false` this correctly checks for user data
-                validationSchema={Yup.object().shape({
-                  gender: Yup.string().oneOf(['Male', 'Female']),
-                  birthDate: Yup.string().nullable(),
-                })}
-                enableReinitialize
-                onSubmit={async (
-                  variables,
-                  { setSubmitting, setFieldError }
-                ) => {
-                  try {
-                    await updateDetails({ variables });
-                    onPressPrimary(); // advance to the next slide after submission
-                  } catch (e) {
-                    const { graphQLErrors } = e;
-                    if (
-                      graphQLErrors.length &&
-                      graphQLErrors.find(({ message }) =>
-                        message.includes('Invalid')
-                      )
-                    ) {
-                      setFieldError(
-                        'gender',
-                        'There was a problem sending your request'
-                      );
-                    } else {
-                      setFieldError(
-                        'gender',
-                        'Unknown error. Please try again later.'
-                      );
-                    }
+      return (
+        <Mutation
+          mutation={updateUserDetails}
+          update={async (cache, { data: { updateProfileFields } }) => {
+            await cache.writeQuery({
+              query: getUserProfile,
+              data: {
+                currentUser: {
+                  ...currentUser,
+                  profile: {
+                    ...currentUser.profile,
+                    gender: updateProfileFields.gender,
+                    birthDate: updateProfileFields.birthDate,
+                  },
+                },
+              },
+            });
+          }}
+        >
+          {(updateDetails) => (
+            <Formik
+              initialValues={{ gender, birthDate }}
+              validationSchema={Yup.object().shape({
+                gender: Yup.string().required('Gender is required!'),
+                birthDate: Yup.string().required('Birth Date is required!'),
+              })}
+              enableReinitialize
+              onSubmit={async (variables, { setSubmitting, setFieldError }) => {
+                try {
+                  await updateDetails({ variables });
+                } catch (e) {
+                  const { graphQLErrors } = e;
+                  if (
+                    graphQLErrors.length &&
+                    graphQLErrors.find(({ message }) =>
+                      message.includes('Invalid')
+                    )
+                  ) {
+                    setFieldError(
+                      'gender',
+                      'There was a problem sending your request'
+                    );
+                  } else {
+                    setFieldError(
+                      'gender',
+                      'Unknown error. Please try again later.'
+                    );
                   }
-                  setSubmitting(false);
-                }}
-              >
-                {({
-                  isValid,
-                  isSubmitting,
-                  submitForm,
-                  values,
-                  touched,
-                  errors,
-                  setFieldValue,
-                }) => (
+                }
+                setSubmitting(false);
+              }}
+            >
+              {({ submitForm, values, touched, errors, setFieldValue }) => {
+                const handleOnPressPrimary = () => {
+                  submitForm();
+                  onPressPrimary();
+                };
+                return (
                   <AboutYou
-                    onPressPrimary={isValid ? submitForm : null} // if form `isValid` show the primary nav button (next)
-                    onPressSecondary={
-                      // if form `!isValid` show the secondary nav button (skip)
-                      isValid ? null : onPressSecondary || onPressPrimary // if onPressSecondary exists use it else default onPressPrimary
-                    }
+                    onPressPrimary={handleOnPressPrimary}
                     gender={gender}
                     birthDate={birthDate}
                     values={values}
                     touched={touched}
                     errors={errors}
                     setFieldValue={setFieldValue}
-                    isLoading={loading || isSubmitting}
                     {...props}
                   />
-                )}
-              </Formik>
-            )}
-          </Mutation>
-        );
-      }}
-    </Query>
-  )
-);
+                );
+              }}
+            </Formik>
+          )}
+        </Mutation>
+      );
+    }}
+  </Query>
+));
 
 AboutYouConnected.propTypes = {
   onPressPrimary: PropTypes.func,
-  onPressSecondary: PropTypes.func,
 };
 
 export default AboutYouConnected;
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/AboutYou/AboutYouConnected.tests.js b/apolloschurchapp/src/ui/Onboarding/slides/AboutYou/AboutYouConnected.tests.js
index e961e8a..8b0a837 100644
--- a/apolloschurchapp/src/ui/Onboarding/slides/AboutYou/AboutYouConnected.tests.js
+++ b/apolloschurchapp/src/ui/Onboarding/slides/AboutYou/AboutYouConnected.tests.js
@@ -1,5 +1,4 @@
 import React from 'react';
-import renderer from 'react-test-renderer';
 import Providers from 'apolloschurchapp/src/Providers';
 
 import { renderWithApolloData } from 'apolloschurchapp/src/utils/testUtils';
@@ -7,17 +6,6 @@ import getUserProfile from '../../../../tabs/connect/getUserProfile';
 import AboutYouConnected from './AboutYouConnected';
 
 describe('AboutYouConnected component', () => {
-  it('renders in a default state', () => {
-    const tree = renderer.create(
-      <Providers>
-        <AboutYouConnected
-          onPressPrimary={jest.fn()}
-          defaultDate={'2019-02-14'}
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
   it('renders Gender and BirthDate when logged in', async () => {
     const mock = {
       request: {
@@ -30,7 +18,6 @@ describe('AboutYouConnected component', () => {
             id: 'AuthenticatedUser:123',
             profile: {
               __typename: 'Person',
-              id: 'Person:123',
               gender: 'Male',
               birthDate: '1980-02-10T00:00:00',
               firstName: 'Isaac',
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/AskName/AskName.js b/apolloschurchapp/src/ui/Onboarding/slides/AskName/AskName.js
index a25e8f1..c96f158 100644
--- a/apolloschurchapp/src/ui/Onboarding/slides/AskName/AskName.js
+++ b/apolloschurchapp/src/ui/Onboarding/slides/AskName/AskName.js
@@ -2,13 +2,38 @@ import React, { memo } from 'react';
 import PropTypes from 'prop-types';
 import { get } from 'lodash';
 
-import { SafeAreaView } from 'react-navigation';
+import {
+  styled,
+  withTheme,
+  Icon,
+  H2,
+  H5,
+  PaddedView,
+  TextInput,
+} from '@apollosproject/ui-kit';
 
-import { PaddedView, TextInput } from '@apollosproject/ui-kit';
+import Slide from '../../Slide';
 
-import Slide, { SlideContent } from '../../Slide';
+const BrandIcon = withTheme(({ theme }) => ({
+  name: 'brand-icon',
+  size: theme.sizing.baseUnit * 3.0,
+  fill: theme.colors.primary,
+  style: {
+    marginTop: theme.sizing.baseUnit * 2,
+    marginBottom: theme.sizing.baseUnit * 0.5,
+  },
+}))(Icon);
+
+const Title = styled(({ theme }) => ({
+  color: theme.colors.primary,
+}))(H2);
+
+const StyledH5 = styled(({ theme }) => ({
+  color: theme.colors.text.secondary,
+}))(H5);
 
 // memo = sfc PureComponent 💥
+// eslint-disable-next-line react/display-name
 const AskName = memo(
   ({
     onPressPrimary,
@@ -20,52 +45,46 @@ const AskName = memo(
     touched,
     errors,
     setFieldValue,
-    isLoading,
     ...props
   }) => {
     let LastNameInput = null;
 
     return (
-      <Slide onPressPrimary={onPressPrimary} isLoading={isLoading} {...props}>
-        <SafeAreaView forceInset={{ top: 'always', bottom: 'always' }}>
-          <SlideContent title={slideTitle} description={description} icon>
-            <PaddedView horizontal={false}>
-              <TextInput
-                label={'First Name'}
-                type={'text'}
-                textContentType={'givenName'} // ios autofill
-                returnKeyType={'next'}
-                value={get(values, 'firstName')}
-                error={
-                  get(touched, 'firstName', false) &&
-                  get(errors, 'firstName', null)
-                }
-                onChangeText={(text) => setFieldValue('firstName', text)}
-                onSubmitEditing={() => LastNameInput.focus()}
-                disabled={isLoading}
-                enablesReturnKeyAutomatically
-              />
-              <TextInput
-                label={'Last Name'}
-                type={'text'}
-                textContentType={'familyName'} // ios autofill
-                returnKeyType={'next'}
-                value={get(values, 'lastName')}
-                error={
-                  get(touched, 'lastName', false) &&
-                  get(errors, 'lastName', null)
-                }
-                onChangeText={(text) => setFieldValue('lastName', text)}
-                onSubmitEditing={onPressPrimary}
-                disabled={isLoading}
-                enablesReturnKeyAutomatically
-                inputRef={(r) => {
-                  LastNameInput = r;
-                }}
-              />
-            </PaddedView>
-          </SlideContent>
-        </SafeAreaView>
+      <Slide onPressPrimary={onPressPrimary} {...props}>
+        <PaddedView vertical={false}>
+          <BrandIcon />
+          <Title>{slideTitle}</Title>
+          <StyledH5>{description}</StyledH5>
+          <TextInput
+            label={'First Name'}
+            type={'text'}
+            textContentType={'givenName'} // ios autofill
+            returnKeyType={'next'}
+            value={get(values, 'firstName')}
+            error={
+              get(touched, 'firstName', false) && get(errors, 'firstName', null)
+            }
+            onChangeText={(text) => setFieldValue('firstName', text)}
+            onSubmitEditing={() => LastNameInput.focus()}
+            enablesReturnKeyAutomatically
+          />
+          <TextInput
+            label={'Last Name'}
+            type={'text'}
+            textContentType={'familyName'} // ios autofill
+            returnKeyType={'next'}
+            value={get(values, 'lastName')}
+            error={
+              get(touched, 'lastName', false) && get(errors, 'lastName', null)
+            }
+            onChangeText={(text) => setFieldValue('lastName', text)}
+            onSubmitEditing={onPressPrimary}
+            enablesReturnKeyAutomatically
+            inputRef={(r) => {
+              LastNameInput = r;
+            }}
+          />
+        </PaddedView>
       </Slide>
     );
   }
@@ -84,7 +103,6 @@ AskName.propTypes = {
   errors: PropTypes.shape({}),
   values: PropTypes.shape({}),
   onPressPrimary: PropTypes.func,
-  isLoading: PropTypes.bool,
 };
 
 AskName.defaultProps = {
@@ -92,6 +110,4 @@ AskName.defaultProps = {
   description: "Every relationship starts with a name. What's yours?",
 };
 
-AskName.displayName = 'AskName';
-
 export default AskName;
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/AskName/AskName.stories.js b/apolloschurchapp/src/ui/Onboarding/slides/AskName/AskName.stories.js
index b76ecf4..ff00b90 100644
--- a/apolloschurchapp/src/ui/Onboarding/slides/AskName/AskName.stories.js
+++ b/apolloschurchapp/src/ui/Onboarding/slides/AskName/AskName.stories.js
@@ -17,13 +17,6 @@ storiesOf('Onboarding/slides/AskName', module)
       setFieldValue={() => {}}
     />
   ))
-  .add('isLoading', () => (
-    <AskName
-      values={{ firstName: 'Marty', lastName: 'McFly' }}
-      setFieldValue={() => {}}
-      isLoading
-    />
-  ))
   .add('SlideWrapper props', () => (
     <AskName setFieldValue={() => {}} onPressPrimary={() => {}} />
   ));
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/AskName/AskName.tests.js b/apolloschurchapp/src/ui/Onboarding/slides/AskName/AskName.tests.js
index b9b98e2..2e21540 100644
--- a/apolloschurchapp/src/ui/Onboarding/slides/AskName/AskName.tests.js
+++ b/apolloschurchapp/src/ui/Onboarding/slides/AskName/AskName.tests.js
@@ -49,14 +49,6 @@ describe('The Onboarding AskName component', () => {
     );
     expect(tree).toMatchSnapshot();
   });
-  it('should render a loading state', () => {
-    const tree = renderer.create(
-      <Providers>
-        <AskName setFieldValue={jest.fn()} isLoading />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
   it('should pass additional props to Slide component', () => {
     const tree = renderer.create(
       <Providers>
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/AskName/AskNameConnected.js b/apolloschurchapp/src/ui/Onboarding/slides/AskName/AskNameConnected.js
index b2db1fc..427421c 100644
--- a/apolloschurchapp/src/ui/Onboarding/slides/AskName/AskNameConnected.js
+++ b/apolloschurchapp/src/ui/Onboarding/slides/AskName/AskNameConnected.js
@@ -10,93 +10,91 @@ import AskName from './AskName';
 import updateUserName from './updateUserName';
 
 // eslint-disable-next-line react/display-name
-const AskNameConnected = memo(
-  ({ onPressPrimary, onPressSecondary, ...props }) => (
-    <Query query={getUserProfile}>
-      {({ loading, data: { currentUser = { profile: {} } } = {} }) => {
-        const { firstName, lastName } = currentUser.profile;
-
-        return (
-          <Mutation mutation={updateUserName}>
-            {(updateName) => (
-              <Formik
-                initialValues={{ firstName, lastName }}
-                isInitialValid={() => !!(firstName && lastName)} // isInitialValid defaults to `false` this correctly checks for user data
-                validationSchema={Yup.object().shape({
-                  firstName: Yup.string().required(
-                    'Your first name is required!'
-                  ),
-                  lastName: Yup.string().required(
-                    'Your last name is required!'
-                  ),
-                })}
-                enableReinitialize
-                onSubmit={async (
-                  variables,
-                  { setSubmitting, setFieldError }
-                ) => {
-                  try {
-                    await updateName({ variables });
-                    onPressPrimary();
-                  } catch (e) {
-                    const { graphQLErrors } = e;
-                    if (
-                      graphQLErrors.length &&
-                      graphQLErrors.find(({ message }) =>
-                        message.includes('User already exists')
-                      )
-                    ) {
-                      setFieldError(
-                        'firstName',
-                        'There was a problem sending your request'
-                      );
-                    } else {
-                      setFieldError(
-                        'firstName',
-                        'Unknown error. Please try again later.'
-                      );
-                    }
+const AskNameConnected = memo(({ onPressPrimary, ...props }) => (
+  <Query query={getUserProfile}>
+    {({ data: { currentUser = { profile: {} } } = {} }) => {
+      const { firstName, lastName } = currentUser.profile;
+      return (
+        <Mutation
+          mutation={updateUserName}
+          update={async (cache, { data: { updateProfileFields } }) => {
+            await cache.writeQuery({
+              query: getUserProfile,
+              data: {
+                currentUser: {
+                  ...currentUser,
+                  profile: {
+                    ...currentUser.profile,
+                    firstName: updateProfileFields.firstName,
+                    lastName: updateProfileFields.lastName,
+                  },
+                },
+              },
+            });
+          }}
+        >
+          {(updateName) => (
+            <Formik
+              initialValues={{ firstName, lastName }}
+              validationSchema={Yup.object().shape({
+                firstName: Yup.string().required('First Name is required!'),
+                lastName: Yup.string().required('Last Name is required!'),
+              })}
+              enableReinitialize
+              onSubmit={async (variables, { setSubmitting, setFieldError }) => {
+                try {
+                  await updateName({ variables });
+                } catch (e) {
+                  const { graphQLErrors } = e;
+                  if (
+                    graphQLErrors.length &&
+                    graphQLErrors.find(({ message }) =>
+                      message.includes('User already exists')
+                    )
+                  ) {
+                    setFieldError(
+                      'firstName',
+                      'There was a problem sending your request'
+                    );
+                  } else {
+                    setFieldError(
+                      'firstName',
+                      'Unknown error. Please try again later.'
+                    );
                   }
-                  setSubmitting(false);
-                }}
-              >
-                {({
-                  isValid,
-                  isSubmitting,
-                  submitForm,
-                  values,
-                  touched,
-                  errors,
-                  setFieldValue,
-                }) => (
+                }
+                setSubmitting(false);
+              }}
+            >
+              {({ submitForm, values, touched, errors, setFieldValue }) => {
+                const handleOnPressPrimary = () => {
+                  submitForm();
+                  onPressPrimary();
+                };
+
+                return (
                   <AskName
-                    onPressPrimary={loading || isValid ? submitForm : null} // if form `isValid` show the primary nav button (next)
-                    onPressSecondary={
-                      // if form `!isValid` show the secondary nav button (skip)
-                      isValid ? null : onPressSecondary || onPressPrimary // if onPressSecondary exists use it else default onPressPrimary
-                    }
+                    onPressPrimary={handleOnPressPrimary}
                     firstName={firstName}
                     lastName={lastName}
                     values={values}
                     touched={touched}
                     errors={errors}
                     setFieldValue={setFieldValue}
-                    isLoading={loading || isSubmitting}
                     {...props}
                   />
-                )}
-              </Formik>
-            )}
-          </Mutation>
-        );
-      }}
-    </Query>
-  )
-);
+                );
+              }}
+            </Formik>
+          )}
+        </Mutation>
+      );
+    }}
+  </Query>
+));
 
 AskNameConnected.propTypes = {
   onPressPrimary: PropTypes.func,
-  onPressSecondary: PropTypes.func,
 };
 
 export default AskNameConnected;
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/AskName/AskNameConnected.tests.js b/apolloschurchapp/src/ui/Onboarding/slides/AskName/AskNameConnected.tests.js
index c6fb08e..03138c3 100644
--- a/apolloschurchapp/src/ui/Onboarding/slides/AskName/AskNameConnected.tests.js
+++ b/apolloschurchapp/src/ui/Onboarding/slides/AskName/AskNameConnected.tests.js
@@ -1,21 +1,13 @@
 import React from 'react';
 import renderer from 'react-test-renderer';
+import wait from 'waait';
 
 import Providers from 'apolloschurchapp/src/Providers';
-import { renderWithApolloData } from 'apolloschurchapp/src/utils/testUtils';
 
 import getUserProfile from '../../../../tabs/connect/getUserProfile';
 import AskNameConnected from './AskNameConnected';
 
-describe('The AskNameConnected component', () => {
-  it('renders in a default state', () => {
-    const tree = renderer.create(
-      <Providers>
-        <AskNameConnected onPressPrimary={jest.fn()} />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
+describe('PersonalDetails component', () => {
   it('renders User Name when logged in', async () => {
     const mock = {
       request: {
@@ -24,56 +16,21 @@ describe('The AskNameConnected component', () => {
       result: {
         data: {
           currentUser: {
-            __typename: 'AuthenticatedUser',
-            id: 'AuthenticatedUser:123',
             profile: {
-              __typename: 'Person',
-              id: 'Person:123',
-              gender: 'Male',
-              birthDate: '1980-02-10T00:00:00',
-              firstName: 'Isaac',
-              lastName: 'Hardy',
-              campus: {
-                __typename: 'Campus',
-                id: 'Campus:a0f64573eabf00a607bec911794d50fb',
-                name: 'Chicago Campus',
-                latitude: 42.09203,
-                longitude: -88.13289,
-                distanceFromLocation: null,
-                street1: '67 Algonquin Rd',
-                street2: '',
-                city: 'South Barrington',
-                state: 'IL',
-                postalCode: '60010-6143',
-                image: {
-                  __typename: 'ImageMediaSource',
-                  uri: 'https://picsum.photos/300/300/?random',
-                },
-              },
-              email: 'isaac.hardy@newspring.cc',
-              nickName: 'Batman',
-              photo: {
-                __typename: 'ImageMediaSource',
-                uri: 'https://some-uri.com/test.jpg',
-              },
+              firstName: 'Aaron',
+              lastName: 'Attendee',
+              nickName: 'A-Aron',
             },
           },
         },
       },
     };
-    const tree = await renderWithApolloData(
-      <Providers mocks={[mock]}>
-        <AskNameConnected onPressPrimary={jest.fn()} />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('renders loading state when fetching data', () => {
     const tree = renderer.create(
-      <Providers mocks={[]}>
-        <AskNameConnected onPressPrimary={jest.fn()} />
+      <Providers mocks={[mock]}>
+        <AskNameConnected />
       </Providers>
     );
+    await wait(0); // wait for response from graphql
     expect(tree).toMatchSnapshot();
   });
 });
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/AskNotifications/AskNotifications.js b/apolloschurchapp/src/ui/Onboarding/slides/AskNotifications/AskNotifications.js
index 776c00e..ae8d5fb 100644
--- a/apolloschurchapp/src/ui/Onboarding/slides/AskNotifications/AskNotifications.js
+++ b/apolloschurchapp/src/ui/Onboarding/slides/AskNotifications/AskNotifications.js
@@ -1,19 +1,39 @@
 import React, { memo } from 'react';
+import { View } from 'react-native';
 import PropTypes from 'prop-types';
-import { styled, PaddedView, Button } from '@apollosproject/ui-kit';
+import {
+  PaddedView,
+  FlexedView,
+  styled,
+  H2,
+  H5,
+  Button,
+} from '@apollosproject/ui-kit';
 
-import Slide, { SlideContent } from '../../Slide';
+import Slide from '../../Slide';
 
-const StyledSlideContent = styled({
-  flex: 1,
-  justifyContent: 'space-between',
-})(SlideContent);
+const ContentWrapper = styled({
+  height: '100%',
+})(View);
+
+const Content = styled({
+  justifyContent: 'flex-end',
+})(PaddedView);
+
+const Title = styled(({ theme }) => ({
+  color: theme.colors.primary,
+}))(H2);
+
+const StyledH5 = styled(({ theme }) => ({
+  color: theme.colors.text.secondary,
+  paddingBottom: theme.sizing.baseUnit * 1.5,
+}))(H5);
 
 // memo = sfc PureComponent 💥
 // eslint-disable-next-line react/display-name
 const AskNotifications = memo(
   ({
-    BackgroundComponent,
+    children,
     slideTitle,
     description,
     buttonText,
@@ -22,31 +42,33 @@ const AskNotifications = memo(
     ...props
   }) => (
     <Slide {...props}>
-      {BackgroundComponent}
-      <StyledSlideContent title={slideTitle} description={description}>
-        {buttonDisabled || onPressButton ? (
-          <PaddedView horizontal={false}>
+      <ContentWrapper>
+        <FlexedView>{children}</FlexedView>
+        <Content>
+          <Title>{slideTitle}</Title>
+          <StyledH5>{description}</StyledH5>
+          {buttonDisabled || onPressButton ? (
             <Button
               title={buttonText}
               onPress={onPressButton}
               disabled={buttonDisabled}
               pill={false}
             />
-          </PaddedView>
-        ) : null}
-      </StyledSlideContent>
+          ) : null}
+        </Content>
+      </ContentWrapper>
     </Slide>
   )
 );
 
 AskNotifications.propTypes = {
-  BackgroundComponent: PropTypes.oneOfType([
-    PropTypes.arrayOf(PropTypes.node),
-    PropTypes.node,
-  ]),
   /* The `Swiper` component used in `<onBoarding>` looks for and hijacks the title prop of it's
    * children. Thus we have to use a more unique name.
    */
+  children: PropTypes.oneOfType([
+    PropTypes.arrayOf(PropTypes.node),
+    PropTypes.node,
+  ]),
   slideTitle: PropTypes.string,
   description: PropTypes.string,
   buttonText: PropTypes.string,
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/AskNotifications/AskNotifications.stories.js b/apolloschurchapp/src/ui/Onboarding/slides/AskNotifications/AskNotifications.stories.js
index b4bc785..0506b87 100644
--- a/apolloschurchapp/src/ui/Onboarding/slides/AskNotifications/AskNotifications.stories.js
+++ b/apolloschurchapp/src/ui/Onboarding/slides/AskNotifications/AskNotifications.stories.js
@@ -6,14 +6,10 @@ import AskNotifications from './AskNotifications';
 
 storiesOf('Onboarding/slides/AskNotifications', module)
   .add('default', () => <AskNotifications />)
-  .add('BackgroundComponent', () => (
-    <AskNotifications
-      BackgroundComponent={
-        <GradientOverlayImage
-          source={'https://picsum.photos/640/640/?random'}
-        />
-      }
-    />
+  .add('children (image)', () => (
+    <AskNotifications>
+      <GradientOverlayImage source={'https://picsum.photos/640/640/?random'} />
+    </AskNotifications>
   ))
   .add('slideTitle', () => (
     <AskNotifications slideTitle={'Custom title text'} />
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/AskNotifications/AskNotifications.tests.js b/apolloschurchapp/src/ui/Onboarding/slides/AskNotifications/AskNotifications.tests.js
index 18aa958..1e411d8 100644
--- a/apolloschurchapp/src/ui/Onboarding/slides/AskNotifications/AskNotifications.tests.js
+++ b/apolloschurchapp/src/ui/Onboarding/slides/AskNotifications/AskNotifications.tests.js
@@ -15,16 +15,14 @@ describe('The Onboarding AskNotifications component', () => {
     );
     expect(tree).toMatchSnapshot();
   });
-  it('should render a BackgroundComponent', () => {
+  it('should render children (image)', () => {
     const tree = renderer.create(
       <Providers>
-        <AskNotifications
-          BackgroundComponent={
-            <GradientOverlayImage
-              source={'https://picsum.photos/640/640/?random'}
-            />
-          }
-        />
+        <AskNotifications>
+          <GradientOverlayImage
+            source={'https://picsum.photos/640/640/?random'}
+          />
+        </AskNotifications>
       </Providers>
     );
     expect(tree).toMatchSnapshot();
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/Features/Features.js b/apolloschurchapp/src/ui/Onboarding/slides/Features/Features.js
deleted file mode 100644
index 5bc7a91..0000000
--- a/apolloschurchapp/src/ui/Onboarding/slides/Features/Features.js
+++ /dev/null
@@ -1,42 +0,0 @@
-import React, { memo } from 'react';
-import PropTypes from 'prop-types';
-
-import Slide, { SlideContent } from '../../Slide';
-
-const Features = memo(
-  ({ firstName, description, BackgroundComponent, ...props }) => (
-    <Slide {...props}>
-      {BackgroundComponent}
-      <SlideContent
-        title={`Hey ${firstName || 'friend'}!`}
-        description={description}
-      />
-    </Slide>
-  )
-);
-
-Features.displayName = 'Features';
-
-Features.propTypes = {
-  /* The `Swiper` component used in `<onBoarding>` looks for and hijacks the title prop of it's
-   * children. Thus we have to use more unique name.
-   */
-  firstName: PropTypes.string,
-  description: PropTypes.string,
-  /* Recommended usage:
-   * - `Image` (react-native)
-   * - `GradientOverlayImage` (@apollosproject/ui-kit) for increased readability
-   * - `Video` (react-native-video) because moving pictures!
-   */
-  BackgroundComponent: PropTypes.oneOfType([
-    PropTypes.arrayOf(PropTypes.node),
-    PropTypes.node,
-  ]),
-};
-
-Features.defaultProps = {
-  description:
-    "We'd like to help personalize your mobile experience so we can help you with every step on your journey.",
-};
-
-export default Features;
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/Features/Features.stories.js b/apolloschurchapp/src/ui/Onboarding/slides/Features/Features.stories.js
index cfb804a..dfe3aa8 100644
--- a/apolloschurchapp/src/ui/Onboarding/slides/Features/Features.stories.js
+++ b/apolloschurchapp/src/ui/Onboarding/slides/Features/Features.stories.js
@@ -1,23 +1,16 @@
 import React from 'react';
 import { storiesOf } from '@storybook/react-native';
-import { GradientOverlayImage } from '@apollosproject/ui-kit';
 
-import Features from './Features';
+import Features from '.';
 
 storiesOf('Onboarding/slides/Features', module)
-  .add('default', () => <Features isLoading />)
+  .add('default', () => <Features />)
+  .add('withImg', () => (
+    <Features imgSrc={{ uri: 'https://picsum.photos/1200/1200?random' }} />
+  ))
   .add('firstName', () => <Features firstName={'firstName'} />)
   .add('slideTitle', () => <Features slideTitle={'Custom title text'} />)
   .add('description', () => (
     <Features description={'Custom description text'} />
   ))
-  .add('BackgroundComponent', () => (
-    <Features
-      BackgroundComponent={
-        <GradientOverlayImage
-          source={'https://picsum.photos/750/750/?random'}
-        />
-      }
-    />
-  ))
   .add('Slide props', () => <Features onPressPrimary={() => {}} />);
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/Features/Features.tests.js b/apolloschurchapp/src/ui/Onboarding/slides/Features/Features.tests.js
index 56b88a5..8ff8bf6 100644
--- a/apolloschurchapp/src/ui/Onboarding/slides/Features/Features.tests.js
+++ b/apolloschurchapp/src/ui/Onboarding/slides/Features/Features.tests.js
@@ -1,12 +1,11 @@
 import React from 'react';
 import renderer from 'react-test-renderer';
-import { GradientOverlayImage } from '@apollosproject/ui-kit';
 
 import Providers from 'apolloschurchapp/src/Providers';
 
-import Features from './Features';
+import Features from '.';
 
-describe('The Onboarding Features component', () => {
+describe('The Onboarding SlideWrapper component', () => {
   it('should render', () => {
     const tree = renderer.create(
       <Providers>
@@ -15,40 +14,35 @@ describe('The Onboarding Features component', () => {
     );
     expect(tree).toMatchSnapshot();
   });
-  it('should render a custom first name', () => {
+  it('should render a custom image', () => {
     const tree = renderer.create(
       <Providers>
-        <Features firstName={'firstName'} />
+        <Features imgSrc={{ uri: 'https://picsum.photos/1200/1200?random' }} />
       </Providers>
     );
     expect(tree).toMatchSnapshot();
   });
-  it('should render a custom title', () => {
+
+  it('should render a custom first name', () => {
     const tree = renderer.create(
       <Providers>
-        <Features slideTitle={'Custom title text'} />
+        <Features firstName={'firstName'} />
       </Providers>
     );
     expect(tree).toMatchSnapshot();
   });
-  it('should render a custom description', () => {
+  it('should render a custom title', () => {
     const tree = renderer.create(
       <Providers>
-        <Features description={'Custom description text'} />
+        <Features slideTitle={'Custom title text'} />
       </Providers>
     );
     expect(tree).toMatchSnapshot();
   });
-  it('should render a BackgroundComponent', () => {
+  it('should render a custom description', () => {
     const tree = renderer.create(
       <Providers>
-        <Features
-          BackgroundComponent={
-            <GradientOverlayImage
-              source={'https://picsum.photos/375/812/?random'}
-            />
-          }
-        />
+        <Features description={'Custom description text'} />
       </Providers>
     );
     expect(tree).toMatchSnapshot();
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/Features/FeaturesConnected.js b/apolloschurchapp/src/ui/Onboarding/slides/Features/FeaturesConnected.js
deleted file mode 100644
index e38452c..0000000
--- a/apolloschurchapp/src/ui/Onboarding/slides/Features/FeaturesConnected.js
+++ /dev/null
@@ -1,20 +0,0 @@
-import React from 'react';
-import { Query } from 'react-apollo';
-
-import getUserFirstName from './getUserFirstName';
-import Features from '.';
-
-const AskNameConnected = (props) => (
-  <Query query={getUserFirstName}>
-    {({
-      loading,
-      data: {
-        currentUser: { profile: { firstName } = { campus: {} } } = {},
-      } = {},
-    }) => <Features firstName={firstName} isLoading={loading} {...props} />}
-  </Query>
-);
-
-AskNameConnected.displayName = AskNameConnected;
-
-export default AskNameConnected;
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/Features/FeaturesConnected.tests.js b/apolloschurchapp/src/ui/Onboarding/slides/Features/FeaturesConnected.tests.js
deleted file mode 100644
index adcc821..0000000
--- a/apolloschurchapp/src/ui/Onboarding/slides/Features/FeaturesConnected.tests.js
+++ /dev/null
@@ -1,34 +0,0 @@
-import React from 'react';
-import renderer from 'react-test-renderer';
-import wait from 'waait';
-
-import Providers from 'apolloschurchapp/src/Providers';
-
-import getUserFirstName from './getUserFirstName';
-import FeaturesConnected from './FeaturesConnected';
-
-describe('The Onboarding FeaturesConnected component', () => {
-  it('renders with a firstName when logged in', async () => {
-    const mock = {
-      request: {
-        query: getUserFirstName,
-      },
-      result: {
-        data: {
-          currentUser: {
-            profile: {
-              firstName: 'Marty',
-            },
-          },
-        },
-      },
-    };
-    const tree = renderer.create(
-      <Providers mocks={[mock]}>
-        <FeaturesConnected />
-      </Providers>
-    );
-    await wait(0); // wait for response from graphql
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/Features/getUserFirstName.js b/apolloschurchapp/src/ui/Onboarding/slides/Features/getUserFirstName.js
deleted file mode 100644
index 8b0e38c..0000000
--- a/apolloschurchapp/src/ui/Onboarding/slides/Features/getUserFirstName.js
+++ /dev/null
@@ -1,13 +0,0 @@
-import gql from 'graphql-tag';
-
-export default gql`
-  query getUserFirstName {
-    currentUser {
-      id
-      profile {
-        id
-        firstName
-      }
-    }
-  }
-`;
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/Features/index.js b/apolloschurchapp/src/ui/Onboarding/slides/Features/index.js
index 3d442b1..f07cb75 100644
--- a/apolloschurchapp/src/ui/Onboarding/slides/Features/index.js
+++ b/apolloschurchapp/src/ui/Onboarding/slides/Features/index.js
@@ -1,4 +1,62 @@
-import Features from './Features';
+import React, { memo } from 'react';
+import { Image, View } from 'react-native';
+import PropTypes from 'prop-types';
+
+import { styled, H2, H5, PaddedView } from '@apollosproject/ui-kit';
+
+import Slide from '../../Slide';
+
+const Title = styled(({ theme }) => ({
+  color: theme.colors.primary,
+  marginBottom: theme.sizing.baseUnit * 0.5,
+}))(H2);
+
+const StyledH5 = styled(({ theme }) => ({
+  color: theme.colors.text.secondary,
+}))(H5);
+
+const StyledImage = styled(({ theme }) => ({
+  flex: 3,
+  resizeMode: 'contain',
+  marginBottom: theme.sizing.baseUnit,
+}))(Image);
+
+const Content = styled({
+  flex: 1,
+  justifyContent: 'center',
+})(View);
+
+const TextContent = styled({
+  flex: 1,
+  justifyContent: 'center',
+})(PaddedView);
+
+// eslint-disable-next-line react/display-name
+const Features = memo(({ firstName, description, imgSrc, ...props }) => (
+  <Slide {...props}>
+    <Content>
+      {imgSrc ? <StyledImage source={imgSrc} /> : null}
+      <TextContent>
+        <Title>{`Hey ${firstName}!`}</Title>
+        <StyledH5>{description}</StyledH5>
+      </TextContent>
+    </Content>
+  </Slide>
+));
+
+Features.propTypes = {
+  /* The `Swiper` component used in `<onBoarding>` looks for and hijacks the title prop of it's
+   * children. Thus we have to use more unique name.
+   */
+  firstName: PropTypes.string,
+  description: PropTypes.string,
+  imgSrc: PropTypes.string,
+};
+
+Features.defaultProps = {
+  firstName: 'friend',
+  description:
+    "We'd like to help personalize your mobile experience so we can help you with every step on your journey.",
+};
 
-export FeaturesConnected from './FeaturesConnected';
 export default Features;
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/LocationFinder/LocationFinder.js b/apolloschurchapp/src/ui/Onboarding/slides/LocationFinder/LocationFinder.js
index 53eb8fe..7a07ab4 100644
--- a/apolloschurchapp/src/ui/Onboarding/slides/LocationFinder/LocationFinder.js
+++ b/apolloschurchapp/src/ui/Onboarding/slides/LocationFinder/LocationFinder.js
@@ -1,30 +1,51 @@
 import React, { memo } from 'react';
+import { View } from 'react-native';
 import PropTypes from 'prop-types';
 
-import { PaddedView, styled, Button, Touchable } from '@apollosproject/ui-kit';
+import {
+  PaddedView,
+  FlexedView,
+  styled,
+  H2,
+  H5,
+  Button,
+  Touchable,
+} from '@apollosproject/ui-kit';
 
 import CampusCard from 'apolloschurchapp/src/user-settings/Locations/CampusCard';
-
-import Slide, { SlideContent } from '../../Slide';
+import Slide from '../../Slide';
 
 const getCampusAddress = (campus) =>
   `${campus.street1}\n${campus.city}, ${campus.state} ${campus.postalCode}`;
 
+const ContentWrapper = styled({
+  height: '100%',
+})(View);
+
+const Content = styled({
+  justifyContent: 'flex-end',
+})(PaddedView);
+
+const Title = styled(({ theme }) => ({
+  color: theme.colors.primary,
+}))(H2);
+
+const StyledH5 = styled(({ theme }) => ({
+  color: theme.colors.text.secondary,
+  paddingBottom: theme.sizing.baseUnit * 1.5,
+}))(H5);
+
 const StyledCampusCard = styled(({ theme }) => ({
+  marginHorizontal: theme.sizing.baseUnit,
   marginBottom: theme.sizing.baseUnit,
 }))(CampusCard);
 
-const StyledSlideContent = styled({
-  flex: 1,
-  justifyContent: 'space-between',
-})(SlideContent);
-
 // memo = sfc PureComponent 💥
 // eslint-disable-next-line react/display-name
 const LocationFinder = memo(
   ({
     onPressPrimary,
-    BackgroundComponent,
+    children,
     slideTitle,
     description,
     buttonText,
@@ -47,8 +68,12 @@ const LocationFinder = memo(
       }
       {...props}
     >
-      {BackgroundComponent}
-      <StyledSlideContent title={slideTitle} description={description}>
+      <ContentWrapper>
+        <FlexedView>{children}</FlexedView>
+        <Content>
+          <Title>{slideTitle}</Title>
+          <StyledH5>{description}</StyledH5>
+        </Content>
         {campus ? (
           <Touchable onPress={onPressButton}>
             <StyledCampusCard
@@ -60,16 +85,16 @@ const LocationFinder = memo(
             />
           </Touchable>
         ) : (
-          <PaddedView horizontal={false}>
+          <Content>
             <Button
               title={buttonText}
               onPress={onPressButton}
               disabled={buttonDisabled}
               pill={false}
             />
-          </PaddedView>
+          </Content>
         )}
-      </StyledSlideContent>
+      </ContentWrapper>
     </Slide>
   )
 );
@@ -79,7 +104,7 @@ LocationFinder.propTypes = {
    * children. Thus we have to use a more unique name.
    */
   onPressPrimary: PropTypes.func,
-  BackgroundComponent: PropTypes.oneOfType([
+  children: PropTypes.oneOfType([
     PropTypes.arrayOf(PropTypes.node),
     PropTypes.node,
   ]),
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/LocationFinder/LocationFinder.stories.js b/apolloschurchapp/src/ui/Onboarding/slides/LocationFinder/LocationFinder.stories.js
index e41ed90..97a6246 100644
--- a/apolloschurchapp/src/ui/Onboarding/slides/LocationFinder/LocationFinder.stories.js
+++ b/apolloschurchapp/src/ui/Onboarding/slides/LocationFinder/LocationFinder.stories.js
@@ -7,14 +7,10 @@ import LocationFinder from './LocationFinder';
 
 storiesOf('Onboarding/slides/LocationFinder', module)
   .add('default', () => <LocationFinder />)
-  .add('BackgroundComponent', () => (
-    <LocationFinder
-      BackgroundComponent={
-        <GradientOverlayImage
-          source={'https://picsum.photos/640/640/?random'}
-        />
-      }
-    />
+  .add('children (image)', () => (
+    <LocationFinder>
+      <GradientOverlayImage source={'https://picsum.photos/640/640/?random'} />
+    </LocationFinder>
   ))
   .add('slideTitle', () => <LocationFinder slideTitle={'Custom title text'} />)
   .add('description', () => (
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/LocationFinder/LocationFinder.tests.js b/apolloschurchapp/src/ui/Onboarding/slides/LocationFinder/LocationFinder.tests.js
index 065ce4c..d1a8341 100644
--- a/apolloschurchapp/src/ui/Onboarding/slides/LocationFinder/LocationFinder.tests.js
+++ b/apolloschurchapp/src/ui/Onboarding/slides/LocationFinder/LocationFinder.tests.js
@@ -31,16 +31,14 @@ describe('The Onboarding LocationFinder component', () => {
     );
     expect(tree).toMatchSnapshot();
   });
-  it('should render a BackgroundComponent', () => {
+  it('should render children (image)', () => {
     const tree = renderer.create(
       <Providers>
-        <LocationFinder
-          BackgroundComponent={
-            <GradientOverlayImage
-              source={'https://picsum.photos/640/640/?random'}
-            />
-          }
-        />
+        <LocationFinder>
+          <GradientOverlayImage
+            source={'https://picsum.photos/640/640/?random'}
+          />
+        </LocationFinder>
       </Providers>
     );
     expect(tree).toMatchSnapshot();
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/LocationFinder/LocationFinderConnected.js b/apolloschurchapp/src/ui/Onboarding/slides/LocationFinder/LocationFinderConnected.js
index 22a66ba..b02c212 100644
--- a/apolloschurchapp/src/ui/Onboarding/slides/LocationFinder/LocationFinderConnected.js
+++ b/apolloschurchapp/src/ui/Onboarding/slides/LocationFinder/LocationFinderConnected.js
@@ -39,7 +39,7 @@ class LocationFinderConnected extends PureComponent {
 }
 
 LocationFinderConnected.propTypes = {
-  onPressPrimary: PropTypes.func,
+  onPressPrimary: PropTypes.func.isRequired,
 };
 
 LocationFinderConnected.displayName = 'LocationFinderConnected';
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/index.js b/apolloschurchapp/src/ui/Onboarding/slides/index.js
index 16c835a..36d93c7 100644
--- a/apolloschurchapp/src/ui/Onboarding/slides/index.js
+++ b/apolloschurchapp/src/ui/Onboarding/slides/index.js
@@ -7,4 +7,4 @@ export LocationFinder, {
   LocationFinderConnected,
   LocationFinderMapView,
 } from './LocationFinder';
-export Features, { FeaturesConnected } from './Features';
+export Features from './Features';
diff --git a/apolloschurchapp/src/ui/Splash/Splash.stories.js b/apolloschurchapp/src/ui/Splash/Splash.stories.js
new file mode 100644
index 0000000..a39677a
--- /dev/null
+++ b/apolloschurchapp/src/ui/Splash/Splash.stories.js
@@ -0,0 +1,20 @@
+import React from 'react';
+import { storiesOf } from '@storybook/react-native';
+
+import Splash from '.';
+
+storiesOf('Splash', module)
+  .add('default', () => <Splash />)
+  .add('imgSrc & !isLight', () => (
+    <Splash
+      imgSrc={{
+        uri: 'https://picsum.photos/1200/1200?random',
+        height: 1200,
+        width: 1200,
+      }}
+      isLight={false}
+    />
+  ))
+  .add('slideTitle', () => <Splash slideTitle={'Custom title text'} />)
+  .add('description', () => <Splash description={'Custom description text'} />)
+  .add('Slide props', () => <Splash onPressPrimary={() => {}} />);
diff --git a/apolloschurchapp/src/ui/LandingScreen/LandingScreen.tests.js b/apolloschurchapp/src/ui/Splash/Splash.tests.js
similarity index 53%
rename from apolloschurchapp/src/ui/LandingScreen/LandingScreen.tests.js
rename to apolloschurchapp/src/ui/Splash/Splash.tests.js
index 13e64f1..2fa2cdd 100644
--- a/apolloschurchapp/src/ui/LandingScreen/LandingScreen.tests.js
+++ b/apolloschurchapp/src/ui/Splash/Splash.tests.js
@@ -1,54 +1,46 @@
 import React from 'react';
 import renderer from 'react-test-renderer';
-import { GradientOverlayImage } from '@apollosproject/ui-kit';
 
 import Providers from 'apolloschurchapp/src/Providers';
 
-import LandingScreen from '.';
+import Splash from '.';
 
-describe('The Onboarding LandingScreen component', () => {
+describe('The Onboarding Splash component', () => {
   it('should render', () => {
     const tree = renderer.create(
       <Providers>
-        <LandingScreen />
+        <Splash />
       </Providers>
     );
     expect(tree).toMatchSnapshot();
   });
-  it('should render a custom title', () => {
-    const tree = renderer.create(
-      <Providers>
-        <LandingScreen slideTitle={'Custom title text'} />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render a custom description', () => {
+  it('should render light text on a dark background', () => {
     const tree = renderer.create(
       <Providers>
-        <LandingScreen description={'Custom description text'} />
+        <Splash
+          imgSrc={{
+            uri: 'https://picsum.photos/1200/1200?random',
+            height: 1200,
+            width: 1200,
+          }}
+          isLight={false}
+        />
       </Providers>
     );
     expect(tree).toMatchSnapshot();
   });
-  it('should render with a custom text color', () => {
+  it('should render a custom title', () => {
     const tree = renderer.create(
       <Providers>
-        <LandingScreen textColor={'salmon'} />
+        <Splash slideTitle={'Custom title text'} />
       </Providers>
     );
     expect(tree).toMatchSnapshot();
   });
-  it('should render with an ImageComponent', () => {
+  it('should render a custom description', () => {
     const tree = renderer.create(
       <Providers>
-        <LandingScreen
-          BackgroundComponent={
-            <GradientOverlayImage
-              source={'https://picsum.photos/375/812/?random'}
-            />
-          }
-        />
+        <Splash description={'Custom description text'} />
       </Providers>
     );
     expect(tree).toMatchSnapshot();
@@ -56,7 +48,7 @@ describe('The Onboarding LandingScreen component', () => {
   it('should pass additional props to Slide', () => {
     const tree = renderer.create(
       <Providers>
-        <LandingScreen onPressPrimary={jest.fn()} />
+        <Splash onPressPrimary={jest.fn()} />
       </Providers>
     );
     expect(tree).toMatchSnapshot();
diff --git a/apolloschurchapp/src/ui/Splash/index.js b/apolloschurchapp/src/ui/Splash/index.js
new file mode 100644
index 0000000..7e9f6ff
--- /dev/null
+++ b/apolloschurchapp/src/ui/Splash/index.js
@@ -0,0 +1,75 @@
+import React, { memo } from 'react';
+import { Image } from 'react-native';
+import PropTypes from 'prop-types';
+
+import {
+  styled,
+  withTheme,
+  Icon,
+  H1,
+  H4,
+  PaddedView,
+} from '@apollosproject/ui-kit';
+
+import Slide from '../Onboarding/Slide';
+
+const Content = styled({
+  flex: 1,
+  justifyContent: 'center',
+})(PaddedView);
+
+const BrandIcon = withTheme(({ theme, isLight }) => ({
+  name: 'brand-icon',
+  size: theme.sizing.baseUnit * 3.0,
+  fill: isLight ? theme.colors.text.primary : theme.colors.white,
+  style: {
+    marginBottom: theme.sizing.baseUnit,
+  },
+}))(Icon);
+
+const Title = styled(({ theme, isLight }) => ({
+  color: isLight ? theme.colors.text.primary : theme.colors.white,
+  marginBottom: theme.sizing.baseUnit * 2,
+}))(H1);
+
+const CoverImage = styled({
+  resizeMode: 'cover',
+  position: 'absolute',
+})(Image);
+
+const StyledH4 = styled(({ theme, isLight }) => ({
+  color: isLight ? theme.colors.text.primary : theme.colors.white,
+}))(H4);
+
+// eslint-disable-next-line react/display-name
+const Splash = memo(
+  ({ slideTitle, description, imgSrc, isLight, ...props }) => (
+    <Slide {...props}>
+      {imgSrc ? <CoverImage source={imgSrc} /> : null}
+      <Content>
+        <BrandIcon isLight={isLight} />
+        <Title isLight={isLight}>{slideTitle}</Title>
+        <StyledH4 isLight={isLight}>{description}</StyledH4>
+      </Content>
+    </Slide>
+  )
+);
+
+Splash.propTypes = {
+  /* The `Swiper` component used in `<onBoarding>` looks for and hijacks the title prop of it's
+   * children. Thus we have to use more unique name.
+   */
+  slideTitle: PropTypes.string,
+  description: PropTypes.string,
+  imgSrc: PropTypes.string,
+  isLight: PropTypes.boolean,
+};
+
+Splash.defaultProps = {
+  slideTitle: "We're glad you're here.".toUpperCase(),
+  description:
+    "We're not just a building you go to, but a family to belong to.",
+  isLight: true,
+};
+
+export default Splash;
diff --git a/apolloschurchapp/src/ui/UserAvatarView/AvatarForm.js b/apolloschurchapp/src/ui/UserAvatarView/AvatarForm.js
index f4a46fe..684344a 100644
--- a/apolloschurchapp/src/ui/UserAvatarView/AvatarForm.js
+++ b/apolloschurchapp/src/ui/UserAvatarView/AvatarForm.js
@@ -28,9 +28,11 @@ GetPhotoData.propTypes = {
   children: PropTypes.func.isRequired,
 };
 
-const StyledAvatar = styled(({ theme }) => ({
-  marginRight: 0,
-  marginBottom: theme.sizing.baseUnit / 2,
+const StyledAvatar = withTheme(({ theme }) => ({
+  containerStyle: {
+    marginRight: 0,
+    marginBottom: theme.sizing.baseUnit / 2,
+  },
 }))(Avatar);
 
 const RoundTouchable = withTheme(({ theme, size }) => ({
diff --git a/apolloschurchapp/src/ui/UserAvatarView/index.js b/apolloschurchapp/src/ui/UserAvatarView/index.js
index d18a809..51dd27b 100644
--- a/apolloschurchapp/src/ui/UserAvatarView/index.js
+++ b/apolloschurchapp/src/ui/UserAvatarView/index.js
@@ -41,9 +41,7 @@ const UserAvatarView = withIsLoading(
         <H3>
           {firstName} {lastName}
         </H3>
-        {location && (
-          <ChannelLabel icon="pin" label={location} isLoading={isLoading} />
-        )}
+        <ChannelLabel icon="pin" label={location || ''} isLoading={isLoading} />
       </Content>
     </Container>
   )
diff --git a/apolloschurchapp/src/ui/WebBrowser/Browser.android.js b/apolloschurchapp/src/ui/WebBrowser/Browser.android.js
index cc7d39d..49dc211 100644
--- a/apolloschurchapp/src/ui/WebBrowser/Browser.android.js
+++ b/apolloschurchapp/src/ui/WebBrowser/Browser.android.js
@@ -1,9 +1,14 @@
 import { Linking } from 'react-native';
+import { CustomTabs } from 'react-native-custom-tabs';
 
 const Browser = {
-  openURL: async (url) => {
-    if (!Linking.canOpenURL(url)) throw new Error('URL not supported');
-    Linking.openURL(url);
+  openURL: async (url, options = {}) => {
+    try {
+      await CustomTabs.openURL(url, options);
+    } catch (e) {
+      if (!Linking.canOpenURL()) throw new Error('URL not supported');
+      Linking.openURL(url);
+    }
   },
 };
 
diff --git a/apolloschurchapp/src/ui/WebBrowser/Browser.ios.js b/apolloschurchapp/src/ui/WebBrowser/Browser.ios.js
index 0716bff..7de160f 100644
--- a/apolloschurchapp/src/ui/WebBrowser/Browser.ios.js
+++ b/apolloschurchapp/src/ui/WebBrowser/Browser.ios.js
@@ -10,7 +10,7 @@ const Browser = {
         ...options,
       });
     } catch (e) {
-      if (!Linking.canOpenURL(url)) throw new Error('URL not supported');
+      if (!Linking.canOpenURL()) throw new Error('URL not supported');
       Linking.openURL(url);
     }
   },
