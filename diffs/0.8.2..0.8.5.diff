diff --git a/apollos-church-api/config.yml b/apollos-church-api/config.yml
index ef4505b..f240612 100644
--- a/apollos-church-api/config.yml
+++ b/apollos-church-api/config.yml
@@ -95,6 +95,9 @@ ROCK_MAPPINGS:
     - 6
     - 8
 
+  CAMPAIGN_CHANNEL_IDS:
+    - 11
+
 # Default mapping of field types -> ids. There's probably no reason to edit this.
 ROCK_CONSTANTS:
   TEXT: 1
diff --git a/apollos-church-api/package.json b/apollos-church-api/package.json
index c755a9e..cee2178 100644
--- a/apollos-church-api/package.json
+++ b/apollos-church-api/package.json
@@ -1,6 +1,6 @@
 {
   "name": "apollos-church-api",
-  "version": "0.8.2",
+  "version": "0.8.5",
   "private": true,
   "main": "lib/index.js",
   "scripts": {
@@ -34,15 +34,15 @@
     ]
   },
   "dependencies": {
-    "@apollosproject/config": "^0.8.2",
-    "@apollosproject/data-connector-analytics": "^0.8.2",
-    "@apollosproject/data-connector-bible": "^0.8.2",
-    "@apollosproject/data-connector-church-online": "^0.8.2",
-    "@apollosproject/data-connector-cloudinary": "^0.8.2",
-    "@apollosproject/data-connector-onesignal": "^0.8.2",
-    "@apollosproject/data-connector-passes": "^0.8.2",
-    "@apollosproject/data-connector-rock": "^0.8.2",
-    "@apollosproject/server-core": "^0.8.2",
+    "@apollosproject/config": "^0.8.5",
+    "@apollosproject/data-connector-analytics": "^0.8.5",
+    "@apollosproject/data-connector-bible": "^0.8.5",
+    "@apollosproject/data-connector-church-online": "^0.8.5",
+    "@apollosproject/data-connector-cloudinary": "^0.8.5",
+    "@apollosproject/data-connector-onesignal": "^0.8.5",
+    "@apollosproject/data-connector-passes": "^0.8.5",
+    "@apollosproject/data-connector-rock": "^0.8.5",
+    "@apollosproject/server-core": "^0.8.5",
     "apollo-server": "^2.0.5",
     "color": "3.0.0",
     "dotenv": "6.0.0",
@@ -51,8 +51,8 @@
     "randomcolor": "0.5.3"
   },
   "devDependencies": {
-    "@apollosproject/apollo-server-env-mock": "^0.8.2",
-    "@apollosproject/babel-preset-apollos": "^0.8.2",
+    "@apollosproject/apollo-server-env-mock": "^0.8.5",
+    "@apollosproject/babel-preset-apollos": "^0.8.5",
     "@babel/cli": "7.1.5",
     "@babel/core": "7.1.6",
     "codecov": "3.0.2",
diff --git a/apolloschurchapp/android/app/build.gradle b/apolloschurchapp/android/app/build.gradle
index 65ba95e..bb27535 100644
--- a/apolloschurchapp/android/app/build.gradle
+++ b/apolloschurchapp/android/app/build.gradle
@@ -117,8 +117,8 @@ android {
         applicationId "com.apolloschurch.app"
         minSdkVersion rootProject.ext.minSdkVersion
         targetSdkVersion rootProject.ext.targetSdkVersion
-        versionCode 6
-        versionName "0.8.1"
+        versionCode 9
+        versionName "0.8.4"
         ndk {
             abiFilters "armeabi-v7a", "x86"
         }
@@ -151,10 +151,19 @@ android {
             }
         }
     }
+    compileOptions {
+        targetCompatibility JavaVersion.VERSION_1_8
+    }
 }
 
 dependencies {
-    implementation project(':react-native-maps')
+       // added this and the two google play packages below when upgraded rn-maps to 0.24.2
+    implementation(project(':react-native-maps')){
+      exclude group: 'com.google.android.gms', module: 'play-services-base'
+      exclude group: 'com.google.android.gms', module: 'play-services-maps'
+    }
+    implementation 'com.google.android.gms:play-services-base:10.0.1'
+    implementation 'com.google.android.gms:play-services-maps:10.0.1'
     implementation project(':rn-fetch-blob')
     implementation project(':react-native-webview')
     implementation project(':react-native-video')
@@ -166,7 +175,6 @@ dependencies {
     implementation project(':react-native-linear-gradient')
     implementation project(':react-native-image-picker')
     implementation project(':react-native-device-info')
-    implementation project(':react-native-custom-tabs')
     implementation project(':react-native-config')
     implementation fileTree(dir: "libs", include: ["*.jar"])
     implementation "com.android.support:appcompat-v7:${rootProject.ext.supportLibVersion}"
diff --git a/apolloschurchapp/android/app/src/main/java/com/apolloschurchapp/MainApplication.java b/apolloschurchapp/android/app/src/main/java/com/apolloschurchapp/MainApplication.java
index 2555f80..aa318e0 100644
--- a/apolloschurchapp/android/app/src/main/java/com/apolloschurchapp/MainApplication.java
+++ b/apolloschurchapp/android/app/src/main/java/com/apolloschurchapp/MainApplication.java
@@ -9,13 +9,12 @@ import com.reactnativecommunity.webview.RNCWebViewPackage;
 import com.brentvatne.react.ReactVideoPackage;
 import com.horcrux.svg.SvgPackage;
 import org.devio.rn.splashscreen.SplashScreenReactPackage;
-import com.swmansion.rnscreens.RNScreenPackage;
+import com.swmansion.rnscreens.RNScreensPackage;
 import com.geektime.rnonesignalandroid.ReactNativeOneSignalPackage;
 import com.tanguyantoine.react.MusicControl;
 import com.BV.LinearGradient.LinearGradientPackage;
 import com.imagepicker.ImagePickerPackage;
 import com.learnium.RNDeviceInfo.RNDeviceInfo;
-import com.github.droibit.android.reactnative.customtabs.CustomTabsPackage;
 import com.lugg.ReactNativeConfig.ReactNativeConfigPackage;
 import com.facebook.react.ReactNativeHost;
 import com.facebook.react.ReactPackage;
@@ -43,13 +42,12 @@ public class MainApplication extends Application implements ReactApplication {
             new ReactVideoPackage(),
             new SvgPackage(),
             new SplashScreenReactPackage(),
-            new RNScreenPackage(),
+            new RNScreensPackage(),
             new ReactNativeOneSignalPackage(),
             new MusicControl(),
             new LinearGradientPackage(),
             new ImagePickerPackage(),
             new RNDeviceInfo(),
-            new CustomTabsPackage(),
             new ReactNativeConfigPackage()
       );
     }
diff --git a/apolloschurchapp/android/settings.gradle b/apolloschurchapp/android/settings.gradle
index d7961bd..d705770 100644
--- a/apolloschurchapp/android/settings.gradle
+++ b/apolloschurchapp/android/settings.gradle
@@ -1,8 +1,6 @@
 rootProject.name = 'apolloschurchapp'
 include ':react-native-maps'
 project(':react-native-maps').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-maps/lib/android')
-include ':react-native-maps'
-project(':react-native-maps').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-maps/lib/android')
 include ':rn-fetch-blob'
 project(':rn-fetch-blob').projectDir = new File(rootProject.projectDir, '../node_modules/rn-fetch-blob/android')
 include ':react-native-webview'
@@ -25,8 +23,6 @@ include ':react-native-image-picker'
 project(':react-native-image-picker').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-image-picker/android')
 include ':react-native-device-info'
 project(':react-native-device-info').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-device-info/android')
-include ':react-native-custom-tabs'
-project(':react-native-custom-tabs').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-custom-tabs/android')
 include ':react-native-config'
 project(':react-native-config').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-config/android')
 
diff --git a/apolloschurchapp/index.js b/apolloschurchapp/index.js
index d009549..f9ec2cf 100644
--- a/apolloschurchapp/index.js
+++ b/apolloschurchapp/index.js
@@ -1,7 +1,14 @@
 import { AppRegistry, YellowBox } from 'react-native';
+import SplashScreen from 'react-native-splash-screen';
 
 import App from './src';
 
+// If there's an error before the splash screen goes away, you never see that error.
+// This tries to hide the splash screen so you can see the error.
+// Shouldnt't do anything in Prod.
+// Depending on the error, splash screen might not go away ;)
+global.ErrorUtils.setGlobalHandler(() => SplashScreen.hide());
+
 YellowBox.ignoreWarnings([
   'Warning: isMounted(...) is deprecated',
   'Module RCTImageLoader',
diff --git a/apolloschurchapp/ios/apolloschurchapp-tvOS/Info.plist b/apolloschurchapp/ios/apolloschurchapp-tvOS/Info.plist
index 0bbf896..6d14b73 100644
--- a/apolloschurchapp/ios/apolloschurchapp-tvOS/Info.plist
+++ b/apolloschurchapp/ios/apolloschurchapp-tvOS/Info.plist
@@ -15,11 +15,11 @@
 	<key>CFBundlePackageType</key>
 	<string>APPL</string>
 	<key>CFBundleShortVersionString</key>
-	<string>0.8.1</string>
+	<string>0.8.4</string>
 	<key>CFBundleSignature</key>
 	<string>????</string>
 	<key>CFBundleVersion</key>
-	<string>6</string>
+	<string>9</string>
 	<key>LSRequiresIPhoneOS</key>
 	<true />
 	<key>UILaunchStoryboardName</key>
diff --git a/apolloschurchapp/ios/apolloschurchapp-tvOSTests/Info.plist b/apolloschurchapp/ios/apolloschurchapp-tvOSTests/Info.plist
index 8d51f57..2e3a4e3 100644
--- a/apolloschurchapp/ios/apolloschurchapp-tvOSTests/Info.plist
+++ b/apolloschurchapp/ios/apolloschurchapp-tvOSTests/Info.plist
@@ -15,10 +15,10 @@
 	<key>CFBundlePackageType</key>
 	<string>BNDL</string>
 	<key>CFBundleShortVersionString</key>
-	<string>0.8.1</string>
+	<string>0.8.4</string>
 	<key>CFBundleSignature</key>
 	<string>????</string>
 	<key>CFBundleVersion</key>
-	<string>6</string>
+	<string>9</string>
 </dict>
 </plist>
diff --git a/apolloschurchapp/ios/apolloschurchapp.xcodeproj/project.pbxproj b/apolloschurchapp/ios/apolloschurchapp.xcodeproj/project.pbxproj
index 576d919..632eda5 100644
--- a/apolloschurchapp/ios/apolloschurchapp.xcodeproj/project.pbxproj
+++ b/apolloschurchapp/ios/apolloschurchapp.xcodeproj/project.pbxproj
@@ -5,7 +5,6 @@
 	};
 	objectVersion = 46;
 	objects = {
-
 /* Begin PBXBuildFile section */
 		00C302E51ABCBA2D00DB3ED1 /* libRCTActionSheet.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 00C302AC1ABCB8CE00DB3ED1 /* libRCTActionSheet.a */; };
 		00C302E71ABCBA2D00DB3ED1 /* libRCTGeolocation.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 00C302BA1ABCB90400DB3ED1 /* libRCTGeolocation.a */; };
@@ -41,7 +40,6 @@
 		2D16E6881FA4F8E400B85C8A /* libReact.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 2D16E6891FA4F8E400B85C8A /* libReact.a */; };
 		2DCD954D1E0B4F2C00145EB5 /* apolloschurchappTests.m in Sources */ = {isa = PBXBuildFile; fileRef = 00E356F21AD99517003FC87E /* apolloschurchappTests.m */; };
 		2DF0FFEE2056DD460020B375 /* libReact.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 3DAD3EA31DF850E9000B6D8A /* libReact.a */; };
-		470A7E49F0A8424780FFAE7B /* libDBCustomTabs.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 9DA3750D49B0422F9A4B45BE /* libDBCustomTabs.a */; };
 		4994C0DA2471456ABE1D0174 /* libRNAirplay.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 0BE434FF7E9549F392208DEF /* libRNAirplay.a */; };
 		4C19EE32F0B441CD93BB0172 /* libRCTOneSignal.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 0D480D95FC7F4569B8B934E3 /* libRCTOneSignal.a */; };
 		578FFEC1D7D54C9B871A9E5B /* Inter-UI-BlackItalic.otf in Resources */ = {isa = PBXBuildFile; fileRef = 5A5A2BC2998547F4816B82E4 /* Inter-UI-BlackItalic.otf */; };
@@ -356,13 +354,6 @@
 			remoteGlobalIDString = 3DF7F6AC203AA09B00D0EAB7;
 			remoteInfo = "ReactNativeConfig-tvOS";
 		};
-		79CEBFEF223011FE00D8F685 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 6F1D5B192D1D4948B39D4BFE /* ReactNativeCustomTabs.xcodeproj */;
-			proxyType = 2;
-			remoteGlobalIDString = DA7118681CC9158A0087DF95;
-			remoteInfo = DBCustomTabs;
-		};
 		79CEBFF2223011FE00D8F685 /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
 			containerPortal = 3923D6EFF26D4A53B8BDF8C6 /* RNAirplay.xcodeproj */;
@@ -563,14 +554,12 @@
 		63998175DB3B4506ACF27B92 /* ReactNativeConfig.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = ReactNativeConfig.xcodeproj; path = "../node_modules/react-native-config/ios/ReactNativeConfig.xcodeproj"; sourceTree = "<group>"; };
 		63F6EE53A9B44B4388B5F1C2 /* Inter-UI-Italic.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-Italic.otf"; path = "../assets/fonts/Inter-UI-Italic.otf"; sourceTree = "<group>"; };
 		67356E00D116467DA58DF3CC /* libRNSVG-tvOS.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = "libRNSVG-tvOS.a"; sourceTree = "<group>"; };
-		6F1D5B192D1D4948B39D4BFE /* ReactNativeCustomTabs.xcodeproj */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "wrapper.pb-project"; name = ReactNativeCustomTabs.xcodeproj; path = "../node_modules/react-native-custom-tabs/ios/ReactNativeCustomTabs.xcodeproj"; sourceTree = "<group>"; };
 		74625A1E54234FB7BE12070D /* libMusicControl-tvOS.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = "libMusicControl-tvOS.a"; sourceTree = "<group>"; };
 		78C398B01ACF4ADC00677621 /* RCTLinking.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = RCTLinking.xcodeproj; path = "../node_modules/react-native/Libraries/LinkingIOS/RCTLinking.xcodeproj"; sourceTree = "<group>"; };
 		7A505BEDA0674A7F9DD875ED /* libRNDeviceInfo-tvOS.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = "libRNDeviceInfo-tvOS.a"; sourceTree = "<group>"; };
 		832341B01AAA6A8300B99B32 /* RCTText.xcodeproj */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.pb-project"; name = RCTText.xcodeproj; path = "../node_modules/react-native/Libraries/Text/RCTText.xcodeproj"; sourceTree = "<group>"; };
 		97222E2EB5E54C7FA6104218 /* libReactNativeConfig-tvOS.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = "libReactNativeConfig-tvOS.a"; sourceTree = "<group>"; };
 		9862436C289A498D8B2E6201 /* libAirMaps.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libAirMaps.a; sourceTree = "<group>"; };
-		9DA3750D49B0422F9A4B45BE /* libDBCustomTabs.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libDBCustomTabs.a; sourceTree = "<group>"; };
 		9F0EC3F23A3F4FFBBBC6583A /* libBVLinearGradient.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libBVLinearGradient.a; sourceTree = "<group>"; };
 		A44246D0E44E48C4B8335DBD /* libRNScreens.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libRNScreens.a; sourceTree = "<group>"; };
 		A460FD7884FD4574A818005A /* Inter-UI-MediumItalic.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Inter-UI-MediumItalic.otf"; path = "../assets/fonts/Inter-UI-MediumItalic.otf"; sourceTree = "<group>"; };
@@ -621,7 +610,6 @@
 				139FDEF61B0652A700C62182 /* libRCTWebSocket.a in Frameworks */,
 				4994C0DA2471456ABE1D0174 /* libRNAirplay.a in Frameworks */,
 				A975E0B94A5D44AEB410E546 /* libReactNativeConfig.a in Frameworks */,
-				470A7E49F0A8424780FFAE7B /* libDBCustomTabs.a in Frameworks */,
 				CFE4716D4F6D4ABF9ED485AC /* libRNDeviceInfo.a in Frameworks */,
 				62BCE95D7F6B4F37B3CB4265 /* libRNImagePicker.a in Frameworks */,
 				1E6618B697C649BB9FCD362E /* libBVLinearGradient.a in Frameworks */,
@@ -912,14 +900,6 @@
 			name = Products;
 			sourceTree = "<group>";
 		};
-		79CEBFD1223011FE00D8F685 /* Products */ = {
-			isa = PBXGroup;
-			children = (
-				79CEBFF0223011FE00D8F685 /* libDBCustomTabs.a */,
-			);
-			name = Products;
-			sourceTree = "<group>";
-		};
 		79CEBFD3223011FE00D8F685 /* Products */ = {
 			isa = PBXGroup;
 			children = (
@@ -1004,7 +984,6 @@
 				139FDEE61B06529A00C62182 /* RCTWebSocket.xcodeproj */,
 				3923D6EFF26D4A53B8BDF8C6 /* RNAirplay.xcodeproj */,
 				63998175DB3B4506ACF27B92 /* ReactNativeConfig.xcodeproj */,
-				6F1D5B192D1D4948B39D4BFE /* ReactNativeCustomTabs.xcodeproj */,
 				39E16D6487A34F4D9B8C6EC1 /* RNDeviceInfo.xcodeproj */,
 				629FCAAD128E41B4BAE2BCF4 /* RNImagePicker.xcodeproj */,
 				43F1D28CACD04757A0FB29A6 /* BVLinearGradient.xcodeproj */,
@@ -1172,6 +1151,10 @@
 						CreatedOnToolsVersion = 6.2;
 						TestTargetID = 13B07F861A680F5B00A75B9A;
 					};
+					13B07F861A680F5B00A75B9A = {
+						DevelopmentTeam = 7TM8C6252Z;
+						ProvisioningStyle = Automatic;
+					};
 					2D02E47A1E0B4A5D006451C7 = {
 						CreatedOnToolsVersion = 8.2.1;
 						ProvisioningStyle = Automatic;
@@ -1188,6 +1171,7 @@
 			developmentRegion = English;
 			hasScannedForEncodings = 0;
 			knownRegions = (
+				English,
 				en,
 				Base,
 			);
@@ -1267,10 +1251,6 @@
 					ProductGroup = 79CEBFCF223011FE00D8F685 /* Products */;
 					ProjectRef = 63998175DB3B4506ACF27B92 /* ReactNativeConfig.xcodeproj */;
 				},
-				{
-					ProductGroup = 79CEBFD1223011FE00D8F685 /* Products */;
-					ProjectRef = 6F1D5B192D1D4948B39D4BFE /* ReactNativeCustomTabs.xcodeproj */;
-				},
 				{
 					ProductGroup = 79CEBFCD223011FE00D8F685 /* Products */;
 					ProjectRef = 3923D6EFF26D4A53B8BDF8C6 /* RNAirplay.xcodeproj */;
@@ -1589,13 +1569,6 @@
 			remoteRef = 79CEBFEC223011FE00D8F685 /* PBXContainerItemProxy */;
 			sourceTree = BUILT_PRODUCTS_DIR;
 		};
-		79CEBFF0223011FE00D8F685 /* libDBCustomTabs.a */ = {
-			isa = PBXReferenceProxy;
-			fileType = archive.ar;
-			path = libDBCustomTabs.a;
-			remoteRef = 79CEBFEF223011FE00D8F685 /* PBXContainerItemProxy */;
-			sourceTree = BUILT_PRODUCTS_DIR;
-		};
 		79CEBFF3223011FE00D8F685 /* libRNAirplay.a */ = {
 			isa = PBXReferenceProxy;
 			fileType = archive.ar;
@@ -1897,7 +1870,6 @@
 					"$(inherited)",
 					"$(SRCROOT)/../node_modules/react-native-airplay-btn/ios",
 					"$(SRCROOT)/../node_modules/react-native-config/ios/ReactNativeConfig",
-					"$(SRCROOT)/../node_modules/react-native-custom-tabs/ios/ReactNativeCustomTabs",
 					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
 					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
 					"$(SRCROOT)/../node_modules/react-native-linear-gradient/BVLinearGradient",
@@ -1918,7 +1890,6 @@
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @loader_path/Frameworks";
 				LIBRARY_SEARCH_PATHS = (
 					"$(inherited)",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
 				);
 				OTHER_LDFLAGS = (
 					"-ObjC",
@@ -1939,7 +1910,6 @@
 					"$(inherited)",
 					"$(SRCROOT)/../node_modules/react-native-airplay-btn/ios",
 					"$(SRCROOT)/../node_modules/react-native-config/ios/ReactNativeConfig",
-					"$(SRCROOT)/../node_modules/react-native-custom-tabs/ios/ReactNativeCustomTabs",
 					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
 					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
 					"$(SRCROOT)/../node_modules/react-native-linear-gradient/BVLinearGradient",
@@ -1960,7 +1930,6 @@
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @loader_path/Frameworks";
 				LIBRARY_SEARCH_PATHS = (
 					"$(inherited)",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
 				);
 				OTHER_LDFLAGS = (
 					"-ObjC",
@@ -1976,13 +1945,13 @@
 			isa = XCBuildConfiguration;
 			buildSettings = {
 				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
-				CURRENT_PROJECT_VERSION = 2;
+				CURRENT_PROJECT_VERSION = 5;
 				DEAD_CODE_STRIPPING = NO;
+				DEVELOPMENT_TEAM = 7TM8C6252Z;
 				HEADER_SEARCH_PATHS = (
 					"$(inherited)",
 					"$(SRCROOT)/../node_modules/react-native-airplay-btn/ios",
 					"$(SRCROOT)/../node_modules/react-native-config/ios/ReactNativeConfig",
-					"$(SRCROOT)/../node_modules/react-native-custom-tabs/ios/ReactNativeCustomTabs",
 					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
 					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
 					"$(SRCROOT)/../node_modules/react-native-linear-gradient/BVLinearGradient",
@@ -2007,6 +1976,7 @@
 				);
 				PRODUCT_BUNDLE_IDENTIFIER = "org.reactjs.native.example.$(PRODUCT_NAME:rfc1034identifier)";
 				PRODUCT_NAME = apolloschurchapp;
+				PROVISIONING_PROFILE_SPECIFIER = "";
 				VERSIONING_SYSTEM = "apple-generic";
 			};
 			name = Debug;
@@ -2015,12 +1985,11 @@
 			isa = XCBuildConfiguration;
 			buildSettings = {
 				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
-				CURRENT_PROJECT_VERSION = 2;
+				CURRENT_PROJECT_VERSION = 5;
 				HEADER_SEARCH_PATHS = (
 					"$(inherited)",
 					"$(SRCROOT)/../node_modules/react-native-airplay-btn/ios",
 					"$(SRCROOT)/../node_modules/react-native-config/ios/ReactNativeConfig",
-					"$(SRCROOT)/../node_modules/react-native-custom-tabs/ios/ReactNativeCustomTabs",
 					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
 					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
 					"$(SRCROOT)/../node_modules/react-native-linear-gradient/BVLinearGradient",
@@ -2045,6 +2014,7 @@
 				);
 				PRODUCT_BUNDLE_IDENTIFIER = "org.reactjs.native.example.$(PRODUCT_NAME:rfc1034identifier)";
 				PRODUCT_NAME = apolloschurchapp;
+				PROVISIONING_PROFILE_SPECIFIER = "";
 				VERSIONING_SYSTEM = "apple-generic";
 			};
 			name = Release;
@@ -2065,7 +2035,6 @@
 					"$(inherited)",
 					"$(SRCROOT)/../node_modules/react-native-airplay-btn/ios",
 					"$(SRCROOT)/../node_modules/react-native-config/ios/ReactNativeConfig",
-					"$(SRCROOT)/../node_modules/react-native-custom-tabs/ios/ReactNativeCustomTabs",
 					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
 					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
 					"$(SRCROOT)/../node_modules/react-native-linear-gradient/BVLinearGradient",
@@ -2085,7 +2054,6 @@
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
 				LIBRARY_SEARCH_PATHS = (
 					"$(inherited)",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
 				);
 				OTHER_LDFLAGS = (
 					"-ObjC",
@@ -2115,7 +2083,6 @@
 					"$(inherited)",
 					"$(SRCROOT)/../node_modules/react-native-airplay-btn/ios",
 					"$(SRCROOT)/../node_modules/react-native-config/ios/ReactNativeConfig",
-					"$(SRCROOT)/../node_modules/react-native-custom-tabs/ios/ReactNativeCustomTabs",
 					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
 					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
 					"$(SRCROOT)/../node_modules/react-native-linear-gradient/BVLinearGradient",
@@ -2135,7 +2102,6 @@
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
 				LIBRARY_SEARCH_PATHS = (
 					"$(inherited)",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
 				);
 				OTHER_LDFLAGS = (
 					"-ObjC",
@@ -2164,7 +2130,6 @@
 					"$(inherited)",
 					"$(SRCROOT)/../node_modules/react-native-airplay-btn/ios",
 					"$(SRCROOT)/../node_modules/react-native-config/ios/ReactNativeConfig",
-					"$(SRCROOT)/../node_modules/react-native-custom-tabs/ios/ReactNativeCustomTabs",
 					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
 					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
 					"$(SRCROOT)/../node_modules/react-native-linear-gradient/BVLinearGradient",
@@ -2184,7 +2149,6 @@
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @loader_path/Frameworks";
 				LIBRARY_SEARCH_PATHS = (
 					"$(inherited)",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
 				);
 				OTHER_LDFLAGS = (
 					"-ObjC",
@@ -2213,7 +2177,6 @@
 					"$(inherited)",
 					"$(SRCROOT)/../node_modules/react-native-airplay-btn/ios",
 					"$(SRCROOT)/../node_modules/react-native-config/ios/ReactNativeConfig",
-					"$(SRCROOT)/../node_modules/react-native-custom-tabs/ios/ReactNativeCustomTabs",
 					"$(SRCROOT)/../node_modules/react-native-device-info/ios/RNDeviceInfo",
 					"$(SRCROOT)/../node_modules/react-native-image-picker/ios",
 					"$(SRCROOT)/../node_modules/react-native-linear-gradient/BVLinearGradient",
@@ -2233,7 +2196,6 @@
 				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @loader_path/Frameworks";
 				LIBRARY_SEARCH_PATHS = (
 					"$(inherited)",
-					"\"$(SRCROOT)/$(TARGET_NAME)\"",
 				);
 				OTHER_LDFLAGS = (
 					"-ObjC",
diff --git a/apolloschurchapp/ios/apolloschurchapp/Base.lproj/LaunchScreen.xib b/apolloschurchapp/ios/apolloschurchapp/Base.lproj/LaunchScreen.xib
index 035b378..4ca705c 100644
--- a/apolloschurchapp/ios/apolloschurchapp/Base.lproj/LaunchScreen.xib
+++ b/apolloschurchapp/ios/apolloschurchapp/Base.lproj/LaunchScreen.xib
@@ -1,11 +1,11 @@
 <?xml version="1.0" encoding="UTF-8"?>
-<document type="com.apple.InterfaceBuilder3.CocoaTouch.XIB" version="3.0" toolsVersion="14113" targetRuntime="iOS.CocoaTouch" propertyAccessControl="none" useAutolayout="YES" launchScreen="YES" useTraitCollections="YES" colorMatched="YES">
+<document type="com.apple.InterfaceBuilder3.CocoaTouch.XIB" version="3.0" toolsVersion="14490.70" targetRuntime="iOS.CocoaTouch" propertyAccessControl="none" useAutolayout="YES" launchScreen="YES" useTraitCollections="YES" colorMatched="YES">
     <device id="retina5_5" orientation="portrait">
         <adaptation id="fullscreen"/>
     </device>
     <dependencies>
         <deployment identifier="iOS"/>
-        <plugIn identifier="com.apple.InterfaceBuilder.IBCocoaTouchPlugin" version="14088"/>
+        <plugIn identifier="com.apple.InterfaceBuilder.IBCocoaTouchPlugin" version="14490.49"/>
         <capability name="documents saved in the Xcode 8 format" minToolsVersion="8.0"/>
     </dependencies>
     <objects>
@@ -15,18 +15,22 @@
             <rect key="frame" x="0.0" y="0.0" width="414" height="736"/>
             <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
             <subviews>
+                <imageView clipsSubviews="YES" userInteractionEnabled="NO" contentMode="scaleToFill" horizontalHuggingPriority="251" verticalHuggingPriority="251" fixedFrame="YES" image="splash_bg" translatesAutoresizingMaskIntoConstraints="NO" id="iGM-E3-lqn">
+                    <rect key="frame" x="-12" y="-10" width="437" height="758"/>
+                    <autoresizingMask key="autoresizingMask" flexibleMinX="YES" widthSizable="YES" flexibleMaxX="YES" flexibleMinY="YES" heightSizable="YES" flexibleMaxY="YES"/>
+                </imageView>
                 <imageView userInteractionEnabled="NO" contentMode="scaleAspectFit" horizontalHuggingPriority="251" verticalHuggingPriority="251" fixedFrame="YES" image="splash-icon" translatesAutoresizingMaskIntoConstraints="NO" id="6Je-Yv-1Zj">
                     <rect key="frame" x="157" y="288" width="100" height="100"/>
                     <autoresizingMask key="autoresizingMask" flexibleMinX="YES" widthSizable="YES" flexibleMaxX="YES" flexibleMinY="YES" heightSizable="YES" flexibleMaxY="YES"/>
                 </imageView>
             </subviews>
-            <color key="backgroundColor" red="0.0" green="0.40392156862745099" blue="0.42745098039215684" alpha="1" colorSpace="custom" customColorSpace="sRGB"/>
             <nil key="simulatedStatusBarMetrics"/>
             <modalPageSheetSimulatedSizeMetrics key="simulatedDestinationMetrics"/>
-            <point key="canvasLocation" x="546" y="454"/>
+            <point key="canvasLocation" x="544.92753623188412" y="453.26086956521743"/>
         </view>
     </objects>
     <resources>
         <image name="splash-icon" width="94" height="99"/>
+        <image name="splash_bg" width="721" height="721"/>
     </resources>
-</document>
\ No newline at end of file
+</document>
diff --git a/apolloschurchapp/ios/apolloschurchapp/Images.xcassets/Contents.json b/apolloschurchapp/ios/apolloschurchapp/Images.xcassets/Contents.json
index 2d92bd5..da4a164 100644
--- a/apolloschurchapp/ios/apolloschurchapp/Images.xcassets/Contents.json
+++ b/apolloschurchapp/ios/apolloschurchapp/Images.xcassets/Contents.json
@@ -3,4 +3,4 @@
     "version" : 1,
     "author" : "xcode"
   }
-}
+}
\ No newline at end of file
diff --git a/apolloschurchapp/ios/apolloschurchapp/Images.xcassets/splash_bg.imageset/Contents.json b/apolloschurchapp/ios/apolloschurchapp/Images.xcassets/splash_bg.imageset/Contents.json
new file mode 100644
index 0000000..8939b14
--- /dev/null
+++ b/apolloschurchapp/ios/apolloschurchapp/Images.xcassets/splash_bg.imageset/Contents.json
@@ -0,0 +1,21 @@
+{
+  "images" : [
+    {
+      "idiom" : "universal",
+      "filename" : "splash_bg.png",
+      "scale" : "1x"
+    },
+    {
+      "idiom" : "universal",
+      "scale" : "2x"
+    },
+    {
+      "idiom" : "universal",
+      "scale" : "3x"
+    }
+  ],
+  "info" : {
+    "version" : 1,
+    "author" : "xcode"
+  }
+}
\ No newline at end of file
diff --git a/apolloschurchapp/ios/apolloschurchapp/Images.xcassets/splash_bg.imageset/splash_bg.png b/apolloschurchapp/ios/apolloschurchapp/Images.xcassets/splash_bg.imageset/splash_bg.png
new file mode 100644
index 0000000000000000000000000000000000000000..315d8e09ac4fd5f51176da24982baad2115fa027
GIT binary patch
literal 11471
zcmeAS@N?(olHy`uVBq!ia0y~yV7dsx9Be?5xhMa#GcYJHc)B=-RK&f#rYOYZDB^tZ
z=H*2eyj_=_M49$pT<`AhvTNUo(sMs$`WYCRSU3a}92yuJZ!=xbcd?(ho!L$Z#0N`w
zaPNsf-r*PD@CmAlk!f>-pzUN%uojS#E37>)ezCsrhiXtT;Fh>(JQHrLL+pW$b@2`V
zMzsTjWHjhTlg((B87(fLrQ>K(Ia*BsYueE&a<q8>Zf}h?4@R2@qs@cS=D}$5V6+!G
z+Jgqw1*1))(WcR8(`a<S4K^M*I@mZm&<Yw!9vwLu9XT0o9*j<`KxVE+Css!1<G|(N
zX!BsSc`({MK+L~8to{|vz`)Z5S_?2*U5-|lqt)eTQ(?5JFxpfYU9vU0Ty1m|WptS$
xWKrhmB+KX|3r!|j{weR`TWF71VC?vS+x%;O<pqA37~n!>22WQ%mvv4FO#m9H?QQ@7

literal 0
HcmV?d00001

diff --git a/apolloschurchapp/ios/apolloschurchapp/Info.plist b/apolloschurchapp/ios/apolloschurchapp/Info.plist
index 372eb80..ec83de8 100644
--- a/apolloschurchapp/ios/apolloschurchapp/Info.plist
+++ b/apolloschurchapp/ios/apolloschurchapp/Info.plist
@@ -2,15 +2,6 @@
 <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
 <plist version="1.0">
 <dict>
-	<key>CFBundleURLTypes</key>
-	<array>
-		<dict>
-			<key>CFBundleURLSchemes</key>
-			<array>
-				<string>apolloschurchapp</string>
-			</array>
-		</dict>
-	</array>
 	<key>CFBundleDevelopmentRegion</key>
 	<string>en</string>
 	<key>CFBundleDisplayName</key>
@@ -26,33 +17,24 @@
 	<key>CFBundlePackageType</key>
 	<string>APPL</string>
 	<key>CFBundleShortVersionString</key>
-	<string>0.8.1</string>
+	<string>0.8.4</string>
 	<key>CFBundleSignature</key>
 	<string>????</string>
+	<key>CFBundleURLTypes</key>
+	<array>
+		<dict>
+			<key>CFBundleURLSchemes</key>
+			<array>
+				<string>apolloschurchapp</string>
+			</array>
+		</dict>
+	</array>
 	<key>CFBundleVersion</key>
-	<string>7</string>
+	<string>10</string>
 	<key>ITSAppUsesNonExemptEncryption</key>
 	<false />
 	<key>LSRequiresIPhoneOS</key>
 	<true />
-	<key>NSLocationWhenInUseUsageDescription</key>
-	<string />
-	<key>UILaunchStoryboardName</key>
-	<string>LaunchScreen</string>
-	<key>UIRequiredDeviceCapabilities</key>
-	<array>
-		<string>armv7</string>
-	</array>
-	<key>UIStatusBarStyle</key>
-	<string>UIStatusBarStyleLightContent</string>
-	<key>UISupportedInterfaceOrientations</key>
-	<array>
-		<string>UIInterfaceOrientationPortrait</string>
-		<string>UIInterfaceOrientationLandscapeLeft</string>
-		<string>UIInterfaceOrientationLandscapeRight</string>
-	</array>
-	<key>UIViewControllerBasedStatusBarAppearance</key>
-	<false />
 	<key>NSAppTransportSecurity</key>
 	<dict>
 		<key>NSAllowsArbitraryLoads</key>
@@ -71,6 +53,16 @@
 			</dict>
 		</dict>
 	</dict>
+	<key>NSCameraUsageDescription</key>
+	<string>$(PRODUCT_NAME) would like to use your camera (for uploading profile pictures)</string>
+	<key>NSLocationWhenInUseUsageDescription</key>
+	<string />
+	<key>NSMicrophoneUsageDescription</key>
+	<string>$(PRODUCT_NAME) would like to your microphone (for videos)</string>
+	<key>NSPhotoLibraryAddUsageDescription</key>
+	<string>$(PRODUCT_NAME) would like to save photos to your photo gallery (for uploading profile pictures)</string>
+	<key>NSPhotoLibraryUsageDescription</key>
+	<string>$(PRODUCT_NAME) would like access to your photo gallery (for uploading profile pictures)</string>
 	<key>UIAppFonts</key>
 	<array>
 		<string>DroidSerif-Bold.ttf</string>
@@ -86,13 +78,21 @@
 		<string>Inter-UI-MediumItalic.otf</string>
 		<string>Inter-UI-Regular.otf</string>
 	</array>
-	<key>NSPhotoLibraryUsageDescription</key>
-	<string>$(PRODUCT_NAME) would like access to your photo gallery (for uploading profile pictures)</string>
-	<key>NSCameraUsageDescription</key>
-	<string>$(PRODUCT_NAME) would like to use your camera (for uploading profile pictures)</string>
-	<key>NSPhotoLibraryAddUsageDescription</key>
-	<string>$(PRODUCT_NAME) would like to save photos to your photo gallery (for uploading profile pictures)</string>
-	<key>NSMicrophoneUsageDescription</key>
-	<string>$(PRODUCT_NAME) would like to your microphone (for videos)</string>
+	<key>UILaunchStoryboardName</key>
+	<string>LaunchScreen</string>
+	<key>UIRequiredDeviceCapabilities</key>
+	<array>
+		<string>armv7</string>
+	</array>
+	<key>UIStatusBarStyle</key>
+	<string>UIStatusBarStyleLightContent</string>
+	<key>UISupportedInterfaceOrientations</key>
+	<array>
+		<string>UIInterfaceOrientationPortrait</string>
+		<string>UIInterfaceOrientationLandscapeLeft</string>
+		<string>UIInterfaceOrientationLandscapeRight</string>
+	</array>
+	<key>UIViewControllerBasedStatusBarAppearance</key>
+	<false />
 </dict>
 </plist>
diff --git a/apolloschurchapp/ios/apolloschurchappTests/Info.plist b/apolloschurchapp/ios/apolloschurchappTests/Info.plist
index 6addde1..d235470 100644
--- a/apolloschurchapp/ios/apolloschurchappTests/Info.plist
+++ b/apolloschurchapp/ios/apolloschurchappTests/Info.plist
@@ -15,10 +15,10 @@
 	<key>CFBundlePackageType</key>
 	<string>BNDL</string>
 	<key>CFBundleShortVersionString</key>
-	<string>0.8.1</string>
+	<string>0.8.4</string>
 	<key>CFBundleSignature</key>
 	<string>????</string>
 	<key>CFBundleVersion</key>
-	<string>6</string>
+	<string>9</string>
 </dict>
 </plist>
diff --git a/apolloschurchapp/jest.setup.js b/apolloschurchapp/jest.setup.js
index d23ceca..fcdc84a 100644
--- a/apolloschurchapp/jest.setup.js
+++ b/apolloschurchapp/jest.setup.js
@@ -1,11 +1,15 @@
+// We ran into an issue where SafeAreaView would break jest tests.
+jest.mock('react-navigation', () => {
+  const ActualNavigation = require.requireActual('react-navigation');
+  return {
+    ...ActualNavigation,
+    SafeAreaView: require.requireActual('SafeAreaView'),
+  };
+});
+
 jest.mock('react-native-config', () => ({
   ONE_SIGNAL_KEY: 'doesntmatter',
 }));
-jest.mock('react-native-custom-tabs', () => ({
-  CustomTabs: {
-    openURL: jest.fn(),
-  },
-}));
 jest.mock('Animated', () => {
   const ActualAnimated = require.requireActual('Animated');
   return {
diff --git a/apolloschurchapp/package.json b/apolloschurchapp/package.json
index 864c3cb..2f3ddb3 100644
--- a/apolloschurchapp/package.json
+++ b/apolloschurchapp/package.json
@@ -1,6 +1,6 @@
 {
   "name": "apolloschurchapp",
-  "version": "0.8.2",
+  "version": "0.8.5",
   "private": true,
   "devDependencies": {
     "@storybook/addon-actions": "4.1.16",
@@ -61,10 +61,11 @@
     ]
   },
   "dependencies": {
-    "@apollosproject/ui-analytics": "^0.8.2",
-    "@apollosproject/ui-auth": "^0.8.2",
-    "@apollosproject/ui-kit": "^0.8.2",
-    "@apollosproject/ui-passes": "^0.8.2",
+    "@apollosproject/ui-analytics": "^0.8.5",
+    "@apollosproject/ui-auth": "^0.8.5",
+    "@apollosproject/ui-htmlview": "^0.8.5",
+    "@apollosproject/ui-kit": "^0.8.5",
+    "@apollosproject/ui-passes": "^0.8.5",
     "apollo-cache-inmemory": "1.5.1",
     "apollo-cache-persist": "0.1.1",
     "apollo-client": "2.5.1",
@@ -91,29 +92,27 @@
     "prettier": "1.14.2",
     "querystring": "^0.2.0",
     "react": "16.6.3",
-    "react-apollo": "2.5.1",
+    "react-apollo": "2.5.5",
     "react-native": "0.58.5",
     "react-native-airplay-btn": "^1.0.6",
     "react-native-config": "^0.11.7",
-    "react-native-custom-tabs": "0.1.7",
     "react-native-device-info": "0.22.5",
-    "react-native-image-picker": "0.26.10",
+    "react-native-image-picker": "0.28.0",
     "react-native-keyboard-aware-scroll-view": "0.7.0",
     "react-native-linear-gradient": "2.5.3",
-    "react-native-maps": "^0.23.0",
-    "react-native-music-control": "0.7.3",
+    "react-native-maps": "^0.24.2",
+    "react-native-music-control": "^0.10.2",
     "react-native-onesignal": "3.2.7",
     "react-native-passkit-wallet": "^0.1.4",
     "react-native-safari-view": "2.1.0",
     "react-native-safe-area-view": "0.13.1",
-    "react-native-screens": "1.0.0-alpha.12",
+    "react-native-screens": "^1.0.0-alpha.22",
     "react-native-splash-screen": "^3.1.1",
     "react-native-svg": "9.2.4",
-    "react-native-swiper": "^1.5.14",
-    "react-native-video": "3.2.0",
+    "react-native-video": "^4.4.1",
     "react-native-video-controls": "2.2.3",
     "react-native-webview": "^5.2.0",
-    "react-navigation": "2.11.2",
+    "react-navigation": "2.14.0",
     "react-navigation-tabs": "0.6.0",
     "recompose": "^0.30.0",
     "rn-fetch-blob": "^0.10.15",
diff --git a/apolloschurchapp/rn-cli.config.js b/apolloschurchapp/rn-cli.config.js
index a604ef0..b69ca32 100644
--- a/apolloschurchapp/rn-cli.config.js
+++ b/apolloschurchapp/rn-cli.config.js
@@ -7,6 +7,7 @@ const localDeps = [
   path.resolve('..', 'apollos-ui-auth'),
   path.resolve('..', 'apollos-ui-htmlview'),
   path.resolve('..', 'apollos-ui-analytics'),
+  path.resolve('..', 'apollos-ui-onboarding'),
 ];
 
 module.exports = {
diff --git a/apolloschurchapp/src/LandingScreen.js b/apolloschurchapp/src/LandingScreen.js
new file mode 100644
index 0000000..52dde4b
--- /dev/null
+++ b/apolloschurchapp/src/LandingScreen.js
@@ -0,0 +1,33 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+import { styled, GradientOverlayImage } from '@apollosproject/ui-kit';
+
+import ApollosLandingScreen from './ui/LandingScreen';
+
+const FullScreenImage = styled({
+  resizeMode: 'cover',
+  position: 'absolute',
+})(GradientOverlayImage);
+
+const LandingScreen = ({ navigation }) => (
+  <ApollosLandingScreen
+    onPressPrimary={() => navigation.push('Auth')}
+    textColor={'white'}
+    BackgroundComponent={
+      <FullScreenImage source={'https://picsum.photos/375/812/?random'} />
+    }
+    primaryNavText={"Let's go!"}
+  />
+);
+
+LandingScreen.navigationOptions = {
+  header: null,
+};
+
+LandingScreen.propTypes = {
+  navigation: PropTypes.shape({
+    push: PropTypes.func,
+  }),
+};
+
+export default LandingScreen;
diff --git a/apolloschurchapp/src/Providers.js b/apolloschurchapp/src/Providers.js
index 14319d1..2f9bd73 100644
--- a/apolloschurchapp/src/Providers.js
+++ b/apolloschurchapp/src/Providers.js
@@ -13,7 +13,7 @@ const AppProviders = (props) => (
         navigateToAuth={() => NavigationService.navigate('Auth')}
         closeAuth={() => NavigationService.navigate('Onboarding')}
       >
-        <AnalyticsProvider trackFunctions={[console.warn]}>
+        <AnalyticsProvider>
           <Providers {...props} />
         </AnalyticsProvider>
       </AuthProvider>
diff --git a/apolloschurchapp/src/client/index.js b/apolloschurchapp/src/client/index.js
index 4a13cb8..c473190 100644
--- a/apolloschurchapp/src/client/index.js
+++ b/apolloschurchapp/src/client/index.js
@@ -3,7 +3,6 @@ import PropTypes from 'prop-types';
 import { ApolloProvider } from 'react-apollo';
 import { ApolloClient } from 'apollo-client';
 import { ApolloLink } from 'apollo-link';
-import SplashScreen from 'react-native-splash-screen';
 
 import { authLink } from '@apollosproject/ui-auth';
 import { resolvers, schema, defaults } from '../store';
@@ -42,7 +41,6 @@ class ClientProvider extends PureComponent {
     } catch (e) {
       throw e;
     } finally {
-      if (SplashScreen && SplashScreen.hide) SplashScreen.hide();
       client.mutate({ mutation: MARK_CACHE_LOADED });
     }
   }
diff --git a/apolloschurchapp/src/index.js b/apolloschurchapp/src/index.js
index e479b43..630be1e 100644
--- a/apolloschurchapp/src/index.js
+++ b/apolloschurchapp/src/index.js
@@ -1,7 +1,7 @@
 import React from 'react';
 import { StatusBar } from 'react-native';
 import { createStackNavigator } from 'react-navigation';
-// import { Sentry } from 'react-native-sentry';
+import SplashScreen from 'react-native-splash-screen';
 
 import { BackgroundView, withTheme } from '@apollosproject/ui-kit';
 import Passes from '@apollosproject/ui-passes';
@@ -15,31 +15,34 @@ import Tabs from './tabs';
 import PersonalDetails from './user-settings/PersonalDetails';
 import ChangePassword from './user-settings/ChangePassword';
 import Location from './user-settings/Locations';
-import { LocationFinderMapView } from './ui/Onboarding/slides/LocationFinder';
+import LandingScreen from './LandingScreen';
 import UserWebBrowser from './user-web-browser';
-import Onboarding from './onboarding';
-// Sentry.config(
-//   'https://5908fa19ed37447f86b2717423cadec5:45dd3b58792b413cb67109c5e63a0bb7@sentry.io/1241658'
-// ).install();
+import Onboarding from './ui/Onboarding';
 
 const AppStatusBar = withTheme(({ theme }) => ({
   barStyle: 'dark-content',
   backgroundColor: theme.colors.paper,
 }))(StatusBar);
 
+const ProtectedRouteWithSplashScreen = (props) => {
+  const handleOnRouteChange = () => SplashScreen.hide();
+
+  return <ProtectedRoute {...props} onRouteChange={handleOnRouteChange} />;
+};
+
 const AppNavigator = createStackNavigator(
   {
-    ProtectedRoute,
+    ProtectedRoute: ProtectedRouteWithSplashScreen,
     Tabs,
     ContentSingle,
     Auth,
     PersonalDetails,
     ChangePassword,
     Location,
-    LocationFinderMapView,
     Passes,
     UserWebBrowser,
     Onboarding,
+    LandingScreen,
   },
   {
     initialRouteName: 'ProtectedRoute',
diff --git a/apolloschurchapp/src/onboarding/index.js b/apolloschurchapp/src/onboarding/index.js
deleted file mode 100644
index f447f8a..0000000
--- a/apolloschurchapp/src/onboarding/index.js
+++ /dev/null
@@ -1,14 +0,0 @@
-import React, { PureComponent } from 'react';
-import Onboarding from 'apolloschurchapp/src/ui/Onboarding';
-
-export default class TestingControlPanel extends PureComponent {
-  static navigationOptions = () => ({
-    title: 'Onboarding',
-    header: null,
-    gesturesEnabled: false,
-  });
-
-  render() {
-    return <Onboarding {...this.props} />;
-  }
-}
diff --git a/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeaderConnected.js b/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeaderConnected.js
index 1ab8d26..397a879 100644
--- a/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeaderConnected.js
+++ b/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeaderConnected.js
@@ -1,6 +1,7 @@
 import React from 'react';
 import { Query } from 'react-apollo';
 import PropTypes from 'prop-types';
+import { get } from 'lodash';
 
 import getUserProfile from '../getUserProfile';
 import UserAvatarHeader from './UserAvatarHeader';
@@ -10,9 +11,7 @@ const UserAvatarHeaderConnected = ({ navigation }) => (
     {({
       data: {
         currentUser: {
-          profile: { photo, firstName, lastName, campus: { name } } = {
-            campus: {},
-          },
+          profile: { photo, firstName, lastName, campus } = {},
         } = {},
       } = {},
       refetch,
@@ -20,7 +19,7 @@ const UserAvatarHeaderConnected = ({ navigation }) => (
       <UserAvatarHeader
         firstName={firstName}
         lastName={lastName}
-        location={name}
+        location={get(campus, 'name')}
         photo={photo}
         refetch={refetch}
         navigation={navigation}
diff --git a/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeaderConnected.tests.js b/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeaderConnected.tests.js
index e0a8488..b4bad0c 100644
--- a/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeaderConnected.tests.js
+++ b/apolloschurchapp/src/tabs/connect/UserAvatarHeader/UserAvatarHeaderConnected.tests.js
@@ -1,6 +1,5 @@
 import React from 'react';
-import renderer from 'react-test-renderer';
-import wait from 'waait';
+import { renderWithApolloData } from 'apolloschurchapp/src/utils/testUtils';
 
 import Providers from 'apolloschurchapp/src/Providers';
 
@@ -16,16 +15,37 @@ describe('user avatar header connect', () => {
       result: {
         data: {
           currentUser: {
-            id: 'AuthenticatedUser:057b0758543270d1cb21784cac4d3f5c',
+            __typename: 'AuthenticatedUser',
+            id: 'AuthenticatedUser:123',
             profile: {
+              id: 'Person:123',
+              __typename: 'Person',
+              gender: 'Male',
+              birthDate: '1980-02-10T00:00:00',
               firstName: 'Isaac',
               lastName: 'Hardy',
-              location: 'Anderson, SC',
+              campus: {
+                __typename: 'Campus',
+                id: 'Campus:a0f64573eabf00a607bec911794d50fb',
+                name: 'Chicago Campus',
+                latitude: 42.09203,
+                longitude: -88.13289,
+                distanceFromLocation: null,
+                street1: '67 Algonquin Rd',
+                street2: '',
+                city: 'South Barrington',
+                state: 'IL',
+                postalCode: '60010-6143',
+                image: {
+                  __typename: 'ImageMediaSource',
+                  uri: 'https://picsum.photos/300/300/?random',
+                },
+              },
               email: 'isaac.hardy@newspring.cc',
-              nickName: 'Ike',
+              nickName: 'Batman',
               photo: {
-                uri:
-                  'https://apollosrock.newspring.cc:443/GetImage.ashx?guid=60fd5f35-3167-4c26-9a30-d44937287b87',
+                __typename: 'ImageMediaSource',
+                uri: 'https://some-uri.com/test.jpg',
               },
             },
           },
@@ -33,12 +53,11 @@ describe('user avatar header connect', () => {
       },
     };
     const navigation = { navigate: jest.fn(), getParam: jest.fn() };
-    const tree = renderer.create(
+    const tree = await renderWithApolloData(
       <Providers mocks={[mock]}>
         <UserAvatarHeaderConnected navigation={navigation} />
       </Providers>
     );
-    await wait(0); // wait for response from graphql
     expect(tree).toMatchSnapshot();
   });
 });
diff --git a/apolloschurchapp/src/tabs/connect/getUserProfile.js b/apolloschurchapp/src/tabs/connect/getUserProfile.js
index 4e4dd64..ef3b2c8 100644
--- a/apolloschurchapp/src/tabs/connect/getUserProfile.js
+++ b/apolloschurchapp/src/tabs/connect/getUserProfile.js
@@ -6,6 +6,7 @@ export default gql`
     currentUser {
       id
       profile {
+        id
         firstName
         lastName
         campus {
diff --git a/apolloschurchapp/src/tabs/home/Home.js b/apolloschurchapp/src/tabs/home/Home.js
index ccdeee1..57abba0 100644
--- a/apolloschurchapp/src/tabs/home/Home.js
+++ b/apolloschurchapp/src/tabs/home/Home.js
@@ -19,6 +19,7 @@ import { LiveButton } from '../../live';
 import ContentTableCard from '../../ui/ContentTableCard';
 import getUserFeed from './getUserFeed';
 import getPersonaFeed from './getPersonaFeed';
+import getCampaignContentItem from './getCampaignContentItem';
 
 const LogoTitle = styled(({ theme }) => ({
   height: theme.sizing.baseUnit,
@@ -68,21 +69,49 @@ class Home extends PureComponent {
                   <>
                     <LogoTitle source={require('./wordmark.png')} />
                     <LiveButton />
+                    <Query
+                      query={getCampaignContentItem}
+                      fetchPolicy="cache-and-network"
+                    >
+                      {({ data: featuredData, loading: isFeaturedLoading }) => {
+                        const featuredContent = get(
+                          featuredData,
+                          'campaigns.edges',
+                          []
+                        ).map((edge) => edge.node);
+
+                        const featuredItem = get(
+                          featuredContent[0],
+                          'childContentItemsConnection.edges[0].node',
+                          {}
+                        );
+
+                        return (
+                          <ContentCardConnected
+                            contentId={featuredItem.id}
+                            isLoading={isFeaturedLoading}
+                          />
+                        );
+                      }}
+                    </Query>
                     <Query
                       query={getPersonaFeed}
                       fetchPolicy="cache-and-network"
                     >
-                      {({ data: personaData, loading: actionLoading }) => (
+                      {({
+                        data: personaData,
+                        loading: isContentTableLoading,
+                      }) => (
                         <ContentTableCard
-                          isLoading={actionLoading}
+                          isLoading={isContentTableLoading}
                           onPress={this.handleOnPress}
                           header={
                             <>
-                              <StyledH6 isLoading={actionLoading}>
+                              <StyledH6 isLoading={isContentTableLoading}>
                                 FOR YOU
                               </StyledH6>
                               <H3
-                                isLoading={actionLoading}
+                                isLoading={isContentTableLoading}
                                 numberOfLines={3}
                                 ellipsizeMode="tail"
                               >
diff --git a/apolloschurchapp/src/tabs/home/getCampaignContentItem.js b/apolloschurchapp/src/tabs/home/getCampaignContentItem.js
new file mode 100644
index 0000000..5bdb082
--- /dev/null
+++ b/apolloschurchapp/src/tabs/home/getCampaignContentItem.js
@@ -0,0 +1,25 @@
+import gql from 'graphql-tag';
+
+import { contentItemFragment } from 'apolloschurchapp/src/content-single/getContentItem';
+import { largeCardFragment } from 'apolloschurchapp/src/ui/ContentCardConnected';
+
+export default gql`
+  query campaigns {
+    campaigns {
+      edges {
+        node {
+          childContentItemsConnection {
+            edges {
+              node {
+                ...largeCardFragment
+                ...contentItemFragment
+              }
+            }
+          }
+        }
+      }
+    }
+  }
+  ${contentItemFragment}
+  ${largeCardFragment}
+`;
diff --git a/apolloschurchapp/src/ui/LandingScreen/LandingScreen.stories.js b/apolloschurchapp/src/ui/LandingScreen/LandingScreen.stories.js
new file mode 100644
index 0000000..1d3c6e1
--- /dev/null
+++ b/apolloschurchapp/src/ui/LandingScreen/LandingScreen.stories.js
@@ -0,0 +1,23 @@
+import React from 'react';
+import { storiesOf } from '@storybook/react-native';
+import { GradientOverlayImage } from '@apollosproject/ui-kit';
+
+import LandingScreen from '.';
+
+storiesOf('LandingScreen', module)
+  .add('default', () => <LandingScreen />)
+  .add('slideTitle', () => <LandingScreen slideTitle={'Custom title text'} />)
+  .add('description', () => (
+    <LandingScreen description={'Custom description text'} />
+  ))
+  .add('textColor', () => <LandingScreen textColor={'salmon'} />)
+  .add('ImageComponent', () => (
+    <LandingScreen
+      BackgroundComponent={
+        <GradientOverlayImage
+          source={'https://picsum.photos/375/812/?random'}
+        />
+      }
+    />
+  ))
+  .add('Slide props', () => <LandingScreen onPressPrimary={() => {}} />);
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/Features/Features.tests.js b/apolloschurchapp/src/ui/LandingScreen/LandingScreen.tests.js
similarity index 59%
rename from apolloschurchapp/src/ui/Onboarding/slides/Features/Features.tests.js
rename to apolloschurchapp/src/ui/LandingScreen/LandingScreen.tests.js
index 8ff8bf6..13e64f1 100644
--- a/apolloschurchapp/src/ui/Onboarding/slides/Features/Features.tests.js
+++ b/apolloschurchapp/src/ui/LandingScreen/LandingScreen.tests.js
@@ -1,48 +1,54 @@
 import React from 'react';
 import renderer from 'react-test-renderer';
+import { GradientOverlayImage } from '@apollosproject/ui-kit';
 
 import Providers from 'apolloschurchapp/src/Providers';
 
-import Features from '.';
+import LandingScreen from '.';
 
-describe('The Onboarding SlideWrapper component', () => {
+describe('The Onboarding LandingScreen component', () => {
   it('should render', () => {
     const tree = renderer.create(
       <Providers>
-        <Features />
+        <LandingScreen />
       </Providers>
     );
     expect(tree).toMatchSnapshot();
   });
-  it('should render a custom image', () => {
+  it('should render a custom title', () => {
     const tree = renderer.create(
       <Providers>
-        <Features imgSrc={{ uri: 'https://picsum.photos/1200/1200?random' }} />
+        <LandingScreen slideTitle={'Custom title text'} />
       </Providers>
     );
     expect(tree).toMatchSnapshot();
   });
-
-  it('should render a custom first name', () => {
+  it('should render a custom description', () => {
     const tree = renderer.create(
       <Providers>
-        <Features firstName={'firstName'} />
+        <LandingScreen description={'Custom description text'} />
       </Providers>
     );
     expect(tree).toMatchSnapshot();
   });
-  it('should render a custom title', () => {
+  it('should render with a custom text color', () => {
     const tree = renderer.create(
       <Providers>
-        <Features slideTitle={'Custom title text'} />
+        <LandingScreen textColor={'salmon'} />
       </Providers>
     );
     expect(tree).toMatchSnapshot();
   });
-  it('should render a custom description', () => {
+  it('should render with an ImageComponent', () => {
     const tree = renderer.create(
       <Providers>
-        <Features description={'Custom description text'} />
+        <LandingScreen
+          BackgroundComponent={
+            <GradientOverlayImage
+              source={'https://picsum.photos/375/812/?random'}
+            />
+          }
+        />
       </Providers>
     );
     expect(tree).toMatchSnapshot();
@@ -50,7 +56,7 @@ describe('The Onboarding SlideWrapper component', () => {
   it('should pass additional props to Slide', () => {
     const tree = renderer.create(
       <Providers>
-        <Features onPressPrimary={jest.fn()} />
+        <LandingScreen onPressPrimary={jest.fn()} />
       </Providers>
     );
     expect(tree).toMatchSnapshot();
diff --git a/apolloschurchapp/src/ui/LandingScreen/index.js b/apolloschurchapp/src/ui/LandingScreen/index.js
new file mode 100644
index 0000000..f929f81
--- /dev/null
+++ b/apolloschurchapp/src/ui/LandingScreen/index.js
@@ -0,0 +1,86 @@
+import React from 'react';
+import PropTypes from 'prop-types';
+
+import {
+  styled,
+  withTheme,
+  Icon,
+  H1,
+  H4,
+  PaddedView,
+  BackgroundView,
+} from '@apollosproject/ui-kit';
+
+import { Slide } from '@apollosproject/ui-onboarding';
+
+const Content = styled({
+  flex: 1,
+  justifyContent: 'center',
+})(PaddedView);
+
+const BrandIcon = withTheme(({ theme, color }) => ({
+  name: 'brand-icon',
+  size: theme.sizing.baseUnit * 3,
+  ...(color ? { fill: color } : {}),
+  style: {
+    marginBottom: theme.sizing.baseUnit,
+  },
+}))(Icon);
+
+const Title = styled(({ theme, color }) => ({
+  marginBottom: theme.sizing.baseUnit * 2,
+  ...(color ? { color } : {}),
+}))(H1);
+
+const StyledH4 = styled(({ color }) => ({
+  ...(color ? { color } : {}),
+}))(H4);
+
+const LandingScreen = ({
+  slideTitle,
+  description,
+  textColor,
+  BackgroundComponent,
+  ...props
+}) => (
+  <BackgroundView>
+    <Slide {...props} scrollEnabled={false}>
+      {BackgroundComponent}
+      <Content>
+        <BrandIcon color={textColor} />
+        <Title color={textColor}>{slideTitle}</Title>
+        <StyledH4 color={textColor}>{description}</StyledH4>
+      </Content>
+    </Slide>
+  </BackgroundView>
+);
+
+LandingScreen.propTypes = {
+  /* The `Swiper` component used in `<onBoarding>` looks for and hijacks the title prop of it's
+   * children. Thus we have to use more unique name.
+   */
+  slideTitle: PropTypes.string,
+  description: PropTypes.string,
+  textColor: PropTypes.string, // Use for custom text and `BrandIcon` color when overlaying text on an image or video needs more clarity. Defaults to theme driven colors.
+  /* Recommended usage:
+   * - `Image` (react-native)
+   * - `GradientOverlayImage` (@apollosproject/ui-kit) for increased readability
+   * - `Video` (react-native-video) because moving pictures!
+   */
+  BackgroundComponent: PropTypes.oneOfType([
+    PropTypes.arrayOf(PropTypes.node),
+    PropTypes.node,
+  ]),
+};
+
+LandingScreen.defaultProps = {
+  slideTitle: "We're glad you're here.",
+  description:
+    "We're not just a building you go to, but a family to belong to.",
+};
+
+LandingScreen.navigationOptions = {
+  header: null,
+};
+
+export default LandingScreen;
diff --git a/apolloschurchapp/src/ui/Onboarding/Onboarding.stories.js b/apolloschurchapp/src/ui/Onboarding/Onboarding.stories.js
deleted file mode 100644
index d304b28..0000000
--- a/apolloschurchapp/src/ui/Onboarding/Onboarding.stories.js
+++ /dev/null
@@ -1,6 +0,0 @@
-import React from 'react';
-import { storiesOf } from '@storybook/react-native';
-
-import Onboarding from '.';
-
-storiesOf('Onboarding', module).add('Example', () => <Onboarding />);
diff --git a/apolloschurchapp/src/ui/Onboarding/Slide/Slide.stories.js b/apolloschurchapp/src/ui/Onboarding/Slide/Slide.stories.js
deleted file mode 100644
index a23e44c..0000000
--- a/apolloschurchapp/src/ui/Onboarding/Slide/Slide.stories.js
+++ /dev/null
@@ -1,58 +0,0 @@
-import React from 'react';
-import { Text } from 'react-native';
-import { storiesOf } from '@storybook/react-native';
-
-import Slide from '.';
-
-storiesOf('Onboarding/Slide', module)
-  .add('default', () => (
-    <Slide>
-      <Text>Boom</Text>
-    </Slide>
-  ))
-  .add('onPressPrimary', () => (
-    <Slide onPressPrimary={() => {}}>
-      <Text>Boom</Text>
-    </Slide>
-  ))
-  .add('primaryNavText', () => (
-    <Slide onPressPrimary={() => {}} primaryNavText={'Custom button text'}>
-      <Text>Boom</Text>
-    </Slide>
-  ))
-  .add('primaryNavIcon', () => (
-    <Slide
-      onPressPrimary={() => {}}
-      primaryNavText={'Custom icon'}
-      primaryNavIcon={'umbrella'}
-    >
-      <Text>Boom</Text>
-    </Slide>
-  ))
-  .add('no icon', () => (
-    <Slide
-      onPressPrimary={() => {}}
-      primaryNavText={'No Icon!'}
-      primaryNavIcon={''}
-    >
-      <Text>Boom</Text>
-    </Slide>
-  ))
-  .add('onPressSecondary', () => (
-    <Slide onPressSecondary={() => {}}>
-      <Text>Boom</Text>
-    </Slide>
-  ))
-  .add('secondaryNavText', () => (
-    <Slide
-      onPressSecondary={() => {}}
-      secondaryNavText={'Custom skip button text'}
-    >
-      <Text>Boom</Text>
-    </Slide>
-  ))
-  .add('With Navigation', () => (
-    <Slide onPressPrimary={() => {}} onPressSecondary={() => {}}>
-      <Text>Boom</Text>
-    </Slide>
-  ));
diff --git a/apolloschurchapp/src/ui/Onboarding/Slide/Slide.tests.js b/apolloschurchapp/src/ui/Onboarding/Slide/Slide.tests.js
deleted file mode 100644
index 18e7175..0000000
--- a/apolloschurchapp/src/ui/Onboarding/Slide/Slide.tests.js
+++ /dev/null
@@ -1,101 +0,0 @@
-import React from 'react';
-import { Text } from 'react-native';
-import renderer from 'react-test-renderer';
-
-import Providers from 'apolloschurchapp/src/Providers';
-
-import Slide from '.';
-
-describe('The Onboarding Slide component', () => {
-  it('should render children', () => {
-    const tree = renderer.create(
-      <Providers>
-        <Slide>
-          <Text>Boom</Text>
-        </Slide>
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render onboarding next button navigation', () => {
-    const tree = renderer.create(
-      <Providers>
-        <Slide onPressPrimary={jest.fn()}>
-          <Text>Boom</Text>
-        </Slide>
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render primary navigation button with custom text', () => {
-    const tree = renderer.create(
-      <Providers>
-        <Slide onPressPrimary={jest.fn()} primaryNavText={'Custom nav text'}>
-          <Text>Boom</Text>
-        </Slide>
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render primary navigation button with a custom icon', () => {
-    const tree = renderer.create(
-      <Providers>
-        <Slide
-          onPressPrimary={jest.fn()}
-          primaryNavText={'Custom nav text with custom icon'}
-          primaryNavIcon={'umbrella'}
-        >
-          <Text>Boom</Text>
-        </Slide>
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render primary navigation button without a custom icon', () => {
-    const tree = renderer.create(
-      <Providers>
-        <Slide
-          onPressPrimary={jest.fn()}
-          primaryNavText={'Custom nav text without an icon'}
-          primaryNavIcon={''}
-        >
-          <Text>Boom</Text>
-        </Slide>
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render onboarding skip button navigation', () => {
-    const tree = renderer.create(
-      <Providers>
-        <Slide onPressSecondary={jest.fn()}>
-          <Text>Boom</Text>
-        </Slide>
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render onboarding skip button with custom text', () => {
-    const tree = renderer.create(
-      <Providers>
-        <Slide
-          onPressSecondary={jest.fn()}
-          secondaryNavText={'Custom skip button text'}
-        >
-          <Text>Boom</Text>
-        </Slide>
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render both slide navigation buttons', () => {
-    const tree = renderer.create(
-      <Providers>
-        <Slide onPressPrimary={jest.fn()} onPressSecondary={jest.fn()}>
-          <Text>Boom</Text>
-        </Slide>
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/ui/Onboarding/Slide/index.js b/apolloschurchapp/src/ui/Onboarding/Slide/index.js
deleted file mode 100644
index ed05867..0000000
--- a/apolloschurchapp/src/ui/Onboarding/Slide/index.js
+++ /dev/null
@@ -1,92 +0,0 @@
-import React, { memo } from 'react';
-import PropTypes from 'prop-types';
-
-import {
-  styled,
-  withTheme,
-  FlexedView,
-  PaddedView,
-  H5,
-  ButtonLink,
-  Button,
-  Icon,
-} from '@apollosproject/ui-kit';
-
-const NavWrapper = styled(({ theme }) => ({
-  flexDirection: 'row-reverse', // reversed so the primary action is always on the right
-  alignItems: 'center', // centers optional back button with dots/next button
-  justifyContent: 'space-between',
-  marginBottom: theme.sizing.baseUnit * 0.5, // centers nav/button with pager dots
-}))(PaddedView);
-
-const PrimaryNavIcon = withTheme(({ theme }) => ({
-  size: theme.helpers.rem(1.25),
-  style: {
-    marginLeft: theme.sizing.baseUnit * 0.5,
-    marginRight: theme.sizing.baseUnit * -0.5,
-  },
-}))(Icon);
-
-const SkipButton = styled(({ theme }) => ({
-  color: theme.colors.text.tertiary, // this is probably not the right color
-  paddingVertical: theme.sizing.baseUnit * 0.9375, // optically centered on typographic baseline
-  paddingHorizontal: theme.sizing.baseUnit, // improves tappability
-  marginLeft: theme.sizing.baseUnit * -1, // adjusts for paddingHorizontal
-}))(ButtonLink);
-
-/* Slide uses memo = sfc PureComponent 💥 Additionally, this component when rendered in a `Slider`
- * is automatically rendered in a `View` */
-// eslint-disable-next-line react/display-name
-const Slide = memo(
-  ({
-    children,
-    onPressPrimary,
-    onPressSecondary,
-    primaryNavText,
-    primaryNavIcon,
-    secondaryNavText,
-  }) => (
-    <>
-      <FlexedView>{children}</FlexedView>
-      {onPressPrimary || onPressSecondary ? (
-        <NavWrapper vertical={false}>
-          {onPressPrimary ? (
-            <Button onPress={onPressPrimary}>
-              <>
-                <H5>{primaryNavText}</H5>
-                {primaryNavIcon ? (
-                  <PrimaryNavIcon name={primaryNavIcon} />
-                ) : null}
-              </>
-            </Button>
-          ) : null}
-          {onPressSecondary ? (
-            <SkipButton onPress={onPressSecondary}>
-              {secondaryNavText}
-            </SkipButton>
-          ) : null}
-        </NavWrapper>
-      ) : null}
-    </>
-  )
-);
-
-Slide.propTypes = {
-  children: PropTypes.oneOfType([
-    PropTypes.arrayOf(PropTypes.node),
-    PropTypes.node,
-  ]),
-  onPressPrimary: PropTypes.func,
-  onPressSecondary: PropTypes.func,
-  primaryNavText: PropTypes.string, // colored button text
-  primaryNavIcon: PropTypes.string, // optional custom icon name or empty string for no icon at all
-  secondaryNavText: PropTypes.string, // text link
-};
-
-Slide.defaultProps = {
-  primaryNavText: 'Next',
-  primaryNavIcon: 'arrow-next',
-  secondaryNavText: 'Skip',
-};
-
-export default Slide;
diff --git a/apolloschurchapp/src/ui/Onboarding/index.js b/apolloschurchapp/src/ui/Onboarding/index.js
index a7c6fb8..54a0382 100644
--- a/apolloschurchapp/src/ui/Onboarding/index.js
+++ b/apolloschurchapp/src/ui/Onboarding/index.js
@@ -1,85 +1,80 @@
-import React, { Component } from 'react';
-// import PropTypes from 'prop-types';
-import Swiper from 'react-native-swiper';
-import {
-  withTheme,
-  BackgroundView,
-  GradientOverlayImage,
-} from '@apollosproject/ui-kit';
+import React from 'react';
+
+import { GradientOverlayImage } from '@apollosproject/ui-kit';
+import { ApolloConsumer } from 'react-apollo';
 
 import {
   AskNotificationsConnected,
   AskNameConnected,
-  Features,
+  FeaturesConnected,
   AboutYouConnected,
   LocationFinderConnected,
-} from './slides';
-
-// Provides themed colors to Swiper dots
-const ThemedSwiper = withTheme(({ theme }) => ({
-  dotColor: theme.colors.background.inactive, // theme.colors.lightSecondary looks the best.
-  activeDotColor: theme.colors.action.primary,
-}))(({ swiperRef, ...props }) => <Swiper ref={swiperRef} {...props} />);
-
-class Onboarding extends Component {
-  static navigationOptions = () => ({
-    title: 'Onboarding',
-    header: null,
-  });
-
-  constructor() {
-    super();
+  OnboardingSwiper,
+} from '@apollosproject/ui-onboarding';
 
-    this.swiper = null;
-  }
+import { requestPushPermissions } from 'apolloschurchapp/src/notifications';
 
-  // Creates ref to Swiper to be passed as a prop to children.
-  setSwiperRef = (r) => {
-    this.swiper = r;
-
-    return this.swiper;
-  };
-
-  // Advance swiper 1 slide. See Swiper documentation for scrollBy details. https://github.com/leecade/react-native-swiper#methods
-  handleOnPressPrimary = () => this.swiper.scrollBy(1);
-
-  render() {
-    return (
-      <BackgroundView>
-        <ThemedSwiper
-          loop={false}
-          /* Disables swipe gestures. We currently we dont display a back button so this is our
-           * only back navigation option. */
-          // scrollEnabled={false}
-          showsButtons={false}
-          swiperRef={this.setSwiperRef}
-        >
-          <AskNameConnected onPressPrimary={this.handleOnPressPrimary} />
-          <Features
-            imgSrc={{ uri: 'https://picsum.photos/1200/1200?random' }}
-            onPressPrimary={this.handleOnPressPrimary}
+function Onboarding({ navigation }) {
+  return (
+    <OnboardingSwiper>
+      {({ swipeForward }) => (
+        <>
+          <AskNameConnected onPressPrimary={swipeForward} />
+          <FeaturesConnected
+            onPressPrimary={swipeForward}
+            BackgroundComponent={
+              <GradientOverlayImage
+                source={'https://picsum.photos/640/640/?random'}
+              />
+            }
           />
           <AboutYouConnected
-            imgSrc={{ uri: 'https://picsum.photos/1200/1200?random' }}
-            onPressPrimary={this.handleOnPressPrimary}
+            onPressPrimary={swipeForward}
+            BackgroundComponent={
+              <GradientOverlayImage
+                source={'https://picsum.photos/640/640/?random'}
+              />
+            }
           />
-          <LocationFinderConnected onPressPrimary={this.handleOnPressPrimary}>
-            <GradientOverlayImage
-              source={'https://picsum.photos/640/640/?random'}
-            />
-          </LocationFinderConnected>
-          <AskNotificationsConnected
-            onPressPrimary={() => this.props.navigation.navigate('Home')}
-            primaryNavText={'Finish'}
-          >
-            <GradientOverlayImage
-              source={'https://picsum.photos/640/640/?random'}
-            />
-          </AskNotificationsConnected>
-        </ThemedSwiper>
-      </BackgroundView>
-    );
-  }
+          <LocationFinderConnected
+            onPressPrimary={swipeForward}
+            onNavigate={() => {
+              navigation.navigate('Location', {
+                onFinished: swipeForward,
+              });
+            }}
+            BackgroundComponent={
+              <GradientOverlayImage
+                source={'https://picsum.photos/640/640/?random'}
+              />
+            }
+          />
+          <ApolloConsumer>
+            {(client) => (
+              <AskNotificationsConnected
+                onPressPrimary={() => navigation.navigate('Home')}
+                onRequestPushPermissions={() =>
+                  requestPushPermissions({ client })
+                }
+                primaryNavText={'Finish'}
+                BackgroundComponent={
+                  <GradientOverlayImage
+                    source={'https://picsum.photos/640/640/?random'}
+                  />
+                }
+              />
+            )}
+          </ApolloConsumer>
+        </>
+      )}
+    </OnboardingSwiper>
+  );
 }
 
+Onboarding.navigationOptions = {
+  title: 'Onboarding',
+  header: null,
+  gesturesEnabled: false,
+};
+
 export default Onboarding;
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/AboutYou/AboutYou.js b/apolloschurchapp/src/ui/Onboarding/slides/AboutYou/AboutYou.js
deleted file mode 100644
index 861c9d1..0000000
--- a/apolloschurchapp/src/ui/Onboarding/slides/AboutYou/AboutYou.js
+++ /dev/null
@@ -1,151 +0,0 @@
-import React, { memo } from 'react';
-import { Image, View } from 'react-native';
-import PropTypes from 'prop-types';
-import moment from 'moment';
-import { get } from 'lodash';
-
-import {
-  styled,
-  H2,
-  H5,
-  Radio,
-  RadioButton,
-  H6,
-  DateInput,
-  FlexedView,
-  PaddedView,
-} from '@apollosproject/ui-kit';
-
-import Slide from '../../Slide';
-
-const Content = styled({
-  justifyContent: 'center',
-})(FlexedView);
-
-const StyledImage = styled(({ theme }) => ({
-  flex: 2,
-  resizeMode: 'contain',
-  marginBottom: theme.sizing.baseUnit * 2,
-}))(Image);
-
-const TextContent = styled({
-  flex: 1,
-  justifyContent: 'center',
-})(PaddedView);
-
-const Title = styled(({ theme }) => ({
-  color: theme.colors.primary,
-  marginBottom: theme.sizing.baseUnit * 0.5,
-}))(H2);
-
-const Description = styled(({ theme }) => ({
-  color: theme.colors.text.secondary,
-  marginBottom: theme.sizing.baseUnit,
-}))(H5);
-
-const Label = styled({
-  color: 'gray',
-  opacity: 0.7,
-})(H6);
-
-const StyledDate = styled(({ theme }) => ({
-  marginTop: 0,
-  marginBottom: theme.sizing.baseUnit,
-}))(DateInput);
-
-const StyledRadio = styled(({ theme }) => ({
-  marginBottom: theme.sizing.baseUnit,
-  flexDirection: 'row',
-}))(Radio);
-
-const RadioLabel = styled(({ theme }) => ({
-  marginLeft: theme.sizing.baseUnit * 0.5,
-}))(H5);
-
-const AboutYou = memo(
-  ({
-    onPressPrimary,
-    imgSrc,
-    slideTitle,
-    description,
-    defaultDate,
-    genderList,
-    values,
-    touched,
-    errors,
-    setFieldValue,
-    ...props
-  }) => (
-    <Slide onPressPrimary={onPressPrimary} {...props}>
-      <Content>
-        {imgSrc ? <StyledImage source={imgSrc} /> : null}
-        <TextContent>
-          <Title>{slideTitle}</Title>
-          <Description>{description}</Description>
-          <View>
-            <Label>Gender</Label>
-            <StyledRadio
-              label="Gender"
-              type="radio"
-              value={get(values, 'gender')}
-              error={get(touched, 'gender') && get(errors, 'gender')}
-              onChange={(value) => setFieldValue('gender', value)}
-            >
-              {genderList.map((gender) => [
-                <RadioButton
-                  key={gender}
-                  value={gender}
-                  label={() => <RadioLabel>{gender}</RadioLabel>}
-                  underline={false}
-                />,
-              ])}
-            </StyledRadio>
-          </View>
-          <View>
-            <Label>Birthday</Label>
-            <StyledDate
-              type={'DateInput'}
-              placeholder={'Select a date...'}
-              value={moment
-                .utc(get(values, 'birthDate', defaultDate) || defaultDate)
-                .toDate()}
-              error={get(touched, 'birthDate') && get(errors, 'birthDate')}
-              displayValue={moment(
-                get(values, 'birthDate', defaultDate) || defaultDate
-              ).format('MM/DD/YYYY')}
-              onChange={(value) => setFieldValue('birthDate', value)}
-            />
-          </View>
-        </TextContent>
-      </Content>
-    </Slide>
-  )
-);
-
-AboutYou.propTypes = {
-  /* The `Swiper` component used in `<Onboading>` looks for and hijacks the title prop of it's
-   * children. Thus we have to use more unique name.
-   */
-  setFieldValue: PropTypes.func.isRequired,
-  slideTitle: PropTypes.string,
-  description: PropTypes.string,
-  imgSrc: Image.propTypes,
-  defaultDate: PropTypes.instanceOf(Date),
-  genderList: PropTypes.arrayOf(PropTypes.number),
-  values: PropTypes.shape({}),
-  touched: PropTypes.shape({}),
-  errors: PropTypes.shape({}),
-  onPressPrimary: PropTypes.func,
-};
-
-AboutYou.defaultProps = {
-  slideTitle: "This one's easy.",
-  description:
-    'Help us understand who you are so we can connect you with the best ministries and events.',
-  genderList: ['Male', 'Female'],
-  defaultDate: new Date(),
-};
-
-AboutYou.displayName = 'AboutYou';
-
-export default AboutYou;
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/AboutYou/AboutYou.stories.js b/apolloschurchapp/src/ui/Onboarding/slides/AboutYou/AboutYou.stories.js
deleted file mode 100644
index ac99a15..0000000
--- a/apolloschurchapp/src/ui/Onboarding/slides/AboutYou/AboutYou.stories.js
+++ /dev/null
@@ -1,34 +0,0 @@
-import React from 'react';
-import { storiesOf } from '@storybook/react-native';
-
-import AboutYou from '.';
-
-storiesOf('Onboarding/slides/AboutYou', module)
-  .add('default', () => <AboutYou />)
-  .add('withImg', () => (
-    <AboutYou
-      imgSrc={{ uri: 'https://picsum.photos/750/750?random' }}
-      setFieldValue={() => {}}
-    />
-  ))
-  .add('slideTitle', () => (
-    <AboutYou slideTitle={'Custom title text'} setFieldValue={() => {}} />
-  ))
-  .add('description', () => (
-    <AboutYou
-      description={'Custom description text'}
-      setFieldValue={() => {}}
-    />
-  ))
-  .add('genderList', () => (
-    <AboutYou genderList={['M', 'F']} setFieldValue={() => {}} />
-  ))
-  .add('values – birthDate', () => (
-    <AboutYou values={{ birthDate: '1989-02-14' }} setFieldValue={() => {}} />
-  ))
-  .add('values – gender', () => (
-    <AboutYou values={{ gender: 'Male' }} setFieldValue={() => {}} />
-  ))
-  .add('Slide props', () => (
-    <AboutYou onPressPrimary={() => {}} setFieldValue={() => {}} />
-  ));
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/AboutYou/AboutYou.tests.js b/apolloschurchapp/src/ui/Onboarding/slides/AboutYou/AboutYou.tests.js
deleted file mode 100644
index 6ae12d9..0000000
--- a/apolloschurchapp/src/ui/Onboarding/slides/AboutYou/AboutYou.tests.js
+++ /dev/null
@@ -1,126 +0,0 @@
-import React from 'react';
-import renderer from 'react-test-renderer';
-
-import Providers from 'apolloschurchapp/src/Providers';
-
-import AboutYou from '.';
-
-describe('The Onboarding AboutYou component', () => {
-  it('should render', () => {
-    /* we have to pass in a date via defaultDate or the DateInput component will create a current date
-     * object and invalidate the snapshots every time. */
-    const tree = renderer.create(
-      <Providers>
-        <AboutYou defaultDate={'2019-02-14'} setFieldValue={jest.fn()} />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render a custom image', () => {
-    /* we have to pass in a date via defaultDate or the DateInput component will create a current date
-     * object and invalidate the snapshots every time. */
-    const tree = renderer.create(
-      <Providers>
-        <AboutYou
-          imgSrc={{ uri: 'https://picsum.photos/1200/1200?random' }}
-          defaultDate={'2019-02-14'}
-          setFieldValue={jest.fn()}
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render a custom title', () => {
-    /* we have to pass in a date via defaultDate or the DateInput component will create a current date
-     * object and invalidate the snapshots every time. */
-    const tree = renderer.create(
-      <Providers>
-        <AboutYou
-          slideTitle={'Custom title text'}
-          defaultDate={'2019-02-14'}
-          setFieldValue={jest.fn()}
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render a custom description', () => {
-    /* we have to pass in a date via defaultDate or the DateInput component will create a current date
-     * object and invalidate the snapshots every time. */
-    const tree = renderer.create(
-      <Providers>
-        <AboutYou
-          description={'Custom description text'}
-          defaultDate={'2019-02-14'}
-          setFieldValue={jest.fn()}
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render a custom gender list', () => {
-    /* we have to pass in a date via defaultDate or the DateInput component will create a current date
-     * object and invalidate the snapshots every time. */
-    const tree = renderer.create(
-      <Providers>
-        <AboutYou
-          genderList={['M', 'F']}
-          defaultDate={'2019-02-14'}
-          setFieldValue={jest.fn()}
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render the selected gender', () => {
-    /* we have to pass in a date via defaultDate or the DateInput component will create a current date
-     * object and invalidate the snapshots every time. */
-    const tree = renderer.create(
-      <Providers>
-        <AboutYou
-          values={{ gender: 'Male' }}
-          defaultDate={'2019-02-14'}
-          setFieldValue={jest.fn()}
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render a custom date picker', () => {
-    const tree = renderer.create(
-      <Providers>
-        <AboutYou
-          values={{ birthDate: '1989-02-14' }}
-          setFieldValue={jest.fn()}
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render a custom date picker when the birth date is null', () => {
-    const tree = renderer.create(
-      <Providers>
-        <AboutYou
-          values={{ birthDate: null }}
-          setFieldValue={jest.fn()}
-          defaultDate={'2019-02-14'}
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should pass additional props to Slide', () => {
-    /* we have to pass in a date via defaultDate or the DateInput component will create a current date
-     * object and invalidate the snapshots every time. */
-    const tree = renderer.create(
-      <Providers>
-        <AboutYou
-          onPressPrimary={jest.fn()}
-          defaultDate={'2019-02-14'}
-          setFieldValue={jest.fn()}
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/AboutYou/AboutYouConnected.js b/apolloschurchapp/src/ui/Onboarding/slides/AboutYou/AboutYouConnected.js
deleted file mode 100644
index 85d0e52..0000000
--- a/apolloschurchapp/src/ui/Onboarding/slides/AboutYou/AboutYouConnected.js
+++ /dev/null
@@ -1,100 +0,0 @@
-import React, { memo } from 'react';
-import { Query, Mutation } from 'react-apollo';
-import { Formik } from 'formik';
-import * as Yup from 'yup';
-import PropTypes from 'prop-types';
-
-import getUserProfile from '../../../../tabs/connect/getUserProfile';
-import AboutYou from './AboutYou';
-
-import updateUserDetails from './updateUserDetails';
-
-// eslint-disable-next-line react/display-name
-const AboutYouConnected = memo(({ onPressPrimary, ...props }) => (
-  <Query query={getUserProfile}>
-    {({ data: { currentUser = { profile: {} } } = {} }) => {
-      const { gender, birthDate } = currentUser.profile;
-
-      return (
-        <Mutation
-          mutation={updateUserDetails}
-          update={async (cache, { data: { updateProfileFields } }) => {
-            await cache.writeQuery({
-              query: getUserProfile,
-              data: {
-                currentUser: {
-                  ...currentUser,
-                  profile: {
-                    ...currentUser.profile,
-                    gender: updateProfileFields.gender,
-                    birthDate: updateProfileFields.birthDate,
-                  },
-                },
-              },
-            });
-          }}
-        >
-          {(updateDetails) => (
-            <Formik
-              initialValues={{ gender, birthDate }}
-              validationSchema={Yup.object().shape({
-                gender: Yup.string().required('Gender is required!'),
-                birthDate: Yup.string().required('Birth Date is required!'),
-              })}
-              enableReinitialize
-              onSubmit={async (variables, { setSubmitting, setFieldError }) => {
-                try {
-                  await updateDetails({ variables });
-                } catch (e) {
-                  const { graphQLErrors } = e;
-                  if (
-                    graphQLErrors.length &&
-                    graphQLErrors.find(({ message }) =>
-                      message.includes('Invalid')
-                    )
-                  ) {
-                    setFieldError(
-                      'gender',
-                      'There was a problem sending your request'
-                    );
-                  } else {
-                    setFieldError(
-                      'gender',
-                      'Unknown error. Please try again later.'
-                    );
-                  }
-                }
-                setSubmitting(false);
-              }}
-            >
-              {({ submitForm, values, touched, errors, setFieldValue }) => {
-                const handleOnPressPrimary = () => {
-                  submitForm();
-                  onPressPrimary();
-                };
-                return (
-                  <AboutYou
-                    onPressPrimary={handleOnPressPrimary}
-                    gender={gender}
-                    birthDate={birthDate}
-                    values={values}
-                    touched={touched}
-                    errors={errors}
-                    setFieldValue={setFieldValue}
-                    {...props}
-                  />
-                );
-              }}
-            </Formik>
-          )}
-        </Mutation>
-      );
-    }}
-  </Query>
-));
-
-AboutYouConnected.propTypes = {
-  onPressPrimary: PropTypes.func,
-};
-
-export default AboutYouConnected;
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/AboutYou/AboutYouConnected.tests.js b/apolloschurchapp/src/ui/Onboarding/slides/AboutYou/AboutYouConnected.tests.js
deleted file mode 100644
index 8b0a837..0000000
--- a/apolloschurchapp/src/ui/Onboarding/slides/AboutYou/AboutYouConnected.tests.js
+++ /dev/null
@@ -1,60 +0,0 @@
-import React from 'react';
-import Providers from 'apolloschurchapp/src/Providers';
-
-import { renderWithApolloData } from 'apolloschurchapp/src/utils/testUtils';
-import getUserProfile from '../../../../tabs/connect/getUserProfile';
-import AboutYouConnected from './AboutYouConnected';
-
-describe('AboutYouConnected component', () => {
-  it('renders Gender and BirthDate when logged in', async () => {
-    const mock = {
-      request: {
-        query: getUserProfile,
-      },
-      result: {
-        data: {
-          currentUser: {
-            __typename: 'AuthenticatedUser',
-            id: 'AuthenticatedUser:123',
-            profile: {
-              __typename: 'Person',
-              gender: 'Male',
-              birthDate: '1980-02-10T00:00:00',
-              firstName: 'Isaac',
-              lastName: 'Hardy',
-              campus: {
-                __typename: 'Campus',
-                id: 'Campus:a0f64573eabf00a607bec911794d50fb',
-                name: 'Chicago Campus',
-                latitude: 42.09203,
-                longitude: -88.13289,
-                distanceFromLocation: null,
-                street1: '67 Algonquin Rd',
-                street2: '',
-                city: 'South Barrington',
-                state: 'IL',
-                postalCode: '60010-6143',
-                image: {
-                  __typename: 'ImageMediaSource',
-                  uri: 'https://picsum.photos/300/300/?random',
-                },
-              },
-              email: 'isaac.hardy@newspring.cc',
-              nickName: 'Batman',
-              photo: {
-                __typename: 'ImageMediaSource',
-                uri: 'https://some-uri.com/test.jpg',
-              },
-            },
-          },
-        },
-      },
-    };
-    const tree = await renderWithApolloData(
-      <Providers mocks={[mock]}>
-        <AboutYouConnected setFieldValue={jest.fn()} />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/AboutYou/index.js b/apolloschurchapp/src/ui/Onboarding/slides/AboutYou/index.js
deleted file mode 100644
index 6b9737d..0000000
--- a/apolloschurchapp/src/ui/Onboarding/slides/AboutYou/index.js
+++ /dev/null
@@ -1,4 +0,0 @@
-import AboutYou from './AboutYou';
-
-export AboutYouConnected from './AboutYouConnected';
-export default AboutYou;
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/AboutYou/updateUserDetails.js b/apolloschurchapp/src/ui/Onboarding/slides/AboutYou/updateUserDetails.js
deleted file mode 100644
index d5beb5e..0000000
--- a/apolloschurchapp/src/ui/Onboarding/slides/AboutYou/updateUserDetails.js
+++ /dev/null
@@ -1,16 +0,0 @@
-import gql from 'graphql-tag';
-
-export default gql`
-  mutation updateDetails($gender: String!, $birthDate: String!) {
-    updateProfileFields(
-      input: [
-        { field: Gender, value: $gender }
-        { field: BirthDate, value: $birthDate }
-      ]
-    ) {
-      gender
-      birthDate
-      id
-    }
-  }
-`;
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/AskName/AskName.js b/apolloschurchapp/src/ui/Onboarding/slides/AskName/AskName.js
deleted file mode 100644
index c96f158..0000000
--- a/apolloschurchapp/src/ui/Onboarding/slides/AskName/AskName.js
+++ /dev/null
@@ -1,113 +0,0 @@
-import React, { memo } from 'react';
-import PropTypes from 'prop-types';
-import { get } from 'lodash';
-
-import {
-  styled,
-  withTheme,
-  Icon,
-  H2,
-  H5,
-  PaddedView,
-  TextInput,
-} from '@apollosproject/ui-kit';
-
-import Slide from '../../Slide';
-
-const BrandIcon = withTheme(({ theme }) => ({
-  name: 'brand-icon',
-  size: theme.sizing.baseUnit * 3.0,
-  fill: theme.colors.primary,
-  style: {
-    marginTop: theme.sizing.baseUnit * 2,
-    marginBottom: theme.sizing.baseUnit * 0.5,
-  },
-}))(Icon);
-
-const Title = styled(({ theme }) => ({
-  color: theme.colors.primary,
-}))(H2);
-
-const StyledH5 = styled(({ theme }) => ({
-  color: theme.colors.text.secondary,
-}))(H5);
-
-// memo = sfc PureComponent 💥
-// eslint-disable-next-line react/display-name
-const AskName = memo(
-  ({
-    onPressPrimary,
-    slideTitle,
-    description,
-    firstName,
-    lastName,
-    values,
-    touched,
-    errors,
-    setFieldValue,
-    ...props
-  }) => {
-    let LastNameInput = null;
-
-    return (
-      <Slide onPressPrimary={onPressPrimary} {...props}>
-        <PaddedView vertical={false}>
-          <BrandIcon />
-          <Title>{slideTitle}</Title>
-          <StyledH5>{description}</StyledH5>
-          <TextInput
-            label={'First Name'}
-            type={'text'}
-            textContentType={'givenName'} // ios autofill
-            returnKeyType={'next'}
-            value={get(values, 'firstName')}
-            error={
-              get(touched, 'firstName', false) && get(errors, 'firstName', null)
-            }
-            onChangeText={(text) => setFieldValue('firstName', text)}
-            onSubmitEditing={() => LastNameInput.focus()}
-            enablesReturnKeyAutomatically
-          />
-          <TextInput
-            label={'Last Name'}
-            type={'text'}
-            textContentType={'familyName'} // ios autofill
-            returnKeyType={'next'}
-            value={get(values, 'lastName')}
-            error={
-              get(touched, 'lastName', false) && get(errors, 'lastName', null)
-            }
-            onChangeText={(text) => setFieldValue('lastName', text)}
-            onSubmitEditing={onPressPrimary}
-            enablesReturnKeyAutomatically
-            inputRef={(r) => {
-              LastNameInput = r;
-            }}
-          />
-        </PaddedView>
-      </Slide>
-    );
-  }
-);
-
-AskName.propTypes = {
-  /* The `Swiper` component used in `<Onboading>` looks for and hijacks the title prop of it's
-   * children. Thus we have to use more unique name.
-   */
-  setFieldValue: PropTypes.func.isRequired,
-  slideTitle: PropTypes.string,
-  description: PropTypes.string,
-  firstName: PropTypes.string,
-  lastName: PropTypes.string,
-  touched: PropTypes.shape({}),
-  errors: PropTypes.shape({}),
-  values: PropTypes.shape({}),
-  onPressPrimary: PropTypes.func,
-};
-
-AskName.defaultProps = {
-  slideTitle: 'Welcome!',
-  description: "Every relationship starts with a name. What's yours?",
-};
-
-export default AskName;
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/AskName/AskName.stories.js b/apolloschurchapp/src/ui/Onboarding/slides/AskName/AskName.stories.js
deleted file mode 100644
index ff00b90..0000000
--- a/apolloschurchapp/src/ui/Onboarding/slides/AskName/AskName.stories.js
+++ /dev/null
@@ -1,22 +0,0 @@
-import React from 'react';
-import { storiesOf } from '@storybook/react-native';
-
-import AskName from '.';
-
-storiesOf('Onboarding/slides/AskName', module)
-  .add('default', () => <AskName setFieldValue={() => {}} />)
-  .add('slideTitle', () => (
-    <AskName slideTitle={'Custom title text'} setFieldValue={() => {}} />
-  ))
-  .add('description', () => (
-    <AskName description={'Custom description text'} setFieldValue={() => {}} />
-  ))
-  .add('firstName and lastName', () => (
-    <AskName
-      values={{ firstName: 'Marty', lastName: 'McFly' }}
-      setFieldValue={() => {}}
-    />
-  ))
-  .add('SlideWrapper props', () => (
-    <AskName setFieldValue={() => {}} onPressPrimary={() => {}} />
-  ));
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/AskName/AskName.tests.js b/apolloschurchapp/src/ui/Onboarding/slides/AskName/AskName.tests.js
deleted file mode 100644
index 2e21540..0000000
--- a/apolloschurchapp/src/ui/Onboarding/slides/AskName/AskName.tests.js
+++ /dev/null
@@ -1,60 +0,0 @@
-import React from 'react';
-import renderer from 'react-test-renderer';
-
-import Providers from 'apolloschurchapp/src/Providers';
-
-import AskName from '.';
-
-describe('The Onboarding AskName component', () => {
-  it('should render', () => {
-    const tree = renderer.create(
-      <Providers>
-        <AskName setFieldValue={jest.fn()} />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render a custom title', () => {
-    const tree = renderer.create(
-      <Providers>
-        <AskName slideTitle={'Custom title text'} setFieldValue={jest.fn()} />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render a custom description', () => {
-    const tree = renderer.create(
-      <Providers>
-        <AskName
-          description={'Custom description text'}
-          setFieldValue={jest.fn()}
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should accept a firstName', () => {
-    const tree = renderer.create(
-      <Providers>
-        <AskName values={{ firstName: 'Marty' }} setFieldValue={jest.fn()} />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should accept a lastName', () => {
-    const tree = renderer.create(
-      <Providers>
-        <AskName values={{ lastName: 'McFly' }} setFieldValue={jest.fn()} />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should pass additional props to Slide component', () => {
-    const tree = renderer.create(
-      <Providers>
-        <AskName onPressPrimary={jest.fn()} setFieldValue={jest.fn()} />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/AskName/AskNameConnected.js b/apolloschurchapp/src/ui/Onboarding/slides/AskName/AskNameConnected.js
deleted file mode 100644
index 427421c..0000000
--- a/apolloschurchapp/src/ui/Onboarding/slides/AskName/AskNameConnected.js
+++ /dev/null
@@ -1,100 +0,0 @@
-import React, { memo } from 'react';
-import { Query, Mutation } from 'react-apollo';
-import { Formik } from 'formik';
-import * as Yup from 'yup';
-import PropTypes from 'prop-types';
-
-import getUserProfile from '../../../../tabs/connect/getUserProfile';
-import AskName from './AskName';
-
-import updateUserName from './updateUserName';
-
-// eslint-disable-next-line react/display-name
-const AskNameConnected = memo(({ onPressPrimary, ...props }) => (
-  <Query query={getUserProfile}>
-    {({ data: { currentUser = { profile: {} } } = {} }) => {
-      const { firstName, lastName } = currentUser.profile;
-      return (
-        <Mutation
-          mutation={updateUserName}
-          update={async (cache, { data: { updateProfileFields } }) => {
-            await cache.writeQuery({
-              query: getUserProfile,
-              data: {
-                currentUser: {
-                  ...currentUser,
-                  profile: {
-                    ...currentUser.profile,
-                    firstName: updateProfileFields.firstName,
-                    lastName: updateProfileFields.lastName,
-                  },
-                },
-              },
-            });
-          }}
-        >
-          {(updateName) => (
-            <Formik
-              initialValues={{ firstName, lastName }}
-              validationSchema={Yup.object().shape({
-                firstName: Yup.string().required('First Name is required!'),
-                lastName: Yup.string().required('Last Name is required!'),
-              })}
-              enableReinitialize
-              onSubmit={async (variables, { setSubmitting, setFieldError }) => {
-                try {
-                  await updateName({ variables });
-                } catch (e) {
-                  const { graphQLErrors } = e;
-                  if (
-                    graphQLErrors.length &&
-                    graphQLErrors.find(({ message }) =>
-                      message.includes('User already exists')
-                    )
-                  ) {
-                    setFieldError(
-                      'firstName',
-                      'There was a problem sending your request'
-                    );
-                  } else {
-                    setFieldError(
-                      'firstName',
-                      'Unknown error. Please try again later.'
-                    );
-                  }
-                }
-                setSubmitting(false);
-              }}
-            >
-              {({ submitForm, values, touched, errors, setFieldValue }) => {
-                const handleOnPressPrimary = () => {
-                  submitForm();
-                  onPressPrimary();
-                };
-
-                return (
-                  <AskName
-                    onPressPrimary={handleOnPressPrimary}
-                    firstName={firstName}
-                    lastName={lastName}
-                    values={values}
-                    touched={touched}
-                    errors={errors}
-                    setFieldValue={setFieldValue}
-                    {...props}
-                  />
-                );
-              }}
-            </Formik>
-          )}
-        </Mutation>
-      );
-    }}
-  </Query>
-));
-
-AskNameConnected.propTypes = {
-  onPressPrimary: PropTypes.func,
-};
-
-export default AskNameConnected;
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/AskName/AskNameConnected.tests.js b/apolloschurchapp/src/ui/Onboarding/slides/AskName/AskNameConnected.tests.js
deleted file mode 100644
index 03138c3..0000000
--- a/apolloschurchapp/src/ui/Onboarding/slides/AskName/AskNameConnected.tests.js
+++ /dev/null
@@ -1,36 +0,0 @@
-import React from 'react';
-import renderer from 'react-test-renderer';
-import wait from 'waait';
-
-import Providers from 'apolloschurchapp/src/Providers';
-
-import getUserProfile from '../../../../tabs/connect/getUserProfile';
-import AskNameConnected from './AskNameConnected';
-
-describe('PersonalDetails component', () => {
-  it('renders User Name when logged in', async () => {
-    const mock = {
-      request: {
-        query: getUserProfile,
-      },
-      result: {
-        data: {
-          currentUser: {
-            profile: {
-              firstName: 'Aaron',
-              lastName: 'Attendee',
-              nickName: 'A-Aron',
-            },
-          },
-        },
-      },
-    };
-    const tree = renderer.create(
-      <Providers mocks={[mock]}>
-        <AskNameConnected />
-      </Providers>
-    );
-    await wait(0); // wait for response from graphql
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/AskName/index.js b/apolloschurchapp/src/ui/Onboarding/slides/AskName/index.js
deleted file mode 100644
index 138f0e9..0000000
--- a/apolloschurchapp/src/ui/Onboarding/slides/AskName/index.js
+++ /dev/null
@@ -1,4 +0,0 @@
-import AskName from './AskName';
-
-export AskNameConnected from './AskNameConnected';
-export default AskName;
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/AskName/updateUserName.js b/apolloschurchapp/src/ui/Onboarding/slides/AskName/updateUserName.js
deleted file mode 100644
index 70c8d49..0000000
--- a/apolloschurchapp/src/ui/Onboarding/slides/AskName/updateUserName.js
+++ /dev/null
@@ -1,16 +0,0 @@
-import gql from 'graphql-tag';
-
-export default gql`
-  mutation updateName($firstName: String!, $lastName: String!) {
-    updateProfileFields(
-      input: [
-        { field: FirstName, value: $firstName }
-        { field: LastName, value: $lastName }
-      ]
-    ) {
-      firstName
-      lastName
-      id
-    }
-  }
-`;
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/AskNotifications/AskNotifications.js b/apolloschurchapp/src/ui/Onboarding/slides/AskNotifications/AskNotifications.js
deleted file mode 100644
index ae8d5fb..0000000
--- a/apolloschurchapp/src/ui/Onboarding/slides/AskNotifications/AskNotifications.js
+++ /dev/null
@@ -1,87 +0,0 @@
-import React, { memo } from 'react';
-import { View } from 'react-native';
-import PropTypes from 'prop-types';
-import {
-  PaddedView,
-  FlexedView,
-  styled,
-  H2,
-  H5,
-  Button,
-} from '@apollosproject/ui-kit';
-
-import Slide from '../../Slide';
-
-const ContentWrapper = styled({
-  height: '100%',
-})(View);
-
-const Content = styled({
-  justifyContent: 'flex-end',
-})(PaddedView);
-
-const Title = styled(({ theme }) => ({
-  color: theme.colors.primary,
-}))(H2);
-
-const StyledH5 = styled(({ theme }) => ({
-  color: theme.colors.text.secondary,
-  paddingBottom: theme.sizing.baseUnit * 1.5,
-}))(H5);
-
-// memo = sfc PureComponent 💥
-// eslint-disable-next-line react/display-name
-const AskNotifications = memo(
-  ({
-    children,
-    slideTitle,
-    description,
-    buttonText,
-    buttonDisabled,
-    onPressButton,
-    ...props
-  }) => (
-    <Slide {...props}>
-      <ContentWrapper>
-        <FlexedView>{children}</FlexedView>
-        <Content>
-          <Title>{slideTitle}</Title>
-          <StyledH5>{description}</StyledH5>
-          {buttonDisabled || onPressButton ? (
-            <Button
-              title={buttonText}
-              onPress={onPressButton}
-              disabled={buttonDisabled}
-              pill={false}
-            />
-          ) : null}
-        </Content>
-      </ContentWrapper>
-    </Slide>
-  )
-);
-
-AskNotifications.propTypes = {
-  /* The `Swiper` component used in `<onBoarding>` looks for and hijacks the title prop of it's
-   * children. Thus we have to use a more unique name.
-   */
-  children: PropTypes.oneOfType([
-    PropTypes.arrayOf(PropTypes.node),
-    PropTypes.node,
-  ]),
-  slideTitle: PropTypes.string,
-  description: PropTypes.string,
-  buttonText: PropTypes.string,
-  buttonDisabled: PropTypes.bool,
-  onPressButton: PropTypes.func,
-};
-
-AskNotifications.defaultProps = {
-  slideTitle: 'Can we keep you informed?',
-  description:
-    "We'll let you know when important things are happening and keep you in the loop",
-  buttonText: 'Yes, enable notifications',
-  buttonDisabled: false,
-};
-
-export default AskNotifications;
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/AskNotifications/AskNotifications.stories.js b/apolloschurchapp/src/ui/Onboarding/slides/AskNotifications/AskNotifications.stories.js
deleted file mode 100644
index 0506b87..0000000
--- a/apolloschurchapp/src/ui/Onboarding/slides/AskNotifications/AskNotifications.stories.js
+++ /dev/null
@@ -1,29 +0,0 @@
-import React from 'react';
-import { storiesOf } from '@storybook/react-native';
-import { GradientOverlayImage } from '@apollosproject/ui-kit';
-
-import AskNotifications from './AskNotifications';
-
-storiesOf('Onboarding/slides/AskNotifications', module)
-  .add('default', () => <AskNotifications />)
-  .add('children (image)', () => (
-    <AskNotifications>
-      <GradientOverlayImage source={'https://picsum.photos/640/640/?random'} />
-    </AskNotifications>
-  ))
-  .add('slideTitle', () => (
-    <AskNotifications slideTitle={'Custom title text'} />
-  ))
-  .add('description', () => (
-    <AskNotifications description={'Custom description text'} />
-  ))
-  .add('buttonDisabled', () => <AskNotifications buttonDisabled />)
-  .add('buttonText', () => (
-    <AskNotifications
-      onPressButton={() => {}}
-      buttonText={'Custom button text'}
-    />
-  ))
-  .add('SlideWrapper props', () => (
-    <AskNotifications onPressSecondary={() => {}} />
-  ));
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/AskNotifications/AskNotifications.tests.js b/apolloschurchapp/src/ui/Onboarding/slides/AskNotifications/AskNotifications.tests.js
deleted file mode 100644
index 1e411d8..0000000
--- a/apolloschurchapp/src/ui/Onboarding/slides/AskNotifications/AskNotifications.tests.js
+++ /dev/null
@@ -1,84 +0,0 @@
-import React from 'react';
-import renderer from 'react-test-renderer';
-import { GradientOverlayImage } from '@apollosproject/ui-kit';
-
-import Providers from 'apolloschurchapp/src/Providers';
-
-import AskNotifications from './AskNotifications';
-
-describe('The Onboarding AskNotifications component', () => {
-  it('should render', () => {
-    const tree = renderer.create(
-      <Providers>
-        <AskNotifications />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render children (image)', () => {
-    const tree = renderer.create(
-      <Providers>
-        <AskNotifications>
-          <GradientOverlayImage
-            source={'https://picsum.photos/640/640/?random'}
-          />
-        </AskNotifications>
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render a custom title', () => {
-    const tree = renderer.create(
-      <Providers>
-        <AskNotifications slideTitle={'Custom title text'} />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render a custom description', () => {
-    const tree = renderer.create(
-      <Providers>
-        <AskNotifications description={'Custom description text'} />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render with a button', () => {
-    const tree = renderer.create(
-      <Providers>
-        <AskNotifications onPressButton={jest.fn()} />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render the button disabled', () => {
-    const tree = renderer.create(
-      <Providers>
-        <AskNotifications onPressButton={jest.fn()} buttonDisabled />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render a button with custom text', () => {
-    const tree = renderer.create(
-      <Providers>
-        <AskNotifications
-          onPressButton={jest.fn()}
-          buttonText={'Custom button text'}
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should pass additional props to Slide component', () => {
-    const tree = renderer.create(
-      <Providers>
-        <AskNotifications
-          onPressSecondary={jest.fn()}
-          secondaryNavText={'Later'}
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/AskNotifications/AskNotificationsConnected.js b/apolloschurchapp/src/ui/Onboarding/slides/AskNotifications/AskNotificationsConnected.js
deleted file mode 100644
index cfd6df9..0000000
--- a/apolloschurchapp/src/ui/Onboarding/slides/AskNotifications/AskNotificationsConnected.js
+++ /dev/null
@@ -1,46 +0,0 @@
-import React, { memo } from 'react';
-import { Query, ApolloConsumer } from 'react-apollo';
-import PropTypes from 'prop-types';
-
-import {
-  requestPushPermissions,
-  getNotificationsEnabled,
-} from 'apolloschurchapp/src/notifications';
-
-import AskNotifications from '.';
-
-// eslint-disable-next-line react/display-name
-const AskNotificationsConnected = memo(
-  ({ onPressPrimary, onPressSecondary, ...props }) => (
-    <ApolloConsumer>
-      {(client) => (
-        <Query query={getNotificationsEnabled}>
-          {({ data: { notificationsEnabled = false } = {} }) => (
-            <AskNotifications
-              onPressButton={() => requestPushPermissions({ client })}
-              buttonDisabled={notificationsEnabled}
-              buttonText={
-                notificationsEnabled
-                  ? 'Notifications Enabled!'
-                  : 'Yes, enable notifications'
-              }
-              onPressPrimary={notificationsEnabled ? onPressPrimary : null} // if notifications are enabled show the primary nav button (next/finish)
-              onPressSecondary={
-                // if notifications are not enabled show the secondary nav button (skip)
-                notificationsEnabled ? null : onPressSecondary || onPressPrimary // if onPressSecondary exists use it else default onPressPrimary
-              }
-              {...props}
-            />
-          )}
-        </Query>
-      )}
-    </ApolloConsumer>
-  )
-);
-
-AskNotificationsConnected.propTypes = {
-  onPressPrimary: PropTypes.func,
-  onPressSecondary: PropTypes.func,
-};
-
-export default AskNotificationsConnected;
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/AskNotifications/AskNotificationsConnected.tests.js b/apolloschurchapp/src/ui/Onboarding/slides/AskNotifications/AskNotificationsConnected.tests.js
deleted file mode 100644
index 5751dee..0000000
--- a/apolloschurchapp/src/ui/Onboarding/slides/AskNotifications/AskNotificationsConnected.tests.js
+++ /dev/null
@@ -1,53 +0,0 @@
-import React from 'react';
-import renderer from 'react-test-renderer';
-import Providers from 'apolloschurchapp/src/Providers';
-import { getNotificationsEnabled } from 'apolloschurchapp/src/notifications';
-import { renderWithApolloData } from 'apolloschurchapp/src/utils/testUtils';
-
-import AskNotificationsConnected from './AskNotificationsConnected';
-
-describe('The Onboarding AskNotificationsConnected component', () => {
-  it('should render with a user not having granted push notifications permissions', async () => {
-    const mocks = [
-      {
-        request: {
-          query: getNotificationsEnabled,
-        },
-        result: {
-          data: { notificationsEnabled: false },
-        },
-      },
-    ];
-
-    const component = (
-      <Providers mocks={mocks} addTypename={false}>
-        <AskNotificationsConnected onPressPrimary={jest.fn()} />
-      </Providers>
-    );
-
-    const tree = await renderWithApolloData(component);
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render with a user having granted push notifications permissions', async () => {
-    const component = (
-      <Providers
-        resolvers={{ Query: { notificationsEnabled: Promise.resolve(true) } }}
-        addTypename={false}
-      >
-        <AskNotificationsConnected onPressPrimary={jest.fn()} />
-      </Providers>
-    );
-
-    const tree = await renderWithApolloData(component);
-    expect(tree).toMatchSnapshot();
-  });
-
-  it('should render with no data in the cache', () => {
-    const tree = renderer.create(
-      <Providers>
-        <AskNotificationsConnected />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/AskNotifications/index.js b/apolloschurchapp/src/ui/Onboarding/slides/AskNotifications/index.js
deleted file mode 100644
index 865e500..0000000
--- a/apolloschurchapp/src/ui/Onboarding/slides/AskNotifications/index.js
+++ /dev/null
@@ -1,4 +0,0 @@
-import AskNotifications from './AskNotifications';
-
-export AskNotificationsConnected from './AskNotificationsConnected';
-export default AskNotifications;
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/Features/Features.stories.js b/apolloschurchapp/src/ui/Onboarding/slides/Features/Features.stories.js
deleted file mode 100644
index dfe3aa8..0000000
--- a/apolloschurchapp/src/ui/Onboarding/slides/Features/Features.stories.js
+++ /dev/null
@@ -1,16 +0,0 @@
-import React from 'react';
-import { storiesOf } from '@storybook/react-native';
-
-import Features from '.';
-
-storiesOf('Onboarding/slides/Features', module)
-  .add('default', () => <Features />)
-  .add('withImg', () => (
-    <Features imgSrc={{ uri: 'https://picsum.photos/1200/1200?random' }} />
-  ))
-  .add('firstName', () => <Features firstName={'firstName'} />)
-  .add('slideTitle', () => <Features slideTitle={'Custom title text'} />)
-  .add('description', () => (
-    <Features description={'Custom description text'} />
-  ))
-  .add('Slide props', () => <Features onPressPrimary={() => {}} />);
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/Features/index.js b/apolloschurchapp/src/ui/Onboarding/slides/Features/index.js
deleted file mode 100644
index f07cb75..0000000
--- a/apolloschurchapp/src/ui/Onboarding/slides/Features/index.js
+++ /dev/null
@@ -1,62 +0,0 @@
-import React, { memo } from 'react';
-import { Image, View } from 'react-native';
-import PropTypes from 'prop-types';
-
-import { styled, H2, H5, PaddedView } from '@apollosproject/ui-kit';
-
-import Slide from '../../Slide';
-
-const Title = styled(({ theme }) => ({
-  color: theme.colors.primary,
-  marginBottom: theme.sizing.baseUnit * 0.5,
-}))(H2);
-
-const StyledH5 = styled(({ theme }) => ({
-  color: theme.colors.text.secondary,
-}))(H5);
-
-const StyledImage = styled(({ theme }) => ({
-  flex: 3,
-  resizeMode: 'contain',
-  marginBottom: theme.sizing.baseUnit,
-}))(Image);
-
-const Content = styled({
-  flex: 1,
-  justifyContent: 'center',
-})(View);
-
-const TextContent = styled({
-  flex: 1,
-  justifyContent: 'center',
-})(PaddedView);
-
-// eslint-disable-next-line react/display-name
-const Features = memo(({ firstName, description, imgSrc, ...props }) => (
-  <Slide {...props}>
-    <Content>
-      {imgSrc ? <StyledImage source={imgSrc} /> : null}
-      <TextContent>
-        <Title>{`Hey ${firstName}!`}</Title>
-        <StyledH5>{description}</StyledH5>
-      </TextContent>
-    </Content>
-  </Slide>
-));
-
-Features.propTypes = {
-  /* The `Swiper` component used in `<onBoarding>` looks for and hijacks the title prop of it's
-   * children. Thus we have to use more unique name.
-   */
-  firstName: PropTypes.string,
-  description: PropTypes.string,
-  imgSrc: PropTypes.string,
-};
-
-Features.defaultProps = {
-  firstName: 'friend',
-  description:
-    "We'd like to help personalize your mobile experience so we can help you with every step on your journey.",
-};
-
-export default Features;
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/LocationFinder/LocationFinder.js b/apolloschurchapp/src/ui/Onboarding/slides/LocationFinder/LocationFinder.js
deleted file mode 100644
index 7a07ab4..0000000
--- a/apolloschurchapp/src/ui/Onboarding/slides/LocationFinder/LocationFinder.js
+++ /dev/null
@@ -1,131 +0,0 @@
-import React, { memo } from 'react';
-import { View } from 'react-native';
-import PropTypes from 'prop-types';
-
-import {
-  PaddedView,
-  FlexedView,
-  styled,
-  H2,
-  H5,
-  Button,
-  Touchable,
-} from '@apollosproject/ui-kit';
-
-import CampusCard from 'apolloschurchapp/src/user-settings/Locations/CampusCard';
-import Slide from '../../Slide';
-
-const getCampusAddress = (campus) =>
-  `${campus.street1}\n${campus.city}, ${campus.state} ${campus.postalCode}`;
-
-const ContentWrapper = styled({
-  height: '100%',
-})(View);
-
-const Content = styled({
-  justifyContent: 'flex-end',
-})(PaddedView);
-
-const Title = styled(({ theme }) => ({
-  color: theme.colors.primary,
-}))(H2);
-
-const StyledH5 = styled(({ theme }) => ({
-  color: theme.colors.text.secondary,
-  paddingBottom: theme.sizing.baseUnit * 1.5,
-}))(H5);
-
-const StyledCampusCard = styled(({ theme }) => ({
-  marginHorizontal: theme.sizing.baseUnit,
-  marginBottom: theme.sizing.baseUnit,
-}))(CampusCard);
-
-// memo = sfc PureComponent 💥
-// eslint-disable-next-line react/display-name
-const LocationFinder = memo(
-  ({
-    onPressPrimary,
-    children,
-    slideTitle,
-    description,
-    buttonText,
-    buttonDisabled,
-    onPressButton,
-    isCurrentCampus,
-    campus,
-    ...props
-  }) => (
-    <Slide
-      onPressPrimary={
-        campus /* show the primary action button (next) if we have a campus */
-          ? onPressPrimary
-          : null
-      }
-      onPressSecondary={
-        !campus /* show the secondary action button (skip) if we don't have a campus */
-          ? onPressPrimary
-          : null
-      }
-      {...props}
-    >
-      <ContentWrapper>
-        <FlexedView>{children}</FlexedView>
-        <Content>
-          <Title>{slideTitle}</Title>
-          <StyledH5>{description}</StyledH5>
-        </Content>
-        {campus ? (
-          <Touchable onPress={onPressButton}>
-            <StyledCampusCard
-              key={campus.id}
-              distance={campus.distanceFromLocation}
-              title={campus.name}
-              description={getCampusAddress(campus)}
-              images={[campus.image]}
-            />
-          </Touchable>
-        ) : (
-          <Content>
-            <Button
-              title={buttonText}
-              onPress={onPressButton}
-              disabled={buttonDisabled}
-              pill={false}
-            />
-          </Content>
-        )}
-      </ContentWrapper>
-    </Slide>
-  )
-);
-
-LocationFinder.propTypes = {
-  /* The `Swiper` component used in `<Onboarding>` looks for and hijacks the title prop of it's
-   * children. Thus we have to use a more unique name.
-   */
-  onPressPrimary: PropTypes.func,
-  children: PropTypes.oneOfType([
-    PropTypes.arrayOf(PropTypes.node),
-    PropTypes.node,
-  ]),
-  slideTitle: PropTypes.string,
-  description: PropTypes.string,
-  buttonText: PropTypes.string,
-  buttonDisabled: PropTypes.bool,
-  onPressButton: PropTypes.func,
-  campus: PropTypes.oneOfType([
-    PropTypes.arrayOf(PropTypes.node),
-    PropTypes.node,
-  ]),
-  isCurrentCampus: PropTypes.bool,
-};
-
-LocationFinder.defaultProps = {
-  slideTitle: "Let's select your local campus",
-  description:
-    "We'll use your location to connect you with your nearby campus and community",
-  buttonText: 'Yes, find my local campus',
-  buttonDisabled: false,
-};
-
-export default LocationFinder;
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/LocationFinder/LocationFinder.stories.js b/apolloschurchapp/src/ui/Onboarding/slides/LocationFinder/LocationFinder.stories.js
deleted file mode 100644
index 97a6246..0000000
--- a/apolloschurchapp/src/ui/Onboarding/slides/LocationFinder/LocationFinder.stories.js
+++ /dev/null
@@ -1,46 +0,0 @@
-import React from 'react';
-import { storiesOf } from '@storybook/react-native';
-
-import { GradientOverlayImage } from '@apollosproject/ui-kit';
-
-import LocationFinder from './LocationFinder';
-
-storiesOf('Onboarding/slides/LocationFinder', module)
-  .add('default', () => <LocationFinder />)
-  .add('children (image)', () => (
-    <LocationFinder>
-      <GradientOverlayImage source={'https://picsum.photos/640/640/?random'} />
-    </LocationFinder>
-  ))
-  .add('slideTitle', () => <LocationFinder slideTitle={'Custom title text'} />)
-  .add('description', () => (
-    <LocationFinder description={'Custom description text'} />
-  ))
-  .add('campus', () => (
-    <LocationFinder
-      campus={{
-        id: 'Campus:a0f64573eabf00a607bec911794d50fb',
-        name: 'Lyon Estates',
-        latitude: 42.09203,
-        longitude: -88.13289,
-        distanceFromLocation: 88,
-        street1: '9303 Lyon Drive',
-        street2: '',
-        city: 'Hill Valley',
-        state: 'CA',
-        postalCode: '95420',
-        image: {
-          uri: 'https://picsum.photos/300/300/?random',
-        },
-      }}
-    />
-  ))
-  .add('buttonText', () => (
-    <LocationFinder
-      onPressButton={() => {}}
-      buttonText={'Custom button text'}
-    />
-  ))
-  .add('SlideWrapper props', () => (
-    <LocationFinder onPressSecondary={() => {}} />
-  ));
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/LocationFinder/LocationFinder.tests.js b/apolloschurchapp/src/ui/Onboarding/slides/LocationFinder/LocationFinder.tests.js
deleted file mode 100644
index d1a8341..0000000
--- a/apolloschurchapp/src/ui/Onboarding/slides/LocationFinder/LocationFinder.tests.js
+++ /dev/null
@@ -1,104 +0,0 @@
-import React from 'react';
-import renderer from 'react-test-renderer';
-
-import { GradientOverlayImage } from '@apollosproject/ui-kit';
-import Providers from 'apolloschurchapp/src/Providers';
-
-import LocationFinder from './LocationFinder';
-
-const campus = {
-  id: 'Campus:a0f64573eabf00a607bec911794d50fb',
-  name: 'Chicago Campus',
-  latitude: 42.09203,
-  longitude: -88.13289,
-  distanceFromLocation: null,
-  street1: '67 Algonquin Rd',
-  street2: '',
-  city: 'South Barrington',
-  state: 'IL',
-  postalCode: '60010-6143',
-  image: {
-    uri: 'https://picsum.photos/300/300/?random',
-  },
-};
-
-describe('The Onboarding LocationFinder component', () => {
-  it('should render', () => {
-    const tree = renderer.create(
-      <Providers>
-        <LocationFinder />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render children (image)', () => {
-    const tree = renderer.create(
-      <Providers>
-        <LocationFinder>
-          <GradientOverlayImage
-            source={'https://picsum.photos/640/640/?random'}
-          />
-        </LocationFinder>
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render a custom title', () => {
-    const tree = renderer.create(
-      <Providers>
-        <LocationFinder slideTitle={'Custom title text'} />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render a custom description', () => {
-    const tree = renderer.create(
-      <Providers>
-        <LocationFinder description={'Custom description text'} />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render with a button', () => {
-    const tree = renderer.create(
-      <Providers>
-        <LocationFinder onPressButton={jest.fn()} />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render the button disabled', () => {
-    const tree = renderer.create(
-      <Providers>
-        <LocationFinder
-          onPressButton={jest.fn()}
-          buttonDisabled
-          campus={campus}
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render a button with custom text', () => {
-    const tree = renderer.create(
-      <Providers>
-        <LocationFinder
-          onPressButton={jest.fn()}
-          buttonText={'Custom button text'}
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should pass additional props to Slide component', () => {
-    const tree = renderer.create(
-      <Providers>
-        <LocationFinder
-          onPressSecondary={jest.fn()}
-          secondaryNavText={'Later'}
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/LocationFinder/LocationFinderConnected.js b/apolloschurchapp/src/ui/Onboarding/slides/LocationFinder/LocationFinderConnected.js
deleted file mode 100644
index b02c212..0000000
--- a/apolloschurchapp/src/ui/Onboarding/slides/LocationFinder/LocationFinderConnected.js
+++ /dev/null
@@ -1,47 +0,0 @@
-import React, { PureComponent } from 'react';
-import PropTypes from 'prop-types';
-import { Query } from 'react-apollo';
-import { withNavigation } from 'react-navigation';
-import getUserCampus from './getUserCampus';
-import LocationFinder from '.';
-
-class LocationFinderConnected extends PureComponent {
-  state = { selectedCampus: false };
-
-  render() {
-    return (
-      <Query query={getUserCampus} fetchPolicy="cache-and-network">
-        {({
-          data: {
-            currentUser: {
-              profile: { campus } = {
-                campus: {},
-              },
-            } = {},
-          } = {},
-        }) => (
-          <LocationFinder
-            onPressButton={async () => {
-              this.setState({ selectedCampus: true });
-              this.props.navigation.navigate('LocationFinderMapView', {
-                onFinished: this.props.onPressPrimary,
-              });
-            }}
-            buttonText={'Yes, find my local campus'}
-            campus={this.state.selectedCampus ? campus : null}
-            onPressPrimary={this.props.onPressPrimary}
-            {...this.props}
-          />
-        )}
-      </Query>
-    );
-  }
-}
-
-LocationFinderConnected.propTypes = {
-  onPressPrimary: PropTypes.func.isRequired,
-};
-
-LocationFinderConnected.displayName = 'LocationFinderConnected';
-
-export default withNavigation(LocationFinderConnected);
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/LocationFinder/LocationFinderConnected.tests.js b/apolloschurchapp/src/ui/Onboarding/slides/LocationFinder/LocationFinderConnected.tests.js
deleted file mode 100644
index 7b2cec6..0000000
--- a/apolloschurchapp/src/ui/Onboarding/slides/LocationFinder/LocationFinderConnected.tests.js
+++ /dev/null
@@ -1,81 +0,0 @@
-import React from 'react';
-import renderer from 'react-test-renderer';
-import Providers from 'apolloschurchapp/src/Providers';
-import { renderWithApolloData } from 'apolloschurchapp/src/utils/testUtils';
-
-import LocationFinderConnected from './LocationFinderConnected';
-import getUserCampus from './getUserCampus';
-
-const navigation = { navigate: jest.fn() };
-describe('The Onboarding LocationFinderConnected component', () => {
-  it('should render with a user not having a campus selected', async () => {
-    const mocks = [
-      {
-        request: {
-          query: getUserCampus,
-        },
-        result: {
-          data: { campus: null },
-        },
-      },
-    ];
-
-    const component = (
-      <Providers mocks={mocks} addTypename={false}>
-        <LocationFinderConnected navigation={navigation} />
-      </Providers>
-    );
-
-    const tree = await renderWithApolloData(component);
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render with a user having selected a campus', async () => {
-    const mocks = [
-      {
-        request: {
-          query: getUserCampus,
-        },
-        result: {
-          data: {
-            campus: {
-              campus: {
-                id: 'Campus:a0f64573eabf00a607bec911794d50fb',
-                name: 'Chicago Campus',
-                latitude: 42.09203,
-                longitude: -88.13289,
-                distanceFromLocation: null,
-                street1: '67 Algonquin Rd',
-                street2: '',
-                city: 'South Barrington',
-                state: 'IL',
-                postalCode: '60010-6143',
-                image: {
-                  uri:
-                    'https://res.cloudinary.com/apollos/image/fetch/c_limit,f_auto,w_1600/https://apollosrock.newspring.cc/GetImage.ashx%3Fguid%3Dede1fb83-968e-4bef-8d77-ad81c96e8a47',
-                },
-              },
-            },
-          },
-        },
-      },
-    ];
-
-    const component = (
-      <Providers mocks={mocks} addTypename={false}>
-        <LocationFinderConnected navigation={navigation} />
-      </Providers>
-    );
-
-    const tree = await renderWithApolloData(component);
-    expect(tree).toMatchSnapshot();
-  });
-
-  it('should render with no data in the cache', () => {
-    const tree = renderer.create(
-      <Providers>
-        <LocationFinderConnected navigation={navigation} />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/LocationFinder/LocationFinderMapView.js b/apolloschurchapp/src/ui/Onboarding/slides/LocationFinder/LocationFinderMapView.js
deleted file mode 100644
index 3534353..0000000
--- a/apolloschurchapp/src/ui/Onboarding/slides/LocationFinder/LocationFinderMapView.js
+++ /dev/null
@@ -1,27 +0,0 @@
-import React, { PureComponent } from 'react';
-import PropTypes from 'prop-types';
-
-import MapView from 'apolloschurchapp/src/user-settings/Locations';
-
-class LocationFinderMapView extends PureComponent {
-  static propTypes = {
-    navigation: PropTypes.shape({
-      getParam: PropTypes.func,
-      navigate: PropTypes.func,
-      goBack: PropTypes.func,
-    }),
-  };
-
-  static navigationOptions = () => ({
-    title: 'LocationFinderMapView',
-    header: null,
-  });
-
-  render() {
-    const { navigation } = this.props;
-    const onFinished = this.props.navigation.getParam('onFinished');
-    return <MapView navigation={navigation} onFinished={onFinished} />;
-  }
-}
-
-export default LocationFinderMapView;
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/LocationFinder/getUserCampus.js b/apolloschurchapp/src/ui/Onboarding/slides/LocationFinder/getUserCampus.js
deleted file mode 100644
index 7d5816a..0000000
--- a/apolloschurchapp/src/ui/Onboarding/slides/LocationFinder/getUserCampus.js
+++ /dev/null
@@ -1,16 +0,0 @@
-import gql from 'graphql-tag';
-import CampusParts from 'apolloschurchapp/src/user-settings/Locations/campusFragment';
-
-export default gql`
-  query getCurrentCampus {
-    currentUser {
-      id
-      profile {
-        campus {
-          ...CampusParts
-        }
-      }
-    }
-  }
-  ${CampusParts}
-`;
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/LocationFinder/index.js b/apolloschurchapp/src/ui/Onboarding/slides/LocationFinder/index.js
deleted file mode 100644
index 5693639..0000000
--- a/apolloschurchapp/src/ui/Onboarding/slides/LocationFinder/index.js
+++ /dev/null
@@ -1,5 +0,0 @@
-import LocationFinder from './LocationFinder';
-
-export LocationFinderConnected from './LocationFinderConnected';
-export LocationFinderMapView from './LocationFinderMapView';
-export default LocationFinder;
diff --git a/apolloschurchapp/src/ui/Onboarding/slides/index.js b/apolloschurchapp/src/ui/Onboarding/slides/index.js
deleted file mode 100644
index 36d93c7..0000000
--- a/apolloschurchapp/src/ui/Onboarding/slides/index.js
+++ /dev/null
@@ -1,10 +0,0 @@
-export AboutYou, { AboutYouConnected } from './AboutYou';
-export AskName, { AskNameConnected } from './AskName';
-export AskNotifications, {
-  AskNotificationsConnected,
-} from './AskNotifications';
-export LocationFinder, {
-  LocationFinderConnected,
-  LocationFinderMapView,
-} from './LocationFinder';
-export Features from './Features';
diff --git a/apolloschurchapp/src/ui/Splash/Splash.stories.js b/apolloschurchapp/src/ui/Splash/Splash.stories.js
deleted file mode 100644
index a39677a..0000000
--- a/apolloschurchapp/src/ui/Splash/Splash.stories.js
+++ /dev/null
@@ -1,20 +0,0 @@
-import React from 'react';
-import { storiesOf } from '@storybook/react-native';
-
-import Splash from '.';
-
-storiesOf('Splash', module)
-  .add('default', () => <Splash />)
-  .add('imgSrc & !isLight', () => (
-    <Splash
-      imgSrc={{
-        uri: 'https://picsum.photos/1200/1200?random',
-        height: 1200,
-        width: 1200,
-      }}
-      isLight={false}
-    />
-  ))
-  .add('slideTitle', () => <Splash slideTitle={'Custom title text'} />)
-  .add('description', () => <Splash description={'Custom description text'} />)
-  .add('Slide props', () => <Splash onPressPrimary={() => {}} />);
diff --git a/apolloschurchapp/src/ui/Splash/Splash.tests.js b/apolloschurchapp/src/ui/Splash/Splash.tests.js
deleted file mode 100644
index 2fa2cdd..0000000
--- a/apolloschurchapp/src/ui/Splash/Splash.tests.js
+++ /dev/null
@@ -1,56 +0,0 @@
-import React from 'react';
-import renderer from 'react-test-renderer';
-
-import Providers from 'apolloschurchapp/src/Providers';
-
-import Splash from '.';
-
-describe('The Onboarding Splash component', () => {
-  it('should render', () => {
-    const tree = renderer.create(
-      <Providers>
-        <Splash />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render light text on a dark background', () => {
-    const tree = renderer.create(
-      <Providers>
-        <Splash
-          imgSrc={{
-            uri: 'https://picsum.photos/1200/1200?random',
-            height: 1200,
-            width: 1200,
-          }}
-          isLight={false}
-        />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render a custom title', () => {
-    const tree = renderer.create(
-      <Providers>
-        <Splash slideTitle={'Custom title text'} />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should render a custom description', () => {
-    const tree = renderer.create(
-      <Providers>
-        <Splash description={'Custom description text'} />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-  it('should pass additional props to Slide', () => {
-    const tree = renderer.create(
-      <Providers>
-        <Splash onPressPrimary={jest.fn()} />
-      </Providers>
-    );
-    expect(tree).toMatchSnapshot();
-  });
-});
diff --git a/apolloschurchapp/src/ui/Splash/index.js b/apolloschurchapp/src/ui/Splash/index.js
deleted file mode 100644
index 7e9f6ff..0000000
--- a/apolloschurchapp/src/ui/Splash/index.js
+++ /dev/null
@@ -1,75 +0,0 @@
-import React, { memo } from 'react';
-import { Image } from 'react-native';
-import PropTypes from 'prop-types';
-
-import {
-  styled,
-  withTheme,
-  Icon,
-  H1,
-  H4,
-  PaddedView,
-} from '@apollosproject/ui-kit';
-
-import Slide from '../Onboarding/Slide';
-
-const Content = styled({
-  flex: 1,
-  justifyContent: 'center',
-})(PaddedView);
-
-const BrandIcon = withTheme(({ theme, isLight }) => ({
-  name: 'brand-icon',
-  size: theme.sizing.baseUnit * 3.0,
-  fill: isLight ? theme.colors.text.primary : theme.colors.white,
-  style: {
-    marginBottom: theme.sizing.baseUnit,
-  },
-}))(Icon);
-
-const Title = styled(({ theme, isLight }) => ({
-  color: isLight ? theme.colors.text.primary : theme.colors.white,
-  marginBottom: theme.sizing.baseUnit * 2,
-}))(H1);
-
-const CoverImage = styled({
-  resizeMode: 'cover',
-  position: 'absolute',
-})(Image);
-
-const StyledH4 = styled(({ theme, isLight }) => ({
-  color: isLight ? theme.colors.text.primary : theme.colors.white,
-}))(H4);
-
-// eslint-disable-next-line react/display-name
-const Splash = memo(
-  ({ slideTitle, description, imgSrc, isLight, ...props }) => (
-    <Slide {...props}>
-      {imgSrc ? <CoverImage source={imgSrc} /> : null}
-      <Content>
-        <BrandIcon isLight={isLight} />
-        <Title isLight={isLight}>{slideTitle}</Title>
-        <StyledH4 isLight={isLight}>{description}</StyledH4>
-      </Content>
-    </Slide>
-  )
-);
-
-Splash.propTypes = {
-  /* The `Swiper` component used in `<onBoarding>` looks for and hijacks the title prop of it's
-   * children. Thus we have to use more unique name.
-   */
-  slideTitle: PropTypes.string,
-  description: PropTypes.string,
-  imgSrc: PropTypes.string,
-  isLight: PropTypes.boolean,
-};
-
-Splash.defaultProps = {
-  slideTitle: "We're glad you're here.".toUpperCase(),
-  description:
-    "We're not just a building you go to, but a family to belong to.",
-  isLight: true,
-};
-
-export default Splash;
diff --git a/apolloschurchapp/src/ui/UserAvatarView/AvatarForm.js b/apolloschurchapp/src/ui/UserAvatarView/AvatarForm.js
index 684344a..f4a46fe 100644
--- a/apolloschurchapp/src/ui/UserAvatarView/AvatarForm.js
+++ b/apolloschurchapp/src/ui/UserAvatarView/AvatarForm.js
@@ -28,11 +28,9 @@ GetPhotoData.propTypes = {
   children: PropTypes.func.isRequired,
 };
 
-const StyledAvatar = withTheme(({ theme }) => ({
-  containerStyle: {
-    marginRight: 0,
-    marginBottom: theme.sizing.baseUnit / 2,
-  },
+const StyledAvatar = styled(({ theme }) => ({
+  marginRight: 0,
+  marginBottom: theme.sizing.baseUnit / 2,
 }))(Avatar);
 
 const RoundTouchable = withTheme(({ theme, size }) => ({
diff --git a/apolloschurchapp/src/ui/UserAvatarView/index.js b/apolloschurchapp/src/ui/UserAvatarView/index.js
index 51dd27b..d18a809 100644
--- a/apolloschurchapp/src/ui/UserAvatarView/index.js
+++ b/apolloschurchapp/src/ui/UserAvatarView/index.js
@@ -41,7 +41,9 @@ const UserAvatarView = withIsLoading(
         <H3>
           {firstName} {lastName}
         </H3>
-        <ChannelLabel icon="pin" label={location || ''} isLoading={isLoading} />
+        {location && (
+          <ChannelLabel icon="pin" label={location} isLoading={isLoading} />
+        )}
       </Content>
     </Container>
   )
diff --git a/apolloschurchapp/src/ui/WebBrowser/Browser.android.js b/apolloschurchapp/src/ui/WebBrowser/Browser.android.js
index 49dc211..cc7d39d 100644
--- a/apolloschurchapp/src/ui/WebBrowser/Browser.android.js
+++ b/apolloschurchapp/src/ui/WebBrowser/Browser.android.js
@@ -1,14 +1,9 @@
 import { Linking } from 'react-native';
-import { CustomTabs } from 'react-native-custom-tabs';
 
 const Browser = {
-  openURL: async (url, options = {}) => {
-    try {
-      await CustomTabs.openURL(url, options);
-    } catch (e) {
-      if (!Linking.canOpenURL()) throw new Error('URL not supported');
-      Linking.openURL(url);
-    }
+  openURL: async (url) => {
+    if (!Linking.canOpenURL(url)) throw new Error('URL not supported');
+    Linking.openURL(url);
   },
 };
 
diff --git a/apolloschurchapp/src/ui/WebBrowser/Browser.ios.js b/apolloschurchapp/src/ui/WebBrowser/Browser.ios.js
index 7de160f..0716bff 100644
--- a/apolloschurchapp/src/ui/WebBrowser/Browser.ios.js
+++ b/apolloschurchapp/src/ui/WebBrowser/Browser.ios.js
@@ -10,7 +10,7 @@ const Browser = {
         ...options,
       });
     } catch (e) {
-      if (!Linking.canOpenURL()) throw new Error('URL not supported');
+      if (!Linking.canOpenURL(url)) throw new Error('URL not supported');
       Linking.openURL(url);
     }
   },
diff --git a/apolloschurchapp/src/user-settings/Locations/CampusCard.js b/apolloschurchapp/src/user-settings/Locations/CampusCard.js
deleted file mode 100644
index d0af97d..0000000
--- a/apolloschurchapp/src/user-settings/Locations/CampusCard.js
+++ /dev/null
@@ -1,92 +0,0 @@
-import React from 'react';
-import PropTypes from 'prop-types';
-import { compose, pure } from 'recompose';
-import { Dimensions, View } from 'react-native';
-
-import {
-  Card,
-  ConnectedImage,
-  SideBySideView,
-  withIsLoading,
-  styled,
-  CardContent,
-  H5,
-  H6,
-} from '@apollosproject/ui-kit';
-
-const { width } = Dimensions.get('window');
-
-/* TODO: remove magic number. `theme.sizing.baseUnit * 2.25` This width value is a brittle
- * calculation of width minus `CampusCard` margins */
-export const CARD_WIDTH = width - 36;
-
-const enhance = compose(
-  withIsLoading,
-  pure
-);
-
-const HorizontalLayout = styled({
-  alignItems: 'center',
-})(SideBySideView);
-
-const HorizontalTextLayout = styled(({ theme }) => ({
-  height: theme.helpers.verticalRhythm(0.875),
-}))(SideBySideView);
-
-const RightColumn = styled(({ theme }) => ({
-  paddingVertical: theme.sizing.baseUnit * 0.85,
-  flex: 1,
-}))(CardContent);
-
-const CampusImage = styled({
-  aspectRatio: 1,
-  height: '100%',
-  alignSelf: 'stretch',
-  resizeMode: 'cover', // This is to make sure images smaller than the ProgressiveImage size will cover
-})(ConnectedImage);
-
-const CampusImageSizer = styled({
-  aspectRatio: 1,
-  height: '100%',
-  alignSelf: 'stretch',
-})(View);
-
-const StyledCard = styled(({ theme }) => ({
-  width: CARD_WIDTH,
-  height: theme.sizing.baseUnit * 6,
-  marginHorizontal: theme.sizing.baseUnit / 4,
-}))(Card);
-
-const CampusCard = enhance(
-  ({ title, description, distance, images, isLoading, ...otherProps }) => (
-    <StyledCard isLoading={isLoading} inHorizontalList {...otherProps}>
-      <HorizontalLayout>
-        {images ? (
-          <CampusImageSizer>
-            <CampusImage source={images} />
-          </CampusImageSizer>
-        ) : null}
-        <RightColumn>
-          <HorizontalTextLayout>
-            <H5>{title}</H5>
-            <H6>
-              {Math.round(distance)}
-              mi
-            </H6>
-          </HorizontalTextLayout>
-          {description ? <H6>{description}</H6> : null}
-        </RightColumn>
-      </HorizontalLayout>
-    </StyledCard>
-  )
-);
-
-CampusCard.propTypes = {
-  title: PropTypes.string.isRequired,
-  description: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),
-  images: PropTypes.any, // eslint-disable-line
-  category: PropTypes.string,
-  isLoading: PropTypes.bool,
-};
-
-export default CampusCard;
diff --git a/apolloschurchapp/src/user-settings/Locations/MapView.js b/apolloschurchapp/src/user-settings/Locations/MapView.js
index ededd53..b38e1d5 100644
--- a/apolloschurchapp/src/user-settings/Locations/MapView.js
+++ b/apolloschurchapp/src/user-settings/Locations/MapView.js
@@ -5,11 +5,18 @@ import SafeAreaView from 'react-native-safe-area-view';
 import RNMapView from 'react-native-maps';
 import { debounce } from 'lodash';
 
-import { Button, PaddedView, styled, withTheme } from '@apollosproject/ui-kit';
+import {
+  Button,
+  PaddedView,
+  styled,
+  withTheme,
+  CampusCard,
+} from '@apollosproject/ui-kit';
 
-import CampusCard, { CARD_WIDTH } from './CampusCard';
 import Marker from './Marker';
 
+const { CARD_WIDTH } = CampusCard;
+
 const ContainerView = styled({
   flex: 1,
 })(View);
diff --git a/apolloschurchapp/src/user-settings/Locations/index.js b/apolloschurchapp/src/user-settings/Locations/index.js
index b4c03b8..f8517c3 100644
--- a/apolloschurchapp/src/user-settings/Locations/index.js
+++ b/apolloschurchapp/src/user-settings/Locations/index.js
@@ -79,6 +79,12 @@ class Location extends PureComponent {
 
   render() {
     const { navigation, onFinished } = this.props;
+    // we should use the `onFinished` from the navigation param, if it exists.
+    const handleFinished = this.props.navigation.getParam(
+      'onFinished',
+      onFinished
+    );
+
     return (
       <Query
         query={getAllCampuses}
@@ -126,7 +132,7 @@ class Location extends PureComponent {
                     },
                   });
                   await navigation.goBack();
-                  if (onFinished) onFinished();
+                  if (handleFinished) handleFinished();
                 }}
               />
             )}
